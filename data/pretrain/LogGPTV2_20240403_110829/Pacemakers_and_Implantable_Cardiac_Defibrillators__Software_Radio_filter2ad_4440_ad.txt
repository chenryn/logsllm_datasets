to replay traces in which the programmer changes the patient
name stored on the ICD. After ten (on average) replays of
the same trace, more than one of which may have succeeded,
we used the programmer to conﬁrm that we had successfully
changed the patient name stored on the ICD. We repeated this
experiment several times, each time changing the name to a
different value and conﬁrming the change on the programmer.
Setting the ICD’s clock. The ICD programmer and the ICD
have separate clocks. The ICD’s clock allows it to record
timestamps in its event log and can be set from a menu on
the programmer. We used GNU Radio to replay traces in
which the programmer sets the time or date on the ICD. We
then conﬁrmed in a new programming session that we had
successfully set the ICD’s clock. As with the patient name
change, this attack succeeded after an average of ten replays,
more than one of which may have succeeded.
Changing therapies. Therapies are the ICD’s responses to
cardiac events. A commercial programmer can be used to
enable and personalize therapies for an individual patient’s
medical needs or to disable (i.e., turn off) the device’s life-
saving functions. We used GNU Radio to replay captures
in which the programmer turns off therapies. With therapies
turned off, the ICD does not respond to potentially dangerous
cardiac conditions. After 24 replay attempts, more than one
of which may have succeeded, we conﬁrmed in a new pro-
gramming session that we had successfully disabled all of the
therapies we had enabled before our attempts.
Inducing ﬁbrillation. During implantation surgery, it is com-
mon for a physician to test
the newly implanted ICD to
ensure that it can both sense and appropriately treat a cardiac
condition known as ventricular ﬁbrillation (V-Fib), one of the
most common kinds of heart rhythm problems. Accordingly,
the ICD has several testing modes in which it can induce V-
Fib. Such a test — called an electrophysiological (EP) study
— is normally conducted with cardiologists standing by to
stop the ﬁbrillation if the ICD fails to do so. After a physician
puts the programmer in EP study mode, sets certain study
parameters, and explicitly conﬁrms that the study should begin,
the programmer sends the ICD a sequence of commands that
137
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 03:12:46 UTC from IEEE Xplore.  Restrictions apply. 
Software Radiogr.usrp_source_cFM demodulatorgr.blks.fm_demod_cfDifferential (NRZI) decodergr.diff_decode_bbBinary Slicergr.binary_slicer_fbProgrammerpacket sinkimd.sink_175requests a low-energy (∼1 joule) command shock to be applied
to the patient’s heart at a precise point in the patient’s cardiac
rhythm, with the goal of inducing V-Fib. When its automatic
therapies are enabled, the ICD should immediately detect and
treat the ﬁbrillation by delivering the proper therapy.
We introduced a 100 Ω resistor between two of the ICD’s la-
beled deﬁbrillation ports to measure the voltage applied during
a command shock. We then used our commercial programmer
to conduct an EP study in which we sent a 1.0 J shock from
one deﬁbrillation port to the other across the resistor. Using
our oscilloscope, we measured the pulse’s peak voltage at
an average of 138.4 V over three trials. We then replayed
a recording of the EP study command sequence via our
software radio. At least three of 30 replay attempts succeeded
in causing similar voltage spikes, averaging 137.7 V. Besides
observing voltage spikes on the oscilloscope, we conﬁrmed
that the ICD’s last high-voltage therapy ﬁeld, shown in a
programmer menu, changed to reﬂect the date and time of
our last successful attack. We successfully triggered command
shocks via replayed commands even after turning off all of the
ICD’s automatic therapies.
The commercial programmer’s user interface provides safe-
guards to make it difﬁcult for a physician to accidentally issue
a command shock when the ICD’s therapies are disabled.
Our successful replay attacks demonstrate that although these
safeguards are implemented in the programmer’s software, an
adversary who bypasses the commercial programmer using
a software radio could circumvent
these safeguards. The
broader lesson is that external devices such as commercial
programmers should not be considered part of an IMD’s
trusted computing base. Additionally, we argue that if any
IMD exhibits a test procedure T for some property P , and
if there are no medical reasons for conducting procedure T
other than testing property P , then it should be impossible to
trigger T unless P is enabled. For example, as our experiments
suggest, if P is the efﬁcacy of the device when therapies are
enabled and T is a test, then the ICD — not only the external
programmer — should verify that therapies are enabled prior
to conducting the test T .
Power denial of service attack. Our experiments suggest
that the ICD could be forced to remain in a mode in which
it continually engages in wireless communications. As we
discuss above, a strong magnetic ﬁeld causes the ICD to
transmit telemetry continually, and the ICD responds to RF
commands without the presence of a nearby magnet. We have
not measured the power consumed by telemetry or other RF
transmissions, but it is possible that these operations decrease
battery life faster than normal ICD operation alone.
Other attack vectors. As noted in our earlier work [1],
[10], there may be other attack vectors against IMDs, such as
insecure software updates or buffer overﬂow vulnerabilities.
We do not experiment with such attack vectors in this work,
but note that the existence of such exploitable vulnerabilities
could allow for further adversarial control over the state and
operation of an IMD.
V. ZERO-POWER AND SENSIBLE DEFENSES FOR IMD
SECURITY AND PRIVACY
Providing security and privacy on an IMD involves health
risk factors and tight resource constraints. Traditional ap-
proaches could potentially introduce new hazards to patient
safety. For instance, protecting an IMD with a cryptographic
key may provide security, but the unavailability of a key could
hinder treatment in emergency situations. Another risk to IMD
availability is excessive power consumption by mechanisms
other than those needed for the device’s primary function.
For instance, the energy cost of performing computation for
cryptography or radio communication could directly compete
with the energy demands of pacing and deﬁbrillation. Effective
mechanisms for security and privacy should not provide new
avenues for an unauthorized person to drain a device’s battery.
For instance, spurious wake-ups or a cryptographic authenti-
cation process itself could cause a device to enter a state that
consumes excessive amounts of energy (as in, e.g., the sleep
deprivation torture attacks of Stajano and Anderson [29]).
Therefore, three goals guided our design of zero-power
approaches for IMD security and privacy. First, an effective ap-
proach should either prevent or deter attacks by both malicious
outsiders with custom equipment and insiders with commercial
programmers. Because IMD therapies rely on long-lasting
batteries, a second goal is that security and privacy should
draw no power from the primary battery, thus preventing denial
of service attacks on power. Third, security-sensitive events
should be effortlessly detectable by the patient. We must also
ensure that new security mechanisms do not introduce new
failure modes.
Our contributions include three zero-power defenses and
prototype implementations, one of which we evaluated for
effectiveness in a substance approximating the radio properties
of human tissue. Zero-power notiﬁcation harvests induced RF
energy to wirelessly power a piezo-element that audibly alerts
the patient of security-sensitive events at no cost to the battery.
Zero-power authentication similarly harvests RF energy to
power a cryptographically strong protocol that authenticates
requests from an external device programmer. Finally, sensible
key exchange combines techniques from both zero-power
notiﬁcation and zero-power authentication for vibration-based
key distribution that a patient can sense through audible and
tactile feedback. While we implemented prototypes of our
proposed defenses, we did not incorporate our prototypes into
a real IMD. (We use the term zero-power only to emphasize
that no expenditure of energy from the primary battery is
necessary. Zero-power defenses are also a step beyond the
use of a secondary battery for security-only or other auxiliary
purposes.)
We do not claim that our defenses are ﬁnal designs that IMD
manufacturers should immediately incorporate into commer-
cial IMDs. Rather, we believe that our research establishes a
potential foundation upon which others can create, evaluate,
and implement new defensive mechanisms for future IMD
designs.
138
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 03:12:46 UTC from IEEE Xplore.  Restrictions apply. 
conversation is about 60 dB SPL and a vacuum cleaner at a
distance of 3 meters is about 70 dB SPL [17]. We then placed
our prototype in an environment designed to simulate implan-
tation in a human (Fig. 8). We implanted the device beneath
1 cm (a standard ICD implantation depth) of bacon, with 4 cm
of 85% lean ground beef packed underneath. We took several
readings at the surface of tissue in order to ascertain the effects
of obstruction by tissue. We measured 84 dB SPL of sound
at the surface of the tissue, and subjectively were easily able
to hear it from a meter away (more than the distance between
standard ICD implantation sites and a patient’s ear).
These tests of our prototype device suggest that its piezo-
element
is audible under reasonable simulations. Because
malicious attackers may attempt their attacks in noisy, chaotic
environments to vitiate auditory notiﬁcation, and because some
patients with ICDs may have limited hearing, we note that
a piezo-element can be used to produce vibration instead of
audible sound. In our experiments, the 4 kHz alert used was
easily sensed by touch.
B. Prevention: Zero-Power Authentication
Our second defense implements a zero-power method that
allows an IMD to verify that it is communicating with a real
commercial programmer (and not an unauthorized software
radio programmer).
Approach. The device implements a simple challenge-
response protocol (Fig. 10) based on RC5-32/12/16 [24]. In
this model, all commercial programmers know a master key
KM , each IMD has an serial number or identity I, and each
IMD has an IMD-speciﬁc key K = f(KM , I), where f is
any cryptographically strong pseudorandom function (such as
AES). The value KM should be stored in secure hardware
on the programmers. The protocol works as follows. The
programmer transmits a request to authenticate to the WISP.
The WISP responds with its identity I and a nonce N.
The programmer computes K = f(KM , I) to get the IMD-
speciﬁc key and then returns the response R = RC5(K, N)
to the WISP. The WISP computes the same value and veriﬁes
the value it received from the programmer against its result.
The WISP ﬁnally sets a GPIO high which, if attached to or
built into a real IMD, would inform the IMD that the WISP
successfully authenticated a programmer.
For the sake of simplicity, our prototype does not implement
the full protocol. Namely, in our experiments we use a ﬁxed
nonce and assume that
the programmer knows the nonce
in advance. Using this simpliﬁed model, we experimentally
veriﬁed that, upon receiving the programmer response R, the
WISP was able to perform its own RC5 encryption and verify
equality. We were able to run this subset of the protocol with
complete reliability using only harvested energy. To lift from
the simpliﬁed model to a real implementation of our protocol,
we note that the nonce should appear random to an adversary.
Since we, and others [2], show that it is possible to run RC5
on a WISP, a natural solution would be to generate the nonce
with RC5 in counter mode. A better approach that would
yield a truly random nonce is to exploit process variations
Fig. 7. The WISP with attached piezo-element.
A. Detection: Zero-Power Notiﬁcation for Patients
As our earlier work notes [10],
it may be possible to
deter malicious activities by making patients aware of those
activities. Our zero-power notiﬁcation alerts a patient to poten-
tially malicious activities both by insiders using commercial
programmers and by outsiders using custom attack hardware,
thereby making patients effortlessly aware of remote com-
munications. On some modern ICDs, triggering the magnetic
switch causes the ICD to beep. Whether intentional or not,
such beeping represents a step towards the concept of patient
awareness by way of audible alerts. But beeps triggered by a
magnet alone do not raise patient awareness for RF-initiated
actions, which our approach does.
Our approach: WISPer. Our prototype of zero-power notiﬁ-
cation wirelessly drives a piezo-element that can audibly warn
a patient of security-sensitive events. The prototype builds
upon revision 1.0 of the Wireless Identiﬁcation and Sens-
ing Platform (WISP) [27], a postage stamp-sized embedded
system that contains RFID circuitry and a Texas Instruments
MSP430F1232 microcontroller with 256 bytes of RAM and
8 KBytes of ﬂash memory. The WISP harvests energy from
a 915 MHz RF signal generated by the Alien ALR-9640
nanoscanner, a UHF RFID reader running the EPC Class
1 Gen 1 protocol. Although we prototyped at 915 MHz, it
may be possible to create similar hardware that operates at
the frequency of current ICD programmers. WISPer adds to
the WISP’s base code a 30-line C program that activates
a piezo-element which we attached to the general-purpose
I/O (GPIO) ports of the WISP. After WISPer receives a
sequence of wireless requests from the RFID reader, it emits
constant chirping, thereby informing the patient of the wireless
interaction. A future version of WISPer could set a separate
GPIO high after buzzing for a certain number of cycles, and
the IMD could allow remote communications only after that
GPIO is raised. WISPer satisﬁes our zero-power notiﬁcation
design constraints: it draws no energy from a battery and can
issue alerts for all reprogramming activity.
Evaluation. Two measurements quantify the effectiveness of
the WISPer prototype for zero-power notiﬁcation. We used
a sound level meter to measure Sound Pressure Level (SPL)
with a reference pressure of 20 micropascals (the standard
for above-water calculations). The buzzing volume peaked at
67 dB SPL from a distance of 1 m. For reference, a normal
139
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 03:12:46 UTC from IEEE Xplore.  Restrictions apply. 
Fig. 8. To simulate implantation in a human, we placed the WISP in a bag containing bacon and ground beef.
and omnipresent thermal noise by extracting random bits from
SRAM using the FERNS technique of Holcomb et al. [12].
Applying FERNS to 256 bytes of SRAM could yield 100 bits
of true randomness each time the SRAM is powered up. Our
work would beneﬁt from an implementation of the memory-
as-TRNG technique on the WISP.
Evaluation. We learned from our successful attacks that
private data transmitted between our ICD and programmer
are not encrypted. We propose that cryptography be added at
least at critical junctures. Encryption of the entire conversation
would be optimal — for example, a secure channel between
programmer and ICD could prevent third-party disclosure,
replay, and many other attacks — but in the interest of mod-
ularity we consider in this paper only defensive approaches
that might be implemented with less extensive modiﬁcations to
current ICD designs. Modularity aside, if we were to propose
cryptographic extensions that required signiﬁcant changes to
ICD design, it would be necessary to consider the power cost
of our proposed changes. Without detailed knowledge of the
inner workings of ICDs, however, we cannot accurately assess
the cost of adding cryptography to existing devices.
The tension between increased security and increased power
consumption can be resolved by requiring successful zero-
power authentication before the device switches to higher
power consumption modes. Our prototype shows that
this
proposal is feasible for bootstrapping stronger (and possibly
mutual) authentication methods. Our prototype harvests power
from RF transmissions, performs a cryptographic authentica-
tion, and on successful authentication of a programmer, sets
a GPIO high which, if connected to or built into a real ICD,
would permit the ICD to participate in active RF communica-
tion and other higher-level protocols. This approach addresses
the risk of sleep deprivation torture described by Stajano and