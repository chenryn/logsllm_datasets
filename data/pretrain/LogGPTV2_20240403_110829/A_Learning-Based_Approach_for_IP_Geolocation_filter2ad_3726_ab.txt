also weight the ordering of measurement values by an exponential, such that
176
B. Eriksson et al.
the i-th latency measurement is weighted by exp (−i · γlat) and the j-th hop
count measurement is weighted by exp (−j · γhop). The weight parameter values
(λhop, λpop, γlat, γhop) will be found by the weight values that minimize the sum
of squared distance errors between the training set of IPs known locations and
the Naive Bayes estimated locations.
2.1 Methodology Summary
Dividing the measurement set M into the set of
latency measurements
{l1, l2, ..., lm} and the set of hop count measurements {h1, h2, ..., hm} (where
the total number of measurements M = 2m), our learning-based classiﬁer using
the independence assumption can be restated using the kernel density estima-
tors (where instead of the true likelihood P (mi | c) we have the kernel estimated
(cid:2)P (mi | c)), the weight terms, and the monotonic properties of the logarithm
function as
(cid:4)
(cid:5)
(2)
(cid:2)ci = arg max
c∈C
λpop log (cid:2)P (c) + fhop + flat
j=1 exp (−j · γhop) log (cid:2)P (hj | c),
(cid:3)m
=
fhop
Where
=
j=1 exp (−j · γlat) log (cid:2)P (lj | c), and the term (cid:2)P (c) for the 3,107 counties
(cid:3)m
in the continental United States is found using Equation 1.
λhop
and
flat
Algorithm 1. Naive Bayes IP Geolocation Algorithm
Initialize:
locations.
– Measure the hop-count and latency from every monitor to a training set with known geographic
– Using a population density database, ﬁnd (cid:2)P (c) for all c ∈ C using Equation 1.
– Using kernel density estimators, estimate the one-dimensional distribution (cid:2)P (m|c) for every
measurement m ∈ M.
– Find the optimal values for λhop, λpop, γlat, γhop that minimize the sum of squared distance
errors over the training set.
Main Body
1. For each target IP with unknown geography, estimate the location (cid:2)ci using Equation 2.
A summary of the complete methodology is seen in Algorithm 1. Note that
all the computational complexity of this algorithm is on training the parameters
(λhop, λpop, γlat, γhop). Each target is geolocated using only O (M |C|) number of
multiplications, where |C| is the total number of location classes under considera-
tion (in this paper, the number of counties in the continental United States), and
M is the total number of measurements to the current target IP. The computa-
tional complexity being linear in both the number of locations and the number of
monitors demonstrates the feasibility of future large-scale Internet studies using
this method.
A Learning-Based Approach for IP Geolocation
177
3 Experiments
To assess our geolocation algorithm, we sought a large set of IP addresses of
routers with as much spatial diversity as possible within the continental United
States. Starting with the spatially diverse set of Planetlab [10] node locations,
the full mesh traceroute probing between these nodes will ﬁnd a very large set
of router IP addresses with high spatial diversity. Existing data were provided
by the iPlane project [1], which performs a traceroute from all available Plan-
etlab hosting sites to a set of target preﬁxes obtained through the Routeviews
project [11]. We used four weeks of iPlane data collected over the period of 12
December 2008 to 8 January 2009. In addition to the iPlane data, we collected
traceroute data between a full mesh of Planetlab hosting sites, of which there
were 375 at the time we collected these data. For performing traceroutes, we used
the Paris traceroute tool [12], using it once in UDP mode and a second time in
ICMP mode in order to discover as many routers as possible [13]. Options were
set in the Paris traceroute tool so that it produced a low level of probes while
taking somewhat longer to complete a given traceroute. We collected a full mesh
of Planetlab traceroute measurements three separate times between December
11, 2008 and January 6, 2009. For these measurements, we were able to use
about 225 Planetlab sites due to maintenance and other issues.
Using these two data sets, we were able to discover 125,146 unique router IPv4
addresses. A standard problem with traceroute-based studies is IP interface dis-
ambiguation, also known as alias resolution. Interfaces on a given Internet router
are typically assigned separate IP addresses; identifying which addresses corre-
spond to the same physical router is the challenge in alias resolution. To de-alias
our data set, we used the alias database published by the iPlane project. This
database builds on prior work in alias resolution, including the methods used by
the Rocketfuel project [14]. Upon de-aliasing our set of router IP addresses, we
identiﬁed 114,815 routers.
To construct the measurements used in our analysis (as described below),
we required the hop counts and latency measurements to each identiﬁed router
from all available Planetlab sites. In order to limit the overhead of probing for
this hop count and latency data, we used the following approach. For each IP
address, we sent a direct ICMP echo request packet (i.e., a ping). In other work,
it was observed that a majority of Internet hosts respond to ICMP echo request
packets [15]; we also found this to be true. Indeed, more than 95% of all router
IP addresses we identiﬁed responded. This should not be surprising considering
the fact that these addresses were initially identiﬁed through active probing.
For computing the hop count, we use the methodology of [16] on the echo
response (note that this is the hop count of the reverse path). For geolocation
ground truth, we use the Maxmind database [2], which is rated to be 82%
accurate within 25 miles for IPs located within the US. From our dataset of
114,815 disambiguated routers, Maxmind identiﬁed 16,874 routers located in
the continental United States with known county location. Using 5-Fold Cross
Validation [4], we test the performance of the methodology ﬁve times using 20%
178
B. Eriksson et al.
of the routers as our training set, leaving the remaining 80% of the routers to
test the accuracy of our methodology.
We compare the geolocation results from our learning-based method to
Constraint-Based Geolocation (CBG). To generate CBG geolocation estimates,
we implemented the algorithm described in [3]. CBG is the current state-of-the-
art IP geolocation methodology using only ping-based measurements. The basic
intuition behind CBG is that each latency measurement to a set of monitors with
known location can be considered a series of constraints, where given speed-of-
light in ﬁber assumptions and self-calibration using a set of training data, we can
determine a feasible geographic region given each latency measurement. Given a
series of latency measurements, the possible geographic placement is considered
the intersection of many constraint regions, with the estimated location behind
the centroid of this intersection region.
To assess performance of both geolocation algorithms, we will consider the
error distance to be the distance in miles between the centroid of our estimated
classiﬁed county and the centroid of the ground truth (Maxmind) county. Perfor-
mance of our learning-based Naive Bayes framework and the CBG method with
respect to the empirical cumulative probability can be seen in Figure 2-(left).
As seen in the ﬁgure, the geolocation estimates produced by our learning-based
framework are more accurate than CBG for 96% of the routers. On average the
Naive Bayes location estimates are 70 miles closer to the true location than the
CBG estimates.
Fig. 2. (Left) - Empirical cumulative probability of error distance. (Right) - Breakdown
of each quintile empirical cumulative probability error distance for our learning-based
methodology.
To analyze the impact of using multiple features in our learning-based frame-
work, we generate geolocation estimates when both population density informa-
tion is removed (setting the weight of using the population density to zero, λpop =
0) and when hop count information is removed (setting the weight of using the
hop count data to zero, λhop = 0). These two conditions resulted in an aver-
age error distance of 261.89 and 277.29 miles, for missing population data and
missing hop count data respectively. These results indicate that both the hop
count data and the population density information signiﬁcantly contribute to the
improved performance of the methodology. Using only latency information, the
Naive Bayes methodology still outperforms the CBG method (278.96 mile average
A Learning-Based Approach for IP Geolocation
179
error vs. 322.49 mile average error) due to the more accurate multiple latency den-
sity estimates used to classify the location of each end host instead of simply using
the intersection of feasible latency regions as in the CBG methodology.
Using Equation 2, the Naive Bayes framework can ﬁnd (cid:2)P ((cid:2)c| M), the esti-
mated probability of each target being classiﬁed correctly by our learning-based
framework given the set of measurements. This can be considered a level of con-
ﬁdence in the classiﬁcation of each target IP. Using this conﬁdence level, we
can sort into quintiles and form quintile sets containing the 20% of the target
IPs with the largest (cid:2)P ((cid:2)c| M) values (e.g., the targets we are most conﬁdent in
accurately geolocating), to a quintile set containing the 20% of target IPs with
the smallest (cid:2)P ((cid:2)c| M) values (e.g., the targets we are least conﬁdent in). Fig-
ure 2-(right) shows how this conﬁdence level accurately predicts the quality of
our classiﬁcation, with the most conﬁdent 20% of the targets being classiﬁed far
more accurately than any other quintile set. Therefore, in addition to estimating
the geolocation of each target IP, we also have a level of conﬁdence that directly
corresponds to the accuracy of our prediction.
4 Related Work
The main prior work in IP geolocation that we compared and contrasted our
learning-based methodology with is Constraint-Based Geolocation [3]. More re-
cent geolocation work in [9],[17] has found improvements over Constraint-Based
Geolocation, but both methodologies require Traceroute-based measurements to
the targets along with location hints acquired by unDNS [14] probes. One poten-
tial disadvantage of these methodologies is the dependency on DNS naming con-
ventions, which have been shown to not always be reliable [18]. This requires so-
phisticated location validation and reweighting mechanisms to be developed and
maintained. The focus of this work was to introduce our elegant learning-based
geolocation framework and validate its performance using simple ping-based mea-
surements. We leave the extension of our learning-based framework to these newer
Traceroute-based methodologies as future work. To the best of our knowledge,
this is the ﬁrst work to frame IP geolocation as a machine learning problem.
5 Conclusions and Future Work
The goal of our work is to improve the accuracy of estimates of the geographic
location of nodes in the Internet. Our work is based on the hypothesis that
the ability to zero in on the geolocation of nodes is improved by considering a
potentially broad set of features including both active measurements and more
static characteristics associated with locations. To consider this hypothesis, we
introduce a learning-based framework that enables geolocation estimates to be
generated eﬃciently, and is ﬂexible in the feature space that can be considered. In
this initial study, we employ a Naive Bayes classiﬁer and generate estimates from
two types of empirical measurements in our framework (latency and hop counts)
and one societal characteristic (population density). We then test the feasibility
180
B. Eriksson et al.
of our learning-based approach using an empirical dataset of over 16K target
routers, and latency and hop count data to 78 monitors with known geographic
locations. We show that our geolocation estimates are more accurate for 96%
of the routers in our test set versus the estimates generated by a current state-
of-the-art constraint-based geolocation method. We also show how the use of
multiple features does indeed enhance the overall estimation accuracy. In future
work, we plan to investigate additional features that improve the accuracy of
our estimates, and the possible use of a multi-scale classiﬁcation framework that
narrows the classiﬁcation region given classiﬁcation conﬁdence levels.
References
1. Madhyastha, H., Isdal, T., Piatek, M., Dixon, C., Anderson, T., Krishnamurthy,
A., Venkataramani, A.: iPlane: An Information Plane for Distributed Services. In:
USENIX OSDI 2006 (November 2006)
2. Maxmind geolocation database, http://www.maxmind.com
3. Gueye, B., Ziviani, A., Crovella, M., Fdida, S.: Constraint-based geolocation of
internet hosts. IEEE/ACM Transactions on Networking (December 2006)
4. Wasserman, L.: All of Nonparametric Statistics (May 2007)
5. Lakhina, A., Byers, J., Crovella, M., Matta, I.: On the Geographic Location of Inter-
net Resources. IEEE Journal on Selected Areas in Communications (August 2003)
6. Eriksson, B., Barford, P., Nowak, R.: Network Discovery from Passive Measure-
ments. In: ACM SIGCOMM 2008 (August 2008)
7. Ng, E., Zhang, H.: Predicting Internet Network Distance with Coordinate-baseed
Approaches. In: IEEE INFOCOM (April 2002)
8. Rish, I.: An Empirical Study of the Naive Bayes Classiﬁer. In: Workshop on Em-
pirical Methods in Artiﬁcial Intelligence (2001)
9. Wong, B., Stoyanov, I., Sirer, E.G.: Octant: A comprehensive framework for the
geolocation of internet hosts. In: USENIX NSDI 2007 (April 2007)
10. Bavier, A., Bowman, M., Chun, B., Culler, D., Karlin, S., Muir, S., Peterson, L.,
Roscoe, T., Spalink, T., Wawrzoniak, M.: Operating System Support for Planetary-
Scale Network Services. In: USENIX NSDI 2004 (March 2004)
11. Oregon Route Views Project, http://www.routeviews.org/
12. Augustin, B., Cuvellier, X., Orgogozo, B., Viger, F., Friedman, T., Latapy, M.,
Magnien, C., Teixeira, R.: Avoiding traceroute anomalies with Paris traceroute.
In: ACM IMC 2006 (October 2006)
13. Luckie, M., Hyun, Y., Huﬀaker, B.: Traceroute Probe Method and Forward IP
Path Inference. In: ACM IMC 2008 (October 2008)
14. Spring, N., Mahajan, R., Wetherall, D.: Measuring ISP Topologies with Rocketfuel.
In: ACM SIGCOMM 2002 (August 2002)
15. Heidemann, J., Pradkin, Y., Govindan, R., Papadopoulos, C., Bartlett, G., Ban-
nister, J.: Census and Survey of the Visible Internet. In: ACM IMC 2008 (October
2008)
16. Wang, H., Jin, C., Shin, K.: Defense against spoofed IP traﬃc using hop-count
ﬁltering. IEEE/ACM Transactions on Networking 15(1), 40–53 (2007)
17. Katz-Bassett, E., John, J.P., Krishnamurthy, A., Wetherall, D., Anderson, T.,
Chawathe, Y.: Towards IP Geolocation Using Delay and Topology Measurements.
In: ACM IMC 2006 (October 2006)
18. Zhang, M., Ruan, Y., Pai, V., Rexford, J.: How DNS Misnaming Distorts Internet
Topology Mapping. In: USENIX Annual Technical Conference (2006)