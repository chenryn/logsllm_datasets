As every alert comes along with its own causal event set, we need to deﬁne a
relation to compare events. Such a relation strongly depends on the timestamp
B. Morin et al.
132
sim alert vuln ∈ EA ↔ EA ∪ ES
sim alert vuln = relative vulns; refersto
−1; reportname
−1
Fig. 13. Alerts referring to the same vulnerability
reactive ids ∈ EA ↔ D
reactive ids = (sim alert ip ∪ sim alert vuln); alert generator
Fig. 14. Reactive IDS
of the events. Although distinct IDS alert timestamps (IDMEF analysertime)
may diﬀer, the timestamp of the causal events (IDMEF detecttime) should be
very close. Two events cannot have the same timestamps as clock synchroniza-
tion is impossible to achieve. This is why we impose two events to have close
timestamps (in ﬁgure 12, ε is a constant whose value is close to the maximum
gap existing between two synchronized clocks).
We recursively deﬁne the comparison relation between IP events, noted ip= (cf
ﬁgure 12). Two IP events are equal if they have the same attributes (destination
address, source address, identiﬁcation number) and close timestamps or if there
is another IP event which is equal to the two others. A recursive deﬁnition is
required here otherwise ip= would not be an equivalence relation due to the time
constraint. Equality relations for other types of events can be built in the same
way.
Applying the causes (ﬁgure 8) relation to an ip= equivalence class gives the
set of alerts which are caused by the same IP event. The sim alert ip (cf ﬁgure
12) is a function which applies to an alert, and gives a set of alerts which are
caused by the same IP event (if the alert is caused by an IP event, otherwise
this is the empty set).
Aggregating alerts through vulnerability. As a second example, we propose a way
to aggregate alerts generated by IDS which not only use distinct data sources,
but also use distinct alert naming conventions. Thus, we propose to group alerts
which refer to the same vulnerability (ﬁgure 13).
Let us consider an alert a ∈ EA. The set of a similar alerts is composed of
the alerts whose relative vulnerabilities (deﬁned in ﬁgure 11) are the same as a.
Reactive IDS. Reactive IDS are the IDS which have generated an alert because
of a single action. Actions are on the attacker’s side so we do not have access
to this concept. We only have access to the manifestations of actions, i.e events
and alerts. Thus, for a given alert a ∈ EA, the reactive IDS are the IDS which
have generated alerts similar to a. In the preceding paragraphs, we introduced
two examples of similar alert aggregation functions. The reactive IDS can be
M2D2: A Formal Data Model for IDS Alert Correlation
133
oper able ∈ EA ↔ D ∪ S
oper able = relative vulns; refersto
−1; canraise
−1
Fig. 15. Operationnaly-able IDS
topo able hids ∈ EA ↔ DH
topo able hids = alert generator; monitored host; monitored host
topo able nids ∈ EA ↔ DH
topo able nids = causes
topo able ∈ EA ↔ DH
topo able = topo able hids ∪ topo able nids
−1; ip dst; addr
−1
−1; belongs to host; monitored host
−1
Fig. 16. Topologically-able IDS
able ∈ EA ↔ DH
able = topo able ∩ oper able
Fig. 17. Potentialy reactive IDS
obtained by simply applying alert generator (cf ﬁgure 8) to the similar alerts.
We call this relation reactive ids (cf ﬁgure 14).
Potentially reactive IDS. A potentially reactive IDS is an IDS which is
both topologically and operationally able (see section 2.4) to detect an at-
tack. Topological and operational ability both apply to alerts: given an alert
a ∈ EA, operationally-able IDS (resp. topologically-able IDS) are IDS which are
operationally-able (resp. topologically-able) to generate an alert similar to a.
Given an alert a ∈ EA, the operationally-able IDS set is composed of the IDS
which can raise a report which refers to one of a relative vulnerabilities. This
function is formalized in ﬁgure 15.
Evaluating the topologically-able IDS faces two major pitfalls. The ﬁrst one is
that the topological visibility of an HIDS is limited to a single host, whereas the
topological visibility of an NIDS is not even limited to a static set of hosts. An
NIDS having access to a network stream of events depends on the route followed
by the datagrams. Thus, it is generally not possible to say that an NIDS has
access to the datagrams of such attack without knowing a priori the route taken
by the datagrams, and this information is not available.
The second pitfall is that an attack may concern more than a single host.
In other words, a set of events may be considered malicious only because of the
multiplicity of the targets (network probes are such examples). In such a case,
although an IDS is operationally able and topologically able to detect some part
of an attack, it may not generate an alert.
134
B. Morin et al.
Moreover, if an alert a ∈ EA is generated by an HIDS, no reliable conclusion
can be sketched about NIDS topological ability to detect the corresponding
attack: if the attack is launched locally, it has no network-side eﬀect ; if it is
launched remotely, no information about the route taken by the datagrams is
available
Thus, the set of topologically-able IDS is currently limited to the set of
HIDS. We propose two functions to obtain topologically HIDS set for a given
alert. The ﬁrst one is called topo able hids and applies to alerts generated by
HIDS and gives HIDS which monitor the same host. The second relation, called
topo able nids, applies to alerts generated by an NIDS and gives HIDS which
monitor the destination host of the underlying IP event which causes the alert
(cf ﬁgure 16).
Lastly, potentially reactive IDS are both topologically-able and operationally-
able IDS. As the we are currently limited to topologically-able HIDS, potentially
reactive IDS is also limited to potentially reactive HIDS. The corresponding
relation is in ﬁgure 17.
3.4 Discussion
M2D2 provides an expressive tool to build complex correlation methods. For
example, the reduction of false positives described in section 3.3 could have
been hardly designed without such a rich and formal model. Moreover, the three
aggregations presented above have all illustrated how powerful and easy it is
to compose relations. Aggregations themselves could be composed further. For
example, the ﬁrst two aggregations can be composed to create another relevant
aggregation relation (harmful−1; common target). Indeed, applying harmful−1
to a given host gives alerts whose related attacks may be successful. When used
in conjunction with the common target function, we know which attacks may
work on a given host.
The formal speciﬁcation also helps detect a number of problems. For example,
the relation sub conﬁg ﬁgure 11 has been introduced to ensure type consistency
between the composed relations. This has a practical impact on the implemen-
tation: either an intermediate table has to be created or, at correlation time, the
sub-conﬁguration will have to be checked.
4 Related Work
Formal models. As already mentioned in the introduction, the closest related
work are the NetStat Network Fact Base (NNFB) of Vigna and Kemmerer [4,5]
and the Intrusion Reference Model (IRM) of Goldman et al. [6]. Both the NetStat
Network Fact Base and the Network Entity Relationship Database (NERD) of
IRM are based on Vigna’s network formal model [7], and so are the topolopy
and network events of M2D2. The concept of product in M2D2 is similar to the
concept of services in NNFB and NERD. The security tools formalized in M2D2
are mentioned in NNFB and IRM but they are not precisely speciﬁed. As far as
M2D2: A Formal Data Model for IDS Alert Correlation
135
we know, no model includes the vulnerability and alert parts of M2D2. On the
other hand, IRM includes a security goals database. It captures security policies
set by the administrators. Evidence about violations of the security policy are
then aggregated. This feature, not yet formalized, could be added in M2D2 in
the future. Finally, as mentioned in section 2.5, there are no system level events
modeled in M2D2. We are currently working on the addition of such events.
Another piece of work related to ours is the one of the IETF Intrusion Detec-
tion Working Group (IDWG) [12]. The Intrusion Detection Message Exchange
Format (IDMEF) has been proposed to provide a common format of alerts [12].
The alert speciﬁcation in M2D2 is compatible with IDMEF, IDMEF-compliant
alerts can be received and processed within the M2D2 framework without loss
of semantical information. The scope of M2D2 is larger than IDMEF, to take
into account all sources of information relevant to information security, and as
such simpliﬁes the IDMEF model through the removal of classes with similar
semantic content while conveying the same information through aggregation re-
lationships. This is in particular the case of the source and target classes,
replaced by the notion of node while the source and target information are car-
ried by aggregation relationships.
Implicit models for correlation. Another aspect of the related work is cor-
relation. In order to perform fusion or correlation, researchers in the ﬁeld have
worked out implicit models dedicated to their correlation algorithms. The ob-
jective of M2D2 is to have a solid modeling foundation that allows multiple
correlation tools and algorithms to be implemented and tested.
In [15,16], Cuppens and Mi`ege base their work on fusion on the IDMEF
data model [12], implemented as Prolog predicates. As such, their model is sim-
pler than M2D2, which means that less information is available for correlation
purposes. The sole reliance on intrusion-detection alerts makes it impossible to
assess the relevance of these alerts with respect to the monitored information
system.
Cuppens and Mi`ege suggest in [16] to correlate alerts by using attack scenar-
ios speciﬁed in the Lambda language [17]. Such a language allows correlations
between events belonging to a same attack scenario to be expressed, and could
be used on top of M2D2.
The Tivoli RiskManager tool [13] is a correlation platform for security events
provided by information systems. Originally developed for the correlation of
intrusion-detection alerts, it now also correlates information from ﬁrewalls and
antivirus systems. The data model used by Tivoli RiskManager was the source
for the ﬁrst version of IDMEF, but IDMEF has evolved since and the con-
straints of the Tivoli environment are such that it would be extremely diﬃcult
to implement the exact IDMEF model. Also, events from the three information
sources (intrusion-detection systems, ﬁrewalls and antivirus systems) are not re-
lated together as is the case in M2D2. As such, the correlation algorithm used
in RiskManager has to develop hypotheses concerning the relationships between
events, creating relationships based on superﬁcial characteristics of the events.
136
B. Morin et al.
5 Conclusion
In this paper, we introduced M2D2, a formal information model designed for
security information representation and correlation. The model includes the four
types of information we think crucial to allow rich alert correlations: information
system characteristics, vulnerabilities, security tools, and events and alerts. The
model is a platform to provide answers to three important issues in intrusion-
detection today, the sheer number of alerts provided, the quality of these alerts
and the precision of the ﬁnal diagnosis proposed to operators.
As far as possible, M2D2 reuses models proposed by others, for instance the
Vigna’s topological model. The ﬁrst contribution of M2D2 is thus the integration
of multiple interesting and relevant concepts into a uniﬁed framework. When
needed, we extended these reused model to encompass the four types of useful
information.
Moreover, M2D2 is formally deﬁned, following Mc Hugh’s suggestion that
further intrusion detection signiﬁcant progress will depend on the development
of an underlying theoretical basis for the ﬁeld. This formalism is the second
contribution of M2D2, ensuring that processing of security information and in
particular alert correlation is anchored on a rigorous model representing the
information being processed. This formalism does lend itself to extensions, as
we believe that progress on this path will lead us to incorporate additional
information sources and components.
In order to illustrate how M2D2 could be used, we also presented three ex-
amples of correlation (actually of aggregation) methods. These examples are
rigorously speciﬁed using the formal deﬁnition of M2D2. As opposed to already
published correlation methods, these examples use more than the events gener-
ated by security tools; they make use of many concepts formalized in M2D2.
References
1. G. Jakobson and M. D. Weissman. Alarm correlation. IEEE Network Magazine,
pages 52–60, 1993.
2. J. McHugh. Intrusion and intrusion detection. International Journal of Informa-
tion Security, July 2001.
3. Icat vulnerabilities database. http://icat.nist.gov/icat.cfm.
4. G. Vigna and R. A. Kemmerer. Netstat: A network-based intrusion detection
approach. In Proceedings of the 14th Annual Computer Security Application Con-
ference, December 1998.
5. G. Vigna and R. A. Kemmerer. Netstat: A network-based intrusion detection
system. Journal of Computer Security, February 1999.
6. R. P. Goldman, W. Heimerdinger, S. A. Harp, C. W. Geib, V. Thomas, and R. L.
Carter. Information modeling for intrusion report aggregation. In Proceedings of
the DARPA Information Survivability Conference and Exposition, June 2001.
7. G. Vigna. A topological characterization of tcp/ip security. Technical Report
TR-96.156, Politecnico di Milano, 1996.
8. J.-R. Abrial. The B Book: Assigning programs to meanings. Cambridge University
Press, 1996.
M2D2: A Formal Data Model for IDS Alert Correlation
137
9. R. Shirey. Internet security glossary. RFC2828, 2000.
10. J. Arlat, J.P. Blanquart, A. Costes, Y. Crouzet, Y. Deswarte, J.C. Fabre,
H. Guillermain, M. Kaaniche, K.Kanoun, J.C. Laprie, C. Mazet, D. Powell,
C. Rabejac, and P. Th´evenod. Guide de la suret´e de fonctionnement. Cepadues
editions, 1995.
11. D. E. Mann and S. M. Christey. Towards a common enumeration of vulnerabili-
ties. In Proceedings of the 2nd Workshop on Research with Security Vulnerability
Databases, January 1999.
12. Dave Curry and Herv´e Debar. Intrusion detection message exchange format data
model and extensible markup language (xml) document type deﬁnition.
Inter-
net Draft (work in progress), December 2001. http://search.ietf.org/internet-
drafts/draft-ietf-idwg-idmef-xml-06.txt.
13. Herv´e Debar and Andreas Wespi. Aggregation and correlation of intrusion-
In Wenke Lee, Ludovic M´e, and Andreas Wespi, editors, Pro-
detection alerts.
ceedings of the 4th International Symposium on Recent Advances in Intrusion De-
tection (RAID 2001), number 2212 in Lecture Notes in Computer Science, pages
85–103, Davis, CA, USA, October 2001. Springer.
14. J. D. Howard and T. A. Longstaﬀ. A common language for computer security
incidents. CERT - SAND98-8667,
http://www.cert.org/research/taxonomy 988667.pdf, 1998.
15. F. Cuppens. Managing alerts in multi-intrusion detection environment. In Proceed-
ings of the 17th Annual Computer Security Applications Conference (ACSAC’01),
2001.
16. F. Cuppens and A. Miege. Alert correlation in a cooperative intrusion detection
framework. In Proccedings of the IEEE Symposium on Security and Privacy, 2002.
17. Fr´ed´eric Cuppens and Rodolphe Ortalo. Lambda: A language to model a database
for detection of attacks. In H. Debar, L. M´e, and S. F. Wu, editors, Proceedings of
the Third International Workshop on the Recent Advances in Intrusion Detection
(RAID’2000), number 1907 in LNCS, pages 197–216, October 2000.