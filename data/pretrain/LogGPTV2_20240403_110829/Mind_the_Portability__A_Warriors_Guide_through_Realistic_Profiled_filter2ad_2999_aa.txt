title:Mind the Portability: A Warriors Guide through Realistic Profiled
Side-channel Analysis
author:Shivam Bhasin and
Anupam Chattopadhyay and
Annelie Heuser and
Dirmanto Jap and
Stjepan Picek and
Ritu Ranjan Shrivastwa
Mind the Portability: A Warriors Guide through
Realistic Proﬁled Side-channel Analysis
Shivam Bhasin
Anupam Chattopadhyay
Annelie Heuser
Nanyang Technological University
Nanyang Technological University
Univ Rennes, Inria, CNRS, IRISA
Singapore
Singapore
France
Email: PI:EMAIL
Email: PI:EMAIL
Email: PI:EMAIL
Dirmanto Jap
Stjepan Picek
Ritu Ranjan Shrivastwa
Nanyang Technological University
Delft University of Technology
Singapore
Email: PI:EMAIL
The Netherlands
Email: PI:EMAIL
Secure-IC
France
Email: PI:EMAIL
Abstract—Proﬁled side-channel attacks represent a practical
threat to digital devices, thereby having the potential to disrupt
the foundation of e-commerce, the Internet of Things (IoT), and
smart cities. In the proﬁled side-channel attack, the adversary
gains knowledge about the target device by getting access to
a cloned device. Though these two devices are different in real-
world scenarios, yet, unfortunately, a large part of research works
simpliﬁes the setting by using only a single device for both pro-
ﬁling and attacking. There, the portability issue is conveniently
ignored to ease the experimental procedure. In parallel to the
above developments, machine learning techniques are used in
recent literature, demonstrating excellent performance in proﬁled
side-channel attacks. Again, unfortunately, the portability is
neglected.
In this paper, we consider realistic side-channel scenarios and
commonly used machine learning techniques to evaluate the inﬂu-
ence of portability on the efﬁcacy of an attack. Our experimental
results show that portability plays an important role and should
not be disregarded as it contributes to a signiﬁcant overestimate
of the attack efﬁciency, which can easily be an order of magnitude
size. After establishing the importance of portability, we propose
a new model called the Multiple Device Model (MDM) that
formally incorporates the device to device variation during a
proﬁled side-channel attack. We show through experimental
studies how machine learning and MDM signiﬁcantly enhance
the capacity for practical side-channel attacks. More precisely,
we demonstrate how MDM can improve the performance of an
attack by order of magnitude, completely negating the inﬂuence
of portability.
I. INTRODUCTION
Modern digital systems, ranging from high-performance
servers to ultra-lightweight microcontrollers, are universally
equipped with cryptographic primitives, which act as the
foundation of security, trust, and privacy protocols. Though
these primitives are proven to be mathematically secure, poor
Network and Distributed Systems Security (NDSS) Symposium 2020
23-26 February 2020, San Diego, CA, USA
ISBN 1-891562-61-4
https://dx.doi.org/10.14722/ndss.2020.24390
www.ndss-symposium.org
implementation choices can make them vulnerable to even an
unsophisticated attacker. A range of such vulnerabilities are
commonly known as side-channel leakage [1], which exploits
various sources of information leakage in the device. Such
leakages could be in the form of timing [2], power [3], elec-
tromagnetic (EM) emanation [4], speculative executions [5],
remote on-chip monitoring [6], etc. Different side-channel
attacks (SCA) have been proposed over the last two decades
to exploit these physical leakages. In this work, we focus on
power/EM side-channel attacks targeting secret key recovery
from cryptographic algorithms.
In SCA, proﬁled-based attacks are considered as one of
the strongest possible attacks [7]. The strength of proﬁled-
based attacks arises from their capability to fully characterize
the device. There, the attacker has full control over a clone
device, which can be used to build its complete proﬁle. This
proﬁle is then used by the attacker to target other similar
devices to recover the secret information. An illustration of
proﬁled SCA is shown in Figure 1. The most common proﬁled
SCA is template attack [7], which proﬁles model with mean
and standard deviation. After the proﬁling phase, the attacker
would ideally need only a single measurement in the attack
phase to break the implementation. Performing such an attack
enables a worst-case security evaluation.
1) Expectation vs Reality: In an ideal setting, the device for
proﬁling and testing are different. Still, most of the works
in existing literature do not consider multiple devices but
proﬁle and test the same device [8] (see Figure 1 and the
difference between reality and expected cases). Consequently,
despite the common perception about the practicality of SCA,
a large body of results comes from unrealistic experimental
settings. Indeed, the presence of process variation or different
acquisition methods [9], [10] may cause a successful “single-
device-model” attack to fail. In [11], authors perform a tem-
plate attack on AES encryption in a wireless keyboard. They
report 28% success on a different keyboard as compared to
100% when proﬁling and testing on the same keyboard. This
issue is popularly known as portability, where we consider
Fig. 1: Illustration of proﬁled side-channel attacks highlighting the actual case and the usual practice in the literature. While
template attacks were used as a classiﬁcation algorithm in the past, adoption of machine learning has been the recent trend.
Note how the measurements to attack are commonly obtained from the same device as the measurements to build the model
while disregarding the requirement to use a different attack device.
all effects due to different devices and keys between proﬁled
device and device under attack.
Deﬁnition 1: Let us denote the device under attack (target)
as B and a similar or clone device as ˆB, where the differences
between B and ˆB are due to uncontrolled variations in process,
measurement setup, or other stochastic factors ˆP . Portability
denotes all settings in which an attacker can conduct the
training on the measurement data obtained from a clone device
ˆB and import the learned knowledge L ˆB to model the actual
device under target B, under similar parameter setup P .
A. Machine Learning-based SCA
Recently, machine learning techniques have soared in pop-
ularity in the side-channel community [12], [13]. There, the
supervised learning paradigm can be considered similar to
proﬁled-based methods used in side-channel attacks. Consid-
ering Figure 1, a machine learning algorithm replaces template
attacks as a classiﬁcation algorithm.
It has been shown that machine learning techniques could
perform better than classical proﬁled side-channel attacks [13].
The researchers ﬁrst started with simpler machine learning
techniques like Random Forest and Support Vector Machines
and targets without countermeasures [14], [15], [16], [17],
[18]. Already these results suggested machine learning to be
very powerful, especially in settings where the training phase
was limited, i.e., the attacker had a relatively small number
of measurements to proﬁle. More recently, researchers also
started using deep learning, most notably multilayer perceptron
(MLP) and convolutional neural networks (CNN). Such ob-
tained results surpassed simpler machine learning techniques
but also showed remarkable performance on targets protected
with countermeasures [12], [13], [19], [20], [21], [22]. As an
example, Kim et al. used deep learning (convolutional neural
networks) to break a target protected with the random delay
countermeasure with only three measurements in the attack
phase [23].
However, the portability aspect of machine learning-based
SCA, or rather SCA in general, is not properly explored.
These factors are also not well captured in standard SCA
metrics like Normalized Inter-Class Variance (NICV [24]). As
shown later, training and testing traces with similar NICV
can have very different attack performance. In this paper,
we conduct a detailed analysis of portability issues arising
in proﬁled side-channel attacks. We start by ﬁrst establishing
a baseline case, which represents the scenario mostly used in
related works where both proﬁling and attacking is done on the
same device and using the same secret key. Later, we explore
different settings that would turn up in a realistic proﬁled SCA,
considering scenarios with separate keys and devices. We show
that this case can be orders of magnitude more difﬁcult than
the scenario where one device is used and thus undermining
the security of the target due to poor assumptions. As shown
later with experimental data, the best attack in the hardest
setting with different devices and keys needs > 20× more
samples for a successful attack, when compared to a similar
attack in the easiest setting of the same device and key, clearly
highlighting the issue of portability. We identify that one of
the key points is how the validation procedure is performed.
To tackle this problem, we propose a new model of how to
conduct training, validation, and testing, which we call the
Multiple Device Model. We then experimentally show that
this model can help assess and improve the realistic attack
efﬁciency in practical settings. The proposed model applies
to both proﬁled SCA with and without the usage of machine
learning.
B. Contributions
The main contributions of this work are:
1) We conduct a detailed analysis of portability issues con-
sidering four different portability scenarios and state-of-
the-art machine learning techniques. We show that the
realistic setting with different devices and keys in pro-
ﬁling and attacking phases is signiﬁcantly more difﬁcult
2
Device1LabelsTracestrainClassificationAlgorithmDevice2TracesLabelhypothesisClassificationAlgorithmSecretKeyRealityExpectedProfiledModelProfilingPhaseAttackPhaseTracestestthan the commonly explored setting where a single device
and key is used for both proﬁling and attack. As far as
we are aware, such an analysis has not been done before.
2) We highlight that a large part of the difﬁculty when
considering a portability scenario arises due to a sub-
optimal validation phase.
3) We propose a new model for proﬁled SCAs called the
Multiple Device Model (MDM). We show this model is
able to cope with validation problems better and, conse-
quently, achieve signiﬁcantly better attack performance.
We emphasize that the training data for SCA is closely
linked to the device properties, which means that device-
to-device variation has a major role.
4) We show how portability issues also arise when consider-
ing the EM side-channel and probe placing by human op-
erators. Subsequently, we demonstrate how MDM helps
the performance in such a scenario.
To the best of our knowledge, this is the most comprehen-
sive study on portability for side-channel attacks, uncovering
multiple new insights and techniques.
The rest of this paper is organized as follows. In Section II,
we brieﬂy discuss the proﬁled side-channel analysis. After-
ward, we introduce machine learning techniques we use in
this paper and provide a short discussion on validation and
cross-validation techniques. Section III discusses the threat
model, hyper-parameter tuning, experimental setup, and four
scenarios we investigate. In Section IV, we give results for
our experiments and provide some general observations. In
Section V, we discuss the validation phase and the possibility
of overﬁtting and underﬁtting. Afterward, we introduce the
new model for proﬁled side-channel attacks. Section VI dis-
cusses the portability scenarios arising from human errors in
the positioning of EM probes. Finally, in Section VIII, we
conclude the paper and provide several possible future research
directions.
II. BACKGROUND
In this section, we start by providing information about
proﬁled side-channel analysis. Then, we discuss machine
learning algorithms we use in our experiments and differences
between validation and cross-validation procedures.
A. Proﬁled Side-channel Analysis
Side-channel attacks use implementation related leakages
to mount an attack [3]. In the context of cryptography, they
target physical leakage from the insecure implementation of
otherwise theoretically secure cryptographic algorithms. In this
work, we focus on the most basic but still strong leakage
source, i.e., power/EM leakage.
Proﬁled side-channel attacks are the strongest type of side-
channel attacks as they assume an adversary with access to a
clone device. In the present context, the adversary can control
all the inputs, such as random plaintexts and key, to the clone
device and observe the corresponding leakage. The adversary
collects only a few traces from the attack device with an
unknown secret key. By comparing the attack traces with the
3
characterized model, the secret key is revealed. Due to the
divide and conquer approach, where small parts of the secret
key can be recovered independently, the attack becomes more
practical. Ideally, only one trace from the target device should
be enough if the characterization is perfect. However, in real-
istic scenarios, the traces are affected by noise (environmental
or intentionally introduced by countermeasures). Thus, several
traces might be needed to determine the secret key.
Template attack was the ﬁrst proﬁled side-channel at-
tack [7]. It uses mean and standard deviation of leakage mea-
surements for building characterized models (or templates).
The attack traces are then compared using the maximum like-
lihood principle. Later, machine (or deep) learning approaches
were proposed as a natural alternative to templates. In fact,
advanced machine learning algorithms like CNN were also
shown to break few side-channel countermeasures like random
jitter [13]. The template attack is known to be optimal from an
information-theoretic perspective if ample proﬁling traces are
available. In realistic scenarios, where only limited measure-
ments with noise are available, machine learning techniques
outperform templates [19]. In this paper, we focus only on
machine learning algorithms as 1) they proved to be more
powerful than template attack in many realistic settings, and
2) there are no results for portability with machine learning.
Guessing Entropy: A common option to assess the perfor-
mance of the attacks is to use Guessing entropy (GE) [25]. The
guessing entropy metric is the average number of successive
guesses required with an optimal strategy to determine the true
value of a secret key. Here, the optimal strategy is to rank all
possible key values from the most likely one to the least likely
one. More formally, given Ta traces in the attacking phase, an
attack outputs a key guessing vector g = [g1, g2, . . . , g|K|]
in decreasing order of probability where |K| denotes the
size of the keyspace. Then, guessing entropy is the average
position of k∗
a in g over a number of experiments (we use 100
experiments). As shown in [19], standard machine learning
metrics like accuracy do not work well in a side-channel attack
as it only provides information about label predictions inde-
pendently for each sample in the testing dataset. Contrarily,
GE computes the secret key from output probability values
of class labels, cumulatively over multiple samples in testing
data. As the objective of a side-channel attack is to recover
the secret key, we use GE as the performance metric for the
rest of the paper.
B. Machine Learning