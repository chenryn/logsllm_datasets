:::
`systemctl`{.literal} 实用程序帮助管理系统服务。您可以使用
`systemctl`{.literal}
实用程序执行与不同服务相关的不同任务，如启动、停止、重新启动、启用和禁用服务、列出服务和显示系统服务状态。
这部分论述了如何使用 `systemctl`{.literal} 工具管理系统服务。
::: section
::: titlepage
# []{#managing-system-services-with-systemctl_configuring-basic-system-settings.html#service-unit-management-with-systemctl_managing-system-services-with-systemctl}使用 systemctl 进行服务单元管理 {.title}
:::
[**服务单元有助于控制系统中服务和守护进程的状态**]{.strong}。
服务单元以 `.service`{.literal} 文件扩展名结尾，如
`nfs-server.service`{.literal}。但是，在
命令中使用服务文件名时，您可以省略文件扩展名。`systemctl`{.literal}
实用程序假设 参数是服务单元。例如，要停止
`nfs-server.service`{.literal}，请输入以下命令：
``` literallayout
# systemctl stop nfs-server
```
[**此外，某些服务单元具有别名名称**]{.strong}。别名可以被短于单元，您可以使用它们而不是实际的单元名称。
要查找可用于特定单元的所有别名，请使用：
``` literallayout
# systemctl show nfs-server.service -p Names
```
::: itemizedlist
**其它资源**
-   [服务实用程序与 systemctl
    的比较](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#comparison-of-a-service-utility-with-systemctl_managing-system-services-with-systemctl){.link}
-   [列出系统服务](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#listing-system-services_managing-system-services-with-systemctl){.link}
-   [显示系统服务状态](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#displaying-system-service-status_managing-system-services-with-systemctl){.link}
-   [启动系统服务](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#starting-a-system-service_managing-system-services-with-systemctl){.link}
-   [重启系统服务](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings#restarting-a-system-service_managing-system-services-with-systemctl){.link}
-   [启用系统服务](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#enabling-a-system-service_managing-system-services-with-systemctl){.link}
-   [禁用系统服务](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#disabling-a-system-service_managing-system-services-with-systemctl){.link}
-   [停止系统服务](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#stopping-a-system-service_managing-system-services-with-systemctl){.link}
:::
:::
::: section
::: titlepage
# []{#managing-system-services-with-systemctl_configuring-basic-system-settings.html#comparison-of-a-service-utility-with-systemctl_managing-system-services-with-systemctl}服务工具与 systemctl 的比较 {.title}
:::
本节显示了服务实用程序和 `systemctl`{.literal} 命令的用法之间的比较。
::: table
[]{#managing-system-services-with-systemctl_configuring-basic-system-settings.html#tabl-comparison-of-a-service-utility-with-systemctl}
**表 14.1. service 工具程序和 systemctl 的比较**
::: table-contents
+----------------------+----------------------+----------------------+
| service              | systemctl            | 描述                 |
+:=====================+:=====================+:=====================+
| `service  start`{.literal} | ystemctl start .service`{.literal} |                      |
+----------------------+----------------------+----------------------+
| `service  stop`{.literal} | systemctl stop .service`{.literal} |                      |
+----------------------+----------------------+----------------------+
| `service  restart`{.literal} | temctl restart .service`{.literal} |                      |
+----------------------+----------------------+----------------------+
| `service  co   | `systemc             | 仅在运行时重启服务。 |
| ndrestart`{.literal} | tl try-restart .service`{.literal} |                      |
+----------------------+----------------------+----------------------+
| `service  reload`{.literal} | stemctl reload .service`{.literal} |                      |
+----------------------+----------------------+----------------------+
| `service  status`{.literal} | stemctl status .service`{.literal} |                      |
|                      |                      |                      |
|                      | `syste               |                      |
|                      | mctl is-active .service`{.literal} |                      |
+----------------------+----------------------+----------------------+
| `service --s         | `systemctl li        | 显示所有服务的状态。 |
| tatus-all`{.literal} | st-units --type serv |                      |
|                      | ice --all`{.literal} |                      |
+----------------------+----------------------+----------------------+
:::
:::
:::
::: section
::: titlepage
# []{#managing-system-services-with-systemctl_configuring-basic-system-settings.html#listing-system-services_managing-system-services-with-systemctl}列出系统服务 {.title}
:::
您可以列出所有当前载入的服务单元，以及所有可用服务单元的状态。
::: itemizedlist
**流程**
-   要列出所有当前载入的服务单元，请输入：
    ``` literallayout
    $ systemctl list-units --type service
    UNIT                     LOAD   ACTIVE SUB     DESCRIPTION
    abrt-ccpp.service        loaded active exited  Install ABRT coredump hook
    abrt-oops.service        loaded active running ABRT kernel log watcher
    abrtd.service            loaded active running ABRT Automated Bug Reporting Tool
    ----
    systemd-vconsole-setup.service loaded active exited  Setup Virtual Console
    tog-pegasus.service            loaded active running OpenPegasus CIM Server
    LOAD   = Reflects whether the unit definition was properly loaded.
    ACTIVE = The high-level unit activation state, i.e. generalization of SUB.
    SUB    = The low-level unit activation state, values depend on unit type.
    46 loaded units listed. Pass --all to see loaded but inactive units, too.
    To show all installed unit files use 'systemctl list-unit-files'
    ```
    默认情况下，`systemctl list-units`{.literal}
    命令只显示活跃的单位。对于每个服务单元文件，命令会显示：
    ::: itemizedlist
    -   `UNIT`{.literal} ：其全名
    -   `LOAD`{.literal} ：是否载入了单元文件的信息
    -   `ACTIVE`{.literal}\\ `SUB`{.literal}
        ：其高级别和低级单元文件激活状态
    -   `DESCRIPTION`{.literal}: 简短描述
    :::
-   要 [**列出所有载入的单元，无论它们的状态**]{.strong} 如何，使用
    `--all`{.literal} 或 `-a`{.literal} 命令行选项输入以下命令：
    ``` literallayout
    $ systemctl list-units --type service --all
    ```
-   [**要列出所有可用服务单元的状态（已启用/禁用**]{.strong}），请输入：
    ``` literallayout
    $ systemctl list-unit-files --type service
    UNIT FILE                               STATE
    abrt-ccpp.service                       enabled
    abrt-oops.service                       enabled
    abrtd.service                           enabled
    ...
    wpa_supplicant.service                  disabled
    ypbind.service                          disabled
    208 unit files listed.
    ```
    对于每个服务单元，这个命令会显示：
    ::: itemizedlist
    -   `UNIT FILE`{.literal} ：其全名
    -   `STATE`{.literal} ：服务单元是启用还是禁用的信息
    :::
:::
::: itemizedlist
**其它资源**
-   [显示系统服务状态](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#displaying-system-service-status_managing-system-services-with-systemctl){.link}
:::
:::
::: section
::: titlepage
# []{#managing-system-services-with-systemctl_configuring-basic-system-settings.html#displaying-system-service-status_managing-system-services-with-systemctl}显示系统服务状态 {.title}
:::
您可以检查任何服务单元来获取其详细信息，并验证服务的状态是启用还是正在运行。您还可以查看排序在特定服务单元前后启动的服务。
::: itemizedlist
**流程**
-   要显示与系统服务对应的服务单元的详细信息，请输入：
    ``` literallayout
    $ systemctl status .service
    ```
    将 [*\ 替换为您要检查的服务单元的名称*]{.emphasis} （例如：
    `gdm`{.literal}）。
    此命令显示所选服务单元的名称，后跟其简短描述，并在 [Available
    service
    单元信息](#managing-system-services-with-systemctl_configuring-basic-system-settings.html#tabl-Managing_Services_with_systemd-Services-Status_managing-system-services-with-systemctl "表 14.2. 可用的服务单元信息"){.link}
    中介绍一个或多个字段（如果由 `root`{.literal}
    用户执行），以及最新的日志条目。
    ::: table
    []{#managing-system-services-with-systemctl_configuring-basic-system-settings.html#tabl-Managing_Services_with_systemd-Services-Status_managing-system-services-with-systemctl}
    **表 14.2. 可用的服务单元信息**
    ::: table-contents
      项                     描述
      ---------------------- --------------------------------------------------------------------------
      `Loaded`{.literal}     是否载入了服务单元、到这个单元文件的绝对路径，以及是否启用该单位的信息。
      `Active`{.literal}     服务单元是否在运行的信息，后面有一个时间戳。
      `Main PID`{.literal}   对应系统服务的 PID 及其名称。
      `Status`{.literal}     相关系统服务的额外信息。
      `Process`{.literal}    有关相关进程的附加信息。
      `CGroup`{.literal}     有关相关控制组(`cgroups)`{.literal}的其他信息。
    :::
    :::
    ::: example
    []{#managing-system-services-with-systemctl_configuring-basic-system-settings.html#idm140142156674592}
    **例 14.1. 显示服务状态**
    ::: example-contents
    GNOME 显示管理器的服务单元名为
    `gdm.service`{.literal}。要确定这个服务单元的当前状态，在 shell
    提示下键入以下内容：
    ``` literallayout
    # systemctl status gdm.service
    gdm.service - GNOME Display Manager
       Loaded: loaded (/usr/lib/systemd/system/gdm.service; enabled)
       Active: active (running) since Thu 2013-10-17 17:31:23 CEST; 5min ago
     Main PID: 1029 (gdm)
       CGroup: /system.slice/gdm.service
               ├─1029 /usr/sbin/gdm
               ├─1037 /usr/libexec/gdm-simple-slave --display-id /org/gno...
               └─1047 /usr/bin/Xorg :0 -background none -verbose -auth /r...
    Oct 17 17:31:23 localhost systemd[1]: Started GNOME Display Manager.
    ```
    :::
    :::
-   要只验证特定的服务单元是否正在运行，请输入：
    ``` literallayout
    $ systemctl is-active .service
    ```
-   要确定是否启用了特定的服务单元，请输入：
    ``` literallayout
    $ systemctl is-enabled .service
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    `如果`{.literal} 指定的服务单元正在运行或已启用，systemctl
    ` is-active`{.literal} 和 systemctl is-enabled``{=html}
    都会返回退出状态。
    :::
-   要确定在指定服务单元前排序哪些服务启动，请输入：
    ``` literallayout
    # systemctl list-dependencies --after .service
    ```
    在命令中将 [*\ 替换为服务的名称*]{.emphasis}。例如，要查看在
    `gdm`{.literal} 之前排序启动的服务列表，请输入：
    ::: informalexample
    ``` literallayout
    # systemctl list-dependencies --after gdm.service
    gdm.service
    ├─dbus.socket
    ├─getty@tty1.service
    ├─livesys.service
    ├─plymouth-quit.service
    ├─system.slice
    ├─systemd-journald.socket
    ├─systemd-user-sessions.service
    └─basic.target
    [output truncated]
    ```
    :::
-   要确定在指定服务单元后排序哪些服务启动，请输入：
    ``` literallayout
    # systemctl list-dependencies --before .service
    ```
    在命令中将 [*\ 替换为服务的名称*]{.emphasis}。例如，要查看在
    `gdm`{.literal} 之后排序启动的服务列表，请输入：
    ::: informalexample
    ``` literallayout
    # systemctl list-dependencies --before gdm.service
    gdm.service
    ├─dracut-shutdown.service
    ├─graphical.target
    │ ├─systemd-readahead-done.service
    │ ├─systemd-readahead-done.timer
    │ └─systemd-update-utmp-runlevel.service
    └─shutdown.target
      ├─systemd-reboot.service
      └─final.target
        └─systemd-reboot.service
    ```
    :::
:::
::: itemizedlist
**其它资源**
-   [列出系统服务](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#listing-system-services_managing-system-services-with-systemctl){.link}
:::
:::
::: section
::: titlepage
# []{#managing-system-services-with-systemctl_configuring-basic-system-settings.html#positive-and-negative-service-dependencies_managing-system-services-with-systemctl}正向和负服务依赖项 {.title}
:::
在 `systemd`{.literal}
中，服务之间存在正和负的依赖关系。[**启动特定的服务可能需要启动一个或多个其他服务（正依赖项[]{.strong}）或停止一个或多个服务（负依赖项**]{.strong}）。
当您尝试启动新服务时，`systemd 会在`{.literal}
不向用户明确通知的情况下自动解析所有依赖项。这意味着，如果您已在运行服务，并且您尝试使用负依赖项启动另一个服务，则第一个服务会自动停止。
例如，如果您运行 `postfix`{.literal} 服务，并且您尝试启动
`sendmail`{.literal} 服务，`systemd`{.literal} 首先会自动停止
`postfix`{.literal}，因为这两个服务彼此冲突且无法在同一个端口上运行。
::: itemizedlist
**其它资源**
-   [启动系统服务](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#starting-a-system-service_managing-system-services-with-systemctl){.link}
:::
:::
::: section
::: titlepage
# []{#managing-system-services-with-systemctl_configuring-basic-system-settings.html#starting-a-system-service_managing-system-services-with-systemctl}启动系统服务 {.title}
:::
您可以使用 `start`{.literal} 命令在当前会话中启动系统服务。您必须具有
`root`{.literal} 访问权限，因为启动服务可能会影响操作系统的状态。
::: itemizedlist
**流程**
-   要启动与系统服务对应的所选服务单元，以 `root`{.literal}
    用户身份输入以下命令：
    ``` literallayout
    # systemctl start .service
    ```
    将 [*\ 替换为您要启动的服务单元的名称*]{.emphasis} （例如
    `httpd.service`{.literal}）。
    ::: example
    []{#managing-system-services-with-systemctl_configuring-basic-system-settings.html#idm140142135238720}
    **例 14.2. 启动 httpd.service**
    ::: example-contents