4.1.10. 线程基本方法 .............................................................................................................................. 72
4.1.10.1. 线程等待（wait） ............................................................................................................................... 73
4.1.10.2. 线程睡眠（sleep） ............................................................................................................................. 73
4.1.10.3. 线程让步（yield） .............................................................................................................................. 73
4.1.10.4. 线程中断（interrupt） ........................................................................................................................ 73
4.1.10.5. Join等待其他线程终止 ...................................................................................................................... 74
4.1.10.6. 为什么要用join()方法？ .................................................................................................................... 74
4.1.10.7. 线程唤醒（notify） ............................................................................................................................. 74
4.1.10.8. 其他方法： .......................................................................................................................................... 74
4.1.11. 线程上下文切换 .......................................................................................................................... 75
4.1.11.1. 进程 ...................................................................................................................................................... 75
4.1.11.2. 上下文 .................................................................................................................................................. 75
4.1.11.3. 寄存器 .................................................................................................................................................. 75
4.1.11.4. 程序计数器 .......................................................................................................................................... 75
4.1.11.5. PCB-“切换桢” ................................................................................................................................. 75
4.1.11.6. 上下文切换的活动： .......................................................................................................................... 76
4.1.11.7. 引起线程上下文切换的原因 .............................................................................................................. 76
4.1.12. 同步锁与死锁 .............................................................................................................................. 76
4.1.12.1. 同步锁 .................................................................................................................................................. 76
4.1.12.2. 死锁 ...................................................................................................................................................... 76
4.1.13. 线程池原理 .................................................................................................................................. 76
4.1.13.1. 线程复用 .............................................................................................................................................. 76
4.1.13.2. 线程池的组成 ...................................................................................................................................... 76
4.1.13.3. 拒绝策略 .............................................................................................................................................. 78
4.1.13.4. Java线程池工作过程 ......................................................................................................................... 78
4.1.14. JAVA阻塞队列原理.................................................................................................................... 79
4.1.14.1. 阻塞队列的主要方法 .......................................................................................................................... 80
插入操作： ............................................................................................................................................................ 80
获取数据操作： .................................................................................................................................................... 81
4.1.14.2. Java中的阻塞队列 ............................................................................................................................. 81
4.1.14.3. ArrayBlockingQueue（公平、非公平） ....................................................................................... 82
4.1.14.4. LinkedBlockingQueue（两个独立锁提高并发） ......................................................................... 82
4.1.14.5. PriorityBlockingQueue（compareTo排序实现优先）.............................................................. 82
4.1.14.6. DelayQueue（缓存失效、定时任务 ） .......................................................................................... 82
4.1.14.7. SynchronousQueue（不存储数据、可用于传递数据） .............................................................. 83
4.1.14.8. LinkedTransferQueue...................................................................................................................... 83
13/04/2018 Page 4 of 283
4.1.14.9. LinkedBlockingDeque ..................................................................................................................... 83
4.1.15. CyclicBarrier、CountDownLatch、Semaphore的用法 ........................................................ 84
4.1.15.1. CountDownLatch（线程计数器 ） ................................................................................................ 84
4.1.15.2. CyclicBarrier（回环栅栏-等待至barrier状态再全部同时执行） ............................................... 84
4.1.15.3. Semaphore（信号量-控制同时访问的线程个数） ....................................................................... 85
4.1.16. volatile关键字的作用（变量可见性、禁止重排序） ............................................................. 87
变量可见性 ............................................................................................................................................................ 87
禁止重排序 ............................................................................................................................................................ 87
比sychronized更轻量级的同步锁 ..................................................................................................................... 87
适用场景 ................................................................................................................................................................ 87
4.1.17. 如何在两个线程之间共享数据 ................................................................................................... 88
将数据抽象成一个类，并将数据的操作作为这个类的方法 ............................................................................. 88
Runnable对象作为一个类的内部类 .................................................................................................................. 89
4.1.18. ThreadLocal作用（线程本地存储）........................................................................................ 90
ThreadLocalMap（线程的一个属性） .............................................................................................................. 90
使用场景 ................................................................................................................................................................ 91
4.1.19. synchronized和ReentrantLock的区别 .................................................................................. 91
4.1.19.1. 两者的共同点： .................................................................................................................................. 91
4.1.19.2. 两者的不同点： .................................................................................................................................. 92
4.1.20. ConcurrentHashMap并发 ......................................................................................................... 92
4.1.20.1. 减小锁粒度 .......................................................................................................................................... 92
4.1.20.2. ConcurrentHashMap分段锁 .......................................................................................................... 92
ConcurrentHashMap是由Segment数组结构和HashEntry数组结构组成 ................................................. 93
4.1.21. Java中用到的线程调度 ............................................................................................................. 93
4.1.21.1. 抢占式调度： ...................................................................................................................................... 93
4.1.21.2. 协同式调度： ...................................................................................................................................... 93
4.1.21.3. JVM的线程调度实现（抢占式调度） ............................................................................................. 94
4.1.21.4. 线程让出cpu的情况： ..................................................................................................................... 94
4.1.22. 进程调度算法 .............................................................................................................................. 94
4.1.22.1. 优先调度算法 ...................................................................................................................................... 94
4.1.22.2. 高优先权优先调度算法 ...................................................................................................................... 95
4.1.22.3. 基于时间片的轮转调度算法 .............................................................................................................. 96
4.1.23. 什么是CAS（比较并交换-乐观锁机制-锁自旋） .................................................................. 96
4.1.23.1. 概念及特性 .......................................................................................................................................... 96
4.1.23.2. 原子包 java.util.concurrent.atomic（锁自旋） ........................................................................... 97
4.1.23.3. ABA问题 ............................................................................................................................................. 98
4.1.24. 什么是 AQS（抽象的队列同步器） ......................................................................................... 98
Exclusive独占资源-ReentrantLock ................................................................................................................... 99
Share共享资源-Semaphore/CountDownLatch ............................................................................................... 99
同步器的实现是ABS核心（state资源状态计数） ....................................................................................... 100
ReentrantReadWriteLock实现独占和共享两种方式 ..................................................................................... 100
5. JAVA基础 .......................................................................................................................................... 101
5.1.1. JAVA异常分类及处理 .............................................................................................................. 101
5.1.1.1. 概念 .................................................................................................................................................... 101
5.1.1.2. 异常分类 ............................................................................................................................................ 101
Error ..................................................................................................................................................................... 101
Exception（RuntimeException、CheckedException） ........................................................................... 101
5.1.1.3. 异常的处理方式 ................................................................................................................................ 102
遇到问题不进行具体处理，而是继续抛给调用者 （throw,throws） ......................................................... 102
try catch 捕获异常针对性处理方式 .................................................................................................................. 102
5.1.1.4. Throw和throws的区别： ............................................................................................................ 102
13/04/2018 Page 5 of 283
位置不同 .............................................................................................................................................................. 102
功能不同： .......................................................................................................................................................... 102
5.1.2. JAVA反射 ................................................................................................................................. 103
5.1.2.1. 动态语言 ............................................................................................................................................ 103
5.1.2.2. 反射机制概念 （运行状态中知道类所有的属性和方法） ............................................................ 103
5.1.2.3. 反射的应用场合 ................................................................................................................................ 103
编译时类型和运行时类型 .................................................................................................................................. 103
的编译时类型无法获取具体方法 ...................................................................................................................... 104
5.1.2.4. Java反射API .................................................................................................................................... 104
反射API用来生成JVM中的类、接口或则对象的信息。 ............................................................................ 104
5.1.2.5. 反射使用步骤（获取Class对象、调用对象方法） ..................................................................... 104
5.1.2.6. 获取Class对象的3种方法 ............................................................................................................ 104
调用某个对象的getClass()方法 ....................................................................................................................... 104
调用某个类的class属性来获取该类对应的Class对象 ................................................................................ 104
使用Class类中的forName()静态方法(最安全/性能最好) ............................................................................ 104
5.1.2.7. 创建对象的两种方法 ........................................................................................................................ 105
Class对象的newInstance() ............................................................................................................................. 105
调用Constructor对象的newInstance() .......................................................................................................... 105
5.1.3. JAVA注解 ................................................................................................................................. 106
5.1.3.1. 概念 ........................................................................................................................................................ 106
5.1.3.2. 4种标准元注解...................................................................................................................................... 106
@Target修饰的对象范围 ................................................................................................................................. 106
@Retention定义 被保留的时间长短 ............................................................................................................... 106
@Documented描述-javadoc ................................................................................................................................ 106
@Inherited阐述了某个被标注的类型是被继承的 .............................................................................................. 106
5.1.3.3. 注解处理器............................................................................................................................................. 107
5.1.4. JAVA内部类 ............................................................................................................................. 109
5.1.4.1. 静态内部类............................................................................................................................................. 109
5.1.4.2. 成员内部类............................................................................................................................................. 110
5.1.4.3. 局部内部类（定义在方法中的类） ..................................................................................................... 110
5.1.4.4. 匿名内部类（要继承一个父类或者实现一个接口、直接使用new来生成一个对象的引用） ..... 111
5.1.5. JAVA泛型 ................................................................................................................................. 112
5.1.5.1. 泛型方法（） ............................................................................................................................. 112
5.1.5.2. 泛型类 ............................................................................................................................................. 112
5.1.5.3. 类型通配符? .......................................................................................................................................... 113
5.1.5.4. 类型擦除 ................................................................................................................................................ 113
5.1.6. JAVA序列化(创建可复用的Java对象) ................................................................................. 113
保存(持久化)对象及其状态到内存或者磁盘 .................................................................................................... 113
序列化对象以字节数组保持-静态成员不保存 ................................................................................................. 113
序列化用户远程对象传输 .................................................................................................................................. 113
Serializable实现序列化 .................................................................................................................................... 113
ObjectOutputStream和ObjectInputStream对对象进行序列化及反序列化............................................... 113
writeObject 和 readObject自定义序列化策略 ................................................................................................ 113
序列化 ID............................................................................................................................................................. 113
序列化并不保存静态变量 .................................................................................................................................. 114
序列化子父类说明 .............................................................................................................................................. 114
Transient 关键字阻止该变量被序列化到文件中 ............................................................................................ 114
5.1.7. JAVA复制 ................................................................................................................................. 114
5.1.7.1. 直接赋值复制 ......................................................................................................................................... 114
5.1.7.2. 浅复制（复制引用但不复制引用的对象） ..................................................................................... 114
5.1.7.3. 深复制（复制对象和其应用对象） ................................................................................................. 115
5.1.7.4. 序列化（深clone一中实现） ........................................................................................................ 115
6. SPRING 原理 ..................................................................................................................................... 116
6.1.1. Spring 特点 ................................................................................................................................ 116
6.1.1.1. 轻量级 ................................................................................................................................................ 116
13/04/2018 Page 6 of 283
6.1.1.2. 控制反转 ............................................................................................................................................ 116
6.1.1.3. 面向切面 ............................................................................................................................................ 116
6.1.1.4. 容器 .................................................................................................................................................... 116
6.1.1.5. 框架集合 ............................................................................................................................................ 116
6.1.2. Spring 核心组件 ........................................................................................................................ 117
6.1.3. Spring 常用模块 ........................................................................................................................ 117
6.1.4. Spring 主要包 ............................................................................................................................ 118
6.1.5. Spring 常用注解 ........................................................................................................................ 118
6.1.6. Spring 第三方结合 .................................................................................................................... 119
6.1.7. Spring IOC原理 ........................................................................................................................ 120
6.1.7.1. 概念 ........................................................................................................................................................ 120
6.1.7.2. Spring容器高层视图 ............................................................................................................................ 120
6.1.7.3. IOC容器实现 ......................................................................................................................................... 120
BeanFactory-框架基础设施 .............................................................................................................................. 120
1.1..1.1.1 BeanDefinitionRegistry注册表................................................................................................. 121
1.1..1.1.2 BeanFactory 顶层接口 .............................................................................................................. 121
1.1..1.1.3 ListableBeanFactory ................................................................................................................. 121
1.1..1.1.4 HierarchicalBeanFactory父子级联.......................................................................................... 121
1.1..1.1.5 ConfigurableBeanFactory ......................................................................................................... 121
1.1..1.1.6 AutowireCapableBeanFactory自动装配 ................................................................................ 122
1.1..1.1.7 SingletonBeanRegistry运行期间注册单例Bean ................................................................... 122
1.1..1.1.8 依赖日志框框 ............................................................................................................................. 122
ApplicationContext面向开发应用 .................................................................................................................... 122
WebApplication体系架构 ................................................................................................................................. 123
6.1.7.4. Spring Bean 作用域 .............................................................................................................................. 123
singleton：单例模式（多线程下不安全） ...................................................................................................... 123
prototype:原型模式每次使用时创建 ................................................................................................................ 124
Request：一次request一个实例 .................................................................................................................... 124
session ................................................................................................................................................................ 124
global Session .................................................................................................................................................... 124
6.1.7.5. Spring Bean 生命周期 .......................................................................................................................... 124
实例化 .................................................................................................................................................................. 124
IOC依赖注入 ...................................................................................................................................................... 124
setBeanName实现 ............................................................................................................................................ 124
BeanFactoryAware实现 ................................................................................................................................... 124
ApplicationContextAware实现......................................................................................................................... 125
postProcessBeforeInitialization接口实现-初始化预处理 .......................................................................... 125
init-method .......................................................................................................................................................... 125
postProcessAfterInitialization ........................................................................................................................... 125
Destroy过期自动清理阶段 ............................................................................................................................... 125