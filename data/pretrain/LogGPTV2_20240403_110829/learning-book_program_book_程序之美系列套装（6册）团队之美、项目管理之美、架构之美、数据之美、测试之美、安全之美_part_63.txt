这样的环境中工作可不是一件容易事，即使是搬到南面去也没有改
善。你们似乎面临着一些真正的困难，但你们编写出了非常大量的
代码，而且据我所知，所有代码都是可以运行的。
Stan：让我尽可能简洁地回答这两个问题，我们也许能够找出答
案。第一，我们就像是服了兴奋剂一样拼命工作，什么都自己干，
第二，团队之所以能够待在一起，是因为每一天都像是在参加喜剧
巡演的即兴演出。你得演好自己的戏，那挺有趣的。如果你说错
话，对不起，你完蛋了。
344
---
## Page 346
Andrew：仅有超乎常人的努力是不够的。在我待过的一些团队中，
大家工作很努力，其产出却毫无价值。事实上，就我过去所见过的
一些团队，他们越是努力地工作，成效就越低，因为他们总是在慌
乱的最后一刻才急匆匆地赴工，产出物无法运转。而你们团队则是
另一幅景象。一家有名的能源企业每天都在使用你们的软件来管理
其核心业务，甚至成为他们运营不可或缺的部分。所以，只有勤奋
工作是不够的。我想知道，除了勤奋工作，还需要些什么。
Mark：我想其中部分原因是，我们相互之间的技能重合之处不多，
相互也不存在竞争，因此，工程师的自负并没有影响到代码那个级
别。如果存在这方面的问题，那么C$倒算得上一个。他狂妄自大，
不容冒犯，这也从另外一个角度验证了我刚才所说的话。
寻找问题的解决方案时大家没有什么争议。我认为我们的人员配比
刚好够完成任务，做前瞻性工作的人手也足够，他们会发现“这太
糟糕了，我们需要做得更好才行。如果做不到，那可就惨了。"可
见我们对于痛苦也是很敏感的。
Stan：但你所说的自负并没有影响到我们的代码。即使是CS，那个
宣称自已是东海岸的世界顶级SQL程序员的家伙，也能够接受这一
点。在那次隐藏文本框事件后，他受到了大量的拌击。
Andrew：隐藏文本框事件是指什么？
Stan：当我们开始着手开发Candygram的时候，已经有一个2.5版本
了。（等会儿我们再讲Turducken的故事）。Candygram2.5是基于VB
4.0的程序。我和Mark阅读代码后发现，到处都是用来存储状态值的
隐藏文本框。我们立刻就找到C$，开始取笑他一—“难道你不知道
有表单级变量吗？”他当然是被气得够呛。很显然我们需要做些代
码清理工作。他总是找借口，说是用Access2.0就得这么做，因为软
件缺陷的缘故，一定情况下变量会丢失其状态值，影响还会延续。
Mark：我觉得他就是懒，使用隐藏文本框内建的数据绑定功能，就
用不着写那一两行代码了。
Stan：大家都能并明地接受新事物。有时候在设计讨论中会被大家
弄得灰头土脸，但都能坦然接受。也许有人不承认，但协同工作方
式让每个人都学到了很多东西。
345
---
## Page 347
直到我们解决了FriarTuck的问题才出现这种情况的。是他拖了大家
的后腿。
Mark：我认为这就是最重要的。在巅峰时期，我们没有人是短板。
而FriarTuck却是个笨蛋。他做事情很不上道，把参与的项目搞得一
团糟。凡事有他在搅和，你就要干更多的活，因为他不仅会扰乱你
的工作，而且你还得花时间去修复他的工作。他让你觉得他正在忙
正事，等要拿出成果的时候，你才发现你得为他的所有工作修补漏
洞。你还会受到他的拖累，因为他的设计方案太糟糕了，而后期维
护是你做的。
等我们摆脱他以及其他一两个边缘人物之后，剩下的就是一些让人
发自内心尊敬的人。每个人都有自己擅长的领域，有的人还很有天
分。再也没有什么让人灰心丧气的笨蛋了。摆脱掉这些拖后腿的家
伙后，如果你要是做的事情太少，那么自已都会觉得内疚。因为你
环顾四周会发现所有人都忙得不亦乐乎，于是你也只能努力工作。
Stan：有件事非常出名，CS会时不时地提起来。在Candygram项目的
早期，C$并会讨论每个人都应当遵守的代码规范。之前大家为此争
执不休，于是C$就直接拍板沿用已有规范。日程上要讨论的规范细
节并不多，大约是七八项。我和Mark关心如何正确地遵守这些规
范，而FriarTuck基本上对所有规范都持反对意见。于是召开了这次
会议。会上C$提出了八个事项。我们都很满意，因为都是些代码大
全一类很基本的东西，正常人都会同意的，偏偏FriarTuck不这样
想。他根据每一项的最少输入量来进行评估，因为他最关心的是减
少输入量。他醉心于句法相关的骇客使俩，只要它能减少敲键次
数。
会议并始了，大家谈论达成目标的方式，以及应该使用什么规范。
C$一直很强调代码规范。谈到代码规范时他的态度很强硬，他一直
很讨厌大家以不同的方式工作，因为那样难以维护。将近两个小时
后我们讨论得八九不离十并准备结束会议了，C$问大家还有没有什
么想说的。Tuck站起来说道：“我不喜欢洗手间里的气味，我不喜欢
那里的空气清新剂，我很讨厌那种浆果香味。"C$被气得涨红了
脸，回答到：“听着，这是我们自己花钱买的。商店里就只有这东
西。谁还有正事要讲的？”简言之，这就是FriarTuck。
Andrew：然后就把他解雇了？
346
---
## Page 348
Mark：正是从那时起，事情变得有趣了。
CMM零级以下，或者说“过程，我们不需要没有问题的过程！”
使命宣言：为客户提供增强其客户关系的科技前沿产品，帮助他们
取得竞争优势。
我们早期所用的软件并发实践很原始，说它是原始的都嫌用词太
轻。好几个月的缓慢进展之后，我们软件并发的技术所达到的层
次，和Kubrick担任主角的《2001太空漫游》开篇所描述的猴子群很
相似，同样发生哀咳声，同样摸不着头脑。值得欣慰的是，我看到
了从恶魔手中获得解救的一丝曙光，那就是版本控制的强大力量。
从一开始我们就对VB代码使用了版本控制。但是，我们业务逻辑的
绝大部分是T-SQL代码一—10万行之多，在我们的开发数据库中仍
然是未保存状态。SQL变更管理流程起于C$，止于CS。所有的变更
都必须经过他过目。大家只能认为他自有妙计，所以才这么疯狂。
别忘了，他可是自称为匹兹堡（或者说整个东海岸）最伟大的SQL
Server开发者。按他说的，他并不是很自负。他常常提起一个并发
者兼技术专栏作家的故事，“他本可以取得更大的成就，可惜却在
驾驶雪地车时撞树身亡了。"标志性地爆笑几声后，他会颇为犹豫
地说：“我觉得他的家庭太可怜了，他可是三个孩子的爹啊。”
我们甚至都很少能够知道需要我们做些什么。[读下面这段引文时，
想一想印第安纳波利斯小马主教练JimMora的声音]“详细的规格说
明书！？详细的规格说明书！？”还好我们可以进行深入细致的交
谈。C$一直在行动，显得急冲冲的。仅靠人与人的交流不足以跟上
他思维的速度。只要有时间，他都会写邮件告诉你应该做什么事
情。如果没有收到邮件，幸运的话你也许会接到电话指示。和其他
人一样，我知道而且抱怨过流程上的很多缺点，但大家都无权采取
单方面行动。大多数团队成员都为Edsel系统工作，这是个管理石油
开采合作关系的系统。这个应用程序的很大一部分设计都要求参考
某个AS/400应用程序的已有功能，可我们谁都没有见过这个应用程
序，也无法访问它。
背地里，我还在坚持着等待一份计划。或许我们只需要每天埋头苦
干就好了，就像第二次世界大战中布莱切利公园里的联军密码分析
专家一样。他们负责破译德军的英格玛密码，每个人只负责其中的
很小一块，看不到全局。直到某一天，整个迷局的最后一块被补
上，Hedley以及C$的壮丽蓝图才显露出来：处于技术前沿的、复合
347
---
## Page 349
式多功能计费系统，它将被称作Candygram[因为"傻鸟发明了
Candygram"]。借助于我们为Edsel搭建的技术架构，RockRidge将在
免监管能源市场的美丽新世界中占有一席之地。比较现实的是，我
们和许多其他公司一样，为立足于新兴市场而挣扎着。我们经常搞
砸。
在这样的氛围里，我们依然有理由保持乐观的心态（感谢我们的新
办公室，那里不仅仅有乐观）。Stan显露出他惊人的关赋。对我们
来说更重要的是，比他的身驱更突出的是他的个性，而且他还能编
程。团队发现了这一点，于是在RockRidge的那些日子里，他成了
重心所在。他的格子间或办公室成为了社交中心，这会持续不断地
降低他的生产效率。终于团队能够团结一致了，在加上一些新雇员
的帮助，形成了对付C$的一股有效制衡力量。改善后的团队减弱了
C$粗放风格的影响，当他无暇顾及的时候也能够填补所留下的空
缺。在取得一些成功后，信任程度被慢慢加固，这也促使C$给予了
更多的授权。他甚至偶尔会接受其他人的意见。我们前面的路还很
长，但至少我们已经开始制定流程、规范，并着手开发一套令人印
象深刻的计费系统。我们跨越了另外一个关键点。最关键的是，大
家的角色定位还未有定论时，团队的核心已经成型，让人不会去考
虑是否要离开。
Candygram的第一个客户是一家大型公共事业的小分支机构。找到
们的运气。这是销售团队为我们签下的有史以来的第二大订单，这
个机会是我们的销售经理一次在酒吧中偶然得到的。说我们运气
好，这只是部分原因。还有一个原因是，VPC就像是初恋的女友，
邻家女孩型，不那么精明。他们忍受着我们的低质软件和粗心大
意，这个真实的、上线运转的客户给了我们机会，让我们可以磨练
技艺。我实在没办法要求他们更多了。
我们没有任何可重复性发布的流程，在这方面起码有一年的差距。
最多也不过是一些批处理文件，把发布脚本应用到数据库的过程自
动化了。决定归属某个特定发布的具体内容，以及进行变更的同时
做到不破坏数据，这些都是彻头彻尾的手工流程。就算是工作在同
一个代码库上，两个并发者也不能保证得到同样的最终结果，不同
的最终产品取决于由谁构建以及在哪台电脑上构建。由此带来的后
果就是，经常丢失或配错模块和数据库对象，导致下游出现各种各
样的故障。
348
---
## Page 350
我被指派去交付最新的数据库发行版，在更新客户应用程序的时
候，我亲身体会了VPC是多么的宽容。C$派去编译数据库包的是一
个新人：叹气者（TheSighGuy,TSG），聪明、勤奋，年纪轻。在
你的眼前，可以看到罗月无情，过早地给他留下了苍老的痕迹。几
个月后，看到他大学时代的照片让我大吃一惊。他那时充满活力，
但如今看起来就像是被打蜡后放在烈日下暴晒过一般。C$让他在工
作中片刻都不得休息。他的绰号是我给取的（我们都有很多绰
号），因为如果他在附近，你很快就会听到他被激怒的叹气声。外
界压力对他的影响只占90%多一点，90%还不错。当然，你不能拿
90%来衡量飞机的安全性或与我们关系更密切的数据库代码之类的
事情。TSG是一个病态的、差劲的打字员。他的打字错误荒谬到让
人无法相信，让人不禁怀疑他是否是存心的。我曾根据他的设计工
作创建了几个对话框来实现"ColonBatch"功能。我知道设计中有错
误，但也不至于总是把"Clone"打成"Colon"吧？如果这个还可以一笑
置之，等我开始升级VPC的Candygram数据库时，可就笑不出来了。
刚开始我对他还挺有好感的，所以当天下午启动升级程序时我丝毫
没有犹豫。那是被“验证过"的。还不到几秒钟，就出现一个异常错
误，然后有张数据表变得空空如也，数据全丢了。在客户的数据库
管理员恢复数据库的时候，我一直在与TSG电话联系。找到一个敲
键错误，然后再继续。执行、出错、调试、道歉、恢复，随后的六
个小时我们一直在重复这些操作。
有件事情即使是C$也没有夸大：C$对Candygram系统的了解非常全
面，可以说是这个方面的专家。我们缺乏变更控制、规格说明书和
流程，这一切都意味着我们都得依靠他百科全书式的知识。而且这
种情况能够一直保持下去。他是唯一知道整个来龙去脉的人，所有
问题都得找他咨询。将发布流程授权后，开始一段时间绝对是灾难
性的。公司很需要钱，即使大家都知道重要功能都还远远没有完
工，我们也必须提早发布系统。这个上线系统对客户业务来说很关
键，我们却以并发并维护它为乐趣。更糟糕的是，上线后每天都冒
出一大堆的质量问题，我们的一位SQL专家去当地救火，在那里一
待就是好几个星期。时间是极其重要的，所以我们常常会直接在上
线系统上进行并发。糟糕的决策模式和资金问题互相影响，每一天
都在影响我们的努力成果。