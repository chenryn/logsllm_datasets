443/udp
No. of connections Port
2, 604, 683
1, 337, 377
1, 004, 940
764, 040
630, 907
519, 864
489, 547
195, 545
129, 435
123, 446
27015/udp
5355/udp
777/tcp
34/tcp
53/tcp
No. of connections
4, 866, 276
1, 461, 617
1, 384, 311
810, 670
805, 234
618, 537
164, 900
98, 130
96, 703
95, 490
malicious binaries. We observe, on average, 12 malicious ﬁles being hosted at a
single IP address and it is worth noting that one IP address was seen hosting
up to 468 malicious binaries. We also noticed that the Brickcom IP Camera (avg.
863 downloads/day) is more active than the Netgear router honeypot (avg. 163
downloads/day) in terms of malware downloads. We speculate that this is due to
the widely publicised article disclosing the camera’s vulnerabilities with PoCs.
3.3 IoT Device Monetisation
The ﬁnal stage of an IoT device compromise usually consists, for the attacker, in
leveraging its full control of the device to perform other nefarious activity, such
as infecting other devices to expand its botnet, launching DDoS attacks, etc.
We deﬁne the post-infection traﬃc as the traﬃc received and generated by
a honeypot excluding the intrusion and infection. The post-infection traﬃc thus
contains all potential C&C communications as well as other attacks or malicious
activity performed from the compromised honeypots. It is important to note
that the following post-infection traﬃc analysis is diﬀerent from the previous
570
P.-A. Vervier and Y. Shen
Fig. 4. Incoming and outgoing post-infection traﬃc per destination port (x-axis)
recorded at the Netgear router and Brickcom IP camera honeypots.
research eﬀorts due to the fact that we allow the malicious binaries in the real
environment and only block or rate-limit outgoing traﬃc (see Sect. 2 for the
detailed design information). Note in the following analysis we focus on the
Netgear router and Brickcom IP camera high-interaction honeypots.
High-Level Overview. We ﬁrst carry out a high-level analysis of post-infection
traﬃc by dividing it into TCP and UDP and incoming and outgoing. The goal
is to identify if the high-interaction honeypots would experience diﬀerent traf-
ﬁc volumes due to the fact that both devices, in the real world, have diﬀer-
ent computational capabilities. Our analytical results are shown in Fig. 4. It is
straightforward to notice that the router honeypot experienced more outgoing
UDP and TCP traﬃc (see Fig. 4(a) and (b)) than the IP camera honeypot. Our
interpretation of this behaviour is that the Netgear router has superior compu-
tational capabilities compared to an IP camera, hence the attackers do not need
to “throttle” the performance of the payloads. It is also interesting to note that
we observe outgoing traﬃc (on both TCP and UDP) on 65,335 diﬀerent ports
(see Fig. 4), which contrasts with the incoming traﬃc observed on only 14,560
and 5,320 ports for the Brickcom and Netgear honeypots respectively. The top
10 ports for outgoing post-infection traﬃc from both high-interaction honeypots
A View into the Emerging IoT Threat Landscape
571
Table 7. Analysis of binaries that triggered peaked post-infection traﬃc.
Peak
Malware sample
Time
Top three ports per volume of traﬃc (port
number/no. of connections)
❶ tcp (attack) Binary 1, 2, 3 and 4 2018-02-11 16:00 – 17:00 3324/tcp (117,267), 53/udp (160), 6881/udp
(75)
❷ udp (attack) Binary 5 and 6
2018-02-20 02:00 – 03:00 80/udp (172,493), 3074/udp (167,535), 100/udp
(54,772)
❸ udp (scan) Binary 7 and 8
❹ udp (scan) Binary 9, 10 and 11 2018-02-27 19:00 – 20:00 6881/udp (108), 35159/udp (100), 54680/udp
2018-02-25 17:00 – 18:00 21351/udp (79), 64031/udp (78), 3937/udp (77)
(100)
Fig. 5. Post-infection traﬃc analysis: traﬃc bursts.
are shown in Table 6. The ﬁrst thing we observe is that the top 10 ports for
outgoing traﬃc contributes to 30% of each high-interaction honeypot’s total
traﬃc. The second thing we observe is that the top three ports for outgoing
traﬃc cover port scanning (80/udp), possible C&C communications (3074/udp)
and DDoS attacks (53/udp). This traﬃc contributes to about 20% of each high-
interaction honeypot’s total traﬃc. We observed that even though there is a
diﬀerence in the volume of traﬃc between the two high-interaction honeypots,
however, in general, they show similar traﬃc patterns, e.g., 80% of connections
on ports 80/udp and 53/udp have less 10 packets and 80% of connections on
port 3074/udp have less than 20 packets.
Spiked Traﬃc Analysis. After a high-level overview of the post-infection
traﬃc, we turn our attention to the temporal analysis. As shown in Fig. 5, there
are four peaks in the traﬃc: peak ❶ is caused by a dramatic increase in TCP
traﬃc while peak ❷, ❸ and ❹ are triggered by elevated UDP traﬃc. In order to
identify the root causes of these peaks, we correlate the ﬁle downloads observed
during the infection phase (see Sect. 3) to these traﬃc peaks in order to identify
the binaries that have contributed to such spikes. Note that due to the design
philosophy of our high-interaction honeypots, we allow multiple binaries to run
at the same in the same environment and it is hard to nail down traﬃc to a single
binary. Taking this point into consideration, we slide an one-hour window along
each day of post-infection traﬃc (i.e., we obtain 24 traﬃc measurements per
572
P.-A. Vervier and Y. Shen
Table 8. Attack, scan and mixed post-infection traﬃc analysis.
Honeypot
Attack
(no./avg. ports/avg. binaries)
Scan
(no./avg. ports/avg. binaries)
Mixed
(no./avg. ports/avg. binaries)
udp
tcp
Netgear router 16/1,910/3 10/308/54
Brickcom IP
camera
12/1,371/4 12/11/8
tcp
udp
7/60,020/3 6/53,573/2
8/58,424/5 7/39,820/5
tcp
udp
2/29,307/3 0/0/0
3/37,393/6 0/0/0
day) and rank them based upon the traﬃc volume. Once we have these ranked
measurements in place, we identify the binaries that were downloaded during
the top most active windows as the root cause of this peaked traﬃc. The results,
shown in Table 7, are interesting. We noticed that the volume of traﬃc per port
for the top three ports of peak ❸ and ❹ is way smaller than that of peak ❶ and
❷. For example, we observed 3,936,628 UDP connections between 19:00–20:00
in peak ❹, yet the traﬃc on the top three ports only cover around 0.01% of
the total traﬃc observed during that hour. More interestingly, during the same
hour, we observed outgoing traﬃc on 54,721 diﬀerent ports. In contrast, in peak
❶, we only observed traﬃc on 628 diﬀerent ports, yet one port covered 96% of
the total traﬃc of that window. This observation motivates us to carry out a
detail behavioural analysis.
Behavioural Analysis. In order to obtain a better understanding of the under-
lying communications behind the post-infection traﬃc, we attempted to classify
it into three categories: (i) scanning traﬃc, (ii) attacking traﬃc and (iii) C&C
traﬃc. First of all, we focus on days where we observe more than 10K connec-
tions, for TCP and UDP separately. On each day, we identify the largest hourly
TCP and UDP traﬃc and obtain the top three ports, which are measured and
ranked by the number of connections on each port. Then, if the volume of traﬃc
on the top three ports is higher than 70% of the total hourly traﬃc, we classify
the period as an attack; if the volume is lower than 20%, we classify the period
as a scan, otherwise we consider it a mixed period. We can see from Table 8 that
both the Netgear and Brickcom honeypots show similar volume of TCP/UDP
traﬃc. It is interesting to observe that the UDP traﬃc covers a wider range of
ports in the attack scenarios then the TCP traﬃc, yet in the scan scenario, the
number of ports for TCP and UDP are comparable. This leads to our preliminary
conclusion that binaries that launched TCP attacks focused on a more limited
number of ports than those using UDP. However, it requires further proof from
binary analysis which is out of the scope of this paper. To our best knowledge,
IoTPoT [30] is the only research eﬀort that discussed how attackers monetised
the compromised devices. However, it provided limited insights into binary clus-
ters and traﬃc patterns. In this paper, we were able to quantify the relationship
between binaries and the traﬃc observed with ﬁne granularity.
Distributed Denial of Service Attacks. IoT botnets are well known to be
primarily used to launch DDoS attacks. Leveraging the classiﬁcation of traﬃc
A View into the Emerging IoT Threat Landscape
573
bursts into scan traﬃc and attack traﬃc, we next attempted to estimate the total
number of DDoS attacks launched from our honeypots. We observed a total of
41 high-volume traﬃc peaks we attributed to DDoS attacks our honeypots have
taken part of. On average each attack generated 141,962 packets and lasted
143 seconds, which gives an average of 993 packets per second. From the 41
attacks, 37 were carried out over UDP and 4 over TCP. Moreover, 38 attacks
were targeted towards a single IP address. We recorded ﬁve noticeably massive
attacks that lasted for several minutes: four DNS (53/udp) attacks at 6K packets
per second with from 25 to 54 Mb/s of traﬃc and one TCP SYN (25565/tcp)
attack at 3K packets per second with 1Mb/s of traﬃc. These ﬁve attacks were
targeted towards ﬁve diﬀerent IP addresses, one IP address each. Interestingly,
two of the IP addresses appeared to be hosting online gaming servers: one Steam
and one Minecraft server. In fact, gaming servers seem to be regular targets of
DDoS attacks as outlined by Krebs’ article [20] and Antonakakis et al.’s Mirai
study [7]. The three other IP addresses belong to two hosting providers and one
American university network.
4 Related Work
IoT Honeypots. ScriptGen by Leita et al. [22] is one of the earliest eﬀorts
in building high-interaction honeypots. It analyses the sequences of message
exchanged between attackers and real servers and automatically derives a state
machine that represents the observed interaction. In the same spirit, IoTCandy-
Jar [23] proposed a technique that captures attackers requests, then scans the
internet for real IoT devices that can respond to these requests and use machine
learning to build a model to be used in future interactions with the attackers.
However, the ethics of this approach with respect to routing traﬃc to real IoT
devices remains debatable. Guarnizo et al. [18] proposed Siphon, an architecture
to build a scalable high-interaction honeypot infrastructure backed by real IoT
devices. Given that Siphon relies on real devices, its scalability is thus intrin-
sically limited. Authors also fail to explain how they actually perform the IoT
device instrumentation and reset to clean state. Pa et al. [30] proposed IoTPoT,
a telnet-based IoT honeypot. Its core design philosophy is similar to ScriptGen.
When an incoming command is unknown, it forwards its to a set of sandbox
environments running an embedded Linux OS for diﬀerent CPU architectures.
The interaction between the attacker and the backend is modeled so that the
system can later handle the same request without interacting with the back-
end. Following this design philosophy, Wang et al. [31] proposed ThingPot, a
proof-of-concept honeypot for Philips HUE light bulbs.
Embedded Device Security and IoT Botnets. The insecurity of Internet-
connected embedded devices have been studied for many years. In 2010, Cui et
al. [15] already reported on more than 500K devices with weak or default cre-
dentials. In 2012, the Internet census powered by the IoT device-backed Carna
574
P.-A. Vervier and Y. Shen
botnet conﬁrmed this trend [3]. In parallel, researchers have also been study-
ing the security of embedded device ﬁrmware. Costin et al. performed extensive
vulnerability assessment of IoT device ﬁrmware in [12,13]. Zaddach et al. also
proposed Avatar [32] and Chen et al. proposed Firmadyne [11], both of which
provide an emulation environment for embedded devices that further enable vul-
nerability assessment of ﬁrmware images. All these studies highlight the myriad
of software vulnerabilities crippling IoT products.
The most notable work on the IoT threat landscape is the recent forensic
study of the Mirai botnet by Antonakakis et al. in [7]. By combining historical
and heterogeneous data sources they were able to reconstruct the whole history
of the infamous botnet and track its various evolutions following the release of its
source code. Pa et al. also leverages their IoTPot [30] infrastructure to analyse
telnet-based intrusion mechanisms and the behaviour of the few malware samples
they collected. Recently, Cozzi et al. [14] published a study of Linux (and Linux-
based IoT) malware describing some of the trends in their behaviour and level
of sophistication.
Our work serves as a follow up to these previous studies. First, we go beyond
the scope of the Mirai botnet and aim at providing a global picture of the current
IoT threat landscape that includes a myriad of other malware and botnets. We
leverage some of the techniques used in the study of embedded device ﬁrmware
security to build high-interaction IoT honeypots. Finally, unlike IoTPot and
ThingPot, we do not restrict ourselves to attacks targeting a particular service
or device but instead try to provide as much diversity as possible to get an
accurate view into the threat landscape.
5 Conclusion
We used six months of data collected from our honeypots and enriched with
various reputation feeds and binary analyses to report on the current threats
targeting IoT devices. For instance, we have seen that while attackers still heav-
ily rely on brute-forcing attacks against remote management interface of devices,
a worrying and increasing number of botnets are getting equipped with a suite
of exploits targeting a wide range of software vulnerabilities inside IoT device
ﬁrmware, sometimes disclosed a couple of weeks before we start seeing them in
the wild. Additionally, botnets powered by the Mirai malware appear to be dom-
inating the IoT thread landscape but other new and old players, such as Hajime
and IoT Reaper are aggressively claiming their share of the vulnerable IoT prod-
ucts. Finally, while the core business of IoT botnets is still DDoS attacks, some
emerging botnets like IoT Reaper are yet to unveil their real purpose. In sum-
mary, we are now witnessing an abrupt change in the sophistication of the IoT
threat ecosystem. We believe that, given the experience gained from studying the
traditional malware ecosystem, we now have an opportunity to better anticipate
and take proactive actions upon the evolutions of the IoT threat landscape.
A View into the Emerging IoT Threat Landscape
575
References
1. Shodan. https://www.shodan.io/
2. VirusTotal. https://www.virustotal.com/
3. Internet Census (2012). http://census2012.sourceforge.net/paper.html
4. CVE-2016-1555 (2016). https://nvd.nist.gov/vuln/detail/CVE-2016-1555
5. CVE-2016-5681 (2017). https://nvd.nist.gov/vuln/detail/CVE-2016-5681
6. CVE-2017-17107 (2017). https://nvd.nist.gov/vuln/detail/CVE-2017-17107
7. Antonakakis, M., et al.: Understanding the mirai botnet. In: USENIX Security
Symposium (2017)
8. Anubhav, A.: Agile QBot variant adds NbotLoader Netgear Bug in its new update,
July 2017. https://blog.newskysecurity.com/agile-122bf2f4e2f3
9. Anubhav, A.: Masuta : Satori creators’ second botnet weaponizes a new router
exploit, January 2018. https://blog.newskysecurity.com/masuta-satori-creators-
second-botnet-weaponizes-a-new-router-exploit-2ddc51cc52a7
10. Checkpoint: IoTroop Botnet: the full investigation, October 2017. https://research.
checkpoint.com/iotroop-botnet-full-investigation/
11. Chen, D.D., Woo, M., Brumley, D., Egele, M.: Towards automated dynamic anal-
ysis for Linux-based embedded ﬁrmware. In: NDSS, February 2016
12. Costin, A., Zaddach, J., Francillon, A., Balzarotti, D.: A large scale analysis of the
security of embedded ﬁrmwares. In: USENIX Security Symposium (2014)
13. Costin, A., Zarras, A., Francillon, A.: Automated dynamic ﬁrmware analysis at
scale: a case study on embedded web interfaces. In: ASIACCS, May 2016
14. Cozzi, E., Graziano, M., Fratantonio, Y., Balzarotti, D.: Understanding Linux mal-
ware. In: IEEE Symposium on Security and Privacy, May 2018
15. Cui, A., Stolfo, S.J.: A quantitative analysis of the insecurity of embedded network
devices: results of a wide-area scan. In: ACSAC, December 2010
16. Edwards, S., Profetis, I.: Hajime: analysis of a decentralized internet worm for IoT
devices. Rapidity Netw. (2016)
17. Embedi: enlarge your botnet with: top D-Link routers, September 2017. https://
embedi.com/blog/enlarge-your-botnet-top-d-link-routers-dir8xx-d-link-routers-
cruisin-bruisin/
18. Guarnizo, J.D., et al.: Siphon: towards scalable high-interaction physical honey-
pots. In: CPSS, April 2017
19. Kim, P.: Pwning the Dlink 850L routers and abusing the MyDlink Cloud pro-
tocol, September 2017. https://pierrekim.github.io/blog/2017-09-08-dlink-850l-
mydlink-cloud-0days-vulnerabilities.html
20. Krebs, B.: Who is Anna-Senpai, the Mirai worm author? January 2017. https://
krebsonsecurity.com/2017/01/who-is-anna-senpai-the-mirai-worm-author/
21. Kumar, M.: Advanced Malware targeting Internet of the Things and Routers,
March 2016. https://thehackernews.com/2016/03/internet-of-thing-malware.html
22. Leita, C., Mermoud, K., Dacier, M.: Scriptgen: an automated script generation
tool for honeyd. In: ACSAC, December 2005
23. Luo, T., Xu, Z., Jin, X., Jia, Y., Ouyang, X.: IoTCandyJar: towards an intelligent-
interaction honeypot for IoT devices. In: Blackhat, USA, July 2017
24. Oﬀensive Security: D-Link Devices - UPnP SOAP TelnetD command execution
(Metasploit), September 2013. https://www.exploit-db.com/exploits/28333/
25. Oﬀensive Security: Remote buﬀer overﬂow in cookie header, June 2014. https://
www.exploit-db.com/exploits/33863/
576
P.-A. Vervier and Y. Shen
26. Oﬀensive Security: D-Link DIR-890L/R - Multiple buﬀer overﬂow vulnerabilities,
November 2015. https://www.exploit-db.com/exploits/38716/
27. Oﬀensive Security: Brickcom corporation network cameras - multiple vulnerabili-
ties, April 2016. https://www.exploit-db.com/exploits/39696/
28. Oﬀensive Security: Brickcom IP Camera - credentials disclosure, July 2017.
https://www.exploit-db.com/exploits/42588/
29. Oﬀensive Security: SSD advisory - D-Link 850L multiple vulnerabilities, August
2017. https://blogs.securiteam.com/index.php/archives/3364
30. Pa, Y.M.P., Suzuki, S., Yoshioka, K., Matsumoto, T., Kasama, T., Rossow, C.:
IoTPOT: analysing the rise of IoT compromises. In: WOOT, August 2015
31. Wang, M., Santillan, J., Kuipers, F.: ThingPot: an interactive IoT honeypot (2017)
32. Zaddach, J., Bruno, L., Francillon, A., Balzarotti, D.: Avatar: a framework to
support dynamic security analysis of embedded systems’ ﬁrmwares. In: NDSS,
February 2014