I'm deploying an PyQt(5.3.2) application using py2app. Everything works fine
with 0.14.1, 0.15.0 fails at importing. As an example one can take the
following `main.py`:
    import pandas
    def main():
      x = pandas.Series([0, 1, 2])
      print(x)
    if __name__ == "__main__":
      main()
and use the default `setup.py`:
    from setuptools import setup
    import py2app
    setup(
        app=['main.py'],
        options={'py2app': {'argv_emulation': True}},
        setup_requires=['py2app'],
    )
and run `python3 setup.py py2app` to build the .app and then start the
application (Please note the example can only be runned via Terminal, since it
lacks a GUI)
In both Python 2.7.8 and 3.4.2 the .app builds fine but fails on 3.4.2 to
start and dumps (stripped to the helpful parts):
    'module' object has no attribute '__pyx_capi__'
    2014-10-22 19:36:32.784 main[26763:321107] main Error
        Traceback (most recent call last):
    File ".../dist/main.app/Contents/Resources/__     _run()
    File ".../dist/main.app/Contents/Resources/__     exec(compile(source, path, 'exec'), globals(), globals())
    File ".../dist/main.app/Contents/Resources/main.     import pandas
    File "pandas/__init__.pyc", line 7, in 
    File "pandas/tslib.pyc", line 14, in 
    File "pandas/tslib.pyc", line 10, in __load
    File "pandas/tslib.pyx", line 2839, in init pandas.tslib (pandas/tslib.c:80041)
    File "pandas/algos.pyc", line 14, in 
    File "pandas/algos.pyc", line 10, in __load
    File "pandas/algos.pyx", line 64, in init pandas.algos (pandas/algos.c:180213)
    File "pandas/lib.pyc", line 14, in 
    File "pandas/lib.pyc", line 10, in __load
    File "pandas/lib.pyx", line 1, in init pandas.lib (pandas/lib.c:78098)
        AttributeError: 'module' object has no attribute '__pyx_capi__'
If the example would run as expected it would print (again stripped):
    0    0
    1    1
    2    2
    dtype: int64