:::
::: variablelist
[/etc/lvm/lvm.conf]{.term}
:   ::: para
    由​​​​​​​工​​​​​​​具​​​​​​​读​​​​​​​取​​​​​​​的​​​​​​​中​​​​​​​央​​​​​​​配​​​​​​​置​​​​​​​文​​​​​​​件​​​​​​​。​​​​​​​
    :::
[etc/lvm/lvm\_*hosttag*.conf]{.term}
:   ::: para
    For each host tag, an extra configuration file is read if it exists:
    `lvm_hosttag.conf`{.filename}. If that file defines new tags, then
    further configuration files will be appended to the list of tiles to
    read in. For information on host tags, see [第 C.2 节
    "主​​​​​​​机​​​​​​​标​​​​​​​签​​​​​​​"](#lvm_tags.html#host_tags){.xref}.
    :::
:::
::: para
除​​​​​​​了​​​​​​​ LVM 配​​​​​​​置​​​​​​​文​​​​​​​件​​​​​​​之​​​​​​​外​​​​​​​，运​​​​​​​行​​​​​​​ LVM 的​​​​​​​系​​​​​​​统​​​​​​​会​​​​​​​包​​​​​​​含​​​​​​​以​​​​​​​下​​​​​​​可​​​​​​​影​​​​​​​响​​​​​​​ LVM
系​​​​​​​统​​​​​​​设​​​​​​​置​​​​​​​的​​​​​​​文​​​​​​​件​​​​​​​：
:::
::: variablelist
[/etc/lvm/.cache]{.term}
:   ::: para
    设​​​​​​​备​​​​​​​名​​​​​​​称​​​​​​​过​​​​​​​滤​​​​​​​器​​​​​​​缓​​​​​​​存​​​​​​​文​​​​​​​件​​​​​​​（可​​​​​​​配​​​​​​​置​​​​​​​）。​​​​​​​
    :::
[/etc/lvm/backup/]{.term}
:   ::: para
    自​​​​​​​动​​​​​​​卷​​​​​​​组​​​​​​​元​​​​​​​数​​​​​​​据​​​​​​​备​​​​​​​份​​​​​​​目​​​​​​​录​​​​​​​（可​​​​​​​配​​​​​​​置​​​​​​​）。​​​​​​​
    :::
[/etc/lvm/archive/]{.term}
:   ::: para
    自​​​​​​​动​​​​​​​卷​​​​​​​组​​​​​​​元​​​​​​​数​​​​​​​据​​​​​​​归​​​​​​​档​​​​​​​目​​​​​​​录​​​​​​​（可​​​​​​​根​​​​​​​据​​​​​​​目​​​​​​​录​​​​​​​路​​​​​​​径​​​​​​​和​​​​​​​归​​​​​​​档​​​​​​​历​​​​​​​史​​​​​​​记​​​​​​​录​​​​​​​途​​​​​​​径​​​​​​​进​​​​​​​行​​​​​​​配​​​​​​​置​​​​​​​）。​​​​​​​
    :::
[/var/lock/lvm]{.term}
:   ::: para
    在​​​​​​​单​​​​​​​主​​​​​​​机​​​​​​​配​​​​​​​置​​​​​​​这​​​​​​​，锁​​​​​​​定​​​​​​​文​​​​​​​件​​​​​​​可​​​​​​​防​​​​​​​止​​​​​​​平​​​​​​​行​​​​​​​工​​​​​​​具​​​​​​​运​​​​​​​行​​​​​​​时​​​​​​​破​​​​​​​坏​​​​​​​元​​​​​​​数​​​​​​​据​​​​​​​；而​​​​​​​在​​​​​​​群​​​​​​​集​​​​​​​中​​​​​​​，使​​​​​​​用​​​​​​​的​​​​​​​群​​​​​​​集​​​​​​​范​​​​​​​围​​​​​​​的​​​​​​​
    DLM。​​​​​​​
    :::
:::
:::
::: section
::: titlepage
# [⁠]{#config_file.html#lvmconf_file}B.2. lvm.conf 文​​​​​​​件​​​​​​​示​​​​​​​例​​​​​​​ {.title}
:::
::: para
以​​​​​​​下​​​​​​​是​​​​​​​ `lvm.conf`{.literal} 配​​​​​​​置​​​​​​​文​​​​​​​件​​​​​​​示​​​​​​​例​​​​​​​。​​​​​​​这​​​​​​​个​​​​​​​配​​​​​​​置​​​​​​​文​​​​​​​件​​​​​​​是​​​​​​​ RHEL 5.3
发​​​​​​​行​​​​​​​本​​​​​​​的​​​​​​​默​​​​​​​认​​​​​​​文​​​​​​​件​​​​​​​。​​​​​​​如​​​​​​​果​​​​​​​您​​​​​​​的​​​​​​​系​​​​​​​统​​​​​​​运​​​​​​​行​​​​​​​的​​​​​​​是​​​​​​​不​​​​​​​同​​​​​​​的​​​​​​​ RHEL 5
发​​​​​​​行​​​​​​​本​​​​​​​，有​​​​​​​些​​​​​​​默​​​​​​​认​​​​​​​设​​​​​​​置​​​​​​​可​​​​​​​能​​​​​​​不​​​​​​​同​​​​​​​。​​​​​​​
:::
``` screen
[root@tng3-1 lvm]# cat /etc/lvm/lvm.conf
# This is an example configuration file for the LVM2 system.
# It contains the default settings that would be used if there was no
# /etc/lvm/lvm.conf file.
#
# Refer to 'man lvm.conf' for further information including the file layout.
#
# To put this file in a different directory and override /etc/lvm set
# the environment variable LVM_SYSTEM_DIR before running the tools.
# This section allows you to configure which block devices should
# be used by the LVM system.
devices {
    # Where do you want your volume groups to appear ?
    dir = "/dev"
    # An array of directories that contain the device nodes you wish
    # to use with LVM2.
    scan = [ "/dev" ]
    # If several entries in the scanned directories correspond to the
    # same block device and the tools need to display a name for device,
    # all the pathnames are matched against each item in the following
    # list of regular expressions in turn and the first match is used.
    preferred_names = [ ]
    # Try to avoid using undescriptive /dev/dm-N names, if present.
    # preferred_names = [ "^/dev/mpath/", "^/dev/mapper/mpath", "^/dev/[hs]d" ]
    # A filter that tells LVM2 to only use a restricted set of devices.
    # The filter consists of an array of regular expressions.  These
    # expressions can be delimited by a character of your choice, and
    # prefixed with either an 'a' (for accept) or 'r' (for reject).
    # The first expression found to match a device name determines if
    # the device will be accepted or rejected (ignored).  Devices that
    # don't match any patterns are accepted.
    # Be careful if there there are symbolic links or multiple filesystem 
    # entries for the same device as each name is checked separately against
    # the list of patterns.  The effect is that if any name matches any 'a'
    # pattern, the device is accepted; otherwise if any name matches any 'r'
    # pattern it is rejected; otherwise it is accepted.
    # Don't have more than one filter line active at once: only one gets used.
    # Run vgscan after you change this parameter to ensure that
    # the cache file gets regenerated (see below).
    # If it doesn't do what you expect, check the output of 'vgscan -vvvv'.
    # By default we accept every block device:
    filter = [ "a/.*/" ]
    # Exclude the cdrom drive
    # filter = [ "r|/dev/cdrom|" ]
    # When testing I like to work with just loopback devices:
    # filter = [ "a/loop/", "r/.*/" ]
    # Or maybe all loops and ide drives except hdc:
    # filter =[ "a|loop|", "r|/dev/hdc|", "a|/dev/ide|", "r|.*|" ]
    # Use anchors if you want to be really specific
    # filter = [ "a|^/dev/hda8$|", "r/.*/" ]
    # The results of the filtering are cached on disk to avoid
    # rescanning dud devices (which can take a very long time).
    # By default this cache is stored in the /etc/lvm/cache directory
    # in a file called '.cache'.
    # It is safe to delete the contents: the tools regenerate it.
    # (The old setting 'cache' is still respected if neither of
    # these new ones is present.)
    cache_dir = "/etc/lvm/cache"
    cache_file_prefix = ""
    # You can turn off writing this cache file by setting this to 0.
    write_cache_state = 1
    # Advanced settings.
    # List of pairs of additional acceptable block device types found 
    # in /proc/devices with maximum (non-zero) number of partitions.
    # types = [ "fd", 16 ]
    # If sysfs is mounted (2.6 kernels) restrict device scanning to 
    # the block devices it believes are valid.
    # 1 enables; 0 disables.
    sysfs_scan = 1	
    # By default, LVM2 will ignore devices used as components of
    # software RAID (md) devices by looking for md superblocks.
    # 1 enables; 0 disables.
    md_component_detection = 1
    # By default, if a PV is placed directly upon an md device, LVM2
    # will align its data blocks with the the chunk_size exposed in sysfs.
    # 1 enables; 0 disables.
    md_chunk_alignment = 1
    # If, while scanning the system for PVs, LVM2 encounters a device-mapper
    # device that has its I/O suspended, it waits for it to become accessible.
    # Set this to 1 to skip such devices.  This should only be needed
    # in recovery situations.
    ignore_suspended_devices = 0
}
# This section that allows you to configure the nature of the
# information that LVM2 reports.
log {
    # Controls the messages sent to stdout or stderr.
    # There are three levels of verbosity, 3 being the most verbose.
    verbose = 0
    # Should we send log messages through syslog?
    # 1 is yes; 0 is no.
    syslog = 1
    # Should we log error and debug messages to a file?
    # By default there is no log file.
    #file = "/var/log/lvm2.log"
    # Should we overwrite the log file each time the program is run?
    # By default we append.
    overwrite = 0
    # What level of log messages should we send to the log file and/or syslog?
    # There are 6 syslog-like log levels currently in use - 2 to 7 inclusive.
    # 7 is the most verbose (LOG_DEBUG).
    level = 0
    # Format of output messages
    # Whether or not (1 or 0) to indent messages according to their severity
    indent = 1
    # Whether or not (1 or 0) to display the command name on each line output
    command_names = 0
    # A prefix to use before the message text (but after the command name,
    # if selected).  Default is two spaces, so you can see/grep the severity
    # of each message.
    prefix = "  "
    # To make the messages look similar to the original LVM tools use: