### Feature Request: Conditional `getInitialProps` Execution in Static Builds

**Background:**
When using `next export` to generate a static build, Next.js invokes the `getInitialProps` method on the client side before rendering the page component. This is done to provide the necessary props for the component. However, this can cause significant delays in the first paint, especially if `getInitialProps` makes large requests, as these are blocking.

**Problem:**
I would like to selectively disable the `getInitialProps` method on the client side for certain page components during the static build process. Instead, I want to use the props provided by `getInitialProps` only during the `next export` build step. 

**Rationale:**
- **Performance:** Large API requests in `getInitialProps` can delay the first paint, leading to a poor user experience.
- **Static Data:** For some pages, the data fetched in `getInitialProps` does not need to be dynamic and can be populated during the build step. Moving the API request to `componentDidMount` is not an option because it would prevent the data from being included in the static HTML.

**Current Workaround:**
To avoid invoking `getInitialProps` on the client side, I currently use a standard JSX anchor (`<a>`) to navigate to new pages. This approach, however, causes a full page refresh, which is suboptimal.

**Proposed Solution:**
Implement a feature that allows `getInitialProps` to be conditionally executed only during the `next export` build step and not on the client side for specific page components. This could be similar to how shallow routing works, but for new pages.

**Example Use Case:**
```jsx
// pages/some-page.js
const SomePage = (props) => {
  // Page component logic
};

SomePage.getInitialProps = async (ctx) => {
  // Fetch data during the build step
  const data = await fetch('https://api.example.com/data');
  return { data };
};

export default SomePage;
```

In this example, `getInitialProps` should only be called during the `next export` build step and not on the client side when the page is loaded or navigated to.

**Conclusion:**
This feature would significantly improve the performance of static builds by allowing developers to control when and where `getInitialProps` is executed, ensuring that large, non-dynamic data requests do not block the initial render on the client side.

Thank you for considering this feature request.