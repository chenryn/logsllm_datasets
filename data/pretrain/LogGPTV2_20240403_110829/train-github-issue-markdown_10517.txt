### Input Code
    const makePromise = () => {
      return new Promise((resolve) => {
        setTimeout(() => {
          resolve('FOO');
        }, 500);
      });
    };
    (async () => {
      const foo = do {
        try {
          await makePromise();
        } catch (error) {
        }
      };
      console.log('foo', foo);
    })();
### Babel Configuration (.babelrc, package.json, cli command)
    {
      "plugins": [
        "transform-async-to-generator",
        "transform-do-expressions"
      ]
    }
### Expected Behavior
Expect program to output: `foo FOO`.
### Current Behavior
Getting a run-time error:
    $ babel-node ./foo.js
    /test/foo.js:14
          return yield makePromise();
                       ^^^^^^^^^^^
    SyntaxError: Unexpected identifier
        at Object.exports.runInThisContext (vm.js:76:16)
        at Module._compile (module.js:545:28)
        at loader (/test/node_modules/babel-register/lib/node.js:144:5)
        at Object.require.extensions.(anonymous function) [as .js] (/test/node_modules/babel-register/lib/node.js:154:7)
        at Module.load (module.js:490:32)
        at tryModuleLoad (module.js:449:12)
        at Function.Module._load (module.js:441:3)
        at Function.Module.runMain (module.js:607:10)
        at /test/node_modules/babel-cli/lib/_babel-node.js:159:24
        at Object. (/test/node_modules/babel-cli/lib/_babel-node.js:160:7)
### Your Environment
software | version  
---|---  
Babel | 6.18.0  
node | v7.0.0  
npm | 3.10.8  
Operating System | macOS v16.1.0