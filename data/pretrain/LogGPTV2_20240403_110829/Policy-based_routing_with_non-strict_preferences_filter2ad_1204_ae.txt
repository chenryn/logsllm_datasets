,
1
1
{ }R
3
}
Motivated by the aforementioned examples, in this section
we present a systematic approach to formalise the notion of
higher order routing solutions, which naturally generalises
the theorems developed for ﬁrst order routing solutions. Let
(P(v, v0)) (cid:3) P(...P| {z }
P i
(P(v, v0))).
i times
It is natural to deﬁne the domains of higher order routing
solutions as in Table 1. Thus, ﬁrst order solutions are the
uni-path and multi-path solutions as in Section 2.1, whereas
second order solutions cover Examples 6-9.
Figure 15: The policy relation from Example 9 vio-
lates anti-reﬂexivity.
To be more precise on the generalisation, let us consider
Figure 16 which shows a ﬁrst order policy structure S 1 and
the correlated zeroth order policy structure S 0. It can be
easily seen that S 0 can be embedded in S 1, and S 1 can be
generated from S 1.
Now, rather than working with min(cid:3)0 , one can alterna-
tively work with inf(cid:3)1 , which is the greatest lower bound
= {P1, P2}.
as:
0
(cid:2)
∼
P
3
P
4
P
1
P
2
(a)
0S
(cid:2)1
∼
∅
{ }P
4
{ ,
P P
4
3
}
{ }P
2
{ }P
3
{ }P
1
{ ,
P P
4
1
}
{ ,
P P
2
1
}
(b)
1S
Figure 16: S 0 can be embedded in S 1, and S 1 can be
generated from S 1.
n
o
{P2}, {P1, P4}
w.r.t. (cid:5)1. For example in Figure 16, we have
min(cid:3)0 ({P2} ∪ {P1, P4}) = inf(cid:3)1
However, except for m = 1, in general, inf(cid:3)m may not coin-
cide with min(cid:3)m−1 deﬁned w.r.t. the embedded lower order
(cid:5)m−1. For example in Figure 17, we have
“n
o”
n
o
{P1}, {P2}
{{P1}}, {{P2}}
=
=
n
o
n
o
{P1},{P2}
{P1, P2},{P1, P3}
,
but inf(cid:3)2
min(cid:3)1
(cid:2)1
∼
{ }P
1
{ }P
3
{ }P
2
(cid:2)2
∼
∅
{
}P
{ }
1
{
{ ,
P P
2
1
{
}P
{ }
3
{
}P
{ }
2
},{ ,
P P
3
1
}
}
(a)
1S
(b)
2S
Figure 17: S 1 can be embedded in S 2, and S 2 can be
generated from S 1.
Hence, there is a diﬀerence in higher order preferences (cid:5)m
where inf(cid:3)m is degenerate as min(cid:3)m−1 only for m = 1, and
the higher order routing solutions should be more precisely
deﬁned w.r.t. inf(cid:3)m as follows.
Given a ﬁrst order policy structure S 1, we redeﬁne the
routing solutions of Section 2.1 as:
that θ1
• ﬁrst order uni-path solution: θ1 ∈Q
• ﬁrst order multi-path solution: Θ1 ∈Q
v0 = v0 and for all v (cid:5)= v0,
n
{eθ1
such that Θ1
v0 = {v0} and for all v (cid:5)= v0,
v ∈ inf(cid:3)1
θ1
n
u} | e = (v, u) ∈ E
o
,
Θ1
v = inf(cid:3)1
{eP | P ∈ Θ1
u} | e = (v, u) ∈ E
v∈V P(v, v0) such
v∈V P(P(v, v0))
o
.
We now generalise the above ﬁrst order solution notions to
higher orders. First, we deﬁne the notation for i-th nested
set as:
{P}[i] (cid:3)
n
|{z}
...{
o
|{z}
P }...
,
i times
i times
and concatenation operator ∗ : P(v, u) × P i(P(u, v0)) →
P i(P(v, v0)) such that
(1) if P ∈ P(u, v0) and e = (v, u) ∈ E , then e ∗ P (cid:3) eP ,
(2) if P = {p1, ..., pn} ∈ P i(P(u, v0)), then it is recur-
sively deﬁned as:
e ∗ P (cid:3) {e ∗ p1, ..., e ∗ pn}.
For example,
e ∗
n
o
{P}, {Q, R}
o
{eP},{eQ, eR}
Note that for all P ∈ P i(P(v0)), we have P (cid:6)
n
=
.
i e ∗ P.
(cid:2)
Finally, for m ≥ 1, m-th order routing solutions is deﬁned
Q
• m-th order uni-path routing solution: a vector θm ∈
v∈V P m−1(P(v, v0)) such that θm
v0 = {v0}[m−1] and
for all v (cid:5)= v0,
n
o
,
v ∈ inf(cid:3)m
θm
{e ∗ θm
u } | e = (v, u) ∈ E
Q
• m-th order multi-path routing solution: a vector Θm ∈
v∈V P m(P(v, v0)) such that Θm
v0 = {v0}[m] and for
o
all v (cid:5)= v0,
Θm
u } | e = (v, u) ∈ E
{e ∗ P | P ∈ Θm
v = inf(cid:3)m
n
,
Q
• m-th order k-best-path routing solution: a vector Θm,(k) ∈
v∈V P m(P(v, v0)) such that Θ
o
for all v (cid:5)= v0,
= {v0}[m] and
m,(k)
v0
n
{e ∗ P | P ∈ Θ
| ≤ k for all v ∈ V.
⊆ inf(cid:3)m
m,(k)
v
Θ
where |Θ
m,(k)
v
m,(k)
u
} | e = (v, u) ∈ E
,
6.4 Theorems for Higher Order Routing
Solutions
To seek higher order generalisations of the theorems of
ﬁrst order solutions in Section 4, we need to impose some
regularity conditions on the m-th order policy structure S m.
First, inf(cid:3)m may not be well-deﬁned. Second, S m may
have irregular structures, for instance, for some P, Q ∈
P m−1(P(v, v0)), there may be
{P} (cid:5)
m {P, Q}.
(cid:2)
But when P is equally preferred as Q, represented as {P, Q},
it appears irregular that having both P, Q is worse than P
alone. Note that this is not to be confused with
n
o
{p}
m
(cid:5)
(cid:2)
n
o
{p, q}
,
(cid:2)
which is not irregular. In Example 9, < is (cid:5)
1, which is a
n
o
o
n
ﬁrst order preference. Hence, in second order preference, it
is possible to have
{T3T1R1, T3R3, R2}
{R2}
n
n
o
o
{R2}
{T3T1R1, T3R3}, {R2}
but it appears irregular to have
(cid:5)
(cid:5)
,
.
2
2
(cid:2)
(cid:2)
Furthermore, given S m = (cid:2)Xm, (cid:5)m, (cid:6)m(cid:3), we formally de-
emb (cid:3)
ﬁne the embedded (m− 1)-th order policy structure S m−1
(cid:2)Xm−1, (cid:5)m−1, (cid:6)m−1(cid:3) as:
• if {P} ∈ Xm, then P ∈ Xm−1,
• if {P} (cid:5)m {Q}, then P (cid:5)m−1 Q.
For example in Figure 17, S 2 is regular. We can check
v∈V P m−1(P(v, v0)), (cid:5)m−1, (cid:6)m−1(cid:3) be
the embedded policy structure of S m. For P, Q ∈ Xm,
For example, in Figure 16, S 0 is embedded in S 1, and in
Figure 17, S 1 is embedded in S 2.
For m ≥ 1, S m = (cid:2)Xm, (cid:5)m, (cid:6)m(cid:3) is said to be regular, if
emb = (cid:2)S
(1) inf(cid:3)m is well-deﬁned over Xm,
(2) Let S m−1
min(cid:3)m−1 (P ∪ Q) ⊆S
S
“n
n
o”
o
{P1}
{P3}
n
o
min(cid:3)1
= {P1, P3}
{{P1}}, {{P3}}
inf(cid:3)2
= {P1, P2, P3}.
Regularity is an important property which allows min(cid:3)m−1
to approximate inf(cid:3)m . For a regular m-th order policy
structure S m, it is straightforward to prove the following
theorems by adapting the corresponding ﬁrst order versions,
whose proofs can be found in the Appendix of the extended
paper [3].
= {P1, P2} ∪ {P1, P3}
S
⊆ S
inf(cid:3)m{P, Q}.
∪
= {P1} ∪ {P3}
Theorem 10. Given a regular m-th order policy struc-
ture S m and its embedded S m−1
emb , if the policy relation R[S m−1
emb ]
is anti-reﬂexive, then there exist m-th order uni-path, multi-
path, and k-best-path solutions.
Theorem 11. Given a regular m-th order policy struc-
emb , if the policy relation R[S m−1
emb ]
ture S m and its embedded S m−1
is anti-reﬂexive, then the iterates of Bellman-Ford mapping
converge asynchronously to an m-th order multi-path solu-
tion.
7. CONCLUSION
Our contribution is to clarify the interaction between policy-
based routing, that allows complex and heterogeneous rout-
ing policies among routing systems, and non-strict prefer-
ences, that allow ambiguity in the path comparisons. We
show some examples to reveal the subtleties of policy-based
routing with non-strict preferences.
In summary, our theory provides suﬃcient conditions that
ensure the existence, optimality and asynchronous conver-
gence of stable policy-based routings, in the presence of non-
strict preferences. The suﬃcient condition for all except
optimality is just the simple notion of no dispute wheels
(or more generally, anti-reﬂexive policy relation), while the
suﬃcient condition for optimality is two reﬁned notions of
isotonicity. The ramiﬁcations of this work is to enable a
generative approach for the development of new and more
expressive policy languages (e.g. [7]), where small programs
can inspect the syntactic details of policies in routing con-
ﬁgurations.
There is a caveat that this work is not about building a
particular design tool for policy languages, but is on casting
light on the principles and theory for such design tools (sim-
ilar to the work of [9]). Our ﬁnal goal in future work is to
realise a versatile toolset for network operators, with a sound
mathematical framework, by which network operators may
feed in their individual requirements (e.g. satisfying vari-
ous optimising objectives, business relations, and resilience
constraints) and generate appropriate robust policy conﬁg-
urations.
There is a further implication of higher order non-strict
preferences. The preferences in Examples 6 and 7 are not
chosen arbitrarily. They precisely capture special algebraic
structures called non-distributive lattices M3 and N5, which
are related to a certain special path algebras discovered
in [4]. Hence, there is a connection between higher order
non-strict preferences and the special path algebras. More
discussions can be found in the extended paper [3].
We remark that a diﬀerent approach for the algebraic
theory of policy-based routing will be undertaken in future
work, where we develop a generalised path algebra by dis-
carding certain algebraic axioms in path algebra, and solv-
ing ﬁxed-point equations. The issue of non-strict prefer-
ences and non-distributive lattices (including irregular pol-
icy structures) will be addressed in a broader scope in the
generalised path algebra.
Certainly, this work cannot address all the issues of policy-
based routing with non-strict preferences. Questions such as
how multi-path forwarding might actually be implemented,
and devising an eﬃcient algorithm for determining a uni-
path solution, will be a subject of future work.
Acknowledgment
The author especially thanks Timothy Griﬃn for introduc-
ing the problem of non-strict preferences and giving many
inspiring ideas that led to some of the results in this pa-
per. He is also grateful to Jon Crowcoft, Richard Gibbens,
Jo˜ao Lu´ız Sobrinho, Andrew Twigg and anonymous review-
ers for very helpful comments. This work is sponsored by a
Croucher Foundation scholarship.
8. REFERENCES
[1] D. P. Bertsekas and J. N. Tsitsiklis. Parallel and Distributed
Computation: Numerical Methods. Athena Scientiﬁc, 1989.
[2] B. Carr´e. Graphs and Networks. Oxford University Press,
1979.
[3] C. Chau. Policy-based routing with non-strict preferences.
Technical report, Computer Laboratory, University of
Cambridge, 2006.
[4] C. Chau, R. Gibbens, and T. Griﬃn. Towards a unifying
theory for policy-based routing. In Proc. IEEE INFOCOM,
April 2006.
[5] T. Griﬃn, F. B. Shepherd, and G. Wilfong. Policy disputes in
path-vector protocols. In Proc. Inter. Conf. on Network
Protocols, November 1999.
[6] T. Griﬃn, F. B. Shepherd, and G. Wilfong. The stable paths
problem and interdomain routing. IEEE/ACM Transactions
on Networking, 10(2):232–243, April 2002.
[7] T. Griﬃn and J. Sobrinho. Metarouting. In Proc. ACM
SIGCOMM, September 2005.
[8] M. Mohri. Semiring frameworks and algorithms for
shortest-distance problems. Journal of Automata, Languages
and Combinatorics, 7(3):321–350, 2002.
[9] J. Sobrinho. An algebraic theory of dynamic network routing.
IEEE/ACM Transactions on Networking, 13(5):1160—1173,
October 2005.
[10] A. ¨Uresin and M. Dubois. Parallel asynchronous algorithms for
discrete data. Journal of the ACM, 37(3):588–606, 1990.