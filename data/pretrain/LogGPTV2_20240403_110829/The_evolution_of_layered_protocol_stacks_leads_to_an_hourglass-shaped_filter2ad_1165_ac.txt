 0.8
 0.6
H
 1
 0.8
 0.6
H
 1
 0.8
 0.6
 0.25
 0.5
 0.75
 1
 1.25
 1.5
 1.75
 2
z
Figure 7: The hourglass resemblance score H as a function of
the competition threshold c, the layer γ at which the generality
is 50%, and the mortality parameter z.
CDF of H
n
o
i
t
c
a
r
F
 1
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
 0
 0
 0.1  0.2  0.3  0.4  0.5  0.6  0.7  0.8  0.9
 1
H
Figure 8: CDF of the hourglass resemblance score H when all
parameters vary randomly in a certain range (see text).
probability becomes so high that only the most valuable node tends
to survive in several layers. When z is higher than 1.5, the death
probability becomes too low and several layers grow randomly.
In the previous experiments, we varied one parameter at a time.
We now examine the robustness of the model when we randomly
sample each parameter value simultaneously from a certain range
(a Monte Carlo method). Together with the previous three param-
eters (c, s and z), we also consider here variations in the number
of layers L, the random number of initial nodes n0 separately at
each layer, the birth rate µ, and the maximum network size Nmax
at the end of an evolutionary path. A subtle point here is that, as L
increases, we need to make sure that Nmax is also increased (with
a larger number of layers the network should be allowed to grow
larger). For this reason we set Nmax = η L, and vary the factor η
instead of Nmax. We consider the following range for each param-
eter:
0.25 ≤ c ≤ 0.75, 3 ≤ γ ≤ L − 2, 0.75 ≤ z ≤ 1.5, 5 ≤ L ≤ 15,
1% ≤ µ ≤ 10%, 5 ≤ n0 ≤ 20, and 25 ≤ η ≤ 55.
We generate 1000 evolutionary paths, each with a randomly cho-
sen value for all previous parameters. The CDF of the hourglass
resemblance scores is shown in Figure 8. Even when we vary all
parameters randomly in the given ranges, the score H is still higher
than 0.9 in 68% of the evolutionary paths, and higher than 0.75 in
90% of the evolutionary paths. We manually examined some evolu-
tionary paths in which the score H is lower than 0.5. They typically
result from “bad” combinations of parameter values. For instance, a
large value of c in combination with a large value of z severely sup-
press deaths in all layers, allowing the network to grow randomly.
Or, a small value of c pushes the waist towards higher layers, while
a small γ pushes the waist towards lower layers, causing deviations
from the basic hourglass shape (e.g., a double hourglass shape with
two waists).
5. LOCATION AND WIDTH OF WAIST
In this section, we focus on the effect of the three major EvoArch
parameters (competition threshold c, generality vector s, and mor-
tality parameter z) on the location and width of the waist.5 We also
estimate the value of these three parameters in the case of the cur-
rent Internet architecture (TCP/IP stack), and discuss several im-
plications about the evolution of the latter and its early competition
with the telephone network. We also discuss how to design a new
architecture so that it has higher diversity (i.e., larger width) at its
waist compared to the TCP/IP stack.
5.1 Effect of competition threshold
Figure 9-a shows the location and width of the waist as c in-
creases. Recall from Section 4 that the model produces high values
of H when c is between 0.1 to 0.9. As c increases in that range,
the waist moves lower and its width increases. The competition
threshold c quantiﬁes how similar the services or products of two
protocols must be before they start competing. As c increases, it
becomes less likely that two nodes compete. Especially at higher
layers, where the generality is low and nodes have few products,
increasing c decreases the frequency of competition and thus the
death probability. This means that those higher layers grow faster.
Nodes at lower layers, where s(l) is close to one, have many over-
lapping products and so they are less affected by c. Thus, increas-
ing c pushes the waist towards lower layers. The same reason-
ing (increasing c decreases the death probability) explains why the
waist becomes wider as c increases.
5.2 Effect of generality vector
As in Section 4, we focus on a two-segment piecewise linear
generality vector: the ﬁrst segment extends between s(1) = 0.9 and
s(γ) = 0.5, and the second extends between s(γ) and s(L) = 0.
This function allows us to control the layer at which the generality
is 50% (and the variance of the number of products is maximized)
by modifying the parameter γ. Figure 9-b shows the location and
width of the waist as γ increases from layer-2 to layer-(L-1). Recall
that EvoArch produces high hourglass resemblance scores through-
out that range. The general observation is that as γ increases, the
It is important however that the
location of the waist increases.
location of the waist is not exactly equal to γ; in other words, the
variance in the number of products is not sufﬁcient to predict the
layer at which the death probability is highest (and the width is low-
est). The competition threshold c also inﬂuences the location of the
waist, as previously discussed.
As γ increases, the width of the waist also increases. The reason
is that the location of the waist moves to layers with larger gener-
ality. For instance, Figure 9-b shows that when γ = 5 the median
waist is also at layer-5, while when γ = 8 the median waist is at
layer-6. Thus, when γ = 5, the generality of the waist is 50%,
while when γ = 8 the generality of the waist is approximately
5Any parameter we do not mention is set to the default value given
in § 3.
211r
e
b
m
u
N
r
e
y
a
L
 10
 9
 8
 7
 6
 5
 4
 3
 2
 1
a
Waist Location
Waist Width
 90
 80
 70
 60
 50
 40
 30
 20
 10
 0
t
h
d
W
i
b
Waist Location
Waist Width
r
e
b
m
u
N
r
e
y
a
L
 10
 9
 8
 7
 6
 5
 4
 3
 2
 1
 90
 80
 70
 60
 50
 40
 30
 20
 10
 0
t
h
d
W
i
c
Waist Location
Waist Width
r
e
b
m
u
N
r
e
y
a
L
 10
 9
 8
 7
 6
 5
 4
 3
 2
 1
 90
 80
 70
 60
 50
 40
 30
 20
 10
 0
t
h
d
W
i
 0
 0.2
 0.4
 0.6
 0.8
 1
 2
 3
 4
 5
 6
 7
 8
 9
 0.25  0.5  0.75  1  1.25  1.5  1.75  2
c
γ
z
Figure 9: Location and width of the waist as a function of (a) competition threshold c, (b) layer γ with 50% generality, and (c)
mortality parameter z.
61%. Higher generality, however, means a larger number of prod-
ucts for new nodes at the waist, a higher evolutionary value relative
to the node with the maximum number of products in that layer,
and thus a higher probability of survival.
5.3 Effect of mortality parameter
Recall that z controls the shape of the death probability (see Fig-
ure 3), with lower values of z causing more lethal competition.
Figure 9-c shows the location and width of the waist when z varies
between 0.25 and 2.0. As expected, as z increases, the width of
the waist increases—the reason is that the death probability de-
creases, allowing more nodes to survive even though they compete
with other nodes. On the other hand, the parameter z does not have
a signiﬁcant effect on the location of the waist.
5.4 Implications for the TCP/IP stack
In the current Internet architecture, the waist is located at the net-
work layer and so it is practically at the mid-point of the protocol
stack (see Figure 1). Further, the waist is very narrow: just one
dominant networking protocol (IPv4) and two major transport pro-
tocols (TCP and UDP). We have estimated a good parameterization
of the EvoArch model for the case of the TCP/IP stack (based on
trial-and-error and also exploiting the trends shown in Figure 9).
The values are: L = 6 (we distinguish between application-layer
protocols such as HTTP at layer-5, and individual applications such
as Firefox at layer-6), c ≈ 0.7, γ = 3, and z ≈ 0.3. With these pa-
rameter values the waist is almost always located at layer-3 and it
consists of only few nodes (typically less than three). The median
H score is 1 and the 10-90th percentiles are 0.66 and 1, respec-
tively.6
What do these parameter values imply about the evolutionary
characteristics of the current Internet architecture? In terms of the
parameter c, a competition threshold around 70% implies that two
protocols can co-exist in the TCP/IP stack as long as their relative
product overlap (see Equation 2) is no more than about 70%; other-
wise at least one of them will compete with the other. A good exam-
ple of two protocols that co-exist at the same layer with little over-
lap in their services and functionality are TCP and UDP. The reason
is that one of them is mostly used by applications that require relia-
bility, while the other is chosen by a largely non-overlapping set of
applications that prefer to avoid TCP’s retransmissions, congestion
control or byte-stream semantics. It is only few applications (e.g.,
DNS or Skype) that use both TCP and UDP.
The low value of z (approximately 0.3) implies that competition
between protocols at the TCP/IP stack is very intense: a protocol
6A corresponding parameterization using the more realistic death-
regulated birth process is given in Section 6.
can survive only if its value is higher than about 90% of the value
of its strongest component! A good survival strategy for a new
protocol u would be to avoid competition with the highest-value
protocol in that layer w. This can be achieved if u has largely
non-overlapping products with w; in other words, the new protocol
should try to provide mostly different services or functionality than
the incumbent. The relatively high value of c (70%) means that
a signiﬁcant degree of service overlap would be tolerated, making
it easier for the new protocol to also support some of the legacy
applications.
The previous point also suggests an intriguing answer to a histor-
ical question. How can we explain the survival of the TCP/IP stack
in the early days of the Internet, when the telephone network was
much more powerful? During the 70s or 80s, the TCP/IP stack was
not trying to compete with the services provided by the telephone
network. It was mostly used for FTP, E-mail and Telnet, and those
services were not provided by the incumbent (telephone) networks.
So, TCP/IP managed to grow and increase its value without being
threatened by the latter. In the last few years, on the other hand, the
value of the TCP/IP protocols has exceeded the value of the tradi-
tional PSTN and Cable-TV networks, and it is now in the process
of largely replacing them in the transfer of voice and video.
In terms of the parameter s, the fact that the waist of the TCP/IP
stack is located at the network layer implies that the generality of
that layer is close to 50%. This means that a new protocol at the
network layer would see the highest variability (i.e., maximum un-
certainty) in terms of whether it will be selected as substrate from
protocols at the next higher layer. So, from an architect’s perspec-
tive, the network layer of the TCP/IP stack is the layer at which a
new protocol would experience the maximum uncertainty in terms
of deployment and ultimate success.
5.5 Future Internet architectures
EvoArch also gives some interesting insights about the evolvabil-
ity of future Internet clean-slate architectures. Suppose that a net-
work architect would like to ensure that there is more diversity (i.e.,
larger width) in the waist of a new architecture compared to the
TCP/IP stack—this goal has been suggested, for instance, by Pe-
terson et al. [17]. How can the network architect increase the like-
lihood that the evolution of a new architecture will lead to a wider