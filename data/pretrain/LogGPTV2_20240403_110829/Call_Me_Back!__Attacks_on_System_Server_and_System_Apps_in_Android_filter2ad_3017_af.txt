pages 393–407. USENIX Association.
[16] G. Gong. Fuzzing android system services by binder call to
escalate privilege.
https://www.blackhat.com/us-15/brieﬁngs.html.
[17] H. Huang, S. Zhu, K. Chen, and P. Liu. From system services
freezing to system server shutdown in android: All you need is
a loop in an app. In Proceedings of the 22Nd ACM SIGSAC
Conference on Computer and Communications Security, CCS
’15, pages 1236–1247. ACM.
[18] W. Huang, Y. Dong, A. Milanova, and J. Dolby. Scalable and
precise taint analysis for android. In Proceedings of the 2015
International Symposium on Software Testing and Analysis,
ISSTA 2015, pages 106–117. ACM.
[19] W. Kai, Z. Yuqing, L. Qixu, and F. Dan. A fuzzing test for
dynamic vulnerability detection on android binder mechanism.
In 2015 IEEE Conference on Communications and Network
Security (CNS), pages 709–710.
[20] W. Klieber, L. Flynn, A. Bhosale, L. Jia, and L. Bauer. Android
taint ﬂow analysis for app sets. In Proceedings of the 3rd ACM
SIGPLAN International Workshop on the State of the Art in
Java Program Analysis, SOAP ’14, pages 1–6. ACM.
[21] V. B. Livshits and M. S. Lam. Finding security vulnerabilities
in java applications with static analysis. In Proceedings of the
14th USENIX Security Symposium.
[22] D. Lundberg, B. Farinholt, E. Sullivan, R. Mast, S. Checkoway,
S. Savage, A. C. Snoeren, and K. Levchenko. On the security of
mobile cockpit information systems. In Proceedings of the 2014
ACM SIGSAC Conference on Computer and
Communications Security, CCS ’14, pages 633–645. ACM.
[23] J. Paupore, E. Fernandes, A. Prakash, S. Roy, and X. Ou.
Practical always-on taint tracking on mobile devices. In
Proceedings of the 15th USENIX Conference on Hot Topics
in Operating Systems, HOTOS’15, pages 29–29.
share worldwide 2009-2015 | statistic. http://goo.gl/9mI3Qw.
[24] S. V. President and BCG. Android OS smartphone market
[25] A. Rountev, M. Sharp, and G. Xu. IDE dataﬂow analysis in the
presence of large object-oriented libraries. In Proceedings of the
Joint European Conferences on Theory and Practice of
Software 17th International Conference on Compiler
Construction, CC’08/ETAPS’08, pages 53–68. Springer-Verlag.
[26] M. Sridharan, S. Artzi, M. Pistoia, S. Guarnieri, O. Tripp, and
R. Berg. F4f: Taint analysis of framework-based web
applications. In Proceedings of the 2011 ACM International
Conference on Object Oriented Programming Systems
Languages and Applications, OOPSLA ’11, pages 1053–1068.
[27] Z. Wei and D. Lie. LazyTainter: Memory-eﬃcient taint
tracking in managed runtimes. In Proceedings of the 4th ACM
Workshop on Security and Privacy in Smartphones & Mobile
Devices, SPSM ’14, pages 27–38. ACM.
[28] R. Wilkers. Northrop to demo DARPA navigation system on
android; charles volk comments. http://goo.gl/dLmhXN.
[29] Z. Yang and M. Yang. LeakMiner: Detect information leakage
on android with static taint analysis. In Proceedings of the
2012 Third World Congress on Software Engineering, WCSE
’12, pages 101–104. IEEE Computer Society.
[30] Z. Zhao and F. C. Colon Osono. ”TrustDroidT M ”: Preventing
the use of SmartPhones for information leaking in corporate
networks through the used of static analysis taint tracking. In
Proceedings of the 2012 7th International Conference on
Malicious and Unwanted Software (MALWARE), MALWARE
’12, pages 135–143. IEEE Computer Society.
APPENDIX
A. VULNERABLE CODE
The source code is excerpted from the AOSP v5.1.0 r3.
Some unrelated code is omitted.Some unrelated parameters
are also replaced with dots.
1021 0 4 5 .
1 0 5 1 . g
m U s e r C o n t e x t . s t a r t A c t i v i t y A s U s e r ( i n t e n t ,
. . . ) ;
Fragment 5.3. Code in UsbPermissionActivity
c l a s s U s b P e r m i s s i o n A c t i v i t y f
p r i v a t e P e n d i n g I n t e n t m P e n d i n g I n t e n t ;
p u b l i c v o i d o n C r e a t e ( . . . ) f
m P e n d i n g I n t e n t = ( P e n d i n g I n t e n t )
i n t e n t .
g e t P a r c e l a b l e E x t r a ( I n t e n t . EXTRA INTENT ) ;
p u b l i c
4 6 .
5 5 .
6 2 .
6 8 .
1 1 5 . g
1 1 8 . p u b l i c v o i d o n D e s t r o y ( )f
1 4 6 .
1 7 5 . gg
m P e n d i n g I n t e n t . s e n d ( t h i s , 0 ,
i n t e n t ) ;
Fragment 6.1. Code in MmsServiceBroker
2 3 9 . p u b l i c v o i d do w n l o a d M e s s a g e ( . . . ,
P e n d i n g I n t e n t d o w n l o a d e d I n t e n t )f
g e t S e r v i c e G u a r d e d ( ) . // r e t u r n MmsService p r o x y
do w n l o a d M e s s a g e ( . . . , d o w n l o a d e d I n t e n t ) ;
2 5 3 .
2 5 5 . g
Fragment 6.2. Code in MmsService
p u b l i c v o i d h a n d l e M e s s a g e ( Message msg ) f
c l a s s RequestQueue e x t e n d s H a n d l e r f
1 1 5 . p r i v a t e
1 2 1 .
1 2 5 .
1 2 8 . gg
2 0 4 . p u b l i c v o i d do w n l o a d M e s s a g e ( . . . ,
r e q u e s t . e x e c u t e ( . . . ) ; // r e q u e s t = msg . o b j
P e n d i n g I n t e n t d o w n l o a d e d I n t e n t )
// r e q u e s t . m D o w n l o a d e d I n t e n t = d o w n l o a d e d I n t e n t
a d d S i m R e q u e s t ( r e q u e s t ) ;
2 1 9 .
2 2 1 . g
3 6 7 . RequestQueue [ ] mRunningRequestQueues ;
4 1 7 . p r i v a t e v o i d a d d T o R u n n i n g R e q u e s t Q u e u e S y n c h r o n i z e d (
4 2 5 .
4 2 6 .
4 2 7 .
MmsRequest
f i n a l Message me s s ag e = Message . o b t a i n ( ) ;
me s s a g e . o b j=r e q u e s t ;
mRunningRequestQueues [ queue ] . s e n d M e s s a g e ( m e s s a g e ) ;g
r e q u e s t )f
Fragment 6.3. Code in MmsRequest
p r o c e s s R e s u l t ( . . . ) ; g
1 3 1 . p u b l i c v o i d e x e c u t e ( . . . ) f
1 9 7 .
2 0 8 . p u b l i c v o i d p r o c e s s R e s u l t ( . . . ) f
2 3 0 .
2 3 7 . g
p e n d i n g I n t e n t . s e n d ( . . . ) ;
Fragment 1. Code in ActivityManagerService
1 6 4 4 2 . p u b l i c b o o l e a n s t a r t I n s t r u m e n t a t i o n ( . . . ,
. . . ) f
I I n s t r u m e n t a t i o n W a t c h e r w a t c h e r ,
s y n c h r o n i z e d ( t h i s ) f
1 6 4 5 4 .
1 6 4 6 6 .
1 6 5 0 6 . gg
1 6 5 1 7 . p r i v a t e v o i d r e p o r t S t a r t I n s t r u m e n t a t i o n F a i l u r e (
r e p o r t S t a r t I n s t r u m e n t a t i o n F a i l u r e (
w a t c h e r , . . . ) ;
I I n s t r u m e n t a t i o n W a t c h e r w a t c h e r ,
w a t c h e r . i n s t r u m e n t a t i o n S t a t u s ( . . . ) ;
. . . ) f
1 6 5 2 5 .
1 6 5 3 0 . g
Fragment 2. Code in LocationManagerService
c l a s s R e c e i v e r f // I n n e r C l a s s
p r i v a t e
5 8 4 .
5 9 1 .
8 2 5 .
8 5 4 .
1 5 4 8 . p u b l i c v o i d r e q u e s t L o c a t i o n U p d a t e s ( . . . ,
m P e n d i n g I n t e n t . s e n d ( . . . ) ) ; g g
f i n a l P e n d i n g I n t e n t m P e n d i n g I n t e n t ;
p u b l i c b o o l e a n c a l l P r o v i d e r E n a b l e d L o c k e d ( . . . ) f
f i n a l
P e n d i n g I n t e n t
s y n c h r o n i z e d ( mLock ) f
i n t e n t , . . . ) f
// r e c e v i e r . m P e n d i n g I n t e n t = i n t e n t
r e q u e s t L o c a t i o n U p d a t e s L o c k e d (
. . . ,
r e c e i v e r ,
. . . ) ; g g
. . . ) f
1 5 8 4 . p r i v a t e v o i d r e q u e s t L o c a t i o n U p d a t e s L o c k e d ( . . . ,
R e c e i v e r
r e c e i v e r . c a l l P r o v i d e r E n a b l e d L o c k e d ( . . . )
r e c e i v e r ,
1 5 7 4 .
1 5 7 7 .
1 6 1 2 .
1 6 1 3 . g
1 1 9 .
2 3 6 .
6 9 0 .
6 9 2 .
6 9 5 .
6 9 7 .
1 2 4 3 .
1 2 4 4 .
1 2 4 7 .
1 2 4 9 .
1 2 9 0 .
1 4 7 8 .
1 4 9 8 .
1 5 4 1 .
1 5 5 2 .
1 5 5 7 .
3 1 3 8 . gg
Fragment 3. Code in Code in MountService
c l a s s M o u n t S e r v i c e f
A r r a y L i s t m L i s t e n e r s = new A r r a y L i s t  ( ) ;
p r i v a t e
f i n a l B r o a d c a s t R e c e i v e r m U s b R e c e i v e r =
new B r o a d c a s t R e c e i v e r ( ) f
p u b l i c v o i d o n R e c e i v e ( . . . ) f
n o t i f y S h a r e A v a i l a b i l i t y C h a n g e ( a v a i l a b l e ) ;
gg ;
p r i v a t e v o i d n o t i f y S h a r e A v a i l a b i l i t y C h a n g e ( . . . ) f
s y n c h r o n i z e d ( m L i s t e n e r s ) f
// i ^a(cid:19)L(cid:19)L [ 0 , m L i s t e n e r s ) . s i z e ( ) )
b l = m L i s t e n e r s . g e t ( i ) ;
b l . m L i s t e n e r .
o n U s b M a s s S t o r a g e C o n n e c t i o n C h a n g e d ( . . . ) ;
gg
p u b l i c M o u n t S e r v i c e ( . . . ) f
g
p u b l i c v o i d r e g i s t e r L i s t e n e r ( // t a r g e t S S I
mContext . r e g i s t e r R e c e i v e r ( m U s b R e c e i v e r ,
. . . ) ;
I M o u n t S e r v i c e L i s t e n e r
m L i s t e n e r s . add ( b l ) ; // b l . m L i s t e n e r = l i s t e n e r
l i s t e n e r ) f
Fragment 4. Code in PackageManagerService
mHandler . p o s t ( new R u n n a b l e ( ) f
2 1 9 2 . p u b l i c v o i d f r e e S t o r a g e ( . . . ,
2 1 9 6 .
2 1 9 7 .
2 2 0 6 .
2 2 0 7 .
2 2 1 2 .
p u b l i c v o i d r u n ( ) f
!= n u l l ) f
t r y f p i . s e n d I n t e n t ( . . . ) ;
g c a t c h ( S e n d I n t e n t E x c e p t i o n e1 ) f . . . g g g g ) ; g
i f ( p i
I n t e n t S e n d e r p i ) f
Fragment 5.1. Code in UsbService
mHandler . p o s t ( new R u n n a b l e ( ) f
I n t e n t S e n d e r p i ) f
2 1 9 2 . p u b l i c v o i d f r e e S t o r a g e ( . . . ,
2 1 9 6 .
2 1 9 7 .
2 2 0 6 .
2 2 0 7 .
2 2 1 2 .
p u b l i c v o i d r u n ( ) f
!= n u l l ) f
i f ( p i
t r y f p i . s e n d I n t e n t ( . . . ) ;
g c a t c h ( S e n d I n t e n t E x c e p t i o n e1 ) f . . . g g g g ) ; g
Fragment 5.2. Code in UsbSettingsManage
1 0 2 3 . p r i v a t e v o i d r e q u e s t P e r m i s s i o n D i a l o g (
I n t e n t
i n t e n t . s e t C l a s s N a m e ( ‘ ‘ com . a n d r o i d . s y s t e m u i ’ ’ ,
i n t e n t ,
. . . , P e n d i n g I n t e n t p i )f
‘ ‘ . us b . U s b P e r m i s s i o n A c t i v i t ’ ’ ) ;
i n t e n t . p u t E x t r a ( I n t e n t . EXTRA INTENT , p i ) ;
1 0 3 8 .
1 0 3 9 .
1 0 4 1 .
103