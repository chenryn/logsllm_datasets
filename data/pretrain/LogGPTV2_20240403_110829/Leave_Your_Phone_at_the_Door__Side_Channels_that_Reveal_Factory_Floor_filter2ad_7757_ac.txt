with the phone lying ﬂat near the corner of the printer. If the peaks
of the magnsetometer signal in the dimension most closely aligned
with the machine platform’s Y axis are decreasing in a segment
where the machine head traverses angle a, then the peaks of the
magnetometer signal in that dimension will be increasing as the
machine head traverses angle −a. More precisely, our algorithm
for processing magnetometer data uses the magnetometer’s dimen-
sion with the strongest signal overall (X for the 3D printer, Z for
the mill). Then for that dimension in each segment, the algorithm
identiﬁes the peaks in the magnetometer’s magnetic ﬁeld strength
measurements. Our implementation uses the Matlab function en-
velope(x, np,(cid:48) peak(cid:48)), which uses spline interpolation over local
maxima separated by at least np samples; np = 8 worked well
for our phone’s magnetometer data. Then we ﬁnd the regression
line that minimizes the peak points’ average squared distance to the
line. Our implementation uses the Matlab function polyﬁt(x, y, 1),
which returns the coefﬁcients for a line p(x) that is a best ﬁt (in a
least-squares sense) for the data in y. If the slope of the resulting
line is negative, then the angle is between 0 and 180 degrees. If the
slope is positive, then the angle is between 180 and 360 degrees.
Intuitively, a positive slope means that the platform of the printer is
moving toward the phone. A negative slope means that the platform
is moving away from the phone. A slope very close to zero (with
respect to the amplitude of the signal) means that the platform is
not moving closer to or further away from the phone. We found that
background noise normalization was not helpful in analyzing the
magnetometer data for either the printer or the mill.
We found that the sound associated with travel at a particular angle
to the X axis did not depend on where the tool head was located
on the Y axis, so audio for the reference library and target objects
could be recorded with the tool head anywhere on the machine
platform and the phone anywhere nearby. In contrast, magnetometer
readings fall off with the cube of the distance to the source, and
we found that the phone needs to be within a foot of the platform
to pick up useful data. Magnetometer readings are also sensitive
to the phone’s orientation; ﬂipping the phone around essentially
reverses its reading. Still, as long as the phone’s orientation remains
approximately the same while recording, its magnetometer readings
will reliably distinguish between a and −a. More generally, we
expect that the best way to use magnetometer data will vary greatly
for different types of machines, depending on the conﬁguration of
their motors and where it is natural to set down a phone. For example,
if our phone had picked up on the head’s side-to-side movement
only, then we would have been able to distinguish between a and
180 − a, rather than registering only the movement of the platform
forward and back. In fact, when we printed an entire platform full
of diamond shapes, the phone’s magnetometer did seem to register
additional information (perhaps generated at the tool head) while
a diamond was printed in the extreme corner of the platform, very
close to the phone. When magnetometer data is not available (e.g.,
an audio-only recording, the phone changing orientation during
recording as the user moves around, or the magnetometer being too
far away to pick up readings), each angle still appears similar to
three others, its mirror images across the X and Y axes.
We found that analysis of the phone’s accelerometer data did
not improve the accuracy of reconstruction, so we used only audio
and magnetometer data in the experiments. The accelerometer data
does indicate the times at which the tool head changes direction at
889the accelerometer this variation will have a negligible impact on
the reconstruction quality compared to the impact of the variation
inherent in the sensor, the magnetometer works at a much shorter
range, and it may be affected. In evaluating the other sensors’ data
quality, we focused on the Galaxy S6.
Manufacturer
HTC
Huawei
LG
LG
OnePlus
Samsung
Lenovo
Nvidia
G4
X
OS
Model
One M8
Android 6.0
Nexus 6P Android 6.0
Android 5.1
Android 5.1
Android 5.1
Galaxy S6 Android 5.1
Android 4.4
Android 5.1
K30-T
Shield
Nexus 5
Form
Phone
Phone
Phone
Phone
Phone
Phone
Phone
Tablet
Table 1: Compared Devices
a segment intersection, which can be incorporated in the future to
segment the data from the other sensors. Further analysis may reveal
additional information the reconstruction method could utilize.
For a particular reconstruction task, additional domain or pro-
duct constraints may be useful. For example, a reconstructed object
should not extend beyond the machine’s platform. If we know the ge-
neral shape of the item being manufactured, such as a turbine blade,
this context can inform the reconstruction process. If all constraints
are met, we show the reconstructed object to the user; otherwise we
move on to the next candidate reconstruction.
4. EXPERIMENTAL RESULTS
Setup. We conducted experiments with the Lulzbot Taz 5 3D printer
and Other Machine Co. Othermill CNC mill shown in Figure 2,
hereafter referred to as the “printer” and the “mill.” The X axis of
each machine is controlled by a stationary stepper motor that drives
a carriage on which the tooling (the printer’s extruder and the mill’s
spindle) rides. The Y axis of each machine is controlled by a second
stationary stepper motor that moves the platform. The printer’s Z
axis is controlled by two stepper motors, one on each end, that raise
and lower the full X axis. The mill’s Z axis is controlled by a single
stepper motor that controls the height of the spindle relative to the
X carriage, which remains ﬁxed in height. All experiments in this
section used the printer’s default feed rate, 30mm/second.
We built an Android app that monitors and records the sensor
data on a phone and used it to record the audio and magnetometer
data used in reconstruction. The audio is collected at a 44100 Hz
sampling rate.
Figure 10: The setup for testing the quality of sensor recordings
at different distances from the printer. Starting from the rear
left corner, approximately midway between the X and Y motors,
the phone was moved away at a 135◦ angle.
Figure 9: The signal-to-noise ratio (SNR) of the accelerometer
Y axis and magnetometer Z axis readings on different devices.
The Samsung Galaxy S6, with the highest SNR for its accelero-
meter and second-highest SNR for its magnetometer, is the best
overall.
4.1 Data Quality with Different Devices
To evaluate the quality of the sensor data produced by different
devices, we installed the recording app on seven smartphones and
one tablet, listed in Table 1. To ensure a fair comparison across
devices, we placed each device with its lower right corner 2.5 cen-
timeters from the rear left corner of the printer. Then we enabled
the app’s recording function while the printer fabricated a simple
geometric shape resembling a trapezoid. The printed object and its
process parameters were identical in each trial.
We compared the signal to noise ratio (SNR) of the accelerometer
and magnetometer in each device. The Samsung Galaxy S6 per-
formed the best overall, with the highest accelerometer SNR and
second-highest magnetometer SNR. Surprisingly, the Nexus 6P, the
newest model, had the second-lowest accelerometer SNR. The full
results are shown in Figure 9. The placement of the sensors inside
each device varies. While our other experiments suggest that for
Figure 11: The signal power of a phone’s sensor recordings at
different locations from the machine. While the magnetometer
readings drop off sharply with distance, the accelerometer rea-
dings are strong at all locations on the table.
4.2 Data Quality at Different Locations
To determine the impact of distance on data quality, we compared
readings from the Samsung Galaxy S6 at different locations relative
to the 3D printer. Beginning at the rear left corner, the phone was
used to record the same fabrication activity (a simple 45-degree
line) as its distance from the printer was incremented by 2.5 cm.
We moved the phone away from the printer in a line approximate-
ly 135 degrees from horizontal so that it remained approximately
equidistant from the X and Y motors, as illustrated in Figure 10.
890We calculated the signal power of the accelerometer and magne-
tometer readings at each location as a measurement of the effect
of distance, as shown in Figure 11. The accelerometer, which was
measuring the movement of the table the printer was placed on, had
strong readings at all distances from 0 to 18 inches. The readings
decreased slightly with distance, but the output was clear at all di-
stances. In contrast, the magnetometer was measuring a magnetic
ﬁeld, and the strength of a magnetic ﬁeld drops with the distance cu-
bed. The magnetometer readings were unusable at distances greater
than 4 inches. This limitation affects our ability to use magnetometer
data to distinguish between mirrored angles.
4.3 Data from Different Machines
While the data generated by the 3D printer and mill is similar
enough that our reconstruction methods can be applied to both, the
data is also distinct. More generally, each machine has a unique
signature, and types of machines will have distinct sounds corre-
sponding to their manufacturing processes. For example, the sound
of a mill’s spindle spinning and tool cutting is absent in audio from
a 3D printer. The spindle noise alone is sufﬁcient to distinguish
between the printer and the mill used in our experiments. Additio-
nally, each motor of a machine has a signature. Though they are
nominally identical, depending on the conﬁguration of the machine,
each motor moves a different amount of weight. This distinction
is already apparent within our printer and mill: the machine’s X
and Y motors are nominally identical but display distinct signatures.
The frequencies at which the motors emit noise, as a function of
the work they are doing, allows us to differentiate between different
machine models. While this technique would also work to distin-
guish between different models of the same machine type—say, two
printers instead of a printer and a mill—a more complex technique
would be needed to distinguish between two same-model machines.
To substantiate these claims, we compared recordings of the 3D
printer with recordings from the mill. The mill’s and printer’s X and
Y movements are driven by similar motors in similar conﬁgurations,
and we found that the mill’s movements exhibit a clear, consistent,
and uniquely identiﬁable audio signature, analogous to that of the
3D printer. We demonstrate this signature in Figure 5, comparing
the spectrograms of the same turbine blade shape made on the
printer and on the mill. The trace is shifted in frequency on the two
machines, since each motor on each machine has its own signature,
but the two traces exhibit the same pattern.
These results suggest that a recording of a simple calibration
pattern is all that is needed to train either of our reconstruction
methods on most 3D printers and desktop mills, as well as other
types of subtractive manufacturing methods operated by stepper
motors. This calibration pattern could be hidden in the interior of an
object and designed to look like typical 3D printer inﬁll, or hidden in
the toolpath of a subtractive manufacturing operation. If the attacker
asks the operator to manufacture this object and makes a recording,
she now has all the information necessary to reconstruct objects and
machining conditions from that machine.
4.4 Data Quality in a Phone Call Attack
The previous sections focused on the case where phone sensor
data was captured by a malicious phone application. If the data was
instead captured during a phone call, the audio signal will have been
altered by the phone’s noise reduction. Conveniently, the key audio
frequencies of factory ﬂoor machinery tend to lie in the same range
as the human voice, so the phone’s noise reduction does not simply
remove the signal.
We tested the phone call attack on both the printer and mill. The
results from each recording, while noisier, are clear and consistent
Figure 12: The fan shape fabricated to provide example audio
for the reference library.
with the audio recorded directly on a phone located near the machine.
For example, the frequency magnitude spectrogram in Figure 5
shows that the same pattern is visible whether a recording is made
next to the mill or recorded through a phone call. We also tested
the phone call attack while people were speaking. Figure 5 shows
the difference in the audio when a person is speaking two feet
from the device next to the machine and speaking directly into the
microphone of the device far from the machine; even though the
speech overlaps the information-rich regions of the spectrogram, the
trace is not obscured completely and the shape is still clearly visible.
While reconstruction following a phone call attack must rely on
audio only, this method greatly broadens the scope of the attack.
Capturing information from multiple sensors at once requires an
appropriate app to be present on the phone; in contrast, the phone
call attack allows any phone to capture factory audio with no prior
preparation beyond the attacker being prepared to record the call on
the remote end. More generally, an audio-only attack can be execu-
ted using any device with a microphone, which expands the attack
to not only phones but also tablets, laptops, and other computers,
either through malware or by recording a voice-over-IP call.
4.5 Accuracy of Reconstruction
All training and test data for the reconstruction methods was
recorded using a Samsung Galaxy S6 placed within 4 inches of the
printer, i.e., close enough to collect usable magnetometer data. We
did not try to place the phone in the exact same position for each
run.
We built the interactive framework using Matlab, Adobe Audition,
and Python. For both the printer and the mill, we constructed the
reference library from the audio of one pass of the machine head
over the left-hand half of the 2-layer planar fan shape shown in
Figure 12; this shape has 360 different angles of machine head
travel in each mirrored half. A spectrogram of the resulting library is
shown in Figure 6. As mentioned earlier, to prune the reconstruction
search space for the signal processing method, we implemented three
domain constraints in the signal processing interactive framework:
the reconstructed object layer should be within .5 feed units of being
a closed planar object with no mid-segment self-crossings, and there
should be a change of angle at the end of each segment.
The framework’s user was an EE Master’s student with no prior