1. k: For any i ≥ 1, let k be the smallest integer such
that, for all j ≥ i + k, mj is sent at or after time τi.
j(x) be the probability that the
FDS does not receive message mi+j by time τi + x,
for every j ≥ 0 and every x ≥ 0; let p0
2. For any i ≥ 1, let p0
0= p0
0(0).
3. For any i ≥ 2, let q0
0 be the probability that the FDS
receives message mi−1 before time τi.
4. For any i ≥ 1, let u0(x) be the probability that the FDS
suspects the CR-TS at time τi +x, for every x ∈ [0, η).
s: for any i ≥ 2, let p0
s be the probability that an
S-transition occurs at time τi.
5. p0
According to the QoS analysis of the NFD-S algorithm
in [3] (Proposition 3), we now analyze the QoS metrics of
the NFD-S algorithm in a crash-recovery run and show the
following relations hold:
Proposition 4.1. Within the period [t1, t2) for each MTBF
period:
1. k = dtimeout/ηe.
2. for all j ≥ 0 and for all x ≥ 0,
j(x) = (pL+(1−pL)·P r(D(t) > timeout+x−jη))
p0
× P r(Xa(t) > τi + x − tm
r ).
3. q0
0 = (1 − pL) · P r(D(t)  τi − tm
r ).
0 · u0(0).
s = q0
5. p0
Theorem 4.1. The crash-recovery FDS based on the NFD-
S algorithm has the following properties:
MTBF ≥ E(TMR)
≥
(b MTTF−E(TDR)
η
MTBF
c + 1) · p0
s + d E(D)
η e + 2
(1)
If the recovery duration is larger than η + timeout, then
MTBF
2
≥ E(TMR)
≥
(b MTTF−E(TDR)
η
E(TM) ≤
MTBF
c + 1) · p0
s + d E(D)
η e + 2
E(TDR) + MTTF−E(TDR)
(b MTTF−E(TDR)
η
η
· R η
c + 1) · p0
0 u0(x)dx + E(TD)
s + 1
PA ≥ 1−
E(TD) + E(TDR) + MTTF−E(TDR)
η
MTBF
· R η
0 u0(x)dx
E(TDR) = E(D) + ηE(XL(t))
E(RDF) ≥ P r(Xc(t) > η + timeout)
(2)
(3)
(4)
(5)
(6)
The proof of Theorem 4.1 is based on the analysis of
the average number of possible mistakes within the distinct
intervals [t0, t1), [t1, t2) [t2, t3), respectively. Since the
proof of the whole theorem is long,2 here we give only a
brief sketch of the proof.
2The details of the proof is in [9].
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:30:50 UTC from IEEE Xplore.  Restrictions apply. 
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007Figure 3. Analysis of the Crash-Recovery NFD-S Algorithm
Even if the FDS always trusts or suspects the CR-TS,
due to state changes of the CR-TS within each MTBF pe-
riod, there will be at least one mistake when the CR-TS
crashes or recovers.
If the failure can be detected before
the recovery, both the crash and the recovery of the CR-TS
can generate mistakes. If the FDS has already suspected the
CR-TS before it crashes, it means there is at least one mis-
take caused by message delay or loss. If the FDS trusts the
CR-TS before it recovers, it means there is at least one false
positive mistake. Thus when the recovery duration is larger
than η + timeout, there will be at least two mistakes for
each MTBF period.
For the fail-free duration [t1, t2), the average number of
mistakes can be derived from the fact that if an S-transition
occurs then a mistake will happen. Within [t1, t2), the av-
erage number of mistakes will depend on the number of de-
cision time points (τi) and the probability that a valid live-
ness message is not received by the decision time. From
Fig. 3, we can see that the average duration of [t1, t2)
is MTTF − E(TDR). Thus the average number of τi is
less than b MTTF−E(TDR)
c + 1. Since according to Propo-
sition 4.1 the probability that the FDS suspects the CR-TS
within [t1, t2) is p0
s, then the average number of mistakes
within [t1, t2) can be estimated as (b MTTF−E(TDR)
c+1)·p0
s.
In addition, after the CR-TS has crashed, on average there
e messages still on the way to the FDS, which
are d E(D)
might also generate mistakes. Therefore the overall av-
erage number of mistakes within each MTBF is less than
(b MTTF−E(TDR)
c + 1)p0
e + 2.
s + d E(D)
η
η
η
η
η
For E(TMR), inequalities (1) and (2) can be easily de-
rived by using the observation duration (MTBF) divided by
the mean number of mistakes within that period.
E(TM) is less than the total mistake duration within the
period divided by the minimum number of mistakes within
that duration. The average mistake duration within [t0, t1),
M), E(T 00
[t1, t2), [t2, t3) is E(T 0
M ) respectively.
E(T 0
M) = E(TDR). E(T 00
M ), which is in the fail-free pe-
riod, can be estimated using equation (3.3) of Theorem 5 in
M), E(T 000
·R η
s
M ) ≤ 1
p0
0 u0(x)dx. E(T 000
M ) ≤ E(TD).
[3]. Thus E(T 00
The total mistake duration within [t1, t2) can be obtained
by using the number of mistakes within this period mul-
tiplied by E(T 00
M). Thus the total mistake duration can be
estimated by E(TDR)+ MTTF−E(TDR)
0 u0(x)dx+ E(TD).
The minimum number of mistakes for each MTBF period is
(b MTTF−E(TDR)
s + 1. Therefore inequality (3) can
be derived.
c + 1) · p0
·R η
η
η
PA, the probability that the FDS is accurate, can be de-
rived from the total time that the FDS has an accurate out-
put divided by the total observation period (MTBF). The
total time that the FDS is accurate can be estimated using
MTBF −(cid:0)E(TD) + E(TDR) + MTTF−E(TDR)
0 u0(x)dx(cid:1).
·R η
η
Thus the inequality (4) can be obtained.
E(TDR), is obtained directly from the average consec-
utive message loss number (E(XL(t))) multiplied by the
liveness message sending interval (η), plus the average mes-
sage delay (E(D)), because, if a failure is detectable, after
the recovery, when the ﬁrst valid liveness message is re-
ceived by the FDS, the recovery is detected (see Fig. 2(d)).
E(RDF) can be estimated using the fact that if the re-
covery duration is larger than the failure detection time,
then the occurred failure can be detected. Thus the pro-
portion of the detectable failures can be estimated using
E(RDF) ≥ P r(Xc(t) > η + timeout).
·R η
From the above analysis, Theorem 4.1 can be used to
estimate the FDS’s parameters and QoS bounds. Particu-
larly, when the monitoring target is fail-free, for the QoS
R η
metrics in [3] (see inequalities (1)-(4) in Theorem 4.1), we
η ·
; PA ≥ 1 − 1
can easily deduce that E(TMR) ≥ η
p0
0 u0(x)dx; E(TM) ≤ 1
0 u0(x)dx. As MTTF → +∞,
p0
P r(Xa(t) > τi + x − tm
r ) approaches one. Therefore, p0
s,
u0(x) and q0
0 in the Deﬁnition 4.1 are reduced to ps, u(x)
and q0 in the Deﬁnition 1 in [3]. Thus E(TMR), E(TM)
and PA are exactly reduced to the QoS analysis results in
[3]. Therefore, we can conclude that in terms of the QoS
of failure detection, a fail-free run or a crash-stop run with
MTTF → +∞ is a particular case of a crash-recovery run.
s
s
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:30:50 UTC from IEEE Xplore.  Restrictions apply. 
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007η
(b MTTF−E(TDR)
MTBF
c + 1) · p0
· R η
1− E(TDR) + MTTF−E(TDR)
MTBF
· R η
E(TDR) + MTTF−E(TDR)
c + 1) · p0
(b MTTF−E(TDR)
η
η
η e + 2
s + d E(D)
0 u0(x)dx + E(TD)
0 u0(x)dx + E(TD)
≥ T L
MR
(9)
≥ P L
A (10)
≤ T U
M
(11)
(12)
η
s + 1
E(D) + ηE(XL(t)) ≤T U
DR
Figure 4. The Extended NFD-S Algorithm
Conﬁguration
If the monitored target’s MTTF is not sufﬁciently long and
the monitored target is recoverable, then the impact of its
dependability should be taken into consideration.
4.3. The Revised NFD-S Algorithm for the
Crash-Recovery FDS
For the NFD-S algorithm in a crash-recovery run, the as-
sumption that the sequence numbers of the heartbeat mes-
sages are continually increasing after every recovery of the
CR-TS is needed to ensure that the NFD-S algorithm is still
valid after each recovery. However, without persistent stor-
age to snapshot the runtime information frequently, when
a crash failure occurs, all of the current runtime informa-
tion might be lost. In such a situation, increasing heartbeat
message numbers cannot be guaranteed. In addition, reset-
ting the heartbeat sequence number can indicate the occur-
rence of a recovery and simplify the parameter computation
as well. Since for the NFD-S algorithm, the local clocks
of the FDS and the CR-TS are synchronized, we can use
the comparison of the sending time of each heartbeat mes-
sage instead of the comparison of the heartbeat sequence
number. Then, for a crash-recovery FDS, given the QoS
requirements of the FDS, the conﬁguration procedure is il-
lustrated in Fig. 4.
For given QoS requirements, expressed as bounds, the
following inequalities need to be satisﬁed:
MR, PA ≥ P L
A ,
D , E(TMR) ≥ T L
TD ≤ T U
E(TM) ≤ T U
M , E(TDR) ≤ T U
DR, E(RDF) ≥ RL
DF.
(7)
From Theorem 4.1, we can estimate the parameters (η and
timeout) of the NFD-S algorithm according to the following
inequalities:
η + timeout ≤ T U
D , η >0
(8)
DF
P r(Xc(t) > η + timeout) ≥RL
(13)
Then, the conﬁguration of the NFD-S algorithm becomes