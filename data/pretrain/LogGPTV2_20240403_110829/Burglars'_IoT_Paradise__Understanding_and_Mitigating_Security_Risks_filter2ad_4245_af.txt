//learnairbnb.com/smart-home-technology/, 2018, accessed: 2019-01.
[11] “Revocation of authority to publish and subscribe,” https://issues.oas
is-open.org/projects/MQTT/issues/MQTT-536?ﬁlter=allopenissues, ac-
cessed: 2019-010.
[12] “Demos of iot vulnerabilities exploits,” https://sites.google.com/view/at
tackdemos/, accessed: 2019-01.
[13] R. A. Light, “Mosquitto: server and client implementation of the mqtt
protocol,” Journal of Open Source Software, vol. 2, no. 13, 2017.
[14] “Mitigationdemo,” https://github.com/user-online/mosquitto-defense/tre
e/master, accessed: 2019-010.
[15] AWS, “Iot customer success stories,” https://aws.amazon.com/solutions
/case-studies/iot/, accessed: 2019-01.
[16] T. Inc., “Cooperation we have already provided one-stop iot services
for 93,000+ manufacturers and brands,” https://en.tuya.com/cooperatio
n, accessed: 2019-01.
[17] “Publish–subscribe pattern,” https://en.wikipedia.org/wiki/Publish-sub
scribe pattern, accessed: 2019-07.
[18] OASIS, “Mqtt version 5.0 - candidate oasis standard 01,” https://do
cs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html, 2018, accessed:
2019-01.
[19] “Osi model,” https://en.wikipedia.org/wiki/OSI model, accessed: 2019-
[20] IETF, “The websocket protocol,”
https://tools.ietf.org/html/rfc6455,
[21] “Transport layer security,” https://en.wikipedia.org/wiki/Transport Lay
2011, accessed: 2019-01.
er Security, accessed: 2019-07.
[22] “Single sign-on,”
cessed: 2019-07.
05.
07.
https://en.wikipedia.org/wiki/Single sign-on, ac-
[23] “Amazon cognito,” https://aws.amazon.com/cognito/, accessed: 2019-
[24] “Client-authenticated tls handshake,” https://en.wikipedia.org/wiki/Tran
sport Layer Security#Client-authenticated TLS handshake, accessed:
2019-01.
[25] “Baidu rises to top 5 in idc ranking of public cloud services providers
in china,”
https://www.bloomberg.com/press-releases/2019-05-08/ba
idu-rises-to-top-5-in-idc-ranking-of-public-cloud-services-providers-i
n-china, accessed: 2019-07.
[26] “The top 500 sites on the web,” https://www.alexa.com/topsites, ac-
cessed: 2019-07.
[27] “Eclipse mosquitto - an open source mqtt broker,” https://github.com/e
clipse/mosquitto/, accessed: 2019-07.
[28] “Home assistant mqtt brokers,” https://www.home-assistant.io/docs/m
qtt/broker#embedded-broker/, accessed: 2019-06.
openhab
the modern
arrives
in
[29] “Mqtt
2.x
architecture,”
https://www.openhab.org/blog/2018-12-16-mqtt-arrives-in-the-mod
ern-openhab-2-x-architecture.html, accessed: 2019-06.
[30] W. Zhou, Y. Jia, Y. Yao, L. Zhu, L. Guan, Y. Mao, P. Liu, and
Y. Zhang, “Discovering and understanding the security hazards in the
interactions between iot devices, mobile apps, and clouds on smart
home platforms,” in 28th USENIX Security Symposium (USENIX
Security 19). Santa Clara, CA: USENIX Association, Aug. 2019, pp.
1133–1150. [Online]. Available: https://www.usenix.org/conference/us
enixsecurity19/presentation/zhou
[31] J. Chen, C. Zuo, W. Diao, S. Dong, Q. Zhao, M. Sun, Z. Lin, Y. Zhang,
and K. Zhang, “Your iots are (not) mine: On the remote binding between
iot devices and users,” in 2019 49th Annual IEEE/IFIP International
Conference on Dependable Systems and Networks (DSN).
IEEE, 2019,
pp. 222–233.
[32] IFTTT, “Ifttt,” https://ifttt.com/, accessed: 2019-01.
[33] “Tuya smart,” https://en.tuya.com/company, accessed: 2019-01.
[34] “The mqtt client identiﬁer,” https://www.ibm.com/support/knowledgec
enter/en/SSFKSJ 7.1.0/com.ibm.mq.doc/tt60310 .htm, accessed: 2019-
06.
[35] “Mqtt security fundamentals: Advanced authentication mechanisms,”
https://www.hivemq.com/blog/mqtt-security-fundamentals-advanced-a
uthentication-mechanisms/, accessed: 2019-06.
[36] “Device integration using mqtt,” https://cumulocity.com/guides/device
-sdk/mqtt/, accessed: 2019-06.
[37] “Serial number,” https://en.wikipedia.org/wiki/Serial number#Applicat
ions of serial numbering, accessed: 2019-06.
[38] “Decode the meaning behind your apple serial number,” https://beet
stech.com/blog/decode-meaning-behind-apple-serial-number, accessed:
2019-06.
[39] “Suning showed on ces,”
https://news.suning.com/wtoutiao/witem2
1548553411.html, accessed: 2019-07.
[40] “Fortune global 500,”
https://fortune.com/global500/suning-commerc
[41] “Suning smart living,” https://smarthome.suning.com/shop index.html,
e-group/, accessed: 2019-07.
accessed: 2019-01.
[42] “Getting to know mqtt,” https://developer.ibm.com/articles/iot-mqtt-w
hy-good-for-iot, accessed: 2019-01.
[43] “Iot platforms vendor comparison 2018,” https://iot-analytics.com/pro
duct/iot-platforms-vendor-comparison-2018, accessed: 2019-01.
[44] M. Antonakakis, T. April, M. Bailey, M. Bernhard, E. Bursztein,
J. Cochran, Z. Durumeric, J. A. Halderman, L. Invernizzi, M. Kallitsis,
D. Kumar, C. Lever, Z. Ma, J. Mason, D. Menscher, C. Seaman,
N. Sullivan, K. Thomas, and Y. Zhou, “Understanding the mirai
botnet,” in 26th USENIX Security Symposium (USENIX Security
17). Vancouver, BC: USENIX Association, 2017, pp. 1093–1110.
[Online]. Available: https://www.usenix.org/conference/usenixsecurity
17/technical-sessions/presentation/antonakakis
[45] “Ibm iot platform,” https://www.ibm.com/internet-of-things/solutions/
iot-platform, accessed: 2019-01.
[46] “Alibaba cloud iot platform,” https://www.alibabacloud.com/product/iot,
accessed: 2019-01.
[47] “Aws iot policies,” https://docs.aws.amazon.com/iot/latest/developergu
ide/iot-policies.html, accessed: 2019-07.
[48] X. Bai, L. Xing, N. Zhang, X. Wang, X. Liao, T. Li, and S.-M.
Hu, “Staying secure and unprepared: Understanding and mitigating the
security risks of apple zeroconf,” 2016.
[49] “Oauth,” https://en.wikipedia.org/wiki/OAuth.
[50] J. Park and R. Sandhu, “The ucon abc usage control model,” ACM
Transactions on Information and System Security (TISSEC), vol. 7,
no. 1, pp. 128–174, 2004.
[51] “Uniform resource identiﬁer,” https://en.wikipedia.org/wiki/Uniform R
esource Identifier, accessed: 2019-01.
[52] “mosquitto.conf man page,”
f-5.html, accessed: 2019-05.
https://mosquitto.org/man/mosquitto-con
[53] “Start building with artik cloud services,” https://developer.artik.cloud/,
[54] “The constrained application protocol (coap),” https://tools.ietf.org/htm
[55] “Advanced message queuing protocol,”
https://www.amqp.org/, ac-
accessed: 2019-01.
l/rfc7252/, accessed: 2019-01.
cessed: 2019-01.
[56] H. Liu, C. Li, X. Jin, J. Li, Y. Zhang, and D. Gu, “Smart solution,
poor protection: An empirical study of security and privacy issues
in developing and deploying smart home devices,” in Proceedings of
the 2017 Workshop on Internet of Things Security and Privacy, ser.
IoTS&#38;P ’17. New York, NY, USA: ACM, 2017, pp. 13–18.
[Online]. Available: http://doi.acm.org/10.1145/3139937.3139948
[57] “Communications over alink protocol,” https://www.alibabacloud.com
/help/doc-detail/90459.htm, accessed: 2019-01.
[58] Y. Chen, L. Xing, Y. Qin, X. Liao, X. Wang, K. Chen, and W. Zou,
“Devils in the guidance: Predicting logic vulnerabilities in payment
syndication services through automated documentation analysis,” in
28th USENIX Security Symposium (USENIX Security 19).
Santa
Clara, CA: USENIX Association, Aug. 2019, pp. 747–764. [Online].
Available:
https://www.usenix.org/conference/usenixsecurity19/presen
tation/chen-yi
[59] “Linear temporal logic,” https://en.wikipedia.org/wiki/Linear tempora
l logic.
[60] “Symbolic analysis laboratory,” http://sal.csl.sri.com/.
[61] L. Lundgren, “Taking over
the world through mqtt—aftermath,”
https://www.blackhat.com/docs/us-17/thursday/us-17-Lundgren-Tak
ing-Over-The-World-Through-Mqtt-Aftermath.pdf,
2019-01.
2017,
accessed:
[62] D. Q. Federico Maggi, Rainer Vosseler, “The fragility of industrial
iot’s data backbonesecurity and privacy issues in mqtt and coap proto-
https://documents.trendmicro.com/assets/white papers/wp-the-f
cols,”
ragility-of-industrial-IoTs-data-backbone.pdf?v1, 2018, accessed: 2019-
01.
[63] A. Rizzardi, S. Sicari, D. Miorandi, and A. Coen-Porisini, “Aups: An
open source authenticated publish/subscribe system for the internet of
things,” Information Systems, vol. 62, pp. 29–41, 2016.
15
[64] R. Neisse, G. Steri, and G. Baldini, “Enforcement of security policy rules
for the internet of things,” in Wireless and mobile computing, networking
and communications (wimob), 2014 IEEE 10th international conference
on.
IEEE, 2014, pp. 165–172.
[65] A. La Marra, F. Martinelli, P. Mori, A. Rizos, and A. Saracino,
“Introducing usage control in mqtt,” in Computer Security. Springer,
2017, pp. 35–43.
[66] A. Niruntasukrat, C. Issariyapat, P. Pongpaibool, K. Meesublak, P. Aium-
supucgul, and A. Panya, “Authorization mechanism for mqtt-based
internet of things,” in Communications Workshops (ICC), 2016 IEEE
International Conference on.
IEEE, 2016, pp. 290–295.
[67] Z. B. Celik, G. Tan, and P. D. McDaniel, “Iotguard: Dynamic enforce-
ment of security and safety policy in commodity iot.” in NDSS, 2019.
[68] I. Bastys, M. Balliu, and A. Sabelfeld, “If this then what?: Controlling
ﬂows in iot apps,” in Proceedings of the 2018 ACM SIGSAC Conference
on Computer and Communications Security. ACM, 2018, pp. 1102–
1119.
[69] Z. B. Celik, L. Babun, A. K. Sikder, H. Aksu, G. Tan, P. McDaniel,
and A. S. Uluagac, “Sensitive information tracking in commodity iot,”
arXiv preprint arXiv:1802.08307, 2018.
[70] E. Fernandes, J. Jung, and A. Prakash, “Security analysis of emerging
smart home applications,” in 2016 IEEE Symposium on Security and
Privacy (SP).
IEEE, 2016, pp. 636–654.
[71] M. Ambrosin, M. Conti, A. Ibrahim, A.-R. Sadeghi, and M. Schunter,
“Sciot: A secure and scalable end-to-end management framework for iot
devices,” in European Symposium on Research in Computer Security.
Springer, 2018, pp. 595–617.
[72] W. Zhang, Y. Meng, Y. Liu, X. Zhang, Y. Zhang, and H. Zhu, “Homonit:
Monitoring smart home apps from encrypted trafﬁc,” in Proceedings of
the 2018 ACM SIGSAC Conference on Computer and Communications
Security. ACM, 2018, pp. 1074–1088.
[73] E. Fernandes, A. Rahmati, J. Jung, and A. Prakash, “Decentralized
action integrity for trigger-action iot platforms,” in Proc. Network and
Distributed Systems Symposium (NDSS), 2018, pp. 18–21.
[74] Y. Tian, N. Zhang, Y.-H. Lin, X. Wang, B. Ur, X. Guo, and
P. Tague, “Smartauth: User-centered authorization for the internet of
things,” in 26th USENIX Security Symposium (USENIX Security 17).
Vancouver, BC: USENIX Association, 2017, pp. 361–378. [Online].
Available:
https://www.usenix.org/conference/usenixsecurity17/techni
cal-sessions/presentation/tian
[75] Y. J. Jia, Q. A. Chen, S. Wang, A. Rahmati, E. Fernandes, Z. M.
Mao, A. Prakash, and S. J. Unviersity, “Contexlot: Towards providing
contextual integrity to appiﬁed iot platforms.” in NDSS, 2017.
[76] E. Fernandes, J. Paupore, A. Rahmati, D. Simionato, M. Conti, and
A. Prakash, “Flowfence: Practical data protection for emerging iot
application frameworks.” in USENIX Security Symposium, 2016, pp.
531–548.
[77] Q. Wang, W. U. Hassan, A. Bates, and C. Gunter, “Fear and logging in
the internet of things,” in ISOC NDSS, 2018.
[78] A. W. Services, “Iot for non-ip devices,” https://aws.amazon.com/blogs
/iot/iot-for-non-ip-devices-2/, accessed: 2019-01.
[79] “Github,” https://github.com/, accessed: 2019-01.
[80] AWS,
“Iam and
condition
aws
sts
context
keys,”
https:
//docs.aws.amazon.com/IAM/latest/UserGuide/reference policies i
am-condition-keys.html, accessed: 2019-01.
APPENDIX
A. Inferring User’s Routine from Leaked MQTT Messages
Fig. 5 shows the three-week status of an air conditioner, in
which red points indicate the time when the air conditioner is
heating. From the chart, a potential attacker can infer that the
air conditioner usually starts at about 6:45 AM on weekdays,
7:45 AM in weekends and stops between 10 PM and midnight,
which likely indicate roughly when the user gets up in the
morning and goes to sleep in the night. Also interestingly, the
user very likely was at home most of the days, except the
Thursday in the second week and between 12pm - 4pm from
the ﬁrst Saturday to the second Friday – during the periods
the air conditioner did not work.
Fig. 5. Real air conditioning status of a user
B. Misleading Development Guide
On AWS IoT, device manufacturers can customize the AWS
IoT policy (a security policy template, which is populated
at runtime and assigned to each client) to restrict the Clien-
tId of a client, so as to mitigate our ClientId-based attack
(section III-C). However,
the secure manner to do so is
not clear to device manufacturers, since we found that the
exemplary security policies recommended on AWS developer
documentation and other popular IoT development guides on
the Internet are even subject to our attack. Further, the majority
of AWS IoT security policies we found that have been created
by developers in the wild (i.e., on GitHub) is vulnerable to our
attack, as elaborated below.
Through manually inspecting AWS’ ofﬁcial developer guide
and blogs, we gathered 38 exemplary/best-practice AWS IoT
policies provided by AWS. Unfortunately, AWS never rec-
ommended to restrict the ClientId and 26 out of the 38 rec-
ommended policies we found were vulnerable. For example,
Listing 1 illustrates an IoT policy from AWS ofﬁcial blog [78],
in which the Resource ﬁeld speciﬁes the ClientId that is
permitted to use when the client connects. In the template-like
policy, the variable ${iot:ClientId} will be populated
at runtime to be the actually claimed ClientId of a client.
This template feature can help a device manufacturer avoid
hard coding speciﬁc ClientId in its IoT policy, which can be
applied to a wide spectrum of clients at runtime. Such a policy,
however, does not restrict what ClientId a client can use, and,
hence, vulnerable to our attack. We reported the misleading,
insecure IoT policies to AWS, who acknowledged the problem.
To understand whether the problematic policy samples
provided by AWS indeed misguided IoT developers in the
wild, we located 89 open-source projects on Github [79] that
included an AWS IoT policy, and assessed their security qual-
ities. Unfortunately, 85.4% (76/89) of the projects included an
IoT policy that is vulnerable to our attack.
Listing 1. An Example of Vulnerable AWS IoT Policy
"Version": "2012-10-17",
"Statement": [{
"Effect": "Allow",
{
16
00:0002:0004:0006:0008:0010:0012:0014:0016:0018:0020:0022:0000:00WedFriSunTueThuSatMonWedFriSunTueTime (hh:mm)Date (ddd)Air Conditioner is working"Action": ["iot:Connect"],
"Resource": ["arn:aws:iot:us-east
-1:000000000000:client/${iot:ClientId}"]
}]
}
Further, although AWS IoT policy supports to specify the
permitted ClientId of a client, in practice, how to properly de-
ﬁne a secure policy is still unclear to device manufacturers and
developers. In our study, we thoroughly inspected AWS devel-
oper guide and constructed an IoT policy that allows the man-
ufacturer to mitigate our attack, as shown in Listing 2. Specif-
ically, when this policy is populated at runtime, its variable
${cognito-identity.amazonaws.com:sub} will be
instantiated as the Amazon Cognito ID [80] of the client – the
client’s platform-layer identity. Effectively, this restricts the
ClientId of the client to be equal to its authenticated platform-
layer identity, and, thus, defeats our attack. Nevertheless, this
policy has a usability problem, which very likely prevents its
wide adoption. Speciﬁcally, an IoT user tends to have multiple
clients (e.g., on her mobile phone, tablet, and laptop, etc.),
which all would have to present the same ClientId – the Ama-
zon Cognito ID of the user account – and, hence, will kick each
other ofﬂine (see the conﬂicting ClientId in Section III-C). To
effectively mitigate the security risks on AWS IoT, we envision
a solution that is in line with Section V-A: the ClientId a client
can use has to start with the client’s platform-layer identity
(with a sufﬁx to differentiate different, legitimate clients).
Listing 2. A Secure AWS IoT Policy Example
"Version": "2012-10-17",
"Statement": [{
"Effect": "Allow",
"Action": [
"iot:Connect"
],
"Resource": [
"arn:aws:iot:*:*:client/${cognito-
identity.amazonaws.com:sub}"
]
}]
{
}
17