# Secure Similar Sequence Query on Outsourced Genomic Data

**Authors:**
- Ke Cheng, Boise State University
- Yantian Hou, Boise State University
- Liangmin Wang, Jiangsu University

**Publication Information:**
- **Conference:** ASIACCS '18: 2018 ACM Asia Conference on Computer and Communications Security
- **Date:** June 4â€“8, 2018
- **Location:** Incheon, Republic of Korea
- **DOI:** 10.1145/3196494.3196535

## Abstract
The increasing availability of genomic data is unlocking new research potentials in genomic-data analysis. Outsourcing genomic-analysis tasks to cloud platforms leverages their powerful computational resources for large-scale genomic sequences. However, this raises significant privacy concerns. This paper addresses the secure similar sequence query (SSQ) problem over outsourced genomic data, which has not been fully explored. To tackle security and efficiency challenges, we propose two mixed protocols that combine two-party secure secret sharing, garbled circuits, and partial homomorphic encryption. These protocols support multi-user queries over a joint genomic dataset, enhancing scalability. We formally prove the security of our protocols under the semi-honest adversary model and provide theoretical performance analysis. Extensive experiments on real-world datasets demonstrate the efficacy and performance improvements of our solution compared to state-of-the-art methods.

## Keywords
Secure similar sequence query, genomic data outsourcing, mixed protocols

## 1. Introduction
The rapid advancement in gene-sequencing techniques has generated vast amounts of genomic data, which is crucial for understanding various diseases. The cost of sequencing a human genome has dropped significantly, making genomic data more accessible. This data is increasingly used for genome-data queries and analysis in the medical domain. Similar sequence queries (SSQs) are fundamental in many gene therapies, with edit distance being a key metric for measuring genomic similarity.

However, genomic information is highly sensitive, and malicious analysis can lead to severe privacy breaches. Researchers have developed several methods to perform SSQs securely, but these often impose significant computational and communication overheads, making them impractical. To address these issues, we propose two mixed protocols that combine multiple secure computation techniques to efficiently and securely compute k-nearest sequence queries. Our protocols minimize user-side computations and support multi-user scenarios, making them scalable and practical.

## 2. Preliminaries

### 2.1 Edit Distance Computation for Genomic Sequences
Edit distance measures the dissimilarity between two strings by counting the minimum number of edits required to transform one string into the other. The Wagner-Fisher algorithm, based on dynamic programming, is commonly used for this purpose. However, computing exact genome edit distances in a privacy-preserving manner is computationally expensive due to the large size of datasets and long sequences.

Recent research has developed approximate edit distance protocols to address this issue. These protocols leverage the fact that two average human individuals are extremely similar at the genetic level (about 99.5%). One such advanced approximate algorithm converts the edit-distance function into a block-wise approximation, breaking sequences into short blocks and pre-computing the edit distance for each block.

### 2.2 Secure Computation
#### 2.2.1 Additive Secret Sharing and Multiplication Triplets
Additive secret sharing involves splitting an \(\ell\)-bit value \(x\) into the sum of two values in the ring \(Z_{2^\ell}\). For an \(\ell\)-bit additive secret sharing \(\langle x \rangle\), we have \(\langle x \rangle_A + \langle x \rangle_B \equiv x \mod 2^\ell\), where \(\langle x \rangle_A\) and \(\langle x \rangle_B\) are known only by parties A and B, respectively.

To recover the value \(x\), party A (B) sends \(\langle x \rangle_A\) (\(\langle x \rangle_B\)) to party B (A), who then computes \(x = \langle x \rangle_A + \langle x \rangle_B\).

**Basic Operations:**
- **Addition:** To compute the sum of two shared values \(\langle x \rangle\) and \(\langle y \rangle\), \(\langle z \rangle = \langle x + y \rangle = \langle x \rangle + \langle y \rangle\). Party \(\alpha\) locally computes \(\langle z \rangle_\alpha = \langle x \rangle_\alpha + \langle y \rangle_\alpha\).
- **Multiplication:** To compute \(\langle z \rangle = \langle x \rangle \cdot \langle y \rangle\), pre-computed multiplication triplets \(\langle c \rangle = \langle a \rangle \cdot \langle b \rangle\) are used. Party \(\alpha\) locally computes \(\langle e \rangle_\alpha = \langle x \rangle_\alpha - \langle a \rangle_\alpha\). Both parties run \(e = \text{Rec}(\langle e \rangle_A, \langle e \rangle_B)\), and then party A sets \(\langle z \rangle_A = f \cdot \langle a \rangle_A + e \cdot \langle b \rangle_A + \langle c \rangle_A\), and party B sets \(\langle z \rangle_B = e \cdot f + f \cdot \langle a \rangle_B + e \cdot \langle b \rangle_B + \langle c \rangle_B\).

In the remainder of this paper, we will use additive secret sharing as a building block for our secure computation protocols.

## 3. System Framework
This section provides an overview of our system framework, including the architecture and the main components involved in the secure SSQ process.

## 4. Privacy-Preserving Sub-Protocols
We present a set of privacy-preserving sub-protocols that form the building blocks for our secure SSQ solution. These sub-protocols include methods for secure shuffling, conversion between different message spaces, and efficient computation of edit distances.

## 5. Proposed SSQ Protocols
We detail the two proposed SSQ protocols: SSQ-I for exact edit distance and SSQ-II for approximate edit distance. These protocols allow secure multi-user SSQ on a joint genomic database, with a significant portion of the computational workload shifted to the offline phase to improve query performance.

## 6. Computational Complexity and Security Analysis
We analyze the computational complexity of our protocols and formally prove their security under the semi-honest adversary model.

## 7. Experimental Evaluation
Extensive experiments on real-world datasets validate the efficacy and performance of our proposed protocols, demonstrating clear improvements over state-of-the-art methods.

## 8. Discussion
We discuss the implications of our work and review related research in the field of secure genomic data analysis.

## 9. Related Work
We provide a comprehensive review of existing works on secure similar sequence queries and highlight the contributions and limitations of these approaches.

## 10. Conclusion
In conclusion, we have presented two efficient and secure protocols for performing similar sequence queries on outsourced genomic data. Our protocols combine multiple secure computation techniques and support multi-user scenarios, offering a scalable and practical solution. Future work will focus on further optimizing the protocols and extending their applications to other domains.