![](img/eb356c06-1ac3-4310-9736-1e1163eab6cd.png)
EC2 Instance Role IAM Policy
请注意，该策略允许`ecs:RegisterContainerInstance`操作，这是 ECS 容器实例加入 ECS 集群所需的 ECS 权限，并且该策略还授予`ecs:CreateCluster`权限，这意味着试图注册到当前不存在的 ECS 集群的 ECS 容器实例将自动创建新集群。
还有一点需要注意的是，该策略适用于`"Resource": "*"`属性指定的所有资源，这意味着任何被分配了该策略角色的 EC2 实例都将能够加入您的帐户和区域中的任何 ECS 集群。同样，这可能看起来不太安全，但请记住，这是一个旨在简化为您的 ECS 容器实例授予必要权限的策略，在后面的章节中，我们将讨论如何创建您自己的自定义 IAM 角色和策略来限制给定 ECS 容器实例可以加入哪些 ECS 集群。
# 管理 ECS 容器实例
一般来说，ECS 容器实例应该是自我管理的，几乎不需要直接管理，但是有时您需要对 ECS 容器实例进行故障排除，因此了解如何连接到 ECS 容器实例以及了解在 ECS 容器实例的保护下发生了什么是非常有用的。
# 连接到 ECS 容器实例
ECS 容器实例是常规的 Linux 主机，因此如您所料，连接到实例仅仅意味着能够建立到实例的安全外壳(SSH)会话:
1.  如果您在 EC2 仪表板中导航回实例，我们首先需要配置连接到实例的安全组，以允许入站 SSH 访问。您可以通过点击安全组、选择入站选项卡并点击**编辑按钮**来修改安全组的入站规则。
2.  在**编辑入站规则**对话框中，点击**添加规则**按钮，添加一个新规则，设置如下:
    *   协议:TCP
    *   端口范围:22
    *   来源:我的 IP
![](img/47275b79-2f2b-40c2-9a8b-df1c4a977c87.png)
Add a Security Group Rule for SSH Access
3.  单击**保存**后，您将启用从您的公共 IP 地址到 ECS 容器实例的入站 SSH 访问。如果您在浏览器中单击“上一步”返回到您的 EC2 实例，您现在可以将公共 IP 地址和 SSH 复制到您的实例。
下面的示例演示了如何建立到实例的 SSH 连接，使用`-i`标志来引用与实例关联的 EC2 密钥对的私钥。您还需要使用`ec2-user`用户名登录，这是亚马逊 Linux 中包含的默认非根用户:
```
> ssh -i ~/.ssh/admin.pem PI:EMAIL
The authenticity of host '34.201.120.79 (34.201.120.79)' can't be established.
ECDSA key fingerprint is SHA256:c/MniTAq931tJj8bCVtRUP9gixM/ZXZSqDuMENqpod0.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '34.201.120.79' (ECDSA) to the list of known hosts.
   __| __| __|
   _| ( \__ \ Amazon ECS-Optimized Amazon Linux AMI 2017.09.g
 ____|\___|____/
For documentation visit, http://aws.amazon.com/documentation/ecs
5 package(s) needed for security, out of 7 available
Run "sudo yum update" to apply all updates.
```
首先要注意的是，登录横幅指示该实例基于亚马逊 ECS 优化的亚马逊 Linux AMI，这是创建 ECS 容器实例时使用的默认和推荐的亚马逊机器映像(AMI)。AWS 维护这个 AMI，并使用推荐用于 ECS 的 Docker 和 ECS 代理版本定期更新它，因此这是迄今为止最简单的用于您的 ECS 容器实例的平台，我强烈建议使用这个 AMI 作为您的 ECS 容器实例的基础。
你可以在这里了解这个 AMI 的更多信息:[https://docs . AWS . Amazon . com/Amazon ECS/latest/developer guide/ECS-optimized _ AMI . html](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html)。它包括 ECS 支持的每个区域的当前 AMI 映像标识列表。
In [Chapter 6](06.html), *Building Custom ECS Container Instances* you will learn how to customize and enhance the Amazon ECS-Optimized Amazon Linux AMI.
# 检查本地 Docker 环境
如您所料，您的 ECS 容器实例将运行一个活动的 Docker Engine，您可以通过运行`docker info`命令来收集相关信息:
```
> docker info
Containers: 1
 Running: 1
 Paused: 0
 Stopped: 0
Images: 2
Server Version: 17.09.1-ce
Storage Driver: devicemapper
 Pool Name: docker-docker--pool
 Pool Blocksize: 524.3kB
 Base Device Size: 10.74GB
 Backing Filesystem: ext4
...
...
```
在这里，您可以看到该实例正在运行 Docker 版本 17.09.1-ce，使用设备映射器存储驱动程序，并且当前有一个容器正在运行。
现在让我们通过执行`docker container ps`命令来看看正在运行的容器:
```
> docker ps
CONTAINER ID   IMAGE                            COMMAND    CREATED          STATUS          NAMES
a1b1a89b5e9e   amazon/amazon-ecs-agent:latest   "/agent"   36 minutes ago   Up 36 minutes   ecs-agent
```
您可以看到，ECS 代理实际上是作为一个名为`ecs-agent`的容器运行的，它应该总是在您的 ECS 容器实例上运行，以便您的 ECS 容器实例由 ECS 管理。
# 检查 ECS 代理
如前所示，ECS 代理作为 Docker 容器运行，我们可以使用`docker container inspect`命令收集一些关于这个容器如何工作的见解。在前面的示例中，我们引用了 ECS 代理容器的名称，然后使用 Go 模板表达式和`--format`标志来过滤命令输出，显示从 ECS 代理容器到 ECS 容器实例主机的各种绑定装载或卷映射。
In many of the command examples, I am piping output to the `jq` utility, which is a useful utility used for parsing JSON output at the command line. `jq` is not included by default in the Amazon Linux AMI, so you will need to install `jq` by running the `sudo yum install jq` command.
```
> docker container inspect ecs-agent --format '{{json .HostConfig.Binds}}' | jq
[
  "/var/run:/var/run",
  "/var/log/ecs:/log",
  "/var/lib/ecs/data:/data",
  "/etc/ecs:/etc/ecs",
  "/var/cache/ecs:/var/cache/ecs",
  "/cgroup:/sys/fs/cgroup",
  "/proc:/host/proc:ro",
  "/var/lib/ecs/dhclient:/var/lib/dhclient",
  "/lib64:/lib64:ro",
  "/sbin:/sbin:ro"
]
```
Running the docker container inspect command
注意`/var/run`文件夹从主机映射到代理，代理提供对位于`/var/run/docker.sock`的 Docker Engine 套接字的访问，允许 ECS 代理管理 Docker Engine。您还可以看到，ECS 代理日志将被写入 Docker Engine 主机文件系统上的`/var/log/ecs`。
# 正在验证 ECS 代理
ECS 代理包括一个本地网络服务器，可用于检查当前的 ECS 代理状态。
以下示例演示了如何使用`curl`命令检查 ECS 代理:
```
> curl -s localhost:51678 | jq
{
  "AvailableCommands": [
    "/v1/metadata",
    "/v1/tasks",
    "/license"
  ]
}
> curl -s localhost:51678/v1/metadata | jq
{
  "Cluster": "test-cluster",
  "ContainerInstanceArn": "arn:aws:ecs:us-east-1:385605022855:container-instance/f67cbfbd-1497-47c0-b56c-a910c923ba70",
  "Version": "Amazon ECS Agent - v1.16.2 (998c9b5)"