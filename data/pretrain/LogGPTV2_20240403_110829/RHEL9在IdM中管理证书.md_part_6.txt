::: orderedlist
**步骤**
1.  为用户生成证书请求。例如，使用 OpenSSL:
    ``` literallayout
    $ openssl req -new -newkey rsa:2048 -days 365 -nodes -keyout private.key -out cert.csr -subj '/CN=smime_user'
    ```
2.  为用户从 IdM CA 请求新证书：
    ``` literallayout
    $ ipa cert-request cert.csr --principal=smime_user --profile-id=smime
    ```
    （可选）将 \--ca [*sub-CA_name*]{.emphasis} 选项传给命令，以从子 CA
    ，而不是根 CA 请求证书。
:::
::: itemizedlist
**验证步骤**
-   验证新发布的证书是否已分配给用户：
    ``` literallayout
    $ ipa user-show user
      User login: user
      ...
      Certificate: MIICfzCCAWcCAQA...
      ...
    ```
:::
::: itemizedlist
**其他资源**
-   请参阅 `ipa(a)`{.literal} 手册页。
-   请参阅 `ipa help user-show`{.literal} 命令。
-   请参阅 `ipa help cert-request`{.literal} 命令。
-   请参阅 `openssl(lssl)`{.literal} 手册页。
:::
:::
::: section
::: titlepage
# []{#creating-and-managing-certificate-profiles-in-identity-management_managing-certificates-in-idm.html#modifying-a-certificate-profile_creating-and-managing-certificate-profiles-in-identity-management}修改证书配置文件 {.title}
:::
这个流程描述了如何使用 `ipa certprofile-mod`{.literal}
命令，直接通过命令行修改证书配置文件。
::: orderedlist
**步骤**
1.  确定您要修改的证书配置文件的证书配置文件 ID。显示当前存储在 IdM
    中的所有证书配置文件：
    ``` literallayout
    # ipa certprofile-find
    ------------------
    4 profiles matched
    ------------------
      Profile ID: caIPAserviceCert
      Profile description: Standard profile for network services
      Store issued certificates: TRUE
      Profile ID: IECUserRoles
      ...
      Profile ID: smime
      Profile description: S/MIME certificates
      Store issued certificates: TRUE
    --------------------------
    Number of entries returned
    --------------------------
    ```
2.  修改证书配置文件描述。例如，如果您使用现有的配置文件为 S/MIME
    证书创建了自定义证书配置文件，请按照新用法更改描述：
    ``` literallayout
    # ipa certprofile-mod smime --desc "New certificate profile description"
    ------------------------------------
    Modified Certificate Profile "smime"
    ------------------------------------
        Profile ID: smime
        Profile description: New certificate profile description
        Store issued certificates: TRUE
    ```
3.  在文本编辑器中打开您的客户证书配置文件，并进行修改以满足您的要求：
    ``` literallayout
    # vi smime.cfg
    ```
    有关可以在证书配置文件中配置哪些选项的详情，请查看
    [证书配置文件配置参数](#creating-and-managing-certificate-profiles-in-identity-management_managing-certificates-in-idm.html#certificate-profile-configuration-parameters_creating-and-managing-certificate-profiles-in-identity-management "证书配置文件配置参数"){.link}。
4.  更新现有证书配置文件：
    ``` literallayout
    # ipa certprofile-mod _profile_ID_ --file=smime.cfg
    ```
:::
::: itemizedlist
**验证步骤**
-   验证证书配置文件是否已更新：
    ``` literallayout
    $ ipa certprofile-show smime
      Profile ID: smime
      Profile description: New certificate profile description
      Store issued certificates: TRUE
    ```
:::
::: itemizedlist
**其他资源**
-   请参阅 `ipa(a)`{.literal} 手册页。
-   请参阅 `ipa help certprofile-mod`{.literal}。
:::
:::
::: section
::: titlepage
# []{#creating-and-managing-certificate-profiles-in-identity-management_managing-certificates-in-idm.html#certificate-profile-configuration-parameters_creating-and-managing-certificate-profiles-in-identity-management}证书配置文件配置参数 {.title}
:::
证书配置文件配置参数存储在 CA 配置文件目录
`/var/lib/pki/pki-tomcat/ca/profiles/ca`{.literal} 中的
[*profile_name*]{.emphasis}.cfg 文件中。配置文件的所有参数 -
默认值、输入、输出和约束 -
都在单个策略集中配置。为证书配置集设置的策略具有名称
`policyset.policyName.policyNumber。`{.literal}例如，对于策略设置
`serverCertSet`{.literal} ：
``` literallayout
policyset.list=serverCertSet
policyset.serverCertSet.list=1,2,3,4,5,6,7,8
policyset.serverCertSet.1.constraint.class_id=subjectNameConstraintImpl
policyset.serverCertSet.1.constraint.name=Subject Name Constraint
policyset.serverCertSet.1.constraint.params.pattern=CN=[^,]+,.+
policyset.serverCertSet.1.constraint.params.accept=true
policyset.serverCertSet.1.default.class_id=subjectNameDefaultImpl
policyset.serverCertSet.1.default.name=Subject Name Default
policyset.serverCertSet.1.default.params.name=CN=$request.req_subject_name.cn$, OU=pki-ipa, O=IPA
policyset.serverCertSet.2.constraint.class_id=validityConstraintImpl
policyset.serverCertSet.2.constraint.name=Validity Constraint
policyset.serverCertSet.2.constraint.params.range=740
policyset.serverCertSet.2.constraint.params.notBeforeCheck=false
policyset.serverCertSet.2.constraint.params.notAfterCheck=false
policyset.serverCertSet.2.default.class_id=validityDefaultImpl
policyset.serverCertSet.2.default.name=Validity Default
policyset.serverCertSet.2.default.params.range=731
policyset.serverCertSet.2.default.params.startTime=0
```
每个策略集都包含按照策略 ID
号为证书配置文件配置的策略列表，以它们的评估顺序排列。服务器为其收到的每个请求评估每个策略集。收到单个证书请求时，将评估一个集合，并忽略配置文件中的任何其他集合。发布双密钥对后，对第一个证书请求评估第一个策略集，对第二个证书请求评估第二个策略集。在发布双密钥对时，在发布单个证书或多个集合时，您不需要多个策略集。
::: table
[]{#creating-and-managing-certificate-profiles-in-identity-management_managing-certificates-in-idm.html#idm140502520188832}
**表 5.1. 证书配置文件参数**
::: table-contents
+----------------------------------+----------------------------------+
| 参数                             | 描述                             |
+:=================================+:=================================+
| desc                             | 证书配置                         |
|                                  | 文件的自由文本描述，显示在终端实 |
|                                  | 体页面上。例如，`desc=This cert  |
|                                  | ificate profile 用于使用代理身份 |
|                                  | 验证注册服务器证书`{.literal}。  |
+----------------------------------+----------------------------------+
| enable                           | 启用配置文                       |
|                                  | 件，使它可通过终端实体页面访问。 |
|                                  | 例如：`enable=true`{.literal}。  |
+----------------------------------+----------------------------------+
| auth.instance_id                 | 设置身份验证管                   |
|                                  | 理者插件，用来验证证书请求。要进 |
|                                  | 行自动注册，如果身份验证成功，CA |
|                                  | 会立即发布证书                   |
|                                  | 。如果身份验证失败或者没有指定身 |
|                                  | 份验证插件，则会将请求排队，来由 |
|                                  | 代理手动批准。例如，`auth.instan |
|                                  | ce_id=AgentCertAuth`{.literal}。 |
+----------------------------------+----------------------------------+
| authz.acl                        | 指定授权约束。这主要用           |
|                                  | 于设置组评估访问控制列表(ACL)。  |
|                                  | 例如，`caCMCUserCert`{.literal}  |
|                                  | 参数要求 CMC                     |
|                                  | 请                               |
|                                  | 求的签名者属于证书管理者代理组： |
|                                  |                                  |
|                                  | `authz.acl=group="Certi          |
|                                  | ficate Manager Agents`{.literal} |
|                                  |                                  |
|                                  | 在基于目录的用户证书续订中，此   |
|                                  | 选项用于确保原始请求者和当前验证 |
|                                  | 的用户是同一个。在评估授权前，实 |
|                                  | 体必须验证（绑定或登录到系统）。 |
+----------------------------------+----------------------------------+
| 名称                             | 证书                             |
|                                  | 配置文件的名称。例如，`name=Agen |
|                                  | t-Authenticated Server Certifica |
|                                  | te Enrollment`{.literal}。此名称 |
|                                  | 显示在最终用户注册或续订页面上。 |
+----------------------------------+----------------------------------+
| input.list                       | 按名称                           |
|                                  | 列出证书配置文件允许的输入。例如 |
|                                  | ，`input.list=i1,i2`{.literal}。 |
+----------------------------------+----------------------------------+
| input.input_id.class_id          | 按输入 ID（在 input.list         |
|                                  | 中列出的输入名称）表示输入的     |
|                                  | java 类名称。例如,               |
|                                  | `input.i1.class_                 |
|                                  | id=certReqInputImpl`{.literal}。 |
+----------------------------------+----------------------------------+
| output.list                      | 按名称列出                       |
|                                  | 证书配置文件可能的输出格式。例如 |
|                                  | `output.list=o1`{.literal}。     |
+----------------------------------+----------------------------------+
| output.output_id.class_id        | 为在 output.list                 |
|                                  | 中命名的输出格式指定 java        |
|                                  | 类名称。例如：                   |
|                                  | `output.o1.clas                  |
|                                  | s_id=certOutputImpl`{.literal}。 |
+----------------------------------+----------------------------------+
| policyset.list                   | 列出配置的证书                   |
|                                  | 配置文件规则。对于双证书，一组规 |
|                                  | 则适用于签名密钥，另一组规则适用 |
|                                  | 于加密密钥。单个证书仅使用一组证 |
|                                  | 书配置文件规则。例如，`policyset |
|                                  | .list=serverCertSet`{.literal}。 |
+----------------------------------+----------------------------------+
| policyset.policyset_id.list      | 按照策略 ID                      |
|                                  | 号                               |
|                                  | ，按评估的顺序，列出为证书配置文 |
|                                  | 件配置的策略集合中的策略。例如： |
|                                  | `policyset.serverCertSet.l       |
|                                  | ist=1,2,3,4,5,6,7,8`{.literal}。 |
+----------------------------------+----------------------------------+
| policyset.policyset_id.p         | 表示配置                         |
| olicy_number.constraint.class_id | 文件规则中配置的默认约束插件集的 |
|                                  | java 类名称。例如,               |
|                                  | policyset                        |
|                                  | .serverCertSet.1.constraint.clas |
|                                  | s_id=subjectNameConstraintImpl。 |
+----------------------------------+----------------------------------+
| policyset.policyset_             | 提供用户定义的约                 |
| id.policy_number.constraint.name | 束名称。例如，policyset.serverC  |
|                                  | ertSet.1.constraint.name=Subject |
|                                  | Name Constraint。                |
+----------------------------------+----------------------------------+
| policyset.policyset_id.policy_nu | 为约束的允许的属性指定值。       |
| mber.constraint.params.attribute | 可能的属性因约束类型而异。例如,  |
|                                  | policyset.serverCertSet.1.c      |
|                                  | onstraint.params.pattern=CN=.\*. |
+----------------------------------+----------------------------------+
| policyset.policyset_i            | 给出配置文件规则中默认集的 java  |
| d.policy_number.default.class_id | 类名称。例如,                    |
|                                  | polic                            |
|                                  | yset.serverCertSet.1.default.cla |
|                                  | ss_id=userSubjectNameDefaultImpl |
+----------------------------------+----------------------------------+
| policyset.policys                | 给                               |
| et_id.policy_number.default.name | 出用户定义的默认值的名称。例如： |
|                                  | policyset.serv                   |
|                                  | erCertSet.1.default.name=Subject |
|                                  | Name Default                     |
+----------------------------------+----------------------------------+
| policyset.policyset_id.policy    | 为默认值的允许的属性指定值。     |
| _number.default.params.attribute | 可能的属性因默认类型而异。例如： |
|                                  | policyset.serverCer              |
|                                  | tSet.1.default.params.name=CN=(N |
|                                  | ame)\$request.requestor_name\$。 |
+----------------------------------+----------------------------------+
:::
:::
:::
:::
[]{#managing-the-validity-of-certificates-in-idm_managing-certificates-in-idm.html}
::: chapter
::: titlepage
# []{#managing-the-validity-of-certificates-in-idm_managing-certificates-in-idm.html#managing-the-validity-of-certificates-in-idm_managing-certificates-in-idm}第 6 章 管理 IdM 中证书的有效性 {.title}
:::
在身份管理(IdM)中，您可以管理现有证书和未来要发布的证书的有效性，但方法有所不同。
::: section
::: titlepage
# []{#managing-the-validity-of-certificates-in-idm_managing-certificates-in-idm.html#proc_managing-the-validity-of-an-existing-certificate-that-was-issued-by-idm-ca_managing-the-validity-of-certificates-in-idm}管理 IdM CA 发布的现有证书的有效性 {.title}
:::
在 IdM 中，可以使用以下方法查看证书的到期日期：
::: itemizedlist
-   [在 IdM WebUI
    中查看到期日期](#managing-the-validity-of-certificates-in-idm_managing-certificates-in-idm.html#viewing-the-expiry-date-of-a-certificate-in-IdM-WebUI_managing-the-validity-of-certificates-in-idm "在 IdM WebUI 中查看证书的到期日期"){.link}。
-   [在 CLI
    中查看到期日期](#managing-the-validity-of-certificates-in-idm_managing-certificates-in-idm.html#viewing-the-expiry-date-of-a-certificate-in-the-CLI_managing-the-validity-of-certificates-in-idm "在 CLI 中查看证书的到期日期"){.link}.
:::
您可以使用以下方法管理 IdM CA 发布的现有证书的有效性：
::: itemizedlist
-   通过使用原始证书签名请求(CSR)或私钥生成的新 CSR
    请求新的证书来续订证书。您可以使用以下工具请求新证书：
    ::: variablelist
    [certmonger]{.term}
    :   您可以使用 `certmonger`{.literal}
        请求服务证书。证书到期之前，`certmonger`{.literal}
        将自动续订证书，从而确保服务证书持续有效。详情请参阅 [使用
        certmonger 为服务获取 IdM
        证书](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#obtain-service-cert-with-certmonger_certmonger-for-issuing-renewing-service-certs){.link}
        。