title:Inadvertently Making Cyber Criminals Rich: A Comprehensive Study
of Cryptojacking Campaigns at Internet Scale
author:Hugo L. J. Bijmans and
Tim M. Booij and
Christian Doerr
Inadvertently Making Cyber Criminals Rich: 
A Comprehensive Study of Cryptojacking 
Campaigns at Internet Scale
Hugo L.J. Bijmans, Tim M. Booij, and Christian Doerr, Delft University of Technology
https://www.usenix.org/conference/usenixsecurity19/presentation/bijmans
This paper is included in the Proceedings of the 28th USENIX Security Symposium.August 14–16, 2019 • Santa Clara, CA, USA978-1-939133-06-9Open access to the Proceedings of the 28th USENIX Security Symposium is sponsored by USENIX.Inadvertently Making Cyber Criminals Rich:
A Comprehensive Study of Cryptojacking Campaigns at Internet Scale
Hugo L.J. Bijmans
Delft University of Technology
Tim M. Booij
Delft University of Technology
Christian Doerr
Delft University of Technology
Abstract
Since the release of a browser-based cryptominer by Coinhive
in 2017, the easy use of these miners has skyrocketed illicit
cryptomining in 2017 and continued in 2018. This method
of monetizing websites attracted website owners, as well as
criminals seeking new ways to earn a proﬁt. In this paper,
we perform two large studies into the world of cryptojacking,
focused on organized cryptomining and the spread of crypto-
jacking on the Internet. We have identiﬁed 204 cryptojacking
campaigns, an order of magnitude more than previous work,
which indicates that these campaigns are heavily underesti-
mated by previous studies. We discovered that criminals have
chosen third-party software – such as WordPress – as their
new method for spreading cryptojacking infections efﬁciently.
With a novel method of using NetFlow data we estimated the
popularity of mining applications, which showed that while
Coinhive has a larger installation base, CoinImp WebSocket
proxies were digesting signiﬁcantly more trafﬁc in the second
half of 2018. After crawling a random sample of 49M do-
mains, ~20% of the Internet, we conclude that cryptojacking
is present on 0.011% of all domains and that adult content is
the most prevalent category of websites affected.
1 Introduction
Unlike traditional currencies, such as the Euro or Dollar, cryp-
tocurrencies are digital assets created as a medium of ex-
change based on cryptography and a blockchain, which are
used to secure both the creation and transactions of units. In
2009, Satoshi Nakamoto released the Bitcoin [33], the ﬁrst
ever decentralized cryptocurrency, which made it possible
to transfer monetary value to another person by creating a
transaction and committing this to the blockchain, a list of
blocks secured by cryptographic operations maintained by
a peer-to-peer network of miners. These miners secure the
blockchain by constantly collecting transaction data from the
network and validating it by solving cryptographic challenges
based on the previous block, the transaction and the receiver
of the transaction. After validation, the conﬁrmed transaction
is inserted into the blockchain again in the form of a validated
block. As a reward, the miner gets a (part of a) cryptocur-
rency. This network guarantees that only the rightful owner of
a Bitcoin wallet can make transactions and prevents malicious
actors from inserting false information into the blockchain.
Solving these cryptographic challenges as a miner has how-
ever become so difﬁcult that Bitcoin cannot efﬁciently be
mined anymore on regular PCs. Over the past years, over
4,000 other cryptocurrencies have been created, so-called alt-
coins. One of them is Monero (XMR), launched in 2014 and
nowadays the most popular cryptocurrency in browser-based
mining [34]. In contrast to Bitcoin, Monero uses a private
blockchain, meaning that while anybody can use it to make
transactions, nobody is allowed to view them [47]. It also
builds upon a different proof-of-work algorithm to validate its
transactions, called CryptoNight, a fork of CryptoNote [43].
This algorithm is designed to be memory-hard and there-
fore requires a large set of bytes in memory to perform fre-
quent read and write operations on. Simple consumer-grade
CPUs have exactly that memory available at their processor
caches, making this kind of mining the most efﬁcient on regu-
lar consumer-grade hardware. To speed up the mining process,
mining jobs can be distributed among individual miners in a
mining pool. In such a pool, miners work together to mine
new blocks and share the rewards. Work is distributed among
miners in the pool based on the difﬁculty of the cryptographic
challenge. As a consequence, powerful machines solve the
more difﬁcult puzzles, while low-end machines receive the
easier ones. Rewards are shared according to the same princi-
ple. Mining pools closely monitor the submissions from their
miners and state that they will block any wallet address after
receiving evidence that a wallet is used for malware or botnet
activities [28].
The introduction of alt-coins that by design can be effec-
tively mined on regular PCs also made them an attractive
target for cybercriminals. Both the private blockchain and the
ASIC-resistant mining algorithm of Monero quickly made
Monero one of the preferred choices. In addition to being
USENIX Association
28th USENIX Security Symposium    1627
included in malware [37], there also exist implementations to
perform drive-by mining or cryptojacking, where cryptocur-
rency is mined in the user’s web browser while visiting a web
site. While originally developed as an alternative mechanism
to donate to the upkeep of a website in presence of now ubiq-
uitous ad-blockers, many methods exist to maliciously apply
browser-based mining: for example, criminals hack vulnera-
ble websites to install mining scripts [3] or create malicious
advertisements with cryptojacking code that are displayed
on benign websites [30], but actors have also compromised
routers [35] or setup malicious Wi-Fi networks [38] to inject
cryptominers into their users’ trafﬁc.
Previous studies have performed surveys on the use of
cryptominers across the most commonly visited websites and
have identiﬁed groups of criminals installing cryptominers
on a large number of domains for their own proﬁt [22, 39].
It makes sense for a cyber criminal to lure as many users
as possible into such mining, which could be accomplished
not only by deploying the cryptojacking code into popular
websites, but hacking a large number of websites or injecting
a resource such as a common library that is used by a large
number of unsuspecting websites. These individual installa-
tions are working together in a coordinated campaign, thus
signiﬁcantly increasing the proﬁts of the criminal, but at the
same time also indicating an elevated level of knowledge and
sophistication of the adversary. The presence and extent of
such coordination is however largely unknown.
In this paper, we address this gap and systematically inves-
tigate the coordination and collaboration of cryptojackers on
the Internet and make the following four contributions:
• We are the ﬁrst to systematically analyze the relation-
ships between websites that perform cryptomining and
the actors behind them. By this campaign analysis, we
ﬁnd the existence of massive installations. In fact, we
have identiﬁed 3 times as much cryptojacking activity
as [39] and the ﬁve largest campaigns we detected ex-
ceed the total size of cryptomining reported in [22].
• We show that the bulk of organized mining activity is the
result of compromised (parts of) third-party software and
that comparatively little organized activity is the result
of hacked websites or an explicit choice to mine by the
website owner.
• Through a survey of 1,136 top level domains and by
comparing the installation base with actual mining trafﬁc
on the Internet using NetFlow data, we ﬁnd that the most
prominently installed miner is actually not the one that
generates the most mining activity in practice. We also
see that applications and attack vectors come and go,
and that different TLD zones exhibit clear differences in
mining application popularity.
• Estimating cryptojacking by solely crawling the Alexa
Top 1M results is an overestimation of the size, as we
see that cryptojacking activity is almost 6 times higher
in that subset compared to the rest of the Internet.
To enable follow up research, we make our data and soft-
ware publicly available at https://www.cyber-threat-
intelligence.com/cryptojacking-campaigns.
2 Background
WebAssembly & asm.js To enable faster execution of code
inside the browser, Mozilla developed asm.js, a technique for
translating high-level languages, such as C and C++, into
JavaScript to be used by the browser [29]. Multiple validation
methods enable the JavaScript engine to compile this code
ahead-of-time and improve execution speed. This technique
made it possible to execute code faster inside the browser
after its release in 2013.
WebAssembly (Wasm) is a more recently released script-
ing language developed by the World Wide Web consortium
in 2017 and is able to compile high-level languages like C,
C++ and Rust inside the browser to be used in web applica-
tions [50]. It runs in a sandbox within the browser and it aims
to execute as fast as native machine code. Wasm is comple-
mentary to JavaScript, as it is being controlled by JavaScript
code after its compilation.
The difference between asm.js and Wasm is the fact that
the latter is compiled only once and is started directly at native
speed, whereas code in asm.js is compiled and optimized at
run time, therefore decreasing execution speed. Both tech-
niques are supported by all four major browsers (Chrome,
Firefox, Edge and Safari) and have drastically improved the
execution speed of applications inside the browser, which
made them very attractive for browser-based mining.
WebSockets & Stratum WebSockets is a HTML5 proto-
col providing two-way communication between the client
and a server over a single TCP connection [52]. The protocol
enables easy real-time data transfer without refreshing (a part
of) the web page. Communication is done over the same TCP
ports as the web browser, making it robust to strict ﬁrewall
rules or other blocking.
Developers are free to deﬁne the format of messages sent
over WebSocket connections. However, there is a protocol
speciﬁcally designed for cryptomining communications: the
Stratum Mining Protocol, a line-based protocol with mes-
sages encoded in plain-text JSON-RPC format [46]. Servers
communicate with their clients using Stratum to authorize
new miners in the pool, distribute jobs based on difﬁculty
and retrieve found hashes from the miners. An example of a
WebSocket connection using the Stratum protocol is given in
Table 1.
Browser-based mining Triggered by the rise of CPU-
mineable cryptocurrencies (such as Monero) and the rapid
1628    28th USENIX Security Symposium
USENIX Association
WebSocket trafﬁc frames
⇑ {"type":"auth",
"params":{"site_key":"",
"type":"anonymous","user":null,"goal":0,
"version":3000,"coin":"xmr"}}
⇓ {"type":"authed",
"params":{"token":"",
"hashes":0}}
⇓ {"type":"job",
"params":{"blob":"",
"job_id":"",
"target":"ffffff01", "id":"",
"algo":"cn","variant":"4","height":1808537}}
⇑ {"type":"submit",
"params":{"job_id":"",
"nonce":"377c32b8",
"result":""}}
⇓ {"type":"hash_accepted",
"params":{"hashes":128}}
⇓ {"type":"job",
"params":{"blob":"",
"job_id":"",
"target":"ffffff01", "id":"",
"algo":"cn","variant":"4","height":1808537}}
Table 1: Example of a WebSocket connection using the Stra-
tum Mining Protocol to communicate with a mining pool
development of useful web standards (e.g.WebAssembly and
the Stratum protocol), browser-based cryptomining gained an
enormous momentum in the autumn of 2017. Coinhive, a Ger-
man company, created an easy to use browser-based mining
application as an alternative to advertisements [9, 23]. They
provide a JavaScript library, an API and a WebSocket proxy in-
frastructure to developers to easily integrate a browser-based
miner into their website and let their visitors mine for Mon-
ero. 70% of the mined Monero is transferred to the owner
of the account, the remaining 30% is kept by Coinhive [10].
Soon after Coinhive released their miner application, similar
ones appeared, such as Cryptoloot [11] and Coin-Have [6].
Nowadays, miner applications come and go, with various ca-
pabilities and usage fees, but Coinhive still has a prominent
place in the cryptojacking landscape.
Overview of a cryptojacking attack Although different
mining applications exist, all browser-based miners show
great similarities. As depicted in Figure 1, the user visits
the cryptomining website (1) and receives a valid HTTP re-
sponse (2). The cryptomining website requests a JavaScript
ﬁle (3), which controls the mining operation. This script ﬁrst
explores the host system, searches for the number of CPU
threads available, downloads the WebAssembly mining script
Figure 1: Browser-based cryptomining attack
for the actual mining operation (4) and distributes it over a
number of WebWorkers (a JavaScript instance running in the
background, without affecting the page performance). It also
sets up a WebSocket connection with the mining pool through
a proxy (5). The script authenticates itself to the mining pool
server (in Stratum format) and, if successful, receives the ﬁrst
job to work on (6). The WebWorkers start working on that
job and found hashes are submitted to the mining pool by the
controller script (7).
Campaign analysis Campaign analysis is the ﬁeld of re-
search focused on discovering clusters of malicious online
entities. The term originates from analysis of large volumes
of SPAM or phishing emails, but can also be used in other
areas, such as browser-based cryptomining. In this particular
case, campaign analysis is focused on ﬁnding clusters of the
same cryptominers on different domains. Since those miners
always include a form of identiﬁcation to which funds need to
be transferred, clustering cryptojacking websites can be done
relatively easily. Most mining applications deﬁne a siteKey,
a unique (random) string used to identify the user to which
earnings have to be transferred, which can be found in either
the source code or the WebSocket trafﬁc. A similar siteKey
guarantees that the same account is rewarded for the mining
that takes place. Identifying campaigns can also be done by
searching for similar WebSocket proxy servers, if the website
is not using a popular one, but instead hosting its own server.
We have used these, and other techniques to discover cam-
paigns as discussed in Section 6.1. We have chosen to deﬁne
a cluster of websites as a campaign once they share identi-
cal features more than 5 times. E.g. a cluster of 6 websites
with the same siteKey or private WebSocket proxy server is
considered a campaign.
USENIX Association
28th USENIX Security Symposium    1629
WWWProxyMinerPool1234567AHTTP Request/ResponseExternal HTTPWebserverWebserverExternalResourcesWebsocketProxyClientBCDWebSocket MiningWeb Workers3 Attack vectors
Mining cryptocurrencies with the computing power of web-
site visitors is not illegal, as long as users are asked permission
to mine. When a user cannot consent to the mining activities
their computer is involved in, it is called cryptojacking. Al-
though browser-based cryptomining is a recent phenomenon,
jurisdiction on cryptomining without consent already exists.
In 2015, a US court settled a case with a developer of Bitcoin-
mining software, in which the Attorney General stated that
no website should tap into a person’s computer processing
power and that the user has to be informed about the crypto-
mining activities which take place on the visited website [18].
However, this is often not the case. In this section, we summa-
rize the attack surface for cryptojacking on the Internet. All
attack vectors are marked in Figure 1 by their corresponding
characters.
Website owner (A) The owner of a website can add a cryp-
tomining script to his web page without informing its users.
This can be done as a replacement for advertisements, which
was the case for The Pirate Bay, one of the most popular
torrent websites [48]. Only a few days after the Coinhive ser-
vice was launched, they added a miner to their website which
started mining without user consent, as a replacement for the
intrusive advertisements they would normally show. Nowa-
days, the website shows a disclaimer on the bottom of the
homepage, notifying their visitors that their CPU will be used
for cryptomining. Another major source of website owner
initiated cryptojacking is parked domains [13].
Compromised websites (A) A cryptomining script can
also be present on a web page without knowledge of the
website owner. When a website gets hacked, an attacker is
able to inject cryptomining scripts. Now, the attacker receives
the rewards for the visitors mining on that website. There
are numerous examples of this kind of attack. There have
been cryptojacking scripts found on web pages of the Indian