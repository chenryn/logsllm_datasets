## Page 29
22
·第2章服务器为什么这么慢？耗尽了CPU、RAM和磁盘I/O资源
息。在处理特定的系统问题之前，排除内存问题非常重要。
2.2.3
务器上。
来看，你可能需要考虑增加系统资源或者将这些功能分拆到多台服
期内，你可以终止（或推迟）一些进程直到负载降低，但是从长期
要运行全部Apache 进程，同时你可能还需要日志解析工具。在短
题的解决方案从长期来看相当复杂。以 Web 服务器为例，你的确需
志解析脚本。这些进程可能会消耗差不多等量的CPU 资源。这种问
Web 服务器中可能有大量Apache 进程，还有cron 中运行的部分日
量使用CPU资源的进程（按K键，然后输人对应进程的PID）。
而其余进程所占CPU百分比相对很低，此时，解决方法就是终止大
种情况下，top命令输出中前一两个进程都有非常高的CPU百分比，
或者很多个进程消耗殆尽。任何一种情况都很容易确定，因为在第一
可能会看到多个进程都耗了99%的CPU时间。
单个CPU的百分比，所以如果你拥有一台具备4个CPU的机器，
status 进程消耗了12%的CPU 时间。注意，这个数字代表的是所占
认情况下，top 命令会按照各个进程CPU 使用率由高到低排序。
显然你需要确定系统中哪一个进程占用了如此大量的CPU资源。默
在多进程的情况下，你可能让系统做了太多事。比如说，在
你会看到大部分高CPU负载的情况都是由于CPU被一个、两个
top输出中的以下两行提供了非常有价值的RAM使用情况的信
在这个例子中，mysqld进程消耗了53%的CPU时间，nagios2db
22442 nagios
Swap: 1004052k total,
Mem:1024176k total，
24636 nagios
18749 nagios
9463mysq1
PID USER
解决内存不足的问题
PRNIVIRTRESSHRS%CPU%MEM
0604820241452S
S
3466010m
997408k used，
140m 134m
4360k used,
712S
1868
999692k free,
26768k free,
53
5.5
9
569:17.64
0:00.04check_time.pl
1345:01
TIME+COMMAND
1195:15
286040k cached
85520kbuffer
nagios
nagios2db_status
mysqld
---
## Page 30
看到使用了一些交换存储，这也不足以作为问题的征兆。如果一个
有大量可用的内存资源，几乎没有使用任何交换存储。即便你的确
说实际上仅使用了711368KB的RAM。在这个例子中，系统仍然
为活动的进程提供RAM，那RAM中将不会缓存这么多文件。由于
次访问这个文件，访问速度将会得到大幅提升。如果系统的确需要
RAM，Linux将会在RAM 中缓存这个文件，这样如果一个程序再
完这个文件的时候，不需要将它从RAM中移除。如果还有可用的
闲的信息误导。一旦Linux将一个文件载人到RAM中，当程序用
不少故障排除人员都会被输出中与Linux文件缓存相关的已用和空
为系统内存快要耗尽了，因为系统仅显示有26768KB空闲内存。
交换存储以及Linux文件缓存使用了多少RAM。一眼看上去会以
RAM。top默认按照CPU的使用率排序，所以你需要将其改为按照
进程转为空闲状态，Linux 通常会将它占用的 RAM 释放，供其他进
的RAM中，有286040KB的RAM被文件缓存占用，所以这就是
的文件缓存。
示仅有少量RAM空闲，而其余的都被缓存占用。
文件缓存的存在，通常在服务器运行相当长的一段时间后，都会显
多少内存以及缓存了多少内存。第2行为我们提供了相似的信息，
会让所有进程按照RAM的使用率排序。
RAM使用率来排序。保持top 的打开状态，然后按下M键。这就
果实际用的内存减去文件缓存的值很大，同时交换存储的值也很
程使用。辨别是否耗尽了RAM的一个好方法是查看文件缓存。如
高，很可能的确有内存问题。
想要找出进程到底真正使用了多少RAM，你必须刨除RAM中
如果真的发现了内存问题，下一步就是确定哪些进程消耗了
第1行告诉我们有多少物理内存可用、占用了多少内存、空闲
18749 nagios
PID USER
。正如你所看到的示例代码一样，在已用的997408KB
PRNIVIRT.RESSHR S%CPU %MEM
0140m134m1868S126.6
2.2使用top命令解决负载问题23
1345:01 nagios2db_status
TIME+
COMMAND
---
## Page 31
24
速度远远低于RAM，所以当系统内存耗尽，开始使用交换空间的
需要检查的就是机器是否正在大量使用交换空间。因为硬盘操作的
2.2.4
常运行。如果 OOM终结者介人了，在/var/log/syslog 中你会看到如
得不大稳定，所以你不得不重启机器以确保所有的系统进程都在正
的罪魁祸首。很多时候，OOM终止了一些进程之后，系统就会变
有的时候它也会终止像sshd这样的程序或者其他进程，
RAM的进程，但它并不能保证不会终止未占用大量RAM的进程。
终结者就会开始终止进程。有些情况下，终止的可能是占用大量
的按键之后（比如，K对应CPU列），再按Enter 键就能回到top的
注意
致系统运行危险，它就会介人。当系统内存快要耗尽的时候，OOM
量RAM。
通过专门的故障排除方法来寻找是什么原因导致这些进程占用了大
下行：
输出界面。
果你找到了大量使用RAM的进程，可以终止它们，或者根据程序，
出的排序方式，按F键进入选择排序列的界面。在按下对应特定列
第2章服务器为什么这么慢？耗尽了CPU、RAM和磁盘I/O资源
Linux内核也有一个内存耗尽（OOM）终结者，如果低内存导
当你看到I/O等待时间所占CPU时间的比重很高的时候，首先
实际上top命令的输出可以根据任何列排序。想要更改top 输
注意%MEM这一列，会看到前几个进程占用了大量RAM。如
1228419127.32453_1704.hostname:2,S:0ut of Memory: Killed process
22442 nagios
1228419127.32453_1710.hostname:2,S:0ut of Memory:Killed process
24636 nagios
9463 mysql
解决高I/O等待时间问题
240 6048 2024 1452 S8 0.1 0:00.04 check_time.pl
03466010m712S
0686m111m3328S535.5
80.5
1195:15nagios
569:17mysqld
21389 (java).
21389 （java)
，而不是真正
---
## Page 32
所有硬盘设备及其分区的I/O 状态信息。下面是各列代表的意义：
后，就可以不带任何参数运行iostat，观察系统的整体情况。
执行大量I/O 操作。想要做到这一点，需要使用iostat 程序，基于
要明确哪个进程占用了大部分I/O操作。
时候，系统的性能会受到严重影响。任何想要访问硬盘的操作都要
发送I/O请求的另一种表达方式。
果你的机器没有安装，
Red Hat 和基于 Debian 的系统的 sysstat 包中都提供了这个程序。如
是如果系统中存在多个分区，你可以缩小范围，找到哪个分区正在
尽，如果是，先解决这个问题。如果还有大量可用的RAM，你需
完成与硬盘的I/O交换。所以，故障排除的第一步是看内存是否耗
有的时候很难弄明白到底是哪个进程占用了大量I/O 资源，但
在解决问题之前，你最好先安装好这个程序。安装了这个程序
Blk_read/s
这个值列出了设备每秒的传输量。“传输”（Transfer）是向设备
首先看到的是与 top 命令相似的 CPU 信息，下面紧跟着系统上
Blk_read
Blk_wrtn/s
tps
表示每秒向设备写人的数据量。
表示每秒从设备读取的数据量。
sda2
Device:
Linux 2.6.24-19-server (hostname)
$sudo iostat
avg-cpu;
%user
5.73
%nice %system %iowait %steal
3.24
0.04
6.55
9.82
tps
，可以通过包管理工具来安装。
B1k_read/sB1k_wrtn/s
2.030.530.00
198.12
219.10
417.96
0.74
01/31/2009
17.09
27.53
3.31
7.12
2.2使用top命令解决负载问题·25
%idle
14328323
15845129
30227262
B1k_read
91.64
53506
B1k_wrtn
1236081
515216
1990625
239328
---
## Page 33
含在基于 Debian的版本中，但是对于基于Red Hat 的版本来说，你
核的一些新特性，所以需要2.6.20或者更新的内核。如果默认情况
行进程并将进程根据I/O统计信息排序。这个软件使用了Linux内
实际上，它是top 和iostat程序的混合体，能够显示系统中所有运
给出所有NFS共享的I/O统计信息。
iostat另一个非常有用的参数是-n，当你指定了-n参数，iostat就会
iostat 的输出，就可以输入 sudo iostat 2。如果你有任何NFS共享，
了这个包后，就可以用root权限运行iotop，并看到如下输出：
就需要在网上或者从第三方仓库中寻找并安装第三方的RPM。安装
下没有安装这个程序，那么可以在iotop 包中找到它。这个工具包
据指定的秒数刷新输出信息。比如说，如果你想要每2秒看到一次
状况。如果在命令行指定一个数字参数，iostat就会持续运行并根
注意
那么大概就可以排除这个问题。
到备用服务器，如果大量的I/O操作都来自于写人而不是读取操作，
工作的操作主要集中于从文件系统中读取文件，然后通过网络传输
还是写入。假设你怀疑备份工作导致了I/O操作的增长。因为备份
这里，这就是一个很好的线索：数据库很可能占用了大量I/O资源。
数据库本身存储在/dev/sda3分区。你如果看到大量的 I/O 操作来自
看看哪个分区的I/O负载最高。比如说，你有一台数据库服务器，
第2章服务器为什么这么慢？耗尽了CPU、RAM和磁盘I/O资源
弄明白了这一点后，下一步就是确定I/O操作大部分来自读取
除了iostat，在最新的发布版中，我们还有一个很简单的工具。
你可能需要运行iostat命令多次，
Blk_wrtn
这一列表示从设备读取的数据总量。
当系统处于高I/O负载状态的时候，
这一列表示写人设备的数据总量。
，以此得到系统当前的精确I/O
首先就是观察每个分区
---
## Page 34
的问题，不过 sysstat 中也包含一些能报告CPU和RAM使用情况
统发生问题的时候，我们不是总能足够幸运地找到解决办法。我记
2.3
2.3.1
的这个问题。
昨天中午系统很慢时，你就可以查看日志，看看是什么原因引起
CPU负载、
的工具。虽然的确可以使用top命令达到这个目的，但是sysstat
全天的性能数据。
只需要稍微多做一点工作，就能在服务器上安装相应的工具，记录
不清我遇到过多少次机器运行缓慢，
高负载的原因。尽管top 和iostat 都是非常优秀的工具，但是当系
更加强大，
我们已经讨论了如何使用 sysstat 包中的 iostat工具来解决高 I/O
截止到这里，本章都在讨论当系统负载过高的时候，
第一步是使用包管理工具安装 sysstat 包。在基于Debian 的
在这个例子中，你会看到 rsync 进程执行了大量 I/O读取操作。
Total DISK READ: 189.52 K/s1 Total DISK WRITE: 0.00 B/s
sudo iotop