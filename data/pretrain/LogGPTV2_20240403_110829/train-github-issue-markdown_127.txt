 **Apache Airflow version** : 2.0.0a2
**Kubernetes version (if you are using kubernetes)** (use `kubectl version`):
    Client Version: version.Info{Major:"1", Minor:"17", GitVersion:"v1.17.2", GitCommit:"59603c6e503c87169aea6106f57b9f242f64df89", GitTreeState:"clean", BuildDate:"2020-01-18T23:30:10Z", GoVersion:"go1.13.5", Compiler:"gc", Platform:"linux/amd64"}
    Server Version: version.Info{Major:"1", Minor:"18", GitVersion:"v1.18.8", GitCommit:"9f2892aab98fe339f3bd70e3c470144299398ace", GitTreeState:"clean", BuildDate:"2020-08-14T00:06:38Z", GoVersion:"go1.13.15", Compiler:"gc", Platform:"linux/amd64"}
**Environment** :
  * **Cloud provider or hardware configuration** : Azure
  * **OS** (e.g. from /etc/os-release): Official airflow docker image
  * **Kernel** (e.g. `uname -a`):
  * **Install tools** :
  * **Others** :
**What happened** :  
When running the airflow webserver, it will fall into a crashloop because it
never becomes ready (readiness probes fail.)
    Traceback (most recent call last):
      File "/home/airflow/.local/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
        response = self.full_dispatch_request()
      File "/home/airflow/.local/lib/python3.8/site-packages/flask/app.py", line 1953, in full_dispatch_request
        return self.finalize_request(rv)
      File "/home/airflow/.local/lib/python3.8/site-packages/flask/app.py", line 1970, in finalize_request
        response = self.process_response(response)
      File "/home/airflow/.local/lib/python3.8/site-packages/flask/app.py", line 2269, in process_response
        self.session_interface.save_session(self, ctx.session, response)
      File "/home/airflow/.local/lib/python3.8/site-packages/flask/sessions.py", line 379, in save_session
        response.set_cookie(
      File "/home/airflow/.local/lib/python3.8/site-packages/werkzeug/wrappers/base_response.py", line 468, in set_cookie
        dump_cookie(
      File "/home/airflow/.local/lib/python3.8/site-packages/werkzeug/http.py", line 1217, in dump_cookie
        raise ValueError("SameSite must be 'Strict', 'Lax', or 'None'.")
    ValueError: SameSite must be 'Strict', 'Lax', or 'None'.
This error is reported several times before it crashes and tries again. I
commented out the probes to see what was happening and it gave me the above
error as well.
**What you expected to happen** : I'd expect a fresh copy of the helm chart
would be able to run smoothly.
**How to reproduce it** :  
With a fresh copy of the helm chart, change the `defaultAirflowTag` to
`2.0.0a2-python3.8`.  
Then run `helm install airflow .`  
I also added an ingress and a TLS Cert.
**Anything else we need to know** :
    $ helm version
    version.BuildInfo{Version:"v3.1.2", GitCommit:"d878d4d45863e42fd5cff6743294a11d28a9abce", GitTreeState:"clean", GoVersion:"go1.13.8"}