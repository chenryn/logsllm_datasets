systems on the other host if given the network IP address, port number, user name, and
password with which the publication server and subscription server were installed with
on the remote host.
See Chapter 4 for information on the user interface of the xDB Replication Console.
2.3.1.6 xDB Replication Server Command Line Interface
xDB Replication Server Command Line Interface (CLI) is a command line driven
alternative to the xDB Replication Console graphical user interface, providing equivalent
functionality for creating and controlling all aspects of a replication system.
Automation of replication system operations can be done by embedding xDB Replication
Server CLI commands in scripts such as Bash for Linux.
xDB Replication Server CLI is installed whenever you choose to install the xDB
Replication Console.
Chapter 8 provides directions for using xDB Replication Server CLI.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 51
EDB Postgres Replication Server User’s Guide
2.3.1.7 Publication Database
The publication database contains the tables and views used in a publication. The
publication database may be running on the same host or on a different host than where
the publication server is running as long as the hosts are accessible to each other by a
network.
Each publication database also contains a control schema, which is a collection of
database objects containing metadata on all replication systems, both single-master and
multi-master, controlled by the publication server connected to this publication database.
See Section 2.3.1.11 for information on the control schema.
In a multi-master replication system, all master nodes are considered publication
databases.
A database plays the roles of both a publication database and a subscription database if it
contains publications and subscriptions.
2.3.1.8 Subscription Database
Note: The subscription database applies only to single-master replication systems.
The subscription database contains the tables created from a subscription. The
subscription database may be running on the same host or on a different host than where
the subscription server is running as long as the hosts are accessible to each other by a
network.
A subscription database can also serve as a publication source for replicating to a third
server if desired. This configuration is referred to as cascading replication.
A database plays the roles of both a publication database and a subscription database if it
contains publications and subscriptions such as in the cascaded replication scenario.
2.3.1.9 Master Node
In a multi-master replication system, the databases containing the set of tables (the
publication) for which row changes are to be replicated are called master nodes. The
master nodes may be running on the same host or on different hosts than where the
publication server is running as long as the hosts are accessible to each other by a
network.
Each master node also contains a control schema, which is a collection of database
objects containing metadata on all replication systems, both single-master and multi-
master, controlled by the publication server connected to this master node. See Section
2.3.1.11 for information on the control schema.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 52
EDB Postgres Replication Server User’s Guide
The master nodes may be running under the same, or under multiple database server
instances (Postgres database clusters).
2.3.1.10 Master Definition Node
The first node added to create a multi-master replication system is initially designated the
master definition node. This node must contain the table definitions (and optionally, the
initial set of rows) that are to be included in the publication.
As subsequent databases are added as master nodes to the replication system, the table
definitions and initial row sets can optionally be propagated from the master definition
node to the newly added master nodes.
After the multi-master replication system is defined, it is possible to reassign the role of
the master definition node to another master node in the multi-master replication system.
The significance of this reassignment is that snapshots can be taken from the newly
appointed master definition node to other master nodes. This could be beneficial if the
data in the old master definition node becomes corrupt or out-of-sync with the other
master nodes and needs to be completely refreshed by a snapshot from another master
node.
As with all master nodes, the master definition node contains a control schema, which is
a collection of database objects containing metadata on all replication systems, both
single-master and multi-master, controlled by the publication server connected to this
master node. See Section 2.3.1.11 for information on the control schema.
2.3.1.11 Control Schema and Control Schema Objects
The control schema is a conceptual term referring to the collection of metadata database
objects that define the logical and physical structure of, and enable the operation and
maintenance of xDB Replication Server single-master and multi-master replication
systems.
These metadata database objects, referred to as control schema objects consist of tables,
sequences, functions, procedures, triggers, packages, etc.
The control schema objects store metadata such as type of replication system (single-
master or multi-master), network location, database type, connection and authentication
information for publication databases, subscription databases, and master nodes, names
of publications and the tables and views they contain, names of subscriptions and the
publications to which they are subscribed, replication transaction status, replication
scheduling, replication history cleanup scheduling, replication history, etc.
Each publication database in a trigger-based, single-master replication system also
contains control schema objects with the changes that have been made to rows in the
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 53
EDB Postgres Replication Server User’s Guide
publication and the status of whether or not those changes have been applied to the
subscription tables.
Similarly, for a multi-master replication system, each trigger-based master node contains
control schema objects with the changes that have been made to rows in the publication
residing on that master node, and the statuses of whether or not those changes have been
applied to the other master nodes in the multi-master replication system.
Note: For log-based single-master and multi-master replication systems, changes are
extracted from the database server WAL files instead of being stored in control schema
objects. See Section 2.2.10 for information on the log-based method.
The actual, physical database schemas implementing the control schema to which the
control schema objects belong varies depending upon the database type (Oracle, SQL
Server, or Postgres) and how the database was initially configured for use by xDB
Replication Server.
The following points should be noted about the control schema:
 The control schema and its control schema objects are created in every
publication database of both single-master and multi-master replication systems.
That is, all master (publication) databases of single-master replication systems
and all master nodes of multi-master replication systems.
 When a new master database is added for a single-master replication system or a
new master node for a multi-master replication system, a snapshot operation is
used to replicate the control schema to the newly added publication database
assuming there is an existing controller database. See Section 2.3.1.12 for
information regarding the controller database.
 Updates to the configuration of a single-master replication system or a multi-
master replication system made by the xDB Replication Console or the xDB
Replication Server Command Line Interface are synchronized between the control
schemas on all publication databases to ensure that the metadata is consistent
across all publication databases.
 The slave (subscription) database of single-master replication systems contains
one, single table as its metadata database object. The term, subscription metadata
object, is specifically used to refer to this database object in the subscription
database. The general terms, control schema and control schema objects refer to
the database objects in the publication databases.
 The control schema objects in all databases controlled by the same given
publication server generally contain the same information. This allows any such
database to provide the information needed by xDB Replication Server to control
all single-master and multi-master replication systems running under that given
publication server.
 Should a certain publication database of a replication system go offline due to
database server problems, network connectivity issues, etc., the other replication
systems running under the same publication server are still functional since the
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 54
EDB Postgres Replication Server User’s Guide
other publication databases can provide the control schema information required
to run all replication systems.
2.3.1.12 Controller Database
In the xDB Replication Configuration file, the connection and authentication information
for one publication database is included and as such, designated as the controller
database.
As with all publication databases, the controller database contains the control schema
with the replication system information for all single-master and multi-master replication
systems run by the publication server that accesses that xDB Replication Configuration
file.
The controller database serves as the primary provider of the replication system
information to the publication server and the subscription server. Thus, upon initial
startup, the publication server and subscription server attempt to connect to the
designated controller database. This controller database then provides the metadata
information for all replication systems.
Should the initial connection to the controller database fail for some reason, you can
manually edit the xDB Replication Configuration file to provide the connection and
authentication information for another publication database. Then upon startup of the
publication server and subscription server, the control schema of this alternate publication
database is used to provide the replication system information.
The initial controller database is determined by the first publication database definition
created by the xDB Replication Console or the xDB Replication Server CLI either for a
single-master or multi-master replication system. The publication server records the
connection and authentication information in the xDB Replication Configuration file.
If you wish to delete the publication database definition of the current controller database,
you must first designate another publication database, defined under the same publication
server, as the controller using the xDB Replication Console. See Section 7.7 for
directions on switching the controller to another publication database.
The following are some points regarding the controller database:
 The database server running the controller database must be running and
accessible before starting the publication server and subscription server.
 For a single-master replication system, the publication server under which the
publication database and publication are defined and the subscription server under
which the subscription database and the subscription related to the publication are
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 55
EDB Postgres Replication Server User’s Guide
defined, must both connect to the same the controller database. This gives the
publication server and the subscription server access to the same control schema.
 When changes are made to the metadata maintained by the control schema in the
controller database, these changes are replicated by the publication server to the
control schemas of all other publication databases. This ensures that the metadata
of all single-master and multi-master systems are complete and consistent in the
control schemas of all publication databases. This allows you to switch the
controller database at some later point in time. See Section 7.7 for information on
switching the controller database.
Note: If the controller database is an Oracle or a SQL Server publication database, then a
second Oracle or SQL Server publication database cannot be added to create a second
single-master replication system. In order for xDB Replication Server to run more than
one single-master replication systems consisting of Oracle or SQL Server publication
databases, a Postgres publication database must be designated as the controller database.
Once you have multiple Oracle or SQL Server publication databases set up in single-
master replication systems with a Postgres controller database, do not switch the
controller database to an Oracle or SQL Server publication database.
2.3.2 Logical Components
This section discusses the logical components of a replication system, how they are
related to each other, and how they correspond to the programs and databases in a
replication system.
The logical components are created when you build a replication system using the xDB
Replication Console or the xDB Replication Server CLI. The logical components are
stored as part of the replication system metadata in the control schema of the publication
databases.
Creating a replication system requires the following steps:
 Register a publication server
 Create a publication database definition
 Create a publication
For a single-master replication system, you then perform the following:
 Register a subscription server
 Create a subscription database definition
 Create a subscription
For a multi-master replication system, you create additional master nodes by creating
additional publication database definitions.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 56
EDB Postgres Replication Server User’s Guide
Each of these steps creates a logical component that is represented by a node in the
replication tree of the xDB Replication Console. See Chapter 4 for a description of the
xDB Replication Console. A brief description of these components is given in the
following sections.
2.3.2.1 Publication Server
The first step in creating a publication is to identify the publication server that is to be
used to manage the publication. This process is called registering the publication server.
Using the xDB Replication Console or the xDB Replication Server CLI, a publication
server is registered by giving the IP address and port number of the host on which the
publication server is running, along with the admin user name and password stored in the
xDB Replication Configuration file located on the host running the publication server.
(This information is determined during the publication server installation process.)
When viewed in the xDB Replication Console, a registered publication server appears
under the top level Replication Servers node in the replication tree. All publication
related logical components are created subordinate to a registered publication server and
appear underneath it in the replication tree.
Section 5.2.1 gives directions for registering a publication server for a single-master
replication system. See Section 6.2.1 for a multi-master replication system.
2.3.2.2 Replication System Type (SMR/MMR)
Subordinate to a registered publication server, two nodes representing the replication
system type appear. One is identified by the label SMR for single-master replication and
the other has the label MMR for multi-master replication.
If you are creating a single-master replication system, you proceed to add logical
components under the SMR type node.
If you are creating a multi-master replication system, you proceed to add logical
components under the MMR type node.
2.3.2.3 Publication Database Definition
Subordinate to one of the Replication System Type nodes under a registered publication
server, one or more publication database definitions can be created.
A publication database definition identifies a database whose tables and views are to be
used in a publication. The identify information consists of the database server IP address,
port number, a database user name and password, and the database identifier.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 57
EDB Postgres Replication Server User’s Guide
The publication server uses this information to connect to the publication database in
order to create the replication system control schema in the publication database and
perform the replications.
Though the process of creating a publication database definition is similar for single-
master and multi-master replication systems, their usage within the replication system is
somewhat different.
In a single-master replication system, a publication database definition identifies the
storage area of one or more publications, each of which is eventually associated with its
own subscription in a master-to-slave relationship.
In a multi-master replication system, each publication database definition subordinate to
the MMR type node of a given publication server identifies a master node in a single,
multi-master replication system.
Note: Currently, there can only be one multi-master replication system per publication
server.
Section 5.2.2 discusses creating a publication database definition for a single-master
replication system. See sections 6.2.2 and 6.3 for a multi-master replication system.
2.3.2.4 Publication
Subordinate to a publication database definition in a single-master replication system, one
or more publications can be defined. A publication contains a list of tables and views that
are to be replicated to a subscription database.
In a single-master replication system, the database user name specified in the publication
database definition of the publication’s parent, as viewed in the replication tree, must
have the SELECT object privilege on any table or view that is to be included in the
publication.
Subordinate to a publication database definition in a multi-master replication system, one
and only one publication can be defined. The publication contains the list of tables that
are to be replicated and kept synchronized in the master nodes of the multi-master
replication system.
In a multi-master replication system, the database user name specified in the publication
database definition of the publication’s parent, as viewed in the replication tree, must
have superuser privileges and be the owner of all tables to be included in the publication.
Section 5.2.3 discusses creating a publication for a single-master replication system. See
Section 6.2.3 for a multi-master replication system.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 58
EDB Postgres Replication Server User’s Guide
2.3.2.5 Subscription Server
Note: The subscription server applies only to single-master replication systems. You do
not register a subscription server when creating a multi-master replication system.
The first step in creating a subscription is to identify the subscription server that is to be
used to manage the subscription. This process is called registering the subscription
server.
Using the xDB Replication Console or the xDB Replication Server CLI, a subscription
server is registered by giving the IP address and port number of the host on which the
subscription server is running, along with the admin user name and password stored in
the xDB Replication Configuration file located on the host running the subscription
server. (This information is determined during the subscription server installation
process.)
When viewed in the xDB Replication Console, a registered subscription server appears
under the top level Replication Servers node in the replication tree. All subscription
related logical components are created subordinate to a registered subscription server and
appear underneath it in the replication tree.
Section 5.3.1 gives directions for registering a subscription server.
2.3.2.6 Subscription Database Definition
Note: The subscription database definition applies only to single-master replication
systems. You do not create a subscription database definition when creating a multi-
master replication system.
Subordinate to a registered subscription server, one or more subscription database
definitions can be created.
A subscription database definition identifies a database to which a publication’s tables
and views are to be replicated. The identify information consists of the database server IP
address, port number, a database user name and password, and the database identifier.
The subscription server uses this information to connect to the subscription database to
create the table definitions.
The publication server also uses this information to connect to the subscription database
when it performs replications.
Section 5.3.2 discusses creating a subscription database definition.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 59
EDB Postgres Replication Server User’s Guide
2.3.2.7 Subscription
Note: The subscription applies only to single-master replication systems. You do not
create a subscription when creating a multi-master replication system.
Subordinate to a subscription database definition, one or more subscriptions can be
defined. A subscription associates a publication to a subscription database to which the
publication’s tables and views are to be replicated.
Each subscription can be associated with one and only one publication.
Section 5.3.3 discusses creating a subscription.
2.3.3 xDB Replication System Examples
This section contains examples of replication systems and how the logical components
are used to define them.
In the accompanying diagrams, the logical components, represented by nodes in the
replication tree of the xDB Replication Console, are superimposed on physical