---
tags: ['计算机系统']
level: 1
---
# 存储器层次结构
## 物理介质
- 高速缓冲存储器
- 主存储器
- 快闪存储器
- 磁盘存储器
- 光学存储器
- 磁带存储器
## 存储技术
### 随机访问存储器
- 静态RAM 其可以无限期保存两个电路稳态 主要用在高速缓存
- 动态RAM 其可以在一段时间内保存稳态 主要用在主存
- 非易失性存储器 
## 基本存储体系
1)输入设备将程序与数据写入主存； 2) CPU取指令； 3) CPU执行指令期间读数据； 4) CPU写回运算结果； 5) 输出设备输出结果；
### 主存速度慢的原因
- 主存增速与CPU增速不同步；
- 指令执行期间多次访问存储器；
### 主存容量不足的原因
- 存在制约主存容量的技术因素
  - CPU、主板等相关技术指标确定
- 应用对主存的需求不断扩大
- 价格原因
### 存储体系的层次结构
![2021927173034](/assets/2021927173034.png)
- L1 Cache集成在CPU中，分数据Cache(D-Cache)和指令Cache(I-Cache）
- 早期L2 Cache在主板上或与CPU集成在同一电路板上。随着工艺的提高，L2Cache被集成在CPU内核中，不分D-Cache和I-Cache
存储器      | 硬件介质      | 单位成本(美元/MB) | 随机访问延时 | 说明
-------- | --------- | ----------- | ------ | --------------------------
L1 Cache | SRAM      | 7           | 1ns    |
L2 Cache | SRAM      | 7           | 4ns    | 访问延时15x L1 Cache
Memory   | DRAM      | 0.015       | 100ns  | 访问延时15X SRAM,价格1/40 SRAM
Disk     | SSD(NAND) | 0.0004      | 150μs  | 访问延时1500X DRAM,价格1/40 DRAM
Disk     | HDD       | 0.00004     | 10ms   | 访问延时70X SSD,价格1/10 SSD
### 局部性
- [缓存](/软件工程/架构/系统设计/缓存.md)
#### 时间局部性
- 现在被访问的信息在不久的将来还将再次被访问
- 时间局部性的程序结构体现： 循环结构
#### 空间局部性
- 现在访问的信息，下一次访问的很有可能是附近的信息
- 空间局部性的程序结构体现：顺序结构
## 主存中的数据组织
- 主存的一个存储单元所包含的二进制位数
- 目前大多数计算机的主存按字节编址，存储字长也不断加大,如16位字长、32位字长和64位字长
**ISA设计时要考虑的两个问题**：
- 字的存放问题
- 字的边界对齐问题
### 数据存储与边界
按边界对齐的数据存储：浪费一些空间
![批注 2020-01-30 161009](/assets/批注%202020-01-30%20161009.png)
未按边界对齐存放：虽节省了空间，但增加了访存次数
![批注 2020-01-30 161136](/assets/批注%202020-01-30%20161136.png)
需要在性能与容量间权衡
- 双字长数据边界对齐的起始地址的最末三位为000(8字节整数倍；
- 单字长边界对齐的起始地址的末二位为00(4字节整数倍)；
- 半字长边界对齐的起始地址的最末一位为0(２字节整数倍)。
#### 大端与小端存储
- 小端存储
  - 就是低位字节排放在内存的低地址端，高位字节排放在内存的高地址端
- 大端存储
  - 就是高位字节排放在内存的低地址端，低位字节排放在内存的高地址端
无论是大端还是小端，每个系统内部是一致的，但在系统间通信时可能会发生问题！因为顺序不同，需要进行顺序转换
## 存储技术
## 随机访问存储器
### 静态RAM(SRAM)
![批注 2020-01-30 162459](/assets/批注%202020-01-30%20162459.png)
**工作原理**
- 读
- 写
- 保持
#### 结构
![批注 2020-01-15 092634](/assets/批注%202020-01-15%20092634.png)
#### 静态存储器的不足
- 晶体管过多
- 存储密度低
- 功耗大
### 动态RAM(DRAM)
![202274213610](/assets/202274213610.jpg)
![批注 2020-01-30 164801](/assets/批注%202020-01-30%20164801.png)
DRAM与SRAM不同的是，需要靠不断地“刷新”，才能保持数据被存储起来
- 读写
- 保持
#### 刷新
![集中刷新](/assets/批注%202020-01-30%20165930.png)
![分散刷新](/assets/批注%202020-01-30%20170041.png)
![异步刷新](/assets/批注%202020-01-30%20190013.png)
#### 其它结构的DRAM存储单元
- 单管
![批注 2020-01-30 190355](/assets/批注%202020-01-30%20190355.png)
### 传统DRAM
- 内存模块
- 增强DRAM
- 非易失性存储器
- 访问主存
## 存储扩展
- 位扩展
用16K X 8 的存储芯片构建16K X 32的存储器
- 字扩展
用16K X 8 的存储芯片构建128k X 8的存储器
- 字位扩展
用16K X 8 的存储芯片构建128K X 32的存储器
![批注 2020-01-30 190639](/assets/批注%202020-01-30%20190639.png)
无论哪种类型的存储扩展都要完成CPU与主存间地址线、数据线、控制线的连接
## 磁盘存储
![磁盘构造](/assets/202192717310.jpg)
### 构造
- 磁道：盘片上划分出来的一个区域，读写过程中，磁头会沿着磁道移动，以读取或写入磁道上的数据
- 扇区：磁道被划分为若干个扇区，每个扇区包含一个固定大小的数据块
- 读写头：读取或写入磁盘数据的设备
- 磁盘臂：负责控制读写头在磁盘表面上的位置
- 柱面：是一组同心圆上对应的扇区的集合，它们处于磁盘的相同半径位置
- 磁盘控制器：控制磁盘的运行和数据传输的主控，通常包括一个处理器和一些固件
### 性能度量
- 访问时间：发出一个读/写请求到收到响应数据的时间
- 平均寻道时间：读写头移动到磁盘上任意一个磁道的平均时间
- 旋转等待时间：读写头等待目标扇区旋转到磁头下方的时间
- 平均旋转等待时间
- 数据传输率：指从磁盘读取或写入数据的速率。它与磁盘的接口类型、磁盘旋转速度和数据密度有关
- 平均故障时间：给定时间段内，磁盘发生故障的平均时间
### 访问优化
物理结构决定了磁盘更擅长顺序访问，为了优化随机读写的低效率，有一些手段：
- 缓冲：读取的块香时存储在内存级冲区中，以满足梅来的要求
- 预读：利用空间局部性原理，预先读取周围的块数据
- 调度：使用电梯算法
- 文件组织：将会一起访问的文件组织到相邻的柱面上，现代的操作系统都已经对应用隐藏了低层的存放方式了，都由操作系统统一管理了，这意味着文件碎片会越来越多
- 非易失性写缓冲区：在磁盘前再加一块不会断电丢失的快速缓存，先写到缓存，后续再慢慢刷到磁盘里
- 日志磁盘：由于日志都是顺序写，所以速度可以比较快，但是读需要做特殊处理
### 磁盘容量度量
- 记录密度：磁盘表面上每英寸线性长度上存储的磁性转换数目
- 磁道密度：磁盘表面上每英寸线性长度上的磁道数目
- 面密度：每个磁头（读写头）上可用的记录密度
### 连接到磁盘
- 通用串行总线（USB）
- 图形卡
- 主机总线适配器：包括IDE、SATA、SCSI等
### 访问磁盘
**内存映射**：将磁盘文件映射到进程的虚拟地址空间中的技术，这样就可以像访问内存一样访问磁盘文件，从而方便了文件的读写操作
## 固态硬盘
## raid
- 将数据条带化后的存放在不同磁盘上，通过多磁盘的并行操作提高磁盘系统的读写速率
- 使用基于异或运算为基础的校验技术恢复损坏的数据，提升可靠性
- 通过组合多个硬盘来提高存储容量
raid的数据拆分有两种：
- 比特级拆分
- 块级拆分
比特级的粒度较细，所以读写效率相对较低能
![批注 2020-02-08 204640](/assets/批注%202020-02-08%20204640.png)
RAID级别说明 | 可靠性 | 读性能 | 写性能 | 最少硬盘数量 | 硬盘利用率
-------- | --- | --- | --- | ------ | -------------
RAID0    | 低   | 高   | 高   | 1      | 100%
RAID1    | 高   | 低   | 低   | 2      | 1/N
RAID5    | 较高  | 高   | 中   | 3      | (N-1)/N
RAID6    | 较高  | 高   | 中   | 3      | (N-2)/N
RAID1E   | 高   | 中   | 中   | 3      | M/N
RAID10   | 高   | 中   | 中   | 4      | M/N
RAID50   | 高   | 高   | 较高  | 6      | (N-M)/N
RAID60   | 高   | 高   | 较高  | 6      | (N - M * 2)/N
N为RAID组成员盘的个数，M为RAID组的子组数。
### RAID0
- 块级拆分但没有任何冗余
![批注 2020-02-08 204953](/assets/批注%202020-02-08%20204953.png)
### RAID1
- 数据采用镜像的冗余方式，同一数据有多份拷贝
![批注 2020-02-08 205138](/assets/批注%202020-02-08%20205138.png)
### RAID2
在数据盘的基础上，增加了一个磁盘来存放ECC
### RAID 3/4