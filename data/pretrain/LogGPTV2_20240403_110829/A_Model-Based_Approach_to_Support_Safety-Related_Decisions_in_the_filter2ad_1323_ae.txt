0.01 
0.99 
8000 h 
0.4 
0.6 
3600 h 
0.6 
0.4 
6000 h 
0.0 
0.3 
0.7 
12 h 
4 h 
6 h 
Datasheets / Database / Experts 
Datasheets / Database / Experts 
Database 
Datasheets / Database / Experts 
Datasheets / Database / Experts 
Database 
Datasheets / Database / Experts 
Datasheets / Database / Experts 
Database 
Database / Experts 
Database / Experts 
Database / Experts 
WP1 
WP1 & WP2 
WP1 & WP2 
Template 
EventOccurrence 
EventOccurrence 
BasicComponent 
BasicComponent 
BasicComponent 
Timeline 
BasicComponent 
BasicComponent 
BasicComponent 
Timeline 
BasicComponent 
BasicComponent 
BasicComponent 
Timeline 
Detector 
Detector 
Detector 
Timeline 
Timeline 
Timeline 
ing WP1 in isolation. However, with an even lower ȜC, WP1 
could still be accepted even in parallel to WP2. 
Besides helping decision makers to accept or reject a work 
permit, this information can also be used to improve the barri-
ers system. If work that needs to disconnect sensor B needs to 
be  executed  frequently,  one  of  the  countermeasures  could  be 
the  replacement  of  sensor  C  with  one  of  greater  quality  (i.e., 
lower fault occurrence rate). 
Fig. 15. Probability of not detecting gas leakage at varying 
the fault occurrence rate of Sensor C, considering both WPs, 
with WP2 disabling Sensor B. 
VII. AUTOMATION AND INTEGRATION 
The analysis that we presented in this paper has been exe-
cuted manually, i.e., model templates for the gas leakage sce-
nario have been instantiated and connected manually, and then 
analyzed using the Möbius [17] tool. Automation can be per-
formed  with  current  technology,  and  is  being  undertaken  as 
part of a research project. Our plans for the implementation are 
discussed in the following. 
One of the aspects that we left as an implementation detail 
in this paper is how barriers models are actually designed by 
the domain experts, both because it can depend on the prefer-
ences of the individual company, and because there are no es-
tablished languages yet. For our realization, we will use a cus-
tom UML profile, with specific extensions to model the infor-
mation described in Section IV.B. This resulted to be the most 
convenient solution for a prototype, since in this way we can 
reuse a lot of concepts and tools that are popular in the UML 
domain.  For  example,  we  can  use  the  popular  Papyrus  [20] 
diagram editor, without the need to create a specific editor or 
file format. At the same time, the domain-expert modeler will 
not  need  to  learn  a  completely  new  language.  The  library  of 
barriers architectural models is thus a collection of UML files. 
It should be noted however that UML is not a prerequisite of 
our approach: any custom DSL could be used instead.  
Concerning  analysis  models  we  chose,  for  practical  rea-
sons, to store the library of SAN template models as a collec-
tion of XML files, since it is the format in which the Möbius 
tool  stores  the  definition  of  SAN  models.  The  selection  of 
needed templates, generation of instances, and their composi-
Fig. 13. Probability of not detecting gas leakage in the four 
cases – nominal parameters. 
In the following figures we evaluate the impact of varying the 
fault occurrence rate of one of the sensors, in particular Sensor 
C,  on  the  metrics  of  interest  for  the  GasDetectionX  barrier. 
Results for the case in which only WP1 is considered are re-
ported in Fig. 14. In general, a higher fault occurrence rate for 
C increases the probability that one of the two events of interest 
is not detected or it is detected late. The effect is much more 
evident on the metrics for X2, since sensor C is the only one 
that is installed in area X2. However, almost for all the consid-
ered  range  all  the  constraints  are  fulfilled;  only  for  ȜC  = 
2.85E-4 or higher, the probability of detecting X2 late is slight-
ly above the threshold. 
Fig. 14. Probability of not detecting gas leakage at varying 
the fault occurrence rate of Sensor C, considering WP1 only. 
The case in which WP2 is executed in parallel, leading to 
the disconnection of sensor B is shown in Fig. 15. In this case, 
the  impact  of  varying  ȜC  is  much  greater,  and  it  impacts  not 
only the capability of detecting a leakage in X2, but also the 
capability of detecting a leakage in X1. This is exactly due to 
the fact that B, which is one of the two sensors located in area 
X1 is going to be disabled by the parallel execution of WP2. If 
taking into account the effect of WP2, any value for ȜC that is 
equal  or  higher  than  2.85E-5  violates  the  constraints,  i.e.,  an 
order of magnitude lower is required with respect to consider-
285
tion is a model-transformation step; as such, it is performed by 
a  combination  of  the  ATL  [18]  and  XSLT  [19]  languages, 
which  are  transformation  languages  operating  at  model-to-
model and text-to-text levels, respectively. The final analysis of 
the composed barrier models is performed by solvers included 
in the Möbius framework. 
VIII. CONCLUSION 
In this paper we have proposed an approach to support de-
cision  makers  in  accepting  (releasing)  or  rejecting  work  per-
mits in the petroleum domain. The support is provided by using 
state-based stochastic methods. The model of the scenario to be 
analyzed is automatically created combining together multiple 
instances of a basic template models library, based on the safe-
ty barriers of interest, the WP to be analyzed, and possible con-
current WPs that have already been released. The analysis of 
the model provides the decision makers with metrics that can 
guide them in processing the WP application objectively. We 
applied the approach to a simple but representative example of 
a gas leakage scenario, focusing on the impact of two concur-
rent WP applications.  
The work in this paper represents a first step in addressing 
the WP release problem using stochastic evaluation. To com-
pletely address this problem, several challenges still need to be 
undertaken, and they are part of our next planned steps. Evalu-
ating  the  models  by  simulation  may  require  significant  time, 
especially because the focus is on events that are supposed to 
be rare. We plan to investigate this aspect more in depth, and 
possibly resort to advanced analytical solution methods when 
possible.  A  longer-term  activity  consists  in  understanding  if 
further information can be exploited for building the analysis 
model, and possibly extend the SAN model templates library. 
Addressing this challenge is needed but difficult, as it requires 
us to develop a deep knowledge of the information stored by 
different companies, for different kinds of installations. 
ACKNOWLEDGMENT 
This work has been partially supported by the ARTEMIS-JU 
CONCERTO project (n.333053), and by CECRIS, “CErtifica-
tion  of  CRItical  Systems”,  FP7–Marie  Curie  (IAPP)  number 
324334. 
REFERENCES 
[1]  A.  Avizienis,  J.-C.  Laprie,  B.  Randell,  and  C.  Landwehr,  “Basic 
Concepts and Taxonomy of Dependable and Secure Computing”, IEEE 
Transactions on Dependable and Secure Computing, pp. 11-33, January-
March, 2004. 
[2]  G.  Ciardo,  R.  German,  C.  Lindemann,  “A  characterization  of  the 
stochastic  process  underlying  a  stochastic  Petri  net”  IEEE  Trans.  on 
Software Engineering, 7, 1994, 20, 506-515. 
[3]  Norwegian Oil and Gas, 088 – Recommended Guidelines for a Common 
Model for Work Permits (WP), rev. 5, 22/06/2015. 
[4]  T. Aven, S. Sklet and J.E. Vinnem, “Barrier and operational risk analysis 
of  hydrocarbon  releases  (BORA-Release)”.  Journal  of  Hazardous 
Materials, Vol. 137, Issue 2, pages 681-708, September 2006. 
[5]  W.  Røed,  A.  Mosleh,  J.E.  Vinnem  and  T.  Aven,  “On  the  use  of  the 
hybrid  causal  logic  method  in  offshore  risk  analysis.”  Reliability 
Engineering and System Safety, Vol. 94, Issue 2, pp. 445-455, February 
2009. 
286
[6] 
J.-E. Vinnem, “Offshore Risk Assessment vol 2.: Principles, Modelling 
and  Applications  of  QRA  Studies”,  Springer  Series  in  Reliability 
Engineering, 2014. 
[7]  D.M. Nicol, W.H. Sanders, K.S. Trivedi, “Model-based evaluation: from 
dependability  to  security”,  IEEE  Transactions  on  Dependable  and 
Secure Computing, 1, 2004, 1, 48-65. 
[8]  S.  Bernardi,  J.  Merseguer,  D.C.  Petriu.  “Dependability  modeling  and 
analysis of software systems specified with UML”. ACM Comput. Surv. 
45, 1, Article 2, December 2012. 
[9]  B. Gallina,  E. Sefer, A. Refsdal, “Towards Safety Risk Assessment of 
Socio-Technical  Systems  via  Failure  Logic  Analysis,”  in  Software 
Reliability Engineering Workshops (ISSREW), 2014 IEEE International 
Symposium on pp.287-292, 3-6 Nov. 2014. 
[10]  A. Refsdal, Ø. Rideng, B. Solhaug, and K. Stølen. Divide and Conquer-
Towards a Notion of Risk Model Encapsulation. In Engineering Secure 
Future Internet Services, Vol. 8431, London: Springer, 2014. 
[11]  W.  Sanders  and  J.  Meyer.  “Stochastic  activity  networks:  formal 
definitions  and  concepts”.  In:  Lectures  on  formal  methods  and 
performance analysis. Vol. 2090. LNCS. Springer, 2002, pp. 315–343. 
[12]  E. W. Dijkstra. “On the role of scientific thought”. In:Selected Writings 
on Computing: A Personal Perspective. Ed. by E. W. Dijkstra. Springer, 
1982, pp. 60–66. 
[13]  K. Kanoun and M. Ortalo-Borrel. “Fault-tolerant system dependability-
explicit modeling of hardware and software component-interactions”. In: 
IEEE Transactions on Reliability 49.4 (2000), pp. 363–376. 
[14]  M.  Rabah  and  K.  Kanoun.  “Performability  evaluation  of  multipurpose 
multiprocessor  systems:  the  ”separation  of  concerns”  approach”.  In: 
IEEE Transactions on Computers 52.2 (2003), pp. 223–236. 
[15]  N.  Veeraragavan,  L.  Montecchi,  N.  Nostro,  R.  Vitenberg,  H.  Meling, 
and  A.  Bondavalli.  “Modeling  QoE  in  Dependable  Tele-immersive 
Applications: A Case Study of World Opera”. In: IEEE Transactions on 
Parallel and Distributed Systems (2016). To appear. 
[16]  L.  Montecchi,  P.  Lollini,  and  A.  Bondavalli.  “A  DSL-Supported 
Workflow  for  the  Automated  Assembly  of  Large  Stochastic  Models”. 
In:  Proceedings  of 
the  10th  European  Dependable  Computing 
Conference (EDCC’14). Newcastle upon Tyne, UK, May 13-16, 2014. 
[17]  T. Courtney, S. Gaonkar, K. Keefe, E. Rozier, W. Sanders, “Möbius 2.3: 
An  extensible 
tool  for  dependability,  security,  and  performance 
evaluation  of  large  and  complex  system  models”,  39th  IEEE/IFIP 
International Conference on Dependable Systems Networks (DSN'09). , 
2009, 353-358 
[18]  Atlas  Transformation  Language  (ATL).  http://www.eclipse.org/atl/ 
(Accessed: 07/12/2015). 
January 2007. 
[19]  XSL  Transformations  (XSLT)  Version  2.0,  W3C  Recommendation  23 
[20]  S.  Gérard,  et  al.,  “Papyrus:  A  UML2  Tool  for  Domain-Specific 
Language Modeling Model-Based Engineering of Embedded Real-Time 
Systems”, Springer Berlin Heidelberg, 2011, 6100, 361-368. 
[21]  Object  Management  Group.  OMG  Unified  Modeling  Language  (OMG 
UML),  Superstructure,  Version  2.5.  OMG  Document  {formal/15-03-
01}. June 2015. 
[22]  L.  Montecchi,  N.  Nostro,  A.  Ceccarelli,  G.  Vella,  A.  Caruso, 
A. Bondavalli,  “Model-based  Evaluation  of  Scalability  and  Security 
Tradeoffs: a Case Study on a Multi-Service Platform,” Electronic Notes 
in Theoretical Computer Science, vol. 310, pp. 113-133, January 2015. 
[23]  A.  Bondavalli,  O.  Hamouda,  M.  Kaâniche,  P.  Lollini,  I.  Majzik,  and 
Hans-Peter  Schwefel.  “The  HIDENETS  Holistic  Approach  for  the 
Analysis  of  Large  Critical  Mobile  Systems.”  In  IEEE  Transactions  on 
Mobile Computing, vol. 10, Issue 6, pp. 783–796, June, 2011. 
[24]  The  Norwegian  Oil  Industry  Association,  “Application  of  IEC  61508 
and IEC 61511 in the Norwegian Petroleum Industry” No. 070, Revision 
no. 02, October 2004. 
[25]  M. Kaâniche, P. Lollini, A. Bondavalli, and L. Kanoun. “Modeling the 
Resilience of Large and Evolving Systems.” In International Journal of 
Performability Engineering, Volume 4, Number 2, pp. 153-168, 2008.