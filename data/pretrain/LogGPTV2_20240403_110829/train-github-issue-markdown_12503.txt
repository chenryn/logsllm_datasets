I've been using zeit's `ncc` to slim down and build our transpiled APIs into
tiny, minified, individual scripts that run without any node_modules present
on our servers/containers. It's **_absolutely_** fantastic.
I tried to us ncc w/ NextJS, but probably lack the requisite knowledge of
understanding how nextJS builds work, and what is built into the output.
My goal: A single, transpiled/built file (or set of files w/ an exposed
entrypoint script) that I can run without needing node_modules
installed/present on my application servers/containers, which I can simply
invoke with a command like:  
`"NODE_ENV=production node --require 'dotenv/config' ./dist/index.js"`
We use a custom server with our nextJS app, but it's written in vanilla JS,
and doesn't require transpilation, webpack, or babel.
It does, however, have a handful of dependencies including a redis client and
express.
I was thinking that maybe the correct thing to do is use ncc for the server,
and `next build` for the client, and then just runn the ncc'ed server file?
If someone could point me in the direction of the best resolution, that would
sincerely save me days of failed attempts and wasted hours.
Thank you!! :)