2020 IEEE/ACM 13th International Conference on Utility and Cloud Computing (UCC)
Self-Supervised Anomaly Detection from
Distributed Traces
∗‡ ∗‡ †§ ∗
Jasmin Bogatinovski , Sasho Nedelkoski , Jorge Cardoso , Odej Kao
∗
Complex and Distributed IT-Systems Group, TU Berlin, Berlin, Germany
{jasmin.bogatinovski, nedelkoski, odej.kao}@tu-berlin.de
†
Huawei Munich Research Center, Munich, Germany
§
CISUC, Dept. of Informatics Engineering, University of Coimbra, Portugal
PI:EMAIL
‡
Equal contribution
Abstract—Artificial Intelligence for IT Operations (AIOps) allows prevention and increasing the opportunity window for
combinesbigdataandmachinelearningtoreplaceabroadrange conducting a successful reaction from the operator. This is
of IT Operations tasks including reliability and performance
especially important if urgent expertise and/or administration
monitoring of services. By exploiting observability data, AIOps
activity is required. These anomalies often develop from
enable detection of faults and issues of services. The focus of
thisworkisondetectinganomaliesbasedondistributedtracing performance problems, component and system failures, or
records that contain detailed information of the services of the security indignant and leave some fingerprints within the
distributedsystem.Timelyandaccuratelydetectingtraceanoma- monitored data: logs, metrics or distributed traces.
lies is very challenging due to the large number of underlying
Depending on the origin of the data, the observable system
microservices and the complex call relationships between them.
data,describingthestateindistributedITsystem,aregrouped
We addresses the problem anomaly detection from distributed
traces with a novel self-supervised method and a new learning intothreecategories:metrics,applicationlogs,anddistributed
task formulation. The method is able to have high performance traces [1], [2]. The metrics are time-series data representing
eveninlargetracesandcapturecomplexinteractionsbetweenthe the utilization of the available resources and the status of
services. The evaluation shows that the approach achieves high
the infrastructure, typically regarding CPU, memory, disk,
accuracy and solid performance in the experimental testbed.
networkthroughput,andservicecalllatency.Applicationlogs
Index Terms—anomaly detection; distributed traces; dis-
recordwhichactionswereexecutedatruntimebythesoftware.
tributed systems; self-supervised learning.
The metrics and log data sources are limited on a service or
resourcelevel.Theycannotrelatetheinteractionsbetweenthe
I. INTRODUCTION
different components within a distributed system. Distributed
Billions of devices and users depend on the availability of traces are a graph-like abstraction built on top of logs that
largedistributedsystemssuchasthecloud.Manyapplications encode information for the multiple services serving a partic-
oftenhaveservice-levelagreement(SLA),whereuninterrupted ularuserrequest.Tracesarecomposedofeventsorspans.The
service with low response times guarantees are required. spans contain information about the execution workflow and
Therefore, loss of control is not allowed for any system or performance at a (micro)service level. As such, they preserve
infrastructure. the information for the interaction between the services and
Successful operation of large-scale systems requires de- are better suited for tasks such as anomaly detection.
ployment of numerous utilities. These utilities include intro- While the anomaly detection using system log and metric
ducing additional intelligence to the IT-ecosystem, such as data has been previously investigated [3]–[6], only a few
employingnetworkreliabilityengineers(NRE),sitereliability studies make use of tracing data [7], [8] as it is significantly
engineers(SRE),usingautomatedtoolsforinfrastructuremon- more complex to implement, collect, and handle.
itoring, and developing tools based on artificial intelligence There are three important requirements of anomaly detec-
for load balancing, capacity planning, resource utilization, tion from distributed traces; the methods should handle traces
storage management, and anomaly detection. The techniques under the assumption of existing of noise, traces can be of
andmethodsfromthefieldofArtificialIntelligenceforITOp- arbitrarylength,andthemethodsshouldbeunsupervised.Due
erations(AIOps)becomeanimmutablepartofthemonitoring to the complex nature of the operations within a distributed
andutilitytoolboxestoaddressthechallengesimposedbythe environment and large noise, it can happen that although
previous tools. AIOps uses machine learning, data analytics, the observed sequence of events is not present in the set of
andmonitoringdatatoimprovetheoperationandmaintenance observed traces, it still to be normal. Noise occurs because
(O&M) of distributed systems. complex systems rely on software patterns, such as caching
The first step towards available and reliable systems and and load balancing, to increase efficiency and reliability. The
services is that an anomaly must be detected and recognized, existence of noise has a strong implication for trace anomaly
beforeitleadstoaserviceorasystemfailure.Timelydetection detection since methods need to classify traces which were
978-0-7381-2394-3/20/$31.00 ©2020 IEEE 342
DOI 10.1109/UCC48980.2020.00054
Authorized licensed use limited to: Technische Universitaet Berlin. Downloaded on September 06,2021 at 12:04:10 UTC from IEEE Xplore. Restrictions apply.
never seen before as normal. The existing approaches, such proaches. They assume that the available data originate from
as [9], use finite state machines (FSM) to model the correct the normal operation of the observed system. Thus, the meth-
behaviour of systems. These approaches work well when odsaimtofitadecisionboundaryaroundthenormaldata.The
tracesdonotcontainnoise.However,theintroductionofnoise data points that lie outside of the learned decision boundary
scales the number of potential transitions exponentially. are classified as anomalies. Recently, the anomaly detection
The second challenge is related to the range of lengths in complex distributed systems (e.g., cloud platforms) using
of a trace for different operations. Approaches relying on various monitoring data is gaining a lot of popularity [7]–[9].
LSTMs [7], [8] can only process traces up to a certain length One approach to model the normal execution of the traces
of k. These approaches are termed autoregressive since they perworkloadistoconstructaFiniteDiscreteAutomata(FDA)
use previous spans of a trace to predict the following span. tocapturethecompletetraceexecutioncycle[9].Inthiswork,
If the prediction is correct, the trace is classified as normal. the FDA is built per workload from a specialized distributing
Otherwise, it is anomalous. The problem is that as traces tracing procedure. The generated FDA’s are often complex
become long, the first spans of traces in a behaviour model due to the large size of the traces. This makes the FDA
are forgotten. highly sensitive on the monitoring tracing procedure when
Lastly, we only consider the option for unsupervised transiting from one state to another. Since the transition from
method, as the labelling by experts or injection of anomalies a current state to the next one utilizes the information up to
directly into the cloud platforms to obtain labeled data do not the current span within the trace, the FDAs are not efficient
meet the requirements of real-word systems. in the utilization of the whole available information from
Contribution. We address these challenges by proposing a the trace. This method does not support publicly available
formulation of the problem of next span prediction [8] into implementation making it hard for comparison.
a masked event prediction task. Masked span prediction as The current systems for anomaly detection using tracing
a learning task is concerned with the correct prediction of data and deep learning techniques model the normal system
a masked event on a random position in the trace utilizing behaviour by utilizing history h of recent log/trace events as
the remaining, non-masked information from the trace. The input, and predict the next event key in the sequence [7], [8].
decision for the normality of a trace is done with a threshold We refer to this task as the next event/span prediction. They
procedureatthetopofthemaskedeventpredictionprocedure. utilize the execution path of the trace and LSTMs [13], [14]
This allows the following benefits. The method opens the toenablethelearningfromthesequentialnatureofthetraces.
ability to learn from the fully observed trace structure. It The anomaly detection is performed by predicting the next
exploits the information from the context spans in the trace span, if the prediction is successful then the span is normal,
in order to predict the masked span allowing for arbitrary otherwise is considered as anomaly.
dependency between the spans in the trace. The method In contrast to the above anomaly detection systems, we
does not use labels for learning, hence it is unsupervised. reformulate the problem of next event prediction into mask
It exploits the overall information of the trace, meaning it spanprediction.Themodelopenstheabilitytolearnfromthe
is not dependent on the length of the trace. The challenge fullyobservedtracestructure.Itexploitstheinformationfrom
of noise generated by the underlying distributed system is the context spans in the trace to predict the masked event.
addressedfirstwithsparseencodingandsecondwithallowing
III. ATTENTIONAPPROACHFORANOMALYDETECTIONIN
for an arbitrary number of span to be mistaken. This allows
DISTRIBUTEDTRACES
for greater flexibility of correctly modeling of unseen normal
traces, which results in improving the performance scores. In this section, first, we discuss the data preprocessing step
Withexhaustiveempiricalevaluationweshowthatthemethod fortheapproachesdescribedinthiswork.Webuiltanintuition
outperformsthepreviousstateoftheartonbothexperimental for the definition of the self-supervised task explaining the
testbed. strong aspects of such problem formulation. We describe the
architecture of the main model.
II. RELATEDWORK
A. Distributed Traces
Anomaly detection as a data mining task is important due
to its great practical relevance across many diverse areas. Distributedtracesrecordtheworkflowsofservicesexecuted
As a learning task is concerned with finding observations in response to user requests. These records inside a trace
in a corpus of data that differ from the expected behaviour are called spans or events and represent information (e.g.
[10]. Anomalies in large systems such as cloud and high- start time, end time, service name, HTTP path, function in
performance computing (HPC) platforms can impact critical RPCcallsetc.)abouttheoperationsperformedwhenhandling
applications and a large number of users [11]. Therefore, an external request. Formally, a trace can be written as
a timely and accurate detection is necessary for achieving T i = (S 1i,...,S mi ), where i ∈ {1,...,N} is a trace from
reliability, stable operation, and mitigation of losses in a the dataset, and m is the length of T i or the number of spans
complex computer system. in the trace.
A common approach for data-driven anomaly detection Dependingontheexecutedworkload,thetraceshavediffer-
from tracing data is with a one-class classification [12] ap- entlengthsanddifferenteventshavinguniquedescription.The
343
Authorized licensed use limited to: Technische Universitaet Berlin. Downloaded on September 06,2021 at 12:04:10 UTC from IEEE Xplore. Restrictions apply.
depthofthedescriptionofaspandependsonmultiplefactors.
GET / POST /v3/auth/tokens POST /v2.0/networks/ GET /auth/tokens/ DELETE /networks/
For example, a span referring to a RPC call is described with
a function call (with respective parameters) while, the span
GET / [MASK] POST /v2.0/networks/ GET /auth/tokens/ DELETE /networks/
referring to http call can be described with the http method
and the endpoint. So, the different nature of the event being
Fig. 1. (Up) An example of a trace as result from network create and
executed constraints the set of descriptive features.
delete trace user request. (Down) an example of the context of the POST
Due to the great variability of the endpoints within the /v3/auth/tokens/spanasgiventotheinputofself-attentionmechanism.
distributedsystem,takingjustarawspandescriptionandmap- POST/v3/auth/tokens/ iscalledamaskedspan.
pingitintoasymbolwillresultinaverylargevocabulary[7].
To mitigate this problem one needs to filter out the parts of
spans appearing afterwards. With other words, each span
thespansthatarenotrelevant.Tothisend,onecanutilizethe
within a trace appears within a context of its neighbours.
fact that the result of the filtering step allows for the traces
Thus, the representation of a span directly depends on its
to be treated similarly as the payload of log messages. This
locationinthetraceanditsrelationtotheneighbouringcontext
opens an opportunity to use a wide toolbox of log-processing
spans. This is a reasonable assumption, as the spans in a
methods. To that end, we utilize Drain [15], as being the
trace have causal relationships describing the inter- and intra-
best overall log-parser [16]. The Drain method constructs a