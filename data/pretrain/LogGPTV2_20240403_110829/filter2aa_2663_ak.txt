                tmp+='\n'
                o.write(tmp)
                pc+=1
                continue
            if opt==0x05:#RI
                pc+=1
                tmp+=regs[ord(a[pc])]
                tmp +=', '
                pc+=1
                tmp+=hex(u32(a[pc:pc+4]))
                tmp+='\n'
                o.write(tmp)
                pc+=4
                continue
        elif opl ==0x40:
            tmp+= 'qword '
            opt =ord(a[pc])&0xf
            if opt==0x00:#RR
                pc+=1
                tmp+=regs[ord(a[pc])]
                tmp +=', '
                pc+=1
                tmp+=regs[ord(a[pc])]
                tmp+='\n'
                o.write(tmp)
                pc+=1
                continue
            if opt==0x01:#RL
                pc+=1
                tmp+=regs[ord(a[pc])]
                tmp +=', '
                pc+=1
                tmp+="data["+hex(u64(a[pc:pc+8]))+"]"
                tmp+='\n'
                o.write(tmp)
                pc+=8
                continue
            if opt==0x02:#LR
                pc+=1
                tmp+="data["+hex(u64(a[pc:pc+8]))+"]"
                tmp +=', '
                pc+=8
                tmp+=regs[ord(a[pc])]
                tmp+='\n'
                o.write(tmp)
                pc+=1
                continue
            if opt==0x05:#RI
                pc+=1
                tmp+=regs[ord(a[pc])]
                tmp +=', '
                pc+=1
                tmp+=hex(u64(a[pc:pc+8]))
                tmp+='\n'
                o.write(tmp)
                pc+=8
                continue
    elif a[pc] == '\x0d':#pop
        tmp = 'pop '
        pc+=1
        opl = ord(a[pc])&0xf0
        if opl ==0x40:
            tmp+= 'qword '
            opt =ord(a[pc])&0xf
            if opt == 0x06:#R
                pc+=1
                tmp+=regs[ord(a[pc])]   
                tmp+='\n'
                o.write(tmp)
                pc+=1
                continue
    elif a[pc] == '\x0e':#push
        tmp = 'push '
        pc+=1
        opl = ord(a[pc])&0xf0
        if opl ==0x40:
            tmp+= 'qword '
            opt =ord(a[pc])&0xf
            if opt == 0x06:#R
                pc+=1
                tmp+=regs[ord(a[pc])]   
                tmp+='\n'
                o.write(tmp)
                pc+=1
                continue
    elif a[pc] == '\x10':#call
        pc+=2
        tmp ='call '
        tmp+=regs[ord(a[pc])]
        tmp+='\n'
        o.write(tmp)
        pc+=1
        continue
    elif a[pc] == '\x11':#ret
        tmp ='ret\n'
        o.write(tmp)
        pc+=2
        continue
    elif a[pc] == '\x20':#syscall
        o.write('syscall\n')
        pc+=2
        continue
    elif a[pc]== '\x12':#cmp
        tmp = 'cmp '
        pc+=1
        opl = ord(a[pc])&0xf0
        if opl == 0x10:
            tmp +='byte '
            opt =ord(a[pc])&0xf
            if opt == 0x05:#RI
                pc+=1
                tmp+=regs[ord(a[pc])]
                tmp +=', '
                pc+=1
                tmp+=hex(u8(a[pc:pc+1]))
                tmp+='\n'
                o.write(tmp)
                pc+=1
                continue
        if opl == 0x20:
            tmp +='word '
            opt =ord(a[pc])&0xf
            if opt == 0x05:#RI
                pc+=1
                tmp+=regs[ord(a[pc])]
                tmp +=', '
                pc+=1
                tmp+=hex(u16(a[pc:pc+2]))
                tmp+='\n'
                o.write(tmp)
                pc+=2
                continue        
        if opl == 0x30:
            tmp +='dword '
            opt =ord(a[pc])&0xf
            if opt == 0x05:#RI
                pc+=1
                tmp+=regs[ord(a[pc])]
                tmp +=', '
                pc+=1
                tmp+=hex(u32(a[pc:pc+4]))
                tmp+='\n'
                o.write(tmp)
                pc+=4
                continue
        if opl == 0x40:
            tmp +='qword '
            opt =ord(a[pc])&0xf
            if opt == 0x05:#RI
                pc+=1
                tmp+=regs[ord(a[pc])]
                tmp +=', '
                pc+=1
                tmp+=hex(u64(a[pc:pc+8]))
                tmp+='\n'
                o.write(tmp)
                pc+=8
                continue
    if a[pc] == '\x13':
        tmp = 'jmp '
        pc+=1
        opl = ord(a[pc])&0xf0
        if opl == 0x10:
            tmp +='byte '
            opt =ord(a[pc])&0xf
            if opt == 0x07:#I
                pc+=1
                tmp += '$+'
                tmp+=hex(u8(a[pc:pc+1]))
                tmp+='\n'
                o.write(tmp)
                pc+=1
                continue
    if a[pc] == '\x14':
        tmp = 'je '
        pc+=1
        opl = ord(a[pc])&0xf0
        if opl == 0x10:
            tmp +='byte '
            opt =ord(a[pc])&0xf
            if opt == 0x07:#I
                pc+=1
                tmp += '$+'
                tmp+=hex(u8(a[pc:pc+1]))
                tmp+='\n'
                o.write(tmp)
                pc+=1
                continue
    if a[pc] == '\x15':
        tmp = 'jne '
        pc+=1
        opl = ord(a[pc])&0xf0
        if opl == 0x10:
            tmp +='byte '
            opt =ord(a[pc])&0xf
            if opt == 0x07:#I
                pc+=1
结果：
                tmp += '$+'
                tmp+=hex(u8(a[pc:pc+1]))
                tmp+='\n'
                o.write(tmp)
                pc+=1
                continue
    if a[pc] == '\x18':
        tmp = 'jl '
        pc+=1
        opl = ord(a[pc])&0xf0
        if opl == 0x10:
            tmp +='byte '
            opt =ord(a[pc])&0xf
            if opt == 0x07:#I
                pc+=1
                tmp += '$+'
                tmp+=hex(u8(a[pc:pc+1]))
                tmp+='\n'
                o.write(tmp)
                pc+=1
                continue
    if a[pc] == '\x19':
        tmp = 'jnl '
        pc+=1
        opl = ord(a[pc])&0xf0
        if opl == 0x10:
            tmp +='byte '
            opt =ord(a[pc])&0xf
            if opt == 0x07:#I
                pc+=1
                tmp += '$+'
                tmp+=hex(u8(a[pc:pc+1]))
                tmp+='\n'
                o.write(tmp)
                pc+=1
                continue
    else:
        pc+=1
        continue
mov qword r0, 0x45
call r0
mov qword r1, 0xa756f5920656553
push qword r1
mov qword r0, 0x2
mov qword r1, 0x1
mov qword r2, sp
mov qword r3, 0x8
syscall
GG
##0x45::::
mov byte r0, 0x2
mov byte r1, 0x1
mov byte r2, 0x0
mov byte r3, 0x23
syscall
write(1,data[0],0x23)
mov byte r0, 0x2
mov byte r1, 0x1
mov byte r2, 0x28
mov byte r3, 0xb
syscall
write(1,data[0x28],0xb)
mov byte r0, 0x1
mov byte r1, 0x0
mov dword r2, 0x40
mov qword r3, 0x1
syscall
read(0,data[0x40],1)
mov byte r8, data[0x40]
cmp byte r8, 0x51#Q
je byte $+0x2
GG
mov byte r0, 0x1
mov byte r1, 0x0
mov byte r2, 0x40
mov byte r3, 0x1
syscall
mov byte r8, data[0x40]
cmp byte r8, 0x57#W
jne byte $+0x3
jmp byte $+0x2
GG
mov qword data[0x40], r9
mov byte r0, 0x1
mov word r1, 0x0
mov word r2, 0x40
mov byte r3, 0x1
syscall
read(0,data[0x40],1)
mov byte r8, data[0x40]
xor byte r8, 0x77
cmp byte r8, 0x26#Q
jne byte $+0xc9
mov qword data[0x40], r9
mov qword data[0x48], r9
mov qword data[0x50], r9
mov qword data[0x58], r9
mov qword data[0x60], r9
mov byte r0, 0x1