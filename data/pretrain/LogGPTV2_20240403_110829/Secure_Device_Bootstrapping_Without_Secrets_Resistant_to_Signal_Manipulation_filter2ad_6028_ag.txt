authenticated group difﬁe-hellman key exchange,” in Proceedings of the
832
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:34:15 UTC from IEEE Xplore.  Restrictions apply. 
$
$%
%
$&
%&
$&
$%
%&
&
Without attempting a formal proof, it is natural to conjecture
that the proof does extend to the case of ellipsoids. Ellipsoids
consist of an inﬁnite number of ellipses on different planes that
have common foci. If three of these ellipsoids share a single fo-
cal point, then we can treat their intersection as the intersection
of an inﬁnite number of combinations between three ellipses
sharing the focal point on different planes. Applying the proof
on those ellipses shows that three ellipsoids sharing one focal
point do not have a common intersection point.
APPENDIX B-PROOF OF PROPOSITION 2
Fig. 21: Three eclipses sharing one focus point. The lines join the intersection
points between pairs of ellipses are concurrent, with the common intersection
point inside all three ellipses.
8th ACM conference on Computer and Communications Security. ACM,
2001, pp. 255–264.
[42] V. Rabinovich and N. Alexandrov, “Typical array geometries and basic
beam steering methods,” in Antenna Arrays and Automotive Applications.
Springer, 2013, pp. 23–54.
[43] H. J. Visser, Array and phased array antenna basics.
John Wiley &
Sons, 2006.
[44] A. Dutta, D. Saha, D. Grunwald, and D. Sicker, “SMACK: a smart
acknowledgment scheme for broadcast messages in wireless networks,”
in ACM SIGCOMM Computer Communication Review, vol. 39, no. 4.
ACM, 2009, pp. 15–26.
[45] W.-F. Alliance, “Wi-ﬁ protected setup speciﬁcation,” WiFi Alliance Doc-
ument, vol. 23, 2007.
[46] I. I. BOGDANOV, “Two theorems on the focus-sharing ellipses: a three-
dimensional view,” Journal of Classical Geometry Volume 1 (2012),
vol. 1, p. 1, 2012.
APPENDIX
APPENDIX A-PROOF OF PROPOSITION 1
Proposition. Three distinct ellipses sharing one focal point
irrespective of the plane they lie in, do not have a common
point of intersection.
Proof. Let A, B, and C be three ellipses sharing a focal point,
with the three ellipses being distinct. Each pair of ellipses will
have a minimum of two intersection points. Let AB1, AB2,
BC1, BC2, AC1, and AC2 be the respective intersection points
between A, B, B, C, and A, C. These points are shown in
Fig. 21. According to Theorems 1 and 2 in [46], the lines
connecting the intersection points between each pair of ellipses
are concurrent at a common intersection that lies inside all three
ellipses, irrespective of the planes the ellipses lie in. Assume
now that there is a common intersection point between all three
ellipses. Without loss of generality, assume that AB1 is the
same as AC1. Then the lines AB1-AB2 and AC1-AC2 will
have a common origin point. The only way that the two lines
AB1-AB2 and AC1-AC2 are concurrent with the BC1-BC2
line is if also AB2 is the same point as AC2. In the latter case,
B and C become the same ellipse or A and B become the same
ellipse, and there are no longer three distinct ellipses. Hence,
A, B, and C sharing a focal point cannot have a common point
of intersection.
The proof states that three ellipses sharing a common focus
point cannot have a common intersection point, regardless of
the plane that the lie in. This is sufﬁcient for our purposes.
Proposition. When the group size is N, the VERSE is δ–secure
against active message modiﬁcations with
δ ≤ (pH + (1 − pH )pn)(cid:4)
,
(10)
(cid:2)
here, δ is the probability that M can replace any mi sent by
(cid:2)
Di with m
i at any subset of remaining devices without being
detected at every Di(cid:2) ∈ D (where D is the set of all legitimate
devices), pH is the probability for a bit of h(s) || h(s)r to
equal a bit of h(sM ) || h(sM )r, and pn is the probability of
a successfully ﬂipping one bit in [·] during transmissions from
n TXs to one RX or from one TX to n RXs where n = (cid:5)N/2(cid:6),
and (cid:8) is the length of the hash function h(·) || h(·)r. We show
that δ is a negligible function of (cid:8).
Proof. Let’s consider an adversary that targets to modify one
1. In the simplest case, the adversary
message mi sent by Di
i at all other legitimate devices D \ Di =
(cid:2)
replaces mi with m
(cid:3)= i}, where D denotes the set of all legitimate
D−i{Di(cid:2)|i
devices in the group. During the VERSE veriﬁcation phase,
all the Di(cid:2) compiles sM = m1|| . . .||m
i|| . . .||m n, whereas
(cid:2)
Di compiles s = m1|| . . .||m i|| . . .||m n. Then to pass the
transcript veriﬁcation M has to replace [h(s) || h(s)r] with
[h(sM ) || h(sm)r] at all the Di(cid:2) on transmission from Di, so
that none of the veriﬁers raise an alarm. If any one other veriﬁer
Di(cid:2) raises an alarm, then all the others will detect the MitM
attack and raise an alarm, since a single M can only be set
to cancel the transmissions from one TX (Di) to other RXs at
one time, but not from Di(cid:2) to those RXs. Hence, the adversary
has to perform signal cancellation on transmission of one TX
to multiple (all other) RXs in this case.
(cid:2)
i, at a sub-
In general, M might choose to replace mi with m
set of other legitimate devices, DM = {Di(cid:2)|, i
(cid:2) (cid:3)=
i} ⊂ D−i, such that during the VERSE veriﬁcation phase Di
and all the Di(cid:2)(cid:2) ∈ D−i \DM compile the same communication
transcript as s, whereas every Di(cid:2) ∈ DM compiles sM . Then to
pass the transcript veriﬁcation M has to replace (cancel and in-
ject) [h(s) || h(s)r] with [h(sM ) || h(sm)r] at all the Di(cid:2) ∈ DM
on transmissions from Di and every Di(cid:2)(cid:2) ∈ D−i\DM , and vice
versa, to replace the ON-OFF signals from Di(cid:2) ∈ DM to all
devices in Di(cid:2)(cid:2) ∈ D−i \ DM and Di, such that none of the
veriﬁers raise the alarm. Hence, the adversary has to perform
signal cancellation on transmissions of multiple TXs to multiple
RXs simultaneously.
(cid:2) ∈ 1, 2, ...N, i
1Modifying multiple messages is more difﬁcult, in which case the success
probability is upper bounded by that of modifying a single message.
833
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:34:15 UTC from IEEE Xplore.  Restrictions apply. 
In any of the above cases, the success of the adversary is
upper-bounded by the capability to replace [h(s) || h(s)r] with
[h(sM ) || h(sm)r] on transmission from one TX to multiple
RXs, or from multiple TXs to one RX. Next, we compute the
probability of replacing [h(s) || h(s)r] with [h(sM ) || h(sm)r].
First, we compute the probability that the kth bit is received as
h(sM ) || h(sM )k
r at all Di(cid:2) ∈ DM (say, from Di). This occurs
if one of the following two conditions is met: either the kth bit
is the same in h(s) ||h(s)r and h(sM ) || h(sM )r or M is able
to perform cancellation and injection of kth at all Di(cid:2) ∈ DM :
$
'HOLPLWHU
Ĳ
9(56(
LQLWLDOL]HG
6WHS
$ODUP
'
'
'HOLPLWHU
6WHS¶
6WHS¶
Ĳ
Ĳ
'
'
Ĳ
6WHS
6WHS
Ĳ
Fig. 22: Attack on the initialization step of VERSE.
Pr[k
th = h(sM )k] = Pr[h(s)k = h(sM )k] +
= pH + (1− pH )pn,
Pr[h(s)k (cid:3)= h(sM )k] Pr[Cancel]
(11)
where pH is the probability for a bit of h(s) || h(s)r to equal a
bit of h(sM ) || h(sM )r, and pn is the probability upper bound
of successfully ﬂipping one bit in [·] during transmissions from
multiple TXs to one RX or from one TX to multiple RXs (it is
reasonable to assume the same pn applies to both scenarios).
For a strictly universal hash function, the hashes for two
different inputs differ at each bit with probability 1/2. The
probability δ of accepting the modiﬁed message of M at A
is computed by taking into account the total number of bits ((cid:8))
generated by the hash function h(·) || h(·)r. The adversary’s
modiﬁed message is accepted by all the Di(cid:2) if M has replaced
i and [h(sM ) || h(sM )r] is received at all Di(cid:2) instead
(cid:2)
mi with m
of [h(s) || h(s)r]. We argue that successful cancellation of
every ON-slot occurs independently, as each ON slot symbol
transmitted by each device is randomly generated (i.i.d). This is
because, if the attacker is located at a ﬁxed location, the resulted
aggregated signal relayed by the attacker will be randomly
distributed (and independent across symbols), so the probability
of each aggregated received symbol’s power being less than a
threshold is also independent from each other. Thus, δ is the
product of the probability of successfully manipulating each
bit:
δ ≤ Π(cid:4)
≤ Π(cid:4)
≤ (pH + (1 − pH )pn)(cid:4)
th = h(sM )k]
k=1 Pr[k
k=1(pH + (1 − pH )pn)
.
(12)
where pH is the probability for a bit of h(s) || h(s)r to equal
a bit of h(sM ) || h(sM )r, and pn is the probability of a
successfully ﬂipping one bit in [·] during transmissions from
multiple TXs to one RX or from one TX to multiple RXs, and (cid:8)
is the length of the hash function h(·) || h(·)r. It is easy to show
that δ is a negligible function of (cid:8), since pH + (1− pH )pn  τ.
(cid:2)
When devices D3 and D4 execute the VERSE protocol with
the legitimate hub, the adversary has to replace the expected
messages from D1 and D2 with his own messages to satisfy
the group count. This can be done by a simple message
injection. However, during the conﬁrmation stage, all devices
synchronously transmit the ON-OFF sequence of the protocol
transcript digest. In our example, at least A, D3, and D4 will
transmit that sequence. As a result, D1 and D2 will overhear a
second integrity veriﬁcation phase (Step 3) within their pairing
(cid:2). Based on Proposition 1, the adversary cannot perform
period τ
cancellation from three transmitters to one receiver to prevent
the overhearing of the legitimate conﬁrmation phase at D1 and
D2. The two latter devices will raise an alarm by transmitting
all ON slots during the integrity veriﬁcation phase and the
protocol will terminate in FAILURE.
This delimiter is sent by the hub before the synchronous
transmission of the protocol digest is initiated (Step 3). We
clarify that we have not assumed a secure synchronization
protocol between the hub and the legitimate devices. We have
simply stated that under a benign setting,
the devices are
capable of achieving synchronization with a bounded error .
This error has been assumed to be fairly large in our experimen-
tations relative to typical clock drifts of wireless devices and
topology scenarios considered in this work (we set  between
1μs to 30μs). Such a value demonstrates that VERSE operates
correctly even in worst-case time misalignment scenarios. If
the adversary attacks the second SYNC message to misalign
the legitimate transmitters, the ON-OFF sequence transmitted
during the integrity veriﬁcation phase will be misaligned lead-
ing to the sounding of the alarm by transmitting all ON slots.
Therefore, the adversary cannot successfully join the group, by
causing time misalignment between legitimate devices.
Now we will present the security analysis on the attack
of synchronization between legitimate entities. Two attack
scenarios can weaken the security of the proposed group pairing
protocol: (a) a malicious device pairs with the legitimate hub,
or (b) a legitimate devices pairs with a rogue hub.
Malicious device pairing with the legitimate hub: The device
synchronization is initiated by the hub, by sending the delimiter
message in Step 3, when the VERSE primitive is used to
secure the transmission of [h(s) || h(s)r]. To pair with hub
A, the malicious device must follow the timing set by the
end of the delimiter sent from A. Any message received
by A at a different timeline will be aborted. The adversary
can attempt
the delimiter message sent by A at
a target device Di, so as to prevent Di from broadcasting
the protocol digest with other devices. The goal is to reduce
the number of devices where cancellation should take place
when [h(s) || h(s)r]
is transmitted using ON-OFF mode
to cancel
835
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:34:15 UTC from IEEE Xplore.  Restrictions apply.