= 1.5
(14)
We also get the Rp = 1.43 when p = 7 in our HDP Code.
Unlike the above generic erasure coding technologies,
EVENODD [3] is a special erasure coding technology only
for RAID-6. It is composed of two types of parity: the P
parity, which is similar to the horizontal parity in RAID-
4, and the Q parity, which is generated by the elements
on the diagonals. RDP [8] is another special erasure coding
technology dedicated for RAID-6. The P parity of RDP is just
the same as that of EVENODD. However, it uses a different
way to construct the Q parity to improve construction and
reconstruction computational complexity.
There is a special class of erasure coding technologies called
lowest density codes. Blaum et al. [4] point out that in a
typical horizontal code for RAID-6, if the P parity is ﬁxed to
be horizontal parity, then with i-row-j-column matrix of data
elements there must be at least (i ∗ j + j − 1) data elements
joining in the generation of the Q parities to achieve the lowest
density. Blaum-Roth, Liberation, and Liber8tion codes are all
lowest-density codes. Compared to other horizontal codes for
RAID-6, the lowest-density codes share a common advantage
that they have the near-optimal single write complexity.
However, most horizontal codes like RDP have unbalanced
I/O distribution as shown in Figure 1, especially high workload
in parity disks.
2) Vertical MDS Codes: X-Code, Cyclic code, and P-Code
are vertical codes due to the fact that their parities are not in
dedicated redundant disk drives, but dispersed over all disks.
This layout achieves better encoding/decoding computational
complexity, and improved single write complexity.
X-Code [42] uses diagonal parity and anti-diagonal parity
and the number of columns (or disks) in X-Code must be a
prime number.
Cyclic code [6] offers a scheme to support more column
number settings with vertical MDS RAID-6 codes. The col-
umn number of Cyclic Code is typically (p− 1) or 2∗ (p− 1).
P-Code [23] is another example of vertical code. Construc-
tion rule in P-Code is very simple. The columns are labeled
with an integer from 1 to (p − 1). In P-Code, the parity
elements are deployed in the ﬁrst row, and the data elements
are in the remaining rows. The parity rule is that each data
element takes part in the generation of two parity elements,
where the sum of the column numbers of the two parity
elements mod p is equal to the data element’s column number.
From the constructions of above vertical codes, we observe
that P-Code may suffer from unbalanced I/O due to uneven
distribution of parities as shown in Figure 2. Although other
vertical codes like X-Code keep load balancing well, they also
have high I/O cost to recover single disk failure compared to
horizontal codes (as shown in Figure 4).
We summarize our HDP code and other popular codes in
Table VII.
B. Load Balancing in Disk Arrays
Load balancing is an important issue in parallel and dis-
tributed systems area [43], and there are many approaches for
achieving the load balancing in disk arrays. At the beginning of
1990s, Holland et al. [19] investigated that parity declustering
was an effective way to keep load balancing in RAID-5, and
Weikum et al. [37] found that dynamic ﬁle allocation can
help achieving load balancing. Ganger et al. [12] compare
the disk striping with the conventional data allocation in disk
arrays, and ﬁnd that disk striping is a better method and
can provide signiﬁcantly improved load balance with reduced
complexity for various applications. Scheuermann et al. [31]
[32] propose a data partitioning method to optimize disk
striping and achieves load balance by proper ﬁle allocation and
dynamic redistributions of the data access. After 2000, some
patents by the industry solve the load balancing problem in
disk array [22] [1] [18] [2]. Recently, with the development of
virtualization in computer systems, a few approaches focus on
dynamic load balancing in virtual storage devices and virtual
disk array [34] [14] [15].
VII. CONCLUSIONS
In this paper, we propose the Horizontal-Diagonal Par-
ity Code (HDP Code) to optimize the I/O load balancing
for RAID-6 by taking advantage of both horizontal and
diagonal/anti-diagonal parities in MDS codes. HDP Code is
a solution for an array of p − 1 disks, where p is a prime
number. The parities in HDP Code include horizontal-diagonal
parity and anti-diagonal parity, where all parity elements are
distributed among disks in the array to achieve well balanced
I/O. Our mathematic analysis shows that HDP Code achieves
the best load balancing and high reliability compared to other
MDS codes.
ACKNOWLEDGMENTS
We thank anonymous reviewers for their insightful com-
ments. This research is sponsored by the U.S. National Sci-
ence Foundation (NSF) Grants CCF-1102605, CCF-1102624,
the National Basic Research 973 Pro-
and CNS-1102629,
gram of China under Grant No. 2011CB302303,
the Na-
tional Natural Science Foundation of China under Grant No.
60933002, the National 863 Program of China under Grant
No.2009AA01A402, and the Innovative Foundation of Wuhan
National Laboratory for Optoelectronics. Any opinions, ﬁnd-
ings, and conclusions or recommendations expressed in this
material are those of the author(s) and do not necessarily
reﬂect the views of the funding agencies.
REFERENCES
[1] E. Bachmat and Y. Ofek. Load balancing method for exchanging data
in different physical disk storage devices in a disk array stroage device
independently of data processing system operation. US Patent No.
6237063B1, May 2001.
[2] E. Bachmat, Y. Ofek, A. Zakai, M. Schreiber, V. Dubrovsky, T. Lam,
and R. Michel. Load balancing on disk array storage device. US Patent
No. 6711649B1, March 2004.
[3] M. Blaum, J. Brady, J. Bruck, and J. Menon. EVENODD: An efﬁcient
scheme for tolerating double disk failures in RAID architectures. IEEE
Transactions on Computers, 44(2):192–202, February 1995.
[4] M. Blaum and R. Roth. On lowest density MDS codes.
Transactions on Information Theory, 45(1):46–59, January 1999.
IEEE
SUMMARY OF DIFFERENT CODING METHODS IN RAID-6
TABLE VII
Code Methods
EVENODD code
B-Code
X-Code
RDP code
HoVer code
P-Code
Cyclic code
HDP code
DP/ADP
√
√
√
HP
√
√
√
√
VP
√
√
√
√
HDP
Computation cost Workload balance
Reduced I/O cost to recover single disk
medium
high
high
low
low
medium
medium
low
√
unbalance
balance
balance
unbalance
unbalance
unbalance
balance
balance
high
none
low
high
high
none
none
high
[5] J. Blomer, M. Kalfane, R. Karp, M. Karpinski, M. Luby, and D. Zucker-
man. An XOR-based Erasure-Resilient coding scheme. Technical Report
TR-95-048, International Computer Science Institute, August 1995.
[6] Y. Cassuto and J. Bruck. Cyclic lowest density MDS array codes. IEEE
Transactions on Information Theory, 55(4):1721–1729, April 2009.
[7] P. Chen, E. Lee, G. Gibson, R. Katz, and D. Patterson. RAID: High-
performance, reliable secondary storage. ACM Computing Surveys,
26(2):145–185, June 1994.
[8] P. Corbett, B. English, A. Goel, T. Grcanac, S. Kleiman, J. Leong, and
S. Sankar. Row-Diagonal Parity for double disk failure correction. In
Proc. of the USENIX FAST’04, San Francisco, CA, March 2004.
[9] EMC Corporation. EMC CLARiiON RAID 6 Technology: A Detailed
http://www.emc.com/collateral/hardware/white-papers/h2891-
Review.
clariion-raid-6.pdf, July 2007.
[10] G. Feng, R. Deng, F. Bao, and J. Shen. New efﬁcient MDS array
codes for RAID part I: Reed-Solomon-like codes for tolerating three disk
failures. IEEE Transactions on Computers, 54(9):1071–1080, September
2005.
[11] G. Feng, R. Deng, F. Bao, and J. Shen. New efﬁcient MDS array
codes for RAID part II: Rabin-like codes for tolerating multiple (≥
4) disk failures. IEEE Transactions on Computers, 54(12):1473–1483,
December 2005.
[12] G. Ganger, B. Worthington, R. Hou, and Y. Patt. Disk subsystem load
balancing: disk striping vs. conventional data placement. In Proc. of the
HICSS’93, Wailea, HI, January 1993.
[13] K. Greenan, X. Li, and J. Wylie. Flat XOR-based erasure codes in
storage systems: Constructions, efﬁcient recovery, and tradeoffs. In Proc.
of the IEEE MSST’10, Incline Village, NV, May 2010.
[14] A. Gulati, C. Kumar, and I. Ahmad. Modeling workloads and devices
for io load balancing in virtualized environments. ACM SIGMETRICS
Performance Evaluation Review, 37(3):61–66, December 2009.
[15] A. Gulati, C. Kumar, I. Ahmad, and K. Kumar. BASIL: Automated io
load balancing across storage devices. In Proc. of the USENIX FAST’10,
San Jose, CA, February 2010.
[16] J. Hafner. WEAVER codes: Highly fault tolerant erasure codes for
storage systems. In Proc. of the USENIX FAST’05, San Francisco, CA,
December 2005.
[17] J. Hafner. HoVer erasure codes for disk arrays. In Proc. of the IEEE/IFIP
DSN’06, Philadelphia, PA, June 2006.
[18] E. Hashemi. Load balancing conﬁguration for storage arrays employing
mirroring and striping. US Patent No. 6425052B1, July 2002.
[19] M. Holland and G. Gibson. Parity declustering for continuous operation
In Proc. of the ASPLOS’92, Boston, MA,
in redundant disk arrays.
October 1992.
[20] C. Huang, M. Chen, and J. Li. Pyramid Codes: Flexible schemes to
In
trade space for access efﬁciency in reliable data storage systems.
Proc. of the IEEE NCA’07, Cambridge, MA, July 2007.
[21] C. Huang and L. Xu. STAR: An efﬁcient coding scheme for correcting
In Proc. of the USENIX FAST’05, San
triple storage node failures.
Francisco, CA, December 2005.
[22] R. Jantz. Method for host-based I/O workload balancing on redundant
array controllers. US Patent No. 5937428, August 1999.
[23] C. Jin, H. Jiang, D. Feng, and L. Tian. P-Code: A new RAID-6 code
with optimal properties. In Proc. of the ICS’09, Yorktown Heights, NY,
June 2009.
[24] M. Li, J. Shu, and W. Zheng. GRID codes: Strip-based erasure code
with high fault tolerance for storage systems. ACM Transactions on
Storage, 4(4):Article 15, January 2009.
San Jose, CA, February 2008.
[29] RANDOM.ORG.
http://www.random.org/integers/, 2010.
Random
Integer
Generator.
[25] D. Patterson, G. Gibson, and R. Katz. A case for Redundant Arrays of
Inexpensive Disks (RAID). In Proc. of the ACM SIGMOD’88, Chicago,
IL, June 1988.
[26] E. Pinheiro, W. Weber, and L. Barroso. Failure trends in a large disk
In Proc. of the USENIX FAST’07, San Jose, CA,
drive population.
February 2007.
[27] J. Plank. A new minimum density RAID-6 code with a word size of
eight. In Proc. of the IEEE NCA’08, Cambridge, MA, July 2008.
[28] J. Plank. The RAID-6 liberation codes. In Proc. of the USENIX FAST’08,
[30] I. Reed and G.Solomon. Polynomial codes over certain ﬁnite ﬁelds.
Journal of the Society for Industrial and Applied Mathematics, pages
300–304, 1960.
[31] P. Scheuermann, G. Weikum, and P. Zabback. Adaptive load balancing
in disk arrays. In Proc. of the FODO’93, Chicago, IL, October 1993.
[32] P. Scheuermann, G. Weikum, and P. Zabback. Data partitioning and
load balancing in parallel disk systems. the VLDB Journal, 7(1):48–66,
February 1998.
[33] B. Schroeder and G. Gibson. Disk failures in the real world: What does
an MTTF of 1,000,000 hours mean to you? In Proc. of the USENIX
FAST’07, San Jose, CA, February 2007.
[34] A. Singh, M. Korupolu, and D. Mohapatra. Server-Storage virtualization:
Integration and load balancing in data centers. In Proc. of the IEEE/ACM
SC’08, Austin, TX, November 2008.
[35] L. Tian, D. Feng, H. Jiang, L. Zeng, J. Chen, Z. Wang, and Z. Song.
PRO: A popularity-based multi-threaded reconstructionoptimization for
In Proc. of the USENIX FAST’07,
RAID-structured storage systems.
San Jose, CA, February 2007.
[36] S. Wan, Q. Cao, C. Xie, B. Eckart, and X. He. Code-M: A Non-
MDS erasure code scheme to support fast recovery from up to two-disk
failures in storage systems. In Proc. of the IEEE/IFIP DSN’10, Chicago,
IL, June 2010.
[37] G. Weikum, P. Zabback, and P. Scheuermann. Dynamic ﬁle allocation
In Proc. of the ACM SIGMOD’91, Denver, CO, May
in disk arrays.
1991.
[38] S. Wu, H. Jiang, D. Feng, L. Tian, and B. Mao. WorkOut: I/O workload
outsourcing for boosting RAID reconstruction performance. In Proc. of
the USENIX FAST’09, San Francisco, CA, February 2009.
[39] J. Wylie and R. Swaminathan. Determining fault tolerance of XOR-
In Proc. of the IEEE/IFIP DSN’07,
based erasure codes efﬁciently.
Edinburgh, UK, June 2007.
[40] L. Xiang, Y. Xu, J. Lui, and Q. Chang. Optimal recovery of single
the ACM
disk failure in RDP code storage systems.
SIGMETRICS’10, New York, NY, June 2010.
In Proc. of
[41] L. Xu, V. Bohossian, J. Bruck, and D. Wagner. Low-density MDS
codes and factors of complete graphs. IEEE Transactions on Information
Theory, 45(6):1817–1826, September 1999.
[42] L. Xu and J. Bruck. X-Code: MDS array codes with optimal encoding.
IEEE Transactions on Information Theory, 45(1):272–276, January
1999.
[43] A. Zomaya and Y. Teh. Observations on using genetic algorithms for
dynamic load-balancing. IEEE Transactions on Parallel and Distributed
Systems, 12(9):899–911, September 2001.