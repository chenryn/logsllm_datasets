This is also the one that claims more in terms of transmission energy and band-
width. Using forged inexpensive ACKs three aspects of the protocol operation
can be attacked:
– Discovery of new nodes: RWG discovers new nodes in the vicinity by
listening to the packets the node receives. Each time a packet is received
the messages stored in the local buﬀer are checked to see if they have been
already delivered to the sender of that packet. If that is not the case they
are forwarded to the node. An attacker can exploit this mechanism by send-
ing many ACK packets with diﬀerent fake sender addresses and create a
high number of message retransmissions. The fake addresses are randomly
generated and there is no mechanism to prevent their usage.
– Delivery status propagation: The propagation of the delivery status of
the messages is done through the informed vector included in the sent packet
headers. An attacker can manipulate these vectors and take advantage of the
other nodes to propagate them using ACK packets.
– Selection of custodians for a given message: When a message is for-
warded to a group of nodes, they answer with an ACK packet. RWG uses
these ACK packets to randomly choose one of the nodes as the next custo-
dian of the message. An attacker could exploit this mechanism to be elected
as the next custodian by answering with several ACKs increasing the prob-
ability of being chosen.
It is assumed that the adversaries will have a complete knowledge of the protocol
and that will act according to the RWG speciﬁcations. Though our anomaly
detection algorithm is oblivious to the attack patterns, we will later use two
speciﬁc instances of attacks (see Section 5.2) based on exploiting some of the
operations described for the purpose of evaluation.
4 Anomaly Detection and Mitigation
Anomaly detection is based on the construction of a model that represents the
normal behaviour of a system and which is used to determine abnormal situ-
ations. Since MANET are usually operated by resource constrained devices a
statistical-based approach has been selected as an anomaly detector since it has
a smaller footprint than other techniques.
4.1 Detection Algorithm
The anomaly detector we propose represents normality as a vector of numerical
values called features. The algorithm is based on a distance function D(xi) that
calculates sums of squared diﬀerences between a given observation xi of the
system (which contains F features) and the normality model ¯x to decide if the
observation is anomalous or not (see Eq. 1). An observation is obtained and
evaluated each time a packet is received. According to the central limit theorem,
346
J. Cucurull, M. Asplund, and S. Nadjm-Tehrani
if the number of variables is large enough, then the calculated sums of squared
diﬀerences will follow a normal distribution. Hence a threshold (T1), based on
the statistical three-sigma rule (also called 68-95-99.7 rule) [21], is introduced to
determine if the distance measured is outside of the values considered normal.
The work ﬂow of the system has two diﬀerentiated parts.
D(xi) =
(xi,j − ¯xj)2
F(cid:7)
j=1
(1)
1. Training: In this part in which the normality model of the system is cre-
ated, only observations of the normal behaviour of the system are used.
The model consists of a vector (¯x) with the average value of each feature,
two vectors (max, min) with the maximum and minimum values expected
for each feature under normal conditions, and a threshold (T1) that states
which is the maximum distance observed from the average ﬁeld of normality.
The normality model is created during a period of time that includes two
consecutive steps that comprise N and M observations respectively.
(a) Calculation of average, maximum and minimum values: During
a period of time with a number of N observations, the average (¯x),
maximum (max), and minimum (min) vectors are calculated. The last
two vectors are used for normalisation, i.e. to keep all the features from
normal observations within the same range of values. Normalisation is
also applied to ¯x.
¯x =
1
N
N(cid:7)
i=1
xi
(2)
(b) Calculation of the threshold: During a period of time, and for a
number of M observations, the distance D(xi) between an observation
xi and the calculated average ¯x is measured. T1 (see Eq. 3, 4, and 5) is
deﬁned as the mean of the distances calculated (μ) plus three times their
standard deviation (σ). According to the three-sigma rule the range [μ−
3σ, μ+3σ] should cover 99.7% of the distances of the normal observations
evaluated. Note that just the upper limit is used, because evaluations
with small distances are not considered anomalous.
μ =
1
M
M(cid:7)
i=1
D(xi)
(cid:10)
(cid:11)
(cid:11)
(cid:12) 1
M
M(cid:7)
i=1
σ =
(μ − D(xi))2
T1 = μ + 3σ
(3)
(4)
(5)
Anomaly Detection and Mitigation for Disaster Area Networks
347
2. Testing: During this step the detector is fed with observations of the sys-
tem behaviour that can be anomalous. The detector decides whether an
observation xi is anomalous by calculating the distance D(xi) from ¯x, which
determines how far is the current observation from the normal behaviour
of the system, and compares it with T1. If D(xi) > T1 the observation is
categorised as anomalous, and if D(xi) ≤ T1 it is categorised as normal.
4.2 Features
The features of an anomaly detector are the variables which are believed to
characterise the behaviour of the monitored system. Our approach uses features
at the routing layer and most of them are statistical.
– Packet rates: Number of packets of each type received during the last I1
seconds. There are four of these features, one for each packet type.
– Packet distances: Distance, measured in number of packets received, be-
tween the reception of two speciﬁc types of packets. E.g., number of packets
received between the reception of a REQF and the next ACK. There are six-
teen of these features that cover all the possible packet type combinations.
– Packet rate diﬀerences: Relative diﬀerence in the packet rates calculated
for each type of packet. There are six features, one for each relevant combi-
nation.
– Number of diﬀerent source addresses: Number of diﬀerent source ad-
dresses counted in the packets received during the last I2 seconds.
– Packet ratios: Quotient of the number of packets received of a speciﬁc type
compared to another packet type among the last I3 packets received. There
are three of these features: ACK/REQF, ACK/OKTF, ACK/BS.
– Summation of informed vectors: Summation of all the positions of the
informed vectors received in the last I4 packets.
Because the evaluation is carried out each time a packet is received, the features
that provide information about the last packets received are implemented as
sliding windows over the intervals I1, I2, I3, and I4.
4.3 Alert Aggregation
Statistical anomaly detection requires a certain time to detect an anomaly within
the system. As alerts cannot be mapped to the speciﬁc packets causing the
attacks, the alarms must be raised after an interval of suspicion. This is the
reason why the alerts raised by the detector are processed and aggregated during
an interval Ia of aggregation.
In each of these periods the number of packets evaluated and the number of
alerts registered are counted. Then, an alarm is raised if the number of alerts
within that period exceeds a certain threshold (T2). The threshold is a tun-
able parameter of the system which is deﬁned in terms of proportion of alerts
registered over the number of packets evaluated during Ia.
348
J. Cucurull, M. Asplund, and S. Nadjm-Tehrani
4.4 Mitigation
When an alarm is raised in a node the mitigation scheme is locally enabled. As
it will be explained in Section 5.3, a careful RWG operational mode is proposed
to cover the possible attacks that fall within the threat model deﬁned. Since it
is not clear whether an attack is transient, continuous or intermittent, we need
to decide how long a mitigation should take place. In this paper we have simply
evaluated a mitigation that takes place over a constant interval Im (> Ia). This
prevents the system from disabling the mitigation too early as a consequence of
the beneﬁcial eﬀects of the mitigation instead of the ﬁnalisation of the attack.
5 Evaluation
This section evaluates the detection and mitigation approach applied to RWG
in a disaster area scenario against the threat model described in Section 3.2.
5.1 Simulation Setup
The performance of the approach has been evaluated using the Network Simula-
tor 3 (ns-3) with an implementation of the detection and mitigation mechanisms
embedded in the RWG protocol implementation at the network layer.
The disaster area scenario includes the mobility traces from Aschenbruck et
al. [4], based on a large training manoeuvre in preparation of the FIFA world
cup in Germany in 2006. The original traces include 150 mobile nodes. To induce
partitions and create an intermittently connected network we have selected 25
of the nodes, chosen uniformly over the locations in the area, while maintaining
the trace for that node. This creates a similar network with lower density. Five
other nodes have been chosen as attackers while acting in the same network,
again with a uniform distribution among the fair nodes. The attacker nodes do
not create normal traﬃc (data) in the network, but produce packets that are
compatible with the protocol speciﬁcation as described in section 5.2. This is
aligned to the threat model deﬁned, where the attacker spend the minimum
energy possible. All the nodes use the 802.11a protocol, at 6Mb/s data rate with
a radio range of 24 meters. The speed of the nodes varied in the range 1-2 m/s
in an area of 200m x 350m. The load is generated by introducing in the network
a total of 15 messages to disseminate every second from randomly chosen nodes.
Each message has set to be delivered to minimum number of 10 nodes (k = 10).
The simulation time for each run is 3000 seconds. The ﬁrst 200 seconds are
discarded (not used for anomaly detection) due to start-up time for the protocol.
The following 1400 seconds are used for training the system (half of them for
calculating ¯x, min and max vectors and the rest for the threshold), and the last
1400 seconds are used for evaluation. Each simulation is repeated 10 times with
diﬀerent sets of traces and all the results shown are averages over these 10 runs.
The alert aggregation window (Ia) is chosen as 10 seconds (unless otherwise
stated). The selected threshold (T2) for the alert aggregation process is set up to
Anomaly Detection and Mitigation for Disaster Area Networks
349
30%. The mitigation period (Im), during which a mitigation remains enabled is
set up to 200 seconds. The intervals used to calculate the features (I1, I2, I3, and
I4) are set up to 5 seconds, 10 seconds, 50 packets, and 100 packets, respectively.
5.2 Generated Attacks
To show the eﬀectiveness of the detection and mitigation approach, two attacks
that fall into the threat model described in Section 3.2 have been implemented.
– Draining attack: It makes the nodes around the attacker to transmit more
packets than usual in order to drain their batteries and waste some band-
width. The eﬀect, that exploits the RWG node discovery mechanism, is
achieved by regularly sending ACK packets with diﬀerent fake identities.
As it is depicted on Fig. 2 the aﬀected neighbours (A and B aﬀected by C
in the example) respond to each ACK by sending all the messages stored
in their buﬀers (m1, m2, m3) which are in inactive state, since the identity
announced in the ACK (nF ) is completely new and it seems to come from a
not yet informed node. The attack is cheap since just one inexpensive ACK
packet issued by the attacker may reach several nodes which can answer
with several possibly expensive REQF packets that, besides, induce other
responses to them (3 REQF, 3 ACK and 3 OKTF in the example).
Fig. 2. Draining attack
350
J. Cucurull, M. Asplund, and S. Nadjm-Tehrani
Fig. 3. Grey hole attack
– Grey hole attack: This attack, which exploits the propagation of the mes-
sage delivery status, consists of making the nodes around the attacker to
believe that the messages they disseminate have already reached k nodes as
required. This makes the fair nodes to execute the mechanisms for remov-
ing the message, thus resulting in a reduction of network message k-delivery
ratio. As can be seen in Fig. 3 the attacker answers the REQF packets re-
ceived with an ACK that contains a forged informed vector (see values within
parenthesis in the example). The vector is modiﬁed to include k − 1 bits set
to 1. Hence, when another fair ACK is received the node which has sent the
REQF considers that the message has been disseminated to k nodes and
issues a BS packet. Note that the attacker does not directly set the number
of bits of the informed vector to k in order to go unnoticed.
In both cases the adversaries do not participate in the normal operation of the
network, but can listen and send packets as any other node. Both of the attacks
are tested in both continuous and transient modes. The continuous mode enables
the attack during 2/3 of the detection time. From the 2067th time step in our
tests, until the end of the simulation. While the transient mode enables the
attack during a certain interval of the simulation, from 2200 to 2400 seconds in
our tests. The former shows the eﬀects of a persistent attack, while the latter
shows the eﬀects of an attack that disappears shortly after.
These attacks have indeed a signiﬁcant impact on network performance. Be-
ginning with the draining attack, it is performed by 5 nodes each sending 10
ACK packets/second with diﬀerent identities. Each of these ACKs produces
around 15 direct responses as REQF packets issued by the victims. The impact
of the continuous draining attack can be seen on Fig. 4, where a huge and sharp
increase of the network packet transmissions can be observed soon after the at-
tack. Note that a peak, with around 150% higher packet transmission rate, is
registered during the ﬁrst 100 seconds of the attack. Later this rate is reduced
and stabilised to around a 90% higher rate compared to the no attack case. This
is due to the fact that just at the beginning of the attack there are more inactive
messages ready to be forwarded in the buﬀers of the fair nodes.
Anomaly Detection and Mitigation for Disaster Area Networks
351
The grey hole attack, whose goal is to reduce the chances of successful dis-
semination of messages, is performed by 5 nodes each one answering to all the
REQF packets they receive with forged ACK packets. The impact of the con-
tinuous grey hole attack can be seen in Fig. 6, which depicts how the message
k-delivery rate, in comparison with the messages introduced into the network,
suddenly drops to a 10% of the normal rate (which in this scenario is around 10
messages/second) just after the beginning of the attack.
5.3 Implemented Mitigations
In a highly unpredictable environment with pockets of connectivity, we need to
act in a way that works with unknown node IDs and “fuzzy” normality. Instead
of suspecting individual nodes and isolating them (which is very diﬃcult to do
accurately) as for example in the work by Wang et al. [20], our approach is
based on the adjustment of the protocol behaviour in the own node to a careful
mode. In this mode the performance can slightly decrease, but the impact of the
attacks is strongly reduced. The new operational mode responds to the threats
described in Section 3.2 and it is generic enough to provide a uniﬁed response
to them.
For the attacks that target the RWG mechanisms for discovery of new nodes
and selection of custodians, the mitigation consists of ignoring cheap packets
(ACK, OKTF, and BS) with “fake” identities. Of course, in the normal operation
of the protocol none of the nodes have knowledge to distinguish good and fake
identities. We propose that we have a chance of recognising such nodes if we
add a low overhead mechanism to the protocol, namely creating a list of known
nodes during the periods in which the mitigation is not enabled. This can be
eﬀectively done if a list is updated with identities of nodes that have sent REQF
messages. This addition to the protocol is not wasteful of energy (given that
transmission energy is the dominant factor) but uses up some storage at each
node. We also expect a slight increase in the latency for detection of new nodes
in the vicinity.
For the attacks that target the RWG mechanism for propagation of delivery
status, the solution consists of going into a “suspicious mode”. In this mode we
restrict the update of the delivery information from the ACK packets received
(i.e. do not set zeros to ones in the bit vector). More speciﬁcally, when the
mitigation is enabled, the informed vectors of the messages contained in the
node’s local buﬀer are only updated from the informed vectors of the REQF,
OKTF and BS packets. If an ACK is received the local informed vectors are just
updated for the position that corresponds to the sender of the ACK, but the
informed vector contained within the ACK packet is ignored. This mitigation
imposes a heavier burden on the network resources. The information regarding
the number of deliveries of each message is propagated slower than usual and
the message is kept in the network for a longer time than needed increasing the
transmission of packets around a 25%.
Obviously, the application of these techniques reduces the performance of the
network if enabled indeﬁnitely (we lose some of the strengths of RWG). This
352
J. Cucurull, M. Asplund, and S. Nadjm-Tehrani
is the reason why they are not an integrated part of the protocol speciﬁcation.
Instead, it is best to apply them just during an interval (Im) after the detection
of an attack. Further studies should show what are the optimal intervals to select
for Im in a given network environment.
5.4 Evaluation Metrics
Given the chaotic nature of the scenario we would not be able to use the classic
detection rate (DR) and false positive rate (FPR) metrics for evaluation. This
is due to the fact that the success of the approach is not measurable with those
metrics neither on a per node basis nor on a network wide (average) basis. The
locality of the attackers, the nature of the partitions, and the mobility of the
nodes, all aﬀect the results so that there are no meaningful homogeneous out-
comes using these metrics. However, we will come back to them and analyse the
above locality aspects in Section 5.6. Our main evaluation metrics for detection
and mitigation are instead:
– K-Delivery Rate (KDR): Depending on the connectivity of the network,
the message load, and the dynamics only a proportion of the messages sent
are ﬁnally k-delivered. Thus, a good metric to evaluate the possible eﬀects
of an attack and its mitigation is the number of messages which are in fact
k-delivered over the interval of study.
– Packet Transmission Rate (PTR): Another relevant metric is the num-
ber of packets transmitted during the interval of study. Besides being an
indicator of the usage of bandwidth as a resource, the PTR is an indicator
of the energy spent by the nodes, since the more transmissions the more
energy is consumed.
5.5 Detection and Mitigation Results
The detection approach proposed in Section 4 has been tested with the two at-
tacks and two combinations described in Section 5.2 (continuous and transient).
In the following, whenever an attack is sensed the anomaly detector enables both
mitigations at the same time (ignores ACK packets with possible bogus IDs, and
does not update the informed vector on ACK packets received). The Im interval
is selected as 200 seconds.
Fig. 4 shows the eﬀect of applying the detection and mitigation to the contin-
uous draining attack. When the detection and mitigation mechanism is disabled
the PTR in the network is around 90% higher than the normal rate as a result
of the attack (except during the initial peak which is higher). However, when
the mechanism is enabled, the PTR increases, but as soon as the attack be-
comes detected in most of the nodes, the mitigation actions are taken and the
attack impact is reduced. Fig. 5 shows the transient draining attack, which as
in the previous case increases the PTR with the same proportions. Nonetheless,
in this case an initial peak of the PTR with mitigation is noticeable since the
PTR in the simulation without attack is also increasing. In this case it is worth
Anomaly Detection and Mitigation for Disaster Area Networks
353
mentioning that after the attack, the number of packets sent gradually returns
to the normality as the mitigation is disabled within Im of detecting in each
node. In both cases the detection delay observed is about 10-30 seconds after
the beginning of the attack for nodes close to the attackers.
Fig. 6 shows the eﬀect of applying the detection and mitigation to the con-
tinuous grey hole attack. When the mechanism is disabled and the attack starts
the KDR drastically drops to around 10% of the normal rate. With the mech-