### 4. Anomaly Detection and Mitigation

#### 4.1 Overview
Anomaly detection is based on the construction of a model that represents the normal behavior of a system and is used to identify abnormal situations. In Mobile Ad-hoc Networks (MANETs), which are typically operated by resource-constrained devices, a statistical-based approach is chosen for anomaly detection due to its smaller computational footprint compared to other techniques.

#### 4.2 Detection Algorithm

The proposed anomaly detector represents normality as a vector of numerical values called features. The algorithm uses a distance function \( D(x_i) \) to calculate the sum of squared differences between a given observation \( x_i \) of the system (which contains \( F \) features) and the normality model \( \bar{x} \). This helps in determining if the observation is anomalous or not (see Equation 1). An observation is obtained and evaluated each time a packet is received.

\[
D(x_i) = \sum_{j=1}^{F} (x_{i,j} - \bar{x}_j)^2
\]

According to the central limit theorem, if the number of variables is large enough, the calculated sums of squared differences will follow a normal distribution. A threshold \( T_1 \), based on the statistical three-sigma rule (also known as the 68-95-99.7 rule), is introduced to determine if the distance measured is outside the range considered normal.

The workflow of the system has two distinct phases: training and testing.

**Training:**
1. **Calculation of average, maximum, and minimum values:**
   During a period with \( N \) observations, the average \( \bar{x} \), maximum \( \text{max} \), and minimum \( \text{min} \) vectors are calculated. The last two vectors are used for normalization, ensuring all features from normal observations fall within the same range. Normalization is also applied to \( \bar{x} \).

   \[
   \bar{x} = \frac{1}{N} \sum_{i=1}^{N} x_i
   \]

2. **Calculation of the threshold:**
   During a period with \( M \) observations, the distance \( D(x_i) \) between an observation \( x_i \) and the calculated average \( \bar{x} \) is measured. The threshold \( T_1 \) is defined as the mean of the distances calculated (\( \mu \)) plus three times their standard deviation (\( \sigma \)). According to the three-sigma rule, the range \([ \mu - 3\sigma, \mu + 3\sigma ]\) should cover 99.7% of the distances of the normal observations evaluated. Only the upper limit is used because small distances are not considered anomalous.

   \[
   \mu = \frac{1}{M} \sum_{i=1}^{M} D(x_i)
   \]
   \[
   \sigma = \sqrt{\frac{1}{M} \sum_{i=1}^{M} (D(x_i) - \mu)^2}
   \]
   \[
   T_1 = \mu + 3\sigma
   \]

**Testing:**
During this phase, the detector evaluates observations of the system's behavior that may be anomalous. The detector calculates the distance \( D(x_i) \) from \( \bar{x} \) and compares it with \( T_1 \). If \( D(x_i) > T_1 \), the observation is categorized as anomalous; otherwise, it is categorized as normal.

#### 4.3 Features

The features of the anomaly detector are the variables that characterize the behavior of the monitored system. Our approach uses features at the routing layer, most of which are statistical:

- **Packet rates:** Number of packets of each type received during the last \( I_1 \) seconds. There are four such features, one for each packet type.
- **Packet distances:** Distance, measured in the number of packets received, between the reception of two specific types of packets. For example, the number of packets received between the reception of a REQF and the next ACK. There are sixteen such features covering all possible packet type combinations.
- **Packet rate differences:** Relative difference in the packet rates calculated for each type of packet. There are six such features, one for each relevant combination.
- **Number of different source addresses:** Number of different source addresses counted in the packets received during the last \( I_2 \) seconds.
- **Packet ratios:** Quotient of the number of packets received of a specific type compared to another packet type among the last \( I_3 \) packets received. There are three such features: ACK/REQF, ACK/OKTF, ACK/BS.
- **Summation of informed vectors:** Summation of all the positions of the informed vectors received in the last \( I_4 \) packets.

Since the evaluation is carried out each time a packet is received, the features that provide information about the last packets received are implemented as sliding windows over the intervals \( I_1, I_2, I_3, \) and \( I_4 \).

#### 4.4 Alert Aggregation

Statistical anomaly detection requires a certain time to detect an anomaly within the system. As alerts cannot be mapped to specific packets causing the attacks, alarms must be raised after an interval of suspicion. This is why the alerts raised by the detector are processed and aggregated during an interval \( I_a \) of aggregation.

In each of these periods, the number of packets evaluated and the number of alerts registered are counted. An alarm is raised if the number of alerts within that period exceeds a certain threshold \( T_2 \). The threshold is a tunable parameter of the system, defined in terms of the proportion of alerts registered over the number of packets evaluated during \( I_a \).

#### 4.5 Mitigation

When an alarm is raised in a node, the mitigation scheme is locally enabled. A careful RWG operational mode is proposed to cover the possible attacks within the threat model. Since it is unclear whether an attack is transient, continuous, or intermittent, we need to decide how long the mitigation should take place. In this paper, we have evaluated a mitigation that takes place over a constant interval \( I_m (> I_a) \). This prevents the system from disabling the mitigation too early due to the beneficial effects of the mitigation rather than the finalization of the attack.

### 5. Evaluation

This section evaluates the detection and mitigation approach applied to RWG in a disaster area scenario against the threat model described in Section 3.2.

#### 5.1 Simulation Setup

The performance of the approach was evaluated using the Network Simulator 3 (ns-3) with an implementation of the detection and mitigation mechanisms embedded in the RWG protocol at the network layer.

The disaster area scenario includes mobility traces from Aschenbruck et al. [4], based on a large training maneuver in preparation for the FIFA World Cup in Germany in 2006. The original traces include 150 mobile nodes. To induce partitions and create an intermittently connected network, we selected 25 nodes uniformly distributed across the area while maintaining the trace for each node. This creates a similar network with lower density. Five other nodes were chosen as attackers, again with a uniform distribution among the fair nodes. The attacker nodes do not generate normal traffic (data) but produce packets compatible with the protocol specification as described in Section 5.2. All nodes use the 802.11a protocol at 6 Mbps data rate with a radio range of 24 meters. The speed of the nodes varied between 1-2 m/s in an area of 200m x 350m. The load is generated by introducing a total of 15 messages to disseminate every second from randomly chosen nodes. Each message is set to be delivered to a minimum of 10 nodes (k = 10). The simulation time for each run is 3000 seconds. The first 200 seconds are discarded due to start-up time for the protocol. The following 1400 seconds are used for training the system (half for calculating \( \bar{x}, \text{min}, \) and \( \text{max} \) vectors and the rest for the threshold), and the last 1400 seconds are used for evaluation. Each simulation is repeated 10 times with different sets of traces, and all results shown are averages over these 10 runs.

The alert aggregation window \( I_a \) is chosen as 10 seconds (unless otherwise stated). The selected threshold \( T_2 \) for the alert aggregation process is set to 30%. The mitigation period \( I_m \), during which mitigation remains enabled, is set to 200 seconds. The intervals used to calculate the features \( I_1, I_2, I_3, \) and \( I_4 \) are set to 5 seconds, 10 seconds, 50 packets, and 100 packets, respectively.

#### 5.2 Generated Attacks

To demonstrate the effectiveness of the detection and mitigation approach, two attacks that fall into the threat model described in Section 3.2 were implemented:

- **Draining Attack:**
  This attack makes the nodes around the attacker transmit more packets than usual, draining their batteries and wasting bandwidth. The effect, which exploits the RWG node discovery mechanism, is achieved by regularly sending ACK packets with different fake identities. As depicted in Fig. 2, affected neighbors (A and B affected by C in the example) respond to each ACK by sending all the messages stored in their buffers (m1, m2, m3) which are in inactive state since the identity announced in the ACK (nF) is new and seems to come from an uninformed node. The attack is cheap because just one inexpensive ACK packet issued by the attacker may reach several nodes, which can respond with several possibly expensive REQF packets, inducing further responses (3 REQF, 3 ACK, and 3 OKTF in the example).

- **Grey Hole Attack:**
  This attack, which exploits the propagation of the message delivery status, makes the nodes around the attacker believe that the messages they disseminate have already reached k nodes as required. This causes the fair nodes to execute the mechanisms for removing the message, resulting in a reduction of the network message k-delivery ratio. As shown in Fig. 3, the attacker answers the REQF packets received with an ACK that contains a forged informed vector (see values within parenthesis in the example). The vector is modified to include k-1 bits set to 1. When another fair ACK is received, the node that sent the REQF considers that the message has been disseminated to k nodes and issues a BS packet. The attacker does not directly set the number of bits of the informed vector to k to remain unnoticed.

In both cases, the adversaries do not participate in the normal operation of the network but can listen and send packets like any other node. Both attacks are tested in both continuous and transient modes. The continuous mode enables the attack during 2/3 of the detection time, from the 2067th time step until the end of the simulation. The transient mode enables the attack during a specific interval, from 2200 to 2400 seconds. The former shows the effects of a persistent attack, while the latter shows the effects of an attack that disappears shortly after.

These attacks significantly impact network performance. The draining attack, performed by 5 nodes each sending 10 ACK packets/second with different identities, produces around 15 direct responses as REQF packets issued by the victims. The impact of the continuous draining attack is shown in Fig. 4, where a significant increase in network packet transmissions is observed soon after the attack. A peak with around 150% higher packet transmission rate is registered during the first 100 seconds of the attack. Later, this rate stabilizes to around a 90% higher rate compared to the no-attack case, due to fewer inactive messages ready to be forwarded in the buffers of the fair nodes.

The grey hole attack, whose goal is to reduce the chances of successful dissemination of messages, is performed by 5 nodes each answering all the REQF packets they receive with forged ACK packets. The impact of the continuous grey hole attack is shown in Fig. 6, which depicts how the message k-delivery rate, compared to the messages introduced into the network, suddenly drops to 10% of the normal rate (around 10 messages/second) just after the beginning of the attack.

#### 5.3 Implemented Mitigations

In a highly unpredictable environment with pockets of connectivity, we need to act in a way that works with unknown node IDs and "fuzzy" normality. Instead of suspecting individual nodes and isolating them, our approach adjusts the protocol behavior in the own node to a careful mode. In this mode, performance may slightly decrease, but the impact of the attacks is strongly reduced. The new operational mode responds to the threats described in Section 3.2 and provides a unified response.

For attacks targeting the RWG mechanisms for discovery of new nodes and selection of custodians, the mitigation involves ignoring cheap packets (ACK, OKTF, and BS) with "fake" identities. During periods when mitigation is not enabled, a list of known nodes is created by updating identities of nodes that have sent REQF messages. This addition to the protocol is not wasteful of energy but uses some storage at each node and may slightly increase the latency for detecting new nodes in the vicinity.

For attacks targeting the RWG mechanism for propagation of delivery status, the solution involves entering a "suspicious mode." In this mode, the update of delivery information from ACK packets received is restricted (i.e., zeros are not set to ones in the bit vector). When mitigation is enabled, the informed vectors of the messages in the node's local buffer are only updated from the informed vectors of the REQF, OKTF, and BS packets. If an ACK is received, the local informed vectors are updated for the position corresponding to the sender of the ACK, but the informed vector contained within the ACK packet is ignored. This mitigation imposes a heavier burden on network resources, slowing the propagation of delivery information and increasing the transmission of packets by about 25%.

Applying these techniques indefinitely reduces network performance, so they are not part of the protocol specification. Instead, they are applied during an interval \( I_m \) after the detection of an attack. Further studies should determine the optimal intervals for \( I_m \) in a given network environment.

#### 5.4 Evaluation Metrics

Given the chaotic nature of the scenario, classic detection rate (DR) and false positive rate (FPR) metrics are not suitable for evaluation. The locality of the attackers, the nature of the partitions, and the mobility of the nodes affect the results, making homogeneous outcomes meaningless. Our main evaluation metrics for detection and mitigation are:

- **K-Delivery Rate (KDR):** The proportion of messages that are k-delivered over the interval of study, considering the connectivity of the network, message load, and dynamics.
- **Packet Transmission Rate (PTR):** The number of packets transmitted during the interval of study, indicating the usage of bandwidth and energy consumption.

#### 5.5 Detection and Mitigation Results

The detection approach proposed in Section 4 was tested with the two attacks and two combinations described in Section 5.2 (continuous and transient). When an attack is sensed, the anomaly detector enables both mitigations simultaneously (ignores ACK packets with possible bogus IDs and does not update the informed vector on ACK packets received). The \( I_m \) interval is selected as 200 seconds.

Fig. 4 shows the effect of applying detection and mitigation to the continuous draining attack. When the mechanism is disabled, the PTR in the network is around 90% higher than the normal rate as a result of the attack (except during the initial peak, which is higher). When the mechanism is enabled, the PTR increases, but as soon as the attack is detected in most nodes, mitigation actions are taken, and the attack impact is reduced. Fig. 5 shows the transient draining attack, which similarly increases the PTR. However, an initial peak of the PTR with mitigation is noticeable since the PTR in the simulation without attack is also increasing. After the attack, the number of packets sent gradually returns to normal as the mitigation is disabled within \( I_m \) of detection in each node. In both cases, the detection delay observed is about 10-30 seconds after the beginning of the attack for nodes close to the attackers.

Fig. 6 shows the effect of applying detection and mitigation to the continuous grey hole attack. When the mechanism is disabled and the attack starts, the KDR drastically drops to around 10% of the normal rate. With the mechanism enabled, the KDR gradually recovers, indicating the effectiveness of the mitigation.