title:Highly-Efficient Fully-Anonymous Dynamic Group Signatures
author:David Derler and
Daniel Slamanig
Highly-Eﬃcient Fully-Anonymous Dynamic
Group Signatures
David Derler1 and Daniel Slamanig2,‡
1 IAIK, Graz University of Technology, Graz, Austria
2 AIT Austrian Institute of Technology, Vienna, Austria
PI:EMAIL
PI:EMAIL
Abstract. Group signatures are a central tool in privacy-enhancing
cryptography, which allow members of a group to anonymously produce
signatures on behalf of the group. Consequently, they are an attractive
means to implement privacy-friendly authentication mechanisms. Ide-
ally, group signatures are dynamic and thus allow to dynamically and
concurrently enroll new members to a group. For such schemes, Bel-
lare et al. (CT-RSA’05) proposed the currently strongest security model
(BSZ model). This model, in particular, ensures desirable anonymity
guarantees. Given the prevalence of the resource asymmetry in current
computing scenarios, i.e., a multitude of (highly) resource-constrained
devices are communicating with powerful (cloud-powered) services, it is
of utmost importance to have group signatures that are highly-eﬃcient
and can be deployed in such scenarios. Satisfying these requirements in
particular means that the signing (client) operations are lightweight.
We propose a novel, generic approach to construct dynamic group sig-
nature schemes, being provably secure in the BSZ model and particularly
suitable for resource-constrained devices. Our results are interesting for
various reasons: We can prove our construction secure without requir-
ing random oracles. Moreover, when opting for an instantiation in the
random oracle model (ROM) the so obtained scheme is extremely eﬃ-
cient and outperforms the fastest constructions providing anonymity in
the BSZ model—which also rely on the ROM—known to date. Regard-
ing constructions providing a weaker anonymity notion than BSZ, we
surprisingly outperform the popular short BBS group signature scheme
(Crypto’04; also proven secure in the ROM) and thereby even ob-
tain shorter signatures. We provide a rigorous comparison with existing
schemes that highlights the beneﬁts of our scheme. On a more theoretical
side, we provide the ﬁrst construction following the “without encryption”
paradigm introduced by Bichsel et al. (SCN’10) in the strong BSZ model.
Keywords: group signatures (cid:5) BSZ model (cid:5) CCA2-full anonymity (cid:5)
eﬃciency (cid:5) structure-preserving signatures on equivalence classes
This is the full version of a paper to appear in ASIA CCS’18: 2018 ACM Asia Conference on
Computer and Communication Security, June 4-8, 2018, Incheon, Republic of Korea. ACM, New
York, NY, USA. https://doi.org/10.1145/3196494.3196507.
Work done while aﬃliated with IAIK, Graz University of Technology, Graz, Austria.
‡
1
Introduction
Group signatures, initially introduced by Chaum and van Heyst [CvH91], are an
important privacy-enhancing cryptographic tool which allow a group manager
to set up a group so that every member of this group can later anonymously sign
messages on behalf of the group. Thereby, a dedicated authority (called opening
authority) can open a given group signature to determine the identity of the ac-
tual signer. They allow authentication without revealing the individals’ identity
and are thus an ideal means to implement privacy-friendly authentication. Group
signatures have received signiﬁcant attention from the cryptographic community
beginning in the early 90ies [CvH91] and gain increasing practical relevance due
to technological innovations in intelligent transportation systems (e.g., ﬂoating
car data, toll systems, parking) as well as public transportation systems (i.e.,
smart ticketing), where user privacy is considered to play an important role
(cf. [PPF+12]). In particular, operators must not trace and proﬁle passengers,
but in case of a court order there is a party that can re-identify the otherwise
anonymous passengers. Such privacy aspects are for instance highlighted in the
EU Directive 2010/40/EU on intelligent transport systems and more broadly
in the upcoming EU General Data Protection Regulation (GPDR), latter be-
coming eﬀective in May 2018. These developments and in particular considering
that users’ devices in most use-cases are rather resource constrained, make it
important to have particularly eﬃcient group signature candidates at hand.
Motivation. As an illustrative example for the importance of very fast signa-
ture generation and veriﬁcation times, as well as re-identiﬁcation functionality
as provided by group signatures, consider public transportation system where
every user needs to sign on passing a gate. Here, a large number of tickets (sig-
natures) need to be processed in the shortest possible time and the more tickets
can be processed the more eﬀective and competitive such solutions are. Also for
the subjective comfort of users these times are extremely critical. For instance,
it makes a signiﬁcant diﬀerence between processing/waiting time of one second
compared to 500 or even 250 ms in terms of eﬃciency of the system as well
as user satisfaction. While former is at the edge of acceptability, the latter two
values signiﬁcantly increase the passengers’ comfort and will not inﬂuence the
passenger in his behavior (i.e., requirement to stop and wait at a gate). More-
over it doubles and quadruples the number of processed passengers respectively,
which can make a huge diﬀerence during peak hours.
In such a scenario, we observe a signiﬁcant resource asymmetry between user
(signer) and veriﬁer devices. While former are typically resource-constrained,
latter are much more powerful. Consequently, while veriﬁcation can be per-
formed by powerful devices, an eﬃcient signing routine running on the resource-
constrained clients is the most important characteristic of group signatures.
We also observe that especially the re-identiﬁcation feature is highly valuable
and indeed typically required feature in public-transport, as law-enforcement
requires to re-identify users within ongoing investigations, say after terroristic
attack. This is a gap which is not covered by the existing body of work on privacy
for public transportation [HCDF06, HZB+13, RHBP13, MDND15, RBHP15], as
they all build upon privacy-friendly cryptography which does not provide a re-
identiﬁcation feature, i.e., single-show attribute-based credentials or e-cash.
Goal. Despite their increasing practical importance, no progress has been
made with respect to computational eﬃciency improvements of group signature
schemes providing the desirable notions of CPA- as well as CCA2-full anonymity
within the last decade. The most eﬃcient schemes known to date are the BBS
group signature scheme [BBS04] (which achieves weaker CPA-full anonymity)
and the XSGS group signature scheme [DP06] (which achieves stronger CCA2-
full anonymity as required by BSZ). In this paper we set the goal to further push
the computational eﬃciency limits of group signature schemes providing those
desirable anonymity notions. Before we discuss our contributions, we take a look
at previous work on group signatures to put our contributions in context.
1.1 Previous Work on Group Signatures
Group signatures were ﬁrst rigorously formalized for static groups by Bellare et
al. [BMW03]. In this setting, all members are ﬁxed at setup and also receive
their honestly generated keys at setup from the group manager. This model
was later extended to the dynamic case by Bellare et al.[BSZ05] (henceforth
denoted as BSZ model), where new group members can be dynamically and
concurrently enrolled to the group. Further, it separates the role of the issuer
and the opener so that they can operate independently. The BSZ model requires
a strong anonymity notion, where anonymity of a group signature is preserved
even if the adversary can see arbitrary key exposures and openings of other
group signatures. A slightly weaker model, which is used to prove the security
(and in particular anonymity) of the popular BBS group signature scheme was
introduced by Boneh et al. [BBS04]. This model is a relaxation of the BSZ model,
and in particular weakens anonymity so that the adversary can not request
openings for signatures. As it is common, we refer to this anonymity notion as
CPA-full anonymity, whereas we use CCA2-full anonymity to refer to anonymity
in the sense of BSZ.
Over the years, two main construction paradigms for group signatures have
been established. The ﬁrst one is the widely used sign-encrypt-prove (SEP)
paradigm [CS97]. Here, a signature is an encrypted membership certiﬁcate to-
gether with a signature of knowledge, where the signer demonstrates knowledge
of some signed value in the ciphertext [ACJT00, BBS04, NS04, BSZ05, KY05,
DP06, BW07, BW06, Gro07, LPY15, LLM+16, LMPY16]. As an alternative to
this paradigm, Bichsel et al. in [BCN+10] proposed an elegant design paradigm
for group signatures which does not require to encrypt the membership certiﬁcate
to produce signatures. Henceforth we call this paradigm sign-randomize-proof
(SRP). Essentially, they use a signature scheme which supports (1) randomiza-
tion of signatures so that multiple randomized versions of the same signature
are unlinkable, and (2) eﬃciently proving knowledge of a signed value. In their
construction, on joining the group, the issuer uses such a signature scheme to
sign a commitment to the user’s secret key. The user can then produce a group
signature for a message by randomizing the signature and computing a signa-
ture of knowledge on the message, which demonstrates knowledge of the signed
secret key. To open signatures, in contrast to constructions following SEP, which
support constant time opening by means of decrypting the ciphertext in the
signature, constructions in this paradigm require a linear scan, i.e., to check a
given signature against each potential user. We, however, want to stress that
opening is an infrequent operation typically run on a powerful machine and thus
such a linear scan does not impact the practicality of such schemes. Bichsel et al.
proposed an instantiation based on the randomizable pairing-based Camensich-
Lysyanskaya (CL) signature scheme [CL04] (whose EUF-CMA security is based
on the interactive LRSW assumption). Recently, Pointcheval and Sanders [PS16]
proposed another randomizable signature scheme (whose EUF-CMA security is
proven in the generic group model), which allows to instantiate the approach
due to Bichsel et al. more eﬃciently.
The main drawback of existing constructions following SRP is that they rely
on a security model that is weaker than the BSZ model [BSZ05]: anonymity only
holds for users whose keys do not leak (we will henceforth use CCA− to refer
to anonymity in this sense). This essentially means that once a user key leaks,
all previous signatures of this user can potentially be attributed to this user.
Furthermore, the model used for SRP constructions assumes that the opening
authority and the issuing authority are one entity, meaning that the issuer can
identify all signers when seeing group signatures. Both aforementioned weaken-
ings can be highly problematic in practical applications of group signatures. It
is thus a natural question to ask whether it is possible to prove that construc-
tions following the SRP paradigm provide CPA- or even CCA2-full anonymity.
Unfortunately, for existing constructions we have to answer this negatively. Even
when allowing to modify the existing constructions in [BCN+10, PS16] to allow
the explicit use of encryption upon joining the group (which might solve the
separability issue regarding issuer and opener), it is easy to see that knowledge
of the user secret key breaks CCA2- as well as CPA-full anonymity for both con-
structions.3 Since CCA2-full anonymity straight forwardly implies anonymity in
the SRP model, this example conﬁrms that CCA2-full anonymity is a strictly
stronger notion. The weaker notion of CPA-full anonymity is somewhat orthogo-
nal to the anonymity notion used by the SRP model: it appropriately models the
leakage of user secret keys, but restricts the open oracle access. Yet, in practice
it seems that the risk that a user secret key leaks is extremely hard to quantify,
which is why we deem CPA-full anonymity to be more desirable. This is also
underpinned by the fact that—to the best of our knowledge—no attacks arising
from the restriction of the open oracle access in CPA-full anonymity are known.
3 Each valid group signature contains a valid randomizable signature on the secret key
of the user. While group signatures only contain a proof of knowledge of the signed
secret key, being in possession of secret key candidates allows to simply test them
using the veriﬁcation algorithm of the randomizable signature scheme. This clearly
provides a distinguisher against CCA2- as well as CPA-full anonymity.
1.2 Contribution
We tackle the following open questions, which are of highly practical relevance
but also of theoretical interest:
– Is it possible to further push the computational eﬃciency limits of group
signature schemes providing the more desirable CPA-full and CCA2-full anon-
ymity notions?
– Is it possible to construct schemes providing those more desirable anonymity
notions, where compelling eﬃciency is reached by relying on the SRP para-
digm?
We answer both questions posed above to the aﬃrmative by contributing a novel
approach to construct group signatures. Our approach is a composition of struc-
ture preserving signatures on equivalence classes (SPS-EQ) [HS14, FHS18], con-
ventional digital signatures, public key encryption, non-interactive zero-knowledge
proofs, and signatures of knowledge. Although these tools may sound quite heavy,
we obtain conceptually simple and surprisingly eﬃcient group signatures, which
provably provide CCA2-full anonymity in the strongest model for dynamic group
signatures, i.e., the BSZ model. In doing so, we obtain the ﬁrst construction
which achieves this strong security notion following the SRP paradigm. In addi-
tion to that, we introduce an even more eﬃcient CPA-fully anonymous variant
of our scheme.
We proceed in showing how to instantiate our constructions in the random
oracle model (ROM) to obtain particularly eﬃcient schemes. We are thereby able
to further push the long standing computational eﬃciency limits for both CPA-
and CCA2-fully anonymous group signature schemes regarding signature genera-
tion and veriﬁcation. When comparing to the celebrated and popular BBS group
signature scheme [BBS04] (which achieves CPA-full anonymity in the ROM),
besides being more eﬃcient we surprisingly even obtain shorter signatures. Ul-
timately, when comparing to instantiations in the vein of Bichsel et al. (which
provide a less desirable anonymity notion), our instantiations provide compara-
ble computational eﬃciency.
A Remark on SRP. While existing constructions following the SRP paradigm
(sometimes also called “without encryption” paradigm) do not explicitly use
public key encryption, they all rely on assumptions which imply public key
encryption. In general, their goal is not to avoid public key encryption, but to
make eﬃciency gains by constructing schemes which do not make explicit use of
public key encryption in the sense of SEP, i.e., upon signature generation. We,
thus, may henceforth refer to such schemes as “without explicit encryption”.
Our scheme is in the same spirit and also makes its eﬃciency gains by avoiding
the explicit use of encryption upon signature generation (note that we explicitly
use encryption upon joining and opening).
2 Preliminaries
In this section, we provide some preliminaries and recall the required primitives.
Notation. Let x ←R X denote the operation that picks an element uniformly at
random from a ﬁnite set X and assigns it to x. We assume that all algorithms
run in polynomial time and use y ← A(x) to denote that y is assigned the output
of the potentially probabilistic algorithm A on input x and fresh random coins
and write y ← A(x; r) to make the random coins r of A explicit. We assume
that every algorithm outputs a special symbol ⊥ on error. We write Pr[Ω : E]
to denote the probability of an event E over the probability space Ω. A function
 : N → R+ is called negligible if for all c > 0 there is a k0 such that (k)  k0. In the remainder of this paper, we use  to denote such a negligible
function. We use the [·] operator to access list entries, i.e., let L = (a, b, . . . , z)
then L[1] refers to a.
Let G1 = (cid:104)P(cid:105), G2 = (cid:104) ˆP(cid:105), and GT be groups of prime order p. A bilinear map
e : G1 × G2 → GT is a map, where it holds for all (P, ˆQ, a, b) ∈ G1 × G2 × Z2
that e(aP, b ˆQ) = e(P, ˆQ)ab, and e(P, ˆP ) (cid:54)= 1, and e is eﬃciently computable.
We assume the Type-3 setting, where G1 (cid:54)= G2 and no eﬃciently computable
isomorphism ψ : G2 → G1 is known.
p
Deﬁnition 1 (Bilinear Group Generator). Let BGGen be an algorithm which
takes a security parameter κ and generates a bilinear group BG = (p, G1, G2, GT ,
e, P, ˆP ) in the Type-3 setting, where the common group order p of the groups
G1, G2 and GT is a prime of bitlength κ, e is a pairing and P and ˆP are gener-
ators of G1 and G2, respectively.
Deﬁnition 2 (Decisional Diﬃe-Hellman Assumption (DDH)). The DDH
assumption relative to a prime-order p group G = (cid:104)P(cid:105) with log2 p = κ states that
for all PPT adversaries A there exists a negligible function (·) such that:
(cid:20) b ←R {0, 1}, r, s, t ←R Zp,
Pr
b∗ ← A(P, rP, sP, (b · (rs) + (1 − b) · t)P
: b = b∗(cid:21)
≤ 1/2 + (κ).
Deﬁnition 3 (Symmetric External Diﬃe-Hellman Assumption (SXDH)).
Let BG be a bilinear group generated by BGGen. Then, the SXDH assumption
states that the DDH assumption holds in G1 and G2.
Additionally, we introduce a natural assumption in the Type-3 bilinear group
setting. We justify its plausibility in Appendix A.
Deﬁnition 4 (Computational co-Diﬃe-Hellman Inversion Assumption
(co-CDHI)). The co-CDHI assumption states that for all PPT adversaries A
there exists a negligible function (·) such that:
(cid:20) BG ← BGGen(1κ),
Pr
a ←R Zp, C ← A(BG, aP, 1/a ˆP )
: C = 1/aP
≤ (κ).
(cid:21)
Structure Preserving Signatures on EQ Classes. Subsequently, we brieﬂy
recall structure-preserving signatures on equivalence classes (SPS-EQ) as pre-
sented in [HS14, FHS18]. Therefore, let p be a prime and (cid:96) > 1; then Z(cid:96)
p is a
vector space and one can deﬁne a projective equivalence relation on it, which
i and partitions G(cid:96)
i : M ∼R N ⇔ ∃ s ∈ Z∗
i into equivalence classes. Let ∼R be this rela-
propagates to G(cid:96)
tion, i.e., for M, N ∈ G(cid:96)
p : M = sN . An SPS-EQ scheme
now signs an equivalence class [M ]R for M ∈ (G∗
i )(cid:96) by signing a representa-
tive M of [M ]R. One of the design goals of SPS-EQ is to guarantee that two
message-signature pairs from the same equivalence class cannot be linked. Be-
low, we formally recall the deﬁnition of an SPS-EQ scheme.
Deﬁnition 5 (SPS-EQ). An SPS-EQ on G∗
following PPT algorithms:
i (for i ∈ {1, 2}) consists of the
BGGenR(1κ): On input of a security parameter κ outputs a bilinear group BG.
KGenR(BG, (cid:96)): On input of a bilinear group BG and a vector length (cid:96) > 1 outputs
a key pair (sk, pk).
SignR(M, sk): On input a representative M ∈ (G∗
a signature σ for the equivalence class [M ]R.
ChgRepR(M, σ, ρ, pk): On input of a representative M ∈ (G∗
i )(cid:96) of class [M ]R, a
signature σ for M , a scalar ρ and a public key pk returns an updated message-
signature pair (M(cid:48), σ(cid:48)), where M(cid:48) = ρ · M is the new representative and σ(cid:48) its
updated signature.
VrfR(M, σ, pk): On input of a representative M ∈ (G∗
public key pk outputs a bit b ∈ {0, 1}.
VKeyR(sk, pk): This algorithm on input a secret key sk and a public key pk
outputs a bit b ∈ {0, 1}.
i )(cid:96) and a secret key sk outputs
i )(cid:96), a signature σ and a
For security, one requires the following properties.
Deﬁnition 6 (Correctness). An SPS-EQ scheme on (G∗
i )(cid:96) is called correct
if for all security parameters κ ∈ N, (cid:96) > 1, BG ← BGGenR(1κ), (sk, pk) ←
KGenR(BG, (cid:96)), M ∈ (G∗
VKeyR(sk, pk) = 1 ∧ Pr(cid:2)VrfR(M, SignR(M, sk), pk) = 1(cid:3) = 1 ∧
Pr(cid:2)VrfR(ChgRepR(M, SignR(M, sk), ρ, pk), pk) = 1(cid:3) = 1.
i )(cid:96) and ρ ∈ Z∗
p:
For EUF-CMA security, a valid message-signature pair, corresponding to an un-
queried equivalence class, is considered a forgery.
Deﬁnition 7 (EUF-CMA). An SPS-EQ over (G∗
i )(cid:96) is existentially unforgeable
under adaptively chosen-message attacks, if for all PPT adversaries A with
access to a signing oracle OSignR, there is a negligible function (·) such that:
 BG ← BGGenR(1κ),
(sk, pk) ← KGenR(BG, (cid:96)),
(M∗, σ∗) ← AOSignR(sk,·)
(pk)
Pr
[M∗]R (cid:54)= [M ]R ∀M ∈ QSignR ∧
VrfR(M∗, σ∗, pk) = 1
:
 ≤ (κ),
where QSignR is the set of queries that A has issued to the signing oracle OSignR .
Besides EUF-CMA security, an additional security property for SPS-EQ was in-
troduced in [FHS15] (cf. Deﬁnition 8).
Deﬁnition 8 (Perfect Adaption of Signatures). An SPS-EQ scheme on
(G∗
i )(cid:96) perfectly adapts signatures if for all tuples (sk, pk, M, σ, ρ) where it holds
i )(cid:96), and ρ ∈ Z∗
that VKeyR(sk, pk) = 1, VrfR(M, σ, pk) = 1, M ∈ (G∗
p, the
distributions (ρM, SignR(ρM, sk)) and ChgRepR(M, σ, ρ, pk) are identical.
Digital Signature Schemes. Subsequently, we recall a deﬁnition of digital
signature schemes.
Deﬁnition 9 (Digital Signatures). A digital signature scheme Σ consists of
the following PPT algorithms:
KGen(1κ) : Takes a security parameter κ as input and outputs a secret (signing)
key sk and a public (veriﬁcation) key pk with associated message space M (we
may omit to mention the message space M).
Sign(sk, m) : Takes a secret key sk and a message m ∈ M as input and outputs
a signature σ.
Vrf(pk, m, σ) : Takes a public key pk, a message m ∈ M and a signature σ as
input and outputs a bit b ∈ {0, 1}.
Besides correctness we require existential unforgeability under adaptively chosen
message attacks (EUF-CMA) [GMR88]. Below, we recall formal deﬁnitions of
these properties.