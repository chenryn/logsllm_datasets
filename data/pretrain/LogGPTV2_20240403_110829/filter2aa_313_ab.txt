### HORNECYBER.COM
**PAGE 7**

#### ANALYSIS

Upon examining the chart, it is evident that concerns regarding the security of penetration testing operations are inadequately addressed in most available learning resources. Out of the 23 works studied, 14 did not address any of the fundamental issues raised by the questions. Only four works covered more than two of these issues. Nearly all the works describe practices that, if conducted over the public Internet or other hostile networks, could lead to the exposure of client information, systems, or the penetration tester’s system to malicious third parties. 

By a simple "yes" or "no" assessment, three works did not describe weak practices. The one work color-coded in green included warnings about performing potentially dangerous actions over unencrypted networks. Of the two works color-coded in yellow, one focused solely on procedural aspects without covering technical practices, while the other was a self-published Kindle book that merely compiled terminology from various online sources, offering no substantive guidance on technical or operational matters.

The most frequently described insecure practice was the use of post-exploitation payloads, particularly those built into Metasploit, which can be monitored and hijacked by third parties. The Metasploit project contributors are aware of these risks and have developed new functionality for the Meterpreter payload to secure its command-and-control. However, with the "paranoid mode" functionality only added recently, it was expected to see many works describing insecure practices. It would have been desirable to see discussions on the risks and recommendations for conducting tests locally, over VPNs, or other secure tunnels. The companion talk to this paper includes a demonstration of hijacking post-exploitation command-and-control.

Beyond the expected findings, several books described practices that pose even greater risks to the security of communications and client systems. Notably insecure practices included:

- The use of online hash cracking services.
- The use of plaintext FTP services for transferring payloads and exfiltrating client data.
- Persistent netcat listeners running on client systems, backed by shells, without authentication, and left open for later access by penetration testers.
- The use of unencrypted web shell backdoors to maintain access to target systems.
- Plaintext command-and-control between penetration testers’ workstations and devices left behind in the target’s physical/network space.
- The use of Tor and/or public proxy lists found through search engines to anonymize attacks.
- Enabling a Windows telnet daemon for continued access to a system.

Only one resource addressed all the questions and did not present technically insecure practices without also discussing the inherent risks. While the titles and authors of the works are generally not disclosed, it is worth noting that "Professional Penetration Testing, Second Edition" by Thomas Wilhelm (row 5 in the chart) is the work that comprehensively addressed each point. Although this is not a book review, it is commendable that this work acknowledges the potential problems faced by penetration testers.

### CONDUCTING SECURE PROFESSIONAL PENETRATION TESTS

To minimize the risks associated with penetration testing, both for the testers and their clients, the following recommendations are provided. These practices can be integrated into the workflow of a professional penetration testing firm.

#### CLIENT COMMUNICATIONS SECURITY IN SCOPING, PROGRESS UPDATES, EMERGENCY, AND DELIVERY

Initial meetings should establish secure communication channels. If both parties have the capability, end-to-end encrypted email is recommended. If the client lacks this capability, a secure HTTPS file sharing solution hosted by the penetration tester can be used for sensitive network information and reports. For emergency contact, out-of-band mechanisms such as mobile phones are necessary, though more secure means should be used whenever possible.

#### OPEN SOURCE INTELLIGENCE GATHERING OPERATIONAL SECURITY

During open-source intelligence gathering, careful consideration should be given to the search terms and where they are submitted. While company names and non-sensitive information can be appropriate, testers should be cautious when using derived information. Search terms are often passed along in referral URLs, so measures should be taken to prevent the nature of the search from being apparent to visited sites. Additionally, if the identity of the penetration testing firm can be deduced from the IP address, information tying the firm to a current engagement can leak.

Careful consideration should also be given to actions taken over TOR or other proxy systems. Do not search for or view information over such systems that you would not want an unknown operator to see. In most cases, it should be understood that operations will be conducted using your own resources, making it unnecessary to proxy activities over third-party connections.

#### POTENTIAL THREATS, CLIENT DATA IN TRANSIT, AND INSECURE PRACTICES

All members of the penetration testing team must be aware of the network environment. When tests are conducted over uncontrolled networks, care must be taken to ensure that command-and-control cannot be monitored or hijacked. Client data must be transferred over secure channels. If naturally insecure tools are used, they should be tunneled over a more secure protocol.

While it may be unavoidable to identify initial vulnerabilities, it is recommended to conduct tests from a position on the network as close as possible to the client. On-site testing or using an appliance that securely "phones home" to the penetration testers via a VPN connection can achieve this.

#### PENETRATION TESTER HOST SECURITY

Penetration testers should be aware of the attack surface presented by their tools. Many tools act as servers for agent software, exposing interfaces that third-party attackers can interact with. Tools developed as proof-of-concepts often lack security, reliability, and resilience. Penetration testers should regularly examine their systems, tools, and practices to determine potential subversion opportunities.

#### CLIENT HOST SECURITY

Penetration testers should avoid creating additional vulnerabilities in target systems. The necessity of persistence mechanisms should balance the need to maintain access with the stability of re-exploiting certain vulnerabilities. Access and persistence mechanisms should be accessible only by the penetration tester, not by third parties.

#### CLIENT DATA AT REST

After exfiltration, client data should be stored in a controlled manner. Devices outside the physical control of testers should not store client information longer than necessary. After an engagement, only a minimum amount of client information should be retained long-term, with encryption and access controls applied to remaining data. Anything to be discarded should be securely wiped.

#### DEMONSTRATING ATTACKS ON PENETRATION TESTERS

This section describes a tool used in the live demonstration corresponding to this paper. The tool, Snagterpreter, demonstrates threats to penetration testing operations that, while known to be technically feasible, are not typically considered during engagements. This tool aims to raise awareness and promote increased rigor in penetration testing materials, operations, and client expectations.

**TO DOWNLOAD THIS TOOL AND THE LATEST COPY OF THIS WHITEPAPER WITH MORE DETAIL ON ITS USE, VISIT HORNECYBER.COM.**

#### Snagterpreter – Hijacking HTTP and HTTPS Meterpreter Sessions

Metasploit is the most feature-rich and mature free platform for developing exploits and conducting various penetration testing activities. The Meterpreter agent, the most fully featured post-exploitation payload, provides resilience, evasion, and a rich set of capabilities. Given its features, stability, and ease of use, Metasploit and Meterpreter are ubiquitous in most testers’ training.

Meterpreter sessions often occur over hostile networks, including the public Internet, making them valuable targets for third-party attackers. Such sessions might result from post-exploitation pivoting or social engineering, representing more than just an extension of existing vulnerabilities. Therefore, Meterpreter sessions must be considered part of the attack surface that a malicious threat actor might seek to compromise.

Meterpreter sessions use a Type-Length-Value (TLV) protocol and can operate over various transport mechanisms, including direct reverse TCP, HTTP, and HTTPS. While HTTP/HTTPS transports are generally more resilient and stealthy, common configurations support obfuscation and encryption primarily for evasion, not for protecting the session from monitoring or hijacking.

The Metasploit developers introduced "paranoid mode" in June 2015, which requires the agent to verify the SSL web server's signature, allowing the penetration tester to deploy agents that connect only to verified listeners. However, this mode is not widely used due to its recent introduction and a lack of understanding of its importance.

Snagterpreter, developed by the author, allows an attacker in a position to monitor and modify traffic on a hostile network to hijack non-“paranoid mode” Meterpreter sessions. The tool supports hijacking HTTP and HTTPS sessions, handing over interactive control to the attacker. Once done, the session can usually be returned to the penetration tester.

The best mitigation for this attack is to configure Meterpreter payloads to use "paranoid mode." Instructions can be found in the Metasploit wiki. In the absence of "paranoid mode," minimizing situations where a malicious actor could intercept traffic is a reasonable alternative.

### CONCLUSIONS

In this paper, we examined the threats faced by penetration testers and the risks posed to both testers and their clients. A study of popular learning and reference materials revealed significant shortcomings in guidance for securely conducting engagements. Recommendations have been made to improve the security of future tests. Additionally, a tool has been developed to demonstrate the real risks of using insecure practices.

For a profession that specializes in reporting on vulnerabilities, it is crucial that penetration testing firms maintain their own security. Efforts must be made to improve tools, techniques, and processes, and to enhance training and reference materials that define standard procedures.

### REFERENCES

[1] Wesley McGrew, *Pwn The Pwn Plug: Analyzing and Counter-Attacking Attacker-Implanted Devices*, DEF CON 21, https://www.defcon.org/images/defcon-21/dc-21-presentations/McGrew/DEFCON-21-McGrew-Pwn-The-Pwn-Plug-WP.pdf

[2] Wesley McGrew, *I Hunt Penetration Testers: More Weaknesses in Tools and Procedures*, DEF CON 23, https://media.defcon.org/DEF%20CON%2023/DEF%20CON%2023%20presentations/DEFCON-23-Wesley-McGrew-I-Hunt-Penetration-Testers-WP.pdf

[3] Multiple authors, *The Penetration Testing Execution Standard*, http://pentest-standard.org

[4] *Metasploit: Penetration Testing Software*, http://metasploit.com

[5] *Metasploit Framework Wiki, Meterpreter*, https://github.com/rapid7/metasploit-framework/wiki/Meterpreter

[6] HD Moore, *Meterpreter HTTP/HTTPS Communication*, https://community.rapid7.com/community/metasploit/blog/2011/06/29/meterpreter-httphttps-communication

[7] *Meterpreter Paranoid Mode*, https://github.com/rapid7/metasploit-framework/wiki/Meterpreter-Paranoid-Mode

[8] NIST SP 800-115, *Technical Guide to Information Security Testing and Assessment*, http://csrc.nist.gov/publications/nistpubs/800-115/SP800-115.pdf

[9] ISECOM, *OSSTMM 3 – Open Source Security Testing Methodology Manual*, http://www.isecom.org/research/osstmm.html

[10] *Penetration Test Guidance Special Interest Group, PCI Data Security Standard – Information Supplement: Penetration Testing Guidance*, https://www.pcisecuritystandards.org/documents/Penetration_Testing_Guidance_March_2015.pdf

[11] *The Penetration Testing Execution Standard*, http://pentest-standard.org

[12] Thomas Wilhelm, *Professional Penetration Testing, Second Edition*

@HORNECyber

### ABOUT THE AUTHOR

**Wesley McGrew, Ph.D.**

Wesley serves as the director of cyber operations for HORNE Cyber Solutions. Known for his work in offensive information security and cyber operations, Wesley specializes in penetration testing, network vulnerability analysis, exploit development, reverse engineering of malicious software, and network traffic analysis.