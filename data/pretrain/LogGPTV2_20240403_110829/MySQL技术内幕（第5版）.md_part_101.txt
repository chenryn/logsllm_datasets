务器。
所对应的那一行也适用于各种名字有所变化（如 Windows 里的 mysqla-debug）的 My SQL服
[mysqld] 和[server]里放置适用于 mysqld 的各种选项。有了选项组[mysql_safe]、
项文件里放置下面几行内容来指明：
服务器以mysql身份运行，并使用/usr/local/mysql作为基本目录位置，
找选项文件的位置，可以运行下面的命令：
[mysql_server]和[mysql.server]，你就能指定仅适用于某个启动脚本的选项。
mysql.server脚本读取选项文件只是为了查找选项basedir、datadir、pid-file 和
在Windows里，如果你不使用默认服务名来为MySQL创建Windows服务，就会对服务器
在往选项组里放选项时，要选择在你想要的上下文里会用到的选项组。可以在选项组
表12-1列出的是My SQL 服务器和服务器启动程序所使用的标准选项组。其中，mysqld
通常情况下，My SQL 服务器启动选项都在[mysqla]选项组里。例如，
口在所有平台里，服务器都可以对基于IP地址和网络端口的TCP/IP连接进行监听。不过在
MySQL服务器能够在多种网络接口上对连接进行监听，相应的控制方式如下所示。
% mysqld --user=mysql --basedir=/usr/local/mysql
也可以在命令行上使用选项来启动服务器，实现上述效果：
basedir=/usr/local/mysql
user=mysql
[mysqld]
如果你想用的选项文件还不存在，
%mysqld--verbose--help
■对于所有的IPv4映射地址，服务器会接受 IPv4和IPv6两种地址形式的连接。例如，当服
mysql.server
mysqld_safe
■*与：：很像，不同之处在于：如果IPv6不可用，服务器就只会在所有IPv4接口上接受
认IP地址为*（即监听所有的IPv4和IPv6接口）。
mysqld
■对于：：，服务器会在所有IPv4和IPv6接口上接受连接。
■对于0.0.0.0，服务器会在所有IPv4接口上接受连接。
允许在多个网络接口上进行连接。
不同的地址类型对服务器接受TCP/IP连接方式所产生的各种影响。有些addr值比较特殊，
名。当指定的地址是主机名时，服务器会将它解析为IP 地址，并使用它。下面列出了绑定
--bind-address=addr选项来实现。指定的地址可以是IPv4或 IPv6地址，还可以是主机
监听所有的IPv4.接口）。要想指定监听的IP 地址，可以通过在启动服务器时使月
动时使用--skip-networking选项，可以跳过这个监听功能。自MySQL5.6.6版本起，
务器绑定到：:ffff:192.168.0.3时,允许客户端在进行连接时将--host选项的值指定
控制服务器的连接监听
连接。
程序
表12-1MySQL服务器程序使用的选项组
[mysqld]、
[mysqld]、[server]、[mysqld_safe]
(mysqld]、
，可以按普通文本文件格式来创建它。
[server]、
[server]
12.2安排MySQL服务器的启动和关闭
程序使用的选项组
。在5.6.6版本之前，默认为0.0.0.0（即
[mysql_server]
[mysql.server]
，那么可以通过在选
，如果想让 My SQL
423
定
用
启
---
## Page 444
调用该脚本时带上stop参数，以告知服务器关闭。你也可以自己调用该脚本，手动关闭服务
响应是结束运行。
适当的响应（如果它们不响应，就会被无情地“杀掉"）。当 mysqld 收到这个信号时，做出的
可以停止它。BSD 系列的 Unix系统在正常关闭时会发送一个 TREM信号。程序会对此信号做比
令行手动停止服务器：
那么也可以使用服务管理器提供的图形界面来选择和停止服务器；还可以像下面这样，通过命
参考12.9节。
行有多个服务器，就必须要确保每一个服务器所使用的网络参数都是唯一的。更多相关信息请
TCP/IP连接的方法是，使用--protocol=tcp 选项。
户端，应该把主机名指定为127.0.0.1。该地址是TCP/IP环回接口的地址。另一种强制建立
做法是，在选项文件的[mysqla]组里添加下面几行内容：
12.2.5
对于使用mysql.server 脚本来启动服务器的SystemV风格的 Unix系统，
如果你只运行了一个服务器，那么比较常见做法是让服务器使用默认的网络设置。如果运
如果已经将服务器设置为在系统开机时自动启动，那么在系统关机时不需要特意做什么便
C:\> net stop MySQL
对于Unix和Windows，这个操作都有效。在Windows里，如果以服务方式来运行服务器，
要想手动停止My SQL服务器，可以使用mysqladmin：
对于想要使用TCP/IP协议（即使默认情况下使用的是其他连接协议）连接本地服务器的客
%mysqladmin-p-uroot shutdown
shared-memory
named-pipe
在Windows里，命名管道和共享内存连接类型在默认情况下都是禁用的，
[mysqld]
口
口
口
5停止服务器
--shared-memory-base-name选项，可以为其指定一个不同的名字。
显式指定使用共享内存。默认情况下，共享内存的名字为 MYSQL（区分大小写）。使用
成为本地客户端的默认连接协议。本地客户端也可以使用--protocol=memory 选项来
这个功能，需要在启动服务器时带上--shared-memory 选项。在被启用之后，它便会
对于Windows版本的MySQL服务器，共享内存连接在默认情况下是禁用的。要想启用
项，可以为其指定一个不同的名字。
这个功能，需要在启动服务器时带上--named-pipe 选项。这样，本地客户端便可以通
对于Windows版本的MySQL服务器，命名管道连接在默认情况下是禁用的。要想启月
以使用--socket选项。
行商提供的 MySQL发行版往往会使用不一样的位置。为显式指定套接字文件的路径名，
的套接字文件不能被关闭。默认的套接字文件通常是/tmp/mysql.sock，不过操作系统发
特殊的主机名localhost，或者是指定了--protocol=socket 选项)的连接。服务器使用
在Unix系统里，服务器会在Unix的域套接字文件上监听本地客户端（它们或者是连接到
默认端口号为3306。要想指定一个不同的端口号，
■对于其他的 IPv4或IPv6地址，服务器只会接收该地址的连接。例如，当服务器绑定到
192.168.0.3时，只允许对该地址进行连接。
第12章MySQL的基本管理
命名管道来进行连接，方法是指定--protocol=pipe 选项或者连接到特殊的主机名
为：：ffff:192.168.0.3或192.168.0.3。
”
（句点）。默认情况下，管道名称为MySQL（不区分大小写）。使用--socket选
，可以使用--port 选项。
，启用它们的常见
，关机进程会在
用
司
---
## Page 445
连接的。如果真是如此，你就必须重新编译它们，让它们使用新的开发库。
这样就会自动对使用客户端开发库的第三方程序产生影响，除非它们与原来的库是以静态方式
重新编译MySQL，那么可以重新配置发行包，使服务器和客户端都能默认使用不同的路径名。
处在于，它只适用于读选项文件的客户端，可能不适用于某些第三方程序。如果你通过源代码
为服务器设置了路径名，那么客户端程序仍然会到原来的位置查找套接字。这种方法的不足
/etc/my.cnf中：
/usr/local/mysql，那么你可以使用该目录里的套接字文件，方法是把下面几行内容添加到
户端
用全局选项文件指定一个不同的套接字文件。例如，如果MySQL的基本目录为
只有在你更改cron 作业时，或是使用位于其他某处的套接字文件时才会再次发生。你可以利
制使用TCP/IP连接，
或者把主机值指定为127.0.0.1，而非1ocalhost：
TCP/IP连接来代替。为做到这一点，在连接至本地服务器时可以利用--protocol=tcp选项，
套接字文件来建立连接，告知服务器停止运行，因为套接字文件不见了。这时，只能通过建
方式重新得到该文件。（当服务器重启时，会重建套接字文件。）这里的问题在于，你无法利用
在系统运行某个不定时删除/tmp目录里临时文件的cron作业时，可能会出现这种情况。
mysql.sock）实现的。如果这个套接字文件被删除，那么本地客户端将无法利用它来建立连接。
记了密码。
这种情况。例如，在输入新密码时，不小心键入了某个不可见的控制字符。或者你可能只是忘
它，才能再告诉它关机（如执行mysqladmin shutdown 命令）。怎么会出现这种情况呢？
器时。如何实现重启便成了一个难题，因为通常情况下，要停止My SQL服务器，得先连接
12.2.6
关闭Windows之前，使用mysqladmin shutdown 命令手动停止My SQL服务器。
自动告知My SQL服务器停止运行。如果 My SQL服务器不是以服务方式运行的，那么就要在
用它（必须作为root用户来执行此操作)：
器。例如，如果你将mysql.server 脚本安装为/etc/init.d/mysql，则可以按下面的方法调
如果的确是属于cron 作业将Unix套接字文件删除的情况，那么这个套接字丢失的问题
，如果不能连接服务器的原因仅仅是Unix套接字文件被删除了，
其次，在Unix里，与localhost 的连接默认都是通过一个Unix域套接字文件（如/tmp/
如果你是因为不记得或不知道root密码而不能进行连接的，那么你就得重新获得对服务
首先，MySQL的root密码被设置成了你不知道的某个值。当你更改密码时，可能会出现
在某些情况下，可能需要手动重启My SQL服务器，比如当你发现连接不上My SQL服务
瑞程序，都需要指定Unix套接字文件的路径名，以便它们能使用同一个套接字文件。如果只
在修改之后需要重启My SQL服务器，以便在新的位置创建套接字文件。对于服务器和客
其中，127.0.0.1
%mysqladmin-p
如果以Windows服务方式来运行MySQL服务器，那么在Windows关机时，服务管理器会
socket=/usr/local/mysql/mysql.sock
#/etc/init.d/mysql stop
socket=/usr/local/mysql/mysql.sock
[client]
[mysqld]
mysqladmin
当你无法连接服务器时重新获得对它的控制
，而不会使用套接字连接。
是一个IP地址（它指向的是本地主机的环回接口），因此它会显式地强
-u
-u root --protocol=tcp shutdown
12.2安排MySQL服务器的启动和关闭
，那么可以通过重启服务器的
425
之
---
## Page 446
过状态变量对 My SQL服务器的性能进行监视。本节将大略讲述一下如何使用它们。与各个存
服务器的自动恢复功能。更多相关细节请参考14.3.1节。
盘。为处理因这种类型的MySQL服务器关闭而可能产生的问题，比较好的方法是启用MySQL
服务器，那么这种突然的停止操作会使MySQL服务器无法及时将所有未保存的信息保存到磁
现在，你应该可以使用新密码以root身份进行连接了。
禁用的)。在重新载入权限表之后，便可以更改root 的密码，如12.1节所示。例如：
接进行验证。FLUSH语句还会重新启用SET DASSWORD 语句（它在服务器未使用权限表时是被
连接仍然会被保持，但是MySQL服务器会像往常一样使用权限表对后续其他客户端产生的连
12.3
就要立即执行 FLUSH PRIVILEGES 语句：
务
行验证。这
与 Unix系统里的ki11-9一样，这也是在不得已的情况下才能使用的方法。
服务管理器或者调用下面的命令将其正常停止：
要在终止 mysqld 之前先确定 mysqld_safe 进程的 PID，并将其终止。
如果使用kil1-9来终止MySQL服务器，mysql_safe会立即重启它。为避免出现这种情况，
多个线程。因此你只要终止其中的任何一个，便可以将它们全部终止。
导致表状态不一致。
使用kil1-9来强行终止它：
找出服务器的进程ID。然后向服务器发送一个TERM信号，试着告诉服务器进程正常关闭：
令来终止服务器。通过查看服务器的PID文件（该文件通常位于数据目录中），或者使用ps命令，
器的控制，才能再次设置密码。要想做到这一点，需要执行以下几个步骤。
426
如果需要在Unix里使用kill-9或者在Windows 里使用任务管理器来强制终止 My SQL
器处于完全开放状态，以至于其他人也可以用同样的方法进行连接。因此，一旦你连接上，
如果是在Windows 里以服务方式来运行服务器的，那么可以在不知道密码的情况下，使用
如果使用mysql_safe来启动 My SQL服务器，它会监视服务器是否是异常终止的。因此，
MySQL服务器拥有许多系统变量和状态变量。你可以通过系统变量对服务器进行配置，通
（2）带上-－skip-grant-tables 选项重启 My SQL服务器，以禁止使用权限表对连接进
在Linux里，ps 命令可能会显示多个mysqld“进程”，而实际上它们是属于同一个进程的
（1）停止服务器。在Unix里，如果你能以 root身份登录服务器主机，就可以使用kil1命
(3）在更改root 的密码之后，需要关闭 My SQL服务器，并按正常的启动过程重启它。
如果有多个root 账户，请记得更改所有root 账户的密码。
mysql> SET PASSWORD FOR'root'@'localhost'= PASSWORD('rootpass');
这条 FLUSH语句会让My SQL服务器重新读取权限表，并再次把它们用于访问控制。你的
mySql> FLUSH PRIVILEGES;
[bsAu%
在Windows里，可以使用任务管理器（按组合键Alt-Ctrl-Del）强制终止My SQL服务器。
C:\>netstopMysQL
使用ki11-9是不得已的选择，
#ki11-9PID
采用这种方式，
#ki1l -TERM PID
使用系统变量和状态变量
第12章MySQL的基本管理
样，你在进行连接时便可以不用密码，而且拥有所有权限。不过，这也会让你的服
，能正确刷新表和日志。如果服务器被挂起，无法响应正常的终止信号，可
，因为内存中可能还有未刷新的修改内容；这样做还可能会
---
## Page 447
时进行设置、哪些拥有全局值，以及哪些拥有会话值。下面将讨论如何获取和设置系统变量。
下面几个示例展示了这几种可能情况。
对全局变量的更改并不会影响到客户端相应会话变量的当前值。
使用全局值来初始化会话变量。这种情况只会在新客户端会话开始时才会发生。在某个会话里，
户端可以在其自己的会话里局部地改变这些变量，使其能够在不对其他客户端产生影响的同时
生影响。特定于会话的变量只会对服务器如何处理某个给定的客户端连接或会话产生影响。客
设置到某个选项文件中，从而让该值在MySQL服务器重启之后可以继续使用。
在MySQL服务器进程终止时会消失，但如果你确定了一个更适合的系统变量值，便可以将其
器的性能有何影响，而无需在每一次更改时停止并重启My SQL服务器。在运行时所做的更己
配置的环境下，它能够让你在避免停止它。例如，你可以测试一下缓冲区大小对My SQL服多
好地对MySQL服务器的运作进行控制；并且在某些迫不得已需要对MySQL服务器进行重亲
来显示系统变量，许多变量还可以使用SET来修改。这种在运行时设置变量的能力让你可以更
语法格式与F.2节所描述的各个程序选项的语法格式相同。在运行时，可以使用SHOWVARIABLES
12.3.1查看和设置系统变量值
检查通过修改系统变量所产生的配置变化是否达到预期的效果。
信息。使用 SHOW STATUS 语句可以显示这些变量。状态变量的作用主要表现在：监视服务器和
擎和当前时区进行控制的变量。
他的系统变量则会对服务器与客户端之间的交互产生影响。其中包括对 SQL模式、默认存储引
更大一点的缓冲区。这样，可以在内存里保留更多的信息，同时减少所需的磁盘访问次数。
它们，以实现对服务器的配置。有些系统变量适用于性能调整，如那些控制内存缓冲区大小的
量。如果这些变量的默认值不太适合，你可以使用更适合My SQL服务器运行环境的值来更改
考12.7节。对各个变量的描述请参考附录D。
储引擎特定相关的配置参数有关的信息请参考12.5节。与服务器优化调整有关的更多讨论请参
变
定
附录D列出了所有的系统变量，并且指明了哪些可以在启动时进行设置、哪些可以在运行
系统变量存在于两个层面上：全局层和特定于会话层。全局变量会对整个服务器的运作产
大部分系统变量都可以在My SQL服务器启动时在命令行或选项文件中进行设置，所用的
MySQL服务器还有一组状态变量，它们提供与MySQL服务器运行时的性能表现相关的