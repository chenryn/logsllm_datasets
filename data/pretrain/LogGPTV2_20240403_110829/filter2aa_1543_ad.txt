access your EC2 instance. When you launch a new EC2 instance, you get an option to either
create a new key pair or use an existing key pair. There is a third option available as well to
proceed without a key pair, but that is not recommended for securing access to your EC2
instance. The following figure 3 shows the EC2 key pairs option while launching an EC2
instance. You can create as many as 5000 key pairs for your EC2 instances in your AWS
account. EC2 key pairs are used only for accessing your EC2 instances and cannot be used
to login to AWS Management Console or to use other AWS services. Moreover, users can
use different key pairs to access different EC2 instances:
Figure 3 - AWS key pairs
Overview of Security in AWS
[ 13 ]
You can either have AWS generate the EC2 key pairs for you, or you can generate your own
Amazon EC2 key pairs using industry standard tools like OpenSSL. When you choose the
first option, AWS provides you with both the public and private key of the RSA key pair
when you launch the instance. You need to securely store the private key; if it is lost you
can't restore it from AWS, and you will then have to generate a new key pair.
When you launch a new Linux EC2 instance using a standard AWS AMI, the public key of
the Amazon EC2 key pair that is stored within AWS is appended to the initial operating
system user’s ~/.ssh/authorized_keys file. You can use an SSH client to connect to this
EC2 Linux instance by configuring the SSH client to use the EC2's username such as ec2-
user and by using the private key for authorizing a user.
When you launch a new Windows EC2 instance using the ec2config service from a
standard AWS AMI, the ec2config service sets a new random administrator password for
this Windows instance and encrypts it using the corresponding Amazon EC2 key pair’s
public key. You will use the private key to decrypt the default administrator's password.
This password will be used for user authentication on the Windows instance.
Although AWS provides plenty of flexible and practical tools for managing Amazon EC2
keys and authentication for accessing EC2 instances, if you require higher security due to
your business requirements or regulatory compliance, you can always implement
other authentication mechanisms such as Lightweight Directory Access Protocol (LDAP)
and disable the Amazon EC2 key pair authentication.
Shared responsibility model for container
services
The AWS shared responsibility model is applicable to container services as well, such as
Amazon EMR and Amazon RDS. For these services, AWS manages the operating system,
underlying infrastructure, application platform, and foundation services. For example,
Amazon RDS for Microsoft SQL server is a managed database service where AWS manages
all the layers of the container including the Microsoft SQL server database platform. Even
though AWS platform provides data backup and recovery tools for services such as
Amazon RDS, it is your responsibility to plan, configure and use tools to prepare for your
high availability (HA), fault tolerance (FT), business continuity and disaster recovery
(BCDR) strategy. 
Overview of Security in AWS
[ 14 ]
You are responsible for securing your data, for providing access to your data and for
configuring firewall rules to access these container services. Examples of firewall rules
include RDS security groups for Amazon RDS and EC2 security groups for Amazon EMR. 
The following figure shows this model for container services:
Figure 4 - Shared responsibility model for container services
Shared responsibility model for abstracted
services
AWS offers abstracted services such as Amazon DynamoDB and Amazon Simple Queue
Service, Amazon S3, and so on, where you can access endpoints of these services for storing,
modifying and retrieving data. AWS is responsible for managing these services, that is,
operating the infrastructure layer, installing and updating the operating system and
managing platforms as well. These services are tightly integrated with IAM so you can
decide who can access your data stored in these services.
Overview of Security in AWS
[ 15 ]
You are also responsible for classifying your data and using service-specific tools for
configuring permissions at the platform level for individual resources. By using IAM, you
can also configure permissions based on role, user identity or user groups. Amazon S3
provides you with encryption of data at rest at the platform level, and, for data in transit, it
provides HTTPS encapsulation through signing API requests.
The following figure shows this model for abstracted services:
Figure 5 - Shared responsibility model for abstracted services
AWS Security responsibilities
AWS is responsible for securing the global infrastructure that includes regions, availability
zones and edge locations running on the AWS cloud. These availability zones host multiple
data centers that house hardware, software, networking, and other resources that run AWS
services. Securing this infrastructure is AWS’s number one priority and AWS is regularly
audited by reputed agencies all over the world to meet necessary security and compliance
standard requirements. These audit reports are available to customers from AWS as
customers can't visit AWS data centers in person. 
Overview of Security in AWS
[ 16 ]
The following figure depicts the broader areas of security that fall under AWS'
responsibility:
Figure 6 - AWS shared security model - AWS responsibilities
Customer data and workloads are stored in AWS data centers, these data centers are spread
across geographical regions all over world. These data centers are owned, operated and
controlled by AWS. This control includes physical access and entry to these data centers
and all networking components and hardware, and all other additional data centers that are
part of AWS global infrastructure.
Let us take a closer look at other responsibilities that AWS owns for securing its global
infrastructure:
Physical and environmental security 
So, the very first thought that would strike anybody considering moving their workload to
cloud is where is my data actually stored? Where are those physical servers and hard drives
located that I provisioned using AWS cloud? And how are those hardware resources
secured and who secures them? After all cloud simply virtualizes all resources available in
a data center but those resources are present somewhere physically. So, the good news is
AWS is completely responsible for physical and environmental security of all hardware
resources located in its data centers across the globe.
AWS has years of experience in building, managing, and securing large data centers across
the globe through its parent company Amazon. AWS ensures that all of its data centers are
secured using the best technology and processes such as housing them in nondescript
facilities, following least privilege policy, video surveillance, two-factor authentication for
entering data centers and floors.
Overview of Security in AWS
[ 17 ]
Personnel are not allowed on data center floors unless they have a requirement to access a
physical data storage device in person. Moreover, AWS firmly implements segregation of
responsibilities principle, so any personnel having access to the physical device won't have
the root user access for that device so he can't access data on that physical device.
This is a very critical part of a shared security responsibility model where AWS does all the
heavy lifting instead of you worrying about the physical and environmental security of
your data centers. You do not have to worry about monitoring, theft, intrusion, fire, natural
calamities, power failure, and so on for your data centers. These things are taken care of by
AWS on your behalf and they constantly upgrade their security procedures to keep up with
increasing threats.
Storage device decommissioning
AWS will initiate a decommissioning process when a storage device has reached the end of
its useful life. This process ensures that customer data is not exposed to unauthorized
individuals. This hardware device will be physically destroyed or degaussed if it fails
decommissioning using the standard process followed by AWS.
Business continuity management
AWS keeps your data and other resources in the data centers in various geographical
locations across the globe; these locations are known as regions. Each region has two or
more availability zones for high availability and fault tolerance. These availability zones are
made up of one or more data centers. All of these data centers are in use and none are kept
offline; that is, there aren't any cold data centers. These data centers house all the physical
hardware resources such as servers, storage, and networking devices, and so on, that are
required to keep all the AWS services up and running as per the service level agreement
provided by AWS. All AWS core applications such as compute, storage, databases,
networking are deployed in an N+1 configuration, so that, in the event of a data center
failure due to natural calamity, human error or any other unforeseen circumstance, there is
sufficient capacity to load-balance traffic to the remaining sites. 
Each availability zone is designed as an independent failure zone so that the impact of
failure is minimum and failure can be contained by other availability zone(s) in that region.
They are physically separated within a geographical location and are situated in the lower
risk flood plains. 
Overview of Security in AWS
[ 18 ]
Depending on the nature of your business, regulatory compliance, performance
requirements, disaster recovery, fault tolerance, and so on, you might decide to design your
applications to be distributed across multiple regions so that they are available even if a
region is unavailable.
The following figure demonstrates typical regions with their availability zones:
Figure 7 - AWS regions and availability zones
Communication
AWS employs multiple methods of external and internal communication to keep their
customers and global AWS communities updated about all the necessary security events
that might impact any AWS service. There are several processes in place to notify the
customer support team about operational issues impacting customer experience globally,
regionally or for a particular AWS service. AWS provides a Service Health Dashboard at
https:/​/​status.​aws.​amazon.​com that provides updates about all AWS services.
Overview of Security in AWS
[ 19 ]
It also has an option to notify AWS about any issue customers are facing with any AWS
service. The AWS Security center is available to provide you with security and compliance
details about AWS. There are 4 support plans available at AWS:
Basic
Developer
Business
Enterprise
These support plans give you various levels of interaction capabilities with AWS support
teams such as AWS technical support, health status and notifications, and so on. However,
24/7 access to customer service and communities is available to all AWS customers
irrespective of the support plan subscription. 
The following figure shows the AWS Service Health Dashboard for all North America, you
can also get information for service health in other geographies such as Asia Pacific, Europe,
and so on:
Figure 8 - AWS Service Health Dashboard
Overview of Security in AWS
[ 20 ]
Network security
The AWS network has been architected to allow you to configure the appropriate levels of
security for your business, your workload, and your regulatory compliance requirements. It
enables you to build geographically dispersed, highly available, and fault-tolerant web
architectures with a host of cloud resources that are managed and monitored by AWS.
Secure network architecture
AWS has network devices such as a firewall to monitor and control communications at the
external and key internal boundaries of the network. These network devices use
configurations, access control lists (ACL) and rule sets to enforce the flow of information to
specific information system services. Traffic flow policies or ACLs are established on each
managed interface that enforces and manage traffic flow. These policies are approved by
Amazon information security. An ACL management tool is used to automatically push
these policies, to help ensure these managed interfaces enforce the most up-to-date ACLs.
Secure access points
AWS monitors network traffic and inbound and outbound communications through
strategically placed access points in the cloud; these access points are also known as API
endpoints. They allow secure HTTP access (HTTPS) through API signing process in AWS,
allowing you to establish a secure communication session with your compute instances or
storage resources within AWS.
Transmission protection
You can connect to an AWS access point through HTTP or HTTPS using Secure Sockets
Layer (SSL). AWS provides customers with VPC, their own virtual network in cloud
dedicated to the customer's AWS account. VPC is helpful for customers who require
additional layers of network security. VPC allows communication with customer data
centers through an encrypted tunnel using an IPsec Virtual Private Network (VPN) device.
Overview of Security in AWS
[ 21 ]
Network monitoring and protection
AWS ensures a high level of service performance and availability by employing multiple
automated monitoring systems. These tools monitor unauthorized intrusion attempts,
server and network usage, application usage, and port scanning activities. AWS monitoring
tools watch over ingress and egress communication points to detect conditions and unusual
or unauthorized activities. Alarms go off automatically when thresholds are breached on
key operational metrics to notify operations and management personnel. To handle any
operational issues, AWS has trained call leaders to facilitate communication and progress
during such events collaboratively. AWS convenes post operational issues that are
significant in nature, irrespective of external impact, and Cause of Error (COE) documents
are created so that preventive actions are taken in future, based on the root cause of the
issue. 
AWS access
The AWS production network is logically segregated from the Amazon corporate network
and requires a separate set of credentials. It uses a complex set of network segregation and
security devices for isolating these two networks. All AWS developers and administrators
who need to access AWS cloud components for maintenance are required to raise a ticket
for accessing AWS production network. In order to access the production network,
Kerberos, user IDs, and passwords are required by Amazon corporate network. The AWS
production network uses a different protocol; this network mandates the usage of SSH
public-key authentication through a computer in a public domain often known as bastion
host or jump box for AWS developers and administrators. 
Credentials policy 
AWS Security has established a credentials policy with the required configurations and
expiration intervals. Passwords are regularly rotated once every 90 days and they are
required to be complex.
Overview of Security in AWS
[ 22 ]
Customer security responsibilities
AWS shares security responsibilities with customers for all its offerings. Essentially, the
customer is responsible for security of everything that they decide to put in cloud such as
data, applications, resources, and so on. So network protection and instance protection for
IaaS services and database protection for container services are areas that fall under
customer security responsibilities. Let us look at customer security responsibilities for these
three categories:
For AWS infrastructure services, the customer is responsible for the following:
Customer data
Customer application
Operating system
Network and firewall configuration
Customer identity and access management
Instance management
Data protection (transit, rest, and backup)
Ensuring high availability and auto scaling resources
For AWS container services, the customer is responsible for the following:
Customer data
Network VPC and firewall configuration
Customer identity and access management (DB users and table permissions)
Ensuring high availability
Data protection (transit, rest, and backup)
Auto scaling resources
For AWS abstract services, the customer is responsible for the following:
Customer data
Securing data at rest using your own encryption
Customer identity and access management
Overview of Security in AWS
[ 23 ]
So essentially when we move from AWS infrastructure services towards AWS abstract
services, customer security responsibility is limited to configuration, and operational
security is handled by AWS. Moreover, AWS infrastructure services gives you many more
options to integrate with on-premises security tools than AWS abstract services.
 All AWS products that are offered as IaaS such as Amazon EC2, Amazon S3, and Amazon
VPC are completely under customer control. These services require the customer to
configure security parameters for accessing these resources and performing management
tasks. For example, for EC2 instances, the customer is responsible for management of the
guest operating system including updates and security patches, installation and
maintenance of any application software or utilities on the instances, and security group
(firewall at the instance level, provided by AWS) configuration for each instance. These are
essentially the same security tasks that the customer performs no matter where their servers
are located. The following figure depicts customer responsibilities for the AWS shared
security responsibilities model:
Figure 9 AWS shared security model - customer responsibilities 
AWS provides a plethora of security services and tools to secure practically any workloads,
but the customer has to actually implement the necessary defenses using those security
services and tools. 
Overview of Security in AWS
[ 24 ]
At the top of the stack lies customer data. AWS recommends that you utilize appropriate
safeguards such as encryption to protect data in transit and at rest. Safeguards also include
fine-grained access controls to objects, creating and controlling the encryption keys used to
encrypt your data, selecting appropriate encryption or tokenization methods, integrity
validation, and appropriate retention of data. Customer chooses where to place their data in
cloud, meaning they choose geographical location to store their data in cloud. In AWS, this
geographical location is known as region, so customer has to choose an AWS region to store
their data. Customers are also responsible for securing access to this data. Data is neither
replicated to another AWS Region nor moved to other AWS Region unless customer
decides to do it. Essentially, customers always own their data and they have full control
over encrypting it, storing it at a desired geographical location, moving it to another
geographical location or deleting it.
For AWS container services such as Amazon RDS, the customer doesn't need to worry
about managing the infrastructure, patch update or installation of any application software.
The customer is responsible for securing access to these services using Amazon IAM. The
customer is also responsible for enabling Multi-Factor Authentication (MFA) for securing
their AWS account access. 
As a customer, you get to decide on security controls that you want to put in place based on
the sensitivity of your data and applications. You have complete ownership of your data.
You get to choose from a host of tools and services available across networking, encryption,
identity and access management, and compliance.
The following table shows a high-level classification of security responsibilities for AWS
and the customer:
AWS
Customer
Facility operations
Choice of guest operating system
Physical security
Configuring application options
Physical infrastructure
AWS account management
Network infrastructure
Configuring security groups (firewall)
Virtualization infrastructure
ACL
Hardware lifecycle management IAM
Table 2 - AWS Security responsibilities classiﬁcation
Overview of Security in AWS
[ 25 ]
AWS account security features 
Now that we are clear with the shared security responsibilities model, let us deep dive into
the resources provided by AWS to secure your AWS account and resources inside your
AWS account from unauthorized use. AWS gives you a host of tools for securing your
account such as MFA, several options for credentials that can be used to access AWS
services and accounts for multiple use cases, secure endpoints to communicate with AWS
services, centralized logging service for collecting, storing and analyzing logs generated for
all user activities in your AWS account by your resources in your AWS account and logs
from all your applications running in your AWS account. Along with these features, you
also have AWS Trusted Advisor that performs security checks for all AWS services in your
AWS account. All of these tools are generic in nature and they are not tied to any specific
service; they can be used with multiple services.
AWS account 
This is the account that you create when you first sign up for AWS. It is also known as
a root account in AWS terminology. This root account has a username as your email
address and password that you use with this username. These credentials are used to log
into your AWS account through the AWS Management Console, a web application to
manage your AWS resources. This root account has administrator access for all AWS
services, hence AWS does not recommend using root account credentials for day-to-day
interactions with AWS; instead, they recommend creating another user with the required
privileges to perform those activities. In some cases, your organization might decide to use
multiple AWS accounts, one for each department or entity for example, and then create
IAM users within each of the AWS accounts for the appropriate people and resources. 
Let us look at the following scenarios for choosing strategies for AWS account creation:
Business requirement
Proposed
design