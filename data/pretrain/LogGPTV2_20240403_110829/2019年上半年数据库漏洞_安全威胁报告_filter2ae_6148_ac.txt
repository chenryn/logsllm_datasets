数据库勒索攻击现状
通过分析近年来的攻击事件可以发现，勒索攻击已经从个人用户转向企业级用户，金融、医疗、教育等行业成为重点关注对象。有迹象表明，大部分贩卖勒索软件的黑客团体在探索更加多样的攻击手段。如何应对勒索攻击成功数据库安全的新挑战。
图2 各类勒索事件统计-按数据文件类型
据统计，2019年上半年出现的勒索攻击中，针对数据库文件的共76起，占总数的28.4%；针对SQL文件的攻击共61起，占总数的22.8%，二者共占总数的51.2%，由此可见针对数据库相关文件的攻击已成为黑客进行数据库勒索的重要手段。
除了直接对各类数据文件进行加密勒索外，我们也发现了大量直接针对数据库的比特币勒索攻击。具体的攻击方式在不同场景下有较大区别。
云上数据库的比特币勒索
从2016年12月27日至今，云环境上的Mongodb、ElasticSearch、Cassandra、Redis、Hadoop、CounchDB、MySQL等数据库开始被陆续攻击，甚至有的数据库服务器被多个黑客团队重复勒索。对于云环境下的数据库，黑客采用大范围广撒网的方式，直接对43亿个IP地址进行全面扫描，从中筛选目标进行攻击。这种方法虽然较为笨拙，效率不高，单笔勒索费用不高，但是用户基数大，目标机器数量多，给黑客带来了巨大的收益。
以Mongodb数据库为例，云上的Mongodb曾在2016年底至2017年初遭遇了大范围的攻击，全球大约2.6万台服务器被勒索病毒入侵。至2019年上半年，针对Mongodb的勒索攻击仍时有发生。从总体上看，攻击流程大致如下图所示。
图3 MangoDB数据库勒索事件的攻击路径还原
黑客的攻击可以分为准备阶段和攻击阶段。
在准备阶段中，黑客通过对43亿个IP地址进行批量扫描，结合指纹识别探测主机是否存在Mongodb，如果存在则尝试登录，记录下能够成功登录的服务器的IP地址，准备在第二阶段开始攻击。
在实际攻击的过程中，黑客使用自动化脚本向第一阶段中筛选后的目标发起攻击，通过pymongo登录数据库。接着，利用Mongodbdurp将目标数据库下载到自己的服务器上，最后将原有数据删除，并向数据库中插入勒索信息索要赎金。如下图所示。
图4 勒索攻击的现场还原截图-入侵登陆
这种攻击方式之所以能成功，还是与数据库的默认配置有关，正是因为Mongodb默认情况下不需要进行身份验证，才导致大规模勒索事件的发生。
内网数据库的比特币勒索
在云端服务器遭受勒索病毒攻击的同时，内网环境下的数据库服务器也未能幸免。虽然相比云端而言受被勒索的机器数量较少，但是勒索费用更加高昂，造成的影响更为恶劣。
针对内网数据库，攻击者的实现思路有所不同，由于内网环境相对封闭，批量扫描的方式不再适用。对此，攻击者将目光转向了数据库工具上。
图6 内网数据库勒索攻击流程示意图
以Oracle数据库为例，黑客向Oracle PL/SQL
DEV中捆绑了恶意代码(位于Afterconnet.sql文件)，并将其以破解版或绿色版的形式发布。恶意代码的攻击过程如上图所示。当用户连接数据库时，如果具有dba权限，工具会自动执行Afterconnet.sql中的恶意代码在用户的数据库中创建多个存储器和触发器，同时会判断数据库的创建时间。如果创建时间大于等于1200天，那么数据库重启后会触发病毒触发器，加密并删除sys.tab$，导致用户无法访问数据库中所有的数据库对象集合（schema），
出现“你的数据库已经被SQL RUSH
Team锁死，请发送5个比特币到XXX….”等信息，还会设置定时任务，如果用户没有在规定期限内交付赎金，将会删除数据库中的所有表。
这种手术刀式的攻击方法目的性极强，通过判断数据库的创建时间来筛选有价值的目标。这不仅能明确攻击目标，还可以在一定程度上还能隐藏自己，具有极大的破坏力。
数据库勒索攻击应对措施
面对越来越多的勒索攻击，寻找行之有效的应对措施显得迫在眉睫。通过对勒索攻击分析，我们可以发现一次成功的攻击取决于两个方面，一是数据库系统自身的安全因素，二是攻击者的技术手段，两者相结合才能实施一次成功的攻击。对此我们可以从预先防护、定期检查、数据备份三方面入手，建立简单有效的安全保障措施。
即：构建预先防护+定期安全探查+数据定期备份的三重安全保障。
预先防护
预先防护的目的在于防范攻击者的恶意行为，主要通过对SQL语句进行语法分析来实现，常见产品是数据库防火墙。这就要求数据库防火墙具备能够读懂SQL语句，能够对数据库进行加密解密的能力。
加解密数据库是为了获得明文的SQL语句。在使用过程中数据库与第三方工具之间往往以密文的形式传输数据包，如果不对其进行解密，就无法获得原始的SQL语句，那么进行语法分析更无从谈起。数据库的加密过程可以通过数据库提供的函数完成，但解密方法数据库并不一定提供需要产品掌握破解密文的能力。
语法分析的目的是判断存储过程中是否存在恶意行为。在unwrap的支撑下数据库防火墙能把所有去向数据库的加密存储过程明文化，通过语法分析器对sql语句进行分析，判断是否存在恶意行为。数据库防火墙的sql语法分析器不能单纯的就单句sql进行分析，而是要根据上下文环境对sql行为进行分析。当整个sql语句包中存在命中安全规则的多个必要点时，则可以判断该语句包存在恶意行为，会主动阻断该语句包，并向相关人员进行危险告警，形成有效的针对勒索攻击的主动防护。
定期安全探查
定期安全检查的意义在于查漏补缺，避免出现漏网之鱼。虽然主动防御能够阻挡大部分攻击，但是由于攻击手段的变化、产品性能等原因难免会有所纰漏，而定期进行安全检查就是为了弥补主动防御在细节上的不足。通过安全检查，将潜伏的勒索病毒，勒索攻击产生的触发器、存储过程统统清除，避免安全隐患。
数据定期备份
数据备份是数据安全的最后一道保障，因此务必要对关键数据定期备份。只要有备份的数据的存在，即使出现最坏的情况防御措施完全失效数据被完全加密，也可以通过备份数据进行找回，尽量避免丢失数据。
**数据库挖矿木马攻击分析**
虽然目前数据库勒索攻击仍是影响数据库安全的首要威胁，但是随着安全形势的变化，挖矿木马隐隐呈现出赶超趋势。作为一种新的攻击手段，挖矿木马不像勒索病毒一般直接攻击数据，而是潜伏在生产服务器中，长期窃取系统资源。通过传播挖矿木马，黑客组建了一个大规模的僵尸网络，形成了一个庞大的计算集群，利用窃取的硬件资源进行挖矿，从而获获取非法收益。
目前黑客所挖的数字货币以门罗币为主。一方面这类数字货币无法追踪交易记录，有关部门无法根据货币流向追踪攻击者的身份，从而为攻击者隐藏身份提供了便利；另一方面由于采用了CryptoNight算法，使得这类数字货币可以用CPU进行挖矿，这意味着绝大多数服务器都可以用来挖矿，因而更受黑客青睐。
据统计，目前全球受挖矿木马影响的机器已超过3千万台，黑客仅通过门罗币获取的收益就在2亿美元以上，由此可见挖矿木马对用户造成了巨大的损失，如何对其进行有效防御成为了信息系统管理员必须面对的问题。对此我们必须了解挖矿木马的攻击手段，剖析其攻击原理，才能找到行之有效的应对方法。
挖矿木马常见攻击手段
针对不同类型的用户，黑客采用的攻击方式有所不同。对于个人用户，主要是通过互联网传播挖矿木马，常见的有网页挂马、游戏外挂等方式。比如著名的挖矿木马“tlMiner”，它就是潜藏在游戏外挂中进行传播，利用PC机进行挖矿。在进行挖矿的同时还会进行自我保护，当CPU使用率超过50%或者运行大型软件时会暂停挖矿，从而避免被用户察觉。目前该木马背后的犯罪团伙已被警方逮捕，截至案发时累计控制电脑主机389万台、挖矿主机100多万台，非法获利1500余万元。