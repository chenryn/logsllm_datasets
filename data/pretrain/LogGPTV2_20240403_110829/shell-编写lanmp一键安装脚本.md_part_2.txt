done
}
#安装php包
join_apa_php() {
sed -i '/AddType .\*.gz .tgz\$/a\\AddType application\\ /x-httpd-php
.php' /usr/local/apache2/conf/httpd.conf
#找到含有AddType .\*.gz .tgz字符的行，并在此行下面添加AddType
application\\ /x-httpd-php .php行
check_ok
sed --i 's/DirectoryIndex index.html/ DirectoryIndex index.php
index.html index.htm/' /usr/local/apache2/conf/httpd.conf
check_ok
cat \> /usr/local/apache2/htdocs/index.php \
EOF
#EOF可以把以EOF开始到EOF结束中间的字符重定向到某文件中去
if /usr/local/php/bin/php -I \|grep -iq 'date.timezone =\> no value'
then
sed -i '/;date.timezone =\$/a\\date.timezone = "Asia\\ /Chongqing"'
/usr/local/php/etc/php.ini
fi
/usr/local/apache2/bin/apachectl restart
check_ok
}
#这个函数定义php和Apache联动的配置动作
check_service() {
if \[ "\$1" == "phpfpm" \]
then
s="php-fpm"
else
s=\$1
fi
n=\`ps aux \|grep "\$s"\|wc -l\`
if \[ \$n -gt 1 \]
then
echo "\$1 service is already started."
else
if \[ -f /etc/init.d/\$1 \]
then
/etc/init.d/\$1 start
check_ok
else
install\_\$1
fi
fi
}
#这个函数主要用于判断比如httpd等服务是否已经安装和启动，如果已经安装就不用再安装了
lamp() {
check_service mysqld
check_service httpd
install_php
join_apa_php
echo "LAMP done, Please use 'http://your ip/index.php' to access."
}
#这个函数其实作用就是把上面的所有函数揉合到一起去
install_nginx() {
cd /usr/local/src
\[ -f nginx-1.8.0.tar.gz \] wget
check_ok
tar zxf nginx-1.8.0.tar.gz
cd nginx-1.8.0
myum pcre-devel
./configure \--prefix=/usr/local/nginx
check_ok
make && make install
check_ok
if \[ -f /etc/init.d/nginx \]
then
/bin/mv /etc/init.d/nginx /etc/init.d/nginx\_\`date +%s\`
fi
curl  -o /etc/init.d/nginx
check_ok
chmod 755 /etc/init.d/nginx
chkconfig \--add nginx
chkconfig nginx on
curl http://www.apelearn.com/stuby_v2/.nginx_conf -o
/usr/local/nginx/conf/nginx.conf
check_ok
service nginx start
check_ok
echo -e "\" \> /usr/local/nginx/html/index.php
#\\n代表回车的意思，这样就可以把几行内容也成一行了
check_ok
}
#这个函数是用来安装nginx的，其中定义了nginx编译安装时的全过程
install_phpfpm() {
echo -e "Install php. \\nPlease chose the version of php."
select php_v in 5.3 5.6
do
case \$php_v in
5.3)
cd /usr/local/src/
\[ -f php-5.3.10.tar.bz2 \] \|\| wget
check_ok
tar jxf php-5.3.10.tar.bz2 && cd php-5.3.10
for p in openssl-devel bzip2-devel \\
libxml2-devel curl-devel libpng-devel \\
libjpeg-devel freetype-devel libmcrypt-devel \\
libtool-ltdl-devel perl-devel
do
myum \$p
done
if ! grep -q '\^php-fpm:' /etc/passwd
then
useradd -M -s /sbin/nologin php-fpm
check_ok
fi
./configure \\
\--prefix=/usr/local/php-fpm \\
\--with-config-file-path=/usr/local/php-fpm/etc \\
\--enabled-fpm \\
\--with-fpm-user=php-fpm \\
\--with-fpm-group=php-fpm \\
\--with-mysql=/usr/local/mysql \\
\--with-mysql-sock=/tmp/mysql.sock \\
\--with-libxml-dir \\
\--with-gd \\
\--with-jpeg-dir \\
\--with-png-dir \\
\--with-freetype-dir \\
\--with-iconv-dir \\
\--with-zlib-dir \\
\--with-mcrypt \\
\--enabled-soap \\
\--enabled-gd-native-ttf \\
\--enabled-ftp \\
\--enabled-mbstring \\
\--enabled-exif \\
\--enabled-zend-multibyte \\
\--disable-ipv6 \\
\--with-pear \\
\--with-curl \\
\--with-openssl \\
check_ok
make && make install
check_ok
\[ -f /usr/local/php-fpm/etc/php.ini \] \|\| /bin/cp php.ini-production
/usr/local/php-fpm/etc/php.ini
if /usr/local/php-fpm/bin/php -i \|grep -iq 'date.timezone =\> no value'
then
sed -i '/;date.timezone =\$/a\\date.timezone = "Asia\\ /Chongqing"'
/usr/local/php-fpm/etc/php.ini
check_ok
fi
\[ -f /usr/local/php-fpm/etc/php-fpm.conf \] \|\| curl
 -o
/usr/local/hph-fpm/etc/php-fpm.conf
check_ok
chmod 755 /etc/init.d/phpfpm
chkconfig phpfpm on
service phprpm start
check_ok
break
;;
5.6)
cd /usr/local/src/
\[ -f php-5.6.6.tar.gz \] \|\| wget
http://syslab.comsenz.com/downloads/linux/php-5.6.6.tar.gz
check_ok
tar jxf php-5.6.6.tar.gz && cd php-5.6.6
for p in openssl-devel bzip2-devel \\
libxml2-devel curl-devel libpng-devel \\
libjpeg-devel freetype-devel libmcrypt-devel \\
libtool-ltdl-devel perl-devel
do
myum \$p
done
if ! grep -q '\^php-fpm:' /etc/passwd
then
useradd -M -s /sbin/nologin php-fpm
check_ok
fi
./configure \\
\--prefix=/usr/local/php-fpm \\
\--with-config-file-path=/usr/local/php-fpm/etc \\
\--enabled-fpm \\
\--with-fpm-user=php-fpm \\
\--with-fpm-group=php-fpm \\
\--with-mysql=/usr/local/mysql \\
\--with-mysql-sock=/tmp/mysql.sock \\
\--with-libxml-dir \\
\--with-gd \\
\--with-jpeg-dir \\
\--with-png-dir \\
\--with-freetype-dir \\
\--with-iconv-dir \\
\--with-zlib-dir \\
\--with-mcrypt \\
\--enabled-soap \\
\--enabled-gd-native-ttf \\
\--enabled-ftp \\
\--enabled-mbstring \\
\--enabled-exif \\
\--enabled-zend-multibyte \\
\--disable-ipv6 \\
\--with-pear \\
\--with-curl \\
\--with-openssl \\
check_ok
make && make install
check_ok
\[ -f /usr/local/php-fpm/etc/php.ini \] \|\| /bin/cp php.ini-production
/usr/local/php-fpm/etc/php.ini
if /usr/local/php-fpm/bin/php -i \|grep -iq 'date.timezone =\> no value'
then
sed -i '/;date.timezone =\$/a\\date.timezone = "Asia\\ /Chongqing"'
/usr/local/php-fpm/etc/php.ini
check_ok
fi
\[ -f /usr/local/php-fpm/etc/php-fpm.conf \] \|\| curl
 -o
/usr/local/hph-fpm/etc/php-fpm.conf
check_ok
chmod 755 /etc/init.d/phpfpm
chkconfig phpfpm on
service phprpm start
check_ok
break
;;
\*)
echo "only 1(5.3) or 2(5.6)"
;;
esac
done
}
#此函数定义安装php，其实同上面的那个安装PHP函数差不多，只是编译安装方法不一样
lnmp() {
check_service mysql
check_service nginx
check_service phpfpm
echo "The LNMP done, Please use 'http://your ip/index.php' to access."
#此函数定义了在选择安装lnmp时要根据mysql
、nginx、phpfpm这三个函数安装相对应的程序
read -p "Please chose which type env you install, (lamp\|lnmp)?" t
case \$t in
lamp)
lamp
;;
lnmp)
lnmp
;;
\*)
echo "Only 'lamp' or 'lnmp' your can input."
;;
esac
这一段脚本主要是询问用户是安装lamp还是lnmp，比如选择lamp，就会执行lamp函数里面相对应程序的函数，安装指定包
**注：所有函数或者脚本里的下载地址和程序包名由于是预定义的，所以肯定不准确，如果重新下载，下载源地址和下载的程序名称就和脚本里的有冲突，所以在使用时要根据当时环境找下载源并对安装包解压后的目录名做更改**