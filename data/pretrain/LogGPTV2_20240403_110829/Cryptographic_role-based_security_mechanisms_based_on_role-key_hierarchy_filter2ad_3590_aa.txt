title:Cryptographic role-based security mechanisms based on role-key hierarchy
author:Yan Zhu and
Gail-Joon Ahn and
Hongxin Hu and
Huaixi Wang
Cryptographic Role-based Security Mechanisms Based on
Role-Key Hierarchy ∗
Yan Zhu† ‡ Gail-Joon Ahn§ Hongxin Hu§ Huaixi Wang♭
†Institute of Computer Science and Technology, Peking University, Beijing 100871, China
‡Key Laboratory of Network and Software Security Assurance (Peking University), Ministry of Education, China
§Laboratory of Security Engineering for Future Computing (SEFCOM),
Arizona State University, Tempe, AZ 85287, USA
♭School of Mathematical Sciences, Peking University, Beijing 100871, China
{yan.zhu,wanghuaixi}@pku.edu.cn; {gahn,hxhu}@asu.edu
ABSTRACT
Even though role-based access control (RBAC) can tremen-
dously help us minimize the complexity in administering
users, it is still needed to realize the notion of roles at the
resource level. In this paper, we propose a practical cryp-
tographic RBAC model, called role-key hierarchy model, to
support various security features including signature, iden-
tiﬁcation and encryption based on role-key hierarchy. With
the help of rich algebraic structure of elliptic curve, we intro-
duce a role-based cryptosystem construction to verify the ra-
tionality and validity of our proposed model. Also, a proof-
of-concept prototype implementation and performance eval-
uation are discussed to demonstrate the feasibility and eﬃ-
ciency of our mechanisms.
Keywords
Access Control, Role-based Cryptosystem, Role-Key Hier-
archy, Pairing-based Cryptosystem
1. BACKGROUND AND MOTIVATION
Role-based access control (RBAC), as a proven alternative
to traditional access control including discretionary access
control (DAC) and mandatory access control (MAC), has
been widely adopted for various information systems over
the past few years [14]. Even though RBAC can tremen-
dously help us minimize the complexity in administering
users,
it is still needed to realize the notion of roles at
the resource level.
In other words, RBAC systems need
to control a user’s access to resources as well as resource-
level management based on roles. Consequently, in order
∗Supported by 863 Project of China (No.2006AA01Z434)
and NSF of China (No. 10990011). An extended abstract of
this paper appears in ACM ASIACCS 2010, pages 314-319,
ACM, 2010. Online as IACR ePrint Report 2010/188
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
Copyright 200X ACM X-XXXXX-XX-X/XX/XX ...$10.00.
1
to provide eﬀective resource management, it is inevitable
to adopt various cryptographic capabilities for managing re-
sources in RBAC systems. However, the existing crypto-
graphic schemes based on common asymmetric cryptosys-
tem have several limitations to address above-mentioned fea-
tures since those schemes cannot accommodate access con-
trol features of RBAC and have a lack of scalability and
interoperability due to inconsistent parameters among cryp-
tographic mechanisms.
In distributed environments, we can leverage RBAC mod-
els to enforce ﬁne-grained policies for sharing resources [10].
However, the current cryptosystems do not support such
shared modes because the encryption/decryption keys can-
not be recognized between RBAC systems. As a conse-
quence, the resources should be re-encrypted when they are
transferred into another domain. Obviously, it is necessary
to design an eﬃcient cryptographic mechanism compatible
with corresponding access control systems.
In fact, the research for cryptographic hierarchical struc-
ture has a long history since hierarchical structure is a nature
way to organize and manage a large number of users. Several
approaches on cryptographic partial order relation support-
ing hierarchical structure have been proposed. Akl and Tay-
lor introduced a simple scheme to solve multilevel security
problem [1, 2]. Since then, several eﬃcient methods have
been studied. The concept of Logical Key Hierarchy (LKH)
was proposed by Wallner et al. [16] and Wong et al. [17]. In
this paradigm, common encryption key was organized into
a tree structure to achieve secure group communication in
a multicast environment. Additionally, public-key hierarchy
cryptosystems have been recently proposed. For instance,
hierarchical identity-based encryption (HIBE) mirrors an or-
ganizational hierarchy [8]. Although the public key can be
an arbitrary multi-level string, the HIBE schemes support
tree structures and provide an eﬃcient method to assign a
subset of users to encrypt the message. Another important
area is hierarchy key management (HKM) that also orga-
nizes the key into a hierarchy. For example, time-bound
hierarchical key assignment (THKA) [15] can assign time-
dependent encryption keys to a set of classes in a partially
ordered hierarchy. This scheme is especially suited for the
realtime broadcast system with time control. Unfortunately,
these existing schemes cannot manage each user’s key and
thus all users with same identity (or security level) share
the same key. In other words, all users are indiscriminate
for various operations in systems. Therefore, the existing
schemes are hard to realize some advanced security func-
tions such as revocation, digital forensics, undeniability and
traceability.
Some new technologies, such as identity-based encryp-
tion (IBE) [5], attribute-based encryption (ABE) [11], and
public-key broadcast encryption (PBE) [7], lay out a solid
foundation for designing an eﬃcient cryptosystem. Inspired
by these techniques, in this paper, we propose a practi-
cal cryptographic RBAC model, called role-key hierarchy
model, to support a variety of security features including
signature, identiﬁcation and encryption based on role-key
hierarchy. With the help of rich algebraic structure of ellip-
tic curve, we introduce a role-based cryptosystem construc-
tion to verify the rationality and validity of our proposed
model. This constructions can provide more eﬃcient and
ﬂexible control than other hierarchical key assignments [3].
More importantly, some unique security mechanisms, such
as role-based signature & authentication and role-based en-
cryption are supported by our construction.
The rest of the paper is organized as follows. Section 2
overviews the role hierarchy in RBAC and Section 3 articu-
lates our role-key hierarchy structure along with the usabil-
ity of this structure in Section 4. In Section 5, we address
our RBC construction and application schemes in depth. In
Section 6, we evaluate the security and performance of our
schemes. Finally, we conclude this paper with our future
work.
2. PRELIMINARIES
2.1 Partial Orders
Let Ψ = hP, (cid:22)i be a (ﬁnite) partially ordered set with
partial order relation (cid:22) on a (ﬁnite) set P . A partial order
is a reﬂexive, transitive and anti-symmetric binary relation.
Inheritance is reﬂexive because a role inherits its own per-
missions, transitivity is a natural requirement in this con-
text, and anti-symmetry rules out roles that inherit from
one another and would therefore be redundant.
Two distinct elements x and y in Ψ are said to be compa-
rable if x (cid:22) y or y (cid:22) x. Otherwise, they are incomparable,
denoted by xky. An order relation (cid:22) on P gives rise to a
relation ≺ of strict inequality: x ≺ y in P if and only if
(or iﬀ) x (cid:22) y and x 6= y. Also, if x is dominated by y, we
denote the domination relation as x ≺d y. In addition, if
x ≺ y and x (cid:22) z ≺ y, it then implies z = x. The latter
condition demands that there be no element z of P satisfy-
ing x ≺ z ≺ y. We deﬁne the predecessors and successors of
elements in Ψ = hP, (cid:22)i as follows: For an element x in P ,
↑ x = {y ∈ P |x (cid:22) y} denotes the set of predecessors of x,
↓ x = {y ∈ P |y (cid:22) x} denotes the set of successors.
2.2 Role Hierarchy
In an information system, a hierarchy is used to denote
the relationships and arrangements of the objects, users, ele-
ments, values, and so on. Especially, in many access control
systems the users are organized in a hierarchy constructed
with a number of classes, called security classes or roles,
according to their competencies and responsibilities. This
hierarchy arises from the fact that some users have more
access rights than others.
In order to manage large-scale systems, the hierarchy in
RBAC becomes more complex than other systems. Espe-
cially, role hierarchy (RH) is a natural means for structur-
ing roles to reﬂect an organization’s lines of authority and
responsibility. We adopt the deﬁnitions from RBAC models
proposed by Sandu et al. [13]:
Definition 1. [Hierarchical RBAC model]: The RBAC
model has the following components:
• U , R, P , and S, users, roles, permissions and sessions
respectively,
• P A ⊆ P × R, a many-to-many permission to role as-
signment relation.
• U A ⊆ U × R, a many-to-many user to role assignment
relation.
• RH ⊆ R × R is a partial order on R called the role
hierarchy or role dominance relation, written as (cid:22),
• user : S → U , a function mapping each session si to
the single user user(si), and
• roles : S → 2R, a function mapping each session si
to a set of roles: roles(si) ⊆ {r ∈ R|∃r′ ∈ R, r (cid:22)
r′ : (user(si), r′) ∈ U A} and si has the permissions:
Sr∈roles(si){p ∈ P |∃r′′ ∈ R, r′′ (cid:22) r : (p, r′′) ∈ P A}.
A hierarchy in RBAC is mathematically a partial order
that deﬁnes an inheritance (or seniority) relation between
roles, whereby senior roles acquire the permissions of their
juniors. An example of role hierarchy is shown in Figure 1,
in which more powerful (senior) roles are shown toward the
top of the diagram and less powerful (junior) roles toward
the bottom.
Figure 1: Example of role hierarchy with tree,
inverted-tree, and general hierarchies.
Based on the speciﬁc features of resource management, we
divide role hierarchy into three categories:
1. Tree hierarchy: It is useful to support the sharing of
resources, in which resources make available to junior
roles are also available to senior roles.
2. Inverted-tree hierarchy: It allows the aggregation of
resources from more than one role, in which the senior
can access resources in all subordinate roles.
3. General hierarchy:
It can compose various diﬀerent
structures into a role hierarchy. Thus it facilitates both
the sharing and aggregation of resources.
3. ROLE KEY HIERARCHY
2
3.1 Role-Key Hierarchy Structure
In order to incorporate cryptographic schemes with RBAC,
we propose a new hierarchy structure called Role-Key Hi-
erarchy (RKH). Based on the hierarchical RBAC model,
we deﬁne RKH as follows:
Definition 2. [Role-Key Hierarchy]: Given a role hier-
archy hR, (cid:22)i in RBAC, role-key hierarchy is a cryptographic
partial order relation for the sets of users, keys, and roles,
denoted by H = hU, K, R, (cid:22)i, satisfying the following condi-
tions:
1. K = P K ∪ SK, the key set K includes the role-key set
P K and the user-key set SK;
2. U KA ⊆ U × SK, a one-to-one user to key assignment
relation, i.e., each user ui,j ∈ U is assigned to an ex-
clusive user-key ski,j ∈ SK;
3. RKA ⊆ R × P K, a one-to-one role to key assignment
relation, i.e., each role ri ∈ R corresponds to a unique
role-key pki ∈ P K;
4. KH ⊆ P K × P K, is a partial order on P K called the
key hierarchy or key dominance relation, also written
as (cid:22); and
5. Each user ui,j can access the resources associated with
rl if and only if rl (cid:22) ri ∈ RH and (ui,j, ri) ∈ U A.
where, hK, (cid:22)i is the smallest partially ordered set satisfying
the above conditions. The user holds multiple user keys if he
is member of multiple roles in role hierarchy.
In RBAC systems, various access control functions are
designated by permissions P . In the same way, the RBAC
permissions can be designated by some cryptographical al-
gorithms, such as Encrypt and Decrypt, which can realize
various access control functions by using role keys and user
keys in role-key hierarchy. These algorithms can also be
used independently to protect ﬁles from unauthorized ac-
cess while these resources break away from the scope of this
RBAC systems or an attacker gains physical access to the
computer.
(cid:85)(cid:20)
(cid:85)(cid:21)
(cid:20)
(cid:21)
(cid:22)
(cid:23)
(cid:20)
(cid:21)
(cid:22)
(cid:23)
(cid:85)(cid:22)
(cid:85)(cid:23)
(cid:20)
(cid:21)
(cid:22)
(cid:23)
(cid:20)
(cid:21)
(cid:22)
(cid:23)
(cid:85)(cid:24)
(cid:85)(cid:25)
(cid:85)(cid:26)
(cid:20)
(cid:21)
(cid:22)
(cid:23)
(cid:20)
(cid:21)
(cid:22)
(cid:23)
(cid:20)
(cid:21)
(cid:22)
(cid:23)
(cid:85)(cid:27)
(cid:20)
(cid:21)
(cid:22)
(cid:23)
Figure 2: Example of role-key hierarchy
Our main objective is to map the role hierarchy in RBAC
into a key management system. According to the condition 3
and 4, the role key set P K should have the same structure as
the role hierarchy structure. Moreover, each user key ski,j ∈
SK also needs to contain necessary information about role
3
hierarchy for dealing with access functions independently
by itself. Figure 2 shows an example of role-key hierarchy,
in which the circle denotes the role key and the triangle
denotes the user key, respectively. Note that this is a general
hierarchy.
3.2 Role-based Cryptosystem
For ease of use, we expect that a system manager assigns
the user key ski,j = (labi,j, dki,j) to a user, where labi,j is
a public label and dki,j is a private key. This label labi,j
can be used to realize special functions such as designation,
revocation, and tracing.
Given a role hierarchy Ψ = hR, (cid:22)i and a security pa-
rameter s, Role-based Cryptosystem (RBC) is a key
management system that can construct a role-key hierar-