### Magnitudes of Four Frequencies

As illustrated in Figure 17b, the order of magnitudes for the four frequencies remains consistent after the stabilizer operation. Additionally, their ranges remain stable and are not significantly influenced by wind. Consequently, we conclude that frequencies higher than 6 Hz are resistant to wind influence and exhibit less noise at any given altitude compared to lower frequencies. To optimize the Signal-to-Noise Ratio (SNR), it is advisable to use a physical stimulus that can affect frequencies above 6 Hz.

### Influence of Light

Next, we investigated the impact of ambient light on the SNR. We placed the drone outside the lab, in front of a flickering LED strip (operating at 3.5 Hz) connected to an Arduino Uno. We conducted 18 experiments under various levels of ambient light, from morning to night. We repeated the experiment using a flickering smart film. In each experiment, we measured the magnitude around 7 Hz for one minute of flickering and compared it with one minute without flickering. As shown in Figure 17c, which presents the SNR as a function of ambient light (in lux) calculated from the 18 experiments, the SNR from the intercepted bitrate signal in the LED strip experiment improves with increasing darkness. Conversely, the flickering smart film improves with increasing ambient light. From these experiments, we concluded that using both an LED strip and smart film allows the watermarking effect to be felt at all times of day and night.

### System Evaluation

In this section, we present the final component of our proposed method for detecting privacy invasion attacks: a classification algorithm that uses watermark detection to determine whether a given First-Person View (FPV) transmission is being used to video stream a victim/target. We evaluate the performance of our privacy invasion attack detection method in two scenarios: when the target is a private house (as in [5], [7]) and when the target is a subject driving in their car (as in [3]).

#### Algorithm 4: Detecting Whether a Point of Interest (POI) is Being Streamed

```python
procedure ISTARGETFILMED?(FPVCHANNEL, FREQUENCY, STARTINGTIME)
    bitrate = extractBitrateSignal(FPVCHANNEL)
    filtered = bandpassFilter(FREQUENCY, bitrate)
    before = subArray(bitrate, 0, STARTINGTIME)
    after = subArray(bitrate, STARTINGTIME, N)
    N = length(bitrate)
    noiseMagnitude = FFT(before, 30)[FREQUENCY]
    signalMagnitude = FFT(after, 30)[FREQUENCY]
    SNR = signalMagnitude / noiseMagnitude
    return (SNR >= threshold)
```

Algorithm 4 compares the magnitude around the flickering frequency after the periodic physical stimulus (the signal) to the baseline magnitude around the same frequency before the periodic physical stimulus (the noise). This algorithm is applied after the Watermarker method has been called. It receives a suspicious FPV transmission (FPVChannel) and two parameters regarding the periodic physical stimulus: (1) its startingTime (EPOCH time): the time the physical stimulus was launched, and (2) the frequency of operation. A bitrate signal is extracted from the intercepted FPVChannel (line 3). A bandpass filter is applied (line 4) to the bitrate signal around the operated frequency. The filtered signal is divided into two segments: before (line 5) and after (line 6) the periodic physical stimulus was launched. The magnitude around the operated frequency before the periodic physical stimulus is assigned to `noiseMagnitude` (line 8), and the magnitude after the stimulus is assigned to `signalMagnitude` (line 9). Finally, the FPVChannel is classified as being used to stream the victim if the SNR exceeds a threshold (line 11).

### Experimental Setup

To evaluate the performance of our method, we conducted two sets of experiments. The first set demonstrates how smart film attached to a window can detect a privacy invasion attack against a private house from a neighboring property (simulating attacks previously reported in the media [7], [5]). Figure 18a shows the experimental setup where the target is the victim’s living room, being video streamed by a malicious drone operator (nosey subject) using a DJI Mavic Pro (configured to video stream at 30 FPS and 720p) from their property, approximately 30 meters away from the victim’s window. The smart film, installed on the victim’s window and connected to an RF controller, serves as a Watermarker. A laptop (Dell Latitude) with an integrated NIC (used as a radio receiver) controls the smart film (i.e., can flicker it from transparent to matte at a given frequency) using a radio transmitter (HackRF One, a software-defined radio) as an interceptor. The experiments (viewable in an uploaded video1) show a nosey subject using a drone to film their own yard (legitimate use) and later using the same drone to peek at their neighbor (illegitimate use) by focusing on the neighbor’s living room window. The smart film is operated at a frequency of 1.3 Hz. The spectrogram of the intercepted bitrate array from the entire experiment, with a bandpass filter around the 2.6 Hz frequency, is presented in Figure 18b.

The second set of experiments demonstrates how a siren installed on the top of a car can detect a privacy invasion attack against a subject while driving (simulating the attack described in [3]). Figure 19a shows the experimental setup. The target (the victim’s moving car) is being video streamed by a malicious drone operator using a DJI Spark (configured to video stream at 30 FPS). The Watermarker is a siren, an LED strip connected to an Arduino Uno microcontroller (used to flicker the siren at a given frequency). A laptop (Dell Latitude) with an integrated NIC (used as a radio receiver) located in the victim’s car triggers the siren. The experiments (see the uploaded video2) show a victim being followed by a nosey malicious drone operator who uses the drone to video stream the victim while driving. After 20 seconds of driving, the laptop triggers a green siren operated at a frequency of 3.9 Hz. The spectrogram of the intercepted bitrate array (intercepted by the laptop) from the entire experiment with a bandpass filter around the 7.8 Hz frequency is presented in Figure 19.

### Results

Based on the intercepted bitrate arrays from the two experiments, we extracted magnitudes around the watermarked frequencies before and after the physical stimulus was started for durations of 1-5 seconds. The results, shown in Figure 20a, indicate that two seconds of the physical stimulus are sufficient to increase the signal’s magnitude over the baseline magnitude. In addition to the experiments simulating illegitimate drone use, we conducted experiments simulating legitimate drone use. In the private house experiment, we conducted additional experiments where the neighbor used their drone to film their own garden (legitimate use). In the car experiment, we conducted additional experiments where the drone was used to film its operator (legitimate use).

We consider a privacy invasion attack detection system effective if it can detect every privacy invasion attack. To achieve this, we tuned the threshold variable in line 11 of Algorithm 4 to the minimum SNR calculated from the set of experiments on illegitimate drone use. By setting the parameter’s threshold at the minimal SNR value observed by triggering a physical stimulus, we ensure the detection of each privacy invasion attack. To test false alarms, we used the set of experiments simulating legitimate drone use. We divided the intercepted bitrate array from the legitimate use experiments into 10-second durations and applied Algorithm 1 on the intercepted signals with baseline and signal magnitudes extracted from various durations (15 seconds for each). The False Positive Rate (FPR) results for the private house experiment are presented in Figure 20b, and the FPR results for the car experiment are presented in Figure 20c. The FPR rate drops below 0.1 within 2-3 seconds of flickering in the car experiment and within two seconds in the private house experiment. Based on these results, we concluded that a privacy invasion attack detection system can be tuned to detect every privacy invasion attack with minimal false alarms.

### Countermeasures

In this section, we discuss countermeasure methods that can be used by the drone’s operator to evade detection resulting from the bursty bitrate caused by our carefully crafted physical stimulus. The most effective way to evade detection is by eliminating video compression, transmitting the raw video stream from the drone to its operator (transmitting just I-frames). However, none of the commercial drones sold today support switching the transmitted video stream to a constant bit rate instead of a variable bitrate. This is likely due to the importance of providing a high-quality resolution video stream to the drone’s operator for safe maneuvering and collision avoidance, which requires compression. Since the 1990s, applying compression to a video stream prior to transmission has been mandatory, supported by all next-generation video encoders; thus, the variable bit rate side effect is not about to disappear anytime soon.

Another option for evading detection involves using a drone equipped with two video cameras. The first camera is used for maneuvering the drone by transmitting the raw video at a constant bitrate (CBR) at a very low resolution without applying any compression. This camera is not focused on the target to prevent it from capturing the flickering object. The second camera is used to spy on the target and stores the video stream on the SD card at a high resolution using compression. While this method might be effective for static objects (e.g., the window of a building), it is not effective for moving targets (e.g., a passing car) since the video stream presented to the drone’s operator is transmitted from a camera that does not capture the moving target. These reasons also explain why occasionally disabling the video channel from the drone’s operator when using a single camera is not an effective countermeasure.

### Limitations & Future Work

Drones manufacturers use various protocols other than Wi-Fi for FPV transmission. For example, DJI uses DSSS and FHSS modulations with its own protocol for FPV transmission [74]. Additional knowledge regarding the modulation is required to apply our method and create a bitrate array from intercepted traffic, i.e., demodulating the signal from the physical layer (radio) to the data link layer (binary). In the case of DSSS, the chip sequence is required to demodulate the radio transmission to data; otherwise, our method cannot be applied. In future work, it would be interesting to implement a technique suggested at DEF CON 25 [75] and extract the chip sequence from DSSS transmission. Additionally, our work can be extended by adding a threshold for a maximal amount of time for reasonable snooping behavior (defined by the victim) to ensure that the system only issues alerts for video capturing that exceeds the threshold, allowing reasonable maneuvering near the target.

### References

[1] B. Insider, “Commercial unmanned aerial vehicle (uav) market analysis,” http://www.businessinsider.com/commercial-uav-market-analysis-2017-8, 2017.
[2] ——, “Drone market shows positive outlook with strong industry growth and trends,” http://www.businessinsider.com/drone-industry-analysis-market-trends-growth-forecasts-2017-7, 2017.
[3] N. Y. Post, “Husband uses drone to catch cheating wife,” https://nypost.com/2016/11/16/husband-uses-drone-to-catch-cheating-wife/, 2016.
[4] kiro7, “Woman terrified by drone outside her window,” http://www.kiro7.com/news/woman-terrified-drone-outside-her-window/81721261, 2014.
[5] D. Mail, “Woman grabs gun shoots nosy neighbour’s drone,” http://www.dailymail.co.uk/news/article-4283486/Woman-grabs-gun-shoots-nosy-neighbour-s-drone.html.
[6] N. Washington, “Virginia woman shoots down drone near actor Robert Duvall’s home,” http://www.nbcwashington.com/news/local/robert-Virginia-Woman-Shoots-Down-Drone-Near-Actor-Robert-Duvalls-Home-391423411.html.
[7] N. News, “Kentucky man arrested after shooting down neighbor’s drone,” http://www.nbcnews.com/news/us-news/not-my-backyard-man-arrested-after-shooting-drone-down-n402271.
[8] Wired, “President Trump moves to fill America’s skies with drones,” https://www.wired.com/story/faa-trump-drones-regulations/, 2017.
[9] Newsweek, “Pizza delivery by drone launched by Domino’s,” http://www.newsweek.com/pizza-delivery-drone-dominos-493371.
[10] B. Insider, “Amazon and UPS are betting big on drone delivery,” http://www.businessinsider.com/amazon-and-ups-are-betting-big-on-drone-delivery-2018-3.
[11] Fortune, “CNN just got approved to fly drones over crowds of people,” http://fortune.com/2017/10/18/cnn-drones-faa-crowds/, 2017.
[12] A. D. Craze, “Top 12 non-military uses for drone,” https://www.airdronecraze.com/drones-action-top-12-non-military-uses/.
[13] T. Eshel, “Mobile radar optimized to detect UAVs, precision guided weapons,” Defense Update, 2013.
[14] A. Rozantsev, V. Lepetit, and P. Fua, “Flying objects detection from a single moving camera,” in Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, 2015, pp. 4128–4136.
[15] J. Busset, F. Perrodin, P. Wellig, B. Ott, K. Heutschi, T. Rühl, and T. Nussbaumer, “Detection and tracking of drones using advanced acoustic cameras,” in Unmanned/Unattended Sensors and Sensor Networks XI; and Advanced Free-Space Optical Communication Techniques and Applications, vol. 9647. International Society for Optics and Photonics, 2015, p. 96470F.
[16] E. E. Case, A. M. Zelnio, and B. D. Rigling, “Low-cost acoustic array for small UAV detection and tracking,” in Aerospace and Electronics Conference, 2008. NAECON 2008. IEEE National. IEEE, 2008, pp. 110–113.
[17] J. R. Vasquez, K. M. Tarplee, E. E. Case, A. M. Zelnio, and B. D. Rigling, “Multisensor 3D tracking for counter small unmanned air vehicles (CSUAV),” in Proc. SPIE, vol. 6971, 2008, p. 697107.
[18] M. Peacock and M. N. Johnstone, “Towards detection and control of civilian unmanned aerial vehicles,” 2013.
[19] S. Birnbach, R. Baker, and I. Martinovic, “Wi-Fly?: Detecting privacy invasion attacks by consumer drones,” NDSS, 2017.
[20] BBC, “Big rise in drone jail smuggling incidents,” http://www.bbc.com/news/uk-35641453.
[21] L. A. Times, “Two plead guilty in border drug smuggling by drone,” http://www.latimes.com/local/california/la-me-drone-drugs-20150813-story.html.
[22] N.-Y. Times, “Secret service arrests man after drone flies near White House,” https://www.nytimes.com/2015/05/15/us/white-house-drone-secret-service.html.
[23] ——, “A drone, too small for radar to detect, rattles the White House,” https://www.nytimes.com/2015/01/27/us/white-house-drone.html.
[24] Ynet, “Nasrallah describes 1997 ambush,” http://www.ynetnews.com/articles/0,7340,L-3932886,00.html.
[25] ——, “What really went wrong in botched 1997 Shayetet 13 operation?” http://www.ynetnews.com/articles/0,7340,L-4977429,00.html.
[26] Wired, “Insurgents intercept drone video in king-size security breach (updated, with video),” https://www.wired.com/2009/12/insurgents-intercept-drone-video-in-king-sized-security-breach/.
[27] ——, “Most U.S. drones openly broadcast secret video feeds,” https://www.wired.com/2012/10/hack-proof-drone/.
[28] Telegraph, “British and US intelligence 'hacked into Israeli drones,'” http://www.telegraph.co.uk/news/worldnews/middleeast/israel/12128855/British-and-US-intelligence-hacked-into-Israeli-drones.html.
[29] “The global anti-drone market size is anticipated to reach USD 1.85 billion by 2024,” https://www.prnewswire.com/news-releases/the-global-anti-drone-market-size-is-anticipated-to-reach-usd-1-85-billion-by-2024--300673188.html, 2018.
[30] F. Brown, “Game of drones,” DefCon 25, 2017.
[31] I. E. Richardson, H. 264 and MPEG-4 video compression: video coding for next-generation multimedia. John Wiley & Sons, 2004.
[32] T. Wiegand, G. J. Sullivan, G. Bjontegaard, and A. Luthra, “Overview of the H. 264/AVC video coding standard,” IEEE Transactions on circuits and systems for video technology, vol. 13, no. 7, pp. 560–576, 2003.
[33] J. Ostermann, J. Bormans, P. List, D. Marpe, M. Narroschke, F. Pereira, T. Stockhammer, and T. Wedi, “Video coding with H. 264/AVC: tools, performance, and complexity,” IEEE Circuits and Systems magazine, vol. 4, no. 1, pp. 7–28, 2004.
[34] K. Jack, Video demystified: a handbook for the digital engineer. Elsevier, 2011.
[35] rcdronearena, “WiFi FPV vs 5.8GHz FPV: Ultimate guide,” http://www.rcdronearena.com/2016/03/15/wifi-fpv-vs-5-8ghz-fpv-vs-2-4ghz-fpv-explained/.
[36] B. Quadcopter, “WiFi FPV vs 5.8GHz FPV vs 2.4GHz FPV,” https://www.best-quadcopter.com/versus-zone/2016/04/wifi-fpv-vs-5-8ghz-fpv-vs-2-4ghz-fpv/.
[37] DJI, “Spark remote controller,” https://store.dji.com/product/spark-remote-controller.
[38] Parrot, “Parrot skycontroller,” https://www.parrot.com/global/accessories/drones/parrot-skycontroller#parrot-skycontroller.
[39] droneuplift, “Top 5 best DJI Phantom signal range boosters 2017,” http://www.droneuplift.com/top-5-dji-phantom-signal-range-extenders/.
[40] auselectronicsdirect, “WiFi FPV drones,” https://www.auselectronicsdirect.com.au/drones/fpv-drone/wifi-fpv-drones/.
[41] androidauthority, “8 fun drones you can control with your smartphone,” https://www.androidauthority.com/best-smartphone-controlled-drones-744632/.
[42] dronesglobe, “8 drones than can be controlled by a smartphone (fully or partially),” http://www.dronesglobe.com/guide/smartphone-drones/.
[43] T. S. Saponas, J. Lester, C. Hartung, S. Agarwal, T. Kohno et al., “Devices that tell on you: Privacy trends in consumer ubiquitous computing.” in USENIX Security Symposium, 2007, pp. 55–70.
[44] Y. Liu, A.-R. Sadeghi, D. Ghosal, and B. Mukherjee, “Video streaming forensic-content identification with traffic snooping.” in ISC. Springer, 2010, pp. 129–135.
[45] R. Schuster, V. Shmatikov, and E. Tromer, “Beauty and the burst: Remote identification of encrypted video streams,” in 26th USENIX Security Symposium (USENIX Security 17). Vancouver, BC: USENIX Association, 2017, pp. 1357–1374. [Online]. Available: https://www.usenix.org/conference/usenixsecurity17/technical-sessions/presentation/schuster.
[46] A. Reed and M. Kranch, “Identifying HTTPS-protected Netflix videos in real-time,” in Proceedings of the Seventh ACM on Conference on Data and Application Security and Privacy. ACM, 2017, pp. 361–368.
[47] A. Reed and B. Klimkowski, “Leaky streams: Identifying variable bitrate DASH videos streamed over encrypted 802.11 n connections,” in Consumer Communications & Networking Conference (CCNC), 2016 13th IEEE Annual. IEEE, 2016, pp. 1107–1112.
[48] Y. Liu, C. Ou, Z. Li, C. Corbett, B. Mukherjee, and D. Ghosal, “Wavelet-based traffic analysis for identifying video streams over broadband networks,” in Global Telecommunications Conference, 2008. IEEE GLOBECOM 2008. IEEE. IEEE, 2008, pp. 1–6.
[49] C. Wampler, S. Uluagac, and R. Beyah, “Information leakage in encrypted IP video traffic,” in 2015 IEEE Global Communications Conference (GLOBECOM), Dec 2015, pp. 1–7.
[50] T. Liu, Z. Liu, J. Huang, R. Tan, and Z. Tan, “Detecting wireless spy cameras via stimulating and probing,” in Proceedings of the 16th Annual International Conference on Mobile Systems, Applications, and Services. ACM, 2018, pp. 243–255.
[51] C. V. Wright, L. Ballard, F. Monrose, and G. M. Masson, “Language identification of encrypted VoIP traffic: Alejandra y Roberto or Alice and Bob?” in USENIX Security Symposium, vol. 3, 2007, pp. 43–54.
[52] C. V. Wright, L. Ballard, S. E. Coull, F. Monrose, and G. M. Masson, “Spot me if you can: Uncovering spoken phrases in encrypted VoIP conversations,” in Security and Privacy, 2008. SP 2008. IEEE Symposium on. IEEE, 2008, pp. 35–49.
[53] A. M. White, A. R. Matthews, K. Z. Snow, and F. Monrose, “Phonotactic reconstruction of encrypted VoIP conversations: Hookt on fon-iks,” in Security and Privacy (SP), 2011 IEEE Symposium on. IEEE, 2011, pp. 3–18.
[54] R. Dubin, A. Dvir, O. Pele, and O. Hadar, “I know what you saw last minute;encrypted HTTP adaptive video streaming title classification,” IEEE Transactions on Information Forensics and Security, vol. 12, no. 12, pp. 3039–3049, Dec 2017.
[55] Y. Cheng, X. Ji, T. Lu, and W. Xu, “DewiCam: Detecting hidden wireless cameras via smartphones,” in Proceedings of the 2018 on Asia Conference on Computer and Communications Security, ser. ASIACCS XV. New York, NY, USA: ACM, 2018, pp. 1–13. [Online]. Available: http://doi.acm.org/10.1145/3196494.3196509.
[56] P. Nguyen, H. Truong, M. Ravindranathan, A. Nguyen, R. Han, and T. Vu, “Matthan: Drone presence detection by identifying physical signatures in the drone’s RF communication,” in Proceedings of the 15th Annual International Conference on Mobile Systems, Applications, and Services. ACM, 2017, pp. 211–224.
[57] pcmag, “The best drones of 2018,” https://www.pcmag.com/roundup/337251/the-best-drones.
[58] “Airmon-ng,” https://www.aircrack-ng.org/doku.php?id=airmon-ng.
[59] “Airodump-ng,” https://www.aircrack-ng.org/doku.php?id=airodump-ng.
[60] lighterra, “Video encoding settings for H.264 excellence,” http://www.lighterra.com/papers/videoencodingh264/.
[61] I. Video and Control, “Industrial video and control bandwidth calculator,” http://www.ivcco.com/bandwidth-calculator/?page=calc.
[62] IBM, “Planning audio and video network bandwidth requirements,” https://www.ibm.com/support/knowledgecenter/en/SSKTXQ_9.0.0/admin/plan/plan_av_net_bandwidth_req.html.
[63] F. Zafari, A. Gkelias, and K. K. Leung, “A survey of indoor localization systems and technologies,” CoRR, vol. abs/1709.01015, 2017. [Online]. Available: http://arxiv.org/abs/1709.01015.
[64] Ó. Belmonte-Fernández, A. Puertas-Cabedo, J. Torres-Sospedra, R. Montoliu-Colás, and S. Trilles-Oliver, “An indoor positioning system based on wearables for ambient-assisted living,” Sensors, vol. 17, no. 1, p. 36, 2016.
[65] K. Muthukrishnan, M. Lijding, N. Meratnia, and P. Havinga, “Sensing motion using spectral and spatial analysis of WLAN RSSI,” in European Conference on Smart Sensing and Context. Springer, 2007, pp. 62–76.
[66] DJI, “Mavic Pro,” https://www.dji.com/mavic.
[67] “Nebula capsule,” https://www.amazon.com/Projector-Anker-Portable-High-Contrast-Playtime/dp/B076Q3GBJK.
[68] Scantips, “Calculate distance or size of an object in a photo image,” https://www.scantips.com/lights/subjectdistance.html.
[69] scantips, “Calculate distance or size of an object in a photo image,” https://www.scantips.com/lights/subjectdistance.html.
[70] DJI, “Mavic Air,” https://www.dji.com/mavic-air/info#specs.
[71] ——, “Spark,” https://www.dji.com/spark/info#specs.
[72] “Spherical coordinate system,” https://en.wikipedia.org/wiki/Spherical_coordinate_system.
[73] “GPS accuracy,” https://www.gps.gov/systems/gps/performance/accuracy/.
[74] A. Luo, “Drones hijacking - multi-dimensional attack vectors and countermeasures,” DefCon 24.
[75] M. Szczys, “Michael Ossmann pulls DSSS out of nowhere,” https://hackaday.com/2017/07/29/michael-ossmann-pulls-dsss-out-of-nowhere/, 2017.
[76] D. Mitrovic, “Video compression,” University of Edinburgh.
[77] nickkolenda, “Subliminal messages: Do they really work?” https://www.nickkolenda.com/subliminal-messages/.
[78] L. Wang, “Are you being manipulated by subliminal messages?” http://blog.visme.co/subliminal-messages/.

### Appendix - Interception & Creating Bitrate Signal Script

**Listing 1: Applying Interception Script**

```bash
#!/bin/bash
# Start monitor mode
airmon-ng check kill
airmon-ng start wlan0
# Capture packets of specific network
airodump-ng --bssid $1 --write capture.pcap wlan0mon
read -p "Press any key to exit monitor mode..." -n1 -s
# Exit monitor mode
airmon-ng stop wlan0mon
service network-manager start
rfkill unblock all
```

The bash script in Listing 1 takes the BSSID as an argument and creates a PCAP file containing packets captured from the BSSID's network.

**Listing 2: Implementing the Bitrate Signal Interception Process**

```bash
#!/bin/bash
prefix=12
suffix=1
interval=0.041666666667
tshark -q -z 'io,stat,' "$interval" -r "$1" > "$1".txt -2
lines=$(wc -l < "$1".txt)
for ((i=1; i<=lines; i++)); do
    sed -n "${i}p" "$1".txt | cut -f 3 -d '|' > tmp2.txt
    sed -n "${i}p" "$1".txt | cut -f 4 -d '|' > tmp4.txt
    cat tmp2.txt > packets.txt
    cat tmp4.txt > bytes.txt
done
echo 'packets' > temp
cat packets.txt >> temp && mv temp packets.txt
echo 'bytes' > temp
cat bytes.txt >> temp && mv temp bytes.txt
paste -d ',' packets.txt bytes.txt > "$1".csv
rm packets.txt bytes.txt
```

The bash script in Listing 2 implements the bitrate signal interception process. It processes the captured packets and extracts the bitrate information, creating a CSV file with the packet and byte data.