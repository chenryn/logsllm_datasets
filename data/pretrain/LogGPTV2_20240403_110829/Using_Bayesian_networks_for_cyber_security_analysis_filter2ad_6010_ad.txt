### 4 实验结果

#### 表3. 预部署真实情况
| 节点 | 描述 |
| --- | --- |
| Node 1 | networkServiceInfo(webServer, httpd, tcp.80, apache) |
| Node 5 | reachability(webServer, fileServer, rpc.100005) |
| Node 10 | vulExists(webServer, CAN2002-0392, remoteExploit, privEscalation) |
| Node 12 | vulExists(fileServer, vulID, mountd, remoteExploit, privEscalation) |
| Node 15 | networkServiceInfo(fileServer, nfsPort) |
| Node 17 | callAccessFile(fileServer, root, write, /export) |
| Node 18 | nfsExportInfo(fileServer:export, write, webServer) |
| Node 19 | reachability(webServer, fileServer, nfsProtocol, nfsPort) |
| Node 25 | nsmounted(workstation:/usr/local/share, rpc.100005, root) |

#### 表4. 正常事件和攻击事件
| 事件 | 描述 |
| --- | --- |
| 事件1 | Mallory（即攻击者）向web服务器的端口80发送探测包#BI（在TCP三次握手之后），但该包失败。 |
| 事件2 | 正常包#IG1进入web服务器的端口80。 |
| 事件3 | 正常包#IG2进入web服务器的端口80。 |
| 事件4 | Mallory向web服务器发送探测包#IB2。 |
| 事件5 | 正常包#NG3进入web服务器的端口80。 |
| 事件6 | 正常包#NG4进入web服务器的端口80。 |
| 事件7 | Mallory向web服务器发送探测包#NB3，该包成功。 |
| 事件8 | Mallory向文件服务器的RPC端口发送探测包#NB4，但该包失败。 |
| 事件9 | 网络现在处于节点23指定的状态。 |
| 事件10 | 正常包#NG6进入文件服务器的RPC端口。 |
| 事件11 | Mallory向web服务器发送探测包#NB2，但该包失败。 |
| 事件12 | 正常包#NG7进入文件服务器的RPC端口。 |
| 事件13 | 正常包#NG8进入文件服务器的RPC端口。 |
| 事件14 | 正常包#NG9进入文件服务器的RPC端口。 |
| 事件15 | 目录"export"中的二进制文件X被另一个正常用户更改。 |
| 事件16 | 目录"export"中的二进制文件X被Mallory更改。 |
| 事件17 | 目录"export"中的二进制文件Y被另一个正常用户更改。 |
| 事件18 | 文件X（特洛伊木马）由管理员执行，特洛伊木马以root权限执行代码。 |
| 事件19 | 目录"export"中的二进制文件Y由普通用户执行。 |
| 事件20 | 目录"export"中的二进制文件Z被另一个正常用户更改。 |
| 事件21 | 文件Z由普通用户执行。 |
| 事件22 | 目录"export"中的二进制文件Z由另一个正常用户更改。 |

### 4.1 评估方法

尽管基于贝叶斯网络的安全分析工具的条件概率表通常由人类专家确定，但其有效性必须以客观方式评估。

**问题1 (Q1)**：哪些机器很可能已被攻破？

**问题2 (Q2)**：哪些漏洞利用已经发生但尚未被检测到？哪些警报缺失了？

我们通过将基于贝叶斯网络的工具的答案与真实情况进行比较来评估其性能。真实情况是一个完全有序的事件序列，其中每个事件都被标记为恶意或合法。事件顺序由事件的开始时间决定。

为了简化实验，我们假设每个事件的持续时间可以忽略不计。基于贝叶斯网络的工具只能访问IDS传感器的信息，这些信息可能由于传感器的误报、漏报以及防火墙规则中的错误而失真。此外，Nessus漏洞报告也可能导致真实情况失真。

### 4.2 实验设置

在我们的实验中，我们采用了如图9所示的攻击场景，并使用了图1和表3中的预部署真实情况。我们有两种类型的真实情况：预部署真实情况和后部署真实情况。预部署真实情况关注的是部署前的情况，而后部署真实情况则关注部署后的攻击事件。预部署真实情况包括一个假的漏洞报告（节点18），这是由一个不完美的漏洞扫描器报告的。

### 4.3 模拟实验

**实验1**：在这个实验中，我们使用了以下完整的事件序列：

E1 -> AE1 (报告) -> E2 -> E3 -> E4 -> E5 -> E6 -> E7 -> E8 -> AE2 (不报告) -> AE3 (不报告) -> E9 -> E10 -> E11 -> FN1 (不报告) -> E12 -> E13 -> AE3 (报告) -> E14 -> E15 -> AE5 (报告) -> E16 -> AE6 -> E17 -> AE7 (不报告) -> AE8 (报告) -> E18 -> E19 -> AE9 (报告) -> E20 -> E21 -> E22 -> E23.

在AI5时，基于贝叶斯网络的工具显示文件X被攻破的可能性为53.04%。在AI6时，该工具显示web服务器被攻破的可能性为89.92%。当警报AE5可见时，该工具显示web服务器被攻破的可能性为89.92%。在AI7时，当真正的警报AE9被检测到时，裁判员得出工作站已被攻破的结论。基于贝叶斯网络的工具也给出了正确的答案（100% WS）。

**其他实验的结果**：其他实验与实验1类似，但也有一些差异：
- **实验2**：让虚假警报FN1具有实质性的延迟。
- **实验3**：让警报AE8具有检测延迟。
- **实验4**：展示了基于贝叶斯网络的工具能够利用超出警报和漏洞报告之外的额外证据。
- **实验5**：展示了基于贝叶斯网络的工具在处理误报方面的强大能力。
- **实验6**：展示了基于贝叶斯网络的工具在处理漏报方面的强大能力。

### 总结

实验结果显示，基于贝叶斯网络的工具可以帮助安全管理员找到最有可能被攻破的机器，并且在大多数时间点上表现良好。此外，该工具还能有效地推断出未被检测到的漏报，并减轻不完美IDS带来的干扰。

---

希望这能帮助你更好地理解和优化你的文本。如果有任何进一步的问题，请告诉我！