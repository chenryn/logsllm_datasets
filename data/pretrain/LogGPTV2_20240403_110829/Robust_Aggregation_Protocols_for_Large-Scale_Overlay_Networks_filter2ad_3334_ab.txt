The protocol described so far is based on the assumption
that cycles and epochs proceed in lock step at all nodes. In
a large-scale distributed system, this assumption cannot be
satisﬁed due to the unpredictability of message delays and
the different drift rates of local clocks.
Given an epoch j, let Tj be the time interval from when
the ﬁrst node starts participating in epoch j to when the last
node starts participating in the same epoch. In our protocol
as it stands, the length of this interval would increase with-
out bound given the different drift rates of local clocks an
the fact that a new node joining the network obtains the next
epoch identiﬁer and start time from an existing node, incur-
ring a message delay.
To avoid the above problem, we modify our protocol as
follows. When a node participating in epoch i receives an
exchange message tagged with epoch identiﬁer j such that
j > i, it stops participating in epoch i and instead starts par-
ticipating in epoch j. This has the effect of propagating the
larger epoch identiﬁer (j) throughout the system in an epi-
demic broadcast fashion forcing all (slow) nodes to move to
the new epoch. In other words, the start of a new epoch acts
as a synchronization point for the protocol execution forc-
ing all nodes to follow the pace being set by the nodes that
enter the new epoch ﬁrst. Informally, knowing that push-
pull epidemic broadcasts propagate super-exponentially [2]
and assuming that each message arrives within the timeout
used during all communications, we can give a logarithmic
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 11:52:01 UTC from IEEE Xplore.  Restrictions apply. 
r
o
t
c
a
F
e
c
n
e
g
r
e
v
n
o
C
n
o
i
t
c
u
d
e
R
e
c
n
a
i
r
a
V
W-S (β = 0.00)
W-S (β = 0.25)
W-S (β = 0.50)
W-S (β = 0.75)
Newscast
Scale-Free
Random
Complete
0.8
0.7
0.6
0.5
0.4
0.3
100
1000
10000
100000
1e+06
Network Size
(a) Average convergence factor computed over a period of 20 cy-
cles in networks of varying size. Each curve corresponds to a dif-
ferent topology and W-S stands for the Watt-Strogatz model.
1
0.01
0.0001
1e-06
1e-08
1e-10
1e-12
1e-14
1e-16
W-S (β=0.00)
W-S (β=0.25)
W-S (β=0.50)
W-S (β=0.75)
Newscast
Scale-free
Random
Complete
0
5
10
15
20
25
30
35
40
45
50
Cycles
(b) Variance reduction (normalized by the initial variance) for
a network of 105 nodes. Each curve corresponds to a different
topology and W-S stands for the Watt-Strogatz model.
Figure 3. Behavior of protocol AVERAGE.
bound on Tj for each epoch j. Considering also that typ-
ically many nodes will start the new epoch independently,
this bound can be expected to be sufﬁciently small, which
allows picking an epoch length, ∆, such that it is signiﬁ-
cantly larger that Tj. Although it would be interesting, fur-
ther analysis of this mechanism is out of the scope of the
present discussion. The effect of lost messages (i.e., those
that time out) is discussed later.
4.4. Overlay Topology for Aggregation
The theoretical results mentioned in Section 3 are based
on the assumption that the underlying overlay is “sufﬁ-
ciently random”. More formally, this means that the neigh-
bor selected by a node when initiating communication is a
uniform random sample among its peers. Yet, our aggrega-
tion scheme can be applied to generic connected topolo-
gies. To explore deviation from the theoretically predicted
behavior, Figure 3(a) illustrates the performance of aggre-
gation for different topologies, by showing the average con-
vergence factor over a period of 20 cycles, for network sizes
ranging from 102 to 106 nodes. Figure 3(b) provides addi-
tional details. Here, the network size is ﬁxed at 105 nodes.
Instead of displaying the average convergence factor, the
curves represent the actual variance reduction normalized
with respect to the initial variance for the same set of topolo-
gies. Before going into the details of the topologies, we can
already conclude that performance is independent of net-
work size for all topologies, while it is highly sensitive to the
particular topologies. Furthermore, the convergence factor
is constant through the sequence of cycle, with non-random
topologies being the only exceptions.
All the topologies examined in this section (with the ex-
ception of NEWSCAST) are static—the neighbor set of each
node is ﬁxed. While static topologies are unrealistic in the
presence of node joins and crashes, we still consider them
due to their theoretical importance and the fact that our pro-
tocol can in fact be applied in static networks as well, al-
though they are not in the focus of the present discussion.
Static topologies All topologies considered have a regular
degree of 20 neighbors, with the exception of the complete
network (where each node knows every other node) and the
Barabasi-Albert network (where the degree distribution is
a power-law). For the random network the neighbor set of
each node is ﬁlled with a random sample of the peers.
The remaining topologies are realistic small-world
topologies that are often used to model different natu-
ral and artiﬁcial phenomena [1, 13]. The ﬁrst class of these
topologies (the Watts-Strogatz model [14]) is built start-
ing from a regular ring lattice. The ring lattice is built by
connecting the nodes in a ring and adding links to their near-
est neighbors until the desired node degree is reached. Start-
ing with this ring lattice, each edge is then randomly rewired
with probabilityβ. Rewiring an edge at node n means re-
moving that edge and adding a new edge connecting n to
another node picked at random. When β = 0, the ring lat-
tice remains unchanged, while when β = 1, all edges are
rewired, generating a random graph.
Figure 4(a) focuses on the Watts-Strogatz model show-
ing the convergence factor as a function of β ranging from
0 (complete order) to 1 (complete disorder). Although there
is no sharp phase transition, we observe that increased ran-
domness results in a better convergence factor.
Scale-free topologies form the other class of realistic
small world topologies. In particular, the WWW, the Inter-
net and P2P networks such as Gnutella [9] have been shown
to be instances of scale-free topologies. We have tested our
protocol over scale-free graphs generated using the prefer-
ential attachment method of Barabasi and Albert [1]. The
basic idea of preferential attachment is that we build the
graph by adding new nodes one-by-one, wiring the new
node to an existing node already in the network. This ex-
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 11:52:01 UTC from IEEE Xplore.  Restrictions apply. 
r
o
t
c
a
F
e
c
n
e
g
r
e
v
n
o
C
r
o
t
c
a
F
e
c
n
e
g
r
e
v
n
o
C
Experiments
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0
0.2
0.4
0.6
0.8
1
β
(a) Convergence factor for Watts-Strogatz graphs with a variable
β parameter.
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
Experiments
Average
0
5
10
15
20
25
c
30
35
40
45
50
(b) Convergence factor for NEWSCAST graphs with a variable c
parameter.
Figure 4. Behavior of the AVERAGE protocol in
Watts-Strogatz and NEWSCAST graphs.
isting contact node is picked randomly with a probability
proportional to its degree (number of neighbors). The re-
sults are encouraging, as the observed convergence factors
are similar to those obtained in random graphs.
Dynamic topologies From the above results, it is clear that
the topology of the overlay should be as random as possi-
ble. Furthermore, in dynamic systems, there must be mech-
anisms in place that preserve this property. To achieve this
goal, we propose to use NEWSCAST [4], a decentralized
membership protocol based on an epidemic scheme simi-
lar to the one described in Figure 1.
In NEWSCAST, the overlay is generated by a continuous
exchange of neighbor sets, where each neighbor is associ-
ated with its identiﬁer and a timestamp. These sets have a
ﬁxed size, which will be denoted by c. After an exchange,
participating nodes update their neighbor sets by selecting
the c node identiﬁers (from the union of the two sets) that
have the freshest timestamps. Nodes belonging to the net-
work continously inject their identiﬁers in the network with
the current timestamp, so old identiﬁers are gradually re-
moved from the system and get replaced by new informa-
tion. This feature allows the protocol to “repair” the over-
lay topology by forgetting information about crashed neigh-
bors, which by deﬁnition do not inject their identiﬁer.
The resulting topology has a very low diameter [4]. Fig-
ure 4(b) show the performance of aggregation over a NEWS-
CAST network of 105 nodes, with c varying between 2 and
50. According to our experimental results, choosing c = 30
is already sufﬁcient to obtain fast convergence for aggrega-
tion. Furthermore, the same value is sufﬁcient for very sta-
ble and robust connectivity.
4.5. Cost Analysis
Both the communication cost and time complexity of our
algorithms follow from properties of the aggregation proto-
col and are inversely related. The cycle length, δ deﬁnes the
time complexity of convergence. Choosing a short δ will re-
sult in proportionally faster convergence but higher commu-
nication costs per unit time. It is possible to show that if the
overlay is sufﬁciently random, the number of exchanges for
each node in δ time units can be described by the random
variable 1 + φ where φ has a Poisson distribution with pa-
rameter 1. Thus, on the average, there are two exchanges per
node (one initiated and one coming from another node), with
a very low variance. Based on this distribution, parameter δ
must be selected to guarantee that, with very high probabil-
ity, each node will be able to complete the expected num-
ber of exchanges before the next cycle starts. Failing to sat-
isfy this requirement results in a violation of our theoretical
assumptions. Similarly, parameter γ must be chosen appro-
priately, based on the desired accuracy of the estimate and
the convergence factor ρ characterizing the overlay network.
After γ cycles, we have E(σ2
0) = ργ where E(σ2
0)
is the expected variance of the initial values. If  is the de-
sired accuracy of the ﬁnal estimate, then γ ≥ logρ . Note
that ρ is independent of N , so the time complexity of reach-
ing a given precision is O(1).
γ)/E(σ2
5. Other Aggregation Functions
In the following, we brieﬂy outline how our protocol for
averaging can be easily modiﬁed to compute several other
interesting aggregation functions.
MIN and MAX: To obtain the maximum or minimum value
among those maintained by nodes, method UPDATE(a, b) of
the generic scheme of Figure 1 must return max(a, b) or
min(a, b), respectively. In this case, the global maximum
or minimum value will be effectively broadcast like an
epidemic. Existing results about epidemic-style broadcast-
ing [2] are applicable.
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 11:52:01 UTC from IEEE Xplore.  Restrictions apply. 
COUNT: We base this protocol on the observation that if
the initial distribution of local values is such that exactly one
node has the value 1 and all the others have 0, then the global
average is exactly 1/N and thus the network size, N , can be
easily deduced from it.
However, implementing this function in distributed sys-