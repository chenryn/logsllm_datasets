# [Introduction](index.md)
* New: Add the donation information.
# [Projects](projects.md)
* New: Add two more solutions to the voice recognition project.
    For offline voice recognition, [vosk-api](https://github.com/alphacep/vosk-api)
    can be used. Or [voiceliner](https://github.com/maxkrieger/voiceliner/issues/37)
    once it supports offline voice recognition.
* Correction: [Deprecate faker-optional project.](projects.md#faker-optional)
    Wrapper over other Faker providers to return their value or `None`. Useful to
    create data of type `Optional[Any]`.
    Not needed anymore as I use [pydantic factories](pydantic_factories.md) now.
* New: [Create the Life Warnings seed.](projects.md#life-warnings)
    I've always tackled the pursuit of the peace of mind by improving in task
    management, for example trying to predict when I have to do something in order
    to avoid a nuisance. Maybe it's more interesting to monitor and visibilice the
    warnings that are affecting you.
* Reorganization: Merge Self host a routing web application seed with host my own map seedling.
* New: [Create an ordered list of digital gardens.](projects.md#create-an-ordered-list-of-digital-gardens)
    Created [Best-of Digital Gardens](https://github.com/lyz-code/best-of-digital-gardens) a [best-of-lists](https://github.com/best-of-lists/best-of) compilation of awesome list of digital gardens.
* New: [Beancount forecast.](projects.md#beancount-forecast)
    I'd like to see a forecast of the evolution of my accounts given an amount of
    time. Maybe by doing seasonality analysis and forecast in time series as stated
    [here](https://medium.com/swlh/seasonality-analysis-and-forecast-in-time-series-b8fbba820327) and [here](https://towardsdatascience.com/finding-seasonal-trends-in-time-series-data-with-python-ce10c37aa861).
    It will also be interesting to see for a given account the evolution of the
    subaccounts.
* New: [Version Update Manager.](projects.md#version-update-manager)
    Keeping software updated is not easy because:
    * There are many technologies involved: package managers (apt, yum, pip, yarn,
        npm, ...), programming languages (python, java, ruby, ...), operative
        systems (Debian, Ubuntu, ...), deployment technologies (OS install, Docker,
        Kubernetes, Ansible, Helm), template software (cruft).
    * Each software maintainers use a different version system.
    * Even a small increase in a version may break everything.
    * Sometimes only the latest version is the supported version.
    * It's not easy to check if the update went well.
    * You not only need the desired package to be updated, but also it's
        dependencies.
    I'd like to find a solution that:
    * Gives an overall insight of the update status of a system.
    * Automates the update process.
    * Support both single system installation or aggregator of multiple systems.
# Activism
## [Antifascism](antifascism.md)
* New: [Add magazines and podcasts.](antifascism.md#magazines)
    Magazines:
    * [Hope not Hate](https://hopenothate.org.uk)
    * [Searchlight](https://www.searchlightmagazine.com/)
    Podcasts:
    * [Hope not Hate](https://hopenothate.org.uk/research/podcast/)
* New: [How to fight fascism.](antifascism.md#how-to-fight-fascism)
    There are many ways to fight it, the book [Todo el mundo puede ser Antifa: Manual practico para destruir el fascismo of Pol Andiñach](https://www.txalaparta.eus/es/libros/todo-el-mundo-puede-ser-antifa) gathers some of them.
    One way we've seen pisses them off quite much is when they are ridiculed and
    they evocate the image of incompetence. It's a fine line to go, because if it
    falls into a pity image then it may strengthen their victim role.
### [Antifascist Actions](antifascist_actions.md)
* New: [An open data initiative to map spanish fascist icons.](antifascist_actions.md#an-open-data-initiative-to-map-spanish-fascist-icons)
    The project [DeberíaDesaparecer](https://deberiadesaparecer.com) have created an
    open database of the remains of the spanish fascist regime icons. The
    visualization they've created is astonishing, and they've provided
    a [form](https://docs.google.com/forms/d/e/1FAIpQLSc8jY6y0vcjQKNJBougQG_gTOUSfZGBhponOiwij9xVIwIafA/viewform?embedded=true)
    so that anyone can contribute to the dataset.
* New: [An open data initiative to map spanish hate crimes.](antifascist_actions.md#an-open-data-initiative-to-map-spanish-hate-crimes)
    The project [Crimenes de Odio](https://crimenesdeodio.info/es/) have created an open database of the hate crimes registered in the spanish state.
## Feminism
### [Privileges](privileges.md)
* New: How to reduce online racism.
    Add article [How to reduce online racism by Mark Holden](https://www.websiteplanet.com/blog/how-to-reduce-online-racism), a long essay with interesting tips and a lot of useful visualizations, I haven't checked the sources but it looks legit. (Thanks for the recommendation Laurie `:)`).
## [Mentoring](mentoring.md)
* New: Introduce the concept and guidelines of mentorship.
    [Mentoring](https://en.wikipedia.org/wiki/Mentorship) is a process for the
    informal transmission of knowledge, social capital, and the psychosocial support
    perceived by the recipient as relevant to work, career, or professional
    development; mentoring entails informal communication, usually face-to-face and
    during a sustained period of time, between a person who is perceived to have
    greater relevant knowledge, wisdom, or experience (the mentor) and a person who
    is perceived to have less (the apprentice).
## [Environmentalism](environmentalism.md)
* New: Introduce carbon fingerprint calculation tools.
    Measure the carbon footprint of your travels
    https://www.carbonfootprint.com/
    There are also some calculators for events itself:
    https://co2.myclimate.org/en/event_calculators/new
    https://psci.princeton.edu/events-emissions-calculator
* New: [Saving water.](environmentalism.md#saving-water)
    Here are some small things I'm doing to save some water each day:
    - Use the watering can or a bucket to gather the shower water until it's warm
      enough. I use this water to flush the toilet. It would be best if it were
      possible to fill up the toilet's deposit, but it's not easy.
    - Use a glass of water to wet the toothbrush and rinse my mouth instead of using
      running water.
# Life Management
## Task Management
### [OpenProject](task_tools.md)
* New: Introduce OpenProject.
    [OpenProject](https://www.openproject.org/) is an Open source project management
    software.
    The benefits over other [similar software
    are](task_tools.md#web-based-task-manager):
    * It's popular: More than 6.2k stars on github, 1.7k forks.
    * [It's development is active](https://github.com/opf/openproject/pulse): in the
        last week they've merged 44 merged pull requests by 16 people.
    * They use their own software to [track their bugs](https://community.openproject.org/projects/openproject/)
    * [Easy to install](https://github.com/opf/openproject-deploy)
    * Easy to use
    * The community version is flexible enough to adapt to different workflows.
    * [Good installation and operation's documentation](https://www.openproject.org/docs/installation-and-operations/).
    * Very good API documentation.
    * Supports LDAP
    The things I don't like are:
    * Data can be exported as XML or CSV but it doesn't export everything. You have
        access to the database though, so if you'd like a better extraction of the
        data you in theory can do a selective dump of whatever you need.
    * It doesn't yet have [tag support](https://community.openproject.org/projects/openproject/work_packages/32181/activity).
        You can meanwhile add the strings you would use as tags in the description,
        and then filter by text in description.
    * There is no demo instance where you can try it. It's easy though to launch
        a [Proof of Concept environment yourself](#proof-of-concept) if you already
        know `docker-compose`.
    * Even thought the [Community (free) version has many features](https://www.openproject.org/pricing/#features) the next aren't:
        * [Status boards](https://www.openproject.org/docs/user-guide/agile-boards/#status-board):
            you can't have Kanban boards that show the state of the issues as
            columns. You can make it yourself through a Basic board and with the
            columns as the name of the state. But when you transition an issue from
            state, you need to move the issue and change the property yourself. I've
            thought of creating a script that works with the API to do this
            automatically, maybe through the webhooks of the openproject, but it
            would make more sense to spend time on `pydo`.
        * [Version boards](https://www.openproject.org/docs/user-guide/agile-boards/#version-board):
            Useful to transition issues between sprints when you didn't finish them
            in time. Probably this is easily solved through bulk editing the issues.
        * [Custom actions](https://www.openproject.org/docs/system-admin-guide/manage-work-packages/custom-actions/)
            looks super cool, but as this gives additional value compared with the
            competitors, I understand it's a paid feature.
        * [Display relations in the work package list](https://www.openproject.org/docs/user-guide/work-packages/work-package-relations-hierarchies/#display-relations-in-work-package-list-premium-feature):
            It would be useful to quickly see which tasks are blocked, by whom and
            why. Nothing critical though.
        * [Multiselect custom fields](https://www.openproject.org/docs/system-admin-guide/custom-fields/#create-a-multi-select-custom-field-premium-feature):
            You can only do single valued fields. Can't understand why this is
            a paid feature.
        * 2FA authentication is only an Enterprise feature.
        * [OpenID and SAML](https://www.openproject.org/docs/system-admin-guide/authentication/openid-providers/)
            are an enterprise feature.
    Also included:
    * [How to install it](openproject.md#installation)
    * [How to operate it](openproject.md#operation)
    * [Tips](openproject.md#tips)
* New: [Web based task manager.](task_tools.md#web-based-task-manager)
    Life happened and the development of [pydo](https://lyz-code.github.io/pydo) has
    fallen behind in my priority list. I've also reached a point where [simplest
    one](#the-simplest-task-manager) is no longer suitable for my workflow because:
    * I loose a lot of time in the reviews.
    * I loose a lot of time when doing the different plannings (year, trimester,
        month, week, day).
    * I find it hard to organize and refine the backlog.
    As `pydo` is not ready yet and I need a solution that works *today* better than
    the simplest task manager, I've done an analysis of the state of the art of
    [self-hosted applications](https://github.com/awesome-selfhosted/awesome-selfhosted#software-development---project-management)
    of all of them the two that were more promising were [Taiga](task_tools.md#taiga) and
    [OpenProject](task_tools.md#openproject).
    Finally I chose [OpenProject](openproject.md).
* New: [Deal with big number of tasks.](openproject.md#deal-with-big-number-of-tasks)
    As the number of tasks increase, the views of your work packages starts becoming
    more cluttered. As you
    [can't fold the hierarchy trees](https://community.openproject.org/projects/openproject/work_packages/31918/activity)
    it's difficult to efficiently manage your backlog.
    I've tried setting up a work package type that is only used for the subtasks so
    that they are filtered out of the view, but then you don't know if they are
    parent tasks unless you use the details window. It's inconvenient but having to
    collapse the tasks every time it's more cumbersome. You'll also need to reserve
    the selected subtask type (in my case `Task`) for the subtasks.
* New: [Sorting work package views.](openproject.md#sorting-work-package-views)
    They are sorted alphabetically, so the only way to sort them is by prepending a
    number. You can do `0. Today` instead of `Today`. It's good to do big increments
    between numbers, so the next report could be `10. Backlog`. That way if you
    later realize you want another report between Today and Backlog, you can use
    `5. New Report` and not rename all the reports.
* New: [Pasting text into the descriptions.](openproject.md#pasting-text-into-the-descriptions)
    When I paste the content of the clipboard in the description, all new lines are
    removed (`\n`), the workaround is to paste it inside a `code snippet`.
### [Task Management Workflows](life_planning.md)
* Correction: Update the task workflow of the month, and week plannings.
* Correction: Update the workflows.
    To suggest to use a script to follow them
## [Life review](life_review.md)
* New: How to review your life.
    Sometimes is good to stop, get into your cave and do an introspection on how is
    your life going.
    I like to do this exercise the last week of the year. Although I'd like to do it
    at least twice a year.
    This article is the checklist I follow to do my life review, it may seem a lot
    to you or maybe very simple. You can take it as a base or maybe to get some
    ideas and then create your own that fits your needs.
    The process then has many phases:
    - [Housekeeping](life_review.md#housekeeping)
    - [Analysis](life_review.md#analysis)
    - [Planning](life_review.md#planning)
## [News Management](news_management.md)
* New: Introduce news management.
    The information world of today is overwhelming. It can reach a point that you
    just want to disconnect so as to avoid the continuous bombardment, but that
    leads to loosing connection with what's happening in the world. Without knowing
    what's going on it's impossible to act to shape it better.
    I've started analyzing how to filter the content.
* New: [News management workflow explained.](news_management.md#workflow)
## [Calendar Management](calendar_management.md)
* New: Introduce Calendar Management.
    Since the break of my taskwarrior instance I've used a physical calendar to
    manage the tasks that have a specific date. Can't wait for
    the first version of [`pydo`](https://github.com/lyz-code/pydo) to be finished.
    The next factors made me search for a temporal solution:
    * It's taking longer than expected.
    * I've started using a nextcloud calendar with some friends.
    * I frequently use Google calendar at work.
    * I'm sick of having to log in Nexcloud and Google to get the day's
        appointments.
    To fulfill my needs the solution needs to:
    * Import calendar events from different sources, basically through
        the [CalDAV](http://en.wikipedia.org/wiki/CalDAV) protocol.
    * Have a usable terminal user interface
    * Optionally have a command line interface or python library so it's easy to make scripts.
    * Optionally it can be based in python so it's easy to contribute
    * Support having a personal calendar mixed with the shared ones.
    * Show all calendars in the same interface
    Looking at the available programs I found [`khal`](khal.md), which looks like
    it may be up to the task.
    Go through the [installation](khal.md#installation) steps and configure the
    instance to have a local calendar.
    If you want to sync your calendar events through CalDAV, you need to set
    [vdirsyncer](vdirsyncer.md).
## [Food Management](food_management.md)
* New: Introduce my food management workflow.
    As humans diet is an important factor in our health, we need to eat daily around
    three times a day, as such, each week we need to invest time into managing how
    to get food in front of us. Tasks like thinking what do you want to eat, buying
    the ingredients and cooking them make use a non negligible amount of time. Also
    something to keep in mind, is that eating is one of the great pleasures in our
    lives, so doing it poorly is a waste. The last part of the equation is that to
    eat good you either need time or money.
    This article explores my thoughts and findings on how to optimize the use of
    time, money and mental load in food management while keeping the desired level
    of quality to enjoy each meal, being healthy and following the principles of
    ecology and sustainability. I'm no expert at all on either of these topics. I'm
    learning and making my mind while writing these lines.
## [Grocy Management](grocy_management.md)
* New: Introduce my grocy management workflow.
    Buying stuff is an unpleasant activity that drains your energy and
    time, it's the main perpetrator of the broken capitalist system, but sadly we
    have to yield to survive.
    This article explores my thoughts and findings on how to optimize the use of
    time, money and mental load in grocy management to have enough stuff stored to
    live, while following the principles of ecology and sustainability. I'm no
    expert at all on either of these topics. I'm learning and making my mind while
    writing these lines.
    [grocy](https://grocy.info/) is a web-based self-hosted groceries & household
    management solution for your home.
    It is really easy to deploy if you know how to use
    [Docker](https://en.wikipedia.org/wiki/Docker_%28software%29). The hard part
    comes when you do the initial load, as you have to add all the:
    * User attributes.
    * Product locations.
    * Product groups.
    * Quantity conversions.
    * Products.
# Health
## [Sleep](sleep.md)
* New: [How your brain generates sleep.](sleep.md#how-your-brain-generates-sleep)
    Brainwave activity of REM sleep looks similar to the one you have when you're
    awake. They cycle (going up and down) at a fast frequency of thirty or forty
    times per second in an unreliable pattern. This behaviour is explained by the
    fact that different parts of your waking brain are processing different pieces
    of information at different moments in time and in different ways.
# Coding
## [Learning to code](code_learning.md)
* New: Introduce guidelines to learn how to code.
    Learning to code is a never ending, rewarding, frustrating, enlightening task.
    In this article you can see what is the generic roadmap (in my personal opinion)
    of a developer. As each of us is different, probably a generic roadmap won't
    suit your needs perfectly, if you are new to coding, I suggest you find
    a [mentor](mentoring.md) so you can both tweak it to your case.
* New: [Suggest a workflow to learn Git.](code_learning.md#git)
    [Git](git.md) is a software for tracking changes in any set of files, usually