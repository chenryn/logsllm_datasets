### Antenna Array and Target Device Localization

The antenna array is attached to the table, with antennas randomly placed at various angles and orientations. We utilize this array to capture and analyze the emitted signals from the target device, enabling us to predict its current position and orientation. Our experiments have shown that our phone locator program typically requires four antennas at different locations to infer the phone's location within 3 seconds, using a sampling rate of 1 MHz. Once we have determined the precise location of the target device, we switch the antenna array from monitor mode to attack mode by activating the corresponding relays.

### Attack Setup and Execution

Based on the target phone model, we select the appropriate interference frequency and amplitude. Our attack setup can launch two types of attacks against touchscreen devices: precise touch event injection or a sequence of touch events at different locations as needed.

#### Leveraging Siri on iOS Devices

Installing unauthorized applications on iOS devices is challenging due to strict application distribution policies. Instead, we exploit our touch event injection attack to abuse Apple’s accessory discovery mechanism for data exfiltration. An iOS device automatically detects nearby unpaired Apple accessories, such as AirPods. When these devices are detected, a notification prompts the user to pair and connect. The user only needs to tap the "Connect" button, which is always displayed at a fixed location. In our experiments, the "Connect" button size is approximately 5.5 cm by 1 cm, occupying roughly 2/3 of the screen width on an iPhone 11 Pro, making it easier to target. On an iPad Pro, the button is smaller relative to the screen size, but our attack remains feasible due to its accuracy (see Section VII and Table II).

We conducted an experiment to validate the attack on a randomly placed iPhone 11 Pro and iPad Pro 2020 using unpaired AirPods. After successfully pairing, we used Siri to read out new messages from the victim devices. To evaluate the success rate, we used our touch event application to draw a square space the same size as the confirmation button. The attack was successful 6 out of 10 times on the iPad Pro within 12 seconds and 9 out of 10 times on the iPhone 11 Pro within 9 seconds. The main point of failure for the iPad Pro was the large distance between IEMI antennas, which limited the ability to place at least one antenna over the confirmation button. The current configuration balances antenna array coverage and density based on the target device's screen size.

#### Installing Malicious Applications on Android Devices

To attack Android-based touchscreen devices, we use our IEMI to inject multiple touch events at different screen locations. Specifically, we assume the attacker knows the victim's phone number and sends a message containing a link to a malicious application. To install the app, we need to generate five distinct touch events in sequence, including tapping the notification, choosing the action for the link, allowing the APK file to be saved, installing the APK after downloading, and opening the APK. Using a OnePlus 7 Pro, we first measure the location and orientation of the victim device. We then send a message with the download link and use one IEMI antenna pointing to the middle of the screen and two at the bottom to inject the touch events. Each touch event is evaluated before proceeding to the next. Out of 10 experiments, we achieved three successful attacks. Most failures were due to incorrect touch events on adjacent buttons. A better-designed IEMI antenna could focus the E-field on a smaller area, improving the attack's robustness.

### Attack Vectors with Human Operation

In addition to static antenna arrays, more powerful attacks can be carried out using programmable mechanical systems, such as miniature 3D printers or robotic arms. These systems can mimic human finger and arm movements, enhancing the precision of the attacks. We manually maneuvered our IEMI antennas to simulate these attacks, achieving the following outcomes:

- **Send Message (Short-Tap):** We can send a specific message to a recipient, such as replying to a text verification request from a bank. On an iPhone 11 Pro, we generated short-tap touch events to send a confirmation message, taking less than 10 seconds.
- **Send Money (Press-and-Hold):** On iOS, press-and-hold can activate shortcuts, such as sending money via PayPal. We continuously applied our interference signal to trigger the feature, moving the antenna to select the "Send Money" option. This attack was successful 7 out of 10 times within 5 seconds.
- **Unlock Gesture Lock Screen (Omni-Directional-Swipe):** We can inject omni-directional swipes with controllable duration. We evaluated this by trying to unlock a gesture-protected application on an iPad Pro. The attack was successful 3 out of 5 times within 5 seconds.

### Countermeasures

#### Force Detection

High-end touchscreen controllers can detect the force applied on the screen, filtering out ghost touches. For devices without this feature, we used a barometer to detect pressure changes. For example, the barometer value on the Pixel 2 changes 0.3 hPa when the screen is pressed. This method is limited to Android devices with water resistance.

#### Low-Cost Accessory

End users can use smartphone cases with metal front covers to block EM interference. We tested a regular phone case with a Faraday Fabric inner layer, which effectively defended against our attacks, except for rare ghost touches at the edge of the touchscreen.

### Related Work

#### IEMI Attacks

IEMI attacks have been applied to various devices, including medical devices, smartphones, embedded systems, and autonomous vehicles. Previous studies have demonstrated the vulnerability of these systems to high and low-frequency IEMI attacks. For instance, Kune et al. showed how IEMI can be used to create interference on analog sensors and medical devices.

#### Touchscreen Attacks

Several attacks targeting touchscreens have been presented, primarily focused on passive information exfiltration. Only a few papers have described active touchscreen attacks using IEMI. Maruyama et al. introduced Tap’n Ghost, which leverages injected noise signals and programmed NFC tags. Our attack, however, can cause intentional ghost touches without user interaction, unlike previous methods that required synchronization with the touchscreen's driving mechanism.

### Conclusions and Future Work

We developed and validated a novel IEMI attack on modern capacitive touchscreens, demonstrating the vulnerability in various commercial devices. We addressed limitations in previous attacks and proposed countermeasures. In the future, we plan to increase the attack distance and accuracy using different antenna designs, such as longer waveguides, phased array antennas, and Yagi-Uda antennas.

### Acknowledgment

We appreciate the reviewers' constructive suggestions. This work is supported by the National Institute of Standards and Technology, Intel, and the National Science Foundation under award number 1818500.