Null: NO
Key: PRI
Default:
Extra:
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\* 6. row
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*
Field: Timestamp
Type: timestamp
Null: NO
Key:
Default: CURRENT_TIMESTAMP
Extra: on update CURRENT_TIMESTAMP
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\* 7. row
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*
Field: Column_priv
Type: set(\'Select\',\'Insert\',\'Update\',\'References\')
Null: NO
Key:
Default:
Extra:
7 rows in set (0.01 sec)
查看columns_priv表的结构，以表格形式展现：
**mysql\> desc columns_priv;**
//查看表结构，以表格形式展现末尾需要有分号
(字段名   ＋字段类型  ＋是否为空＋是否为主键＋默认值＋描述信息）
+\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-- +\-\-\-\-- +\-\-\-\-\-\-\-\-\-\-- +\-\-\-\-\-\-\-\-\--+
\| Field \| Type     \| Null  \|  Key \| Default \| Extra \|
+\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| Host \| char(60) \| NO \| PRI \| \| \|
\| Db \| char(64) \| NO \| PRI \| \| \|
\| User \| char(32) \| NO \| PRI \| \| \|
\| Table_name \| char(64) \| NO \| PRI \| \| \|
\| Column_name \| char(64) \| NO \| PRI \| \| \|
\| Timestamp \| timestamp \| NO \| \| CURRENT_TIMESTAMP \| on update
CURRENT_TIMESTAMP \|
\| Column_priv \| set(\'Select\',\'Insert\',\'Update\',\'References\')
\| NO \| \| \| \|
+\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
7 rows in set (0.00 sec)
上述操作中，当引用非当前库中的表时，可以用"**库名.表名**"的形式。比如，切换为mysql库再执行"desc
columns_priv;"，与以下操作的效果是相同的：
**mysql\> desc mysql.columns_priv;**
+\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| Field \| Type \| Null \| Key \| Default \| Extra \|
+\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| Host \| char(60) \| NO \| PRI \| \| \|
\| Db \| char(64) \| NO \| PRI \| \| \|
\| User \| char(16) \| NO \| PRI \| \| \|
\| Table_name \| char(64) \| NO \| PRI \| \| \|
\| Column_name \| char(64) \| NO \| PRI \| \| \|
\| Timestamp \| timestamp \| NO \| \| CURRENT_TIMESTAMP \| on update
CURRENT_TIMESTAMP \|
\| Column_priv \| set(\'Select\',\'Insert\',\'Update\',\'References\')
\| NO \| \| \| \|
+\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
7 rows in set (0.00 sec)
#### 3）在test库中创建一个名为pwlist的表
包括name、password两列，其中name列作为主键。两个字段值均不允许为空，其中密码列赋予默认空值，相关操作如下所述。
切换到mydb库：
mysql\> use mydb;
Database changed
新建pwlist表：
mysql\> create table pwlist(
-\> name char(16) not null,
-\> password char(48)default \'\',
-\> primary key(name)
-\> );
Query OK, 0 rows affected (0.38 sec)
确认新创建的表：
mysql\> show tables;
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| Tables_in_mydb \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| pwlist \| //新建的pwlist表
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
1 rows in set (0.01 sec)
查看pwlist表的字段结构：
mysql\> desc pwlist;
+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| Field \| Type \| Null \| Key \| Default \| Extra \|
+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| name \| char(16) \| NO \| PRI \| NULL \| \|
\| password \| char(48) \| YES \| \| \| \|
+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
2 rows in set (0.01 sec)
#### 4）drop删除指定的表
删除当前库中的pwlist表：
mysql\> drop table pwlist;
Query OK, 0 rows affected (0.01 sec)
确认删除结果：
mysql\> show tables;
Empty set (0.00 sec)
#### 在mydb库中创建新表并-指定字符集
创建一个表，等于就是载／vat/lib/mysql/库名目录/表名文件
表格结构及数据内容如表-1所示。
   在MySQL表内存储中文数据时，需要更改字符集（默认为latin1不支持中文），以便MySQL支持存储中文数据记录；比如，可以在创建库或表的时候，手动添加"DEFAULT
CHARSET=utf8"来更改字符集。
根据上述表格结构，创建支持中文的student表：
mysql\> CREATE TABLE mydb.student(
-\> 学号 char(9) NOT NULL,
-\> 姓名 varchar(4) NOT NULL,
-\> 性别 enum(\'男\',\'女\') NOT NULL,
-\> 手机号 char(11) DEFAULT \'\',
-\> 通信地址 varchar(64),
-\> PRIMARY KEY(学号)
-\> ) DEFAULT CHARSET=utf8; //手工指定字符集，采用utf8
Query OK, 0 rows affected (0.31sec)
注意：若要修改MySQL服务的默认字符集，可以更改服务器的my.cnf配置文件，添加character_set_server=utf8
配置，然后重启数据库服务。
\[root@dbsvr1 \~\]# vim /etc/my.cnf //修改运行服务配置
\[mysqld\]
.. ..
character_set_server=utf8
\[root@dbsvr1 \~\]# systemctl restart mysqld //重启服务
.. ..
#### 6) 查看desc表的字段结构：
mysql\> desc mydb.student;
+\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| Field \| Type \| Null \| Key \| Default \| Extra \|
+\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| 学号 \| char(9) \| NO \| PRI \| NULL \| \|
\| 姓名 \| varchar(4) \| NO \| \| NULL \| \|
\| 性别 \| enum(\'男\',\'女\')  \| NO \| \| NULL \| \|
\| 手机号 \| char(11) \| YES \| \| \| \|
\| 通信地址 \| varchar(64) \| YES \| \| NULL \| \|
+\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
5 rows in set (0.00 sec)
#### 7）show create table查看表的实际创建指令：
mysql\> show create table mydb.student;
\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\|Table \|Create Table \|

\| student \| CREATE TABLE \`student\` (
\`学号\` char(9) NOT NULL,
\`姓名\` varchar(4) NOT NULL,
\`性别\` enum(\'男\',\'女\') NOT NULL,
\`手机号\` char(11) DEFAULT \'\',
\`通信地址\` varchar(64) DEFAULT NULL,
PRIMARY KEY (\`学号\`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 \|
+\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--1
row in set (0.00 sec)
\[root@dbsvr1 \~\]# mysql --u root -p
Enter password:
.. ..
mysql\> SHOW VARIABLES LIKE \'character%\'; //确认更改结果
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| Variable_name \| Value \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| character_set_client \| utf8 \|
\| character_set_connection \| utf8 \|
\| character_set_database \| utf8 \|
\| character_set_filesystem \| binary \|
\| character_set_results \| utf8 \|
\| character_set_server \| utf8 \|
\| character_set_system \| utf8 \|
\| character_sets_dir \| /usr/share/mysql/charsets/ \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
8 rows in set (0.03 sec
####  show variables like搜索数据库中关键字
**1查看字符集**
mysql\> show variables like \'character%\';
**2查看权限自己 show grants**
mysql\> show grants ; #默认是看root,,,show grants for tom可查看tom的
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| Grants for root@localhost \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| GRANT ALL PRIVILEGES ON \*.\* TO \'root\'@\'localhost\' WITH GRANT
OPTION \|
\| GRANT PROXY ON \'\'@\'\' TO \'root\'@\'localhost\' WITH GRANT OPTION
\|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
2 rows in set (0.00 sec)
**3查看主从中从库信息**
mysql\>show slave status\\G;
**4查看是否允许你加载模块**(mysql主从同步复制模块)
mysql\> show variables like \'have_dynamic_loading\' ;
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| Variable_name \| Value \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| have_dynamic_loading \| YES \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
1 row in set (0.00 sec)
**5查看binlog日志show master status;**
### 步骤四：记录管理命令
#### 查看表记录select \* from 表名
mysql\> select \* from t1;
+\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\--+
\| name \| age \| sex \|
+\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\--+
\| bob \| 21 \| boy \|
+\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\--+
1 row in set (0.00 sec)
#### 插入表记录：insert into 表名 values(值列表)
mysql\> insert into t1 values (\"bob\",19,\"boy\") ;
#### 修改表记录：update 库名.表名 set 字段=值 where
Update 库名.表名 set 字段＝值 where \....
将ygt表中的ygt_id=3中的数据中的ygt_id数据改为8
update ygt set ygt_id=8 where ygt_id=3;
mysql\> select \* from t1;
+\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\--+
\| name \| age \| sex \|
+\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\--+
\| bob \| 19 \| boy \|
+\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\--+
1 row in set (0.00 sec)
mysql\> update db1.t1 set age=21;
Query OK, 1 row affected (0.02 sec)
Rows matched: 1 Changed: 1 Warnings: 0
mysql\> select \* from t1;
+\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\--+
\| name \| age \| sex \|
+\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\--+
\| bob \| 21 \| boy \|
+\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\--+
1 row in set (0.00 sec)
#### delete删除某一条表记录
mysql\> select \* from t1;
+\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\--+
\| name \| age \| sex \|
+\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\--+
\| bob \| 21 \| boy \|
+\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\--+
1 row in set (0.00 sec)
mysql\> delete from db1.t1 where name=\"bob\";
Query OK, 1 row affected (0.03 sec)
#### delete删除所有表记录（表还在）
delete from 表名
mysql\> delete from db1.t1;
Query OK, 2 rows affected (0.04 sec)
## 3 MySQL 数据类型
### 常见的信息种类
![LINUXNSD_V01DBA1DAY01_039](media/image9.png){width="2.8930555555555557in"
height="1.4861111111111112in"}
枚举型：指定的值范围中选一个，比如性别整数/
### 浮点数数值类型：
![LINUXNSD_V01DBA1DAY01_041](media/image10.png){width="4.795833333333333in"
height="3.5006944444444446in"}
创建表是指定了字符类型后，默认是有符号的存储范围
mysql\> create table t2(age tinyint);
Query OK, 0 rows affected (0.22 sec)
#### 创建表时指定类型为无符号存储范围
mysql\> create table t3(age tinyint unsigned);
Query OK, 0 rows affected (0.26 sec)
mysql\> desc t2 ;
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| Field \| Type \| Null \| Key \| Default \| Extra \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| age \| tinyint(4) \| YES \| \| NULL \| \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
1 row in set (0.00 sec)
mysql\> desc t3;
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| Field \| Type \| Null \| Key \| Default \| Extra \|