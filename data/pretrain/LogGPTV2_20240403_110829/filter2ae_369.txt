### 一、前言
本文由i春秋作者[@wxcstc](http://bbs.ichunqiu.com/thread-12047-1-1.html?from=paper)撰写，旨在分享对一个加密过的VBS脚本病毒代码的分析过程。如果您发现文中的任何错误或有任何建议，请直接留言给我，非常感谢！

### 二、目录
整个分析过程可以分为以下几个部分：
- 准备工作
- 解密部分
- 功能分析

### 三、分析过程
#### 准备工作
- 使用Windows XP虚拟机（也可在其他版本的Windows上进行）
- 熟悉VBS的基本语法

#### 解密部分
首先，右击病毒文件并选择“编辑”打开，或者直接将文件后缀修改为.txt来查看内容。可以看到一大段密文，并且调用了名为`deCrypt`的函数。

接着，在代码底部发现了第二次`deCrypt`调用，这意味着该代码经过了两次加密处理。为了便于后续分析，我们注释掉执行部分并将解密结果输出到文本文件中。进一步观察发现，这段代码使用Base64进行了加密。

接下来，我们继续解码得到的结果。此时显示的内容仍然不可读，通过深入研究发现，字符串被按照“|dz|”分割成多个ASCII码值，将其转换为对应的字符即可获得可读性更高的文本。再次将此步骤的解密结果输出到文件中以供进一步分析。

最终，我们得到了真正的病毒代码，接下来将对其进行功能层面的剖析。

#### 功能分析
从头开始逐行阅读代码。首先展示了一些配置信息，包括服务器域名。经查询得知该服务器位于美国，但尝试ping时未能成功连接，可能是由于服务器设置了防火墙规则、已停止服务或是受到中国互联网审查的影响所致。

紧接着定义了一系列将在后续过程中使用的变量。然后是`code start`部分，其中调用了多个函数。为了便于理解，我们将按照执行顺序给这些函数编号：

**1. instance函数**
- 为参数`usbspreading`赋值
- 对注册表进行写入操作

执行完`instance`函数之后，程序进入了一个无限循环(`while true`)，不断从远程服务器接收命令并执行。在此循环内部，首先调用了`install`过程。

**2. install过程**
- 调用`upstart`子过程
  - **2.1 upstart过程**：通过修改注册表项使病毒脚本能够在系统启动时自动运行
  
回到`install`过程剩余的部分，这部分代码较多，主要实现以下功能：
- 扫描所有驱动器，寻找类型号为1（即代表可移动存储设备）的目标；
- 将病毒脚本复制到这些设备的根目录下，并设置其属性为隐藏且只读；
- 遍历目标设备上的所有非快捷方式文件，并将它们设置为隐藏和系统文件；
- 创建指向`cmd.exe`的快捷方式，使得当用户点击时会先运行病毒脚本再打开原文件，最后关闭命令提示符窗口；
- 对根目录下的文件夹执行相同的操作。

至此，对`install`子程序的分析结束。接下来是`post`函数的解析。

**3. post函数**
- 向服务器发送受感染计算机的相关信息
- 从服务器接收新的指令
- 在此过程中还调用了`information`函数用于收集硬盘序列号、操作系统详情及安装的安全软件列表等数据

完成上述步骤后，程序将根据接收到的不同命令采取相应行动，这一步骤通过VBS中的`switch...case...`结构实现。
  
更多详细内容请参阅原文链接：[http://bbs.ichunqiu.com/thread-12047-1-1.html?from=paper](http://bbs.ichunqiu.com/thread-12047-1-1.html?from=paper)