    END
    ```
6.  创建 `IPaddr2`{.literal} 和 `apache`{.literal}
    资源，供群集管理。\'IPaddr2\' 资源是一个浮动 IP
    地址，它不能是一个已经与物理节点关联的 IP 地址。如果没有指定
    \'IPaddr2\' 资源的 NIC 设备，浮动 IP 必须位于与静态分配的 IP
    地址相同的网络中。
    您可以使用 `pcs resource list`{.literal}
    命令显示所有可用资源类型的列表。您可以使用
    `pcs resource describe resourcetype`{.literal}
    命令显示您可以为指定资源类型设置的参数。例如，以下命令显示您可以为
    `apache`{.literal} 类型的资源设置的参数：
    ``` literallayout
    # pcs resource describe apache
    ...
    ```
    在本例中，IP 地址资源和 apache 资源都配置为名为
    `apachegroup`{.literal}
    的组的一部分，这样可确保资源在配置正常工作的多节点群集时在同一节点上运行。
    ``` literallayout
    # pcs resource create ClusterIP ocf:heartbeat:IPaddr2 ip=192.168.122.120 --group apachegroup
    # pcs resource create WebSite ocf:heartbeat:apache configfile=/etc/httpd/conf/httpd.conf statusurl="http://localhost/server-status" --group apachegroup
    # pcs status
    Cluster name: my_cluster
    Stack: corosync
    Current DC: z1.example.com (version 2.0.0-10.el8-b67d8d0de9) - partition with quorum
    Last updated: Fri Oct 12 09:54:33 2018
    Last change: Fri Oct 12 09:54:30 2018 by root via cibadmin on z1.example.com
    1 node configured
    2 resources configured
    Online: [ z1.example.com ]
    Full list of resources:
    Resource Group: apachegroup
        ClusterIP  (ocf::heartbeat:IPaddr2):       Started z1.example.com
        WebSite    (ocf::heartbeat:apache):        Started z1.example.com
    PCSD Status:
      z1.example.com: Online
    ...
    ```
    配置集群资源后，您可以使用 `pcs resource config`{.literal}
    命令显示为该资源配置的选项。
    ``` literallayout
    # pcs resource config WebSite
    Resource: WebSite (class=ocf provider=heartbeat type=apache)
     Attributes: configfile=/etc/httpd/conf/httpd.conf statusurl=http://localhost/server-status
     Operations: start interval=0s timeout=40s (WebSite-start-interval-0s)
                 stop interval=0s timeout=60s (WebSite-stop-interval-0s)
                 monitor interval=1min (WebSite-monitor-interval-1min)
    ```
7.  将浏览器指向使用您配置的浮动 IP
    地址创建的网站。这个命令会显示您定义的文本信息。
8.  停止 apache web 服务并检查集群的状态。使用 `killall -9`{.literal}
    模拟应用程序级别的崩溃。
    ``` literallayout
    # killall -9 httpd
    ```
    检查集群状态。您应该看到停止 web
    服务会导致操作失败，但集群软件会重启该服务，您应该仍然可以访问网站。
    ``` literallayout
    # pcs status
    Cluster name: my_cluster
    ...
    Current DC: z1.example.com (version 1.1.13-10.el7-44eb2dd) - partition with quorum
    1 node and 2 resources configured
    Online: [ z1.example.com ]
    Full list of resources:
    Resource Group: apachegroup
        ClusterIP  (ocf::heartbeat:IPaddr2):       Started z1.example.com
        WebSite    (ocf::heartbeat:apache):        Started z1.example.com
    Failed Resource Actions:
    * WebSite_monitor_60000 on z1.example.com 'not running' (7): call=13, status=complete, exitreason='none',
        last-rc-change='Thu Oct 11 23:45:50 2016', queued=0ms, exec=0ms
    PCSD Status:
        z1.example.com: Online
    ```
    您可以在服务启动并再次运行后，清除失败的资源中的失败状态。当您查看集群状态时，失败的操作通知将不再出现。
    ``` literallayout
    # pcs resource cleanup WebSite
    ```
9.  当您完成查看集群和集群状态后，停止节点上的集群服务。即使为此简介仅在一个节点上启动服务，但包含
    `--all`{.literal}
    参数，因为它将停止实际多节点群集上所有节点上的群集服务。
    ``` literallayout
    # pcs cluster stop --all
    ```
:::
:::
::: section
::: titlepage
# []{#assembly_getting-started-with-pacemaker-configuring-and-managing-high-availability-clusters.html#proc_learning-to-configure-failover-getting-started-with-pacemaker}了解配置故障转移 {.title}
:::
此流程介绍了创建一个运行了一个服务的 Pacemaker
集群，当该服务所在的节点不可用时，服务会切换到另一个节点。通过这个步骤，您可以了解如何在双节点集群中创建服务，并可以查看在运行该服务的节点出现问题时会出现什么情况。
这个示例步骤配置一个运行 Apache HTTP 服务器的双节点 Pacemaker
集群。然后，您可以停止一个节点上的 Apache 服务来查看该服务仍然可用。
在本例中：
::: itemizedlist
-   节点为 `z1.example.com`{.literal} 和 `z2.example.com`{.literal}。
-   浮动 IP 地址为 192.168.122.120。
:::
::: itemizedlist
**先决条件**
-   运行 RHEL 8 的两个节点可以相互通信
-   与节点静态分配的 IP 地址之一驻留在同一网络中的浮动 IP 地址
-   运行的节点的名称位于 `/etc/hosts`{.literal} 文件中
:::
::: orderedlist
**流程**
1.  在这两个节点上，从 High Availability
    频道安装红帽高可用性附加组件软件包，并启动并启用 `pcsd`{.literal}
    服务。
    ``` literallayout
    # yum install pcs pacemaker fence-agents-all
    ...
    # systemctl start pcsd.service
    # systemctl enable pcsd.service
    ```
    如果您正在运行 `firewalld`{.literal}
    守护进程，在这两个节点上启用红帽高可用性附加组件所需的端口。
    ``` literallayout
    # firewall-cmd --permanent --add-service=high-availability
    # firewall-cmd --reload
    ```
2.  在集群的两个节点上，为用户 `hacluster`{.literal} 设置密码。
    ``` literallayout
    # passwd hacluster
    ```
3.  在您要运行 `pcs`{.literal} 命令的节点上，为集群中的每个节点验证用户
    `hacluster`{.literal}。
    ``` literallayout
    # pcs host auth z1.example.com z2.example.com
    ```
4.  创建名为 `my_cluster`{.literal}
    的群集，两个节点都是群集成员。这个命令会创建并启动集群。您只需要从集群中的一个节点运行此操作，因为
    `pcs`{.literal} 配置命令对整个集群有效。
    在集群的一个节点中运行以下命令。
    ``` literallayout
    # pcs cluster setup my_cluster --start z1.example.com z2.example.com
    ```
5.  红帽高可用性集群要求为集群配置隔离功能。[Fencing in a Red Hat High
    Availability
    Cluster](https://access.redhat.com/solutions/15575){.link}
    包括了这个要求的原因。然而，在本简介中，只显示在此配置中故障转移的工作方式，通过将
    `启用了stonith 的集群`{.literal} 选项设置为
    `false`{.literal}来禁用隔离
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    对生产环境集群而言，`stonith-enabled=false`{.literal}
    的使用完全不合适。它通知集群，假设出现故障的节点已被安全隔离。
    :::
    ``` literallayout
    # pcs property set stonith-enabled=false
    ```
6.  创建集群并禁用隔离后，检查集群的状态。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    运行 `pcs cluster status`{.literal}
    命令时，可能会显示在系统组件启动时暂时与示例稍有不同的输出。
    :::
    ``` literallayout
    # pcs cluster status
    Cluster Status:
     Stack: corosync
     Current DC: z1.example.com (version 2.0.0-10.el8-b67d8d0de9) - partition with quorum
     Last updated: Thu Oct 11 16:11:18 2018
     Last change: Thu Oct 11 16:11:00 2018 by hacluster via crmd on z1.example.com
     2 nodes configured
     0 resources configured
    PCSD Status:
      z1.example.com: Online
      z2.example.com: Online
    ```
7.  在这两个节点中，配置网页浏览器并创建一个网页来显示简单的文本信息。如果您正在运行
    `firewalld`{.literal} 守护进程，请启用 `httpd`{.literal}
    所需的端口。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    不要使用 `systemctl enable`{.literal}
    启用任何由集群管理的在系统引导时启动的服务。
    :::
    ``` literallayout
    # yum install -y httpd wget
    ...
    # firewall-cmd --permanent --add-service=http
    # firewall-cmd --reload
    # cat /var/www/html/index.html
    My Test Site - $(hostname)
    END
    ```
    要让 Apache 资源代理获得 Apache
    状态，集群中的每个节点都会在现有配置之外创建一个新的配置来启用状态服务器
    URL。
    ``` literallayout
    # cat  /etc/httpd/conf.d/status.conf
    SetHandler server-status
    Order deny,allow
    Deny from all
    Allow from 127.0.0.1
    Allow from ::1
    END
    ```
8.  创建 `IPaddr2`{.literal} 和 `apache`{.literal}
    资源，供群集管理。\'IPaddr2\' 资源是一个浮动 IP
    地址，它不能是一个已经与物理节点关联的 IP 地址。如果没有指定
    \'IPaddr2\' 资源的 NIC 设备，浮动 IP 必须位于与静态分配的 IP
    地址相同的网络中。
    您可以使用 `pcs resource list`{.literal}
    命令显示所有可用资源类型的列表。您可以使用
    `pcs resource describe resourcetype`{.literal}
    命令显示您可以为指定资源类型设置的参数。例如，以下命令显示您可以为
    `apache`{.literal} 类型的资源设置的参数：
    ``` literallayout
    # pcs resource describe apache
    ...
    ```
    在本例中，IP 地址资源和 apache 资源都配置为名为
    `apachegroup`{.literal}
    的组的一部分，这样可确保资源在同一节点上运行。
    在集群中的一个节点中运行以下命令：
    ``` literallayout
    # pcs resource create ClusterIP ocf:heartbeat:IPaddr2 ip=192.168.122.120 --group apachegroup
    # pcs resource create WebSite ocf:heartbeat:apache configfile=/etc/httpd/conf/httpd.conf statusurl="http://localhost/server-status" --group apachegroup
    # pcs status
    Cluster name: my_cluster
    Stack: corosync
    Current DC: z1.example.com (version 2.0.0-10.el8-b67d8d0de9) - partition with quorum
    Last updated: Fri Oct 12 09:54:33 2018
    Last change: Fri Oct 12 09:54:30 2018 by root via cibadmin on z1.example.com
    2 nodes configured
    2 resources configured
    Online: [ z1.example.com z2.example.com ]
    Full list of resources:
    Resource Group: apachegroup
        ClusterIP  (ocf::heartbeat:IPaddr2):       Started z1.example.com
        WebSite    (ocf::heartbeat:apache):        Started z1.example.com
    PCSD Status:
      z1.example.com: Online
      z2.example.com: Online
    ...
    ```
    请注意，在此实例中，apache `group`{.literal} 服务正在节点
    z1.example.com 上运行。
9.  访问您创建的网站，在运行该服务的节点上停止运行该服务，查看该服务如何切换到第二个节点。
    ::: orderedlist
    1.  将浏览器指向使用您配置的浮动 IP