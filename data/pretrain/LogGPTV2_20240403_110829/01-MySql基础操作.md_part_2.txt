-   用户自定义约束（检查约束）\--**MySQL不支持**
    1.  ## 创建数据表(带约束)
标准创建语法：
![](media/image12.png){width="3.140972222222222in"
height="1.363888888888889in"}
\> 例题：在员工数据库**EmpDB**中创建一个员工表**Employee**
![](media/image13.png){width="5.761805555555555in"
height="2.785416666666667in"}
create database empdb; \-- 创建数据库
![](media/image14.png){width="5.763888888888889in"
height="1.8868055555555556in"}
-   [使用可视化的界面创建表：]{.underline}
    ![](media/image15.png){width="4.401388888888889in"
    height="2.7083333333333335in"}
唯一约束：
![](media/image16.png){width="4.411111111111111in"
height="1.4881944444444444in"}
## 删除表
格式：drop table 表名;
例如：drop table student;
## 修改表结构(了解)
-   alter table 表名 add 列名 类型(长度) 约束;
作用：修改表添加列.
例如：
> #1，为student 表添加一个新的字段为 分类描述 varchar(20)
>
> **ALTER TABLE** student ADD sdesc VARCHAR(20);
-   alter table 表名 modify 列名 类型(长度) 约束;
    作用：修改表修改列的类型长度及约束.
    例如：
> #2, 为student 表的名称字段进行修改，类型varchar(50) 添加约束 not null
>
> **ALTER TABLE** student **MODIFY** name VARCHAR(50) NOT NULL;
-   alter table 表名 change 旧列名 新列名 类型(长度) 约束;
    作用：修改表修改列名.
    例如：
> #3, 为student表名称字段进行更换 更换为 sname varchar(30)
>
> ALTER TABLE student **CHANGE** name sname VARCHAR(30);
-   alter table 表名 drop 列名;
    作用：修改表删除列.
    例如：
> #4, 删除表中name这列
>
> ALTER TABLE Student **DROP** name;
-   rename table 表名 to 新表名;
    作用：修改表名
    例如：
> #5, 为表student 改名成 student
>
> RENAME TABLE student TO stu;
6.  # DML应用
    1.  ## 插入表数据 **INSERT**
-   语法：
**insert** into 表 (列名1,列名2,列名3..) values (值1,值2,值3..); \--
向表中插入某些列
**insert** into 表 values (值1,值2,值3..);
\--向表中插入**所有列，可以省列名**
注意：
> 插入的数据应与字段的数据类型相同
>
> 数据的大小应该在列的长度范围内
>
> 在values中列出的数据位置必须与被加入列的排列位置相对应。
>
> 除了数值类型外，其它的字段类型的值必须使用引号引起。
>
> 如果要插入空值，可以不写字段，或者插入 null。
>
> 对于自动增长的列在操作时，直接插入null值即可，后期会自动编号。
\> VARCHAR和DATE的值需要用英文的**单引号引**起来！
\> **INT和DOUBEL**不需要单引号！
示例：
![](media/image17.png){width="4.950694444444444in" height="2.33125in"}
-   可视化界面新增数据库表
![](media/image18.png){width="4.986111111111111in"
height="4.303472222222222in"}
## 更新表记录 **UPDATE**
用来修改指定条件的数据，将满足条件的记录指定列修改为指定值
-   语法：
**update 表名** set 列名1=值1,列名2=值2; \--如果没有WHERE
表示更新整个表数据
update 表名 set 字段名=值,字段名=值 where 条件;
\--如果有WHERE表示更新指定的数据
![](media/image19.png){width="5.247916666666667in"
height="0.3888888888888889in"}
-   注意：
    -   列名的类型与修改的值要一致.
    -   修改值得时候不能超过最大长度.
    -   值如果是字符串或者日期需要加''.
        如果没有Where条件，表示更新整张表数据！！
+-----------------------------------------------------------------------+
| \-- 1.将表中所有性别为1的那些人性别改为 \'男\';                       |
|                                                                       |
| update employee set sex=\'男\' where sex=\'1\';                       |
|                                                                       |
| update employee set sex=\'女\' where sex=\'0\';                       |
|                                                                       |
| \-- 2.将表中所有的男人薪资涨10000元                                   |
|                                                                       |
| update employee set sarlay=sarlay+10000 where sex=\'男\';             |
|                                                                       |
| \-- 3.将表中 \'2018-10-10\'以前出生的人，职业改为                     |
| \'老油条\',薪资降1000元                                               |
|                                                                       |
| update employee set job=\'老油条\',sarlay=sarlay-1000 where           |
| birthday\=4 and            |
| sex=\'女\';                                                           |
+-----------------------------------------------------------------------+
**\> 示例：**
![](media/image20.png){width="4.584722222222222in"
height="2.8743055555555554in"}
## 删除记录 DELETE
-   语法：
delete from 表名 **\[where 条件\]**;
或者
truncate table 表名; 不能有 **where
条件，作用就是清空表，自增归0！！！**
-   面试题：
删除表中所有记录使用delete from 表名; 还是用truncate table 表名;
删除方式：delete 一条一条删除，不清空auto_increment记录数。
truncate
直接将表数据全部删除，重新建表，auto_increment将置为零，从新开始。
-   使用SQL语句删除数据库表数据
    ![](media/image21.png){width="4.7625in"
    height="0.5305555555555556in"}
    \> 如果删除的时候，**不带where条件，那么删除的是所有的数据**！！！
    示例：
    ![](media/image22.png){width="5.763194444444444in"
    height="2.376388888888889in"}
+-----------------------------------------------------------------------+
| \-- 1.删除所有数据                                                    |
|                                                                       |
| delete from employee;                                                 |
|                                                                       |
| \-- 2.删除所有薪资为0的女员工                                         |
|                                                                       |
| delete from employee where sex=\'女\' AND sarlay=0;                   |
|                                                                       |
| \-- 3.删除ID小于3的 或者 薪资在80000以下的                            |
|                                                                       |
| DELETE from employee where sarlay\ ![](media/image23.png){width="5.4375in" height="1.7916666666666667in"}
>
> 在图中与客户端有关的编码设置:
-   将客户端编码修改为gbk.
set character_set_client=gbk;
set character_set_results=gbk;
> 以上操作，只针对当前窗口有效果，如果关闭了服务器便失效。如果想要永久修改，通过以下方式:
-   在mysql安装目录下有my.ini文件
在MySQL的安装目录下的配置文件my.ini里面的参数：default-character-set和character-set-server
![IMG_256](media/image24.png){width="5.5375in"
height="2.4243055555555557in"}
使用高级记事本打开my.ini
,我们可以修改default-character-set和character-set-server
将其改为自己想要的字符集类型，如：gbk,gb2312等等，这里我是修改为gbk;
![IMG_256](media/image25.png){width="3.3506944444444446in"
height="0.6013888888888889in"}
![IMG_256](media/image26.png){width="6.210416666666666in"
height="0.4270833333333333in"}
**关于命令行界面对齐问题:**
执行以下下面得命令：
登录上MySql之后执行：
set names gbk;
charset gbk;