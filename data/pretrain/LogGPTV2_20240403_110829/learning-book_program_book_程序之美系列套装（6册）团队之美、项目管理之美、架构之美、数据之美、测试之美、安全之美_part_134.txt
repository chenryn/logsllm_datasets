PM的目标必须是采取安全的行动。他的行动和行为必须让项目在
轨道上朝着可能改变的目标前进，同时又要尽可能不损害项目。有
些损害不可避免，应该要有预期准备。但是PM的行动越有效，负
面影响就越少。
如图14-3所示，项目进展得越多，就越难采取安全的行动。这是因
为行动会导致昂贵后果的概率会随时间而增加：已完成的工作需要
修改或放弃的概率很高。这些花费可能全都有充分理由，但是采取
安全的行动是指在决策之前，了解其有多少成本。
在中盘阶段考虑调整时（功能/目标/需求修改），要考虑以下5个问
题：
742
---
## Page 744
1.我们试着解决的问题是什么？我们需要解决这个问题才能成功
吗？我们需要在这个里程碑解决这个问题吗？我们可以忍受这个问
题吗？
2.这个问题是症状还是起因？只解决症状能行吗？
3.我们对程序或团队的状态了解得足够多吗？能够预测行动对他们
的影响吗？
金性
安全性
动的安
999
行
调整的尺度
所用的时间
图14-3：如果调整很大，并且或者在项目晚期才进行，就很难做安
全的调整
4.修改后的好处多于调整的代价吗（包括了解程序/团队的状态所花
的时间，考虑替代方案以及正确该项决策的政治支持）？寻找并解
决那些原因，可能比忍受那些症状的代价要高，更不用说要修正它
们了。
5.潜在新问题的风险，值得做修改而获取的利益吗？
决定是否采取行动，同样可采用第8章讨论过的决策策略。对于任
何必要的设计、规格说明书、沟通或者政治行为，都可利用第6、
7、9和16章所分别讨论的战术。态度和方法都是一样的，只是期限
和犯错的边际范围都更少了。缺少时间考虑选项，意味着两件事。
首先，要依赖你在早期制定原型或设计工作中所学到的知识。有些
你正在考虑的调整内容，应该会再度出现，然后运用团队知识来进
行目前的分析工作。其次，要保守。你知道得越少，你看不到的风
险就越多。越到进度表的后面，采取行动的基准线就要越高。
743
---
## Page 745
打破承诺
安全行动的重要部分，就是考虑团队领导之前做过的承诺。就像我
们在第12章中谈论的那样，领导者从团队赢得信任的方式，就是他
如何管理好自已的承诺。远景文件、需求和进度表，都是管理者、
团队领导者、程序员和客户之间的各种承诺形式。中盘期间采取的
任何行动，都可能使你之前做出的承诺失效。
当变化出现时，要继续保持你的团队对你的信任，就要尊重之前的
承诺。如同作者WatsS.Humphrey所说的，“如果事情改变，就影响
相关承诺的任何一方，需要提前声明，并协商做出新的承诺。”[3]
我们允许改变，但是要遵守一定的协商程序，类似首次建立承诺的
那一个程序（远景文件、需求和进度表）。你不需要草拟文件或者
召开大会，但是，你需要通知大家，承诺需将改变，让他们参与决
定如何使这些改变发出的程序。
如果你希望你的团队放弃两周以来的工作，要确保考虑这个决策所
需花费的代价。通过合理的推理，说明为什么新的改变才是正确
的，然后，告诉众人，什么因素支持这个观点。如果可能的话，让
团队人员参与讨论，然后再做出最终决定。
不要害怕做出改变。变化是好的，而且也是不可避免的。但是，有
很多种改变，有很多种不同的方式，领导者可以选择它们来带领团
队完成改变。如果你以前带领项目朝西走，现在想要朝北，需要利
用以前你让他们朝西走所需要的同样的技巧，让团队朝北走（虽然
速度快一倍，正式程度只有一半）。参加前面的第3、4、11和12
章，了解如何带领团队完成改变。
编码管道
中盘阶段的务实工作观点，就是聚焦在程序员编写代码上。项目朝
前走的唯一方法就是编写每一行代码，让项目离完成越来越近（偏
好的功能、不必要的最佳化工作，等等，不会把项目推动向前）。
程序员编写代码之前，要先制定计划和设计，无论规划和设计师由
程序员来做，还是由别人来做，都可以为他们后面的工作，建立一
个有效的工作序列。这就是所谓的编码管道（codingpipeline），有
很多技巧来解释如何管理好它。
744
---
## Page 746
PM的工作，要保证编码管道能够顺畅运转。虽然程序员可能拥有
管道的管理权，决定谁来做什么工作I5L，但是，PM仍然要负责确
保编程团队拥有必要的支持来使之运作。这可能包括查找信息资
料、安排会议、联系不同的人把决定最终定下来，或者，在某些情
况下，解决遗留的设计问题IL（见图14-4）。PM必须要跑在程序
员之前几天，完成设计并提交给管道。如果PM负责多个开发人员
的工作，他就得认真安排好时间的优先顺序，以保证可以控制多条
管道之间有竞争性的需求（这就是为什么首席程序员，应该对这类
工作做些工作或者更多工作的另一个原因）。
今天
明天
后天
程际员
实现A
实现B
PM
为A做设计
为B做设计
为C做设计
图14-4：规格说明书/设计的最终细节，可以由PM或者设计师来核
实或定案。这会对编码管道的价值有所帮助
在《Web Project Management:Delivering Successful Commercial Web
Sites》（MorganKaufimann，2001）一书中，作者AshleyFriedlein把
这个过程叫做为团队做摘要，而团队要做的下一项工作细节被称为
摘要。如同Friedlein所写的，“为了开发的效率和速度最大化，所准
备的摘要必须总是赶在当前工作进度的前面。只要一项工作完成
了，下一步工作的摘要也准备好了。"这些摘要都是从规格说明书
衍生出来的（如果仍然相关的话），但是他要包含程序员必须了解
的，需要新增或者改变的项目。如果中盘阶段没有积极地向程序员
做摘要，就可能有很多事情堵住工作项目，使管道运作慢下来：可
用性问题、视觉设计工作、其他程序员完成的工作项目、营销问
题、技术问题或者外部的相依性问题。因为PM通常有最多方面的
技能，他们是最好这些事情的最佳人选：管理编码管道的重点，在
问题发生处插上小旗或者解决问题，让事情顺畅运转，而且是在程
序员开始解决这些事情之前完成。（其中包括找出因为受阻而情绪
沮丧、但又不承认或者没有意识到的程序员。）
745
---
## Page 747
有4个问题说明如何把这做好：
·正在积极编写哪些工作项目代码？有任何问题阻碍程序员完成他
们目前正积极编写的工作项目吗？如果有，就解决掉它们（造成阻
碍的问题，而不是工作项目）。这是项目遇上的红色警告状况。如
果程序员积极编写代码受阻，项目就会停顿。没有什么比解决阻碍
程序员编写代码的问题更为重要的事情了。简单地询问，“我如何
才能帮你解决这个问题？"如果你帮得上忙的话，他们就会告诉你
答案。如果造成阻碍的问题有相依性（例如，Fred得做完工作项目
6，Bob才能开始工作项目7），可以考虑在排除阻碍之前，让这个
程序员做些其他工作。
对于满足规格说明书，要实现的当前工作项目所需的一切事项，
程序员都知道并理解了吗？总是到了执行那一刻，才会发现问题和
理解偏差。有些程序与比其他人更积极于用某种成熟的方式来解决
这种偏差。PM或者设计者必须随时可以参与帮着他们认识并缩小
这些偏差。有时，可以预期这些偏差一一例如，是否所有的问题来
自于解决工作项目问题而进行的规格说明书审核。
方：要跑在程序员之前一步（见图14-4）。如果目前积极编写的工
作项目进展很顺利，那就把重点转向管道的下一个项目。这个项目
应该倾向于是项目的下一个最重要的工作。总是要先做最重要的工
作，即使它是最困难的工作。对于管道的每一个项目，在分配给程
序员时，要考虑是否有并放性问题会减慢或阻正程序员的工作。找
到并解决它们。
才是重要的事情。要有人查看的构建操作时签入程序的结果，确保
从客户的角度来看，达到了应有的目的。最后的工作完成时，是否
把所有的功能和行为都加上去了？测试组同意了吗？所有的单元测
常的构建操作（下一章会讲）是追踪这种事情的简单方法，因为你
总是可以检验项目的当前状态——找出已完成工作的偏差——是否
满足所需的结果。工作项目越大，这件事就越重要。
有些程序员对他们的编码管道要比其他人负起更多的责任。很多程
序员会积极寻找某种特定的问题（技术），倾向于忽视或拖延其他
问题（商业、政治）。你和每位程序员的部分关系，就是了解你要
746
---
## Page 748
参与多少以管理他们的管道。谁来管理并不重要，只要做了，同时
有人积极去确认，以及保护这些工作项目的质量就可以了（这是角
色讨论问题，在第9章有所描述）。
积极和保守的管道
通常，编码管道的项目只要有3个比程序员团队的进度领先就可以
了（如果每个项目需要两天，3个项目就需要一个多星期的工
作）。PM和程序员可以非正式地讨论，针对下一个逻辑序列达成
共识（或者，如果有重要的关键路径或甘特图（Ganttchart），而且
实际上没有超出数周，那么管道就可以从中衍生出来）。这样就有
了足够的缓冲，使得如果某个阻碍性问题无法解决时，程序员和
PM有足够的时间，在解决问题的同时，可以寻求其他适当的工作
项目，并且置入管道中。
态度积极的团队，可以更多依靠管道，来把问题分出优先级。团队
没有做精致的工作分解机构（WBS，workbreakdownstructure），
而是确认变化会发生，PM或者首席程序员有能力来管理管道。这
样风险比较高：如果管道往回退或者无法领先于团队之前，就会做
出错误的决定和浪费时间。有关构建良好的WBS，并把它们应用在
项目进度表上的内容，可以参见StephenDevaux所著的《Total
ProjectControl》（Wiley出版，1999）一书，或者阅读任何不错的
传统项目管理参考书。
对于态度保守的团队，管理管道就是对在计划期间所做的原始工作
项目列表，做出适当的提炼。把最初的计划表作为管理每一个程序
员的资源，或许可以为他们安排数周或者数月的工作，并置于管道
中。可能会有微量调整，但是可以预期的是，原来的计划表，至少
目列表就会作为计划的一部分产生，而流程就可以重复。因此，根
据里程碑有多短，或者项目有多稳定，预先的管道计划就可以发挥
作用。
然而，管道的基本要点不是你如何完成它。每一种方法都提供了可
以替代的办法。重要的是要有效管理管道，用正确的方法做正确的
工作项目，同时，不会浪费太多时间就可以指出下面要实现哪些工
作。
编码管道成为Bug修补管道
747
---
## Page 749