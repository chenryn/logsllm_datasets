        SQL_SERVERS: "$HOME_NET"
        DNS_SERVERS: "$HOME_NET"
        TELNET_SERVERS: "$HOME_NET"
        AIM_SERVERS: "$EXTERNAL_NET"
        DC_SERVERS: "$HOME_NET"
        DNP3_SERVER: "$HOME_NET"
        DNP3_CLIENT: "$HOME_NET"
        MODBUS_CLIENT: "$HOME_NET"
        MODBUS_SERVER: "$HOME_NET"
        ENIP_CLIENT: "$HOME_NET"
        ENIP_SERVER: "$HOME_NET"
      port-groups:
        HTTP_PORTS: "80"
        SHELLCODE_PORTS: "!80"
        ORACLE_PORTS: 1521
        SSH_PORTS: "[22,63501,57891]"
        DNP3_PORTS: 20000
        MODBUS_PORTS: 502
        FILE_DATA_PORTS: "[$HTTP_PORTS,110,143]"
        FTP_PORTS: 21
    ......
    ......
    ......
    #开一些协议解析的字段，保存更详细的日志，便于溯源#
    outputs:
      # a line based alerts log similar to Snort's fast.log
      - fast:
          enabled: yes
          filename: fast.log
          append: yes
          #filetype: regular # 'regular', 'unix_stream' or 'unix_dgram'
      # Extensible Event Format (nicknamed EVE) event log in JSON format
      - eve-log:
          enabled: yes
          filetype: regular #regular|syslog|unix_dgram|unix_stream|redis
          filename: eve.json
    ......
    ......
    ......
    types:
            - alert:
                payload: yes             # enable dumping payload in Base64
                # payload-buffer-size: 4kb # max size of payload buffer to output in eve-log
                payload-printable: yes   # enable dumping payload in printable (lossy) format
                packet: yes              # enable dumping of packet (without stream segments)
                # http-body: yes           # enable dumping of http body in Base64
                http-body-printable: yes # enable dumping of http body in printable format
                # metadata: no             # enable inclusion of app layer metadata with alert. Default yes
                # Enable the logging of tagged packets for rules using the
                # "tag" keyword.
                tagged-packets: yes
            - http:
                extended: yes     # enable this for extended logging information
                # custom allows additional http fields to be included in eve-log
                # the example below adds three additional fields when uncommented
                custom: [Accept-Encoding, Accept-Language, Authorization,cookie,origin,server]
            - dns:
                # This configuration uses the new DNS logging format,
                # the old configuration is still available:
                # http://suricata.readthedocs.io/en/latest/configuration/suricata-yaml.html#eve-extensible-event-format
                # Use version 2 logging with the new format:
                # DNS answers will be logged in one single event
                # rather than an event for each of it.
                # Without setting a version the version
                # will fallback to 1 for backwards compatibility.
                version: 2
                # Enable/disable this logger. Default: enabled.
                enabled: yes
                # Control logging of requests and responses:
                # - requests: enable logging of DNS queries
                # - responses: enable logging of DNS answers
                # By default both requests and responses are logged.
                requests: yes
                responses: yes
                # Format of answer logging:
                # - detailed: array item per answer
                # - grouped: answers aggregated by type
                # Default: all
                #formats: [detailed, grouped]
                # Answer types to log.
                # Default: all
                types: [a, aaaa, cname, mx, ns, ptr, txt]
            - tls:
                extended: yes     # enable this for extended logging information
                # output TLS transaction where the session is resumed using a
                # session id
                #session-resumption: no
                # custom allows to control which tls fields that are included
                # in eve-log
                #custom: [subject, issuer, session_resumed, serial, fingerprint, sni, version, not_before, not_after, certificate, chain, ja3]
            - files:
                force-magic: no   # force logging magic on all logged files
                # force logging of checksums, available hash functions are md5,
                # sha1 and sha256
                #force-hash: [md5]
            #- drop:
            #    alerts: yes      # log alerts that caused drops
            #    flows: all       # start or all: 'start' logs only a single drop
            #                     # per flow direction. All logs each dropped pkt.
            - smtp:
                extended: yes # enable this for extended logging information
                # this includes: bcc, message-id, subject, x_mailer, user-agent
                # custom fields logging from the list:
                #  reply-to, bcc, message-id, subject, x-mailer, user-agent, received,
                #  x-originating-ip, in-reply-to, references, importance, priority,
                #  sensitivity, organization, content-md5, date
                custom: [received, x-mailer, x-originating-ip, relays, reply-to, bcc]
     ......
     ......
     ......
     #规则这块使用suricata-update管理，相关suricata.yaml文件的配置参见0x04#
#####  PF_RING – suricata.yaml 配置
大致的配置参考了下网上的资料，还有些其他参数可能还得深入研究下。大致配置如下：
    # Runmode the engine should use. Please check --list-runmodes to get the available
    # runmodes for each packet acquisition method. Defaults to "autofp" (auto flow pinned
    # load balancing).
    runmode: workers
    # packet size (MTU + hardware header) on your system.
    default-packet-size: 1522
    # Defrag settings:
    defrag:
      memcap: 512mb
      hash-size: 65536
      trackers: 65535 # number of defragmented flows to follow
      max-frags: 65535 # number of fragments to keep (higher than trackers)
      prealloc: yes
      timeout: 30
    flow:
      memcap: 1gb
      hash-size: 1048576
      prealloc: 1048576
      emergency-recovery: 30
      #managers: 1 # default to one flow manager
      #recyclers: 1 # default to one flow recycler thread
    flow-timeouts:
      default:
        new: 3
        established: 30
        closed: 0
        bypassed: 10
        emergency-new: 10
        emergency-established: 10
        emergency-closed: 0
        emergency-bypassed: 50
      tcp:
        new: 6
        established: 100
        closed: 12
        bypassed: 100
        emergency-new: 1
        emergency-established: 5
        emergency-closed: 2
        emergency-bypassed: 50
      udp:
        new: 3
        established: 30
        bypassed: 100
        emergency-new: 3
        emergency-established: 10
        emergency-bypassed: 50
      icmp:
        new: 3
        established: 30
        bypassed: 100
        emergency-new: 1
        emergency-established: 10
        emergency-bypassed: 50
    stream:
      memcap: 12gb
      checksum-validation: no      # reject wrong csums
      prealloc-sesions: 500000     #per thread
      midstream: true
      asyn-oneside: true
      inline: no                  # auto will use inline mode in IPS mode, yes or no set it statically
      reassembly:
        memcap: 20gb
        depth: 12mb                  # reassemble 1mb into a stream
        toserver-chunk-size: 2560
        toclient-chunk-size: 2560
        randomize-chunk-size: yes
        #randomize-chunk-range: 10
        #raw: yes
        #segment-prealloc: 2048
        #check-overlap-different-data: true
    # PF_RING configuration. for use with native PF_RING support
    # for more info see http://www.ntop.org/products/pf_ring/
    pfring:
      - interface: eth0
        # Number of receive threads. If set to 'auto' Suricata will first try
        # to use CPU (core) count and otherwise RSS queue count.
        threads: 16