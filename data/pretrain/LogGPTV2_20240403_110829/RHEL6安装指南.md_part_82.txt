        ```
        ::: para
        [**anaconda**]{.application} 解析 kickstart 文件前不会编译使用
        LVM 的多路经设备。因此无法使用 `dm-uuid-mpath`{.literal}
        格式指定这些设备。反之，要清除使用 LVM 的多路经设备，请使用
        `disk/by-id/scsi-WWID`{.literal} 格式，其中 *WWID*
        是该设备的*通用识别符*。例如：要清除 WWID 为
        `58095BEC5510947BE8C0360F604351918`{.literal} 的磁盘，请使用：
        :::
        ``` screen
        part / --fstype=ext3 --grow --asprimary --size=100 --ondisk=disk/by-id/scsi-58095BEC5510947BE8C0360F604351918
        ```
        ::: warning
        ::: admonition_header
        **警告**
        :::
        ::: admonition
        ::: para
        永远不要使用类似 `mpatha`{.systemitem}
        的设备名称指定多路径设备。类似 `mpatha`{.systemitem}
        的设备名称不是具体到某个磁盘。在安装过程中命名为
        `/dev/mpatha`{.systemitem} 的磁盘可能并不是希望得到的那个。因此
        `clearpart`{.command} 命令可能会对错误的磁盘进行操作。
        :::
        :::
        :::
    -   ::: para
        `--asprimary`{.command} ---
        强制自动将分区分配为主分区，或者分区失败。
        :::
    -   ::: para
        `--type=`{.command}（使用 `fstype`{.command} 替换）---
        这个选择不再可以使用了。请使用 `fstype`{.command}。
        :::
    -   ::: para
        `--fsoptions=`{.command} ---
        指定在挂载文件系统时所用选项的自由格式字符串。将这个字符串复制到安装的系统的
        `/etc/fstab`{.filename} 中并使用括号括起来。
        :::
    -   ::: para
        `--fsprofile`{.command} ---
        指定传递给在这个分区上创建文件系统的应用程序的*使用类型（Usage
        Type）*。使用类型定义了创建文件系统时使用的不同调优参数。要使用这个选项，文件系统必须支持使用类型，且必须有一个配置文件来列出有效的类型。对于
        ext2、ext3 和 ext4，这个配置文件是
        `/etc/mke2fs.conf`{.filename}。
        :::
    -   ::: para
        `--fstype=`{.command} ---
        为分区设置文件系统类型。合法值有：`xfs`{.command}、**`ext2`**、**`ext3`**、`ext4`{.command}、**`swap`**、**`vfat`**、`hfs`{.command}
        和 `efi`{.command}。
        :::
    -   ::: para
        `--recommended`{.command} --- 自动确定分区大小。
        :::
    -   ::: para
        `--onbiosdisk`{.command} --- 强制在 BIOS
        中找到的特定磁盘中创建分区。
        :::
    -   ::: para
        `--encrypted`{.command} --- 指定应该用 `--passphrase`{.command}
        提供的密码进行加密的分区。如果没有指定密码，[**anaconda**]{.application}
        将使用由 `autopart --passphrase`{.command}
        命令设定的默认、系统级密码，或者在未设置默认密码时暂停安装并提示输入密码。
        :::
    -   ::: para
        `--cipher=`{.command} --- 指定如果对
        [**anaconda**]{.application} 默认 aes-xts-plain64
        不满意时使用的加密类型。必须与 `--encrypted`{.command}
        选项一同使用这个选项，单独使用无效。*《 Red Hat Enterprise Linux
        安全指南》*中有可用加密类型列表，但 Red Hat 强烈推荐使用
        aes-xts-plain64 或者 aes-cbc-essiv:sha256。
        :::
    -   ::: para
        `--passphrase=`{.command} ---
        指定在加密这个分区时要使用的密码短语。没有上面的
        `--encrypted`{.command} 选项，这个选项就毫无意义。
        :::
    -   ::: para
        `--escrowcert=URL_of_X.509_certificate`{.command} ---
        将所有加密分区的加密密钥作为文件保存在 `/root`{.filename}
        中，使用来自由 *URL_of_X.509_certificate* 指定的 URL 的 X.509
        证书进行加密。每个
        加密分区的密钥都作为独立文件保存。这个选项只在指定了
        `--encrypted`{.command} 时才有意义。
        :::
    -   ::: para
        `--backuppassphrase=`{.command} ---
        为每个加密分区添加随机生成的密码短语。将这些密码短语以独立文件形式保存在
        `/root`{.filename} 中，使用 `--escrowcert`{.command} 指定的
        X.509 证书加密。这个选项只在指定 `--escrowcert`{.command}
        时才有意义。
        :::
    -   ::: para
        `--label=`{.command} --- assign a label to an individual
        partition.
        :::
    :::
    ::: {.note xmlns:d="http://docbook.org/ns/docbook"}
    ::: admonition_header
    **注意**
    :::
    ::: admonition
    ::: para
    如果因为某种原因分区失败了，虚拟控制台 3 中会显示诊断信息。
    :::
    :::
    :::
[`poweroff`{.command}（自选）[]{#ch-kickstart2.html#idm139817173872848 .indexterm}]{.term}
:   ::: para
    在安装成功后关闭系统并断电。通常，在手动安装过程中，anaconda
    会显示一条信息并等待用户按任意键重启系统。在 kickstart
    的安装过程中，如果没有指定完成方法，将使用默认的 `halt`{.command}
    选项。
    :::
    ::: para
    `poweroff`{.command} 选项等同于 `shutdown -p`{.command} 命令。
    :::
    ::: {.note xmlns:d="http://docbook.org/ns/docbook"}
    ::: admonition_header
    **注意**
    :::
    ::: admonition
    ::: para
    `poweroff`{.command}
    选项高度依赖所使用的系统硬件。特别是，某些硬件部件如
    BIOS、APM（高级电源管理）和
    ACPI（高级配置和电源界面）必须能和系统内核相互作用。关于系统的
    APM/ACPI 能力的更多信息，请和生产商联系。
    :::
    :::
    :::
    ::: para
    关于其他的完成方法，请引用 `halt`{.command}、`reboot`{.command} 和
    `shutdown`{.command} kickstart 选项。
    :::
[`raid`{.command}（自选）[]{#ch-kickstart2.html#idm139817216788672 .indexterm} []{#ch-kickstart2.html#idm139817200222128 .indexterm}]{.term}
:   ::: para
    组成软件 RAID 设备。该命令的格式是：
    :::
    ``` screen
    raid  --level= --device= 
    ```
    ::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
    -   ::: para
        *\* --- 挂载 RAID 文件系统的位置。如果它是
        `/`{.filename}，RAID 级别必须是
        1，除非引导分区（`/boot`{.filename}）存在。如果引导分区存在，`/boot`{.filename}
        分区必须是级别
        1，root（`/`{.filename}）分区可以是任何可用的类型。*\*（代表多个分区可以被列举）列举了要添加到
        RAID 阵列的 RAID 标记。
        :::
        ::: important
        ::: admonition_header
        **重要**
        :::
        ::: admonition
        ::: para
        如果在安装期间 RAID
        设备已经进行了准备且还未重新格式化，同时要在这个 RAID 设备中放置
        `/boot`{.filename} 和 `PReP`{.filename} 分区，请确保 RAID
        的元数据版本是 `0.90`{.literal}。
        :::
        ::: para
        Red Hat Enterprise Linux 6 的缺省 [**mdadm**]{.application}
        元数据的版本不支持引导设备。
        :::
        :::
        :::
    -   ::: para
        `--level=`{.command} --- 要使用的 RAID 级别（0、1 或者 5）。
        :::
    -   ::: para
        `--device=`{.command} --- 要使用的 RAID 设备的名称（如 md0 或
        md1）。RAID 设备的范围从 md0 直到 md7，每个设备只能被使用一次。
        :::
    -   ::: para
        `--spares=`{.command} --- 指定为 RAID
        阵列分配的备用驱动器数目。备用驱动器可以被用来在驱动器失败时重建阵列。
        :::
    -   ::: para
        `--fsprofile`{.command} ---
        指定传递给在这个分区上创建文件系统的应用程序的*使用类型（Usage
        Type）*。使用类型定义了创建文件系统时使用的不同调优参数。要使用这个选项，文件系统必须支持使用类型，且必须有一个配置文件来列出有效的类型。对于
        ext2、ext3 和 ext4，这个配置文件是
        `/etc/mke2fs.conf`{.filename}。
        :::
    -   ::: para
        `--fstype=`{.command} --- 为 RAID
        阵列设置文件系统类型。合法值有：**`ext2`**、**`ext3`**、`ext4`{.command}、**`swap`**、**`vfat`**
        和 `hfs`{.command}。
        :::
    -   ::: para
        `--fsoptions=`{.command} ---
        指定在挂载文件系统时所用选项的自由格式字符串。将这个字符串复制到安装的系统的
        `/etc/fstab`{.filename} 中并使用括号括起来。
        :::
    -   ::: para
        `--noformat`{.command} --- 使用现有的 RAID 设备，且必要格式化
        RAID 阵列。
        :::
    -   ::: para
        `--useexisting`{.command} --- 使用现有的 RAID
        设备，重新格式化它。
        :::
    -   ::: para
        `--encrypted`{.command} --- 指定这个 RAID 设备应该使用
        `--passphrase`{.command}
        选项提供的密码进行加密。如果没有指定密码，[**anaconda**]{.application}
        将使用默认、采用 `autopart --passphrase`{.command}
        命令设置的系统级的密码，或者在未设置默认密码时暂停安装，并提示输入密码。
        :::
    -   ::: para
        `--cipher=`{.command} --- 指定如果对
        [**anaconda**]{.application} 默认 aes-xts-plain64
        不满意时使用的加密类型。必须与 `--encrypted`{.command}
        选项一同使用这个选项，单独使用无效。*《 Red Hat Enterprise Linux
        安全指南》*中有可用加密类型列表，但 Red Hat 强烈推荐使用
        aes-xts-plain64 或者 aes-cbc-essiv:sha256。
        :::
    -   ::: para
        `--passphrase=`{.command} --- 指定在加密这个 RAID
        阵列时要使用的密码短语。没有上面的 `--encrypted`{.command}
        选项一起使用，这个选项就毫无意义。
        :::
    -   ::: para
        `--escrowcert=URL_of_X.509_certificate`{.command} ---
        将这个设备的数据加密密钥保存在 `/root`{.filename} 中，使用来自
        *URL_of_X.509_certificate* 指定的 URL 的 X.509
        证书加密。每个加密卷的密码都单独保存。这个选项只在指定
        `--encrypted`{.command} 时才有意义。
        :::
    -   ::: para
        `--backuppassphrase=`{.command} ---
        为这个设备添加随机生成的密码短语。将这些密码短语以独立文件形式保存在
        `/root`{.filename} 中，使用 `--escrowcert`{.command} 指定的
        X.509 证书加密。这个选项只在指定 `--escrowcert`{.command}
        时才有意义。
        :::
    :::
    ::: para
    下面的示例展示了假定系统里有三个 SCSI 磁盘的情况下，怎样创建
    `/`{.filename} 上的 RAID 1 分区，以及 `/usr`{.filename} 上的 RAID 5
    分区。它也为每个磁盘创建一个交换分区，一共三个。
    :::
    ``` screen
    part raid.01 --size=60 --ondisk=sda
    part raid.02 --size=60 --ondisk=sdb
    part raid.03 --size=60 --ondisk=sdc
    ```
    ``` screen
    part swap --size=128 --ondisk=sda
    part swap --size=128 --ondisk=sdb
    part swap --size=128 --ondisk=sdc
    ```
    ``` screen
    part raid.11 --size=1 --grow --ondisk=sda
    part raid.12 --size=1 --grow --ondisk=sdb
    part raid.13 --size=1 --grow --ondisk=sdc
    ```
    ``` screen
    raid / --level=1 --device=md0 raid.01 raid.02 raid.03
    raid /usr --level=5 --device=md1 raid.11 raid.12 raid.13
    ```
    ::: para
    有关在操作中 `raid`{.command} 的详细示例请参考 [第 32.4.1 节
    "高级分区示例"](#ch-kickstart2.html#s2-kickstart2-options-part-examples){.xref}。
    :::
[`reboot`{.command}（自选）[]{#ch-kickstart2.html#idm139817191406160 .indexterm}]{.term}
:   ::: para
    在成功完成安装（没有参数）后重新引导。通常，kickstart
    会显示信息并等待用户按任意键来重新引导系统。
    :::
    ::: para
    `reboot`{.command} 选项等同于 `shutdown -r`{.command} 命令。
    :::
    ::: para
    将 `reboot`{.command} 指定为在 System z 的 cmdline
    模式中安装时进行完全自动安装。
    :::
    ::: para
    关于其他的完成方法，请引用 `halt`{.command}、`poweroff`{.command} 和
    `shutdown`{.command} kickstart 选项。
    :::
    ::: para
    如果在 kickstart 文件中没有明确指定其他方法，`halt`{.command}
    选项是默认的完成方法。
    :::
    ::: {.note xmlns:d="http://docbook.org/ns/docbook"}
    ::: admonition_header
    **注意**
    :::
    ::: admonition
    ::: para
    使用 `reboot`{.command}
    选项[*可能*]{.emphasis}会导致安装的死循环，这要看具体的安装介质和方法。
    :::
    :::
    :::
[`repo`{.command}（自选）[]{#ch-kickstart2.html#idm139817209260688 .indexterm}]{.term}
:   ::: para
    配置作为软件包安装来源的额外的 yum 库。可以指定多个 repo 行。
    :::
    ``` screen
    repo --name= [--baseurl=| --mirrorlist=]
    ```
    ::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
    -   ::: para
        `--name=`{.command} --- 程序库（repo）id。需要这个选项。
        :::
    -   ::: para
        `--baseurl=`{.command} --- 程序库的 URL。这个变量可用于这 yum
        repo config 文件但这里不支持。可以使用这个选项，也可以使用
        \--mirrorlist，但不能同时使用这两个选项。
        :::
    -   ::: para
        `--mirrorlist=`{.command} --- URL
        指向该程序库的一组镜像。这个变量可用于这 yum repo config
        文件但这里不支持。可以使用这个选项，也可以使用
        \--baseurl，但不能同时使用这两个选项。
        :::
    :::
    ::: {.important xmlns:d="http://docbook.org/ns/docbook"}
    ::: admonition_header
    **重要**
    :::
    ::: admonition
    ::: para
    用于安装的库必须稳定。如果在安装完成前修改库，则安装会失败。
    :::
    :::
    :::
[`rootpw`{.command}（必选）[]{#ch-kickstart2.html#idm139817121381216 .indexterm}]{.term}
:   ::: para
    将系统 root 密码设定为 *\* 参数。
    :::
    ``` screen
    rootpw [--iscrypted] 
    ```
    ::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
    -   ::: para
        `--iscrypted`{.command} --- If this is present, the password
        argument is assumed to already be encrypted. To create an
        encrypted password, use the following command:
        :::
        ``` programlisting
        python -c 'import crypt; print(crypt.crypt("My Password"))'
        ```
        ::: para
        This will create a sha512 crypt of your password.
        :::
    :::
[`selinux`{.command}（自选）[]{#ch-kickstart2.html#idm139817136351088 .indexterm}]{.term}
:   ::: para
    在安装的系统中设定 SELinux 状态。在 anaconda 中 SELinux 默认为
    enforcing。
    :::
    ``` screen
    selinux [--disabled|--enforcing|--permissive]
    ```