U consisting  of n, + n, key pairs in total.  We let U, 
denote the  pairs  in  U with  indices  1,. . . , 71,  and U, 
denote those with indices n, + 1, . . . , n, + n,. 
Fori = 1,. . . , ny and b E  ( 0 ,  l}, it computes 
I?i,b  = ET(idllil/I 1. This can 
be  done by  using  the  output keys  U;(’-’),  . . . , U;“’-’’ 
from 
inputs to C(j). 
for decrypting a  hidden  representation  of  the 
Suppose there is a symmetric cryptosystem with encryp- 
tion  and  decryption  operations  under  key  K  denoted  by 
E,(.) and O K ( . ) ,  respectively.  The cryptosystem must  in- 
clude sufficient redundancy such that given a potential  key 
U and a ciphertext c, it can be determined with high proba- 
bility whether c results from an encryption  under U. 
The modifications  to the scheme are now as follows. 
1.  The originator obtains C ( j ) ,  C ( j ) ,  I C ( J j ,  U()), and E ( j j  
for j  = 1, . . . , e in the same way as for C above. How- 
ever, it selects the values L: = L~,,,“) only for C(’). 
The identifier in the jth stage is set to idllj. The origi- 
nator also prepares two encryptions 
for each j  > 1 and i = 1,. . . , nz, and randomly  per- 
mutes them  before  assigning them  to  V$'  and  @;); 
call the list of such pairs V ( j ) .  
Then 0 sends 
and 
c(j) E ( j )  
, 
 f o r j  = 2 , .  . . ,e 
)
~ (
j
3
-
1
to  H1  in  a  single message.  Note that  nothing  in  the 
data for stage j  is  linked to the identity of Hj and  so 
the sequence in  which the hosts are visited can be de- 
termined dynamically. 
2.  For j  > 1, when Hj runs  step 2 of the basic  scheme, 
it has received  V ( j )  and U;('-'),  . . . , U;=('-')  from 
Hj-1, who has before evaluated C(j-l). 
The host  interprets  each  U;('-') 
to  E ,  determines  which  one of  the  ciphertexts 
and  Vli) it  decrypts,  and  then  decrypts  the  one  that 
matches.  This yields Lij), an oblivious representation 
of the ith bit in the current state zj of the mobile agent. 
Those keys are then needed to evaluate C(j). 
as a  symmetric key 
3.  When H j  has obtained its output from evaluating C(j), 
it forwards all data that it has received from HjPl, to- 
gether with  U ; " ) , . .  . , U;=('), to Hj+l. At the end of 
the circle, He  returns only the 
to 0. 
In order to make this scheme robust, the same measures 
as described above should  be  taken.  In  particular, T  must 
ensure  that  it  decrypts  ciphertexts  containing  a  particular 
identifier idllj in at most one execution of step 3. 
3.4  Variation 
In this section we present a different scheme in the same 
model  for  which  robustness  can  be  added  at  much  lower 
cost. 
The main  difference  is  that  the  trusted  party  generates 
the  encrypted  circuit.  Because it  is  trusted  to  follow  the 
protocol  one does not have to add a costly zero-knowledge 
proof  for  correctness of  the  whole circuit.  Therefore,  the 
operations of the other parties and the corresponding proofs 
ensuring robustness become much simpler.  T  has to know 
g and h for constructing the circuit, but it may  obtain a de- 
scription of C from 0 in the first protocol message. 
We  use  a  three-party  oblivious  transfer protocol  intro- 
duced by Naor et al. [ 191 in which the role of the chooser is 
separated among the chooser and a third party, called the re- 
ceiver. Compared to the standard notion of oblivious trans- 
fer (see Section 3. l), the receiver  gets the  output message 
m, specified by the chooser, who itself learns nothing. This 
so-called  "proxy"  oblivious transfer  can  be  realized  using 
three message flows: from chooser to receiver and from re- 
ceiver to sender and back. 
The protocol  needs also a one-round implementation of 
standard oblivious transfer between two parties, which can 
be realized using the methods of Cachin et al. [7] or Sander 
et al. [23]. 
Note that the resulting overall structure of this protocol 
is similar to the auction scheme of Naor et al. [ 191. 
Protocol.  As in the basic scheme the essential component 
here  is  the encrypted circuit construction.  The protocol  is 
described  for the  basic  case of  mobile code with  a single 
host H. 
Suppose  0 employs  a  public-key  encryption  scheme 
with  encryption  and  decryption  operations  denoted  by 
Eo(.) and  DO(.), respectively.  0 starts the  computation 
as the chooser in nz parallel three-party oblivious transfers, 
one for each bit of z.  It sends these  hidden  choices to H ,  
who acts as the receiver  in  the three-party  oblivious trans- 
fers, together with C and Eo(.). H forwards the appropri- 
ate data to T ,  who acts as the  sender;  it  will  send the key 
pairs  C in  the  three-party  oblivious transfer.  Furthermore, 
H also prepares its input to ny parallel one-round oblivious 
transfers (playing the role of the chooser), one for each hit 
of  y.  It sends these  to T ,  together with the descriptions of 
C and Eo(.); T will send the key pairs K in the one-round 
oblivious transfers. 
. 
T invokes construct(C) to obtain C and the key pairs C, 
IC, and U .  It replies to H  with Eo(U,), C, U,, and the final 
flows in all oblivious transfer protocols. 
From  this  H can  determine  the  keys  L;,  . . . , L6= rep- 
resenting  z  and  the  keys  K ; ,  . . . , KAY representing  y. 
It  runs  evaluate(C, L', , . . . , LLz, K f ,  . . . , KLy) to  obtain 
U:, . . . , 
as  above.  Then  it  determines  its  output 
. . , U,!,+n,  and  from U,,  and  it  forwards 
z  from 
U:, . . . , U;= together with Eo(&) to 0. This enables 0 to 
obtain its output E. 
Extension for Mobile  Agents.  We  show how  to  extend 
the protocol from a single host to f?  hosts HI , . . . , He.  The 
protocol  starts as  before  for the  first  host.  However,  the 
steps  for  Hz, . . . , He-1  are  slightly  different:  three-party 
oblivious transfer and encryption under Eo are not needed. 
Instead, T  encrypts the keys  C(3) in the input of C ( J )  and 
representing  the state z3-1 of  the mobile agent under the 
output keys  in U(J-') from C(J-')  as before in  V(3). The 
keys U ( 3 - l )  can be stored by T between step J - 1 and step 
j  or they  can  be sent along  with  the protocol  flow and are 
traiismitted to T via H3-l  and H3 (in this case, they  must 
be encrypted using ET(.)). In addition, the last host obtains 
8 
I.r, encrypted with Eo(.) from T and forwards this to 0 as 
before. 
4.2  Generalized Auctions 
Auctions with  generalized bidding strategies present  an 
interesting  application  area for secure mobile agents.  Bid- 
ding agents can implement a complex strategy being a func- 
tion  of  time  and other participants’ behavior,  which  gives 
the  bidder  more flexibility  compared  to  traditional  single- 
parameter auctions based  purely  on price.  Sandholm  and 
Huai  [24] present  a  mobile agent system to  conduct such 
auctions. 
Recently  the German UMTS licenses were sold employ- 
ing  a  sealed-bid, multiple-round,  multiple-lot  auction.  It 
provides an interesting example of a real-world generalized 
auction.  Telecom  operators could  buy  either two  or  three 
packets  of  frequencies out  of  twelve  available  frequency 
packets.  In each round the bidders had to submit their bids, 
which  had to be increased  by  a minimum amount over the 
previous  bids.  The winners for each  frequency  were  an- 
nounced at the end of the round.  The bidding stopped af- 
ter  a  round  with  no  more  new  bids.  During  each  round 
the  bidders were  isolated  and  under close  supervision by 
the  authorities to prevent coalitions.  They  had to enter the 
bids  into a computer system, which  played the role  of  the 
auctioneer and computed the  winner.  The German UMTS 
auction in August 2000 lasted for 173 rounds during almost 
three weeks and raised about 99 billion DEM. 
As  the  value  of  the  lots  is  interrelated,  a  bidder  is  in- 
terested  to  define  his  bidding  behavior  as  dynamically as 
possible,  for  example  making  the  valuation  of  a  lot  de- 