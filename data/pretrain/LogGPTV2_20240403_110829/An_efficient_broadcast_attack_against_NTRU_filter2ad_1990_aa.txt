title:An efficient broadcast attack against NTRU
author:Jianwei Li and
Yanbin Pan and
Mingjie Liu and
Guizhen Zhu
An Efﬁcient Broadcast Attack against NTRU
∗
Jianwei Li
Institute for Advanced Study,
Tsinghua University
Beijing 100084, China
PI:EMAIL
Yanbin Pan
Key Laboratory of
Mathematics Mechanization,
Academy of Mathematics and
Systems Science, CAS
Beijing 100190, China
PI:EMAIL
Mingjie Liu
Tsinghua University
Beijing 100084, China
liu-mj07@mails.
tsinghua.edu.cn
Institute for Advanced Study,
Institute for Advanced Study,
Guizhen Zhu
Tsinghua University
Beijing 100084, China
PI:EMAIL
ABSTRACT
The NTRU cryptosystem is the most practical scheme known
to date and has drawn considerable interest. In this paper,
we propose a new and uniform broadcast attack against sev-
eral variants of NTRU by using a fact that the inner product
of the error vector (r, r) is a constant. Using some proper-
ties of circular matrix together with linearization, we ob-
tain three linear congruence equations of the form aT Y =
s mod q0 with N + [ N
2 ] variables for every recipient’s cipher-
text. Hence only if the number of the independent recipi-
2 ] − 2 can
ents’ ciphertexts/public-keys pairs reaches N + [ N
we work out these variables and recover the plaintext in
O(N 3) arithmetic operations successfully. To the best of our
knowledge, this is the most eﬃcient broadcast attack against
NTRU in the number of variables and time complexity. In
particular, for NTRU-1998 our method needs the fewest re-
cipients. The experiment evidence indicates that our algo-
rithm can eﬃciently broadcast attack against NTRU with
the highest security parameters. This is an algebraic broad-
cast attack, which is based on the special structure of the
blinding value space Lr.
Categories and Subject Descriptors
F.2 [Theory of Computation]: Analysis of algorithms and
problem complexity; G.1.3 [Numerical Analysis]: Numer-
ical Linear Algebra —Linear systems, Pseudoinverses
General Terms
Algorithms, Security
∗Corresponding Author
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ASIACCS’12, May 2–4, 2012, Seoul, Korea.
Copyright 2012 ACM 978-1-4503-0564-8/11/03 ...$10.00.
Keywords
Broadcast attack, NTRU, GGH, derandomization, lineriza-
tion, circular matrix
1.
INTRODUCTION
In 1998, Hoﬀstein, Pipher and Silverman [1] presented a
public key cryptosystem based on polynomial algebra called
NTRU, denoted by NTRU-1998. The security of NTRU
comes from the interaction of the polynomial mixing system
with the independence of reduction modulo p and q. The
NTRU cryptosystem is the most practical scheme known to
date. It features reasonably short, easily created keys, high
speed, and low memory requirements.
In 2001, Hoﬀstein
and Silverman [2] put forward another instance of NTRU,
denoted by NTRU-2001, by employing diﬀerent parameter
sets. In 2005, Howgrave-Graham, Silverman and Whyte [3]
gave the third instance of NTRU, denoted by NTRU-2005.
The very eﬃcient attack known against NTRU is based
on lattice reduction, but this does not imply that lattice
reduction is necessary to break NTRU. Coppersmith and
Shamir [4] pointed out that the security of NTRU is related,
but not equivalent, to the hardness of some lattice problems.
Jaulmes and Joux [5] showed that they are able to conduct a
chosen-ciphertext attack that recovers the secret key from a
few ciphertexts/cleartexts pairs with good probability. This
is very dangerous. Most of the ciphertext-only attacks [6,
7, 8] against NTRU rely on the underlying lattice’s special
cyclic structure.
In 1988, H¨astad [9] proposed the ﬁrst broadcast attack
against public key cryptosystems. The scenario of a broad-
cast attack is as follows. A single message is encrypted by
the sender directed for multiple recipients who have diﬀerent
public keys. By observing the ciphertexts only, an attacker
can derive the plaintext without requiring any knowledge of
any recipient’s secret key.
In 2009, Plantard and Susilo [10] ﬁrst considered the broad-
cast attack against the lattice-based public-key cryptosys-
tems and also gave some heuristic attacks.
Very recently, Pan and Deng [11] give the ﬁrst broadcast
attack against NTRU using the ergodic-linearization algo-
rithm [12, 13, 14]. The main idea of ergodic-linearization
technique is used in practical cryptanalysis: use interpola-
tion formula to even out the noise to derive a set of precise
nonlinear equations, then introduce new variables for the
monomials and obtain a linear system in the new variables.
What’s more, Pan and Deng [11] pointed out that some
other lattice-based cryptosystems, such as [15], can not re-
sist the broadcast attack either.
In this paper, we ﬁnd that for NTRU the inner product
(r, r) = rT r is a constant, where r is a vector consisting
of the coeﬃcients of r(x) ∈ Lr. Hence, we eliminate the
blinding value vector r directly and entirety by doing in-
ner product. Afterwards by using some properties of the
circular matrix together with linearization we obtain three
linear congruence equations of the form aT Y = s mod q0
with N + [ N
2 ] variables from every recipient’s ciphertext. It
can be easily used to give a very eﬃcient broadcast attack
against several variants of NTRU: NTRU-1998, NTRU-2001
with an odd dg, NTRU-2001 with q = dr, NTRU-2005 with
gcd(q, dg) = 1 and NTRU-2005 with q | dr. Since the num-
ber of variables is small and the complexity is in O(N 3), our
algorithm can broadcast attack against NTRU with very
large values of N on PC, eg N = 503, 787. For NTRU-1998
our method is the most eﬃcient known to date. For NTRU-
2001 and NTRU-2005, our complexity is the lowest, but we
need O( 3N
2 ) in [11]. Our algo-
rithm is based on the special structure of the blinding value
space Lr, which is also a ciphertext-only attack. Besides, we
ﬁnd that the error vector in the original GGH cryptosystem
and the modiﬁed error vector in GGH-2009 have the same
special structure. Hence, we ﬁrst discuss the broadcast at-
tacks against the original GGH and GGH-2009 by amending
the ergodic-linearization algorithm [12, 13, 14], then natu-
rally deduce the broadcast attack against NTRU.
2 ) recipients instead of O( N
The remainder of the paper is organized as follows. Sec-
tion 2 gives some preliminaries. In Section 3, we describe
the broadcast attack against NTRU. Section 4 gives a short
conclusion.
2. PRELIMINARIES
We denote the integer ring by Z and denote the residue
class ring Z/qZ by Zq. We use bold letters to denote vectors,
in column notation. If v is a vector, then we denote the i-th
entry of v by vi−1.
2.1 GGH
We brieﬂy review the original GGH cryptosystem, for
more details see [16]. A GGH cryptosystem comprises the
following algorithm.
Setup: Generate a “good basis” R ∈ ZN×N and compute
a “bad basis” B ∈ ZN×N of a lattice L, such that L(R) =
L(B). Provide B as public key and keep R as private basis.
Encryption: To encrypt a message vector m ∈ ZN , use the
bad basis to compute
(2.1)
where r is an error vector uniformly chosen from {−σ, σ}N .
Decryption: Use the good basis to compute
c = Bm + r.
m = B
−1RdR
−1cc.
and r = c − Bm.
Notice that the original GGH cryptosystem is semanti-
cally insecure, because one can check if a ciphertext c cor-
responds to a plaintext m by computing c − Bm. Further-
i = σ2 for i = 0, 1,··· , N − 1 and
more, it’s obvious that r2
rT r = N σ2. This fact can be used to discuss the broad-
cast attack against the original GGH cryptosystem, which
diﬀers from the general method in [10]. The original GGH
cryptosystem was attacked and broken severely by Nguyen
in 1999 [17], and Nguyen pointed out that for safety, one
can choose the entries of the error vector r at random in
[−σ,··· , σ] instead of {±σ}. Afterwards the other proposi-
tions were made using the same principle [18, 19, 20].
In addition, Pan et al in [15] presented a new lattice-
based public-key cryptosystem mixed with a knapsack and
used the module strategy, which is also a GGH-type cryp-
tosystem, denoted by GGH-2009. It has reasonable key size
and quick encryption and decryption. Its encryption algo-
rithm is: for any message m ∈ {0, 1}N , ﬁrst we uniformly
choose a vector r from {0, 1}N , then compute the ciphertext:
c = Bm+r mod p, where p is a prime satisfying certain con-
ditions. For more details see [15]. We ﬁnd that the modiﬁed
error vector in GGH-2009 has the same special structure as
that in the original GGH cryptosystem.
2.2 NTRU
We give a simple description of the NTRU-1998 cryptosys-
tem, for more details see [1].
The NTRU cryptosystem depends on three integer param-
eters (N, p, q) and four sets Lf ,Lg, Lr,Lm of polynomials
of degree N − 1 with small integer coeﬃcients, where Lf ,Lg
are called Private Key spaces, Lm is called Plaintext space,
Lr is called Blinding Value space. In addition, N must be
an odd prime, otherwise the lattice attacks can be improved
due to non-trivial factors of X N − 1 (see [21]). We choose
p, q such that gcd(p, q) = 1 and p is much smaller than q.
Denote the ring Z[x]/(xN − 1) by R and the multiplication
in R by ∗ in this paper.
We work over the ring R.
Key Generation:
Step1. Choose f ∈ Lf , g ∈ Lg such that there exists
Fq, Fp ∈ R satisfying f ∗Fq = 1 mod q and f ∗Fp = 1 mod p.
Step2. Let h = p ∗ Fq ∗ g mod q.
Public Key: h, p, q.
Private Key: f, Fp.
Encryption: To encrypt m ∈ Lm, we ﬁrst choose an r ∈ Lr
randomly, then compute the ciphertext:
c = h ∗ r + m mod q.
(2.2)
Decryption: First we compute
a = f ∗ c
= pg ∗ r + f ∗ m
mod q
mod q
then we choose the coeﬃcients of a in the interval from − q
2 . By the fact that all the coeﬃcients of pg ∗ r + f ∗ m
to q
may be in the interval from − q
2 , we almost get
2 to q
2
a = pg ∗ r + f ∗ m.
Then we recover the message m by computing m = Fp ∗
a mod p.
Since there exist several variants of NTRU, this has made
the analysis of NTRU a tricky task, as in [22]. However,
in this paper, we give a uniform broadcast attack against
NTRU. Mol and Yung in [22] summarized the main instan-
tiations of NTRU in the table below:
Variant NTRU-1998 NTRU-2001 NTRU-2005
q
p
Lf
Lg
Lm
Lr
F
Ref
2k ∈ [ N
2 , N ]
3
L(df , df − 1)
L(dg, dg)
Lm
L(dr, dr)
-
[1]
2k ∈ [ N
2 , N ]
2 + x
1 + p ∗ F
B(dg)
B(dr)
B(dF )
[2]
B
2
prime
1 + p ∗ F
B(dg)
B(dr)
B(dF )
[3]
B
0 + r2
 2dr
2 (p − 1)},
where
2 (p− 1)
• Lm = {m ∈ R: m has coeﬃcients lying between − 1
and 1
• L(d1, d2) = {F ∈ R : F has d1 coeﬃcients equal 1, d2
coeﬃcients equal −1, the rest 0},
• B denotes the set of all polynomials with binary coeﬃ-
cients,
• B(d) = {F ∈ R : F has d coeﬃcients equal 1, the rest 0}.
Remark 1: Let us focus attention on the blinding value
space Lr. We ﬁnd that the inner product
rT r = r2
1 + ··· + r2
f or N T RU − 1998;
f or N T RU − 2001 and N T RU − 2005.
is a constant, where r = (r0, r1,··· , rN−1)T is a vector cor-
responding to r(x) ∈ Lr. Note that increasing the number
of recipient’s ciphertext can’t change plaintext vector m,
but increases the number of blinding value vector r respec-
tively. It’s is a heavy curse of recovering the plaintext vector
m. Hence, we should eliminate the blinding value vector or
error vector r.
2.3 The Linear Form of NTRU and Circular
In NTRU, for a polynomial f ∈ R, we can represent f as
Matrix
N−1
dr
=
N−1X
f =
fixi.
It is equivalent to
i=0
f = (f0, f1,··· , fN−1)T .
It’s easy to verify the corresponding vector of f ∗ g in R is
0BBB@
f0
f1
...
fN−1
f0
...
fN−1
fN−2
. . .
. . .
. . .
. . .
f1
f2
...
f0
1CCCA
0BBB@
1CCCA
g0
g1
...
gN−1
In particular, even if fi or gj are functions about x, the
formula above also holds.
Thus, we have the equivalent linear form of the formula
(2.2)
where
H =
0BBB@
c = Hr + m mod q.
h0
h1