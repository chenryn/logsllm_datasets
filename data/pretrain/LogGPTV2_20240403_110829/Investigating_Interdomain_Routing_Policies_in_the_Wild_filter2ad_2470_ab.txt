### Discovering Alternate Routes

We announce an IP prefix from all PEERING locations using anycast. In each round, we observe the preferred route at a target AS \( T \) and the next-hop neighbor \( N \) that \( T \) uses to route toward our prefix. We then "poison" \( N \) by adding \( N \)'s AS number to the path, triggering BGP loop prevention and causing \( N \) to no longer have a path to our prefix (and stop announcing a route to \( T \)). This forces \( T \) to choose a different route through a different neighbor \( N' \). We repeat this process in consecutive rounds, poisoning the newly discovered neighbor, to identify all neighbors and routes that \( T \) can use toward our prefixes.

When we observe different routes at the target AS \( T \) (through different neighbors) from multiple vantage points (e.g., due to different routing preferences at different geographic locations), we run the algorithm for each vantage point separately. This process can be executed for each AS in the topology as the target AS. A similar experiment was performed by Colitti [9]; here, we use the same mechanism but with a more diverse set of providers and a different goal.

To limit AS-path length and prevent the inference of non-existent inter-AS links, we insert all poisoned ASes into a single AS-set and surround it with PEERING’s AS number. This also allows operators to identify the poisoning.

### Reverse Engineering BGP Decisions

In addition to discovering alternate routes, we conduct a complementary experiment to infer BGP decision triggers. We first announce an IP prefix from one PEERING location (called the magnet), wait five minutes for route convergence, and then announce (anycast) the same IP prefix from all other PEERING locations. After anycasting the prefix, an AS may change to a new route with higher Local-Pref, shorter AS-path length, or better intradomain tie-breakers, as specified in the BGP decision process [8].

If an AS \( x \) continues to use the route toward the magnet after we anycast the prefix, we check if the magnet route is cheaper according to the Gao-Rexford model or has a shorter AS-path length than all other observed routes from \( x \). If none of these checks are satisfied, we infer that AS \( x \) is using intradomain costs or route age (the last tie-breaker before router ID) as a tie-breaker. If AS \( x \) did not choose the route to the magnet, we check if the chosen route is cheaper or shorter than the route to the magnet. If none of these checks are satisfied, we infer that AS \( x \) is using intradomain costs as a tie-breaker.

We repeat this process using each PEERING location as the magnet. We also check whether the route chosen after we anycast the prefix is more expensive according to the Gao-Rexford model or has the same cost but a longer AS-path length than other observed routes, which would violate the model. The route to the magnet may become unavailable when a downstream AS receives and chooses a more preferred route; in such cases, we consider the downstream AS's decision.

### Vantage Points (VPs)

We perform traceroutes from 96 RIPE Atlas probes and approximately 200 PlanetLab nodes every 20 minutes, and collect BGP feeds every 15 minutes from RouteViews and RIPE RIS to monitor paths toward PEERING prefixes. We use the maximum number of RIPE Atlas probes allowed within daily probing budget limits. We implement a greedy heuristic that selects probes to maximize the number of ASes traversed on the default paths toward PEERING locations.

### Data Set

To infer preferences for all 360 target ASes observed on paths toward PEERING, we needed a total of 188 distinct poisoned announcements (some poisonings are useful for multiple target ASes). We observed 739 inter-AS links, including 45 inter-AS links not in CAIDA’s AS-relationship database, of which 10 (22.2%) could only be observed with poisoned announcements.

### Comparison with Existing Models

We compare paths observed in our passive and active measurements with CAIDA’s topology of inferred inter-AS relationships. We aggregate five topologies (Oct. 14 to Feb. 15) inferred using the method presented by Luckie et al. [25]. We aggregate these snapshots to mitigate the impact of transient link failures on the topology used in our analysis. When inferences conflict, we take the majority poll of inferred relationships, giving higher weight to more recent inferences. We use this topology to compute all paths that satisfy the Gao-Rexford (GR) model described in Section 2.

We compare the measured paths with all paths satisfying the GR model computed using CAIDA’s inferred relationships. We consider two properties: (1) whether the measured path satisfies the GR model of local preference, and (2) whether the measured path has the same length as the shortest paths satisfying the GR model of local preference. Based on this, we classify routing relationships as either obeying GR local preference (Best), routing based on the shortest path (Short), or a combination of the two.

For our active probing measurements, we consider the order in which the target AS \( T \) chooses paths. We again consider two properties: (1) whether the relationship between \( T \) and the next-hop on the first path is equal or better than the relationship with the next-hop on the second path, and (2) whether the first path is shorter or equal in length to the second path. We label observed decisions that obey property (1) as Best and those that obey (2) as Short. We assume the second neighbor exported the second path to \( T \) when \( T \) chose the first path, and we verified this assumption holds for the results we report.

In both cases, the sets should be treated as disjoint, with ASes that obey both Best and Short path policies appearing only in the Best/Short category. Observations that follow neither of these properties are considered inconsistent with existing models (i.e., NonBest/Long category). However, some cases may occur where a path suggested by CAIDA’s inferences might not exist in practice, possibly due to incomplete or erroneous inferences in the topologies or more complex filters applied by ASes when deciding which paths to advertise to neighbors (discussed in Section 4.3).

### How Often Do Models Hold?

We find that a majority of routing decisions (64.7%) for passively observed measurements are correctly inferred by the commonly used GR model; however, a significant fraction (34.3%) do not follow that model. Figure 1 (Simple) characterizes the observed routing decisions based on whether the path chosen is Best or Short. We find only a small number of cases (8.3%) where decisions cannot be explained by Best nor by Short path selection. In the following sections, we explore the reasons behind these decisions that differ from model-based predictions.

### Complex Routing Relationships

A well-known limitation of existing routing policy models is the simplification of relationships into either customer-provider or settlement-free peering relationships. Recent work by Giotsas et al. addresses this limitation by augmenting relationship inferences with cases of hybrid relationships (i.e., ASes whose arrangements vary based on location) and partial transit relationships (i.e., ASes who will behave as providers, but only for a subset of prefixes) [15].

The hybrid relationship dataset contains pairs of ASes and the corresponding cities where relationships differ for a given AS pair. To use this dataset, we use geolocation data from [6], which offers good coverage of infrastructure IPs such as routers. For each pair of ASes in each AS path, we geolocate corresponding IP addresses and, if the geolocation data points to the same city as mentioned in the hybrid relationship dataset for that AS pair, we use the hybrid relationship. Figure 1 (Complex) shows the breakdown of routing decisions observed taking into account these complex relationships. Interestingly, we find that taking these relationships into account has nearly no impact on the classification in our dataset (less than 1% change).

### Sibling ASes

The mapping between AS numbers and organizations is not one-to-one [4]. Many organizations manage multiple AS numbers, either for geographic regions (e.g., Verizon with ASNs 701, 702, and 703) or due to mergers (e.g., Level 3 (AS 3356) and Global Crossing (AS 3549)).

Cai et al. [4] present a technique to map organizations to ASes by using attributes like organization IDs, email addresses, and phone numbers found in whois information of ASes. We take a similar approach to identify AS siblings, but our approach differs in two key ways. First, we focus only on email addresses in whois data, which previous work identified as the field with the best precision and recall [4]. Second, we use DNS SOA records to identify different email domains that belong to the same organization. For example, dish.com and dishaccess.tv share the dishnetwork.com authoritative domain. We also remove groups where the email address is hosted by a popular email provider (e.g., hotmail.com) or regional Internet registry (e.g., ripe.net). This results in a total of 94 sibling groups identified in our traceroute dataset.

For every non-GR decision that an AS makes, we check whether the AS chooses a path via a sibling. If the path is via a sibling, we mark this decision as satisfying the Best condition. Figure 1 (Sibs) shows the result of this change—3.9% more decisions are classified as Best/Short.

### Prefix-Specific Policies

Interdomain routing is often abstracted to the level of a destination AS. However, in practice, routing is based on IP prefixes, which may be subject to different export policies by their originating AS (e.g., forwarding prefixes hosting enterprise-class services to a more expensive provider). While Giotsas et al. consider partial transit [15], which is a type of prefix-specific policy, they do not explicitly consider per-prefix policies as implemented by origin ASes.

We use two criteria to identify prefix-specific policies based on correlation with BGP data obtained from Routeviews/RIPE [34, 39]. Given an origin AS \( O \), a neighbor \( N \), and a prefix \( P \): 
- **Criteria 1:** Do not assume the edge \( N - O \) exists for prefix \( P \) unless we observe \( O \) announcing \( P \) to \( N \) in the BGP data.
- **Criteria 2:** Similar to Criteria 1, except that we require observing at least one prefix announced from \( O \) to \( N \) before applying Criteria 1.

The first criterion can be seen as being more aggressive, while the second aims to ensure that our observation is actually caused by selective prefix announcement and not poor visibility.

Figure 1 (PSP-1, PSP-2) shows the breakdown of routing decisions using Criteria 1 and 2, respectively. We find that prefix-specific policies account for a significant fraction (10-19%) of unexpected routing decisions. Combining Criteria-1 and Criteria-2 separately with simple, complex, and siblings relationships yields 85.7% and 75.7% of decisions for the Best/Short category, respectively (Figure 2, All-1, All-2). One limitation of these approaches is that we only check prefix-specific policies for origin ASes. Another limitation is incomplete visibility in BGP control plane data.

### Validation

To validate the cases of prefix-specific policies, we try to find a Looking Glass server hosted by the neighboring AS of the AS originating the prefix being examined. There were a total of 630 cases of prefix-specific policies involving 149 unique neighboring ASes. We were able to find looking glass servers in 28 of the neighboring ASes. Using these looking glass servers, we manually verify 100 cases of prefix-specific policies and confirm that applying Criteria 1 was correct 78% of the time.

### Active BGP Measurements

Using our active BGP measurements, we discover alternate routes. We study whether the sequence of alternate route choices matches existing models and infer which step of the BGP decision process led to each route. We report results for experiments performed between Feb. 25th and Apr 27th, 2015.

#### Alternate Routes

We analyze AS routing choices when we use PEERING to discover alternate, less preferred routes. We compare the sequence of routes chosen by target ASes with CAIDA’s AS-relationships database. Out of the 360 ASes we targeted, 310 (86.1%) chose routes following both Best and Shortest (as defined in Sec. 3.3); 29 (8.0%) chose routes following Best only; 18 (5.0%) following Shortest only; and 3 (0.8%) did not follow either property. We discuss the three observations that did not satisfy either property to illustrate limitations of current models.

One violation occurs for a European network \( E \) that routes via OpenPeering (AS20562)—a transit relationship identified from RPLS entries in public routing databases. After poisoning OpenPeering, \( E \) routes through (a likely peer-to-peer relationship) with AMPATH (AS20080) at AMS-IX. We list this as a violation because CAIDA identifies OpenPeering as a provider for \( E \) and AMPATH as a peer of \( E \). Interestingly, the second route is the suffix of the first route (i.e., the route through OpenPeering also reaches PEERING through AMPATH at AMS-IX), indicating the first route is still valid but not chosen.