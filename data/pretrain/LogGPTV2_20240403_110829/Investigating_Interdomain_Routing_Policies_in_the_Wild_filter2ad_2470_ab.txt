one Brazilian university as providers. We change announcements at
most once per 90 minutes to allow for route convergence and avoid
route ﬂap dampening. We use preﬁxes allocated to the PEERING
research testbed reserved for our experiments; these preﬁxes carry
no real trafﬁc beyond our measurements.
Discovering alternate routes. We start announcing an IP preﬁx
from all PEERING locations in an anycast announcement. At each
round, we observe the preferred route at a target AS T and the
next-hop neighbor N that T is using to route toward our preﬁx.
We then poison N, i.e., add N’s AS number to the path [3, 9],
to trigger BGP loop prevention at N and cause N to no longer
have a path to our preﬁx (and stop announcing a route to T ). This
forces T to choose a different route, through a different neighbor
N(cid:48). We repeat this process in consecutive rounds, poisoning the
newly-discovered neighbor, to identify all neighbors and routes T
can use toward our preﬁxes. When we observe different routes at
the target AS T (through different neighbors) from multiple van-
tage points (e.g., due to different routing preferences at different
geographic locations), we run the algorithm for each vantage point
separately. We can potentially execute this algorithm for each AS
in the topology as the target AS. A similar experiment was per-
formed by Colitti [9]; here, we use the same mechanism with a
more diverse set of providers and with a different goal.
We insert all poisoned ASes into a single AS-set, and surround
the poisoned AS-set with PEERING’s AS number. This limits AS-
path length, prevents inference of non-existent inter-AS links, and
allows operators to identify the poisoning.
Reverse engineering BGP decisions.
In addition to the exper-
iment to discover alternate routes, we conduct a complementary
experiment to infer BGP decision triggers. We ﬁrst announce an
IP preﬁx from one PEERING location (called the magnet), wait ﬁve
minutes to allow for route convergence, then announce (anycast)
the same IP preﬁx from all other PEERING locations. After we any-
cast the preﬁx, an AS may change to a new route with higher Local-
Pref, shorter AS-path length, or better intradomain tie-breakers, as
speciﬁed in the BGP decision process [8]. If an AS x keeps using
the route toward the magnet after we anycast the preﬁx, we check if
the magnet route is cheaper according to the Gao-Rexford model or
has shorter AS-path length than all other routes we observed from
x. If none of these checks are satisﬁed, we infer AS x is using in-
tradomain costs or route age (the last tie-breaker before router ID)
as a tie-breaker. If AS x did not choose the route to the magnet,
we check if the chosen route is cheaper or shorter than the route to
the magnet. If none of these checks are satisﬁed, we infer AS x is
using intradomain costs as a tie-breaker.
We repeat this process using each PEERING location as the mag-
net. We also check whether the route chosen after we anycast the
preﬁx is more expensive according to the Gao-Rexford model or
is the same cost but has longer AS-path length than other routes
we observed, which is a violation of the model. The route to the
magnet may become unavailable when a downstream AS receives
and chooses a more preferred route; in these cases we consider the
downstream AS’s decision.
Vantage points (VPs). We perform traceroutes from 96 RIPE At-
las probes and approximately 200 PlanetLab nodes every 20 min-
utes, and collect BGP feeds every 15 minutes from RouteViews
and RIPE RIS to monitor paths toward PEERING preﬁxes. We use
the maximum number of RIPE Atlas probes allowed within daily
probing budget limits. We implement a greedy heuristic that picks
probes to maximize the number of ASes traversed on the default
paths toward PEERING locations.
Data set. We needed a total of 188 distinct poisoned announce-
ments to infer preferences for all 360 target ASes we observe on
paths toward PEERING (some poisonings are useful for multiple
target ASes). We observe 739 inter-AS links. We ﬁnd 45 inter-AS
links that are not in CAIDA’s AS-relationship database, 10 of which
(22.2%) can only be observed with poisoned announcements.
3.3 Comparison with existing models
We compare paths observed in our passive and active measure-
ments with CAIDA’s topology of inferred inter-AS relationships.
We aggregate ﬁve topologies (Oct. 14 to Feb. 15) inferred using
the method presented by Luckie et al. [25]. We aggregate these
snapshots to mitigate the impact of transient link failures on the
topology used in our analysis. When inferences conﬂicted, we took
the majority poll of inferred relationships while assigning higher
weight to more recent inferences, i.e., if the latest two months had
the same inference, we used that inference regardless of the ﬁrst
three months. We use this topology to compute all paths that sat-
isfy the Gao-Rexford (GR) model described in Section 2.
We compare the measured paths with all paths satisfying the GR
model computed using CAIDA’s inferred relationships. We con-
sider two properties: (1) whether the measured path satisﬁes the
GR model of local preference, and (2) whether the measured path
has the same length as the shortest paths satisfying the GR model
of local preference. Based on this we classify routing relationships
as either obeying GR local preference; i.e., using the neighbor with
the Best Relationship type (Best), routing based on shortest path
(Short), or a combination of the two.
For our active probing measurements, we consider the order in
which the target AS T chooses paths. Again, we consider two prop-
erties: (1) whether the relationship between T and the next-hop on
the ﬁrst path is equal or better than the relationship with the next-
hop on the second path, and (2) whether the ﬁrst path is shorter or
equal in length as the second path. We similarly label the observed
decisions which obey property (1) as Best, and those that obey (2)
as Short. We have limited visibility on what path the second neigh-
bor exported to T when T chose the ﬁrst path. When labeling deci-
sions, we assume the second neighbor exported the second path to
T when T chose the ﬁrst path. We veriﬁed this assumption holds
for the results we report.
In both cases, the sets should be treated as disjoint, with ASes
that obey both Best and Short path policies appearing only in the
Best/Short category. Observations which follow neither of these
properties are considered inconsistent with existing models (i.e.,
NonBest/Long category). There can be, however, some cases when
a path suggested by CAIDA’s inferences might not exist in practice.
One of the reasons can be incomplete or erroneous inferences in the
73topologies. In addition, an AS might apply more complex ﬁlters
than suggested by Gao-Rexford model when deciding which paths
to advertise to neighbors (Section 4.3 discusses this in more detail).
4. HOW OFTEN DO MODELS HOLD?
We now consider how empirically observed AS paths compare
with those predicted by GR model. We then investigate how often
deviations can be explained by known sources of inaccuracies.
Encouragingly, we ﬁnd that a majority of routing decisions
(64.7%) for passively observed measurements are correctly in-
ferred by the commonly used GR model; however, a signiﬁcant
fraction (34.3%) do not follow that model. Figure 1 (Simple) char-
acterizes the observed routing decisions based on whether the path
chosen is Best or Short. We ﬁnd only a small number of cases
(8.3%) where decisions can neither be explained by Best nor by
Short path selection. In the following sections, we explore the rea-
sons behind these decisions that differ from model-based predic-
tions.
Figure 1: Breakdown of routing decisions observed by taking
into account complex relationships (Complex), siblings (Sibs),
preﬁx-speciﬁc policies (PSP-1, PSP-2) and by combining com-
plex and siblings relationships with both criteria of preﬁx-
speciﬁc policies (All-1, All-2).
4.1 Complex routing relationships
A well known limitation of existing routing policy models is
the simpliﬁcation of relationships into either customer-provider or
settlement-free peering relationships. Recent work by Giotsas et
al. addresses this limitation by augmenting relationship inferences
with cases of hybrid relationships (i.e., ASes whose arrangements
vary based on location) and partial transit relationships (i.e., ASes
who will behave as providers, but only for a subset of preﬁxes) [15].
The hybrid relationship dataset contains pairs of ASes and the cor-
responding cities where relationships differ for a given AS pair. To
use this dataset, we use the geolocation data from [6], which offers
good coverage of infrastructure IPs such as routers. For each pair
of ASes in each AS path, we geolocate corresponding IP addresses
and if the geolocation data points to the same city as mentioned in
hybrid relationship dataset for that AS pair, we use the hybrid rela-
tionship. Figure 1 (Complex) shows the breakdown of routing de-
cisions observed taking into account these complex relationships.
Interestingly, we ﬁnd that taking these relationships into account
has nearly no impact on the classiﬁcation in our dataset (less than
1% change).
4.2 Sibling ASes
The mapping between AS numbers and organizations is not one-
to-one [4]. Many organizations manage multiple AS numbers, ei-
ther for geographic regions (e.g., Verizon with ASNs 701, 702, and
703) or due to mergers (e.g., Level 3 (AS 3356) and Global Cross-
ing (AS 3549)).
Cai et al. [4] present a technique to map organizations to ASes by
using attributes like organization IDs, email addresses and phone
numbers found in whois information of ASes. We take a similar
approach to identify AS siblings, but our approach differs in two
key ways. First, we focus only on e-mail addresses in whois data,
which previous work identiﬁed as the ﬁeld with best precision and
recall [4]. Second, we use DNS SOA records to identify different
e-mail domains that belong to the same organization. For example,
dish.com and dishaccess.tv share the dishnetwork.com authorita-
tive domain. We also remove groups where the e-mail address is
hosted by a popular e-mail provider (e.g., hotmail.com), or regional
Internet registry (e.g., ripe.net). This results in a total of 94 sibling
groups identiﬁed in our traceroute data set.
For every non GR decision that an AS makes, we check whether
the AS chooses a path via a sibling. If the path is via a sibling, we
mark this decision as satisfying the Best condition. Figure 1 (Sibs)
shows the result of this change—3.9% more decisions are classiﬁed
as Best/Short.
4.3 Preﬁx-speciﬁc policies
Interdomain routing is often abstracted to the level of a desti-
nation AS. However, in practice routing is based on IP preﬁxes
which may be subject to different export policies by their originat-
ing AS (e.g., forwarding preﬁxes hosting enterprise-class services
to a more expensive provider). While Giotsas et al. consider par-
tial transit [15], which is a type of preﬁx-speciﬁc policy, they do
not explicitly consider per-preﬁx policies as implemented by origin
ASes.
We use two criteria to identify preﬁx-speciﬁc policies based on
correlation with BGP data obtained from Routeviews/RIPE [34,
39]. Given an origin AS (O), a neighbor N and a preﬁx P : Crite-
ria 1 do not assume the edge N − O exists for preﬁx P unless we
observe O announcing P to N in the BGP data. Criteria 2 is simi-
lar to Criteria 1, except that we require that we observe at least one
preﬁx announced from O to N before applying Criteria 1. The ﬁrst
criteria can be seen as being more aggressive whereas the second
aims to ensure that our observation is actually caused by selective
preﬁx announcement and not poor visibility.
Figure 1 (PSP-1, PSP-2) shows the breakdown of routing deci-
sions using Criteria 1 and 2 above, respectively. We ﬁnd that preﬁx-
speciﬁc policies account for a signiﬁcant fraction (10-19%) of un-
expected routing decisions. Combining Criteria-1 and Criteria-2
separately with simple, complex and siblings relationships, yields
85.7% and 75.7% of decisions for Best/Short category respectively
(Figure 2, All-1, All-2). One limitation of these approaches is that
we only check preﬁx-speciﬁc policies for origin ASes. Other limi-
tation is incomplete visibility in BGP control plane data.
Validation. In order to validate the cases of preﬁx-speciﬁc policies,
we try to ﬁnd a Looking Glass server hosted by the neighboring
AS of the AS originating the preﬁx being examined. There were a
total of 630 cases of preﬁx-speciﬁc policies involving 149 unique
neighboring ASes. We were able to ﬁnd looking glass servers in
28 of the neighboring ASes. Using these looking glass servers we
manually verify 100 cases of preﬁx-speciﬁc policies and conﬁrm
that applying Criteria 1 was correct 78% of the time.
4.4 Active BGP Measurements
Using our active BGP measurements, we discover alternate
routes. We study whether the sequence of alternate route choices
match existing models and infer which step of the BGP decision
 0 20 40 60 80 100SimpleComplexSibsPSP-1PSP-2All-1All-2Percentage of DecisionsBest/ShortNonBest/ShortBest/LongNonBest/Long74BGP DECISION
Best relationship
Shorter path
Intradomain tie-breaker
Oldest route (magnet)
Violation
Total
BGP FEEDS
(46.0%)
435
152
(16.0%)
(16.4%)
155
(2.5%)
24
(18.9%)
179
945
(100%)
TRACEROUTES
(42.4%)
228
158
(29.4%)
(15.6%)
84
(1.6%)
9
(10.8%)
58
537
(100%)
Table 2: BGP decisions observed after we anycast a preﬁx pre-
viously announced from a single (magnet) location.
process led to each route. We report results for experiments per-
formed between Feb. 25th and Apr 27th, 2015.
Alternate routes. We analyze AS routing choices when we use
PEERING to discover alternate, less preferred routes. We com-
pare the sequence of routes chosen by target ASes with CAIDA’s
AS-relationships database. Out of the 360 ASes we targeted, 310
(86.1%) chose routes following both Best and Shortest (as deﬁned
in Sec. 3.3); 29 (8.0%) chose routes following Best only; 18 (5.0%)
following Shortest only; and 3 (0.8%) did not follow either prop-
erty. We discuss the three observations that did not satisfy either
property to illustrate limitations of current models.
One violation occurs for a European network E that routes
via OpenPeering (AS20562)–a transit relationship identiﬁed from
RPLS entries in public routing databases. After poisoning Open-
Peering, E routes through (a likely peer-to-peer relationship) with
AMPATH (AS20080) at AMS-IX. We list this as a violation be-
cause CAIDA identiﬁes OpenPeering as a provider for E and AM-
PATH as a peer of E. Interestingly, the second route is the sufﬁx
of the ﬁrst route (i.e., the route through OpenPeering also reaches
PEERING through AMPATH at AMS-IX), indicating the ﬁrst route