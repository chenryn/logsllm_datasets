18
9
8
8
Total Unique
4,253
1,827 77
5.1 Reﬂectors Using Blocklists
100
80
60
40
20
s
t
s
o
H
f
o
e
g
a
t
n
e
c
r
e
P
0
0
2
4
Number of Blocklist Used
6
8
Fig. 3. CDF of the number of
blocklists used by reﬂectors.
We identiﬁed 4,253 (1.9%) reﬂectors that use at least one of the 9 public block-
lists. Table 2 shows the number of reﬂectors using each of the nine diﬀerent
blocklists, as well as the number of unique /24 s and ASes those reﬂectors appear
in. Spamhaus DROP is by far the most popular blocklist in our collection, fol-
lowed by Spamhaus EDROP. The remaining blocklists have a comparatively
small number of reﬂectors using them. Since many aspects of our method and
experiment make conservative choices, these results should be considered a lower
bound.
Figure 3 shows the cumulative distribution of the number of blocklists these
reﬂectors use. For the 9 public blocklists we studied, over 68.6% use just one
blocklist, 23.8% use two or more, and 7.6% use three or more. One reﬂector used
6 of the 9 blocklists.
For these reﬂectors, though, there are interesting patterns to the multiple
blocklists used. Figure 4 shows the use of multiple blocklists with a heatmap.
Rows and columns correspond to blocklists, and each cell of the heatmap shows
the fraction of the reﬂectors using the blocklist in row R that are also using the
blocklist in column C. For example, the ﬁrst cell for ET Compromised shows
that 78% of the reﬂectors that use ET also use the Spamhaus DROP blocklist.
Diagonal cells are 1.00 since they show blocklists compared with themselves.
Blocklists are ordered in the same order as in Table 2.
68
V. G. Li et al.
s
n
o
i
t
a
z
i
n
a
g
r
O
f
o
r
e
b
m
u
N
50
40
30
20
10
0
Government
Healthcare
Enterprise
Education
Hosting Provider
ISP
DROPeDROP DTop
ET
BDS Feodo Snort DE
Blocklists
Tor
Fig. 4. Pair wise intersection between
reﬂectors that use each blocklist.
Fig. 5. Breakdown of the number of
organizations covered by each blocklist.
The ﬁrst cell of the Spamhaus EDROP row indicates that all reﬂectors that
use Spamhaus EDROP also use Spamhaus DROP. Since the eDROP list is an
extension of the DROP list, the behavior is strongly consistent with expectations.
Moreover, the many signiﬁcant values in the ﬁrst two columns show that reﬂec-
tors that use any of the other blocklists very often also use Spamhaus DROP
and eDROP. At least for the hosts that we select for, these results underscore
the popularity of Spamhaus lists and indicate that, if a reﬂector blocks traﬃc
using blocklists, it very likely uses Spamhaus.
Ultimately the blocklist use and blocking behavior of the reﬂectors is strongly
tied to the organization to which they belong. While inferring the exact organiza-
tion behind an IP is diﬃcult, we can still explore some high-level organizational
aspects of blocklists. We ﬁrst identify the AS for every reﬂector, then use the
CAIDA AS-to-Organization dataset [8] to map the AS to an organization. Then,
we manually partition the organizations into six categories: ISPs (e.g., Comcast),
Hosting Providers (e.g., GoDaddy web hosting, AWS cloud computing), Educa-
tion (e.g., universities), Healthcare (e.g., hospitals), Government (e.g., state and
federal agencies), and Enterprise (individual companies owning the IPs).
Figure 5 shows the number of organizations using each blocklist, and their
breakdowns by organization category. Most blocklists are used by a wide variety
of organizations. Feodo IP Blocklist is the most diverse blocklist in our study, as
organizations from all six categories use it. From the perspective of organizations,
Educational institutions cover 8 of the 9 blocklists we selected, suggesting a
potential preference among universities on using public blocklists.
Validation: Based upon the locations of blocking reﬂectors, we reached out
to two universities that we concluded are using blocklists. In both cases, the
blocklists we inferred matched the blocklists they reported using, validating the
technique in these two cases. More speciﬁcally, University A conﬁrmed our ﬁnd-
ings that they use BDS IP Ban List, ET Compromised, Spamhaus DROP and
Clairvoyance: Inferring Blocklist Use on the Internet
69
Spamhaus EDROP. University B conﬁrmed our ﬁndings that they use Spamhaus
DROP and Spamhaus EDROP.
5.2 Partial Blocking
Partial blocking is when a reﬂector blocks some of the blocklist IPs but not all
of them. There are many reasons, unrelated to the use of a blocklist, why a
reﬂector may block a blocklist IP. A host may have internal policies that deny
access from some network providers, or network administrators may add IPs into
their ﬁrewall on an ad-hoc basis based on an organization’s own policies. These
alternate blocking behaviors could overlap with the blocklist IPs we sampled,
leading to partial blocking behavior.
Geo-blocking is one cause of partial blocking we identiﬁed, where a reﬂector
drops all traﬃc from a particular country. DShield Top Blocklist, for example,
had over 50% of its IPs on January 25, 2020 geo-located in the Netherlands.
If a reﬂector blocks traﬃc from the Netherlands, then we would observe that
the reﬂector is partially blocking DShield Top Blocklist. To identify whether
a reﬂector uses geo-blocking, we check whether the reﬂector consistently blocks
IPs from a particular country. For all countries related to blocklist IPs we tested,
we sample IP addresses from those countries based on four IP location services:
MaxMind [24], IP2Location [15], IPDeny [16], and IPIP.net [17], and test against
our reﬂectors. Overall, we identiﬁed a small number of reﬂectors, 614 (0.28%),
that consistently block traﬃc from at least one country.
After removing the geo-blocking reﬂectors from partial blocking cases, we
noticed that a small percentage of reﬂectors consistently blocked a signiﬁcant
subset of blocklist IPs, but not all, in every experiment. This consistency sug-
gests that there is a large overlap between the blocklist and the blocking policy of
the reﬂector. If a reﬂector blocks over 50% of sampled IPs from a blocklist every
time we test, we regard the reﬂector as exhibiting signiﬁcant partial blocking
over a blocklist. In total we identiﬁed 871 (0.4%) such reﬂectors. These hosts are
probably using a source that is very similar to the blocklists we tested, as previ-
ous work has shown that commercial products can aggregate data from public
blocklists, and then conduct post-processing to eliminate some content [23]. It
is also possible that they are using an older version of the same list, where the
content is mostly the same.
Besides these cases, an additional ﬁfth of reﬂectors demonstrate blocking
behavior, as evidenced in Fig. 2. Although we do not know the exact reason for
the blocking, the result suggests that security-related network blocking is rela-
tively prevalent even among low security hygiene hosts such as these reﬂectors.
Finally, we had originally hypothesized that network layer blocking would
be primarily implemented in border devices (e.g., ﬁrewalls, gateways) and thus
aﬀect whole network blocks identically. However, when checking reﬂectors within
the same /24 s, we ﬁnd that reﬂectors under the same /24 frequently do not block
the same set of IPs. We refer to this as inconsistent blocking. Our experiment
found 8,909 (/24, blocklist) pairs where multiple reﬂectors under that /24
block some IPs in that speciﬁc blocklist. Among them, 3,263 (36.6%) pairs show
70
V. G. Li et al.
inconsistent blocking behavior. This result implies there is considerable intra-
network diversity in blocking policy. More analyses and details on the method-
ology can be found in Chap. 4 in [22].
6 Conclusion
Our paper proposes, implements and tests a technique for inferring the deploy-
ment of network-layer blocklists and, further, for attributing the use of partic-
ular blocklists by particular hosts. While our technique depends on hosts that
are largely quiescent (not sending or receiving much traﬃc) and use a global
increment strategy for IP ID generation (typically those with older operating
systems), both of these limitations may be addressable to some extent. Hosts
with modest levels of traﬃc are likely still amenable to testing by using larger
sample sizes and more sophisticated statistical testing regimes. As well, while
many modern hosts purposely obfuscate the generation of IP ID values, recent
work by Klein and Pinkas [19] has demonstrated attacks on these algorithms (in
Windows and Linux in particular) which may provide purchase for using the IP
ID side channel with more contemporary machines. Future work could leverage
these methods to apply our technique to more blocklists with a broader set of
reﬂectors.
Our pilot study covered 220K US hosts, identiﬁed blocking behavior in
roughly a fourth of all reﬂectors, but only 2% show clear use of the blocklists
we tested against. This diﬀerence is puzzling on multiple fronts. It suggests that
even among older quiescent hosts that there are signiﬁcant network security con-
trols in place. Also, it indicates that there may be far more diversity in blocklist
usage than we had initially imagined.
A Inference Technique Details
Our technique, while simple in theory, needs to handle real-world scenarios,
including packet losses, packet reordering during transition, and other traﬃc on
reﬂectors. The inference method needs to be eﬃcient, accurate, and have low
overhead. Blocklists can change frequently, leaving a short window to infer a
stable behavior. As such, for the measurement to ﬁnish in a reasonable amount
of time requires an eﬃcient inference method. Additionally, the method should
also have low false positive and false negative rates so that we can be conﬁdent
about the result. Finally, it should require as few packets as possible to reduce
potential impact on reﬂectors.
The ﬁrst step is to ﬁnd reﬂectors suitable to our measurement technique.
Recall that a suitable reﬂector should have minimal background traﬃc, and not
be part of a network doing ingress ﬁltering for spoofed packets. To ﬁnd quiescent
hosts, reﬂectors with low background traﬃc, we send 24 probes to each candidate
host, 1 per second, and repeat the experiment 5 times at diﬀerent times of the
day. We then only select hosts where at least 30% of their IP ID increases are
equal to 1 per second—the host did not receive any extra traﬃc in that one
Clairvoyance: Inferring Blocklist Use on the Internet
71
second. We use the 30% threshold to select hosts that are largely “quiet”, and
thus more likely to yield a perfect signal in the experiment. Next, to identify
hosts behind ingress ﬁltering, we acquired 7 vantage points around the world
to exercise diﬀerent paths to the reﬂector. We sent spoofed packets from our
measurement machine to the hosts with spoofed source addresses corresponding
to the 7 vantage points, and then collected responses at each vantage point. We