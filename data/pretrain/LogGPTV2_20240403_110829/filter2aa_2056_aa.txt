# Cookie安全问题探讨

## 作者与会议信息
- 作者：Xiaofeng Zheng, Jian Jiang, Jinjin Liang, Haixin Duan, Shuo Chen, Tao Wan, Nicholas Weaver
- 单位：清华大学网络与信息安全实验室NISL
- 会议：USENIX Security '15
- 链接：[https://www.usenix.org/conference/usenixsecurity15/technical-sessions/presentation/zheng](https://www.usenix.org/conference/usenixsecurity15/technical-sessions/presentation/zheng)

## 引言
谁忽视了Cookie的安全性？以星巴克为例，离开时需要做些什么来保护你的个人信息？

## Cookie基础知识
### 定义与用途
- **功能**：保持HTTP会话状态和缓存信息。
- **设置方式**：
  - 服务器端通过`Set-Cookie`响应头写入，例如：`Set-Cookie: user=bob; domain=.bank.com; path=/;`
  - JavaScript代码也可以设置，如：`document.cookie = "user=bob; domain=.bank.com; path=/";`
- **存储与传输**：保存在浏览器中，并在HTTP请求头中发送，例如：`Cookie: user=bob; cart=books;`
- **唯一标识**：由[name, domain, path]三元组确定。写入时带有属性，读取时不显示这些属性。

### 同源策略(SOP)
- **Web SOP**：基于[协议, 域名, 端口]进行判断。
- **Cookie SOP**：仅考虑[域名, 路径]，不区分端口或协议（HTTP/HTTPS）。

### Domain向上通配规则
- 当页面位于`http://www.bank.com`时，以下Cookie会被接受或拒绝：
  - `user1=aaa; domain=.bank.com; path=/;` —— 接受
  - `user2=bbb; domain=www.bank.com; path=/;` —— 接受
  - `user3=ccc; domain=.www.bank.com; path=/;` —— 接受
  - `user4=ddd; domain=other.bank.com; path=/;` —— 拒绝

### Path向下通配规则
- 如果设置了两个Cookie：
  - `session=bob; domain=.bank.com; path=/;`
  - `cart=books; domain=.bank.com; path=/buy/;`
  访问`http://bank.com/buy/`时，将看到所有相关的Cookie值。

## HTTPS下的Cookie安全性
- **Secure Flag**：确保Cookie只通过HTTPS连接发送。但即使有此标志，仍可能因完整性不足而被篡改。
- **RFC 6265**指出，尽管Secure属性有助于保护Cookie免受主动网络攻击者的窃听，但它并不能防止攻击者从非安全通道覆盖这些Cookie，从而破坏其完整性。

## Cookie注入及反射风险
- **注入攻击**：利用服务端将Cookie嵌入HTML内容中的特性实施跨站脚本(XSS)攻击。
- **反射攻击**：广泛存在于许多网站上，尤其是那些认为自己的Cookie是“可信”的情况下。
- **重名Cookie处理**：不同JavaScript库和服务器框架对于同名Cookie的处理方式存在差异，导致潜在的安全漏洞。

## 结论
本文揭示了Cookie在现代Web应用中存在的多种安全挑战，包括但不限于SOP限制、Domain/Path匹配机制以及Secure Flag的有效性等问题。开发者应当意识到这些问题并采取适当措施加强防护。