ones in x direction (9b, 9d, 9i). Furthermore, there are six
frequency modes for out-of-plane movements. Three ones
for translational motions (9c, 9h, 9k) and three ones for
rotational motions (9f, 9j, 9l). We are able to drive and
measure all of these mode shapes. A big advantage of such
a dedicated MEMS-based PUF is that it is possible to design
the mechanical structure in a way that the usable frequency
modes are close together and optimally deﬁned for the use as
PUFs. This is in contrast to the structure of a MEMS-based
gyroscope where the focus is on the drive and detection modes
shifting all further frequency modes as far as possible away
from them. Additionally, there is a quadrature signal for each
frequency mode and six pairs of electrodes, i.e., the design
provides in total twelve frequency modes, twelve quadrature
signals and six electrical capacitances.
To estimate the number of bits that could be derived from
our structure, we carry out FEM-simulations using ANSYS
to calculate the frequency modes. Subsequently, we determine
the capacitances between the electrodes and the quadrature
signals with a reduced order model developed by Gugel [37]
which is based on the principle of modal superposition. This
method transmits the equation of motion (Equation 7) used in
the FEM-analysis to a description of the system with reduced
complexity solving the eigenvalue problem (-ω2
i M + K)ϕi
= 0 with the eigenvectors ϕi and the eigenvalues ωi. As a
result, we receive the transformation matrix Φ including the
eigenvectors ϕi. M is the mass matrix, K is the stiffness matrix
and D is the damping matrix. Equation 10 describes the system
(a) Mode 1 @9500 Hz (in-plane
y).
(b) Mode 2 @10059 Hz (in-
plane x).
(c) Mode 3 @17728 Hz (out-of-plane
translational).
(d) Mode 4 @33462 Hz (in-
plane x).
(e) Mode 5 @35299 Hz (in-
plane y).
(f) Mode 6 @35629 Hz (out-of-plane
rotational).
(g) Mode 7 @52041 Hz (in-
plane y).
(h) Mode 8 @57902 Hz (out-of-plane
translational).
(i) Mode 9 @63992 Hz (in-
plane x).
(j) Mode 10 @71521 Hz (out-of-plane
rotational).
Fig. 9. 12 frequency modes of our design proposal for a dedicated MEMS-based PUF.
(k) Mode 11 @79420 Hz (out-of-plane
translational).
(l) Mode 12 @96497 Hz (out-of-plane
rotational).
a few of such structures, while still being able to ﬁt in a single
unit.
A. Limitations and Further Research
We showed that deriving a cryptographic key from a MEMS
is feasible. However, we are still in need to extract more bits
from the MEMS structure itself, enhancing following steps in
the key generation process. Regarding the implementation of
MEMS-based PUFs in sensor systems and the achievement of
a further key lengthening, two approaches are possible.
1) Use of several existent MEMS sensors in a sensor
system, e.g., 9 degree-of-freedom sensor nodes, and add-
up of cryptographic key seeds which can be derived from
the individual sensors.
2) Development of a speciﬁc MEMS-based PUF device,
optimized for PUF applications.
The ﬁrst approach provides an additional value for existing
sensors and aims at its enhancement. This requires further
investigations of MEMS-based sensors. On one hand, there
could be more suitable parameters than that we have actually
measured. For example in case of gyroscopes, there should
be more frequency modes existent than nine. Additionally, it
is possible to measure a quadrature signal for each frequency
mode but we measured just two, because of constraints on
the measurement setup. Especially, the quadrature signals are
potentially able to lengthen the derivable keys, because they
can be used to extract proportionally many bits and show
little correlation with other parameters. On the other hand,
investigations of different MEMS sensors have to be done.
Besides, further tests should be carried out to analyze the
reliability of different parameters. For example, these could
be tests on packaged devices as mechanical stress tests and
aging tests.
The second approach aims at the development of a dedicated
MEMS-PUF which beneﬁts from the experiences gained from
investigations on different existing MEMS sensors. The design
and the manufacturing process can be optimized to increase
variability and thus deriving more bits per parameter. More-
Mode 7 @ 35299 HzColor: sum-Displacement#10400.511.522.53Mode 8 @ 35629 HzColor: z-Displacement#104-2.5-2-1.5-1-0.500.511.522.5Mode 9 @ 52041 HzColor: sum-Displacement#10400.511.522.53Mode 11 @ 57902 HzColor: z-Displacement-50000500010000150002000025000Mode 12 @ 63992 HzColor: sum-Displacement#10400.511.522.53Mode 13 @ 71521 HzColor: z-Displacement#104-3-2-10123Mode 15 @ 79420 HzColor: z-Displacement#104-1-0.500.511.522.5Mode 17 @ 96497 HzColor: z-Displacement#104-3-2-10123over, such a speciﬁc design can be optimized that it provides
more suitable parameters for PUF applications than a standard
MEMS sensor. Therefore a dedicated MEMS PUF would
present an excellent candidate for high security applications.
Due to the small size of such an element, it is also conceivable
to add this structure to a MEMS sensor without making them
signiﬁcantly larger or affecting its functionality.
Besides the construction of an actual PUF, estimation on
min-entropy is an open research direction. State-of-the-art
estimations, e.g., CTW compression, focus on giving an upper
bound of entropy, leaving the problem of possible less entropy
open. Clearly, for high security applications a sound estimate
of the enclosed lower entropy bound should be given.
B. Related Work
1) Physical Unclonable Functions: PUFs have been di-
vided into two categories depending on the number of uncorre-
lated CRPs that they accept. These two categories are strong
PUFs and weak PUFs (also called obfuscating PUFs [38]),
originally introduced in [9] and further developed in [38],
[39]. R¨uhrmaier et al. has formalized the strong PUF deﬁnition
[38]. Their model postulate that an attacker has access to an
oracle, which replies to a challenge Ci with the same response
Ri as the real system. Thus, concepts that protect the access
to the PUF are not taken into account, although they would
lead to increased security. Examples include concepts such
as controlled PUFs which protect the access to the PUF with
pre- and postprocessing steps [10]. A strong PUF has so many
CRPs that an attacker cannot measure all of them during a
limited time period. Furthermore, it should be infeasible to
build a digital model that would allow an attacker to come
up with the right response on a randomly choosen challenge.
In authentication applications, a strong PUF has the advantage
that the response of the system can be transmitted without any
additional security because each CRP is only used once.
A promising candidate for an electrical strong PUF was the
class of Arbiter PUFs. Arbiter PUFs generate their responses
by exploiting delay information of, e.g., two identical con-
structed paths, of ICs [8]. Such an Arbiter PUF has a multi-
bit input and computes a 1-bit output. The chosen paths are
stimulated via multiplexing by the speciﬁc challenge and an
arbiter compares which of the both competing paths was faster.
By concatenating the responses, corresponding to different
challenges, a unique key is extracted. Variations of the Arbiter
PUF presented in the literature include the XOR Arbiter PUF
[8], the Lightweight PUF [40] and the Feed Forward Arbiter
PUF [7], which aim for a higher security level than the original
Arbiter PUF. However, it has been shown several times that
it is possible to model the Arbiter PUFs behavior based on a
given set of CRPs by machine learning (ML) techniques, e.g.
[41], [42].
Weak PUFs have only a few CRPs, or in some cases, just
one. Hence, measures are needed to protect the key against
unauthorised access. A popular candidate from this PUF class
is the SRAM PUF, introduced by Guajardo et al. [9]. This
approach utilizes the power-up behavior of SRAM cells. On
power-up the bi-stable memory cells of a SRAM memory
tend to either the same bit value with high propability or
a random bit. The PUF is formed out of the robust cells,
which behave robust on every power-up. The concatenation
of the start-up values of all these memory cells is a unique
characteristic of each memory array. SRAM-based PUFs can
deliver a large number of bits, with the size of an SRAM array
as the only limit, and the memory cells do not correlated with
each other. Advantageously, SRAM cells are inherent in most
semiconductor devices. Hence, it does not require additional
devices or modiﬁcations in the manufacturing process.
However, it has been already shown that it is possible to
read out SRAM PUFs by invasive and semi-invasive attacks
[43]. Furthermore, Helfemeier et al. produced a physical clone
of a SRAM PUF [44].
Note that weak and strong PUFs aim at different purposes.
Strong PUFs could be compared with a physical hash function,
whereas weak PUFs are used for safeguard a secret key [45].
Until now, MEMS-based PUFs have received little attention,
unlike Arbiter or SRAM PUFs. The ﬁrst MEMS-based PUF
was proposed by Rosenfeld et al. [46]. Their method uses
an array of on-chip photodiodes and a translucent coating.
The transmittance of the coating is not uniform and causes
variations of the measured light level. The key is generated
by the variations between the amounts of light sensed by the
photodiodes.
Another work focused on MEMS is from Aysu et al. [14].
They used the deviations of an accelerometer’s self-test and
offset values for a low-cost device authentication. However,
they stated that their keys did not achieve the uniqueness as
the keys of, e.g., SRAM PUFs.
REFERENCES
[1] M. Weiser, “The computer for the 21st century-scientiﬁc american
special issue on communications,” Computers, and Networks (September
1991), 1991.
[2] D. Evans, “The internet of things — how the next evolution of the
internet is changing everything,” CISCO white paper, vol. 1, p. 14, 2011.
[3] K. Eldefrawy, G. Tsudik, A. Francillon, and D. Perito, “SMART: secure
and minimal architecture for (establishing dynamic) root of trust,” in
19th Annual Network and Distributed System Security Symposium, NDSS
2012, San Diego, California, USA, February 5-8, 2012. The Internet
Society, 2012.
[4] F. F. Brasser, B. E. Mahjoub, A. Sadeghi, C. Wachsmann, and P. Koeberl,
“Tytan: tiny trust anchor for tiny devices,” in Proceedings of the 52nd
Annual Design Automation Conference, San Francisco, CA, USA, June
7-11, 2015. ACM, 2015, pp. 34:1–34:6.
[5] N. Asokan, F. F. Brasser, A. Ibrahim, A. Sadeghi, M. Schunter,
G. Tsudik, and C. Wachsmann, “SEDA: scalable embedded device
attestation,” in Proceedings of the 22nd ACM SIGSAC Conference on
Computer and Communications Security, Denver, CO, USA, October
12-6, 2015, 2015, pp. 964–975.
[6] B. Gassend, D. E. Clarke, M. van Dijk, and S. Devadas, “Silicon
physical random functions,” in Proceedings of the 9th ACM Conference
on Computer and Communications Security, CCS 2002, Washington,
DC, USA, November 18-22, 2002, V. Atluri, Ed. ACM, 2002, pp.
148–160.
[7] J. Lee, D. Lim, B. Gassend, G. Suh, M. van Dijk, and S. Devadas, “A
technique to build a secret key in integrated circuits for identiﬁcation and
authentication applications,” in VLSI Circuits, 2004. Digest of Technical
Papers. 2004 Symposium on, June 2004, pp. 176–179.
[8] G. Suh and S. Devadas, “Physical unclonable functions for device
authentication and secret key generation,” in Design Automation Con-
ference, 2007. DAC ’07. 44th ACM/IEEE, June 2007, pp. 9–14.
[9] J. Guajardo, S. Kumar, G.-J. Schrijen, and P. Tuyls, “Fpga intrinsic pufs
and their use for ip protection,” in Cryptographic Hardware and Em-
bedded Systems - CHES 2007, ser. Lecture Notes in Computer Science,
P. Paillier and I. Verbauwhede, Eds. Springer Berlin Heidelberg, 2007,
vol. 4727, pp. 63–80.
[10] B. Gassend, M. V. Dijk, D. Clarke, E. Torlak, S. Devadas, and P. Tuyls,
“Controlled physical random functions and applications,” ACM Trans.
Inf. Syst. Secur., vol. 10, no. 4, pp. 3:1–3:22, Jan. 2008.
[11] D. Samyde, S. P. Skorobogatov, R. J. Anderson, and J. Quisquater,
“On a new way to read data from memory,” in Proceedings of the
First International IEEE Security in Storage Workshop, SISW 2002,
Greenbelt, Maryland, USA, December 11, 2002.
IEEE Computer
Society, 2002, pp. 65–69.
[12] S. P. Skorobogatov, “Data remanence in ﬂash memory devices,” in
Cryptographic Hardware and Embedded Systems - CHES 2005, 7th
International Workshop, Edinburgh, UK, August 29 - September 1, 2005,
Proceedings, ser. Lecture Notes in Computer Science, J. R. Rao and
B. Sunar, Eds., vol. 3659. Springer, 2005, pp. 339–353.
[13] J. A. Halderman, S. D. Schoen, N. Heninger, W. Clarkson, W. Paul,
J. A. Calandrino, A. J. Feldman, J. Appelbaum, and E. W. Felten, “Lest
we remember: cold-boot attacks on encryption keys,” Commun. ACM,
vol. 52, no. 5, pp. 91–98, 2009.
[14] A. Aysu, N. F. Ghalaty, Z. Franklin, M. P. Yali, and P. Schaumont,
“Digital ﬁngerprints for low-cost platforms using MEMS sensors,” in
Proceedings of the Workshop on Embedded Systems Security, ser. WESS
’13. New York, NY, USA: ACM, 2013.
[15] Y.-J. Chang, W. Zhang, and T. Chen, “Biometrics-based cryptographic
key generation.” in IEEE International Conference on Multimedia and
Expo (ICME), vol. 3, 2004.
[16] J. M. G. Linnartz and P. Tuyls, “New shielding functions to enhance
privacy and prevent misuse of biometric templates,” in Audio-and Video-
Based Biometrie Person Authentication, 4th International Conference,
AVBPA 2003, Proceedings, ser. LNCS, J. Kittler and M. S. Nixon, Eds.,
vol. 2688. Springer, June 9-11, 2003, pp. 393–402.
[17] Y. Dodis, L. Reyzin, and A. Smith, “Fuzzy extractors: How to generate
strong keys from biometrics and other noisy data,” in Advances in
cryptology-Eurocrypt 2004. Springer, 2004, pp. 523–540.
[18] C. Acar and A. Shkel, MEMS vibratory gyroscopes: structural ap-
proaches to improve robustness. Springer Science & Business Media,
2008.
[19] U. R¨uhrmair, S. Devadas, and F. Koushanfar, Introduction to Hardware
Springer, 2012, ch. Security Based on Physical
Security and Trust.
Unclonability and Disorder, pp. 65 – 102.
[20] H. Zhun and C. Hongyi, “A truly random number generator based on
thermal noise,” in ASIC, 2001. Proceedings. 4th International Confer-
ence on, 2001, pp. 862–864.
[21] G. Taylor and G. Cox, “Behind intels new random-number generator,”
IEEE Spectrum, Aug 2011.
[22] M. Wolf and T. Gendrullis, “Design, implementation, and evaluation
of a vehicular hardware security module,” in Information Security and
Cryptology - ICISC 2011, ser. Lecture Notes in Computer Science,
H. Kim, Ed. Springer Berlin Heidelberg, 2012, vol. 7259, pp. 302–318.
[23] T. Morris, “Trusted platform module,” in Encyclopedia of Cryptography
and Security. Springer, 2011, pp. 1332–1335.
[24] F. Sch¨on, “Frequenzgenauigkeit von silizium-basierten mikroelek-
tromechanischen, passiv kompensierten resonatoren f¨ur kraftfahrzeug-
anwendungen,” Ph.D. dissertation, Technische Fakult¨at der Universit¨at
Erlangen-N¨urnberg, 2010.
[25] F. M. Willems, Y. M. Shtarkov, and T. J. Tjalkens, “The context-
tree weighting method: basic properties,” Information Theory, IEEE
Transactions on, vol. 41, no. 3, pp. 653–664, 1995.
[26] ——, “Context weighting for general ﬁnite-context sources,” IEEE
transactions on information theory, vol. 42, no. 5, pp. 1514–1520, 1996.
[27] T. Ignatenko, G.-J. Schrijen, B. Skoric, P. Tuyls, and F. Willems,
“Estimating the secrecy-rate of physical unclonable functions with the
context-tree weighting method,” in Information Theory, 2006 IEEE
International Symposium on.
IEEE, 2006, pp. 499–503.
[28] Y. Gao, I. Kontoyiannis, and E. Bienenstock, “Estimating the entropy of
binary time series: Methodology, some theory and a simulation study,”
Entropy, vol. 10, no. 2, pp. 71–99, 2008.
[29] A. Rukhin, J. Soto, J. Nechvatal, M. Smid, and E. Barker, “A statis-
tical test suite for random and pseudorandom number generators for
cryptographic applications,” DTIC Document, Tech. Rep., 2001.
[30] V. Van der Leest, G.-J. Schrijen, H. Handschuh, and P. Tuyls, “Hardware
intrinsic security from d ﬂip-ﬂops,” in Proceedings of the ﬁfth ACM
workshop on Scalable trusted computing. ACM, 2010, pp. 53–62.
[31] E. Barker and J. Kelsey, “Nist draft special publication 800-90b rec-
ommendation for the entropy sources used for random bit generation,”
2012.
[32] U. M. Maurer, “A universal statistical test for random bit generators,”
Journal of cryptology, vol. 5, no. 2, pp. 89–105, 1992.
[33] Y. Dodis, J. Katz, L. Reyzin, and A. Smith, “Robust fuzzy extractors
and authenticated key agreement from close secrets,” in Advances in
Cryptology-CRYPTO 2006. Springer, 2006, pp. 232–250.
[34] A. Van Herrewege, S. Katzenbeisser, R. Maes, R. Peeters, A.-R.
Sadeghi, I. Verbauwhede, and C. Wachsmann, “Reverse fuzzy extractors:
Enabling lightweight mutual authentication for puf-enabled rﬁds,” in
Financial Cryptography and Data Security. Springer, 2012, pp. 374–
389.
[35] P. Koeberl, J. Li, A. Rajan, and W. Wu, “Entropy loss in puf-based key
generation schemes: The repetition code pitfall,” in Hardware-Oriented
Security and Trust (HOST), 2014 IEEE International Symposium on.
IEEE, 2014, pp. 44–49.
[36] A. Bogdanov, M. Kneˇzevi´c, G. Leander, D. Toz, K. Varıcı, and I. Ver-
bauwhede, “Spongent: A lightweight hash function,” in Cryptographic
Hardware and Embedded Systems–CHES 2011.
Springer, 2011, pp.
312–325.
[37] D. Gugel, “Ordnungsreduktion in der mikrosystemtechnik,” Ph.D. dis-
sertation, TU Chemnitz, 2009.
[38] U. R¨uhrmair, J. S¨olter, and F. Sehnke, “On the foundations of physical
unclonable functions,” Cryptology ePrint Archive, Report 2009/277,
2009, http://eprint.iacr.org/.
[39] F. Armknecht, R. Maes, A. Sadeghi, O.-X. Standaert, and C. Wachs-
mann, “A formalization of the security features of physical functions,”
in Security and Privacy (SP), 2011 IEEE Symposium on, May 2011, pp.
397–412.
[40] M. Majzoobi, F. Koushanfar, and M. Potkonjak, “Lightweight secure
pufs,” in Computer-Aided Design, 2008. ICCAD 2008. IEEE/ACM
International Conference on, Nov 2008, pp. 670–673.
[41] U. R¨uhrmair, F. Sehnke, J. S¨olter, G. Dror, S. Devadas, and J. Schmidhu-
ber, “Modeling attacks on physical unclonable functions,” in Proceed-
ings of the 17th ACM Conference on Computer and Communications
Security, ser. CCS ’10. New York, NY, USA: ACM, 2010, pp. 237–
249.
[42] U. R¨uhrmair, J. S¨olter, F. Sehnke, X. Xu, A. Mahmoud, V. Stoyanova,
G. Dror, J. Schmidhuber, W. Burleson, and S. Devadas, “Puf modeling
attacks on simulated and silicon data,” IEEE Transactions on Informa-
tion Forensics and Security, vol. 8, no. 11, pp. 1876–1891, 2013.
[43] D. Nedospasov, J.-P. Seifert, C. Helfmeier, and C. Boit, “Invasive puf
analysis,” in Fault Diagnosis and Tolerance in Cryptography (FDTC),
2013 Workshop on.
IEEE, 2013, pp. 30–38.
[44] C. Helfmeier, C. Boit, D. Nedospasov, and J.-P. Seifert, “Cloning
physically unclonable functions,” in Hardware-Oriented Security and
Trust (HOST), 2013 IEEE International Symposium on, June 2013, pp.
1–6.
[45] U. R¨uhrmair and D. Holcomb, “Pufs at a glance.” in Proceedings -
Design, Automation and Test in Europe, DATE, 2014.
[46] K. Rosenfeld, E. Gavas, and R. Karri, “Sensor physical unclonable
functions,” in Hardware-Oriented Security and Trust (HOST), 2010
IEEE International Symposium on, June 2010, pp. 112–117.