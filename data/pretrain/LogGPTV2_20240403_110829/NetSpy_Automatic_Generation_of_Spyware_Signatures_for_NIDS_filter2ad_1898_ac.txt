1
2
3
4
i >, i ∈ I} // Network traﬃc with S installed;
O′(I) = {;
RS = score of 1, 2, or 3 (See Figure 5);
return (D(I), RS )
Algorithm 1: Differential Analysis
A program is assigned a score of 2 if it sends data to
a server not included in the reference network statistics, but
correlation between network traﬃc contents and inputs can-
not be determined. Out of the 7 spyware programs that we
evaluated, NetSpy identiﬁed two that ﬁt into this category
(see Section 6 for details).
Finally, a program is assigned a score of 1 (i.e., least
likely to be spyware) if either (i) it does not produce any
network traﬃc, or (ii) sends data only to servers included
in the reference network statistics. For example, most of
the benign programs that we tested NetSpy on fall into this
category. Algorithm 1 summarizes diﬀerential analysis.
4. Signature Generation
Diﬀerential analysis assigns a score RS
(between 1
and 3) to an untrusted program S that it analyzes. If RS is
above a certain threshold (2 in our current implementation),
NetSpy classiﬁes the program as spyware and generates a
NIDS signature for this program.
The key to signature generation is to identify the invari-
ant portion of network traﬃc generated by a spyware pro-
gram, i.e., we must ﬁlter content that is speciﬁc to user in-
put. This is because a signature that has content related to
speciﬁc user input will miss network activity generated by
the program on other user input. On our running example,
Browser Accelerator, each packet sent to the home server
data.browseraccelerator.com contains a URL that the
user has entered. The NIDS signature must be agnostic to
the URL and retain the invariant portion of network traﬃc.
NetSpy uses a variant of the longest common subse-
quence (LCSeq) algorithm [12] to ﬁnd invariants. LCSeq
ﬁnds the longest subsequence of characters (i.e., not neces-
Input: D(I): set of network packets generated by S; RS:
spyware score of S .
Output: SignatureS : NIDS signature for S
if RS < threshold then
return EMPTY;
lcs = LCSeq-modiﬁed(D(1), . . ., D(n));
foreach marker introduced by LCSeq-modiﬁed do
lcs[index] = .*;
SignatureS = lcs;
return SignatureS ;
Algorithm 2: Signature Generation
1
2
3
4
5
6
7
5. Implementation
The NetSpy prototype is currently implemented for Win-
dows 2000/XP, and focuses on generating signatures for
spyware that target Internet Explorer. NetSpy is fully au-
tomatic. The only (optional) manual task is that of chang-
ing a conﬁguration ﬁle that contains the input URLs used
to collect reference network statistics. It currently produces
Snort signatures as output (though it can be adapted to pro-
duce signatures in other formats as well). We envision that
these signatures can help eﬀorts like Bleeding Edge Snort.
The prototype, implemented in C/C++, currently stands at
4700 lines of code, consisting of three principle compo-
nents: a packet capturing tool, a diﬀerential analysis tool,
and a NIDS signature generator.
The packet capturing tool records packets generated by
Internet Explorer in response to the simulated user activity
of visiting set of input URLs. The main components of this
tool are a driver, built using the IWebBrowser2 interface [4],
which allows full programmable control over Internet Ex-
plorer. For example, the driver uses Internet Explorer to
open a URL, reload a page, follow a link on a page and
close the browser window. Packets generated by Internet
Explorer are captured by NetSpy using two standard net-
work library tools, WinPcap [8] and LibNIDS [5]. Win-
Pcap is an industry-standard, host-based packet-capturing
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:29:53 UTC from IEEE Xplore.  Restrictions apply. 
Proceedings of the 22nd Annual Computer Security Applications Conference (ACSAC'06)0-7695-2716-7/06 $20.00  © 2006Score
3
2
1
Spyware?
Most likely
Likely
Least likely
Yes
Yes
No
Network Traﬃc Characteristics
Packet Content
Unseen Host
Can be correlated to input
No correlation to input
Examples
Browser Accelerator
Mirar Toolbar
Not important
MSN Messenger Toolbar, Weather Bug
Figure 5. Classiﬁcation of untrusted programs based upon network trafﬁc characteristics.
library for Windows. However, because WinPcap captures
packets at the link layer and does not handle network-level
protocols such as TCP/IP, NetSpy uses LibNIDS to provide
features such as TCP-reassembly that are essential for in-
specting packet content.
6. Evaluation
We evaluated the following aspects of NetSpy using sev-
eral untrusted programs:
1. False negatives. To measure false negatives, we ran Net-
Spy on 7 known spyware programs that target Internet
Explorer to determine (i) whether it correctly classiﬁed
each of them as spyware, and (ii) whether it produced
a succinct signature for the malicious substrate of each
spyware’s network behavior.
In our experiments (dis-
cussed in detail below and summarized in Figure 6) Net-
Spy produced no false negatives.
In particular, it cor-
rectly identiﬁed all 7 of the programs as spyware, and
produced succinct and precise Snort signatures for them.
It is also worth noting that just 2 out of the 7 spyware pro-
grams that we tested (namely, 180SearchAssistant and
UCmore) have signatures in Bleeding Edge Snort, thus
indicating that NetSpy can potentially help such eﬀorts.
2. False positives. To measure false positives, we used Net-
Spy with 9 widely-used toolbars for Internet Explorer
that are believed to be benign. NetSpy identiﬁed that 6 of
these toolbars were indeed benign. As we discuss below,
the remaining three toolbars (A9 Toolbar, Google Tool-
bar, and Yahoo Toolbar) showed network activity that
was highly suggestive of spying behavior.
We also updated our Snort signature database with the
signatures produced by NetSpy and ran the spyware in a test
environment monitored by Snort. With this signature set,
Snort was able to detect out-bound network traﬃc generated
by the spyware programs.
6.1. Evaluating NetSpy with known spyware
We discuss a few examples of known spyware programs
that NetSpy correctly detected and produced NIDS signa-
tures for. For brevity, in each case we only show the relevant
portion of the signature.
180SearchAssistant/Zango is a well-known spyware pro-
gram that monitors browsing activity and displays pages re-
lated pages in a separate Internet Explorer window. For ex-
ample, if a user visits www.google.com and searches for
cell-phones, then 180SearchAssistant displays one or more
pop-up windows containing cell-phone-related information.
NetSpy revealed that 180SearchAssistant contacted a
site called tvf.180solutions.com and sent a POST mes-
sage containing the web sites that the user was accessing.
NetSpy’s signature generator produced the following Snort
signature for 180SearchAssistant, where the highlighted
portion contains URLs or keywords (such as mp3) that the
user invokes Internet Explorer with:
POST /showme.aspx? keyword=.* &&did=998&...
Note, in particular, that NetSpy’s signature generator ab-
stracts away the speciﬁc keyword to produce a regular ex-
pression that represents the malicious substrate of network
activity generated by 180SearchAssistant.
AvenueMedia/InternetOptimizer
a
Browser Helper Object (BHO). 1 It hijacks the error page
displayed by Internet Explorer when a user tries to access
an invalid URL, and replaces the page with advertisements
related to the URL that the user entered. For example, if the
user (mistakenly) visits the invalid URL http://ipod/,
InternetOptimizer generates a page containing links to
websites that sell iPod-related products.
(DyFuCA)
is
NetSpy identiﬁed that InternetOptimizer contacteds the
server www.yoogee.com to obtain advertisements. The cor-
responding NIDS signature that NetSpy generated was:
GET /searchresult/?lt=14& q=.* &cls=wsi12&...
To catch such spyware, we also include invalid URLs (e.g.,
http://ipod/) in the default input set used by NetSpy. In
practice, we envision that the input set to NetSpy will be up-
dated by users when they observe unusual network activity
associated with certain URLs. NetSpy can then determine
whether the network activity was in fact generated by a spy-
ware program.
eXactSearchBar is a toolbar for Internet Explorer that, on
startup, sends a POST message (shown below) to a remote
server checkin.exactsearchbar.com.
POST /checkin2.aspx HTTP/1.0
It also automatically downloads updates from the server
files.exactserchbar.com with messages matching the
regular expression:
GET /Download/Update/.* HTTP/1.0
Finally, when a user visits an invalid URL, eXact-
SearchBar hijacks Internet Explorer’s error page and dis-
plays advertisements related to the URL (similar to Inter-
netOptimizer). Speciﬁcally, eXactSearchBar contacts the
1Browser Helper Objects, Browser Extensions and Toolbars are plug-
ins that add to the functionality provided by Internet Explorer.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:29:53 UTC from IEEE Xplore.  Restrictions apply. 
Proceedings of the 22nd Annual Computer Security Applications Conference (ACSAC'06)0-7695-2716-7/06 $20.00  © 2006s
m
a
r
g
o
r
P
e
r
a
w
y
p
S
n
w
o
n
K
s
m
a
r
g
o
r
P
r
e
h
t
O
Program Analyzed
Detected Behavior
180SearchAssistant/Zango
Browser Accelerator
Monitors URLs visited;
download ads/pages related to the URLs
Side Find
UCmore
AvenueMedia/InternetOptimizer
eXactSearch Toolbar
Hijacks Internet Explorer’s error pages
Downloads/installs updates;
Hijacks Internet Explorer’s error pages
Monitors URLs visited;
use SSL to send data and receive advertisements
Sends tracked URLs to siteinfo.a9.com
Sends tracked URLs to siteinfo.a9.com and client.a9.com
No network traﬃc detected
Monitors URLs visited
Monitors URLs visited
No network traﬃc detected
Mirar Toolbar
A9 Toolbar (No sign on)
A9 Toolbar (Sign on)
Google Toolbar (Tracking oﬀ)
Google Toolbar (Tracking on)
Yahoo Toolbar
MSN Messenger Extension
MSN Search Toolbar
Sun Java Console
Sunshine Meta Toolbar
Weather Bug
Yahoo Messenger Extension
Type
Signature
(common to the group)
Generated











Toolbar
BHO, Toolbar
BE, BHO
Toolbar
BHO
BHO, Toolbar
Toolbar
Toolbar
BHO, Toolbar
BHO, Toolbar