# 【技术分享】浅析Web缓存欺骗攻击（含演示视频）

#### 译文声明
本文是翻译文章，原文来源：blogspot.co.il  
原文地址：[链接]  
译文仅供参考，具体内容表达及含义以原文为准。

翻译：[running_wen](http://bobao.360.cn/member/contribute?uid=345986531)  
预估稿费：110RMB  
投稿方式：发送邮件至linwei#360.cn，或登录网页版在线投稿

## 前言
你是否曾想过，在访问某些网站时，可能会暴露敏感数据，甚至使攻击者能够控制你的账户？没错，这就是Web缓存欺骗攻击的一种情形。

## 漏洞背景介绍
网站通常通过CDN、负载均衡器或反向代理来实现Web缓存功能。通过缓存频繁访问的文件，可以降低服务器响应延迟。例如，网站“http://www.example.com”配置了反向代理。对于包含用户个人信息的页面（如“http://www.example.com/home.php”），由于每个用户返回的内容不同，这类页面通常是动态生成的，并不会在缓存服务器中缓存。通常缓存的是可公开访问的静态文件，如CSS文件、JS文件、TXT文件、图片等。许多最佳实践建议对这些静态文件进行缓存，并忽略HTTP缓存头。

Web缓存攻击类似于相对路径重写（RPO）攻击（[link1](http://www.thespanner.co.uk/2014/03/21/rpo/)，[link2](http://blog.innerht.ml/rpo-gadgets/)），都依赖于浏览器和服务器对URL的解析方式。当访问不存在的URL（如“http://www.example.com/home.php/non-existent.css”）时，浏览器发送GET请求，服务器返回“home.php”的内容，同时URL地址仍然是“http://www.example.com/home.php/non-existent.css”，HTTP头的内容也与直接访问“http://www.example.com/home.php”相同，包括缓存头和Content-Type（此处为text/html）。

## 漏洞成因
当代理服务器设置为缓存静态文件并忽略这些文件的缓存头时，访问“http://www.example.com/home.php/non-existent.css”会发生什么？整个响应流程如下：
1. 浏览器请求`http://www.example.com/home.php/non-existent.css`。
2. 服务器返回`home.php`的内容（通常不会缓存该页面）。
3. 响应经过代理服务器。
4. 代理识别该文件有CSS后缀。
5. 在缓存目录下，代理服务器创建目录`home.php`，并将返回的内容作为`non-existent.css`保存。

## 漏洞利用
攻击者可以欺骗用户访问“http://www.example.com/home.php/non-existent.css”，导致包含用户个人信息的页面被缓存，从而可以被公开访问。更严重的情况下，如果返回的内容包含会话标识、安全问题的答案或CSRF令牌，攻击者可以获取这些信息，因为大多数网站的静态资源都是公开可访问的。整个流程如图1所示：

![Web缓存漏洞利用](图1)

## 漏洞存在的条件
漏洞要存在，至少需要满足以下两个条件：
1. Web缓存功能根据扩展名进行保存，并忽略缓存头。
2. 当访问不存在的页面（如“http://www.example.com/home.php/non-existent.css”）时，会返回“home.php”的内容。

## 漏洞防御
主要防御措施包括：
1. 设置缓存机制，仅缓存HTTP缓存头允许的文件，这能从根本上杜绝该问题。
2. 如果缓存组件提供选项，设置为根据Content-Type进行缓存。
3. 访问不存在的页面（如“http://www.example.com/home.php/non-existent.css”）时，不返回“home.php”的内容，而是返回404或302状态码。

## Web缓存欺骗攻击实例：Paypal
在修复之前，通过该攻击可以获取的信息包括：用户姓名、账户金额、信用卡最后四位数、交易数据、电子邮件地址等。
受该攻击的部分页面包括：
- `http://www.paypal.com/myaccount/home`
- `http://www.paypal.com/myaccount/settings`
- `http://history.paypal.com/cgi-bin/webscr?cmd=_history-details`

可以缓存页面的静态文件后缀如下：aif、aiff、au、avi、bin、bmp、cab、carb、cct、cdf、class、css、doc、dcr、dtd、gcf、gff、gif、grv、hdml、hqx、ico、ini、jpeg、jpg、js、mov、mp3、nc、pct、ppc、pws、swa、swf、txt、vbs、w32、wav、wbmp、wml、wmlc、wmls、wmlsc、xsd、zip。

缓存有效期：经过测试，一旦文件被访问，它会被缓存大约5小时。如果在这期间该文件又被访问，则有效期延长。

Paypal访问页面与对应视频：
- [https://www.paypal.com/myaccount/home](https://youtu.be/pLte7SomUB8)
- [https://www.paypal.com/myaccount/settings](https://youtu.be/e_jYtALsqFs)
- [https://history.paypal.com/cgi-bin/webscr?cmd=_history-details](https://youtu.be/dgZVe7D8SRE)

## IIS Demo实验
在视频中，测试网站使用了IIS负载均衡器。登录后，会重定向到“welcome.php”页面，该页面包含了用户信息，而负载均衡器设置为缓存所有CSS文件，并忽略其缓存头。当登录用户访问“http://example.com/welcome.php/non-existent.css”时，负载均衡器创建目录`welcome.php`，并将返回的内容保存为`stylesheet.css`。