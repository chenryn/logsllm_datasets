I
w
o
d
a
h
s
o
t
s
n
o
i
t
c
e
n
n
o
c
0
0
5
10
15
20
30
25
Attack duration (days)
35
40
45
50
55
60
65
Figure 10: Probability of all outgoing connections made to
shadow IPs for varying attack duration (days). In all experi-
ments, attacks are non-adaptive for fair comparisons. We test
various countermeasures in Section VII-C. The EREBUS attack
becomes harder as the probability decreases.
attack [29] because it increases the botnet cost of the Eclipse
attack. However, increasing the table sizes, in fact, makes
the EREBUS attack much easier; it is the table-size reduction
that makes the EREBUS attack harder. Figure 10 shows the
evaluated probability of all eight outgoing connections to be
made to shadow IPs for different countermeasures. As we
can see, if we increase the table size, the adversary achieves
much higher success probability. The reduction of the table
sizes makes the EREBUS attack less effective. Contrary to
the Eclipse attackers, an EREBUS adversary has much larger
bandwidth capability and signiﬁcantly more IP addresses she
can utilize for attacks.
The actual deployment of this change, however, need much
more discussion in the community because the reduction of the
table sizes may limit the storage of benign and stable IPs in
the Bitcoin peer-to-peer network, which may affect the peering
dynamics of the system.
[C2] More outgoing connections. Another effective solution
is to increase the number of outgoing connections that can be
made in each Bitcoin node. The current maximum is eight and
by increasing it we make it harder to occupy all the outgoing
connections. As we can see in Figure 10, if we double it, the
EREBUS adversary achieves much lower success probability.
Note that the Eclipse attack paper also proposes a similar
countermeasure but
this has not been adopted in Bitcoin
core. The increase of outgoing connections must be carefully
designed because this increase may immediately increase the
number of peer connections and the total trafﬁc volume of the
system. This abrupt volume increase can easily increase the
delay of messages and blocks in the Bitcoin network.
[C1] and [C2] combined. We combine the two effective
Bitcoin protocol modiﬁcations and evaluate its ﬁnal detection
effectiveness. The last line in Figure 10 shows the attack
success probability when a Bitcoin node reduces the table sizes
four times and doubles the number of outgoing connections.
This clearly shows that the combined approach does make
the EREBUS attack extremely difﬁcult; e.g., only 5% success
probability even after two months of attack execution.
[C3] Incorporating AS topology in the peer selection.
Another highly promising countermeasure is to make the peer
selection algorithm aware of the AS-level topology so that
the peering decision itself makes the EREBUS attack much
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:19:22 UTC from IEEE Xplore.  Restrictions apply. 
905
harder. To be speciﬁc, we can use the AS numbers to group
IP addresses in the two tables instead of their preﬁx groups.
This way, the attack becomes harder or impossible for the
adversaries with IPs distributed in a large number of preﬁx
groups but hosted in a few ASes only. For example, as a result
of this defense, about 15% of Tier-1 ASes that do not have
at least 100 shadow ASes would not be able to launch the
EREBUS attack; see Figure 3 for the distribution of available
shadow ASes.
[C4] Eviction policy that protects peers providing fresher
block data. A cross-layer defense approach is to improve
the peer eviction policy so that the Bitcoin node keeps the
peers that have propagated more recent block data. As a
result, censoring a speciﬁc block or transaction from the
victim’s view becomes less effective if there exists a legitimate
incoming connection providing fresher blocks.
Status of our countermeasures. We disclosed our ﬁndings
with the Bitcoin core security team in early June 2019.
As of July 1, 2019, the Bitcoin core developers are pos-
itively considering the deployment of countermeasure [C3]
and [C4]. We will keep updating the status of these and
any new countermeasures on our public project webpage at
https://erebus-attack.comp.nus.edu.sg/.
VIII. RELATED WORK
A. Attacks against Blockchain Peer-to-peer Networks
As we discussed in detail in Section II, the Bitcoin hijacking
attack [3] and the Eclipse attack [29] are the closest to our
attack. The EREBUS attack shares the same attack capabilities
(e.g., being a large AS) and the goal (e.g., hijack all peering
connections of a targeted node) with the Bitcoin hijacking
attack; yet, the attack strategies are vastly different as the
EREBUS is a data-plane attack whereas the Bitcoin hijacking is
a control-plane attack. While the EREBUS has some similarity
to (and is partly inspired by) the Eclipse attack (e.g., inserting
non-existing Bitcoin IP addresses into the internal tables of a
targeted node for peering connection hijacking), the EREBUS
attack does not exploit the vulnerabilities used by the Eclipse
attack but only its topological advantage (which has not been
demonstrated before) to hijack the connections. The EREBUS’s
strategies (e.g., controlling a huge set of IPs persistently for
weeks) are in fact unique and dissimilar to those of the Eclipse
attack with botnets.
Biryukov et al. [10] proposed a network attack speciﬁ-
cally targeting Bitcoin nodes connecting through Tor. The at-
tack exploits the Bitcoin’s denial-of-service (DoS) prevention
mechanism to force all connections through the adversary-
controlled Tor exit nodes. Recently, an Eclipse attack has been
demonstrated against the Ethereum peer-to-peer network [31].
For more comprehensive information about Bitcoin attacks,
we refer readers to a recent survey by Bonneau et al. [15].
B. Proxies for Enhancing Bitcoin Peer-to-peer Network
In Bitcoin, to enhance the block propagation speed, several
relays networks have been developed [20], [21]. A recent
study introduces SABRE [2], a secure Bitcoin relay network
designed to prevent the Bitcoin hijacking attack [3]. SABRE
provides an additional, reliable channel for Bitcoin nodes
to connect and get the mined blocks and transactions even
when their network preﬁxes are BGP hijacked. SABRE can
potentially mitigate the EREBUS attack as well. However, there
is one crucial concern that should be addressed before its wide
adoption. That is, it requires a blind trust on a few SABRE
relays. This approach does not solve the root problem of the
network adversary based attacks because SABRE relays can
be malicious and launch hijacking attacks in a similar way.
Worse yet, malicious ASes can simply provide the SABRE
relay services for easier hijacking attacks.
Compared to such third-party proxy-based solutions, our
countermeasures in Section VII-C are much desirable as they
do not require any trust on external third parties and do not
create any centralization in the Bitcoin network.
C. Studies on Blockchain Peer-to-peer Networks
Studying the underlying peer-to-peer networks of popular
blockchains has been an interesting research area in recent
years. Through a large-scale measurement study on Bitcoin
and Ethereum, Gencer et al. show that the two networks are
not decentralized in terms of mining power across network
resources and the network topology [23]. Apostolaki et al.
also show that only 13 ASes hosted 30% of Bitcoin nodes in
2017 [3]. A recent study found that the majority of Bitcoin
nodes usually do not have the latest copy of the blockchain,
making them naturally vulnerable to partitioning attacks [42].
Several studies also have tried to discover the topology
of the Bitcoin’s peer-to-peer network. Miller et al. present
AddressProbe [34], which uses timestamps to explore peer-to-
peer links between Bitcoin nodes. More recently, Delgado et
al. introduce TxProbe [18], a technique utilizing orphan trans-
actions to effectively reconstruct the connectivity structure of
the Bitcoin network.
IX. CONCLUSION
Whether it is a multi-billion dollar cryptocurrency or a toy
blockchain, as long as they are permissionless, their distributed
peer nodes heavily rely on the current Internet, where several
large autonomous systems (ASes) can mount dangerous at-
tacks. This paper shows that the topological advantage of these
large ASes allows them to control the peer connections of a
blockchain if its peer-to-peer protocol is not carefully designed
with the EREBUS attack in mind. We hope that our work sparks
new discussions on hardening thousands of cryptocurrencies
even against powerful, sophisticated (e.g., state-sponsored)
network adversaries.
ACKNOWLEDGMENTS
We thank the anonymous reviewers of this paper and our
shepherd Neha Narula for their helpful feedback. We also
thank Adrian Perrig and Aziz Mohaisen for useful comments
on an early version of the paper. We thank Matt Corallo and
other Bitcoin core developers for the discussion on counter-
measures [C3] and [C4]. This research is supported by the
CRYSTAL Centre at National University of Singapore.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:19:22 UTC from IEEE Xplore.  Restrictions apply. 
906
[4] D. Ardelean, “libBGPdump,” https://bitbucket.org/ripencc/bgpdump/
wiki/Home, 2019.
[5] “AS Rank: A ranking of the largest Autonomous Systems (AS) in the
Internet.” http://as-rank.caida.org/, 2019.
CAIDA,”
Relationships
by
[6] “AS
and T. Dryja,
Instant
Scalable Off-chain
lightning-network-paper.pdf, 2016.
“The Bitcoin Lightning Network:
Payments,”
https://lightning.network/
[39] “RIPE Network Coordination Centre,” https://www.ripe.net/, 2019.
[40] “RIS Raw Data,” https://www.ripe.net/analyse/internet-measurements/
REFERENCES
[35] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,” https:
//bitcoin.org/bitcoin.pdf, 2008.
[1] D. G. Andersen, H. Balakrishnan, N. Feamster, T. Koponen, D. Moon,
and S. Shenker, “Accountable Internet Protocol (AIP),” in ACM SIG-
COMM CCR, 2008.
[36] K. Nayak, S. Kumar, A. Miller, and E. Shi, “Stubborn mining: Gener-
alizing selﬁsh mining and combining with an eclipse attack,” in Proc.
IEEE EuroS&P, 2016.
[2] M. Apostolaki, G. Marti, J. M¨uller, and L. Vanbever, “SABRE: Protect-
ing Bitcoin against Routing Attacks,” in Proc. NDSS, 2019.
[3] M. Apostolaki, A. Zohar, and L. Vanbever, “Hijacking Bitcoin: Routing
[37] C. Orsini, A. King, D. Giordano, V. Giotsas, and A. Dainotti, “BGP-
Stream: a software framework for live and historical BGP data analysis,”
in Proc ACM IMC, 2016.
attacks on cryptocurrencies,” in Proc. IEEE S&P, 2017.
[38] J.
Poon
http://www.caida.org/data/
routing-information-service-ris/ris-raw-data, 2019.
as-relationships/, 2019.
[7] “Attempt To Evict Connection When Incoming Slots are Full,” https:
//github.com/bitcoin/bitcoin/blob/0.17/src/net.cpp#L1128-L1136, 2019.
[8] H. Ballani, P. Francis, and X. Zhang, “A study of preﬁx hijacking and
interception in the Internet,” in ACM SIGCOMM CCR, 2007.
[9] “BGPmon - Monitoring the Internet,” https://bgpmon.net/, 2019.
[41] “Routeviews Preﬁx to AS mappings Dataset (pfx2as) for IPv4 and IPv6,”
https://www.caida.org/data/routing/routeviews-preﬁx2as.xml, 2019.
[42] M. Saad, V. Cook, L. Nguyen, M. T. Thai, and A. Mohaisen, “Parti-
tioning Attacks on Bitcoin: Colliding Space, Time, and Logic,” in Proc.
IEEE ICDCS, 2019.
[43] A. Sapirshtein, Y. Sompolinsky, and A. Zohar, “Optimal Selﬁsh Mining
[10] A. Biryukov and I. Pustogarov, “Bitcoin over Tor isn’t a good idea,” in
Strategies in Bitcoin,” in Proc. of FC, 2016.
Proc. IEEE S&P, 2015.
[11] “Bitcoin Core 0.18.0,” https://bitcoincore.org/en/releases/0.18.0/, 2019.
[12] “Bitcoin Core
integration/staging tree,” https://github.com/bitcoin/
bitcoin, 2019.
[44] P. Sermpezis, V. Kotronis, P. Gigis, X. Dimitropoulos, D. Cicalese,
A. King, and A. Dainotti, “ARTEMIS: Neutralizing BGP hijacking
within a minute,” Proc. IEEE/ACM TON, 2018.
[45] A. Toonk,
“The Canadian Bitcoin Hijack,” https://bgpmon.net/
[13] “Bitcoin Emulator,” https://github.com/Erebus-Attack/Bitcoin-Emulator,
the-canadian-bitcoin-hijack/, 2014.
2019.
[14] “Bitcoin Hijacking Detector,”
https://github.com/Erebus-Attack/
Bitcoin-Hijack-Detector, 2019.
[15] J. Bonneau, A. Miller, J. Clark, A. Narayanan, J. A. Kroll, and E. W.
Felten, “Sok: Research perspectives and challenges for bitcoin and
cryptocurrencies,” in IEEE S&P, 2015.
[16] A. Cohen, Y. Gilad, A. Herzberg, and M. Schapira, “Jumpstarting BGP
security with path-end validation,” in Proc. ACM SIGCOMM, 2016.
[17] “Cryptocurrency Market Capitalizations,” https://coinmarketcap.com/,
2019.
[18] S. Delgado-Segura, S. Bakshi, C. P´erez-Sol`a, J. Litton, A. Pachulski,
A. Miller, and B. Bhattacharjee, “TxProbe: Discovering Bitcoin’s Net-
work Topology Using Orphan Transactions,” in Proc. FC, 2019.
[19] I. Eyal and E. G. Sirer, “Majority is not enough: Bitcoin mining is
vulnerable,” CACM, 2018.
[20] “Falcon - A Fast Bitcoin Backbone,” https://www.falcon-net.org/, 2019.
[21] “FIBRE - Fast Internet Bitcoin Relay Engine,” http://bitcoinﬁbre.org/,
2019.
[22] L. Gao, “On inferring autonomous system relationships in the Internet,”
IEEE/ACM TON, 2001.
[23] A. E. Gencer, S. Basu, I. Eyal, R. Van Renesse, and E. G. Sirer,
“Decentralization in Bitcoin and Ethereum networks,” in Proc. FC, 2018.
[24] A. Gervais, G. O. Karame, K. W¨ust, V. Glykantzis, H. Ritzdorf, and
S. Capkun, “On the Security and Performance of Proof of Work
Blockchains,” in Proc. ACM CCS, 2016.
[25] P. Gill, M. Schapira, and S. Goldberg, “A survey of interdomain routing
policies,” ACM SIGCOMM CCR, 2013.
[26] “Global Bitcoin nodes distribution,” https://bitnodes.earn.com/, 2019.
[27] E. Heilman, “net: Add test-before-evict discipline to addrman,” https:
//github.com/bitcoin/bitcoin/pull/9037, 2019.
[28] ——, “net: Feeler connections to increase online addrs in the tried table,”
https://github.com/bitcoin/bitcoin/pull/8282, 2019.
[29] E. Heilman, A. Kendler, A. Zohar, and S. Goldberg, “Eclipse Attacks
on Bitcoin’s Peer-to-Peer Network,” in Proc. USENIX Security, 2015.
[30] G. O. Karame, E. Androulaki, and S. Capkun, “Double-spending fast
payments in bitcoin,” in Proc. ACM CCS, 2012.
[31] Y. Marcus, E. Heilman, and S. Goldberg, “Low-Resource Eclipse At-
tacks on Ethereum’s Peer-to-Peer Network,” Cryptology ePrint Archive,
Report 2018/236, 2018.
[32] B. Marczak, N. Weaver, J. Dalek, R. Ensaﬁ, D. Fiﬁeld, S. McKune,
A. Rey, J. Scott-Railton, R. Deibert, and V. Paxson, “An Analysis of
China’s “Great Cannon”,” in Proc. USENIX FOCI, 2015.
[33] G. Maxwell, “Do not add random inbound peers to addrman,” https:
//github.com/bitcoin/bitcoin/pull/8594, 2019.
[34] A. Miller, J. Litton, A. Pachulski, N. Gupta, D. Levin, N. Spring, and
B. Bhattacharjee, “Discovering Bitcoin’s Public Topology and Inﬂuential
Nodes,” http://www.cs.umd.edu/projects/coinscope/coinscope.pdf, 2015.
[46] M. Tran, M. S. Kang, H.-C. Hsiao, W.-H. Chiang, S.-P. Tung, and Y.-S.
Wang, “On the Feasibility of Rerouting-based DDoS Defenses,” in Proc.
IEEE S&P, 2019.
[47] “University of Oregon Route Views Project,” http://www.routeviews.org/
routeviews/, 2019.
[48] X. Zhang, H.-C. Hsiao, G. Hasker, H. Chan, A. Perrig, and D. G.
Andersen, “SCION: Scalability, control, and isolation on next-generation
networks,” in Proc. IEEE S&P, 2011.
APPENDIX A
SURVEY ON CRYPTOCURRENCIES WITH NETWORK
IMPLEMENTATION SIMILAR TO BITCOIN
Bitcoin is the ﬁrst widely adopted cryptocurrency and its
open source implementation [12], perhaps, is one of the most
frequently updated systems among more than two thousands of
cryptocurrencies existing today. Many other cryptocurrencies
follow or even reuse the network design and implementation
of Bitcoin.
Table I: List of 19 top-50 cryptocurrencies that have network
implementation similar to Bitcoin and are potentially vulner-
able to EREBUS attacks.
Rank
Cryptocurrency
No. of new
No. of tried
name
Bitcoin
Litecoin
Bitcoin Cash
Bitcoin SV
Dash
Zcash
Dogecoin
Bitcoin Gold
Qtum
Digibyte
ABBC Coin
Bitcoin Diamond
Komodo
Verge
Ravencoin
Project Pai
Cryptonex
HyperCash
Zcoin
1
4
6
10
13
18
22
23
24
27
29
34
35
37
41
42
45
49
50
buckets
buckets
1024