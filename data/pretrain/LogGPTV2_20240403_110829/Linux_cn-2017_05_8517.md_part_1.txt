---
author: Oliver
category: 技术
comments_data:
- date: '2017-05-19 11:22:11'
  message: 真随机？ 扯淡。
  postip: 112.97.233.67
  username: 来自广东深圳的 Internet Explorer 8.0|Windows 7 用户
- date: '2017-05-25 00:06:07'
  message: 较新的 intel CPU 支持 RNRAND 指令集，这个伪随机方法比较实用。
  postip: 223.65.170.31
  username: 来自江苏南京的 Firefox 53.0|Windows 10 用户
count:
  commentnum: 2
  favtimes: 3
  likes: 0
  sharetimes: 0
  viewnum: 5604
date: '2017-05-17 20:44:28'
editorchoice: false
excerpt: 本文将解释如何安装 pandom，这是一个由 ncomputers.org 维护的定时抖动真随机数生成器。
fromurl: https://www.howtoforge.com/tutorial/how-to-install-pandom-a-true-random-number-generator/
id: 8517
islctt: true
largepic: /data/attachment/album/201705/17/204255id9jk0uijgo0g6jk.jpg
permalink: /article-8517-1.html
pic: /data/attachment/album/201705/17/204255id9jk0uijgo0g6jk.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 本文将解释如何安装 pandom，这是一个由 ncomputers.org 维护的定时抖动真随机数生成器。
tags:
- 随机数
- pandom
thumb: false
title: 如何安装 pandom ： 一个针对 Linux 的真随机数生成器
titlepic: true
translator: FSSlc
updated: '2017-05-17 20:44:28'
---
![](/data/attachment/album/201705/17/204255id9jk0uijgo0g6jk.jpg)
本教程只针对 amd64/x86\_64 架构 Linux 内核版本大于等于 2.6.9 的系统。本文将解释如何安装 [pandom](http://ncomputers.org/pandom)，这是一个由 ncomputers.org 维护的定时抖动真随机数生成器。
### 简介
在现在的计算机状况下，比如说配置了固态硬盘（SSD）的个人电脑和虚拟专用服务器（VPS）的环境中，Linux 内核内置的真随机数发生器提供的吞吐量很低。
而出于各种不同的加密目的使得对真随机数的需求持续增长，从而使得这个低吞吐量问题在 Linux 实现中变得越来越严重。
在与上述相同的物理或者虚拟环境下，并假设没有其它进程以 root 身份向 `/dev/random` 进行写操作的话，64 [ubits](http://ncomputers.org/ubit)/64 bits 的 pandom 可以以 8 KiB/s 的速率生成随机数。
### 1 pandom 的安装
#### 1.1 获得 root 权限
Pandom 必须以 root 身份来安装，所以在必要的时候请运行如下命令：
```
su -
```
#### 1.2 安装编译所需的依赖
为了下载并安装 pandom，你需要 GNU `as` 汇编器、GNU `make`、GNU `tar` 和 GNU `wget` (最后两个工具通常已被安装)。随后你可以按照你的意愿卸载它们。
**基于 Arch 的系统：**
```
pacman -S binutils make
```
**基于 Debian 的系统：**
```
apt-get install binutils make
```
基于 Red Hat 的系统：
```
dnf install binutils make
yum install binutils make
```
**基于 SUSE 的系统：**
```
zypper install binutils make
```
#### 1.3 下载并析出源码
下面的命令将使用 `wget` 和 `tar` 从 ncomputers.org 下载 pandom 的源代码并将它们解压出来：
```
wget http://ncomputers.org/pandom.tar.gz
tar xf pandom.tar.gz
cd pandom/amd64-linux
```
#### 1.4 在安装前进行测试 (推荐)
这个被推荐的测试将花费大约 8 分钟的时间，它将检查内核支持情况并生成一个名为 `checkme` 的文件（在下一节中将被分析）。
```
make check
```
#### 1.5 确定系统的初始化程序
在安装 pandom 之前，你需要知道你的系统使用的是哪个初始化程序。假如下面命令的输出中包含 `running`，则意味着你的系统使用了 `systemd`，否则你的系统则可能使用了一个 `init.d` 的实现（例如 upstart、sysvinit）。
```
systemctl is-system-running
running
```
#### 1.6 安装 pandom
一旦你知道了你的系统使用何种 Linux 实现，那么你就可以相应地安装 pandom 了。
**使用基于 init.d 作为初始化程序（如： upstart、sysvinit）的系统：**
假如你的系统使用了一个 init.d 的实现（如： upstart、sysvinit），请运行下面的命令来安装 pandom：
```
make install-init.d
```
**以 systemd 作为初始化程序的系统：**
假如你的系统使用 `systemd`，则请运行以下命令来安装 pandom：
```
make install-systemd
```
### 2 checkme 文件的分析
在使用 pandom 进行加密之前，强烈建议分析一下先前在安装过程中生成的 `checkme` 文件。通过分析我们便可以知道用 pandom 生成的数是否真的随机。本节将解释如何使用 ncomputers.org 的 shell 脚本 `entropyarray` 来测试由 pandom 产生的输出的熵及序列相关性。
**注**：整个分析过程也可以在另一台电脑上完成，例如在一个笔记本电脑或台式机上。举个例子：假如你正在一个资源受到限制的 VPS 上安装 pandom 程序，或许你更倾向于将 `checkme` 复制到自己的个人电脑中，然后再进行分析。
#### 2.1 获取 root 权限
`entropyarray` 程序也必须以 root 身份来安装，所以在必要时请运行如下命令：
```
su -
```
#### 2.2 安装编译所需的依赖
为了下载并安装 `entropyarray`， 你需要 GNU g++ 编译器、GNU `make`、GNU `tar` 和 GNU `wget`。在随后你可以任意卸载这些依赖。
**基于 Arch 的系统：**
```
pacman -S gcc make
```
**基于 Debian 的系统：**
```
apt-get install g++ make
```
**基于 Red Hat 的系统：**
```
dnf install gcc-c++ make
yum install gcc-c++ make
```
**基于 SUSE 的系统：**
```
zypper install gcc-c++ make
```
#### 2.3 下载并析出源码
以下命令将使用 `wget` 和 `tar` 从 ncomputers.org 下载到 entropyarray 的源码并进行解压：
```
wget http://ncomputers.org/rearray.tar.gz
wget http://ncomputers.org/entropy.tar.gz
wget http://ncomputers.org/entropyarray.tar.gz
tar xf entropy.tar.gz
tar xf rearray.tar.gz
tar xf entropyarray.tar.gz
```
#### 2.4 安装 entropyarray
**注**：如果在编译过程中报有关 `-std=c++11` 的错误，则说明当前系统安装的 GNU g++ 版本不支持 ISO C++ 2011 标准，那么你可能需要在另一个支持该标准的系统中编译 ncomputers.org/entropy 和 ncomputers.org/rearray （例如在一个你喜爱的较新的 Linux 发行版本中来编译）。接着使用 `make install` 来安装编译好的二进制文件，再接着你可能想继续运行 `entropyarray` 程序，或者跳过运行该程序这一步骤，然而我还是建议在使用 pandom 来达到加密目地之前先分析一下 `checkme` 文件。
```
cd rearray; make install; cd ..
cd entropy; make install; cd ..
cd entropyarray; make install; cd ..
```
#### 2.5 分析 checkme 文件
**注**：64 [ubits](http://ncomputers.org/ubit) / 64 bits 的 pandom 实现所生成的结果中熵应该高于 `15.977` 且 `max` 字段低于 `70`。假如你的结果与之相差巨大，或许你应该按照下面第 5 节介绍的那样增加你的 pandom 实现的不可预测性。假如你跳过了生成 `checkme` 文件的那一步，你也可以使用其他的工具来进行测试，例如 [伪随机数序列测试](http://www.fourmilab.ch/random/)。
```
entropyarray checkme
entropyarray in /tmp/tmp.mbCopmzqsg
15.977339
min:12
med:32
max:56
15.977368
min:11
med:32
max:58
15.977489
min:11
med:32
max:59
15.977077
min:12
med:32