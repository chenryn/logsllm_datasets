### 14 M
**Figure 6: Supported Individual QUIC Versions from ZMap Scans**
- Other combines versions with an occurrence of less than 1%.

The dataset primarily includes the string "quic." The most common set consists of IETF QUIC versions, specifically h3-27, h3-28, and h3-29. This set is predominantly used by Cloudflare, as well as 269 additional Autonomous Systems (ASes), covering a significant portion of domains. Notably, the deployment of IETF "Version 1" by Cloudflare, as seen in Figure 5, is not evident based on the HTTP ALT-SVC Header during our measurement period.

Despite Google being only the sixth most common AS based on HTTP ALT-SVC Header data, the second most common set includes h3-25, h3-27, h3-Q043, h3-Q046, h3-Q050, and quic. This set, which contains both Google QUIC versions and older IETF QUIC versions, is used by 1,700 ASes. Over time, there has been a slight shift towards a new set that includes ALPN h3-27, h3-29, and h3-34, alongside Google QUIC versions, observed in 444 ASes. The set consisting solely of "quic" was more prevalent at the beginning of our measurement period but lost its share towards the end.

Regarding the ALPN sets retrieved from HTTPS DNS Resource Records (RRs), 99.9% of the domains resolve to records including h3-29, h3-28, and h3-27, which are primarily used by Cloudflare. As a key driver behind the HTTPS DNS RR, Cloudflare dominates this dataset.

**Key Takeaway:**
Based on announced versions, existing QUIC deployments were well-prepared for the final standardization of QUIC. Throughout our measurement period, support for draft 29, the final draft intended for deployment, increased to 96%. The activation of "Version 1" by Cloudflare and other ASes even before the official conversion of the draft to an RFC indicates that deployments were ready for the final standardization of IETF QUIC.

### 5 THE STATE OF QUIC DEPLOYMENTS

To analyze QUIC deployments in more detail, we use QScanner to complete QUIC handshakes with targets from ZMap, HTTP ALT-SVC Headers, and HTTPS DNS RRs. We extract QUIC-specific parameters, TLS configurations, and HTTP headers.

For HTTP ALT-SVC Headers and HTTPS DNS RRs, we scan with Server Name Indication (SNI) to achieve higher success rates and ensure reachability using QUIC. As explained in Section 4, for 90% of IPv4 and 38% of IPv6 addresses, no domains were found by joining the data with our DNS scans. Therefore, we also scan addresses from ZMap without SNIs to test whether a QUIC connection can be established and to check the default behavior of targets without SNI.

To reduce scan overhead, we select targets that announced a version compatible with the QScanner, namely draft 29, 32, and 34 (see Section 3.4). Similar to the results from Section 4, we use scans from calendar week 18 (May 3, 2021, to May 9, 2021). General results are shown in Table 3.

**NO SNI Scan:**
- We scanned 2,046,615 IPv4 (95.9% of found IP addresses with ZMap) and 209,729 IPv6 addresses (99.4%).
- For IPv4, 7.25% or 148,281 connection attempts were successful, 34.5% timed out, and 50% resulted in the generic QUIC Alert 0x128, which is the generic TLS Alert 0x28 [43].
- For IPv6, 27.7% or 58,002 connection attempts were successful, 12.3% timed out, and 60% resulted in the QUIC Alert 0x128.
- Messages for alert 0x128 vary between scanned targets and do not reveal the exact reason for the handshake failure. The error message wording depends on the implementation; for example, the most prominent error message is from Cloudflare's QUIC implementation, and the second most prominent is from Google's library.

Interestingly, the handshake failed for 180,000 (9%) IPv4 addresses and 1,500 (0.7%) IPv6 addresses due to a version mismatch. While these addresses indicated support for a compatible version during the ZMap scan, the stateful scan failed with a version mismatch, meaning none of the offered versions were supported. 99% of these addresses are part of AS15169 or AS396982, both operated by Google. We re-scanned a subset of these targets with the ZMap module and the QScanner, finding that the mismatch between version negotiation and QUIC handshake was reproducible and constant over a period. However, in August 2021, the behavior changed, and version mismatches are no longer observed. Discussions with Google concluded that the inconsistencies were likely due to an iterative roll-out of IETF QUIC within the Google network. With the complete deployment of IETF QUIC by most Google services, these inconsistencies are no longer seen in new scans.

As shown in Figure 8, IPv4 addresses with a successful scan still cover more than 4,400 ASes (93.1% of all seen ASes), despite a 7.25% success rate. Successful IPv6 address scans reach a similar coverage, with at least one successful target in 92.6% of the seen ASes.

**SNI Scans:**
- We combine found targets from all three sources for our scans with SNI. We limit the number of scanned domains per IP address to a maximum of 100 domains from each source for SNI scans (see Appendix A).
- We scanned 17,357,269 IPv4 targets, consisting of 417,708 addresses and 13,290,754 domains, and 14,170,532 IPv6 targets, consisting of 344,362 addresses and 10,176,968 domains.
- The total IPv4 scan achieved a 76.1% success rate, with 11.1% of connection attempts timing out, 5.7% resulting in the QUIC alert 0x128, and another 5.8% failing due to a version mismatch (see Table 3). The 13 million successful targets account for 110,000 addresses, 26.5% of all scanned addresses, and are part of 1,600 ASes, with 82.3% belonging to Cloudflare (AS13335).

For the IPv6 scan, the success rate was comparably high at 90.7%, but this only included 90,000 distinct addresses from 546 ASes. The most common errors were the QUIC alert 0x128, timeouts, and no compatible QUIC version, in that order.

All three sources contributed to successful targets, as shown in Table 4. We scanned 14 million targets with IPv4 and IPv6 addresses each, from (i) ZMap joined with DNS and (ii) HTTP ALT-SVC Headers, with respective success rates of 85%. ZMap covered 105,000 and HTTP ALT-SVC Headers covered 85,000 distinct IPv4 addresses, respectively. HTTPS DNS RRs resulted in 6.2 million targets based on IPv4 and IPv6 addresses, achieving success rates of 77%.

**Key Takeaway:**
While many QUIC deployments can be found using stateless measures from Section 4, successful handshakes can only be established with a subset of found hosts. The most unexpected error is the version mismatch for many Google targets. While IETF versions are announced during version negotiation, successful handshakes fail. After discussions with Google, we linked the observed behavior to an iterative roll-out of IETF QUIC throughout Google's network services. Although connection attempts were impacted during the roll-out period, it was temporary, and the error resolution is visible with the deployment of the finally standardized version.

We argue that the large number of timeouts is either due to load balancers or the high duration of ZMap scans (see Section 3.1), leading to a large interval between version negotiation and stateful handshake for some targets. If HTTPS DNS RRs are more widely deployed in the future, they will offer a reliable method to quickly detect QUIC service endpoints and significantly reduce the overall scan overhead for further studies.

### 5.1 QUIC TLS Behavior Compared to TLS over TCP

TLS is an integral part of QUIC. Due to changed requirements, such as the new Transport Parameters extension and the necessity to use TLS 1.3, many QUIC implementations rely on custom TLS libraries. Consequently, services reachable using QUIC and TLS over TCP might use different TLS stacks and configurations. We evaluate the deployment of TLS as part of QUIC and compare it to TLS over TCP measurements for the same targets.

As reported in Table 3, the stateful no SNI QUIC scans exhibit a low success rate. Our TLS over TCP scans successfully performed a TLS handshake for 43% of IPv4 and 50% of IPv6 targets. We analyzed this substantial difference and found that it is caused by a few providers. Google, Akamai, Cloudflare, and Fastly are nearly evenly responsible for more than 80% (600,000) of cases where the TLS over TCP scan succeeds but the QUIC scan fails. We evaluated the QUIC scan errors to gain insight into parallel deployments and rule out any error in our stateful QUIC scanner. While Google errors are caused by a version mismatch, Akamai and Fastly run into timeouts using QUIC. We assume these timeouts are due to a similar reason: Google returns IETF QUIC versions in the version negotiation but cannot complete a handshake afterward. The same behavior was observed for the same targets in multiple scans. In contrast, Cloudflare returns the TLS alert 0x128, reporting a handshake failure. Since we can perform a successful QUIC scan with other Cloudflare IP addresses, we assume this is an issue on Cloudflare's side.

To rule out any CDN-specific issues with the no SNI scans, we joined the failing IP addresses with any targets on the same address in our SNI scan. We found 42,500 IP addresses in our SNI scan, and we performed a successful QUIC handshake to only 2,800 of these. Therefore, it seems most of these addresses are not actively used to deploy QUIC but are rather artifacts of CDN architectures. This reinforces our idea of an early middlebox answering the QUIC version negotiation, with the end hosts not being able to complete the handshake.

We find a small number (less than 0.5%) of targets successfully completing a QUIC scan but resulting in an error on the TLS over TCP scan. As this does not represent a relevant share and could be due to the two scans not running in parallel, we do not investigate it further.

**Table 5: Share of Hosts Using the Same TLS Properties on TLS over TCP and QUIC**
- All properties after the TLS version are made on targets where the TLS over TCP scan also performed a TLS 1.3 handshake.

| Property          | IPv4 (no SNI) | IPv4 (SNI) | IPv6 (no SNI) | IPv6 (SNI) |
|-------------------|---------------|------------|---------------|------------|
| Certificate       | 31.7%         | 98.1%      | 17.7%         | 98.2%      |
| TLS Version       | 99.6%         | 99.7%      | 99.8%         | 99.7%      |
| Key Exchange Group| 100.0%        | 100.0%     | 100.0%        | 100.0%     |
| Cipher            | 99.2%         | 100.0%     | 100.0%        | 100.0%     |
| Extensions        | 67.3%         | 99.9%      | 56.4%         | 99.9%      |

The comparison of returned certificates provides insights into the deployment strategy. We evaluate whether the certificate collected by the QUIC scan is used for the same set of domains as with the TLS over TCP scan. With the SNI scan, we find more than 98% of all targets returning the same certificate for QUIC and TLS over TCP. Some certificates differ due to the delay between QUIC and TLS over TCP scans. However, for the no SNI scans, only 31.7% and 17.7% of the targets for IPv4 and IPv6, respectively, return the same certificates. Our evaluation revealed that Google returns a self-signed certificate with the common name indicating an error due to the missing SNI on TLS over TCP. When a QUIC handshake is performed to the same target, it returns a valid certificate. Additionally, we see the effect of Google rolling its certificates about weekly [6], which produces further certificate mismatches between QUIC and TLS over TCP.

We find a few IP addresses that only offer TLS 1.2 over TCP while QUIC uses at least TLS 1.3 [43]. Since QUIC implementations need a modified TLS library, they often include it in their software, whereas traditional HTTPS over TCP web servers usually allow configuration of a TLS library. Therefore, the versions and exact deployment configurations can differ. We find that 99.7% of all targets use the same TLS version (i.e., TLS 1.3). The single most significant contributor to differing TLS versions is Cloudflare. We investigated this and found that using Cloudflare, it is possible to disable TLS 1.3 but enable QUIC. Moreover, Cloudflare enables QUIC by default, which might explain this behavior. To our knowledge, there is no other reason to disable TLS 1.3 but enable QUIC.

Since QUIC requires TLS 1.3, a comparison of TLS ciphers, key exchange groups, and extensions is only useful if the chosen TLS over TCP version is the same. To have comparable results, we ensured that the same TLS Client Hello was sent with our QUIC and TLS over TCP scanner. We offered the X25519 key exchange group, which is accepted by nearly all targets (e.g., 206 of IPv4 SNI).