the effect on ﬁltering performance caused by varying z is
far greater than that caused by varying x. Furthermore, al-
though not shown in the ﬁgure, it is intuitive that the effect
of varying x decreases as z increases.
4.2 Privileged Channel Establishment Under Un-
privileged Packet Flooding
As shown in the previous section, attacker ﬂooding of
privileged packets has little effect on the victim, because so
few of the forged packets reach destinations even close to
the victim’s network. In this section, we analyze a different
attack approach, which is to ﬂood with unprivileged pack-
ets for an extended period of time with the goal of stop-
ping all new connection establishments. However, unlike
the current Internet infrastructure, in which established TCP
ﬂows can still be affected by IP packet ﬂoods, SIFF’s priv-
ileged ﬂows are unaffected by unprivileged trafﬁc conges-
tion. Thus, a client and server only need to exchange two
packets within minm time, the least amount of time that a
capability is valid (deﬁned in the previous section), before
the privileged channel between them is established and they
can communicate from then on, unaffected by the ongoing
attack.
We assume that unprivileged trafﬁc is causing conges-
tion at the last i hops of the network, and that the proba-
bility of getting dropped at any one of those routers is i.
We ignore the probability of the server getting its outbound
packets dropped, because congestion in the routers during
ﬂooding attacks is typically experienced by inbound packets
only. Because the drop probabilities at routers are indepen-
dent Bernoulli trials, the probability that a client and server
will be able to establish a privileged channel after one try
(by exchanging two packets is): P (connect after 1 try) =
(1 − i)i.
The probability that the client can connect after k tries
P ( connect after k tries)
= 1 − (1 − P (connect after 1 try))k
= 1 − (1 − (1 − i)i)k
For a given desired connection probability, P (connect)
is:
9
Proceedings of the 2004 IEEE Symposium on Security and Privacy (S&P’04)  
1081-6011/04 $ 20.00 © 2004 IEEE 
the required number of connection attempts is:
log(1 − P (connect))
log(1 − (1 − i)i)
k =
A nice feature of this formula is that the expected number
of connection attempts depends logarithmically on the con-
nection probability, which indicates that even for large i,
a determined client can get a connection after a moderate
waiting time.
5 Discussion
In this section, we discuss some limitations, practical is-
sues and extensions to SIFF. We ﬁrst discuss several classes
of bandwidth starvation attacks against which SIFF does not
completely defend. We also discuss a high-level approach
for implementing SIFF in an IPv4 environment, the combi-
nation of SIFF with puzzle auctions, the possibility of multi-
ple capabilities with different validity lengths, and the effect
of route stability on our scheme.
5.1 Limitations
We have identiﬁed several types of bandwidth attacks
that SIFF does not defend well against. We brieﬂy describe
them in this section.
Although SIFF binds a source IP address to a particu-
lar capability (thus limiting the possibility of spooﬁng in
privileged ﬂows to the same as ubiquitous ingress ﬁltering),
without a mechanism to identify malicious trafﬁc, it is still
possible for an attacker to rotate the active machines in its
attack. Presumably, when a subset of attacking machines
are blacklisted the attacker would activate a different subset
to request (and abuse) new capabilities. However, depend-
ing on the size of the victim’s blacklist, the attacker will be
limited in the number of active machines used at any one
time in the attack.
In a topology where not all routers implement SIFF, it
may be possible for a carefully placed bandwidth attack
to disrupt privileged communication. If the attacker pin-
points a link where a router does not implement SIFF, then
by ﬂooding that link with unprivileged trafﬁc he can cause
privileged trafﬁc to be dropped, because the router at that
link will not give priority to privileged trafﬁc. To prevent
this attack, it is sufﬁcient that the router on the attacked link
implement the preferential treatment of privileged packets,
rather than the whole SIFF protocol.
The case of colluding attackers is difﬁcult to solve in
SIFF. As mentioned in Section 3.2, a colluding attacker
node on or near the victim’s network can return capabilities
to attacking nodes outside the network. In general, collud-
ing attackers on either side of a transit network may sim-
ply grant each other capabilities and ﬂood the network with
Proceedings of the 2004 IEEE Symposium on Security and Privacy (S&P’04)  
1081-6011/04 $ 20.00 © 2004 IEEE 
10
privileged trafﬁc, causing other privileged trafﬁc traversing
that network to experience congested links. A possible so-
lution to this attack would be to have routers rate-limit in-
dividual capabilities, similar to the Aggregate Congestion
Control/Pushback mechanism [27].
It is also important to note that, as designed in this paper,
SIFF is a layer-3 (IP) mechanism. As such, SIFF can grant
capabilities only at the granularity of hosts (i.e., single IP
addresses). For example, a SSH server cannot give privilege
to an SSH client without also granting privilege to any other
connection from that host.
5.2 Deployment in the Current Internet
The limited space in the IPv4 packet header and the
limited deployment that any routing infrastructure change
is likely to achieve makes it necessary to redesign SIFF.
Fortunately, both of these constraints can be satisﬁed by a
single approach: rather than constructing a system where
forged privileged ﬂows are dropped anywhere in the net-
work we focus on hardening individual ISP’s against such
trafﬁc ﬂows. We assume two possible deployment models:
full ISP deployment and border ISP deployment. In the full
ISP deployment model, all routers under the control of a
particular ISP are upgraded with our scheme, whereas bor-
der ISP deployment requires only that all of an ISP’s border
routers be upgraded. The intuition behind both approaches
is that by limiting the number of marking routers (to just the
routers of the packet’s destination), each router can mark
more bits in the available marking space and forged priv-
ileged ﬂows can still be stopped, albeit only once they ar-
rive at the victim’s ISP’s domain. Note that end-hosts, both
clients and servers, will still need to be modiﬁed to take ad-
vantage of these schemes.
SIFF requires some available space for marking in the
IPv4 packet header. We require one bit of the IP header
that is currently reserved (set to zero by all end-hosts) to
act as the signalling ﬂag (SF) which, as mentioned in Sec-
tion 3, will differentiate legacy trafﬁc from all trafﬁc used
in our scheme. We do not assume any particular location
for the remaining markings, although of course, any loca-
tion chosen should avoid interaction with legacy protocols
(we offer some insight into how to avoid interaction with
fragmentation when marking the IP Identiﬁcation ﬁeld in
Appendix A). Furthermore, we remove the capability up-
date (CU) ﬂag and assume that half of our available mark-
ing space is used for capability replies in every packet. The
packet type (PT) ﬂag remains unchanged. Thus, if we as-
sume x bits available in the IPv4 packet, then x−2
2 bits are
used for capability marking, x−2
2 bits are used for capability
replies, and 2 bits are used for ﬂags. We show SIFF’s per-
formance for varying numbers of marking bits in Figure 5.
The ﬁgure shows a signiﬁcant reduction in the percent of
total attack trafﬁc arriving at the victim, ranging from 25%
to 98.7%, depending on the number of marking bits used.
Finally, we address a security hole in the border ISP de-
ployment method. An attacker could determine its capa-
bility by simply sending a packet designed to produce an
ICMP error message at a router between the victim and the
ISPs border routers (for example, a TTL expiration). The
ICMP error packet sent by the router will include in its pay-
load the IP header and the ﬁrst 8 bytes of the payload of the
original packet, thus returning to the attacker the capabil-
ity that will bypass the ISPs border routers. An approach
to prevent this attack is to have all the border routers of
the ISP’s network monitor outbound ICMP error messages
and remove the contents of the marking ﬁeld in messages
that contain EXP packets. Although this may degrade per-
formance on border routers, ICMP has a simple header, so
packet inspection can be implemented in hardware. ICMP
attacks are not a problem for full-ISP deployment because
capability enabled routers can be programmed to mask out
the marking ﬁeld of all EXP packets before they are encap-
sulated in ICMP error packets. Border ISP deployment is
also subject to the legacy router bandwidth attack described
in Section 5.1.
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
s
t
e
k
c
a
P
k
c
a
t
t
A
l
a
t
o
T
f
o
o
i
t
a
R
0
0
1
4 Bits, Border Deployment
8 Bits, Full Deployment
8 Bits, Border Deployment
16 Bits, Full Deployment
16 Bits, Border Deployment
2
Hops from Victim
3
4
5
Figure 5. Percentage of attack packets in the
last 5 hops to the victim for different marking
sizes and deployment methods.
5.3 Puzzle Auctions
SIFF can be combined with Wang and Reiter’s puzzle
auctions [46], to minimize the assumption that a server
needs to differentiate between legitimate and malicious
clients. The intuition behind puzzle auctions is that a client
makes a bid as to the difﬁculty of the puzzle it is willing
to solve in order to receive a capability. Presumably, com-
promised machines are unwilling (due to the chance that
their users would discover the compromise) or unable (due
Proceedings of the 2004 IEEE Symposium on Security and Privacy (S&P’04)  
1081-6011/04 $ 20.00 © 2004 IEEE 
11
to the high frequency of their capability requests) to devote
as many resources to solving a puzzle as a legitimate client.
In a combined scheme, a client would transmit a value
x in its initial EXP packet representing the difﬁculty of
the puzzle it wishes to solve. The server will receive
the capability y of l bits in length and respond with
yl−(x+1)|h(y)x−0 (where h(y)x−0 is the least signiﬁcant x
bits of the hash of the capability y, and | is concatenation).
The client must perform 2x−1 hash operations, on average,
before ﬁnding the correct pre-image of the last x bits of the
capability. This scheme could be used without adding any
ﬁelds beyond those already assumed in Section 3.
Puzzle auctions, in this context, have the disadvantage
that they reduce the search space for an attacker trying to
forge valid capabilities. Furthermore, there is a limit to the
difﬁculty of the puzzle given to the client, because the ca-
pability contained within the puzzle may expire while the
client is solving it.
5.4 Path Stability Effects
In Section 2 we assume Internet route stability (on the
order of a client transaction). If a route changes mid-ﬂow,
then a client’s privileged packets will be dropped by the new
routers in the path (with high probability), and it will force
the client to renegotiate the SIFF handshake before being
able to send further privileged packets.
Route instability can be caused by multiple path effects.
Teixeira et al. analyze the CAIDA skitter topologies to show
that at least half of the endpoints in the Internet have more
than 2 partially-disjoint paths (where there are no common
routers between the source and destination ASes)
[44].
However, this result is orthogonal to our system’s perfor-
mance as long as routing decisions between multiple equal-
cost paths are implemented in a ﬂow preserving way (eg.
by hashing the ﬂow ﬁelds of the TCP/IP packet headers) as
suggested by RFC2992 [20]. Furthermore, large-scale route
ﬂapping has been shown to be detrimental to TCP perfor-
mance due to the difﬁculty in estimating path characteristics
such as round trip time [33]. Localized load-balancing does
not hurt TCP performance, but we assume that local load
balancing nodes can be manually conﬁgured to produce the
same markings.
An alternative SIFF forwarding policy may mitigate the
effect of mid-ﬂow route changes. Rather than dropping
a privileged packet whose capability fails the veriﬁcation
test, a router can simply demote the privileged packet to
unprivileged status. Furthermore, if unprivileged packets
were marked in the same way as privileged packets (with
markings pushed into the MSB of the capability ﬁeld) then
this mechanism would allow the demoted packet to carry
the updated capability to the server in the same way that a
privileged packet would. Using this scheme, route changes
would only effect privileged connectivity when the server is
under DDoS.
7 Acknowledgments
5.5 Multiple Capability Classes
In order to better accommodate sessions with different
packet frequencies, routers can have multiple valid capa-
bilities which change at different frequencies. The routers
would decide which capability to insert (or verify) in the