gzip -d clash-linux-amd64-v1.11.4.gz
mv clash-linux-amd64-v1.11.4 /usr/local/bin/clash
chmod +x /usr/local/bin/clash
wget https://raw.githubusercontent.com/wp-statistics/GeoLite2-Country/master/GeoLite2-Country.mmdb.gz
gzip -d GeoLite2-Country.mmdb.gz
mv GeoLite2-Country.mmdb ~/.config/clash/Country.mmdb
vim ~/.config/clash/config.yaml
```
**负载均衡配置**
```yaml
proxy-groups:
  - name: "test"
    type: load-balance
    proxies:
      - ss1
      - ss2
      - vmess1
      - vmess2
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    strategy: round-robin
```
**辅助项目**
- [yichengchen/clashX](https://github.com/yichengchen/clashX)
- [Fndroid/clash_for_windows_pkg](https://github.com/Fndroid/clash_for_windows_pkg)
- [ccg2018/ClashA](https://github.com/ccg2018/ClashA)
---
### cloud-torrent
> web torrent 下载服务
**项目地址**
- https://github.com/jpillora/cloud-torrent
**安装**
```
curl https://i.jpillora.com/cloud-torrent! | bash
```
**运行**
```
cloud-torrent -o
```
---
### code-server
> 在线 vscode 服务器
**项目地址**
- https://github.com/cdr/code-server
**安装**
```bash
# debian
wget https://github.com/cdr/code-server/releases/download/v4.5.2/code-server_4.5.2_amd64.deb
dpkg -i code-server_4.5.2_amd64.deb
# centos
wget https://github.com/cdr/code-server/releases/download/v4.5.2/code-server-4.5.2-amd64.rpm
rpm -i code-server-4.5.2-amd64.rpm
```
**运行**
```bash
export PASSWORD=123456
code-server --port 8080 --host 0.0.0.0 --auth password
```
---
### DHCP
> DHCP 服务程序用于为客户端主机分配可用的 IP 地址
**安装**
```
yum install -y dhcp
```
**复制一份示例**
```
cp /usr/share/doc/dhcp-4*/dhcpd.conf.example /etc/dhcp/dhcpd.conf
```
**修改配置文件**
```vim
vim /etc/dhcp/dhcpd.conf
ddns-update-style interim;      # 设置 DNS 的动态更新方式为 interim
option domain-name-servers  8.8.8.8;           # 指定 DNS 服务器地址
default-lease-time  43200;                          # 指定默认租约的时间长度,单位为秒
max-lease-time  86400;  # 指定最大租约的时间长度
# 以下为某区域的 IP 地址范围
subnet 192.168.1.0 netmask 255.255.255.0 {         # 定义 DHCP 作用域
	range  192.168.1.20 192.168.1.100;                # 指定可分配的 IP 地址范围
	option routers  192.168.1.254;                       # 指定该网段的默认网关
}
```
```bash
dhcpd -t                          # 检测语法有无错误
service dhcpd start               # 开启 dhcp 服务
firewall-cmd --zone=public --add-service=dhcp --permanent
firewall-cmd --reload             # 记得防火墙放行
cat /var/lib/dhcpd/dhcpd.leases   # 查看租约文件,了解租用情况
```
---
### DNS
> DNS 用于将人类可读的域名(例如，www.google.com) 进行域名解析为机器可读的 IP 地址
**安装**
```
yum install -y bind-*
```
**主配置文件**
```vim
vim /etc/named.conf
options {
    listen-on port 53 { any; };
    listen-on-v6 port 53 { any; };
    allow-query     { any; };
}
```
**区域配置文件**
```vim
vim /etc/named.rfc1912.zones
zone "abc.com" IN {
        type master;
        file "abc.localhost";
};
zone "1.1.1.in-addr.arpa" IN {
        type master;
        file "abc.loopback";
};
zone "2.1.1.in-addr.arpa" IN {
        type master;
        file "www.loopback";
};
```
**创建区域数据文件**
```bash
cd /var/named/
cp named.localhost abc.localhost
cp named.loopback abc.loopback
cp named.loopback www.loopback
chown named abc.localhost
chown named abc.loopback
chown named www.loopback
```
**域名正向反向解析配置文件**
```vim
vim /var/named/abc.localhost
$TTL 1D
@      IN SOA  @ rname.invalid. (
                                      	0      ; serial
                                      	1D      ; refresh
                                      	1H      ; retry
                                      	1W      ; expire
                                      	3H )    ; minimum
      	NS     @
     		A      127.0.0.1
	    	AAAA   ::1
ftp    	A      1.1.1.1
www     A      1.1.2.1
```
```vim
vim /var/named/abc.loopback
$TTL 1D
@	IN SOA  @ rname.invalid. (
  	                                    0 ; serial
                                      	1D ; refresh
                                      	1H ; retry
                                      	1W ; expire
                                      	3H ) ; minimum
      	NS 		@
      	A 		127.0.0.1
      	AAAA	::1
      	PTR 	localhost.
1 PTR ftp.abc.com.
```
```vim
vim /var/named/www.loopback
$TTL 1D
@ 		IN SOA  @ rname.invalid. (
  	                                    0 ; serial
                                      	1D ; refresh
                                      	1H ; retry
                                      	1W ; expire
                                      	3H ) ; minimum
      	NS 		@
      	A 		127.0.0.1
      	AAAA	::1
      	PTR 	localhost.
1 PTR www.abc.com.
```
**启服务**
```bash
named-checkconf
named-checkzone abc.com abc.localhost
named-checkzone abc.com abc.loopback
named-checkzone abc.com www.loopback
service named restart
setenforce 0      # 关闭 selinux
firewall-cmd --zone=public --add-service=dns --permanent
firewall-cmd --reload
```
**更多配置案例**
见 [dns.md](./实验/dns.md)
---
### focalboard
> Focalboard 是一个开源的、自托管的 Trello、concept 和 Asana 的替代品。
**项目地址**
- https://github.com/mattermost/focalboard
**自托管 Mattermost 服务器**
```bash
docker run --name mattermost-preview -d --publish 8065:8065 mattermost/mattermost-preview
```
启动完毕后访问 127.0.0.1:8065
---
### frp
> 快速反向代理，将本地服务器映射到公网。
**项目地址**
- https://github.com/fatedier/frp
**服务端安装**
```bash
wget https://github.com/fatedier/frp/releases/download/v0.34.3/frp_0.34.3_linux_amd64.tar.gz
tar -zxvf frp_0.34.3_linux_amd64.tar.gz
cd frp_0.34.3_linux_amd64
```
编辑 frps 配置文件
```bash
vim frps.ini
[common]
bind_port = 7000
dashboard_port = 7500
dashboard_user = admin
dashboard_pwd = admin
```
第1行为 frps 和 frpc 之间端口,第 2 行为监控页面 web 地址,第 3.4 行为监控页面账号密码
**服务端运行**
运行 frps,-c 参数用于指定配置文件,在同级目录下的话可以直接运行 frps
```bash
service firewalld stop  # 先关闭防火墙
./frps -c frps.ini
```
此时服务器已在运行,可以访问 服务器ip:7500 访问 web 监控界面
**客户端安装**
```bash
wget https://github.com/fatedier/frp/releases/download/v0.32.0/frp_0.32.0_linux_amd64.tar.gz
tar -zxvf frp_0.32.0_linux_amd64.tar.gz
cd frp_0.32.0_linux_amd64
rm -rf frps*
```
这里最后一句是 rm -rf frps* 与服务端操作的最后一句不相同。
编辑 frpc 配置文件
```bash
vim frpc.ini
[common]
server_addr = 1.1.1.1   # 填服务器IP
server_port = 7000      # 填服务器端口
# ssh的配置
[ssh]
type = tcp
local_ip = 127.0.0.1
local_port = 22
remote_port = 10000
use_compression = true
[DSM]
type = tcp
local_ip = 192.168.1.1 # NAS 在局域网中的内网 IP
local_port = 5000
remote_port = 10002
```
这样就在本地上新增了"DSM"和"SSH"两个可供公网访问的服务了
**客户端运行**
```bash
./frpc -c frpc.ini
# -c 参数用于指定配置文件,在同级目录下的话 可以直接运行 .frpc
```
SSH 连接测试
```bash
ssh root@1.1.1.1 -p 10000
```
这个时候相当于在连接客户端的 SSH 服务
---
### Kicktart
> 是 Kicktart 不是 kickstarter,这玩意不能众筹,这是用于联网安装系统时给 PXE 服务提供应答文件的
- 调用服务:PXE + TFTP +FTP + DHCP + Kicktart
- 环境:VMWARE
- 1台无人值守系统——RHEL 7——192.168.10.10
- 1台客户端——未安装操作系统
注:vmware 中做实验需要在虚拟网络编辑器中将 dhcp 服务关闭
**配置 DHCP**
DHCP 服务程序用于为客户端主机分配可用的 IP 地址,而且这是服务器与客户端主机进行文件传输的基础
```bash
yum install -y dhcp
```
```vim
# 这里使用的配置文件有两个主要区别:允许了 BOOTP 引导程序协议,旨在让局域网内暂时没有操作系统的主机也能获取静态 IP 地址;在配置文件的最下面加载了引导驱动文件 pxelinux.0 (这个文件会在下面的步骤中创建) ,其目的是让客户端主机获取到 IP 地址后主动获取引导驱动文件,自行进入下一步的安装过程.
vim /etc/dhcp/dhcpd.conf
allow booting;
allow bootp;
ddns-update-style interim;
ignore client-updates;
subnet 192.168.0.0 netmask 255.255.255.0 {
        option subnet-mask 255.255.255.0;
        option domain-name-servers 192.168.10.10;
        range dynamic-bootp 192.168.10.100 192.168.10.200;
        default-lease-time 21600;
        max-lease-time 43200;
        next-server 192.168.10.10;
        filename "pxelinux.0";
}
```
```bash
systemctl restart dhcpd
systemctl enable dhcpd
```
**配置 TFTP 服务**
配置 TFTP 服务程序,为客户端主机提供引导及驱动文件.当客户端主机有了基本的驱动程序之后,再通过 vsftpd 服务程序将完整的光盘镜像文件传输过去.
```bash
yum install -y tftp-server xinetd
```
```vim
vim /etc/xinetd.d/tftp
service tftp
{
        socket_type = dgram
        protocol = udp
        wait = yes
        user = root
        server = /usr/sbin/in.tftpd
        server_args = -s /var/lib/tftpboot
        disable = no
        per_source = 11
        cps = 100 2
        flags = IPv4
}
```
```bash
systemctl restart xinetd
systemctl enable xinetd
firewall-cmd --permanent --add-port=69/udp    # 放行 tftp
firewall-cmd --reload
```
**配置 SYSLinux 服务**
SYSLinux 是一个用于提供引导加载的服务程序.与其说 SYSLinux 是一个服务程序,不如说更需要里面的引导文件,在安装好 SYSLinux 服务程序软件包后, `/usr/share/syslinux` 目录中会出现很多引导文件.
```bash
yum install -y syslinux
# 首先把 SYSLinux 提供的引导文件复制到 TFTP 服务程序的默认目录中,也就是 pxelinux.0,这样客户端主机就能够顺利地获取到引导文件.另外在 RHEL 7 系统光盘镜像中也有一些需要调取的引导文件.
cd /var/lib/tftpboot
cp /usr/share/syslinux/pxelinux.0 .
mkdir /media/cdrom
mount /dev/cdrom /media/cdrom
# 确认光盘镜像已经被挂载到 /media/cdrom 目录后,使用复制命令将光盘镜像中自带的一些引导文件也复制到 TFTP 服务程序的默认目录中.
cp /media/cdrom/images/pxeboot/{vmlinuz,initrd.img} .
cp /media/cdrom/isolinux/{vesamenu.c32,boot.msg} .
# 在 TFTP 服务程序的目录中新建 pxelinux.cfg 目录,虽然该目录的名字带有后缀,但依然也是目录,而非文件!将系统光盘中的开机选项菜单复制到该目录中,并命名为 default.这个 default 文件就是开机时的选项菜单.
mkdir pxelinux.cfg
cp /media/cdrom/isolinux/isolinux.cfg pxelinux.cfg/default
```
```vim
# 默认的开机菜单中有两个选项,要么是安装系统,要么是对安装介质进行检验.既然我们已经确定采用无人值守的方式安装系统,还需要为每台主机手动选择相应的选项,未免与我们的主旨 (无人值守安装) 相悖.现在我们编辑这个 default 文件,把第 1 行的 default 参数修改为 linux,这样系统在开机时就会默认执行那个名称为 linux 的选项了.对应的 linux 选项大约在 64 行,我们将默认的光盘镜像安装方式修改成 FTP 文件传输方式,并指定好光盘镜像的获取网址以及 Kickstart 应答文件的获取路径
# 修改第 1 行和第 64 行
vim pxelinux.cfg/default
1 default linux
64 append initrd=initrd.img inst.stage2=ftp://192.168.10.10 ks=ftp://192.168.10.10/pub/ks.cfg quiet