#### Code Sample, a copy-pastable example if possible
    import pandas as pd
    df = pd.read_csv(file)
    df.index = pd.to_datetime(df[['Year','Month','Day','Hour']], unit='s')
    df[df.index.duplicated()].index
> DatetimeIndex(['2009-01-01 00:00:00', '2009-01-01 00:30:00',  
>  '2009-01-01 01:00:00', '2009-01-01 01:30:00',  
>  '2009-01-01 02:00:00', '2009-01-01 02:30:00',  
>  '2009-01-01 03:00:00', '2009-01-01 03:30:00',  
>  '2009-01-01 04:00:00', '2009-01-01 04:30:00',  
>  ...  
>  '2013-12-31 19:00:00', '2013-12-31 19:30:00',  
>  '2013-12-31 20:00:00', '2013-12-31 20:30:00',  
>  '2013-12-31 21:00:00', '2013-12-31 21:30:00',  
>  '2013-12-31 22:00:00', '2013-12-31 22:30:00',  
>  '2013-12-31 23:00:00', '2013-12-31 23:30:00'],  
>  dtype='datetime64[ns]', length=175296, freq=None)
#### Problem description
The behaviour of `duplicated()` is returning duplicated days when the
`datetime` values are in fact unique at their native temporal resolution. I
would expect this function to return true duplicates.