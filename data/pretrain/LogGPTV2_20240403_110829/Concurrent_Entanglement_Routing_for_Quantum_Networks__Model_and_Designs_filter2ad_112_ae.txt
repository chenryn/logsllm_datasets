with qubits and channels
Figure 12: Visualized path selec-
tion and resource
Cost of routing metric evaluation. The time cost to calculate
Et for a (W , h)-path according to Equation 1 is O(hW ), and the
space cost is O(W ).
Cost of Q-PASS P2. The space cost is O(mKmhm + n) and the
time cost is O(mKm(hm + log(mKm))).
Cost of EDA. The space cost is O(n). The time cost for EDA is
O(n log n + |E |(hmWm)).
5 PERFORMANCE EVALUATION
5.1 Simulator Implementation
We implement the proposed network models and algorithms on
a custom-built time-based simulator, with additional supports for
the topology generation, statistics, and network visualization. We
do not use packet-based simulation because quantum networks do
not use packet switching. As shown in Figures 11 and 12, the visu-
alization tool shows the network topology, current qubit/channel
occupation, and existing quantum links at simulation runtime, for
protocol analysis and demonstration. The source code repository
of the simulator can be found on this link [1].
We do not assume any specific topology and randomly generate
quantum networks for simulations. We set the area A holding quan-
tum networks is a 100K units by 100K units square, each unit may
be considered as 1km. The network generation algorithm requires
three input parameters: the number of nodes n, the average number
of neighbors Ed , and the average success rate of all channels Ep .
Nodes are randomly placed and the distance of any two nodes is
at least ⩽ 50/√n units. The edges are generated by the Waxman
model [56] that was used for Internet topologies [30].
After the topology generation, a binary search on the model
parameter α is further carried out to make the average channel
success rate to be Ep ± 0.01. The number of qubits Q for each node
is independently uniformly picked from 10 to 14. The edge width
W is independently uniformly generated from 3 to 7, for each edge.
We pick the range for Q and W based on our conjecture of a well-
functioning quantum network. Our designs should work on wider
ranges, which we cannot cover due to enormous possibilities.
5.2 Methodology
We evaluate the throughput, scalability, and fairness of the pro-
posed entanglement routing algorithms. To gain insight into the
performance metrics and to provide a reference for future research,
we show more simulation statistics: the resource efficiency towards
high throughput, the contribution of recovery paths for both al-
gorithms. Each data shown in the section is the average from 10
different network topologies.
We let the number of nodes n vary in set {50, 100, 200, 400, 800},
average channel success rate Ep vary in {0.6, 0.3, 0.1}, internal link
71
ADEBC(a) In P2. Major path ACDEBand two recovery paths (in the order of being founded): AFE and DGHB(b) In P4, the major pathdisconnects at CD and EB. Recovery pathsAFE and DGHBare taken, because 𝑨𝑪,𝑪𝑫,𝑫𝑬,𝑬𝑩⨁𝑨𝑭,𝑭𝑬,𝑨𝑪,𝑪𝑫,𝑫𝑬⨁𝑫𝑮,𝑮𝑯,𝑯𝑩,𝑫𝑬,𝑬𝑩connects A andB.FGHADEBCFGHConcurrent Entanglement Routing for Quantum Networks: Model and Designs
SIGCOMM ’20, August 10ś14, 2020, Virtual Event, NY, USA
Figure 13: CDF of throughput un-
der the reference setting
Figure 14: CDF of throughput,
Ep = 0.3
Figure 15: CDF of throughput, n =
400
Figure 16: Throughput vs. LS
sharing ranges
Figure 17: Throughput vs.
channel success rates
Figure 18: Throughput vs.
swapping success rates
Figure 19: Throughput vs. net-
work sizes
Figure 20: Throughput vs. # of
S-D pairs
success rate q vary in {0.8, 0.9, 1.0}, link state range k vary in {0,
3, 6, ∞}, average degree Ed vary in {3, 4, 6}, and the number of
S-D pairs m vary from 1 to 10. To control variable, we show the
results under the reference setting n = 100, Ep = 0.6, q = 0.9,
k = 3, Ed = 6, m = 10, unless explicitly changed to observe the data
trend. For each setting of (n, Ep , q, k, Ed , m), 10 random networks
are generated, and we simulate 1000 independent time slots on each
of the networks.
We compare Q-PASS and Q-CAST with two existing routing algo-
rithms that have been used in quantum network studies: single-link
multipath routing (SLMP) [36] (a circuit-switching style protocol)
and greedy routing [24] (a distributed protocol).
5.3 Evaluation results
Throughput. Figures 13 to 15 show the CDF of throughputs for
Q-PASS, Q-CAST, Greedy, and SLMP, under the reference setting.
The throughput results are calculated in terms of ebits per time slot
(eps). The BotCap, CR, and SumDist are the routing metrics for
the Q-PASS, and they are shown separately for better comparison.
Despite the multipath routing, SLMP shows the lowest throughput
because of the unreliability of a single channel/link. It fails to deliver
any ebits in >10 percent of the time slots, and for 90 percent of the
time slots, the total throughput between 10 S-D pairs are less than 5.
The Greedy enjoys a high throughput, and for more than 90 percent
of the time, it delivers more than 15 ebits for 10 random S-D pairs.
For Q-PASS, all the three metrics of it exhibit similar throughput,
and the CR metric gives the highest throughput among all metrics,
which delivers about 2 eps more than the Greedy. Q-CAST shows
great advantages over all other algorithms and outperforms the CR
about 5 eps. Q-CAST is also the most reliable because it seldom
delivers less than 5 eps. Since CR is slightly better than other metrics,
we use CR to represent Q-PASS in the following results.
Vary link state range. In P3, each node shares its link states
with its k-hop neighbors, and hence, k influences the path recovery
performance. Fig. 16 shows the average throughput on different k.
The Greedy algorithm does not rely on k and is shown for reference.
k contributes little to the overall performance because most path
failures are just one hop vi -vi +1, which can be recovered by vi and
vi +1 with their own link states. k = 3 is sufficient for Q-CAST, and
larger k slightly degrades the throughput because longer and more
unreliable recovery paths may be selected. This would occupy the
routing resource which could have been allocated to other shorter
and more reliable recovery paths.
Vary link success rates. Figures 17 and 18 show the average
throughput of Q-PASS, Q-CAST, Greedy, and SLMP on different
quantum device abilities by varying the average channel success
rate and swapping (internal link) success rate. When the channel
success rate p or the swapping success rate q is small, the overall
throughput will be degraded. A robust routing algorithm should still
perform well on low ability networks. From the figures, the swap-
ping success rate also has big impact on the average throughput,
because the link failure in the P2 can be mitigated by the recovery
algorithms in P4, but there is no circumvention for swapping errors.
And the Q-CAST performs the best among the four algorithms.
Scalability. We evaluate the scalability of routing algorithms
on two dimensions: the size of the network n and the number
of concurrent S-D pairs m. A larger network means the average
distance of S-D pairs is longer; and more concurrent S-D pairs in one
time slot introduce higher level of resource contention. Figures 19
and 20 show the average throughput on the two dimensions. All
algorithms exhibit a logarithmic throughput decrease with the
number of nodes in the network. Q-CAST outperforms others on
all network sizes, and the throughput of Q-CAST is as high as
7.5eps when the network contains 800 nodes. The reason of lower
throughput in larger networks is because the average path length
is longer for the S-D pairs. Longer paths are more likely to fail
in quantum networks. Besides, the throughput of all algorithms
grow sub-linearly with the number of S-D pairs, due to resource
contentions. Q-CAST outperforms others on most settings, and the
advantage of Q-CAST over other algorithms grows rapidly with
the number of S-D pairs. It is because Q-CAST actively resolves the
resource contentions for the S-D pairs.
Fairness. Though we aim to maximize the throughput in the
current designs, the fairness among the S-D pairs is evaluated.
Fig. 21 shows the average number of successful S-D pairs under
different numbers of concurrent requests. For a time slot, an S-
D pair is successful (epair) when they establish at least one ebits
after P4. Q-CAST outperforms others and all algorithms grow sub-
linearly. Fig. 22 shows the CDF of the number of paths allocated
72
0510152025Throughput (eps)0.00.20.40.60.81.0SLMPBotCapGreedySumDistMultiMetricQ-CASTCR0510Throughput (eps)0.00.20.40.60.81.0SLMPGreedyQ-CASTCRMultiMetricSumDistBotCap0510152025Throughput (eps)0.00.20.40.60.81.0SLMPCRGreedyQ-CASTMultiMetricSumDistBotCap036∞Link state broadcast range k24681012Throughput (eps)Q-CASTQ-PASSGreedySLMP0.10.20.30.40.50.60.70.80.9Average channel success rate051015202530Throughput (eps)Q-CASTQ-PASSGreedySLMP0.800.850.900.951.00Swapping success rate2.55.07.510.012.515.017.5Throughput (eps)Q-CASTQ-PASSGreedySLMP50100200400800|V|02468101214Throughput (eps)Q-CASTQ-PASSGreedySLMP246810# S-D pairs in one time slot024681012Throughput (eps)Q-CASTQ-PASSGreedySLMPSIGCOMM ’20, August 10ś14, 2020, Virtual Event, NY, USA
Shouqian Shi and Chen Qian
Figure 21: # of successful con-
current S-D pairs
Figure 22: CDF of # of major paths
Figure 23: Contribution of re-
covery paths
Figure 24: Overhead of recov-
ery paths
to every S-D pair. A W -path is counted as W separate paths. As a
baseline requirement, any S-D pair should be allocated at least one
major path, which is fulfilled by all algorithms. The SLMP is the
fairest. The Q-CAST has a turning point on the CDF figure, which
means 40 percent of S-D pairs are allocated less than 9 paths, and
the other pairs are allocated 10 to 14 paths, which is very fair. The
Q-PASS is the most biased algorithm.
Recovery paths. We evaluate the contribution of recovery
paths to the overall throughput for both Q-PASS and Q-CAST, by
comparing their throughput with that of their recovery path-free
versions Q-PAST\R and Q-CAST\R. The results are shown in Fig. 23.
The recovery paths contribute about 0.5eps to Q-PASS and 1eps to
Q-CAST. We further show the average number of occupied channels
in one time slot for Q-CAST, Q-CAST\R, and Q-PASS in Fig. 24,
where the x-axis shows the throughput of each case. Q-PASS is
not shown in this figure because it takes way more channels in
the recovery paths and the results are not in this range of y-axis.
Q-PASS\R takes times fewer channels compared with Q-PASS, and
Q-CAST\R saves 25% channels from the 400 channels taken by
Q-CAST.
As the recovery paths are contention-free for Q-CAST, more
interesting statistics are collected on Q-CAST recovery paths. The
CDF of the width of recovery paths is shown in Fig. 25. The recovery
paths can be wider when the number of S-D pairs is small, because
of the low resource contention between S-D pairs. For most cases,
the widths of recovery paths for a single S-D pair are larger than
those of the 10 concurrent S-D pairs by 2. Besides, the CDF of the
total number of recovery paths of a single major path is shown in
Fig. 26. In larger networks, the major paths are longer, and more
recovery paths can be found.
Summary of evaluations. Q-CAST exhibits much higher through-
put, robustness, and scalability than other routing algorithms. Q-
PASS also shows good throughput and the metric CR provides the
highest throughput for Q-PASS. If the minimum resource utiliza-
tion is a concern for some quantum networks, recovery paths for
both algorithms can be disabled for better efficiency. Q-CAST\R is
a good balance between throughput and resource efficiency.
6 DISCUSSION
Better fairness. The algorithms proposed in this paper aim to
maximize throughput, and each time slot is considered totally sepa-
rately. A simple extension, however, is available to both Q-PASS and
Q-CAST to provide better fairness while maintaining high through-
put. For any S-D pair that has failed to share an ebit in a slot T , the
pair and the failing streak ⟨(s, d), 1⟩ are broadcast to all nodes in P1
in the slot T + 1. The routing metric of all paths connecting this
S-D pair is multiplied with a factor such as 1.1, which means their
paths are slightly over-evaluated, and thus are more likely to be
selected. If the pair still fails, the failing streak increases to a higher
73
Figure 25: CDF of the width of
recovery paths
Figure 26: CDF of # of recovery
paths on a single major path
factor such as 2, and the related routing metric is multiplied with
1.12 in T + 2. Eventually, this pair will succeed.
Prioritized routing. Both Q-PASS and Q-CAST are extendable
to support simple prioritized routing. Suppose S-D pairs are in
different priority classes, identified by the number 1, 2, · · · , 10, and
the priority is ‘hard’ ś a single S-D pair in priority class c is far more
valuable than all S-D pairs in priority class c − 1 and lower. In P2 of
Q-PASS and Q-CAST, the offline paths (only Q-PASS) and online
paths (both algorithms) of the highest priority S-D pair are selected
until no more path is available. More paths are then selected in
the residual graph for S-D pairs in lower priority classes. The P4
of Q-CAST is not modified because the selected paths have no
contention. In P4 of Q-PASS, the paths of the highest priority S-D
pair are recovered first.
7 CONCLUSION AND FUTURE WORK
This work presents a new entanglement routing model of quan-
tum networks that reflects the differences compared to classical
networks and new entanglement routing algorithms that utilize the
unique properties of quantum networks. The proposed algorithm
Q-CAST increases network throughput by a big margin compared
to other methods. We expect more future research will be conducted
on the entanglement routing problem and could contribute to the
eventual success of quantum networks.
There could be a large amount of possible future work on the
topic of routing in quantum networks. Among them, we identify
three possible future research topics that are directly related to this
work: 1) properly find offline paths such that generated paths are
resilient to the runtime resource contention, 2) find an efficient
algorithm to correctly select the recovery loops for Q-CAST P4,
and 3) make use of the entangled but not used pairs in the previous
time slot, rather than resetting the whole network at the beginning
of every time slot.
This work does not raise any ethical issues.
8 ACKNOWLEDGEMENT
This work was partially supported by National Science Founda-
tion Grants 1717948, 1750704, and 1932447. We thank Liang Jiang,
Rui Li, Peter Young, our shepherd Hongqiang Harry Liu, and the
anonymous reviewers for their suggestions and comments.
246810# S-D pairs in one time slot12345# succ S-D pairsQ-CASTQ-PASSGreedySLMP0510152025Total width of allocated major paths0.00.20.40.60.81.0CDFSLMPGreedyQ-CASTQ-PASS0510152025Throughput (eps)0.00.20.40.60.81.0CDFQ-PASS\RQ-CASTQ-PASSQ-CAST\R0510152025Throughput (eps)050001000015000200002500030000# occupied channelsQ-CAST\RQ-PASSQ-CASTQ-PASS\R0123456Width of recovery path0.00.20.40.60.81.0CDF1 S-D pair2 S-D pairs3 S-D pairs4 S-D pairs5 S-D pairs6 S-D pairs7 S-D pairs8 S-D pairs9 S-D pairs10 S-D pairs0255075100125150175# recovery paths per major path0.00.20.40.60.81.0CDF|V| = 50|V| = 100|V| = 200|V| = 400|V| = 800Concurrent Entanglement Routing for Quantum Networks: Model and Designs
SIGCOMM ’20, August 10ś14, 2020, Virtual Event, NY, USA
REFERENCES
[1] 2019. Source Code of the Quantum Routing Simulations. https://github.com/
QianLabUCSC/QuantumRouting.
[2] Ian F Akyildiz, Weilian Su, Yogesh Sankarasubramaniam, and Erdal Cayirci. 2002.
Wireless sensor networks: a survey. Computer Networks (2002).
[3] Mohammad Al-Fares, Sivasankar Radhakrishnan, Barath Raghavan, Nelson
Huang, and Amin Vahdat. 2010. Hedera: dynamic flow scheduling for data
center networks. In Proceedings of USENIX NSDI.
[4] James Aspnes, Yossi Azar, Amos Fiat, Serge Plotkin, and Orli Waarts. 1993. On-
line load balancing with applications to machine scheduling and virtual circuit
routing. In Proceedings of the twenty-fifth annual ACM symposium on Theory of
computing.
[5] Charles H Bennett and Gilles Brassard. 1984. Quantum Cryptography: Public
Key Distribution and Coin Tossing. In Proceedings of the International Conference
on Computers, Systems and Signal Processing.
[6] Hannes Bernien, Bas Hensen, Wolfgang Pfaff, Gerwin Koolstra, Machiel S Blok,