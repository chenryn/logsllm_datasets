creases as BLE-Guardian and the BLE device become
farther apart. In all of the cases, however, the cutoff dis-
tance is less than 1m, even when BLE-Guardian and
the BLE device are 3m apart. This also applies when
BLE-Guardian is inside the backpack which should re-
duce the effectiveness of its jamming. Snifﬁng with
a smartphone has a shorter cutoff distance because the
smartphone’s BLE chip ﬁlters out advertisements failing
the CRC check so that they are not reported to the OS.
The cutoff distance is enough to thwart tracking and
proﬁling in several scenarios, especially when the user
is moving (walking, jogging, biking or driving). In these
scenarios, BLE-Guardian is not farther than 1m from the
target BLE device. An adversary has to get very close to
the user, even if BLE-Guardian is covered in a coat or
bag, to be able to scan or connect to the BLE device.
In other cases, the user has to keep his BLE devices
(to be protected) close to BLE-Guardian in order to
get the best privacy protection possible. Our experi-
ments showed that BLE-Guardian and the target BLE
device must be separated by a maximum distance of 5m
so that an attacker beyond the cutoff distance won’t be
able to decode the advertisements.
If BLE-Guardian
and target BLE device are farther apart than this, then
BLE-Guardian’s jamming won’t be able to cover the en-
tire transmission area of the BLE device. In all circum-
stances, however, BLE-Guardian detects unauthorized
connections and alerts the user accordingly.
6.2.2 Evaluation Setup
Beyond the cutoff distance, BLE-Guardian is capable of
hiding the advertisements and controlling access to any
target BLE device regardless of its advertising frequency.
This protection, however, comes at a cost. In what fol-
lows, we evaluate BLE-Guardian’s impact on other in-
nocuous devices, the advertising channel, and the gate-
way. In the evaluation scenarios, we deploy the target
BLE devices at distance of 1.5m from BLE-Guardian,
and the sniffer between BLE-Guardian and the BLE de-
vices (at a distance of 0.5m from BLE-Guardian). We
evaluate BLE-Guardian when protecting up to 10 target
devices with the following advertising intervals: 10.24
sec (highest possible), 5 sec, 2.5 sec, 1.25 sec, 960ms,
625ms, 312.5ms, 100ms, 40ms, and 20ms (lowest possi-
ble). Note that evaluating with 10 target devices con-
stitutes an extreme scenario; according to our dataset,
the average user is bonded to less than 4 devices, which
s
d
A
d
e
m
m
a
J
s
d
A
d
e
m
m
a
J
1
0.5
0
1
0.5
0
Adv=20ms
Adv=960ms
1 2 3 4 5 6 7 8 9 10
# Advertisers
Adv=5000ms
1
0.5
0
1
0.5
0
1 2 3 4 5 6 7 8 9 10
# Advertisers
Adv=10240ms
1 2 3 4 5 6 7 8 9 10
1 2 3 4 5 6 7 8 9 10
# Advertisers
# Advertisers
Figure 9: Portion of jammed advertisements of an in-
nocuous BLE device when BLE-Guardian is running
and protecting up to 10 advertisers.
would indicate the number of target devices (i.e. those to
be protected).
6.2.3 Advertisement Hiding
There are two takeaways from Fig. 9.
Impact on Other Devices: We ﬁrst evaluate the num-
ber of advertisements, not belonging to the target BLE
device(s), BLE-Guardian will jam (Fig. 9). While ac-
cidentally jamming other devices doesn’t affect the pri-
vacy properties of BLE-Guardian, it hinders the services
they offer to other users.
In particular, we study four
scenarios with an innocuous (not the target) BLE device
advertising at 20ms, 960ms, 5s, and 10.24s, and a vary-
ing number (between 1 and 10) of target devices, which
BLE-Guardian protects. Each subset of target devices
of size N (≤ 10) contains the top N advertising intervals
from the list of Section 6.2.2.
First,
BLE-Guardian has little effect on other devices when it
protects a relatively low number of devices, or when the
advertising interval of the target BLE device(s) is larger
than 500ms; in these cases, BLE-Guardian will be less
active (bars corresponding to less than 6 target devices
in the four plots of Fig. 9). Second, BLE-Guardian has
a higher effect on the innocuous device with higher ad-
vertising frequencies as observed from top-left plot of
Fig. 9, especially when protecting a large number of de-
vices (including those with 20 ms advertising interval).
In the latter case, BLE-Guardian is active for at least
half of the time, representing the worst-case scenario of
BLE-Guardian’s overhead where up to 50% of other de-
vices’ advertisements are jammed. However, since the
advertisement frequency is high, even with a relatively
high rate of jammed advertisements, the user’s experi-
ence won’t be drastically affected. On the other hand,
USENIX Association  
25th USENIX Security Symposium  1217
13
Adv=20ms
Adv=960ms
Adv=20ms
Adv=960ms
Adv=10240ms
)
s
m
(
y
a
e
d
l
200
100
0
)
c
e
s
(
y
a
e
d
l
150
100
50
0
)
c
e
s
(
y
a
e
d
l
30
20
10
0
1 2 3 4 5 6 7 8 9 10
1 2 3 4 5 6 7 8 9 10
# advertisers
Adv=5000ms
# advertisers
Adv=10240ms
)
c
e
s
(
y
a
e
d
l
200
100
0
1 2 3 4 5 6 7 8 9 10
1 2 3 4 5 6 7 8 9 10
# advertisers
# advertisers
Figure 10: The delay of an authorized client
in
successfully connecting to the target device when
BLE-Guardian is running.
when the target BLE device advertises at lower frequen-
cies, the effect on the advertising channels and conse-
quently other devices will be limited as evident from the
rest of the plots of Fig. 9.
Impact on Authorized Access: To enable autho-
rized connections, BLE-Guardian advertises on the be-
half of the target BLE device only when it is conﬁ-
dent that the target device is listening for connections.
BLE-Guardian skips some advertising sessions which
will introduce delays to authorized clients attempting
connections as reported in Fig. 10. In this scenario, an
authorized client is attempting connection to a target de-
vice advertising at 20ms, 960 ms, 5s, and 10.24 s, with an
additional number of protected devices varying from 1 to
10. In the majority of the cases, the client has to wait for
less than a second before successfully receiving an adver-
tisement and issuing a connection. The only exception is
the worst case consisting of BLE-Guardian protecting
all of the 10 target devices (including devices advertis-
ing at intervals less than 100ms). The client might have
to wait for up to multiple advertisement intervals before
being able to connect. This is evident from the rightmost
bar in each of the four plots of Fig. 10.
Impact on Advertising Channels Last but not least,
we evaluate BLE-Guardian’s impact on the advertising
channel, which, if high, might leak information about
the existence of sensitive device(s). In this experiment,
BLE-Guardian protects a single target device advertis-
ing at 20ms (the lowest possible), 960ms, and 10240ms
(the highest possible). At the same time, two innocuous
devices advertise at 20ms, in addition to other 15 devices
not under our control advertising at different frequen-
cies (minimum advertisement interval 30ms). In this sce-
s
m
a
j
y
r
a
s
s
e
c
c
e
n
n
u
#
10
10
5
0
5
0
10
5
0
37 38 39
Channel
37
38
39
37
38
39
Channel
Channel
Figure 11: Unnecessary jamming instances with two ad-
vertisers at 20ms.
nario, BLE-Guardian will be active all the time since the
two innocuous advertisers will force it to enlarge its mon-
itoring interval between 20–30ms (while the advertising
interval of the target device is only 20ms).
Fig. 11 shows the distribution of the number of unnec-
essary jammed instances in each interval when the target
BLE device is expected to advertise. It is evident that
in more than 50% of the intervals when BLE-Guardian
is active, the number of unnecessary jamming instances
events is 0, indicating a low overhead on the channel.
When the target BLE device advertises at a lower fre-
quency, BLE-Guardian is less active (middle and left
plots of Fig. 11). These plots match the real-world
scenarios observed from our data-collection campaign.
Most commercial BLE devices advertise at relatively low
frequencies (at intervals between 1 and 10s).
Finally, we evaluate the accuracy of predicting the next
advertisement event of the target BLE devices. In all the
experiments (including all scenarios), BLE-Guardian
can predict the device’s advertisements, i.e., the target
BLE device advertised in the interval it is expected to.
BLE-Guardian is also able to jam all the advertisements
of the BLE device over the three advertising channels.
This indicates that an attacker can’t modify the behavior
of BLE-Guardian by injecting trafﬁc into the advertising
channels.
6.2.4 Energy Overhead
BLE-Guardian incurs no energy overhead for both the
target BLE devices and the authorized clients. Neverthe-
less, energy overhead is a concern when BLE-Guardian
is attached to a smartphone. We measured the en-
ergy overhead of BLE-Guardian using a Monsoon
power monitor while running on a Samsung Galaxy S4
with Android 4.4.2.
In the idle case, BLE-Guardian
consumes 1370mW on average. The average power
consumption rises to 1860mW while transmitting and
1654mW while receiving as shown in Fig. 12a. Fortu-
nately, BLE-Guardian doesn’t sense the channel or per-
1218  25th USENIX Security Symposium 
USENIX Association
14
)
W
(
r
e
w
o
P
)
W
(
r
e
w
o
P
2.5
2
1.5
1
0
2.5
2
1.5
1
1
d
a
e
h
r
e
v
O
y
g
r
e
n
E
8
6
4
2
0
4
5
Start Tx
2
Time (sec)
Start Rx
2
3
4
Time (sec)
1 2 3 4 5 6 7 8 910
# Advertisers
(a) Overhead of basic opera-
tions.
(b) Average overhead in differ-