# Challenge 3
In the previous challenge, we got a PNG file.
![](images/Payload.png)
Nothing too interesting here.
Let's take a look at its attributes:
```console
root@kali:/media/sf_CTFs/hoshen/1/_Sukkah.jpg.extracted# exiftool Payload.png
ExifTool Version Number         : 11.10
File Name                       : Payload.png
Directory                       : .
File Size                       : 27 kB
File Modification Date/Time     : 2020:08:07 12:25:43+03:00
File Access Date/Time           : 2020:09:17 21:19:00+03:00
File Inode Change Date/Time     : 2020:09:17 21:19:49+03:00
File Permissions                : rwxrwx---
File Type                       : PNG
File Type Extension             : png
MIME Type                       : image/png
Image Width                     : 2100
Image Height                    : 1575
Bit Depth                       : 8
Color Type                      : Palette
Compression                     : Deflate/Inflate
Filter                          : Adaptive
Interlace                       : Noninterlaced
SRGB Rendering                  : Perceptual
Gamma                           : 2.2
Palette                         : (Binary data 768 bytes, use -b option to extract)
Pixels Per Unit X               : 3779
Pixels Per Unit Y               : 3779
Pixel Units                     : meters
Image Size                      : 2100x1575
Megapixels                      : 3.3
```
The interesting thing here is that there's a custom palette. We can view it with `PNGCheck`:
```console
root@kali:/media/sf_CTFs/hoshen/1/_Sukkah.jpg.extracted# pngcheck -vtp7f Payload.png
File: Payload.png (27397 bytes)
  chunk IHDR at offset 0x0000c, length 13
    2100 x 1575 image, 8-bit palette, non-interlaced
  chunk sRGB at offset 0x00025, length 1
    rendering intent = perceptual
  chunk gAMA at offset 0x00032, length 4: 0.45455
  chunk PLTE at offset 0x00042, length 768: 256 palette entries
      0:  (  0,  0,  0) = (0x00,0x00,0x00)
      1:  (  3,  3,  3) = (0x03,0x03,0x03)
      2:  (  7, 10, 11) = (0x07,0x0a,0x0b)
      3:  ( 10, 11,  3) = (0x0a,0x0b,0x03)
      4:  ( 11,  9, 10) = (0x0b,0x09,0x0a)
      5:  ( 10, 11, 10) = (0x0a,0x0b,0x0a)
      6:  ( 10,  9, 12) = (0x0a,0x09,0x0c)
      7:  ( 13, 14, 12) = (0x0d,0x0e,0x0c)
      8:  ( 24, 23, 27) = (0x18,0x17,0x1b)
      9:  ( 33, 33, 32) = (0x21,0x21,0x20)
     10:  ( 45, 46, 44) = (0x2d,0x2e,0x2c)
     11:  ( 45, 43, 49) = (0x2d,0x2b,0x31)
     12:  ( 65, 77, 53) = (0x41,0x4d,0x35)
     13:  (105,109, 32) = (0x69,0x6d,0x20)
     14:  ( 71, 69, 77) = (0x47,0x45,0x4d)
     15:  ( 75, 76, 73) = (0x4b,0x4c,0x49)
     16:  ( 74, 72, 80) = (0x4a,0x48,0x50)
     17:  ( 81, 79, 87) = (0x51,0x4f,0x57)
     18:  ( 87, 88, 85) = (0x57,0x58,0x55)
     19:  ( 76,101,115) = (0x4c,0x65,0x73)
     20:  (103,123, 77) = (0x67,0x7b,0x4d)
     21:  ( 99,100, 97) = (0x63,0x64,0x61)
     22:  ( 98, 96,106) = (0x62,0x60,0x6a)
     23:  (102,108, 97) = (0x66,0x6c,0x61)
     24:  (111, 97,100) = (0x6f,0x61,0x64)
     25:  (105,109, 99) = (0x69,0x6d,0x63)
     26:  (104, 97,125) = (0x68,0x61,0x7d)
     27:  (111,108,119) = (0x6f,0x6c,0x77)
     28:  (117,120,111) = (0x75,0x78,0x6f)
     29:  (115,117,113) = (0x73,0x75,0x71)
     30:  (117,119,114) = (0x75,0x77,0x72)
     31:  (117,114,126) = (0x75,0x72,0x7e)
     32:  (121,123,118) = (0x79,0x7b,0x76)
     33:  (119,113,137) = (0x77,0x71,0x89)
     34:  (130,126,141) = (0x82,0x7e,0x8d)
     35:  (131,133,127) = (0x83,0x85,0x7f)
     36:  (137,140,134) = (0x89,0x8c,0x86)
     37:  (139,141,135) = (0x8b,0x8d,0x87)
     38:  (139,142,136) = (0x8b,0x8e,0x88)
     39:  (135,131,146) = (0x87,0x83,0x92)
     40:  (138,134,151) = (0x8a,0x86,0x97)
     41:  (141,136,155) = (0x8d,0x88,0x9b)
     42:  (141,137,156) = (0x8d,0x89,0x9c)
     43:  (142,145,138) = (0x8e,0x91,0x8a)
     44:  (  0,  0,  0) = (0x00,0x00,0x00)
     45:  (  0,  0,  0) = (0x00,0x00,0x00)
     46:  (  0,  0,  0) = (0x00,0x00,0x00)
     47:  (  0,  0,  0) = (0x00,0x00,0x00)
     48:  (  0,  0,  0) = (0x00,0x00,0x00)
     49:  (  0,  0,  0) = (0x00,0x00,0x00)
     50:  (  0,  0,  0) = (0x00,0x00,0x00)
     51:  (  0,  0,  0) = (0x00,0x00,0x00)
     52:  (  0,  0,  0) = (0x00,0x00,0x00)
     53:  (  0,  0,  0) = (0x00,0x00,0x00)
     54:  (  0,  0,  0) = (0x00,0x00,0x00)
     55:  (  0,  0,  0) = (0x00,0x00,0x00)
     56:  (  0,  0,  0) = (0x00,0x00,0x00)
     57:  (  0,  0,  0) = (0x00,0x00,0x00)
     58:  (  0,  0,  0) = (0x00,0x00,0x00)
     59:  (  0,  0,  0) = (0x00,0x00,0x00)
     60:  (  0,  0,  0) = (0x00,0x00,0x00)
     61:  (  0,  0,  0) = (0x00,0x00,0x00)
     62:  (  0,  0,  0) = (0x00,0x00,0x00)
     63:  (  0,  0,  0) = (0x00,0x00,0x00)
     64:  (  0,  0,  0) = (0x00,0x00,0x00)
     65:  (  0,  0,  0) = (0x00,0x00,0x00)
     66:  (  0,  0,  0) = (0x00,0x00,0x00)
     67:  (  0,  0,  0) = (0x00,0x00,0x00)
     68:  (  0,  0,  0) = (0x00,0x00,0x00)
     69:  (  0,  0,  0) = (0x00,0x00,0x00)
     70:  (  0,  0,  0) = (0x00,0x00,0x00)
     71:  (  0,  0,  0) = (0x00,0x00,0x00)
     72:  (  0,  0,  0) = (0x00,0x00,0x00)
     73:  (  0,  0,  0) = (0x00,0x00,0x00)
     74:  (  0,  0,  0) = (0x00,0x00,0x00)
     75:  (  0,  0,  0) = (0x00,0x00,0x00)
     76:  (  0,  0,  0) = (0x00,0x00,0x00)
     77:  (  0,  0,  0) = (0x00,0x00,0x00)
     78:  (  0,  0,  0) = (0x00,0x00,0x00)
     79:  (  0,  0,  0) = (0x00,0x00,0x00)
     80:  (  0,  0,  0) = (0x00,0x00,0x00)