---
author: Sandra Henry-stocker
category: 技术
comments_data: []
count:
  commentnum: 0
  favtimes: 1
  likes: 0
  sharetimes: 0
  viewnum: 6256
date: '2019-04-25 11:23:34'
editorchoice: false
excerpt: Linux 系统上的一些文件可能出现在多个位置。按照本文指示查找并识别这些“同卵双胞胎”，还可以了解为什么硬链接会如此有利。
fromurl: https://www.networkworld.com/article/3387961/how-to-identify-duplicate-files-on-linux.html
id: 10777
islctt: true
largepic: /data/attachment/album/201904/25/112343qc5rzb5xt5kstorr.jpg
permalink: /article-10777-1.html
pic: /data/attachment/album/201904/25/112343qc5rzb5xt5kstorr.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: Linux 系统上的一些文件可能出现在多个位置。按照本文指示查找并识别这些“同卵双胞胎”，还可以了解为什么硬链接会如此有利。
tags:
- 文件
- 相同
thumb: false
title: 如何识别 Linux 上的文件分身
titlepic: true
translator: MjSeven
updated: '2019-04-25 11:23:34'
---
> 
> Linux 系统上的一些文件可能出现在多个位置。按照本文指示查找并识别这些“同卵双胞胎”，还可以了解为什么硬链接会如此有利。
> 
> 
> 
![Archana Jarajapu \(CC BY 2.0\)](/data/attachment/album/201904/25/112343qc5rzb5xt5kstorr.jpg)
识别使用同一个磁盘空间的文件依赖于利用文件使用相同的 inode 这一事实。这种数据结构存储除了文件名和内容之外的所有信息。如果两个或多个文件具有不同的名称和文件系统位置，但共享一个 inode，则它们还共享内容、所有权、权限等。
这些文件通常被称为“硬链接”，不像符号链接（即软链接）那样仅仅通过包含它们的名称指向其他文件，符号链接很容易在文件列表中通过第一个位置的 `l` 和引用文件的 `->` 符号识别出来。
```
$ ls -l my*
-rw-r--r-- 4 shs shs   228 Apr 12 19:37 myfile
lrwxrwxrwx 1 shs shs     6 Apr 15 11:18 myref -> myfile
-rw-r--r-- 4 shs shs   228 Apr 12 19:37 mytwin
```
在单个目录中的硬链接并不是很明显，但它仍然非常容易找到。如果使用 `ls -i` 命令列出文件并按 inode 编号排序，则可以非常容易地挑选出硬链接。在这种类型的 `ls` 输出中，第一列显示 inode 编号。
```
$ ls -i | sort -n | more
 ...
 788000 myfile   /tmp/$0
# search through file for duplicate inode #s
while read line
do
    inode=`echo $line | awk '{print $1}'`
    if [ "$inode" == "$prev" ]; then
        grep $inode /tmp/$0
    fi
    prev=$inode
done  /dev/null
 788000   4 -rw-r--r--   4 shs   shs    228 Apr 12 19:37 /tmp/mycopy
 788000   4 -rw-r--r--   4 shs   shs    228 Apr 12 19:37 /home/shs/myfile
 788000   4 -rw-r--r--   4 shs   shs    228 Apr 12 19:37 /home/shs/save/mycopy
 788000   4 -rw-r--r--   4 shs   shs    228 Apr 12 19:37 /home/shs/mytwin
```
注意，错误输出被重定向到 `/dev/null`，这样我们就不必查看所有 “Permission denied” 错误，否则这些错误将显示在我们不允许查看的其他目录中。
此外，扫描包含相同内容但不共享 inode 的文件（即，简单的文本拷贝）将花费更多的时间和精力。
---
via: 
作者：[Sandra Henry-Stocker](https://www.networkworld.com/author/Sandra-Henry_Stocker/) 选题：[lujun9972](https://github.com/lujun9972) 译者：[MjSeven](https://github.com/MjSeven) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出