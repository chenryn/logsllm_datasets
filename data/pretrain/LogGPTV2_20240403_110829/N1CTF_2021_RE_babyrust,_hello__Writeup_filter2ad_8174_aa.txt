# N1CTF 2021 RE(babyrust, hello) Writeup
|
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## 前言
题目超难！只做出来两道 re ！
Nebula 战队，排名第8，名次还不错，但是看分数和解题数量，前面的大佬真的太强了。
比赛官网：  
比赛时间：2021-11-20 08:00:00 到 2021-11-22 08:00:00
## Reverse
###  babyrust
RE 里唯一一道简单（并不简单）题，给了一个 rust 程序，通过多个 check 宏定义增加分析难度，并且编译时提示宏展开嵌套层次过高，编译失败。
但是实际上很简单，就是`Never gonna
...`那一大段，按照前缀依次宏展开，使用脚本做前缀匹配就能将宏展开为代码。初步处理之后，发现得到的代码里有大量连续的`gonna +=
1`，再将这些合并成一句`gonna += value`即可。python脚本：
    #!/usr/bin/python2
    codes = \
    '''
    macro_rules! check {
        (@s n1ctf{$Never:tt}) => {
            check!(stringify!($Never))
        };
        ($Never:expr) => {{
            fn check() -> bool {
                let mut never = $Never.as_bytes().to_vec();
                let mut gonna = 0;
                let mut give:usize = 0;
    '''
    macros = [
        ['Never gonna give you up', 'give += 1;'],
        ['Never gonna let you down', 'give -= 1;'],
        ['Never gonna run around and desert you', 'gonna += 1;'],
        ['Never gonna make you cry', 'gonna -= 1;'],
        ['Never gonna say goodbye', 'gonna = never[give];'],
        ['Never gonna tell a lie and hurt you', 'never[give] = gonna;'],
        ['Never gonna give never gonna give', 'let you = [148u8, 59, 143, 112, 121, 186, 106, 133, 55, 90, 164, 166, 167, 121, 174, 147, 148, 167, 99, 86, 81, 161, 151, 149, 132, 56, 88, 188, 141, 127, 151, 63];\n\t\t\treturn never == you;']
    ]
    statements = # LONG line
    while statements:
        for i in macros:
            if statements.startswith(i[0]):
                codes += '\t\t\t%s\n' % i[1]
                statements = statements[len(i[0]): ].strip(' ')
                break
        else:
            print('No macro found for %s' % statements)
            exit(-1)
    codes += \
    '''
            }
            check()
        }};
    }
    fn main() {
        let result = check!(@s n1ctf{0123456789abcdef});
        if result {
            println!("Yes");
        }
    }
    '''
    lines = codes.splitlines()
    codes = ''
    i = 0
    while i  {
                    check!(stringify!($Never))
            };
            ($Never:expr) => {{
                    fn check() -> bool {
                            let mut never = $Never.as_bytes().to_vec();
                            let mut gonna = 0;
                            let mut give:usize = 0;
                            gonna = never[give];
                            gonna += 83;
                            never[give] = gonna;
                            give += 1;
                            gonna = never[give];
                            gonna += 5;
                            never[give] = gonna;
                            give += 1;
                            gonna = never[give];
                            gonna += 76;
                            never[give] = gonna;
                            give += 1;
                            gonna = never[give];
                            gonna += 61;
                            never[give] = gonna;
                            give += 1;
                            gonna = never[give];
                            gonna += 70;
                            never[give] = gonna;
                            give += 1;
                            gonna = never[give];
                            gonna += 117;
                            never[give] = gonna;
                            give += 1;
                            gonna = never[give];
                            gonna += 41;
                            never[give] = gonna;
                            give += 1;
                            gonna = never[give];
                            gonna += 83;
                            never[give] = gonna;
                            give += 1;
                            gonna = never[give];
                            gonna += 2;
                            never[give] = gonna;
                            give += 1;
                            gonna = never[give];
                            gonna += 35;
                            never[give] = gonna;
                            give += 1;
                            gonna = never[give];
                            gonna += 115;
                            never[give] = gonna;
                            give += 1;
                            gonna = never[give];
                            gonna += 101;
                            never[give] = gonna;
                            give += 1;
                            gonna = never[give];
                            gonna += 117;
                            never[give] = gonna;
                            give += 1;
                            gonna = never[give];
                            gonna += 56;
                            never[give] = gonna;
                            give += 1;
                            gonna = never[give];
                            gonna += 105;
                            never[give] = gonna;
                            give += 1;
                            gonna = never[give];
                            gonna += 97;
                            never[give] = gonna;
                            give += 1;
                            gonna = never[give];
                            gonna += 94;
                            never[give] = gonna;
                            give += 1;
                            gonna = never[give];
                            gonna += 101;
                            never[give] = gonna;
                            give += 1;
                            gonna = never[give];
                            gonna += 29;
                            never[give] = gonna;
                            give += 1;
                            gonna = never[give];
                            gonna += 21;
                            never[give] = gonna;
                            give += 1;
                            gonna = never[give];
                            gonna += 12;
                            never[give] = gonna;
                            give += 1;
                            gonna = never[give];
                            gonna += 106;
                            never[give] = gonna;
                            give += 1;
                            gonna = never[give];
                            gonna += 85;
                            never[give] = gonna;
                            give += 1;
                            gonna = never[give];
                            gonna += 80;
                            never[give] = gonna;
                            give += 1;
                            gonna = never[give];
                            gonna += 67;
                            never[give] = gonna;
                            give += 1;
                            gonna = never[give];
                            gonna += 6;
                            never[give] = gonna;
                            give += 1;
                            gonna = never[give];
                            gonna += 21;
                            never[give] = gonna;