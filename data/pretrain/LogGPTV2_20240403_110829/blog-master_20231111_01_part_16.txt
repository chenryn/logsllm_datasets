  \db[+]  [PATTERN]      list tablespaces  
  \dc[S+] [PATTERN]      list conversions  
  \dC[+]  [PATTERN]      list casts  
  \dd[S]  [PATTERN]      show object descriptions not displayed elsewhere  
  \dD[S+] [PATTERN]      list domains  
  \ddp    [PATTERN]      list default privileges  
  \dE[S+] [PATTERN]      list foreign tables  
  \des[+] [PATTERN]      list foreign servers  
  \det[+] [PATTERN]      list foreign tables  
  \deu[+] [PATTERN]      list user mappings  
  \dew[+] [PATTERN]      list foreign-data wrappers  
...  
Formatting  
  \a                     toggle between unaligned and aligned output mode  
  \C [STRING]            set table title, or unset if none  
  \f [STRING]            show or set field separator for unaligned query output  
  \H                     toggle HTML output mode (currently off)  
  \pset [NAME [VALUE]]   set table output option  
                         (border|columns|csv_fieldsep|expanded|fieldsep|  
                         fieldsep_zero|footer|format|linestyle|null|  
                         numericlocale|pager|pager_min_lines|recordsep|  
                         recordsep_zero|tableattr|title|tuples_only|  
                         unicode_border_linestyle|unicode_column_linestyle|  
                         unicode_header_linestyle)  
  \t [on|off]            show only rows (currently off)  
  \T [STRING]            set HTML  tag attributes, or unset if none  
  \x [on|off|auto]       toggle expanded output (currently off)  
Connection  
  \c[onnect] {[DBNAME|- USER|- HOST|- PORT|-] | conninfo}  
                         connect to new database (currently "postgres")  
  \conninfo              display information about current connection  
  \encoding [ENCODING]   show or set client encoding  
  \password [USERNAME]   securely change the password for a user  
Operating System  
  \cd [DIR]              change the current working directory  
  \setenv NAME [VALUE]   set or unset environment variable  
  \timing [on|off]       toggle timing of commands (currently off)  
  \! [COMMAND]           execute command in shell or start interactive shell  
Variables  
  \prompt [TEXT] NAME    prompt user to set internal variable  
  \set [NAME [VALUE]]    set internal variable, or list all if no parameters  
  \unset NAME            unset (delete) internal variable  
Large Objects  
  \lo_export LOBOID FILE  
  \lo_import FILE [COMMENT]  
  \lo_list  
  \lo_unlink LOBOID      large object operations  
```  
```  
postgres=# \h create role  
Command:     CREATE ROLE  
Description: define a new database role  
Syntax:  
CREATE ROLE name [ [ WITH ] option [ ... ] ]  
where option can be:  
      SUPERUSER | NOSUPERUSER  
    | CREATEDB | NOCREATEDB  
    | CREATEROLE | NOCREATEROLE  
    | INHERIT | NOINHERIT  
    | LOGIN | NOLOGIN  
    | REPLICATION | NOREPLICATION  
    | BYPASSRLS | NOBYPASSRLS  
    | CONNECTION LIMIT connlimit  
    | [ ENCRYPTED ] PASSWORD 'password' | PASSWORD NULL  
    | VALID UNTIL 'timestamp'  
    | IN ROLE role_name [, ...]  
    | IN GROUP role_name [, ...]  
    | ROLE role_name [, ...]  
    | ADMIN role_name [, ...]  
    | USER role_name [, ...]  
    | SYSID uid  
URL: https://www.postgresql.org/docs/14/sql-createrole.html  
```  
#### 71 psql快捷命令通配符  
```  
postgres=# \c db1 r1  
You are now connected to database "db1" as user "r1".  
db1=> \dt s1.*  
             List of relations  
 Schema |       Name       | Type  | Owner   
--------+------------------+-------+-------  
 s1     | aud_alter        | table | r1  
 s1     | new1             | table | r1  
 s1     | new2             | table | r1  
 s1     | new3             | table | r1  
 s1     | new4             | table | r1  
 s1     | nt               | table | r1  
 s1     | nt1              | table | r1  
 s1     | t                | table | r1  
 s1     | t2               | table | r1  
 s1     | t3               | table | r1  
 s1     | t4               | table | r1  
 s1     | t_1              | table | r1  
 s1     | t_big            | table | r1  
 s1     | t_cur            | table | r1  
 s1     | t_forupdate      | table | r1  
 s1     | t_hid            | table | r1  
 s1     | t_hint           | table | r1  
 s1     | t_lock           | table | r1  
 s1     | t_mv             | table | r1  
 s1     | t_off            | table | r1  
 s1     | t_off1           | table | r1  
 s1     | table_change_rec | table | r1  
 s1     | tbl              | table | r1  
 s1     | tbl_poi          | table | r1  
 s1     | tbl_tj           | table | r1  
 s1     | tbl_ts           | table | r1  
 s1     | tbl_vector       | table | r1  
 s1     | test             | table | r1  
 s1     | test1            | table | r1  
(29 rows)  
```  
#### 72 使用tab补齐SQL command  
```  
postgres@6f60081d4ace:~/14/pgdata$ psql  
psql (14.9 (Debian 14.9-1.pgdg110+1))  
Type "help" for help.  
db1=> 按TAB键支持补齐  
ABORT                      COMMIT                     END                        LOCK                       REVOKE                     TRUNCATE  
ALTER                      COPY                       EXECUTE                    MOVE                       ROLLBACK                   UNLISTEN  
ANALYZE                    CREATE                     EXPLAIN                    NOTIFY                     SAVEPOINT                  UPDATE  
BEGIN                      DEALLOCATE                 FETCH                      PREPARE                    SECURITY LABEL             VACUUM  
CALL                       DECLARE                    GRANT                      REASSIGN                   SELECT                     VALUES  
CHECKPOINT                 DELETE FROM                IMPORT FOREIGN SCHEMA      REFRESH MATERIALIZED VIEW  SET                        WITH  
CLOSE                      DISCARD                    INSERT INTO                REINDEX                    SHOW                         
CLUSTER                    DO                         LISTEN                     RELEASE                    START                        
COMMENT                    DROP                       LOAD                       RESET                      TABLE          
```  
```  
postgres@6f60081d4ace:~/14/pgdata$ psql  
psql (14.9 (Debian 14.9-1.pgdg110+1))  
Type "help" for help.  
db1=> create 按TAB键支持补齐  
ACCESS METHOD         DOMAIN                GROUP                 POLICY                SEQUENCE              TEMP                  UNIQUE  
AGGREGATE             EVENT TRIGGER         INDEX                 PROCEDURE             SERVER                TEMPORARY             UNLOGGED  
CAST                  EXTENSION             LANGUAGE              PUBLICATION           STATISTICS            TEXT SEARCH           USER  
COLLATION             FOREIGN DATA WRAPPER  MATERIALIZED VIEW     ROLE                  SUBSCRIPTION          TRANSFORM             USER MAPPING FOR  
CONVERSION            FOREIGN TABLE         OPERATOR              RULE                  TABLE                 TRIGGER               VIEW  
DATABASE              FUNCTION              OR REPLACE            SCHEMA                TABLESPACE            TYPE                 
```  
#### 73 查看SQL command man 手册  
```  
man CREATE_TABLE  
man INSERT  
man UPDATE  
man ALTER_TABLE  
man NOTIFY  
...  
```  
#### 74 修改数据库配置  
```  
配置参数:  
alter system set guc_parameter_name=value;  
OR  
vi $PGHOME/postgresql.auto.conf  
OR   
vi $PGHOME/postgresql.conf  
根据参数类型, reload或重启生效:  
pg_ctl reload  
OR  
pg_ctl restart -m fast  
```  
[《PostgreSQL 参数优先级讲解》](../201901/20190130_03.md)    
优先级由低到高:  
- 命令行: `pg_ctl/postgres -o ...`  
- 参数文件: `postgresql.conf`  
- 热配置参数: `postgresql.auto.conf`  
- `db`: alter database set x=xxx  
- `role`: alter role set x=xxx   
- `table/function...` 级别: `alter function set ...`    
#### 75 修改数据库防火墙配置  
`vi $PGDATA/pg_hba.conf`  
postgres超级用户只允许通过本地+密码访问  
普通用户本地连接不需要输入密码访问  
开放所有公网通过密码访问  
```  
# TYPE  DATABASE        USER            ADDRESS                 METHOD  
# "local" is for Unix domain socket connections only  
local all postgres scram-sha-256  
local   all             all                                     trust  
# IPv4 local connections:  
host all postgres 127.0.0.1/32 scram-sha-256  
host    all             all             127.0.0.1/32            trust  
# IPv6 local connections:  
host    all             postgres             ::1/128                 scram-sha-256  
host    all             all             ::1/128                 trust  
# Allow replication connections from localhost, by a user with the  
# replication privilege.  
local   replication     all                                     trust  
host    replication     all             127.0.0.1/32            trust  
host    replication     all             ::1/128                 trust  
host all all 0.0.0.0/0 scram-sha-256  
```  
```  
pg_ctl reload  
```  
试试效果  
```  
postgres@6f60081d4ace:~/14/pgdata$ psql  
Password for user postgres:   
psql: error: connection to server on socket "/var/lib/postgresql/14/pgdata/.s.PGSQL.1921" failed: FATAL:  password authentication failed for user "postgres"  
postgres@6f60081d4ace:~/14/pgdata$ psql db1 r1  
psql (14.9 (Debian 14.9-1.pgdg110+1))  
Type "help" for help.  
db1=>   
```  
#### 76 创建插件  
```  
vi $PGDATA/postgresql.auto.conf  
shared_preload_libraries = 'pg_stat_statements'  
pg_ctl restart -m fast  
```  
#### 77 修改插件配置  
https://www.postgresql.org/docs/14/pgstatstatements.html   
```  
vi $PGDATA/postgresql.auto.conf  
shared_preload_libraries = 'pg_stat_statements'  
compute_query_id = on  
pg_stat_statements.max = 10000  
pg_stat_statements.track = all  
pg_ctl restart -m fast  
```  
```  
postgres@6f60081d4ace:~/14/pgdata$ psql  
psql (14.9 (Debian 14.9-1.pgdg110+1))  
Type "help" for help.  
postgres=# show pg_stat_statements.  
pg_stat_statements.max             pg_stat_statements.save            pg_stat_statements.track           pg_stat_statements.track_planning  pg_stat_statements.track_utility  
postgres=# show pg_stat_statements.track;  
 pg_stat_statements.track   
--------------------------  
 all  
(1 row)  
```  
#### 78 查看数据库报错, 分析数据库日志文件  
https://www.postgresql.org/docs/14/file-fdw.html  
```  
db1=> create extension file_fdw ;  
CREATE EXTENSION  
db1=> CREATE SERVER pglog FOREIGN DATA WRAPPER file_fdw;  
CREATE SERVER  
db1=> select pg_current_logfile();  
          pg_current_logfile            
--------------------------------------  
 log/postgresql-2023-11-10_163218.csv  
(1 row)  
CREATE FOREIGN TABLE pglog (  
  log_time timestamp(3) with time zone,  
  user_name text,  
  database_name text,  
  process_id integer,  
  connection_from text,  