ing INVITE arrives at the proxy, the location of the desti-
nation URI must be determined (this step is not shown). A
second TCP connection is created between the proxy and
end terminal and the INVITE is forwarded. All control
messages are relayed through the two TCP connections
bridged by the proxy. The Protocol Parser within the ﬁre-
      TCP SYN (1)(cid:13)
TCP SYN - ACK (2)(cid:13)
      TCP ACK (3)(cid:13)
INVITE (4)(cid:13)
Trying (5)(cid:13)
Ringing (11)(cid:13)
OK (13)(cid:13)
ACK (14)(cid:13)
Call Established (15)(cid:13)
(RTP Data Flow)(cid:13)
BYE (17)(cid:13)
 OK (18)(cid:13)
TCP SYN (6)(cid:13)
TCP SYN-ACK (7)(cid:13)
TCP ACK (8)(cid:13)
INVITE (9)(cid:13)
Trying (10)(cid:13)
Ringing (11)(cid:13)
OK (12)(cid:13)
ACK (15)(cid:13)
BYE (16)(cid:13)
OK (19)(cid:13)
Figure 4. Message ﬂow for a successful incom-
ing Net-to-Net call.
wall extracts the required information from the setup mes-
sages to open pinholes to allow the media stream to ﬂow
through uninterrupted. Once the call setup is complete,
the media ﬂows (RTP streams) are exchanged directly be-
tween the two end terminals (assuming both have publicly
routable addresses). When the Protocol Parser detects the
call completion message, it instructs the ﬁrewall to closes
the appropriate pinholes.
3.4. Net-to-Net Call with Called Party Unavailable
The ﬁnal call setup scenario involves an enterprise ter-
minal attempting to call a terminal connected to the Inter-
net but the the call request is canceled because the called
party does not answer. Just as all incoming calls must be
routed through the proxy, so to must all outgoing calls.
Rules are created at the ﬁrewall to block all SIP control
trafﬁc from sources other than the proxy. This, in addition
to authenticating the outgoing call request at the proxy,
ensures that unauthorized users cannot initiate Net-to-Net
calls.
The message sequence shown in Figure 5 is very similar
to an incoming call request. A TCP connection is created
between the calling terminal and the SIP Proxy. The initial
INVITE is sent to the proxy. The IP address of the desti-
nation terminal is determined and a second TCP connec-
tion is created to forward the message. In this case, since
the called party does not answer the incoming request in
a reasonable period of time, the calling party cancels the
call request. The CANCEL message generated by the call-
ing terminal results in the destination terminal terminating
the call request locally. When the Protocol Parser receives
the Request Terminated message, it instructs the ﬁrewall
to close the appropriate pinholes.
Internal SIP(cid:13)
End Terminal(cid:13)
SIP Redirect(cid:13)
Server(cid:13)
External(cid:13)
Firewall(cid:13)
External SIP(cid:13)
End Terminal(cid:13)
TCP SYN (1)(cid:13)
TCP SYN-ACK (2)(cid:13)
TCP ACK (3)(cid:13)
INVITE (4)(cid:13)
Trying (5)(cid:13)
Ringing (12)(cid:13)
CANCEL (13)(cid:13)
OK (14)(cid:13)
Request(cid:13)
Terminated (18)(cid:13)
ACK (19)(cid:13)
TCP SYN (6)(cid:13)
TCP SYN-ACK (7)(cid:13)
TCP ACK (8)(cid:13)
INVITE (9)(cid:13)
Trying (10)(cid:13)
Ringing (11)(cid:13)
   CANCEL (14)(cid:13)
OK (15)(cid:13)
Request Terminated (16)(cid:13)
ACK (17)(cid:13)
Figure 5. Message ﬂow for a Net-to-Net call
with called party unavailable.
4. Enumeration and Classiﬁcation of Attacks
In a complex network, such as an IP telephony enabled
enterprise network, there are a large number of potential
vulnerabilities and attack targets. In this section we enu-
merate and classify the various DoS attacks. The classiﬁ-
cation is based on the various methods that are used to mit-
igate the attacks. In particular, we consider three different
types of deterrence methods: 1) enterprise domain authen-
tication, 2) authenticated control protocols and 3) devices
(attack sensors) to detect and control the ﬂood-based at-
tacks using application and transport layer signaling mes-
sages. Other classes of attacks including eavesdropping,
covert channels and fraud can cause serious problems, but
are beyond the scope of this work.
4.1. Enterprise Domain Authentication
With the deployment of wireless networks within enter-
prises, the vulnerability that an unauthorized user will be
able to connect to the internal LAN has increased. Once
connected to the network, an attacker can make telephony
calls and launch DoS attacks. To ensure that this is not
possible, all outgoing calls must be made by authenticated
users. This can be implemented by a central authentica-
tion server such as active directory, Kerberos [16], or Ra-
dius [21]. To prevent unauthorized outgoing calls, devices
within the control path must be able to query the authenti-
cation server to ensure the identity of the caller.
4.2. Authenticated Control Protocols
There are several types of vulnerabilities and corre-
sponding attacks that can be eliminated if the associated
network elements use strong authentication. All of the
vulnerabilities that can be dealt with using strong authen-
tication target the IP telephony signaling and control mes-
sages. Several types of DoS attacks are possible if strong
authentication is not used between the two end terminals.
These include the use of SIP CANCEL request messages
to drop all incoming calls to a particular terminal or to
cancel all outgoing calls initiated by a terminal. Another
attack is to send a BYE request message to all the termi-
nals involved in an already established call. This results in
the call being dropped and the terminals have to reestab-
lish the call. A third type of DoS attack is caused by an
attacker generating illegitimate SIP response messages in-
forming the calling terminal that the called address is no
longer available.
Another class of attack is based on call redirection. By
injecting malicious SIP response messages into an exist-
ing call control stream, an attacker can alter the servers
through which the control messages are routed. In partic-
ular, the messages can be routed through a compromised
proxy. Other responses can be generated to cause the call-
ing terminal to believe the called party has either changed
locations or address. Yet another attack in this class is
when an attacker re-registers with the RLS by sending a
SIP REGISTER request message with a new URI for the
target party. The result is that all future incoming calls to
be routed to the new URI allowing the attacker to imper-
sonate the target.
Through the use of strong authentication, all of the
above attacks can be stopped. If each end terminal and
server has un-compromised digital signatures then all
messages can be authenticated. The SIP protocol includes
header ﬁelds to provide authentication information as well
as request authentication if it is absent. By requiring all
messages to be digitally signed, an attacker will be unable
to insert false requests or responses into the signaling and
control message stream and impersonate various elements
on the network.
4.3. Sensors to Detect and Control Flood Attacks
There are many types of attacks cannot be dealt with by
provisions included in the IP telephony protocols. These
include ﬂood based attacks. To prevent and contain these
types of attacks, various components in the network in-
frastructure must be leveraged. The ﬁrst type of ﬂood at-
tacks that network devices (also referred to as sensors) can
be used to detect and control are malicious media ﬂows.
By using sampling schemes [9, 7, 14] the sensor can track
the number of packets sent per ﬂow and also monitor the
size of the packets. If a ﬂow is determined to be malicious,
the sensor can either notify an administrator or activate a
response mechanism like rate limiting. The ideal location
where the sensor can be placed is the ﬁrewall or ingress
router since these network elements can observe all the
trafﬁc and enforce the response if a stream is determined
to be malicious.
The second type of ﬂood attacks are those that are gen-
erated by application and transport layer signaling mes-
sages. Dealing with this category of ﬂood based DoS at-
tacks is much more complicated since they can target mul-
tiple protocol levels. There are three levels in an IP tele-
phony deployment that can be targeted. To further com-
plicate the situation, the attacks can come from either the
Internet or from the PSTN.
The end user is the ﬁrst target. The packet switching na-
ture of data networks allows multiple connections to share
the same physical channel. Therefore, unlike in circuit
switched networks, an IP telephone terminal can receive
and potentially participate in multiple calls at once. An
attacker can easily overwhelm a single terminal by send-
ing several call INVITE requests in a short period of time.
The next target is the internal relay points in the enter-
prise. For Net-to-PSTN and Net-to-Net calls this is the
SIP Proxy and for PSTN originated calls it is the MSG.
Each of these devices has a ﬁnite amount of resources.
The MSG contains a ﬁxed number of voice ports and a
request occupies a single port for the entire duration of
the call. For calls relayed through the SIP proxy, the re-
source limit determined by the concurrency of the proxy
server which determines the maximum number of simul-
taneous calls it can handle. This limit is a function of the
memory and the processing capacity of the server. A large
volume of calls could result in these resources being com-
pletely consumed and denying any further calls. It should
be noted that this condition could occur under normal op-
eration.
The ﬁnal target of a ﬂood based DoS attack are the net-
work links that connect the enterprise network to the other
networks. For access to the PSTN network, this is the sig-
naling link between the MSG and SS7 network. The other
key network link is the one that connects the enterprise to
the Internet. A ﬂood based DoS attack can saturate these
links and disrupt not only IP telephony service but also
other services that use these links.
5. Sensors for Detecting DoS Attacks
There is a big difference between traditional TCP trafﬁc
and enterprise IP telephony trafﬁc. Studies of TCP trafﬁc
suggests that the average session length is between 12 and
19 seconds [29]. Enterprise telephony trafﬁc, however,
lasts much longer with at least 10% of calls have duration
over 10 minutes [28]. This difference in session length
imposes constraints on the sampling schemes that mon-
itor connection setups and tear downs. However, it still
possible to apply a single sampling process to both traf-
ﬁc models. Both IP telephony and TCP connections uti-
lize a handshake for connection setup and tear-down. Un-
der normal operation, the number of initiated handshakes
should be very close to the number of complete hand-
shakes within a ﬁxed observation period. A key character-
istic of both application and transport layer DoS attack is
that the handshaking process is not completed. Therefore,
if the difference between initiated and completed hand-
shakes suddenly becomes very large it is a strong indica-
tion that the system is under attack. An additional beneﬁt
of using the handshakes to detect attacks is the temporal
proximity of the messages. All setup messages are trans-
mitted within a relatively short time period. This allows
for shorter sampling periods and hence lower detection
time.
5.1. Detection Algorithm
The algorithm used in detecting the presence of an at-
tack is based on the work presented in [30]. The correla-
tion between the number of connection establishment at-
tempts and the completed handshakes is similar to the re-
lationship between connection setup and tear-down. The
difference can be modeled as a stationary, random process.
The sensor is an implementation of Sequential Change
Point Detection [1] scheme. In particular, the detection of
an attack is accomplished by normalizing the difference
with the average number of connections and applying the
non-parametric cumulative sum method [2].
At the end of each observation period t0, (cid:1)n is calcu-
lated to be the number of establishment attempts (EA(n))
minus the number of completed handshakes (HS(n)). To
remove the dependency between the mean of (cid:1)n and the
sample size, a normalized value Xn is calculate based on
(cid:1)n= (cid:22)C where (cid:22)C is the average number of connections dur-
ing the observation period t0. (cid:22)C is deﬁned as:
(cid:22)C(n) = (cid:11) (cid:22)C(n (cid:0) 1) + (1 (cid:0) (cid:11))HS(n)
(1)
The detection of an attack within a single observation
period is based upon the expected value of Xn. Under
normal operation, E(Xn) = d (cid:28) 1. To make detection
easy, a value o is chosen such that o > d and (cid:22)Xn = Xn (cid:0)
o. By shifting Xn, whenever (cid:22)Xn is positive it indicates
the presence of an attack.
To ensure that short high volume attacks as well as
longer low volume attacks are detected by the sensors, the
algorithm includes a cumulative sum component. We de-
ﬁne yn as
yn = (cid:26) yn(cid:0)1 + (cid:22)Xn;
0;
if (yn(cid:0)1 + (cid:22)Xn) > 0
otherwise
(2)
The detection of an attack is determined by the value of
yn. If this value exceeds a pre-deﬁned threshold value, T ,
the system is considered to be under attack.
5.2. Recovery Algorithm
Perhaps just as important as minimizing the time to de-
tect an attack, is quickly determining when an attack has
ceased and returning the network to its normal state. The
impact of an attack can be ampliﬁed if it takes a long time
to resume normal operation. In this study, we have inves-
tigated the following three different recovery algorithms.
Linear Recovery: The linear recovery approach is the
default behavior of the detection algorithm once the attack
has stopped. The value of (cid:22)Xn is close to (cid:0)o and thus yn
decays linearly to 0. Using this algorithm does not require
additional complexity to be built into the sensor, however,
if the value of yn is large when the attack ceases and the
offset, o, is small, it will require a long time for yn to
drop below the threshold T . This results in the response
mechanisms to remain activated for yn
o minutes after the
attack is over.
Exponential Recovery:
In this recovery algorithm, yn
is decremented using a multiplicative factor once (cid:22)Xn  0
otherwise
If (cid:22)Xn (cid:20) 0, the value of i is incremented after yn is
calculated. Once yn returns to 0 or begins to increase, the
value of i is reset to 1. Using this approach, the time for
which the attack response mechanism remains active after
the attack has ceased is logo(yn) minutes.
Reset after Timeout: This scheme is an extension of
the linear recovery algorithm. When the value of yn be-
gins to drop, a timer, E, is started. The value of yn is
allowed to decay linearly until the timer expires. At the
expiration of the timer, if the value of yn is still above
the threshold T , it is reset to 0. Unlike the other two ap-
proaches, by using discrete timeouts it is possible to place
a ﬁxed upper bound, E, on the time the response mecha-
nisms will be in place after the attack has stopped.
5.3. Application Layer Attack Sensor (ALAS)
To detect ﬂood attacks targeted at a particular end ter-
minal, the detection algorithm presented in the previous
section is applied to the application level trafﬁc. In Sec-
tion 3, it was shown that each legitimate call using the
SIP protocol relies on an INVITE and OK message pair
to complete the setup phase. Tracking the volume of this
message pair and applying the detection algorithm, it is
possible to determine when a particular terminal is receiv-
ing a volume of calls it cannot handle.
To ensure that each end terminal is protected against
ﬂood attacks, the ALAS must monitor each URI indepen-
dently. This is accomplished by a tracking table within
the sensor. During an observation period, the URI is ex-
tracted from INVITE and OK messages and is stored in
the table. Each URI entry has an associated counter to
track the number of INVITEs and OKs observed. At the
expiration of the sampling period, the decision algorithm
is executed for all URIs in the tracking table. The increase
in overhead required to monitor individual URIs is accept-
able because it allows the response mechanism to provide
protection only for those affected by the attack. Using
an aggregate based approach would result in all end ter-
minals being affected by the response mechanisms if an
attack was detected.
Upon detecting an attack targeted at an individual URI,
the ALAS sends a control message to the SIP Proxy to in-
dicate the detection of an attack. Within the message is a
severity indicator. This value is determined by the value
of yn discussed in the previous section. In response to the
control message, the proxy initiates the attack response
by returning Temporarily Unavailable or Busy Here mes-
sages to a fraction of incoming calls to the corresponding
URI. The severity indicator in the control message deter-
mines the probability that a new incoming call will be al-
lowed to pass through the proxy. In the worst case sce-
nario, all calls to the URI will be blocked by the proxy.
The call restrictions are only removed when the ALAS in-
structs the proxy to do so.
5.4. Transport Layer Attack Sensor (TLAS)
As stated previously, using the both setup and tear-down
control messages for IP telephony trafﬁc is not a reason-
able solution for detecting DoS attacks. To identify at-
tacks targeted at the network stack, a sensor can be built
to monitor TCP SYN and ACK packets. The arrival time
between these packets is typically very small. This allows
the sensor to use a short observation period and thus en-
sure quick detection of an attack.
The location of the TLAS within the network allows for
it to be leveraged to protect all machines in the DMZ if
needed. The need to monitor the related SYN and ACK
packets at an individual connection level or end terminal
is not appropriate because of the extremely large volume
of connections and the lack of trustworthiness of source