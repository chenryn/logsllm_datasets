使用 run 命令来不使用 cmd.exe 执行命令。run 命令会将输出发送给你。execute 命令会在后台运
行程序，但不捕获输出。
使用 powershell 命令来在受害主机上使用 PowerShell 来执行命令。使用 powerpick 命令不使用
powershell.exe 来执行 PowerShell cmdlet。这个命令依赖于由 Lee Christensen 开发的非托管
PowerShell 技术。powershell 和 powerpick 命令会使用你的当前令牌（token）。
psinject 命令会将非托管的 PowerShell 注入到一个特定的进程中并从此位置运行你的 cmdlet。
powershell-import 命令会将一个 PowerShell 脚本导入进 Beacon 中。如果用 powershell-import
导入脚本，接下来使用 powershell、powerpick 和 psinject 这三个命令都可以调用这个脚本中的
函数（cmdlet）。但是这个脚本导入命令一次仅能保留一个 PowerShell 脚本，再导入一个新脚本的时
候，上一个脚本就被覆盖了。可以通过导入一个空文件来清空 Beacon 中导入的脚本。
execute-assembly 命令将一个本地的 .NET 可执行文件作为 Beacon 的后渗透任务来运行。你可以将
参数传递给此程序集，就像它是从一个 Windows 命令行接口运行一样。此命令也会继承你的当前令
牌。
如果你希望 Beacon 从一个特定的目录执行命令，在 Beacon 控制台中使用 cd 命令来切换 Beacon 进
程的工作目录。pwd 命令将告诉你你当前在哪个目录中工作。
setenv 命令会设置一个环境变量。
7.5 会话传递
Cobalt Strike 的 Beacon 最初是一个稳定的生命线，让你可以保持对受害主机的访问权限。从一开始，
Beacon 的主要目的就是向其他的 Cobalt Strike 监听器传递权限。
使用 spawn 命令来为一个监听器派生一个会话。此 spawn 命令接受一个架构（如：x86，x64）和一
个监听器作为其参数。
默认情况下，spawn 命令会在 rundll32.exe 中派生一个会话。管理员通过查看告警可能会发现
rundll32.exe 定期与 Internet 建立连接这种异常现象。为了更好的隐蔽性，你可以找到更合适的程序
（如 Internet Explorer） 并使用 spawnto 命令来说明在派生新会话时候会使用 Beacon 中的哪个程
序。
spawnto 命令会要求你指明架构（x86 还是 x64）和用于派生会话的程序的完整路径。单独输入
spawnto 命令然后按 enter 会指示 Beacon 恢复至其默认行为。
输入 inject + 进程 id + 监听器名来把一个会话注入一个特定的进程中。使用 ps 命令来获取一个当
前系统上的进程列表。使用 inject [pid] x64 来将一个64位 Beacon 注入一个 64位进程中。
spawn 和 inject 命令都将一个 payload stage 注入进内存中。如果 payload stage 是 HTTP、
HTTPS 或 DNS Beacon 并且它无法连接到你，那么你将看不到一个会话。如果 payload stage 是一个
绑定的 TCP 或 SMB 的 Beacon，这些命令会自动地尝试连接到并控制这些 payload。
使用 dllinject [pid] 来将一个反射性 DLL 注入到一个进程中。
使用 shinject [pid] [架构] [/路径/.../file.bin] 命令来从一个本地文件中注入 shellcode 到一
个目标上的进程中。使用 shspawn [架构] [/路径/.../file.bin] 命令会先派生一个新进程（这个新
进程是 spawn to 命令指定的可执行文件），然后把指定的 shellcode 文件（file.bin）注入到这个
进程中。
使用 dllload [pid] [c:\路径\...\file.dll] 来在另一个进程中加载磁盘上的 DLL文件。
7.6 备用父进程
使用 ppid [pid] 命令来为你的 Beacon 会话运行的程序分配一个备用父进程。这是一种使你的活动
与目标上的正常行为融合的方法。当前 Beacon 会话必须有调用备用父进程的权限并且最好是备用父进
程和你的 Beacon 存在相同的桌面会话中。输入单独一个不带任何参数的 ppid 命令，会让 Beacon 使
用其本身的进程作为父进程、不使用伪造的父进程。
runu 命令将使用另一个进程作为父进程来执行命令，这个命令将以其备用父进程的权限和桌面会话来
执行命令。当前的 Beacon 会话必须有到备用父进程的完整权限。spawnu 命令会派生一个临时的进
程，作为一个特定进程的子进程，并将一个 Beacon payload stage 注入进此进程。spawnto 的值控制
用哪一个程序来作为临时进程。
7.7 伪造进程参数
不是所有的命令都能做参数伪造，每个会话都有一个内部列表，里面存着可以用来做参数伪造的命令。
当 Beacon 运行一个匹配列表的命令时，Beacon 会：
1. 以挂起状态启动匹配的进程（使用伪参数）
2. 使用实参更新进程内存
3. 恢复进程
这样做的结果是，记录进程启动的主机检测程序将看到假参数。这有助于掩盖你的真实活动。
使用 argue [命令] [假参数] 来将命令加入到此内部列表中。[命令]部分可能会包含环境变量，使用
argue [command] 命令来从此内部列表中移除一个命令，单独的 argue 命令会在列出这个内部列表
中的命令。
进程匹配逻辑是精确的。如果 Beacon 尝试启动 net.exe 程序，它不会从它的内部列表中匹配 net、
NET.EXE，或 c:\windows\system32\net.exe 。它将仅仅匹配 net.exe。
x86 Beacon 只能伪造 x86 子进程中的参数。同样的，x64 Beacon 仅仅能伪造 x64 子进程中的参数。
实际参数被写入保存着伪参数的内存空间。如果实际参数比伪参数长，命令启动就会失败。
7.8 子进程中阻止（非微软签名的）DLL 加载
使用 blockdlls start 来请求 Beacon 使用一个二进制签名策略启动子进程，该策略会从进程空间中
阻止所有非微软的 DLL。使用 blockdlls stop 来禁用此行为。这个特性要求 Windows 10。
7.9 上传和下载文件
download 命令会下载请求的文件。你不需要在一个带有空格的文件名前后打引号。Beacon 被设计为
低速提取数据。在每次连接到团队服务器时，Beacon 会下载它的任务要求获取的每一个文件的固定大
小的块。这个块的大小取决于 Beacon 当前的数据通道。HTTP 和 HTTPS 通道会拉取 512kb 的数据
块。
输入 downloads 命令来查看当前 Beacon 正在进行的文件下载列表。使用 cancel 命令加一个文件名
来取消正在进行的一个下载任务。你可以在你的 cancel 命令中使用通配符来一次取消多个文件下载任
务。
在 Cobalt Strike 中通过 View → Downloads 来查看你的团队迄今为止已下载的文件 。此选项卡中仅
显示完成的下载内容。下载的文件被存储在团队服务器中。要把文件传回到你的系统上，先高亮选中这
些文件，然后点击 Sync Files（同步文件）。Cobalt Strike 会将选择的文件下载到你的系统上你指定
的文件夹下。
upload 命令将上传一个文件到目标主机上。
当你上传一个文件时，有时你会想改变此文件的时间戳来使其混入同一文件夹下的其他文件中。使用
timestomp 命令来完成此工作。timestomp 命令会将一个文件的修改属性访问属性和创建时间数据与
另一个文件相匹配。
7.10 文件浏览器
Beacon 的文件浏览器为你提供了一个探索受害系统上的文件的机会。通过 [Beacon] → Explore →
File Browser 来打开文件浏览器。
文件浏览器会请求 Beacon 的当前工作目录列表，当结果返回之后，文件浏览器就会显示具体的文件目
录。
文件浏览器的左侧是一棵文件树，该树将已知的驱动器和文件夹组织到一个视图中，文件浏览器的右侧
展示了当前文件夹的内容。
图35. 文件浏览器
每个文件浏览器都会缓存接收到的文件夹列表。彩色文件夹表示该文件夹的内容位于此文件浏览器的缓
存中。你可以导航到缓存的文件夹而不生成一个新的文件列表请求。按 Refresh 会要求Beacon更新当
前内容夹。
一个深灰色的文件夹表示该文件夹的内容不在此文件浏览器缓存中。点击树中的一个文件夹来使
Beacon 生成一个任务来列出此文件夹下的内容（并更新它的缓存）。双击右侧当前文件夹视图中的深
灰色文件夹可以执行相同操作。
要转到一个文件夹，点击右侧详细文件视图中的文件夹按钮，该按钮在文件路径旁边。如果父文件夹在
该文件浏览器的缓存中，你就会立刻看到结果。如果父文件夹不在文件浏览器的缓存中，浏览器就会生
成一个任务来列出父文件夹的内容。
在一个文件上单击右键来下载或删除它。
若要查看可用的驱动器，请按 List Drives（列出驱动器）。
7.11 文件系统命令
你可能更喜欢从 Beacon 控制台来浏览和操作文件系统，实际上你也可以这样做。使用 ls 命令来列出
当前目录下的文件。使用 mkdir 命令来创建一个目录。rm 命令会移除一个文件或文件夹。cp 命令会
复制一个文件到目标位置。mv 命令来移动文件。
7.12 Windows注册表
使用 reg_query [x86|x64] [HIVE\path\to\key] 来查询注册表中一个指定的键。这个命令会打印
键内的值和一个子键的列表。x86/x64 的选项是必须的，强制 Beacon 使用 WOW64（x86）或注册表
的本地视图。reg_query [x86|x64] [HIVE\path\to\key] [value] 会查询注册表内某个键的特定
的键值。
7.13 键盘记录和屏幕截图
Beacon 键盘记录和截屏的工具被设计为注入另一个进程并把结果报告给你的 Beacon。
要开始键盘记录器，使用 keylogger pid 来注入一个 x86 程序。使用 keylogger pid x64 来注入
一个 x64 程序。Explorer.exe 是一个好的候选程序。使用单独的 keylogger 命令来将键盘记录器注
入一个临时程序。键盘记录器会监视从被注入的程序中的键盘记录并将结果报告给 Beacon，直到程序
终止或者你杀死了这个键盘记录后渗透任务。
关闭键盘记录器：
具体注入哪一个程序其实都没关系，因为都会记录你所有的键盘记录。之所以推荐 Explorer.exe 主
要是为了持久和稳定，比如你注入了 chrome.exe 那么目标把 chrome 关了就没有了，主要是要看被
注入的这个程序是不是持久稳定，所以 explorer 是个好的选择。
请注意，多个键盘记录器可能相互冲突。对每个桌面会话只应使用一个键盘记录器。
要获取屏幕截图，使用 screenshot pid 来将截屏工具注入到一个 x86 的进程中。使用 screenshot
pid x64 注入到一个 x64 进程中。同样的，Explorer.exe 是一个好的候选程序。screenshot 命令的
变体将保存一个截图并退出。单独使用 screenshot 命令会将截屏工具注入到一个临时进程中。使用
screenshot pid 架构 时间 来请求截屏工具运行指定的秒数并在每一次 Beacon 连接到团队服务器的
时候报告一张屏幕截图。这是查看用户桌面的一种简便方法。
当 Beacon 接收到新的屏幕截图或者键盘记录时，它将向 Beacon 控制台发送一条消息。不过屏幕截图
和键盘记录的具体内容无法通过 Beacon 控制台查看。要查看键盘记录的具体信息，通过 View →
Keystrokes 来查看从你的所有 Beacon 会话中记录的键盘记录。要查看截屏的具体信息，通过 View
→ Screenshots 来浏览从你的所有 Beacon 会话中获取的截屏。这两个对话框都会随着新信息的进入
而更新，这些对话框使得一个操作员可以轻松的监视从所有 Beacon 会话中获取的键盘记录和截屏。
7.14 后渗透任务
一些 Beacon 的功能在另一个进程中作为任务运行（例如，键盘记录器和屏幕截图工具）。这些任务在
后台中运行，并在可用时报告其输出。使用 jobs 命令来查看在你的 Beacon 中运行的任务。使用
jobkill [job number] 来杀死一个任务。
在这里 kill 0 或者 jobkill 1 效果都是等同的。
7.15 进程浏览器
进程浏览器做的事情显而易见；它对一个 Beacon 下达对你展示进程列表及其具体信息的任务。左侧栏
展示进程树。你 Beacon 的当前进程被黄色高亮出来了。
译者注：以我的进程浏览器截图为例，当前 Beacon 运行在 powershell.exe 中，因为我当时的
payload 是 Powershell Command，这样执行上线的。
进程浏览器的右边部分显示进程详细信息。进程浏览器也是从另一个进程伪造令牌、部署截屏工具或者
部署键盘记录器比较方便的地方。选中一个或多个程序（按住 ctrl 键再点击程序可以多选）并按选项
卡底部的相应按钮。
图36. 进程浏览器
如果你选中了多个 Beacon 并让它们显示进程，则 Cobalt Strike 将显示进程浏览器，进程浏览器会声
明进程来自哪个主机。这个进程浏览器的变体是一次往多个系统部署 Beacon 的后渗透工具（如键盘记
录器、截屏）的便捷方法。简单的按进程名排序，选中你的目标主机系统上你感兴趣的进程，然后按
Log Keystrokes 或者 Screenshot 键来将这些工具部署到所有这些选中的主机系统。
7.16 桌面控制