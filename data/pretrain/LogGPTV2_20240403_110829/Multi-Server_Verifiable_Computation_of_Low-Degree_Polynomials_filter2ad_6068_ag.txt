### Private Information Retrieval (PIR) and Byzantine Robustness

In a PIR system, the client reconstructs the desired data \( F_i \) from the responses of all servers, while ensuring that any \( t \) servers cannot infer the index \( i \). The communication complexity of PIR is defined as the total number of bits communicated to retrieve one bit from the database. Low-degree polynomial interpolation-based \( t \)-private \( k \)-server PIR schemes [37, 94] achieve a nontrivial communication complexity of \( O(n^{1/\lfloor(2k-1)/t\rfloor}) \).

Despite efficient communication, PIR has not been widely deployed due to its high computational complexity [14]. One approach to mitigate this is to offload the PIR computations to the cloud [66], but this introduces the risk of untrusted and potentially incorrect responses from the cloud. Handling dishonest PIR servers is an interesting and challenging problem [13].

### Byzantine Robust PIR Schemes

The \( t \)-private \( t \)-Byzantine robust \( k \)-server PIR schemes ((\( t, t, k \)-BRPIR)) [15, 73] allow the client to correctly reconstruct the data even if up to \( t \) servers provide incorrect answers. These schemes use error-correcting techniques to provide information-theoretic security and enable the identification of cheating servers. Specifically, the techniques in [15, 73] can achieve \( (t, t, k) \)-BRPIR with communication complexity \( O(n^{1/(\lfloor(2k-1)/t\rfloor - 4)}) \), which is currently the best for general \( t \). There are also schemes [44, 55] that are more suitable for retrieving \( O(n^{1/2}) \) bits per query and have communication complexity \( O(n^{1/2}) \).

### Relaxing Security Requirements

In many scenarios, such as private media browsing [62], where a database of movies is stored on several non-communicating servers and the client uses PIR to hide their viewing habits, it may suffice for the client to detect the existence of cheating and then refuse to pay. This relaxed security requirement could lead to meaningful efficiency improvements.

### Polynomial-Based PIR Schemes

In the literature, \( t \)-private \( k \)-server PIR schemes [94] with the best communication complexity for general \( t \) are based on low-degree multivariate polynomial evaluations. Given a prime \( q \), the database \( F \) can be represented as a vector over \( \mathbb{F}_q \). Let \( E: [n] \to \{0, 1\}^m \) map indices to 0-1 vectors of weight \( d \). The polynomial \( F(x_1, \ldots, x_m) = \sum_{i=1}^n F_i \prod_{j: E(j)_s = 1} x_s \) in \( P(q, m, d) \) satisfies \( F(E(i)) = F_i \) for all \( i \in [n] \). The work of retrieving \( F_i \) is reduced to computing \( F(x) \) at \( x = E(i) \).

The MSVC schemes in Sections III and IV directly translate to \( t \)-private \( k \)-server PIR schemes that can detect the cheating of \( t \) servers. In particular, scheme \( \Pi_3 \) achieves communication complexity \( O(n^{1/\lfloor(k-1)/t\rfloor}) \). Using the partial derivative-based technique of [94], this can be further reduced to \( O(n^{1/\lfloor(2k-1)/t\rfloor}) \), which is asymptotically better than the schemes in [15, 73]. If we consider computational verifiability, schemes \( \Pi_4 \) and \( \Pi_5 \) yield PIR schemes that allow public detection of cheating.

### Theorems and Comparisons

**Theorem 6.** Let \( \mu(k, t) = \max\{\lfloor (k-1)/t \rfloor, \lfloor (k-1)/(t+1) \rfloor - 1\} \). There exists a \( t \)-private \( k \)-server PIR scheme that allows public detection of cheating by \( t \) servers with communication complexity \( O(n^{1/\mu(k,t)}) \). (See Appendix H)

**Theorem 7.** Let \( \nu(k, t) = \max\{\lfloor (2k-1)/t \rfloor, \lfloor (2k-1)/(t+1) \rfloor - 1\} \). There exists a \( t \)-private \( k \)-server PIR that allows public detection of cheating by \( t \) servers with communication complexity \( O(n^{1/\nu(k,t)}) \).

**Comparison with BRPIR.** As \( \nu(k, t) > \lfloor (2k-1)/t \rfloor - 4 \), the PIR in Theorem 7 is more efficient than the \( (t, t, k) \)-BRPIR of [15, 73] in terms of communication. However, the security is relaxed to only detecting cheating.

**Comparison with PIR for Honest Servers.** Compared to PIR for honest servers, PIR with cheating detection incurs additional costs. We implemented the \( t \)-private \( k \)-server PIR (wyPIR) of [94] and the PIR from Theorem 6 (based on \( \Pi_4 \) and \( \Pi_5 \)), using the security parameters, cyclic groups, libraries, and platforms from Section V-D. For \( t = 1 \) and various values of \( (d, m) \), we experimented with a database of \( n = 10^6 \) blocks of 257 bits. Figure 6 shows the maximum and total running time of servers, the total running time of the client, and the communication complexity in each scheme. The results indicate:

- The maximum running time of servers in all schemes is roughly equal.
- The total running times of servers in PIR4 and PIR5 are within 2 and 1.5 times that of wyPIR, respectively.
- The client’s running time in PIR4 and PIR5 is within 15 and 6 times that of wyPIR, respectively.
- The communication complexities of PIR4 and PIR5 are within 2 and 1.5 times that of wyPIR, respectively.

**On the Number of Servers.** To achieve the same communication complexity \( O(n^{1/d}) \) for \( t \)-private PIR, PIR4 and PIR5 use \( d(t + 1) + 1 \) and \( (d + 1)t + 1 \) servers, respectively. This is more than the \( dt + 1 \) servers used by wyPIR. Additionally, PIR4 uses fewer servers than PIR5 if and only if \( d < t \).

### Conclusions

In this paper, we define a new MSVC model and construct five MSVC schemes for outsourcing low-degree polynomials over a finite field, of which three are (information-theoretically) privately verifiable and two are publicly verifiable. All schemes are publicly delegatable, information-theoretically private, and outsourceable, with highly efficient server computations. Our schemes yield multi-server PIR schemes that can detect the existence of cheating.

### Acknowledgments

The authors thank the anonymous reviewers for their insightful comments. This work was supported by the Natural Science Foundation of Shanghai under grant 21ZR1443000 and the Singapore Ministry of Education under grant RG12/19.

### References

[1] S. Agrawal and D. Boneh, “Homomorphic MACs: MAC-based integrity for network coding,” in ACNS, 2009.
[2] P. Ananth, N. Chandran, V. Goyal, B. Kanukurthi, and R. Ostrovsky, “Achieving privacy in verifiable computation with multiple servers—without FHE and without pre-processing,” in PKC, 2014.
...
[65] W. Heinrichs, E. Quirin, U. Fauth, I. Tzanova, and M. Halmágyi, “Investigation of inspiratory pressure-volume curves on mechanically ventilated patients using least square polynomial fit,” in the IFAC Symposium on Modelling and Control in Biomedical Systems, 1988.