of 1,426,152 distinct sources of continued ﬂows, or 0.161% of 6,837,387 distinct
sources observed in all TCP traﬃc. We estimate the true proportion is somewhere
between these measurements. ECN-capable sources were responsible for 1.77TB
(3.01%) of 58.84TB of measured TCP traﬃc.
Of the top 50 ECN-capable sources, there are 19 public-facing web servers, 13
of which appear in the Alexa list used in section 3.1; 12 DHCP clients; 8 servers
apparently used for development, testing, or other non-public services; 6 network
infrastructure machines, 2 of which are part of an active network performance
measurement system; and 5 cloud servers.
Notably, the count of observed ECN-capable sources is on the same order of
magnitude as clear errors in ECN usage: 24,580 sources set ECT(0), ECT(1), or
CE on a TCP SYN packet. Most of these (16,911 or 68.9%) can be traced to a
single ISP which sets the CE codepoint on 99.1% of its outgoing traﬃc. That
there are more sources of persistent misuse of the ECN ﬁeld from a misconﬁgu-
ration at a single operator than sources of ECN-capable traﬃc is a discouraging
sign for ECN adoption. We did not observe a single continued ﬂow whose ﬁrst
packet had CE set, other than from sources which set CE on all packets: the
extent of use of ECN on routers is too small to measure using this method.
To estimate the historical trend in ECN capability, we count all ECN-capable
sources between 13:00 and 14:00 UTC on the last Wednesday of each month on
six-month intervals leading up to October 27, 2010, and monthly intervals from
January 25 to August 29, 20125. We see a general increase in the proportion
of ECN-capable sources, from 0.02% in April 2008 to 0.18% in August 2012. In
Figure 1 we compare this trend to our datapoints as measured in section 4.1 as
well as to prior measurements summarized in Table 2.
5 We do not have TCP ﬂags data prior to July 2012; therefore, historical trends detect
ECN-capable sources on all ﬂows. This leads to overcounting, as some sources set
the ECT bits on the SYN packet as well. We treat these numbers as comparable, as
they are all subject to the same overcounting.
On the State of ECN and TCP Options on the Internet
141
observed
Bauer
Medina Medina Langley
l
s
e
c
r
u
o
s
e
b
a
p
a
c
−
N
C
E
f
o
n
o
i
t
r
o
p
o
r
p
0.0015
0.0010
0.0005
0.0000
l
s
t
s
o
h
e
b
a
p
a
c
−
N
C
E
f
o
n
o
i
t
r
o
p
o
r
p
0.30
0.25
0.20
0.15
0.10
0.05
0.00
2000 2002 2004 2006 2008 2010 2012 2014
Date
2009
2010
2011
Date
2012
(a) Actively measured
(b) Passively measured
Fig. 1. Trends in ECN capability
5
Identifying Conditions of Congestion: Burst Loss Study
As ECN usage remains negligible, packet loss remains the only practical signal
for congestion control. We therefore turn our attention to loss patterns in typ-
ical Internet usage scenarios in order to identify conditions of congestion. This
information can be used to improve congestion control or network measurements.
In related work, Allman et al [11] showed that 0.6 % of connections experience
a loss rate of more than 10 % with a loss of at least 1 packet in more than 50 % of
the cases and a loss period, which is a number of losses in a row, of 1 packet in over
60 %. Mellia et al [12] measure an average total amount of anomalous segments,
including loss and reordering, of 5 % of outgoing traﬃc and 8 % for incoming
traﬃc on an enterprise network. However, these metrics are given independent
of usage pattern and algorithm. Additionally, usage of known TCP congestion
control algorithms has been investigated by [13,7,14].
Typically, the loss patterns depend not only on the usage scenario, as con-
gestion control periodically induces overload to probe for available bandwidth.
Therefore, the observed loss patterns themselves are also algorithm-dependent.
Here we deﬁne a burst loss as an event consisting of all losses occurring on a
TCP connection within one RTT of the ﬁrst loss; counting these events provides
a metric which captures packet loss in a congestion-control-aware way, as losses
occurring within a single RTT will be treated as a single event by TCP.
Moreover, application behavior does inﬂuence the loss pattern as well. Thus we
investigated three common classes of Internet activity – web browsing, download,
and YouTube – to study their loss patterns individually. In initial trials we
emulated these three types of network traﬃc on a residential access network
with a maximum measured datarate of 5.7 MBit/s: web browsing of 33 common
websites with a 12 second delay after each site, viewing of two YouTube videos
142
M. K¨uhlewind, S. Neuner, and B. Trammell
Fig. 2. Decision Diagram for TCP Loss/Retransmission Estimation
(4.62 MB and 11.59 MB), and FTP download of a 80.56 MB ﬁle from a host using
cubic congestion control. 24 trials were conducted over a single day. The resulting
traﬃc was captured, individual losses or retransmissions were estimated using an
algorithm similar to those in the literature [11,15,12]; the decision tree is shown
in Figure 2. Losses were then grouped into bursts.
Web browsing consists of many short ﬂows; over all trials, we saw only 5.8%
of ﬂows experiencing any loss at all. 82.7% of bursts consists of only a single
loss while also bursts of up to 71 losses occurred. The FTP download, on the
other hand, involves one single, long ﬂow, and a very regular loss pattern due
to congestion control can be observed. As cubic congestion control was used, we
observed 70.7 % of single losses as well as frequent bursts of up to 12 losses. In
our 24h measurement series we found three probes (at 3am, 10am and 5pm) with
a very large number of small burst losses (4058, 3905, and 4157, respectively).
Those cases presumably show an anomaly in the network or at the server side.
Youtube presents an entirely diﬀerent pattern, including regular, larger bursts
due to its block sending behavior [16] even though YouTube uses TCP congestion
control. In 18 of 24 trials, the longer video experienced exactly ﬁve bursts, while
we always observed one burst for the smaller video. But, given the application
behavior, in both cases the mean burst size was around 33. These results are
summarized in Table 6.
Table 6. Active measurement from September 10, 2012 [mean number of packets
(PKTS), of retransmissions (RET), of burst losses (B), of packets per burst loss (P/B);
mean loss rate (RATE); time between burst losses (TBB)]
PKTS RET RATE B
P/B TBB
Web-browsing 80779 533.96 0.66 % 227.88 2.37
Download (all) 58643 703.04 1.2 % 535
2.10 2.88
Download (21 of 24) 58639 76.14 0.13 % 34.29 2.23 3.28
YouTube1 (11.59 MB) 8469.2 176.29 2.08 % 5.58 31.72 27.31
31.97 29.40
34.04
YouTube1 (18 of 24) 8469.4 159.83 1.89 % 5
YouTube2 (4,62 MB) 3386.2 34.04
1
-
-
1 %
On the State of ECN and TCP Options on the Internet
143
Downloads
Web
YouTube
1.0
0.8
0.6
f
d
c
0.4
0.2
0
20
40
Burst size (losses)
60
Fig. 3. Burst size (in losses) measured per scenario
These initial ﬁndings on loss patterns indicate burst losses to be a well-
observable metric. As shown in the distribution of burst loss sizes in Figure 3, the
burst loss sizes depend on the scenario. This distribution may therefore provide
information to identify the origin of losses, not available with simple metrics
such as average loss rate. E.g. a greedy ﬂow using the Reno congestion con-
trol algorithm over diﬀerent network paths (diﬀerent available bandwidth and
RTT) will lead to a diﬀerent average loss rate but the same pattern in burst
size and regularity. Further theoretical or simulation-based work is needed to
develop a loss model for diﬀerent traﬃc classes and then relate this model to the
loss patterns observed in today’s Internet to diﬀerentiate other sources of losses.
Similar inﬂuence of congestion control and application behavior can be expected
for ECN-based congestion marking, with the additional inﬂuence of the AQM
at the bottleneck queue.
6 Conclusions and Future Work
This study has shown that deployment of ECN-capable hosts in the Internet
continues: about 30% of the top 100,000 web servers can now negotiate ECN
usage. We suspect this is due to normal upgrade and replacement cycles aﬀecting
the operating systems deployed. Of further interest is that Linux servers are far
more likely to support ECN, as are IPv6 servers. Additionally we could measure
a general increase in IPv6 support over the IPv6 Launch Day.
While we found 91% of paths to ECN-capable servers are ECN-capable, a fail-
ure rate of 9%, including 1% of paths where CE-marked or ECE-marked packets
are lost in the network, indicates that earlier problems with ECN deployment
are not completely solved. Further, passive measurements give a lower bound for
actual ECN usage which was measured to be two orders of magnitude less com-
mon than ECN capability. Even worse: twice as many observed sources misused
the CE codepoint as properly used the ECT codepoints. Of course, the ECN
144
M. K¨uhlewind, S. Neuner, and B. Trammell
readiness on network routers is necessary to realize the full beneﬁts of ECN,
as well. This is much more diﬃcult to measure, and thus a problem for future
work. Given the diﬃculty of passive measurement of ECN dynamics, work on
the development and deployment of an ECN-aware ﬂow meter is ongoing.
The deployment of ECN would have many beneﬁts, not just for congestion
control but for measurement studies of network congestion and traﬃc engineer-
ing, as well. To obtain better information on the conditions of congestion when
ECN information is not available, we performed initial studies on the loss pattern
of Internet traﬃc of certain usage scenarios. A broader analysis to understand
the eﬀects of congestion control and application behavior observable in the loss
pattern resulting in a loss model of today’s Internet is underway.
References
1. Salim, J.H., Ahmed, U.: Performance Evaluation of Explicit Congestion Notiﬁca-
tion (ECN) in IP Networks. RFC 2884, IETF (July 2000)
2. Ramakrishnan, K., Floyd, S., Black, D.: The Addition of Explicit Congestion No-
tiﬁcation (ECN) to IP. RFC 3168, IETF (September 2001)
3. Kuzmanovic, A.: The power of explicit congestion notiﬁcation. SIGCOMM Com-
put. Commun. Rev. 35(4), 61–72 (2005)
4. Floyd, S.: Inappropriate TCP Resets Considered Harmful. RFC 3360 (Best Current
Practice) (August 2002)
5. Mathis, M., Mahdavi, J., Floyd, S., Romanow, A.: TCP Selective Acknowledgement
Options. RFC 2018, IETF (October 1996)
6. Jacobson, V., Braden, R., Borman, D.: TCP Extensions for High Performance.
RFC 1323, IETF (May 1992)
7. Medina, A., Allman, M., Floyd, S.: Measuring the evolution of transport protocols
in the Internet. SIGCOMM Comput. Commun. Rev. 35(2), 37–52 (2005)
8. Langley, A.: Probing the viability of TCP extensions (2008),
http://www.imperialviolet.org/binary/ecntest.pdf
9. Bauer, S., Beverly, R., Berger, A.: Measuring the state of ECN readiness in servers,
clients and routers. In: Proc. of Internet Measurement Conference (2011)
10. Honda, M., Nishida, Y., Raiciu, C., Greenhalgh, A., Handley, M., Tokuda, H.: Is
it still possible to extend TCP? In: Proc. of IMC 2011, pp. 181–194. ACM, New
York (2011)
11. Allman, M., Eddy, W.M., Ostermann, S.: Estimating loss rates with TCP. ACM
Performance Evaluation Review 31 (2003)
12. Mellia, M., Meo, M., Muscariello, L., Rossi, D.: Passive analysis of TCP anomalies.
Comput. Netw. 52(14), 2663–2676 (2008)
13. Padhye, J., FLoyd, S.: On Inferring TCP Behavior. In: Proceedings of ACM SIG-
COMM, pp. 287–298 (2001)
14. Yang, P., Luo, W., Xu, L., Deogun, J., Lu, Y.: TCP Congestion Avoidance Algo-
rithm Identiﬁcation. In: 31st International Conference on Distributed Computing
Systems (ICDCS), pp. 310–321 (June 2011)
15. Benko, P., Veres, A.: A passive method for estimating end-to-end TCP packet
loss. In: Global Telecommunications Conference, GLOBECOM 2002, vol. 3, pp.
2609–2613. IEEE (November 2002)
16. Ghobadi, M., Cheng, Y., Jain, A., Mathis, M.: Trickle: Rate limiting YouTube
video streaming. In: Proc. of the USENIX Annual Technical Conference (2012)