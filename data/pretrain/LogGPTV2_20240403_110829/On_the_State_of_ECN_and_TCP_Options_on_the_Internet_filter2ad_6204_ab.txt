### Analysis of ECN-Capable Sources and TCP Traffic

Out of 1,426,152 distinct sources of continuous flows, or 0.161% of the 6,837,387 distinct sources observed in all TCP traffic, we estimate that the true proportion of ECN-capable sources lies between these measurements. These ECN-capable sources were responsible for 1.77TB (3.01%) of the 58.84TB of measured TCP traffic.

Among the top 50 ECN-capable sources, there are 19 public-facing web servers, 13 of which appear in the Alexa list used in Section 3.1. Additionally, there are 12 DHCP clients, 8 servers used for development, testing, or other non-public services, 6 network infrastructure machines (2 of which are part of an active network performance measurement system), and 5 cloud servers.

Notably, the number of observed ECN-capable sources is on the same order of magnitude as clear errors in ECN usage. Specifically, 24,580 sources set ECT(0), ECT(1), or CE on a TCP SYN packet. Most of these (16,911 or 68.9%) can be traced to a single ISP, which sets the CE codepoint on 99.1% of its outgoing traffic. The fact that there are more sources of persistent misuse of the ECN field due to misconfiguration at a single operator than sources of ECN-capable traffic is a discouraging sign for ECN adoption. We did not observe any continued flow whose first packet had CE set, except from sources that set CE on all packets. This suggests that the extent of ECN use on routers is too small to measure using this method.

### Historical Trend in ECN Capability

To estimate the historical trend in ECN capability, we counted all ECN-capable sources between 13:00 and 14:00 UTC on the last Wednesday of each month, with six-month intervals leading up to October 27, 2010, and monthly intervals from January 25 to August 29, 2012. We observed a general increase in the proportion of ECN-capable sources, from 0.02% in April 2008 to 0.18% in August 2012. In Figure 1, we compare this trend to our data points as measured in Section 4.1, as well as to prior measurements summarized in Table 2.

**Note:** We do not have TCP flags data prior to July 2012; therefore, historical trends detect ECN-capable sources on all flows, leading to overcounting. Some sources set the ECT bits on the SYN packet as well. We treat these numbers as comparable, as they are all subject to the same overcounting.

### Trends in ECN Capability

Figure 1 shows the trends in ECN capability, comparing actively and passively measured data.

### Identifying Conditions of Congestion: Burst Loss Study

Given the negligible use of ECN, packet loss remains the primary signal for congestion control. We therefore turned our attention to loss patterns in typical Internet usage scenarios to identify conditions of congestion. This information can be used to improve congestion control or network measurements.

In related work, Allman et al. [11] showed that 0.6% of connections experience a loss rate of more than 10%, with a loss of at least one packet in more than 50% of cases and a loss period of one packet in over 60%. Mellia et al. [12] measured an average total amount of anomalous segments, including loss and reordering, of 5% of outgoing traffic and 8% for incoming traffic on an enterprise network. However, these metrics are given independent of usage pattern and algorithm. Additionally, the usage of known TCP congestion control algorithms has been investigated by [13, 7, 14].

Typically, loss patterns depend not only on the usage scenario but also on the congestion control algorithm, which periodically induces overload to probe for available bandwidth. Therefore, the observed loss patterns are also algorithm-dependent. Here, we define a burst loss as an event consisting of all losses occurring on a TCP connection within one RTT of the first loss. Counting these events provides a metric that captures packet loss in a congestion-control-aware manner, as losses within a single RTT will be treated as a single event by TCP.

Application behavior also influences loss patterns. We investigated three common classes of Internet activity—web browsing, download, and YouTube—to study their loss patterns individually. In initial trials, we emulated these three types of network traffic on a residential access network with a maximum measured datarate of 5.7 MBit/s: web browsing of 33 common websites with a 12-second delay after each site, viewing of two YouTube videos (4.62 MB and 11.59 MB), and FTP download of an 80.56 MB file from a host using cubic congestion control. Twenty-four trials were conducted over a single day. The resulting traffic was captured, and individual losses or retransmissions were estimated using an algorithm similar to those in the literature [11, 15, 12]; the decision tree is shown in Figure 2. Losses were then grouped into bursts.

Web browsing consists of many short flows; over all trials, only 5.8% of flows experienced any loss at all. 82.7% of bursts consisted of only a single loss, while some bursts included up to 71 losses. The FTP download, on the other hand, involves one single, long flow, and a very regular loss pattern due to congestion control can be observed. With cubic congestion control, we observed 70.7% of single losses and frequent bursts of up to 12 losses. In our 24-hour measurement series, we found three probes (at 3 AM, 10 AM, and 5 PM) with a very large number of small burst losses (4058, 3905, and 4157, respectively). These cases likely indicate an anomaly in the network or at the server side.

YouTube presents an entirely different pattern, including regular, larger bursts due to its block sending behavior [16], even though YouTube uses TCP congestion control. In 18 of 24 trials, the longer video experienced exactly five bursts, while we always observed one burst for the smaller video. Given the application behavior, in both cases, the mean burst size was around 33. These results are summarized in Table 6.

### Conclusions and Future Work

This study has shown that the deployment of ECN-capable hosts in the Internet continues, with about 30% of the top 100,000 web servers now able to negotiate ECN usage. We suspect this is due to normal upgrade and replacement cycles affecting the operating systems deployed. Linux servers and IPv6 servers are far more likely to support ECN. Additionally, we measured a general increase in IPv6 support over the IPv6 Launch Day.

While we found that 91% of paths to ECN-capable servers are ECN-capable, a failure rate of 9%, including 1% of paths where CE-marked or ECE-marked packets are lost in the network, indicates that earlier problems with ECN deployment are not completely solved. Further, passive measurements give a lower bound for actual ECN usage, which was measured to be two orders of magnitude less common than ECN capability. Even worse, twice as many observed sources misused the CE codepoint as properly used the ECT codepoints. Of course, ECN readiness on network routers is necessary to realize the full benefits of ECN, which is much more difficult to measure and thus a problem for future work. Given the difficulty of passive measurement of ECN dynamics, work on the development and deployment of an ECN-aware flow meter is ongoing.

The deployment of ECN would have many benefits, not just for congestion control but also for measurement studies of network congestion and traffic engineering. To obtain better information on the conditions of congestion when ECN information is not available, we performed initial studies on the loss pattern of Internet traffic for certain usage scenarios. A broader analysis to understand the effects of congestion control and application behavior observable in the loss pattern, resulting in a loss model of today’s Internet, is underway.

### References

1. Salim, J.H., Ahmed, U.: Performance Evaluation of Explicit Congestion Notification (ECN) in IP Networks. RFC 2884, IETF (July 2000)
2. Ramakrishnan, K., Floyd, S., Black, D.: The Addition of Explicit Congestion Notification (ECN) to IP. RFC 3168, IETF (September 2001)
3. Kuzmanovic, A.: The power of explicit congestion notification. SIGCOMM Comput. Commun. Rev. 35(4), 61–72 (2005)
4. Floyd, S.: Inappropriate TCP Resets Considered Harmful. RFC 3360 (Best Current Practice) (August 2002)
5. Mathis, M., Mahdavi, J., Floyd, S., Romanow, A.: TCP Selective Acknowledgement Options. RFC 2018, IETF (October 1996)
6. Jacobson, V., Braden, R., Borman, D.: TCP Extensions for High Performance. RFC 1323, IETF (May 1992)
7. Medina, A., Allman, M., Floyd, S.: Measuring the evolution of transport protocols in the Internet. SIGCOMM Comput. Commun. Rev. 35(2), 37–52 (2005)
8. Langley, A.: Probing the viability of TCP extensions (2008), <http://www.imperialviolet.org/binary/ecntest.pdf>
9. Bauer, S., Beverly, R., Berger, A.: Measuring the state of ECN readiness in servers, clients, and routers. In: Proc. of Internet Measurement Conference (2011)
10. Honda, M., Nishida, Y., Raiciu, C., Greenhalgh, A., Handley, M., Tokuda, H.: Is it still possible to extend TCP? In: Proc. of IMC 2011, pp. 181–194. ACM, New York (2011)
11. Allman, M., Eddy, W.M., Ostermann, S.: Estimating loss rates with TCP. ACM Performance Evaluation Review 31 (2003)
12. Mellia, M., Meo, M., Muscariello, L., Rossi, D.: Passive analysis of TCP anomalies. Comput. Netw. 52(14), 2663–2676 (2008)
13. Padhye, J., FLoyd, S.: On Inferring TCP Behavior. In: Proceedings of ACM SIGCOMM, pp. 287–298 (2001)
14. Yang, P., Luo, W., Xu, L., Deogun, J., Lu, Y.: TCP Congestion Avoidance Algorithm Identification. In: 31st International Conference on Distributed Computing Systems (ICDCS), pp. 310–321 (June 2011)
15. Benko, P., Veres, A.: A passive method for estimating end-to-end TCP packet loss. In: Global Telecommunications Conference, GLOBECOM 2002, vol. 3, pp. 2609–2613. IEEE (November 2002)
16. Ghobadi, M., Cheng, Y., Jain, A., Mathis, M.: Trickle: Rate limiting YouTube video streaming. In: Proc. of the USENIX Annual Technical Conference (2012)