NI-1 Literal, and extends the number of dirty FLF.Obviously,inthiscircumstance,theresultencoded
bytes to 2; while MASC/PLWAH+ is based on by COMPAX is twice as long as those encoded by
PLWAH and introduces new features from run-length SECOMPAX.
encoding. In terms of “piggyback” (the combination (b)IntheformofLFL,COMPAXcanonlydealwith
of two symbols) and “FLF/LFL” (the combination of that both of the two Literal-words are nearly identical
three symbols), the current bitmap indexing encoding to 0-Fill words. If one or both of the Literal words
Fig.5 Newideasinbitmapindexencoding.
108 TsinghuaScienceandTechnology,February2015,20(1):100-115
are identical to a 1-Fill word, COMPAX encodes them to the experiment, with about a 20% reduction in
as an L-word, an F-word, and an L-word (L+F+L, 3 the amount of Literal words, it can save 3% or
wordsintotal), notasLFL(1wordintotal).However, more of the storage, compared to PLWAH. And the
SECOMPAX can encode all of those circumstances as result shows that the PLWAH+ is more suitable for
LFL, which saves a great deal of room compared with streaming network traffic. Furthermore, the definition
COMPAX. of the NI Chunk is enlarged, which performs better
(2) Improved COMPAX (ICX) ICX is proposed in some cases, where the ratio of set bits is not at
to further compress the bitmap by considering the a low level. PLWAH+ further classifies NI into two
possibletwodirty-bytescases,whicharenotconsidered kinds: Nearly Identical 0 Fill word (NI-0 word) and
in the COMPAX. And we extend PLWAH nearly Nearly Identical 1 Fill word (NI-1 word). According
identically concept to consider one or two dirty bytes to a number of tests, a prediction can be made that
case, and represent these cases with Nearly Identical PLWAH+ is more suitable for complex databases than
bitsinthenewcodebook.Bythisnewcodebook,more PLWAH.
possibleLFcombinationscanbeencoded,andtheycan 3.3.8.2 Encodingalgorithmstatediagrams
be easily compressed into one word. ICX can achieve The state diagrams of SECOMPAX, ICX, MASC,
abettercompressionratiothanCOMPAX.Inthecases and PLWAH+ are shown in Figs. 6–9. Figure 6
where the number of 1’s is comparable to the number shows the state diagram of the SECOMPAX encoding
of 0’s, ICX performs especially better than both WAH algorithm. The states of the encoder represent the
andCOMPAX,sincetheyhaven’ttakenthosecasesinto differentwordtypesthathavebeenstored.
consideration. Figure 7 introduces the encoding state diagram for
(3) MAximized Stride with Carrier (MASC) ICX. As ICX handles new cases when the number
MASC is proposed to further improve the of “dirty bytes” is 2, there are more edges than in
compression performance without impairing query SECOMPAX.
performance. MASC uses as long a stride size as Figure 8 shows the state diagram of the MASC
possible—not limited to 31bits as in PLWAH and encoding algorithm. As MASC encodes the maximum
COMPAX—to encode the consecutive zero bits and length of consecutive 0’s or 1’s, the counter is not in
nonzero bits in a more compact way. MASC records multiplesof31,asinWAH.
originbitmapindexsequencesintoanewformat. The encoding state diagram for the PLWAH+ is
MASC is a new extended version of PLWAH. The showninFig.9.Thepair(x;y)labelstheedgetostand
concept “carrier” in MASC and “piggybacked” in for an action taken at a shift of states, which means
PLWAH are similar. However, the carrier can carry at
most 30 nonzero bits, while PLWAH can piggyback
onlyasinglenonzerobit.Inaddition,wegeneralizethe
concept of Literal word and eventually obsolete it. As
a consequence, several (no more than 30) nonzero bits
canbecarriedbytheformer0-Fillwordandoutputa1-
carried 0-Fill word, while PLWAH has to encode them
in a Literal word, or two Literal words in the worst
case, whenconsecutivenonzerobitsarelocatedintwo
adjacent chunks. Considering zero bits’ and nonzero
bits’ distribution in real data sets, they usually appear
in batches—especially after being sorted by the hash
value of each record. Thus MASC can perform better
thanPLWAH.
(4) Position List Word-Aligned Hybrid Plus A,Fill;B,NI-Fill;C,Literal
(PLWAH+) We propose the PLWAH+ bitmap
Fig.6 EncodingalgorithmofSECOMPAX.(x,y)meansthe
compression scheme based on PLWAH. First, we add nextcharacterisx,andtheoutputisyexceptify=null,output
thedefinitionofanLFwordthatcanpiggybackmoreNI nothing,andifyisunderlined,theoutputisacodewordasa
words, which is not considered in PLWAH. According whole.
ZhenChenetal.: ASurveyofBitmapIndex-CompressionAlgorithmsforBigData 109
whenx istheinputfromaWAHresult,thestatemoves
alongthecorrespondingedgeandy istheoutputtothe
final result. In particular, if y equals “null”, it outputs
nothing. If y has one symbol like “FP”, it outputs a
combinationofthetwocodewords,i.e.,FL.Ifyhastwo
symbols,suchas“F”and“L”,itoutputstwocodewords,
“F”and“L”.
3.3.8.3 Implementationandevaluation
WeevaluateSECOMPAX,ICX,MASC,andPLWAH+
with a real Internet traffic trace from CAIDA[53]. This
Internettraffictracewasanonymizedandcapturedfrom
a core router by CAIDA at the end of 2013. There
are 13581181 packets in this trace. First, we reorder
A,Fill;B,NI-Fill;C,Literal packets with the mechanism based on the principle
Fig.7 EncodingautomatoninICX. of locality-based hashing used in Ref. [54]. Then we
convert five-tuples hSIP, sport, DIP, dport, protoi to
bitmaps, and compress the bitmaps in each column
with a fixed block size of 4Kb, which is also used in
Ref.[54].
Intheseexperiments,sourceIP(4bytes),destination
IP (4bytes), source port (2bytes), and destination
port (2bytes) are compressed with bitmap index
compressionalgorithms.ForSrcIP,therearefourbytes,
andeachbyteexpandsto256columnarfiles.Thereare
1024columnarfiles,whichcontain13581181bits(the
Fig. 8 Encoding automaton in MASC. States 0: 0-Fill; 1: number of packets in the trace). This is similar for the
1-Fill; andC:1-carried-0-Fill(0-Fillwordcarried1’s).The DstIPandPortsfields.
meaning of transfer edge (x, y, z) is as follows: x, input bit Figure 10 shows the average size of a compressed
(0or1); y,outputbit; z,thecounter.Iflabel(x,y)doesnot
columnar file with PLWAH, COMPAX2, and
occur,thecounterwillincreaseby1,bydefault.
SECOMPAX, ICX, and MASC, where each original
columnarfilehas13581181bits(thenumberofpackets
in the trace). Compared with PLWAH, COMPAX2
and SECOMPAX reduce the size of the index for a
source IP address by 6.74%, and for a destination
Fig.9 EncodingautomatoninPLWAH+.“Start”isthestart
state of a compression procedure, symbol “F” stands for
codeword Fill word, symbol “P” stands for codeword NI Fig. 10 Bitmap index encoding with PLWAH/COMPAX2/
word,andsymbol“L”standsforcodewordLiteralword. SECOMPAX/ICX/MASC.
110 TsinghuaScienceandTechnology,February2015,20(1):100-115
IP by 6.05%. While compared with COMPAX2,
SECOMPAX reduces the size of the source IP by
4.01%, and destination IP by 3.97%. ICX and MASC
show further reduction in compressing the bitmap
files. A detailed comparison is illustrated for source IP
(4bytes),destinationIP(4bytes),sourceport(2bytes),
and destination port (2bytes) in Figs. 11–14. From
Figs. 11–14, it is clear that SECOMPAX/ICX/MASC
have a better compression ratio and smaller space
consumption than COMPAX2 and PLWAH, especially
inByte0inSrcIPandDstIP.ComparedwithPLWAH,
SECOMPAXcanreducethesizeoftheindexforSrcIP
Fig.13 Sizeaftercompressionusingfiveencodingschemes
Byte 0 by 7.62% and DstIP by 8.32%. Among these,
inSrcIP.
MASChasthebestperformance,astheimprovementit
showsreachesabout16%–18%.
3.3.8.4. GPUimplementation
Usually, the encoding and decoding operation in the
process of compressing runs in a CPU. To further
accelerate the compression, we propose a GPU-based
solution, to offload the indexing and parallelize the
encoding operations. As the CPU is also responsible
Fig.14 Sizeaftercompressionusingfiveencodingschemes
insrcPort.
for overall system operation, in consideration of
total performance issues, it is better to offload the
bitmap indexing operation to a GPU. Andrzejewski
and Wrembel[55,56] introduced GPU-based WAH
and PLWAH. However, those implementations could
Fig.11 Sizeaftercompressionusingfiveencodingschemes not avoid extending the original data into bitmap
inDstIP. form before processing, which increased memory
consumption and decreased performance. A new way
tocompressbitmapswithoutextendingtheoriginaldata
wasintroducedinRef.[40],whichwillbealsousedin
thispaper.EspeciallyinRef.[57],Fuscoetal.evaluated
the GPU-based WAH and PLWAH with a sequence of
random integers to mimic the five-tuples of Internet
trace,andprovedthepotentialofaGPUtoachievethe
speedofindexingamillionofpacketspersecond.
GPU-based SECOMPAX, ICX, and MASC
algorithms are implemented with Thrust, a C++
library provided with the NVIDIA SDK, designed
to enhance code productivity and, more importantly,
Fig.12 Sizeaftercompressionusingfiveencodingschemes performance and portability across NVIDIA GPUs. To
inDstPort.
evaluate the performance of our implementation, we
ZhenChenetal.: ASurveyofBitmapIndex-CompressionAlgorithmsforBigData 111
used a CPU and a GPU with almost the same price: 4 Outlooks
a 3.4-GHz Intel i7-2600K processor with 8MB of
Bitmap indexing is a powerful technique to accelerate
cache and an NVIDIA GTX-760 GPU, fitted in a
ad-hoc query in Big Data. With potentially higher
PCI-e Gen 2.0 slot. The input data we used is an
compression rates, faster bitwise-logical operations,
anonymous Internet trace data set from CAIDA of
and reduced search space, bitmap index compression
13581810 packets too. We extract their five tuples
is a booming research area since 1980s and thrives
(source IP, destination IP, source port, destination port,
again in Big Data era. Beyond scientific data
andprotocolnumber).Forsimulatingcircumstancesin
management[58–60], novel bitmap data representation
practice, we cut those packets by 3968 (128(cid:2)31), and
and compacting of index has a wide usage in
created bitmap indexes for 14 (bytes) (cid:2) 3968 one at a
many other area, e.g., biological network[61], gene
time.
context analysis[62], RFID-based item tracking[63],
We construct and compress a bitmap index using
relationalXMLtwigqueryprocessing[64],geographical
GPU-MASC, and compareits result with theencoding
data warehouses[65], Geographical Information System
resultofMASC.Thememoryconsumptionisthesame,
(GIS)[66], graph databases[67], Content-Based Image
and is shown in Fig. 15. However, GPU-MASC can
Retrieval (CBIR)[68], inverted indexes in search
build bitmap indexes for 128(cid:2)31 packets in 8.057ms,
engines[69,70],andmanyotherdataanalysisarea.
while CPU-MASC takes 157.3ms, because MASC
cannotencodeinparallelonaCPU.Thus,GPU-MASC 5 ConclusionsandFutureWorks
improvesencodingspeedby19.5times.
We introduce and analyze the traffic-archiving
Based on Fig. 16, the throughput of GPU-MASC
systems and the key technologies of bitmap index
is 492491 packets per second. However, GPU-MASC
compression. First, we provide an introduction to
constructs and encodes bitmap indexes for all 14 bytes
classical traffic-archiving systems in recent years; then
inthefivetuplesforInternettracepackets, whileother
we present a survey of bitmap index compression
algorithmsonGPUonlyconstructtwobytesofthefive
algorithms. We summarize bitmap index compression
tuples, one at a time. So the equivalent throughput for
algorithms in terms of Segmentation, Chunking,
GPU-MASCis3447437packetspersecond.
Merge Compress, and Near Identical. We also propose
some new bitmap encoding algorithms, such as
SECOMPAX, ICX, MASC, and PLWAH+, and show
their state diagrams for encoding procedures. We
also evaluate their CPU and GPU implementations
with a real Internet trace from CAIDA. Finally, we
summarize and discuss the future direction of bitmap
indexcompressionalgorithms.
With the rapid growth of Internet traffic, bitmap
indexingresearchwillencounternewchallenges,which
Fig. 15 Encoding-speed comparison between GPU-MASC must be overcome to design more efficient high-speed
andCPU-MASC.
indexing technologies. These improved bitmap index
compression schemes will have important research
value,whichwillprovidepowerfultechnicalsupportfor
high-performancenetwork-trafficarchivingsystems.
Acknowledgements
We are grateful to the teachers and students both in
NSLAB and QoSlab. The authors would like to thank
Prof.JunLiofNSLABfromRIITforhisguidance.
This work was supported by the National Key Basic
Research and Development (973) Program of China
Fig.16 EncodingtimeofGPU-WAHandGPU-MASC. (Nos. 2012CB315801 and 2013CB228206), the National
112 TsinghuaScienceandTechnology,February2015,20(1):100-115
Natural Science Foundation of China A3 Program (No. [15] L.A.Barroso, J.Clidaras, andU.Hlzle, Thedatacenter
61140320), and the National Natural Science Foundation as a computer: An introduction to the design of
of China (Nos. 61233016 and 61472200). This work warehouse-scale machines, Synthesis Lectures
was also supported by the National Training Program on Computer Architecture, 2013, doi:10.2200/
of Innovation and Entrepreneurship for Undergraduates S00516ED2V01Y201306CAC024.
(Nos. 201410003033 and 201410003031) and Hitachi [16] J. Dean, Challenges in building large-scale information
(China)ResearchandDevelopmentCorporation. retrieval systems, in Proceedings of the Second
International Conference on Web Search and Web
References DataMining,WSDM2009,Barcelona,Spain,2009.
[17] S. Chandrasekaran, O. Cooper, A. Deshpande, M. J.