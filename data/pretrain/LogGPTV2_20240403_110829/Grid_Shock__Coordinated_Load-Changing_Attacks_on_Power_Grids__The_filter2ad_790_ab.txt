and return the frequency to its nominal value. This type of control
reserve has to be carried out by the TSO whose control zone is
imbalanced. The respective zone is recognized by the Area Con-
trol Error (ACE) which is calculated for each zone according to
Equation 1.
inactive in the respective area. If the imbalance occurred in its
own zone, a TSO’s ACE differs from zero and secondary control is
initiated.
Tertiary control frees up resources from primary and sec-
ondary control after their sustained activation. In contrast to the
prior two control mechanisms, tertiary control also allows for
manual intervention by the TSO.
2.3 Feedback Loops and Resonance
Frequencies
Control theory distinguishes open-loop systems from closed-looped
systems. In an open-loop system, the controller aims to achieve
the output reaching a set point without monitoring the output; in
consequence, accurate system models are necessary while still not
being able to adapt in case of unexpected disturbances. Meanwhile,
closed-looped systems are measuring the system’s output y (e.g., via
a sensor), comparing it with the set point w and reacting upon the
control deviation e = w − y. The output counteracts the deviation
from the set point; this behavior is also known as negative feedback.
This way, a disturbance influencing the output is measured, and
counteracted.
Closed-loop controls frequently incorporate delays, as it takes
time to measure, calculate and physically react, e.g., when accelerat-
ing physical masses. This implies that feedback is not instantaneous
and the system might swing when excited at certain frequencies.
A signal’s phase shift is dependent on the delay, and a shift of 180
degrees changes negative feedback into positive. The feedback does
not counteract the deviation anymore, but rather reinforces it, lead-
ing to self excitation and an increasing amplitude. Such a situation
is potentially damaging and thus to be avoided; as a rule of thumb,
the control should be faster than the monitored physical system.
Linear controllers exhibit proportional (P), integral (I) or derivate
(D) behavior as well as respective combinations: Proportional con-
trol amplifies the control deviation e by a constant factor, integral
control integrates the control deviation e over time, and derivate
control differentiates. Proportional control shows permanent con-
trol offset, i.e., the output differs from its intended value by some
offset. If the latter is undesired, proportional control has to be com-
bined with integral behavior, forming a PI controller.
Power imbalance influences a grid’s frequency; there are multiple
controls reacting on frequency shifts, i.e, closed-loop controls [55,
56]. Load, in particular from induction engines, increases/decreases
with frequency and thereby automatically reduces power imbal-
ance. This effect is known as self regulation of loads, and is assumed
to be 1%/Hz in the continental synchronous grid. In addition, there
are the operational measures of primary, secondary and tertiary
control, rescheduling power production facilities. Primary control
is specified to show proportional behavior, i.e., it cannot return
frequency to its nominal value of 50 Hz, whereas, secondary is a
combined proportional, integral (PI) controller returning the fre-
quency to its nominal value. Both show delays, i.e., primary control
reacts typically within a few seconds and secondary control within
30 seconds, replacing primary control, vulnerable to self-excitation.
Since tertiary control can be manually scheduled, its behavior can-
not be specified in a similar manner.
3053 THREAT SCENARIO
For our attacks, we assume a botnet controlling a high amount of
computers and their peripherals. Each bot can trivially modulate
the power consumption of the CPU, the GPU (Graphics Processing
Unit), hard drives, and the screen backlight. Laser printers — an pe-
ripheral common — are also large power consumers due to the high
temperatures used in their fusion units. In some cases, the botnet
might find other locally accessible Internet-of-Things (IoT) devices
on the network, which often incorporate less security protection
or default passwords, for load modulation.
While each of the devices only contributes several hundred to
thousands Watt, their effect multiplies by the botnet producing
a large leverage on power consumption within the grid. It can
modulate this power consumption in a coordinated fashion and
in a sub-second range. This way, the adversary aims to negatively
affect the power grid.
In the first part of this section, we introduce different kinds of
load modulation attacks. In the second part, we specify the botnet
in detail.
3.1 Attack Types
We consider an attack successful if of the following effects occurs:
• Customers or power plants become disconnected from the
grid, e.g., by automatic load shedding due to under-frequency
or frequency protection protocols for power plants.
• Transmission lines (tie lines) become disconnected, e.g., by
overload-protections, or adjacent control zones become dis-
connected.
Attack 1: Static Load Attack. The attacker increases the power
consumption of all bots to the maximum; this action shifts power
generation and consumption out of the equilibrium by increasing
the consumption faster than the producers can react. Just a brief
violation of the frequency thresholds, triggers load shedding (see
Table 1), i.e., the automatic disconnection of parts of the grid. To
enlarge the amplitude of load changes, the adversary might pig-
gyback their attack on power spikes and oscillations that usually
happen in the grid [23, 26]. This attack targets the primary control.
Attack 2: Dynamic Load Attack. Closed-loop control systems with
negative feedback and non-zero latency tend to over- and under-
shoot when reacting to changes. This effect can be used to increase
the amplitude of Attack 1 by measuring the reaction times and
modulate the power consumption so that the highest production
peak is met with a low modulated demand and vice versa. Since
the attacker is reacting on the grid, s/he needs a return channel to
measure the state of the grid,i.e., the current frequency. In particu-
lar, the adversary increases the load to the maximum and waits for
the full primary control to be activated; then, decrease the load to
the minimum wait for the primary control to deactivate, and so on.
This attack targets the behavior of the primary control.
Eventually, the attacker might find a resonant frequency that
leads to a much larger frequency swing than appropriate for the load
change. The ENTSO-E synchronous area is known to have eigen-
frequencies that manifest in several post-incident reports [18],[54,
p.77],[26, p.3].
Figure 2: Simplified schematic of attack 3
Attack 3: Inter-Zone Attacks. This attack aims to trip tie lines that
are connecting areas by putting large loads on them. A naïve way
to increase the load on a tie line is to find a line that is operating
near the maximum and increase power consumption in the target
area of that transfer. Some TSO’s publish their line state on the web
[1]. Even though they are delayed in time, it gives an attacker a
good insight on when the line is usually loaded the most. However,
since primary control detects the increase in load, a part of the
additional load will be produced in the targeted area (control zone),
leaving only the rest to the tie line.
Reducing power consumption in one area while simultaneously
increasing it in the target area would further increase the burden on
the line, but decreasing load (of mostly idle electronic appliances) is
only possible in rare cases. However, the attacker can wait for the
automatic secondary control to equalize for changes between both
zones to meet scheduled transfers; then change the load modulation
between zones to achieve the same effect.
Figure 2 depicts the scheme step by step. First, load is added to
Zone Z1, effectively lowering the transmission on the line (in- and
outgoing transmissions cancel each other out). However, secondary
control will compensate for the overproduction in one zone and the
underproduction in another and adjust output power accordingly
to meet the scheduled transfer on the line. The attacker waits until
this happens and inverts the modulation between the zones, recre-
ating the imbalance with reversed sign, again triggering substantial
compensation currents over transmission lines. For simplicity, we
assume m1 ≈ m2 = m, so that an extra of m is added to the trans-
mission line. Since the total load of the grid does not change, the
primary control will not kick in.
3.2 Anatomy of a Grid-Attacking Botnet
A botnet is a set of hijacked computers (called bots or zombies) on
the Internet that is set up to to perform tasks on behalf of the bot-
net owner [46]. Among other, botnets gained infamous popularity
by traffic-based denial-of-service attacks, mass-hacking, sending
spam, spying on the computer owners, online fraud, mining crypto-
currencies, stealing secrets from presidential candidates, and in-
fecting other computers. Some botnets operate for years until they
306are detected. The following paragraphs provide details on how an
adversary is able to built an adequate botnet for power-load attacks.
Acquisition. Prices of botnets vary depending on the country
the zombies are placed in. A 2013 report [16], named USD 1,000
for 10,000 U.S.-based bots, and between USD 400 and USD 600 for
European-based bots. Large botnets contain up to tens of million
devices [43].
Synchronization. For power grid attacks, a timely communica-
tion structure is in order to coordinate precise load manipulations.
Modern protocols such as NTP [33, 66] compensate for round-trip
time, delivering sub-millisecond performance if allowed to run for
extended periods of time [34].
Geographical Estimation. For our attacks, the botnet has to
coarsely estimate the position of the zombie machines. For attacks
1 and 2 the granularity can be as low as the continent as central
Europe is an interconnected supergrid. For attacks on the US
grid, the granularity should be at least on state level as there are
multiple synchronous grids. There are various ways to identify the
geographical position of a bot:
• GeoIP lookup: Maxmind [32] and other databases provide
at least a state/country level localization – even in the free
version.
• Wi-Fi localization: Coarse location by BSSIDs of Wi-Fi access
points is now a standard technique for mobile phones. Some
stand-alone PCs certainly almost all notebooks come with a
Wi-Fi receiver. Some databases are available free of charge
[61].
• Keyboard layout: Malware such as the Conficker worm [10,
43] uses the keyboard layout to determine the country of the
computer to avoid targeting the own country. This works
on language-fragmented continents like Europe, but not in
North America.
Frequency Measurement. Attack 2 and 3 (Section 3.1) benefit
from the frequency feedback channel. In case the attacker and
bot-master is sitting anywhere within the attacked grid, s/he can
invest into a low-cost power grid frequency measurement unit, such
as from open-source projects [11, 14], measuring the frequency
at an ordinary power outlet. Since the frequency is identical in
all parts of the network (until it breaks up), one measurement
station is sufficient. Attacks on remote grids might approximate
measurements by analyzing audio/microphone hum, or Webcam
light flickering on target machines — similar to its use in multimedia
forensics [12, 25]. Furthermore, some websites [15, 17, 21, 23, 38]
offer live data for certain grids.
4 EVALUATION: POWER-MODULATION
To understand the attack and estimate the effects we have to answer
two questions. First, to which amount can a bot zombie influence its
power consumption and at which pace. Secondly, use simulations
to predict the outcome of such a load attack on the power grid. The
former is described in this section, the latter in Section 5.
In a lab experiment, we measured a bot’s capability for software-
driven load modulation. In a first step, we analyzed the dynamics of
a PC’s load increase/decrease in order to determine their capabilities
Figure 3: Model of botnet zombie and method of measure-
ment
Figure 4: Measurement setup in detail
for fast load changes. Then, we categorized different types of devices
that might become part of our attack and investigated the increase
of load from an idle to a fully utilized state.
4.1 Electric Model of a Load-Altering PC
Since PCs and servers appear to have great potential for load control,
we took a closer look and asked how fast they can modulate their
power consumption.
The components of a PC (or Server) do not directly draw power
from the mains. Instead, a series of power conversions takes place
before reaching the relevant components, i.e., CPU, GPU and hard
drive. Our model is depicted in Figure 3: We must assume that each
conversion step through the power supply unit (PSU) and subse-
quent DC/DC converters incorporates power-stabilizing capacitors
which will dampen the artificially produced load spikes. To measure
the effective load amplitudes and times as dispensed to the grid, we
had to measure at the power socket (Figure 4).
As a conservative assumption of an office PC, we chose an Intel
Core2 Duo (Figure 5). For a high-end gaming PC we tested an Intel
i7-6700 with an NVIDIA Geforce GTX 1070 graphics card (Figure
7). Both were connected with an LG 24" TFT screen which was
measured separately (Figure 6). On Linux, we used command line
tools hdparm -t for inducing stress to hard disks, stress -c for
the CPU, and glmemperf for the GPU. On Windows, we used ZCPU
for CPU stress and 3D Mark to measure the GPU.
As expected according to our model, the capacitors soften the
steep current edges, especially in the low-end range. Thus, the PSU
in the old office PC ramped up the consumption within 2-3 AC
cycles, i.e., 40-60 ms. In contrast, the gaming PC can multiply its
power consumption and the PSU ramps up the usage within a single
AC cycle. Hard disk consumption turned out to be negligible: most
of the power is used for the disk rotation which is independent
from head movements.
Laser printers are without question the heaviest power con-
sumers of all computer peripherals due to the high temperatures
involved when fixating the toner to the paper. The fuser’s surge
current is a multiple of its already high power consumption (Figure
307Table 2: Modulated load by device
Device
CPU
GPU
HDD
Screen TFT
Laser Printer
Smart Air Cond.
Smart Thermostat
Smart Oven
Smart Refrigerator
Smart Kettle
Type
Core2 Duo
i3
i5
i7
i7-E
Low-end
Mid-end
High-end
Top-end
Pwr Control
Inc. Dec.
(cid:32)
(cid:35)
(cid:35)
(cid:32)
(cid:35)
(cid:32)
(cid:32)
(cid:35)
(cid:32)