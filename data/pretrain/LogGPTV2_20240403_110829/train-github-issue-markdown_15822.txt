I'm trying to import a fairly large CSV file (~300MB) with the following
structure:
    id,type,internal,data
    1,a,true,abc
    2,b,false,def
    1,a,true,ghi
    3,a,true,jkl
    4,c,true,mno
    ...
(note: based on the ID value there might be duplicates with different values
in the data column, which we are not using)
I'm using the following script:
    CREATE CONSTRAINT ON (t:Thread) ASSERT t.id IS UNIQUE;
    CREATE INDEX ON :Thread(type);
    USING PERIODIC COMMIT 1000
    LOAD CSV WITH HEADERS FROM 'file:///thread.csv' AS line
    MERGE (t:Thread{id:toint(line.id)})
    ON CREATE SET
      t.type = line.type,
      t.internal = case line.internal WHEN 'true' THEN true ELSE false END;
For some reason no matter what I try, the periodic commit doesn't seem to
work, and I usually get a java out of memory error. Also none of the inserts
get commited.
If I limit the csv size, for example with a `WITH line LIMIT 100000` then the
code works fine, and I get the first 100k lines imported. The same code also
works, and can import the whole file with neo4j 2.3 as well.
I'm using the default docker versions for both 2.3 and 3.0 for testing
**Neo4j Version:** neo4j docker, tag 3.0.0  
**API:** neo4j-shell, through docker exec
### Steps to reproduce
  1. Pull the image: `docker pull neo4j:3.0.0`
  2. Create a directory on the host that will be a mount for the data: `mkdir /home/neo4j-data`
  3. Start a new container that mounts to this directory: `docker run -d --name neo4j-test -p 7474:7474 -v /home/neo4j:/data neo4j:3.0.0`
  4. Generate a large CSV file, with the above mentioned schema
  5. Copy the file and the import script over: `docker cp thread.csv neo4j:/var/lib/neo4j/import; docker cp load.cyp neo4j:/var/lib/neo4j/import`
  6. Start the import process: `docker exec -ti neo4j /var/lib/neo4j/bin/neo4j-shell -file /var/lib/neo4j/import/load.cyp`
### Expected behavior
The data should be imported
### Actual behavior
    ERROR (-v for expanded information):
            Error occurred in server thread; nested exception is:
            java.lang.OutOfMemoryError: Java heap space