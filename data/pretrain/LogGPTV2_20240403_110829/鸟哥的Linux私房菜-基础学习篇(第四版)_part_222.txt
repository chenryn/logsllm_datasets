Markers: （--） probed, （**） from config file, （==） default setting,
（++） from command line, （!!） notice, （II） informational,
（WW） warning, （EE） error, （NI） not implemented, （??） unknown.
（==） Log file: "/var/log/Xorg.0.log", Time: Wed Sep 16 10:13:57 2015
List of video drivers: # 这里在说明目前这个系统上面有的显卡芯片组的驱动程序有哪些的意思
qxl
vmware
v4l
ati
radeon
intel
nouveau
dummy
modesetting
fbdev
vesa
（++） Using config file: "/root/xorg.conf.new" # 使用的配置文件
（==） Using config directory: "/etc/X11/xorg.conf.d" # 额外设置项目的位置
（==） Using system config directory "/usr/share/X11/xorg.conf.d"
（II） [KMS] Kernel modesetting enabled.
.....（中间省略）.....
Your xorg.conf file is /root/xorg.conf.new # 最终新的文件出现了！
To test the server, run 'X -config /root/xorg.conf.new' # 测试手段！
这样就在你的 root 主文件夹产生一个新的 xorg.conf.new 啰！好了，直接来看看这个文件的内容吧！这个文件默认的情况是取消很多设
置值的， 所以你的配置文件可能不会看到这么多的设置项目。不要紧的，后续的章节会交代如何设置这些项目的喔！
[root@study ~]# vim xorg.conf.new
Section "ServerLayout" # 目前 X 决定使用的设置项目
Identifier "X.org Configured"
Screen 0 "Screen0" 0 0 # 使用的屏幕为 Screen0 这一个 （后面会解释）
InputDevice "Mouse0" "CorePointer" # 使用的鼠标设置为 Mouse0
InputDevice "Keyboard0" "CoreKeyboard" # 使用的键盘设置为 Keyboard0
EndSection
# 系统可能有多组的设置值，包括多种不同的键盘、鼠标、显示芯片等等，而最终 X 使用的设置，
# 就是在这个 ServerLayout 项目中来处理的！因此，你还得要去下面找出 Screen0 是啥
Section "Files"
ModulePath "/usr/lib64/xorg/modules"
FontPath "catalogue:/etc/X11/fontpath.d"
FontPath "built-ins"
EndSection
# 我们的 X Server 很重要的一点就是必须要提供字体，这个 Files 的项目就是在设置字体，
# 当然啦，你的主机必须要有字体文件才行。一般字体文件在：/usr/share/X11/fonts/ 目录中。
# 但是 Xorg 会去读取的则是在 /etc/X11/fontpath.d 目录下的设置喔！
Section "Module"
Load "glx"
EndSection
# 上面这些模块是 X Server 启动时，希望能够额外获得的相关支持的模块。
# 关于更多模块可以搜寻一下 /usr/lib64/xorg/modules/extensions/ 这个目录
Section "InputDevice"
Identifier "Keyboard0"
Driver "kbd"
EndSection
# 就是键盘，在 ServerLayout 项目中有出现这个 Keyboard0 吧！主要是设置驱动程序！
Section "InputDevice"
Identifier "Mouse0"
Driver "mouse"
Option "Protocol" "auto"
Option "Device" "/dev/input/mice"
Option "ZAxisMapping" "4 5 6 7" # 支持磙轮功能！
EndSection
# 这个则主要在设置鼠标功能，重点在那个 Protocol 项目，
# 那个是可以指定鼠标接口的设置值，我这里使用的是自动侦测！不论是 USB/PS2。
Section "Monitor"
Identifier "Monitor0"
VendorName "Monitor Vendor"
ModelName "Monitor Model"
EndSection
# 屏幕监视器的设置仅有一个地方要注意，那就是垂直与水平的更新频率，常见设置如下：
# HorizSync 30.0 - 80.0
# VertRefresh 50.0 - 100.0
# 在上面的 HorizSync 与 VerRefresh 的设置上，要注意，不要设置太高，
# 这个玩意儿与实际的监视器功能有关，请查询你的监视器手册说明来设置吧！
# 传统 CRT 屏幕设置太高的话，据说会让 monitor 烧毁呢，要很注意啊。
Section "Device" # 显卡芯片 （GPU） 的驱动程序！很重要的设置！
Identifier "Card0"
Driver "qxl" # 实际使用的显卡驱动程序！
BusID "PCI:0:2:0"
EndSection
# 这地方重要了，这就是显卡的芯片模块载入的设置区域。由于鸟哥使用 Linux KVM
# 仿真器仿真这个测试机，因此这个地方显示的驱动程序为 qxl 模块。
# 更多的显示芯片模块可以参考 /usr/lib64/xorg/modules/drivers/
Section "Screen" # 与显示的画面有关，分辨率与色彩深度
Identifier "Screen0" # 就是 ServerLayout 里面用到的那个屏幕设置
Device "Card0" # 使用哪一个显卡的意思！
Monitor "Monitor0" # 使用哪一个屏幕的意思！
SubSection "Display" # 此阶段的附属设置项目
Viewport 0 0
Depth 1 # 就是色彩深度的意思！
EndSubSection
SubSection "Display"
Viewport 0 0
Depth 16
EndSubSection
SubSection "Display"
Viewport 0 0
Depth 24
EndSubSection
EndSection
# Monitor 与实际的显示器有关，而 Screen 则是与显示的画面分辨率、色彩深度有关。
# 我们可以设置多个分辨率，实际应用时可以让使用者自行选择想要的分辨率来呈现，设置如下：
# Modes "1024x768" "800x600" "640x480"  /usr/share/fonts/cjkuni-ukai/
lrwxrwxrwx. 1 root root 30 May 4 17:54 cjkuni-uming-fonts -> /usr/share/fonts/cjkuni-uming/
lrwxrwxrwx. 1 root root 36 May 4 17:52 default-ghostscript -> /usr/share/fonts/default/ghostscript
lrwxrwxrwx. 1 root root 30 May 4 17:52 fonts-default -> /usr/share/fonts/default/Type1