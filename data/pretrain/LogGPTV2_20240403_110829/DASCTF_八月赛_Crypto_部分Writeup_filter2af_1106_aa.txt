# DASCTF 八月赛 Crypto 部分Writeup
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## 前言
由于比赛的时间和上课的时间冲突了，只抽空做了一下crypto3。赛后有把没有做的题做了一下，不得不说安恒月赛的水平越来越高，比某guo赛强很多(吹一波师傅们)。
## strange_LSB
首先分析一下源码：
    def get_N():
        BITS = 128
        bits = 70
        power = 4
        while 1:
            r_p, r_q = randint(1  dd*0x10001 = 1 mod phi
    dd = invert(e//2,phi)
    # c == m^e
    # m^(e*dd) mod n ==> n^(2*0x10001*dd) mod n ==> m^2 mod n
    M = pow(c,dd,n)
    assert iroot(M,2)[1] == True
    flag = iroot(M,2)[0]
    print(bytes.fromhex(hex(flag).strip("0xL")))
## math_stream
个人认为本次比赛最难的一题，题面如下：
    from Crypto.Util.number import isPrime, getPrime, bytes_to_long
    from random import randint
    flag = b'DASCTF{********************************}'
    def generate():
        n = getPrime(1024)
        a, c = randint(1, n), randint(1, n)
        b = a + 1
        return a, b, c, n
    def get_stream(target):
        stream = []
        for i in range(target + 1):
            if i  300 and i < 307:
                print(stream[i])
        return stream
    target = 2**1024
    a, b, c, n = generate()
    print((a,b,c,n))
    stream = get_stream(target)
    plain = bytes_to_long(flag)
    cipher = plain ^ stream[target]
    print(cipher)
这道题有两个考点，第一个考点就是如何恢复参数`a,b,c,n`，第二个难点是`target`过大，如果使用题目种的方法计算会爆内存。
**恢复参数**
熟悉`LCG`的选手应该对此类参数恢复认识比较深刻，不过次题稍微有所变化。我们发现`s[i] = a*s[i-2]+b*s[i-1]+c mod
n`有四个未知参数，且每一项与其前两项相关。如果我们将`n`恢复出来，剩下的问题就迎刃而解了。那么如何恢复`n`呢？？考虑两个同余式，`t1 = mod