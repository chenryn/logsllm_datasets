**00:18:32**：
但是，倘若哪里出了问题，那应该如何调试呢？或者我实际上是想要检查我的功能失败的上下文环境。通常，这些功能在进程内运行，与你隔离 —— 你甚至无法登录计算机查看你的代码在何处运行。它们可能在封闭的容器环境之中运行，你不知道里面有什么。
**00:18:53**：
获得一点儿透明度对你而言变得很困难。这是工具最终将提供帮助的地方。但是，工具的缺乏某种程度上会让人们陷入一个相当大的陷阱。
**00:19:05 - Saron Yitbarek**：
这真的很好。那么让我们回到 OpenWhisk。请给我说说关于它的事情。
**00:19:11 - Rodric Rabbah**：
该项目在 Amazon Lambda 宣布推出产品的那一刻就开始了，这实际上是无服务器开始成为术语，并且开始在该领域获得关注的时刻。当我们看到 Lambda 时，我们开始思索：“这里有许多技术需要开发。不仅仅是在新的云计算的基础层上，而且在置于其上的编程模型之上，这实际上都使得它更易于被程序员访问。”你知道，由于出自 IBM 研究所，我们拥有相当强大的技术，不只是编程语言设计、编译器专业知识以及运行时的专业知识的技能。
**00:19:54**：
我们的一个小团队，基本上三个人……
**00:19:57 - Saron Yitbarek**：
哇。
**00:19:57 - Rodric Rabbah**
……聚集在一起，做了最初的开发和原型，最终成为 OpenWhisk，带有命令行工具，这是现如今无服务器实际上的编程接口。编程模型概念，然后是它必须支持的实际架构，本质上，是服务器模型的这个功能，提供了无服务器所支持的所有好处。
**00:20:22**：
请注意，真正的起源是 Amazon Lambda 的出现，并可以说这是一种新的计算模型。
**00:20:28 - Saron Yitbarek**：
那么花了多长时间？或者说是第一个版本什么时候出现的。
**00:20:30 - Rodric Rabbah**：
实际上很快。事实上，当 IBM 宣布……好吧，那时还是 IBM OpenWhisk。从我们第一次提交到现在才一年。
**00:20:39 - Saron Yitbarek**：
哇。我的天哪。
**00:20:41 - Rodric Rabbah**：
这着实令人激动。
**00:20:43 - Saron Yitbarek**：
这确实很令人印象深刻。事实上，当它第一次启动时，它不叫 OpenWhisk，而是 Whisk。对吗？
**00:20:49 - Rodric Rabbah**：
Whisk 是内部名称，没错。我取的这个名字。这个名字背后的意思是迅速而又灵活地行动。
**00:21:00 - Saron Yitbarek**：
很好。
**00:21:01 - Rodric Rabbah**：
你“搅拌”了一个功能，就可以了。你可以将其放入烤箱中烘焙。
**00:21:07 - Saron Yitbarek**：
太好了，因为当我看到它，我肯定想的是鸡蛋。我在想，让我们“ 搅拌   whisk ”一些鸡蛋。
**00:21:12 - Rodric Rabbah**：
对。我们对该名称进行了一些正面和负面的评价。当我们开源一项技术，并将其放到 GitHub 上时，我们会在上面加上 open 前缀，以强调该技术与开源一样开放，可以自由使用、自由下载、自由贡献。
**00:21:32 - Saron Yitbarek**：
是的。
**00:21:33 - Rodric Rabbah**：
我们将其开源的目的，实际上是一定程度上提升可以在当今无服务器平台上执行标准。对我们来说，重要的是要建立一个平台，不仅可以用于生产环境，还可以与全世界共享，而且还可用于学术研究或一般性研究。也许因为出自 IBM 的研究机构，我们有点儿在意这个。
**00:22:00**：
但是，这是有所回报的，我知道一些大学 —— 从 Princeton 到 Cornell —— 在他们的研究中使用 OpenWhisk。我去过 Brown、 Williams College、 MIT、 CMU 等几所大学，并且进行了一些讲座，目的是鼓励学生真正地去研究围绕无服务器以及服务器功能的问题、工具、编程模型，并且使他们对技术感兴趣。
**00:22:26**：
向他们显示，如果他们真的为开源项目做出了贡献，那么有一条路可以让 IBM 的云功能接受它并在生产环境中运行，通常在一周之内。
**00:22:34 - Saron Yitbarek**：
哇。这么快。
**00:22:36 - Rodric Rabbah**：
这让一些人感到惊讶。
**00:22:38 - Saron Yitbarek**：
这是一个非常高效的过程。
**00:22:41 - Rodric Rabbah**：
这确实证明了我们是如何在开源环境下开发许许多多技术的。这不是一个开放核心模式，有些组件有所保留。实际上在 IBM 云之中所运行的就是 Apache OpenWhisk 项目。
**00:22:56 - Saron Yitbarek**：
当你思索无服务器的未来，以及我们所选择的前进道路时，你觉得它们将是不可避免地奔向开源吗？
**00:23:08**：
我认为最近对于开源的价值存在一场激烈的争议，尤其是在云计算领域。
**00:23:13 - Saron Yitbarek**：
是的，没错。
**00:23:15 - Rodric Rabbah**：
如果你在思考为什么人们会转向云计算，或者为什么他们可能会厌恶投身于云计算领域，这就是供应商锁定的问题……丧失透明度。开源在一定程度上缓解这些问题，发挥了重要的作用。然后再看看类似 Kubernetes 的服务，它只是在容器和系统管理方面吞噬了云，就那么的成功！
**00:23:41 - Rodric Rabbah**：
如果你正在做的事情接触到了容器，鉴于它的主导地位，保持闭源与否还值得讨论吗？我倾向于认为开放性是有帮助的，从开发人员的角度来看，这很有吸引力。
**00:23:57 - Saron Yitbarek**：
当你考虑未来的无服务器生态及其工具、项目以及服务时，你看到了什么呢？对你来说，无服务器的未来是什么样的？
**00:24:08 - Rodric Rabbah**：
我认为，你会开始越来越少思考底层技术，而变得越来越多地考虑编程体验以及围绕它的工具：用于调试的、用于部署管理的、用于性能分析的、用于安全性。
**00:24:26**：
我认为，所有这些都非常重要。你如何运行你的功能的底层机制 —— 无论它们是在容器中还是在一些未来的技术下运行，也无论你是将它们运行在一个云上或是多个云上 —— 我认为，它们都不重要。有点儿像是 Kubernetes 在容器以及容器管理方面所做的事情。
**00:24:46**：
类似的还有一层要放在上面，就是服务分层的功能，可以实现那种无服务器概念。然后，它实际上的表现取决于你在其中安放的中间件。你如何赋能授权给开发者，让他们真正利用这款新的云端计算机，以及你要在它周围投入的辛劳，让他们的体验愉快。
**00:25:07 - Saron Yitbarek**：
是的。这种赋能授权看起来怎么样？
**00:25:13 - Rodric Rabbah**：
一言以蔽之，就是高效。这是一种能力，可以只专注于对于我，作为一名开发人员而言有价值的东西，或者如果我在公司工作的话，对于我公司的价值。这样能够更快地规避问题，因为你释放了你的脑细胞，而不用去考虑基础设施和如何伸缩，以及在硬件层面如何保障事物的安全性。
**00:25:38**：
现在，你可以真正地创新，将脑力重新投入到更快的创新中去，从而为你的终端用户带来更多的价值。我想把这一切都归结于更高的效率。
**00:25:55 - Saron Yitbarek**：
Rodric Rabbah 是 OpenWhisk 的一位创始人。还记得我在这一期节目开始的时候所说的吗？互联网所基于的那种老旧的客户端 - 服务器模型并不会消失。改变的是，我是说彻底改变的是我们对服务器的思考方式。
**00:26:19**：
在所谓的无服务器世界之中，希望我们专注于代码本身，而不用担心基础架构。但是，我们所选择的抽象等级，以及如何保持对于未被抽象的工作的控制，才是使得无服务器世界变得真正有趣的地方。
**00:26:40**：
无服务器最终应当是为开发人员赋能授权的。免于打补丁、进行扩展和管理基础设施。但是，与此同时，即使我们抽象化了一些任务，依然必须对整体如何工作保持关注。我们会问，我要放弃的是哪些控制权，而我要收回的又是哪些控制权？
**00:27:07**：
下一集是我们史诗般的第二季的大结局，《代码英雄》将要前往火星。我们将会了解 NASA 的火星探测器如何开始自己的开源革命。并且我们将与 NASA 喷气推进实验室的 CTO 进行交流，了解开源是如何塑造太空探索的未来的。
**00:27:39 - Saron Yitbarek**：
与此同时，如果你想要更加深入地研究无服务器开发的问题，或是在这一季里我们所探索过的任何主题，请访问 [redhat.com/commandlineheroes](vscode-webview-resource://1aa00f58-b48b-4835-90e5-2e2fd87998ef/file///Users/xingyuwang/develop/LCRH-wxy/translated/redhat.com/commandlineheroes)，查看免费资源。当你在那里时，你甚至可以为我们自己的代码英雄游戏作出贡献。
**00:28:00 - Saron Yitbarek**：
我是 Saron Yitbarek。感谢收听，编程不已。
> 
> **什么是 LCTT SIG 和 LCTT LCRH SIG**
> 
> 
> LCTT SIG 是 LCTT  特别兴趣小组   Special Interest Group ，LCTT SIG 是针对特定领域、特定内容的翻译小组，翻译组成员将遵循 LCTT 流程和规范，参与翻译，并获得相应的奖励。LCRH SIG 是 LCTT 联合红帽（Red Hat）发起的 SIG，当前专注任务是《代码英雄》系列播客的脚本汉化，已有数十位贡献者加入。敬请每周三、周五期待经过我们精心翻译、校对和发布的译文。
> 
> 
> 欢迎[加入 LCRH SIG](/article-12436-1.html) 一同参与贡献，并领取红帽（Red Hat）和我们联合颁发的专属贡献者证书。
> 
> 
> 
---
via: 
作者：[Red Hat](https://www.redhat.com/en/command-line-heroes) 选题：[bestony](https://github.com/bestony) 译者：[JonnieWayy](https://github.com/JonnieWayy) 校对：[acyanbird](https://github.com/acyanbird), [wxy](https://github.com/wxy)
本文由 [LCRH](https://github.com/LCTT/LCRH) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出