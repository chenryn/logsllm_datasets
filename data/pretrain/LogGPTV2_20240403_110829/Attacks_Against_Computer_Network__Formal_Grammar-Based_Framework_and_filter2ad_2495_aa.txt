title:Attacks Against Computer Network: Formal Grammar-Based Framework and
Simulation Tool
author:Vladimir I. Gorodetski and
Igor V. Kotenko
Attacks against Computer Network: Formal
Grammar-Based Framework and Simulation Tool
Vladimir Gorodetski and Igor Kotenko
St. Petersburg Institute for Informatics and Automation
39, 14th Liniya, St. Petersburg, Russia
PI:EMAIL, PI:EMAIL
Abstract. The paper presents an approach and formal framework for
modeling attacks against computer network and its software implementa-
tion on the basis of a multi-agent architecture. The model of an attack is
considered as a complex process of contest of adversary entities those are
malefactor or team of malefactors, on the one hand, and network security
system implementing a security policy, on the other hand. The paper fo-
cuses on the conceptual justiﬁcation of the chosen approach, speciﬁcation
of the basic components composing attack model, formal frameworks for
speciﬁcation of the above components and their interaction in simulation
procedure. The peculiarities of the developed approach are the follow-
ings: (1) malefactor’s intention-centric attack modeling; (2) multi-level
attack speciﬁcation; (3) ontology-based distributed attack model struc-
turing; (4) attributed stochastic LL(2) context-free grammar for formal
speciﬁcation of attack scenarios and its components (“simple attacks”);
(5) using operation of formal grammar substitution for speciﬁcation of
multi-level structure of attacks; (6) state machine-based formal grammar
framework implementation; (7) on-line generation of the malefactor’s ac-
tivity resulting from the reaction of the attacked network security system.
1 Introduction
Attacks against computer network form one of the many other dimensions of
cyber terrorism and therefore detection of such attacks and prevention of their
harmful eﬀects have recently become the task of great concern. It is undoubtedly
that substantial increase of Intrusion Detection System (IDS) eﬃciency could be
achieved in case of using knowledge resulting from generalization and formaliza-
tion of the accumulated experience with regard to computer attacks [28]. A lot
of such data is hitherto accumulated and systematized in the form of taxonomies
and attack languages ([2], [30], [38], etc.). Nevertheless, there are no serious at-
tempts to generalize the accumulated data in order to develop a mathematical
model of a wide spectrum of attacks and use this model for attack simulation.
Perhaps this is due to the extreme complexity of the network attack and com-
puter networks from modeling perspective: “there is no widely accepted infor-
mation physics that would allow making an accurate model”, and the network
attacks are “so complex that we cannot describe them with any reasonable degree
of accuracy” [5].
A. Wespi, G. Vigna, and L. Deri (Eds.): RAID 2002, LNCS 2516, pp. 219–238, 2002.
c(cid:1) Springer-Verlag Berlin Heidelberg 2002
220
V. Gorodetski and I. Kotenko
Attack formal model could be a powerful source of knowledge needed for
IDSs development. It could provide for deeper study and understanding of the
essence and peculiarities of attacks (intentions of malefactors, attack objects,
structures and strategies of attacks, etc.). This model would play an important
role in IDS learning both known and of unknown attacks if it were used as a
generator of training and testing samples of attacks. Finally, formal model of
attacks and attack simulation tool could be used as a testbed for security policy
validation, i.e. for testing, comparing and evaluating of IDS components and IDS
on the whole.
Development of such a model, its formal speciﬁcation and implementation
issues are the subjects of research in this paper. The rest of the paper is struc-
tured as follows. Section 2 outlines conceptual aspects and general strategy of
attack modeling and describes deﬁnitions of basic notions composing an attack
speciﬁcation. Section 3 describes the developed ontology of the problem domain
“Computer network attacks” which is considered further as a basis for consistent
attack speciﬁcation. Section 4 gives an outline of the proposed formal grammar
framework for speciﬁcation of attacks and exempliﬁes such speciﬁcations for sev-
eral classes of attacks. Section 5 describes the model of the “counterparty” of
attacks, i.e. model of the attacked computer network. Section 6 presents archi-
tecture of the Attack simulation tool and its implementation issues. Section 7
gives an overview of related works. Section 8 summarizes the main results of the
paper.
2 Attack Modeling Strategy
The computer network attacks concern to the class of complex systems pos-
sessing such features as large scale, multi-connectivity of elements, diversity of
their connections, variability of structure, multiplicity of executed functions and
structural redundancy. An attack model is understood as a formal object having
a likeness in basic properties with regard to real-life attacks, serving for investi-
gations by means of ﬁxing known and obtaining new information about attacks.
A formal model of attacks is a collection of mathematical dependences specifying
attacks and allowing to study them formally and via simulation.
The peculiarities of planning and execution of attacks, inﬂuencing on choice
of a formal model of attacks, are as follows:
1. Any attack is target- and intention-centered, i.e. it is directed against a
particular object (network, computer, service, directory, ﬁle, etc.) and, as a rule,
has a quite deﬁnite intention. Intention is understood as a goal or sub-goal a
malefactor intends to achieve. We speak about malefactor’s “intentions” accord-
ing to the terminology used for mental concepts. Formally speciﬁed intention we
call a “goal”. Examples of intentions: reconnaissance (e.g. learning of network
structure, identiﬁcation of OS, hosts and/or services, etc.); penetration into the
system; access to ﬁles of some directory; denial of service, etc. Examples of tar-
gets: IP-addresses of trusted hosts; password ﬁle; ﬁles of a particular directory;
some resources of a particular host, etc. It should be noticed, that in some cases
Attacks against Computer Network
221
intention cannot be determined in advance. It can be accepted by malefactor in
progress of attack development as a decision made on the basis of the obtained
information and successfulness or ineﬀectiveness of particular malefactor’s ac-
tions fulﬁlled earlier.
2. An attack intention can be represented in terms of partially ordered set
of lower-level intentions. A set of malefactor’s intentions partially ordered in
time is called an attack scenario. Intentions constituting attack scenario can
be represented at diﬀerent generalization levels. At the lowest level, each such
intention is realized by a malefactor as a sequence of actions (network packets,
commands of OS, etc.). Any malefactor’s intention can be realized in multiple
ways. Malefactor can vary the scenario implementing the same intention and the
same attack object.
3. Attack modeling corresponds to an adversary domain. Attack development
depends on the result of each particular step of attack, i.e. it depends on response
of the attacked network. In turn, a network response depends on security policy
implemented. The current attack “state” is determined by initial malefactor’s
information about the attacked network (or host), by information collected at
preceding attack steps, and also by the successfulness or ineﬀectiveness of the
preceding steps.
Thus, any attack development depends on many random factors and, ﬁrst of
all, depends on attacked network response. Therefore, even if a general malefac-
tor’s intention is determined, the attack development scenario cannot be deﬁnitely
speciﬁed beforehand. An attack development depends on many uncertainties:
(1) uncertainty in choice of the attack intention and attack object; (2) uncer-
tainty caused by the information content with regard to the attacked network
which a malefactor possesses at the beginning of attack and in progress of its de-
velopment; (3) uncertainty of choice of attack scenario implementing the already
selected intention; (4) uncertainty of the attacked computer network response.
Let us describe conceptually the scheme of attack generation (simulation).
Selection of the attack intention and attack object is a subjective act. Let
the list X = {X1, X2, . . . , XN} of possible attack intentions and the list Y =
{Y1, Y2, . . . , YM} of attack objects be given. To select some attack intention and
an attack object, it is necessary to set some formal mechanism of choice, for
example, randomization mechanism. Let an intention X ∈ X and an attack
object Y ∈ Y be selected.
The next component of attack modeling is a mechanism for generation of
the attack given upper-level intention X and attack object Y in the terms of
hierarchy of lower-level malefactor’s intentions and respective sequences of ac-
tions. Let us demonstrate the basic idea of such mechanism by example. Let us
suppose that the malefactor’s intention X consists in getting access to ﬁles of
some directory of a host. If malefactor does not possess some basic information
about computer network or host then he/she has to start from reconnaissance
R, which corresponds to the ﬁrst intention at the level that is lower with regard
to the intention X of the top level. The reconnaissance R can be fulﬁlled, for
example, by four diﬀerent sub-attacks {A, B, C, D}. Only one of them can be
222
V. Gorodetski and I. Kotenko
selected on current step of the attack development as a sub-goal (intention) of
the second level. We admit, that the malefactor has selected sub-goal C. Another
malefactor in the same situation could make other decision. Therefore, it is quite
reasonable to specify the above selection as a randomized step. Thus, generation
of an attack in terms of lower level intentions given upper-level intention X and
attack object Y can be formalized on the basis of randomization of selection
among {A, B, C, D}.
Let the selected sub-goal C be to be realized as a sequence of “commands”,
ﬁrst of which be the command a1. The term “command” is used here in the
generalized sense. Main diﬀerence between “command” and “intention” consists
in the following. The command is a concrete action; it is not a mental con-
cept, which represents a certain abstraction in malefactor’s mind. It can be a
sequence of IP-packages, a command of operating system, etc. An intention is a
component of the plan of actions; it is an “abstraction” represented formally at
respective level of detail. In other words, malefactor “thinks and plans” in terms
of intentions but acts in terms of commands.
A set of sequences of commands, by which the malefactor tries to realize his
/her intention, can be selected ambiguously. Therefore it is necessary to set a non-
deterministic mechanism for generation of sequences of commands. It is obvious,
that it can be randomization mechanism, however, probably, not so simple, as
the random- number generator with a discrete distribution. Let a1 be the ﬁrst
generated command. This command is dispatched to the attacked computer
network (host). The hierarchy  →  → , corresponding to the considered example scheme
of the initial phase of the attack generation is shown in tree-like form in Fig. 1.
The formally determined process of
choice can be represented as follows:
 →
 ,  →  ,  → a1 . The re-
sponse of the attacked system to each
command can be characterized as “suc-
cess” if the command is executed like
the malefactor wanted, or “failure”, if
the attacked system reacts to the com-
mand in the way that is undesirable
for the malefactor. The following com-
mands are depend on response of the
attacked object to the command a1.
Fig. 1. Attack scheme
If the chosen intention C is failed then the attack modeling and simulation
process can be stopped (“the attack is over”), or the attack can be continued
starting with reselection of the choice associated with specialization of intention
R — predecessor of the failed intention C in the tree (see Fig. 1) in terms of
the rest of the set {A, B, C, D}, i.e. in terms of one of the lower level intentions
223
{A, B, D}. In the last case, the choice of a new alternative for the intention
R specialization is made with the respective recalculation of the probability
distribution given over the truncated set of lower-level intentions.
Attacks against Computer Network
The next step of attack generation is similar to the previous one. If in the
following steps no one of intentions A, B and D does not result in success then
the attack can be either ﬁnished or continued with the subsequent modiﬁcation
of the attack object. It is worth to notice, that in both above cases the probability
distribution given over the set of the potentially admissible next step selections
of intention alternatives should be recalculated.
If the attack with intention C is successful, then the attack can be stopped
(if the goal is reached), or can be continued. This choice is also non-deterministic
and can be simulated by a probabilistic mechanism and so on and so forth.
To an arbitrary step n of the attack generation (simulation) its state can
be speciﬁed by a sequence of the following sort: A(n) = 
 , where  is a se-
quence of the symbols corresponding to the preceding steps, in which each sym-
bol is marked with a ﬂag from a set {“success”, “failure”}. This sequence can
include symbols of intentions of diﬀerent levels of detail, and symbols of actions.
It is supposed, that the attack can be simulated at various levels of detail of
the description;  is a partially unfolded sequence of the cur-
rent attack step symbols;  is still unknown part of the
sequence A(n), which generation is expected. In addition, current state of the
attack development can also contain information collected at preceding steps.
It should be clear that it is impossible to enumerate and to specify all se-
quences A(n), i.e. to specify completely in declarative form the total set of attacks
and variants of their development mapped to total set variants of the attacked
network responses. Therefore, the only way to specify attacks if it exists at all, is
procedural way, which suppose to model attack by a generation algorithm. This
way is used in this research.
While describing the developed model, let us start with terminology that
actually corresponds to the basic notions that will be structured and formalized
below as the domain ontology. In the developed formal model of attacks, the
basic notions of the domain correspond to malefactor’s intentions and all other
notions are structured according to the structure of intentions. This is a reason
why the developed approach is referred to as “intention-centric approach”.
The following basic classes of high-lever malefactor’s intentions and their
identiﬁers are used in the developed formal model:
1. R — Reconnaissance aiming at getting information about the network
(host). The followings are the particular cases of intentions of this class: IH —
Identiﬁcation of the running Hosts; IS — Identiﬁcation of the host Services;