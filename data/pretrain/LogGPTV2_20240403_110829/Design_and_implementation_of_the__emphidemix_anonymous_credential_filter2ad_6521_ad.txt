### Relevant Condition Tree and Credentials

When a user makes a request, the relevant condition tree is applied. This tree includes conditions for which the user has the necessary credentials or external proof (indicated by a tick-off symbol) and the credentials already in their credentials purse. For example, the user may already possess a credential from the Public Authority (PA).

The two conditions set by ARGENTIX are:
1. **ShowCondition**: The user must show the credential from the PA.
2. **ExternalCondition**: The user must provide a reference to a credit-card payment, such as a serial number. This condition appears in the condition tree, but since the payment reference is not an idemix credential, there is no corresponding credential in the user's credentials purse.

When a user clicks on a condition in the tree, the details of that condition are displayed in the selected condition window. For instance, the KIOSK requires a one-show credential (multi-show = false) issued by ARGENTIX with a subtype of 10. The user can also choose local identifiers (e.g., "kiosknym") for the pseudonyms they establish with different organizations and can GET and SHOW credentials. Once all conditions are met, the requested content (e.g., a cartoons page) is displayed in the browser window.

### Deployment Considerations

In this section, we discuss key issues related to the deployment of idemix.

#### 6.1 Deploying idemix as a Privacy-Enhanced Public-Key Infrastructure with External Certification

In an operational system, public information about organizations (whether regularly updated or not) needs to be certified. Users require authenticated information about where to get or show a credential, the idemix public key of an organization, and its SSL certificate. Additionally, a real Root Pseudonym Authority can only ensure total accountability (global anonymity revocation) if a user's real-world information was authenticated upon registering the root pseudonym.

A deployment environment using idemix credentials as a privacy-enhanced Public-Key Infrastructure (PKI) must provide hooks for an external PKI. In this external PKI, users and organizations have public-key certificates issued by a Certification Authority (CA). We refer to this authority as Certiﬁx, though it could be an existing CA. The primary requirement is that it can issue "idemix certificates" certifying the entire set of authenticated information for an idemix organization. Depending on implementation and deployment choices, such an organization's idemix certificate may include idemix keys, address, SSL information, and access rules.

Users also have Certiﬁx certificates and use them to authenticate "real-world" information during root pseudonym registration.

#### 6.2 The Role of Authenticated Communication in Linking Transactions Based on idemix Authentication

Authenticated communication (e.g., using SSL server authentication) allows users to authenticate organizations with which they register a pseudonym, show a credential, or obtain a credential. When multiple protocol executions (including application-level resource requests) are linked by an authenticated communication channel, servers can securely link idemix authentication (who showed the correct credential) with providing the resource (who gets the data).

#### 6.3 Infrastructural Issues: User Registration and Organization Updates

In a real deployment environment, users and organizations dynamically join the system, and organizations may periodically update public information such as rules, public keys, addresses, or SSL information (their idemix certificates). A user joining the system may need to authenticate using their real-world certificate when registering a root pseudonym with the root pseudonym authority and may also need to prove registration (or payment of a license). This can be realized by the Root Pseudonym Authority checking an additional condition.

Organizations' idemix certificates need to be distributed and updated efficiently. A separate InfoServer entity can serve as a central repository for up-to-date organizations' idemix certificates. Organizations post their idemix certificates to the InfoServer, and a certificate update may involve updating the entire certificate or just specific parts (e.g., new rules). Revocation issues can be managed through Certificate Revocation Lists (CRLs) issued by the InfoServer, or by issuing short-lived idemix certificates.

#### 6.4 Idemix, Trust Management, and Attribute-Based Access Control

Decentralized trust management, introduced by Blaze, Feigenbaum, and Lacy [4], deals with access control and authorization in distributed environments. Various trust management systems and languages have been proposed, such as [3, 21, 20, 19, 23, 22, 15]. These systems model a credential or certificate as binding a public key to attributes and/or authorizations. Access control and trust establishment policies controlled by resource owners allow authorization decisions based on these attributes and authorizations, or derived role assignments. Trust between the verifier and the issuer of a credential can be modeled through delegation of attribute authority, allowing a resource owner to delegate authority over an attribute to another entity. Some work also addresses the automatic collection or discovery of (part of) certificate chains (e.g., [23, 22, 19]).

The access control rules and conditions language introduced in Section 4.6.1 was designed to illustrate the capabilities and usage of idemix for configuring anonymous attribute-based access control in a prototype application environment. However, as idemix certificates can be used to formulate any assertion (including identity assertions if required), idemix attribute-based authentication can support any of the mentioned trust management models. In a distributed system where credential verifiers do not know credential issuers (and their keys) beforehand, credential verification conditions and rules can be modified to express more general authority delegation and trust management policies (e.g., "I accept a credential issued by an issuer satisfying trust or delegation condition Y" instead of "I accept a credential from issuer X"). Since the issuers in a certificate chain can be publicly known entities, automatic certificate chain collection can also be realized.

### Conclusions and Future Work

In this paper, we have presented the design and implementation of the idemix anonymous credential system. The high-level primitives introduced to define the system's interfaces are easy to use and understand, and can be extended to include new options and features. We also presented an example infrastructure for applications to exploit idemix authentication in an access control infrastructure.

The current implementation of the idemix system does not yet include features such as all-or-nothing non-transferability or use for signature generation. A new NymSystem library is being developed to incorporate these additional features.

Deploying idemix as a privacy-enhanced PKI also requires features supported by the core NymSystem, such as changing organizations' public idemix keys or efficient revocation of credentials. We are currently developing the protocols to support these features.

### Acknowledgements

The authors are grateful to Marco Bove, Endre Bangerter, Roger Mathys, Martin Schaffer, and Dieter Sommer for their exceptional Java programming, which made the idemix prototype a reality.

### References

[1] R. Barrett, P. P. Maglio, and D. C. Kellem. WBI Development Kit. http://www.almaden.ibm.com/cs/wbi/.

[2] S. Bellovin and P. Metzger. Simple Public Key Infrastructure (SPKI) Charter. http://www.ietf.org/html.charters/spki-charter.html.

[13] C. Dwork, J. Lotspiech, and M. Naor. Digital signets: Self-enforcing protection of digital information. 1996.

[14] T. Eirich. KeyMan. http://www.alphaworks.ibm.com/tech/keyman.

[15] C. Ellison, B. Frantz, B. Lampson, R. Rivest, B. Thomas, and T. Ylonen. SPKI Certificate Theory. Internet Engineering Task Force RFC 2693.

[16] A. Fiat and A. Shamir. How to prove yourself: Practical solution to identification and signature problems. In CRYPTO '86, vol. 263 of LNCS, pp. 186–194. Springer Verlag, 1987.

[17] O. Goldreich, B. Pfitzmann, and R. Rivest. Self-delegation with controlled propagation — or — what if you lose your laptop. In CRYPTO '98, vol. 1642 of LNCS, pp. 153–168, 1998. Springer Verlag.

[18] D. M. Goldschlag, M. G. Reed, and P. F. Syverson. Onion routing for anonymous and private internet connections. Communications of the ACM, 42(2):84–88, February 1999.

[19] A. Herzberg, Y. Mass, J. Mihaeli, D. Naor, and Y. Ravid. Access control meets public key infrastructure, or: Assigning roles to strangers. In Proceedings of the 2000 IEEE Symposium on Security and Privacy, pp. 2–14, 2000. IEEE Press.

[3] M. Blaze, J. Feigenbaum, and A. D. Keromytis.

[20] N. Li, B. Grosof, and J. Feigenbaum. A practically implementable and tractable delegation logic. In "Proceedings of the 2000 IEEE Symposium on Security and Privacy", pp. 27–43, 2000.

[21] N. Li, B. N. Grosof, and J. Feigenbaum. A logic-based knowledge representation for authorization with delegation. In "Proceedings of the 12th IEEE Computer Security Foundations Workshop", 162–174.

[22] N. Li, J. C. Mitchell, and W. H. Winsborough. Design of a role-based trust-management framework. In "Proceedings of the 2002 IEEE Symposium on Security and Privacy", pp. 114 – 130, 2002. IEEE Press.

[23] N. Li, W. H. Winsborough, and J. C. Mitchell. Distributed credential chain discovery in trust management: extended abstract. In 8th ACM CCS, pp. 156–165. ACM Press, 2001.

[24] A. Lysyanskaya, R. Rivest, A. Sahai, and S. Wolf. Pseudonym systems. In Selected Areas in Cryptography, vol. 1758 of LNCS, 1999.

[25] R. Mathys. New idemix client handbook. Technical report, December 2001.

[26] A. Pfitzmann, B. Pfitzmann, and M. Waidner. ISDNmixes: Untraceable communication with very small bandwidth overhead, 1991.

[27] M. K. Reiter and A. D. Rubin. Crowds: anonymity for Web transactions. ACM Transactions on Information and System Security, 1(1):66–92, 1998.

[28] S. G. Stubblebine, P. F. Syverson, and D. M. Goldschlag. Unlinkable serial transactions: Protocols and applications. ACM Transactions on Information and System Security, 2(4):354–389, Nov. 1999.