relevant condition tree applying to the request, the condi-
tions for which he has the necessary credential or external
proof (tick-oÔ¨Ä symbol) and the credentials he already owns
in his credentials purse. E.g., he already has a credential
from PA.
The two conditions by ARGENTIX are related to (1) a
ShowCondition: showing the credential from the PA, and
(2) an ExternalCondition giving a reference to a credit-card
payment. This reference is implemented by, e.g., a serial
number of the payment. The ExternalCondition shows up
in the condition tree; but as the payment reference is not
an idemix credential, there is no corresponding credential in
the credentials purse.
When clicking on a condition in the tree, the details are
shown in the selected condition window, e.g., the KIOSK
requires a one-show credential (multi-show = false) issued
by ARGENTX with subtype = 10.
It also allows the
user to chose local identiÔ¨Åers (e.g., ‚Äúkiosknym‚Äù) for the
pseudonyms he establishes with the diÔ¨Äerent organizations,
and to GET and SHOW credentials. After fulÔ¨Ålling all the
conditions, the requested contents (cartoons page) show up
in the browser window.
6. DEPLOYMENT CONSIDERATIONS
In this section, we discuss some issues related to the de-
ployment of idemix.
6.1 Deploying idemix as a Privacy-Enhanced
Public-Key Infrastructure with External
CertiÔ¨Åcation
In an operational system, public information about orga-
nizations (whether or not regularly updated) needs to be
certiÔ¨Åed: users need authenticated information about where
to get or show a credential, what is the idemix public key
of an organization, and what is its SSL certiÔ¨Åcate. Also,
a real Root Pseudonym Authority can only guarantee to-
tal accountability (global anonymity revocation) if a user‚Äôs
real-world information was authenticated upon registering
the root pseudonym.
A deployment environment using idemix credentials as a
(privacy-enhanced) Public-Key Infrastructure needs to pro-
vide hooks for an external Public-Key infrastructure (PKI).
In this external PKI, users and organizations have public-
key certiÔ¨Åcates issued by a CertiÔ¨Åcation Authority. We
call this authority CertiÔ¨Åx, although it may be an exist-
ing CertiÔ¨Åcation Authority; the only requirement being that
it can issue organizations‚Äô ‚Äúidemix certiÔ¨Åcates‚Äù certifying
the whole set of an idemix organization‚Äôs authenticated in-
formation. Depending on implementation and deployment
choices, such an organization‚Äôs idemix certiÔ¨Åcate may con-
tain idemix keys, address and SSL information, and access
rules.
Users also have CertiÔ¨Åx certiÔ¨Åcates and use them to au-
thenticate ‚Äúreal-world‚Äù information during root pseudonym
registration.
6.2 The Role of Authenticated Communica-
tion in Linking Transactions Based on
idemix Authentication
Authenticated communication (e.g., using SSL server au-
thentication) allows users to authenticate organizations with
which they register a pseudonym, to which they show a cre-
dential or from which they obtain a credential. When several
protocol executions (including application-level resource re-
quests) are linked by an authenticated communication chan-
nel, this also allows servers to securely link idemix authen-
tication (who showed the correct credential) with providing
the resource (who gets the data).
28)
PPPPPPPPPPPPPPPi
condition tree
nym identiÔ¨Åer

selected condition
credentials purse





/
Figure 7: UserCredential Manager
6.3 Infrastructural Issues: User Registration
and Organization Updates
In a real deployment environment, users and organizations
dynamically join the system, and organizations may period-
ically update public information such as rules, public keys,
addresses, or SSL information (their idemix certiÔ¨Åcates).
A user joining the system may not only need to authenti-
cate using their real-world certiÔ¨Åcate when registering a root
pseudonym with the root pseudonym authority; he may also
have to prove registration (or payment of a license). This
may be realized by the Root Pseudonym Authority checking
an additional condition.
Also, organizations‚Äô idemix certiÔ¨Åcates need to be dis-
tributed and updated in an eÔ¨Écient way. A separate InfoS-
erver entity may serve as a central repository for up-to-date
organizations‚Äô idemix certiÔ¨Åcates. Organizations post their
idemix certiÔ¨Åcates to the InfoServer; a certiÔ¨Åcate update
may update whole or part (e.g., only new rules set) of an
organization‚Äôs idemix information. Revocation issues may
be dealt with by CertiÔ¨Åcate Revocation Lists (CRLs) issued
by the InfoServer; or avoided by issuing short-lived idemix
certiÔ¨Åcates.
6.4
Idemix, Trust Management and Attribute-
Based Access Control
Decentralized trust management, a term introduced by
Blaze, Feigenbaum and Lacy [4], deals with access control
and authorization in distributed environments. DiÔ¨Äerent
trust management systems and languages have been pro-
posed, e.g.,
[3, 21, 20, 19, 23, 22, 15]; a credential or cer-
tiÔ¨Åcate modeled by those systems binds a public key to at-
tributes and/or authorizations. Access control and trust
establishment policies controlled by resource owners allow
authorization decisions based on these attributes and au-
thorizations, or on derived role assignments. Trust between
the veriÔ¨Åer and the issuer of a credential can be modeled
through delegation of attribute authority, which allows a
resource owner to delegate authority over an attribute to
another entity. Some work also deals with automatic collec-
tion or discovery of (part of) certiÔ¨Åcate chains (e.g.,
[23, 22,
19]).
The access control rules and conditions language intro-
duced in Section 4.6.1 was designed to illustrate the ca-
pabilities and usage of idemix for conÔ¨Åguring anonymous
attribute-based access control in a prototype application
environment. However, as idemix certiÔ¨Åcates can be used
to formulate any assertion (also identity assertions, if re-
quired), idemix attribute-based authentication can support
any of the trust management models mentioned; also, in a
distributed system where credential veriÔ¨Åers do not know
credential issuers (and their keys) on beforehand, credential
veriÔ¨Åcation conditions and rules can be modiÔ¨Åed to express
more general authority delegation and trust management
policies (e.g., ‚ÄúI accept a credential issued by an issuer sat-
isfying trust or delegation condition Y‚Äù instead of ‚ÄúI accept
a credential from issuer X.‚Äù As the issuers in a certiÔ¨Åcate
chain can be publicly known entities, also automatic certiÔ¨Å-
cate chain collection could be realized.
7. CONCLUSIONS AND FUTURE WORK
In this paper, we have presented the design and imple-
mentation of the idemix anonymous credential system. The
high-level primitives that were introduced to deÔ¨Åne the sys-
tem‚Äôs interfaces are easy to use and understand, and easy
to extend to include new options and features. We also pre-
sented an example infrastructure for applications to exploit
idemix authentication in an access control infrastructure.
The idemix system as implemented and presented here,
29does not yet include features such as all-or-nothing non-
transferability, or use for signature generation. A new
NymSystem library is being implemented which will incor-
porate these additional features.
Deployment of idemix as a privacy-enhanced PKI also re-
quires features supported by the core NymSystem, such as
changing of organizations‚Äô public idemix keys, or for eÔ¨Écient
revocation of credentials. We are currently developing the
protocols supporting these features.
Acknowledgements
The authors are grateful to Marco Bove, Endre Bangerter,
Roger Mathys, Martin SchaÔ¨Äer, and Dieter Sommer for their
amazing Java programming making the idemix prototype
reality.
8. REFERENCES
[1] R. Barrett, P. P. Maglio, and D. C. Kellem. WBI
development kit.
http://www.almaden.ibm.com/cs/wbi/.
[2] S. Bellovin and P. Metzger. Simple Public Key
Infrastructure (SPKI) Charter.
http://www.ietf.org/html.charters/spki-charter.html.
[13] C. Dwork, J. Lotspiech, and M. Naor. Digital signets:
Self-enforcing protection of digital information. 1996.
[14] T. Eirich. KeyMan.
http://www.alphaworks.ibm.com/tech/keyman.
[15] C. Ellison, B. Frantz, B. Lampson, R. Rivest,
B. Thomas, and T. Ylonen. SPKI CertiÔ¨Åcate Theory.
Internet Engineering Task Force RFC 2693.
[16] A. Fiat and A. Shamir. How to prove yourself:
Practical solution to identiÔ¨Åcation and signature
problems. In CRYPTO ‚Äô86, vol. 263 of LNCS, pp.
186‚Äì194. Springer Verlag, 1987.
[17] O. Goldreich, B. PÔ¨Åtzman, and R. Rivest.
Self-delegation with controlled propagation ‚Äî or ‚Äî
what if you lose your laptop. In CRYPTO ‚Äô98, vol.
1642 of LNCS, pp. 153‚Äì168, 1998. Springer Verlag.
[18] D. M. Goldschlag, M. G. Reed, and P. F. Syverson.
Onion routing for anonymous and private internet
connections. Communications of the ACM,
42(2):84‚Äì88, February 1999.
[19] A. Herzberg, Y. Mass, J. Mihaeli, D. Naor, and
Y. Ravid. Access control meets public key
infrastructure, or: Assigning roles to strangers. In
Proceedings of the 2000 IEEE Symposium on Security
and Privacy, pp. 2‚Äì14, 2000. IEEE Press.
[3] M. Blaze, J. Feigenbaum, and A. D. Keromytis.
[20] N. Li, B. Grosof, and J. Feigenbaum. A practically
Keynote: Trust management for public-key
infrastructures. In 1998 Security Protocols
International Workshop, vol. 1550 of LNCS, pp.
59‚Äì63, 1998.
[4] M. Blaze, J. Feigenbaum, and J. Lacy. Decentralized
trust management. Research in Security and Privacy,
1996. IEEE Computer Society, Technical Committee
on Security and Privacy.
[5] M. Bove. Key management, setup and implementation
of an anonymous credential system. Master‚Äôs thesis,
2001.
[6] J. Camenisch and A. Lysyanskaya. EÔ¨Écient
non-transferable anonymous multi-show credential
system with optional anonymity revocation. In
EUROCRYPT 2001, vol. 2045 of LNCS, pp. 93‚Äì118.
Springer Verlag, 2001.
[7] D. Chaum. Untraceable electronic mail, return
addresses, and digital pseudonyms. Communications
of the ACM, 24(2):84‚Äì88, Feb. 1981.
[8] D. Chaum. Security without identiÔ¨Åcation:
Transaction systems to make big brother obsolete.
Communications of the ACM, 28(10):1030‚Äì1044, 1985.
[9] D. Chaum and J.-H. Evertse. A secure and
privacy-protecting protocol for transmitting personal
information between organizations. In CRYPTO ‚Äô86,
vol. 263 of LNCS, pp. 118‚Äì167. Springer-Verlag, 1987.
[10] D. Chaum, A. Fiat, and M. Naor. Untraceable
electronic cash. In CRYPTO ‚Äô88, vol. 403 of LNCS,
pp. 319‚Äì327. Springer Verlag, 1990.
[11] Consultation Committee. X.509: The Directory
Authentication Framework. International Telephone
and Telegraph, International Telecommunications
Union, Geneva, 1989.
[12] I. B. DamgÀöard. Payment systems and credential
mechanism with provable security against abuse by
individuals. In CRYPTO ‚Äô88, vol. 403 of LNCS, pp.
328‚Äì335. Springer Verlag, 1990.
implementable and tractable delegation logic. In
‚ÄùProceedings of the 2000 IEEE Symposium on
Security and Privacy‚Äù, pp. 27‚Äì43, 2000.
[21] N. Li, B. N. Grosof, and J. Feigenbaum. A logic-based
knowledge representation for authorization with
delegation. In ‚ÄùProceedings of the 12th IEEE
Computer Security Foundations Workshop‚Äù, 162‚Äì174.
[22] N. Li, J. C. Mitchell, and W. H. Winsborough. Design
of a role-based trust-management framework. In
‚ÄùProceedings of the 2002 IEEE Symposium on Security
and Privacy‚Äù, pp. 114 ‚Äì 130, 2002. IEEE Press.
[23] N. Li, W. H. Winsborough, and J. C. Mitchell.
Distributed credential chain discovery in trust
management: extended abstract. In 8th ACM CCS,
pp. 156‚Äì165. ACM Press, 2001.
[24] A. Lysyanskaya, R. Rivest, A. Sahai, and S. Wolf.
Pseudonym systems. In Selected Areas in
Cryptography, vol. 1758 of LNCS, 1999.
[25] R. Mathys. New idemix client handbuch. Technical
report, December 2001.
[26] A. PÔ¨Åtzmann, B. PÔ¨Åtzmann, and M. Waidner.
Isdnmixes: Untraceable communication with very
small bandwidth overhead, 1991.
[27] M. K. Reiter and A. D. Rubin. Crowds: anonymity for
Web transactions. ACM Transactions on Information
and System Security, 1(1):66‚Äì92, 1998.
[28] S. G. Stubblebine, P. F. Syverson, and D. M.
Goldschlag. Unlinable serial transactions: Protocols
and applications. ACM Transactions on Information
and System Security, 2(4):354‚Äì389, Nov. 1999.
30