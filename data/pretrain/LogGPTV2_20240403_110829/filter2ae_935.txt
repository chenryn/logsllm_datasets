# 【系列分享】安卓Hacking Part 18：逆向工程入门篇

##### 译文声明
本文为翻译文章，原文来源：infosecinstitute.com
原文地址：[链接]
译文仅供参考，具体内容及含义请以原文为准。

---

**翻译：shan66**
稿费：200RMB
投稿方式：发送邮件至linwei#360.cn，或登录网页版在线投稿

## 前言
在计算领域中，逆向工程是指通过理解某个系统的运行机制并利用这些信息来完成特定任务的过程。这一方法同样适用于Android应用程序。在多种情况下，我们都需要对Android应用进行逆向工程，例如：

- 阅读他人的代码
- 查找代码中的漏洞
- 搜索硬编码在代码中的敏感数据
- 恶意软件分析
- 修改现有应用程序的功能

## 反编译与反汇编
反编译是将二进制代码转换为高级语言源代码的过程，因为高级语言具有更高的可读性。而反汇编则是将二进制代码转换为汇编语言代码的过程。虽然反汇编后的代码也有助于理解程序逻辑，但其阅读难度相对较高。

## 从Java生成DEX文件
为了更好地介绍Android应用程序的逆向过程，首先需要了解如何构建应用程序：

1. 开发人员使用Java编程语言编写源代码，文件扩展名为`.java`。
2. 这些`.java`文件被提交给`javac`编译器，生成`.class`文件。
3. 这些`.class`文件再被提交给`dx`工具，生成`.dex`文件。
4. 最后，`.dex`文件及其他资源被打包成`.apk`文件，并在Dalvik虚拟机中运行。

若要查看生成的`.dex`文件结构，可以使用010Editor。请下载以下工具：
- 010Editor：[下载链接]
- dex模板：[下载链接]

### 步骤
1. 解压APK文件。在*nix系统中可以使用`unzip`命令。
2. 使用010 Editor打开`classes.dex`。
3. 加载下载的dex模板。

下图显示了010Editor中的一个`.dex`文件示例。

关于`.dex`文件格式及其工作原理的详细信息，请参阅以下链接：[链接]

## 逆向Android应用程序
现在让我们讨论如何对Android应用程序进行逆向工程。

### 1. 反汇编Android应用程序
可以使用名为APKTOOL的工具获取smali版本的代码。具体步骤如下：

1. 从以下链接下载APKTOOL：[下载链接]
2. 运行以下命令获取smali代码：
   ```sh
   apktool d [app].apk
   ```
3. 若要重新编译应用程序，只需修改选项`b`，指向存放修改后的代码的文件夹路径即可：
   ```sh
   apktool.bat b [path to the target folder]
   ```

### 2. 解压Android应用程序
本节将介绍两种反编译Android应用程序的方法。

#### 使用dex2jar和jad反编译Android应用程序
1. **解压APK文件**：
   - 将APK文件的扩展名改为ZIP。
   - 使用`unzip`命令解压文件。

2. **使用dex2jar**：
   - 导航到dex2jar所在的文件夹，并运行以下命令：
     ```sh
     d2j-dex2jar.sh [path to classes.dex]
     ```
   - 这将生成一个新的JAR文件。

3. **提取`.class`文件**：
   - 使用`unzip`命令从新生成的JAR文件中提取`.class`文件。

4. **使用JAD反编译器**：
   - 下载JAD反编译器：[下载链接]
   - 将所有提取的类文件作为输入提供给JAD：
     ```sh
     jad -sjava *.class
     ```
   - 它将在同一文件夹下生成`.java`文件。

#### 使用dex2jar和JD-GUI反编译Android应用程序
1. **解压APK文件**：
   - 将APK文件的扩展名改为ZIP。
   - 使用`unzip`命令解压文件。

2. **使用dex2jar**：
   - 导航到dex2jar所在的文件夹，并运行以下命令：
     ```sh
     d2j-dex2jar.sh [path to classes.dex]
     ```
   - 这将生成一个新的JAR文件。

3. **使用JD-GUI**：
   - 下载JD-GUI：[下载链接]
   - 使用JD-GUI打开新生成的JAR文件，即可查看反编译的Java代码。

## 相关文章
- [安卓 Hacking Part 1：应用组件攻防](http://bobao.360.cn/learning/detail/122.html)
- [安卓 Hacking Part 2：Content Provider攻防](http://bobao.360.cn/learning/detail/127.html)
- [安卓 Hacking Part 3：Broadcast Receivers攻防](http://bobao.360.cn/learning/detail/126.html)
- [安卓 Hacking Part 4：非预期的信息泄露（边信道信息泄露）](http://bobao.360.cn/learning/detail/133.html)
- [安卓 Hacking Part 5：使用JDB调试Java应用](http://bobao.360.cn/learning/detail/138.html)
- [安卓 Hacking Part 6：调试Android应用](http://bobao.360.cn/learning/detail/140.html)
- [安卓 Hacking Part 7：攻击WebView](http://bobao.360.cn/learning/detail/142.html)
- [安卓 Hacking Part 8：Root的检测和绕过](http://bobao.360.cn/learning/detail/144.html)
- [安卓 Hacking Part 9：不安全的本地存储：Shared Preferences](http://bobao.360.cn/learning/detail/150.html)
- [安卓 Hacking Part 10：不安全的本地存储](http://bobao.360.cn/learning/detail/152.html)
- [安卓 Hacking Part 11：使用Introspy进行黑盒测试](http://bobao.360.cn/learning/detail/154.html)
- [安卓 Hacking Part 12：使用第三方库加固Shared Preferences](http://bobao.360.cn/learning/detail/156.html)
- [安卓 Hacking Part 13：使用Drozer进行安全测试](http://bobao.360.cn/learning/detail/158.html)
- [安卓 Hacking Part 14：在没有root的设备上检测并导出app特定的数据](http://bobao.360.cn/learning/detail/161.html)
- [安卓 Hacking Part 15：使用备份技术黑掉安卓应用](http://bobao.360.cn/learning/detail/169.html)
- [安卓 Hacking Part 16：脆弱的加密](http://bobao.360.cn/learning/detail/174.html)
- [安卓 Hacking Part 17：破解Android应用](http://bobao.360.cn/learning/detail/179.html)