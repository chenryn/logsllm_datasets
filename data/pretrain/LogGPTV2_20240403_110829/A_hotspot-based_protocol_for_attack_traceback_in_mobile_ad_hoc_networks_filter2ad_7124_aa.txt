title:A hotspot-based protocol for attack traceback in mobile ad hoc networks
author:Hung-Yuan Hsu and
Sencun Zhu and
Ali R. Hurson
A Hotspot-based Protocol for Attack Traceback in Mobile
Ad Hoc Networks
Hungyuan Hsu
The Pennsylvania State
University
University Park, PA 16802
PI:EMAIL
Sencun Zhu
Ali Hurson
The Pennsylvania State
Missouri University of Science
University
University Park, PA 16802
PI:EMAIL
and Technology
Rolla, MO 65409-0350
PI:EMAIL
ABSTRACT
Based on the principle of divide and conquer, in this pa-
per we propose an eﬃcient traceback protocol for mobile
ad hoc networks, The protocol is capable of detecting a
hotspot where the attacker resides. It works by dividing the
forwarding path of every packet into multiple interweaving
fragments and each reachable fragment is individually recon-
structed during a traceback process. Through simulations
in theoretical mobility models as well as real mobility traces,
we show that each traceback of our scheme can attribute to
a very small hotspot and the attacker can be accurately
identiﬁed after a number of traceback operations.
Categories and Subject Descriptors
C.2.0 [Computer-Communication Networks]: General—
Security and protection; C.2.1 [Computer-Communication
Networks]: Network Architecture and Design—Wireless
communication
General Terms
Security, Algorithm, Design
Keywords
Mobile Ad-hoc Networks, Traceback, Path Fragmentation,
Packet Marking, Packet Logging
1.
INTRODUCTION
IP traceback has been extensively studied in the litera-
ture, however, within the scope of mobile ad hoc networks
(MANETs), very little research has been attempted [6, 1, 3].
In MANETs, the network nodes forward packets in a self-
conﬁguration and self-maintenance purpose without any in-
frastructure support. While both the scale of a MANET and
its data traﬃc rate are much smaller than its high-speed In-
ternet counterpart, nevertheless, online (or real-time) trace-
back in MANETs imposes some unique challenges that are
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ASIACCS’10 April 13–16, 2010, Beijing, China.
Copyright 2010 ACM 978-1-60558-936-7 ...$10.00.
uncommon in the Internet. Node mobility is one key factor.
In a MANET, the network topology is constantly chang-
ing because the wireless link is dynamically built up when
two mobile nodes move into each other’s radio transmis-
sion range. The dynamic network topology fundamentally
changes the paradigm for attack source traceback. The ex-
isting IP traceback schemes do not work in MANETs be-
cause almost all of the IP traceback schemes assume a static
network topology. Trust is another key factor. Unlike the
Internet where routers are often trusted, the mobile nodes in
MANETs normally should not be trusted. Consequently, a
traceback protocol for MANETs itself suﬀers from malicious
attacks.
In this paper, we propose a novel traceback scheme for
MANETs, where a traceback is triggered by either a single
malicious packet (e.g., a worm) or multiple attack packets
(e.g., a DoS attack). Our scheme is capable of detecting a
hotspot where a malicious attacker resides. Based on the
principle of divide and conquer, our scheme works by di-
viding a forwarding path into multiple smaller interweav-
ing fragments. During a traceback process, those reachable
fragments are reconstructed and fragmentation information
is gathered. Through simulations with mobility model and
real data traces, we show that each traceback that employs
our scheme can attribute to a much smaller hotspot where
the attack source resides than a conventional logging scheme.
In addition, the attack source can be precisely pinpointed
with a number of traceback rounds.
2. PRELIMINARIES
2.1 Network Model and Security Assumptions
In a mobile ad hoc network (MANET), nodes form a net-
work on-the-ﬂy and forward packets for one another. Fur-
thermore, they can establish trust through either a PKI, a
Trusted Third Party (TTP), or predistributed shared keys.
During data forwarding, every packet is authenticated in a
hop-by-hop fashion [7]; that is, the link between two neigh-
boring nodes is assumed to be authenticated and a malicious
node cannot impersonate any good node.
2.2 Attack Model
We assume the adversary may compromise one or multi-
ple nodes and take full control of the compromised node(s).
Since the links are authenticated, an attack source cannot
impersonate any normal (benign) node to its downstream
node. To hide itself, it will not put its address into the
packet source ﬁeld; instead, it will act as if it was a data
333forwarder for the packets while spooﬁng valid source ids.
The attack source may change its location over time to hide
itself.
Traceback Query
Hotspot 2
u 1
S
Hotspot 1
b 3
u 4
u 2
u 5
V
Traceback Reply 
S
u 1
1
2
u 2
2
u 4
2
V
1
u 3
u 5
1
Figure 2: An example of packet marking where u1
and u3 are markers in regard to M1, and u2 and u5
are markers in regard to M2.
Figure 1: An attack path AM of packet M where node
S and node b3 are the compromised nodes. S injects bo-
gus packets, and b3 conspires to neutralize the traceback
attempt.
Without loss of generality, consider an attack path AM
of packet M in Figure 1, where the source node S and the
intermediate node b3 are compromised and are both at the
disposal of the adversary.
b3 may alter packet markings
(when a PPM scheme is in place) or drop traceback queries.
If a traceback protocol can only trace to u4/b3 (e.g., b3 drops
the traceback query or traceback reply), then S becomes in-
visible to the downstream nodes and the victim. If b3 does
not interfere the traceback process, the protocol may reach
u1/S. In either case, b3 or S will probably deny its attack-
ing behavior and consequently a dispute may arise between
b3 and u4 or between S and u1. Indeed, without digitally
signing every packet, nonrepudiation is not possible; thus an
attacker node can always accuse a good node.
2.3 Design Goals
We set forth the following design goals. First, we aim to
locate the hotspot where the compromised node resides. Be-
cause a traceback protocol alone cannot precisely identify
the attack node, in [1] hotspot-based traceback was ﬁrst in-
troduced. Given a potential hotspot, it relies on other online
or oﬄine analysis/detection measures (e.g., neighbor watch-
ing [4]) or human intelligence to identify the attacker [1].
We will also leverage such measures to identify the nodes
in a hotspot, given the authenticated links among nodes.
Hotspot analysis, however, is generally expensive, so hotspot
size should be as small as possible (the minimum is 2).
Second, at least one of the malicious nodes (S or b3 in the
example) should be included. From the attacker’s perspec-
tive, the exposure of any one of its controlled nodes may
have the same impact on the potential of its future attacks.
Third, our defense should minimize the number of packets
required for a successful traceback. This will not only al-
low us to detect low rate attacks and catch the attacker as
early as possible, but also reduce the bandwidth overhead
for launching traceback.
3. ONLINE TRACEBACK IN MANETS
Our design is based on the principle of divide-and-conquer.
To reduce the number of packets needed to reconstruct the
entire path, we propose the ideas of path-fragmentation and
fragment interweaving. With path-fragmentation, each packet
during forwarding (probabilistically) divides its entire path
into multiple fragments. The fragmentation information is
stored in a few intermediate nodes. The fragments formed
by multiple packets may be overlapped, building virtual in-
terweaved links among en-route nodes. Thus, a broken link
due to mobility could be bypassed and farther links may be
reconstructed, approaching to the real attack source. Later
on, in an online traceback phase, the fragmentation infor-
mation is gathered, each constructed link is veriﬁed, and a
hotspot is located.
For the illustration of the basic idea, let us consider Fig-
ure 2. A data packet M1 is delivered through the path
A = (S, u1, . . . , u5, V ), where u1 and u3 are the markers
in regard to M1. Whenever an intermediate node decides
to mark a packet, it must ﬁrst log the existing mark in the
packet before inscribing its own mark. Consequently, u1
records the mark from S, u3 records the mark from u1, and
V records the mark from u3. As a result, this path is divided
into three fragments by u1 and u3 and a reverse virtual link
is created pointing from one marker to its previous one.
Assume another packet, M2, is sent through the same path
A. The markers in regard to M2 may be diﬀerent, say u2 and
u5, due to the probabilistic nature of the marking algorithm.
Similarly, this path is divided into three fragments by u2 and
u5, forming diﬀerent virtual links. As shown in Figure 2, the
fragments of M1 and M2 interweave with one another. Two
sets of reverse virtual paths are built along A after M1 and
M2 are sent through the path A.
The reverse virtual links help to localize the hotspot. In
Figure 2, suppose S is the attack source that has forged
packet markings for M1 and M2. u1 and u2 recorded the
false packet markings from S, respectively. If later we can
trace back to u1 or u2, and know the markings stored in
u1 or u2 are false and these packet markings did not travel
more than two or three hops with a high probability (we will
show how to achieve these goals shortly), then we may con-
clude that u2, u1 and S are within the hotspot with a high
conﬁdence. Compared to a logging scheme, our scheme does
not have to physically trace back to u1 along the forwarding
path; the virtual link from u3 can be used to identify u1 and
its neighbors as a hotspot.
To realize the above idea, we have constructed four build-
ing blocks (BBs). During packet forwarding, every node
employs a building block BB-I, a veriﬁable, distance-based
packet marking scheme to process every packet; meanwhile,
it logs the abstract information of the packet into its trace-
back table. During a traceback process, BB-II, a multicast-
based forwarding scheme, is employed to forward the trace-
back query. When a node ﬁnds that it was in the attack
path, it reports to the victim its virtual links. Then the
victim node calls upon the BB-III, a path-reconstruction
algorithm, to locate the hotspot. Finally, based on the in-
formation of the hotspots resulted from multiple tracebacks,
building block BB-IV is applied to evaluate the reputation
334of every node and identify the most suspicious nodes. Due
to space limit, next we will only introduce the building block
BB-I in more detail, and refer the readers to our full version
paper [2] for the other blocks.
Veriﬁable, Distance-based Packet Marking: Exist-
ing marking schemes let every node decide whether or not
to mark a packet. Since this is a random process, it is hard
for the other nodes to determine whether a node marks a
packet according to a probability function or it (as a com-
promised node) selectively marks the packet to disrupt the
potential traceback (e.g., to cover the real attack source). As
such, we consider it critical that only a dynamically selected
set of nodes are allowed to mark in a packet, preventing a
malicious node from arbitrarily marking packets. The quali-
ﬁcation of a node to mark a packet should also be veriﬁable.
On the other hand, during path fragmentation, it is neces-
sary to control the size of a fragment (i.e., the distance that
a packet mark traverses) to increase traceability within each
fragment. Based on these observations, below we design a
veriﬁable, distance-based packet marking scheme.
A mark in our scheme has three ﬁelds: marker id, distance,
Let H : K × D −→ R be a
and authentication code.
keyed hash function, denoted as HK(·). For each packet M
destined at node V , an intermediate node ui calculates a
probability r∗ as:
r∗ =
HKui V (M |ui|V |d∗)
|R|
(1)
where Kui V is the pairwise key shared between ui and V .
d∗ is the distance between ui and the prior marker recorded
in packet M , and |R| is the cardinality of the range of HK(·).
ui then compares r∗ with a distance-based marking proba-
bility p(d∗), which will be discussed shortly. If r∗ ≥ p(d∗),
ui is illegal to mark M , so it simply increments the distance
ﬁeld d∗. Otherwise, ui replaces the existing marker id with
its own id and resets d∗ to 0. Also, HKui V (M |ui|V |d∗) is
written into the authentication code ﬁeld.
This marking scheme not only authenticates the packet
mark but also allows V to check if the claimed marker ui
is legitimate to mark M based on V ’s pairwise key shared
with ui and d∗. The security beneﬁts are two folds: First,
without knowing the key Kui V , an adversary cannot forge
an authenticated mark. Second, even if the adversary com-
promises ui and gets the key, it still cannot arbitrarily select
packets to mark. Note that although an intermediate com-
promised node may slightly change the packet to make itself