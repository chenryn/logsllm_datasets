完全覆盖、没有测试逃逸的情况下TCE=1.00(100%)，所以这个值越
高越好。
我们的目标是用更加有效的测试用例尽可能地减少测试逃逸，以提
高TCE。
1890
---
## Page 1892
抓住缺陷严重度的影响
为了反映质量保证和测试逃逸发现的缺陷严重程度的高低，我们可
以使用加权TCE，以每个缺陷的优先级为权重。缺陷的优先级是分
配给该缺陷的表明修复它的相对重要性的权重。
加权能反映QA测试周期和测试逃逸发现的缺陷的质量。
例如，如果我们将下面的权重分配给不同的优先级的缺陷：
P1=10,P2=8,P3=6,P3=3,P5=1
QA发现了5个P1缺陷，而测试逃逸是15个P3的缺陷：
TCE（加权）=5×10/(5×10+15×6)=50/140=0.35(35%)
TCE（未加权）=5/(5+15)=5/20=0.25(25%)
加权的TCE度量反映了质量保证发现了更多高风险和破坏性的缺
陷，虽然从总体数量上来看偏低。
分析测试逃逸缺陷
为了分析测试逃逸缺陷，我们将缺陷分为以下几个原因类别：
误报的缺陷
不完整的测试用例
没有测试用例
·测试执行问题
不正确的测试用例
不正确的功能规范（当有功能规范实际存在时！）
然后，确定测试逃逸的纠正行动，如下表中列出：
1891
---
## Page 1893
原因
纠正行动
误报的缺陷
将缺陷移至正确的状态（例如，产品/类别/子类）。需要强调提交
缺陷指南并教育缺陷的提交者如何正确提交缺陷。
不完整的测试用例
审查测试用例的目标功能区域。加强并重新设计测试用例。
没有测试用例
基于导致缺陷的功能实现测试用例。
测试执行问题
审查的过程步骤或依赖的硬件/软件。
不正确的测试用例
审查正在测试的功能。测试用例编写之后，它是否已经有了改变？
不正确的功能规范
联系设计/开发人员。检查功能规范审查流程。它是不是太模翻了？
a数量最多的类别是问题最大的，所以进一步纠正行动是要我出为什么这一类有这么多的缺陷出
现。
OpenSolaris桌面团队的案例研究
桌面QA团队对所有桌面应用程序（包括OpenSolaris）的质量负责。
这些应用程序包括许多社区的开源项目，包括GNOME、Mozilla、
Compiz和Pidgin等。OpenSolaris遵从每6个月一次的发布时间表，但
每两个星期都会向社区发布一个开发版本（developmentbuild）。为
了在这样高的发布频率下确保高品质，桌面QA团队采纳了一个正式
的以功能测试为重点的测试流程。QA团队负责测试计划和测试用例
的设计。许多测试用例来自于开源社区。例如，用于Firefox的测试
用例大部分来自Mozilla社区，它使用一个名为Litmus的测试用例管
理工具。
对于大多数的桌面应用程序来说，尽管测试用例100%地被执行，但
在正常的QA测试周期之外仍有缺陷被提交。QA团队跟踪的每一个
版本的TCE趋势，是为了在OpenSolaris发布的开发过程中衡量并改
进测试用例的有效性。接下来的几个小节概述了一个如何衡量和提
高测试用例的有效性的例子。
假设
对于OpenSolaris桌面项目，我们将所有不是质量保证工程师提交的
缺陷都作为测试逃逸，除了以下内容：
·加强
·本地化（L10N）和操作系统相关
1892
---
## Page 1894
·硬件
设备驱动程序
全球化（G11N）
·构造
“无法重现”
“不是缺陷”
·重复
计算TCE值的流程
1.使用OpenSolaris社区提供的Bugzilla直接收集缺陷列表：
）
b.为每个版本都选择“BuildonBugzilla（在bugzilla构造）”
2.检查返回的缺陷列表，看是否有应被排除的缺陷（排除的类别清
单参见前面“假设”一节）。
3.分析每个有效的缺陷，并确定哪个类别最能说明问题的根源。
4.生成TCE度量：
TCE=(Nt/Ntot)×100%
5.计算每个P1、P2、P3、P4、P5缺陷的数量将每个P1、P2、P3、
P4、P5缺陷的数量乘以其相应的权重，这里权重如下：P1=10，
P2=8，P3=6，P4=3，P5=1.
6.计算Nt，即在一个测试周期内发现的每个加权的P1、P2、P3、
P4、P5缺陷的总和。
7.计算测试逃逸，即在测试周期之外发现的每个加权的P1、P2、
P3、P4、P5缺陷的总和。
1893
---
## Page 1895
8.计算Ntot=Nt+测试逃逸。
9.计算TCE=(Nt/Ntot)x100%。
使用上述流程，现在我们收集了从版本108到版本112的缺陷数据并
进行原因分析。让我们以版本110为例。首先，我们使用OpenSolaris
的Bugzilla缺陷跟踪应用程序产生版本110的缺陷列表，则我们将得
到这样一个缺陷列表（图6-8）。
16bugs found.
ID
Sev Pri OS
Aassigneo
Status
Resolutio
Bran.Camer
FIXINP
[Elsal] spornatic core dump when ciosing elisa
80g 2d ew 9012
REOPEN
giinaed worpces
7769 nor P2 OpenSol jef.caiBsun.com
ACCEPT
7667 nor P3 Solaris
PI:EMAIL
6865 nor P3 Solaris
gnome-keyring-is whiring on myconsoie
qamozila-firefax@defect.o.
ACCEPT
ued ou o ppq m sooddy 
7860 nor P3 Solaris
qagnome-gcorf@defet.opens.. ACCEPT
6962 nor P3 Soleris
o9n.com
ACCEPT
7952 nor P3 OpenSol PI:EMAIL
ACCEPT
Evolution hangs at00% CPU when going otine-onine
7050 nor P3 Solaris
PI:EMAIL
ACCEPT
When use Ekiga it fl to se the change of bududy's slatus
7131 nor P3 OpenSol
NEW
megnifer crsh on the DTU of sunyserver
ACCEPT
tmfaft.
6858 nor P4 Solaris
PI:EMAIL
ACCEPT
[vermilon] short cut key F11 does not work on evinoe
6960 nor P4 Solaris
NEW
cionso
7133 nor P4 Solaris
PI:EMAIL
ACCEPT
when configuring Ekiga using
7109minP4 Openl
NEW
[Xnc] Date fald te show 
16 bugs found.
ad by Xvmc
图
6-8
OpenSolaris版本110的缺陷列表
我们使用相同的搜索规则，为其他OpenSolaris开发版本（108~
112）生成缺陷列表。在对这些缺陷列表进行TCE分析后，我们得到
以下表格：
版本编号每个版本的缺陷数量逃逸的缺陷
分析测试逃逸
TCE值（加权和未加权）
版本108
总共4个缺陷：
1个逃逸的缺陷：
不完整的测试
TCE（加权）=75%
4个P4缺陷
1个P4缺陷
用例
TCE（未加权）=75%
版本109
总共10个缺陷：
0个逃逸的缺陷
无
TCE（加权）=100%
1个P2缺陷
TCE（未加权）=100%
6个P3缺陷
3个P4缺陷
1894
---
## Page 1896
（续）