Total Score | 10/10 | 10/10  
原表格:  
#### 6.2. Compromised user credentials
"被窃取的用户凭据".
这个场景代表了云服务中最常见的事件之一，其中用户凭证被钓鱼或其他社会工程方法窃取。一旦攻击者获得了用户的凭据，攻击者将使用这些凭据，实现以员工身份访问资源并继续攻击。  
通过"模拟攻击者"来测试这个场景：使用用户的凭据，并从Tor来远程访问资源。
在这个场景中，如果没有额外的管控措施，"基于边界的架构"(the perimeter-based
architecture)是无效的。因为攻击者正在使用一个边界网络之外的终端的凭据，所以存在“缺乏可见性”的问题。在企业场景中，通常会有一些没有在"基于边界的架构"中表示的"管控措施"(controls)：这些"管控措施"可以借助数据(比如来自身份提供程序的"集中化的日志"、Office
365 activity logs)帮助识别恶意活动。
零信任网络将"登录"识别为异常，并从"身份"(identity)的丰富信号中受益，以带来可见性，并遏制、清除、恢复用户凭据(Figure 8)。
> Figure 8. risky sign-ins detected.  
>
> 
  * 在这个例子中，这次登录触发了2个风险告警:
    * 1.登录者来自新的位置(a new location).
    * 2.登录者源自Tor.
此外，仅在通过"多因素身份验证"(MFA,multifactor authentication)验证了其身份之后，才允许用户更改密码。
  * 通常部署了许多"防御措施"(defenses)，以防止"防御措施被故意禁用"、或"防御措施未部署"的情况。如
    * "多因素身份验证"之类的管控措施将阻止攻击者使用这些被窃取的凭据；
    * 其他"以身份为中心的"(identity-centric)管控措施仅允许来自健康设备的登录。如"终端检测和响应"(Endpoint Detection and Response)或"移动设备管理"(Mobile Device Management)解决方案判断该设备为健康的、非恶意的设备。
表格:
Phase | Zero Trust Architecture | Perimeter-based Architecture  
---|---|---  
2."识别阶段" - Identify | `优点:能够基于"多种因素"(multiple factors)快速对异常登录发出一条告警。`
`缺点:可能会因为员工出差等原因，而产生误报。` `Score: 5` | `没有部署额外的能力，无法测量。` `Score: 0`  
3."遏制阶段" - Contain | `优点:用户访问的下一个资源通过"多因素认证"(MFA)进行身份验证，并且用户的密码将被更改。`
`缺点:在没有额外工作的情况下，这只适用于利用"身份提供者"(the identity provider)的应用程序，并且可能会造成"空白"(gaps).`
`Score: 5` | `没有部署额外的能力，无法测量。` `Score: 0`  
Total Score | 10/10 | 0/10  
原表格:
#### 6.3 Suspicious use of mailbox forwarding rules
表格:
Phase | Zero Trust Architecture | Perimeter-based Architecture  
---|---|---  
2."识别阶段" - Identify | `优点:Microsoft Cloud App Security发出一条告警，指示配置了可疑的收件箱转发。`
`缺点: N/A` `Score: 5` | `没有部署额外的能力，无法测量。` `也可以通过检查SMTP mail
flows,或其他"消息日志"(message journaling)也可以检测到。` `Score: 0`  
3."遏制阶段" - Contain | `优点:自动遏制，包括遏制"已被控制的用户"(the compromised
user)，基于策略定义驱动的用户凭据的重置。` `缺点:此遏制仅适用于有问题的用户，而不适用于受攻击者的消息影响的下游用户。` `Score: 3` |
`没有部署额外的能力，无法测量。` `Score: 0`  
Total Score | 8/10 | 0/10  
原表格:  
#### 6.4 Inadvertent sharing of sensitive file by user
表格:
Phase | Zero Trust Architecture | Perimeter-based Architecture  
---|---|---  
2."识别阶段" - Identify | `优点：通过定义策略，MCAS能够识别此应用程序级别的信号。可获得有关"访问尝试"(access
attempts)的更多详细信息。` `Score: 5` | `优点：LightSquid能够突出显示"离开网络的数据"(data leaving the
network)，如果部署了其他拦截或DLP工具，它们将识别出敏感数据。`
`缺点:报告对于这个用例是原始的，因为它以"URL"和"数据流"为中心——非常适合用于识别未批准的内容,但对xx来说不够详细。` `Score: 3`  
3."遏制阶段" - Contain | `优点：虽然没有对这个test进行配置，但MCAS具有功能："撤消共享"(revoke sharing),
"隔离文件"(quarantine the file), "应用加密"(apply encryption), "通知用户"(notify the
user), "启动其他工作流"(start an additional
workflow)等...所有有效的遏制步骤。此外，可以部署预防性的、实时的管控措施，以防止将敏感文件上传到一个共享的位置。` `Score: 5` |
`没有部署额外的能力，无法测量。` `Score: 0`  
Total Score | 10/10 | 3/10  
原表格:  
#### 6.5 Results
从数据中可以看出，"零信任网络模型"(Zero Trust Network models)的优势明显大于"管控环境"(the control
environment)。随着场景演变为更深入的应用程序和终端的上下文，"基于边界的安全控制"(perimeter-based security
controls)失去了提供有意义的"可见性"能力、"控制"的能力。
test | Score - Network security | Score - Zero Trust Network  
---|---|---  
"将窃取到的数据传到未经授权的云服务"(Exfiltration of Data to unauthorized cloud service) | 10 |
10  
"失陷的用户凭据"(Compromised user credentials) | 0 | 10  
"邮箱转发"(Mailbox forwarding) | 0 | 8  
"粗心共享了敏感文件"(Inadvertent sharing of sensitive file) | 3 | 10  
**Total** | 13 | 38  
### 7\. Recommendations
建议。
  * 虽然这些测试是在简单的环境中进行的，但是数据说明了：
    * (1)在不同安全模型中识别事件、遏制事件的关键差异。
    * (2)在与云服务一起使用时，还表明了基于边界的模型的不足之处。
为了回答本文前面提出的假设，显而易见，零信任网络对云服务具有可见性，并且可以为事件响应者提供更多的好处。
小结一下，基于网络的安全性无法完成2个目标，因为它缺乏识别特定场景所需的"深度应用程序上下文"(the deep application
context)。这是因为可见性受限于"活动"(activities)的网络角度，如果没有丰富的"数据包重组"(packet
reassembly)和大量上下文，网络设备就没有足够的"智能"(intelligence)来识别活动。
相反，"零信任网络"能够快速识别事件、遏制事件，因为它将"应用程序日志"(the application
logs)作为信号包含在内。这在其他"使用了不同的信号"的场景中是重复的：如来自"身份"(identity)和"终端"(endpoint)的信号。
  * 事件响应者应考虑以下建议：
    * 1."集中化应用身份"(Centralize application identities) - 它可以作为核心PDP，并提供"单一的日志"(a singular logging)由表及里地来检测异常的身份验证和授权。
    * 2."使用应用的活动数据"(Consume application activity data) - 在这个例子中, CASB(cloud access security broker)使用了丰富的活动数据，作为应用内部的用户活动信息的整合点。但"基于网络的安全模型"肯定没有CASB, 这种场景或许可以考虑这种过渡步骤: 将来自应用程序的"数据"合并到SIEM之类的"中央位置"(central location)，并可以配置规则以实现告警。
    * 3."考虑事件响应中集成的威力"(Consider the power of integration in incident response) - 在上面的例子中，识别事件、遏制活动之间有直接的关联，这通常是通过组件之间的内置集成完成的。在这两个阶段之间的时间间隔越短，一个事件就可以越快地得到解决，而且更重要的是，可能降低严重性或影响。
### 8\. Conclusion
  * 这项研究虽然针对"简化版"的企业环境表示，但它强调说明了:
    * 在识别和遏制阶段，当企业结合"云服务"和"零信任原则"时，防御人员和响应人员都明显受益。在应用程序"洞察"(insights)需要比网络"审查"(inspection)提供更多上下文的场景中、或者在必须组合多个信号的场景中，零信任网络原则比传统网络具有优势。
    * 当前的威胁状况作为了外部的推动力，从本研究提供的数据中我们可以看到，当前的威胁状况几乎要求了: 企业在迁移到云服务以实现关键业务功能时，需要积极接受这些原则。
### References
Cichonski, P., Millar, T., Grance, T., & Scarfone, K. (2012). Computer
security incident handling guide: recommendations of the National Institute of
Standards and Technology. Gaithersburg, MD: U.S. Dept. of Commerce, National
Institute of Standards and Technology.
Rose, S., Borchert, O., Mitchell, S., & Connelly, S. (2019). Zero Trust
Architecture, Draft. Gaithersburg, MD: U.S. Dept. of Commerce, National
Institute of Standards and Technology.
Scarfone, K., & Hoffman, P. 800-41 Guidelines on Firewalls and Firewall
Policy, 800-41 Guidelineson Firewalls and Firewall Policy (2009). Retrieved
from 
Class materials for SANS SEC504, Hacker Tools, Techniques, Exploits, and
Incident Handling.(n.d.).
Email Collection. (n.d.). Retrieved January 1, 2020, Retrieved from
.
Verizon. (2019). 2019 Data Breach Investigations Report. Retrieved from  