User: 请解答这个和日志有关的问题Does Hash/Salted password really help when DB is compromised? I came across this article  and got a basic understanding hash, salt and brute force attack.

My question is in the article, the author emphasises how hard it is to reverse the hash/salted password to the original one. But if the intruder has write access to the database, he can


create a new account with pwd "12345678"
record the hash "69410532sfb9234234" (just an example)
change other accounts hashed pwd into "69410532sfb9234234"
login from the front end as other account holder via pwd "12345678"
profit


Did I miss something here? Or is write access to db nearly impossible to get? The latest steam and psn databases don't give any detail if write access is compromised.

Assistant: Hashing passwords is a defense against a specific attack. The attack is: stealing a copy of the entire password file (users table, ldap db, etc), downloading it to one's computer, and attempting to retrieve the users' passwords. The goal of the attack is: to find users who reuse their usernames and passwords across websites, and log into those users' email, bank, social-network, and other accounts.

The hashing-passwords defense works like this: the passwords are not stored directly, and any attempt to retrieve the original passwords requires the attacker to perform an extremely large amount of work, at least compared with the work required to check whether a password the user enters when logging in matches the password on file. There are multiple variations on this defense, including choosing better hashes, salting the hashes, iterating the hashes, etc., the purpose of them being to make the defense better than otherwise and to defend against variants of the attack which are capable of getting around the simpler defenses.

The hashing-passwords defense is not a defense against just any attack. For example, it doesn't help against an attack where the attacker gains arbitrary write access to the database, rewrites all users' passwords to his own, and logs in to all the users' accounts on that website. The defense only defends against the offline password-stealing attack.

So you need to be aware of the different types of attacks, and to defend against each of them using a defense which works against that type of attack.