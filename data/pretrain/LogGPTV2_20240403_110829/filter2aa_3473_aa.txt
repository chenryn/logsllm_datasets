Recurity Labs GmbH 
http://www.recurity-labs.com
July 26, 2009   
Cisco IOS Router Exploitation
A map of the problem space
Abstract
This paper describes the challenges with the exploitation of memory corruption software vulnerabilities 
in Cisco IOS. The goal is to map out the problem space in order to allow for the anticipation of 
developments in the future, as current research suggests that exploitation of such vulnerabilities in the 
wild is not currently the case. By understanding the challenges that an attacker faces, defensive 
strategies can be better planned, a required evolution with the current state of Cisco IOS router 
networks.
Author
Felix 'FX' Lindner
Head of Recurity Labs
Recurity Labs white-paper
Cisco IOS Router Exploitation 
1 Introduction
Successful exploitation of software vulnerabilities in 
Cisco IOS has been shown independently by 
different researchers and groups in the past, 
employing different techniques and basing of 
different assumptions. Notable incidents using 
targeted exploits against Cisco IOS vulnerabilities, 
known or unknown, have however not been 
registered by the security community at large.
With the development of the Cisco Incident 
Response tool and free on-line service1, Recurity 
Labs aimed at the identification of successful 
compromises of Cisco IOS routers. Since the initial 
offering of the service, it became apparent that 
attackers targeting network infrastructure equipment 
still rely largely on mis-configurations and functional 
vulnerabilities, such as CVE-2008-0960. This 
observation indicates a fundamental difference 
between infrastructure attacks and attacks against 
network leaf nodes, such as servers and clients of 
any kind.
This paper will highlight reasons for the lack of binary 
exploits and which developments will herald the 
dawn of reliable remote exploitation of Cisco IOS 
based network infrastructure equipment. The author 
strongly believes that eventually, attacks on network 
infrastructure will use binary exploitation methods to 
massively gain unauthorized access. Therefore, 
research from the offensive point of view must be 
conducted and published, in order to allow the 
defenses to be chosen in anticipation of such future 
developments.
1
Recurity Labs CIR, http://cir.recurity-labs.com
2 Available Vulnerabilities
The first observation about Cisco IOS vulnerabilities 
is, that there is only a small number of them 
published. Cisco Systems' Product Security Advisory 
listing2 mentions 14 vulnerabilities for Cisco IOS in 
2008. Almost all of the advisories suggest that 
exploitation of the described issues will at maximum 
impact cause a denial of service condition. At closer 
inspection, it appears reasonable to accept that most 
of the published vulnerabilities are not a form of 
memory corruption vulnerabilities but rather 
malfunctions caused by insufficient handling of 
exceptional states in processing of certain types of 
network traffic.
2.1
Service Vulnerabilities
In the realm of network leaf nodes, vulnerabilities in 
network exposed services are the most powerful 
points of entry for the attacker. A network exposed 
service suffering from a memory corruption 
vulnerability, preferably before performing any 
authentication, is the primary target for any exploit 
developer. Since the purpose of any server on the 
network is to expose services, attackers have 
historically focused their efforts onto finding 
vulnerabilities in them.
With the widespread adoption of firewalls, for both 
enterprise networks and personal computers, the 
exposure of potentially vulnerable services has 
massively decreased. Attacker focus has shifted 
onto the client-side, where untrusted data is 
constantly handled by a human user, may it be 
through the delivery of email attachments or through 
visiting a web site. Attackers can execute even more 
2
http://www.cisco.com/en/US/products/products_security_advis
ories_listing.html
Recurity Labs GmbH – http://www.recurity-labs.com
2/10
Cisco IOS Router Exploitation 
control over a human controlled web browser than 
they can over an autonomously running service.
Cisco IOS can operate as a network server and 
network client respectively. IOS network services 
include a HTTP server for configuration and 
monitoring, a HTTPS server for the same purpose, 
Telnet and SSH remote access, a FTP and a TFTP 
server for remote flash file system access. Memory 
corruption vulnerabilities in the HTTP, FTP and 
TFTP services have been identified in the past and 
proof-of-concept exploits have been developed and 
published.
For attackers seeking to gain control of important 
network infrastructure, such services are not of 
interest, as well-managed networks will not make 
use of such services on their core routing 
infrastructure.
Routers also need to expose services specific to 
their purpose. This includes services for routing 
protocol communication (EIGRP, OSPF, ISIS, BGP) 
as well as network support services, such as DHCP 
relaying and IPv6 router discovery. In contrast to the 
aforementioned HTTP and FTP servers, these 
services are required in most network designs and 
will be available on a large portion of the networking 
equipment. However, as most routing protocol 
services are vulnerable to spoofed routing protocol 
announcements (unless configured to use MD5 
authentication), they are often guarded and rarely 
exposed to remote networks, e.g. the Internet. 
The Cisco IOS implementation of the BGP service is 
a good example, in which the service will not be 
visible as such to any remote network node. BGP 
requires a TCP session between two configured 
peers. If such TCP session is requested from a 
system not configured as a peer on Cisco IOS, the 
router will respond with a TCP RST packet, exactly 
as if the service is not available or configured on the 
router at all. This simple design reduces the attack 
surface of the BGP service on Cisco IOS to attacks 
from systems that were configured as peers by the 
networking engineer.
Other routing specific services, such as OSPF and 
EIGRP, require the network traffic to be received on 
an IPv4 multicast address, effectively making sure 
that the sender is within the same multicast domain 
as the receiving router. For an attacker on the 
Internet, such services are of little use as targets, 
since they are effectively not reachable from the 
attackers position.
A notable exception from this list is the Cisco IOS IP 
options vulnerability3, where the handling of several 
IPv4 protocols was implemented incorrectly. Here, 
the protocols affected were commonly handled when 
addressed to an IOS router (e.g. ICMP echo 
requests) and the code generating the response was 
suffering from a memory corruption vulnerability in 
the form of a stack based buffer overflow. It is those 
rare vulnerabilities in services that every network 
uses and that are reachable all the way across the 
Internet, that pose a significant threat to Cisco IOS.
In the recent past, Cisco has started to add 
enterprise and carrier services to IOS that will be 
implemented more widely once the IOS versions 
incorporating them are considered stable enough by 
networking engineers. Those new services include4 a 
rapidly growing set of VoIP services, Lawfull 
Interception, SSL VPN termination, Web Service 
Management Agent (allowing configuration of Cisco 
IOS through a SOAP Web Service), XML-PI and 
H.323. The more these services are adapted in 
3
cisco-sa-20070124-crafted-ip-option
4
http://www.cisco.com/en/US/docs/ios/12_4t/release/notes/124
TNEWF.html
Recurity Labs GmbH – http://www.recurity-labs.com
3/10
Cisco IOS Router Exploitation 
enterprise and carrier networks, the more attack 
surface the individual routers expose.
Once these new services are deployed in a wider 
scale, the playing field will significantly change with 
regard to attacks using binary exploitation. 
Therefore, it should be thoroughly considered by 
network security engineers if they want additional 
services on the Cisco IOS routers in their domain of 
influence. If such new services are unavoidable for 
any reason, monitoring and post mortem analysis 
must match the new exposure level of the network 
infrastructure.
2.2
Client Side Vulnerabilities
Cisco IOS suffers from client side vulnerabilities as 
much as any other network client software, probably 
even more so. However, the vulnerabilities identified 
in the past have rarely been even reported to Cisco 
PSIRT for fixing. The reason is probably that client 
side vulnerabilities are only useful to attackers if the 
client is actually used. And since it's likely that Cisco 
wouldn't care about client vulnerabilities, the 
incentive to report them is low.
Network engineers and support personal doesn't 
usually use Cisco IOS routers to access other 
services on the network. Accordingly, attackers can't 
exploit the vulnerabilities, even if they are known to 
them. 
This situation might also change with the introduction 
of new functionality into Cisco IOS. It depends on the 
level of control an attacker can execute over the 
functionality on IOS remotely. If, for example, the 
attacker can cause an IOS router to connect to a 
third party HTTP server for any purpose (e.g. VoIP 
services), the whole range of vulnerabilities in HTTP 
client code becomes available as an attack vector.
But up until now, client side vulnerabilities have not 
played any role in Cisco IOS attacks.
2.3
Transit Vulnerabilities
From the attack vector point of view, the most 
powerful vulnerability class in Cisco IOS are 
vulnerabilities, which can be triggered by traffic 
passing through the router. For the sake of 
terminology, we will call them Transit Vulnerabilities.
Transit Vulnerabilities are extremely rare. Any router 
is built with the goal of forwarding traffic as fast as 
possible from one interface to another. 
Consequently, the number of bytes per packet that 
are inspected before making the forwarding decision 
is kept to an absolute minimum. In any routing 
device above the access layer class, routing 
decisions can often be taken on the interface or line 
card already. In those cases, only the first packet of 
a communication is inspected by higher level 
software and all following packets are processed in 
hardware, hereby eliminating the need to even 
inform the main CPU of the machine that a packet 
passed through the system.
Considering the above, there are situations in which 
a packet gets “punted”, which is Cisco slang for 
pushing packets up from fast forwarding 
mechanisms like CEF to “process switching” or “fast 
switching”, which use the main CPU for forwarding 
decisions. Such situations of course include all traffic 
destined for one of the router's interface addresses, 
but this wouldn't be transit traffic. More interesting 
cases are IP fragment reassembly, packets with IP 
options as well as IPv6 packets that feature hop-by-
hop headers, which need to be processed.
So far, no true Transit Vulnerability is known to the 
author. If one would be discovered and successfully 
exploited, it's effects would be devastating, 
Recurity Labs GmbH – http://www.recurity-labs.com
4/10
Cisco IOS Router Exploitation 
especially if the vulnerability is triggered after the 
forwarding decision was made and the traffic is 
forwarded to the next hop.
3 Architectural Issues
The lack of reliable binary exploits against Cisco IOS 
is also caused by the architecture of the target 
software. IOS is a monolithic binary running directly 
on the hardware of the respective router platform. 
While it features the look and feel of a head-less 
operating system, IOS is better compared to a multi-
threaded UNIX program.
IOS uses a shared flat memory architecture, 
leveraging the CPUs address translation functionality 
only to the point where a global memory map 
comparable to any UNIX ELF binary is created. IOS 
processes are little more than threads. Every 
process has its own CPU context and a block of 
memory as stack, but no further separation from 
other processes is enforced or enforceable. All 
processes on IOS share the same heap, a large 
doubly linked list of memory blocks, referenced by a 
couple of smaller linked lists for free block tracking. 
Depending on the router platform, there are 
additional memory regions that are all accessible 
from every piece of code running on the machine. 
IOS uses a run-to-completion scheduling for its 
processes. All processes that receive execution must 
return to the scheduler in due time, in order to allow 
the execution of other processes. In case a process 
fails to return to the scheduler, a watchdog, 
supported by CPU hardware, is triggered and causes 
a so-called Software Forced Crash, which reboots 
the router.
Cisco IOS routers generally run on PowerPC 32 Bit 
or MIPS 32 or 64 Bit CPUs. Both CPU families 
support privilege separation for implementing kernel 
vs. user land execution. None of these features have 
been observed to be used in IOS so far. Any 
execution is performed on the highest privilege level 
the CPU supports, commonly referred to as 
supervisor level. 
As a consequence of the architecture discussed 
above, the default behavior in case of a CPU 
exception or software detected but unrecoverable 
data structure consistency problem is to reboot the 
entire device. The architecture of IOS does not allow 
for any type of partial restart, since a misbehaving 
process could have already written into any writable 
memory area without the CPU noticing. Therefore, 
the only safe action is to reboot the entire system.
This behavior increases the difficulties for reliable 
exploitation of memory corruption vulnerabilities.
On common operating system platforms, primarily 
the Windows platform, using CPU exception 
propagation as a way of gaining code execution is a 
well established practice. On Cisco IOS however, 
every CPU exception will cause the machine to 
reboot. This might appear as acceptable for an 
attacker, but given that network infrastructure of any 
measurable importance is monitored for crashes and 
reboots of its components 24 by 7, it raises the bar 
for reliable exploitation.
The same problem also concerns any shellcode that 
would be executed once control over the instruction 
flow is obtained. Not only should the shellcode not 
trigger any CPU exception during its execution, it 
must also clean up and attempt to return execution 
to the exploited IOS process in order to allow normal 
processing to continue.
Finally, the allocation of process stacks on the 
common heap results in another challenge for 
exploitation. Stack based buffer overflows are the 
Recurity Labs GmbH – http://www.recurity-labs.com
5/10
Cisco IOS Router Exploitation 
most simple and versatile memory corruption 
vulnerabilities, and IOS is not any different in that 
respect. Unfortunately, the stacks allocated by 
default to an IOS process are relatively small (6000 
bytes) and the call graph of functions within the code 
is relatively short, so that buffers that could overflow 
are often close to the upper bound of the stack and 
hence the heap block. Overflowing the buffer with 
too much data will often cause overwriting of the next 
heap block's header. Once the heap header is 
destroyed, any allocation or deallocation of memory 
by any process on IOS will trigger a partial heap 
integrity check and cause the router to reboot when 
the corrupted heap header is spotted. 
Additionally, IOS features a process called 
CheckHeaps, which will periodically (every 30 
seconds) traverse the entire heap linked list and 
verify its integrity, also causing a reboot if any 
inconsistency is found.
Given that both CPU families in Cisco equipment 
employ fixed size 32 Bit instructions, a stack based 
buffer overflow is often hard to exploit within the 
bounds of available space up to the header of the 
following heap block.
4 The Return Address
Cisco IOS images are loaded similar to a regular 
UNIX program in ELF format. When initialized, the 
memory is separated into read-only sections for 