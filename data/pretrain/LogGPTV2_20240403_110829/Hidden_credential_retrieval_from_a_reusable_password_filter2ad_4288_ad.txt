our construction will not need a pairing (though it nonethe-
less remains compatible with pairing-friendly groups). The
Boldyreva signature is derived from the Boneh-Lynn-Shacham
short signature scheme of [12], it is very eﬃcient, but it re-
quires a non-standard discrete-log-type hardness assumption
for its security reduction, in the random-oracle model.
We modify that scheme to build a concrete HCR protocol
in prime-order abelian groups under the same assumption
235erator g ∈ G.
lets h = gs.
γ = σ−1 Msg.
2. P selects a random integer s ∈ {1, . . . , p − 1}, and
3. P computes the signature σ = H[Pwd]s and sets
(though without the pairing requirement). The concrete
protocol is very simple, very eﬃcient, and can be imple-
mented in a broad variety of discrete-log-hard prime-order
abelian groups, including those constructed on elliptic curves
(pairing-friendly or not, such as those standardized by NIST
for elliptic-curve ECDSA), as well as multiplicative sub-
groups of ﬁnite ﬁelds as in the original DSA standard.
3.2.1 Protocol Description
Let G be a (multiplicatively written) cyclic abelian group
of order p, for some cryptographically large public prime p.
Let G× = G \ {1G} be the set of all non-neutral elements
in G. Let then H : {0, 1}n → G× be a cryptographic hash
function, which is to be viewed as a random oracle.
A concrete HCR scheme can therefore be constructed as
follows:
Store : (cid:104)P[Pwd, Msg],S(cid:105) (cid:55)→ (cid:104)/◦, Ctx(cid:105)
where Pwd ∈ {0, 1}n and Msg ∈ G
1. P picks an arbitrary (e.g., random or ﬁxed) gen-
4. P hands to S the public values g, h, γ and the
secret key s.
Retrieve : (cid:104)Q[Pwd(cid:48)],S[Ctx(cid:48)](cid:105) (cid:55)→ (cid:104)Msg(cid:48), /◦(cid:105)
where Pwd(cid:48) ∈ {0, 1}n
1. Q retrieves from S the public values g, h, γ .
2. Q picks a random integer r ∈ {0, . . . , p − 1} and
sends the blinded request µ = gr H[Pwd(cid:48)].
3. S responds with the blind signature β = µs.
4. Q unblinds the signature σ(cid:48) = h−r β, and de-
crypts the message Msg(cid:48) = σ(cid:48) γ.
3.2.2 Security Properties
In order to quantify the adversaries’ success probality, we
need some additional notation.
Recall that t1 and t2 are the number of unique valid
queries to f1 and f2 respectively. We deﬁne n1 and n2 as
the number of negative responses to those queries, so that
n1 ≤ t1 and n2 ≤ t2 (and n2 ≥ t2 − 1).
For simplicity of the arithmetic, we shall also assume that
each query to f2 is always preceded by an identical query to
f1, and that the query to f2 will not be issued (or counted)
if the answer from f1 was already negative. Furthermore we
assume that queries f1 then f2 are systematically made on
the ﬁnal guess Msg(cid:48) output by A.
We also suppose that the password Pwd is always drawn
uniformly from a public dictionary D, and that, in the view
of the adversary, the prior distribution of the plaintext Msg
is uniform over the whole domain {0, 1}k (and which in the
concrete protocol is further represented as an element of G).
This is because, in the security deﬁnitions, Msg is drawn
from a subset M about which the adversary has no prior
information other than M ⊆ {0, 1}k.
Proposition 3
(Outsider Security). In this setting,
suppose that the complexity assumption from [9] holds in G
for the chosen security parameter λ, for the class of all PPT
algorithms running in time T . Then, no (p, q, t1, t2)-outsider
adversary A running in time T can recover the stored mes-
sage Msg ∈ M ⊆ {0, 1}k with a probability that exceeds the
following bound:
Pr[Af1,f2 wins] ≤ min{q, t2}
|D| − n1
+
t2
2k − n1
+ negl[λ] .
Proposition 4
(Insider Security). In the above set-
ting, in the random-oracle model without any computational
hardness assumption, every (r, t1, t2)-insider adversary AS
that recovers the stored message Msg ∈ M ⊆ {0, 1}k does so
with probability at most:
Pr[Af1,f2S
wins] ≤
t2
|D| − n1
+
t2
2k − n1
.
Analogous bounds on the probability of recovering the
user password Pwd can be similarly stated.
4. CONCLUSION
We have proposed the notion of Hidden Credential Re-
trieval, a class of protocols that lets the rest of us — people
with limited memory — defer to remote entities the task
of storing our access keys to other online services, whilst
placing the minimum possible amount of trust on the stor-
age facility and no trust whatsoever on the communication
channels.
Although the solution appears quite simple in retrospect,
there were a few interesting issues regarding the handling
of the threat model and the security deﬁnitions, for payload
plaintexts that may beneﬁt from having little or no intrinsic
redundancy. In particular, HCR protocols have to handle
the combined threat of outsider and insider attackers, which
must both be repelled in the best possible way, regardless of
the oﬄine testability of the access keys that is being placed
in remote storage.
We proposed a very simple though very eﬃcient construc-
tion of HCR from a discrete-log-based hardness assumption
in plain prime-order algebraic groups. The construction it-
self is not new, unlike its application. The construction is a
straightforward modiﬁcation of Boldyreva’s eﬃcient unique
blind signature. On the downside, it suﬀers from relying
on a strong computational assumption in the random-oracle
model. On the upside, this HCR protocol provides uncondi-
tional security for the user password against insider attack-
ers, which is arguably the most important consideration. Of
course, other trade-oﬀs are possible, and we leave it as an
open problem to motivate and devise HCR schemes with
diﬀerent properties, and/or from weaker assumptions.
The notion of HCR is important because it has a very
clear and immediate application for the Internet: a “remote
key locker” that can be operated with a short password, and
yet does not require the remote server to be trusted. In one
sentence, the practical problem it solves for all of us, Web
users, is an answer to the simple question,
How can I store all of my Web passwords and
retrieve them safely on the Web itself ?
We leave it as a theoretical open problem to reﬁne the
HCR security model, as well as to construct an eﬃcient HCR
scheme from reasonable assumptions in the standard model.
2365. REFERENCES
[1] Michel Abdalla, Mihir Bellare, Dario Catalano, Eike
Kiltz, Tadayoshi Kohno, Tanja Lange, John Malone
Lee, Gregory Neven, Pascal Paillier, and Haixia Shi.
Searchable encryption revisited: Consistency
properties, relation to anonymous IBE, and
extensions. In Advances in Cryptology—CRYPTO
2005, pages 205–22, 2005.
[2] Mihir Bellare and Silvio Micali. Non-interactive
oblivious transfer and applications. In Advances in
Cryptology—CRYPTO 1989, pages 547–57, 1989.
[3] Mihir Bellare, David Pointcheval, and Philip Rogaway.
Authenticated key exchange secure against dictionary
attacks. In Advances in Cryptology—EUROCRYPT
2000, pages 139–55, 2000.
[4] Steven M. Bellovin and Michael Merritt. Encrypted
key exchange: Password-based protocols secure
against dictionary attacks. In IEEE Symposium on
Security and Privacy—SP 1992, pages 72–84, 1992.
using Diﬃe-Hellman. In Advances in
Cryptology—EUROCRYPT 2000, 2000.
[16] Gilles Brassard, Claude Cr´epeau, and Jean-Marc
Robert. All-or-nothing disclosure of secrets. In
Advances in Cryptology—CRYPTO 1986, pages
234–38, 1986.
[17] Christian Cachin, Silvio Micali, and Michael Stadler.
Computationally private information retrieval with
polylogarithmic communication. In Advances in
Cryptology—EUROCRYPT 1999, pages 402–14, 1999.
[18] Jan Camenisch, Gregory Neven, and abhi shelat.
Simulatable adaptive oblivious transfer. In Advances
in Cryptology—EUROCRYPT 2007, pages 573–90,
2007.
[19] Ran Canetti, Shai Halevi, Jonathan Katz, Yehuda
Lindell, and Philip MacKenzie. Universally
composable password-based key exchange. In
Advances in Cryptology—EUROCRYPT 2005, pages
404–21, 2005.
[5] Steven M. Bellovin and Michael Merritt. Augmented
[20] Ran Canetti and Hugo Krawczyk. Analysis of
encrypted key exchange. In ACM Conference on
Computer and Communications Security—CCS 1993,
pages 224–50, 1993.
[6] Charles H. Bennett, Gilles Brassard, Claude Cr´epeau,
and M.-H. Skubiszewska. Practical quantum oblivious
transfer. In Advances in Cryptology—CRYPTO 1991,
pages 351–66, 1991.
[7] Ian F. Blake, Gadiel Seroussi, and Nigel P. Smart,
editors. Advances in Elliptic Curve Cryptography,
volume 317 of London Mathematical Society Lecture
Note Series. Cambridge University Press, 2005.
[8] Simon Blake-Wilson, Don Johnson, and Alfred
Menezes. Key agreement protocols and their security
analysis. In Proceedings of the Sixth IMA
International Conference on Cryptography and
Coding, pages 30–45, 1997.
[9] Alexandra Boldyreva. Threshold signatures,
multisignatures and blind signatures based on the
gap-Diﬃe-Hellman-group signature scheme. In Public
Key Cryptography—PKC 2003, pages 31–46, 2003.
key-exchange protocols and their use for building
secure channels. In Advances in
Cryptology—EUROCRYPT 2001, pages 453–74, 2001.
[21] David Chaum. Blind signatures for untraceable
payments. In Advances in Cryptology—CRYPTO
1982, pages 199–203, 1982.
[22] Benny Chor, Oded Goldreich, Eyal Kushilevitz, and
Madhu Sudan. Private information retrieval. In IEEE
Symposium on Foundations of Computer
Science—FOCS 1995, pages 41–51, 1995.
[23] Yevgeniy Dodis and Adam Smith. Entropic security
and the encryption of high-entropy messages. In
Theory of Cryptography Conference—TCC 2005, 2005.
[24] Shimon Even, Oded Goldreich, and Abraham Lempel.
A randomized protocol for signing contracts. In
Advances in Cryptology—CRYPTO 1982, pages
205–10, 1982.
[25] D. Florencio and Cormac Herley. Klassp: Entering
passwords on a spyware infected machine using a
shared-secret proxy. In Proc. ACSAC 2006, 2006.
[10] Dan Boneh, Giovanni Di Crescenzo, Rafail Ostrovsky,
[26] Warwick Ford and Burton S. Kaliski Jr.
and Giuseppe Persiano. Public key encryption with
keyword search. In Advances in
Cryptology—EUROCRYPT 2004, pages 506–22, 2004.
[11] Dan Boneh, Eyal Kushilevitz, Rafail Ostrovsky, and
W. Skeith. Public key encryption that allows PIR
queries. In Advances in Cryptology—CRYPTO 2007,
pages 50–67, 2007.
Server-assisted generation of a strong secret from a
password. In Proc. IEEE 9th Int. Workshop on
Enabling Technologies: Infrastructure for Collaborative
Enterprises, pages 176–80. IEEE Press, 2000.
[27] Steven Galbraith, Kenneth Paterson, and Nigel Smart.
Pairings for cryptographers. Cryptology ePrint
Archive, Report 2006/165, 2006.
[12] Dan Boneh, Ben Lynn, and Hovav Shacham. Short
[28] Craig Gentry, Philip MacKenzie, and Zulﬁkar
signatures from the Weil pairing. In Advances in
Cryptology—ASIACRYPT 2001, pages 514–32, 2001.
[13] Xavier Boyen. Halting password puzzles –
hard-to-break encryption from human-memorable
keys. In 16th USENIX Security
Symposium—SECURITY 2007, pages 119–134. The
USENIX Association, 2007.
[14] Xavier Boyen and Brent Waters. Anonymous
hierarchical identity-based encryption (without
random oracles). In Advances in
Cryptology—CRYPTO 2006, pages 290–307, 2006.
[15] Victor Boyko, Philip MacKenzie, and Sarvar Patel.
Provably secure password-authenticated key exchange
Ramzan. Password authenticated key exchange using
hidden smooth subgroups. In ACM Conference on
Computer and Communications Security—CCS 2005,
pages 299–309. ACM Press, 2005.
[29] Craig Gentry, Philip MacKenzie, and Zulﬁkar
Ramzan. A method for making password-based key
exchange resilient to server compromise. In Advances
in Cryptology—CRYPTO 2006, LNCS, pages 142–59.
Springer-Verlag, 2006.
[30] Oded Goldreich, Silvio Micali, and Avi Wigderson.
How to play any mental game or a completeness
theorem for protocols with honest majority. In ACM
Symposium on Theory of Computing—STOC 1987,
237pages 218–29, 1987.
[31] Matthew Green and Susan Hohenberger. Blind
identity-based encryption and simulatable oblivious
transfer. In Advances in Cryptology—ASIACRYPT
2007, 2007.
[32] Shai Halevi and Yael Tauman Kalai. Smooth
projective hashing and two-message oblivious transfer.
Cryptology ePrint Archive, Report 2007/118, 2007.
[33] Shai Halevi and Hugo Krawczyk. Public-key
cryptography and password protocols. In ACM
Conference on Computer and Communications
Security—CCS 1998, pages 122–31. ACM Press, 1998.
[34] D. N. Hoover and B. N. Kausik. Software smart cards
via cryptographic camouﬂage. In IEEE Symposium on
Security and Privacy—SP 1999, 1999.
[35] Jonathan Katz and Rafail Ostrovsky. Round-optimal
secure two-party computation. In Advances in
Cryptology—CRYPTO 2004, pages 335–54, 2004.
[36] Jonathan Katz, Rafail Ostrovsky, and Moti Yung.
Eﬃcient password-authenticated key exchange using
human-memorable passwords. In Advances in
Cryptology—CRYPTO 2001, 2001.
[37] Joe Kilian. Founding cryptography on oblivious
transfer. In ACM Symposium on Theory of
Computing—STOC 1988, pages 20–31, 1988.
[38] Kaoru Kurosawa and W. Ogata. Oblivious keyword
search. Journal of Complexity, 20(2-3):356–71, 2004.
[39] Helger Lipmaa. An oblivious transfer protocol with
log-squared communication. Cryptology ePrint
Archive, Report 2004/063, 2004.
[40] Moni Naor and Benny Pinkas. Oblivious transfer with
adaptive queries. In Advances in
Cryptology—CRYPTO 1999, pages 573–90, 1999.
[41] Moni Naor and Benny Pinkas. Eﬃcient oblivious
transfer protocols. In Symposium on Discrete
Algorithms—SODA 2001, pages 448–57, 2001.
[42] Andreas Pashalidis. http://www.kyps.net, 2007.
[43] Andreas Pashalidis and Chris J. Mitchell. Impostor: a
single sign-on system for use from untrusted devices.
In Proc. IEEE Globecom 2004, 2004.
[44] Michael Rabin. How to exchange secrets by oblivious
transfer. Technical Report TR-81, Harvard University,
Aiken Computation Laboratory, 1981.
[45] A. Russell and Y. Wang. How to fool an unbounded
adversary with a short key. In Advances in
Cryptology—EUROCRYPT 2002, 2002.
[46] Andrew Yao. How to generate and exchange secrets.
In IEEE Symposium on Foundations of Computer
Science—FOCS 1986, pages 162–67, 1986.
238