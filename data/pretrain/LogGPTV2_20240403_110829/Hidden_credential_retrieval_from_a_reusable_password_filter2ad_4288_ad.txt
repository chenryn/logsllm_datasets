### Introduction

Our construction does not require a pairing, although it remains compatible with pairing-friendly groups. The Boldyreva signature is derived from the Boneh-Lynn-Shacham (BLS) short signature scheme [12]. This scheme is highly efficient but relies on a non-standard discrete-log-type hardness assumption for its security reduction in the random-oracle model.

We modify this scheme to build a concrete Hidden Credential Retrieval (HCR) protocol in prime-order abelian groups under the same assumption, but without the pairing requirement. The resulting protocol is simple, efficient, and can be implemented in a wide variety of discrete-log-hard prime-order abelian groups, including those constructed on elliptic curves (pairing-friendly or not, such as those standardized by NIST for elliptic-curve ECDSA), as well as multiplicative subgroups of finite fields as in the original DSA standard.

### Protocol Description

Let \( G \) be a (multiplicatively written) cyclic abelian group of order \( p \), where \( p \) is a cryptographically large public prime. Let \( G^{\times} = G \setminus \{1_G\} \) be the set of all non-neutral elements in \( G \). Let \( H: \{0, 1\}^n \to G^{\times} \) be a cryptographic hash function, which is modeled as a random oracle.

#### Store
- **Input:** \( \langle P[\text{Pwd}, \text{Msg}], S \rangle \)
- **Output:** \( \langle \oslash, \text{Ctx} \rangle \)
- **Steps:**
  1. \( P \) picks an arbitrary (e.g., random or fixed) generator \( g \in G \).
  2. \( P \) selects a random integer \( s \in \{1, \ldots, p-1\} \).
  3. \( P \) computes \( h = g^s \) and \( \gamma = \sigma^{-1} \text{Msg} \).
  4. \( P \) hands to \( S \) the public values \( g, h, \gamma \) and the secret key \( s \).

#### Retrieve
- **Input:** \( \langle Q[\text{Pwd}'], S[\text{Ctx}'] \rangle \)
- **Output:** \( \langle \text{Msg}', \oslash \rangle \)
- **Steps:**
  1. \( Q \) retrieves from \( S \) the public values \( g, h, \gamma \).
  2. \( Q \) picks a random integer \( r \in \{1, \ldots, p-1\} \) and sends the blinded request \( \mu = g^r H[\text{Pwd}'] \).
  3. \( S \) responds with the blind signature \( \beta = \mu^s \).
  4. \( Q \) unblinds the signature \( \sigma' = h^{-r} \beta \) and decrypts the message \( \text{Msg}' = \sigma' \gamma \).

### Security Properties

To quantify the adversary's success probability, we introduce some additional notation. Let \( t_1 \) and \( t_2 \) be the number of unique valid queries to \( f_1 \) and \( f_2 \), respectively. Define \( n_1 \) and \( n_2 \) as the number of negative responses to these queries, so that \( n_1 \leq t_1 \) and \( n_2 \leq t_2 \) (and \( n_2 \geq t_2 - 1 \)).

For simplicity, assume each query to \( f_2 \) is always preceded by an identical query to \( f_1 \), and the query to \( f_2 \) will not be issued (or counted) if the answer from \( f_1 \) was already negative. Furthermore, assume that queries \( f_1 \) and \( f_2 \) are systematically made on the final guess \( \text{Msg}' \) output by \( A \).

Assume the password \( \text{Pwd} \) is drawn uniformly from a public dictionary \( D \), and in the view of the adversary, the prior distribution of the plaintext \( \text{Msg} \) is uniform over the whole domain \( \{0, 1\}^k \) (and which in the concrete protocol is further represented as an element of \( G \)). This is because, in the security definitions, \( \text{Msg} \) is drawn from a subset \( M \) about which the adversary has no prior information other than \( M \subseteq \{0, 1\}^k \).

**Proposition 3 (Outsider Security):** In this setting, suppose the complexity assumption from [9] holds in \( G \) for the chosen security parameter \( \lambda \), for the class of all PPT algorithms running in time \( T \). Then, no \((p, q, t_1, t_2)\)-outsider adversary \( A \) running in time \( T \) can recover the stored message \( \text{Msg} \in M \subseteq \{0, 1\}^k \) with a probability that exceeds the following bound:
\[ \Pr[A_{f_1, f_2} \text{ wins}] \leq \min\{q, t_2\} \left( \frac{1}{|D| - n_1} + \frac{t_2}{2^k - n_1} \right) + \text{negl}[\lambda]. \]

**Proposition 4 (Insider Security):** In the above setting, in the random-oracle model without any computational hardness assumption, every \((r, t_1, t_2)\)-insider adversary \( A_S \) that recovers the stored message \( \text{Msg} \in M \subseteq \{0, 1\}^k \) does so with probability at most:
\[ \Pr[A_{f_1, f_2, S} \text{ wins}] \leq \frac{t_2}{|D| - n_1} + \frac{t_2}{2^k - n_1}. \]

Analogous bounds on the probability of recovering the user password \( \text{Pwd} \) can be similarly stated.

### Conclusion

We have proposed the notion of Hidden Credential Retrieval (HCR), a class of protocols that allows users with limited memory to defer the task of storing their access keys to other online services to remote entities, while placing the minimum possible amount of trust on the storage facility and no trust whatsoever on the communication channels.

Although the solution appears quite simple in retrospect, there were several interesting issues regarding the handling of the threat model and the security definitions, particularly for payload plaintexts that may benefit from having little or no intrinsic redundancy. HCR protocols must handle the combined threat of outsider and insider attackers, which must both be repelled in the best possible way, regardless of the offline testability of the access keys being placed in remote storage.

We proposed a very simple yet highly efficient construction of HCR from a discrete-log-based hardness assumption in plain prime-order algebraic groups. The construction itself is a straightforward modification of Boldyreva’s efficient unique blind signature. While it relies on a strong computational assumption in the random-oracle model, this HCR protocol provides unconditional security for the user password against insider attackers, which is arguably the most important consideration. Other trade-offs are possible, and we leave it as an open problem to motivate and devise HCR schemes with different properties and/or from weaker assumptions.

The notion of HCR is important because it has a clear and immediate application for the Internet: a "remote key locker" that can be operated with a short password, and yet does not require the remote server to be trusted. In one sentence, the practical problem it solves for all Web users is an answer to the simple question: "How can I store all of my Web passwords and retrieve them safely on the Web itself?"

We leave it as a theoretical open problem to refine the HCR security model and to construct an efficient HCR scheme from reasonable assumptions in the standard model.

### References

[1] Michel Abdalla, Mihir Bellare, Dario Catalano, Eike Kiltz, Tadayoshi Kohno, Tanja Lange, John Malone Lee, Gregory Neven, Pascal Paillier, and Haixia Shi. Searchable encryption revisited: Consistency properties, relation to anonymous IBE, and extensions. In Advances in Cryptology—CRYPTO 2005, pages 205–22, 2005.

[2] Mihir Bellare and Silvio Micali. Non-interactive oblivious transfer and applications. In Advances in Cryptology—CRYPTO 1989, pages 547–57, 1989.

[3] Mihir Bellare, David Pointcheval, and Philip Rogaway. Authenticated key exchange secure against dictionary attacks. In Advances in Cryptology—EUROCRYPT 2000, pages 139–55, 2000.

[4] Steven M. Bellovin and Michael Merritt. Encrypted key exchange: Password-based protocols secure against dictionary attacks. In IEEE Symposium on Security and Privacy—SP 1992, pages 72–84, 1992.

[5] Dan Boneh, Ben Lynn, and Hovav Shacham. Short signatures from the Weil pairing. In Advances in Cryptology—ASIACRYPT 2001, pages 514–32, 2001.

[6] Alexandra Boldyreva. Threshold signatures, multisignatures and blind signatures based on the gap-Diffie-Hellman-group signature scheme. In Public Key Cryptography—PKC 2003, pages 31–46, 2003.

[7] Craig Gentry, Philip MacKenzie, and Zulfiqar Ramzan. Password authenticated key exchange using hidden smooth subgroups. In ACM Conference on Computer and Communications Security—CCS 2005, pages 299–309. ACM Press, 2005.

[8] Jonathan Katz and Rafail Ostrovsky. Round-optimal secure two-party computation. In Advances in Cryptology—CRYPTO 2004, pages 335–54, 2004.

[9] Moni Naor and Benny Pinkas. Efficient oblivious transfer protocols. In Symposium on Discrete Algorithms—SODA 2001, pages 448–57, 2001.

[10] Andrew Yao. How to generate and exchange secrets. In IEEE Symposium on Foundations of Computer Science—FOCS 1986, pages 162–67, 1986.