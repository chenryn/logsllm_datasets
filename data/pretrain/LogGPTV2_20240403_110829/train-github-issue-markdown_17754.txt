### Environment Details
- **Apache Airflow Version**: 1.10.9
- **Kubernetes Version**: 1.15.11
- **Cloud Provider**: Google Cloud

### Issue Description
I have observed a significant degradation in the performance of the Airflow webserver over time. Specifically, the CPU usage of the webserver pods reached 100%, causing the user interface (UI) and API to become extremely slow and, at times, completely unresponsive.

Upon investigation, it appears that the issue is related to the number of task instances stored in the `task_instance` table. When I had over 100,000 task instances, the webserver's performance was severely impacted. The process consuming the most CPU on the webserver pods was identified as gunicorn. After cleaning up the `task_instance` table, the CPU usage dropped significantly. However, with around 30,000 completed tasks, I am now seeing CPU spikes again.

Additionally, the issue seems to resolve itself when all DAGs are disabled, suggesting that the webserver may be executing a query periodically that consumes a large amount of CPU resources.

### Expected Behavior
The number of completed tasks should not affect the performance of the Airflow webserver.

### Steps to Reproduce
1. Generate 100,000 task instances.
2. Enable 10 DAGs in Airflow.
3. Observe high CPU usage on the webserver pods, leading to an unresponsive UI and API.

### Screenshot
![Screenshot from 2020-05-07 10-43-27](https://user-images.githubusercontent.com/57914365/81267874-d777f300-904f-11ea-9edf-3a389e5742e3.png)

---

This revised version provides a clear and structured description of the issue, including the environment details, the problem, expected behavior, and steps to reproduce.