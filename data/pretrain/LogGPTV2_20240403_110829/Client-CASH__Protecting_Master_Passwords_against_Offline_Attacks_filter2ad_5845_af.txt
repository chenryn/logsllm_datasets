(cid:16) (cid:96)j−1
i−1(cid:81)
j=1
k
(cid:96)j
j=1
Pr[pwdu = pwd∗] × Pr[Ei] × Pr
=
1
|P| Pr[Ei]
=
1
|P| Pr[Ei]
|i−1(cid:84)
|Si|/|P|
j |/|P|
T c
i−1(cid:89)
j=1
(cid:96)j
(cid:96)j − 1
j=1
=
B
k|P| Pr[Ei]bi
In the case where i = 1, the probability is simply B
stopping times before hashing passwords for the ﬁrst time. We can now calculate Pb to be
k|P| Pr[E1]b1 since the adversary has no information about
However, the adversary has control over the particular strategy to execute. Let Padv denote the probability
of success for an optimal adversary. Then Padv,B = max
b∈F
Pb =
n(cid:88)
i=1
B
k|P|
Pb =
=
B
k|P| max
b∈F
Pr[Adversary succeeds ∩ S(pwd∗, ou) = i]
n(cid:88)
Pr[E1]b1 +
Pr[E1]b1 +
n(cid:88)
i=2
i−1(cid:89)
Pr[Ei]bi
i=2
j=1
(cid:96)j
(cid:96)j − 1
i−1(cid:89)
(cid:18) (cid:96)j
(cid:96)j − 1
j=1
Pr[Ei]bi
(cid:19) .
24
As an interesting special case of importance to us, let (cid:96)i = n for all i ≤ n. Then
Padv,B =
B
k|P| max
b∈F
=
B
k|P| max
b∈F
(cid:40)
(cid:40) n(cid:88)
i=1
Pr[E1]b1 +
Pr[Ei]bi
(cid:19)i−1(cid:41)
n(cid:88)
(cid:18) n
i=2
(cid:18) n
(cid:19)i−1(cid:41)
n − 1
Pr[Ei]bi
n − 1
B.3 Dominant Adversary Strategies
Calculating the optimal Padv for ﬁxed Pr[Ej]’s may be made eﬃcient if we consider dominant strategies of
the adversary; i.e. b∗ ∈ F which yield greater values of Padv than other b ∈ F independent of the values
of Pr[Ej]’s. Let Ai ⊆ F denote the collection of members of F such that bi is maximized. Formally, we
Ai is the collection of
deﬁne Ai := {b ∈ F : ∀b(cid:48) ∈ F, bi ≥ b(cid:48)
dominant strategies of the adversary.
i}. Then we claim that the collection F ∗ :=
n(cid:83)
i=1
Reminder of Theorem 2.
strategies are given by the collection of sets Ai = {b ∈ FB : ∀(cid:126)b(cid:48) ∈ FB, bi ≥ b(cid:48)
F ∗
B :=
Assume that O is constructed as in Theorem 1. The dominant adversary
i} for 1 ≤ i ≤ n. Let
Ai. Then
n(cid:83)
i=1
Proof of Theorem 2. Recall that the feasible strategy region F ⊆ [0, 1]n for a system with up to n rounds
of hashing is deﬁned as follows. For all b ∈ F ,
Padv,B =
B
k|P| max
b∈F ∗
B
• b1 ≤ min
• bm ≤ (cid:96)m−1−1
(cid:96)m−1
n(cid:88)
Pr[Ei]bi
i=2
j=1
i−1(cid:89)
(cid:18) (cid:96)j
(cid:96)j − 1
(cid:19)
• n(cid:88)
bi = 1
i=1
(cid:18) (cid:96)j
(cid:96)j − 1
i−1(cid:89)
j=1
(cid:19) .
for m > 1.
n(cid:88)
i=2
Pr[Ei]bi
(cid:110)
Pr[E1]b1 +
(cid:111)
Pr[E1]b1 +
(cid:16) (cid:96)j
(cid:17)
i−1(cid:81)
1, k|P|
bm−1
B
(cid:96)j−1
and that
Padv,B =
Noting that f (b) = Pr[E1]b1 +
n(cid:80)
B
k|P| max
b∈F
Pr[Ei]bi
i=2
j=1
is linear in b, we can rewrite the formula for Padv,B
as a linear optimization problem over the feasible strategy region F . This is shown in Optimization Goal 2.
We note that the maximum does indeed exist since it can be shown that the feasible region F is closed and
bounded.
It is a well known fact that for linear optimization, maxima are attained at the vertices of the feasible
region; that is, for a m-variable linear optimization, the maxima occur at the intersection of m constraints
(provided we have at least this many constraints). We show that all such maxima of Optimization Goal 2
are also elements of F ∗
n(cid:83)
Ai.
We ﬁrst observe that Optimization Goal 2 is eﬀectively an optimization in n− 1 variables; once the values
of n − 1 variables are determined, the last one can be calculated using Constraint n + 1. In particular, we
B =
i=1
25
(cid:110)
k|P| f (b) subject to
Input Parameters: B, k, n, P, Pr[Ej], (cid:96)j
Variables: b = (b1, . . . , bn)
maximize Padv,B = B
(Constraint 1) b1 ≤ min
(Constraint m) bm ≤ (cid:96)m−1−1
(Constraint n) 0 ≤ bn ≤ (cid:96)n−1−1
bn−1
(Constraint n + 1) b1 + . . . + bn = 1
1, k|P|
(cid:111)
(cid:96)m
(cid:96)n
B
bm−1 for 1  j
n(cid:88)
(cid:18) (cid:96)i−1 − 1
i=1
bi = 1
(cid:19)
•
j(cid:89)
i=2
(cid:96)i
b1
We can now reduce our linear program to a much smaller set of constraints:
However, this new feasible system (which has the same objective function as the original linear program)
has only 2 variables; each bi is directly proportional to either b1 or bj, so for some α, β > 0,
αb1 + βbj = 1 ⇒ b1 = 1−βbj
α . Thus, we can reduce the system to just one variable. To calculate the
maximum of this new system, we need only pick one constraint to set to equality. If we pick the ﬁrst to set
to equality, then b1 is maximized, so by Case 1, (cid:126)b ∈ A1 ⊆ F ∗
B. Otherwise, if we set the second constraint to
equality, bj is equal to its upper bound, which is proportional to b1. By maximizing b1, we thus maximize
bj so (cid:126)b ∈ Aj ⊆ F ∗
B.
bi =
i=1
n(cid:80)
26
Thus since every potential maximum over the feasible region FB is in F ∗
B ⊆ F ,
Pr[E1]b1 +
n(cid:88)
Pr[E1]b1 +
n(cid:88)
i=2
i=2
Padv =
B
k|P| max
b∈F
=
B
k|P| max
b∈F ∗
B
(cid:18) (cid:96)j
i−1(cid:89)
(cid:18) (cid:96)j
i−1(cid:89)
j=1
(cid:96)j − 1
(cid:96)j − 1
(cid:19)
(cid:19)
Pr[Ei]bi
Pr[Ei]bi
j=1
(cid:3)
27