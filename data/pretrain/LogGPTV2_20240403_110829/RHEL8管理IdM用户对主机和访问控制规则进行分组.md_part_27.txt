    [**Delete**]{.strong} 按钮： [**Remove
    权限对话框将打开**]{.strong}。
:::
:::
::: section
::: titlepage
# []{#managing-role-based-access-controls-using-the-idm-web-ui_managing-users-groups-hosts.html#managing-roles-in-the-idm-web-ui_managing-role-based-access-controls-using-the-idm-web-ui}在 IdM Web UI 中管理角色 {.title}
:::
本节论述了如何使用 Web 界面(IdM Web UI)在 Identity
Management(IdM)中管理角色。
::: itemizedlist
**先决条件**
-   管理 IdM 或 [**User Administrator**]{.strong} 角色的管理员特权。
-   您已登录到 IdM Web UI。[详情请参阅在 Web 浏览器中访问 IdM Web
    UI](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_identity_management/accessing-the-ipa-web-ui-in-a-web-browser_configuring-and-managing-idm){.link}。
-   现有特权.[有关权限的详情，请参阅在 IdM Web UI
    中管理权限](#managing-role-based-access-controls-using-the-idm-web-ui_managing-users-groups-hosts.html#managing-privileges-in-the-idm-web-ui_managing-role-based-access-controls-using-the-idm-web-ui "在 IdM Web UI 中管理权限"){.link}。
:::
::: orderedlist
**流程**
1.  要添加新角色，请在 [**IPA Server**]{.strong}
    [**选项卡中打开基于角色的访问控制子菜单并选择 []{.strong}
    角色**]{.strong} ：
    [![Roles task](images/idm-roles_task.png)]{.inlinemediaobject}
2.  角色列表会打开。[**单击基于角色的访问控制指令列表顶部的添加按钮**]{.strong}。
    [![Adding a new role](images/idm-roles_add.png)]{.inlinemediaobject}
3.  此时会打开 [**Add Role 表单**]{.strong}。输入角色名称和描述：
    [![Form for adding a
    role](images/idm-roles_form.png)]{.inlinemediaobject}
4.  单击 [**Add 和 Edit**]{.strong}
    按钮，以保存新角色，再前往角色配置页面以添加特权和用户。
5.  单击角色列表中的角色名称，以编辑角色的属性。roles 配置页面将打开。
6.  单击相关列表顶部的 [**Add**]{.strong}
    [**按钮，使用用户[**[]{.strong}、用户组、主机[]{.strong}**
    ]{.strong}、主机组或服务 []{.strong} 选项卡添加成员**]{.strong}。
    [![Adding users](images/idm-roles_addusers.png)]{.inlinemediaobject}
7.  在打开的窗口中，选择左侧的成员，并使用 [**\>**]{.strong}
    按钮将它们移到 [**Prospective**]{.strong} 列中。
    [![Selecting
    Users](images/idm-roles_selectusers.png)]{.inlinemediaobject}
8.  在 [**Privileges**]{.strong} 选项卡顶部，单击 [**Add**]{.strong}。
    [![Adding
    Privileges](images/idm-roles_addprivileges.png)]{.inlinemediaobject}
9.  选择左侧的特权，并使用 [**\>**]{.strong} 按钮将它们移到
    [**Prospective**]{.strong} 列中。
    [![Selecting
    Privileges](images/idm-roles_selectprivileges.png)]{.inlinemediaobject}
10. [**单击\"添加**]{.strong} \"按钮保存。
11. [*可选。*]{.emphasis}如果您需要从角色中删除特权或成员，请在勾选您要删除的实体名称旁边的复选框后单击
    [**Delete**]{.strong} 按钮。此时会打开一个对话框。
12. [*可选。*]{.emphasis}如果您需要删除现有角色，请在列表中选中其名称旁边的复选框后单击
    [**Delete**]{.strong} 按钮，以显示 [**Remove
    角色对话框**]{.strong}。
:::
:::
:::
[]{#preparing-your-environment-for-managing-idm-using-ansible-playbooks_managing-users-groups-hosts.html}
::: chapter
::: titlepage
# []{#preparing-your-environment-for-managing-idm-using-ansible-playbooks_managing-users-groups-hosts.html#preparing-your-environment-for-managing-idm-using-ansible-playbooks_managing-users-groups-hosts}第 20 章 准备您的环境以使用 Ansible playbook 管理 IdM {.title}
:::
作为管理身份管理(IdM)的系统管理员，在使用 Red Hat Ansible Engine
时，最好执行以下操作：
::: itemizedlist
-   在您的主目录中，创建专用于 Ansible playbook 的子目录，如
    [**\~/MyPlaybooks**]{.strong}。
-   将 `/usr/share/doc/ansible-freeipa/* 和 /usr/`{.literal}
    share/doc/rhel-system-roles/\* 目录和\*``{=html} 目录中的示例
    Ansible playbook 复制到 [**\~/MyPlaybooks**]{.strong} 目录中。
-   将清单文件包含在 [**\~/MyPlaybooks**]{.strong} 目录中。
:::
使用此练习，您可以在一个位置找到所有 playbook，您可以在不调用 root
特权的前提下运行 playbook。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
您只需要在受管节点上具有 `root`{.literal} 特权，即可执行
`ipaserver`{.literal}、ipa`replica`{.literal}、ipa`client`{.literal} 和
`ipabackup`{.literal} `ansible-freeipa`{.literal}
角色。这些角色需要具有目录和 `dnf`{.literal}
软件包管理器的特权访问权限。
:::
本节论述了如何创建 [**\~/MyPlaybooks**]{.strong}
目录并进行配置，以便您可以使用它来存储和运行 Ansible playbook。
::: itemizedlist
**先决条件**
-   您已在受管节点上安装了 IdM
    [**服务器[*server.idm.example.com*]{.emphasis}**]{.strong}
    [**和[*replica.idm.example.com*]{.emphasis}**]{.strong}。
-   您已配置了 DNS
    [**和网络，以便您可以直接从控制节点登录到受管节点[*server.idm.example.com*]{.emphasis}**]{.strong}
    [**和[*replica.idm.example.com*]{.emphasis}**]{.strong}。
-   您知道 IdM `管理员`{.literal} 密码。
:::
::: orderedlist
**流程**
1.  在主目录中为您的 Ansible 配置和 playbook 创建目录：
    ``` literallayout
    $ mkdir ~/MyPlaybooks/
    ```
2.  进入 [**\~/MyPlaybooks/**]{.strong} 目录：
    ``` literallayout
    $ cd ~/MyPlaybooks
    ```
3.  使用以下内容创建 [**\~/MyPlaybooks/ansible.cfg**]{.strong} 文件：
    ``` literallayout
    [defaults]
    inventory = /home/your_username/MyPlaybooks/inventory
    [privilege_escalation]
    become=True
    ```
4.  使用以下内容创建 [**\~/MyPlaybooks/inventory**]{.strong} 文件：
    ``` literallayout
    [eu]
    server.idm.example.com
    [us]
    replica.idm.example.com
    [ipaserver:children]
    eu
    us
    ```
    [**此配置定义了两个主机组，即eu**]{.strong} 和
    [**us**]{.strong}，用于这些位置中的主机。此外，此配置定义
    [**ipaserver**]{.strong} 主机组，它包含来自 [**theeu 和 us
    []{.strong}** ]{.strong} 组的所有主机。
5.  \[可选\] 创建 SSH
    公钥和私钥。要在测试环境中简化访问，请不要在私钥中设置密码：
    ``` literallayout
    $ ssh-keygen
    ```
6.  将 SSH 公钥复制到每个受管节点上的 IdM `admin`{.literal} 帐户：
    ``` literallayout
    $ ssh-copy-id PI:EMAIL
    $ ssh-copy-id PI:EMAIL
    ```
    这些命令要求您输入 IdM `admin`{.literal} 密码。
:::
::: itemizedlist
**其它资源**
-   有关使用 Ansible playbook 安装 IdM 服务器的更多信息，请参阅使用
    [Ansible playbook
    安装身份管理服务器](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-an-Identity-Management-server-using-an-Ansible-playbook_installing-identity-management){.link}。
-   有关 Ansible
    [清单文件的可用格式概述，包括示例，请参阅如何构建您的清单](https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html){.link}。
:::
:::
[]{#using-ansible-playbooks-to-manage-role-based-access-control-in-idm_managing-users-groups-hosts.html}
::: chapter
::: titlepage
# []{#using-ansible-playbooks-to-manage-role-based-access-control-in-idm_managing-users-groups-hosts.html#using-ansible-playbooks-to-manage-role-based-access-control-in-idm_managing-users-groups-hosts}第 21 章 在 IdM 中使用 Ansible playbook 管理基于角色的访问控制 {.title}
:::
基于角色的访问控制(RBAC)是一种基于角色和特权定义的策略中立访问控制机制。在
Identity Management(IdM)中的 RBAC 组件是角色、权限和权限：
::: itemizedlist
-   [**权限授予执行特定任务的权利**]{.strong}，如添加或删除用户、修改组、启用读取访问等。
-   [**权限结合权限**]{.strong}，例如添加新用户所需的所有权限。
-   [**角色向用户**]{.strong}、用户组、主机或主机组授予一组特权。
:::
尤其是在大型公司，使用 RBAC
可以帮助创建具有各个职责领域的管理员分层系统。
本章介绍了使用 Ansible playbook 管理 RBAC 时执行的以下操作：
::: itemizedlist
-   [IdM
    中的权限](#using-ansible-playbooks-to-manage-role-based-access-control-in-idm_managing-users-groups-hosts.html#permissions-in-idm_using-ansible-playbooks-to-manage-role-based-access-control-in-idm "IdM 中的权限"){.link}
-   [默认管理权限](#using-ansible-playbooks-to-manage-role-based-access-control-in-idm_managing-users-groups-hosts.html#default-managed-permissions_using-ansible-playbooks-to-manage-role-based-access-control-in-idm "默认管理权限"){.link}
-   [IdM
    中的权限](#using-ansible-playbooks-to-manage-role-based-access-control-in-idm_managing-users-groups-hosts.html#privileges-in-idm_using-ansible-playbooks-to-manage-role-based-access-control-in-idm "IdM 中的权限"){.link}
-   [IdM
    中的角色](#using-ansible-playbooks-to-manage-role-based-access-control-in-idm_managing-users-groups-hosts.html#roles-in-idm_using-ansible-playbooks-to-manage-role-based-access-control-in-idm "IdM 中的角色"){.link}
-   [IdM
    中的预定义角色](#using-ansible-playbooks-to-manage-role-based-access-control-in-idm_managing-users-groups-hosts.html#predefined-roles-in-identity-management_using-ansible-playbooks-to-manage-role-based-access-control-in-idm "Identity Management 中的预定义角色"){.link}
:::
::: itemizedlist
-   [使用 Ansible 确保存在带有特权的 IdM RBAC
    角色](#using-ansible-playbooks-to-manage-role-based-access-control-in-idm_managing-users-groups-hosts.html#using-ansible-to-ensure-an-idm-rbac-role-with-privileges-is-present_using-ansible-playbooks-to-manage-role-based-access-control-in-idm "使用 Ansible 确保存在带有特权的 IdM RBAC 角色"){.link}
-   [使用 Ansible 确保缺少 IdM RBAC
    角色](#using-ansible-playbooks-to-manage-role-based-access-control-in-idm_managing-users-groups-hosts.html#using-ansible-to-ensure-an-idm-rbac-role-is-absent_using-ansible-playbooks-to-manage-role-based-access-control-in-idm "使用 Ansible 确保缺少 IdM RBAC 角色"){.link}
-   [使用 Ansible 确保为一组用户分配 IdM RBAC
    角色](#using-ansible-playbooks-to-manage-role-based-access-control-in-idm_managing-users-groups-hosts.html#using-ansible-to-ensure-that-a-group-of-users-is-assigned-to-an-idm-rbac-role_using-ansible-playbooks-to-manage-role-based-access-control-in-idm "使用 Ansible 确保为一组用户分配 IdM RBAC 角色"){.link}
-   [使用 Ansible 确保没有将特定用户分配给 IdM RBAC
    角色](#using-ansible-playbooks-to-manage-role-based-access-control-in-idm_managing-users-groups-hosts.html#using-ansible-to-ensure-that-specific-users-are-not-assigned-to-an-idm-rbac-role_using-ansible-playbooks-to-manage-role-based-access-control-in-idm "使用 Ansible 确保没有将特定用户分配给 IdM RBAC 角色"){.link}
-   [使用 Ansible 确保服务是 IdM RBAC
    角色的成员](#using-ansible-playbooks-to-manage-role-based-access-control-in-idm_managing-users-groups-hosts.html#using-ansible-to-ensure-a-service-is-a-member-of-an-idm-rbac-role_using-ansible-playbooks-to-manage-role-based-access-control-in-idm "使用 Ansible 确保服务是 IdM RBAC 角色的成员"){.link}
-   [使用 Ansible 确保主机是 IdM RBAC
    角色的成员](#using-ansible-playbooks-to-manage-role-based-access-control-in-idm_managing-users-groups-hosts.html#using-ansible-to-ensure-a-host-is-a-member-of-an-idm-rbac-role_using-ansible-playbooks-to-manage-role-based-access-control-in-idm "使用 Ansible 确保主机是 IdM RBAC 角色的成员"){.link}
-   [使用 Ansible 确保主机组是 IdM RBAC
    角色的成员](#using-ansible-playbooks-to-manage-role-based-access-control-in-idm_managing-users-groups-hosts.html#using-ansible-to-ensure-a-host-group-is-a-member-of-an-idm-rbac-role_using-ansible-playbooks-to-manage-role-based-access-control-in-idm "使用 Ansible 确保主机组是 IdM RBAC 角色的成员"){.link}
:::
::: section
::: titlepage
# []{#using-ansible-playbooks-to-manage-role-based-access-control-in-idm_managing-users-groups-hosts.html#permissions-in-idm_using-ansible-playbooks-to-manage-role-based-access-control-in-idm}IdM 中的权限 {.title}
:::
权限是基于角色的访问控制的最低级别单元，它们定义这些操作所应用到的 LDAP
条目。与构建块类似，可以根据需要对尽可能多的权限分配权限。\
[**一个或多个权利定义了允许的操作**]{.strong} ：
::: itemizedlist
-   `写入`{.literal}
-   `读取`{.literal}
-   `search`{.literal}
-   `compare`{.literal}
-   `add`{.literal}
-   `delete`{.literal}
-   `all`{.literal}
:::
[**这些操作适用于三个基本目标**]{.strong} ：
::: itemizedlist
-   `子树`{.literal} ：域名(DN)；此 DN 下的子树
-   `目标过滤器`{.literal} ：LDAP 过滤器
-   `目标`{.literal} ：带有可能通配符的 DN 指定条目
:::
此外，以下方便选项可设置对应的属性：
::: itemizedlist
-   `类型`{.literal} ：对象类型（用户、组等）；设置 `子树`{.literal}
    `和目标过滤器`{.literal}
-   `member`{.literal} Of：组成员；设置 `目标过滤器`{.literal}
-   `TargetGroup：`{.literal}
    授予修改特定组的权限（如授予管理组成员资格的权限）；设置
    `目标`{.literal}
:::
使用 IdM
权限，您可以控制哪些用户有权访问哪些对象，甚至控制这些对象的属性。IdM
允许您允许或阻止单个属性，或更改特定 IdM 功能（如用户、组或
sudo）的所有可见性，适用于所有匿名用户、所有经过身份验证的用户，或者只更改一组特定的特权用户。\
例如，如果管理员只想将用户或组的访问权限限制到这些用户或组需要访问的特定部分，并且使其他部分完全隐藏于他们，此方法的灵活性对管理员很有用。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
权限不能包含其他权限。
:::
:::
::: section
::: titlepage
# []{#using-ansible-playbooks-to-manage-role-based-access-control-in-idm_managing-users-groups-hosts.html#default-managed-permissions_using-ansible-playbooks-to-manage-role-based-access-control-in-idm}默认管理权限 {.title}
:::
管理的权限是 IdM
默认附带的权限。它们的行为与用户创建的其他权限类似，但有以下区别：
::: itemizedlist
-   您无法删除它们或修改其名称、位置和目标属性。
-   它们有三组属性：
    ::: itemizedlist
    -   [**默认属性**]{.strong}，用户无法修改它们，因为它们由 IdM 管理
    -   [**包含的属性**]{.strong}，它们是用户添加的额外属性
    -   [**排除的属性**]{.strong}，这些属性由用户删除
    :::
:::
管理的权限适用于 default 和 included
属性集中显示的所有属性，但不应用到排除集中的所有属性。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
虽然您无法删除受管权限，但将其绑定类型设置为权限并从所有特权中删除托管权限会有效地禁用该权限。
:::
所有受管权限的名称都以 `System:`{.literal} 开头，例如
`System: 添加 Sudo 规则或`{.literal}
`System: Modify Services`{.literal}。IdM
的早期版本将不同的方案用于默认权限。例如，用户无法删除它们，而只能将它们分配到特权。这些默认权限大部分已转换为受管权限，但以下权限仍使用以前的方案：
::: itemizedlist
-   添加 Automember Rebuild Membership 任务
-   添加配置子条目
-   添加复制协议