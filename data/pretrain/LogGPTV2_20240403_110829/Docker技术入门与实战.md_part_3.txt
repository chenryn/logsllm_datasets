口部分虚拟化。只针对部分硬件资源进行虚拟化，客户操作系统需要进行修改。现在有
口硬件辅助虚拟化。利用硬件（主要是CPU）辅助支持（目前x86体系结构上可用的硬
的进程。容器相关技术即在这个范畴。
客户操作系统需要进行修改，例如早期的Xen。
无需进行修改。例如VMwareWorkstation、VirtualBox、QEMU等。
些虚拟化技术的早期版本仅支持部分虚拟化。
客户操作系统无需修改，例如VMwareWorkstation、Xen、KVM。
件辅助虚拟化技术包括Intel-VT和AMD-V）处理敏感指令来实现完全虚拟化的功能，
虚拟化与Docker
隔离性
系统支持量
性能
硬盘使用
启动速度
特性
安全隔离
单机支持上千个容器
接近原生
一般为MB
秒级
容器
第1章初识Docker
完全隔离
一般几十个
弱于
一般为GB
分钟级
虚拟机
---
## Page 22
个虚拟化领域占有越来越重要的地位。
制，Docker让容器技术一下子变得前所未有的方便易用。
势所深深吸引。通过为Linux容器技术提供更简便的使用和管理方案、更高效的版本控制机
1.4
轻量级。
的。下面图1-1比较了Docker和常见的虚拟机方式的不同之处。
8
笔者相信，随着云计算技术的进一步发展，以 Docker技术为代表的容器技术必将在整
通过本章内容的叙述，相信读者已经对于Docker技术不再陌生，
第一部分Docker入门
Docker容器是在操作系统层面上实现虚拟化，直接复用本地主机的操作系统，因此更加
传统方式是在硬件层面实现虚拟化，需要有额外的虚拟机管理应用和虚拟机操作系统层。
本章小结
虚拟机操作系统
运行时环境
应用程序
a)传统的虚拟化方式
宿主机操作系统
虚拟机管理程序
硬件层
图1-1
虚拟机操作系统
运行时环境
应用程序
Docker和传统的虚拟机方式的不同之处
运行时环境
应用程序
b)Docker虚拟化方式
宿主机操作系统
Docker容器支持
硬件层
并为它带来的众多优
运行时环境
应用程序
---
## Page 23
十分简单的机制来创建和更新现有的镜像，用户甚至可以从网上下载一个已经做好的应用镜
Ubuntu镜像。镜像也可以安装了Apache应用程序（或用户需要的其他软件），可以把它称为
模板，包含了文件系统。
Docker镜像
一个Apache镜像。
2.1
Windows和MacOS等。
得到更清晰的答案。
烈的一个话题，就是Docker和Linux容器技术到底有何区别？相信读者在阅读完本章后，会
例如：一个镜像可以只包含一个完整的Ubuntu操作系统环境，
随后，笔者将介绍如何在常见的操作系统上安装Docker，包括Ubuntu、CentOS、
镜像是创建Docker容器的基础。
Docker镜像（Image）类似于虚拟机镜像，
读者理解了这三个核心概念，就能顺利地理解Docker的整个生命周期。社区讨论很激
口仓库（Repository）
容器（Container）
口镜像（Image）
本章首先介绍Docker的三大核心概念：
核心概念
Docker的核心概念和安装
通过版本管理和增量的文件系统，Docker提供了一套
，可以将它理解为一个面向Docker引擎的只读
第2章
可以把它称为一个
Chapter?
---
## Page 24
库。这样用户下次在另外一台机器上使用该镜像时，只需将其从仓库上pull下来就可以了。
一个只能自己访问的私有仓库。
仓库包括DockerPool等，可以提供稳定的国内访问。
和私有仓库（Private）两种形式。
Docker仓库可以分为公开仓库（Public）
注册服务器的示例如图 2-1所示。
14.04、12.04等不同版本的镜像。仓月
库，称为Ubuntu仓库，其中可能包括
分。例如存放Ubuntu操作系统镜像的仓
文件，通过不同的标签（tag）来进行区
中存放某一类镜像，往往包括多个镜像
其上往往存放着多个仓库。每个仓库集
实际上，注册服务器是存放仓库的地方，
Docker仓库
镜像本身将保持不变。
用户空间和网络空间等），以及运行在其中的应用程序打包而成的应用盒子。
是相互隔离、互不可见的。
Docker容器
像，并通过简单的命令就可以直接使用。
10
当用户创建了自己的镜像之后就可以使用push命令将它上传到指定的公有或者私有仓
当然，用户如果不希望公开分享自己的镜像文件，Docker也支持用户在本地网络内创建
目前，最大的公开仓库是DockerHub，存放了数量庞大的镜像供用户下载。国内的公开
注意
根据所存储的镜像公开分享与否
镜像自身是只读的。容器从镜像启动的时候，Docker会在镜像的最上层创建一个可写层，
读者可以把容器看做一个简易版的Linux系统环境（这包括root用户权限、进程空间、
有时候会看到有资料将Docker仓库和注册服务器（Registry）混为一谈，并不严格区分。
Docker仓库（Repository）类似于代码仓库，是Docker集中存放镜像文件的场所。
容器是从镜像创建的应用运行实例，可以将其启动、开始、停止、删除，而这些容器都
Docker容器（Container）类似于一个轻量级的沙箱，Docker利用容器来运行和隔离应用。
可以看出，Docker利用仓库管理镜像的设计理念与Git非常相似。
第一部分Docker入门
14.04
Ubuntu仓库
13.10
图2-1仓库和注册服务器
12.04
注册服务器
5.0
CentOS仓库
7.0
6.0
---
## Page 25
可升级：
https，并添加 Docker 官方源：
Docker版本相对较旧。
Ubuntu
MacOS 系统等。当然，在Linux系列平台上是原生支持，使用体验也最好。
2.2
注意
读者也可通过下面的方法从Docker官方源安装最新版本。首先需要安装apt-transport-
$sudo apt-get update
如果使用的是较低版本的Ubuntu系统，
2.ubuntu14.04以下的版本
$ sudo apt-get update -y lxc-docker
在安装了Docker官方软件源后，若需要更新Docker软件版本，只需要执行以下命令即
之后，可以通过下面的命令来安装最新版本的Docker：
以上流程使用Ubuntu14.04系统默认自带docker.io安装包安装Docker，这样安装的
$sudo apt-get update
Ubuntu14.04版本官方软件源中已经自带了Docker包，可以直接安装：
1.Ubuntu14.04及以上版本
Docker支持在主流的操作系统平台上使用，
$sudo apt-getinstall-ylxc-docker
$sudo apt-getupdate
sources.list.d/docker.list"
869245C8950F966E92D8576A8BA88D21E9
sudo apt-get install apt-transport-https
$sudo
后文中使用$作为终端引导符时，表示非root权限用户；#代表是root用户。
sudo sed-i
安装Docker
ln-sf
apt-getinstall
/usr/bin/docker.io/usr/local/bin/docker
-ydocker.io
则需要先进行内核更新并重启系统后再进行安装：
，包括 Ubuntu、CentOS、Windows 以及
第2章
Docker的核心概念和安装
2oing
---
## Page 26
所示。
Boot2Docker管理工具。如图2-2
boot2dockerLinux ISO镜像，以及
Docker for Windows Installer。
installation/windows/下载最新官方
步骤如下：
机，然后在其中运行Docker。主要
工与配置的VirtualBox轻量级虚拟
化特性，因此在Windows中使用Docker通常不会有硬件支持的问题。
的CPU支持硬件虚拟化。由于近几年发布的Intel和AMDCPU基本上都已支持了硬件虚拟
Windows
下载二进制文件进行更新。
命令进行安装：
Centos
一个虚拟机来提供Linux支持。这里推荐使用Boot2Docker工具，它会首先安装一个经过加
12
1）从https://docs.docker.com/
安装VirtualBox，MSYS-git,
2）运行Installer。这个过程
目前Docker官方已经宣布Docker通过虚拟机方式支持Windows 7.1和8，前提是主机
目前在Centos系统中更新 Docker 软件有两种方法，一是自行通过源码编译安装，二是
对于CentOS7系统，由于CentOS-Extras 源中已内置Docker，读者可以直接使用 yum
第一部分Docker入门
由于Docker引擎使用了Linux内核特性，所以在Windows上运行的话，需要额外使用
$sudo yum install -y docker
$sudo yuminstall-ydocker-io
noarch.rpm
$sudoyum
对于CentOS6系统可使用EPEL库安装Docker，命令如下：
Docker支持CentOS6及以后的版本。
重启后，重复在Ubuntu14.04系统的安装步骤即可。
$sudo reboot
lts-raring
$ sudo apt-get install -y linux-image-generic-lts-raring linux-headers-generic-
instal1 -yhttp://mirrors.yun-idc.com/epel/6/i386/epel-release-6-8.
docker
图2-2
Windows下安装Docker
Wwedowstoth Bot2Docer for
ctisrecnm
ndedthatyodelthrapplcationbore
---
## Page 27
boot2docker start来控制它。
明Docker安装成功。当虚拟机初始化完毕后，
行它。现在进行Boot2Docker的初始化：
Boot2Docker管理工具，如图2-4所示。
installation/mac/下载。
MacOs
钥生成的口令）。读者可以自行设定，也可以直接按回车键，跳过此设定，如图2-3所示。
forWindows。此初始化脚本在第一次运行时需要输人一个 SSHKeyPassphrase（用于SSH密
“3）安装成功后，找到Boot2Docker（Mac系统的Application或“应用”文件夹中）并运
2）双击运行安装包。这个过程将安装一个VirtualBox虚拟机、Docker本身以及
注意：如果在命令行中看到如下提示信息：
读者将看到虚拟机在命令行窗口中启动运行，并显示Docker的启动信息，则说
$boot2docker init
1）下载最新官方Docker for OSX Installer。读者可以从https://docs.docker.com/
目前Docker已经支持MacOSX10.6SnowLeopard及以上版本的MacOS。
此时Boot2Docker Start程序将连接至虚拟机中的 Shell会话，Docker已经运行起来了！
3）打开桌面的Boot2DockerStart程序，或者用以下命令：ProgramFiles>Boot2Docker
S
在MacOS上使用Docker，同样需要Boot2Docker工具的支持。主要步骤如下：
$(boot2docker shellinit)
boot2docker start
图2-3
Boot2Docker启动后界面
第2章Docker的核心概念和安装13
：可以使用boot2docker stop和
---
## Page 28
为192.168.1.0/24段地址）将作
网地址为10.0.2.2/24，外网地址
记本上装的LinuxMint环境（内
的IP地址为10.0.2.15/24），而笔
将是主要的操作环境（自动获取
如图 2-5所示。
网络的NAT方式连接到外部，
1.3版本，虚拟机通过VirturBox
两套系统上都安装了Docker的
虚拟了一套Ubuntu14.04系统，
2.3本书环境介绍
此语句的作用是在系统环境变量中设置Docker的主机地址。
14第一部分Docker入门
其中，Ubuntu14.04虚拟机
本书的实践环境是一台装有LinuxMint17的笔记本电脑，并使用虚拟机软件VirturBox
可以执行提示信息中的语句：exportDOcKER_HOST=tcp://192.168.59.103:2375。
HOST=tcp://192.168.59.103:2375
To connect the Docker client to the Docker daemon, please set:export
docker
tion
图2-4
Type
MacOS上安装Boot2Docker
Boot2Docker for Mac OS X
Welcome to the Boot2Docker forMac OsXInstaller
笔者的计算机-LinuxMint17
10.0.2.2
Install Boot2Docker for MacOSX
Ubuntu14.04虚拟机
10.0.2.15
容器
docker
VirturBox
er
.....
图2-5本书环境
Go BackContinue
私有仓库
docker
DOCKER
---
## Page 29
在后续章节，笔者将进一步地介绍围绕这三大核心概念的Docker常见操作命令。
虚拟化方案中脱颖而出的重要原因。
2.4本章小结
为本地私有仓库的服务器，演示跟仓库相关的操作。
熟悉Git和GitHub的读者，会理解这一工作流程为文件分发和合作所带来的众多优势。
通过这三大核心概念所构建的高效工作流程，毫无疑问，正是Docker得以从众多容器
本章介绍了Docker的三大核心概念：镜像、容器和仓库。
读者可根据自已本地环境，选择搭建类似的环境。
第2章Docker的核心概念和安装
13
15
---
## Page 30
的镜像。
签，即下载仓库中最新版本的镜像。
NAME[：TAG]。对于Docker镜像来说，如果不显式地指定TAG，则默认会选择latest 标
3.1
件。最后，还将介绍如何向Docker Hub仓库中推送自己的镜像。
行搜索和过滤；如何删除镜像标签和镜像文件；如何创建用户定制的镜像并且保存为外部文
仓库中下载镜像到本地；如何查看本地已有的镜像信息；如何在远端仓库使用search命令进
置，使用自定义的镜像仓库。
从默认镜像仓库下载（默认使用DockerHub 公共注册服务器中的仓库），用户也可以通过配
hapter3
本章将介绍围绕镜像这一核心概念的具体操作，包括如何使用pull命令从DockerHub
下面，笔者将演示如何从 Docker Hub的Ubuntu仓库下载一个最新的Ubuntu操作系统
读者可以使用dockerpull命令从网络上下载镜像。
Docker运行容器前需要本地存在对应的镜像，如果镜像不存在本地，Docker会尝试先
d497ad3926c8:Down1oading[======>
ubuntu:latest: The image you are pulling has been verified
$sudo docker pullubuntu
镜像是Docker运行容器的前提。
镜像是Docker的三大核心概念之一。
获取镜像
镜
第3章
像
。该命令的格式为dockerpull
125.41MB/201.6MB51m14S
---
## Page 31
DockerPool镜像源下载的ubuntu:latest镜像。
3.2
行bash应用。
Ubuntu镜像。
库注册服务器地址。例如从DockerPool社区的镜像源dl.dockerpool.com下载最新的
的ubuntu仓库来下载标记为latest的镜像。
com/ubuntu：latest命令，即从默认的注册服务器registry.hub.docker.com中
基础。
(Advanced Union File System,