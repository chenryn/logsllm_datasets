in Sects. IV-D and IV-E we use APHD CF online EM and
APHD online EM, respectively. For the synthetical traces we ﬁt
distributions with the same number of states than the original
PHD used to generate the trace.
d
o
o
h
i
l
e
k
i
l
e
g
a
r
e
v
a
-0.22
-0.23
-0.24
-0.25
-0.26
-0.27
-0.28
 HErD offline EM 
 HExp offline EM 
 APHD offline EM 
 HErD online EM 
 HExp online EM 
 APHD CF online EM 
 APHD online EM
 10000 20000 30000 40000 50000 60000 70000 80000 90000 100000
i
Fig. 2: Synthetical trace 1: Average forward likelihood lf wd
i
(cid:10)
Fig. 2 shows the results for the seven PHDs ﬁtted to the
ﬁrst synthetical trace. The plots show the forward likelihoods
deﬁned as
,
i
=
lf wd
i
i
j=1 log(fθj (tj+1))
i = 1, . . . , k − 1 (30)
Thus, for each iteration j we compute the likelihood of
the current estimates θj for the next value tj+1. For the
ofﬂine algorithms all θj are identical of course. Then, in
iteration i we compute the average of the likelihoods from
all previous observations. The forward likelihood measures
the approximation quality for the immediate future. Higher
values indicate a better approximation of the trace. One can
see, that ofﬂine and online approaches provide a similar quality
for the approximation in this example. The hyperexponential
distributions perform worse than the other distributions, be-
cause they are more limited due to their structure. The curves
for the different hyper-Erlang distributions and APHDs almost
overlap.
Fig. 3 shows the evolution of the likelihood ratio  
lrT:i from
(25) for the online EM algorithm with APHDs in canonical
o
i
t
a
r
d
o
o
h
i
l
e
k
i
l
-
g
o
l
 3.5
 3
 2.5
 2
 1.5
 1
 0.5
 0
-0.5
-1
 thresh 
 APHD CF online EM 
 0
 20000  40000  60000  80000  100000
Fig. 3: Synthetical trace 1: Likelihood ratio  
i
lrT:i
form. Whenever the threshold of 3 is reached the current
estimates are updated (i.e. (πcurr, Dcurr) = (πi, Di) in
Fig. 1) and the difference in the log-likelihood values drops to
0. As one can see, there are frequent estimate updates in the
beginning, but the intervals between updates become larger,
once the estimates have become more stable.
B. Synthetical Trace With Changing Mean
For our second example we introduce change points into the
sequence of values. We assume that the sequence has a default
behavior described by the PHD π, λi, i = 1, . . . , 4 from the
i = 5.0·λi and λ
i = 0.3·λi we ob-
(cid:5)
(cid:5)(cid:5)
ﬁrst example. By setting λ
tain PHDs with a smaller and larger mean value, respectively.
The sequence is then obtained by generating 30000 values with
default behavior, followed by 10000 values with smaller mean,
again 30000 values with default behavior, 10000 values with
larger mean and ﬁnally 20000 values with default behavior.
Hence, we have change points after 30000, 40000, 70000 and
80000 observations. Since ofﬂine algorithms cannot react to
change points we distinguish two cases. We ﬁt one distribution
of each subclass to the observations with default behavior
only and another one to the complete sequence including the
deviations. The online EM algorithms only get the complete
sequence, of course, since they are supposed to detect the
change points and adapt to the new trace characteristics.
Recall from Sect. V that change point detection depends
on several parameters, in particular the constant weight γ,
the threshold bc and the window size w from (29). Ideally,
the parameters are chosen such that the algorithm does not
miss any existing change points and has no (or at least few)
false positives. We systematically tested various settings of
the mentioned parameters for the second example trace. A
w=5; (cid:1)=0.01; bc=8
w=5; (cid:1)=0.1; bc=8
w=10; (cid:1)=0.01; bc=8
w=10; (cid:1)=0.1; bc=7
w=20; (cid:1)=0.01; bc=8
w=20; (cid:1)=0.1; bc=8
w=30; (cid:1)=0.1; bc=8
w=30; (cid:1)=0.01; bc=8
w=40; (cid:1)=0.1; bc=8
w=40; (cid:1)=0.1; bc=7
w=40; (cid:1)=0.01; bc=8
 0
 20000 40000 60000 80000 100000
i
Fig. 4: Synthetical trace 2: Detected change points
107
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:54:41 UTC from IEEE Xplore.  Restrictions apply. 
selection of those results are shown in Fig. 4. The vertical lines
indicate the real change points, the horizontal dots indicate the
detected change points for the different parameter settings. As
one can see large window sizes w in combination with a large
weight γ lead to lots of false positives, while change points
remain undetected if w is too small or both w and γ are small.
Best results are obtained if w is large and γ small or vice versa,
e.g. w = 30, γ = 0.01 or w = 10, γ = 0.1, which was chosen
in the following. Fig. 5 shows the forward likelihood for the
second trace and the different distributions ﬁtted to the data.
We slightly redeﬁne the forward likelihood to account for the
change points. Obviously, the deﬁnition from (30) does not
really reﬂect the situation shortly after a change point. Even
if the current quality of the approximation is bad due to the
changed characteristics of the trace the sum contains all the
likelihood values before the occurrence of the change point and
therefore it will take some time until an impaired ﬁtting quality
becomes visible. Let (c1, c2, . . . , cp) be the indices of the p
change points that occur in the trace of length k. Additionally,
we set c0 = 1 and cp+1 = k + 1. Then, we deﬁne the forward
likelihood as
(cid:10)
i − c(i) + 1
,
i
j=c(i) log(fθj (tj+1))
∀i = 1, . . . , k − 1 (31)
lf wd
i =
where c(i) is chosen as c(i) = cl ≤ i < cl+1 for l = 0, . . . , p.
Note, that (31) is identical to (30) when no change points are
present.
Figs. 5a-5c show similar results for the different subclasses
of PHDs. Again, we indicate the change points with vertical
lines in the plots. For the sequences with default behavior
there are only small differences in the ﬁtting quality. Even
the ofﬂine algorithms that only used the observations with
default behavior for ﬁtting do not result in distributions with
a signiﬁcantly better approximation here. However, for the
subsequences with changed behavior from 30000 to 40000
and 70000 to 80000 differences become apparent. Obviously,
the distributions that were only ﬁtted according to default
values show the worst performance here and the distributions
resulting from ofﬂine ﬁtting with all values show better results.
The results also clearly demonstrate that the online algorithms
adapt to the new situation very fast and provide the best
approximation of the values with changed characteristics.
Also, when the sequence changes back to normal behavior, this
is recognized and the distributions are modiﬁed accordingly.
In comparison, online estimation with APHDs required longer
than online estimation with the other distributions to adapt to
changes in the sequence. One can also see from Fig. 5c that
both approaches used for APHDs behave similar as the curves
overlap for most of the time.
C. Synthetical Trace With Changing Variance
For the third example with a synthetical trace we introduce a
change point according to a different variance while the mean
remains the same. This is probably more difﬁcult to detect
than the change points in the previous examples. The behavior
is described by two APHDs in canonical form. The PHD
π = (0.6, 0.3, 0.1) and λ1 = 1, λ2 = 5, λ3 = 8 describes the
default behavior with mean 0.91 and variance 0.92. A second
PHD π(cid:5)
(cid:5)
(cid:5)
2 = 50 describes
= (0.6, 0.4) and λ
1 = 0.67797, λ
the modiﬁed behavior with the same mean and variance 1.83.
The generated trace contains 20000 elements drawn from the
ﬁrst PHD, followed by 5000 from the second and 20000 again
from the ﬁrst.
The experiments are analogue to the previous example and
the results shown in Figs. 6 and 7 conﬁrm our observations
from that example in general.
D. Real Trace from the Failure Trace Archive
The failure trace archive (FTA) [36], [37] contains avail-
ability traces of parallel and distributed systems, i.e. the time
periods a component of the system was available or unavail-
able. For our experiments we use the Grid’5000 [38] data set
with availability information of hosts from a computing grid.
From this data set we generated a trace with the lengths of
the availability periods sorted according to the end-of-period
timestamps. Thus, the interpretation is, that we want to ﬁnd a
distribution for the availability periods and whenever one of
those periods ends we get the corresponding lengths as update
to the online EM algorithm. Fig. 8 shows the sequence of
availability times and one can see that the values differ largely
and that the sequence has various potential change points. The
large differences in the trace values will usually result in large
differences in the rates of the PHDs, which makes parameter
estimation problematic in some cases. It is well known, that
numerical techniques like uniformization reach their limits in
such cases [39] and therefore the ofﬂine EM algorithm for
APHDs and the online approach from Sect. IV-E are not
feasible here. Moreover, the best hyper-Erlang distribution
the ofﬂine EM algorithm could ﬁnd is a hyperexponential
distribution and thus, we only have one distribution resulting
from the ofﬂine EM approaches in this case.
TABLE I: Likelihood values for the complete trace
HExp ofﬂine EM
HExp online EM
HExp online EM (w = 5; γ = 0.01; bc = 11)
HErD online EM (w = 5; γ = 0.01; bc = 11)
APHD CF online EM (w = 10; γ = 0.01; bc = 13)
1.30361e + 06
1.52697e + 06
2.6122e + 06
2.43309e + 06
2.13151e + 06
TABLE II: Runtimes
HExp ofﬂine EM
HExp online EM
APHD ofﬂine EM
APHD CF online EM 8.8 sec.
93.2 sec.
APHD online EM
Synth. Trace 2
7.5 sec. (206 iter.)
2.5 sec.
6499.8 sec. (210 iter.)
Real Trace
20.3 sec. (155 iter.)
8.1 sec.
not feasible
26.9 sec.
not feasible
The ﬁtting results are shown in Fig. 9. Since we do not
know the location of change points for this trace, we compute
the forward likelihood for a window of size 1000, i.e.
(cid:10)
i
j=i−999 log(fθj (tj+1))
1000
i = 1000, . . . , k − 1.
,
lf wd
i =
108
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:54:41 UTC from IEEE Xplore.  Restrictions apply. 
 HExp offline EM def. 
 HExp offline EM 
 HExp online EM 
 HErD offline EM def. 
 HErD offline EM 
 HErD online EM 
 APHD offline EM def. 
 APHD offline EM 
 APHD CF online EM 
 APHD online EM
d
o
o
h
i
l
e
k
i
l
e
g
a
r
e
v
a
 1.5
 1
 0.5
 0
-0.5
-1
-1.5
-2
-2.5
d
o
o
h
i
l
e
k
i
l
e
g
a
r
e
v
a
 1.5
 1
 0.5
 0
-0.5
-1
-1.5
-2
-2.5
 0
 20000
 40000
 60000
 80000
 100000
 0
 20000
 40000
 60000
 80000
 100000
i
(a) Hyperexponential
i
(b) Hyper-Erlang
d
o
o
h
i
l
e
k
i
l
e
g
a
r
e
v
a
 1.5
 1
 0.5
 0
-0.5
-1
-1.5
-2
-2.5
 0
 20000
 40000
 60000
 80000
 100000
i
(c) Acyclic PHDs
Fig. 5: Synthetical trace 2: Average forward likelihood lf wd
i
w=10; (cid:1)=0.01; bc=8
w=10; (cid:1)=0.05; bc=5
w=10; (cid:1)=0.05; bc=8
w=20; (cid:1)=0.01; bc=8
w=20; (cid:1)=0.05; bc=8
w=20; (cid:1)=0.1; bc=8
w=30; (cid:1)=0.01; bc=8
w=30; (cid:1)=0.05; bc=8
w=30; (cid:1)=0.1; bc=8
w=40; (cid:1)=0.01; bc=8
w=40; (cid:1)=0.05; bc=8
w=40; (cid:1)=0.1; bc=8
 0
 10000  20000  30000  40000
i
Fig. 6: Synthetical trace 3: Detected change points
Fig. 9 shows the likelihood values for the hyperexponential
distribution from ofﬂine EM and hyperexponential, hyper-
Erlang and APHD CF resulting from online EM approaches
with change point detection (the parameters relevant for the
detection are given in braces). Additionally, we estimated
parameters of a second hyperexponential with the online EM
algorithm with disabled change point detection (denoted as
HExp online EM). Recall from Sect. IV that this corresponds
to the original approach from [7]. Furthermore,
the plot
includes the detected change points for the three online
EM algorithms with change point detection. As we can
see, the likelihood values for distributions from the online
algorithms have various large peaks, where the algorithms
reacted to changes in the data sequence. We can also see,
that the HExp online EM exhibits these peaks as well, but to
a much lesser extent, implying that change point detection
enhances the algorithms’ ability to react to changes in the
input sequence. Finally, Table I contains the log-likelihood
for the ﬁve distributions for the complete sequence.
E. Runtime Comparison
As already mentioned in the previous sections the online
EM approaches see each trace element once and perform
E- and M-step for each element. In contrast, an ofﬂine EM
algorithm processes all
trace elements for every iteration,
each consisting of one E- and one M-step. Obviously, these
different behaviors have a large impact on the runtimes of
the algorithms. Table II shows the runtimes and for ofﬂine
algorithms also the number of iterations until convergence
was reached for two of the traces and some distributions. The
results indicate that the online algorithms can also be a suitable
alternative in ofﬂine settings where the traces are very long to
reduce the runtime for ﬁtting.
F. Results from a Queueing Model