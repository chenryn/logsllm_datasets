---
title:  Scalar Functions 
description: Learn how to use scalar functions to perform calculations that return a single value.
ms.reviewer: alexans
ms.topic: reference
ms.date: 01/23/2023
---
# Scalar function types at a glance
This article lists all available scalar functions grouped by type. For aggregation functions, see [Aggregation function types](aggregation-functions.md).
## Binary functions
|Function Name     |Description                                          |
|-------------------------|--------------------------------------------------------|
|[binary_and()](binary-and-function.md)|Returns a result of the bitwise and operation between two values.|
|[binary_not()](binary-not-function.md)|Returns a bitwise negation of the input value.|
|[binary_or()](binary-or-function.md)|Returns a result of the bitwise or operation of the two values.|
|[binary_shift_left()](binary-shift-left-function.md)|Returns binary shift left operation on a pair of numbers: a > n.|
|[binary_xor()](binary-xor-function.md)|Returns a result of the bitwise xor operation of the two values.|
|[bitset_count_ones()](bitset-count-ones-function.md)|Returns the number of set bits in the binary representation of a number.|
## Conversion functions
|Function Name     |Description                                          |
|-------------------------|--------------------------------------------------------|
|[tobool()](tobool-function.md)|Convert inputs to boolean (signed 8-bit) representation.|
|[todatetime()](todatetime-function.md)|Converts input to datetime scalar.|
|[todouble()](todouble-function.md)|Converts the input to a value of type real.|
|[tostring()](tostring-function.md)|Converts input to a string representation.|
|[totimespan()](totimespan-function.md)|Converts input to timespan scalar.|
## DateTime/timespan functions
|Function Name     |Description                                          |
|-------------------------|--------------------------------------------------------|
|[ago()](ago-function.md)|Subtracts the given timespan from the current UTC clock time.|
|[datetime_add()](datetime-add-function.md)|Calculates a new datetime from a specified datepart multiplied by a specified amount, added to a specified datetime.|
|[datetime_diff()](datetime-diff-function.md)|Returns the end of the year containing the date, shifted by an offset, if provided.|
|[datetime_local_to_utc()](datetime-local-to-utc-function.md) |  Converts local datetime to UTC datetime using [a time-zone specification](../query/timezone.md).
|[datetime_part()](datetime-part-function.md)|Extracts the requested date part as an integer value.|
| [datetime_utc_to_local()](datetime-utc-to-local-function.md) | Converts UTC datetimgoe to local datetime using a [time-zone specification](../query/timezone.md).
|[dayofmonth()](day-of-month-function.md)|Returns the integer number representing the day number of the given month.|
|[dayofweek()](day-of-week-function.md)|Returns the integer number of days since the preceding Sunday, as a timespan.|
|[dayofyear()](day-of-year-function.md)|Returns the integer number represents the day number of the given year.|
|[endofday()](endofday-function.md)|Returns the end of the day containing the date, shifted by an offset, if provided.|
|[endofmonth()](endofmonth-function.md)|Returns the end of the month containing the date, shifted by an offset, if provided.|
|[endofweek()](endofweek-function.md)|Returns the end of the week containing the date, shifted by an offset, if provided.|
|[endofyear()](endofyear-function.md)|Returns the end of the year containing the date, shifted by an offset, if provided.|
|[format_datetime()](format-datetime-function.md)|Formats a datetime parameter based on the format pattern parameter.|
|[format_timespan()](format-timespan-function.md)|Formats a format-timespan parameter based on the format pattern parameter.|
|[getyear()](getyear-function.md)|Returns the year part of the datetime argument.|
|[hourofday()](hour-of-day-function.md)|Returns the integer number representing the hour number of the given date.|
|[make_datetime()](make-datetime-function.md)|Creates a datetime scalar value from the specified date and time.|
|[make_timespan()](make-timespan-function.md)|Creates a timespan scalar value from the specified time period.|
|[monthofyear()](monthofyear-function.md)|Returns the integer number that represents the month number of the given year.|
|[now()](now-function.md)|Returns the current UTC clock time, optionally offset by a given timespan.|
|[startofday()](startofday-function.md)|Returns the start of the day containing the date, shifted by an offset, if provided.|
|[startofmonth()](startofmonth-function.md)|Returns the start of the month containing the date, shifted by an offset, if provided.|
|[startofweek()](startofweek-function.md)|Returns the start of the week containing the date, shifted by an offset, if provided.|
|[startofyear()](startofyear-function.md)|Returns the start of the year containing the date, shifted by an offset, if provided.|
|[todatetime()](todatetime-function.md)|Converts input to datetime scalar.|
|[totimespan()](totimespan-function.md)|Converts input to timespan scalar.|
|[unixtime_microseconds_todatetime()](unixtime-microseconds-todatetime-function.md)|Converts unix-epoch microseconds to UTC datetime.|
|[unixtime_milliseconds_todatetime()](unixtime-milliseconds-todatetime-function.md)|Converts unix-epoch milliseconds to UTC datetime.|
|[unixtime_nanoseconds_todatetime()](unixtime-nanoseconds-todatetime-function.md)|Converts unix-epoch nanoseconds to UTC datetime.|
|[unixtime_seconds_todatetime()](unixtime-seconds-todatetime-function.md)|Converts unix-epoch seconds to UTC datetime.|
|[weekofyear()](week-of-year-function.md)|Returns an integer representing the week number.|
## Dynamic/array functions
|Function Name     |Description                                          |
|-------------------------|--------------------------------------------------------|
|[array_concat()](array-concat-function.md)|Concatenates a number of dynamic arrays to a single array.|
|[array_iff()](array-iff-function.md)|Applies element-wise iif function on arrays.|
|[array_index_of()](array-index-of-function.md)|Searches the array for the specified item, and returns its position.|
|[array_length()](array-length-function.md)|Calculates the number of elements in a dynamic array.|
|[array_reverse()](array-reverse-function.md)|Reverses the order of the elements in a dynamic array.|
|[array_rotate_left()](array-rotate-left-function.md)|Rotates values inside a dynamic array to the left.|
|[array_rotate_right()](array-rotate-right-function.md)|Rotates values inside a dynamic array to the right.|
|[array_shift_left()](array-shift-left-function.md)|Shifts values inside a dynamic array to the left.|
|[array_shift_right()](array-shift-right-function.md)|Shifts values inside a dynamic array to the right.|
|[array_slice()](array-slice-function.md)|Extracts a slice of a dynamic array.|
|[array_sort_asc()](array-sort-asc-function.md)|Sorts a collection of arrays in ascending order.|
|[array_sort_desc()](array-sort-desc-function.md)|Sorts a collection of arrays in descending order.|
|[array_split()](array-split-function.md)|Builds an array of arrays split from the input array.|
|[array_sum()](array-sum-function.md)|Calculates the sum of a dynamic array.|
|[`bag_has_key()`](bag-has-key-function.md)|Checks whether a dynamic bag column contains a given key.|
|[bag_keys()](bag-keys-function.md)|Enumerates all the root keys in a dynamic property-bag object.|
|[bag_merge()](bag-merge-function.md)|Merges dynamic property-bags into a dynamic property-bag with all properties merged.|
|[bag_pack()](packfunction.md)|Creates a dynamic object (property bag) from a list of names and values.|
|[bag_pack_columns()](bag-pack-columns-function.md)|Creates a dynamic object (property bag) from a list of columns.|
|[bag_remove_keys()](bag-remove-keys-function.md)|Removes keys and associated values from a dynamic property-bag.|
|[bag_set_key()](bag-set-key-function.md)|Sets a given key to a given value in a dynamic property-bag.|
|[jaccard_index()](jaccard-index-function.md)|Computes the [Jaccard index](https://en.wikipedia.org/wiki/Jaccard_index) of two sets.|
|[pack_all()](pack-all-function.md)|Creates a dynamic object (property bag) from all the columns of the tabular expression.|
|[pack_array()](pack-array-function.md)|Packs all input values into a dynamic array.|
|[repeat()](repeat-function.md)|Generates a dynamic array holding a series of equal values.|
|[set_difference()](set-difference-function.md)|Returns an array of the set of all distinct values that are in the first array but aren't in other arrays.|
|[set_has_element()](set-has-element-function.md)|Determines whether the specified array contains the specified element.|
|[set_intersect()](set-intersect-function.md)|Returns an array of the set of all distinct values that are in all arrays.|
|[set_union()](set-union-function.md)|Returns an array of the set of all distinct values that are in any of provided arrays.|
|[treepath()](treepath-function.md)|Enumerates all the path expressions that identify leaves in a dynamic object.|
|[zip()](zip-function.md)|The zip function accepts any number of dynamic arrays. Returns an array whose elements are each an array with the elements of the input arrays of the same index.|
## Window scalar functions
|Function Name     |Description                                          |
|-------------------------|--------------------------------------------------------|
|[next()](next-function.md)|For the serialized row set, returns a value of a specified column from the later row according to the offset.|
|[prev()](prev-function.md)|For the serialized row set, returns a value of a specified column from the earlier row according to the offset.|
|[row_cumsum()](row-cumsum-function.md)|Calculates the cumulative sum of a column.|
|[row_number()](row-number-function.md)|Returns a row's number in the serialized row set - consecutive numbers starting from a given index or from 1 by default.|
|[row_rank_dense()](row-rank-dense-function.md)|Returns a row's dense rank in the serialized row set.|
|[row_rank_min()](row-rank-min-function.md)|Returns a row's minimal rank in the serialized row set.|
## Flow control functions
|Function Name            |Description                                             |
|-------------------------|--------------------------------------------------------|
|[toscalar()](toscalar-function.md)|Returns a scalar constant value of the evaluated expression.|
## Mathematical functions
|Function Name     |Description                                          |
|-------------------------|--------------------------------------------------------|
|[abs()](abs-function.md)|Calculates the absolute value of the input.|
|[acos()](acos-function.md)|Returns the angle whose cosine is the specified number (the inverse operation of cos()).|
|[asin()](asin-function.md)|Returns the angle whose sine is the specified number (the inverse operation of sin()).|
|[atan()](atan-function.md)|Returns the angle whose tangent is the specified number (the inverse operation of tan()).|
|[atan2()](atan2-function.md)|Calculates the angle, in radians, between the positive x-axis and the ray from the origin to the point (y, x).|
|[beta_cdf()](beta-cdf-function.md)|Returns the standard cumulative beta distribution function.|
|[beta_inv()](beta-inv-function.md)|Returns the inverse of the beta cumulative probability beta density function.|
|[beta_pdf()](beta-pdf-function.md)|Returns the probability density beta function.|
|[cos()](cos-function.md)|Returns the cosine function.|
|[cot()](cot-function.md)|Calculates the trigonometric cotangent of the specified angle, in radians.|
|[degrees()](degrees-function.md)|Converts angle value in radians into value in degrees, using formula degrees = (180 / PI) * angle-in-radians.|
|[erf()](erf-function.md)|Returns the error function.|
|[erfc()](erfc-function.md)|Returns the complementary error function.|
|[exp()](exp-function.md)|The base-e exponential function of x, which is e raised to the power x: e^x.|
|[exp10()](exp10-function.md)|The base-10 exponential function of x, which is 10 raised to the power x: 10^x.|
|[exp2()](exp2-function.md)|The base-2 exponential function of x, which is 2 raised to the power x: 2^x.|
|[gamma()](gamma-function.md)|Computes gamma function.|