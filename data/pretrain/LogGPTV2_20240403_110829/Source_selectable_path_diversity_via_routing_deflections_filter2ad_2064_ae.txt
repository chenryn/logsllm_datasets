 0.8
 0.6
 0.4
 0.2
n
o
i
t
c
a
r
f
e
v
i
t
a
l
u
m
u
C
Rule 1
Rule 2
Rule 3
 1
 0.8
 0.6
 0.4
 0.2
n
o
i
t
c
a
r
f
e
v
i
t
a
l
u
m
u
C
Rule 1
Rule 2
Rule 3
 1
 0.8
 0.6
 0.4
 0.2
n
o
i
t
c
a
r
f
e
v
i
t
a
l
u
m
u
C
 0
 0
 0.4
 0.2
Fraction of node difference
 0.6
 0.8
 1
 0
 0
 0.4
 0.2
Fraction of node difference
 0.6
 0.8
 1
 0
 0
 0.4
 0.2
Fraction of node difference
 0.8
 0.6
 1
(a) Abilene
(b) Exodus
(c) Sprint
Figure 7: The largest fraction of node differences between a deﬂection path and the default shortest path for every node pair. Short vertical lines
with horizontal bars show the (very tight) standard deviations across runs. An ideal result would hug the x-axis then jump to one at 100%, meaning
that every node pair had a node-disjoint deﬂection path. We see that most node pairs can deﬂect a large fraction of the shortest path nodes, with
larger networks being able to deﬂect more of the path more often.
s
r
i
a
P
e
d
o
N
f
o
r
e
b
m
u
N
 45
 40
 35
 30
 25
 20
 15
 10
 5
 0
 0
 1
Total
Rule 3
Rule 2
Rule 1
 6
 7
 8
 9
s
r
i
a
P
e
d
o
N
f
o
r
e
b
m
u
N
 1400
 1200
 1000
 800
 600
 400
 200
 0
Total
Rule 3
Rule 2
Rule 1
 0
 10
 20
 30
Node rank
(b) Exodus
 40
 50
s
r
i
a
P
e
d
o
N
f
o
r
e
b
m
u
N
 14000
 12000
 10000
 8000
 6000
 4000
 2000
 0
Total
Rule 3
Rule 2
Rule 1
 0
 20
 40
 60
 80
 100  120
Node rank
(c) Sprint
 2
 4
 3
 5
Node rank
(a) Abilene
Figure 8: The number of node pairs that can avoid a faulty node after 10 tries. The x-axis shows the index of the faulty node. The vertical bars show
the total number of node pairs that have the faulty node on their default routing paths. The points show how many node pairs successfully avoid the
faculty nodes. The closer the points are to the top of the lines, the better. Rule 3 is consistently able to mostly or completely avoid faults.
proximates the probability with which a source can avoid a faulty
node after a given number of tries. Not all faults can be bypassed.
The column labeled “failed” shows the fraction of node pairs that
needed more than 10 tries. The column labeled “unavoidable”
shows the fraction of node pairs that cannot avoid a faulty node
even if all tag values are tried. We see that, in all three networks, a
signiﬁcant fraction of node pairs can avoid faulty nodes in 10 tries,
especially for Rules 2 and 3. Moreover, most successes happen
quickly, such that only one or two tags need to be tried in most
cases. The difference between trying ten tags and all tags is also
insigniﬁcant. This suggests that a source can quickly ﬁnd an alter-
native path to avoid a particular node (or link).
6.4 Inter-domain Deﬂections
It is difﬁcult to assess the path diversity that deﬂections will pro-
vide in the Internet. This is because it depends on inter-domain
routing policies and peering patterns as well as ISP topologies, and
precious little data are publicly available. Instead, to gain a basic
understanding of deﬂections with multiple ISPs, we look at how of-
ten they can change the peering points used between pairs of ISPs.
We construct a simple experiment to do this as follows. For each
n
o
i
t
c
a
r
f
e
g
a
r
e
v
A
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
 0
 0
 1
 2
 3
Rule 1
Rule 2
Rule 3
 10
failed
unavoidable
 4
 6
 7
 8
 5
 9
Number of Tries
(a) Abilene
n
o
i
t
c
a
r
f
e
g
a
r
e
v
A
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
 0
 0
 1
 2
 3
Rule 1
Rule 2
Rule 3
 10
failed
unavoidable
 4
 6
 7
 8
 5
 9
Number of Tries
(b) Exodus
n
o
i
t
c
a
r
f
e
g
a
r
e
v
A
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
 0
 0
 1
 2
 3
 4
Rule 1
Rule 2
Rule 3
 10
failed
unavoidable
 6
 7
 8
 9
 5
Number of Tries
(c) Sprint
Figure 9: The number of tags needed to bypass a fault. The y-axis gives the fraction of node pairs that can avoid a faulty node on their shortest path
after the number of tries on the x-axis. The column labeled “failed” shows the fraction of node pairs that needed more than 10 tries to bypass the
fault. The column labeled “unavoidable” shows the fraction of node pairs that cannot avoid a faulty node even if all tag values are tried. The short
vertical bars show the standard deviation across different node faults. We see that most faults can be bypassed with one or two tag choices, and that
the difference between trying 10 tags and all tags is insigniﬁcant. Note the y-axis stops at 0.7 to show more detail.
network, we randomly choose P nodes to be peering points, where
|P| = 2, 3, 4, 5. We assume that BGP policies have chosen this set
as the egress or peering points to an adjacent ISP. Each node n in
the network will have a default peering point p ∈ P for which n
has the lowest IGP cost. This simulates the shortest path routing
mechanism inside the ISP.
We then run simulations to measure the fraction of nodes that