other hand, the defender also tends to reduce the fraction
of bandwidth added to the external link as bandwidth price
increases.
When the server capacity is 100,000, the fraction of legit-
imate traﬃc served by the server ﬁrst increases, and then
decreases as bandwidth price increases (Figure 4(5)). The
shape of this curve diﬀers from the one corresponding to
that served by the external link, because the fraction of at-
tack traﬃc arriving at the server decreases as bandwidth
price increases. But when the server capacity is high (i.e.,
500,000), all traﬃc passing through the external link can be
served by the server, thus making the two curves identical
in Figure 4(6).
Practical implications:
Our analysis of individual
defense reveals the following: (1) When the attacker and
the defender reason at diﬀerent sophistication levels, their
decisions can change signiﬁcantly, which further aﬀect the
outcome of the game. This implies that players’ strategic
thinking plays an important role in deciding the outcome of
a DDoS attack and defense game. From the defender’s per-
spective, if she knows she faces a sophisticated attacker, she
knows that the attacker knows some defense would be de-
ployed in advance and thus could use more bots. She needs
to take that into consideration in the guessing game to ﬁnd
her best response. Our framework can be used in these sit-
uations to help predict actions of the adversary at diﬀerent
sophistication levels and accordingly derive the best strate-
gies for the defender. (2) A player’s decision can be aﬀected
by a parameter that is not directly related to her decision.
 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 1e-05 0.0001 0.001 0.01 0.1 1Fraction of served legitimate trafficPriceExternal link, before mitigationExternal link, after mitigationServer, before mitigationServer, after mitigation 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 1e-05 0.0001 0.001 0.01 0.1 1Fraction of served legitimate trafficPriceExternal link, before mitigationExternal link, after mitigationServer, before mitigationServer, after mitigation 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 1e-05 0.0001 0.001 0.01 0.1 1Fraction of served legitimate trafficPriceExternal link, before mitigationExternal link, after mitigationServer, before mitigationServer, after mitigation 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 1e-05 0.0001 0.001 0.01 0.1 1Fraction of served legitimate trafficPriceExternal link, before mitigationExternal link, after mitigationServer, before mitigationServer, after mitigation 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 1e-05 0.0001 0.001 0.01 0.1 1Fraction of served legitimate trafficPriceExternal link, before mitigationExternal link, after mitigationServer, before mitigationServer, after mitigation 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 1e-05 0.0001 0.001 0.01 0.1 1Fraction of served legitimate trafficPriceExternal link, before mitigationExternal link, after mitigationServer, before mitigationServer, after mitigation561Table 3: Parameter settings in multi-layer defense
experiments
Parameter
Avg. #users
Server capacity
Bandwidth price
Detection rate
False alarm rate
Values
5000 (low), 10000 (medium), 15000 (high)
20000 (low), 100000 (medium), 500000 (high)
0.0001 (low), 0.01 (medium), 1 (high)
0.6 (low), 0.8 (medium), 1.0 (high)
0 (low), 0.1 (medium), 0.2 (high)
When the bandwidth price changes, this aﬀects not only be-
haviors of the defender whose utility is directly related, but
also actions of the attacker, although indirectly. This sug-
gests that game-theoretic evaluation of DDoS attacks and
defense could lead to diﬀerent results from traditional eval-
uation methods which usually ignore such indirect eﬀects.
The defender needs to consider such eﬀects on both sides
to ﬁnd the best response. Our framework can be used in
these situations to help the defender predict how changes of
system parameters (e.g., bot price, bandwidth price, etc.)
would aﬀect the adversary’s action and then ﬁnd the best
move to maximize her own utility.
8. ANALYSIS OF MULTI-LAYER DEFENSE
We now consider scenarios where the defender put multi-
ple defense schemes in place. The parameters are set simi-
larly as in Table 2, except those shown in Table 3. In total,
we have 243 scenarios due to diﬀerent combinations of pa-
rameter settings. For each scenario, we simulate 256 random
samples, and the average decisions made by the attacker and
the defender in these samples are shown in Figure 5. As we
have a high-dimension input parameter space, we use dif-
ferent colors, shapes and sizes of markers to diﬀerentiate
diﬀerent inputs. As some irregular patterns in the ﬁgures
suggest, the players’ best strategies may not have linear re-
lationships with the system parameters.
In the following,
we will interpret these plots and highlight some interesting
observations.
Attacker’s decisions: For a na¨ıve attacker (i.e., K is
1), the number of bots used depends on both the server ca-
pacity and the average number of users: with a low server
capacity, the attacker chooses a low number of bots for at-
tacks (around 5000); with a medium or high server capacity,
the attacker increases the number of bots when the average
number of users decreases. The na¨ıve attacker also uses a
high sending rate per bot (close to 10) in all scenarios.
For a sophisticated attacker (i.e., K is 2), when the server
capacity is low, the attacker still uses a small number of bots
(close to 5000). When the server capacity is high and the
bandwidth price is not high, the attacker uses a high number
of bots for the attack (around 25,000). When the server ca-
pacity is medium or high, the general trend is that a higher
bandwidth price leads to a smaller number of bots used for
the attack. Moreover, the detection rate and the false pos-
itive rate of the static blocking scheme have little eﬀect on
the number of the bots used by the attacker. Regarding the
sending rate per bot, the attacker tends to use a high rate
for most of the scenarios, but if the server capacity is low
(circles) a lower sending rate per bot may be used. Interest-
ingly, the performance of the static blocking scheme aﬀects
the sending rate per bot by the attacker: a better performed
static blocking scheme with a lower false alarm rate or a
higher detection rate could make the attacker use a lower
sending rate per bot.
Defender’s decisions: Bandwidth inﬂation. The frac-
tions of increased bandwidth on the external link by the
defender are shown in Figure 5(3) and 5(6). (1) When the
bandwidth price is high (large-sized markers), the defender
chooses not to increase bandwidth on the external link, re-
gardless of other parameter settings. This is in concert with
our intuition.
(2) When the bandwidth price is medium
(medium-sized markers) and the server capacity is medium
or high (blue or red ), if K = 2, the fraction of increased
bandwidth on the external link does not change much with
other parameters but if K = 1, it mostly increases with the
average number of users (indicated by color). When the
bandwidth price is medium and the server capacity is low
(red medium-sized circles), if K = 1, the defender does not
add more bandwidth to the external link, but if K = 2, her
decision seems to be aﬀected by the detection rate of the
static blocking scheme: the higher detection rate, the lower
fraction of increased bandwidth on the external link. This
suggests that the defender’s three layers of defense mecha-
nisms could complement each other: a better performed de-
fense component allows the defender to rely less on others.
(3) When the bandwidth price is low (small-sized markers),
the defender’s decisions become more complicated. For in-
stance, if K is 1, the defender adds a relatively high amount
of extra bandwidth to the external link when false positive
rate of the static blocking scheme is non-zero, the server ca-
pacity is low, and the average number of users is medium
(small-sized blue circles in Figure 5 (3)), but if K = 2, the
defender adds a relatively high amount of extra bandwidth
when the server capacity is high (diamonds), regardless of
the performance of the static blocking scheme.
Static blocking. The fraction of samples when the defender
enables static blocking are shown in Figure 5(7) and 5(10).
We ﬁrst consider the scenarios when K = 1 (Figure 5(7).
The defender tends not to enable static blocking when the
server capacity is high (diamonds), or the server capacity
is low but the average number of users is also low (yellow
circles). She also tends to always enable static blocking
when the server capacity is low and the average number of
users is high (red circles). The defender enables static block-
ing with probability around 20% when the server capacity
is medium (boxes). When the server capacity is low and
the number of users is medium (blue circles), the defender’s
decision depends on the performance of the static blocking
scheme. For instance, if the static blocking scheme does not
produce false alarms or if the bandwidth price is high, the
defender enables static blocking with probability at around
80%; otherwise, the probability of enabling static blocking
is between 40% and 60%. The results are surprising, be-
cause when K = 1, the defender does not assume existence
of any attack and she thus does not have any incentive to
enable static blocking. Close examination reveals that when
the server is overloaded, the defender will sample decisions
with static blocking enabled, which would drop legitimate
traﬃc due to false alarms. As the server is overloaded any-
way, turning on static blocking produces exactly the same
utility for the defender as if she does not.
When K = 2 (Figure 5(10)), the defender disables static
blocking when the server capacity is high (diamonds), and
almost always enables static blocking when the server ca-
pacity is low and the average number of users is medium
or high (blue and red circles). When the server capacity
is medium (boxes), the defender enables static blocking in
562(1) bots, K = 1
(2) rate per bot, K = 1
(3) bandwidth inﬂation, K = 1
(4) bots, K = 2
(5) rate per bot, K = 2
(6) bandwidth inﬂation, K = 2
(7) static blocking, K = 1
(8) no rate limit, K = 1
(9) rate limit, K = 1
(10) static blocking, K = 2
(11) no rate limit, K = 2
(12) rate limit, K = 2
Figure 5: Decisions made by the attacker and the defender when multiple layers of protection are deployed.
Shape: Circle (capacity = 20000), Box (capacity = 100000), Diamond (capacity = 500000); Color: Yellow
(Avg. #users = 5000), Blue (Avg. #users = 10000), Red (Avg. #users = 15000). The X-axis:
(a, b)
means the detection rate is a and the false positive rate is b. Size of each marker implies the corresponding
bandwidth price. Best viewed in color.
(0.6,0)(0.6,0.1)(0.6,0.2)(0.8,0)(0.8,0.1)(0.8,0.2)(1,0)(1,0.1)(1,0.2)Scenario50001000015000200002500030000Numberofbotsusedinattack(0.6,0)(0.6,0.1)(0.6,0.2)(0.8,0)(0.8,0.1)(0.8,0.2)(1,0)(1,0.1)(1,0.2)Scenario9.29.39.49.59.69.79.89.910.0Sendingrateperbotinattack(0.6,0)(0.6,0.1)(0.6,0.2)(0.8,0)(0.8,0.1)(0.8,0.2)(1,0)(1,0.1)(1,0.2)Scenario0.00.20.40.60.81.01.21.41.6Fractionofincreasedbandwidthonexternallink(0.6,0)(0.6,0.1)(0.6,0.2)(0.8,0)(0.8,0.1)(0.8,0.2)(1,0)(1,0.1)(1,0.2)Scenario50001000015000200002500030000Numberofbotsusedinattack(0.6,0)(0.6,0.1)(0.6,0.2)(0.8,0)(0.8,0.1)(0.8,0.2)(1,0)(1,0.1)(1,0.2)Scenario4.05.06.07.08.09.010.0Sendingrateperbotinattack(0.6,0)(0.6,0.1)(0.6,0.2)(0.8,0)(0.8,0.1)(0.8,0.2)(1,0)(1,0.1)(1,0.2)Scenario0.00.51.01.52.0Fractionofincreasedbandwidthonexternallink(0.6,0)(0.6,0.1)(0.6,0.2)(0.8,0)(0.8,0.1)(0.8,0.2)(1,0)(1,0.1)(1,0.2)Scenario0.00.20.40.60.81.0Fractionofsamplesenablingstaticblocking(0.6,0)(0.6,0.1)(0.6,0.2)(0.8,0)(0.8,0.1)(0.8,0.2)(1,0)(1,0.1)(1,0.2)Scenario0.00.20.40.60.81.0Fractionofsampleswithoutratelimiting(0.6,0)(0.6,0.1)(0.6,0.2)(0.8,0)(0.8,0.1)(0.8,0.2)(1,0)(1,0.1)(1,0.2)Scenario0.01.02.03.04.05.06.07.08.0Ratelimitusedbydefender(ifused)(0.6,0)(0.6,0.1)(0.6,0.2)(0.8,0)(0.8,0.1)(0.8,0.2)(1,0)(1,0.1)(1,0.2)Scenario0.00.20.40.60.81.0Fractionofsamplesenablingstaticblocking(0.6,0)(0.6,0.1)(0.6,0.2)(0.8,0)(0.8,0.1)(0.8,0.2)(1,0)(1,0.1)(1,0.2)Scenario0.00.20.40.60.81.0Fractionofsampleswithoutratelimiting(0.6,0)(0.6,0.1)(0.6,0.2)(0.8,0)(0.8,0.1)(0.8,0.2)(1,0)(1,0.1)(1,0.2)Scenario0.01.02.03.04.05.06.07.08.0Ratelimitusedbydefender(ifused)563about 23% of the samples, and the fraction slightly varies
with the average number of users and the bandwidth price.
When the server capacity is low and the average number of
users is low (yellow circles), the defender’s decision depends
on the performance of the static blocking scheme as well as
the bandwidth price; hence, it diﬀers from what she would
have done if K = 1.
Rate limiting. The decisions regarding rate limiting are
shown in Figures 5(8-9) and 5(11-12). When K is 1, one in-
teresting observation is that when the server capacity is low
and the average number of users is medium or high (red or
blue circles), the defender’s decision depends on the perfor-
mance of the static blocking scheme:
if the static blocking
scheme does not generate false positives, in around 21% of
samples, the defender disables rate limiting; otherwise, the
fraction of samples in which the defender does not enable
rate limiting is about between 40% and 60%.
In the re-
maining samples when the defender enables rate limiting,
the rate limit is aﬀected by the performance of the static
blocking scheme. One may wonder why the performance of
the static blocking scheme aﬀects the defender’s decisions in
rate limiting since when K = 1, the defender assumes no at-
tacks. This is actually because if the static blocking scheme
is prone to false alarms, some legitimate traﬃc would be
dropped by the static blocking scheme, and if the rate limit-
ing component sees that the sending rate per source is below
a certain threshold, it would not enable rate limiting. Reve-
lation of such correlation in changes of system states by dif-
ferent layers of protection is made possible due to reasoning
based on Bayesian networks but is diﬃcult under traditional
game theoretic models.
We next consider the results when K = 2. In this case,
the defender’s decisions regarding rate limit when the server
capacity is high or medium are similar to those when K = 1
(boxes and diamonds). But when the server capacity is low
(circles), we observe that if the detection rate of the static
blocking scheme is not perfect, then the defender is more
likely to enable rate limiting with a high probability and use
a low rate limit (if the rate limiting scheme is enabled); oth-
erwise if the detection rate of the static blocking scheme is
100%, the defender is more likely to disable rate limiting and
in cases where it is not enabled, she tends to use a higher
rate limit. This further conﬁrms our previous observation
that the diﬀerent layers of defense mechanisms can comple-
ment each other, and having a better performed component
allows the defender to rely less on other components in the
defense system.
Practical implications: Our analysis of multi-layer
defense reveals the following: (1) In some scenarios the de-
ployment of multi-layer defense against DDoS attacks allows
the defender to rely less on a speciﬁc defense mechanism if
another is well performed, but the degree of reduction de-
pends on various factors, such as the server capacity and
intensity of legitimate users’ traﬃc. When the defender
needs to decide whether to invest on a new defense tech-
nology, say, a better intrusion detection system, she needs
to understand relationships between it and other defense
schemes. A number of scenarios have shown having a better-
performed traﬃc blocking scheme does not necessarily mean
it is useful, because other defense schemes can complement
a poorly-performed one. Hence, our framework is instru-
mental in identifying those scenarios where investment on
a new defense technology will indeed pay oﬀ. (2) When
there are multiple layers of defense, players’ decisions be-
come complicated due to their nonlinear relationships with
system parameters. Our framework can help the defender
get better outcome or control defense mechanisms in these
situations, due to its ability to infer the best action (e.g.,
optimal settings of defense parameters) given an observed
network state. Moreover, our framework is capable of sort-
ing through a number of uncertain factors (e.g., number of
normal users, amount of DDoS traﬃc, and fraction of normal
traﬃc falsely classiﬁed by the intrusion detection system) to
ﬁnd optimal strategies for the defender.
9. CONCLUSIONS
The goal of this work is to explore new methodology for
evaluating DDoS attacks and defense. Although there were
a few previous attempts in using traditional game theory
tools to model DDoS attacks and defense, our contribution
in this work is development of a game-theoretic framework
that is able to model much more complicated scenarios in
DDoS attacks and defense. This framework uses Bayesian
networks for players to infer system states in a probabilistic
manner. Level-K thinking is used to model diﬀerent sophis-
tication levels of the players. Observations from our exper-
iments show that taking strategic thinking of players into
account brings a new perspective to analysis of DDoS at-
tacks and defense, and it is necessary to do so if we want
to gain a realistic glimpse into behaviors of both players in
DDoS attacks and defense.
In our future work, we plan to incorporate incomplete
information into our evaluation framework by letting each
player deﬁne a separate Bayesian network for her own rea-
soning, rather than having a single Bayesian graphical model
as described in Sections 4 and 5. Such ﬂexibility will allow
each player to model more ﬁne-grained knowledge about the
adversary in her decision making process.
In this study we mainly focused on games in which the
attacker and the defender reason at the same level K, but
it would be interesting to see how players thinking at diﬀer-
ent sophistication levels aﬀect the outcomes of the games. In
another plan of our future work, we would like to extend the
static game model used in our current framework to dynamic
games where decisions of both the attacker and the defender
change over time. Techniques such as reinforcement learning
can be used to model how a player learns about the adver-
sary’s strategies dynamically. This will further improve the
richness of our framework.