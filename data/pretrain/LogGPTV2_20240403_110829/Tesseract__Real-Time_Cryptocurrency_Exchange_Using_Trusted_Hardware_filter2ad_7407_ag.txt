the Bitcoin blockchain and instead Ethereum’s stateful
contracts need to utilized, see [14]). Another example is
a crowdfunding contract that raises money denominated
in both tBTC and ETH, but returns all the funds to the
investors if the target amount was not reached before a
deadline.
The issuance of tokenized coins is illustrated in
Figure 18. When a user requests to withdraw tokenized
the enclave will move the coins to a reserve
coins,
address, and mint the same amount of new tokens (using
ERC20 contract, see next). In the illustration:
19
Alice  25 BTCCarol1 BTCSGX14 BTCTX1Bitcoin transactionAlice 30 BTC Bob50 BTC Bob40 BTCCarol700 LTCDave5 LTCTX2Litecoin transactionBob  400 LTCCarol100 LTCSGX205 LTCEthereum transactionTX3Alice: +5 tBTC  Bob: +8 tBTC, +200 tLTCCarol: +1 tBTC Dave: +5 tLTCyet in cryptocurrencies such as Bitcoin and Litecoin (cf.
Section 8). More importantly, the principal reason for
having tokenized coins is to use them in smart contracts,
and Ethereum is better suited for this purpose.
Since the tokenized coins are issued by the Tesseract
exchange and are fungible, the holders of these tokens
will be unable to convert them to native coins in the case
that the Tesseract platform is destroyed. In Section 6 we
give the full version of Tesseract, which is distributed
and hence highly unlikely to fail. It is also possible to
incorporate a timeout to the reserve outputs that speciﬁes
that the coins will be controlled by (say) a multisig of
several reputable parties if Tesseract stops updating the
reserve outputs and thus the time expiration is reached.
However, this gives an incentive to these several parties
to destroy the Tesseract platform and collect the reserve
coins.
8 Fiat Currencies
For ﬁat currency transactions that are done via the
traditional banking system,
it is problematic to offer
integration with a protocol that is based on cryptographic
assumptions. One reason for this is that ﬁat transactions
can be reversed as a result of human intervention (e.g., in
the course of investigating a complaint by a customer of
a bank).
The problem can be outsourced by relying on a
counterparty that provides recognizable tokens that
can be transferred via the underlying cryptocurrency
system, and are supposed to represent an equivalent
amount of ﬁat currency. This approach enables ﬁat
currency transfers that become irreversible just like the
cryptocurrency payments, and depends on the reputation
of the counterparty to redeem the token for the actual ﬁat
currency. See for example [19, Section 5.2] and [67] in
this regard. One instantiation of this idea that enjoys a
relatively high degree of popularity is Tether [21, 18],
which circulates tokens that are pegged to the U.S. dollar
(involving proof-of-reserve) using the Omni layer [56]
on top of Bitcoin. The Tesseract service provider may
even issue its own ﬁat tokens (by accepting traditional
wire transfers of ﬁat currency), and other platforms and
users may assign value to the tokens if they consider this
Tesseract service provider to be trustworthy.
The SGX enclave of Tesseract can thus support
assets that are redeemable for ﬁat currencies, by
recognizing certain predeﬁned types of tokens in the
deposit transactions. In the case that the cryptocurrency
(in which such an asset circulates) supports tagging-
based colored coins [67, 41], the validation predicate for
the deposit is easy to implement. This is because the
predicate would inspect only current deposit transaction,
20
rather than also inspecting prior transfers of ownership
that ended up as this deposit. For non-tagging-based
colored coin, Tesseract would need to run a full node
inside an SGX enclave, which is far more demanding
than running an SPV [54] client (the Tesseract enclave
operation that we specify in Section 4 is essentially
an SPV client). Tagging-based colored coins require
miners and full nodes to perform a moderate amount
of extra work (only for colored transactions), which is
not supported on cryptocurrencies such as Bitcoin and
Litecoin yet (see [41] for a proposed implementation and
[60] regarding future ideas). However, Ethereum already
supports the equivalent of tagging-based colored coins,
in the form of an ERC20 smart contract (cf. [74]). Our
reference implementation of Tesseract already supports
ERC20 assets as well, see Appendix B.
Hence, other than just allowing cryptocurrencies to be
traded for one another, Tesseract can also let the users
trade cryptocurrencies for traditional assets that have
a digital representation (in particular ﬁat currencies),
though this capability involves trust in the reputation of
the issuers of the assets.
9 Related Work
Trusted hardware has been proposed as an effective tool
for different kinds of cryptocurrency use-cases, such
as off-chain payment channels [45, 44], reputable data
feed services [86], and a mixing service [79]. These
schemes offer better efﬁciency and features by placing
more trust in the hardware manufacturer: in particular,
off-chain channels and mixers can also be accomplished
without secure processors (see, e.g., [50, 14, 69, 32]).
By contrast, Tesseract reduces the amount of trust that
needs to be placed in the exchange service relative to
all other real-time exchange schemes (to the best of our
knowledge).
In Section 3 we provide a comparison
between Tesseract and various other cryptocurrency
exchange schemes.
Several works achieve fair exchange and secure cash
distribution via interaction with a cryptocurrency system,
cf. [4, 3, 13, 14, 37, 39]. However,
these works
enable fair exchange (with penalties) by using a single
cryptocurrency system, while Tesseract has to provide
all-or-nothing fairness among multiple cryptocurrency
systems.
Outside of academic work, a wide range of industry
gains
efﬁciency
Trusted hardware can also be used to achieve
well-known
signiﬁcant
primitives
functional
cryptographic
secure MPC [62], and NIZK in
encryption [28],
the presence of side-channels [78].
Pass, Shi, and
Tram`er give a formal model of trusted hardware and
remote attestation [59].
for
such
as
and community efforts have attempted to realize various
aspects of cross-chain distributed exchange.
One
strategy is the use of payment channels to achieve a
hub-and-spoke exchange, work which we examine in
Section 3. These efforts are primarily based on the work
in [61], which introduces HTLCs (hashed timelocked
contracts) for payment channels in cryptocurrencies.
A practical example of such applications is available
at [65].
Several exchanges aim at using raw atomic swaps,
as in Figures 1 and 2. Unfortunately as discussed in
Section 2, due to their need for on-chain mediation, there
is no known solution for extending these efforts to real-
time trades. Also, requiring the user to sign HTLC
transactions presents a DoS vector whereby a user can
choose to abort post-matching. A further comparison
of such swap-based exchanges to the channel-based
Lightning network approach is available in [73].
Further alternatives to an atomic swap model for
decentralized, non-custodial exchanges are also explored
in Section 3, with notable early efforts making use of
both reputation [27] and IOUs [70] to achieve economic
security for their trades. Notably, these exchanges still
require on-chain per-trade mediation, and cannot be
real-time. Nonetheless, a wide range of efforts have
focused on developing these swaps, the building blocks
of a potential exchange. Such primitive swaps from,
for example, Bitcoin to ZCash have been demonstrated
in [66].
Lastly, a wide range of decentralized exchanges run
inside a single blockchain and allow users to exchange
assets on that chain, as mentioned in Section 1. Some
of these exchanges use custody in smart contracts to
trustlessly hold user assets (including EtherDelta [64]),
whereas others rely on atomic swaps to exchange assets
that never leave user custody (including AirSwap [57]).
Because of their on-chain settlement, these exchanges
are not
from a number of
manipulation vectors across a design space explored
in [12]. Also, they do not support cross chain exchange.
time, and suffer
real
Acknowledgements
We thank Fred Schneider, Elaine Shi, Ittay Eyal, and
Aniket Kate for useful discussion.
This work is funded in part by NSF grants CNS-
1330599, CNS-1514163, CNS-1564102, and CNS-
1704615, as well as ARO grant W911NF-16-1-0145.
References
[1] ANATI, I., GUERON, S., JOHNSON, S., AND SCARLATA, V.
Innovative Technology for CPU Based Attestation and Sealing.
In HASP’13 (2013), pp. 1–7.
21
[2] ANDRESEN, G.
P2SH.
https://github.com/bitcoin/
bips/blob/master/bip-0016.mediawiki.
[3] ANDRYCHOWICZ, M., DZIEMBOWSKI, S., MALINOWSKI, D.,
AND MAZUREK, L. Fair two-party computations via Bitcoin
deposits. In First Bitcoin Workshop, FC (2014).
[4] ANDRYCHOWICZ, M., DZIEMBOWSKI, S., MALINOWSKI, D.,
AND MAZUREK, L. Secure multiparty computations on Bitcoin.
In IEEE S&P (2014).
[5] BACK, A. O(280) theoretical attack on p2sh.
https://
bitcointalk.org/index.php?topic=323443.0, 2013.
[6] BALDWIN, C.
http://www.reuters.com/article/us-
bitfinex-hacked-hongkong-idUSKCN10E0KP.
[7] BARISSER, A.
High frequency trading on the Coinbase
exchange,
https://medium.com/on-banking/
high-frequency-trading-on-the-coinbase-exchange-
f804c80f507b.
2015.
[8] BARTOLETTI, M., AND POMPIANU, L. An analysis of Bitcoin
OP RETURN metadata. In Financial Cryptography 4th Bitcoin
Workshop (2017). https://arxiv.org/abs/1702.01024.
[9] BEAVER, D., AND GOLDWASSER, S. Multiparty computation
with faulty majority. In 30th Annual Symposium on Foundations
of Computer Science (FOCS) (1989).
J.
[10] BEEKMAN,
A Denial of Service Attack against Fair
https://
Computations using Bitcoin Deposits, 2014.
eprint.iacr.org/2014/911.
[11] BENET, J. https://ipfs.io/.
[12] BENTOV, I., BREIDENBACH, L., DAIAN, P., JUELS, A., LI,
Y., AND ZHAO, X. The cost of decentralization in 0x and
EtherDelta.
http://hackingdistributed.com/2017/08/
13/cost-of-decent/, 2017.
[13] BENTOV, I., AND KUMARESAN, R. How to use Bitcoin to
design fair protocols. In Crypto (2) (2014), pp. 421–439.
[14] BENTOV, I., KUMARESAN, R., AND MILLER, A. Instantaneous
decentralized poker. In Asiacrypt (2017).
[15] BENTOV,
I., MIZRAHI, A.,
Decentralized prediction market without arbiters.
Cryptography 4th Bitcoin Workshop (2017).
AND ROSENFELD, M.
In Financial
[16] BENTOV, I., TIERNOLAN, ET AL. Alt chains and atomic
https://bitcointalk.org/index.php?topic=
transfers.
193281.msg2224949#msg2224949, 2013.
[17] BROWN, D. G. How i wasted too long ﬁnding a concentration
https://
inequality for sums of geometric variables.
cs.uwaterloo.ca/~browndg/negbin.pdf.
[18] CAPITALIZATIONS, C. M.
assets/.
https://coinmarketcap.com/
[19] CLARK, J., BONNEAU, J., FELTEN, E. W., KROLL, J. A.,
On decentralizing
MILLER, A., AND NARAYANAN, A.
prediction markets and order books. In WEIS (2014).
[20] CROMAN, K., DECKER, C., EYAL,
I., GENCER, A. E.,
JUELS, A., KOSBA, A., MILLER, A., SAXENA, P., SHI,
E., SIRER, E. G., SONG, D., AND WATTENHOFER, R. On
In Financial Cryptography
scaling decentralized blockchains.
3rd Bitcoin Workshop (2016).
[21] CURRENCIES ON THE BITCOIN BLOCKCHAIN, T. F.
https://tether.to/wp-content/uploads/2016/06/
TetherWhitePaper.pdf, 2016.
[22] DECKER, C., AND WATTENHOFER, R. A fast and scalable
payment network with Bitcoin duplex micropayment channels.
In 17th Stabilization, Safety, and Security of Distributed Systems
(SSS) (2015).
[23] DESMEDT, AND FRANKEL.
Threshold cryptosystems.
CRYPTO: Proceedings of Crypto (1989).
In
[42] LAU, J. P2wpk. https://github.com/jl2012/bips/blob/
vault/bip-0VVV.mediawiki, 2017.
[24] DINGLEDINE, R., MATHEWSON, N., AND SYVERSON, P. F.
In 13th USENIX
Tor: The second-generation onion router.
Security (2004).
[25] DREE12 (PSEUDONYM). List of major Bitcoin heists, thefts,
https://bitcointalk.org/
hacks,
scams, and losses.
index.php?topic=576337.
[26] DUBHASHI, D. P., AND PANCONESI, A. Concentration of
Measure for the Analysis of Randomized Algorithms. Cambridge
University Press, 2009.
[27] ENGLISH,
S. M., ORLANDI,
F.,
AND AUER,
S.
CoRR
Disintermediation of
abs/1609.02598 (2016).
inter-blockchain transactions.
[28] FISCH, B. A., VINAYAGAMURTHY, D., BONEH, D., AND
Iron: Functional encryption using Intel SGX,
GORBUNOV, S.
2017.
[29] GARAY, J., KIAYIAS, A., AND LEONARDOS, N. The Bitcoin
In Eurocrypt
backbone protocol: Analysis and applications.
(2015).
[30] GENNARO, R., GOLDFEDER, S., AND NARAYANAN, A.
Threshold-optimal DSA/ECDSA signatures and an application to
Bitcoin wallet security. In 14th ACNS (2016).
[31] GOLDWASSER, S., AND LEVIN, L. Fair computation of general
In Proceedings of
functions in presence of immoral majority.
Advances in Cryptologie (CRYPTO ’90) (Berlin, Germany, Aug.
1991), A. J. Menezes and S. A. Vanstone, Eds., vol. 537 of LNCS,
Springer, pp. 77–93.
[32] HEILMAN, E., ALSHENIBR, L., BALDIMTSI, F., SCAFURO,
TumbleBit: An untrusted
https://
A., AND GOLDBERG, S.
Bitcoin-compatible anonymous payment hub.
eprint.iacr.org/2016/575, 2016.
[33] HEILMAN, E., KENDLER, A., ZOHAR, A., AND GOLDBERG,
S.
In
24th USENIX Security Symposium (USENIX Security 15)
(Washington, D.C., 2015), USENIX Association, pp. 129–144.
Eclipse attacks on Bitcoin’s peer-to-peer network.
[34] HOEKSTRA, M., LAL, R., PAPPACHAN, P., PHEGADE, V.,
AND DEL CUVILLO, J. Using innovative instructions to create
trustworthy software solutions. In HASP (2013).
[35] JOHNSON, S., SCARLATA, V., ROZAS, C., BRICKELL,
E., AND MCKEEN, F.
Intel Software Guard Extensions:
EPID provisioning and attestation services, 2016. https://
software.intel.com/en-us/blogs/2016/03/09/intel-
sgx-epid-provisioning-and-attestation-services.
[36] KIAYIAS, A., MILLER, A., AND ZINDROS, D. Non-interactive
proofs of proof-of-work. https://eprint.iacr.org/2017/
963, 2017.
[37] KIAYIAS, A., ZHOU, H.-S., AND ZIKAS, V. Fair and robust
In
multi-party computation using a global transaction ledger.
Eurocrypt (2015).
[38] KNIGHT,
S.
http://www.reuters.com/article/us-
bitcoin-mtgox-wallet-idUSBREA2K05N20140321.
[39] KOSBA, A. E., MILLER, A., SHI, E., WEN, Z., AND
The blockchain model of
In IEEE
PAPAMANTHOU, C.
cryptography and privacy-preserving smart contracts.
S&P (2016).
Hawk:
[40] LAMPORT, L. The part-time parliament. ACM Trans. Comput.
Syst 16, 2 (1998), 133–169.
[41] LAU, J.
bip-color.
https://github.com/jl2012/bips/
blob/color/bip-color.mediawiki, 2017.