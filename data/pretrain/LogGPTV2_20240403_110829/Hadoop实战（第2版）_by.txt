Pig有两种运行模式：Local模式和MapReduce模式。如果需要让作业在分布式环境下运行，则需要安装Hadoop，否则用户可以选择不安装。另外，当前Hadoop最新的版本为1.0.1，当然用户也可以选择安装其他版本，不过这里建议安装最新的Hadoop版本。因为新的版本修正了以前版本中的一些错误，并且添加了新的特性
[1]
 。
2.Java 1.6
建议安装Java 1.6以上的版本。Java环境对于Pig来说是必需的（推荐从SUN官方网站下载）。
当下载安装完毕Java后，我们还需要对Java环境变量进行设置，将JAVA_HOME指向Java的安装位置。
如果用户使用的是Linux操作系统，那么以上条件就足够了。如果用户使用的是Windows操作系统，那么除此之外，用户还需要安装Cygwin和Perl包。本章后面的案例将以Linux操作系统为例进行讲解。
[1]
 关于Hadoop的具体信息见相关章节。
14.2.2 Pig的下载、安装和配置
当前Pig最新版本为0.10.0，除此之外，Pig还有其他版本，如0.9.2、0.8.1两个版本，用户可以根据需要从Apache官方网站上下载相应的版本。本书使用最新版的Pig 0.10.0，安装包下载地址如下：
http：//www.apache.org/dyn/closer.cgi/pig
Pig的安装包下载完成后，需要使用tar-xvf pig-*.*.*.tar.gz命令将其解压。我们可以将Pig放在系统中的任意位置上，并且只需要配置相应的环境变量就可以使用Pig了。不过我们建议将Pig放在Hadoop目录下，方便以后的操作。
解压完成后，需要设置Pig相应的环境变量。环境变量有多种设置方法，用户可以根据自己的需要进行选择。这里我们选择对profile文件进行修改，来设置Pig相应的环境变量。打开“/etc/profile”文件，插入下面的一条语句，保存关闭文件后需要重启系统以使环境变量设置生效：
export PIG_HOME=/＜path-to-pigDir＞
export PATH=$PIG_HOME/bin：$PIG_HOME/conf：$PATH
当环境变量设置生效后，我们可以通过“pig-help”命令来查看Pig是否安装成功。Pig安装成功后会出现如下所示的提示：
hadoop@master：～/hadoop-1.0.1/pig-0.10.0$pig-help
Apache Pig version 0.10.0（r1328203）
compiled Apr 19 2012，22：54：12
USAGE：Pig[options][-]：Run interactively in grunt shell.
Pig[options]-e[xecute]cmd[cmd……]：Run cmd（s）.
Pig[options][-f[ile]]file：Run cmds found in file.
options include：
-4，-log4jconf-Log4j configuration file, overrides log conf
-b，-brief-Brief logging（no timestamps）
-c，-check-Syntax check
-d，-debug-Debug level, INFO is default
-e，-execute-Commands to execute（within quotes）
-f，-file-Path to the script to execute
-g，-embedded-ScriptEngine classname or keyword for the ScriptEngine
-h，-help-Display this message.You can specify topic to get help for that topic.
properties is the only topic currently supported：-h properties.
-i，-version-Display version information
-l，-logfile-Path to client side log file；default is current working directory.
-m，-param_file-Path to the parameter file
-p，-param-Key value pair of the form param=val
-r，-dryrun-Produces script with substituted parameters.Script is not executed.
-t，-optimizer_off-Turn optimizations off.The following values are supported：
SplitFilter-Split filter conditions
PushUpFilter-Filter as early as possible
MergeFilter-Merge filter conditions
PushDownForeachFlatten-Join or explode as late as possible
LimitOptimizer-Limit as early as possible
ColumnMapKeyPrune-Remove unused data
AddForEach-Add ForEach to remove unneeded columns
MergeForEach-Merge adjacent ForEach
GroupByConstParallelSetter-Force parallel 1 for"group all"statement
All-Disable all optimizations
All optimizations listed here are enabled by default.Optimization values
are case insensitive.
-v，-verbose-Print all error messages to screen
-w，-warning-Turn warning logging on；also turns warning aggregation off
-x，-exectype-Set execution mode：local|mapreduce, default is mapreduce.
-F，-stop_on_failure-Aborts execution on the first failed job；default is off
-M，-no_multiquery-Turn multiquery optimization off；default is on
-P，-propertyFile-Path to property file
14.2.3 Pig运行模式
Pig有两种运行模式：Local模式和MapReduce模式。当Pig在Local模式运行时，它将只访问本地一台主机；当Pig在MapReduce模式运行时，它将访问一个Hadoop集群和HDFS的安装位置。这时，Pig将自动地对这个集群进行分配和回收。因为Pig系统可以自动对MapReduce程序进行优化，所以当用户使用Pig Latin语言进行编程的时候，不必关心程序运行的效率，Pig系统将会自动对程序进行优化。这样能够大量节省用户编程的时间。
下面我们首先介绍Pig在Local模式下的运行方式。Pig的Local模式适用于用户对程序进行调试，因为Local模式下的Pig将只访问本地一台主机，它可以在短时间内处理少量的数据，并且用户不必关心Hadoop系统对整个集群的控制，这样既能让用户使用Pig的功能，又不至于在集群的管理上花费太多时间。
Pig的Local模式和MapReduce模式都有三种运行方式，分别为：Grunt Shell方式、脚本文件方式和嵌入式程序方式。下面我们将对其进行一一介绍。
1.Local模式
（1）Grunt Shell方式
用户使用Grunt Shell方式时，需要首先使用命令开启Pig的Grunt Shell，只需在Linux终端中输入如下命令并执行即可：
$pig-x local
这样Pig将进入Grunt Shell的Local模式，如果直接输入“pig”命令，Pig将首先检测Pig的环境变量设置，然后进入相应的模式。如果没有设置MapReduce环境变量，Pig将直接进入Local模式。图14-1为开启Grunt Shell的结果。
图 14-1 Local模式下开启Grunt Shell
Grunt Shell和Windows中的Dos窗口非常类似，这里用户可以一条一条地输入命令对数据进行操作。
（2）脚本文件方式
使用脚本文件作为批处理作业来运行Pig命令，它实际上就是第一种运行方式运行脚本中命令的集合，使用如下命令可以在本地模式下运行Pig脚本：
$pig-x local script.pig
其中，“script.pig”对应的是Pig脚本，用户在这里需要正确指定Pig脚本的位置，否则，系统将不能识别。例如，Pig脚本放在“/root/pigTmp”目录下，那么这里就要写成“/root/pigTmp/script.pig”。用户在使用的时候需要注意Pig给出的一些提示，充分利用这些提示能够帮助用户更好地使用Pig进行相关的操作
[1]
 。
（3）嵌入式程序方式
我们可以把Pig命令嵌入到其他编程语言中，并且运行这个嵌入式程序。和运行普通的Java程序相同，这里需要书写特定的Java程序，并且将其编译生成对应的class文件或package包，然后再调用main函数运行程序。
用户可以使用下面的命令对Java源文件进行编译：
$javac-cp pig-*.*.*-core.jar local.java
这里“pig-*.*.*-core.jar”放在Pig安装目录下，“local.java”为用户编写的Java源文件，并且“pig-*.*.*-core.jar”和“local.java”需要用户正确地指定相应的位置。例如，我们的“pig-*.*.*-core.jar”文件放在“/root/hadoop-0.20.2/”目录下，“local.java”文件放在“/root/pigTmp”目录下，那么这一条命令我们应该写成：
$javac-cp/root/hadoop-0.20.2/pig-0.20.2-core.jar/root/pigTmp/local.java
当编译完成后，Java会生成“local.class”文件，然后用户可以通过如下命令调用执行此文件。
$java-cp pig-*.*.*-core.jar：.local
2.MapReduce模式
Pig需要把真正的查询转换成相应的MapReduce作业，并提交到Hadoop集群去运行（集群可以是真实的分布，也可以是伪分布）。要想Pig能识别Hadoop，用户需要告诉Pig要连接的Hadoop的安装目录。我们只需要设置HADOOP_HOME环境变量：
export HADOOP_HOME=/path/to/hadoop
当设置完毕并且生效之后，用户可以输入“pig-x mapreduce”命令进行测试，如果能够看到Pig连接Hadoop的NameNode和JobTrakcer的相关信息，则表明配置成功，用户就可以随心所欲地使用MapReduce模式来进行相关的Pig操作了。
图14-2为MapReduce配置成功后的提示信息，从图中可以看到Pig连接Hadoop的详细信息。
图 14-2 MapReduce配置成功的提示信息
配置成功之后，下面我们将针对Pig的MapReduce模式，说明如何在此模式下对Grunt Shell方式、脚本文件方式和嵌入式程序方式进行操作。它们和Local模式下的操作几乎相同，只不过需要将相应的参数指明为MapReduce模式。
（1）Grunt Shell方式
用户在Linux终端下输入如下命令，进入Grunt Shell的MapReduce模式：
$pig-x mapreduce
（2）脚本文件方式
用户可以使用如下命令在MapReduce模式下运行Pig脚本文件：
$pig-x mapreduce script.pig
（3）嵌入式程序
和Local模式相同，在MapReduce模式下运行嵌入式程序同样需要经过编译和执行两个步骤。用户可以使用如下两条命令，完成相应的操作。
javac-cp pig-0.10.0-core.jar mapreduce.java
java-cp pig-0.10.0-core.jar：.mapreduce
至此，Pig系统的两个运行模式及其分别对应的三个运行方式就讲述完毕了，14.5和14.6节我们将结合实例，对其做更深入的介绍，在这里希望大家能够对Pig系统的运行模式有一个初步的印象。
[1]
 注意：这里script.pig前后没有引号。
14.3 Pig Latin语言
 14.3.1 Pig Latin语言简介
Pig Latin语言和传统的关系数据库中的数据库操作语言非常类似。但是Pig Latin语言更侧重于对数据的查询和分析，而不是对数据进行修改和删除等操作。另外，由于Pig Latin可以在Hadoop的分布式云平台上运行，它的这个特点可以让其具有其他数据库无法比拟的速度优势，能够在短时间内处理海量的数据。例如，处理系统日志文件、处理大型数据库文件、处理特定Web数据等。除此之外，我们在使用Pig Latin语言编写程序的时候，不必关心如何让程序能够更好地在Hadoop云平台上运行，因为这些任务都是由Pig系统自行分配的，不需要程序员参与。因此，程序员只需要专注于程序的编写即可，这样大大减轻了程序员的负担。
Pig Latin是这样一个操作：通过对关系（relation）进行处理产生另外一组关系
[1]
 。Pig Latin语言在书写一条语句的时候能够跨越多行，但是必须以半角的分号来结束。Pig Latin语句通常按照下面的流程来编写：
1）通过一条LOAD语句从文件系统中读取数据；
2）通过一系列“转换”语句对数据进行处理；
3）通过一条STORE语句把处理结果输出到文件系统中，或者使用一条DUMP语句把处理结果输出到屏幕上。
LOAD和STORE语句有严格的语法规定，用户很容易就能掌握，关键是如何灵活使用“转换”语句对数据进行处理。
Pig Latin语言还可以对数据进行连接操作，在14.6节中，我们将通过一组例子，让用户对Pig Latin语言的特点有更好的体会。
[1]
 这个定义适用于除LOAD和STORE之外的所有操作，LOAD和STORE分别执行从文件系统读取和写入的操作。
14.3.2 Pig Latin的使用
这一节我们着重讲一下Pig Latin可以用在哪些方面。
1.运行Pig Latin
用户可以通过多种方式使用Pig Latin语句，如14.2.3所述。通常，Pig按如下方式执行Pig Latin语句：
1）Pig对所有语句的语法和语义进行确认；
2）如果遇到DUMP或者STORE命令，Pig将顺序执行上面所有的语句。
在下面的示例中，Pig将只确认LOAD和FOREACH语句，但不执行：
A=LOAD'Student'USING PigStorage（'：'）AS（Sno：chararray, Sname：chararray, Ssex：
chararray, Sage：int, Sdept：chararray）；
B=FOREACH A GENERATE Sname；
在下面的示例中，Pig将确认并执行LOAD、FOREACH和DUMP语句：
A=LOAD'Student'USING PigStorage（'：'）AS（Sno：chararray, Sname：chararray, Ssex：c
hararray, Sage：int, Sdept：chararray）；
B=FOREACH A GENERATE Sname；
DUMP B；
因为Pig的一些命令并不会自动执行，而是需要通过其他命令来触发，也就是说如果用户连续地使用某些命令，它并不会马上执行，而是在最后的一个触发操作的调用下，连续地一次性地执行完毕。
2.查看Pig Latin的运行结果
Pig Latin包括一些用来查看语句运行结果的操作。
1）使用DUMP操作把操作的结果显示在屏幕上，如下所示：
DUMP alias；
2）使用STORE操作把操作的结果存储在文件中，如下所示：
STORE alias INTO'directory'[USING function]；
3.Pig Latin的调试
Pig Latin包括一些可以帮助用户进行调试的操作。
1）使用DECSRIBE操作查看关系的模式，如下所示：
DESCRIBE alias；
2）使用EXPLAIN操作查看对某个关系进行操作的逻辑的、物理的或者MapReduce的执行计划，如下所示：
EXPLAIN[-script pigscript][-out path][-brief][-dot][-param param_name=
param_value][-param_file file_name]alias；