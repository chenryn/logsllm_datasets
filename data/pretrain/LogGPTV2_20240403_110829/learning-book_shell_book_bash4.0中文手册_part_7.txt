空白符以外的任何字符，包括与其毗邻的空白符，就成为字段的分隔符：由SIFS空白符组成的序列也是分
隔符。如果$IFS的值为空，则不拆分单词。
明确表示的空参数（或）会被保留下来。由没有设置值的参数扩展后得到的未被引用的隐含空参
数会被删除。如果没有设置值的参数在双引号之间扩展，则结果的空值会被保留。
注意，如果没有进行扩展，则也不会进行单词拆分。
3.5.8文件名扩展
单词拆分以后，Bash会在每个单词中搜索字符""、"？”、和“[，除非打开了“-f"选项（参见g86[内部
命令set]，p42）.如果找到其中一个，则把这个单词当作一个模式，并把与之匹配的文件名按字母顺序排列
来取代它。如果没有找到匹配的文件名，并且禁止了shell的nullglob选项，则不处理该单词：如果打开
了ul1glob选项并且没有找到匹配的文件名，这个单词就会被删除。如果打开了failglob选项并且没有
找到匹配的文件名，则打印一条错误信息，并且不执行当前命令。如果打开了nocageglob选项，则匹配时
不区分字母字符的大小写。如果一个模式用于生成文件名，则对于文件名开头或紧跟在斜杠后面的"."必须
明确匹配，除非打开了shell的dotglob选项。匹配文件名时，斜杠也必须明确匹配。在其它情况下，“."不
会特殊处理。关于nocageglob、nullglob、failglob、以及dotglob选项，请参见S87[内部命令shopt]，
p47-
Shell变量GLOBIGNORE可以用来限制匹配的文件名。如果设置了GLOBIGNORE，并且匹配的文件名中
又与GLOBIGNDRE中的模式匹配的，将会从列表中删除。如果设置了GLOBIGNORE，并且它的值不为空，则
文件名“."和".."总是被忽略。但同时，给GLOBIGNORE设置一个非空的值会让shell的dotglob选项也生
效，使得所有以“."开头的文件名也会被匹配。为了像以往一样忽略以“"开头的文件名，可以让“"成为
GLOBIGNORE的模式之一，如果没有设置GLOBIGNORE，则dotglob也会被取消。
p19
目录
BASH 中文文
---
## Page 31
第三章SHELL的基本功能
3.5 SHELL 扩展
53.5.8.1模式匹配
除了下面介绍的特殊模式字符，模式中出现的任何其它字符都与其自身相匹配。模式中不能使用nul
字符。反斜杠可以用来转义其后面的字符：用于转义的字符在匹配时会被忽略。特殊模式字符必须转义以后
才能按照字面含义匹配。
特殊模式字符有如下含义：
*
匹配任何字符串，包括空字符串。如果打开了shell的globstar选项，并且在文件名扩展的行文中使
用了“”，连续使用两个“"字符的模式会匹配所有文件以及零个或多个文件夹和子文件夹。如果连续
两个“并且后面有个"，那么它只匹配文件夹和子文件夹。
？
匹配任意单个字符。
[]
匹配方括号中的任一字符。由连字符分隔的一对字符是一个“范围表达式”：在当前语言区域（lo-
cale）和字符集中，按顺序在这两个字符之间的任一字符，包括这两个字符本身，都会被匹配。
，如
果“‘之后的第一个字符是“！"或者“”，则匹配没有出现在方括号中的任一字符。如果要匹配“-”，可
以把它放在方括号中第一个或最后一个位置。如果要匹配”，可以把它放在方括号中第一个位置。范
围表达式中字符地排列顺序是由当前的语言和shell变量LC_COLLATE（如果已经设置）决定的。
例如，在默认的C语言区域中，“[a-dx-z]和"[abcdxyz]"是等价的。在许多语言区域中，字符都
是按词典顺序排列的：在这些语言区域中，“[a-dx=z]"和“[abcdxyz]”通常是不等价的，例如，它
可能与"[aBbCeDdxXyYz]"等价。为了方括号表达式中使用在传统意义上的范围，可以把环境变量
LC_CDLLATE或LC_ALL设为"C"以强制使用C语言区域。
在“和]"中间，可以用[：类别：]这样的语法形式来指定“字符类别”：其中的类别是POSIX标准
中定义的下列类别之一：
alnun
匹配所有字母和数字
alpha
匹配所有字母
ascii
匹配所有（ASCII）字符
blank
匹配所有空白符
cntrl
匹配所有控制字符（即ASCII中的二十个字符）
digit
匹配所有的数字（0-9)
graph
匹配所有可显示字符（可打印字符中，空格和退格符不可显示）
lower
匹配所有小写字母
print
匹配可打印字符（非控制字符都可打印）
punct
匹配所有标点符号
匹配空格
upper
匹配所有大写字母
vord
匹配单词里面的字符（大小写字母）
xdigit
匹配所有十六进制数字（0-9和A-F)
字符类别和该类别中的任一字符匹配。字符类别word匹配字母，数字和下划线。在“[和]"中间，
还可以用[-c-]这样的语法形式来指定一个等价的字符类，它匹配当前语言中区域为c的所有字符。
在"‘和"中间，[.名称.]这样的语法形式和名称为名称的语言区域相匹配。
如果用内部命令Bhopt打开了shell的extglob选项，Bash就可以识别几个扩展的模式匹配运算符。在下
面的叙述中，模式列表是由“"分隔的一个或多个模式。可以使用下面的一个或多个子模式构成复合模式。
？（模式列表）
与模式列表匹配零次或一次。
*（模式列表）
与模式列表匹配零次或多次。
+（模式列表）
与模式列表匹配一次或多次。
BASH 中文文档
目录
p20
---
## Page 32
3.6重定向
第三章SHELL的基本功能
@（模式列表）
与模式列表中的模式之一匹配。
！（模式列表）
与模式列表中的任一模式之外的字符匹配。
 3.5.9
引用去除
经过上述扩展以后，对于所有没有被引用的字符""、“"、以及"，如果它们不是由上述任何一种扩展
产生的，就会被删除。
§3.6
重定向
在执行命令之前，shell可能会用特殊的方式把它的输入和输出重新定向，重定向还可以用来在当前的
shell执行环境中打开和关闭文件。下面讲的重定向运算符可以出现在一个简单命令的前面或中间的任何地
方，
也可以出现在命令的后面，重定向按照出现的顺序从左到右处理。
在下文中，如果省略了文件描述符，并且重定向运算符的第一个字符是“”，则指的是重定向标准输
入（文件描述符为0）：重定向运算符的第一个字符是“>”，则指的是重定向标准输出（文件描述符为1）。
在下文中，重定向运算符后的单词，如果没有特别说明，要进行大括号扩展、波浪号扩展、参数扩展、
命令替换、算术扩展、引用去除、文件名扩展、以及单词拆分，如果扩展后产生多个单词，Bash就会报
错。
注意，重定向的顺序是很重要的，例如，命令
1g>目录列表2>&1
会把标准输出（文件描述符为1）和标准错误输出（文件描述符为2）重定向到文件目录列表中，而命令
182>&1>目录列表
仅把标准输出重定向到文件目录列表中，因为在标准输出被重定向到文件目录列表中之前，标准错误输出已
经被复制到标准输出中了，
在进行重定向时，Bash会对下表列出的几个文件特殊处理：
/dev/fd/fd
如果fd是个有效的整数，则复制文件描述符fd。
/dev/stdin
复制文件描述符0.
/dev/stdout
复制文件描述符1.
/dev/stderr
复制文件描述符2.
/dev/tcp/主机名/端口号
如果主机名是个有效的主机名称或因特网地址，并且端口号是整数型的端口
号或服务名称，Bash会试图打开一个到相应套接字增口的TCP连接，
/dev/udp/主机名/端口号
如果主机名是个有效的主机名称或因特网地址，并且端口号是整数型的端口
号或服务名称，Bash会试图打开一个到相应套接字端口的UDP连接。
如果不能打开或者创建文件，重定向就会失败。要谨慎使用比9大的文件描述符进行重定向，因为它们可
能会和shell内部使用的文件描述符相冲突。
3.6.1
输入重定向
输入重定向会打开单词扩展后所形成的文件名以备读取，并将其作为文件描述符n：如果没有指定n则
将其作为标准输入（文件描述符为0)-输入重定向的一般格式是：
单词
p21
目录
BASH 中文文
---
## Page 33
第三章SHELL的基本功能
3.6重定向
$3.6.2输出重定向
输出重定向会打开单词扩展后所形成的文件名以备写入，并将其作为文件描述符n：如果没有指定n则
将其作为标准输出（文件描述符为1).如果文件不存在，就首先创建它：如果已存在，就将它清空使得长度
为零。输出重定向的一般格式是：
>1]单词
如果重定向运算符是“>"，并且已经打开了内部命令Bet的noclobber选项，则当单词扩展后所形成的文
件名且是一个普通文件时，重定向将失败。如果重定向运算符是“>1”，或者重定向运算符是“”且没有打开
noclobber选项，则即使单词扩展后所形成的文件名存在，重定向也会进行。
S3.6.3输出重定向的追加
这种类型的输出重定向会打开单词扩展后所形成的文件名以备追加，并将其作为文件描述符n：如果没
有指定n则将其作为标准输出（文件描述符为1）.如果文件不存在，就首先创建它。追加输出重定向的一
般格式是：
[m>>单词
3.6.4输出和错误输出重定向
这种结构把标准输出（文件描述符为1）和标准错误输出（文件描述符为2）同时重定向到单词扩展后所
形成的文件中，标准输出和标准错误输出重定向的形式有两种：
单词
和
单词
这两种形式中，优先使用第一种，它们和下面的形式在语法上是等价的：
>单词2>&1
3.6.5输出和错误输出重定向的追加
这种结构把标准输出（文件描述符为1）和标准错误输出（文件描述符为2）同时追加重定向到单词扩展
后所形成的文件中，标准输出和标准错误输出重定向的追加用下面的形式：
单词
这和下面的形式在语法上是等价的：
>>单词2>&1
S3.6.6即插即用文本
这种形式的重定向指示shell从当前文本源中读取输入，直到遇到其中一行只包含单词（结尾不含空白
符）。这时，已经读取的所有行都被当作命令的标准输入。即插即用文本的格式是：
BASH 中文文档
目录
p22
---
## Page 34
3.6重定向
第三章SHELL的基本功能
[]单词
即插即用文本
结束符
单词不会进行参数扩展，命令替换，算术扩展，或文件名扩展。如果单词中任一字符被引用，则结束符是单
词进行引用去除后的结果，这时不会对即插即用文本进行扩展。如果单词没有被引用，则即插即用文本中
的所有行都会进行参数扩展、命令替换、和算术扩展：这时，字符序列newline就会被忽略，并且只能
用"来引用字符"”、“$"和"”。
如果重定向运算符是“单词
与之相似，用来复制输出文件描述符。如果没有指定n，则使用标准输出（文件描述符为1).如果单词中
的数字没有指定要打开并写入的文件描述符，就会发生重定向错误。作为特殊情况，如果省略n，并且单
词扩展后不是一个或多个数字，则标准输出和标准错误输出就会按前面说的规则重定向，
3.6.9文件描述符的移动
重定向运算符
[&数字-
把文件描述符数字转移到文件描述符n上：如果没有指定n，则转移到标准输入（文件描述符为0)上。转
移到n后，（文件描述符）数字就会被关闭。
类似的，重定向运算符
[]数字
把文件描述符数字转移到文件描述符n上：如果没有指定n，则转移到标准输出（文件描述符为1）上。
+++++++++++++++++++++++++++++++++++++++++
p23
目录
BASH中文文
---
## Page 35
第三章SHELL的基本功能
53.7命令的执行
+eee ee ee e e e ee e ee ee e ee ee eee ee e ee e e e ee ee e e e ee e ee ee e@
S3.6.10打开文件描述符以备读出和写入
重定向运算符
>单词
可以打开单词扩展后的文件名以同时准备读取和写入，其文件描述符为n：如果没有指定n，则使用文件描
述符0.如果文件不存在，则首先创建它。