+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| Variable_name \| Value \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| thread_cache_size \| 9 \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
1 row in set (0.00 sec)
5）用于MyISAM引擎的关键索引缓存大小
mysql\> show variables like \"key_buffer_size\";
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\--+
\| Variable_name \| Value \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\--+
\| key_buffer_size \| 8388608 \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\--+
1 row in set (0.00 sec)
6）为每个要排序的线程分配此大小的缓存空间
mysql\> show variables like \"sort_buffer_size\";
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\--+
\| Variable_name \| Value \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\--+
\| sort_buffer_size \| 262144 \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\--+
1 row in set (0.00 sec)
7）为顺序读取表记录保留的缓存大小
mysql\> show variables like \"read_buffer_size\";
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\--+
\| Variable_name \| Value \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\--+
\| read_buffer_size \| 131072 \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\--+
1 row in set (0.01 sec)
8）为所有线程缓存的打开的表的数量
mysql\> show variables like \"table_open_cache\";
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| Variable_name \| Value \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| table_open_cache \| 2000 \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
1 row in set (0.00 sec)
步骤二：SQL查询优化
1）常用日志种类及选项，如图-1所示：
图-1
记录慢查询，图-2所示：
启用慢查询日志
\[root@master10 \~\]# vim /etc/my.cnf
\...
slow_query_log=1
slow_query_log_file=mysql-slow.log
long_query_time=5
log_queries_not_using_indexes=1
\...
\[root@master10 \~\]# systemctl restart mysqld
2）查看慢查询日志
\[root@master10 \~\]# mysqldumpslow /var/lib/mysql/mysql-slow.log
Reading mysql slow query log from /var/lib/mysql/mysql-slow.log
Count: 1 Time=0.00s (0s) Lock=0.00s (0s) Rows=0.0 (0), 0users@0hosts
查看缓存的大小
mysql\> show variables like \"query_cache%\";
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\--+
\| Variable_name \| Value \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\--+
\| query_cache_limit \| 1048576 \|
\| query_cache_min_res_unit \| 4096 \|
\| query_cache_size \| 1048576 \|
\| query_cache_type \| OFF \|
\| query_cache_wlock_invalidate \| OFF \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\--+
5 rows in set (0.00 sec)
3）查看当前的查询缓存统计
mysql\> show global status like \"qcache%\";
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\--+
\| Variable_name \| Value \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\--+
\| Qcache_free_blocks \| 1 \|
\| Qcache_free_memory \| 1031832 \|
\| Qcache_hits \| 0 \|
\| Qcache_inserts \| 0 \|
\| Qcache_lowmem_prunes \| 0 \|
\| Qcache_not_cached \| 40 \|
\| Qcache_queries_in_cache \| 0 \|
\| Qcache_total_blocks \| 1 \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\--+
8 rows in set (0.00 sec)
性能调忧DBA2_DAY05讲
# NSD DBA2 DAY03
部署MHA集群
# 一 准备环境
**拓扑结构:**
client 50 :无数据库服务
管理主机56:无数据库服务
数据库服务器51-55:恢复为独立的数据库服务器,
> 删除所有自定义授权用户
>
> 删除所有自定义库,只保留初始的4个库
![LINUXNSD_V01DBA2DAY03_012](media/image37.png){width="5.4006944444444445in"
height="3.6479166666666667in"}
![LINUXNSD_V01DBA2DAY03_013](media/image38.png){width="5.760416666666667in"
height="2.890972222222222in"}
**配置ssh无密码登录:**
> 所有数据库服务器之间ssh无密码登录配置
>
> 管理主机56可以免密登录所有数据库服务器
命令参考:生成密码Ssh-keygen 发送秘钥Ssh-copy-id
**安装依赖软件:**
> 在所有主机51-56:安装yum -y install perl-\*
**将集群软件拷贝到51-56:**
> 软件 mha-soft-student
**部署mysql 一主多从 主从结构:**
主库:192.168.4.51 做主库,宕机之后变成从库
启用binlog日志,用户授权,并开启主从同步2种角色半同步功能
从库:192.168.4.52 做备用主库
启用binlog日志,用户授权,并开启主从同步2种角色半同步功能
从库:192.168.4.53 做备用主库
启用binlog日志,用户授权,并开启主从同步2种角色半同步功能
从库:192.168.4.54 纯从库
指定server_id 指定主库信息 启用从角色半同步角色
从库:192.168.4.55 纯从库
指定server_id 指定主库信息 启用从角色半同步角色
## 1.1主从配置命令参考:
### 1.1.1主库服务器配置
Vim /etc/my.cnf
\[mysqld\]
server_id=51
log_bin=51log #启用binlog日志
**用户连接授权配置命令:**
mysql\>grant replication slave on \*.\* to repluser@\"%\" identified by
\"123456\";
mysql\> show grants for repluser;
**查看binlog日志信息**
mysql\> show master status; #查看日志信息
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| File \| Position \| Binlog_Do_DB \| Binlog_Ignore_DB \|
Executed_Gtid_Set \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| master51.000005 \| 441 \| \| \| \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
1 row in set (0.00 sec)
### 1.1.2从库服务器配置:
mysql\> change master to
master_host=\"192.168.4.51\", #主服务器IP地址
master_user=\"repluser\", #主服务器授权的用户
master_password=\"123456\", #授权用户的密码
master_log_file=\"master51.000001\", #日志文件
master_log_pos=441; #偏移位置
mysql\> start slave; #启用从服务
mysql\> stop slave; #停止从服务
mysql\> show slave status\\G; #查看从服务配置
### 1.1.3主从半同步复制模式 相关配置:
**查看是否允许动态加载模块:**
mysql\>show variables like \'have_dynamic_loading\';
**查看模块是否被加载:**
mysql\>select plugin_name,plugin_status from information_schema.plugins
where plugin_name like \'%semi%\';
**查看模块是否启用:**
mysql\> show variables like \"rpl_semi_sync\_%\_enabled\";
**主库加载半同步复制模块:**
mysql\>Install plugin rpl_semi_sync_master SONAME
\'semisync_master.so\';
**主库启用半同步复制模块:**
mysql\>set global rpl_semi_sync_master_enabled = 1
**从库加载半同步复制模块**
mysql\> Install plugin rpl_semi_sync_slave soname \'semisync_slave.so\';
**从库启用半同步复制模块**
mysql\> set global rpl_semi_sync_slave_enabled = 1;
### 1.1.4永久配置半同步复制模式
Vim /etc/my.cnf
\[mysqld\]
plugin-load=rpl_semi_sync_master=semisync_master.so
#加载主库的半同步复制模式
rpl_semi_sync_master_enabled=1
#启用主库的半同步复制模式
plugin-load=rpl_semi_sync_slave=semisync_slave.so
#加载从库的半同步复制模式
rpl_semi_sync_slave_enabled=1
#启用从库的半同步复制模式
**查看是否允许动态加载模块:**
mysql\>show variables like \'have_dynamic_loading\';
查看模块是否被加载:
mysql\>select plugin_name,plugin_status from information_schema.plugins
where plugin_name like \'%semi%\';
查看模块是否启用:
mysql\> show variables like \"rpl_semi_sync\_%\_enabled\";
# 二 集群:
## 2.1 MHA软件介绍
MHA由perl语言编写而来.所以所有主机都要安装
yum -y install perl-\*
-   由日本DeNA公司youshimaton开发
-   数据库的自动故障切换操作能做到在0-30秒内完成
-   能确保在切换过程中保证数据的一致性,达到真正意义上的高可用
-   Keepalivd能做所有服务的高可用集群,MHA只能做mysql数据库高可用集群
MHA Manager(管理节点)
可以单独部署在一台独立机器上管理其他节点
也可部署在其中一台slave 节点上
本案例的56
MHA node(数据节点)
运行着数据库服务的mysql服务器
本案例的51-55
MHA工作过程:
![LINUXNSD_V01DBA2DAY03_009](media/image39.png){width="5.135416666666667in"
height="2.6555555555555554in"}
## 2.2 配置集群
### 2.1 在所有主机51-56上安装软件包(以51为例)
mha-soft-student.zip 需要传送安装包
\[root@sql51 \~\]# unzip mha-soft-student.zip
\[root@sql51 \~\]# cd mha-soft-student/
\[root@sql51 mha-soft-student\]# yum -y install perl-\*.rpm
之前安装的是yum源上的所有perl-\*.rpm,这个是额外的几个包
### 2.2 配置管理主机56
#### 2.2.1安装提供管理服务的软件包
**必须先装数据节点安装包:**mha4mysql-node-0.56-0.el6.noarch.rpm
\[root@sql56 mha-soft-student\]# rpm -ivh
mha4mysql-node-0.56-0.el6.noarch.rpm
**再安装管理包:**mha4mysql-manager-0.56.tar.gz
\[root@sql56 mha-soft-student\]# tar -xvf mha4mysql-manager-0.56.tar.gz
\[root@sql56 mha-soft-student\]# ls
mha4mysql-manager-0.56
\[root@sql56 mha-soft-student\]# cd mha4mysql-manager-0.56/
\[root@sql56 mha4mysql-manager-0.56\]# ls
AUTHORS COPYING inc Makefile.PL META.yml rpm t
bin debian lib MANIFEST README samples tests
\[root@sql56 mha4mysql-manager-0.56\]# which perl #查看perl命令
/usr/bin/perl
\[root@sql56 mha4mysql-manager-0.56\]# perl Makefile.PL
\*\*\* Module::AutoInstall version 1.03
\*\*\* Checking for Perl dependencies\...
\[Core Features\]
\- DBI \...loaded. (1.627) #括号内不为0,表示依赖包被安装
\- DBD::mysql \...loaded. (4.023) #括号内不为0,表示依赖包被安装
\- Time::HiRes \...loaded. (1.9725) #括号内不为0,表示依赖包被安装
\- Config::Tiny \...loaded. (2.14) #括号内不为0,表示依赖包被安装
\- Log::Dispatch \...loaded. (2.41) #括号内不为0,表示依赖包被安装
\- Parallel::ForkManager \...loaded. (1.18)
#括号内不为0,表示依赖包被安装
\- MHA::NodeConst \...loaded. (0.56) #括号内不为0,表示依赖包被安装
\*\*\* Module::AutoInstall configuration finished.
Checking if your kit is complete\...
Looks good
Writing Makefile for mha4mysql::manager
Writing MYMETA.yml and MYMETA.json
\[root@sql56 mha4mysql-manager-0.56\]# make
\[root@sql56 mha4mysql-manager-0.56\]# make install
\[root@sql56 mha4mysql-manager-0.56\]# masterha\_ #连续tab,显示全部命令
#### 2.2.2创建服务的主配置文件
**参考模板app1.cnf**
\[root@sql56\~\]#cp
/root/mha-soft-student/mha4mysql-manager-0.56/samples/conf/app1.cnf
/etc/mha_manager/ #拷贝模板到这个目录(目录需要手动创建)
\[root@sql56 \~t\]# ls /etc/mha_manager
app1.cnf
\[root@sql56 mha_manager\]# pwd
/etc/mha_manager
\[root@sql56 mha_manager\]# vim app1.cnf
\[server default\] #主要内容如下
manager_workdir=/etc/mha_manager #指定的工作目录
manager_log=/etc/mha_manager/manager.log #日志文件所在目录以及名字
master_ip_failover_script=/usr/local/bin/master_ip_failover
#加载故障切换脚本