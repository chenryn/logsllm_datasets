(cid:28)(cid:34)(cid:35)(cid:36)(cid:7)(cid:37)(cid:37)(cid:37)(cid:37)
(cid:28)(cid:34)(cid:35)(cid:7)(cid:18)(cid:6)(cid:10)(cid:18)(cid:41)(cid:7)(cid:9)(cid:11)(cid:40)(cid:12)(cid:10)(cid:6)(cid:18)
(cid:48)(cid:45)(cid:23)(cid:7)(cid:21)(cid:22)(cid:23)(cid:22)
(cid:28)(cid:34)(cid:35)(cid:7)(cid:47)(cid:52)(cid:20)(cid:35)(cid:11)(cid:10)(cid:7)(cid:47)(cid:52)
(cid:42)(cid:45)(cid:43)(cid:34)(cid:31)(cid:29)
(cid:23)(cid:7)(cid:38)(cid:7)(cid:14)(cid:1)(cid:39)(cid:11)(cid:40)(cid:12)(cid:10)(cid:33)(cid:7)(cid:9)(cid:40)(cid:18)(cid:18)(cid:6)(cid:12)(cid:9)(cid:41)(cid:33)(cid:7)(cid:19)(cid:1)(cid:10)(cid:6)(cid:33)(cid:7)(cid:23)(cid:42)(cid:43)(cid:33)(cid:7)(cid:12)(cid:11)(cid:12)(cid:9)(cid:6)(cid:33)(cid:7)(cid:15)(cid:15)(cid:15)(cid:25)
(cid:22)(cid:43)(cid:44)(cid:17)(cid:7)(cid:38)(cid:7)(cid:14)(cid:22)(cid:23)(cid:17)(cid:33)(cid:7)(cid:34)(cid:22)(cid:21)(cid:33)(cid:7)(cid:24)(cid:22)(cid:17)(cid:14)(cid:23)(cid:33)(cid:7)(cid:22)(cid:23)(cid:17)(cid:33)(cid:7)(cid:34)(cid:22)(cid:21)(cid:25)(cid:25)
(cid:48)(cid:45)(cid:35)(cid:45)(cid:43)(cid:22)(cid:23)(cid:45)(cid:7)(cid:22)(cid:17)
(cid:23)(cid:33)(cid:7)(cid:22)(cid:43)(cid:44)(cid:17)
(cid:22)(cid:43)(cid:28)(cid:17)(cid:33)(cid:7)(cid:22)(cid:43)(cid:17)
(cid:17)(cid:1)(cid:18)(cid:19)(cid:53)(cid:11)(cid:4)(cid:19)(cid:6)(cid:18)(cid:7)(cid:2)(cid:6)(cid:18)(cid:3)(cid:26)(cid:3)(cid:9)(cid:1)(cid:10)(cid:3)(cid:11)(cid:12)
(cid:23)(cid:18)(cid:1)(cid:12)(cid:13)(cid:1)(cid:9)(cid:10)(cid:3)(cid:11)(cid:12)(cid:7)(cid:1)(cid:40)(cid:10)(cid:53)(cid:11)(cid:18)(cid:3)(cid:54)(cid:1)(cid:10)(cid:3)(cid:11)(cid:12)
(cid:22)(cid:43)(cid:28)(cid:17)(cid:33)(cid:7)(cid:1)(cid:40)(cid:10)(cid:53)(cid:7)(cid:9)(cid:11)(cid:19)(cid:6)
(cid:23)(cid:17)(cid:7)(cid:38)(cid:7)(cid:14)(cid:22)(cid:23)(cid:17)(cid:33)(cid:7)(cid:34)(cid:22)(cid:21)(cid:33)(cid:7)(cid:24)(cid:22)(cid:17)(cid:14)(cid:22)(cid:43)(cid:17)(cid:33)(cid:7)(cid:23)(cid:33)(cid:7)(cid:22)(cid:23)(cid:17)(cid:33)(cid:7)(cid:34)(cid:22)(cid:21)(cid:25)(cid:25)
(cid:45)(cid:49)(cid:23)(cid:45)(cid:43)(cid:35)(cid:22)(cid:46)(cid:7)(cid:22)(cid:50)(cid:23)(cid:51)(cid:45)(cid:35)(cid:23)(cid:34)(cid:17)(cid:22)(cid:23)(cid:45)(cid:20)
(cid:48)(cid:45)(cid:35)(cid:45)(cid:43)(cid:22)(cid:23)(cid:45)(cid:7)(cid:22)(cid:17)
(cid:23)(cid:17)
Figure 2. A complete run of a Chip and PIN protocol.
2) Cardholder veriﬁcation: The cardholder veriﬁcation
step starts with a mechanism negotiation, performed between
the card and the terminal,
to establish what cardholder
authentication method they can (or must) use. This is driven
by a data element called the cardholder veriﬁcation method
(CVM) list. The CVM list states the card’s policy on when
to use a PIN, or a signature, or nothing at all, to authenticate
the cardholder.
Protocols for negotiating an authentication mechanism are
notoriously hard to get right. EMV speciﬁes a complex
negotiation algorithm by which the terminal can decide
the appropriate method depending on the value of the
transaction, its type (e.g. cash, purchase), and the terminal’s
capabilities. The CVM list also speciﬁes what action should
be taken if cardholder veriﬁcation fails, i.e., whether the next
method should be tried or the transaction rejected.
In practice, however, only a small subset of these ca-
pabilities is used. UK cards we have examined specify,
in descending order of preference, PIN veriﬁcation, sig-
nature veriﬁcation, and no veriﬁcation. A terminal may
skip an option of which it is not capable; for example,
unattended terminals cannot do signature veriﬁcation, and
some vending machines are not equipped with PIN entry
devices/keypads. There may also be scope for operator
discretion. For example, the card may permit the terminal to
attempt signature veriﬁcation if PIN veriﬁcation fails, but in
practice merchants will normally reject such a transaction.
In the UK there also exists a type of card known as a “Chip
& Signature” card, which does not support PIN veriﬁcation
435
at all. These cards are issued to customers who request them,
normally because they are unable to remember a PIN or are
visually impaired. Some customers also request such cards
because they are concerned about the additional liability that
PIN-based transactions would place on them.
However, the vast majority of transactions are ‘PIN ver-
iﬁed’, which means the customer enters the PIN on a PIN
entry device. The PIN is sent to the card, and the card
compares it to the PIN it stores. If they match, the card
returns 0x9000, and if it fails the card returns 0x63Cx,
where x is the number of further PIN veriﬁcation attempts
the card will permit before locking up. Note that the card’s
response is not directly authenticated.
ATM cardholder veriﬁcation works differently, and uses a
method known as “online PIN”, as opposed to “ofﬂine PIN”
described above. Here, the PIN is encrypted by the ATM,
and sent to the issuer over a payment network. The issuer
then veriﬁes the PIN centrally, and sends the result back to
the ATM. The attack we present in this paper only applies
to ofﬂine PIN cardholder veriﬁcation.
We have observed variations between countries. While
cards from Belgium and Estonia work like British cards,
we have tested cards from Switzerland and Germany whose
CVM lists specify either chip and signature or online PIN,
at least while used abroad. The attack described here is
not applicable to them. However, because UK point-of-sale
terminals do not support online PIN, a stolen card of such
a type could easily be used in the UK, by forging the
cardholder’s signature.
3) Transaction authorization: In the third step, the ter-
minal asks the card to generate a cryptographic MAC over
the transaction details, to be sent to the issuing bank. The
terminal calls the Generate AC command, to request an
ARQC (authorization request cryptogram) from the card.
The payload of this command is a description of the transac-
tion, created by concatenating data elements speciﬁed by the
card in the CDOL 1 (card data object list 1). Typically this
includes details like the transaction amount, currency, type,
a nonce generated by the terminal, and the TVR (terminal
veriﬁcation results), which will be discussed later.
The cryptogram sent to the bank includes a type code, a
sequence counter identifying the transaction (ATC – appli-
cation transaction counter), a variable length ﬁeld containing
data generated by the card (IAD – issuer application data),
and a message authentication code (MAC), which is calcu-
lated over the rest of the message including a description
of the transaction. The MAC is computed, typically using
3DES, with a symmetric key shared between the card and
the issuing bank.
If the card permits the transaction, it returns an ARQC;
it returns an AAC (application authentication
otherwise,
cryptogram) which aborts the transaction. The ARQC is
then sent by the terminal
to the issuing bank, via the
acquirer and payment network. The issuer will then perform
various cryptographic, anti-fraud and ﬁnancial checks: such
as whether the card has been listed as stolen, whether there
are adequate funds, and whether the risk analysis algorithm
considers the transaction acceptable. If the checks pass,
the issuer returns a two byte ARC (authorization response
code), indicating how the transaction should proceed, and
the ARPC (authorization response cryptogram), which is
typically a MAC over ARQC ⊕ ARC. Both items are
forwarded by the terminal to the card with the External
Authenticate command.
The card validates the MAC contained within the ARPC,
and if successful updates its internal state to note that the
issuer authorized the transaction. The terminal then calls
Generate AC again, but now using the CDOL 2, requesting
that the card issues a TC (transaction certiﬁcate) cryptogram,
signifying that it is authorizing the transaction to proceed.
Finally, the terminal sends the TC to the issuer, and stores
a copy in its own records in case there is a dispute. At this
point it will typically print a receipt, which may contain
the legend ‘Veriﬁed by PIN’ if the response to Verify
indicated success. One copy of the receipt is given to the
cardholder and a second copy is retained. We have also seen
different receipts with ‘conﬁrmed’ for the cardholder and
‘PIN veriﬁed’ on the merchant copy (perhaps to assure the
merchant that the liability for disputes is no longer on them).
The above description assumes that the terminal chose to
perform an online transaction and contacted the issuer. In
the event of an ofﬂine transaction, the terminal requests that
the card return TC on the ﬁrst call to Generate AC. The
(cid:8)(cid:9)(cid:3)(cid:10)(cid:11)(cid:12)(cid:2)(cid:13)
(cid:5)(cid:6)(cid:7)(cid:5)
(cid:1)(cid:2)(cid:3)(cid:4)
(cid:1)(cid:2)(cid:3)(cid:4)(cid:5)(cid:2)(cid:6)(cid:7)(cid:8)(cid:9)(cid:10)(cid:7)(cid:11)(cid:1)(cid:2)(cid:7)(cid:11)(cid:12)(cid:10)
(cid:13)(cid:14)(cid:15)(cid:5)(cid:3)(cid:9)(cid:7)(cid:3)(cid:16)(cid:5)(cid:1)(cid:12)(cid:6)(cid:10)(cid:7)(cid:9)(cid:3)
(cid:14)(cid:6)(cid:15)(cid:16)(cid:17)(cid:18)(cid:18)(cid:18)(cid:18)
(cid:14)(cid:6)(cid:15)(cid:17)(cid:19)(cid:20)
(cid:7)(cid:3)(cid:2)(cid:10)(cid:17)(cid:2)(cid:1)(cid:7)(cid:11)(cid:12)(cid:10)(cid:5)(cid:2)(cid:6)(cid:7)(cid:8)(cid:12)(cid:3)(cid:11)(cid:18)(cid:2)(cid:7)(cid:11)(cid:12)(cid:10)
Figure 3. The man-in-the-middle suppresses the PIN Verify command to
the card, and tells the terminal that the PIN has been veriﬁed correctly. A
complete transaction is detailed in Appendix A.
TERMINAL VERIFICATION RESULTS (TVR) BYTE 3.
Table I
Bit Meaning when bit is set
8
7
6
5
4
3
2
1
Cardholder veriﬁcation was not successful
Unrecognized CVM
PIN Try Limit exceeded
PIN entry required and PIN pad not present or not working
PIN entry required, PIN pad present, but PIN was not entered
Online PIN entered
Reserved for future use
Reserved for future use
card may then either decide to accept the transaction ofﬂine
by returning a TC, force the transaction online by returning
an ARQC, or reject the transaction entirely by returning an
AAC. Our attack applies just as well to the ofﬂine case.
III. THE ATTACK
The central ﬂaw in the protocol is that the PIN veri-
ﬁcation step is never explicitly authenticated. Whilst the
authenticated data sent to the bank contains two ﬁelds which
incorporate information about the result of the cardholder
veriﬁcation – the Terminal Veriﬁcation Results (TVR) and
the Issuer Application Data (IAD), they do not together
provide an unambiguous encoding of the events which took
place during the protocol run. The TVR mainly enumerates
various possible failure conditions for the authentication, and
in the event of success does not indicate which particular
method was used (see Table I).
Therefore a man-in-the-middle device, which can inter-
cept and modify the communications between card and
terminal, can trick the terminal into believing that PIN ver-
iﬁcation succeeded by responding with 0x9000 to Verify,
without actually sending the PIN to the card. A dummy
PIN must be entered, but the attack allows any PIN to be
accepted. The card will then believe that the terminal did not
support PIN veriﬁcation, and has either skipped cardholder
436
IAD FORMAT, BYTE 5 (BITS 4–1) FROM A VISA VERSION 10
CRYPTOGRAM [8, APPENDIX A-13, P222].
Table II
Bit Meaning when bit is set
4
3
2
1
Issuer Authentication performed and failed
Ofﬂine PIN performed
Ofﬂine PIN veriﬁcation failed
Unable to go online
veriﬁcation or used a signature instead. Because the dummy
PIN never gets to the card, the PIN retry counter is not
altered. The modiﬁed protocol ﬂow is shown in Figure 3.
Neither the card nor terminal will spot this subterfuge
because the cardholder veriﬁcation byte of the TVR is only
set if PIN veriﬁcation has been attempted and failed. The
terminal believes that PIN veriﬁcation succeeded (and so
generates a zero byte), and the card believes it was not
attempted (so will accept the zero byte).
The IAD (Table II) does often indicate whether PIN ver-
iﬁcation was attempted. However, it is in an issuer-speciﬁc
proprietary format, and not speciﬁed in EMV. Therefore the
terminal, which knows the cardholder veriﬁcation method
chosen, cannot decode it. The issuer, which can decode the
IAD, does not know which cardholder veriﬁcation method
was used, and so cannot use it
the attack.
Because of the ambiguity in the TVR encoding, neither
party can identify the inconsistency between the cardholder
veriﬁcation methods they each believe were used. The issuer
will thus believe that the terminal was incapable of soliciting
a PIN – an entirely plausible yet inaccurate conclusion.
to prevent
For ofﬂine transactions, the issuer will not be contacted
until after the transaction has been completed, so has even
less ability to detect the attack. Some cards may refuse to
authorize an ofﬂine transaction without having successfully
veriﬁed the PIN. This however is no obstacle to the attack,
because the man-in-the-middle can simply change the cryp-
togram type ﬁeld in the response to the Generate AC call,
turning an ARQC or AAC into a TC. This modiﬁcation will
possibly cause the cryptogram veriﬁcation to fail, but this
would only be detected after the cardholder has left with
the goods.
In the UK, PIN-based cardholder veriﬁcation is mandatory
and all cards support ofﬂine PIN veriﬁcation. Although the
CVM list permits merchants to fall back to signature, they
rarely offer this (they become liable for fraud if they do).
Therefore, unless a thief can somehow discover the PIN,
using a stolen card is difﬁcult. Here, our attack could be
used by criminals to carry out a point-of-sale transaction.
In fact,
the authors are regularly contacted by bank
customers who have had fraudulent transactions carried out
shortly after their card has been stolen, and who state that
they did not write down their PIN, but found that their bank
accused them of negligence and refused to refund the losses.
The attack we describe in this paper may explain some of
these cases.
IV. ATTACK DEMONSTRATION
We successfully executed the attack using several different
Chip and PIN cards at a live terminal. The schematic and a
photograph of the equipment used is shown in Figure 4.
Stills from a video of us carrying this attack out are in
Figure 5; a ﬁlm by BBC Newsnight of us carrying out the
attack is also available [9]. The hardware for the attack was
made of cheap off-the-shelf components and required only
elementary programming and engineering skills.
The man-in-the-middle circuit connects to the terminal
through a fake card. This card has thin wires embedded
in the plastic substrate, which connect the card’s contact
pads to an interface chip ($2 Maxim 1740 [10]) for voltage