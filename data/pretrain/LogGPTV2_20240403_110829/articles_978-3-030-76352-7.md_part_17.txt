### Introduction

The detection of anomalies in data, particularly when an observation significantly differs from its neighbors, has been a topic of extensive research. For instance, [21] computes a saliency score for each observation using Fourier Transforms, while [15] calculates an outlier score using Recurrent Autoencoder Ensembles.

### Related Work

Most closely related to our approach are anomaly detection methods that utilize (probabilistic) forecasting models. A comprehensive overview of these models can be found in recent tutorials [7]. These approaches offer the advantage of providing interpretable and normalized scores. In contrast, other methods, such as those described in [10, 27], do not provide this interpretability and are therefore not considered further.

Common forecasting models include the classical ARIMA, which has been applied in various contexts [18], and more recently, deep learning-based approaches [16, 19]. Although attention-based models [26] have become state-of-the-art in sequence learning, we opt for an RNN similar to [8, 23] due to its suitability for streaming settings. The compact model state of an RNN is well-suited for streaming data, whereas attention-based models have a prohibitively large state. Building on extreme value theory, [24] proposes a method that models only the tail of the distribution, offering a non-deep forecasting approach.

### Functional Time Series Models

Functional Time Series (FTS) models are also relevant to our problem. In FTS, the learner observes a time sequence of functional data and attempts to forecast the next functions. This framework has applications ranging from demographic curve analysis [14] to electricity price forecasting [9]. While FTS models allow for more general functions than distributions, restricting the data to distributions has led to the development of additional models [4, 20], including Bayesian variants [3, 22].

### Alternative Approaches

Instead of using time series models, one could disregard time dependencies and treat the prediction as a regression problem. This would allow for the use of distribution regression models like [25]. However, given the strong auto-correlation in our metrics data, disregarding time dependence is not advisable, and thus, we do not consider this approach further.

Anomaly detection from log data, as seen in [6, 17], aims to detect abnormal events in large-scale distributed systems. However, these methods are designed for unstructured data, which is not the case in our application, where we deal with real-valued time series.

### Conclusion

We present the first anomaly detection method based on deep distributional time series models. This model was developed in response to real-world anomaly detection data and use cases commonly found in monitoring cloud services. Our experiments demonstrate that our method performs favorably on synthetic, public, and AWS-internal data compared to other anomaly detection offerings. Designed for streaming scenarios, our method is fully elastic. Despite the sparsity, imbalance, and noise in anomaly labels, they do exist. Future work should focus on improving the algorithms by incorporating labels during learning and acquiring them during production runs to create a continuously improving anomaly detection system.

### References

1. Alexandrov, A., et al.: GluonTS: Probabilistic Time Series Models in Python. arXiv preprint arXiv:1906.05264 (2019)
2. Bendre, S.: Outliers in Statistical Data (1994)
3. Caron, F., Davy, M., Doucet, A., Duflos, E., Vanheeghe, P.: Bayesian Inference for Linear Dynamic Models with Dirichlet Process Mixtures. IEEE Trans. Signal Process. 56(1), 71–84 (2007)
4. Chang, Y., Kaufmann, R.K., Kim, C.S., Miller, J.I., Park, J.Y., Park, S.: Evaluating Trends in Time Series of Distributions: A Spatial Fingerprint of Human Effects on Climate. J. Econom. 214(1), 274–294 (2020)
5. Chen, T., et al.: MXNet: A Flexible and Efficient Machine Learning Library for Heterogeneous Distributed Systems. arXiv preprint arXiv:1512.01274 (2015)
6. Du, M., Li, F., Zheng, G., Srikumar, V.: DeepLog: Anomaly Detection and Diagnosis from System Logs through Deep Learning. In: Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security, pp. 1285–1298 (2017)
7. Faloutsos, C., Gasthaus, J., Januschowski, T., Wang, Y.: Forecasting Big Time Series: Old and New. Proc. VLDB Endow. 11(12), 2102–2105 (2018)
8. Gasthaus, J., et al.: Probabilistic Forecasting with Spline Quantile Function RNNs. In: The 22nd International Conference on Artificial Intelligence and Statistics, pp. 1901–1910 (2019)
9. González, J.P., San Roque, A.M., Perez, E.A.: Forecasting Functional Time Series with a New Hilbertian ARMAX Model: Application to Electricity Price Forecasting. IEEE Trans. Power Syst. 33(1), 545–556 (2017)
10. Guha, S., Mishra, N., Roy, G., Schrijvers, O.: Robust Random Cut Forest Based Anomaly Detection on Streams. In: International Conference on Machine Learning, pp. 2712–2721 (2016)
11. Hawkins, D.M.: Identification of Outliers, vol. 11. Springer, Heidelberg (1980)
12. Hochenbaum, J., Vallis, O.S., Kejariwal, A.: Automatic Anomaly Detection in the Cloud via Statistical Learning. arXiv preprint arXiv:1704.07706 (2017)
13. Hyndman, R.J.: Computing and Graphing Highest Density Regions. Am. Stat. 50(2), 120–126 (1996)
14. Hyndman, R.J., Ullah, M.S.: Robust Forecasting of Mortality and Fertility Rates: A Functional Data Approach. Comput. Stat. Data Anal. 51(10), 4942–4956 (2007)
15. Kieu, T., Yang, B., Guo, C., Jensen, C.S.: Outlier Detection for Time Series with Recurrent Autoencoder Ensembles (2019)
16. Malhotra, P., Vig, L., Shroff, G., Agarwal, P.: Long Short Term Memory Networks for Anomaly Detection in Time Series. In: Proceedings, vol. 89, pp. 89–94. Presses universitaires de Louvain (2015)
17. Meng, W., et al.: LogAnomaly: Unsupervised Detection of Sequential and Quantitative Anomalies in Unstructured Logs. In: IJCAI, pp. 4739–4745 (2019)
18. Moayedi, H.Z., Masnadi-Shirazi, M.: ARIMA Model for Network Traffic Prediction and Anomaly Detection. In: 2008 International Symposium on Information Technology, vol. 4, pp. 1–6. IEEE (2008)
19. Munir, M., Siddiqui, S.A., Chattha, M.A., Dengel, A., Ahmed, S.: FuseAD: Unsupervised Anomaly Detection in Streaming Sensors Data by Fusing Statistical and Deep Learning Models. Sensors 19(11), 2451 (2019)
20. Park, J.Y., Qian, J.: Functional Regression of Continuous State Distributions. J. Econom. 167(2), 397–412 (2012)
21. Ren, H., et al.: Time-Series Anomaly Detection Service at Microsoft. In: Proceedings of the 25th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining, pp. 3009–3017 (2019)
22. Rodriguez, A., Ter Horst, E., et al.: Bayesian Dynamic Density Estimation. Bayesian Anal. 3(2), 339–365 (2008)
23. Salinas, D., Flunkert, V., Gasthaus, J., Januschowski, T.: DeepAR: Probabilistic Forecasting with Autoregressive Recurrent Networks. Int. J. Forecast. 36(3), 1181–1191 (2019)
24. Siffer, A., Fouque, P.A., Termier, A., Largouet, C.: Anomaly Detection in Streams with Extreme Value Theory. In: Proceedings of the 23rd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, pp. 1067–1075 (2017)
25. Szabó, Z., Sriperumbudur, B.K., Póczos, B., Gretton, A.: Learning Theory for Distribution Regression. J. Mach. Learn. Res. 17(1), 5272–5311 (2016)
26. Vaswani, A., et al.: Attention is All You Need. In: Advances in Neural Information Processing Systems, pp. 5998–6008 (2017)
27. Yeh, C.C.M., et al.: Matrix Profile I: All Pairs Similarity Joins for Time Series: A Unifying View that Includes Motifs, Discords and Shapelets. In: 2016 IEEE 16th International Conference on Data Mining (ICDM), pp. 1317–1322. IEEE (2016)

### A Systematic Mapping Study in AIOps

**Paolo Notaro¹², Jorge Cardoso²³, Michael Gerndt¹**

¹ Chair of Computer Architecture and Parallel Systems, Technical University of Munich, Munich, Germany
² Ultra-scale AIOps Lab, Huawei Munich Research Center, Munich, Germany
³ Department of Informatics Engineering/CISUC, University of Coimbra, Coimbra, Portugal

#### Abstract

Modern IT systems are becoming larger and more complex, making human supervision increasingly challenging. Artificial Intelligence for IT Operations (AIOps) has been proposed to address these challenges using AI and Big Data. However, past AIOps contributions are scattered, unorganized, and lack a common terminology, making their discovery and comparison impractical. This work conducts an in-depth mapping study to collect and organize numerous scattered AIOps contributions into a unique reference index. We create an AIOps taxonomy to provide a foundation for future contributions and enable efficient comparison of AIOps papers addressing similar problems. We investigate temporal trends and classify AIOps contributions based on the choice of algorithms, data sources, and target components. Our results show a recent and growing interest in AIOps, particularly in failure-related tasks (62%), such as anomaly detection and root cause analysis.

**Keywords:** AIOps, Operations and Maintenance, Artificial Intelligence

#### 1. Introduction

Modern society increasingly relies on large-scale IT infrastructures. Recent IT challenges demand higher levels of reliability and efficiency in computer systems. Due to the significant increase in size and complexity, IT operators face challenges in performing tedious administration tasks manually. This has sparked interest in self-managing and autonomic computing systems to improve the efficiency and responsiveness of IT services. While many static algorithmic solutions have been proposed, these automated solutions often show limitations in adaptiveness and scalability. The presence of large data volumes in different modalities motivates the investigation of intelligent learning systems that can adapt to new observations and situations.

Artificial Intelligence for IT Operations (AIOps) investigates the use of AI for managing and improving IT services. AIOps leverages Machine Learning, Big Data, and analytic technologies to monitor computer infrastructures and provide proactive insights and recommendations to reduce failures, improve mean-time-to-recovery (MTTR), and allocate computing resources efficiently [3]. AIOps offers a wide, diverse set of tools for several applications, from efficient resource management and scheduling to complex failure management tasks such as failure prediction, anomaly detection, and remediation [13, 23]. However, being a recent and cross-disciplinary field, AIOps is still largely unstructured. Existing contributions are scattered across different conferences and use different terminologies, making it difficult to search and collect relevant papers. Some previous systematic works only cover single tasks or subareas within AIOps [20, 31]. This motivates the need for a complete and updated study of AIOps contributions.

In this paper, we present an in-depth analysis of AIOps to address these limitations. We have identified and extracted over 1000 AIOps contributions through a systematic mapping study, enabling us to delineate common trends, problems, and tools. First, we provide an in-depth description of the methodology followed in our mapping study (Sect. 2), reporting and motivating our planning choices regarding problem definition, search, selection, and mapping. Then, we present and discuss the results drawn from our study, including the identification of the most common topics, data sources, and target components (Sect. 3). Finally, Sect. 4 summarizes the outcomes and conclusions treated in this work.

#### 2. Methodology

##### 2.1 Systematic Mapping Studies

A systematic mapping study (SMS) is a widely adopted research methodology in many fields, including software engineering [34]. The primary goal of an SMS is to provide an overview of a specific research area, gather a set of related papers, and identify trends within the area. Relevant papers are collected using predefined search and selection techniques, and trends are identified using categorization techniques across different aspects of the identified papers, such as topic or contribution type. We chose to perform an SMS because we are interested in gathering contributions and obtaining statistical insights about AIOps, such as the distribution of works in different subareas and the presence of temporal trends for particular topics. SMSs have also been shown to increase the effectiveness of follow-up systematic literature reviews [34]. To this end, we have also used our systematic mapping study to collect references for a survey on failure management in AIOps, separately published.

##### 2.2 Planning

According to the step outline followed in [34], a systematic mapping study consists of:

- **Formulation:** Express the goals intended for the study through research questions. Clearly define the scope of investigation.
- **Search:** Define strategies to obtain a sufficiently high number of papers within the scope of investigation. This includes selecting one or more search strategies (database search, manual search, reference search, etc.).
- **Selection (or screening):** Define and apply a set of inclusion/exclusion criteria for identifying relevant papers inside the search result set.
- **Data Extraction and Mapping:** Gather the information required to map the selected papers into predefined categorization schemes. Finally, results are presented in graphical form, such as histograms or bubble plots.

The next sections illustrate and motivate our choices regarding these four steps for our systematic mapping study in AIOps.

##### 2.3 Formulation

The main goal of this mapping study is to identify the extent of past research in AIOps. Specifically, we aim to identify a representative set of AIOps contributions that can be grouped based on the similarity of goals, employed data sources, and target system components. We also wish to understand the relative distribution of publications within these categories and the temporal implications involved. Formally, we articulate the following research questions:

- **RQ1:** What categories can be observed while classifying AIOps contributions in scientific literature?
- **RQ2:** What is the distribution of papers in such categories?
- **RQ3:** Which temporal trends can be observed for the field of AIOps?

In terms of scope, we define AIOps as the union of goals and problems in IT Operations addressed using AI techniques. To avoid ambiguity about the term AI, we adopt an inclusive convention where we consider both data-driven approaches (e.g., Machine Learning and data mining) and goal-based approaches (e.g., reasoning, search, and optimization). However, we primarily focus on the first category due to its stronger presence and connection to AIOps methodologies (e.g., data collection).

##### 2.4 Search and Selection

**Selection Criteria:** We start by illustrating the selection principles, so that the discussion will be clearer when we describe our result collection strategy, composed of search and selection. In terms of inclusion criteria, we define only one relevance criterion based on the main topic of the document. Following from our discussion on scoping, this inclusion criterion comprises two necessary conditions:

| AI Keywords | IT Operations Keywords |
|-------------|------------------------|
| "AI" OR "artificial intelligence" | "DevOps" OR "site reliability engineering" OR "SRE" |
| "classification" | "IT operations" |
| "clustering" | "anomaly detection" OR "outlier detection" |
| "logistic regression" | "cloud computing" |
| "regression" | "cloud" |
| "DL" OR "deep learning" | |

By following these criteria and conducting a thorough search and selection process, we aim to provide a comprehensive and organized overview of AIOps contributions.