line46_1:
    mov ecx, [esp]
    nop
    nop
    mov dl, 0xe9
    test edx, edx
    mov byte [ecx], dl
    xor eax, 0
    mov edx, 0x00000067
    mov dword [ecx+1], edx
    ret
line95:
    pushad
    pushf
    call line95_1
    db 7
    db 3
    dd 838225172
    db 2
    dd 4211932376
    db 4
    dd 2520091426
    db 3
    dd 946381070
    db 2
    dd 3318121790
    db 2
    dd 1375432265
    db 1
    dd -1
    mov ebx, 92
    add eax, ebx
    mov ebx, eax
    sub dword [eax], 0xe82c334d
    add eax, 4
    add dword [eax], 0xa1723594
    add eax, 4
    xor dword [eax], 0xb1c21343
    add eax, 4
    sub dword [eax], 0x111111ee
    add eax, 4
    add dword [eax], 0xaaccee22
    add eax, 4
    jmp ebx
line95_2:
    popf
    popad
    nop
    jmp long line96
line95_1:
    mov eax, [esp]
    nop
    nop
xor eax, eax
xor ecx, ecx
xor edx, edx
    mov cl, 0xe9
    mov byte [eax], cl
    xor edx, 0
    mov ecx, 0x00000057
    mov dword [eax+1], ecx
    ret
Structure Obfuscation
Self modifying basic block Edges
line46_1:
    mov ecx, [esp]
    nop
    nop
    mov dl, 0xe9
    test edx, edx
    mov byte [ecx], dl
    xor eax, 0
    mov edx, 0x00000067
    mov dword [ecx+1], edx
    ret
line95:
    pushad
    pushf
    call line95_1
    db 7
    db 3
    dd 838225172
    db 2
    dd 4211932376
    db 4
    dd 2520091426
    db 3
    dd 946381070
    db 2
    dd 3318121790
    db 2
    dd 1375432265
    db 1
    dd -1
    mov ebx, 92
    add eax, ebx
    mov ebx, eax
    sub dword [eax], 0xe82c334d
    add eax, 4
    add dword [eax], 0xa1723594
    add eax, 4
    xor dword [eax], 0xb1c21343
    add eax, 4
    sub dword [eax], 0x111111ee
    add eax, 4
    add dword [eax], 0xaaccee22
    add eax, 4
    jmp ebx
line95_2:
    popf
    popad
    nop
    jmp long line96
line95_1:
    mov eax, [esp]
    nop
    nop
xor eax, eax
xor ecx, ecx
xor edx, edx
    mov cl, 0xe9
    mov byte [eax], cl
    xor edx, 0
    mov ecx, 0x00000057
    mov dword [eax+1], ecx
    ret
Demo 2
line46_1:
    mov ecx, [esp]
    nop
    nop
    mov dl, 0xe9
    test edx, edx
    mov byte [ecx], dl
    xor eax, 0
    mov edx, 0x00000067
    mov dword [ecx+1], edx
    ret
line95:
    pushad
    pushf
    call line95_1
    db 7
    db 3
    dd 838225172
    db 2
    dd 4211932376
    db 4
    dd 2520091426
    db 3
    dd 946381070
    db 2
    dd 3318121790
    db 2
    dd 1375432265
    db 1
    dd -1
    mov ebx, 92
    add eax, ebx
    mov ebx, eax
    sub dword [eax], 0xe82c334d
    add eax, 4
    add dword [eax], 0xa1723594
    add eax, 4
    xor dword [eax], 0xb1c21343
    add eax, 4
    sub dword [eax], 0x111111ee
    add eax, 4
    add dword [eax], 0xaaccee22
    add eax, 4
    jmp ebx
line95_2:
    popf
    popad
    nop
    jmp long line96
line95_1:
    mov eax, [esp]
    nop
    nop
xor eax, eax
xor ecx, ecx
xor edx, edx
    mov cl, 0xe9
    mov byte [eax], cl
    xor edx, 0
    mov ecx, 0x00000057
    mov dword [eax+1], ecx
    ret
RE Evasion
Morphing Techniques
Metamorphic + Polymorphic
Self modifying mutation
Code structure obfuscation
Clock synchronized execution 
Challenge-Response Mutation
Functionality Mutation
Decoupled Reversible Mutation
Slices Permutation
Code size magnification
line46_1:
    mov ecx, [esp]
    nop
    nop
    mov dl, 0xe9
    test edx, edx
    mov byte [ecx], dl
    xor eax, 0
    mov edx, 0x00000067
    mov dword [ecx+1], edx
    ret
line95:
    pushad
    pushf
    call line95_1
    db 7
    db 3
    dd 838225172
    db 2
    dd 4211932376
    db 4
    dd 2520091426
    db 3
    dd 946381070
    db 2
    dd 3318121790
    db 2
    dd 1375432265
    db 1
    dd -1
    mov ebx, 92
    add eax, ebx
    mov ebx, eax
    sub dword [eax], 0xe82c334d
    add eax, 4
    add dword [eax], 0xa1723594
    add eax, 4
    xor dword [eax], 0xb1c21343
    add eax, 4
    sub dword [eax], 0x111111ee
    add eax, 4
    add dword [eax], 0xaaccee22
    add eax, 4
    jmp ebx
line95_2:
    popf
    popad
    nop
    jmp long line96
line95_1:
    mov eax, [esp]
    nop
    nop
xor eax, eax
xor ecx, ecx
xor edx, edx
    mov cl, 0xe9
    mov byte [eax], cl
    xor edx, 0
    mov ecx, 0x00000057
    mov dword [eax+1], ecx
    ret
_start:
    push 0
    pushad
    mov reg1, [fs:dword 0x30]
    movzx reg2, byte [reg1+2]
    mov dword [esp+32], reg2
    popad
    pop eax
    ret
end:
Remote Code Evolution
Morphing Techniques
line46_1:
    mov ecx, [esp]
    nop
    nop
    mov dl, 0xe9
    test edx, edx
    mov byte [ecx], dl
    xor eax, 0
    mov edx, 0x00000067
    mov dword [ecx+1], edx
    ret
line95:
    pushad
    pushf
    call line95_1
    db 7
    db 3
    dd 838225172
    db 2
    dd 4211932376
    db 4
    dd 2520091426
    db 3
    dd 946381070
    db 2
    dd 3318121790
    db 2
    dd 1375432265
    db 1
    dd -1
    mov ebx, 92
    add eax, ebx
    mov ebx, eax
    sub dword [eax], 0xe82c334d
    add eax, 4
    add dword [eax], 0xa1723594
    add eax, 4
    xor dword [eax], 0xb1c21343
    add eax, 4
    sub dword [eax], 0x111111ee
    add eax, 4
    add dword [eax], 0xaaccee22
    add eax, 4
    jmp ebx
line95_2:
    popf
    popad
    nop
    jmp long line96
line95_1:
    mov eax, [esp]
    nop
    nop
xor eax, eax
xor ecx, ecx
xor edx, edx
    mov cl, 0xe9
    mov byte [eax], cl
    xor edx, 0
    mov ecx, 0x00000057
    mov dword [eax+1], ecx
    ret
_start:
    xor reg1, reg1
 push reg1
    pushad
    mov reg1, [fs:dword 0x30]
    movzx reg2, byte [reg1+2]
    mov dword [esp+32], reg2
    popad
    pop eax
    ret
end:
push 0{
Remote Code Evolution
Morphing Techniques
line46_1:
    mov ecx, [esp]
    nop
    nop
    mov dl, 0xe9
    test edx, edx
    mov byte [ecx], dl
    xor eax, 0
    mov edx, 0x00000067
    mov dword [ecx+1], edx
    ret
line95:
    pushad
    pushf
    call line95_1
    db 7
    db 3
    dd 838225172
    db 2
    dd 4211932376
    db 4
    dd 2520091426
    db 3
    dd 946381070
    db 2
    dd 3318121790
    db 2
    dd 1375432265
    db 1
    dd -1
    mov ebx, 92
    add eax, ebx
    mov ebx, eax
    sub dword [eax], 0xe82c334d
    add eax, 4
    add dword [eax], 0xa1723594
    add eax, 4
    xor dword [eax], 0xb1c21343
    add eax, 4
    sub dword [eax], 0x111111ee
    add eax, 4
    add dword [eax], 0xaaccee22
    add eax, 4
    jmp ebx
line95_2:
    popf
    popad
    nop
    jmp long line96
line95_1:
    mov eax, [esp]
    nop
    nop
xor eax, eax
xor ecx, ecx
xor edx, edx
    mov cl, 0xe9
    mov byte [eax], cl
    xor edx, 0
    mov ecx, 0x00000057
    mov dword [eax+1], ecx
    ret
_start:
    xor reg1, reg1
 push reg1
    pushad
    sub reg1, reg1
    mov reg1, [fs:dword 0x30]
    movzx reg2, byte [reg1+2]
    mov dword [esp+32], reg2
    popad
    pop eax
    ret
end:
push 0{
Insertion
Remote Code Evolution
Morphing Techniques
line46_1:
    mov ecx, [esp]
    nop
    nop
    mov dl, 0xe9
    test edx, edx
    mov byte [ecx], dl
    xor eax, 0
    mov edx, 0x00000067
    mov dword [ecx+1], edx
    ret
line95:
    pushad
    pushf
    call line95_1
    db 7
    db 3
    dd 838225172
    db 2
    dd 4211932376
    db 4
    dd 2520091426
    db 3
    dd 946381070
    db 2
    dd 3318121790
    db 2
    dd 1375432265
    db 1
    dd -1
    mov ebx, 92
    add eax, ebx
    mov ebx, eax
    sub dword [eax], 0xe82c334d
    add eax, 4
    add dword [eax], 0xa1723594
    add eax, 4
    xor dword [eax], 0xb1c21343
    add eax, 4
    sub dword [eax], 0x111111ee
    add eax, 4
    add dword [eax], 0xaaccee22
    add eax, 4
    jmp ebx
line95_2:
    popf
    popad
    nop
    jmp long line96
line95_1:
    mov eax, [esp]
    nop
    nop
xor eax, eax
xor ecx, ecx
xor edx, edx
    mov cl, 0xe9
    mov byte [eax], cl
    xor edx, 0
    mov ecx, 0x00000057
    mov dword [eax+1], ecx
    ret
_start:
    xor reg1, reg1
 push reg1
    pushad
    sub reg1, reg1
    mov reg1, [fs:dword 0x30]
    add reg2, reg2
    movzx reg2, byte [reg1+2]
    mov dword [esp+32], reg2
    popad
    pop eax
    ret
end:
push 0{
Insertion
Insertion
Remote Code Evolution
Morphing Techniques
line46_1:
    mov ecx, [esp]
    nop
    nop
    mov dl, 0xe9
    test edx, edx
    mov byte [ecx], dl
    xor eax, 0
    mov edx, 0x00000067
    mov dword [ecx+1], edx
    ret
line95:
    pushad
    pushf
    call line95_1
    db 7
    db 3
    dd 838225172
    db 2
    dd 4211932376
    db 4
    dd 2520091426
    db 3
    dd 946381070
    db 2
    dd 3318121790
    db 2
    dd 1375432265
    db 1
    dd -1
    mov ebx, 92
    add eax, ebx
    mov ebx, eax
    sub dword [eax], 0xe82c334d
    add eax, 4
    add dword [eax], 0xa1723594
    add eax, 4
    xor dword [eax], 0xb1c21343
    add eax, 4
    sub dword [eax], 0x111111ee
    add eax, 4
    add dword [eax], 0xaaccee22
    add eax, 4
    jmp ebx
line95_2:
    popf
    popad
    nop
    jmp long line96
line95_1:
    mov eax, [esp]
    nop
    nop
xor eax, eax
xor ecx, ecx
xor edx, edx
    mov cl, 0xe9
    mov byte [eax], cl
    xor edx, 0
    mov ecx, 0x00000057
    mov dword [eax+1], ecx
    ret
_start:
    xor reg1, reg1
 push reg1
    pushad
    sub reg1, reg1
    mov reg1, [fs:dword 0x30]
    add reg2, reg2
    movzx reg2, byte [reg1+2]
    mov reg3, reg4
    mov dword [esp+32], reg2
    popad
    pop eax
    ret
end:
push 0{
Insertion
Insertion
Insertion
Remote Code Evolution
Morphing Techniques
line46_1:
    mov ecx, [esp]
    nop
    nop
    mov dl, 0xe9
    test edx, edx
    mov byte [ecx], dl
    xor eax, 0
    mov edx, 0x00000067
    mov dword [ecx+1], edx
    ret
line95:
    pushad
    pushf
    call line95_1
    db 7
    db 3
    dd 838225172
    db 2
    dd 4211932376
    db 4
    dd 2520091426
    db 3
    dd 946381070
    db 2
    dd 3318121790
    db 2
    dd 1375432265
    db 1
    dd -1
    mov ebx, 92
    add eax, ebx
    mov ebx, eax
    sub dword [eax], 0xe82c334d
    add eax, 4
    add dword [eax], 0xa1723594
    add eax, 4