persist datasource implementation YAML in registry center like this is not
good:
    ds_0: !!org.apache.commons.dbcp.BasicDataSource
      accessToUnderlyingConnectionAllowed: false
      defaultAutoCommit: true
      defaultReadOnly: false
      defaultTransactionIsolation: -1
      driverClassName: com.mysql.jdbc.Driver
      initialSize: 0
      logAbandoned: false
      maxActive: 8
      maxIdle: 8
      maxOpenPreparedStatements: -1
      maxWait: -1
      minEvictableIdleTimeMillis: 1800000
      minIdle: 0
      numTestsPerEvictionRun: 3
      password: ''
      poolPreparedStatements: false
      removeAbandoned: false
      removeAbandonedTimeout: 300
      testOnBorrow: false
      testOnReturn: false
      testWhileIdle: false
      timeBetweenEvictionRunsMillis: -1
      url: jdbc:mysql://localhost:3306/demo_ds_0
      username: root
      validationQueryTimeout: -1
    ds_1: !!org.apache.commons.dbcp.BasicDataSource
      accessToUnderlyingConnectionAllowed: false
      defaultAutoCommit: true
      defaultReadOnly: false
      defaultTransactionIsolation: -1
      driverClassName: com.mysql.jdbc.Driver
      initialSize: 0
      logAbandoned: false
      maxActive: 8
      maxIdle: 8
      maxOpenPreparedStatements: -1
      maxWait: -1
      minEvictableIdleTimeMillis: 1800000
      minIdle: 0
      numTestsPerEvictionRun: 3
      password: ''
      poolPreparedStatements: false
      removeAbandoned: false
      removeAbandonedTimeout: 300
      testOnBorrow: false
      testOnReturn: false
      testWhileIdle: false
      timeBetweenEvictionRunsMillis: -1
      url: jdbc:mysql://localhost:3306/demo_ds_1
      username: root
      validationQueryTimeout: -1
Because every time to load YAML from registry center and convert them to
object will create new object of database connection pool, it will cost
resource of memory and database connection.
It should persist configuration info only and convert to configuration object
when loading from registry center.
So the tasks should be:
  * Define connection pool configuration object
  * Auto convert from connection pool configuration and connection pool, use reflection
  * Replace persist content of Sharding-JDBC's `datasource` node
  * Replace persist content of Sharding-Proxy's `datasource` node
  * Refactor `DataSourceParameter`, make consist with reflected connection pool configuration