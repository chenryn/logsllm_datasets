单个字符串可能包含数行，那种情况下，^与S指的分别是字符申的开头与结尾。
很多时候，在操作上可以将文本文件里的每一行视为一条单个记录，而在行内的数据则
包括字段。字段可以被空白或是特殊定界符分隔，且有许多不同的UNIX工具可处理这
两种数据：cut命令用以剪下选定的字符范围或字段，join则是用来结合记录中具有
共同键值的字段的文件。
awk多半用于简单的“单命令行程序”，当你想要只显示选定的字段，或是重新安排行
内的字段顺序时，就是awk派上用场的时候了，由于它是编程语言，即使是在简短的程
序里，它也能发挥其强大的功能、灵活性与控制能力。
www.TopSage.com
---
## Page 93
第4章
文本处理工具
有些在文本文件上的操作，之所以能成为广泛应用的标准工具，是因为这些工作早在贝
尔实验室里使用UNIX时就开发了，在本章中，我们就是要来看看这些重要工具，
4.1
排序文本
含有独立数据记录的文本文件，通常都可以拿来排序。一个可预期的记录次序，会让用
户的生活更便利：书的索引、字典、目录以及电话簿，如果没有次序依据就毫无价值。
排序后的记录更易于程序化，也更有效率，这部分在第5章将有进一步的说明。
就像awk、cut与join一样：sort将输人看作具有多条记录的数据流，而记录是由可
变宽度的字段组成，记录是以换行字符作为定界符，字段的定界符则是空白字符或是用
户指定的单个字符。
4.1.1
行的排序
以最简单的情况来说，未提供命令行选项时，整个记录都会根据当前locale所定义的次
序排序。在传统的Clocale中：也就是ASCII酒序，但是你可以像我们先前介绍过的2.8
节那样，自行设置另一种locale，
在ISO8859-1小型双语字典里，有4个法文单词，它们的不同之处仅在于重音位置不同：
S cat french-engliah
显示迷你字典
cote
coast
cote
dimension
coté
c0te
dimensLoned
side
1 1 
81
www.TopSage.com
---
## Page 94
82
sort
语法
sort[options ][file（s）]
用途
将输入行按照键值字段与数据类型选项以及locale排序。
主要选项
-b
忽略开头的空白。
-C
检查输入是否已正确地排序。如输入未经排序，但退出码（cxitcode）为
非零位，则不会有任何输出。
=d
字典顺序：仅文字数字与空白才有意义。
6-
一般数值：以浮点数字类型比较字段。这个选项的运作有点类似-n，差
别仅在于这个选项的数字可能有小数点及指数（例：6.022e+23）.仅
GNU版本提供此功能。
-f
将混用的字母都看作相同大小写，也就是以不管字母大小写的方式排序。
-1
忽略无法打印的字符。
-k
定义排序键值字段。详见4.1.2节。
将已排序的输入文件，合并为一个排序后的输出数据流。
-n
以整数类型比较字段。
-0 outfile
将输出写到指定的文件，而非标准输出。如果该文件为输入文件之一，则
sozt在进行排序与写到输出文件之前，会先将它复制到一个临时的文件，
例置排序的顺序为由大至小（descending），而非取认的由小至大
(ascending),
www.TopSage.com
---
## Page 95
文本处理工具
83
sort（续）
-t char
使用单个字将char作为联认的字段分隔字将，取代默认的空白字符。
=11
只有唯一的记录：丢弃所有具相同健值的记录，只留其中的第一条。只有
健值字段是重要的，也就是说：被丢弃的记录其他部分可能是不同值。
行为模式
SOrt会读取韬定的文件，如果未给定文件，则读取标准输入，再将排序好的
数据写至标准输出。
要了解排序的过程，你可以使用八进制的打印工具：od，用ASCII和八进制码来显示法
文单词：
S cut -f1 french-english 1 od -a -b
以八选制字节显示法文单词
[u110000000
0200000
0000024
364 °164 351 012
显然，因为加了ASCII选项-a，od脚本去掉了字符前面的位，因此重音字母已技切除，
不过我们还是可以看到它们的八进制值：é为351g而为364g
在GNU/Linux系统下，可以用如下方式来确认字符值：
S man ieo_8859_1
查看1908859-1的手册页
Oct
Dec
Hex
Char
Description
351
233
E9
6
LATIN SMALL LETTER E WITH ACUTE
364
244
F4
8
LATIN SNALL LETTSR O WITH CIRCUMFLEX
+ - +
首先，以严格的字节序排序文件：
S LC_Att=C sort french-engliah
以传统ASCII码序排序
cote
coté
dimens1on
dinensioned
cbte
cbt6
coast
8ide
你应该会发现，正如其数值的情况：e（145g）排在é（351g）之前；而o（157g）排在
6（364g）之前。
www.TopSage.com
---
## Page 96
84
第4章
现在我们以Canadian-French的文本顺序排序：
$ LC_ALL=fr_CA.lso88591 8ort french-english CLCanadian-French的 locale 排序
cbte
cote
dimension
28902
cot6
cbt6
dimensioned
81de
输出的顾序完全不同于按照原始字节值所做的传统排序。
排序的惯例，完全视语言、国家以及文化而定，且这样的规则有时会非常复杂。即便是
英文这种看起来与重音不相关的语言，都有复杂的排序规则。可以看看电话簿里，那些
大小写、数字、空间、标点符号，还有姓名变化，例如McKay与Mackay的处理方式。
4.1.2以字段排序
如果要进一参控制排序操作，可以用-k选项指定排序字段，并且用-t选项来选择字段
定界符。
如未指定-t，则表示字段以空白分隔且记录内开头与结尾的空白都将忽略：如指定-t
选项，则被指定的字符会分隔字段，且空白是有意义的。因此一个包括“空白-X-空白”
三个字符的记录，如果没有指定-t则只有一个字段，如果使用-t，则为三个字段
（第一个与第三个字段是空的）：
-k选项的后面接着的是一个字段编号，或者是一对数字，有时在-k之后可用空白分隔。
每个编号后面都可以接一个点号的字符位置，及/或修饰符（modifier）字母之一，如表
4-1所示。
表4-1：排序键值字收的类型
字母
说明
b
忽略开头的空白
字典顺序
f
不区分字母的大小写
以一般的符点数字进行比较，只适用于GNU版本
忽略无法打印的字符
n
以（整数）数字比较
到置排序的顺序
字段以及字段里的字符是由1开始。
www.TopSage.com
---
## Page 97
文本处理工具
3.
如果仅指定一个字段编号，则排序键值会自该字段的起始处开始直继续到记录的结COIm1
尾（面非字段的结尾）。
如果给的是一对用退点隔开的字段数字，则排序键值将由第一个字段值的起始处开始，
结束于第二个字段值的结尾。
使用点号字符位置，则比较的开始（一对数字的第一个）或结束（一对数字的第二个）
在该字符位置处：-k2.4，5.6指的是从第二个字段的第四个字符开始比较，一直比到第
五个字段的第六个字符。
如果一个排序键值的起始正好落在记录的结尾处之后，则排序键值为空，且空的排序键
值在排序时将优先于所有非空的键值，
当出现多个-k选项时，会先从第一个键值字段开始排序，找出匹配该键值的记录后，再
进行第二个键值字段的排序，以此类推。
注意：-k选项在我们测试的所有系统上都可用，但sort也认得过时的旧式字段规格，在该定义
上，字段与字符位置是从0开始编号。键值从字段n中的字符m开始，定义为：+a.m，以
及键值以-n.m结束，举例来说，sort.+2.1-3.2，等网于sort-k3.2.4.3.如省略
字符位置，则默认为0。因此，+4.0nr与+4nr表示相同的意义：一个数值型的键值，从
第5个字段起始处开始，但反向（由大至小）排序。
我们可以在password范例文件上试试这些选项，以冒号隔开的第一个字段：用户名称，
进行排序：
Ssort -t:-k1,1/etc/pasawd
以用户名称排序
daemon:x:2 :2:daemon1/sbin1/sbin/no1ogin
chico1x:12501:1000:Chico Marx:/home/chico:/bin/bash
groucho:x:12503:2000:Groucho Marx:/home/groucho:/bin/sh
harpo:x:12502:1000:Harpo Marx: /home/harpo: /bin/ksh
gummo:x:12504:3000:Gummo Marx: /home/gunmo:/usx/1oca1/bin/ksh93
root:x:0:0:root :/root: /bin/bash
zeppo:x:12505:1000 :Zeppo Marx: /home/zeppo: /bin/zsh
如果要再进一步控制排序后的结果，可在字段选择器（fieldselector）内，加人一个修
符字母，定义字段里的数据类型及排序顺序。这里显示按照反向顺序的UID来排序
password文件的结果：
$ sort -t:-k3nr /etc/passwd
zeppo:x:12505:1000:Zeppo Marx:/home/zeppo:/bin/zsh
反向UID的排序
groucho:x:12503:2000:Groucho Marx:/home/groucho:/bin/sh
gummo :×:12504 :3000:Gummo Ma.rx: /home/gummo: /usx/1oca1/bin/ksh93
www.TopSage.com
---
## Page 98
86
第4章
harpo:x:12502:1000:Harpo Marx:/home/harpo:/bin/ksh
daenon:x:2:2:daezon:/sbin:/sbin/nologin
ch1co:x:12501:1000:Chico Marx1/home/ch±co1/bin/bash
binrx:1:1:bin:/bin:/ebin/no1ogin
root:x:0:0:root:/root:/bin/bash
更精确的字段规格应为-k3nx，3（也就是从字段3起始处开始，以数值类型反向排序，
并结束于字段3的结尾），或是-k3，3nr，甚至是-k3，3-n-r也可以，由于sort
会在遇到第一个非阿拉伯数字处停止收集数据，所以-k3nr也正确。
在我们的password范例文件里，有三个用户拥有共同的GID（字段4），因此我们可以
先以GID排序，再以UID排序，如下所示：
$ gort -t:-k4n -k3n/etc/passud
root :x:0:0:root:/root:/bin/bash
以GID与UID排序
bin1x:1:1:bin:/bin:/8bin/nologin
daemon:x:2:2:daenon1/sbin:/abin/no1ogin
chico:x:12501:1000 :Chico Marx:/hone/chico:/bin/bash
harpo:x:12502 :1000 ±Harpo Marx: /home/harpo:/bin/ksh
zeppo:x:12505 :1000 :Zeppo Marx: /hone/zeppo:/bin/zsh
groucho:x:12503:2000:Groucho Marx1/home/groucho: /b1n/sh
gunmo1x112504 :3000 :Gunmo Marx: /home/guamo: /usr/1oca1/bin/ksh93
-u选项的好用是在于：它可以要求sort仅输出唯一的记录，而“唯一的”是指它们的
排序键值字段匹配，即使在记录的其他地方有差异也无所调，我们再利用password文件
看一次，发现：
root:x:0:01root:/root:/bin/bash
S aort =t: -k4n -u /etc/pasewd
以唯的 GID 排序
bin:x:1:1:bin:/bin:/sbin/nologin
daenon:x:2121daemon:/sbin:/sbin/no1ogin
chico:x:12501:1000:Chico Marx:/home/chico:/bin/bash