## 课程小结这就是今天分享的全部内容了，我们一起来回顾一下重点：分布式缓存的高可用方案主要有三种，首先是客户端方案，一般也称为 SmartClient。我们通过制定一些数据分片和数据读写的策略，可以实现缓存高可用。这种方案的好处是性能没有损耗，缺点是客户端逻辑复杂且在多语言环境下不能复用。其次，中间代理方案在客户端和缓存节点之间增加了中间层，在性能上会有一些损耗，在代理层会有一些内置的高可用方案，比如Codis 会使用 Codis Ha 或者 Sentinel。最后，服务端方案依赖于组件的实现，Memcached 就只支持单机版没有分布式和HA 的方案，而 Redis 在 2.4 版本提供了 Sentinel方案可以自动进行主从切换。服务端方案会在运维上增加一些复杂度。总体而言，分布式缓存的三种方案各有所长，有些团队可能在开发过程中已经积累了Smart Client 上的一些经验；而有些团队在 Redis 运维上经验丰富，就可以推进Sentinel方案；有些团队在存储研发方面有些积累，就可以推进中间代理层方案，甚至可以自研适合自己业务场景的代理层组件，具体的选择还是要看团队的实际情况而定。
## 思考时间结合你们过往的经历，我们来聊一聊缓存高可用的重要性吧，比如当缓存可用性下降会造成什么严重问题呢？你们又是如何来保证缓存的高可用的呢？欢迎在留言区与我一同讨论。最后，感谢你的阅读，如果这篇文章让你有所收获，也欢迎你将它分享给更多的朋友。![](Images/5cef34b7fbf24f9dd9c2c4c485c9dd17.png){savepage-src="https://static001.geekbang.org/resource/image/72/1a/72b203e2c1ec97d268a5eead610bf71a.jpg"}
# 15 \| 缓存的使用姿势（三）：缓存穿透了怎么办？你好，我是唐扬。我用三节课的时间，带你深入了解了缓存，你应该知道，对于缓存来说，命中率是它的生命线。在低缓存命中率的系统中，大量查询商品信息的请求会穿透缓存到数据库，因为数据库对于并发的承受能力是比较脆弱的。一旦数据库承受不了用户大量刷新商品页面、定向搜索衣服信息，就会导致查询变慢，导致大量的请求阻塞在数据库查询上，造成应用服务器的连接和线程资源被占满，最终导致你的电商系统崩溃。一般来说，我们的核心缓存的命中率要保持在 99%以上，非核心缓存的命中率也要尽量保证在90%，如果低于这个标准，那么你可能就需要优化缓存的使用方式了。既然缓存的穿透会带来如此大的影响，那么我们该如何减少它的发生呢？本节课，我就带你全面探知，面对缓存穿透时，我们到底有哪些应对措施。不过在此之前，你需要了解"到底什么是缓存穿透"，只有这样，才能更好地考虑如何设计方案解决它。