a level of availability of nearly 3 nines (99.8%).2 Thus, the network
administrator can trade network utilization for availability to reflect
the operational objectives and strike a balance between the two.
2This is because the probability of the upper and lower links both being up, no matter
what happens with the middle link, is (1 − 10−3)2 = 0.998.
Our approach: risk-aware TE. Under TeaVaR, instead of reason-
ing about availability indirectly in terms of the maximum number
of tolerable failures as in [43], network operators can generate a
probabilistic failure model from empirical data (e.g., encompassing
uncorrelated/correlated link failures, node failures, signal decay,
etc.) and optimize TE with respect to an availability bound. We
describe our approach in the following sections.
Note that our approach to risk-aware TE is orthogonal and com-
plementary to the challenge of capacity planning. While capacity
planning is focused on determining in what manner capacity should
be augmented to the WAN to provide high availability, our goal
is to optimize the utilization of available network capacity with
respect to real-time information about traffic demands and expected
failures. We elaborate on this relation in Section 7.
3 PROBABILISTIC TRAFFIC ENGINEERING
In this section, we relate the central concept of Value at Risk (VaR)
in finance to resource allocation in networks and, more specifically,
to TE. We then highlight the main challenges and ideas underlying
TeaVaR—a probabilistic TE solution. A full description of TeaVaR
appears in Section 4.
3.1 Probabilistic Risk-Management in Finance
In many financial contexts, the goal of an investor is to manage
a collection of assets (e.g., stocks), also called a portfolio, so as to
maximize the expected return on the investment while considering
the probability of possible market changes that could result in losses
(or smaller-than-expected gains).
Consider a setting in which an investor must decide how much
of each of n stocks to acquire by quantifying the return from dif-
ferent investment possibilities. Let x = (x1, . . . , xn) be a vector
representing an investment, where xi represents the amount of
stock i acquired, and let y = (y1, . . . , yn) be a vector that is ran-
domly generated from a probability distribution reflecting market
statistics, where yi represents the return on investing in stock i. In
financial risk literature, vector x is termed the control and vector y is
termed the uncertainty vector. The loss function L(x, y) captures the
return on investment x under y and is simply L(x, y) = −Σn
i =1xiyi,
i.e., the negative of the gain.
Investors wish to provide customers with bounds on the loss
they might incur, such as “the loss will be less than $100 with
probability 0.95,” or “the loss will be less than $500 with probability
0.99.” Value at Risk (VaR) [33] captures precisely these bounds.
Given a probability threshold β (say β = 0.99), V aRβ provides a
sd10 Gbps10 Gbps10 Gbpssd10/3 Gbps10/3 Gbps10/3 Gbpsp(fail) = 10-3p(fail) = 10-3sd10 Gbps10 Gbpsp(fail) = 10-110 Gbpssd10 Gbps10 Gbps0 GbpsSIGCOMM ’19, August 19–23, 2019, Beijing, China
Bogle et al.
probabilistic upper bound on the loss: the loss is less than V aRβ
with probability β.
Fig. 4 gives a graphical illustration of the concepts of V aRβ (and
CV aRβ which we describe below). For a given control vector x and
probability distribution on the uncertainty vector y, the figure plots
the probability mass function of individual scenarios (x, y), sorted
according to the loss associated with each scenario. Assuming all
possible scenarios are considered, the total area under the curve
amounts to 1. At the point on the x-axis marked by ξ =V aRβ(x),
the area under the curve is greater than or equal to β. Given a
probability threshold β (say β = 0.99) and a fixed control x, V aRβ(x)
provides a probabilistic upper bound on the loss: the loss is less
than V aRβ(x) with probability β. Equivalently, V aRβ(x) is the β-
percentile of the loss given x. Value at Risk (V aRβ ) is obtained by
minimizing V aRβ(x) (or ξ) over all possible control vectors x, for a
given a probability threshold β. The VaR notion has been applied
in various contexts, such as hedge fund investments [51], energy
markets [14], credit risk [3], and even cancer treatment [45].
We point out that V aRβ does not necessarily minimize the loss
at the tail (colored in red in Fig. 4), i.e., the worst-case scenarios
in terms of probability, which have total probability mass of at
most 1 − β. A closely related risk measure that does minimize the
loss at the tail is termed β-Conditional Value at Risk (CV aRβ )[50];
CV aRβ is defined as the expected loss at the tail, or, equivalently,
the expected loss of all scenarios with loss greater or equal to V aRβ .
VaR minimization is typically intractable. In contrast, minimizing
CVaR can be cast as a convex optimization problem under mild
assumptions [50]. Further, minimizing CVaR can be a good proxy
for minimizing VaR.
3.2 Probabilistic Risk Management in
Networks
Optimizing traffic flow in a network entails contending with loss,
which, in this context, is due to the possibility of failing to satisfy
user demands when traffic shifts as link/node failures congest the
network. We present a high-level overview of how the VaR and
CVaR can be applied to this context and defer the formal presenta-
tion to Section 4.
We model the WAN as a network graph, in which nodes represent
switches, edges represent links, and each link is associated with
a capacity. Links (or, more broadly, shared risk groups) also have
failure probabilities. As in prior studies [27, 29, 43], in each time
epoch, a set of source-destination switch-pairs (“commodities” or
“flows”) wish to communicate where each such pair i is associated
with a demand di, and a fixed set of possible routes (or tunnels) Ri
on which its traffic can be routed.
Intuitively, under our formulation of TE optimization as a risk-
management challenge, the control vector x captures how much
bandwidth is allocated to each flow on each of its tunnels, and
the uncertainty vector y specifies, for each tunnel, whether the
tunnel is available or not (i.e., whether all of its links are up). Note
that y is stochastic, and its probability distribution is derived from
the probabilities of the underlying failure events (e.g., link/node
failures). Our aim is to maximize the bandwidth assigned to users
subject to a desired, operator-specified, availability threshold β.
Figure 4: An illustration of Value at Risk, V aRβ(x), and Con-
ditional Value at Risk, CV aRβ(x). Given a probability thresh-
old β (say β = 0.99) and a decision vector x, V aRβ(x) pro-
vides a probabilistic upper bound on the loss: the loss is less
than V aRβ(x) with probability β. CV aRβ(x) captures the ex-
pected loss of all the scenarios where loss is greater than
V aRβ(x) [52].
However, applying CV aRβ to network resource allocation faces
three nontrivial challenges:
Challenge: Achieving fairness across network users. Avoid-
ing starvation and achieving fairness are arguably less pivotal in
stock markets, but they are essential in network resource allocation.
In particular, TE involves multiple network users, and a crucial
requirement is that high bandwidth and availability guarantees for
some users not come at the expense of unacceptable bandwidth
or availability for others. This, in our formulation, translates into
carefully choosing the loss function L(x, y) so that minimizing the
chosen notion of loss implies such undesirable phenomena do not
occur. We show how this is accomplished in §4.
Challenge: Capturing fast rerouting of traffic in the data plane.
Unlike the above formulation of stock management, in TE the con-
sequences of the realization of the uncertainty vector cannot be cap-
tured solely by a simple loss function such as L(x, y) = −Σn
i =1xiyi.
This is because our CVaR-based optimization formalism must take
into account that the unavailability of a certain tunnel might imply
more traffic having to traverse other tunnels.
Providing high availability in WAN TE cannot rely on online
re-computation of tunnels as this can be too time consuming and
adversely impact availability [43, 54]. As in [43, 54], to quickly
recover from failures, TeaVaR re-adjust traffic splitting ratios on
surviving tunnels via re-hashing mechanisms implemented in the
data plane. Thus, the realization of the uncertainty vector, which
corresponds to a specification of which tunnels are up, impacts the
control, capturing how much is sent on each tunnel.
Challenge: Achieving computational tractability. A naive for-
mulation of CVaR-minimizing TE machinery yields a non-convex
optimization problem. Hence, the first challenge is to transform
the basic formulation into an equivalent convex program. We are,
in fact, able to formulate our TE optimization as a Linear Program
through careful reformulation with auxiliary variables (see Appen-
dix A for details). In addition, because the number of all possible
failure scenarios increases exponentially with the network size,
ξ=VaRβ(x)Loss(x,y)CVaRβ(x)=E[Loss|Loss≥ξ]Probability(x,y)A scenario Striking the Right Utilization-Availability Balance in WANs
SIGCOMM ’19, August 19–23, 2019, Beijing, China
G(V , E)
ce ∈ C
di ∈ D
Ri ∈ R
q ∈ Q
β
pq
sq
ti,q
yr(q)
bi
xr
α
Network graph with switches V and links E.
The bandwidth capacity of link e ∈ E.
The bandwidth demand of flow i.
Set of tunnels for flow i.
The target availability level (e.g.,99.9%).
The network state corresponding to a scenario
of failed shared risk groups.
Probability of network state q.
The total loss in scenario q.
The loss on flow i in scenario q
1 if tunnel xr is available in scenario q,
0 otherwise
The total bandwidth for flow i.
The allocation of bi on tunnel r ∈ Ri .
The “loss” (a.k.a the Value at Risk (VaR)).
TE Input
Additional
TeaVaR
Input
Auxiliary
variables
TE
Output
Additional
TeaVaR
Output
α + 1
1−β Σq∈Qpqsq
minimize
subject to Σe∈r xr ≤ ce
sq ≥ ti,q − α
sq ≥ 0
ti,q = 1 − Σr∈Ri xr yr(q)
where
di
∀e
∀i, q
∀q
∀i, q
Table 1: Key notations in the TeaVaR formulation. The origi-
nal optimization problem is minimizing (4) subject to (2) – (3).
Here, we show the derived LP formulation; see Section 4.2
and Appendix A for details.
solving this LP becomes intractable for realistic network sizes. To
address this additional challenge, we introduce a pruning process
that allows us to consider fewer scenarios. This substantially im-
proves the runtime with little effect on accuracy, as shown in §5.
4 THE TEAVAR OPTIMIZATION FRAMEWORK
We now describe the TeaVaR optimization framework in detail. We
first formalize the model and delineate the goals of WAN TE [27,
29, 38, 43] (§4.1). We then introduce TeaVaR’s novel approach to
TE, showing that it enables providing probabilistic guarantees on
network throughput (§4.2).
4.1 WAN Traffic Engineering
Input. Like other WAN TE studies, we model the WAN as a directed
graph G = (V , E), where the vertex set V represents switches and
edge set E represents links between switches. Link capacities are
given by C = (c1, . . . , c|E |) (e.g., in bps) and as in any TE formu-
lation, the total flow on each link should not exceed its capacity.
TE decisions are made at fixed time intervals (say, every 5 min-
utes [27]), based on the estimated user traffic demands for that
interval. In each time epoch, there is a set of source-destination
switch-pairs (“commodities” or “flows”), where each such pair i is
associated with a demand di and a fixed set of paths (or “tunnels”)
Ri ∈ R on which its traffic should be routed. TeaVaR assumes
the tunnels are part of the input. In Section 5, we evaluate the
impact of the tunnel selection scheme (e.g., k-shortest paths, edge-
disjoint paths, oblivious-routing) on performance. Our evaluation
results show that TeaVaR optimization improves the achievable
utilization-availability balance for all considered tunnel-selection
schemes.
Output. The output of TeaVaR consists of two parts (see Table 1):
(1) the total bandwidth bi that flow (source-destination pair) i is
permitted to utilize (across all of its tunnels in Ri); (2) a specification
for each flow i of how its allocated bandwidth bi is split across its
tunnels Ri. The bandwidth allocated on tunnel r is denoted by xr .
Optimization goal. Previous studies of TE consider optimization
goals such as maximizing total concurrent flow [7, 27, 43, 53], max-
min fairness [16, 29, 49], minimizing link over-utilization [38], min-
imizing hop count [41], and accounting for hierarchical bandwidth
allocations [37]. As formalized below, an appropriate choice for our
context is selecting xr (per-tunnel bandwidth allocations) in a man-
ner that maximizes the well-studied maximum-concurrent-flow
objective [53]. This choice of objective will enable us to maximize
network throughput while achieving some notion of fairness in
terms of availability across network users. In §4.2 we discuss ways
to extend our framework to include other optimization objectives.
Under maximum-concurrent-flow, the goal is to maximize the
value δ ∈ [0, 1] such that at least an δ-fraction of each flow i’s
demand is satisfied across all flows. For example, δ = 1 implies that
all demands are fully satisfied by the resulting bandwidth allocation,
while δ = 1
3 implies that at least a third of each flow’s demand is
satisfied.
4.2 TeaVaR: TE with Probabilistic Guarantees
TeaVaR’s additional inputs and outputs are listed in Table 1. Given
a target availability level β, our goal is to cast TE optimization as a
CVaR-minimization problem whose output is a bandwidth alloca-
tion to flows that can be materialized with probability of at least
β. Doing so requires careful specification of (i) the “control” and