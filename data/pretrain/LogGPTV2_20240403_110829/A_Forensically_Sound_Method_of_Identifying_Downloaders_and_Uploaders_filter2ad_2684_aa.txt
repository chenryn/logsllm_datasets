title:A Forensically Sound Method of Identifying Downloaders and Uploaders
in Freenet
author:Brian Neil Levine and
Marc Liberatore and
Brian Lynn and
Matthew Wright
A Forensically Sound Method of Identifying
Downloaders and Uploaders in Freenet
Brian N. Levine
Marc Liberatore
Univ. of Massachusetts Amherst
MA, USA
Matthew Wright
Rochester Institute of Technology
NY, USA
Univ. of Massachusetts Amherst
MA, USA
Brian Lynn
MA, USA
Univ. of Massachusetts Amherst
ABSTRACT
The creation and distribution of child sexual abuse materials (CSAM)
involves a continuing violation of the victims’ privacy beyond the
original harms they document. A large volume of these materials is
distributed via the Freenet anonymity network: in our observations,
nearly one third of requests on Freenet were for known CSAM. In this
paper, we propose and evaluate a novel approach for investigating
these violations of exploited childrens’ privacy. Our forensic method
distinguishes whether or not a neighboring peer is the actual uploader
or downloader of a file or merely a relayer. Our method requires
analysis of the traffic sent to a single, passive node only. We evaluate
our method extensively. Our in situ measurements of actual CSAM
requests show an FPR of 0.002 ± 0.003 for identifying downloaders.
And we show an FPR of 0.009± 0.018, a precision of 1.00± 0.01, and
a TPR of 0.44 ± 0.01 for identifying uploaders based on in situ tests.
Further, we derive expressions for the FPR and Power of our hypothesis
test; perform simulations of single and concurrent downloaders; and
characterize the Freenet network to inform parameter selection. We
were participants in several United States Federal Court cases in which
the use of our method was uniformly upheld.
CCS CONCEPTS
• Security and privacy → Privacy protections; • Applied com-
puting → Network forensics.
KEYWORDS
forensics; child sexual abuse materials; child rescue; darknets; anony-
mous communication systems
ACM Reference Format:
Brian N. Levine, Marc Liberatore, Brian Lynn, and Matthew Wright. 2020.
A Forensically Sound Method of Identifying Downloaders and Uploaders in
Freenet. In Proceedings of the 2020 ACM SIGSAC Conference on Computer and
Communications Security (CCS ’20), November 9–13, 2020, Virtual Event, USA.
ACM, New York, NY, USA, 16 pages. https://doi.org/10.1145/3372297.3417876
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
CCS ’20, November 9–13, 2020, Virtual Event, USA
© 2020 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-7089-9/20/11...$15.00
https://doi.org/10.1145/3372297.3417876
1 INTRODUCTION
Anonymous communication systems, including Freenet [1, 2] and
Tor [3], play a critical role in the sexual abuse of children [4–26].
They are more than venues and conduits for the trafficking of child
sexual abuse material (CSAM1). They mask the perpetrators’ activ-
ities and they ensure persistence of CSAM over many years [27],
which is a continued victimization of depicted individuals into their
adulthood [28–32]. CSAM made available via anonymous systems
is used by perpetrators to groom new victims through normaliza-
tion of the acts they depict [33]. These acts represent the gravest
privacy violations of the child victims. Therefore, it is critical that
investigators have available to them methods to stop these crimes
on anonymous communication systems.
Although not as popular as Tor and often overshadowed by it,
Freenet has been consistently used by thousands of users a day
for decades. Files published to Freenet are fragmented into small
encrypted blocks that are dispersed randomly throughout the net-
work of peers. A manifest key is a URI necessary to retrieve and
reconstruct the original file. Manifest keys for published files are
often broadcast via open, public forums. In addition to representing
files on the network, manifest keys are used to find HTML-based
websites called freesites and a Usenet-like forum called Frost.
We found a number of user-created areas on Freenet explicitly
and openly dedicated to child sexual exploitation. We harvested over
124,000 manifest keys from these public areas. Law enforcement
was able to confirm that many referenced CSAM images; and half
of those they identified were deemed severe, meaning they involved
very young victims or violent acts. We then took a sample of Freenet
traffic, and found that over 30% of all requests on Freenet were for
the keys we harvested.
To stop these crimes, investigators require a method that is both
effective and forensically sound. We adopt the Daubert standard [34]
as our definition of forensic soundness. That is, we seek a method
that is based on a testable hypothesis, has a known error rate,
follows existing standards, and uses generally accepted methods.
Prior work has revealed some vulnerabilities in Freenet’s approach
[35–40] that could in theory be applied to forensic investigations.
However, these past works are relatively heavyweight approaches
that would require active maneuvering of the investigator’s posi-
tion, the use of active traffic probing, the use of multiple peers, or
relied on ephemeral bugs. Furthermore, Freenet developers have
largely addressed these vulnerabilities.
1CSAM is often called child pornography.
Session 5C: Forensics CCS '20, November 9–13, 2020, Virtual Event, USA1497Contributions. In this paper, we design and evaluate a method
for investigation of CSAM-based privacy violations and re-victimi-
zation on Freenet. We present a novel approach to distinguishing
whether or not a neighboring peer is the actual uploader or down-
loader of a file in Freenet. Our algorithm can be enacted by a single
peer using only the passive analysis of the traffic that is sent to it by
the neighbor. Our method is strongly justified, and we show it to be
effective for investigators and forensically sound. Our efforts place
a priority on quantifying and eliminating possible false positives.
We also detail use of the method to rescue children from abuse.
Our method has been considered by several US District Courts, and
all have upheld its use in criminal investigations. Our technique
is based on a simple observation of Freenet: requests associated
with a manifest are divided among neighbors, and counts of re-
quests fall exponentially with each hop from the original uploader
or downloader. Our specific contributions are as follows.
• Motivation. We observe that at least 30% of request traffic on
Freenet is for CSAM-related content. This fraction is consis-
tent over four years of measurements that we have made. We
also analyze, for the first time, the basis of Freenet’s anonymity
mechanism and prove it prevents the use of hop counters for
de-anonymization.
• Investigative technique and in situ evaluation. We derive
an investigative technique based on a Bayesian hypothesis test
that considers request traffic. The test models the investigator’s
decision for whether or not a neighboring subject is a downloader
or uploader of content. To evaluate the technique, we placed
nodes on the real network and waited for them to be used as
relays for actual CSAM investigated by law enforcement; we
observed an FPR of 0.002 ± 0.003 (n = 918). In separate tests, we
uploaded non-CSAM content to the real network. We observed
an FPR of 0.009 ± 0.019 (n = 111), a precision of 1.00 ± 0.01 (n =
4, 415), and a TPR of 0.44 ± 0.01 (n = 9, 965) for our technique.
• Analysis and simulation. We derive expressions for the FPR
and Power of our Bayesian test. The expressions validate our in
situ evaluation, predicting that for typical scenarios on Freenet,
the probability of false positives is very low and decreases with
the size of the file shared. Meanwhile, the probability of a false
negative remains low. This result is further validated by simu-
lations where we construct and vary the topology. Additionally,
we show through simulation why the traffic of other, concurrent
downloaders that might pass through the subject is not a signifi-
cant source of false positives. We detail and validate assumptions
of our model and set parameters based on Freenet’s design, its
operation, and characterization of its network.
• Deployment and legal outcomes. We disclosed our work pub-
licly [14]. We were consulted during investigations that made
use of the method, and we were participants in several US Fed-
eral Court cases. We summarize the outcomes, which resulted in
justice for re-victimized persons whose depictions of abuse were
in possession by the downloader, and in one case, the rescue of
children from hands-on abuse by a Freenet downloader.
• Anonymous system design. We discuss user and developer
changes to Freenet that may allow requesters to avoid detection.
We conclude by comparing to related work and reviewing ethical
concerns. Given these results, we argue that this investigative
technique is a highly accurate, efficient, effective, and forensically
sound method of addressing child privacy violations resulting from
the use of Freenet to upload and download CSAM.
This paper expands significantly on a prior workshop publica-
tion by the authors [14] and is distinguished by the following new
contributions: a proof that de-anonymization cannot be based on
Freenet’s probabilistic packet hop counters (Theorem 1 in §4.2); pa-
rameter validation based on characterization of Freenet’s topology
(§4.4); an empirical measurement of FPR for downloaders based
on years of in situ experiments (§5.1); expansion of our method to
identification of uploaders, including an empirical measurement
of precision, TPR, and FPR based on in situ experiments (§5.2); an
analytical model of FPR and Power (§5.3: Theorems 2, 3, 4, and 5 and
Lemmas 1 and 2); simulation-based evaluation of the false positives
caused by concurrent downloads (§6.2); and reporting of outcomes
from use of the method by law enforcement in practice (§7). Over-
all, each of these new results adds substantially to our assessment
of the forensic soundness of the technique by demonstrating via
multiple methodologies that it produces reliable evidence.
2 BACKGROUND
Freenet is an overlay network that operates as a distributed data
store, with each participating node anonymously contributing key-
value storage to encrypted blocks of data [1, 2, 41]. A key is the
SHA256 hash of the block. Freenet nodes form a small-world net-
work [42] with each node connecting to other nodes, the set of
which we call its peers or neighbors. Unlike anonymity systems,
Freenet users do not attempt to hide their IP addresses behind
proxy nodes (e.g., Tor guard nodes). Instead, nodes attempt to blend
their traffic into traffic generated by other nodes. Freenet has two
operational modes: darknet and opennet. In darknet mode, Freenet
nodes only connect to peers for which the user has explicitly given
permission. In opennet, nodes connect to other opennet nodes,
discovered from well-known seed nodes or other nodes. Opennet
allows for neighbors to exchange information on their peers and
form new connections to better organize the network. We focus ex-
clusively on opennet. Our method should work for darknet, though
it would also require social engineering to join specific darknets.
Uploading Files and Manifests. For a file to become available
to Freenet nodes, it must first be uploaded (or inserted) by a node
into the network. Nodes do not explicitly share files; files must be
retrieved from the network’s distributed data store. When a file is
inserted into the network, Freenet divides it into encrypted 32KB
content blocks (or simply blocks). The inserting node (or requester)
distributes the blocks to its peers. A peer may place the block in its
own storage, and it may also send the block to its own peers.
After the requester distributes the content blocks, it inserts a
separately encrypted 32KB manifest block. The manifest block holds
the SHA256 hash and decryption key of each of the file’s content
blocks. For large files with many blocks, the manifest block cannot
reference all of the content blocks and will instead reference another
level of manifest blocks. Finally, Freenet returns a human-readable
manifest key to the user. The manifest key is a URI, consisting of the
manifest block’s SHA256 hash and decryption key. Freenet allows a
user to decide between two primary types of manifest key: content
hash key (CHK) or signed subspace key (SSK). CHK blocks will
Session 5C: Forensics CCS '20, November 9–13, 2020, Virtual Event, USA1498be identical for multiple copies of the same file. SSKs generate a
unique encryption key per upload, and thus the blocks would be
distinct per manifest and uploader. Anyone with knowledge of the
manifest key can retrieve the file.
Downloading. Retrieving a file from the network is the inverse of
inserting it. The downloading node—also known as the requester—
first retrieves and decrypts the manifest block(s) to get the hash and
encryption keys of the content blocks. The requester then retrieves
and decrypts the content blocks, and finally reconstructs the file
data. Downloading a file does not result in the file’s blocks being
placed into the node’s local storage.
In requesting blocks, a simple process is followed. If a node
receiving a request has the block in its Freenet storage, it returns
the block. Otherwise, it relays the request to one of its peers. The
process continues from peer to peer. When found, the block is
returned in reverse order through the chain of peers, and cached
by each for faster replies to future requests. If a node in the chain
fails to find the block, it may relay the request to other peers before
returning a not-found result.
Peer Selection and Routing. Every Freenet node and block is
assigned a location, a 64-bit floating point number between 0 and 1,
inclusive. Locations are points on a circular ID space, with 0 and 1
being the same point. The distance between any two locations is the
length of the shortest arc between the two points. A persistent loca-
tion is randomly assigned to each opennet node, and each block’s
SHA256 hash can be deterministically converted to a location.
An opennet node selects the majority of its peers from among
nodes close to its own location, with the remaining peers distributed
throughout the circle. The total number of peers is a function of the
upload bandwidth the user allocates to the Freeent node. A node
sends a request in the direction of the node closest to the block’s
location. Freenet performs friend-of-a-friend (FOAF) routing: nodes
have visibility to their immediate peers’ locations, as well as the
locations of their peers’ peers. All visible locations are considered
when selecting a recipient peer. If a request is unsuccessful, the next
closest peer is tried, once again taking FOAF routing into account.
A peer may choose to reject a request due to resource constraints.
Receiving rejects may cause a node to mark its peer as being backed