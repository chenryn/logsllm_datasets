### 基于非法获取的用户密码数据的统计分析

以下报告基于非法获取的用户密码数据进行统计分析：

- **RockYou 被盗密码分析**：在被盗的 3200 万个密码中，使用最多的密码是 "123456"。
- **Htomail 泄露密码分析**：泄露的 Htomail 密码中，使用最多的也是 "123456"。
- **MySpace 钓鱼网站收集的密码**：通过 MySpace 钓鱼网站收集到的密码中，使用最多的是 "password1"。

从这些报告可以看出，用户在满足密码限制条件的前提下，倾向于选择简单的密码。例如，在要求密码长度至少为 10 个字符，并且必须包含大写字母、小写字母、数字和符号的网站上，用户可能最常使用的密码是 "Password1!"。

在这种情况下，如何促使用户设置更安全的密码成为了网站运营方需要解决的问题。

### 应用程序设计中的密码需求

本节将讨论应用程序设计中与密码相关的安全需求。

尽管设置安全密码的责任在于用户，但应用程序应确保不阻碍用户选择安全密码。换句话说，不应设置过于严格的字符种类和密码位数限制。以下是两种常见的密码组合示例：

- **基本组合**：
  - 字符种类：英文字母和数字（区分大小写）
  - 位数：最多 8 个字符
- **宽松组合**：
  - 字符种类：所有 ASCII 字符（0x20～0x7E）
  - 位数：最多 128 个字符

放宽密码的字符种类和位数限制后，用户可能会选择使用密码短语（Passphrase），即由多个词组组成的较长密码。然而，现实中许多用户仍会选择容易被猜测和破解的密码。因此，越来越多的网站除了限制密码的字符种类和位数外，还对具体的密码内容进行检查。

### 严格的密码检查原则

为了防止用户密码被攻击，Web 应用应积极采取密码检查功能。基本原则包括：

- 字符种类检查（如字母、数字、符号至少各一个）
- 密码位数检查（如至少 8 位以上）
- 禁止使用与用户 ID 相同的密码
- 禁止使用密码字典中的词汇作为密码

Twitter 就采用了基于密码字典的密码可用性检查。例如，当用户尝试将密码设置为 "password" 时，系统会显示 "密码过于简单" 的错误信息，并阻止用户继续操作。

虽然这种检查可能显得过于严格，但它有效地避免了用户使用过于简单的密码。

### 针对暴力破解攻击的对策

#### 初步认识账号锁定

针对在线暴力破解攻击，账号锁定是一种有效的对抗方式。常见的实现方法如下：

- 记录每个用户 ID 的密码连续错误次数
- 如果密码错误次数超过一定上限，则锁定该账号；被锁定的账号不能再次登录
- 账号被锁定后，通过邮件等方式通知用户和系统管理员
- 用户正常登录后，清除之前的密码错误计数器

通常建议允许用户输入最多 10 次错误密码后再锁定账号，以减少误锁的情况。被锁定的账号可以在 30 分钟后自动解锁，或由管理员验证后手动解锁。

#### 暴力破解攻击的检测和对策

目前存在多种暴力破解攻击变种，包括：

- **字典攻击**：仅尝试使用频率较高的密码进行破解
- **Joe 账号检索**：尝试用户名和密码相同的账号
- **逆向暴力破解**：固定密码，轮换不同的用户 ID 进行尝试

针对这些攻击，可以采取以下措施：

- **严格检查密码**：根据密码字典检查用户输入的密码，拒绝常见密码
- **隐藏登录 ID**：使用电子邮件等非公开信息作为登录 ID
- **监视登录失败率**：定期检测登录失败率，及时发现并处理异常情况

### 密码保存方法

为了防止密码泄露导致的安全问题，需要对密码进行加密保护。常用的密码保护方法包括加密和信息摘要（Message Digest）。

#### 利用加密方式进行密码保护及其注意事项

加密过程中需要注意的问题包括：

- 选择安全的加密算法
- 如何生成和管理密钥
- 加密算法退化后的再次加密

由于密钥管理困难，现实中很少采用可逆加密方式保护密码，更多采用信息摘要的方式。

> **专栏：数据库加密和密码保护**
>
> 市场上有一些产品能够对整个数据库进行加密，称为透明数据加密（TDE）。尽管 TDE 使用简单，但并不适合用于密码保护，因为它无法防御 SQL 注入等攻击。