of transition from state 0′
𝑥 to 0 is 1 as expected.
Figure 8: State machine of BSM. The value on each arrow
indicates the probability of a state transition. From state 0′
𝑜
and 0′
𝑏 to state 0 should have four arrows. We only draw one
arrow here to simplify the expression.
Based on the state machine in Fig. 8, we have the following
equations:⎧⎪⎪⎪⎪⎪⎨⎪⎪⎪⎪⎪⎩
𝑜
= (1 − 𝛼 − 𝛽)𝑝1
= 𝛽𝑝1
𝛼𝑝0 = (1 − 𝛼 − 𝛽)𝑝1 + 𝛽𝑝1 + (1 − 𝛼)𝑝2
𝑝0′
𝑝0′
∑︀+∞
𝛼𝑝𝑘 = (1 − 𝛼)𝑝𝑘+1, when 𝑘 (cid:62) 2
𝑏
𝑘=0 𝑝𝑘 + 𝑝0′
𝑜
+ 𝑝0′
𝑏
= 1.
We could further derive the probability of each state:
𝑝0 =
𝑝0′
𝑜
=
𝑝0′
𝑏
=
𝑝𝑘 =
1 − 2𝛼
2𝛼3 − 4𝛼2 + 1
(1 − 𝛼 − 𝛽)(𝛼 − 2𝛼2)
;
2𝛼3 − 4𝛼2 + 1
;
𝛽(𝛼 − 2𝛼2)
2𝛼3 − 4𝛼2 + 1
;
𝛼 − 2𝛼2
2𝛼3 − 4𝛼2 + 1
(
𝛼
1 − 𝛼
)𝑘−1, when 𝑘 (cid:62) 1.
Reward. We analyze the rewards in all possible events
(miners finding a block). We focus on the differences com-
paring with [9] (i.e., “0-lead” racing in event b, c, and d in
[9]), and briefly describe other events. Details of other events
could refer to [9]. The rewards here represent the system
rewards. Bribes will be discussed later.
(a) Any state but two branches of length 1, the attacker
finds a block. The attacker withholds the block to increase
the lead. The reward will be determined later.
(b) Was two branches of length 1, the attacker finds a
block. We split it into two events as depicted in Fig. 9-a and
9-b: (b-1) the two branches were from the attacker and other
miners; and (b-2) the two branches were from the attacker
and target. For both cases, when the attacker publishes her
branch, she can get 2 rewards.
(c) Was two branches of length 1, others/target finds a
block on attacker’s branch. We split it into three events as
depicted in Fig. 9-c, 9-d, and 9-e: (c-1) forked by the attacker
and other miners, and other miners find a block on attacker’s
branch; (c-2) forked by the attacker and other miners, and
the target finds a block on attacker’s branch; and (c-3) forked
by the attacker and target, and other miners find a block on
attacker’s branch. Notice that the target will not extend the
attacker’s branch when the fork is caused by himself. The
attacker will always get 1 reward in all cases. Other miners
will get 1 reward in event (c-1) and (c-3), and the target will
get 1 reward in event (c-2).
(d) Was two branches of length 1, others/target finds a
block on other’s/target’s branch. We split it into four events
as depicted in Fig. 9-f, 9-g, 9-h, and 9-i. The attacker can
cause a fork with the target or others. The finder of the
next block could be either the target or others. For all cases,
 0-lead  racing, forked by a and b 0-lead  racing, forked by a and o(1 γ)(1 α βb)γ(1 α βb)αβb1:2:3:(1 γ)(1 α βb)γ(1 α βb)αβb1:2:3:4:1 αα  α 1 α 1 α α α βb 1 α βb  4/5:0'o0'b01230'o0'b1 α Figure 9: Possible events after “0-lead” racing in BSM. Event b: 𝑎’s branch is extended by 𝑎. Event c: 𝑎’s branch is extended by
𝑜 or 𝑏. Event d: 𝑜’s or 𝑏’s branch is extended by 𝑜 or 𝑏.
the attacker cannot get any reward since her branch is not
extended and will not be selected as the main chain. Other
miners will get 2 rewards in event (d-1) and 1 in (d-2) and
(d-3). The target will get 2 in event (d-4) and 1 in (d-2) and
(d-3).
(e) No private branch, others/target finds a block. The
finder will publish the block and get 1 reward.
(f ) Lead was 1, others/target finds a block. The attacker
publishes her private branch to cause a fork. The reward will
be determined later.
(g) Lead was 2, others/target finds a block. The attacker
publishes her private branch to get 2 rewards.
(h) Lead was more than 2, others/target finds a block.
The attacker publishes one block to get 1 reward since the
attacker’s branch will be selected as the main chain eventually.
We first derive the attacker’s reward when the target
chooses to accept the bribes. She can be rewarded in event
(b), (c), (g), and (h). The attacker’s system reward 𝑅𝑎 is
𝑅𝑎 = (𝑝0′
𝑜
+𝑝0′
𝑏
)·𝛼·2 + 𝑝0′
𝑜
·(𝛾(1−𝛼−𝛽𝑏)+𝛽𝑏)
·𝛾(1−𝛼−𝛽𝑏) + 𝑝2·(1−𝛼)·2 +
+ 𝑝0′
𝑏
𝑝𝑖·(1−𝛼),
(9)
+∞∑︁
𝑖=3
which is an increasing function with 𝛾 (i.e., bribing more
targets will bring the attacker more reward).
When considering the bribes (a fraction 𝜀 of the total
system reward), The attacker’s reward 𝑅𝐵
𝑎 becomes:
𝑎 = (1 − 𝜀)𝑅𝑎,
𝑅𝐵
which is a decreasing function with 𝜀.
(10)
For the reward of the target pool, since he will help the
attacker to extend the branch, event (d-2) will not happen.
The target can get a system reward in (c-2), (d-3), (d-4), and
(e). Considering the bribes, the total reward 𝑅𝐵
𝑏 is
𝑅𝐵
𝑏 = 𝑝0′
𝑜
·𝛽𝑏 +𝑝0′
𝑏
·𝛾(1−𝛼−𝛽𝑏)+𝑝0′
𝑏
·𝛽𝑏·2+𝑝0·𝛽𝑏 +𝜀·𝑅𝑎.
(11)
Similarly, we could derive the reward of other miners 𝑅𝐵
𝑜
from event (c-1), (c-3), (d-1), (d-3), and (e):
𝑅𝐵
𝑜 = (𝑝0′
+ 𝑝0′
𝑏
𝑜
)·𝛾(1−𝛼−𝛽𝑏)+𝑝0′
+𝑝0′
·(1−𝛾)(1−𝛼−𝛽𝑏)+ 𝑝0·(1−𝛼−𝛽𝑏).
𝑜
𝑏
·(1−𝛾)(1−𝛼−𝛽𝑏)·2
(12)
Now we analyze the reward of the target when not choosing
to accept bribes. Event (c-2) will not happen since the target
will not help to extend the attacker’s branch. The target pool
can be rewarded in (d-2), (d-3), (d-4), and (e). The reward
𝑅𝐵′
is
𝑏
𝑅𝐵′
𝑏 = 𝑝0′
·𝛽𝑏 +𝑝0′
𝑏
·𝛾(1−𝛼−𝛽𝑏)+𝑝0′
𝑏
·𝛽𝑏·2+𝑝0·𝛽𝑏.
(13)
𝑜
The reward of other miners 𝑅𝐵′
𝑜
(d-1), (d-2), (d-3), and (e) is:
from event (c-1), (c-3),
𝑅𝐵′
𝑜 = (𝑝0′
+ 𝑝0′
𝑜
𝑜
+𝑝0′
·𝛽𝑏 +𝑝0′
𝑏
𝑏
)·𝛾(1−𝛼−𝛽𝑏)+𝑝0′
𝑜
·(1−𝛾)(1−𝛼−𝛽𝑏)·2
·(1−𝛾)(1−𝛼−𝛽𝑏)+𝑝0·(1−𝛼−𝛽𝑏).
(14)
The attacker can be rewarded in event (b), (c-1), (c-3),
(g), and (h). The reward is
𝑅𝐵′
𝑎 = (𝑝0′
𝑜
+ 𝑝0′
𝑏
) · 𝛼 · 2 + 𝑝0′
𝑜
· 𝛾(1 − 𝛼 − 𝛽𝑏)
·𝛾(1−𝛼−𝛽𝑏)+𝑝2·(1−𝛼)·2+
+ 𝑝0′
𝑏
𝑝𝑖·(1−𝛼).
(15)
+∞∑︁
𝑖=3
Theorem 6.1. When launching BSM, the target can al-
ways get a higher reward when accepting the bribes at 0′
𝑜
state. The attacker can get a higher reward than that in
selfish mining when she pays proper bribes.
𝑏
(cid:62) 𝑅𝐵′
Proof. Comparing Equation (11) with Equation (13), we
since 0 (cid:54) 𝜀 (cid:54) 1 and 𝑅𝑎 > 0. When
can obtain 𝑅𝐵
𝑏
𝑏 > 𝑅𝐵′
the attacker adopts 𝜀 > 0, the target ensures 𝑅𝐵
𝑏 .
Therefore, extending the attacker’s private branch is always
the optimal strategy for targets at 0′
𝑜 state.
The rewards in selfish mining are the same as the rewards
in BSM when the target chooses to deny the bribes. Therefore,
𝑎 > 𝑅𝐵′
to get a higher reward, the attacker must ensure 𝑅𝐵
𝑎 .
Referring to Equation (10) and Equation (15), we can derive
𝑎 > 𝑅𝐵′
𝑅𝐵
𝑎 ⇒ 0 < 𝜀 <
𝑝0′
𝑜
· 𝛽𝑏
𝑝0′
· 𝛽𝑏 + 𝑅𝐵′
𝑜
𝑎
.
(16)
The upper bound of the attacker’s reward is 𝑅𝑎 in Equation
(cid:3)
(9) when 𝜀 = 0.
(a) Event b-1(b) Event b-2(c) Event c-1(d) Event c-2(e) Event c-3(f) Event d-1(g) Event d-2(h) Event d-3(i) Event d-4other miners  (o s) branchattacker s (a s) branchpublic chaintarget s (b s) branch(a) RER for a target
when accepting bribes
(𝑅𝐸𝑅𝐵,𝐵′
).
𝑏
(b) BSM vs
mining
Solid
𝑅𝐸𝑅𝐵,𝐻
= 0.
line
𝑎
(𝑅𝐸𝑅𝐵,𝐻
honest
).
indicates
𝑎
(c) BSM vs
mining
Solid
𝑅𝐸𝑅𝐵,𝑆
𝑎 = 0.
line
(𝑅𝐸𝑅𝐵,𝑆
selfish
).
indicates
𝑎
Figure 10: Dominant strategies for a target (a) and an at-
tacker (b) and (c).
(a) Target’s RER when 𝛽𝑏 = 0.1. (b) Target’s RER when 𝛽𝑏 = 0.3.
Quantitative analysis and simulation. Previous ap-
proaches have pointed out the total block generation rate
decreases due to selfish mining (i.e., 𝑅𝐵
𝑜 < 1)
[9, 22, 38]. Therefore, we first normalize the reward of entity
𝑏 + 𝑅𝐵
𝑎 + 𝑅𝐵
𝑥 (
𝑅𝐵
𝑥
𝑎 +𝑅𝐵
𝑏 +𝑅𝐵
𝑜
𝑅𝐵
and
𝑅𝐵′
𝑎 +𝑅𝐵′
𝑏 +𝑅𝐵′
𝑅𝐵′
𝑥
𝑜
) and then use the RER
in Equation (4) to evaluate BSM (strategies can be selfish
mining 𝑆, accepting bribes in BSM 𝐵, denying bribes in BSM
𝐵′, and honest mining 𝐻).
Dominant strategies. First, we consider the target’s reward
under different strategies (accepting or denying bribes) in
BSM. We consider 𝛽𝑏 = 0.1 and set 𝜀 = 0.02, which is
0.02 × 12.5 = 0.25 BTC per block (about 2500 USD/block
in Aug. 2019 [29]). The rewarding difference 𝑅𝐸𝑅𝐵,𝐵′
(i.e.
extra reward when accepting bribes comparing with denying)
in terms of 𝛼 and 𝛾 is depicted in Fig. 10-a. As expected, the
dominant strategy for a target is always to accept the bribes,