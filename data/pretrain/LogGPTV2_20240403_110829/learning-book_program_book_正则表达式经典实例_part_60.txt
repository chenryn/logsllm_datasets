## Page 326
检查一个文本字符串中是否只包含了一个十进制正整数：
\A[0-9]+\2
正则选项：无
正则流派：.NET、Java、PCRE、Perl、Python、Ruby
$+[6-0]
正则选项：无
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python
在一大段文本中查找独立存在的任意十进制正整数：
(?。
310第6章
www.TopSage.com
---
## Page 327
提示
我们更倾向于使用明确的范围，而不是简写字符类（\d)。在.NET
：和Perl中，(ld>会匹配任意文字中的任意数字，但是只会匹配位
于ASCII字符表中的10个数字。如果你知道在目标文本中不会包含任何
非ASCII数字的话，那么也可以选择使用而不是，这样可以
少敲几下键盘。
如果你不知道在目标文本中是否会包含ASCII字符表之外的数字，那么
就需要认真考虑你想要拿正则匹配来做什么以及用户的期望是什么，以
此来决定应当使用（ld还是和，因为它们的含义总是不会变的。
不幸的是，JavaScript并不支持这两个定位符，因此你需要在JavaScript中采用，
同时要保证你没有使用会让脱字符和美元符号匹配换行处的标志/m。在Ruby中，脱字
符和美元符号总是会匹配换行处，从而无法使用它们来可靠地强制正则表达式匹配整
个字符串。
的解决方案。当你把它们放到一个匹配数字的正则记号之前或之后的时候，单词边界
会确保在匹配到的数字之前或之后没有其他单词字符。例如，（4>会匹配到A4中的4。
（4\b>同样会匹配到其中的4，这是因为在4之后并没有任何单词字符。和则
都不会在A4中匹配到任何内容，因为在A和4两个单词字符之间b）会匹配失败。
在正则表达式中，单词字符包括字母、数字和下划线。
如果在你的正则表达式中要把正负号或空格这些非单词字符也包括进来，那么就必须
小心处理单词边界的位置。要想匹配到+4，但是却不能匹配+4B，那么可以使用+4\b>，
但是不能用。（\b\+4\b>会匹配到3+4中的+4，这是因为3是一个单词字符，
而+不是单词字符。
是多余的。当这个正则
式匹配成功的时候，第一个总是位于一个+和4之间，从而永远也不会排除掉任
何情况。只有当正号是可选的时候，第一个b>才是重要的。+?\b4\b不会匹配在A4
数字311
www.TopSage.com
---
## Page 328
中的4，而+?4\b>则会匹配到。
单词边界并不总是正确的解答。下面我们以自标文本S123，456.78为例。如果你使用正
则表达式在这个字符串之上重复进行匹配，它会匹配到123、456和78。
美元符号、逗号和点号都不是单词字符，所以单词边界会匹配一个数字和任意这3个
字符之间的位置。有时候这可能是你想要的结果，而有时候则不然。
如果你只是想找到两边是空白或者是字符事开始和结束的整数，那么就需要使用环视，
而不能只使用单词边界。?=$s)会匹配字符事的结尾或者在一个空白字符（空白字
符包括换行符）之前的位置。?替换为一个字符集，用来匹配你想要在数字之前或之后出现
的任意字符集合。要了解环视的工作原理，请参考实例2.16。
JavaScript和Ruby1.8中不支持逆序环视。你也可以不使用逆序环视，而使用一个普通
分组来检查数字是否出现在字符串的开头，或者在它之前是否是空白。这样做的缺点
是如果数字不是从字符事开头开始，那么空白字符会被包含在总的正则匹配中。对于
这个问题的一个简单解决方案是把正则式中用来匹配数字的那个部分放到-一个捕获分
组中。在前面“解决方案”小节中的第5个正则表达式在第一个捕获分组中会捕获空
白字符，而在第二个捕获分组中包含的是匹配到的整数。
参见
实例2.3和实例2.12。
6.2十六进制数字
问题描述
你想要在一大段文本中查找各种十六进制的整数，或者是检查一个字符串变量中保存
的是不是一个十六进制整数。
解决方案
在一大段文本中查找任意十六进制数：
\b[0-9A-F]+\b
正则选项：不区分大小写
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
\b[0-9A-Fa-f]+\b
正则选项：无
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
检查一个文本字符串中保存的是否只是一个十六进制数：
312第6章
www.TopSage.com
---
## Page 329
\A[0-9A-F]+\Z
正则选项：不区分大小写
正则流派：.NET、Java、PCRE、Perl、Python、Ruby
[0-9A-F]+$
正则选项：不区分大小写
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python
查找一个带0x前缀的十六进制数：
\b0x[0-9A-F]+\b
正则选项：不区分大小写
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
查找一个带&H前缀的十六进制数：
&H[0-9A-F]+\b
正则选项：不区分大小写
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
查找一个带H后缀的十六进制数：
\b[0-9A-F]+H\b
正则选项：不区分大小写
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
查找一个十六进制字节值（bytevalue），或者一个8bit数：
\b[0-9A-F]{2}\b
正则选项：不区分大小写
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
查找一个十六进制字值（wordvalue），或者一个16bit数：
\b[0-9A-F]{4}\b
正则选项：不区分大小写
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
查找一个十六进制双字值（doublewordvalue），或者一个32bit数：
\b[0-9A-F]{8}\b
正则选项：不区分大小写
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
查找一个十六进制四字值（quadwordvalue），或者一个64bit数：
\b[0-9A-F]{16}\b
正则选项：不区分大小写
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
查找一个由十六进制字节组成的字符串（即偶数个十六进制数字组成的字符串）：
\b(?:[0-9A-F](2})+\b
正则选项：不区分大小写
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
数字
313
www.TopSage.com
---
## Page 330
讨论
使用正则表达式来匹配十六进制整数的技巧与匹配十进制整数是一样的。唯一的区别
是用来匹配单个数字的字符类中现在需要包含字母A～F。你还必须要考虑这些字母应
该采用大写还是小写形式，或者是大小写均可。上面所给的正则表达式都支持大小写
均可的形式。
默认来说，正则表达式是区分大小写的。只能匹配小写形式的十六进制数
字，而只能匹配大写形式的十六进制数字。要想允许大小写均可，那么
可以使用[0-9a-fA-F]>，或者是打开正则表达式中不区分大小写的选项。实例3.4
中讲解了如何在编程语言中打开该选项。上述解答中的第-一个正则式出现了两次，
分别采用了实现大小写无关的两种不同方式。后面的正则表达式则都只列出了第二
种方式。
如集你只想要在十六进制数中充许出现大写学母，那么应该把不区分大小写的选项关
掉，就可以使用同样的正则式。要想只充许出现小写字母，那么需要关掉不区分大小
写选项，并且把A-F>都替换为会匹配偶数个数的十六进制数字。正好会
匹配2个十六进制数字。也不会产生语法错误，但是所
产生的效果则不是你想要的。额外的(+>会把量词{2)>变成占有量词。这并不会产生任
何效果，因为{2》>本来也无法重复少于两次。
其中的几种解决方案讲解了如何要求十六进制数必须包含-一个通常用来标识十六进制
数的前缀或者后缀。这些前缀或后缀被用来区分十进制数与那些恰好只包含十进制数
字的十六进制数。例如，10可以是在9和11之间的十进制数，或者是在F和11之间
的十六进制数。
大多数解决方案中都包含单词边界（参见实例2.6）。按照所给的方式使用单词边界可
以从一大段文字中找到其中的数字。注意使用&H前缀的正则式在开始并没有使用单词
边界。这是因为&符号并不是一个单词字符。如果我们在这个正则表达式的开始放一个
单词边界，那么它就只能找到紧跟在单词字符之后的十六进制数。
如果你想要检查你的字符串中保存的是否刚好是一个十六进制数，那么可以简单地在
你的正则式两边放上字符串开始和字符串结束定位符。你最好的选择是使用和
Z>，因为它们的含义总会保持不变。在JavaScript中，需要使用，并且要确
保没有使用会让脱字符和美元符号匹配换行处的标志/m。在Ruby中，脱字符和美元符
号总是会匹配换行处，所以你无法可靠地使用它们来强制一个正则表达式匹配整个字
符串。
314第6章
www.TopSage.com
---
## Page 331
参见
实例2.3和实例2.12。
6.3二进制数
问题描述
你想要在一大段文本中查找其中的二进制数，或者是检查一个字符串变量中保存的是
否是一个二进制数。
解决方案
在一大段文本中查找二进制数：
\b[01]+\b
正则选项：无
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
检查一个文本字符串中是否只保存了-个二进制数：
\A[01] +\2
正则选项：无
正则流派：.NET、Java、PCRE、Perl、Python、Ruby
~[01]+$
正则选项：无
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python
查找带后缀B的二进制数：
\b[01]+B\b
正则选项：不区分大小写
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
查找一个二进制字节值（bytevalue）或是一个8bit数：
\b[01]{8}\b