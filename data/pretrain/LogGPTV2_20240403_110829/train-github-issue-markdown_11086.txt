Error message says:
    error TS2345: Argument of type 'Foo' is not assignable to parameter of type 'Foo'.
Given the exact same exported type, Typescript isn't able to deal with enums
from multiple source locations. Here's an example with a Core project and a
Bar project:
    Core/
      foo.ts
      convertFooToString.ts
      dist/
        foo.js
        foo.d.ts
        convertFooToString.ts
        convertFooToString.d.ts
    Bar/
      SomeComponent.tsx
      dist/
        SomeComponent.js
        SomeComponent.d.ts
SomeComponent.tsx:
    // some other imports
    import {convertFooToString}
    export default class SomeComponent extends React.Component {
      render() {
        // Note, this.props.foo IS a Foo type
        return ({convertFooToString(this.props.foo)});
      }
    }
foo.ts:
    enum Foo {
      Yay = 0,
      Nay = 1
    };
    export default Foo;
convertFooToString:
    export function convertFooToString(foo: Foo): string {
        switch (foo) {
            case Foo.Yay:
                return "YAYAYAYAYA";
            default:
                return "NANANANANA";
        }
    }