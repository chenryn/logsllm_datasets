title:ElasticSwitch: practical work-conserving bandwidth guarantees for
cloud computing
author:Lucian Popa and
Praveen Yalagandula and
Sujata Banerjee and
Jeffrey C. Mogul and
Yoshio Turner and
Jose Renato Santos
ElasticSwitch: Practical Work-Conserving Bandwidth
Guarantees for Cloud Computing
Lucian Popa
Praveen Yalagandula∗ Sujata Banerjee
Jose Renato Santos
Yoshio Turner
Jeffrey C. Mogul†
HP Labs, Palo Alto, CA
ABSTRACT
While cloud computing providers offer guaranteed allocations for
resources such as CPU and memory, they do not offer any guar-
antees for network resources. The lack of network guarantees pre-
vents tenants from predicting lower bounds on the performance of
their applications. The research community has recognized this
limitation but, unfortunately, prior solutions have signiﬁcant lim-
itations: either they are inefﬁcient, because they are not work-
conserving, or they are impractical, because they require expensive
switch support or congestion-free network cores.
In this paper, we propose ElasticSwitch, an efﬁcient and practi-
cal approach for providing bandwidth guarantees. ElasticSwitch is
efﬁcient because it utilizes the spare bandwidth from unreserved ca-
pacity or underutilized reservations. ElasticSwitch is practical be-
cause it can be fully implemented in hypervisors, without requiring
a speciﬁc topology or any support from switches. Because hyper-
visors operate mostly independently, there is no need for complex
coordination between them or with a central controller. Our exper-
iments, with a prototype implementation on a 100-server testbed,
demonstrate that ElasticSwitch provides bandwidth guarantees and
is work-conserving, even in challenging situations.
Categories and Subject Descriptors:
Communication Networks]: General
Keywords: Cloud Computing, Bandwidth Guarantees, Work-
Conserving
C.2.0 [Computer-
1.
INTRODUCTION
Today, cloud networks are shared between tenants in a best-effort
manner. For this reason, current cloud providers cannot offer any
guarantees on the network bandwidth that each virtual machine
(VM) can use. The lack of bandwidth guarantees prevents tenants
from predicting lower bounds on the performance of running their
applications in the cloud, and from bounding the cost of running
these applications, given the current pricing models [3]. Further,
the lack of bandwidth guarantees impedes the transfer of enter-
prise applications to public clouds; many enterprise applications
require predictable performance guarantees, but cloud network per-
formance has been shown to vary [4] and congestion does occur in
datacenters [6, 24]. For these reasons, some cloud customers may
be willing to pay extra for bandwidth guarantees in the cloud.
∗
†
Currently at Avi Networks
Currently at Google
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are not
made or distributed for proﬁt or commercial advantage and that copies bear
this notice and the full citation on the ﬁrst page. Copyrights for components
of this work owned by others than ACM or the author must be honored. To
copy otherwise, or republish, to post on servers or to redistribute to lists,
requires prior speciﬁc permission and/or a fee.
SIGCOMM’13, August 12–16, 2013, Hong Kong, China.
Copyright 2013 ACM 978-1-4503-2056-6/13/08 ...$15.00.
Bandwidth guarantees can be achieved through static reserva-
tions [4, 11, 21]. In this way, cloud providers can offer tenants an
experience similar to their own enterprise facilities, at a lower cost.
However, static reservations lead to inefﬁcient utilization of the net-
work capacity, as the share of a tenant A cannot be used by another
tenant B when A is not fully utilizing it, i.e., static reservations are
not work-conserving. Considering that the trafﬁc in datacenters is
bursty in nature and that the average utilization is low [6, 24], by
multiplexing networking resources in a work-conserving manner,
cloud providers can offer tenants a signiﬁcantly better experience
than static reservations, since tenant jobs would complete faster. At
the same time, providers would improve the utilization of their own
infrastructure.
Thus, we aim to design a cloud datacenter network that:
• Provides Minimum Bandwidth Guarantees: Each VM is
guaranteed a minimum absolute bandwidth for sending/re-
ceiving trafﬁc.
• Is Work Conserving: If a link L is the bottleneck link for a
• Is Practical: The solution should be implementable and
deployable today (i.e., work with commodity unmodiﬁed
switches and existing network topologies) and scale to large
cloud datacenters.
given ﬂow, then L should be fully utilized.
Existing proposals for sharing cloud networks, e.g., [4,11–13,18,
20, 22], do not achieve all of the above goals simultaneously. For
example, Oktopus [4] and SecondNet [11] are not work conserving
and FairCloud [18] requires expensive support from switches, not
available in today’s commodity hardware (see §2 and §8 for more
details on related work).
In this paper, we propose ElasticSwitch, a solution that achieves
our goals. ElasticSwitch is fully implementable inside hypervisors,
and does not require any support from switches. Tenants request
minimum bandwidth guarantees by using the hose model [4, 9, 12,
18, 20] shown in Fig. 1. The hose model offers the abstraction that
all VMs of one tenant appear to be connected to a single virtual
switch through dedicated links. ElasticSwitch could also be used
with other abstractions based on the hose model, such as the TAG
model [14] or a hierarchical hose model, similar to one in [4] (§9).
ElasticSwitch decouples its solutions for providing bandwidth
guarantees and for achieving work-conservation into two layers,
which both run in each hypervisor. The higher layer, called guar-
antee partitioning (GP), ensures that the hose-model guarantee for
each VM is respected, regardless of the network communication
pattern. The guarantee partitioning layer divides the hose-model
bandwidth guarantee of each VM X into pairwise VM-to-VM
guarantees between X and the other VMs with which X commu-
nicates. The lower layer, rate allocation (RA), achieves work-
conservation by dynamically increasing rates beyond the guaran-
tees allocated by guarantee partitioning, when there is no conges-
tion. For this purpose, rate allocation employs a TCP-like mecha-
nism to utilize all available bandwidth between pairs of VMs. The
351VS2
BZ
Z
VS1
BB
B
BX BY
X
Y
BA
A
BQ
Q
BP
P
BC
C
L5
L2
L1
L6
L3
L4
X
Y
Z
P
Q
A
B
C
Hose(cid:3)Model
Physical(cid:3)Layout
Figure 1: Example hose-model bandwidth guarantees for two
tenants (Blue and Red) and the mapping for their virtual net-
works to a physical network. In the hose model, each VM V
has a dedicated link of capacity BV to a non-blocking virtual
switch.
1000
)
s
p
b
M
(
t
u
p
h
g
u
o
r
h
t
P
C
T
900
800
700
600
500
400
300
200
100
0
0
ElasticSwitch
No Protection
Static Reservation
Ideal
200
800
UDP background traffic (Mbps)
400
600
1000
Figure 2: Bandwidth of one VM-to-VM TCP ﬂow guaranteed
450Mbps, with varying UDP background rates
rate allocation layer dynamically borrows unallocated capacity, or
capacity guaranteed to other VMs but not currently being used.
ElasticSwitch is a distributed solution, where hypervisors oper-
ate without the use of any complex coordination in addition to the
normal ﬂow of trafﬁc. This is unlike prior hypervisor-based pro-
posals for providing bandwidth guarantees, such as Oktopus [4]
and SecondNet [11], which require frequent communication with a
central controller and thus have limited scalability.
Fig. 2 shows an example of how ElasticSwitch gives minimum-
bandwidth guarantees, unlike a “no protection” system, but is
work-conserving, unlike a static-reservation system.
In this ex-
ample, one TCP ﬂow, with a guarantee of 450Mbps, competes
with UDP background trafﬁc at various rates, sharing a 1Gbps
link. When there is spare capacity, ElasticSwitch yields lower TCP
throughput than the no-protection system; this gap is a function
of parameters we can set to trade off between accurate bandwidth
guarantees and full utilization of spare capacity (§7). The ideal
work-conserving behavior is also plotted.
Contributions: In this paper, we describe:
1. A hypervisor-based framework that enables work-conserving
bandwidth guarantees without switch modiﬁcations (§3). We
construct this framework in two layers: a guarantee par-
titioning layer providing guarantees, and a rate allocation
layer that provides work conservation, by grabbing addi-
tional bandwidth when there is no congestion.
2. Algorithms for guarantee partitioning (§4) and rate alloca-
tion (§5), based on hypervisor-to-hypervisor communication,
which ensure that each VM’s hose-model guarantee is re-
spected, regardless of the other VMs in the network, and that
the network is efﬁciently utilized.
3. A prototype implementation of ElasticSwitch (§6), and an
evaluation in a 100-server datacenter network testbed (§7).
2. PROBLEM AND BACKGROUND
Our goal is to design a cloud datacenter network that provides
minimum bandwidth guarantees for VMs communicating inside
the cloud, in an efﬁcient, scalable, and easily deployable way.
Bandwidth guarantees: Infrastructure-as-a-Service (IaaS) provi-
ders (either public or private) need to ensure performance isola-
tion among all tenants sharing the underlying physical infrastruc-
ture. However, most academic and industrial work on virtualiza-
tion has focused on compute and storage, and has only recently
addressed network performance virtualization. Even today, many
public cloud providers, such as Amazon EC2, offer no network
guarantees, and thus tenants experience highly variable network
bandwidth (by a factor of ﬁve in some cases [4]).
To model bandwidth guarantees, we focus on the Hose model, a
well-understood model which mimics practical switched networks
[4,9,12,18,20]. For example, in Fig. 1 the Blue tenant sees a virtual
switch VS1, to which each of its VMs is connected via a dedicated
link with a speciﬁed “hose” bandwidth. For simplicity, we use sym-
metric hoses, with equal ingress and egress bandwidths. However,
it is easy to extend ElasticSwitch to use asymmetric hoses.
Given a tenant and the hose model for its virtual network, cloud
datacenters need an admission control mechanism to determine if
that tenant’s network can be deployed on the physical network
without violating the guarantees for the existing tenants. This prob-
lem has been studied in the past. For example, Oktopus [4] deter-
mines the placement of VMs in the physical network such that the
physical link capacities (L1-L6 in the example ﬁgure) can sup-
port the hose model guarantees for all tenants. In the example of
Fig. 1, assuming the hose-model bandwidths for both tenants are
500Mbps, and all link capacities are 1Gbps, the physical layout
shown in the ﬁgure could potentially satisfy the guarantees.
However, just placing VMs without any enforcement of band-
width limits does not necessarily satisfy the hose model guarantees.
For example, in Fig. 1, Red VMs X and Y can send trafﬁc to VM
Q at 1Gbps, interfering with the trafﬁc from Blue VM B to VM A.
The main issue addressed by this paper is the enforcement of
bandwidth guarantees under hose models. We assume that the ad-
mission control and VM placement are existing components in the
cloud computing infrastructure.
Efﬁciency: While it would be possible to enforce bandwidth guar-
antees through strict static provisioning of each link among the ten-
ants, it would be inefﬁcient in terms of network utilization. Con-
sider the example in Fig. 1. Suppose both tenants are running
MapReduce jobs. When Red VM Q is not using any bandwidth
(e.g., the Red tenant is in the Map phase), Blue VM A could blast
at 1Gbps and thus potentially shorten its shufﬂe phase by half. So in
this example, and in general, a work-conserving enforcement pol-
icy could substantially improve the performance of a large fraction
of applications. Since network link bandwidths are often signiﬁ-
cantly larger than guarantees (e.g., 10Gbps vs 100Mbps), and since
352Related Work
Oktopus [4]
SecondNet [11]
Gatekeeper [20]
EyeQ [12]
Seawall [22], NetShare [13]
FairCloud [18] (PS-L/N)
FairCloud [18] (PS-P)
ElasticSwitch
Table 1: Summary of previous approaches and comparison to ElasticSwitch
Switch Requirements
None
Work-Conserving
No
Control Model
Centralized
BW Guarantee Model
Hose, Virtual Oversub-
scribed Cluster
Hose, VM-to-VM
Hose
No Guarantees (source/
tenant fair sharing)
Hose
Hose
No
Yes
Yes
Yes
Yes
Centralized
Distributed
Distributed