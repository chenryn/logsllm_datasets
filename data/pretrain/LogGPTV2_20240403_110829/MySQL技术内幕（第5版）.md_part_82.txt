来更新在线成员名录。如果不想以手动方式执行这条命令，那么可以设置一个任务，让它定时
html安装到Web服务器的文档树里：
容的交互级别。此外，Web 浏览器的显示能力一般也优于终端窗口，因此你还可以创建出更
包含该搜索结果的网页。虽然这种功能很简单，但是它却大大提升了你能提供的访问数据月
表格形式显示数据的脚本，它能很容易地把每个列标题转换为一个链接，通过链接，可以对
器发出的请求时，你便可以向用户展示新鲜有趣的数据库交互操作了。例如，你编写了一个
安装在/usr/local/bin里，美史联盟在Web服务器文档树的/usr/local/apache/
34
我们此前开发的 DBI 脚本都是用于命令行环境的。
口一个分数浏览器，用于查看任意一次考试或测验的分数。这不仅为成绩考评项目的考试
口一个通用性的表浏览器，适用于 sampdb 数据库。这个脚本与我们计划中的数据库任务
在本节中，我们将创建下面几个基于Web 的脚本。
运用这个cron作业的用户必须拥有在文档树目录里写入文件的权限。
0 4***/usr/local/bin/gen_dir.pl
无论何时更新数据库里的member 表，你都可以再次运行这条命令，并使用这个输出结果
%./gen_dir.pl html > directory.html
为把成员名录输出为 HTML格式，可以执行下面这条命令,并把结果输出文件directory，
加准确地在考卷上标记出字母分数。
分数核对工作提供了方便，而且也能为我们绘制考试分数曲线提供帮助，让我们可以更
查看表内容的方式。
无任何关系。它只是用于演示几个Web程序设计中常用的概念，并且会提供一种便捷的
>/usr/local/apache/htdocs/ushl/directory.html
"entry"
"init"
"cleanup"
"entry"
"init'
"cleanup"
"entry"
"init"
三>
用Per DBI编写MySQL程序
V
=>
=> undef,
\&html_cleanup
\&rtf_format_entry,
\&rtf_init,
undef
\&html_format_entry,
\&rtf_cleanup
#HTML格式的处理函数
#RTF格式的处理函数
#不需要初始化
，可以使用cron来完成此操作。假设gen_dir.pl脚
，其实，DBI也可以用在其他环境里，
如
库
---
## Page 355
myscript.pl的所有者设置为www，并只允许该用户执行和读取：
该用户访问。例如，如果运行Apache 的用户的名字为www，那么下面两条命令将把脚本
如同命令行脚本一样。此外，最好能够把脚本的所有者设置为运行Apache的用户，并且只允许
录下。在Unix系统上，脚本的第一行必须以#！开头，并且需要将其文件模式设置为可执行，
从而发现脚本可能存在的漏洞。
防止客户查看
果真是这样，
脚本和程序）和conf（用于存放配置文件）。在你的系统上，这些子目录可能会稍有不同。如
目录是htdocs（用于存放 HTML文档树）、cgi-bin（用于存放将由 Web服务器调用的可执行
微调整一下，或许就能使用另一种Web服务器。
8.4.1配置Apache服务器来处理CGI脚本
（对于Windows系统）下面。对于我们的目标而言，在Apache的顶层目录下面，最为重要的子
器
/perlapi/web目录里找到。
2000)，也介绍了CGIpm。
站上搜索“CGI”，阅读在线文档。
Guide to Programming with CGl.pm》(John Weiley,1998)，或者在 http: //cpan.perl.org 网
绍的CGI.pm模块的功能并不全。如果想进一步了解此模块，请参考LincolnStein编写的《Official
这些方法有助于降低HTML文档格式错误的概率。
CGLpm还提供了多种用于生成HTML输出的便捷方法，与手工编写原始的HTML标记相比，
常见内务任务所涉及的细节，如收集被Web服务器以输人形式传递给脚本的各个参数值。
CGI）协议，该协议定义了Web 服务器如何与其他程序进行通信。CGI.pm 模块负责处理一些
的方式。（更多与CGI.pm模块的获得和安装有关的信息请参考附录A。）之所以称为CGL.pm，
器。这里的指导内容是，将脚本与Apache服务器配合一起使用。不过，只要把这些指导内容稍
假设你已把Apache服务器安装在/usr/local/apache（对于Unix系统）或者C：\Apache
我的另一本专门讨论MySQL与DBI的书—
因为用它编写出来的DBI脚本，能够使用公共网关接口（CommonGatewayInterfaceprotocol，
如果想要安装
应该确供
本章的后续部分所介绍的各个基于 Web 的脚本，都可以在 sampab 发行版中的
你可能需要以 root 身份来运行这两条命令。
在编写基于Web的脚本时，除使用DBI和CGI.pm模块以外，还需要一个组件：Web服务
本章介绍的CGI.pm模块的知识，已经足以让你编写出自己的Web应用程序，不过这里介
#chmodu=rx,go-rwxmyscript.pl
#chownwwwmyscript.pl
编写这些脚本需要用到Perl语言的CGI.pm模块，它提供了一种简单的把DBI连接到Web
口一个用于把拥有共同爱好的联盟成员找出来的脚本。具体实现法为：先让用户输入一个
interests.pl脚本，另一个执行FULLTEXT搜索。）
个版本，还可以提供一种有益的参考，让我们可以对完成同一任务的不同方法进行对比。
Web的版本，那么这个成员名录便可以开放给每一位拥有Web浏览器的人。创建另外一
行版本只能被那些在安装着该脚本的机器上拥有登录账户的人执行。如果提供一个基于
节
搜索短语，然后在member表的interests列中搜索那个短语。其实，我们在前面8.3.4
（事实上，我们开发了两个基于Web的实现：第一个基于模式匹配功能，有点儿像
里编写那个的名为interests.pl的命令行脚本，即可完成此任务。但是，这个命令
看脚本的源代码。你肯定不想让恶意客户获得脚本的文本内容并对它们进行分析，
保cgi-bin 目录不在Apache的文档树里。这是一种出于安全考虑的做法，它可以
，请根据下面的提示做相应的调整。
装一个与Apache服务器一起使用的 CGI脚本，则需要把它复制到cgi-bin 目
。如果你没有把脚本安装到cgi-bin 目录里的
——《MySQL and DBI for the Web》(New Rider,
8.4使用DBI来开发Web应用程序
335
---
## Page 356
口。不过，这种函数调用接口有一个端，即一旦 CGI.pm 里的函数与 Perl 语言的内建函数发
为实现这一点，需要包含一条use 语句，并创建一个CGI对象：
和p()函数：
数的名字与相应的HTML元素是一致的。例如,想生成一个一级标题和一个段落，可以调用h1（）
以导入模块里的函数名。可以像下面这样导人那些最常用的函数：
8.4.2
置可以通过配置文件 httpd.conf（位于Apache的 conf 目录）里的 Errorlog 指令来设定。
下的logs 目录里的 error_log 文件。你的系统情况可能与我的有所不同。日志文件的存放位
定要把这个日志的存放地点找出来。在我的系统里，它是Apache 根目录/usr/local/apache
有终端，因此这些信息将被送往Apache的出错日志。这些信息有助于你对脚本进行调试，你一
显示为浏览器的一个页面。
localhost.
myscript.pl脚本：
送相应的URL。例如，Web服务器运行于本地主机，则可以使用下面这个URL来请求
/usr/bin/perl。如果需要提供一个对应于你的系统的路径，则需要修改所有的脚本。
可以简单地写成下面这个样子：
C:\Perl\bin\perl.exe，则#!行需要写成下面这个样子：
权限，那么可以要求系统管理员来帮你完成。
336
如果在编写 Perl 脚本时要用到 CGI.pm 模块，则必须在脚本的开头放上一条 use CGI 语句，
当在命令行运行DBI脚本时，警告和出错信息都将被送往你的终端。在Web 环境里，并没
用 Web 浏览器来请求脚本，会引发Web 服务器去执行它。脚本的输出结果会发回给你，并
请记得更改本章所有示例里的 URL地址，以便指向你自己的 Web 服务器主机，而非指向
在把脚本安装到cgi-bin 目录之后，要请求脚本，可以通过Web 浏览器向Web服务器发
CGI.pm还支持面向对象的编程风格，这使得你可以在不导入函数名的情况下，调用它们。
sampdb 发行版里的所有 Perl 语言脚本，都把#!行里的 Perl 路径名指定成了
在Windows系统里，不需要chown 和 chmod 命令，
这种面向对象接口要求你每次都要写出$cgi->前缀。本书使用了更为简单的函数调用接
print $cgi->p ("This is a paragraph");
print $cgi->h1 ("This is a header");
通过这个对象可以访问CGI.pm里的函数，就像调用对象的方法一样：
use CGI;
print p ("This is a paragraph");
print h1 (“This is a header");
然后，你便可以调用CGI.pm模块中的函数，生成各种HTML结构。一般情况下，那些函
use CGI qw(:standard);
http://localhost/cgi-bin/myscript.pl
#!perl
另外，在Windows系统里，
#!C:/Perl/bin/perl
CGl.pm模块简介
第8章用Perl DBI编写MySQL程序
，如果 Perl的安装路径包含在环境变量 PATH 里，那么这一行还
，但是脚本的第一行仍然应访以#！作为
---
## Page 357
服务器会自动给浏览器发一个。）默认情况下，header（）函数输出的头标记如下所示：
（这与我们编写静态 HTML页面的做法稍有不同。静态HTML页面不需要有头标记，因为Web
本生成的，那么这个头标记必不可少，其作用是让浏览器知道，紧随其后的文档属于何种类型。
文档：
8.4.2.2生成Web输出
param（）将返回它的值；否则，返回undef：
有可用参数的名字数组，可以像下面这样做：
息时涉及的各种琐事。为获得该信息，你所需要做的事情是调用param（）函数。如果想获得所
8.4.2.1检查Web输入参数
能够清楚地表明此时并没有引用Perl语言的内建函数。
问题。因为调用tr（)时，是把它当作scgi 对象的某个方法（即调用方式为$cgi->tr（）），这
函数调用接口时，必须使用Tr（)或TR（）来调用tr（）。当使用面向对象接口时，不会出现这种
与Perl语言中用于翻译的内建函数tr 出现了名字冲突。为解决此问题，在使用CGI.pm模块的
为tr（)的函数，它会生成和标记，用来围住HTML表格的行里面的单元格。此函数
生同名现象，那么你必须用一种不会产生冲突的办法来调用它。例如，CGI.pm模块里有一个名
header（）函数负责在页面内容的前面，生成一个Content-Type:头标记。如果网页是由脚
CGI,pm 模块里的很多函数都可以生成发送到客户端浏览器的输出。请看下面这段 HTML
CGI.pm 模块能为你做的一件事情是，处理所有在收集由 Web 服务器提供给脚本的输入信
printend_html （);
print
print
print
print start_html (-title =>"My Simple Page",-bgcolor => "white");
printheader();
use CGI qw(:standard);
usewarnings;
use strict;
#simple_doc.pl
#!/usr/bin/perl
下面这个脚本将使用CGI.pm输出函数来生成一份等效的文档：
Paragraph 2.
Paragraph 1.
Page Heading
My Simple Page
如果想检索某个参数的值，
my@param=param（）;
h1
P
("Page Heading");
一生成简单的HTML页面
",(defined (Smy_param）？ $my_param :"not set"),"\n";
，则需要把它的名字传递给param（）。如果该参数设置有值，则
8.4使用DBI来开发Web应用程序
337
---
## Page 358
们是靠自己生成的，因为PHP没有提供像CGI.pm模块那样的标记生成函数。
模块生成格式正确的XHTML标记。第9章里所讨论的那些脚本也会生成XHTML标记，但它
HTML和XHTML之间的几点区别。
个浏览器里却无法正确显示。XHTML的要求更为严格，有助于保证文档的规范性。下面是
注那些单个的标记，并且，最后生成的HTML也不太容易包含错误。（我说的是‘
列出你需要的参数，还可以按任意顺序来列出它们。
-name=>value。这种做法对那些可以接受许多可选参数的函数特别有用，因为你不仅可以只
元素，而end_html（）负责加入各个文档结束标记。
生成起始标记和起始标记之间的各种标记,h1()和p(）负责写入各种标题和段落
同
题
的
因
同的处理方式。也就是说，对于不太规范的页面，它们在有的浏览器里能正确显示，而在另
从混用这两种方法，把对CGI.pm函数的调用与生成文本标记的输出语句结合在一起。不过，
8
1为 CGI.pm模块本身并不能阻止你做出奇怪的事情，如在标题里放一个列表)。
用CGI.pm函数来生成输出的一个优势在于，你可以按逻辑单元来进行思考，而不用过多关
如 start_html（）调用所展示的那样，很多CGI.pm 函数都允许你指定参数，指定格式为
即不同的浏览器
XHTML与 HTML很相似，
CGI.pm可以自动生成XHTML格
CGI.pm模块还能带来更好的可移植性一
使用CGI.pm模块的输出生成函数，并不会妨碍你在需要时编写自己的原始 HTML。你可
紧随header（)调用之后的是另外一些函数调用，用于生成页面内容。start_html（）负责
本书里所有Web 脚本所生成的输出都符合XHTML规范。在本章中，
口
口
口
普通的HTML，那么只需升级CGI.pm，你的脚本便能输出XMTML格式的文档了。
Content-Type: text/html
Some text
个元素的等效表示如下所示：
带值的属性，
在XHTML里，属性必须要有值，
Some text
元的构造在HTML里是合法的：
在HTML里，属性值可以不用引号引起来，甚至可以不提供。例如，下面这个表数据单
写，因此只有是被允许的。
是一样的。在XHTML 里，标记和属性的名字都要求使用小
在HTML里，标记和属性的名字不区分大小写。例如，
，有助于减少这类错误的发生。
有时会将其误认为是 br/和hr/。因此，
和)，同时充当起始标记和结束标记。不过，某些早期的浏览器在看到这类标记时
和这个样子。为简化表示,XHTML也允许使用单个标记的简洁形式(如
标记，如和,XHTML要求它们必须是闭合的，即应该把它们写成像