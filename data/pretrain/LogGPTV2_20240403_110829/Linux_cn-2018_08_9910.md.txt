---
author: Cloudy Weather
category: 观点
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 1
  viewnum: 4301
date: '2018-08-11 00:54:00'
editorchoice: false
excerpt: 如果我告诉你有这样一种软件架构，其中应用程序的组件通过基于网络的通讯协议为其他组件提供服务，你可能会认为它是...
fromurl: https://blogs.dxc.technology/2018/05/08/everything-old-is-new-again-microservices/
id: 9910
islctt: true
largepic: /data/attachment/album/201808/11/005341qlofmbsl5z60jfoo.jpg
permalink: /article-9910-1.html
pic: /data/attachment/album/201808/11/005341qlofmbsl5z60jfoo.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: 如果我告诉你有这样一种软件架构，其中应用程序的组件通过基于网络的通讯协议为其他组件提供服务，你可能会认为它是...
tags:
- 微服务
- SOA
thumb: false
title: 老树发新芽：微服务
titlepic: true
translator: qhwdw
updated: '2018-08-11 00:54:00'
---

![](/data/attachment/album/201808/11/005341qlofmbsl5z60jfoo.jpg)

如果我告诉你有这样一种软件架构，其中应用程序的组件通过基于网络的通讯协议为其他组件提供服务，那么你的反应可能取决于你的编程经验。如果你从上世纪九十年代就开始编程，你可能会认为这是面向服务的架构（SOA）。然而，对于那些在云技术中崭露头角的年轻人来说，这听起来更像是“微服务”。

实际上，这两种说法都是正确的。要真正理解它们之间的差异，需要深入探讨这两种架构。

在SOA中，服务被定义为自包含且独立于上下文和其他服务状态的功能。SOA中的服务可以分为两类：消费者服务和提供者服务。前者请求服务，后者则提供服务。一个SOA服务可以同时扮演这两种角色。SOA的服务之间能够交换数据，并可协调完成诸如创建用户账户、登录验证或支付确认等基本任务。SOA旨在将分布式、独立维护和部署的组件整合成单一应用，这些组件运行于服务器上。

早期版本的SOA使用了面向对象协议进行通信，例如微软的分布式组件对象模型(DCOM)以及遵循CORBA规范的对象请求代理(ORB)。而更现代的消息传递机制，则包括Java消息服务(JMS)和高级消息队列协议(AMQP)，这些服务通常通过企业服务总线(ESB)连接起来，以XML格式传输数据。

相比之下，[微服务](http://microservices.io/)是一种更加松散耦合的服务或模块集合形式的应用程序架构风格。它特别适合采用持续集成/持续部署(CI/CD)模式开发复杂的大规模系统。每个微服务都提供了一个API端点，并通过如REST或gRPC这样的轻量级协议相连。数据通常以JSON或Protobuf格式表示。

无论是SOA还是微服务，都可以替代传统的单体式架构，在该架构下，整个应用程序作为一个不可分割的整体构建和部署。当任何部分发生变化时，都需要重新编译并部署整个应用。使用SOA允许单独更新某些组件；而微服务则进一步实现了真正的解耦，使得每次仅需更改一个服务即可。

此外，微服务相较于SOA更为轻量化，不仅体现在其倾向于容器化部署而非传统服务器或虚拟机，也表现在所使用的通信协议上。这种灵活性使得微服务成为电子商务网站等对敏捷性要求较高的场景的理想选择。

总而言之，可以说微服务是SOA的一种进化版，特别是在云计算环境下的表现。虽然经典SOA并未完全过时，但随着越来越多的应用迁移到容器平台，微服务架构正变得越来越受欢迎。
---
via: 
作者：[Cloudy Weather](https://blogs.dxc.technology/author/steven-vaughan-nichols/) 选题：[lujun9972](https://github.com/lujun9972) 译者：[qhwdw](https://github.com/qhwdw) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出