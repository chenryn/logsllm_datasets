Hello Typescipters,
I'm using the `Q` library with its typings installed via `tsd`.  
In a module I'm using
    /// 
    // ...
compiled with
    tsc -m commonjs --out test.js test.ts
    tsc --version
    message TS6029: Version 1.4.1.0
and would like `test.js` to contain a line like
    var Q = require("path/to/q"); // to be executed by nodejs
where `path/to/q` points to the javascript file and has nothing to do with
`../typings/q/Q.d.ts`.  
Using `import Q = require("path/to/q");` won't work as it probably expects a
typescript module.
    builder.ts(5,32): error TS2307: Cannot find external module './../bower_components/q/q'.
I haven't found how to achieve this without rolling out some hackish _ad-hoc_
source markup/parse/replace. Have I overlooked something?
In a way I'm trying to "link" to the library code (in the C meaning) with
node's `require` after having included the declarations (references to the
`d.ts`).
If this is not currently possible, may I suggest a pass-through version of
`require()` which kicks in when `-m commonjs` is used? Perhaps
`js_require("blabla")` which would be emitted as node's `require("blabla")`.
This would make it a lot easier to leverage other tools which analyze
`require` statements.
Greetings