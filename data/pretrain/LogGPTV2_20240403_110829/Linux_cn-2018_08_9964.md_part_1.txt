---
author: Jason Edelman
category: 系统运维
comments_data: []
count:
  commentnum: 0
  favtimes: 4
  likes: 0
  sharetimes: 0
  viewnum: 17674
date: '2018-08-30 23:09:00'
editorchoice: false
excerpt: 了解 Ansible 的功能，这是一个无代理的、可扩展的配置管理系统。
fromurl: https://www.oreilly.com/learning/network-automation-with-ansible
id: 9964
islctt: true
largepic: /data/attachment/album/201808/30/230933i0vdnu22vvfd9oi0.jpg
permalink: /article-9964-1.html
pic: /data/attachment/album/201808/30/230933i0vdnu22vvfd9oi0.jpg.thumb.jpg
related: []
reviewer: wxy
selector: ''
summary: 了解 Ansible 的功能，这是一个无代理的、可扩展的配置管理系统。
tags:
- ansible
thumb: false
title: 用 Ansible 实现网络自动化
titlepic: true
translator: qhwdw
updated: '2018-08-30 23:09:00'
---

![](/data/attachment/album/201808/30/230933i0vdnu22vvfd9oi0.jpg)

> 了解 Ansible 的功能，这是一个无代理的、可扩展的配置管理系统。

### 网络自动化

随着 IT 行业的技术不断进步，从服务器虚拟化到公有云和私有云，再到自服务能力、容器化应用和平台即服务（PaaS）交付，网络领域却一直落后。在过去五年多的时间里，网络行业出现了许多新的趋势，其中很多被归类为软件定义网络（SDN）。

> **注意**：
>
> SDN 是一种构建、管理、操作和部署网络的新方法。它最初的目标是将控制层和数据层（包转发）物理分离，并且解耦后的控制层必须能够管理各自的设备。
>
> 如今，在 SDN 旗下有许多技术，包括基于控制器的网络、网络设备 API、网络自动化、白盒交换机、策略网络化以及网络功能虚拟化（NFV）等。
>
> 在本报告中，我们将参考包含网络控制器作为解决方案一部分的 SDN 解决方案，这些解决方案提高了网络的可管理性，但并不一定需要从数据层解耦控制层。

其中一个趋势是网络设备 API 的出现，这提供了一种管理和操作这些设备的方法，真正实现了机器对机器的通信。API 简化了开发过程，特别是在自动化和构建网络应用时，它提供了更结构化的数据建模方式。例如，当启用 API 的设备以 JSON/XML 格式返回数据时，这些数据是结构化的，比仅支持命令行接口（CLI）的设备返回的纯文本信息更容易使用。

在 API 出现之前，配置和管理网络设备的主要机制是 CLI 和简单网络管理协议（SNMP）。CLI 是设备的人机界面，而 SNMP 并不是为实时编程设计的接口。幸运的是，由于许多供应商争相为设备添加 API（有时仅仅是因为它们被列入需求建议书），这带来了非常好的副作用——支持网络自动化。当真正的 API 发布后，访问设备内部数据和管理配置的过程大大简化，我们将在本报告中对此进行评估。虽然使用传统方法如 CLI/SNMP 也可以实现自动化，但 API 提供了更多优势。

> **注意**：
>
> 随着未来几个月或几年内网络设备的更新，供应商的 API 应该成为采购网络设备（虚拟和物理）的关键决策标准。用户应该测试和使用这些 API，特别是如果供应商提供了库或集成了自动化工具，或者遵循开放标准或协议。用户应了解数据是如何通过设备建模的，以及 API 使用的传输类型。

总而言之，网络自动化是为了提高工作效率。减少部署和配置更改的时间是许多 IT 组织面临的问题之一。以下是一些 IT 组织逐渐采用网络自动化的几个原因：

#### 简化架构

当前，每个网络都是独特的“雪花”，网络工程师们经常通过一次性的网络更改来解决传输和应用问题，这导致网络难以维护和管理，也难以自动化。网络自动化和管理应从一开始就包含在新的架构和设计中，而不是作为次要项目。哪些特性可以跨不同供应商工作？哪些扩展可以在不同平台上工作？使用特定网络设备平台时，API 类型或自动化工程是什么？这些问题应在设计过程中得到解答，最终的架构将变得简单、可重复且易于维护和自动化，从而减少对供应商专有扩展的依赖。

#### 确定的结果

在一个企业组织中，变更审查会议会评估网络变化及其对外部系统的影响和回滚计划。在通过 CLI 执行这些变化的世界中，输入错误命令可能导致灾难性后果。想象一下，一个由多位工程师组成的团队，每位工程师都有自己的独特方法。即使一个人具备使用 CLI 或 GUI 的能力，也无法完全消除出错的可能性。

经过验证和测试的网络自动化可以帮助实现更可预测的行为，并使执行团队更有可能获得确定的结果，首次确保任务没有人为错误的情况下正确完成。

#### 业务灵活性

网络自动化不仅为部署变化提供了速度和灵活性，还加快了根据业务需求从网络设备中检索数据的速度。自从服务器虚拟化出现以来，管理员能够在瞬间部署新的应用程序。然而，为什么配置 VLAN（虚拟局域网）、路由器、防火墙 ACL 或负载均衡策略仍然需要很长时间？

通过了解组织内最常见的工作流和实际需要网络变化的原因，部署现代自动化工具如 Ansible 将使这些任务变得更加简单。

这一章介绍了考虑网络自动化的一些高级知识点。下一节将介绍 Ansible 是什么，并深入探讨不同规模的 IT 组织如何进行网络自动化。

### 什么是 Ansible？

Ansible 是开源世界中最新的 IT 自动化和配置管理平台之一。它常与 Puppet、Chef 和 SaltStack 等工具相比较。Ansible 作为一个开源项目于 2012 年由 Michael DeHaan 创建，他也是 Cobbler 和 Func 的创建者。在 Ansible 开源项目成立不到 18 个月后，Ansible 公司成立，并获得了六百万美元的 A 轮投资。该公司成为 Ansible 开源项目的主要贡献者和支持者，并一直保持至今。2015 年 10 月，Red Hat 收购了 Ansible 公司。

那么，Ansible 到底是什么呢？

*Ansible 是一个无需代理且高度可扩展的自动化平台。*

让我们深入了解其细节，并看看使 Ansible 在行业中广受认可的属性。

#### 简单

Ansible 的一个吸引人的特点是，使用它不需要特定的编程技能。所有指令或任务都以标准的、任何人都可以理解的人类可读的数据格式文档化。在 30 分钟内完成安装和自动化任务的情况并不少见！

例如，以下是一个用于确保 Cisco Nexus 交换机上存在特定 VLAN 的 Ansible 剧本任务：

```yaml
- nxos_vlan: vlan_id=100 name=web_vlan
```

你无需熟悉或编写任何代码就能明确地看出它将要做什么！

> **注意**：
>
> 本报告的下半部分将详细介绍 Ansible 术语（剧本、剧集、任务、模块等）。在使用 Ansible 进行网络自动化时，我们将通过简短示例提及这些关键概念。

#### 无代理

与其他工具如 Puppet 和 Chef 不同，Ansible 不要求每个实现自动化的设备都安装特定的软件。这是 Ansible 成为网络自动化最佳选择的主要原因之一。

大多数 IT 自动化工具，包括 Puppet、Chef、CFEngine、SaltStack 和 Ansible，最初是为管理和自动化 Linux 主机配置而构建的，以跟上应用程序部署的增长步伐。对于 Linux 系统，安装代理并不是技术难题。然而，这可能会延迟安装过程，因为需要在多个主机上部署软件。此外，代理需要更复杂的 DNS 和 NTP 配置，这些服务在大多数环境中已经配置好，但在快速获取或测试某些功能时，这将大大延迟整个设置和安装过程。

由于本报告旨在介绍利用 Ansible 实现网络自动化，我们希望指出，Ansible 作为一个无代理平台，对网络管理员来说比对系统管理员更具吸引力。为什么呢？

正如前面所述，Linux 操作系统是开源的，可以安装任何东西。但对于网络来说，情况并非如此，尽管这种情况正在改变。例如，广泛部署的网络操作系统如 Cisco IOS，不允许第三方软件在其平台上运行。

在过去二十多年里，几乎所有网络操作系统都是闭源的，并且垂直整合到底层硬件中。没有供应商支持，在网络设备（路由器、交换机、负载均衡器、防火墙等）上加载代理并不容易。像 Ansible 这样的自动化平台从一开始就构建为无代理、可扩展的，仿佛专门为网络行业定制。我们最终将开始减少并消除与网络的人工交互。

#### 可扩展

Ansible 的可扩展性也非常出色。从开源代码在网络行业中发挥重要作用时起，一个可扩展的平台是必不可少的。这意味着，如果供应商或社区不提供特定的功能，开源社区、终端用户、消费者、顾问或任何人都可以扩展 Ansible 以启用给定的功能集。过去，网络供应商或工具供应商通过钩子提供新的插件和集成。想象一下，使用像 Ansible 这样的自动化平台，你选择的网络供应商发布了你需要的新自动化功能。理论上，网络供应商或 Ansible 可以发布一个新的插件来自动化这个独特功能，无论是你的内部工程师还是增值分销商（VAR）或顾问都可以提供这种集成。

正如前面所说，Ansible 实际上非常可扩展，最初是为自动化应用程序和系统构建的。这是因为 Ansible 的可扩展性来自其为网络供应商编写的集成，包括但不限于 Cisco、Arista、Juniper、F5、HP、A10、Cumulus 和 Palo Alto Networks。

### 为什么要使用 Ansible 进行网络自动化？

我们已经简要介绍了 Ansible 是什么，以及网络自动化的一些好处。那么，为什么我们要使用 Ansible 进行网络自动化呢？

显然，使 Ansible 成为出色的自动化应用部署平台的许多原因已经被提及。现在，我们将更深入地关注网络，并总结一些其他关键点。

#### 无代理

在实现网络自动化时，无代理架构的重要性不容忽视，尤其是在现有设备的自动化方面。当我们查看当前网络中已安装的各种设备时，从 DMZ 和园区到分支机构和数据中心，大部分设备并不支持最新的 API。从自动化的角度来看，API 可以简化很多事情，而像 Ansible 这样的无代理平台可以自动化和管理这些“老旧”设备。例如，基于 CLI 的设备可以通过 Ansible 工具在任何网络环境中进行自动化。

> **注意**：
>
> 如果仅支持 CLI 的设备已集成到 Ansible 中，其机制类似于通过 telnet、SSH 和 SNMP 协议在设备上进行只读和读写操作。

随着独立网络设备（如路由器、交换机和防火墙）不断增加对 API 的支持，SDN 解决方案也在出现。SDN 解决方案的一个共同主题是它们提供单一集成点和策略管理，通常以 SDN 控制器的形式出现。这对于 Cisco ACI、VMware NSX、Big Switch Big Cloud Fabric 和 Juniper Contrail 以及其他 SDN 提供商如 Nuage、Plexxi、Plumgrid、Midokura 和 Viptela 来说是一个真实的解决方案。这甚至包括开源控制器，如 OpenDaylight。