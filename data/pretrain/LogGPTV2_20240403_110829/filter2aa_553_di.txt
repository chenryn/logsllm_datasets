程序清单14.14 booksave.c程序
/* booksave.c -- 在文件中保存结构中的内容 */
#include 
#include 
#include 
#define MAXTITL 40
1073
#define MAXAUTL 40
#define MAXBKS 10     /* 最大书籍数量 */
char * s_gets(char * st, int n);
struct book {       /* 建立 book 模板 */
char title[MAXTITL];
char author[MAXAUTL];
float value;
};
int main(void)
{
struct book library[MAXBKS]; /* 结构数组 */
int count = 0;
int index, filecount;
FILE * pbooks;
int size = sizeof(struct book);
if ((pbooks = fopen("book.dat", "a+b")) == NULL)
{
fputs("Can't open book.dat file\n", stderr);
exit(1);
1074
}
rewind(pbooks);      /* 定位到文件开始 */
while (count  0)
{
puts("Here is the list of your books:");
for (index = 0; index 运算符一样，用指针访问联合时也要使用->运
算符：
pu = &fit;
1085
x = pu->digit; // 相当于 x = fit.digit
不要像下面的语句序列这样：
fit.letter = 'A';
flnum = 3.02*fit.bigfl; // 错误
以上语句序列是错误的，因为储存在 fit 中的是 char 类型，但是下一行
却假定 fit 中的内容是double类型。
不过，用一个成员把值储存在一个联合中，然后用另一个成员查看内
容，这种做法有时很有用。下一章的程序清单15.4就给出了一个这样的例
子。
联合的另一种用法是，在结构中储存与其成员有从属关系的信息。例
如，假设用一个结构表示一辆汽车。如果汽车属于驾驶者，就要用一个结构
成员来描述这个所有者。如果汽车被租赁，那么需要一个成员来描述其租赁
公司。可以用下面的代码来完成：
struct owner {
char socsecurity[12];
...
};
struct leasecompany {
char name[40];