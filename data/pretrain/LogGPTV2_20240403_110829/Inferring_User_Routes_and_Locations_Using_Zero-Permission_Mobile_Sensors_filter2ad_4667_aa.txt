title:Inferring User Routes and Locations Using Zero-Permission Mobile Sensors
author:Sashank Narain and
Triet D. Vo-Huu and
Kenneth Block and
Guevara Noubir
2016 IEEE Symposium on Security and Privacy
2016 IEEE Symposium on Security and Privacy
Inferring User Routes and Locations using
Zero-Permission Mobile Sensors
Sashank Narain∗, Triet D. Vo-Huu†, Kenneth Block‡ and Guevara Noubir§
Email: ∗PI:EMAIL, †PI:EMAIL, ‡PI:EMAIL, §PI:EMAIL
College of Computer and Information Science
Northeastern University, Boston, MA, USA
Abstract—Leakage of user location and trafﬁc patterns is a
serious security threat with signiﬁcant implications on privacy
as reported by recent surveys and identiﬁed by the US Congress
Location Privacy Protection Act of 2014. While mobile phones
can restrict the explicit access to location information to appli-
cations authorized by the user, they are ill-equipped to protect
against side-channel attacks. In this paper, we show that a zero-
permissions Android app can infer vehicular users’ location
and traveled routes, with high accuracy and without the users’
knowledge, using gyroscope, accelerometer, and magnetometer
information. We modeled this problem as a maximum likelihood
route identiﬁcation on a graph. The graph is generated from
the OpenStreetMap publicly available database of roads. Our
route identiﬁcation algorithms output both a ranked list of
potential routes as well a ranked list of route-clusters. Through
extensive simulations over 11 cities, we show that for most cities
with probability higher than 50% it is possible to output a
short list of 10 routes containing the traveled route. In real
driving experiments (over 980 Km) in the cities of Boston (resp.
Waltham), Massachusetts, we report a probability of 30% (resp.
60%) of inferring a list of 10 routes containing the true route.
I. INTRODUCTION
The mobile revolution has profoundly changed how we
share information and access services. Despite its immense
beneﬁts, it opened the door to a variety of privacy-invasion
attacks. Leakage of location information is a major concern
as it enables more sophisticated threats such as tracking users,
identity discovery, and identiﬁcation of home and work loca-
tions. Furthermore, discovery of behaviors, habits, preferences
and one’s social network are at risk, and can potentially lead
to effective physical and targeted social engineering.
The topic of location privacy has been extensively studied
since the early days of mobile phones. Cellular communication
systems, as early as GSM, attempted to protect users’ identity.
Sensitivity to location privacy inﬂuenced the use of temporary
identiﬁers (e.g., TMSI) which increased the difﬁculty of track-
ing users. In recent years, the attack surface of location privacy
signiﬁcantly expanded with the pervasiveness of mobile and
sensing devices, open mobile platforms (running untrusted
code) and ubiquitous connectivity. Users are also increasingly
aware and concerned about the implications of disclosure of
location information as reported in recent surveys [1], and the
US Congress Location Privacy Protection Act of 2014 [2].
This material is based upon work partially supported by the National
Science Foundation under Grants No. CNS-1409453, and CNS-1218197.
One user tracking threat example involves extracting the
MAC address of probe packets that are periodically transmitted
by Wi-Fi cards. This is known to be exploited by marketing
companies and location analytics ﬁrms. In shopping malls
for instance, companies such as Euclid Analytics state on
their website that they collect “the presence of the device,
its signal strength, its manufacturer, and a unique identiﬁer
known as its Media Access Control (MAC) address” [3]. This
is used to analyze large spatio-temporal user trafﬁc patterns.
Another example is by the startup Renew, which installed a
large number of recycling bins in London with the capability
to track users. This allows Renew to identify not only if the
person walking by is the same one from yesterday, but also her
speciﬁc route and walking speed [4, 5]. The threats to privacy,
as a result of exploiting MAC address tracking,
triggered
Apple to include a MAC address randomization feature in its
iOS 8 release, receiving praises from privacy advocates [6].
While attacks based on the physical and link layer infor-
mation are a serious concern [7], their practicality remains
limited to adversaries with a physical presence in the vicinity
of the user or requires access to the ISP infrastructure. Attacks
that exploit the open nature of mobile platforms, including
application stores, raise more concerns as they can be remotely
triggered (e.g., from distant countries beyond the jurisdiction
of a victim’s country’s courts of law), and require virtually
no deployment of physical infrastructure. The simplest way
to obtain a user’s location is by accessing the mobile device
location services which typically rely on GPS, Wi-Fi, or
Cellular signals. To mitigate breaches of location privacy,
mobile phones operating systems such as Android provide
mechanisms for users to manage permissions and control
access to sensitive resources and information. For instance,
an Android mobile app needs to request a permission to
access location information, allowing the user to decline.
This is a good start despite the fact that many users are
still careless about checking such permissions as illustrated
by recent charges by the Federal Trade Commission against
‘Brightest Flashlight’ app for deceiving consumers and sharing
the location information without their knowledge [8]. This app
with 4.7 stars rating and over one million users is an example
of seemingly innocuous applications that deceive users.
While a careful user can easily detect that a Flashlight
app should not access his/her location information, a harder
problem is how to protect users’ location privacy against
2375-1207/16 $31.00 © 2016 IEEE
© 2016, Sashank Narain. Under license to IEEE.
DOI 10.1109/SP.2016.31
DOI 10.1109/SP.2016.31
397
397
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:14:06 UTC from IEEE Xplore.  Restrictions apply. 
side channel attacks, when the app does not request any
permissions. Mobile phones are embedded with a variety of
sensors including a gyroscope, accelerometer, and magnetome-
ter. This expanding attack surface is an attractive target for
those seeking to exploit privacy information [9, 10], especially
when users are becoming more aware of location tracking
systems and attempt to minimize their exposure by disabling,
limiting usage of, or removing tracking apps.
We investigate the threat and potential of tracking users’
mobility without explicitly requesting permissions to access
the phone sensors or location services. Currently, any Android
application can access the gyroscope, accelerometer, and mag-
netometer without requiring the user permission or oversight.
Even security aware users tend to underestimate the risks
associated with installing an application that does not request
access to sensitive permissions such as location. We focus on
the scenario of a user traveling in a vehicle moving along
roads with publicly available characteristics. We model a user
trajectory as a route on a graph G = (V, E), where the vertices
represent road segments and the edges represent intersections.
We formulate the identiﬁcation of a user trajectory as the
problem of ﬁnding the maximum likelihood route on G given
the sensors’ samples. Using techniques similar to trellis codes
decoding, we developed an algorithm that identiﬁes the most
likely routes by minimizing a route scoring metric. Each of
the vertices/edges is tagged with information such as turn
angle, segment curvature and speed limit and can be extended
to incorporate additional
information such as vibration or
magnetic signatures. In order to assess the potential of this
approach in realistic environments, we developed a location
tracking framework. The framework consists of six building
blocks: (1) road graph construction from the OpenStreetMap
project publicly available data, (2) processing sensor data and
generating a compact sequence of tags that match the semantic
of a graph route, (3) maximum likelihood route identiﬁcation
algorithm, (4) simulation tool, (5) mobile app to record sensor
data, and (6) a trajectory inference for real mobility traces. We
carried out extensive simulation on 11 cities around the world
with varying population and road densities and topologies
(including Atlanta, Boston, London, Manhattan, Paris, Rome),
and preliminary real measurements in Boston and Waltham,
MA (spanning over 980Km), on four Android phones, with
four drivers. In the simulations, we show that for most cities
with probability higher than 50% it
is possible to output
a short list of 10 routes containing the traveled route. In
real experiments in the cities of Boston (resp. Waltham),
Massachusetts, we report a probability of 30% (resp. 60%)
of inferring a list of 10 routes containing the true route. Our
contributions can be summarized as follows:
• A graph theoretic model for reasoning about location and
trajectory inference in zero-permissions apps.
• A framework for processing sensors data, simulat-
ing/experimenting and evaluating location/trajectory in-
ference algorithms on real city road networks.
• An efﬁcient location/trajectory inference algorithm, that
incorporates road segments curvature, travel time, turn
angles, magnetometer information, and speed limits.
• A comprehensive simulated evaluation of the proposed
algorithm’s effectiveness on 11 cities and a preliminary
real-world evaluation on 2 cities, demonstrating the fea-
sibility of the attacks and efﬁciency of the algorithm.
While this paper focuses on how an adversary can infer a
driving trajectory with a seemingly innocuous Android app
that does not request any permissions from the user, this can
easily lead to inferring the home and workplace of the victim.
Further information about a user’s identity can be derived by
inspecting the town’s public database. This work motivates
the question of understanding the implications of mobile phone
sensors on users’ privacy in general. Enabling access to sensor
information is critical for feature-rich applications and for
their usability. However, preventing malicious exploitation and
abuse of this information is critical.
II. PROBLEM STATEMENT
A. Motivating Scenario
The victim is engaged in the act of driving a vehicle
where she and an active smartphone are co-located within
the aforementioned vehicle. The adversary’s goal is to track
the victim without the use of traditional position determining
services such as GPS, cell tower pings, or Wi-Fi/Bluetooth
address harvesting. To prepare for an attack, the adversary
uploads a seemingly innocuous mobile app to a publicly
accessible Application Store. The app is subsequently down-
loaded and installed by the victim on her smartphone. While
providing the victim with its advertised features, this malicious
app additionally collects sensor data from the accelerometer,
gyroscope and magnetometer. This data is readily available as
today’s mobile operating systems such as Android and iOS do
not yet limit access to these resources1.
The attack is triggered when the app detects that a victim
is starting to drive. Sensor data is recorded, without visible
indication of the recording activity, and uploaded to a col-
luding server whenever Internet access is available. Based on
the sensor data, the adversary can derive driving information
such as turn angles, route curvatures, accelerations, headings
and timestamps. Combined with publicly available geographic
area attributes, the adversary can learn the actual route taken
without the need of any location services/information.
B. Location Privacy Leakage from Sensor Data
We introduce our terminology and notations used to de-
scribe the problem space. Consider a geographic area repre-
sented by a set of roads. Each road is either straight or has
curvature that is detectable by the smartphone’s sensors. When
a road bisects, furcates, joins with other roads, or turns into
a different direction, a connection is created (cf. Figure 1a).
These connections divide roads into multiple so-called atomic
parts, which only connect with other atomic parts at their
1As of Feb. 2016 (Android 6), access to accelerometer, gyroscope, and
magnetometer is automatically granted during app installation without any
user warnings or explicit permission requests.
398398
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:14:06 UTC from IEEE Xplore.  Restrictions apply. 















(a) Connections are created when a road bisects (B), furcates (F), joins (J) with
→
another road, or turns (T) into a different direction. Created atomic parts:
BA,
→
BC,
→
BD,
→
DB,
→
CB,
→
EJ,
→
FJ,
→
JG,
→
FG,
→
TF,
→
HT.






(b) Graph construction: every one-way road segment s1, s3, s4, s5 is represented
by one vertex, while two vertices s2,NS and s2,SN are created for the north-south
(NS) and south-north (SN) directions of the road segment s2, respectively.
Fig. 1: Example of a geographic area and its mapping to a graph.
(cid:2)
(cid:2)
)|r, r
end points. Therefore, a geographic area G can be uniquely
described as G = (B,C, θ, ϑ), where B is a set of atomic
(cid:2) ∈ B} consists of connections
parts, and C = {χ = (r, r
) which is an ordered pair indicating the connection
χ = (r, r
(cid:2). The turn angle associated
between two atomic parts r and r
with a connection χ, which captures the real-world travel di-
(cid:2), is given by the function θ. A positive angle
rection from r to r
θ(χ) > 0 indicates a left turn, and a negative value θ(χ) < 0
indicates a right turn. Finally, the atomic parts preserve the
road curvature determined by ϑ(r). The computation of θ and
ϑ functions is based on the public map information.
We deﬁne a route taken by the driver as a sequence R of
connected atomic parts, R = (r1, . . . , rN ), where (ri, ri+1) ∈
C. Two routes R and ˆR are identical if the sequences of atomic
parts have the same size and are component-wise equal, i.e.,
R = ˆR if ri = ˆri for all i. Along the driving trajectory, the
app obtains a set of sensor data D = {(at, gt, mt)} consisting
of the vectors at, gt and mt taken from the accelerometer,
gyroscope and magnetometer respectively. These vectors are
sampled according to discrete time periods t = 0, δ, 2δ, . . .,
where δ is the sampling period. Based on D, an adversary
launches the tracking attack as follows.
Deﬁnition 1 (Sensor-based Tracking Attack). Let A be the
attack deployed by the adversary on the received sensor data
D given geographical area G. The outcome of the attack is
a ranked list P of K possible victim routes P = A(G,D) =
{ ˆR1, . . . , ˆRK}, where ˆRi has higher probability than ˆRj of
matching with the victim’s actual trajectory, if i < j.
Most interesting is whether a small set of results yield a
route list containing the truth route. We aim to design an attack
that satisﬁes this objective with success probability signiﬁ-
cantly higher than a random guess. In particular, we evaluate
the attack efﬁciency according to the following metrics.
Deﬁnition 2 (Individual Rank). Given the user’s actual tra-
jectory R and the outcome of the attack P = A(G,D), the
399399
individual rank of the attack is k, if R = ˆRk. The rank is
uninteresting if R is not found in P.
The individual rank k reﬂects the attack’s success in esti-
mating that the victim’s route is in top k of the outcome list.
We are interested in the probability of such event happening,
:= P (R ∈ { ˆR1, . . . , ˆRk}), and evaluate the attack
i.e., P idv
k
performance based on it (cf. Section V). While P idv
shows
k