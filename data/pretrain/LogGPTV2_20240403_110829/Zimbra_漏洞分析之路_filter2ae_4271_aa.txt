# Zimbra 漏洞分析之路
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
网上关于Zimbra的漏洞调试文章比较粗浅，在十一国庆期间学习了Zimbra的相关漏洞原理和搭建技术。本文从环境搭建，架构梳理，漏洞调试等方面展开分析，带领的大家能够快速熟悉开源软件Zimbra的漏洞挖掘之路。
#  0x01 Zimbra介绍
Zimbra是著名的开源系统，提供了一套开源协同办公套件包括WebMail，日历，通信录，Web文档管理和创作。一体化地提供了邮件收发、文件共享、协同办公、即时聊天等一系列解决方案，是开源软件中的精品。作为邮件服务器系统，Zimbra更是凭借卓越的稳定性和功能当之无愧地成为开源邮件服务器系统的首选，适合各类型/人数的用户群，尤其适合团队使用。其最大的特色在于其采用Ajax技术模仿CS桌面应用软件的风格开发的客户端兼容Firefox,Safari和IE浏览器。
## 0x02 环境搭建
###  0x1 软件及源码下载
部署环境下载地址：  
源码下载地址：
###  0x2 基于ubuntu的Zimbra环境搭建
**0\. 启动docker ubuntu容器**
    docker run -p 25:25 -p 80:80 -p 465:465 -p 587:587 -p 110:110 -p 143:143 -p 993:993 -p 995:995 -p 443:443 -p 8080:8080 -p 8443:8443 -p 7071:7071 -p 9071:9071 -h zimbra-docker.zimbra.io --dns 127.0.0.1 --dns 8.8.8.8 -i -t -e PASSWORD=Zimbra2017 ubuntu:14.04
**1\. 安装依赖包**
为zimbra提供运行环境，需要安装以下应用
    apt update
    apt install  libgmp3c2 libpcre3 libgmp3-dev sysstat libexpat1  wget netcat-openbsd pax sqlite3
**2\. 执行安装脚本**
安装脚本主要负责下载部署环境，设置环境变量以及部署zimbra以及开启服务。
    #!/bin/sh
    ## Preparing all the variables like IP, Hostname, etc, all of them from the container
    sleep 5
    HOSTNAME=$(hostname -a)
    DOMAIN=$(hostname -d)
    CONTAINERIP=$(ip addr | grep 'state UP' -A2 | tail -n1 | awk '{print $2}' | cut -f1  -d'/')
    RANDOMHAM=$(date +%s|sha256sum|base64|head -c 10)
    RANDOMSPAM=$(date +%s|sha256sum|base64|head -c 10)
    RANDOMVIRUS=$(date +%s|sha256sum|base64|head -c 10)
    ## Installing the DNS Server ##
    echo "Configuring DNS Server"
    mv /etc/dnsmasq.conf /etc/dnsmasq.conf.old
    cat >/etc/dnsmasq.conf
    server=8.8.8.8
    listen-address=127.0.0.1
    domain=$DOMAIN
    mx-host=$DOMAIN,$HOSTNAME.$DOMAIN,0
    address=/$HOSTNAME.$DOMAIN/$CONTAINERIP
    user=root
    EOF
    sudo service dnsmasq restart
    ##Creating the Zimbra Collaboration Config File ##
    touch /opt/zimbra-install/installZimbraScript
    cat /opt/zimbra-install/installZimbraScript
    AVDOMAIN="$DOMAIN"
    AVUSER="admin@$DOMAIN"
    CREATEADMIN="admin@$DOMAIN"
    CREATEADMINPASS="$PASSWORD"
    CREATEDOMAIN="$DOMAIN"
    DOCREATEADMIN="yes"
    DOCREATEDOMAIN="yes"
    DOTRAINSA="yes"
    EXPANDMENU="no"
    HOSTNAME="$HOSTNAME.$DOMAIN"
    HTTPPORT="8080"
    HTTPPROXY="TRUE"
    HTTPPROXYPORT="80"
    HTTPSPORT="8443"
    HTTPSPROXYPORT="443"
    IMAPPORT="7143"
    IMAPPROXYPORT="143"
    IMAPSSLPORT="7993"
    IMAPSSLPROXYPORT="993"
    INSTALL_WEBAPPS="service zimlet zimbra zimbraAdmin"
    JAVAHOME="/opt/zimbra/common/lib/jvm/java"
    LDAPAMAVISPASS="$PASSWORD"
    LDAPPOSTPASS="$PASSWORD"
    LDAPROOTPASS="$PASSWORD"
    LDAPADMINPASS="$PASSWORD"
    LDAPREPPASS="$PASSWORD"
    LDAPBESSEARCHSET="set"
    LDAPDEFAULTSLOADED="1"
    LDAPHOST="$HOSTNAME.$DOMAIN"
    LDAPPORT="389"
    LDAPREPLICATIONTYPE="master"
    LDAPSERVERID="2"
    MAILBOXDMEMORY="512"
    MAILPROXY="TRUE"
    MODE="https"
    MYSQLMEMORYPERCENT="30"
    POPPORT="7110"
    POPPROXYPORT="110"
    POPSSLPORT="7995"
    POPSSLPROXYPORT="995"
    PROXYMODE="https"
    REMOVE="no"
    RUNARCHIVING="no"
    RUNAV="yes"
    RUNCBPOLICYD="no"
    RUNDKIM="yes"
    RUNSA="yes"
    RUNVMHA="no"
    SERVICEWEBAPP="yes" SMTPDEST="admin@$DOMAIN"
    SMTPHOST="$HOSTNAME.$DOMAIN"
    SMTPNOTIFY="yes"
    SMTPSOURCE="admin@$DOMAIN"
    SNMPNOTIFY="yes"
    SNMPTRAPHOST="$HOSTNAME.$DOMAIN"
    SPELLURL="http://$HOSTNAME.$DOMAIN:7780/aspell.php"
    STARTSERVERS="yes"
    SYSTEMMEMORY="3.8"
    TRAINSAHAM="ham.$RANDOMHAM@$DOMAIN"
    TRAINSASPAM="spam.$RANDOMSPAM@$DOMAIN"
    UIWEBAPPS="yes"
    UPGRADE="yes"
    USEKBSHORTCUTS="TRUE"
    USESPELL="yes"
    VERSIONUPDATECHECKS="TRUE"
    VIRUSQUARANTINE="virus-quarantine.$RANDOMVIRUS@$DOMAIN"
    ZIMBRA_REQ_SECURITY="yes"
    ldap_bes_searcher_password="$PASSWORD"
    ldap_dit_base_dn_config="cn=zimbra"
    ldap_nginx_password="$PASSWORD"
    ldap_url="ldap://$HOSTNAME.$DOMAIN:389"
    mailboxd_directory="/opt/zimbra/mailboxd"
    mailboxd_keystore="/opt/zimbra/mailboxd/etc/keystore"
    mailboxd_keystore_password="$PASSWORD"
    mailboxd_server="jetty"
    mailboxd_truststore="/opt/zimbra/common/lib/jvm/java/lib/security/cacerts"
    mailboxd_truststore_password="changeit"
    postfix_mail_owner="postfix"
    postfix_setgid_group="postdrop"
    ssl_default_digest="sha256"
    zimbraDNSMasterIP=""
    zimbraDNSTCPUpstream="no"
    zimbraDNSUseTCP="yes"
    zimbraDNSUseUDP="yes"
    zimbraDefaultDomainName="$DOMAIN"
    zimbraFeatureBriefcasesEnabled="Enabled"
    zimbraFeatureTasksEnabled="Enabled"
    zimbraIPMode="ipv4"
    zimbraMailProxy="FALSE"
    zimbraMtaMyNetworks="127.0.0.0/8 $CONTAINERIP/32 [::1]/128 [fe80::]/64"
    zimbraPrefTimeZoneId="America/Los_Angeles"
    zimbraReverseProxyLookupTarget="TRUE"
    zimbraVersionCheckInterval="1d"
    zimbraVersionCheckNotificationEmail="admin@$DOMAIN"
    zimbraVersionCheckNotificationEmailFrom="admin@$DOMAIN"
    zimbraVersionCheckSendNotifications="TRUE"
    zimbraWebProxy="FALSE"
    zimbra_ldap_userdn="uid=zimbra,cn=admins,cn=zimbra"
    zimbra_require_interprocess_security="1"
    zimbra_server_hostname="$HOSTNAME.$DOMAIN"
    INSTALL_PACKAGES="zimbra-core zimbra-ldap zimbra-logger zimbra-mta zimbra-snmp zimbra-store zimbra-apache zimbra-spell zimbra-memcached zimbra-proxy"
    EOF
    if [ ! -f /opt/zimbra-install/zimbra-zcs-8.6.0.tar.gz ];
    then
      ##Install the Zimbra Collaboration ##
      echo "Downloading Zimbra Collaboration 8.6.0"
      wget -O /opt/zimbra-install/zimbra-zcs-8.6.0.tar.gz https://files.zimbra.com/downloads/8.6.0_GA/zcs-8.6.0_GA_1153.UBUNTU14_64.20141215151116.tgz
      echo "Extracting files from the archive"
      tar xzvf /opt/zimbra-install/zimbra-zcs-8.6.0.tar.gz -C /opt/zimbra-install/
      echo "Update package cache"
      apt update
      echo "Installing Zimbra Collaboration just the Software"
      cd /opt/zimbra-install/zcs-8.6.0_GA_1153.UBUNTU14_64.20141215151116 && ./install.sh -s 
  * 
最后要注意在install.sh脚本执行的最后要设置admin的密码，`*******`处为必须填写的内容
###  0x3 基于Java的远程调试技术
**1\. 找到之前的启动进程**
通过`ps -ef | grep java`找到相对应的java进程
**2\. 杀掉启动进程**
利用kill指令将之前的进程杀掉
这里有个小技巧，首先kill 掉java web的守护进程，如果不这么做的话，java
web会很快启动，所以我们需要先kill掉守护进程，之后kill掉java web。
**3\. 开启调试**
再之后我们像以前一样给java web启动程序添加调试参数`-Xdebug
-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005`
因为是在docker中搭建的环境，需要做层端口映射，将监听端口开启在宿主机上。打开idea 的remote配置设置IP地址和端口
出现Connected to target VM 字样即表示已经连接服务并开启Debug模式。
**4\. 添加lib依赖库**
    /opt/zimbra/jetty-distribution-9.1.5.v20140505/webapps/service/WEB-INF/lib/
    /opt/zimbra/jetty-distribution-9.1.5.v20140505/webapps/zimbraAdmin/WEB-INF/lib/
    /opt/zimbra/jetty-distribution-9.1.5.v20140505/webapps/zimbra/WEB-INF/lib/
    /opt/zimbra/jetty-distribution-9.1.5.v20140505/common/lib/
    /opt/zimbra/jetty-distribution-9.1.5.v20140505/lib/
    /opt/zimbra/lib/jars/
将这些文件文件夹中的jar包下载到调试机器上，依次添加到lib依赖中
## 0x03 框架梳理
在进入docker容器时，注意采用以下命令，通过配置privileged权限，才能通过lsof以及netstat指令查看端口所对应的进程名称。
    docker exec --privileged -it bef76c5ba54a  bash
###  0x1 服务架构
Zimbra web服务主要有Nginx做流量转发，Java负责核心Web业务，通过配置Nginx的配置文件，达到对各个路由的服务划分。
###  0x2 nginx 服务配置
zimbra的web服务由nginx进行流量转发，我们可以看下nginx 服务的配置文件
    # NGINX POP/IMAP proxy configuration file for use with Zimbra
    #
    working_directory /opt/zimbra;
    include /opt/zimbra/conf/nginx/includes/nginx.conf.main;
    include /opt/zimbra/conf/nginx/includes/nginx.conf.memcache;
    include /opt/zimbra/conf/nginx/includes/nginx.conf.zmlookup;
    include /opt/zimbra/conf/nginx/includes/nginx.conf.mail;
    include /opt/zimbra/conf/nginx/includes/nginx.conf.web;
    # Don't edit the below comment
    #__SUCCESS__
这里我们只关注 /opt/zimbra/conf/nginx/includes/nginx.conf.web
可以看出上图配置的是后台服务端口与别名，在nginx.conf.web的最后include两个文件
      include /opt/zimbra/conf/nginx/includes/nginx.conf.web.https;
        include /opt/zimbra/conf/nginx/includes/nginx.conf.web.https.default;
关于流量的转发，这里从nginx.conf.web.https.default配置文件中选出一个转发片段，分析如下
       location ~* /(service|principals|dav|\.well-known|home|octopus|shf|user|certauth|spnegoauth|(zimbra/home)|(zimbra/user))/
        {
            set $mailhostport 8080;   # replace this with *the* mailhost port
            set $relhost $host;
            if ($mailhostport != 80) {   # standard HTTP port, do not replace
                set $relhost $host:$mailhostport;
            }
            # End stray redirect hack
            # Proxy to Zimbra Mailbox Upstream
            proxy_pass       https://zimbra_ssl;