port number {
transport protocol {
export-profile
profile-name;
}
}
}
}
940
Table 109: Network Analytics CLI Changes (Continued)
Task CLI for Junos OS Release 13.2X50-D15 CLI for Junos OS Release 13.2X51-D15
and 13.2X51-D10 and later
Configuring the [edit services analytics] Requires defining an export profile and
streaming message applying it to the collector:
types (queue or traffic
streaming-servers { 1. To define an export profile:
statistics) to send to a
address ip-address {
remote server
port number { [edit services analytics]
stream-type type;
stream-type type;
export-profiles {
}
profile-name {
}
interface {
}
information;
statistics {
queue;
traffic;
}
status {
link;
queue;
traffic;
}
}
system {
information;
status {
queue;
traffic;
}
}
}
}
2. To apply an export profile to the
collector:
[edit services analytics]
collector {
address ip-address {
port number {
941
Table 109: Network Analytics CLI Changes (Continued)
Task CLI for Junos OS Release 13.2X50-D15 CLI for Junos OS Release 13.2X51-D15
and 13.2X51-D10 and later
export-profile profile-
name;
}
}
}
Configuring the No configuration is available. Only the Configuration is available. Both TCP and
transport protocol for TCP protocol is supported. UDP protocols are supported, and can be
sending streaming data configured for the same port.
to an external server
[edit services analytics]
collector {
address ip-address {
port number1 {
transport tcp;
transport udp;
}
port number2 {
transport udp;
}
}
}
Show information Issue the show analytics streaming-sever Issue the show analytics collector
about remote streaming command. command.
server or collector
942
Understand Network Analytics Streaming Data
IN THIS SECTION
JavaScript Object Notation (JSON) | 942
Comma-separated Values (CSV) | 943
Tab-separated Values (TSV) | 943
Google Protocol Buffer (GPB) | 946
Network analytics monitoring data can be streamed to remote servers called collectors. You can
configure one or more collectors to receive streamed data containing queue and traffic statistics. This
topic describes the streamed data output.
In Junos OS Release 13.2X51-D10, network analytics provide support for the following streaming data
formats and output:
• JavaScript Object Notation (JSON)
• Comma-separated Values (CSV)
• Tab-separated Values (TSV)
NOTE: For the output shown in this topic for JSON, CSV, and TSV formats, the time is displayed
in the Unix epoch format (also known as Unix time or POSIX time).
Starting in Junos OS Release 13.2X51-D15, support for the below streaming format and output has
been added along with JSON, CSV, and TSV formats.
• Google Protocol Buffer (GPB)
JavaScript Object Notation (JSON)
The JavaScript Object Notation (JSON) streaming format supports the following data:
943
• Queue statistics data. For example:
{"record-type":"queue-stats","time":1383453988263,"router-id":"qfx5100-switch",
"port":"xe-0/0/18","latency":0,"queue-depth":208}
See Table 110 on page 944 for more information about queue statistics output fields.
• Traffic statistics. For example:
{"record-type":"traffic-stats","time":1383453986763,"router-id":"qfx5100-switch",
"port":"xe-0/0/16","rxpkt":26524223621,"rxpps":8399588,"rxbyte":3395100629632,
"rxbps":423997832,"rxdrop":0,"rxerr":0,"txpkt":795746503,"txpps":0,"txbyte":101855533467,
"txbps":0,"txdrop":0,"txerr":0}
See Table 111 on page 945 for more information about traffic statistics output fields.
Comma-separated Values (CSV)
The Comma-separated Values (CSV) streaming format supports the following data:
• Queue statistics. For example:
q,1383454067604,qfx5100-switch,xe-0/0/18,0,208
See Table 110 on page 944 for more information about queue statistics output fields.
• Traffic statistics. For example:
t,1383454072924,qfx5100-switch,xe-0/0/19,1274299748,82950,163110341556,85603312,0,0,
27254178291,8300088,3488534810679,600002408,27268587050,3490379142400
See Table 111 on page 945 for more information about traffic statistics output fields.
Tab-separated Values (TSV)
The Tab-separated Values (TSV) streaming format supports the following data:
944
• Queue statistics. For example:
q 585870192561703872 qfx5100-switch xe-0/0/18 (null)
208 2
See Table 110 on page 944 for more information about queue statistics output fields.
• Traffic statistics. For example:
t 1383454139025 qfx5100-switch xe-0/0/19 1279874033 82022
163823850036 84801488 0 0 27811618258 8199630
3559887126455 919998736 27827356915 3561901685120
See Table 111 on page 945 for more information about traffic statistics output fields.
Queue Statistics Output for JSON, CSV, and TSV
Table 110 on page 944 describes the output fields for streamed queue statistics data in the order they
appear.
Table 110: Streamed Queue Statistics Data Output Fields
Field Description
record-type Type of statistics. Displayed as:
• queue-stats (JSON format)
• q (CSV or TSV format)
time Time (in Unix epoch format) at which the statistics were captured.
router-id ID of the network analytics host device.
port Name of the physical port configured for network analytics.
latency Traffic queue latency in milliseconds.
945
Table 110: Streamed Queue Statistics Data Output Fields (Continued)
Field Description
queue depth Depth of the traffic queue in bytes.
Traffic Statistics Output for JSON, CSV, and TSV
Table 111 on page 945 describes the output fields for streamed traffic statistics data in the order they
appear.
Table 111: Streamed Traffic Statistics Data Output Fields
Field Description
record-type Type of statistics. Displayed as:
• traffic-stats (JSON format)
• t (CSV or TSV format)
time Time (in Unix epoch format) at which the statistics were captured.
router-id ID of the network analytics host device.
port Name of the physical port configured for network analytics.
rxpkt Total packets received.
rxpps Total packets received per second.
rxbyte Total bytes received.
rxbps Total bytes received per second.
rxdrop Total incoming packets dropped.
946
Table 111: Streamed Traffic Statistics Data Output Fields (Continued)
Field Description
rxerr Total packets with errors.
txpkt Total packets transmitted.
txpps Total packets transmitted per second.
txbyte Total bytes transmitted.
txbps Total bytes transmitted per second.
txdrop Total transmitted bytes dropped.
txerr Total transmitted packets with errors (dropped).
Google Protocol Buffer (GPB)
This streaming format provides:
• Support for nine types of messages, based on resource type (system-wide or interface-specific).
• Sends messages in a hierarchical format.
• You can generate other stream format messages (JSON, CSV, TSV) from GPB formatted messages.
• Includes a 8-byte message header. See Table 112 on page 946 for more information.
Table 112 on page 946 describes the GPB stream format message header.
Table 112: GPB Stream Format Message Header Information
Byte Position Field
0 to 3 Length of message
947
Table 112: GPB Stream Format Message Header Information (Continued)
Byte Position Field
4 Message version
5 to 7 Reserved for future use
The following GPB prototype file (analytics.proto) provides details about the streamed data:
package analytics;
// Traffic statistics related info
message TrafficStatus {
optional uint32 status = 1;
optional uint32 poll_interval = 2;
}
// Queue statistics related info
message QueueStatus {
optional uint32 status = 1;
optional uint32 poll_interval = 2;
optional uint64 lt_high = 3;
optional uint64 lt_low = 4;
optional uint64 dt_high = 5;
optional uint64 dt_low = 6;
}
message LinkStatus {
optional uint64 speed = 1;
optional uint32 duplex = 2;
optional uint32 mtu = 3;
optional bool state = 4;
optional bool auto_negotiation= 5;
}
message InterfaceInfo {
optional uint32 snmp_index = 1;
optional uint32 index = 2;
optional uint32 slot = 3;
948
optional uint32 port = 4;
optional uint32 media_type = 5;
optional uint32 capability = 6;
optional uint32 porttype = 7;
}
message InterfaceStatus {
optional LinkStatus link = 1;
optional QueueStatus queue_status = 2;
optional TrafficStatus traffic_status = 3;
}
message QueueStats {
optional uint64 timestamp = 1;
optional uint64 queue_depth = 2;
optional uint64 latency = 3;
}
message TrafficStats {
optional uint64 timestamp = 1;
optional uint64 rxpkt = 2;
optional uint64 rxucpkt = 3;
optional uint64 rxmcpkt = 4;
optional uint64 rxbcpkt = 5;
optional uint64 rxpps = 6;
optional uint64 rxbyte = 7;
optional uint64 rxbps = 8;
optional uint64 rxcrcerr = 9;
optional uint64 rxdroppkt = 10;
optional uint64 txpkt = 11;
optional uint64 txucpkt = 12;
optional uint64 txmcpkt = 13;
optional uint64 txbcpkt = 14;
optional uint64 txpps = 15;
optional uint64 txbyte = 16;
optional uint64 txbps = 17;
optional uint64 txcrcerr = 18;
optional uint64 txdroppkt = 19;
}
message InterfaceStats {
optional TrafficStats traffic_stats = 1;
optional QueueStats queue_stats = 2;
949
}
//Interface message
message Interface {
required string name = 1;
optional bool deleted = 2;
optional InterfaceInfo information = 3;
optional InterfaceStats stats = 4;
optional InterfaceStatus status = 5;
}
message SystemInfo {
optional uint64 boot_time = 1;
optional string model_info = 2;
optional string serial_no = 3;
optional uint32 max_ports = 4;
optional string collector = 5;
repeated string interface_list = 6;
}
message SystemStatus {
optional QueueStatus queue_status = 1;
optional TrafficStatus traffic_status = 2;
}
//System message
message System {
required string name = 1;
optional bool deleted = 2;
optional SystemInfo information = 3;
optional SystemStatus status = 4;
}
message AnRecord {
optional uint64 timestamp = 1;
optional System system = 2;
repeated Interface interface = 3;
}
950
SEE ALSO
collector (Analytics)
Understand Enhanced Analytics Local File Output
The network analytics feature provides visibility into the performance and behavior of the data center
infrastructure. You enable network analytics by configuring queue or traffic statistics monitoring, or
both. In addition, you can configure a local file for storing the traffic and queue statistics records.
NOTE: This topic describes the local file output in Junos OS Release 13.2X51-D15 and later.
Starting in Junos OS Release 13.2X51-D15, the traffic and queue monitoring statistics can be stored
locally in a single file. The following example shows the output from the monitor start command.
root@qfx5100-33> monitor start an
root@qfx5100-33>
*** an ***
q,1393947567698432,qfx5100-33,xe-0/0/19,1098572,1373216
q,1393947568702418,qfx5100-33,xe-0/0/19,1094912,1368640
q,1393947569703415,qfx5100-33,xe-0/0/19,1103065,1378832
t,1393947569874528,qfx5100-33,xe-0/0/16,12603371884,12603371884,0,0,
8426023,1613231610488,8628248712,0,3,5916761,5916761,0,0,0,757345408,0,0,0
t,1393947569874528,qfx5100-33,xe-0/0/18,12601953614,12601953614,0,0,
8446737,1613050071660,8649421552,0,5,131761619,131761619,0,0,84468,
16865487232,86495888,0,0
t,1393947569874528,qfx5100-33,xe-0/0/19,126009250,126009250,0,0,84469,
16129184128,86496392,0,0,12584980342,12584980342,0,0,8446866,1610877487744,
8649588432,12593703960,0
q,1393947575698402,qfx5100-33,xe-0/0/19,1102233,1377792
q,1393947576701398,qfx5100-33,xe-0/0/19,1107724,1384656
See Table 113 on page 951 for queue statistics output, and Table 114 on page 951 for traffic
statistics output. The fields in the tables are listed in the order they appear in the output example.
951
Table 113: Output Fields for Queue Statistics in Local Analytics File
Field Description Example in Output
Record type Type of statistics (queue or traffic monitoring) q
Time (microseconds) Unix epoch (or Unix time) in microseconds at which the statistics 1393947567698432
were captured.
Router ID ID of the network analytics host device. qfx5100-33
Port Name of the physical port configured for network analytics. xe-0/0/19
Latency (nanoseconds) Traffic queue latency in nanoseconds. 1098572
Queue depth (bytes) Depth of the traffic queue in bytes. 1373216
Table 114: Output Fields for Traffic Statistics in Local Analytics File
Field Description Example in Output
Record type Type of statistics (queue or traffic monitoring) t
Time (microseconds) Unix epoch (or Unix time) in microseconds at which the statistics 1393947569874528
were captured.
Router ID ID of the network analytics host device. qfx5100-33
Port Name of the physical port configured for network analytics. xe-0/0/16
rxpkt Total packets received. 12603371884
rxucpkt Total unicast packets received. 12603371884
rxmcpkt Total multicast packets received. 0
952
Table 114: Output Fields for Traffic Statistics in Local Analytics File (Continued)
Field Description Example in Output
rxbcpkt Total broadcast packets received. 0
rxpps Total packets received per second. 8426023
rxbyte Total octets received. 1613231610488
rxbps Total bytes received per second. 8628248712
rxdroppkt Total incoming packets dropped. 0
rxcrcerr CRC/Align errors received. 3
txpkt Total packets transmitted. 5916761
txucpkt Total unicast packets transmitted. 5916761
txmcpkt Total multicast packets transmitted. 0
txbcpkt Total broadcast packets transmitted. 0
txpps Total packets transmitted per second. 0
txbyte Total octets transmitted. 757345408
txbps Bytes per second transmitted. 0
txdroppkt Total transmitted packets dropped. 0
txcrcerr CRC/Align errors transmitted. 0
953
Understand Network Analytics Configuration and Status
The network analytics feature provides visibility into the performance and behavior of the data center
infrastructure. You can enable network analytics by configuring traffic and queue statistics monitoring.
NOTE: This topic describes the configuration and status output from Junos OS Release 13.2X50-
D15 and 13.2X51-D10 only.
If you had enabled traffic or queue monitoring, you can issue the show analytics configuration and show