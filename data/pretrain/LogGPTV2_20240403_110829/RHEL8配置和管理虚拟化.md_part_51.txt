-   主机可以通过虚拟机的网络可见并可访问。通常情况下，如果虚拟机使用
    [*NAT*]{.emphasis}
    和[*网桥*]{.emphasis}类型虚拟网络进行连接，则会出现这种情况。然而，对于
    [*macvtap*]{.emphasis} 连接，您必须首先在主机上设置
    [*macvlan*]{.emphasis} 功能。要做到这一点：
    ::: orderedlist
    1.  在主机的 `/etc/systemd/network/`{.literal} 目录中创建一个名为
        `vm-macvlan.netdev`{.literal} 的网络设备文件。
        ``` literallayout
        # vim /etc/systemd/network/vm-macvlan.netdev
        ```
    2.  编辑网络设备文件，使其包含以下内容。您可以将
        `vm-macvlan`{.literal} 替换为您为网络设备选择的名称。
        ``` literallayout
        [NetDev]
        Name=vm-macvlan
        Kind=macvlan
        [MACVLAN]
        Mode=bridge
        ```
    3.  为您的 macvlan 网络设备创建一个网络配置文件，如
        `vm-macvlan.network`{.literal}。
        ``` literallayout
        # vim /etc/systemd/network/vm-macvlan.network
        ```
    4.  编辑网络配置文件使其包含以下内容。您可以将
        `vm-macvlan`{.literal} 替换为您为网络设备选择的名称。
        ``` literallayout
        [Match]
        Name=_vm-macvlan_
        [Network]
        IPForward=yes
        Address=192.168.250.33/24
        Gateway=192.168.250.1
        DNS=192.168.250.1
        ```
    5.  为您的物理网络接口创建网络配置文件。例如，如果您的接口是
        `enp4s0`{.literal} ：
        ``` literallayout
        # vim /etc/systemd/network/enp4s0.network
        ```
        如果您不确定要使用的接口，您可以使用主机上的
        `ifconfig`{.literal} 命令获取活跃网络接口列表。
    6.  编辑物理网络配置文件，使物理网络成为 macvlan
        接口的一部分，在本例中为 [*vm-macvlan*]{.emphasis}：
        ``` literallayout
        [Match]
        Name=enp4s0
        [Network]
        MACVLAN=vm-macvlan
        ```
    7.  重启您的主机。
    :::
:::
::: orderedlist
**流程**
1.  在主机中，创建一个 Samba 共享并使其可以被外部系统访问。
    ::: orderedlist
    1.  为 Samba 添加防火墙权限。
        ``` literallayout
        # firewall-cmd --permanent --zone=public --add-service=samba
        success
        # firewall-cmd --reload
        success
        ```
    2.  编辑 `/etc/samba/smb.conf`{.literal} 文件：
        ::: orderedlist
        1.  在 `[global]`{.literal} 部分添加以下内容：
            ``` literallayout
            map to guest = Bad User
            ```
        2.  在文件的末尾添加以下内容：
            ``` literallayout
            #=== Share Definitions ===
            [VM-share]
            path = /samba/VM-share
            browsable = yes
            guest ok = yes
            read only = no
            hosts allow = 192.168.122.0/24
            ```
            请注意，`主机允许`{.literal}
            行仅限制虚拟机网络上的主机访问共享。如果您希望共享可以被任何人访问，请删除该行。
        :::
    3.  创建 `/samba/VM-share`{.literal} 目录。
        ``` literallayout
        # mkdir -p /samba/VM-share
        ```
    4.  启用 Samba 服务。
        ``` literallayout
        # systemctl enable smb.service
        Created symlink /etc/systemd/system/multi-user.target.wants/smb.service → /usr/lib/systemd/system/smb.service.
        ```
    5.  重启 Samba 服务。
        ``` literallayout
        # systemctl restart smb.service
        ```
    6.  允许虚拟机可以访问 `VM-share`{.literal} 目录并进行修改。
        ``` literallayout
        # chmod -R 0755 /samba/VM-share/
        # chown -R nobody:nobody /samba/VM-share/
        ```
    7.  将 SELinux Samba 共享标签添加到 `/etc/samba/VM-share/`{.literal}
        ``` literallayout
        # chcon -t samba_share_t /samba/VM-share/
        ```
    :::
2.  在 Windows 客户机操作系统上，将 Samba 共享附加为网络位置。
    ::: orderedlist
    1.  打开文件 Explorer 并右键点击 \"This PC\"。
    2.  在上下文菜单中，单击 `Add a network location`{.literal}。
        ::: informalfigure
        ::: mediaobject
        ![virt Win10 network loc1](images/virt-Win10_network_loc1.png)
        :::
        :::
    3.  在打开的 [*Add Network Location*]{.emphasis}
        向导中，选择\"选择自定义网络位置\"并单击 [Next]{.guibutton}。
    4.  在\"Internet 或网络地址\"字段中，键入
        [*host-IP*]{.emphasis}/VM-share，其中 [*host-IP*]{.emphasis}
        是主机的 IP 地址。通常，主机 IP 是虚拟机的默认网关。之后，单击
        [Next]{.guibutton}。
        ::: informalfigure
        ::: mediaobject
        ![virt Win10 网络 loc2](images/virt-Win10_network_loc2.png)
        :::
        :::
    5.  当向导询问您是否要重命名共享目录时，请保留默认名称。这可确保虚拟机和虚拟客户机之间文件共享配置的一致性。点
        [Next]{.guibutton}。
    6.  如果成功访问网络位置，您可以单击 [Finish]{.guibutton}
        并打开共享目录。
    :::
:::
:::
::: section
::: titlepage
# []{#installing-and-managing-windows-virtual-machines-on-rhel_configuring-and-managing-virtualization.html#enabling-standard-harware-security-on-windows-virtual-machines_installing-and-managing-windows-virtual-machines-on-rhel}在 Windows 虚拟机中启用标准硬件安全性 {.title}
:::
要保护 Windows 虚拟机，您可以使用 Windows
设备的标准硬件功能启用基本级别的安全性。
::: itemizedlist
**先决条件**
-   请确定您安装了最新的 WHQL 认证的 VirtIO 驱动程序。
-   确保虚拟机固件支持 UEFI 引导。
-   在您的主机计算机上安装 `edk2-OVMF`{.literal} 软件包。
    ``` literallayout
    # yum install edk2-ovmf
    ```
-   在您的主机机器上安装 `vTPM`{.literal} 软件包。
    ``` literallayout
    # yum install swtpm libtpms
    ```
-   确保虚拟机使用 Q35 机器架构。
-   请确定您有 Windows 安装介质。
:::
::: orderedlist
**流程**
1.  通过在虚拟机 XML 配置的 ``{.literal}
    部分中添加以下参数来启用 TPM 2.0。
    ``` programlisting
    [...]
    [...]
    ```
2.  在 UEFI 模式中安装 Windows。有关如何操作的更多信息，请参阅[创建
    SecureBoot
    虚拟机](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_virtualization/index#creating-a-secureboot-virtual-machine_securing-virtual-machines-in-rhel-8){.link}。
3.  在 Windows 虚拟机上安装 VirtIO
    驱动程序。有关如何进行此操作的更多信息，请参阅在 [Windows guest
    上安装 virtio
    驱动程序](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_virtualization/index#installing-kvm-drivers-on-a-windows-guest_installing-kvm-paravirtualized-drivers-for-rhel-virtual-machines){.link}。
4.  在 UEFI 中，启用安全引导。有关如何进行此操作的更多信息，请参阅
    [安全引导](https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/secure-boot-landing){.link}。
:::
::: itemizedlist
**验证**
-   确定 Windows 机器中的[**设备安全性**]{.strong}页面显示以下信息：
    [**settings \> Update & Security \> Windows Security \> device
    Security**]{.strong}
    ``` literallayout
    Your device meets the requirements for standard hardware security.
    ```
:::
:::
::: section
::: titlepage
# []{#installing-and-managing-windows-virtual-machines-on-rhel_configuring-and-managing-virtualization.html#proc_enabling-enhanced-hardware-security-on-windows-virtual-machines_installing-and-managing-windows-virtual-machines-on-rhel}在 Windows 虚拟机上启用增强的硬件安全性 {.title}
:::
为进一步保护 Windows
虚拟机(VM)，您可以启用基于虚拟化的代码完整性保护，也称为
Hypervisor-Protected Code Integrity(HVCI)。
::: itemizedlist
**先决条件**
-   确保启用了标准硬件安全性。如需更多信息，请参阅在 [Windows
    虚拟机上启用标准硬件安全性](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_virtualization/index#enabling-standard-harware-security-on-windows-virtual-machines_securing-virtual-machines-in-rhel-8){.link}。
-   确保已启用 KVM 嵌套。如需更多信息，请参阅
    [创建嵌套虚拟机](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_virtualization/index#creating-nested-virtual-machines_configuring-and-managing-virtualization){.link}。
-   KVM 命令行中，
    ::: itemizedlist
    -   指定 CPU 型号。
    -   启用虚拟机扩展(VMX)功能。
    -   启用 Hyper-V 亮点.
        ``` literallayout
        # -cpu Skylake-Client-v3,hv_stimer,hv_synic,hv_relaxed,hv_reenlightenment,hv_spinlocks=0xfff,hv_vpindex,hv_vapic,hv_time,hv_frequencies,hv_runtime,+kvm_pv_unhalt,+vmx
        ```
    :::
:::
::: orderedlist
**流程**
1.  在 Windows 虚拟机上，进入 [**Core 隔离详情**]{.strong} 页面：
    [**settings \> Update & Security \> Windows Security \> Device
    Security \> Core isolated details**]{.strong}
2.  将 参数切换为启用 [**内存完整性**]{.strong}。
3.  重启虚拟机。
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
有关启用 HVCI 的其他方法，请查看相关的 Microsoft 文档。
:::
::: itemizedlist
**验证**
-   确定 Windows 虚拟机上的 [**Device Security**]{.strong}
    页面显示以下信息：
    [**settings \> Update & Security \> Windows Security \> device
    Security**]{.strong}
    ``` literallayout
    Your device meets the requirements for enhanced hardware security.
    ```