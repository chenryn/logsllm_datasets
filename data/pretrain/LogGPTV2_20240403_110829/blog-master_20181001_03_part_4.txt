    Manual Vacuums:      1, last 30 minutes ago  
    Manual Analyze:      1, last 30 minutes ago  
    Auto Vacuums:        never  
    Auto Analyze:        never  
    Post-Analyze:        0.0% est. rows modified  
    Row Estimate:        100.0% live of total 10  
    Rows Changed:        ins 100.0%, upd 0.0%, del 0.0%  
    HOT Updates:         0.0% of all updates  
    Seq Scans:           1, 10.0 rows/scan  
    Idx Scans:           0, 0.0 rows/scan  
    Cache Hits:          76.2% (idx=0.0%)  
    Size:                40 KiB  
    +----------------------+-------+--------+-------+------------+-------+----------------+-------------------+  
    |                Index |  Type |   Size | Bloat | Cache Hits | Scans | Rows Read/Scan | Rows Fetched/Scan |  
    +----------------------+-------+--------+-------+------------+-------+----------------+-------------------+  
    | pgbench_tellers_pkey | btree | 16 KiB |       |            |     0 |            0.0 |               0.0 |  
    +----------------------+-------+--------+-------+------------+-------+----------------+-------------------+  
Table #3 in "newdb":  
    Name:                newdb.public.pgbench_accounts  
    Columns:             4  
    Manual Vacuums:      1, last 30 minutes ago  
    Manual Analyze:      1, last 30 minutes ago  
    Auto Vacuums:        never  
    Auto Analyze:        never  
    Post-Analyze:        0.0% est. rows modified  
    Row Estimate:        100.0% live of total 100000  
    Rows Changed:        ins 100.0%, upd 0.0%, del 0.0%  
    HOT Updates:         0.0% of all updates  
    Seq Scans:           1, 100000.0 rows/scan  
    Idx Scans:           0, 0.0 rows/scan  
    Cache Hits:          80.0% (idx=0.0%)  
    Size:                13 MiB  
    Bloat:               192 KiB (1.5%)  
    +-----------------------+-------+---------+----------------+------------+-------+----------------+-------------------+  
    |                 Index |  Type |    Size |          Bloat | Cache Hits | Scans | Rows Read/Scan | Rows Fetched/Scan |  
    +-----------------------+-------+---------+----------------+------------+-------+----------------+-------------------+  
    | pgbench_accounts_pkey | btree | 2.2 MiB | 192 KiB (8.7%) |            |     0 |            0.0 |               0.0 |  
    +-----------------------+-------+---------+----------------+------------+-------+----------------+-------------------+  
Table #4 in "newdb":  
    Name:                newdb.public.pgbench_branches  
    Columns:             3  
    Manual Vacuums:      1, last 30 minutes ago  
    Manual Analyze:      1, last 30 minutes ago  
    Auto Vacuums:        never  
    Auto Analyze:        never  
    Post-Analyze:        100.0% est. rows modified  
    Row Estimate:        100.0% live of total 1  
    Rows Changed:        ins 100.0%, upd 0.0%, del 0.0%  
    HOT Updates:         0.0% of all updates  
    Seq Scans:           1, 1.0 rows/scan  
    Idx Scans:           0, 0.0 rows/scan  
    Cache Hits:          58.3% (idx=0.0%)  
    Size:                40 KiB  
    +-----------------------+-------+--------+-------+------------+-------+----------------+-------------------+  
    |                 Index |  Type |   Size | Bloat | Cache Hits | Scans | Rows Read/Scan | Rows Fetched/Scan |  
    +-----------------------+-------+--------+-------+------------+-------+----------------+-------------------+  
    | pgbench_branches_pkey | btree | 16 KiB |       |            |     0 |            0.0 |               0.0 |  
    +-----------------------+-------+--------+-------+------------+-------+----------------+-------------------+  
```  
## 小结  
1、pgmetrics用法非常简单，连接到数据库，获取内置的监测指标的内容。  
```  
pgmetrics --help  
pgmetrics collects PostgreSQL information and metrics.  
Usage:  
  pgmetrics [OPTION]... [DBNAME]  
General options:  
  -t, --timeout=SECS           individual query timeout in seconds (default: 5)  
  -i, --input=FILE             don't connect to db, instead read and display  
                                   this previously saved JSON file  
  -V, --version                output version information, then exit  
  -?, --help[=options]         show this help, then exit  
      --help=variables         list environment variables, then exit  
Collection options:  
  -S, --no-sizes               don't collect tablespace and relation sizes  
  -c, --schema=REGEXP          collect only from schema(s) matching POSIX regexp  
  -C, --exclude-schema=REGEXP  do NOT collect from schema(s) matching POSIX regexp  
  -a, --table=REGEXP           collect only from table(s) matching POSIX regexp  
  -A, --exclude-table=REGEXP   do NOT collect from table(s) matching POSIX regexp  
      --omit=WHAT              do NOT collect the items specified as a comma-separated  
                                   list of: "tables", "indexes", "sequences",  
                                   "functions", "extensions", "triggers", "statements"  
      --sql-length=LIMIT       collect only first LIMIT characters of all SQL  
                                   queries (default: 500)  
      --statements-limit=LIMIT collect only utmost LIMIT number of row from  
                                   pg_stat_statements (default: 100)  
Output options:  
  -f, --format=FORMAT          output format; "human", or "json" (default: "human")  
  -l, --toolong=SECS           for human output, transactions running longer than  
                                   this are considered too long (default: 60)  
  -o, --output=FILE            write output to the specified file  
      --no-pager               do not invoke the pager for tty output  
Connection options:  
  -h, --host=HOSTNAME          database server host or socket directory  
                                   (default: "/data01/pg11/pg_root1921")  
  -p, --port=PORT              database server port (default: 1921)  
  -U, --username=USERNAME      database user name (default: "postgres")  
      --no-password            never prompt for password  
For more information, visit .  
```  
2、用户可以使用pgmetrics定义收集数据库状态信息。  
3、结合pgdash，可以将pgmetrics收集的内容可视化，并提供告警能力。  
4、我在之前还写过一些数据库指标监控的文档，请参考末尾。  
5、如发现需要新增的指标，或者有些指标不正确，可以发ISSUE给作者。   
目前pgmetrics的指标已经比较丰富，可以用于日常的状态和性能监控。   
## 参考  
https://bucardo.org/check_postgres/  
https://github.com/rapidloop/pgmetrics  
https://pgmetrics.io/  
https://github.com/digoal/pgsql_admin_script/blob/master/generate_report.sh  
[《[未完待续] PostgreSQL 一键诊断项 - 珍藏级》](../201806/20180613_05.md)    
[《PostgreSQL 实时健康监控 大屏 - 低频指标 - 珍藏级》](../201806/20180613_04.md)    
[《PostgreSQL 实时健康监控 大屏 - 高频指标(服务器) - 珍藏级》](../201806/20180613_03.md)    
[《PostgreSQL 实时健康监控 大屏 - 高频指标 - 珍藏级》](../201806/20180613_02.md)    
[《PostgreSQL、Greenplum 日常监控 和 维护任务 - 最佳实践》](../201709/20170913_01.md)    
[《PostgreSQL 锁等待监控 珍藏级SQL - 谁堵塞了谁》](../201705/20170521_01.md)    
[《PostgreSQL 10.0 preview 功能增强 - 新增数十个IO等待事件监控》](../201703/20170312_02.md)    
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")