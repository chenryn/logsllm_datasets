them (similar to a one way mirror). 
In  figure  1  we  see  a  diagram  of  a  Honeynet.    The 
critical  element  is  the  Honeywall  gateway,  a  layer  two 
bridging  device  that  controls  and  captures  all  of  the 
attacker’s  inbound  and  outbound  activity.    Since  the 
gateway  is  a  layer  two  bridging  device,  it  has  no  MAC 
address,  no  routing  of  packets,  nor  any  TTL  decrement, 
making it nearly impossible for an attacker to detect.  Any 
packet sent to a victim system within the Honeynet must 
flow  through  the  gateway,  ensure  you  can  both  capture 
and  control  their  activity.    Honeynets  have  repeatedly 
demonstrated  their  intelligence  gathering  capabilities.  
Two  examples  are  the  paper  Know  Your  Enemy:  Credit 
Card  Fraud[1]  and  the  Scan  of  the  Month  challenge 
28[2].    In  the  credit  card  paper,  Honeynets  were  used  to 
capture  information  on  automated  credit  card  fraud  and 
identity  theft,  to  include  not  only  how  it  was  done,  but 
who was involved.  In the Scan of the Month challenge (a 
monthly  challenge  sponsored  by  the  Honeynet  Project), 
we  capture  the  activity  of  advanced  Italian  hackers 
tunneling 
for  convert 
communications.    These  are  the  same  individuals  that 
were  later  prosecuted  by  Italian  authorities  for  breaking 
into  NASA.    For  further  technical  details  of  a  Honeynet, 
the  paper  Know  Your  Enemy: 
please 
refer 
Honeynets[3].
through 
IPv4 
IPv6 
traffic 
to 
2.2  Honeytokens 
Honeytokens  represent  one  of  the  newest  and  most 
interesting implementations of a honeypot.  First, they are 
not  a  computer;  instead  they  are  a  digital  entity,  such  as 
an  Excel  spreadsheet.    Even  though  they  are  not  a 
computer,  they  share  the  same  definition  and  concept  of 
honeypots, no one should be interacting with them.  Any 
interaction  with  a  honeytoken  implies  unauthorized  or 
malicious  activity.    Second,  they  are  extremely  flexible, 
they  have  the  ability  to  adapt  to  any  environment.    The 
reason for this is simple, a honeytoken can pretty much be 
anything  you  want.    Examples  can  include  a  Word 
document, login and password, database record, or social 
security  number.    For  example,  lets  say  we  are  a  large 
hospital,  responsible  for  maintaining  the  privacy  of 
millions  of  patient  records.    One  of  the  requirements  is 
identifying  when  a  member  of  hospital  staff  attempts  to 
exceed their authorization and access patient data they do 
not have a need to access.  A bogus medical record called 
"John  F.  Kennedy"  is  created  and  loaded  into  the 
database.  This medical record has no true value because 
there is no real patient with that name.  Instead, the record 
is  a  honeytoken,  an  entity  that  has  no  authorized  use.    If 
any  employee  is  looking  for  interesting  patient  data,  this 
record will definitely stand out.  If the employee attempts 
to  access  this  record,  you  have  an  indication  of  an 
employee violating patient privacy.  It is as simple as that, 
no  fancy  algorithms,  no  signatures  to  update,  no  rules  to 
configure.    You  load  the  records,  monitor  it,  and  if 
someone  accesses  it  they  most  likely  have  violated  the 
system's  usage  policy..    Honeytokens  are  extremely 
flexible, there is no right or wrong way to use them.  Due 
to  their  flexibility,  you  can  customize  them  to  easily 
integrate  into  your  environment.    To  learn  more  about 
honeytokens,  refer  to  the  paper  Honeytokens:  The  Other 
Honeypot[4].
3.  The Insider 
Before  we  can  discuss  how  honeypots,  specifically 
Honeynets  and  honeytokens,  can  catch  the  insider  threat, 
we need to first define what our goal is, and the threat we 
face.  Our goal is to detect, identify, and confirm insider 
threats.    This  means  leveraging  honeypots  to  not  only 
indicate  that  we  have  an  insider,  but  also  confirm  their 
actions, and potentially learn their motives and resources.  
What  makes  our  goal  difficult  is  the  threat  we  face,  the 
sophisticated insider.  What we mean by this is someone 
who  is  technically  skilled,  highly  motivated,  and  has 
access  to  extensive  resources.    For  example,  this  threat 
may be an employee working for a large corporation, but 
in reality they are employed by a competitor to engage in 
corporate espionage.  A second example is highly skilled, 
disgruntled  employee  motivated  to  cause  a  great  deal  of 
Proceedings of the 19th Annual Computer Security Applications Conference (ACSAC 2003) 
1063-9527/03 $17.00 © 2003 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:49:32 UTC from IEEE Xplore.  Restrictions apply. 
or cable modem.  Once deployed, security administrators 
took the attitude ‘sit back and wait’.  If you build it, they 
will come.  And come they do.  An unprotected honeypot 
deployed on an external network can expect to see 10-30 
probes  a  day.    A  vulnerable  honeypot  (such  as  a  default 
RH 7.2 installation, or unpatched Windows XP computer) 
can  expect  to  be  compromised  in  less  then  seventy-two 
hours.  What makes these numbers even more amazing is 
nothing  is  done  to  advertise  the  honeypots  or  entice  the 
attackers.    These  honeypots  are  not  registered  in  DNS, 
they  have  no  entries  in  Google  or  in  any  search  engines, 
no  one  should  know  about  these  deployed  honeypots.  
damage before they are fired.  A third example could be a 
spy working for a foreign country.  Regardless of who the 
insider is, we are dealing with a highly dangerous threat, 
one that is extremely difficult to detect.  They have access 
to  critical  information;  they  know  the  structure  of  the 
organization.  They are most likely after information, not 
systems.    As  a  result,  there may  be  few  attacks  and  their 
access to information may even be authorized.  It is what 
they do with that information that comprises the threat.  It 
is our goal to detect and capture the activity of this threat. 
For the purposes of this paper, we will take the lessons 
learned  from  the  ARDA  Cyber  Indications  and  Warning 
workshop.    In  this  workshop, 
we focused on past spies in the 
Intelligence 
community.  
Examples of such spies include 
Aldrich  Ames,  Robert  Hansen, 
and  Anna  Montes. 
  These 
individuals  were  all  highly 
with 
trusted 
extensive 
critical 
knowledge  to  their  respective 
organizations.    However,  as 
insiders 
to 
cause  extreme  harm  to  their 
organizations,  and  over  long 
periods  of  time  without  being 
detected.
they  were  able 
individuals 
and 
3.1  The Strategy 
threats. 
in 
exist 
Traditionally, 
honeypots 
have  been  used  to  detect  or 
capture  the  activity  of  outsider 
or  perimeter 
  The 
purpose  of 
these  honeypots 
varied.  Some organizations are 
learning  what 
interested 
threats 
and  gaining 
intelligence  on  those  threats, 
others  want  to  detect  attacks 
against  their  perimeter,  while 
others  were  attempting  early 
warning  and prediction  of new 
attack 
or 
malicious 
  When 
focusing  on  such  a  threat,  the 
strategy 
deploying 
honeypots  is  relatively  simple, 
deploy  the  honeypots  and  the 
attackers 
come.  
Honeypots, such as Honeynets, 
would be placed on a perimeter 
network, or a direct connection 
to  the  Internet,  such  as  a  DSL 
tools, 
exploits, 
code. 
for 
will 
Figure 1 
Diagram  of  a  2nd  generation  Honeynet.    All  attacker  activity  sent  to  the  honeypots
(systems  in  yellow)  must  go  through  the  Honeywall  gateway,  a  layer  two  bridging
device that controls and captures all of the attackers’ activity. 
Proceedings of the 19th Annual Computer Security Applications Conference (ACSAC 2003) 
1063-9527/03 $17.00 © 2003 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:49:32 UTC from IEEE Xplore.  Restrictions apply. 
And  yet,  attackers  find  and  attack 
repeatedly on their own initiative. 
these  systems 
Once you understand the enemy you are dealing with, 
this  is  not  as  amazing  as  it  seems.    An  extremely  large 
percentage of cyber threats are what we would classify as 
script  kiddies,  or  automated,  random  attackers.    These 
individuals  targets  systems  of  opportunity.    They  are  not 
interested  in  what  systems  they  compromise,  but  how 
many.  Their goal is to compromise as many computers as 
possible.    Now,  their  motives  for  this  vary  extensively 
(creating  networks  to  be  used  for  Distributed  Denial  of 
Service  attacks,  networked  bots,  stealing  credit  cards, 
identity  theft,  scouring  for  email  address  to  be  sold  to 
spammers).  However, they share the same goal, literally 
break into thousands of computers.  The Honeynet Project 
has had honeypots controlled by attackers who own over 
15,000 compromised systems. 
These  attackers  do  this  by  simply  running  automated 
tools they find on the Internet, or given to them by other 
blackhats.  These automated tools do all the work for the 
attacker.    Once  launched,  the  tools  scour  the  entire 
Internet,  probing  every  IP  address  they  can  find.    Once 
they  find  a  vulnerable  system,  the  tool  compromises  the 
box,  takes  over  it,  then  continues  probing.  While  not  an 
elegant or subtle approach, its effective.  The majority of 
today’s  attackers  are  not  highly  skilled,  but  they  don’t 
need to be.  These automated tools do the work for them.  
One documented example is the Honeynet Project’s Scan 
of  the  Month  13  challenge[5].    When  dealing  with  this 
clientele,  the  strategy  for  deploying  honeypots  is  simple.  
As  we  said  before,  you  just  deploy  them  and  they  will 
come.    The  attackers  scan  entire  blocks  of  networks.  
Recent  work  by  V.  Yegneswaran  and  P.  Barford  from 
University  of  Wisconsin  and  J.  Ulrich  from  SANS 
supports  this.    In  their  publication  Internet  Intrusions: 
Global  Characteristics  and  Prevalence[6],  they  estimate 
25  billion  intrusion  attempts  per  day,  based  on  1600 
firewall logs collected over a four month period.  Because 
of this brute force method, external threats will also attack 
and  break  into  honeypots  that  are  on  the  same  networks.  
However,  when  attempting  to  detect  and  learn  about 
sophisticated insiders, we will need a different strategy.  
First, when dealing with insider threats, you will most 
likely have to move the honeypots from external networks 
to  your  internal  networks,  move  the  honeypots  to  where 
the  threat  is.    Second,  we  have  to  address  one  of  the 
disadvantages  of  honeypots,  the  fact  they  have  a  limited 
view,  they  only  see  what  interacts  with  them.    Simply 
deploying honeypots on your internal network most likely 
will  not  detect  the  advanced  insiders.    Such  honeypots 
will  detect  common  threats,  such  as  automated  attacks, 
worms,  or  insider  threats  taking  a  brute  force  approach, 
such  as  scanning  internal  networks  for  open  shares.  
These threats represent the same clientele as most external 
threats,  taking  a  target  of  opportunity  force,  sweeping 
entire  networks  or  actively  probing  many  systems.  
Regardless of where you deploy your honeypots, they will 
easily  capture  such  activity.    Georgia  Tech  recently 
released  a  paper  on  how  internally  deployed  Honeynets 
successfully  captured  such  threats,  titled  The  Use  of 
Honeynets  to  Detect  Exploited  Systems  Across  Large 
Enterprise Networks[7] 
However,  we  have  to  assume  with  our  sophisticated 
insider  that  they  will  not  be  so  careless,  so  noisy.    This 
threat  will  be  far  more  selective,  they  do  not  want  to  be 
caught.    Also,  they  have  better  knowledge  of  the 
environment,  and  as  such  can  focus  on  specific  targets.  
Simply  deploying  honeypots  on  your  internal  network 