        array (size=3)
          0 => int 323
          1 => string ''1'' (length=3)
          2 => int 6
      31 => string ',' (length=1)
      32 => 
        array (size=3)
          0 => int 323
          1 => string ''2'' (length=3)
          2 => int 6
      33 => string ']' (length=1)
      34 => string ';' (length=1)
      35 => string '`' (length=1)
      36 => 
        array (size=3)
          0 => int 322
          1 => string 'ls' (length=2)
          2 => int 9
      37 => string '`' (length=1)
      38 => string ';' (length=1)
      39 => 
        array (size=3)
          0 => int 327
          1 => string 'if' (length=2)
          2 => int 11
      40 => string '(' (length=1)
      41 => 
        array (size=3)
          0 => int 320
          1 => string '$a' (length=2)
          2 => int 11
      42 => 
        array (size=3)
          0 => int 285
          1 => string '==' (length=2)
          2 => int 11
      43 => 
        array (size=3)
          0 => int 323
          1 => string '"1"' (length=3)
          2 => int 11
      44 => string ')' (length=1)
      45 => 
        array (size=3)
          0 => int 320
          1 => string '$b' (length=2)
          2 => int 11
      46 => string '=' (length=1)
      47 => 
        array (size=3)
          0 => int 323
          1 => string '"2"' (length=3)
          2 => int 11
      48 => string ';' (length=1)
      49 => 
        array (size=3)
          0 => int 320
          1 => string '$a' (length=2)
          2 => int 13
      50 => string '=' (length=1)
      51 => 
        array (size=3)
          0 => int 358
          1 => string 'isset' (length=5)
          2 => int 13
      52 => string '(' (length=1)
      53 => 
        array (size=3)
          0 => int 320
          1 => string '$c' (length=2)
          2 => int 13
      54 => string ')' (length=1)
      55 => string '?' (length=1)
      56 => 
        array (size=3)
          0 => int 323
          1 => string '"aa"' (length=4)
          2 => int 13
      57 => string ':' (length=1)
      58 => 
        array (size=3)
          0 => int 323
          1 => string '"bb"' (length=4)
          2 => int 13
      59 => string ';'
随后经过`array_reconstruct_tokens`函数处理,重写了数组相关的`token`信息:
    /Applications/MAMP/htdocs/rips/lib/tokenizer.php:454:
    array (size=54)
      0 => 
        array (size=3)
          0 => int 320
          1 => string '$a' (length=2)
          2 => int 3
      1 => string '=' (length=1)
      2 => 
        array (size=4)
          0 => int 320
          1 => string '$_GET' (length=5)
          2 => int 3
          3 => 
            array (size=1)
              0 => string 'a' (length=1)
      3 => string ';' (length=1)
      4 => 
        array (size=3)
          0 => int 320
          1 => string '$b' (length=2)
          2 => int 4
      5 => string '=' (length=1)
      6 => 
        array (size=4)
          0 => int 320
          1 => string '$_POST' (length=6)
          2 => int 4
          3 => 
            array (size=1)
              0 => string 'b' (length=1)
      7 => string ';' (length=1)
      8 => 
        array (size=3)
          0 => int 320
          1 => string '$c' (length=2)
          2 => int 5
      9 => string '=' (length=1)
      10 => 
        array (size=3)
          0 => int 368
          1 => string 'array' (length=5)
          2 => int 5
      11 => string '(' (length=1)
      12 => 
        array (size=3)
          0 => int 323
          1 => string '"c"' (length=3)
          2 => int 5
      13 => 
        array (size=3)
          0 => int 268
          1 => string '=>' (length=2)
          2 => int 5
      14 => 
        array (size=3)
          0 => int 323
          1 => string '"c"' (length=3)
          2 => int 5
      15 => string ',' (length=1)
      16 => 
        array (size=3)
          0 => int 323
          1 => string '"d"' (length=3)
          2 => int 5
      17 => 
        array (size=3)
          0 => int 268
          1 => string '=>' (length=2)
          2 => int 5
      18 => 
        array (size=3)
          0 => int 323
          1 => string '"d"' (length=3)
          2 => int 5
      19 => string ')' (length=1)
      20 => string ';' (length=1)
      21 => 
        array (size=3)
          0 => int 320
          1 => string '$d' (length=2)
          2 => int 6
      22 => string '=' (length=1)
      23 => string '[' (length=1)
      24 => 
        array (size=3)
          0 => int 323
          1 => string ''1'' (length=3)
          2 => int 6
      25 => string ',' (length=1)
      26 => 
        array (size=3)
          0 => int 323
          1 => string ''2'' (length=3)
          2 => int 6
      27 => string ']' (length=1)
      28 => string ';' (length=1)
      29 => string '`' (length=1)
      30 => 
        array (size=3)
          0 => int 322
          1 => string 'ls' (length=2)
          2 => int 9
      31 => string '`' (length=1)
      32 => string ';' (length=1)
      33 => 
        array (size=3)
          0 => int 327
          1 => string 'if' (length=2)
          2 => int 11
      34 => string '(' (length=1)
      35 => 
        array (size=3)
          0 => int 320
          1 => string '$a' (length=2)
          2 => int 11
      36 => 
        array (size=3)
          0 => int 285
          1 => string '==' (length=2)
          2 => int 11
      37 => 
        array (size=3)
          0 => int 323
          1 => string '"1"' (length=3)
          2 => int 11
      38 => string ')' (length=1)
      39 => 
        array (size=3)
          0 => int 320
          1 => string '$b' (length=2)
          2 => int 11
      40 => string '=' (length=1)
      41 => 
        array (size=3)
          0 => int 323
          1 => string '"2"' (length=3)
          2 => int 11
      42 => string ';' (length=1)
      43 => 
        array (size=3)
          0 => int 320
          1 => string '$a' (length=2)
          2 => int 13
      44 => string '=' (length=1)
      45 => 
        array (size=3)
          0 => int 358
          1 => string 'isset' (length=5)
          2 => int 13
      46 => string '(' (length=1)
      47 => 
        array (size=3)
          0 => int 320
          1 => string '$c' (length=2)
          2 => int 13
      48 => string ')' (length=1)
      49 => string '?' (length=1)
      50 => 
        array (size=3)
          0 => int 323
          1 => string '"aa"' (length=4)
          2 => int 13
      51 => string ':' (length=1)
      52 => 
        array (size=3)
          0 => int 323
          1 => string '"bb"' (length=4)
          2 => int 13
      53 => string ';' (length=1)
再经过`fix_tokens`处理,统一了部分token信息的写法(如对if语句统一使用花括号的标示形式)
    /Applications/MAMP/htdocs/rips/lib/tokenizer.php:379:
    array (size=57)
      0 => 
        array (size=3)
          0 => int 320
          1 => string '$a' (length=2)
          2 => int 3
      1 => string '=' (length=1)
      2 => 
        array (size=4)
          0 => int 320
          1 => string '$_GET' (length=5)
          2 => int 3
          3 => 
            array (size=1)
              0 => string 'a' (length=1)
      3 => string ';' (length=1)
      4 => 
        array (size=3)
          0 => int 320
          1 => string '$b' (length=2)
          2 => int 4
      5 => string '=' (length=1)
      6 => 
        array (size=4)
          0 => int 320
          1 => string '$_POST' (length=6)
          2 => int 4
          3 => 
            array (size=1)
              0 => string 'b' (length=1)
      7 => string ';' (length=1)
      8 => 
        array (size=3)
          0 => int 320
          1 => string '$c' (length=2)
          2 => int 5
      9 => string '=' (length=1)
      10 => 
        array (size=3)
          0 => int 368
          1 => string 'array' (length=5)
          2 => int 5
      11 => string '(' (length=1)
      12 => 
        array (size=3)
          0 => int 323