title:Mininet-WiFi: A Platform for Hybrid Physical-Virtual Software-Defined
Wireless Networking Research
author:Ramon dos Reis Fontes and
Christian Esteve Rothenberg
Mininet-WiFi: A Platform for Hybrid Physical-Virtual
Software-Deﬁned Wireless Networking Research
Ramon dos Reis Fontes, Christian Esteve Rothenberg
ramonrf,PI:EMAIL
University of Campinas (UNICAMP)
Campinas, Sao Paulo, Brazil
ABSTRACT
Software-Deﬁned Wireless Networking (SDWN) is be-
ing considered an appealing paradigm to design and
operate wireless networks through higher-level abstrac-
tions and programmatic interfaces such as the Open-
Flow protocol. Identiﬁed beneﬁts include cost savings,
service velocity and customization, resource optimiza-
tion through novel approaches to user mobility, traf-
ﬁc oﬄoading, multi-layer and multi-path routing, and
so on. This demonstration features Mininet-WiFi as a
SDWN emulator with the ability to run realistic exper-
iments in hybrid physical-virtual environments, where
users attending the conference are able to experience
ﬁrst hand by connecting their devices and interacting
with virtual WiFi stations in a wireless mesh network
or reach the Internet through the emulated SDWN in-
frastructure. OpenFlow 1.3 metering and IP header
re-writing actions will showcase HTTP ﬂow redirection
and rate limitation of real users’ wireless traﬃc.
CCS Concepts
•Networks → Mobile networks; •Computing method-
ologies → Modeling and simulation;
Keywords
SDN; SDWN; OpenFlow; wireless; mesh networks
1.
INTRODUCTION
Software-Deﬁned Wireless Networking (SDWN) [1]
aims at providing programmatic control of networks
where wireless base stations (e.g. WiFi APs) enforce
packet handling actions (policy decisions) sent by the
Permission to make digital or hard copies of all or part of this work for personal
or classroom use is granted without fee provided that copies are not made or
distributed for proﬁt or commercial advantage and that copies bear this notice
and the full citation on the ﬁrst page. Copyrights for components of this work
owned by others than ACM must be honored. Abstracting with credit is per-
mitted. To copy otherwise, or republish, to post on servers or to redistribute to
lists, requires prior speciﬁc permission and/or a fee. Request permissions from
permissions@acm.org.
SIGCOMM ’16, August 22-26, 2016, Florianopolis , Brazil
c(cid:13) 2016 ACM. ISBN 978-1-4503-4193-6/16/08. . . $15.00
DOI: http://dx.doi.org/10.1145/2934872.2959070
controller(s). SDWN inherit the main principles from
Software-Deﬁned Networking (SDN) [2] such as a pro-
grammatic separation of the control and data planes,
which allows network administrators to specify the be-
havior of the network in a higher-level and simpliﬁed
manner by leveraging the logically centralized view and
ﬁne-control low-level data plane APIs like OpenFlow.
Eﬀorts towards the realization of SDWN [1] are going
on with diﬀerent technological scope and implementa-
tion choices and prioritizing diverse objectives. How-
ever, SDWN roadblocks upfront include the lack of a
common vision and synergistic standardization eﬀorts
in addition to practical challenges such as the lack of
common, available platforms and tools to prototype and
evaluate SDWN proposals through repeatable and real-
istic experiments. Compared to related work approach-
ing the SDWN experimentation gap from a simulation
approach [4], our eﬀorts on Mininet-WiFi [5] depart
from an emulation perspective and aim at supporting
any OS/application stack and embracing real endpoints
blended with the virtual environment.
Demonstration contributions. We showcase the
ability of Mininet-WiFi to support SDWN experiments
combining physical and virtual environments, allowing
conference attendees to connect their WiFi-enabled de-
vices to the emulator running in a laptop with a single
USB-based 802.11 NIC. WiFi APs reachable from the
physical world and the virtual nodes are managed by an
OpenFlow controller and logically connected through
virtual links. In addition, we will show mobile stations
in motion and forming a mesh network, increasing over-
all capacity and coverage. Altogether, the demo cov-
ers (i ) the ability of the wireless networking emulation
in Mininet-WiFi to integrate physical and virtual envi-
ronments, (ii ) AP-management with OpenFlow 1.3 to
realize routing, IP header re-writing, and QoS control
through metering rules, (iii) the emulation of wireless
mesh networks with basic routing capabilities.
2. MININET-WIFI
Mininet-WiFi [5] is a wireless network emulator in
support of SDWN by extending the popular Mininet [3]
with wireless channel emulation and WiFi APs support.
Figure 1: Components and demo workﬂow of physical-virtual wireless SDN with Mininet-WiFi.
The user can select among multiple wireless propagation
and mobility models as well as arbitrary topologies and
wireless network scenarios, including the emulation of
(i) ad hoc and (ii) infrastructure wireless modes.
At the core of Mininet-WiFi is virtualization of 802.11
Linux drivers using mac80211_hwsim, the software sim-
ulator of 802.11 radio(s). The hostapd daemon is inte-
grated in Mininet-WiFi to provide user space software
AP capable of turning normal network interface cards
into access points. Emulation of the wireless channel is
implemented by using the parameters (e.g. node dis-
tance) of the chosen propagation model to re-conﬁgure
in real-time the Linux TC parameters (e.g., bandwidth,
packet loss, delay) of the virtual interfaces.
3. DEMO: PHY-VIRT WIRELESS SDN
We will showcase the researcher-friendly and feature
rich emulation capabilities of Mininet-WiFi in the con-
text of SDWN towards realistic experimental evaluation
in a hybrid physical-virtual testbed setup by allowing
users to connect their 802.11 devices and experience the
demo ﬁrst hand. Figure 1 illustrates the components
and workﬂow of the demo, featuring a topology of 3
virtual APs and 1 physical APs in addition to mobile
stations in the emulated environment.
Initially, the OpenFlow controller discovers the topol-
ogy and installs the required L2 ﬂow entries (Step 0) to
allow connectivity between the APs. Next, the user
connects to AP1 SSID and tries to access any Internet
Web page via HTTP (Step 1). The OpenFlow con-
troller installs one rule to re-write the IP destination
address (Step 2a) to re-direct all user’s HTTP traﬃc
to a captive portal (Step 3) where the user is expected
to authenticate in order to get Internet access and un-
lock the bandwidth limitation enforced as OpenFlow 1.3
metering actions (Step 2b). Finally, the user can com-
municate with the mobiles nodes in the virtual mesh
network, verify the Internet connectivity (Step 4) across
the physical-virtual environment, and assess the avail-
able bandwidth as a function of OpenFlow metering.
4. FINAL REMARKS & FUTURE WORK
Mininet-WiFi is a wireless network emulator in sup-
port of SDWN research as we showcased in a scenario
with ad hoc and infrastructure wireless modes using
a single experimental platform integrating virtual and
physical nodes. Along increasing the overall scalability
and the ﬁdelity of the emulated wireless channel, our
roadmap includes research-friendly features towards re-
peatable and realistic experiments, including the abil-
ity to import packet and signal traces of the physical
medium derived from a real wireless testbed (R2Lab).1
A comprehensive user manual and videos of the demon-
strations are available in our open source repository.2
Acknowledgments
This work was partially supported by grant #2014/18482-
4, S˜ao Paulo Research Foundation (FAPESP).
5. REFERENCES
[1] N. A. Jagadeesan and B. Krishnamachari.
Software-deﬁned networking paradigms in wireless
networks: A survey. ACM Comput. Surv., 2014.
[2] D. Kreutz, F. M. V. Ramos, P. E. Verissimo, C. E.
Rothenberg, S. Azodolmolky, and S. Uhlig.
Software-deﬁned networking: A comprehensive
survey. Proc. of the IEEE, 103(1):14–76, Jan 2015.
[3] B. Lantz, B. Heller, and N. McKeown. A network
in a laptop: Rapid prototyping for software-deﬁned
networks. Hotnets-IX, 2010.
[4] E. P. Mancini, H. Soni, T. Turletti, W. Dabbous,
and H. Tazaki. Demo abstract: Realistic evaluation
of kernel protocols and software deﬁned wireless
networks with dce/ns-3. In ACM MSWiM, 2014.
[5] R. R. Fontes, S. Afzal, S. Brito, M. Santos, and
C. E. Rothenberg. Mininet-WiFi: Emulating
Software-Deﬁned Wireless Networks. In CNSM,
Barcelona, Spain, Nov. 2015. IEEE.
1r2lab.inria.fr
2https://github.com/intrig-unicamp/mininet-wiﬁ/
ap1MeshRoutingTablemininet­wifi>sta1iwdevsta1­mp0mpathdumpoutput:DESTADDRNEXTHOPIFACE42:00:00:00:02:0042:00:00:00:02:00sta1­mp042:00:00:00:04:0042:00:00:00:03:00sta1­mp042:00:00:00:03:0042:00:00:00:03:00sta1­mp0cfg80211nl80211KernelSpacemac80211_hwsimUserSpaceCreatesVirtualWiFiInterfaceswlan1wlan2stationsta1namespacesta1­wlan0stationsta2namespacesta2­wlan0mac80211rootap1namespacewlan3ap1­wlan0TCtoolConfigurationmanagementforwirelessdeviceswlanX...bw,latency,delay,lossandre­orderingProvidesMLMEmanagementserviceswithwhichdriverscanbedevelopedtosupportsoftMACMLMEstationmodeap4ap3ap2sta1sta2sta3sta4sta5sta7PhysicalVirtual/EmulatedWebServerAccessingtheWebap1UsersattheconferenceSpeedtesttechnologyPhysicalOpenFlowControllerhttp://www.speedtest.net/BandwidthMetersta6INTRIGCaptivePortalUsername:Password:Internethttp://10.0.0.107(a)flow­modRW(IP_dst)(b)meter­modBAND1(b)(a)DEMO(a,b)12a2b34Mininet­WiFiincommodityLaptopwithUSB802.11NICL2­FWD