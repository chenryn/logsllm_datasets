# Title: Mininet-WiFi: A Platform for Hybrid Physical-Virtual Software-Defined Wireless Networking Research

**Authors:**
- Ramon dos Reis Fontes
- Christian Esteve Rothenberg

**Affiliation:**
- University of Campinas (UNICAMP)
- Campinas, São Paulo, Brazil

**Contact:**
- ramonrf, PI: EMAIL

## Abstract
Software-Defined Wireless Networking (SDWN) is an emerging paradigm that leverages higher-level abstractions and programmatic interfaces, such as the OpenFlow protocol, to design and operate wireless networks. This approach offers numerous benefits, including cost savings, service velocity, and resource optimization through innovative techniques for user mobility, traffic offloading, multi-layer and multi-path routing, and more. This demonstration showcases Mininet-WiFi, a SDWN emulator capable of running realistic experiments in hybrid physical-virtual environments. Attendees can connect their devices to the emulator and interact with virtual WiFi stations in a wireless mesh network or access the Internet via the emulated SDWN infrastructure. The demo will highlight HTTP flow redirection and rate limitation using OpenFlow 1.3 metering and IP header re-writing actions.

**CCS Concepts:**
- Networks → Mobile networks
- Computing methodologies → Modeling and simulation

**Keywords:**
- SDN, SDWN, OpenFlow, wireless, mesh networks

## 1. Introduction
Software-Defined Wireless Networking (SDWN) [1] aims to provide programmable control over wireless networks, where base stations (e.g., WiFi APs) enforce packet handling policies dictated by a controller. SDWN inherits key principles from Software-Defined Networking (SDN) [2], such as the separation of the control and data planes, enabling administrators to specify network behavior in a high-level, simplified manner using logically centralized views and low-level data plane APIs like OpenFlow.

Efforts to realize SDWN are ongoing, with different technological scopes, implementation choices, and objectives. However, challenges include the lack of a common vision, standardization efforts, and practical tools for prototyping and evaluating SDWN proposals. Compared to simulation-based approaches [4], our work on Mininet-WiFi [5] focuses on emulation, supporting any OS/application stack and integrating real endpoints with the virtual environment.

### Demonstration Contributions
- **Hybrid Environment Support:** Mininet-WiFi allows attendees to connect their WiFi-enabled devices to the emulator running on a laptop with a single USB-based 802.11 NIC.
- **OpenFlow Management:** WiFi APs and virtual nodes are managed by an OpenFlow controller, enabling routing, IP header re-writing, and QoS control.
- **Wireless Mesh Emulation:** The demo includes mobile stations forming a mesh network, enhancing overall capacity and coverage.

## 2. Mininet-WiFi
Mininet-WiFi [5] is a wireless network emulator that extends the popular Mininet [3] platform to support SDWN. It includes wireless channel emulation and WiFi AP support, allowing users to select among various propagation and mobility models, and create arbitrary topologies and wireless network scenarios, including ad hoc and infrastructure modes.

At its core, Mininet-WiFi uses mac80211_hwsim to virtualize 802.11 Linux drivers. The hostapd daemon is integrated to turn normal network interface cards into software-defined APs. The wireless channel is emulated by dynamically configuring Linux TC parameters based on the chosen propagation model.

## 3. Demo: Physical-Virtual Wireless SDN
The demo will showcase the researcher-friendly and feature-rich capabilities of Mininet-WiFi in a hybrid physical-virtual testbed. Users can connect their 802.11 devices and experience the following:

1. **Topology Discovery and Connectivity:** The OpenFlow controller discovers the topology and installs L2 flow entries to enable connectivity between APs.
2. **HTTP Flow Redirection:** When a user connects to AP1 and tries to access a web page, the controller rewrites the IP destination address to redirect HTTP traffic to a captive portal.
3. **Captive Portal Authentication:** The user authenticates at the captive portal to unlock Internet access and bandwidth limitations enforced via OpenFlow 1.3 metering actions.
4. **Mesh Network Interaction:** The user can communicate with mobile nodes in the virtual mesh network and verify Internet connectivity across the physical-virtual environment.

## 4. Final Remarks & Future Work
Mininet-WiFi supports SDWN research by integrating virtual and physical nodes in a single experimental platform. Our roadmap includes enhancing scalability and fidelity, and adding features for repeatable and realistic experiments, such as importing packet and signal traces from real wireless testbeds (R2Lab). Comprehensive documentation and demonstration videos are available in our open-source repository.

**Acknowledgments:**
This work was partially supported by grant #2014/18482-4, São Paulo Research Foundation (FAPESP).

## 5. References
[1] N. A. Jagadeesan and B. Krishnamachari. "Software-Defined Networking Paradigms in Wireless Networks: A Survey." ACM Comput. Surv., 2014.

[2] D. Kreutz, F. M. V. Ramos, P. E. Verissimo, C. E. Rothenberg, S. Azodolmolky, and S. Uhlig. "Software-Defined Networking: A Comprehensive Survey." Proc. of the IEEE, 103(1):14–76, Jan 2015.

[3] B. Lantz, B. Heller, and N. McKeown. "A Network in a Laptop: Rapid Prototyping for Software-Defined Networks." Hotnets-IX, 2010.

[4] E. P. Mancini, H. Soni, T. Turletti, W. Dabbous, and H. Tazaki. "Demo Abstract: Realistic Evaluation of Kernel Protocols and Software-Defined Wireless Networks with DCE/NS-3." In ACM MSWiM, 2014.

[5] R. R. Fontes, S. Afzal, S. Brito, M. Santos, and C. E. Rothenberg. "Mininet-WiFi: Emulating Software-Defined Wireless Networks." In CNSM, Barcelona, Spain, Nov. 2015. IEEE.

**Additional Resources:**
- r2lab.inria.fr
- https://github.com/intrig-unicamp/mininet-wifi