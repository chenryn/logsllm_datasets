While cargo was compiling traverse, I encountered the error `thread 'rustc'
panicked at 'index out of bounds: the len is 0 but the index is 0'`.
    $ uname -rsm
    Linux 3.13.0-24-generic x86_64
    $ rustc --version --verbose
    rustc 1.0.0-dev
    binary: rustc
    commit-hash: unknown
    commit-date: unknown
    host: x86_64-unknown-linux-gnu
    release: 1.0.0-dev
    Compiling traverse v0.0.6
    error: internal compiler error: unexpected panic
    note: the compiler unexpectedly panicked. this is a bug.
    note: we would appreciate a bug report: http://doc.rust-lang.org/complement-bugreport.html
    note: run with `RUST_BACKTRACE=1` for a backtrace
    thread 'rustc' panicked at 'index out of bounds: the len is 0 but the index is 0', /build/buildd/rust-nightly-201501310408~1d00c54~trusty/src/librustc/middle/infer/region_inference/mod.rs:1015
Backtrace:
    stack backtrace:
       1:     0x7f52fa93e4d0 - sys::backtrace::write::hab6dd99acb511764H8t
       2:     0x7f52fa961840 - 
       3:     0x7f52fa8cde50 - rt::unwind::begin_unwind_inner::h3266fe1d96f60e3fAZA
       4:     0x7f52fa8ce970 - rt::unwind::begin_unwind_fmt::he5da4c6aaeb74bfa6XA
       5:     0x7f52fa9616a0 - rust_begin_unwind
       6:     0x7f52fa9a9a50 - panicking::panic_fmt::h18479da70a65102cARv
       7:     0x7f52fa9b2120 - panicking::panic_bounds_check::h3eb82e89c0e73253BQv
       8:     0x7f52f8ab4000 - 
       9:     0x7f52f8ab3c90 - middle::infer::region_inference::RegionVarBindings::resolve_regions::hf123a4c5108ce144Yyv
      10:     0x7f52f8ad3400 - middle::infer::InferCtxt::resolve_regions_and_report_errors::h70d3d0c25f8018a9d8z
      11:     0x7f52fa0a61a0 - 
      12:     0x7f52fa0ae7d0 - 
      13:     0x7f52fa0b4e20 - 
      14:     0x7f52fa0b4e20 - 
      15:     0x7f52fa17e550 - 
      16:     0x7f52fa179030 - check_crate::hcad51444396ed313IEz
      17:     0x7f52faec7b70 - driver::phase_3_run_analysis_passes::h7f0251bcf43e0862NFa
      18:     0x7f52faeaef50 - driver::compile_input::h10073932bcf4c3a9Bba
      19:     0x7f52faf74f50 - 
      20:     0x7f52faf735e0 - 
      21:     0x7f52faf72510 - 
      22:     0x7f52fa9cbe80 - 
      23:     0x7f52fa9cbe70 - rust_try
      24:     0x7f52faf727c0 - 
      25:     0x7f52fa94e010 - 
      26:     0x7f52f4cb20c0 - start_thread
      27:     0x7f52fa54dec9 - __clone
      28:                0x0 - 