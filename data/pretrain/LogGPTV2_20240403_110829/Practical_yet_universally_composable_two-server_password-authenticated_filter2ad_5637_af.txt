The protocols, as instantiated above, securely realize F2PASS in both the random-oracle and FCA-hybrid models. A detailed proof of Theorem 1 is provided in the full version of the paper [10]; here, we offer a high-level overview.

### Proof Outline

First, we conceptually view all honest participants as a single interactive Turing machine (ITM) called the "challenger." This challenger receives all inputs from the environment \( E \) intended for honest parties and outputs responses back to \( E \). We define a sequence of games with corresponding challengers, denoted \( C_i \), where the first game \( C_1 \) runs the real protocol on behalf of the honest participants, and the last game \( C_{10} \) runs the ideal protocol via the ideal functionality. 

Let \( \text{view}_i(\text{sid}, 1^k) \) denote the view that \( E \) receives when interacting with \( C_i \) for session identifier \( \text{sid} \) and security parameter \( k \); we often omit \( \text{sid} \) and \( 1^k \). We briefly describe each challenger \( C_i \) and explain why each view \( \text{view}_i \) is indistinguishable from \( \text{view}_{i-1} \).

#### Challenger \( C_1 \)
- **Description**: The challenger runs all honest parties using the real protocol with inputs directly from the environment.
- **Indistinguishability**: \( \text{view}_1 \) is identical to the view that \( E \) receives when honest participants execute the protocol.

#### Challenger \( C_2 \)
- **Description**: Identical to \( C_1 \), but halts if it receives values \( (\text{PS}_i, m, \sigma) \) where \( \text{PS}_i \) is an honest server's signature verification key, \( \sigma \) is a valid signature under \( \text{PS}_i \) of message \( m \), and \( m \) has never been signed by \( S_i \).
- **Indistinguishability**: \( \text{view}_2 \approx \text{view}_1 \) by the unforgeability of the signature scheme.

#### Challenger \( C_3 \)
- **Description**: Identical to \( C_2 \), but when an honest user uses \( \text{enc}_2 \) to send an encryption of plaintext \( m \) to an honest server, the ciphertext is computed as an encryption of \( 1|m| \).
- **Indistinguishability**: \( \text{view}_3 \approx \text{view}_2 \) by the CCA-2 security of \( \text{enc}_2 \).

#### Challenger \( C_4 \)
- **Description**: Identical to \( C_3 \), but the public key \( \text{PK} \) in the CRS is generated such that \( C_4 \) knows the corresponding secret key \( \text{SK} \). \( C_4 \) also maintains a registry \( R \) that will eventually become the ideal functionality \( F \).
- **Indistinguishability**: This step is purely conceptual since \( \text{PK} \) is distributed exactly as in a real CRS.

#### Challenger \( C_5 \)
- **Description**: Identical to \( C_4 \), but whenever an honest party performs a zero-knowledge proof, it uses the zero-knowledge simulator instead of the proverâ€™s algorithm.
- **Indistinguishability**: \( \text{view}_5 \approx \text{view}_4 \) by the indistinguishability of simulation.

#### Challenger \( C_6 \)
- **Description**: Identical to \( C_5 \), but when an honest party \( H \) computes \( c = \text{enc}_{\text{PK}}(m; r) \) under the CRS public key \( \text{PK} \), \( H \) instead computes \( c = \text{enc}_{\text{PK}}(1|m|; r) \).
- **Indistinguishability**: \( \text{view}_6 \approx \text{view}_5 \) by semantic security of \( \text{enc} \) and the simulation-soundness and indistinguishability of the ZK proof system.

#### Challenger \( C_7 \)
- **Description**: Identical to \( C_6 \), but modifies how the ciphertext \( E \) is computed in Step R3 and how the ciphertext \( \tilde{C}' \) is formed in Step R5 based on whether the query is corrupt or intact.
- **Indistinguishability**: \( \text{view}_7 \approx \text{view}_6 \) by the simulation-soundness of the proof system and the semantic security of \( \text{enc} \).

#### Challenger \( C_8 \)
- **Description**: Identical to \( C_7 \), but computes the ciphertext \( E_1 \) in Step R2 as an encryption of 1 and modifies the computation of \( \tilde{C}'_1 \) in Step R4 based on whether the query is corrupt or intact.
- **Indistinguishability**: \( \text{view}_8 \approx \text{view}_7 \) by the simulation-soundness of the proof system and the semantic security of \( \text{enc} \).

#### Challenger \( C_9 \)
- **Description**: Identical to \( C_8 \), but halts if certain bad events occur, such as an honest user retrieving the wrong key or an honest server encrypting its key share under \( \text{PK}_u \) in a corrupt retrieve query.
- **Indistinguishability**: \( \text{view}_9 \approx \text{view}_8 \) by the simulation-soundness of the proof system and the fact that an honest server's signature implies acceptance of preceding proofs.

#### Challenger \( C_{10} \)
- **Description**: In this game, the environment receives a view identical to \( \text{view}_9 \), but \( C_{10} \) internally runs the full-fledged ideal functionality \( F \) and all honest participants run the ideal protocol with \( F \). Interaction with the adversary is now based solely on what \( F \) sends to the ideal-world adversary.
- **Indistinguishability**: \( \text{view}_{10} \approx \text{view}_9 \) because each message sent by \( C_{10} \) to \( A \) and \( E \) is computed exactly as in \( C_9 \).

### Acknowledgments
We thank Kristiyan Haralambiev, Stas Jarecki, Anja Lehmann, Victor Shoup, and the anonymous referees for their valuable feedback and comments on earlier versions of this work. This work was supported in part by the European Commission through the ICT Programme under Contract ICT-2007-216676 ECRYPT II. The first and third authors were supported in part by EC Grant Agreement 257782 ABC4Trust. The second author is supported by the United States NSF grants 1012060, 0964379, and 0831293.

### References
[1] A. Bagherzandi, S. Jarecki, N. Saxena, and Y. Lu. Password-protected secret sharing. In ACM CCS 2011.
...
[37] M. Szydlo and B. S. Kaliski Jr. Proofs for two-server password authentication. In CT-RSA 2005.