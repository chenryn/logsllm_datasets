d
w
d
n
a
B
e
g
a
r
e
v
A
400
350
300
250
200
150
100
50
0
HC - Cont-Agnostic
HC - Cont-Aware
Overall - Cont-Agnostic
Overall - Cont-Aware
 100
 200
 300
 400
 500
 600
Average Time (sec) between Tree Disconnections
GrandChallenge
Slashdot
Rally
SIG C O M M2002
SOSP2003
Figure 12: Cumulative distribution of time between tree
reductions for all nodes under diﬀerent backoﬀ schemes.
Figure 14: 10th-percentile of received bandwidth for
high contributors and all nodes in each trace.
x
e
d
n
I
e
c
r
u
o
s
e
R
 1.4
 1.2
 1
 0.8
 0.6
 0.4
 0.2
 0
 0
Tree0
Tree1
Tree2
Tree3
perfect balance
 200
 400
 600
 800
 1000
 1200
Time (Seconds)
)
c
e
s
(
s
n
o
i
i
t
c
e
n
n
o
c
s
D
n
e
e
w
e
b
e
m
T
e
g
a
r
e
v
A
t
i
1400
1200
1000
800
600
400
200
0
Cont-Agnostic
Cont-Aware
GrandChallenge
Slashdot
Rally
SIGCOMM2002
SOSP2003
Figure 13: Comparison of resource indices in each tree
as compared to perfect load balancing.
Figure 15: Median of average time between tree reduc-
tions for all nodes in each trace.
should backoﬀ when they are unable to connect by compar-
ing two systems: Backoﬀ and No-Backoﬀ.
In Figure 11,
we observe that although No-Backoﬀ improves the overall
performance slightly, Figure 12 shows that Backoﬀ signiﬁ-
cantly improves system stability. Since the environment we
consider is resource-scare, Excess nodes are very likely be
preempted. By trying less frequently to connect to an Ex-
cess tree unless more resources are available, an Excess node
is less likely to be quickly preempted, leading to less frequent
reductions in the number of connected trees.
Consider Tiexcess in Backoﬀ Timer: In Backoﬀ, in addi-
tion to double the backoﬀ timer after each consecutive fail-
ure in connection attempts for an Excess node, the backoﬀ
time is scaled by the number of Excess trees the node is cur-
rently connected, Tiexcess . Figure 12 compares the stability
of Backoﬀ w/o Tiexcess with Backoﬀ. We see that Backoﬀ
leads to a more stable system than Backoﬀ w/o Tiexcess by
forcing peers receiving in more Excess trees to wait longer
before the next reconnection attempt because even if they
get connected, they are likely to be immediately preempted
by other Excess nodes with a lower Tiexcess .
6.5.3 Load Balancing
We believe that choosing to balance the number of Ex-
cess nodes in each tree would approximately balance the
resources in each tree in resource-scarce environments. Fig-
ure 13 plots four dashed curves showing the resource index
for each tree over time. The solid line represents the ideal
RI over time if we have perfect balancing. Although at some
instant, the RI for each tree deviates from the ideal curve,
the resources each tree have remain close to perfect balanc-
ing for the most of the duration. Thus, we conclude that our
heuristics maintain trees in reasonable balance in resource-
scarce environments.
6.6 Sensitivity to Trace
In this section, we evaluate our contribution-aware heuris-
tics under environments with varying resource levels by us-
ing ﬁve diﬀerent traces. We include Slashdot among these
for comparison to results in previous sections.
Figure 14 shows the 10th-percentile performance of the
entire set of nodes and high contributors across each trace
for Cont-Aware and Cont-Agnostic. That is, 90% of all
nodes see better performance than the numbers presented
here. The traces are ordered based on their resource in-
dices, with the lowest RI on the very left. The three traces
on the left are resource-scarce whereas the two on the right
are resource-rich. Each trace has 4 bars, with 2 bars for
high contributors and 2 bars for all nodes in Cont-Aware
and Cont-Agnostic. For resource-scarce traces, our heuris-
tics oﬀer improved tail performance for all nodes and high
contributors alone. The signiﬁcant improvement for high
contributors conﬁrm that they are prioritized for resources
in Cont-Aware whereas improvement for all nodes implies
their received bandwidth is pulled toward the mean. For
resource-rich traces, we see similar performance – everyone
successfully receives the source rate.
In Figure 15, we examine the sensitivity of the average
time between reductions in the number of connected trees to
diﬀerent traces by comparing the median value of all nodes.
)
c
e
s
(
i
e
m
T
n
o
i
t
c
e
n
n
o
c
e
R
e
g
a
r
e
v
A
HC - Cont-Agnostic
HC - Cont-Aware
LC - Cont-Agnostic
LC - Cont-Aware
160
140
120
100
80
60
40
20
0
GrandChallenge
Slashdot
Rally
SIGCOMM2002
SOSP2003
Figure 16: Average post-preemption reconnection time
for high contributors and all nodes in each trace.
Notice that for resource-scarce traces, Cont-Aware causes
nodes to experience reductions more frequently. In resource-
rich environments, reductions are infrequent for both as
most nodes can connect to empty slots.
Finally, we compare the reconnection time after preemp-
tions in Figure 16. Note that for all resource-scarce envi-
ronments our heuristics signiﬁcantly improve reconnection
time for both high and low contributors.
In resource-rich
environments, we oﬀer substantially similar recovery time.
7. SUMMARY
In this paper, we present the design and implementation
experience of an overlay broadcasting system targeted at
environments where not all nodes can receive the source
rate and node contributions are heterogeneous. To incenvi-
tizes nodes to increase their contributions, the system is
contribution-aware: it distributes more bandwidth to nodes
which contribute more. We have conducted a detailed eval-
uation of the system on PlanetLab using traces from real
broadcasts, which helps demonstrate the beneﬁts of the heuris-
tics we introduce. When compared with contribution-agnostic
system, our results indicate that in resource-scarce environ-
ments, our contribution-aware system can improve the 10th-
percentile performance of all nodes and high contributors
alone by 2-35% and 10-240%, respectively. The system also
distributes the available bandwidth more equitably among
nodes of similar contributions. For example, in one trace,
bandwidth received by 90% of low contributors is within 100
kbps of the mean. Although nodes in our system suﬀer tree
reductions a little more frequently, they require only 70% as
much time to recover. We believe these results are promis-
ing and display the potential to extend overlay broadcasting
toward ubiquitous deployment in mainstream Internet.
8. REFERENCES
[1] S. Banerjee, B. Bhattacharjee, and C. Kommareddy. Scalable
Application Layer Multicast. In Proceedings of ACM
SIGCOMM, Aug. 2002.
[2] S. Buchegger and J. Boudec. A robust reputation system for
p2p and mobile ad-hoc networks. In Proceedings of the Second
Workshop on Economics of Peer-to-Peer Systems, June 2003.
[3] M. Castro, P. Druschel, A. Kermarrec, A. Nandi, A. Rowstron,
and A. Singh. SplitStream: High-bandwidth Content
Distribution in Cooperative Environments. In Proceedings of
SOSP, 2003.
[4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron.
Scribe: A Large-Scale and Decentralized Application-Level
Multicast Infrastructure. In IEEE Journal on Selected Areas
in Communications Vol. 20 No. 8, Oct 2002.
[5] P. Chou, H. Wang, and V. Padmanabhan. Layered Multiple
Description Coding. In In Proceedings of Packet Video
Workship, 2003.
[6] Y. Chu, A. Ganjam, T. S. E. Ng, S. G. Rao,
K. Sripanidkulchai, J. Zhan, and H. Zhang. Early Experience
with an Internet Broadcast System Based on Overlay
Multicast. In Proceedings of USENIX, June 2004.
[7] Y. Chu, S. G. Rao, and H. Zhang. A Case for End System
Multicast. In Proceedings of ACM Sigmetrics, June 2000.
[8] D. Dutta, A. Goel, R. Govindan, and H. Zhang. The design of
a distributed rating scheme for peer-to-peer systems. In
Proceedings of the First Workshop on Economics of
Peer-to-Peer Systems, June 2003.
[9] Esm broadcast system. http://esm.cs.cmu.edu/.
[10] P. Francis. Yoid: Extending the Internet Multicast
Architecture. Apr 2000.
[11] V. K. Goyal. Multiple Description Coding: Compression Meets
the Network. IEEE Signal Processing Magazine, Vol. 18,
pages 74–93, 2001.
[12] Y. hua Chu, J. Chuang, and H. Zhang. A case for taxation in
peer-to-peer streaming broadcast. In PINS ’04: Proceedings of
the ACM SIGCOMM workshop on Practice and theory of
incentives in networked systems, pages 205–212, New York,
NY, USA, 2004. ACM Press.
[13] J. Jannotti, D. Giﬀord, K. L. Johnson, M. F. Kaashoek, and
J. W. O. Jr. Overcast: Reliable Multicasting with an Overlay
Network. In Proceedings of the Fourth Symposium on
Operating System Design and Implementation (OSDI), Oct.
2000.
[14] D. Kostic, A. Rodriguez, J. Albrecht, and A. Vahdat. Bullet:
High Bandwidth Data Dissemination Using an Overlay Mesh.
In Proceedings of SOSP, 2003.
[15] H. T. Kung and C.-H. Wu. Diﬀerentiated admission for
peer-to-peer systems: Incentivizing peers to contribute their
resources. In Proceedings of the First Workshop on
Economics of Peer-to-Peer Systems, June 2003.
[16] J. Liebeherr and M. Nahas. Application-layer Multicast with
Delaunay Triangulations. In Proceedings of IEEE Globecom,
Nov. 2001.
[17] V. Padmanabhan, H. Wang, P. Chou, and K. Sripanidkulchai.
Distributing Streaming Media Content Using Cooperative
Networking. In Proceedings of NOSSDAV, May 2002.
[18] D. Pendarakis, S. Shi, D. Verma, and M. Waldvogel. ALMI:
An Application Level Multicast Infrastructure. In Proceedings
of 3rd Usenix Symposium on Internet Technologies &
Systems (USITS), March 2001.
[19] S. Ratnasamy, M. Handley, R. Karp, and S. Shenker.
Application-level Multicast using Content-Addressable
Networks. In Proceedings of NGC, 2001.
[20] A. Rowstron and P. Druschel. Pastry: Scalable, Distributed
Object Location and Routing for Large-Scale Peer-to-Peer
Systems. In IFIP/ACM International Conference on
Distributed Systems Platforms (Middleware), 2001.
[21] K. Sripanidkulchai, A. Ganjam, B. Maggs, and H. Zhang. The
Feasibility of Supporting Large-Scale Live Streaming
Applications with Dynamic Application End-Points. In
Proceedings of ACM SIGCOMM, 2004.
[22] I. Stoica, R. Morris, D. Karger, M. F. Kaashoek, and
H. Balakrishnan. Chord: A Scalable Peer-to-Peer Lookup
Service for Internet Applications. In Proceedings of ACM
SIGCOMM, 2001.
[23] Tmesh broadcast system.
http://warriors.eecs.umich.edu/tmesh/tmeshv.html.
[24] W. Wang, D. Helder, S. Jamin, and L. Zhang. Overlay
Optimizations for End-host Multicast. In Proceedings of
Fourth International Workshop on Networked Group
Communication (NGC), Oct. 2002.
[25] X. Zhang, J. Liu, B. Li, and T.-S. P. Yum.
DONet/CoolStreaming: A Data-driven Overlay Network for
Live Media Streaming. In Proceedings of IEEE INFOCOM,
2005.
[26] B. Zhao, J. Kubiatowicz, and A. Joseph. Tapestry: An
Infrastructure for Wide-area Fault-tolerant Location and
Routing. U. C. Berkeley Technical Report
UCB//CSD-01-1141, Apr 2000.
[27] S. Q. Zhuang, B. Y. Zhao, J. D. Kubiatowicz, and A. D.
Joseph. Bayeux: An Architecture for Scalable and
Fault-Tolerant Wide-Area Data Dissemination. In Proceedings
of NOSSDAV, Apr. 2001.