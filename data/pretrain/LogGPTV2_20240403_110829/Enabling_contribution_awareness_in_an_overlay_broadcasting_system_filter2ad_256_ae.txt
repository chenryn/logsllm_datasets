# 优化后的文本

## 摘要
本文介绍了在资源受限且节点贡献异质的环境中，一种覆盖广播系统的设计与实现经验。为了激励节点增加其贡献，该系统是基于贡献感知的：它向贡献更多的节点分配更多带宽。我们使用PlanetLab上的真实广播追踪数据对系统进行了详细的评估，结果表明，在资源受限的环境中，我们的贡献感知系统可以将所有节点和高贡献节点的第10百分位性能分别提高2-35%和10-240%。系统还更公平地分配了类似贡献节点之间的可用带宽。例如，在一个追踪中，90%的低贡献节点所接收的带宽在平均值的100 kbps以内。尽管在我们的系统中，节点会稍微频繁地经历树减少，但它们只需要70%的时间来恢复。我们认为这些结果很有前景，并展示了将覆盖广播扩展到主流互联网的潜力。

## 图表说明

### 图12
**标题**：不同回退方案下所有节点之间树断开时间的累积分布。
**描述**：此图显示了在不同的回退方案（Cont-Agnostic 和 Cont-Aware）下，所有节点之间树断开时间的累积分布。横轴表示平均时间（秒），纵轴表示累积分布。

### 图14
**标题**：每个追踪中高贡献者和所有节点的接收到带宽的第10百分位。
**描述**：此图显示了在不同追踪（GrandChallenge, Slashdot, Rally, SIGCOMM2002, SOSP2003）中，高贡献者和所有节点在Cont-Agnostic和Cont-Aware系统下的接收到带宽的第10百分位。横轴表示不同的追踪，纵轴表示带宽（Mbps）。

### 图13
**标题**：每个树中的资源指数与完美负载均衡的比较。
**描述**：此图显示了每个树在不同时间点的资源指数，并与理想情况下的完美负载均衡进行比较。横轴表示时间（秒），纵轴表示资源指数。

### 图15
**标题**：每个追踪中所有节点的树减少平均时间的中位数。
**描述**：此图显示了在不同追踪中，所有节点的树减少平均时间的中位数。横轴表示不同的追踪，纵轴表示时间（秒）。

### 图16
**标题**：每个追踪中高贡献者和所有节点的平均抢占后重连时间。
**描述**：此图显示了在不同追踪中，高贡献者和所有节点的平均抢占后重连时间。横轴表示不同的追踪，纵轴表示时间（秒）。

## 实验结果
### 回退机制的影响
在图11中，我们观察到虽然No-Backoff略微提高了整体性能，但图12显示Backoff显著提高了系统的稳定性。在资源受限的环境中，多余的节点非常容易被抢占。通过在更多资源可用之前减少尝试连接到多余树的频率，多余的节点不太可能被快速抢占，从而减少了连接树数量的频繁减少。

### 负载均衡
我们认为平衡每个树中的多余节点数量可以在资源受限的环境中近似平衡每个树的资源。图13绘制了四个虚线曲线，显示了每个树随时间变化的资源指数。实线代表如果我们在完美平衡的情况下理想的RI。虽然在某些时刻，每个树的RI偏离理想曲线，但在大多数时间内，每个树的资源保持接近完美的平衡。因此，我们得出结论，我们的启发式方法在资源受限的环境中维持了合理的树平衡。

### 对追踪的敏感性
在本节中，我们使用五个不同的追踪来评估我们的贡献感知启发式方法在不同资源水平环境下的表现。图14显示了Cont-Aware和Cont-Agnostic系统中所有节点和高贡献者在每个追踪中的第10百分位性能。对于资源受限的追踪，我们的启发式方法为所有节点和高贡献者提供了更好的尾部性能。对于资源丰富的追踪，我们看到了类似的表现——每个人都成功地收到了源速率。

在图15中，我们通过比较所有节点的中位值，检查了不同追踪下连接树减少平均时间的敏感性。对于资源受限的追踪，Cont-Aware导致节点更频繁地经历减少。在资源丰富的环境中，由于大多数节点可以连接到空闲槽，减少是不频繁的。

最后，我们在图16中比较了抢占后的重连时间。注意，在所有资源受限的环境中，我们的启发式方法显著改善了高低贡献者的重连时间。在资源丰富的环境中，我们提供的恢复时间基本相同。

## 总结
本文介绍了在资源受限且节点贡献异质的环境中，一种覆盖广播系统的设计与实现经验。通过激励节点增加其贡献，系统能够更公平地分配带宽，并显著改善了资源受限环境下的性能。我们相信这些结果是有希望的，并展示了将覆盖广播扩展到主流互联网的潜力。

## 参考文献
[略]

---

通过上述优化，文本变得更加清晰、连贯和专业。图表说明也更加详细，有助于读者更好地理解实验结果。