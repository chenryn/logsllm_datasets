第4 步：尝试使⽤ ChatGPT 来把验收标准转化为UML 设计图 L2 L2 L2 L1 L1 L2 L1 L2 L2
第5 步：使⽤ ChatGPT ⽣成 API ，在通过Copilot ⽣成代码 局限性：
• 每次反馈结果都不⼀致，需要⼈⼯来判断这个结果是否“合理/有
⽤”, 能否进⼊下⼀步；
6 ...
第 步：
• 需要结合经验迭代优化给出更细的细节要求提示，⽣成结果才会
更好；
x ChatGPT
第 步：使⽤ ⽣成发布⽂档
• …
0-1
产品设计： 产品设计启发（⼿动）
GPT
现状：⽣成只是看上去可⽤的，还需要⼈⼯校准，贴合公司组织结构，与组织的实际情况贴合
提示词 ⼈⼯校准
我在设计⼀个 OKR 系统 ，想实现⼀个 员⼯对⻬团队⽬标，发布 OKR 的功能， OKR基础功能清单
需要考虑什么点？
● 制定OKR，并⽀持设置对⻬，包括：垂直对⻬和⽔平对⻬
● 透明多维度的OKR信息，包括：时间、部⻔、进度状态等
设计⼀个 OKR 系统需要考虑以下⼏个点：
● 更新OKR进度与内容，并带有“信⼼指数”功能
● 对OKR进⾏评分，并能灵活设置评分标准
● 设定⽬标：确定团队的⻓期⽬标和短期⽬标，确保员⼯可以理解⽬标，并能够将其转
● 管理⽇常任务，并将此任务与OKR建⽴关联
化为可量化的 OKR。
● 制定 OKR：制定关键结果，确保它们是可衡量的、具有挑战性的，并且与团队和公
司的⽬标保持⼀致。
OKR管理⼯具加分项
● 分配 OKR：将 OKR 分配给每个员⼯，并为每个 OKR 设定期限和优先级。
● 监控进展：确保每个员⼯都能够及时更新他们的进展，并向团队报告他们的进展情
况。 ● 清晰呈现OKR对⻬效果
● 跟踪结果：跟踪每个员⼯达成他们的 OKR 的进度，并为整个团队的 OKR 设定⼀个 ● 灵活设置OKR使⽤层次，包括：组织、部⻔、团队、个⼈等
跟踪系统。
● 对OKR执⾏过程提供“社交化”特性，包括：提醒、赞赏、评
● 提供反馈：为员⼯提供实时反馈，并在必要时提供⽀持和指导，以确保他们能够达成
论、勋章等
他们的 OKR。
● 可视化数据报表
● 评估绩效：使⽤ OKR 系统来评估每个员⼯的绩效，并将其与他们的 OKR 相关联。
●
多种产品形态，且实现数据同步，包括：⽹⻚端、桌⾯端、
● 持续改进：定期审查 OKR 系统的效果，并进⾏必要的调整，以确保它能够⽀持团队
和公司的⽬标。 移动端等
0-1
产品设计： 产品设计启发（⼯具化）
Copilot
产品经理 ：帮助产品经理、需求分析师进⾏创意和策略⽅⾯的研究与分析
标准实践
产品经理⽇常
GPT 3.5 + LangChain + 微调模型（产品领域）
（转换化为 prompt）
prompt
懂点 的产品专家
出⾃： https://www.boba-ai.com （By Thoughtwoker）
架构设计：领域模型设计与代码化输出
⼈⼯优化的点：根据我们的理解（上下⽂）完善了模型
提示词
AI ⽣成的初步领域模型 ⼈⼯优化后的领域模型
我在设计⼀个 OKR 系统，请根据下⾯的需求，根据你的
理解设计领域模型，并使⽤ PlantUML 返回。
###
作为⼀个团队负责⼈，我希望能够创建和更新团队的⻓期和短期⽬标，以便能够将它们转化为
可量化的 OKR。
作为⼀个员⼯，我希望能够创建和更新我的 OKR，以便将我的⽬标对⻬到团队和公司的⽬标
上。
作为⼀个团队负责⼈，我希望能够分配 OKR 给每个员⼯，并设置期限和优先级，以便能够跟踪
整个团队的进展情况。
作为⼀个员⼯，我希望能够及时更新我的 OKR 进展情况，并向团队报告我的进展情况，以便能
够保持团队的透明度和协同性。
作为⼀个团队负责⼈，我希望能够跟踪每个员⼯ OKR 的进度，并将其与他们的绩效相关联，以
便能够评估每个员⼯的绩效。
作为⼀个团队负责⼈，我希望能够定期审查 OKR 系统的效果，并进⾏必要的调整，以便能够持
续改进整个系统的效果和价值。
作为⼀个团队负责⼈，我希望能够提供⽀持和指导，以帮助员⼯达成他们的 OKR，以便能够⽀
持员⼯的发展和团队的成功。
作为⼀个员⼯，我希望能够获得实时反馈和⽀持，以便能够不断地改进我的表现和达成我的
OKR
###
注：结合⾃研、开源的 AutoDev 插件绘制
API
架构设计：⾯向 管理
API AI API
团队需要将 规范提供给 ，否则⽣成的 就不符合规范
提示词 AI ⽣成的初步 API
我在设计⼀个 OKR 系统，请根据下⾯的需求，根据你的理解设计
API名称 API功能 请求⽅法 请求参数 返回参数
API。要求：
/teams/create POST team_name (string), long_term_goal (string), team_id (int), team_name (string),
创建团队
1. API 功能不重复（包含 request 和 response） short_term_goal (string) long_term_goal (string), short_term_goal (string)
2. 以表格的形式返回 API
/teams/update PUT team_id (int), team_name (string), team_id (int), team_name (string),
更新团队信息
long_term_goal (string), short_term_goal (string) long_term_goal (string), short_term_goal (string)
需求：
###
作为⼀个团队负责⼈，我希望能够创建和更新团队的⻓期和短期⽬标，以便能够将它们转化为可量化的 OKR。
/employees/okr/ 创建员⼯ OKR POST employee_id (int), objective (string), key_results okr_id (int), employee_id (int), objective (string),
作为⼀个员⼯，我希望能够创建和更新我的 OKR，以便将我的⽬标对⻬到团队和公司的⽬标上。 create (string), deadline (date), priority (int), team_id key_results (string), deadline (date), priority (int),
作为⼀个团队负责⼈，我希望能够分配 OKR 给每个员⼯，并设置期限和优先级，以便能够跟踪整个团队的进展 (int) team_id (int)
情况。
作为⼀个员⼯，我希望能够及时更新我的 OKR 进展情况，并向团队报告我的进展情况，以便能够保持团队的透
/employees/okr/ 更新员⼯ OKR PUT okr_id (int), objective (string), key_results (string), okr_id (int), employee_id (int), objective (string),
明度和协同性。
update deadline (date), priority (int) key_results (string), deadline (date), priority (int),
作为⼀个团队负责⼈，我希望能够跟踪每个员⼯ OKR 的进度，并将其与他们的绩效相关联，以便能够评估每个
team_id (int)
员⼯的绩效。
作为⼀个团队负责⼈，我希望能够定期审查 OKR 系统的效果，并进⾏必要的调整，以便能够持续改进整个系统
的效果和价值。 /teams/okr/ 分配 OKR 给员⼯ POST okr_id (int), employee_id (int) okr_id (int), employee_id (int), team_id (int)
assign
作为⼀个团队负责⼈，我希望能够提供⽀持和指导，以帮助员⼯达成他们的 OKR，以便能够⽀持员⼯的发展和
团队的成功。
作为⼀个员⼯，我希望能够获得实时反馈和⽀持，以便能够不断地改进我的表现和达成我的 OKR
###
... ... ... ... ...
GitHub Copilot
开发：结合 编写代码和测试
IDE tab
复制或者编写注释到 中，可⾃动结合上下⽂信息（打开的 、代码等）⽣成
Copilot
通过 ⽣成后
进⾏校准
根据当前的习惯
⽣成
17
AI
辅助提效的新挑战
AI
虽然⽣成式 技术及⼯具已经在软件⽣命周期的各个环节中体现出了提效的可⾏性，但想要在⼤型科技组织中端到端落地、实现提效的突破，
还⾯临很多挑战。⼤部分企业尚在探索过程中，于是我们产⽣了两个假设。
AI 2
企业规模化软件过程提效的挑战 开发 辅助研发提效的局限性 个关键假设
假设1
信息安全和信创化的强制要求 基于 GPT 模型的⼯具不符合信息安全要求
每个⼤型企业都将有私有化的⼤语⾔模型
⼤型企业尤其是银⾏，⾯临最强的信息安全监管及 ⽬前⼤多⼯具基于 OpenAI GPT 构建，不能私有化
信创化、国产化要求，需要国产⽣态中能⼒突出的 部署，不符合信息安全的强制要求；需要寻找能够
⼤模型 私有化部署且⽔平相当的替代品。
开源⼤模型表现偏弱、⾃⼰训练成本⾼
⽬前可私有化部署的⼤模型，其⾃然语⾔理解和代码 公开LLM 针对专业领域表现不佳，适⽤性差
GPT
⽣成的⽔平与 有⼀定差距；根据⼤语⾔模型论⽂ 缺乏专业知识，对于某些专业领域缺乏⾜够的理
做⼀些粗略的数学计算，如果⽤的是 Facebook 解。它受训练数据中的影响，容易产⽣偏⻅和错
LLaMA ，训练成本（不考虑迭代或者出错）⼤约是 误。
假设2
400 PaLM 2700
万美元，如果是⾕歌 ，⼤约 万美
LLM +
私有化的主流⽅式：开源 微调
元。
与企业内部⼯具进⾏结合
LLM ⼯具碎⽚化
AI
碎⽚化的应⽤提效效果有限，把 ⽆缝集成到
各类⼯具都是在⼀个个分散的⼯作节点上辅助，使
BizDevOps
⼯具链中，技术难度尚未可知。
⽤时来回切换⼯具的成本很⾼，整体端到端地提效
不明显。
LLM +
⼯序
探索与构建路径
前期探索过程：在摸索中前进
“0”
从 开始，要学习和解决的问题、挑战太多太多了。
AI
微调与研发过程结合 ⼯具设计和整合 分析成功 产品
现有的开源模型能满⾜需求吗？ 产品形态应该是怎样的？（聊天、交互式） 如何⾼效构建上下⽂？（2K）
合理的指令（输⼊和输出）应该是怎样的？ 与现有⼯具对⽐竞争⼒在哪？（端到端？） 如何提升速度？（缓存、减少请求）
微调的成本和⼯作量在哪？ ⼯具是否需要重写⼀遍？ 如何提升准确率/接受率？
https://github.com/unit-mesh/auto-dev
https://github.com/unit-mesh/devti
SDLC
中的⾼价值部分
在私有化模型的能⼒之内，最适合探索的是什么？
产品设计 架构设计 开发
产品设计 特性设计 开发计划 建模 架构设计 API 设计 详细设计 编码 编码后
⽤户调研 功能细分 验收条件 事件⻛暴 时序图设计 API 定义 代码设计 代码⽣成 代码检视
产品创新 UX Design 优化级 领域模式 组件图设计 单元测试⽣成 提交信息
产品定义 ⾮功能需求 迭代计划 限界上下⽂ 设计模式
原型 发布计划 ⽂档
⾥程碑设计
运维 交付 测试
测试⽤例
Monitor 发布 部署 缺陷分析 ⾃动化测试
设计
⽇志分析 发布⽂档 部署脚本⽣成 根因分析 ⾃动化测试代码⽣成 测试⽤例⽣成
客户⽀持 更新⽂档 缺陷分析
客户情绪分析 缺陷⽂档
⼤语⾔模型友好的⼯序
API
架构与⼤语⾔结合设计 新⼯序过程示例
Evolve
数据⼯程
上游 API 格式
（Swagger、Postman）
Scale
Explore Eval Feedback
Test and learn
LLM 友好的 API
Prompt