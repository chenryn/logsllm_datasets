techniques are not only useful for spotting Sybils, but
turn out to be a handy analytics tool to monitor and bet-
ter understand the Tor network. Given the lack of a cen-
tral identity-verifying authority, it is always possible for
well-executed Sybil attacks to stay under our radar, but
we found that a complementary set of techniques can go
a long way towards ﬁnding malicious Sybils, making the
Tor network more secure and trustworthy for its users.
All our code, data, visualizations, and an open ac-
cess bibliography of our references are available online
at https://nymity.ch/sybilhunting/.
Acknowledgments
We want to thank our shepherd, Tudor Dumitra¸s, for
his guidance on improving our work. We also want to
thank Georg Koppen, Prateek Mittal, Stefan Lindskog,
the Tor developers, and the wider Tor community for
helpful feedback. This research was supported in part by
the Center for Information Technology Policy at Prince-
ton University and by the National Science Foundation
Awards CNS-1540055 and CNS-1602399.
References
[1] David G. Andersen et al. “Topology Inference from BGP Rout-
ing Dynamics”. In: Internet Measurement Workshop. ACM,
2002. URL: https : / / nymity . ch / sybilhunting / pdf /
Andersen2002a.pdf (cit. on p. 7).
[2] Kevin Bauer and Damon McCoy. No more than one server per
IP address. Mar. 2007. URL: https : / / gitweb . torproject . org /
torspec.git/tree/proposals/109-no-sharing-ips.txt (cit. on p. 3).
[3] Kevin Bauer et al. “Low-Resource Routing Attacks Against
Tor”. In: WPES. ACM, 2007. URL: https : / / nymity . ch /
sybilhunting/pdf/Bauer2007a.pdf (cit. on p. 3).
[4] Alex Biryukov, Ivan Pustogarov, and Ralf-Philipp Weinmann.
“Trawling for Tor Hidden Services: Detection, Measurement,
Deanonymization”. In: Security & Privacy. IEEE, 2013. URL:
https://nymity.ch/sybilhunting/pdf/Biryukov2013a.pdf (cit. on
pp. 2, 7, 9, 10, 13).
[5] Nikita Borisov. “Computational Puzzles as Sybil Defenses”. In:
Peer-to-Peer Computing. IEEE, 2005. URL: https://nymity.ch/
sybilhunting/pdf/Borisov2006a.pdf (cit. on p. 2).
[6] George Danezis and Prateek Mittal. “SybilInfer: Detecting
Sybil Nodes using Social Networks”. In: NDSS. The Internet
Society, 2009. URL: https : / / nymity . ch / sybilhunting / pdf /
Danezis2009a.pdf (cit. on p. 2).
[7] Roger Dingledine. Did the FBI Pay a University to Attack Tor
Users? Nov. 2015. URL: https://blog.torproject.org/blog/did-
fbi-pay-university-attack-tor-users (cit. on p. 10).
[8] Roger Dingledine. Tor security advisory: “relay early” trafﬁc
conﬁrmation attack. July 2014. URL: https://blog.torproject.
org / blog / tor - security - advisory - relay - early - trac -
conrmation-attack (cit. on pp. 1, 9, 10).
USENIX Association  
25th USENIX Security Symposium  1183
15
[9] Roger Dingledine and Nick Mathewson. Tor Path Speciﬁcation.
URL: https : / / gitweb . torproject . org / torspec . git / tree / path -
spec.txt (cit. on p. 3).
[10] Roger Dingledine, Nick Mathewson, and Paul Syverson. “Tor:
The Second-Generation Onion Router”. In: USENIX Security.
USENIX, 2004. URL: https : / / nymity . ch / sybilhunting / pdf /
Dingledine2004a.pdf (cit. on p. 3).
John R. Douceur. “The Sybil Attack”. In: Peer-to-Peer Systems.
2002. URL: https://nymity.ch/sybilhunting/pdf/Douceur2002a.
pdf (cit. on pp. 1, 2).
[11]
[12] David Fiﬁeld. #12813—Look at a bitmap visualization of relay
consensus. 2014. URL: https://bugs.torproject.org/12813 (cit.
on p. 7).
P. Brighten Godfrey, Scott Shenker, and Ion Stoica. “Minimiz-
ing Churn in Distributed Systems”. In: SIGCOMM. ACM, 2006.
URL: https://nymity.ch/sybilhunting/pdf/Godfrey2006a.pdf
(cit. on p. 5).
[13]
[14] Aaron Johnson et al. “Users Get Routed: Trafﬁc Correlation
on Tor by Realistic Adversaries”. In: CCS. ACM, 2013. URL:
https://nymity.ch/sybilhunting/pdf/Johnson2013a.pdf (cit. on
p. 1).
[15] Damian Johnson. doctor – service that periodically checks the
Tor network for consensus conﬂicts and other hiccups. URL:
https://gitweb.torproject.org/doctor.git/tree/ (cit. on p. 5).
[16] Marc Juarez et al. “A Critical Evaluation of Website Finger-
printing Attacks”. In: CCS. ACM, 2014. URL: https://nymity.
ch/sybilhunting/pdf/Juarez2014a.pdf (cit. on p. 1).
[17] Maria Konte, Roberto Perdisci, and Nick Feamster. “ASwatch:
An AS Reputation System to Expose Bulletproof Hosting
ASes”. In: SIGCOMM. ACM, 2015. URL: https://nymity.ch/
sybilhunting/pdf/Konte2015a.pdf (cit. on p. 15).
[18] Vladimir Iosifovich Levenshtein. “Binary Codes Capable of
Correcting Deletions, Insertions, and Reversals”. In: Soviet
Physics-Doklady 10.8 (1966). URL: https : / / nymity . ch /
sybilhunting/pdf/Levenshtein1966a.pdf (cit. on p. 7).
[19] Brian Neil Levine, Clay Shields, and N. Boris Margolin. A
Survey of Solutions to the Sybil Attack. Tech. rep. University
of Massachusetts Amherst, 2006. URL: https : / / nymity . ch /
sybilhunting/pdf/Levine2006a.pdf (cit. on p. 2).
[21]
[22]
[20] Andrew Lewman. June 2010 Progress Report. June 2010. URL:
https://blog.torproject.org/blog/june- 2010- progress- report
(cit. on pp. 9, 11, 12).
Frank Li et al. “SybilControl: Practical Sybil Defense with
Computational Puzzles”.
In: Scalable Trusted Computing.
ACM, 2012. URL: https://nymity.ch/sybilhunting/pdf/Li2012a.
pdf (cit. on p. 2).
Zhen Ling et al. “Tor Bridge Discovery: Extensive Analysis and
Large-scale Empirical Evaluation”. In: IEEE Transactions on
Parallel and Distributed Systems 26.7 (2015). URL: https : / /
nymity.ch/sybilhunting/pdf/Ling2015b.pdf (cit. on p. 1).
Zhen Ling et al. “TorWard: Discovery, Blocking, and Trace-
back of Malicious Trafﬁc Over Tor”. In: IEEE Transactions on
Information Forensics and Security 10.12 (2015). URL: https:
//nymity.ch/sybilhunting/pdf/Ling2015a.pdf (cit. on p. 17).
Lizards. Dec. 2014. URL: https://lists.torproject.org/pipermail/
tor-talk/2014-December/036197.html (cit. on pp. 9, 11).
[24]
[23]
[27]
nex. Skynet, a Tor-powered botnet straight from Reddit. Dec.
2012. URL: https : / / community . rapid7 . com / community /
infosec / blog / 2012 / 12 / 06 / skynet - a - tor - powered - botnet -
straight-from-reddit (cit. on p. 10).
[30]
[29]
[28] Rob Pike and Brian W. Kernighan. “Program Design in the
UNIX System Environment”. In: Bell Labs Technical Jour-
nal 63.8 (1983). URL: https : / / nymity . ch / sybilhunting / pdf /
Pike1983a.pdf (cit. on p. 14).
Flora Rheta Schreiber. Sybil: The true story of a woman pos-
sessed by 16 separate personalities. Henry Regnery, 1973 (cit.
on p. 1).
Eric Swanson. GPU-based Onion Hash generator. URL: https:
//github.com/lachesis/scallion (cit. on p. 8).
The Invisible Internet Project. URL: https://geti2p.net (cit. on
p. 2).
The Tor Project. CollecTor – Your friendly data-collecting ser-
vice in the Tor network. URL: https://collector.torproject.org/
(cit. on p. 4).
The Tor Project. Tor Metrics. URL: https://metrics.torproject.
org (cit. on p. 14).
[32]
[33]
[31]
[35]
[34] Kurt Thomas, Chris Grier, and Vern Paxson. “Adapting So-
cial Spam Infrastructure for Political Censorship”. In: LEET.
USENIX, 2012. URL: https : / / nymity . ch / sybilhunting / pdf /
Thomas2012a.pdf (cit. on p. 1).
Liang Wang and Jussi Kangasharju. “Real-World Sybil Attacks
in BitTorrent Mainline DHT”. In: Globecom. IEEE, 2012. URL:
https://nymity.ch/sybilhunting/pdf/Wang2012a.pdf (cit. on
p. 1).
Philipp Winter. zoossh – Parsing library for Tor-speciﬁc data
formats. URL: https://gitweb.torproject.org/user/phw/zoossh.
git/ (cit. on p. 4).
Philipp Winter et al. “Spoiled Onions: Exposing Malicious Tor
Exit Relays”. In: PETS. Springer, 2014. URL: https://nymity.
ch/sybilhunting/pdf/Winter2014a.pdf (cit. on pp. 1, 3, 4).
[36]
[37]
[38] Haifeng Yu, Phillip B. Gibbons Michael Kaminsky, and Feng
Xiao. “SybilLimit: A Near-Optimal Social Network Defense
against Sybil Attacks”. In: Security & Privacy. IEEE, 2008.
URL: https : / / nymity . ch / sybilhunting / pdf / Yu2008a . pdf (cit.
on p. 2).
[39] Haifeng Yu et al. “SybilGuard: Defending Against Sybil Attack
via Social Networks”. In: SIGCOMM. ACM, 2006. URL: https:
//nymity.ch/sybilhunting/pdf/Yu2006a.pdf (cit. on p. 2).
A Exposed malicious exit relays
Table 5 provides an overview of our second dataset, 251
bad exit relays that we discovered between August 2014
and January 2016. We believe that all single relays in
the dataset were isolated incidents while sets of relays
constituted Sybil groups. Sybil groups marked with the
symbols ∗, †, and ‡ were run by the same attacker, re-
spectively.
[25] Moxie Marlinspike. sslstrip. URL: https://moxie.org/software/
sslstrip/ (cit. on p. 17).
[26] msft-mmpc. Tackling the Sefnit botnet Tor hazard. Jan. 2014.
URL: https://blogs.technet.microsoft.com/mmpc/2014/01/09/
tackling-the-sefnit-botnet-tor-hazard/ (cit. on p. 10).
1184  25th USENIX Security Symposium 
USENIX Association
16
Discovery
Aug 2014
Sep 2014
Oct 2014
# of relays Attack description
1
1
1
1
1
1
The relay injected JavaScript into returned HTML. The script embedded another script from the
domain ﬂuxx.crazytall.com—not clearly malicious, but suspicious.
The relay injected JavaScript into returned HTML. The script embedded two other scripts, jquery.js
from the ofﬁcial jQuery domain, and clr.js from adobe.ﬂashdst.com. Again, this was not necessarily
malicious, but suspicious.
The exit relay routed trafﬁc back into the Tor network, i.e., we observed trafﬁc that was supposed
to exit from relay A, but came from relay B. The system presented by Ling et al. behaves the
same [23]; the authors proposed to run intrusion detection systems on Tor trafﬁc by setting up an
exit relay that runs an NIDS system, and routes the trafﬁc back into the Tor network after having
inspected the trafﬁc.
The relay injected JavaScript into returned HTML.
The relay ran the MitM tool sslstrip [25], rewriting HTTPS links to unencrypted HTTP links in
returned HTML.
Same as above.
Jan 2015
23∗
Blockchain.info’s web server redirects its users from HTTP to HTTPS. These relays tampered with
blockchain.info’s redirect and returned unprotected HTTP instead—presumably to sniff login cre-
dentials.
The relay used OpenDNS as DNS resolver and had the website category “proxy/anonymizer”
blocked, resulting in several inaccessible websites, including torproject.org.
Feb 2015
Mar 2015
Apr 2015
Jun 2015
Aug 2015
Sep 2015
Nov 2015
Dec 2015
1
1
The relay injected a script that attempted to load a resource from the now inaccessible torclick.net.
Curiously, torclick.net’s front page said “We place your advertising materials on all websites online.
Your ads will be seen only for anonymous network TOR [sic] users. Now it is about 3 million users.
The number of users is always growing.”
17∗ Again, these relays tampered with HTTP redirects of Bitcoin websites. Interestingly, the attack be-
came more sophisticated; these relays would begin to target only connections whose HTTP headers
resembled Tor Browser.
18∗
1
70†
Same as above.
The relay injected JavaScript and an iframe into the returned HTML. The injected content was not
clearly malicious, but suspicious.
These exit relays transparently rewrote onion domains in returned HTML to an impersonation do-
main. The impersonation domain looked identical to the original, but had different Bitcoin ad-
dresses. We believe that this was attempt to trick Tor users into sending Bitcoin transactions to
phishing addresses.
55†
Same as above.
4†
1
1
8†
1‡
1‡
Same as above.
The relay injected an iframe into returned HTML that would load content that made the user’s
browser participate in some kind of mining activity.
The relay ran the MitM tool sslstrip.
Same as the relays marked with a †.
The relay ran the MitM tool sslstrip.
Same as above.
Jan 2016
43†
Same as the relays marked with a †.
Table 5: An overview of our second dataset, 251 malicious exit relays that we discovered using exitmap. We believe
that Sybil groups marked with an ∗, †, and ‡ were run by the same adversary.
USENIX Association  
25th USENIX Security Symposium  1185
17