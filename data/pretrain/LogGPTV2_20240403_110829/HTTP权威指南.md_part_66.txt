### 17.5.3 内容注入

前面描述的两类转码通常会减少Web文档的内容，但还有一类转换会增加文档内容，即内容注入转码。这种类型的转码包括自动广告生成器和用户追踪系统。

例如，一个能够自动在每个经过的HTML页面中插入广告的转码器（虽然这可能会让用户感到厌烦）是非常有吸引力的。这类转码操作必须动态进行，以便即时添加与当前特定用户相关或针对特定用户的广告。此外，还可以构建用户追踪系统，在页面中动态增加内容，用于收集用户查看页面和客户端浏览方式的统计信息。

### 17.5.4 转码与静态预生成的对比

另一种替代转码的方法是在Web服务器上为Web页面创建不同版本。例如，可以分别为HTML和WML、高分辨率图像和低分辨率图像、包含多媒体内容和不包含多媒体内容的页面创建副本。然而，这种方法并不切实际，原因如下：
- 页面中的任何小改动都会牵涉到许多页面。
- 需要大量空间来存储各页面的不同版本。
- 使页面编目和Web服务器编程变得更加复杂。
- 某些转码操作，如广告插入（尤其是定向广告插入），无法静态实现，因为插入的广告取决于请求页面的用户。

相比之下，对单一的根页面进行即时转换是一个更容易的解决方案，尽管它会在提供内容时增加延迟。有时，这些计算可以由第三方（如代理或缓存中的外部Agent）完成，从而减轻Web服务器的计算负荷。图17-3展示了在代理缓存中进行的转码过程。

### 内容协商与转码

#### 请求示例
```
GET / HTTP/1.1
Host: www.joes-hardware.com
User-agent: wimpy wireless device
Accept-language: fr;q=1.0
```

**Web服务器处理**
- 我有他想要的文档的法语版，但我的副本中富含各种媒体，而他用的是低性能的无线浏览器。我要把所有的多媒体内容去掉再发送给他。

**转换器**
- Bonjour

**缓存**
- 我已经为这份文档做了针对无线设备的转换，我要把转换后的副本作为备用候选保存起来，以备他人之需。

**响应示例**
```
HTTP/1.1 200 OK
Content-language: fr
Vary: User-agent
Bonjour
[...simple text content]
```

### 17.6 下一步计划

由于以下两个原因，内容协商不仅仅限于Accept和Content这两个首部集：
- **性能限制**：在各种变体中搜索合适的内容或尽力“猜测”最佳匹配会有很大开销。RFC 2295和RFC 2296尝试解决这个问题，以提供透明的HTTP内容协商。
- **协议通用性**：HTTP不是唯一需要进行内容协商的协议。其他情况下，客户端也需要与服务器交互以获得最佳答案，流媒体和传真就是另外两个例子。能否在TCP/IP应用层协议之上开发出通用的内容协商协议？内容协商工作组（Content Negotiation Working Group）专门为此成立，目前已停止工作，但仍提出了若干个RFC。

### 17.7 更多信息

从以下因特网草案和在线文档中可以获得更多关于内容协商的信息：
- **RFC 2616**: “Hypertext Transfer Protocol - HTTP/1.1”，这是HTTP/1.1的官方规范，详细介绍了HTTP协议。
- **RFC 2295**: “Transparent Content Negotiation in HTTP”，描述了基于HTTP的透明内容协商协议。
- **RFC 2296**: “HTTP Remote Variant Selection Algorithm RVSA 1.0”，描述了为特定HTTP请求选择“最佳”内容的算法。
- **RFC 2936**: “HTTP MIME Type Handler Detection”，描述了一种判定浏览器支持的MIME类型处理器的方法。
- **内容协商工作组网站**: 专注于HTTP、传真和打印方面的透明内容协商。

### 第五部分：内容发布与分发

第五部分讲述了Web内容发布和传播的各种技术：
- **第18章**：介绍现代Web托管环境中部署服务器的方法，HTTP对虚拟Web托管的支持，以及如何在地理上相距遥远的服务器之间复制内容。
- **第19章**：讨论创建Web内容并将其放置到Web服务器上的技术。
- **第20章**：探讨将来访的Web流量分发到一组服务器上的技术和工具。
- **第21章**：解释日志的各种格式和常见问题。

### 第18章：主机托管

当你将资源放在公共的Web服务器上时，互联网社区就可以访问它们。这些资源可以是简单的文本文件或图像，也可以是复杂的实时导航地图或电子商务购物网关。将这些资源便捷地发布到网站上，并将其放置在性能良好的Web服务器上，是非常关键的。

**Web主机托管**涵盖了内容资源的存储、协调和管理职责。托管服务提供商出租服务和网站管理维护业务，并提供不同程度的安全级别、报告及易用性。托管者通常将多个网站放在强大的Web服务器上联合运行，以提高成本效益、可靠性和性能。

本章讲解Web主机托管服务的重要特征及其与HTTP应用程序的交互，主要内容包括：
- 不同的网站如何被“虚拟地托管”在同一台服务器上，这对HTTP有何影响；
- 在大流量压力下如何确保网站的可靠性；
- 如何使网站加载更快。

#### 18.1 主机托管服务

早期，每个组织自行购买硬件、搭建机房、申请网络连接并管理Web服务器软件。随着Web迅速成为主流，出现了专业化管理的Web主机托管服务。服务级别从物理设备管理到完整的Web主机托管不等。

#### 18.2 虚拟主机托管

许多人希望在Web上展示自己，但他们的网站流量不大。使用专用Web服务器可能过于昂贵。因此，许多Web托管商通过让多个客户共享一台计算机来提供便宜的虚拟主机托管服务。每个网站看起来像是托管在不同的服务器上，但实际上是在同一台物理服务器上。

**虚拟主机托管**的主要挑战之一是HTTP/1.0设计缺陷。HTTP/1.0请求中没有提供识别要访问哪个虚拟网站的方法。如果服务器托管了多个站点，就无法确定请求的目标。HTTP/1.1通过引入Host首部解决了这个问题。