served continuous BLE beaconing from all the six mobile
devices shown in Table I. Even when all of these mobile
devices have their screens off (e.g., they are in their user’s
pocket) they all continuously transmit BLE beacons. Indeed,
this is a feature that is necessary for the proper function of
the BLE-based applications on these devices (e.g., contact
tracing). Continuous beaconing is a signiﬁcant new threat
compared to the behavior of other protocols on mobile devices
that only transmit intermittently (e.g., periodic WiFi scanning).
Mobile devices send hundreds of BLE beacons per minute:
Table I also shows the average number of BLE beacons (i.e.,
BLE advertisements) we observed per minute from each de-
vice. We observe that all of these devices transmit frequently—
hundreds of packets per minute—even when the device is
otherwise idle (e.g., screen off). Transmitting hundreds of
advertisements per minute makes it feasible to produce a
physical-layer ﬁngerprint quickly: even if the device is in range
of the sniffer for a few seconds (Section V).
III. BLE TRACKING TOOLKIT
In this section, we describe a toolkit
to evaluate if an
attacker can perform a BLE tracking attack based on physical-
layer ﬁngerprinting. First, we describe how BLE produces a
similar physical-layer ﬁngerprint to other wireless protocols.
Then, we describe the unique challenges of ﬁngerprinting
BLE transmissions, and therefore why existing ﬁngerprinting
techniques do not work on BLE transmissions. Next, we
describe a new approach to ﬁngerprinting BLE devices using
a novel joint imperfection estimation technique. Finally, we
describe how an attacker can use a sniffer to track a speciﬁc
device by detecting if its ﬁngerprint matches one of the BLE
devices nearby the sniffer.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:35:12 UTC from IEEE Xplore.  Restrictions apply. 
Fig. 1: Architecture of WiFi/BLE combo chipsets
A. BLE has WiFi-like signal imperfections
Physical
layer ﬁngerprinting relies on each BLE radio
having unique hardware imperfections introduced by manu-
facturing variations in its transmitter chain. Different types of
imperfections are introduced by different transmitter architec-
tures. Therefore, we need to understand the architecture of a
typical BLE chipset to understand what imperfections we need
to ﬁngerprint.
We investigated the architecture of several BLE chipsets
used in popular mobile devices, and found that WiFi and BLE
are often integrated into the same device. Also, internally,
they share the same 2.4 GHz I/Q frontend. (Figure 1). This
architecture, known as a “combo chipset” is desirable for
mobile devices because it reduces the device’s overall size
and power consumption, and it serves as a point to synchronize
both protocols’ 2.4 GHz transmissions, so they do not interfere
with each other.
A consequence of this hardware design choice is that BLE
transmissions contain the same hardware imperfections as
WiFi. The imperfections are introduced by the shared I/Q fron-
tend of the chipset (Figure 1). They result in two measurable
metrics in BLE and WiFi transmissions: Carrier Frequency
Offset (CFO) and I/Q imperfections, speciﬁcally: I/Q offset
and I/Q imbalance. Prior work demonstrated that these metrics
are sufﬁcient to uniquely ﬁngerprint WiFi devices [9]. The
following describes how each of these metrics are calculated
and how they result from manufacturing variations:
CFO: It is an offset in the carrier frequency generated by
the RF frontend’s local oscillator. The carrier frequency is
ideally exactly the center frequency of the channel in use.
However, imperfections in the radio’s local oscillator, a crystal
oscillator, yields a unique CFO added to every transmission.
Crystals cut in different ways yield different tolerances in how
much an individual crystal’s frequency can deviate from the
true value it was to produce for. This imperfection manifests
as CFO because the local oscillator is mixed with the baseband
signal (e.g., WiFi or BLE) in the RF frontend, so it can be
transmitted; thereby, carrying the crystal’s imperfection as a
feature in the transmission.
I/Q imperfections: These are a result of the following two
phenomena. I/Q Offset is created by two different imperfec-
tions in the RF frontend: (1) the carrier frequency signal
leaking through the mixer into the transmitted signal, or (2) the
baseband signal having a DC offset. I/Q offset results in a ﬁxed
complex term added to each received I/Q sample (i.e., a shift in
the center of the constellation). I/Q Imbalance occurs because
of a mismatch between the parallel analog components of the
Fig. 2: Length of known samples in BLE and WiFi packets.
RF chain in I (in-phase) and Q (quadrature) signal paths. This
results in asymmetry in the phase and amplitude of received
I/Q samples.
B. BLE is more difﬁcult to ﬁngerprint than WiFi
Measuring transmitter imperfections is signiﬁcantly more
challenging for BLE transmissions than it is for WiFi transmis-
sions. The problem is, BLE signals are Gaussian Frequency
Shift Keying (GFSK) waveforms that do not require accu-
rately correcting CFO and I/Q imperfections for decoding.
Conversely, WiFi signals are wideband multi-carrier wave-
forms, therefore their decoding algorithm requires accurately
correcting for CFO and I/Q imperfections for decoding.
As a result of this issue, BLE packets contain fewer known
“training” samples used for measuring imperfections than
WiFi (Figure 2). BLE packets have only 8 training samples,
while WiFi packets have 320 training samples. BLE receivers
use these symbols to implement very coarse grained CFO
correction. Namely, they average the two frequencies (sym-
metric positive and negative frequencies are used to represent
0 and 1 symbols) in BLE’s training sequence to produce a
coarse grained average CFO [34]. Indeed, with only 8 samples
at BLE’s 1 MHz sample rate, the theoretical limit of CFO
accuracy is 2 kHz assuming 3 degree phase noise, even at
high SNR (40 dB).
To make matters worse, inaccurate coarse compensation of
CFO signiﬁcantly affects our ability to measure I/Q imper-
fections. Inaccurately compensating CFO will result in time-
dependent phase shift distorting the I/Q constellation, making
it challenging to accurately estimate I/Q imperfections.
Prior ﬁngerprinting techniques developed for other protocols
are not capable of overcoming these challenges. Therefore,
prior approaches can not be used to ﬁngerprint BLE [39], [9],
[23], [17], [35], [27], [31], [16].
Another approach to ﬁngerprinting BLE transmissions
would be to use neural networks. Although neural networks
can address these challenges, we did not use them in this work
because of the following limitations: (1) Neural networks make
it difﬁcult to determine the signiﬁcance and distinguishably of
each type of hardware imperfection (e.g., CFO, I/Q offset),
(2) Neural networks also can overﬁt to a speciﬁc bit pattern
in a packet, rather than the transmitter imperfections. This is
problematic because BLE advertisements do not have a stable
bit pattern: MAC addresses change every 15 minutes. (3) In
our preliminary experiments with neural nets, we found they
require signiﬁcantly more training data than the conventional
classiﬁcation we describe in this work.
1692
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:35:12 UTC from IEEE Xplore.  Restrictions apply. 
Digital toAnalogDigital to AnalogOscillatorcossinRealImagRFoutWiFi basebandgeneratorBT/BLE basebandgeneratorpacket bits inCFOIQ ImbalanceIQ OﬀsetSTFBLEWiFi8160LTF160# of known “training” samplesFig. 3: Our new BLE imperfection estimation method.
Fig. 4: Process of jointly estimating CFO and I/Q offset.
(cid:2)(1 −

2
j(cid:0)(1 +
y(cid:48)(t) = A ×

2
)sin(ω(t)t +
) + Q(cid:1)(cid:3)
)cos(ω(t)t −
φ
2
φ
2
) + I+
× ej(φo+2πfot)
where fo, φo, A, 1−
1+ , φ, I and Q denote CFO, phase offset,
normalized amplitude of the signal, I/Q amplitude imbalance,
I/Q phase imbalance, I offset and Q offset, respectively. The
goal is to choose the value of these variables in such a way
that ||y(cid:48)
− y||2 is minimum and as a result, y(cid:48) is as close as
possible to the captured signal y. Therefore, we must solve
the following optimization problem:
C. Accurate measurement of BLE’s CFO & I/Q imperfections
The ﬁngerprinting methodology we present in this work
(Figure 3) is the ﬁrst physical-layer identiﬁcation method
that can accurately estimate CFO and I/Q imperfections of
BLE signals. To ﬁngerprint BLE, we need to overcome the
following two fundamental challenges:
Accurate estimation of CFO (and I/Q imperfections) is not
feasible with BLE’s short training symbol sequence (pream-
ble). Instead of relying on the 8 known samples, we can utilize
the entire packet (∼370 samples). This results in a theoretical
CFO measurement precision of about 40 Hz compared to
2 kHz from BLE’s coarse CFO estimation. The next question
is: how can we leverage the entire decoded packet to estimate
CFO and I/Q imperfections accurately?
First, we decode the entire received BLE packet (for packets
with a valid CRC) and reconstruct a clean BLE waveform
(Figure 3 top). Then, we leverage the clean reconstructed BLE
waveform and distort it iteratively, we do so until we ﬁnd
CFO and I/Q imperfection estimates where the reconstructed
signal matches the original received signal (Figure 3 bottom).
Brute force search for the optimal CFO and I/Q imperfec-
tions requires signiﬁcant computational complexity because
we need to search all possible values. We use optimization
techniques to make this more efﬁcient. The primary insight
of our optimization approach is as follows: estimating I/Q
imperfections of a received signal depends on the estimates of
the signal’s CFO. Therefore, as we get closer to an accurate
estimate of CFO, we reduce the search space to ﬁnd accurate
I/Q imperfections. We build on this insight and present a joint
CFO and I/Q imperfection estimation methodology.
Jointly estimating CFO and I/Q: Let y be the captured
complex baseband BLE signal (normalized by the average
amplitude). In a GFSK modulated signal, ideally we have
Real{y} = cos(ω(t)t) and Imag{x} = sin(ω(t)t) where
ω(t) is the baseband frequency of the signal which is generated
according to the GFSK modulation. However, the presence
of hardware imperfections will slightly change the baseband
signal. We ﬁrst decode the signal to obtain the sequence of
bits and then, we make ω(t) according to GFSK modulation.
Let y(cid:48) be the model of the imperfect signal. With the effects
of CFO and I/Q imperfections, the baseband signal becomes:
minfo,φo,A,,φ,I,QF = ||y(cid:48)
} − Real{y}|2 + |Imag{y(cid:48)
− y||2 =
} − Imag{y}|2
|Real{y(cid:48)
However, this problem is not convex, and the objective func-
tion has several local minima (Figure 4). To avoid optimization
techniques ending up in a local minimum, we initialize the
variables properly. This increases the chance of ﬁnding the
global minimum. Although theoretically we aren’t guaranteed
to reach the global minimum for arbitrary optimum numbers
of these variables, we found in practice the initialization helps
us reach the optimum value.
To initialize CFO, we start by taking the average of frequen-
cies in the preamble. Then we compensate the initial CFO in
the signal to get the signal z = ye−2πfot. To estimate initial
I/Q imperfections, we use the I/Q constellation of the GFSK
signal. The I/Q constellation of an ideal GFSK signal is a circle
centered at (0, 0). However, I/Q imperfection will change this
constellation. Speciﬁcally, I/Q offset shifts the center of the
constellation, and I/Q imbalance changes the shape from a
circle to a tilted ellipse. As a result, to get an initial estimation
of I/Q imperfections, we ﬁt an ellipse to the 2-dimensional
points (Imag{z}, Real{z}) by minimizing the Least Square
Error. The center of the ellipse will provide the initial I/Q
offset, and initial I/Q imbalance can be obtained from the ratio
of minor and major diameter and rotation angle of the ellipse.
Although these initial estimations are close to optimum, they
are not accurate. As mentioned earlier, this CFO initialization
is based on an 8 symbol preamble and therefore not accurate.
1693
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:35:12 UTC from IEEE Xplore.  Restrictions apply. 
Decode bits & CRC checkGenerate a clean version of the signal0110110Apply CFO & IQ OﬀsetCompareGradient descentJoint Estimation Algorithm10203050InitializationConvergence15In-phase (I) OﬀsetCFO# of iterationsLocal MinimaLocal MinimaMoreover, an inaccurate CFO estimate will cause a time-
dependent phase shift which distorts the I/Q constellation.
Therefore,
the initial I/Q offset and imbalance estimation
will also have errors. Consequently, we employ optimization
techniques to jointly estimate these imperfections using the
initial estimates.
We chose gradient descent to solve the optimization prob-
lem, as it ensures that we move towards the optimal values
after each step. Speciﬁcally, we use a quick form of gradient
descent, Nesterov Accelerated Gradient Descent (NAG) to
move from the initialization towards the optimum values
of fo, φo, A, , φ, I, Q by minimizing F in the mentioned
optimization problem. NAG adaptively adjusts the parameter
update at each step, so that we move faster towards the optimal
value at the start but slow down as we get close to the minima.
Figure 4 demonstrates the process of how we start from
the initial estimations of CFO and I/Q imperfections, then
move toward the optimal values of CFO and I/Q imperfections
using gradient descent (the red line), and ﬁnally converge to
the accurate estimations of CFO and I/Q imperfections in a
few iterations. Since this optimization problem is not convex,
it is still possible we end up converging to a local optima.
Therefore, if after convergence, the average of F was not less
than a certain threshold (determined according to SNR), we
adjust the initialization values by a ﬁxed step and repeat the
gradient descent process.
The proposed optimization based estimation ensures ac-
curate estimation with ﬁne granularity as it keeps moving
towards the optimum with adaptive steps and removes the
mutual effect of mismatch in estimating these imperfection pa-
rameters. Moreover, the objective function of the optimization
is chosen as the summation of all samples across the packet,
which diminishes the impact of the channel and provides ﬁne-
grained estimates of the CFO and I/Q imperfections.
Evaluating CFO estimation accuracy: To evaluate the ac-
curacy of our new ﬁne-grained ﬁngerprinting algorithm com-
pared with BLE’s default coarse CFO estimation, we compute
the standard deviation of CFO measured for 100 packets from
each device in a set of 100 different BLE transmitters observed
in the ﬁeld. Figure 5 shows the CDF of the standard deviation
of the CFO across all transmitters, for both techniques. We
see that our ﬁne-grained CFO estimation signiﬁcantly reduces
the standard deviation of CFO estimation for all devices. This
reduces the within-device variance, making ﬁngerprints easier
to distinguish.
Summary: We demonstrate that it is feasible to estimate
CFO and I/Q imperfections of WiFi/BLE combo chipsets
accurately; even though BLE does not have the rich signal
features that are present in WiFi.
D. Fingerprinting and identifying a target device
With ﬁne-grained estimates of the CFO and I/Q imper-
fections in BLE transmissions, we can now execute a BLE
location tracking attack. The ﬁrst step in the attack is capturing
BLE packets. We use an SDR to capture raw I and Q samples
of nearby BLE transmissions. The captured BLE packets are
processed in two stages—ﬁngerprinting and identiﬁcation. In
Fig. 5: Comparing the CFO estimation of existing coarse-
grained techniques with our proposed technique.
the ﬁngerprinting stage the target device is brieﬂy isolated, and
we capture a number of packets that we use for building a ﬁn-
gerprint for the device (i.e., training packets). The latter stage
identiﬁes if a captured BLE packet matches the ﬁngerprint of
the target device.
Fingerprinting Stage: For each packet from a device D,
we extract CFO and I/Q imperfections using the algorithm
described in III-C. Let x1, ..., xN be the CFO and I/Q imper-
fection feature vectors for N training packets we have received
from device D. We calculate the mean µD and covariance
matrix ΣD of X = [x1
... xN ]. µD and ΣD together with
a threshold that will be deﬁned later is considered the proﬁle
of device D.
Identiﬁcation Stage:
In identiﬁcation stage, we want to
decide whether a packet xt was transmitted by device D,
indicating that the target device is near the SDR. To do so, we
compute the Mahalanobis distance to the proﬁle of device D:
(cid:113)
(xt − µD)T Σ−1
D (xt − µD)
distance(xt, µD, ΣD) =
This distance metric measures how close the features of the
new packet are to the proﬁle of device D. In addition to µD
and ΣD, we deﬁne a threshold thresh as the proﬁle of the