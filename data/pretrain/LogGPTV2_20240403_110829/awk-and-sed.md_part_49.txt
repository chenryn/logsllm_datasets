是的，
好，我界定接受你的提议。
QQ群：
我知道可以用nroff来过滤我的文档并调整行，但是它只默认的
，现在的速度很慢。当我写电子邮件时，我经常对正文做很多修
50192241
378
，我相信比我更有经验的人，但是我的却有
第十三章
脚本的汇总
“这只
---
## Page 361
-i
选项为：
M
9
n
["· sel!] [u!-] [u m-] [9//o//-] !pe 
#
#
#
#
#
找
共
#
#
进
的一些新的特点，
格的长度来计算。
点符号后添加了两个空格。
序来完成，
令:%!adj
 Norman Joseph (amanue!ogIvee!norm)
注意：
-i n
-w n
设置首行缩进为n个字符
作者：
-r
lc-
-|－行左对齐，
options:
用法：adj[-llclrlb] [-w n][-i n] [files...]
调整文件的行
设置行的宽度为n个字符
用-w 加上－i来设置输出行的宽度
/bin/sh
值得注意的是这个程序使用命令行参数赋值，而且具备了awk（nawk）
这个程序处理了制表符，当计算行的长度时，它将制表符作为一个空
因此，
行居中对齐
左右对齐 
设置首先缩进为字符 (默认为：0)
设置行的宽为字符（默认为：70)
左右对齐 
行右对齐，
行右对齐，
行居中对齐
行左对齐，右边不规则 (默认的)
QQ群：
这正是所希望的。缩进和空行被保存，并且在所有的句末的标
－w73(我希望我的行长一些)。所有的行连接或断行都由这个程
无论何时当我完成这封信（我用的是vi）时，我将执行命
例如内置match和split函数及其相关支持函数。
50192241
左边不规则
右边不规则 (默认)
左边不规则
（默认为0）
（默认为70）
第十三章
脚本的汇总
---
## Page 362
下面是被shell脚本adj调用的adj.nawk脚本：
# Norman Joseph (amanue!oglvee!norm)
#作者：
#用选项调整文本的行
exec nawk -f adj. nawk type=$adj linelen=$wid indent=$ind $* 
BEGIN{
#
共
#
done
do
for arg in $*
then   
if test $?!= 0
set --
ind=0 
wid=70
adj=1 
参见“用法和调用约定”脚本
注意：这个nawk程序从"adj"脚本中调用
startblank ="~[\t]+[\t]+"
blankline = "^[\t]*$" 
FS = "\n"
printf ’ usage: %s [-llclrlb] [-w n] [-i n] [files ...］’
--) shift; break;;
-l） adj=l; shift;;
case $arg in 
exit 1
esac
三
b
ind=$2; shift 2;;
wid=$2; shift 2;;
adj=b; shift;;
adj=r;
adj=c; shift;;
‘getopt Icrbw:i: $* ‘
QQ群：
； shift;;
50192241
380
第十三章
脚本的汇总
$O
---
## Page 363
nf = split(inline, word, “[\t]+"）
outline = firstword 
while（substr（$O，i，1）～"[\t]"）{
i=1 
firstword = """
$0~ startblank
$0~ blankline { 
for
inline 
outline = ""
firstword = firstword substr( $0, i, 1 )
putline("\n"）
if（testlen >linelen）{
↓ else { 
if （i==1）{ 
（i = 1;io）{
（ type != "l" )
fill = linelen － length( line )
putline(adjust( outline, type ）"\n")
putline( outline "\n")
} else if （type == "r" )
printf( "%s", line )
printf( fmt,
fmt = "%" indent "s%s"
QQ群：
line = fillout( line, fill )
line = sprintf( fmt,
fmt = "%" fill "s%s"
line = sprintf( fmt,
fmt = "%" (fill+1)/2 "s%s"
outline= outline＂＂ word[i] #1个空格
50192241
ⅡⅡ
，line）
383
""，line）
line ）
第十三章
脚本的汇总
---
## Page 366
function fillout( line, need, i, newline, nextchar, blankseen )
while（need ）
}else if（dir == 1 ）{
if （ dir == 0 ） 
blankseen = 0 
newline = 
QQ群：
for （i = length( line ); i >= 1; i--
for （i= 1;i〈= length（line );i++）{
newline = nextchar newline 
if（need）{
nextchar = substr（Iine, i， 1 ）
newline = newline nextchar
if（need）{
nextchar = substr( line, i, 1 )
50192241
}else{
if （ nextchar == 
lelse {
 blankseen = 0 
 blankseen = 0 
if （! blankseen）
if （!blankseen）
384
blankseen = 1 
need-- 
blankseen = 1
need-- 
ⅡⅡI
第十三章
 newl ine
脚本的汇总
---
## Page 367
如果文本时右对齐的，用fill的值来填充这个字段。最后，如果格式类型为“b
因此，用空格来填充一个字段，这是需要填充的长度的一半。
参数传递给变量fmt。
恰当地使用了sprintf(函数对文本定位。例如，要对文本剧中，fill的值（加
件事是通过从指定的行长度中减去当前行的长度来计算需要“填充”多少。它
对齐，右边不规则）外其他所有的都必须被填充。因此，这个函数要做的第一
函数adjust（)根据命令行选项设置的格式类型来调整文本。除了类型“|”（左
当读取下一个输入行时，putline的内容必须在那行输出前被输出。
行的宽度，
理文本行。
于处理一空白字符（空格或制表符）开始的行。第三个是startwords，用于处
blankline，用于处理当遇到一个空行时收集的文本。第二个是startblank,
这个程序包括三个主过程，它们可以用它们匹配的变量来命名。第一个是
达式作为一个字符串。
过变量名可以知道它匹配的是什么。记住，现代的awk允许你在变量中将正则表
的技术（这是用于在lex规范中德技术），
没有对adj.awk脚本代码进行注释使它读起来比其他程序更困难。BEGIN过程将
成。使用shel建立命令行参数对那些熟悉shell的用户来说可能更容易。
adj的shelI脚本设置所有的选项，尽管这个以在BEGIN过程中通过读取ARGV来完
信件。
允许你设置行的最大宽度和调整段落，因此可以用来格式化邮件消息或简单的
这个小的文本格式程序对于应用文本编辑器的用户来说是一个很好的程序。它
程序adj的注意事项
一）被2整除来决定在行的每边需要填充的数量。这个数值被作为sprintf()的
line = sprintf( fmt, 
fmt = "%" (fill+1)/2 "s%s"
return line
，基本过程是读取一行文本并确定在这行中要填充多少个单词，给出
dir = 1 - dir
line = newline
QQ群：
50192241
，因为阅读正则表达式比较困难，而通
第十三章
脚本的汇总
---
## Page 368
为了解决这些问题，我编写了一个过滤器来预处理源文件，以将其包含在troff 
符。是的，也许我是一个完美主义者，但我不希望看到一个C程序打印满一页，
troff解释。
readsource—将程序源文件格式化为troff
的”分页符一这必须自动完成。
而在下一页中只有剩余的两行。因为我经常修改文档，我不能查询到一个“好
我经常从源文件中摘录而不用完整的文件。同时也需要一个机制来设置分页
当我使用troff做文本处理时，将源文件包含在文本中是很容易的。但有些字符
件经常随时间而改变，而打印时总希望用最新的版本。我也希望避免做排字
我经常准备技术文档，尤其是为课程和辅导。在这些文档中，我经常需要打印
由Martin Weitzel提供
格式
最后，使用函数match()查找标点符号是无效的，使用index（)将会更好。
使用默认的字段分割将会更有效。
字段分隔符能够被设置为相同的正则表达式，如下所示：
（尤其是当“”
split（)用于使用制表符或空格作为分隔符将行分隔为字段。
意味着字段和记录分隔符是相同的（也就是说，$0和$1是相同的）。函数
在过去，
处理。将“处理”和控制流分开有助于程序的可读性和可维护性。
的。有助于了解主过程如何用于控制程序的输入流，
再次仔细观察这个程序的设计，
（块）”，那么调用函数fillout来确定在行的哪个位置添加空格
FS ="[\t]+"
nf = split($O, word，“[\t]+"）
，我们不知道为什么字段分隔符FS在BEGIN过程中被设置为换行符。这就
QQ群：
、“.”和“，”出现在一行的开始部位时）必须转义以阻止被
50192241
 可以看出函数的用途是如何有助于理解程序
386
第十三章
，而子过程用于对输入进行
脚本的汇总
---
## Page 369
猜测对其他文本处理器，存在相应的合适的技术。
术，并在任何我想接受分页符的地方插入了一个关闭（.DE）和重新打开
通过troff，在我包含哪些预处理文本之前，我使用打开“显示”（.DS）的技