"shell1"
第9章集中化管理平台Ansible详解143
---
## Page 171
usr/bin/foo的resultcode（返回码）。图9-8返回“rc=0”的返回码。
when:fo_result.rc ==5成立时，shell:/usr/bin/bar命令才会运行，其中 fo_result.rc为返回/
errors:True为忽略错误。变量注册完成后，就可以在后面playbook中使用了，当条件语句
面是一个简单的示例：
9.9.3
→key:value（INI的键与值），最后就可以在我们的模板或 playbook 中通过以下方式进行调用：
返回结果如下：
144第二部分高级篇
变量的另一个用途是将一条命令的运行结果保存到变量中，供后面的 playbook 使用。下
(( ansible_local.preferences.general. open_files })
在主控端运行 ansible 192.168.1.21-m setup -a"fiter=ansible_local"可看到定义的结果，
上述示例注册了一个foo_result变量，
192.168.1.211success>>{
open_files=65535
max_user_processes=3730
max_memory_size=32
tasks:
注册变量
"changed": false
"ansible_facts":{
shell:/usr/bin/bar
shell:/usr/bin/foo
ignore_errors: True
"ansible_local":{
Linux公社 www.linuxidc.com
"preferences":
"open_files":"65535"
"max_memory_size":"32",
变量值为 shell:/usr/bin/foo的运行结果，ignore
---
## Page 172
令运行成功。
something_else 命令，其他同理，其中 success为Ansible 内部过滤器方法，返回Ture 代表命
二级处理。
False 时该条语句都不会触发。我们再看一个示例，通过判断一条命令执行结果做不同分支的
结果将返回BOOL类型值，为True时将执行上一条语句command:/sbin/shutdown-t now，为
子句实现，其中将引用Jinja2表达式。下面是一个简单的示例：
件包，或者磁盘空间爆满了将进行清理的步骤。在Ansible 中很容易做到这一点，通过 When
行过程。
果值，在某些情况下，一个变量的值可以依赖于其他变量的值，当然也会影响Ansible的执
9.10条件语句
有时候一个playbook的结果取决于一个变量，或者取决于上一个任务（task）的执行结
“when:resultlsuccess”的意思为当变量result 执行结果为成功状态时，将执行/bin/
通过定义任务的Facts 本地变量 ansible_os_family（操作系统版本名称）是否为Debian，
tasks:
tasks:
下面主要介绍When 声明。
- command:/bin/false
when: resultlfailed
command:/bin/something
when:result|skipped
ignore_errors: True
register:result
name:"shutdown Debian flavored systems"
command:/sbin/shutdown
Linux公社 www.linuxidc.com
-tnow
图9-8命令执行结果
第9章
集中化管理平台Ansible详解145
---
## Page 173
示例是等价的：
这里有2个元素，分别为 testuserl、testuser2，会分别替换{{item}}项。这个示例与下面的
骤，直到某种结果条件为止，Ansible为我们提供了此支持。下面是一个简单的示例：
9.11循环
“user:name={{item}state=present groups=wheel”，循环的次数为with_items的元素个数，
146第二部分高级篇
这个示例实现了一个批量创建系统用户的功能，with_items 会自动循环执行上面的语句
通常一个任务会做很多事情，如创建大量的用户、安装很多包，或重复轮询特定的步
以上定义了两个列表变量，分别是需要安装的软件包名，以便后面进行如下引用：
packages_apps:
packages_base:
#file: roles/foo/vars/main.yml
循环也支持列表(List)的形式，不过是通过with_flattened语句来实现的，例如：
当然，元素也支持字典的形式，如下：
name:adduser testuser2
name:add severalusers
name:flattenedloopdemo
with_items:
user:name={ item.name }} state=present groups={{item.groups }}
name: add several users
user:name=testuser2 state=present groups=wheel
with_flattened:
yum:name={{item})state=installed
user:
name:
with_items:
user:
['foo-package','bar-package']
-packages_base
-testuser2
packages_apps
['one-package',
name:
name:
:name=testuserl state=present groups=wheel
testuserl
add user testuserl
name={ item }} state=present groups=wheel
Linux公社 www.linuxidc.com
'testuser2',
'testuserl',groups:'wheel'
'two-package']]
['blue-package']]
groups:
---
## Page 174
对Ansible的总结内容。
对该示例进行详细说明，内容覆盖前面涉及的几乎所有知识点，起到温故的作用，同时作为
例访问地址为：https://github.com/ansible/ansible-examples/tree/master/lamp_haproxy。下面将
9.12示例讲解
官网提供的 Haproxy+LAMP+Nagios经典示例，也是目前国内最常用的技术架构，此案
示例playbook目录结构见图9-9。
1.目录结构
下面介绍playbook的基本信息。
通过使用with_flattened语句循环引用定义好的列表变量。
Linux公社 www.linuxidc.com
图9-9示例目录结构
第9章
集中化管理平台Ansible详解147
---
## Page 175
境，为提高复用性，将部署Apache 独立成base-apache 角色。
148第二部分高级篇
【 Site.yml 】
需要注意的是base-apache角色，由于webservers及monitoring 都需要部署Apache 环
3.palybook人口文件site.yml
nagios
[lbservers]
web2
【hosts】
两台Web主机、1台数据库主机、1台负载均衡器主机、1台监控主机，hosts配置如下：
2.设备环境说明
[monitoring]
lb1
db1
[dbservers]
webl
[webservers]
-nagios
hosts:monitoring
roles:
user:root
hosts: lbservers
base-apache
user:root
hosts:webservers
user:root
hosts: dbservers
roles:
hosts: all
roles:
haproxy
web
coles:
roles:
base-apache
common
Linux公社www.linuxidc.com
---
## Page 176
此处也可以修改成本地的服务地址。
外定义了一个GitHub的repository，方便下载Web 测试文件，如内部搭建git版本控制环境
地址、sysctl变量、iptables 配置等。
# The variables file used by the playbooks in the dbservers group
【 group_vars/dbservers 】
下面为定义 dbservers 组的变量，变量作用域为 dbservers 组主机。
webservers文件定义了webservers 组作用域的变量。本示例涉及Apache相关配置，
webapp_version: 351e47276cc66b018f4890a04709d4cc3d3edb0d
【 group_vars/webservers 】
下面为定义webservers 组的变量，
#this is the shalsum of v5 of the test webapp.
#this is the repository that holds our sample webapp
all文件定义了匹配所有主机作用域的变量，
#Variables for the web server configuration
httpd_port:80
【 group_vars/all 】
下面定义playbook全局变量，变量作用域为所有主机。
4.定义组变量
repository:https://github.com/bennojoy/mywebapp.git
Ethernet interface on which the web server should listen.
...tooverride
iface:ethl
Linux公社 www.linuxidc.com
：变量作用域为webservers 组主机。
Change this to:
，一般为系统公共类基础配置，如ntpserver
第9章
集中化管理平台Ansible详解
其
149
---
## Page 177
更换成 nginx，然后在 site.yml中引用。
对应6个功能环境部署，根据不同业务场景的需求，可以随意加、减角色，如将base-apache
数值。
信息。
150第二部分高级篇
本示例划分了6个角色，包括base-apache、common、db、haproxy、nagios、web，分别
5.playbook角色详解
【 group_vars/lbservers 】
下面为定义 Ibservers 组作用域变量文件，本示例主要涉及haproxy 环境涉及的配置参
iface:'( ansible_default_ipv4.interface1}
balance:roundrobin
daemonname:myapplb
#A name for the proxy daemon, this wil be the suffix in the logs.
#Port on which HAProxy should listen
# HAProxy supports "http" and "tcp", For SSL, SMTP, etc, use "tcp".
# Variables for the HAproxy configuration
dbservers 文件定义了dbservers 组作用域变量，本示例涉及MySQL 数据库的基本应用
node:http
upassword:abc
dbname:foodb
dbuser:root
mysql_port:3306
mysqlservice:mysqld
autopopulated.
#These don't have
Defaults to the first interface.
Ethernet
...tooverride.
iface:ethl
interfaceonwhich the
Linux公社 www.linuxidc.com
leastconn, source,uri
Availableoptions:
to be explicitly imported by vars_files: they are
Change this to:
load balancer should listen
---
## Page 178
common/files，使用with_item标签实现循环安装nagios插件，同时安装ntp服务，引用模
服务、iptables、SELinux等，任务（tasks）的定义如下：
上述代码定义了两个远程文件复制copy，其中 src（源文件）的默认位置在roles/
【roles/common/tasks/main.yml】
common 的主要功能是部署、配置系统基础服务，包括 yum 源、安装 nagios插件、NTP
# This role contains common plays that will run on all nodes.
（1）common角色
changed_when: false
name: test to see if selinux is running
name:insert iptables template
service:name=ntpd state=started enabled=true
name: Start the ntp service
template: src=ntp.conf.j2 dest=/etc/ntp.conf
name: Install ntp
yum:name={{item)}state=present
name: install some useful nagios plugins
notify:restart iptables
template:src=iptables.j2 dest=/etc/sysconfig/iptables
tags:ntp
copy:
name:
copy:src=epel.repodest=/etc/yum.repos.d/epel.repo
name:Create the repository for EPEL
register: sestatus
tags:ntp
notify:restart ntp
cags:ntp
yum:name=ntp state=present
-nagios-nrpe
with_items:
nagios-plugins-disk
nagios-plugins-load
nagios-plugins-procs
nagios-plugins-swap
nagios-plugins-users
:Src=RPM-GPG-KEY-EPEL-6 dest=/etc/pki/rpm-gpg
：Create the GPG key for EPEL
Linux公社 www.linuxidc.com
第9章集中化管理平台Ansible详解151
---
## Page 179
以获得主机的 Facts 信息，如 hostvars[host].ansible_default_ipv4.address 获取主机IP。
现了循环开通允许monitoring 组主机访问5666端口，使用hostvars[host]得到主机对象，
件成立则添加 80端口访问权限（-A INPUT-p tcp--dport 80-jACCEPT）。For...endfor语句实
的inventory_hostname是否在webservers及monitoring组中（定义具体在hosts文件中），条
而ansible_hostname则返回主机名。模板使用了jinja2的语法，本例if..endif语句判断当前
hostname等于ansible_hostname，但有时候我们习惯在Ansible的inventory中使用IP地址，
是可以不依靠Facts的主机名参数 ansible_hostmame或其他原因，一般情况下inventory_
同理。
ntp”与任务（tasks）定义中的“notify:restart ntp”是一一对应的，“name:restart iptables”
检测 selinux是否在运行状态，“changed_when:false”作用为不记录命令运行结果的changed
板发生变化时将通知处理程序（handlers）来处理。“command:getenforce”运行getenforce来
iptables，引用roles/common/templates/iptables.j2模板，“notify:restart iptables”，状态或模
块文件roles/common/templatesntp.conf.j2，且同步到目标主机/etc/ntp.conf位置。
152第二部分高级篇
“inventory_hostname”作为存放在Ansible的inventory文件中的主机名或IP，好处
{ if (inventory_hostname in groups['webservers']) or (inventory_hostname in
【roles/common/templates/iptables.j2】
下面定义了common 角色 iptables 的配置模板：
上述代码定义了两个处理程序，功能分别为重启 ntp、iptables 服务，其中“name:restart
【 roles/common/handlers/main.yml 】
5666-jACCEPT
(forhost in groups['monitoring']%]
groups['monitoring'])%}
#Handlers for common notifications
下面定义common角色的处理程序。
（%endfor%）
：
%
service:name=iptables state=restarted
name:restart iptables
endif%}
service: name=ntpd state=restarted
name:restart ntp
Linux公社www.linuxidc.com
--dport 80-j ACCEPT
配置系统
同
---
## Page 180
的定义如下：
vars/Ibservers 中定义）的 IPv4 IP地址。
haproxy服务，使之生效。
cfg.j2模板文件，完成后同步到目标主机/etc/haproxy/haproxy.cfg位置，状态发生变化时重启
循环安装haproxy、socat 两个工具，同时根据配置参数渲染roles/haproxy/templates/haproxy.
web 角色主要实现了php、php-mysql、git平台部署及 SELinux的配置功能，任务（tasks)
（3）web角色
{{ hostvars[host]['ansible_'+ iface].ipv4.address}实现了获取网卡名变量iface（group_
address):(
backend app
【roles/haproxy/templates/haproxy.cfg.j2】
下面定义了haproxy角色haproxy.cfg的配置模板：
任务（tasks）定义了两个功能，
【roles/haproxy/tasks】
haproxy 角色主要实现了haproxy平台的部署、配置功能，任务（tasks）的定义：
（2）haproxy角色
['ansible_'
name: Configure the haproxy cnf file with hosts
#This role installs HAProxy and configures it.
notify:restart haproxy
template:
yum:name={{ item}}state=present
name:Download and install haproxy and socat
with_items:
[%endfor)
(%for host in groups['lbservers']%}
{%for host in groups['webservers']}
socat
balance
{%endfor]
haproxy
server {f hostvars[host].ansible_hostname l} (( hostvars[host]
listen (( daemonname }) (( hostvars[host]['ansible_'+iface].ipv4.
Linux公社 www.linuxidc.com
src=haproxy.cfg.j2 dest=/etc/haproxy/haproxy.cfg
listenport })
{{balance}