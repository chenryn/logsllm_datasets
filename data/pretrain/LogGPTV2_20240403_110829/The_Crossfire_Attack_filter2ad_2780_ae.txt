densities (viz., Section III-A). The power-law distribution
of ﬂow densities makes the Crossﬁre attack very effective
indeed. That is, ﬂooding only a few high ﬂow-density links
would effectively disconnect a large number bot-target area






!
!



 



 





"!
"!



 





 


  

  

















  



 



 


Figure 6: Deviations from baseline degradation ratios for
different bot subsets.
1
0.8
0.6
0.4
0.2
o
i
t
a
R
n
o
i
t
a
d
a
r
g
e
D
0
0
10
20
30
Number of target links
Univ1
Univ2
New York
Pennsylvania
Massachusetts
Virginia
East Coast (US)
West Coast (US)
40
50
Figure 7: Degradation ratios for various target areas for
different numbers of target links.
routes.
After computing the ﬂow densities of all persistent links,
we select a set of target links using the greedy algorithm
speciﬁed in Section IV-D. Recall that we do not select links
that are located close to a target area (more precisely, links
whose distance from the target area is less than or equal
to three hops) to avoid attack detection by any servers in
the target area. For example, the average hop distance from
the selected target links to Univ1 and Univ2 are 3.67 and
4.33, respectively13. Note that even though we eliminate
links that are less than three hops away from the target area,
we can effectively ﬁnd target links with sufﬁciently large
ﬂow densities as discussed in the following subsection.
Degradation ratio. Fig. 7 shows the degradation ratios
for various target areas with different numbers of target
links. As shown in this ﬁgure, the increase in the degradation
13For medium and large areas, the hop distance can be measured relative
to the peripheral servers.
137
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:55:31 UTC from IEEE Xplore.  Restrictions apply. 
)
s
p
b
M
(
e
t
a
R
−
d
n
e
S
e
g
a
r
e
v
A
3
2
1
0
Per−Bot (β=100)
Per−Bot (β=200)
Per−Bot (β=500)
Per−DecoyServer
Small area
Medium area
(Univ1)                (Pennsylvania)       (East Coast of USA)
Large area
Figure 8: Per-bot, per-decoy server average send-rates for
different bot cluster sizes (β).
ratio achieved by ﬂooding additional target links diminishes
as we ﬂood more links; e.g., ﬂooding the ﬁrst ﬁve target
links for attacking Univ1 results in an 83% degradation ratio
whereas ﬂooding ﬁve additional target links increases the
degradation ratio by only 6%. This trend clearly shows that
the power-law distribution of the ﬂow density enables the
adversary to achieve a high degradation ratio by ﬂooding
only a few target links. In general, the smaller the target
area, the higher degradation ratio, because smaller target
areas have relatively few links that deliver most of the trafﬁc
to them. For example, when ﬂooding 15 target links, the
degradation ratio of a large area (i.e., West Coast of US) is
as high as 32.85%, that of a medium area (i.e., Virginia) is
as high as 53.05%, and that of a small area (i.e., Univ1) is
as high as 90.52%. This result may be misinterpreted and
conclude that the Crossﬁre attack would damage only small
target areas. In reality, when the attack effects are measured
in terms of the total number of effectively disconnected end-
users (or hosts) in a target area, the attack appears to be
far more lethal to a large target area than a small one. For
example, a Crossﬁre attack against West Coast using 15
target links effectively disconnects only 32.85% of trafﬁc,
yet the number of affected servers is huge.
Attack bots and ﬂows. To ﬂood the selected target
links, we assign attack ﬂows to bots by providing the list
of decoy server IPs and corresponding ﬂow rates. In our
experiments, we set a 4 Kbps per-ﬂow rate, which can be
achieved by sending one HTTP GET message per second,
for the indistinguishability of the Crossﬁre attack. While
maintaining the low per-ﬂow rate, we assign the attack
ﬂows evenly to the multiple bots and decoy servers. We
conservatively assume that the bandwidth of target links is
40 Gbps, which ensures the presence of at least 107 (i.e.,
40 Gbps/4 Kbps ) attack ﬂows through each target link.
Fig. 8 shows the per-bot and per-decoy server average
send-rates for three target areas of different sizes when
ﬂooding ten selected target links. Notice that for the large
bot cluster size (β), we achieve lower per-bot send-rate
since the attack ﬂows can be more evenly distributed. An
important observation is that for any target area, the per-
bot average send-rate can be much lower than 1 Mbps
when the bot cluster size (β) equals 500 (i.e., 536,000 bots
in total). This shows that the adversary can aggregate a
sufﬁciently large number (i.e., 107) of low-rate (i.e., 4 Kbps)
attack ﬂows at each selected target link and thus successfully
exceed the bandwidth (i.e., 40 Gbps) of the target link while
maintaining low per-bot and per-decoy server average send-
rates. If the adversary uses more bots and decoy servers in
practice, these average rates would become even lower.
VI. ATTACK CHARACTERISTICS
The Crossﬁre attack has four distinct characteristics which
distinguish it from ordinary DDoS attacks, namely unde-
tectability, attack-ﬂow indistinguishability, ﬂexibility in the
choice of targets, and persistence in terms of attack duration.
Undetectability at the Target Area. The Crossﬁre at-
tack uses all legitimate ﬂows to ﬂood target links. Each
bot creates ordinary connections (e.g., HTTP) with a set
of decoy servers following the adversary’s (i.e., the bot-
master’s) assignments, and hence individual connections do
not trigger an attack alarm at the servers. Since a target area
is not directly attacked and the decoy servers near the target
area do not see any suspicious trafﬁc, the servers in the
target area would be unable to detect the attack. Even decoy
servers would be unable to detect the attack since the well-
coordinated ﬂows to the decoy servers would cause only a
few Mbps bandwidth increase to each server. Furthermore,
the adversary can easily select target links among the links
in the target set that are several hops (i.e., at least 3 hops in
our experiments) away from the target area since links with
high ﬂow density are usually located in the core backbone
networks. This makes it difﬁcult even for the target links to
identify an attack.
Indistinguishability of Flows in Routers. In the Cross-
ﬁre attack, a large number of low-rate attack ﬂows pass
through a target link. Hence, a router connected to the target
link cannot distinguish the attack ﬂows from legitimate ones.
In other words, since all the attack ﬂows carry different
source IP addresses and destination IP addresses, the high
bandwidth aggregation mechanisms (e.g., Pushback [52],
PSP [14]) become ineffective even if they are employed at
all routers along the attack routes. Inspecting the payload
of each packet would not help either because the attack
ﬂows carry the same payload as that of legitimate ﬂows.
Moreover, ﬂooding target links with different sets of bots
(e.g., the rolling attack, viz., Section IV-B) would further
enhance this inherent indistinguishability of attack ﬂows in
routers.
Persistence. The Crossﬁre attack is able to disconnect a
target area persistently by controlling the bot trafﬁc so as not
to trigger any control plane changes (e.g., route changes).
This is achieved by using stable routes in rolling attacks,
which change an active set of target
links dynamically
(viz., Section IV-B). In essence, a rolling attack makes the
Crossﬁre attack a pure data plane attack, thereby leaving
138
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:55:31 UTC from IEEE Xplore.  Restrictions apply. 
the control plane of the Internet unchanged. This extends
the attack duration virtually indeﬁnitely. The details of the
attack persistence are presented in Section IV-A.
Flexibility. The Crossﬁre attack can be launched against
any target area (regardless of its size) since an adversary
can usually ﬁnd a large number of public servers inside that
target area and decoy servers near it; e.g., the adversary can
select any of the many publicly accessible servers without
needing permission from that server. This offers a great deal
of ﬂexibility in the adversary’s choice of a target area, which
is one of the most important characteristics that distinguish
the Crossﬁre attack from other link-ﬂooding attacks (viz.,
Related Work in Section VII). Our adversary’s choice is
enhanced by its low-rate ﬂows used by the bots since the
resulting attack ﬂows would not trigger individual alarms in
any potential target area.
VII. RELATED WORK
A. Control Plane DDoS Attacks
DDoS attacks against a network link, even if launched
with low-rate trafﬁc, can disrupt a routing protocol (e.g.
BGP) and ultimately trigger instability in the Internet. This
class of attacks, which we call Control Plane DDoS attack,
ﬁrst proposed by Zhang et al. [53], exploits the fact that
the control plane and data plane use the same physical
medium. This fate-sharing allows an unprivileged adversary
to convince a BGP speaking router that its BGP session
has failed. Schuchard et al. in [5] extended this attack to
multiple BGP sessions, which were selected based on the
betweenness centrality measures of the network topology.
They showed that their CXPST attack can generate enough
BGP updates to cripple the Internet’s control plane.
In contrast, the Crossﬁre attack is pure data plane attack,
which maintains the effects of the attack persistently by
suppressing any control plane reaction.
B. Attacks against Links
The recent Coremelt attack [7] demonstrates how a set of
bots can send packets to each other and ﬂood a set of AS
backbone routers. The key characteristic of Coremelt is that
it creates only wanted trafﬁc and thus it eludes all defense
mechanisms that ﬁlter unwanted trafﬁc. Furthermore, this
trafﬁc is not subject to the congestion-control mechanisms
of TCP and can thus exceed typical TCP trafﬁc bounds.
This unique advantage cannot be exploited in Crossﬁre,
since the ends of its attack ﬂows are not bots. Thus,
Crossﬁre uses protocol messages that are unencumbered by
congestion control; e.g., HTTP GET requests. In contrast
with Coremelt, Crossﬁre creates very low intensity trafﬁc
(e.g., 4 Kbps ﬂows) to decoy servers, which can be any
public IP addresses. Furthermore, it can ﬂood any of the
selected target links regardless of the distribution of bots,
and its server-disconnection effects at a target area are easily
predictable. Crossﬁre is more persistent than Coremelt, since
Design Goal
Crossﬁre
Coremelt
High
Y
Flexibility of targeting server areas
Bot-distribution independence
Persistence
· Data vs. control plane distinction
· Robustness against route changes
Distribution of target links across multiple ISPs