### Thread Coding and Analysis

Threads were independently coded by two researchers, who subsequently reached a consensus on any discrepancies.

#### Task Relevance
We first evaluated the relevance of each thread to the study task. If the topic did not contribute to solving the task, it was flagged as off-topic and excluded from further analysis.

#### Usefulness
On-topic threads were rated as either useful or not useful based on the relevance and quality of the answers provided:
- **Not Useful**: Threads with no answers or answers that did not address the original question.
- **Useful**: Threads with answers that discussed the question and provided helpful comments, links to other resources, or sample code.

#### Code Snippets
We examined all answers in each thread for ready-to-use code snippets. A code snippet was rated as ready-to-use if it could be directly implemented without significant modification.

### Properties of On-Topic Stack Overflow Threads

| Category | Count | Percentage |
|----------|-------|------------|
| Useful Answers | 35 | 85.4% |
| Useless Answers | 6 | 14.6% |
| Discussion of Security Implications | 12 | 29.3% |
| Working Code Examples | 20 | 48.8% |
| Only Secure Code Examples | 7 | 17.0% |
| Only Insecure Code Examples | 10 | 24.4% |
| Links to GitHub | 23 | 56.1% |
| Links to Other Code Repositories | 6 | 14.6% |
| Links to Other Stack Overflow Threads | 4 | 9.8% |
| Only Secure Code Examples and Secure Links | 1 | 2.4% |
| Insecure Links | 3 | 7.3% |

### Popularity Ratings for Threads Containing Code Snippets

| Category | Mean | Median | Standard Deviation |
|----------|------|--------|--------------------|
| With Code Snippets | 97.7 | 12 | 163.9 |
| Without Code Snippets | 3.9 | 2.5 | 4.4 |
| With Secure Code Snippets | 204.3 | 145 | 122.4 |
| With Insecure Code Snippets | 70.2 | 14 | 209.3 |
| Without Security Implications | 135.2 | 16 | 207 |
| With Security Implications | 17.4 | 3 | 37 |

### Real-World App Analysis

To analyze real-world apps, we applied standard static code-analysis techniques:
1. **Decompiling Android APK Files**
2. **Constructing Control Flow Graphs (CFGs)**
3. **Applying Backtracking**

We analyzed a random sample of 200,000 free Android apps from Google Play.

#### Secure Networking Task
- **Analysis**: We checked if an app implements the `HostnameVerifier` interface.
- **Method**: The `verify(String hostname, SSLSession session)` method was analyzed to determine if it performs actual hostname verification or simply accepts every hostname.

#### ICC Task
- **Analysis**: We examined the app's Manifest file.
- **Method**: We extracted `<intent-filter>` entries and checked for the `android:exported` flag and `android:permission` attributes.

#### Secure Storage Task
- **Analysis**: We determined if an app stores data persistently.
- **Method**: We looked up relevant API calls in the call graph, distinguishing between SQLite databases, the file system, and shared preferences.

#### Least Permissions Task
- **Analysis**: We examined the use of dialing compared to calling.
- **Method**: We analyzed the Manifest file for the `CALL_PHONE` permission request and searched for relevant API calls in the CFG.

### Results of Static Analysis

| Task | Category | Count | Percentage |
|------|----------|-------|------------|
| Secure Networking | Broken Hostname Verifier | 19,520 | 98.9% |
| Secure Networking | Alternative Hostname Verification | 214 | 0.1% |
| ICC | Service with Intent Filter | 8,133 | 19.3% |
| ICC | Exported = true | 3,796 | 8.9% |
| ICC | Permission | 3,827 | 9.1% |
| ICC | Signature or System Permission | 86 | 0.2% |
| Secure Storage | Filesystem, Private | 120,834 | 77.9% |
| Secure Storage | Filesystem, Public | 34,183 | 22.1% |
| Secure Storage | Database, Private | 4,471 | 96.7% |
| Secure Storage | Database, Public | 154 | 3.3% |
| Secure Storage | Shared Preferences, Private | 130,408 | 88.0% |
| Secure Storage | Shared Preferences, Public | 17,848 | 12.0% |
| Least Permissions | Dial, No Permission | 52,739 | 82.1% |
| Least Permissions | Dial, Permission | 3,907 | 7.4% |
| Least Permissions | Call, Permission | 11,493 | 17.9% |
| Least Permissions | Call, No Permission | 6,157 | 53.6% |

### Discussion

Our findings indicate that 187,291 (93.6%) of the 200,000 apps analyzed used at least one of the APIs from our programming tasks. This suggests that our laboratory study includes tasks that real-world developers encounter. For secure storage and least privilege tasks, most apps implemented more secure solutions. However, for secure networking and ICC tasks, we found more insecure solutions, mirroring the results of our lab study.

### Limitations

- **Response Rate**: The response rate for our online developer survey was low, which may introduce self-selection bias.
- **Artificial Scenario**: The lab study created an artificial scenario, which may have affected participants' performance and security considerations.
- **Participant Demographics**: Most lab participants were students rather than professional developers, which may limit the generalizability of the results.
- **Stack Overflow Analysis**: Our analysis was limited to threads accessed by lab study participants, and the manual coding process was somewhat subjective.
- **Static Code Analysis**: Although we performed reachability analyses, static code analysis may include non-executed code paths, leading to potential false positives.

### Conclusion

Our study provides systematic evidence that the resources Android developers use, such as Stack Overflow, significantly affect the security and privacy properties of their apps. While Stack Overflow offers quick and practical solutions, it often contains insecure answers, potentially leading to less secure code. To address this, there is a need for documentation and resources that combine the usability of forums with the security awareness of official API documents.

### Acknowledgements

The authors would like to thank Sven Bugiel, Andrew Lui, Yichen Qian, Marten Oltrogge, Joseph Smith, Jennifer DeSimone, and all the developers and students who participated in the study. This work was supported in part by the German Ministry for Education and Research (BMBF) and the U.S. Department of Commerce, National Institute for Standards and Technology.

### References

[References listed here as per the original text]

---

This version of the text is more structured, coherent, and professionally formatted, making it easier to read and understand.