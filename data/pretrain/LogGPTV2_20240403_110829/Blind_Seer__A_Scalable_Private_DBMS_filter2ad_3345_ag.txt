Finally, we thank our colleagues from other IARPA SPAR
teams for great collaboration and exchange of ideas.
REFERENCES
[1] IARPA Security and Privacy Assurance Research (SPAR) program. http:
//www.iarpa.gov/Programs/sso/SPAR/spar.html.
stemming
algorithm.
http://tartarus.org/martin/
[2] The
porter
PorterStemmer/.
[3] Privacy groups ﬁle lawsuit over license plate scanners. http://www.
therepublic.com/view/story/210d27e7585543a3941f5e577cf7f627/
CA--License-Plate-Suit.
[4] M. Abdalla, M. Bellare, D. Catalano, E. Kiltz, T. Kohno, T. Lange,
J. Malone-Lee, G. Neven, P. Paillier, and H. Shi. Searchable encryp-
tion revisited: Consistency properties, relation to anonymous IBE, and
extensions. J. Cryptol., 21(3):350–391, 2008.
[5] D. Beaver. Precomputing oblivious transfer. In D. Coppersmith, editor,
CRYPTO’95, volume 963 of LNCS, pages 97–109. Springer, Aug. 1995.
[6] M. Bellare, A. Boldyreva, and A. O’Neill. Deterministic and efﬁciently
searchable encryption. In Proceedings of CRYPTO’07, 2007.
[7] M. Bellare, V. T. Hoang, and P. Rogaway. Foundations of garbled
In T. Yu, G. Danezis, and V. D. Gligor, editors, ACM CCS
circuits.
12, pages 784–796. ACM Press, Oct. 2012.
[8] B. H. Bloom. Space/time trade-offs in hash coding with allowable errors.
Commun. ACM, 13(7):422–426, 1970.
[9] D. Boneh, G. D. Crescenzo, R. Ostrovsky, and G. Persiano. Public key
encryption with keyword search. In Proceedings of EUROCRYPT’04,
pages 506–522, 2004.
[10] D. Boneh and B. Waters. Conjunctive, subset, and range queries on
In S. P. Vadhan, editor, TCC 2007, volume 4392 of
encrypted data.
LNCS, pages 535–554. Springer, Feb. 2007.
[11] D. Cash, S. Jarecki, C. S. Jutla, H. Krawczyk, M.-C. Rosu, and
M. Steiner. Highly-scalable searchable symmetric encryption with
support for boolean queries.
In R. Canetti and J. A. Garay, editors,
CRYPTO 2013, Part I, volume 8042 of LNCS, pages 353–373. Springer,
Aug. 2013.
[12] Y.-C. Chang and M. Mitzenmacher. Privacy preserving keyword searches
on remote encrypted data. In ACNS, volume 3531, 2005.
[13] M. Chase and S. Kamara. Structured encryption and controlled dis-
closure. In M. Abe, editor, ASIACRYPT 2010, volume 6477 of LNCS,
pages 577–594. Springer, Dec. 2010.
[14] S. G. Choi, J. Katz, R. Kumaresan, and H.-S. Zhou. On the security
of the “free-XOR” technique. In R. Cramer, editor, TCC 2012, volume
7194 of LNCS, pages 39–53. Springer, Mar. 2012.
[15] B. Chor, N. Gilboa, and M. Naor. Private information retrieval by
keywords. Technical Report TR-CS0917, Dept. of Computer Science,
Technion, 1997.
[16] B. Chor, O. Goldreich, E. Kushilevitz, and M. Sudan. Private information
retrieval. J. ACM, 45(6):965–981, 1998.
[17] R. Curtmola, J. A. Garay, S. Kamara, and R. Ostrovsky. Searchable
symmetric encryption: improved deﬁnitions and efﬁcient constructions.
In ACM CCS 06, pages 79–88, 2006.
[18] E. De Cristofaro, Y. Lu, and G. Tsudik. Efﬁcient techniques for privacy-
preserving sharing of sensitive information. In TRUST’11, pages 239–
253, 2011.
372
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:00:22 UTC from IEEE Xplore.  Restrictions apply. 
[19] T. ElGamal. A public key cryptosystem and a signature scheme based on
discrete logarithms. IEEE Transactions on Information Theory, 31:469–
472, 1985.
[20] S. Even, O. Goldreich, and A. Lempel. A randomized protocol for
signing contracts.
In D. Chaum, R. L. Rivest, and A. T. Sherman,
editors, CRYPTO’82, pages 205–210. Plenum Press, New York, USA,
1982.
[21] C. Gentry. Fully homomorphic encryption using ideal lattices.
In
M. Mitzenmacher, editor, 41st ACM STOC, pages 169–178. ACM Press,
May / June 2009.
[22] C. Gentry, K. A. Goldman, S. Halevi, C. Julta, M. Raykova, and
D. Wichs. Optimizing oram and using it efﬁciently for secure com-
putation.
In Privacy Enhancing Technologies, pages 1–18. Springer,
2013.
[23] C. Gentry, S. Halevi, and N. P. Smart. Homomorphic evaluation of the
AES circuit. In R. Safavi-Naini and R. Canetti, editors, CRYPTO 2012,
volume 7417 of LNCS, pages 850–867. Springer, Aug. 2012.
[24] Y. Gertner, Y. Ishai, E. Kushilevitz, and T. Malkin. Protecting data
privacy in private information retrieval schemes. Journal of Computer
and System Sciences, 60(3):592–629, 2000.
[25] E.-J. Goh. Secure indexes. IACR Cryptology ePrint Archive, 2003:216,
2003.
[26] O. Goldreich, S. Micali, and A. Wigderson. How to play any mental
game or A completeness theorem for protocols with honest majority.
In A. Aho, editor, 19th ACM STOC, pages 218–229. ACM Press, May
1987.
[27] O. Goldreich and R. Ostrovsky. Software protection and simulation on
oblivious rams. J. ACM, 43:431–473, 1996.
[28] S. Goldwasser and S. Micali. Probabilistic encryption.
Computer and System Sciences, 28(2):270–299, 1984.
[29] S. D. Gordon, J. Katz, V. Kolesnikov, F. Krell, T. Malkin, M. Raykova,
and Y. Vahlis. Secure two-party computation in sublinear (amortized)
time. In ACM CCS 12, pages 513–524, 2012.
[30] Y. Ishai, J. Kilian, K. Nissim, and E. Petrank. Extending oblivious
transfers efﬁciently. In D. Boneh, editor, CRYPTO 2003, volume 2729
of LNCS, pages 145–161. Springer, Aug. 2003.
[31] S. Jarecki, C. S. Jutla, H. Krawczyk, M.-C. Rosu, and M. Steiner.
Outsourced symmetric private information retrieval. In A.-R. Sadeghi,
V. D. Gligor, and M. Yung, editors, ACM CCS 13, pages 875–888. ACM
Press, Nov. 2013.
[32] S. Kamara and C. Papamanthou. Searching Dynamic Encrypted Data
[33] D. M. Kays. Reasons to “friend” electronic discovery law. Franchise
in Parallel. In FC 2013, 2013.
Law Journal, 32(1), 2012.
[34] V. Kolesnikov. Gate evaluation secret sharing and secure one-round
two-party computation. In B. K. Roy, editor, ASIACRYPT 2005, volume
3788 of LNCS, pages 136–155. Springer, Dec. 2005.
[35] V. Kolesnikov and R. Kumaresan.
Improved secure two-party com-
putation via information-theoretic garbled circuits.
In I. Visconti and
R. D. Prisco, editors, SCN 12, volume 7485 of LNCS, pages 205–221.
Springer, Sept. 2012.
[36] V. Kolesnikov and T. Schneider. Improved garbled circuit: Free XOR
gates and applications. In L. Aceto, I. Damg˚ard, L. A. Goldberg, M. M.
Halld´orsson, A. Ing´olfsd´ottir, and I. Walukiewicz, editors, ICALP 2008,
Part II, volume 5126 of LNCS, pages 486–498. Springer, July 2008.
[37] V. Kolesnikov and T. Schneider. A practical universal circuit construc-
tion and secure evaluation of private functions. In G. Tsudik, editor, FC
2008, volume 5143 of LNCS, pages 83–97. Springer, Jan. 2008.
[38] Y. Lindell and B. Pinkas. A proof of security of Yao’s protocol for two-
party computation. Journal of Cryptology, 22(2):161–188, Apr. 2009.
[39] S. Lu and R. Ostrovsky. Distributed oblivious ram for secure two-party
computation. In TCC, pages 377–396, 2013.
[40] D. Malkhi, N. Nisan, B. Pinkas, and Y. Sella. Fairplay - secure two-party
computation system. In USENIX Security Symposium, pages 287–302,
2004.
[41] T. Moataz and A. Shikfa. Boolean symmetric searchable encryption.
In ASIACCS 2013: 8th ACM Symposium on Information, Computer and
Communications Security, 2013.
[42] M. Naor and B. Pinkas. Computationally secure oblivious transfer.
Journal of Cryptology, 18(1):1–35, Jan. 2005.
[43] J. E. Pace III. Testing the security blanket: An analysis of recent
challenges to stipulated blanket protective orders. Antitrust Magazine,
19(3), 2005.
Journal of
APPENDIX A
REPRESENTING QUERY & POLICY
[44] V. Pappas, M. Raykova, B. Vo, S. M. Bellovin, and T. Malkin. Private
search in the real world. In ACSAC ’11, pages 83–92, 2011.
[45] R. A. Popa, C. M. S. Redﬁeld, N. Zeldovich, and H. Balakrishnan.
Cryptdb: protecting conﬁdentiality with encrypted query processing. In
SOSP ’11, pages 85–100. ACM, 2011.
[46] M. O. Rabin. How to exchange secrets by oblivious transfer. In Technical
Report TR-81. Aiken Computation Laboratory, Harvard University,
1981.
[47] M. Raykova, B. Vo, S. Bellovin, and T. Malkin. Secure anonymous
database search. In CCSW 2009., 2009.
[48] P. Rogaway. The round complexity of secure protocols. PhD thesis,
Massachusetts Institute of Technology, 1991.
[49] E. Shi, J. Bethencourt, H. T.-H. Chan, D. X. Song, and A. Perrig. Multi-
dimensional range query over encrypted data. In 2007 IEEE Symposium
on Security and Privacy, pages 350–364. IEEE Computer Society Press,
May 2007.
[50] D. X. Song, D. Wagner, and A. Perrig. Practical techniques for searches
on encrypted data.
In Proceedings of the 2000 IEEE Symposium on
Security and Privacy, SP ’00, pages 44–, Washington, DC, USA, 2000.
IEEE Computer Society.
[51] J. K. Yan Huang, David Evans and L. Malka. Faster secure two-party
In USENIX Security Symposium.
computation using garbled circuits.
USENIX Association, 2011.
[52] A. C.-C. Yao. Protocols for secure computations (extended abstract). In
23rd FOCS, pages 160–164. IEEE Computer Society Press, Nov. 1982.
[53] A. C.-C. Yao. How to generate and exchange secrets (extended abstract).
In 27th FOCS, pages 162–167. IEEE Computer Society Press, Oct. 1986.
Encoding a query.
In our system, a query is represented
as a Bloom ﬁlter. This ﬁlter contains all the relevant columns
and operations, and search terms and conditions. For example,
consider the following query:
SELECT id WHERE fname = ALICE AND dob <= 1975-1-1
AND CONTAINED_IN(notes1, engineer)
(2)
The bloom ﬁlter will contain the following:
• fname, fname:=, fname:ALICE, fname:=:ALICE
• dob,
dob:1975-1-1, dob:<=:1975-1-1
• notes1,
notes1:contained_in,
dob:<=,
notes1:engineer,
notes1:contained_in:engineer
Policy circuit. The current implementation provides a parser
for any policy that can be represented as a monotone DNF
where each variable indicates whether some policy condition
(BF keyword) belongs to the input BF representing a query as
described above; if the formula output is true, then the client’s
query is disallowed. For example, a policy may disallow a
query if it contains an equality check on fname with value
ALICE and a range in dob. In this case, the policy circuit is
a simple formula V1 AND V2, where the variable V1 is true
if the input BF contains fname:=:ALICE, and V2 is true if
the ﬁlter contains dob:<=. Indeed, query (2) above will be
disallowed.
We believe that this provides a wide coverage of policies.
For example, our parser also supports a policy that allows only
range operation on fname, indirectly. One technical issue is
that we do not want to allow any false approval of a query
that fails the policy (though a tunable small probability of
false rejection of a good query is acceptable), but the Bloom
ﬁlters allow no false negatives. We can ﬁx this issue by adding
keywords representing absence column, or column operators
373
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:00:22 UTC from IEEE Xplore.  Restrictions apply. 
• When 2 ≤ x ≤ α − 1, it holds that
Pr[b = 1| x] =
Pr[X = (1, x)]
Pr[x]
• When x ≥ α, it holds that
=
δ/α
δ/α + (1 − δ)/α
= δ.
Pr[b = 1| x] =
Pr[X = (1, x)]
δ · (1/α) · 1/2x−α
Pr[x]
=
=
δ · (1/α) · 1/2x−α + (1 − δ) · (1/α) · 1/2x−α+1
δ + (1 − δ)/2
≤ 2δ.
1 + δ
2δ
=
δ
to the BF. In the example above the system adds the following
keywords:
• NOT:fname:range, NOT:dob:=,
NOT:notes1:stem,
NOT:lname, NOT:zip, NOT:marital_status ....
Now, the aforementioned policy is equivalent to one that
disallows queries if the corresponding the BF contains fname
and NOT:fname:range. If the check succeeds, then the query
is disallowed. Likewise, a policy allowing only equality oper-
ation on dob will check if the ﬁlter has dob and NOT:dob:=.
In addition, the policy can now disallow queries that do not
contain an equality on dob column or that do not contain
lname. More importantly, the policy can now enforce that
the query must have lname value if fname was present.
APPENDIX B
ONE-CASE INDISTINGUISHABILITY
Here, we give a formal deﬁnition of one-case indistinguisha-
bility. Since our system realizes the ideal functionality Fdb, the
deﬁnitions concern only input/output behavior and the leakage
proﬁle L.
The distribution E discussed in Section V-B with δ is
deﬁned as follows:
Let (D0, q, r) be a database, a query and a record
as speciﬁed in Section V-B. Choose a record in D0
uniformly at random and replace it with r. Let D1
be the modiﬁed database. Choose a bit b ∈ {0, 1}
according to the following distribution:
Pr[b = 1] = δ, Pr[b = 0] = 1 − δ.
Run Fdb, calling Init with (D0, P ), and Query with
q. Let v be the leakage to the index server. Output
(b, v).
We show that our system satisﬁes one-case indistinguisha-
bility. Note that the initial leakage is none, and therefore,
we only need to consider the query leakage which is the
query pattern and the tree search pattern. This implies that
we only need to consider the tree search pattern since the
same query is considered in the experiment. Observe that the
newly introduced record r is equivalent to adding a random
paths in terms of the tree search pattern. Therefore, it sufﬁces
to focus on the number of added random paths. In particular,
let D+ be deﬁned as follows:
x←D; output (x + 1).
Now, consider a following game X:
Choose a bit b ∈ {0, 1} such that Pr[b = 1] = δ and
Pr[b = 0] = 1 − δ. If b = 0, let x←D; otherwise
let x←D+. Output (b, x).
Now, we show that for any x, it holds that
[b = 1| x] ≤ 2δ.
We show this by using case analysis:
• When x ≤ 1, it never comes from D+, so the inequality
Pr
X
trivially holds.
374
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:00:22 UTC from IEEE Xplore.  Restrictions apply.