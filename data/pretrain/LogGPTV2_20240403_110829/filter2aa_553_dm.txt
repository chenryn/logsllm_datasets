年份（非闰年）。
5.编写一个函数，用户提供月份号，该函数就返回一年中到该月为止
（包括该月）的总天数。假设在所有函数的外部声明了第3题的结构模版和
一个该类型结构的数组。
6.a.假设有下面的 typedef，声明一个内含 10 个指定结构的数组。然
后，单独给成员赋值（或等价字符串），使第3个元素表示一个焦距长度有
500mm，孔径为f/2.0的Remarkata镜头。
typedef struct lens {  /* 描述镜头      */
float foclen;   /* 焦距长度，单位为mm  */
float fstop;    /* 孔径       */
char brand[30];  /* 品牌名称      */
1124
} LENS;
b.重写a，在声明中使用一个待指定初始化器的初始化列表，而不是对
每个成员单独赋值。
7.考虑下面程序片段：
struct name {
char first[20];
char last[20];
};
struct bem {
int limbs;
struct name title;
char type[30];
};
struct bem * pb;
struct bem deb = {
6,
{ "Berbnazel", "Gwolkapwolk" },
"Arcturan"
};
1125
pb = &deb;
a.下面的语句分别打印什么？
printf("%d\n", deb.limbs);
printf("%s\n", pb->type);
printf("%s\n", pb->type + 2);
b.如何用结构表示法（两种方法）表示"Gwolkapwolk"？
c.编写一个函数，以bem结构的地址作为参数，并以下面的形式输出结
构的内容（假定结构模板在一个名为starfolk.h的头文件中）：
Berbnazel Gwolkapwolk is a 6-limbed Arcturan.
8.考虑下面的声明：
struct fullname {
char fname[20];
char lname[20];
};
struct bard {
struct fullname name;
int born;
int died;
};
1126
struct bard willie;
struct bard *pt = &willie;
a.用willie标识符标识willie结构的born成员。
b.用pt标识符标识willie结构的born成员。
c.调用scanf()读入一个用willie标识符标识的born成员的值。
d.调用scanf()读入一个用pt标识符标识的born成员的值。
e.调用scanf()读入一个用willie标识符标识的name成员中lname成员的
值。
f.调用scanf()读入一个用pt标识符标识的name成员中lname成员的值。
g.构造一个标识符，标识willie结构变量所表示的姓名中名的第3个字母
（英文的名在前）。
h.构造一个表达式，表示willie结构变量所表示的名和姓中的字母总
数。
9.定义一个结构模板以储存这些项：汽车名、马力、EPA（美国环保
局）城市交通MPG（每加仑燃料行驶的英里数）评级、轴距和出厂年份。
使用car作为该模版的标记。
10.假设有如下结构：
struct gas {
float distance;
float gals;
float mpg;
1127
};
a.设计一个函数，接受struct 
gas类型的参数。假设传入的结构包含
distance和gals信息。该函数为mpg成员计算正确的值，并把值返回该结构。
b.设计一个函数，接受struct 
gas类型的参数。假设传入的结构包含
distance和gals信息。该函数为mpg成员计算正确的值，并把该值赋给合适的
成员。
11.声明一个标记为choices的枚举，把枚举常量no、yes和maybe分别设置
为0、1、2。
12.声明一个指向函数的指针，该函数返回指向char的指针，接受一个指
向char的指针和一个char类型的值。
13.声明4个函数，并初始化一个指向这些函数的指针数组。每个函数都
接受两个double类型的参数，返回double类型的值。另外，用两种方法使用
该数组调用带10.0和2.5实参的第2个函数。
1128
14.18 编程练习
1.重新编写复习题 
5，用月份名的拼写代替月份号（别忘了使用
strcmp()）。在一个简单的程序中测试该函数。
2.编写一个函数，提示用户输入日、月和年。月份可以是月份号、月份
名或月份名缩写。然后该程序应返回一年中到用户指定日子（包括这一天）
的总天数。
3.修改程序清单 14.2 中的图书目录程序，使其按照输入图书的顺序输出
图书的信息，然后按照标题字母的声明输出图书的信息，最后按照价格的升
序输出图书的信息。
4.编写一个程序，创建一个有两个成员的结构模板：
a.第1个成员是社会保险号，第2个成员是一个有3个成员的结构，第1个
成员代表名，第2个成员代表中间名，第3个成员表示姓。创建并初始化一个
内含5个该类型结构的数组。该程序以下面的格式打印数据：
Dribble, Flossie M.–– 302039823
如果有中间名，只打印它的第1个字母，后面加一个点（.）；如果没有
中间名，则不用打印点。编写一个程序进行打印，把结构数组传递给这个函
数。
b.修改a部分，传递结构的值而不是结构的地址。
5.编写一个程序满足下面的要求。
a.外部定义一个有两个成员的结构模板name：一个字符串储存名，一个
字符串储存姓。
b.外部定义一个有3个成员的结构模板student：一个name类型的结构，
一个grade数组储存3个浮点型分数，一个变量储存3个分数平均数。
1129
c.在main()函数中声明一个内含CSIZE（CSIZE = 4）个student类型结构的
数组，并初始化这些结构的名字部分。用函数执行g、e、f和g中描述的任
务。
d.以交互的方式获取每个学生的成绩，提示用户输入学生的姓名和分
数。把分数储存到grade数组相应的结构中。可以在main()函数或其他函数中
用循环来完成。
e.计算每个结构的平均分，并把计算后的值赋给合适的成员。
f.打印每个结构的信息。
g.打印班级的平均分，即所有结构的数值成员的平均值。
6.一个文本文件中保存着一个垒球队的信息。每行数据都是这样排列：
4 Jessie Joybat 5 2 1 1
第1项是球员号，为方便起见，其范围是0～18。第2项是球员的名。第3
项是球员的姓。名和姓都是一个单词。第4项是官方统计的球员上场次数。
接着3项分别是击中数、走垒数和打点（RBI）。文件可能包含多场比赛的
数据，所以同一位球员可能有多行数据，而且同一位球员的多行数据之间可
能有其他球员的数据。编写一个程序，把数据储存到一个结构数组中。该结
构中的成员要分别表示球员的名、姓、上场次数、击中数、走垒数、打点和
安打率（稍后计算）。可以使用球员号作为数组的索引。该程序要读到文件
结尾，并统计每位球员的各项累计总和。
世界棒球统计与之相关。例如，一次走垒和触垒中的失误不计入上场次
数，但是可能产生一个RBI。但是该程序要做的是像下面描述的一样读取和
处理数据文件，不会关心数据的实际含义。
要实现这些功能，最简单的方法是把结构的内容都初始化为零，把文件
中的数据读入临时变量中，然后将其加入相应的结构中。程序读完文件后，
应计算每位球员的安打率，并把计算结果储存到结构的相应成员中。计算安
1130
打率是用球员的累计击中数除以上场累计次数。这是一个浮点数计算。最
后，程序结合整个球队的统计数据，一行显示一位球员的累计数据。
7.修改程序清单 14.14，从文件中读取每条记录并显示出来，允许用户
删除记录或修改记录的内容。如果删除记录，把空出来的空间留给下一个要
读入的记录。要修改现有的文件内容，必须用"r+b"模式，而不是"a+b"模
式。而且，必须更加注意定位文件指针，防止新加入的记录覆盖现有记录。
最简单的方法是改动储存在内存中的所有数据，然后再把最后的信息写入文
件。跟踪的一个方法是在book结构中添加一个成员表示是否该项被删除。
8.巨人航空公司的机群由 
12 
个座位的飞机组成。它每天飞行一个航
班。根据下面的要求，编写一个座位预订程序。
a.该程序使用一个内含 12 个结构的数组。每个结构中包括：一个成员
表示座位编号、一个成员表示座位是否已被预订、一个成员表示预订人的
名、一个成员表示预订人的姓。
b.该程序显示下面的菜单：
To choose a function, enter its letter label:
a) Show number of empty seats
b) Show list of empty seats
c) Show alphabetical list of seats
d) Assign a customer to a seat assignment
e) Delete a seat assignment
f) Quit
c.该程序能成功执行上面给出的菜单。选择d)和e)要提示用户进行额外
输入，每个选项都能让用户中止输入。
1131
d.执行特定程序后，该程序再次显示菜单，除非用户选择f)。
9.巨人航空公司（编程练习 8）需要另一架飞机（容量相同），每天飞
4 班（航班 102、311、444 和519）。把程序扩展为可以处理4个航班。用一
个顶层菜单提供航班选择和退出。选择一个特定航班，就会出现和编程练习
8类似的菜单。但是该菜单要添加一个新选项：确认座位分配。而且，菜单
中的退出是返回顶层菜单。每次显示都要指明当前正在处理的航班号。另
外，座位分配显示要指明确认状态。
10.编写一个程序，通过一个函数指针数组实现菜单。例如，选择菜单
中的 a，将激活由该数组第 1个元素指向的函数。
11.编写一个名为transform()的函数，接受4个参数：内含double类型数据
的源数组名、内含double类型数据的目标数组名、一个表示数组元素个数的
int类型参数、函数名（或等价的函数指针）。transform()函数应把指定函数
应用于源数组中的每个元素，并把返回值储存在目标数组中。例如：
transform(source, target, 100, sin);
该声明会把target[0]设置为sin(source[0])，等等，共有100个元素。在一
个程序中调用transform()4次，以测试该函数。分别使用math.h函数库中的两
个函数以及自定义的两个函数作为参数。
[1].也被称为标记化结构初始化语法。——译者注
1132
第15章 位操作
本章介绍以下内容：
运算符：～、&、|、^、
>
&=、|=、^=、>>=、<<=
二进制、十进制和十六进制记数法（复习）
处理一个值中的位的两个C工具：位运算符和位字段
关键字：_Alignas、_Alignof
在C语言中，可以单独操控变量中的位。读者可能好奇，竟然有人想这
样做。有时必须单独操控位，而且非常有用。例如，通常向硬件设备发送一
两个字节来控制这些设备，其中每个位（bit）都有特定的含义。另外，与
文件相关的操作系统信息经常被储存，通过使用特定位表明特定项。许多压
缩和加密操作都是直接处理单独的位。高级语言一般不会处理这级别的细
节，C 
在提供高级语言便利的同时，还能在为汇编语言所保留的级别上工
作，这使其成为编写设备驱动程序和嵌入式代码的首选语言。
首先要介绍位、字节、二进制记数法和其他进制记数系统的一些背景知
识。
1133
15.1 二进制数、位和字节
通常都是基于数字10来书写数字。例如2157的千位是2，百位是1，十位
是5，个位是7，可以写成：
2×1000 + 1×100 + 5×10 + 7×1
注意，1000是10的立方（即3次幂），100是10的平方（即2次幂），10
是10的1次幂，而且10（以及任意正数）的0次幂是1。因此，2157也可以写
成：
2×103+ 1×102+ 5×101+ 7×100
因为这种书写数字的方法是基于10的幂，所以称以10为基底书写2157。
姑且认为十进制系统得以发展是得益于我们都有10根手指。从某种意义
上看，计算机的位只有2根手指，因为它只能被设置为0或1，关闭或打开。
因此，计算机适用基底为2的数制系统。它用2的幂而不是10的幂。以2为基
底表示的数字被称为二进制数（binary 
number）。二进制中的2和十进制中
的10作用相同。例如，二进制数1101可表示为：
1×23+ 1×22+ 0×21+ 1×20
以十进制数表示为：
1×8 + 1×4 + 0×2 + 1×1 = 13
用二进制系统可以把任意整数（如果有足够的位）表示为0和1的组合。
由于数字计算机通过关闭和打开状态的组合来表示信息，这两种状态分别用
0和1来表示，所以使用这套数制系统非常方便。接下来，我们来学习二进制
系统如何表示1字节的整数。
15.1.1 二进制整数
1134
通常，1字节包含8位。C语言用字节（byte）表示储存系统字符集所需
的大小，所以C字节可能是8位、9位、16位或其他值。不过，描述存储器芯
片和数据传输率中所用的字节指的是8位字节。为了简化起见，本章假设1字
节是8位（计算机界通常用八位组(octet)这个术语特指8位字节）。可以从左
往右给这8位分别编号为7～0。在1字节中，编号是7的位被称为高阶位
（high-order bit），编号是0的位被称为低阶位（low-order bit）。每 1位的
编号对应2的相应指数。因此，可以根据图15.1所示的例子理解字节。
图15.1 位编号和位值
这里，128是2的7次幂，以此类推。该字节能表示的最大数字是把所有
位都设置为1：11111111。这个二进制数的值是：
128 + 64 + 32 + 16 + 8 + 4 + 2 + 1 = 255
而该字节最小的二进制数是00000000，其值为0。因此，1字节可储存0
～255范围内的数字，总共256个值。或者，通过不同的方式解释位组合
（bit pattern），程序可以用1字节储存-128～+127范围内的整数，总共还是
256个值。例如，通常unsigned 
char用1字节表示的范围是0～255，而signed
char用1字节表示的范围是-128～+127。
15.1.2 有符号整数
如何表示有符号整数取决于硬件，而不是C语言。也许表示有符号数最
简单的方式是用1位（如，高阶位）储存符号，只剩下7位表示数字本身（假
1135
设储存在1字节中）。用这种符号量（sign-magnitude）表示法，10000001表
示−1，00000001表示1。因此，其表示范围是−127～+127。
这种方法的缺点是有两个0：+0和-0。这很容易混淆，而且用两个位组
合来表示一个值也有些浪费。
二进制补码（two’s-complement）方法避免了这个问题，是当今最常用