(4.4.8) 
Emergency 
request 
(through  a 
the  Doctor-on-call.  Hence 
Emergency  authorizations  are  required  in  situations 
where a person who is called upon to perform a healthcare 
task  has  the  competence  and  qualifications  but  does  not 
have  the  association  relationship  like  the  Attending 
Physician  or 
the  context 
variable  is  not  relevant  for  the  emergency  authorization. 
When a user creates an application session for making an 
emergency 
form  of 
authentication like two-factor authentication), that session 
is created with priority code pc equal to ER. Based upon 
the  user  clearance  for  certain  emergency  tasks,  an 
emergency role instead of a regular role is assigned to the 
user  through  the  Session_Role  function  (4.4.3).    The 
mapping from this emergency role to a normal/regular role 
of the model is stored in a secure area that is different from 
the location where the hybrid model data for DAFMAT is 
stored.  Verifying  whether  a  mapped  regular  role  is 
authorized  to  invoke  the  subject  then  becomes  the 
validation condition for authorizing an emergency request. 
stronger 
& 
(4.4.9) 
ER_Role_Map(role,mapped_role) 
Subject_Role(subject,mapped_role) (cid:224) 
Emer_Auth_Req(user,role,subject) 
In summary, an emergency authorization is obtained by a 
stricter form of authentication and by checking whether the 
emergency  role  activated  by  the  session  is  a  valid  proxy 
for  a  regular  role  that  has  the  permission  to  invoke  the 
subject.  This  is  equivalent  to  finding  a  binding  for  the 
mapped_role variable that will make the above implication 
true. 
4.4.3.3  Validation  Conditions 
Authorization Request  (Context_Auth_Req) 
for  Context-based 
The validation conditions for emergency authorization 
and normal authorizations yielded only a single validation 
rule. However the validation conditions for context-based 
authorization  will  depend  upon  the  context  variable  (cv) 
and  each  context  variable  gives  rise  to  a  different 
validation rule. Expressing this as a decision tree: 
IF cv = ‘CTXT_VAR1’ 
THEN 
Subject_Role(subject,role)  &   (cid:224) 
Context_Auth_Req(user,role,subject,cv,cv_value) 
The Last Step of the Authorization Process 
(4.4.10) 
4.4.4 
or from one status to another (e.g., inpatient to outpatient 
etc). The ADT system is the entry- point for capture of all 
patient-related  information  like  patient  demographics, 
insurance and allergies. In this paper we have coined the 
name  “Patient  Registration  Object”  to  stand  for  an 
encapsulated object that contains several types of patient-
related  information  referred  to  earlier.  Similarly  we  have 
given  the  name  “Patient  Location  Object”  that  contain 
information about the bed, room and type of wards where 
the  patient  had  undergone  treatment  at  the  healthcare 
facility. In addition, we have the “Patient Clinical Object” 
that  is  composed  of  a  set  of  objects  carrying  information 
about all the clinical tests the patient has undergone (e.g., 
lab tests, radiology tests etc). 
Since  the  underlying  objective  in  describing  the 
application  of  DAFMAT  framework  for  ADT  is  only  to 
demonstrate  the  logic  used  for  arriving  at  different 
authorization types, we have chosen to give only a sample 
of  the  set  of  authorization  entities  and  their  relevant 
relationships  in  ADT.    Hence  the  set  of  roles,  subjects, 
domains and types discussed here is not a complete list of 
authorization  entities  and  relationships  found  in  any 
practical ADT system deployed in a healthcare setting. 
The data regarding users, roles, subjects and domains 
(which  constitute  the  RBAC-DTE  hybrid  access  control 
model data for ADT) and their relationships are given in 
section  5.1  while  the  data  that  is  needed  for  use  by  the 
logic-driven authorization engine is given in section 5.2. 
5.1 RBAC-DTE Model Data for ADT 
The sample “RBAC-DTE Model Data” set used in our 
illustration consists of the following – 4 users, 4 roles, 4 
subjects and 3 domains. The user John is an Admissions 
Clerk and hence assigned to the admissions_clerk role. 
Smith is in charge of making and altering the assignment 
of patients to rooms/beds within a ward and hence 
assigned to the ward_scheduler role. Susan is a registered 
nurse who puts in orders for lab tests for patients (after 
being authorized by the attending physician) and hence 
assigned to the registered_nurse role. Patricia is a facilities 
specialist who is in charge of handling the entry of patients 
to acute care facilities like Intensive Care Units (ICUs) and 
Chemotherapy facilities. The assigned role for Patricia is 
facilities_specialist. The users assigned to the 
admissions_clerk role invoke the Admission_proc and 
Discharge_proc to perform their job functions. The 
ward_scheduler and facilities_specialist roles invoke the 
Transfer_proc to perform the functions of  transferring 
patients into the general wards and special wards 
respectively. The registered_nurse role can invoke the 
Lab_Orders_proc. The relevant user-role, role-domain, 
subject-role, subject-domain mappings and the 
corresponding Domain-Type Access Matrix entries are 
given in tables 5.1through 5.5  
request  of 
the  authorization 
As already stated in section 2, the last step performed 
by  the  DAFMAT-based  authorization  module  of  the 
application,  after  verification  of  the  validation  conditions 
for 
the  designated 
authorization  type,  is  to  assign  the  appropriate  domain 
(based  on  Subject-Domain  table  entries)  to  the  user 
session.  It  is  useful  to  point  out  at  this  stage  that  the 
verification of the validating conditions for different types 
of  authorizations  is  the  key  process  that  distinguishes 
DAFMAT  from  a  static  authorization  framework.  In  the 
static  framework,  the  authorization  required  for  invoking 
the  subject  is  directly  obtained  from  the  entries  in  the 
Domain-Type Access Matrix by determining the subjects, 
objects/access  involved  in  the  operation  after  the  system 
determines the domains associated with subjects and types 
associated  with  objects.  However,  in  a  typical  healthcare 
facility, the eligibility to invoke a subject by a user is not 
determined solely through a static role-subject relationship, 
but  through  some  temporal  relationships  each  user  has 
with application domain specific variables (e.g., Attending 
Physician  for  a  patient).  The  incorporation  of  such 
temporal relationships (which we have called as contextual 
information) into the evaluation of role-subject association 
means  that  the  authorization  process  has  to  be  dynamic 
involving processing of rules at the time of authorization 
requests. 
5.  DAFMAT Framework for ADT System 
Let  us  now  illustrate  the  application  of  DAFMAT 
authorization framework described in the previous section 
to the Admissions, Discharge and Transfer system (ADT).  
Before we do this a brief explanation of the functionality 
of the ADT system and the type of information it handles 
is in order. 
The  Admissions,  Discharge  and  Transfer  system 
(ADT)  is  designed  to  perform  all  functions  relating  to 
admission, discharge and internal transfer of patients in a 
healthcare facility. Examples of internal transfer functions 
include transfer of patients from one bed/room to another 
within a ward, from one hospital service/ward to another 
Table 5.1- User-Role Mapping 
Role 
admissions_clerk 
ward_scheduler 
registered_nurse 
facilities_specialist 
Predicate 
User_Role(john, admissions_clerk) 
User_Role(smith,ward_scheduler) 
User_Role(susan,registered_nurse) 
User_Role(patricia, facilities_specialist) 
Table 5.2 - Role-Domain Mapping 
Predicate 
Domain 
patient_mgmt_domain  Role_Domain(admissions_clerk,patient_mgmt_domain) 
facility_mgmt_domain  Role_Domain(ward_scheduler, facility_mgmt_domain) 
care_provider_domain  Role_Domain(registered_nurse, care_provider_domain) 
facility_mgmt_domain  Role_Domain(facilities_specialist, facility_mgmt_domain) 
Table 5.3 - Subject-Role Mapping 
Role 
admissions_clerk 
admissions_clerk 
ward_scheduler, 
facilities_specialist 
registered_nurse  
Predicate 
Subject_Role(admission_proc,admissions_clerk) 
Subject_Role(discharge_proc,admissions_clerk) 
Subject_Role(transfer_proc,ward_scheduler) 
Subject_Role(transfer_proc,facilities_specialist) 
Subject_Role(lab_orders_proc,registered_nurse) 
Table 5.4 - Subject-Domain Mapping 
Predicate 
Domain 
patient_mgmt_domain  Subject_Domain(admission_proc, patient_mgmt_domain) 
patient_mgmt_domain  Subject_Domain(discharge_proc, patient_mgmt_domain) 
facility_mgmt_domain  Subject_Domain(transfer_proc, facility_mgmt_domain) 
care_provider_domain  Subject_Domain(lab_orders_proc, care_provider_domain) 
Table 5.5 - Domain-Type Access Matrix 
Patient 
Clinical 
Type 
C, U, V 
User 
John 
Smith 
Susan 
Patricia 
Role 
Admissions_clerk 
Ward_scheduler 
Registered_nurse 
Facilities_specialist 
Subject 
Admission_proc 
Discharge_proc 
Transfer_proc 
lab_orders_proc 
Subject 
Admission_proc 
Discharge_proc 
Transfer_proc 
lab_orders_proc 
Domain 
Object-Type / Access Modes 
Patient 
Registration 
Type 
       C, U, D,V 
Patient 
Location 
Type 
           D, V 
C,U,V 
V 
Patient_mgmt_domain 
Facility_mgmt_domain 
Care_provider_domain 
Access Mode Codes: C – Create , U – Update, D – Delete , V – View 
V 
The  pictorial  representation  of  authorization  entities  and 
their  relationships  (which  constitutes  the  RBAC-DTE 
hybrid-access  control  model)  for  ADT  is  given  in  Figure 
5.1. 
John
Smith
Susan
patricia
Users
 admissions_
clerk
ward_
scheduler
registered_
nurse
facilities_
specialist
Roles
admission_
proc
discharge_
proc
lab_orders_
proc
transfer_
proc
Subjects
patient_management_
domain
care_provider_
domain
facility_management_
domain
Domains
Figure 5.1 – RBAC-DTE HYBRID ACCESS CONTROL MODEL FOR ADT 
(NOTE:  The Role to Domain Mapping is shown in dashed lines) 
5.2  Data  for  Logic-Driven  Authorization  Engine 
for ADT 
Recall that the first processing step in DAFMAT, after 
building the RBAC-DTE model for the application, is the 
formulation of Authorization Request Predicate 4.4.7.  In 
this  predicate,  the  bindings  for  the  variables  user,  role, 
subject and pc (priority code) are obtained using values of 
the session-related mapping functions (4.4.2 through 4.4.6) 
and  the  RBAC-DTE  model  data  given  in  the  tables  of 
section  5.1.  The  value  for  cv_value  (value  string 
corresponding 
the  context  variable  value  –e.g., 
PEDIATRIC for context variable value ‘wardname’) is an 
intrinsic  parameter  value  in  the  user  action  in  the 
application. Now the only value required is for cv (context 