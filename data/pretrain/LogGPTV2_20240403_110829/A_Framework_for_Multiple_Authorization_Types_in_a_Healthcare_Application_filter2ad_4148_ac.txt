### 4.4.8 Emergency Request

In emergency situations, when a healthcare task must be performed by an individual who has the necessary competence and qualifications but lacks the formal association (such as being the Attending Physician), or when the context variable is irrelevant for the emergency authorization, an emergency request can be initiated through the Doctor-on-call. 

When a user initiates an application session to make an emergency request, the session is created with a priority code (pc) set to "ER." Based on the user's clearance for specific emergency tasks, an emergency role is assigned instead of a regular role, using the `Session_Role` function (4.4.3). The mapping from the emergency role to a normal/regular role is stored in a secure area separate from where the hybrid model data for DAFMAT is stored. 

To authorize an emergency request, the system verifies whether the mapped regular role is authorized to invoke the subject. This verification is the validation condition for authorizing the emergency request.

**Formal Representation:**
- **ER_Role_Map(role, mapped_role)**
- **Subject_Role(subject, mapped_role)**
- **Emer_Auth_Req(user, role, subject)**

In summary, an emergency authorization is obtained through a stricter form of authentication (e.g., two-factor authentication) and by checking if the emergency role activated in the session is a valid proxy for a regular role that has the permission to invoke the subject. This is equivalent to finding a binding for the `mapped_role` variable that satisfies the above conditions.

### 4.4.9 Validation Conditions for Authorization Requests

The validation conditions for emergency and normal authorizations yield a single validation rule. However, the validation conditions for context-based authorizations depend on the context variable (cv), with each context variable generating a different validation rule. This can be expressed as a decision tree:

```
IF cv = 'CTXT_VAR1' 
THEN
    Subject_Role(subject, role) & Context_Auth_Req(user, role, subject, cv, cv_value)
```

### 4.4.10 The Last Step of the Authorization Process

After verifying the validation conditions for the designated authorization type, the DAFMAT-based authorization module assigns the appropriate domain to the user session based on the entries in the Subject-Domain table. This step is crucial because it distinguishes DAFMAT from a static authorization framework. In a static framework, the required authorization is directly obtained from the Domain-Type Access Matrix. However, in a healthcare setting, the eligibility to invoke a subject is determined through dynamic, temporal relationships with application domain-specific variables (e.g., Attending Physician for a patient).

### 5. DAFMAT Framework for ADT System

#### 5.1 RBAC-DTE Model Data for ADT

The Admissions, Discharge, and Transfer (ADT) system manages all functions related to patient admission, discharge, and internal transfers within a healthcare facility. To illustrate the application of the DAFMAT authorization framework to ADT, we will use a sample dataset consisting of 4 users, 4 roles, 4 subjects, and 3 domains.

**User-Role Mapping:**
- John: Admissions Clerk (`admissions_clerk`)
- Smith: Ward Scheduler (`ward_scheduler`)
- Susan: Registered Nurse (`registered_nurse`)
- Patricia: Facilities Specialist (`facilities_specialist`)

**Role-Domain Mapping:**
- `admissions_clerk`: Patient Management Domain
- `ward_scheduler`: Facility Management Domain
- `registered_nurse`: Care Provider Domain
- `facilities_specialist`: Facility Management Domain

**Subject-Role Mapping:**
- `admission_proc`: Admissions Clerk
- `discharge_proc`: Admissions Clerk
- `transfer_proc`: Ward Scheduler, Facilities Specialist
- `lab_orders_proc`: Registered Nurse

**Subject-Domain Mapping:**
- `admission_proc`, `discharge_proc`: Patient Management Domain
- `transfer_proc`: Facility Management Domain
- `lab_orders_proc`: Care Provider Domain

**Domain-Type Access Matrix:**
- **Patient Registration Type**: Create, Update, Delete, View
- **Patient Location Type**: Delete, View
- **Patient Clinical Type**: Create, Update, View

**Pictorial Representation:**
[Figure 5.1 â€“ RBAC-DTE Hybrid Access Control Model for ADT]

#### 5.2 Data for Logic-Driven Authorization Engine for ADT

The first processing step in DAFMAT, after building the RBAC-DTE model, is the formulation of the Authorization Request Predicate (4.4.7). The bindings for the variables `user`, `role`, `subject`, and `pc` (priority code) are obtained using the session-related mapping functions (4.4.2 through 4.4.6) and the RBAC-DTE model data from Section 5.1. The value for `cv_value` (e.g., "PEDIATRIC" for context variable "wardname") is an intrinsic parameter in the user action. The only remaining value needed is for `cv` (context variable).

This structured approach ensures that the DAFMAT framework can dynamically handle authorization requests, incorporating both static and contextual information to provide a robust and flexible access control mechanism.