挪威最大的在线报纸VerdensGang(vg.no)使用3台Varnish代替了原来的12台Squid，
口支持设置0~60秒的精确缓存时间。
口利用虚拟内存方式，1/O性能好。
口基于内存进行缓存，重启后数据将消失。
Varnish是一个轻量级的Cache和反向代理软件。
Varnish是一款高性能且开源的反向代理服务器和HTTP加速器，它的开发者Poul
本章主要介绍Varnish的配置管理和使用技巧。Varnish是一个开源的反向代理软件和
Varnish的结构与特点
初识Varnish
第2章
www.Linuxidc.com
高性能HTTP加速器Varnish
先进的设计理念和成熟的设计框架是
---
## Page 56
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
2.2.1
2.2
相比较有诸多的异同点，下面进行分析。
2.1.3Varnish与Squid的对比
36
Varmish的安装非常简单，下面逐步介绍。
口Varnish进程一旦挂起、崩溃或者重启，缓存数据都会从内存中完全释放，此时所
口Varnish在高并发状态下CPU、I/O和内存等资源开销都高于Squid。
当然，与传统的Squid相比，Varnish也有缺点。
口Varmish可以通过管理端口，使用正则表达式批量清除部分缓存，而Squid做不到。
在高并发连接情况下可以支持更多的TCP连接。
口Varmish可以支持更多的并发连接。因为Varnish的TCP连接释放要比Squid快，所以
口Varnish访问速度更快。Varnish采用了“VisualPageCache”技术，所有缓存数据都
要高于Varnish，因为Squid需要经常重启。
口Varnish的稳定性很高。两者在完成相同负荷的工作时，Squid服务器发生故障的几率
下面是它们的不同点，也是Varnish的优点。
口都是开源软件。
口都是一个反向代理服务器。
下面是Varnish与Squid之间的相同点。
说到Varnish，就不能不提Squid。Squid是一个高性能的代理缓存服务器，它和Varnish
口利用二叉堆管理缓存文件，可达到积极删除目的。
口状态机设计巧妙，结构清晰。
口具有强大的管理功能，例如top、stat、admin、list等。
开始安装Varnish
口32位机器上缓存文件大小为最大2GB。
口VCL配置管理比较灵活。
Varnish安装环境如表2-1所示。
安装前的准备
压力。
有请求都会被发送到后端服务器，在高并发情况下，这会给后端服务器造成很大
更快。
直接从内存读取，而Squid是从硬盘读取缓存数据，因此Varmish在访问速度方面会
www.Linuxidc.com
PDG
---
## Page 57
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
2.2.4
是为了兼容正则表达式，所以必须先安装pcre库。下面是pcre的安装过程。
2.2.3
安装配置。
新版本是Varnish 2.1.2，下载完成后的包名为varnish-2.1.2.tar.gz，这里以此版本为例，进行
升级记录，在此网站中可以找到Varnish在SourceForge中的下载链接。目前，Varnish的最
2.2.2获取Varnish软件
这里将Varnish安装到/usr/local/目录下，操作如下：
[root@varnish-server ~]#tar zxvf pcre-7.9.tar.gz
如果没有安装pcre，
Varnish的官方网址为http:/varnish-cache.org，这里面有Varnish的最新说明文档及版本
[root@varnish-server
[root@varnish-server
[rootavarnish-server
[root@varnish-server -]#make
[rcot@varnish-server ~]#./configure --prefix=/usr/local/varnish\
[root@varnish-server
rootevarnish-server
[root@varnish-server
xoot@varnish-server
[root@varnish-server
root@varnish-server
[root@varnish-server
[root@varnish-server -]#useradd-8/sbin/nologin varnish
接着，建立Varnish用户以及用户组，并且创建Varnish缓存目录和日志目录。
>--enable-developer-warnings
Web-server
Varnish-server
安装Varnish
安装pcre
主机名
www.Linuxidc .
~]#cp redhat/varnish.sysconfig
-]#cp redhat/varnish.initrc /etc/init.d/varnish
~]#make install
在编译varnish 2.0以上版本时，会提示找不到pcre库，而pcre库
~1#export PKG_coNFIG_PATH-/usr/local/pcre/lib/pkgconfig
~]#cd varnish-2.1.2
~]#make && make install
~]#./configure
-]#chown
~]#mkdir/data/varnish/cache
表2-1Varnish安装环境
CentOS release 5.4
CentOS release 5.4
--prefix=/uer/local/pcre/
操作系统
第2章
高性能HTTP加速器Varnish
/etc/sysconfig/varnish
/data/varnish/1og
/data/varnish/cache
.com
192.168.12.26
192.168.12.246
IP地址
37
本
PDG
---
## Page 58
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
容没有改变的情况下，将不变的内容返回给客户端，直到这个连接被关闭。
如何处理请求。
用的一些内置函数和公用变量进行详细介绍。
VCL只是配置语言，并不是真正的编程语言，没有循环，也没有自定义变量。
样的关键字来指定变量。
“1&&，!!”等形式；还支持正则表达式和用“~”进行ACL匹配运算；还可以使用“set”这
较简单，跟C和Perl比较相似，可以使用指定运算符“=”、比较运算符“==”、逻辑运算符
2.3.1
2.3配置Varnish
Varmish的启动、关闭等方面，在2.4节中会进行详细讲解。
pkgconfig。最后两步操作是复制一些Varnish守护进程的初始化脚本文件，这些脚本用于
其他路径下，在这里指定相应的路径即可，Varnish默认查找pcre库的路径为/usr/local/lib/
38
口pipe：表示进人pipe 模式，把请求控制权交给vcl_pipe 函数。
在讲述Varmish配置之前，首先需要了解Varnish的配置语法，即VCL。下面对VCL常
需要注意的是，
pipe。
error code[reason]。
此函数一般以如下几个关键字结束。
此函数在进人pipe模式时被调用，
口error code[reason]：表示返回“code”给客户端，并放弃处理该请求。“code”是错误
此函数一般以如下几个关键字结束。
用于接收和处理请求。当请求到达并被成功接收后被调用，通过判断请求的数据来决定
（1）vcl_recv函数
1.VCL内置函数
VCL，即为Varnish ConfiguationLanguage，
（2）vcl_pipe函数
至此，Varmish安装完毕。
其中，“PKG_CONFIG_PATH”是指定Varnish查找pcre库的路径。如果pcre安装在了
标识，例如200和405等。“reason”是错误提示信息。
VCL使用说明
www.Linuxidc.com
、“\”字符在VCL里没有特别的含义，这点与其他语言略有不同。另外，
用于将请求直接传递至后端主机，
，用来定义Varnish的存取策略。VCL语法比
在请求和返回的内
---
## Page 59
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
将内容放人缓存，还是直接返回给客户端。
于判断是否需要从后端服务器获取内容。
数vcl_miss。
据后将应答数据发送给客户端，但不进行任何缓存，在当前连接下每次都返回最新的内容。
deliver.
error code [reason]。
此函数一般以如下几个关键字结束。
将在缓存中找到请求的内容发送给客户端前调用此方法。
（8）vcl_deliver函数
deliver.
pass。
error code [reason]。
此函数一般以如下几个关键字结束。
在后端主机更新缓存并且获取内容后调用该方法，接着，通过判断获取的内容来决定是
（7）vcl_fetch函数
pass。
error code[reason]。
口fetch：表示从后端获取请求的内容，
此函数一般以如下几个关键字结束。
在执行lookup指令后，在缓存中没有找到请求的内容时自动调用该方法。此函数可用
(6）vcl_miss函数
pass。
error code[reason]。
口deliver：表示将找到的内容发送给客户端，并把控制权交给函数vcl_deliver。
此函数一般以如下几个关键字结束。
在执行lookup指令后，在缓存中找到请求的内容后将自动调用该函数。
（5）vcl_hit函数
表示在缓存中查找被请求的对象，并且根据查找的结果把控制权交给函数vcl_hit或函
（4）lookup
pass。
error code [reason]。
此函数一般以如下几个关键字结束。
此函数在进入pass模式时被调用，用于将请求直接传递至后端主机。后端主机在应答数
(3）vcl_pass 函数
www.Linuxidc.com
，并把控制权交给vcl_fetch函数。
rnish39
PDG
---
## Page 60
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
本地存储。
否则进人Miss 状态。
或Pipe，还是进入Lookup（本地查询）。
每个函数之间都是相互关联的，图2-1所示为Varnish处理HTTP请求的运行流程图。
40
（5）Deliver状态。
（4）Fetch状态。在Fetch状态下，对请求进行后端获取，发送请求，获得数据，并进行
（3）Pass状态。在此状态下，会进入后端请求，即进入Fetch状态。
（2）Lookup状态。进人此状态后，会在hash表中查找数据，若找到，则进入Hit状态，
（1）Receive状态。也就是请求处理的人口状态，根据VCL规则判断该请求应该Pass
Varnish处理HTTP请求的过程大致分为如下几个步骤。
通过上面对VCL函数的介绍，读者能够对各个函数实现的功能有个简单的了解。其实
2.VCL处理流程图
discard。
口keep：表示将内容继续保留在缓存中。
此函数一般以如下几个关键字结束。
在缓存内容到期后或缓存空间不够时，自动调用该函数。
（10）vcl_discard函数
fetch。
口discard：表示从缓存中清除该内容。
此函数一般以如下几个关键字结束。
在缓存内容到期前调用此函数。
（9）vcl_timeout函数
Www.Linuxidc .com
将获取到的数据发送给客户端，然后完成本次请求。
图2-1
Varnish处理HTTP请求的运行流程图
Delive
Fetch
Pipe
---
## Page 61
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
阶段依次进行介绍。
对客户端应答时，可以使用的公用变量如表2-5所示。
从cache或后端主机获取内容后，可以使用的公用变量如表2-4所示。
Varmish在向后端主机请求时，可以使用的公用变量如表2-3所示。
当请求到达后，
VCL内置的公用变量可以用在不同的VCL函数中。下面根据这些公用变量使用的不同
3.内置公用变量
obj.lastuse
obj.ttl
obj.proto
obj.response
obj.valid
obj.cacheable
obj.status
公用变量名称
beresp .tt1
beresp .http.header
beresp.proto
beresp.url
beresp.request
表2-4从cache或后端主机获取内容后可以使用的VCL内置的公用变量
公用变量名称
www.Linuxidc.com
req.restarts
req.http.header
req.proto
req.url
req.request
client.ip
server.ip
req.backend
表2-3向后端主机请求时可以使用的VCL内置的公用变量
公用变量名称
可以使用的公用变量如表2-2所示。
表2-2请求到达后可以使用的VCL内置的公用变量
表示返回上一次请求到现在的间隔时间，单位是秒
表示返回内容的生存周期，也就是缓存时间，单位是秒
表示返回内容的HTTP协议版本
表示返回内容的请求状态信息
表示是否是有效的HTTP应答
表示返回内容的请求状态代码，例如200、302和504等
表示缓存的生存周期，也就是cache保留多长时间，单位是秒
表示对应请求中的HTTP头部信息
表示客户端发起请求的HTTP协议版本
指定请求的地址
指定请求的类型，例如GET合HEAD等
表示请求重启的次数，默认最大值为4
表示对应请求中的HTTP头部信息
表示客户端发起请求的HTTP协议版本
指定请求的地址
指定请求的类型，
表示客户端IP
表示服务器端IP
指定对应的后端主机
含
含
义
例如GET、HEAD和POST等
含
PDG
---
## Page 62
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
放到/usr/local/varnish/etc目录下。配置完成的vcl.conf文件如下：
件内容默认全部被注释掉。这里以这个文件为模板，创建一个新的文件vcl.conf，并且将其
里讲述的版本是Varnish2.1.2，配置文件写法以Varnish2.x版本为基准。
配置文件写法上和1.x版本不同，而且还增加了很多新功能，并且去除了很多应用bug。这
2.3.2
用变量信息，请登录Varnish官方网站查阅。
resp.response
resp.http.header
resp.proto
resp.status
42
#开始调用vcl_xecv
backend webserver{
Varmish安装完成后，默认的配置文件为/usr/local/varnish/etc/varmish/default.vcl，此文
在上面的讲述中，只介绍了常用的VCL内置公用变量，如果需要了解和使用更多的公
由于版本不同，Varnish配置文件的写法也存在一定差异，Varmish的2.x版本不但在
配置一个简单的Varnish实例
.port="80";
.host
Www.Linuxidc .com
if req.request 1="GET" &&
}else
if（req.http.x-forwarded-for){
return (pipe);
req.request !=
req.request
req.request
如果请求的类型不是GET、HEAD、PUT、POST、TRACE、OPTIONS或DELETE时，则进人
=“192.168.12.26";
#名，“.port”指定后端主机的服务器端口。其中，“192.168.12.26”就是后端的一个Web服务器
ceq.request
req.request
reg.request
公用变量名称
req.http.X-Forwarded-For"，"client.ip;
set req.http.x-Forwarded-For
表2-5对客户端应答时可以使用的公用变量
=
"OPTIONS"
"TRACE"&&
"POST"&&
"PUT"&&