On Windows 32 bit, current Python 2.7.8 from Python.org Python, numpy 1.9.1
superpack installer, scipy 0.14.0 superpack installer.
I run the following `test.py` Python script from the shell:
    import scipy.sparse._sparsetools
    import sys
    sys.exit(2)
with `c:\Python27\python.exe test.py`. I check the return code with `echo
%errorlevel%` and get 0, when I am expecting 2. I get 2 if I comment out the
scipy import. This is after emptying out `scipy.__init__.py` and
`scipy.sparse.__init__.py`. The import of `_sparsetools` appears to be
removing control of the process exit code. This is a real problem for example
with buildbot tests, because test runs that are failing nevertheless have an
exit code of 0 - see for example the end of
http://nipy.bic.berkeley.edu/builders/dipy-
py2.7-win32/builds/106/steps/shell_6/logs/stdio
Any ideas what might be going on?