## Page 169
们提出的大多数让生命周期过程自动化的工具都非常热情，但是我
们注意到他从来不使用电子邮件（但其他经理都在使用电子邮
件）。于是，我们项目组的一个人在他身上用了一点招数，她安排
了一次与他的会面，在来到他办公室后，她马上说她准备教他使用
电子邮件。你当时真应当看看他的表情，满脸惊。以前一直都是
由他来告诉下属该怎么做，现在却是下属来告他该怎么做。长话短
说，他无法拒绝，在学习之后，他也并始参与网上讨论和交谈了，
了解了周围发生的事情并与大家分享他的新闻，真正地成为了团队
的一分子。因为拒绝变化，他错失了项目很多的化学反应。一段时
间后他承认自已“不会打字”，暴露这个缺点会让他觉得难堪。但是
那位教他使用电子邮件的项目组成员和他成为了很好的同事、朋
友，项目的进展也得益于他的对变革所持的并放态度。那些都是项
目成功的关键因素。
我们能有一个私人办公室吗
项目的现状是经理有自己的办公室，项目组成员坐的是格子间，并
发人员使用的是开发机架，上面是很多共享的计算机终端。在“新”
想法中，有一项内容是不管项目组成员的身份是什么，都给他分配
一间独立的办公室，每人都有一台终端，通过局域网访问计算机。
这是好主意。局域网的想法非常好，他们在任何时候都可以从自己
的办公室访问计算机。但是很遗憾，经济条件不允许“每人一间办
公室"的想法。那时不行，现在也不行。我们知道那时办公空间是
一个问题，每人一间办公室的想法是不成立的。所以，我们的提案
是按照公司的政策，让每个人的空间都足够大但又不足以容纳另外
一个人。这个提案对项目是可行的，当提案最终生效后，人们都非
常喜欢他们的私密性。可惜这个提案没有推广到组织内的其他人：
我们无法证明这种做法能够增值，也无法顶住经济的压力。
顺便说一句，因为我们有自己的办公室，桌上有终端等，项目之外
的人都非常嫉妒我们。为了不加剧这种嫉妒，我们不得不想一些办
法，说我们是某个可能无法成功的实验的“实验对象”。如果能够成
功，他们也会得到像我们那样的东西。
技术选择：行业研究的重要性
技术选择并不总是那么顺利。对于局域网，选择商用的还是选择内
部的总线接口单元就是一个问题。我们有一个内部产品，不够成熟
但是得到了高层管理人员的推进，因为这是我们的产品，所以这种
168
---
## Page 170
做法也是可以理解的。我们对行业进行了仔细研究和测试实验，但
是需要足够的政治力量才能说服管理人员，如果走商用路线，那么
风险会小一些。这些听起来是不是很熟悉？
让"实验对象"项目发生转变
前面已经说过，安排了一个试点项目来使用正在开发的新环境或工
具。局域网的想法很受欢迎，但是操作系统（我们在面向DECVMS
的文化中引入了UNIX）和一些新工具并不是每个人都欢迎的。更难
办的是，合作的试点项目使用的是VMS操作系统，上面已经有几个
不错的自动化工具。另外，在这个指定的项目中有几个人抱怨VAX
上的UNIX比VMS操作系统的速度慢了很多。实际确实如此，但是
他们忽略了一个事实，开发环境和整体生产率得到了提升，因为人
是那时最宝贵的资源（他们仍旧认为机器的时间比人的时间重
要）。在项目的过程中，有些人发生了转变，有些人一直都没有转
变。
然而有趣的是，有时很小的事情也可能对用户的接受程度形成巨大
冲击。我们来讲两个例子，它们都显示了新的自动化所带来的增
值。第一个例子是关于一位秘书的，她为项目录入了大部分文档，
和项目的很多人都打交道。她录入的很多文档中都有许多等式，她
必须留出空间来输入等式，即使使用了自动化的字处理程序也一
样。这对于她和她的客户都是负担，大家都认为速度很慢。在发现
了UNIX有一个"eqn"工具能够自动生成等式之后，她马上改变了做
法，而且让她们那个工作圈的很多人都改变了做法，包括经理和系
统工程师，他们都转而使用字处理程序。另外一个例子是一位见多
识广的管理助理/数据经理。她发现使用UNIX的"脚本"能够把他们
的一些表单需求自动化，还能使用新工具提供配置管理。她的上司
对此印象深刻，要求下属全都使用新工具。她用自已的创造力解决
了问题，她的思想开放的上司敢于对下属提出要求（有些时候这是
让别人做出改变的唯一办法）。
标准化
技术的采用有很多方面，但是我们发现，即使技术很好，有时也只
能通过标准化或命令的方式才能得到采用。在这个项目中，即使工
具已经得到证明，也需要采取这种方式才能推广，今天在组织中仍
旧存在这种情况。例子包括在PC上实现标准化，使用微软的产品以
及其他例子，包括SharePoint、eRoom、Livelink等。管理人员做出
169
---
## Page 171
这些决定，用户只要照办就可以了。另一方面，在可能的情况下，
如果能对接口进行标准化就更好了，特别是对于像TRW这种定制软
件的地方，他们必须交付与不同的客户环境相兼容的软件和支持工
具。
用户应当是团队的一部分
如果用户对技术的成功感兴趣，那么对技术的接受也就容易了。如
果他们从一开始就参加到需求定义、分析和设计过程中，或者在开
发过程中参加到评审过程中，他们就有一种拥有感，更有可能为这
项技术辩护，不大可能批评和拒绝这项技术。这是我们付出了代价
之后才学到的经验。有些团队成员期望着把时间投入到最新的研究
工具中，但是当用户说他们需要的是简单的（用于UNIX）的东西，
比如在文档旁边放置一些竖线来表示新版本的文档在哪些地方做过
改动，团队成员对此有点失望。但是他们看到自已提供的便利设施
对项目用户产生正面的影响后，感觉就好多了。
把所有人都包括进来
每个项目中都有自行其是的人，出于团队中大多数人都不理解的原
因，似乎不愿意成为团队的一部分，缺少和善的态度。我们中就有
一个这样的人，他非常聪明、才华过人，对于“常人”一点耐心都没
有。他反应敏捷，他的创新常常让我们感到吃惊。我们记得他让
Forms管理程序包的速度提高了四五倍，因为他深入研究了UNIX并
找到几个隐含的接口调用。很多人对他说那个程序包运行速度太慢
了。他嘟曦着说，他们得到这些东西应当知足了，然后就走并了，
两天之后再回来的时候，微笑地拿出一个比以前快了四五倍的版
本......我们甚至不知道他在处理那个软件包。
但是他的冷漠对很多人来说都很难接受。这影响了团队，我们要让
他融入团队。他是小组中知识最丰富的人，我们觉得他融入团队后
会对团队的协作带来很大提升。我们的一位团队成员，一位聪明的
女士，在音乐和计算机科学上都取得过学位，非常睿智，成为了他
的朋发，打破了他的那道玻璃屏障。我们都不知道是什么原因促成
了那样变化。我们认为他此后就并始信任团队的某些成员并且喜欢
他们了。此后项目的生活变得比以前好多了。我们从中得到的经验
是如果人们在意并花费时间，是有办法把每个人都包括进来的。
培训的是经理，不是普通的学生
170
---
## Page 172
项目启动了一个培训计划，针对的是操作系统和运行在上面的很多
工具。我们注意到经理们没有来参加课程。这是因为没有时间还是
因为他们不愿意显示出他们缺少知识能力？我们发现很多人属于后
一种情况。为了降低风险，我们开始把经理们的课程单独分出来
（与普通课程也没有多少差别，也许只是稍微高级一点），让他们
与同级别的人在一个小组，这样会自在一些。在他们熟悉了技术之
后，他们就更愿意使用、推荐和要求别人也使用了。
尝尝我们自已烹调的
另外一个重要的经验是让软件生产率项目使用自己并发的工具。我
们开始时没有这样做，结果我们无法理解用户的某些需求，这对工
具的接受过程带来了损害。在我们的项目并始使用工具后，例如需
录跟踪能力这样的工具，就对用户社区有了更好的理解，对工具本
身带来了很多的提升，这让工具更好地被大家所接受。
电子邮件是助推器还是阻碍物
如果现在没有电子邮件会怎么办？（实际上，昨天的电子邮件可能
等同于今天的即时通讯软件或社会网络。）我们在新环境中的不同
项目间实施了电子邮件。但是当然，这也带来了问题，这些问题即
使今天也仍旧存在。电子邮件有很多好处：它能够让人们与跨越很
远距离的很多收件人进行交流或即时广播信息，当收件人不在座位
上的时候也能够给他留言等。但是，它给生产率也带来了负面影
响，人们不是拿起电话和其他人交谈来解决问题或讨论一些想法，
而是自动地采取默认操作，写一个电子邮件消息。这样会浪费双方
的时间。一个简单的电话能够解决的问题现在需求花费更长时间。
而且常常会有一些令人沮丧的时刻，人们没有仔细地阅读他们的电
子邮件或误解了电子邮件的内容，邮件提到的问题根本没有去处
理。
另外，发送一些晦涩难懂的邮件所带来的问题是伤害了感情，造成
了误解。由于电子邮件本质上是非交互、非人性化的，交流的“质
量"常常受到影响。产生了误解，有些时候直到花费了大量的时间
成本和劳动力成本后才能得到澄清和补救。软件生产率项目环境的
另外一个负效应是有些人不再走出自已的办公室和别人进行交谈
了。他们不再把头伸到旁边的办公室去问问题或讨论事情，而是发
送一些晦涩难懂的邮件。这带来一些团队问题，必须由全体人员解
171
---
## Page 173
决，管理人员要鼓励团队成员与其他人“交谈”而不是默认地把邮件
作为交流方式。
此外，如果需要安排大家采取行动或有重要事项时，电子邮件也不
是有效的方式。就算对方阅读了我们发送的电子邮件，我们也不能
总是假设他们正确地阅读了。有时候过分依赖于电子邮件加重了这
种低效率一—例如，随意地或不小心地使用了“全部回复”功能。
变成字处理器
同样的负面生产率也出现在了像字处理程序（例如LaTeX和其他程
序）这样的工具上。现在能够录入他们自己的文档，对于维护文档
的目的来说，尽管这种方式比以前快得多也好得多，但用户抱怨说
他们最后在美学上（让格式保持正确）花费了太多时间而不是把时
间花在文档内容上。因为文档的生成工作现在交给工程师自已来准
备了（除了那些配备秘书的经理们），每小时的成本最终变高了，
内容质量下降了，因为更多的时间都用在文档格式的排错上了。当
然，随着所见即所得（WYSIWYG）字处理程序的产生，这个问题
就解决了，或者说基本上解决了。
创新、掌握时机和商业化的困难
由于项目的需要，创建了一个表单管理系统，包含了很多今天的第
四代/第五代DBMS的能力。这些能力在当时都是不存在的。那是一
个非常优秀的系统，假如我们公司身处商业市场领域，那么该系统
本来是可以商品化的。但我们当时是（现在也是）一家大型航空航
关公司，主要是按合同生产的。前面已经说过，团队中有很多年
轻、富有企业家精神和高度创造力的人，他们在这个创新项目的环
境中蓬勃发展，由于公司对商业化缺乏兴趣，那些人中有几位离并
了公司，部分人去开创新事业，还有部分人构建自己的、可以商业
化的工具。
软件维护的铁律
软件维护的铁律认为：在开发上每投入一元钱，就需要在软件生命
周期中花费两元钱来保证产品是可用的。软件生产率系统在开始时
为项目提供免费服务，后来变得很难为项目支付维护费用。这样，
随着时间的推移，软件生产率改进项目能够用来添加新特性部件的
资源越来越少。例如，在1982年，表单管理系统是世界上同类产品
172
---
## Page 174
最好的一种；到了1986年，它也仍旧是同类产品中世界上最好的
1982系统，但是和那些财务和用户基础更广泛的商用表单管理系统
相比，已经黯然失色了。
拥护者
在这个项目以及其他很多项目中，我们发现需要“拥护者”。也就是