York,NY:Basic Books.
Nuttgens,Patrick.1997.The Story of Architecture,Second Edition.New
York,NY:Phaidon Press.
1307
---
## Page 1309
Petzold,Charles.1999.Programming Windows,Fifth
Edition.Redmond,WA: Microsoft Press.
Rand,Paul.1985.A Designer's Art.New Haven,CT: Yale University
Press.
Simon,Herbert.1996.The Sciences of the Artificial.Cambridge,MA:MIT
Press.
Stroustrup,Bjarne.1985.The C++Programming Language.Boston,MA:
Addison-Wesley.Stroustrup,Bjarne.1994.The Design and Evolution of
C++.Boston,MA: Addison-Wesley.Sullivan,Louis H.1896."The tall
office building artistically considered."Lippincot's Magazine,March
1896.
Thomas,David,et al.2005.Programming Ruby: The Pragmatic
Programmers Guide,Second Edition.Raleigh,NC,and Dallas,TX: The
Pragmatic Bookshelf.
Vandervoorde,David,and Nicolai M.Josuttis.2002.C++Templates: The
Complete Guide.Boston,MA: Addison-Wesley.
Wolfe,Tom.1982.From Bauhaus to Our House.London,UK: Jonathan
Cape.
跋漂亮地构建WilliamJ.Mitchell
人们常常对软件系统和建筑工作进行宽松的类比。但与初看上去相
比，这两种系统间结构上的类似程度实际上更大，可以更严格地具
体化。
构成软件系统的代码由一维的符号字符串构成，按照精确的句法规
则将一些定义良好的词汇放在一起，目标是在合适的机器上执行时
能得到有用的结果。
建筑工作显然不是一维的，但在其他方面则与代码非常相似。它们
是离散的物理组件的三维组装，按照严格的句法规格将定义良好的
组件词汇放在一起，目标是得到有用的结果。（建筑师在实践中确
实比程序员在词汇和句法方面拥有更大的活动余地。）
1308
---
## Page 1310
在两种情况下，我们都可以编写正式的语法来建立规则。总的来
说，正式的语法告诉你如何把东西放在一起。更准确地说，根据语
言学和计算机科学中的标准定义，正式的语法包括：一个有限的非
终结符集合N，一个有限的终结符集合T，一个有限的替代规则集合
R，和一个初始符号S。替代规则的左边有一组符号，中间是一个箭
头，右边是另一组符号。它规定你可以用右边的那组符号代替左边
的那组符号。完整、正确的结构化组件是通过递归地在初始符号S
上应用替代规则R而得到的。由该语法确定的语言是所有可以通过
这种方式导出的终结符构成的组件的集合。
正式的语法通常应用于单词词汇，告诉你如何将这些单词放在一起
构成完整正确的句子，但并不限于此。语法可以应用于许多不同类
型的东西，告诉你如何将它们放在一起，得到有用的组件。
在针对编程语言的语法中，放在一起的东西是可识别的符号，替代
规则的左边和右边是一维的符号字符串，这些规则推导出这种语言
的完整而正确的表达式。在两维的图形语言中，放在一起的东西是
两维的形状，替代规则的左边和右边是两维的形状组件，这些规则
源于完整而正确的图形设计。在三维的建筑语法中，要放在一起的
非终结符是一些建筑结构，要放在一起的终结符是实际的建筑构
件，替代规则推导出这些构件完整而正确的组合一换言之，即用
该语法确定的语言所表达的设计。
例如，在几十年前，GeorgeStiny和我出版了一本这种形式的正式语
法，内容是关于伟大的意大利文艺复兴建筑师AndreaPalladioI!L的
著名的漂亮别墅。它推导出了所有已知的Palladio设计的别墅，以及
大量确认的伪Palladian别墅。（或者可以说，它推导出了所有
Palladio可能设计的别墅，如果他活得更长、有更多客户的话。）而
且，它对Palladio的别墅建筑背后的原则提供了让人信服的解释。从
那时起，人们针对其他设计工作编写了无数建筑语法。
建筑语法最重要的功能之一就是记录下原则或模块性以及层次结
构，它们总结了某些特定建筑风格的特征。例如，在精确定义和厂
泛使用的经典建筑语言中，圆柱有底座、柱身和顶部。顶部又进一
步分解为一个组件层次结构（多立克式、伊奥尼亚式和科林斯式各
有不同），等等。沿着子构件的层次结构向上，通常隔并一定距离
的圆柱形成柱廊。圆柱、柱上构和人字墙形成了门廊。最后，所
有的组件和子构建漂亮地结合在一起，构成了完整的、符合语法的
经典组合。这些组合可以像句子一样被解析为一些有名称的部分。
1309
---
## Page 1311
从几何学或CAD系统的角度来看，建筑的组件和子构件是一些具体
的形状，它们可以被变形和组装，得到更大的空间构造。从供应链
和建造的角度来看，它们是一些物料元素，被制造（通常通过许多
步骤构成的一个过程，每个步骤都提供附加值）、购买、运送至要
求的地点，最后在一个构件中组装到位。从建筑维护的角度来看，
它们是可以替换的部分。从功能的角度来看，它们是一些模块，在
建筑中执行着可以识别的任务，可以与其他模块一起形成一个子系
统，执行更高层次的任务。当模块以这种方式组合时，它们不仅有
悦目的空间关系，而且也通过这些空间关系的优点，通过它们的接
口传递了一些东西（如结构负荷）。
类似地，编程语言提供了一些方式将代码分解到模块中，层次化地
组装模块，得到更高层次的模块，最终完成整个软件系统。所有程
序员都知道，好代码不是一团乱麻，它的模块和层次有看清晰的逻
辑结构，这种结构是利用语言的抽象和有组织的构建来实现的。经
典建筑的组织清晰性为此提供了一个极好的模型。
除了少数的例外情况，建筑工作也遵循其他一些内部秩序原则。例
如，圆柱排成一列通常是等间距的。如果想编写代码生成柱廊的
CAD模型，那么你不需要为每个圆柱指定位置。你可以利用选代，
按照增量步长来确定位置参数。换言之，你以更精确更优雅的方式
表达了建筑的原则，这种方式为代码的阅读者提供了更多的深刻见
解。
如果你想生成有规则圆柱栅格怎么办？你可以使用嵌套选代。首先
对一个圆柱进行选代，生成间距相等的一列圆柱，然后再选代这一
列圆柱，次数由你决定，生成圆柱栅格。
如果你想让角上的圆柱与中间的圆柱不一样，怎么办？（根据建筑
转角处存在的不同结构情况或其他情况，建筑师常常这样做。）你
可以使用条件：如果是转角，那么换成另一种圆柱设计。如果想改
变中间圆柱之间的间距，以突出中轴线的重要性，区分外部的圆柱
和内部的圆柱，那么你只要引入更多的条件。
模块性、层次结构和规则地重复并不是建筑师经常使用的全部秩序
原则。如果你仔细分析建筑组合，就会经常发现在维度和比例、对
称性（和有意破坏的对称性）、类似分形那样的嵌套的自相似性，
以及参数化变化的花纹等方面的规律。
1310
---
## Page 1312
但是有时候，似乎缺乏内部的规律。建筑师可能出于某种原因，随
机安排圆柱。为什么？似乎最准确地描述这种配置的方法就是单独
指定每个圆柱的位置。没有更简短、更经济的描述方式。
就像这些简单的例子所说明的，好的建筑师不是通过随意的、蛮力
的方式来构造他们的设计，他们肯定会避免笨拙的做法。根据现场
环境、气候、要容纳的活动、材料和组件的供应链、建造过程和预
算，他们会设计出相当不同的复杂建筑。但他们试图带着一种概念
上的优雅来完成设计一—遵守经济性的原则，并严格运用他们自己
的奥卡姆剃刀原理。在漂亮的建筑作品所表现出来的不同和复杂性
背后，你通常会发现一些关于功能组织和规范秩序的简单而优雅的
原则。发现这些原则需要思考，而思考正是建筑的快乐和经验的关
键部分。
如果你能弄明白这些原则，就可以通过某种标准编程语言中同样优
雅的几行代码构造出这些作品的模型，或者（在更现代的编程环境
中）使用一些形状重写规则。你甚至可以一般化，编写代码来生成
设计，遵循同样的一些规则，对不同的情况和要求做出适当的反
应。但如果你弄不明白这些原则，那么肯定要编写更长的、不包含
那么多深刻见解的代码。
建筑明显的复杂性来自于建筑师所面对的需求的复杂性，它是通过
蛮力的、逐点的描述的长度来衡量的。建筑师得到设计所遵循的原
则通常可以用一段简短得多的代码来表示，执行这段代码就能生成
所有这些复杂性。根据相当不错的估计，简短描述与允长描述之比
越小，建筑就越美丽。
建筑师会仰慕那些应用了简单优雅原则来实现许多复杂性的架构之
美。类似地，软件架构师和程序员也会仰慕那些清晰而准确执行了
许多复杂任务的代码之美（不牺牲可读性和可维护性）。科学家会
仰慕那些描述了各种不同现象的简单法则之美和它们的解释能力。
[]George Stiny and William J.Mitchell,The Palladian Grammar
Environment and Planning B,vol.5, no.1， 5-18 (1978).
1311
---
## Page 1313
数据之美
Beautiful Data
杨秘优雅的数据解决方案背后的故事
O'REILLY
obySegaran&JeffHammerbacher
祝洪凯李妹芳段炼泽
O'ReillyMedia,Inc.介绍
为了满足读者对网络和软件技术知识的迫切需求，世界著名计算机
图书出版机构OReillyMedia,Inc.授权机械工业出版社，翻译出版一
批该公司久负盛名的英文经典技术专著。
1312
---
## Page 1314
O'ReillyMedia,Inc.是世界上在Unix、X、Internet和其他开放系统图书
领域具有领导地位的出版公司，同时也是联机出版的先锋。
从最畅销的TheWholeInternetUser,sGuide&Catalog（被纽约公共图
书馆评为20世纪最重要的50本书之一）到GNN（最早的Intermet门户
和商业网站），再到WebSite（第一个桌面PC的Web服务器软件），
OReillyMedia,Inc.一直处于Internet发展的最前沿。
许多书店的反馈表明，OReillyMedia,Inc.是最稳定的计算机图书出
版商一—每一本书都一版再版。与大多数计算机图书出版商相比，
O'ReillyMedia,Inc.具有深厚的计算机专业背景，这使得O'Reilly
Media,Inc.形成了一个非常不同于其他出版商的出版方针。OReilly
Media,Inc.所有的编辑人员以前都是程序员，或者是顶尖级的技术专
关领域的技术专家、咨询专家，而现在编写著作，OReilly
Media,Inc.依靠他们及时地推出图书。因为O'ReillyMedia,Inc.紧密地
与计算机业界联系着，所以O'ReillyMedia,Inc.知道市场上真正需要
什么图书。
译者序
我一直对数据挖掘很感兴趣，尤其是通过对海量、抽象甚至枯燥的
数据进行挖掘分析后，利用数据可视化工具展现出来的那种绚丽多
彩、富含意蕴的数据之美更是令我痴迷、叹为观止。本书涉及领域
很广，各领域的精英们向我们娓娓道来相关领域的数据信息系统的
架构的设计，包括Yahoo！的云存储架构、DeepWeb数据抓取、
Facebook的信息平台、自然语言处理、“凤凰号”火星探测器的图像
数据处理、探索数据生命的DNA漫谈，甚至是Radiohead视频的制
作、旧金山的次贷危机等。
阅读完本书之后，我自己的一个很大的收获是对于自己比较了解的
领域，如云存储、DeepWeb、NLP等有了进一步的理解和实践指
导，而对于那些完全不熟悉的领域，如探索数据生命、火星探测
器、制作Radiohead视频等则更是开阔了视野，不但对数据有了新的