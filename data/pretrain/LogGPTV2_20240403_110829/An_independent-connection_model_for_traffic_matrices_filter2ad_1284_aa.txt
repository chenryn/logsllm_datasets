title:An independent-connection model for traffic matrices
author:Vijay Erramilli and
Mark Crovella and
Nina Taft
An Independent-Connection Model for Trafﬁc Matrices
Dept. of Computer Science
Dept. of Computer Science
Vijay Erramilli
Boston University
Mark Crovella
Boston University
Nina Taft
Intel Research
Berkeley, CA
PI:EMAIL
PI:EMAIL
PI:EMAIL
Abstract
A common assumption made in traﬃc matrix (TM) mod-
eling and estimation is independence of a packet’s network
ingress and egress. We argue that in real IP networks, this
assumption should not and does not hold. The fact that
most traﬃc consists of two-way exchanges of packets means
that traﬃc streams ﬂowing in opposite directions at any
point in the network are not independent.
In this paper
we propose a model for traﬃc matrices based on indepen-
dence of connections rather than packets. We argue that the
independent-connection (IC) model is more intuitive, and
has a more direct connection to underlying network phenom-
ena than the gravity model. To validate the IC model, we
show that it ﬁts real data better than the gravity model and
that it works well as a prior in the TM estimation problem.
We study the model’s parameters empirically and identify
useful stability properties. This justiﬁes the use of the sim-
pler versions of the model for TM applications. To illustrate
the utility of the model we focus on two such applications:
synthetic TM generation and TM estimation. To the best
of our knowledge this is the ﬁrst traﬃc matrix model that
incorporates properties of bidirectional traﬃc.
Categories and Subject Descriptors
C.2.3 [Computer-Communication Networks]: Network
Operations; C.4.3 [ Performance of Systems]: Modeling
Techniques
General Terms
Measurement
Keywords
Traﬃc Matrix, Modeling, Independent-Connection Model,
Gravity
1.
INTRODUCTION
The ﬂow of traﬃc through a network is a crucial aspect of
the network’s workload. The amount of traﬃc ﬂowing from
each ingress point (origin) to each egress point (destination)
is called the traﬃc matrix (TM). Given the importance of
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
IMC’06, October 25–27, 2006, Rio de Janeiro, Brazil.
Copyright 2006 ACM 1-59593-561-4/06/0010 ...$5.00.
the traﬃc matrix for many aspects of network operations,
good models of traﬃc matrices are very useful.
Despite the importance of TM modeling, there has been
little work to date focusing on complete models for TMs.
By a complete model, we mean one that can be used to
generate or characterize a time-series of representative traf-
ﬁc matrices for a given network topology. Such a model
should ideally have a small number of physically meaningful
inputs. Examples of such inputs would be the size of user
populations served by each access point, or the nature of the
application mix in the network.
Although complete TM models do not yet exist, some
models for parts of the problem have been developed [16,
13]. One of the most popular models in connection with
traﬃc matrices is the ‘gravity’ model, which estimates OD
ﬂow counts from ingress and egress counts. The gravity
model has been used extensively in TM estimation and has
been proposed as a tool for synthetic TM generation[11].
The key assumption underlying the gravity model is that
the traﬃc entering the network at any given node exits the
network at a particular egress node in proportion to the total
traﬃc exiting at that egress. This can be thought of as a
model in which the ingress and egress points for any given
packet are independent.
This paper starts from a simple observation: in the Inter-
net, this independence assumption should not and does not
hold. The reason is that most network traﬃc consists of con-
nections – two-way conversations usually carried over TCP.
Each connection has an initiator (a host that requested the
connection) and a responder (a host that accepted the con-
nection request). The result is that the amount of traﬃc
ﬂowing from ingress i to egress j is not independent of the
amount of traﬃc ﬂowing from ingress j to egress i. Thus
while the gravity model is appealing for its simplicity, it is
divorced from key underlying phenomena that shape traﬃc
ﬂow in a real network.
To capture these phenomena, we propose the independent-
connection (IC) model. Rather than assuming that ingress
and egress of packets are independent, we assume that ini-
tiators and responders of connections are independent. The
key is that we think of an aggregate ﬂow (such as an OD
ﬂow) not as collections of packets, but as collections of con-
nections. We focus on connections rather than packets be-
cause of the bidirectional nature of connections that contain
packets ﬂowing in two directions.
The IC model is based on three intuitive notions: ﬁrst,
each aggregated traﬃc stream from a single origin to a sin-
gle destination consists of two kinds of traﬃc: forward traf-
ﬁc, ﬂowing from initiators to responders; and reverse traﬃc,
ﬂowing from responders to initiators. We assume that at a
high enough level of traﬃc aggregation, the ratio of forward
and reverse traﬃc may exhibit some stability in time and/or
space (i.e., at diﬀerent access points). The second notion is
that each network access point has an activity level, mean-
ing the rate at which bytes are ﬂowing through the network
due to connections initiated at that access point. Thus the
network activity for a given access point consists of a por-
tion of the traﬃc ﬂowing both to and from the access point.
Finally, the third notion is that each access point has an
associated preference. This is the fraction of all connections
whose responders are associated with that access point.
Each of these assumptions has a natural physical interpre-
tation. The ratio of forward to reverse traﬃc in a large set of
connections reﬂects the properties of the underlying appli-
cations, and the application mix. For example, Web traﬃc
will tend to have a much greater amount of traﬃc ﬂowing
in the reverse direction than in the forward direction, while
P2P traﬃc may show less asymmetry. The activity level of
a node corresponds to the number of users who access the
network at that node, and their current level of network use.
The preference of a node corresponds to the “desirability”
or ”popularity” of the services that are reached through that
node — i.e., a level of interest expressed as a likelihood that
any given user will seek to initiate a connection to any given
service via that node.
In the IC model, these concepts are composed in a straight-
forward way (in Sec. 2). Depending on the assumptions
one makes about the temporal or spatial stability of model
parameters, one can obtain versions of the model that are
useful for a number of network modeling tasks. Using real
traﬃc matrices we study the behavior of the three key no-
tions (parameters) of our model. We ﬁnd, for example, that
forward/reverse ratios and node preference show remarkable
stability over time. Our ﬁndings indicate that the simpler
versions of our models are suﬃcient for applications such
as synthetic traﬃc matrix construction and TM estimation.
We focus on these two applications and describe a method
for traﬃc generation based on our model.
We also use the model to construct inputs for the problem
of TM estimation. We show that although the IC model has
fewer inputs that the gravity model, it does a better job at
reproducing OD ﬂow counts than the gravity model. Our
purpose is not to propose another TM estimation method,
but rather to validate our model by illustrating that it can
work well in a known TM application, and do so with fewer
parameters.
2.
INDEPENDENT-CONNECTION MODEL
Consider a network with n access points. Traﬃc ﬂows
into and out of the network at each access point. During
any ﬁxed time interval, the amount of traﬃc in bytes that
enters the network at node i and leaves the network at node
j is denoted Xij . This is called an Origin-Destination (OD)
ﬂow from origin i to destination j. All the traﬃc ﬂowing
into the network at node i is Xi∗ (which we refer to as the
ingress traﬃc at i) and all the traﬃc ﬂowing out of the
network at node j is X∗j (the egress traﬃc at j). Finally,
X∗∗ denotes all the traﬃc in the network, i.e., the sum of
Xij for all i = 1, ..., n and j = 1, ..., n.
The ‘gravity’ model treats the ﬂow of traﬃc as a random
process. For any packet, we let I be the random variable
corresponding to the packet’s ingress and E be the random
2
2
B
2
2
100
100
1
1
1
2
1
C
1
1
100
2
100
A
100
100
Figure 1: Example Traﬃc in an IC Setting.
variable corresponding to the packet’s egress. The gravity
model states that I and E are independent, that is, P [E =
j|I = i] = P [E = j] and likewise, P [I = i|E = j] = P [I =
i], ∀i, j. Based on this ‘independent-packet’ assumption, the
gravity model predicts that Xij should be well approximated
by Xi∗X∗j /X∗∗,∀i, j.
We start with the simple observation that the independent-
packet assumption is not accurate in the Internet. A typical
packet in the Internet is part of a connection — a two-way
exchange of packets, generally in the form of a single TCP
connection. Packets ﬂowing in opposite directions of a con-
nection are not well modeled as being independent.
To see why this is the case, consider the following example.
Let us assume that all connections consist of equal volumes
of traﬃc ﬂowing in the forward direction and the reverse
direction.
In actual practice forward and reverse volumes
are not likely to be equal, but it simpliﬁes the example.
Suppose some nodes initiate a larger traﬃc volume than
other nodes, as in the three-node network example in Fig. 1.
In the ﬁgure, directed arcs show the direction of traﬃc ﬂow
from origin to destination. Dotted arcs correspond to traﬃc
ﬂowing from initiator to responder (forward traﬃc) and solid
arcs correspond to traﬃc ﬂowing from responder to initiator
(reverse traﬃc). Self-looping arcs correspond to connections
between diﬀerent hosts having the same access point. The
total traﬃc ﬂowing into the network at any node consists of
all the arcs leaving that node, and traﬃc ﬂowing out consists
of all arcs pointing to that node.
Because we assume each connection contains the same
number of bytes in both directions, pairs of forward and
reverse arrows between an initiator and responder have the
In this case, node A initiates 3 connections,
same value.
each of 100 packets in each direction; node B initiates 3
connections, each of 2 packets in each direction; and node
C initiates 3 connections each of 1 packet in each direction.
The key point is that the initiator and responder of any given
connection are independent; that is, the probability that a
connection’s responder is any particular node is independent
of the connection’s initiator node.
However, we see that ingress-egress independence for pack-
ets is not a valid model. For example,
P [E = A|I = A] = 200/403 ≈ 0.50,
P [E = A|I = B] = 102/109 ≈ 0.93,
P [E = A|I = C] = 101/106 ≈ 0.95, and
P [E = A] = 403/618 ≈ 0.65.
These probabilities should be equal under gravity.
2.1 Model Deﬁnition
Rather than model connections individually, we note that
what is important about a connection is that it consists of
traﬃc in both the forward and reverse directions. Consider
the collection of all connections with initiator node i and a
responder node j. We use fij to denote the portion of the
total bidirectional traﬃc due to these connections that is in
the forward direction. That is, fij denotes bytes contained
in forward traﬃc divided by bytes in forward plus reverse
traﬃc, so 0 ≤ fij ≤ 1, ∀i, j
Next we consider the total traﬃc due to connections ini-
tiated at node i, i = 1, ..., n, which we denote Ai (for ‘activ-
ity’). This consists of some forward traﬃc ﬂowing into the
network at node i, and some reverse traﬃc ﬂowing out of
the network at node i.
Finally we consider how connection responders are cho-
sen. Since we assume an independent connection model,
the probability that a connection responder is at node i de-
pends only on i. We denote this by Pi, i = 1, ..., n (for
‘preference’). We do not assume that the Pi values sum to
one, but usually we will use them as probabilities and so will
normalize by
P
Pi.
Then if Xij is the amount of traﬃc between nodes i and
i=1,...,n
j, the general independent-connection model has:
Xij =
fij AiPjP
i=1 Pi
n
P
(1 − fji)AjPi
i=1 Pi
n
+
for i, j = 1, ..., n.
The ﬁrst term captures the forward traﬃc ﬂowing from i
to j – traﬃc generated by the activity of users at node i; the
second term captures the reverse traﬃc ﬂowing from i to j
– traﬃc generated by the activity of users at node j.
When considering only a single connection, f may vary
considerably. However in a backbone network carrying highly
aggregated traﬃc, we assume that f will show some degree
of stability across diﬀerent OD ﬂows. In this case we sim-
plify the general IC model and assume f is constant across
the network. This leads to the simpliﬁed IC model:
(1)
(2)
Xij =