    Suite to serve as an HTTP proxy and have all HTTP/S traffic pass
    through Burp Suite. This will allow you to operate as a "man in the
    middle" between your browser and target web applications.
5.  [Under the Options subtab as seen in [Figure
    11.11](#c11.xhtml#c11-fig-0011){#c11.xhtml#R_c11-fig-0011}, in the
    Proxy Listener section, you should see an entry in the table with
    the checkbox selected in the Running column, and 127.0.0.1:8080
    showing in the Interface column. Click the Intercept tab and verify
    that "Intercept is on." Burp Suite now can intercept the traffic
    between you and your HTTP destination.]{#c11.xhtml#c11-li-0021}
    ![[**[Figure
    11.11](#c11.xhtml#R_c11-fig-0011){#c11.xhtml#c11-fig-0011
    role="doc-backlink"}:**]{.figureLabel} Configuring your browser to
    listen for traffic over the Internet](Images/c11f011.jpg){.center
    width="639" height="425"}
6.  [Open your browser and visit `www.example.com`. Burp Suite should
    show you each request you have made in the form of raw data. If you
    have raw data, click the Forward button to cycle through each
    request the browser has made for more data.]{#c11.xhtml#c11-li-0022}
    If the listener is not running, then Burp Suite was not able to open
    the default proxy listener port over port 8080. You will need to
    edit the port number of the listener to the proper port number for
    your device in Burp Suite or configure the browser of your choice to
    interact with Burp Suite. When using Burp Suite, I use Firefox as my
    browser because of the extensibility and ease of configuration. Go
    to the Firefox menu and select Preferences and then Options. Under
    the General tab, open Network Settings. As you see in [Figure
    11.12](#c11.xhtml#c11-fig-0012){#c11.xhtml#R_c11-fig-0012}, you
    should configure the manual proxy to be 127.0.0.1 over port 80 and
    use this proxy for all protocols.[]{#c11.xhtml#Page_160 .pagebreak
    title="160" role="doc-pagebreak"}
    ![[**[Figure
    11.12](#c11.xhtml#R_c11-fig-0012){#c11.xhtml#c11-fig-0012
    role="doc-backlink"}:**]{.figureLabel} Mozilla Firefox settings for
    a Burp Suite network proxy](Images/c11f012.jpg){.center width="635"
    height="533"}
7.  [If you try to view the initial request and there\'s no data, check
    your alerts. There may be a need to configure the certificate your
    browser is using. Again, I prefer Mozilla Firefox, so within this
    browser, you can visit `http://burp` to download the CA certificate
    shown in [Figure
    11.13](#c11.xhtml#c11-fig-0013){#c11.xhtml#R_c11-fig-0013}. A CA is
    a certificate authority. It is a trusted entity that the Internet
    uses for authentication. The CA will issue the SSL certificate that
    web browsers are going to use to authenticate
    content.]{#c11.xhtml#c11-li-0023}
    ![[**[Figure
    11.13](#c11.xhtml#R_c11-fig-0013){#c11.xhtml#c11-fig-0013
    role="doc-backlink"}:**]{.figureLabel}
    `http://burp`](Images/c11f013.jpg){.center width="639" height="108"}
8.  [Once you have the certificate downloaded, you will need to bring it
    into the browser. In [Figure
    11.14](#c11.xhtml#c11-fig-0014){#c11.xhtml#R_c11-fig-0014}, you see
    the options for bringing the SSL certificate into Mozilla Firefox to
    be used by Burp Suite. According to Marissa "Reese" Morris, senior
    director of Firefox at Mozilla, "In the case of Burp Suite, the CA
    allows professionals to test their encrypted services for
    vulnerabilities."[]{#c11.xhtml#Page_161 .pagebreak title="161"
    role="doc-pagebreak"}]{#c11.xhtml#c11-li-0024}
    ![[**[Figure
    11.14](#c11.xhtml#R_c11-fig-0014){#c11.xhtml#c11-fig-0014
    role="doc-backlink"}:**]{.figureLabel} Loading the CA certificate
    into Firefox Preferences located under Privacy And
    Security](Images/c11f014.jpg){.center width="597" height="209"}
:::
::: {.bottom .hr}
------------------------------------------------------------------------
:::
:::
```{=html}
```
With only a little bit of effort, anyone can start using the core
features of Burp Suite to test the security of his or her applications.
Burp Suite is very intuitive and user‐friendly, and the best way to
start learning is by doing. These next steps will get you started with
running Burp Suite and using some of the basic features.
The Proxy tool is the core of the product acting as a web proxy server.
A proxy server is a server that sits between a web browser and a real
server. As you request a file, connection, or web page, the proxy server
examines the request for many reasons, such as control, simplification,
or anonymity. In Burp Suite, the purpose is to inspect and possibly
modify the raw traffic as it passes in both directions.
In [Lab 11.3](#c11.xhtml#c11-fea-0003){#c11.xhtml#R_c11-fea-0003}, you
will be using core features of Burp Suite Community Edition.
```{=html}
```
::: {.top .hr}
------------------------------------------------------------------------
:::
::: {.section .feature3}
### [LAB 11.3](#c11.xhtml#R_c11-fea-0003){#c11.xhtml#c11-fea-0003 role="doc-backlink"}: USING BURP SUITE TO INTERCEPT HTTP TRAFFIC {#c11.xhtml#head-2-87}
::: section
[]{#c11.xhtml#c11-sec-0009}
1.  [Navigate to `www.whatismyip.com` to take note of your actual IP
    address. Knowing your true IP address is critical for any type of
    technical support across a network or connecting to an external
    device.]{#c11.xhtml#c11-li-0025}
2.  [Each HTTP request made by your browser is displayed in the
    Intercept tab. You can view each message, and edit it if required.
    You then click the Forward button to send the request on to the
    destination web server. In fact, you may have to hit Forward many
    times until the page loads to cycle through all the
    requests.]{#c11.xhtml#c11-li-0026}
    In [Figure
    11.15](#c11.xhtml#c11-fig-0015){#c11.xhtml#R_c11-fig-0015}, you see
    the successful capture of information between the Firefox browser
    welcome page and Burp Suite. Click through each of the message
    editor tabs to see different ways to view the data. There will be
    the raw data, then more specifically the header content, and
    finally, hexadecimal.
    ![[**[Figure
    11.15](#c11.xhtml#R_c11-fig-0015){#c11.xhtml#c11-fig-0015
    role="doc-backlink"}:**]{.figureLabel} Web traffic captured over
    127.0.0.1:8080 in the header view](Images/c11f015.jpg){.center
    width="639" height="224"}
3.  [While you\'re still in the Proxy tab, go to the HTTP History tab.
    Here you will have a table of all HTTP messages that have been
    intercepted. If you select an item in the table, you can go between
    the request and response.]{#c11.xhtml#c11-li-0027}
4.  [Next, click a column header in the History table to sort the data.
    If you click it again, it will reverse the order whether it\'s
    numerical or alphabetical. In fact, you can use the column headers
    to sort data in any page.]{#c11.xhtml#c11-li-0028}
5.  [As you\'re doing your analysis of web traffic in the HTTP History
    page, you can click the number in the first column to add a color.
    You can also right‐click a row to add a comment for future
    reference.]{#c11.xhtml#c11-li-0029}
:::
::: {.bottom .hr}
------------------------------------------------------------------------
:::
:::
```{=html}
```
[]{#c11.xhtml#Page_162 .pagebreak title="162"
role="doc-pagebreak"}Another key part of the user‐driven workflow is the
ability to take the same information and process it in different ways.
You can right‐click any entry representing traffic in the HTTP history
and, if available, do a vulnerability scan of that request using the
Burp Scanner. As you see in [Figure
11.16](#c11.xhtml#c11-fig-0016){#c11.xhtml#R_c11-fig-0016}, you also
have the ability to take traffic and use it over and over again, making
minute modifications of the request and reissue it over and over using
the Repeater. With Sequencer, you can analyze the randomness in a token
that is returned in the response that you receive.
![[**[Figure 11.16](#c11.xhtml#R_c11-fig-0016){#c11.xhtml#c11-fig-0016
role="doc-backlink"}:**]{.figureLabel} The channels you can take in
analyzing individual HTTP requests in Burp
Suite](Images/c11f016.jpg){.center width="751" height="396"}
[]{#c11.xhtml#Page_163 .pagebreak title="163" role="doc-pagebreak"}Web
application vulnerabilities will offer a huge amount of risk to an
organization, especially to enterprise systems. Too many of the
vulnerabilities are a result of lack of data validation, and bad actors
can leverage that to misuse the application. Make a checklist and check
everything. Best practice says check the outgoing, internal, and mail
links. Test your forms for default values, and test your cookies to make
sure they are deleted properly. Test HTML and CSS so there are no syntax
errors and so that other search engines can crawl your site easily. Test
the content and navigation as well as the database for integrity and
response time.
A web application penetration tester will tell you it will be an arduous
process and you are going to run into roadblocks. Deadlines will be a
huge issue since everything is needed now, if not yesterday. Plan your
work, know what is expected of the process, and create the best process
for your organization.
:::
:::
[]{#c12.xhtml}
::: {#c12.xhtml#sbo-rt-content}
# []{#c12.xhtml#Page_165 .pagebreak title="165" role="doc-pagebreak"}[]{#c12.xhtml#c12}[CHAPTER 12]{.chapterNumber} [Patch and Configuration Management]{.chapterTitle}
::: section
[]{#c12.xhtml#c12-sec-0001}
WHAT YOU WILL LEARN IN THIS CHAPTER:
-   [Patch Management]{#c12.xhtml#c12-li-0001}
-   [ManageEngine Desktop Central]{#c12.xhtml#c12-li-0002}
-   [Configuration Management]{#c12.xhtml#c12-li-0003}
-   [Clonezilla live]{#c12.xhtml#c12-li-0004}
I had so much fun this past October at the Wild West Hacking Fest (WWHF)
in South Dakota. Conferences are a great way to connect to people who
share the same interests as you, and when you get all that intelligence
and weirdness in the same room, it\'s just phenomenal. I\'ve been to
BlackHat, DefCon, and BSides, but the WWHF by far has been the most
hands‐on con I\'ve ever had the pleasure of attending. Any conference
you attend and find yourself with James Lee (aka Egypt), the author of
many Metasploit exploits, and Johnny Long, the original Google Dork,
sitting across the table from you working on the same hack is a
conference that you put on your agenda for the next year. Ed Skoudis was
the keynote speaker and was able to give us the backstory to WebExec,
the vulnerability in Cisco\'s WebEx client software. Ed\'s team at
CounterHack discovered the vulnerability in July 2018 and worked with
Cisco\'s PSIRT team to remediate. He was able to discuss the advisory at
the conference on October 24, the day of his keynote speech.
One of the best things about the WWHF is that all the talks are online.
If you can\'t get to South Dakota, you can still listen to all the talks
given by subject‐matter experts. Ed\'s keynote topic was the "Top 10
Reasons It\'s GREAT to Be a PenTester." Number 9 was Java and Adobe
Flash. They are incredibly vulnerable, and so many organizations do not
have a solid patch‐management program. In fact, Magen Wu, senior
associate at Urbane Security and my favorite red‐shirted
[]{#c12.xhtml#Page_166 .pagebreak title="166" role="doc-pagebreak"}Goon
at DefCon, says that in her experience of small to medium businesses,
only one business in five has a well‐documented patch‐management policy
in place. That\'s not good.
Patch management is a vital area of systems management. As your security
model matures, it becomes necessary to develop a strategy for managing
patches and upgrades to systems and software. Most software patches are
necessary to fix existing problems with software that are discovered
after the initial release. A great many of these are security focused.
Other patches might have to do with some type of specific addition or
enhancement to functionality of software. As you see in [Figure
12.1](#c12.xhtml#c12-fig-0001){#c12.xhtml#R_c12-fig-0001}, the patch
management lifecycle is similar to the vulnerability management
lifecycle I discussed in [Chapter 4](../Text/c04.xhtml), "OpenVAS:
Vulnerability Management."
![[**[Figure 12.1](#c12.xhtml#R_c12-fig-0001){#c12.xhtml#c12-fig-0001
role="doc-backlink"}:**]{.figureLabel} The patch management
lifecycle](Images/c12f001.jpg){.center width="404" height="408"}
:::
::: section
[]{#c12.xhtml#c12-sec-0002}
## Patch Management {#c12.xhtml#head-2-88}
I believe there are two deadly attitudes in cybersecurity: "This is how
we have always done it" and "It will never happen to me." On March 14,
2017, Microsoft issued a critical security bulletin for the MS17‐010.
This vulnerability, nicknamed EternalBlue, was an exploit written by the
National Security Agency (NSA) and was leaked to the general public by
the Shadow Brokers hacker group exactly one month later. EternalBlue
exploits a Microsoft SMB vulnerability and, in short, the NSA warned
Microsoft about the theft of the exploit allowing the company to prepare
a patch. Too many people did not install the patch, and in May of the
same year, the WannaCry ransomware virus used the EternalBlue exploit
[]{#c12.xhtml#Page_167 .pagebreak title="167" role="doc-pagebreak"}to
infect these vulnerable systems. More emergency patches were released by
Microsoft. Again, many people did not patch, and in June, NotPetya
malware swamped the globe, focusing on the Ukraine in June 2017.
Have you ever watched a horror movie and thought to yourself, "That was
your first mistake ... that was your second ... and third ..."? If
organizations had been paying attention in March, they would have been
fine. If they had paid attention in April, they would have learned how
to circumvent the exploit. Again, in May and then again in June, patches
could have been run and problem averted. The exploit is still a problem
today and has morphed into many variations, targeting the cryptocurrency
industry with malware called WannaMine. *Cryptojacking* is a term we use
to define the process where malware silently infects a victim\'s
computer and then uses that machine\'s resources to run very complex
decryption routines that create currency. Monero is a cryptocurrency
that can be added to a digital wallet and spent. It sounds fairly
harmless, but thinking back to the CIA triad, you are losing your CPU
and RAM resources to the malware, and it can spread across your network.
If you think of the volumes of processing power and bandwidth it will
consume in your organization, you definitely don\'t want this infection.
The lesson learned is that we must keep our systems up‐to‐date. In your
patch management program, you will have to include operating system
patches and updates for Microsoft, Apple, and Linux as well as
third‐party applications such as Chrome, Firefox, Java, and Adobe Flash.
You may have other software or firmware on your network. If you have a
system with software, you must have security policy outlining when to
patch systems. If you take the risk of not patching, you will leave your
systems vulnerable to an attack that is preventable.
The patch management lifecycle will start with an audit where you scan
your environment for needed patches. After you know which patches are