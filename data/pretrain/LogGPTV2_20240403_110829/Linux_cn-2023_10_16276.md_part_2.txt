如果你不确定你想要查找的字符串是使用的大写字母还是小写字母，添加 `/I` 选项来忽略字母的大小写情况:
```
C:\>find /i "menudefault" fdconfig.sys
---------------- FDCONFIG.SYS
MENUDEFAULT=2,5
```
### G 是 GRAPHICS
如果你想要捕捉屏幕，你可以使用你键盘上的 `PrtScr`（ 打印屏幕   Print Screen ）按键来直接将你显示器上的文本打印到打印机上。不过，这只对纯文本来说有效。如果你要打印图形屏幕，你需要加载 `GRAPHICS` 程序。
`GRAPHICS` 支持不同的打印机类型，包括 HP 的 PCL 打印机、Epson 的点阵打印机，和兼容 PostScript 的打印机。例如，如果有一台连接到你的计算机的 HP 的激光打印机，你可以通过输入这条命令来为这台打印机加载支持:
```
C:\>graphics hpdefault
Running in MS GRAPHICS compatibility mode...
Using HPPCL type for type hpdefault
  If you think this is not correct, mail me (see help text).
Printing black as white and white as black
which internally uses /I of this GRAPHICS.
You can use the following command directly instead of
GRAPHICS [your options] in the future:
LH GRAPH-HP /I
Note that GRAPH-HP allows extra options:
  /E economy mode, /1 use LPT1, /2 use LPT2, /3 use LPT3,
  /R for random instead of ordered dither
  /C for 300dpi instead of 600dpi
Driver to make 'shift PrtScr' key work
even in CGA, EGA, VGA, MCGA graphics
modes loaded, in HP PCL mode.
```
### H 是 HELP
如果你刚刚来到 FreeDOS 的世界，你可以通过输入 `HELP` 来获取如何使用不同命令的提示。这将带来 FreeDOS 的帮助系统，包含所有命令的文档:
![Image of FreeDos help system](/data/attachment/album/202310/12/103017upqlqr0exavgbxex.png)
### I 是 IF
你可以使用 `IF` 语句来将条件语句添加到你的命令行或*批处理文件* 。`IF` 进行一次简短的测试，然后执行一个单个命令。例如，如果存在某个文件，那么打印结果 “It's there”，你可以输入:
```
C:\>if exist kernel.sys echo It's there
It's there
```
如果你想要测试相反的东西，在测试内容前，使用 `NOT` 关键字。例如，如果两个字符串的值不相同，那么打印结果 “Not equal” ，输入这条语句:
```
C:\>if not "a"=="b" echo Not equal
Not equal
```
### J 是 JOIN
早期的 DOS 版本是相当简单的；DOS 的第一个版本甚至不支持目录。为向这些较旧的程序提供向后兼容性，我们需要 `JOIN` 程序来作为一种巧妙的应变方法。`JOIN` 使用驱动器字母代替路径，这样，你可以将旧程序放入其自己的子目录中，但是，使用一个单个驱动器字母来访问它。
让我们假设你有一个名称为 `VC` 的旧应用程序，它不懂目录。为保持 `VC` 的工作，你可以将它的路径  连接   join  到一个驱动器字母。例如:
```
JOIN V: D:\VC
```
FreeDOS 将 `JOIN` 实施为 `SWSUBST`，它也兼备类似 `SUBST` 命令的特色功能。为将 `D:\VC` 路径链接到到一个名称为 `V:` 的驱动器字母，输入:
```
C:\>swsubst v: d:\vc
C:\>dir v:
Volume in drive V is DATA
Volume Serial Number is 212C-1DF8
Directory of V:\
.  02-21-2022 10:35p
..  02-21-2022 10:35p
VC COM 27,520 07-14-2019 4:48p
1 file(s) 27,520 bytes
2 dir(s) 48,306,176 bytes free
```
### K 是 KEYB
DOS 默认采用美式英语键盘布局。你的键盘是不同的，你可以使用 `KEYB` 命令来加载新的键盘语言布局。例如，为为加载一种德语键盘布局，输入:
```
C:\>keyb gr
FreeDOS KEYB 2.01 - (c) Aitor Santamaría Merino - GNU GPL 2.0
Keyboard layout : C:\FREEDOS\BIN\KEYBOARD.SYS:GR [858] (3)
```
### L 是 LABEL
FreeDOS 使用  标签   label  来命名每个软盘驱动器和硬盘驱动器。这些标签提供了一种识别磁盘可能包含内容的方法。当你需要将文件存储到单个不同的软盘上时，`LABEL` 命令是非常有用的，你可以标记一个软盘 “Data”，另一个软盘为 “Games” 。
为分配一个新的标签到一个驱动器。或者更改在一个驱动器上的现存标签。像这样使用标签:
```
D:\>label d: data
D:\>dir /w
Volume in drive D is DATA
Volume Serial Number is 212C-1DF8
Directory of D:\
[123] [ABILITY] [ASEASY] [GAMES2] [QUATTRO]
[SRC] [TEMP] [THE] [VC] [WORD]
[WS400] EDLIN16.EXE EDLIN32.EXE MYENV.BAT
3 file(s) 113,910 bytes
11 dir(s) 48,306,176 bytes free
```
### M 是 MEM
运行程序和加载驱动程序会占用内存。可以查看你的系统有多少内存，以及有多少可用来运行 DOS 程序，使用 `MEM` 命令:
```
C:\>mem
Memory Type Total Used Free
---------------- -------- -------- --------
Conventional 639K 11K 628K
Upper 104K 18K 86K
Reserved 281K 281K 0K
Extended (XMS) 15,224K 537K 14,687K
---------------- -------- -------- --------
Total memory 16,248K 847K 15,401K
Total under 1 MB 743K 29K 714K
Total Expanded (EMS) 8,576K (8,781,824 bytes)
Free Expanded (EMS) 8,192K (8,388,608 bytes)
Largest executable program size 628K (643,104 bytes)
Largest free upper memory block 84K ( 85,728 bytes)
FreeDOS is resident in the high memory area.
```
### N 是 NANSI
如果你想添加一点颜色到 FreeDOS 命令行，你可以使用 ANSI 转义序列。这些序列之所以叫“转义”，是因为每个序列都以代码 33（转义字符 `ESC`）和一个由美国国家标准化协会（ANSI）定义的特殊字符序列为开头。
FreeDOS 通过 `NANSI.SYS` 驱动程序来支持 ANSI 转义序列。随着 `NANSI` 的加载，你的 FreeDOS 控制台将解释 ANSI 转义序列，例如，设置文本颜色。
![Image of Nansi](/data/attachment/album/202310/12/103017hvxf3zrraynrn3sm.png)
### O 是 oZone
FreeDOS 是一款命令行操作系统，但是一些人们更喜欢使用可备选的图形化用户界面。这就是为什么 FreeDOS 的 1.3 发行版包含一些图形化桌面的原因。我喜欢的一款名称为 oZone 的图形化桌面，它提供一种时尚、现代化外观的界面。
![Image of Ozone GUI](/data/attachment/album/202310/12/103017y6gh36h7i66zf4hi.png)
注意，oZone 有一点烦人的错误，可能还需要一些来自外部开发者的关爱。如果你想让 oZone 变得更好，可以下载源文件代码做些贡献。
### P 是 PROMPT
标准的 FreeDOS 命令行提示符会告诉你：你所在文件系统中的位置。当你第一次启动 FreeDOS 时，你的提示符看起来像 `C:\>`, 这意味着 `\`（根）目录在 `C:` 驱动器。`>` 字符表示着你可以在那里输入命令。
在你的提示符中，如果你更喜欢不同的信息，使用 `PROMPT` 目录来更改它。你可以使用一个带有 `$` 的开头的特殊代码来显示不同的信息，例如，`$D` 用于日期、`$T` 用于时间。例如，你可以使用 `$$` 指令来使你的 FreeDOS 命令行看起来像一个 Linux 提示符，来打印一个单个美元符号:
```
C:\>prompt $$
$
```
输入 `PROMPT /?` 来查看一份全部特殊代码的列表。
### Q 是 QBASIC
FreeDOS 实际上没有 QBASIC 。它是针对 MS-DOS 的专有 BASIC 语言环境。作为备选方案，我们提供一些开放源文件的编译器，包括一些针对 BASIC 编程的编译器。
FreeBASIC 编译器可以编译外来的大多数 QBASIC 程序。这里有一个简单的 “猜数” 示例:
```
dim number as integer
dim guess as integer
randomize timer
number = int( 10 * rnd() ) + 1
print "Guess the number from 1 to 10:"
do
input guess
if guess  number then print "Too high"
loop while guess <> number