# Protecting Against Tomorrow's Threats with Machine Learning

## Introduction
- **Machine Learning** is a powerful tool for protecting against future threats.
- This document outlines various methods and features used in machine learning to detect and mitigate malware.

## Leaderboard
- **Public vs. Private**: 
  - Public: Performance on the public dataset.
  - Private: Performance on the private dataset.

## Feature Sets
### First Feature Set
- **Binary Size**
- **Hex Count**
- **String Length Statistics**
- **TLSH (Trend Micro Locality Sensitive Hash)**

### Binary Size
| Category | Avg. Size (bytes) |
|----------|-------------------|
| Ramnit   | 1,482,170         |
| Lollipop | 5,829,530         |
| Kelihos_ver3 | 8,982,630         |
| Vundo    | 1,120,950         |
| Simda    | 4,552,330         |
| Tracur   | 1,801,150         |
| Kelihos_ver1 | 5,051,900         |
| Obfuscator.ACY | 827,118         |
| Gatak    | 2,555,070         |

### Hex Count
- **Count of HEX**: 00, 01, 02, ..., FE, FF, ??
- **257 dimensions**
- **1-gram**

### Hex Count Distribution
- **Visualization of Hex Count Distribution**:
  - Example: 0009121b242d36 3f 48515a636c757e879099a2abb4bdc6 cf d8e1ea f3 fc

### String Stats
- **String**: Printable characters where length > 4
- **Metrics**:
  - String count
  - Average length
  - Maximum length

### TLSH
- **Trend Micro Locality Sensitive Hash**
- **Fuzzy matching for similarity comparison**
- **Voting of Top 5 similar files from training data**

## Additional Features
### More Features
- **HEX n-gram**
- **API Call**
- **Import Table**
- **Instruction Frequency**
- **Domain Knowledge**

### HEX 2-gram/3-gram
- **2-gram**: (256+1)^2 = 66,049
- **3-gram**: (256+1)^3 = 16,974,593

### API Call
- **APIs used in PE**:
  - IsWindow()
  - DispatchMessageA()
  - GetCommandLineA()
  - DllEntryPoint()
  - GetIconInfo()

### Import Table
- **Lookup table for calling functions in other modules**:
  - Examples: KERNEL32.dll, USER32.dll, ADVAPI32.dll, etc.

### Other Info in Import Table
- **Number of distinct DLLs**

### Instruction Frequency
- **Powerful instructions**:
  - imul
  - movzx
  - sbb
  - jnz
  - mov

### Domain Knowledge
- **Segment Information**
- **Packer Information**
- **Other Types of Binaries** (e.g., RAR files, Microsoft Office files)

## Ensemble Methods
- **Linear Blending**: Combining results from several models and voting.

## Winning Team's Work
- **Features**:
  - Instruction n-gram
  - ASM pixel map
- **Tools**:
  - xgboost (Gradient boosting package)

## Conclusion
- **Physical Meaning of Features**:
  - Hex n-gram
  - Opcode + imm/addr
  - Instruction n-gram
  - Opcode

- **Challenges**:
  - New malware families
  - Mis-labelling
  - Mechanisms to mitigate issues

## Trend Micro XGen
- **Trend Micro ML Contest**:
  - Malware Identification Challenge
  - 134 teams, 626 players from 6+ countries
  - Real-time scoring

## Improving the Model
- **Use domain knowledge**
- **Unpack and unzip files**
- **Improve feature representation**
- **Find distinctive features for underperforming classes**
- **Regulate overfitting**
- **Adjust current features**
- **Find new features**
- **Tune algorithm parameters**
- **Use different algorithms**
- **Ensemble/Blending**

## Local Library vs. Cloud Platform
- **Cloud platform considerations**:
  - Glue & Integration
  - Data (pre-)processing
  - Model training/prediction
  - Evaluation
  - Diversity of ML algorithms
  - Parameter tuning

## Thank You

---

This optimized version provides a clear and structured overview of the content, making it more professional and easier to follow.