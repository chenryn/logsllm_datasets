Currently only variables and modules which conflict with aliases give errors,
for example
    module A {
    export var AAA: {VarInt;}
    export interface AAA { IntInt; }
    }
    module MyModule {
      var XXX : { VarExt; } // Highlighted as error - ok
      // module XXX { export var VarExt; } // Also would give an error, but import statement would be highlighted. A little bit inconsisent, but ok
      import XXX = A.AAA;
    }
At the same time, interfaces, classes, enums and functions would not produce
an error. Instead, import aliases with a same name would be silently ignored,
resulting in WTF errors later in the code.
For example:
    module A {
      export var AAA: {VarInt;}
      export interface AAA { IntInt; }
    }
    module MyModuleWithFunction {
      function XXX() {}
      import XXX = A.AAA;
      XXX.VarInt; // WTF error
      XXX.arguments; // No error
    }
    module MyModuleWithClass {
      class XXX { static VarDup; IntDup;}
      import XXX = A.AAA;
      XXX.VarInt; // WTF error
      XXX.VarDup; // No error
      var i: XXX;
      i.IntInt; // WTF error
      i.IntDup; // No error
    }
IMHO, current behavior of silently ignoring duplicate aliases is confusing and
is not described in specifications.