### Reproducing code example:
    import numpy as np
    >>> time_type = data.index.dtype
    >>> time_type
    datetime64[ns, tzfile('PRC')]
    >>> time_type == np.dtype('int32')
    False
    >>> time_type in [1,2,3]
    False
    >>> time_type in {np.dtype('int32')}
    False
    >>> time_type in [np.dtype('int32')]
    Traceback (most recent call last):
      File "", line 1, in 
    TypeError: Cannot interpret 'datetime64[ns, tzfile('PRC')]' as a data type
### NumPy/Python version information:
  * python3.9 pandas1.2.4 numpy 1.19.3（When I upgrade the numpy version, the problem is solved）
> I'd like to know why an exception is thrown when trying to use "in
> List[np.dtype]" judgment in this "special" version, while "in set[np.dtype]"
> or "==" does not cause this problem.