### DUET Controller

The DUET Controller is the central component of the DUET system, performing three key functions:

1. **Datacenter Monitoring:**
   - The controller gathers topology and traffic information from the underlying network.
   - It also receives periodic health status updates for Virtual IP (VIP) addresses from host agents.

2. **DUET Engine:**
   - This module receives VIP-to-Direct IP (DIP) mappings from the network operator.
   - It also receives topology and traffic information from the datacenter monitoring module.
   - The DUET Engine then performs the VIP-switch assignment as described in §4.

3. **Assignment Updater:**
   - This module takes the VIP-switch assignments from the DUET Engine and translates them into rules based on the switch agent interface.

All these modules communicate with each other using RESTful APIs.

### VIP Assignment Algorithm Adjustments

The VIP assignment algorithm requires some modifications to handle Transparent IP (TIP) addresses. Due to space constraints, we omit the details here.

### Testbed Experiments

#### HMux Capacity

**Experiment Setup:**
- 11 VIPs are assigned to SMuxes, with a total traffic of 600K packets per second (60K per VIP).
- Each VIP is announced from every SMux, splitting the traffic evenly among all SMuxes, with each handling 200K packets per second.
- At 100 seconds, the traffic is increased to 1.2M packets per second, so each SMux handles 400K packets per second.
- At 200 seconds, all VIPs are switched to a single HMux hosted on ToR 1.

**Latency Measurement:**
- The latency to the unloaded VIP is measured using pings sent every 3ms.
- The results, shown in Figure 11, indicate that until 100 seconds, the latency is mostly below 1ms, with a few outliers.
- At 100 seconds, the latency increases due to each SMux handling 400K packets per second, which exceeds its capacity.
- At 200 seconds, when all VIPs are on a single HMux, the latency drops back to around 1ms, demonstrating the higher capacity of a single HMux compared to multiple SMuxes.

#### HMux Failure Mitigation

**Experiment Setup:**
- 7 VIPs are assigned to HMuxes, and 3 to SMuxes.
- One switch is failed at 100 milliseconds.
- The impact of HMux failure on VIP availability is monitored by measuring ping latency to all 10 VIPs every 3ms.

**Results:**
- Traffic to VIP3 (on the failed HMux) falls over to an SMux within 38 milliseconds after the failure.
- After 38 milliseconds, pings to VIP3 are successful again.
- VIPs assigned to other HMuxes and SMuxes remain unaffected, with no change in latency during the HMux failure.
- These observations, shown in Figure 12, demonstrate the effectiveness of using SMux as a backstop in the DUET design.

#### VIP Migration

**Experiment Setup:**
- 7 VIPs are assigned to HMuxes, and 3 to SMuxes.
- A VIP is migrated from HMux to SMux (VIP1), from SMux to HMux (VIP2), and from HMux to another HMux through SMux (VIP3) at different times.
- VIP availability is monitored by measuring ping latency every 3ms, and migration delay is also measured.

**Results:**
- The controller initiates the first wave of migration at time T1, which takes about 450ms to complete (time T2).
- The second wave of migration starts at time T2 and takes about 400ms to take effect (time T3).
- All three VIPs remain fully available during the migration process, with a slight increase in latency when they are on SMux due to software processing.
- Figure 13 shows the ping latency during the migration process, and Figure 14 breaks down the migration delay components.

### Switch Agent, Host Agent, and SMux

- **Switch Agent:**
  - Runs on every switch, using vendor-specific APIs to program ECMP and tunneling tables.
  - Provides RESTful APIs for the assignment updater to add/remove VIP-DIP mappings.
  - Fires BGP updates on every VIP change.

- **Host Agent and SMux:**
  - Implementation is the same as in Ananta.
  - The host agent primarily performs packet decapsulation, SNAT, and DIP health monitoring.
  - Additionally, it performs traffic metering and reports statistics to the DUET controller.
  - A BGP speaker runs alongside each SMux to advertise all VIPs assigned to it.

- **Codebase:**
  - The controller code consists of 4200 lines of C#.
  - The switch agent code has about 300 lines of Python.

### Testbed Description

- **Testbed (Figure 10):**
  - Consists of 10 Broadcom-based switches and 60 servers.
  - 34 servers act as DIPs, and the others generate traffic.
  - Each of ToRs 1, 2, and 3 is connected to a server acting as SMux.

### Evaluation

#### Simulation Setup

- **Network:**
  - Simulated network resembles a production datacenter with a FatTree topology.
  - Connects 50k servers to 1600 ToRs in 40 containers.
  - Each container has 40 ToRs and 4 Agg switches, connected by 40 Core switches.
  - Link and switch memory capacities are set to values observed in production datacenters.

- **Workload:**
  - Uses a traffic trace from a production datacenter, consisting of 30K VIPs.
  - The trace is divided into 10-minute intervals, and VIP assignments are calculated based on the traffic demand matrix, topology, and forwarding tables.

#### SMux Reduction

- **Comparison:**
  - DUET requires far fewer SMuxes than Ananta to load balance the same amount of traffic.
  - For SMux capacities of 3.6Gbps and 10Gbps, DUET needs 12-24x and 8-12x fewer SMuxes, respectively.
  - Most SMuxes needed by DUET are for handling failures, with a small fraction for unassigned VIPs.

#### Latency vs. SMuxes

- **Trade-off:**
  - Holding the traffic volume constant, Ananta needs 15,000 SMuxes to achieve latency comparable to DUET, which uses only 230 SMuxes.
  - Median latency for Ananta with 230 SMuxes is over 6 ms, while DUET achieves 474 µsec.

#### DUET vs. Random

- **Performance Comparison:**
  - DUET is compared against a random strategy (Random) that selects the first feasible switch without violating link or switch memory capacity.
  - Random results in 120%–307% more SMuxes compared to DUET, showing the efficiency of DUET's resource utilization.

#### Impact of Failures

- **Failure Scenarios:**
  - DUET is evaluated under various failure scenarios, including entire container failure and random switch failures.
  - The number of SMuxes is provisioned to handle the maximum traffic under these failure conditions.

### Figures

- **Figure 10:** Our testbed setup.
- **Figure 11:** HMux has higher capacity.
- **Figure 12:** VIP availability during failure.
- **Figure 13:** VIP availability during migration.
- **Figure 14:** Latency breakdown.
- **Figure 15:** Traffic and DIP distribution.
- **Figure 16:** Number of SMuxes used in DUET and Ananta.
- **Figure 17:** Latency (microseconds) vs. number of SMuxes in Ananta and DUET.
- **Figure 18:** Number of SMuxes used by DUET and Random.
- **Figure 19:** Impact of failures on max. link utilization.