text extraction attack currently requires a known background
and a large 175pt font. Finally, we note that our website
classiﬁcation experiments assumes the simple case of a user
statically viewing a webpage. We leave the task of achieving
website classiﬁcation in the presence of user interaction (such
as active scrolling) as future work.
Granularity. Our attacks detected information at a a coarser
resolution than individual pixels. Indeed, the requisite band-
width for detecting individual pixels seems to far exceed the
acoustic transmission properties of air (modern screens render
pixels at a rate of over 100 MHz, whereas above a few hundred
kHz sound propagation in the air has too short a range due to
attenuation and distortion effects).
This affects the type of screen contents that can be distin-
guished. For example, our text extraction (Section V) works
on large fonts. Similarly, we show that on-screen keyboard
snooping (Section IV-B) is more accurate in portrait orienta-
tion, where coarse pixel line granularity sufﬁces.
Attacker sample rate.
In Sections IV-B through VI-A,
we exploit a carrier signal at 32 kHz. To carry out
these
attacks, the attacker’s sample rate must be at least 64 kHz
(due to the Nyquist
limit, and assuming that aliasing is
eliminated by hardware ﬁlters). While modern commodity
hardware often samples at 96 kHz (as we demonstrated in
Sections III-B, IV-B, VI-A using a mobile phone), low-end
attackers recording at lower rates might be limited to the
remote attacks demonstrated in Section VI-B.
Accuracy depends on microphone distance and screen
model. The leakage signal quality and extractability varies
greatly with the microphones’ proximity to the screen (see
Figure III.2), as well as screen makes and models (see Fig-
ure II.3). However, as we show, even relatively noisy signals
acquired at-distance (Section VI-A), or signals passed through
a lossy codec (Section VI-B), can be used to mount an attack.
Deterioration of the underlying signal with distance is analyzed
in Appendix D.
IX. MITIGATIONS
Elimination. An obvious remedy to such leakage is for
computer screen manufacturers to more carefully evaluate
their designs, to minimize “coil whine” and similar electronic
component vibrations within screen circuitry (cf. [22]). The
ubiquity of leakage, across manufacturers and models (Fig-
ures II.3, III.2, III.3 demonstrate leakage in Dell, Soyo, Apple,
Philips, HQ, BenQ, and Samsung; attacks were simulated on
various Dell and Soyo screens in Sections IV through VII),
suggests that this may be difﬁcult or costly.
Masking. Acoustic noise generators can be used to mask
the signal, at a cost in design, manufacturing, and ergonomic
disruption (some of the exploitable signal
lies within the
human-audible frequency range). The masking ought to have
adequate energy and spectrum coverage to reduce signal-to-
noise by orders of magnitude, because the leakage signal is
retransmitted 60 times per second, offering high redundancy.
Shielding. Acoustic shielding of screens may reduce the
leakage amplitude, but is difﬁcult to achieve while keeping
adequate air circulation for cooling. For microphones built into
screens, a sound-absorbing barrier may reduce microphone
pickup of internally-generated sounds (but would not affect
external microphones). In the case of some screens or micro-
phones in which there is an electromagnetic contribution to
the leakage (see Section II-B), corresponding shielding would
also be desirable—and, typically, expensive.
Software mitigations. A more promising approach to miti-
gating the attacks presented in this paper are software counter-
measures. More speciﬁcally, variations on software mitigations
to the EM Tempest attack, which change on-screen content to
mask the leakage, such as font ﬁltering [34], can be considered.
Moreover, because our extraction attacks use mainly aggregate
horizontal intensity of pixel lines, while mostly losing the
information inside individual lines, fonts can be changed such
that all letters project the same horizontal intensity. Finally, our
attacks all heavily rely on neural network classiﬁers which,
themselves are vulnerable to inputs speciﬁcally crafted to
mislead them [23], [46].
X. CONCLUSION
We report a new physical side-channel
leak: acoustic
leakage of screen content. We suggest powerful attacks that
extract highly precise information, such as on-screen text and
on-screen keyboard presses. We posit
this leakage is
uniquely dangerous because even weak attackers, that only
receive encoded audio traces from legitimate communication
channels, as well as a attackers with no access to the victim’s
physical screen, can exploit it.
that
We demonstrate this by successfully simulating highly
precise content extraction and identiﬁcation attacks across an
array of setups, as well as a simple, but well motivated, attack
scenario: exploiting an open Hangouts connection to deduce
what on-screen activity a party to the call is involved in.
This is the ﬁrst demonstrated attack using codec-encoded
acoustic emanations from non-mechanical peripherals, for
which users don’t have a reason to suspect acoustic leakage
would even exist.
ACKNOWLEDGMENTS
Roei Schuster and Eran Tromer are members of the
Check Point Institute for Information Security. This work was
supported by the Blavatnik Interdisciplinary Cyber Research
Center (ICRC); by the Check Point Institute for Information
Security; by the Defense Advanced Research Project Agency
(DARPA) and Army Research Ofﬁce (ARO) under Contract
#W911NF-15-C-0236; by the Israeli Ministry of Science and
Technology; by the Leona M. & Harry B. Helmsley Charitable
Trust; by NSF awards #CNS-1445424 and #CCF-1423306;
by the 2017-2018 Rothschild Postdoctoral Fellowship; and a
gift from Intel. Any opinions, ﬁndings, and conclusions or
recommendations expressed are those of the authors and do
not necessarily reﬂect the views of ARO, DARPA, NSF, the
U.S. Government or other sponsors.
866
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:47:34 UTC from IEEE Xplore.  Restrictions apply. 
REFERENCES
[1] R. J. Anderson, Security Engineering — A Guide to Building Depend-
able Distributed Systems (2nd ed.). Wiley, 2008.
[2] D. Asonov and R. Agrawal, “Keyboard acoustic emanations,” in IEEE
Symposium on Security and Privacy 2004.
[3] ——, “Keyboard acoustic emanations,” in IEEE Symposium on Security
and Privacy 2004.
[4] M. Backes, M. Dürmuth, S. Gerling, M. Pinkal, and C. Sporleder,
“Acoustic side-channel attacks on printers,” in USENIX Security Sym-
posium 2010.
[5] D. Balzarotti, M. Cova, and G. Vigna, “Clearshot: Eavesdropping on
keyboard input from video,” in IEEE Symposium on Security and
Privacy 2008.
[6] P. Belgarric, P.-A. Fouque, G. Macario-Rat, and M. Tibouchi, “Side-
channel analysis of Weierstrass and Koblitz curve ECDSA on Android
smartphones,” in RSA Conference Cryptographers’ Track (CT-RSA)
2016.
[7] Y. Berger, A. Wool, and A. Yeredor, “Dictionary attacks using keyboard
acoustic emanations,” in ACM Conference on Computer and Commu-
nications Security (CCS) 2006.
[8] B. B. Brumley and N. Tuveri, “Remote timing attacks are still practical,”
in European Symposium on Research in Computer Security (ESORICS)
2011.
[9] D. Brumley and D. Boneh, “Remote timing attacks are practical,”
Computer Networks, vol. 48, no. 5, pp. 701–716, 2005.
[10] X. Cai, X. C. Zhang, B. Joshi, and R. Johnson, “Touching from a dis-
tance: Website ﬁngerprinting attacks and defenses,” in ACM Conference
on Computer and Communications Security (CCS) 2012.
[11] R. Callan, A. Zaji´c, and M. Prvulovic, “Fase: Finding amplitude-
modulated side-channel emanations,” in ISCA 2015.
[12] S. S. Clark, H. Mustafa, B. Ransford, J. Sorber, K. Fu, and W. Xu,
“Current events: Identifying webpages by tapping the electrical outlet,”
in European Symposium on Research in Computer Security (ESORICS)
2013.
[13] S. S. Clark, B. Ransford, A. Rahmati, S. Guineau, J. Sorber, W. Xu,
K. Fu, A. Rahmati, M. Salajegheh, D. Holcomb et al., “Wattsupdoc:
Power side channels to nonintrusively discover untargeted malware on
embedded medical devices.” in HealthTech 2013.
[14] A. Compagno, M. Conti, D. Lain, and G. Tsudik, “Don’t skype &
type!: Acoustic eavesdropping in voice-over-ip,” in ACM Symposium
on Information, Computer and Communications Security (ASIACCS)
2017.
[15] W. V. Eck, “Electromagnetic radiation from video display units: An
eavesdropping risk?” Computers & Security, vol. 4, pp. 269–286, 1985.
[16] M. Enev, S. Gupta, T. Kohno, and S. N. Patel, “Televisions, video pri-
vacy, and powerline electromagnetic interference,” in ACM Conference
on Computer and Communications Security (CCS) 2011.
[17] A. P. Felt, E. Ha, S. Egelman, A. Haney, E. Chin, and D. Wagner,
“Android permissions: User attention, comprehension, and behavior,”
in IEEE Symposium on Security and Privacy 2012.
[18] K. Gandolﬁ, C. Mourtel, and F. Olivier, “Electromagnetic analysis:
concrete results,” in CHES 2001.
[19] D. Genkin, L. Pachmanov, I. Pipman, A. Shamir, and E. Tromer,
“Physical key extraction attacks on PCs,” Communications of the ACM,
vol. 59, no. 6, pp. 70–79, 2016.
[20] D. Genkin, L. Pachmanov, I. Pipman, E. Tromer, and Y. Yarom,
“ECDSA key extraction from mobile devices via nonintrusive physical
side channels,” in ACM Conference on Computer and Communications
Security (CCS) 2016.
[21] D. Genkin, I. Pipman, and E. Tromer, “Get your hands off my laptop:
Physical side-channel key-extraction attacks on pcs,” in Cryptology
ePrint Archive, Report 2014/626.
[22] D. Genkin, A. Shamir, and E. Tromer, “RSA key extraction via low-
bandwidth acoustic cryptanalysis,” in CRYPTO 2014.
I. J. Goodfellow, J. Shlens, and C. Szegedy, “Explaining and harnessing
adversarial examples,” arXiv preprint arXiv:1412.6572, 2014.
[23]
[24] S. Hahn, Hilbert transforms in signal processing, ser. Artech House
Signal Processing Library. Artech House, 1996.
867
[25] T. Halevi and N. Saxena, “A closer look at keyboard acoustic em-
anations: random passwords, typing styles and decoding techniques,”
in ACM Symposium on Information, Computer and Communications
Security (ASIACCS) 2012.
[26] ——, “Keyboard acoustic side channel attacks: exploring realistic
and security-sensitive scenarios,” International Journal of Information
Security, vol. 14, no. 5, pp. 443–456, 2015.
[27] M. Juarez, S. Afroz, G. Acar, C. Diaz, and R. Greenstadt, “A critical
evaluation of website ﬁngerprinting attacks,” in ACM Conference on
Computer and Communications Security (CCS) 2014.
[28] P. Kocher, J. Jaffe, and B. Jun, “Differential power analysis,” in
CRYPTO 1999.
[29] P. Kocher, J. Jaffe, B. Jun, and P. Rohatgi, “Introduction to differential
power analysis,” Journal of Cryptographic Engineering, vol. 1, no. 1,
pp. 5–27, 2011.
[30] P. C. Kocher, “Timing attacks on implementations of difﬁe-hellman,
RSA, DSS, and other systems,” in CRYPTO 1996.
[31] M. Kosinski, Y. Bachrach, P. Kohli, D. Stillwell, and T. Graepel,
“Manifestations of user personality in website choice and behaviour
on online social networks,” Machine Learning, vol. 95, no. 3, pp. 357–
380, 2014.
[32] M. G. Kuhn, “Electromagnetic eavesdropping risks of ﬂat-panel dis-
plays,” in International Symposium on Privacy Enhancing Technologies
Symposium (PETS) 2004.
[33] ——, “Compromising emanations: eavesdropping risks of computer
displays,” University of Cambridge, Computer Laboratory, Tech. Rep.
UCAM-CL-TR-577, Dec. 2003, Ph.D.
[Online]. Available:
http://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-577.pdf
thesis.
[34] M. G. Kuhn and R. J. Anderson, “Soft tempest: Hidden data transmis-
sion using electromagnetic emanations,” in International Workshop on
Information Hiding 1998.
J. Liu, Y. Wang, G. Kar, Y. Chen, J. Yang, and M. Gruteser, “Snooping
keystrokes with mm-level audio ranging on a single phone,” in Interna-
tional Conference on Mobile Computing and Networking (MobiCom)
2015.
[35]
[36] S. Mangard, E. Oswald, and T. Popp, Power Analysis Attacks —
Revealing the Secrets of Smart Cards. Springer, 2007.
[37] Moz, “The moz top 500,” https://moz.com/top500, accessed: Oct 23,
2017.
[38] National Security Agency, “NACSIM 5000: TEMPEST fundamentals,”
in Cryptome.
[39] D. Norman, “1000 common english words,” https://gist.github.com/de
ekayen/4148741, accessed: Jan 2018.
[40] A. Panchenko, F. Lanze, J. Pennekamp, T. Engel, A. Zinnen, M. Henze,
and K. Wehrle, “Website ﬁngerprinting at internet scale.” in Network
and Distributed System Security Symposium (NDSS) 2016.
J.-J. Quisquater and D. Samyde, “Electromagnetic analysis (EMA):
Measures and counter-measures for smart cards.” in Smart Card Pro-
gramming and Security 2001.
[41]
[42] R. Schuster, V. Shmatikov, and E. Tromer, “Beauty and the burst:
Remote identiﬁcation of encrypted video streams,” in USENIX Security
Symposium 2017.
[43] R. Schuster and E. Tromer, “DroidDisintegrator: Intra-application in-
formation ﬂow control
in android apps,” in ACM Symposium on
Information, Computer and Communications Security (ASIACCS) 2016.
[44] StereoMatch, “Amazing MP3 recorder,” https://play.google.com/stor
e/apps/details?id=com.stereomatch.mp3.audio.recorder, accessed: Jan
2018.
[45] Y. Su, D. Genkin, D. Ranasinghe, and Y. Yarom, “Usb snooping made
easy: Crosstalk leakage attacks on usb hubs,” in USENIX Security
Symposium 2017.
[46] C. Szegedy, W. Zaremba, I. Sutskever, J. Bruna, D. Erhan, I. Goodfel-
low, and R. Fergus, “Intriguing properties of neural networks,” arXiv
preprint arXiv:1312.6199, 2013.
[47] U. Today, “How to listen to what Amazon Alexa has recorded in your
home,”
https://www.usatoday.com/story/tech/talkingtech/2018/05/28/
how-listen-what-amazon-alexa-has-recorded-your-home/649814002/,
2018.
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:47:34 UTC from IEEE Xplore.  Restrictions apply. 
[48] M. Vuagnoux and S. Pasini, “Compromising electromagnetic emana-
tions of wired and wireless keyboards.” in USENIX Security Symposium
2009.
[49] N. Webster, “Webster’s unabridged dictionary,” http://www.gutenberg.
org/ebooks/29765, accessed: Jan 2018.
[50] Wikipedia, “Convolutional neural network,” https://en.wikipedia.org/w
iki/Convolutional_neural_network, accessed: Jan 2018.
[51] L. Zhuang, F. Zhou, and J. D. Tygar, “Keyboard acoustic emanations
revisited,” ACM Transactions on Information and System Security
(TISSEC), vol. 13, no. 1, p. 3, 2009.
A. Our trace chunking algorithm
APPENDIX
1) Algorithm in detail: The algorithm ﬁrst
initiates an
empty collection of chunks. Then, it searches for the ﬁrst two
consecutive chunks whose sizes are in G, and their correlation8
is higher than the threshold. It sets one of these chunks to be
the ﬁrst, master chunk, and adds it to the collection.
Then, starting from the position after the added chunk,
it searches a size ∈ G for the next chunk such that the