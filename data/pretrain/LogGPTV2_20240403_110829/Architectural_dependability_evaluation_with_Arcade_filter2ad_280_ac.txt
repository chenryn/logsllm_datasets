Q=ailed-pri~ary?~activate_spare!
~
failed-primary? ~
up_pnmary~
deactivate_spare!----O-up-primary?
Figure 8. The SMU I/O·IMC model.
(1) COMPONENT: Name
(2) OPERATIONAL MODES: List of OM groups
(3) ACCESSIBLE-TO-INACCESSIBLE: AND/OR expr.
(4) INACCESSIBLE MEANS DOWN: YES or NO
(5) ON-TO-OFF: AND/OR expression
(6) NORMAL-TO-DEGRADED: AND/OR expr.
,exp(Am )
(7) TIME-TO-FAILURES: exp(Al), exp(A2),
(8) FAILURE MODE PROBABILITIES: Prob 1 ,
, Prob n
(9) TIME-TO-REPAIRS: exp(/-ll) , ... ,exp(/-ln), exp(/-ldj)
(10) DESTRUCTIVE FDEP: AND/OR expression
Line (1) defines the unique name of the BC. Line (2)
defines the OM groups of the component. At this point, the
BC syntax is
imitedwith respect to the restriction we have
on the OM roups that are avai ab eto the user. Each 0
line (3), (5), and (6) defines an expression which tells us
when exact ya mode switch occurs, e.., i
the AND/OR
switch eva mtes to true, then the
expression or an on/o
BC switches 10m'on' to '0 '. I
aterthe eva uation 0 the
expression chan es to a sethe BC switches bac to'on' .
The mode switches 0 a component Yare expressed in
terms 0
the ai ue modes 0 other components. A sim(cid:173)
cr Y ON-TO-OFF:
p e examp e wou d be i we have
X.down, then this means that Y switches 10m mode 'on'
'upon the ai tre 0 X. Moreover, it is a soim(cid:173)
to mode' 0
p icitthat Y switches bac to its 'on' mode upon the repair
oX. The active/inactive mode transitions are hand «l by
an SMU throu h the activate and deactivate si na s.
Line (4), specifies if the inaccessibility of the BC is seen
as a ai ue by the environment (c.
. Section 3.1.1). Line (7)
defines the time-to-failure distribution for each operational
state9 (e.., in Fi
. 5, the BC has our operationa states,
there ore the user needs to provide our distributions). Line
ties correspondin to n a tre
(8) defines the n probabi
modes. Line (9) defines the time-to-repair distributions for
the n a tre modes and the distribution associated
each 0
¥ he (10)
to the destructive unctiona dependency. Fina
specifies the condition under which the BC fails due to a
destructive unctiona dependency.
All the distributions defined in lines (7) and (9) can, in
enera ,be any phase-type distribution (see an examp ein
Section 5).
9The order in which the OM groups are listed determines which dis(cid:173)
tribution matches which operational state. The same goes for the repair
distributions w.r.t. failure modes.
1-4244-2398-9/08/$20.00 ©20081EEE
517
DSN 2008: Boudali et al.
International Conference on Dependable Systems & Networks: Anchorage, Alaska, June 24-27 2008
3.5.2 RU syntax
(1) RU: Name
(2) COMPONENTS: comp!, comp2, ... , compn
(3) STRATEGY: Dedicated I FeF3 I PP I PNP
(4) PRIORITIES: prl, pr2, ... , prn
Line (2)
i~s a the n component names that are repairab e
by the unit. The RU I/O-IMC mode varies dependin on
the components (c . Sec(cid:173)
the number 0
tion 3.2). Line (3) specifies the repair policy. Line (4) de(cid:173)
fines the priority values (i.e., non-zero integer) of the vari(cid:173)
ous components in case 0 a P P or a PNP repair strate y.
ai uremodes 0
3.5.3 SMU syntax
(1) SMU: Name
(2) COMPONENTS: primary, sp 1, ... , sp n
Line (2) defines a primary component and n possib espare
components or that primary.
3.5.4 System failure evaluation syntax
(1) SYSTEM DOWN: AND/OR expression
I
Line (1) defines the condition under which the system is
a ed (c. Section 3.4 or more detai s) The e ementaty
conditions under which the system a s, are expressed in
terms of the failure modes that are defined for the compo(cid:173)
or a component more than one a rre mode is
nent.
defined, then the user has to specify the failure mode that
is re want orthe system ai ue eva uation. For examp e,
component X has two ai u~ modes, and mode 2 is re want
or the eva wtion, then the user writes X.down.m2 to state
that mode 2 is the re arant ai u~ mode. I there is on yone
a rre mode, we can simp ywrite X.down.
(1) SMU: Name
(2) COMPONENTS: primary, sp 1
(3) FAILOVER-TIME: exp(6)
Secondly, the 1/0-IMC model has to be defined (Fig. 9),
the semantic mode 0 an SMU
which is an extension 0
(Fi
.8).
4 System dependability evaluation
To eva uate Arcade mode s, we use a three step ap(cid:173)
the CADP
simi ar to the one in [5], usin
proach,
too set[II].
First, we translate (according to the models defined in
Section 3) a basic components, spare mana ement units,
repair units, and system a rre eva uation mode sinto their
under)in 1/0-IMCs. This trans ation step has not been
automated yet.
0 wed by an a
ycomposes (usin the we
The second step is to combine these mode sto obtain the
system mode . To this end, we use the Composer
overa
too [5], which incrementa
defined parallel composition operator) the I/O-IMC models.
Each composition step is
re ation (Le.,
state minimization or reduction) step. The order in which
the I/O-IMC mode sare composed is iven by the user. This
compositiona a
re ation approach has proved to be cru(cid:173)
cia in a ariatin the state-space exp CBion prob tlll. The
el/O-IMC, mode (cid:173)
output 0
in the entire system. This 1/0-IMC has two output si na s:
failed! to denote the ai ue and up! or the restoration 0 the
system. Our Composer too ,which uses the CADP too set,
u
)automates the composition and a
the Composer too is a sin
re ation steps.
In a third step, we convert this system I/O-IMC into a
abe
e<CTMC on which standard CTMC so ttion tech(cid:173)
niques to compute avai abi ityand re iabi itycan be per(cid:173)
ormed. This step has been automated, usin the CADP
too set
3.6 Extensibility
5 Case studies
Arcade is extensib ein the sense that it is easy to incor(cid:173)
porate new or additiona dependabi ityconstructs the user
may thin are important <r hislher needs. A that has to be
done is to provide the syntax, i.e., the Arcade specification
o that additiona construct, and its semantics in terms 0
an I/O-IMC mode. State space eneration, reduction and
ana ysisdo not have to be chan ed at a
v t
the time it
ta es or an SMU to detect the primary a rre and activate
the spare component is exponentia
)distributed rather than
instantaneous) can be added to the ramewor
in the 0-
(Win way: First, Arcade's syntax is extended (here <r an
SMU with one primary and one spare):
As an examp e, a simp e
(i.e.
.
To demonstrate the easibi ity and usabi ity 0 Arcade,
we address two case studies rom the
In Sec(cid:173)
tion 5.1 we ana yzea distributed database system (DDS),
ittrature.
~ailed_pri~ary?--o--&--0activate_spare!
~
failed_primary? ~
upJ)r1mary------r
deactivate_sparel-6-up...primary?
Figure 9. The SMU I/O-IMC model with
failover time.
1-4244-2398-9/08/$20.00 ©2008 IEEE
518
DSN 2008: Boudali et al.
(cid:173)
International Conference on Dependable Systems &Networks: Anchorage, Alaska, June 24-27 2008
which was eva uatedin [19] usin SANs. In Section 5.2,
we ana yzea coo in system 0 a nuc tar reactor, which was
eva mted in [7] usin eFTs.
5.1 Distributed database architecture
ou" dis s. Each contro
two processors, one 0 which is
This system consists 0
a spare; our dis contro
er$divided into two sets; and 24
hard dis s, divided in 6 c ustelS, Le., each c lEter consist(cid:173)
e is responsib e or three
in 0
the twe vedis s, which the con(cid:173)
dis c lEters, and each 0
elSet is responsib e or, is accessib eby any 0 the two
tro
ersn the respective set. Furthermore, each proces(cid:173)
contro
sor can access each 0
~. The pro(cid:173)
cessors are administrated by a spare mana ement unit and
eJSet and dis
share one repair unit. For each dis contro
custer there is a separate repair unit responsib e. A re(cid:173)
pair units choose the next item to be repaired accordin to a
FCFS repair strate y.
the our dis
contro
(at
the
The system is down, i
0 win
conditions is met: (1) a processors are down, or (2) in at
eastone contro
ens operationa ,or (3)
more than one dis
elSet, no contro
in a c usteris down.
east) one 0
5.1.1 Arcade model
The Arcade mode s or the components 0 the DDS system
are air ysimp e Most components have no distin uished
OMs, except the spare processor which has OM roup (n
ct v, ct v ) I there are no specia OMs to be considered,
the ire OPERATIONAL MODES can be omitted.
1. Arcade mode 0 processors:
(a) Primary processor
COMPONENT: pp
TIME-TO-FAILURE: exp( 20~0 )
TIME-TO-REPAIR: exp(l)
contro ~ (dc_i, i == 1, ... ,4) and the
The dis
dis s (d_j, j == 1, ... ,24) have the same Arcade
mode, except
erent time-to- ai urein
case 0
1
the dis s, which is exp( 60
00).
cr a di
(b) Spare processor:
COMPONENT: ps
OPERATIONAL MODES: (inactive, active)
1
1
00)' exp( 20
TIME-TO-FAILURE: exp( 20
00)
TIME-To-REPAIR: exp(l)
2. Arcade mode 0 processors' repair unit:
REPAIR UNIT: p.rep
COMPONENTS: pp,ps
REPAIR STRATEGY: FeF3
3. The Arcade mode
iven by the au t tree description 0
conditions:
cr the system eva uationcriteria is
the system ai ue
SYSTEM DOWN
(pp.down 1\ ps.down)
V(dc_l.down 1\ dc_2 .down)
V(dc_3.down 1\ dc_4.down)
V(2
V... V ((2 4 d_21.down, ... ,d_24.down)
4 d_l.down, ... , d_4.down)
((2 4 d_l.down, ... , d_4.down) is a 2-out-o -4 ai
ure amon d_l, d_2, d_3, and d_4 10 •
.1.2
nal sis
ener(cid:173)
Usin the methodo 0 y described in Section 4 we
the DDS. This
ated the CTMC representin the behavior 0
CTMC has 2,100 states and 15,120 transitions. Durin the
this mode ,the a- est 1/0-IMC encountered
eneration 0
had 6,522 states and 33,486 transitions. For comparison,
the final model generated in [19] had 16,695 states.
it)(A) and re iabi
Usin the overa CTMC we can ana yze the steady(cid:173)
it)(R(t)) 0 the distributed
state avai abi
database system. Tab e 1 shows the resu ts 0
this ana y(cid:173)