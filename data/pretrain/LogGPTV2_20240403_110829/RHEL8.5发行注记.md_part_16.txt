:   通过此参数，您可以测量加速宽限期原语的性能。
[rcuscale.holdoff = \[KNL\]]{.term}
:   使用这个参数，您可以设置 test-start Holoff
    周期。此参数的目的是将测试的开始延迟到启动完成，以避免干扰。
[rcuscale.kfree_rcu_test = \[KNL\]]{.term}
:   通过这个参数，您可以测量 `kfree_rcu（）`{.literal} 填充的性能。
[rcuscale.kfree_nthreads = \[KNL\]]{.term}
:   使用这个参数，您可以指定 `kfree_rcu（）`{.literal}
    函数运行循环的线程数量。
[rcuscale.kfree_alloc_num = \[KNL\]]{.term}
:   使用这个参数，您可以指定分配数量并在迭代中释放。
[rcuscale.kfree_loops = \[KNL\]]{.term}
:   使用这个参数，您可以指定 `rcuscale.kfree_alloc_num`{.literal}
    分配和释放的循环数量。
[rcuscale.nreaders = \[KNL\]]{.term}
:   使用这个参数，您可以设置 Read-copy-update(RCU)读取器的数量。
    值 -1 选择 N，其中 N 是 CPU 的数量。
[rcuscale.nwriters = \[KNL\]]{.term}
:   使用这个参数，您可以设置 Read-copy-update(RCU)作者数量。
    值的工作方式与 `rcuscale.nreaders=N`{.literal} 相同，其中 N 是 CPU
    的数量。
[rcuscale.perf_type = \[KNL\]]{.term}
:   使用这个参数，您可以指定要测试的 Read-copy-update(RCU)实现。
[rcuscale.shutdown = \[KNL\]]{.term}
:   使用这个参数，您可以在性能测试完成后关闭系统。这对实机自动测试非常有用。
[rcuscale.verbose = \[KNL\]]{.term}
:   使用这个参数，您可以启用额外的 `printk（）`{.literal} 语句。
[rcuscale.writer_holdoff = \[KNL\]]{.term}
:   使用这个参数，您可以以微秒为单位在宽限期间进行写操作。
    默认值为零，表示\"无暂停\"。
[安全性 = \[SECURITY\]]{.term}
:   使用这个参数，您可以选择要在启动时启用的一个传统的\"major\"安全模块。
    这已被 `lsm`{.literal} 参数弃用。
[split_lock_detect = \[X86\]]{.term}
:   使用这个参数，您可以启用分割锁定检测或总线锁定检测。
    启用后，如果存在硬件支持，则通过原子指令访问缓存线之间的数据将产生：
    ::: itemizedlist
    -   分割锁定检测的校对检查异常
    -   总线锁定检测的 debug 异常
        可能的值：
    -   `off`{.literal} - 不启用此功能
    -   `warn`{.literal} - 内核发送有关应用程序的速率限制警告，并触发
        #AC 异常或 #DB 异常。这个模式是支持分割锁定检测或总线锁定检测的
        CPU 的默认模式。如果在硬件中启用了两个功能，则默认行为是 #AC。
    -   `fatal`{.literal} - 内核向触发 #AC 异常或 #DB 异常的应用程序发送
        `SIGBUS`{.literal}
        信号。如果在硬件中启用了两个功能，则默认行为是 #AC。
    -   `ratelimit:N`{.literal} -
        为总线锁定检测将系统宽速率限制设置为每秒 N 总线锁(0 \ 0 时才会触发总线锁定的 #DB 异常。
    :::
[usb-storage.quirks =]{.term}
:   k = NO_SAME（请勿使用 `WRITE_SAME`{.literal}，仅 UAS）
:::
:::
[]{#device_drivers.html}
::: chapter
::: titlepage
# []{#device_drivers.html#device_drivers}第 6 章 设备驱动程序 {.title}
:::
::: section
::: titlepage
# []{#device_drivers.html#new_drivers}新驱动程序 {.title}
:::
### []{#device_drivers.html#_network_drivers}网络驱动程序
::: itemizedlist
-   SYNOPSYS DESIGNWARE Ethernet XPCS 驱动程序(pcs-xpcs.ko.xz)
-   INTEL 10/100/1000 Ethernet PCI driver(dwmac-intel.ko.xz)
-   STMMAC 10/100/1000 以太网设备驱动程序(stmmac.ko.xz)
-   Chelsio Terminator 卡的加密 IPSEC。(ch_ipsec.ko.xz)：1.0.0.
-   Chelsio NIC TLS ULD driver(ch_ktls.ko.xz)：1.0.0.
-   Microsoft Azure Network Adapter driver(mana.ko.xz)
-   Qualcomm Atheros 802.11ax 无线 LAN 卡的核心模块(ath11k.ko.xz)
-   对 Qualcomm Technologies 802.11ax WLAN PCIe
    设备的驱动程序支持(ath11k_pci.ko.xz)
-   MAC 到可选 PHY 连接(phylink.ko.xz)
:::
### []{#device_drivers.html#_graphics_drivers_and_miscellaneous_drivers}图形驱动程序和各种驱动程序
::: itemizedlist
-   使用 In-Band ECC(igen6_edac.ko.xz)为 Intel 客户端 SoC 的 MC Driver
-   Regmap SoundWire MBQ Module (regmap-sdw-mbq.ko.xz)
-   Intel Platform Monitoring Technology PMT driver(intel_pmt.ko.xz)
-   Intel PMT Crashlog driver(intel_pmt_crashlog.ko.xz)
-   UV 系统的 sysfs 结构(uv_sysfs.ko.xz)
-   Intel PMT Telemetry 驱动程序(intel_pmt_telemetry.ko.xz)
-   Intel PMT Class driver(intel_pmt_class.ko.xz)
-   AMD PMC Driver (amd-pmc.ko.xz)
-   MHI Host Interface(mhi.ko.xz)
-   modem Host Interface(MHI)PCI controller
    driver(mhi_pci_generic.ko.xz)
-   块设备的 VDPA Device Simulator(vdpa_sim_blk.ko.xz)：0.1
-   用于网络设备的 VDPA Device Simulator(vdpa_sim_net.ko.xz)：0.1
-   vp-vdpa (vp_vdpa.ko.xz):1
-   Mellanox VDPA driver(mlx5_vdpa.ko.xz)
-   基本 STM 框架协议驱动程序(stm_p\_basic.ko.xz)
-   MIPI SyS-T STM framing 协议驱动程序(stm_p\_sys-t.ko.xz)
-   QMI encoder/decoder helper(qmi_helpers.ko.xz)
-   ACPI DPTF 平台电源驱动程序(dptf_power.ko.xz)
-   ACPI Platform profile sysfs 接口(platform_profile.ko.xz)
-   Intel Emmitsburg PCH pinctrl/GPIO 驱动程序(pinctrl-emmitsburg.ko.xz)
-   Intel Alder Lake PCH pinctrl/GPIO driver(pinctrl-alderlake.ko.xz)
-   MPI3 Storage Controller Device Driver(mpi3mr.ko.xz)：00.255.45.01
-   根据 CPU IO 选择路径的 device-mapper
    多路径路径选择器(dm-io-affinity.ko.xz)
-   device-mapper
    测量服务时间导向的路径选择器(dm-historical-service-time.ko.xz)
:::
:::
::: section
::: titlepage
# []{#device_drivers.html#updated_drivers}更新的驱动程序 {.title}
:::
### []{#device_drivers.html#_network_drivers_2}网络驱动程序
::: itemizedlist
-   Mellanox 5th generation network adapters(ConnectX series)core
    driver(mlx5_core.ko.xz)更新至版本 4.18.0-348.el8.x86_64。
-   Realtek RTL8152/RTL8153 Based USB Ethernet
    Adapters(r8152.ko.xz)更新至 v1.11.11 版本。
:::
### []{#device_drivers.html#_graphics_and_miscellaneous_driver_updates}图形和各种驱动程序更新
::: itemizedlist
-   LSI MPT Fusion SAS 3.0 Device Driver(mpt3sas.ko.xz)更新至版本
    3.3101.00.00。
-   Emulex LightPulse Fibre Channel SCSI 驱动程序(lpfc.ko.xz)更新至版本
    0:12.8.0.10。
-   QLogic Fibre Channel HBA Driver(qla2xxx.ko.xz)更新至 10.02.00.106-k
    版本。
-   Microsemi Smart Family Controller
    版本的驱动程序(smartpqi.ko.xz)更新至 2.1.8-045 版本。
-   Broadcom MegaRAID SAS Driver(megaraid_sas.ko.xz)更新至版本
    07.717.02.00-rh1。
:::
:::
:::
[]{#_bug_fixes.html}
::: chapter
::: titlepage
# []{#_bug_fixes.html#_bug_fixes}第 7 章 程序错误修复 {.title}
:::
这部分论述了在 Red Hat Enterprise Linux 8.5
中修复的对用户有严重影响的错误。
::: section
::: titlepage
# []{#_bug_fixes.html#bug-fix_installer-and-image-creation}安装程序和镜像创建 {.title}
:::
[]{#_bug_fixes.html#BZ-1931069}
::: title
**当 Insights 客户端无法注册系统时，RHEL 安装不再终止**
:::
在以前的版本中，如果 Red Hat Insights
客户端在安装过程中注册系统失败，RHEL 安装会失败。在这个版本中，即使
Insights
客户端失败，系统也会完成安装。在安装过程中向用户发送错误通知，以便稍后可以独立处理该错误。
（[BZ#1931069](https://bugzilla.redhat.com/show_bug.cgi?id=1931069){.link}）
[]{#_bug_fixes.html#BZ-1903786}
::: title
**Anaconda 允许在自定义分区屏幕中为自动创建的磁盘布局进行数据加密**
:::
在以前的版本中，在自定义分区屏幕中自动创建磁盘布局时请求加密的磁盘布局。在这个版本中，Anaconda
在自定义分区屏幕上提供了对自动创建的磁盘布局进行加密的选项。
([BZ#1903786](https://bugzilla.redhat.com/show_bug.cgi?id=1903786){.link})
[]{#_bug_fixes.html#BZ-1954408}
::: title
**当 Kickstart 文件中没有指定分区方案时，安装程序不会尝试自动分区**
:::
当使用 Kickstart 文件执行自动安装时，当您没有在 Kickstart
文件中指定任何分区方案时，安装程序不会尝试执行自动分区。安装过程中断，允许用户配置分区。
(BZ#1954408)
[]{#_bug_fixes.html#BZ-1945238}
::: title
**RHEL-Edge 容器镜像现在使用 `nginx`{.literal}，并在端口 8080 上提供**
:::
在以前的版本中，`edge-container`{.literal} 镜像类型无法在非 root
模式下运行。因此，Red Hat OpenShift 4 无法使用
`edge-container`{.literal} 镜像类型。在这个版本中，容器使用
`nginx`{.literal} HTTP
服务器来提供提交和配置文件，允许服务器作为容器内的非 root
用户运行，从而在 Red Hat OpenShift 4 上使用它。内部 Web
服务器现在使用端口 `8080`{.literal} 而不是 `80`{.literal}。
([BZ#1945238](https://bugzilla.redhat.com/show_bug.cgi?id=1945238){.link})
:::
::: section
::: titlepage
# []{#_bug_fixes.html#bug-fix_shells-and-command-line-tools}Shell 和命令行工具 {.title}
:::
[]{#_bug_fixes.html#BZ-1921665}
::: title
**`opal-prd`{.literal} rebase 到版本 6.7.1**
:::
`Opal-prd`{.literal} 已升级至 6.7.1 版本。重要的程序错误修复和增强包括：
::: itemizedlist
-   修复了由于 `xscom`{.literal} `OPAL 调用而导致的 xscom`{.literal}
    错误日志记录问题。
-   修复了通过 `DEBUG`{.literal} 构建可能的死锁。
-   如果 `内核/平台`{.literal} 中
    `快速重启失败，则回退到 full_reboot`{.literal} ``{=html}。
-   修复了 ` core/cpu`{.literal} 中的
    next_ungarded_primary``{=html}。
-   改进了自助引擎(SBE)中的速率限制计时器请求和计时器状态。
:::
(BZ#1921665)
[]{#_bug_fixes.html#BZ-1844430}
::: title