:::
::: section
::: titlepage
# []{#known-issues.html#known-issue_rhel-in-cloud-environments}云环境中的 RHEL {.title}
:::
[]{#known-issues.html#BZ-1750862}
::: title
**在 VMware 主机上的 RHEL 8 虚拟机上设置静态 IP 无法正常工作**
:::
目前，当在 VMware 主机中使用 RHEL 8
作为虚拟机(VM)的客户机操作系统时，DatasourceOVF
功能无法正常工作。因此，如果您使用 `cloud-init`{.literal}
实用程序将虚拟机的网络设置为静态
IP，然后重启虚拟机，则虚拟机的网络将更改为 DHCP。
([BZ#1750862](https://bugzilla.redhat.com/show_bug.cgi?id=1750862){.link})
[]{#known-issues.html#BZ-1865745}
::: title
**kdump 有时不会在 Azure 和 Hyper-V 上启动**
:::
在托管在 Microsoft Azure 或 Hyper-V hypervisor 上的 RHEL 8
客户机操作系统中，启动 `kdump`{.literal}
内核在某些情况下会在启用执行后通知程序时失败。
要临时解决这个问题，请禁用 crash kexec post notifiers：
``` screen
# echo N > /sys/module/kernel/parameters/crash_kexec_post_notifiers
```
(BZ#1865745)
[]{#known-issues.html#BZ-1906870}
::: title
**当使用多个客户机磁盘引导 Hyper-V 虚拟机时，SCSI 主机地址有时会改变**
:::
目前，当在 Hyper-V hypervisor 上引导 RHEL 8 虚拟机时，主机部分的主机
[*、Bus、Target、Lun*]{.emphasis}（HBTL）SCSI
地址在某些情况下发生了变化。因此，使用虚拟机中的 HBTL SCSI
识别或者设备节点设置的自动任务无法持续工作。如果虚拟机有多个磁盘，或者磁盘大小不同，会出现这种情况。
要临时解决这个问题，使用以下方法之一修改 kickstart 文件：
[**方法 1：为 SCSI 设备使用持久标识符。**]{.strong}
您可以使用以下 powershell 脚本来确定具体设备标识符：
``` screen
# Output what the /dev/disk/by-id/ for the specified hyper-v virtual disk.
# Takes a single parameter which is the virtual disk file.
# Note: kickstart syntax works with and without the /dev/ prefix.
param (
    [Parameter(Mandatory=$true)][string]$virtualdisk
)
$what = Get-VHD -Path $virtualdisk
$part = $what.DiskIdentifier.ToLower().split('-')
$p = $part[0]
$s0 = $p[6] + $p[7] + $p[4] + $p[5] + $p[2] + $p[3] + $p[0] + $p[1]
$p = $part[1]
$s1 =  $p[2] + $p[3] + $p[0] + $p[1]
[string]::format("/dev/disk/by-id/wwn-0x60022480{0}{1}{2}", $s0, $s1, $part[4])
```
您可以在 hyper-v 主机上使用此脚本，如下所示：
``` screen
PS C:\Users\Public\Documents\Hyper-V\Virtual hard disks> .\by-id.ps1 .\Testing_8\disk_3_8.vhdx
/dev/disk/by-id/wwn-0x60022480e00bc367d7fd902e8bf0d3b4
PS C:\Users\Public\Documents\Hyper-V\Virtual hard disks> .\by-id.ps1 .\Testing_8\disk_3_9.vhdx
/dev/disk/by-id/wwn-0x600224807270e09717645b1890f8a9a2
```
之后，可在 kickstart 文件中使用磁盘值，如下所示：
``` screen
part / --fstype=xfs --grow --asprimary --size=8192 --ondisk=/dev/disk/by-id/wwn-0x600224807270e09717645b1890f8a9a2
part /home --fstype="xfs" --grow --ondisk=/dev/disk/by-id/wwn-0x60022480e00bc367d7fd902e8bf0d3b4
```
因为这些值特定于每个虚拟磁盘，因此需要为每个虚拟机实例进行配置。因此，使用
`%include`{.literal} 语法将磁盘信息放在单独的文件中可能会很有用。
[**方法 2：按大小设置设备选择.**]{.strong}
根据大小配置磁盘选择的 kickstart 文件必须包含类似如下的行：
``` screen
...
# Disk partitioning information is supplied in a file to kick start
%include /tmp/disks
...
# Partition information is created during install using the %pre section
%pre --interpreter /bin/bash --log /tmp/ks_pre.log
	# Dump whole SCSI/IDE disks out sorted from smallest to largest ouputting
	# just the name
	disks=(`lsblk -n -o NAME -l -b -x SIZE -d -I 8,3`) || exit 1
	# We are assuming we have 3 disks which will be used
	# and we will create some variables to represent
	d0=${disks[0]}
	d1=${disks[1]}
	d2=${disks[2]}
	echo "part /home --fstype="xfs" --ondisk=$d2 --grow" >> /tmp/disks
	echo "part swap --fstype="swap" --ondisk=$d0 --size=4096" >> /tmp/disks
	echo "part / --fstype="xfs" --ondisk=$d1 --grow" >> /tmp/disks
	echo "part /boot --fstype="xfs" --ondisk=$d1 --size=1024" >> /tmp/disks
%end
```
(BZ#1906870)
[]{#known-issues.html#BZ-1934033}
::: title
**现在，当启用了 FIPS 模式时，Hibernating RHEL 8 客户机可以正常工作**
:::
在以前的版本中，如果虚拟机使用 FIPS 模式，则无法休眠使用 RHEL 8
作为其客户机操作系统的虚拟机(VM)。现在，底层代码已被修复，受影响的虚拟机现在可以正确地休眠。
（BZ#1934033, BZ#1944636）
:::
::: section
::: titlepage
# []{#known-issues.html#known-issue_supportability}支持性 {.title}
:::
[]{#known-issues.html#BZ-1802026}
::: title
**`redhat-support-tool`{.literal} 无法用于 `FUTURE`{.literal} 加密策略**
:::
因为客户门户网站 API 中的证书使用的加密密钥不满足 `FUTURE`{.literal}
系统范围的加密策略的要求，所以 `redhat-support-tool`{.literal}
程序目前无法使用这个策略级别。
要临时解决这个问题，在连接到客户门户网站 API 时使用 `DEFAULT`{.literal}
加密策略。
([BZ#1802026](https://bugzilla.redhat.com/show_bug.cgi?id=1802026){.link})
:::
::: section
::: titlepage
# []{#known-issues.html#known-issue_containers}容器 {.title}
:::
[]{#known-issues.html#JIRA-RHELPLAN-92741}
::: title
**带有 fuse-overlayfs 的 rootless 容器无法识别已删除的文件**
:::
在 RHEL 8.4 和更早版本中，使用 fuse-overlayfs
文件系统创建或存储了无根镜像和容器。在 RHEL 8.5
及更高版本中使用这些镜像和容器可能会对使用内核提供的 overlayfs
实施以及已从容器或 RHEL 8.4
中的镜像中删除文件或目录的未授权用户造成问题。此问题不适用于由 root
帐户创建的容器。
例如，要从容器或镜像中删除的文件或目录在使用 fuse-overlayfs
文件系统时，会使用 whiteout
格式进行标记。但是，由于格式的不同，内核覆盖fs 实施无法识别
fuse-overlayfs 创建的 whiteout
格式。因此，所有删除的文件或目录仍会显示。此问题不适用于由 root
帐户创建的容器。
要临时解决这个问题，请使用以下选项之一：
::: orderedlist
1.  使用
    `podman unshare rm -rf $HOME/.local/share/containers/* 命令删除所有非`{.literal}
    特权用户的容器和镜像。用户接下来运行 Podman 时，会重新创建
    `$HOME/.local/share/containers`{.literal}
    目录，他们将需要重新创建其容器。
2.  继续以无根用户身份运行 `podman`{.literal}
    命令。第一次在系统上调用更新的 `podman`{.literal} 版本时，它会扫描
    `$HOME/.local/share/containers`{.literal}
    目录中的所有文件，并检测是否使用 fuse-overlayfs。Podman
    记录扫描的结果，以便日后不会重新运行扫描。因此，删除的文件不会出现。
:::
检测 fuse-overlayfs 是否仍需要 fuse-overlayfs
所需的时间取决于容器中的文件和目录数量以及需要扫描的镜像的数量。
(JIRA:RHELPLAN-92741)
[]{#known-issues.html#JIRA-RHELPLAN-96940}
::: title
**在旧容器镜像中运行 systemd 无法正常工作**
:::
在旧的容器镜像中运行 systemd（如 `centos:7`{.literal} ）无法正常工作：
``` screen
$ podman run --rm -ti centos:7 /usr/lib/systemd/systemd
 Storing signatures
 Failed to mount cgroup at /sys/fs/cgroup/systemd: Operation not permitted
 [!!!!!!] Failed to mount API filesystems, freezing.
```
要临时解决这个问题，请使用以下命令：
``` screen
# mkdir /sys/fs/cgroup/systemd
# mount none -t cgroup -o none,name=systemd /sys/fs/cgroup/systemd
# podman run --runtime /usr/bin/crun --annotation=run.oci.systemd.force_cgroup_v1=/sys/fs/cgroup --rm -ti centos:7 /usr/lib/systemd/systemd
```
(JIRA:RHELPLAN-96940)
[]{#known-issues.html#BZ-2020301}
::: title
**无法拉取使用 Beta GPG 密钥签名的容器镜像**
:::
目前，当尝试拉取 RHEL Beta 容器镜像时，`podman`{.literal}
会退出并显示错误消息：`错误：源镜像被拒绝：不接受任何签名`{.literal}。镜像无法拉取，因为当前构建被配置为默认不信任
RHEL Beta GPG 密钥。
作为临时解决方案，请确保红帽 Beta GPG 密钥存储在本地系统中，并使用
`podman image trust set`{.literal} 命令为适当的 beta
命名空间更新现有的信任范围。
如果您没有本地存储 Beta GPG 密钥，您可以运行以下命令来拉取它：
``` screen
sudo wget -O /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-beta https://www.redhat.com/security/data/f21541eb.txt
```
要将 Beta GPG 密钥作为可信项添加到命名空间，请使用以下命令之一：
``` screen
$ sudo podman image trust set -f /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-beta registry.access.redhat.com/namespace
```
和
``` screen
$ sudo podman image trust set -f /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-beta registry.redhat.io/namespace
```
使用 [*ubi9-beta 或*]{.emphasis} [*rhel9-beta*]{.emphasis} 替换
[*namespace*]{.emphasis}。
([BZ#2020301](https://bugzilla.redhat.com/show_bug.cgi?id=2020301){.link})
[]{#known-issues.html#BZ-2019901}
::: title
**UBI 9-Beta 容器无法在 RHEL 7 和 8 主机上运行**
:::
UBI 9-Beta 容器镜像在 `containers-common`{.literal}
软件包中设置了一个不正确的 seccomp
配置集。因此，容器无法处理某些系统调用导致故障。要临时解决这个问题，使用
`podman run --security-opt seccomp=unconfined `{.literal}
命令运行容器。
([BZ#2019901](https://bugzilla.redhat.com/show_bug.cgi?id=2019901){.link})
:::
:::
[]{#internationalization.html}
::: chapter
::: titlepage
# []{#internationalization.html#internationalization}第 11 章 国际化 {.title}
:::
::: section
::: titlepage