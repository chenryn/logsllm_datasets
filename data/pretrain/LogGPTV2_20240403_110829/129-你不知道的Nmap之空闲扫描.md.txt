你不知道的 之空闲
Nmap
扫描 酒仙桥六号部队
_ -
MdEditor
“ 你不知道的 Nmap 之空闲扫描
前⾔
在渗透测试的过程中，我们会经常会⽤到 Nmap 进⾏信
息收集。但是 Nmap 存在⼀个缺点就是在进⾏探测过程
中会向⽬标发送⼤量数据包，从⽽产⽣⼤量流量，这样极
其容易引起⽬标警觉，甚⾄追踪到渗透测试者的真实 IP
地址。那我们该如何做才能做到既隐藏了⾃⼰的真实 IP
地址同时⼜能实现我们信息收集的任务呢？
Nmap 中有⼀种⽐较强⼤的扫描⽅式是空闲扫描（Idle
Scan），命令是 - sI（I 为 i 的⼤写）。这种技术是利⽤
空闲主机欺骗⽬标主机 IP 并且隐藏本机真实 IP。
IP 报⽂中的 ID 及 TCP 握⼿
空闲扫描利⽤了 IP 协议报⽂中的 ID 和 TCP 协议通信原
理。⾸先我们先来看下 IP 协议报⽂结构：
标识：唯⼀的标识主机发送的每⼀分数据报。通常每发送
⼀个报⽂，它的值 + 1。当 IP 报⽂⻓度超过传输⽹络的
MTU（最⼤传输单元）时必须分⽚，这个标识字段的值
被复制到所有数据分⽚的标识字段中，使得这些分⽚在达
到最终⽬的地时可以依照标识字段的内容重新组成原先的
数据。
就 说 我们发送的 报⽂未超过 常每个
就是说当我们发送的 IP 报⽂未超过 MTU 时，通常每个
报⽂的标识会 + 1，当然这个是该端⼝所有 IP 报⽂公⽤
的。当我们向 10 个⽬标及端⼝发送 IP 包时，每个报⽂
的标识会依次递增 + 1。这也是为什么我们需要空闲的主
机的原因，可以根据 IP 报⽂中的标识来推测扫描结果。
TCP 协议正常三次握⼿：
熟悉 TCP 协议的同学知道 TCP 在建⽴链接的时候会有
三次握⼿⾏为。除了正常的控制位，还有⼀些⽤于其他情
况的标识位如：RST
RST：重置连接标志，⽤于重置由于主机崩溃或其他原因
⽽出现错误的连接。或者⽤于拒绝⾮法的报⽂段和拒绝连
接请求。
接请求。
当打开的 TCP 端⼝接收到⾮法报⽂会回复 RST 以示对
⾯重置该连接。空闲扫描也正是利⽤了这点达到⽬的。
空闲扫描原理
空闲扫描利⽤ TCP 的通信原理：当直接发送 SYN,ACK
包时⽬标会因为握⼿流程不合法，所以会回复 RST 包以
重置。但此时回复的包中会带有⽬标 IP 包中的 ID。
第⼀步：
向僵⼫主机开放的 TCP 端⼝ (如 80 端⼝的 HTTP 服务)
发送 SYN,ACK 包，僵⼫主机会回复 RST。僵⼫主机回
复的报⽂中的 IP 协议中 ID 为 1397。
第⼆步：
伪造僵⼫主机的 IP（192.168.81.2）向⽬标的端⼝发送
SYN 报⽂，如果该端⼝开放会按照 TCP 协议握⼿流程向
僵⼫主机回复 SYN,ACK 报⽂。但是僵⼫主机收到的第
⼀个报⽂为 SYN,ACK 流程不合法，会回复 RST 并且 ID
会 +1 。
第三步：
这时候我们重复第⼀步的流程，向僵⼫主机开放的 TCP
端⼝ (如 80 端⼝的 HTTP 服务) 发送 SYN ACK 包 僵
端⼝ (如 80 端⼝的 HTTP 服务) 发送 SYN,ACK 包，僵
⼫主机会回复 RST。我们可以根据僵⼫主机回复的报⽂
中的 IP 协议中 ID 来判断⽬标主机跟僵⼫主机是否产⽣
了通信：
如果 ID=1399（跟 1397 ⽐ + 2），⽬标端⼝跟僵⼫主机
产⽣过通信，故⽬标端⼝开放。
如果 ID=1398（跟 1397 ⽐ + 1），⽬标端⼝跟僵⼫主机
未产⽣过通信，故⽬标端⼝未开放。
Nmap 空闲扫描算法实现
虽然我们对原理进⾏了阐述，但是 Nmap 在实际中的实
现要复杂⼀些。这时可以利⽤包追踪的⽅式来理解
Nmap 的实现。Nmap 的 ---packet-trace 选项可以显
示出包追踪的详情：
可以看到 Nmap ⾸先对空闲僵⼫主机 192.168.81.2 尝试
发送了 6 个 SA（SYN，ACK）的 TCP 包，空闲僵⼫主
机回复了 6 个 R（RST）的 TCP 包。6 个回复的 RST
包中的 id 为 5449-5454，Nmap 确认其类型为递增，
开始进⾏下⼀步。
Nmap 会伪造以⽬标 IP 地址（192.168.81.130）向空闲
主机端⼝发送了 4 个 SA（SYN，ACK） 包和 1 个以真
实 IP（192.168.81.129）向空闲主机端⼝发送的的 SA
（SYN，ACK）包。发送真实 IP 的 SA 包⽤来接收空闲
主机发回来的 RST 包，⽤ RST 包的 id 来确定之前发送
的 4 个伪造以⽬标 IP 的包空闲主机是否接收并产⽣交
互。我们可以看到 RST 包中 id 为 5459 ⽽扫描之前 id
为 5454，相差 5，正好是 4 个伪造包
1 个真实包。所以 Nmap 认为⽬标和空闲主机之
间是可以通信交互的。
最后就是利⽤原理进⾏扫描：Nmap 开始伪造以空闲主
机 IP 地址（192.168.81.2）向⽬标发送 SYN 包，以期待
⽬标（192.168.81.130）接收到以空闲主机 IP
（192.168.81.2）的 SYN 包后，按照 TCP 握⼿协议来向
空闲主机（192.168.81.2）发送第⼆次握⼿的 SYN，
ACK 包。空闲主机直接接收到 SYN，ACK, 判定握⼿不
合法会回复 RST 包，并且包中 id+1。Nmap 以真实 IP
向空闲主机发送 SYN，ACK 包，空闲主机回复 RST
包，包中 id 再⼀次 + 1。从图中⽽可以看到扫描的端⼝
的包中 id 从 5459-5461，5463-5461 等均相差为 2 ，
则可认为⽬标端⼝开放。
ipidseq 脚本
Nmap 提供基于该框架下的 NSE（Nmap
ScriptEngine）脚本来进⾏扫描时的⾃定义扩展。NSE
能够完成⽹络发现、复杂版本探测、脆弱性探测、简单漏
洞利⽤等功能。
在我们寻找空闲僵⼫主机的时候可以使⽤官⽅脚本
ipidseq 来帮助进⾏寻找。
地址：
https://svn.nmap.org/nmap/scripts/ipidseq.nse
我们来看下其中的基本实现和判断，主要判断实现在
ipidseqClass 中：
整体看来如果结果是 Incremental!（递增），是最优选
择。如果没有则 Brokenincremental!（损坏递增）勉强
可堪⼀⽤，但扫描结果不太保证。
Nmap 空闲扫描实战中的注意事项
⾸先找到⼀个空闲的僵⼫主机，我们可以使⽤上⼀节提到
的 ipidseq 脚本来进⾏探测寻找。
探测⽹段中空闲主机的命令为：
nmap --script ipidseq 192.168.81.1/24
直接使⽤会报没有权限的问题：
我们需要使⽤ sudo ：
可以看到我们运⽓很不错，探测 192.168.81.2 的 80 端
⼝在 ipidseq 脚本结果为 Incremental!（递增），这代
表我们可以尝试使⽤该台主机的 80 端⼝作为空闲僵⼫主
机。
我们直接使⽤ 192.168.81.2 作为空闲僵⼫主机对⽬标
192.168.81.130 进⾏空闲扫描
⼀般的使⽤命令为：
nmap -Pn -sI 192.168.81.2 92.168.81.130
等⼀下之后即可看到利⽤成功，扫描结果也显示出来了。
在实战中如果该空闲主机不可⽤，则可能会报以下类型的
错误：
这时候就需要更换空闲主机。
总结
虽然 Nmap 提供欺骗扫描技术（-D）来帮助⽤户保护⾃
⼰的身份，但是这种扫描（不像空闲扫描）仍需要攻击者
使⽤⾃⼰真实的 IP 发送很多的数据包以便获取扫描结
果。空闲扫描的优点之⼀是即使⼊侵检测系统若发出警
报，则会报告空闲僵⼫主机已开始对他们扫描。因此可以
⽤该种扫描技术给其他主机栽赃。当然默认情况下空闲扫
描虽然可以伪造 IP 地址进⾏发包，但是 MAC 地址依然
是真实主机的，所以在检测和防御时可以以此为依据机型
判断。
随着攻防对抗的升级⽆论何种扫描形式最终都会被捕获察
觉。当我们在研究原理和实现之后，再不断地进⾏优化，
保持不断地⾃我更新才能在这⽇益⽉薪攻⽅的浪潮中⽴于
前⽅。⼀起加油吧~
全⽂完
本⽂由 简悦 SimpRead (http://ksria.com/simpread) 优化，⽤以
提升阅读体验
使⽤了 全新的简悦词法分析引擎 beta，点击查看
(http://ksria.com/simpread/docs/#/词法分析引擎)详细说明