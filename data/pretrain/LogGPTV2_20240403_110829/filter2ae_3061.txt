## 0x01 漏洞信息
### 0x01.1 漏洞简述
  * 编号：CVE-2016-0199
  * 类型：类型混淆(Type Confusion)
  * 漏洞影响：远程代码执行(RCE)/拒绝服务攻击 (DoS)
  * CVSS 2.0：9.3
`mshtml.dll`组件在将`CElement`—>`CAttributeCollection`—>`CAttrArray`—>`Attribute.nodeValue`复制到`CAttribute`—>`Variant`时，并未对其进行校验，以致类型混淆，进而可造成任意代码执行。
### 0x01.2 漏洞影响
Microsoft Internet Explorer 9 through 11
### 0x01.3 修复方案
[MS16-063](https://docs.microsoft.com/en-us/security-updates/securitybulletins/2016/ms16-063)
## 0x02 漏洞分析
### 0x02.1 分析环境
  * OS版本：Windows 7 Service Pack 1 x86
  * Internet Explorer版本：9.0.8112.16421
  * mshtml.dll版本：9.0.8112.16684
  * jscrip9.dll版本：9.0.8112.16684
### 0x02.2 详细分析
分析用POC来自[exploit-db](https://www.exploit-db.com/exploits/39994)：
`document.createElement("IMG");`语句对应实现为`mshtml!CDocument::createElement`，其执行流如下：
首先分配堆块用于存储`CImgElement`对象：
之后由`CElement::CElement`完成初始化操作：
完成`CImgElement`对象创建：
`var oAttr =
document.createAttribute("loop");`语句对应实现为`mshtml!CDocument::createAttribute`，其执行流如下：
分配堆块用于存储`CAttribute`对象，之后由`CAttribute::CAttribute`完成初始化操作：
`CAttribute`对象偏移0x24处存储属性名：
`oAttr.nodeValue =
oElement;`语句对应实现为`mshtml!CAttribute::put_nodeValue`，其调用`CAttribute::PutNodeValueVariantHelper`完成功能。首先是复制VARIANT类型对象(存储`nodeValue`值)至偏移0x28处：
之后判断该`CAttribute`对象是否为Tracked Object，如果不是则将其设为Root
Object，并加入CRootTracker中(感兴趣的读者可自行分析`CTrackerHelper::SetAsRoot`及`CRootTracker::AddRoot`函数，此部分与GC机制有关，不在此展开)：
`CAttribute`对象偏移0x5C处用于判断其是否为Root Object：
`oElement.loop =
0x41424344;`语句设定`CElement`对象属性，其属性使用数组存储，对应实现为`CAttrArray::Set`。该函数首先判断`CElement`对象偏移0x10处是否置值，若无则分配内存并将返回值写入该处：
于`CImplAry::InsertIndirect`函数中对`CAttributeCollection`(`CElement` offset
0x10)偏移0x04处值与0x00处值进行比较以检查是否需要调整`Attribute Array`存储空间：
由于是首次设定`CElement`对象属性，并未开辟`Attribute
Array`空间，故调用`HeapAlloc`进行分配，具体可分析`CImplAry::EnsureSizeWorker`函数，完成后内存如下：
共4个元素(0x10>>2)，每个元素占用内存空间为0x10。完成属性赋值，并将`Attribute Array`当前元素数量加1：
CElement对象部分结构含义如下：
    +0x10       CAttributeCollection
                +0x00   The total size of the Attribute Array`CAttributeCollection`—>`CAttrArray`—>`Attribute.nodeValue`复制到`CAttribute`—>`Variant`(0x28)时，并未对其进行校验，以致类型混淆。正常情形下：
其执行流如下：
而在POC情形下，其执行流：
如此一来，`CAttribute::EnumerateTrackedObjects`传递参数给`jscript9!ScriptEngine::EnumerateTrackingClient`，其在`mov
ecx, [eax]`时便会发生访问错误：
## 0x03 参阅链接
  * [对CVE-2016-0199的简单分析](https://bbs.pediy.com/thread-212058.htm)
  * [CVE-2016-0199 漏洞分析](https://www.jianshu.com/p/38001618bc2d)