  * I tried using the `@types/xxxx` package and had problems.
  * I tried using the latest stable version of tsc. https://www.npmjs.com/package/typescript
  * I have a question that is inappropriate for StackOverflow. (Please ask any appropriate questions there).
  * Mention the authors (see `Definitions by:` in `index.d.ts`) so they can respond. 
    * Authors: @tkqubo @seansfkelley @thasner @kenzierocks @clayne11 @tansongyang
      "devDependencies": {
        "typescript": "^2.4.2"
      },
      "dependencies": {
        "@types/react-redux": "5.0.3",
        "react": "^15.6.1",
        "react-redux": "^5.0.6",
        "redux": "^3.7.2"
      }
    import * as React from 'react';
    import { connect } from 'react-redux';
    @connect()
    class MyComponent extends React.Component {
        get property(): string { return "value" }
    }
Error on `@connect` line:
    Unable to resolve signature of class decorator when called as an expression.
      Type 'ComponentClass>' is not assignable to type 'typeof MyComponent'.
        Type 'Component, ComponentState>' is not assignable to type 'MyComponent'.
          Property 'property' is missing in type 'Component, ComponentState>'.
It does not even work with just simple `render()` either:
    @connect()
    class MyComponent extends React.Component {
        render() {
            return ();
        }
    }
    Unable to resolve signature of class decorator when called as an expression.
      Type 'ComponentClass>' is not assignable to type 'typeof MyComponent'.
        Type 'Component, ComponentState>' is not assignable to type 'MyComponent'.
          Types of property 'render' are incompatible.
            Type '() => false | Element' is not assignable to type '() => Element'.
              Type 'false | Element' is not assignable to type 'Element'.
                Type 'false' is not assignable to type 'Element'.
It works with an empty Component class (which is covered by a test case) but
it's just an useless trivial situation.