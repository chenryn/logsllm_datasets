### 3.3 Heuristic for CDN Classification

In some cases, our method may produce false positives. For example, Yahoo uses a private CDN with CNAMEs like `*.yimg.com`. Matching the SOA records of CNAMEs and websites can also lead to false positives. For instance, Facebook's CDN uses Facebook DNS as its SOA, while Instagram, which uses a private Facebook CDN, has an SOA record from AWS DNS. This technique can overestimate the use of third-party CDNs.

To address these issues, we developed a heuristic that combines TLD matching, SAN list, and SOA information. For each (website, CDN) pair, we retrieve the CNAMEs of the internal resources of the website that use the CDN. For example, if a website uses Akamai, the CNAMEs might include `*.akamaiedge.net`.

For each CNAME, we first apply TLD matching. If the TLDs match, we consider the CDN to be private. If the TLDs do not match but the TLD of the CNAME is in the SAN list of the website, we again classify the CDN as private. Finally, if the SOA of the CNAME of the CDN does not match the SOA of the website, we classify the CDN as third-party, indicating that they are separate entities.

We applied this heuristic to 38,030 (website, CDN) pairs and successfully classified 37,259 as third-party, identifying 86 distinct CDNs. Below is a summary of our heuristic:

```python
CDN_SET = getCDN(w)
for cdn in CDN_SET:
    cnames = getCNAMEs(cdn, w)
    cdn.type = unknown
    for cname in cnames:
        if tld(cname) == tld(w):
            cdn.type = private
        elif isHTTPS(w) and tld(cname) in SAN(w):
            cdn.type = private
        elif SOA(cname) != SOA(w):
            cdn.type = third
```

To validate our heuristic, we manually checked a random sample of 100 websites. Our approach achieved 100% accuracy, while TLD and SOA matching alone achieved 97% and 83% accuracy, respectively.

### 3.4 Inter-Service Dependencies

DNS, CDN, and CA services have interdependencies. For example, CA's OCSP servers and CDPs, as well as CDNs, rely on DNS for IP resolution. CAs may also host CDPs or OCSP servers on a CDN.

For a `CDN → DNS` dependency, we identify the nameservers of the CNAMEs used by a given CDN and classify them as third-party or private using the techniques mentioned in Section 3.1. Similarly, for a `CA → DNS` dependency, we measure and classify OCSP and CRL addresses. For a `CA → CDN` dependency, we identify the CDNs of OCSP servers and CDPs by retrieving their CNAMEs, as we did for websites in Section 3.3. After identifying the CDNs, we classify them as third-party or private using the same techniques described in Section 3.3.

### 3.5 Limitations

We acknowledge several limitations of our methodology:

- **Single Vantage Point:** While our vantage point provides a representative view of structural dependencies, it may miss region-specific dependencies. For example, websites in Asia may have different dependency structures for clients in Asia. This could lead to underestimating the impact of certain providers.
- **Physical and Network Infrastructure:** We do not measure physical and network infrastructure dependencies such as physical hosting, routing, or capacity. Such data is proprietary and difficult to obtain. However, our analysis still provides valuable insights.
- **Web-Service Dependencies:** We do not focus on dependencies between web services themselves, such as loading third-party widgets or scripts. While this can have implications (e.g., privacy), our focus is on infrastructure components like DNS, CDNs, and CAs. For related work on third-party web content, see [7, 29, 35, 43, 47, 48, 51].
- **Landing Pages Only:** We only analyze dependencies on landing pages. According to [35], the root page of each site loads content from 87% of the union of external domains that all pages (landing and internal) depend on. However, we may miss dependencies that manifest deeper in the content hierarchy.

### 4 Direct Dependencies

Given our research goals in Section 2.3, we analyze direct dependencies to:

1. Assess the pervasiveness of third-party dependencies.
2. Examine the concentration of websites among third-party providers and identify single points of failure in the internet.
3. Compare the state of third-party dependencies after the Dyn 2016 attack and now.

#### 4.1 Third-Party Dependencies

**Observation 1:**
- **DNS Third-Party and Critical Dependencies:** 89% of the top-100K websites use a third-party DNS, compared to 49% in the top-100. Additionally, 28% of the top-100 websites are critically dependent, compared to 85% in the top-100K.
- **Figure 2:** Shows that third-party and critical dependencies are higher for lower-ranked websites. This may be because less popular websites cannot afford private infrastructure. Redundancy decreases with popularity; more popular websites prioritize availability.

**Observation 2:**
- **Increase in Critical Dependency on DNS Providers:** In 2020, 6% of the top-100K websites that were critically dependent in 2016 moved to a private DNS. Conversely, 10.7% of websites that used a private DNS in 2016 switched to a single third-party DNS provider. Overall, critical dependency increased by 4.7% in 2020, with more popular websites decreasing their critical dependency.

**Observation 3:**
- **CDN Usage and Critical Dependency:** 33.2% of the top-100K websites use CDNs. Of these, 85% (top-100K) and 43% (top-100) are critically dependent on a third-party CDN. Figure 3 shows that 97.6% of websites using CDNs use a third-party CDN. Third-party dependency increases across ranks, with less popular websites likely unable to afford a private CDN.

**Observation 4:**
- **No Significant Change in Critical Dependency on CDNs:** In 2016, 28.4% of the top-100K websites used CDNs. By 2020, this number increased to 39.9%. Specifically, 18.6% additional websites started using a CDN, while 6.8% stopped. Table 4 summarizes the rank-wise trends. 0.5% of websites moved to a single third-party CDN, and 1.1% gave up redundancy. Overall, there was no significant change in third-party dependency, critical dependency, and redundancy.

**Observation 5:**
- **Critical Dependency on CAs:** 78% of the top-100K websites support HTTPS, with 77% using a third-party CA and 60% being critically dependent. Figure 4 shows that more popular websites slightly less critically dependent on third-party CAs. The use of third-party CAs is higher in less popular websites (77% in top-100K vs. 71% in top-100). Critical dependency in CAs (support for OCSP stapling) remains low at 17% for the top-100K websites.

**Observation 6:**
- **No Significant Change in Critical Dependency on CAs:** In 2016, 46,529 websites from Alexa’s top-100K list supported HTTPS. There was no significant change in critical dependency on CAs between 2016 and 2020.