VRRSION+1.0
defaultdirectorles=snuzLpHcm/directories
默认的初始化文件
defaultuserhosts=SBUILDHONE/userhost8
要导找包分发的位置列表，
如果用户未提供个人化列表，则使用默认列表：
SRCDIRSs*ssrRIPcomrrrs $defaultdirectories 2> /dev/nul1*
SRCDIRS=*
www.TopSage.com
---
## Page 246
第8章
/usr/1oca1/gnu/src
/usr/local/src
OIS/3NOHS
$HOKE/gnu/exc
/tnp
/u8r/tnp
/var/tsp
while test s# -gt 0
do
case $1 in
--al1 1 --al 1 -a 1 -a11 1-al 1 -a )
shift
ALLTARGETS=*$1*
--ed 1 -cd )
CONPIGUREDIR=*$1*
shift
check 1
shift
che
chi
-cbeck
CHECKTARGETS=*$1*
-configure 1 --configur 1 --configu 1 --config 1 --confi 1 \
--conf )
--con 1 --co 1 \
-configure 1-configur 1 -configu 1 -config 1-confi 1 \
( 02- 1 uoo- 1 guoo-
shift
-environnent 1-environmen | --environne 1 --environm 1 --environ 1 \
--enviro I --envir 1 --env 1 --env 1 --en 1 --e 1 \
-environment 1  -environmen 1-environne 1 -environm 1 -envixon 1\
-enviro 1  -envir 1 -envi 1  -env 1-en 1 e )
EXTRAENVIRONNENT=*$1*
shift
--help 1 --hel 1 --he 1 --h 1 --?' 1 -help 1 -hel 1 -he 1 -b I '-? )
usage_and_exit 0
I 1
--1ogdirectory 1 --1ogdirector 1 --1ogdirecto 1 --1ogdirect 1\
--1ogdirec 1--1ogdire | --1ogdir 1 --1ogdi 1 --1ogd 1-1og 1 \
--1o 1 --1 1 \
-1ogdirectory 1-1ogdirector 1-logdirecto1-1ogdirect 1\
-1ogdiree 1 -1ogdire 1 -1ogdir 1 -1ogdi 1 -1ogd 1 -1og 1 -1o 1 -1 1
shift
sltlogdir-*$1*
www.TopSage.com
---
## Page 247
产生脚本
(0-1uo-10--1uo-
shilt
om
userhosts=*Suserhosts $1*
-source 1
-source 1
(g-1o8-1 nos-1znos-1o.xnos-
--sourc 1--sour 1 =-gou ∣-=so 1--s1\
shift
altsrcdirs=*$altsrcdirs $1*
=-userhosts 1 --userhost 1 --userhos 1 --userho 1 --userh 1\
-user 1 --use 1 --us 1 --u 1 \
-userhosts 1 -userhost 1-userhos 1 -userho 1-userh 1\
-user 1 -use 1 -us 1-α )
set_userhosts $1
shift
--version ↓ --versio 1 --versi 1 --vers 1. --ver 1 --ve 1-=v 1 \
(A-1 8=118-1S10- 163-1 0T91-10T828-
version
exit 0
-*)
1
OETOE
break
esac
shift
done
寻找适当的邮件客户端程序
for MAIL in /bin/mai1x /usr/bin/mai1x /usr/sbin/mai1x /usr/ucb/mai1x \
/bin/mai1 /usr/bin/mai1
do
done
test -x S3AIL && break
test -x SMAIL 11error *Cannot find mai1 client*
SRCDIRS=*Saltsrodire SSRCDIRS*
命令行来源目录优先于默认值
if
test -n *Suserhosts*
then
else
test -z*$ALTUSERHOSTS* && ALTUSERHOSTS=*Sdefaultuserhoste*
userhosts=**$SSTRIPCOMMENTS SAL/TUSERHOSTS 2> /dev/nu11′*
fi
www.TopSage.com
---
## Page 248
236
第8章
检查是否要执行某操作
for p in *s*
find_package *$p*
warning *Cannot tind package file $p
fL
continwe
then
/usr/tmp /var/tmp /tmp
do
done
f
as: auruso, u ds aog sbot Pttmq xoauo,=su
ttnu/aa/ <Z Hasns ,osus。 - Tivs 1,Dsus. ouoo
echo *$nsg*
for u in Suserhosts
op
done
build_one $u
将退出状志限制为一般UNIX实际的微法
done
test S&XITCODE -gt 125 && EXITCODg=125
exit $EXITCODE
8.3
小结
在本章中，我们写了UNIX系统里现在还没有的两个好用工具，使用Shel1语句与现有
的标准工具完成任务，不管是它们的哪一个，执行时都不会特别耗时，所以用户应该不
会想以程序语言C或C++将它们重写，以Shell脚本来说，它们可以完全不微任何更改，
即可在大部分现代UNIX平台上执行。
这两个程序都支持命令行选项，这些选项可干净地被while与case语句处理，两者都
使用Shell函数以简化处理且避免不必要的程序代码重复。最后，这些程序也在安全性
议题上花了相当的心思，并对它们的参数与变量执行了健康检查。
www.TopSage.com
---
## Page 249
第9章
awk的惊人表现
awk程序语言的设计，就是为了简化一般文本处理的工作，在本章中，我们将介绍Shell
脚本里有关awk的部分，
关于更高级的awk语言处理，你可以阅读引用书目里的图书。如果你的系统里是安装
GNU的gawk，也可以在在线info系统（注1）里找到它的使用手册。
所有UNIX系统里都至少有一套awk。该语言在20世纪80年代中期大举扩张版图，部
分厂商仍维持旧的awk实现，且有时称为oawk，之后新产品则取名为nawk。IBMAIX
与SunSolaris都延续这样的实现方式，不过除此之外的其他系统当前仅提供新版。
Solaris下的POSIX兼容版本放在/usr/xpg4/bin/awk，在本书中，我们仅考虑已扩展
的语言并称之为awk一无论你系统里必须使用的是nawx、gawk或是mawk，
先承认我们对awk有强烈偏见：因为太喜欢它了。我们实现它、维护它、移植它，并用
它编写程序多年。即便短小精得的awk程序很多，但我们有些大型的awk程序是上千行
的，awk的简单与强大功能，使其看来就像是为了某个工作而设计的工具，我们在awk
上很少遇到需要某种文本处理工作却找不到可用的功能或者很难实现的情况。我们曾试
着以C或C++重写一个awx程序，结果是程序更长、很难调试，而且执行的速度也只
不过稍快一些而已，
不同于其他脚本语言的是awk拥有多个实现，这种健康的情况鼓励用户拥护一种通用的
语言，同时也允许用户在这之间自由地切换使用，再者，awk是POSIX的一部分，并拥
有非UNIX操作系统的实现：这也是它不简于其德脚本语言之处。
注 1:
GNU文件盘看程序：no是iexinfo也的一部分可从ftp：/tp.gnorg/gn/exrinfo/单
获得，emacs文字辑器电可用于访间试文件：在emacs的session中，按Ctz1-8即可：
237
www.TopSage.com
---
## Page 250
238
第9章日
如果你的本机系统上的awk不是标准版本，你可以引用表9-1，取得其中任二个免费的1m1
实现。这些程序全都具有充分的可移植性且易于安装。gawk可作为类似实验台的功能，
用来提供好玩的新内建函数及语言功能，包括网络I/O、性能探测、国际化以及可移植
性检查。
表9-1：供免费取用的awk版本
程序
位置
贝尔实验室的awk
http://cm.bell-labs.com/who/bwk/awk.tar.gz
gawk
ftp://ftp-gnu.org/gnw/gawk/
mawk
ftp://ftp.whidbey.neu/pub/brennan/mawk-1.3.3.tar.gz
awka
hrtp://awka.sourceforge.net/（awk转C的转换程序）
9.1awk命令行
awk的调用可以定义变量、提供程序并且指定输人文件：
awk [ -P fs ][-v varwvalue .. ]'program*[ -- ]\
[varevalue ...][ file(e) ]
[--]aaezfoa-[ane=zeA-][sa-]e
[ var=value ...][file(s) ]
短程序通常是直接在命令行上提供，而比较长的程序，则委托-f选项指定。遇到需连
接被指名的程序文件以得到完整的程序时，则可重复使用此选项。这是包含共享awk代
码的程序库之方便用法，但另一种包含程序库的方式是使用igawk程序，它是gawk分
发的一部分，选项需置于文件名以及一般var=value赋值的前面。
如果命令行未指定文件名，则awk会读取标准输人。
"-是特殊选项：指出awk本身已没有更进一步的命令行选项。任何接下来的选项都可
被你的程序使用。
-F选项是用来重新定义默认字段分隔字符，且一般惯例将它作为第一个命令行选项。紧
接在-F选项后的fs参数是一个正则表达式，或是被提供作为下一个参数。字段分隔字
符也可设置使用内建变量FS所指定的（见本章稍后的表9-3）：
awk -P *\t**{-.. )· files FS=*[\f\v]* files
以上面的例子来看：-F选项设置的值，应用到第一个文件组，而由FS指定的值，则应
用到第二个组，
www.TopSage.com
---
## Page 251
awk的惊人表现
239
初始化的-V选项必须放在命令行上直接给定的任何程序之前，它们会在程序启动之前
以及处理任何文件之前生效，在一命令行程序之后的-V选项会被解释为一个文件名（可
能是不存在的）。
在命令行上其他地方的初始化会在处理参数时完成，并且会带上文件名，例如：
awkx '{...) * Pass=1 *,tex Pass=2 *,tex
处理文件的列表两次，第一次是Pass设为1，第二次将它设为2。
使用字符串值进行初始化无须用引号框起来，除非Shell要求这样的引用，以保护特殊
字将或空白，
特殊文件名-（连字号）表示标准输入，大部分现代的awk实现（但不包括POSIX）都
认定特殊名称/dev/stdin为标准输人，即使主机操作系统不支持该文件名。同样：
/dev/stderr与/dev/stdout可用于awk程序内，分别表示标准错误输出与标准输出。
9.2awk程序模型
awk把输入流看作一连申记录的集合，每条记录都可进一步细分为字段，通常，一行一
条记录，而字段则由一个或多个非空白字符的单词组成。然而，是什么构成一条记录和
一个字段，完全是由程序员控制，且它们的定义，甚至可以在处理期间更改。
一个awk程序是一对以模式（pattern）与大括号框起来的操作（action）组合面成的，
或许，还会加上实现操作细节的函数（function）。针对每个匹配于输入数据的模式，操
作会被执行，且所有模式都会针对每条输人记录而检查。
模式或操作可省略其中一个。如果模式省略，则操作将被应用到每条输入记录：如果操
作省略，则默认操作为打印匹配之记录在标准输出上。以下是传统awk程序的配置：
pattern ( action)
如模式医配，执行操作
gz922rd
如模式医配，美打印记录
(action }
针对每条记录，执行提作
输人会自动地由一个输人文件切换到下一个，且awk本身通常会处理每个输人文件的打
开、读取与关闭，以允许用户程序专心致力于记录的处理。程序细节将在稍后的9.5节
中详述，
虽然，模式多半是数字或字符串表达式，不过aWk以保留字BEGIN与END提供两种特
殊模式。
与BEGIN关联的操作只会执行一次，在任何命令行文件或一般命令行赋值被处理之前，
www.TopSage.com
---
## Page 252
240
第9章