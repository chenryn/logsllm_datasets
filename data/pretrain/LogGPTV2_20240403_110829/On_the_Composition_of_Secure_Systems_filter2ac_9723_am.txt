- 82 -
˛
n-Forward Correctability
All Systems
Restrictiveness
Generalized
Noninference
GNI
0
PSP
Separability
Figure 7.1: The Class of Properties Our Unwinding Theorems Cover.
The  unshaded  area  shows  the  classes  of  security  properties  that  our
unwinding theorems can handle.
It  may  seem  strange  that  Separability  is  not  included  in  these  theorems.    Our
unwinding theorems will be expressed in terms of states that are reachable from any given
state.    Separability  requires  all  high  level  traces  to  be  possible  with  all  low  level  traces.
This is an expression over the whole state machine and cannot be expressed in terms of
reachable states from a state.
7.4.  Unwinding Theorems
Ideally, an unwinding theorem has two properties:
1) The required conditions are an expression between a state and those one move away.
2) The system satisfies the desired property if and only if the unwinding condition is true
for all states.
  It  is  not  always  possible  for  the  unwinding  theorem  condition  to  be  expressed
between  adjacent  states.    For  example,  the  unwinding  theorem  given  by  Goguen  and
Meseguer for non-interference  can  be  expressed  between  a  state  and  all  adjacent  states.
Millen’s  unwinding  theorem  for  1-Forward  Correctability,  cannot  be  so  expressed.    We
will  not  restrict  ourselves  to  those  unwinding  theorems  that  are  expressible  between
- 83 -
¥
adjacent  states.    We  will,  however,  only  want  unwinding  theorems  such  that  if  the
conditions are true on all states the system does satisfy the property and conversely.  This
will ensure our unwinding theorems are sound and complete.
7.5.  Unwinding Theorem for GNI and N-Forward Correctability
In  this  section  we  will  provide  an  unwinding  theorem  for  Generalized
Noninterference  and  N-Forward  Correctability.    Before  we  present  the  unwinding
conditions  we  will  define  these  properties  in  terms  that  will  simplify  the  proofs  of  the
theorems.  The following definitions are due to Millen [Millen94].
Definition 7.6: Simple Perturbation.
d  is a simple perturbation of t  before g  if there exists a high level input
event x such that for some b
1.   t =b
2.   t =b xg  and d =b
 and d =b xg  (x is inserted into a
 (x is deleted from a
 before g)
 before g )
:
Definition 7.7: Correction.
is  a  correction  of 
t ’ 
|(L¨ HI)=g ’|(L¨ HI).
d  
in 
g  
if 
d =f
  and 
t ’=f
’  such 
that
Thus, a correction in g  is a modification of high level non-inputs in g .  We are now
ready to define N-Forward Correctability in the above terms.
Definition 7.8: N-Forward Correctability.
An event system, S= is N-Forward Correctable if for all traces
LIn, if d  is a simple perturbation of t  before either g  or
˛ T and for all a
|HI=<> (g  contains no high level input events), then there exists
, and g
a correction t ’ of d  in g  such that t ’˛ T.
We  note  that 
-Forward  Correctability  is  Restrictiveness  and  0-Forward
Correctability is forward correctable Generalized Noninterference.  We will now prove (in
Theorem  7.3)  that  the  non-forward  correctable  GNI  is  equivalent  to  the  forward
correctable version in deterministic systems.  That is, a correction can only occur before a
perturbation  in  a  non-deterministic  system.    Furthermore,  we  will  demonstrate  how  to
- 84 -
g
g
g
g
g
t
˛
a
g
¥
transform  the  NFA  into  one  such  that  the  forward  correctable definition  of  the  security
property can be applied.
7.5.1. Forward Correctable versus Non-Forward Correctable GNI
The non-forward correctable version is more difficult to handle than the  forward
correctable  one.    For  the  forward  correctable  one  only  the  possible  futures  need  to  be
considered.  If the system designer is evaluating state q then only the states reachable from
q need to be considered since a correction to a perturbation can only affect future events.
In a non-forward correctable system a change to a trace may change the path through the
state machine.  Therefore, if one is considering state q a change in the path from the start
state may result in the system being in a state q’, q„ q’.   The following theorem proves
that we can always transform the state machine into one which causal techniques apply.
Theorem 7.2: Given a NFA, M, by
1.  replacing all high level output transitions with l
2.  transforming the NFA to remove l
 transitions
3.  transforming the NFA to eliminate non-determinism
will  result  in  a  deterministic  finite  automata  (DFA),  M’,  such  that  the
causal version GNI may be used to evaluate the system.
 transitions,
Proof:
In  M  replace  high  level  output  transitions  with l
  transitions  and  eliminate  the  l
transitions and the non-determinism.  Call this new DFA M’.  The transformation can be
accomplished and does not change the language of M [Wood87 pg. 118].  We must prove
that  if  M’  satisfies  the  causal  version  of  the  property  then  M  satisfied  the  non-causal
version.
Let t   be  a  trace  that  will  place  the  system  in  state  q˛ Q  (of  M)  such  that  for  a
simple perturbation after t  a correction would modify events in t .  After the modification
of the events in t  M will be in a state q’.  By definition only High Level Output events may
be changed.  Consider the effects on the states q and q’ by replacing in M all High Level
Output transitions with l
by definition. If q=q’ then we are done since eliminating non-determinism will not affect
 transitions.  The projections from the two states must be equal
this  equality.    If  q  and  q’  are  different  then  there  exists  a  non-deterministic  choice  that
causes the path through the state machine to diverge.  If this were not the case then the
- 85 -
execution of t  (after replacing the High Level Output transitions with l 
be in state q.  Transforming the NFA to a DFA will result in the non-determinism being
removed.  Since there is no longer any non-determinism the execution of t  (after replacing
High Level Output transitions with l
 transitions) will place the system in state q=q’ and
only future events from q need be considered.
transitions) would
G
Theorem  7.2  demonstrates  that  a  non-causal  property  can  be  transformed  into  a
causal  one  by  eliminating  l
property  is  causal  then  the  elimination  of  the  l
required since the calculation of the projection from a state will implicitly remove  them.
  transitions  and  transforming  the  NFA  to  a  DFA.    If  the
  transitions  could  be  done.    It  is  not
However, the transformation from a NFA to a DFA must not be done.  In a causal system
the nature of the non-determinism is important.  This will be demonstrated below.  If the
non-determinism  is  eliminated  then  the  property  is  transformed  into  its  non-causal
equivalent.
7.5.2. Unwinding Theorems
Theorem 7.3: If M is the event system acceptor for the event system S, S is N-Forward
Correctable if and only if
" x:HI(cid:215)
:LIn(cid:215)
" q:Q
p (q)=p (q/x) and p (q/y)=p (q/x/a )
Proof:
There are four parts to this proof corresponding to the two directions of the implication
and either the two state equivalencies above, or whether or not the low inputs are present
before g  in the definition of N-Forward Correctability.
 t|HI=<> }.  By definitions there exists a s
Suppose S is N-Forward Correctable.  Assume x˛ HI and q˛ Q.  We will show that
(q/x) (cid:217)
p (q)=p (q/x) in two steps.   First  we  will  show  that p (q/x)˝
s^t˛ T (cid:217)
 is a simple
perturbation  of  s xg   before  g .    Also  g   has  no  high  level  input  events.    By  N-Forward
Correctability  there  exists  a  g ’  such  that  s
|L¨ HI.    Therefore
p (q/x)˝
(q/x) are identical to this one since inserting an event
(q).  The proof that p (q)˝
’˛ T  and  g ’|L¨ HI=g
 such that s xg
˛ T.  So s
(q).    Let g
{  t  |  s˛
- 86 -
"
a
p
˛
g
g
p
p
is also a simple perturbation.  The proof that p (q/y)=p (q/x/a ) is the same as above.  The
same proof methods are used.
Assume p (q)=p (q/x) and p (q/y)=p (q/x/a ).  Consider a trace t
˛ T
|HI=<>.    From  the  equivalence  p (q)=p (q/x)  and
(q)  such  that  b
  which  is  the
’˛ T.      Therefore,  b
˛ T such that b xg
where  g
(q/x),  by  definition  g
p (q/y)=p (q/x/a )  there  exists  a  g ’˛
simple perturbation of b xg  has a correction b
for b xg  a simple perturbation of b
perturbation of b
, b
’.   Similarly  we  can  construct  corrections
 a simple perturbation of b xa
 and b xa
 a simple
.  Therefore the state machine satisfies N-Forward Correctability.
G
We will demonstrate how to apply the above unwinding theorem with an example.
Figure 7.2 illustrates the system under consideration. The usefulness or the function of this
system  in  unimportant.    We  will  demonstrate  that  the  state  machine  is  Generalized
Noninterference secure but is not 0-Forward Correctability secure.
L2
0
HI,
HO
1
L1
L
HI
L
L2
L1
2
HI,
HO
4
HI,
HO
HI,
HO
5
3
HI,
HO
Figure 7.2: A State Machine Used to Demonstrate the Unwinding Theorem.
Since  we  want  to  determine  if  it  satisfies  both  forward  correctable  and  non-
forward  correctable  GNI  we  must  transform  the  state  machine  such  that  the  forward
correctable  version  is  applicable.    Figure  7.3(a)  shows  the  results  of  replacing  the  high
level  output  transitions  with  l
remove the l
 transitions and Figure 7.3(c) removes the non-determinism.
  transitions.    Figure  7.3(b)  shows  the  transformation  to
- 87 -
˛
p
p
g
g
g
g
a
g
g
g
a
g
L1, L2
HI
L
L1
HI
HI
HI
L
(b)
L2
HI, l
L
L2
L1
L1
L
HI
HI, l
L2
L1,
L2
L
HI, l
HI, l
HI
HI, l
(a)
HI
L1, L2
L1, Ls
HI
L1,L2
HI
L
L1,
L2
L
HI
HI
HI