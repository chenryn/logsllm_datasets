# 【技术分享】使用Hashcat破解汉语、韩语及俄语等非英语密码

## 译文声明
本文为翻译文章，原文来源：安全客。译文仅供参考，具体表达和含义以原文为准。
- 作者：[WisFree](http://bobao.360.cn/member/contribute?uid=2606963099)
- 稿费：500 RMB（欢迎投稿！）
- 投稿方式：发送邮件至linwei#360.cn 或访问网页版在线投稿。

## 写在前面的话
最近闲来无事，在浏览网络安全新闻时，发现密码破解工具Hashcat发布了v3.10版本。我随即查看了更新日志，惊讶地发现Hashcat自v3.0.0版本起已支持Mac OS X平台。自从购买了一台rmbp后，我就很少再接触Hashcat了。

## 直奔主题
目前许多网站将用户密码的MD5值直接存储在数据库中。然而，大多数字典文件都是基于拉丁字符生成的，如A-Z、a-z、0-9以及各种特殊字符。根据调查，越来越多的用户开始使用非英语字符作为密码，这意味着传统的基于字典规则的攻击方法可能不再有效。本文将演示如何使用Hashcat破解非英文字符密码。由于时间有限，我将重点介绍一些常见的非拉丁字符密码的破解方法，希望这能为大家提供一个可行的思路。如有不当之处，欢迎指正。

## 让Hashcat在Mac上运行
假设你的电脑已经安装了Git，请打开终端并切换到你想要放置Hashcat项目文件的目录（例如用户根目录），然后输入以下命令：
```bash
git clone https://github.com/hashcat/hashcat.git
```
此时，你的终端界面应如下所示：

接下来，我们需要安装最新版的OpenCL环境。首先在Hashcat目录下创建一个名为“env”的子目录，然后用Git克隆OpenCL头文件到该目录：
```bash
mkdir -p hashcat/env
git clone https://github.com/KhronosGroup/OpenCL-Headers.git hashcat/env/OpenCL
```
如果一切顺利，你现在应该可以在磁盘目录下看到Hashcat的项目文件。接着，切换到“hashcat”目录并编译源代码：
```bash
cd hashcat
sudo make
```
如果你之前没有运行过Xcode，系统可能会提示你同意Xcode的许可协议。编译成功后，终端会显示如下信息：

最后，验证Hashcat是否安装成功：
```bash
./hashcat --help
```
如果安装成功，终端将显示Hashcat的帮助信息。至此，我们已在Mac OS X上成功运行了Hashcat。

## 关于字符编码
对于生活在以英语为主要语言国家的人来说，ASCII码非常熟悉，因为它是一套基于拉丁字母的编码系统。ASCII码使用一个字节表示拉丁字符，共有256种组合。随后，UTF-8编码诞生，它能够使用1到4个字节进行编码，并包含ASCII码的单字节区间。因此，在使用Hashcat进行密码爆破时，需要考虑这一因素。

本文主要关注汉语、韩语和俄语的常用字符编码。

## 打好基础，稳步前进
我们将从俄文（西里尔）字母入手。请看下面的UTF-8编码表：

注意第三列，西里尔字母的大写字母“A”可以用十六进制的“d0 90”表示，即两个字节的十六进制码“1101 0000 1001 0000”。对比ASCII码中的“A”（41，即0100 0001），可以发现西里尔字母“A”的十六进制编码由两部分组成：“d0”为基础码，“90”为字符码。

从西里尔字母的UTF-8编码表中可以看到，基础码范围在d0-d4之间（d0, d1, d2, d3, d4），字符码范围在80-bf之间。这一点非常重要，因为它是通过UTF-8编码破解其他语言密码的基础。

## Hashcat的功能
Hashcat提供了一个参数“--hex-charset”，允许用户将待破解的数据以十六进制数值的形式输入给Hashcat。这是一个非常有用的参数，当使用该参数时，Hashcat会将自定义的字符集合作为十六进制数值处理，而不是普通的英语字符。

希望本文对你有所帮助，欢迎交流讨论！