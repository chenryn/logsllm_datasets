features allow the machine learning to be readily deployable for
high performance detection.
SYNDoSFuzzScanOSScanSSLDoSSSDPDoSUDPDoSIPIDSCTLSOracleLRDoS0.2LRDoS0.5LRDoS1.0TLSScanIPIDScanACKSCE.SSL1:1E.Fuzz1:1E.IPID1:1E.IPID1:2E.IPID1:40.800.850.900.951.001.05AUCManualParametersValidationParameterGeneralizationTestManuallySelectedParametersAutomaticallySelectedParametersSYNDoSFuzzScanOSScanSSLDoSSSDPDoSUDPDoSIPIDSCTLSOracleLRDoS0.2LRDoS0.5LRDoS1.0TLSScanIPIDScanACKSCE.SSL1:1E.Fuzz1:1E.IPID1:1E.IPID1:2E.IPID1:40.000.050.100.150.200.25EERManualParametersValidationParameterGeneralizationTestManuallySelectedParametersAutomaticallySelectedParametersSSLDoS+BenignTLSOSScaning+BenignUDPTLSPaddingOracle+BenignTLSFuzzingScan+BenignTLSACKSide-Channel+BenignTLSIPIDSide-Channel+BenignTLSTLSScanning+BenignUDP0.00.10.20.30.40.50.60.70.80.91.0AUCWhisperFSCKitsuneSSLDoS+BenignTLSOSScaning+BenignUDPTLSPaddingOracle+BenignTLSFuzzingScan+BenignTLSACKSide-Channel+BenignTLSIPIDSide-Channel+BenignTLSTLSScanning+BenignUDP0.00.10.20.30.40.50.60.70.8EERWhisperFSCKitsuneSession 12C: Traffic Analysis and Side ChannelsCCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea3441(a) Overall latency (processing and queuing)
(b) Pure processing latency
(c) Processing latency of different steps
Figure 7: Detection latency of Whisper. We present the CDF of overall latency in (a), the CDF of pure processing latency in (b),
the box plot of latency in different steps in (c).
(a) Whisper
(b) FAE
(c) Kitsune
Figure 8: CDF and the average number of throughput: Whisper, FAE, and Kitsune.
Traffic Classification. Machine learning algorithms are widely
used in traffic classification [3, 9, 48, 56–59, 61, 66]. For example,
web fingerprinting aims to invalidate the Tor anonymous services
and infer the website that users are visiting by using the features
of TLS encrypted traffic [55, 72, 73]. Similar to Web fingerprinting,
Ede et al. [66] used semi-supervised learning to fingerprint mobile
applications. Siby et al. [61] applied traffic analysis to classify en-
crypted DNS traffic and infer the activities of users. Bahramali et
al. [3] analyzed the features of various realtime communication
applications. Nasr et al. [48] compressed the statistical features of
traffic, which achieved large scale traffic analysis. Zhang et al. [75]
proposed a countermeasure against traffic analysis via adversarial
examples. Although traffic classification achieves a different goal
from malicious traffic detection and cannot be used in traffic detec-
tion, the extracted traffic features in Whisper, i.e., the frequency
domain features, can be applied to perform traffic classifications.
Anomaly Detection with Data Augmentation. Data augmen-
tation is recently developed efficiently model training for anomaly
detection [18, 30, 60]. For example, Jan et al. [30] leveraged Gen-
erative Adversarial Network (GAN) to generate labeled datasets
for botnet detection. Shetty et al. [60] generated paired data by
using GAN to train a seq2seq model that aims to invalidate the
anonymity of text. Fischer et al. [18] solved the dataset scalabil-
ity problem to detect vulnerable code via Siamese Networks. In
Whisper, we leverage the frequency domain features for efficient
anomaly detection.
Throttling Malicious Traffic. IP blacklists have been widely used
to throttle malicious traffic [36, 50]. For instance, Ramanathan et
al. [54] proposed an IP blacklist aggregation method to locate at-
tackers. Moreover, programmable data planes [34, 70, 71, 74, 77]
have been recently leveraged to throttle various attack traffic, e.g.,
throttling different types of DoS flows and covert channels. All
these defenses are orthogonal to our Whisper.
8 CONCLUSION
In this paper, we develop Whisper, a realtime malicious traffic de-
tection system that utilizes sequential information of traffic via
frequency domain analysis to enable robust attack detection. The
frequency domain features with bounded information loss allow
Whisper to achieve both high detection accuracy and high detection
throughput. In particular, fine-grained frequency domain features
represent the ordering information of packet sequences, which
ensures robust detection and prevents attackers from evading de-
tection. In order to extract the frequency domain features, Whisper
encodes per-packet feature sequences as vectors and uses DFT to
extract sequential information of traffic in the perspective of fre-
quency domain, which enables efficient attack detection by utilizing
a lightweight clustering algorithm. We prove that the frequency
domain features have bounded information loss which is a prereq-
uisite of accuracy and robustness. Extensive experiments show that
Whisper can effectively detect various attacks in high throughput
networks. It achieves 0.999 AUC accuracy within 0.06 second and
around 13.22 Gbps throughput. Especially, even under sophisticated
evasion attacks, Whisper can still detect malicious flows with high
AUC ranging between 0.891 and 0.983.
ACKNOWLEDGMENTS
We thank the anonymous reviewers for their insightful comments.
This work was in part supported by the National Key R&D Program
of China with No.2018YFB0803405, China National Funds for Dis-
tinguished Young Scientists with No.61825204, National Natural Sci-
ence Foundation of China with No.61932016 and No.62132011, Bei-
jing Outstanding Young Scientist Program with No.BJJWZYJH01201
910003011, BNRist with No.BNR2019RC01011. Ke Xu is the corre-
sponding author of this paper.
0.000.050.100.150.200.250.30Latency(second)0.000.250.500.751.00CDF20190102:0.0470s20200101:0.0578s20200325:0.1339s20200610:0.0769s0.000.010.020.030.040.050.060.07Latency(second)0.000.250.500.751.00CDFAverage:0.0361sProcessingLatencyEncodingDFTModulusLogTrans.Clustering−4.5−4.0−3.5−3.0−2.5−2.0−1.5−1.0TimeofProcess[10xSecond]101112131415Throughput(Gb/s)0.000.250.500.751.00CDF20190102:12.65Gb/s20200101:13.22Gb/s20200325:11.39Gb/s20200610:11.35Gb/s101112131415Throughput(Gb/s)0.000.250.500.751.00CDF20190102:12.65Gb/s20200101:13.18Gb/s20200325:11.50Gb/s20200610:11.28Gb/s60708090100110120Throughput(Mb/s)0.000.250.500.751.00CDFAverage:112.52Mb/s20190102Session 12C: Traffic Analysis and Side ChannelsCCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea3442REFERENCES
[1] Dario Amodei, Sundaram Ananthanarayanan, Rishita Anubhai, Jingliang Bai,
Eric Battenberg, Carl Case, Jared Casper, Bryan Catanzaro, Jingdong Chen, Mike
Chrzanowski, et al. 2016. Deep Speech 2 : End-to-End Speech Recognition in
English and Mandarin. In ICML (JMLR Workshop and Conference Proceedings,
Vol. 48). JMLR.org, 173–182.
[2] Manos Antonakakis, Roberto Perdisci, Yacin Nadji, Nikolaos Vasiloglou, Saeed
Abu-Nimeh, Wenke Lee, and David Dagon. 2012. From Throw-Away Traffic to
Bots: Detecting the Rise of DGA-Based Malware. In USENIX Security. USENIX
Association, 491–506.
[3] Alireza Bahramali, Amir Houmansadr, Ramin Soltani, Dennis Goeckel, and Don
Towsley. 2020. Practical Traffic Analysis Attacks on Secure Messaging Applica-
tions. In NDSS. The Internet Society.
[4] Karel Bartos, Michal Sofka, and Vojtech Franc. 2016. Optimized Invariant Repre-
sentation of Network Traffic for Detecting Unseen Malware Variants. In USENIX
Security. USENIX Association, 807–822.
[5] Leyla Bilge, Davide Balzarotti, William K. Robertson, Engin Kirda, and Christo-
pher Kruegel. 2012. Disclosure: detecting botnet command and control servers
through large-scale NetFlow analysis. In ACSAC. ACM, 129–138.
[6] Kevin Borders, Jonathan Springer, and Matthew Burnside. 2012. Chimera: A
Declarative Language for Streaming Network Traffic Analysis. In USENIX Security.
USENIX Association, 365–379.
[7] University Of New Brunswick. Accessed January 2021. A realistic cyber defense
dataset. https://www.unb.ca/cic/datasets/ids-2018.html.
[8] Anna L. Buczak and Erhan Guven. 2016. A Survey of Data Mining and Machine
Learning Methods for Cyber Security Intrusion Detection. IEEE Commun. Surv.
Tutorials 18, 2 (2016), 1153–1176.
[9] Jiahao Cao, Zijie Yang, Kun Sun, Qi Li, Mingwei Xu, and Peiyi Han. 2019. Fin-
gerprinting SDN Applications via Encrypted Control Traffic. In RAID. USENIX
Association, 501–515.
[10] Yue Cao, Zhiyun Qian, Zhongjie Wang, Tuan Dao, Srikanth V. Krishnamurthy,
and Lisa M. Marvel. 2016. Off-Path TCP Exploits: Global Rate Limit Considered
Dangerous. In USENIX Security. USENIX Association, 209–225.
[11] Yue Cao, Zhiyun Qian, Zhongjie Wang, Tuan Dao, Srikanth V. Krishnamurthy,
and Lisa M. Marvel. 2018. Off-Path TCP Exploits of the Challenge ACK Global
Rate Limit. IEEE/ACM Trans. Netw. 26, 2 (2018), 765–778.
A Survey. ACM Comput. Surv. 41, 3, Article 15 (July 2009), 58 pages.
support/docs/switches/catalyst-6500-series-switches/10570-41.html.
[12] Varun Chandola, Arindam Banerjee, and Vipin Kumar. 2009. Anomaly Detection:
[13] Cisco. Accessed January 2021. Cisco SPAN. https://www.cisco.com/c/en/us/
[14] Holger Dreger, Anja Feldmann, Vern Paxson, and Robin Sommer. 2004. Opera-
tional experiences with high-volume network intrusion detection. In CCS. ACM,
2–11.
[15] Min Du, Zhi Chen, Chang Liu, Rajvardhan Oak, and Dawn Song. 2019. Lifelong
[17] Xuewei Feng, Chuanpu Fu, Qi Li, Kun Sun, and Ke Xu. 2020. Off-Path TCP
Anomaly Detection Through Unlearning. In CCS. ACM, 1283–1297.
[16] Juan Echeverría, Emiliano De Cristofaro, Nicolas Kourtellis, Ilias Leontiadis,
Gianluca Stringhini, and Shi Zhou. 2018. LOBO: Evaluation of Generalization
Deficiencies in Twitter Bot Classifiers. In ACSAC. ACM, 137–146.
Exploits of the Mixed IPID Assignment. In CCS. ACM, 1323–1335.
[18] Felix Fischer, Huang Xiao, Ching-yu Kao, Yannick Stachelscheid, Benjamin John-
son, Danial Razar, Paul Fawkesley, Nat Buckley, Konstantin Böttinger, Paul
Muntean, et al. 2019. Stack Overflow Considered Helpful! Deep Learning Se-
curity Nudges Towards Stronger Cryptography. In USENIX Security. USENIX
Association, 339–356.
[19] Prahlad Fogla and Wenke Lee. 2006. Evading network anomaly detection systems:
formal reasoning and practical techniques. In CCS. ACM, 59–68.
[20] David Freeman, Sakshi Jain, Markus Dürmuth, Battista Biggio, and Giorgio Giac-
into. 2016. Who Are You? A Statistical Approach to Measuring User Authenticity.
In NDSS. The Internet Society.
com/fuchuanpu/Whisper.
[21] Chuanpu Fu. Accessed January 2021. The source code of Whisper. https://github.
[22] Pedro Garcia-Teodoro, Jesús Esteban Díaz Verdejo, Gabriel Maciá-Fernández, and
Enrique Vázquez. 2009. Anomaly-based network intrusion detection: Techniques,
systems and challenges. Comput. Secur. 28, 1-2 (2009), 18–28.
[23] Ian Goodfellow, Yoshua Bengio, Aaron Courville, and Yoshua Bengio. 2016. Deep
learning. Vol. 1. MIT press Cambridge.
[24] Guofei Gu, Roberto Perdisci, Junjie Zhang, and Wenke Lee. 2008. BotMiner:
Clustering Analysis of Network Traffic for Protocol- and Structure-Independent
Botnet Detection. In USENIX Security. USENIX Association, 139–154.
In NDSS. The Internet Society.
org/.
[25] Amir Herzberg and Haya Shulman. 2010. Stealth DoS Attacks on Secure Channels.
[26] Intel. Accessed January 2021. Data Plane Development Kit. https://www.dpdk.
[27] Luca Invernizzi and Paolo Milani Comparetti. 2012. EvilSeed: A Guided Approach
to Finding Malicious Web Pages. In SP. IEEE Computer Society, 428–442.
[28] Luca Invernizzi, Stanislav Miskovic, Ruben Torres, Christopher Kruegel,
Sabyasachi Saha, Giovanni Vigna, Sung-Ju Lee, and Marco Mellia. 2014. Nazca:
Detecting Malware Distribution in Large-Scale Networks. In NDSS. The Internet
Society.
[29] Muhammad Asim Jamshed, Jihyung Lee, Sangwoo Moon, Insu Yun, Deokjin Kim,
Sungryoul Lee, Yung Yi, and KyoungSoo Park. 2012. Kargus: a highly-scalable
software-based intrusion detection system. In CCS. ACM, 317–328.
[30] Steve T. K. Jan, Qingying Hao, Tianrui Hu, Jiameng Pu, Sonal Oswal, Gang Wang,
and Bimal Viswanath. 2020. Throwing Darts in the Dark? Detecting Bots with
Limited Data using Neural Data Augmentation. In SP. IEEE, 1190–1206.
[31] Samuel Jero, Md. Endadul Hoque, David R. Choffnes, Alan Mislove, and Cristina
Nita-Rotaru. 2018. Automated Attack Discovery in TCP Congestion Control
Using a Model-guided Approach. In NDSS. The Internet Society.
[32] Aleksandar Kuzmanovic and Edward W. Knightly. 2003. Low-rate TCP-targeted
denial of service attacks: the shrew vs. the mice and elephants. In SIGCOMM.
ACM, 75–86.
[33] Aleksandar Kuzmanovic and Edward W. Knightly. 2006. Low-rate TCP-targeted
denial of service attacks and counter strategies. IEEE/ACM Trans. Netw. 14, 4
(2006), 683–696.
[34] Guanyu Li, Menghao Zhang, Shicheng Wang, Chang Liu, Mingwei Xu, Ang Chen,
Hongxin Hu, Guofei Gu, Qi Li, and Jianping Wu. 2021. Enabling Performant, Flex-
ible and Cost-Efficient DDoS Defense With Programmable Switches. IEEE/ACM
Trans. Netw. 29, 4 (2021), 1509–1526.
[35] Hongda Li, Hongxin Hu, Guofei Gu, Gail-Joon Ahn, and Fuqiang Zhang. 2018.
vNIDS: Towards Elastic Security with Safe and Efficient Virtualization of Network
Intrusion Detection Systems. In CCS. ACM, 17–34.
[36] Vector Guo Li, Matthew Dunn, Paul Pearce, Damon McCoy, Geoffrey M. Voelker,
and Stefan Savage. 2019. Reading the Tea leaves: A Comparative Analysis of
Threat Intelligence. In USENIX Security. USENIX Association, 851–867.
[37] Chih-Yuan Lin and Simin Nadjm-Tehrani. 2019. Timing Patterns and Correla-
tions in Spontaneous SCADA Traffic for Anomaly Detection. In RAID. USENIX
Association, 73–88.
[38] Robert Merget, Juraj Somorovsky, Nimrod Aviram, Craig Young, Janis Fliegen-
schmidt, Jörg Schwenk, and Yuval Shavitt. 2019. Scalable Scanning and Automatic
Classification of TLS Padding Oracle Vulnerabilities. In USENIX Security. USENIX
Association, 1029–1046.
[39] Joseph Victor Michalowicz, Jonathan M Nichols, and Frank Bucholtz. 2013. Hand-
[40] Microsoft. Accessed January 2021. A theorem prover from Microsoft Research.
book of differential entropy. Crc Press.
https://github.com/Z3Prover/z3.
[41] Yisroel Mirsky. Accessed January 2021. The source code of Kitsune. https:
//github.com/ymirsky/Kitsune-py.
[42] Yisroel Mirsky, Tomer Doitshman, Yuval Elovici, and Asaf Shabtai. 2018. Kitsune:
An Ensemble of Autoencoders for Online Network Intrusion Detection. In NDSS.
The Internet Society.
[43] Yisroel Mirsky, Naor Kalbo, Yuval Elovici, and Asaf Shabtai. 2019. Vesper: Using
Echo Analysis to Detect Man-in-the-Middle Attacks in LANs. IEEE Trans. Inf.
Forensics Secur. 14, 6 (2019), 1638–1653.
[44] mlpack. Accessed January 2021. mlpack: open source machine learning library
and community. https://www.mlpack.org/.
[45] Gabi Nakibly, Alex Kirshon, Dima Gonikman, and Dan Boneh. 2012. Persistent
OSPF Attacks. In NDSS. The Internet Society.
[46] Gabi Nakibly, Adi Sosnovich, Eitan Menahem, Ariel Waizel, and Yuval Elovici.
2014. OSPF vulnerability to persistent poisoning attacks: a systematic analysis.
In ACSAC. ACM, 336–345.
[47] Jaehyun Nam, Muhammad Jamshed, Byungkwon Choi, Dongsu Han, and Kyoung-
Soo Park. 2015. Haetae: Scaling the Performance of Network Intrusion Detection
with Many-Core Processors. In RAID (Lecture Notes in Computer Science, Vol. 9404).
Springer, 89–110.
[48] Milad Nasr, Amir Houmansadr, and Arya Mazumdar. 2017. Compressive Traffic
Analysis: A New Paradigm for Scalable Traffic Analysis. In CCS. ACM, 2053–2069.
[49] Terry Nelms, Roberto Perdisci, Manos Antonakakis, and Mustaque Ahamad. 2015.
WebWitness: Investigating, Categorizing, and Mitigating Malware Download
Paths. In USENIX Security. USENIX Association, 1025–1040.
[50] Arman Noroozian, Jan Koenders, Eelco van Veldhuizen, Carlos Hernandez Gañán,
Sumayah A. Alrwais, Damon McCoy, and Michel van Eeten. 2019. Platforms in
Everything: Analyzing Ground-Truth Data on the Anatomy and Economics of
Bullet-Proof Hosting. In USENIX Security. USENIX Association, 1341–1356.
[51] William H Press, Saul A Teukolsky, William T Vetterling, and Brian P Flannery.
2007. Numerical recipes 3rd edition: The art of scientific computing. Cambridge
university press.
[52] Pytorch. Accessed January 2021. An open source deep learning framework.
https://pytorch.org/.
[53] Benjamin J. Radford, Leonardo M. Apolonio, Antonio J. Trias, and Jim A. Simpson.
2018. Network Traffic Anomaly Detection Using Recurrent Neural Networks.
CoRR abs/1803.10769 (2018).
Improving the Accuracy of Blacklists. In NDSS. The Internet Society.
[54] Sivaramakrishnan Ramanathan, Jelena Mirkovic, and Minlan Yu. 2020. BLAG:
Session 12C: Traffic Analysis and Side ChannelsCCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea3443[55] Vera Rimmer, Davy Preuveneers, Marc Juárez, Tom van Goethem, and Wouter
Joosen. 2018. Automated Website Fingerprinting through Deep Learning. In
NDSS. The Internet Society.
[56] Meng Shen, Yiting Liu, Liehuang Zhu, Xiaojiang Du, and Jiankun Hu. 2021.
Fine-Grained Webpage Fingerprinting Using Only Packet Length Information of
Encrypted Traffic. IEEE Trans. Inf. Forensics Secur. 16 (2021), 2046–2059.
[57] Meng Shen, Yiting Liu, Liehuang Zhu, Ke Xu, Xiaojiang Du, and Nadra Guizani.
2020. Optimizing Feature Selection for Efficient Encrypted Traffic Classification:
A Systematic Approach. IEEE Netw. 34, 4 (2020), 20–27.
[58] Meng Shen, Mingwei Wei, Liehuang Zhu, and Mingzhong Wang. 2017. Classifi-
cation of Encrypted Traffic With Second-Order Markov Chains and Application
Attribute Bigrams. IEEE Trans. Inf. Forensics Secur. 12, 8 (2017), 1830–1843.
[59] Meng Shen, Jinpeng Zhang, Liehuang Zhu, Ke Xu, and Xiaojiang Du. 2021.
Accurate Decentralized Application Identification via Encrypted Traffic Analysis
Using Graph Neural Networks. IEEE Trans. Inf. Forensics Secur. 16 (2021), 2367–
2380.
[60] Rakshith Shetty, Bernt Schiele, and Mario Fritz. 2018. A4NT: Author Attribute
Anonymity by Adversarial Training of Neural Machine Translation. In USENIX
Security. USENIX Association, 1633–1650.
[61] Sandra Siby, Marc Juárez, Claudia Díaz, Narseo Vallina-Rodriguez, and Carmela
Troncoso. 2020. Encrypted DNS -> Privacy? A Traffic Analysis Perspective. In
NDSS. The Internet Society.
system. https://www.snort.org/.
[62] Snort. Accessed January 2021. An open source network intrusion detection
[63] Robin Sommer and Vern Paxson. 2010. Outside the Closed World: On Using
Machine Learning for Network Intrusion Detection. In SP. IEEE Computer Society,
305–316.
[64] Suricata. Accessed January 2021. An open source threat detection engine. https:
//suricata-ids.org/.
[65] Ruming Tang, Zheng Yang, Zeyan Li, Weibin Meng, Haixin Wang, Qi Li, Yongqian
Sun, Dan Pei, Tao Wei, Yanfei Xu, et al. 2020. ZeroWall: Detecting Zero-Day Web
Attacks through Encoder-Decoder Recurrent Neural Networks. In INFOCOM.
IEEE, 2479–2488.
[66] Thijs van Ede, Riccardo Bortolameotti, Andrea Continella, Jingjing Ren, Daniel J.
Dubois, Martina Lindorfer, David R. Choffnes, Maarten van Steen, and Andreas
Peter. 2020. FlowPrint: Semi-Supervised Mobile-App Fingerprinting on Encrypted
Network Traffic. In NDSS. The Internet Society.
[67] Serge Vaudenay. 2002. Security Flaws Induced by CBC Padding - Applications
to SSL, IPSEC, WTLS .... In EUROCRYPT (Lecture Notes in Computer Science,
Vol. 2332). Springer, 534–546.
[68] Ke Wang and Salvatore J. Stolfo. 2004. Anomalous Payload-Based Network Intru-
sion Detection. In RAID (Lecture Notes in Computer Science, Vol. 3224). Springer,
203–222.
[69] WIDE. Accessed January 2021. MAWI working group traffic archive. http:
//mawi.wide.ad.jp/mawi/.
[70] Jiarong Xing, Qiao Kang, and Ang Chen. 2020. NetWarden: Mitigating Network
Covert Channels while Preserving Performance. In USENIX Security. USENIX
Association, 2039–2056.
[71] Jiarong Xing, Wenqing Wu, and Ang Chen. 2021. Ripple: A Programmable,
Decentralized Link-Flooding Defense Against Adaptive Adversaries. In USENIX
Security. USENIX Association, 3865–3880.
[72] Yixiao Xu, Tao Wang, Qi Li, Qingyuan Gong, Yang Chen, and Yong Jiang. 2018.
A Multi-tab Website Fingerprinting Attack. In ACSAC. ACM, 327–341.
[73] Qilei Yin, Zhuotao Liu, Qi Li, Tao Wang, Qian Wang, Chao Shen, and Yixiao
Xu. 2021. Automated Multi-Tab Website Fingerprinting Attack.
IEEE Trans.
Dependable Secur. Comput. (2021).
[74] Menghao Zhang, Guanyu Li, Shicheng Wang, Chang Liu, Ang Chen, Hongxin
Hu, Guofei Gu, Qi Li, Mingwei Xu, and Jianping Wu. 2020. Poseidon: Mitigating
Volumetric DDoS Attacks with Programmable Switches. In NDSS. The Internet
Society.
[75] Xiaokuan Zhang, Jihun Hamm, Michael K. Reiter, and Yinqian Zhang. 2019.
[76] Peilin Zhao and Steven C. H. Hoi. 2013. Cost-sensitive online active learning
Statistical Privacy for Streaming Traffic. In NDSS. The Internet Society.
with application to malicious URL detection. In KDD. ACM, 919–927.
[77] Jing Zheng, Qi Li, Guofei Gu, Jiahao Cao, David K. Y. Yau, and Jianping Wu. 2018.
Realtime DDoS Defense Using COTS SDN Switches via Adaptive Correlation
Analysis. IEEE Trans. Inf. Forensics Secur. 13, 7 (2018), 1838–1853.
[78] Shitong Zhu, Shasha Li, Zhongjie Wang, Xun Chen, Zhiyun Qian, Srikanth V.
Krishnamurthy, Kevin S. Chan, and Ananthram Swami. 2020. You do (not) belong
here: detecting DPI evasion attacks with context learning. In CoNEXT. ACM,
183–197.
APPENDIX
A PROOF OF THEOREM 1
Hpacket denotes the overall differential entropy of the sampling
sequence (cid:174)𝑠, i.e., the sum of the differential entropy of each random
variable in (cid:174)𝑠: (𝐾 =
𝑝𝑖 (𝑠) ln 𝑝𝑖 (𝑠)d𝑠
√2𝜋𝑒)
Hpacket = − 𝑁
𝑁
=
𝑖=1
∫ +∞
−∞
𝑖=1
ln 𝜎(𝑖)𝐾