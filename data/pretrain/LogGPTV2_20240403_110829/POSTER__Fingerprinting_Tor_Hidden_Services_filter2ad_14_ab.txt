network. Some of them are “open for business” and seek new users,
others are there to provide a service of some sort for individuals or
groups, and others are published as a way for their publishers to “leave
a mark”, shock, or otherwise offend or disturb.
If you go looking for hidden servers just to surf, as you would in
the public Internet, you are far more likely to find things that offend
you, including offensive images, offensive viewpoints, and sites that
promote/sell criminal products and services. Also, copyright infringe-
ment and scams are all around.
Tor Hidden Services
95
For example, consider one of the more notorious hidden services:
the Silk Road drug trading website. You can easily find the correct .
onion address for Silk Road on the public Internet (silkroadvb5piz3r.
onion), but you will also find scam sites whose .onion pseudo-URLs
are similar to that address but which point to login pages used to phish
Silk Road users’ login information.
Since there is no central authority, no rules and no way to enforce
them on Tor hidden services, be particularly wary when accessing any
hidden service—the people behind it can do anything they like, with
impunity.
6.3 HOW TO SET UP A TOR HIDDEN SERVICE
Conceptually, setting up a Tor hidden service is simply a matter of set-
ting up a network service on a Tor client, and then modifying the con-
figuration so that all access to that service is through the Tor network.
This is comparable, at a technical level, to setting up a proprietary net-
work storage system (like Novell’s NetWare or Microsoft’s Windows
NT) to be accessible through the global Internet via TCP/IP.
For hidden services, the Tor networking software has to be set up
to accept requests from the Tor network, and forward them (on the
system hosting the hidden server) to the software running the network
service (e.g., the standard TCP/IP server program, such as a web or
mail server).
What this means is that if you plan on setting up a Tor hidden
server, you should have the skills to set up a regular, nonhidden service
on an Internet-connected server—plus the know-how to run a Tor
client.
Setting up a Tor client to run a hidden service can be summarized in
four steps (from “Configuring Hidden Services for Tor” (https://www.
torproject.org/docs/tor-hidden-service.html.en)):
(cid:129) Get Tor working.
(cid:129)
(cid:129) Configure the hidden service. A matter of adding two lines to the
Install a server locally on the system running Tor.
Tor configuration file (torrc).
(cid:129) Tips and pointers and suggestions. In other words, it’s not that easy.
96
Practical Anonymity
If you have Tor working, and have a server on your Tor system,
you can set up hidden services through the Vidalia control panel (see
Figure 6.1). If you do this, you should consider it a first step; you may
wish to do more system tweaking to make sure that your hidden ser-
vice is truly hidden.
If you’ve got a web server configured on your system, and if you
can install and run the Tor client software on your system, setting up a
hidden service can be actually quite simple—but doing it securely and
in a way that maximizes anonymity and reduces risks of exposure is
not quite that simple.
6.3.1 Get Tor Working
As you may already know, from having used the Tor Browser Bundle
or Tails, getting Tor running on your system can be quite simple. But
the question missing from this instruction is, “where should I run my
Tor hidden service?”
Best security practices suggest that you not run a hidden server on
your home computer: doing so may attract attention, especially if your
service gets a lot of traffic. An adversary may also be able to correlate
up and down time of the hidden service to times that your computer is
turned on/off. In other words, an attacker can monitor a hidden service
Figure 6.1 Configuring Tor hidden services using the Vidalia control panel.
Tor Hidden Services
97
and monitor your connectivity; if the hidden service goes down when
you turn your computer off, it may be enough to accuse you of run-
ning that hidden service.
If you do plan to run a hidden service, you should take precautions to
maintain anonymity in the face of whatever attacker you might be facing.
Here are some options to consider (from notes published by Roger
Dingledine, Tor project leader and one of the original developers of Tor):
(cid:129) Run Tor on a virtual machine (VM), and make sure that the VM
cannot discover the IP address or domain name of the system on
which it is running. Running as a VM gives the system administra-
tor more control over what the Tor client can and can’t do.
(cid:129) Run Tor on a virtual private server (VPS), and as Dingledine wrote,
“put that VM in a VPS running in a country that hates my adver-
sary. That way even if somebody breaks into the web server and
breaks out of the VM, they’re still faced with a frustratingly long
bureaucratic step.” This works best if the country hosting the VPS
also has privacy-friendly legislation in place (and where officials and
server hosting employees are not easily corrupted).
Doing this (a VM on a VPS in an unfriendly country) places multi-
ple layers of security around the hidden server because:
(cid:129)
(cid:129)
(cid:129)
it is on a VM that can be encrypted, be power cycled, or even wiped
remotely, and that has no way to know what IP address or domain
name of the computer on which it is running;
it is on a VPS, so it is just one of many VMs running out of the
same physical hardware; this means an additional layer of complex-
ity for an adversary to attempt to unravel and analyze traffic;
it is on a VPS in a country unfriendly to the adversary (and presum-
ably friendly to privacy concerns), which puts a bureaucratic obsta-
cle in the way of any adversary.
So, now that you’ve got Tor installed, securely, the next issue is
installing the server software.
6.3.2 Install a Server
Although the most common (and, therefore, the easiest to install using
various tutorials and installer scripts) web server is Apache (http://
httpd.apache.org/), this is not recommended for hosting anonymous
98
Practical Anonymity
services. Apache may be a bulletproof and ordinarily quite secure web
server, it has also accumulated over time many great features, some of
which might be subverted by an attacker.
In the article referenced above, Dingledine suggests that it is best to
“run a good solid web server like nginx” (nginx, pronounced “engine-
x”, is an open source web server that is often used for hidden servers;
see http://nginx.org/). Dingledine was careful not to say “use nginx,”
but rather to recommend something like it: open source, mature,
widely used, and without too many bells and whistles which might
introduce anonymity vulnerabilities that are not considered “security
issues” for the vast majority of users (who are not on Tor).
Using a good, secure web server—one that you know how to run
securely—adds another layer of security to those cited above: the first
line of defense for a hidden service is the server.
6.3.3 Configure the Hidden Service
When you use Vidalia to set up a hidden service, it will generate the
two lines you need to add to the Tor configuration file (torrc) for you,
and start the service automatically. These lines will be something like:
HiddenServiceDir /Library/Tor/var/lib/tor/hidden_service/
HiddenServicePort 80 127.0.0.1:8080
For Windows users, something like this:
HiddenServiceDir C:\Users\username\Documents\tor\hidden_service
HiddenServicePort 80 127.0.0.1:8080
The first line here uses the HiddenServiceDir directive to point to
the hidden service directory using a fully qualified directory. That
directory is where you put the content for your hidden service.
The second line, using the HiddenServicePort directive, specifies
(first) a virtual port (the port that users appear to be using to connect
to your service) followed by the IP address:port that connections to the
hidden service are actually using. In these examples, the virtual port is
80,
for unsecured HTTP; and the address:port,
127.0.0.1:8080, points to the loopback address (an address that the
computer interprets as “This computer”) and port number 8080, an
alternate port for web connections.
the default
Tor Hidden Services
99
Generally, you would want to keep the hidden service address as
the loopback address—it provides no deanonymizing information at
all (referring, by definition, to the system running Tor). Port addresses
may need to be changed depending on the hidden service being used
(80, 443, and 8080 are all usually used for web servers; other types of
servers use other ports, such as 25 for e-mail services, 20 for file trans-
fer, and many others).
Once the new configuration is enabled (by restarting, or on first
configuring through Vidalia), Tor automatically does some housekeep-
ing chores:
(cid:129) Tor generates a private/public key pair, and writes a file called “pri-
vate_key” in the hidden service directory (see Figure 6.2).
(cid:129) Tor generates a .onion pseudo-URL hostname for the hidden ser-
vice, based on the public key of the private/public key pair.
(cid:129) Tor writes a file called “hostname,” which contains, on a single line,
the .onion pseudo-URL hostname.
From the Vidalia hidden service configuration panel, you can click
the third button from the top, on the right side of the panel, to copy
the .onion address of a selected service to your system’s clipboard.
This makes it more convenient
to accurately use or share that
address.
6.3.4 Further Tips, Tricks, and Traps
No matter how you configure your hidden service, it is a good idea to
take steps to ensure continuity as well as anonymity of your service.
If you want your hidden service to be available at a single .onion
address over time—or if you are running your hidden service from a
VM (strongly recommended)—you should back up and protect the
private_key file (see Figure 6.2). This file contains a text-only version
of your hidden service’s secret cryptographic key; if an adversary gets
access to this key they will be able to create a hacked version of your
service, and users will not be able to determine whether they are con-
nected to your server or your attacker’s server.
Therefore, if you back up this key, you should do so in a way that
makes it as difficult as possible for an adversary to recover it. You
may prefer to encrypt it on a disc or thumb drive, and then store that
100
Practical Anonymity
-----BEGIN RSA PRIVATE KEY-----
+cmMqNyiCMz4StSaiNRIXOgJm+a+4AHPJgFViaosg+ks/yvAqzU0h8HsTyTtNQKB
MIICXgIBAAKBgQDMopDdM2NXZl+snvFM3nSjaVFhx62yL0iZlf43eKMo+lC3NZvj
AoGBAJHpULYJEEqfmpSxeIlBDZX/YKICCR5GjNPGmc/f2yc65RbdyNxTnZ0IQtne
q0a/ewWqHKSm8Us0IbFzOS+djBVAbpwmmxJNAXkZrVk7AYwIDAQABY6v7uu5ATNe
8HfSisEr/2zwJhCczoFWqiGZoWDfpKXk3KrPMMDPVEIpTeM0BQpf2J5CihXPBn8B
KDQOt/XSwwJBAM94JOR9AJe0dcEtKB/06NX5v4C9fNiF07mg7uVaCjQxiDec/gnz
Pl30vO3pkR6j41iIR6YG5+TdnyvXh1qhivhA69dCqDgsRRo1zqxtx/O4WPrHAkBj
fCRyPxixah9hNMhvMxo4Pk5m855Ne7p/QeECQQCHYm2zZ5KqeGJJymNwLCT6gQqx
Ko/NaUOGIcamPlWCtTC34yUWWZ3lLlaAhUd98BWBAkEA/ICyRXfDsTHYOSa3TbW2
XUgkGDfFAB3u3VOUPg54xhrIfzdcFzJjjVoR6fdX8NFpV7CjsNx5C6QiXX2oIWSI
eo1IrdQkqq1llwiGhjzhAkEA0BsD5OYdsU87LPw7CaV0ehJloU1lgrat/XE0jM4z
Z9R9aetjxMJ7CZDlJup8w8pe++uarxyQH6z3VVn4QhdbVixeRjygFeFninInkOLC
2tjuw5ggZRhIMZn7GfHM3pNhzVgerPx3yRi1cCS0ez9wYA==
-----END RSA PRIVATE KEY-----
Figure 6.2 The contents of the file private_key will look something like this.
media somewhere very safe; you may wish to print it out and store
that copy somewhere safe. What you don’t want to do is print out a
copy and tack it to your office wall or save a copy of the key unen-
crypted on your computer.
You can run more than one hidden service on a single Tor client, sim-
ply by adding more HiddenServiceDir/HiddenServicePort configuration
lines (see Figure 6.1, which shows two hidden services set up). If you do
so, however, you will have to specify two different ports, so that your
server will know which service is being requested on the local host.
If you are running a hidden service on a Tor client, you should run
Tor as a client only; do not configure as a relay. Doing so will have
performance impact on your service, but more importantly, running as
a relay on the same system hosting a hidden service exposes a vulnera-
bility that your adversary might be able to exploit. There are attacks
that make it easier to locate a hidden server running on a Tor relay
(but it is not a trivial attack, and has not yet been demonstrated to
work on any actual hidden services).
For more about issues related to running a hidden service, see the
article “Hidden services need some love” (https://blog.torproject.org/
blog/hidden-services-need-some-love) on the Tor Project blog. This
article is a must-read if you are setting up a hidden service and want to
understand more about the risks and issues involved. Some of the
Tor Hidden Services
101
issues noted relate to things like the difficulty of scaling a hidden ser-
vice to support large numbers of users, problems with the protocols
that enable certain types of denial of service (DoS) attacks, weaknesses
in the protocol that make certain types of attacks feasible, and options
for improving anonymity and performance.