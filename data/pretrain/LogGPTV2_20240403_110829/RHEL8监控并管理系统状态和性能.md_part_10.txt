-   您已在要用于运行 playbook 的机器上安装了
    `rhel-system-roles`{.literal} 软件包。
-   已建立 SSH 连接。
:::
::: orderedlist
**流程**
1.  将您要通过 playbook 监控的机器的名称或 IP 添加到
    `/etc/ansible/hosts`{.literal} Ansible
    清单文件中，并将其添加到括在方括号中的标识组名称下：
    ``` screen
    [remotes]
    webserver.example.com
    database.example.com
    ```
2.  使用以下内容创建一个 Ansible playbook:
    ``` screen
    ---
    - hosts: remotes
      vars:
        metrics_retention_days: 0
      roles:
        - rhel-system-roles.metrics
    ```
3.  运行 Ansible playbook:
    ``` screen
    # ansible-playbook name_of_your_playbook.yml -k
    ```
:::
其中 `-k`{.literal} 提示输入密码以连接到远程系统。
:::
::: section
::: titlepage
# []{#monitoring-performance-using-rhel-system-roles_monitoring-and-managing-system-status-and-performance.html#using-the-metrics-role-to-monitor-a-fleet-of-machines-centrally-via-your-local-machine_monitoring-performance-using-rhel-system-roles}使用 metrics 系统角色通过本地机器集中监控机器的数量 {.title}
:::
此流程描述了如何使用 metrics
系统角色设置本地机器来集中监控机器数量，同时通过 `grafana`{.literal}
置备数据视觉化并通过 `redis`{.literal} 查询数据。
::: itemizedlist
**先决条件**
-   您已在要用来运行 playbook 的机器上安装了 Red Hat Ansible Engine。
-   您已在要用于运行 playbook 的机器上安装了
    `rhel-system-roles`{.literal} 软件包。
:::
::: orderedlist
**流程**
1.  使用以下内容创建一个 Ansible playbook:
    ``` screen
    ---
    - hosts: localhost
      vars:
        metrics_graph_service: yes
        metrics_query_service: yes
        metrics_retention_days: 10
        metrics_monitored_hosts: ["database.example.com", "webserver.example.com"]
      roles:
        - rhel-system-roles.metrics
    ```
2.  运行 Ansible playbook:
    ``` screen
    # ansible-playbook name_of_your_playbook.yml
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    由于 `metrics_graph_service`{.literal} 和
    `metrics_query_service`{.literal} 布尔值被设置为 value=\"yes\"，因此
    `grafana`{.literal} `会被自动安装并置备，使用 pcp`{.literal}
    数据记录索引为 `redis`{.literal} 的数据源``{=html}，允许使用
    `pcp`{.literal} 查询语言来复杂的数据查询。
    :::
3.  要查看机器集中收集的指标的图形表示，并查询数据，请访问
    `grafana`{.literal} web 界面，如 [访问 Grafana Web
    UI](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/monitoring_and_managing_system_status_and_performance/setting-up-graphical-representation-of-pcp-metrics_monitoring-and-managing-system-status-and-performance#accessing-the-grafana-web-UI_setting-up-graphical-representation-of-pcp-metrics){.link}
    中所述。
:::
:::
::: section
::: titlepage
# []{#monitoring-performance-using-rhel-system-roles_monitoring-and-managing-system-status-and-performance.html#setting-up-authentication-while-monitoring-a-system-using-the-metrics-system-role_monitoring-performance-using-rhel-system-roles}使用 metrics 系统角色监控系统时设置身份验证 {.title}
:::
PCP 通过简单身份验证安全层(SASL)框架支持 scr `am-sha-256`{.literal}
验证机制。指标 RHEL 系统角色使用 scr `am-sha-256`{.literal}
身份验证机制自动执行设置身份验证的步骤。这个步骤描述了如何使用 metrics
RHEL 系统角色设置身份验证。
::: itemizedlist
**先决条件**
-   您已在要用来运行 playbook 的机器上安装了 Red Hat Ansible Engine。
-   您已在要用于运行 playbook 的机器上安装了
    `rhel-system-roles`{.literal} 软件包。
:::
::: orderedlist
**流程**
1.  在您要为其设置身份验证的 Ansible playbook 中包含以下变量：
    ``` screen
    ---
      vars:
        metrics_username: your_username
        metrics_password: your_password
    ```
2.  运行 Ansible playbook:
    ``` screen
    # ansible-playbook name_of_your_playbook.yml
    ```
:::
::: itemizedlist
**验证步骤**
-   验证 `sasl`{.literal} 配置：
    ``` screen
    # pminfo -f -h "pcp://ip_adress?username=your_username" disk.dev.read
    Password:
    disk.dev.read
    inst [0 or "sda"] value 19540
    ```
    [*ip_adress*]{.emphasis} 应替换为主机的 IP 地址。
:::
:::
::: section
::: titlepage
# []{#monitoring-performance-using-rhel-system-roles_monitoring-and-managing-system-status-and-performance.html#using-the-metrics-system-role-to-configure-and-enable-metrics-collection-for-sql-server_monitoring-performance-using-rhel-system-roles}使用 metrics 系统角色为 SQL Server 配置和启用指标集合 {.title}
:::
此流程描述了如何使用 metrics RHEL 系统角色通过本地系统上的
`pcp`{.literal} 自动配置和启用 Microsoft SQL Server 的指标集合。
::: itemizedlist
**先决条件**
-   您已在要监控的机器上安装了 Red Hat Ansible Engine。
-   您已在要监控的机器上安装了 `rhel-system-roles`{.literal} 软件包。
-   您已安装了用于红帽企业 Linux 的 Microsoft SQL Server 并建立了与 SQL
    服务器的\"可信\"连接。
-   您已安装了适用于红帽企业 Linux 的 SQL Server 的 Microsoft ODBC
    驱动程序。
:::
::: orderedlist
**流程**
1.  通过将以下内容添加到清单中，在 `/etc/ansible/hosts`{.literal}
    Ansible 清单中配置 `localhost`{.literal} ：
    ``` screen
    localhost ansible_connection=local
    ```
2.  创建一个包含以下内容的 Ansible playbook：
    ``` screen
    ---
    - hosts: localhost
      roles:
        - role: rhel-system-roles.metrics
          vars:
            metrics_from_mssql: yes
    ```
3.  运行 Ansible playbook:
    ``` screen
    # ansible-playbook name_of_your_playbook.yml
    ```
:::
::: itemizedlist
**验证步骤**
-   使用 `pcp`{.literal} 命令验证 SQL Server PMDA
    代理(mssql)是否已加载并在运行：
    ``` screen
    # pcp
    platform: Linux rhel82-2.local 4.18.0-167.el8.x86_64 #1 SMP Sun Dec 15 01:24:23 UTC 2019 x86_64
     hardware: 2 cpus, 1 disk, 1 node, 2770MB RAM
     timezone: PDT+7
     services: pmcd pmproxy
         pmcd: Version 5.0.2-1, 12 agents, 4 clients
         pmda: root pmcd proc pmproxy xfs linux nfsclient mmv kvm mssql
               jbd2 dm
     pmlogger: primary logger: /var/log/pcp/pmlogger/rhel82-2.local/20200326.16.31
         pmie: primary engine: /var/log/pcp/pmie/rhel82-2.local/pmie.log
    ```
:::
::: itemizedlist
**其它资源**
-   [有关将 Performance Co-Pilot 用于 Microsoft SQL Server
    的更多信息，请参阅此 Red Hat Developers Blog
    post。](https://www.redhat.com/en/blog/performance-co-pilot-microsoft-sql-server-rhel-82){.link}
:::
:::
::: footnotes
\
------------------------------------------------------------------------
::: {#monitoring-performance-using-rhel-system-roles_monitoring-and-managing-system-status-and-performance.html#ftn.idm139675526697136 .footnote}
[^\[1\]^](#monitoring-performance-using-rhel-system-roles_monitoring-and-managing-system-status-and-performance.html#idm139675526697136){.simpara}
本文档会使用 `rhel-system-roles`{.literal} 软件包自动安装。
:::
:::
:::
[]{#setting-up-pcp_monitoring-and-managing-system-status-and-performance.html}
::: chapter
::: titlepage
# []{#setting-up-pcp_monitoring-and-managing-system-status-and-performance.html#setting-up-pcp_monitoring-and-managing-system-status-and-performance}第 6 章 设置 PCP {.title}
:::
Performance
Co-Pilot(PCP)是一组用于监控、可视化、存储和分析系统级性能测量的工具、服务和库。
这部分论述了如何在您的系统上安装和启用 PCP。
::: section
::: titlepage
# []{#setting-up-pcp_monitoring-and-managing-system-status-and-performance.html#overview-of-pcp_setting-up-pcp}PCP 概述 {.title}
:::
您可以使用 Python、Perl、C++ 和 C 接口添加性能指标。分析工具可以直接使用
Python、C++、C 客户端 API 和丰富的 Web 应用程序，使用 JSON
接口探索所有可用的性能数据。
您可以通过将实时结果与存档数据进行比较来分析数据模式。
PCP 的特性：
::: itemizedlist
-   轻量级分布式架构，在集中分析复杂系统时非常有用。
-   它允许监控和管理实时数据。
-   它允许记录和检索历史数据。
:::
PCP 有以下组件：
::: itemizedlist
-   Performance Metric Collector Daemon(`pmcd`{.literal})从已安装的
    Performance Metric Domain
    Agents(`pmda`{.literal})收集性能数据。[**PMDA 可以在**]{.strong}
    系统上单独加载或卸载，并由同一主机上的 [**PMCD**]{.strong} 控制。
-   `pminfo 或 pm`{.literal} stat``{=html}
    等各种客户端工具可以在同一主机或网络上检索、显示、存档和处理此数据。
-   `pcp`{.literal} 软件包提供命令行工具和底层功能。
-   `pcp-gui`{.literal} 软件包提供了图形应用。通过执行
    `yum install pcp-gui`{.literal} 命令来安装 pcp-gui``{=html}
    软件包。如需更多信息，请参阅使用 [PCP Charts 应用程序可视化追踪 PCP
    日志归档](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/monitoring_and_managing_system_status_and_performance/monitoring-performance-with-performance-co-pilot_monitoring-and-managing-system-status-and-performance#visually-tracing-pcp-log-archives-with-pcp-charts_monitoring-performance-with-performance-co-pilot){.link}。
:::
::: itemizedlist
**其它资源**
-   `pcp(1)`{.literal} man page
-   `/usr/share/doc/pcp-doc/`{.literal} directory
-   [PCP
    发布的工具](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/monitoring_and_managing_system_status_and_performance/setting-up-pcp_monitoring-and-managing-system-status-and-performance#tools-distributed-with-pcp_setting-up-pcp){.link}
-   [红帽客户门户网站上 Performance
    Co-Pilot(PCP)文章、解决方案、教程和白皮书的索引](https://access.redhat.com/articles/1145953){.link}
-   [PCP
    工具与传统工具红帽知识库并排比较](https://access.redhat.com/articles/2372811){.link}
-   [PCP 上游文档](http://pcp.io/documentation.html){.link}
:::
:::
::: section
::: titlepage
# []{#setting-up-pcp_monitoring-and-managing-system-status-and-performance.html#installing-and-enabling-pcp_setting-up-pcp}安装并启用 PCP {.title}
:::
要开始使用 PCP，请安装所有必要的软件包并启用 PCP 监控服务。
这个步骤描述了如何使用 `pcp 软件包安装 PCP`{.literal}。如果要自动执行
PCP 安装，使用 `pcp-zeroconf`{.literal} 软件包安装它。有关使用
`pcp-zeroconf`{.literal} 安装 PCP 的更多信息，[请参阅使用 pcp-zeroconf
设置
PCP](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/monitoring_and_managing_system_status_and_performance/setting-up-graphical-representation-of-pcp-metrics_monitoring-and-managing-system-status-and-performance#setting-up-pcp-with-pcp-zeroconf_setting-up-graphical-representation-of-pcp-metrics){.link}。
::: orderedlist
**流程**
1.  安装 `pcp`{.literal} 软件包：
    ``` screen