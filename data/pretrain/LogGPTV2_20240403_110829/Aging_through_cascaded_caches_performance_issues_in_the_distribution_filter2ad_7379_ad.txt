• For cost-beneﬁt considerations, we consider the miss-
rate as a function of 1/v (rejuvenation cost). With
indv, the function is convex and monotone. With
excv, the function is monotone and concave function
between integral values of 1/v. Restricted to integral
values of 1/v the miss rate through excv is convex
and monotone decreasing function of 1/v. Note that
rejuvenating-source, Poisson lambda=10
rejuvenating-source, Poisson lambda=1
rejuvenating-source, Poisson lambda=0.5
e
t
a
r
s
s
m
i
0.17
0.16
0.15
0.14
0.13
0.12
0.11
0.1
0.09
independent_v
exclusive_v
independent_v
exclusive_v
0.68
0.66
0.64
0.62
0.6
0.58
0.56
0.54
0.52
0.5
e
t
a
r
s
s
m
i
0
0.2
0.4
0.6
0.8
1
0
0.2
0.4
0.6
0.8
1
v (rejuvenation interval)
λ = 10
v (rejuvenation interval)
λ = 1
e
t
a
r
s
s
m
i
0.82
0.8
0.78
0.76
0.74
0.72
0.7
0.68
0.66
independent_v
exclusive_v
0
0.2
0.4
0.6
0.8
1
v (rejuvenation interval)
λ = 0.5
Figure 8: Miss rate dependence on rejuvenation interval for diﬀerent rates.
the tradeoﬀs generated by integral values of 1/v de-
ﬁne the lower envelope of the set of tradeoﬀs for all
possible values of 1/v. Therefore to get the smallest
miss rate for a particular cost, say x, the source has to
alternate between rejuvenating with parameter v1 and
rejuvenating with parameter v2 where 1/v1 = (cid:6)x(cid:7) and
1/v2 = (cid:14)x(cid:15).4
Note that although we observed similar patterns for Pois-
son arrivals, Pareto arrivals and in our traces (see Section
6.2) these patterns are not universally true for all sequences.
For example, it is possible to construct sequences on which
the miss-rate with exc1/2 is strictly lower than with exc1/3.
6.2 Trace-based simulations
Figure 10 shows the miss rate as a function of the reju-
venation interval v ∈ [0, 1] for the sources indv and excv.
The results shown are for the UC trace. Results for the
SD trace were similar and are not shown. The simulations
show the presence of patterns obtained in our Poisson anal-
ysis. We observed that treatment of no-cache requests in
the simulation did not seem to aﬀect general patterns, but
v and exc−
the patterns were somewhat smeared for the ind−
v
sources, due to some loss of synchronization (see deﬁnition
in Section 3). The patterns were evident in the sampled
traces UC0.1 and SD0.1 (not shown), but to a much lesser
extent due to considerably lower request-rates.
6.3 Lessons and implications
In this section we discuss implications of our results to
tuning of higher-level caches that perform pre-term refreshes.
We learned that under a wide range of circumstances, spo-
radic pre-term refreshes (caused by requests with a no-cache
request header) or rejuvenations that are not well-timed
can result in incomparable, often inferior, performance of
a client-cache relative to its performance under the basic
exc source.
Synchronization (see deﬁnition in Section 3) of a client
with the source cache would guarantee that the performance
of the client is no worse than its performance through the ba-
sic exc source. An excv source is guaranteed to remain syn-
chronized with all clients only if 1/v is integral. With spo-
radic pre-term refreshes, a source cache is only guaranteed
4The source should behave as excv2 for x − (cid:6)x(cid:7) fraction of
the time and as excv1 for the rest of the time. As each
change of the rejuvenation frequency may break synchro-
nization, alternations should be very infrequent, or avoided
altogether by balancing cost through several objects (each
having a ﬁxed rejuvenation frequency).
to remain synchronized with the one client which invoked
the most-recent pre-term refresh (delivered the no-cache
request) and with clients with already-expired copies.
A source that would like to serve sporadic no-cache re-
quests without loosing synchronization with its other clients
can do one of the followings.
1) It can serve the no-cache request by contacting an origin
server but refrain from updating the expiration time on its
cached copy.
2) It can update the expiration time of its copy but perform
another follow-up pre-term refresh of the object at its orig-
inal expiration time.
Rejuvenation policies and follow-up refreshes increase traf-
ﬁc in the upstream channel between the high-level cache and
origin servers while potentially reducing user-perceived la-
tency and traﬃc in the downstream channel between the
high-level cache and its clients (see Figure 11). This trade-
oﬀ should guide the selection of rejuvenation interval or the
follow-up action on a sporadic pre-term refresh.
client caches
higher−level
cache
origin
Figure 11: Rejuvenating source, clients, and origin.
Consider the simpliﬁed metric where the cost is the num-
ber of unsolicited refresh requests issued by the high-level
cache and the beneﬁt is the reduction in the number of
misses incurred at client caches. Whereas the cost is inde-
pendent of client activity and rather straightforward to esti-
mate (for rejuvenation it is proportional to 1/v), estimating
the beneﬁt, which is aggregated across all client caches, is
a more involved task. The objective is then to maximize
the beneﬁt (minimize the total number of misses at client-
caches), given some bound on the cost.
An interesting challenge left for future work is to eﬃ-
ciently estimate the beneﬁt, possibly on-line, with small
book-keeping of per-client history, for example, by tracking
a sample of the clients. We do establish a general guideline
that rejuvenation frequency with integral 1/v dominate all
others. That is, the average beneﬁt of mixing two rejuve-
nations intervals such that 1/v1 and 1/v2 are consecutive
integral values dominate (have equal or higher beneﬁt) all
other choices of v with the same or lesser cost. The claim
UC1+[0-] rejuvenating sources
UC1+[0.2-2] rejuvenating sources
UC1+[5-] rejuvenating sources
e
t
a
r
s
s
m
i
0.57
0.56
0.55
0.54
0.53
0.52
0.51
0.5
0.49
0.48
0.47
independent(v)+ UC1[0-]
exclusive(v)+ UC1[0-]
0
0.1
1/5
1/4
0.4
1/3
v (rejuvenation interval)
0.6
1/2
0.7
e
t
a
r
s
s
m
i
0.6
0.58
0.56
0.54
0.52
0.5
0.48
0.46
0.44
0.8
0.9
1
independent(v)+ UC1[0.2-2]
exclusive(v)+ UC1[0.2-2]
0
0.1
1/5
1/4
0.4
1/3
v (rejuvenation interval)
1/2
0.6
0.7
e
t
a
r
s
s
m
i
0.055
0.05
0.045
0.04
0.035
0.03
0.8
0.9
1
independent(v)+ UC1[5-]
exclusive(v)+ UC1[5-]
0
0.1
1/5
1/4
0.4
1/3
0.7
v (rejuvenation interval)
1/2
0.6
0.8
0.9
1
Figure 10: Miss rate dependence on rejuvenation interval for UC trace, UC1[0.2–2], and UC1[5–∞].
follows from our Poisson analysis and the fact that it is suf-
ﬁcient to establish it for a single client-cache. Although not
universally true for all request sequences, our trace-based
simulations and Pareto simulations suggest that this claim
applies to these sequences as well. The extent to which this
guideline is useful depends on the gap between non-integral
values and the lower-envelope constituting of integral values,
which increases with request-rate.
7. EXTENDED LIFETIME
In some situations, client caches use longer freshness life-
time durations than their source, either as a result of diﬀer-
ent conﬁgurations or as an intentional attempt of the client
cache to reduce miss-rate and outgoing traﬃc. In the Web
caching context, most HTTP requests are issued to objects
without explicit expiration to which caches apply a heuristic
freshness lifetime calculation (see Section 2). Thus, longer
lifetime durations can stem from diﬀerent URL ﬁlters, or
setting larger values for the parameters CONF PERCENT or
CONF MAX [22]. Lifetime extension trades improved miss-
rate with decreased coherence.
To facilitate the analysis of extension, we consider client
caches which apply an extended freshness lifetime value of
r ∗ T for some r > 1 (T is the freshness lifetime value used
by the source). We refer to r as the extension factor . We
use the notation auth(r) (respectively, ind(r), exc(r)) for a
source of type auth (respectively, ind, exc) when the client-
cache applies extension factor of r. Qualitatively, extension
resembles rejuvenation, as there is eﬀectively a ﬁxed ratio
between lifetime durations at the source and at the client
cache. The extension factor, however, is controlled by the
client cache, and for a given request sequence, varying the
extension factor is not equivalent to varying rejuvenation
interval. Figure 12 illustrates TTL durations for diﬀerent
source types with extension factor of 1.5.
As intuitively expected, we prove in [4, 5] that through
any of our three basic source models (auth, exc or ind)
the miss rate can not increase when lifetimes are extended.
Extended lifetimes, however, also decrease coherence. We
study the tradeoﬀ curve of the extension factor vs. the miss-
rate for diﬀerent source types and show which extension
factor values achieve the best balance.
The following Lemma reveals a surprising step-like form
of the tradeoﬀ curve for high request rates.
Lemma 7.1. Consider an exc(r) source and a request se-
quence such that the object is requested at least once every
((cid:14)r(cid:15) − r)T time units. Then, the miss rate is the same as
with exc((cid:6)r(cid:7)).
extension with r=1.5
Authoritative
Exclusive
Independent
1.5T
L
T
T
0.5T
α
+α
T
time
+α
2T
3T+α
Figure 12: TTL obtained through diﬀerent types of
sources when the client cache uses extension factor
of r = 1.5. auth source provides copies with zero
age and thus TTL of rT (1.5T ). exc source (shown
with displacement α) provides copies with age that
cycles from 0 to T and thus a TTL that cycles from
rT to (r − 1)T (1.5T to 0.5T ). ind source provides at
each point in time a copy with age independently
drawn from U [0, T ] and thus TTL drawn from U [(r −
1)T, rT ] (U [0.5T, 1.5T ]). The dotted lines correspond
to expiration times of previous copies at the client
cache. Copies expire at times (i+0.5)T +α for integral
values of i.
Proof. When a copy expires at the client-cache, the copy
at the source has age (r − (cid:6)r(cid:7))T . The object is requested
before the source refreshes its own copy. Thus, a miss at the
client cache is incurred once every (cid:6)r(cid:7)T time units.
Note that the lemma does not hold for lower request rates.
For example, for ﬁxed-frequency arrivals with f = 1.2, the
miss rate is 1 with r ≤ 1.2 and is 0.8 with r = 1.5.
Observe that a client-cache is synchronized with its exc(r)
source if and only if r is integral. Figure 12 illustrates
the lack of synchronization with r = 1.5: when previously-
served copies expire at the client cache, the source provides
a copy with age 0.5T and thus a TTL of T .
7.1 Poisson and Pareto arrivals
We consider a client cache that uses extension factor of r
and receives requests generated by a Poisson process with
rate λ. For this sequence it is possible to calculate the miss-
rate of the client cache as a function of r and λ through the
diﬀerent source types [5]. Through an auth(r) source the
1+λ(r−1/2) ,
miss rate is
1+λr , through ind(r) the miss rate is
1
1
and through an exc(r) source the miss rate is
λ ((cid:6)r(cid:7) + exp(λ(r − (cid:6)r(cid:7)))/(exp(λ) − 1))
1
.
For high rates (large values of λ), the miss rate of exc(r)
is ≈ 1/(λ(cid:6)r(cid:7)), which is a step-like function with drops at
integral values of r. Derivations establish that the trade-
oﬀ curve of miss rate vs. extension is concave between any
two integral values of r, but is convex and monotone de-
creasing when restricted to integral values of r. Figure 13
shows the miss-rate as a function of the extension factor for
diﬀerent source types and request rates.
It illustrates, in
particular, the monotone convex dependence for auth and
ind sources. The ﬁgure also illustrates that across all re-
quest rates, exc(r) outperforms ind(r) for integral r’s but
is outperformed by ind(r) on some intermediate values. At
the extremes, for low request rates, exc(r) and ind(r) con-
verge, and are separated from auth(r). For high request
rates exc(r) becomes more step-like: its performance on in-
tegral values of r converges to that of auth(r) but for non-
integral values it can be strongly outperformed by ind(r).
As we shall see, these patterns are also present for Pareto
and our trace-based simulations. We note, however, that
they are not universal for arbitrary inter-request distribu-
tions. In particular, some distributions with no reference-
locality do not conform to these patterns.
Figure 13 shows simulation results of Pareto arrivals with