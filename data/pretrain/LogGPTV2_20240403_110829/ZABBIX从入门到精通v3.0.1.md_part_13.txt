fastcgi_split_path_info ^(.+\.php)(/.+)$;
fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
fastcgi_param SCRIPT_NAME $fastcgi_script_name;
fastcgi_param PATH_INFO $fastcgi_path_info;
include fastcgi_params;
}
}
..... 省略部分配置 .....
创建用户密码
# printf "Admin:$(openssl passwd -crypt 123456)\n" >>conf/htpasswd
# cat conf/htpasswd
Admin:xyJkVhXGAZ8tM
重启 nginx
# /usr/local/nginx-1.5.2/sbin/nginx -s reload
更多关于nginx认证的内容，请参考前面的文章：nginx用户认证配置（ Basic HTTP authentication）
zabbix http 认证效果
像往常一样打开 zabbix 管理地址，此时会弹出账号密码框，账号是 Admin，密码 123456。假如哪天你取消了 http
认证，那么zabbix会使用zabbix系统内的密码。
输入完账号密码之后，直接进入了zabbix界面。
ZABBIX 各版本之间的兼容性
zabbix更新很快，从2009年到现在已经更新多个版本，为了使用更多zabbix的新特性，随之而来的便是升级版本，
zabbix版本兼容性是必须优先考虑的一点
客户端 AGENT 兼容
zabbix1.x到zabbix2.x的所有agent都兼容zabbix server2.4：如果你升级zabbix server，客户端是可以不做任何改变，
除非你想使用agent的一些新特性。
Zabbix 代理（proxy）兼容
zabbix proxy很挑剔，2.4版本的proxy必须和2.4版本的server配套使用。其他zabbix1.x到2.2的proxy都不能与
2.4的server配套。也就是说，如果你升级zabbix server，那么zabbix proxy也要同步升级。
XML 文件兼容
zabbix 1.8、2.0、2.2导出的xml文件都可以导入到zabbix2.4中。曾经在zabbix 2.4上辛辛苦苦做好了一个模板，结
果无法导入到2.2版本中，想想就觉得苦。
zabbix 如何选择适合的监控类型
zabbix提供十几种监控类型，包括：Zabbix agent, Simple checks, SNMP, Zabbix internal, IPMI, JMX monitoring等等，
那我们应该如何选择呢？凉白开在此给大家一一作一个说明
zabbix agent
zabbix自带的客户端程序（被动模式），zabbix server主动向它收集监控数据。agent提供丰富的key，包括不限于
cpu、内存、网络、磁盘、web 等等。如果你不介意或者系统支持安装此程序，那么他是首选的。需要注意的是，
server检索数据有超时限制，最大超时时间30秒，如果检索数据经常超过30秒，那么，不建议你使用主动模式的
agent，可以使用如下类型agent active
zabbix agent（active）
也需要安装agent（主动模式），和上一个相同。但是数据由zabbix agent主动提交至zabbix server
参考文章：
simple check
基本的检测，可以检测网络、端口、fping这些，功能很少并且无需安装客户端。
snmp check
snmp v1 check、snmp v2 check、snmp v3 check的功能都是一样的。推荐如下场景：
客户基于安全考虑，不同意安装agent
路由器、打印机等等设备无法安装，但是支持snmp协议
不喜欢频繁对agent升级
zabbix internal
zabbix系统内部用，比如趋势数据记录数了、历史记录数量等等，日常业务监控用不上他。
zabbix trapper
也需要安装agent（主动模式），你需要借助bin/zabbix_sender将数据提交至zabbix server。如下情况适合使用：
 检索数据时间较长
 同一时间有大量的数据要提交，例如redis info信息，里面包含五六十项数据，通过zabbix_sender来一次
性提交，显然比agent来取几十次要方便。
zabbix aggretage
aggregate checks是一个聚合的检测，例如我想知道某个组的host负载平均值，硬盘剩余总量，或者某几台机器的
这些数据，简单的说，这个方法就是用来了解一个整体水平，而不需要我们一台台看过去。这个方法的数据全部来
之数据库，所以它不需要agent。
external check
zabbix server运行脚本或者二进制文件来执行外部检测，外部检测不需要在被监控端运行任何agentd。
备注：请不要过度使用外部检测，这会严重降低zabbix系统性能
database monitor
zabbix通过调用ODBC来获取数据库的数据以及数据库状态等等信息
IPMI agent
用于监控硬件设备，例如Dell或者hp服务器的主板温度、cpu电压、盖子是不是被打开等等
SSH agent
zabbix使用提供的ssh信息（服务器用户密码或者证书）登录服务器，执行指定的脚本来检索数据。如下人适合用
不会安装agent、不想相撞agent
不担心账号密码/证书放在zabbix里
Telnet agent
同上，Windows不支持ssh，可以使用Telnet agent。
jmx agent
通过jmx监控java jvm，比如tomcat。目前有一个很大的不足，如果tomcat多实例，jmx agent只能监控一个。如
果是多实例，建议使用agent + cmdline-jmxclient-0.10.3.jar
zabbix Calculated
计算类型，在几个 key 值之间做计算，例如 redis 自带的 info 命令可以监控 keyspace_hits 和keyspace_misses 这两
个值，但是redis的命中率不能直接获取，可以通过zabbix的calculated实现监控redis的命中率
通过如上的介绍，你知道如何选择了吗？
zabbix LTS 和标准发行版的区别
在zabbix官方下载页面，我们可以发现有一个LTS版本。如下图：分别为Zabbix 2.4、Zabbix 2.2 LTS
经常有人问起，他们俩的区别。
LTS为Long Term Support的简写，zabbix将为客户提供5年的支持服务。前三年完全支持与后两年有限制支持。前
三年包括一般、关键、安全性问题解决，后两年包括关键、安全性问题解决。超出时间不提供技术支持服务。然而
标准版，只提供6+1月支持。
上几个图，更好的解释zabbix LTS与标准发型版本的区别
目前3.0 LTS版本还在开发中，官方暂未给出zabbix LTS发行的具体日期。2.4与2.6没有LTS，所以只提供几个月
的支持。即使这样，目前很大一部分同学在使用zabbix 2.4
如上可以看出zabbix LTS与zabbix标准发行版本的生命周期区别，普通版本6个月开发发行，支持6个月无限制支
持，外加一个月有限制支持。然后LTS版本1.5年开发发行，3年无限制支持，2年有限制支持。
如上为当前主流zabbix版本生命周期表。
总结
简单来说zabbix LTS与zabbix标准版本区别在开发周期、支持周期，其他都没有什么区别。希望更新新版本的用户
肯定不愿意使用LTS。
zabbix 主动、被动检测的详细过程与区别
zabbix agent检测分为主动（agent active）和被动（agent）两种形式，主动与被动的说法均是相对于agent来讨论
的。简单说明一下主动与被动的区别如下：
 主动：agent请求server获取主动的监控项列表，并主动将监控项内需要检测的数据提交给server/proxy
 被动：server向agent请求获取监控项的数据，agent返回数据。
zabbix agent通信过程中的协议均基于json格式，格式如下：
- "ZBXD\x01" (5 bytes)
- data length (8 bytes). 1 will be formatted as 01/00/00/00/00/00/00/00 (eight bytes in HEX, 64 bit number)
备注：为了避免内存耗尽，server限制每个通信连接最多使用128MB内存。
被动检测
server发起如下请求
\n
Aegent返回如下响应数据
[\0]
supported items通信过程
 Server打开一个TCP连接
 Server发送请求agent.ping\n
 Agent接收到请求并且响应1
 Server处理接收到的数据1
 关闭TCP连接
not supported items通信过程
 Server打开一个TCP连接
 Server发送请求vfs.fs.size[/nono]\n
 Agent 接收请求并且返回响应数据 ZBX_NOTSUPPORTED\0Cannot obtain filesystem
information: [2] No such file or directory
 Server接收并处理数据, 将item的状态改为“ not supported ”
 关闭TCP连接
主动检测
如前面所说，zabbix首先向ServerActive配置的IP请求获取active items，获取并提交active tiems数据值server或
者proxy。很多同学会提出疑问：zabbix多久获取一次active items？它会根据配置文件中的RefreshActiveChecks的
频率进行，如果获取失败，那么将会在60秒之后重试
获取ACTIVE ITEMS列表
Agent请求
{
"request":"active checks",
"host":""
}
Server响应列表
{
"response":"success",
"data":[
{
"key":"log[/home/zabbix/logs/zabbix_agentd.log]",
"delay":30,
"lastlogsize":0,
"mtime":0
},
{
"key":"agent.version",
"delay":600,
"lastlogsize":0,
"mtime":0
},
{
"key":"vfs.fs.size[/nono]",
"delay":600,
"lastlogsize":0,
"mtime":0
}
]
}
备注：获取到的items列表中的所有item属性key, delay, lastlogsize ,mtime都必须存在，获取列表的通信过程如下：
 Agent打开TCP连接（主动检测变成Agent打开）
 Agent请求items检测列表
 Server返回items列表
 Agent 处理响应
 关闭TCP连接
 Agent开始收集数据
 提交active items数据
 Agent发送请求
{
"request":"agent data",
"data":[
{
"host":"",
"key":"agent.version",
"value":"2.4.0",
"clock":1400675595,
"ns":76808644
},
{
"host":"",
"key":"log[/home/zabbix/logs/zabbix_agentd.log]",
"lastlogsize":112,
"value":" 19845:20140621:141708.521 Starting Zabbix Agent []. Zabbix 2.4.0 (revision 50000).",
"clock":1400675595,
"ns":77053975
},
{
"host":"",
"key":"vfs.fs.size[/nono]",
"state":1,
"value":"Cannot obtain filesystem information: [2] No such file or directory",
"clock":1400675595,
"ns":78154128
}
],
"clock": 1400675595,
"ns": 78211329
}
Server响应数据
{
"response":"success",
"info":"processed: 3; failed: 0; total: 3; seconds spent: 0.003534"
}
备注：如果有些数据提交失败，比如host、item被删除或者禁用，agent不会尝试从新提交
主动检测提交数据过程如下：
 Agent建立TCP连接
 Agent提交items列表收集的数据
 Server处理数据，并返回响应状态
 关闭TCP连接
zabbix 值缓存(value cache)说明
在zabbix-2.2版本之前，zabbix计算trigger与calculated/aggregate值都是直接通过sql语句查询并处理出来的结果，
为了提高这块的性能与效率，zabbix引入了value cache，相关配置请参考：《zabbix_server.conf配置文件详解》。
zabbix获取到的item数据，会暂时保存到cache中，等达到一定阀值之后，将会把数据存储到数据库中。此时trigger、
aggregate等等功能直接从cache中抓取数据使用，如果cache中没有所有的数据，那么再从数据库中读取，无形中
降低了不少的数据库的压力。
zabbix还提供内部item，可用于监控zabbix value chache的使用情况，如下：
zabbix[vcache,buffer,]
zabbix[vcache,cache,]
了解value cache有主语大家配置，它听过的监控item一般用的较少。
第五章：zabbix SNMP
zabbix snmp 类型
概述
如果我们需要监控打印机、路由器、UPS等设备,肯定不能使用zabbix agentd,因为他们不能安装软件的,还好他们一
般都支持SNMP协议,这样我可以使用SNMP来监控他们.如果你希望使用SNMP agent来获取这些设备的信息，那
么在安装zabbix server的时候你需要增加snmp的支持.
备注：SNMP检查基于UDP协议
注意事项
如果监控基于SNMPv3协议的设备,确保msgAuthoritativeEngineID（通常叫做snmpEngineID 或“Engine ID”）是唯
一的. 以前SNMPv3协议只支持MD5和DES加密,从zabbix 2.2开始支持SHA与AES加密协议.
配置 SNMP 监控
使用SNMP来监视设备,需要完成以下步骤
1. 创建主机