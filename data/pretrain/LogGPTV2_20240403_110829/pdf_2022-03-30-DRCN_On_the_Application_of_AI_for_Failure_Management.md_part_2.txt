time of a HTTP request.
Traces. Traces records the workflow and tasks
{"traceId": "72c53", "name": "get", "timestamp": 1529029301238, "id": "df332",
executed in response to, e.g., an HTTP
"duration": 124957, “annotations": [{"key": "http.status_code", "value": "200"}, {"key":
request. "http.url", "value": "https://v2/e5/servers/detail?limit=200"}, {"key": "protocol", "value":
"HTTP"}, "endpoint": {"serviceName": "hss", "ipv4": "126.75.191.253"}]
Events. Major milestones which occur within a
data center can be exposed as events.
{"id": "dns_address_match“, "timestamp": 1529029301238, …}
Examples include alarms, service upgrades, {"id": "ping_packet_loss“, "timestamp": 152902933452, …}
and software releases. {"id": "tcp_connection_time“, "timestamp": 15290294516578, …}
{"id": "cpu_usage_average“, "timestamp": 1529023098976, …}
ULTRA-SCALE AIOPS LAB 8
Our Contribution to AIOps Research
2019-2022
Field Layers Tasks Publication
Service • A Survey of AIOpsMethods for Failure Management. Notaro, P.; Cardoso, J. and Gerndt, M. In ACM Transactions on Intelligent Systems and
Hypervisor Technology, 2021.
Middleware • A Systematic Mapping Study in AIOps. Notaro, P.; Cardoso, J. and Gerndt, M. In AIOPS 2020 International Workshop on Artificial Intelligence for IT
General AIOps
OS Operations, Springer, 2020.
Hardware
• Artificial Intelligence for IT Operations (AIOPS) Workshop White Paper. Bogatinovski, J.; Nedelkoski, S.; Acker, A.; Schmidt, F.; Wittkopp, T.;
Network Becker, S.; Cardoso, J. and Kao, O. In AIOPS 2020 International Workshop on Artificial Intelligence for IT Operations, Springer,2020.
• QuLog: Data-Driven Approach for Log Instruction Quality Assessment. Bogatinovski, J.; Nedelkoski, S.; Acker, A.; Cardoso, J. and Kao, O. In
30th IEEE/ACM International Conference on Program Comprehension, 2022.
• Self-Supervised Log Parsing. Nedelkoski, S.; Bogatinovski, J.; Acker, A.; Cardoso, J. and Kao, O. In European Conference on Machine Learning and
Anomaly Principles and Practice of Knowledge Discovery in Databases (ECML-PKDD), 14-18 September, 2020, Belgium, 2020.
Log Analysis All
Detection • Self-Attentive Classification-Based Anomaly Detection in Unstructured Logs.Nedelkoski, S.; Bogatinovski, J.; Acker, A.; Cardoso, J. and Kao, O.
In 20th IEEE International Conference on Data Mining (ICDM), Italy, 2020
Root-cause
• Efficient Failure Diagnosis of OpenStack Using Tempest. Bhatia, A.; Gerndt, M. and Cardoso, J. In IEEE Internet Computing, Vol. 22 (6): 61-70,
Analysis
2018.
Failure • Automated Analysis of Distributed Tracing: Challenges and Research Directions. Bento, A.; Correia, J.; Filipe, R.; Araujo, F. and Cardoso, J. In
Journal of Grid Computing, Vol. 19 (9), 2021.
Prediction
• Self-Supervised Anomaly Detection from Distributed Traces. Bogatinovski, J.; Nedelkoski, S.; Cardoso, J. and Kao, O. In IEEE/ACM 13th
Service Fault International Conference on Utility and Cloud Computing (UCC), 2020
Trace Analysis
Middleware Recovery • Anomaly Detection and Classification using Distributed Tracing and Deep Learning. Nedelkoski, S.; Cardoso, J. and Kao, O. In 19th IEEE/ACM
International Symposium on Cluster, Cloud and Grid Computing (CCGRID), 2019.
• Anomaly Detection from System Tracing Data using Multimodal Deep Learning. Nedelkoski, S.; Cardoso, J. and Kao, O. In IEEE 12th
International Conference on Cloud Computing (CLOUD), 2019.
• IAD: Indirect Anomalous VMMs Detection in the Cloud-based Environment. Jindal, A.; Shakhat, I.; Cardoso, J.; Gerndt, M. and Podolskiy, V. In
AIOPS 2020 International Workshop on Artificial Intelligence for IT Operations, Springer, 2021.
Metric Analysis All
• Online Memory Leak Detection in the Cloud-based Infrastructures. Jindal, A.; Staab, P.; Cardoso, J.; Gerndt, M. and Podolskiy, V. In AIOPS 2020
International Workshop on Artificial Intelligence for IT Operations, Springer, 2020.
• Multi-source Distributed System Data for AI-Powered Analytics. Nedelkoski, S.; Bogatinovski, J.; Mandapati, A. K.; Becker, S.; Cardoso, J. and
Multi Source All
Kao, O. In Service-Oriented and Cloud Computing (ESOCC 2020), 28-30 September, 2020, Crete, pages 161-176, 2020.
ULTRA-SCALE AIOPS LAB 9
A sentence why it is important/useful (the “elevator speech”)
Change Management
Intelligent Continuous Verification
BACKGROUND & MOTIVATION DESCRIPTION ANTICIPATED IMPACT
Change Processes Cause Failures
MAIN ACHIEVEMENT Automated Change Management
Fig. Causes of
Automated Service Change Verification
failures [1] Evolution. Analyze different
▪ Upgrades: 16% ▪ Automatic validation of canary phases/gates during service versions of a system to
▪ Bugs: 15% deployments highlight bugs or new/removed
functionality.
▪ Config: 10%
▪ Rollback invalid service deployments to avoid failures in Testing/Deployment.
▪ …
production Differences of systems
Google SRE found deployed in different
+ du-7 e0 t% o co hu ata ng ge es s a [2re ] HOW IT WORKS e pn rov dir uo cn tm ioe nn vt ss ., pe r.g o. d, up cr te io- n.
1. Collect service logs from release n-1. Divide logs into 4 phases. Train a ML Malware Analysis. Differences
model for each phase between original system and a
Problem suspected infected one.
2. Use a technique/algorithm such as NuLog[3], 2KDiff [4] or Drain [5] to
▪ Many incidents are caused by service upgrades evaluate the difference of two logs Fig. Verification results are pushed to Quality Gates after
▪ Manual verification of changes is expensive each service release (PoC)
Previous
Upgrade Upgrade
INNOVATION Phase 0 Phase 1 Phase 2 Phase 3 Phase 4 PATH FORWARD
VM1 VIP0-1 VIP2-5 VIP
Intelligent Continuous Verification Warm up
VM2 VIP
VM3 VIP
1h 30min 1h
Decision point Upgrade Warm up
3. Release nof service. Collect service log for phase p in[1, 2, …]. Use ML
model of phase pto check validity of the service log p
ASSUMPTIONS & LIMITATIONS
Fig. Verification, test, QA trends [3]
▪ Only logs are used (traces and metrics are not analyzed)
▪ Compare logs using ML approaches to detect
▪ Commits involving a high number of modifications causes false
changes in service upgrades or service
positives
reconfiguration Self-Supervised Log Parsing. Nedelkoski, S.; Bogatinovski, J.; Acker, A.;
Cardoso, J. and Kao, O. In European Conference on Machine Learning and
▪ Reason about metric and log comparisons to judge TRL 9: Full operational system. Actual application of the technology in its Principles and Practice of Knowledge Discovery in Databases (ECML-PKDD),
the correctness of service upgrades final form and under real operating conditions 2020.
ULTRA-SCALE AIOPS LAB 10 [1] Why Does the Cloud Stop Computing? Lessons from Hundreds of Service Outages [4] Using finite-state models for log differencing. H. Amar, L. Bao, N. Busany, D. Lo, S. Maoz. ESEC/FSE 2018
[2] https://landing.google.com/sre/sre-book/chapters/introduction/ [5] Drain: An online log parsing approach with fixed depth tree. He, P., Zhu, J., Zheng, Z., Lyu, M.R.,ICWS, 2017
A sentence why it is important/useful (the “elevator speech”)
Anomaly Detection
Detecting Faulty Hypervisors
BACKGROUND & MOTIVATION DESCRIPTION ANTICIPATED IMPACT
Virtualization APPROACH Predictive Maintenance
failures affect VMs abnormal
failure Quorum change-point detection Migrate customers’ VMs before hypervisors fail
but cannot be propagationVM VM VM VM
▪ Analyzes individual time-series, and uses change points and
observed directly VM VM VM VM
voting to decide whether there is an hypervisor malfunction
VM VM VM VM
▪ Key results: F1 72%(2 VMs); 80+%(3+ VMs)
Fig. VMs exhibit problems VM VM VM VM
when the hypervisor has
technical issues Hypervisor
Analyze VM resources to detect
HOW IT WORKS
IaaS Layer correlated anomalies
Problem VM VM VM VM
▪ No effective solution exist to Host Method 1 (Change Points) la m VM VM VM VM
192.168.5.15
detect hypervisors failures 1.Treat time-series as univariate ro VM VM VM VM
2.Detect change points N VM VM VM VM
3.Vote to decide global changes
INNOVATION
VM VM VM VM PATH FORWARD
la
Indirect approach to detect hypervisor Method 2 (Isolation Forest) m VM VM VM VM Current Status
1.Treat time-series as features ro VM VM VM VM
failures by monitoring VMs 2.Detect significant changes N VM VM VM VM ▪ 3 algorithms were proposed and compared
▪ Algorithms were evaluated on existing datasets
Method 3 (ECP E.Divisive) y VM VM VM VM
la
1.Treat time-series as multivariate m VM VM VM VCMorrelated
Fig. Several time- 2.Detect multiple change points o n VM VM VM Va Mnomalies
series generated A
by several VMs VM VM VM VM
running in the
same hypervisor
ASSUMPTIONS & LIMITATIONS
▪ Datasets used for evaluation were collected from simulation
environment, synthetic data generator and public sources
▪ Insight. When an hypervisor is malfunctioning,
IAD: Indirect Anomalous VMMs Detection in the Cloud-based Environments,
resource saturation of VMs suddenly changes, TRL 5. Basic technological components are integrated with realistic Jindal, A.; Shakhat, I.; Cardoso, J.; Gerndt, M. and Podolskiy, V. International
within a window w Workshop on AIOPS 2021, Springer, 2021.
supporting elements so it can be evaluated in testbed environment
ULTRA-SCALE AIOPS LAB 11
A sentence why it is important/useful (the “elevator speech”)
Root Cause Analysis
Application Logs
BACKGROUND & MOTIVATION DESCRIPTION ANTICIPATED IMPACT
Once an anomaly is detected, root cause MAIN ACHIEVEMENT Lower troubleshooting time in 80%
analysis (RCA) is fundamental to resolve
Performs RCA based on application logs
problems
alarms
▪ Anomaly detection in large volume of semi-structured logs 1
2
Several forms ▪ Correlation between metric anomalies and alarms and logs
of RCA exist ▪ Log summarization that 100x reduces amount of data a human
▪ App logs, has to process
metrics, traces,
events, etc. HOW IT WORKS
10000 error messages
Problem 1.Template mining. Fast log
▪ Mainly log severity level has been used for AD & template reconstruction using
RCA Drain algorithm 100 templates
▪ High number of false positives 2.Natural Language
Processing. Language-aware
INNOVATION 50 events
log parsing and keyword PATH FORWARD
extraction using NLP
Use a novel, fast algorithms for RCA using approaches (www.spacy.io) Possible improvements
5 events correlated
log analytics ▪ Topic extraction to allow to select events using
3.Dynamic Grouping. Time-
fuzzy queries, e.g. “network issue” (similar to
series classification using
Twitter hashtag prediction)
Poisson model Grouping using
▪ Online log processing and model construction to
Pearson correlation coefficient
enable RCA immediately once the issue occurs
Distance-aware correlation
▪ Interactive user interface to simplify browsing
through the report
ASSUMPTIONS & LIMITATIONS
▪ On-demand processing requires a certain range of logs to learn
normality
▪ Results depend on service logs quality
▪ Insight. Recent research shows it is possible to
Self-Attentive Classification-Based Anomaly Detection in Unstructured Logs.
model the underlying structure of application logs TRL 5. Basic technological components are integrated with realistic Nedelkoski, S.; Bogatinovski, J.; Acker, A.; Cardoso, J. and Kao, O. In 20th IEEE
using machine learning [1, 2] International Conference on Data Mining (ICDM), 17-20 November, 2020, Italy, 2020.
supporting elements so it can be evaluated in testbed environment
ULTRA-SCALE AIOPS LAB 12
A sentence why it is important/useful (the “elevator speech”)
Anomaly Detection
Multi-modal Anomaly Detection
BBAACCKKGGRROOUUNNDD && MMOOTTIIVVAATTIIOONN DESCRIPTION ANTICIPATED IMPACT
Move from single source, single
MAIN ACHIEVEMENT Lower false positive alarm rate
dimension to multi-source & dimensions
New ensemble AI Algorithms to Detect Anomalies in Multi-
source, Multi-dimension data
Fig. Metrics,
▪ Robust anomaly detection ensemble
logs, and
traces are ▪ Extend approaches such as SkyWalking
monitored by
separated
systems HOW IT WORKS anomaly:No False positive -Ignored
va-api
1 2) R Ave cq eu se ss t as nag dce Dn se r taa ant e log rof Etne Un dAs (u rop ame cr iv )li ys ed stneve tT etr u s-e p noo gus li et riv e - A ol mar am
P ▪ro H sib i ggl ne h am p lse rr ece qn ut ira eg se o ef fa Als De &po Rs Citi Ave oa bla ur sm s. Noisy e m cee tn r it c s s , t r e a, d gniddebm ve hcae e n tt e c t ea o n ylam onA e F Ci og r. eM lau l i s c ae a n aly lies sis
lb
n w r t ) m r i n as a way to improve precision
INNt Oec Vhn Aiq Tue IOs T Rrr ooa bvn uis sf eo r Aam na out mi no an lyt ro gniddebm Eyek Un dAs eu (top ome gr )iv oli ys ed syek ano Km 4aly: e s n