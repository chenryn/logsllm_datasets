:::
这个过程禁用了目前在逻辑卷中启用的 `dm-cache`{.literal} 或者
`dm-writecache`{.literal} 缓存。
::: itemizedlist
**先决条件**
-   在逻辑卷中启用了缓存。
:::
::: orderedlist
**流程**
1.  取消激活逻辑卷：
    ``` screen
    # lvchange --activate n vg/main-lv
    ```
    替换以下值：
    ::: variablelist
    [`vg`{.literal}]{.term}
    :   卷组名称
    [`main-lv`{.literal}]{.term}
    :   启用缓存的逻辑卷名称
    :::
2.  分离 `cachevol`{.literal} 或 `cachepool`{.literal} 卷：
    ``` literallayout
    # lvconvert --splitcache vg/main-lv
    ```
    替换以下值：
    ::: variablelist
    [`vg`{.literal}]{.term}
    :   卷组名称
    [`main-lv`{.literal}]{.term}
    :   启用缓存的逻辑卷名称
    :::
:::
::: itemizedlist
**验证步骤**
-   检查逻辑卷不再连接在一起：
    ``` literallayout
    # lvs --all --options +devices [replaceable]_vg_
    LV      Attr       Type   Devices
    fastvol -wi------- linear /dev/fast-pv
    main-lv -wi------- linear /dev/slow-pv
    ```
:::
::: itemizedlist
**其它资源**
-   `lvmcache(7)`{.literal} man page
:::
:::
:::
[]{#assembly_lvm-activation-configuring-and-managing-logical-volumes.html}
::: chapter
::: titlepage
# []{#assembly_lvm-activation-configuring-and-managing-logical-volumes.html#assembly_lvm-activation-configuring-and-managing-logical-volumes}第 14 章 逻辑卷激活 {.title}
:::
处于活跃状态的逻辑卷可以通过块设备使用。激活的逻辑卷可被访问，并可能有变化。当您创建一个逻辑卷时，它会被默认激活。
有一些情况需要您单独激活逻辑卷，使其在内核中是未知的。您可以使用
`-a`{.literal} 命令的 `lvchange`{.literal}
选项激活或者取消激活独立逻辑卷。
取消激活独立逻辑卷的命令格式如下。
``` literallayout
lvchange -an vg/lv
```
激活独立逻辑卷的命令格式如下。
``` literallayout
lvchange -ay vg/lv
```
您可以使用 `-a`{.literal} 命令的 `vgchange`{.literal}
选项激活或者取消激活卷组中的所有逻辑卷。这等同于在卷组的每个独立逻辑卷中运行
`lvchange -a`{.literal} 命令。
取消激活卷组中所有逻辑卷的命令格式如下。
``` literallayout
vgchange -an vg
```
激活卷组中所有逻辑卷的命令格式如下。
``` literallayout
vgchange -ay vg
```
::: section
::: titlepage
# []{#assembly_lvm-activation-configuring-and-managing-logical-volumes.html#proc_controlling-auto-activation-lvm-activation}控制逻辑卷的自动激活 {.title}
:::
自动激活逻辑卷指的是，在系统启动时基于事件自动激活逻辑卷。当设备在系统中可用（设备在线事件）时，`systemd/udev`{.literal}
会为每个设备运行 `lvm2-pvscan`{.literal} 服务。此服务运行
`pvscan --cache -aay device`{.literal}
命令，该命令读取命名设备。如果该设备属于卷组，则 `pvscan`{.literal}
命令将检查是否在该系统中存在该卷组的所有物理卷。如果是这样，该命令将在那个卷组中激活逻辑卷。
您可以使用 `/etc/lvm/lvm.conf`{.literal}
配置文件中的以下配置选项控制自动激活逻辑卷。
::: itemizedlist
-   `global/event_activation`{.literal}
    当 `event_activation`{.literal} 被禁用时，`systemd/udev`{.literal}
    只会在系统启动过程中自动激活物理卷。如果还没有出现所有物理卷，那么可能不会自动激活一些逻辑卷。
-   `activation/auto_activation_volume_list`{.literal}
    将 `auto_activation_volume_list`{.literal}
    设置为空列表可完全禁用自动激活。将
    `auto_activation_volume_list`{.literal}
    设置为特定的逻辑卷和卷组将自动激活限制为那些逻辑卷。
:::
有关设置这些选项的详情请参考 `/etc/lvm/lvm.conf`{.literal} 配置文件。
:::
::: section
::: titlepage
# []{#assembly_lvm-activation-configuring-and-managing-logical-volumes.html#proc_controlling-logical-volume-activation-lvm-activation}控制逻辑卷激活 {.title}
:::
您可以使用以下方法控制逻辑卷的激活：
::: itemizedlist
-   通过 `activation/volume_list`{.literal} 文件中的
    `/etc/lvm/conf`{.literal}
    设置。这可让您指定激活哪些逻辑卷。有关使用这个选项的详情请参考
    `/etc/lvm/lvm.conf`{.literal} 配置文件。
-   逻辑卷的激活跳过标签。当为逻辑卷设定这个标签时，会在正常的激活命令中跳过该卷。
:::
您可以用下列方法在逻辑卷中设定激活跳过标签。
::: itemizedlist
-   您可以在创建逻辑卷时关闭激活跳过标签，方法是指定
    `lvcreate`{.literal} 命令的 `-kn`{.literal} 或者
    `--setactivationskip n`{.literal} 选项。
-   您可以通过指定 `lvchange`{.literal} 命令的 `-kn`{.literal} 或者
    `--setactivationskip n`{.literal} 选项为现有逻辑卷关闭激活跳过标签。
-   您可以为使用 `lvchange`{.literal} 命令的 `-ky`{.literal} 或者
    `--setactivationskip y`{.literal} 选项关闭的卷再次打开激活跳过标签。
:::
要确定是否为逻辑卷设置了激活跳过标签，请运行 `lvs`{.literal}
命令，它会显示 `k`{.literal} 属性，如下例所示。
``` literallayout
# lvs vg/thin1s1
LV         VG  Attr       LSize Pool  Origin
thin1s1    vg  Vwi---tz-k 1.00t pool0 thin1
```
您可以激活带有 `k`{.literal} 属性设置的逻辑卷，方法在在标准
`-ay`{.literal} 或 `--activate y`{.literal} 选项之外使用 `-K`{.literal}
或 `--ignoreactivationskip`{.literal} 选项。
默认情况下，精简快照卷在创建时将其标记为激活跳过。您可以使用
`auto_set_activation_skip`{.literal} 中的 `/etc/lvm/lvm.conf`{.literal}
设置控制在新精简快照卷中的默认激活跳过设置。
下面的命令激活设定了激活跳过标签的精简快照逻辑卷。
``` literallayout
# lvchange -ay -K VG/SnapLV
```
以下命令在没有激活跳过标签的情况下创建精简快照
``` literallayout
# lvcreate --type thin -n SnapLV -kn -s ThinLV --thinpool VG/ThinPoolLV
```
下面的命令可从快照逻辑卷中删除激活跳过标签。
``` literallayout
# lvchange -kn VG/SnapLV
```
:::
::: section
::: titlepage
# []{#assembly_lvm-activation-configuring-and-managing-logical-volumes.html#proc_activating-logical-volumes-in-a-cluster-lvm-activation}激活共享逻辑卷 {.title}
:::
您可以使用 `lvchange`{.literal} 和 `vgchange`{.literal} 命令的
`-a`{.literal} 选项控制共享逻辑卷的逻辑卷激活，如下所示。
::: informaltable
  命令                         激活
  ---------------------------- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  `lvchange -ay|e`{.literal}   以相互排斥的模式激活共享逻辑卷，只允许一个主机激活逻辑卷。如果激活失败，如逻辑卷在另外一个主机上激活一样，会报告一个错误。
  `lvchange -asy`{.literal}    以共享模式激活共享逻辑卷，允许多个主机同时激活逻辑卷。如果激活失败，如逻辑卷只在另一个主机中激活时一样，会出错。如果逻辑类型禁止共享访问，比如快照，命令将报告错误并失败。无法从多个主机同时使用的逻辑卷类型包括 thin、cache、raid 和 snapshot。
  `lvchange -an`{.literal}     取消激活逻辑卷。
:::
:::
::: section
::: titlepage
# []{#assembly_lvm-activation-configuring-and-managing-logical-volumes.html#proc_setting-lvm-activation-mode-lvm-activation}在缺少设备的情况下激活逻辑卷 {.title}
:::
您可以通过将 `lvchange`{.literal} 命令的`activation_mode`{.literal}
参数设为以下值之一来在缺失设备的情况下激活逻辑卷。
::: informaltable
  激活模式   含义
  ---------- ------------------------------------------------------------------
  complete   只允许激活没有缺失物理卷的逻辑卷。这是限制性最强的模式。
  degraded   允许激活含有缺失物理卷的 RAID 逻辑卷。
  partial    允许激活任何含有缺失物理卷的逻辑卷。这个选项只应用于恢复或修复。
:::
`activation_mode`{.literal} 的默认值由 `/etc/lvm/lvm.conf`{.literal}
文件中的 `activation_mode`{.literal} 设置决定。如需更多信息，请参阅
`lvmraid`{.literal}(7)手册页。
:::
:::
[]{#assembly_device-scan-configuring-and-managing-logical-volumes.html}
::: chapter
::: titlepage
# []{#assembly_device-scan-configuring-and-managing-logical-volumes.html#assembly_device-scan-configuring-and-managing-logical-volumes}第 15 章 控制 LVM 设备扫描[]{#assembly_device-scan-configuring-and-managing-logical-volumes.html#proc-controlling-device-scans-with-filters-device-scan} {.title}
:::
您可以在 `/etc/lvm/lvm.conf`{.literal} 文件中配置过滤器来控制 LVM
设备扫描。`lvm.conf`{.literal}
文件中的过滤器由一系列简单正则表达式组成，它们应用到 `/dev`{.literal}
目录中的设备名称，以确定是否接受或拒绝找到的每个块设备。
::: section
::: titlepage
# []{#assembly_device-scan-configuring-and-managing-logical-volumes.html#the-lvm-device-filter_device-scan}LVM 设备过滤器 {.title}
:::
LVM 工具扫描 `/dev`{.literal} 目录中的设备，并在每个设备中检查 LVM
元数据。`/etc/lvm/lvm.conf`{.literal} 文件中的过滤器控制 LVM
扫描的设备。
该过滤器是过滤特征列表，LVM 在 `/dev`{.literal} 目录，或
`/etc/lvm/lvm.conf`{.literal} 文件中 `dir`{.literal}
关键字指定的目录列表中扫描到的每个设备中应用。过滤特征是正则表达式，前面使用
`a`{.literal} 代表[*接受*]{.emphasis}，`r`{.literal}
代表[*拒绝*]{.emphasis}。匹配设备的列表中的第一个正则表达式决定了 LVM
接受还是拒绝（忽略）该设备。LVM 接受与任何模式不匹配的设备。
以下是该过滤器的默认配置，可扫描所有设备：
``` screen
filter = [ "a/.*/" ]
```
:::
::: section
::: titlepage
# []{#assembly_device-scan-configuring-and-managing-logical-volumes.html#examples-of-lvm-device-filter-configurations_device-scan}LVM 设备过滤器配置示例 {.title}
:::
下面的例子显示使用过滤器控制 LVM 扫描设备的过滤器。