            res2 = HttpGet(api."%27%20or%202=1--+","");
            if(GetStrLength(res2[0]) == GetStrLength(res[0])){
                return 1;
            }
        }
        return 0;
    }
    function track(className,methodName,url){
        array allNode;
        allNode = TrackVarIntoFun(className,methodName,0,"org/springframework/jdbc/core/JdbcTemplate","query",0);
        size = GetArrayNum(allNode);
        if(StrFindStr(GetJavaSentence(allNode[ToInt(size-1)]),".query(",0) != "-1"){
            i = 0;
            print(methodName."白盒测试调用链跟踪:");
            cc = 7;
            cs = 1;
            while(i "){track(className,methods[i],classPath);
    }
            i = ToInt(i+1);
        }
    }
让我们运行一下，看一下最终执行的结果：
可以看到我们最终找到了两处白盒与黑盒完全符合要求的调用链，这样子的调用链是有极大可能存在漏洞的。
## 优化
在上述的代码脚本中，其实还是有可优化的的地方的，当程序项目比较大时，类就无法通过手动输入进行测试，所以可以通过`GetAllClassName`类进行测试，所以可以进行如此优化。
    function SQLTrack(className){
        an = GetClassAnnotation(className);
        classPath = "http://127.0.0.1:8080".getSpringAnnotationValue(an);
        methods = GetAllMethodName(className);
        size = GetArrayNum(methods);
        i = 0;
        while(i "){track(className,methods[i],classPath);}
            i = ToInt(i+1);
        }
        return 0;
    }
    function main(args){
        allClass = GetAllClassName();
        size = GetArrayNum(allClass);
        i = 0;
        while(i `。
最终可以得到如下：
~工作顺利