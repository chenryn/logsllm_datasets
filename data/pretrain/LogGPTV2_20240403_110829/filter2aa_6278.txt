```plaintext
.TH CP 1 2022年9月 "GNU coreutils 9.1" 用户命令
.SH 名称
cp \- 复制文件和目录
.SH 概述
\fBcp\fP [\fI选项\fP]... [\fI\-T\fP] \fI来源 目标\fP
.br
\fBcp\fP [\fI选项\fP]... \fI来源\fP... \fI目录\fP
.br
\fBcp\fP [\fI选项\fP]... \fI\-t 目录 来源\fP...
.SH 描述
从指定的来源文件复制到目标位置，或者将多个源文件复制到目标目录中。
必选参数对长短选项同时适用。

.TP 
\fB\-a, \-\-archive\fP
等同于 \fB\-dR\fP \fB\-\-preserve\fP=\fIall\fP。
.TP 
\fB\-\-attributes\-only\fP
仅复制文件属性，不复制文件数据。
.TP 
\fB\-\-backup\fP[=\fI控制参数\fP]
为每个已存在的目标文件创建一个备份。
.TP 
\fB\-b\fP
类似于 \fB\-\-backup\fP，但不接受参数。
.TP 
\fB\-\-copy\-contents\fP
在递归模式下复制特殊文件的内容。
.TP 
\fB\-d\fP
等同于 \fB\-\-no\-dereference\fP \fB\-\-preserve\fP=\fIlinks\fP。
.TP 
\fB\-f, \-\-force\fP
如果目标文件已存在且无法打开，则删除并重试（与 \fB\-n\fP 选项冲突）。
.TP 
\fBi, \-\-interactive\fP
覆盖前提示用户（覆盖先前的 \fB\-n\fP 选项）。
.TP 
\fB\-H\fP
跟随显式给出的符号链接。
.TP 
\fB\-l, \-\-link\fP
使用硬链接代替复制。
.TP 
\fB\-L, \-\-dereference\fP
总是跟随源文件中的符号链接。
.TP 
\fB\-n, \-\-no\-clobber\fP
不要覆盖已有的文件（覆盖先前的 \fB\-i\fP 选项）。
.TP 
\fB\-P, \-\-no\-dereference\fP
永远不要跟随源文件中的符号链接。
.TP 
\fB\-p\fP
等同于 \fB\-\-preserve\fP=\fImode,ownership,timestamps\fP。
.TP 
\fB\-\-preserve\fP[=\fI属性列表\fP]
保留指定的属性（默认：模式、所有权、时间戳），如果可能的话还包括上下文、链接、xattr 和 all。
.TP 
\fB\-\-no\-preserve\fP=\fI属性列表\fP
不保留指定的属性。
.TP 
\fB\-\-parents\fP
在目标目录下使用完整的源文件路径。
.TP 
\fB\-R, \-r, \-\-recursive\fP
递归地复制文件。
.TP 
\fB\-\-reflink\fP[=\fIWHEN\fP]
控制克隆/写入时复制（CoW）副本。详情见下文。
.TP 
\fB\-\-remove\-destination\fP
在尝试打开每个已存在的目标文件之前对其进行删除（与 \fB\-\-force\fP 行为相反）。
.TP 
\fB\-\-sparse\fP=\fIWHEN\fP
控制稀疏文件的创建。详情见下文。
.TP 
\fB\-\-strip\-trailing\-slashes\fP
移除每个源文件参数后的任何末尾斜杠。
.TP 
\fB\-s, \-\-symbolic\-link\fP
使用符号链接代替复制。
.TP 
\fB\-S, \-\-suffix\fP=\fI后缀名\fP
使用给定名称代替常用备份后缀名。
.TP 
\fB\-t, \-\-target\-directory\fP=\fI目录\fP
将所有源文件参数给出的内容复制到目标目录中。
.TP 
\fB\-T, \-\-no\-target\-directory\fP
将目标文件当作普通文件对待（而不是目录）。
.TP 
\fB\-u, \-\-update\fP
仅在源文件比目标文件新或目标文件不存在的情况下复制。
.TP 
\fB\-v, \-\-verbose\fP
解释正在发生的情况。
.TP 
\fB\-x, \-\-one\-file\-system\fP
停留在当前文件系统中。
.TP 
\fB\-Z\fP
将目标文件 SELinux 安全上下文设置为默认类型。
.TP 
\fB\-\-context\fP[=\fICTX\fP]
类似 \fB\-Z\fP，或者如果给定了上下文（CTX）则将 SELinux 或 SMACK 安全上下文设置为给定值。
.TP 
\fB\-\-help\fP
显示此帮助信息并退出。
.TP 
\fB\-\-version\fP
显示版本信息并退出。

默认情况下，程序会使用一种粗糙的启发式算法探测源文件是否是稀疏的，若判定为稀疏，则目标文件也会以稀疏形式创建。这个行为可以通过
\fB\-\-sparse\fP=\fIauto\fP 指定。若指定
\fB\-\-sparse\fP=\fIalways\fP，将在源文件包含足够多内容为零的字节序列时将其视作稀疏文件。使用
\fB\-\-sparse\fP=\fInever\fP 以禁止创建稀疏文件。

当指定了 \fB\-\-reflink\fP[=\fIalways\fP]
时，进行轻量级复制，其中的数据块仅在被修改时进行复制。如果这样的复制失败，或无法实行，或者指定了 \fB\-\-reflink\fP=\fIauto\fP
时，程序将会回退到标准复制操作。使用 \fB\-\-reflink\fP=\fInever\fP 可以确保永远进行标准复制。

备份的后缀为“~”，除非设置了 \fB\-\-suffix\fP 或者 SIMPLE_BACKUP_SUFFIX。版本控制方式可以使用 \fB\-\-backup\fP
选项或者 VERSION_CONTROL 环境变量进行指定。可用的值如下：

.TP 
none, off
永远不制作备份（即使给出了 \fB\-\-backup\fP ）。
.TP 
numbered, t
制作编号的备份。
.TP 
existing, nil
如果已编号副本存在则编号，否则采用简单方式。
.TP 
simple, never
总是制作简单备份。

作为一个特例，cp 将在同时给出 force 选项与 backup 选项，并且源文件和目标文件是同一个已存在普通文件的情况下制作备份副本。
.SH 作者
由 Torbjorn Granlund、David MacKenzie 和 Jim Meyering 编写。
.SH 报告错误
GNU coreutils 的在线帮助：
.br
请向 <报告翻译错误> 报告翻译错误。
.SH 版权
Copyright © 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later.
.br
This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law.
.SH 参见
完整文档请见：
.br
<完整文档链接>
或者在本地使用：
.info "(coreutils) cp invocation"
```