### Flip Occurrence and Its Effects

A bit flip can occur on a co-resident page, which is part of the victim row. The co-resident physical page may be mapped to a virtual page used by the same attack process or by another process, including the system process. The effects of unwanted bit flips depend on the process they corrupt. If a system process memory is corrupted, it can lead to a system crash or segmentation fault. Even if a non-critical process memory is affected, the corrupted process may experience various errors.

Co-resident pages in a row are determined by the mapping algorithm between physical addresses and memory bank/row, which varies based on hardware configuration. Single-channel and dual-channel configurations have different mapping algorithms [18, 27]. In a single-channel configuration, two pages are co-resident in a row (Figure 4). In contrast, a dual-channel configuration has more than two pages in a row due to interleaved cache line accesses across two channels. As the number of co-resident pages increases, the probability of inducing unwanted bit flips via Rowhammer also increases.

### Effects of Unwanted Bit Flips

| Co-resident Page Corruption | Attack Failure | System Crash | Privilege Escalation | Sandbox Escape | Rowhammer.js | Dedup Est Machina | Flip Feng Shui | Xiao et al. | Drammer | Gruss et al. |
|-----------------------------|----------------|--------------|----------------------|----------------|---------------|--------------------|-----------------|--------------|----------|--------------|
| (cid:32)                     | (cid:32)       | (cid:32)     | (cid:32)             | (cid:32)       | (cid:32)      | (cid:71)(cid:35)   | (cid:32)        | (cid:32)     | (cid:32) | (cid:32)     |

- **(cid:32)**: The attack suffers from the problem.
- **(cid:35)**: The attack is resistant to the problem.
- **(cid:71)(cid:35)**: Special cases with added footnotes.

**Notes:**
- Attackers can check for unwanted bit flips on the victim page because they have read permission to it.
- All pages in the victim row are controlled by the attacker unless the mapping algorithm is complex (e.g., dual-channel configuration).

### Method: Pinpoint Rowhammer

We introduce a novel Rowhammer method, Pinpoint Rowhammer, designed to suppress unwanted bit flips during attacks. This method aims to induce the target bit flip while suppressing unwanted bit flips by leveraging the dependency between bit flips and data patterns.

#### Threat Model

- An attacker has user privileges on the victim machine.
- The attacker can modify the data of aggressor rows but not the victim row.
- The data stored in the victim row at the time of the attack is unknown and is filled with random data for evaluation.
- The attacker uses double-sided Rowhammer with transparent hugepages, as described in [20].

#### Dependency Between Bit Flips and Data Patterns

Pinpoint Rowhammer is based on the observation that the induction of a bit flip depends on the data in the aggressor and victim rows. Previous research has shown a relationship between bit flips and the data in other cells [13, 14].

**Hypothesis:**
- A bit flip is induced only if a specific data pattern is stored in the aggressor rows.

**Experiment:**
- We conducted experiments with eight data patterns (Figure 5).
- A pattern is denoted as \( p_{ijk} \), where \( i, j, k \) represent the data of the upper aggressor row, victim row, and lower aggressor row, respectively.
- The effectiveness of a pattern \( f(c, p_{ijk}) \) and the set of effective patterns \( E(c) \) are defined as follows:
  \[
  f(c, p_{ijk}) = 
  \begin{cases} 
   1 & \text{if cell } c \text{ is flipped by } p_{ijk} \\
   0 & \text{otherwise}
  \end{cases}
  \]
  \[
  E(c) = \{ p_{ijk} \mid f(c, p_{ijk}) = 1 \}
  \]

**Results:**
- 32.4% of vulnerable cells are flipped by one data pattern.
- 65.5% of vulnerable cells are flipped by two patterns.
- Only 2.2% of vulnerable cells are flipped by three or four patterns.
- No cell is flipped by more than four patterns.

This confirms that most cells are flipped by specific data patterns, supporting our hypothesis.

#### Pinpoint Rowhammer

**Main Idea:**
- Use different data patterns for the target bit and non-target bits.
- For the target bit, use an effective pattern \( p_e \) to induce the bit flip.
- For non-target bits, use an ineffective pattern \( p_i \) to suppress unwanted bit flips.

**Alternating Pattern:**
- To reduce the effect of misclassified effective patterns, we developed an alternating pattern.
- This pattern alternates between multiple ineffective patterns, reducing the number of accesses with any single pattern.
- Even if a misclassified effective pattern is used, the number of accesses is insufficient to induce bit flips.

**Victim-Agnostic Patterns:**
- Four victim-agnostic patterns are obtained by changing the data of the upper and lower aggressor rows (Figure 7).
- A victim-agnostic pattern \( p_{i*j} \) is considered effective if at least one of its related patterns is effective.
  \[
  f(c, p_{i*j}) = f(c, p_{i0j}) \lor f(c, p_{i1j})
  \]

**Example:**
- Figure 8 shows an example of the alternating pattern.
- The scan phase identifies vulnerable cells, and the alternating pattern is applied to suppress their bit flips.

**Proof-of-Concept Experiment:**
- 512 rows with 355 vulnerable cells were tested.
- The alternating pattern suppressed 351 (98.9%) of the vulnerable cells.
- Even in the worst case, where all vulnerable cells are undetected, the alternating pattern suppressed 341 (96.1%) of the cells.

**Putting It Together:**
- Pinpoint Rowhammer uses an effective pattern for the target bit and the alternating pattern for other bits.
- Figure 9 shows an example of a Pinpoint Rowhammer process flipping a target cell.

**Operation Sequence:**
- Pinpoint Rowhammer requires write operations to overwrite the data of aggressor rows.
- Write operations are less effective than read operations for Rowhammer, so we reduce the number of write operations to maintain efficiency.

By combining these techniques, Pinpoint Rowhammer effectively induces the target bit flip while minimizing unwanted bit flips, enhancing the precision and reliability of Rowhammer attacks.