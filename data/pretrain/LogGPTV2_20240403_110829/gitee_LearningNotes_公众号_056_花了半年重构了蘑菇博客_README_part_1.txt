大家好，我是 **陌溪**。
这两天在蘑菇群里，有个前端小伙伴发来一个关于蘑菇博客的重构项目，发现重构的很不错呢，解决了蘑菇目前存在的一些痛点问题，例如评论层级过长无法回复，专题侧边显示不友好等等。
同时，在小陈深入沟通得知，他是从今年三月份就开始重写蘑菇博客的后台的，中间也遇到过一些难题，差点想放弃，但是因为内心的执念，想不断的挑战自己，经历了半年的时间，终于把蘑菇的基础模块都完成了，并且能成功运行起来了。
![image-20211031000009550](images/image-20211031000009550.png)
陌溪也跑到小陈的 **Gitee** 主页上，能看到从今年的 **3** 月 **1** 号开始，一直到现在 **10** 月底，一直在保持对蘑菇的重构，直到前两天完善了博客的搭建文档，终于把它公布于众。
![image-20211031000848836](images/image-20211031000848836.png)
> 小陈的主页：https://gitee.com/hrbust_cheny
>
> pupu_blog：https://gitee.com/hrbust_cheny/pupu_blog
看到现在的小陈，就想起了曾今的自己。蘑菇博客项目最开始的搭建蘑菇博客的初心是为了巩固和学习 **Java** 开发的一些知识，因此项目的技术选型都是当时比较新颖的技术，可能这些技术并不一定适用于博客系统，但是我也想着能尽可能把更多的技术融合进来，毕竟通过自己手把手的操作一遍，才能够加深对技术的理解。
愿每一份努力都不会被辜负,每一分坚持都将会有收获，让我们一起来看看**小陈**在这半年时间里的付出吧~。
> 下面第一人称是我们的主人公：小陈
## 为什么要自己重写一个博客
一直想拥有一个属于自己的博客网站，用来总结自己的学习心得，因为发现自己记性不好，知识学完就忘，并且学到的知识不成体系，东一块西一块，这样就导致了，当每次间隔一段时间不用某个技术时，都需要重学一遍（其实学习就是个重复的过程，这种现象也很正常）。
但是肯定会有很多人有疑问了，为什么要自己去搭博客网站，直接用现成网站记笔记（比如，[掘金](https://juejin.cn/)、[知乎](https://www.zhihu.com/)、[思否](https://segmentfault.com/)、[简书](https://www.jianshu.com/)、[CSDN](https://www.csdn.net/)、[博客园](https://www.cnblogs.com/) 等等），再不然直接用一些现成的技术搭网站（比如，[docsify](https://docsify.js.org/#/)、[vuepress](https://vuepress.vuejs.org/zh/)、[WordPress](https://cn.wordpress.org/) 等等），它不香吗？
怎么说呢，很香，确实香，但是当了解过这些方式，并尝试过其中的一些后，最终决定还是自己开发一个，究其原因，是出于下面几点考虑的（存是个人想法）
- 直接在现成的网站上记笔记，是有必要的，并且是需要长期坚持的，但是总感觉写完的笔记知识点太散，没有成系统，虽然可以加标签，加专题，进行一个归类，但是我个人感觉操作起来还是不方便，差点意思，我想要归的更细（比较喜欢这个网站的风格，主要喜欢这种归类，[现代 JavaScript 教程](https://zh.javascript.info/)）
- 如果直接用现成的技术搭博客，总觉得没有灵魂。既然是自己的网站了，写代码还得遵循别人的风格，就很别扭。所以我更建议用上面提到的技术（[docsify](https://docsify.js.org/#/)、[vuepress](https://vuepress.vuejs.org/zh/)等）去写一些手册、说明书之类的。并且，既然搭博客网站的初衷是为了学习，而学习的方法是一个技术一个技术去尝试、去复现、去思考。如果直接用现成的技术很快的搭建起了自己的网站，虽然节省了很多时间，但是这其中少了很多学习技术的机会。比如，网页怎么布局的，前后端怎么交互的，浏览器怎么加载的，代码怎么打包的，网站怎么部署的，等等等等。
> tip：其实选择怎样的学习方式，全都取决于自己。只要坚持下来就一定会有收获。经验都是在不断的尝试之后总结出来的，最重要的就是行动起来。
所以，结合上面的几点考虑，确定了下面几个大目标
- 自己从零开发一个博客网站，用来记录日后的学习笔记，不管开发需要花费多少时间，坚持下来。
- 功能设计方面，遵循自己的想法来，除了博客应有的功能外，需要有一个专题功能，可以将日后学习到的知识详细归类，形成体系。
- 别人看网站的时候可以和我有交互，有反馈。
- 把项目开源出来。
于是针对于上面的几点大目标，我开始在 **Github** 和 **Gitee** 里搜索相关的项目，当我看到 [蘑菇博客](http://www.moguit.cn/#/) 的时候，顿时眼前一亮，发现所有的想法，都在这个项目上不谋而合了。
不过项目的后台陌溪大佬（蘑菇博客的作者）是用 **Java** 写的，这对于我一个小前端来说**学习成本太大**，所以就想着能不能把后台改成 **node** 版本的。心动不如行动，于是就开始了我的重写之路，最终历经小半年，终于把大概功能重写完成，还有很多功能日后有时间慢慢完善。
在这期间我一共做了下面几件事
- 重写蘑菇博客的前台和后台静态页面
- 重写留言和评论组件（[仿Gitee](https://gitee.com/hrbust_cheny/pupu_blog)）
- 重写专题组件（专题列表仿照 [KuangStudy](https://www.kuangstudy.com/course)，专题详情仿照  [现代JavaScript 教程](https://zh.javascript.info/) ）
- 重写文章目录组件 （仿[Gitee的Readme目录](https://gitee.com/hrbust_cheny/pupu_blog)）
- 重写登录组件 （仿 [掘金登录](https://juejin.cn/) ）
- 重写个人中心 （仿 [掘金个人中心](https://juejin.cn/)）
- 重写后台服务 （结合自己业务模块，自己搭了一套 **koa2** 后台架子）
- 为了提高接口和后台页面开发效率，自定义代码生成器 （基于导出的 **sql** 文件，根据对应字段和字段注释，一键生成接口和后台代码）
## 我是如何仿写的
可能会有很多人（也包括之前的我 ┑(￣Д ￣)┍ ），总是会将想法只停留在想法上，一直拖着，不付诸于行动。就拿开发博客来说，早在上大学的时候就有这种想法，但是一直拖着就是不做，这都工作一年了才刚刚开始，想想自己虚度的那些光阴，真是太可惜了，不过学习什么时候都不算晚，坚持下来就会有收获。种一棵树最好的时间是十年前，其次就是现在嘛😄
关于如何仿写，诀窍就是一句话：耐下心，沉住气，一点点推进自己的计划（后来发现做任何事都是这样子的~）。比如决定仿写蘑菇博客时，首先就是将这个项目拉下来，在本地运行起来，把项目跑跑看（好的项目文档也不会差，蘑菇博客太 **nice** 了，再次致敬陌溪大佬）。
按照博客的文档步骤，一步一步将环境都安装下来，遇到问题的时候也不要慌，先定位问题，然后尝试自己解决问题，先百度或者 **Google** 去搜索看看，还是没有就去 **issue** 里找找，如果还是没有就去作者往期的文档里找找，应该也会有，所有的都尝试一个遍时，还是没有解决，这时候就可以去交流群里问一下大佬。
描述问题的时候应该注意一点，把问题的场景，代码、报错、以及自己尝试的解决方式最好都描述一下，再带上清晰完整的截图，基本上懂得人都会帮你解答了（发现搞技术的人都很存粹，越厉害的大佬越有耐心，如果不给你解答，多半是问问题的方式不对，或者大佬确实太忙 😂 ）。
剩下做的就是见招拆招，面向百度编程、面向文档编程，把功能一步一步的实现，只要坚持下来，你会发现自己竟然也能这么厉害 🤭
不过当你回顾自己做出来的东西时，会有一个大大的疑惑——这玩意我是怎么做出来的 😳 ？这就是我为什么一直想要做一个自己的博客网站的原因，我太容易忘了！
而当我有自己的网站时，我可以每次把自己学到的知识记录下来，每次再回过头想要了解自己的知识体系时，可以有一个对应的文章可循。
博客网站可以把自己学的知识量化，可以把它们分成体系，技术类的、生活类的、娱乐类的、工具类的、常识类的等等等。相信日后如果能一直坚持下来，定会惊叹自己的知识量吧😄，加油加油💪
## 我重构了哪些地方？
在重写蘑菇博客时，我也根据自己的喜好做了一些调整，下面做一个简单的汇总。
### 布局上做了细微调整
设计页面时，我设计了一个宽  **1200px** 的版心，所有的内容都在版心里，目前并没有做移动端适配，以后可能会单独写一套移动端的页面。
![改版后的首页](http://cdn.qiniu.bnbiye.cn/img/202110291610853.png)
### 将时间、分类、标签 三种归档方式移动至一个页面中
当时觉得这三种归档方式都算是归档，索性就移动到了一起，点击不同的tab就可以进行切换了，节省了导航栏很多空间。
![改版后的归档页面](http://cdn.qiniu.bnbiye.cn/img/202110291611594.png)
### 重写了专题详情的样式
蘑菇博客采用的是侧边栏弹窗的方式，每一个专题下面的文章以列表的形式展示。因为我想要分的更细，所以就单独写了一个专题详情页面，页面 **UI** 参考的是 [现代 JavaScript 教程](https://zh.javascript.info/)。比较喜欢这个网站的布局风格，所以就仿写了一下，效果如下：
![专题页面](http://cdn.qiniu.bnbiye.cn/img/202110291551289.png)
### 重写专题列表样式
设计博客最初的想法是以后可以把方方面面学到的知识都记录下来（总感觉自己记性不好，那以后就干脆都记下来吧，┑(￣Д ￣)┍）。所以我希望专题的分类可以有多种类型，不限于技术类的，也可能是生活类的、摄影类的等等等等。毕竟活到老学到老嘛。所以就借鉴了 [KuangStudy](https://www.kuangstudy.com/course) 课程分类的 **UI**，效果如下：
![专题列表样式](http://cdn.qiniu.bnbiye.cn/img/202110291601395.png)
### 重写了评论组件
自己今年访问最多的网站应属 [Gitee](https://gitee.com/hrbust_cheny/pupu_blog)了，毕竟几乎大部分时间都在上面提交代码（ **Gihub** 国内访问太揪心了( ╯□╰ )）。看了很多网站的评论模块，感觉都没有 **Gitee** 的评论做的清晰（单独指的 **PC** 端），就比如刷微博、逛知乎的时候，有时候我就看不太懂是谁回复的谁，还得稍微思考一下，可能自己习惯 **Gitee** 这种直接罗列出来的风格，然后也比较喜欢 **Gitee** 评论的留言相互点赞功能，所以就高仿 **Gitee** 的评论模块，自己也单独实现了一下，效果如下：
![重写评论组件](http://cdn.qiniu.bnbiye.cn/img/202110291608965.png)
### 重写了文章贡献度模块
> （功能尚未完成，只有静态页面）
蘑菇博客使用 **Echarts** 实现的文章贡献度展示，根据每天发布文章的多少来显示对应的小点，每天更新越多小点覆盖面积就越大。我也挺喜欢这个功能的，毕竟这个功能也能激励自己持续学习嘛。
每当看到一页绿油油的小点时，都会有一种成就感，原来自己不知不觉坚持了那么久呢。将仿写进行到底，因为习惯了 **Gitee**，所以继续仿写。
**Gitee** 这块实现的比较巧妙，所有的方格实际都是一个个小块 **div** ，使用 **flex** 布局和定位实现的。相较于 **Github** 用的 **canvas** 简单不少，并且也符合我的审美，实现效果如下：
![文章贡献度](http://cdn.qiniu.bnbiye.cn/img/202110291623362.png)
### 重写了登录弹窗组件，支持QQ登录、Gitee登录