title:POSTER: Scanning-free Personalized Malware Warning System by Learning
Implicit Feedback from Detection Logs
author:Jyun-Yu Jiang and
Chun-Liang Li and
Chun-Pai Yang and
Chung-Tsai Su
POSTER: Scanning-free Personalized Malware Warning
System by Learning Implicit Feedback from Detection Logs
Jyun-Yu Jiang†, Chun-Liang Li†, Chun-Pai Yang†, Chung-Tsai Su‡
†Department of Computer Science and Information Engineering, National Taiwan University, Taiwan
PI:EMAIL, {r01922001, b99902109}@csie.ntu.edu.tw,
‡Trend Micro Inc., Taiwan
PI:EMAIL
ABSTRACT
Nowadays, World Wide Web connects people to each other
in many ways ubiquitously. Followed along with the con-
venience and usability, millions of malware infect various
devices of numerous users through the web every day.
In
contrast, traditional anti-malware systems detect such mal-
ware by scanning ﬁle systems and provide secure environ-
ments for users. However, some malware might not be de-
tected by traditional scanning-based detection systems due
to hackers’ obfuscation techniques. Also, scanning-based ap-
proaches cannot caution users for uninfected malware with
high risks. In this paper, we aim to build a personalized mal-
ware warning system. Diﬀerent from traditional scanning-
based approaches, we focus on discovering the potential mal-
ware which has not been detected for each user.
If users
and the system know the potentially infected malware in ad-
vance, they can be alert against the corresponding risks. We
propose a novel approach to learn the implicit feedback from
detection logs and give a personalized risk ranking of mal-
ware for each user. Finally, the experiments on real-world
detection datasets demonstrate the proposed algorithm out-
performs traditional popularity-based algorithms.
Categories and Subject Descriptors
H.3.3 [Information Search and Retrieval]: Informa-
tion ﬁltering; K.6.5 [Management of computing and in-
formation systems]: Security and Protection
Keywords
Computer Security; Malware Detection; Malware Warn-
ing System; Personalized Collaborative Filtering.
1.
INTRODUCTION
The concept of malware has been studied for a long time
[1]. The malware, abbreviated from the malicious software,
is the software which intentionally injures or harms users’
systems or devices such as computer viruses and worms.
A usual way to detect and prevent the malware is using
Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage, and that copies bear this notice and the full ci-
tation on the ﬁrst page. Copyrights for third-party components of this work must be
honored. For all other uses, contact the owner/author(s). Copyright is held by the
author/owner(s).
CCS’14, November 3–7, 2014, Scottsdale, Arizona, USA.
ACM 978-1-4503-2957-6/14/11.
http://dx.doi.org/10.1145/2660267.2662359.
anti-malware software or systems. An anti-malware system
monitors users’ devices in many ways, such as analyzing net-
work packets and scanning users’ ﬁle system [8]. Although
the anti-malware software can recognize malware patterns
well from contents of packets or binaries, there are still some
drawbacks. First, a scan may be time-consuming when there
are myriad and large ﬁles in the ﬁle system [2]. Second, some
computer malware may still be undetected due to undiscov-
ered variations with distinct binary codes and incorrect us-
ages of users. For example, a user might accidentally turn oﬀ
the ﬁrewall so that the anti-malware software cannot work
suﬃciently. Furthermore, all scanning-based systems can-
not detect any “nonexistent” malware because the devices
have not been infected. Therefore, a warning system can
detect uninfected malware with high risk of future infection
without scanning is desired.
In this work, we focus on building a personalized malware
warning system without any traditional scanning technique.
We present a novel approach based on detection logs and
collaborative ﬁltering (CF) algorithms to tackle the mal-
ware detection problem. Although CF algorithms have been
widely used in recommender systems [3, 7], applying CF al-
gorithms to detect malware has not been well-studied. Fur-
thermore, CF algorithms can detect malware without scan-
ning, so it is possible to discover the “future” malware. That
is, we can help the user to identify high-risk existing mal-
ware before the infection. As the evidences, experiments on
large-scale real-world detection logs show that CF is useful
for malware detection and malware warning system.
2. PROBLEM STATEMENT
Given a set of users U and a set of known malware W ,
each entry (u, w) in the malware detection logs S ⊆ U × W
represents that the user u was infected by the malware w.
For each user u, the personalized malware warning systems
aims to estimate the infection risks r(u, wi) and r(u, wj)
such that r(u, wi) > r(u, wj) for all wi with the higher risk
of user u than wj. Then the system ranks the malware for
each user by the estimated risks.
Consider that risks r(u, w) can ﬁll in a |U| by |W| ma-
trix R. Each entry in the detection logs is treated as the
explicit feedback, which includes the fact of infection, mal-
ware’s characteristics and user’s security risks [3]. Usually, R
is sparse because the detection logs could only provide lim-
ited explicit feedback. In our detection logs, each user has
only 6.28 detection entries averagely. Therefore, we need
to infer the implicit feedback which indirectly reﬂects the
“preferences” of malware and users from provided explicit
feedback. The task can be treated as a one-class collab-
orative ﬁltering problem [4]. By applying CF algorithms,
we could estimate the other entries in matrix R and give a
satisfactory ranking of malware for each user.
Related Work.
In addition to matching the binaries
with lists of malicious patterns [8], there are many previous
work applying machine learning techniques into the mal-
ware detection [9, 10] and classiﬁcation [6] in recent years.
Ye et al. analyzed the Windows API execution sequences
and developed a malware detection system with some rule-
based classiﬁers [10]. Tahan et al. proposed a detection
algorithm with several features extracted from the segments
of executable ﬁles and malware’s meta-data [9]. Rieck et
al. cluster malware into several classes with behaviors and
assign unknown malware to discovered classes [6]. However,
all of them analyzed and detected malware in binary-level or
behavior-level. Also, their methods are in need of scanning
users’ ﬁle systems or launching malware in sandbox system.
To the best of our knowledge, we are the ﬁrst to apply collab-
orative ﬁltering techniques into malware detection without
any scan.
3. PROPOSED APPROACH
The CF algorithms for recommender systems assume that
users with similar interests may like similar items, and vice
versa. This assumption is also applicable to the malware de-
tection problem. Users with similar habits may have same
risks of infection of analogous malware. On the other hand,
the malware with same infection channels may infect simi-
lar users who are careless about such risks. The similarity
suggests that CF algorithms may be valid to the malware de-
tection problem. Therefore, we proposed a novel CF based
approach which consists of three parts: (1) most popular
prediction, (2) matrix factorization and (3) hybrid predic-
tion.
3.1 Most Popular Prediction
We ﬁrst propose the popularity-based method called “Most
Popular Prediction” (MPP). MPP predicts values with the
occurrence of malware in training detection logs as follows:
MPP(u, w) =
infected(u, w),
(cid:88)
u∈U
where infected(u, w) shows how many times the user u is
infected by malware w in training detection logs. This algo-
rithm can be treated as an Maximum Likelihood Estimator.
It assumes there is a probability distribution of infected mal-
ware. In an ideal world, the system could have known such
distribution and obtain excellent prediction performance.
Besides, MPP is not dependent on user’s individual logs,
and thus can perform well even if there are only few logs for
a user without the representativeness. It is also the baseline
method in performance comparison.
3.2 Matrix Factorization
When the provided logs are more plentiful, the latent fac-
tor CF algorithms could work well. Many state-of-the-art
latent factor CF algorithms are based on matrix factoriza-
tion (MF) [3]. An important assumption of MF is that is the
low-rank assumption of the utility matrix. Then the prob-
lem can be treated as the task approximating the predicted
matrix R with the product of a matrix P : |U| × k and a
matrix Q : |W| × k as follows:
ˆR = P × QT ,
where k is the dimension of the latent factors. Each row pu
in P can be treated as the latent factor or feature factor of
the user u. Similarly, each row qw in Q is the latent factor
of the malware w. Then we can predict the value ˆr(u, w) for
a user-malware pair (u, w) with the inner product pu × qT
in the latent factor space.
w
As mentioned in Section 2, the problem is a one-class CF
problem so that we have no any numerical rating. We have
only the instances of positive class, i.e., the infected mal-
ware in logs. Actually, our goal is actually to rank malware
with higher risks in higher positions. In this work, we adopt
the framework of Bayesian personalized ranking (BPR) [5]
with MF optimization. Based on the assumption of BPR,
we assume the infected malware has higher risks than other
malware without infection for a user, thereby creating train-
ing data DS : U × W × W as follows:
DS =(cid:8)(u, wi, wj) | wi ∈ W +
(cid:9) .