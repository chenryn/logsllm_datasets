as an indication of users’ downloads. Of our appstores, only Anzhi sup-
ported comments with precise timestamps. We crawled the Anzhi appstore
and recorded the stream of comments for each user (suppressing successive
duplicates). For example, if a user commented on apps a1; a2; a3; a3; a1; a4
we kept the sequence a1; a2; a3; a1; a4 which we call app string. In addition,
we know that each app ai belongs to some category c(ai). Using this knowl-
edge, we construct the string c(a1); c(a2); c(a3); c(a1); c(a4) which we will call
category string. Given a category string of n elements c1; c2; c3; :::; cn with
the respective categories of a user’s n comments in chronological order, we
de(cid:12)ne the temporal a(cid:14)nity or a(cid:14)nity probability as the number of elements
which are equal to their previous one over n (cid:0) 1. The a(cid:14)nity probability is
an indication of whether users tend to comment on apps from the same cat-
egory or on apps from di(cid:11)erent categories. Indeed, if the temporal a(cid:14)nity
35
36
CHAPTER 5. USER’S TEMPORAL AFFINITY TO APP CATEGORIES
approaches the highest value (i.e. one), then users tend to comment on apps
from one category only, indicating that the users may tend to download apps
from only one category. On the contrary, if the temporal a(cid:14)nity is low, then
users tend to switch from one category to another. Note, that if we have C
categories of roughly equal volume, then if users randomly wander from one
category to another, the a(cid:14)nity probability will be around 1=C.
Given a set with downloads (actually comments) of a user in chronolog-
ical order, one can calculate the temporal a(cid:14)nity to app categories related
with this user, which is the percentage of apps belonging to the same cate-
gory as their previous one. For example, assuming a user that have down-
loaded (commented) n apps of categories c1; c2; c3; :::; cn. To calculate the
a(cid:14)nity probability of this user, we have to divide the above category string
in n(cid:0) 1 consecutive pairs (sets of two categories). Then, a(cid:14)nity probability
for this user can be calculated using the following formula:
nP
A(cid:14)nity(ci; ci(cid:0)1)
i=2
PA =
n (cid:0) 1
(5.1)
where A(cid:14)nity(ci; cj) equals to one if ci and cj belong to the same category
and zero otherwise. For example, a user with a category string c1; c1; c2; c2
will have a(cid:14)nity probability equal to 2=3. For example, given a user with
category string c1; c2; c3, temporal a(cid:14)nity related with this user will be 0.
For a user with category string c1; c1; c3, temporal a(cid:14)nity will be 0:5 (1=2).
A user with c1; c1; c1 will have temporal a(cid:14)nity equals to 1 (2=2). Moreover,
for a user with category string c1; c1; c2; c2 the temporal a(cid:14)nity will be 0:66
(2=3), while for a user with this categories’ series c1; c2; c1; c2, it will be 0.
As mentioned above, if the apps were evenly distributed among the dif-
ferent categories, then the a(cid:14)nity probability of a random wandering would
be around 1=C (if C is the total number of unique categories in the app-
store). However, in practice, applications are not evenly distributed among
di(cid:11)erent categories. Therefore, to calculate the actual a(cid:14)nity probability of
a random wandering in Anzhi marketplace we used the actual distribution
of apps to the C di(cid:11)erent categories in this appstore from our collected data.
Let A be the total number of apps in the appstore and A(i) the number of
apps that belong to category i (the sum of all A(i) is equal to A). Given
this distribution, the random walk a(cid:14)nity probability Prandom walk, i.e., the
probability that two random app choices will belong to the same category,
is equal to:
CP
i=1
A(i) (cid:2) (A(i) (cid:0) 1)
A (cid:2) (A (cid:0) 1)
Prandom walk =
(5.2)
since out of the A (cid:2) (A (cid:0) 1) possible random app choices, the number of
app choices for which the two apps belong to the same category are equal
CP
5.2. TEMPORAL AFFINITY FOR DIFFERENT DEPTH LEVELS
37
A(i) (cid:2) (A(i) (cid:0) 1)). For
to the sum of A(i) (cid:2) (A(i) (cid:0) 1) for all categories (
instance, if a given appstore contains 10 apps (A = 10) with 3 categories
(C = 3) and the following distribution of apps to categories: jC1j = 3 apps,
jC2j = 3 apps, jC3j = 4 apps, then the random walk a(cid:14)nity probability will
be (3 (cid:2) 2 + 3 (cid:2) 2 + 4 (cid:2) 3)=(10 (cid:2) 9) = 0:266. We need the a(cid:14)nity probability
of a random wandering as a base case to compare with the actual a(cid:14)nity
probability we measure in the Anzhi appstrore.
i=1
5.2 Temporal A(cid:14)nity for Di(cid:11)erent Depth Levels
So far we have de(cid:12)ned the temporal a(cid:14)nity as the probability of a user
choosing two consecutive apps that belong to the same category.
In this
way, however, we miss users that may oscillate between few categories. For
instance, the category string c1; c2; c1; c2 has temporal a(cid:14)nity equal to zero
according to our previous de(cid:12)nition, but we can see a clear a(cid:14)nity of this
user to c1 and c2 categories. To address this issue, we de(cid:12)ne temporal
a(cid:14)nity using the depth notion. That is, a(cid:14)nity probability PA of depth d
for a category string with n elements is de(cid:12)ned as the number of elements in
category string for which at least one element among its previous d elements
belongs to the same category, divided by n (cid:0) d:
nP
A(cid:14)nity(ci;fci(cid:0)1; ci(cid:0)2; :::; ci(cid:0)dg)
i=d
PA =
n (cid:0) d
(5.3)
where A(cid:14)nity(ci;fci(cid:0)1; ci(cid:0)2; :::; ci(cid:0)dg) is equal to one if at least one of the
fci(cid:0)1; ci(cid:0)2; :::; ci(cid:0)dg belongs to the same category with ci, and zero other-
wise. For example, temporal a(cid:14)nity of depth equal to two is de(cid:12)ned as
the probability of a user selecting an app that belongs to the same cate-
gory with one of the previous two selections. To calculate the temporal
a(cid:14)nity for this depth, we (cid:12)rst divide the n apps of the category string into
n (cid:0) 2 consecutive triplets (sets of three categories). Then, we check which
of these triplets have a(cid:14)nity, i.e., if the third element belongs to the same
category with the second or with the (cid:12)rst one in the triplet. Finally, we
sum the triplets which have a(cid:14)nity and divide them with the total number
of triplets, as shown in equation 5.3. In the same manner, to compute the
temporal a(cid:14)nity probability of depth equal to three, we divide the user app
choices in n (cid:0) 3 sets of 4 etc. A graphical example that shows the calcula-
tion of temporal a(cid:14)nity probability for di(cid:11)erent depth levels is illustrated
in Figure 5.1. The equation 5.1, we de(cid:12)ned in previous subsection, is the
case of depth equal to one.
38
CHAPTER 5. USER’S TEMPORAL AFFINITY TO APP CATEGORIES
Figure 5.1: Example showing the calculation of a(cid:14)nity probability for
di(cid:11)erent depth levels.
Using equation 5.2 we can (cid:12)nd the a(cid:14)nity probability of a random wan-
dering for depth equal to one. To calculate this probability for an arbitrary
depth d we should use the following equation:
CP
A(i) (cid:2) (A(i) (cid:0) 1) (cid:2) d (cid:2) dQ
(A (cid:0) k)
(5.4)
Prandom walk =
i=1
dQ
k=2
(A (cid:0) k)
k=0
where each category i has A(i) apps, A are the total apps, and C the number
of categories. For depth equal to d, all the possible app choices are A (cid:2)
(A (cid:0) 1) (cid:2) ::: (cid:2) (A (cid:0) d). The choices with a(cid:14)nity for each category i are
A(i)(cid:2) (A(i)(cid:0) 1)(cid:2) d(cid:2) (A(cid:0) 2)(cid:2) :::(cid:2) (A(cid:0) d) because A(i) is the probability
to select the last app from category i, (A(i) (cid:0) 1) (cid:2) d is the probability that
one of the previous d apps belongs to same category i, and the rest d(cid:0)1 apps
can be selected from any category. Thus, equation 5.4 sums all the possible
app choices which have a(cid:14)nity and divides them with all the possible ways
c2c1c2c2c3User’s comment stream:Depth 1:c2c1c2c2c2c2c3c2xx(cid:1906)(cid:1906)P  = ( 0 + 1 + 1 + 0 ) / 4 = 0.5ADepth 2:c2c1c2(cid:1906)x(cid:1906)c2c2c2(cid:1906)(cid:1906)(cid:1906)c2c2c3xxP  = ( 1 + 1 + 0 ) / 3 = 0.6AxDepth 3:c2c2c2(cid:1906)x(cid:1906)c1(cid:1906)c2c2c3xc2xxxP  = ( 1 + 0 ) / 2 = 0.5A5.3. RESULTS
39
to select d + 1 apps to compute the random walk a(cid:14)nity probability for any
depth d. Equation 5.2, we saw in previous subsection, is the case with d = 1.
5.3 Results
(a) CDF of number of comments per
user.
(b) CDF of unique categories per
user.
(c) Average percentage of user com-
ments made for the top k categories,
as a function of k.
Figure 5.2: Statistics on user comments.
The crawling process of user comments from Anzhi marketplace resulted
in a dataset of 361,282 user comment streams to 60,196 apps in 34 categories.
Figure 5.2(a) shows the distribution of the number of comments per user.
We see that most users made up to 20 comments. There were few users
with a very large number of comments in many di(cid:11)erent categories. We
found that these users were posting spam, possibly using an automated
script. Figure 5.2(b) shows the CDF of unique categories per each user that
posted at least one comment. We see that 53% of the users commented on
apps from a single category, and 94% of the users commented on apps from
up to just 5 categories. Similarly, in Figure 5.2(c) we present the average
percentage of user comments made for the top k categories, as a function of
k. We have excluded the users that made comments on a single app in this
(cid:12)gure. We observe that the 66% of the comments of an average user were
made for a single category, while 95% of the user comments were made for
no more than 5 categories. These (cid:12)ndings indicate that most users tend to
 0 0.2 0.4 0.6 0.8 1 1 10 100 1000 10000Users (CDF)Comments per user 0 0.2 0.4 0.6 0.8 1 5 10 15 20 25 30Users (CDF)Unique categories per user 65 70 75 80 85 90 95 100 5 10 15 20 25 30Average users’ comments (%) made for apps in top k categoriesNumber of top k categories40
CHAPTER 5. USER’S TEMPORAL AFFINITY TO APP CATEGORIES
comment on apps from a single category or from very few categories of the
34 di(cid:11)erent categories we can (cid:12)nd in Anzhi appstore.
Figure 5.3: A(cid:14)nity Probability for depth=1 of users grouped by their
number of comments.
We see that the A(cid:14)nity Probability ranges around 0.5. This implies that once a
user comments on an app from one category, (s)he will comment on another app of
the same category with probability close to 0.5.
However, the results from Figures 5.2(b) and 5.2(c) may be biased from
the small number of comments made by most users. To overcome this issue
we measure the a(cid:14)nity probability as de(cid:12)ned in equation 5.3, based on the
actual app distribution in the 34 categories of the Anzhi appstrore. Figure
5.3 shows the a(cid:14)nity probability for the users of Anzhi (for depth level equal
to 1), as a function of the number of comments per user. We have grouped
together all users that made the same number of comments, and we plot
the average values and the 95th con(cid:12)dence intervals from each group. We
plotted only the groups that had more than 10 samples, excluding, in this
way, the spam users as well.
We see that the average a(cid:14)nity probability for most groups is around
0.5. This implies that once a user comments on an app from one category,
the same user will comment on another app of the same category with prob-
ability close to 0.5. To place these numbers in context, we also calculated
the a(cid:14)nity probability of the base case as well, i.e., the case where a user
wanders from one app to another randomly. The random walk a(cid:14)nity prob-
ability on our dataset for depth one is 0.14, shown as a horizontal line in
 0 0.2 0.4 0.6 0.8 1 0 10 20 30 40 50 60 70 80Affinity probability of group G(i)i : Number of comments95% CIAverage (depth level 1)Random wandering (0.14)5.3. RESULTS
41
(a) Depth=1
(b) Depth=2
(c) Depth=3
Figure 5.4: A(cid:14)nity probability for depth levels from 1 up to 3 for users
grouped by their number of comments.
The a(cid:14)nity probability increases with depth level, as it was expected.
Figure 5.3. Thus, we see that Anzhi users are 3.6 times more likely to stay
in the same category compared to the base case of random wandering. This
outcome indicates a strong a(cid:14)nity between users and categories.
To explore how this a(cid:14)nity probability increase for higher depth levels,
we plot in Figures 5.4(b) and 5.4(c) the a(cid:14)nity probability of the same user
groups, as well as the random walk a(cid:14)nity probability, for depths equal
to two and three respectively. We see that a(cid:14)nity probability increases
with depth, as it was expected, and remains higher than the respective
random walk a(cid:14)nity probability. To explore how the a(cid:14)nity probability
varies among users, we plot the cumulative distribution of a(cid:14)nity probabil-
ity among all Anzhi users for the three di(cid:11)erent levels in Figure 5.5. We
Figure 5.5: CDF of a(cid:14)nity probability for di(cid:11)erent depth levels.
observe that the median value for depth one is 0.5, while for depths two and
three the median values are 0.58 and 0.67 respectively. The results of this
 0 0.2 0.4 0.6 0.8 1 0 10 20 30 40 50 60 70 80Affinity probability of group G(i)i : Number of comments95% CIAverage (depth level 1)Random wandering (0.14) 0 0.2 0.4 0.6 0.8 1 0 10 20 30 40 50 60 70 80Affinity probability of group G(i)i : Number of comments95% CIAverage (depth level 2)Random wandering (0.28) 0 0.2 0.4 0.6 0.8 1 0 10 20 30 40 50 60 70 80Affinity probability of group G(i)i : Number of comments95% CIAverage (depth level 3)Random wandering (0.42) 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1Users (CDF)Affinity probabilityDepth level 1Depth level 2Depth level 3Randomwalkdepthlevel 1Randomwalkdepthlevel 2Randomwalkdepthlevel 342
CHAPTER 5. USER’S TEMPORAL AFFINITY TO APP CATEGORIES
Depth level Users’ App Choices (Mean) Random Wandering
A(cid:14)nity Probability
1
2
3
0.55
0.58
0.67
0.14
0.28
0.42
Table 5.1: A(cid:14)nity probability of users’ app choices vs a(cid:14)nity probability
of random wandering, for di(cid:11)erent depth levels
Figure 5.5 are also summarized in table 5.1, which provides a comparison
between average a(cid:14)nity probability observed in the users of our dataset and
the a(cid:14)nity probability of random wandering, for the three levels of depth.
As mentioned previously, the a(cid:14)nity probability of users’ app selections is
growing together with depth level. The same behaviour is also observed for
random wandering a(cid:14)nity probability, which appears to grow at a faster
pace. Nonetheless, the probability of a user to choose an app that belongs
to the same category of her previous choices seems to be greater than this
of a random wandering.
Overall, our results show that there is a strong a(cid:14)nity of users’ comments
to app categories, which is a strong indication that users tend to download
apps from the same categories. These observations validate our hypothesis
about the app clustering e(cid:11)ect in user downloads, as described in section 4.2.
5.4 Summary
Brie(cid:13)y, we attempted to validate our previously suggested clustering e(cid:11)ect
hypothesis, which proposes that users tend to download several apps from
a single category rather than switching to another one. To do so, we sug-
gested a new metric called user temporal a(cid:14)nity that measures the a(cid:14)nity
of users to app categories. We performed measurements on a dataset of user
comments with ratings (which implies downloads), and we show that users
are 3.6 times more likely to stay in the same category compared to the base