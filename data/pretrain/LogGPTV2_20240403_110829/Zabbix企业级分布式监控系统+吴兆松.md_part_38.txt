解释如下：
308
---
## Page 325
第14章使用Zabbix协议
·Zabbix Server为 host。
·test 为 key。
·sent data 为 value。
为了使上例中的客户端能够正常运行，需要在ZabbixGUI的Zabbix-Server
主机上建立一个 Trapper类型的Items，其key为 test。
上例代码的主要步骤是Sender和 Server建立Socket连接、发送key的数据
（注意头部信息的正确性）、Server对数据进行处理响应的一个过程，可参考官方
文档，地址如下。
https://www.zabbix.org/wiki/Docs/protocols/zabbix_sender/2.0
下面是官方文档中Java的例子。
String report = buildJSonString(...);
writeMessage(stream, report.getBytes());
private String buildJSonString(String host, String item, Strin
gvalue)
return
""
+ "\"request\":\"sender data\",\n"
+"\"data\":[\n"
+
"{\n"
+
"\"host\":\"" +host + "\",\n"
+
"\"key\":\""+item +"\",\n"
+
"\"value\":\""+value.replace("\1","\111")
+"\"}]}\n"；
ows IoException
int length= data.length;
out.write(new byte[] {
'a.'x.'8.'z
\1',
(byte) (length & OxFF),
(byte) ((length >> 8) & 0x00FF),
(byte)((length>>16)&0x0000FF),
(byte)((length >> 24) & 0x000000FF),
'\0'，\0'，'\0，'\0');
out.write(data);
）
Perl的例子参考如下地址。
https://www.zabbix.org/wiki/Docs/protocols/zabbix_sender/1.1/perl_example
309
---
## Page 326
Zabbix企业级分布式监控系统
14.3Zabbix-Get协议
https://github.com/itnihao/zabbix-book/blob/master/14-chapter/zabbix-get.py
核心代码如下：
client_socket=None
try:
client_socket= socket.create_connection((options.host,option
s.port),options.timeout)
protocol = ZBxDProtocol()
protocol.send_value(client_socket, key)
print(protocol.receive_value(client_socket))
exceptExceptionase:
用法如下：
Linux zabbix.itnihao.com 2.6.32-279.e16.x86_64 #1 SMP Wed Jun 13 1
8:24:36EDT2012X86_64
14.4Zabbix-Agent 协议
下面来看看Zabbix-Agent协议的实现过程。
主动模式的实现过程。
1．Agent启动的时候请求Server
Zabbix-Agent端请求Zabbix-Sever端，其发送的数据格式如下。
"request":"active checks",
"host":"Host name"
2.Server响应Agent请求
Zabbix-Server端对请求进行响应，其数据格式如下。
"response":"success",
"data":[
"key":"log[\/var\/log\/localmessages,@errors]",
310
---
## Page 327
第14章使用Zabbix协议
"delay":1,
"lastlogsize":12169,
"mtime":0}],
"regexp":[
"name":"errors",
"expression":"^error",
"expression_type":3,
"exp_delimiter":",",
"case_sensitive":1)])
3.Agent发送数据给Server
Zabbix-Agent将数据发送给Zabbix-Server端，其发送的数据格式如下。
"request":"agent data",
"data":[
{
"host":"Server 115",
"key":"log [\/var\/log\/localmessages]",
"value":"Apr 29 07:26:13 zabbix-master Keepal
ived_vrrp[1854]: Netlink: filter function error",
"lastlogsize":4315,
"clock":1360314499,
"ns":699351525}
"cl0ck":1360150949,
"ns":412904960
4.Server响应Agent，返回状态结果
Zabbix-Server对Zabbix-Agent发送过来的数据进行处理，并返回处理结果。
"response":"success",
响应异常的处理如下。
①部分请求成功，部分失败的响应如下。
"response":"success",
"info":"Processed 2 Failed 1 Total 3 Seconds spent 0.000113"
②无主动监控项的处理如下。
"response":"success",
"data":[]
311
---
## Page 328
Zabbix企业级分布式监控系统
③请求的主机不存在的语句如下。
"response":"failed",
"info":"host [Host name] not found"
④主机未监控的语句如下。
1
"response":"failed",
"info":"host[Host name] not monitored'
5.Agent协议的实例
用Zabbix-Agent协议编写的客户端程序在网络上已经有相关的开源项目，读
者可参考如下链接。
https://github.com/eht16/pyzbxagent
https://github.com/blin/zabby
https://github.com/nikicat/zabbix-agent-ng
312
---
## Page 329
第15章定制Zabbix安装包
本章继续对Zabbix的自动化运维进行了扩展，通过对Zabbix安装包的定制，
可以实现批量的安装和配置，这是部署大规模环境时必须掌握的技巧。本章通过
一个定制Zabbix安装包的项目，让读者理解自动化运维中的安装配置。
15.1为什么要定制安装包
Zabbix的安装部署可以采用源码包完成，也可以采用官方的RPM包完成
但在更多的情况下，我们有必要对Zabbix的安装包进行定制。我们需要修改自定
义key的配置文件、脚本文件，以及conf文件的默认参数，然后进行打包。对于
这样的需求，我们可以通过配置管理工具进行统一的推送维护，但在某些情况下，
我们更希望这些脚本在安装的时候就自动完成配置的工作。另外，官方提供的
RPM依赖包固定，不太适合自己的安装需求，如官方的RPM包依赖于APACHE，
而不支持Nginx，在这种需求下，对安装包进行二次定制很有必要。定制后的安
装包有利于统一维护管理和自动化配置。
对于安装包的定制，在不同的平台，其软件包的封装形式会不同，本章将以
RPM包的定制为例进行介绍（DEB软件包管理不涉及）。
关于Rpmbuild的更多资料，请读者参考相关资料和书籍，这里不再详述。
15.2如何定制安装包
有关定制RPM包（也就是Rpmbuild），对运维人员来说，掌握软件包定制的
技术对以后的工作将会产生很大影响，尤其是在自动化运维的配置管理方面。
在这里，笔者做了一个关于Zabbix的RPM 包定制的项目，项目名字为
zabbix-rpm，代码托管在github中，网址如下：
https://github.com/itnihao/zabbix-rpm
这个项目的意义如下。
·快速安装，标准配置，几分钟之内即可构建Zabbix系统，解决新手安装问
题，获得很好的体验，能快速学习并上手。
---
## Page 330
Zabbix企业级分布式监控系统
·大规模批量安装，提供RPM包定制的规范，可以作为参考案例。
·提供了SRPM包，可以基于二次定制。
·集成更多的脚本模板，方便大家使用。
如何重新打包RPM呢？
登录到Linux系统（这里以RHEL6.X、CentOS6.X系统为例）。
shell# yum install rpm-build git
shell# useradd admin
shell# su - admin
shell# echo "%_topdir /home/admin/rpmbuild">~/.rpmmacros
在该项目https://github.com/itnihao/zabbix-rpm中找到对应的版本，如Zabbix
2.2.2，下载zabbix-2.2.2-0.el6.zbx.src.rpm源码RPM软件包。
shell# rpm2cpio zabbix-2.2.2-0.el6.zbx.src.rpm 1cpio -div
#解压源码rpm包
解压出来的文件如下：
·cmdline-jmxclient-0.10.3.jar
●zabbix-2.2.2.tar.gz
zabbix-apache-web.conf
·zabbix-java-gateway.init
● zabbix-logrotate.in
● zabbix-nginx-web.conf
● zabbix2.2.2.spec
●zabbix_custom.tar.gz
·zabbix_java_gateway_cmd
准备构建RPM包，语句如下。
shell#mv zabbix2.2.2.spec/home/admin/rpmbuild/SPECs
shell#mv */home/admin/rpmbuild/souRCES
重新打包RPM，语句如下。
shell# cd /home/admin/rpmbuild/sPECS
shell#rpmbuild-bazabbix2.2.2.spec#此处会提示你需要依赖包，依次安装
在执行完上述命令后，会自动生成RPM包，读者可以参考该项目的Readme
文档进行打包安装。
在SPEC文件中可以编写很多Shell命令，如下面的参数中，对ServerActive、
Server等默认的参数进行了修改，这样在安装好之后，就无须进行二次配置，安
装后即配置完毕。
314
---
## Page 331
第15章定制Zabbix安装包
sed-i\
-e's|#PidFile=.*|PidFile=%(_localstatedir}/run/%{name}/zabb
ix_agentd.pidlg'\
-e's|^LogFile=.*|LogFile=%{_localstatedir}/log/%{name}/zabbi
x_agentd.1oglg'\
-e '/# UnsafeUserParameters=0/aUnsafeUserParameters=1\n'\
-e'/#Include.*zabbix_agentd.conf.d\//aInclude=\/etc\/zabbix
\/zabbix_agentd.conf.d\/\n'
-e'/StartAgents=3/aStartAgents=5\n'\
-e's|#LogFileSize=.*|LogFileSize=0lg'\
-e's1Server=127.0.0.1$1Server=127.0.0.1,10.10.10.11g'
-e's1ServerActive=127.0.0.1s1ServerActive=127.0.0.1:10051,10.
10.10.1:100511g'\
-e's|# EnableRemoteCommands=01EnableRemoteCommands=llg'
-e's|#LogRemoteCommands=0|LogRemoteCommands=1Ig'\
-e'slLogFileSize=0lLogFileSize=l0lg'\
-e'sl/usr/locall/usrlg'\
$RPM_BUILDROOT%{_sysconfdir}/%{name}/zabbix_agentd.conf
sed-i
-e'sl/usr/local|/usrlg'\
-e'/# UnsafeUserParameters=0/aUnsafeUserParameters=l\n'\
-e 's@# Include=/usr/etc/zabbix_agentd.conf.d@Include=/etc/za
bbix/zabbix_agentd.conf.d@g'\
SRPM_BUILD_ROOT{_sysconfdir}/{name}/zabbix_agent.conf
包安装完成后自动添加服务，代码如下。
post agent
if [ $l -eql ]; then
Sed -i "s@Hostname=Zabbix server@Hostname=$HOSTNAME@g" /etc/zabbi
x/zabbix_agentd.conf
getent group zabbix>/dev/null1l groupadd-r zabbix
getent passwd zabbix>/dev/null ll useradd -r-g zabbix-d%{_shar
/sbin/chkconfig zabbix-agent on
/sbin/service zabbix-agent start
chown root:zabbix/bin/netstat
chmod4755/bin/netstat
fi
更多的内容请读者参考对应版本的SPEC文件，如Zabbix2.2.2.spec，在这个
文件中，读者可以看到更多关于定制Zabbix的RPM内容。
有关DEB打包的内容，网址如下。
https://www.zabbix.org/wiki/Docs/howto/rebuild_debs
315
---
## Page 332
第16章大型分布式监控案例
本章通过一个大型的分布式监控环境，对Zabbix的大型环境进行了深入探讨，
从自定制RPM包到架构设计，再到各个环节的优化配置，让读者进行深入的应
用管理。
16.1监控系统构建概述
前面我们学习了如何使用Zabbix，包括很多使用技巧，部分章节中提到了大
规模分布式监控应该注意的事项，本章通过一个实际的案例介绍在大规模环境中
如何部署和运维一个监控系统。
在大型的IT架构环境中，IT系统的组成通常是跨区域分布在多个省市的；
跨节点，多个IDC，而在中国，网络线路分为电信、联通，移动等多种复杂的网
络；业务类型众多、系统构成复杂、业务需求多样，是这种大型环境的特点。在
互联网业务中，新旧替代速度快是众所周知的，因此，监控系统要能满足业务不
断变化的需求。
在这种环境中去构建监控系统，首先要做的事情是掌握全局信息，以及需要
考虑未来的发展趋势。接下来是选择合适的技术方案，通常，这个技术方案既要
能满足于当前，又要能满足不断增长的需求，所以合理的规划和预测，加上一定
的理论和实践经验，才能设计一套比较完美的解决方案。
在大规模的监控系统中，需要考虑以下因素。
第一，分布式架构为首要考虑因素。要求系统架构具备分布式的设计，原则
是将中心节点压力分散在各边缘节点，使其尽可能监控更多的设备。
第二，对数据存储的可扩展成了一个必须解决的问题。节点数量的众多给监
控数据的存储带来了十分严峻的挑战，能否解决这个问题成了整个监控能否正常
工作的前提条件。
第三，系统的高可用和健壮性、稳定可靠的系统架构、余的灾备，成为大
型监控系统必须具备的条件。
为紧密。一个孤立的监控系统在大型环境中会对其他业务系统造成很大的麻烦，
通常需要花费更多的精力去改造，使其为其他系统提供所需的数据。
第五，具备自动化功能。自动化是解决繁重体力劳动最有效的方式，未来
---
## Page 333
第16章
大型分布式监控案例
的运维一定更智能、更偏向于业务。以业务为核心，而不是仅仅解决系统的底
层问题。
以上观点可以适用于任何监控系的统架构中，而不仅仅是本书中探讨的
Zabbix.
16.2
监控环境架构图
在图16-1中，我们可以看到监控系统和各业务系统紧密结合，通过分布式架
构，使其能工作于复杂的环境中。
Zabbix-Agent
OPSAdminsystem
localtion
ZabbixDE
Busi
stem
itniha0@2014
http://www.itnihao.com
图16-1
下面将详细介绍这个架构的实现过程。
16.3
架构实现的过程
16.3.1
硬件和软件需求
1．硬件需求
硬件需求如表16-1所示。
317
---
## Page 334
Zabbix企业级分布式监控系统
表16-1
应用名称
操作系统
CPU
内
存
硬
盘
Zabbix-Server
RHEL6.5_64
4核心
DDR316GB
SATA500GBx2RAID1
Zabbix-DB
RHEL6.5_64
16核心
DDR332GB
SAS300GBx4RAD1+0
Zabbix-GUI
RHEL6.5_64
4核心
DDR34GB
SATA500GB
Zabbix-Proxy
RHEL6.5_64
8核心
DDR316GB
SAS300GB×2RAID1
IP地址规划如表16-2所示。
表16-2
IP地址
应用名称
角
色
物理IP
虚拟IP
公网IP
Zabbix-Server
服务端主
192.168.0.3
192.168.0.5
58.75.2.89
Zabbix-Server
服务端从
192.168.0.4
Zabbix-DB
数据库主
192.168.0.240
无
Zabbix-DB
数据库从
192.168.0.240
Zabbix-GUI
前端
192.168.0.2
无
无
Zabbix-Proxy
代理
10.10.10.2
无
61.61.52.9
Zabbix-Agent
被监控端
10.10.10.10
无
无
注：以上环境中的操作系统全部选用RHEL6.3X64，读者在构建环境中可以
选用最新发布的系统，但软件包的依赖不一定能用本文中的软件包版本。
2.软件需求
在LNMP架构中，操作系统自带的RPM版本都很低，性能和安全方面都存
在一定的问题。为达到更好的性能和更高的安全需要，在大规模的生产环境中，
选用最新版本的软件包成为必然。
对于软件包的安装问题，一是选用源码包，二是选用各软件包的官方发行
RPM包，三是选用官方提供的二进制包，四是从源码自带的Rpmbuild构建形成
RPM包。在这四种方式中，第四种方式是比较推荐的做法，理由是RPM包容易
管理，自己定制能满足个性化需求，例如，可以自定义各种软件包依赖关系，与
前两种方式相比，Rpmbuild花费的时间看似更多，但更利于后期维护和大规模部
署。因此，这也是本书极力推荐的方式。RPMbuild只适用于RHEL、CentOS、SUSE
这几个Linux发行版本，如果是Debian、Ubuntu 系统，则为DEB包管理方式，
其原理大致相同。
读者可以通过下面的网址下载本章所用的RPM包（对于对应用需求较高的
读者，可以用本书github中提供的SRPM格式的RPM包对Rpmbuild进行打包并
构建RPM，对部分配置稍作修改即可满足需求）。
https://github.com/itnihao/zabbix-book/tree/master/NMP
318
---
## Page 335
第16章大型分布式监控案例
16.3.2ZabbixDB的安装
Zabbix的DB规划如表16-3所示。
表16-3
角
色
IP地址
域
名
运行的服务
MySQL-master
192.168.0.240
zabbix-mysql-master.itnihao.com
MySQL Server
MySQL-slave
192.168.0.241
zabbix-mysql-slave.itnihao.com
MySQL Server
分别在表16-3列出的机器中安装MySQL服务。
1．MySQL 的安装
在第3章中已经知道了，Zabbix数据的存储成为监控系统的核心问题，故选
择合适的数据库软件是非常重要的。这里选择Percona作为Zabbix的数据库软件，
其理由是Percona对MySQL数据库进行了功能和性能方面的改进，尤其是对
InnoDB进行了显著的性能提升。
MySQL5.6与MySQL5.5相比，其性能差别非常大，因此，本环境的数据库
选择了Percona-Server-5.6，下载地址如下。
http://www.percona.com/downloads/Percona-Server-5.6/LATEsT/
版本包括二进制、源码、RPM、deb 四种格式的包，如图16-2所示，具体选
择哪种方式，读者可以自行考虑，这里考虑到方便快捷而选择了二进制的安装
方式。
Download:PerconaServer56