919
13,557
10,209
of the botnet. Since we are interested in lower bounds, we decided to simply use the
conservative choice of Mimpression as the ﬁnancial model that would help us generate the
ad-abuse ﬁnancial report for the botnet.
3.4 Dataset Collection
In order to increase the situational awareness behind the problem of long-term ad abuse,
we decided to analyze the ad-abuse component of the TDSS/TDL4 botnet, one of the most
sophisticated, complex, and long-lived botnets in history. The ad-abuse component is agile
because it uses a server-side DGA to generate its C&C domains. As our “local network”
we selected one of the largest US Internet Service Providers (ISP). The ISP provided over
four years of historical network data, permitting testing of A2S on a large scale. Table 4.1
summarizes the datasets.
3.4.1 Sinkhole Datasets
We obtained sinkhole DNS and HTTP traces for the ad-abuse component of TDSS/TDL4
from two security companies. The goal of obtaining these datasets is to quantify the DNS
Ad-abuse Rate (Section 3.3.3). To do so, we need to understand the type of HTTP connec-
tions in the datasets.
The datasets span over 10 months, during which the Authoritative Name Server (ANS)
and the application-layer (HTTP) sinkhole points experienced some sporadic data loss due
to collection problems and outages. We should note that all domain names that were sink-
29
holed had a zero time-to-live (TTL) value, which prevented caching at the recursive DNS
server level, forcing it to contact the DNS sinkhole server for every lookup. Moreover, the
HTTP sinkhole returned “HTTP 200 OK” answers back to the victims with no content.
That is, the sinkhole administrator did not actively engage in ad-abuse.
Figure 3.4 shows the number of requests received by the DNS and HTTP sinkholes
over 10 months. The downward spikes indicate data loss events. In the ﬁrst two months,
the volume of HTTP requests is lower than that of DNS resolutions, which we suspect
is due to data collection issues. Starting from the middle of October, the HTTP requests
out-numbered the DNS resolutions, as expected.
TDSS/TDL4 uses two C&C protocols for its ad-abuse operation. Both protocols were
present in the HTTP datasets we obtained. The ﬁrst protocol, “Protocol 1”, is the primary
mechanism through which the botnet performs impression fraud. This is achieved via an
HTTP GET request to the active C&C, which will reply back with a set of advertisement
URLs used for impression fraud. Among other information, Protocol 1 also reports the
version of the malware and a unique identiﬁer for each victim, namely bid. All these ob-
servations are in-line with data collected and analyzed by other security researchers [66,
67]. The second protocol, “Protocol 2”, is used to report back information including search
terms from the victim’s browser, the publisher’s website where ads have been replaced
and clicked on, and the original ad that was replaced from the publisher’s website. A se-
mantically similar behavior of TDSS/TDL4 botnet is identiﬁed by Vacha et al. [68], where
fraudulent clicks were only generated when a user engaged in real clicks. In order to pro-
tect infected users’ privacy, the search terms were given to us in an aggregated form such
that they cannot be mapped to the individual ID and the infected IP.
In total, we observed 565 million unique DNS resolution requests. 544 million requests
were Protocol 1 and 21 million were Protocol 2 connections. This trafﬁc was produced
by 47,525 different recursive DNS servers (RDNS) around the world. Hosts with 66,669
unique identiﬁers (ID) contacted the HTTP sinkhole, using 615,926 different IP addresses.
30
Figure 3.5: Sensor availability for the NXDOMAIN dataset over four years. 247 out of
1,542 days are missing.
They made 343 million unique HTTP GET requests using properly formatted base64 en-
coded URLs. 919 million connections were recorded, only 0.87% of which were Protocol
2 communication, while the rest 99.13% were Protocol 1 connections. Thus, we assigned
pim = 99.13% for Equation (3.2).
3.4.2 Passive DNS Datasets
We gathered two types of DNS datasets from a large US ISP that represents approximately
30% of DNS trafﬁc in the US. The ﬁrst is the NXDOMAIN dataset, which covers over four
years of DNS queries from clients of the ISP for domains that did not resolve at the time of
query. The second dataset we obtained is a historical passive DNS database (pDNS-DB),
from the same ISP, containing DNS resource records (RR) [59, 60] collected from 1/1/2011
to 11/5/2014.
The NXDOMAIN dataset was collected below the recursive DNS servers, capturing
queries from hosts to the recursive DNS servers that result in DNS answers with a return
code of “NXDOMAIN”. Throughout the four-year period, we gained access to 1,295 days
of NXDOMAIN data (qDNS) from the ISP sensors (Figure 3.5).
The pDNS-DB dataset contains over 10 billion RRs. Each RR provides resolved data
and the daily lookup volume of a queried domain name. The pDNS-DB was collected from
24 geographically diverse ISP collection points in the United States.
31
Sensor ASensor BSensor CSensor DSensor EMissing2010−062010−122011−062011−122012−062012−122013−062013−122014−06Figure 3.6: Top: The line plot shows victim population of the botnet sample that contacted
the sinkhole infrastructure, with y-axis on the left. The area plot shows the number of
sinkholed domains with y-axis on the right. Bottom: Percent change.
3.5 Analysis and Measurements
In this section, we discuss how we compute the DNS Ad-abuse Rate, and how we propagate
ad-abuse domains from ground truth D$ to the larger set DA for TDSS/TDL4.
3.5.1 Computing the DNS Ad-abuse Rate
Since we did not operate the sinkholes, we need to make sure that the datasets we obtained
are generic enough and not biased before we can compute the DNS Ad-abuse Rate for the
TDSS/TDL4 botnet. Thus, we will ﬁrst summarize the sinkhole datasets to make the DNS
Ad-abuse Rate reproducible by other researchers.
First, we need to understand the average lifetime of an infection using the unique in-
fection ID. Each connection to the HTTP sinkhole contained the victim’s IP address and
a unique victim identiﬁer. This identiﬁer was a 40-byte long hexadecimal value that was
tagged by TDSS/TDL4 malware as bid in Protocol 1 communications. Figure 3.7a shows
the cumulative distribution function of the average infection duration based on IP ad-
dress and victim ID. The results show a relatively longer infection lifetime for the victims
when we count them using the unique identiﬁer than when we use the victim’s IP address.
Counting bots by IDs is more accurate than counting by IP addresses due to Network Ad-
dress Translation (NAT) points and DHCP churn rates, as other researchers have already
noted [69].
32
Second, we want to examine whether the sinkhole trafﬁc can cover a large victim popu-
lation, through which we can safely generalize the ad-abuse observation. The daily victim
population can be measured by the number of unique daily IDs that contacted the sinkhole.
Figure 3.6 illustrates how the number of daily victims changes over time and the percent-
age of change [70] for the botnet observed from the sinkhole data. In the ﬁrst two months
of the datasets, the number of infected IDs reached a maximum of almost 30,000. After a
sudden 6.7% drop in October, the number of IDs seen daily in our datasets decreased, un-
til the middle of November 2012. The decrease indicates that the malware changed C&C
domains from sinkholed domains to others. At that point the sinkhole administrators “re-
freshed” the sinkhole by adding six new domain names for the same botnet. This caused an
increase in the number of IDs that were found in the sinkhole datasets. It is worth noting
that a large number of old IDs reappeared in the sinkhole data after the addition of these six
new domains. This observation is expected, as the server side DGA churns through new
domains and old infections catch up with the new sinkholed domain names. After a peak
of almost 8.9% increase at the end of 2012, the daily victim population remained around
23,000 until the middle of February 2013. Afterwards, the size decreased by a factor of
almost 2% daily.
Finally, we need to examine the geographic distribution of the infected population. As
our passive DNS datasets were collected at a US ISP, we want to make sure that the sink-
hole dataset contains a reasonable size of victims located in the US. We identiﬁed the corre-
sponding CIDR and Autonomous System Number (ASN) for each victim IP address [71],
and used historical data from Regional Internet Registries (RIR) to ﬁnd the country codes
for the identiﬁed ASNs. Table 3.5a shows that almost half of the sinkhole trafﬁc origi-
nates from victims in the US (46.77%). In total, 174 countries were affected, however,
only 15,802 infections resided in countries outside the top six. These results show that
TDSS/TDL4 trafﬁc in our pDNS-DB dataset will allow us to study less than 15% of the
entire botnet. This is due to the fact that the passive DNS dataset is collected from an ISP
33
(a)
(b)
(c)
(d)
Figure 3.7: 3.7a: Cumulative distribution function (CDF) for the infection duration based
on the infection ID and IP address. 3.7b: CDF for number of related historical domain
names per IP from initial ground truth (D$). 3.7c: CDF for the number of domains queried
by internal hosts (H). 3.7d: CDF for host overlaps for TDSS/TDL4 ground truth domains.
in the United States, which represents 30% of the overall DNS trafﬁc in the US.
Computing the DNS Ad-abuse Rate ζ: Since our pDNS-DB dataset was obtained
from a US ISP, we calculated the DNS Ad-abuse Rate ζ U SISP based on the sinkhole traf-
ﬁc that reﬂected victims in the particular ISP. This resulted in 9,664 unique victim IDs,
28,779,830 DNS connections, 154,634,443 HTTP Protocol 1 connections and 1,159,027
HTTP Protocol 2 connections over an observation window of 10 months. Using this ISP-
speciﬁc dataset, we can compute the daily DNS Ad-abuse Rate and get the mean for the
entire ISP as ζ U SISP
mean = 27.62 as the ﬁnal DNS Ad-abuse Rate
for our experiments. As discussed in Section 3.4.1, DNS caching will not bias our rate,
mean = 27.62. We used ζ U SISP
34
020406080100060120180240300330DaysCDF(%)Bot IDBot IPCDF of TDSS/TDL4 Infected Client IP/IDα0204060801001101001,000>=20K# of Domains for Ground Truth IPsCDF(%)# of Historical Domain Namesβ90929496981001e+011e+031e+05Number of DomainsCDF(%)# of Domains QueriedTop 5%0204060801000510152025Host Overlap(%)CDF(%)Host Overlap for TDSS Domainssince the sinkhole administrators set a TTL equal to zero for the domains they sinkholed.
3.5.2 Spectral Analysis
Utilizing both NXDOMAIN and pDNS-DB datasets, we identiﬁed additional ad-abuse do-
mains starting from our limited ground truth (D$) and ending up to a larger set (DA) that
supported the ad-abuse component of the TDSS/TDL4 botnet over four years. We derived
this new set of domains DA by using Algorithm 1 described in Section 3.3.4. In this section
we discuss the operational challenges we faced while running this algorithm and how we
managed to ensure the accuracy of the derived set DA.
Assembling the Association Matrix
Algorithm 1 employs spectral clustering methods, which require a sparse association ma-
trix as input. A2S builds a matrix between domains we want to cluster as rows. As columns,
we combine all historical RDATA of the domains and the infected hosts that queried them.
Spectral clustering of such matrix results in clusters of domains that shared network infras-
tructure over the same time or were linked by infected host(s).
Before we constructed the association matrix (see Figure 3.3), we removed noisy IPs
and internal hosts from the sets Rdata and H based on the thresholds α and β. These
thresholds were chosen because they reﬂected extreme cases of IPs and internal hosts, with
respect to the local network.
Threshold (α) for Noisy IPs: Figure 3.7b shows the number of historical domain
names per IP address, which were manually labeled from the TDSS/TDL4 ad-abuse do-
mains in D$. Under 40% of conﬁrmed TDSS/TDL4 C&C IPs historically have fewer than
1,000 domains pointing to them. Concurrently, over 50% of these IPs have more than
20,000 related historical domain names. Such IPs are likely used for parking or sinkholing
purposes. We manually analyzed the set of IP addresses with around 1,000 related histor-
ical domains to assess whether they are malicious. The analysis revealed that considering
35
IPs with more than 1,000 historical domains as noisy is an aggressive threshold. However,
since we are estimating the lower-bound of TDSS/TDL4 ad-abuse operation, falsely remov-
ing IPs that were not used for parking or sinkholing will only help our lower bound goal.
That is, such aggressive threshold will only remove links within the association matrix that
would have allowed us to discover additional ad-abuse domains that could be added to the
set DA.
Threshold (β) for Noisy Hosts: Figure 3.7c shows the cumulative distribution of the
number of domains queried by infected hosts in a day. Note that the x-axis is in log scale
and the y-axis starts at 90%. The plot shows that only 0.7% of infected hosts queried more
than 1,000 domain names in a day. These hosts are likely gateways or research infrastruc-
ture that don’t necessarily associate known with unknown ad-abuse domains during the
clustering process. Thus, we used the 1,000 mark as a threshold. This means that any host
that queried more than 1,000 domains in a day was instantly excluded. Again, this is an
aggressive threshold, which rather forces us to underestimate the number of infected hosts
(and yield again to lower bounds).
Using these thresholds, we constructed the sparse matrix, performed Singular Value
Decomposition, and extracted the ﬁrst 20 eigenvalues, which we used to cluster the domains
in the matrix using XMeans [64].
Cluster Analysis
After clustering, we labeled ad-abuse domains based on IP infrastructure and infected hosts.
IP infrastructure: From clusters containing known ad-abuse domains, we label other
unknown domains as ad-abuse domains if they share the same IP infrastructure. This pro-
vides a subset of all domains pointing to the IP infrastructure used by TDSS/TDL4, since
domains in these clusters have been queried by infected hosts and have resolved during the
same time frame as known ad-abuse domains.
Internal (Infected) hosts: Since TDSS/TDL4 uses a server-side DGA, unknown C&C
36
Figure 3.8: Evolution of TDSS/TDL4 domains and their IP infrastructure. The number
of active domain names daily increased from 2010, and reached the maximum (333) on
4/9/2012. None of the domains resolved to any active IP after 10/15/2013.
domains can also be nonexistent domains that never resolve. Therefore, we cannot rely
solely on infrastructure to derive the set of domains DA. Although NXDOMAINs will
not be used to compute ﬁnancial loss in Section 3.6.2, we would like to understand the
evolution of the botnet’s infrastructure. Our intuition is that, if a NXDOMAIN is queried by
a large percentage of known infected hosts, it is likely to be an ad-abuse domain. However,
in order to be more conﬁdent about this, we do not label it as ad-abuse domain unless there
is at least one other unknown NXDOMAIN sharing the same group of infected hosts.
We use an aggressive ﬁltering process to ﬁnd such domains based on internal host
overlaps. The internal host overlap is the percentage of the infected hosts that query any of
the domain names in a cluster. Multiple infected hosts may query the same NXDOMAIN
for reasons other than concurrent TDSS/TDL4 infections. To avoid misleading overlaps,
we examined ad-abuse domains in our ground truth to derive a cutoff for strongest overlap
signal. Figure 3.7d depicts the cumulative distribution of host overlaps for all ground truth
ad-abuse domains. It demonstrates a plateau in the top 5% of ad-abuse domains, which we
effectively use as a threshold to ﬁlter clusters and add new domains to the set DA. After
sorting the clusters with NXDOMAINs based on the host overlap, we keep the top 5%
clusters. We then apply the same technique to sort all the domains in these clusters and
keep the top 5% of all domains. This aggressive cutoff only keeps NXDOMAINs with the
strongest host overlaps, which is in line with our lower-bound goal.
37
Sinkholing StartsTDSS/TDL4 Stops02004006002010−062010−122011−062011−122012−062012−122013−062013−122014−06DateNumber of DomainsNXDOMAINActiveParkingSinkholeDynamics of TDSS/TDL4 Domains and IP InfrastructureCorrectness of Spectral Expansion Module
We bootstrapped the spectral expansion process with 296 TDSS/TDL4 domains gathered
from various public resources. After operating Algorithm 1 2,590 times, going over ev-
ery day of the NXDOMAIN dataset twice, we discovered 838 new TDSS/TDL4 domains.
This means that the total number of TDSS/TDL4 domain names in the set DA was 1,134.
Next, the sanitization process reduced DA to 765 domains based on historical WHOIS
(WHOWAS) information from DomainTools. These domains match known TDSS/TDL4
domain registration email addresses or name servers, as shown in Table 3.2. The reader
should note that the lookup volume for these domains will be used for the ﬁnancial analy-
sis in Section 3.6.2.
Table 3.2: Categories of newly detected ad-abuse domains. There are only three non
TDSS/TDL4 domains based on manual analysis. The email addresses are obfuscated.
Share Email Address
PI:EMAIL
PI:EMAIL
PI:EMAIL
PI:EMAIL
PI:EMAIL
PI:EMAIL
PI:EMAIL
Share TDSS Name Server
No Active IP Address
Sinkholed
Two TDSS Parking Services
Never Registered
Non TDSS/TDL4
Total
Detected Labeled
Lookup Vol.