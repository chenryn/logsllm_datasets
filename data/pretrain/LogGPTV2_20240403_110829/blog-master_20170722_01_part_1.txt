## 时间、空间、对象多维属性 海量数据任意多维 高效检索 - 阿里云RDS PostgreSQL最佳实践  
##### [TAG 18](../class/18.md)
### 作者                      
digoal                     
### 日期                       
2017-07-21                 
### 标签                
PostgreSQL , 时间 , 空间 , 对象属性 , 多维度检索 , 海量 , 空间索引 , 数据分区 , 块级索引BRIN , 多级索引 , GIN倒排索引 , JSON索引 , 多列索引 , 多索引扫描合并 , bitmapAnd , bitmapOr , 物理扫描 , ctid扫描 , intersect , partial index , partition index     
----                
## 背景          
人类或者其他对象的活动产生了海量的时间、空间数据，如果有科技能实现回到过去，过去的世界状态会是什么样的？  
实际上这个需求在数据库中也存在。  
### 对象数据分类  
一类为静止数据（相对静止，比如建筑物），一类为动态数据（比如人类活动，物联网传感器的活动）。  
### 搜索需求分类  
1、时空快照数据搜索  
我们可以这样来理解，有一些对象产生数据的频率较低，例如建筑物，道路等相对较为惰性的对象，可能几年都不会变化一次，那么这类对象产生的数据写入到数据库中，我们按时间范围（例如2017-07-01到2017-07-02）去查询，你可能查不到这类对象的数据。因为它们在这个时间段就没有数据写入到数据库中。  
如果我们要查询过去某个时间点所有对象的最终状态，可以用以下方法，毫秒级构建出所有对象的最终状态：  
[《PostgreSQL 海量时序数据(任意滑动窗口实时统计分析) - 传感器、人群、物体等对象跟踪》](../201707/20170705_01.md)    
2、时空行为数据搜索  
时空行为数据，指运动对象产生的FEED数据，例如人类的活动。  
比如我们要分析某个时间段，在某个区域活动的人群特征。每逢周末的大学附近，是不是经常有皮条客出没。  
时空快照不在本文讨论范畴，有需要可以参考我前面写的文章。我们接下来说说时空行为数据搜索。  
### 数据结构  
包含时间、空间、对象描述三种属性的数据。  
非结构化数据结构：  
```  
create table test(  
  id int8,      
  crt_time timestamp,   -- 时间  
  pos geometry,   -- 位置  
  obj jsonb       -- 对象描述  
);  
```  
对象描述除了使用JSON，也可以使用结构化的数据(例如)：  
```  
create table test(  
  id int8,      
  crt_time timestamp,   -- 时间  
  pos geometry,         -- 位置  
  c1 int,               -- 一些属性的例子  
  c2 int,  
  c3 text,  
  c4 float8,  
  c5 int,  
  c6 date,  
  c7 text,  
  c8 int,  
  c9 int,  
  c10 int  
);  
```  
时空行为查询SQL例子如下  
```  
select * from test   
  where   
  pos  ? ^seek-->^seek--------->^  
            |       |              |  
            ------------------------  
            only these pages read  
```
例如：  
```  
select * from test where   
  c1 ...    
  and crt_time between ? and ?   
  and test->>'c1' in (?, ? ...);  
```  
会根据统计信息，自动使用对应的索引，如果有必要，会使用多个索引进行bitmapAnd 或 bitmapOr的合并扫描，SKIP不需要扫描的PAGE，对于命中的PAGE进行RECHECK。     
### 5、堆表存储分级、分区  
存储分级，可以分为一级或者多级：  
1、一级分区：  
例如按时间进行分区。  
```  
create table test(  
  id int8,      
  crt_time timestamp,   -- 时间  
  pos geometry,   -- 位置  
  obj jsonb       -- 对象描述  
)  
PARTITION BY range (crt_time)  
;  
create table test_201701 PARTITION OF test for values FROM ('2017-01-01') TO ('2017-02-01');  
......  