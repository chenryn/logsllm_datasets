                    var image = new Image();
                    image.src = this.result;
                    image.onload = function () {
                        var c = document.getElementById("canvas");
                        var ctx = c.getContext("2d");
                        var maxW = c.width = this.width;
                        var maxH = c.height = this.height;
                        ctx.drawImage(this, 0, 0, maxW, maxH);
                        var imgData = ctx.getImageData(0, 0, maxW, maxH);
                        var oFile = new Array();
                        for (var i = 0; i 
            ONLY FILE 
上面直接改 `pngCrypto.js` 脚本，由本来三原色 `RGB` 加解密隐写，改为仅 `Alpha` 值解密。
使用抠出来的第一行像素 OR 直接修改二维码名称为`test.png.dpc.png`，向页面传入，还原隐写文件如图：
通过还原得到另一类型二维码，这是个喵得法科？
谷果一下，得知为中国自主支持产权的 `汉信码`（热烈鼓掌！）。
网上找到某在线解码或者自行编译相关SDK得：
使用在线解密，点选 `UTF-8` 编码，decode后得到：
`U2FsdGVkX19tVP7nvEyDWQ7YFDa/DpAycAh5IZyMjsNdI
G23l7xvNvl48GNFFkZJ68vlQQy4jy3l6DJ7IM7xrXtmqFw/rOqSFsVGJaXjwsoA0RgWg5pe2kVMK3GnoVw`
基本功的坑居然也会拦下一波人……注意那个箭头所指的！空格！
使用在线解密后，发现密文被空格断开？而RSA加密怎么可能有空格呢？呵呵……
所以替换RSA字符串中 `空格` 为 `+` 或者 `/` ，反正只可能出现的那几个允许的符号，一个个解密试试就好了。如下：
`U2FsdGVkX19tVP7nvEyDWQ7YFDa/DpAycAh5IZyMjsNdI+G23l7xvNvl48GNFFkZJ68vlQQy4jy3l6DJ7IM7xrXtmqFw/rOqSFsVGJaXjwsoA0RgWg5pe2kVMK3GnoVw`
写一个py脚本交易一下 `from pwn import *` 遍历之前随机数碰撞脚本得到贼鸡儿多的 `RSAkey` 去解密，总算发现key为
`6759d92803742673713a68eebc55be40` 时，出现了标准格式 `FLAG{blalbalba……}`
（脚本在我家电脑上……这里我眼神教学吧，大家脑海里构造一下RSA脚本就是了嘎嘎）
这里某些同学KALI下中文字符可能会出现问题，那就再用在线解密验证一下就好。
## 0x04 final get the fuxkkkkin flag!!:
`FLAG{哈哈U_FINd-it_in_the_pic!THAT's/Sofast_soBUG\干得票酿}`
## 0xF0 苛刻 · 必专必邃:
带过一个本人苛刻骚思路：
查看到静态资源使用了一个被evil7小朋友写进去的BUG？或者说后门？——任意文件包含。
第一反应是BUG嘛！伪协议！读个痛快。
利用伪协议include后直接读取config.php文件的base64值，一下就得到相关config文件的关键信息了。
那么……问题来了！
如果题目采用win做为平台？
直接构造出POST流量传输文件呢？
测试中使用如下 `test.php` 文件，直接表单`POST['file']`，发现虽然没有处理上传的逻辑，但是tmp文件夹下，还是出现了名为
`phpblablabla...` 的临时文件。
再 `echo > test.php` 将上面文件变为空文件，直接curl构造上传并管道输出 `ls -al /tmp` 发现同样存在上传临时文件！
## 0xF1 疑惑 · 思路扩展
是否通过猜测上传缓存文件夹，比如 `/tmp` 或 `/usr/php5/temp` 类似，通过传入 `php
## 0x05 小明 · 泥给我衮曲去
  1. 构造如上example.php，传入一个写有phpinfo()的文件试试？
  2. 有兴趣的小伙伴可以结合这个姿势，试试构造webshell免杀等bypass骚思路？
  3. 另结合png隐写文件压缩，能不能用来洗白流量，比如：`Socket5` 的bypass什么G什么FW什么的？
骚到为止，看破勿说破。哦噜科科~(｡･∀･)ﾉﾞ
## 0x06 下课 · 请背诵全文
本题中主要以伪协议读取文件，伪随机算法，另类像素隐写，弱点逻辑绕过等综合利用为考点，故采用linux，如果题目被引用进其他CTF比赛，此考点可以变通，请大家如果遇到，一定小心谨慎记得考虑这个姿势！
## 0x07 总结 · 综上所述
本题解法十分紧凑，你想瞎比扫就扫，想任意读就读，想用API收集信息也行，但是最后集合所有信息，才能顺利完成此题。通过其他信息的泄露，和github上开发者信息以及repo的挖掘，完成整体题目。再一来，都说不会Coding的黑客不是好开发，所以顺便考验大家
`算法理解能力` / `脚本读码能力` / `逻辑分析能力` / `代码修改能力`
，最终在各技能方向技能组合拳磨练下，希望那些真正在这个“酸爽萝卜坑”里苦战过的大佬们，能借助本题知识点，提升自己对 `情报收集` / `算法弱点` /
`隐写分析` / `文件解密` / `编写技能` 在实际中的熟练应用程度。（略略略，没听过吧，反正这五个坑的名字都是我瞎编的！哈哈哈嗝）
“一次好渗透，三个面支撑”：
  1. 大量的信息收集
  2. 骚气的手法思路
  3. 清晰的流程报告
以上，供大佬们温故知新基础知识巩固基本技能，祝大佬们多得平台Rank瓜分SRC高危奖金。
出题时候脑子都快绕晕了，想必大家踩坑更是辛苦，要不？跟我来手一把大鱼人教做人，为自己挽尊？……
China Dota Best Dota !
China Haka Best Haka !
China NO.1 A马勒ca NO.9 !
:) DeePwn is aweaken. Join us ?