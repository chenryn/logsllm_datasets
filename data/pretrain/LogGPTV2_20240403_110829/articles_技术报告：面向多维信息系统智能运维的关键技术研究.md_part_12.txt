智能运维是将人工智能应用于运维领域，基于运维数据，通过机器学习的方式来进一步解决自动化运维没有办法解决的问题。而人工智能是基于数据、算力、算法和5G网络等关键技术来实现的。
1.  数据：人工智能需要根据场景和数据进行大量训练，进而总结出规律，应用到新的样本上。只有通过覆盖各种可能运维场景大量数据的训练，才能得到表现良好的更加智能的模型。
2.  算力：人工智能对算力要求极高，理论上只有达到量子计算的程度才能满足。基于现有的情况，云计算可以解决人工智能对算力的最低级要求。
3.  算法：算法是指解题方案的准确而完整的描述，是一系列解决问题的清晰指令。算法代表着用系统的方法描述解决问题的策略机制。人工智能需要有更加智能的算法。
-   人员角色要素识别
智能运维是支撑传统运维向技术运营转型发展的新型基础设施，是新一代人工智能技术与运维业务深度融合形成的新兴业务生态与应用模式。智能运维能力建设，离不开人员能力的建设，面对目前运维团队中人工智能方面人才基础薄弱、缺口较大的形势，应强化专业人才支撑，加快智能化人才培育，补齐人才结构短板。
智能运维团队角色应分为三类：运维工程师团队、运维开发工程师团队、运维AI工程师团队。
根据运维团队目前的人员结构，运维工程师和运维开发工程师都可以由现有的人员通过自学或者培训实现转型，运维AI工程师由于对算法有较高的要求，现有人员并不具备转型的条件。在未来需要通过招聘或其他方式引入相关的人才。在智能运维实践的过程中，运维工程师、运维开发工程师、运维AI工程师，三种角色之间交叉部分将会产生一些新的职能，需要通过相互配合或技能融合来承接，比如智能运维场景设计、数据质量保证等功能。同时具备三类能力的工程师将会成为智能运维团队中的核心人员。
-   人员技能要素规划
智能运维的发展对专业技术人才技能素质提出了新的更高要求。智能化运维生态下的新一代运维工程师应具备：
1.  较高的数字化技能
智能运维通过智能化的软硬件系统强化运维过程中机器与人之间的智能交互，降低劳动强度，提升生产效率。运维工程师不再需要承担繁重的体力劳动，但将面对更加复杂的工艺流程，同时控制多种精密的智能机器。这要求运维工程师要有较强的岗位适应性，在强化专业技能的基础上，掌握人机交互、数字化软件、机器运维、系统集成等更多新技能。
2.  良好的协同能力
智能运维以平台为核心，集成云平台运维、运维数据分析、通信网络设备运维、虚拟现实等多个领域的技术服务与软硬件产品，同时还需要与运维内外已有的IT平台实现无缝衔接。这要求运维工程师具备开放创新思维，提高跨界协作能力，适应跨部门、跨领域、跨平台的虚拟化协同能力，与其他员工、供应商、客户及相关方交流共享信息。
3.  强烈的安全意识
智能化运维场景中安全还要求运维工程师具备强烈的安全意识，强化危险事件感知、位置识别、信号传输、数据分析与事故处理流程设计等知识及应急处理能力，尽早发现和处理问题，降低损失。
### 总体设计目标
本研究通过文献查阅、调研、实践等方式深入了解人工智能技术在运维领域的应用。并通过定量定性分析相结合，案例研究与统计研究方法相结合等研究方法，结合当前运维业务特点，研究智能运维解决方案，为智能化运维平台建设提供决策建议，智能化运维平台设计的总体目标是：
整合运维体系，以运维数据为基础，以场景应用为驱动，以智能算法为手段，以服务规范为准则，构建面向数据中心各领域、打通运维能力边界，具备复杂问题分析和潜在趋势预测能力的综合性运维平台。
树立面向业务服务的智能化运维服务管理理念，建立科学合理的绩效考核指标，由粗放管理向精细管理转变；实行集中统一的智能化运维服务管理模式，由分散管理向集中管理转变；建立统一高效灵敏的智能化运维服务管理平台，由无序服务向有序服务转变；建立规范标准的智能化运维服务管理流程，由职能管理向流程管理转变；应用先进、实用、高效的IT服务管理工具，由被动管理向主动管理转变。
具体而言，按照"制定科学有序的管理流程和规章制度，建立统一的运行维护、客户服务模式和规范，应用先进的技术工具，搭建统一高效的智能化运维服务管理平台。智能化运维服务管理平台包括信息展示、服务台、服务流程管理、知识库、集中管理与监控（机房环境管理、网络管理、安全管理、系统管理、存储备份管理、应用系统管理、客户端管理）等功能模块和子系统"的建设内容。
### 总体设计原则
为了公司智能化运维平台的先进性、稳定性和适应性，在平台设计时，将采用以下原则：
以数据为基础：整合现有运维系统，实现统一监控，汇集运维数据，打破数据壁垒；
以算法为支撑：充分发挥人工智能技术优势，洞察数据本质，使运维数据变现；
以场景为导向：结合具体运维场景（如故障定位、容量管理等），以点及面的实现运维数据的场景化消费。
### 总体架构设计
面向多维信息系统智能运维平台的模型整体架构如下:
![](media/image49.png){width="5.971527777777778in" height="3.625in"}
图 24 系统架构图
自下而上
1.  数据源，提供各种运维数据库包括结构化数据如关系型数据库以及非结构化数据,例如各种系统日志，这些数据可以通过代理采集方式获取；另外一部分数据来源是现有系统，例如监控平台、网管、APM等工具，这些平台本身已经提供了各自该平台的事件或者性能数据，可以通过API的方式进行数据采集或者推送；
二、数据总线，数据总线提供数据的接入、缓存、预处理，以及各个系统之间的消息传递、API调用。这一层通过搭建异步消息总线例如Kafka集群来实现消息交互；
三、数据处理，包括两个方面，首先是数据工厂，数据工厂提供的是数据流式解析（例如数据加工、实时告警），数据计算以及存储能力；另外一部分是智能算法层，主要提供、训练各种智能算法模型；
四、接口层，接口层是为了根据不同的智能化运维场景提供接口调用，包括服务总线，主要提供API的注册、接口网关、状态、调用的管理，数据网关主要提供数据查询、数据网关等功能；采用的架构为微服务架构和总线架构：微服务架构可以将运维子系统的所有功能、操作、指令全部转变为原子操作，接受AIOPS的总体调度。运维总线架构可以将各类系统的相互通讯模式由网状变为星型，降低关联耦合度，提高通讯的速度、稳定性、可用性、可扩展性，使得数据通讯不再成为瓶颈；
5.  AIOps场景层，该层次是通过调用API层提供的各种能力来实现智能化场景。场景层的设置是根据事件的生命周期进行设置的，例如在发现问题阶段通过自动基线、日志分类来判断异常，发现问题；到通过关联分析、日志深度检查、应用全链路监控等来分析问题；通过匹配知识库，调用运维调度平台来定位问题；最后通过智能预测来预测容量或者故障的发生，另外提供了辅助决策的功能，例如系统画像、用户工单、请求分析等。
### 总体功能设计
![截屏2020-06-03%20下午12.12.16.png](media/image50.png){width="5.7555555555555555in"
height="4.058333333333334in"}
图 25 功能模块图
一、数据采集层 -- 全类型设备数据采集获取
企业内设备类型多样，还有很多第三方监控系统，平台需支持对所有网络设备、安全设备、操作系统、数据库、中间件、业务应用、性能数据、第三方监控系统、告警系统的信息采集。平台需能覆盖本项目实施范围所有数据，以网省公司关键的电力信息系统为主，包括系统产生的应用日志、服务器日志、中间件日志、数据库日志、网络安全设备日志等日志数据，以及网络监控系统、应用管理系统等运维保障系统产生的告警数据为研究对象。
二、数据ETL规范化 -- 各类型日志格式识别
数据ETL层提供数据的接入、缓存、预处理， 以及各个系统之间的消息传递、API
调用，这 linux centos6/7一层通过搭建异步消息总线例如 kafka
集群来实现消息交互;
运维人员不可能识别底层设备日志格式，平台需自带各类解析方式，包括xml、json、kv、正则、时间、地理位置等多种解析方式，能支持不同设备、操作系统的日志格式自动识别解析，形成有意义的字段供管理人员查看分析。
三、数据持久化 -- 数据集中统一存储
企业内海量数据进行集中统一存储，可按需对不同的日志类型分别设定日志存储时长，比如关键业务日志永久存储，数据库日志存储10年，操作系统日志存储1年，优化利用存储空间。提供标准的api接口与第三方平台对接，方便数据的二次挖掘和利用。
4.  数据引擎层
    数据引擎层需要实现以下功能模块：
```{=html}
```
1.  实时搜索
出现故障时需要最快时间找到问题，平台需具备TB级别的数据实时检索能力，查询任何关键字都能在秒级回馈查询结果。
1.  可编程数据BI分析引擎
具备丰富的统计分析函数，方便管理人员对数据进行快速的统计分析，包括百分比统计、耗时占比、访问量趋势等。
2.  机器学习
包含神经网络、决策树、线性回归、聚类等常用机器学习功能，快速进行机器学习建模，实现对数据的深入挖掘，实现对异常状态的智能洞察。
五、用户视图层 -- 实现各种智能运维分析场景
该层次提供的各种能力来实现智能化场景。场景层的设置是根据事件的生命周期进行设置的。
面对用户提供多维系统日志智能规范化、跨系统故障智能关联定位、业务趋势异常预警、日志异常模式识别、海量告警降噪收敛等实际分析场景，用户可按不同维度直观查看分析总体视图和分析结果，高效辅助运维决策管理，也可以按照需求自定义分析场景。
## 5.2技术架构支撑 {#技术架构支撑 .list-paragraph}
智能运维平台技术架构设计如下图所示：
![](media/image51.png){width="5.760416666666667in"
height="2.828472222222222in"}
图 26 技术架构图
智能运维平台的整体系统架构采用Hadoop平台作为存储和计算的支撑平台，开放式的智能模型架构提供智能能力输出，通过基于微服务与分布式消息的数据总线为主线，搭建而成，这种架构的优势在于随着算法的不断成熟，可以随时接入算法以及数据组合成为新的智能运维场景。
技术架构主要模块解析：
-   Collector（数据接收）
接收来自agent采集的数据，对数据进行标签识别，添加时间戳等处理。
-   Kafka（消息队列）
分布式消息处理队列用于消息的持久化和缓存，原始数据存储在raw_message
topic队列，可对第三方提供数据插入和订阅服务，需自行新建topic队列。经过字段提取后的数据，自动存储于logriver队列。
-   Logriver（字段提取）
自动解析Apache，Nginx，JSON等类型的日志以及DB2、Oracle、SQL、Mysql等常规数据库日志类型；支持常见网络设备、应用、中间件、流量等日志信息的解析；支持对加密文件、压缩文件、数据库镜像文件、javacore等特殊格式的解读；支持主流硬件设备的性能日志等信息进行解析。
-   Master（任务协调）：
维护系统的meta信息，譬如索引、分片(Shard)及其位置信息；
搜集数据分布，并负责平衡数据分布；
-   Broker（分发服务）：
对外服务，有一份从master同步的路由信息，负责转发搜索/索引请求、合并全局结果；
为无状态服务，可以随意扩充；
-   Datanode（存储计算）：
维护数据，分片一般均匀分布在各个Datanode上面。
也负责搜索时的本地结果计算。
###  数据采集技术