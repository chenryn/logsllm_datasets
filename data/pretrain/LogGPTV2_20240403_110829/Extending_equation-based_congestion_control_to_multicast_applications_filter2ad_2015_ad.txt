50
100
150
200
250
300
350
400
Time (s)
Figure 8: Responsiveness to changes in the loss rate
As show in Figure 8, TFMCC matches closely the TCP throughput
at all four loss levels. Adaption of the sending rate when a new
higher-loss receiver joins is fast. The receiver needs 500-1000 ms
after the join to get enough packets to compute a meaningful loss
rate. The major part of the delay is caused by the exponential timer
for the feedback suppression, which increases the overall delay be-
fore a new CLR is chosen to roughly one to three seconds.7 The
7Note that this high delay is caused by the use of the initial RTT
in the feedback suppression mechanism. Once all receivers have
a valid RTT estimate, the delay caused by feedback suppression is
much shorter.
experiment demonstrates TFMCC’s very good reactivity to changes
in congestion level.
The same simulation setting can be used to investigate responsive-
ness to changes in the RTT. The results (not shown here) are similar
to those above, since all four receivers have measured their RTT by
the time the RTT changes, and the one-way RTT adjustments im-
mediately indicate this change.
With larger receiver sets, the amount of time that expires until a
high RTT receiver is found may be greater. This effect is investi-
gated in the next section.
4.3 Initial RTT Measurements and Respon-
siveness to Changes in the RTT
The number of receivers that measure their RTT each feedback
round depends on the number of feedback messages and thus on
the parameters used for feedback suppression. Figure 9 shows how
the number of receivers with a valid RTT estimate evolves over
time for a large receiver set and a high initial RTT value. The link
RTTs for the 1000 receivers vary between 60 ms and 140 ms and
the initial RTT value is set to 500 ms. A single bottleneck is used
to produce highly correlated loss for all receivers. This is the worst
case, since if loss estimates at the receivers vary, it is often un-
necessary to measure the RTT to the low-loss receivers. Since the
calculated rate of the receivers still using the initial RTT is below
the current sending rate, at least one receiver will get its ﬁrst RTT
measurement per feedback round until all receivers have measured
their RTT.
T
T
R
d
i
l
a
v
h
t
i
w
s
r
e
v
e
c
e
R
i
f
o
r
e
b
m
u
N
800
700
600
500
400
300
200
100
0
0
50
100
Time (s)
150
200
Figure 9: Rate of initial RTT measurements
At the beginning of the simulation, the number of receivers ob-
taining initial RTT measurements is close to the expected number
of feedback messages per feedback round. Over time, as more
and more receivers have a valid RTT, the number of receivers that
want to give feedback decreases, and the rate of initial RTT mea-
surements gradually drops to one new measurement per feedback
round. While a delay of 200 seconds until 700 of the 1000 receivers
have measured their RTT seems rather large, one should keep in
mind that this results from having the same congestion level for all
receivers. If some receivers experience higher loss rates, those re-
ceivers will measure their RTT ﬁrst and TFMCC can adapt to their
calculated rate. Under most real network conditions it will not be
necessary to measure the RTT to all receivers.
In scenarios with 40, 200 and 1000 receivers respectively, we inves-
tigate how long it takes until a high RTT receiver is found among
receivers with a low RTT when all receiver experience independent
loss with the same loss probability. The x-axis of the graph in Fig-
ure 10 denotes the point of time when the RTT is increased during
the experiment and the y-axis shows the amount of time after which
this change in RTT is reacted upon by choosing the correct CLR.
The later the increase in RTT, the greater the number of receivers
already having valid RTT estimates, and the expected time until the
high-RTT receiver is selected as CLR decreases.
)
s
(
n
o
i
t
c
a
e
R
l
i
t
n
u
y
a
e
D
l
140
120
100
80
60
40
20
0
40 receivers
200 receivers
1000 receivers
0
10
20
40
80
160
Time of Change (s)
Figure 10: Responsiveness to changes in the RTT
4.4 Slowstart
The highest sending rate achieved during slowstart is largely de-
termined by the level of statistical multiplexing. On an otherwise
empty link, TFMCC will reach roughly twice the bottleneck band-
width before leaving slowstart, as depicted in Figure 11. When
TFMCC competes with a single TCP ﬂow, slowstart is terminated
at a rate below the fair rate8 of the TFMCC ﬂow and this rate is rel-
atively independent of the number of TFMCC receivers. Already
in the case of two competing TCP ﬂows, and even more so when
the level of statistical multiplexing is higher, the slowstart rate de-
creases considerably when the number of receivers increases. Most
of the increase to the fair rate takes place after slowstart in normal
congestion control mode.
)
s
/
t
i
B
K
(
e
t
a
R
t
r
a
t
s
w
o
S
l
.
x
a
M
2500
2000
1500
1000
500
0
only TFMCC
one competing TCP
high stat. mux.
Fair Rate
2
8
32
128
512
Number of Receivers
Figure 11: Maximum slowstart rate
We do not include an extra graph of the exact increase behavior
of TFMCC compared to TCP, since it can be seen for example in
Figures 12 and 13. TFMCC and TCP are started at the same time.
TCP’s increase to the fair rate is very rapid, while it takes TFMCC
roughly 20 seconds to reach that level of bandwidth.
4.5 Late-join of Low-rate Receiver
In the previous experiments we investigated congestion control with
moderate loss rates, expected to be prevalent in the applications
domains for which TFMCC is well suited. Under some circum-
stances, the loss rate at a receiver can initially be much higher.
Consider an example where TFMCC operates at a fair rate of sev-
eral MBit/s and a receiver with a low-bandwidth connection joins.
8The fair rate for TFMCC in all three simulations is 1 MBit/s.
Immediately after joining, this receiver may experience loss rates
close to 100%. While such conditions are difﬁcult to avoid, TFMCC
should ensure that they exist only for a limited amount of time and
quickly choose the new receiver as CLR.
The initial setup for this simulation is a eight-member TFMCC ses-
sion competing with seven TCP connections on a 8 MBit/s link,
giving a fair rate of 1 MBit/s. During the simulation, a new receiver
joins the session behind a separate 200 KBit/s bottleneck from the
sender from time 50 to 100 seconds.
TFMCC does not have any problems coping with this scenario,
choosing the joining receiver as CLR within a very few seconds.
Although the loss rate for the joining receiver is initially very high,
the TFMCC rate does not drop to zero. As soon as the buffer of
the 200 KBit/s connection is full, the receiver experiences the ﬁrst
loss event and the loss history is initialized. Details about the loss
history initialization process can be found in Appendix B. When
the ﬁrst loss occurs, the receiver gets data at a rate of exactly the
bottleneck bandwidth. Thus, the loss rate will be initialized to a
value below the 80% value and from there adapt to the appropriate
loss event rate such that the available bandwidth of 200 KBit/s is
used.
When an additional TCP ﬂow is set up using the 200 KBit/s link
for the duration of the experiment, this ﬂow inevitably experiences
a timeout when the new receiver joins the multicast group and the
link is ﬂooded with packets. However, shortly afterwards, TFMCC
adapts to the available capacity and TCP recovers with bandwidth
shared fairly between TFMCC and TCP.
We conclude that TFMCC shows good performance and fairness,
even under unfavorable network conditions.
)
s
/
t
i
B
K
(
t
u
p
h
g
u
o
r
h
T
1600
1400
1200
1000
800
600
400
200
0
aggregated TCP flows
TFMCC flow
0
20
40
60
80
Time (s)
100
120
140
Figure 12: Late-join of low-rate receiver
)
s
/
t
i
B
K
(
t
u
p
h
g
u
o
r
h
T
1600
1400
1200
1000
800
600
400
200
0
aggregated TCP flows
TCP on 200KBit/s link
TFMCC flow
0
20
40
60