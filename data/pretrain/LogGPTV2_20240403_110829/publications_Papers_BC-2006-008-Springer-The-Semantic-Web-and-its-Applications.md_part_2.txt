### Structural Metadata

Structural metadata provides information about the organization and arrangement of content. It describes how different elements are assembled within a document. The amount and type of structural metadata can vary significantly depending on the document type. For example, an HTML document uses predefined tags primarily for rendering purposes, which do not provide much contextual information. However, the positional or structural placement of information within the document can still be used to enhance metadata (e.g., terms in a title may be given higher weight than those in the body). In contrast, XML allows for more meaningful tags, making it more useful for determining context and relevance.

For instance, a Document Type Definition (DTD) or XML Schema Definition (XSD) outlines the structural metadata of a document. These definitions list the elements, attributes, and entities, and define the relationships between them. A DTD, for example, declares a set of XML element names and their usage rules. Here is an excerpt from a DTD that describes valid XML documents:

```xml
<!ELEMENT contacts (contact+)>
<!ELEMENT contact (name, birthdate)>
<!ELEMENT name (#PCDATA)>
<!ELEMENT birthdate (#PCDATA)>
```

This DTD indicates that a "contacts" element contains one or more "contact" elements, each of which includes "name" and "birthdate" elements. The "name" and "birthdate" elements, in turn, contain data.

### Semantic Metadata

Semantic metadata adds relationships, rules, and constraints to syntactic and structural metadata. This type of metadata provides contextually relevant or domain-specific information based on a metadata model or ontology, thereby capturing the meaning associated with the content. If a formal ontology is used, it enhances machine processability and automation.

Semantic data enables high-precision searching and interoperability among heterogeneous data sources. By giving meaning to the elements described by syntactic and structural metadata, applications can "understand" the actual content. Creating a metadata model of data, information, and relationships allows for reasoning capabilities such as inference engines to draw logical conclusions. For example, if we know that the ABC Company sends a gift to very good customers every year and that John is a very good customer, we can infer that the company will send a gift to John next year. Similarly, if a potential customer has a business partner who is on the Bank of England's money laundering list, the potential customer may be flagged according to anti-money laundering regulations.

### Types of Metadata

The types of metadata discussed include:
- **Syntactic Metadata**: Basic structure and format.
- **Structural Metadata**: Organization and arrangement of content.
- **Semantic Metadata**: Contextual and domain-specific information.

### Creating and Extracting Semantic Metadata

To extract optimal value from a document, it must be effectively tagged by analyzing and extracting relevant semantic information. Techniques for this include:

1. **Semantic Lexicons, Nomenclatures, Reference Sets, and Thesauri**:
   - Match words, phrases, or parts of speech with a static or periodically maintained dictionary and thesaurus.
   - Use tools like WordNet, which groups English words into sets of synonyms (synsets) and records semantic relations between them. WordNet supports various types of relationships such as synonyms, hypernyms, hyponyms, holonyms, and meronyms, which help in finding word relationships and meanings.

2. **Document Analysis**:
   - Look for patterns and co-occurrences, and apply predefined rules to find interesting patterns within and across documents.
   - Use regular expressions and word relationships to understand the meaning of documents.

3. **Ontologies**:
   - Capture domain-specific knowledge, including entities and relationships at both definitional and assertional levels.
   - If the ontology is not domain-specific, its full potential cannot be realized.
   - Ontology-driven metadata extraction is the most flexible and comprehensive approach, allowing for the modeling of fact-based, domain-specific relationships.

### Empirical Considerations on the Use of Semantics and Ontologies

Semantics is crucial for the next phase of the Web, enabling seamless interoperability of applications. Based on research and real-world applications, several empirical observations and requirements for future applications include:

- **Ontological Commitment**: Agreement among experts defining the ontology and its uses is key for semantic integration.
- **Ontology Scope**: Ontologies can capture human activities, natural phenomena, and scientific domains. Schemas for complex domains can be large and intricate.
- **Ontology Population**: Capturing real-world facts and trusted knowledge is critical. Automation is necessary for populating ontologies with millions of facts.
- **Semi-Formal Ontologies**: Practical and useful, even if they have limited expressive power.
- **Large-Scale Metadata Extraction**: Possible with tools like Semantic Enhancement Engine and SemTag/SemSeeker.
- **Heterogeneous Data Support**: Essential for integrating structured and unstructured data.
- **Key Capabilities**: Ontology creation, semantic annotation, and querying/reasoning, with a focus on path finding and rule processing.

### Applications of Semantics and Ontologies

#### 6.1 Semantic Web Services

Web services are modular, self-describing, and accessible over the Internet. While WSDL (Web Services Description Language) does not contain semantic descriptions, it specifies message structures using XML Schema. Semantic Web services extend this by mapping concepts in WSDL to ontological concepts, enhancing their functionality. Approaches like OWL-S, WSMO, FLOWS, and WSDL-S (the most standard-compliant) extend WSDL2.0 to add semantic annotations to operations, messages, and preconditions/effects.

#### 6.2 Semantic Web Service Discovery

In dynamic e-business environments, discovering and integrating appropriate Web services is crucial. Current standards like UDDI are inefficient because they lack semantic considerations. Semantic discovery involves using ontological concepts to construct queries, improving the relevance of search results. Key challenges include precision, automatic integration, and handling non-functional/QoS semantics.

#### 6.3 Semantic Integration of Tourism Information Sources

Dynamic packaging technology in the travel industry allows customers to build and book vacations by combining flights, hotels, car rentals, and other activities. This technology integrates multiple travel components on demand, replacing traditional brochures. Semantic integration ensures that these components are combined seamlessly, providing a better user experience.