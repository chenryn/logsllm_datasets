Structural metadata provides information regarding the structure of
content. It describes how items are put together or arranged. The
amount and type of such metadata will vary widely with the type of
document. For example, an HTML document may have a set of
predefined tags, but these exist primarily for rendering purposes.
Therefore, they are not very helpful in providing contextual
information for content. Nevertheless, positional or structural
10 Semantic Web Processes and Their Applications
placement of information within a document can be used to further
embellish metadata (e.g., terms or concepts appear in a title may be
give higher weight to that appearing in the body). On the other hand,
XML gives the ability to enclose content within more meaningful
tags. This is clearly more useful in determining context and relevance
when compared to the limitations of syntactic metadata for providing
information about the document itself.
For example, a DTD or XSD outlines the structural metadata of a
particular document. It lists the elements, attributes, and entities in a
document and it defines the relationships between the different
elements and attributes. A DTD declares a set of XML element names
and how they can be used in a document. The following lines,
extracted from a DTD, describe a set of valid XML documents:
Structural metadata tell us how data are grouped and put in ordered
arrangements with other data. This DTD sample indicates that a
“contacts” element contains one or more “contact” elements. A
“contact” element contains the elements “name” and “birthdate”, and
the “name” and “birthdate” elements contain data.
4.3 Semantic Metadata
Semantic metadata adds relationships, rules, and constraints to
syntactic and structural metadata. This metadata describe contextually
relevant or domain-specific information about content based on a
domain specific metadata model or ontology, providing a context for
interpretation. In a sense, they capture a meaning associated with the
content. If a formal ontology is used for describing and interpreting
this type of metadata, then it lends itself to machine processability and
hence higher degrees of automation.
Semantic data provides a means for high-precision searching, and,
perhaps most importantly, it enables interoperability among
heterogeneous data sources. Semantic metadata is used to give
meaning to the elements described by the syntactic and structural
metadata. These metadata elements allow applications to “understand”
the actual meaning of the data.
The Semantic Web and its Applications 11
By creating a metadata model of data, information, and
relationships, we are able to use reasoning capabilities such as
inference engines to draw logical conclusions based on the metadata
model, or path identification and ranking using graph based
processing leading to mining and discovery. For instance, if we know
that the ABC Company sends every year a gift to very good
customers, and that John is a very good customer, then by inference,
we know that the company will ship a gift to John next year. Or if we
find a potential customer has a business partner with another person
who is on the Bank of England list of people involved in money
laundering, the potential customer is a suspect according to the
government’s anti-money regulations. Figure 1-5 (Sheth 2003) shows
the types of metadata we have discussed.
Figure 1-5. Types of metadata
4.4 Creating and Extracting Semantic Metadata
In order to extract optimal value from a document and make it
usable, it needs to be effectively tagged by analyzing and extracting
relevant information of semantic interest. Many techniques can be
used to achieve this based on extracting syntactic and semantic
metadata from documents (Sheth 2003). These include:
12 Semantic Web Processes and Their Applications
Semantic lexicons, nomenclatures, reference sets and thesauri:
Match words, phrases or parts of speech with a static or periodically
maintained dictionary and thesaurus. Semantic lexicon, such as
WordNet (Voorhees 1998) which groups English words into sets of
synonyms called synsets and records semantic relations between
synonym sets, can be used to identify and match terms in different
directions, finding words that mean the same or are more general or
more specific. WordNet supports various types of relationships such
as synonyms, hypernyms, hyponyms, holonym, and meronym which
can de effectively used to find relationship between words and extract
the meaning of words.
Document analysis: Look for patterns and co-occurrences, and
apply predefined rules to find interesting patterns within and across
documents. Regular expressions and relationships between words can
be used to understand the meaning of documents.
Ontologies: Capturing domain-specific (application or industry)
knowledge including entities and relationships, both at a definitional
level (e.g., a company has a CEO), and capturing real-world facts or
knowledge (e.g., Meg Witman is the CEO of eBay) at an instance or
assertional level. If the ontology deployed is "one size fits all" and is
not domain-specific, the full potential of this approach cannot be
exploited.
The last option, also known as ontology-driven meta data
extraction, is the most flexible (assuming the ontology is kept up to
date to reflect changes in the real world) and comprehensive (since it
allows modeling of fact-based domain-specific relationships between
entities that are at the heart of semantic representations).
5. EMPIRICAL CONSIDERATIONS ON THE
USE OF SEMANTICS AND ONTOLOGIES
Semantics is arguably the single most important ingredient in
propelling the Web to its next phase to provide standards to
seamlessly enable interoperability of applications. Semantics is
considered to be the best framework to deal with the heterogeneity,
massive scale, and dynamic nature of the resources on the Web. Issues
pertaining to semantics have been addressed in other fields like
The Semantic Web and its Applications 13
linguistics, knowledge representation, and AI. Based on the research
on semantics, semantic Web, and real-world applications deployment,
we present a set of empirical observations, considerations, and
requirements for the construction of future applications, extended
from the original set presented in (Sheth and Ramakrishnan 2003):
• It is the “ontological commitment” reflecting agreement among the
experts defining the ontology and its uses that is a key basis for
semantic integration. A good case in point is the Gene Ontology
(GO) which despite its use of a representation with limited
expressiveness has been extremely popular among the genomic
scientists.
• Ontologies can capture human activities (e.g., modeling domains
of travel or financial services) or natural phenomena and science
(e.g., protein-protein interactions or glycan structures). Schemas
modeling some domain, especially those modeling natural
phenomena and science could be quite large and complex. For
example, the Gycomics Ontology GlycO
(http://lsdis.cs.uga.edu/projects/glycomics/) has over 600 classes,
pushes the expressiveness of the OWL language in modeling the
constraints, and is eleven levels deep.
• Ontology population which captures real world facts and trusted
knowledge of a domain is critical. In the near future, it will not be
uncommon to find ontology with millions of facts. Since it is
obvious that this is the sort of scale Semantic Web applications are
going to be dealing with, means of populating ontologies with
instance data need to be automated.
• Semi-formal ontologies, possibly based on limited expressive
power focusing on relationships but not constraints, can be very
practical and useful. Ontologies represented in more expressive
languages such as OWL (compared to RDF/S) have in practice
yielded little value in industrial applications so far. One reasons for
this could be that it is difficult to capture the knowledge that uses
the more expressive constructs of a representation language. At
the same time, when modeling more complex domains have
required use of more expressive languages and more intensive
effort in schema design as well as population.
• Large scale metadata extraction and semantic annotation is
possible, as exemplified by Semantic Enhancement Engine of
Semagix Freedom (Hammond, Sheth et al. 2002) and
SemTag/SemSeeker of IBM WebFountain (Dill, Eiron et al. 2003).
14 Semantic Web Processes and Their Applications
Storage and manipulation of metadata for millions to hundreds of
millions of content items requires best applications of known
database techniques with challenge of improving upon them for
performance and scale in presence of more complex structures.
• Support for heterogeneous data is key – it is too hard to deploy
separate products within a single enterprise to deal with structured
and unstructured data. New applications involve extensive types of
heterogeneity in format, media and access/delivery mechanisms.
Database researchers have long studied the issue of integrating
heterogeneous data, and many of these come handy.
• A vast majority of the Semantic (Web) applications that have been
developed rely on three crucial capabilities: ontology creation,
semantic annotation, and querying/reasoning. A good percentage
of reasoning used in real world applications is related to path
finding and rule processing, rather than academically popular
inferencing. All these capabilities must scale to millions of
documents and concepts.
6. APPLICATIONS OF SEMANTICS AND
ONTOLOGIES
The intention of this section is to present the state of the art of the
applications that use semantics and ontologies. We describe various
applications ranging from the use of semantic Web services, semantic
integration of tourism information sources, and semantic digital
libraries to the development of bioinformatics ontologies.
6.1 Semantic Web services
Web services are modular, self-describing, self-contained
applications that are accessible over the Internet (Curbera, Nagy et al.
2001). Currently, Web services are described using the Web Services
Description Language (Chinnici, Gudgin et al. 2003), which provide
operational information. Although the Web Services Description
Language (WSDL) does not contain semantic descriptions, it specifies
the structure of message components using XML Schema constructs.
Semantic Web services are the result of the evolution of the syntactic
definition of Web services and the semantic Web as shown in Figure
1-6.
The Semantic Web and its Applications 15
Figure 1-6. The nature of semantic Web services
One solution to create semantic Web services is by mapping
concepts in a Web service description to ontological concepts. Using
this approach, users can explicitly define the semantics of a Web
service for a given domain. Significantly different approaches to
specifying semantic Web services are exemplified by four
submissions to the World Wide Web consortium (W3C): OWL-S
(OWL-S 2004), WSMO (WSMO 2004), FLOWS (SWSF 2005) and
WSDL-S (Akkiraju, Farrell et al. 2005). WSDL-S is the most standard
compliant and incremental approach that extends WSDL2.0, W3C’s
recommendation for Web service specification. Figure 1-7 illustrates
METEOR-S WSDL-S Annotator tool (Patil, Oundhakar et al. 2004)
and the mapping that have been established between WSDL
descriptions and ontological concepts.
16 Semantic Web Processes and Their Applications
Figure 1-7. Annotating Web services with ontological concepts
Based on the analysis of WSDL descriptions, three types of
elements can have their semantics increased by annotated them with
ontological concepts: operations, messages, and preconditions and
effects. All the elements are explicitly declared in a WSDL
description.
Operations. Each WSDL description may have a number of
operations with different functionalities. For example, a WSDL
description can have operations for both booking and canceling flight
tickets. In order to add semantics, the operations must be mapped to
ontological concepts to describe their functionality.
Message. Message parts, which are input and output parameters of
operations, are defined in WSDL using the XML Schema. Ontologies
– which are more expressive than the XML Schema – can be used to
annotate WSDL message parts. Using ontologies, not only brings user
requirements and service advertisements to a common conceptual
space, but also helps to use and apply reasoning mechanisms.
Preconditions and effects. Each WSDL operation may have a
number of preconditions and effects. The preconditions are usually
logical conditions, which must be evaluated to true in order to execute
a specific operation. Effects are changes in the world that occur after
the execution of an operation. After annotating services’ operations,
inputs, and outputs, preconditions and effects can also be annotated.
The Semantic Web and its Applications 17
The semantic annotation of preconditions and effects is important for
Web services since it is possible for a number of operations to have
the same functionality, as well as, the same inputs and outputs, but
different effects.
6.2 Semantic Web service discovery
Given the dynamic nature of e-business environment, the ability to
find best matching Web services that can also be easily integrated to
create business processes is highly desirable. Discovery is the
procedure of finding a set of appropriate Web services, select a
specific service that meets user requirements, and bind it to a Web
processes (Verma, Sivashanmugam et al. 2004). The search of Web
services to model Web process applications differs from the search of
tasks to model traditional processes, such as workflows. One of the
main differences is in terms of the number of Web services available
to the composition process. In the Web, potentially thousands of Web
services are available. Therefore, one of the problems that need to be
solved is how to efficiently discover Web services (Cardoso and Sheth
2003).
Currently, the industry standards available to register and discover
Web services are based on the Universal Description Discovery and
Integration specification (UDDI 2002). Unfortunately, discovering
Web services using UDDI is relatively inefficient since the
specification does not take into account the semantics of Web
services, even though it provides an interface for keyword and
taxonomy based searching as shown in Figure 1-8.
18 Semantic Web Processes and Their Applications
Figure 1-8. State of the art in discovery (Cardoso, Bussler et al. 2005)
The key to the discovery of Web services is having semantics in
the description of services itself (Sheth and Meersman 2002) and then
use semantic matching algorithms (e.g. (Smeaton and Quigley 1996;
Klein and Bernstein 2001; Rodríguez and Egenhofer 2002; Cardoso
and Sheth 2003), to find Web services. An approach for semantic Web
service discovery is the ability to construct queries using concepts
defined in a specific ontological domain. By having both the
description and query explicitly declare their semantics, the results of
discovery will be more relevant than keyword or attribute-based
matching.
The semantic discovery of Web services has specific requirements
and challenges compared to previous work on information retrieval
systems and information integration systems. Several issues that need
to be considered include:
• Precision of the discovery process. The search has to be based, not
only on syntactic information, but also on data, functional, and
non-functional/QoS semantics.
• Enable the automatic determination of the degree of integration of
the discovered Web services and the Web process host.
• The integration and interoperation of Web services differs from
previous work on schema integration due to the polarity of the
schema that must be integrated (Cardoso and Sheth 2003).
Adding semantic annotations to WSDL specifications and UDDI
registries allows improving the discovery of Web services. The
The Semantic Web and its Applications 19
general algorithm for semantic Web service discovery requires the
users to enter Web service requirements as templates constructed
using ontological concepts. There phases of the algorithm can be
identified. In the first phase, the algorithm matches Web services
based on the functionality (the functionality is specified using
ontological concepts that map to WSDL operations) they provide. In
the second phase, the result set from the first phase is ranked on the
basis of semantic similarity (Cardoso and Sheth 2003) between the
input and output concepts of the selected operations and the input and
output concepts of the initial template, respectively. The optional third
phase involves ranking the services based on the semantic similarity
between the precondition and effect concepts of the selected
operations and preconditions and effect concepts of the template.
6.3 Semantic Integration of Tourism Information
Sources
Dynamic packaging technology helps online travel customers to
build and book vacations. It can be described as the ability for a
customer to put together elements of a (vacation) trip including
flights, hotels, car rentals, local tours and tickets to theatre and
sporting events. In the offline world, such packages used to be put
together by tour operators in brochures. The new technology includes
the ability to combine multiple travel components on demand to create