communicating directly with a certain node on the anonymous network, or rather with the
terminating node of one of its routing paths. Thus, single point-to-point connections between
two nodes on the anonymous network, without any intermediate nodes at all, can be
performed while still preserving a great measure of anonymity, or at least anonymity in the
form of “reasonable doubt”, which is all that is needed in many cases. This in turn will enable
the transfer of very large data volumes, at speeds similar to normal, non-anonymized, Internet
traffic, without for that matter using excessive resources, either from the underlying network
or the participating nodes in the network.
9.1.8.   
Generic, Well-Abstracted and Backward Compatible Design
• 
The protocol emulates generic TCP communication, ready to be used for anything that
common TCP communication can be used for, but in an anonymized way.
• 
UDP communication could also be implemented if desired, either by simply tunneling it
over the common TCP-equivalent connections, or by using an identical design based on
UDP communication altogether.
• 
The design is also abstracted in a way that each individual part of the protocol design (e.g.
the establishment of routing paths, the establishment of routing tunnels or secure end-to-end
communication) can be exchanged or redesigned without the other parts being affected or
having to be redesigned at the same time.
• 
As has been presented, the anonymization protocol can be transparently applied to any
already existing networking-enabled application, by means of some simple binary hooks,
without either help from the original author or having the application itself knowing anything
about it.
White Paper:
Generic, Decentralized, Unstoppable Anonymity: The Phantom Protocol
Author:
Magnus Bråding
Version: 0.7
2008-08-04
64(68)
10.
Known Weaknesses
In this section, some of the known weaknesses and avenues of attacking the protocol will be
presented and summarized.
1.  If all the nodes in a routing path are being controlled by the same attacker, this attacker can
synchronize the information of the individual intermediate nodes in a way that the
anonymized node can be bound to the terminating intermediate node of the routing path (i.e.
the entry/exit node).
• 
In the case of a pure exit path, this will only result in the attacker being able to monitor
which other AP addresses the anonymized node is communication with through this
specific tunnel.
• 
In the case of an entry path, the attacker will be able to discover the connection between
the AP address of the path and the IP address of the anonymized node that owns it, and
thus be able to know the identity behind this AP address in a more permanent fashion
(until the anonymized node changes it’s AP address anyway, if ever).
• 
Under no circumstances, however, will the attacker be able to take part of any of the data
being transported over the routing path, due to the end-to-end encryption that is always
employed for all communications in the Phantom network.
• 
One very important detail is that it will be very difficult for the attacker to conclusively
know that its nodes actually constitute the entire path, because the last node in the path
before the anonymized node will never be able to determine if it is actually
communicating with the anonymized node itself, or with just yet another intermediate
node in a routing path. This is indeed a very important strength of the protocol design.
2.  If a specific attacker would be able to monitor and correlate all network traffic throughout an
entire routing tunnel, this attacker would be able to trace the routing path backwards or
forward from one of its endpoints to the other (by means of seeing that the exact amount of
bytes that arrive to a node is being sent along to another node immediately after it has
arrived to the first node, in a repeated fashion), thus successfully executing an attack with
the same consequences as in item 1 above, but also in addition not having to be in doubt
regarding whether the tunnel is really being terminated at the last node the attacker knows
about or not.
• 
Some anonymization protocols solve this problem (well, at least try to anyway), by
explicitly delaying data in each routing point, and in some cases even by adding junk
data connections in each step. However, since such a concept would not at all align with
the Phantom design goal of being a high throughput network, the best solution is most
likely rather to optimize the intermediate node selection algorithms in such a way that
nodes are chosen that are not likely to be under the control and correlation capability of
the same attacker, e.g. selecting the IP addresses for these nodes in such a way that
they are not located at the same ISP, or not even in the same country or part of the
world. This will of course also have a negative impact on throughput, so such an
optimization is probably best made available as a user individual option, since this choice
only affects the user’s own anonymity and throughput, and nothing else.
White Paper:
Generic, Decentralized, Unstoppable Anonymity: The Phantom Protocol
Author:
Magnus Bråding
Version: 0.7
2008-08-04
65(68)
3.  Individual intermediate nodes in a routing path could try to communicate their identity (i.e. IP
address) to other non-adjacent intermediate nodes throughout the same routing path, by
means of different kinds of covert channels. Such covert channels would include coding
information into the timing between data chunks being sent over the tunnel, or into the size
of these data chunks. The only information that would need to be communicated from one
attacker node to another would be their IP address, by which they could then connect
directly to each other separately to exchange arbitrary amounts of information.
• 
This is a real threat indeed, but again, due to the fact that none of these attacker nodes
can be certain about whether it is adjacent to the anonymized node itself or not, the
damage is luckily somewhat limited. And again, no actual data from the tunnel could ever
be eavesdropped upon.
• 
Countermeasures in the form of micro delays and data chunk size reorganization in
intermediate nodes could be more or less successfully employed against these kinds of
attacks, but none of these protective measures will ever be 100% secure, so this threat
should indeed be taken seriously.
White Paper:
Generic, Decentralized, Unstoppable Anonymity: The Phantom Protocol
Author:
Magnus Bråding
Version: 0.7
2008-08-04
66(68)
11.
Comparison with Other Anonymization Solutions
11.1.  Advantages of Phantom over TOR
Some advantages of Phantom compared to TOR are:
• 
Phantom is designed from the ground up with current and future anonymization needs and
demand in mind.
• 
Phantom is compatible with all existing and future network enabled software, without any
need for adaptations or upgrades.
• 
Phantom has much higher throughput, not being limited by a specific number of out-proxies.
• 
If the “self eliminating” reasonable doubt inducing design of Phantom is taken into
consideration, the maximum network throughput level is even equal to that of normal non-
anonymized communication!
• 
Another throughput generating design detail is the possibility of selecting your own routing
nodes, thus being able to pick ones that are close to yourself on high-speed connections.
• 
Phantom has no maximum limit for how much data can be transferred, while TOR explicitly
forbids any larger volumes of data being transferred through it.
• 
The Phantom network is isolated from the rest of the Internet, and thus, no participating node
ever has to worry about any kind of criminal act being perpetrated against targets on the
“common Internet” from their own IP address. Only nodes that have willingly joined and
explicitly accepted the risks of being reachable by anonymous communication can be targets
of anything bad, and thus, they also have the possibility to regulate what services they make
available to the anonymous network, which even further reduces this risk.
• 
Even so, any person can easily create an “out-proxy” specific to incoming traffic to their
own network or servers, which would enable anonymous access only to this limited
network space. Therefore, the advantages of TOR out-proxies are in no way lost, just
selectively accessible, and with the possibility of much better control.
• 
The secrecy of all information being transferred through the Phantom network is always
inherently assured, through the use of integrated and mandatory PKI and asymmetric end-to-
end encryption.
• 
Attacks like the “out-proxy sniffing” being possible in the TOR network are impossible with
the Phantom network, due to this enforced end-to-end encryption.
• 
The “DNS leak” and similar kinds of attacks, that have gotten some attention in connection to
the use of TOR, are made impossible by Phantom. This is because all network communi-
cation operations in the anonymized application (or even the entire operating system if so
preferred) are being hooked at the operating system level. Thus, a user mode application is
unable to bypass the redirection of traffic even if it wanted to, and even more so if someone
attempted to trick it into doing so.
• 
Phantom better prevents positive identification through traffic analysis, through the exclusive
use of common SSL connections for its traffic (as an “outer shell” that is). This makes it much
harder to automatically block at the ISP level, since any attempts to automatically block it
would most likely bring with it large amounts of false positives in the form of common
legitimate encrypted web traffic (HTTPS) being blocked. ISPs would want to prevent such
false positives at all costs, since web surfing stability is one of the veritable central bench-
marks for how customers experience the quality of the services delivered by any ISP.
White Paper:
Generic, Decentralized, Unstoppable Anonymity: The Phantom Protocol
Author:
Magnus Bråding
Version: 0.7
2008-08-04
67(68)
11.2.  Advantages of Phantom over I2P
Some advantages of Phantom compared to I2P4 are:
• 
Phantom is compatible with all existing and future network enabled software, without any
need for adaptations or upgrades.
• 
Phantom has higher throughput, having an explicit focus on high throughput rather than low
latency.
• 
If the “self eliminating” reasonable doubt inducing design of Phantom is taken into
consideration, the maximum throughput is even equal to normal non-anonymized
communication!
• 
Another throughput generating design detail is the possibility of selecting your own routing
nodes, thus being able to pick ones that are close to yourself on high-speed connections.
• 
The secrecy of all information being transferred through the Phantom network is always
inherently assured, through the use of integrated and mandatory PKI and asymmetric end-to-
end encryption.
• 
Since version 0.6, I2P no longer supports end-to-end encryption in all cases.
• 
Phantom better prevents positive identification through traffic analysis, through the exclusive
use of common SSL connections for its traffic (as an “outer shell” that is). This makes it much
harder to automatically block at the ISP level, since any attempts to automatically block it
would most likely bring with it large amounts of false positives in the form of common
legitimate encrypted web traffic (HTTPS) being blocked. ISPs would want to prevent such
false positives at all costs, since web surfing stability is one of the veritable central bench-
marks for how customers experience the quality of the services delivered by any ISP.
11.3.  Advantages of Phantom over Anonymized File Sharing Software
There already exists some file sharing applications with built-in anonymization of different
degrees and levels of quality. Without going into their specific technical properties, it can quickly
be established that these are much more likely to be the victims of “general bans” of the entire
protocol or application, since it is much easier to claim that “X% of all files shared through this
protocol are illegal, there are also protocols with equal file transfer capability, and thus it would be
justified to ban/block this protocol altogether”.
When it comes to generic anonymization protocols like Phantom, it is completely impossible to
make any estimate of how large a part of its traffic is being used for any certain kind of activity,
since the only way to know what is being transferred through a Phantom connection it to be one
of the end-points of the communication itself, i.e. either being the origin or the intended receiver
of the transferred data.
And then last, but absolutely not least, there are of course a lot more activities benefitting from
anonymization than just file transfer and file sharing. So, making the anonymization protocol
generic and non-application specific does certainly increase its usefulness and potential, by
several orders of magnitude, just by itself.
4 http://www.i2p2.de
White Paper:
Generic, Decentralized, Unstoppable Anonymity: The Phantom Protocol
Author:
Magnus Bråding
Version: 0.7
2008-08-04
68(68)
12.
Summary and Future of the Protocol
This white paper is in no way a complete protocol specification, far from it actually. Its main goal
is rather to provide suggestions for solutions for several typical problems that are bound to arise
when designing a decentralized anonymization protocol and collect them all in a comprehensive
and more or less easily digested single source of documentation which could hopefully work as
some kind of reference point for any discussions that may be inspired by it.
The author of this paper sees a great potential and future demand for a generic anonymization
protocol that has most, or all, of the stipulated properties of the Phantom protocol. Knowing that
the actual creation of a secure protocol of the proposed design, along with all things related to
such an endeavor, normally requires both the knowledge, resources and review of many well
qualified contributors, this paper is mainly an attempt to induce discussion, and inspire a more
organized design and development project focused on creating such a protocol, not necessarily
having all the exact properties and design details of the Phantom protocol at all. In order to
minimize any future design and implementation effort, and in order to isolate the important
questions specific to anonymity, care was also taken to build upon well-known and robust existing
technologies where suitable, e.g. SSL and distributed hash tables.
The work on this project was started long before the idea of presenting it at a conference arose.
Since such a presentation is perfectly aligned with the goal of maximizing the outreach and
potential to inspire discussion, however, it was a given path of action once it came to mind.
Finally, it should be noted that several previous protocol designs and implementations exist that
share some of the properties and features of the Phantom protocol. The author of this paper
however, found it to be an interesting challenge to take one step back, to really think through
which design goals would be most desired and important in such a protocol of today and the
future, and then demonstrate by more or less detailed example that a protocol following these
design criteria could, indeed, practically be brought together as a whole.
One current, particularly promising anonymization protocol, among those of which this author is
currently aware, which is also the one sharing most properties with Phantom (although still
lacking several of them, as listed in the previous section), is the I2P protocol. Readers are indeed
encouraged to give it a closer look, in the hope of such examination inspiring even more fruitful
discussions.
12.1.  Central Project Location
A Google Code repository has been reserved for the project, which will hopefully be able to work
as a central coordinating location for future design, development and implementation of the
Phantom protocol and the ideas inspired by it.
It hosts a code repository, a discussion group, a wiki and a blog, and all the other common tools
enabling participants to collaborate in such a shared project.
It can be found here:
http://code.google.com/p/phantom
Just as with any other community project, In order to live on and thrive, the Phantom project
needs dedicated and knowledgeable people to participate and contribute. Thus, if you want to be
a maintainer, developer or otherwise part of the project, please don’t hesitate to join in at any time
at the project site, or to contact me directly5!
5 magnus.brading [at] fortego.se