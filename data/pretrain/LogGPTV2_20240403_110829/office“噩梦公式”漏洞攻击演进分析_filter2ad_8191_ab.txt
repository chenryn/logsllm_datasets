看来还有一层base64加密，依据代码看解码完是一个gzip文件。再解码之并保存成gzip文件，从压缩包里面提取出文件，打开后如下：
可以看到里面还有第3层base64加密，解密后的数据会被直接加载进内存，然后将内存起始地址直接传给新创建的一个线程，我们将上图中的base64进行解码，保存成二进制文件后用模拟器执行，得到如下结果：
不幸的是，我们分析时服务器已经无法连接，所以我们无从知道后面的流程是什么。
我们在2018年1月17日捕获一个以商业合作模板为诱饵的中文样本，该样本只利用了CVE-2017-11882漏洞，打开后界面如下：
这个样本在我们的平台中跑出的进程树如下：
### 3\. 利用office插件实现驻留
我们在2017年9月抓到CVE-2017-11826在野0day时首次观察到这一技巧，在捕获这次CVE-2018-0802在野0day时再一次观察到这种用法。除了已被我们和其他厂商公开的一些个子外，我们再披露2个利用这一技巧的样本，两个样本均为俄语。
其中一个为我们在2018年1年9日捕获：
另一个在2018年1月12日捕获：
两个样本都会先释放setup.zip文件到temp目录，在触发漏洞后将setup.zip文件拷贝到Word插件目录，这样一来，下次Word启动时payload就会自动执行，具体细节我们已经在之前对CVE-2018-0802的分析中做详细说明。
### 4\. 利用msxsl.exe绕过AppLocker
我们在2018年1月22日捕获到一个诱饵内容是与薪水相关的印度尼西亚文样本，该样本同时内嵌CVE-2017-11882和CVE-2018-0802两个漏洞的利用模块。
该样本为docx格式，打开后需要点击一次对话框才能触发：
将其保存为zip格式，可以看到\word\embeddings目录下内嵌了多个ole对象，具体情况如下图所示：
两个漏洞对应的4个ole的shellcode目的均一致，漏洞触发后首先搜索获取相关函数，拷贝文件到指定目录：
然后展开短路径，接着启动EXCEL.exe进程并传入参数，启动进程后马上退出公式编辑器进程。
所谓的EXCEL.exe其实是微软的msxsl.exe文件，该文件的数字签名已过时。用msxsl.exe配合xml去启动xsl文件的套路并不新颖，网上已有相关分析文章(
)，此处不过多展开。
xsl文件的部分内容如下，代码大体上套用了。
令我们感到费解的是，攻击者在1.xml文件中指定的内容xsl文件名为script.xsl，然而从上面的图片中我们看到攻击者的第2参数指定的文件名为1.xsl，这样貌似并不能使xsl文件正确加载起来。
如果文件名正确指定，则1.xsl中的base64加密部分会被解码后以二进制形式直接加载进内存，可以看到解码后里面含有一个PE文件，通过阅读上述xsl代码，可以看到最终会启动MSFShellCodeLoader2函数，函数名已经清楚地解释了它的作用。整个过程文件不会落地。
这个样本释放的另外两个文件：spoolsv.exe和mpsvc.dll，属于白利用。spoolsv.ex是微软打印机相关的一个正常程序，带有合法数字签名，正常启动时它会加载一个正常的mpsvc.dll。而释放的mpsvc.dll为恶意程序，它利用dll路径搜索顺序的先后关系，使之被spoolsv.exe加载，从而实现偷天换日。
不过，在这个样本中，我们没有显式看到这对白利用被加载，但在其他的一些样本，如下面这个我们2017年12月22日捕获的样本中，我们观察到了类似的白利用被加载(spoolsv.exe+vsodscpl.dll)。该样本利用了CVE-2017-11882，主题为面向应用物理学家的调查问卷，打开后界面如下：
该样本在我们平台跑出的进程树如下：
可以看到spoolsv.exe程序被启动，在它的dll加载列表中，就有恶意的vsodscpl.dll:
我们还于2018年1月11日捕获另一个样本，该样本利用了CVE-2018-0802漏洞，诱饵主题是马来西亚时事：
该样本所用手法和上文中印度尼西亚相关样本的手法完全相同，此处不作过多说明。
### 5\. 利用msiexec.exe绕过AppLocker
我们在2018年1月22日捕获的一个样本中观察到了这种技巧。这种技巧在此文()中有描述。
该邮件基本信息如下，附件利用了CVE-2017-11882，诱饵内容为贸易相关的俄文样本。
该样本在我们的平台跑出的进程树如下，不过这貌似是个测试。
不过，我们在2018年1月24日又捕获两个利用msiexec.exe的CVE-2017-11882样本，两个样本的诱饵内容都只有寥寥几句话，一个写的是订单事宜，一个写的是银行事宜。这次终于不是测试了，两个样本跑出的行为完全相同，如下，可以看到之前原来测试语句的地方现在已经被远程msi文件所替换。
### 6\. certutil.exe远程执行代码利用
这种方法在这篇文章中有描述(
)，由上面的分析可以看到，在用CVE-2018-0798
相关样本中用到了这种技巧。同一天我们还抓到另一个利用CVE-2018-0798进行攻击的样本也利用了certutil.exe，第二个样本的进程树如下：
### 7\. 计划任务执行代码
我们在2018年1月16日捕获2个利用计划任务执行代码的公式编辑器攻击样本。
其中一个诱饵内容主题是报告的俄文样本，利用漏洞为CVE-2017-11882，不过文档打开后并没有什么吸引人的画面：
首先，这个样本也在Word插件目录下放置了一个a.wll文件，不过引起我们注意的是它进程链里面创建的计划任务：
用来执行计划任务的js文件使用了混淆代码，截取部分如下。js的具体执行细节这里不做展开。
第二个样本利用的漏洞为CVE-2017-11882，诱饵内容为2018年假期日历：
这个样本的进程树如下所示，红框圈出部分为其创建的计划任务
我们在2018年1月18日又捕获一个利用CVE-2018-0802的样本，主题涉及我国某地方自治区：
该样本的进程树如下，可以看到样本为一个powershell脚本创建了计划任务：
233.ps1文件里面是反弹shell相关语句：
### 8\. 使用bitsadmin进行驻留
2018年1月23日，我们捕获一个同时利用CVE-2017-11882和CVE-2018-0802的样本：
该样本同时利用office插件、bitsadmin两种方式实现驻留，不理解bitsadmin实现驻留方式的可参考这里(),
并且尝试使用一个老的dll劫持漏洞来实现白利用——CVE-2010-3143(参见这里：)。
该样本在我们的平台上跑出的进程树如下，可以看到它也同时利用了regsvr32和rundll32作为辅助手段：
#
## 总结
黑客利用Office办公软件漏洞实施的网络攻击目前呈爆发性增长，相关攻击的热度将在2018年一直延续。360高级威胁应对团队自公式编辑器相关漏洞出现伊始就对相关样本进行监控。在最近的两个月里，我们不断观察到攻击者在利用公式编辑器系列漏洞进行攻击时演化出来的新技巧和新手法，包括攻击载体的的变化，攻击漏洞的延伸和利用手法的演化。请相关单位和企业加强对该类型攻击的防范，个人用户请安装360安全卫士并及时修复相关漏洞，确保电脑得到有效防护。