"在集群节点中推广配置文件"](#ch-config-ccs-CA.html#s1-clusterconf-propagate-ccs-CA){.xref}
所述。
:::
:::
::: section
::: titlepage
## [⁠]{#ch-config-ccs-CA.html#s2-backup-fence-config-ccs-CA}5.7.3. 配置备用 Fence 设备 {.title}
:::
::: para
您可以为一个节点定义多个 fencing 方法。如果使用第一个方法 fencing
失败，则系统会尝试使用第二个方法 fence
该节点，然后是其它您配置的方法。要为节点配置备用 fencing
方法，您需要为一个节点配置两个方法，并为每个方法配置一个 fence 事务。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
系统使用您所配置的 fencing 方法的顺序与其在配置文件中的顺序一致。使用
`ccs`{.command} 命令配置的第一个方法是首选 fencing
方法，您配置的第二个方法是备用 fencing
方法。要更改顺序，您可以从配置文件中删除首选 fencing
方法，然后再将其添加回配置文件中。
:::
:::
:::
::: para
注：您可在任何时候执行以下命令输出当前为某个节点配置的 fence
方法和事务列表。如果您没有指定节点，这个命令将列出为所有节点当前配置的
fence 方法和事务。
:::
``` screen
ccs -h host --lsfenceinst [node]
```
::: para
使用以下步骤为某个节点配置首选 fencing 方法，该方法使用名为
`apc`{.literal} 的 fence 设备，该设备使用 `fence_apc`{.literal} fencing
代理，并配置使用名为 `sanswitch1`{.literal} 的 fence 设备作为备用
fencing 设备，该设备使用 `fence_sanbox2`{.literal} fencing 代理。因为
`sanswitch1`{.literal} 设备是基于存储的 fencing
代理，所以您还需要为那个失败配置 unfencing。
:::
::: {.orderedlist xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    为该节点添加首选 fence 方法，并为该 fence 方法命名。
    :::
    ``` screen
    ccs -h host --addmethod method node
    ```
    ::: para
    例如：请执行以下命令在集群节点 `node-01.example.com`{.literal}
    的配置文件中为节点 `node-01.example.com`{.literal} 将名为
    `APC`{.literal} 的 fence 方法配置为首选方法：
    :::
    ``` screen
    ccs -h node01.example.com --addmethod APC node01.example.com
    ```
2.  ::: para
    为首选方法添加 fence 事务。您必须指定要该节点要使用的 fence
    设备，应用这个事务的节点，该方法的名称以及具体到这个节点该方法的所有选项：
    :::
    ``` screen
    ccs -h host --addfenceinst fencedevicename node method [options]
    ```
    ::: para
    例如：请执行以下命令在集群节点 `node-01.example.com`{.literal}
    的配置文件中配置 fence 事务，该节点使用该 fence 设备中名为
    `apc`{.literal} 的 APC 电源切换端口 1 使用名为 `APC`{.literal}
    的方法 fence 集群节点 `node-01.example.com`{.literal}：
    :::
    ``` screen
    ccs -h node01.example.com --addfenceinst apc node01.example.com APC port=1
    ```
3.  ::: para
    为该节点添加备用 fence 方法，并提供该 fence 方法的名称。
    :::
    ``` screen
    ccs -h host --addmethod method node
    ```
    ::: para
    例如：请执行以下命令为集群节点 `node-01.example.com`{.literal}
    配置文件中的节点 `node-01.example.com`{.literal} 配置名为
    `SAN`{.literal} 的 fence 方法：
    :::
    ``` screen
    ccs -h node01.example.com --addmethod SAN  node01.example.com
    ```
4.  ::: para
    为该备用方法添加 fence 事务。您必须指定该节点要使用的 fence
    设备，应用这个事务的节点，该方法的名称以及具体在这个节点中该方法要使用的所有选项：
    :::
    ``` screen
    ccs -h host --addfenceinst fencedevicename node method [options]
    ```
    ::: para
    例如：请执行以下命令在集群节点 `node-01.example.com`{.literal}
    的配置文件中配置 fence 事务，该节点在名为 `sanswitch1`{.literal} 的
    fence 设备中使用 SAN 切换电源端口 11 fence 使用名为 `SAN`{.literal}
    方法的集群节点 `node-01.example.com`{.literal}：
    :::
    ``` screen
    ccs -h node01.example.com --addfenceinst sanswitch1 node01.example.com SAN port=11
    ```
5.  ::: para
    因为 `sanswitch1`{.literal}
    设备是基于存储的设备，您必须为这个设备指定 unfencing。
    :::
    ``` screen
    ccs -h node01.example.com --addunfence sanswitch1 node01.example.com port=11 action=on
    ```
:::
::: para
您可以根据需要继续添加 fencing 方法。
:::
::: para
这个过程为集群中的一个节点配置 fence 设备和备用 fence
设备。您还需要为该集群中的其它节点配置 fencing 。
:::
::: para
[例 5.4 "`cluster.conf`{.filename} 添加备用 Fence
方法后"](#ch-config-ccs-CA.html#ex-clusterconf-backupfence-ccs-CA){.xref}
演示了在该集群每个节点中，添加使用电源的主要 fencing 方和基于存储的备用
fencing 方法后的 `cluster.conf`{.literal} 配置文件。
:::
::: example
[⁠]{#ch-config-ccs-CA.html#ex-clusterconf-backupfence-ccs-CA}
**例 5.4. `cluster.conf`{.filename} 添加备用 Fence 方法后**
::: example-contents
``` screen
```
:::
:::
::: para
注：完成集群的所有组件配置后，需要在所有节点中同步该集群配置文件，如
[第 5.15 节
"在集群节点中推广配置文件"](#ch-config-ccs-CA.html#s1-clusterconf-propagate-ccs-CA){.xref}
所述。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
系统使用您配置的 fencing
方法的顺序与其在集群配置文件中的顺序一致。您配置的第一个方法就是首选
fencing 方法，您配置的第二个方法就是备用 fencing
方法。要更改顺序，您可以从配置文件中删除首选 fencing
方法，然后再添加回来。
:::
:::
:::
:::
::: section
::: titlepage
## [⁠]{#ch-config-ccs-CA.html#s2-dualpower-fence-config-ccs-CA}5.7.4. 配置使用冗余电源的节点 {.title}
:::
::: para
如果您将集群配置为使用冗余电源供应您的节点，则您必须确定配置 fencing
以便在节点需要被 fence
时可完全关闭它们。如果您将每个电源供应都设定为独立的 fence
方法，则会分别 fence 每个电源供应；第二个电源供应可在 fence
了第一个电源供应时让该系统继续运行，同时根本不会 fence
该系统。要将系统配置为双电源供应，您必须配置 fence
设备以便可关闭两个电源并完全关闭系统。这要求您在一个 fencing
方法中配置两个事务，且在您配置的每个事务中，要在为设备配置
`action`{.literal} 属性 `on`{.literal} 之前配置 `action`{.literal} 属性
`off`{.literal}。
:::
::: para
请按照本小节中的步骤为有双电源供应的节点配置 fencing。
:::
::: {.orderedlist xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    在您可以为使用冗余电源的节点配置 fencing
    强，您必须为该集群将每个电源开关配置为 fence 设备。有关配置 fence
    设备的详情请参考 [第 5.5 节 "配置 Fence
    设备"](#ch-config-ccs-CA.html#s1-config-fence-devices-ccs-CA){.xref}。
    :::
    ::: para
    请执行以下命令输出当前为您的集群配置的 fence 设备列表：
    :::
    ``` screen
    ccs -h host --lsfencedev
    ```
2.  ::: para
    在该节点中添加 fence 方法，并为该 fence 方法提供名称。
    :::
    ``` screen
    ccs -h host --addmethod method node
    ```
    ::: para
    例如：请执行以下命令在集群节点 `node-01.example.com`{.literal}
    的配置文件中为节点 `node-01.example.com`{.literal} 配置名为
    `APC-dual`{.literal} 的 fence 方法：
    :::
    ``` screen
    ccs -h node01.example.com --addmethod APC-dual node01.example.com
    ```
3.  ::: para
    为该 fence 方法的第一个电源添加 fence 事务。您必须指定该节点要使用的
    fence
    设备，应用这个事务的节点，该方法的名称以及具体在这个节点中可用于这个方法的所有选项。此时您可将
    `action`{.literal} 属性配置为 `on`{.literal}。
    :::
    ``` screen
    ccs -h host --addfenceinst fencedevicename node method [options] action=off
    ```
    ::: para
    例如：您可以执行以下命令在集群节点 `node-01.example.com`{.literal}
    的配置文件中配置 fence 事务，该事务在名为 `apc1`{.literal} 的 fence
    设备中使用 APC 切换电源端口 1 fence 集群几点
    `node-01.example.com`{.literal}，fence 方法名为
    `APC-dual`{.literal}，并将 `action`{.literal} 属性设定为
    `on`{.literal}：
    :::
    ``` screen
    ccs -h node01.example.com --addfenceinst apc1 node01.example.com APC-dual port=1 action=off
    ```
4.  ::: para
    为该 fence 方法的第二电源供应添加 fence
    事务。您必须指定该节点要使用的 fence
    设备，应用这个事务的节点，该方法的名称以及具体在这个节点中这个方法的所有选项。此时您也可为这个事务将
    `action`{.literal} 属性配置为 `off`{.literal}：
    :::
    ``` screen
    ccs -h host --addfenceinst fencedevicename node method [options] action=off
    ```
    ::: para
    例如：请执行以下命令在集群节点 `node-01.example.com`{.literal}
    的配置文件中配置第二 fence 事务，该事务在名为 `apc2`{.literal} 的
    fence 设备中使用 APC 切换电源断口 1 fence 集群节点
    `node-01.example.com`{.literal}，该节点使用您为第一个事务所指定的同一方法，即
    `APC-dual`{.literal}，并将 `action`{.literal} 属性设定为
    `off`{.literal}：
    :::
    ``` screen
    ccs -h node01.example.com --addfenceinst apc2 node01.example.com APC-dual port=1 action=off
    ```
5.  ::: para
    此时，您可为给 fence 方法的第一电源供应添加另一个 fence 事务，将
    `action`{.literal} 属性配置为
    `on`{.literal}。您必须指定该节点要使用的 fence
    设备，应用这个事务的节点，该方法的名称以及具体到这个节点这个方法的所有选项，并将
    `action`{.literal} 属性指定为 `on`{.literal}：
    :::
    ``` screen
    ccs -h host --addfenceinst fencedevicename node method [options] action=on
    ```
    ::: para
    例如：请执行以下命令为集群节点 `node-01.example.com`{.literal}
    的配置文件配置 fence 事务，该事务使用名为 `apc1`{.literal} 的 fence
    设备的 APC 切换电源端口 1 fence 集群节点
    `node-01.example.com`{.literal}，使用的方法名为
    `APC-dual`{.literal}，并将 `action`{.literal} 属性设定为
    `on`{.literal}：
    :::
    ``` screen
    ccs -h node01.example.com --addfenceinst apc1 node01.example.com APC-dual port=1 action=on
    ```
6.  ::: para
    您可为给 fence 方法的第二电源供应添加另一个 fence 事务，将
    `action`{.literal} 属性指定为
    `on`{.literal}。您必须指定该节点要使用的 fence