can complement current detection methods by leveraging the central
observation of domain registrations.
To investigate the potential of PREDATOR to detect spammer do-
mains that existing blacklists miss, we sample the unlabeled .com do-
mains that PREDATOR predicts as bad, and manually check whether
they host any spam-related content. When we performed the analysis,
most of the domains had expired, and we could not directly crawl
and assess their content. Alternatively, we used historical snapshots
from DomainTools [10] and the Internet Archive [28]. Table 4 shows
the page categories of 100 randomly sampled domains. 74% of the
unlabelled domains that PREDATOR predict as bad refer to content
Days from registration to first blacklisting (log scale)5 minutes  1 hour    1        10       50       150   Cumulative % of spammer domains0  10 20 30 40 50 60 70 80 90 100Spamhaus (on .com)URIBL (on .com)spam trap (on .com)URIBL (on .net)spam trap (on .net)False positive (%)0102030405060708090100True positive (%)0102030405060708090100Spamhaus  2-hour blacklisting00.511.522.533.544.55020406080100Score
ratio
100.00%
Authoritative nameservers
64.88%
Trigrams in domain name
62.98%
IP addresses of nameservers
61.28%
Registrar
30.80%
ASes of nameserver IP addresses
30.30%
Daily hour of registration
28.98%
Name cohesiveness
22.58%
Weekday of registration
20.58%
Dormancy period for re-registration
19.50%
Re-registration from same registrar
Life cycle
18.55%
Edit distances to known-bad domains 17.72%
Previous registrar
16.50%
14.60%
Brand-new proportion
13.71%
Retread proportion
12.90%
Drop-catch proportion
11.25%
Containing digits
Name length
10.71%
9.60%
Ratio of the longest English word
8.66%
Probability of batch size
8.02%
Containing “–”
Length of registration period
3.34%
D
D
D
D
D
D
B
D
R
R
R
D
R
B
B
B
D
D
D
B
D
D
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
Table 6: Ranking of feature importance in PREDATOR (D for
domain proﬁle category, R for registration history category,
and B for batch correlation category).
that is often hosted on spam-related sites (e.g., pharmaceutical content,
adult content), and 26% of these pages have no obvious spam-related
content (though might have other malicious activities that we cannot
measure, such as drive-by downloads). This result demonstrates
PREDATOR’s ability to augment existing blacklists by exposing
malicious domains that they fail to report.
Early detection. Another important blacklisting characteristic con-
cerns delay: how long after a spammer domain registration the
blacklists identify it. Detection delays leave users unprotected in the
interim, allowing attackers to reap greater beneﬁts from their domains.
Figure 5 shows the distribution of the time between a .com/.net do-
main’s registration and its ﬁrst appearance on blacklist (no Spamhaus
timing information on .net). We observe that both URIBL and our
spam trap take signiﬁcant time to identify spammer domains, e.g.,
around 50% of blacklisted domains manifest after 7 days. Clearly,
PREDATOR can make detection early, even weeks before appearance
on blacklists, which provides more time to respond or prevent attacks.
On the other hand, Spamhaus has a mode of time-of-registration
blacklisting, where a certain amount of blacklisting occurs shortly
after domain registrations. We use a two-hour threshold to estimate
conservatively, since the Spamhaus feed that we use updates every
half hour.
To assess the degree to which Spamhaus uses time-of-registration
features to blacklist domains, and to explore how the features that
Spamhaus uses compare to our features, we evaluate the accuracy of
PREDATOR using (for both training and testing) only the domains
that Spamhaus blacklists in the ﬁrst two hours of registration to label
malicious domains. We then repeat the analysis for domains that
Spamhaus blacklists more than two hours of registration. Figure 6
shows the prediction accuracy of PREDATOR using these two sets
of labels. PREDATOR achieves a detection rate above 93% with
a 0.35% false positive when using as labels the domains that were
blacklisted within two hours. The high accuracy result suggests
PREDATOR features already contain most of those used by Spamhaus
(anecdotes indicate that Spamhaus involves only simple features, and
in Section 7.4 we further infer what features Spamhaus relies on).
PREDATOR also achieves decent accuracy using the domains that
Rank Category Feature
Rank Category Feature
1
2
3
4
5
6
7
8
9
10
D
D
D
D
D
D
R
B
R
B
Score
ratio
100.0%
Authoritative nameservers
47.72%
Registrar
44.26%
IP addresses of nameservers
37.91%
Trigrams in domain name
24.98%
ASes of nameserver IP addresses
Daily hour of registration
14.23%
Re-registration from same registrar 19.50%
11.48%
Retread proportion
10.93%
Life cycle
Drop-catch proportion
10.70%
Table 7: Top 10 ranked features in PREDATOR when apply-
ing on Spamhaus < 2-hour blacklisting (same categories as in
Table 6).
Spamhaus blacklists more than two hours after registration as labels:
a 0.35% false positive for a detection rate of about 47%. This result
shows PREDATOR can detect some malicious domains much faster
than Spamhaus can.
7.4 Analysis of the Classiﬁer
Contribution of new features. As shown in Section 5 (and Table 3),
16 out of 22 features that we identiﬁed and incorporated into PREDA-
TOR are proposed for the ﬁrst time. To evaluate the contribution of
these new features to improving the accuracy, we run an experiment
with solely the features that previous work has explored, and the
detection rate drops to 58.40% (under a 0.35% false positive rate).
On the other hand, PREDATOR with the full feature set achieves
the 70% detection rate under the same false positive rate. The result
shows that the new features that we introduced can considerably
improve the detection accuracy. Our work is the ﬁrst to develop a
reputation system that is able to accurately and automatically predict
the maliciousness of a domain at registration time. Note that prior
research either just presented preliminary measurement results [20],
or was limited to extrapolating from particular properties, such as
self-resolving nameservers [13].
Sliding window settings. We have used the sliding window mecha-
nism (introduced in Section 6.2) in the experiments to simulate the
practical deployment scenario of PREDATOR. The length of the
training window determines how much data to build the classiﬁer,
and the length of the testing window indicates how often we re-train
the model. In Table 5, we compare the detection rates with different
training/testing windows under a 0.35% false positive rate (for our
data, different cooling windows yield similar performance and we
set it to one day). Shorter training windows (i.e., less training data)
and longer testing windows (i.e., less frequent re-training) will pro-
duce less accurate predictions. The results show that the accuracy
of PREDATOR is not overly sensitive to the window settings. For
our data, training on 35-day data and re-training weekly is sufﬁcient
to maintain accuracy. We expect that when PREDATOR runs on a
different dataset, additional analysis should be performed and the
window settings may vary across different datasets.
Feature ranking. We use the scoring method in Section 6.3 to
rank our features. The scores represent how much the features can
contribute to identify either malicious or benign labels. For easy
interpretation, we calculate the score ratio by dividing the score values
with the largest one. Table 6 ranks all registration-based features on
.com zone (with the most important feature at top). The capitalized
letters in the second column indicates the feature categories: D for
domain proﬁle, R for registration history, and B for batch correlation.
Seven of the top ten features belong to the domain proﬁle category.
This result is quite encouraging, since most of these features can be
collected with less overhead and from public sources, such as WHOIS
database.
The ranking of features can help us to infer what features Spamhaus
appears to rely on for its time-of-registration blacklisting. Table 7
lists the feature importance when we apply our detection algorithm on
the domains blacklisted by Spamhaus within two hours of registration.
We focus on the top ten features. The difference between the ratio for
the ﬁrst two features in Table 7 appears larger than the ratio difference
in Table 6, which indicates that Spamhaus was inclined to use the
feature of authoritative nameservers for detection. In fact, when
considering only the nameservers that have more than 90% of their
hosted domains appearing on Spamhaus time-of-registration blacklist-
ing, those nameservers account for 86% of all domains appearing on
Spamhaus time-of-registration blacklisting. The observation suggests
that Spamhaus heavily uses nameservers to make time-of-registration
blacklisting decisions.
7.5 Evasion
As with any detection system, sophisticated attackers may attempt
to evade PREDATOR. We argue that trying to evade PREDATOR
will alter the economics for miscreants to acquire domains and conse-
quently impair their attack capability.
We ﬁrst consider two groups of PREDATOR features, nameserver-
related and lexical, which have relatively high ranks in Table 6.
Nameserver-related features include nameservers of the second-level
domains and the corresponding IP addresses and ASes (rank 1, 3, 5
in Table 6). These features are inherent to the hosting infrastructure,
which require effort for attackers to alter. We evaluate PREDATOR’s
performance under different evasion scenarios by excluding the corre-
sponding features from the system, as shown in Figure 7. The red
solid curve corresponds to the ROC curve of PREDATOR incorporat-
ing all features on .com zone, and the blue dashed curve indicates the
ROC curve if miscreants evade nameserver-related patterns (three fea-
tures). Though PREDATOR’s performance degrades, it still achieves
a good level of detection accuracy. This observation suggests that
nameserver-related features are important, but in their absence other
features can still contribute to retain good detection.
We next consider lexical features (rank 2, 7, 12, 17–19, 21 in
Table 6). Generating a large number of names is not a trivial task,
as the plausibility of the names could inﬂuence an attack’s efﬁcacy.
Changing naming patterns to use irrelevant words or random strings
could reduce click-through rates for spam or phishing. Attackers may
attempt to exploit HTML emails or pages to manipulate the displayed
domains/URLs. However, the mismatch between the hyperlink text
and the underlying domains would make it easier to be detected by
previous work [15]. If miscreants try to evade name-similarity by
inserting numerical or hyphen characters, PREDATOR’s features
of names containing digits and “–” can capture this. The green
dashed curve in Figure 7 indicates the ROC with nameserver-related
and lexical features excluded (six more features). We observe that
detection accuracy further weakens, suggesting that lexical features
help reduce false positives.
The batch features (rank 14, 15, 16, 20 in Table 6), despite their
relatively low ranks, can contribute to the detection accuracy. In
Figure 7, the purple dashed curve shows the ROC curve with batch
features further excluded (four more features), where the performance
decreases, especially in the low-false-positive area. As we will discuss
later, if miscreants attempt to evade PREDATOR by mimicking
legitimate behavior (including changing the patterns in registration
batches), this would impair their attack capability, from ﬁnancial and
volume perspectives.
Registrars represent an essential feature in our system (rank 4 in
Table 6) to capture miscreants’ tactics. Miscreants tend to use the
Figure 7: ROC of PREDATOR under different features (simu-
lated evasion scenarios).
registrars that are cheaper and more tolerant of their activities [37].
Evading this feature forces attackers to change to less “scam-friendly”
registrars. Even if miscreants switch to different sets of registrars,
PREDATOR can over time automatically learn the shifts and detect
new malicious domains. The black dotted curve in Figure 7 illustrates
the performance of using only the registrar feature. The relatively
large decrease in accuracy suggests that single features have limited
detection power, and combinations of other features can signiﬁcantly
improve effectiveness.
Financial cost of evasion. Evading some PREDATOR features
forces miscreants to spend more to acquire domains. As discussed, to
evade registrar feature (rank 4), attackers have to use some registrars
with higher prices that are not their ﬁrst choice. Evading the bulk-
registration feature (rank 20) forces attackers to spend more by
foregoing bulk discounts. Some miscreants also pay with stolen credit
cards (to reduce cost and avoid tracing their real identities) [11, 14],
which requires bulk registration, since fraud detection disables cards
after several purchases. Evading the registration-period-length feature