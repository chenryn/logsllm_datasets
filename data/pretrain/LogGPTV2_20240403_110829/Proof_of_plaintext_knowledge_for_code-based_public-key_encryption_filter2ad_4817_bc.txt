### 优化后的文本

#### 多客户端内积函数加密 (MCFE) 构造
本节介绍了一种多AD-IND-弱安全的MCFE构造，用于内积运算。这里，MCFE' = (Setup', Enc', KeyGen', Dec') 是来自第6.1节的一次AD-IND-弱安全的MCFE，而IPFE = (IP.GSetup, IP.Setup, IP.Enc, IP.KeyGen, IP.Dec) 是一种多次AD-IND安全、公钥、单输入内积功能加密。

**算法描述**

1. **初始化 (Setup)**
   - 输入: 安全参数 \( \lambda \)，函数族 \( F_m, X, Y \)
   - 输出: 公钥 \( pk \)，主密钥 \( msk \)，以及一系列密钥 \( \{eki\}_{i \in [n]} \)

2. **加密 (Enc)**
   - 输入: 公钥 \( pk \)，密钥 \( eki \)，明文 \( xi \)，标签 \( \ell \)
   - 输出: 密文 \( C_{\ell,i} \)

3. **密钥生成 (KeyGen)**
   - 输入: 公钥 \( pk \)，主密钥 \( msk \)，属性向量 \( y = y_1 \parallel \cdots \parallel y_n \)
   - 输出: 解密密钥 \( dky \)

4. **解密 (Dec)**
   - 输入: 公钥 \( pk \)，解密密钥 \( dky \)，密文集合 \( \{C_{\ell,i}\}_{i \in [n]} \)，标签 \( \ell \)
   - 输出: 内积值 \( \alpha \)

**详细步骤**

1. **初始化 (Setup)**
   - 运行 \( (pk', msk', \{ek'i\}_{i \in [n]}) \leftarrow Setup'(1^\lambda, F_m, X, Y) \)
   - 对于所有 \( i \in [n] \)，运行 \( (IP.eki, IP.mski) \leftarrow IP.Setup(1^\lambda, gpk, F_m, X, Y) \)
   - 设定 \( msk := (msk', \{IP.mski\}_{i \in [n]}) \)
   - 返回 \( (pk, msk, \{eki\}_{i \in [n]}) \)，其中 \( pk := (pk', gpk, \{IP.eki\}_{i \in [n]}) \)

2. **加密 (Enc)**
   - 输入: 公钥 \( pk \)，密钥 \( eki \)，明文 \( xi \)，标签 \( \ell \)
   - 计算 \( [c_{\ell,i}] \leftarrow Enc'(pk', ek'i, xi, \ell) \)
   - 返回 \( C_{\ell,i} := IP.Enc(gpk, IP.eki, [c_{\ell,i}]) \)

3. **密钥生成 (KeyGen)**
   - 输入: 公钥 \( pk \)，主密钥 \( msk \)，属性向量 \( y = y_1 \parallel \cdots \parallel y_n \)
   - 计算 \( dk'y \leftarrow KeyGen'(pk', msk', y) \)
   - 对于所有 \( i \in [n] \)，计算 \( dkyi \leftarrow IP.KeyGen(gpk, IP.mski, yi) \)
   - 返回 \( dky := (dk'y, \{dkyi\}_{i \in [n]}) \)

4. **解密 (Dec)**
   - 输入: 公钥 \( pk \)，解密密钥 \( dky \)，密文集合 \( \{C_{\ell,i}\}_{i \in [n]} \)，标签 \( \ell \)
   - 对于所有 \( i \in [n] \)，计算 \( [\alpha_{\ell,i}] \leftarrow IP.Dec(gpk, C_{\ell,i}, dkyi) \)
   - 计算 \( [u_\ell] = H(\ell) \)，\[ \alpha = \sum_{i \in [n]} \alpha_{\ell,i} - [u_\ell]^T d \]
   - 返回离散对数 \( \alpha \in \mathbb{Z}_p \)

**安全性证明**

我们通过一系列游戏来证明该构造的安全性。设 \( A \) 为一个概率多项式时间 (PPT) 敌手。对于任何游戏 \( G \)，记 \( Adv_G(A) \) 为敌手 \( A \) 在与游戏 \( G \) 交互时输出1的概率。根据定义，我们有：

\[ Adv_{\text{many-AD-IND-weak}}^{\text{MCFE,A}}(\lambda) = |Adv_{G0}(A) - Adv_{G2}(A)| \]

**游戏描述**

- **游戏 G0**: 原始游戏。
- **游戏 G1**: 将挑战密文替换为 \( ctj_i := Enc(pk, eki, xj,0_i - x1,0_i + x1,1_i) \)。
- **游戏 G2**: 将挑战密文替换为 \( ctj_i := Enc(pk, eki, xj,1_i - x1,1_i + x1,1_i) \)。

通过这些游戏，我们可以逐步将挑战密文从原始形式转换为目标形式，并利用MCFE'和IPFE的安全性来证明整体构造的安全性。

**引理**

- **引理 40**: 存在一个PPT敌手 \( B1 \)，使得 \( |Adv_{G0}(A) - Adv_{G1}(A)| \leq Adv_{\text{one-AD-IND-weak}}^{\text{MCFE',B1}}(\lambda) \)。
- **引理 41**: 存在一个PPT敌手 \( B2 \)，使得 \( |Adv_{G1}(A) - Adv_{G2}(A)| \leq Adv_{\text{many-AD-IND}}^{\text{IPFE,B2,n}}(\lambda) \)。

综合以上结果，我们得到：

\[ Adv_{\text{many-AD-IND-weak}}^{\text{MCFE,A}}(\lambda) \leq Adv_{\text{one-AD-IND-weak}}^{\text{MCFE',B1}}(\lambda) + Adv_{\text{many-AD-IND}}^{\text{IPFE,B2,n}}(\lambda) \]

通过这种方式，我们证明了该构造在多AD-IND-弱安全模型下的安全性。