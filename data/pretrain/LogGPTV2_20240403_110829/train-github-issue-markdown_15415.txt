### System Information
- **OpenCV Version:** 4.0.0
- **Operating System/Platform:** Ubuntu 18.04
- **Compiler:** GCC 7.2

### Detailed Description
I am encountering issues when attempting to load a TensorFlow model (in `.pb` or `.pbtxt` format) using `cv::dnn::readNetFromTensorflow`.

The model is a pre-trained ResNeXt network, trained and exported using TFLearn with the following code:

```python
net = tflearn.input_data(shape=[None, 49, 49, 3], data_preprocessing=img_prep, data_augmentation=img_aug)
net = tflearn.conv_2d(net, 16, 3, regularizer='L2', weight_decay=0.0001)
...
net = tflearn.fully_connected(net, 11, activation='softmax')
model = tflearn.DNN(net)
model.load("checkpoints/meta-data/model_resnext-96000")
init_op = tf.initialize_all_variables()
sess = tf.Session()
sess.run(init_op)
tf.train.write_graph(sess.graph_def, "/tmp/my-model", 'graph.pbtxt', as_text=True)
tf.train.write_graph(sess.graph, "/tmp/my-model", 'graph.pb', as_text=False)
```

The model works correctly when using the TFLearn API (`model.predict()`).

Next, I attempted to freeze the graph and optimize it for inference:

1. **Freezing the Graph:**
   ```sh
   python -m tensorflow.python.tools.freeze_graph \
     --input_binary \
     --input_graph graph.pb \
     --output_graph frozen_graph.pb \
     --input_checkpoint ~/datasets/TrainedNetworksTfLearn/Expression/model-resnext-no-train-ops \
     --output_node_names FullyConnected/Softmax
   ```

2. **Optimizing the Graph for Inference:**

   a. Using `tensorflow.python.tools.optimize_for_inference`:
   ```sh
   python -m tensorflow.python.tools.optimize_for_inference \
     --input frozen_graph_with_freeze_graph_tool.pb \
     --output frozen_interference_graph_opt.pb \
     --frozen_graph True \
     --input_names InputData/X \
     --output_names FullyConnected/Softmax
   ```

   b. Using a snippet provided by @dkurt:
   ```python
   import tensorflow as tf
   from tensorflow.tools.graph_transforms import TransformGraph
   from tensorflow.python.tools import optimize_for_inference_lib

   graph = 'graph.pb'
   with tf.gfile.FastGFile(graph, "rb") as f:
       graph_def = tf.GraphDef()
       graph_def.ParseFromString(f.read())
       tf.summary.FileWriter('logs', graph_def)
       inp_node = 'InputData/X'
       out_node = 'FullyConnected/Softmax'
       graph_def = optimize_for_inference_lib.optimize_for_inference(graph_def, [inp_node], [out_node], tf.float32.as_datatype_enum)
       graph_def = TransformGraph(graph_def, [inp_node], [out_node], ["sort_by_execution_order"])
       tf.train.write_graph(graph_def, "/tmp/my-model", 'graph_opt.pbtxt', as_text=True)
       tf.train.write_graph(graph_def, "/tmp/my-model", 'graph_opt.pb', as_text=False)
   ```

   This process completes successfully, but with the following warnings:
   ```
   WARNING:tensorflow:From optimize_graph.py:6: FastGFile.__init__ (from tensorflow.python.platform.gfile) is deprecated and will be removed in a future version.
   Instructions for updating:
   Use tf.gfile.GFile.
   WARNING:tensorflow:Passing a `GraphDef` to the SummaryWriter is deprecated. Pass a `Graph` object instead, such as `sess.graph`.
   WARNING:tensorflow:From /local/lib/python3.6/site-packages/tensorflow/python/tools/strip_unused_lib.py:86: extract_sub_graph (from tensorflow.python.framework.graph_util_impl) is deprecated and will be removed in a future version.
   Instructions for updating:
   Use tf.compat.v1.graph_util.extract_sub_graph
   WARNING:tensorflow:From /local/lib/python3.6/site-packages/tensorflow/python/tools/optimize_for_inference_lib.py:113: remove_training_nodes (from tensorflow.python.framework.graph_util_impl) is deprecated and will be removed in a future version.
   Instructions for updating:
   Use tf.compat.v1.graph_util.remove_training_nodes
   2019-03-15 17:32:23.963903: I tensorflow/tools/graph_transforms/transform_graph.cc:317] Applying sort_by_execution_order
   ```

After these steps, I encounter the following errors when trying to load the optimized graph with OpenCV:

```cpp
this->net = cv::dnn::readNetFromTensorflow("graph_opt.pb", "graph_opt.pbtxt");
// Error: tf_importer.cpp:616: error: (-215:Assertion failed) const_layers.insert(std::make_pair(name, li)).second in function 'addConstNodes'

this->net = cv::dnn::readNetFromTensorflow("graph_opt.pb");
// Error: tf_graph_simplifier.cpp:773: error: (-2:Unspecified error) Tensor's data type is not supported in function 'getTensorContent'
```

### Steps to Reproduce
1. Train and export the ResNeXt model using TFLearn.
2. Freeze the graph using `freeze_graph` tool.
3. Optimize the graph for inference using either `optimize_for_inference` or the provided Python script.
4. Attempt to load the optimized graph using OpenCV's `cv::dnn::readNetFromTensorflow`.

Please let me know if you need any additional information.