Gill. 2013. Multi-core real-time scheduling for generalized parallel task models.
Real-Time Systems 49, 4 (2013), 404–435.
[92] Daniel Sanchez and Christos Kozyrakis. 2011. Vantage: scalable and efficient
fine-grain cache partitioning. In Proceedings of the 38th annual international
symposium on Computer architecture. 57–68.
[93] scikit-garden. 2017. Quantile Decision Trees. https://scikit-garden.github.
io/examples/QuantileRegressionForests/#quantile-decision-trees Accessed:
2020-07-27.
[94] SDKI. 2021. Virtualized RAN (vRAN) Market Size, Share & Forecast. https:
//www.marketwatch.com/press-release/virtualized-ran-vran-market-size-
share-forecast-2025-2021-04-20 Accessed: 2021-06-4.
[95] SDXCentral. 2021. VMware Tilts Into vRAN Telco Cloud, Dish Gets First Dibs.
https://www.sdxcentral.com/articles/news/vmware-tilts-into-vran-telco-
cloud-dish-gets-first-dibs/2021/04/ Accessed: 2021-06-4.
[96] Xun Shao, Jinhong Yuan, and Yubin Shao. 2007. Error performance analysis
of linear zero forcing and MMSE precoders for MIMO broadcast channels. IET
communications 1, 5 (2007), 1067–1074.
[97] Xuemin Shen, Jie Gao, Wen Wu, Kangjia Lyu, Mushu Li, Weihua Zhuang, Xu Li,
and Jaya Rao. 2020. AI-assisted network-slicing based next-generation wireless
networks. IEEE Open Journal of Vehicular Technology 1 (2020), 45–66.
[98] Gábor J Székely and Maria L Rizzo. 2009. Brownian distance covariance. The
annals of applied statistics (2009), 1236–1265.
[99] Gábor J Székely, Maria L Rizzo, Nail K Bakirov, et al. 2007. Measuring and
testing dependence by correlation of distances. The annals of statistics 35, 6
(2007), 2769–2794.
[100] Tarik Taleb, Rui Luis Aguiar, I Grida Ben Yahia, Bruno Chatras, Gerry Chris-
tensen, Uma Chunduri, Alexander Clemm, Xavier Costa, Lijun Dong, Jaafar
Elmirghani, et al. 2020. White paper on 6G networking. (2020).
[101] Kun Tan, He Liu, Jiansong Zhang, Yongguang Zhang, Ji Fang, and Geoffrey M
Voelker. 2011. Sora: high-performance software radio using general-purpose
593
Concordia: Teaching 5G vRAN to Share Compute
SIGCOMM ’21, August 23–27, 2021, Virtual Event, USA
multi-core processors. Commun. ACM 54, 1 (2011), 99–107.
[102] Tuyen X Tran, Abolfazl Hajisami, Parul Pandey, and Dario Pompili. 2017. Col-
laborative mobile edge computing in 5G networks: New paradigms, scenarios,
and challenges. IEEE Communications Magazine 55, 4 (2017), 54–61.
[103] Tuyen X Tran, Ayman Younis, and Dario Pompili. 2017. Understanding the
computational requirements of virtualized baseband units using a programmable
cloud radio access network testbed. In 2017 IEEE International Conference on
Autonomic Computing (ICAC). IEEE, 221–226.
[104] Hoang Duy Trinh, Nicola Bui, Joerg Widmer, Lorenza Giupponi, and Paolo Dini.
2017. Analysis and modeling of mobile traffic using real traces. In 2017 IEEE
28th Annual International Symposium on Personal, Indoor, and Mobile Radio
Communications (PIMRC). IEEE, 1–6.
[105] SS Vallender. 1974. Calculation of the Wasserstein distance between probability
distributions on the line. Theory of Probability & Its Applications 18, 4 (1974),
784–786.
[106] J-J Van De Beek, Ove Edfors, Magnus Sandell, Sarah Kate Wilson, and P Ola
Borjesson. 1995. On channel estimation in OFDM systems. In 1995 IEEE
45th Vehicular Technology Conference. Countdown to the Wireless Twenty-First
Century, Vol. 2. IEEE, 815–819.
[107] Jianda Wang and Yang Hu. 2019. Characterizing and Understanding the Ar-
chitectural Implications of Cloudnative Edge NFV Workloads. In 2019 IEEE
Conference on Network Function Virtualization and Software Defined Networks
(NFV-SDN). IEEE, 1–7.
[108] Shiqiang Wang, Tiffany Tuor, Theodoros Salonidis, Kin K Leung, Christian
Makaya, Ting He, and Kevin Chan. 2018. When edge meets learning: Adaptive
control for resource-constrained distributed machine learning. In IEEE INFOCOM
2018-IEEE Conference on Computer Communications. IEEE, 63–71.
[109] Xiaofei Wang, Min Chen, Tarik Taleb, Adlen Ksentini, and Victor CM Leung.
2014. Cache in the air: Exploiting content caching and delivery techniques for
5G systems. IEEE Communications Magazine 52, 2 (2014), 131–139.
[110] Ami Wiesel, Yonina C Eldar, and Shlomo Shamai. 2008. Zero-forcing precoding
and generalized inverses. IEEE Transactions on Signal Processing 56, 9 (2008),
4409–4418.
[111] Reinhard Wilhelm, Jakob Engblom, Andreas Ermedahl, Niklas Holsti, Stephan
Thesing, David Whalley, Guillem Bernat, Christian Ferdinand, Reinhold Heck-
mann, Tulika Mitra, et al. 2008. The worst-case execution-time problemoverview
of methods and survey of tools. ACM Transactions on Embedded Computing
Systems (TECS) 7, 3 (2008), 1–53.
[112] Wind. 2017. Carrier Grade Performance and Reliability in Network Virtualiza-
tion. Technical Report. Wind, Whitepaper.
[113] Fierce Wireless. 2019. Telefonica invests in vRAN vendor Altiostar. Retrieved
2020-07-14 from https://www.fiercewireless.com/tech/telefonica-invests-vran-
vendor-altiostar
[114] Fierce Wireless. 2020. Dish selects Fujitsu, Altiostar for 5G radios, Open vRAN.
Retrieved 2020-08-24 from https://www.fiercewireless.com/operators/dish-
selects-fujitsu-altiostar-for-5g-radios-open-vran
[115] Wenfei Wu, Li Erran Li, Aurojit Panda, and Scott Shenker. 2014. PRAN: Pro-
grammable radio access networks. In Proceedings of the 13th ACM Workshop on
Hot topics in Networks. 1–7.
[116] Dirk Wubben, Peter Rost, Jens Steven Bartelt, Massinissa Lalam, Valentin Savin,
Matteo Gorgoglione, Armin Dekorsy, and Gerhard Fettweis. 2014. Benefits
and impact of cloud computing on 5G signal processing: Flexible centralization
through cloud-RAN. IEEE signal processing magazine 31, 6 (2014), 35–44.
[117] Fengli Xu, Yong Li, Huandong Wang, Pengyu Zhang, and Depeng Jin. 2016.
Understanding mobile traffic patterns of large scale cellular towers in urban
environment. IEEE/ACM transactions on networking 25, 2 (2016), 1147–1161.
[118] Chun Yeow Yeoh, Mohammad Harris Mokhtar, Abdul Aziz Abdul Rahman,
and Ahmad Kamsani Samingan. 2016. Performance study of LTE experimen-
tal testbed using OpenAirInterface. In 2016 18th International Conference on
Advanced Communication Technology (ICACT). IEEE, 617–622.
[119] Zhi Zhou, Xu Chen, En Li, Liekang Zeng, Ke Luo, and Junshan Zhang. 2019. Edge
intelligence: Paving the last mile of artificial intelligence with edge computing.
Proc. IEEE 107, 8 (2019), 1738–1762.
[120] Guangxu Zhu, Dongzhu Liu, Yuqing Du, Changsheng You, Jun Zhang, and
Kaibin Huang. 2020. Toward an intelligent edge: Wireless communication meets
machine learning. IEEE communications magazine 58, 1 (2020), 19–25.
A APPENDIX
Appendices are supporting material that has not been peer-reviewed.
A.1 List of most significant vRAN signal
processing tasks
For the completeness of this work and to complement the uplink
DAG that was presented in Fig. 1, this appendix provides an example
of a (simplified) downlink signal processing tasks DAG for 5G NR
in Fig. 16. To ease the understanding of the reader, we also provide
a brief description of the most significant tasks composing the up-
link and downlink DAGs of the 4G and 5G vRAN. Given the large
number of involved tasks (>40 in total), we only focus on describing
the most computationally demanding tasks according to our own
measurements and other related works [28, 72, 107]. A breakdown
of the costs of the described tasks is listed in Table 5. It should be
noted that the percentages of the total processing time of the tasks
listed on the table are approximate. The exact compute requirements
of each task depends on a number of parameters, including the cell
configuration (e.g., bandwidth, number of antennas), the number of
users, their transmission modes (MIMO vs SISO) etc.
Task
Decoding
Channel estimation
Equalization
Demodulation
Uplink tasks
Uplink processing time %
More than 60%
More than 8%
More than 5%
More than 6%
Task
Encoding
Precoding
Modulation
Downlink tasks
Downlink processing time %
More than 40%
More than 15%
More than 10%
Table 5: Breakdown of the percentage of processing time spent
on the most expensive tasks for the uplink/downlink signal pro-
cessing DAGs. The values show an approximate percentage for
each task and in practice could differ based on the scenario.
Encoding & decoding: The encoding task is used to improve the
reliability of the downlink vRAN transmissions. At a high level, this
is achieved by appending redundancy bits to the original transmitted
data. The proportion of the data-stream that is non-redundant des-
ignates the code rate of a transmission. For higher code rates, the
utilization of the spectrum is more efficient and the computational
load for generating the redundancy bits is lower. However, higher
code rates also make it more difficult to recover from errors when
the signal quality is low.
The decoding task is used in the uplink vRAN transmissions and
it performs the exact opposite operation to the encoding task for the
downlink, i.e., it uses the redundancy bits to verify the correctness of
the transmitted data and, if possible, to correct any discovered errors.
The decoding process in 4G and 5G is iterative and typically it stops
when there is a verification of the correctness of the received data or
when a certain threshold (number of iterations) is reached. Similar to
the encoding, higher code rates mean lower computational cost for
decoding the received data. Moreover, low signal quality can lead
to a higher rate of errors on the received data and therefore more
decoding iterations might be required, increasing the computational
demands of the decoding task.
The encoding and decoding algorithms differ between the 4G
and the 5G RAN. In the case of 4G, the algorithm used is Turbo
coding [44], while in the case of 5G, LDPC coding [90] is used
594
SIGCOMM ’21, August 23–27, 2021, Virtual Event, USA
Xenofon Foukas and Bozidar Radunovic
Figure 16: Example of downlink signal processing tasks DAG for 5G NR
for the user data transmissions and Polar coding [4] is used for the
control data.
Channel estimation: The channel estimation task is used to estimate
the properties of the channel used for the transmissions/receptions.
At a high level, channel estimation is performed by inserting known
reference pilot symbols into a transmission and then interpolating
the rest of the channel response through those pilot symbols. The
computational complexity of the channel estimation task can vary
depending on the algorithm used [35, 106] as well as the transmission
scheme (e.g., Massive MIMO vs SISO).
Precoding & Equalization: Precoding is a downlink task that is
used to realize spatial multiplexing, i.e. multi-user MIMO. The idea
behind precoding is that the data streams of users are combined
through a mathematical transformation and are sent out simulta-
neously through multiple antenna ports. This transformation relies
a matrix called the precoder that is computed using channel state
information obtained through the channel estimation task. Precod-
ing algorithms can be divided to non-linear (e.g., DPC [22]) and
linear (e.g. MMSE and Zero-Forcing [96, 110]). Linear precoding
algorithms are the ones that are currently used in practice, since
they provide a reasonable performance, while having a much lower
complexity. Generally, the computational load of the precoding task
depends on the number of transmitting antenna ports, the number of
data streams and the bandwidth of the vRAN cell.
On the other hand, equalization is an uplink task that is used to
demultiplex user data received from multiple antenna ports, i.e., undo
the effects of the channel at the receiver side. Similar to the case of
the precoding task, many different algorithms can be used for the
equalization (e.g. MMSE and Zero-Forcing), each with a different
complexity and performance. Also, as in the case of the precoding
task, the computational load of the equalization task depends on the
number of the receiving antennas, the number of data streams and
the bandwidth of the vRAN cell.
Modulation & Demodulation: Modulation is a downlink signal
processing task that is used to encode a sequence of bits onto the
carrier signal, by adjusting the signal’s amplitude and/or initial phase.
Different modulation schemes exist, depending on the number of bits
that can be encoded on the carrier signal at a time. For example, the
binary phase shift keying (BSK) modulation scheme takes one bit at
a time and transmits it using a carrier wave that can have two differ-
ent states (0 or 1), while the quadrature phase shift keying (QPSK)
scheme allows the transmission of two bits on the carrier wave. The
(a) LDPC encoding
(b) Precoding
(c) Channel estimation
(d) Equalization
Figure 17: Percentage of slots where the processing deadline was violated. Y-axis in log scale.
(a) LDPC encoding
(b) Precoding
(c) Channel estimation
(d) Equalization
Figure 18: Average WCET prediction error for successfully met deadline. Y-axis in log scale.
595
LinearregressionGradientboostingQuantileDTFull DAGQuantile DT10−310−210−1100101102Deadlines missed (%)1 cell -  FD2 cells - FD1 cell - FD & redis2 cells - FD & redis1 cell - FD & TPCC2 cells - FD & TPCCLinearregressionGradientboostingQuantileDTFull DAGQuantile DT10−310−210−1100101102Deadlines missed (%)1 cell -  FD2 cells - FD1 cell - FD & redis2 cells - FD & redis1 cell - FD & TPCC2 cells - FD & TPCCLinearregressionGradientboostingQuantileDTFull DAGQuantile DT10−310−210−1100101102Deadlines missed (%)1 cell -  FD2 cells - FD1 cell - FD & redis2 cells - FD & redis1 cell - FD & TPCC2 cells - FD & TPCCLinearregressionGradientboostingQuantileDTFull DAGQuantile DT10−310−210−1100101102Deadlines missed (%)1 cell -  FD2 cells - FD1 cell - FD & redis2 cells - FD & redis1 cell - FD & TPCC2 cells - FD & TPCCLinearregressionGradientboostingQuantileDT102Avg prediction error (us)1 cell -  FD2 cells - FD1 cell - FD & redis2 cells - FD & redis1 cell - FD & TPCC2 cells - FD & TPCCLinearregressionGradientboostingQuantileDT1023×1014×1016×101Avg prediction error (us)1 cell -  FD2 cells - FD1 cell - FD & redis2 cells - FD & redis1 cell - FD & TPCC2 cells - FD & TPCCLinearregressionGradientboostingQuantileDT102Avg prediction error (us)1 cell -  FD2 cells - FD1 cell - FD & redis2 cells - FD & redis1 cell - FD & TPCC2 cells - FD & TPCCLinearregressionGradientboostingQuantileDT102Avg prediction error (us)1 cell -  FD2 cells - FD1 cell - FD & redis2 cells - FD & redis1 cell - FD & TPCC2 cells - FD & TPCCConcordia: Teaching 5G vRAN to Share Compute
SIGCOMM ’21, August 23–27, 2021, Virtual Event, USA
higher the modulation scheme, the more bits are transmitted on a
radio resource block (leading to a higher user throughput), but also
the higher the computational cost for performing the modulation
becomes.
Demodulation is an uplink task, that performs the opposite op-
eration to the downlink modulation, i.e., it extracts the bits that are
modulated on the received radio wave. Similar to the modulation, the
computational complexity of the demodulation depends on the mod-
ulation scheme, with higher schemes being more computationally
demanding.
A.2 Further results on prediction model accuracy
Here, we expand the evaluation of Section 6.4 and we present addi-
tional prediction accuracy results for other computationally intensive
5G vRAN signal processing tasks; namely LDPC encoding, precod-
ing, channel estimation and equalization. As shown in Fig. 17 and
similarly to the case of LDPC decoding presented in Section 6.4,
Concordia’s quantile decision tree provides consistently much higher
deadline prediction accuracy compared to the simpler linear regres-
sion model for all the tasks. The gradient boosting model has compa-
rable prediction accuracy to the quantile decision tree, except for the
case of the channel estimation task shown in Fig. 17c. However, as in
the case of LDPC decoding, the quantile decision tree has a consis-
tently small average WCET prediction error for all tasks, as shown in
Fig 17, making it the most efficient of all studied algorithms. Similar
observations are also made for all the remaining signal processing
tasks.
596