### `chkdsk` Command Overview

The `chkdsk` (Check Disk) command is used to check the file system and metadata of a volume for logical and physical errors. If run without parameters, `chkdsk` only displays the status of the volume and does not fix any errors. When used with specific parameters, it can correct errors on the volume.

#### Important Notes
- **Administrative Privileges**: To run `chkdsk`, you must be a member of the local Administrators group or have equivalent permissions. You can open a command prompt as an administrator by right-clicking "Command Prompt" in the Start menu and selecting "Run as administrator."
- **Interrupting `chkdsk`**: It is not recommended to interrupt `chkdsk`. However, if you do, it should not leave the volume more corrupt than it was before. Running `chkdsk` again will check and repair any remaining corruption.
- **Local Disks Only**: `chkdsk` can only be used for local disks. It cannot be used with a local drive letter that has been redirected over the network.

#### Syntax
```sh
chkdsk [[drive:][path]filename] [/f] [/v] [/r] [/x] [/i] [/c] [/l[:size]] [/b] [/scan] [/forceofflinefix] [/perf] [/spotfix] [/sdcleanup] [/offlinescanandfix] [/freeorphanedchains] [/markclean] [/?]
```

#### Parameters
- **[drive:][path]filename**: Specifies the drive letter (followed by a colon), mount point, or volume name. For FAT and FAT32, it can also specify the location and name of a file or set of files to check for fragmentation.
- **/f**: Fixes errors on the disk. The disk must be locked. If `chkdsk` cannot lock the drive, it will ask if you want to check the drive the next time you restart the computer.
- **/v**: Displays the name of each file in every directory as the disk is checked.
- **/r**: Locates bad sectors and recovers readable information. This includes the functionality of `/f`.
- **/x**: Forces the volume to dismount first, if necessary. All open handles to the drive are invalidated. This includes the functionality of `/f`.
- **/i** (NTFS only): Performs a less vigorous check of index entries, reducing the time required to run `chkdsk`.
- **/c** (NTFS only): Does not check cycles within the folder structure, reducing the time required to run `chkdsk`.
- **/l[:size]** (NTFS only): Changes the log file size to the specified size. If no size is provided, it displays the current size.
- **/b** (NTFS only): Clears the list of bad clusters on the volume and rescans all allocated and free clusters for errors. This includes the functionality of `/r`.
- **/scan** (NTFS only): Runs an online scan on the volume.
- **/forceofflinefix** (NTFS only, with `/scan`): Bypasses all online repairs; all defects found are queued for offline repair.
- **/perf** (NTFS only, with `/scan`): Uses more system resources to complete a scan as quickly as possible, which may negatively impact other tasks.
- **/spotfix** (NTFS only): Runs spot fixing on the volume.
- **/sdcleanup** (NTFS only): Garbage collects unneeded security descriptor data (implies `/f`).
- **/offlinescanandfix**: Runs an offline scan and fix on the volume.
- **/freeorphanedchains** (FAT/FAT32/exFAT only): Frees any orphaned cluster chains instead of recovering their contents.
- **/markclean** (FAT/FAT32/exFAT only): Marks the volume clean if no corruption was detected, even if `/f` was not specified.
- **/?**: Displays help at the command prompt.

#### Remarks
- **Reducing Check Time**: Using the `/i` or `/c` switch reduces the time required to run `chkdsk` by skipping certain volume checks.
- **Open Files**: If you want `chkdsk` to correct disk errors, you cannot have open files on the drive. If files are open, `chkdsk` will ask if you want to schedule the check for the next system restart.
- **Scheduling Checks**: You can use the `chkntfs /c` command to schedule the volume to be checked the next time the computer is restarted. Use the `fsutil dirty set` command to set the volume's dirty bit, indicating corruption, so Windows runs `chkdsk` when the computer is restarted.
- **FAT File Systems**: Repairs on FAT file systems usually change the disk's file allocation table and may cause data loss. `chkdsk` might display a confirmation message asking if you want to convert lost chains to files.
- **Shadow Copies for Shared Folders**: The source volume cannot be locked while Shadow Copies for Shared Folders is enabled, so running `chkdsk` against the source volume might report false errors or cause `chkdsk` to unexpectedly quit. You can check shadow copies for errors by running `chkdsk` in read-only mode.

#### Exit Codes
- **0**: No errors were found.
- **1**: Errors were found and fixed.
- **2**: Performed disk cleanup or did not perform cleanup because `/f` was not specified.
- **3**: Could not check the disk, errors could not be fixed, or errors were not fixed because `/f` was not specified.

#### Examples
- **Check and Fix Disk D**:
  ```sh
  chkdsk d: /f
  ```
  If `chkdsk` encounters errors, it will pause and display messages. It finishes by displaying a report that lists the status of the disk. You cannot open any files on the specified drive until `chkdsk` finishes.

- **Check All Files on a FAT Disk for Noncontiguous Blocks**:
  ```sh
  chkdsk *.*
  ```
  `chkdsk` displays a status report and lists the files that match the file specifications and have noncontiguous blocks.

#### Viewing `chkdsk` Logs
There are two methods to retrieve `chkdsk` log files in Windows:

1. **Using Event Viewer**:
   - Navigate to: `Start > Control Panel > Administrative Tools > Event Viewer`.
   - Alternatively, press `Win + R`, type `eventvwr.msc`, and select `OK`.
   - Expand `Windows Logs` > right-click on `Application` > select `Filter Current Log`.
   - In the `Filter Current Log` window, navigate to the `Event sources` drop-down menu, select `Chkdsk` and `Wininit`.
   - Click `OK` to apply the filter.

2. **Using PowerShell**:
   - Run one of the following commands to view the most current `chkdsk` log:
     ```powershell
     get-winevent -FilterHashTable @{logname="Application"} | ?{$_.providername -match "chkdsk"} | fl timecreated, message
     get-winevent -FilterHashTable @{logname="Application"} | ?{$_.providername -match "wininit"} | fl timecreated, message
     ```
   - To export the log to a specific location, add the following to the end of the command:
     ```powershell
     | out-file "C:\Users\Administrator\Desktop\Chkdsk_Log.txt"
     ```

Example:
```powershell
get-winevent -FilterHashTable @{logname="Application"} | ?{$_.providername -match "chkdsk"} | fl timecreated, message | out-file "C:\Users\Administrator\Desktop\Chkdsk_Log.txt"
get-winevent -FilterHashTable @{logname="Application"} | ?{$_.providername -match "wininit"} | fl timecreated, message | out-file "C:\Users\Administrator\Desktop\Wininit_Log.txt"
```

This comprehensive guide should help you effectively use the `chkdsk` command to maintain the integrity of your file systems.