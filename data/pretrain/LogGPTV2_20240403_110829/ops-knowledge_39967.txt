User: 请回答以下安全问题为什么不使用RSA加密整个文档？我最近学到了一种方法，让人B验证从人a发送的文件确实来自人a。
人员A将其公共RSA密钥提供给人员B。这必须可靠地完成。
人员A使用SHA1以160位的散列对文档进行散列。
人员A使用他的私人RSA密钥对文档的160位SHA1散列进行签名。
人员A向人员B发送RSA签名的SHA1散列和文档。
个人B使用个人A的公共RSA密钥验证散列。
人员B生成SHA1以比较人员a发送给他的文档。
如果两个SHA1散列匹配，那么文档确实来自人物A。
这个过程似乎可靠，但对我来说也很麻烦。为什么人A不能直接用他的RSA私钥加密文档并将其发送给人B？为什么要加密文档的哈希并将其与文档一起发送？

Assistant: 原因不止一个：
1） 实际上RSA算法的速度较慢。例如：
相比之下，DES（见第3.2节）和其他分组密码比RSA算法快得多。DES在软件上的速度通常至少是它的100倍，在硬件上的速度在1000到10000倍之间，这取决于具体的实现方式。由于需求量大，RSA算法的实现可能会在未来几年缩小差距，但分组密码也会变得更快。
如果你看这里，你可以看到他们列出的DES每字节需要54.7个周期，SHA-1每字节需要11.4个周期。
因此，与使用私钥加密整个文档相比，计算文档的SHA-1哈希并进行签名是一种性能优化。
2） 通过将文档与签名分开，您就拥有了一个更灵活的系统。您可以将它们单独传输或存储在不同的地方。在这种情况下，每个人都已经有了文档的副本，而你只想让人a向人B验证他们是否有相同的文档（或其哈希）。
3） 仔细想想，如果有人用假私钥加密文件，而你用真公钥解密，你的算法实际上无法告诉你结果（签名与否）。除非你的程序能够解释结果文档的含义（也许你知道它应该是XML等），否则你就不能可靠地说它是“签名的”。你要么得到了正确的信息，要么得到了错误的信息。据推测，人类可以分辨，但机器无法分辨。使用hash方法，它假设我已经有了纯文本，我只想验证那个人A签署了它。
假设我有一个发射核武器的计划。它得到一个使用您的方法加密的命令文件，所以我用公钥解密并将结果发送给我的命令处理器。然后，您将依靠命令处理器来确定它是否是一个有效的命令。太可怕了。如果命令的协议只是导弹目标的经纬度，编码成二进制，会怎么样？你可以很容易地向错误的目标发射。
使用散列，您可以通过纯文本通道获得一个命令和一个签名散列。您对命令进行散列处理，检查签名，如果它们不匹配，则无需向命令处理器发送任何内容。如果它们匹配，则在上发送命令。
如果你想隐藏命令的内容，那么你需要将命令和签名压缩在一起，并在发送之前用接收站的公钥加密整个内容。