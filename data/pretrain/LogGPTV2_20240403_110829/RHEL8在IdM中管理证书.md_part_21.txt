::: itemizedlist
**先决条件**
-   您已在要运行 playbook 的系统中安装了 Red Hat Ansible Engine。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    您不必在要部署 `certificate`{.literal} 解决方案的系统中安装
    Ansible。
    :::
-   已安装该系统中要运行 playbook 的 `rhel-system-roles`{.literal}
    软件包。
    有关 RHEL 系统角色以及如何应用它们的详情，请参阅 [RHEL
    系统角色入门](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/administration_and_configuration_tasks_using_system_roles_in_rhel/getting-started-with-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel#intro-to-rhel-system-roles_getting-started-with-rhel-system-roles){.link}。
:::
::: orderedlist
**流程**
1.  [*可选：*]{.emphasis} 创建一个清单文件，例如
    `inventory.file`{.literal}:
    ``` literallayout
    $ touch inventory.file
    ```
2.  打开清单文件并定义要请求证书的主机，例如：
    ``` literallayout
    [webserver]
    server.idm.example.com
    ```
3.  创建 playbook 文件，例如 `request-certificate.yml`{.literal}:
    ::: itemizedlist
    -   设置 `hosts`{.literal} 为包含您要请求证书的主机，如
        `webserver`{.literal}。
    -   将 `certificate_requests`{.literal} 变量设置为包含以下内容：
        ::: itemizedlist
        -   将参数设置 `name`{.literal} 为证书的所需名称，如
            `mycert`{.literal}。
        -   将 `dns`{.literal} 参数设置为证书中包含的域，如
            `*.example.com`{.literal}。
        -   将参数 `ca`{.literal} 设置为 `self-sign`{.literal}。
        :::
    -   在 `roles`{.literal} 下设置
        `rhel-system-roles.certificate`{.literal} 角色。
        这是本例的 playbook 文件：
        ``` literallayout
        ---
        - hosts: webserver
          vars:
            certificate_requests:
              - name: mycert
                dns: *.example.com
                ca: self-sign
          roles:
            - rhel-system-roles.certificate
        ```
    :::
4.  保存该文件。
5.  运行 playbook:
    ``` literallayout
    $ ansible-playbook -i inventory.file request-certificate.yml
    ```
:::
::: itemizedlist
**其它资源**
-   有关 `certificate_requests`{.literal} 变量使用的参数的详情，以及
    `certificate`{.literal} 系统角色的附加信息，请参阅该
    `/usr/share/ansible/roles/rhel-system-roles.certificate/README.md`{.literal}
    文件。
-   有关 `ansible-playbook`{.literal} 命令的详情请参考
    `ansible-playbook(1)`{.literal} man page。
:::
:::
::: section
::: titlepage
# []{#requesting-certificates-using-rhel-system-roles_working-with-idm-certificates.html#requesting-a-new-certificate-from-idm-ca-using-the-certificate-system-role_requesting-certificates-using-rhel-system-roles}使用证书系统角色从 IdM CA 请求一个新证书 {.title}
:::
使用证书系统角色时，您可以使用 Red Hat Ansible Engine
在使用带有集成证书颁发机构(CA)的 IdM 服务器时发布证书。因此，当使用 IdM
作为 CA 时，您可以高效且一致地管理多个系统的证书信任链。
这个过程使用 `certmonger`{.literal} 提供程序并通过 `getcert`{.literal}
命令请求证书。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
默认情况下，在证书过期前 `certmonger`{.literal}
自动尝试更新该证书。您可以通过将 Ansible playbook 中的
`auto_renew`{.literal} 参数设置为`no`{.literal}来禁用此功能。
:::
::: itemizedlist
**先决条件**
-   您已在要运行 playbook 的系统中安装了 Red Hat Ansible Engine。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    您不必在要部署 `certificate`{.literal} 解决方案的系统中安装
    Ansible。
    :::
-   已安装该系统中要运行 playbook 的 `rhel-system-roles`{.literal}
    软件包。
    有关 RHEL 系统角色以及如何应用它们的详情，请参阅 [RHEL
    系统角色入门](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/administration_and_configuration_tasks_using_system_roles_in_rhel/getting-started-with-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel#intro-to-rhel-system-roles_getting-started-with-rhel-system-roles){.link}。
:::
::: orderedlist
**流程**
1.  [*可选：*]{.emphasis} 创建一个清单文件，例如
    `inventory.file`{.literal}:
    ``` literallayout
    $ touch inventory.file
    ```
2.  打开清单文件并定义要请求证书的主机，例如：
    ``` literallayout
    [webserver]
    server.idm.example.com
    ```
3.  创建 playbook 文件，例如 `request-certificate.yml`{.literal}:
    ::: itemizedlist
    -   设置 `hosts`{.literal} 为包含您要请求证书的主机，如
        `webserver`{.literal}。
    -   将 `certificate_requests`{.literal} 变量设置为包含以下内容：
        ::: itemizedlist
        -   将参数设置 `name`{.literal} 为证书的所需名称，如
            `mycert`{.literal}。
        -   将 `dns`{.literal} 参数设置为证书中包含的域，如
            `www.example.com`{.literal}。
        -   将 `principal`{.literal} 参数设置为特定的 Kerberos 主体，如
            `HTTP/PI:EMAIL`{.literal}。
        -   将参数 `ca`{.literal} 设置为 `ipa`{.literal}。
        :::
    -   在 `roles`{.literal} 下设置
        `rhel-system-roles.certificate`{.literal} 角色。
        这是本例的 playbook 文件：
        ``` literallayout
        ---
        - hosts: webserver
          vars:
            certificate_requests:
              - name: mycert
                dns: www.example.com
                principal: HTTP/PI:EMAIL
                ca: ipa
          roles:
            - rhel-system-roles.certificate
        ```
    :::
4.  保存该文件。
5.  运行 playbook:
    ``` literallayout
    $ ansible-playbook -i inventory.file request-certificate.yml
    ```
:::
::: itemizedlist
**其它资源**
-   有关 `certificate_requests`{.literal} 变量使用的参数的详情，以及
    `certificate`{.literal} 系统角色的附加信息，请参阅该
    `/usr/share/ansible/roles/rhel-system-roles.certificate/README.md`{.literal}
    文件。
-   有关 `ansible-playbook`{.literal} 命令的详情请参考
    `ansible-playbook(1)`{.literal} man page。
:::
:::
::: section
::: titlepage
# []{#requesting-certificates-using-rhel-system-roles_working-with-idm-certificates.html#specifying-commands-to-run-before-or-after-certificate-issuance-using-the-certificate-system-role_requesting-certificates-using-rhel-system-roles}指定在使用证书系统角色前或之后要运行的命令 {.title}
:::
使用证书系统角色，您可以使用 Red Hat Ansible Engine
在签发或更新证书之前和之后执行命令。
在以下示例中,管理员确保在为 `www.example.com`{.literal}
发布或更新自签名证书前停止 `httpd`{.literal} 服务，然后再重启该服务。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
默认情况下，在证书过期前 `certmonger`{.literal}
自动尝试更新该证书。您可以通过将 Ansible playbook 中的
`auto_renew`{.literal} 参数设置为`no`{.literal}来禁用此功能。
:::
::: itemizedlist
**先决条件**
-   您已在要运行 playbook 的系统中安装了 Red Hat Ansible Engine。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    您不必在要部署 `certificate`{.literal} 解决方案的系统中安装
    Ansible。
    :::
-   已安装该系统中要运行 playbook 的 `rhel-system-roles`{.literal}
    软件包。
    有关 RHEL 系统角色以及如何应用它们的详情，请参阅 [RHEL
    系统角色入门](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/administration_and_configuration_tasks_using_system_roles_in_rhel/getting-started-with-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel#intro-to-rhel-system-roles_getting-started-with-rhel-system-roles){.link}。
:::
::: orderedlist
**流程**
1.  [*可选：*]{.emphasis} 创建一个清单文件，例如
    `inventory.file`{.literal}:
    ``` literallayout
    $ touch inventory.file
    ```
2.  打开清单文件并定义要请求证书的主机，例如：
    ``` literallayout
    [webserver]
    server.idm.example.com
    ```
3.  创建 playbook 文件，例如 `request-certificate.yml`{.literal}:
    ::: itemizedlist
    -   设置 `hosts`{.literal} 为包含您要请求证书的主机，如
        `webserver`{.literal}。
    -   将 `certificate_requests`{.literal} 变量设置为包含以下内容：
        ::: itemizedlist
        -   将参数设置 `name`{.literal} 为证书的所需名称，如
            `mycert`{.literal}。
        -   将 `dns`{.literal} 参数设置为证书中包含的域，如
            `www.example.com`{.literal}。
        -   将 `ca`{.literal} 参数设置为您要用来发布证书的 CA，如
            `self-sign`{.literal}。
        -   将 `run_before`{.literal}
            参数设置为在签发或续订证书前要执行的命令，如
            `systemctl stop httpd.service`{.literal}。
        -   将 `run_after`{.literal}
            参数设置为发布或续订这个证书后要执行的命令，如
            `systemctl start httpd.service`{.literal}。
        :::
    -   在 `roles`{.literal} 下设置
        `rhel-system-roles.certificate`{.literal} 角色。
        这是本例的 playbook 文件：
        ``` literallayout
        ---
        - hosts: webserver
          vars:
            certificate_requests:
              - name: mycert
                dns: www.example.com
                ca: self-sign
                run_before: systemctl stop httpd.service
                run_after: systemctl start httpd.service
          roles:
            - linux-system-roles.certificate
        ```
    :::
4.  保存该文件。
5.  运行 playbook:
    ``` literallayout
    $ ansible-playbook -i inventory.file request-certificate.yml
    ```
:::
::: itemizedlist
**其它资源**
-   有关 `certificate_requests`{.literal} 变量使用的参数的详情，以及
    `certificate`{.literal} 系统角色的附加信息，请参阅该
    `/usr/share/ansible/roles/rhel-system-roles.certificate/README.md`{.literal}
    文件。
-   有关 `ansible-playbook`{.literal} 命令的详情请参考
    `ansible-playbook(1)`{.literal} man page。
:::
:::
:::
[]{#restricting-an-application-to-trust-only-a-subset-of-certificates_working-with-idm-certificates.html}
::: chapter
::: titlepage
# []{#restricting-an-application-to-trust-only-a-subset-of-certificates_working-with-idm-certificates.html#restricting-an-application-to-trust-only-a-subset-of-certificates_working-with-idm-certificates}第 15 章 将应用程序限制为只信任证书子集 {.title}
:::