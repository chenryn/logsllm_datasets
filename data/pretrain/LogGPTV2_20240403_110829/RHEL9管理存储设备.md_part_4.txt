    Parameter auto_add_mapped_luns is now 'false'.
    ```
    这样可防止 LUN 自动映射到现有 ACL，从而允许手动映射 LUN。
2.  进入 [*initiator_iqn_name*]{.emphasis} 目录：
    ``` literallayout
    /> iscsi/target_iqn_name/tpg1/acls/initiator_iqn_name/
    ```
3.  创建 LUN：
    ``` screen
    /iscsi/target_iqn_name/tpg1/acls/initiator_iqn_name> create mapped_lun=next_sequential_LUN_number tpg_lun_or_backstore=backstore write_protect=1
    ```
    例如：
    ``` screen
    /iscsi/target_iqn_name/tpg1/acls/2006-04.com.example.foo:888> create mapped_lun=1 tpg_lun_or_backstore=/backstores/block/block2 write_protect=1
    Created LUN 1.
    Created Mapped LUN 1.
    ```
4.  验证所创建的 LUN：
    ``` screen
    /iscsi/target_iqn_name/tpg1/acls/2006-04.com.example.foo:888> ls
     o- 2006-04.com.example.foo:888 .. [Mapped LUNs: 2]
     | o- mapped_lun0 .............. [lun0 block/disk1 (rw)]
     | o- mapped_lun1 .............. [lun1 block/disk2 (ro)]
    ```
    mapping_lun1 行现在在结尾带有(`ro`{.literal})（不像 mapping_lun0 为
    (`rw`{.literal})），这表示它是只读的。
5.  配置 ACL。如需更多信息，请参阅[创建 iSCSI
    ACL](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_storage_devices/configuring-an-iscsi-target_managing-storage-devices#creating-an-iscsi-acl_configuring-an-iscsi-target){.link}。
:::
::: itemizedlist
**其他资源**
-   `targetcli(8)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#configuring-an-iscsi-target_managing-storage-devices.html#creating-an-iscsi-acl_configuring-an-iscsi-target}创建 iSCSI ACL {.title}
:::
在 `targetcli`{.literal}
中，访问控制列表(ACL)用于定义访问规则，每个启动器都具有对 LUN
独占访问权限。
目标和发起方都有唯一的标识名称。您必须知道配置 ACL
的发起方的唯一名称。iSCSI 启动器可以在
`/etc/iscsi/initiatorname.iscsi`{.literal} 文件中找到。
::: itemizedlist
**先决条件**
-   已安装并运行 `targetcli`{.literal}。如需更多信息，请参阅[安装
    targetcli](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_storage_devices/configuring-an-iscsi-target_managing-storage-devices#installing-targetcli_configuring-an-iscsi-target){.link}。
-   与目标门户组(TPG)关联的 iSCSI 目标。如需更多信息，请参阅[创建 iSCSI
    目标](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_storage_devices/configuring-an-iscsi-target_managing-storage-devices#creating-an-iscsi-target_configuring-an-iscsi-target){.link}。
:::
::: orderedlist
**步骤**
1.  进入 acls 目录
    ``` screen
    /iscsi/iqn.20...mple:444/tpg1> acls/
    ```
2.  使用以下选项之一创建 ACL：
    ::: orderedlist
    1.  在启动器上使用来自 `/etc/iscsi/initiatorname.iscsi`{.literal}
        文件中的 initiator 名称。
    2.  使用更易于记住的名称，请参阅[创建 iSCSI
        启动器](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_storage_devices/configuring-an-iscsi-initiator_managing-storage-devices#creating-an-iscsi-initiator_configuring-an-iscsi-initiator){.link}以确保与启动器匹配的
        ACL。
        ``` screen
        /iscsi/iqn.20...444/tpg1/acls> create iqn.2006-04.com.example.foo:888
        Created Node ACL for iqn.2006-04.com.example.foo:888
        Created mapped LUN 2.
        Created mapped LUN 1.
        Created mapped LUN 0.
        ```
        ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 注意 {.title}
        上一示例中使用的全局设置 `auto_add_mapped_lun`{.literal}
        会自动将 LUN 映射到任何创建的 ACL。
        :::
        您可以在目标服务器上的 TPG 节点中设置用户创建的 ACL：
        ``` screen
        /iscsi/iqn.20...scsi:444/tpg1> set attribute generate_node_acls=1
        ```
    :::
:::
::: itemizedlist
**验证**
-   验证创建的 ACL：
    ``` screen
    /iscsi/iqn.20...444/tpg1/acls> ls
    o- acls .................................................[1 ACL]
        o- iqn.2006-04.com.example.foo:888 ....[3 Mapped LUNs, auth]
            o- mapped_lun0 .............[lun0 ramdisk/ramdisk1 (rw)]
            o- mapped_lun1 .................[lun1 block/block1 (rw)]
            o- mapped_lun2 .................[lun2 fileio/file1 (rw)]
    ```
:::
::: itemizedlist
**其他资源**
-   `targetcli(8)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#configuring-an-iscsi-target_managing-storage-devices.html#setting-up-the-challenge-handshake-authentication-protocol-for-the-target_configuring-an-iscsi-target}为目标设置 Challenge-Handshake 验证协议 {.title}
:::
通过使用
`Challenge-Handshake Authentication Protocol(CHAP)`{.literal}，用户可以使用密码保护目标。发起方必须了解这个密码才能连接到目标。
::: itemizedlist
**先决条件**
-   创建 iSCSI ACL。如需更多信息，请参阅[创建 iSCSI
    ACL](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_storage_devices/configuring-an-iscsi-target_managing-storage-devices#creating-an-iscsi-acl_configuring-an-iscsi-target){.link}。
:::
::: orderedlist
**步骤**
1.  设置属性身份验证：
    ``` screen
    /iscsi/iqn.20...mple:444/tpg1> set attribute authentication=1
    Parameter authentication is now '1'.
    ```
2.  设置 `userid`{.literal} 和`密码`{.literal} ：
    ``` screen
    /tpg1> set auth userid=redhat
    Parameter userid is now 'redhat'.
    /iscsi/iqn.20...689dcbb3/tpg1> set auth password=redhat_passwd
    Parameter password is now 'redhat_passwd'.
    ```
:::
::: itemizedlist
**其他资源**
-   `targetcli(8)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#configuring-an-iscsi-target_managing-storage-devices.html#removing-an-iscsi-object-using-targetcli-tool_configuring-an-iscsi-target}使用 targetcli 工具删除 iSCSI 对象 {.title}
:::
这个步骤描述了如何使用 `targetcli`{.literal} 工具删除 iSCSI 对象。
::: orderedlist
**步骤**
1.  从目标登出：
    ``` screen
    # iscsiadm -m node -T iqn.2006-04.example:444 -u
    ```
    有关如何登录到目标的更多信息，请参阅创建 [iSCSI
    启动器](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_storage_devices/configuring-an-iscsi-initiator_managing-storage-devices#creating-an-iscsi-initiator_configuring-an-iscsi-initiator){.link}。
2.  删除整个目标，包括所有 ACL、LUN 和门户：
    ``` screen
    /> iscsi/ delete iqn.2006-04.com.example:444
    ```
    将 [*iqn.2006-04.com.example:444*]{.emphasis} 替换为
    target_iqn_name。
    ::: itemizedlist
    -   删除 iSCSI 后端存储：
        ``` screen
        /> backstores/backstore-type/ delete block_backend
        ```
        ::: itemizedlist
        -   使用
            `fileio`{.literal}、`block`{.literal}、`pscsi`{.literal} 或
            `ramdisk`{.literal} 替换 [*backstore-type*]{.emphasis}。
        -   使用您要删除的 [*backstore-name*]{.emphasis} 替换
            [*block_backend*]{.emphasis}。
        :::
    -   要删除 iSCSI 目标的部分，如 ACL：
        ``` screen
        /> /iscsi/iqn-name/tpg/acls/ delete iqn.2006-04.com.example:444
        ```
    :::
:::
::: itemizedlist
**验证**
-   查看更改：
    ``` screen
    /> iscsi/ ls
    ```
:::
::: itemizedlist
**其他资源**
-   `targetcli(8)`{.literal} 手册页
:::
:::
:::
[]{#configuring-an-iscsi-initiator_managing-storage-devices.html}
::: chapter
::: titlepage
# []{#configuring-an-iscsi-initiator_managing-storage-devices.html#configuring-an-iscsi-initiator_managing-storage-devices}第 3 章 配置 iSCSI initiator {.title}
:::
iSCSI 启动程序形成连接 iSCSI 目标的会话。默认情况下，iSCSI
服务是"懒启动" ，服务只在运行 `iscsiadm`{.literal} 命令后才启动。如果
root 没有位于 iSCSI 设备，或者没有标记为
`node.startup = automatic`{.literal} 的节点，则 iSCSI
服务将不会启动，直到执行 `iscsiadm`{.literal} 命令后，需要
`iscsid`{.literal} 或 `iscsi`{.literal} 内核模块启动。
以 root 用户身份执行 `systemctl start iscsid.service`{.literal}
命令，以强制 `iscsid`{.literal} 守护进程运行和 iSCSI 内核模块来加载。
::: section
::: titlepage
# []{#configuring-an-iscsi-initiator_managing-storage-devices.html#creating-an-iscsi-initiator_configuring-an-iscsi-initiator}创建 iSCSI 启动程序 {.title}
:::
这部分论述了如何创建 iSCSI initiator。
::: itemizedlist
**先决条件**
-   在服务器计算机上安装并运行
    `targetcli`{.literal}。如需更多信息，请参阅[安装
    targetcli](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_storage_devices/configuring-an-iscsi-target_managing-storage-devices#installing-targetcli_configuring-an-iscsi-target){.link}。
-   与服务器机器上目标组(TPG)关联的 iSCSI
    目标。如需更多信息，请参阅[创建 iSCSI
    目标](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_storage_devices/configuring-an-iscsi-target_managing-storage-devices#creating-an-iscsi-target_configuring-an-iscsi-target){.link}。
-   创建 iSCSI ACL。如需更多信息，请参阅[创建 iSCSI
    ACL](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_storage_devices/configuring-an-iscsi-target_managing-storage-devices#creating-an-iscsi-acl_configuring-an-iscsi-target){.link}。
:::
::: orderedlist
**步骤**
1.  在客户端机器上安装 `iscsi-initiator-utils`{.literal}:
    ``` screen
    # dnf install iscsi-initiator-utils
    ```
2.  检查 initiator 名称：
    ``` screen
    # cat /etc/iscsi/initiatorname.iscsi
    InitiatorName=2006-04.com.example.foo:888
    ```
3.  如果在创建 [iSCSI
    ACL](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_storage_devices/configuring-an-iscsi-target_managing-storage-devices#creating-an-iscsi-acl_configuring-an-iscsi-target){.link}
    时 ACL 被指定了一个自定义名称，请相应地修改
    `/etc/iscsi/initiatorname.iscsi`{.literal} 文件。
    ``` screen
    # vi /etc/iscsi/initiatorname.iscsi
    ```
4.  发现目标并使用显示的目标 IQN 登录到目标：
    ``` screen
    # iscsiadm -m discovery -t st -p 10.64.24.179
        10.64.24.179:3260,1 iqn.2006-04.example:444
    # iscsiadm -m node -T iqn.2006-04.example:444 -l
        Logging in to [iface: default, target: iqn.2006-04.example:444, portal: 10.64.24.179,3260] (multiple)
        Login to [iface: default, target: iqn.2006-04.example:444, portal: 10.64.24.179,3260] successful.
    ```
    将 [*10.64.24.179*]{.emphasis} 替换为 target-ip-address。
    如果将相应的启动器名称添加到 ACL
    中，您可以将这个步骤用于连接到同一目标的任意启动器名称，如[创建
    iSCSI
    ACL](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_storage_devices/configuring-an-iscsi-target_managing-storage-devices#creating-an-iscsi-acl_configuring-an-iscsi-target){.link}
    所述。
5.  找到 iSCSI 磁盘名称并在这个 iSCSI 磁盘中创建文件系统：
    ``` screen
    # grep "Attached SCSI" /var/log/messages
    # mkfs.ext4 /dev/disk_name
    ```
    使用 `/var/log/messages`{.literal} 文件中显示的 iSCSI 磁盘名称替换
    [*disk_name*]{.emphasis}。
6.  挂载文件系统：
    ``` screen
    # mkdir /mount/point
    # mount /dev/disk_name /mount/point