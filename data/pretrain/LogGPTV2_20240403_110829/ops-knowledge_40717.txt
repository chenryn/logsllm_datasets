### Issue Summary
You are encountering issues while trying to install the `cryptography` package on macOS El Capitan. The errors you're facing are related to permissions and missing headers.

### Steps to Resolve

1. **Update Homebrew and Install Dependencies:**
   Ensure that Homebrew and the necessary dependencies are up-to-date.

   ```sh
   brew update
   brew install pkg-config libffi openssl
   ```

2. **Set Environment Variables:**
   Set the `LDFLAGS` and `CFLAGS` environment variables to point to the OpenSSL installation provided by Homebrew.

   ```sh
   export LDFLAGS="-L$(brew --prefix openssl)/lib"
   export CFLAGS="-I$(brew --prefix openssl)/include"
   ```

3. **Install `cryptography`:**
   Use `pip` to install the `cryptography` package with the updated environment variables.

   ```sh
   pip install cryptography
   ```

4. **Handling Permission Issues:**
   If you encounter permission issues, it might be due to System Integrity Protection (SIP) in macOS. To resolve this, you can use a virtual environment to avoid modifying system files.

   - Create a virtual environment:

     ```sh
     python3 -m venv myenv
     source myenv/bin/activate
     ```

   - Install `cryptography` within the virtual environment:

     ```sh
     pip install cryptography
     ```

5. **Alternative: Use `--user` Flag:**
   If you prefer not to use a virtual environment, you can install the package for the current user only.

   ```sh
   pip install --user cryptography
   ```

### Detailed Explanation

- **Homebrew:** Ensures that the necessary libraries (`pkg-config`, `libffi`, and `openssl`) are installed and up-to-date.
- **Environment Variables:** `LDFLAGS` and `CFLAGS` are set to point to the correct paths for the OpenSSL headers and libraries.
- **Virtual Environment:** Isolates the Python environment, avoiding conflicts with system-wide packages and permissions.
- **`--user` Flag:** Installs the package for the current user, bypassing the need for administrative privileges.

### Example Commands

```sh
# Update Homebrew and install dependencies
brew update
brew install pkg-config libffi openssl

# Set environment variables
export LDFLAGS="-L$(brew --prefix openssl)/lib"
export CFLAGS="-I$(brew --prefix openssl)/include"

# Install cryptography
pip install cryptography

# Alternatively, create and activate a virtual environment
python3 -m venv myenv
source myenv/bin/activate
pip install cryptography

# Or install for the current user
pip install --user cryptography
```

By following these steps, you should be able to successfully install the `cryptography` package on your macOS El Capitan system.