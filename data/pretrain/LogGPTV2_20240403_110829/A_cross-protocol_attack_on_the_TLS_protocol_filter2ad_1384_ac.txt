nullity with most compact representation modulo n is given
by r = Qs
i=1 pi. This shows that a small root of nullity is
extremely unlikely. For roots of unity of order k > 2, the
condition is that n | Φk(r), with Φk(x), the k-th cyclotomic
polynomial, so for random n this is again unlikely. Hence,
we will mainly focus on the case Ys = 1.
i=1 pei
3.4 Attack success probability
In this section, we provide a lower bound on the adversary’s
probability of success for the simplest attack where the ad-
versary expects to ﬁnd the value 1 in Ys.
To compute the probability that Ys = 1 for a valid message,
we again refer to Fig. 3. For every ﬁxed valid length Lg = k
with 0 ;
KeyExchangeAlgorithm kx_algorithm;
Parameters params;
}
} ServerKeyExchange;
Figure 6: The proposed format for the ServerKeyEx-
change message signature. Note that we follow the TLS
protocol message description.
In particular, the type
opaque is used to indicate bytes containing uninterpreted
data and arrays of variable length, speciﬁed with the
 notation, are preceded by a number of
bytes containing the length of the array.
A drawback of this change is that it requires caching of
the previously exchanged messages until the ‘ServerKey-
Exchange’ message is sent. This however, should be an in-
signiﬁcant cost for today’s servers.
7. CONCLUSIONS
In this paper we presented a new attack on the TLS proto-
col that exploits the fact that a client can interpret signed
explicit elliptic curve Diﬃe-Hellman (DH) key exchange pa-
rameters as valid plain DH parameters. It is a cross-protocol
attack similar in nature to the attack introduced by Wag-
ner and Schneier. The attack enables impersonation of the
server and is much more eﬃcient than breaking any of the
involved cryptographic primitives.
Nonetheless, the presented attack depends on the server sup-
porting the explicit elliptic curves option. This option is not
supported in the tested open-source implementations mak-
ing them resistant to this attack. This fact suggests that for
now the implementation of the explicit elliptic curves proto-
col option should be avoided unless a counter-measure like
our proposed ﬁx is in place.
A limiting factor of the attack in servers that support the
explicit elliptic curve option is that it requires the initiation
of 240 sessions within the timeframe of the client session. We
show that this may be prohibitive for attacking a speciﬁc
client, but if the target is attacking any random client, the
attack should be feasible on a cluster of servers.
Moreover, we show that extensions of the TLS protocol such
as the “False start” [18] that reduces protocol round-trips by
sending the encrypted client’s application data before the
full handshake is complete, are at risk. The attack may be
used by an adversary to recover the encryption key oﬄine
and access the encrypted data.
The described attack can be countered by verifying the server’s
DH public key for known invalid values. The TLS protocol,
however, should not over-rely on these tests. There could
be other values that can be used to mount variants of our
attack but cannot be easily detected. We believe that the
trust in the peer’s signature needs to extend to a trust in
the signed parameters.
It is also worth noting that our attack may not be the only
possible cross-protocol attack on the TLS protocol. Due to
the fact that the protocol in its current form allows a server
to be used as an oracle by an adversary, other attacks that
explore diﬀerent algorithm interactions may also be possi-
ble. For that we proposed a ﬁx to the protocol that defends
against this family of attacks.
8. ACKNOWLEDGMENTS
The authors would like to thank David Wagner, Kenny Pa-
terson, Andreas Pashalidis, Yngve Nysaeter Pettersen, Eric
Rescorla, Adam Langley, Bodo Moeller, Marsh Ray, and
the anonymous referees for their comments which improved
this manuscript. Moreover we would like to thank Koen
Simoens and Elmar Tischhauser who contributed in the for-
mulation of this attack. This work was supported in part by
the Institute for the Promotion of Innovation through Sci-
ence and Technology in Flanders (IWT Vlaanderen) SBO
project, the Research Council KU Leuven: GOA TENSE
(GOA/11/007), by the IAP Programme P6/26 BCRYPT of
the Belgian State (Belgian Science Policy).
9. REFERENCES
[1] R. J. Anderson and R. M. Needham. Robustness
principles for public key protocols. In CRYPTO 1995,
volume 963 of Lecture Notes in Computer Science,
pages 236–247. Springer, 1995.
[2] G. V. Bard. A challenging but feasible
blockwise-adaptive chosen-plaintext attack on SSL. In
SECRYPT 2006, pages 99–109. INSTICC Press, 2006.
[3] S. Blake-Wilson, N. Bolyard, V. Gupta, C. Hawk, and
B. Moeller. Elliptic Curve Cryptography (ECC)
Cipher Suites for Transport Layer Security (TLS).
RFC 4492 (Informational), 2006.
[4] D. Bleichenbacher. Chosen Ciphertext Attacks
Against Protocols Based on the RSA Encryption
Standard PKCS #1. In CRYPTO 1998, volume 1462
of Lecture Notes in Computer Science, pages 1–12.
Springer, 1998.
[5] J. Bos, T. Kleinjung, A. Lenstra, and P. Montgomery.
This is a tasty factor. Email on NMBRTHRY-list. 8
Mar 2010.
[6] Certicom Research. SEC 2: Recommended elliptic
curve domain parameters, September 2000.
[7] C. J. F. Cremers. Feasibility of multi-protocol attacks.
In ARES 2006, pages 287–294. IEEE Computer
Society, 2006.
71[8] K. Dickman. On the frequency of numbers containing
[20] H. W. Lenstra, Jr. Factoring integers with elliptic
prime factors of a certain relative magnitude. Arkiv
f¨or Matematik, Astronomi och Fysik, 22:1–14, 1930.
[9] T. Dierks and C. Allen. The TLS Protocol Version
1.0. RFC 2246 (Proposed Standard), 1999.
[10] T. Dierks and E. Rescorla. The Transport Layer
Security (TLS) Protocol Version 1.1. RFC 4346
(Proposed Standard), 2006.
[11] T. Dierks and E. Rescorla. The Transport Layer
Security (TLS) Protocol Version 1.2. RFC 5246
(Proposed Standard), 2008.
[12] D. Dolev and A. C.-C. Yao. On the security of public
key protocols. IEEE Transactions on Information
Theory, 29(2):198–207, 1983.
curves. Annals of Mathematics (2), 126(3):649–673,
1987.
[21] R Development Core Team. R: A Language and
Environment for Statistical Computing. R Foundation
for Statistical Computing, Vienna, Austria, 2012.
ISBN 3-900051-07-0.
[22] J.-F. Raymond and A. Stiglic. Security issues in the
Diﬃe-Hellman key agreement protocol. IEEE
Transactions on Information Theory, 22:1–17, 2000.
[23] E. Rescorla, M. Ray, S. Dispensa, and N. Oskov.
Transport Layer Security (TLS) Renegotiation
Indication Extension. RFC 5746 (Proposed Standard),
2010.
[13] P. Eronen and H. Tschofenig. Pre-Shared Key
[24] I. Risti´c. Internet SSL Survey, 2011.
Ciphersuites for Transport Layer Security (TLS). RFC
4279 (Proposed Standard), 2005.
https://www.ssllabs.com/projects/ssl-survey/.
[25] D. Taylor, T. Wu, N. Mavrogiannopoulos, and
[14] A. Freier, P. Karlton, and P. Kocher. The Secure
Sockets Layer (SSL) Protocol Version 3.0. RFC 6101
(Historic), 2011.
[15] T. Kleinjung. Discrete logarithms in GF(p) — 160
digits. Email on NMBRTHRY-list. 5 Feb 2007.
[16] V. Kl´ıma, O. Pokorn´y, and T. Rosa. Attacking
RSA-Based Sessions in SSL/TLS. In CHES 2003,
volume 2779 of Lecture Notes in Computer Science,
pages 426–440. Springer, 2003.
[17] H. Krawczyk, M. Bellare, and R. Canetti. HMAC:
Keyed-Hashing for Message Authentication. RFC 2104
(Informational), Feb. 1997.
[18] A. Langley, N. Modadugu, and B. Moeller. Transport
Layer Security (TLS) False Start. Internet Draft, 2010.
[19] A. K. Lenstra and H. W. Lenstra, Jr., editors. The
development of the number ﬁeld sieve, volume 1554 of
Lecture Notes in Mathematics. Springer-Verlag, Berlin,
1993.
T. Perrin. Using the Secure Remote Password (SRP)
Protocol for TLS Authentication. RFC 5054
(Informational), 2007.
[26] S. Vaudenay. Security Flaws Induced by CBC
Padding– Applications to SSL, IPSEC, WTLS ... In
EUROCRYPT 2002, volume 2332 of Lecture Notes in
Computer Science, pages 534–546. Springer, 2002.
[27] D. Wagner and B. Schneier. Analysis of the SSL 3.0
protocol. In Proceedings of the 2nd USENIX
Workshop on Electronic Commerce, volume 2 of
WOEC, pages 29–40. USENIX Association, 1996.
72