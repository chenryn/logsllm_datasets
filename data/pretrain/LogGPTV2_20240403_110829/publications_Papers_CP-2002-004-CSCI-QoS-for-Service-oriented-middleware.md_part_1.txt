In session “Web Services and Grid Computing,” Proceedings of the Conference on Systemics, Cybernetics and
Informatics, Orlando, FL, July 2002.
QoS for Service-oriented Middleware
Amit Sheth, Jorge Cardoso, John Miller and Krys Kochut
Large Scale Distributed Information Systems Lab
Computer Science, University of Georgia
{amit,anton,jam,kochut}@cs.uga.edu, http://lsdis.cs.uga.edu
Myong Kang
Mitretek Systems, Center for Information Systems
PI:EMAIL
Abstract modeling, and operational differences, even if standards
are used.
We propose a Service-oriented Middleware (SoM) that
provides an upper level of middleware over rapidly Through SoM, we aim to provide a higher-level
emerging Web Services-based middleware to make it middleware that makes it much easier to build complex
easier to develop complex multi-organizational business applications with the scope of OGSA. The particular
applications. Our approach primarily builds upon our classes of middleware services we address as identified in
experience in building distributed workflow management (Chuang, DeFanti et al. 2001) are support for end-to-end
for multi-organizational processes. Effective and efficient QoS objectives, security and robustness. Within the
Quality of Service (QoS) management is a critical classification of Grid middleware, Grid development
component of SoM allowing it to guarantee the environments and tools, and Grid applications and portals
satisfaction and fulfillment of user and application (Thomas, Mock et al. 2000), our work primarily belongs
requirements. This paper reviews a QoS model that also to the middle tier.
supports ability to automatically compute QoS based on
QoS specification of component web Services. The services offered by an OGSA needs to include an
effective and efficient QoS management, to guarantee the
Keywords: Quality of Service, Web Service QoS, Process satisfaction and fulfillment of users requirements. For
QoS, multi-organizational workflows, Service oriented example, when an OGSA is chosen to support e-
Middleware commerce processes, the architecture must understand the
binding agreement or contract between the supplier and
customer, specifying QoS items such as products or
1 Introduction
services to be delivered, deadlines, quality of products,
Open Grid Service Architecture (OGSA) has presented a and cost of service. The management of such QoS
vision of an integrated approach to supporting both e- requirements directly impacts success of organizations
science and e-business (Foster, Kesselman et al. 2002). participating in e-commerce. Products and services must
Related to this is the move towards convergence of be available to customers with well-defined specifications
formerly distinct communities (Web, Grid and P2P) to fulfill customer expectation and achieve customer
leading to integrated Internet distributed computing (Hey satisfaction.
2001; Gilmore 2002; Milenkovic 2002). As with most
The OGSA must accept the specification, as well as be
past technological evolution in software architectures, we
able to estimate, monitor, and control the QoS of running
expect to see a layered approach to achieving the above
applications. QoS can play important role in dynamic
vision. We propose a Service-oriented Middleware (SoM)
scheduling and evolution during enactment (or
that takes a step in this direction by building upon the
orchestration) of a process defined as a composition of
progress in Grid middleware and rapidly emerging Web
multiple Web Services. To achieve these objectives the
Services developed to support business applications. Our
first step is to develop an adequate QoS model for
objective is to address key outstanding issues such as
processes. While QoS models have been deployed for
making it easier to build complex applications defined as
various domains, such as networking, multimedia, and
processes by composing Web Services, and their
middleware, no model has been created for processes. We
management (including orchestration).
have investigated adjacent work to decide which
dimensions would be relevant to compose a valid and
Processes based on Web Services are inherently more
usable QoS model for processes. Based on previous
complicated compared to workflow processes because the
studies and our experience in the workflow domain we
scale and heterogeneity is expected to be much greater.
have constructed a model composed of the following
Scale will be related to the number of potentially relevant
dimensions: time, cost, fidelity, and reliability.
Web service providers that may perform similar jobs and
register with multiple registries. Heterogeneity will result One of the most interesting and important features of the
from their independent development and modification by model is that the end-to-end QoS of a composite service
providers, resulting in both functional differences such as or process can be synthesized from the QoS properties of
In session “Web Services and Grid Computing,” Proceedings of the Conference on Systemics, Cybernetics and
Informatics, Orlando, FL, July 2002.
its components. The QoS properties are a combination of  Sheth, et al. (Sheth, Aalst et al. 1999) discuss three
a priori estimates from designers as well as estimates evolving architectures for multi-organizational
computed from prior executions, with the historical data processes in the increasingly networked economy.
playing a larger role as more data is collected. Additional examples include work by .NET, TIBCO
Synthesizing aggregate estimates requires several (TIBCO 2002), IBM (IBM), Bowstreet, and many others.
problems to be solved, among them the determination of
branching probabilities from branching conditions and QoS
dealing with correlation between individual services. A Recent work, much of it funded by DARPA-ITO through
QoS model with the properties described here has been the Quorum program, is extending QoS concepts and
prototyped as part of the METEOR workflow mechanisms to higher semantic levels to allow the
management system. definition, measurement, and control of the quality of
service delivered by services and complete applications
2 Background and Relevant Work (Frlund and Koistinen 1998). However, little work has
been done in terms of QoS of pluggable components that
First we review recent commercial moves toward service-
we propose.
based architectures and solutions. Then we review our
most relevant work in workflow management and
Workflow Process Management
semantic interoperability which form the basis of our
Recently, the need for constructing processes across
approach to developing the proposed SoM and its tools.
multiple domains using existing applications has received
For brevity, we do not review the relevant specifications
much attention in the context of business-to-business
and standards such as XML, RDF, Web Services (IBM;
applications (Sheth, Aalst et al. 1999). OGSA has also
Graham, Simenov et al. 2002), (including SOAP (SOAP
recognized the need for workflow (Foster, Kesselman et
2002), UDDI (UDDI 2002), WSDL (WSDL 2001)
al. 2002). Even though there are many efforts to facilitate
XLANG (Thatte 2001), WSFL (WSFL 2002)), that are the
such needs, such as enterprise application integration
basis of component-based middleware are relevant to
(EAI) and cross-organizational workflow management
OGSA and are also the basis of SoM
system (WfMS) (Grefen, Aberer et al. 2001), it is not easy
to build complex application, and there is little work that
Service-based Infrastructure and Solutions
support QoS for end-to-end processes created by
The commercial world is moving to service-based
composing or coordinating individual applications or Web
infrastructure and solutions. Example of commercial
Services.
systems and research work based on the service paradigm:
 Propel Platform Development Team (Carey and
The METEOR project at the Large Scale Distributed
Team 2001) focuses on a scalable infrastructure for
Information systems (LSDIS) Lab in the Computer
advanced e-services. The Propel team and Anil Nori
Science Department of the University of Georgia, has
et al. (Nori, Venketraman et al. 2001) discuss
been, perhaps, the largest academic effort (with
requirements for a comprehensive e-service platform
substantial industrial collaboration). This project has
and how the developed system architectures meet
spanned the complete phase of research, prototyping and
them.
industrial trials, technology licensing and
 Fabio Casati and Ming-Chien Shan from HP Labs
commercialization of a comprehensive workflow
(Casati, Lee et al. 2001)and BizTalk Server 2000 by
management system. METEOR’s architecture includes
Bimal Mehta et al. (Metha, Levy et al. 2001) focus
design tools, monitoring tools, workflow repository, and
on the process-oriented dimension of e-services and
enactment systems. Due to different needs in
discuss how workflow technology contributes to
organizations we have developed two enactment service:
current solutions.
OrbWork (Kochut, Sheth et al. 1999) and WebWork
 Vassilis Christophides (Christophides, Hull et al.
(Miller, Palaniswami et al. 1997; Miller, Cardoso et al.
2001) from Bell Labs is studying workflow
2002). OrbWork is a CORBA and Java based system
mediation using the XML-based vortex architecture.
oriented to support mission-critical applications requiring
 Bell Labs work and the WISE approach by Amaia
high scalability and robustness. It is fully distributed and
Lazcano et al. (Lazcano, Schuldt et al. 2001)
scalable. Since LSDIS has used Java as the language for
emphasize process based e-commerce. In their
its development, the system is portable across platforms. It
papers, they review ongoing research efforts toward
supports interoperability standards such as jFLOW
more flexible, interoperable, and highly dependable
(JFLOW 1998) and SWAP. Recent enhancements include
workflows in an e-service environment.
support for dynamic changes at the instance level
 The CrossFlow (Grefen, Aberer et al. 2001) is a
(Kochut, Sheth et al. 1999), repository to support process
multi-national research project on cooperation in
reuse, and an exception handling mechanism (Luo 2000)
virtual enterprises. They use a contract mechanism
that is part of the adaptation module. A collaboration with
for the service outsourcing and integration.
NRL resulted in a extended METEOR system called
 Kraiss, et al. (Kraiss, Schoen et al. 2001) discuss the
SALSA to build a multilevel secure (MLS) workflow
importance of performance guarantees in a banking
management system (Kang, Froscher et al. 1999; Kang,
environment and a mathematical approach for
Park et al. 2001).
appropriate system configuration.
In session “Web Services and Grid Computing,” Proceedings of the Conference on Systemics, Cybernetics and
Informatics, Orlando, FL, July 2002.
3 Specification of Web Service and Process 3.2 QoS Model
QoS QoS is typically decomposed into several dimensions.
Processes are composed of multiple Web services. For business processes, (Stalk and Hout 1990) and
Selection of services can occur either design time or run (Rommel 1995) investigated the features with which
time. In either case, matching and ranking functions are successful companies assert themselves in the competitive
used to select one or more suitable services. The service world markets. Their results indicated that success is
should provide the appropriate functionality as well as related to the capability to compete with other
meet QoS requirements. organizations, and it is based upon three essential pillars:
time, cost, and quality. These three dimensions have been
3.1 SoM QoS Requirements a major concern for organizations. (Garvin 1988)
The research and development of mechanisms to specify associates eight dimensions with quality, including
QoS and allow an effective and efficient QoS performance and reliability. Software systems quality of
management are our main objectives for the SoM service has been extensively studied. Major contribution
architecture. We have identified four important and can be found in networking (Georgiadis, Guerin et al.
complementary areas that we are currently investigating: 1996)., eal-time applications (Clark, Shenker et al. 1992)
specification, estimation algorithms and methods, and middleware areas (Hiltunen, Schlichting et al. 2000)
monitoring tools, and mechanisms to control the QoS. (Zinky, Bakken et al. 1997). For middleware systems,
Only the development of integrated solutions composed of (Frlund and Koistinen 1998) present a set of practical
those four modules can result in a sophisticated quality dimensions for distributed object systems reliability and
management framework. The objectives and performance, which include TTR (time to repair), TTF
functionalities of each module include the following: (time to failure), availability, failure masking, and server