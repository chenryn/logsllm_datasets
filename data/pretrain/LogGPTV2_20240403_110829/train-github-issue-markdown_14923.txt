Suppose we wish to classify some examples where one class is relatively rare.
    import pandas as pd,numpy as np
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import cross_val_score
    from random import choice
    df0=pd.DataFrame(np.random.normal(size=(100,3)))
    df1=pd.Series([choice([-1,1]) for i in xrange(df0.shape[0])])
    df1.iloc[-1]=0
    df2=pd.Series(np.ones(df0.shape[0])/df0.shape[0])
    clf=RandomForestClassifier(n_estimators=10)                               
    score=cross_val_score(clf,X=df0,y=df1,cv=10,scoring='neg_log_loss',fit_params={'sample_weight':df2.values}).mean()
This will spit the error:
    *** ValueError: y_true and y_pred contain different number of classes 3, 2. Please provide the true labels explicitly through the labels argument. Classes found in y_true: [-1  0  1]
This is a known problem for _log_loss_ , which was fixed by adding an argument
**labels** to that function: #4033
The problem above is, _cross_val_score_ invokes that function, but does not
allow us to pass the labels. Ideally, cross_val_score should be able to infer
the true labels from y=df1.
sklearn version '0.18.1'