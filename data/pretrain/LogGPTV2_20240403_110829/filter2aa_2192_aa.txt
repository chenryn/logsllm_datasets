Under the iHood
DEFCON 16
Cameron Hotchkies 1
PI:EMAIL
DEFCON 16
Hotchkies ( PI:EMAIL )
Under the iHood
DEFCON 16
1 / 50
About Me
Work at TippingPoint’s Digital Vaccine Labs
Responsible for vuln-discovery, patch analysis, product security
Keep tabs on us at http://dvlabs.tippingpoint.com
Author and contributor to:
PaiMei Reverse Engineering Framework
Absinthe SQL Injection tool
Side projects:
XSO - OS X Reversers: http://0x90.org/mailman/listinfo/xso
Hotchkies ( PI:EMAIL )
Under the iHood
DEFCON 16
2 / 50
Talk Outline
File Formats
Tools
Common Disassembly Patterns
Carbon
Objective-C
Case Study (Mac vs. Windows)
Hotchkies ( PI:EMAIL )
Under the iHood
DEFCON 16
3 / 50
Applications
Applications in OS X are stored in a directory structure referred
to as bundles or packages
Finder will treat any directory ending in .app as a single entity
self contained package with the binary and all necessary resources
Hotchkies ( PI:EMAIL )
Under the iHood
DEFCON 16
4 / 50
Application directory structure
Hotchkies ( PI:EMAIL )
Under the iHood
DEFCON 16
5 / 50
Info.plist
XML or binary based list of application properties
contains data such as major & minor version numbers, icon
names, etc
Well documented by Apple
use plutil to convert between xml and binary formats
”The plutil command obeys no one’s rules but its own.”
Hotchkies ( PI:EMAIL )
Under the iHood
DEFCON 16
6 / 50
PkgInfo
APPL indicates an apple application bundle
No relevant information in the ﬁle
4-byte package type followed by the 4-byte signature
Hotchkies ( PI:EMAIL )
Under the iHood
DEFCON 16
7 / 50
Mach-O
the standard binary format on OS X
identiﬁed by the magic number 0xFEEDFACE
0xFEEDFACF on 64-bit
Fat/Universal binaries include code for multiple architectures
Fat binaries are identiﬁed by 0xCAFEBABE
Hotchkies ( PI:EMAIL )
Under the iHood
DEFCON 16
8 / 50
Mach-O
the standard binary format on OS X
identiﬁed by the magic number 0xFEEDFACE
0xFEEDFACF on 64-bit
Fat/Universal binaries include code for multiple architectures
Fat binaries are identiﬁed by 0xCAFEBABE
yes, this is the same as Java
Hotchkies ( PI:EMAIL )
Under the iHood
DEFCON 16
8 / 50
Mach-O
the standard binary format on OS X
identiﬁed by the magic number 0xFEEDFACE
0xFEEDFACF on 64-bit
Fat/Universal binaries include code for multiple architectures
Fat binaries are identiﬁed by 0xCAFEBABE
yes, this is the same as Java
Googling ”mach-o” is a fun game on it’s own
”Can black-hole MACHO binaries be detected by the Brazilian
spherical antenna?”
Hotchkies ( PI:EMAIL )
Under the iHood
DEFCON 16
8 / 50
Mach-O Text Segment
.text
( TEXT, text)
Code, same as everywhere else
.const
( TEXT, const)
Initialized constants
.static const
( TEXT, static const)
Not deﬁned*
.cstring
( TEXT, cstring)
Null terminated byte strings
.literal4
( TEXT, literal4)
4 byte literals
.literal8
( TEXT, literal8)
8 byte literals
.constructor
( TEXT, constructor)
C++ constructors*
.destructor
( TEXT, destructor)
C++ destructors*
.fvmlib init0
( TEXT, fvmlib init0)
ﬁxed virtual memory shared library initialization*
.fvmlib init1
( TEXT, fvmlib init1)
ﬁxed virtual memory shared library initialization*
.symbol stub
( TEXT, symbol stub)
Indirect symbol stubs
.picsymbol stub
( TEXT, picsymbol stub)
Position-independent indirect symbol stubs.
.mod init func
( TEXT, mod init func)
C++ constructor pointers*
Hotchkies ( PI:EMAIL )
Under the iHood
DEFCON 16
9 / 50
Mach-O Data Segment
.data
( DATA, data)
Initialized variables
.static data
( DATA, static data)
Unused*
.non lazy symbol pointer
( DATA, nl symbol pointer)
Non-lazy symbol pointers
.lazy symbol pointer
( DATA, la symbol pointer)
Lazy symbol pointers
.dyld
( DATA, dyld)
Placeholder for dynamic linker
.const
( DATA, const
Initialized relocatable constant variables
.mod init func
( DATA, mod init func)
C++ constructor pointers
.mod term func
( DATA, mod term func)
Module termination functions.
.bss
( DATA, bss)
Data for uninitialized static variables
.common
( DATA, common)
Uninitialized imported symbol deﬁnitions
Hotchkies ( PI:EMAIL )
Under the iHood
DEFCON 16
10 / 50
Objective-C Segment
.objc class
( OBJC, class)
.objc meta class
( OBJC, meta class)
.objc cat cls meth
( OBJC, cat cls meth)
.objc cat inst meth
( OBJC, cat inst meth)
.objc protocol
( OBJC, protocol)
.objc string object
( OBJC, string object)
.objc cls meth
( OBJC, cls meth)
.objc inst meth
( OBJC, inst meth)
.objc cls refs
( OBJC, cls refs)
.objc message refs
( OBJC, message refs)
.objc symbols
( OBJC, symbols)
.objc category
( OBJC, category)
.objc class vars
( OBJC, class vars)
.objc instance vars
( OBJC, instance vars)
.objc module info
( OBJC, module info)
.objc class names
( OBJC, class names)
.objc meth var names
( OBJC, meth var names)
.objc meth var types
( OBJC, meth var types)
.objc selector strs
( OBJC, selector strs)
Hotchkies ( PI:EMAIL )
Under the iHood
DEFCON 16
11 / 50
Objective-C Segment
.objc class
( OBJC, class)
.objc meta class
( OBJC, meta class)
.objc cat cls meth
( OBJC, cat cls meth)
.objc cat inst meth
( OBJC, cat inst meth)
.objc protocol
( OBJC, protocol)
.objc string object
( OBJC, string object)
.objc cls meth
( OBJC, cls meth)
.objc inst meth
( OBJC, inst meth)
.objc cls refs
( OBJC, cls refs)
.objc message refs
( OBJC, message refs)
.objc symbols
( OBJC, symbols)
.objc category
( OBJC, category)
.objc class vars
( OBJC, class vars)
.objc instance vars
( OBJC, instance vars)
.objc module info
( OBJC, module info)
.objc class names
( OBJC, class names)
.objc meth var names
( OBJC, meth var names)
.objc meth var types
( OBJC, meth var types)
.objc selector strs
( OBJC, selector strs)
What they say: ”All sections in the
OBJC segment, including old
sections that are no longer used and future sections that may be
added, are exclusively reserved for the Objective C compiler’s use.”
Hotchkies ( PI:EMAIL )
Under the iHood
DEFCON 16
11 / 50
Objective-C Segment
.objc class
( OBJC, class)
.objc meta class
( OBJC, meta class)
.objc cat cls meth
( OBJC, cat cls meth)
.objc cat inst meth
( OBJC, cat inst meth)
.objc protocol
( OBJC, protocol)
.objc string object
( OBJC, string object)
.objc cls meth
( OBJC, cls meth)
.objc inst meth
( OBJC, inst meth)
.objc cls refs
( OBJC, cls refs)
.objc message refs
( OBJC, message refs)
.objc symbols
( OBJC, symbols)
.objc category
( OBJC, category)
.objc class vars
( OBJC, class vars)
.objc instance vars
( OBJC, instance vars)
.objc module info
( OBJC, module info)
.objc class names
( OBJC, class names)
.objc meth var names
( OBJC, meth var names)
.objc meth var types
( OBJC, meth var types)
.objc selector strs
( OBJC, selector strs)
What they say: ”All sections in the
OBJC segment, including old
sections that are no longer used and future sections that may be
added, are exclusively reserved for the Objective C compiler’s use.”
What they mean: ”No docs 4 u LOL kthxbai!”
Hotchkies ( PI:EMAIL )
Under the iHood
DEFCON 16
11 / 50
vmmap
available standard on OS X
lists memory mapping for a binary at runtime
includes segment partitions
quick way to track down what address is heap/stack/library
without a debugger
Hotchkies ( PI:EMAIL )
Under the iHood
DEFCON 16
12 / 50
Hex Fiend
An open source hex editor, that is not very diﬃcult to modify.
http://ridiculousﬁsh.com/hexﬁend/
Hotchkies ( PI:EMAIL )
Under the iHood
DEFCON 16
13 / 50
0xED
Another hex editor, has plugins to display/edit custom data types.
http://www.suavetech.com/0xed/0xed.html
Hotchkies ( PI:EMAIL )
Under the iHood
DEFCON 16
14 / 50
otool
the mac equivalent of objdump, available in a default install.
use ’otool -otV’ to resolve symbols
Hotchkies ( PI:EMAIL )
Under the iHood
DEFCON 16
15 / 50
otool
use ’otool -L’ to list required libraries
Camtronic-2:MacOS cameron$ otool -L iChat
iChat:
/System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth
(compatibility version 1.0.0, current version 1.0.0)
/System/Library/PrivateFrameworks/DisplayServices.framework/Versions/A/DisplayServices
(compatibility version 1.0.0, current version 1.0.0)
/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa
(compatibility version 1.0.0, current version 12.0.0)
/System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices
(compatibility version 1.0.0, current version 34.0.0)
/System/Library/Frameworks/AddressBook.framework/Versions/A/AddressBook
(compatibility version 1.0.0, current version 688.0.0)
/System/Library/Frameworks/InstantMessage.framework/Versions/A/InstantMessage
(compatibility version 1.0.0, current version 579.0.0)
/System/Library/Frameworks/QuickTime.framework/Versions/A/QuickTime
(compatibility version 1.0.0, current version 14.0.0)
/System/Library/PrivateFrameworks/VideoConference.framework/Versions/A/VideoConference
(compatibility version 2.0.0, current version 2.0.0)
Hotchkies ( PI:EMAIL )
Under the iHood
DEFCON 16
16 / 50
otx
A tool used to clean up output from otool
http://otx.osxninja.com/
+56
00003cda
a3d8c42400
movl
%eax,0x0024c4d8
+61
00003cdf
a1d4902500
movl
0x002590d4,%eax
alloc
+66
00003ce4
89442404
movl
%eax,0x04(%esp)
+70
00003ce8
a1b0fb2500
movl
0x0025fbb0,%eax
NSMutableArray
+75
00003ced
890424
movl
%eax,(%esp)
+78
00003cf0
e89d082900
calll
0x00294592
+[NSMutableArray alloc]
+83
00003cf5
8b1570912500
movl
0x00259170,%edx
init
+89
00003cfb
89542404
movl
%edx,0x04(%esp)
+93
00003cff
890424
movl
%eax,(%esp)
+96
00003d02
e88b082900
calll
0x00294592
-[(%esp,1) init]
Hotchkies ( PI:EMAIL )
Under the iHood
DEFCON 16
17 / 50
classdump
Similar to ”otool -ov” but represents code as Objective C
declarations.
http://www.codethecode.com/projects/class-dump/
Camtronic-2:MacOS cameron$ class-dump iChat
/*
* Generated by class-dump 3.1.2.
*
* class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
*/
...
@interface SmileyCell : NSButtonCell
{
NSString * axDescription;
}
- (void)dealloc;
- (id)accessibilityAttributeNames;
- (void)accessibilitySetValue:(id)fp8 forAttribute:(id)fp12;
- (id)accessibilityAttributeValue:(id)fp8;
- (void)drawInteriorWithFrame:(struct
NSRect)fp8 inView:(id)fp24;
@end
Hotchkies ( PI:EMAIL )
Under the iHood
DEFCON 16
18 / 50
IDA Pro
IDA Pro for windows works ﬁne with Parallels
IDA Pro for OS X runs on the console
http://hex-rays.com/idapro/
http://www.parallels.com/
Both IDA & Parallels are commercial (not-free)
Hotchkies ( PI:EMAIL )
Under the iHood
DEFCON 16
19 / 50
Debuggers
Charlie Miller ported pyDBG to OSX
Stock installs come with gdb
pygdb available at http://code.google.com/p/pygdb/
vtrace at https://www.kenshoto.com/vtrace/
Weston & Beauchamp will also be releasing reDBG soon, a ruby
debugger.
Hotchkies ( PI:EMAIL )
Under the iHood
DEFCON 16
20 / 50
RE:Trace
Introduced at Black Hat DC 2008. RE:Trace is a Ruby framework
to interact with dtrace
http://www.poppopret.org/
Hotchkies ( PI:EMAIL )
Under the iHood
DEFCON 16
21 / 50
Calling Conventions
On OS X, std call is the calling convention. As it is compiled with
GCC, stack space is allocated at the function start.
Variables are moved in, not pushed onto the stack
Hotchkies ( PI:EMAIL )
Under the iHood
DEFCON 16
22 / 50
Calling Conventions
On OS X, std call is the calling convention. As it is compiled with
GCC, stack space is allocated at the function start.
Variables are moved in, not pushed onto the stack
before renaming variables, check the stack delta
Hotchkies ( PI:EMAIL )
Under the iHood
DEFCON 16
22 / 50
Local Addressing
Functions will frequently refer to an address that is not the base of the
function, just an anchor point
This is used frequently in data references and jump tables
text:000E63CF mov eax, [ebx+eax*4+300h]
text:000E63D6 add eax, ebx
text:000E63D8 jmp eax
text:000E63D8 ;
text:000E63DA align 4 ; Jump table
text:000E63DC dd 2 dup( 0A80h), 7AAh, 7B9h, 3A4h, 716h,3 dup( 0A80h), 94Ch, 9E0h
text:000E63DC dd 3FAh, 0A80h, 0A24h,4 dup( 0A80h), 998h,2 dup( 0A80h), 435h, 7C8h
text:000E63DC dd 3 dup( 7E7h),0Ch dup( 0A80h), 7F6h, 0A80h, 905h, 6AF48D8Bh, 758BFFFBh, 8418B08h
Hotchkies ( PI:EMAIL )
Under the iHood