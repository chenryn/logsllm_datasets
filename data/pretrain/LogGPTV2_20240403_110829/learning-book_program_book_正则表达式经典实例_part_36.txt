Java
StringBuffer resultString = new StringBuffer();
Pattern outerRegex = Pattern.compile(".*?");
Pattern innerRegex = Pattern.compile("before");
Matcher outerMatcher =outerRegex.matcher(subjectString);
while (outerMatcher.find()){
outerMatcher.appendReplacement(resultString,
使用正则表达式编程
179
www.TopSage.com
---
## Page 196
innerRegex,matcher(outerMatcher.group()).replaceAll("after"));
outerMatcher.appendTail(resultString);
JavaScript
var result = subject.replace(/.*?/g
function(match){
return match.replace(/before/g,“after");
)：
PHP
$result = preg_replace_callback('%.*?%',
replace_within_tag,$subject);
function replace_within_tag($groups){
return preg_replace('/before/','after',$groups[0]);
Perl
$subject =~ s%.*?%($match = $&)=~ s/before/after/g;
$match;%eg:
Python
innerre = re.compile("before")
def replacewithin(matchobj):
return innerre.sub("after",matchobj.group())
result = re.sub(".*?", replacewithin, subject)
Ruby
innerre =/before/
result = subject.gsub(/. *?/)(|match1
match.gsub(innerre,'after')
讨论
这个解答同样是前面两个解答的组合，其中使用了两个正则表达式。“外层”正则表达
式，（.*?>，会匹配HTML粗体tag以及两个tag之间的文本。“内层”正则表达
式会匹配“before”，然后把它替换为“after”。
实例3.16中讲解了如何运行查找和替换，并且在自己的代码中如何为每个正则表达式
构造替代文本。在这里，我们使用外层正则表达式来完成这个功能。每次它找到一对
180
第3章
www.TopSage.com
---
## Page 197
起始和结束的tag时，我们都会使用内层正则表达式来执行查找和替换，这与我们
在实例3.14中所做的是一样的。内层正则表达式查找和替换的目标字符串就是外层正
则表达式匹配到的文本。
参见
实例3.11、3.13和3.16。
3.18替换另一个正则式匹配之间的所有匹配
问题描述
你想要替换某个特定正则表达式的所有匹配，但是只在目标字符串的某些片段中进行。
另外一个正则表达式会匹配位于这些片段之间的文本。换句话说，你想要查找和替换
另外一个正则表达式不能匹配的自标学符事中的那些片段。
假设你有一个HTML文件，想要把其中垂直的双引号替换为智能（弯曲的）双引号，
但是你只想替换那些位于HTMLtag之外的引号。因为位于HTMLtag之内的引号必须
要使用ASCII的垂置引I号，不然你的web浏览器可能就会无法分析HTML文件了。例
解决方案
C#
string resultString = null;
Regex outerRegex = new Regex("]*>");
(\([\])\) xabay mau=xabayxouut xobey
//Find the first section
int lastIndex=0;
Match outerMatch = outerRegex.Match(subjectString);
while (outerMatch.Success){
//Search-and-replace through thetext between thismatch,
//and the previous one
string textBetween =
subjectString.Substring(lastIndex, outerMatch.Index - lastIndex);
resultString = resultString +
innerRegex.Replace(textBetween,"\u201c$1\u201D");
lastIndex = outerMatch.Index + outerMatch.Length;
// Copy the text in the section unchanged
resultString = resultString + outerMatch.Value;
//Find the next section
outerMatch = outerMatch.NextMatch ();
使用正则表达式编程
181
www.TopSage.com
---
## Page 198
//Search-and-replace through the remainder after the last regex match
string textAfter = subjectString.Substring(lastIndex,
subjectString.Length - lastIndex);
"\u201C$1\u201D");
VB.NET
Dim ResultString As String = Nothing
Dim OuterRegex As New Regex("]*>")
Dim InnerRegex As New Regex("""([^""]*)""")
'Find the first section
Dim LastIndex = 0
Dim OuterMatch = OuterRegex.Match(SubjectString)
While OuterMatch.Success
'Search-and-replace through the text between this match,
'and the previous one
Dim TextBetween = SubjectString.Substring (LastIndex,
OuterMatch.Index - LastIndex);
ResultString = ResultString + InnerRegex.Replace(TextBetween,
ChrW(&H201C)+“$1"+ ChrW(&H201D))
LastIndex = OuterMatch.Index + OuterMatch.Length
'Copy the text in the section unchanged
ResultString = ResultString + OuterMatch.Value
'Find the next section
OuterMatch = OuterMatch.NextMatch
End while
'Search-and-replace through the remainder after the last regex match
Dim TextAfter = SubjectString.Substring(LastIndex,
SubjectString.Length - LastIndex);
ResultString = ResultString +
InnerRegex.Replace(TextAfter, ChrW(&H201C) + "S1" + ChrW(&H201D))
Java
StringBuffer resultString = new StringBuffer();
Pattern outerRegex=Pattern.compile("]*>");
Pattern innerRegex =Pattern.compile("\"([^\"]*)\"");
Matcher outerMatcher = outerRegex.matcher(subjectString);
int lastIndex = 0;
while(outerMatcher.find()){
//Search-and-replace through the text between this match,
//andthe previous one
String textBetween = subjectString.substring(lastIndex,
outerMatcher.start());
Matcher innerMatcher “innerRegex.matcher(textBetween);
resultString.append(innerMatcher.replaceAl1("\u201c$1\u201D"));
lastIndex = outerMatcher.end();
// Append the regex match itself unchanged
182
第3章
www.TopSage.com
---
## Page 199
resultString.append(outerMatcher.group());
// Search-and-replace through the remainder after the last regex match
String textAfter = subjectString.substring(lastIndex);
Matcher innerMatcher = innerRegex.matcher(textAfter);
resultString.append(innerMatcher.replaceAll("\u201C$1\u201D"));
JavaScript
var result = "";
var outerRegex=/]*>/g;
var innerRegex=/"（[^"]*)"/g;
var outerMatch = null;
var lastIndex = 0;
while (outerMatch =outerRegex.exec(subject)）(
// Search-and-replace through the text between this match,
//andthe previous one
var textBetween = subject.substring(lastIndex,outerMatch.index);
lastIndex = outerMatch.index + outerMatch[0].length;
// Append the regex match itself unchanged
result = result + outerMatch[0];
// Search-and-replace through the remainder after the last regex match
var textAfter = subject.substr(lastIndex);
PHP
$result =*';
$lastindex = 0;
while (preg_match('/]*>/'，$subject,$groups,PREG_OFFSET_CAPTURE,
$lastindex)）(
$matchstart = $groups[0][1];
$matchlength = strlen($groups[0][0]);
//Search-and-replace through the text between this match,
//andtheprevious one
$textbetween = substr($subject,$lastindex,$matchstart-$lastindex);
$result.=preg_replace('/"([^"]*)"/'，"s1"'，
$textbetween);
// Append the regex match itself unchanged
$result .= $groups[0][0];
// Move the starting position for the next match
$lastindex = $matchstart + $matchlength;
if （$matchlength w= 0)(
//Don't get stuck in an infinite loop
// if the regex allows zero-length matches
$lastindex++;
使用正则表达式编程
183
www.TopSage.com
---
## Page 200
//Search-and-replace through theremainder after the last regex match
Stextafter = substr($subject，
slastindex);
/（]）/）e=s
'"$l"',$textafter);
Perl
use encoding "utf-8";
$result =;
while($subject =~m/]*>/g）{
$match = $&;
$textafter = $';
/0}x\）x/（+[]）/~=（=uqx）
$result.= Stextbetween.$match;
/(x\x/（+[）/~=xx
$result.= $textafter;
Python
innerre = re.compile(*"([^"] *)*
result = "";
lastindex = 0;
for outermatch in re.finditer("]*>"，subject):
# Search-and-replace through the text between this match,
#and the previous one
textbetween = subject[lastindex:outermatch.start()]
result += innerre.sub(u"\u201C\\1\u201D",textbetween)
lastindex = outermatch.end()
#Append the regex match itself unchanged
result += outermatch.group()
 Search-and-replace through the remainder after the last regex match
textafter = subject[lastindex:]
result +=innerre.sub(u"\u201c\\1\u201D",textafter)
Ruby
result ='';
textafter =1
subject.scan(/]*>/){|match|
textafter = $'
(t\./(+[])/)qns6·S=umqx
result += textbetween + match