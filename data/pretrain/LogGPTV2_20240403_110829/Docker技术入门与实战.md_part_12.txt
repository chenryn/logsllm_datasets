universe multiverse"
Step 2:RUN echo "deb http://mirrors.163.com/ubuntu/ trusty main restricted
Removing intermediate container 188d74d02d35
Step1:MAINTAINER PI:EMAIL
Step0:FROMubuntu:14.04
Sending build context to Docker daemon
Sendingbuildcontextto Docker daemon 5.632kB
$cd sshd ubuntu
4.创建镜像
CMD ["/run.sh"]
#设置自启动命令
EXPOSE 22
#开放端口
RUN chmod 755/run.sh
ADD run.sh /run.sh
ADD authorized_keys/root/.ssh/authorized_keys
#复制配置文件到相应位置，并赋予脚本可执行权限
pam_1oginuid.so/g'/etc/pam.d/sshd
#取消pam限制
sudo docker build-t sshd:dockerfile
->Running in ec3433db813e
->9cd736f11928
->Running in 897d65dfe9be
->Running in f52e2a583db5
->473eb019b331
->Running in 188d74d02d35
->ba5877dc9bec
bd4ceef2ee19
:RUN echo
's/session
multiverse">>/etc/apt/sources.list
"deb http://mirrors.163.com/ubuntu/
>/etc/apt/sources.list
required
pam_loginuid.so/#session
trusty-security main
required
---
## Page 91
Processing triggers for ureadahead (0.100.0-16)
Need to get
Th
Suggested packages:
The following extra packages
Building dependency tree...
Reading package lists.
Removing
Fetched 11.3MB in 1min 37s (116 kB/s)
restricted universe multiverse"
St
restricted universe multiverse" >> /etc/apt/sources.list
Removing intermediate container ec3433db813e
--->0f132591eddc
20
Ge
Ign
Removing
--->62f952643e33
upgraded,
python2.7
python-chardet python-minimal
openssh-client openssh-server
libxl1-data
libpython-stdlib libpython2.7-minimal
libidn11 1ibk5crypto3
ca-certificates krb5-locales 1ibck-connector0
molly-guard
krb5-doc krb5-user
python2.7-minimal
python-minimal python-requests python-six python-urllib3 python2.7
openssh-client openssh-sftp-server openssl python python-chardet
libxl1-data
ca-certificates krb5-locales libck-connector0 1ibedit2 libgssapi-krb5-2
eading state
et:1http://archive.ubuntu.com
following
ep6
http://archive.ubuntu.com
->0cda758c9f3c
->Running in 209179c21053
-->Running in 4a0fe165598f
http://archive.ubuntu.com
 intermediate container
RUN apt-get update
intermediate container
RUN echo
7599 kB of archives.
ufw
information...
NEW
libpython2.7-minimal 1ibpython2.7-stdlib 1ibwrap0 1ibx11-6
ssh-import-id tcpd wget xauth
"deb http://mirrors.163.com/ubuntu/
"deb http://mirrors.163.com/ubuntu/ trusty-proposed main
ssh-askpass libpam-ssh keychain
3libkeyutilsl 1ibkrb5-3
will be installed:
-y
trusty-proposed InRelease
openssh-server
1fd40eb66f7b
trusty-proposed Release
m trusty-proposed Release.gpg [933 B]
python-requests python-six python-urilib3
：209179c21053
>>/etc/apt/sources.list
4a0fe165598f
libpython2.7-stdlib 1ibwrap0 1ibx11-6
第10章
3libkrb5support0
0libedit2 1ibgssapi-krb5-2
创建支持SSH服务的镜像
binutils binfmt-support
monkeysphere rssh
trusty-backports main
[160kB]
---
## Page 92
22端口到本地的10122端口：
成功。可以看到，以上命令生成的镜像ID是570c26a9de68。
78
使用刚才创建的sshd:dockerile镜像来运行一个容器。直接启动镜像，映射容器的
5.测试镜像，运行容器
ubuntu
$ sudo docker images
在本地查看sshd：dockerfile镜像已存在：
命令执行完毕后，如果可见“Successfully built xxx”字样，则说明镜像创建
Step 12:ADD authorized_keys /root/.ssh/authorized_keys
Step11
Removing intermediate container aa1c4d469284
Step 9:RUNmkdir-p/var/run/sshd
Removing intermediate
ubuntu
ousybox
sshd
sshd
REPOSITORY
Successfully built 570c26a9de68
Removing intermediate container 48c37db83ffb
-> Running in 48c37db83ffb
Removing intermediate
Removing intermediate container 137e56188d7b
Step 13
Removing intermediate container 16e2d93d6ef0
Removing intermediate container 3808c650bf85
required
Removing intermediate container 0626987081d0
Step10:RUNmkdir-p/root/.ssh
---> 570c26a9de68
--->Running in a876e4ea378e
--->230711022f7d
--->6c0ca1d20d7f
--->Running in 3808c650bf85
--->Running in 0626987081d0
--->e81557dd4887
-->901e3fa9f596
->a64bbd8ae617
第二部分实战案例
Running in
23882ee06756
:ADD run.sh /run.sh
：RUN
pam_loginuid.so/g'/etc/pam.d/sshd
sed
latest
14.04
latest
ubuntu
dockerfile
TAG
eeaf9352ca11
22
-ri
container eeaf9352ca11
econtainer 399e4ea726d2
container a876e4ea378e
's/session
ba5877dc9bec
ba5877dc9bec
e72ac664f4f0
7aef2cd95fd0
570c26a9de68
IMAGE ID
required
3
3weeks ago
12 hours ago
4minutes ago
CREATED
months ago
months ago
pam_loginuid.so/#session
192.7
2.433
VIRTUAL SIZE
---
## Page 93
是比较重要的，而且它对资源的需求不高，比较适合于生产环境。
是使用SSH进行服务的维护，是目前Linux用户较为熟悉的方式。
碍了，但是如果要从其他远程主机进人容器依然没有更好的解决方案。
卡死的情况。1.3之后，虽然官方推出了docker exec 命令，在从宿主主机进人是没有障
的必要。
一个额外的SSH服务，就违背了这个理念。另外认为根本没有从远程主机进人容器进行维护
10.3本章小结
因此，在Docker推出更加高效、安全的方式对容器进行维护之前，容器的SSH服务还
笔者认为，通过一些目前看来较为复杂的方式，确实能够不需要进人容器进行维护，但
另一方的观点是：在Docker1.3版本之前，
一方的观点是：Docker的理念是一个容器只运行一个服务。因此，如果每个容器都运行
在Docker社区中，对于是否需要为Docker容器启用SSH服务一直有争论。
效果与上一小节一致，镜像创建成功。
root@890c04ff8d76:~#
applicable law.
Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by
individual files in/usr/share/doc/*/copyright.
the exact distribution
The programs included with the Ubuntu system are free software;
Are you sure you want to continue connecting (yes/no)? yes
ECDSA key fingerprint is d1:59:f1:09:3b:09:79:6d:19:16:f4:fd:39:1b:be:27.
The authenticity of host[192.168.1.200]:10122 ([192.168.1.200]:10122)'can't
$ssh 192.168.1.200-p10122
在宿主主机新打开一个终端，连接到新建的容器：
0.0.0.0:10122->22/tcp
890c04ff8d76
CONTAINER ID
$sudo docker ps
890c04ff8d769b604386ba4475253ae8c21fc92d60083759afa77573bf4e8af1
Welcome
beestablished.
Documentation:
IMAGE
sshd:dockerfile
https://help.ubuntu.com/
high_albattani
COMMAND
"/run.sh"
CREATED
，如果要用attach进人容器，经常容易出现
第10章创建支持SSH服务的镜像
(ECDSA) to the list of known hosts.
STATUS
4 seconds ago
PORTS
Up 3 seconds
NAMES
79
---
## Page 94
件和sample目录。
准备工作
个印第安人部落：阿帕奇族。
Apache 被广泛应用在多种平台和操作系统上。Apache（阿帕奇）的名字源自美国的西南部一
11.1
他方式。
Weblogic这样复杂的应用，则使用commit方式来创建，读者也可以根据自己的需求选择其
Dockerfile）来创建镜像的过程。其中一些操作比较简单的镜像使用Dockerile来创建，而像
法与使用。
Tomcast、Weblogic），以及一些常用应用（包括LAMP和CMS）。包括Docker镜像的构建方
Chayteru
本章会继续展示使用前一章介绍的两种方法（通过dockercommit命令，以及通过
首先，创建一个apache_ubuntu工作目录，
这里将展示笔者使用 Dockerile来创建带Apache 服务的 Docker 镜像的具体过程。
Apache是目前世界使用排名第一的 Web 服务器软件。由于其良好的跨平台和安全性，
通过本章的介绍，用户将可以根据自己的需求轻松定制Web服务或Web应用镜像。
本章将重点介绍如何使用Docker来运行常见的Web服务器（包括Apache、Nginx、
Web服务（Web Service）和Web应用（Web App）是目前互联网领域的热门技术。
Apache
第11章
Web服务器与应用
在其中创建Dockerfile文件、run.sh文
---
## Page 95
这个 sample站点的内容很简单，就输出一句话HelloDocker!。在sample目录
EXPOSE80
CMD ["/run.sh"]
WORKDIR/app
ENV
ENV
ENV
ENV
ENV
#设置apache相关的一些变量，在容器启动的时候可以使用-e参数替代
COPYsample//app
/app/var/www/html
RUNmkdir-p/var/lock/apache2&&mkdir-p/app &&rm-fr/var/www/html &α1n-S
#添加一个示例的Web站点，
RUNchmod755/*.sh
ADD run.sh/run.sh
#添加我们的脚本，并设置权限，这会覆盖之前放在这个位置的脚本
你的应用程序发生不可思议的效果哦
#注意这里要更改系统的时区设置，
RUN echo "Asia/Shanghai">
安装
ENV DEBIAN_FRONTEND noninteractive
#设置环境变量，
#创建者的基本信息
#设置继承自我们创建的sshd镜像
FROM sshd:dockerfile
下面是Dockerfile的内容和各个部分的说明：
国
$mkdir sample
/var/www/html目录下面
touch
mkdir
APACHE_DOCUMENTROOT/var/www
APACHE_SERVERALIAS docker.localhost
APACHE_SERVERNAME localhost
APACHE_SERVERADMIN admin@localhost
APACHE_LoCK_DIR /var/lock/apache2
APACHE_RUN_DIR/var/run/apache2
APACHE_PID_FILE/var/run/apache2.pid
APACHE_LOG_DIR/var/log/apache2
APACHE RUN_GROUP wWW-data
APACHE_RUN_USER wWW-data
rm-rf/var/lib/apt/lists/*
Dockerfile run.sh
apache_ubuntu && cd apache_ubuntu
-yq installapache2&&
所有操作都是非交互式的
，删掉默认安装在apache文件夹下面的文件，并将我们添加的示例用软链接链
-f
：因为在Web应用中经常会用到时区这个系统变量，默认的ubuntu会让
noninteractivetzdata
/etc/timezone
&&
第11章
Web服务器与应用
---
## Page 96
创建apache:ubuntu镜像
下创建index.html文件，内容为：
82
Current default time zone:'Asia/Shanghai
使用docker build命令创建apache:ubuntu镜像，注意命令最后的“.”"：
Step 1:MAINTAINER waitfish from dockerpool.com(PI:EMAIL)
1 directory,3files
noninteractive tzdata
Step4:RUNecho
Step
Step0
Sending build
Stree
此时，apache_ubuntu目录下面的文件结构为：
exec apache2
#!/bin/bash
$cat run.sh
run.sh脚本内容也很简单，只是启动Apache服务：
Step 2:ENV DEBIAN_FRONTEND noninteractive
Hello,Docker!