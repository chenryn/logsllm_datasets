Memcached stats 命令  
Memcached stats items 命令  
Memcached stats slabs 命令  
Memcached stats sizes 命令  
Memcached flush_all 命令
这里我们重点介绍三种命令，因为我们的攻击流程中将会涉及了这三种方式。
第一个是上传有效载荷Memcached set 命令
Memcached set 命令用于将 **value(数据值)** 存储在指定的 **key(键)** 中。
如果set的key已经存在，该命令可以更新该key所对应的原来的数据，也就是实现更新的作用。
set 命令的基本语法格式如下：
    set key flags exptime bytes [noreply] 
    value 
参数说明如下：
key：键值 key-value 结构中的 key，用于查找缓存值。  
flags：可以包括键值对的整型参数，客户机使用它存储关于键值对的额外信息 。  
exptime：在缓存中保存键值对的时间长度（以秒为单位，0 表示永远）  
bytes：在缓存中存储的字节数  
noreply（可选）： 该参数告知服务器不需要返回数据  
value：存储的值（始终位于第二行）（可直接理解为key-value结构中的value）
第二个反射有效载荷Memcached get 命令
Memcached get 命令获取存储在 **key(键)** 中的 **value(数据值)** ，如果 key 不存在，则返回空。
get 命令的基本语法格式如下：
    get key
多个 key 使用空格隔开，如下:
    get key1 key2 key3
参数说明如下：
key：键值 key-value 结构中的 key，用于查找缓存值。
第三个是退出远程服务器。quit\r\n命令即可，没有任何参数，注意要有回车换行。
#### 六、攻击步骤
##### 自动化上传有效载荷
到了这里，我们接下来就是如何利用这个过程实现DRDoS反射拒绝服务攻击。
思路是这样的：我们先批量上传指定数据到远程开放服务器Memcached上面，然后我们再去Memcached服务器请求查询数据上一步存储的数据，（这一步很关键，我们只能利用UDP协议进行反射，后面说明一下为什么。）这样就可以将数据通过Memcached服务器反射到目标受害机器上了。这里我们可以自己手动编写程序实现批量自动化上传有效载荷到远程服务器，等待上传完了我们就可以进行UDP反射攻击了。
这里我用python脚本完成payload数据上传。
代码就不公布了，防止非法利用。直接输出测试结果。
输出结果
##### 自动化反射有效载荷
这里得注意一下，上面的自动化上传我使用了TCP协议发送数据包，反射我必须使用UDP协议。因为只有UDP协议是基于无连接的，这样我们直接发送数据到目标服务器，不需要进行三次握手。同时服务器接收方也无法验证客户源IP，因此这个过程我们才可以利用UDP伪造源地址，实现反射DRDoS攻击过程。
利用socket和scapy库开发，采用多线程进行循环请求。（特别注意UDP协议使用的时候，每个操作命令必须都要添加数据包结构要加头部8字节标志位，
"\x00\x00\x00\x00\x00\x01\x00\x00"）
这里使用python脚本完成反射攻击。
代码就不公布了，防止非法利用。直接输出测试结果。
输出，可以实现
测试wireshark抓包
这里不妨可以进行一个大概理论计算
比如单台服务器我们虽然只发送的攻击指令只有二十个字节数据，但却可以返回1M数据。1M/20=5W（5万倍放大率），这可谓四两拨千斤。假设理想状况下我们现在手里有50W可用机器，那么我们的DRDoS理论值数值将会达到约50W*1M=500GB。大家想想这个是多么恐怖的带宽和数据。现在目前国内能够抵御短时间发起这么大的DDoS攻击的，几乎没有。比如去年攻击阿里云超过14小时,峰值流量达到453.8G。而DRDos可以只需要一分钟就能实现高达500G流量，这将是多么可怕的事情，多大的灾难。
#### 七、总结体会
关于这项DRDoS技术经过几天摸索研究也算已经了解清楚了，但是测试中发现有的网络环境里面会被一些路由器纠正源地址，使得反射攻击失败。究其原因是因为其增加的uRPF机制，（Unicast
Reverse Path
Forwarding是一种单播反向路由查找技术，用于防止基于源地址欺骗的网络攻击行为。）重新修复了UDP源地址伪造。不过有些环境中没有这种机制的，那么我们就可以利用此方法实现攻击。在这里分享给大家，希望可以有人继续深入分析和钻研，其中涉及利用的思路和技巧也可学习学习。比如说利用其免费的互联网存储资源，将你的数据源进行分布式存储，当做你的分布式私密云盘。
友情提醒：以上仅做技术研究，如有恶意利用，发起攻击，将自负法律后果
#### 八、参考学习
[https://baike.baidu.com/item/%E5%88%86%E5%B8%83%E5%BC%8F%E6%8B%92%E7%BB%9D%E6%9C%8D
%E5%8A%A1%E6%94%BB%E5%87%BB/3802159?fr=aladdin&fromid=444572&fromtitle=DDOS](https://baike.baidu.com/item/%E5%88%86%E5%B8%83%E5%BC%8F%E6%8B%92%E7%BB%9D%E6%9C%8D
%E5%8A%A1%E6%94%BB%E5%87%BB/3802159?fr=aladdin&fromid=444572&fromtitle=DDOS)
* * *