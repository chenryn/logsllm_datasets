# APT攻击利用Adobe Flash 0day漏洞分析（CVE-2018-15982）

## 译文声明
本文为翻译文章，原作者来自gigamon.com，原文发布于atr-blog.gigamon.com。译文仅供参考，具体内容和含义以原文为准。

## 概述
Gigamon Applied Threat Research (ATR) 确认了一次针对Adobe Flash中0day漏洞的恶意利用。该漏洞（CVE-2018-15982）允许攻击者通过精心制作的Flash对象在受害者的计算机上执行代码，从而获取对系统命令行的访问权限。恶意文档从一个乌克兰IP地址提交到VirusTotal，并伪装成一份提交给俄罗斯国家医疗诊所的求职申请。本文将详细分析该恶意文档（22.docx），并探讨其技术细节及与已知恶意活动之间的关联，以便更好地识别和检测类似攻击。
Gigamon ATR已于2018年11月29日向Adobe产品安全事件响应小组(PSIRT)报告了这一漏洞。Adobe迅速采取行动并与Gigamon ATR合作复现了该漏洞，在2018年12月5日发布了针对此漏洞的安全补丁，并将其编号为CVE-2018-15982。

## 目标分析
“22.docx”是一份用俄语编写的文档，伪装成俄罗斯国家医疗诊所的求职申请。文档包含七页个人信息，通常出现在求职申请中。创建者名为tvkisdsy。我们对文档页眉中的LOGO进行了分析，确认该文档是提交给位于莫斯科的俄罗斯国家医疗保健系统的“2号诊所”。尽管诱饵文档看似具有高度针对性，但根据先前观察到的其他鱼叉式网络钓鱼攻击案例，我们无法确定此次恶意活动的具体目标。

## 攻击技术概述
此次恶意活动采用的技术相对简单：文档头部嵌入了一个Flash ActiveX控件（如图所示），当文档打开时，该控件会触发Office中的Flash播放器被恶意利用。随后，将执行一系列恶意命令，尝试提取并运行文档附带的有效载荷(Payload)。

## 漏洞利用
尽管业界已在最新版本的Web浏览器中逐步淘汰Flash，Microsoft Office仍能加载和执行Flash内容。因此，攻击者利用此类0day漏洞发动攻击是有价值的。在此特定情况下，Flash漏洞利用工具完全封装在文档内，支持32位和64位系统（包括相应的ShellCode）。包含Flash文件的容器中存在一个硬编码路径“C:run.de.swf”，可能代表武器化阶段的文件路径。Flash文件和ShellCode未使用任何形式的远程调用、分阶段、模糊处理或反分析机制。两个ShellCode均使用相同的“cmd.exe”来执行恶意命令：
```
C:WINDOWSsystem32cmd.exe /c set path=%ProgramFiles(x86)%WinRAR;C:Program FilesWinRAR; && cd /d %~dp0 & rar.exe e -o+ -r -inul*.rarscan042.jpg & rar.exe e -o+ -r -inulscan042.jpg backup.exe & backup.exe
```
上述命令首先解压缩同一目录下的任意.rar文档，然后从scan042.jpg中解压出backup.exe文件，最后执行backup.exe文件，即最终Payload。测试表明，只需打开恶意文档即可使漏洞利用代码和最终Payload运行，用户无需事先解压缩诱饵文档。

## Payload
我们没有直接监测到此次恶意活动对受害者的影响。然而，基于提交的细节、预期行为、时间接近程度和文件名相似性，我们认为相关联的Payload是Scout恶意软件的一个变种，置信度较高。最初在scan042.jpg中的Payload文件名为backup.exe，是一个Windows可执行文件，伪装成“NVIDIA控制面板”，并带有匹配的图标和元数据信息。该可执行文件受到VMProtect保护，防止逆向工程和安全分析。执行时，Payload会收集系统信息、建立持久性并通过HTTP POST与远程服务器通信。具体行为如下：
1. 枚举系统信息（利用WMI查询本地进行枚举）
2. 通过计划任务增加持久性：
   - 向backup.exe添加填充数据
   - 将填充二进制文件放置在%LOCALAPPDATA%\NVIDIA\ControlPanel\NVIDIAControlPanel.exe位置
   - 设置在用户登录时启动
3. 使用HTTP POST方式发送Base64编码的内容到“dotted-quad”：
   - 硬编码命令与控制地址：188.241.58[.]68
   - 硬编码User-Agent字符串：Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36
   - 在网络回调之间休眠5分钟

下图展示了恶意软件创建的任务计划，确保重启后具有持久性；另一张图则展示了恶意软件执行的网络回调示例：

Backup.exe签署了一份合法但已被撤销的证书，颁发给IKB SERVICE UK LTD，序列号为57:5F:C1:C6:BC:47:F3:CF:AB:90:0C:6B:C1:8A:EF:6D，指纹为D8:7A:A2:1D:AB:22:C2:F1:23:26:0B:1D:7A:31:89:3C:75:66:B0:89。有效的证书往往增强文件可信度，可能会欺骗反病毒和自动检测系统。

## 元数据分析
通过对VirusTotal样本的手动分析，我们发现该样本是0day漏洞利用文档。我们在收到文档后的两小时内将其提交给了Adobe。通过分析22.docx中保存的元数据，我们得出以下结论：
- 附加文档：利用文档中的创建者字段，我们短时间内找到了另一个由同一国家提交的文档（33.docx）。第二个文件几乎包含相同内容，包括CVE-2018-15982的利用。第二份文件还包含一位名为“Кирдакова”（Kirdakova）的修改者，这是一个常见的俄罗斯姓氏。此外，公司字段显示为“Uito”。
- 相关Payload：识别出恶意文档可能使用的文件名后，我们在VirusTotal中筛选了特定范围内的文件（通过提交者ID、国家和时间范围）。将压缩包附加到图像是一种常见的恶意技术，WinRAR仍然可以识别并解压缩这样的压缩包。
- 相关恶意二进制文件：通过分析已有样本，我们获得了样本证书，并识别出另一个更早创建的文件（c2a827cd8aefa54fb2f91b0f767292d94f5ef7dde9c29090e6be21d34efd1449.exe）。

## 关于HackingTeam
HackingTeam是一家意大利安全公司，销售远程访问和监控工具及相关服务。该公司在2015年遭到黑客入侵，内部数据（如电子邮件和源代码）被泄露，导致世界各地的攻击者开始利用这些工具实施恶意活动。本次漏洞利用工具较为可靠且针对特定未修复漏洞。根据漏洞利用过程和Payload的使用情况，我们发现此次攻击所采用的技术与HackingTeam使用的非常相似。共同点包括：
1. 都使用了VMProtect进行保护。
2. 二者都使用经过数字签名的Payload和伪造的元数据，伪装成合法应用程序。
3. 在ESET发布关于HackingTeam和Callisto Group恶意活动报告后不到一周，此次恶意活动所使用的证书就已经创建。尽管不能确定，但该证书可能是之前Callisto Group恶意活动的后续。
4. 我们分析的Scout Payload与ESET分析的威胁使用了相同的内容填充二进制文件。
5. 多个反病毒产品都将Payload检测为CrisisHT（HackingTeam）。
6. 恶意文档中使用了类似的0day攻击技术，特别是嵌入在Microsoft Office文档中的恶意代码。这些漏洞利用程序同时包含支持32位和64位的漏洞利用工具以及ShellCode。

由于以下原因，我们未能确切地将此次恶意活动与HackingTeam联系起来：
1. 恶意人员可以轻易模仿并改写泄露的源代码，创建新的HackingTeam TTP工具。
2. 该样本中缺少远程包含或额外Web请求漏洞利用组件，而HackingTeam早在2013年就使用了这些组件。

鉴于目前有限的证据，我们难以准确判断此次恶意活动的幕后主使。无论是HackingTeam还是模仿者所为，重要的是有效0day漏洞仍在广泛用于针对特定目标的攻击之中。

## 附录：样本信息
原文链接：[此处插入原文链接]