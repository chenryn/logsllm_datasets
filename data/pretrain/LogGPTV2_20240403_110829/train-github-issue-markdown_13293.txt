### Race Condition in `video_player` Plugin Preventing Video Display

#### Issue Description
A race condition exists in the `video_player` plugin code, which can prevent videos from being displayed within a Flutter widget.

#### Steps to Reproduce

1. **Download a Sample Video:**
   - Download a video file to your phone from the following URL: 
     - [Sample Video](http://www.sample-videos.com/video/mp4/720/big_buck_bunny_720p_20mb.mp4)

2. **Modify the `image_picker` Sample App:**
   - Edit the `main.dart` file of the `image_picker` sample app (found at [this GitHub link](https://github.com/flutter/plugins/blob/master/packages/image_picker/example/lib/main.dart#L50)).
   - Add the following line after `if (file != null && mounted) {`:
     ```dart
     print(file);
     ```

3. **Run the `image_picker` Sample App:**
   - Run the modified `image_picker` sample app.
   - Enable read permissions from external storage.
   - Select the downloaded video from the gallery and note its path. The path will look something like:
     ```
     /storage/emulated/0/Download/big_buck_bunny_720p_20mb.mp4
     ```
   - If necessary, remove the `file://` prefix from the path.

4. **Replace the `main.dart` Content:**
   - Replace the content of `main.dart` with the following code, which is based on the `video_player` sample app:

   ```dart
   import 'dart:io';
   import 'package:video_player/video_player.dart';
   import 'package:flutter/material.dart';

   void main() => runApp(VideoApp());

   class VideoApp extends StatefulWidget {
     @override
     _VideoAppState createState() => _VideoAppState();
   }

   class _VideoAppState extends State<VideoApp> {
     VideoPlayerController _controller;

     @override
     void initState() {
       super.initState();
       try {
         _controller = VideoPlayerController.file(
           File('/storage/emulated/0/Download/big_buck_bunny_720p_20mb.mp4'),
         )..addListener(() {
             setState(() {});
           })..initialize().then((_) {
               setState(() {});
             }).catchError((error) {
               print('Unexpected error: $error');
             });
         print('controller is set');
       } catch (e) {
         print('Unexpected error: $e');
       }
     }

     @override
     Widget build(BuildContext context) {
       try {
         print('entering build. Needs _controller $_controller');
         return MaterialApp(
           title: 'Video Demo',
           home: Scaffold(
             body: Center(
               child: _controller.value.initialized
                   ? AspectRatio(
                       aspectRatio: _controller.value.aspectRatio,
                       child: VideoPlayer(_controller),
                     )
                   : Container(),
             ),
             floatingActionButton: FloatingActionButton(
               onPressed: _controller.value.isPlaying
                   ? _controller.pause
                   : _controller.play,
               child: Icon(
                 _controller.value.isPlaying ? Icons.pause : Icons.play_arrow,
               ),
             ),
           ),
         );
       } catch (e) {
         print('Unexpected error: $e');
       }
     }
   }
   ```

5. **Test the Application:**
   - Open and close the app multiple times until the video no longer displays. You should see a blank screen.

#### Expected vs. Actual Behavior
- **Buggy App:**
  ![Buggy App](https://user-images.githubusercontent.com/1159610/43369080-7193f5fa-935f-11e8-8b68-f689a061317a.png)
- **Expected Behavior:**
  ![Expected Behavior](https://user-images.githubusercontent.com/1159610/43369083-7b986f86-935f-11e8-9a5a-a3baab00cd36.png)

#### Logs
- **When the Video Works:**
  ```log
  I/flutter ( 8147): controller listener: VideoPlayerController#fff7e(VideoPlayerValue(duration: 0:01:57.312000, size: Size(1280.0, 720.0), position: 0:00:00.000000, buffered: [], isPlaying: false, isLooping: false, isBuffering: false, volume: 1.0, errorDescription: null, rotationDegrees: 0))
  I/flutter ( 8147): initialized listener: VideoPlayerController#fff7e(VideoPlayerValue(duration: 0:01:57.312000, size: Size(1280.0, 720.0), position: 0:00:00.000000, buffered: [], isPlaying: false, isLooping: false, isBuffering: false, volume: 1.0, errorDescription: null, rotationDegrees: 0))
  ```

- **When the Video Does Not Work:**
  ```log
  I/flutter (10928): controller listener: VideoPlayerController#0235e(VideoPlayerValue(duration: null, size: null, position: 0:00:00.000000, buffered: [], isPlaying: false, isLooping: false, isBuffering: false, volume: 1.0, errorDescription: null, rotationDegrees: null))
  ```

#### Root Cause
The `initialized` event is not always received by the Dart code. This event is sent from the ExoPlayer to the Java code, and then to the Dart world via an Event Channel. However, it is possible that the `init` event from the ExoPlayer is fired before the Dart code has a chance to listen to any broadcasts from the Java code (i.e., `eventSink` is null in [this part of the code](https://github.com/flutter/plugins/blob/master/packages/video_player/android/src/main/java/io/flutter/plugins/videoplayer/VideoPlayerPlugin.java#L213)). In such cases, the `init` event is not fired, and the video cannot be played or displayed.

#### Environment Information
```sh
flutter doctor -v
[✓] Flutter (Channel master, v0.5.8-pre.152, on Mac OS X 10.12.6 16G1510, locale fr-FR)
    • Flutter version 0.5.8-pre.152 at /Users/rodrigo/Libs/flutter
    • Framework revision 8b05629658 (3 days ago), 2018-07-26 19:12:04 -0700
    • Engine revision 6f7bdc9fab
    • Dart version 2.0.0-dev.69.3.flutter-937ee2e8ca
[✓] Android toolchain - develop for Android devices (Android SDK 27.0.3)
    • Android SDK at /Users/rodrigo/Library/Android/sdk
    • Android NDK location not configured (optional; useful for native profiling support)
    • Platform android-27, build-tools 27.0.3
    • Java binary at: /Applications/Android Studio.app/Contents/jre/jdk/Contents/Home/bin/java
    • Java version OpenJDK Runtime Environment (build 1.8.0_152-release-1024-b01)
    • All Android licenses accepted.
[✓] iOS toolchain - develop for iOS devices (Xcode 9.2)
    • Xcode at /Applications/Xcode.app/Contents/Developer
    • Xcode 9.2, Build version 9C40b
    • ios-deploy 1.9.2
    • CocoaPods version 1.5.3
[✓] Android Studio (version 3.1)
    • Android Studio at /Applications/Android Studio.app/Contents
    • Flutter plugin version 26.0.1
    • Dart plugin version 173.4700
    • Java version OpenJDK Runtime Environment (build 1.8.0_152-release-1024-b01)
[!] IntelliJ IDEA Community Edition (version 2018.1.1)
    • IntelliJ at /Applications/IntelliJ IDEA CE.app
    ✗ Flutter plugin not installed; this adds Flutter specific functionality.
    ✗ Dart plugin not installed; this adds Dart specific functionality.
    • For information about installing plugins, see
      https://flutter.io/intellij-setup/#installing-the-plugins
[!] VS Code (version 1.25.1)
    • VS Code at /Applications/Visual Studio Code.app/Contents
    • Flutter extension not installed; install from
      https://marketplace.visualstudio.com/items?itemName=Dart-Code.flutter
[✓] Connected devices (1 available)
    • SM G920F • 02157df2bc245b2a • android-arm64 • Android 7.0 (API 24)
! Doctor found issues in 2 categories.
```

This optimized text provides a clear, step-by-step guide to reproducing the issue, along with detailed logs and a root cause analysis.