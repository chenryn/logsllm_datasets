P2P and malicious connections reveal no diurnal patterns. Within Web traﬃc
however, unsuccessful connection attempts account constantly for around 17.5%
during all day, with exception of a drop to 10% during night time hours (2AM).
We have no explanation for this phenomena other than HTTP connections are
very rare in absolute number during night hours, which makes the statistical
analysis more sensitive to behavior of individual applications or user groups.
Non-established connections: Non-established TCP connections have been
further divided into connection attempts with one SYN packet only, attempts
with direct RST reply and asymmetrical traﬃc (Fig.3). Due to transit traﬃc and
hot-potato routing, 13% of the connections are asymmetrically routed. Naturally,
it is not possible to observe a three-way handshake in this case.
Fig. 3. Breakdown of non-established TCP connections
None of the traﬃc classes exhibits any signiﬁcant diurnal pattern for non-
established TCP connections. However, Fig.3 clearly highlights major diﬀerences
between all three traﬃc classes. The already small fraction of non-established
Web traﬃc (16.3% of all traﬃc) is mainly explained by asymmetrical traﬃc, and
real unsuccessful connection attempts are very rare. Malicious traﬃc consists
to a large degree of single SYN packet ﬂows only. Single SYN ﬂows are also
dominating non-established P2P connections. While such connection attempts
accounted for 71% in April, their fraction increase to 79% in November. This
trend is also responsible for the increase of non-established P2P connections
observed in Fig.2. Even if the high number of unsuccessful connection attempts
within P2P traﬃc has been observed earlier [10], it is interesting to note that
there is a clear trend in the fractions of one-SYN connections within P2P ﬂows.
The fraction increased by 23% (from 35% to 43%) within a period of 8 months.
198
W. John, S. Tafvelin, and T. Olovsson
Established Connections: Finally, established connections are broken down
according to their termination behavior in Fig.4. Besides the proper closing ap-
proaches with one FIN in each direction or only one RST packet, as prescribed in
the TCP standard, two unspeciﬁed termination behaviors have been observed.
Connections closed by FIN, followed by an additional RST packet have been seen
in direction of the initial SYN (typically the client) and the response (server).
Finally, a number of connections were not closed during the measurement inter-
val. The larger fraction of unclosed P2P connections is explained by the longer
duration of P2P ﬂows compared to Web traﬃc, as observed by Mori [7].
Fig. 4. Breakdown of established TCP connections
As for non-established connections, termination of Web connections neither
shows signiﬁcant trends nor diurnal patterns. HTTP connections are closed prop-
erly in 75% of all cases. Another 15% are closed by RST packets, mainly due
to irregular web-server and browser implementations as noted by Arlitt [13].
FIN+RST behavior as well as unclosed connections (which corresponds to longer
ﬂows) are uncommon within Web traﬃc.
Even if there are no diurnal pattern observable, Fig. 4 indicates a signiﬁcant
change in termination behavior of P2P connections from spring to fall 2006.
In April, only slightly less than half of the P2P connections have been closed
properly with two FINs. As much as 20% of established P2P connections have
been terminated with FIN plus an additional RST packet send by the server
(or responding peer). A couple of popular hosts inside a student network have
been identiﬁed as main source of this behavior. A commented text in the source
code of a popular P2P client indicates that connections are closed with RST
deliberately to avoid the TCP TIME WAIT state in order to save CPU and
memory overhead. In fall however, the fraction of FIN+RST terminations by
the responder was reduced to around 8%, compensated by an increase in both
valid TCP terminations, 2xFIN and single RST. Due to missing payload data,
it was not possible to diﬀerentiate between diﬀerent P2P software and version
numbers. We suspect, that either the developers of the P2P application ﬁxed this
non-standard behavior in updated versions of the software, or the misbehaving
P2P software lost popularity and was replaced by better behaving software by
the users during 2006. However, the breakdown in Fig.4 shows that P2P traﬃc is
mainly responsible for the large number of RST packets seen in todays networks.
Trends and Diﬀerences in Connection-Behavior within Classes
199
5.2 Diﬀerences in Option Deployment
Finally, deployment of the most popular TCP options during connection estab-
lished has been investigated for P2P and Web traﬃc (Table 1). For each of the
four most popular TCP options, three diﬀerent possibilities are distinguished: es-
tablished - the option usage was successfully negotiated in SYN and SYN/ACK
packets; neglected - the option usage was proposed in the SYN, but not included
in the SYN/ACK; and none - the option was not seen in the connection.
Table 1. Diﬀerences in TCP Option Deployment
(a) TCP Options in P2P Conn.
TS
MSS SACK WS
99.9% 91.0% 14.9% 8.8%
0.1% 6.5% 0.6% 1.0%
0.0% 2.5% 84.5% 90.2%
estab.
neglected
none
(b) TCP Options in HTTP Conn.
TS
MSS SACK WS
99.6% 65.7% 16.0% 13.4%
0.4% 27.9% 4.3% 4.3%
0.0% 6.4% 79.7% 82.3%
estab.
neglected
none
Option usage turned out to be remarkably constant, with neither longitudinal
nor diurnal trends. However, it is surprising to ﬁnd such notable diﬀerences
in option usage between traﬃc classes, considering that protocol stacks in the
operating system, and not applications, decide about option usage. The MSS
option is almost fully deployed, which agrees with the fact that the MSS option
is set by default in all common operating systems. The SACK permitted option,
in fact also a default option, is commonly proposed by initiating hosts, but is in
28% of the Web connections neglected. Interestingly, this fraction is signiﬁcantly
smaller in the case of P2P traﬃc, with only 6.5% neglecting SACK support.
While Linux hosts have the Window Scale (WS) and Timestamp (TS) op-
tions enabled by default, Windows XP does not actively use the options, but
replies with WS and TS when receiving SYN packets with the particular option.
This policy is well reﬂected by P2P connections, where WS and TS are rarely
neglected, but either established or not used at all. HTTP connections do not
really reﬂect this assumption, with 4.3% of WS and TS requests neglected by
servers. However, WS and TS are established more often within Web traﬃc.
We suspect that the usage of WS and TS options within P2P traﬃc some-
what reﬂects the proportions of Linux (WS and TS enabled by default) and
Windows systems (WS and TS disabled actively, but responding to request) on
the links measured. The diﬀerences in option deployment for Web traﬃc how-
ever stem from a diﬀering communication nature. While Web traﬃc represents
classical client server communication, with one dedicated server involved, P2P
represents a loose network of regular user workstations. Web-servers, as a central
element, can thereby inﬂuence the behavior of larger numbers of connections.
This suspicion is further conﬁrmed by the fact that a majority of the HTTP
connections neglecting usage of SACK are directed to less than 100 web-servers,
which consistently do not respond with SACK options. Such central elements
do not exist in P2P overlay networks. Furthermore, web-servers are more likely
to be customized or optimized due to their speciﬁc task, whereas user worksta-
tions usually keep default settings of the current operating system. Some active
200
W. John, S. Tafvelin, and T. Olovsson
measurement samples taken in October 2007 proved that popular web-servers,
like google, yahoo and thePirateBay, still neglect SACK, WS or TS options.
6 Summary and Conclusions
In order to study trends and diﬀerences within the main traﬃc classes on the
Internet, aggregated backbone traﬃc has been collected during two campaigns
in spring and fall 2006 [11]. The collected packet level data has then been sum-
marized on ﬂow level. The resulting connections have ﬁnally been classiﬁed into
P2P, Web and malicious traﬃc, using a connection pattern classiﬁcation method
[9]. An analysis revealed that overall traﬃc volumes are increasing for both TCP
and UDP traﬃc, with highest activities at evenings. On diurnal basis, P2P and
HTTP traﬃc exhibit diﬀerent peak times. P2P traﬃc was found to be clearly
dominating with 90% of the transfer volumes, especially during evening and
night times. In contrast, HTTP traﬃc has its main activities (9% of the data-
volumes) during oﬃce hours. Similar diurnal patterns have been observed in
terms of connection numbers, even if P2P connections are not as dominating
as in the case of data volumes. This indicates that P2P connections typically
carry more data than Web traﬃc. Malicious and attack traﬃc is responsible
for a substantial part of all TCP connections and UDP ﬂows, but plays a mi-
nor role in terms of data volumes since it typically consists of 1-packet ﬂows
only. It was interesting to observe that the fraction of malicious TCP and UDP
ﬂows remained constant in absolute numbers both on diurnal and longitudinal
basis, even though traﬃc volumes generally increased. This shows that mali-
cious traﬃc (e.g. scanning attacks) forms a constant background noise on the
Internet.
In terms of connection signaling behavior, major diﬀerences between the three
traﬃc classes have been highlighted. The number of unsuccessful P2P connection
attempts, which already dominated the P2P connection breakdown in spring,
was shown to have increased further until fall. We conclude, that the large frac-
tion (43%) of 1-packet ﬂows on one hand and the large average data amounts per
P2P connection on the other hand indicate a pronounced ’elephants and mice
phenomenon’ (Pareto principle) [7] within P2P ﬂow sizes. Regarding termina-
tion behavior, P2P connections exhibit a clear trend towards higher fractions of
proper closings in fall. HTTP connections on the other hand appear to behave
comparable well according to speciﬁcation at all times.
Finally, also TCP option deployment was shown to diﬀer signiﬁcantly between
P2P and Web traﬃc. While P2P traﬃc rather reﬂects an expected behavior con-
sidering the default setting in popular operating systems, HTTP shows artifacts
of the traditional client server pattern, with some dedicated web-servers neglect-
ing negotiation for certain TCP options. This is especially true for the SACK
option. We conclude that even though SACK is deployed by almost all P2P
hosts and web-clients, a number of web-servers still neglect its usage. It is un-
clear to us, however, for which reasons web-server software or administrators
would choose not to take advantage of certain TCP features, like SACK.
Trends and Diﬀerences in Connection-Behavior within Classes
201
In the presented study, diﬀerences between traﬃc classes have been found in all
aspects discussed, even if not always expected. The results provide researchers,
developers and practitioners with novel, detailed knowledge about trends and
inﬂuences of diﬀerent traﬃc classes in current Internet traﬃc. The data analyzed
was collected on a highly aggregated backbone link during a substantial time
period, thus reﬂecting contemporary traﬃc behavior on one part of the Internet.
Besides the general need of the networking and network security community to
understand the nature of network traﬃc, information about behavior diﬀerences
as seen ’in the wild’ can be important when developing network applications,
protocols or even network infrastructure. Furthermore, the results form valuable
input for future simulation models.
References
[1] Moore, A.W., Papagiannaki, K.: Toward the Accurate Identiﬁcation of Network
Applications. In: Dovrolis, C. (ed.) PAM 2005. LNCS, vol. 3431, pp. 41–54.
Springer, Heidelberg (2005)
[2] Sen, S., Spatscheck, O., Wang, D.: Accurate, scalable in-network identiﬁcation of
p2p traﬃc using application signatures. In: WWW 2004: Proceedings of the 13th
Int. World Wide Web Conference, New York, USA (2004)
[3] Crotti, M., Dusi, M., Gringoli, F., Salgarelli, L.: Traﬃc classiﬁcation through
simple statistical ﬁngerprinting. Computer Communication Review 37 (2007)
[4] Karagiannis, T., Broido, A., Faloutsos, M., Claﬀy, K.: Transport layer identiﬁ-
cation of p2p traﬃc. In: IMC 2004: Proceedings of the 4th ACM SIGCOMM
conference on Internet measurement, Taormina, Sicily, Italy (2004)
[5] Gerber, A., Houle, J., Nguyen, H., Roughan, M., Sen, S.: P2p the gorilla in the
cable. National Cable and Telecommunications Association (2003)
[6] Sen, S., Jia, W.: Analyzing peer-to-peer traﬃc across large networks. IEEE/ACM
Transactions on Networking 12 (2004)
[7] Mori, T., Uchida, M., Goto, S.: Flow analysis of internet traﬃc: World wide web
versus peer-to-peer. Systems and Computers in Japan 36 (2005)
[8] Perenyi, M., Trang Dinh, D., Geﬀerth, A., Molnar, S.: Identiﬁcation and analysis
of peer-to-peer traﬃc. Journal of Communications 1 (2006)
[9] John, W., Tafvelin, S.: Heuristics to classiﬁy internet backbone traﬃc based on
connection patterns. In: ICOIN 2008: Proceedings of the 22nd International Con-
ference on Information Networking, Busan, Korea (2008)
[10] Plissonneau, L., Costeux, J.L., Brown, P.: Analysis of peer-to-peer traﬃc on adsl.
In: Dovrolis, C. (ed.) PAM 2005. LNCS, vol. 3431, pp. 69–82. Springer, Heidelberg
(2005)
[11] John, W., Tafvelin, S.: (SUNET OC 192 Traces (collection)),
http://imdc.datcat.org/collection/1-04L9-9=SUNET+OC+192+Traces
[12] John, W., Tafvelin, S.: Analysis of internet backbone traﬃc and header anomalies
observed. In: IMC 2007: Proceedings of the 7th ACM SIGCOMM conference on
Internet measurement, San Diego, CA, USA (2007)
[13] Arlitt, M., Williamson, C.: An analysis of tcp reset behaviour on the internet.
Computer Communication Review 35 (2005)