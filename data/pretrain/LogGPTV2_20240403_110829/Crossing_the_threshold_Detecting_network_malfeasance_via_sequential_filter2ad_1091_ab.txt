### Detecting Bots on a Network: An Insight

External scanners, which are more likely to be malicious than benign, often exhibit certain behaviors that can be used to detect their presence. For example, they tend to contact IP addresses sequentially and generate a high number of failure events. This behavior can be leveraged to develop an algorithm that distinguishes between benign and malicious activities.

#### Hypothesis Testing for Bot Detection

A statistical test can be employed to observe the success or failure of events in the network environment. Each event moves a score towards one of two thresholds: one confirming the null hypothesis (benign activity) and another confirming the alternative hypothesis (malicious activity). After a series of events, the score typically crosses one of these thresholds, leading to a decision. For instance, if the score crosses 0.8, it indicates strong evidence for the alternative hypothesis (malicious activity).

Similar ideas have been applied to detect the propagation of worms [16, 20, 29] and to identify node replication in opaque traffic [30], as well as to detect botnets [12].

### Data Collection Infrastructure

To aid in our understanding and development of an algorithm for detecting bots, we collected and analyzed DNS traffic from several servers at our campus over a week in March 2012. The monitored name servers served the entire wireless network and several academic departments, handling approximately 76,000 internal clients on weekdays and 50,000 clients on weekends. These servers acted as the primary name servers for the network, including student residences and upstream ISPs.

### DNS Monitoring and Data Summary

Our collection infrastructure, shown in Figure 1, includes a DNS trace collector and dissector. The DNS servers sit behind a load balancer, and all wireless clients using the campus network are assigned to one of these name servers. DHCP leases on this network are bound to the client's MAC address and remain in effect for at least a few weeks. The DNS traffic from these servers is processed and anonymized using a custom engine.

We chose three consecutive days (March 18-20) for analysis. Table I summarizes the key statistics. The increase in traffic on March 19th corresponds to the start of the work week. Approximately 3% of all DNS queries result in non-existent (NX) responses.

| Date       | # of DNS Clients | # of DNS Queries | # of NX Responses | # of Distinct Domains | # of Distinct Zones | # of Distinct NX Domains | # of Distinct NX Zones |
|------------|------------------|------------------|-------------------|-----------------------|---------------------|--------------------------|------------------------|
| March 18   | 49.7K            | 37.3M            | 1.7M              | 373.4K                | 1.3M                | 190.4K                   | 15.3K                  |
| March 19   | 75.4K            | 61.2M            | 1.8M              | 528.2K                | 1.5M                | 216.2K                   | 22.1K                  |
| March 20   | 77.1K            | 60.3M            | 1.8M              | 566.4K                | 1.8M                | 220.4K                   | 24.2K                  |

### Classification Based on Domain Name Features

Existing techniques focus on properties of algorithmically generated domain names (AGDs) to identify and cluster malicious domains. For example, Antonakakis et al. [3] and Yadav et al. [32] used the length of a domain name as a feature to distinguish malicious domains from benign ones. Figures 2 and 3 show the distribution of domain name lengths for benign and malicious domains.

#### Summary of Bot Samples

Table II provides a summary of the bot samples used in our blacklist, including well-known bot families and newly discovered AGDs.

| Bot Family  | # Samples | Sample of Generated Domain Name |
|-------------|-----------|---------------------------------|
| Bobax       | 1079      | nghhezqyrfy.dynserv.com          |
| Conficker   | 728       | rxldjmqogsw.info                 |
| Cridex      | 389       | frevyb-ikav.ru                   |
| Zeus        | 300       | pzpuisexhqc69g33mzpwlyauirdqg43mvdt.biz |
| Flashback   | 100       | fhnqskxxwloxl.info               |
| Discovered  | 314       | brmyxjyju.org                    |

#### Similarity Metrics for AGD Detection

Various similarity metrics have been proposed for detecting AGDs, including Kullback-Leibler (KL) divergence, Jaccard Index (JI), and Levenshtein distance. We discuss each in turn:

- **KL Divergence**: Measures the relative entropy between two probability distributions. Yadav et al. [32] used KL divergence with a maximum-likelihood classifier to detect malicious AGOs.
- **Jaccard Index**: A similarity metric that measures the overlap between sets. It is effective for clustering domain names.
- **Levenshtein Distance**: Counts the number of insertions, deletions, and substitutions required to transform one string into another.

#### Evaluation Results

Table III shows the results of using a Kullback-Leibler-based classifier on March 19, 2012. The classifier achieved the highest accuracy but had a high false positive rate of 28%.

| Domain Source | True Positives | False Positives |
|---------------|----------------|-----------------|
| Facebook      | 1.0            | 0.65            |
| Cloudfront    | 0.36           | 0.72            |
| Amazon        | 0.18           | 0.28            |
| Google IPv6   | 0.35           | 0.64            |
| CON           | 0.28           | 0.82            |

The Jaccard-based classifier achieved the second-highest accuracy but was the slowest, limiting its practical use in real-time scenarios. Methods based on edit distance were the least effective, with high false positive rates and slow processing times.

### Conclusion

While various techniques have been proposed for detecting botnets and malicious AGDs, each has its strengths and weaknesses. The choice of method depends on the specific requirements of the network and the trade-offs between accuracy, false positive rates, and computational efficiency.