的结构，并且相应地重新组织表。仔细考虑一下是否真的需要这么多的表，很多时候应用程
现出良好的性能。如果不能选择另一种文件系统，
使用一种能高效处理大量文件的文件系统。例如，艮
开操作慢了下来，因为文件打开操作需要花费时间。如果出现了这个问题，你可能会需要考
个MyISAM表，数据库目录将包含30000文件。在有了这么多文件之后，你便会发现，表的打
表时，这个问题便需要认真考虑。例如，一个MyISAM表由3个文件表示。如果你需要10000
表数量的增加而增大。表的打开操作会映射到操作系统提供的文件打开操作上，从而会受到
MySQL服务器的最佳选择。
面设置了一个很低的上限值，并且没有提供增大这个值的手段，那么它就不是运行高负荷
进程的默认文件描述符最大个数设置得相当低的系统上，更是如此。如果某个操作系统在这方
这很可能成为一个问题，因为文件描述符在许多系统里都属于稀缺资源。尤其是在那些把每个
量的客户端连接提供服务，或者执行引用了多个表的复杂语句时，会很容易耗尽这些描述符。
除了数据库目录之外，MySQL数据目录还含有许多状态文件和日志文件，如表11-1所示。
在设计数据库时，一定要考虑这种决策是否适用于给定的应用程序。不用刚才描述这种方
对于每个表都用其自己的文件进行表示这一做法，其另一个影响是，表的打开时间会随
另一种创建大量无需如此多单个文件的表的办法是，使用InnoDB 表，将它们存储在
口
口需要增加磁盘空间。合并表可以减少所需表的数量（减少表打开时间），但是会多增加
行级访问。
能
为这些视图授予访问权限。另外，如果所有的数据访问是受应用程序控制的（用户绝不
不能再想着对行进行访问控制。一种可行的办法是使用只能选择当前用户行的视图，并
MySQL没有提供限制某个给定用户只能访问特定行的功能，因此，在进行表合并时，
则所有用户的数据都会在同一个表里。
出于安全性的考虑。这些因素可能会对你合并表的能力和期望产生束缚。让每个用户单
空间比较紧张，那么使用多个表可能也是可以接受的，虽然有些延迟。
直接连接到数据库)，那么可以合并表，并且使用应用程序逻辑来实施对合并结果的
使用一个表的原因在于，每个表只允许具有表级权限的用户进行访问。如果合并了表
一个因素最为重要。如果速度最重要，那么你可能愿意牺牲一点额外的磁盘空间。如果
列(增加对磁盘空间的需求)。这是典型的时间与空间的权衡问题，需要你来决定哪
，则必须根据应用程序的需要重新评估一下表
即使有大量的小文件，XFS或 JFS仍可以表
11.2数据目录结构
405
相
序
虑
着
---
## Page 426
须从主服务器传递到从服务器的的更新操作记录下来。更多相关信息请参考第14章。
崩溃前的那一刻。即便你建立了复制服务器，二进制日志也能发挥作用，因为它可以把那些必
过把二进制日志文件送至服务器的方式重复这些更新操作。这样你便可以把数据库恢复到发生
件会列出服务器当前正在维护的二进制日志文件。
录的“事件”，这些事件可以作为 mysql客户端程序的输入来执行。配套的二进制目志索引文
其他的信息，如保持从服务器同步所需要的时间戳。二进制日志的内容是一些以二进制格式记
仅限于那些修改数据库内容的语句。当这台服务器在复制结构里属于主服务器时，它还会包
连接服务器
原因。
器启动失败，或者意外退出，那么这个日志会非常有用，因为它通常都包含了出现问题的具体
期处理有关的更多信息请参考12.8节。
志文件进行过期处理，以保证它们所占用的空间总量总在限定范围之内。
日志文件有可能会变得非常大，因此千万不要让它们把文件系统的空间都占满。应该定期对日
动选项来启用需要的日志，也可指定它们的名字，如果你不喜欢那些默认名字的话。请注意，
11.2.9.2
MySQL服务器，那么该脚本会检查PID文件，确定它应该向哪个进程发出终止运行信号。
ID 是什么（如果在运行的话）。例如，如果操作系统在关闭时调用 mysql.server 脚本来停止
时会删除该文件。其他进程可以利用这个文件来确定MySQL服务器是否在运行，以及其进程
11.2.9.1
12.8.6节
人 mysql数据库里的日志表，或者写到这两个地方。关于日志信息写入表的更多信息请参考
406
本节只简要地介绍几种常用的日志文件。与日志、控制服务器日志行为的选项以及日志过
二进制日志
一定要确保你的日志文件是安全的，并且不能随意被其他用户读取，因为其中的语句文本
错误日志（errorlog）包含的是，服务器在系统发生意外状况时生成的诊断信息。如果服务
MySQL能够维护多种类型的日志文件。大部分日志功能都是可选的，你可以使用服务器月
如果服务器无法创建 PID文件，那么它会往出错日志里写入一条信息，然后继续。
MySQL 服务器会在启动时把它的进程 ID（PID，processID）写入 PID 文件，并且在关闭
对于常规的查询日志和慢查询日志，可以选择让服务器把日志信息写入日志文件，或者写
慢查询日志
中继信息文件
主服务器信息文件
中继日志索引
中继日志
二进制日志索引
二进制日志
一般查询日志
错误日志
进程ID文件
文件类型
各器、从什么地方连接以及它们都调用了哪些语句。二进制日志还包含语句信息，但是
2MySQL日志
第11章MySQL数据目录
进程ID文件
1志对系统崩溃后的数据库恢复工作有着重要意义，因为在进行备份之后，可以通
HOSTNAME-s1ow.1og
relay-log.info
master.info
HOSTNAME-relay-bin.index
HOSTNAME-relay-bin.nnnnnn
HOSTNAME-bin.index
HOSTNAME-bin.nnnnnn
HOSTNAME.1og
HOSTNAME.err
HOSTNAME.pid
表11-1MySQL状态文件和日志文件
默认名
处理起来比较耗时的语句文本
中继日志处理的状态
用于连接主服务器的参数
当前中继日志文件名的列表
从服务器自主服务器接收到的数据修改信息
当前二进制日志文件名的列表
修改数据的语句的二进制表示
连接/断开事件和查询信息
启动/关闭事件和错误条件
服务器进程ID
文件内容
容
示
含
启
---
## Page 427
或者Windows里的c：\my.cnf）中指定各种选项。
用哪种迁移方法。如果使用的是选项文件，则可以在全局选项文件（如Unix里的/etc/my.cnf,
指向新位置。
务器提供指导。
关联的整数。12.2.3节将讨论适用于不同服务器启动方法的不同选项组，并且将对运行多个服
例，那么这些组名将变成[mysqldn]这样的形式，其中，n 是一个与某个特定的服务器实例相
体的情况，其他选项组名可能更为适合。例如，你正在使用mysqld_multi运行多个服务器实
选项。例如，想要指定数据目录的位置，可以在服务器启动时，在命令行上使用
--datadir=dir_name选项来指定，或者将下面的行放入某个选项文件中来指定：
11.3.1
迁移数据目录本身或者其中的某些元素。你想这样做的理由可能有以下几种。
位于其中。不过，在确定数据目录内容的存放位置方面，也有一些回旋的余地。MySQL允许你
11.3
骤的详细设置请参考13.1.2节。
是，只允许 MySQL系统管理员所使用的登录账户访问服务器主机上的数据目录。有关这个步
这个可不是任何人都可以访问的信息：
里可能包含密码之类的敏感信息。例如，下面这条日志记录便会把root用户的密码显示出来，
这两种方法都不能完全适用于可迁移的所有内容。表11-2总结了哪些是可迁移的，可以采
第二种，在Unix上，可以先移动要迁移的文件或目录，然后在原来位置生成一个符号链接，
一般情况下，服务器选项中的选项文件组名是[mysqld]，如上面示例所示。不过，根据具
第一种，在任何平台上，你都可以在服务器启动时，通过命令行或者选项文件，指定一个
迁移数据目录或其中各个部分的方法有两种。
本节将讨论数据目录的哪一部分可以移动，以及如何进行移动。
口包含数据目录的那个文件系统已满，你需要将其移动到某个拥有更大容量的文件系统
本章的前几节讨论了默认配置里的数据目录结构，所有的数据库、状态文件和日志文件都
datadir=dir_name
[mysqld]
口把数据库和日志分别放在不同的磁盘上，这样有助于减少单个磁盘故障造成的破坏。
默认情况下，服务器会把日志文件写到数据目录里，因此，确保日志文件安全的一种措施
08041216:47:24
口
性能。如果你使用了分区表，那么可以在各个分区来做这件事情。
概念上是一个巨大的存储块，但是可将其各个组成文件放置在不同的驱动器上，以提高
或者基于同样的原因把数据库分散在各个驱动器上。同样地，虽然InnoDB系统表空间在
器上，以平衡跨物理设备的磁盘活动。你可以把数据库和日志文件放在不同的驱动器上，
如果数据目录位于一个很忙的磁盘驱动器上，那么你可以把它放在活动不太频繁的驱动
迁移方法
迁移数据目录的内容
各个数据库表
各个数据库目录
整个数据目录
迁移实体
44Query
表11-2迁移方法总结
SET PASSWORD FOR
root'@'localhost'=PASSWoRD('secret')
11.3迁移数据目录的内容
符号链接
符号链接
启动选项或符号链接
适用的迁移方法
407
T
---
## Page 428
它们的.frm文件即可，不用迁移它们的内容。这不会对存储分布产生大的影响。
目录里。对于主要由像InnoDB表这样的表组成的数据库，在迁移数据库目录时，只需要迁移
一点：如果你正在使用存储在InnoDB系统表里的InnoDB表，那么这些表的内容并不在数据月
数据目录转移到/var的方式来在/usr上释放大量空间的相关问题就讲解到这里！
数据目录早已被转移到了/var文件系统里，并且被替换为了一个指向该处的符号链接。通过把
给出了答案：
真是如此吗？为查明真相，可以对数据目录使用df 命令。假设得到了如下所示的输出结果：
命令的输出表明/var文件系统有更多的可用空间：
阱”。假设，数据目录为/usr/local/mysql/data，而你想要把它转移到/var/mysql，因为af
些命令来说意味着什么。
11.3.3评估迁移带来的影响
以保证服务器会
服务器不会访问正移动的那个数据库。在移动数据库之前，还应该执行FLUSHTABLES 语句，
数据库目录，有时可能会保持服务器继续运行，但不推荐这样做。如果真要那样，一定要保
迁移操作之前，停止MySQL 服务器，迁移完成之后再重启它。对于某些类型的迁移，如移动
11.3.2
408
如果想要将某个数据库移动到另一个文件系统，以试图重新分配数据库存储，那么请记
下面这个示例展示了在对数据目录迁移进行评估时，需要特别注意的某些难以捉摸的“陷
在迁移之前，一定要记得备份数据，以便在迁移操作搞砸时进行恢复。而且，应该在执行
上面这些示例给我们的启发是，多花费几分钟来评估迁移可能造成的影响，可以避免做出
这个输出显示，/usr/local/mysql/data是一个指向/var/mysql的符号链接。换句话说，
%1s -1 /usr/local/mysql/data
Filesystem
%df-k/usr/local/mysql/data
这个结果表明，把数据目录从/usr 转移到/var，将可以在/usr上释放出约3GB的空间。
/dev/sda6
3264308K/usr/local/mysql/data
%du-s/usr/local/mysql/data
为弄清数据目录迁移之后，
/dev/sda5
Filesystem
%df-k/usr/var
df 和 1s-1 命令来查看磁盘空间信息。不过，你必须正确理解文件系统的结构对所有这
在试图迁移之前，请记得核实一下该操作可能会带来的影响。例如，在Unix上，可以使用
rwxrwxr-x1mysql
/dev/sda6
第11章MySQL数据目录
迁移注意事项
会关闭所有打开的表文件。如果不遵守这几点，可能会导致表损坏。
日志文件
服务器PID文件
InnoDB表空间文件
迁移实体
mysql
28834716K
1K-blocks
28834716K
28834716K
1K-blocks
/usr文件系统上能释放多少空间，
10 Dec 11 23:46data-> /var/mysql
9175456K18194536K34%/var
24078024K
9175456K18194536K34%/var
 Used Available Use% Mounted on
Used Available Use%
3291968K
88%
启动选项
启动选项
启动选项
适用的迁移方法
Isn/
Mountedon
，可以使用du-s 命令：
续
表
住
证
库
---
## Page 429
11.3.6
将下面几行内容放到某个选项文件里来启用它：
启用了这项功能，但是你也可以在命令行上使用--symbolic-links 选项来显式启用它，或者
为 C：\mysql\data\sampdb.sym的文件，让其包括下面一行内容：
sampdb 数据库从 C:\mysql\data\sampdb 移至E:\mysql-book\sampdb，则需要创建一个名