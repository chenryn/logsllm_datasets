        ``` literallayout
        [root@host ~]# update-crypto-policies --set DEFAULT:AD-SUPPORT
        Setting system policy to DEFAULT:AD-SUPPORT
        Note: System-wide crypto policies are applied on application start-up.
        It is recommended to restart the system for the change of policies
        to fully take place.
        ```
    2.  重启主机。
    :::
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
`AD-SUPPORT`{.literal} 加密子策略仅适用于 RHEL 8.3 及更新的版本。
::: itemizedlist
-   要在 RHEL 8.2 中启用对 RC4 的支持，请使用
    `cipher = RC4-128+`{.literal}
    创建并启用自定义加密模块策略。如需了解更多详细信息，请参阅[使用
    policy modifiers
    自定义系统范围的加密策略](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/security_hardening/using-the-system-wide-cryptographic-policies_security-hardening#customizing-system-wide-cryptographic-policies-with-policy-modifiers_using-the-system-wide-cryptographic-policies){.link}。
-   要在 RHEL 8.0 和 RHEL 8.1 中启用对 RC4 的支持，请将 `+rc4`{.literal}
    添加到 `/etc/crypto-policies/back-ends/krb5.config`{.literal} 文件的
    `permitted_enctypes`{.literal} 选项中：
    ``` literallayout
    [libdefaults]
    permitted_enctypes = aes256-cts-hmac-sha1-96 aes256-cts-hmac-sha384-192 camellia256-cts-cmac aes128-cts-hmac-sha1-96 aes128-cts-hmac-sha256-128 camellia128-cts-cmac +rc4
    ```
:::
:::
::: itemizedlist
**其它资源**
-   有关使用 RHEL
    加密策略的更多信息，请参阅安全强化指南中的[使用系统范围的加密策略](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/security_hardening/using-the-system-wide-cryptographic-policies_security-hardening){.link}。
:::
:::
::: section
::: titlepage
# []{#connecting-rhel-systems-directly-to-ad-using-sssd_integrating-rhel-systems-directly-with-active-directory.html#connecting-directly-to-ad_connecting-rhel-systems-directly-to-ad-using-sssd}直接连接到 AD {.title}
:::
本节论述了如何使用 ID 映射或 POSIX 属性直接与 AD 集成。
::: itemizedlist
-   [使用 SSSD 发现并加入 AD
    域](#connecting-rhel-systems-directly-to-ad-using-sssd_integrating-rhel-systems-directly-with-active-directory.html#discovering-and-joining-an-ad-domain-using-sssd_connecting-directly-to-ad "使用 SSSD 发现并加入 AD 域"){.link}
-   [用于与 AD 集成的选项： 使用 ID 映射或 POSIX
    属性](#connecting-rhel-systems-directly-to-ad-using-sssd_integrating-rhel-systems-directly-with-active-directory.html#options-for-integrating-with-ad-using-id-mapping-or-posix-attributes_connecting-directly-to-ad "用于与 AD 集成的选项： 使用 ID 映射或 POSIX 属性"){.link}
-   [使用 Active Directory 中定义的 POSIX 属性连接到
    AD](#connecting-rhel-systems-directly-to-ad-using-sssd_integrating-rhel-systems-directly-with-active-directory.html#using-posix-attributes-defined-in-active-directory_connecting-directly-to-ad "使用 Active Directory 中定义的 POSIX 属性连接到 AD"){.link}
-   [使用 SSSD 连接到不同 AD
    林中的多个域](#connecting-rhel-systems-directly-to-ad-using-sssd_integrating-rhel-systems-directly-with-active-directory.html#connecting-to-multiple-domains-different-ad-forests-sssd_connecting-directly-to-ad "使用 SSSD 连接到不同 AD 林中的多个域"){.link}
:::
::: section
::: titlepage
## []{#connecting-rhel-systems-directly-to-ad-using-sssd_integrating-rhel-systems-directly-with-active-directory.html#discovering-and-joining-an-ad-domain-using-sssd_connecting-directly-to-ad}使用 SSSD 发现并加入 AD 域 {.title}
:::
这个步骤描述了如何发现 AD 域并使用 SSSD 将 RHEL 系统连接到那个域。
::: itemizedlist
**先决条件**
-   确保 RHEL 主机上的以下端口已为 AD 域控制器打开并可以被访问。
    ::: table
    []{#connecting-rhel-systems-directly-to-ad-using-sssd_integrating-rhel-systems-directly-with-active-directory.html#idm140251745786752}
    **表 1.1. 使用 SSSD 将 Linux 系统直接集成到 AD 所需的端口**
    ::: table-contents
      服务            端口   协议         备注
      --------------- ------ ------------ --------------------------------------------
      DNS             53     UDP 和 TCP    
      LDAP            389    UDP 和 TCP    
      Kerberos        88     UDP 和 TCP    
      Kerberos        464    UDP 和 TCP   kadmin 用来设置和更改密码
      LDAP 全局目录   3268   TCP          如果使用 `id_provider = ad`{.literal} 选项
      NTP             123    UDP          可选
    :::
    :::
-   确保您为 DNS 使用 AD 域控制器服务器。
-   验证两个系统中的系统时间已被同步。这样可确保 Kerberos 正常工作。
:::
::: orderedlist
**流程**
1.  安装以下软件包：
    ``` literallayout
    # yum install samba-common-tools realmd oddjob oddjob-mkhomedir sssd adcli krb5-workstation
    ```
2.  要显示特定域的信息，请运行 `realm discover`{.literal}
    并添加您要发现的域名称：
    ``` literallayout
    # realm discover ad.example.com
    ad.example.com
      type: kerberos
      realm-name: AD.EXAMPLE.COM
      domain-name: ad.example.com
      configured: no
      server-software: active-directory
      client-software: sssd
      required-package: oddjob
      required-package: oddjob-mkhomedir
      required-package: sssd
      required-package: adcli
      required-package: samba-common
    ```
    `realmd`{.literal} 系统使用 DNS SRV 查找自动查找这个域中的域控制器。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    `realmd`{.literal} 系统可以发现 Active Directory 和 Identity
    Management 域。如果您的环境中存在这两个域，您可以使用
    `--server-software=active-directory`{.literal}
    选项将发现结果限制为特定类型的服务器。
    :::
3.  使用 `realm join`{.literal} 命令配置本地 RHEL
    系统。`realmd`{.literal}
    套件自动编辑所有必需的配置文件。例如，对于名为
    `ad.example.com`{.literal} 的域：
    ``` literallayout
    # realm join ad.example.com
    ```
:::
::: itemizedlist
**验证步骤**
-   显示 AD 用户详情，如管理员用户：
    ``` literallayout
    # getent passwd PI:EMAIL
    PI:EMAIL:*:1450400500:1450400513:Administrator:/home/PI:EMAIL:/bin/bash
    ```
:::
::: itemizedlist
**其它资源**
-   请查看 `realm(8)`{.literal} man page。
-   请查看 `nmcli(1)`{.literal} man page。
:::
:::
::: section
::: titlepage
## []{#connecting-rhel-systems-directly-to-ad-using-sssd_integrating-rhel-systems-directly-with-active-directory.html#options-for-integrating-with-ad-using-id-mapping-or-posix-attributes_connecting-directly-to-ad}用于与 AD 集成的选项： 使用 ID 映射或 POSIX 属性 {.title}
:::
Linux 和 Windows 系统为用户和组群使用不同的标识符：
::: itemizedlist
-   Linux 使用 [*用户 ID*]{.emphasis}（UID）和 [*组群
    ID*]{.emphasis}（GID）。[*请参阅配置基本系统设置中的
    [https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_basic_system_settings/introduction-to-managing-user-and-group-accounts_configuring-basic-system-settings](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_basic_system_settings/introduction-to-managing-user-and-group-accounts_configuring-basic-system-settings){.link}
    管理用户和组帐户简介*]{.emphasis}。Linux UID 和 GID 符合 POSIX
    标准。
-   Windows [*使用安全 ID*]{.emphasis} (SID)。
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
将 RHEL 系统连接到 AD 后，您可以使用 AD
用户名和密码进行身份验证。不要创建名称与 Windows 用户相同的 Linux
用户，因为重复名称可能会导致冲突并中断身份验证过程。
:::
要以 AD 用户身份验证 RHEL 系统，您必须分配了 UID 和 GID。SSSD 提供了使用
ID 映射或 POSIX 属性与 AD 集成的选项。默认是使用 ID 映射。
::: section
::: titlepage
### []{#connecting-rhel-systems-directly-to-ad-using-sssd_integrating-rhel-systems-directly-with-active-directory.html#automatically_generate_new_uids_and_gids_for_ad_users}为 AD 用户自动生成新的 UID 和 GID {.title}
:::
SSSD 可以使用 AD 用户的 SID 在名为 ID [*映射的过程中以算法生成 POSIX
ID*]{.emphasis}。ID 映射会在 AD 中的 SID 和 Linux 中的 ID
之间创建一个映射。
::: itemizedlist
-   当 SSSD 检测到新的 AD 域时，它会为新域分配一系列可用 ID。
-   当 AD 用户第一次登录 SSSD 客户端机器时，SSSD 在 SSSD
    缓存中为用户创建一个条目，包括基于用户的 SID 以及该域的 ID 范围的
    UID。
-   因为 AD 用户的 ID 是以一致的方式从同一 SID
    生成，所以用户在登录到任何 Red Hat Enterprise Linux 系统时具有相同的
    UID 和 GID。
:::
请参阅[使用 SSSD 发现并加入 AD
域](#connecting-rhel-systems-directly-to-ad-using-sssd_integrating-rhel-systems-directly-with-active-directory.html#discovering-and-joining-an-ad-domain-using-sssd_connecting-directly-to-ad "使用 SSSD 发现并加入 AD 域"){.link}。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
当所有客户端系统都使用 SSSD 将 SID 映射到 Linux ID
时，映射是一致的。如果有些客户端使用不同的软件，请选择以下之一：
::: itemizedlist
-   确定所有客户端都使用相同的映射算法。
-   使用 AD 中定义的显式 POSIX 属性。
:::
:::
:::
::: section
::: titlepage
### []{#connecting-rhel-systems-directly-to-ad-using-sssd_integrating-rhel-systems-directly-with-active-directory.html#use_posix_attributes_defined_in_ad}使用 AD 中定义的 POSIX 属性 {.title}
:::
AD 可以创建并存储 POSIX 属性，如
`uidNumber`{.literal}、`gidNumber`{.literal}、`unixHomeDirectory`{.literal}
或 `loginShell`{.literal}。
使用上述 ID 映射时，SSSD 会创建新的 UID 和 GID，这将覆盖 AD
中定义的值。要保留 AD 定义的值，必须在 SSSD 中禁用 ID 映射。
请参阅使用 [Active Directory 中定义的 POSIX 属性连接到
AD](#connecting-rhel-systems-directly-to-ad-using-sssd_integrating-rhel-systems-directly-with-active-directory.html#using-posix-attributes-defined-in-active-directory_connecting-directly-to-ad "使用 Active Directory 中定义的 POSIX 属性连接到 AD"){.link}。
:::
:::
::: section
::: titlepage
## []{#connecting-rhel-systems-directly-to-ad-using-sssd_integrating-rhel-systems-directly-with-active-directory.html#using-posix-attributes-defined-in-active-directory_connecting-directly-to-ad}使用 Active Directory 中定义的 POSIX 属性连接到 AD {.title}
:::
为获得最佳性能，请将 POSIX 属性发布到 AD 全局目录。如果全局目录中没有
POSIX 属性，SSSD 会直接连接到 LDAP 端口上的单个域控制器。
::: itemizedlist
**先决条件**
-   确保 RHEL 主机上的以下端口已为 AD 域控制器打开并可以被访问。
    ::: table
    []{#connecting-rhel-systems-directly-to-ad-using-sssd_integrating-rhel-systems-directly-with-active-directory.html#idm140251738875536}
    **表 1.2. 使用 SSSD 将 Linux 系统直接集成到 AD 所需的端口**
    ::: table-contents
      服务            端口   协议         备注
      --------------- ------ ------------ --------------------------------------------
      DNS             53     UDP 和 TCP    
      LDAP            389    UDP 和 TCP    
      Kerberos        88     UDP 和 TCP    
      Kerberos        464    UDP 和 TCP   kadmin 用来设置和更改密码
      LDAP 全局目录   3268   TCP          如果使用 `id_provider = ad`{.literal} 选项
      NTP             123    UDP          可选
    :::
    :::
-   确保您为 DNS 使用 AD 域控制器服务器。
-   验证两个系统中的系统时间已被同步。这样可确保 Kerberos 正常工作。
:::
::: orderedlist
**流程**
1.  安装以下软件包：
    ``` literallayout
    # yum install realmd oddjob oddjob-mkhomedir sssd adcli krb5-workstation
    ```
2.  使用带有 `--automatic-id-mapping=no`{.literal} 选项的
    `realm join`{.literal} 命令，将本地 RHEL 系统配置为禁用 ID
    映射。`realmd`{.literal}
    套件自动编辑所有必需的配置文件。例如，对于名为
    `ad.example.com`{.literal} 的域：
    ``` literallayout
    # realm join --automatic-id-mapping=no ad.example.com
    ```
3.  如果您已经加入某个域，可以在 SSSD 中手动禁用 ID 映射：
    ::: orderedlist
    1.  打开 `/etc/sssd/sssd.conf`{.literal} 文件。
    2.  在 AD 域部分，添加 `ldap_id_mapping = false`{.literal} 设置。
    3.  删除 SSSD 缓存：
        ``` literallayout
        rm -f /var/lib/sss/db/*
        ```
    4.  重启 SSSD：
        ``` literallayout
        systemctl restart sssd