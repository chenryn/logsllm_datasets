### The Fourth Anniversary of Data.gov

In celebration of the fourth anniversary of Data.gov, a comprehensive listing of APIs was released from across the federal government as part of the Digital Government Strategy. These APIs accelerated the development of new applications in various fields, including health, public safety, education, and consumer protection, among others. This initiative also provided developers with a centralized resource (http://api.data.gov) where they could find all the government’s APIs, along with links to API documentation and other resources.

### IBM Watson and APIs

APIs have become essential for building successful enterprises, opening up new business ecosystems and opportunities that were previously non-existent. In November 2013, IBM Watson technology was made available as a cloud-based development platform, enabling a global community of software developers to build a new generation of applications infused with Watson's cognitive computing intelligence. IBM anticipated that this would create multiple ecosystems, leading to the creation of new marketplaces. For example, it connected Elsevier, a world-leading provider of scientific, technical, and medical information, with the extensive oncology care studies from Sloan Kettering, a renowned cancer treatment and research institution, and Watson’s cognitive computing capabilities. This collaboration now provides physicians and nurse practitioners with valuable information on symptoms, diagnosis, and treatment approaches.

### Open Banking

The adoption of APIs has spread across various industries, including retail, healthcare, financial, government, and education. In the financial sector, the Open Bank project provides an open-source API and app store for banks, allowing them to enhance their digital offerings securely and rapidly using an ecosystem of third-party applications and services. According to Gartner, by 2016, 75% of the top 50 global banks had launched an API platform, and 25% had launched a customer-facing app store. The goal of the Open Bank project is to provide a uniform interface, abstracting out the differences in each banking API. This will enable application developers to build applications on top of the Open Bank API that can work with any bank participating in the initiative. Currently, only four German banks are onboarded, but the project is expected to grow. The business model involves charging an annual licensing fee from participating banks.

### Healthcare

The healthcare industry has also benefited significantly from APIs. By November 2015, over 200 medical APIs were registered on ProgrammableWeb. One notable project is the Human API, which provides a platform for users to securely share their health data with developers of health applications and systems. This data network includes activity data from pedometers, blood pressure measurements from digital cuffs, and medical records from hospitals. According to a report by GlobalData, the mobile health market was worth $1.2 billion in 2011 and was expected to reach $11.8 billion by 2018, growing at a compound annual growth rate (CAGR) of 39%. Research2guidance estimated that the market for mobile health sensors would grow to $5.6 billion by 2017. These figures indicate a significant demand for medical APIs in the near future.

### Wearables

The wearable industry, driven by the proliferation of APIs, is another sector experiencing rapid growth. ABI Research estimates that there will be 780 million wearables in circulation by 2019, ranging from fitness trackers and smartwatches to smart glasses and heart monitors. Most wearables have limited processing power and storage, relying on cloud-hosted APIs for processing and storage. For example, the Microsoft Band, a wrist-worn wearable, tracks heart rate, steps taken, calories burned, and sleep quality. It uploads this data to the cloud via the Microsoft Health mobile application when connected via Bluetooth. The Microsoft Health Cloud API allows developers to enhance their apps and services with real-time user data, providing comprehensive fitness and health data in an easy-to-consume JSON format. This enhances the ecosystem around the Microsoft Band, enabling more developers to create useful applications and increasing its adoption. Third-party application developers can also integrate their own data streams with the data from the Microsoft Health API to develop more useful applications. Fitness applications like RunKeeper, MyFitnessPal, and MyRoundPro have partnered with Microsoft Band for mutual benefits.

### Business Models

A well-defined business model is crucial for success in the API economy. The IBM Redbook, "The Power of the API Economy," identifies four primary API business models:

- **Free Model:** Focuses on business adoption and brand loyalty. Examples include Facebook, Twitter, and Google Maps APIs.
- **Developer Pays Model:** The developer or API consumer pays for usage. Examples include PayPal, which charges a transaction fee, and Amazon, which charges based on usage.
- **Developer Is Paid Directly:** A revenue-sharing model where developers receive a portion of the revenue generated. Google AdSense, which pays 20% of ad revenue to developers, and Shopping.com, which pays per click, are examples.
- **Indirect Model:** Builds a larger ecosystem around the API, such as Salesforce, Twitter, and Facebook. For instance, Twitter allows developers to build applications on its API, benefiting from sponsored tweets displayed in the end user’s timeline.

### The Evolution of APIs

The concept of APIs dates back to the early days of computing. An API defines how other components interact with a given system. It stands for Application Programming Interface and is a technical specification for developers and architects. In Unix or Linux operating systems, the `man` command generates the technical specification for each command, defining how a user can interact with it. This output can be considered the API definition for the corresponding command.

System calls provide an interface to the operating system’s kernel, allowing programs to request services from the underlying OS. The kernel is the core of the operating system, wrapping the hardware layer from top-level applications. System calls are the kernel’s API for the user space, while the kernel space is accessible only through these calls.

The Linux kernel has two types of APIs: one for applications running in the user space and another for internal use. The API between the kernel space and user space is the public API, while the other is the private API.

At the application level, APIs are used to interact with different systems. For example, Java provides the Java Database Connectivity (JDBC) API to connect to various databases. The JDBC API encapsulates the logic for database connectivity, allowing applications to switch between different databases without changing the application logic.

### Remote Access to APIs

APIs can also be accessed remotely, requiring a protocol for interprocess communication. Protocols like Java RMI, CORBA, .NET Remoting, SOAP, and REST (over HTTP) facilitate this. Java RMI, for instance, allows a Java client to invoke a remote Java API. The RMI infrastructure serializes requests and deserializes them into Java objects at the server side.

SOAP-based web services provide a language- and platform-neutral way to build and invoke hosted APIs, passing messages as XML payloads. However, the complexity of SOAP standards led to a decline in popularity. In contrast, REST is a design paradigm, often based on HTTP, and emerged as a simpler alternative during the Web 2.0 era.

Modern APIs have roots in both SOAP and REST. Salesforce and Amazon, for example, support both, but REST has seen higher adoption rates. The number of public APIs has grown significantly, with ProgrammableWeb tracking over 22,000 APIs as of June 2019.