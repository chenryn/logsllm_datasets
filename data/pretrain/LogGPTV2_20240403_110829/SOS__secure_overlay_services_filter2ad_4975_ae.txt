# Blocking Probability for Legitimate Traffic as a Function of Attack Traffic Load

In this section, we illustrate the blocking probability for legitimate traffic in the presence of attack traffic. We consider a simplified scenario with two classes of customers: one representing DoS (Denial of Service) attacks and the other representing legitimate traffic. We assume that each call in both classes consumes an equal amount of bandwidth, reflecting the idea that compromised clients come from the same population as legitimate users.

For a DoS attack to be successful, the load level (\(\lambda_j\)) for the attack traffic must significantly exceed that of the legitimate traffic. In our test scenario, the target node has 20 units of available resources, and both attack and legitimate traffic consume one unit of resource. The load factor \(\rho = \frac{\lambda}{\mu}\) for legitimate traffic is set to 1. Figure 4 plots the probability that a legitimate connection is denied service as a function of the load factor \(\rho\) of the attack traffic.

As shown in Figure 4, when \(\rho = 200\) for the attack traffic, approximately 90% of the legitimate traffic is denied service. Under a more severe attack, if the attack load rises to \(10^4\), the denial of service for legitimate traffic becomes even more pronounced.

## Performance Gains with SOS

Next, we examine the effects of anonymizing the attacked node. If the attacker does not know the identity of the secret servlet for a specific target, the attacks will be distributed randomly across the overlay network. Only a fraction of these attacks will reach the target servlet. The effective arrival rate of the attacks is then \(\lambda_a \cdot f\), where \(f\) is the fraction of secret servlets in the SOS for a particular node.

We compute the ratio of the old blocking probability to the new blocking probability, denoted as the Randomization Gain (RG) of the system. Figure 5(b) shows the RG as a function of the number of nodes in the overlay. As the number of nodes increases, a smaller fraction of the traffic reaches the target node. For example, placing the target node randomly in a group of 30 reduces the probability of attack by four orders of magnitude.

## Implementation of SOS

A key advantage of the SOS architecture is its implementability using existing software and standardized protocols, facilitating easier adoption and use.

### Filtering
High and medium-range routers, as well as most desktop and server operating systems, offer high-speed packet classification schemes that can be used for perimeter filtering. A simplified version of [12] can be employed by the target to inform its perimeter routers of changes in the set of allowed secret servlets.

### Authentication and Authorization
Most commercial and free operating systems include IPsec, a set of protocols for establishing cryptographic keys and protecting traffic between hosts. Access control for a large SOS infrastructure can be managed efficiently using KeyNote credentials, which resemble public-key certificates with embedded authorization information. This approach minimizes performance, storage, and synchronization overhead.

Each authorized source is given a certificate by the target, authorizing it to use the SOS infrastructure to send traffic to the target. During authentication via the IPsec key-exchange protocol (IKE), the source provides this certificate to the access point. The access point verifies the source's authenticity and confirms its permission to send traffic to the target. Access points do not need to store access control policies; they use the certificates to "remember" the relevant policies and can "forget" them once the communication ends.

### Tunneling
Once traffic enters the overlay network, it needs to be forwarded to other SOS nodes toward the beacon and then to the secret servlets. Standard tunneling techniques such as IP-in-IP encapsulation, GRE encapsulation, or IPsec in "tunnel mode" can be used. Additionally, traffic inside the overlay network can benefit from prioritization schemes like MPLS or DiffServ if provided by the infrastructure. Routing decisions within the overlay network are based on a Chord-like mechanism.

We envision the overlay nodes to be a mix of routers and high-speed end systems. Since IP tunneling is lightweight, SOS functionality can be offered by service providers without adversely affecting network performance. Access points can also be a mix of routers and high-speed end systems, equipped with cryptographic acceleration hardware for enhanced performance. These access points and secret servlets can act as charging points if SOS functionality is offered commercially.

## Discussion

Our study of SOS is in its early stages, and several issues need to be addressed for the service to have a viable impact on the Internet. We discuss current limitations and suggest directions for future research.

### Attacks from Inside the Overlay
We have assumed that no malicious user can bypass our protection perimeter. However, security management oversights or development bugs could lead to breaches. Further investigation is needed to evaluate potential damages and approaches to limit them.

### Shared Overlay
SOS is presented as a means to permit communication from a single confirmed source point to a single target. The architecture should scale to handle numerous confirmed source points transmitting to multiple targets. Users should treat the infrastructure as an untrusted network in terms of privacy or integrity and encrypt sensitive communications. State for each target must be maintained at secret servlets, beacons, and access points, which can affect scalability and make the service more prone to DoS attacks.

### Timely Delivery
SOS forces traffic through a series of overlay points, potentially increasing latency. Preliminary simulations show latency to be about ten times higher than direct communication. While this overhead may be acceptable in mission-critical systems, further research is needed to find shortcuts or trade-offs between security and timely delivery.

### Analysis
The analysis presented here is preliminary. More detailed mathematical models and experimental studies are needed to better understand SOS operation.

## Conclusion

This paper addresses the problem of securing communication services against DoS attacks using the Secure Overlay Services (SOS) architecture. Through simple analytical models, we show that DoS attacks directed against any part of the SOS infrastructure have a negligible probability of disrupting communication. Implementing an SOS infrastructure is straightforward and can be done using off-the-shelf protocols and software.

We believe that our approach is a novel and powerful way to counter DoS attacks, especially in service-critical environments. While there are several issues to be resolved, our work encourages researchers to explore proactive approaches to addressing the DoS problem.

## Acknowledgements
The authors thank the anonymous reviewers for their valuable comments and suggestions.

## References
[References listed as in the original text]

---

This revised version aims to provide a clearer, more coherent, and professional presentation of the content.