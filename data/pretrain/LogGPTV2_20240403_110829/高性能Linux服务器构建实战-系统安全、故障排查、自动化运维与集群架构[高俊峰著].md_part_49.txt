根据该报文中特定字段加上负载均衡器中设置的负载均衡器算法来决定最终选择的内部服
代替后端服务器和客户端建立连接，接着，才能收到客户端发送过来的报文内容，然后再
见的七层负载均衡器有HAProxy、Nginx等。
而七层负载均衡器可以根据客户端访问域名的不同选择对应的网页进行负载均衡处理。常
进人中文网站，访问B域名时进人英文网站，这在四层负载均衡器中几乎是无法实现的，
两台Web 服务器分别对应中英文两个网站，两个域名分别是A、B，要实现访问A域名时
还可以根据网站的URL、访问域名、浏览器类别、语言等决定负载均衡的策略。例如，有
Web服务器的负载均衡，七层负载均衡器不但可以根据“IP+端口”的方式进行负载分流，
文内容，再配合负载均衡算法来选择后端服务器，因此也称为“内容交换器”。比如，对于
这里仍以常见的TCP应用为例，由于负载均衡器要获取到报文的内容，因此只能先
2）LVS是基于四层的IP负载均衡技术，而HAProxy是基于四层和七层技术、可提供
3）LVS 工作在ISO 模型的第四层，因此其状态监测功能单一，而HAProxy在状态监
1）两者都是软件负载均衡产品，但是LVS 是基于Linux操作系统实现的一种软负载均
通过上面两小节的介绍，读者应该基本清楚了HAProxy负载均衡与LVS 负载均衡的优
对比四层负载均衡器和七层负载均衡器运行的整个过程，可以看出，在七层负载均衡
client
独立的TCP连接
图12-2七层负载均衡器代理实现原理
七层负载均衡器
代理
第12章千万级高并发负载均衡软件HAProxy325
独立的TCP连接
realserver
---
## Page 345
326第四部分集群架构篇
可以根据需要选择相应的部分进行配置。
12.2.2HAProxy基础配置文件详解
程如下：
统CentOS 6.3版本为例，下载的 HAProxy是当前的稳定版本 haproxy-1.4.24.tar.gz，安装过
12.2.1
解HAProxy中常用的选项。
的。只要掌握了常用的配置选项，基本就能玩转HAProxy了，因此在下面的介绍中主要讲
多达百页，但是HAProxy的配置并非这么复杂，因为HAProxy 常用的配置选项是非常少
12.2
要以实际的应用环境来决定。
而 LVS 拥有接近硬件设备的网络吞吐和连接负载能力。
测方面功能强大，可支持端口、URL、脚本等多种状态检测方式。
综上所述，HAProxy 和LVS 各有优缺点，没有好坏之分，要选择哪个作为负载均衡器，
4）虽然HAProxy功能强大，但是它的整体处理性能低于四层负载均衡模式的LVS,
可以在HAProxy的官网http://haproxy.1wt.eu/下载HAProxy的源码包，这里以操作系
HAProxy 的安装非常简单，但是在配置方面稍微复杂了些。虽然官方给出的配置文档
（1）global部分
根据功能和用途，HAProxy配置文件主要由5个部分组成，但有些部分并不是必需的，
1.配置文件概述
这样，HAProxy就安装完成了。
[root@haproxy-server haproxy-1.4.24]#mkdir/usr/local/haproxy/conf
[root@haproxy-server haproxy-1.4.24]#make install PREFIx=/usr/local/haproxy
[root@haproxy-server app] #cd haproxy-1.4.24
#HAProxy默认不创建配置文件目录，这里是创建HAProxy配置文件目录
#将HAProxy安装到/usr/local/haproxy下
快速安装HAProxy集群软件
HAProxy基础配置与应用实例
#配置文件目录
HAProxy安装完成后，默认安装目录中没有配置文件，这里是将源码包里面的示例配置文件复制到
---
## Page 346
listen 组件的配置方式。目前在 HAProxy 中，两种配置方式任选其一即可。
的所有配置选项都在这个部分中设置。为了保持兼容性，HAProxy新的版本仍然保留了
前端用户的请求。添加的真实服务器类似于LVS 中的real server节点。
HAProxy配置文件的复杂性。frontend可以根据ACL规则直接指定要使用的后端backend。
引入的一个组件，同时引入的还有backend 组件。通过引人这些组件，在很大程度上简化了
数，那么defaults 部分参数对应的值自动被覆盖。
backend和listen部分中，因此，如果某些参数属于公用的配置，只需在defaults 部分添加
log：全局的日志配置，local0是日志设备，info表示日志级别。其中日志级别有
（1）global部分
根据上面介绍的5个部分对HAProxy的配置文件进行讲解。
2.HAProxy配置文件详解
global
配置示例如下：
此部分是frontend 部分和backend部分的结合体。在HAProxy 1.3版本之前，HAProxy
上述代码中每个选项的含义如下。
（5）listen部分
此部分用于设置集群后端服务集群的配置，也就是用来添加一组真实服务器，以处理
（4）backend部分
此部分用于设置接收用户请求的前端虚拟节点。frontend是在HAProxy1.3版本之后才
（3）frontend部分
默认参数的配置部分。在此部分设置的参数值，默认会自动引用到下面的frontend、
（2）defaults部分
用来设定全局配置参数，属于进程级的配置，
中的local0日志设备，记录日志等级为info。
err、warning、info、debug4种可选。这个配置表示使用127.0.0.1上的rsyslog服务
pidfile/usr/local/haproxy/logs/haproxy.pid
nbproc1
daemon
groupnobody
user nobody
maxconn4096
log 127.0.0.1 1oca10 info
，通常和操作系统配置有关。
第12章千万级高并发负载均衡软件 HAProxy327
---
## Page 347
328第四部分集群架构篇
口timeout server：设置服务器端回应客户端数据发送的最长等待时间，默认单位是毫
口timeout client：设置连接客户端发送数据时最长等待时间，默认单位是毫秒，也可以
口timeout connect：设置成功连接到一台服务器的最长等待时间，默认单位是毫秒，但
口retries：设置连接后端服务器的失败重试次数，如果连接失败的次数超过这里设置的
mode：设置 HAProxy实例默认的运行模式，有tcp、http、health三个可选值。
配置示例如下：
（2）defaults部分
口pidfile：指定 HAProxy 进程的 pid 文件。启动进程的用户必须有访问此文件的权限。
口nbproc：设置HAProxy启动时可创建的进程数，此参数要求将 HAProxy运行模式设
上述代码中每个选项的含义如下。
defaults
口daemon：设置HAProxy进程进入后台运行。这是推荐的运行模式。
口user/group：设置运行 HAProxy进程的用户和组，也可使用用户和组的 uid和 gid值
maxconn：设定每个HAProxy 进程可接受的最大并发连接数，此选项等同于Linux
使用其他的时间单位后缀。
也可以使用其他的时间单位后缀。
值，HAProxy会将对应的后端服务器标记为不可用。此参数也可在后面部分进行设置。
来替代。
命令行选项“ulimit-n”。
口health模式：目前此模式基本已经废弃，不再多说。
口http模式：在此模式下，客户端请求在转发至后端服务器之前将会被深度分析，
 tcp 模式：在此模式下，客户端和服务器端之间将建立一个全双工的连接，不会对
秒，也可以使用其他的时间单位后缀。
七层报文做任何类型的检查，默认为tcp模式，经常用于SSL、SSH、SMTP等应用。
导致进程崩溃。
CPU核数。创建多个进程，能够减少每个进程的任务队列，但是过多的进程可能会
置为daemon，默认只启动一个进程。根据使用经验，该值的设置应该小于服务器的
所有不与 RFC 格式兼容的请求都会被拒绝。
retries 3
mode http
timeoutcheck5s
timeout server 30s
timeout client 20s
timeout connect 10s
---
## Page 348
项，用来指定网络接口的名称，只能在Linux系统上使用。
可是一个端口范围，小于1024的端口需要有特定权限的用户才能使用。interface为可选选
“0.0.0.0"，将监听当前系统的所有 IPv4地址。port_range可以是一个特定的TCP端口，也
个选项的含义如下。
口log global：表示使用全局的日志配置，这里的 global表示引用在 HAProxy 配置文件
口option httpclose：此选项表示在客户端和服务器端完成一次连接请求后，HAProxy 将
optionforwardfor：如果后端服务器需要获得客户端的真实IP，就需要配置此参数。
口option httplog：在默认情况下，HAProxy日志是不记录 HTTP 请求的，这样很不方
其中，address 为可选选项，其可以为主机名或IP地址，如果将其设置为“*”或
bind：此选项只能在 frontend 和 listen 部分进行定义，用于定义一个或几个监听的套
frontend www
这是HAProxy配置文件的第三部分一
（3）frontend部分
口timeoutcheck：设置对后端服务器的检测超时时间，默认单位是毫秒，也可以使用其
主动关闭此 TCP 连接。这是对性能非常有帮助的一个参数。
便HAProxy 问题的排查与监控。通过此选项可以启用日志记录 HTTP 请求。
bind [:] interface
他的时间单位后缀。
global部分中定义的log选项配置格式。
息来记录客户端来源IP。
X-Forwarded-For记录，这样后端真实服务器日志可以通过“X-Forwarded-For”信
过使用forwardfor选项，HAProxy就可以向每个发往后端真实服务器的请求添加
无法记录客户端真正请求来源的IP，而X-Forwarded-For则可用于解决此问题。通
IP均为HAProxy主机的IP，而非真正访问客户端的地址，这就导致真实服务器端
由于HAProxy工作于反向代理模式，因此发往后端真实服务器的请求中的客户端
接字。bind的使用格式为：
default_backend htmpool
log
option
option
optionhttplog
mode
bind*:80
http
httpclose
forwardfor
global
一frontend部分的配置，配置示例如下：
第12章千万级高并发负载均衡软件HAProxy329
---
## Page 349
330第四部分集群架构篇
中每个选项的含义如下。
balance：此关键字用来定义负载均衡算法。
option abortonclose：如果设置了此参数，
option redispatch：此参数用于cookie 保持的环境中。在默认情况下，HAProxy会将
backend htmpool
接着介绍的是HAProxy配置文件的第四部分-
（4）backend部分
default_backend：指定默认的后端服务器池，也就是指定一组后端真实服务器，
束当前队列中处理时间比较长的连接。
leastconn：此算法会将新的连接请求转发到具有最少连接数目的后端服务器。在
 source：是基于请求源IP 的算法。此算法先对请求的源 IP 进行 hash 运算，然后
static-rr：也是基于权重进行轮叫的调度算法，
口roundrobin：是基于权重进行轮叫调度的算法，
常用的有如下几种：
保证服务正常。
如果设置此参数，就会将客户的请求强制定向到另外一台健康的后端服务器上，以
果后端的服务器出现故障，客户端的cookie是不会刷新的，这就会出现问题。此时，
其请求的后端服务器的 serverID插人cookie中，以保证会话的session持久性。而如
务器组。
而这些真实服务器组将在backend段进行定义。这里的 htmpool就是一个后端服
调整其服务器权重不会生效。
这是一种最公平、最合理的算法。此算法使用频繁。
可以使同一个客户端IP的请求始终被转发到某特定的后端服务器。
将结果与后端服务器的权重总数相除后转发至某台匹配的后端服务器。这种方式
rise 2fall3
rise2
server
option
cookie
oalance
option
option
mode
2fall3
web1 10.200.34.181:80
http
httpchk GET/index.php
SERVERID
roundrobin
abortonclose
redispatch
cookie serverlweight 6 check inter 2000
，可以在服务器负载很高的情况下，自动结
：目前HAProxy支持多种负载均衡算法，
-backend部分的配置，配置示例如下：
，不过此算法为静态方法，在运行时
，在服务器的性能分布比较均匀时，
---
## Page 350
其中，每个参数含义如下：
server  [:port] [param*]
口 server：这个关键字用来定义多台后端真实服务器，不能用于 defaults 和 frontend 部
其中，各个参数的含义如下：
option httpchk
口option httpchk：此选项表示启用HTTP 的服务状态检测功能。HAProxy 作为一个专业
cookie：表示允许向cookie插人SERVERID，每台服务器的SERVERID 可在下面的
server关键字中使用cookie关键字定义。
口[param*]：为后端服务器设定的一系列参数，可用参数非常多，这里仅介绍常用
口：指定连接请求发往真实服务器时的目标端口。在未设定时，将使用客户
：后端真实服务器的IP地址或主机名。
：为后端真实服务器指定一个内部名称，随便定义一个即可。
分。使用格式为：
口version：指定心跳检测时的 HTTP的版本号。
口uri：表示要检测的URL地址，通过执行此URL，可以获取后端服务器的运行状
口method：表示HTTP请求的方式，常用的有OPTIONS、GET、HEAD几种方式。
中其他健康节点上，从而保证整体服务的可用性。optionhttpchk的用法如下：
端backend中某个节点不能服务时，把从frotend端进来的客户端请求分配至backend
的负载均衡器，它支持对backend部分指定的后端服务节点的健康检查，以保证在后
hdr():此算法根据 http 头进行转发，如果指定的 http 头名称不存在，则使
口uri_param：此算法会根据URL路径中的参数进行转发，这样可保证在后端真实服
最后转发到某台匹配的后端服务器上。
uri：此算法会对部分或整个URI 进行 hash 运算，再经过与服务器的总权重相除，
端请求时的同一端口。
态。在正常情况下将返回状态码200，返回其他状态码均为异常状态。
用roundrobin 算法进行策略转发。
务器数量不变时，同一个用户的请求始终分发到同一台机器上。
相对于GET，HEAD 方式更快、更简单。
HEAD方式没有数据返回，仅检查Response的HEAD是不是状态码200。因此，
一般的健康检查可以采用HEAD方式进行，而不是采用GET方式，这是因为
会话较短的环境中，例如基于HTTP的应用。
会话时间较长的场景中推荐使用此算法，例如数据库负载均衡等。此算法不适合
第12章千万级高并发负载均衡软件HAProxy331
---
## Page 351
332第四部分集群架构篇
个HAProxy的监控页面，每个选项的含义如下：
口 stats auth：设置登录 HAProxy 统计页面的用户名和密码。用户名和密码通过冒号分
口 stats realm：设置登录 HAProxy统计页面时密码框上的文本提示信息。
口 stats uri:设置 HAProxy 监控统计页面的URL 路径，可随意指定。例如，指定“stats 
 stats refresh：设置 HAProxy 监控统计页面自动刷新的时间。
这个部分通过 listen 关键字定义了一个名为“admin_stats”的实例，其实就是定义了一
listen admin_stats
HAProxy配置文件的第五部分一
（5）listen部分
uri/haproxy-status”，就可以通过 http://IP:9188/haproxy-status 查看。
割。可为监控页面设置多个用户名和密码，每行一个。
>backup：设置后端真实服务器的备份服务器，仅仅在后端所有真实服务器均不
>weight：设置后端真实服务器的权重，默认为1，最大值为256。设置为0表示