anonymized the user. However, in random walk based
anonymous communication, the adversary may sometimes
have probabilistic knowledge of the initiator. To quantify
all possible sources of information leaks, we now use the
entropy metric to quantify anonymity [13, 52]. The entropy
metric considers the probability distribution of nodes being
possible initiators, as computed by the attackers. In this pa-
per, we will restrict our analysis to Shannon entropy, since
it is the most widely used mechanism for analyzing anony-
mity. There are other ways of computing entropy, such as
guessing entropy [32] and min entropy [53], which we will
consider in the full version of this work. Shannon entropy
is computed as:
i=nX
H(I) =
i=0
(cid:0)pi (cid:1) log2(pi)
(10)
where pi is the probability assigned to node i of being the
initiator of a circuit. Given a particular observation o, the
adversary can ﬁrst compute the probability distribution of
nodes being potential initiators of circuits pijo and then the
corresponding conditional entropy H(Ijo). We can model
the entropy distribution of the system as a whole by con-
sidering the weighted average of entropy for each possible
observation, including the null observation.
P (o) (cid:1) H(Ijo)
H(IjO) =
(11)
X
o2O
We ﬁrst consider the scenario where an initiator performs
an l-hop random walk to communicate with a malicious
destination, and the nodes in the random walk are all hon-
est, i.e., the adversary is external to the system. For this
scenario, we will analyze the expected initiator anonymity
under the conservative assumption that the adversary has
complete knowledge of the entire social network graph.
Malicious destination: A naive way to compute initia-
tor entropy for this scenario is to consider the set of nodes
that are reachable from the terminus of the random walk
in exactly l hops (the adversary’s observation), and assign a
uniform probability to all nodes in that set of being potential
initiators. However, such an approach does not consider the
mixing characteristics of the random walk; l hop random
walks starting at different nodes may in fact have heteroge-
neous probabilities of terminating at a given node.
Figure 6. Unreliability in circuit construction
[Facebook wall post interaction graph].
Figure 7. Circuit build times in Tor as a func(cid:173)
tion of circuit length
the cost of increased communication overhead, since a ﬁxed
number of testing walks must be performed within the du-
ration of the time slot. We can see this trade-off in Figure 6.
We consider two churn models for our analysis: (a) nodes
have a mean lifetime of 24 hours (reﬂecting behavior of Tor
relays [28] ), and (b) nodes have a mean lifetime of 1 hour
(reﬂecting behavior of conventional P2P networks). For the
two scenarios, using a time slot duration of 3 hours and one
of 5 minutes, respectively, results in a 2-3% probability of
getting an unreliable random walk for up to 25 hops.
Overhead: There are three main sources of communi-
cation overhead in our system. First is the overhead due to
setting up the neighbor lists; which requires about d2 KB
of communication, where d is the node degree. The sec-
ond source of overhead is the testing random walks, where
nodes are required to perform about six such walks of length
25. The third source of overhead comes from participation
in the Whanau DHT. Typically, key churn is a signiﬁcant
source of overhead in Whanau, requiring all of its routing
tables to be rebuilt. However, in our scenario, only the val-
ues corresponding to the keys change quickly, but not the
keys themselves, requiring only a modest amount of heart-
beat trafﬁc [29]. Considering the Facebook wall post topol-
ogy, we estimate the mean communication overhead per
node per time interval to be only about 6 MB. We also eval-
uate the latency of constructing long onion routing circuits
through experiments over the live Tor network. We used
the Torﬂow utility to build Tor circuits with varying circuit
(a)
(b)
(c)
(d)
(e)
Figure 8. Expected entropy as a function of random walk length using (a) Facebook wall post graph (b) Facebook link
graph (c) Anonymous Interaction graph (d) Anonymous link graph and (e) CDF of entropy for Facebook wall graph
and malicious destination.
We now outline a strategy that explicitly considers the
mixing characteristics of the trust topology. Let the termi-
nus of an l hop random walk be node j. The goal of the
adversary is to compute probabilities pi of a particular node
being the initiator of the circuit:
(12)
ijP
P l
x P l
xj
pi =
where P l denotes the l-hop transition matrix for the ran-
dom walk process. Note that even for moderate size social
graphs, the explicit computation of P l is infeasible in terms
of both memory and computational constraints. This is be-
cause even though P is a sparse matrix, iterative multiplica-
tion of P by itself results in a matrix that is no longer sparse.
To make the problem feasible, we propose to leverage the
time reversibility of our random walk process. We have
previously modeled the random walk process as a Markov
chain (Theorem 2 in Appendix). Markov chains that satisfy
the following property are known as time-reversible Markov
chains [3].
(cid:25)i (cid:1) Pij = (cid:25)j (cid:1) Pji
(13)
Both the conventional random walk and the Metropolis-
Hastings random walk satisfy the above property and are
thus time-reversible Markov chains. It follows from time
reversibility [3], that:
(cid:25)i (cid:1) P l
ij = (cid:25)j (cid:1) P l
ji =) P l
ij =
(cid:1) P l
ji
(cid:25)j
(cid:25)i
(14)
ij using P l
ji. Let Vj be
Thus it is possible to compute P l
the initial probability vector starting at node j. Then the
probability of an l hop random walk starting at node j and
ending at node i can be computed as the i’th element of the
vector Vj(cid:1)P l. Observe that Vj(cid:1)P l can be computed without
computing the matrix P l:
Vj (cid:1) P l = (Vj (cid:1) P ) (cid:1) P l(cid:0)1
(15)
Since P is a sparse matrix, Vj (cid:1) P can be computed in O(n)
time, and Vj(cid:1)P l can be computed in O(nl) time. Finally, we
can compute the probabilities of nodes being potential ini-
tiators of circuits using equation (12), and the correspond-
ing entropy gives us the initiator anonymity. We average the
resulting entropy over 100 randomly chosen terminal nodes
j to compute the expected anonymity.
Figure 8(a)-(d) depicts the expected initiator anonymity
as a function of random walk length for different social net-
work topologies. We can see that longer random walks re-
sult in an increase in anonymity. This is because for short
random walks of length l in restricted topologies such as
trust networks, not every node can reach the terminus of the
random walk in l hops. Secondly, even for nodes that can
reach the terminus of the random walk in l hops, the proba-
bilities of such a scenario happening can be highly heteroge-
neous. Further more, we can see that conventional random
walks converge to optimal entropy in about 10 hops for all
four topologies. In contrast, the Metropolis-Hastings ran-
dom walks used in Pisces take longer to converge. This is
because random walks in Pisces have slower mixing prop-
erties than conventional random walks. However, we can
see that even the Metropolis-Hastings random walk starts to
converge after 25 hops in all scenarios.
To get an understanding of the distribution of the entropy,
we plot the CDF of entropy over 100 random walk samples
in Figure 8(e). We can see that the typical anonymity of-
fered by moderately long random walks is high. For exam-
ple, using a Metropolis-Hastings random walk of length 25,
95% of users get an entropy of at least 11 bits. So far, we
observed that Metropolis-Hastings random walks need to be
longer than conventional random walks for equivalent level
of anonymity against a malicious destination. Next, we will
see the beneﬁt of using Metropolis-Hastings random walks
in Pisces, since they can be secured against insider attacks.
Insider adversary: We now analyze the anonymity of
the system with respect to an insider adversary (malicious
participants).We ﬁrst consider an adversary that has g at-
log h ), and
tack edges going to honest nodes, with g = O( h
10 Sybils per attack edge [67]. When both the ﬁrst and the
last hop of a random walk are compromised, then initia-
tor entropy is 0 due to end-to-end timing analysis. Let Mi
be the event where the ﬁrst compromised node is at the ith
hop and the last hop is also compromised. Suppose that the
previous hop of the ﬁrst compromised node is node A. Un-
der this scenario, the adversary can localize the initiator to
the set of nodes that can reach the node A in i (cid:0) 1 hops.
If we denote the initiator anonymity under this scenario as
H(IjMi), then from equation (11), it follows that the over-
all system anonymity is:
P (Mi) (cid:1) H(IjMi) + (1 (cid:0) i=lX
i=lX
i=1
H(IjO) =
P (Mi)) (cid:1) log2 n
i=1
(16)
We compute P (Mi) using simulations, and H(IjMi),
using the expected anonymity computations discussed
above. Figure 9(a) depicts the expected entropy as a func-
tion of the number of attack edges. We ﬁnd that Pisces pro-
vides close to optimal anonymity. Moreover, as the length
of the random walk increases, the anonymity does not de-
grade. In contrast, without any defense, the anonymity de-
creases with an increase in the random walk length (not
shown in the ﬁgure), since at every step in the random walk,
there is a chance of the random walk being captured by
the adversary. At g = 3000, the anonymity provided by
a conventional 10-hop random walk without any defenses
(used in systems such as Drac and Whanau) is 14:1 bits,
while Pisces provides close to optimal anonymity at 14:76
bit. For uniform probability distributions, this represents an
increase in the size of the anonymity set by a factor of 1.6.
It is also interesting to see that the advantage of using Pisces
increases as the number of attack edge increases. To further
investigate this, we consider the attack model with perfect
Sybil defense and vary the number of attack edges. Fig-
ure 9(b) depicts the anonymity as a function of the number
of attack edges. We can see that at 60 000 attack edges, the
expected anonymity without defenses is 7:5 bits, as com-
pared to more than 13 bits with Pisces (anonymity set size
increases by a factor of 45).
with
Comparison
ShadowWalker:
Shad-
owWalker [38] is a state-of-the-art approach for scalable
anonymous communication that organizes nodes into a
structured topology such as Chord and performs secure
random walks on such topologies. We now compare our
approach with ShadowWalker. To compute the anonymity
provided by ShadowWalker, we use the fraction f of
malicious nodes in the system as an input to the analytic
model of ShadowWalker [38], and use ShadowWalker
parameters that provide maximum security. Figure 10(a)
depicts the comparative results between Pisces (using
l = 25) and ShadowWalker. We can see that Pisces
signiﬁcantly outperforms ShadowWalker. At g = 1000
attack edges, Pisces provides about two bits higher entropy
than ShadowWalker, and this difference increases to six
bits at g = 3000 attack edges1. This difference arises
because Pisces directly performs random walks on the
social network topology,
limiting the impact of Sybil
attackers, while ShadowWalker is designed to secure
random walks only on structured topologies. Arranging
nodes in a structured topology loses information about trust
relationships between users, resulting in poor anonymity
for ShadowWalker. 2
For comparison, we also consider the attack model with
perfect Sybil defense and vary the number of attack edges.
Figure 10(b) depicts the results for this scenario. We
can see that even in this scenario where trust relation-
ships lose meaning since the adversary is randomly dis-
tributed, Pisces continues to provides comparable anony-
mity to ShadowWalker. Pisces’s entropy is slightly lower
since social networks are slower mixing than structured net-
works, requiring longer length random walks than Shad-
owWalker and thereby giving more observation points to
the adversary.
Performance optimization: We now analyze the anon-
ymity provided by our two hop optimization, which uses
the k-th hop and the last hop of the random walk for anony-
mous communication. To analyze anonymity in this sce-
nario, let us redeﬁne Mi (i 6= k) as the event when the ﬁrst
compromised node is at the i-th hop, the last node is also
compromised, but the k-th node is honest. Let Mk be the
event where the k-th hop and the last hop are compromised
(regardless of whether other nodes are compromised or not)
1At such high attack edges, ShadowWalker may even have difﬁculty in
securely maintaining its topology, which could further lower anonymity.
2This observation is also applicable to Tor. Pisces provides 5 bits higher
entropy than Tor at g = 3000 attack edges.
(a)
(b)
Figure 9. Entropy as a function of fraction of attack edges using (a) realistic model of an imperfect Sybil
defense (10 Sybils per attack edge) and (b) perfect Sybil defense for Facebook wall post interaction
graph. Note that the "No Defense" strategy models the random walks used in systems such as Drac
and Whanau.
(a)
(b)
Figure 10. Comparison with ShadowWalker. Entropy as a function of fraction of attack edges using (a) realistic
model of an imperfect Sybil defense (10 Sybils per attack edge) and (b) perfect Sybil defense for
Facebook wall post interaction graph.
and the deﬁnition of Ml remains the same as before, i.e.,
only the last hop is compromised. We can compute system
anonymity as:
lX
H(IjO) =
i=k(cid:0)1X
+ (1 (cid:0) i=lX
i=1
P (Mi) (cid:1) H(IjMi) +
P (Mi) (cid:1) H(IjMk)
i=k+1
P (Mi)) (cid:1) log2 n
(17)
i=1
Figure 11 depicts the anonymity for our two hop opti-
mization for different choices of k. We see an interesting
trade-off here. Small values of k are not optimal, since even
though the ﬁrst hop is more likely to be honest, when the
last hop is compromised, then the initiator is easily local-
ized. On the other hand, large values of k are also not opti-
mal, since these nodes are far away from the initiator in the
trust graph and are less trusted. We ﬁnd that optimal trade-
off points are in the middle, with k = 12 providing the best
anonymity for our optimization. We also note that the an-
onymity provided by our two hop optimization is close to
the anonymity provided by using all 25 hops of the random
walk.
Figure 11. Anonymity using the two hop per(cid:173)
formance optimization, Facebook wall graph,
10 Sybils/attack edge. k = 12 results in pro(cid:173)
vides a good trade(cid:173)off between anonymity
and performance.
Selective denial of service: Next, we evaluate Pisces
anonymity against the selective DoS attack [6].
In this
attack, an adversary can cause a circuit to selectively fail
whenever he or she is unable to learn the initiator identity.
This forces the user to construct another circuit, which re-
sults in a degradation of anonymity. We found that the
degradation in initiator anonymity under this attack is less
than 1%. The reason why Pisces is less vulnerable to se-
lective DoS as compared with other systems such as Tor is
due to the use of social trust. With high probability, most
random walks traverse only the honest set of nodes. Please
see our technical report for more details [2].
Multiple communication rounds: So far, we had lim-
ited our analysis to a single communication round. Next,
we analyze system anonymity over multiple communica-
tion rounds. Let us suppose that in communication rounds
1 : : : z, the adversary’s observations are O1 : : : Oz. Let us
denote a given node’s probability of being the initiator after
z communication rounds by P (I = ijO1; : : : ; Oz). Now,
after communication round z + 1, we are interested in com-
puting the probability P (I = ijO1; : : : ; Oz+1). Using
Bayes’s theorem, we have that:
P (I = ijO1; : : : ; Oz+1) =
P (O1; : : : ; Oz+1jI = i) (cid:1) P (I = i)
P (O1; : : : ; Oz+1)
(18)