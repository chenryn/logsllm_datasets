### Section V-C: Common Families in the Dataset
This section provides an overview of the most common families within our dataset. 

### Section V-B: Top Signers Behind Unwanted Apps
In this section, we detail the top signers responsible for the unwanted applications in our dataset.

### Comparison with Prior Work
Shen et al. [67] measured the fraction of devices with antivirus (AV) detections across 6 million Android devices in April 2015. These detections were categorized into five types: trojans, infostealers, backdoors, hacktools, and spyware. However, they only provided the fraction of rooted and non-rooted devices with at least one detection in each category, ranging from 0.10% to 0.71%. This makes it challenging to infer the total prevalence, complicating direct comparison. Our study, which includes potentially unwanted programs (PUPs) and covers a four-month period, reports a prevalence range of 10% to 24%, significantly higher than Shen et al.'s findings. This discrepancy is likely due to the broader scope of our measurement and the potential increase in unwanted apps over the past four years as Android became the dominant operating system on user devices.

We also examined recent threat reports from security vendors [7], [12]. However, these reports focus on the number of detections and new samples discovered, rather than prevalence on devices, making accurate comparison difficult. Other studies have measured malware and PUP prevalence on Windows enterprise hosts [46], [79]. Some of these studies, such as [46], cover a much longer time period (three years versus four months in our study), further complicating prevalence estimates. Yen et al. [79] observed that 15% of hosts in a large enterprise encountered at least one detection by a specific AV engine over a four-month period in 2014. Although Yen et al. refer to these as malware, their definition includes all AV detections. This prevalence falls within our 10%-24% range, albeit slightly lower than our 18.3% estimate with the selected threshold, computed for a four-month period in mid-2019.

### Takeaway
Even the conservative estimate of 18.3% suggests that the prevalence of unwanted apps on Android devices is similar to, or slightly higher than, that on Windows (enterprise) hosts. Despite the numerous security improvements in the Android ecosystem, such as app isolation and permission models, the security posture regarding unwanted apps does not appear to be better than that of Windows (enterprise) hosts.

For the remainder of the paper, "unwanted apps" refers to the 3 million APKs flagged by at least four AV engines at t=4.

### B. Unwanted App Signers
We use the certificate's public key hash to identify the signer, i.e., the entity that signs an APK. For each of the 4.1 million signers in the full reputation logs, we compute the signer detection ratio (SDR), defined as the fraction of unwanted APKs signed by the signer over the total number of APKs signed by them. The SDR helps identify signers with a significant fraction of unwanted APKs. The distribution is bimodal, with 86% of signers having a 0% SDR and 13% having a 100% SDR, with only 1% in between.

A signer is considered unwanted if their SDR is ≥ 4% and they sign at least 100 unwanted APKs. These thresholds were chosen to minimize flagging signers with a small number of compromised APKs over a short period, who may have addressed the issue. Using these criteria, we flag 146 (0.003%) of all signers as unwanted, with only 70 of these being present in over 1,000 devices.

Table V lists the top 10 unwanted signers by device prevalence. For each signer, the table includes the ranking, certificate thumbprint, a name corresponding to a well-known key or a distinguishing substring of the certificate's Subject DN, the number of devices with installed APKs from the signer, the number of distinct package names of APKs signed by the signer, the total number of APKs signed by the signer, the number of unwanted APKs among those, and the SDR.

Six of the top 10 signers correspond to generic certificates used by multiple developers. Ranks 1 and 3 are default AOSP keys. Signing an APK with an AOSP key is a known security issue, as the private keys are widely known, allowing any other apps signed with the same key to perform updates. There are 1.83 million (1.5%) devices with APKs signed by any of the AOSP keys. Since the Play Store does not allow apps signed with these keys to be uploaded, these apps must have been installed from alternative sources. APKs signed with these keys often impersonate popular apps like Minecraft and WhatsApp, facilitating unwanted app developers to blend in with legitimate developers. Prior work has noted the use of AOSP keys in custom firmware images [80], [82]. Our study highlights their abuse and the affected device fraction.

At rank 8, there is an Android Debug certificate, used by Android Studio for debugging. Similar to AOSP certificates, these should not be used outside of debugging, and apps using them cannot be uploaded to the Play Store.

Generic certificates at ranks 2, 5, and 10 correspond to the SeattleCloud [62], AppsGeyser [19], and WordPress2Apk [78] online app generators (OAGs). OAGs automate app development, lowering the technical skill required by app developers and offering to publish the apps on the Play Store [55]. Our results indicate that OAGs publish unwanted apps from their clients, possibly due to limited vetting of the apps they publish. Identifying such generic certificates is crucial to avoid false positives in detection systems that leverage signer reputation and to accurately attribute apps to their owners [64].

The remaining four signers correspond to specific unwanted app developers. Both 1Mobile and Netdragon do not have any apps in the Play Store. 1Mobile publishes an alternative market with the same name. The 1Mobile market app (me.onemobile.android) has 17,466 APKs, indicating possible polymorphism to bypass detection. NetDragon sold part of its business to Baidu in July 2013 [28]. We believe NetDragon appears in the list due to the 2015 discovery of a backdoor in Baidu’s MoPlus SDK [66]. Both Outfit7 and iMobLife have multiple apps in the Play Store. Surprisingly, iMobLife uses a large number of Play developer accounts to distribute performance optimization and mindfulness apps, including accounts like iMobLife Inc.; AIO Software Technology CO., Ltd.; Daily Yoga Culture Technology Co., Ltd; HK SMARTER MOBI TECHNOLOGY CO., LIMITED; SM Health Team; and The Unexplainable Store®.

### Takeaway
In addition to APK polymorphism, unwanted app developers also use developer account polymorphism, providing isolation between apps in different accounts. This allows some apps to remain available even if others are removed by the market. We observe the abuse of AOSP keys to sign unwanted apps, present in 1.83 million devices. Additionally, online app generators are being abused to generate and publish unwanted apps.

### C. Family Classification
To understand the most prevalent threats affecting Android devices, we classify the unwanted APKs into families. We feed the AV labels from the 4.6 million VirusTotal (VT) reports into the AVClass malware labeling tool [63]. AVClass outputs the most likely family name for each sample and classifies them accordingly.