# 【CTF攻略】VULNHUB - 如果你能抓住我 Writeup
|
##### 译文声明
本文是翻译文章，文章来源：jamesbower
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
**翻译：**[ **V1ct0r**](http://bobao.360.cn/member/contribute?uid=2665001095)
**稿费：200RMB（不服你也来投稿啊！）**
**投稿方式：发送邮件至linwei#360.cn，或登陆**[
**网页版**](http://bobao.360.cn/contribute/index) **在线投稿**
**0x00 Intro**
VULNHUB上面有非常多有趣的镜像资料，提供给我们练习和学习。本文我主要记录了今年11.9日发布的镜像题目 – SkyDog: 2016 – Catch
Me If You Can 相关解题的思路和过程，希望与大家一同交流学习。
**0x01 Get Started!**
我们在VULNHUB上面下载这一期的镜像文件：
[https://www.vulnhub.com/entry/skydog-2016-catch-me-if-you-can,166/](https://www.vulnhub.com/entry/skydog-2016-catch-me-if-you-can,166/)
非常有趣的是本期是以《Catch Me If You Can》 – 逍遥法外 这部电影作为背景剧情的
如果有时间的话可以先看看这部电影，说不定对后面解题有所帮助
**Download (Mirror):**[
https://download.vulnhub.com/skydog/SkyDogConCTF2016VBoxV10.ova](https://download.vulnhub.com/skydog/SkyDogConCTF2016VBoxV10.ova)
**Download (Torrent):**[
https://download.vulnhub.com/skydog/SkyDogConCTF2016VBoxV10.ova.torrent](https://download.vulnhub.com/skydog/SkyDogConCTF2016VBoxV10.ova.torrent)
下载完成后直接在VirtualBox中导入我们的镜像，启动即可
根据题目的提示我们一共需要拿到8个FLAGS
**0x02 Get Flags**
首先我们需要探测一下这个Server开放的端口服务，我们用Nmap对它进行一个全面扫描：
    nmap.exe -T4 -A 192.168.56.102
[](http://chuantu.biz/t5/41/1478921191x1972047504.jpg\))
我们看到了80端口和443端口是开放的，所以我们访问192.168.56.102
看了一下网站页面以及源码似乎没得到什么新的提示，于是就开始常规的检测思路
由于是在本地，我直接用WVS对网站进行了扫描，从而来探测网站的目录结构和常见漏洞，结果发现存在一个列目录的漏洞：
主要涉及了两个目录：
    http://192.168.56.102/assets/
    http://192.168.56.102/oldIE/
此外我们现在对网站的目录结构也有了大致的了解了
**Flag 1**
上面我们搜集到的唯一可以进一步看下去的信息就是存在的一个列目录漏洞。而第一个目录就是用于存放网站的一些资源文件，一些图片、css和js之类的，看了看没有什么特别的；第二个目录看上去比较奇怪，就点进去看了看，发现里面有一个html5.js的文件
    http://192.168.56.102/oldIE/html5.js
发现了这一串字符：
    666c61677b37633031333230373061306566373164353432363633653964633166356465657d
根据Flag 1的提示
    Flag#1 - "Don’t go Home Frank! There’s a Hex on Your House"
我们可以推测这就是Hex后的字符串
直接Hex Decoding下，发现果然是Flag
    flag{7c0132070a0ef71d542663e9dc1f5dee}
**Flag 2**
Flag 1中hash解密后发现是：nmap，于是我又使用Nmap对这个目标进行了更加深和全面的扫描：
    nmap.exe 192.168.56.102 -vv -sV -p1-65535 -o details.txt
扫描结果之中又发现了一些有趣的信息：
    22/tcp     closed ssh       reset   ttl 64
    80/tcp     open   http      syn-ack ttl 64 Apache httpd 2.4.18 
    443/tcp    open   ssl/http  syn-ack ttl 64 Apache httpd 2.4.18 
    22222/tcp  open   ssh       syn-ack ttl 64 OpenSSH 7.2p2 Ubuntu 4ubuntu2.1
在22222端口上开放了OpenSSH的服务，于是尝试连接
    ssh PI:EMAIL -p 22222
在WARNING中发现了第二关的Flag
    Flag{53c82eba31f6d416f331de9162ebe997}
**Flag 3**
Flag 2的md5解密后是：encrypt
我们再看看本关的提示信息
    Flag #3 Be Careful Agent, Frank Has Been Known to Intercept Traffic Our Traffic.
然后想到了我们之前用Nmap扫描的时候还发现了：
    443/tcp   open   ssl/http syn-ack ttl 64 Apache httpd 2.4.18
于是访问 https://192.168.56.102
发现证书是有问题的，然后进一步查看证书相关信息，在信息之中发现了Flag
    flag3{f82366a9ddc064585d54e3f78bde3221}
**Flag 4**  
Flag 3中的md5解密之后为：personnel
猜测是目录之类的，访问 http://192.168.56.102/personnel
得到新的提示：
    ACCESS DENIED!!! You Do Not Appear To Be Coming From An FBI Workstation. Preparing Interrogation Room 1. Car Batteries Charging....
这里说我们不是来自 FBI Workstation 的，加上访问被拒绝
这时想到了本关的提示：
    Flag#4 - “A Good Agent is Hard to Find"
感觉这里Agent应该是双关（本意是：探员），按照这些提示通常的思路就是一个User-Agent的问题了，但是这个User-Agent又应该是什么呢？因为User-Agent是用来标识用户的操作系统、浏览器以及其版本信息等，联系到之前有个oldIE的目录，我又去在192.168.56.102//html5.js下搜索相关关键词：agent、FBI，发现找到了如下信息
    /* maindev -  6/7/02 Adding temporary support for IE4 FBI Workstations */
    /* newmaindev -  5/22/16 Last maindev was and idoit and IE4 is still Gold image -@Support PI:EMAIL */
想到了伪造IE4的User-Agent信息
    Mozilla/4.0 (compatible; MSIE 4.0; Windows NT)
MSIE 后面对应的数字就是版本号
修改后我们的User-Agent头之后发包，得到了Flag 4
    flag{14e10d570047667f904261e6d08f520f}
并且我们得到了一个新的提示：
    Clue = new+flag