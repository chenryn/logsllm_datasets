法断定某个特定数值是正确的。即我们不能去测试某个单独的值，
而应该关注诸如平均值之类的数据。
即使我们关注平均值，测试还是很困难的。假设一个RNG的所有输
出的平均值应当是7，且第一个输出值是6.5。这没有问题，因为序
列的值不会（也不应该）总是7，它应该从长远角度来看是7。那么
为了使平均值正好是7，下一个值就该是7.5吗？不，那就会让第二
个值变得可以预测了。那是不是应该在得到三个输出值后均值该为
7？不，那样第三个值又变得可以预测了。我们任何时候都不能要求
在固定数量的输出之后平均值一定是7。我们只能说在很长很长的输
出序列之后，平均值通常接近于7。这些含糊的字眼“经常”和“接近
正是困难所在。这些词汇是可以被变得更精确的，但这要求做些相
应工作。
既然我们必须编写测试来验证一些“经常”发生的事，我们就得量化
所说的“经常”，并且我们不能简单地说“总是”。这引出了RNG的测
试是微妙的第三个原因：我们编写的任何测试都将偶尔失败。如果
测试从未失败，那么它证明随机数序列具有可预测性。所以我们的
测试不仅是能偶尔失败，而且应当偶尔失败。
如果原则上不可能编写出总是能通过的测试，那我们该怎么做呢？
到最后一些主观的判断是必需的。然而我们可以做的不只是打印出
一列输出值然后让一个统计学家去看序列是不是对的。回到描述词
汇“经常"和“接近”上来。这两个概念经常是互相取舍的。我们可以
先决定“经常”是指什么，然后确定相应的“接近"的概念。如果我们
想要测试在每1000次运行中只失败1次，我们可以选择一个“接近”的
定义来使其发生。但是只是相对平均而言！即使一个每1000次失败
一次的测试也有可能在一次运行中失败两次。
[]Veith,Gene Edward，"Acqured taste"，World Magazine
2008.02.29
1953
---
## Page 1955
均匀随机数发生器
要求一个程序产生随机数又不提供更多信息是不合理的。什么类型
的数字：整型还是浮点型？从什么范围？是应该所有值的几率都一
样，还是有些值比其他值儿率更大？在统计上，我们需要知道随机
数应当遵从何种分布。只有这样我们才能测试软件是否满足需求。
最基本的RNG在给定的区间里国以相同的几率产生随机数。这被称
为是均匀RNG。当人们说他们需要随机数但是没有更多信息的时
候，这就往往是他们心里所想的。这是最重要的随机数产生问题，
因为它一旦被解决，我们就可以借助它来解决其他的问题。换言
之，产生的随机数的伟大策略是这样的：
1.产生均匀分布在（0,1）区间的随机数。
2.将这些值转换成其他任何需要的分布。
这个策略中的第一步是最难的。幸运的是，这个问题已经对于很多
实用的情况来讲已经解决了。有着一些均匀RNG，像马其赛特旋转
（MersenneTwister）[2]，已经被专家们广泛地研究过。这些算法有
很好的理论依据，并且久经实践考验，如GeorgeMarsaglia的顽固电
池测试3。认为你自己已经有了一个好的RNG是很容易的，所以我
们多数人都应该使用被专家们验证过的均匀RNG。这些标准算法的
实现很容易找到。
多数人不需要为均匀随机数的产生去开发一种新的算法，但是很多
人需要为标准算法去做一个新的实现，当然这些实现都需要被测
试。例如，你可能需要测试一个标准算法在一种新的编程语言上的
移植版本。在这种情况下，你已可以从原始发生器中产生比如一百
万个值，然后在新发生器中使用相同的种子，看是否能产生完全一
致的输出序列。
这是一个随机数发生器没有确定性测试规则的一个例外。
多数测试人员会担心这个伟大策略中的第二步：测试用来转换均匀
随机数序列到其他分布序列的代码。虽然很少人并发他们自已的均
匀随机数发生器，但是很多人有理由开发定制的非均匀随机数发生
器。
1954
---
## Page 1956
[1]就是否应当包含区间端点而言各个发生器是不一致的。在我的观
点看来，不包含两个端点可以减少困难。但是有些产生器会包含一
个或两个端点。
[2] Matsumoto,Makoto,and Takuji Nishimura."Mersenne twister:a 623
dimensionally equidistributed uniform pseudorandom number
generator,"ACM Trans.Model.Comput.Simul. Vol.8,No.1(1998)
[3]Gentle,JamesE.RandomNumber Generation and Monte Carlo
Methods.Springer,1998
非均匀随机数发生器
假设你要为一个杂货商店决定需要雇佣多少个收银员。如果顾客按
照规律的时间间隔到达并且消耗相同的时间结账离开，那这个问题
就简单了。问题是现实中，顾客并不像发条那样准时规律地到达，
也不会花相同的时间结账离开。一些顾客冲进商店可能就为了一包
口香糖，而另一些可能来这里要采购一个八口之家一星期的食物和
供给。
有一个完整的数学分支叫排队论，专注于研究像杂货商店需要多少
收银员这类问题。经常地，排队论假设每一个顾客需要的时间是呈
指数分布的，也就是，服务时间的分布看起来像函数e。相当一部
分顾客很快就离开，有一些需要更多点时间，少数一些需要很长时
间。对于服务时间是多久并没有一个理论上的限制，但是如下面第
一幅图所示，随着时间的增长其可能性下降很快。相同的分布也经
常被用来对于顾客从到达至离开的时间进行建模。
指数分布是非均匀分布的一个常用例子。另一个常用例子是高斯分
布（也称正态分布）山正态分布为下列情形提供了很好的模型：估
计测量误差，描述澳洲男人的身高，预测IQ测验的分数等。在正态
分布中，如下面第二幅图所示，值趋向于聚集在均值附近，随着与
均值的距离变大而对称性地变小。
软件已慢慢可以做到根据众所周知的分布，如指数分布和正态分
布，来产生随机数。通常流行的软件库是被很好地测试过的，但并
非总是如此。所以，尽管有些人信任这些软件库，还是会写一些测
试来检查那些使用的RNG。这样做不仅是测试软件库的质量，更是
测试使用者对于软件库的理解。
1955
---
## Page 1957
一种常见的错误就是对参数化的误解。例如，正态分布有两个参
数：平均值u和标准差o。对人们来说指定标准差o或者方差o2是很
平常的。如果文档声称一个RNG给出的样本服从正态分布F（3，8）
中，那意味着标准差是8（方差是64），还是标准差是8而方差是8？
1.0
0.8
0.6
0.4
0.2
2
0.3
0.2
0.1
2
1956
---
## Page 1958
更糟的是，在使用默认值时，参数化约定中一些常见的差异可能无
法体现。例如，一个正态分布的标准差以1作为默认值。但是如果
0=1，那同样地o2=1。甚至有人将正态分布用精度来参数化，1/o2
，在这种情况下同样等于1。一个使用默认值的测试无法发现对于参
数约定的误用。指数分布也类似。有人用平均值u做参数化，而另一
些人用比率1/μ。默认值还是1，所以任何关于是用平均值还是用比
率的混淆都会被默认值掩饰掉。
没有库能包含每一个用户想要的每一种分布。例如C+标准库，只
提供了7种分布，但是有几十种分布族都是很常用的。可能只针对某
个特定问题的新的分布总是不断出现。很多人需要去写定制的非均
匀随机数发生器，而对此我们也已经有些常用的技术（逆向CDF变
换、采纳-不采纳算法等）。
11正态分布这么命名并不意味着它就像字面意义上那样“正态”。这
个名字起源于拉丁词normalis，原意为垂直的。这个名字与引起卡尔
弗雷德里希高斯（CarlFriedrichGauss）的兴趣来研究这个分布问题
有关。
逐级的测试
如果一个非均匀随机数发生器以一个高质量的均匀随机数发生器作
为核心，那么测试的主要工作就是检验发生器的输出是不是有正确
的分布。幸运的是，非常小的编码错误经常导致非常恶劣的输出错
误，所以简单的测试可能就足够把这些缺陷排查出来。但是也有一
些缺陷很微妙，这时候高级别的测试就是必需的。推荐的方法是从
最简单的测试开始，逐渐达到更高级的测试。最简单的测试除了易
于实现之外，同样易于理解。一个开发人员更有希望对这样的话做
出好的反应：“看起来你的发生器的平均值是7，而不是期望的8”，
而不是这样的话：“我从柯尔莫哥洛夫-斯米尔诺夫（Kolmogorov-
Smirnov）测试中得到了一个很小的p值”。
值域测试
如果一个概率分布有值域限制，那最简单的测试就是看输出值是否
落在值域之内。例如，一个指数分布仅能产生正值。如果你的测试
发现了任何一个负值，那你就找到了一个缺陷。但是对于其他分
布，如正态分布，就没有理论上输出的边界：所有的输出值都有可
能，尽管有些值格外不可能出现。
1957
---
## Page 1959
输出值域中有一个方面无法用黑盒测试来有效地检验：边界值。测
试区间的端点是否被包含是不切实际的。例如，假设一个RNG应当
返回半开区间（0，11中的值，检验1是否可能被返回是不现实的
因为它能被返回的可能性非常小。同样地，如果算法会错误地返回
0，但是可能性是那么小，几乎不会在测试中被发现。这种边界值的
错误很常见，它们难以通过测试来发现，并且会导致软件崩溃。
平均值测试
较明显的一种可以测试随机数发生器的方法是：取大量输出值的平
均值，看是否接近于理论值。例如，如果你取随机数发生器的一百
万个输出求平均值，而这个发生器产生平均值4、标准差3的正态分
布，你会期望得到的平均值接近4。问题是有多接近？
正态分布是一个特殊情况，它有个简单的答案。独立的正态值序列
的平均值，本身也服从具有相同平均值的正态分布。所以如果我们
对平均值为4的正态分布的一百万个样本求平均值，那么所得的平均
值仍然服从平均值为4的正态分布。但是所得平均值的标准差是单独
要法则就是样本有95%的可能分布在平均值左右距离为2倍标准差的
区间之内。这意味着如果我们从平均值4、标准差3的正态分布随机
数发生器中取一百万个样本，我们可以期望其平均值有95%的可能
落在3.994和4.006之间。然而，这样的测试有5%的可能会失败。如
果你希望自己的测试能更多地通过，则可以将条件放宽松。例如，
正态分布的样本有99.7%的可能分布在平均值左右距离为3倍标准差
的区间之内，所以检测是否一百万个样本的平均值落在3.991和4.009
之间的测试，每一千次只会失败三次。
总的来说，测试一个平均值u标准差o的正态分布的样本的方法，就
是取n个样本的平均值，这里n是一个很大的数，警如n=106。然后检
1958
---
## Page 1960
在实践中，一个测试具体多久失败一次可能没那么重要。如果有个
缺陷导致随机数的平均值超出范围，那你的测试多半每次都会失
败。这些类型的错误通常并不微妙。测试要么绝大多数情况都能通
过，要么几乎每次都失败。我不记得曾经怀疑过是否一个测试失败
得过于频繁。