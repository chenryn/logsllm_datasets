  * 进攻模式  
-爬行网站
  * 工具
    * recon-ng
    * dnsrecon
    * theHarvester
#### 被动模式
##### DNS 枚举
**DNS 枚举** 是查找组织的所有DNS服务器及其相应记录的过程。
公司可能同时拥有内部和外部DNS服务器，可以产生用户名，计算机名称和潜在目标系统的IP地址等信息。 有很多工具可以用来获取执行DNS枚举的信息。
可用于DNS枚举的工具的例子是NSlookup，DNSstuff，美国互联网号码注册局（ARIN）和Whois。
要枚举DNS，您必须了解DNS及其工作原理.
你必须知道DNS记录的知识。 DNS记录列表提供了存储在域名系统（DNS）的区域文件中的资源记录类型（数据库记录）的概述。
DNS实现分布式，分层和冗余数据库，用于与Internet域名和地址相关的信息。 在这些域服务器中，不同的记录类型用于不同的目的。
以下列表介绍常见的DNS记录类型及其用法：
**DNS记录类型** | 方法 | 说明  
---|---|---  
dns query | A | **_地址记录_** ，返回32位IPv4地址，最常用于将主机名映射到主机的IP地址，但也用于DNSBL，在RFC
1101中存储子网掩码等。  
dns query | CNAME | **_CNAME_** 被称为规范名字。这种记录允许您将多个名字映射到同一台计算机  
dns query | AAAA | **_IPv6的地址记录_** , 返回一个128位的IPv6地址，最常用于将主机名映射到主机的IP地址。  
dns query | MX | **_邮件交换记录_** ，将域名映射到该域的邮件传输代理列表。  
dns query | NS | **_名称服务器记录_** ，委派一个DNS区域使用给定的权威名称服务器  
dns query | SOA | **_权限记录区域_**
，指定关于DNS区域的权威信息，包括主要名称服务器，域管理员的电子邮件，域序列号以及与刷新区域有关的多个定时器。  
dns query | SPF | **_发件人策略框架_**
，一个简单的电子邮件验证系统，旨在通过提供一种机制来检测电子邮件欺骗，以允许接收邮件交换者检查来自域的传入邮件来自该域管理员授权的主机。  
dns query | TXT | **_文本记录_** ，最初用于DNS记录中任意可读的文本。  
dns query | PTR | **_指针记录_** ，指向规范名称的指针。 与CNAME不同，DNS处理停止，只返回名称。
最常见的用途是实施反向DNS查询，但其他用途包括DNS-SD等。  
dns query | SRV | **_服务定位器_** ，通用服务位置记录，用于较新的协议，而不是创建协议特定的记录，如MX。  
dns query | NSEC | **_Next安全记录_** ，DNSSEC的一部分 - 用于证明名称不存在。 使用与（过时的）NXT记录相同的格式。  
dns query | AXFR | **_授权区域传输_** ，将主区域名称服务器上的整个区域文件传输到辅助名称服务器。 **DNS区域传输**
通常用于跨多个DNS服务器复制DNS数据，或备份DNS文件。
用户或服务器将执行来自“名称服务器”的特定区域传输请求。如果名称服务器允许区域传输发生，名称服务器托管的所有DNS名称和IP地址将以可读的ASCII文本形式返回。  
dns query | IXFR | **_增量区域传输_** ，将整个区域文件从主名称服务器传输到辅助名称服务器。  
dns query | DNS Wildcard | 检查域名服务器启用通配符查询，或DNS伪造。  
dns query | domain bruteforce | 用字典暴力破解子域名  
dns query | reverse bruteforce | 域名反查ip  
dns query | srv bruteforce | 暴力破解srv记录  
dns query | gtld bruteforce | 暴力破解gtld记录  
dns query | tld bruteforce | 暴力破解tld记录  
#### OSINT
OSINT | 分类 | 描述  
---|---|---  
OSInt | Google | 来自Google的Spider域名:`demo.com`  
OSInt | Bing | 来自Bing的Spider域名:`demo.com`  
OSInt | Yahoo | 来自Yahoo的Spider域名:`demo.com`  
OSInt | Baidu | 来自百度的Spider域名:`demo.com`  
OSInt | Netcraft | 从 `netcraft searchdns pages` 上爬取域名  
OSInt | Github | 来自Github  
OSInt | Shodan | 来自Shodan的Spider域名  
OSInt | Censys | 来自Censys的Spider域名  
OSInt | ZoomEye | 来自ZoomEye的Spider域名  
## 主动攻击模式
**攻击模式** | **方法** | **描述**  
---|---|---  
Websites | Spider default page | 扫描默认页面和爬取目标站点  
Websites | Certificates | 扫描域名证书  
## Tools
**recon-ng 命令** | **Description**  
---|---  
use recon/domains-hosts/baidu_site | 通过`baidu`搜索域名  
use recon/domains-hosts/bing_domain_api | 通过`bing api`搜索域名  
use recon/domains-hosts/bing_domain_web | 通过`bing web pages`搜索域名  
use recon/domains-hosts/brute_hosts | 爆破子域名  
use recon/domains-hosts/google_site_api | 通过`google api`搜索域名  
use recon/domains-hosts/google_site_web | 通过 `google web pages` 搜索域名.  
use recon/domains-hosts/netcraft | Search domains from netcraft pages.  
**dnsrecon 命令** | **Description**  
---|---  
dnsrecon -n `8.8.8.8` -d `demo.com` | 请使用有效的DNS服务器，以避免DNS伪造。  
dnsrecon -d `demo.com` -t std | SOA，NS，A，AAAA，MX和SRV（如果NS服务器上的AXRF失败）。  
dnsrecon -d `demo.com` -t rvl | 反向查找给定的CIDR或IP范围。  
dnsrecon -d `demo.com` -t brt -D `/path/to/subdomains.wd` | 使用之指定字典爆破域名和hosts.  
dnsrecon -d `demo.com` -t brt -D `/path/to/subdomains.wd` \--iw |
使用指定目录字典暴力破解域名，即使发现了目录，依然继续暴力破解  
dnsrecon -d `demo.com` -t srv | SRV 记录  
dnsrecon -d `demo.com` -t axfr | 为空间转移测试所有NS服务器.  
dnsrecon -d `demo.com` -t goo | 通过google搜索存活子域和主机.  
dnsrecon -d `demo.com` -t tld | 删除给定域的TLD，并针对在IANA中注册的所有TLD进行测试  
dnsrecon -d `demo.com` -t zonewalk | 使用NSEC记录执行DNSSEC区域漫游。  
dnsrecon -d `demo.com` \--db `/path/to/results.sqlite` | 将结果保存在一个sqlite文件中  
dnsrecon -d `demo.com` \--xml `/path/to/results.xml` | 将结果保存在一个xml文件中。  
dnsrecon -d `demo.com` -c `/path/to/results.csv` | 将结果保存在一个csv文件中。  
dnsrecon -d `demo.com` -j `/path/to/results.json` | 将结果保存在一个json文件中。  
**theHarvester Command** | **说明**  
---|---  
theharvester -d `demo.com` -b all | 通过 google, googleCSE, bing, bingapi, pgp,
linkedin,google-profiles, jigsaw, twitter, googleplus,等方法来查询目标信息  
theharvester -d `demo.com` -n | 对发现的所有网段执行DNS反向查询  
theharvester -d `demo.com` -c | 对域名执行DNS爆破  
theharvester -d `demo.com` -t | 执行DNS TLD扩展发现  
theharvester -d `demo.com` -e `8.8.8.8` | 指定一个DNS服务器  
theharvester -d `demo.com` -h | 使用SHODAN数据库查询已发现的主机  
**Metasploit Command** | **说明**  
---|---  
msf > use auxiliary/gather/enum_dns | 收集dns记录信息(A, AAAA, CNAME, ZoneTransfer,
SRV, TLD, RVL, ...)  
#### 相关链接
  * 
  * 
  * 
  * 
  * 
#### Linux下的信息收集
##### 系统架构
##### 相关命令及说明
  * `uname -a` ： uname命令报告有关计算机的软件和硬件的基本信息。
  * `cat /etc/issue` ：文件/ etc / issue是一个文本文件，其中包含要在登录提示之前打印的消息或系统标识。
  * `cat /etc/*-release` ：`/etc/lsb-release, /etc/redhat-release` 文件包含一个被解析以获取信息的描述行。 例如：“分销商版本x.x（代号）”
  * `cat /proc/version` ：/ proc/version指定了Linux内核的版本，用于编译内核的gcc的版本以及内核编译的时间。 它还包含内核编译器的用户名。
  * `cat /proc/sys/kernel/version` ：`/proc/sys/kerne /`中的文件可以用来调整和监视Linux内核操作中的各种活动
##### 进程
  * `ps -ef /ps aux` : 列出当前进程快照
  * `top`: top命令显示您的Linux机器的处理器活动，并显示实时管理的任务。 它会显示正在使用的处理器和内存以及运行进程等其他信息。
  * `ls -al /proc/`: /proc是非常特殊的，它也是一个虚拟文件系统。 它有时被称为过程信息伪文件系统。 它不包含“真实”文件，而是包含运行时系统信息（例如系统内存，安装的设备，硬件配置等）。  
  * `ls -al /proc/99` :查看关于PID 99的信息.  
##### 用户和组
**Command** | **Description**  
---|---  
id | 找到用户的UID或GID等信息.  
w | 显示登录到Linux服务器的人员.  
whoami | 显示当前用户名  
lastlog | 格式化打印上次登录日志`/var/log/lastlog`文件的内容。  
cat /etc/passwd | 有关用户信息的基于文本的数据库，可以登录系统或其他拥有正在运行的进程的操作系统用户身份。  
cat /etc/shadow | **/etc/shadow** 用于通过限制除高度特权的用户对散列密码数据的访问来提高密码的安全级别。
通常情况下，该数据保存在超级用户拥有的文件中，并且只能由超级用户访问。  
cat /etc/master.passwd | **/etc/master.passwd** on BSD systems  
cat /etc/sudoers | **/etc/sudoers** 文件内容是使用sudo命令必须遵守的规则！  
sudo -V | 打印sudo版本字符串  
cat ~/.ssh/authorized_keys | 使用公钥认证，认证实体具有公钥和私钥。
每个key都是具有特殊数学属性的大数字。私钥保存在您登录的计算机上，而公钥存储在要登录的所有计算机上的 **.ssh/authorized_keys**
文件中。  
cat ~/.ssh/identity.pub | 文件 **identity.pub**
包含您的公钥，可以将其添加到其他系统的authorized_keys文件中。  
cat ~/.ssh/identity | ssh客户端允许您选择读取RSA或DSA身份验证标识（私钥）的文件。  
cat ~/.ssh/id_rsa.pub | RSA 公钥 会保存为 .ssh/id_rsa.pub.  
cat ~/.ssh/id_rsa | RSA 私钥 会保存在你的home目录中 ：.ssh/id_rsa。  
cat ~/.ssh/id_dsa.pub | DSA公钥 会保存为 .ssh/id_rsa.pub.  
cat ~/.ssh/id_dsa | DSA 私钥 会保存在你的home目录中 ：.ssh/id_dsa。  
cat /etc/ssh/ssh_config | OpenSSH SSH 控制端配置文件  
cat /etc/ssh/sshd_config | OpenSSH SSH 服务端配置文件  
cat /etc/ssh/ssh_host_dsa_key.pub | sshd守护进程使用的DSA公钥.  
cat /etc/ssh/ssh_host_dsa_key | sshd守护进程使用的DSA私钥。  
cat /etc/ssh/ssh_host_rsa_key.pub | sshd守护程序用于SSH协议版本2的RSA公钥。  
cat /etc/ssh/ssh_host_rsa_key | sshd守护进程使用的RSA私钥。  
##### 服务
**Command** | **Description**  
---|---  
service -status-all | 检查所有服务状态  
systemctl -a | 列出安装在文件系统中的所有单元.  
service `servicename` start  
systemctl start `servicename` | 启动某个服务  
service `servicename` stop  
systemctl stop `servicename` | 停止某个服务  
service `servicename` status  
systemctl status `servicename` | 显示某个服务状态信息  
cat /etc/services | /etc/ services将端口号映射到指定的服务.  
##### 安全
**Command** | **Description**  
---|---  
iptables -L | 列出所有规则链。  
iptables -F | 删除选定规则链中的所有规则.  
iptables -A INPUT -p icmp -m icmp --icmp-type 0 -j ACCEPT | 请执行 **iptables -p
icmp --help** 获得更多信息.  
iptables -A INPUT -p tcp -m tcp --sport 80 -m state --state
RELATED,ESTABLISHED -j ACCEPT | 允许来自src端口80的tcp连接  
iptables -A OUTPUT -p tcp -m tcp --dport 80 -m state --state
NEW,RELATED,ESTABLISHED -j ACCEPT | 允许 从/到 dst 端口80的TCP连接.  
iptables -A INPUT -p udp -m udp --sport 53 -m state --state
RELATED,ESTABLISHED -j ACCEPT | 允许来自src端口80的udp连接  
iptables -A OUTPUT -p udp -m udp --dport 53 -m state --state
NEW,RELATED,ESTABLISHED -j ACCEPT | 允许从/到 dst 端口53的udp连接.  
iptables -A OUTPUT -p tcp -m tcp --sport 55552 -s 127.0.0.1 -d 127.0.0.1 -j
ACCEPT  
iptables -A OUTPUT -p tcp -m tcp --dport 55552 -s 127.0.0.1 -d 127.0.0.1 -j
ACCEPT | 允许本地主机连接到 localhost:55552  
##### 网络
**Command** | **Description**  
---|---  
ifconfig -a | 显示当前可用的所有接口  
hostname | 显示或设置系统的主机名称。  
dnsdomainname | 显示系统的DNS域名。  
netstat -antp | 显示网络状态  