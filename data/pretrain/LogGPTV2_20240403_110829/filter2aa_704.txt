Hacking travel routers 
like it’s 1999
Mikhail Sosonkin
Director of R&D
Always a Student
@hexlogic
PI:EMAIL
http://debugtrap.com
Why do this?
Breaking in.
Show me the bugs!
The End.
We all just hack for fun… right?
I travel a lot
I work in cafes
I do security things
Why do this?
The unboxing
We want bugs!
The End
Peeking a few extra bytes...
HTTP/1.1 200 OK
Server: vshttpd
Cache-Control: no-cache
Pragma: no-cache
Expires: 0
Content-length: 8338
Content-type: text/html
Set-cookie: 
SESSID=eXXzgZIWg4jnnXGidAVQpRB6joaM7D7lr3IGWtz7oRuJE;
Date: Sat, 24 Jun 2017 19:38:27 GMT
two days* with 
john the ripper
All this root, 
and no where 
to use it
* on a reasonably priced EC2 instance
If I could 
just...
●
The firmware update mechanism does 
not require a signed package.{
●
Expanded, the update package is just a 
shellscript
"sed '1,3d' %s|cksum|cut -d' ' -f1"
●
Custom CGI server: 
○
https://sourceforge.net/projects/vshttpd/ maybe? It’s an empty project
●
Handles all *.csp REST Calls
○
●
Checks Firmware update
●
The firmware update mechanism does 
not require a signed package.{
●
Expanded, the update package is just a 
shellscript
More details: http://debugtrap.com/2017/03/19/travel-safe/
…
I is C++
Buffers before 
function pointers
Dynamic function 
calls
Dynamic initialization/
allocation
Variables before 
function pointers
Lots of function pointers… 
everywhere!
Allocated 
structure
Get function 
pointer
Store the 
function pointer
Repeat for 
another function
Oops… error leak!
More details: http://debugtrap.com/2017/04/10/embedded-webserver/
Why do this?
The unboxing
We want bugs!
The End
Cybergold!
●
Present
○
Partial Virtual Space randomization
○
Binary and heap are fixed
○
Libraries and stack are randomized
●
Not present
○
Stack canaries
○
Full ASLR
○
Heap protections
○
Heap/Stack NX
○
Control flow integrity
" +
"
More details: debugtrap.com/2017/05/09/tm06-vulnerabilities/
Return address on the stack
Stack pointer!
Restrictions with sprintf(“) :
●
No nulls
●
output buffer follows “” format
Return to
Static
Null In 
Address
Use Format 
Values
Executable
Main binary
Heap
Library
Stack
More details: debugtrap.com/2017/05/09/tm06-vulnerabilities/
1.
Cookie value stored on the heap using strcpy call
2.
Using knowledge from reverse engineering
a.
there a function pointer on the heap, following the buffer
3.
Changed the function pointer value to point into the HTTP body for arbitrary 
code execution
4.
Pointer overwrite and gaining of execution are a few functions removed from 
each other
Lots of top site still don’t use SSL: Google transparency report
Demo!
Demo!
Via the browser XSRF
From within 
the enclave
From the 
external WiFi
Trojan.AndroidOS.Switcher
 snprintf($sp+0x128, 256, “”, fname);
 Stack canaries
strncpy(dst, src, 1024);
 Crypted heap function pointers
Why do this?
The unboxing
We want bugs!
The End
That was fun...
●
Gain an attack proxy for attribution 
obfuscation
●
Steal user information such as 
authentication tokens
●
Manipulate user activity… iframes!
●
Foothold into enterprise or private 
networks
Super polite
Entire product team off for the spring festival (Chinese New Year)
Received a personal update before it was made generally available.
We have transmit your email and issue to our product 
team. But we feel sorry that we would inform you until 
2/8 because product team has day off due for Spring 
Festival.
Vendors do respond!
Install OpenWRT on the device
Lots of interesting attack vectors
People still use 
 and 
 - like they did in 1999!
“Don’t roll your own crypto”
      => “Don’t roll your own CGI webserver”
Email:   PI:EMAIL 
blog:      debugtrap.com
Twitter: @hexlogic
č ū
Спасибо
                ...Catch me in the halls or online!
Mikhail Sosonkin