subscribe engine, so that it includes an entry for the new SYSTEM.FTE queue.
For more information on this, including the MQSC commands that need to be run, see
fteSetupCoordination (set up properties files and directories for coordination queue manager).
If there are messages on the SYSTEM.FTE queue, then you should check that the
SYSTEM.QPUBSUB.QUEUE.NAMELIST namelist has been set up correctly and contains an entry for
that queue. If the entry is missing, then the queued publish/subscribe engine will not detect any
incoming status messages from the agent and will not process them.
You should also ensure that the PSMODE attribute on the queue manager is set to ENABLED, which
turns on the queued publish/subscribe engine.
5.If the channels are running, and the status messages are flowing through the IBM MQ network and
are being picked up from the SYSTEM.FTE queue by the queue manager’s queued publish/subscribe
engine, then collect the following traces:
• An IBM MQ MFT trace from the agent, covering a time period equal to three times the value of the
agent property agentStatusPublishRateMin. This ensures that the trace covers the time when
the agent is publishing at least three messages containing its status. The trace should be collected
dynamically, using the trace specification:
com.ibm.wmqfte.statestore.impl.FTEAgentStatusPublisher,
com.ibm.wmqfte.utils.AgentStatusDetails,
com.ibm.wmqfte.wmqiface.AgentPublicationUtils,
com.ibm.wmqfte.wmqiface.RFHMessageFactory=all
Note: A reduced amount of trace is output using these strings.
For information on how to enable the trace for agents running on IBM MQ for Multiplatforms, see
“Collecting a Managed File Transfer agent trace dynamically” on page 445.
For information on how to enable the trace for agents running on IBM MQ for z/OS, see “Collecting a
Managed File Transfer for z/OS agent trace dynamically” on page 453.
• A concurrent trace of the queue managers used to route the status messages from the agent queue
manager to the coordination queue manager.
• A trace of the fteListAgents command, covering the time when the agent is shown as being in an
UNKNOWN state. The trace should be collected using the trace specification:
com.ibm.wmqfte=all
For information on how to enable the trace for commands running on IBM MQ for Multiplatforms, see
“Tracing Managed File Transfer commands on Multiplatforms” on page 446.
For information on how to enable the trace for commands running on IBM MQ for z/OS, see “Tracing
Managed File Transfer for z/OS commands” on page 456.
Once the traces have been collected, they should be made available to IBM Support for analysis. For
more information, see “Collecting troubleshooting information for IBM Support” on page 302.
134 Troubleshooting and Support for IBM MQ
Viewing the status age from the command line
From IBM MQ 9.1.0, the Status Age information of a publication is displayed as part of the output from
the fteListAgents and fteShowAgentDetails commands.
For more information, see fteListAgents and fteShowAgentDetails.
Viewing the status age in IBM MQ Explorer
From IBM MQ 9.1.0, the Status Age information is available in the IBM MQ Explorer MFT plug-in when
you view the list of agents and display individual agent properties.
Related reference
fteListAgents
fteShowAgentDetails
MFT agent status values
The MFT agent.properties file
The MFT coordination.properties file
What to do if ftePingAgent times out and reports a BFGCL0214I message
ftePingAgent is a useful command-line utility provided with IBM MQ Managed File Transfer that
enables you check whether an agent is reachable, and whether it is able to respond to requests.
How the command works
You can use the ftePingAgent command to check if an agent is reachable, and whether it is able to
process requests. When the command is run, it performs the following steps:
• Connects to the command queue manager for the Managed File Transfer (MFT) topology.
• Creates a temporary reply queue on the command queue manager.
By default, the temporary queue has a name that starts with the prefix WMQFTE. However, you can
change this by setting the dynamicQueuePrefix property in The MFT command.properties file for the
installation.
• Sends a Ping MFT agent request message to the queue SYSTEM.FTE.COMMAND.agent_name on the
agent queue manager, through the command queue manager. The request message contains the name
of the temporary reply queue.
• Waits for an MFT agent reply message reply message to arrive on the temporary reply queue.
One of the threads within an agent is the CommandHandler. This thread gets messages from the
SYSTEM.FTE.COMMAND.agent_name queue of the agent, and processes them.
If this thread receives a message containing a Ping MFT agent request, it builds an MFT agent reply
message, and sends it to the temporary queue on the command queue manager. This message goes
through the agent's queue manager.
After the message arrives on the temporary queue, it is picked up by the ftePingAgent command. The
command then writes a message similar to the one shown below to the console before exiting:
BFGCL0793I: Agent  running on host  responded to ping in  seconds.
The following two diagrams show the flow:
IBM MQ troubleshooting and support 135
Figure 4. The pingAgent request goes to the SYSTEM.FTE.COMMAND.agent_name queue on the agent queue
manger, through the command queue manager
Figure 5. The pingAgent reply comes back through the agent queue manager to the command queue
manager.
What to do if the command times out
By default, the ftePingAgent command waits for five seconds for the MFT agent reply message to arrive
on the temporary queue. If the reply message does not arrive within five seconds, the command writes a
BFGCL0214I message to the console. The following message is an example:
BFGCL0214I: agent AGENT1 didn't respond to ping after 5 seconds.
You can use the following steps to investigate why the reply message did not arrive:
• The first thing to do is check that the agent is running. If it is not, it can not respond to the Ping MFT
agent request sent by the command.
• If the agent is running and busy processing requests, it is possible that it might take longer than five
seconds to get the Ping MFT agent request and send back the reply.
136 Troubleshooting and Support for IBM MQ
To see if this is the case you should rerun the ftePingAgent command again, using the -w parameter
to specify a longer wait interval. For example, to specify a 60 second wait interval, issue the following
command:
ftePingAgent -w 60 AGENT1
• If the command still times out, check the path through the IBM MQ network between the command
queue manager and the agent queue manager. If one or more channels in the path have failed, the Ping
MFT agent request message and/or the MFT agent reply message will be stuck on a transmission queue
somewhere. In this situation, you should restart the channels and re-run the ftePingAgent command.
If the command still reports a BFGCL0214I message after you have carried out the preceding steps, the
Ping MFT agent request and MFT agent reply messages need to be tracked as they flow through the IBM
MQ network to see:
• Whether the Ping MFT agent message ever reaches the SYSTEM.FTE.COMMAND.agent_name queue.
• If the agent picks up the message up from the queue, and sends back an MFT agent reply message.
To do this, you should carry out the following steps:
• Enable queue manager traces on both the command and agent queue managers.
• Enable trace on the agent dynamically using the trace specification com.ibm.wmqfte=all.
The way to do this depends upon the platform the agent is running on:
– For agents running on IBM MQ for Multiplatforms, see “Collecting a Managed File Transfer agent trace
dynamically” on page 445.
– For agents running on IBM MQ for z/OS, see “Collecting a Managed File Transfer for z/OS agent trace
dynamically” on page 453.
• Next, run the ftePingAgent command with trace enabled, using the trace specification
com.ibm.wmqfte=all.
– For information about tracing the command on IBM MQ for Multiplatforms, see “Tracing Managed File
Transfer commands on Multiplatforms” on page 446.
– For information about tracing the command on IBM MQ for z/OS, see “Tracing Managed File Transfer
for z/OS commands” on page 456.
When the command times out, stop the agent trace and the queue manager trace. The agent and queue
manager traces, along with the trace from the command, should then be made available to IBM support
for analysis.
Troubleshooting managed transfer problems
Use the following reference information to help you to resolve issues with managed transfers:
Related reference
“Common problems” on page 166
Common problems that might occur in your Managed File Transfer network.
“Return codes for MFT” on page 124
Managed File Transfer commands, Ant tasks, and log messages provide return codes to indicate whether
functions have successfully completed.
What to do if your transfer does not complete
If your transfer does not complete you can carry out a number of problem determination steps to
investigate the cause.
Use the following flowchart to help you to diagnose problems and decide what action to take next:
IBM MQ troubleshooting and support 137
138 Troubleshooting and Support for IBM MQ
IBM MQ troubleshooting and support 139
Flowchart key:
1.Check the agent output0.log for errors. If the agent reports it has successfully started, but
neither IBM MQ Explorer nor fteShowAgentDetails report the agent as running, then check the
connectivity between the agent queue manager and the coordination queue manager. It may be that a
queue manager to queue manager channel is unavailable.
2.If the source agent lists the transfer ID as an In progress transfer but the destination agent does
not, there might be a connectivity issue between the source and destination queue managers. Use
the ftePingAgent command from the destination agent machine to the source agent using the
destination agent queue manager as the command queue manager, in the command.properties file.
You can also run this command the other way round, from source to destination.
3.If both the source and destination agents list the transfer ID as In progress, this suggests
there has been a connectivity issue between the source and destination queue managers since the
transfer was initiated. Use the ftePingAgent command from the destination agent machine to the
source agent using the destination agent queue manager as the command queue manager, in the
140 Troubleshooting and Support for IBM MQ
command.properties file. You can also run this command the other way round, from source to
destination.
4.If you have been round this loop already, check whether either of statements are relevant to your
situation:
• Both source and destination agents report as Running, but no transfer is listed. Either the transfer
request did not reach the agent command queue, or the agent although reporting as Running, is no
longer monitoring the command queue. Check for errors in the source agent output0.log. Use the
ftePingAgent command from the same machine the transfer was sent from, to the source agent,
to verify the connectivity between the command queue manager and the agent queue manager, and
that the agent is servicing the command queue.
• Both source and destination agents report as Running, and the transfer is listed as In progress,
recovering. Use the ftePingAgent command from the destination agent machine to the
source agent using the destination agent queue manager as the command queue manager, in the
command.properties file. You can also run this command the other way round, from source to
destination.
What to do if you think that your file transfer is stuck
On a heavily loaded system or when there are network problems between the source and destination
agents, transfers can occasionally appear to be stuck in a queued or recovering state. There are a number
of factors that can cause this.
Complete the following checks to determine the cause of the problem:
1.Use the ftePingAgent command, or in the IBM MQ Explorer Agents panel right-click on the agent
name and select Ping, to check whether the source and destination agents are active and responding
to new requests. Look at the agent logs to see if there is a current network connection problem.
2.Check whether the destination agent is running at capacity. It might be that there are numerous source
agents all requesting file transfers to the same destination agent. Use the fteShowAgentDetails
command with the -v (verbose) parameter, or in the IBM MQ Explorer Agents panel right-click on the
agent name and select Properties, to see the current transfer activity for an agent. If the number of
running destination transfers is at or close to the agent's maximum number of destination transfers,
that can explain why some transfers for source agents appear to be stuck.
3.Transfers to and from protocol bridge agents enter a recovering state if there is a problem contacting
the protocol file server. Look at the agent logs to see if there is a current connection problem.
4.Transfers are processed by an agent in priority order. Therefore in a loaded system, a low-priority
transfer can remain in the queued state for some time while the agent is loaded with higher priority
transfers. Eventually a low-priority transfer is started if that transfer has been queued for a while, even
though there are newer higher priority transfers.
What to do if the destination queue is a clustered queue, or an alias to a clustered
queue
When using Managed File Transfer to transfer a file into a queue, if you use a destination that is
a clustered queue, or an alias to a clustered queue, you get reason code 2085, or 2082. From
IBM WebSphere MQ 7.5.0 Fix Pack 4 onwards, this issue is resolved if you set the property
enableClusterQueueInputOutput to true.
Why this problem occurs
The queue manager name of the destination agent is being appended to the queue name of the -dq
parameter, when there is no explicit queue manager name on the -dq. The reason code 2085, or 2082,
occurs because the queueManager object cannot be specified on an MQOPEN call when connecting to a
clustered MQ queueManager that does not have that local clustered queue.
IBM MQ troubleshooting and support 141
Avoiding this problem
1.Create a clustered queue on the queue manager.
2.Set up a remote queue definition that points to a clustered queue.
Example
This example uses a remote queue definition.
Configuration:
• Source Agent: SAGENT
• Source Agent Queue Manager: SQM
• Destination Agent: DAGENT
• Destination Agent Queue Manager: DQM
• The destination queue of the transfer is CQ6 on queue manager SQM
To define remote queue definition Q6_SQM on DQM to clustered queue CQ6 in SQM (assuming that the
clustered queue CQ6 is already defined in SQM), issue the MQSC command on the DQM queue manager:
define qremote(Q6_SQM) rname(CQ6) rqmname(SQM) xmitq(SQM)
Note: rname points to the clustered queue.
You can now transfer to the queue. For example:
fteCreateTransfer -sa SAGENT -sm SQM -da DAGENT -dm DQM -dq Q6_SQM /tmp/single_record.txt
What to do if your scheduled file transfer does not run or is delayed
If you have a scheduled transfer that does not run when it is due or is delayed, it might be because the
agent is processing commands on its command queue. Because the agent is busy, scheduled transfers
are not checked and are therefore not run.
To work around this problem, use one of the following steps:
• Configure the maxSchedulerRunDelay property in the agent.properties file to set the maximum
interval in minutes that the agent waits to check for scheduled transfers. Setting this property
ensures that the agent keeps checking for scheduled transfers even when the agent is busy. For more
information about the property, see The MFT agent.properties file.
• Alternatively, use a resource monitor instead of a scheduled transfer. Resource monitors work
differently from scheduled transfers and are not affected by the agent being busy. For example, if
you want an up-to-date file on the destination system, resource monitors reduce network traffic. This
is because the file is transferred only when a new version becomes available, rather than the file being
transferred automatically. However, resource monitoring is not supported on protocol bridge agents or
Connect:Direct® bridge agents.
For more information, see Monitoring MFT resources.
Possible errors when transferring IBM i save files
If you use Managed File Transfer to transfer the same IBM i save file several times, the transfer might fail.
Managed File Transfer might produce one or both of the following errors:
•
BFGII0003E: Unable to open file "/qsys.lib/library.lib/SAVF.FILE"
for reading
142 Troubleshooting and Support for IBM MQ
•
BFGII0082E: A file open for read failed due to a Java IOException
with message text "Sharing violation occurred"
These errors can occur if you issue several concurrent requests for an MFT agent to transfer the same
IBM i save file. If you want to concurrently transfer the same save file several times, you must use several
source agents. Use a different source agent for each concurrent transfer.
To transfer the same save file several times with a single source agent, you must wait until the previous
transfer request is complete before submitting each new transfer request.
Related tasks
Transferring files to or from IBM i systems
Configuring MFT on IBM i
Transferring save files located in QSYS.LIB on IBM i
What to do if managed transfers fail with BFGIO0341E errors
If a managed transfer is transferring a file into a location that is being monitored by an external process,
then it is possible for that managed transfer to fail with the error: BFGIO0341E: The rename of
temporary file destination_filename.part to destination_filename failed because
the temporary file does not exist. This is due to the way that the destination agent for
managed transfers uses temporary files when writing a destination file.
How a destination agent uses temporary files
By default, when a managed file transfer takes place, the destination agent performs the following steps:
• Create a temporary file, called destination_ filename.part.
• Lock the temporary file.
• Write file data into the temporary file, when it is received from the source agent.
• Unlock the temporary file after all of the file data has been received and written out.
• Rename the temporary file, from destination_ filename.part to destination_ filename.
If a managed transfer goes into recovery, then it is possible for the destination agent to create temporary
files called destination_ filename.partnumber. The destination agent then writes the file data to
this file, instead of the one called destination_ filename.part.
If the temporary filename destination_ filename.partnumber already exists, the destination agent
tries to create a new temporary file with the name destination_ filename.part(number + 1).
If that file already exists, the destination agent attempts to create a temporary file with the name
destination_ filename.part(number + 2), and so on until it is successfully able to create
the file. In the situation that the agent tries, and fails, to create the temporary file destination_
filename.part1000, it writes directly to the destination file and does not use a temporary file.
When a managed transfer completes, the destination agent deletes all of the temporary files that are
called destination_ filename.partnumber, as the assumption is that these were created by the
agent during the managed transfer.
Note: If the agent property doNotUseTempOutputFile is set to the value true, the destination agent
does not use temporary files. Instead, it writes directly to the destination file. For more information about
the doNotUseTempOutputFile property, see The MFT agent.properties file.
Why this problem occurs
A BFGIO0341E error is generated if the destination agent attempts to rename the temporary file, only to
find that file is no longer there. A typical scenario that can cause this problem is as follows:
• A staging directory has been set up on the target file system.
• An external process is configured to monitor the staging directory, and move any files that it finds to a
new location.
IBM MQ troubleshooting and support 143
• The destination agent creates and locks the temporary file destination_ filename.part in the
staging directory.
• The destination agent writes file data into the temporary file.