waist, with several surviving protocols? Based on the previous re-
sults, this will happen if we increase z—it is unlikely however that
a network architect can control the intensity of competition; that is
largely determined by economic and deployment considerations. A
second and more pragmatic approach is to design protocols that are
largely non-overlapping in terms of services and functionality, as
previously discussed, so that they do not compete with each other.
This approach was discussed in the previous section.
212All Nodes Except Rank-1 Kernels
Rank-2 Kernels
Rank-1 Kernels
n
o
i
t
c
a
r
F
 1
 0.8
 0.6
 0.4
 0.2
 0
n
o
i
t
c
a
r
F
 1
 0.8
 0.6
 0.4
 0.2
 0
CDF
 0
 10
 20
 30
 40
 50
 60
 70
 80
 90  100
 0
 1
 2
 3
 4
 5
 6
 7
 8
 9
 10
Age
Number of Nodes
Figure 10: CDF of the age of various node subsets at layer-6.
A third approach is to design the architecture so that its waist is
located at a layer with a high generality. As we saw in Figure 9-b,
as we increase γ, increasing the generality of all layers, the waist
moves higher, at a layer with higher generality. This also means
that the waist is getting wider, allowing the co-existence of several
protocols at that layer. How can this be done in practice? Sup-
pose that we start from a 6-layer architecture X in which the waist
is located at layer-3, and we want to redeﬁne the functionality of
each layer so that the waist of the new architecture Y is located at
a higher layer. We should increase the generality of each layer (but
still maintaining that s(l) decreases as l increases) so that the cor-
responding protocols provide more general services in Y than in X.
For instance, instead of deﬁning HTTP as an application-speciﬁc
protocol that is only used by web browsers, HTTP can be re-deﬁned
and used as a very general content-centric delivery protocol. This
speciﬁc example, actually, has been recently proposed as a rather
simple way to provide the beneﬁts of clean-slate content-centric
architectural proposals using an existing protocol [18].
6. EVOLUTIONARY KERNELS
It is often said that the core protocols of the Internet architecture
(mostly IPv4, TCP and UDP) are “ossiﬁed”, meaning that they are
hard to modify or replace, creating an obstacle for network inno-
vations [17]. At the same time however, they can be viewed more
positively as the protocols that form the core of the architecture,
creating a common interface between a large number of nodes at
lower layers and a large number of nodes at higher layers. This is
why we refer to them as evolutionary kernels, based on a similar
concept about certain genes and gene regulatory networks in biol-
ogy [10]. What can we learn from EvoArch about such ossiﬁcation
effects and evolutionary kernels? Does the model predict the emer-
gence of long-surviving nodes at the hourglass waist? What is the
reason that those nodes manage to survive much longer than their
competitors? Do they ever get replaced by other nodes, and if so,
under what conditions?
Let us focus on the waist—under the default parameters (L =
10) the waist is typically at layer-6. As previously discussed, the
waist has the highest death probability, and so one may expect that
it is unlikely to ﬁnd any long-living nodes at that layer. We gener-
ate 1000 evolutionary paths, each lasting 100 rounds. At the end
of the evolutionary path, we calculate the maximum age among all
nodes that were ever born at layer-6. Figure 10 shows the CDF of
the maximum age for various subsets of nodes: a) the node with
the maximum age (we refer to such nodes as rank-1 kernels or sim-
ply kernels), b) the second older node (we refer to them as rank-2
kernels), c) all nodes, excluding only rank-1 kernels.
Figure 11: CDF of the number of nodes at layer-6 surviving
more than half of the evolutionary path.
Note that almost all (rank-1) kernels survive for at least 50–60%
of the entire evolutionary path. Actually, about 40% of the kernels
are still alive at the end of the evolutionary path, meaning that their
age is only determined by their birth time. On the other hand, the
remaining nodes have much shorter life span. About 40% of them
do not survive for more than a round or two and 90% of them sur-
vive for less than 20 rounds. The rank-2 kernels have much larger
age than most nodes, but there is still a signiﬁcant gap in the age of
rank-1 and rank-2 kernels. So, our ﬁrst observation is that EvoArch
predicts the emergence of very stable nodes at the waist that tend
to survive for most of the evolutionary path.
Figure 10 shows that only a small fraction of nodes survive for
more than 50 rounds in an evolutionary path. So, let us identify
in each evolutionary path those few nodes that survive for at least
that long - we refer to them as “higher-rank kernels”. Figure 11
shows the CDF of the number n of higher-rank kernels in each
evolutionary path. In about half of the evolutionary paths only the
rank-1 kernel exists. In almost all cases, n ≤ 4. So, the number
of nodes that can co-exist with the rank-1 kernel for more than 50
rounds is typically at most three. This conﬁrms that it is difﬁcult
to survive for long at the waist in the presence of a rank-1 kernel.
The nodes that manage to do so either have almost the same set of
products with the rank-1 kernel (and thus almost the same value),
or they have mostly different products than the rank-1 kernel, not
competing with it. We have also examined the birth times of those
nodes, and observed that in about 70% of the evolutionary paths
rank-1 kernels are born earlier than higher rank kernels.
How large is the value of a kernel, and how can a kernel die?
We deﬁne the normalized value ˆv(u) of a node u at a given round
as its value v(u) divided by the value that u would have if it was
connected to all products at the next higher layer in that round. So,
ˆv(u) ≤ 1. Note that because the death probability is almost zero
when r > 0.90 (for the default value of z), if the normalized value
of a node is higher than 90% that node cannot die even if it had a
higher-value competitor.
Figure 12 shows the normalized value of all (rank-1) kernels,
based on 1000 evolutionary paths. In the ﬁrst 10–20 rounds, the
normalized value increases as the upper layer grows larger and the
kernels acquire new products. Then, during the next 30–40 rounds
their normalized value varies around 80–90%, which means that
those kernels are unlikely to die, even if they face competition.
During the last 30–40 rounds, however, the normalized value of
many kernels gradually drops. To understand this trend, and to ex-
plain how a kernel can be replaced, we have to examine the birth
process. As time progresses, the upper layers of the network grow
larger (recall that the death probability is low at higher layers due
to low competition). In the basic birth model, however, the birth
213n
o
i
t
c
a
r
F
 1
 0.8
 0.6
 0.4
 0.2
 0
Normalized Value
Death Probability of Kernels
n
o
i
t
c
a
r
F
 1
 0.8
 0.6
 0.4
 0.2
 0
Normalized Value
 0
 10
 20
 30
 40
 50
 60
 70
 80
 90  100
 0
 10
 20
 30
 40
 50
 60
 70
 80
 90  100
Round
Round
Figure 12: Normalized value for kernels at layer-6 (basic birth
process).
Figure 13: Normalized value for kernels at layer-6 (death-
regulated birth process).
rate is proportional to the size of the network, and new nodes are
distributed uniformly across all layers. Thus, the birth rate at the
waist also increases with time.
The previous increase has two consequences. First, as the layer
above the waist increases in size, new potential products appear for
both the kernel and its competitors. Each of these new nodes will
select the kernel as substrate with probability s(lb), where lb is the
waist. Second, as the birth rate at the waist increases, it becomes
more likely that a new node at that layer will acquire enough new
products so that its value becomes comparable, or even higher, than
the value of the kernel.
In other words, the death of kernels is
largely due to the birth of several new nodes at the next higher layer:
if the kernel fails to quickly acquire most of those new potential
products at the next higher layer it will experience a decrease in
its normalized value, becoming more vulnerable to new or existing
competitors at its own layer.
The previous discussion raises the question: what if the birth
rate is not the same at all layers? Speciﬁcally, what if the birth
rate at a layer is negatively correlated with the death probability
at that layer? This modiﬁcation of the model, which we refer to
as death-regulated birth process, captures situations in which the
implementation or deployment of new protocols at a certain layer
is discouraged by the intense competition that one or more incum-
bent protocols create at that layer. Arguably, this is a more realistic
model than the basic birth model we considered earlier.
In the death-regulated birth process, we maintain an estimate of
the death probability ˜d(l) at layer l since the start of the evolution-
ary path. As in the basic birth process, the overall birth rate is pro-
portional to the network size and the allocation of births to layers
is random. However, a birth at layer l is successful with probability
1 − ˜d(l); otherwise the birth fails and it is counted as a death in that
layer.
The death-regulated birth process creates a positive feedback
loop through which the emergence of one or more kernels at the
waist reinforces their position by decreasing the rate at which new
nodes (and potential competitors) are created. Figure 13 shows the
normalized value of the rank-1 kernel at layer-6, when we switch
from the basic birth model to the death-regulated birth model af-
ter round-20. Note that the median normalized value (as well as
the 25-th percentile) of the kernel becomes 100% within just few
rounds. In other words, with a death-regulated birth process it be-
comes practically impossible to replace a kernel at the waist of the
hourglass. Even when a new node u is somehow successfully born
at the waist, the number of new nodes at the next higher layer is
limited (because the birth process is also death-regulated at that
layer) and so u’s products will be most likely shared by the kernel.
This means that u will face the kernel’s competition, and so u will
most likely die.
We have also estimated a good parameterization of the EvoArch
model for the case of the TCP/IP stack using the death-regulated
birth process (again based on trial-and-error and exploiting the trends
shown in Figure 9): L = 6, c ≈ 0.7, γ = 3, and z ≈ 0.5. With these
values the waist is located at layer-3, its median width is one node,
the median width of layer-4 is four nodes, while the width of the
remaining layers increases with time. The median H score is 1 and
the 10-90th percentiles are 0.66 and 1, respectively.
6.1 Kernels in the Internet architecture
There are several interesting connections between what EvoArch
predicts about kernels and what happens in the Internet architec-
ture. There is no doubt that IPv4, as well as TCP and UDP, are the
kernels of the evolving Internet architecture. They provide a stable
framework through which an always expanding set of physical and
data-link layer protocols, as well as new applications and services
at the higher layers, can interoperate and grow. At the same time,
those three kernel protocols have been difﬁcult to replace, or even
modify signiﬁcantly. Further, the fact that new network or transport
layer protocols are rarely designed today implies that the birth pro-
cess at those layers is closer to what we call “death-regulated”, i.e.,
limited by the intense competition that the kernel protocols create.
EvoArch suggests an additional reason that IPv4 has been so sta-
ble over the last three decades. Recall that a large birth rate at
the layer above the waist can cause a lethal drop in the normalized
value of the kernel, if the latter is not chosen as substrate by the
new nodes. In the current Internet architecture, the waist is the net-
work layer but the next higher layer (transport) is also very narrow
and stable. So, the transport layer acts as an evolutionary shield for
IPv4 because any new protocols at the transport layer are unlikely
to survive the competition with TCP and UDP. On the other hand,
a large number of births at the layer above TCP or UDP (applica-
tion protocols or speciﬁc applications) is unlikely to signiﬁcantly
affect the value of those two transport protocols because they al-
ready have many products.
In summary, the stability of the two
transport protocols adds to the stability of IPv4, by eliminating any
potential new transport protocols that could select a new network
layer protocol instead of IPv4.
In terms of future Internet architectures, EvoArch predicts that
even if these architectures do not have the shape of an hourglass
initially, they will probably do so as they evolve. When that hap-
pens, the emergence of new ossiﬁed protocols (kernels) will be a
natural consequence. If the architects of such clean-slate designs
want to proactively avoid the ossiﬁcation effects that we now expe-
214t
h
d
W
i
Round 100-Without Quality
Round 100-With Quality
 70
 60
 50
 40
 30
 20
 10
 0
Layer 9
Layer 6
Layer 1
n
o
i
t
c
a
r
F
 1
 0.8
 0.6
 0.4
 0.2
 0
 1
 2
 3
 4
 5
 6
 7
 8
 9
 10
 0.8  0.82  0.84  0.86  0.88  0.9  0.92  0.94  0.96  0.98  1
Layer Number