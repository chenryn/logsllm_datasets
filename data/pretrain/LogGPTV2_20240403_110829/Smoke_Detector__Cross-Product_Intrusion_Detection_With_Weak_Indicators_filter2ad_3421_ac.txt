complexity linear in the number of edges [36]. To con(cid:128)rm that
our implementation conforms to this expectation, we evaluated
it on Amazon EMR using a cluster of 15 machines, each of type
r4.2xlarge with eight cores and 61GB RAM. To that end, we modeled
several synthetic graphs of increasing edge counts on the structural
properties of our dataset. (cid:140)ese synthetic graphs were also bipartite,
with the size of each partition and ratio of total edges proportionally
preserved. (cid:140)e graphs were stored in an adjacency list format in an
object store [1]. Scalability results are shown in Figure 5, con(cid:128)rming
that the algorithm scales linearly with the number of edges in the
graph, in accordance the theoretical bound. Runtime performance
on the real dataset is also shown.
7 EXPERIMENTS
In this section, we evaluate Smoke Detector based on its ability
to detect security incidents, and follow this with a discussion and
evaluation of its adversarial resistance in Section 8. We begin by
showing that Smoke Detector provides a straightforward, low-
maintenance method for replicating the critical incidents detected
by a leading MSSP with high coverage and accuracy. We then study
the machine-windows to which Smoke Detector gave the highest
rank, and present these to analysts to identify the percentage of
these detections that represent undiscovered security incidents.
Finally, we assess the ability that Smoke Detector’s con(cid:128)dence
scores have in assisting analysts to identify primary indicators
of compromise that had previously been classi(cid:128)ed as secondary
indicators.
050100150200Number of Edges (millions)100200300400500600700800900Execution Time (seconds)Confidence-weighted GraphSynthetic Graphs205Severity Score Count Weighted Count Weighted %
0.6%
Emergency
80.4%
Critical
16.5%
Warning
Informational
1.0%
1.4%
False Positive
Totals
100%
2
74
17
3
4
100
2
234
48
3
4
291
Table 3: Result of having an MSSP’s incident responder eval-
uate 100 machine-windows sampled from the top 708 that
were identi(cid:128)ed by Smoke Detector as containing probable
security incidents. (cid:135)ese results indicate that Smoke Detec-
tor increases the MSSP’s volume of incidents that are critical
or above in severity by 19% at a 1.3% False Positive rate, while
also (cid:128)nding some security incidents of lower value.
which they raise incidents, we compare the results of RWR with
con(cid:128)dence-weighted edges to RWR with uniformly weighted edges,
for which no knowledge of primary indicators is granted to the
model.
Accordingly, we perform a 10-fold cross-validation experiment
in which the positive class represents machine-windows corre-
sponding to incidents of critical severity raised by of a primary
indicator, while the negative class consists of all unknown-machine
windows. (cid:140)e results of this experiment are shown in Figure 6.
(cid:140)e uniformly-weighted RWR model achieves 95.6% coverage of
True Positive (TP) incidents at 1% False Positive (FP) rate with no
prior knowledge of primary indicators or event quality. While the
weighted graph’s coverage is only modestly higher, 96.4% cover-
age at the same FP rate, its tunable weights allow us to obtain a
larger yield of valuable undiscovered security incidents in the 1% of
unknown-machine days that are treated as “False Positives” in this
experiment. (cid:140)e use of uniform weights results resulted in a sur-
prisingly modest drop in classi(cid:128)cation accuracy. (cid:140)ese weights do
serve an important purpose however, in that the relevance rankings
produced by the weighted graph prioritize novel detections that
are relevant to known incidents through high-con(cid:128)dence events
rather than on the basis of more prevalent lower-con(cid:128)dence events,
as in the case of the uniformly weighted graph.
Since Smoke Detector’s primary goal is to (cid:128)nd undiscovered
security incidents, we had a professional incident responder em-
ployed by the MSSP evaluate the top-ranked unknown machine-
windows identi(cid:128)ed by Smoke Detector to determine whether they
contained legitimate security incidents. (cid:140)is involved applying
RWR with con(cid:128)dence-weighted edges to the 52 million unknown
machine-windows in our dataset. We presented the incident respon-
der with a sample of 100 of the top 708 machine-windows identifed
by RWR. To maximize the coverage of the analyst’s feedback, we
clustered the 708 machine-windows with the DBSCAN algorithm,
which yielded 25 clusters covering 30% of the machine-windows
(the rest were unclustered), and sent the analyst a representative
machine-window for each of these clusters, along with a strati(cid:128)ed
sample of 75 additional machine-windows. By weighing the inci-
dents based on cluster size, we arrive at the results shown in Table
Figure 6: We show Receiver Operating Curves (ROC) to de-
scribe Smoke Detector’s ability to reconstruct critical MSSP
incidents triggered by primary indicators, achieving more
than 95.6% coverage (true positives, TP) at a 1% false posi-
tive (FP) rate with uniform edge weights and 96.4% coverage
with edge weights informed by event con(cid:128)dence scores.
7.1 Detecting New and Existing MSSP Incidents
We commence our evaluation by examining Smoke Detector’s suit-
ability as a less expensive replacement for a leading MSSP’s iden-
ti(cid:128)cation of critical severity incidents based on rules conditioned
on the presence of primary indicators. Freeing MSSPs and SIEMs
from such techniques is desirable given that the identi(cid:128)cation of
primary indicators involves and the conditions under which they
should raise security incidents is a costly and largely manual pro-
cess. In replicating the MSSP’s incidents, it is not su(cid:129)cient for
Smoke Detector to learn what the primary indicators are, as these
are quite prevalent in non-incidents, it is also necessary to identify
the conditions set by the MSSP for raising an incident when a pri-
mary indicator is present. To demonstrate that the RWR algorithm
can learn both the primary indicators and the conditions under
0.00.20.40.60.81.0FP Rate0.00.20.40.60.81.0TP Rate0.9638 TP rate at 0.01 FP rateon confidence-weighted graphConfidenceUniform0.0000.0020.0040.0060.0080.010FP Rate0.00.20.40.60.81.0TP RateZoomed-in version of figure aboveConfidenceUniform206(a) Smoke Detector Incident Clusters
(b) MSSP Incident Clusters
Figure 7: A two-dimensional representation of clustering
results applied to novel incidents identi(cid:128)ed by Smoke De-
tector, and to pre-existing incidents detected by the MSSP.
Smoke Detector incidents are more diverse than the MSSP
incidents, which are dominated by a large cluster.
3. Of the 291 incidents that are represented in this sample, 236
were judged to be of critical severity or higher. Extrapolating from
this ratio, we expect that approximately 574 of the 708 top-ranked
machine-windows in our dataset represent critical incidents, which
represents a 19% increase in the number of critical incidents de-
tected by the MSSP over this time period, at a 1.4% False Positive
rate.
Next, we evaluate the diversity of the previously undiscovered
security incidents identi(cid:128)ed by Smoke Detector in comparison to
the critical incidents detected by the MSSP. We were pleased to (cid:128)nd
that the novel incidents found under these conditions are highly
diverse, even when compared to the MSSP’s incidents. To illustrate
this, we used t-Distributed Stochastic Neighbor Embedding (t-SNE)
[30] to produce a 2-dimensional clustering of 1000 Smoke Detector
incidents, and 1000 MSSP incidents from the same time-period.
Figure 7a shows that Smoke Detector produces many outliers and
small clusters, in clear contrast to the MSSP’s incidents, shown in
Figure 7b, which feature a dominant cluster.
7.2 Applying Smoke Detector to Primary
Indicator Classi(cid:128)cation
In addition to incident detection, we wanted to examine whether
Smoke Detector’s con(cid:128)dence generation algorithm could assist
with the important problem of detecting primary indicators in an
ecosystem of heterogeneous security devices from many vendors.
Traditionally, security events manually classi(cid:128)ed into primary in-
dicators, and secondary events are classi(cid:128)ed as supporting events,
and noise. Events labeled as noise are not considered to be use-
ful, and are ignored unless a customer speci(cid:128)cally requests to see
all events associated with a machine. Supporting events show up
alongside primary indicators whenever there is an infection and
provide important context, while primary indicators are used to
raise new security incidents.
Keeping current accurate classi(cid:128)cations is a critical challenge
for MSSPs and SIEMs for several reasons:
Figure 8: Result of re-classi(cid:128)cation e(cid:130)ort for events, fed
by candidate events identi(cid:128)ed by Smoke Detector as having
con(cid:128)dence above 0.9.
(1) MSSPs and SIEMs encounter many previously unseen event
types every day, making for a daunting manual classi(cid:128)ca-
tion problem. For example, in a 30-day period, the MSSP
we studied encountered an average of 957 new event types
per day.
(2) With over a million event types actively tracked, even a
small error rate will lead to a large number of misclassi(cid:128)ed
events over time.
(3) As the security landscape changes, the proper classi(cid:128)cation
of an existing event type may change. Regular reexamina-
tion of all event types is impractical at the scale that MSSPs
and SIEMs have to deal with.
We posited that Smoke Detector’s con(cid:128)dence scoring algorithm
could identify indicators with incorrect classi(cid:128)cations. To this
end, MSSP analysts began a regular review process that has so
far resulted in the review of 840 event types that had a(cid:138)ained a
con(cid:128)dence score greater than 0.9 and that had been previously been
ignored as noise. (cid:140)is reexamination resulted in 280 events pre-
viously regarded as noise being reclassi(cid:128)ed as primary indicators,
and another 342 noise events reclassi(cid:128)ed as supporting events (see
Figure 8 for the reclassi(cid:128)cation rates of internally- and externally-
sourced events). As only 0.06% of events manually classi(cid:128)ed over
the preceding 30 days had been re-classi(cid:128)ed as primary indica-
tors, with 1.85% reclassi(cid:128)ed as supporting events, Smoke Detector’s
identi(cid:128)cation of a set of candidate events that consist of 33% pri-
mary indicators, and 41% supporting events was clearly a major
improvement over generic reexamination.
(cid:140)e impact of these re-classi(cid:128)ed events was tracked for 10 days,
resulting in enhancements to 224 validated security incidents being
published to 49 distinct monitored organizations. Of these incidents,
10 incidents occurring at nine distinct organizations were validated
as critical incidents on severity criteria closely tracking NIST-800-
601 [5], including seven Unauthorized Vulnerability Scans, two
Trojan Horse Infections, and one hack tool a(cid:138)ack. Notably, for the
two Trojan Horse infections, Smoke Detector was responsible for
207Detection rates
Indicators evaded MSSP
One primary
Two primary
Smoke Detector
48.35% 67.21% TP rate at 0.1% FP rate
82.73% TP rate at 1% FP rate
56.1% TP rate at 0.1% FP rate
80% TP rate at 1% FP rate
33.01%
Table 4: Incident detection rates in an adversarial setting
where the attacker evades primary indicators. (cid:135)e MSSP re-
lies on primary indicators, hence their detection rates su(cid:130)er
signi(cid:128)cantly, where Smoke Detector manages to retain high
coverage by leveraging secondary indicators.
labeling the primary indicator, without which the infections would
have remained unidenti(cid:128)ed.
8 ADVERSARIAL RESISTANCE DISCUSSION
For any detection system to maintain its e(cid:130)ectiveness over time,
it is must be resistant to adversarial a(cid:138)acks. In this section, we
discuss the adversarial methods that we believe are the most likely
to have a negative impact on Smoke Detector.
Attack 1: Evasion of primary indicators. We consider the
evasion of primary indicators to be the most probable a(cid:138)ack against
Smoke Detector, since it is obviously bene(cid:128)cial to the a(cid:138)acker re-
gardless of whether Smoke Detector is deployed as a backup to the
individual security products that are in place to monitor the a(cid:138)ack.
Such a(cid:138)acks against primary detections, such as a(cid:138)acking antimal-
ware so(cid:137)ware by obfuscation are both practical and prevalent [20].
Likewise, it is reasonable to expect malware writers to purchase an
antivirus and not release their malware to the wild until they have
developed a version that is not detected. Such a(cid:138)acks are evidently
costly, however, to the point of being beyond the means of many
a(cid:138)ackers, since SIEMs and MSSPs are able to detect many serious
a(cid:138)acks on the basis of primary indicators. We therefore assume an
adversarial model in which the a(cid:138)acker has a constrained budget.
We run experiments to measure the extent by which primary-
indicator evasion degrades Smoke Detector’s ability to alert on
incidents relative to the MSSP, which detects incidents based on
the existence of one or more primary indicators. In the case of an
a(cid:138)ack that triggers a single primary indicator and raises no other
security events at all in this se(cid:138)ing, it is obvious that both Smoke
Detector and the MSSP perform equally badly, since there is no
evidence le(cid:137) on which to base a detection. (cid:140)e more interesting
case is that of an incident involving multiple events, of which
the a(cid:138)acker is able to remove one or more primary indicators,
since machines that provide a single primary indicator are typically
poorly monitored and reporting of useful additional secondary
indicators can be easily accomplished through the reporting of
Windows Security Event Logs and Unix-system equivalents. As
shown in Table 4, when the a(cid:138)acker evades one primary indicator
but secondary events remain, the MSSP’s detections are reduced
to the 48% of the original haul of incidents (those that were raised
by multiple primary indicators remain), while Smoke Detector’s
incident coverage retains 83% coverage at a 1% FP rate, thanks to its
ability to detect security incidents entirely on the basis of secondary
indicators.
In the case of a more powerful a(cid:138)acker capable of
evading two primary indicators (but not all secondary indicators),
Smoke Detector again outperforms traditional primary-indicator-
based detection techniques, retaining 80% coverage at a 1% FP rate,
while the MSSP’s coverage drops to 33%.
Attack 2: Drowning the signal in noise. It may prove less
expensive for an a(cid:138)acker to drown out the signal provided by strong
indicators in noise than to prevent these events from triggering.
Such a(cid:138)acks are not restricted to adversaries that have Smoke
Detector in mind, since human security analysts can easily miss
vital details in incidents that at times consist of millions of event
instances and hundreds of distinct event types, as in the case of
Denial of Service a(cid:138)acks that mask the presence of a more severe
targeted a(cid:138)ack [16]. (cid:140)is aspect of the problem is addressed by
Smoke Detector’s con(cid:128)dence scores, which allow the events that
compose a security incident to be listed in decreasing order of
con(cid:128)dence, as shown in Figure 4.
To assess the impact of a noise-based a(cid:138)ack on Smoke Detector’s
core detection capabilities, we added noise to known incidents,
both on con(cid:128)dence-weighted and uniformly-weighted versions of
Smoke Detector’s graph, under the assumption that the con(cid:128)dence
weights would provide increased resistance to an a(cid:138)acker. (cid:140)e
adversary a(cid:138)empts to reduce the relevance rank of an a(cid:138)ack by
triggering those security events that have the least relevance to
known security incidents, by establishing new edges between them