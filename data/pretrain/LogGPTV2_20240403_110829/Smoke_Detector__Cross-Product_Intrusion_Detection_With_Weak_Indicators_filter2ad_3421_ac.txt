### Scalability and Performance Evaluation

The algorithm's complexity is linear with respect to the number of edges, as stated in [36]. To validate this expectation, we conducted our evaluation on Amazon EMR using a cluster of 15 r4.2xlarge machines, each equipped with eight cores and 61GB of RAM. For this purpose, we generated several synthetic bipartite graphs that mirrored the structural properties of our dataset, with increasing edge counts. The size of each partition and the ratio of total edges were proportionally preserved. These graphs were stored in an adjacency list format in an object store [1].

Scalability results, presented in Figure 5, confirm that the algorithm scales linearly with the number of edges, aligning with the theoretical bound. Additionally, the runtime performance on the real dataset is also shown.

### Experiments

In this section, we evaluate Smoke Detector's ability to detect security incidents and its resistance to adversarial attacks. We start by demonstrating that Smoke Detector provides a straightforward, low-maintenance method for replicating critical incidents detected by a leading Managed Security Service Provider (MSSP) with high coverage and accuracy. We then analyze the machine-windows with the highest ranks assigned by Smoke Detector and present these to analysts to determine the percentage of undiscovered security incidents among them. Finally, we assess how Smoke Detector's confidence scores assist analysts in identifying primary indicators of compromise that were previously classified as secondary indicators.

#### Incident Detection and Coverage

To validate the effectiveness of Smoke Detector, we compared the results of Random Walk with Restart (RWR) using confidence-weighted edges to RWR with uniformly weighted edges. In the latter case, no prior knowledge of primary indicators was provided to the model.

We performed a 10-fold cross-validation experiment where the positive class represents machine-windows corresponding to critical severity incidents, and the negative class consists of all unknown-machine windows. The results, shown in Figure 6, indicate that the uniformly-weighted RWR model achieves 95.6% True Positive (TP) coverage at a 1% False Positive (FP) rate without any prior knowledge of primary indicators or event quality. The confidence-weighted graph slightly improves this to 96.4% TP coverage at the same FP rate. Importantly, the tunable weights in the confidence-weighted graph allow us to identify more valuable undiscovered security incidents in the 1% of unknown-machine days classified as "False Positives" in this experiment.

#### Evaluation by MSSP Analysts

To further validate the findings, we had a professional incident responder from the MSSP evaluate the top-ranked unknown machine-windows identified by Smoke Detector. This involved applying RWR with confidence-weighted edges to 52 million unknown machine-windows in our dataset. We presented the incident responder with a sample of 100 out of the top 708 machine-windows. To maximize the coverage of the analyst’s feedback, we clustered the 708 machine-windows using the DBSCAN algorithm, which yielded 25 clusters covering 30% of the machine-windows. The remaining 70% were unclustered. We sent the analyst a representative machine-window from each cluster and a stratified sample of 75 additional machine-windows. By weighing the incidents based on cluster size, we arrived at the results shown in Table 3.

Table 3 indicates that Smoke Detector increases the MSSP’s volume of critical or higher severity incidents by 19% at a 1.3% False Positive rate, while also finding some lower-severity security incidents.

#### Diversity of Detected Incidents

Next, we evaluated the diversity of the previously undiscovered security incidents identified by Smoke Detector compared to the critical incidents detected by the MSSP. Using t-Distributed Stochastic Neighbor Embedding (t-SNE) [30], we produced a 2-dimensional clustering of 1000 Smoke Detector incidents and 1000 MSSP incidents from the same time period. Figure 7a shows that Smoke Detector produces many outliers and small clusters, in contrast to the MSSP’s incidents, which feature a dominant cluster (Figure 7b).

#### Application to Primary Indicator Classification

In addition to incident detection, we examined whether Smoke Detector’s confidence generation algorithm could assist in detecting primary indicators in a heterogeneous security ecosystem. Traditionally, security events are manually classified into primary indicators, supporting events, and noise. Events labeled as noise are ignored unless a customer specifically requests to see all associated events. Supporting events provide context, while primary indicators are used to raise new security incidents.

Keeping current and accurate classifications is a critical challenge for MSSPs and SIEMs due to the following reasons:
1. MSSPs and SIEMs encounter many previously unseen event types daily, making manual classification daunting.
2. With over a million event types actively tracked, even a small error rate leads to a large number of misclassified events over time.
3. As the security landscape changes, the proper classification of existing event types may change, and regular reexamination is impractical at scale.

Smoke Detector’s confidence scoring algorithm can identify indicators with incorrect classifications. MSSP analysts reviewed 840 event types with a confidence score greater than 0.9, previously ignored as noise. This reexamination resulted in 280 events being reclassified as primary indicators and 342 as supporting events (see Figure 8). This is a significant improvement over generic reexamination, as only 0.06% of events manually classified over the preceding 30 days were reclassified as primary indicators, with 1.85% reclassified as supporting events.

#### Adversarial Resistance Discussion

For any detection system to maintain its effectiveness, it must be resistant to adversarial attacks. We discuss two potential adversarial methods:

**Attack 1: Evasion of Primary Indicators**
Evasion of primary indicators is the most probable attack against Smoke Detector. Such attacks, like obfuscation of malware, are both practical and prevalent. We assume an adversarial model with a constrained budget. Experiments show that when an attacker evades one primary indicator but secondary events remain, the MSSP’s detections are reduced to 48% of the original incidents, while Smoke Detector retains 83% coverage at a 1% FP rate. If the attacker evades two primary indicators, Smoke Detector retains 80% coverage, while the MSSP’s coverage drops to 33%.

**Attack 2: Drowning the Signal in Noise**
Another potential attack involves drowning the signal provided by strong indicators in noise. Such attacks are not limited to adversaries targeting Smoke Detector, as human analysts can miss vital details in incidents with millions of event instances. Smoke Detector’s confidence scores help by listing events in decreasing order of confidence, as shown in Figure 4. To assess the impact of a noise-based attack, we added noise to known incidents on both confidence-weighted and uniformly-weighted versions of Smoke Detector’s graph. The adversary attempts to reduce the relevance rank of an attack by triggering irrelevant security events, but the confidence weights provide increased resistance.

By addressing these challenges, Smoke Detector demonstrates robustness and effectiveness in both detecting and classifying security incidents.