### 库的源代码
下面是两个库的源代码。这部分代码、头文件、以及两个示例客户程序都可以在 [我的网页](https://condor.depaul.edu/mkalin) 上找到。
```
#include 
#include 
extern unsigned is_prime(unsigned n) {
  if (n  1;                   /* 2 和 3 是质数 */
  if (0 == (n % 2) || 0 == (n % 3)) return 0; /* 2 和 3 的倍数不会是质数 */
  /* 检查 n 是否是其他  2) printf("%i", n);
}
/* 工具函数：计算最大公约数 */
static unsigned gcd(unsigned n1, unsigned n2) {
  while (n1 != 0) {
    unsigned n3 = n1;
    n1 = n2 % n1;
    n2 = n3;
  }
  return n2;
}
extern unsigned are_coprimes(unsigned n1, unsigned n2) {
  return 1 == gcd(n1, n2);
}
extern void goldbach(unsigned n) {
  /* 输入错误 */
  if ((n  0)) {
    printf("Number must be > 2 and even: %i is not.\n", n);
    return;
  }
  /* 两个简单的例子：4 和 6 */
  if ((4 == n) || (6 == n)) {
    printf("%i = %i + %i\n", n, n / 2, n / 2);
    return;
  }
  /* 当 n > 8 时，存在多种可能性 */
  unsigned i;
  for (i = 3; i   /* 标准输入/输出函数 */
#include  /* 我的库函数 */
```
文件名两边的尖括号表示可以在编译器的搜索路径中找到这些头文件（对于 `primes.h` 文件来说在 `/usr/local/inlcude` 目录下）。如果不包含 `#include`，编译器会抱怨缺少 `is_prime` 和 `prime_factors` 等函数的声明，它们在两个库中都有发布。顺便提一句，测试程序的源代码不需要更改即可测试两个库中的每一个库。
相比之下，库的源文件（`primes.c`）使用 `#include` 指令打开以下头文件：
```
#include 