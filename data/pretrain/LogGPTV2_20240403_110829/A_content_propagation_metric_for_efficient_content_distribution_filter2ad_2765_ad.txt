gray area) to compensate.
width distribution. Content originates from two cache servers, sim-
ulating a distributed cache of movie ﬁles. Cache server A contains
a copy of every movie; cache server B has only a random 50% of
the library’s ﬁles to mitigate load on cache server A. Both servers
upload content at 50 KBytes/s, scaled down from a realistic data-
center bandwidth due to the number of simulated downloaders. We
show the system-wide aggregate bandwidth of each protocol over
a one-hour run (Figure 11).
Both BitTorrent and the global rarest policy ignore swarm- and
system-wide performance. The result is that singleton swarms and
small swarms from the long tail receive a high proportion of the
servers’ bandwidth. Such peers are unable to forward blocks as
rapidly as members of larger swarms, resulting in low aggregate
bandwidth for pure peer-to-peer approaches. V-Formation achieves
66% higher aggregate bandwidth than BitTorrent.
V-Formation differs from Antfarm in both the time to converge
on an allocation of bandwidth and the aggregate bandwidth itself
after convergence. Since V-Formation uses lightweight probes to
determine bandwidth allocations, it reaches a stable allocation of
bandwidth four times faster than Antfarm. Antfarm instead relies
on response curves to assess swarms, which requires the Antfarm
coordinator to remain at a particular bandwidth allocation for a
longer time before it becomes apparent which swarms beneﬁt most
from bandwidth.
Further, after the protocols converge, V-Formation and Antfarm
achieve different aggregate bandwidths due to constraints imposed
by individual peers’ bandwidths and swarm memberships. From
the experiment shown in Figure 11, consider two swarms s1 and
s2 for which peers measure comparable CPM values, where s1’s
movie is cached on both servers and s2’s movie is only cached
on server B. In this scenario, the Antfarm coordinator measures
a response curve for each of the two swarms and determines that
both swarms should receive approximately equal bandwidth from
the servers. However, Antfarm is unable to realize this allocation
due to the constraints of peers’ upload capacities and their swarm
memberships. The coordinator’s greedy solution to the assignment
problem results in suboptimal performance.
In contrast, the V-Formation coordinator uses each individual
peer’s beneﬁt to arrive at a more efﬁcient allocation of bandwidth.
A representative run of the experiment shows that both swarms re-
ceive comparable bandwidth from the cache servers despite the im-
balance in the cache servers’ content (Figure 12). Cache server B
334Figure 13: CPM values for competing swarms. Peer p1 has cached content for two large swarms s1 and s2 (left), and peer p2 has content
for s1 and a small swarm s3 (right). p2 creates competition for block uploads in s1, causing p1 to upload to s2.
Figure 14: Sensitivity to the measurement time interval. Competing swarms are indistinguishable for small τ . Sufﬁciently large τ enables
peer p to discover the swarm that receives the most beneﬁt from its blocks. The vertical dashed line shows the coordinator’s choice of τ
based on the measurements. Error bars indicate 95% conﬁdence.
The cache servers adjust their allocations to maintain proportional
swarm aggregate bandwidths by slightly sacriﬁcing the aggregate
bandwidths of s1 and s2 to bootstrap the new swarms. The caches’
bandwidth is too small to saturate peers’ upload capacities across
the ﬁve swarms, but V-Formation manages to converge on equal ag-
gregate bandwidths despite limited cache bandwidth. At 6000 sec-
onds, all peers in s1 and s2 leave simultaneously; the remaining
swarms each achieve an equal increase in aggregate bandwidth. V-
Formation adapts within ﬁve minutes to dramatic changes in swarm
memberships by choosing an appropriate block propagation time
measurement interval τ that enables hosts to efﬁciently detect the
swarms that beneﬁt most from their bandwidth (Figure 16). Cache
servers continuously shift their allocations based on changing CPM
values, and swarms dampen the effect that the ﬂuctuating alloca-
tions have on the swarms’ aggregate bandwidths.
7. RELATED WORK
Past work on content distribution falls into two categories: con-
tent distribution networks in general and peer-to-peer swarming
systems in particular.
Content distribution networks leverage distributed hosts to al-
leviate load at content origin servers and to improve latency and
bandwidth performance for clients. Akamai [18] is an infrastructure-
based CDN that many content providers use to distribute their con-
tent. ECHOS [20] proposes introducing infrastructure at the Inter-
net’s periphery to cache content near clients. Choffnes et al. [11]
reduce cross-ISP trafﬁc in peer-to-peer systems by harvesting data
Figure 15: Convergence and stability. Three cache servers con-
currently upload to two, ﬁve, and three identical swarms, indicated
by shaded areas. The protocol adapts quickly to the changes in-
troduced at the dotted lines, achieving equal aggregate bandwidth
across swarms in each interval.
presence of churn.
In both experiments, three cache servers ini-
tially provide content to two identical swarms s1 and s2, each with
50 peers. Again, peers have asymmetric upload and download
links drawn from the same measured BitTorrent distribution. Due
to symmetry, both swarms receive an even split of the servers’
bandwidth and achieve equal aggregate bandwidth (Figure 15). At
3000 seconds, identical swarms s3, s4, and s5 simultaneously join.
335ply and demand for content blocks at each peer according to avail-
able network resources. The protocol enables ISPs to set a cost on
transferring data over speciﬁc network links. It enables peers to
adjust block prices based on local content demand; V-Formation,
on the other hand, takes a holistic view of the relative contributions
that peers bring to their swarms.
The work most similar to V-Formation is Antfarm [32], a con-
tent distribution system that measures swarms’ responses to seeder
bandwidth in order to optimize its uploads among competing swarms.
Antfarm does not efﬁciently allocate bandwidth from multiple ori-
gin servers or from in-networking cache servers, which belong to
multiple, overlapping swarms. In contrast, V-Formation accounts
for bandwidth from all hosts based on real-time measurements us-
ing the CPM.
8. CONCLUSIONS
This paper introduced the Content Propagation Metric, which
enables content distribution systems to make efﬁcient use of band-
width from all sources, including content distributors’ origin servers,
in-network caches, and clients. The CPM captures how quickly
content propagates throughout swarms, providing hosts a basis of
comparison that they can use to preferentially upload content to
swarms that exhibit high marginal utility. A new content distribu-
tion system called V-Formation, based on a hybrid, peer-assisted
architecture, uses the CPM to allocate hosts’ bandwidth among
competing swarms. V-Formation achieves a global performance
goal of maximizing system-wide aggregate bandwidth by using the
CPM to guide hosts toward an efﬁcient use of resources. The CPM
naturally handles dynamic swarm and peer behavior, and enables
V-Formation to stabilize quickly on an efﬁcient allocation of band-
width. The ﬂexibility of the CPM makes V-Formation efﬁcient and
scalable, rendering it well-suited to address the increasing demand
for online media content.
9. ACKNOWLEDGMENTS
We would like to thank our shepherd Michael J. Freedman and
the anonymous reviewers for their insights and comments. This
material is based upon work supported by the National Science
Foundation under Grant No. 0546568 and the 2009 Google Fel-
lowship in Distributed Systems.
10. REFERENCES
[1] BitTorrent. http://bittorrent.com.
[2] FlixQ.com – Videosharing For The Masses. http://ﬂixq.com.
[3] Ipoque – Internet Studies
http://www.ipoque.com/resources/internet-studies.
[4] Velocix – New Generation Content Delivery Network
http://www.velocix.com.
[5] Verivue – OneVantage Content Delivery Solution
http://verivue.com.
[6] A. C. Bavier, M. Bowman, B. N. Chun, D. E. Culler, S.
Karlin, S. Muir, L. L. Peterson, T. Roscoe, T. Spalink, and M.
Wawrzoniak. Operating Systems Support For Planetary-scale
Network Services. Symposium on Networked System Design
and Implementation, San Francisco, CA, March 2004.
[7] J. W. Byers, M. Luby, M. Mitzenmacher, and A. Rege. A
Digital Fountain Approach To Reliable Distribution Of Bulk
Data. SIGCOMM Conference, Vancouver, Canada, August
1998.
[8] A. Chankhunthod, P. B. Danzig, C. Neerdaels, M. F.
Schwartz, and K. J. Worrell. A Hierarchical Internet Object
Figure 16: Time measurement interval and churn. Swarm
memberships change drastically at the two vertical dashed lines.
A measurement time interval τ that is too large or too small results
in suboptimal performance. V-Formation chooses τ to maximize
aggregate bandwidth.
from existing CDNs for locality information. Numerous CDNs
rely on consistent hashing within distributed hash tables to repli-
cate content for faster downloads and higher availability [14, 38];
in general, cooperative web caching dissipates load at servers [8,15,
17, 37]. CoBlitz [26] uses proxies to disseminate content in pieces
and assemble it near downloaders. V-Formation uses the CPM to
make efﬁcient use of bandwidth from all hosts, including server-
class machines that cache content in the network.
Swarming systems leverage bandwidth contributed by peers in a
mesh network for increased scalability and resiliency. BitTorrent [9],
a swarming protocol that contributes to much of the Internet’s traf-
ﬁc [25, 36], encourages peers to contribute their bandwidth us-
ing a bilateral tit-for-tat mechanism. Much prior work has mea-
sured and modeled BitTorrent’s performance and tit-for-tat strat-
egy, showing that it is susceptible to Sybil attacks [12] and is easily
gamed [21, 27, 34]. New protocols have responded to BitTorrent’s
incentive mechanism that emphasize fairness using cryptographic-
or auction-based mechanisms [24, 33, 35]. Such protocols encour-
age peers to contribute bandwidth in order to be rewarded with a
proportional or equal number of content blocks. Fairness is not
a primary concern of V-Formation; while some protocols rely on
fairness for incentive compatibility, V-Formation enforces behavior
with its coordinator, freeing it to maximizing system-wide perfor-
mance instead.
Many swarming protocols rely on cryptographic virtual curren-
cies to incentivize peers to contribute bandwidth. Dandelion [35]
and BAR Gossip [22] employ tamper-resistant protocols that en-
sure that peers are honest. Similarly, microcurrencies [10,23,30,39]
rely on cryptographic tokens exchanged between parties to enforce
correct behavior. V-Formation extends the lightweight token proto-
col introduced by Antfarm [32] to incentivize peers to follow the
prescribed protocol and risk being discovered and blacklisted if
they deviate.
One-Hop Reputations [28] and Contracts [29] use propagation
trees of depth one to increase peer accountability in bulk download
and live streaming systems, respectively. The protocols introduce
peer incentivization strategies that outperform BitTorrent’s bilateral
tit-for-tat approach. The CPM is deﬁned by content propagation
trees that measure the beneﬁt of a host to particular swarms.
Freedman et al. [13] propose a protocol that manages downloads
in a multi-ﬁle system. Peers use a distributed algorithm to deter-
mine the relative values of content ﬁles and the market-based sup-
336Cache. USENIX Annual Technical Conference, San Diego,
CA, January 1996.
[9] B. Cohen. Incentives Build Robustness In BitTorrent.
Workshop on the Economics of Peer-to-Peer Systems,
Berkeley, CA, May 2003.
[10] J. Camp, M. Sirbu, and J. D. Tygar. Token And Notational
Money In Electronic Commerce. USENIX Workshop on
Electronic Commerce, New York, NY, July 1995.
[11] D. R. Choffnes and F. E. Bustamante. Taming The Torrent: A
Practical Approach To Reducing Cross-ISP Trafﬁc In
Peer-to-Peer Systems. SIGCOMM Conference, Seattle, WA,
August 2008.
[12] J. R. Douceur. The Sybil Attack. International Workshop on
Peer-to-Peer Systems, Springer Lecture Notes in Computer
Science 2429, Cambridge, MA, March 2002.
[13] M. J. Freedman, C. Aperjis, and R. Johari. Prices Are Right:
Managing Resources And Incentives In Peer-Assisted
Content Distribution. International Workshop on
Peer-to-Peer Systems, Tampa Bay, FL, February 2008.
[14] M. J. Freedman, E. Freudenthal, and D. Mazières.
Democratizing Content Publication With Coral. Symposium
on Networked System Design and Implementation, San
Francisco, CA, March 2004.
[15] S. Gadde, J. S. Chase, and M. Rabinovich. Web Caching And
Content Distribution: A View From The Interior. Computer
Communications, 24(2), May 2001.
[16] C. Huang, J. Li, and K. W. Ross. Can Internet
Video-on-Demand Be Proﬁtable? SIGCOMM Conference,
2007.
[17] D. Karger, A. Sherman, A. Berkheimer, B. Bogstad, R.
Dhanidina, K. Iwamoto, B. Kim, L. Matkins, and Y.
Yerushalmi. Web Caching With Consistent Hashing.
International World Wide Web Conference, Toronto, Canada,
May 1999.
[18] D. R. Karger, E. Lehman, F. T. Leighton, R. Panigrahy, M. S.
Levine, and D. Lewin. Consistent Hashing And Random
Trees: Distributed Caching Protocols For Relieving Hot
Spots On The World Wide Web. ACM Symposium on Theory
of Computing, El Paso, TX, May 1997.
[19] D. Levin, K. LaCurts, N. Spring, and B. Bhattacharjee.
BitTorrent Is An Auction: Analyzing And Improving
BitTorrent’s Incentives. SIGCOMM Conference, Seattle,
WA, August 2008.
[20] N. Laoutaris, P. Rodriguez, and L. Massoulie. Echos: Edge
Capacity Hosting Overlays Of Nano Data Centers. ACM
SIGCOMM: Computer Communication Review, 38, January
2008.
[21] T. Locher, P. Moor, S. Schmid, and R. Wattenhofer. Free
Riding In BitTorrent Is Cheap. Workshop on Hot Topics in
Networks, Irvine, CA, November 2006.
[22] H. C. Li, A. Clement, E. L. Wong, J. Napper, I. Roy, L.
Alvisi, and M. Dahlin. Bar Gossip. Symposium on Operating
System Design and Implementation, Seattle, WA, November
2006.
[23] M. Manasse. The Millicent Protocol For Electronic
Commerce. USENIX Workshop on Electronic Commerce,
New York, NY, August 1995.
[24] T.-W. Ngan, D. S. Wallach, and a. P. Druschel. Enforcing
Fair Sharing Of Peer-to-Peer Resources. International
Workshop on Peer-to-Peer Systems, Springer Lecture Notes
in Computer Science 2735, Berkeley, CA, February 2003.
[25] J. Pouwelse, P. Garbacki, D. Epema, and H. Sips. The
BitTorrent P2P File-Sharing System: Measurements And
Analysis. International Workshop on Peer-to-Peer Systems,
Springer Lecture Notes in Computer Science 3640, Ithaca,
NY, February 2005.
[26] K. Park and V. S. Pai. Scale And Performance In Coblitz
Large-ﬁle Distribution Service. Symposium on Networked
System Design and Implementation, San Jose, CA, May
2006.
[27] M. Piatek, T. Isdal, T. Anderson, A. Krishnamurthy, and A.
Venkataramani. Do Incentives Build Robustness In
BitTorrent? Symposium on Networked System Design and
Implementation, Cambridge, MA, April 2007.
[28] M. Piatek, T. Isdal, A. Krishnamurthy, and T. Anderson. One
Hop Reputations For Peer To Peer File Sharing Workloads.
Symposium on Networked System Design and
Implementation, San Francisco, CA, April 2008.
[29] M. Piatek, A. Krishnamurthy, A. Venkataramani, R. Yang, D.
Zhang, and A. Jaffe. Contracts: Practical Contribution
Incentives For P2P Live Streaming. Symposium on
Networked System Design and Implementation, San Jose,
CA, April 2010.
[30] T. Poutanen, H. Hinton, and M. Stumm. Netcents: A
Lightweight Protocol For Secure Micropayments. USENIX
Workshop on Electronic Commerce, Boston, MA, August
1998.
[31] J. A. Pouwelse, P. Garbacki, J. Wang, A. Bakker, J. Yang, A.
Iosup, D.H.J. Epema, M. Reinders, M. van Steen, and H.J.
Sips. International Workshop on Peer-to-Peer Systems, Santa
Barbara, CA, February 2006.
[32] R. S. Peterson and E. G. Sirer. Antfarm: Efﬁcient Content
Distribution With Managed Swarms. Symposium on
Networked System Design and Implementation, Boston, MA,
April 2009.
[33] A. Sherman, J. Nieh, and C. Stein. Fairtorrent: Bringing
Fairness To Peer-to-Peer Systems. Conference on emerging
Networking EXperiments and Technologies, Rome, Italy,
December 2009.
[34] M. Sirivianos, J. H. Park, R. Chen, and X. Yang. Free-riding
In BitTorrent Networks With The Large View Exploit.
International Workshop on Peer-to-Peer Systems, Bellevue,
WA, February 2007.
[35] M. Sirivianos, X. Yang, and S. Jarecki. Dandelion:
Cooperative Content Distribution With Robust Incentives.
USENIX Annual Technical Conference, Santa Clara, CA,
June 2007.
[36] S. Saroiu, P. K. Gummadi, R. J. Dunn, S. D. Gribble, and
H. M. Levy. An Analysis Of Internet Content Delivery
Systems. Symposium on Operating System Design and
Implementation, Boston, MA, December 2002.
[37] A. Wolman, G. M. Voelker, N. Sharma, N. Cardwell, A. R.
Karlin, and H. M. Levy. On The Scale And Performance Of
Cooperative Web Proxy Caching. Symposium on Operating
Systems Principles, Kiawah Island, SC, December 1999.
[38] L. Wang, K. Park, R. Pang, V. S. Pai, and L. L. Peterson.
Reliability And Security In The Codeen Content Distribution
Network. USENIX Annual Technical Conference, Boston,
MA, June 2004.
[39] P. Wayner. Digital Cash: Commerce On The Net. Morgan
Kaufmann, April 1996.
337