4 cat /etc/redhat-release
# !4
cat /etc/redhat-release
Fedora release 9 (Sulphur)
72
Linux 101 Hacks www.thegeekstuff.com
Hack 54. Execute previous command that starts with
a specific word
Type ! followed by the starting few letters of the command that you would
like to re-execute. In the following example, typing !ps and enter, executed
the previous command starting with ps, which is ‘ps aux | grep yp’.
# !ps
ps aux | grep yp
root 16947 0.0 0.1 36516 1264 ?
Sl 13:10 0:00 ypbind
root 17503 0.0 0.0 4124 740 pts/0
S+ 19:19 0:00 grep yp
Hack 55. Control the total number of lines in the
history using HISTSIZE
Append the following two lines to the .bash_profile and relogin to the bash
shell again to see the change. In this example, only 450 command will be
stored in the bash history.
# vi ~/.bash_profile
HISTSIZE=450
HISTFILESIZE=450
Hack 56. Change the history file name using HISTFILE
By default, history is stored in ~/.bash_history file. Add the following line to
the .bash_profile and relogin to the bash shell, to store the history command
in .commandline_warrior file instead of .bash_history file. I’m yet to figure
out a practical use for this. I can see this getting used when you want to track
commands executed from different terminals using different history file
name.
73
Linux 101 Hacks www.thegeekstuff.com
# vi ~/.bash_profile
HISTFILE=/root/.commandline_warrior
Hack 57. Eliminate the continuous repeated entry
from history using HISTCONTROL
In the following example pwd was typed three times, when you do history,
you can see all the 3 continuous occurrences of it. To eliminate duplicates,
set HISTCONTROL to ignoredups as shown below.
# pwd
# pwd
# pwd
# history | tail -4
44 pwd
45 pwd
46 pwd
47 history | tail -4
[Note: There are three pwd commands in history, after
executing pwd 3 times as shown above]
# export HISTCONTROL=ignoredups
# pwd
# pwd
# pwd
# history | tail -3
56 export HISTCONTROL=ignoredups
57 pwd
58 history | tail -4
74
Linux 101 Hacks www.thegeekstuff.com
[Note: There is only one pwd command in the history,
even after executing pwd 3 times as shown above]
Hack 58. Erase duplicates across the whole history
using HISTCONTROL
The ignoredups shown above removes duplicates only if they are consecutive
commands. To eliminate duplicates across the whole history, set the
HISTCONTROL to erasedups as shown below.
# export HISTCONTROL=erasedups
# pwd
# service httpd stop
# history | tail -3
38 pwd
39 service httpd stop
40 history | tail -3
# ls -ltr
# service httpd stop
# history | tail -6
35 export HISTCONTROL=erasedups
36 pwd
37 history | tail -3
38 ls –ltr
39 service httpd stop
40 history | tail -6
[Note: The previous service httpd stop after pwd got
erased]
75
Linux 101 Hacks www.thegeekstuff.com
Hack 59. Force history not to remember a particular
command using HISTCONTROL
When you execute a command, you can instruct history to ignore the
command by setting HISTCONTROL to ignorespace AND typing a space in front
of the command as shown below. I can see lot of junior sysadmins getting
excited about this, as they can hide a command from the history.
It is good to understand how ignorespace works. But, as a best practice, don’t
hide purposefully anything from history.
# export HISTCONTROL=ignorespace
# ls –ltr
# pwd
# service httpd stop
[Note: There is a space at the beginning of service,
to ignore this command from history]
# history | tail -3
67 ls –ltr
68 pwd
69 history | tail -3
Hack 60. Clear all the previous history using option -c
Sometime you may want to clear all the previous history. However you may
still want to keep the history moving forward.
# history -c
76
Linux 101 Hacks www.thegeekstuff.com
Hack 61. Substitute words from history commands
When you are searching through history, you may want to execute a different
command but use the same parameter from the command that you’ve just
searched.
In the example below, the !!:$ next to the vi command gets the argument
from the previous command to the current command.
# ls anaconda-ks.cfg
anaconda-ks.cfg
# vi !!:$
vi anaconda-ks.cfg
In the example below, the !^ next to the vi command gets the first argument
from the previous command (i.e cp command) to the current command (i.e vi
command).
# cp anaconda-ks.cfg anaconda-ks.cfg.bak
anaconda-ks.cfg
# vi !^
vi anaconda-ks.cfg
Hack 62. Substitute a specific argument for a specific
command
In the example below, !cp:2 searches for the previous command in history
that starts with cp and takes the second argument of cp and substitutes it for
the ls -l command as shown below.
77
Linux 101 Hacks www.thegeekstuff.com
# cp ~/longname.txt /really/a/very/long/path/long-
filename.txt
# ls -l !cp:2
ls -l /really/a/very/long/path/long-filename.txt
In the example below, !cp:$ searches for the previous command in history
that starts with cp and takes the last argument (in this case, which is also the
second argument as shown above) of cp and substitutes it for the ls -l
command as shown below.
# ls -l !cp:$
ls -l /really/a/very/long/path/long-filename.txt
Hack 63. Disable the usage of history using HISTSIZE
If you want to disable history all together and don’t want bash shell to
remember the commands you’ve typed, set the HISTSIZE to 0 as shown below.
# export HISTSIZE=0
# history
# [Note: History did not display anything]
Hack 64. Ignore specific commands from the history
using HISTIGNORE
Sometimes you may not want to clutter your history with basic commands
such as pwd and ls. Use HISTIGNORE to specify all the commands that you
want to ignore from the history.
78
Linux 101 Hacks www.thegeekstuff.com
Please note that adding ls to the HISTIGNORE ignores only ls and not ls -l. So,
you have to provide the exact command that you would like to ignore from
the history.
# export HISTIGNORE=”pwd:ls:ls –ltr:”
# pwd
# ls
# ls -ltr
# service httpd stop
# history | tail -3
79 export HISTIGNORE=”pwd:ls:ls -ltr:”
80 service httpd stop
81 history
[Note: History did not display pwd and ls]
79
Linux 101 Hacks www.thegeekstuff.com
Chapter 9: System Administration Tasks
Hack 65. Partition using fdisk
After you’ve installed brand new disks on your server, you have to use tools
like fdisk to partition it accordingly.
Following are the 5 typical actions (commands) that you can execute inside
fdisk.
o n – New Partition creation
o d – Delete an existing partition
o p - Print Partition Table
o w – Write the changes to the partition table. i.e save.
o q – Quit the fdisk utility
Create a partition
In the following example, I created a /dev/sda1 primary partition.
# fdisk /dev/sda
Device contains neither a valid DOS partition table,
nor Sun, SGI or OSF disklabel Building a new DOS
disklabel. Changes will remain in memory only,
until you decide to write them. After that, of course,
the previous content won't be recoverable.
The number of cylinders for this disk is set to 34893.
There is nothing wrong with that, but this is larger
than 1024, and could in certain setups cause problems
with:
80
Linux 101 Hacks www.thegeekstuff.com
1) software that runs at boot time (e.g., old versions
of LILO)
2) booting and partitioning software from other OSs
(e.g., DOS FDISK, OS/2 FDISK)
Warning: invalid flag 0x0000 of partition table 4 will
be corrected by w(rite)
Command (m for help): p
Disk /dev/sda: 287.0 GB, 287005343744 bytes
255 heads, 63 sectors/track, 34893 cylinders
Units = cylinders of 16065 * 512 = 8225280 bytes
Device Boot Start End Blocks Id System
Command (m for help): n
Command action
e extended
p primary partition (1-4)
p
Partition number (1-4): 1
First cylinder (1-34893, default 1):
Using default value 1
Last cylinder or +size or +sizeM or +sizeK (1-34893,
default 34893):
Using default value 34893
Command (m for help): w
The partition table has been altered!
Calling ioctl() to re-read partition table.
Syncing disks.
Verify that the partition got created successfully
# fdisk /dev/sda
The number of cylinders for this disk is set to 34893.
There is nothing wrong with that, but this is larger
than 1024, and could in certain setups cause problems
with:
81
Linux 101 Hacks www.thegeekstuff.com
1) software that runs at boot time (e.g., old versions
of LILO)
2) booting and partitioning software from other OSs
(e.g., DOS FDISK, OS/2 FDISK)
Command (m for help): p
Disk /dev/sda: 287.0 GB, 287005343744 bytes
255 heads, 63 sectors/track, 34893 cylinders
Units = cylinders of 16065 * 512 = 8225280 bytes
Device Boot Start End Blocks Id System
/dev/sda1 1 34893 280277991 83 Linux
Command (m for help): q
Hack 66. Format a partition using mke2fsk
After partitioning the disks, it is still not ready for usage, as we need to
format the disk. At this stage, if you try to view the disk information, it will
give the following error message indicating that no valid superblock is
present.
# tune2fs -l /dev/sda1
tune2fs 1.35 (28-Feb-2004)
tune2fs: Bad magic number in super-block while trying
to open /dev/sda1
Couldn't find valid filesystem superblock.
To format the disk, use mke2fs as shown below.
# mke2fs /dev/sda1
You can also pass the following optional parameter to the mke2fs.
82
Linux 101 Hacks www.thegeekstuff.com
o -m 0 : reserved-blocks-percentage – This indicates the
percentage of the filesystem blocks reserved for the root user.
Default is 5%. In the following example, it is set to 0.
o -b 4096 : block-size specified in bytes. Valid values are 1024,
2048 and 4096 bytes per block.
# mke2fs -m 0 -b 4096 /dev/sda1
mke2fs 1.35 (28-Feb-2004)
Filesystem label=
OS type: Linux
Block size=4096 (log=2)
Fragment size=4096 (log=2)
205344 inodes, 70069497 blocks
0 blocks (0.00%) reserved for the super user
First data block=0
Maximum filesystem blocks=71303168
2139 block groups
32768 blocks per group, 32768 fragments per group
96 inodes per group
Superblock backups stored on blocks:
32768, 98304, 163840, 229376, 294912, 819200, 884736,
1605632, 2654208, 4096000, 7962624, 11239424, 20480000,
23887872
Writing inode tables: done
Writing superblocks and filesystem accounting
information: done
This filesystem will be automatically checked every 32
mounts or 180 days, whichever comes first. Use tune2fs
-c or -i to override.
The above command will create an ext2 filesystem. To create an ext3 file
system do the following:
# mkfs.ext3 /dev/sda1
# mke2fs –j /dev/sda1
83
Linux 101 Hacks www.thegeekstuff.com
Hack 67. Mount the partition
After creating a partition and formatting, you can mount it to a mount point.
First create a directory where the partition should be mounted.
# mkdir /home/database
Mount the file system.
# mount /dev/sda1 /home/database
To automatically mount the filesystem after the reboot, add the following
entry to the /etc/fstab
/dev/sdaa /home/database ext3 defaults 0 2
Hack 68. Fine tune the partition using tune2fs
Use the tune2fs –l /dev/sda1 to view the filesystem information as shown
below.
# tune2fs -l /dev/sda1
tune2fs 1.35 (28-Feb-2004)
Filesystem volume name: /home/database
Last mounted on: 
Filesystem UUID: f1234556-e123-1234-abcd-
bbbbaaaaae11
Filesystem magic number: 0xEF44
Filesystem revision #: 1 (dynamic)
Filesystem features: resize_inode filetype
sparse_super
Default mount options: (none)
Filesystem state: not clean
84
Linux 101 Hacks www.thegeekstuff.com
Errors behavior: Continue
Filesystem OS type: Linux
Inode count: 1094912
Block count: 140138994
Reserved block count: 0
Free blocks: 16848481
Free inodes: 1014969
First block: 0
Block size: 2048
Fragment size: 2048
Reserved GDT blocks: 512
Blocks per group: 16384
Fragments per group: 16384
Inodes per group: 128
Inode blocks per group: 8
Filesystem created: Tue Jul 1 00:06:03 2008
Last mount time: Thu Aug 21 05:58:25 2008
Last write time: Fri Jan 2 15:40:36 2009
Mount count: 2
Maximum mount count: 20
Last checked: Tue Jul 1 00:06:03 2008
Check interval: 15552000 (6 months)
Next check after: Sat Dec 27 23:06:03 2008
Reserved blocks uid: 0 (user root)
Reserved blocks gid: 0 (group root)
First inode: 11
Inode size: 128
Default directory hash: tea
Directory Hash Seed: 12345829-1236-4123-9aaa-
ccccc123292b
You can also use the tune2fs to tune the ex2/ext3 filesystem parameter. For
example, if you want to change the Filesystem volume name, you can do it as
shown below.
# tune2fs -l /dev/sda1 | grep volume
Filesystem volume name: /home/database
# tune2fs -L database-home /dev/emcpowera1
tune2fs 1.35 (28-Feb-2004)
85
Linux 101 Hacks www.thegeekstuff.com