User: Nginx and Apache are deployed on a Linux server, how to configure reverse proxy to achieve load balancing?
Assistant: First you need to configure a reverse proxy on Nginx. The specific steps are as follows: 1. Add the following content to the Nginx configuration file: ``` upstream backend { server apache1.example.com weight=5; server apache2.example.com; server apache3.example.com; } ``` 2. Configure the virtual host of Nginx: forward the client request to the upstream server group, and specify the load balancing algorithm. For example: ``` server { listen 80; server_name example.com; location / { proxy_pass http://backend; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # payload Balance algorithm # ip_hash; # least_conn; # random; } } ``` In the above example, three upstream servers are defined through the upstream directive. Among them, the server apache1.example.com with a weight of 5 will be preferred. In addition, load balancing algorithms such as ip_hash, least_conn or random can also be used. 3. Reload the Nginx configuration file to make it effective: ``` sudo systemctl reload nginx ``` Next, you can implement reverse proxy and load balancing through Nginx. When the client sends a request to the Nginx server, Nginx will forward the request to the corresponding backend Apache server for processing according to its load balancing algorithm. It should be noted that in the above configuration, the response seen by the client is still returned by the Nginx server. If you need the Apache server to return a response, you need to set the Apache server as the backend server of Nginx, and configure the load balancing algorithm of Nginx as proxy_next_upstream.