Morphing Attack: A text-to-speech tool that can speak with a vic-
tim’s voice might be suitable for a morphing attack. Such systems
usually require a large collection of good quality training data to
capture features, style, and articulation of the source voice. For
example, AT&T Natural Voices [5] and Model Talker [6] promises
good quality synthesis. However, still after hours of training, voices
generated by such systems may sound synthesized and unnatural.
An alternative is voice converters that convert a source voice to a
target voice by mapping features between the two voices. The voice
conversion framework we used in our morphing attack is CMU’s
Festvox [4] voice transformation. Festvox gets trained by only a
few sentences (less than three minutes) spoken in both the source
(attacker or default Text-to-Speech, TTS voices) and the target (vic-
tim). Therefore it requires much less effort than other synthesizers.
Once trained, a synthesized voice is built based on the target sys-
tem. It can either act as a TTS tool in the victim’s voice or can
be used to convert any utterance spoken by Mallory to the same
utterance in the victim’s voice. Rather than converting properties
of the voice, Festvox predicts the position of articulators from the
speech signal and maps between the speakers and create voices in
the target voice.
We trained the system with less than 50 sentences from the
victim and an attacker voice, and converted all the possible SAS
atomic units from the attacker voice to the victim voice. Using this
system, we built an ofﬂine dictionary of all possible SAS combi-
nations even though the SAS atomic units have not been spoken
by the victim before. The ofﬂine dictionary can be queried at the
MITM attack time to insert new forged SAS.
Attack Implementation – Putting the Pieces Together: To eval-
uate the feasibility of our attack, we setup an RTP communication
channel between Alice and Bob with Mallory acting as the router
in the middle. We used the JMF framework to send audio captured
from the built-in microphone of Alice’s computer to Mallory. Mal-
lory receives the RTP stream and stores it in WAV format audio ﬁle.
Duration of each audio ﬁle is set to be 3 seconds.
In the attack, Mallory’s initial goal is to search for the presence
of a SAS in the regular conversation between Alice and Bob. To
this end, after receiving the ﬁrst audio ﬁle, our application on Mal-
lory’s node calls CMU Sphinx keyword spotter to look up possible
SAS in the captured audio ﬁles. We evaluated the performance of
the attacking application with two different grammars. The ﬁrst
grammar looks up all possible SAS combinations. For example, a
two word PGP word list SAS could be “dashboard liberty” which
is included in our keyword spotter grammar. The second grammar
just looks up some possible phrases that Alice and Bob might say
just before conﬁrming the SAS such as “SAS shown on my side
is ...", or “My SAS is ...”. The second grammar makes the key-
word spotting faster but it is not completely predictable, as there
are many ways which users can conﬁrm their SASs.
We assume that SAS atomic units (e.g., digits or words) have
already been forged and are stored on Mallory’s system for further
use following the morphing or reordering attack discussed earlier
in this chapter. The keyword spotter works in parallel with RTP
receiver, audio ﬁles are stored and processed in a First-In-First-
Out (FIFO) order. Those ﬁles containing SAS are replaced with
same size (bit-wise) recording matching the MITM desired SAS,
and ﬁles not containing the SAS are simply relayed to Bob.
SAS might split in two audio ﬁles in some situations. This means
that one part of the SAS is located at the end of one ﬁle and the
other part is located at the beginning of the second ﬁle. To detect
such combinations, our keyword spotter concatenate current cap-
tured ﬁle with the previous ﬁle and looks for the SAS in the mixed
ﬁle. The performance of this attack is provided in Section 5.
5. EXPERIMENTS AND EVALUATION
In order to measure the effectiveness of our attacks, we per-
formed objective and subjective evaluations. The objective evalua-
tion quantitatively measures the similarity of a forged voice to the
original voice. The subjective evaluation measures human users’
qualitative capability of differentiating a forged voice and the orig-
inal voice so as to detect our attacks. In this section, we present
both forms of evaluations and the respective results. Moreover, we
report on the delay introduced by our attacks.
5.1 Objective Evaluation
In speech and speaker recognition systems, it is common to ex-
tract a multi-dimensional vector of components of the underlying
audio to identify the linguistic features of the signal. We used
Mel-Cepstral Distortion (MCD) to measure the similarity between
a forged (converted) SAS and an original SAS by calculating the
Euclidean distance between feature vector of the forged SAS and
that of the original SAS. A similar strategy has been used in several
speech conversion and synthesis systems [20,27,29] to measure the
distance between a synthesized and an original version of the same
utterance. If the difference between feature vector of the original
SAS and the forged SAS is minimized, the forged voice is close
to the original voice and detecting the attack would be inherently
difﬁcult. Lower MCD shows better conversion (a forged SAS is so
similar to the original one that it is not easy to distinguish the two).
To compute MCD, we extract features of the forged SAS (fSAS)
built from attack engine (morpher) and features of the original
SAS (oSAS) spoken by the victim, and calculate the difference be-
tween the two. MCD computation is deﬁned in Equation 1, where
vf SAS
denotes the d-
d
th MCEP of oSAS. In TTS applications, typical parameters are 25
dimensional mel-frequency scaled cepstral coefﬁcients (d between
0 to 24). The 0-th dimension represents the overall signal power
(loudness). Therefore, to eliminate the effect of speaker loudness,
MCD has been calculated for d = 1..24.
denotes the d-th MCEP1 of fSAS and voSAS
d
(cid:118)(cid:117)(cid:117)(cid:116)2
24(cid:88)
(cid:16)
d=1
(cid:17)2
M CD(vf SAS , voSAS ) =
10
ln(10)
vf SAS
d
− voSAS
d
(1)
In our objective evaluation, we trained the voice conversion en-
gine to convert between pairs of 8 different male and female speak-
ers from our voice dataset (Section 4) representing victims and at-
tackers. A combination of 20 different conversions was built. To
ﬁrst test the effect of the training set size on the conversion perfor-
mance, we trained the system with 50, 100, and 200 sentences. We
noticed an average MCD improvement of only 1.6% by increasing
the size of the training set from 50 to 100 and an average MCD
improvement of only 1.1% by increasing the size of the training set
from 100 to 200. This means that increasing the training set size be-
yond 50 sentences does not signiﬁcantly improve the performance
of conversion. As a result, in the rest of the experiments, we use 50
ﬁrst sentences of Arctic dataset in the training phase. The average
duration of each utterance of the training set is 5 seconds, and the
average duration of the whole set of 50 sentences is 2 minutes and
30 seconds. This means that in order to train a system to speak in
the victim’s voice, we are required to collect less than 3 minutes of
her voice. This is quite short and therefore training does not seem
to impose a challenge for the attacker in the conversion process.
Table 1 presents the results of our objective evaluation. We
present the results of only 4 conversions between same genders and
1Weighted average of the magnitudes of cepstral peaks.
Row Utterances
1
2
3
4
First 50 Sentences of Arctic
Conversion Name Target (Victim)
Single Speaker
Source (Attacker)
Table 1: Objective evaluation results for the morphing attack
Male 1
Male 2
5.65
2.34
8.28
4.91
MCD Before Conversion (dB)
MCD After Conversion (dB)
MCD Before Conversion (dB)
MCD After Conversion (dB)
Female 1
Female 2
5.28
2.11
7.27
4.64
Source to Target
Female 2
Male 2
5.65
2.34
8.94
4.97
5
6
7
20 SASs of Different Sizes
Single Speaker
Source to Target
SAS Size (bits)
MCD After Conversion (dB)
MCD After Conversion (dB)
20
1.95
4.18
80
1.97
4.33
128
2.01
4.44
20
2.17
4.53
80
2.21
4.61
128
2.27
4.68
20
2.17
4.72
80
2.21
4.77
128
2.27
4.86
20
2.23
4.45
Male 2
Female 1
6.15
2.39
9.41
4.96
80
2.31
4.63
128
2.34
4.70
different genders. The other 16 conversions yielded similar results
and are not reported here due to space constraints.
To obtain a measure of how good the conversion process is, we
ﬁrst performed a conversion between utterances of a single speaker
(the victim) spoken and recorded in two different noise proﬁles. We
call this the “Single Speaker” conversion. Rationally, such conver-
sion would gain the optimum conversion result. Row 1 of Table
1 shows MCD between the two set of 50 recordings (in different
noise proﬁles) of the victim before the conversion, averaged across
all recordings, which can be used as a reference of what MCD val-
ues are acceptable. Row 2 of the table shows the result of conver-
sion. The Single Speaker conversion gives us a baseline MCD to
measure the quality of other conversions from attacker voice to the
same speaker as the victim.
Row 3 depicts the MCD between an utterance in the training
dataset spoken by the source and the same utterance spoken by the
target before the conversion, averaged across all utterances. This
parameter characterizes the actual similarity/dissimilarity between
the attacker and victim voice before conversion. Recall that we
used 50 utterances spoken by the source and the target to train the
system to convert from attacker to the victim. We refer to this con-
version as the “Source to Target” conversion. Row 4 shows result
of this conversion. By comparing row 3 and row 4, it can be seen
that after conversion, the distance between source and converted
voice becomes less than the initial distance. This demonstrates the
effectiveness of the converter.
Comparing the result of Single Speaker and Source to Target
conversions (row 2 and 4 of the table), we can observe that the
MCD between converted voice and the original voice is higher in
the Source to Target conversion (which is the real attack scenario)
than the Single Speaker conversion (the optimum conversion re-
sult). This is intuitive. However, by comparing row 1 and 4, it is
interesting to note that the MCD values after conversion are slightly
less than MCD values of single speaker before conversion, which
suggests that Source to Target conversion produces a voice that is
comparable to the voice of the victim in a different noise proﬁle.
Subsequently, we tested the performance of the converter for the
purpose of our attack (i.e. SAS morphing). Here, we used the
trained system (described in the above two paragraphs) to convert
60 utterances from our potential attackers to victims representing
20 short, medium and long SAS with size of 20 bits, 80 bits and
128 bits respectively. Average duration of saying short, medium
and long SAS is approximately 1.2, 2.1 and 4.4 seconds respec-
tively. Row six of Table 1 shows the distance between the con-
verted SAS (resulted from Single Speaker converter) and the orig-
inal SAS (spoken by the victim). And ﬁnally last rows show the
average distance between the forged SAS (resulted from Source to
Target converter) and the original SAS (spoken by the victim).
For all pairs of speakers, we see a clear pattern of increase in
MCD with increase in the SAS size. This suggests that the quality
of SAS conversion degrades as the SAS size increases, which may