---
**作者**: Chris Binnie  
**类别**: 观点  
**评论数据**: []  
**统计信息**:
  - 评论数: 0
  - 收藏次数: 0
  - 点赞数: 0
  - 分享次数: 0
  - 浏览量: 4842
**日期**: 2017-05-18 10:29:00  
**编辑推荐**: 否  
**摘要**: LinuxKit 是一个灵活且可扩展的操作系统，为了提高可移植性，系统服务均在容器中运行。甚至 Docker 运行时环境也运行于容器内！  
**来源网址**: http://www.devsecops.cc/devsecops/containers.html  
**ID**: 8518  
**是否为LCTT翻译**: 是  
**大图**: /data/attachment/album/201705/18/102636wm4d6mwitms3tiss.png  
**永久链接**: /article-8518-1.html  
**图片**: /data/attachment/album/201705/18/102636wm4d6mwitms3tiss.png.thumb.jpg  
**相关文章**: []  
**审阅者**: ''  
**选择器**: ''  
**标签**:
  - 容器
  - LinuxKit
  - Docker
**缩略图**: 否  
**标题**: LinuxKit：在容器中运行容器  
**标题图片**: 是  
**译者**: geekpi  
**更新时间**: 2017-05-18 10:29:00
---

![](/data/attachment/album/201705/18/102636wm4d6mwitms3tiss.png)

今年的 DockerCon 大会带来了令人振奋的消息，Docker 公司发布了全新的操作系统——LinuxKit。这一新操作系统以其灵活性和可扩展性著称，特别强调了系统的可移植性，所有系统服务都在容器中运行。令人惊讶的是，Docker 的运行时环境本身也运行在容器内部。

本文将简要介绍 LinuxKit 的主要特点及其潜在优势，并指导读者如何开始使用这个不断优化的容器化解决方案。

### 少即是多

用户一直在寻找一个精简版的 Linux 来运行他们的微服务。通过容器化，每个应用都被最小化成独立进程，适合在各自的容器内运行。然而，由于需要对宿主机进行定期维护和安全补丁更新，容器经常需要在不同的宿主机间迁移。如果没有像 Kubernetes 或 Docker Swarm 这样的编排工具，这种迁移过程通常会导致服务中断。因此，保持操作系统的精简至关重要。

我经常引用荷兰程序员 Wietse Venema 的一句话：“每增加 1000 行代码，就会引入一个新的 bug。”从 DevSecOps 的角度来看，这些“bug”往往是潜在的安全漏洞。因此，在代码世界中，“少即是多”。这意味着更少的安全漏洞、更快的软件包更新速度以及更短的启动时间。

### 深入观察

考虑在容器内部运行应用程序时，Alpine Linux 是一个很好的起点。它是一个非常轻量级且功能强大的操作系统，其 miniroot 文件系统只有 1.8MB，整个操作系统下载后也只有 80MB。如果你选择 Alpine Linux 作为 Docker 基础镜像，你可以在 Docker Hub 上找到一个大小仅为 5MB 的镜像。

### 锁定一切

Alpine Linux 基于 BusyBox 构建，后者是一套打包了常用 Linux 命令的集合。许多家用路由器、智能电视和其他物联网设备都使用了 BusyBox。Alpine Linux 在设计时特别注重安全性，其内核经过 grsecurity/PaX 补丁加固，所有用户态二进制文件都编译为具有堆栈保护的地址无关可执行文件（PIE）。这些特性有助于防止各种类型的零日攻击和其他漏洞利用。

### 多只袜子

当谈到 Docker 的新操作系统时，容器内部结构的重要性不容忽视。Docker 的目标是尽可能地精简系统，仅包含必要的组件。据报道，Docker 已聘请了 Alpine Linux 的主要开发者 Nathaniel Copa，帮助将默认的官方镜像库从 Ubuntu 切换到 Alpine。这不仅节省了大量的带宽资源，也为新的基于容器的操作系统 LinuxKit 打下了基础。

### 原子计划

优化底层操作系统以支持大规模容器部署并不是什么新鲜事。红帽公司长期以来一直致力于开发 Project Atomic，这是一个轻量级且不可变的平台，专为运行容器化应用而设计。Project Atomic 采用了 Red Hat Enterprise Linux、CentOS 和 Fedora 项目的成熟技术，旨在提供最小化、高性能和尖端的解决方案。

### 特性强大

Docker 对 LinuxKit 的愿景同样体现了“少即是多”的原则。该项目由 Docker 老将 Justin Cormack 领导，并与 HPE、Intel、ARM、IBM 和 Microsoft 等多家公司合作，旨在使 LinuxKit 能够运行在从大型机到物联网设备的各种平台上。LinuxKit 的可配置性、可插拔性和可扩展性吸引了众多项目参与其中。通过开源社区的支持，LinuxKit 的功能将不断完善和发展。

### 布丁作证

对于那些迫不及待想要尝试 LinuxKit 的用户来说，现在就可以开始了。你可以访问 GitHub 上的 LinuxKit 项目页面获取详细的入门指南。随着时间的推移，LinuxKit 将成为构建高效、安全且灵活的操作系统的一种引人注目的方式。

### 呼叫警察

除了上述提到的功能外，我还想探讨一下 LinuxKit 在安全性方面的承诺。Docker 引用了 NIST（美国国家标准与技术研究院）的观点，指出使用专用的容器操作系统可以显著减少攻击面。此外，通过将系统容器完全沙箱化并限制它们的外部访问，LinuxKit 进一步增强了安全性。随着 KSPP（内核自我保护项目）的合作，Docker 正在朝着更加积极主动的安全方向迈进。

### 终点还远

像 Docker 这样的行业巨头无论在哪个领域取得突破，都将惠及广大用户和其他软件开发者。我鼓励所有对 Linux 感兴趣的人密切关注这一领域的最新进展。

---

**原文作者**: [Chris Binnie](http://www.devsecops.cc/)  
**译者**: [geekpi](https://github.com/geekpi)  
**校对**: [wxy](https://github.com/wxy)  
**本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出**

---