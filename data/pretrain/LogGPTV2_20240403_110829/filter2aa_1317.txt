PowerShell Version
Release Date
Default Windows Versions
PowerShell 1.0
November 2006
Windows Server 2008 (*)
PowerShell 2.0
October 2009
Windows 7 Windows Server 2008 R2 (**)
PowerShell 3.0
September 2012
Windows 8 Windows Server 2012
PowerShell 4.0
October 2013
Windows 8.1 Windows Server 2012 R2
PowerShell 5.0
February 2016
Windows 10
PowerShell 5.1
January 2017
Windows 10 Anniversary Update 
Windows Server 2016 
Windows Server 2019
PowerShell Core 6
January 2018
N/A
PowerShell 7
March 2020
N/A
Bypass AMSI的前世今生(2) - 2种低成本对抗方法
0x00 前言
本文主要介绍2种低成本的对抗AMSI的方法：
[BA1] 降级PowerShell版本到2.0
[BA4] 设置注册表“HKCU\Software\Microsoft\Windows Script\Settings\AmsiEnable”设置为 0，
以禁用 AMSI
我们沿用测试、思考、验证的思路，对这2种方法进行分析。
0x01 降级攻击
降级攻击顾名思义，就是使用低版本（2.0）的PowerShell来执行攻击脚本，因为在低版本的
powershell上没有AMSI。在我们测试之前，我们需要知道PowerShell在Windows上的预装情况。如图
所示：https://4sysops.com/wiki/differences-between-powershell-versions/
* Has to be installed through Server Manager 
** Also integrated in all later Windows versions
通多以上图，我们可以看出，2.0在当前常用的系统上默认安装的很少。AMSI是在win10、
winServer2016开始装备的，也就是说我们要研究的其实是Win10、Win2016、Win2019上面2.0的安装
情况。因为.Net CLR 4.0是不兼容PowerShell2.0的，PowerShell2.0是基于.NET CLR 2.0的，而.NET 
CLR 2.0是.NET2/3/3.5的运行时，对照表如下：
通过查询官方文档，只有.NET Framework 3.5在Win10的机器上默认安装，也就是说降级攻击默认使用
只能在Win10上使用。但是不要太相信官方文档，官方文档也不一定正确。同时很多服务依赖
于.Net2/2/3/3.5，很有可能管理员会自己安装。因此使用攻击前自己探测清楚很重要。我们可以使用以
下命令判断能否使用Powershell2.0：
AttackTeamFamily
No. 1 / 5 - www.red-team.cn
我们在Win10上测试以下降级攻击：
在命令种直接使用powershell.exe -version 2改变运行版本。如果在脚本中使用，在脚本开头加入
#requires -version 2，这样如果可以使用2.0，脚本会以2.0执行，如果不能，会按照当前powershell版
本执行。注意不是所有powershell脚本都能在2.0上执行，需要注意攻击脚本支不支持2.0。不要看完这
个，傻乎乎的去加一行#requires -version 2，就以为能绕过了。
在这儿可能你还要问一个问题Powershell 3.0行不行呢？答案是不行的，使用 -version 3/4/5 其实都是
使用的当前版本的powershell。
注：非管理员权限
Get-ChildItem 'HKLM:\SOFTWARE\Microsoft\NET Framework Setup\NDP' -recurse | Get-
ItemProperty -name Version -EA 0 | Where { $_.PSChildName -match '^(?!S)\p{L}'} | 
Select -ExpandProperty Version
注：需要管理员权限
Win10：
Get-WindowsOptionalFeature -Online -FeatureName MicrosoftWindowsPowerShellV2
Win2016/Win2019
Get-WindowsFeature PowerShell-V2
AttackTeamFamily
No. 2 / 5 - www.red-team.cn
这说完了PowerShell的降级攻击，VBscript/Jscript可不可以呢？我查询了vbscript.dll和jscript.dll的版
本，对比了win7/08/10/12/16/19。其中10/16/19是：5.812.10240.16384，7/08是5.8.7600.16385，
12的是5.8.9600.16384。只有5.812.10240.16384中包含了amsi.dll的导入，这也符合官方公布的在
win10/16以后的版本中加入AMSI：
经过初步分析vbscript/jscript不存在所谓降级攻击，因为在10/16/19并不存在像powershell一样的断代
情况。
0x02 该注册表禁用 AMSI
设置注册表“HKCU\Software\Microsoft\Windows Script\Settings\AmsiEnable”设置为 0，以禁用 
AMSI。这个看着挺简单，也挺好防护的。我们先测试以下效果。
我在以下版本上测试：
Win10 x64 1709
Win10 x64 1809
Win10 x64 1809 1911 update
Win10 x64 1903
Win10 x64 2004
均不能成功。同时1709上不存在HKEY_CURRENT_USER\Software\Microsoft\ Windows 
Script\Settings，加黑部分不存在。
我去Twitter搜索相关内容，发现这个问题的发现者有一张截图：
AttackTeamFamily
No. 3 / 5 - www.red-team.cn
可是我翻遍了这几个系统版本的amsi.dll、jscript.dll、vbscript.dll、wscript.exe、cscript.exe均不存在
这段代码。于是给作者留言，但是还没有得到回复。
在evi1cg博客《DotNetToJScript 复活之路》看到这一张图，这个问题肯定曾今是存在的：
但是不知道是不是被微软悄悄修复了，我在多个版本的win10系统上均不能复现：
不管这个方法曾今是否存在过，是不是微软悄悄修复了。目前肯定是不能用了。
本来是打算写[BA1-4]的，这个注册表卡了我好久，因此我先把这部分发出来把！接下来再写[BA2-3]，
关于混淆攻击脚本，和一行命令关闭AMSI。
AttackTeamFamily
No. 4 / 5 - www.red-team.cn
0x03 引用
https://docs.microsoft.com/en-us/dotnet/framework/migration-guide/versions-and-dependencies
#net-framework-35
https://devblogs.microsoft.com/powershell/windows-powershell-2-0-deprecation/
https://blog.csdn.net/lidandan2016/article/details/77868043
https://evi1cg.me/archives/AMSI_bypass.html
https://twitter.com/Tal_Liberman/status/1097163697129181184
AttackTeamFamily
No. 5 / 5 - www.red-team.cn