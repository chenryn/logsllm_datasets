### PowerShell 版本发布日期及默认 Windows 版本

| PowerShell 版本 | 发布日期       | 默认 Windows 版本                                   |
|-----------------|----------------|----------------------------------------------------|
| PowerShell 1.0  | 2006年11月     | Windows Server 2008 (*)                            |
| PowerShell 2.0  | 2009年10月     | Windows 7, Windows Server 2008 R2 (**)             |
| PowerShell 3.0  | 2012年9月      | Windows 8, Windows Server 2012                     |
| PowerShell 4.0  | 2013年10月     | Windows 8.1, Windows Server 2012 R2                |
| PowerShell 5.0  | 2016年2月      | Windows 10                                         |
| PowerShell 5.1  | 2017年1月      | Windows 10 周年更新, Windows Server 2016, Windows Server 2019 |
| PowerShell Core 6 | 2018年1月   | N/A                                                |
| PowerShell 7    | 2020年3月      | N/A                                                |

* 需要通过服务器管理器安装
** 后续所有 Windows 版本均包含此版本

### Bypass AMSI 的前世今生（2） - 两种低成本对抗方法

#### 0x00 前言
本文主要介绍两种低成本的对抗 AMSI 的方法：
1. 将 PowerShell 降级到 2.0 版本。
2. 设置注册表 `HKCU\Software\Microsoft\Windows Script\Settings\AmsiEnable` 为 0，以禁用 AMSI。

我们将通过测试、思考和验证的方法来分析这两种方法。

#### 0x01 降级攻击
降级攻击是指使用低版本（如 2.0）的 PowerShell 来执行攻击脚本，因为在低版本的 PowerShell 中没有 AMSI。在进行测试之前，我们需要了解不同 Windows 系统上预装的 PowerShell 版本情况。根据图表显示：

- PowerShell 2.0 在当前常用的系统上默认安装的情况较少。
- AMSI 是从 Windows 10 和 Windows Server 2016 开始引入的。

因此，我们需要研究的是在 Windows 10、Windows Server 2016 和 Windows Server 2019 上的 PowerShell 2.0 安装情况。由于 .NET CLR 4.0 不兼容 PowerShell 2.0，而 PowerShell 2.0 是基于 .NET CLR 2.0 的，对照表如下：

- 只有 .NET Framework 3.5 在 Windows 10 机器上默认安装。

这意味着降级攻击默认只能在 Windows 10 上使用。然而，不要完全依赖官方文档，因为很多服务可能依赖于 .NET 2/3/3.5，管理员可能会自行安装。因此，在攻击前进行探测非常重要。可以使用以下命令判断是否可以使用 PowerShell 2.0：

```powershell
# 非管理员权限
Get-ChildItem 'HKLM:\SOFTWARE\Microsoft\NET Framework Setup\NDP' -recurse | Get-ItemProperty -name Version -EA 0 | Where { $_.PSChildName -match '^(?!S)\p{L}'} | Select -ExpandProperty Version

# 需要管理员权限
Get-WindowsOptionalFeature -Online -FeatureName MicrosoftWindowsPowerShellV2  # Windows 10
Get-WindowsFeature PowerShell-V2  # Windows Server 2016/2019
```

在 Windows 10 上测试降级攻击：

```powershell
powershell.exe -version 2
```

如果在脚本中使用，则在脚本开头加入 `#requires -version 2`。这样，如果支持 2.0 版本，脚本将以 2.0 执行；否则，将按照当前 PowerShell 版本执行。注意，并非所有 PowerShell 脚本都能在 2.0 版本上运行，需要确认攻击脚本是否支持 2.0。

关于 PowerShell 3.0 是否可行的问题：答案是不行，使用 `-version 3/4/5` 实际上都是使用当前版本的 PowerShell。

#### 0x02 通过注册表禁用 AMSI
设置注册表 `HKCU\Software\Microsoft\Windows Script\Settings\AmsiEnable` 为 0 以禁用 AMSI。这个方法看似简单，但实际效果如何呢？我们进行了以下测试：

- Windows 10 x64 1709
- Windows 10 x64 1809
- Windows 10 x64 1809 1911 update
- Windows 10 x64 1903
- Windows 10 x64 2004

测试结果表明，该方法在这些版本上均未成功。此外，在 Windows 10 1709 上不存在 `HKEY_CURRENT_USER\Software\Microsoft\Windows Script\Settings` 注册表项。

我在 Twitter 上搜索相关内容，发现有人曾报告过这个问题，但在我测试的多个 Windows 10 版本中均未找到相关代码。这可能是微软已经悄悄修复了这个问题。

不管这种方法曾经是否存在，目前肯定是不可行的。

#### 0x03 引用
- [Net Framework 版本和依赖](https://docs.microsoft.com/en-us/dotnet/framework/migration-guide/versions-and-dependencies#net-framework-35)
- [Windows PowerShell 2.0 废弃](https://devblogs.microsoft.com/powershell/windows-powershell-2-0-deprecation/)
- [CSDN 博客文章](https://blog.csdn.net/lidandan2016/article/details/77868043)
- [Evi1cg 博客文章](https://evi1cg.me/archives/AMSI_bypass.html)
- [Twitter 讨论](https://twitter.com/Tal_Liberman/status/1097163697129181184)