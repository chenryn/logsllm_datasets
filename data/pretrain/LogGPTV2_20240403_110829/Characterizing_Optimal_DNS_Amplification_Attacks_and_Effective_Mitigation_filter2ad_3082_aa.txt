title:Characterizing Optimal DNS Amplification Attacks and Effective Mitigation
author:Douglas C. MacFarland and
Craig A. Shue and
Andrew J. Kalafut
Characterizing Optimal DNS Ampliﬁcation
Attacks and Eﬀective Mitigation
Douglas C. MacFarland1, Craig A. Shue1(B), and Andrew J. Kalafut2
1 Worcester Polytechnic Institute, Worcester, MA, USA
{dcmacfarland,cshue}@cs.wpi.edu
2 Grand Valley State University, Allendale, MI, USA
PI:EMAIL
Abstract. Attackers have used DNS ampliﬁcation in over 34 % of
high-volume DDoS attacks, with some ﬂoods exceeding 300 Gbps. The
best current practices do not help victims during an attack; they are
preventative measures that third-party organizations must employ in
advance. Unfortunately, there are no incentives for these third parties to
follow the recommendations. While practitioners have focused on reduc-
ing the number of open DNS resolvers, these eﬀorts do not address the
threat posed by authoritative DNS servers.
In this work, we measure and characterize the attack potential
associated with DNS ampliﬁcation, along with the adoption of coun-
termeasures. We then propose and measure a mitigation strategy that
organizations can employ. With the help of an upstream ISP, our strat-
egy will allow even poorly provisioned organizations to mitigate massive
DNS ampliﬁcation attacks with only minor performance overheads.
1 Introduction
In 2013 and early 2014, attackers used DNS ampliﬁcation in 34.9 % of high vol-
ume DDoS attacks (those creating at least 20 Gbps of attack traﬃc) and in 18.6 %
of all network DDoS attacks [8]. In mid-March 2013, attackers used DNS ampli-
ﬁcation to launch a high-proﬁle attack against Spamhaus, with attack traﬃc
volume exceeding 300 Gbps [1]. DNS ampliﬁcation attacks are particularly valu-
able to attackers for a few reasons: (1) the ampliﬁcation eﬀect allows attackers
to create a disproportionate amount of traﬃc at the victim, (2) by IP address
spooﬁng and reﬂection, the attackers can conceal the identities of the attacking
systems, preventing them from being blacklisted or cleaned, and (3) the vic-
tim cannot blacklist the IP addresses of the reﬂecting DNS servers without also
hindering legitimate DNS resolutions.
In a typical DNS ampliﬁcation attack, the attacker sends a DNS query packet
from an attack system to a DNS server. In the process of creating this query
packet, the attacker forges the packet’s source IP address ﬁeld so that it contains
the IP address of the targeted victim, rather than the actual sender of the packet.
Upon receiving and processing the query packet, the DNS server then dutifully
sends a response back to the indicated source address of the query, which in
c(cid:2) Springer International Publishing Switzerland 2015
J. Mirkovic and Y. Liu (Eds.): PAM 2015, LNCS 8995, pp. 15–27, 2015.
DOI: 10.1007/978-3-319-15509-8 2
16
D.C. MacFarland et al.
this case is the address of the victim. When the response packet arrives at the
victim, the victim will process the packet, realize it is unsolicited, and discard
it. However, at this point, the attack has already succeeded: the DNS response
consumed a portion of the victim’s bandwidth and computational resources at
the victim’s DNS resolvers. Even better from the viewpoint of the attacker,
since the DNS response packet from the DNS server is larger than the query
packet the attacker sent, the attack traﬃc at the target is increased by a certain
ampliﬁcation factor.
While DNS ampliﬁcation attacks are well understood, the best defensive
strategy is less obvious. In a July 2013 bulletin, the United States Computer
Emergency Response Team (US-CERT) made a few recommendations [16]:
(1) reduce the number of open DNS resolvers, (2) disable public recursion on
authoritative DNS servers, (3) rate limit responses [18], and (4) limit IP address
spooﬁng. Unfortunately, there is little incentive for organizations to employ these
recommendations: these actions help other organizations, not the organization
performing the remediation. The spooﬁng prevention measure, in particular, has
been encouraged for over a decade, yet over 25 % of Autonomous Systems still
allow arbitrary IP spooﬁng on the Internet [2]. Further, these steps are not
actionable for an organization under attack.
While these recommendations may be well intentioned, they likely will not
have the desired impact. In particular, eﬀorts to reduce the number of open
DNS resolvers will not solve the DNS ampliﬁcation problem: rather than using
an open resolver, attackers can simply query authoritative servers directly and
still create eﬀective DDoS conditions.
In this work, we make the following contributions:
1. Measure and Characterize the Attack Potential: We perform DNS
queries to the authoritative servers for each of the 129 million DNS domains
registered in 9 top-level domains (TLDs) to determine the ampliﬁcation factor
associated with four types of queries. We then focus on the highest ampliﬁcation
factor queries that can be issued and characterize the attack volume that could
result. We found that we could create an attack of 1,444 MBytes/s at the target
by sending only 44 MBytes/s of attack traﬃc at the application layer. We found
that such attacks could be scaled up, allowing even relatively small botnets to
launch damaging attacks, all without the use of open DNS resolvers.
2. Measure the Adoption of Query Rate-Limiting: We randomly sampled
0.5 % of the IP addresses for authoritative DNS servers we previously studied and
issued repeated queries to the server to determine whether the domain employed
query rate limiting, and if so, what settings were used in the conﬁguration. We
found that 2.69 % of the studied domains employed rate limiting. Of those, 7.38 %
rate limited at 5 queries per second or less and the remaining 92.62 % used a
rate limit between 9 and 14 queries per second.
3. Propose and Evaluate a Novel Mitigation Method: We propose and
measure a straightforward mitigation approach that targeted organizations can
employ to mitigate attacks. We propose organizations employ remote hosting
Characterizing Optimal DNS Ampliﬁcation Attacks and Eﬀective Mitigation
17
for their authoritative DNS servers. We then propose organizations request
upstream ﬁltering of all DNS traﬃc, mitigating the DDoS attack. To preserve
DNS functionality for the organization, we propose and test a solution to tunnel
DNS queries to a remote DNS resolver, such as a remote VM hosted by a cloud
provider or ISP. We found that we could automatically activate a remote DNS
resolver, activate the tunnel, and forward all local DNS traﬃc to the remote node
in less than 0.67 s, on average. All queries would then have a median additional
latency of 16 ms. Accordingly, our approach will allow organizations to weather
extremely high-volume DNS ampliﬁcation attacks with minimal eﬀort.
2 Background and Related Work
Traditional reﬂection attacks, such as the Smurf attack [15], simply forge the
source IP address of a packet to be the address of the intended victim. The
attacker sends the packet to an innocent third-party system called a reﬂector.
The reﬂector then issues a legitimate reply that arrives at the victim. When a
large number of attack packets are sent to reﬂectors, or when a reﬂector is a
broadcast network address for many hosts, the combined volume at the victim
can be crippling.
In a 2001 article, Paxson [11] described how reﬂectors can be used as part
of a distributed reﬂector denial of service (DRDoS) attack. He argued for ﬁve
possible defenses against the attacks: (1) ﬁlter reﬂected attack traﬃc at the vic-
tim, (2) prevent source address spooﬁng, (3) detect and block spoofed packets
at the reﬂector, (4) allow traceback to the origin even through the reﬂector, and
(5) detect the attack traﬃc from the compromised systems. With the exception
of the ﬁrst defense, in which the victim employs ﬁltering, each of these defenses
requires a third-party organization to detect and block attack traﬃc. The speciﬁc
third-party organization aﬀected depends on the details of the attack (e.g., the
origin of the attack and the particular reﬂectors in use), but each of them must
implement the solution. Solutions which require 100 % adoption by third-parties
are unlikely to succeed, especially when these third-parties have no incentives for
adoption. For example, the second option, source address ﬁltering, is compara-
tively straightforward for organizations to employ, yet over 25 % of Autonomous
Systems still allow arbitrary IP spooﬁng on the Internet [2].
Attackers often try to increase the amount of traﬃc generated by a reﬂection
attack. These attacks, called ampliﬁcation attacks, typically leverage protocol-
speciﬁc attributes to increase the attack volume. Recent attacks using NTP
ampliﬁcation [12,17] were able to create ﬂoods of 400 Gbps against a victim.
In the NTP attack, the attacker found a list of susceptible NTP servers and,
spooﬁng the IP address of the victim, issued a query requesting a list of the last
600 clients that accessed the server. These NTP responses were much larger than
the query, creating a massive ampliﬁcation attack against the victim. Earlier this
year, Rossow [13] examined 14 diﬀerent network protocols to look for reﬂection
attacks that yield signiﬁcant ampliﬁcation. While Rossow’s analysis did include
18
D.C. MacFarland et al.
DNS, it was not the focus of the work and the analysis was not as comprehensive
as our own; we compare and contrast our results in the appropriate sections of
our paper. K¨uhrer et al. discuss the prevalence of DNS ampliﬁers, compared to
other UDP-based protocols, and discusses ﬁngerprinting techniques [10]; how-
ever, they do not expand on the ampliﬁcation results. The solutions they propose
focus on eﬃcient identiﬁcation, the notiﬁcation of vulnerable ampliﬁers for var-
ious protocols, and on curtailing ASes that allow spooﬁng. Their approach is
orthogonal to our own solution.
US-CERT recommends that organizations focus on eliminating open DNS
resolvers [16], which echoes RFC 5358 [5]. However, this advice ignores the hun-
dreds of thousands of authoritative DNS servers that are, by design, required to
answer DNS queries to anyone who asks. These servers are well provisioned and
capable of handling large volumes of traﬃc [7]. Attackers could use these servers
to launch crippling attacks, even without using open resolvers. Accordingly, we
focus on the risks associated with authoritative servers in this work.
Other reﬂector and ampliﬁcation attacks can be damaging. However, we focus
on DNS ampliﬁcation because the protocol is widely used and the ampliﬁcation
attack can be indistinguishable from legitimate usage. Further, measures such
as ﬁltering, which may be used to mitigate other ampliﬁcation attacks, would
have unacceptable consequences for DNS (such as leaving a victim without the
ability to resolve host names).
3 DNS Ampliﬁcation Potential
We begin by determining the inherent DNS ampliﬁcation risks associated with
today’s DNS authoritative servers. We examined over 129 million domains and
over 1.1 million unique DNS authoritative servers to determine the ampliﬁcation
factor associated with common DNS queries.
3.1 Data Collection
As a starting point for our measurements, we used a DNS zone snapshot from
July 2, 2013 for a collection of nine generic top-level domains (gTLDs). We
obtained the DNS zone ﬁles for the biz, com, info, mobi, name, net, org, travel,
and us zones from their respective maintainers. These zone ﬁles list the domain
names and associated name servers for each of the domains registered under these
TLDs. We collected records for 129, 300, 870 unique domains, each of which had
one or more name servers listed, by host name, as authoritative for the domain.
In total, 2, 771, 768 unique host names were listed as name servers, which upon
resolving to IP addresses yielded 1, 101, 446 unique name server IP addresses. We
collected these records in a distributed fashion and used delays between queries
to minimize the impact on other users and the queried servers. We had an opt-
out approach for queried providers; however, we did not receive any out-out
requests.
Characterizing Optimal DNS Ampliﬁcation Attacks and Eﬀective Mitigation
19
Using these zone ﬁles, we constructed a set of pairs of the form (domain name,
NS IP address). This resulted in 363, 263, 970 unique pairs. For each pair, we
issued a set of DNS queries to the associated name server for the domain name
without indicating any subdomains or hosts (e.g. a query for example.com).
Based on the results reported in our prior work [9], we knew that A records,
which provide the IPv4 address for an indicated host name, would be quite
common. Queries for A records are commonly issued by hosts on the Internet and
are not be likely to be noticed by network operators. Recent DNS ampliﬁcation
attacks have used the ANY record type in their queries, which asks a name server
to return any records associated with a host name. Since we used the base
domain name, an ANY query would be likely to return the SOA, NS, and MX records
associated with the domain, along with an A record for the host name. These
four records were the most common in DNS zones in our prior work [9]. While
the ANY query may yield the most records, such queries are not as commonly
used by normal Internet hosts and their role in attacks may make them more
noticeable when queried. Accordingly, we collect data for both the ANY query
and the more common A query.
Traditional DNS packets are limited to a maximum length of 512 bytes at the
application layer. However, the extension mechanisms for DNS (EDNS) [6] allow
larger DNS packets if supported by both the resolver and authoritative server.
To communicate support, the resolver sends a pseudo-resource record, OPT, that
indicates the supported packet size. The OPT record can indicate DNSSEC sup-
port [4], indicating the server should send any associated DNSSEC records.
Attackers have a tactical consideration with using EDNS. Including an OPT
record requires the attacker to include an additional 11 byte record in the query.
If the server does not support EDNS, or the response would ﬁt within the stan-
dard 512 byte limit, the response size remains the same. Accordingly, EDNS use
would decrease the ampliﬁcation factor associated with the query. However, if