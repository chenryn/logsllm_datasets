' ADD PARTITION (PARTITION ', PARTITIONNAME, ' VALUES LESS THAN (', CLOCK, '));' );
PREPARE STMT FROM @sql;
EXECUTE STMT;
DEALLOCATE PREPARE STMT;
END IF;
END //
DROP PROCEDURE IF EXISTS `zabbix`.`drop_partition` //
CREATE PROCEDURE `zabbix`.`drop_partition` (SCHEMANAME varchar(64), TABLENAME
varchar(64), PARTITIONNAME varchar(64))
BEGIN
DECLARE RETROWS int;
SELECT COUNT(1) INTO RETROWS
FROM `information_schema`.`partitions`
WHERE `table_schema` = SCHEMANAME AND `table_name` = TABLENAME AND
`partition_name` = PARTITIONNAME;
IF RETROWS = 1 THEN
SELECT CONCAT( "drop_partition(", SCHEMANAME, ",", TABLENAME, ",", PARTITIONNAME,
")" ) AS msg;
SET @sql = CONCAT( 'ALTER TABLE `', SCHEMANAME, '`.`', TABLENAME, '`',
' DROP PARTITION ', PARTITIONNAME, ';' );
PREPARE STMT FROM @sql;
EXECUTE STMT;
DEALLOCATE PREPARE STMT;
END IF;
END //
DELIMITER ;
e.使用tmpfs存储临时文件
mkdir /tmp/mysqltmp
修改/etc/fstab:
tmfs /tmp/mysqltmp tmpfs
rw,uid=mysql,gid=mysql,size=1G,nr_inodes=10k,mode=0700 0 0
修改my.cnf
tmpdir=/tmp/mysqltmp
f.设置正确的buffer pool
设置Innodb可用多少内存，建议设置成物理内存的70%~80%
修改my.cnf
innodb_buffer_pool_size=14G
设置innodb使用O_DIRECT，这样buffer_pool中的数据就不会与系统缓存中的重复。
innodb_flush_method=O_DIRECT
以下给一个示例my.cnf，物理内存大小为24G:
g.设置合适的log大小
zabbix数据库属于写入较多的数据库，因此设置大一点可以避免MySQL持续将log文件flush
到表中。
不过有一个副作用,就是启动和关闭数据库会变慢一点。
修改my.cnf
innodb_log_file_size=64M
h.打开慢查询日志
修改my.cnf
log_slow_queries=/var/log/mysql.slow.log
i.设置thread_cache_size
这个值似乎会影响showglobalstatus输出中Threads_createdperConnection的hitrate
当设置成4的时候,有3228483 Connections和5840 Threads_created,hit rate达到了
99.2%
Threads_created这个数值应该越小越好。
j.其他MySQL文档建议的参数调整
query_cache_limit=1M
query_cache_size=128M
tmp_table_size=256M
max_heap_table_size=256M
table_cache=256
max_connections = 300
innodb_flush_log_at_trx_commit=2
join_buffer_size=256k
read_buffer_size=256k
read_rnd_buffer_size=256k
7.调整zabbix工作进程数量,zabbix_server.conf
StartPollers=90
StartPingers=10
StartPollersUnreacheable=80
StartIPMIPollers=10
StartTrappers=20
StartDBSyncers=8
LogSlowQueries=1000
参考文档:
http://www.slideshare.net/xsbr/alexei-vladishev-zabbixperformancetuning
http://zabbixzone.com/zabbix/mysql-performance-tips-for-zabbix/
http://zabbixzone.com/zabbix/partitioning-tables/
http://linux-knowledgebase.com/en/Tip_of_the_day/March/Performance_Tuning_
for_Zabbix
http://sysadminnotebook.blogspot.jp/2011/08/performance-tuning-mysql-for-zab
bix.html
批量更新参考文档
8.
easyUpdateonCustomScripts
http://zabbixzone.com/zabbix/easy-update-on-custom-scripts/
Every time that you need to add or change an UserParameter on zabbix_agentd.conf you
need to restart the agent. It’s easy if you have less than 10 servers, but could be a trouble if you
havemorethan 30 servers.
Automation Tools like CFEngine and Puppet do this work well done, but
unfortunately they aren’t used in many companies.
But it’s possible using a Dynamic UserParameter:
1) add two lines on zabbix_agentd.conf and restart the agent:
UserParameter=custom.getvalue[*],/etc/zabbix/zabbix_agentd/custom_getvalue$1$2$3$4
$5
UserParameter=custom.updatescript,/etc/zabbix/zabbix_agentd/custom_updatescript
2) create the script file /etc/zabbix/zabbix_agentd/custom_getvalue
#!/bin/bash
ACTION=$1
PARAM1=$2
PARAM2=$3
PARAM3=$4
PARAM4=$5
case${ACTION}in
#key:custom.getvalue[samplescript1,arg]
samplescript1)
/bin/echoThisisatest-${PARAM1}
;;
#key:custom.getvalue[samplescript2,arg1,arg2]
samplescript2)
/bin/echoThisisanothertest-${PARAM1}${PARAM2}
;;
*)
/bin/echoZBX_NOTSUPPORTED
;;
esac
Don’t forget to set execute permission:
1 chmod0755/etc/zabbix/zabbix_agentd/custom_getvalue
Now when you need create a new script, you must update this script and restart is
unnecessary.
Remote Updates
Finally, let’s create a script to update custom_getvalue script remotely. Before
make sure to publish yourcustom_getvalue script on a WebServer.
Create the file /etc/zabbix/zabbix_agentd/custom_updatescript:
1 #!/bin/bash
2 /usr/bin/wget"http://yourdomain.com/zabbix/custom_getvalue"-O
/etc/zabbix/zabbix_agentd/custom_getvalue-o/dev/null
Don’t forget to set execute permission:
1 chmod0755/etc/zabbix/zabbix_agentd/custom_updatescript
Remoteupdates canbe done from ZabbixServer/Proxy usingzabbix_get utility:
1 zabbix_get-shostserver.yourdomain.com-kcustom.updatescript
It’s a contribution from laneovcc:
in my way i config zabbix-agent.conf to include a UserParameter.conf then use
system.run[wget http://server/UserParameter.conf -O
/path/to/UserParameter.conf ] to update the UserParameter.conf and
system.run[services zabbix-agentd restart] to restart the agent
9. 将 zabbix 打包成 rpm 包
Rpmbuild的spec文件的写作
官方虽然提供了rpm，但相关依赖太麻烦，所以改造了一下，仅供参考
#
%definezabbix_groupzabbix
%definezabbix_userzabbix
Name: zabbix
Version: 2.0.6
Release: 2%{?dist}.zbx
Summary: zabbixmonitor
Vendor: PI:EMAIL
Group: SystemEnvironment/Daemons
License: GPL
URL: http://www.zabbix.com
Source0:
http://downloads.sourceforge.net/project/zabbix/ZABBIX%20Latest%20Stable/2.0.6/zabbix-2.0.6.
tar.gz
Source1: zabbix_custom.tar.gz
Source2: zabbix-web.conf
#BuildRoot: %{_tmppath}/%{name}-%{version}
BuildRoot:%{_tmppath}/%{name}-%{version}-%{release}-root
BuildRequires: gcc
BuildRequires: make
Requires(pre):gcc
Requires(post):chkconfig
Provides:Monitor
%description
Zabbixistheultimateopensourceavailabilityandperformancemonitoringsolution.Zabbix
offers advanced monitoring, alerting, and visualization features today which are missing in other
monitoringsystems,evensomeofthebestcommercialones
%packageserver
Summary:serverversionofzabbix
Group:SystemEnvironment/Daemons
Requires(post): /sbin/chkconfig
Requires(preun): /sbin/chkconfig
Requires(preun): /sbin/service
Requires(postun): /sbin/service
%descriptionserver
Zabbixservercommonfiles
%packageagentd
Summary: ZabbixAgent
Group: Applications/Internet
Requires(pre): shadow-utils
Requires(post): /sbin/chkconfig
Requires(preun): /sbin/chkconfig
Requires(preun): /sbin/service
Requires(postun): /sbin/service
%descriptionagentd
TheZabbixclientagent,tobeinstalledonmonitoredsystems.
%packageproxy
Summary: ZabbixProxy
Group: Applications/Internet
Requires(pre): shadow-utils
Requires(post): /sbin/chkconfig
Requires(preun): /sbin/chkconfig
Requires(preun): /sbin/service
Requires(postun): /sbin/service
Requires: fping
%descriptionproxy
TheZabbixproxy
%packageweb
Summary: ZabbixWeb
Group: Applications/Internet
BuildArch: noarch
Requires(pre): shadow-utils
Requires(post): /sbin/chkconfig
Requires(preun): /sbin/chkconfig
Requires(preun): /sbin/service
Requires(postun): /sbin/service
Requires: dejavu-sans-fonts
%descriptionweb
TheZabbixweb
%prep
%setup-q
%build
common_flags="
--enable-dependency-tracking
--enable-proxy
--enable-agent
--enable-ipv6
--with-net-snmp
--with-libcurl
--disable-java
--sysconfdir=%{_sysconfdir}/zabbix
--datadir=%{_sharedstatedir}
"
%configure $common_flags --enable-server --with-mysql --with-cc-opt="%{optflags}
$(pcre-config--cflags)"
make%{?_smp_mflags}
#./configure --prefix=/usr/local --sysconfdir=/etc/zabbix --libdir=/usr/lib
--mandir=/usr/share/man --enable-proxy --enable-agent--with-sqlite3
#make%{?_smp_mflags}
%install
%{__rm}-rf$RPM_BUILD_ROOT
["%{buildroot}"!="/"]&&%{__rm}-rf%{buildroot}
#%{__make}DESTDIR=%{buildroot}install
%{__install}-d%{buildroot}%{_sbindir}
%{__install}-d%{buildroot}%{_sysconfdir}/rc.d/init.d
%{__install}-d%{buildroot}%{_datadir}/%{name}
%{__install}-d%{buildroot}%{_sysconfdir}/%{name}/scripts
%{__install}-d%{buildroot}%{_sysconfdir}/%{name}/zabbix_agentd.conf.d
%{__install}-d%{buildroot}%{_mandir}/man1/
%{__install}-d%{buildroot}%{_mandir}/man8/
%{__install}-d%{buildroot}%{_localstatedir}/log/%{name}
%{__install}-d%{buildroot}%{_localstatedir}/run/%{name}
%{__install}-d%{buildroot}%{_sysconfdir}/%{name}/externalscripts
%{__install}-d%{buildroot}%{_sysconfdir}/%{name}/alertscripts
%{__install}-d%{buildroot}%{_datadir}/%{name}
%{__make}DESTDIR=$RPM_BUILD_ROOTinstall
#%{__mkdir}-p$RPM_BUILD_ROOT%{_initrddir}
%{__install} -m 755 misc/init.d/fedora/core/zabbix_agentd
$RPM_BUILD_ROOT%{_initrddir}/zabbix_agentd
%{__install} -m 755 misc/init.d/fedora/core/zabbix_server
$RPM_BUILD_ROOT%{_initrddir}/zabbix_server
%{__install} -m 755 misc/init.d/fedora/core/zabbix_server
$RPM_BUILD_ROOT%{_initrddir}/zabbix_proxy
%{__mv} frontends/php$RPM_BUILD_ROOT/%{_datadir}/zabbix
%{__sed} -i "s@BINARY_NAME=zabbix_server@BINARY_NAME=zabbix_proxy@g"
$RPM_BUILD_ROOT%{_initrddir}/zabbix_proxy
%{__sed} -i "s@BASEDIR=/usr/local@BASEDIR=/usr@g"
$RPM_BUILD_ROOT%{_initrddir}/zabbix_server
%{__sed} -i "s@PIDFILE=/tmp@PIDFILE=/var/run/zabbix@g"
$RPM_BUILD_ROOT%{_initrddir}/zabbix_server
%{__sed} -i "s@BASEDIR=/usr/local@BASEDIR=/usr@g"
$RPM_BUILD_ROOT%{_initrddir}/zabbix_agentd
%{__sed} -i "s@PIDFILE=/tmp@PIDFILE=/var/run/zabbix@g"
$RPM_BUILD_ROOT%{_initrddir}/zabbix_agentd