写入shellcode 后利用tagWND. bServerSideWindowProc字段置位实现窗口过程函数在内核模式下执行，实现提权。
__
__
__
## 02
### 蔓灵花APT组织在针对国内攻击活动中使用Windoows内核提权0 day漏洞
#### 相关活动概要
2020年12月中旬国内某安全厂商披露了蔓灵花（又名Bitter）针对国内科研机构、政府部门发起的APT
活动，并在此次分析中发现了一个使用未知Windows 内核提权漏洞进行本地提权的恶意组件。以下是对该漏洞的技术细节分析介绍。
### CVE-2021-1732
#### 漏洞概述
CVE-2021-1732于2021年2月蔓灵花针对国内科研机构及政府部门的攻击活动中首次被发现，该漏洞利用Windows 操作系统win32k
内核模块一处用户态回调干扰函数正常执行流程，并在可控流程内篡改窗口对象数据造成后续代码执行异常，从而触发漏洞。
#### 漏洞原理
CVE-2021-1732 漏洞位于win32kfull.sys 内，当win32kfull! xxxCreateWindowEx
函数回调xxxClientAllocWindowsClassExtraBytes时进行干预，通过混淆console
窗口和普通窗口，使得回调函数返回内核态执行时触发内核对象越界访问。
正常情况下，窗口的创建过程如图所示：
用户调用CreateWindowsEx
函数并逐步向下执行，通过系统调用机制由用户态进入内核态，并逐层向下，当窗口对象（atgWND）的扩展数据大小值为0时，win32kfull!xxxCreateWindowsEx
函数执行用户回调xxxClientAllocWindowsClassExtraBytes 函数为窗口对象扩展数据申请所需内存。
在完成回调后，返回值将传递给窗口对象的tagWND.pWxtraBytes
属性。但是由于对该值未作有效判定，导致攻击者可以通过特定函数（NtCallbackReturn）修改tagWND. pWxtraBytes
的值为可控的offset，并且在这之前通过调用NtUserConsoleControl 函数修改tagWND
的扩展数据保存方式为桌面堆，最终实现基于内核态桌面堆起始地址可控offset 的越界读写。
通过上述描述，最终窗口创建的流程如下：
#### 漏洞利用
根据POC 可知，利用该漏洞可以实现将tagWND 对象的扩展数据设置为任意可控offset，从而获取指定的内核地址，通过SetWindowLong
函数实现对这些地址的数据修改；通过构建虚假的spmenu 对象配合SetWindowLong 修改指定tagWND 对象的spmenu
为虚假的spmenu再借助函数GetMenuBarInfo 实现任意地址读；最后通过内核地址泄露定位到EPROCESS 结构地址，并使用EPROCESS
链查找system 进程，获取system 进程token 并实现替换从而实现提权。
## 03
### 在针对中东地区的攻击活动中使用Windows内核提权漏洞
#### 相关活动概要
CVE-2018-8453是卡巴斯基实验室于2018年8月份在一系列针对中东地区进行APT攻击的活动中捕获到的Windows提权0day漏洞，该漏洞与Windows窗口管理和图形设备接口相关（win32kfull.sys）。
通过控制窗口对象销毁时在xxxFreeWindow函数中回调fnDWORD的hook函数，可以在win32kfull!xxxSBTrackInit中实现对pSBTrack的UseAfterFree，从而进行提权。以下是对该漏洞的技术细节分析介绍。
### CVE-2018-8453
#### 漏洞概述
该漏洞产生的原因是win32kfull!NtUserSetWindowFNID函数存在缺陷：在对窗口对象设置FNID时没有检查窗口对象是否已经被释放，导致可以对一个已经被释放了的窗口（FNID_FREED:0x8000）设置一个新的FNID，通过利用win32kfull!NtUserSetWindowFNID的这一缺陷，从而可以达到UAF，导致漏洞的利用。
#### 漏洞原理
POC流程如下：
Hook
KernelCallbackTable中的回调后，通过向滚动条发送WM_LBUTTONDOWN消息触发调用xxxSBTraackInit函数，因为对一个滚动条进行鼠标左击时，会触发调用win32kfull!xxxSBTrackInit函数，这里会调用xxxSBTrackLoop循环获取鼠标消息，直到释放鼠标左键或者收到其它消息，才会退出xxxSBTrackLoop函数。
xxxSBTrackInit中调用xxxSBTrackLoop回调fnDWORD_hook时，调用DestoryWindow(g_hMAINWND)，
这样会导致调用win32kfull!xxxFreeWindow，因为我们在注册主窗口类的时候设置了主窗口类的cbWndExtra不为0，那么在win32kfull!xxxFreeWindow中会调用xxxClientFreeWindowClassExtraBytes函数来释放主窗口类的额外数据。
上图这个函数会回调KernelCallbackTable[126]，就会进入我们的第二个hook函数中去。
在进入第二个hook函数fnClientFreeWindowClassExtraBytesCallBack_hook后我们必须手动调用NtUserSetWindowFNID(g_hMAINWND,spec_fnid)设置主窗口的FNID(spec_fnid的取值范围从0x2A1到0x2AA，这里我们将spec_find设置为0x2A2即可）。同时申请一个新的滚动条：g_hSBWNDNew，并调用SetCapture(g_hSBWNDNew)设置当前线程捕获鼠标消息的窗口是g_hSBWNDNew。
由于主窗口被Destory，那么xxxSBTrackLoop会返回，继续执行HMAssignmentUnLock(&pSBTrack->spwndNotify)解除对主窗口的引用。从而导致主窗口被彻底释放，这会导致再一次的调用xxxFreeWindow，当调用了xxxFreeWindow之后，窗口的FNID就会打上0x8000标记。
当再次进入fnDWORD_hook函数时就是我们最后一次回到R3的时机了，这个时候如果调用SendMessage(g_hSBWNDNew,WM_CANCLEMODE)
就会调用xxxEndScroll来释放pSBTrack。
由于POC程序是单线程，而每个线程信息是属于线程的，所以线程创建的所有窗口也都指向同一线程信息结构。即使SBTrack隶属的Scrollbar窗口已经释放了，只要还是同一线程创建的新窗口，pSBTrack也还是原来的。
由于我们是向新创建滚动条g_hSBWNDNew发送的WM_CANCLEMODE消息，且之前就调用SetCaputure(g_hSBWNDNew)设置当前线程捕获鼠标消息的窗口为g_hSBTWNDNew，所以qp->spwndCapture==pwnd也会满足。
因此上图中的if判断会通过，并最终执行UserFreePool(pSBTrack)将pSBTrack给释放掉，从而造成返回执行HMAssignmentUnLock(&pSBTrack->spwndSB)时，pSBTrack就已经被释放掉了。最终造成了对pSBTrack的Use
After Free。
#### 漏洞利用
由于我们可以通过hook
KernelCallbackTable中的回调函数来控制win32kfull!xxxSBTrackInit中的pSBTrack被提前释放，造成对pSBTrack的Use
After
Free。之后则可以通过池风水喷射技术占用被提前释放掉的pSBTrack实现有限次的任意内存减1或减2。这个有限次的任意内存减1或减2配合桌面堆泄露技术和GDI
Palette Abuse技术就可以实现任意内存读写。
## 总结
APT 攻击事件随着技术的发展也逐渐由早期单一化逐渐演变为目前的复杂化，而同时随着计算机软件系统安全防护技术的提升，软件漏洞开始成为APT
组织攻击活动中重要组成部分，在整个攻击活动中扮演着“突破者”的角色。之所以形容其为“突破者”，在于漏洞利用模块多为突破系统防护或沙箱最终实现对目标系统的攻击。
奇安信威胁情报中心收集整理了众多APT 攻击活动并从中例举了如“摩诃草”、“蔓灵花”等组织曾发起的攻击活动，分析这些攻击活动中所使用到的系统（Windows
系统）漏洞并简述其原理及利用，以求从另一个视角看待这些攻击：若漏洞不存在，攻击是否达成？
通过文章简述分析，我们清楚的看到这些漏洞在整个攻击事件中所扮演的重要角色，同时我们也应该认识到，及时的抹除这些漏洞即安装系统补丁对于避免这些攻击事件的重要性。
奇安信红雨滴团队呼吁相关用户，及时安装系统更新，并定期更新安全防护系统，能有效防止遭受此类攻击。
## APT活动相关Windows提权漏洞附表
**攻击活动** | **相关APT组织** | **涉及漏洞**  
---|---|---  
“摩诃草”APT组织以巴基斯坦空军演习为诱饵展开攻击活动 | 摩诃草 | CVE-2016-7255CVE-2019-0808  
“蔓灵花”APT组织在针对国内攻击活动中使用Windoows内核提权0 day漏洞 | 蔓灵花 | CVE-2021-1732  
SandCat APT组织在实际攻击中使用最新Windows在野提权漏洞 | SandCat | CVE-2018-8589CVE-2019-0797  
针对中东地区的Windows内核提权漏洞利用分析 |  | CVE-2018-8453  
APT31组织在实际攻击中使用CVE-2017-0005漏洞进行提权 | APT31 | CVE-2017-0005  
APT28组织在实际攻击中使用CVE-2016-7255，CVE-2017-0263漏洞进行提权 | APT28 |
CVE-2016-7255CVE-2017-0263  
Turla组织在实际攻击中使用CVE-2017-0001漏洞进行提权 | Turla | CVE-2017-0001  
## 参考链接
[1] 
[2] 
[3] 
[4] 
[5] 
[6] 
* * *