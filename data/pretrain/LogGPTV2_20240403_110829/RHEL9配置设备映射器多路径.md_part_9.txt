        ::: orderedlist
        1.  将数据移动到另一个设备中：
            ``` literallayout
            # pvmove -b /dev/mapper/from-multipath-device /dev/mapper/to-multipath-device
            ```
        2.  从卷组中删除该设备：
            ``` literallayout
            # vgreduce volume-group /dev/mapper/from-multipath-device
            ```
        3.  可选：从物理设备中删除 LVM 元数据：
            ``` literallayout
            # pvremove /dev/mapper/from-multipath-device
            ```
        :::
    -   如果您要删除多路径设备，请执行以下命令：
        ::: orderedlist
        1.  查看该设备的所有路径：
            ``` literallayout
            # multipath -l
            ```
            稍后需要这个命令的输出。
        2.  清除 I/O 并删除多路径设备：
            ``` literallayout
            # multipath -f multipath-device
            ```
        :::
    -   如果该设备没有配置为多路径设备，或者设备配置为多路径设备，并且您之前将
        I/O 传递给单个路径，请将任何未完成的 I/O
        刷新到所有使用的设备路径：
        ``` literallayout
        # blockdev --flushbufs device
        ```
        对于直接访问的设备非常重要，`umount`{.literal} 或
        `vgreduce`{.literal} 命令不会清除 I/O。
    -   如果您要删除 SCSI 设备，请执行以下命令：
        ::: orderedlist
        1.  删除对基于路径的设备名称的任何引用，如
            `/dev/sd`{.literal}、`/dev/disk/by-path`{.literal} 或
            `major:minor`{.literal}
            number（在系统上的应用程序、脚本或工具中）。这样可保证以后添加的不同设备不会为当前的设备错误。
        2.  从 SCSI 子系统中删除该设备的每个路径：
            ``` screen
            # echo 1 > /sys/block/device-name/device/delete
            ```
            其中 `device-name`{.literal} 从 `multipath -l`{.literal}
            命令的输出中检索（如果之前用作多路径设备）。
        :::
    :::
3.  从正在运行的系统中删除物理设备。请注意，当您删除此设备时，I/O
    到其它设备不会停止。
:::
::: itemizedlist
**其它资源**
-   `multipath(8)、`{.literal} `pvmove(8)、`{.literal}
    `vgreduce(8)、`{.literal} `blockdev(8)`{.literal} 和
    `umount(8)`{.literal} man page。
:::
:::
:::
[]{#troubleshooting-dm-multipath.html}
::: chapter
::: titlepage
# []{#troubleshooting-dm-multipath.html#troubleshooting-dm-multipath}第 9 章 DM 多路径故障排除 {.title}
:::
如果您在进行多路径配置时遇到问题，您可以检查这些问题。以下问题可能会导致多路径配置缓慢或无法正常工作：
::: variablelist
[多路径守护进程没有运行]{.term}
:   如果您在进行多路径配置时遇到问题，请确保 `multipathd`{.literal}
    守护进程正在运行，如 [设置 DM
    多路径](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_device_mapper_multipath/assembly_setting-up-dm-multipath-configuring-device-mapper-multipath){.link}
    中所述。`multipathd`{.literal}
    守护进程必须正在运行，才能使用多路径设备。
[`queue_if_no_path`{.literal} 功能的问题]{.term}
:   如果使用 `"1 queue_if_no_path"`{.literal}
    选项配置多路径设备，那么在恢复一个或多个路径前，任何问题 I/O
    的进程都会挂起。
:::
::: section
::: titlepage
# []{#troubleshooting-dm-multipath.html#troubleshooting-issues-with-queue_if_no_path-feature_troubleshooting-dm-multipath}对 queue_if_no_path 功能的问题进行故障排除 {.title}
:::
如果使用 `"1 queue_if_no_path"`{.literal}
选项配置多路径设备，那么在恢复一个或多个路径前，任何问题 I/O
的进程都会挂起。要避免这种情况，请在 `/etc/multipath.conf`{.literal}
文件中设置 `no_path_retry N `{.literal} 参数，其中 N
是系统应该重试路径的次数。
如果您需要使用 `"1 queue_if_no_path"`{.literal}
选项，并遇到这个问题，您可以在运行时为特定 LUN
禁用队列策略，以便所有路径都不可用。
::: itemizedlist
**流程**
-   禁用特定设备的队列：
    ``` literallayout
    # multipathd disablequeueing map device
    ```
-   禁用所有设备的队列：
    ``` literallayout
    # multipathd disablequeueing maps
    ```
:::
禁用某个设备队列后，它将保持禁用，直到 `multipathd`{.literal}
重新启动或重新加载，或直至您执行以下命令之一：
::: itemizedlist
-   将队列重置为特定设备的先前值：
    ``` literallayout
    # multipathd restorequeueing map device
    ```
-   将队列重置为所有设备的先前值：
    ``` literallayout
    # multipathd restorequeueing maps
    ```
:::
:::
::: section
::: titlepage
# []{#troubleshooting-dm-multipath.html#troubleshooting-with-the-multipathd-interactive-console_troubleshooting-dm-multipath}使用 multipathd 互动控制台进行故障排除 {.title}
:::
`multipathd -k`{.literal} 命令是 `multipathd`{.literal}
守护进程的互动接口。执行此命令将进入互动的多路径控制台。执行此命令后，您可以输入
`help`{.literal}
来获取可用命令列表，[**Ctrl**]{.keycap}+[**D**]{.keycap} 退出。
使用 `multipathd`{.literal} 互动控制台来排除您可能与您的系统相关的问题。
::: itemizedlist
**流程**
-   在退出控制台前显示多路径配置，包括默认设置：
    ``` literallayout
    # multipathd -k
    multipathd> show config
    multipathd> Ctrl+D
    ```
-   确定多路径已获取对 `multipath.conf`{.literal} 文件的任何更改：
    ``` literallayout
    # multipathd -k
    multipathd> reconfigure
    multipathd> Ctrl+D
    ```
-   确保路径检查程序正常工作：
    ``` literallayout
    # multipathd -k
    multipathd> show paths
    multipathd> Ctrl+D
    ```
-   您也可以直接从命令行运行单个 `multipathd`{.literal}
    交互式命令，而无需启动交互式控制台。例如，要检查多路径是否已获取对
    `multipath.conf`{.literal} 文件的任何更改，请运行：
    ``` screen
    # multipathd reconfigure
    ```
:::
:::
:::
[]{#configuring-maximum-time-for-storage-error-recovery-with-eh_deadline.html}
::: chapter
::: titlepage
# []{#configuring-maximum-time-for-storage-error-recovery-with-eh_deadline.html#configuring-maximum-time-for-storage-error-recovery-with-eh_deadline}第 10 章 使用 eh_deadline 配置存储错误恢复的最大时间 {.title}
:::
您可以配置最大允许的时间来恢复失败的 SCSI 设备。这个配置保证了 I/O
响应时间，即使存储硬件因为失败而变得无响应。
::: section
::: titlepage
# []{#configuring-maximum-time-for-storage-error-recovery-with-eh_deadline.html#the-eh_deadline-parameter_configuring-maximum-time-for-storage-error-recovery-with-eh_deadline}eh_deadline 参数 {.title}
:::
SCSI 错误处理(EH)机制尝试在失败的 SCSI 设备上执行错误恢复。SCSI 主机对象
`eh_deadline`{.literal}
参数允许您配置恢复的最大时间。配置的时间过期后，SCSI EH
会停止并重置整个主机总线适配器(HBA)。
使用 `eh_deadline`{.literal} 可以缩短时间：
::: itemizedlist
-   关闭失败的路径,
-   切换路径，或者
-   禁用 RAID 分片。
:::
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
当 `eh_deadline`{.literal} 过期时，SCSI EH 会重置 HBA，这会影响那个 HBA
中的所有目标路径，而不仅仅是故障。如果由于其他原因无法使用冗余路径，则可能会出现
I/O 错误。仅在所有目标中有完全冗余的多路径配置时才启用
`eh_deadline`{.literal}。
:::
`eh_deadline`{.literal} 参数的值以秒为单位指定。默认设置为
`off`{.literal}，它会禁用时间限制并允许进行所有错误恢复。
### []{#configuring-maximum-time-for-storage-error-recovery-with-eh_deadline.html#_scenarios_when_eh_deadline_is_useful}eh_deadline 很有用的情况
在大多数情况下，您不需要启用
`eh_deadline`{.literal}。在某些特定场景中，使用 `eh_deadline`{.literal}
非常有用。例如，如果在光纤通道(FC)交换机和目标端口之间发生链接丢失，且
HBA 没有收到 Registered State Change
Notifications(RSCN)。在这种情况下，I/O
请求和错误恢复命令会超时，而不是遇到错误。在这个环境中设置
`eh_deadline`{.literal} 会针对恢复时间设置上限。这可让失败的 I/O 在由 DM
多路径的另一个可用路径中检索。
在以下条件下，`eh_deadline`{.literal} 参数不提供额外的好处，因为 I/O
和错误恢复命令会立即失败，这会导致 DM 多路径重试：
::: itemizedlist
-   如果启用了 RSCN
-   如果 HBA 没有注册链接不可用
:::
:::
::: section
::: titlepage
# []{#configuring-maximum-time-for-storage-error-recovery-with-eh_deadline.html#setting-the-eh_deadline-parameter_configuring-maximum-time-for-storage-error-recovery-with-eh_deadline}设置 eh_deadline 参数 {.title}
:::
这个过程配置 `eh_deadline`{.literal} 参数的值来限制最大 SCSI 恢复时间。
::: itemizedlist
**流程**
-   您可以使用以下方法之一配置 `eh_deadline`{.literal} ：
    ::: itemizedlist
    -   `multpath.conf`{.literal} 文件的 `defaults`{.literal} 部分
        在 `multpath.conf`{.literal} 文件的 defaults 部分，将
        `eh_deadline`{.literal} 参数设置为所需的秒数：
        ``` literallayout
        # eh_deadline 300
        ```
        ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 注意 {.title}
        在 RHEL 8.4 中，使用 `multpath.conf`{.literal} 文件的 defaults
        部分设置 `eh_deadline`{.literal} 参数是首选的方法。
        :::
        要使用此方法关闭 `eh_deadline`{.literal} 参数，请将
        `eh_deadline`{.literal} 设置为 `off`{.literal}。
    -   `sysfs`{.literal}
        将秒数写入
        `/sys/class/scsi_host/host/eh_deadline`{.literal}
        文件中。例如，要在 SCSI 主机 6 上通过 `sysfs`{.literal} 设置
        `eh_deadline`{.literal} 参数：
        ``` literallayout
        # echo 300 > /sys/class/scsi_host/host6/eh_deadline
        ```
        要使用此方法关闭 `eh_deadline`{.literal} 参数，请使用 echo
        `off`{.literal}。
    -   内核参数
        使用 `scsi_mod.eh_deadline`{.literal} 内核参数为所有 SCSI HBA
        设置默认值。
        ``` literallayout
        # echo 300 > /sys/module/scsi_mod/parameters/eh_deadline
        ```
        要使用此方法关闭 `eh_deadline`{.literal} 参数，请使用 echo
        `-1`{.literal}。
    :::
:::
::: itemizedlist
**其它资源**
-   [如何使用 udev 规则永久设置 eh_deadline 和
    eh_timeout](https://access.redhat.com/solutions/3209481){.link}
:::
:::
:::