● But easier to deploy, and users don't need new 
software because they completely trust the 
proxy already.
35
Independent personal proxies
● Circumventor, CGIProxy, Psiphon
● Same relay strategy, new discovery strategy: 
“Find a friend to install the relay for you.”
● Great for blocking-resistance, but huge 
scalability question:
● How does the user in China find a volunteer in Ohio?
● How does the volunteer in Ohio find a user in China?
36
Open proxies
● Google for “open proxy list”.
● Companies sell refined lists.
● Downsides:
– Widely varying bandwidth, stability, reachability.
– Legally questionable.
– Not encrypted in most cases; keyword filtering 
still works.
– “Too convenient”  Are they run by the adversary?
37
JAP and blocking-resistance
● Stefan Kopsell's paper from WPES 2004
● This is the idea that we started from in this 
blocking-resistance design.
● Uses the JAP anonymity network rather than 
Tor.
● Discovery is handled by making users solve a 
CAPTCHA in order to learn a relay address.
38
Internal caching networks
● Run a Freenet network inside China or other 
countries.
● Many users can fetch content without ever 
needing to cross the national firewall.
● Usability issues? and anonymity issues.
39
Skype
● Port switching and encryption avoid the simple 
blocking and filtering attacks.
● Still has a central login server?
40
...and Tor itself
● Tor's website is blocked in many places, but 
not the Tor network. Why?
● Tens of thousands of users? “Nobody cares.”
● Perception: “Tor is for experts.”
● We haven't publicly threatened their control: 
“Tor is for civil liberties in free countries.”
● Realize that we're already in the arms race. 
These constraints teach us about priorities and 
capabilities of our various attackers.
41
Outline
● Goals
● Assumptions (threat model)
● What Tor offers now
● Current proxy solutions
● What we need to add to Tor
● All the other issues that come up
42
Bridge relays
● Hundreds of thousands of Tor users, already 
self-selected for caring about privacy.
● Add a “Tor for Freedom” button to Vidalia 
(the most popular Tor GUI).
● Rate limit to 10KB/s.
● They can be internal relays, and don't have to 
be exit relays.
43
Bridge directory authorities
● Specialized dir authorities that aggregate and 
track bridges, but don't provide a public list:
– You can keep up-to-date about a bridge once you 
know its key, but can't just grab list of all bridges.
● Identity key and address for default bridge 
authorities ship with Tor.
● Bridges publish via Tor, in case somebody is 
monitoring the authority's network.
44
One working bridge is enough
● Connect via that bridge to the bridge authority.
● ...and to the main Tor network.
● Remember, all of this happens in the 
background.
● “How to circumvent for all transactions (and 
trust the pages you get)”                                  
is now reduced to                                       
“How to learn about a working bridge”.
45
Hiding Tor's network fingerprint
● [Skipping details since I only have an hour]
● Get rid of plaintext HTTP (used by directories)
● Pick a good default port like 443.
● Make the TLS handshake look more like an 
ordinary HTTPS certificate exchange.
● Better understand timing and volume 
fingerprint attacks.
46
Discovering working bridge relays
● Tor's modular design means we can separate 
the relay component from the discovery 
component.
● So we can use any discovery approach we like. 
Great!
● ...But alas, we still don't have any perfect ones.
47
Discovery: bootstrapping
● We assume users already have some way of 
bypassing the firewall to bootstrap.
● Open proxy servers, instant messaging, Skype, 
WoW, ...
● Or they know a friend who can.
48
Independent bridges,
no central discovery
● Like CGIProxy.
● Users could bootstrap by
– knowing the bridge's operator, or
– learning about the bridge from a local friend.
● “Telling a friend” has interesting incentives:
– If he gets it blocked, you can't use it either now.
– You're mapping your social network for the 
adversary.
49
Families of bridges,
no central discovery
● Volunteers run several bridges at once, or 
coordinate with other volunteers.
● The goal is that some bridges will be available 
at any given time.
● Each family has a bridge authority, to add new 
bridges to the pool, expire abandoned or 
blocked bridges, etc.
● Remember: this is all automated by the Tor 
client.
50
Public bridges, central discovery
● What about bridges who don't know users?      
Or users who don't know any bridges?
● Divide bridges into pools based on identity key.
● Each pool corresponds to a distribution 
strategy. We start with eight strategies.
● Each strategy is designed to exercise a different 
scarce resource or property of the user.
51
Distribution strategy #1
● Time-release bridge addresses.
● Divide available bridges into partitions, and 
each partition is deterministically available 
only in certain time windows.
● This pool will be first to get blocked, but
– it will help to bootstrap until it is blocked
– it won't be blocked by every adversary
52
Distribution strategy #2
● Publish bridge addresses based on IP address 
of requester.
● Divide bridges into partitions, hash the 
requester's IP address, choose a random bridge 
from the appropriate partition.
● (Don't use entire IP address, just first 3 octets.)
● As a special case, treat all Tor exit IP 
addresses as being on the same network.
53
Distribution strategy #3
● Combine time-based and location-based 
strategies.
● The bridge address provided in a given time 
slot is deterministic within the partition, rather 
than chosen randomly each time.
● So later requests during that time slot from a 
given network are given the same bridge 
address as the first request.
54
Distribution strategy #4
● Use Circumventor's “mailing list trick”.
● Start a mailing list, let people sign up, send out 
a few new bridge addresses every few days.
● The adversary will block them, but not 
immediately.
● Every three or four days seems to be sufficient 
for Circumventor for now.
55
Distribution strategy #5
● Users provide an email address and we mail 
them a bridge address.
● Limit one response per email address?
● Require a CAPTCHA.
– We can leverage Yahoo and Gmail 
CAPTCHAs!
56
Distribution strategy #6
● Social network reputation system.
● Pick some seeds (trusted people in blocked 
areas) and give them a few dozen bridge 
addresses and a few “delegation tokens”.
● Run a database near the bridge authority; Tor 
clients log in to learn more bridge addresses.
● Users can delegate trust to other people by 
giving them a token, which can be exchanged 
for a new account in the database.
57
Distribution strategy #6 (cont)
● Accounts “in good standing” then accrue new 
bridge addresses and new tokens.
● How do we decide we like an account? If the 
bridges it knows don't end up blocked.
● Could track reputation between accounts, or 
use blinded tokens to prevent even the 
database from mapping the social network.
● Gets really messy. Future work.
58
Distribution strategies #7 and #8
● Held in reserve, in case all our tricks fail at 
once and we need to deploy new strategies 
quickly.
● Please come up with new strategies and tell us! 
For example, SMS messages?
59
Deploying all solutions at once
● Finally, we're not in the position of defender: 
We only need one scheme that works!
● The attacker must guess how to allocate his 
resources between all the discovery strategies.
● By deploying all of them at once, we make all 
of them more likely to succeed.
60
How do we learn if a bridge has 
been blocked? (1)
● Active testing via users
– Can use Blossom-like system to build 
circuits through them to test.
– If we pick random users, the adversary 
should sign up users.
– Even if we have trusted users, adversary can 
still discover them and monitor them.
61
How do we learn if a bridge has 
been blocked? (2)
● Passive testing via bridges
– Bridges install GeoIP database, periodically 
report countries and traffic load.
– But: If we don't see activity from Burma, 
does that mean it's blocked, or they're just 
asleep?
62
How do we learn if a bridge has 
been blocked? (3)
● Different zones of the Internet are blocked in 
different ways – not just one per country.
● Lots of different possible locations for the 
fault: at bridge, at user, in between?
● Attacker could poison our bridge DB by 
signing up already-blocked bridges.
● Eventual solution will probably involve a 
combination of active and passive testing.
63
Outline
● Goals
● Assumptions (threat model)
● What Tor offers now
● Current proxy solutions
● What we need to add to Tor
● All the other issues that come up
64
Using Tor in oppressed areas
● Common assumption: risk of using Tor 
increases as firewall gets more restrictive.
● But as firewall gets more restrictive, more 
ordinary people use Tor too, for more 
mainstream activities.
● So the “median” use becomes more 
acceptable?
65
Trusting local hardware/software
● Internet cafes
● USB-based Tor package
● CD-based Tor package (LiveCD)
66
How many bridges do you need to 
know about to stay connected?
● Cablemodem / DSL bridges will disappear or 
move periodically.
● Already a tough problem with natural churn, 
but they can also get blocked.
● Related: how often should users fetch updates?
67
Cablemodems don't usually
run big websites
● So the attacker can just block all connections 
to Comcast, Verizon, ...
● We need to get bridges on both “consumer” 
and “producer” addresses.
● Also have to worry about economic pressure, 
E.g. from China on Verizon.
68
Publicity attracts attention
● Many circumvention tools launch with huge 
media splashes. (The media loves this.)
● But publicity attracts attention of the censors.
● We threaten their appearance of control, so 
they must respond.
● We can control the pace of the arms race.
69
Next steps
● Technical solutions won't solve the whole 
censorship problem. After all, firewalls are 
socially very successful in these countries.
● But a strong technical solution is still a critical 
puzzle piece.
● Next steps: deploy prototype bridges and 
bridge authorities, implement some discovery 
strategies, and get more intuition about what 
should come next.
70
And Tor itself needs to survive
● Ongoing discussion around the world: 
is anonymity useful for the world?
● Data retention threatens privacy and 
safety, but won't catch the bad guys.
● We need help!                                 
More Tor servers, more volunteers, 
more funding, ...