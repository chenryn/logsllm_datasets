Since `Modernizr` only inserts the relevant browser prefix on the client
render, there's a mismatch with the unprefixed server side render. As alluded
to in #591 , this causes the following warning in react:
> Warning: React attempted to reuse markup in a container but the checksum was
> invalid. This generally means that you are using server rendering and the
> markup generated on the server was not what the client was expecting. React
> injected new markup to compensate which works but you have lost many of the
> benefits of server rendering. Instead, figure out why the markup being
> generated is different on the client or server...
I don't see any easy fixes for this, and it's quite a biggie, which is
saddening. Obviously getting this whole module to move away from inline styles
is a no-go.
Pure speculation: maybe it's possible to patch the way react handles styles,
so that when a component is supplied with `style={{'transition': 'all 1s'}}`,
it's prefixed at the same time it's rendered to HTML, so it becomes:
     style="-webkit-transition: all 1s; transition: all 1s;" 
instead of simply
    style="transition: all 1s;"