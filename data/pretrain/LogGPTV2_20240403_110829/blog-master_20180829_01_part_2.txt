报错SQL  
```
select
        l_orderkey,
        sum(l_extendedprice * (1 - l_discount)) as revenue,
        o_orderdate,
        o_shippriority
from
        customer,
        orders,
        lineitem
where
        c_mktsegment = 'AUTOMOBILE'
        and c_custkey = o_custkey
        and l_orderkey = o_orderkey
        and o_orderdate  date '1995-03-08'
group by
        l_orderkey,
        o_orderdate,
        o_shippriority
order by
        revenue desc,
        o_orderdate
LIMIT 10;
```
有些SQL需要repartition join，需要设置如下参数  
```  
alter role postgres set citus.enable_repartition_joins =on;  
```  
### 错误3  
```  
ERROR:  the intermediate result size exceeds citus.max_intermediate_result_size (currently 1048576 kB)  
DETAIL:  Citus restricts the size of intermediate results of complex subqueries and CTEs to avoid accidentally pulling large result sets into once place.  
HINT:  To run the current query, set citus.max_intermediate_result_size to a higher value or -1 to disable.  
```  
有些SQL的中间结果比较大，可以设置为无限制，重新测试  
```  
alter role postgres set citus.max_intermediate_result_size =-1;  
```  
### 错误4  
```  
ERROR:  0A000: complex joins are only supported when all distributed tables are joined on their distribution columns with equal operator  
```  
复杂JOIN，仅支持分布键作为JOIN的字段，并且只能使用等值JOIN。  
```  
postgres=# explain select          
        sum(l_extendedprice) / 7.0 as avg_yearly  
from  
        lineitem join   
        part on (p_partkey = l_partkey and p_brand = 'Brand#13' and p_container = 'SM PKG') join  
        (SELECT l_partkey AS agg_partkey, 0.2 * avg(l_quantity) AS avg_quantity FROM lineitem GROUP BY l_partkey) part_agg  
on (agg_partkey = l_partkey) limit 10;  
ERROR:  0A000: complex joins are only supported when all distributed tables are joined on their distribution columns with equal operator  
LOCATION:  DeferErrorIfUnsupportedSubqueryPushdown, query_pushdown_planning.c:469  
```  
对应的代码如下  
https://github.com/citusdata/citus/blob/d63cbf382288358533b71d907f6a3a7fc8a1df5f/src/backend/distributed/planner/query_pushdown_planning.c  
```	  
	else if (!RestrictionEquivalenceForPartitionKeys(plannerRestrictionContext))  
	{  
		return DeferredError(ERRCODE_FEATURE_NOT_SUPPORTED,  
							 "complex joins are only supported when all distributed tables are "  
							 "joined on their distribution columns with equal operator",  
							 NULL, NULL);  
	}  
```  
### 错误5  
```  
ERROR:  failed to execute task 18  
```  
报错SQL  
```  
select  
        ps_partkey,  
        sum(ps_supplycost * ps_availqty) as value  
from  
        partsupp,  
        supplier,  
        nation  
where  
        ps_suppkey = s_suppkey  
        and s_nationkey = n_nationkey  
        and n_name = 'SAUDI ARABIA'  
group by  
        ps_partkey having  
                sum(ps_supplycost * ps_availqty) > ( sum(ps_supplycost * ps_availqty) filter (where  
                                ps_suppkey = s_suppkey  
                                and s_nationkey = n_nationkey  
                                and n_name = 'SAUDI ARABIA') ) * 0.0000005000  
order by  
        value desc  
LIMIT 1;  
```  
### 错误6
```
ERROR:  0A000: cannot run outer join query if join is not on the partition column
DETAIL:  Outer joins requiring repartitioning are not supported.
LOCATION:  FixedJoinOrderList, multi_join_order.c:189
```
报错SQL  
```
select
        c_count,
        count(*) as custdist
from
        (
                select
                        c_custkey,
                        count(o_orderkey)
                from
                        customer left outer join orders on
                                c_custkey = o_custkey
                                and o_comment not like '%unusual%requests%'
                group by
                        c_custkey
        ) as c_orders (c_custkey, c_count)
group by
        c_count
order by
        custdist desc,
        c_count desc
LIMIT 1;
```
## 小结  
citus的复杂SQL的语法支持还不是非常完备，如果要实现比较复杂的运算，建议Writing in SQL, thinking in MapReduce  
https://www.citusdata.com/blog/2018/08/17/breaking-down-citus-real-time-executor/   
这样的话，基本上你可以避免掉复杂的SQL，使用分解动作来实现。    
citus也有专门的tpch测试软件   
https://github.com/dimitri/tpch-citus  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")