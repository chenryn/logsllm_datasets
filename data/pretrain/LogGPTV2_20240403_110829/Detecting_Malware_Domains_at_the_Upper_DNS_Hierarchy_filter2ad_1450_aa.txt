title:Detecting Malware Domains at the Upper DNS Hierarchy
author:Manos Antonakakis and
Roberto Perdisci and
Wenke Lee and
Nikolaos Vasiloglou and
David Dagon
Detecting Malware Domains at the Upper DNS Hierarchy
Manos Antonakakis‡*, Roberto Perdisci†, Wenke Lee*,
Nikolaos Vasiloglou II‡, and David Dagon*
‡Damballa Inc.
{manos,nvasil}@damballa.com
*Georgia Institute of Technology, School of Computer Science
PI:EMAIL,PI:EMAIL
†University of Georgia, Department of Computer Science
PI:EMAIL
Abstract
In recent years Internet miscreants have been leveraging
the DNS to build malicious network infrastructures for
malware command and control.
In this paper we pro-
pose a novel detection system called Kopis for detecting
malware-related domain names. Kopis passively moni-
tors DNS trafﬁc at the upper levels of the DNS hierar-
chy, and is able to accurately detect malware domains by
analyzing global DNS query resolution patterns.
Compared to previous DNS reputation systems such
as Notos [3] and Exposure [4], which rely on monitor-
ing trafﬁc from local recursive DNS servers, Kopis offers
a new vantage point and introduces new trafﬁc features
speciﬁcally chosen to leverage the global visibility ob-
tained by monitoring network trafﬁc at the upper DNS hi-
erarchy. Unlike previous work Kopis enables DNS oper-
ators to independently (i.e., without the need of data from
other networks) detect malware domains within their au-
thority, so that action can be taken to stop the abuse.
Moreover, unlike previous work, Kopis can detect mal-
ware domains even when no IP reputation information is
available.
We developed a proof-of-concept version of Kopis,
and experimented with eight months of real-world data.
Our experimental results show that Kopis can achieve
high detection rates (e.g., 98.4%) and low false positive
rates (e.g., 0.3% or 0.5%). In addition Kopis is able to
detect new malware domains days or even weeks before
they appear in public blacklists and security forums, and
allowed us to discover the rise of a previously unknown
DDoS botnet based in China.
1 Introduction
The Domain Name System (DNS) [17, 18] is a funda-
mental component of the Internet. Over the years In-
ternet miscreants have used the DNS to build malicious
network infrastructures. For example, botnets [1, 21, 27]
1
and other types of malicious software make use of do-
main names to locate their command and control (C&C)
servers and communicate with attackers, e.g.,
to ex-
ﬁltrate stolen private information, wait for commands
to perform attacks on other victim machines, etc.
In
response to this malicious use of DNS, static domain
blacklists containing known malware domains have been
used by network operators to detect DNS queries origi-
nating from malware-infected machines and block their
communications with the attackers [16, 19].
Unfortunately,
the effectiveness of static domain
blacklists are increasingly limited because there are now
an overwhelming number of new domain names appear-
ing on the Internet every day and attackers frequently
switch to different domains to run their malicious activi-
ties, thus making it difﬁcult to keep blacklists up-to-date.
To overcome the limitations of static domain black-
lists, we need a detection system that can dynamically
detect new malware-related domains. This detection sys-
tem should:
(1) Have global visibility into DNS request and response
messages related to large DNS zones. This enables
“early warning”, whereby malware domains can be
detected before the corresponding malware infec-
tions reach our local networks.
(2) Enable DNS operators to independently deploy the
system and detect malware-related domains from
within their authority zones without the need for data
from other networks or other inter-organizational co-
ordination. This enables practical, low-cost, and
time-efﬁcient detection and response.
(3) Accurately detect malware-related domains even in
the absence of reputation data for the IP address
space pointed to by the domains. IP reputation data
is often difﬁcult to accumulate and is fragile. This
issue may become particularly important as IPv6 is
deployed in the near future, due to the more expan-
sive address space.
Following this intuition, in this paper we propose a
novel detection system called Kopis, which takes advan-
tage of the global visibility available at the upper lev-
els of the DNS hierarchy to detect malware-related do-
mains.
In order for Kopis to satisfy the three require-
ments outlined above, it needs to deal with a number
of new challenges. Most signiﬁcantly, the higher up we
move in the DNS hierarchy, the stronger the effects of
DNS caching [15]. As a consequence, moving up in the
hierarchy restricts us to monitoring DNS trafﬁc with a
coarser granularity. For example, at the TLD level we
will only be able to see a small subset of queries to do-
mains under a certain delegation point due to the effects
of the DNS cache.
Kopis works as follows.
It analyzes the streams of
DNS queries and responses at AuthNS or TLD servers
(see Figure 1) from which are extracted statistical fea-
tures such as the diversity in the network locations of the
RDNS servers that query a domain name, the level of
“popularity” of the querying RDNS servers (deﬁned in
detail in Section 4), and the reputation of the IP space
into which the domain name resolves. Given a set of
known legitimate and known malware-related domains
as training data, Kopis builds a statistical classiﬁcation
model that can then predict whether a new domain is
malware-related based on observed query resolution pat-
terns.
Our choice of Kopis’ statistical features, which we dis-
cuss in detail in Section 4, is determined by the nature of
the information accessible at the upper DNS hierarchy.
As a result these features are signiﬁcantly different from
those used by RDNS-based systems such as Notos [3]
and Exposure [4]. In particular, we were pleasantly sur-
prised to ﬁnd that, while Notos and Exposure rely heav-
ily on features based on IP reputation, Kopis’ features
enabled it to accurately detect malware-related domains
even in the absence of IP reputation information. This
may become a signiﬁcant advantage in the near future
because the deployment of IPv6 may severely impact the
effectiveness of current IP reputation systems due to the
substantially larger IP address space that would need to
be monitored.
To summarize, we make the following contributions:
• We developed a novel approach to detect malware-
related domain names. Our system leverages the
global visibility obtained by monitoring DNS traf-
ﬁc at the upper levels of the DNS hierarchy, and can
detect malware-related domains based on DNS res-
olution patterns.
• Kopis enables DNS operators to independently (i.e.,
without the need of data from other networks) detect
malware-domains within their scope of authority, so
that action can be taken to stop the abuse.
2
Figure 1: Overview of the levels at which Kopis, Notos,
and Exposure perform DNS monitoring.
Recently researchers have proposed two dynamic do-
main reputation systems, Notos [3] and Exposure [4].
Unfortunately, while the results reported in [3, 4] are
promising, neither Notos nor Exposure can meet all the
requirements stated above, as Notos and Exposure rely
on passive monitoring of recursive DNS (RDNS) traf-
ﬁc. As shown in Figure 1, they monitor the DNS queries
from a (limited) number of RDNS servers (e.g., RDNS
3 and 4), and have only partial visibility on DNS mes-
sages related to large DNS zones. To obtain truly global
visibility into DNS trafﬁc related to a given DNS zone,
these systems need access to a very large number of
RDNS sensors in many diverse locations. This is not
easy to achieve in practice in part due to operational
costs, privacy concerns related to sharing data across or-
ganizational boundaries, and difﬁculties in establishing
and maintaining trust relationships between network op-
erators located in different countries, for example. For
the same reasons, Notos and Exposure have not been de-
signed to be independently deployed and run by single
DNS operators, because they rely on data sharing among
several networks to obtain a meaningful level of visibility
into DNS trafﬁc.
On the other hand, monitoring DNS trafﬁc from the
upper DNS hierarchy, e.g., at top-level domain (TLD)
server A, and authoritative name servers (AuthNSs) B
and C, offers visibility on all DNS messages related to
domains on which A, B, and C have authority or are a
point of delegation. For example, assuming B is the Au-
thNS for the example.com zone, monitoring the DNS
trafﬁc at B provides visibility on all DNS messages from
all RDNS servers around the Internet that query a domain
name under the example.com zone.
RDNSRDNSRDNSRDNSKopisNotosExposureTLDsRootAuthNSs1234BCA• We systematically examined real-world DNS traces
from two large AuthNSs and a country-code level
TLD server. We performed a rigorous evaluation
of our statistical features and identiﬁed two new
feature families that, unlike previous work, enable
Kopis to detect malware domains even when no IP
reputation information is available.
• We developed a proof-of-concept version of Kopis,
and experimented with eight months of real-world
data. Our experimental results show that Kopis can
achieve high detection rates (e.g., 98.4%) and low
false positive rates (e.g., 0.3% or 0.5%). More sig-
niﬁcantly, Kopis was able to identify previously un-
known malware domain names several weeks be-
fore they appeared in blacklists or in security fo-
rums.
In addition, using Kopis we detected the
rise of a previously unknown DDoS botnet based
in China.
2 Background and Related Work
DNS Concepts and Terminology The domain name
space is structured like a tree. A domain name identi-
ﬁes a node in the tree. For example, the domain name
F.D.B.A. identiﬁes the path from the root “.” to a node
F in the tree (see Figure 2(a)). The set of resource infor-
mation associated with a particular name is composed of
resource records (RRs) [17, 18]. The depth of a node in
the tree is sometimes referred to as domain level. For
example, A. is a top-level domain (TLD), B.A. is a
second-level domain (2LD), D.B.A. is a third-level do-
main (3LD), and so on.
The information related to the domain name space is
stored in a distributed domain name database. The do-
main name database is partitioned by “cuts” made in the
name space between adjacent nodes. After all cuts are
made, each group of connected nodes represent a sep-
arate zone [17]. Each zone has at least one node, and
hence a domain name, for which it is authoritative. For
each zone, a node which is closer to the root than any
other node in the zone can be identiﬁed. The name of this
node is often used to identify the zone. The RRs of the
nodes in a given zone are served by one or more authori-
tative name servers (AuthNSs). AuthNSs that have com-
plete knowledge about a zone (i.e., they store the RRs for
all the nodes related to the zone in question in its zone
ﬁles) are said to have authority over that zone [17, 18].
AuthNSs will typically support one or more zones, and
can delegate the authority over part of a (sub-)zone to
other AuthNSs.
DNS queries are usually initiated by a stub resolver
on a user’s machine, which relies on a recursive DNS re-
solver (RDNS) for obtaining a set of RRs owned by a
(a) DNS Tree
(b) Domain Resolution
Figure 2: Example of DNS tree and domain resolution
process.
given domain name. The RDNS is responsible for di-
rectly contacting the AuthNSs on behalf of the stub re-
solver to obtain the requested information, and return it
to the stub resolver. The RDNS is also responsible for
caching the obtained information up to a certain period
of time, called the Time To Live (TTL), so that if the same
or another stub resolver queries again for the same in-
formation within the TTL time window, the RDNS will
not need to contact the authoritative name servers (thus
improving efﬁciency). Figure 2(b) enumerates the steps
involved in a typical query resolution process, assuming
an empty cache.
Related Work To the best of our knowledge, Wessels
et al. [30] were the ﬁrst to analyze DNS query data as
seen from the upper DNS hierarchy. The authors fo-
cused on examining the DNS caching behavior of re-
cursive DNS servers from the point of view of AuthNS
and TLD servers, and how different implementations of
caching systems may affect the performance of the DNS.
Recently, Hao et al. [13] released a report on DNS
lookup patterns measured from the .com TLD servers.
Their preliminary analysis shows that
the resolution
patterns for malicious domain names are sometimes
different from those observed for legitimate domains.
While [13] only reports some preliminary measurement
results and does not discuss how the ﬁndings may be
leveraged for detection purposes, it does hint that a mal-
ware detection system may be built around TLD-level
DNS queries. We designed Kopis to do just that, namely
monitor query streams at the upper DNS hierarchy and
be able to detect previously unknown malware domains.
Several studies provide deep understanding behind
the properties of malware propagation and botnet’s life-
time [7, 25, 29]. An interesting observation among all
these research efforts is the inherent diversity of the bot-
net’s infected population. Collins et al. [6] introduced
and quantiﬁed the notion of “network uncleanliness”
3
RDNSwww.example.com?192.0.32.1012384567. (root).com (TLD)example.com (AuthNS)from the temporal and spatial network point of view,
showing that it is very probable to have a large number
of infected bots in the same network over an epoch. They
also discuss that this could be a direct effect of the net-
work policy enforced at the edge. Kopis directly uses
the intuition behind these past research efforts in the re-
quester diversity and requester proﬁle statistical feature