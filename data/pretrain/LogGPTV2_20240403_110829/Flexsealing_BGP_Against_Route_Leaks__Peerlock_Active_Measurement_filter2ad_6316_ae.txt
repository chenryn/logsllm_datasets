49%
Table 3: Analyzing leak segments by UCLA classes transited.
work encountered some evidence for poison ﬁltering, and
noted that ﬁltering rates increase with poisoned AS degree,
but did not seek to describe the underlying ﬁltering mechanism
or measure which ASes ﬁlter poisons. Similarly, Birge-Lee et
al. [2] and McDaniel et al. [28] trialed poisons as primitives
for novel BGP attacks. Both studies encountered ﬁltering
when attempting to poison large transit networks, but did not
examine ﬁltering position or prevalence.
Hlavacek et al. [12] introduced the DISCO system for
preventing BGP hijacking. While not designed to prevent route
leaks, the approach taken by DISCO is ideologically similar
to Peerlock - DISCO emphasizes deployability/usability at the
expense of some security guarantees relative to RPKI/ROV
ﬁltering. This line of thinking is informed by a long history
of glacial deployment rates for security features that harden
BGP including BGPSec [47] and the RPKI [8], [31].
Previous work that relies on BGP poisoning often assumes
1) unpoisoned ASes will forward poisoned updates and 2)
poisoned ASes will drop such updates (see Section II-D).
Katz-Bassett et al.’s LIFEGUARD fault detection and reme-
diation system [19], [20], for instance, employs poisoning
to steer ASes around link failures. Smith and Schuchard’s
Nyx defense [42] depends on rerouting with poisons for
DDOS/Link Flooding Attack mitigation. Anwar et al.’s path
discovery technique [1] is also driven by BGP poisoning.
While we discovered little evidence for general poison ﬁl-
tering, the prevalence of Tier 1/large transit network ﬁltering
could present an obstacle to these systems. Speciﬁcally, the
assumption that unpoisoned networks will propagate poisons
does not hold in all cases.
VII. CONCLUSION
current
the
probes
deployment
This work
of
Peerlock/Peerlock-lite on the control plane with active Internet
measurements in Section IV. We ﬁnd substantial evidence
for deployment of these leak defense systems, especially
in large transit networks, and measure a rise in Peerlock
deployment within the peering clique during our experiments.
While the range of protected networks is still narrow within
our observation window, with most ﬁlterers protecting only
Tier 1 ASes, many of
route
leaks contain these networks. Defensive systems [42], [20],
measurement techniques [1], and attacks [2] that may poison
Peerlock-protected networks could inadvertently trigger these
the most disruptive recent
ﬁlters, and must not assume poisons will be propagated
by unpoisoned networks. BGP simulators should likewise
account for the presence of Peerlock to faithfully reproduce
control plane behavior.
We also examine how the position and prevalence of ﬁl-
tering impacts leak propagation in the AS-level topology in
Section V. Notably, we ﬁnd that large ISPs ﬁltering plays a
major role in global leak dissemination, signaling that Tier
1 clique deployment of Peerlock alone is not sufﬁcient to
isolate leaks. Strategic placement of ﬁlters at these large transit
providers, which account for fewer than 1% of all ASes,
completely mitigates 80% of simulated Tier 1 route leaks.
The MANRS ﬁltering guide encourages AS PATH ﬁltering
by member ISPs, particularly for screening customer adver-
tisements, and gives Peerlock/Peerlock-lite as examples. But
these systems are not explicitly required, unlike IRR ﬁlter-
ing (see [5] Section 4.1.1.1). Given the many indirect/direct
customers these networks serve, ISPs are best equipped and
best incentivized to deploy effective ﬁlters. Moreover, neither
Peerlock nor Peerlock-lite is technically complex or burden-
some to conﬁgure. Therefore, we argue for broad application
of these common-sense leak prevention techniques by ISPs as
a meaningful step in securing inter-domain routing.
A. Operator Engagement
This study’s preprint was posted to the NANOG and RIPE
operator mailing lists in June and August 2020. While operator
response was limited, email correspondence around the study
did yield some helpful insights. One European AS operator
claimed that at
least one (and possibly additional) transit
networks deployed techniques similar to Peerlock around
2007, roughly ten years before NTT’s codiﬁcation of the
method [18]. Separately, a Tier 1 network operator suggested
that 1) differences in network automation sophistication could
account for observed uneven ﬁltering within the peering clique
and 2) defensive ﬁltering may have partially mitigated the
Verizon/Cloudﬂare leaks detailed in Section II-B. This idea
is supported by Cloudﬂare’s discussion on the incident [23].
Cloudﬂare identiﬁes some networks that ﬁltered the leaks
(including ASes 1299 Telia, 2914 NTT, and 7018 AT&T).
Bandwidth graphs presented in that post indicate little or no
impact on Cloudﬂare-to-AT&T data plane operation, while
Cloudﬂare trafﬁc to leak propagator Verizon was drastically
reduced for hours after the incident.
13
B. Future Directions
Widespread adoption of Peerlock will
likely depend on
addressing scalability issues. Rule conﬁguration currently re-
quires non-standard, manual out-of-band communication be-
tween protector/protected ASes. Automating this process is
a crucial step in extending Peerlock beyond core networks.
Communities designating authorized upstreams for routes, as
proposed in [16], could take the place of out-of-band com-
munication. Alternatively, RPKI registration of direct/indirect
customers [17] could distribute trusted topological information
relevant to ﬁltering.
ACKNOWLEDGEMENTS
The authors would like to thank Samuel Jero for his
helpful guidance in the shepherding process. The detailed and
thoughtful comments/criticisms from our NDSS reviewers are
also appreciated, especially within the context of the ongoing
COVID-19 pandemic. Finally, we would like to recognize Job
Snijders at NTT Communications for presenting the Peerlock
system. This study was supported by the National Science
Foundation under Grant No. 1850379.
REFERENCES
[1] R. Anwar, H. Niaz, D. Choffnes, Í. Cunha, P. Gill, and E. Katz-Bassett,
“Investigating interdomain routing policies in the wild,” in Proceedings
of the 2015 Internet Measurement Conference, 2015, pp. 71–77.
[2] H. Birge-Lee, L. Wang, J. Rexford, and P. Mittal, “Sico: Surgical inter-
ception attacks by manipulating bgp communities,” in Proceedings of
the 2019 ACM SIGSAC Conference on Computer and Communications
Security, 2019, pp. 431–448.
[3] R. Bush, O. Maennel, M. Roughan, and S. Uhlig, “Internet optometry:
assessing the broken glasses in internet reachability,” in Proceedings of
the 9th ACM SIGCOMM conference on Internet measurement, 2009, pp.
242–253.
[4] J. Choi, J. H. Park, P.-c. Cheng, D. Kim, and L. Zhang, “Understand-
ing bgp next-hop diversity,” in 2011 IEEE Conference on Computer
Communications Workshops (INFOCOM WKSHPS).
IEEE, 2011, pp.
846–851.
[5] M. A. N.
for Routing Security, “Manrs ﬁltering guide,” https://
www.manrs.org/isps/guide/ﬁltering/.
[6] ——, “Manrs site,” https://www.manrs.org/.
[7] Gao, Lixin, “On inferring autonomous system relationships in the
Internet,” IEEE/ACM ToN, 2001.
[8] Y. Gilad, A. Cohen, A. Herzberg, M. Schapira, and H. Shulman, “Are
we there yet? on rpki’s deployment and security.” 2017.
[9] Y. Gilad, O. Sagga, and S. Goldberg, “Maxlength considered harmful
to the rpki,” in Proceedings of the 13th International Conference on
emerging Networking EXperiments and Technologies, 2017, pp. 101–
107.
[10] V. Giotsas, M. Luckie, B. Huffaker, and K. Claffy, “Inferring complex
as relationships,” in Proceedings of the 2014 Conference on Internet
Measurement Conference, 2014, pp. 23–30.
[11] Goodin, Dan, “Google goes down after major BGP mishap routes
trafﬁc through China,” https://arstechnica.com/information-technology/
2018/11/major-bgp-mishap-takes-down-google-as-trafﬁc-improperly-
travels-to-china/, 2018.
[12] T. Hlavacek,
I. Cunha, Y. Gilad, A. Herzberg, E. Katz-Bassett,
M. Schapira, and H. Shulman, “Disco: Sidestepping rpki’s deployment
barriers,” in NDSS, 2019.
[13] G. Huston and G. Michaelson, “Rfc 6483 - route origin validation,”
2012.
[14] IETF, “IRR RPSL Reference Guide,” https://tools.ietf.org/html/rfc2622.
[15] M. N. Inc, “List of routing registries,” http://www.irr.net/docs/list.html.
[16] J. H. J. Snijders, “BGP Route Leak Protection Community,” https:
//www.ietf.org/archive/id/draft-heitz-idr-route-leak-community-00.txt,
2017.
14
[17] M. S. J. Snijders and M. Aelmans, “ RPKI Autonomous Systems Cones,”
https://tools.ietf.org/html/draft-ietf-grow-rpki-as-cones-02, 2020.
[18] Job
Snijders,
“NTT
Peer
Locking,”
http://instituut.net/~job/
peerlock_manual.pdf, 2016.
[19] E. Katz-Bassett, D. R. Choffnes, Í. Cunha, C. Scott, T. Anderson, and
A. Krishnamurthy, “Machiavellian routing: improving internet availabil-
ity with bgp poisoning,” in Proceedings of the 10th ACM Workshop on
Hot Topics in Networks, 2011, pp. 1–6.
[20] E. Katz-Bassett, C. Scott, D. R. Choffnes, Í. Cunha, V. Valancius,
N. Feamster, H. V. Madhyastha, T. Anderson, and A. Krishnamurthy,
“Lifeguard: Practical repair of persistent route failures,” ACM SIG-
COMM Computer Communication Review, vol. 42, no. 4, pp. 395–406,
2012.
[21] Kephart, Nick, “Finding and Diagnosing BGP route leaks,” https://
blog.thousandeyes.com/ﬁnding-and-diagnosing-bgp-route-leaks/, 2015.
[22] B. Kuerbis and M. Mueller, “Internet routing registries, data governance,
and security,” Journal of Cyber Policy, vol. 2, no. 1, pp. 64–81, 2017.
[23] Levy, Martin, “The deep-dive into how Verizon and a BGP
Optimizer Knocked Large Parts of
the Internet Ofﬂine Monday,”
https://blog.cloudﬂare.com/the-deep-dive-into-how-verizon-and-a-bgp-
optimizer-knocked-large-parts-of-the-internet-ofﬂine-monday/, 2019.
[24] M. Lepinski and K. Sriram, “RFC 8205 - BGPSec protocol speciﬁca-
tion,” IETF, 2013.
[25] M. Lepinski and S. Kent, “RFC 6480 - An Infrastructure to Support
Secure Internet Routing,” https://tools.ietf.org/html/rfc6480, 2012.
[26] Madory, Doug, “Why Far-Flung Parts of the Internet Broke Today,”
https://dyn.com/blog/why-the-internet-broke-today/, 2014.
[27] ——, “Widespread impact caused by Level 3 BGP route leak,”
https://blogs.oracle.com/internetintelligence/widespread-impact-caused-
by-level-3-bgp-route-leak, 2017.
[28] T. McDaniel, J. M. Smith, and M. Schuchard, “The maestro attack:
Orchestrating malicious ﬂows with bgp,” in Proceedings of the 16th EAI
International Conference on Security and Privacy in Communication
Networks (SecureComm), 2020.
[29] R. NCC, “Routing information service,” https://www.ripe.net/analyse/
internet-measurements/routing-information-service-ris.
[30] ——, “Ripe ncc irr database non-authoritative route object clean-up,”
https://www.ripe.net/publications/docs/ripe-731, 2019.
[31] NIST, “RPKI Deployment Monitor,” https://rpki-monitor.antd.nist.gov/,
2020.
[32] U. of Oregon, “Routeviews project,” http://www.routeviews.org.
[33] Oliveira, Ricardo and Pei, Dan and Willinger, Walter and Zhang,
Beichuan and Zhang, Lixia, “The (in) completeness of the observed
internet AS-level structure,” IEEE/ACM ToN, 2010.
[34] C. Orsini, A. King, D. Giordano, V. Giotsas, and A. Dainotti, “Bgp-
stream: a software framework for live and historical bgp data analysis,”
in IMC, 2016, pp. 429–444.
[35] J. Schlamp, R. Holz, Q. Jacquemart, G. Carle, and E. W. Biersack,
“Heap: reliable assessment of bgp hijacking attacks,” IEEE Journal on
Selected Areas in Communications, vol. 34, no. 6, pp. 1849–1861, 2016.
[36] B. Schlinker, T. Arnold, Í. Cunha, and E. Katz-Bassett, “Peering:
Virtualizing bgp at the edge for research,” in Proceedings of the 15th
International Conference on Emerging Networking Experiments And
Technologies, 2019, pp. 51–67.
[37] Schuchard, Max and Geddes, John and Thompson, Christopher and
Hopper, Nicholas, “Routing Around Decoys,” in ACM CCS, 2012.
[38] Schuchard, Max and Mohaisen, Abedelaziz and Foo Kune, Denis and
Hopper, Nicholas and Kim, Yongdae and Vasserman, Eugene Y, “Losing
control of the internet,” in ACM CCS, 2010.
[39] P. Sermpezis, V. Kotronis, P. Gigis, X. Dimitropoulos, D. Cicalese,
A. King, and A. Dainotti, “Artemis: Neutralizing bgp hijacking within
a minute,” IEEE/ACM Transactions on Networking, vol. 26, no. 6, pp.
2471–2486, 2018.
[40] Shapelez, Alex, “This is how you deal with route leaks,” https://
habr.com/en/company/qrator/blog/495260/, 2020.
[41] J. M. Smith, K. Birkeland, T. McDaniel, and M. Schuchard, “Withdraw-
ing the bgp re-routing curtain: Understanding the security impact of bgp
poisoning through real-world measurements,” in NDSS, 2020.
[42] J. M. Smith and M. Schuchard, “Routing around congestion: Defeating
ddos attacks and adverse network conditions via reactive bgp routing,”
in 2018 IEEE Symposium on Security and Privacy (SP).
IEEE, 2018,
pp. 599–617.
[43] Snijders, J., Heasley, J. and Schmidt, M., “Use of bgp large communi-
ties,” https://tools.ietf.org/html/rfc8195, 2017.
[44] Snijders, Job, “Everyday Practical BGP Filtering,” https://peerlock.net,
2016.
[45] K. Sriram, D. Montgomery, D. McPherson, E. Osterweil, and B. Dick-
son, “Rfc 7908 - problem deﬁnition and classiﬁcation of bgp route
leaks,” https://tools.ietf.org/html/rfc7908.
[46] Sriram, K. and Azimov, A., “Methods for detection and mitigation
of bgp route leaks,” https://tools.ietf.org/pdf/draft-ietf-grow-route-leak-
detection-mitigation-02.pdf, 2020.
[47] Sriram, Kotikalapudi and Montgomery, Douglas C., “Resilient Interdo-
main Trafﬁc Exchange: BGP Security and DDoS Mitigation,” NIST,
2019.
[48] Strickx, Tom, “How Verizon and a BGP Optimizer Knocked Large
Parts of the Internet Ofﬂine Today,” https://blog.cloudﬂare.com/how-
verizon-and-a-bgp-optimizer-knocked-large-parts-of-the-internet-
ofﬂine-today/, 2019.
[49] Tran, Muoi and Kang, Min Suk and Hsiao, Hsu-Chun and Chiang,
Wei-Hsuan and Tung, Shu-Po and Wang, Yu-Su, “On the Feasibility
of Rerouting-based DDoS Defenses,” in IEEE S&P, 2019.
[50] UCSD-CAIDA, “CAIDA AS Ranking,” https://asrank.caida.org/, 2020.
[51] ——, “CAIDA AS Relationship dataset,” https://www.caida.org/data/as-
relationships/, 2020.
[52] M. Wählisch, O. Maennel, and T. C. Schmidt, “Towards detecting bgp
route hijacking using the rpki,” ACM SIGCOMM Computer Communi-
cation Review, vol. 42, no. 4, pp. 103–104, 2012.
[53] H. Yan, R. Oliveira, K. Burnett, D. Matthews, L. Zhang, and D. Massey,
“Bgpmon: A real-time, scalable, extensible monitoring system,” in 2009
Cybersecurity Applications & Technology Conference for Homeland
Security.
IEEE, 2009, pp. 212–223.
[54] Zmijewski, Earl, “Indonesia Hijacks the World,” https://dyn.com/blog/
indonesia-hijacks-world/, 2014.
APPENDIX
Update Propagation: Before (August 2019) and after (May
2020) conducting our control-plane experiments in Section IV,
we performed simple tests to measure 1) the time distribution
for BGP update arrivals at RIPE/RouteViews collectors for
normal and poisoned advertisements issued from PEERING,
and 2) the time distribution for unique ASes seen on AS
PATHs in those updates. The latter is most critical for our
experiments, as we build our ﬁltering inferences from the
presence/absence of ASes on update AS PATHs.
These tests consisted of an explicit /24 withdrawal followed
by a one hour waiting period, then a normal /24 advertise-
ment. We listened for updates for the /24 at all BGPStream
collectors, and recorded the arrival times of updates for the
advertised preﬁx for one hour. We also noted when unique
ASes were ﬁrst seen on the updates’ AS PATHs. This process
(withdraw, update, listen) was repeated ﬁve times. We con-
ducted the same process with a poisoned /24 advertisement,
for a total of 10 advertisements per experiment.
The results are shown below, Figs.12 and 13. About 80% of
updates triggered by a normal or poisoned /24 advertisement
that arrived within an hour were received within 30 minutes
post-origination in the August experiment. In May, more than
95% of updates fell within this period. More importantly, for
every experiment, all unique ASes seen on update paths over
the hour listening window arrived within the ﬁrst 25 minutes
post-origination. Over 95% of unique ASes were seen within
7 minutes post-origination.
15
(a) August results.
(b) May results.
Fig. 12: Update arrival time CDF. Each of ﬁve propagation experiments is illustrated in a different color.
(a) August results.
(b) May results.
Fig. 13: Unique AS arrival time CDF. Each of ﬁve propagation experiments is illustrated in a different color.
16