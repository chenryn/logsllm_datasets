ALTER TABLE  
db1=> \d tbl  
                  Table "s1.tbl"  
 Column |  Type   | Collation | Nullable | Default   
--------+---------+-----------+----------+---------  
 id     | integer |           |          |   
 info   | text    |           |          |   
 ts     | date    |           |          |   
 c1     | integer |           |          |   
Indexes:  
    "tbl_id_idx" btree (id)  
```  
#### 33 删除字段  
```  
db1=> \d tbl  
                  Table "s1.tbl"  
 Column |  Type   | Collation | Nullable | Default   
--------+---------+-----------+----------+---------  
 id     | integer |           |          |   
 info   | text    |           |          |   
 ts     | date    |           |          |   
 c1     | integer |           |          |   
Indexes:  
    "tbl_id_idx" btree (id)  
db1=> alter table tbl drop column info;  
ALTER TABLE  
db1=> \d+ tbl  
                                             Table "s1.tbl"  
 Column |  Type   | Collation | Nullable | Default | Storage | Compression | Stats target | Description   
--------+---------+-----------+----------+---------+---------+-------------+--------------+-------------  
 id     | integer |           |          |         | plain   |             |              |   
 ts     | date    |           |          |         | plain   |             |              |   
 c1     | integer |           |          |         | plain   |             |              |   
Indexes:  
    "tbl_id_idx" btree (id)  
Access method: heap  
```  
#### 34 查看被删除字段的数据  
```  
db1=> \x  
Expanded display is on.  
db1=> select * from pg_attribute where attrelid ='s1.tbl'::regclass and attisdropped;  
-[ RECORD 1 ]--+-----------------------------  
attrelid       | 16390  
attname        | ........pg.dropped.2........  
atttypid       | 0  
attstattarget  | 0  
attlen         | -1  
attnum         | 2  
attndims       | 0  
attcacheoff    | -1  
atttypmod      | -1  
attbyval       | f  
attalign       | i  
attstorage     | x  
attcompression |   
attnotnull     | f  
atthasdef      | f  
atthasmissing  | f  
attidentity    |   
attgenerated   |   
attisdropped   | t  
attislocal     | t  
attinhcount    | 0  
attcollation   | 100  
attacl         |   
attoptions     |   
attfdwoptions  |   
attmissingval  |   
```  
```  
db1=> \c db1 postgres  
You are now connected to database "db1" as user "postgres".  
db1=# update pg_attribute set attname='info',attisdropped=false,atttypid=25,attstattarget=-1 where attrelid ='s1.tbl'::regclass and attnum=2;  
UPDATE 1  
```  
```  
db1=# \c db1 r1  
You are now connected to database "db1" as user "r1".  
db1=> select info from tbl limit 10;  
               info                 
----------------------------------  
 test3  
 test4  
 0f85f45f4a43c8fe876b55538ac27d9f  
 ae4311048718b0ac22f5ac893d223bdb  
 38b488ecf64013f936908384bbe996c0  
 c2b3bbdce2a6a6d4620e6bc796a19a90  
 009cb69b734e39f34eb9bd813892fe15  
 05c0e274f5949e7fe89df72cbd3c9782  
 145c99d4d4a293b48c468909e2ef8d23  
 d7e5f169c33c40df2b8cbd16c24d415e  
(10 rows)  
```  
注: `atttypid=25,attstattarget=-1` 对应原来的`info text`类型, 可以在另一个表中查到  
```  
db1=> select atttypid,attstattarget from pg_attribute where attrelid ='s1.t2'::regclass and attname='info';  
 atttypid | attstattarget   
----------+---------------  
       25 |            -1  
(1 row)  
```  
#### 35 创建约束  
```  
db1=> create table t (id int, info text, ts timestamp, c1 int check (c1>0));  
CREATE TABLE  
db1=> \set VERBOSITY verbose  
db1=> insert into t values (1,'test',now(),0);  
ERROR:  23514: new row for relation "t" violates check constraint "t_c1_check"  
DETAIL:  Failing row contains (1, test, 2023-11-10 13:21:15.159885, 0).  
SCHEMA NAME:  s1  
TABLE NAME:  t  
CONSTRAINT NAME:  t_c1_check  
LOCATION:  ExecConstraints, execMain.c:1934  
db1=> insert into t values (1,'test',now(),1);  
INSERT 0 1  
```  
#### 36 增加自增字段  
```  
db1=> alter table t add column c2 serial4;  
ALTER TABLE  
db1=> \d+ t  
                                                                   Table "s1.t"  
 Column |            Type             | Collation | Nullable |            Default            | Storage  | Compression | Stats target | Description   
--------+-----------------------------+-----------+----------+-------------------------------+----------+-------------+--------------+-------------  
 id     | integer                     |           |          |                               | plain    |             |              |   
 info   | text                        |           |          |                               | extended |             |              |   
 ts     | timestamp without time zone |           |          |                               | plain    |             |              |   
 c1     | integer                     |           |          |                               | plain    |             |              |   
 c2     | integer                     |           | not null | nextval('t_c2_seq'::regclass) | plain    |             |              |   
Check constraints:  
    "t_c1_check" CHECK (c1 > 0)  
Access method: heap  
```  
#### 37 创建序列  
```  
db1=> \h create sequence  
Command:     CREATE SEQUENCE  
Description: define a new sequence generator  
Syntax:  
CREATE [ TEMPORARY | TEMP ] SEQUENCE [ IF NOT EXISTS ] name  
    [ AS data_type ]  
    [ INCREMENT [ BY ] increment ]  
    [ MINVALUE minvalue | NO MINVALUE ] [ MAXVALUE maxvalue | NO MAXVALUE ]  
    [ START [ WITH ] start ] [ CACHE cache ] [ [ NO ] CYCLE ]  
    [ OWNED BY { table_name.column_name | NONE } ]  
URL: https://www.postgresql.org/docs/14/sql-createsequence.html  
db1=> create sequence seq start 1;  
CREATE SEQUENCE  
```  
#### 38 设置字段默认值  
```  
db1=> alter table t alter column c1 set default nextval('s1.seq'::regclass);   
ALTER TABLE  
db1=>   
```  
#### 39 设置(插入、更新)自动计算值字段  
```  
create table new1 (  
  id int primary key,  
  c1 int,  
  c2 int,  
  sum int8 GENERATED ALWAYS AS (c1+c2) STORED  
);  
insert into new1 values (1,1,2), (2,2,10), (3,2,10), (4,2,10);  
db1=> select * from new1;  
 id | c1 | c2 | sum   
----+----+----+-----  
  1 |  1 |  2 |   3  
  2 |  2 | 10 |  12  
  3 |  2 | 10 |  12  
  4 |  2 | 10 |  12  
(4 rows)  
db1=> update new1 set c1=3 where id=2 returning *;  
 id | c1 | c2 | sum   
----+----+----+-----  
  2 |  3 | 10 |  13  
(1 row)  
UPDATE 1  
```  
#### 40 主键及关联约束  
```  
db1=> create table new2 (id int references new1(id), info text, ts timestamp);  
CREATE TABLE  
db1=> \d+ new1  
                                                            Table "s1.new1"  
 Column |  Type   | Collation | Nullable |                Default                 | Storage | Compression | Stats target | Description   
--------+---------+-----------+----------+----------------------------------------+---------+-------------+--------------+-------------  
 id     | integer |           | not null |                                        | plain   |             |              |   
 c1     | integer |           |          |                                        | plain   |             |              |   
 c2     | integer |           |          |                                        | plain   |             |              |   
 sum    | bigint  |           |          | generated always as ((c1 + c2)) stored | plain   |             |              |   
Indexes:  
    "new1_pkey" PRIMARY KEY, btree (id)  
Referenced by:  
    TABLE "new2" CONSTRAINT "new2_id_fkey" FOREIGN KEY (id) REFERENCES new1(id)  
Access method: heap  
db1=> \d+ new2  
                                                       Table "s1.new2"  
 Column |            Type             | Collation | Nullable | Default | Storage  | Compression | Stats target | Description   
--------+-----------------------------+-----------+----------+---------+----------+-------------+--------------+-------------  
 id     | integer                     |           |          |         | plain    |             |              |   
 info   | text                        |           |          |         | extended |             |              |   
 ts     | timestamp without time zone |           |          |         | plain    |             |              |   
Foreign-key constraints:  
    "new2_id_fkey" FOREIGN KEY (id) REFERENCES new1(id)  
Access method: heap  
```  
更多高级用法参考手册SQL command章节  
#### 41 unlogged 表  
批量写速度快, 不安全, 不写wal, 不复制到从库.  
```  
create unlogged table new3 (id int, info text, ts timestamp);  
create table new4 (id int, info text, ts timestamp);  
db1=> \timing  
Timing is on.  
insert into new3 select generate_series(1,10000000), 'test123', now();  
INSERT 0 10000000  
Time: 7388.720 ms (00:07.389)  
insert into new4 select generate_series(1,10000000), 'test123', now();  
INSERT 0 10000000  
Time: 11566.083 ms (00:11.566)  
```  
#### 42 会话级临时表  
```  
create temp table new5 (id int, info text, ts timestamp);  
insert into new5 select generate_series(1,10000000), 'test123', now();  
INSERT 0 10000000  
Time: 6201.786 ms (00:06.202)  
```  
#### 43 truncate表  
```  
db1=> select count(*) from tbl;  
 count    
--------  
 100000  
(1 row)  
db1=> truncate tbl;  
TRUNCATE TABLE  
db1=> select count(*) from tbl;  
 count   
-------  
     0  
(1 row)  
```  
#### 44 插入随机ID数据  
```  
db1=> \d+ tbl  
                                             Table "s1.tbl"  
 Column |  Type   | Collation | Nullable | Default | Storage  | Compression | Stats target | Description   
--------+---------+-----------+----------+---------+----------+-------------+--------------+-------------  
 id     | integer |           |          |         | plain    |             |              |   
 info   | text    |           |          |         | extended |             |              |   
 ts     | date    |           |          |         | plain    |             |              |   
 c1     | integer |           |          |         | plain    |             |              |   
Indexes:  
    "tbl_id_idx" btree (id)  
Access method: heap  
db1=> insert into tbl select random()*100000, md5(random()::text), clock_timestamp(), id from generate_series(1,100000) id;  
INSERT 0 100000  
```  
#### 45 查看id, c1值与堆表行号的相关性  
```  
db1=> select tablename,attname,correlation from pg_stats where schemaname='s1' and tablename='tbl' and attname in ('id','c1');  
 tablename | attname | correlation   
-----------+---------+-------------  
 tbl       | id      | -0.00798456  
 tbl       | c1      |           1  
(2 rows)  
```  
#### 46 查看相关性和执行计划的关系  
```  
db1=> explain (analyze,verbose,timing,costs,buffers,settings,wal) select * from tbl where id<1000;  