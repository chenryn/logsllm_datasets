server_app_id
server_op
server_lip
server_wip
server_name
字段名
server_list服务器列表。
安全审计服务器端功能是在OMServer平台上进行扩展，追加一张 server_history表，用
数据库模型功能沿用了OMServer系统中主机表（server_list）的层次结构，且追加了
字段名
server_history操作事件表。
 server_list：服务器列表。
server_history：操作事件表。
数据库结构设计
数据字典
数据库分析
Linux公社
char(255)
timestamp
datetime
char(15)
char(15)
int(11)
int(11)
数据类型
数据类型
int（11)
char(10)
char(12)
char(15)
char(13)
CURRENT_TIMESTAMP
www.linuxidc.com
默认值
默认值
第14章
允许非空
NO
NO
NO
NO
允许非空
打造Linux系统安全审计功能247
NO
NO
NO
NO
NO
自动递增
自动递增
是
服务应用分类ID
主机操作系统
主机内网IP
主机外网IP
主机名称
事件命令
人库时间
事件时间
事件用户名
事件IP地址
事件ID
主键ID
备注
备注
---
## Page 276
账号history存放路径、
Python脚本，下面一一进行说明。
14.4.2
Agent与服务器端Python实现方法进行详细说明，环境设备角色如表14-1所示。
Server的环境搭建本节将不再说明。为了便于读者理解，下面对上报主机系统环境配置、
14.4.1
14.4
248第三部分案例篇
通过配置 Linux profile的history 相关变量来实现与安全审计功能的对接，包括指定系统
系统安全审计功能主机上报需要完成两个任务，一为配置用户profile，二为编写上报
系统安全审计功能的服务器端作为OMServer项目的App存在，关于服务器端Web
（1）系统用户环境配置
AppServer
AppServer
WEBServer
角色
系统环境部署
上报主机配置
系统环境说明
baunais
(TT)INI
Linux公社www.linuxidc.com
、存储长度、扩展信息、PROMPT_COMMAND事件等，更多见以下配
SN2012-07-022
SN2012-07-021
SN2012-07-010
server_categ_idINT(11)
主机名
serverapp_categ
IDINT(11)
表14-1
图14-3平台数据库模型
系统环境说明表
serverip CHAR(12)
server_wip.CHAR(15)
server Jist
192.168.1.22
192.168.1.21
192.168.1.10
（LT）INPddeTaas
server_opCHAR(10)
server_name CHAR（13）
historypCHAR(15)
serverhistory
history_command CHAR(255)
db_datefmeTIMESTAMP
history_datetime DATETIME
history
history_id INT(11)
IDINT(11)
Python2.4或以上
Python2.4或以上
Django+uwsgi+MySQL环境
_user CHAR(15)
环境说明
---
## Page 277
HTTP客户端，详细源码及说明如下：
明如下：
提交到OMServer 主机，其中 config.py为上报 agent 的配置文件，涉及三个选项，详细说
置及含义说明。
【/home/test/OMAudit/OMAudit_agent.py】
OMAudit_agent.py 作为主上报 agent 程序，
【/home/test/OMAudit/config.py】
#!/usr/bin/env python
Connect_TimeOut =3
Net_driver="etho"
#!/usr/bin/env python
（2）客户端上报脚本
保存配置后使其生效，运行“source /etc/profle”命令，profile环境配置完成。
typeSet -r PROMPT_COMMAND
shopt-s histappend
OMAudit_agent.py$(history1)
export
export HISTFILESIZE=1200
export HISTSIZE=1200
export HISTFILE=$HOME/.bash_history
typeset
#add by OMAudit
开
“history-r”将histfiles 的内容读到内存中，即可以通过history查看；
（仅内存）；
PROMPT_COMMAND变量最为核心，
“root 2014-06-05 23:32:16 free-m"
追加以下配置
vi/etc/profile
-rHISTTIMEFORMAT
Linux公社www.linuxidc.com
#指定上报超时时间，单位为秒
#为便于记录上报来源主机，获取指定网卡驱动的IP地址
#历史清单将以添加形式加入HISTFILE变量指定的文件，而不是覆盖
whoami
实现了指定内容在出现bash提示符前执行的功能；
#设置关键变量只读，提高安全性
#不记录连续重复的命令
第14章打造Linux系统安全审计功能
负责信息的上报，采用了httplib模块作为
#指定用户history 日志存放路径
#history命令显示当前记录的用户与时间，例如：
#OMServer服务器端地址，作为上报的目的
通过s（history 1）获取最后一条
249
---
## Page 278
250
Connect_TimeOut)
def pull_history(http_get_param="") :
def get_local_ip(ethname):
if len(sys.argv)LastID"，从而达到实时获取最新记录
数调用，首次请求默认返回ID倒序最新5条记录，并记录下LastID（最新记录ID），后面的
(omaudit_pull），下面针对两个方法进行说明。
14.5.2
（1）前端实时展示（omaudit_run）方法
服务器端提供了两个关键视图方法，分别实现前端实时展示（omaudit_run）及数据接收
def omaudit_run(request):
omaudit_runO方法实现源码如下：
关于前端数据实时展示的实现原理，通过前端JavaScript的 setIntervalO方法实现定时函
事件任务前端展示方法
else:
else:
if not 'LastID'
功能实现方法
'omaudit',
9
Hosts=request.GET['hosts']
LastID=request.GET['LastID']
LastID=""
ID
server_history表
Linux公社
history_command
Is/home
free-m
uptime
cd~
tree~
#添加此行，注册该App
in request,GET:
图14-5
www.linuxidc.com
前端数据展示流程图
②返回最新5条记录（D倒序）
④查询whereID>7
5返回ID8.9-
#获取选择的主机地址信息
第14章打造Linux系统安全审计功能253
#获取上次查询到的最新记录ID
每锅抄调用
管理员
---
## Page 282
254
数据接收方法相对比较简单，即将接收到的信息直接人库，实现的源码如下：
（2）数据接收（omaudit_pull）方法
def
第三部分案例篇
omaudit_pull(request) :