``` screen
~]# /sbin/sysctl -w net.ipv4.conf.all.mc_forwarding=0
```
``` screen
~]# /sbin/sysctl -w net.ipv6.conf.all.mc_forwarding=0
```
::: para
接收 ICMP （Internet Control Message
Protoco，Internet控制报文协议）重定向多为非法使用。除非有特定需要，禁止对此类
ICMP 重定向数据包的接收和传送。
:::
::: para
这些命令禁止在所有界面上对所有的 ICMP 重定向数据包进行接收。
:::
``` screen
~]# /sbin/sysctl -w net.ipv4.conf.all.accept_redirects=0
```
``` screen
~]# /sbin/sysctl -w net.ipv6.conf.all.accept_redirects=0
```
::: para
此命令禁止在所有界面上对 ICMP 安全重定向数据包进行接收。
:::
``` screen
~]# /sbin/sysctl -w net.ipv4.conf.all.secure_redirects=0
```
::: para
此命令禁止在所有界面上对所有的 IPv4 ICMP 重定向数据包进行接收。
:::
``` screen
~]# /sbin/sysctl -w net.ipv4.conf.all.send_redirects=0
```
::: para
这是禁止传送 IPv4 重定向数据包的指示。关于 ["[IPv6
节点要求]{.quote}"]{.quote} （IPv6 Node Requirements）导致 IPv4 与 IPv6
不同的详细解释，请参阅
〈[RFC4294](http://www.ietf.org/rfc/rfc4294.txt)〉 。
:::
::: para
要实现永久设定，则必须将其添加到 `/etc/sysctl.conf`{.filename} 。
:::
::: para
更多信息，请参阅 sysctl 手册页 `sysctl(8)`{.filename}
。关于对源路由及其变量的相关互联网选项的详细解释，请参阅
〈[RFC791](http://www.ietf.org/rfc/rfc791.txt) 〉。
:::
::: {.warning xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**警告**
:::
::: admonition
::: para
以太网可提供其他方式来实现重定向流量，如 ARP （地址解析协议，Address
Resolution Protocol）或 MAC （介质访问控制，Medium/Media Access
Control）地址欺骗、未经授权的 DHCP （动态主机配置协议，Dynamic Host
Configuration Protocol）服务器、以及 IPv6
路由器或邻居通告。此外，偶尔广播的单播流量会导致信息泄露。这些缺点只能通过网络操作员执行的特定对策才能解决。基于主机的对策并非全部有效。
:::
:::
:::
:::
::: section
::: titlepage
## [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sect-Security_Guide-Server_Security-Reverse_Path_Filtering}4.4.4. 反向路径过滤 {.title}
:::
::: para
反向路径过滤可用于防止数据包从一接口传入，又从另一不同的接口传出。输出路径与输入路径不同，这有时被称为
["[非对称路由]{.quote}"]{.quote} （asymmetric
routing）。路由器通常会按某种路径传送数据包，但大多数主机并不需要这么做。在以下此类应用程序中常出现异常现象：从一链接输出流量，又从另一不同的服务提供者链接那接收流量。例如，使用结合
xDSL 的租用线路，或是与 3G
网络调制解调器连接的卫星。如果此类场景适用于您，那么就有必要关闭输入接口的反向路径过滤。简而言之，除非必要，否则最好将其关闭，因为它可防止来自子网络的用户采用
IP 地址欺骗手段，并减少 DDoS （分布式拒绝服务，Distributed Denial of
Service）攻击的机会。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
红帽企业版 Linux 7 根据 RFC 3704 网络入口滤波器的入站过滤文件所推荐的
["[严格反向路径]{.quote}"]{.quote} （Strict Reverse
Path），默认使用严格反向路径过滤。目前只适用于 IPv4 。
:::
:::
:::
::: {.warning xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**警告**
:::
::: admonition
::: para
如果要启用转发程序，那么只能禁用反向路径过滤，若有其他方式可用于验证源地址（如
iptables 规则示例）。
:::
:::
:::
::: variablelist
[[]{#chap-Hardening_Your_System_with_Tools_and_Services.html#idm140694691327472 .indexterm} `rp_filter`{.option}]{.term}
:   ::: para
    通过 `rp_filter`{.option} 指令启用反向路径过滤。
    `rp_filter`{.option} 选项可用于指导 kernel
    （操作系统内核）从三种模式中选择一种。
    :::
    ::: para
    设置默认行为时，则须采取以下形式：
    :::
    ``` screen
    ~]# /sbin/sysctl -w net.ipv4.conf.default.rp_filter=INTEGER
    ```
    ::: para
    如果 *INTEGER* 处于以下状态：
    :::
    ::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
    -   ::: para
        `0`{.literal} ------未进行源验证。
        :::
    -   ::: para
        `1`{.literal} ------处于如 RFC3704 所定义的严格模式。
        :::
    -   ::: para
        `2`{.literal} ------处于如 RFC3704 所定义的松散模式。
        :::
    :::
    ::: para
    通过使用 `net.ipv4.interface.rp_filter`{.command}
    可实现对每一网络接口设置的覆写。要在重启时，实现这些设置能够持续存在，则须修改
    `/etc/sysctl.conf`{.filename} 文件。
    :::
:::
::: section
::: titlepage
### [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sect-Security_Guide-Server_Security-rp_filter-resources}4.4.4.1. 附加资源 {.title}
:::
[]{#chap-Hardening_Your_System_with_Tools_and_Services.html#idm140694681647456
.indexterm}
::: para
以下资源对反向路径过滤进行更多的解释。
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    [**相关网站**]{.bold .bold}
    :::
    ::: para
    关于对网络入口滤波器的入站过滤的详细解释，请参阅〈
    [RFC3704](http://www.ietf.org/rfc/rfc3704.txt) 〉。
    :::
-   ::: para
    关于 `/proc/sys/net/ipv4/`{.filename}
    目录下的一系列文件以及可用选项，请参阅
    。
    :::
:::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sec-Using_Firewalls}4.5. 使用防火墙 {.title}
:::
::: para
:::
::: section
::: titlepage
## [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sec-Introduction_to_firewalld}4.5.1. 防火墙简介 {.title}
:::
::: para
动态防火墙后台程序 `firewalld`{.systemitem} 提供了一个
动态管理的防火墙，用以支持网络 ["[zones]{.quote}"]{.quote}
，以分配对一个网络及其相关链接和界面一定程度的信任。它具备对
`IPv4`{.systemitem} 和 `IPv6`{.systemitem}
防火墙设置的支持。它支持以太网桥，并有分离运行时间和永久性配置选择。它还具备一个通向服务或者应用程序以直接增加防火墙规则的接口。
:::
:::
::: section
::: titlepage
## [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sec-Understanding_firewalld}4.5.2. 了解防火墙 {.title}
:::
::: para
一个图像化的配置工具，[**firewall-config**]{.application}，用于配置
`firewalld`{.systemitem}：它依次用 [**iptables工具**]{.application}
与执行数据包筛选的内核中的 [**Netfilter**]{.application} 通信，
:::
::: para
使用图像化的 [**firewall-config**]{.application} 工具，按下
[**Super**]{.keycap} 键进入活动总览，点击
`firewall`{.command}，然后按下 [**Enter**]{.keycap}。[**firewall-config**]{.application}
工具就出现了。您将被提示输入管理员密码。
:::
::: para
[**firewall-config**]{.application} 工具里有一个标记为
[**Configuration**]{.guilabel} 的下拉菜单，可以在
[**运行时间**]{.guibutton} 和 [**永久**]{.guibutton}
两种模式之间进行选择。要注意，如果您选择了 [**Permanent**]{.guibutton}
，在左上角会出现一排附加的图标。因为不能在运行模式下改变一个服务参数，所以这些图标仅在永久配置模式中出现。
:::
::: para
由 `firewalld`{.systemitem}
提供的是动态的防火墙服务，而非静态的。因为配置的改变可以随时随地立刻执行，不再需要保存或者执行这些改变。现行网络连接的意外中断不会发生，正如防火墙的所有部分都不需要重新下载。
:::
::: para
提供命令行客户端，[**firewall-cmd**]{.application}，用于进行永久性或非永久性运行时间的改变，正如在
`man firewall-cmd(1)`{.filename}所解释的一样。永久性改变需要按照
`firewalld(1)`{.filename} 手册页的解释来进行。注意，
`firewall-cmd`{.command} 命令可以由 `root`{.systemitem}
用户运行，也可以由管理员用户------换言之， `wheel`{.systemitem}
群体的成员运行。在后一种情况里，命令将通过 [**polkit**]{.application}
进程来授权。
:::
::: para
`firewalld`{.systemitem} 的配置储存在 `/usr/lib/firewalld/`{.filename}
和 `/etc/firewalld/`{.filename} 里的各种 XML
文件里，这样保持了这些文件被编辑、写入、备份的极大的灵活性，使之可作为其他安装的备份等等。
:::
::: para
其他应用程序可以使用 D-bus 和 `firewalld`{.systemitem} 通信。
:::
:::
::: section
::: titlepage
## [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sec-Comparison_of_Firewalld_to_system-config-firewall_and_iptables}4.5.3. 比较 system-config-firewall 以及 iptables 的 firewalld {.title}
:::
::: para
`firewalld`{.systemitem} 和 [**iptables service**]{.application}
之间最本质的不同是：
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    [**iptables service**]{.application} 在
    `/etc/sysconfig/iptables`{.filename} 中储存配置，而
    `firewalld`{.systemitem} 将配置储存在
    `/usr/lib/firewalld/`{.filename} 和 `/etc/firewalld/`{.filename}
    中的各种 XML 文件里，。要注意，当 `firewalld`{.systemitem} 在Red Hat
    Enterprise Linux上安装失败时， `/etc/sysconfig/iptables`{.filename}
    文件就不存在。
    :::
-   ::: para
    使用 [**iptables
    service**]{.application}，每一个单独更改意味着清除所有旧有的规则和从
    `/etc/sysconfig/iptables`{.filename}里读取所有新的规则，然而使用
    `firewalld`{.systemitem}
    却不会再创建任何新的规则；仅仅运行规则中的不同之处。因此，`firewalld`{.systemitem}
    可以在运行时间内，改变设置而不丢失现行连接。
    :::
:::
使用 [**iptables tool**]{.application} 与内核包过滤对话也是如此。
:::
::: para
::: figure
[⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#exam-firewall_stack}
::: figure-contents
::: mediaobject
[⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#mediaobj-firewall_stack}![防火墙堆栈](images/firewall_stack.png)
:::
:::
**图 4.1. 防火墙堆栈**
:::
:::
:::
::: section
::: titlepage
## [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sec-Understanding_Network_Zones}4.5.4. 对网络区的理解 {.title}