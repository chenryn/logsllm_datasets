    - name: Retrieve data from vault
      hosts: ipaserver
      become: no
      gather_facts: false
      tasks:
      - name: Retrieve data from the service vault
        ipavault:
          ipaadmin_password: Secret123
          name: secret_vault
          service: HTTP/webserver1.idm.example.com
          vault_type: asymmetric
          private_key: "{{ lookup('file', 'service-private.pem') | b64encode }}"
          out: private-key-to-an-externally-signed-certificate.pem
          state: retrieved
    ```
7.  在 playbook 中添加一个部分，它将从 IdM 服务器检索数据文件到 Ansible
    控制器：
    ``` literallayout
    ---
    - name: Retrieve data from vault
      hosts: ipaserver
      become: no
      gather_facts: false
      tasks:
    [...]
      - name: Retrieve data file
        fetch:
          src: private-key-to-an-externally-signed-certificate.pem
          dest: ./
          flat: yes
          mode: 0600
    ```
8.  在 playbook 中添加一个部分，它将检索到的
    [**private-key-to-an-externally-certificate.pem**]{.strong} 文件从
    上的 Ansible 控制器传输到清单文件的 `webservers`{.literal} 部分：
    ``` literallayout
    ---
    - name: Send data file to webservers
      become: no
      gather_facts: no
      hosts: webservers
      tasks:
      - name: Send data to webservers
        copy:
          src: private-key-to-an-externally-signed-certificate.pem
          dest: /etc/pki/tls/private/httpd.key
          mode: 0444
    ```
9.  保存该文件。
10. 运行 playbook：
    ``` literallayout
    $ ansible-playbook -v -i inventory.file retrieve-data-asymmetric-vault-copy.yml
    ```
:::
:::
::: section
::: titlepage
# []{#using-ansible-to-manage-idm-service-vaults-storing-and-retrieving-secrets_using-ansible-to-install-and-manage-idm.html#changing-an-idm-service-vault-secret-when-compromised-using-ansible_using-ansible-to-manage-idm-service-vaults-storing-and-retrieving-secrets}在使用 Ansible 泄露时更改 IdM 服务 vault secret {.title}
:::
本节介绍当服务实例遭入侵时，身份管理(IdM)管理员可以如何重复利用 Ansible
playbook 来更改服务库中存储的机密。以下示例中的情景假定
[**onwebserver3.idm.example.com**]{.strong}
检索到的机密已被破坏，而不是存储该机密的非对称库的密钥。[在示例中，管理员重复利用在非对称密码库中存储机密时使用的
Ansible playbook，并将 机密从非对称密码库检索到 IdM
主机](#using-ansible-to-manage-idm-service-vaults-storing-and-retrieving-secrets_using-ansible-to-install-and-manage-idm.html#storing-an-idm-service-secret-in-an-asymmetric-vault-using-ansible_using-ansible-to-manage-idm-service-vaults-storing-and-retrieving-secrets "使用 Ansible 将 IdM 服务 secret 存储在非对称库中"){.link}。在流程开始时，IdM
管理员使用非对称密码库中的新 secret 存储一个新的 `PEM`{.literal}
文件，调整清单文件，而不检索到被入侵的 Web 服务器
[**webserver3.idm.example.com**]{.strong}，然后重新运行这两个程序。
::: itemizedlist
**先决条件**
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。这是执行流程中步骤的主机。
-   您知道 [**IdM 管理员密码**]{.strong}。
-   [您已创建了用于存储服务机密的非对称密码库](#using-ansible-to-manage-idm-service-vaults-storing-and-retrieving-secrets_using-ansible-to-install-and-manage-idm.html#ensuring-the-presence-of-an-asymmetric-service-vault-in-idm-using-ansible_using-ansible-to-manage-idm-service-vaults-storing-and-retrieving-secrets "使用 Ansible 在 IdM 中存在非对称服务库"){.link}。
-   您已为在 IdM 主机上运行的 web 服务生成了新的 `httpd`{.literal}
    密钥，以替换泄露的旧密钥。
-   新的 `httpd`{.literal} 密钥存储在 Ansible 控制器上，例如
    [**/usr/share/doc/ansible-freeipa/playbooks/vault/private-key-to-an-externally-certificate.pem**]{.strong}
    文件中。
:::
::: orderedlist
**流程**
1.  导航到 `/usr/share/doc/ansible-freeipa/playbooks/vault`{.literal}
    目录：
    ``` literallayout
    $ cd /usr/share/doc/ansible-freeipa/playbooks/vault
    ```
2.  打开清单文件，并确保正确定义了以下主机：
    ::: itemizedlist
    -   `[ipaserver]`{.literal} 部分中的 IdM 服务器。
    -   要检索 `[webservers]`{.literal} 部分中的机密的主机。例如，要指示
        Ansible 检索到 [**webserver1.idm.example.com**]{.strong}
        [**和webserver2.idm.example.com**]{.strong} 的 secret，请输入：
        ``` literallayout
        [ipaserver]
        server.idm.example.com
        [webservers]
        webserver1.idm.example.com
        webserver2.idm.example.com
        ```
    :::
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    确保列表不包含当前 [**examplewebserver3.idm.example.com**]{.strong}
    中被入侵的 web 服务器。
    :::
3.  打开 [**data-archive-in-asymmetric-vault-copy.yml**]{.strong}
    文件进行编辑。
4.  通过在 `ipavault`{.literal} 任务部分设置以下变量来修改该文件：
    ::: itemizedlist
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员密码。
    -   将 `name`{.literal} 变量设置为 vault 的名称，如
        [**secret_vault**]{.strong}。
    -   将 `service`{.literal} 变量设置为密码库的服务所有者，如
        [**HTTP/webserver.idm.example.com**]{.strong}。
    -   将 `中的变量`{.literal} 设置为 [**\"{{ lookup(\'file\',
        \'new-private-key-to-an-externally-certificate.pem\')\|
        b64encode }}\"。**]{.strong}这可确保 Ansible 使用私钥从 Ansible
        控制器上的工作目录检索 文件，而不是从 IdM 服务器检索。
    -   将 `action`{.literal} 变量设置为 `member`{.literal}。
        对于当前示例，此修改过的 Ansible playbook 文件：
    :::
    ``` literallayout
    ---
    - name: Tests
      hosts: ipaserver
      become: true
      gather_facts: false
      tasks:
      - ipavault:
          ipaadmin_password: Secret123
          name: secret_vault
          service: HTTP/webserver.idm.example.com
          in: "{{ lookup('file', 'new-private-key-to-an-externally-signed-certificate.pem') | b64encode }}"
          action: member
    ```
5.  保存该文件。
6.  运行 playbook：
    ``` literallayout
    $ ansible-playbook -v -i inventory.file data-archive-in-asymmetric-vault-copy.yml
    ```
7.  打开 [**retrieve-data-asymmetric-vault-copy.yml**]{.strong}
    文件进行编辑。
8.  通过在 `ipavault`{.literal} 任务部分设置以下变量来修改该文件：
    ::: itemizedlist
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员密码。
    -   将 `name`{.literal} 变量设置为 vault 的名称，如
        [**secret_vault**]{.strong}。
    -   将 `service`{.literal} 变量设置为密码库的服务所有者，如
        [**HTTP/webserver1.idm.example.com**]{.strong}。
    -   将 `private_key_file`{.literal} 变量设置为用于检索服务 vault
        secret 的私钥的位置。
    -   将 `变量`{.literal} 设置为 IdM 服务器上您要检索
        [**new-private-key-to-an-externally-certificate.pem**]{.strong}
        机密的位置，如当前工作目录。
    -   将 `action`{.literal} 变量设置为 `member`{.literal}。
        对于当前示例，此修改过的 Ansible playbook 文件：
    :::
    ``` literallayout
    ---
    - name: Retrieve data from vault
      hosts: ipaserver
      become: no
      gather_facts: false
      tasks:
      - name: Retrieve data from the service vault
        ipavault:
          ipaadmin_password: Secret123
          name: secret_vault
          service: HTTP/webserver1.idm.example.com
          vault_type: asymmetric
          private_key: "{{ lookup('file', 'service-private.pem') | b64encode }}"
          out: new-private-key-to-an-externally-signed-certificate.pem
          state: retrieved
    ```
9.  在 playbook 中添加一个部分，它将从 IdM 服务器检索数据文件到 Ansible
    控制器：
    ``` literallayout
    ---
    - name: Retrieve data from vault
      hosts: ipaserver
      become: yes
      gather_facts: false
      tasks:
    [...]
      - name: Retrieve data file
        fetch:
          src: new-private-key-to-an-externally-signed-certificate.pem
          dest: ./
          flat: yes
          mode: 0600
    ```
10. 在 playbook 中添加一个部分，它将检索到的
    [**new-private-key-to-an-externally-certificate.pem**]{.strong}
    文件从 上的 Ansible 控制器传输到清单文件的 `webservers`{.literal}
    部分：
    ``` literallayout
    ---
    - name: Send data file to webservers
      become: yes
      gather_facts: no
      hosts: webservers
      tasks:
      - name: Send data to webservers
        copy:
          src: new-private-key-to-an-externally-signed-certificate.pem
          dest: /etc/pki/tls/private/httpd.key
          mode: 0444
    ```
11. 保存该文件。
12. 运行 playbook:
    ``` literallayout
    $ ansible-playbook -v -i inventory.file retrieve-data-asymmetric-vault-copy.yml
    ```
:::
::: itemizedlist
**其它资源**
-   有关使用 Ansible 管理 IdM vaults 和服务 secret 以及 playbook
    变量的更多信息，请参阅
    `/usr/share/doc/ansible-freeipa/ 目录中提供的 README-`{.literal}
    vault.md Markdown 文件和
    `/usr/share/doc/ansible-freeipa/playbooks/vault/`{.literal}
    目录中的示例 playbook。
:::
:::
:::
[]{#ensuring-the-presence-and-absence-of-services-in-idm-using-ansible_using-ansible-to-install-and-manage-idm.html}
::: chapter
::: titlepage
# []{#ensuring-the-presence-and-absence-of-services-in-idm-using-ansible_using-ansible-to-install-and-manage-idm.html#ensuring-the-presence-and-absence-of-services-in-idm-using-ansible_using-ansible-to-install-and-manage-idm}第 23 章 使用 Ansible 在 IdM 中确保存在或不存在服务 {.title}
:::
使用 Ansible `service`{.literal} 模块时，管理员可以确保 IdM
中存在或不存在不原生 IdM 的特定服务。例如，您可以使用
`service`{.literal} 模块：
::: itemizedlist
-   检查 IdM
    客户端中是否存在手动安装的服务，并在缺少该服务时自动安装该服务。详情请查看：
    ::: itemizedlist
    -   [确保 IdM 客户端的 IdM 中存在 HTTP
        服务。](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#ensuring-the-presence-of-an-http-service-in-idm-using-an-ansible-playbook_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible){.link}
    -   [确保非 IdM 客户端的 IdM 中存在 HTTP
        服务。](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#ensuring-the-presence-of-an-http-service-in-idm-on-a-non-idm-client-using-an-ansible-playbook_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible){.link}
    -   [确保在没有 DNS 的 IdM 客户端中存在 HTTP
        服务。](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#ensuring-the-presence-of-an-http-service-on-an-idm-client-without-dns-using-an-ansible-playbook_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible){.link}
    :::
-   检查在 IdM
    中注册的服务是否已附加证书，并在缺少该证书时自动安装该证书。详情请查看：
-   [确保 IdM
    服务条目中存在外部签名的证书。](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#ensuring-the-presence-of-an-externally-signed-certificate-in-an-idm-service-entry-using-an-ansible-playbook_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible){.link}
-   允许 IdM 用户和主机检索并创建服务 keytab。详情请查看：
    ::: itemizedlist
    -   [允许 IdM 用户、组、主机或主机组创建服务的
        keytab。](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#using-an-ansible-playbook-to-allow-idm-users-groups-hosts-or-host-groups-to-create-a-keytab-of-a-service_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible){.link}
    -   [允许 IdM 用户、组、主机或主机组检索服务的
        keytab。](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#using-an-ansible-playbook-to-allow-idm-users-groups-hosts-or-host-groups-to-retrieve-a-keytab-of-a-service_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible){.link}
    :::
-   允许 IdM 用户和组向服务添加 Kerberos 别名。详情请查看：
    ::: itemizedlist
    -   [确保服务的 Kerberos
        主体别名存在。](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#ensuring-the-presence-of-a-kerberos-principal-alias-of-a-service-using-an-ansible-playbook_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible){.link}
    :::
-   检查 IdM
    客户端中是否不存在服务，并在该服务存在时自动删除该服务。详情请查看：
    ::: itemizedlist
    -   [确保 IdM 客户端的 IdM 中缺少 HTTP
        服务。](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#ensuring-the-absence-of-an-http-service-in-idm-using-an-ansible-playbook_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible){.link}
    :::
:::
::: section
::: titlepage
# []{#ensuring-the-presence-and-absence-of-services-in-idm-using-ansible_using-ansible-to-install-and-manage-idm.html#ensuring-the-presence-of-an-http-service-in-idm-using-an-ansible-playbook_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible}使用 Ansible playbook 在 IdM 中存在 HTTP 服务 {.title}
:::