以下是经过优化后的文本，使其更加清晰、连贯和专业：

---

### 参考文献

1. **简化零扩展的MOV_32_64**  
   [在线]. 2021年1月20日检索. https://github.com/llvm/llvm-project-staging/commit/13f6c81c5d9a7a34a684363bcaad8eb7c65356fd.

2. **BPF类型格式 (BTF)**  
   [在线]. 2020年. 2021年1月20日检索. https://www.kernel.org/doc/html/latest/bpf/btf.html.

3. **Calico的eBPF数据平面**  
   [在线]. 2020年. 2021年1月20日检索. https://docs.projectcalico.org/about/about-ebpf.

4. **Fungible F-1数据处理单元**  
   [在线]. 2020年. 2021年1月20日检索. https://www.fungible.com/wp-content/uploads/2020/08/PB0028.01.02020820-Fungible-F1-Data-Processing-Unit.pdf.

5. **XDP层中的kube-proxy替换**  
   [在线]. 2020年. 2021年1月20日检索. https://cilium.io/blog/2020/06/22/cilium-18#kubeproxy-removal.

6. **Marvell Octeon TX-2产品简介**  
   [在线]. 2020年. 2021年1月20日检索. https://www.marvell.com/content/dam/marvell/en/public-collateral/embedded-processors/marvell-infrastructure-processors-octeon-tx2-cn913x-product-brief-2020-02.pdf.

7. **Nvidia Mellanox BlueField 2**  
   [在线]. 2020年. 2021年1月20日检索. https://www.mellanox.com/files/doc-2020/pb-bluefield-2-dpu.pdf.

8. **lore.kernel.org上的BPF存档**  
   [在线]. 2021年. 2021年6月9日检索. https://lore.kernel.org/bpf/.

9. **BPF设计问答**  
   [在线]. 2021年. 2021年1月20日检索. https://www.kernel.org/doc/html/v5.6/bpf/bpf_design_QA.html.

10. **bpf_lxc的IPv6出口路径中的BPF大小问题**  
    [在线]. 2021年. 2021年1月20日检索. https://cilium.slack.com/archives/CDKG8NNHK/p1605601543139700.

11. **Cilium复杂性问题**  
    [在线]. 2021年. 2021年7月1日检索. https://github.com/cilium/cilium/issues?q=is%3Aissue+is%3Aopen+label%3Akind%2Fcomplexity-issue.

12. **在5.10+版本中使用kubeProxyReplacement=disabled的复杂性问题**  
    [在线]. 2021年. 2021年7月12日检索. https://github.com/cilium/cilium/issues/14726.

13. **在5.4+版本中使用kubeProxyReplacement=disabled + IPSec的复杂性问题**  
    [在线]. 2021年. 2021年7月12日检索. https://github.com/cilium/cilium/issues/14784.

14. **当enable-endpoint-routes=true时Cilium v1.9.5的复杂性问题**  
    [在线]. 2021年. 2021年7月12日检索. https://github.com/cilium/cilium/issues/16144.

15. **在Linux 5.10上禁用套接字级LB且使用Cilium 1.8.7的复杂性问题**  
    [在线]. 2021年. 2021年7月12日检索. https://github.com/cilium/cilium/issues/15249.

16. **你知道吗？BPF程序大小限制**  
    [在线]. 2021年. 2021年7月12日检索. https://ebpf.io/blog/ebpf-updates-2021-02#did-you-know-program-size-limit.

17. **系统调用检查BPF非特权程序类型**  
    [在线]. 2021年. 2021年7月12日检索. https://elixir.bootlin.com/linux/v5.13/source/kernel/bpf/syscall.c#L2115.

18. **v1.9: CI: K8sVerifier对Cilium的BPF数据路径进行内核验证**  
    [在线]. 2021年. 2021年7月12日检索. https://github.com/cilium/cilium/issues/16050.

19. **David Ahern. 2020. 主机上的网络CPU成本**  
    [在线]. 2021年1月25日检索. https://people.kernel.org/dsahern/the-cpu-cost-of-networking-on-a-host.

20. **Rajeev Alur, Rishabh Singh, Dana Fisman, and Armando Solar-Lezama. 2018. 基于搜索的程序合成**  
    *Communications of the ACM* 61, 12 (2018), 84–93.

21. **Andrew W Appel. 2004. 现代编译器实现（C语言版）. 剑桥大学出版社.**

22. **Sorav Bansal and Alex Aiken. 2006. 自动生成窥孔超级优化器. 在ASPLOS会议上.**

23. **Sorav Bansal and Alex Aiken. 2008. 使用窥孔超级优化器的二进制翻译. 在第8届USENIX操作系统设计与实现会议. USENIX协会, 177–192.**

24. **Sylvain Baubeau. 2020. 使用eBPF进行文件完整性监控. [在线]. 2021年1月23日检索. https://www.devseccon.com/file-integrity-monitoring-using-ebpf-secadvent-day-19/.**

25. **Ryan Beckett, Ratul Mahajan, Todd Millstein, Jitendra Padhye, and David Walker. 2016. 不要介意差距：连接网络范围的目标和设备级别的配置. 在2016年ACM SIGCOMM会议. ACM, 328–341. https://doi.org/10.1145/2934872.2934909**

26. **Ryan Beckett, Ratul Mahajan, Todd Millstein, Jitendra Padhye, and David Walker. 2017. 具有抽象拓扑的网络配置综合. *SIGPLAN Notices* 52, 6 (2017), 437–451. https://doi.org/10.1145/3140587.3062367**

27. **Adam Belay, George Prekas, Ana Klimovic, Samuel Grossman, Christos Kozyrakis, and Edouard Bugnion. 2014. IX：用于高吞吐量和低延迟的受保护数据平面操作系统. 在第11届USENIX操作系统设计与实现研讨会.**

28. **Armin Biere, Alessandro Cimatti, Edmund Clarke, and Yunshan Zhu. 1999. 无BDD的符号模型检查. 在国际工具和算法构造与分析会议上. Springer, 193–207.**

29. **Bjorn Topel et al. 2018. AF_XDP. [在线]. 2021年1月20日检索. https://www.kernel.org/doc/html/latest/networking/af_xdp.html.**

30. **Nikolaj Bjørner, Arie Gurfinkel, Ken McMillan, and Andrey Rybalchenko. 2015. 用于程序验证的Horn子句求解器. Springer International Publishing, Cham, 24–51. https://doi.org/10.1007/978-3-319-23534-9_2**

31. **Daniel Borkmann and Martynas Pumputis. 2020. 使用BPF & XDP进行K8s服务负载均衡. [在线]. 2021年1月23日检索. https://linuxplumbersconf.org/event/7/contributions/674/attachments/568/1002/plumbers_2020_cilium_load_balancer.pdf.**

32. **James Bornholt and Emina Torlak. 2018. 查找在符号评估下爆炸的代码. *Proceedings of the ACM on Programming Languages* 2, OOPSLA (2018), 1–26.**

33. **Aaron R Bradley and Zohar Manna. 2007. 计算的演算：带有应用验证的决策过程. Springer Science & Business Media.**

34. **Marco Spaziani Brunella, Giacomo Belocchi, Marco Bonola, Salvatore Pontarelli, Giuseppe Siracusano, Giuseppe Bianchi, Aniello Cammarano, Alessandro Palumbo, Luca Petrucci, and Roberto Bifulco. 2020. hXDP：FPGA NIC上的高效软件包处理. 在第14届USENIX操作系统设计与实现研讨会上. USENIX协会, 973–990. https://www.usenix.org/conference/osdi20/presentation/brunella**

35. **Chonggang Li, Craig Gallek, Eddie Hao, Kevin Athey, Maciej Żenczykowski, Vlad Dumitrescu, Willem de Bruijn, Xiaotian Pei. 2018. Linux网络堆栈中的扩展. [在线]. 2021年1月20日检索. https://www.kernel.org/doc/html/v5.8/networking/scaling.html.**

36. **Chonggang Li, Craig Gallek, Eddie Hao, Kevin Athey, Maciej Żenczykowski, Vlad Dumitrescu, Willem de Bruijn, Xiaotian Pei. 2018. 使用BPF扩展Linux流量整形. [在线]. 2021年1月25日检索. http://vger.kernel.org/lpc_bpf2018_talks/lpc-bpf-2018-shaping.pdf.**

37. **Berkeley Churchill, Rahul Sharma, JF Bastien, and Alex Aiken. 2017. Google Native Client的声音循环超级优化. *ACM SIGPLAN Notices* 52, 4 (2017), 313–326.**

38. **Cilium. 2017. 无需kube-proxy的Kubernetes. [在线]. 2021年1月20日检索. https://docs.cilium.io/en/v1.9/gettingstarted/kubeproxy-free/.**

39. **Lori A. Clarke. 1976. 生成测试数据并符号执行程序的系统. *IEEE Transactions on Software Engineering* 3 (1976), 215–222.**

40. **Jonathan Corbet. 2002. TCP分段卸载 (TSO). [在线]. 2021年1月20日检索. https://lwn.net/Articles/9129/.**

41. **Jonathan Corbet. 2014. BPF：内核中的通用虚拟机. [在线]. 2021年1月20日检索. https://lwn.net/Articles/599755/.**

42. **Jonathan Corbet. 2019. 使用gcc编译到BPF. [在线]. 2021年1月23日检索. https://lwn.net/Articles/750845/.**

43. **Jonathan Corbet. 2019. BPF中的并发管理. [在线]. 2021年6月19日检索. https://lwn.net/Articles/779120/.**

44. **Jonathan Corbet. 2021. 从BPF调用内核函数. [在线]. 2021年6月19日检索. https://lwn.net/Articles/856005/.**

45. **Ron Cytron, Jeanne Ferrante, Barry K Rosen, Mark N Wegman, and F Kenneth Zadeck. 1991. 高效计算静态单赋值形式和控制依赖图. *ACM Transactions on Programming Languages and Systems (TOPLAS)* 13, 4 (1991), 451–490.**

46. **Michael Dalton, David Schultz, Jacob Adriaens, Ahsan Arefin, Anshuman Gupta, Brian Fahs, Dima Rubinstein, Enrique Cauich Zermeno, Erik Rubow, James Alexander Docauer, et al. 2018. Andromeda：云网络虚拟化中的性能、隔离和速度. 在第15届USENIX网络系统设计与实现研讨会. 373–387.**

47. **Leonardo De Moura and Nikolaj Bjørner. 2008. Z3：高效的SMT求解器. 在国际工具和算法构造与分析会议上. Springer, 337–340.**

48. **Dmitry Duplyakin, Robert Ricci, Aleksander Maricq, Gary Wong, Jonathon Duerig, Eric Eide, Leigh Stoller, Mike Hibler, David Johnson, Kirk Webb, Aditya Akella, Kuangching Wang, Glenn Ricart, Larry Landweber, Chip Elliott, Michael Zink, Emmanuel Cecchet, Snigdhaswin Kar, and Prabodh Mishra. 2019. CloudLab的设计与运行. 在USENIX年度技术会议. 1–14. https://www.flux.utah.edu/paper/duplyakin-atc19**

49. **Jake Edge. 2020. GCC中的BPF. [在线]. 2021年1月23日检索. https://lwn.net/Articles/831402/.**

50. **Ahmed El-Hassany, Petar Tsankov, Laurent Vanbever, and Martin Vechev. 2017. 网络范围的配置综合. 在计算机辅助验证会议上. Springer International Publishing, Cham, 261–281.**

51. **Ahmed El-Hassany, Petar Tsankov, Laurent Vanbever, and Martin Vechev. 2018. NetComplete：具有自动补全功能的实用网络范围配置综合. 在第15届USENIX网络系统设计与实现研讨会. USENIX协会, 579–594. https://www.usenix.org/conference/nsdi18/presentation/el-hassany**

52. **Eric Leblond. 2016. Suricata旁路功能. [在线]. 2021年1月20日检索. https://www.stamus-networks.com/blog/2016/09/28/suricata-bypass-feature.**

53. **Arthur Fabre. 2018. L4Drop：基于XDP和eBPF的DDoS缓解. [在线]. 2021年1月20日检索. https://blog.cloudflare.com/l4drop-xdp-ebpf-based-ddos-mitigations/.**

54. **Alireza Farshin. 2019. 通过NFV服务链的低级优化实现低延迟互联网服务. 博士论文. KTH, 斯德哥尔摩. https://doi.org/10.13140/RG.2.2.22044.95361**

55. **Ethan Fetaya. 2016. 使用MCMC的随机优化. [在线]. 2021年1月17日检索. http://www.wisdom.weizmann.ac.il/~ethanf/MCMC/stochastic%20optimization.pdf.**

56. **Daniel Firestone, Andrew Putnam, Sambhrama Mundkur, Derek Chiou, Alireza Dabagh, Mike Andrewartha, Hari Angepat, Vivek Bhanu, Adrian Caulfield, Eric Chung, Harish Kumar Chandrappa, Somesh Chaturmohta, Matt Humphrey, Jack Lavier, Norman Lam, Fengfen Liu, Kalin Ovtcharov, Jitu Padhye, Gautham Popuri, Shachar Raindel, Tejas Sapre, Mark Shaw, Gabriel Silva, Madhan Sivakumar, Nisheeth Srivastava, Anshuman Verma, Qasim Zuhair, Deepak Bansal, Doug Burger, Kushagra Vaid, David A. Maltz, and Albert Greenberg. 2018. Azure加速网络：公共云中的SmartNIC. 在USENIX网络系统设计与实现研讨会上.**

57. **Xiangyu Gao, Taegyun Kim, Michael D Wong, Divya Raghunathan, Aatish Kishan Varma, Pravein Govindan Kannan, Anirudh Sivaraman, Srinivas Narayana, and Aarti Gupta. 2020. 使用程序综合生成交换机代码. 在ACM SIGCOMM数据通信年度会议上. 44–61.**

58. **Gavin Stark and Sakin Sezer. 2020. 用于200Gb/s软件定义网络的22nm高性能流处理器. [在线]. 2021年7月1日检索. https://old.hotchips.org/wp-content/uploads/hc_archives/hc25/HC25.60-Networking-epub/HC25.27.620-22nm-Flow-Proc-Stark-Netronome.pdf.**

59. **Elazar Gershuni, Nadav Amit, Arie Gurfinkel, Nina Narodytska, Jorge A Navas, Noam Rinetzky, Leonid Ryzhyk, and Mooly Sagiv. 2019. 对不受信任的Linux内核扩展进行简单而精确的静态分析. 在第40届ACM编程语言设计与实现会议上. 1069–1084.**

60. **WR Gilks, S Richardson, and DJ Spiegelhalter. 1996. 实践中的马尔可夫链蒙特卡罗方法. Chapman & Hall, London.**

61. **Brendan Gregg. 2019. BPF：一种新的软件类型. [在线]. 2020年1月19日检索. http://www.brendangregg.com/blog/2019-12-02/bpf-a-new-type-of-software.html.**

62. **Brendan Gregg. 2019. Netflix中的BPF性能分析. [在线]. 2020年1月19日检索. https://www.slideshare.net/brendangregg/reinvent-2019-bpf-performance-analysis-at-netflix.**

63. **Luke Nelson, James Bornholt, Ronghui Gu, Andrew Baumann, Emina Torlak, and Xi Wang. 2019. 使用Serval进行系统代码的自动化验证. 在第27届ACM操作系统原理研讨会上. 225–242.**

64. **Luke Nelson, Jacob Van Geffen, Emina Torlak, and Xi Wang. 2020. 应用形式方法到Linux内核中的BPF即时编译器. 在Usenix操作系统设计与实现研讨会上.**

65. **Simon Peter, Jialin Li, Irene Zhang, Dan R. K. Ports, Doug Woos, Arvind Krishnamurthy, Thomas Anderson, and Timothy Roscoe. 2014. Arrakis：操作系统是控制平面. 在USENIX操作系统设计与实现研讨会上.**

66. **Phitchaya Mangpo Phothilimthana, Aditya Thakur, Rastislav Bodik, and Dinakar Dhurjati. 2016. 扩展超级优化. 在第21届架构支持编程语言和操作系统国际会议上. 297–310.**

67. **Benjamin C Pierce, Chris Casinghino, Marco Gaboardi, Michael Greenberg, Cătălin Hriţcu, Vilhelm Sjöberg, and Brent Yorgey. 2010. 软件基础. [在线]. 2020年10月29日检索. http://www.cis.upenn.edu/bcpierce/sf/current/index.html.**

68. **Sorawee Porncharoenwase, James Bornholt, and Emina Torlak. 2020. 修复在符号评估下爆炸的代码. 在国际验证、模型检验和抽象解释会议上. Springer, 44–67.**

69. **Qiongwen Xu, Michael D. Wong, Tanvi Wagle, Srinivas Narayana, Anirudh Sivaraman. 2021. K2编译器. [在线]. 2021年6月30日检索. https://k2.cs.rutgers.edu.**

70. **David Menendez and Santosh Nagarakatte. 2017. Alive-Infer：LLVM窥孔优化的数据驱动前提推断. 在第38届ACM编程语言设计与实现会议上. 49–63.**

71. **Sebastiano Miano, Alireza Sanaee, Fulvio Risso, Gábor Rétvári, and Gianni Antichi. 2021. 使用Morpheus动态重新编译软件网络服务. arXiv:2106.08833 [cs.NI]**

72. **Anders Møller and Michael I. Schwartzbach. 2018. 静态程序分析. 奥胡斯大学计算机科学系. http://cs.au.dk/˜amoeller/spa/.**

73. **Greg Morrisett, Gang Tan, Joseph Tassarotti, Jean-Baptiste Tristan, and Edward Gan. 2012. RockSalt：更好的、更快的、更强的x86 SFI. 在第33届ACM编程语言设计与实现会议上. 395–404.**

74. **Manasij Mukherjee, Pranav Kant, Zhengyang Liu, and John Regehr. 2020. 基于数据流的修剪以加快超级优化. 在ACM面向对象编程、系统、语言及应用程序会议上.**

75. **Andrii Nakryiko. 2020. BPF可移植性和CO-RE. [在线]. 2021年1月20日检索. https://facebookmicrosites.github.io/bpf/blog/2020/02/19/bpf-portability-and-co-re.html.**

76. **Quentin Monnet. 2020. 优化BPF：更小的程序带来更高的性能. [在线]. 2021年1月20日检索. https://www.netronome.com/blog/optimizing-bpf-smaller-programs-greater-performance/.**

77. **Luigi Rizzo. 2012. netmap：快速包I/O的新框架. 在2012年USENIX年度技术会议上.**

78. **Hugo Sadok, Zhipeng Zhao, Valerie Choung, Nirav Atre, Daniel S Berger, James C Hoe, Aurojit Panda, and Justine Sherry. 2021. 我们需要内核在网络数据平面上的介入. 在操作系统热门话题研讨会上. 152–158.**

79. **Shambwaditya Saha, Santhosh Prabhu, and P Madhusudan. 2015. NetGen：为网络策略综合数据平面配置. 在第一届ACM SIGCOMM软件定义网络研究研讨会上. 1–6.**

80. **Jamal Hadi Salim, Robert Olsson, and Alexey Kuznetsov. 2001. Beyond Softnet.**

---

这样优化后，参考文献部分更加清晰、连贯，并且每个条目都包含完整的引用信息。