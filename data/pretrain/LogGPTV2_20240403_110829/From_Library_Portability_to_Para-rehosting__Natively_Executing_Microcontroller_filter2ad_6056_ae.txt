blog/entry/Tracking-memory-usage-with-Mbed-OS/, 2019.
J. Mistry, M. Naylor, and J. Woodcock, “Adapting freertos for mul-
ticores: an experience report,” Software: Practice and Experience,
vol. 44, no. 9, pp. 1129–1154, 2014.
[41]
[42] M. Muench, A. Francillon, and D. Balzarotti, “Avatar2: A multi-target
orchestration platform,” in Workshop on Binary Analysis Research,
2018.
14
[43] M. Muench, J. Stijohann, F. Kargl, A. Francillon, and D. Balzarotti,
“What You Corrupt Is Not What You Crash: Challenges in Fuzzing
Embedded Devices,” in 2018 Network and Distributed System Security
Symposium (NDSS’18), 2018.
[44] N. Nethercote and J. Seward, “Valgrind: a framework for heavyweight
dynamic binary instrumentation,” ACM Sigplan notices, vol. 42, no. 6,
pp. 89–100, 2007.
[45] S. Peter, J. Li, I. Zhang, D. R. K. Ports, D. Woos, A. Krishnamurthy,
T. Anderson, and T. Roscoe, “Arrakis: The operating system is the
control plane,” in 11th USENIX Symposium on Operating Systems
Design and Implementation (OSDI 14). Broomﬁeld, CO: USENIX
Association, Oct. 2014, pp. 1–16.
[46] N. G. Plc, “AFL/QEMU fuzzing with full-system emulation,” https:
//github.com/nccgroup/TriforceAFL, 2017.
[47] Z. Project, “Native POSIX execution (native posix),” https://docs.zep
hyrproject.org/latest/boards/posix/native posix/doc/index.html, 2019.
[48] M. Ray, “Mbed OS Multicore Support,” https://os.mbed.com/question
s/79637/Multicore/, 2017.
[49] Real Time Engineers ltd., “FreeRTOS+FAT,” https://www.freertos.org
/FreeRTOS-Plus/FreeRTOS Plus FAT/index.html, 2019.
[50] K. Serebryany, D. Bruening, A. Potapenko, and D. Vyukov, “Address-
Sanitizer: A Fast Address Sanity Checker,” in 2012 USENIX Conference
on Annual Technical Conference (ATC’12), 2012.
[51] B. Seri, G. Vishnepolsky, and D. Zusman, “Critical vulnerabilities to
remotely compromise VxWorks, the most popular RTOS,” ARMIS,
INC., Tech. Rep., 2019.
[52] ShihPo Hung, gapry, georgekang, Jim Huang, “f9-kernel,” https://gith
ub.com/f9micro/f9-kernel, 2020.
[53] Y. Shoshitaishvili, R. Wang, C. Salls, N. Stephens, M. Polino,
A. Dutcher, J. Grosen, S. Feng, C. Hauser, C. Kruegel, and G. Vigna,
“SoK: (State of) The Art of War: Offensive Techniques in Binary
Analysis,” in 37th IEEE Symposium on Security and Privacy (S&P’16),
2016.
[54] N. Stephens, J. Grosen, C. Salls, A. Dutcher, R. Wang, J. Corbetta,
Y. Shoshitaishvili, C. Kruegel, and G. Vigna, “Driller: Augmenting
fuzzing through selective symbolic execution.” in NDSS, vol. 16, no.
2016, 2016, pp. 1–16.
[55] STMicroelectronics, “STM32Cube MCU Package for STM32L5
series,” https://www.st.com/content/st com/en/products/embedded-soft
ware/mcu-mpu-embedded-software/stm32-embedded-software/stm32
cube-mcu-mpu-packages/stm32cubel5.html, 2020.
[56] The Apache Software Foundation, “Apache NuttX,” https://nuttx.apac
he.org/, 2020.
[57] The Linux Foundation, “The Zephyr Project,” https://www.zephyrproj
[58]
[59]
[60]
“Getting
Started
https:
of QEMU (Windows),”
ect.org/, 2019.
yangjie11,
//github.com/RT-Thread/rtthread-manual-doc/blob/master/documen
tation/quick start qemu/quick start qemu.md, 2019.
I. Yun, S. Lee, M. Xu, Y. Jang, and T. Kim, “QSYM : A practical
concolic execution engine tailored for hybrid fuzzing,” in 27th USENIX
Security Symposium (USENIX Security 18). Baltimore, MD: USENIX
Association, Aug. 2018, pp. 745–761.
J. Zaddach, L. Bruno, A. Francillon, and D. Balzarotti, “AVATAR: A
framework to support dynamic security analysis of embedded systems’
ﬁrmwares,” in NDSS 2014, Network and Distributed System Secur-
ity Symposium, 23-26 February 2014, San Diego, USA, San Diego,
UNITED STATES, 02 2014.
[61] Zalewski, Michal, “American Fuzzy Lop,” http://lcamtuf.coredump.cx/
afl/, 2010.
[62] Zephyr, “ARM Cortex-M3 Emulation (QEMU)n,” https://docs.zephyrp
roject.org/latest/boards/arm/qemu cortex m3/doc/index.html, 2020.
[63] Zephyr Project, “X86 Emulation (QEMU),” https://docs.zephyrproject
.org/1.13.0/boards/x86/qemu x86/doc/board.html, 2018.
[64] Y. Zheng, A. Davanian, H. Yin, C. Song, H. Zhu, and L. Sun,
“FIRM-AFL: High-Throughput Greybox Fuzzing of IoT Firmware via
Augmented Process Emulation,” in 28th USENIX Security Symposium
(USENIX Security’19), 2019.
15
5
3
3
5
3
3
2
2
0
1
5
2
3
3
3
1
4
1
3
3
2
1
r
e
l
d
n
a
H
e
t
a
e
r
C
k
s
a
T
q
r
I
q
r
I
k
c
i
t
s
y
S
e
l
b
a
s
i
D
e
l
b
a
n
E
r
e
l
d
n
a
H
e
t
a
e
r
C
k
s
a
T
q
r
I
q
r
I
k
c
i
t
s
y
S
e
l
b
a
s
i
D
e
l
b
a
n
E
r
e
l
d
n
a
H
e
t
a
e
r
C
k
s
a
T
q
r
I
q
r
I
k
c
i
t
s
y
S
e
l
b
a
s
i
D
e
l
b
a
n
E
r
e
l
d
n
a
H
e
t
a
e
r
C
k
s
a
T
q
r
I
q
r
I
k
c
i
t
s
y
S
e
l
b
a
s
i
D
e
l
b
a
n
E
E
B
E
B
E
B
E
B
E
B
E
B
E
B
E
B
E
B
E
B
E
B
E
B
E
B
E
B
E
B
E
B
U
C
M
P
U
C
M
P
U
C
M
P
U
C
M
P
U
C
M
P
U
C
M
P
U
C
M
P
U
C
M
P
U
C
M
P
U
C
M
P
U
C
M
P
U
C
M
P
U
C
M
P
U
C
M
P
U
C
M
P
U
C
M
P
S
T
P
U
R
R
E
T
N
I
S
T
P
U
R
R
E
T
N
I
E
L
B
A
S
I
D
t
r
o
p
E
L
B
A
N
E
t
r
o
p
w
e
N
d
a
e
r
h
T
x
t
R
c
v
s
k
c
a
t
S
e
s
i
l
a
i
t
i
n
I
t
r
o
P
x
p
d
a
e
r
h
t
w
e
n
e
l
b
a
s
i
d
e
l
b
a
n
e
q
r
i
q
r
i
h
c
r
a
h
c
r
a
h
c
r
a
a
/
n
z
z
z
t
i
n
I
k
c
a
t
S
k
s
a
T
s
O
e
l
b
a
s
i
D
w
H
i
e
l
b
a
n
E
w
H
i
S
O
L
S
O
L
a