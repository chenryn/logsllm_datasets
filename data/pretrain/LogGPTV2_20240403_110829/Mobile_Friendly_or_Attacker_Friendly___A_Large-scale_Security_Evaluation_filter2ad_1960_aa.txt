title:Mobile Friendly or Attacker Friendly?: A Large-scale Security Evaluation
of Mobile-first Websites
author:Tom van Goethem and
Victor Le Pochat and
Wouter Joosen
Mobile Friendly or Attacker Friendly?
A Large-scale Security Evaluation of Mobile-first Websites
Tom Van Goethem∗
imec-DistriNet, KU Leuven
PI:EMAIL
Victor Le Pochat∗
imec-DistriNet, KU Leuven
PI:EMAIL
Wouter Joosen
imec-DistriNet, KU Leuven
PI:EMAIL
ABSTRACT
In the last few years, traffic generated by mobile devices has sur-
passed desktop visits. In order to provide users with the best brows-
ing experience, many website owners specifically tailor their site to
mobile devices. While some websites make use of reactive designs,
many others opt to create an entirely new “mobile-first” website,
typically hosted on a subdomain of the desktop site. These mobile-
first sites provide a unique viewpoint on how organizations handle
security: the mobile version of a site is typically developed several
years after the desktop site by the same organization. Through a
large-scale security analysis on 10,222 domains with both a desk-
top and mobile-first version, we find several strong indicators that
security is generally applied consistently across the different parts
of an organization’s web estate. Overall, we find relatively few dif-
ferences between the desktop and mobile versions of a website,
both on the adoption and the implementation of security features,
indicating that these are applied reactively rather than proactively
during the design phase.
ACM Reference Format:
Tom Van Goethem, Victor Le Pochat, and Wouter Joosen. 2019. Mobile
Friendly or Attacker Friendly? A Large-scale Security Evaluation of Mobile-
first Websites. In ACM Asia Conference on Computer and Communications
Security (AsiaCCS ’19), July 9–12, 2019, Auckland, New Zealand. ACM, New
York, NY, USA, 8 pages. https://doi.org/10.1145/3321705.3329855
1 INTRODUCTION
With web traffic generated by mobile devices surpassing desktop
traffic in the last two years [23], many organizations have made
extensive efforts to create an equivalent browsing experience for
mobile users. Typically, this is done by adapting the existing website
with a reactive design such that the same site can be used to serve
mobile and desktop clients. Another option is to create a mobile-
first site, which is specifically tailored to the needs of mobile users,
and is often hosted on a subdomain, in conjunction with the site
that serves desktop users.
In this paper, we perform a comparative evaluation of mobile-
first sites and their desktop counterpart, driven by a large-scale
statistical analysis. The unique characteristics of mobile-first sites
∗The authors contributed equally to this paper.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
AsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand
© 2019 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-6752-3/19/07...$15.00
https://doi.org/10.1145/3321705.3329855
allow us to make more general observations on how security is
applied on the web. More precisely, mobile-first sites are developed
by and/or for the same organization as the desktop version, but
at a much later time than the desktop version; by analyzing the
similarities and differences, we obtain insights on whether security
features are typically retroactively applied in an ad-hoc manner,
or whether they are the result of a more structured and thorough
approach during the initial development phase.
Through a large-scale statistical analysis of the adoption of a
wide variety of security features on 10,222 websites, we find that
desktop sites exhibit a slightly larger prevalence of these features,
both for the positive and negative ones. We validate that this is in
part due to the higher complexity of desktop sites. Moreover, we
find that almost all security features are consistently adopted on
both desktop and mobile versions. For instance, of the 502 desktop
sites that leverage Content Security Policy to improve security for
their visitors, we find that 83.27% also implement this feature on
their mobile site. This, along with the other findings in our paper,
are strong indicators that security is applied holistically, across
the various aspects of an organization’s web estate. Moreover, the
minimal differences between desktop and mobile versions, where
the latter are typically developed several years later, indicate that
security measures are typically applied retroactively instead of
during the design or initial development phase.
Next to our statistical approach, we also perform an in-depth
analysis of how certain security features are implemented. More
specifically, we analyze the adoption of different CSP directives and
the deployment of HTTPS. This analysis shows that even in the
configuration of security features, there is little difference between
mobile and desktop sites, confirming our earlier intuition that se-
curity is applied consistently across the various components of a
website.
In summary, we make the following contributions:
• We present the first comprehensive analysis on mobile-first
sites based on a variety of security features, measured across
10,222 domains visited with both a desktop browser and an
emulated mobile browser.
• Leveraging the unique viewpoint that mobile-first websites
provide on an organization’s general security posture, we
determine that security is generally applied in a holistic man-
ner, i.e. consistently across the different web-facing assets of
an organization.
• As a result of our in-depth analysis on specific security fea-
tures, we discover that many sites, both desktop and mobile,
are left unprotected despite their developers’ intentions.
Session 3A: Web Attack MeasurementsAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand2062 DATASET
2.1 Dataset composition
In our evaluation, we set out to explore whether mobile-first web-
sites provide better, or at least on-par, security for their visitors.
In order to do so, we first compose a set of mobile-first websites,
i.e. websites that are specifically designed to serve mobile users.
A common technique that is used to provide a mobile-first web-
site is to host it on a subdomain, such as m.example.com, or an
entirely different domain, e.g. example.mobi. Consequently, when
a user navigates to the home page of the website, this website deter-
mines whether the user agent is a mobile device by looking at the
User-Agent request header, or through some JavaScript code (e.g.
analyzing the navigator.userAgent string or using the match-
Media API. If the user agent indeed matches a mobile device, the
server will issue a redirect to the mobile-first website.
To determine websites with a (sub-)site specifically designed for
mobile devices, we visited the homepage of the Tranco top one mil-
lion list [15], created on December 20th, 20181. To ensure that our
crawler would be redirected to the mobile-first site, we emulated
a mobile environment in our headless Chrome (v71) browser: we
set the User-Agent string to that of Chrome on a popular mobile
device, we overrode the device metrics to match those of the mobile
device, and used the built-in mobile emulator [6]. For each of the 1
million websites, we visited it once with the mobile browser emu-
lation enabled, and once with the emulation disabled, totaling in
two million page visits. For every visit, we recorded the redirection
chain, and only considered a website to have a mobile-first com-
ponent when the “mobile browser” was redirected to a different
domain or subdomain than the “desktop browser”.
Out of the 15,541 domains that redirected to a different (sub)-
domain for mobile, we excluded 512 domains that we found to be
compromised. More specifically, when the domain was visited with
a desktop browser, the legitimate website was returned, however
on the mobile browser, the user was redirected to a supposedly ma-
licious domain, in most cases wwwtype.ru. This domain would then
again redirect the user to another advertising-based domain, and
ultimately the user would end on m.chaturbate.com or a website
serving suspicious-looking advertisements or fake surveys. The
sites were labeled as compromised by means of manual analysis,
guided by a targeted search. By obtaining part of the contents of a
compromised website, we determined that the adversary added an
.htaccess file that would match the User-Agent string of mobile
browsers and only redirect those to the malicious domain. Pre-
sumably, this cloaking tactic is used to extend the lifetime of the
compromise as administrators of websites that are typically only
contacted on desktop may not immediately notice the malicious be-
havior. Furthermore, the compromise may be overlooked by search
engines and security scanners, if these do not use a mobile browser
to crawl the website.
Next, we applied several other filtering steps: we excluded 45
domains that redirected to the Google Play store, and thus do not
provide a mobile-first site. Eight domains that only served mal-
ware were also excluded from our dataset. Next, we filtered out
268 websites because either the mobile or desktop site was not
accessible. Finally, 2,173 sites were excluded because no same-site
links could be found on the home page on either the desktop or
mobile version. These were mainly pages resulting in an error or
redirecting to a third party to ask for cookie consent following the
GDPR regulation.
In a next step, we aimed to remove any bias towards websites that
are overrepresented in the ranking. For instance, several website
have multiple domains with a different TLD, for instance google.de
and google.com. As these refer to the same website, only a single
instance of these should be used. To find website from the same
owner hosting the same content, we take a perceptual hash [30]
of the screenshot of the website’s homepage, and cluster these ac-
cording to their similarity. Next, we manually analyze the different
clusters and remove entries that were incorrectly marked as part
of a group (our similarity threshold was set high enough to ensure
dynamic websites would also be detected as similar). For each clus-
ter of similar domains, we only keep a single one, namely the one
that was ranked highest in the Tranco list. In total, 820 domains
were removed as duplicates of another domain in the list.
In the same vein, we excluded websites from our dataset that
on the mobile version would redirect to the same domain as one
of the other websites would on the desktop version, and similarly
for desktop sites redirecting to a domain encountered elsewhere.
This filtering phase accounted for 1,471 sites that were excluded
from our dataset. As such, a total of 5,297 sites were removed from
our initial dataset because these do not represent unique websites
built specifically for mobile users. In the remainder of this paper,
we evaluate the security of 10,222 mobile-first websites that are
part of our dataset.
Although in total, we only discovered 10,222 mobile-first web-
sites, i.e. roughly one percent of our starting set of one million, it
should be noted that because of our strict criteria, we may have
missed certain websites, for instance if a website would host its
mobile version on the same fully-qualified domain name (FQDN) as
the desktop version, e.g. by setting a cookie that determines which
version of the site would be shown. Nevertheless, we believe that
our filtering approach did not bias the dataset towards the adoption
of security features, and therefore we consider the dataset to be
representable of websites with a mobile-first site.
2.2 Mobile site age
Finally, we explore when mobile sites are typically created, in com-
parison to the desktop version. For this, we leverage the Memen-
tos [26] accessed through the Time Travel service2, which can be
used to discover entries in a variety of web archival servers. We
use this service to determine the first occurrence of the mobile
(sub)domain and compare it to when the desktop (sub)domain was
first encountered. In Figure 1, we show the cumulative distribution
function of the time difference in years between the first encounter
of the two site versions over the 8,459 domains for which we could
determine the age for both the desktop and mobile version. While
there are certain limitations to this approach (e.g. the mobile-first
version might not be as popular and therefore is less likely show up
close to its inception; on the other hand, the desktop version may
have existed before the archival services took note of it, making
1https://tranco-list.eu/list/RJ2Y/1000000
2http://timetravel.mementoweb.org/
Session 3A: Web Attack MeasurementsAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand207throughout the entire website, we believe that this captures a rep-
resentable view on a website’s security efforts.
3.1 Statistical methods
We examine whether the desktop and mobile websites show differ-
ent web security properties by determining whether the prevalence
distributions of these properties are significantly different. As we
measure properties for the desktop and mobile version of the same
root domain, we apply statistical tests that are appropriate for paired
samples. As we might have visited a different number of pages for a
domain, we calculate the proportion of pages that exhibit a security
property, in order to assess whether they are applied consistently
across a website.
As a baseline test for the significance of paired difference be-
tween desktop and mobile sites, we use the Wilcoxon signed-rank
test [29], which is non-parametric, i.e. it does not rely on a priori as-
sumptions on the distribution of the data, as opposed to the paired
t test. Our null hypothesis is that desktop and mobile domains
have the same security properties, i.e. that the paired samples come
from populations with the same distribution. The test outputs a
two-sided p-value that indicates whether this hypothesis can be
rejected with statistical significance or not (lower values of p equal
higher significance). It also outputs a statistic from which we calcu-
late the rank-biserial correlation using Kerby’s simple difference
formula [14]. This metric serves as the effect size by denoting how
much the device and the security property are correlated, with a
higher value indicating a stronger relationship.
However, our insights into the data as well as previous find-
ings [2] lead us to consider whether differences in the measured
security properties can be solely attributed to the differences be-
tween the security effort made for the desktop or mobile domain, or
whether another factor indirectly affects our measurements. More
specifically, we assess whether the complexity of a website may
influence the perceived security, as websites that support more
features require more effort to be configured as securely as simpler
sites. We quantify this complexity based on the definition of our
security properties, that is the feature for which we calculate the