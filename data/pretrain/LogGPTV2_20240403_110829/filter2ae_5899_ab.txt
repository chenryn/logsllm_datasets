### Ⅱ. 认证头内容注入

#### 概述
认证头内容注入绕过技巧主要利用SPF和DKIM组件如何将验证结果传递给DMARC进行对齐检查。通过控制这些验证过程中的特定部分，攻击者可以在通过DMARC的情况下让SPF/DKIM验证其可控的域名内容。

#### ① DKIM 认证头内容注入
1. **攻击示例**：攻击者发送恶意邮件头内容，其中公钥内容地址为 `selector._domainkey.legitimate.com(.attacker.com`。由于在 `attacker.com` 上读取该内容，因此攻击者可以控制并成功通过DKIM验证。
2. **验证头生成**：DKIM组件会生成验证头并发送给DMARC：
   ```plaintext
   Authentication-Results: victim.com; dkim=pass (1024-bit key) header.d=legitimate.com(.attacker.com
   ```
3. **DMARC对齐**：DMARC收到验证头后，将 `(` 后的内容视为注释，从而将 `Message.From` 的 `legitimate.com` 与 `d=legitimate.com` 进行对齐匹配测试，通过校验。
   > 注意：`"("`, `")"` 和 `'` 均可作为注释。

#### ② SPF 认证头内容注入
**方案一（Espoofer – server_a5）**
1. **SPF校验**：当SPF校验时，`Smtp.From` 的域名为 `legitimate.com(.attacker.com`。SPF校验 `legitimate.com(.attacker.com`，内容可控故通过SPF校验。
2. **DMARC校验**：DMARC同样将 `(` 后视为注释，将 `Message.From` 的 `legitimate.com` 与 `Smtp.From` 的 `legitimate.com` 进行对齐匹配，通过DMARC校验。

**方案二（Espoofer – server_a6）**
1. **邮件服务器处理**：某些邮件服务器不允许方案一的地址格式，但可以通过其他格式绕过。邮件服务器以第二个 `@` 作为分隔符，判断为合法邮件。
2. **SPF校验**：SPF组件选择第一个 `@` 作为分隔符，校验域名为 `legitimate.com'[@a](https://github.com/a "@a").attack.com`，通过SPF校验。
3. **DMARC校验**：通过注释后仍然可以通过对齐匹配。

### Ⅲ. UI相关差异绕过

#### 概述
邮件接收处理分为两个阶段：
1. 从MIME原始报文提取至 `Message.Header`
2. 从 `Message.Header` 提取出相应的域名和电子邮件地址

在传递过程中，邮件服务器和客户端可能会因不同的处理方式产生信息不一致，从而导致绕过利用。

#### ① 邮件头不一致性
**多个发件人地址进行绕过**
- **iCloud.com (Web)**：DMARC验证第一个 `Message.From`，客户端展示最后一个 `Message.From`。测试方法对应 Espoofer – server_a8。
- **Mail.ru**：拒绝多个 `Message.From`，但使用堆叠的空格可以绕过。DMARC识别第一个 `Message.From` 并在 Outlook (Windows) 上展示正确的第二个 `Message.From`。测试方法对应 Espoofer – server_a11。
- **Fastmail.com**：无法识别空格，DMARC校验第一个 `Message.From`，但在转发给 Fastmail.com (Web) 客户端时去除空格并展示最后一个 `Message.From`。测试方法对应 Espoofer – server_a10。

**代替发件人地址进行绕过**
- **Naver.com**：成功识别堆叠的 `Message.From` 字段，但在 Outlook (Windows) 上无法展示，使用 `Sender` 展示发件人。测试方法对应 Espoofer – server_a12。
- **Gmail.com**：严格的格式校验拒绝多 `Message.From` 字段。当 `Message.From` 不存在时，使用 `Smtp.From` 添加新头。攻击者使用带开头空格的 `Message.From` 作为第一个头，并设置 `Resent-From` 作为备用头，使 Gmail.com (Web) 显示 `Resent-From`。

#### ② 邮件地址不一致性
一个有效的 `Message.From` 头的结构包括：
- **显示名称**：用于表示发件人名称，不受SPF、DKIM、DMARC保护。
- **注释**：可以自由插入，如 `“From: Pete(A nice \) chap)”`。
- **路由部分**：早期用于定义的功能，列表通过 `,` 分隔。
- **真实地址**：代表真实发件人。
- **发件人地址列表**：可以定义多个有效邮箱。
- **转义字符**：使用 `\` 转义特殊字符。
- **编码**：支持 Base64 编码和带引号编码。

**服务器与客户端关于头文件内容解析的差异性**
- **Tutanota.com**：邮件服务器用第一个地址进行DMARC检测，Web客户端显示第二个地址。
- **Yahoo.com, Outlook.com, iCloud.com, Fastmail, Zoho.com, Tutanota.com**：邮件服务器不能识别编码地址，而客户端支持编码显示。
- **Fastmail.com**：邮件服务器不解析路由格式，使用 `attack.com` 进行DMARC对齐认证，Web客户端显示第二个地址。

#### 其他问题
- **不可见字符插入目标域地址**：例如 `From:[PI:EMAIL]\u2000`，Outlook.com (Server) 会去 `legitimate.com\u2000` 查找DMARC策略，未发现则跳过校验。
- **编码目标域地址**：例如 `From: base64encode([PI:EMAIL])`，Yahoo.com (Server) 会去编码地址查找DMARC策略。
- **From空绕过**：当 `From` 头为空但 `Sender` 头存在时，Outlook.com (Server), Zoho.com (Server), Tutanota.com (Server) 会跳过DMARC校验或生成 "none" 结果。

### Ⅳ. 重放攻击

#### 概述
DKIM的校验存在两个弱点：
1. **不能防止重放攻击**
2. **允许附加其他电子邮件标头甚至正文内容**

结合这两个弱点，合法域签名的邮件可以被攻击者在不破坏DKIM签名的情况下添加恶意内容，并通过DKIM处理与MUA表达不一致性进一步欺骗电子邮件客户端。

#### ① DKIM 签名重放
**Header spoofing**
- **不同域名设置**：不同域名的DKIM签名内容标准不同，存在重放篡改的可能。例如，`aa.com` 设置为 `h=from`，在重放过程中可以修改未被校验的头。
- **关键字段强制签名**：即使强制签名了关键字段，仍存在DKIM组件及客户端渲染差异导致混淆的可能。RFC 6376 § 5.4.2 规定，如果消息有多个重复的标头，则DKIM需要使用最后一个标头进行签名，但有的客户端会显示第一个标头。

**Body spoofing**
- **利用 `l=` 标签**：攻击者可以通过利用DKIM-Signature标头中的 `l=` 标签来欺骗电子邮件正文。例如，Google网上论坛会在每封转发的电子邮件末尾附加退订信息，此时重放攻击者可以在不破坏DKIM签名的情况下将新的恶意内容附加到原始电子邮件正文中。

#### ② 已有邮箱帐户欺骗
- **Gmail.com (Server) 绕过**：攻击者拥有一个发送方用户的账号密码，通过自定义的MUA进行身份认证，更改 `Message.From` 头格式，通过认证服务器的用户核实进行发信。

#### ③ 重放绕过DKIM签名
- **拦截并重放**：攻击者拦截已认证的DKIM邮件，添加重复的 `From` 和 `To` 头并进行重放，利用对重复头的差异性绕过严格验证的邮件服务器。

### 0x04 如何防御
1. **使用强校验模式进行DMARC验证**
2. **用户UI需要更明确的安全提示**
3. **永远不要轻易相信收件人地址**

### 0x05 写在后面
如果想在某些攻防项目中大规模使用上述相关邮件伪造手法，需注意以下几点：
1. **组合拳**：了解每个绕过方式的作用，根据目标邮服防护措施定制组合绕过方法。
2. **发信源**：拥有可以使用25端口并且可以大批量发送邮件的可信IP源。