∗ 
sid 
Deﬁnition 1  (Freshness). Let sid ∗  = (Π, I , i∗, j ∗, Xi, Yj ) or (Π, R, j ∗, i∗, Xi, Yj ) be a completed session with ini­
tiator party i∗  and responder party j∗. If the matching session exists, denote it s . We say that sid ∗  is fresh if the 
following conditions all hold: 
–	 A has not made a SessionKeyReveal query on s (if it exists). 
–	 A has not made a SessionKeyReveal query on sid ∗ . ∗ 
–	 Neither party i∗ 
Recall that in the original BR model [7], no corruption query is allowed. In the above freshness deﬁnition, we allow 
the adversary to corrupt both parties of sid ∗  if the matching session exists, i.e., the adversary can obtain the parties’s 
nor j∗ is dishonest if s does not exist. I.e., A has not made a Corrupt query on either of them. 
secret key in advance and then passively eavesdrops the session sid ∗  (and thus s ). We remark that this is actually 
honest session sid ∗  (and thus s ) has been completed. 
stronger than what is needed for capturing wPFS [44], where the adversary is only allowed to corrupt a party after an 
∗ 
sid 
∗ 
sid 
∗ 
sid
sid 
Security Game  The security of a two-pass AKE protocol is deﬁned in terms of the following game. The adversary 
A makes any sequence of queries to the oracles above, so long as only one Test query is made on a fresh session, as 
mentioned above. The game ends when A outputs a guess bj  for b. We say A wins the game if its guess is correct, so 
that bj  = b. The advantage of A, AdvΠ,A, is deﬁned as Pr[bj  = b] − 1/2. 
Deﬁnition 2  (Security). We say that an AKE protocol Π is secure if the following conditions hold: 
–	 If  two  honest  parties  complete  matching  sessions  then  they  compute  the  same  session  key  with  overwhelming 
–	 For any PPT adversary A, the advantage AdvΠ,A  is negligible. 
probability. 
2.3  The Gaussian Distributions and Rejection Sampling 
For  any  positive  real  α  ∈  R,  and  vectors  c  ∈  Rm,  the  continuous  Gaussian  distribution  over Rm  with  standard 
deviation α centered at v is deﬁned by the probability function ρα,c(x)  =  ( 
. For integer 
vectors  c  ∈  Rn, let  ρs,c(Zm)  = x∈Zm  ρs,c(x). Then, we deﬁne the discrete Gaussian distribution over Zm  as 
(Zm) , where x ∈ Zm. The subscripts s and c are taken to be 1 and 0 (respectively) when omitted. 
DZm ,s,c(x) = 
The following lemma says that for large enough α, almost all the samples from DZm,α  are small. 
ρs,c (x)
ρs,c 
−lx−vl2 
w 
√  1 
exp
2σ2
)m 
2πσ2
7 
√
log m), constant d > 1/  2π, then Prx←r DZm,α [1x1 > d · α  m] ≤  2 
Lemma 1  ([56]). Letting real α = ω( 
where D = d  2πe · e
√ 
√ 
m] ≤ 2−m+1
[1x1 > α 
. In particular, we have Prx←r 
−π·d2 
√ 
√
DZm,α 
.
1 Dn ,
Now, we recall rejection sampling in Theorem 1 from [50], which will be used in the security proof of our AKE 
protocol. Informally, the rejection sampling theorem says that for large enough α, the distributions DZm ,α,c and DZm,α 
are statistically indistinguishable even given vector c ∈ Z. 
Theorem 1  (Rejection Sampling [50]). Let V  be a subset of Zm  in which all the elements have norms less than T ,
√ 
log m) be a real, and ψ  :  V  → R be a probability distribution. Then there exists a constant M  =  O(1) 
α  =  ω(T 
such that the distribution of the following algorithm Samp1  : 
1:  c ←r  ψ 
2:  z ←r  DZm,α,c 
3:  output (z, c) with probability min 
is within statistical distance  2−ω(log m)  of the distribution of the following algorithm Samp2  :
1:  c ←r  ψ 
2:  z ←r  DZm,α 
3:  output (z, c) with probability 1/M . 
Moreover, the probability that Samp1  outputs something is at least  1−2−ω(log m) . More concretely, if α = τ T  for any 
of the 
positive  τ, then  M  =  e
output of Samp2, and the probability that A outputs something is at least  1−2−100 .M 
)  and the output of algorithm  Samp1  is within statistical distance 
M DZm,α,c(z) 
12/τ +1/(2τ 2
2−100
M 
w 
DZm,α(z)
, 1  .
M 
M 
2.4  Ring Learning with Errors 
Let the integer n be a power of 2, and consider the ring R  =  Z[x]/(x + 1). For any positive integer q, we deﬁne 
the ring Rq  = Zq [x]/(xn  + 1) analogously. For any polynomial y(x) in R (or Rq), we identify y with its coefﬁcient 
vector in Zn  (or Zn). Then we deﬁne the norm of a polynomial to be the norm of its coefﬁcient vector. 
Lemma 2.  For any s, t ∈ R, we have 1s · t1 ≤  n · 1s1 · 1t1 and 1s · t1∞ ≤ n · 1s1∞ · 1t1∞. 
√
q 
n
Besides, the discrete Gaussian distribution over the ring  R  can be naturally deﬁned as the distribution of ring 
elements whose coefﬁcient vectors are distributed according to the discrete Gaussian distribution over Zn , e.g., DZn,α 
for some positive real α. Letting χα  be the discrete Gaussian distribution over Zn  with standard deviation α centered 
at 0, i.e., χα  :=  DZn,α, we now adopt the following notational convention: since bold-face letters denote vectors, 
x ←r  χα  means we sample the vector x from the distribution χα; for normal weight variables (e.g. y  ←r  χα) we 
sample an element of R whose coefﬁcient vector is distributed according to χα. 
Now we come to the statement of the Ring-LWE assumption; we will use a special case detailed in [52]. Let Rq 
be deﬁned as above, and s ←r  Rq. We deﬁne As,χα  to be the distribution of the pair (a, as + x) ∈ Rq × Rq, where 
a ←r  Rq  is uniformly chosen and x ←r  χα  is independent of a. 
Deﬁnition 3  (Ring-LWE Assumption). Let Rq  and χα  be deﬁned as above, and let s ←r  Rq. The Ring-LWE as­
sumption RLWEq,α  states that it is hard for any PPT algorithm to distinguish As,χα  from the uniform distribution 
on Rq × Rq  with only polynomially many samples. 
The following lemma says that the hardness of the Ring-LWE assumption can be reduced to some hard lattice 
problems such as the Shortest Independet Vectors Problem (SIVP) over ideal lattices. 
√ 
Proposition 1  (A special case of [52]). Let n be a power of 2, let α be a real number in (0, 1), and q a prime such 
log n). Deﬁne Rq  =  Zq[x]/(x + 1) as above. Then there exists a polynomial 
that q mod 2n  =  1 and αq  >  ω( 
√ 
time  quantum  reduction  from  O˜( 
n/α)-SIVP  in  the  worst  case  to  average-case  RLWEq,β  with  £  samples,  where 
β = αq · (n£/ log(n£))1/4 . 
n
8 
It has been proven that the Ring-LWE assumption still holds even if the secret s is chosen according to the error 
distribution χβ  rather than uniformly [1,52]. This variant is known as the normal form, and is preferable for controlling 
the size of the error term [10,9]. The underlying Ring-LWE assumption also holds when scaling the error by a constant t 
relatively prime to q [10], i.e., using the pair (ai, ais+txi) rather than (ai, ais+xi). Several lattice-based cryptographic 
schemes  have  been  constructed  based  on  this  variant  [10,9].  In  our  case,  we  will  ﬁx  t  =  2.  Besides,  recall  that 
the RLWEq,β  assumption guarantees  that for some  prior ﬁxed  (but randomly chosen)  s, the  tuple  (a, as + 2x)  is 
computationally indistinguishable from the uniform distribution over Rq × Rq  if a ←r  Rq  and x ← χβ . In this paper, 
we will use a matrix form ring-LWE assumption. Formally, let  Bχβ ,£1,£2  be the distribution of  (a, B  =  (bi,j ))  ∈ 
R£1 × R£1×£2 , where a = (a0, . . . , a£1−1) ←r  R£1 , s = (s0, . . . , s£2−1) ←r  R£2 , ei,j  ←r  χβ , and bi,j  = aisj + 2ei,j
for i ∈ {0, . . . , £1 −1} and j ∈ {0, . . . , £2 −1}. For polynomially bounded £1 and £2, one can show that the distribution 
of Bχβ ,£1,£2  is pseudorandom based on the RLWEq,β  assumption [60]. 
q 
q 
q
q
3  Authenticated Key Exchange from Ring-LWE 
We now introduce some notation before presenting our protocol. For odd prime q > 2, denote Zq  = {− q−1 , . . . , 
}
q−1
and deﬁne the subset E  := {−l q J, . . . , l q l} as the middle half of Zq. We also deﬁne Cha to be the characteristic 
2 
function of the complement of  E, so Cha(v) = 0 if v ∈ E and 1 otherwise. Obviously, for any v in Zq , v + Cha(v) · 
q−1  mod q belongs to E. We deﬁne an auxiliary modular function, Mod2 : Zq × {0, 1} → {0, 1}:
4 
4 
2 
2 
Mod2(v, b) = (v + b · 
q − 1
2 
) mod q mod 2. 
In the following lemma, we show that given the bit b = Cha(v), and a value w = v + 2e with sufﬁciently small e, 
we can recover Mod2(v, Cha(v)). In particular, we have Mod2(v, b) = Mod2(w, b). 
Lemma 3.  Let  q  be  an  odd  prime,  v  ∈  Zq  and  e  ∈  Zq  such  that |e|  <  q/8.  Then,  for  w  =  v  + 2e,  we  have 
Mod2(v, Cha(v)) = Mod2(w, Cha(v)). 
Proof.  Note that w + Cha(v) q−1  mod q  =  v + Cha(v) q−1  + 2e mod q. Now, v + Cha(v) q−1  mod q is in E as
we stated above; that is, −l q J ≤  v + Cha(v) q−1  mod q ≤ l q l. Thus, since −q/8  <  e  <  q/8, we have −l q J ≤ 
v +Cha(v) q−1  mod q + 2e ≤ l q l. Therefore, we have v +Cha(v) q−1  mod q + 2e = v +Cha(v) q−1 + 2e mod q = 
w + Cha(v) q−1  mod q. Thus, Mod2(w, Cha(v)) = Mod2(v, Cha(v)).
2 
2 
2 
2 
4 
2 
2
4
2