title:Covert ephemeral communication in named data networking
author:Moreno Ambrosin and
Mauro Conti and
Paolo Gasti and
Gene Tsudik
Covert Ephemeral Communication
in Named Data Networking
Moreno Ambrosin,
Mauro Conti∗
University of Padua, Italy
{ambrosin,conti}@
math.unipd.it
Paolo Gasti†
New York Inst. of Technology
PI:EMAIL
University of California, Irvine
Gene Tsudik†
PI:EMAIL
ABSTRACT
In recent years, the growing belief that the current IP-based
Internet is becoming obsolete prompted several research ef-
forts that aim to design potential next-generation Internet
architectures. Named Data Networking (NDN), an instanti-
ation of the content-centric approach, is one such eﬀort. In
contrast with their IP counterparts, NDN routers maintain
a signiﬁcant amount of state information.
In this paper,
we investigate the use of this feature for covert ephemeral
communication (CEC). CEC allows two or more parties to
covertly exchange ephemeral messages, i.e., messages that
become unavailable after a certain amount of time. Our
techniques rely only on network-layer services. This makes
our protocols robust, and stealthy communication – diﬃcult
to detect. We show that users can build high-bandwidth
CEC channels by exploiting features unique to NDN: in-
network caches, routers’ forwarding state and name match-
ing rules. We assess feasibility and performance of identi-
ﬁed CEC channels using a local setup and the oﬃcial NDN
testbed.
Categories and Subject Descriptors
C.2 [Computer-Communication Networks]: Security
and protection
Keywords
Ephemeral Communication, Covert Communication, Named
Data Networking, CCN, NDN
∗Mauro Conti was supported by a Marie Curie Fellowship,
funded by the European Commission for the PRISM-CODE
project (PCIG11-GA-2012-321980), and by the University
of Padua Researchers’ Mobility grant 2013. This work has
been partially supported by the TENACE PRIN Project
(20103P34XC) funded by the Italian MIUR.
†Paolo Gasti and Gene Tsudik were supported by the NSF
under award CNS-1040802 – “FIA: Collaborative Research:
Named Data Networking (NDN)”.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
ASIA CCS’14, June 4–6, 2014, Kyoto, Japan.
Copyright 2014 ACM 978-1-4503-2800-5/14/06 ...$15.00.
http://dx.doi.org/10.1145/2590296.2590306 .
1.
INTRODUCTION
The current IP-based Internet architecture represents an
unprecedented success story, having by far exceeded its de-
signers’ expectations in terms of ﬂexibility, robustness,
longevity and scalability. Part of IP’s success is due to its
light-weight design: virtually all state used for communica-
tion is maintained at the endpoints, rather than within the
network. For this reason, IP-based networks are quite ro-
bust against random failures. However, lack of in-network
state is the reason for some of IP’s shortcomings, including
poor support for eﬃcient large-scale content distribution.
Content distribution currently accounts for most Inter-
net traﬃc [28]. Since IP is not well-suited for this, most
major content providers [32, 18, 12, 16] have been – for
performance, cost and reliability reasons [3] – relying on
Content Distribution Networks (CDNs): large, complex, ge-
ographically distributed overlays implemented at transport
and higher layers of the protocol stack. This state of aﬀairs
motivated research into new networking architectures that
can better serve today’s content-dominated Internet traﬃc.
Named Data Networking (NDN) [21] is one such architec-
ture.
NDN is an example of Content-Centric Networking (CCN),
sometimes also referred to as Information-Centric Network-
ing (ICN). In NDN, location-independent content is directly
addressable by an arbitrarily long human-readable name,
regardless of who publishes it. This allows routers to cache
a copy of forwarded content in order to eﬃciently satisfy
subsequent requests. Content is requested using a special
packet type, called an interest. Interests are routed similarly
to IP packets; however, content is forwarded along the re-
verse path traversed by the corresponding interest. Routers
keep state of outstanding interests in a data structure called
Pending Interest Table (PIT).
User-driven state in routers facilitates eﬃcient content dis-
tribution at the network layer. However, availability of this
state within the network creates a new set of problems. In
particular, NDN prompts new security [13, 2, 9, 29, 10, 31]
and privacy [1, 11] issues. In this paper, we investigate how
NDN router state can be used for covert ephemeral commu-
nication. We show that two or more parties can communi-
cate secretly, without directly exchanging any packets, and
without injecting new content into the network (i.e., with-
out publishing new content). This is a signiﬁcant departure
from what can be done with IP, where lack of user-driven
network state forces users to rely on the application layer
for implementing covert channels.
15We believe that this work is both timely and important.
The former – because of a recent surge of interest in content-
centric networking, and in NDN in particular. The latter,
because, to the best of our knowledge, it represents the ﬁrst
attempt to identify and address covert ephemeral communi-
cation (CEC) in a CCN architecture. We believe that CEC
is relevant in some realistic scenarios, e.g.:
1. In tightly-controlled environments, where mandatory
access control is in place (e.g., in the military), CEC
can be used to exﬁltrate sensitive information, possibly
collected by malware. Ephemeral nature of published
content makes subsequent forensic analysis diﬃcult.
2. In countries with oppressive governments, civil rights
activists can covertly communicate to coordinate and
exchange information. CEC oﬀers plausible deniabil-
ity.
Exploring CEC is an important step towards understanding
the consequences and features of NDN, regardless of whether
it sees limited deployment (e.g., as an overlay on top of
IP) or widespread adoption (i.e., as a replacement for IP).
Furthermore, while existing covert channels rely on state
on the end-nodes, usually held by a speciﬁc applications
(e.g., Skype) [19], this paper shows how to construct covert
channels at the network architecture level, i.e., independently
of any particular application.
With this motivation in mind, we design several protocols
for exchanging covert ephemeral messages (CEMs) between
a single sender and one or more receivers. We perform ex-
tensive evaluation of our techniques on a LAN and on a
geographically distributed NDN testbed. Our experiments
conﬁrm that CEC is indeed possible, and show that our
techniques provide high bandwidth and low error rate.
Organization. We begin with the overview of NDN in Sec-
tion 2. Then, Section 3 introduces our system model. Delay-
based CEC mechanisms in Section 4 and common-preﬁx-
based CEC techniques are presented in Section 5. Section 6
discusses sources of error and error handling. Experimental
results are described in Section 7. Next, security analysis is
discussed in Section 8. Section 9 reviews related work and
the paper concludes with Section 10.
2. NDN OVERVIEW
This overviews NDN; readers familiar with NDN may skip
this section without loss of continuity.
NDN is a networking architecture based on named con-
tent. Content is requested via interests, and delivered in
content packets [8]. Content packets include a name, a pay-
load and a digital signature computed by the content pro-
ducer.1 A name has one or more components that have
a hierarchical structure.
In NDN notation, “/” separates
name components, e.g., /cnn/politics/frontpage. Con-
tent is delivered to consumers only upon an explicit re-
quest, which reﬂects either the full name of a particular
content or a preﬁx thereof, e.g., /cnn/politics is a pre-
ﬁx of /cnn/politics/frontpage. In case of multiple con-
tent packets under a given name (or preﬁx), optional control
information can be carried within the interest to restrict de-
sired content. If no additional information is provided, pro-
ducers and routers return arbitrary content packets match-
ing the request (preferably, from a local cache).
1Content packets also carry other ﬁelds not relevant to this
paper, which we omit.
Upon receiving an interest, if no local copy of desired con-
tent is available, an NDN router forwards the interest to-
wards the content producer responsible for the requested
name, using name preﬁxes (instead of today’s IP address
preﬁxes) for routing. Each NDN router maintains a Pending
Interest Table (PIT) – a lookup table containing outstanding
[interest, arrival-interfaces] entries. When an NDN router
receives an interest for content not in its cache, it looks up
its PIT to determine whether another interest for the same
name is currently outstanding. There are three possible out-
comes: (1) If the same name is already in the router’s PIT
and the arrival interface of the present interest is already in
the set of arrival-interfaces of the corresponding PIT entry,
the interest is discarded. (2) If a PIT entry for the same
name exists, yet the arrival interface is new, the router up-
dates the PIT entry by adding a new interface to the set.
The interest is not forwarded further. (3) Otherwise, the
router creates a new PIT entry and forwards the present in-
terest. We refer to (1) and (2) as PIT hit, and to (3) as PIT
miss.
Upon receipt of the interest, the producer injects a match-
ing content packet into the network, thus satisfying the in-
terest. The requested content is then forwarded towards the
consumer, traversing – in reverse – the path of the preceding
interest. Each router on this path deletes the PIT entry cor-
responding to the satisﬁed interest. In addition, each router
caches a copy of forwarded content in its local cache.
Unlike their IP counterparts, NDN routers can forward
interests out on multiple interfaces simultaneously. This is
done in order to maximize the chances of quickly retrieving
requested content. A router that receives an interest for
already-cached content does not forward the interest further;
it simply returns cached content and retains no state about
the interest.
Not all interests result in content being returned. If an
interest encounters either a router that cannot forward it
further, or a content producer that has no such content, no
error packets are generated. PIT entries for unsatisﬁed in-
terests in intervening routers are removed after a predeﬁned
expiration time. The consumer can choose whether to re-
send the same interest after a timeout.
3. SYSTEM MODEL
A CEC system involves a sender (Snd) and one or more re-
ceivers (Rcv). Snd wants to covertly publish a time-bounded
(ephemeral) message M , while Rcv wants to retrieve it. A
time-bounded message can only be read for a given period of
time [5], after which it becomes unavailable, i.e., it expires.
Depending on the scenario, the action of retrieving a CEM
either makes it expire immediately, or “refreshes” it, hence
deferring its expiration.
Snd and Rcv are not allowed to communicate directly. For
example, the Internet provider of Snd and Rcv might moni-
tor all activity between its users. Moreover, Snd and Rcv are
not allowed to use services (such as email or on-line forums)
to exchange content indirectly. Snd and Rcv have access to
a producer (Pr), which is unaware of Snd and Rcv’s intent to
communicate, and only hosts content that can not be mod-
iﬁed by consumers. All packets to and from Pr are routed
through an NDN router (Rt), that caches all content packets
it forwards. At ﬁrst we will assume that Rt is Snd and Rcv’s
ﬁrst-hop router. We later relax this assumption, allowing Rt
16to be an arbitrary number of hops away from both. Figure 1
depicts our model.
We assume that Snd and Rcv have tightly synchronized
clocks.2 We believe that this assumption is realistic: two
parties can use NTP servers or GPS devices to synchro-
nize their clocks accurately,
i.e., within 500 ns to a few
ms, depending on the protocol [27]. Our experiments, de-