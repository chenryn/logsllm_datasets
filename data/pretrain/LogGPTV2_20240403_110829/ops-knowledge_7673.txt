User: How to use Ansible to automate deployment and configuration management? Please explain the basic concept and usage of Ansible, and provide sample code for Ansible playbook.
Assistant: Ansible is an IT automation tool for automatically deploying, configuring and managing IT infrastructure. It communicates using SSH and uses YAML format to describe tasks and execution steps. Specifically, Ansible includes the following basic concepts and usages: 1. Control Node: The control node refers to the host on which Ansible runs, and it can be any computer with SSH connections to other hosts. 2. Managed Node: The managed node refers to the computers that need to be managed, and they are controlled and managed by the master through SSH. 3. Playbook: Playbook is a file stored on the master machine, which defines a task list for each controlled machine and describes how the master machine communicates with the controlled machine through SSH. Playbooks are written in YAML format. 4. Module: A module is a reusable block of code in Ansible to perform a specific task. Ansible provides many built-in modules, for example, file is used to manage files, yum is used to manage software packages, apt is used for Debian systems, user is used to manage users, and so on. 5. Variables: Variables are data objects defined in Playbook. Variables can be defined at the playbook, host or group level and are available globally. 6. Roles: A role is a special organizational structure that can be included in a Playbook to implement a reusable task list. A role can contain information such as task lists, variables, files, etc., and multiple roles can be combined together. Here is a simple Ansible Playbook example: ``` --- - name: Install and configure Apache hosts: webservers become: true tasks: - name: Install Apache yum: name: httpd state: present - name: Configure Apache template: src: /etc/httpd/conf/httpd.conf.j2 dest: /etc/httpd/conf/httpd.conf mode: '0644' notify: Restart Apache handlers: - name: Restart Apache service: name: httpd state: restarted ``` The name of this Playbook is "Install and configure Apache" and it will be executed in the group named "webservers". Through become: true, let the master switch to the root user when running the task. This Playbook has two tasks. The first task is to install Apache using the yum module. The second task is to use the template module to create an Apache configuration file from the master computer's template file, and use 0644 permissions to set the target location on the controlled computer. When that task is complete, it notifies a handler called "Restart Apache" to ensure that the Apache service is restarted. Handlers are special tasks that are executed after a task completes and restart the Apache service using the service module. With Ansible Playbook, it is easy to perform configuration management and automated deployment across multiple servers.