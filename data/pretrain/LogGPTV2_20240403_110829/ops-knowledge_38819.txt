I have developed a Python program using the `struct` module to save data into files. The data structure consists of a 300-character header followed by 36,000 integer-float pairs. This setup works correctly on Ubuntu, and I can unpack the data for use in my PHP environment.

In PHP, I load the file content into a string and use the `unpack` function to process it. I observed that each integer-float pair consumes 8 characters in the PHP string.

However, when I moved this setup to a Windows environment, the data did not occupy the same amount of space, and attempting to unpack the data in PHP resulted in misalignment with the binary string.

Is there a way to configure the `struct` module in PHP to produce the same output as on Ubuntu, considering the differences in architecture?

I have experimented with different alignment options in the `struct` format strings (using `<`, `>`, `!`, and `=`), but the issue persists. Both my development environment on Ubuntu and the server are 64-bit systems. I have also tried using both 32-bit and 64-bit versions of Python on the Windows server.

Upon further investigation, it turned out that the issue was caused by the use of Python's `gzip` compression, which shifted the bytes and corrupted the data.