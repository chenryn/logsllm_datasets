### Device Comparison and Security Reevaluation

Compared to previous AR devices that lack support for precise world anchoring, we highlight the importance of reassessing existing design practices for various security primitives as they are implemented in mixed reality.

### 9. Related Work

#### General Device Pairing
Comprehensive overviews of various device pairing methods and their usability evaluations can be found in [15, 16]. A recent study extensively surveyed multiple shared secret confirmation steps for mobile devices and evaluated users' ability to detect potential attacks [24]. However, since neither user can observe the output of both headsets, we cannot directly apply these findings to the AR headset scenario. Additionally, unlike previous work where users might copy values from one device to another, we assume that an adversary can fully eavesdrop, even on out-of-band channels. Given the proliferation of AR headsets, each with multiple front-facing cameras, this assumption is necessary.

Despite earlier proposals, such as simultaneously shaking mobile phones to distribute shared secrets [21], there is no straightforward way to expose two AR headsets to the same external conditions without a co-located adversary easily replicating them. Even a simple comparison of visual outputs from two headsets is non-trivial, making the problem of pairing AR headsets a likely focus of future security and usability research.

#### Securing Augmented Reality
The general topic of privacy and security in AR devices has recently gained attention. Researchers have outlined key areas of interest [18] and discussed how to ensure that AR output on multi-app devices does not become dangerous [19]. Privacy research has focused on building a hierarchy of visual recognizers to protect sensitive contexts [14] and providing privately-preserving support for 3D browsers [26]. A recent paper also explored the system and implementation-level security of existing "AR browsers," which overlay 2D objects over a mobile device's camera output [22].

#### Secure Pairing of AR Headsets
Given the novelty of AR headsets and the recent availability of mixed reality headsets, the topic of AR pairing has not been extensively explored. One related paper [9] takes a different approach by building a hardware prototype that assumes future AR headsets will have multiple antennas for precise wireless localization. To our knowledge, this paper is the first security-focused research using Microsoft’s HoloLens device to achieve usable and secure pairing of two AR headsets. It also proposes a practically achievable AR headset pairing protocol that leverages the existing capabilities of the HoloLens device.

### 10. Conclusion

In this paper, we introduce HoloPair, a protocol and system for secure and usable pairing of augmented reality headsets. We built a working prototype using two Microsoft HoloLens headsets, full-fledged AR devices recently available to developers in the US and several other countries. Through a user study with N=22 participants, we evaluated the feasibility of the proposed protocol in terms of security guarantees, usability, and prototype performance.

The experimental evaluation of the HoloPair prototype shows that participants with little or no prior experience using AR headsets can achieve high rates of detecting attack simulations or successfully pairing when no attack is simulated. The system is highly usable, as evidenced by short pairing times and high average scores on the usability questionnaire, while having low computational requirements.

As shared collaboration involving both holographic and real-world objects is central to current and future AR applications, the ability for developers to secure direct connections between their users is crucial. To this end, we have made our full prototype implementation and source code available online, and we are in the process of integrating our solution into the official HoloLens development kit. Given the lack of practical proposals or implementations for secure device pairing despite the rapid growth of AR platforms, this work represents an important step toward making future AR interactions secure and private from the start.

### References

[References listed as provided]

### Appendix

#### A. SUS Questions

The System Usability Scale (SUS) [5] is a widely used 10-statement questionnaire with Likert-scale answers (0 - "Strongly disagree" to 4 - "Strongly agree"). The overall usability score for an individual user is computed by summing the answers to odd-positioned questions (Q1, Q3, ...) and subtracting the answers to even-positioned questions (Q2, Q4, ...). The score is then centered and scaled to [0, 100] by adding 20 and multiplying the resulting value by 2.5.

The 10 SUS questions are:
1. I think that I would like to use this system frequently.
2. I found the system unnecessarily complex.
3. I thought the system was easy to use.
4. I think that I would need the support of a technical person to be able to use this system.
5. I found the various functions in this system were well integrated.
6. I thought there was too much inconsistency in this system.
7. I would imagine that most people would learn to use this system very quickly.
8. I found the system very cumbersome to use.
9. I felt very confident using the system.
10. I needed to learn a lot of things before I could get going with this system.

#### B. Alternative Shared Secret Confirmation Steps

HoloPair does not rely on any specific form of the shared secret confirmation step. Consequently, we designed, developed, and evaluated three different versions of this confirmation step, shown in Figure 9. We now describe the initial two schemes tested before deciding to focus on the final scheme (based on virtual pipes) described throughout the paper.

**a. Cubes:**
Our initial design involved a shared keyboard where one user touches a sequence of colored cubes, and the other observes and verifies the gestures. As shown in Figure 9a, UB looks at the sequence of colors at the bottom of their screen and touches one of the four larger cubes to communicate the value of the weak-hash generated on their headset. UA’s device independently generates the same sequence and displays the four larger cubes at the same location. UA verifies if UB’s sequence matches, confirming the authenticity of the exchanged public keys.

This results in a total of \(4^N\) different configurations for a sequence of length \(N\), and the expected probability of an attacker successfully guessing an alternative pair of public keys is:
\[ P_a(N) = \frac{1}{4^N} \]

**b. Cubes with Arrows:**
In an extension of the first variant, shown in Figure 9b, the weak-hash generated on both devices specifies one of four directions for each color in the sequence. UB must touch the larger cube and make a hand movement in the indicated direction. This version increases the number of possible weak hashes to \( (4 \times 4)^N \), reducing the probability of a successful attack to:
\[ P_b(N) = \frac{1}{(4 \times 4)^N} \]

This additional hand movement does not significantly impact usability but greatly enhances security.