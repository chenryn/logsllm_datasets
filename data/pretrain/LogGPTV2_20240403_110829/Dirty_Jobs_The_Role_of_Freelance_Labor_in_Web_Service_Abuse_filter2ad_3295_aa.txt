title:Dirty Jobs: The Role of Freelance Labor in Web Service Abuse
author:Marti Motoyama and
Damon McCoy and
Kirill Levchenko and
Stefan Savage and
Geoffrey M. Voelker
Dirty Jobs: The Role of Freelance Labor in Web Service Abuse
Marti Motoyama Damon McCoy Kirill Levchenko
Stefan Savage Geoffrey M. Voelker
Department of Computer Science and Engineering
University of California, San Diego
Abstract
Modern Web services inevitably engender abuse, as at-
tackers ﬁnd ways to exploit a service and its user base.
However, while defending against such abuse is gener-
ally considered a technical endeavor, we argue that there
is an increasing role played by human labor markets. Us-
ing over seven years of data from the popular crowd-
sourcing site Freelancer.com, as well data from our own
active job solicitations, we characterize the labor market
involved in service abuse. We identify the largest classes
of abuse work, including account creation, social net-
working link generation and search engine optimization
support, and characterize how pricing and demand have
evolved in supporting this activity.
1
Today’s online Web services—search engines, social net-
works, and the like—create value for their users by help-
ing them ﬁnd and interact with content generated by
other users. While these services typically rely on adver-
tising for their revenue, their open access and reliance on
user-generated content create powerful opportunities for
abusers to fabricate secondary, extremely cheap advertis-
ing channels as well. The result is well-known: Web-mail
spam, polluted search results, “friend” requests from fake
persons and so on. These activities are broadly termed
service abuse: they exploit some feature of a public ser-
vice for an attacker’s ﬁnancial gain at the expense of the
service provider.
Introduction
Each Web service provider aims to prevent such activi-
ties and preserve the value of their advertising enterprise.
To that end, most Web sites include extensive contracts
declaring limits on the way their services may be used.
However, implicit threats of legal action rarely deter at-
tackers, and so the provider must rely on a broad range
of defenses and countermeasures to enforce their terms
of service. While the technical details of this “arms race”
are themselves interesting, they are ultimately just symp-
toms of this larger struggle over controlling who may
monetize access to a site’s users.
Thus, in this paper we do not focus deeply on the un-
derlying technical attacks themselves, but rather explore
the human labor markets in which these capabilities are
provided. Though not widely appreciated, today there
are vibrant markets for such abuse-oriented services and
in a matter of minutes, one can buy a thousand phone-
veriﬁed Gmail accounts for $300 or a thousand Facebook
“friends” for $26. Much of this activity occurs on free-
lance work sites in which buyers “crowdsource” work
by posting jobs they need done, and globally distributed
workers bid on projects they are willing to take on.1
There are multiple advantages in this approach. First,
many anti-abuse countermeasures are designed to de-
tect or deter mechanistic automation and can be by-
passed through the use of low-cost human labor. Perhaps
the best known example of this phenomenon is found
in CAPTCHAs, human-solvable puzzles designed to be
challenging for automated solvers. While these puzzles
are speciﬁcally designed to prevent computer-based ser-
vice abuse, we have previously documented how a robust
CAPTCHA-solving marketing has emerged by aggregat-
ing large amounts of cheap human labor instead [12].
A second advantage is that the crowdsourcing medium
allows innovative attackers to quickly explore differ-
ent schemes for evading anti-abuse defenses (due to the
agility of a large contract labor pool). Finally, once a
new attack scheme becomes sufﬁciently popular to com-
moditize, competitive pressures naturally drive workers
to develop the most efﬁcient means of satisfying the
demand. Indeed, eventually the most popular activities
(e.g., CAPTCHA-solving or phone veriﬁed accounts)
can support their own branded retail services outside the
scrum of the spot labor market.
In this paper, we characterize the abuse-related labor
on Freelancer.com, one of the largest and most popu-
lar freelancer sites. Using almost seven years of historic
data, and a range of our own contemporary work solici-
tations, we examine four classes of jobs:
! Account registration and veriﬁcation,
! SEO content and link generation,
! Ad posting and bulk mailing,
! Social network linking
Each of these represents a kind of service abuse, in-
corporating manual labor to bypass existing controls,
and each is ultimately a building block in some larger,
economically-driven, advertising enterprise.
1To be clear, while the majority of such work is legitimate—
anything from corporate logo design to software development—a large
minority serves the online service abuse ecosystem.
The rest of this paper is organized as follows. Section 2
describes crowdsourcing and the Freelancer.com service
in particular. In Section 3 we explain our methodology,
the data we have gathered and the different categories
of jobs in our study. Section 4 explains, as case studies,
several components of the abuse value chain that have
become semi-commoditized, followed by a characteri-
zation of the Freelancer labor market in Section 5. Sec-
tion 6 places these abuse activities into a larger, interre-
lated context and Section 7 summarizes our ﬁndings.
2 Background
Outsourcing has long been a cost-cutting strategy in
developed economies—pushing out key business pro-
cesses to exploit the efﬁciencies or lower labor costs of
third-party service providers. A more recent innovation
is “crowdsourcing”, further unbundling labor from any
structured organization and leveraging the broad connec-
tivity provided by the Internet. In this model, individuals
participate in the labor force as free agents, responding to
open calls for work on a piecework basis. In many cases,
crowdsourcing is built on free labor (e.g., for many con-
tributors to open-source projects, or in von Ahn’s sem-
inal ESP game [3]). However, fee-based crowdsourcing
sites quickly emerged, the most famous being Amazon’s
Mechanical Turk service. Using such services, employ-
ers post requests for service at a particular price, while
laborers in turn can “solve” the subset of requests that
appeal to them.
However, crowdsourcing also presents a number of
concerns. First, as an employment vehicle, crowdsourc-
ing is controversial, since critics claim its pure free-
market approach to labor has the potential to be highly
exploitative, particularly of those in developing coun-
tries; one recent analysis estimates that
the average
hourly wage on Mechanical Turk is $5/hour [8]. More-
over, even on the employer side of the equation, crowd-
sourcing can be problematic since—absent any strong
reputation mechanism—there may be little incentive for
workers to provide quality work-products. Consequently,
third-party services, such as crowdﬂower, have emerged
that trade cost for data quality by replicating work re-
quests and voting among them [1].
However, a less appreciated negative impact of this
ecosystem is how anonymous access to cheap aggregated
labor impacts the security of existing of Internet services.
Indeed, as we show in this paper, the crowdsourced mar-
ket for Web service abuse labor is thriving.
Much of this activity takes place on “freelancing”
sites, in which employers post jobs and select individ-
ual workers based on their bids and bilateral negotiation.
There are a large number of such sites with the most pop-
ular being Freelancer, Elance, RentACoder, Guru, and
oDesk. In this paper we speciﬁcally examine the activ-
ity at Freelancer.com, one of the oldest and largest sites,
claiming roughly two million employers and workers [6]
from 234 different geographic regions and with close to
nine hundred thousand projects posted on the site since
2004. We speciﬁcally chose Freelancer because the site
offers an open API for querying information about past
jobs and users. We have also gathered smaller amounts
of data from most of the other large freelancer sites (i.e.,
via scraping) but since the activity is extremely similar
across sites we chose to focus on the one for which our
data was comprehensive.
Visitors to Freelancer must register and select a handle
by which they are visible to other users. The only due
diligence concerning a user’s identity is a requirement
to have a valid email address. The site does offer “skills
tests” for a fee, by which individual users may demon-
strate proﬁciency in various skills and earn “badges” vis-
ible on their proﬁle. There is no discrimination between
employers and workers and any user can participate on
either or both sides of the labor market.
To post a project on the site, the project poster, or
buyer, must pay a $5 fee, which is refunded once a
worker is selected. Buyers may choose to pay an addi-
tional fee of $14 to have their jobs “featured”, mean-
ing that they are listed towards the top of the job list-
ings. Workers independently scan these jobs listings to
ﬁnd projects matching their particular skill sets and then
place bids (a combination of structured ﬁelds, such as
dollar amounts, and freeform text). Buyers then select
the workers who are most appropriate for their tasks.
Once workers are chosen, Freelancer charges either $3
or 3% of the total project cost to the buyers, depending on
whichever amount is higher (Freelancer acts as the mid-
dleman in the transaction, using online payment methods
such as PayPal, Moneybookers and Webmoney). How-
ever, some less scrupulous buyers are reputed to simply
cancel their orders and settle with workers out-of-band.
Finally, while job postings are effectively “broadcast”,
there are a range of such posts that identify themselves
as private by speciﬁcally identifying the workers they are
interested in employing.
3 Data Overview
In this section, we describe our methodology for collect-
ing data on Freelancer job activity and categorizing the
jobs into various kinds of “dirty” tasks.2
3.1 Data Collection Methodology
Freelancer.com exports an API for programmatically
querying for information regarding projects and users.
Using this API, we implemented a crawler to collect both
2While space prevents a detailed description of the oversight and
ethical considerations here, our protocols were reviewed by our Human
Research Protections Program and we consulted with key brand holders
in advance of any active purchasing activity.
Activity
Projects
Projects w/ Selected Workers
Project Bids
Active Users
Buyers Only
Workers Only
Buyer & Workers
Count
842,199
388,733
12,656,978
815,709
179,908
590,806
44,995
(46%)
(22.1%)
(72.4%)
(5.5%)
Table 1: Summary of Freelancer activity between February 5,
2004 and April 6th, 2011.
contemporary and historical
information about Free-
lancer activity. We ran the crawler from December 16,
2010 through April 6, 2011 to minimize load on the
site. For historical data, we observed that Freelancer
uses monotonically increasing IDs for both projects and
users. To crawl all projects over time, we iterated through
the entire available project ID space, which at the time
ranged from 1–1,015,634. As a result, the job postings in
our data set represent all of the jobs that were viewable
through the API. We derived the set of user IDs based
upon the set of projects, including any user associated
with a project as buyer, bidder, or worker.3
For all crawled projects, we extracted the project de-
tails and the corresponding project bids, as well as the
buyer, bidders, and selected workers who were awarded
the projects (if any). For all users we encountered, we
downloaded their public account metadata and feedback
comments.
3.2 Data Summary
Starting with the earliest project posted on February 5,
2004 at 12:28 EST, we collected data through April 6th,
2011, capturing over seven years of activity. Table 1 sum-
marizes this data set. During this time, 842,199 jobs were
posted to Freelancer4 and 815,709 users were active on
the site. Roughly 46% of the posted jobs report a worker
selected for the job. This number represents a lower
bound on the number of job transactions; a buyer and
a worker will sometimes use Freelancer to rendezvous,
but will negotiate the transaction through private mes-
saging and, thus, never report a selected worker. Among
all users associated with at least one project, 22.1% were
buyers only, 72.4% were bidders/workers only, and 5.5%
served as both.
3Unlike projects, we did not exhaustively collect information for all
two million users by crawling the user ID space since the majority of
users do not appear to be active on the site.
4Note the discrepancy of 173,435 jobs between the maximum ID
and the number of postings we obtained through the API. When crawl-
ing these IDs, Freelancer’s API returned an error indicating that the ID
was invalid. We assume that invalid IDs are jobs that never existed or
have been deleted—which, according to complaints, happens for only
a select number of jobs that egregiously violate Freelancer rules.
Figure 1: Growth in Freelancer activity over time. Numbers in
parentheses in the legend denote the largest activity in a month.
Activity on Freelancer has grown steadily over time.
Figure 1 shows the number of jobs offered and the num-
ber of bids made per month, as well as the number of
new buyers and bidders per month. To overlay and com-
pare the curves, we normalized them to their maximum
monthly value as listed in Table 1. The curves all show a
drop in activity in December 2006 (the reason for which
we have not been able to determine). After this point,
Freelancer experiences strong linear growth in buyers
and bidders and their associated posting and bidding ac-
tivity. Freelancer’s job market is healthy and growing.
Work posted by a steadily increasing number of buyers
(5,000 new buyers a month on average in 2010) has been
satisﬁed by an equally steadily increasing supply of bid-
ders (15,000 new bidders/month).
3.3 Categorizing Jobs
Our ﬁrst step in understanding Freelancer activity is to
categorize the types of jobs found on the site. We use a
two-step process for this categorization. We ﬁrst manu-
ally browse sampled projects to identify a meaningful list
of job categories. We then use a combination of keyword
matching and supervised learning to identify jobs from
the entire Freelancer corpus that fall into the categories.
From browsing random job postings, gauging the in-
terest level in various tasks from observed bidding ac-
tivity, and incorporating awareness of the larger under-
ground cybercrime ecosystem, we identiﬁed 22 types of
jobs falling into six categories. To establish a baseline of
the prevalence of these types of jobs, we manually in-
spected a random sample of 2,000 jobs, tagging each job
with a category.
Table 2 summarizes the list of categories and the dis-
tribution of jobs that fall into each category from our ran-
dom sample. Note that a job may be tagged under multi-
ple categories; for example, social bookmarking jobs for
search engine optimization (SEO) usually also require
account creation. Legitimate projects comprise 65.4% of
these jobs and primarily involve Web-related program-
ming and content creation tasks. We include private jobs,
corresponding to projects targeted to one speciﬁc user, in
the legitimate job class, since we typically do not know
 0 0.2 0.4 0.6 0.8 120042005200620072008200920102011Relative to Max MonthPostings(28,416)Bids(387,501)New Buyers(8,663)New Bidders(22,443)Category
Legitimate [§A.1]
Accounts [§A.2]
SEO [§A.3]
Spamming [§A.4]
Job Type
Web Design/Coding
Multimedia Related
Private Jobs
Desktop/Mobile Applications
Legitimate Miscellaneous
Account Registrations
Human CAPTCHA Solving
Veriﬁed Accounts
SEO Content Generation
Link Building (Grey Hat)
Link Building (White Hat)
SEO Miscellaneous
Ad Posting
Bulk Mailing
Description
Create, modify, or design a Web site
Complete multimedia-related task (e.g., Flash)
Jobs designated for a particular worker
Create a desktop or mobile application
Miscellaneous jobs
Create accounts with no deﬁned requirements
Requests for human CAPTCHA solving
Create veriﬁed accounts (e.g. phone)
Requests for SEO content (e.g., articles, blogs)
Get backlinks using grey hat methods
Get backlinks using no grey/black hat methods
Nonspeciﬁc SEO-related job postings
Post content for human consumption
Send bulk emails
OSN Linking [§A.5] Create Social Networking Links Get friends/subscribers/fans/followers/etc.
Misc [§A.6]
Abuse Tools
Clicks/CPA/Leads/Signups
Manual Data Extraction
Gather Email/Contact Lists
Academic Fraud
Reviews/Astroturﬁng
Other Malicious
Tools used for abuse (e.g., CAPTCHA OCR)
Get clicks, emails, zip codes, signups, etc.
Manually visit websites and scrape content
Research contact details for targeted people
Write essays, code homework assignments, etc.
Create positive reviews