# Genymotion vs. Android 模拟器

## 作者: Sumit Gupta
### 分类: 技术
### 发布日期: 2017-10-23
### 标签: Android, Genymotion

---

**摘要:**
长久以来，关于选择Android模拟器还是Genymotion的争论不断。许多讨论最终倾向于支持Genymotion。本文基于常见的使用场景收集的数据，对Android模拟器和Genymotion进行全面评估。

**结论剧透:** 配置得当时，Android模拟器比Genymotion更快。

---

## 引言

一直以来，关于选择Android模拟器或Genymotion的争议不绝于耳。大多数讨论最后都倾向于支持Genymotion。然而，根据我周围最常见的使用情况所收集的数据，我将与Genymotion一起全面评估Android模拟器。

**结论:** 当配置正确时，Android模拟器的速度超过Genymotion。

**测试环境:**
- 使用带有Google API的x86（32位）镜像
- 3GB RAM
- 四核CPU
- 测试平台：2015年中期的MacBook Pro

> * 哈，很高兴我们知道了最终结果。
> * 现在，让我们深入探讨。

**免责声明:**
- 我已经测试了通常情况下运行测试的一般情景。
- 所有基准测试均在2015年中期的MacBook Pro上完成。
- 文中提到的Genymotion指的是Genymotion Desktop版本。
- 我并不是说Genymotion不合适，但在某些情况下，运行测试会比某些Android模拟器慢。

## 背景

过去，Android模拟器是唯一的选择。但它们速度极慢，这主要是由于架构问题——在x86机器上运行ARM模拟器，每个指令都需要从ARM转换为x86架构，导致其速度非常慢。

随着Android x86镜像的出现，速度有所提升，因为不再需要进行架构转换。然而，Android模拟器仍然较慢且存在一些问题。随后，Genymotion应运而生，它是一个基于VirtualBox的Android虚拟机，相比传统的Android模拟器更稳定和快速。

## 当前状况

我在持续集成基础设施和开发机器上使用Genymotion。目前的任务是摆脱这些工具，并转向Android模拟器。主要原因是授权费用较高。

**为什么选择Android模拟器？**

尽管Android模拟器一度被认为速度慢且有bug，但经过深入研究后发现，它实际上具有优势。我们的应用场景是对应用程序进行集成测试（主要是Espresso）。应用中有超过1100个测试用例，Genymotion需要大约23分钟才能运行完所有测试。

此外，Genymotion还存在以下问题：
- 有限的命令行工具（如GMTool）
- 由于内存问题，需要定期重启，这在大规模CI环境中是一项手动任务

**进入Android模拟器**

首先，尝试设置一个合适的配置可能会让人感觉像是在赛百味餐厅里点餐一样复杂。最大的问题是选择x86还是x86_64，以及是否需要Google API。

通过一系列研究和基准测试，我们得出以下结论：
- **获胜者:** 带有Google API的x86镜像
- **原因:** 
  - x86_64比x86慢28.2%
  - 使用Google API的模拟器更加稳定，不容易崩溃

**重要细节:**
- 使用带有Google API的Nexus 5镜像
- 给模拟器分配较少的内存会导致很多Google API崩溃，因此设置了3GB RAM
- 模拟器配置为四核
- 在主机上安装HAXM

## 基准测试结果

![Genymotion and Android Emulator Espresso Benchmark](/data/attachment/album/201710/22/110217by598s9sp0s0519e.png)
![Linpack](/data/attachment/album/201710/22/110218kmkrgffoo07k8kfz.png)
![Geekbench 4](/data/attachment/album/201710/22/110218xd7bue7u8sy1bvtb.png)

从基准测试结果可以看出，除了Geekbench 4外，Android模拟器在其他方面均优于Genymotion。这更像是VirtualBox击败了QEMU。

**欢呼模拟器之王**

我们现在拥有更快的测试执行时间、更好的命令行工具。最新的[Android模拟器](https://developer.android.com/studio/releases/emulator.html)创造了新的记录，包括更快的启动时间等。

谷歌一直在努力改进Android模拟器。如果你还没有使用过，建议你试一试，或许能为你节省一些成本。

**其他尝试:**

我还尝试在AWS上运行[Android-x86](http://www.android-x86.org/)镜像，但未能成功。虽然能够在vSphere ESXi Hypervisor中运行，但在AWS或其他云平台上无法运行。如果有人知道原因，请在评论区留言。

**PS:** [VMWare现在可以在AWS上使用](https://aws.amazon.com/vmware/)，因此在AWS上运行[Android-x86](http://www.android-x86.org/)毕竟是可能的。

---

## 作者简介

嗨，我的名字是Sumit Gupta。我是来自印度古尔冈的软件/应用/网页开发人员。我喜欢技术并一直对其着迷。我已经工作了三年多，但仍有很多要学习的地方。他们不是说如果你有知识，就让别人点亮他们的蜡烛吗？

当编译代码时，我喜欢阅读文章或听音乐。如果你想联系我，以下是我的社交信息和[email](PI:EMAIL)。

---

via: 
- 作者: [Sumit Gupta](https://www.plightofbyte.com/about-me)
- 译者: [geekpi](https://github.com/geekpi)
- 校对: [wxy](https://github.com/wxy)
- 本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出