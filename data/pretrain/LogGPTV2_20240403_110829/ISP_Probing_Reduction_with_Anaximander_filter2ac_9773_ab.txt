1273
33,473
7922
2856 Stub
8764
9198
5400
13789
5432
1241
2611
224
6,959
293
881
2,000
235
394
472
176
506
601
2,985
530
4,931
1,477
1,064
831
56
1,122
981
124
743
52
402
760
23,356
2,381
93
353
395
60
172
224
124
417
107
40
95
861
310
204
156
11
209
91
33
132
5
68
93
1,054
37
7
44
39
7
4
16
5
8
0.49%
0.22%
0.69%
1.83%
0.83%
0.86%
1.70%
0.01%
0.56%
0.74%
0.00%
1.84%
0.08%
0.18%
0.69%
0.77%
12.46%
22.93%
85.13%
16.46%
65.26%
80.25%
91.03%
77.97%
91.30%
832,968
832,808
831,530
830,610
829,468
829,309
829,002
828,926
771,902
752,128
21,823
850,999
845,664
814,703
474,677
163,000
4,423
3,149
1,748
1,628
685
157
145
59
23
Therefore, we used Midar [22], a tool based on similarities in the IP-ID ﬁeld,
to perform alias resolution (i.e., the process of identifying IP addresses that
belong to the same router [21], leading so to a router-level topology) on our set
of addresses. We ran Midar between April 29th, 2021 and May 1st, 2021. Out
of the 900k addresses discovered by TNT, Midar found 45,977 routers involving
147,633 addresses.
Additionally, we used Apple [28] (between May 10th, 2021 and May 12th,
2021), a technique for resolving router IP aliases that complements existing
446
E. Marechal et al.
techniques, such as Midar. We deployed Apple on EdgeNet [39], a Kubernetes
cluster dedicated to network and distributed systems research, and were able
to ﬁnd 26,729 routers involving 87,532 addresses. In combination with Midar,
we were thus able to further reﬁne our alias resolution with a total of 57,355
routers involving 192,320 addresses, which represents an increase in coverage of
25% compared to the initial results with Midar.
Besides, we used BGPStream [33], an open-source software framework to
easily acquire live and historical BGP data. The tool provides access to BGP
views from all around the world, coming from the RouteViews [38] and RIPE
RIS [43] projects. We collected 44 BGP tables (from as many collectors) in the
middle of the TNT campaign, on April 20th, 2021.
Table 1 provides global statistics about the sample of 25 ASes selected for
this study and discussed in the paper. We chose ASes with varying sizes and
roles in the Internet (11 Tiers 1, 5 Transits, and 9 Stubs) in order to be as
representative as possible.
4 Rocketfuel Limits
The main contribution of Rocketfuel was to propose and deploy the pioneer
measurement techniques to infer ISP router-level maps. The second challenge
was to use as few measurements as possible to speed up the campaign, not only
because of the limited capacity of legacy forwarding devices, but also because
ISPs (continue to) ﬁlter probes using default rate limiters (e.g., only small bursts
of ICMP replies are allowed) for both performance and security reasons. Addi-
tionally, ISPs are continuously subject to routing changes [30]. In this regard,
their approach was to ﬁrst exploit available routing information to select traces
likely to transit the ISP of interest, and second, to apply reduction techniques
based on IP routing properties to eliminate traces likely to follow redundant
paths in the ISP.
At the time, Rocketfuel was admittedly the best attempt at mapping an ISP,
even though it already suﬀered from some limits [42]. These issues had to do with
the inference of numerous false links, due, on the one hand, to the naive use of the
basic traceroute implementation (later replaced by Paris traceroute [2]), and
on the second hand, to using alias resolution techniques that are now obsolete.
Nowadays, Rocketfuel suﬀers from additional problems due to the massive
growth of the Internet during the last 20 years, along with all the changes that
came with it. More and more edge networks joined the Internet, the interconnec-
tions between core networks became denser (ﬂattening the Internet), and net-
works operational practices (such as the usage of TE, multi-homing, or provider
independent addresses [1]) have signiﬁcantly evolved and rely now on new tech-
nologies (e.g., MPLS or Segment Routing). Following this shift in paradigm,
while the core principles guiding Rocketfuel’s probing remains valuable concep-
tually, the set of tools and strategies applied on top of them became outdated.
In the next sections, we will review how Rocketfuel’s reduction techniques
(namely, Egress Reduction – Sect. 4.1 –, Next-hop AS Reduction – Sect. 4.2 –,
and Ingress Reduction – Sect. 4.3) are no more suited for today’s Internet.
4.1 Egress Reduction
Anaximander
447
Without going into all the details, Rocketfuel’s initial pool of targets is built from
BGP tables (i.e., Routing Information Bases – RIBs), that allow one to select
measurements expected to transit the ISP of interest. They call this technique
directed probing, and the number of directed preﬁxes for each AS can be found
in Table 1. Egress Reduction advocates that traces from the same ingress to
any preﬁx beyond the same egress should traverse the same path. Such traces
are thus redundant, and only one needs to be collected. But in order to ﬁnd
said egresses, Rocketfuel must conduct a pre-probing phase to discover the ISP’s
egress routers common to several preﬁxes.
This pre-probing stage is only launched on a subset of their initial pool of
targets, that they call the dependent preﬁxes. Dependent preﬁxes are preﬁxes
originated by the ISP of interest or one of its singly-home customers. Therefore,
by deﬁnition, all traceroutes to these preﬁxes (from anywhere in the network)
should transit the ISP. This allows them to launch their pre-probing phase from
a single monitor, with the guarantee that the probes will indeed go through the
ISP of interest.
Even though Egress Reduction is admittedly sound in principle, being able to
apply it and actually ﬁnd the egresses shared by several preﬁxes may prove to be
too costly for a marginal reduction not balancing the eﬀort. To demonstrate this,
we build the initial target pool from the RIBs (following Rocketfuel’s approach)
and compute the corresponding portion of dependent preﬁxes. The raw number
of targets in the pool, as well as the corresponding percentage of dependent
preﬁxes can be found in Table 1, in the “Raw number” and “Dependent” columns
respectively.
We can observe that the percentage of dependent preﬁxes greatly varies from
one AS to the other. For large Tiers 1, less than 1% of the targets could potentially
be reduced with Egress Reduction. This is not surprising given that Tiers 1 are
involved in almost all Internet traﬃc (in particular with thousands of customers)
and have numerous peering relationships. Additionally, the practice of multi-
homing has become more and more prominent, which further explains this very
small portion of dependent preﬁxes. For smaller Transit ASes, the potential
reduction can sometimes be slightly better, but is not a panacea either. And for
Stubs (or near-Stubs), the potential reduction is indeed greater (from 10% to
90%). However, given the already small number of targets in the pool, there is
no use in trying to reduce them further at the cost of additional probes during
the pre-probing phase.
All in all, Egress Reduction is not actually helpful. On the one hand, the
reduction potential it shows for small ASes does not actually lead to a great
saving in terms of absolute number of probes. And on the other hand, the gain
for large ASes looks negligible (less than 1%) with respect to the already large
number of probes required, as well as for the pre-probing stage.
448
E. Marechal et al.
4.2 Next-hop AS Reduction
The principle behind Next-hop AS Reduction is that the path through an ISP
usually depends only on the next-hop AS, not on the speciﬁc destination preﬁx.
According to this idea, only one trace from ingress router to next-hop AS is
likely to be valuable, which means that all preﬁxes sharing the same next-hop
AS could be reduced to a single probe.