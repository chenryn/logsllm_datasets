title:Log2vec: A Heterogeneous Graph Embedding Based Approach for Detecting
Cyber Threats within Enterprise
author:Fucheng Liu and
Yu Wen and
Dongxue Zhang and
Xihe Jiang and
Xinyu Xing and
Dan Meng
Log2vec: A Heterogeneous Graph Embedding Based Approach
for Detecting Cyber Threats within Enterprise
Fucheng Liu
Yu Wen∗
Dongxue Zhang
Institute of Information Engineering,
Chinese Academy of Sciences
Institute of Information Engineering,
Chinese Academy of Sciences
Institute of Information Engineering,
Chinese Academy of Sciences
Beijing, China
School of Cyber Security, University
of Chinese Academy of Sciences
Beijing, China
PI:EMAIL
Xihe Jiang
Institute of Information Engineering,
Chinese Academy of Sciences
Beijing, China
School of Cyber Security, University
of Chinese Academy of Sciences
Beijing, China
PI:EMAIL
Beijing, China
PI:EMAIL
Beijing, China
PI:EMAIL
Xinyu Xing
The Pennsylvania State University
Pennsylvania, USA
JD Security Research Center
California, USA
PI:EMAIL
Dan Meng
Institute of Information Engineering,
Chinese Academy of Sciences
Beijing, China
PI:EMAIL
ABSTRACT
Conventional attacks of insider employees and emerging APT are
both major threats for the organizational information system. Ex-
isting detections mainly concentrate on users’ behavior and usually
analyze logs recording their operations in an information system.
In general, most of these methods consider sequential relationship
among log entries and model users’ sequential behavior. However,
they ignore other relationships, inevitably leading to an unsatisfac-
tory performance on various attack scenarios.
We propose log2vec, a heterogeneous graph embedding based
modularized method. First, it involves a heuristic approach that
converts log entries into a heterogeneous graph in the light of di-
verse relationships among them. Next, it utilizes an improved graph
embedding appropriate to the above heterogeneous graph, which
can automatically represent each log entry into a low-dimension
vector. The third component of log2vec is a practical detection algo-
rithm capable of separating malicious and benign log entries into
different clusters and identifying malicious ones. We implement
a prototype of log2vec. Our evaluation demonstrates that log2vec
remarkably outperforms state-of-the-art approaches, such as deep
learning and hidden markov model (HMM). Besides, log2vec shows
its capability to detect malicious events in various attack scenarios.
∗Corresponding Author.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
CCS ’19, November 11–15, 2019, London, United Kingdom
© 2019 Association for Computing Machinery.
ACM ISBN 978-1-4503-6747-9/19/11...$15.00
https://doi.org/10.1145/3319535.3363224
CCS CONCEPTS
• Computing methodologies → Anomaly detection.
KEYWORDS
Insider Threat Detection, Advanced Persistent Threats, Graph Con-
struction, Heterogeneous Graph Embedding
ACM Reference Format:
Fucheng Liu, Yu Wen, Dongxue Zhang, Xihe Jiang, Xinyu Xing, and Dan
Meng. 2019. Log2vec: A Heterogeneous Graph Embedding Based Approach
for Detecting Cyber Threats within Enterprise. In 2019 ACM SIGSAC Con-
ference on Computer and Communications Security (CCS ’19), November
11–15, 2019, London, United Kingdom. ACM, New York, NY, USA, 18 pages.
https://doi.org/10.1145/3319535.3363224
1 INTRODUCTION
Modern information systems have been important and irreplaceable
components for today’s enterprises and organizations. However,
these systems are constantly under risk of attacks from insider em-
ployees, who have authorized access to them and intentionally use
this access to influence their confidentiality, integrity or availabil-
ity [7]. Meanwhile, another emerging attack, advanced persistent
threat (APT) also threatens these systems. Specifically, APT actors
initially compromise accounts and hosts in a target system and from
these hosts, they would stealthily and persistently compromise mul-
tiple hosts through intranet and steal confidential information [4].
These two types of attacks have been deemed primary and costly
threats for modern enterprises [29, 51, 56, 58].
There exist differences in detecting these two kinds of attacks.
A common scenario of insider threats is that a malicious employee
obtains credentials of another legitimate user through key logger,
and utilizes this new identity to steal confidential information (that
is, masquerade attack). The existing approaches in general convert
user’s various operations (also log entries) into sequences, which
Session 8C: Blockchain VICCS ’19, November 11–15, 2019, London, United Kingdom1777can hold information, e.g. sequential relationship among log en-
tries, and then use sequence processing technique, e.g. deep learn-
ing, to learn from past events and predict the next event [12, 47].
Essentially, these log-entry-level approaches model user’s normal
behavior and flag deviations from it as anomalies.
Unfortunately, this kind of methods ignores other relationships.
For instance, comparison of user’s daily behavior is a common
means for conventional insider threat detection [41, 57]. This detec-
tion is based on the premise that a user’s daily behavior is relatively
regular during a period (logical relationships among days). The
aforementioned prediction approaches overlook this relationship
and would drop in their performance. Besides, they require normal
log entries or even a large number of labeled data for model training.
However, in a real-world scenario, there exist rare attack actions,
limiting their capability of correct prediction.
In APT, the perpetrator usually exploits the intranet (compro-
mises multiple hosts) to escalate his privilege and steal confidential
intelligence. Many approaches focus on analyzing user’s logon op-
erations to detect anomalous ones [4, 50]. Nevertheless, this type
of methods is generally capable of analyzing the particular relation-
ship, interactive relationship among hosts, and cannot detect
the previously mentioned insider threats, involving numerous other
operations, such as file operations and website browses. Moreover,
the suspicious hosts produced by these methods, inevitably involve
numerous benign operations, thereby leading to many efforts for
subsequent artificial error correction. Besides, certain deep learning
methods may detect malicious logons by analyzing users’ logon
sequences in the log-entry-level granularity [12, 47]. However, they
also demand a large amount of labeled data for training.
In summary, we face three problems: 1) how to simultaneously
detect the two attack scenarios aforementioned, specifically con-
sidering all the three mentioned relationships (in bold and italic)
for a detection system; 2) how to conduct a fine-grained detection
in the APT scenario, specifically deeply mining and analyzing rela-
tionships among log entries within a host; 3) how to perform the
detection without attack samples for training models.
Our Designs. We introduce log2vec, a novel approach to detect
the two typical attacks. Log2vec comprises three components as
shown in Figure 1: (1) graph construction. Log2vec constructs a
heterogeneous graph to integrate multiple relationships among log
entries; (2) graph embedding (also graph representation learning).
It’s a powerful graph processing approach to learn each operation’s
representation (vector) base on their relationships in such a graph.
Vectorizing user’s operations enables a direct comparison of their
similarities to find out anomalies; (3) detection algorithm, to ef-
fectively group malicious operations into individual clusters and
figure them out.
Log2vec introduces specialized designs to tackle the aforemen-
tioned problems. First, log2vec’s first component constructs a het-
erogeneous graph. This data structure is constructed based on
the three previous relationships, which are the main ones that
the existing methods have used in solving the two attack scenar-
ios [4, 12, 38, 41, 47, 50, 57] (for problem-1). Second, we divide a
log entry into five attributes. According to these attributes, we
deeply consider relationships among logs within a host and de-
vise fine rules to correlate them. This design enables normal and
anomalous log entries to own different topologies in such a graph,
Figure 1: Log2vec schematic overview. Log2vec includes
graph construction, graph embedding and detection algo-
rithm (rounded rectangle). Graph embedding is composed of
random walk and word2vec (above-dotted rectangle). Detec-
tion algorithm consists of clustering and threshold detector
(below-dotted rectangle).
which can be captured and detected by log2vec’s latter components
(for problem-2). Third, log2vec’s graph embedding and detection
algorithm represent and group log entries into different clusters
without attack samples, applicable to the data imbalanced scenario
(for problem-3). Additionally, graph embedding itself can automat-
ically learn representation (vector) for each operation instead of
manually extracting domain-specific features, thereby independent
of expert’s knowledge. Our improved version can further differen-
tially extract and represent multiple relationships among operations
from the above heterogeneous graph.
In summary, we make the following contributions:
• We propose log2vec, a novel approach for cyber threat detec-
tion, capable of effectively detecting user’s malicious behav-
ior through capturing and representing rich relationships
among user’s operations. Log2vec performs a log-entry-level
detection without attack samples for training, under various
attack scenarios, such as the aforementioned typical attacks
of insider employees and APT.
• We propose a novel method that can translate a user’s log
entries into a heterogeneous graph, holding information that
reflects the user’s typical behavior and exposes malicious
events. It is a generic rule-based approach for graph con-
struction. (Section 3)
• We propose an improved graph embedding, which can differ-
entially extract and represent multiple relationships among
operations from the aforementioned heterogeneous graph.
(Section 4)
• Our evaluation illustrates that log2vec significantly outper-
forms state-of-the-art techniques, such as TIRESIAS, DeepLog
and HMM, in multiple attack scenarios. Meanwhile, log2vec
shows that its clustering algorithm is experimentally supe-
rior to traditional clustering one, k-means in insider threat
detection. (Section 6)
logsheterogeneous graphGraph ConstructionGraph EmbeddingRandom WalkWord2veclog sequences    log vectorsDetection Algorithmmalicious logsClusteringThreshold DetectorclustersSession 8C: Blockchain VICCS ’19, November 11–15, 2019, London, United Kingdom1778• We further explore the effect of log2vec’s parameters on
detection performance. When we employ log2vec, a method
of representation learning, to analyze user’s behavior for
cyber threat detection, we find that this type of detection
requires different combinations of parameters for each user
to achieve the best performance, because multiple users and
attack scenarios produce various user’s behavior and attack
patterns. Following our experiment, we classify log2vec’s
parameters into two categories. One is sensitive to user’s be-
havior and attack scenarios and another is not. Furthermore,
we provide our suggestions on how to set these parameters.
(Section 6.2 and Section 6.4)
2 OVERVIEW
We first present an example to illustrate our problem. Then, we
detail log2vec and introduce the adversarial model.
2.1 Motivating Example
A log file that we aim to detect is depicted in Figure 2a. It records
a user’s operations, such as login operations, removable device
usage and network operations [46], in an enterprise. Figure 2b
denotes attributes of such a log entry, such as subject (e.g. user
id), operation type (e.g. visit or send), object (e.g. website or email),
time and host (e.g. server id). In fact, attributes and relationships
among log entries reveal a user’s behavior. For instance, the first
logon time and last logoff time usually indicate the user’s working
hours. A system administrator may frequently log in to servers and
subsequently perform operations regarding system maintenance
(e.g. open and write a configuration file shown in day1).
Figure 2c displays a sequence approach [12, 47], coding each
log entry in Figure 2a and concatenates them ordered by time into
sequences. This type of methods utilizes deep learning, e.g. Long
Short-Term Memory (LSTM), to learn from past events and predict
the next events [12, 47]. Apparently, they mainly capture causal
and sequential relationships among log entries.
Unfortunately, they ignore other relationships. For instance,
there are a large number of device connect and file copy opera-
tions in day3, far more than before (implying a data breach). This
discrepancy can be detected by directly comparing user’s daily
behavior [41, 57]. The comparison is based on the premise that
a user’s daily behavior is relatively regular and similar during a
period (logical relationships among days). Although deep learn-
ing, e.g. LSTM, can remember long-term dependencies (multiple
days) over sequences [12], it does not explicitly compare user’s
daily behavior and cannot achieve a satisfactory performance (see
Section 6.2). Similarly, they cannot hold another relationship, inter-
active relationship among hosts in Figure 2d, and cannot work
well on the APT detection. Additionally, some of them require a
large number of labeled data for training. However, in our detection
scenario, there exist rare attack actions (see Section 6.1, Dataset).