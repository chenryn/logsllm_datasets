an approach for compositional risk modeling, through a notion 
of risk model encapsulation, for which internal details of a risk 
model  are  hidden.  This  is  achieved  by  defining  a  risk  model 
interface that contains all and only the information that is need-
ed for composing the individual risk models to derive the over-
all risk picture. However, the focus of those papers is mainly 
on the modeling aspects; also, they do not address techniques 
for quantifying the risk, but only perform qualitative analyses. 
The approach we propose in this paper is based on stochas-
tic  state-based  models.  State-based  stochastic  models  have 
been widely adopted in the literature on dependability and per-
formance analysis [7][25], also in combination with simulative 
and experimental measurement approaches [23]. Traditionally, 
such techniques have been applied for the analysis of specific 
problems, in which the system architecture was almost fixed. 
Successively, as system became more complex, the need for a 
different perspective arose, leading to techniques to automati-
cally  derive  analysis  models  from  more  abstract  system  de-
scriptions. This research direction is still active, today mostly 
focusing on the UML language [8]. 
In  an  effort  to  improve  the  extent  to  which  state-based 
models can be reused, much like ordinary “components”, dif-
ferent authors have recognized the benefits of applying modu-
larization and “separation of concerns” [12] to the construction 
of state-based stochastic models. In such approaches (e.g., see 
[13][14][15][22])  the  overall  analysis  model  is  built  out  of 
submodels addressing specific aspects of the systems, and hav-
ing well-defined interfaces. Such submodels are then composed 
following predefined rules based on the actual scenario to be 
represented. The authors of [16] further elaborated on this con-
cept,  defining  an  approach  in  which  SAN  models  extracted 
from  model  libraries  are  composed  together,  by  model-
transformations,  based  on  semi-formal  specifications  of  the 
scenario  to  be  represented.  The  approach  we  propose  in  this 
paper falls in this category, as it is based on a library of models 
that can be automatically assembled to represent different sys-
tem  configurations.  Such  versatility  helps  in  coping  with  the 
complexity of the safety barriers and the variability of WP ap-
plications. 
IV.  MODEL-BASED APPROACH FOR WP PROCESSING 
A.  The Methodology 
State-based stochastic  models are a valuable tool for con-
structing  the  “warning”  messages  of  Fig.  1:  they  are  able  to 
take into account complex interactions and dependencies, and 
aspects related to time and probabilistic behavior. By applying 
model-based  evaluation  [7]  on  a  model  of  the  safety  barriers 
that are relevant to the work permit under examination, specific 
safety-related  metric  could  be  evaluated,  and  a  warning  mes-
sage generated if they fall below a predefined threshold. 
However, we need to construct the model based on the in-
formation  present  in  the  WP.  The  approach  we  propose  as-
sumes to have at its disposal: i) a library of architectural mod-
els of barriers, specifying components and interconnections, as 
well as the unwanted events that need to be avoided; ii) a li-
brary  of  “template”  SAN  models,  specifically  created  for  the 
WP problem; and iii) a database in which information on the 
current state of the installation is stored. As mentioned in Sec-
tion II, the latter is typically in use in current practice already. 
The high-level view of the proposed approach is illustrated 
in Fig. 2. The workflow takes as input a WP application, and 
provides  as  output  a  decision  on  whether  the  WP  should  be 
released (accepted) or rejected. A preliminary step consists in 
analyzing  the  WP  application,  in  order  to  retrieve  the  infor-
mation  that  is  relevant  to  the  decision  process.  This  includes 
identifying the relevant characteristics of the WP, e.g., the kind 
of work and the areas in which it will be undertaken, and con-
sequently the safety barriers that are relevant to that WP appli-
cation. The effort required to perform this activity depends on 
the actual representation of the WP form that is adopted by the 
company. In case of a strongly structured representation (e.g., 
semi-formal languages, XML, etc.), information can be directly 
retrieved from the WP. If it is not the case, a WP Analysis step 
is performed to extract the required information. In this paper 
we assume that the needed information, consisting in the Rele-
277
Fig. 2. Workflow of the proposed methodology for building a decision support WP system. 
vant Barriers and the Relevant WP Characteristics has already 
been extracted from WPs. 
Following  the  application,  the  information  extracted  from 
the  WP  is  processed  by  the  Templates  Selector  module  (1), 
which, based on the architectural models of the involved barri-
ers and on the specificities of the WP, identifies the template 
models  that  need  to  be  retrieved  from  the  model  library,  and 
how  they  should  be  interconnected.  The  complete  composite 
model for evaluating the WP request of interest is then assem-
bled by the Model Composer module (2).  
The next step is to evaluate the model and obtain the nu-
merical results for the metrics of interest (3). Such results are 
then presented, possibly accompanied by warning messages, to 
the decision maker (4), which then ultimately decides whether 
to  release  the  WP  or  not.  Before  taking  the  final  decision, 
he/she can request additional evaluations of the model, for ex-
ample to perform sensitivity analysis on some key parameters 
or to perform “what-if” analysis with respect to conditions that 
are judged to be particularly critical. 
In this paper we focus on the key steps 1 and 2 of the work-
flow,  and  then  provide  an  application  to  a  simple  use  case, 
which also shows a possible execution of steps 3 and 4. 
B.  Barriers Architectural Models 
As a prerequisite to the execution of step 1, we assumed to 
have at our disposal a library of architectural models of barri-
ers. These models are created and maintained by collaboration 
between petroleum domain experts and safety experts. Each of 
those  models  describes  one  or  more  events  to  be  avoided 
and/or detected, the chain of events that may cause them, and 
possible  barriers  that  prevent  such  events  from  propagating. 
Ideally, those models need to be updated only rarely; in such 
occasions, their consistency and adherence to reality are thor-
oughly verified. 
The actual language used to model barriers is a choice that 
is related to technical details, and to preferences of individual 
companies. We do not pose restriction on the language that is 
adopted for modeling barriers: at this level we are only inter-
ested  in  the  information  that  should  be  available,  which  con-
sists in the following:  
•  The  events  of  interest  for  that  barrier  (i.e.,  events  that 
the barrier is meant to prevent or detect). Events have an 
occurrence probability distribution. 
•  The components that are part of the barrier. Component 
is  here  intended  in  a  broader  sense,  also  considering 
human and organizational entities as in [9]. Components 
are affected by internal faults, which occur with a given 
fault occurrence probability  distribution, and by exter-
nal faults, which are caused by other components [1]. A 
component can have one or more failure modes, which 
are caused by different combination of internal and ex-
ternal faults. 
•  How component failures propagate, i.e., how the failure 
of a component affects components that depend on it or 
communicate  with  it.  More  precisely,  which  failure 
modes of a component induce which external faults of 
components that depend or communicate with it. Possi-
bly, propagation may occur after some delay.  
•  How events propagate/escalate, i.e., how they combine 
to  form  a  new  event.  Propagation  of  an  event  may  be 
immediate,  if  the  event  is  a  direct  consequence  of  a 
combination  of  events,  or  after  a  time  specified  by  an 
occurrence probability distribution. 
•  Components able to block the propagation of events, if 
any.  Some  components  of  the  barrier,  when  working 
correctly,  are  able  to  block  the  propagation  of  events. 
Some  of  them  are  consumable,  meaning  that  can  be 
used only once (or a limited number of times). It is the 
case for example of fire extinguishers. 
•  Components able to detect events, if any. Some compo-
nents of the barrier may be able to detect events occur-
ring in the installation. The extent to which they are able 
to do this depends on their working conditions. We dis-
tinguish between timely detection of events, and late de-
tection  of  events,  i.e.,  detection  that  occurs  after  some 
predefined time constraint. 
•  The  set  of  metrics  of  interest  for  that  barrier.  Possible 
metrics are related to the likelihood of occurrence of po-
tential incidents: i) the probability of occurrence of an 
event;  ii)  the  probability  of  not  detecting  an  event  on 
278
time, iii) the probability of not detecting an event at all; 
iv) the probability that a given combination of compo-
nent failures occur. Each barrier model specifies the ex-
act metrics that are relevant for that barrier. 
Such  information  needs  to  be  represented  in  a  structured 
way,  and  stored  in  a  library,  in  order  to  be  processed  by  the 
Template  Selector  module.  Suitable  languages  include  UML 
[21], but also simpler representations like XML documents. 
C.  Work Permit Request  
We then need to identify which of the information present 
in a WP application is of interest for our approach. We based 
our inspection on the standardized WP forms provided as ap-
pendix to [3]. There exist two kinds of WP forms: Level 1 and 
Level 2 forms, based on the risk associated to the work to be 
executed.  Where  not  specified  otherwise,  the  following  list 
applies to both WP levels. 
Date and time. Basic  information of the WP request con-
tains the date and time of execution of the work, in the fields 
“Date”,  “From  hour”  and  “to  hour”.  This  information  is  im-
portant in order to retrieve up to date parameters from the data-
base, and to know the interval of time in the future for which 
metrics should be predicted.  
Kind of work. The kind of work that will be performed is 
specified by the “Work description” field. For a Level 1 WP, 
additional  checkboxes  are  used  to  precisely  state  if  specific 
kinds  of  dangerous  work  (e.g.,  pressure  testing)  will  be  per-
formed.  The  kind  of  work  contributes  to  the  identification  of 
risks associated to its execution, and consequently of the safety 
barriers that need to be in operation. 
Location. The location of the work is precisely identified by 
a number of fields: “Installation”, “Location/module”, “Deck” 
and “Zone”. The precise location allows risks associated to the 
location to be identified (e.g., failed components), and also to 
identify possible conflicting work to include in the evaluation. 
Risks. A specific “Identified risks” section of a WP applica-
tion  contains  a  description  of  the  risks  associated  with  the 
work.  This  includes  a  description  of  the  hazards  that  may  be 
generated by the work, the accidents that may occur, and which 
measures should be implemented in order to mitigate the iden-
tified risk. The information in this field is used to identify the 
events  that  must  be  avoided,  i.e.,  those  whose  probability  of 
occurrence will be estimated. 
Required  operations  and  safety  measures.  Based  on  the 
kind of work and associated risks, the applicant also fills a sec-
tion to indicate which are, in his/her experience, the required 
operations and safety measures to be established. This includes, 
for example, preventing the release of oil/gas in the area, the 
use of fire extinguishers, and the periodic measurement of gas 
levels. The information in this field contributes to the selection 
of barriers to be included in the analysis model. 
Isolation of safety systems. In this section it should be spec-
ified if the execution of the work requires disconnecting some 
safety system, in which area of the installation, and which are 
the needed countermeasures. This constitutes important infor-
mation not only in relation to the WP under examination, but 
also in relation to other work that  is concurrently ongoing or 
planned in the same area.  
D.  Data Repository 
The last element that we use as source of information is a 
data repository where information about the installation and its 
components  is  stored,  obtained  from  monitoring,  historical 
data, or datasheets. In a typical installation, the information that 
can be stored in such a repository is huge. In this paper we as-
sume  to  know  at  least  the  following  information,  which  is 
mostly available in current practice already: 
•  Failure rates or failure distributions of components, ob-
tained from datasheets or historical data. 
•  Relative occurrence of different failure modes of com-
ponents, obtained from datasheets or historical data. 
•  Occurrence  rates  or  distributions  of  events,  obtained 
from historical data or experts’ judgment. 
•  Time  of  last  repair/installation/verification  of  compo-
nents. 
V.  ANALYSIS MODELS TEMPLATES 
The above information should drive the construction of the 
stochastic  analysis  model  from  a  set  of  reusable  submodels 
having predefined interfaces and parameters. Such submodels, 
created using the SAN formalisms, are organized in a library, 
from which – on demand – they are instantiated multiple times 
and  connected  together  to  model  the  scenario  concerning  the 
WP under examination. Templates constituting the library, and 
how they are interconnected, are described in this section. 
A.  Template Models 
The library includes 8 templates: EventOccurrence, Even-
tRecovery,  ConditionChecker,  GenericComponentGeneric-
Component, Detector, ConsumableBarrier, Disabler, Timeline. 
Each of these templates models a key aspect among those in-
troduced in the previous sections; when combined together, the 
behavior of whole barriers can be represented.  