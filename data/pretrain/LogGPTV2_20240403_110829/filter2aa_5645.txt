#define _POSIX_C_SOURCE 1
#include 
#include 
#include 
#include 
#include 
#include 
#include 
#include 
#include "tweetnacl.h"
#define Q 1000
#define K 8
void randombytes(unsigned char *p, size_t n)
{ for (ssize_t r = 0; n -= r; p += r) if (0 > (r = getrandom(p, n, 0))) exit(-1); }
static void print_hex(unsigned char const *p, size_t n)
{ for (size_t i = 0; i  "); fflush(stdout);
        if (sizeof(pk) != read_hex(pk, sizeof(pk)) || K == (idx = find(pk)))
            break;
        printf("length>     "); fflush(stdout);
        if (1 != scanf("%u", &n) || n > 256)
            break;
        printf("message>    "); fflush(stdout);
        if (n != read_hex(m, n))
            break;
        memcpy(nope[i], m, n);
        memset(nope[i] + n, 0, sizeof(nope[i]) - n);
        printf("signed:     ");
        print_hex(m, sign(m, n, keys[idx].sk, pk));
        printf("\n");
    }
    char sm[320];
    printf("forgery>    "); fflush(stdout);
    unsigned long long n = read_hex(sm, 320);
    for (unsigned i = 0; i < Q; ++i) {
        if (!memcmp(sm + 64, nope[i], n - 64)) {
            printf("nope!\n");
            exit(0);
        }
    }
    for (unsigned i = 0; i < K; ++i)
        if (verify(sm, n, keys[i].pk)) {
            dump_flag();
            exit(0);
        }
    printf("nope!\n");
}