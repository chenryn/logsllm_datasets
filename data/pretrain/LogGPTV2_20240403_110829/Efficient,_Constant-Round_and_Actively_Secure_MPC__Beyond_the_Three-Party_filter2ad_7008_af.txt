It turns out
So far, we have described our eﬃcient MPC protocol for the case of ﬁve parties.
that the ideas easily generalize to more than ﬁve parties as long as we can ﬁnd appropriate seed
distribution strategies that meet certain combinatorial properties. Next, we review these properties
and various seed assignment strategies.
To generalize our approach to n-party MPC with at most t corrupted parties, similarly to the
ﬁve-party case, we let Pn be the evaluator and have the remining n − 1 parties simulate a q-party
distributed garbling scheme (q-DG) to generate the garbled circuit used for evaluation. We focus
on the generalization of the distributed garbling component of the MPC protocol and note that
similar ideas can be used for the generalization of the garbled-input step.
the garblers, sometimes leading to a longer total time for the evaluator.
22
At a high level, this q-DG protocol needs to satisfy two main properties: (i) Produce a correct
garbled circuit even if up to t < n of the garblers are corrupted, and (ii) hide its randomness
from the adversary (i.e., the randomness used to garble the circuit) even if up to t − 1 garblers
are corrupted. The adversary’s corruption strategy can be split into two cases. If the adversary
corrupts t garblers, but the evaluator remains honest, the ﬁrst condition ensures that the garbled
circuit is honestly generated and the honest evaluator (Pn) will evaluate the correct garbled circuit.
If, on the other hand, the adversary corrupts Pn and t − 1 of the garblers, the second property
ensures that the corrupt evaluator does not learn the secrets of the garbled circuit and hence no
information about the honest garblers’ inputs is revealed.
To obtain a protocol that meets the above two properties, we follow the same approach as in
the ﬁve-party case. In particular, we assume that all the randomness needed by the party i in the
q-party distributed garbling is generated using a random seed si. Hence, we have q seeds s1, . . . , sq
that need to be distributed among the n − 1 garblers. This seed distribution step should satisfy
the following properties:
1. Privacy: No t− 1 garblers4 should hold all seeds. This property is required for both the semi-
honest and the malicious variants of our MPC protocol, and ensures that a corrupt evaluator
does not learn an honest garbler’s input to the computation.
2. OT Attestation: For every pair of seeds si, sj, there should be a party Pk that holds both
seeds. This party will play the role of attester in our AOT protocols, which we use as replace-
ment for OT. We note that a more expensive variant of our construction without AOT can do
without this condition.
3. Correctness: Every seed is held by at least t + 1 parties. This property is only needed for
the actively malicious case as it ensures that when each message of the semi-honest garbling
protocol is received from t + 1 parties, at least one of those messages was generated by an
honest party and hence it must be the correct message.
7.1 The (n, t, q)-Assigment Problem
The above requirements yield an interesting combinatorial problem, which we call the (n, t, q)-
assignment problem, for ﬁnding seed assignments that minimize n and q but maximize the corrup-
tion threshold t. It is easy to obeserve that the (5, 2, 4)-assignment we used in our 5PC protocol
({s1, s3, s4},{s2, s3, s4},{s1, s2, s3}{s1, s2, s4}) has all three properties. Next, we provide a general
solution to the problem that works for all values of n, and also explore better assignments for
particular values of n. A more thorough study of the problem is left as future work.
We describe a simple solution for the case n = t2 + 1 and q = t2 that meeds the Privacy and
Correctness properties discussed above. Let s1, . . . , sq be the random seeds we need to assign to
n − 1 parties. We simply assign to Pi the seeds s((i−1) mod q)+1, . . . , s((i+t) mod q)+1. The modular
operation enforces that we “cycle around” when sq is reached. It is easy to see that this assignment
satisﬁes Privacy since even if the t− 1 parties chosen not to have any overlap in their set of assigned
seeds, they can only cover (t − 1)(t + 1) = t2 − 1 = q − 1 seeds. Note that this assignment does not
meet the OT Attestation condition and hence needs to be instantiated using standard OTs (with
OT extension), where each OT message is computed by the t + 1 parties who hold the seeds for
either the sender or the receiver in that OT instance. Finally, it is easy to see that each seed si is
held by t + 1 parties, namely, Pi mod q, . . . , P(i+t+1) mod q.
4That’s right, t − 1 and not t, as we have to account for the possiblity of the evaluator being corrupted.
23
7.2 A Few Special Cases
The above assignment strategy is general but does not always yield the optimal assignment. For
example, while it yields the optimal solution for t = 2 and n = 5, the best solution it yields for
t = 3 is n = 10 and q = 9. We now show a simple alternative assignment where q = 6 suﬃces
which implies fewer seeds and a more eﬃcient distributed garbling protocol.
(10, 3, 6)-assignment (active security). Consider the ﬁrst ﬁve seeds s1, . . . , s5. There are(cid:0)5
(cid:1) =
5 subsets of size four. We assign each subset to one of the ﬁrst ﬁve parties and assign s6 to
P6, P7, P8, P9. As before, P10 is not a garbler. It is easy to see that no two parties hold all the
seeds and each seed is held by at least four parties. This satisﬁes both the Privacy and Correctness
conditions that are suﬃcient for actively secure MPC. This solution also generalizes easily to a
4
solution with q ≈ n and t ≈ √
n.
(7, 3, 6)-assignment (semi-honest security). The assignment of the six seeds to the six gar-
blers is as follows: {s1, s2, s3},{s3, s4, s5},{s2, s4, s5},{s1, s5, s6},{s2, s3, s6},{s1, s4, s6}. This as-
signment meets the Privacy and OT Attestation conditions, yielding a very eﬃcient semi-honest
7PC protocol that can fully beneﬁt from our AOT protocols. In particular, it is easy to see that
no two parties hold all six seeds and that every pair of seeds is held by at least one of the garblers.
Acknowledgments
We thank the anonymous reviewers of ACM CCS 2017 for providing useful feedback that helped
improve the presentation of the paper.
References
[AFL+16]
[asS11]
[asS13]
Toshinori Araki, Jun Furukawa, Yehuda Lindell, Ariel Nof, and Kazuma Ohara. High-
throughput semi-honest secure three-party computation with an honest majority.
In Pro-
ceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security,
pages 805–817. ACM, 2016.
abhi shelat and Chih-Hao Shen. Two-output secure computation with malicious adversaries.
In Advances in Cryptology - EUROCRYPT 2011 - 30th Annual International Conference on
the Theory and Applications of Cryptographic Techniques, Tallinn, Estonia, May 15-19, 2011.
Proceedings, pages 386–405, 2011.
abhi shelat and Chih-Hao Shen. Fast two-party secure computation with minimal assump-
tions. In 2013 ACM SIGSAC Conference on Computer and Communications Security, CCS’13,
Berlin, Germany, November 4-8, 2013, pages 523–534, 2013.
[BDNP08] Assaf Ben-David, Noam Nisan, and Benny Pinkas. Fairplaymp: a system for secure multi-party
computation. In Proceedings of the 15th ACM conference on Computer and communications
security, pages 257–266. ACM, 2008.
[BGW88] Michael Ben-Or, Shaﬁ Goldwasser, and Avi Wigderson. Completeness theorems for non-
cryptographic fault-tolerant distributed computation (extended abstract). In STOC [DBL88],
pages 1–10.
[BHR12]
Mihir Bellare, Viet Tung Hoang, and Phillip Rogaway. Foundations of garbled circuits. In the
ACM Conference on Computer and Communications Security, CCS’12, Raleigh, NC, USA,
October 16-18, 2012, pages 784–796, 2012.
24
[Bla06]
[BLO16a]
[BLO16b]
[BLW08]
[BMR90]
[Can00]
[Can01]
[CCD88]
[CDI05]
[CHK+12]
[CKMZ14]
John Black. The ideal-cipher model, revisited: An uninstantiable blockcipher-based hash func-
tion. In Fast Software Encryption, 13th International Workshop, FSE 2006, volume 4047 of
Lecture Notes in Computer Science, pages 328–340. Springer, 2006.
Aner Ben-Efraim, Yehuda Lindell, and Eran Omri. Implementation of protocol from blo16.
https://github.com/cryptobiu/Semi-Honest-BMR, 2016.
Aner Ben-Efraim, Yehuda Lindell, and Eran Omri. Optimizing semi-honest secure multiparty
computation for the internet. In Proceedings of the 2016 ACM SIGSAC Conference on Com-
puter and Communications Security, Vienna, Austria, October 24-28, 2016, pages 578–590,
2016.
Dan Bogdanov, Sven Laur, and Jan Willemson. Sharemind: A framework for fast privacy-
preserving computations. In European Symposium on Research in Computer Security, pages
192–206. Springer, 2008.
Donald Beaver, Silvio Micali, and Phillip Rogaway. The round complexity of secure proto-
cols (extended abstract). In Proceedings of the 22nd Annual ACM Symposium on Theory of
Computing, May 13-17, 1990, Baltimore, Maryland, USA, pages 503–513, 1990.
Ran Canetti. Security and composition of multiparty cryptographic protocols. 13(1):143–202,
2000.
Ran Canetti. Universally composable security: A new paradigm for cryptographic protocols.
In 42nd Annual Symposium on Foundations of Computer Science, FOCS 2001, 14-17 October
2001, Las Vegas, Nevada, USA, pages 136–145, 2001.
David Chaum, Claude Cr´epeau, and Ivan Damg˚ard. Multiparty unconditionally secure proto-
cols (extended abstract). In STOC [DBL88], pages 11–19.
Ronald Cramer, Ivan Damg˚ard, and Yuval Ishai. Share conversion, pseudorandom secret-
sharing and applications to secure computation. In Theory of Cryptography, Second Theory of
Cryptography Conference, TCC 2005, Cambridge, MA, USA, February 10-12, 2005, Proceed-
ings, pages 342–362, 2005.
Seung Geol Choi, Kyung-Wook Hwang, Jonathan Katz, Tal Malkin, and Dan Rubenstein.
Secure multi-party computation of boolean circuits with applications to privacy in on-line
marketplaces. In Cryptographers Track at the RSA Conference, pages 416–432. Springer, 2012.
Seung Geol Choi, Jonathan Katz, Alex J. Malozemoﬀ, and Vassilis Zikas. Eﬃcient three-party
computation from cut-and-choose. In Advances in Cryptology - CRYPTO 2014 - 34th Annual
Cryptology Conference, Santa Barbara, CA, USA, August 17-21, 2014, Proceedings, Part II,
pages 513–530, 2014.
[CMF+14] Koji Chida, Gembu Morohashi, Hitoshi Fuji, Fumihiko Magata, Akiko Fujimura, Koki Hamada,
Dai Ikarashi, and Ryuichi Yamamoto. Implementation and evaluation of an eﬃcient secure com-
putation system using rfor healthcare statistics. Journal of the American Medical Informatics
Association, 21(e2):e326–e331, 2014.
[DBL88]
[DI05]
Proceedings of the Twentieth Annual ACM Symposium on Theory of Computing, 2-4 May 1988,
Chicago, Illinois, USA. ACM, 1988.
Ivan Damg˚ard and Yuval Ishai. Constant-round multiparty computation using a black-box
pseudorandom generator. In Advances in Cryptology - CRYPTO 2005: 25th Annual Interna-
tional Cryptology Conference, Santa Barbara, California, USA, August 14-18, 2005, Proceed-
ings, pages 378–394, 2005.
[DKL+13]
Ivan Damg˚ard, Marcel Keller, Enrique Larraia, Valerio Pastro, Peter Scholl, and Nigel P Smart.
Practical covertly secure mpc for dishonest majority–or: breaking the spdz limits. In European
Symposium on Research in Computer Security, pages 1–18. Springer, 2013.
25
[DPSZ12]
[FLNW16]
[GMS08]
Ivan Damg˚ard, Valerio Pastro, Nigel Smart, and Sarah Zakarias. Multiparty computation
from somewhat homomorphic encryption. In Advances in Cryptology–CRYPTO 2012, pages
643–662. Springer, 2012.
Jun Furukawa, Yehuda Lindell, Ariel Nof, and Or Weinstein. High-throughput secure three-
party computation for malicious adversaries and an honest majority. pages 554–581. Springer,
2016.
Vipul Goyal, Payman Mohassel, and Adam Smith. Eﬃcient two party and multi party com-
putation against covert adversaries. In Annual International Conference on the Theory and
Applications of Cryptographic Techniques, pages 289–306. Springer, 2008.
[GMW87]
Oded Goldreich, Silvio Micali, and Avi Wigderson. How to play any mental game or a com-
pleteness theorem for protocols with honest majority. In STOC, pages 218–229. ACM, 1987.
[HKE13]
Yan Huang, Jonathan Katz, and David Evans. Eﬃcient secure two-party computation us-
ing symmetric cut-and-choose. In CRYPTO (2), volume 8043 of Lecture Notes in Computer
Science, pages 18–35. Springer, 2013.
[HKK+14] Yan Huang, Jonathan Katz, Vladimir Kolesnikov, Ranjit Kumaresan, and Alex J Malozemoﬀ.
Amortizing garbled circuits. In International Cryptology Conference, pages 458–475. Springer,
2014.
[HKT10]
[HSSV17]
[IKKP15]
[IKNP03]
[IKP10]
[KasS12]
[KRW17]
[KSS13]
Thomas Holenstein, Robin K¨unzler, and Stefano Tessaro. Equivalence of the random oracle
model and the ideal cipher model, revisited. CoRR, abs/1011.1264, 2010.
Carmit Hazay, Peter Scholl, and Eduardo Soria-Vazquez. Low cost constant round mpc
combining bmr and oblivious transfer. Cryptology ePrint Archive, Report 2017/214, 2017.
http://eprint.iacr.org/2017/214.
Yuval Ishai, Ranjit Kumaresan, Eyal Kushilevitz, and Anat Paskin-Cherniavsky. Secure com-
putation with minimal interaction, revisited. In CRYPTO (2), volume 9216 of Lecture Notes
in Computer Science, pages 359–378. Springer, 2015.
Yuval Ishai, Joe Kilian, Kobbi Nissim, and Erez Petrank. Extending oblivious transfers ef-
ﬁciently. In Advances in Cryptology - CRYPTO 2003, 23rd Annual International Cryptology
Conference, Santa Barbara, California, USA, August 17-21, 2003, Proceedings, pages 145–161,
2003.
Yuval Ishai, Eyal Kushilevitz, and Anat Paskin. Secure multiparty computation with minimal
interaction. In CRYPTO, volume 6223 of Lecture Notes in Computer Science, pages 577–594.
Springer, 2010.
Benjamin Kreuter, abhi shelat, and Chih-Hao Shen. Billion-gate secure computation with
malicious adversaries. In Proceedings of the 21th USENIX Security Symposium, Bellevue, WA,
USA, August 8-10, 2012, pages 285–300, 2012.
Jonathan Katz, Samuel Ranellucci, and Xiao Wang. Authenticated garbling and eﬃcient
maliciously secure multi-party computation. Cryptology ePrint Archive, Report 2017/189,
2017. http://eprint.iacr.org/2017/189.
Marcel Keller, Peter Scholl, and Nigel P Smart. An architecture for practical actively secure
mpc with dishonest majority. In Proceedings of the 2013 ACM SIGSAC conference on Computer
& communications security, pages 549–560. ACM, 2013.
[LDDAM12] John Launchbury, Iavor S Diatchki, Thomas DuBuisson, and Andy Adams-Moran. Eﬃcient
In ACM SIGPLAN Notices, vol-
lookup-table protocol in secure multiparty computation.
ume 47, pages 189–200. ACM, 2012.
[Lin13]
Yehuda Lindell. Fast cut-and-choose based protocols for malicious and covert adversaries. In
Advances in Cryptology - CRYPTO 2013 - 33rd Annual Cryptology Conference, Santa Barbara,
CA, USA, August 18-22, 2013. Proceedings, Part II, pages 1–17, 2013.
26
[LP07]
[LP12]
[LPS08]
Yehuda Lindell and Benny Pinkas. An eﬃcient protocol for secure two-party computation in
the presence of malicious adversaries. In Advances in Cryptology - EUROCRYPT 2007, 26th
Annual International Conference on the Theory and Applications of Cryptographic Techniques,
Barcelona, Spain, May 20-24, 2007, Proceedings, pages 52–78, 2007.
Yehuda Lindell and Benny Pinkas. Secure two-party computation via cut-and-choose oblivious
transfer. J. Cryptology, 25(4):680–722, 2012.
Yehuda Lindell, Benny Pinkas, and Nigel P. Smart. Implementing two-party computation eﬃ-
ciently with security against malicious adversaries. In Security and Cryptography for Networks,
6th International Conference, SCN 2008, Amalﬁ, Italy, September 10-12, 2008. Proceedings,
pages 2–20, 2008.
[LPSY15]
Yehuda Lindell, Benny Pinkas, Nigel P. Smart, and Avishay Yanai. Eﬃcient constant round
multi-party computation combining BMR and SPDZ. In CRYPTO (2), volume 9216 of Lecture
Notes in Computer Science, pages 319–338. Springer, 2015.
[LR14]
[LR15]
[MF06]
[MR13]
Yehuda Lindell and Ben Riva. Cut-and-choose yao-based secure computation in the on-
line/oﬄine and batch settings.
In International Cryptology Conference, pages 476–494.
Springer, 2014.
Yehuda Lindell and Ben Riva. Blazing fast 2pc in the oﬄine/online setting with security for
malicious adversaries. In Proceedings of the 22nd ACM SIGSAC Conference on Computer and
Communications Security, pages 579–590. ACM, 2015.
Payman Mohassel and Matthew Franklin. Eﬃciency tradeoﬀs for malicious two-party compu-
tation, 2006.
Payman Mohassel and Ben Riva. Garbled circuits checking garbled circuits: More eﬃcient
and secure two-party computation. In Advances in Cryptology - CRYPTO 2013 - 33rd Annual
Cryptology Conference, Santa Barbara, CA, USA, August 18-22, 2013. Proceedings, Part II,
pages 36–53, 2013.
[MRZ15]
Payman Mohassel, Mike Rosulek, and Ye Zhang. Fast and secure three-party computation: The
garbled circuit approach. In Proceedings of the 22nd ACM SIGSAC Conference on Computer
and Communications Security, Denver, CO, USA, October 12-6, 2015, pages 591–602, 2015.
[NO09]
Jesper Buus Nielsen and Claudio Orlandi. LEGO for Two-Party Secure Computation, pages
368–386. Springer Berlin Heidelberg, Berlin, Heidelberg, 2009.
[PSSW09]
Benny Pinkas, Thomas Schneider, Nigel P. Smart, and Stephen C. Williams. Secure two-party
computation is practical. In Advances in Cryptology - ASIACRYPT 2009, 15th International
Conference on the Theory and Application of Cryptology and Information Security, Tokyo,
Japan, December 6-10, 2009. Proceedings, pages 250–267, 2009.