### 4.4 Strong Distance-Fraud Security

For a given v-DB protocol \(\Pi\), the \((\ell, z, n, q_C, q_R, q_T, \text{card-coupled})\)-v-DB experiment defines the game for strong distance-fraud over \(\Pi\) with the same parameters.

If the adversary's advantage in this game is negligible, we say that \(\Pi\) is secure with respect to strong distance-fraud.

In this scenario, the adversary \(A\) acts as a strong man-in-the-middle who controls the PC algorithm on a card \(C\) and may control \(C\) itself. The adversary attempts to make the attester \(W\) accept a transcript when the card \(C\) was far from the reader, but the PC algorithm falsely reports that \(C\) was close (i.e., \(PC = 1\)). In other words, the attacker corrupts a PC-coupled proximity-checking card \(C\) within a v-DB protocol and tries to use this card to mount a distance-fraud that the attester would not detect. The rest of the aspects, such as learning phases, remain the same as in the game for strong relaying, with readers uniformly replaced by cards.

### 4.5 Security Statements

In this section, we prove that PayBCR and PayCCR, introduced in [7], are indeed secure with respect to strong relaying.

#### Theorem 4.5: PayBCR’s Security w.r.t. Strong Relaying

Consider the \((\ell, z, n, q'_C, q'_R, q'_T, \text{reader-coupled})\)-v-DB experiment in the strong relaying game for PayBCR. If \(\sigma_1, \sigma_2\) are signatures unforgeable with respect to selective unforgeability (SUF-unforgeable) and \(AC\) is produced with a MAC that resists existential forgeries, then PayBCR is secure with respect to strong relaying. Specifically, the advantage of the adversary is:

\[
\text{Advantage} = \frac{q^2_R \cdot |N_R| + q^2_T \cdot n + 2q_C \cdot \ell + q_R \cdot z}{2^{|NC|}}
\]

where \(q_C = q'_C\), \(q_R = q'_R\), and \(q_T = q'_T\), and \(|\cdot|\) denotes the bit-length of a protocol message.

#### Theorem 4.6: PayCCR’s Security w.r.t. Strong Relaying

Consider the \((\ell, z, n, q'_C, q'_R, q'_T, \text{reader-coupled})\)-v-DB experiment in the strong relaying game for PayCCR. If \(\sigma_1, \sigma_2\) are signatures unforgeable with respect to selective unforgeability (SUF-unforgeable), then PayCCR is secure with respect to strong relaying. Specifically, the advantage of the adversary is:

\[
\text{Advantage} = \frac{q^2_R \cdot |N_R| + q^2_T \cdot n + 2q_C \cdot \ell + q_R \cdot z}{2^{|NC|}}
\]

The proofs of these theorems are provided in Appendix A.

**Note:** In PayCCR, the AC-producing card has the validating algorithm on board, unlike in PayBCR where the AC needs to be sent by the card to the validating bank. This makes the security requirements for PayCCR weaker than those for PayBCR with respect to strong relaying, as the security of \(AC\) does not play a role in PayCCR. However, if we consider auditing authentication properties, PayBCR achieves better guarantees with respect to strong, collusive attacks against authentication. This is further discussed in Section 5.

### 5. Other Discussions

#### 5.1 Further Security Discussions on v-DB, PayBCR, and PayCCR

When examining v-DB, it is important to note that we have defined security only for the properties of strong relaying and strong distance-fraud. We may wish to consider a primitive that provides assurances for both proximity checking and authentication. This would involve having a "validating" party \(W\) to re-check the proximity measurement and an "auditing" party \(F\) to re-check the authentication part. This split would open up other coupling options beyond those in v-DB. For example, PayCCR has the validator for proximity checking with one party (on the card side) and the auditor for authentication with another party (on the bank side). Conversely, in PayBCR, both the auditor for authentication and the validator for proximity checking occur on the same device (the bank's side).

We now define such a protocol.

#### Definition 5.1: Validated & Audited Distance-Bounding Protocols

A validated and audited distance-bounding (v-ADB) protocol is a tuple \(\Pi = (C, R, T, PC, W, F, B)\), where \(B\) denotes the distance bound and \(C, R, T, PC, W, F\) are polynomial-time algorithms as follows:

- \(C\) is the card algorithm and \(R\) is the reader algorithm in a unilateral authentication protocol where \(C\) authenticates to \(R\).
- \(T\) is a tamper-resistant trusted execution environment.
- The tuple \((PC, T)\) forms a proximity-checking functionality: \((PC, T)\) checks that \(\text{dist}(C, R) \leq B\).
- The tuple \((PC, T)\) is directly used by one authentication party, either \(C\) or \(R\).
- \(R\) and \((PC, T)\) respectively have public outputs \(\text{Out}_R\) and \(\text{Out}_{(PC, T)}\) in \(\{0, 1\}\) (success/failure of the authentication and proximity-checking, respectively), as well as private outputs denoting their transcripts, \(\tau_R\) and \(\tau_{PC}\).
- \(W\) is the proximity-validating algorithm: given the private output of \((PC, T)\), the algorithm \(W\) checks the correctness of the public output of \((PC, T)\).
- \(F\) is the authentication-auditing algorithm: given the private output of \(R\), the algorithm \(F\) checks the correctness of the public output of \(R\).

Security in this setting can be defined in various ways, some stronger than others. For example, a v-ADB protocol \(\Pi\) has strong MiM v-ADB-security if for all cards \(C(x)\) far away from potentially malicious readers \(R(y)\), their authentication fails to be audited by \(F\) with input from \(R(y)\) and \(W\) fails to validate that \(C(x)\) was close to \(R(y)\) (even if the output of a corrupted \(PC\) is 1). Similarly, we can define strong v-ADB-distance-fraud, but where the card may be malicious instead of the reader. This would need to be cast in a threat model similar to ours but with more authentication-forging powers given to the adversary. We leave this for future work.

**Collusive relaying**, informally defined in [7], is a property stronger than the property of strong relaying defined for v-DB but weaker than strong MiM v-ADB-security. It intuitively requires that if \(F\) audits successfully an authentication, then this authentication is for a card that was close to a reader, even if the reader and the PC algorithm may be malicious.

**v-ADB Security: Protocol Comparisons.** As explained, Definition 5.1 makes a difference for PayCCR but not for PayBCR. Specifically, in PayBCR, \(F\) and \(W\) are on the same device (the bank), but in PayCCR, \(F\) is one party (the bank) and \(W\) is another party (the card). This makes PayCCR weaker than PayBCR. For instance, if a card \(C\) is far from a reader \(R\), in PayCCR, \([PC, T]\) is coupled with the reader, and \(W\) is coupled with \(C\). Even if \(W\) is coupled with the card, the AC produced by the card will not contain the failed checks by \(W\) (since in PayCCR, the AC is kept unchanged compared to RRP and only contains authentication details). This AC will be sent to the reader, who will send it to the bank, allowing the bank to authenticate a far-away card, even if the auditing \(W\) reports the proximity-checking failing. This is an attack against strong MiM v-ADB-security. Because in PayBCR, \(F\) and \(W\) are on the same device, this vulnerability does not occur.

### 6. Related Work

#### Models for "Standard DB"

Most distance-bounding protocols have been analyzed without a formal approach. From 2013 onwards, efforts have been made to prove security for distance-bounding [11, 13, 14]. The first formalism in this direction was proposed by Dürholz et al. [11], who formalized the impossibility of illegitimate yet sufficiently fast round-trip communications using a session-based model, specifically the notion of tainted sessions. A protocol is secure if no adversary executing it with tainted sessions can violate its security properties. The model includes a formalization of all classical DB frauds and provides several (partial) security proofs for some protocols [11].

In [14], the authors provide a general, ITM-based model that captures concurrency, allowing adversaries to interact with many provers and verifiers. Here, the notion of timing is explicit, and the round trip time is simply the difference between two times. The notion of distance is also defined in a similar way, with all parties located in Euclidean space.

In this paper, we use a mix of both ideas, using oracles in the sense of Dürholz et al. [13] and explicit timing and distances as in [14].

#### Security Models for Distance-Bounding Augmented with Hardware

In [15], a "three-algorithm symmetric DB protocol" is defined as a tuple \((K, V, P, B, H)\), where \(K\) is the key generation algorithm, \(H\) is the hardware algorithm, \(V\) is the verifying algorithm, \(P\) is the prover algorithm, and \(B\) is the distance bound. The trusted hardware \(H\) is always attached to the Prover, whereas in our model, the secure element is coupled with the proximity-checking algorithm \(PC\), which can be coupled with either the card (prover) or the reader (verifier). This makes our model more versatile and expressive. The aims of [15] are different from ours, as they aim to protect against terrorist-fraud, which has no substantial relation to our notions of strong relaying and strong distance-fraud.

#### Security Models for Relay-Protected Contactless Payments

In [16], Kilinç and Vaudenay introduce a model for contactless payments with relay-protection. This model is distinct from ours, as it is specific to payments, while ours is generic. The major difference is that the reader is always trusted in [16].

### 7. Conclusions

In this paper, we addressed the question of what it formally means to catch if RTT-measuring parties (readers, cards, or others) cheat and collude with proximity-based attackers (i.e., relayers or other types). To this end, we introduced a new distance-bounding primitive (validated distance-bounding) and two new security notions: strong relaying and strong distance-fraud. We also provided a formal model that, for the first time in distance-bounding, caters for dishonest RTT-measurers. In this model, we proved that the new contactless payments in [7], PayBCR and PayCCR, attain security with respect to strong relaying. Finally, we defined another primitive (validated and audited distance-bounding) which more closely emulates the PayCCR protocol, noting that PayBCR and PayCCR differ in construction and security guarantees that go beyond relaying into authentication. In future work, we plan to study further formal security alongside validated and audited distance-bounding.

### Acknowledgments

The authors acknowledge the support of the NCSC-funded "TimeTrust" and "PayPhy" projects.

### References

[1] G. Avoine, M. Bingöl, I. Boureanu, S. Čapkun, G. Hancke, S. Kardaş, C. Kim, C. Lauradoux, B. Martin, J. Munilla, A. Peinado, K. Rasmussen, D. Singelée, A. Tchamkerten, R. Trujillo Rasua, and S. Vaudenay. Security of distance-bounding: A survey. ACM Computing Surveys, 2018.

[2] G. Avoine and C. H. Kim. Mutual distance bounding protocols. IEEE Trans. Mob. Comput., 12(5):830–839, 2013.

[3] G. Bleumer. Selective Forgery. Springer US, Boston, MA, 2011.

[4] I. Boureanu, D. Gerault, and P. Lafourcade. Boxdb: Realistic adversary model for distance bounding. Cryptology ePrint Archive, Report 2018/1243, 2018. https://eprint.iacr.org/2018/1243.

[5] I. Boureanu and S. Vaudenay. Optimal proximity proofs. In International Conference on Information Security and Cryptology, pages 170–190. Springer, 2014.

[6] S. Brands and D. Chaum. Distance-bounding protocols. In Workshop on the Theory and Application of Cryptographic Techniques on Advances in Cryptology, EUROCRYPT '93, pages 344–359, Berlin, Heidelberg, 1994. Springer-Verlag.

[7] T. Chothia, I. Boureanu, and L. Chen. Making contactless EMV robust against rogue readers colluding with relay attackers. In 23rd International Conference on Financial Cryptography and Data Security (FC 19). International Financial Cryptography Association, February 2019.

[8] T. Chothia, F. D. Garcia, J. de Ruiter, J. van den Breekel, and M. Thompson. Relay cost bounding for contactless EMV payments. In R. Böhme and T. Okamoto, editors, Financial Cryptography and Data Security - 19th International Conference, FC 2015, San Juan, Puerto Rico, January 26-30, 2015, Revised Selected Papers, volume 8975 of Lecture Notes in Computer Science, pages 189–206, Puerto Rico, January 2015. Springer.

[9] Y. Desmedt, C. Goutier, and S. Bengio. Special uses and abuses of the Fiat-Shamir passport protocol. In Advances in Cryptology - CRYPTO '87, A Conference on the Theory and Applications of Cryptographic Techniques, Santa Barbara, California, USA, August 16-20, 1987, Proceedings, pages 21–39, 1987.

[10] A. Dhar, I. Puddu, K. Kostiainen, and S. Capkun. ProximiTEE: Hardened SGX Attestation and Trusted Path through Proximity Verification. IACR Cryptology ePrint Archive, 2018:902, 2018.

[11] U. Dürholz, M. Fischlin, M. Kasper, and C. Onete. A formal approach to distance bounding RFID protocols. In Information Security Conference ISC 2011, volume 7001 of Lecture Notes in Computer Science, pages 47–62. Springer, 2011.

[12] EMVCo. Book C-2 kernel 2 specification v2.7. EMV contactless specifications for payment system, Feb, 2018.

[13] M. Fischlin and C. Onete. Terrorism in distance bounding: Modeling terrorist-fraud resistance. In Applied Cryptography and Network Security, ACNS'13, pages 414–431, Berlin, Heidelberg, 2013. Springer.

[14] I. Boureanu, A. Mitrokotsa, and S. Vaudenay. Practical and provably secure distance-bounding. In Y. Desmedt, editor, Information Security, pages 248–258, Cham, 2015. Springer.

[15] H. Kilinç and S. Vaudenay. Formal Analysis of Distance Bounding with Secure Hardware. In Applied Cryptography and Network Security - 16th International Conference, ACNS 2018, Leuven, Belgium, July 2-4, 2018, Proceedings, pages 579–597, 2018.

[16] H. Kilinç and S. Vaudenay. Secure contactless payment. In Information Security and Privacy - 23rd Australasian Conference, ACISP 2018, Wollongong, NSW, Australia, July 11-13, 2018, Proceedings, pages 579–597, 2018.

### A. Proofs

#### A.1 PayBCR – Security w.r.t. Strong Relaying

**Theorem 4.5:** Consider the \((\ell, z, n, q'_C, q'_R, q'_T, \text{reader-coupled})\)-v-DB experiment in the strong relaying game for PayBCR. If \(\sigma_1, \sigma_2\) are signatures unforgeable with respect to selective unforgeability (SUF-unforgeable) and \(AC\) is produced with a MAC that resists existential forgeries, then PayBCR is secure with respect to strong relaying. Specifically, the advantage of the adversary is:

\[
\text{Advantage} = \frac{q^2_R \cdot |N_R| + q^2_T \cdot n + 2q_C \cdot \ell + q_R \cdot z}{2^{|NC|}}
\]

where \(q_C = q'_C\), \(q_R = q'_R\), and \(q_T = q'_T\), and \(|\cdot|\) denotes the bit-length of a protocol message.