receiver phone number
receiver country code
message
timestamp
Forfone
POST
sender phone number
receiver phone number
message
sender UDID
Table 3. Messaging protocols of Voypi and
Forfone.
5.4 Unrequested SMS
When taking a look at the authentication mechanisms,
several applications use an SMS sent to the (assumed) re-
questing handset in order to verify the validity of the request
and to thwart account hijacking (see Section 5.2). However,
several implementations of this mechanism can be misused
in order to send these veriﬁcation-messages to the arbitrary
users. In one application (WhatsApp) we were even able to
modify the messages sent, thus being able to communicate
via SMS worldwide free of charge.
General Approach The general approach consists of
spamming an arbitrary user with text messages containing
validation requests from a messaging service. Since we are
able to do this in an automated fashion, this can be frustrat-
ing to a victim constantly receiving authorization requests.
Unfortunately for the attacker (and fortunately for potential
victims) all examined applications had some kind of time-
out that thwarted real mass spamming. Still, an attacker is
able to send messages at a regular interval. The adversary
could also target certain numbers used for emergencies such
as those used by system administrators in high-availability
data centers, potentially causing the victim to switch off her
device. The idea behind the attack can be seen in Figure 7
This approach works for the following messengers:
WhatsApp, Viber, Tango, eBuddy XMS, WowTalk, Voypi,
Forfone and easyTalk. However, no application other than
WhatsApp allow for the injection of content into the veriﬁ-
cation SMS, thus making it rather useless for actual spam-
ming (as used for marketing purposes).
ServerPhone 2. (SMS): Code  1. (HTTPS): Registration Request  4. (HTTPS): Ok  3. (HTTPS): Code SMS ProxyFigure 7. General approach.
Viber The messaging application Viber allows for an
even more annoying attack. In case the SMS message for
authentication was not answered by the target, the attacker
can choose to set up an authentication request using a phone
call (Figure 8 shows the relevant parts of the authentication
mechanism in Viber).
Figure 8. Sending SMS and requesting phone
calls with Viber.
WhatsApp Finally, WhatsApp offers an intriguing fea-
ture (or rather design error) that can be (mis-)used for send-
ing free text messages worldwide. When looking at the au-
thentication mechanism, we discussed that the authentica-
tion code is chosen by the handset that is requesting authen-
tication and the WhatsApp-server simply echoes it back to
the handset by a SMS. This authentication code consists of
the string “WhatsApp code” followed by a PIN generated
by the phone. In our analysis, we were able to intercept and
modify the transmission of the PIN from the phone to the
server. The modiﬁed SMS was even delivered when the PIN
was replaced by any alphanumerical string, allowing an at-
tacker to send SMS messages with nearly arbitrary content
to the target handset. These techniques can either be used
for free communication, or for sending spam. In fact, the
veriﬁcation messages can be sent by requesting the URL
https://s.whatsapp.net/client/iphone/
smsproxy.php?to=\
&auth=\.
Figure 9 details the relevant parts of the authentication
protocol that are abused in this attack.
Figure 9. Free SMS with WhatsApp
5.5 Enumeration
Another security-relevant aspect of this type of messag-
ing applications is their ability to automatically import the
user’s contacts. All tested applications except HeyTell al-
low the user to upload the entire address book to the sys-
tem’s server and compare the contained phone numbers to
already registered phone numbers stored on the server. The
server returns a subset of the user’s contact list containing
only phone numbers that are registered.
A possible threat resulting from a user account enumer-
ation is the identiﬁcation of active phone numbers. Further-
more, an attacker could try to identify the operating system
of the user, based on the applications installed on the phone
and their availability for a certain operating system. This
enables an attacker to target a system with OS-speciﬁc ex-
ploits.
We tested the feasibility of such an enumeration attack
with WhatsApp. To this end, we selected the US area code
619, which covers the southern half of the city of San Diego,
CA and enumerated the entire number range from 000-0000
to 999-9999. A similar approach for Facebook is described
by Balduzzi et al. [1]. In their paper, the authors tested the
validity of mail addresses by uploading them to the friend-
ﬁnder feature of Facebook. Based on the return value of
Facebook, they were able to determine the status of a mail
address.
In our evaluation, we split the entire number range of
the San Diego area code 619 into chunks of 5000 phone
numbers each and simulated a standard address book up-
load as performed by WhatsApp during device registration.
While we noticed some slowdowns in server response time
during our evaluation, the WhatsApp server did not prevent
us from uploading ten million phone numbers and returned
21095 valid phone numbers that are using the WhatsApp
application as well as their status messages. The entire pro-
cess ﬁnished in less than 2.5 hours.
Figure 10 shows the distribution of phone numbers that
are linked to a WhatsApp account over the entire number
range. As the ﬁgure indicates, active phone numbers of the
area code 619 start at 200000. We believe that the mobile
number range starts above this value, but have not indepen-
dently conﬁrmed that.
A simple countermeasure would be the introduction of a
rate limit. Clearly, no regular user would upload ten million
phone numbers and such an attempt could be easily detected
and blocked by the server.
HeyTell HeyTell does not support upload of a whole ad-
dress book for enumeration, but enumeration can be done
number by number by requesting to send a voice message
for every single number in the address book. This, how-
ever, is restricted by a privacy setting that allows users to
ServerVictim 1. (HTTPS): Request Registration  2. (SMS): RequestAttackerServerAttackerVictim 1. (HTTPS): Request Registration  3. (HTTPS): Request Call  2. (SMS): Request 4. (Call): 2nd Request WhatsApp - ServerRecipient 1. (HTTPS): Request Registration+ Message 2. (SMS): Request+ MessageSenderhttp://msg.voypi.com/myphone_v1/getmsg.php?
dbname=8&version=1.2
As long as the client has not pulled messages, an attacker
can do so and thus steal another user’s messages. The term
“stealing” ﬁts this scenario, because the victim is not able to
retrieve the messages from the server once the attacker has
done so.
6 Conclusion
In this paper, we assessed nine mobile messaging and
VoIP applications for smartphones. Our evaluation showed
that many applications have broken authentication mech-
anisms and thus are vulnerable to account hijacking at-
tacks. Most applications also suffer from other vulnerabil-
ities such as account enumeration. We practically demon-
strated an attacker’s capability to enumerate any number of
active WhatsApp accounts with a given area code (US area
code 619 in our example, which corresponds to Southern
San Diego, CA). All identiﬁed ﬂaws stem from well-known
software design and implementation errors. Although these
vulnerabilities may not endanger human lives, they might
have a severe impact on the privacy of millions of users.
Future work might include security assessments of up-
coming solutions slated for mass adoption such as Apple’s
iMessage. Furthermore, research towards an authentication
scheme suitable as a best practice template for newly devel-
oped applications would be a welcome addition.
7 Acknowledgements
This work has been supported by the Austrian Research
Promotion Agency under grant 824709 (Kiras) and the Aus-
trian COMET Program (FFG).
References
[1] M. Balduzzi, C. Platzer, T. Holz, E. Kirda, D. Balzarotti,
and C. Kruegel. Abusing social networks for automated
user proﬁling. In Recent Advances in Intrusion Detection:
13th International Symposium, RAID 2010, Ottawa, On-
tario, Canada, September 15-17, 2010, Proceedings, vol-
ume 6307, page 422. Springer-Verlag New York Inc, 2010.
[2] M. Bishop. Computer Security: Art and Science. Addison-
Wesley, 2002.
[3] L. Davi, A. Dmitrienko, A. Sadeghi, and M. Winandy. Priv-
Information Security,
ilege escalation attacks on android.
pages 346–360, 2011.
[4] W. Difﬁe and M. Hellman. New directions in cryptography.
Information Theory, IEEE Transactions on, 22(6):644–654,
1976.
[5] M. Egele, C. Kruegel, E. Kirda, and G. Vigna. Pios: De-
In Network and
tecting privacy leaks in ios applications.
Distributed System Security Symposium (NDSS), 2011.
Figure 10. Distribution of phone numbers in
area code 619 that are registered with Whats-
App.
limit their visibility.
5.6 Other Vulnerabilities
WhatsApp An additional feature of WhatsApp is the pos-
sibility to set a status message, similar to instant messaging
clients like Skype, that can be read by the user’s contacts.
Changing this status message does not require any authen-
tication. In fact, everyone can change anyone else’s status
message by sending an HTTPS request to
https://s.whatsapp.net/client/iphone/u.php?
cc=&me=
&s=.
WowTalk Like WhatsApp, WowTalk offers the feature
of setting a status message. A user can change the status
message for an arbitrary user by issuing a POST-request to
https://sip.wowtalk.org/wowtalk_srv.php con-
taining
action=user_status_update&username=
&status=
Voypi We were able to identify two other vulnerabilities
in Voypi. It is possible to request Voypi users in the address
book of other users. To this end, a simple HTTP request
with the phone number of the victim is sent to the server:
http://msg.voypi.com/myphone_v1/getusers.php?
phone=&version=1.2
No further authentication is required to perform this
query. The server responds with the subset of Voypi users
from the victim’s address book containing names and phone
numbers.
The second vulnerability allows an attacker to request
messages of other users without authentication. The Voypi
client has to be running in order to be able to receive mes-
sages. When active, Voypi pulls new messages in an interval
of seven seconds from the server:
05001000150020002500300035004000Number of Users Number Ranges [6] W. Enck, P. Gilbert, B. Chun, L. Cox, J. Jung, P. McDaniel,
and A. Sheth. Taintdroid: An information-ﬂow tracking sys-
tem for realtime privacy monitoring on smartphones. In Pro-
ceedings of the 9th USENIX conference on Operating sys-
tems design and implementation, pages 1–6. USENIX As-
sociation, 2010.
[7] W. Enck, D. Octeau, P. McDaniel, and S. Chaudhuri. A
study of android application security. In Proc. of the 20th
USENIX Security Symposium, 2011.
[8] W. Enck, M. Ongtang, and P. McDaniel. On lightweight
In Proceedings of
mobile phone application certiﬁcation.
the 16th ACM conference on Computer and communications
security, pages 235–245. ACM, 2009.
[9] W. Enck, M. Ongtang, and P. McDaniel. Understanding An-
droid Security. Security & Privacy, IEEE, 7(1):50–57, 2009.
[10] A. Felt, H. Wang, A. Moshchuk, S. Hanna, E. Chin,
K. Greenwood, D. Wagner, D. Song, M. Finifter, J. Wein-
berger, et al. Permission re-delegation: Attacks and de-
fenses. In 20th Usenix Security Symposium, San Fansisco,
CA, 2011.
[11] K. Fu, E. Sit, K. Smith, and N. Feamster. Dos and Don’ts of
In Proceedings of the
Client Authentication on the Web.
10th conference on USENIX Security Symposium-Volume
10, pages 19–19. USENIX Association, 2001.
2011.
http:
[12] Intrepidus Group.
Intrepidus
group,
retrieved Aug
[Online;
//intrepidusgroup.com/insight/2011/08/
dropbox-for-android-vulnerability-breakdown/.
2011],
21st,
[13] B. Lampson, M. Abadi, M. Burrows, and E. Wobber.
Authentication in distributed systems: Theory and prac-
tice. ACM Transactions on Computer Systems (TOCS),
10(4):265–310, 1992.
[14] M. Marlinspike. Website of sslsniff tool, 2011.
[On-
line; retrieved Jun 21st, 2011], Online at http://www.
thoughtcrime.org/software/sslsniff.
[15] B. Neuman and T. Ts’o. Kerberos: An authentication service
for computer networks. Communications Magazine, IEEE,
32(9):33–38, 1994.
[16] W. Stallings. Cryptography and network security: principles
and practice. Prentice Hall Press, 2010.
[17] Whisper Systems. Whisper systems, 2011.
[Online; re-
trieved Aug 21st, 2011], http://www.whispersys.
com/.
[18] A. Whitten and J. Tygar. Why Johnny can’t encrypt: A us-
In Proceedings of the 8th
ability evaluation of PGP 5.0.
USENIX Security Symposium, pages 169–184, 1999.
[19] XMPP Foundation. XMPP Standard, 2011.
[Online; re-
trieved Jun 21st, 2011], http://xmpp.org/l.