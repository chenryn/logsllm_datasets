authenticated, this still requires trusting the RA, since there
is no way to verify if a pseudonym actually corresponds to a
bidder. This also shows a simple attack: the RA can create
a new pseudonym and submit a bid under this pseudonym,
which may allow him to manipulate the auction outcome.
Curtis et al. explicitly state that the RA needs to be
trusted. However, they themselves propose a property “ro-
bustness” which states that an auction protocol should be
able to handle corrupt behavior. Clearly, their protocol is
not robust to dishonest behavior by the RA, and veriﬁabil-
ity of their protocol requires trust in the RA. We argue that
basing veriﬁability tests on such a trust assumption at least
partly contradicts the main point of veriﬁability, which is to
eliminate such trust assumptions by providing evidence that
a trusted party actually behaved honestly.
4.2 Protocol by Brandt [3]
The protocol by Brandt [3] realizes a ﬁrst-price sealed-
bid auction and was designed to ensure full privacy in a
completely distributed way.
It exploits the homomorphic
properties of a distributed El-Gamal Encryption scheme for
a secure multi-party computation of the winner.
Informal Description
4.2.1
The participating bidders and the seller communicate us-
ing a bulletin board, i.e. an append-only memory accessible
for everybody. The bids are encoded as bit-vectors where
each entry corresponds to a price. The protocol then uses
linear algebra operations on the bid vectors to compute a
function fi, which returns a vector containing one entry “1”
if bidder i submitted the highest bid, and diﬀerent num-
bers ((cid:54)= 1) otherwise. To be able to compute this function
in a completely distributed way, and to guarantee that no
coalition of malicious bidders can break privacy, these com-
putations are performed on the encrypted bids using homo-
morphic properties of a distributed El-Gamal encryption.
In a nutshell, the protocol realizes the following steps:
1. Firstly, the distributed key is generated: each bidder
chooses his part of the secret key and publishes the
corresponding part of the public key on the bulletin
board.
2. Each bidder then computes the joint public key, en-
crypts his bid using this key and publishes it on the
bulletin board.
3. Then function fi is calculated for every bidder i using
the homomorphic property of the encryption scheme.
4. The outcome of this computation (n encrypted values)
are published on the bulletin board, and each bidder
partly decrypts each value using his secret key.
5. These shares are sent to the seller, who can combine
all to obtain the result (i.e. all fi). He publishes part
of the shares such that each bidder j can only compute
his fj to see if he won or lost (using his knowledge and
the published shares), but not the other fi.
4.2.2 Formal Model
We have a set of bidders B and a seller S. The list of all
submitted bids L is published on the bulletin board. The
function getPrice(C) decrypts the bid using the joint pri-
vate key. The function win returns the index of the high-
est bid submitted, in case of ties the one submitted by the
bidder with the smallest index. The protocol has two par-
ticularities: Firstly there is no registration (and hence no
meaningful function isReg), and secondly the winner is not
publicly announced – only the winning bidder and the seller
know at the end who won. We can still assume that winBid
gives the index of the winning bid, although only the seller
and the winning bidder have access to it. We assume that
there is a “magical” function isReg that can check if a bid
was submitted by a registered bidder, however the absence
of registration and authentication means that we cannot im-
plement it.
4.2.3 Analysis
The protocol includes no authentication or registration,
hence there is no suitable test for rv s. An attacker may
hence submit bids on behalf of a bidder, which cannot be
detected using a veriﬁcation test. Yet using the values pub-
lished on the bulletin board everybody can check if the val-
ues used for the computation were the previously submitted
bids, and as the winning index will be among them, we have
a test for rv w.
The author claims that the protocol is veriﬁable as the
parties have to provide zero-knowledge proofs for their com-
putations, however there are two problems.
j rj
(cid:80)
Firstly a winning bidder cannot verify if he actually won.
To achieve privacy, the protocol hides all outputs of fi except
for the entry containing “1”. This is done by exponentiation
of all entries xi of the return vector x with random values,
i.e. by calculating x
. If xi is one, this will still return
i
one, but a random value for any other value of x. Yet these
random values rj may add up to zero (mod q), hence the
returned value will be x0
i = 1 and the bidder will conclude
that he won (xi = 1), although he actually lost (xi (cid:54)= 1).
Hence simply verifying the proofs is not suﬃcient – such
a test ovw would not be sound. For the same reason the
seller might observe two or more “1”-values even though all
proofs are correct, and will be unable to decide which bidder
actually won. He could even exploit such a situation to
his advantage: He can simply tell both bidders that they
won and take money from both, although there is only one
good to sell. If the bidders do not exchange additional data
there is no way for them to discover that something went
wrong, since the seller is the only party having access to all
values. The probability of the random values adding up to
zero is low, yet this means that there are cases where the
veriﬁability tests are not sound.
Secondly the author does not exactly specify the proofs
that have to be provided in the joint decryption phase. If
the bidders only prove that they use the same private key
on all decryptions (and not also that it is the one they used
to generate their public key), they may use a wrong one.
This will lead to a wrong decryption where with very high
probability no value is “1”, as they will be random. Hence
all bidders will think that they lost, thus allowing a ma-
licious bidder to block the whole auction, as no winner is
determined. Hence, if we assume that ovl consists in verify-
ing the proofs, a bidder trying to verify that he lost using
the proofs might perform the veriﬁcation successfully, al-
though the result is incorrect and he actually won – since he
would have observed a “1” if the vector had been correctly
[7] N. Dong, H. L. Jonker, and J. Pang. Analysis of a
receipt-free auction protocol in the applied pi calculus.
In Proc. 7th Workshop on Formal Aspects in Security
and Trust (FAST’10), volume 6561 of LNCS, pages
223–238. Springer-Verlag, 2011.
[8] J. Dreier, P. Lafourcade, and Y. Lakhnech. Formal
veriﬁcation of e-auction protocols. In Principles of
Security and Trust (POST), 2013. To appear.
[9] A. Fujioka, T. Okamoto, and K. Ohta. A practical
secret voting scheme for large scale elections. In
J. Seberry and Y. Zheng, editors, Advances in
Cryptology – AUSCRYPT ’92, volume 718 of LNCS,
pages 244–251. Springer Berlin / Heidelberg, 1992.
[10] M. Harkavy, J. D. Tygar, and H. Kikuchi. Electronic
auctions with private bids. In Proc. 3rd USENIX
Workshop on Electronic Commerce. Usenix, 1998.
[11] M. Hirt and K. Sako. Eﬃcient receipt-free voting
based on homomorphic encryption. In Proc. 19th
Annual Conference on the Theory andApplications of
Cryptographic Techniques: Advances inCryptology
(EUROCRYPT), volume 1807 of LNCS, pages
539–556. Springer, 2000.
[12] S. Kremer, M. D. Ryan, and B. Smyth. Election
veriﬁability in electronic voting protocols. In Proc.
15th European Symposium on Research in Computer
Security (ESORICS 2010), volume 6345 of LNCS,
pages 389–404. Springer, 2010.
[13] R. K¨usters, T. Truderung, and A. Vogt.
Accountability: deﬁnition and relationship to
veriﬁability. In Proc. 17th Conference on Computer
and Communications Security (CCS’10), CCS ’10,
pages 526–535. ACM, 2010.
[14] H. Lipmaa, N. Asokan, and V. Niemi. Secure vickrey
auctions without threshold trust. In Proc. 6th
Conference on Financial Cryptography, volume 2357
of LNCS, pages 87–101. Springer, 2003.
[15] M. Naor, B. Pinkas, and R. Sumner. Privacy
preserving auctions and mechanism design. In Proc.
1st Conference on Electronic Commerce, pages
129–139. ACM Press, 1999.
[16] K. Omote and A. Miyaji. A practical english auction
with one-time registration. In Proc. 6th Australasian
Conference on Information Security and Privacy,
volume 2119 of LNCS, pages 221–234. Springer, 2001.
[17] T. E. Rockoﬀ and M. Groves. Design of an
internet-based system for remote dutch auctions.
Internet Research, 5:10–16, 1995.
[18] K. Sako and J. Kilian. Receipt-free mix-type voting
scheme - A practicalsolution to the implementation of
a voting booth. In Proc. 14th Conference on the
Theory andApplications of Cryptographic Techniques:
Advances inCryptology (EUROCRYPT’95), volume
921 of LNCS, pages 393–403. Springer, 1995.
decrypted. This problem can be addressed by requiring the
bidders to also prove that they used the same private key as
in the key generation phase.
5. CONCLUSION
In this work, we identiﬁed the types of veriﬁability nec-
essary for the stakeholders in auctions. We then formalized
these requirements in a protocol-independent way, resulting
in tests rv s, rv w, ovl, ovw, ovs, which together constitute a
general veriﬁability framework for auction protocols.
We illustrated the use of the proposed tests by two case
studies, that analyzed the auction protocols by Curtis et
al. [6] and by Brandt [3], respectively. The protocol by Cur-
tis et al. is correct only for a trusted Registration authority
– which runs contrary to the point of veriﬁcation: that the
authorities no longer need to be trusted. Brandt’s protocol
does not have sound veriﬁability tests: it is technically pos-
sible for a losing bidder to conclude he won. Moreover, it
may also be possible for a bidder to prevent anyone from
winning by using a wrong decryption key. To prevent this,
bidders must prove that the private key matches the pre-
viously announced public key. Additionally, the protocol
does not provide suﬃcient registration and authentication
mechanisms to allow registration veriﬁability.
Future work. We are currently working on a full applica-
tion of these deﬁnitions to various auction protocols in both
the symbolic model and the computational model.
Looking further ahead, we are interested in the full rela-
tionship between fairness and veriﬁability in auctions. As il-
lustrated, there exist veriﬁability requirements without which
violations of fairness may occur. The exact relationship be-
tween fairness and veriﬁability however is an open question.
6. ACKNOWLEDGMENTS
This work was partly supported by the ANR project ProSe
(decision ANR-2010-VERS-004-01).
7. REFERENCES
[1] M. Abe and K. Suzuki. Receipt-free sealed-bid
auction. In Proc. 5th Conference on Information
Security, volume 2433 of LNCS, pages 191–199.
Springer, 2002.
[2] J. Benaloh and D. Tuinstra. Receipt-free secret-ballot
elections (extended abstract). In Proc. 26th
Symposium on Theory of Computing, STOC ’94, pages
544–553, New York, NY, USA, 1994. ACM.
[3] F. Brandt. How to obtain full privacy in auctions.
International Journal of Information Security,
5:201–216, 2006.
[4] C. Cachin. Eﬃcient private bidding and auctions with
an oblivious third party. In Proc. 6th Conference on
Computer and Communications Security (CCS’99),
pages 120–127. ACM Press, 1999.
[5] X. Chen, B. Lee, and K. Kim. Receipt-free electronic
auction schemes using homomorphic encryption. In
Proc. 6th Conference on Information Security and
Cryptology, volume 2971 of LNCS, pages 259–273.
Springer, 2003.
[6] B. Curtis, J. Pieprzyk, and J. Seruga. An eﬃcient
eAuction protocol. In Proc. 7th Conference on
Availability, Reliability and Security (ARES’07), pages
417–421. IEEE Computer Society, 2007.