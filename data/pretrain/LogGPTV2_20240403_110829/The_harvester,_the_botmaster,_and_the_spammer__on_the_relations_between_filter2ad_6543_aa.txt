title:The harvester, the botmaster, and the spammer: on the relations between
the different actors in the spam landscape
author:Gianluca Stringhini and
Oliver Hohlfeld and
Christopher Kruegel and
Giovanni Vigna
The Harvester, the Botmaster, and the Spammer:
On the Relations Between the Different Actors
in the Spam Landscape
Gianluca Stringhini, Oliver Hohlfeld†, Christopher Kruegel, and Giovanni Vigna
Department of Computer Science, UC Santa Barbara
†RWTH Aachen University
{gianluca, chris, vigna}@cs.ucsb.edu, PI:EMAIL
ABSTRACT
A spammer needs three elements to run a spam operation: a
list of victim email addresses, content to be sent, and a bot-
net to send it. Each of these three elements are critical for
the success of the spam operation: a good email list should
be composed of valid email addresses, a good email content
should be both convincing to the reader and evades anti-
spam ﬁlters, and a good botnet should eﬃciently sent spam.
Given how critical these three elements are, ﬁgures special-
ized on each of these elements have emerged in the spam
ecosystem. Email harvesters crawl the web and compile
email lists, botmasters infect victim computers and main-
tain eﬃcient botnets for spam dissemination, and spammers
rent botnets and buy email lists to run spam campaigns.
Previous research suggested that email harvesters and bot-
masters sell their services to spammers in a prosperous un-
derground economy. No rigorous research has been per-
formed, however, on understanding the relations between
these three actors. This paper aims to shed some light
on the relations between harvesters, botmasters, and spam-
mers. By disseminating email addresses on the Internet,
ﬁngerprinting the botnets that contact these addresses, and
looking at the content of these emails, we can infer the re-
lations between the actors involved in the spam ecosystem.
Our observations can be used by researchers to develop more
eﬀective anti-spam systems.
Categories and Subject Descriptors
K.4.1 [Computers and Society]: Abuse and crime involv-
ing computers
Keywords
Botnets; Spam; Cybercrime; Underground Economy
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
ASIA CCS’14, June 4–6, 2014, Kyoto, Japan. 
Copyright 2014 ACM 978-1-4503-2800-5/14/06 $15.00.
http://dx.doi.org/10.1145/2590296.2590302.
1.
INTRODUCTION
Email spam is a wealthy business for cyber criminals.
Recent research showed that a successful spam campaign
can generate revenues between $400,000 and $1,000,000 [11,
12]. Given this proﬁtability, a whole economy has emerged
around email spam. Similar to legitimate economic ecosys-
tems, many diﬀerent parties are involved in a spam cam-
paign. On the one side, the spammer needs to have a good
list of target email addresses for the campaign to be eﬀective,
as well as a botnet able to eﬃciently send emails to them [21].
On the other side, spammers need an eﬀective infrastructure
to sell the illicit goods that they advertise. This infrastruc-
ture includes the websites that sell the goods, the shipping
facilities, and the payment processors [15]. Thus, there can
be three main parties involved in the spam ecosystem: the
email harvester, the botmaster, and the spammer.
Studying the relationship among these diﬀerent parties in-
volved in the spam ecosystem deepens the understanding of
the spam underground economy and can pave the way for
new spam mitigation techniques. In this way, it ﬁrst helps to
estimate the magnitude of the spam problem and can reveal
new trends. Second, it allows to identify bottlenecks and
critical points in the spamming pipeline; these critical points
can be used to develop mitigation techniques to ﬁght such
threats. For these reasons, previous work analyzed individ-
ual aspects of the parties involved in the process. In par-
ticular, researchers studied the harvesting process of email
addresses on the web [9, 20], the structure and operation of
spamming botnets [5, 18, 21], or the email templates used
by spammers [13, 14]. Other work focused on studying the
ﬁnancial conversion of spam [11, 12] or the workﬂow that
goes from when an illicit good is purchased to when it gets
delivered [15]. These recent advances in the understanding
of individual parties now open the question on their rela-
tionship.
To the best of our knowledge, no research has focused on
the operational relations and the interactions among the dif-
ferent parties in the spam ecosystem. Some work addressed
economic interactions of some of the diﬀerent players on the
underground market [21]. This work suggested that spam-
mers buy email lists from email harvesters, rent botnets from
botmasters, and then use them to send spam. However, the
question on their operational relation and the interactions
among multiple parties has not been answered yet. Thus, a
complete understanding of relations and interactions of play-
ers in the spam ecosystem is still missing. Open research
questions include the following aspects. Do some spammers
353harvest email addresses by themselves? Do some spammers
rent multiple botnets to send the same type of spam? And
if they do, do they use the same email list across diﬀerent
botnets?
This paper presents the ﬁrst analysis of the relations among
email harvesters, botmasters, and spammers. In an attempt
to contribute to answering these questions, we run a multi-
step experiment. In the ﬁrst step, we set up a large number
of email addresses, each pointing to a mailserver under our
control and advertise them on web pages. Then, we record
the accesses to those web pages, to ﬁngerprint the email har-
vesters. We then log the connections that we receive on our
mailserver. Since the email addresses that we disseminated
on the web are not used for legitimate purposes, we assume
that any connection that we receive is generated by a bot-
net (or by a mailserver operated by spammers). We then
apply a technique known as SMTP dialects [22] to assess
which botnet or mailserver generated each connection. As a
last step, we analyze the content of the spam emails that we
receive, and group them into spam campaigns. Our assump-
tion is that a single spammer will be responsible for each
spam campaign. Such assumption has been conﬁrmed by
previous work [21]. After having logged this information, we
compare the diﬀerent datasets, checking whether the same
spammer has rented multiple botnets, and whether multiple
spammers share the same email list or botnet.
The results of this study give us new insights into how
spammers operate. In particular, our ﬁndings suggest that
spammers typically rent a single botnet and that a fraction
of them set up their own mail transfer agents (MTAs) to
spread spam. Another interesting discovery is that spam-
mers tend to stick with a single list of email addresses for
long periods of time, even years.
In summary, this paper makes the following contributions:
• We perform a large-scale experiment that tracks how
email addresses are harvested, which botnets are con-
tacting the harvested addresses, and what type of spam
they are sending.
• We provide detailed statistics about the email har-
vesters, the spamming botnets, and the spam cam-
paigns that we observed. We make novel observations
on the way email harvesters operate and on the geo-
graphic distribution of the bots in large botnets.
• We analyze the relations between email harvesters,
botmasters, and spammers. We show that, with rare
exceptions, spammers purchase their email lists from
professional email harvesters and rent a single botnet
to send spam.
• We discuss how our observations can aid researchers in
spam mitigation. We argue that the consistent habits
of spammers in terms of the email lists and botnets
they use can be leveraged for detection.
2. METHODOLOGY & DATA COLLECTION
The analysis infrastructure that we used in our measure-
ment is composed of three parts:
1. Email Harvester Logging. In this part, we ﬁrst ad-
vertise a large number of unique email addresses on
the web. Each email address is only displayed once
Site
A
B
C
D
E
Description
Private blog
Gaming web site
Mail archive
Private web page
Spamtrap page
# of Addresses # of Emails
1
274
187
4
71
72
1,511
387
74
153
Table 1: Number of advertised email addresses (ids)
and number of received spam emails per web site.
As it can be seen, the gaming web site is the one
whose addresses received the most spam.
and points to a mailserver under our control. To be
able to correlate received spam with harvesting infor-
mation, we log web page retrieval logs for each issued
email address. This approach thus allows us to identify
which harvester fetched a certain email address.
2. SMTP Dialect Fingerprinting. Previous research
showed that each botnet, email client, and mail trans-
fer agent (MTA) uses a diﬀerent implementation of the
SMTP protocol [22]. This allows us to ﬁngerprint the
email engine of a host that is talking to a mailserver.
We leverage this technique to ﬁngerprint the diﬀerent
botnets and MTAs that send emails to the harvested
email addresses.
3. Spam Campaign Analysis. To avoid easy detec-
tion, spammers slightly alter the content of their spam
emails over time. However, previous research showed
that it is possible to group spam campaigns by looking
at the domains of the URLs that are advertised in the
email body [27]. We leverage a similar technique, and
identify spam campaigns that are carried out by the
same spammer.
In the remainder of this section, we describe the three parts
of our data analysis infrastructure in detail.
2.1 Email Harvester Logging
We identify email harvesters by using a methodology that
relies on issuing unique spamtrap email addresses via the
web [9]. As the addresses are uniquely generated for each
page request, their usage can be directly mapped to a spe-
ciﬁc page request once the ﬁrst spam email is received. To
allow for this mapping, we log basic information such as
the requesting IP addresses, timestamps, and HTTP header
information for all page requests. This per-request informa-
tion allows us to analyze further properties such as the user
agent strings submitted by the harvester bots.
The generated addresses are embedded into nine low-proﬁle
web pages of various type. Table 1 provides a description
of the websites and statistics about the advertised email ad-
dresses. This methodology is implemented in web sites by
including a server-side dynamic script that generates unique
email addresses for each page request and logs information
about the visitors. Each web site advertises six diﬀerent
spamtrap addresses, each being displayed with one of the fol-
lowing presentation and obfuscation techniques: i) a mailto:
link, ii) non-linked, plain-text address, iii) address obfus-
cated in the form of user [at] domain [dot] tld, iv ) address
obfuscated using JavaScript code, v ) address included in a
hidden data ﬁeld of a web form, and vi) plain-text address
inside an HTML comment. All of the above described ad-
dresses consist of random strings of 10 characters each (RND
354IDs, e.g., “jdi4gj8bzx”). We use random strings as they are
diﬃcult to guess and, therefore, we can be conﬁdent that a
spammer who targets those addresses obtained them from
the harvesters, and did not randomly guess them. In addi-
tion to random strings, we issue realistic looking addresses
containing random combinations of ﬁrst and last names gen-
erated from phone book records (e.g., “john.doe”). Com-
pared to random strings, the assumption is that realistic
looking addresses are harder to identify as fake addresses,
but are also easier to guess.
Email addresses are advertised by appending diﬀerent do-
mains and Top Level Domains (TLDs). Our email domains
are handled by several mail exchange servers located in dif-
ferent networks. These servers provide us with the unﬁltered
email feed via IMAP. We consider any email sent to those
addresses as spam. As our SMTP dialect classiﬁcation (see
next section) relies on detailed SMTP transaction logs, we
needed to capture detailed traﬃc traces at each mail ex-
change server. Unfortunately, this was only possible at one
server due to administrative restrictions in other networks.
The data collection started on December 14, 2012, and
ended on May 15, 2013. In this period, the system received
2,197 spam emails sent to 613 unique spamtrap addresses.
The summary of the number of emails received per web site
is reported in Table 1.
During the measurement period, the mail exchange server
also received 1,299 emails sent to 75 email addresses that
were not advertised by the system. Out of this set, 115
emails were addressed to PI:EMAIL, PI:EMAIL,
PI:EMAIL, PI:EMAIL, and PI:EMAIL,
where foo.tld denotes the domain advertised on the web
and assigned to the mail exchange server. The remaining
1,184 emails were addressed to external email domains, in-
cluding 163.com, gmail.com, and yahoo.com.tw. As none
of our mailservers is conﬁgured as an open relay, these mails
were declined.
Despite the size small size of the dataset, it enabled us to
observe interesting interactions between the diﬀerent actors
in the spam landscape. Our results therefore provide a ﬁrst
step in getting an understanding on how diﬀerent parties in-
volved in the spam process cooperate, which ultimately aims
at gaining a better understanding of the online underground
economy.
2.2 SMTP Dialect Fingerprinting
In our previous work, we showed that it is possible to re-
liably ﬁngerprint an SMTP client by analyzing the SMTP
messages that it exchanges with the mailserver. More pre-
cisely, each SMTP implementation, both in legitimate pro-
grams and in malware, shows diﬀerences in the way it im-
plements the SMTP protocol [22]. We call these variations
of the SMTP protocol SMTP dialects [22]. To identify dif-
ferent botnets, we extract the SMTP dialect spoken by each
client trying to send an email to the mailserver.
The SMTP protocol is deﬁned as an alternating dialogue
between a client and a server. The messages sent by the
client are called SMTP commands, while the messages sent
by the server are called SMTP replies [1]. The client ﬁrst
speciﬁes the sender of the email (in the form of an email ad-
dress), one or more recipients, and then asks for permission
to send the actual email content (with a DATA command).
If the server grants this permission, the client starts trans-
mitting the content of the email, otherwise the connection is
Figure 1: An example of an SMTP dialect. The
transitions are labeled with server replies, while the
states are labeled with client commands. Reaching
the DATA command represents and email correctly
being sent.
aborted (typically because of an error). To study the SMTP
dialect spoken by a client, we are only interested in the se-
quence of commands and replies until the DATA command is
issued, or an error is reported.
In our previous work, we deﬁned an SMTP dialect D as
a state machine