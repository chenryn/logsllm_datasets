### Issue Report

**Elasticsearch Version:** 2.4.0  
**JVM Version:** 1.8  
**Operating System:** Elastic Cloud

#### Problem Description
The `distanceInMiles()` method is not recognized when GeoPoints are sourced from an array. The expected behavior is that the geo distance methods should operate on individual GeoPoints, regardless of their origin.

**Expected Behavior:**
- The `distanceInMiles()` method should work with GeoPoints from any source, including arrays.

**Actual Behavior:**
- When attempting to use `distanceInMiles()` on a GeoPoint from an array, the following error occurs:
  ```
  No signature of method: org.elasticsearch.common.geo.GeoPoint.distanceInMiles() is applicable for argument types: (java.lang.Double, java.lang.Double)
  ```

**Error Message:**
```
No signature of method: org.elasticsearch.common.geo.GeoPoint.distanceInMiles() is applicable for argument types: (java.lang.Double, java.lang.Double)
```

**Possible Solution:**
- It appears that Elasticsearch expects the GeoPoints to be of type `org.elasticsearch.index.fielddata.ScriptDocValues$GeoPoints`.

**Examples:**

- **Working Example:**
  ```json
  "script": "distance = doc['home.coordinates'].distanceInMiles(lat, lon)"
  ```

- **Working Example:**
  ```json
  "script": "doc[favorite_parks.coordinates].each { coordinate -> sumOfDistances = 1 }; return 1"
  ```

- **Non-Working Example:**
  ```json
  "script": "doc[favorite_parks.coordinates].each { coordinate -> sumOfDistances = coordinate.distanceInMiles(lat, lon) }; return 1"
  ```

#### Steps to Reproduce
Please refer to the following Gist for a detailed example and steps to reproduce the issue:
- [Gist](https://gist.github.com/alexlitvak13/8146cc5a8ac0defd5ffcf77116d375d4)

#### Related Commentary
For additional context and discussion, please see the related ticket: #16695

---

This optimized version provides a clear and structured description of the problem, including the expected and actual behaviors, examples, and steps to reproduce the issue.