/tmp/netrecon.log; D/E/F: internal hosts; P1: ImplantCore; P2: Ne-
tReCon; P3: Scanner. (b) A: attacker server; B/C/D: screen.png;
E: /tmp/.X11-unix/X0; P1: ImplantCore; P2: ScreenGrab. (c) A:
/dev/video; B: malicious site that contains CameraGrab payload;
C/D: pictures; E: attacker server; P1: Firefox browser; P2: Implant-
Core.
spreadsheet file to the original one stored in the archive (i.e., Cus-
tomized Comparison in §6.1). Because of the dependency between
documents, the team was also concerned about the impact on other
files. With these triggering points, the security team, to accurately
determine what was stolen and what was affected by the attack,
queried Rain for the exact causalities around the compromised site
and suspicious files.
To find out what was leaked to the attacker’s controlled site, Rain
performs a “Point-to-Upstream” analysis from the site to identify
the leaked data. First, Rain extracts the SPS from the provenance
graph by pruning off unrelated nodes and edges and downsizes it to
around 20% of the original provenance graph. Then Rain performs
refinement on some of of the process executions, including the
Firefox process which communicates with the site. After performing
selective refinement, Rain determines that even though multiple
files were accessed, only “ctct1.csv” was leaked. The refinement
further reduces the size of the SPS to around 10%, which reveals
the few but accurate causalities originating from the malicious site
(Figure 3). Rain also locates the set of files affected by the tampered
file as it is used by a finance program to generate reports and other
documents. The accurate results generated by Rain ensure that
the company is aware of the scope of data leakage and the impact
of the data tampering without panicking or having to carry out
unnecessary recovery efforts.
8.1.2 TC Red Team Exercise. We use the set of attack scenarios
from the red team exercise of the Transparent Computing (TC)
program [2] to continue our evaluation. The attack first installs
an implant-core on the victim’s system via social engineering (e.g.,
email). After installation, the implant-core communicates with the
attacker’s host (e.g., the C&C server) and receives and performs
future attack tasks. We use four unit attack examples (i.e., NetRecon,
ScreenGrab, CameraGrab, and AudioGrab) to demonstrate how
Rain works and what amount of accurate causality is generated.
P1AP2BCDE[RV][W][W][W][R][R][R][C][S][W]ABP2P1CP3FDE[C][C][IOC][IOC][W][R][RV,SD]P1ABCDEP2[IOC][W][W][R][R][SD](a) NetRecon(b) ScreenGrab(c) CameraGrabAnalysis Stages
Items
Attacks
MotivExp
(3h02m)
NetRecon
(2h38m)
ScreenGrab
(1h13m)
CameraGrab
(39m)
AudioGrab
(30m)
Analysis
A(O-Up)
A(O-Dn)
A(O-O)
A(O-Up)
A(P-Dn)
A(O-O)
A(P-Up)
A(O-Dn)
A(O-O)
A(P-Up)
A(O-Dn)
A(O-P)
A(O-Up)
A(P-Dn)
A(P-P)
Coarse Level Pruning
Fine Level Refinement
False Positive Rate
ProvGraph
19,634/135,474
12,892/86,376
7,327/46,367
5,308/33,440
4,909/33,382
Nodes/Edges
SPS
3,024/26,749
1,822/13,981
389/733
2,394/17,691
1,234/8,880
147/287
1,348/9,189
895/4,877
21/30
1,603/11,102
589/3,317
101/268
992/6,846
415/3,394
230/1,392
Nodes/Edges
Paths
Coarse%
Fine% REDUC%
Prune%
15.4%/19.7%
9.3%/10.3%
1.9%/0.5%
18.5%/20.5%
9.6%/10.3%
1.1%/0.3%
18.4%/19.8%
12.2%/10.5%
0.28%/0.07%
30.2%/33.2%
11.0%/9.9%
1.9%/0.8%
20.2%/20.5%
8.5%/10.1%
4.7%/4.2%
Result
342/2,621
46/336
98/222
198/210
86/799
34/66
156/952
72/351
5/4
96/477
59/70
24/59
49/232
31/161
84/519
Added%
11.3%/9.8%
2.5%/2.4%
25.2%/20.2%
8.3%/11.9%
7.7%/9.0%
23.2%/23.0%
8.2%/7.9%
8.1%/7.2%
23.8%/13.3%
6.0%/4.3%
10.5%/2.1%
24.1%/22.0%
4.9%3.4%
7.4%/4.7%
36.5%/37.3%
SPS Result Added%
-
-
37.3%
-
-
33.3%
-
-
55.5%
-
-
77.7%
-
-
81.8%
-
-
51
-
-
12
-
-
9
-
-
9
-
-
22
-
-
19
-
-
4
-
-
5
-
-
7
-
-
18
67.0%
55.6%
69.1%
70.3%
84.7%
66.6%
90.5%
82.1%
77.4%
32.0%
29.8%
44.2%
39.7%
48.2%
29.3%
0.0%
0.0%
0.0%
23.4%
13.0%
0.0%
0.0%
0.0%
0.0%
0.0%
0.0%
0.0%
0.0%
0.0%
0.0%
100.0%
100.0%
100.0%
66.8%
84.7%
100.0%
100.0%
100.0%
100.0%
100.0%
100.0%
100.0%
100.0%
100.0%
100.0%
Table 3: Incremental evolvement with pruning and refining. The Nodes/Edges column of provenance graph shows the whole system executions
during this period; Nodes/Edges of SPS tells the size of pruned data in different queries; Prune% gives the portion of pruned data to the original
one; In the fine-level refinement stage, we show the number of nodes and the number of added causality edges in Nodes/Edges, along with
the Added% rate. Particularly for the “Point-to-Point” analysis, the Paths column tells the number of paths in the SPS and the numbers
after refinement. Column FP-Coarse%, FP-Fine%, and REDUC% indicate the false positive rate with coarse-level provenance data, with Rain
refinement, and the reduction percentage.
Schemes
MotivExp
NetRecon
ScreenGrab
CameraGrab
AudioGrab
Analysis
A(O-Up)
A(O-Dn)
A(O-O)
A(O-Up)
A(P-Dn)
A(O-O)
A(P-Up)
A(O-Dn)
A(O-O)
A(P-Up)
A(O-Dn)
A(O-P)
A(O-Up)
A(P-Dn)
A(P-P)
2nd Point
-
-
AttkSvr
-
-
NR.log
-
-
AttkSvr
-
-
ImpCore
-
-
RptGen
Table 4: Analysis request details.
1st Point
AttkSvr
TmpedFile1
CtctA.csv
NR.log
NetScan
AttkSvr
ScrnGrab
X11Svr
X11Svr
ImpCore
CmrGrab(file)
CmrGrab(file)