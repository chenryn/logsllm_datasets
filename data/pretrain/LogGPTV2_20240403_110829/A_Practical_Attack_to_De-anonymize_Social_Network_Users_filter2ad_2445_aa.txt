title:A Practical Attack to De-anonymize Social Network Users
author:Gilbert Wondracek and
Thorsten Holz and
Engin Kirda and
Christopher Kruegel
A Practical Attack to De-Anonymize Social Network Users
Gilbert Wondracek
Thorsten Holz
Vienna University of Technology,
{gilbert,tho}@seclab.tuwien.ac.at
Austria
Engin Kirda
Institute Eurecom,
Sophia Antipolis
PI:EMAIL
Christopher Kruegel
University of California,
Santa Barbara
PI:EMAIL
Abstract—Social networking
such as Facebook,
LinkedIn, and Xing have been reporting exponential growth
rates and have millions of registered users.
sites
In this paper, we introduce a novel de-anonymization attack
that exploits group membership information that is available
on social networking sites. More precisely, we show that
information about the group memberships of a user (i.e., the
groups of a social network to which a user belongs) is sufﬁcient
to uniquely identify this person, or, at least, to signiﬁcantly
reduce the set of possible candidates. That is, rather than
tracking a user’s browser as with cookies, it is possible to
track a person. To determine the group membership of a user,
we leverage well-known web browser history stealing attacks.
Thus, whenever a social network user visits a malicious website,
this website can launch our de-anonymization attack and learn
the identity of its visitors.
The implications of our attack are manifold, since it requires
a low effort and has the potential to affect millions of social
networking users. We perform both a theoretical analysis and
empirical measurements to demonstrate the feasibility of our
attack against Xing, a medium-sized social network with more
than eight million members that is mainly used for business
relationships. Furthermore, we explored other, larger social
networks and performed experiments that suggest that users
of Facebook and LinkedIn are equally vulnerable.
I. INTRODUCTION
Social networking sites such as Facebook, LinkedIn, Twit-
ter, and Xing have been increasingly gaining in popular-
ity [1]. In fact, Facebook has been reporting growth rates as
high as 3% per week, with more than 400 million registered
users as of March 2010 [2]. Furthermore, this site has more
than 260 billion page views per month, and it is reported
to be one of the largest photo storage site on the web with
over one billion uploaded photos. Clearly, popular social
networking sites are critical with respect to security and
especially privacy due to their very large user base.
Of course, social networking sites are not less secure than
other types of websites. However, the difference to other
sites lies in the amount of private and possibly sensitive data
that they store. Social networking sites are typically used to
contact friends, discuss speciﬁc topics in online discussion
forums and groups, establish new business contacts, or
simply to keep in touch with other people. Along with the
information about friendships and acquaintances, users often
provide a great deal of personal information that may be
interesting for attackers. Although social networking sites
employ mechanisms to protect the privacy of their users,
there is always the risk that an attacker can correlate data or
abuse the structure of a social network to infer information
about registered individuals [3]–[6].
While there are several ways to effectively track browsers
on the Internet (e.g., third-party cookies, network latencies,
or browser characteristics [7]), these methods leave the user
pseudonymous and the real-world identity of a user cannot
be discovered in any known way. That is, tracking focuses
on identifying individual browsers rather than the persons
using the browsers. As a result, current tracking methods
only provide information which sites have been visited, but
not who the user behind these visits actually is. A user, thus,
has a certain degree of anonymity or at least pseudonymity
on the Internet. In this paper, we introduce a novel de-
anonymization attack against users of social networking sites
that enables us to determine the identity of the visitor of
a website. In particular, we show that information about
the group memberships of a user (i.e.,
the groups of a
social network to which a user belongs) is often sufﬁcient
to uniquely identify this user. When unique identiﬁcation is
not possible, then the attack might still signiﬁcantly reduce
the size of the set of candidates that the victim belongs to.
To make the de-anonymization attack practical, we present
a way in which an adversary can learn information about
the group memberships of a user who is just browsing the
web. To do this, an attacker can leverage the well-known
technique of history stealing [8], [9]. More precisely, using
history stealing, an attacker can probe the browser history
of a victim for certain URLs that reveal group memberships
on a social network. By combining this information with
previously collected group membership data from the social
network, it is possible to de-anonymize any user (of this
social network) who visits the attacker’s website. In some
cases,
this allows an attacker who operates a malicious
website to uniquely identify his visitors by their name (or,
more precisely, the names used on the corresponding social
network proﬁles).
Previous work in the area of de-anonymization was
mostly focusing on correlating information from several
independent data sets (datasets from different sources) or re-
identifying data records. For example, Grifﬁth and Jakobsson
that
in two recent papers,
used public records such as marriage and birth information
to derive a mother’s maiden name [10]. Narayanan and
Shmatikov showed,
informa-
tion from different data sources can be combined to de-
anonymize a user [5], [11]. In contrast, our attack uses infor-
mation from a single social networking site, and combines
it with intrinsic information that is generated while users
access the site. That is, our attack makes use of the fact that
the browser records the URLs of the social networking site
that a user visits (since browsers typically keep an access
history for some time). As a result, a website can use our
technique to learn the identity of its visitors.
To demonstrate that our attack is feasible, we performed
both a theoretical analysis and empirical measurements for
users of the Xing social network. The results suggest that
our attack can be used to potentially de-anonymize millions
of users. Due to the limited resources that were available to
us, we focused our empirical evaluation on Xing, a medium-
sized network that has eight million registered users. We
managed to extensively collect data for this network and
achieved a high coverage of its groups and members. How-
ever, to demonstrate that the attack is not conceptually lim-
ited to one social network, we also performed an empirical
feasibility study on two other, signiﬁcantly larger networks:
Facebook and LinkedIn. Furthermore, we also brieﬂy studied
ﬁve other social networks and found that
they are also
vulnerable to our attack.
Our attack can also be generalized to other websites that
generate sparse datasets (i.e., the information about each
individual user covers only a small fraction of the overall
attributes) [11]. In the case of social networks, our attack
works because even the most active user is only a member
of a small fraction of all groups, and thus, the group mem-
bership information serves as a ﬁngerprint. Sparse datasets
are common with websites that deal with user data. For
example, Amazon and eBay use concepts similar to groups
on social networks (“Customer Communities” and “Groups,”
respectively) and encode within the URL relevant informa-
tion, meaning that they are both potentially vulnerable to our
de-anonymization attack. Furthermore, sites like Twitter or
other micro-blogging sites might also be vulnerable to our
attack: such sites do not offer group functionality, however,
the “following” connection on these sites also discloses in-
formation about the relationship between individual proﬁles.
In summary, we make the following three contributions in
this paper:
• We introduce a novel de-anonymization attack, and
show how it can be applied to social networking sites.
The key idea of the attack is to exploit
informa-
tion about speciﬁc users (in this case, membership in
groups) combined with the victim’s browsing history.
• We demonstrate several techniques to scale our attacks
to real-world social networking sites. This is a chal-
lenging task since these websites often have tens of
millions of users.
• We provide both a theoretical analysis and empirical
measurements to demonstrate the feasibility of our
attack. The results indicate that about 42% of users in
the social network Xing that use groups can be uniquely
de-anonymized. Furthermore, we empirically show that
both Facebook and LinkedIn are also vulnerable.
II. BACKGROUND
In this section, we provide a brief introduction to the
background concepts to allow the reader to better understand
our attack. We ﬁrst present a model of social networks,
deﬁne the terminology we use within this paper, and then
list our assumptions about the attacker. We continue with an
overview of the common structure of social networks and
discuss the aspects of this structure that we exploit. Finally,
we explain why social networks are commonly prone to
history stealing attacks and provide an overview of possible
attack scenarios.
A. Model and Deﬁnitions
Throughout this paper, we use the following models and
deﬁnitions to describe our de-anonymization attack.
Social Networks: A social network S is modeled as
a graph G = (V, E) containing nodes V representing
users, and undirected edges E representing the “friendship”
relation between two users. Furthermore, the social network
contains G groups. Each group g ∈ G contains a set of users
from V : ∀g ∈ G : g ⊆ V . Social networks typically do
not allow empty groups without any user (and also actively
delete such groups). Thus, we can assume, without loss of
generality, that ∀g ∈ G : g 6= ∅.
Each user v ∈ V is a member of nv groups, with n ≥ 0.
We model this information as a vector Γ(v) := (Γg(v))g∈G
such that:
(
1
0
Γg(v) =
if v is a member of group g
if v is not a member of group g
(1)
For each group g in which v is a member, one dimension
of Γ(v) is set to one. Otherwise, this dimension is set to
zero. For the case of n = 0 (i.e., the user is not a member
of any group), the vector Γ(v) contains only zeros. This is
the worst case for our attack.
As we will show, the vector Γ(v) can be used to de-
anonymize users within a social network. In particular, Γ(v)
serves as the group ﬁngerprint of a user, and we demonstrate
in our experiments that
is
characteristic for a given user.
this ﬁngerprint,
in practice,
Browser History: A building block that we use during
our attack is the browsing history βv of a user v. A web
browser maintains a list of web pages that the user has
recently visited. Every time a user visits a page p,
the
URL φp that was used to load this page is added to βv.
Moreover, entries in βv expire. That is, after a time interval
τ has elapsed, the URL related to p is removed from βv.
The timeout itself depends on the browser and user settings.
For example, Mozilla Firefox uses τ = 90 days by default,
while Microsoft Internet Explorer only uses τ = 20 days.
Apple Safari is between both browsers with τ = 1 month
by default, whereas Google Chrome has an unlimited history
timeout τ = ∞.
Attacker Model: We have two basic assumptions about
an attacker. First, we assume that the attacker can determine
which web pages, from a given set, a speciﬁc user v has
accessed in the recent past (within time τ). This means that
the attacker can determine whether or not a given URL φp
is in βv. The attacker, thus, has a method to compute, for
a given victim v, the function σv(φp), which is deﬁned as
follows:
if φp ∈ βv for the user v
if φp 6∈ βv for the user v
(2)
(
1
0
σv(φp) =
It is reasonable to assume that such a function exists and that
the attacker can perform the computation based on history
stealing, as we show in Section II-C.
The second assumption is that the attacker has a way
to learn about the members of groups for a given social
network S. As deﬁned above, a group g is a non-empty
subset of the overall users of S. The attacker does not need
to have the membership information for all groups g ∈ G.
However, knowledge about more groups makes the attack
more efﬁcient. In Section III-C, we discuss how an attacker
can obtain the necessary group membership information.
We believe that our two assumptions about an attacker
can be (easily) satisﬁed in practice, and our empirical
experiments support this claim. Moreover, as we will discuss
in Section III, our attack is able to tolerate a certain amount
of inaccuracy. That is, even when the history stealing attack
does not produce a perfect group ﬁngerprint Γ(v) for a
victim v, or when the attacker’s view of the social network
is different than the network’s actual state (e.g., due to users
who join and leave groups), the attack can still be successful.
However, in such cases, it typically proceeds slower and
produces larger candidate sets.
B. Structure of Social Networking Sites
1) Overview: Most social networking sites share the
same basic structure. Each user v within the network has
a proﬁle pv that contains (partially sensitive) information.
This information, for example, can be the user’s full name,
photographs, date of birth, relationship status, former and
current employers, and education. One of the core technical
components of a social network is its website, and the
underlying web application. The web application provides
the main functionalities of the social network. This function-
ality often comprises of features that allow a web visitor to
become a member, to edit personal proﬁles, to view other
user proﬁles, or to join groups. To become a member of a
social network, users can sign up at the website. This process
usually only requires a valid e-mail address for veriﬁcation
purposes.
Since social networks can have millions of users, most
popular social networks (see Table I) include features that
allow users to be organized in groups. This feature al-
lows users of a social network to easily ﬁnd other users
with whom they might share speciﬁc interests (e.g., same
hobbies), demographic groups (e.g., studying at the same
university), political or sexual-orientation, and even medical
conditions. Typically, there exists some kind of hierarchy
within a group. That is, particular members can hold the
role of administrators or moderators, which grants them
some special privileges (e.g., sending messages to the whole
group, or removing members). In general, two different types
of groups exist:
• Public groups: These groups allow all members of
the social network to join. Typically, members are
automatically added to the group when they wish to
join. Interestingly, we found that some social networks
even allow non-group members to list the members of
public groups (e.g., Facebook).
• Closed groups: On the other hand, closed groups re-
quire some sort of authorization before a member is
allowed to join. In practice, this means that a group
administrator or moderator needs to manually approve
each membership request.
The different social networks vary widely in the number
of available groups. Networks that target a general audience
typically have a large number of groups, and the average
user is a member of many groups. Social networks that target
business users, on the other hand, have a smaller number of
groups, and the average user is only a member in a few
groups (see Section V for more speciﬁc results).
2) Web Applications: The web applications for the most
popular social networks (see Table I) rely on hyperlinks and
HTTP GET parameters to implement the communication
between a user (more precisely, her browser) and the actual
web application. For example, Figure 1 shows six real-world
examples from different web applications that are represen-
tative for two groups of hyperlinks. The ﬁrst link is used to
tell the web application of Facebook to display the currently
logged-in user’s “home” area. Since the hyperlink for this
operation is the same for every user of the social network,
we refer to links of this type as static hyperlinks. In contrast,
the other links are used to inform the web application of state
changes requested by a user. For example, the second link
sends a request to the web application that the user with the
ID userID wishes to upload a new proﬁle picture. This link
contains a dynamic token (in this case, the ID of user v), so
we consequently call it a dynamic hyperlink. This type of
links explicitly contains information about a user since the
Name of social network