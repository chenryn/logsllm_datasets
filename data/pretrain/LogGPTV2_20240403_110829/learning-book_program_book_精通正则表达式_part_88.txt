(see
need cognizance 252
NFA)
needless class elimination 248
None (.NET)
421,427
needless parentheses 248
non-greedy (see lazy)
pre-check ofrequired charac-
nonillion226
ter 245-248,252,257-259,332,
nonparticipation
parentheses 450,
361
453-454, 469
simple repetition
nonregular sets 180
discussed 247-248
\p(Non_Spacing_Mark)123
small quantifier equivalence 251-252
non-wordboundaries
(seeword
state suppression 250-251
boundaries)
string/line anchors 149,181
normal"
263-266
super-linear short-circuiting 250
NUL117
option
with dot 119
-036
NULL454
-c361
\p(Number)
122
-Dr 363
-e36,53,361
-i53
/o352-353
-M361
with regex object 354
-Mre=debug 363
Obfuscated Perl Contest 320
-n36
object model
-P53
Java 371-372
-w 38, 296, 326, 361
NET 416-417
Option(.NET)415
ObjectOrlentedPerl339
optional (see also quantifier)
object-orientedhandling
95-97
whitespace 18
compile caching 244
Options (Regexobject method)
ORclassset operations 125-126
427
octal escape 116,118
vs.backreference 412-413
Oram, Andy
5
Perl 286
ordered alternation
175-177
offset preg_match 453
(see also alternation,ordered)
on-demand recompilation
351
pitfalls 176
oneselfcxample
332,334
osmosis 293
\p(Open_Punctuation)
123
/osmosis
293
operators
Perl list 285
\p(other)
122
optimization
240-252
\p(other_Letter)
123
(see also: atomic grouping; possessive
\p(Other_Number)
123
quantifiers;efficiency)
\p(other_Punctuation)
123
automaticpossessification 251
\p(other_Symbo1)
123
BLTN 236
our
295,336
with bump-along 255
overload pragma
342
end-of-string anchor 246
excessive backtrack 249-250
hand tweaking 252-261
\p()
implicit line anchor 191
Java 125
initial character discrimination 245-248,
.NET 125
252,257-259, 332, 361
PHP 125
JIT 236, 410
\p（P）122
lazy evaluation 181
\p（~）288
lazy quantifier 248,257
\p（A11)125
leading.*246
Perl288
---
## Page 531
索引
505
\p(a11)）369
Pattern(cont'd)
panic:top_env 332
matcher 373
\p(Any}125,442
matches 395
Perl 288
MULTILINE 81,368, 370
Papen,Jeffrey
ADX
MULTILINE bug 387
PARAGRAPHSEPARATOR 109,123,370
pattern 394
\p(Paragraph_Separator)123
parentheses
split 395-396
as\()86
toString 394
and alternation 13
UNICODE_CASB 368,372
balanced 328-331,340-341,436,
UNIX_LINES 368, 370
475-478, 481
pattern argument
472
difficulty 193-194
array order 462, 464
capturing 137,300
pattern arguments
PHP
444.448
and DFAs 150, 182
patternmethod393-394
introduced withegrep20-22
patternmodifier
mechanics 149
A447
Perl 41
D 442, 447
capturing only
152
e 459,465,478
counting 21
m442
elimination optimization 248
S259, 447, 460,467, 478-480
grouping-only (see non-capturing
u 442, 447-448, 452-453
parentheses)
U447
limiting scope 18
unknown errors 448
named capture 138,344-345,408-409,
x 443, 471
450-452, 457, 476-477
X 447
nested 328-331,340-341,436,475-477,
patternmodifiersPHP446-448
481
PatternSymtaxRxception 371,373
non-capturing 45,137-138
\p(Basic_Latin)
124
non-participating 300
\p(Box_Drawing)
124
nonparticipation 450,453-454,469
\p（C）122
with split
Java 369
.NET 409, 426
\p(Pc)
123,406
Perl 326
\p（Cc)
123
\p(Arrows)124
\p(cf)
123
parser 132,389,399
\p(Cherokee)
122
parsing regex 410
\p(Close_Punctuation)
123
participatein match
140
\p(Cn)123,125-126,369,408
Pascal 36,59,183
Java369
matching comments of 265
\p(Co)
123
\p(Assigned)125-126
\p(Connector_Punctuation)
123
Perl 288
\p(Control)
123
patcb88
PCRE 91,440
path （see backtracking)
(see also PHP)
pathname example190-192
“extra stuff”447
Pattern
flavor overview441
CANON_BQ 108,368
lookbehind 134
CASE_INSENSITIVE 95,110,368,372
recursive matching 475-478
CASE_INSENSITIVE bug 392
study 447
COMMENTS 99,219,368, 401
version covered 440
compi1e 372
120
DOTALL 368,370
web site 91
flags 394
X pattern modifier 447
---
## Page 532
506