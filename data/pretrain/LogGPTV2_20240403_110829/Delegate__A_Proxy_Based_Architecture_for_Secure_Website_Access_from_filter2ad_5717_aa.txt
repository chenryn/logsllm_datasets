title:Delegate: A Proxy Based Architecture for Secure Website Access from
an Untrusted Machine
author:Ravi Chandra Jammalamadaka and
Timothy W. van der Horst and
Sharad Mehrotra and
Kent E. Seamons and
Nalini Venkatasubramanian
Delegate: A Proxy Based Architecture for Secure Website Access from an
Untrusted Machine
Ravi Chandra Jammalamadaka(cid:0), Timothy W. van der Horst(cid:1)
Sharad Mehrotra(cid:0), Kent E. Seamons(cid:1), Nalini Venkasubramanian(cid:0)
University of California, Irvine(cid:0)
(cid:0)rjammala,sharad,nalini(cid:1)@ics.uci.edu
Brigham Young University(cid:1)
(cid:0)timv,seamons(cid:1)@cs.byu.edu
Abstract
Performing sensitive online transactions using comput-
ers found in cybercaf´es and public libraries is risky. The
untrusted nature of these machines creates a target rich en-
vironment. A simple keystroke logger, a common payload of
many viruses, records and transmits the secret information
(e.g., passwords, credit card numbers, PIN numbers) en-
tered into these machines. In addition, sophisticated mal-
ware can hijack a user’s authenticated session to perform
unauthorized transactions masquerading as the user.
This paper presents Delegate, a proxy-based architec-
ture that enables a user to access web sites without disclos-
ing personal information to untrusted machines. Delegate
enforces rules at the proxy to detect and prevent session
hijacking. This architecture leverages users’ trusted mo-
bile devices, e.g., cell phones, and requires no modiﬁcation
to web servers or the untrusted machines. Delegate is de-
signed to provide a balance between security and usability.
1 Introduction
The widespread acceptance of the Internet as a medium
of doing business introduces new avenues for identity theft.
Many people access the Internet using public computers
that are not under their direct control, such as those avail-
able in cybercaf´es, public libraries, and universities. A com-
promised computer may be under complete control of an
adversary who can then log keystrokes/click streams, snoop
incoming and outgoing data, and take screen shots.
In New York, an adversary stole about 450 online bank-
ing passwords during a 2 year period by installing a key-
board snifﬁng program on public terminals at 13 different
This research was supported by funding from the National Science
Foundation under grant no. CCR-0325951 and IIS-0220069, the prime
cooperative agreement no. IIS-0331707, and The Regents of the University
of California.
Kinkos locations in Manhattan [1]. An insider working in
a computer lab at BYU installed spyware that collected pri-
vate information from 600 students [6]. A similar instance
occurred at Boston College [2].
While not widely observed, more sophisticated active at-
tacks are possible. For example, an attacker could hijack
or piggyback on user’s session at an online store and make
additional purchases. In the case of an online bank, the at-
tacker could transfer money to a different account while the
user checks his balance.
The attacks available on public computing terminals are
not limited to the theft of information. Many times an at-
tacker is not concerned with what can be obtained by an at-
tack but what can be destroyed. For example, when the user
is accessing his/her email, an attacker could delete email
messages or send spam (or dirty messages) to everyone in
the user’s address book.
People continue to use untrusted public computers in
spite of these risks. For a traveler, a computer at a cyber-
caf´e may be the only resource for his/her computing needs.
A laptop owner may be forced to use a public computer due
to a lack of network connectivity.
This paper presents the design of Delegate, an architec-
ture to safeguard users against the threat of attack while us-
ing untrusted public computers. The goals of Delegate are
to prevent an attacker from: 1) Stealing a user’s secret infor-
mation; 2) Destroying a user’s personal information; and 3)
Hijacking a user’s session in order to perform unauthorized
transactions at a web server. Delegate assumes the user has
a cell-phone or other trusted personal communication de-
vice that can be used to communicate with the user without
relying on the untrusted machine. The user can send and
receive personal information on the cell phone as well as
validate and approve sensitive transactions.
The remainder of the paper is organized as follows. Sec-
tion 2 presents our threat model and architecture. Section
3 details its current implementation. Section 4 shows how
Delegate addresses session hijacking. A security analysis
of Delegate is in Section 5 and experimental results are re-
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:32:31 UTC from IEEE Xplore.  Restrictions apply. 
Proceedings of the 22nd Annual Computer Security Applications Conference (ACSAC'06)0-7695-2716-7/06 $20.00  © 2006ported in Section 6. Section 7 discusses related work, and
Section 8 provides conclusions and future work.
any sensitive information from a web server’s response be-
fore forwarding it to the untrusted machine.
2 Architecture
Delegate is designed to address and mitigate the preva-
lent attacks that occur in the context untrusted machines,
namely: keylogging, password snifﬁng, shoulder surﬁng,
and session hijacking. The other goals of the Delegate ar-
chitecture are:
(cid:1) Authenticate users who access web service providers
from untrusted machines without requiring the user to
reveal any long-term secrets that an attacker can use
to impersonate the user in the future.
(cid:1) Detect and prevent session hijacking in order to stop
malware from performing unauthorized transactions
while the user is performing legitimate operations.
(cid:1) Limit the scope of potential damage by reducing the
attack surface while the user is accessing the web
from an untrusted machine.
(cid:1) Minimize the number of changes that are required by
a web server or a user in order to deploy the system.
(cid:1) Create a system that is easy to use. The design must
strike an appropriate balance between security and us-
ability. If user’s ﬁnd the system too burdensome, they
will quickly grow tired of using it and turn it off.
The design of Delegate is illustrated in Figure 1. There
are four components in the architecture: 1) Trusted proxy;
2) Web server; 3) Untrusted computer; and 4) Trusted, mo-
bile device.
Untrusted computer For this paper, a machine is un-
trusted if it is not under the administrative control of the
user. This includes any computer where software can be
installed without the user’s knowledge or permission. An
untrusted machine under complete control of an adversary
is unlimited in the kinds of attacks it can launch.
Trusted proxy The trusted proxy is under the complete
administrative control of the user. Typically, it is a home
or an ofﬁce machine.1 This proxy stores a user’s secret in-
formation and acts as a middleman between an untrusted
machine and a web server by ﬁltering all incoming and out-
going trafﬁc between them.
The proxy: 1) Authenticates the user via the mobile de-
vice when it receives a request to establish a secure session
from an untrusted machine; 2) Intercepts the user’s requests
and inserts secrets when necessary; 3) Requests user val-
idation of any potentially dangerous requests via a secure
channel with the trusted modile device; and 4) Removes
1In cases where organizations do not allow individual users to host
servers, the proxy should be maintained by the organization itself.
Web server A web server communicates directly with the
proxy and is unaware of the untrusted computer. Since each
user operates their own trusted proxy, no modiﬁcation to
web servers is required in this system
Trusted mobile device The user must possess a trusted
mobile device, e.g., a cell phone, in order to use Delegate.
The trusted proxy contacts the user through this device to
obtain authorization for requests from the untrusted com-
puter. Delegate is also designed to minimize the resources
required by trusted moble device. If the cell phone is lost
or stolen, it must be easy for the user to quickly revoke the
trust that the proxy has in the cell phone.
Although many mobile devices can directly access web
sites and avoid the security risks associated with untrusted
platforms, they lack many of the advantages of using a desk-
top machine, including: 1) A larger display; 2) Greater net-
work bandwidth; 3) More memory and processing power;
and 4) No dependancies on battery life.
Usage 1) The user’s requests to the web server from an
untrusted machine is routed through the trusted proxy. 2)
The trusted proxy validates the request using the mobile
phone. The proxy establishes a session, and rejects any re-
quests that are outside the domain of the original request.
3) The proxy inserts secrets into subsequent requests that
require them, seeking explicit permission from the user via
the mobile device if necessary. 4) The proxy scrubs sen-
sitive information from pages before they are returned. 5)
When a request is determined to be dangerous, the proxy
obtains explicit permission from the user to forward the re-
quest. 6) The user terminates the session with the trusted
proxy to prevent an attacker from performing transactions
after the user leaves the untrusted computer.
(cid:0)(cid:1)(cid:2) (cid:3)(cid:4)(cid:6)(cid:7) (cid:9) (cid:4)(cid:13)(cid:6)(cid:14)(cid:4)
A principal motivation for the proxy design is to de-
ploy Delegate without requiring any changes to web servers.
This provides a convenient way to bootstrap the usage of
this system. However, this may ultimately hinder broad
adoption because not all users are in a position to run their
own proxy. The proxy service could be offered by a trusted
third party, however this third party would to be trusted to
store and manage a user’s sensitive information and would
be an attractive target for attackers.
If web servers incorporated the functionality of the
proxy, then many problems would go away. Sensitive in-
formation would be distributed among servers who are al-
ready trusted with this information. The beneﬁts of Dele-
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:32:31 UTC from IEEE Xplore.  Restrictions apply. 
Proceedings of the 22nd Annual Computer Security Applications Conference (ACSAC'06)0-7695-2716-7/06 $20.00  © 2006Untrusted 
Machine
Trusted Proxy Computer 
B
R
O
W
S
E
R
Http 
request
Parser
Secret 
Filler
Delayed 
requests
Rule Engine
Check for all applicable rules
Resolve Conflicts
Request that 
needs 
validation
Validation of 
http request
Trusted 
hardware
User
secrets
Rules
Special HTTP 
request
Delayed requests
Feedback
Rule Learner
New rules
Modified
http request
Web 
Server
HTML
Sensitive 
Information 
remover
HTML
URL 
rewriter
Figure 1. Delegate Proxy-Based Architecture
gate would be immediately available to a much larger audi-
ence than the proxy model supports, namely all users who
have access to a cell phone with text messaging capabilities.
3 Implementation
We have implemented a preliminary Delegate prototype
in Java. Messages are sent to a traditional cell phone via
SMS text messaging or through a traditional socket to spe-
cialized software on the mobile device. This software is im-
plemented in the Java micro edition environment (J2ME).
Delegate enables access to websites running both HTTP and
HTTPS, but for simplicity we refer to both as HTTP.
When the user requests to browse a website with SSL
support, Delegate opens two SSL connections, one SSL
connection between proxy and the untrusted public com-
puter and another connection between proxy and the web
server. After the SSL connections are made, the proxy can
now act as a man-in-the-middle between the untrusted ma-
chine and the webserver.
Since an SSL connection is opened with the proxy, the
certiﬁcate that the proxy produces during the SSL hand-
shake is not trusted by the untrusted public computer. Even
if the user is visiting a web site that he deems should contain
a valid certiﬁcate, the user will be prompted with an invalid
certiﬁcate alert message from the browser, since this certiﬁ-
cate belongs to the proxy. To avoid such a situation, the user