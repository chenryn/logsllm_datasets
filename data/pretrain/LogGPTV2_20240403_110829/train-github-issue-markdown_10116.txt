If you know how to fix the issue, make a pull request instead.
  * I tried using the `@types/xxxx` package and had problems.
  * I tried using the latest stable version of tsc. https://www.npmjs.com/package/typescript
  * I have a question that is inappropriate for StackOverflow. (Please ask any appropriate questions there).
  * Mention the authors (see `Definitions by:` in `index.d.ts`) so they can respond. 
    * Authors: @bczengel @kuzn-ilya @stepancar @ericanderson @aj-r @Ailrun @e-cloud @jtmthf
The `NumericDictionaryIterator`'s `key` param is incorrectly typed compared to
runtime values. The type of `key` is `number` (makes sense, since it's a
Dictionary keyed by `number`), but at runtime, keys of objects are always
`string`.
I encountered this while using `_.map()` on a `NumericDictionary`. At runtime,
`key` is a string and was creating incorrect data (because I expect it to be a
number). I couldn't use `parseInt()` to convert it to a number, because
`parseInt()` only accepts `string`, but `key` is typed as `number` at compile
time.
To get correct behavior, I needed to use `parseInt(key as any, 10)` to convert
the run time string value to a number at run time.
I didn't want to make a sweeping change like this in a PR, because I'm not
aware of intricacies where the current definition of
`NumericDictionaryIterator` may actually be correct at run time. Is the fix
really as simple as replacing all current usages of
`NumericDictionaryIterator` (and related) types with the corresponding
`DictionaryIterator` (and related) types, and deleting the
`NumericDictionaryIterator` (and related) types? It seems that the various
overloads of methods like `_.map()` that accept a `NumericDictionary` should
use a plain `DictionaryIterator`.
If someone can confirm that the fix is that simple, I'd be willing to make the
changes.