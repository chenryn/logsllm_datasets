title:Arming IDS Researchers with a Robotic Arm Dataset
author:Arpan Gujarati and
Zainab Saeed Wattoo and
Maryam Raiyat Aliabadi and
Sean Clark and
Xiaoman Liu and
Parisa Shiri and
Amee Trivedi and
Ruizhe Zhu and
Jason Hein and
Margo I. Seltzer
2
2
0
0
0
.
2
2
0
2
.
5
0
4
3
5
N
S
D
/
9
0
1
1
.
0
1
:
I
O
D
|
E
E
E
I
2
2
0
2
©
0
0
.
1
3
$
/
2
2
/
1
-
3
9
6
1
-
4
5
6
6
-
1
-
8
7
9
|
)
N
S
D
(
s
k
r
o
w
t
e
N
d
n
a
s
m
e
t
s
y
S
e
l
b
a
d
n
e
p
e
D
n
o
e
c
n
e
r
e
f
n
o
C
l
a
n
o
i
t
a
n
r
e
t
n
I
P
I
F
I
/
E
E
E
I
l
a
u
n
n
A
d
n
2
5
2
2
0
2
2022 52nd Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN)
Arming IDS Researchers with a Robotic Arm Dataset
Arpan Gujarati, Zainab Saeed Wattoo, Maryam Raiyat Aliabadi, Sean Clark, Xiaoman Liu,
Parisa Shiri, Amee Trivedi, Ruizhe Zhu, Jason Hein, and Margo Seltzer
University of British Columbia (UBC), Vancouver, Canada
Abstract—Industry 4.0 is rapidly transforming traditional
manufacturing practices. Smart manufacturing technologies that
automate research and development using a combination of robotic
arms and domain-speciﬁc cyber-physical systems are at the core
of this transformation. Unfortunately, dependence on networked
communication increases the risk of security attacks, which must
be mitigated using either platforms that are secure by design
or intrusion detection and prevention systems. We report on an
ongoing project to design and develop intrusion detection systems
(IDS) for the Hein Lab, a smart manufacturing research lab in the
chemical sciences domain. Designing effective IDS requires large
datasets and high-quality, domain-speciﬁc benchmarks, which are
difﬁcult to obtain. To address this gap, we present the Robotic
Arm Dataset (RAD), which we collected at the Hein Lab over a
three-month period. We also present our non-intrusive tracing
framework RATracer, which can be retroﬁtted onto any existing
Python-based automation pipeline, and two sets of preliminary
analyses based on the command and power data in RAD.
Index Terms—robotic arms, intrusion detection, dataset
I. INTRODUCTION
Industry 4.0, also known as the Industrial Internet of Things
(IIoT), is being driven by fully automated smart manufacturing.
These facilities need to be secured against attacks over the
Internet as well as attacks arising from the use of off-the-shelf
software. Defense in depth is crucial to ward off zero-day
attacks. For example, while host- and network-based intrusion
detection systems (IDS) help minimize unauthorized access,
additional safeguards are necessary to prevent automation tools
such as robotic arms from damaging expensive property or
harming the humans working in the same physical space.
Our work addresses the challenge of designing domain-
speciﬁc safeguards for a smart manufacturing research labo-
ratory in the chemical sciences domain. Speciﬁcally, we are
collaborating with researchers at the Hein Lab [15] – a state-
of-the-art research lab at the University of British Columbia
that blends advanced robotics with synthetic organic chemistry
– to secure their cyber-physical systems (CPS) infrastructure,
which they use for automating organic chemistry experiments.
The Hein Lab uses a single lab computer, accessed locally
or remotely, to programmatically control all CPS devices. We
introduce a trusted middlebox between the lab computer and
the CPS devices that need not be connected to the Internet; the
middlebox accepts only a restricted set of commands (Fig. 1).
Our goal is to use the middlebox as the last level of defense
by deploying effective safeguards on it (e.g., alerts, anomaly
detection, rule-based IDS, more complex behavioral-based IDS)
that understand the “language” in which the software on the
lab computer communicates with the automation tools.
1(cid:2) Users program and automate experiments using the Hein
Fig. 1. Overview:
2(cid:2) Python wrappers instrument
Lab’s software packages on the lab computer.
3(cid:2) An RPC client on the lab
the software to intercept every device access.
4(cid:2) An RPC server
computer sends each device command to the middlebox.
on the middlebox forwards each command to the target device, waits for
5(cid:2) The middlebox also monitors
its response, and sends the response back.
6(cid:2) Device commands,
the power consumption of robotic arms periodically.
7(cid:2) Data mining.
responses, and the power data are continuously logged.
However, designing effective safeguards, even for a smaller
state space consisting only of commands, requires high-quality
domain-speciﬁc datasets and benchmarks. Unfortunately, such
datasets are limited, and those that are available, e.g., AURSAD
by Leporowski et al. [33, 34], do not apply to real-world
scenarios such as ours (§II). Robot arm simulators [1, 2]
offer a different approach to dataset generation, but real-
world deployments are often heterogeneous, consisting of one
or more robotic arms together with an assortment of smart
devices. It is nontrivial at best, and impossible at worst, to
integrate a collection of device-speciﬁc simulators to model an
environment as complex as the Hein Lab’s setup.
This paper: We summarize our experience working on the
ﬁrst phase of our collaboration with the Hein Lab. Our goal is to
make available a robotic arm dataset that can support research
in multiple areas. To date, we have focused on anomaly-based
intrusion detection, which is a particularly promising approach
because, (i) there do not exist databases of known attacks, and
(ii) there is insufﬁcient accumulated experience to produce a
collection of rules likely to capture all attack scenarios.
First, we present RATracer, a non-intrusive robotic arm
tracing framework that can be retroﬁtted onto any existing
Python-based automation pipeline without signiﬁcant effort
from programmers and researchers (§III). RATracer is published
with the Python Package Index by the name niraapad [19].
Second, we open-source all traces collected by RATracer
as the Robotic Arm Dataset (RAD) (§IV) [22]. The dataset
includes (i) command/response data from multiple robotic arms
2158-3927/22/$31.00 ©2022 IEEE
DOI 10.1109/DSN53405.2022.00022
101
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:16:16 UTC from IEEE Xplore.  Restrictions apply. 
engaged in a variety of software-controlled chemical synthesis
workﬂows; (ii) data documenting the interaction between these
robotic arms and other smart devices used in the workﬂows;
and (iii) detailed power data recorded from each of the joints
in one of the robotic arms (the Universal Robots UR3e).
Third, we show that command sequences in RAD can be
interpreted as a language, allowing us to use natural language
processing (NLP) techniques to model experimental procedures
(§V) [6]. Our preliminary analyses use this approach to classify
different procedure types and identify anomalous procedure
runs in a small subset of supervised data within RAD.
Finally, we analyze power data measurements from the
UR3e to demonstrate that such side channels offer tremendous
potential in identifying both command parameters, such as
robot arm velocities, and external contexts, such as payload
weights (§VI) [7]. These results are encouraging, because such
data can be collected independently of Hein Lab’s software
infrastructure and without RATracer-like frameworks.
II. RELATED WORK
RAD is not
the ﬁrst open-source robotic arm dataset.
Leporowski et al. [33, 34] recently presented a similar time-
series dataset based on automated screw-driving operations,
carried out using the UR3e and an OnRobot screwdriver.
Likewise, Narayanan and Bobba [36] focused on a triangle-
shaped laser cutting application using a six-axis Yaskawa
Motoman MH5 robotic arm. We are also not the ﬁrst to examine
side-channels, such as power proﬁles, as important data sources
that reveal the workings of a robotic arm. Pu et al. [38], Duman
et al. [27], and Khan et al. [32] studied power, acoustic, and
electromagnetic signals arising from robotic arms, respectively.
Our focus on heterogeneous, real-world, end-to-end workﬂows
sets RAD and this paper apart from prior work.
Wu et al. [3, 42, 43] address intrusion detection in smart
manufacturing, using an extensive testbed consisting of a 3D
printer, CNC milling machine, heating chamber, conveyor, and
three robotic arms for moving, welding, and assembly. However,
while their testbed is comparable to ours in complexity, each
of their case studies focuses on a single device, e.g., evaluating
a weakened 3D printing object, a manipulated CNC milling
process, or speed attack on the robotic arms.
In theory, simulators can generate RAD-like datasets, as
suggested in prior work by Zuo et al. [44] and Vijayan et al.
[41]. However, no integrated simulation framework exists today
that can provide real-world data on the interactions between
heterogeneous devices. Simulators also cannot generate side
channel data. For example, we observed signiﬁcant discrepan-
cies between the power data collected from the UR3e robot
and that collected from its simulator [2].
Therefore, to the best of our knowledge, this is the ﬁrst
effort of its kind in understanding the nature of data that
originates from real-world automation processes spanning
multiple heterogeneous components. Although RAD, RATracer,
and the analyses are presented in the context of Hein Lab’s
chemical synthesis experiments, the ideas, techniques, and
inferences generalize to other domains.
III. RATRACER