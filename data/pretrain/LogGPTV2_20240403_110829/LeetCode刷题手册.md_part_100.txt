Explanation: The ugly numbers are 2, 3, 4, 6, 8, 9, 10, 12... The 4th is 6.
Output: 6 
Input: n = 4， a = 2， b = 3， C = 4 
Explanation: The ugly numbers are 2, 3, 4, 5, 6, 8, 9, 10... The 3rd is 4.
Output: 4 
Input: n = 3， a = 2，b = 3，c = 5 
It's guaranteed that the result will be in range [1, 2 * 10^9]]
1 >1 
high = mid
 low = mid + 1 
---
## Page 1063
提示：
若干次交换后，s 可以变成的按字典序最小的字符串。
的两个索引（编号从开始）。你可以任意多次交换在 pairs 中任意一对索引处的字符。返回在经过
给你一个字符串 s，以及该字符串中的一些“索引对”数组 pairs，其中 pairs[i] =[a,b] 表示字符串中
题目大意
Constraints:
Example 3:
Example 2:
Example 1: 
Return the lexicographically smallest string that S can be changed to after using the swaps.
You can swap the characters at any pair of indices in the given pairs any number of times.
[a, b] indicates 2 indices(O-indexed) of the string.
You are given a string S, and an array of pairs of indices in the string pairs where pairs[i] = 
● 1 ={ 
return res
if right+1 < len(s) && maxCost-abs(int(s[right+1]-'a')-int(t[right+1]-
}else{
res = max(res, right-left+1) 
maxCost -= abs(int(s[right]-'a') - int(t[right]-'a'))
right++
left++
maxCost += abs(int(s[left]-'a') - int(t[left]-'a'))
---
## Page 1069
1221. Split a String in Balanced Strings
代码
解题思路
提示：
最开始的时候，同一位置上也可能放着两个或者更多的筹码。返回将所有筹码移动到同一位置（任意位
之一（不限操作次数，〇次也可以）：
数轴上放置了一些筹码，每个筹码的位置存在数组chips 当中。你可以对任何筹码执行下面两种操作
题目大意
·给出一个数组，
● 1<= chips[i]<=10^9
●1 <= chips.length <= 100 
·将第i个筹码向左或者右移动1个单位，代价为1。
●将第i个筹码向左或者右移动2个单位，代价为 0。
func minCostToMovechips(chips []int) int {
package leetcode
return min(odd, even)
for -, C := range chips {
odd, even := O, 0 
遍历一次数组，找到其中有多少个奇数和偶数位置的砝码，取其中比较少的，就是最终答案。
起。由于左右移动一个代价是1，所以最小代价的操作是移动最少砝码的那一边。奇数位置上砝码
规则，我们可以把所有的砝码无代价的在一个奇数的位置上和一个偶数的位置上。这样我们只用
先解读砝码移动规则：偶数位置的到偶数位置的没有代价，奇数到奇数位置的没有代价。利用这个
最小代价是多少。
则，左右移动2格，没有代价，左右移动1个，代价是1。问最终把砝码都移动到一个格子上，
少就移动奇数位置上的，偶数位置上砝码少就移动偶数位置上的。所以这道题解法变的异常简单，
if c%2 == 0 {
++ppo
else {
even++
数组的下标代表的是数轴上的坐标点，数组的元素代表的是砝码大小。砝码移动规
---
## Page 1070
解题思路
可能多的平衡字符串。返回可以通过分割得到的平衡字符串的最大数量。
题目大意
Constraints:
 Example 3: 
 Example 2: 
Example 1: 
 Return the maximum amount of splitted balanced strings.
 Given a balanced string S split it in the maximum amount of balanced strings.
 Balanced strings are those who have equal quantity of 'l' and 'R' characters.
在
题目
·这道题是简单题，按照题意模拟即可。从左往右扫，遇到R 就加一，遇到就减一，当计数是
·给出一个字符串，要求把这个字符串切成一些子串，这些子串中R和L的字符数是相等的。问能
●s[i]="L'或'R'
●1<= s.length <= 1000
一个“平衡字符串”！
● s[i] = 'L' or 'r'
●1 <= s.length <= 1000
Explanation: S can be split into "LLLLRRRR".
Output: 1 
Input: s =
same number of 'L' and 'R'.
Explanation: S can be split into "RL", "LLLRRR", "LR", each substring contains
Output:3
Input: S = "RLLLLRRRLR"
contains same number of 'L' and 'R'.
Explanation: S can be split into "RL", "RRLL", "RL", "RL", each substring 
Output: 4 
Input: S = "RLRRLLRLRL"
切成多少个满足条件的子串。
①的时候就是平衡的时候，就切割。
"LLLLRRRR"
中，"L'和'R'字符的数量是相同的。给出一个平衡字符串 s，请你将它分割成尽
---
## Page 1071
Example 1: 
the coordinate of a point. Check if these points make a straight line in the XY plane.
You are given an array coordinates, coordinates[i] = [x, y], where [x, y] represents
题目
1232. Check If It Is a Straight Line
代码
func balancedstringsplit(s string) int {
package leetcode
return res 
for -, r := range s -
count, res := O,0
if count == 0 { 
}else {
ifr=='r'{
count--
count++
res++
（1,2)
(2.3)
(3.4)
(4,5)
(5.6)
(6.7)
---
## Page 1072
提示：
请你来判断，这些点是否在该坐标系中属于同一条直线上，是则返回true，否则请返回 false。
[x, y] 表示横坐标为 x、纵坐标为 y 的点。
在一个XY坐标系中有一些点，我们用数组 coordinates 来分别记录它们的坐标，其中 coordinates[i]= 
题目大意
Constraints:
 Example 2:
●coordinates中不含重复的点
● 2<= coordinates.length <= 1000 
●2 <= coordinates.length <= 1000
Output: false
Input: coordinates = [[1,1],[2,2],[3,4],[4,5],[5,6],[7,7]]
Output: true
Input: coordinates = [[1,2],[2,3],[3,4],[4,5],[5,6],[6,7]]
coordinates contains no duplicate point.
-10^4 <= coordinates[i][0], coordinates[i][1] <= 10^4
coordinates[i].length == 2
-10^4 <= coordinates[i][0], coordinates[i][1] <= 10^4 
(1.1)
(2.2)
(3.4)
(4.5)
(5.6)
(7.7)
---
## Page 1073
Example 2: 
Example 1: 
 Return O if the string is already balanced.
same length to make the original string S balanced.
Return the minimum length of the substring that can be replaced with any other string of the
length of the string.
 A string is said to be balanced **if each of its characters appears n/4 times where n is the 
You are given a string containing only 4 kinds of characters 'Q', 'w', 'E' and 'R'.
题目
1234. Replace the Substring for Balanced String
代码
解题思路
·按照几何原理，依次计算这些点的斜率是否相等即可。斜率需要做除法，这里采用一个技巧是换成
·给出一组坐标点，要求判断这些点是否在同一直线上。