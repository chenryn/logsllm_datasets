# Title: A Traffic Identification Method and Evaluations for a Pure P2P Application

## Authors
- Satoshi Ohzahata
- Yoichi Hagiwara
- Matsuaki Terada
- Konosuke Kawashima

### Affiliation
Tokyo University of Agriculture and Technology, 2-24-16 Nakacho, Koganei City, Tokyo 184–8588, Japan
{ohzahata, hagi, m-tera, k-kawa}@cc.tuat.ac.jp

## Abstract
Pure Peer-to-Peer (P2P) applications are widely used as file-sharing systems. In overlay networks, the primary items exchanged are music and video files, which generate significantly more traffic compared to traditional client/server applications. However, the current status of P2P application traffic is not well understood due to their anonymous communication architectures. Specifically, when applications do not use default service ports and encrypt communication routes and shared files, identifying the traffic becomes challenging. To address this, we have developed an identification method for pure P2P communication, particularly for Winny, the most popular P2P application in Japan, by leveraging server/client relationships among peers. This paper presents evaluation results for our proposed identification method.

## 1. Introduction
The landscape of Internet applications is evolving with the proliferation of high-performance PCs connected via broadband links. This shift has led to a dramatic increase in traffic volume, especially with the rapid adoption of Peer-to-Peer (P2P) network applications. These applications allow users to easily share network resources over overlay networks.

A key feature of pure P2P networks is their distributed and autonomous nature, which does not rely on a central server for communication. This architecture offers scalability and load balancing at end-user computers. However, the traffic volume generated by P2.P2P applications is much larger than that of previous Internet applications, shifting the processing bottlenecks from end computers to the network. Additionally, traffic control is difficult due to the lack of administrators and the anonymity of the traffic in overlay networks.

To manage and construct networks effectively, it is essential to estimate the impact of P2P traffic on other forms of traffic. Identifying P2P traffic within the total Internet traffic is the first step in this process. Many studies have focused on identifying and evaluating the characteristics of application traffic.

Traditionally, the service port number in TCP or UDP is used to identify application traffic, as major Internet applications use well-known service ports (0–1023). If all applications correctly use these ports, identifying the traffic is straightforward. Many P2P applications also have default service port numbers, such as Gnutella (ports 6346, 6347), Kazaa (port 1214), and BitTorrent (ports 6881–6889). Consequently, many P2P traffic studies use default service port number identification methods. However, recent P2P applications like WinMX and Winny do not use default service port numbers, making this method ineffective.

Signature matching identification methods, which analyze specific characters in packet payloads, are effective for some applications. These methods are widely used in Intrusion Detection Systems (IDS) but require significant computational power. In [14], the authors propose a scalable signature matching system for P2P traffic, comparing it with the default service port number method. Signature matching requires regular updates as application protocols change.

For Winny, one of the most popular P2P file-sharing applications in Japan, the challenge is even greater. The payloads are encrypted, and the protocol details are undisclosed, making signature matching infeasible. This paper proposes an improved default service port number identification method specifically designed for pure P2P applications, addressing the issues mentioned above. Our method can identify service port numbers even when P2P applications do not use their default ports. We adopt both active and passive measurement techniques to identify Winny traffic and evaluate our proposed method.

## 2. About Winny
In Japan, popular P2P file-sharing applications like KaZaa, eMule, and BitTorrent are rarely used because they do not support Japanese language characters in file names or search keywords. WinMX was the first P2P application to support Japanese characters, but it required a patch. Winny, developed in Japan, has become one of the most popular P2P file-sharing applications due to its freenet-like anonymous architecture. Approximately 200,000 peers are always active in the Winny network, and between June 13 and October 23, 2004, over 4,000,000 unique peers joined the network.

Winny is a pure P2P application that does not rely on any central server or super peer for file searching and sharing. Communication is encrypted, and each peer uses a different service port. The protocol is not openly disclosed, making it difficult for network administrators to identify the traffic. Winny is primarily a file-sharing application, where peers collect files based on set keywords. The file transfer technique enhances the anonymous communication architecture by using intermediate peers to transfer files, ensuring that the exchanging entities never directly interact. This architecture results in a large volume of traffic, especially with large shared files like video files (mpeg, avi, and DVD ISO images), with an average file size of around 1GB.

The Winny network consists of three types of networks/links:
1. **Adjacent Peer Check/Search Network**: New peers joining the network obtain IP addresses and service port numbers of existing peers and maintain connections with several hundred peers.
2. **File Search Network**: Information is exchanged about who has a specified file and who wants it.
3. **File Exchange Network**: When file exchange conditions are met, a separate route is established via the other file-sharing entity.

These networks involve server/client relationships between peers, with frequent access requests. These characteristics provide insights into how to identify Winny traffic.

## 3. Measurement Methods
We use a combination of active and passive measurements to identify Winny traffic, with two measurement points (Figure 1):
- **Point A**: Back-bone traffic is measured passively. The switching hub is placed between an edge router of the Internet and an edge router of the stub network, with a 100Mbps full-duplex Ethernet link speed. The transfer speed is restricted to 10Mbps. We measure traffic without affecting the backbone traffic using port mirroring. On January 11, 2005, we measured 2461 unique IP addresses in the stub network, with a total traffic volume of 166.1 GB.
- **Point B**: Inside the stub network, we measure Winny traffic actively by acting as a decoy peer. The network speed is 100Mbps full-duplex Ethernet. We measured traffic from January 5 to January 17, 2005, and collected about 40,000 unique pairs of IP addresses and service ports per day using 5 decoy peers.

Both traffic logs are necessary for our identification method. The detailed specifications of the PCs used for measurement are as follows:
- **Point A (Back-bone traffic)**:
  - PC: Dell PRECISION 450 with dual Xeon 3.2Ghz CPUs and 2GB main memory.
  - OS: FreeBSD.
  - Traffic measurement tool: Snort version 2.0.
- **Point B (Decoy peer traffic)**:
  - PC: Dell PRECISION 450 with dual Xeon 3.2Ghz CPUs and 2GB main memory.
  - OS: Windows XP Professional.
  - Winny version: Winny2β6.6.
  - 5 Winny programs run in parallel, with service port numbers 10001–10005.
  - Safeny is used to disconnect all connections to/from the decoy peer after the measurement period.

## 4. Proposed Traffic Identification Method
Our proposed method leverages the patterns of connections to server/client ports among communicating entities to identify pure P2P traffic. By combining active and passive measurement logs, we can identify the service port of a peer through a series of steps. We apply this method to the Winny network and evaluate its effectiveness.

## 5. Conclusions
This paper presents an improved default service port number identification method for pure P2P applications, particularly for Winny. Our method can identify service port numbers even when P2P applications do not use their default ports. We use both active and passive measurement techniques to identify Winny traffic and evaluate our proposed method. The results demonstrate the effectiveness of our approach in accurately identifying P2P traffic.

## References
[1] RFC 793, "Transmission Control Protocol," J. Postel, September 1981.
[2] Gnutella, <http://www.gnutella.com/>
[3] Kazaa, <http://www.kazaa.com/>
[4] BitTorrent, <http://www.bittorrent.com/>
[5] S. Sen, et al., "An Analysis of Peer-to-Peer File Sharing Workloads," SIGMETRICS '03, 2003.
[6] M. Crovella, et al., "Measuring and Modeling the Temporal Dependence in Packet Arrivals," IEEE/ACM Transactions on Networking, vol. 4, no. 5, pp. 688-699, 1996.
[7] D. Choffnes, et al., "Characterizing and Tracing the Evolution of P2P Networks," IMC '05, 2005.
[8] WinMX, <http://www.winmx.com/>
[9] Winny, <http://winny.jp/>
[10] N. Weaver, et al., "Defeating Script-Based Attacks with Inlined Reference Monitors," NDSS '04, 2004.
[11] V. Paxson, "Bro: A System for Detecting Network Intruders in Real-Time," USENIX Security Symposium, 1999.
[12] R. Sommer, et al., "Improving Intrusion Detection System Performance Through Event Correlation," RAID '00, 2000.
[13] S. Staniford, et al., "Practical Automated Detection of Stealthy Portscans," Journal of Computer Security, vol. 10, no. 1, 2002.
[14] Y. Zhang, et al., "Scalable and Accurate P2P Traffic Identification," INFOCOM '06, 2006.
[15] eMule, <http://www.emule-project.net/>
[16] Freenet, <http://freenetproject.org/>
[17] Safeny, <http://safeny.sourceforge.net/>

---

This revised version aims to improve the clarity, coherence, and professionalism of the original text. It includes a more structured format, clearer explanations, and a consistent tone throughout the document.