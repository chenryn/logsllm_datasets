title:A Traffic Identification Method and Evaluations for a Pure P2P Application
author:Satoshi Ohzahata and
Yoichi Hagiwara and
Matsuaki Terada and
Konosuke Kawashima
A Traﬃc Identiﬁcation Method and Evaluations
for a Pure P2P Application
Satoshi Ohzahata1, Yoichi Hagiwara1, Matsuaki Terada1,
and Konosuke Kawashima1
Tokyo University of Agriculture and Technology, 2-24-16 Nakacho Koganei City
{ohzahata, hagi, m-tera, k-kawa}@cc.tuat.ac.jp
Tokyo 184–8588, Japan
Abstract. Pure P2P applications are widely used nowadays as a ﬁle
sharing system. In the overlay networks, music and video ﬁles are the
main items exchanged, and it is known that the traﬃc volume is much
larger than that of classical client/server applications. However, the cur-
rent status of the P2P application traﬃc is not well known because of
their anonymous communication architectures. In particular, in cases
where the application does not use the default service port, and the com-
munication route and the shared ﬁle are also encrypted, the identiﬁcation
traﬃc has not been feasible. To solve this problem, we have developed an
identiﬁcation method for pure Peer-to-Peer communication applications,
especially for traﬃc for Winny, the most popular Peer-to-Peer applica-
tion in Japan, by using server/client relationships among the peers. We
will give some evaluation results for our proposed identiﬁcation method.
1
Introduction
The Internet applications of end users are changing with the spread of high-
performance PCs connected, with broadband links, through the Internet. The
traﬃc volume is also increasing drastically increasing with the change in ap-
plications. In particular, the number of users of Peer-to-Peer (P2P) network
applications is increasing rapidly since the users are easily able to use network
resources over the overlay networks.
The characteristic feature of a pure P2P network is that it is a distributed
autonomous system which does not rely on a speciﬁc server for communications.
Because of this fact, such systems are expected to exhibit scalability in pro-
cessing power and load balancing at the end computers. However, the traﬃc
volume is becoming much larger than that of the previous Internet applications
and the bottlenecks in processing power are shifting from the end computers
to the network. In addition, traﬃc control is very diﬃcult because there is no
administrator in the overlay networks and on account of the anonymous nature
of the traﬃc.
Consequently, we need to estimate the eﬀect of P2P traﬃc to on other forms
of traﬃc in order to construct networks and manage them appropriately. When
C. Dovrolis (Ed.): PAM 2005, LNCS 3431, pp. 55–68, 2005.
c(cid:1) Springer-Verlag Berlin Heidelberg 2005
56
S. Ohzahata et al.
we start evaluating the P2P traﬃc, we need ﬁrst to identify the P2P traﬃc in the
total Internet traﬃc. Much researches has been done to identify the application
traﬃc and evaluate its characteristics.
The service port number in TCP or UDP is often used as a method of iden-
tifying the application traﬃc, since major Internet applications have use their
well known service ports (0–1023) and the server has to use the TCP or UDP
port number as the identiﬁcation number [1]. If the identiﬁcation number is used
correctly by all applications, we can easily identify the application traﬃc.
Many P2P applications also have their default service port number, Gnutella
[2] (6346, 6347), Kazaa [3] (1214), BitTorrent [4] (6881–6889) and so on. In
consequence, many research studies for P2P traﬃc use the default service port
number identiﬁcation methods in [5], [6] and [7]. However, some recent P2P
applications, WinMX [8] and Winny [9], do not use a default service port number,
which would allow their services to be identiﬁed. For these applications, this
identiﬁcation method does not work well.
Signature matching identiﬁcation methods [10], [11] are eﬀective when the
applications exchange the speciﬁc characters in the payload of packets. This
traﬃc identiﬁcation method is widely applied for Intrusion Detection Systems
(IDS) [12], [13] to manage traﬃc. In this method, every packet needs to be an-
alyzed and it requires huge computation power. In [14], the authors propose a
scalable signature matching identiﬁcation system for P2P traﬃc, and compare
identiﬁcation methods their application level signature matching method with
the default service port number identiﬁcation method. In these signature match-
ing methods, the application signatures need to be updated with changing the
application protocols.
There is further diﬃcult problem in the case of Winny, which is one of the
most popular pure P2P ﬁle sharing application in Japan. The payloads of the
packets are encrypted and the protocol details are also not disclosed. These facts
make it diﬃcult to identify the Winny traﬃc since the signature matching is not
also useful for the an encrypted payload.
This paper proposes an improved default service port number identiﬁcation
method speciﬁcally designed for pure P2P application traﬃc, to address the
above problems. In our method, the service port number may be identiﬁed even
in cases where the pure P2P applications do not use its their default service port
numbers. In the Internet communication, each connection is identiﬁed by a tuple
of the IP addresses, port numbers and a protocol number (TCP or UDP), and
many classical Internet applications play function only as a server or client in the
communications. In the classical client/server application, only one connection
or relationship is used between the entities involved in the communication. Pure
P2P peers, however, play function as both server and client between the peers,
and two kinds of connection need to be established. In our method, the pure
P2P traﬃc is identiﬁed by the patterns of connection to the server/client ports
among the communicating entities. To realize our proposed method, we adopt
active measurement and passive measurement for the pure P2P traﬃc. With
the combination of the measurement logs, the service port of a peer is identiﬁed
A Traﬃc Identiﬁcation Method and Evaluations for a Pure P2P Application
57
through a series of steps. We adopt have apply the proposed method to the
Winny network and evaluate our proposed identiﬁcation method.
The rest of this paper is structured as follows. In section 2 we brieﬂy describe
the P2P application of Winny. Section 3 we describes our traﬃc measurement
method. In Section 4, describes our proposed traﬃc identiﬁcation method, and
section 5 provides conclusions.
2 About Winny
In Japan, the famous well-known P2P ﬁle exchange applications, KaZaa [3],
emule [15] and BitTorrent [4], are rarely used since they cannot deal with
Japanese language characters in the key words for ﬁle searching or the ﬁle name.
WinMX [8] is the ﬁrst P2P application for which is available Japanese language
characters may be used, though the application of a by applying the patch, and
so WinMX was the main ﬁle sharing application used until the appearance of
Winny.
Currently, Winny is one of the most popular P2P ﬁle sharing application in
Japan, since it was developed in Japan and the has a freenet-like [16] anonymous
architecture. About 200,000 peers always compose the Winny network, and be-
tween June 13 and October 23, 2004, we measured over 4,000,000 unique joined
peers which had a unique tuple of IP address and the service port from June 13
to October 23, 2004. (The measurement point is at Point A in Figure 1.)
Winny is a pure P2P application and does not depend on any central server
or super peer for ﬁle searching and sharing. The communication is encrypted,
the service port is diﬀerent in each peer and the protocol is also not an open
one. This architecture makes it diﬃcult for a network administrator to identify
the traﬃc. Winny is not a ﬁle exchange application but rather a ﬁle sharing
application. By setting some keywords for the ﬁle name, the peer always collects
the matching ﬁles. The ﬁle transfer technique also strengthens the anonymous
communication architecture. When a ﬁle is shared between two peers, the ﬁle
holder should transfer the ﬁle to the ﬁle receiver via an intermediate peer, so that
the two exchanging entities never know each other directly. In the intermediate
peer, the transferred ﬁle is locally cached as an encrypted one. A duplicate of the
ﬁle is also distributed to the receiving peer as the duplicate one. This architecture
results in an enormous volume of traﬃc as the size of shared ﬁles increases size.
In the Winny network, the shared ﬁles are mainly video ﬁles (mpeg, avi and
DVD ISO image) and the average shared ﬁle size is around 1GB. The Winny
network is composed of three kinds of networks/links, as described below.
1. Adjacent peer check/search network.
2. File search network.
3. File exchange network.
1. When a new Winny peer joins the Winny network, the peer needs to obtain
a pairs of data items, that is the IP address and service port number, of the other
peers which haves already joined the network. Then the new peer establishes and
58
S. Ohzahata et al.
Internet
Stub network
Point A
Point B
B
A
IP address:     
W.X.Y.Z
Service port:  
10001 -10005
Fig. 1. Traﬃc measurement points
keeps maintains the links up to several hundred peers. The network comprises a
nearly random network.
2. Some of the links are selected as the ﬁle search network. In this network,
information is exchanged regarding who has a speciﬁed ﬁle and who wants it.
3. When ﬁle exchange conditions are satisﬁed, a separate route is established
via the other ﬁle sharing entity.
In these networks there is a server/client relationship between two peers
and many such networks are characterized by many access requests between
peersaccesses are always required among the peers to keep these networks. These
characteristics of networks give us hints as to how to identify Winny traﬃc.
3 Measurement Methods
We adopt a combination of active and passive measurements to identify Winny
traﬃc, and have two measurement points, as shown in Figure 1. At Point A, the
back-bone traﬃc is measured with by means of a passive measurement, while
Point B is placed inside the stub network and measures Winny traﬃc by acting
as a decoy peer with an active measurement.
The Point A (which collects data in log A) is in a switching hub which
is placed between an edge router of the Internet and an edge router of the
stub network. The link speed is the 100Mbps of full duplex Ethernet but the
transfer speed is restricted to 10Mbps at the edge router of the Internet for both
directions. We can measure the traﬃc in the switching hub without aﬀecting the
backbone traﬃc itself by port mirroring. We measured the traﬃc for 24 hours,
from 0:00–24:00 on January 11, 2005 and found 2461 unique IP addresses of
A Traﬃc Identiﬁcation Method and Evaluations for a Pure P2P Application
59
the stub network in the traﬃc log. The combined total traﬃc volume for both
directions was 166.1 GB.
We only logged information of the IP and TCP headers of all these packets.
We obtained limited information from the log, but we can reduce the log size
and still obtain enough information from it. We deﬁne a ﬂow, in the following,
as a connection which has the same tuple of IP addresses, port numbers and a
protocol number (TCP) between the packet containing the SYN segment ﬂag
and the that containing the FIN segment ﬂag. In the measurement, some ﬂows
were not evaluated since these ﬂows had no SYN or FYN packet ﬂag of packet
in the log. These ﬂows are ignored in the evaluations.
At the point B (log B), the network speed is the 100Mbps of full duplex
Ethernet. We measured the traﬃc log for 13 days, from 0:00 January 5 to 0:00
January 17, 2005. We were able to directly measure the access log from/to the
peers in the Winny network at the Point B because the PC B belongs to the
Winny network, acting as a decoy peer. By repeatedly changing the point of
connection to the Winny network at short intervals, we were able to collect
about 40,000 of unique pairs of IP address and service port of the Winny peers
per one day by using 5 decoy peers. We used a diﬀerent measuring period of the
log for each analysis.
Both traﬃc logs are necessary for our traﬃc identiﬁcation method, and the
log A is used for the back-bone traﬃc evaluations. The detailed speciﬁcations of
the PCs are below.
[Point A: for the Back-bone traﬃc]
– The PC is a Dell PRECISION 450 with dual Xeon 3.2Ghz CPUs and the
main memory size is 2GB. The OS is FreeBSD.
– The traﬃc is measured by Snort version 2.0.
[Point B: for the Decoy peer traﬃc]
– The PC is a Dell PRECISION 450 with dual Xeon 3.2Ghz CPUs and the
main memory size is 2GB. The OS is Windows XP professional.
– The version of the Winny is Winny2β6.6.
– We run 5 Winny programs in parallel in the PC in each user session , and
the service port numbers is assigned are 10001–10005, respectively.
– Safeny [17] is used to disconnect all connections to/from the decoy peer after