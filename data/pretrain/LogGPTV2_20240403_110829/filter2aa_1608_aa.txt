# Wi-Fi Taxonomy: Identifying Devices by Their Network Signatures

**Speaker:** Denton Gentry (@dgentry)

## Introduction
Today, we will discuss a mechanism that identifies the type of device connecting to a Wi-Fi network. This method can distinguish between specific models, such as an iPhone 5 and an iPhone 5s, or a Samsung Galaxy S7 and an S8, and even between different IoT devices like a Withings scale and a Nest Thermostat.

## Terminology
Traditionally, this kind of client detection is referred to as "fingerprinting," similar to OS fingerprinting in nmap. However, modern usage of "fingerprinting" often implies identifying specific users, such as browser fingerprinting. Since our mechanism identifies the type of device (not the unique individual), we refer to it as **Wi-Fi Taxonomy**.

## Demonstration
To see this in action, join the SSID `SmellOfWifiTalk`. The system will estimate and display the type of your device on the terminal window on the screen. Note that this demo is intended for a controlled environment like DEFCON, where rogue Wi-Fi networks are common.

## Technical Details

### Wi-Fi Management Frames (MLME)
The mechanism works by examining Wi-Fi Management frames, specifically:
- **Probe Request**: A client asks nearby Access Points (APs) to respond, including information about its capabilities.
- **Association Request**: When a client joins a Wi-Fi network, it includes detailed capabilities similar to those in the Probe Request.

These frames are not TCP/IP packets and do not leave the Wi-Fi network.

### Information Elements (IEs)
Information Elements are Type-Length-Value tuples packed into management frames. They include standard elements and vendor-specific extensions (type 221 with an OUI and subtype). Hereâ€™s an example from an iPhone 7+:

- **Standard IEs**: SSID, supported rates, channels, power levels, and radio management capabilities.
- **Vendor Extensions**: Microsoft (prioritization), Broadcom, and Apple.

### Signature Format
The signature lists the tag numbers of the IEs present in the frame, along with capability bitmasks. For example:

- **Tag Numbers**: 0, 1, 33, 36, 48, 70, 45, 191, 221(0017f2,10), 221(001018,2), 221(0050f2,2)
- **Capability Bitmasks**: txpow:13f9, htcap:006f, vhtcap:0f811032

### Distinctiveness Over Time
The signatures have become more distinctive over time. For instance:
- **Original iPhone (2007)**: Limited differentiation.
- **iPhone 4s (2011)**: More options in management frames.
- **iPhone 7 (2016)**: Even more detailed and distinct.

### Full Signature Format
The full signature includes the list of IEs and bitmasks from both the Probe Request and Association Request, separated by a pipe. The prefix "wifi4" indicates the fourth iteration of the signature format.

### Example Signatures
- **Xbox One**:
  ```
  wifi4|probe:0,1,45,50,htcap:058f,htagg:03,htmcs:0000ffff|assoc:0,1,33,36,221(0050f2,2),45,htcap:058f,htagg:03,htmcs:0000ffff,txpow:1208
  ```
- **Nest Thermostat v3**:
  ```
  wifi4|probe:0,1,45,221(001018,2),221(00904c,51),htcap:0062,htagg:1a,htmcs:000000ff|assoc:0,1,33,36,48,45,221(001018,2),221(00904c,51),221(0050f2,2),htcap:0062,htagg:1a,htmcs:000000ff,txpow:0f09
  ```
- **Chromecast v1**:
  ```
  wifi4|probe:0,1,3,45,50,htcap:0120,htagg:03,htmcs:00000000|assoc:0,1,48,50,127,221(0050f2,2),45,htcap:012c,htagg:03,htmcs:000000ff,extcap:0000000000000140
  ```

## Device Scope
- **Highly Integrated Devices**: Mobile phones, IoT devices.
- **Laptops and Desktops**: The mechanism identifies the Wi-Fi card, not the specific model. We do not add these to the database to avoid confusion.
- **Common Devices**: Focus on widely sold devices like phones, tablets, and popular media streaming and IoT devices.
- **Exclusions**: Medical devices, adult products, and home incarceration monitoring devices are excluded to ensure user comfort.

## Multiple Signatures
Some devices may have multiple signatures, which can be used to further refine identification. For example, two different signatures for a single device might look like this:

- **Signature 1**:
  ```
  wifi4|probe:0,1,45,221(0050f2,8),191,127,htcap:01ef,htagg:1f,htmcs:0000ffff,vhtcap:339071b2,vhtrxmcs:030cfffa,vhttxmcs:030cfffa,extcap:040000000000004080|assoc:0,1,48,45,221(0050f2,2),191,127,htcap:01ef,htagg:1f,htmcs:0000ffff,vhtcap:339071b2,vhtrxmcs:030cfffa,vhttxmcs:030cfffa,extcap:04000a020100004080
  ```
- **Signature 2**:
  ```
  wifi4|probe:0,1,45,221(0050f2,8),191,127,htcap:01ef,htagg:1f,htmcs:0000ffff,vhtcap:339031b2,vhtrxmcs:030cfffa,vhttxmcs:030cfffa,extcap:040000000000004080|assoc:0,1,48,45,221(0050f2,2),191,127,htcap:01ef,htagg:1f,htmcs:0000ffff,vhtcap:339031b2,vhtrxmcs:030cfffa,vhttxmcs:030cfffa,extcap:04000a020100004080
  ```

## Conclusion
Wi-Fi Taxonomy provides a powerful way to identify and categorize devices based on their Wi-Fi management frames. By focusing on highly integrated and common devices, we can maintain a useful and accurate database for various applications.