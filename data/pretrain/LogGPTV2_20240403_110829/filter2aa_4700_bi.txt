// Library Function - Single Match
// Name: ?shift_bytes@@YAXQADI0H@Z
// Library: Visual Studio 2015 Release
// void __cdecl shift_bytes(char * const,unsigned int,char * const,int)
void __cdecl shift_bytes(char *param_1,uint param_2,char *param_3,int param_4)
{
  char cVar1;
  char *pcVar2;
  if (param_4 != 0) {
    pcVar2 = param_3;
    do {
      cVar1 = *pcVar2;
      pcVar2 = pcVar2 + 1;
    } while (cVar1 != 0);
    FUN_00405050((undefined8 *)(param_3 + param_4),(undefined8 *)param_3,
                 (uint)(pcVar2 + (1 - (int)(param_3 + 1))));
  }
  return;
}
int __cdecl
FUN_0040c12a(double *param_1,byte *param_2,char *param_3,undefined8 *param_4,uint param_5,
            int param_6,uint param_7,uint param_8,undefined4 param_9,undefined4 *param_10)
{
  undefined4 *puVar1;
  int iVar2;
  byte local_c;
  byte local_8;
  if ((((param_2 == (byte *)0x0) || (param_3 == (char *)0x0)) || (param_4 == (undefined8 *)0x0)) ||
     (param_5 == 0)) {
    puVar1 = (undefined4 *)FUN_00407f40();
    iVar2 = 0x16;
    *puVar1 = 0x16;
    FUN_00407e83();
  }
  else {
    if (((param_6 == 0x41) || (param_6 == 0x45)) ||
       ((param_6 == 0x46 || (local_8 = 0, param_6 == 0x47)))) {
      local_8 = 1;
    }
    if (((param_8 & 8) == 0) && (iVar2 = FUN_0040b873((uint *)param_1), iVar2 != 0)) {
      if ((*(int *)((int)param_1 + 4) _file;
}
uint __cdecl FUN_0040c28e(byte param_1,FILE *param_2)
{
  char **ppcVar1;
  uint uVar2;
  ppcVar1 = &param_2->_base;
  *ppcVar1 = *ppcVar1 + -1;
  if ((int)*ppcVar1 _ptr = param_1;
  param_2->_ptr = param_2->_ptr + 1;
  return (uint)param_1;
}
// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
// Name: __get_printf_count_output
// Library: Visual Studio 2015 Release
int __cdecl __get_printf_count_output(void)
{
  return (uint)(_DAT_0041f28c == (DAT_0041e004 | 1));
}
// WARNING: Globals starting with '_' overlap smaller symbols at the same address
uint __cdecl FUN_0040c2cc(FILE *param_1)
{
  FILE **ppFVar1;
  int _FileHandle;
  char *pcVar2;
  FILE *pFVar3;
  char **ppcVar4;
  _FileHandle = __fileno(param_1);
  pFVar3 = (FILE *)__isatty(_FileHandle);
  if (pFVar3 == (FILE *)0x0) {
LAB_0040c378:
    return (uint)pFVar3 & 0xffffff00;
  }
  pFVar3 = (FILE *)FUN_0040568c(1);
  if (param_1 == pFVar3) {
    ppcVar4 = (char **)&DAT_0041f290;
  }
  else {
    pFVar3 = (FILE *)FUN_0040568c(2);
    if (param_1 != pFVar3) goto LAB_0040c378;
    ppcVar4 = (char **)&DAT_0041f294;
  }
  _DAT_0041ed2c = _DAT_0041ed2c + 1;
  ppFVar1 = (FILE **)&param_1->_flag;
  pFVar3 = *ppFVar1;
  if (((uint)pFVar3 & 0x4c0) != 0) goto LAB_0040c378;
  LOCK();
  *ppFVar1 = (FILE *)((uint)*ppFVar1 | 0x282);
  pcVar2 = *ppcVar4;
  if (pcVar2 == (char *)0x0) {
    pcVar2 = (char *)__malloc_base(0x1000);
    *ppcVar4 = pcVar2;
    FID_conflict__free((void *)0x0);
    pcVar2 = *ppcVar4;
    if (pcVar2 == (char *)0x0) {
      param_1->_base = (char *)0x2;
      *(int **)&param_1->_cnt = &param_1->_charbuf;
      *(int **)&param_1->_ptr = &param_1->_charbuf;
      param_1->_bufsiz = 2;
      goto LAB_0040c35d;
    }
  }
  *(char **)&param_1->_cnt = pcVar2;
  pcVar2 = *ppcVar4;
  param_1->_ptr = pcVar2;
  param_1->_base = (char *)0x1000;
  param_1->_bufsiz = 0x1000;
LAB_0040c35d:
  return CONCAT31((int3)((uint)pcVar2 >> 8),1);
}
// Library Function - Single Match
// Name: ___acrt_stdio_end_temporary_buffering_nolock
// Library: Visual Studio 2015 Release
void __cdecl ___acrt_stdio_end_temporary_buffering_nolock(char param_1,FILE *param_2)
{
  uint *puVar1;
  if ((param_1 != 0) && (puVar1 = (uint *)&param_2->_flag, (*puVar1 >> 9 & 1) != 0)) {
    FUN_0040a7bb(param_2);
    LOCK();
    *puVar1 = *puVar1 & 0xfffffd7f;
    param_2->_bufsiz = 0;
    param_2->_cnt = 0;
    param_2->_ptr = (char *)0x0;
  }
  return;
}
void __cdecl
FUN_0040c3b9(uint param_1,uint param_2,LPCWSTR param_3,int param_4,LPSTR param_5,int param_6,
            uint param_7,uint param_8)
{
  byte bVar1;
  DWORD dwFlags;
  bool bVar2;
  dwFlags = 0;
  if ((param_1 == 65000) || (bVar1 = 0, param_1 == 0xfde9)) {
    bVar1 = 1;
  }
  if (param_1 > 8 & 0xff,local_20);
    if (iVar1 == 0) {
      local_13 = 0;
      iVar1 = 1;
      local_14 = (CHAR)param_1;
    }
    else {
      local_12 = 0;
      iVar1 = 2;
      local_14 = (CHAR)((uint)param_1 >> 8);
      local_13 = (CHAR)param_1;
    }
    local_10 = 0;
    local_c = 0;
    iVar1 = FUN_0040ebb3(local_20,1,&local_14,iVar1,(LPWORD)&local_10,*(uint *)(local_20[0] + 8),1);
    if (iVar1 == 0) {
      if (local_18 != 0) {
        *(uint *)(local_24 + 0x350) = *(uint *)(local_24 + 0x350) & 0xfffffffd;
      }
      goto LAB_0040c6bd;
    }
  }
  if (local_18 != 0) {
    *(uint *)(local_24 + 0x350) = *(uint *)(local_24 + 0x350) & 0xfffffffd;
  }
LAB_0040c6bd:
  FUN_00401f78();
  return;
}
// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3
// Library Function - Single Match
// Name: ??$common_dupenv_s@_W@@YAHQAPA_WQAIQB_WHQBDH@Z
// Library: Visual Studio 2015 Release
// int __cdecl common_dupenv_s(wchar_t * * const,unsigned int * const,wchar_t const *
// const,int,char const * const,int)
int __cdecl
common_dupenv_s_wchar_t_