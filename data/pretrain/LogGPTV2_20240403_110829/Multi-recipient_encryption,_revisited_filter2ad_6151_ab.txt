(cid:104)
(cid:104)
(cid:105)−
(cid:105)(cid:12)(cid:12)(cid:12)(cid:12)
AdvIND-OT-CCA
D,A
(λ) =
ExptIND-OT-CCA,1
D,A
(1λ) = 1
Pr
ExptIND-OT-CCA,0
D,A
(1λ) = 1
,
where the probabilities are taken over the random coins used
in the experiment (including those consumed by A).
D,A
(1λ):
ExptIND-OT-CCA,b
(a) K ←R K
(m0, m1, st) ← A1(1λ)
(b)
(c) Require |m0| = |m1|
(d) c∗ ← DEM(K, mb)
(e) d ← AD
(f) Return d
Oracle D(c):
(a) Require c (cid:54)= c∗
(b) m ← DEM−1(K, c)
(c) Return m
2 (c∗, st)
Figure 1: IND-OT-CCA experiment for DEMs
2313. MULTI-RECIPIENT PKE
3.2 Security of MR-MM-PKE
In this section we expose the most important concepts of
multi-recipient encryption. After motivating its purpose and
specifying the syntax, we critically review the security mod-
els that appear so far in corresponding publications. Indeed,
concerning the latter we identify a couple of shortcomings
and show how to resolve them. We defer the construction
of a multi-recipient encryption scheme that is secure in the
new model to Sections 4.2 and 5.
3.1 Syntax of MR-MM-PKE
We recall the notion of multi-recipient encryption from [5].
In contrast to plain public key encryption this primitive al-
lows batch processing, i.e., the execution of many encryption
operations in one shot. The work of [5] restricts attention
to the multi-message setting where for each speciﬁed recip-
ient key an individual message is encrypted. An important
property of multi-recipient encryption is that the decryption
operation is oblivious of the other keys used for creating a
given ciphertext. The main advantage of this primitive is
the potential eﬃciency gain due to cost amortization in the
encryption process where some computations might be used
for the creation of several ciphertexts.
Definition 5
(MR-MM-PKE). A multi-recipient multi-
message public key encryption scheme (MR-MM-PKE) E =
(PGen, KGen, Enc, Dec) consists of four eﬃcient algorithms
as follows:
• PGen(1λ). On input security parameter 1λ, this algo-
rithm outputs public parameters pp.
We will assume implicitly that the following algorithms
are deﬁned in respect to a single distinguished instance
of pp.
• KGen( ). This probabilistic algorithm outputs a key pair
(sk, pk).
• Enc( (cid:126)pk, (cid:126)m). On input vectors (cid:126)pk = (pk1, . . . , pkn) of
public keys and (cid:126)m = (m1, . . . , mn) of messages, this
probabilistic algorithm outputs a vector (cid:126)c = (c1, . . . , cn)
of ciphertexts.
• Dec(sk, c). On input a secret key sk and a ciphertext c,
this algorithm outputs either a message or the error
symbol ⊥.
KGen( ) and mj ∈ {0, 1}∗ for all j ∈ [n]. The MR-MM-PKE
is correct if for all encryptions
(cid:1) ←R
For ﬁxed parameters pp and any n ∈ N let (cid:0)skj, pkj
(c1, . . . , cn) ←R Enc(cid:0)(pk1, . . . , pkn), (m1, . . . , mn)(cid:1)
we have Dec(cid:0)skj, cj
(cid:1) = mj for all j ∈ [n].
Note that we obtain regular public key encryption as a spe-
cial case of MR-MM-PKE by restricting the Enc algorithm
to accept only single-element vectors (cid:126)pk and (cid:126)m. More-
over, a canonic (but rather uninteresting) way to construct
MR-MM-PKE from regular public key encryption is to cre-
ate all ciphertexts independently of each other by invoking
(cid:1) once for each j ∈ [n].
cj ←R Enc(cid:0)pkj, mj
To model the security of MR-MM-PKE schemes, [5] pro-
poses a generalization of the standard indistinguishability
notion for public key encryption (in fact, the authors pro-
pose two notions: one corresponding to CPA security, the
other to CCA security; here we focus on the CCA variant
only). Brieﬂy, in their game-based deﬁnition, the adversary
is required to tell apart an encryption of one set of messages
from an encryption of another set. However, after closely
studying the formalizations from [5], we came to the con-
clusion that a couple of technical artifacts severely weaken
the security guarantees provided by the model in practice.
Before we elaborate on our ﬁndings and ﬁx the model ac-
cordingly, let us ﬁrst recall the deﬁnitions from [5] in more
detail.
3.2.1 The security model by Bellare, Boldyreva, and
Staddon [5]
∗
∗
∗
In Figure 2 we reproduce details of the CCA security ex-
periment from [5] (slightly adapting the notation towards
our needs). The experiment simulates to the adversary an
environment with k honest users by providing her, in line (c),
with the corresponding public keys (cid:126)pk = (pk1, . . . , pkk) and
decryption oracles. Among others, the adversary outputs
two vectors of messages, (cid:126)m0 and (cid:126)m1, where either the one
or the other shall be encrypted for the keys in (cid:126)pk in chal-
lenge ciphertext (cid:126)c. Also encrypted, but for the adversarially-
, shall be the messages in vector (cid:126)m∗.
generated keys in (cid:126)pk
Finally, in (cid:126)sk
the adversary is required to reveal the decryp-
tion keys corresponding to (cid:126)pk
(see discussion below). The
consistency of adversary’s output is checked in lines (d)–(f).
Challenge ciphertext (cid:126)c is created in line (g); observe here
that in the recipient list the honest public keys come ﬁrst,
followed by the corrupt ones. The remaining part of the ex-
periment is as expected, with the natural restrictions on the
second-phase decryption oracle. According to [5], an MR-
MM-PKE scheme E is secure if the return value d of the
experiment is computationally independent of parameter b,
for all eﬃcient adversaries A = (A1,A2).
3.2.2
We next discuss a couple of properties of the experiment
from Figure 2 that indicate that schemes proved secure in
respect to the model might, in practice, not oﬀer the intu-
itively expected level of security.
Shortcomings in the model from [5]
The ﬁrst problem stems from the fact that in line (g) the
vector of encryption keys is always preﬁxed by honestly cho-
sen ones. To see that this is problematic, ﬁx an arbitrary
MR-MM-PKE scheme E that is secure in the model from [5]
and, without loss of generality, assume that each ciphertext
of E starts with preﬁx "0". Execute the KGen algorithm of E
to create a distinguished key pair (sk×, pk×). Consider now
the scheme E(cid:48) obtained from E by modifying the encryption
algorithm such that, on input (cid:126)pk = (pk1, . . . , pkn) and (cid:126)m =
(m1, . . . , mn), ciphertext vector (cid:126)c is computed as usual if
pk1 (cid:54)= pk×, but is set to(cid:0)"1"(cid:107) m1, . . . , "1"(cid:107) mn
(cid:1) otherwise.
Assume in addition that the decryption routine is adapted
such that ciphertexts of the latter form are ‘decrypted’ cor-
rectly. It is not diﬃcult to see that scheme E(cid:48) is secure in the
sense of [5]; indeed, as case pk1 = pk× occurs only with neg-
ligible probability in experiment ExptMR-PKE-IND-BBS, security
of E implies security of E(cid:48). However, intuitively, scheme E(cid:48)
232∗
∗
indication of well-formedness of the keys in (cid:126)pk
. We ob-
serve, however, that it is generally unclear how to verify
that the adversary’s outputs (cid:126)pk
are indeed con-
sistent, i.e., how to accurately implement the corresponding
test in line (f). Indeed, in a follow-up work by the authors
of [5], this situation is formally clariﬁed by restricting the
adversary even further than it is in Figure 2: in [4], the ad-
versary does not have to output (cid:126)pk
any more, but
instead the random coins used to create them with KGen.
and (cid:126)sk
and (cid:126)sk
∗
∗
∗
Generally speaking, security models assuming KOSK are
obviously so strong that one might question their practical
relevance. Authors typically argue in support of the KOSK
assumption by claiming that in any practical setting pub-
lic keys are certiﬁed by trusted authorities (CAs) anyway,
and in the certiﬁcation process the latter could require zero-
knowledge proofs of knowledge of secret keys (or random
coins). However, we are not aware of any CA on the Inter-
net or elsewhere that would require such a proof (or would
at least have corresponding infrastructure available).
The following simple example illustrates that the approach
to obtain MR-MM-PKE from ElGamal encryption [11] by
re-using the ephemeral randomness does not lead to a se-
cure scheme. We stress that this holds even though the very
same scheme was proved secure in [5] (under the KOSK as-
sumption). In detail, in the DL setting, the scheme encrypts
messages m1, m2 ∈ G for public keys X1, X2 ∈ G by pick-
ing a random exponent r ∈ Zp and computing ciphertexts
2 · m2). Now, if X1 is an
c1 = (gr, X r
honestly generated key and the adversary claims X2 = X t
1 as
hers, for arbitrary t ∈ Zp, then from any (multi-)encryption
1 · m1) and c2 = (gr, X r
(cid:16)
(cid:17)
, st) ←R AD1
1 (pp, (cid:126)pk)
∗| = n − k
j matches sk∗
j
E,A,k,n
ExptMR-PKE-IND-BBS,b
(1λ):
(a) pp ←R PGen(1λ)
(b)
( (cid:126)sk, (cid:126)pk) k←R KGen( )
∗
( (cid:126)m0, (cid:126)m1, (cid:126)m∗, (cid:126)pk
, (cid:126)sk
∗
(c)
(d) Require | (cid:126)m0| = | (cid:126)m1| = k ∧
∀i ∈ [k] : |m0
i| = |m1
i|
∗
(cid:0)(cid:126)c, st(cid:1)
∗| = | (cid:126)sk
(e) Require | (cid:126)m∗| = | (cid:126)pk
(f) Require ∀j ∈ [n − k] : pk∗
(g) (cid:126)c ←R Enc( (cid:126)pk(cid:107) (cid:126)pk
, (cid:126)mb(cid:107) (cid:126)m∗)
(h) d ←R AD2
2
(i)
Return d
Oracle D1 (i, c):
(a) Require i ∈ [k]
(b) m ← Dec (ski, c)
(c) Return m
Oracle D2 (i, c):
(a) Require i ∈ [k]
(b) Require c (cid:54)= ci
(c) m ← Dec (ski, c)
(d) Return m
Figure 2: Security experiment for MR-MM-PKE
from [5]
(c1, c2) =
(gr, X r
1 · m1), (gr, X tr
1 · m2)
is weak: by claiming (sk×, pk×) as her own key pair and by
arranging pk× to appear ﬁrst in the input to an encryption
operation, the conﬁdentiality of all other ciphertext compo-
nents is trivially broken.
E,A,k,n
As an independent (and possibly less far-fetched) prob-
lem we identify the fact that experiment ExptMR-PKE-IND-BBS,b
does not allow the adversary to make the same honest pub-
lic key appear multiple times on the input to the encryption
routine. For instance, intuitively, an MR-MM-PKE scheme
where the encryption routine consistently transforms inputs
of the form (cid:126)pk = (pk, pk) and (cid:126)m = (m, m) into ciphertext
pairs of the form (cid:126)c = (c, c) is weak: if messages m, m0, m1 are
chosen such that m = m0 (cid:54)= m1, encryptions of (m, m0) and
(m, m1) for (pk, pk) can trivially be distinguished from each
other, since in exactly one of the cases the ciphertext vector
has the form (c, c). However, in principle such a scheme can
be secure in respect to the experiment from Figure 2, sim-
ply because the logic of the game will eﬀectively prevent the
special (cid:126)pk = (pk, pk) situation to occur (observe that if one
, then A will not be able to
of the copies of pk is part of (cid:126)pk
reveal the corresponding decryption key sk∗).
3.2.3 A criticism of the KOSK assumption
Recall that in line (c) of ExptMR-PKE-IND-BBS,b
∗
is expected to reveal the decryption keys (cid:126)sk
corresponding
∗
to the potentially maliciously-chosen encryption keys (cid:126)pk
.
This represents what is commonly known as the knowledge-
of-secret-key (KOSK) assumption and shall provide some
the adversary
E,A,k,n
∗
.
1 · m2)/m2)t−1
of secret message m1 and known message m2 under keys
(X1, X2), message m1 can readily be recovered via m1 =
(X r
1 · m1)/((X tr
This clearly illustrates the danger of adopting MR-MM-
PKE schemes shown secure under the KOSK assumption in
practical systems where proofs of knowledge of private keys
are not required. However, as we show in Sections 4 and 5,
simultaneously eﬃcient and secure MR-MM-PKE schemes
can be achieved without requiring the KOSK assumption or
any third-party certiﬁcation of public keys.
3.2.4 Our strengthened security model for
MR-MM-PKE
We proceed with the exposition of our new security model
for multi-recipient encryption that tackles the issues dis-
cussed above. We particularly highlight that in the new
model the adversary is allowed to specify arbitrary vectors
of encryption keys to be challenged on (i.e., it may arrange
the public keys in any order, and also repetitions are al-
lowed); additionally, the KOSK assumption is not required
any more.
It is easy to see that our model is (strictly)
stronger than the one from [5] as our experiment encom-
passes the one from Figure 2 as a special case.
Definition 6. (Indistinguishability of MR-MM-PKE)
An MR-MM-PKE scheme E = (PGen, KGen, Enc, Dec) is
indistinguishable (MR-PKE-IND-secure) if for all k and n
polynomially dependent on the security parameter and all ef-
ﬁcient adversaries A = (A1,A2) interacting in experiments
233E,A,k,n
ExptMR-PKE-IND
from Figure 3 the following advantage func-
tion is negligible in λ, where the probabilities are taken over
the random coins of the experiment (including over A’s ran-
domness):
AdvMR-PKE-IND
E,A,k,n
(λ) =
ExptMR-PKE-IND,1
E,A,k,n
(1λ) = 1
(cid:105)−
(cid:105)(cid:12)(cid:12)(cid:12)(cid:12)
.
(cid:12)(cid:12)(cid:12)(cid:12)Pr