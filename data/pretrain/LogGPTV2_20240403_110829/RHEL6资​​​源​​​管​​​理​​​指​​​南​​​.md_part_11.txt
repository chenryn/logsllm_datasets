    操​​​作​​​请​​​求​​​的​​​次​​​数​​​。​​​条​​​目​​​有​​​两​​​个​​​字​​​段​​​：*number* 和​​​ *operation*。​​​*Number*
    是​​​请​​​求​​​次​​​数​​​，*operation*
    代​​​表​​​操​​​作​​​类​​​型​​​（`read`{.literal}、​​​`write`{.literal}、​​​`sync`{.literal}
    或​​​者​​​ `async`{.literal}）。​​​
    :::
[blkio.io_queued]{.term}
:   ::: para
    报​​​告​​​ cgroup 为​​​ I/O 操​​​作​​​排​​​队​​​的​​​请​​​求​​​次​​​数​​​。​​​条​​​目​​​有​​​两​​​个​​​字​​​段​​​：*number* 和​​​
    *operation*。​​​*Number* 是​​​请​​​求​​​次​​​数​​​，*operation*
    代​​​表​​​操​​​作​​​类​​​型​​​（`read`{.literal}、​​​`write`{.literal}、​​​`sync`{.literal}
    或​​​者​​​ `async`{.literal}）。​​​
    :::
[blkio.avg_queue_size]{.term}
:   ::: para
    报​​​告​​​在​​​该​​​组​​​群​​​存​​​在​​​的​​​整​​​个​​​过​​​程​​​中​​​，cgroup 的​​​ I/O
    操​​​作​​​的​​​平​​​均​​​队​​​列​​​大​​​小​​​。​​​每​​​次​​​这​​​个​​​ cgroup
    获​​​得​​​一​​​个​​​时​​​间​​​单​​​位​​​时​​​都​​​对​​​该​​​队​​​列​​​大​​​小​​​进​​​行​​​采​​​样​​​。​​​请​​​注​​​意​​​这​​​个​​​报​​​告​​​只​​​有​​​在​​​将​​​系​​​统​​​设​​​定​​​为​​​
    `CONFIG_DEBUG_BLK_CGROUP=y`{.literal} 时​​​可​​​用​​​。​​​
    :::
[blkio.group_wait_time]{.term}
:   ::: para
    报​​​告​​​ cgroup 等​​​待​​​每​​​个​​​队​​​列​​​的​​​时​​​间​​​总​​​计​​​（单​​​位​​​为​​​纳​​​秒​​​ \-- ns）。​​​每​​​次​​​这​​​个​​​
    cgroup 的​​​队​​​列​​​获​​​得​​​一​​​个​​​时​​​间​​​单​​​位​​​时​​​就​​​会​​​更​​​新​​​这​​​个​​​报​​​告​​​，因​​​此​​​如​​​果​​​您​​​在​​​ cgroup
    等​​​待​​​时​​​间​​​单​​​位​​​时​​​读​​​取​​​这​​​个​​​伪​​​文​​​件​​​，则​​​该​​​报​​​告​​​将​​​不​​​会​​​包​​​含​​​等​​​待​​​当​​​前​​​队​​​列​​​中​​​的​​​操​​​作​​​的​​​时​​​间​​​。​​​请​​​注​​​意​​​这​​​个​​​报​​​告​​​只​​​有​​​在​​​将​​​系​​​统​​​设​​​定​​​为​​​
    `CONFIG_DEBUG_BLK_CGROUP=y`{.literal} 时​​​可​​​用​​​。​​​
    :::
[blkio.empty_time]{.term}
:   ::: para
    报​​​告​​​ cgroup 在​​​没​​​有​​​任​​​何​​​等​​​待​​​处​​​理​​​请​​​求​​​时​​​花​​​费​​​的​​​时​​​间​​​总​​​计​​​（单​​​位​​​为​​​纳​​​秒​​​ \--
    ns）。​​​每​​​次​​​这​​​个​​​ cgroup 有​​​等​​​待​​​处​​​理​​​请​​​求​​​时​​​都​​​会​​​更​​​新​​​这​​​个​​​报​​​告​​​，因​​​此​​​如​​​果​​​您​​​在​​​
    cgroup
    没​​​有​​​任​​​何​​​等​​​待​​​处​​​理​​​请​​​求​​​是​​​读​​​取​​​这​​​个​​​伪​​​文​​​件​​​，则​​​该​​​报​​​告​​​中​​​不​​​会​​​包​​​含​​​消​​​耗​​​在​​​当​​​前​​​空​​​状​​​态​​​中​​​的​​​时​​​间​​​。​​​请​​​注​​​意​​​这​​​个​​​报​​​告​​​只​​​有​​​在​​​将​​​该​​​系​​​统​​​设​​​定​​​为​​​
    `CONFIG_DEBUG_BLK_CGROUP=y`{.literal} 时​​​可​​​用​​​。​​​
    :::
[blkio.idle_time]{.term}
:   ::: para
    报​​​告​​​调​​​度​​​程​​​序​​​在​​​ cgroup
    等​​​待​​​比​​​已​​​经​​​在​​​其​​​它​​​队​​​列​​​或​​​者​​​来​​​自​​​其​​​它​​​组​​​群​​​请​​​求​​​更​​​好​​​的​​​请​​​求​​​时​​​显​​​示​​​闲​​​置​​​的​​​时​​​间​​​总​​​计​​​（单​​​位​​​为​​​纳​​​秒​​​
    \-- ns）。​​​每​​​次​​​该​​​组​​​群​​​不​​​显​​​示​​​闲​​​置​​​时​​​就​​​会​​​更​​​新​​​这​​​个​​​报​​​告​​​，因​​​此​​​如​​​果​​​您​​​在​​​
    cgroup
    闲​​​置​​​时​​​读​​​取​​​这​​​个​​​伪​​​文​​​件​​​，则​​​该​​​报​​​告​​​将​​​不​​​会​​​包​​​括​​​消​​​耗​​​在​​​当​​​前​​​闲​​​置​​​状​​​态​​​的​​​时​​​间​​​。​​​请​​​注​​​意​​​，只​​​有​​​在​​​将​​​系​​​统​​​设​​​定​​​为​​​
    `CONFIG_DEBUG_BLK_CGROUP=y`{.literal} 时​​​这​​​个​​​报​​​告​​​才​​​可​​​用​​​。​​​
    :::
[blkio.dequeue]{.term}
:   ::: para
    报​​​告​​​ cgroup 的​​​ I/O
    操​​​作​​​请​​​求​​​被​​​具​​​体​​​设​​​备​​​从​​​队​​​列​​​中​​​移​​​除​​​的​​​次​​​数​​​。​​​条​​​目​​​有​​​三​​​个​​​字​​​段​​​：*major*、​​​*minor*
    和​​​ *number*。​​​*major* 和​​​ *minor* 是​​​在​​​ *Linux
    分​​​配​​​的​​​设​​​备​​​*中​​​指​​​定​​​的​​​设​​​备​​​类​​​型​​​和​​​节​​​点​​​数​​​，*number*
    是​​​将​​​该​​​组​​​群​​​从​​​队​​​列​​​中​​​移​​​除​​​的​​​次​​​数​​​。​​​请​​​注​​​意​​​这​​​个​​​报​​​告​​​只​​​有​​​在​​​将​​​系​​​统​​​设​​​定​​​为​​​
    `CONFIG_DEBUG_BLK_CGROUP=y`{.literal} 时​​​可​​​用​​​。​​​
    :::
[blkio.reset_stats]{.term}
:   ::: para
    重​​​新​​​设​​​定​​​在​​​其​​​它​​​伪​​​文​​​件​​​中​​​记​​​录​​​的​​​统​​​计​​​数​​​据​​​。​​​在​​​这​​​个​​​文​​​件​​​中​​​写​​​入​​​一​​​个​​​整​​​数​​​为​​​这​​​个​​​
    cgroup 重​​​新​​​设​​​定​​​统​​​计​​​数​​​据​​​。​​​
    :::
:::
:::
::: section
::: titlepage
# [⁠]{#ch-Subsystems_and_Tunable_Parameters.html#sec-cpu}3.2. cpu {.title}
:::
::: para
`cpu`{.systemitem} 子​​​系​​​统​​​调​​​度​​​对​​​ cgroup 的​​​ CPU 访​​​问​​​。​​​可​​​根​​​据​​​以​​​下​​​参​​​数​​​调​​​度​​​对​​​
CPU 资​​​源​​​的​​​访​​​问​​​，每​​​个​​​参​​​数​​​都​​​独​​​立​​​存​​​在​​​于​​​ cgroup 虚​​​拟​​​文​​​件​​​系​​​统​​​的​​​*伪​​​文​​​件​​​*中​​​：
:::
::: variablelist
[cpu.shares]{.term}
:   ::: para
    包​​​含​​​用​​​来​​​指​​​定​​​在​​​ cgroup 中​​​的​​​任​​​务​​​可​​​用​​​的​​​相​​​对​​​共​​​享​​​ CPU
    时​​​间​​​的​​​整​​​数​​​值​​​。​​​例​​​如​​​：在​​​两​​​个​​​ cgroup 中​​​都​​​将​​​ `cpu.shares`{.filename}
    设​​​定​​​为​​​ `1`{.literal} 的​​​任​​​务​​​将​​​有​​​相​​​同​​​的​​​ CPU 时​​​间​​​，但​​​在​​​ cgroup 中​​​将​​​
    `cpu.shares`{.filename} 设​​​定​​​为​​​ `2`{.literal} 的​​​任​​​务​​​可​​​使​​​用​​​的​​​ CPU
    时​​​间​​​是​​​在​​​ cgroup 中​​​将​​​ `cpu.shares`{.filename} 设​​​定​​​为​​​ `1`{.literal}
    的​​​任​​​务​​​可​​​使​​​用​​​的​​​ CPU 时​​​间​​​的​​​两​​​倍​​​。​​​
    :::
[cpu.rt_runtime_us]{.term}
:   ::: para
    以​​​微​​​秒​​​（µs，这​​​里​​​以​​​"​​​us"​​​代​​​表​​​）为​​​单​​​位​​​指​​​定​​​在​​​某​​​个​​​时​​​间​​​段​​​中​​​ cgroup
    中​​​的​​​任​​​务​​​对​​​ CPU 资​​​源​​​的​​​最​​​长​​​连​​​续​​​访​​​问​​​时​​​间​​​。​​​建​​​立​​​这​​​个​​​限​​​制​​​是​​​为​​​了​​​防​​​止​​​一​​​个​​​
    cgroup 中​​​的​​​任​​​务​​​独​​​占​​​ CPU 时​​​间​​​。​​​如​​​果​​​ cgroup 中​​​的​​​任​​​务​​​应​​​该​​​可​​​以​​​每​​​ 5
    秒​​​中​​​可​​​有​​​ 4 秒​​​时​​​间​​​访​​​问​​​ CPU 资​​​源​​​，请​​​将​​​ `cpu.rt_runtime_us`{.filename}
    设​​​定​​​为​​​ `4000000`{.literal}，并​​​将​​​ `cpu.rt_period_us`{.filename}
    设​​​定​​​为​​​ `5000000`{.literal}。​​​
    :::
[cpu.rt_period_us]{.term}
:   ::: para
    以​​​微​​​秒​​​（µs，这​​​里​​​以​​​"​​​us"​​​代​​​表​​​）为​​​单​​​位​​​指​​​定​​​在​​​某​​​个​​​时​​​间​​​段​​​中​​​ cgroup 对​​​ CPU
    资​​​源​​​访​​​问​​​重​​​新​​​分​​​配​​​的​​​频​​​率​​​。​​​如​​​果​​​某​​​个​​​ cgroup 中​​​的​​​任​​​务​​​应​​​该​​​每​​​ 5 秒​​​钟​​​有​​​ 4
    秒​​​时​​​间​​​可​​​访​​​问​​​ CPU 资​​​源​​​，则​​​请​​​将​​​ `cpu.rt_runtime_us`{.filename} 设​​​定​​​为​​​
    `4000000`{.literal}，并​​​将​​​ `cpu.rt_period_us`{.filename} 设​​​定​​​为​​​
    `5000000`{.literal}。​​​
    :::
:::
:::
::: section
::: titlepage
# [⁠]{#ch-Subsystems_and_Tunable_Parameters.html#sec-cpuacct}3.3. cpuacct {.title}
:::
::: para
CPU Accounting（`cpuacct`{.systemitem}）子​​​系​​​统​​​自​​​动​​​生​​​成​​​ cgroup
中​​​任​​​务​​​所​​​使​​​用​​​的​​​ CPU 资​​​源​​​报​​​告​​​，其​​​中​​​包​​​括​​​子​​​组​​​群​​​中​​​的​​​任​​​务​​​。​​​三​​​个​​​可​​​用​​​报​​​告​​​为​​​：
:::
::: variablelist
[cpuacct.stat]{.term}
:   ::: para
    报​​​告​​​这​​​个​​​ cgroup
    及​​​其​​​子​​​组​​​群​​​中​​​的​​​任​​​务​​​使​​​用​​​用​​​户​​​模​​​式​​​和​​​系​​​统​​​（内​​​核​​​）模​​​式​​​消​​​耗​​​的​​​ CPU
    循​​​环​​​数​​​（单​​​位​​​由​​​系​​​统​​​中​​​的​​​ `USER_HZ`{.systemitem} 定​​​义​​​）。​​​
    :::
[cpuacct.usage]{.term}
:   ::: para
    报​​​告​​​这​​​个​​​ cgroup 中​​​所​​​有​​​任​​​务​​​（包​​​括​​​层​​​级​​​中​​​的​​​低​​​端​​​任​​​务​​​）消​​​耗​​​的​​​总​​​ CPU
    时​​​间​​​（纳​​​秒​​​）。​​​
    :::
[cpuacct.usage_percpu]{.term}
:   ::: para
    报​​​告​​​这​​​个​​​ cgroup 中​​​所​​​有​​​任​​​务​​​（包​​​括​​​层​​​级​​​中​​​的​​​低​​​端​​​任​​​务​​​）在​​​每​​​个​​​ CPU
    中​​​消​​​耗​​​的​​​ CPU 时​​​间​​​（以​​​纳​​​秒​​​为​​​单​​​位​​​）。​​​
    :::
:::
:::
::: section
::: titlepage
# [⁠]{#ch-Subsystems_and_Tunable_Parameters.html#sec-cpuset}3.4. cpuset {.title}
:::
::: para
`cpuset`{.systemitem} 子​​​系​​​统​​​为​​​ cgroup 分​​​配​​​独​​​立​​​ CPU
和​​​内​​​存​​​节​​​点​​​。​​​可​​​根​​​据​​​用​​​以​​​下​​​参​​​数​​​指​​​定​​​每​​​个​​​
cpuset，每​​​个​​​参​​​数​​​都​​​在​​​控​​​制​​​组​​​群​​​虚​​​拟​​​文​​​件​​​系​​​统​​​中​​​有​​​单​​​独​​​的​​​*伪​​​文​​​件​​​*：
:::
::: {.important xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**重​​​要​​​ \-- 强​​​制​​​参​​​数​​​**
:::
::: admonition
::: para
有​​​些​​​子​​​系​​​统​​​拥​​​有​​​强​​​制​​​参​​​数​​​，您​​​在​​​可​​​以​​​将​​​任​​​务​​​移​​​动​​​到​​​使​​​用​​​那​​​些​​​子​​​系​​​统​​​的​​​ cgroup
前​​​必​​​须​​​设​​​定​​​这​​​些​​​参​​​数​​​。​​​例​​​如​​​：在​​​您​​​将​​​任​​​务​​​移​​​动​​​到​​​使​​​用​​​ `cpuset`{.systemitem}
子​​​系​​​统​​​的​​​ cgroup 前​​​，必​​​须​​​为​​​那​​​个​​​ cgroup 定​​​义​​​ *`cpuset.cpus`* 和​​​
*`cpuset.mems`* 参​​​数​​​。​​​
:::
:::
:::
::: variablelist
[cpuset.cpus（强​​​制​​​）]{.term}
:   ::: para
    指​​​定​​​允​​​许​​​这​​​个​​​ cgroup 中​​​任​​​务​​​访​​​问​​​的​​​
    CPU。​​​这​​​是​​​一​​​个​​​用​​​逗​​​号​​​分​​​开​​​的​​​列​​​表​​​，格​​​式​​​为​​​
    ASCII，使​​​用​​​小​​​横​​​线​​​（\"`-`{.literal}\"）代​​​表​​​范​​​围​​​。​​​例​​​如​​​：
    :::
    ``` programlisting
    0-2,16
    ```
    ::: para