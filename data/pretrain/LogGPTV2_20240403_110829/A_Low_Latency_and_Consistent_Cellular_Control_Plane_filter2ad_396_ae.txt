proposes a consolidated EPC architecture but does not provide
fault tolerance. In contrast, Neutrino’s goal is to design a faster and
consistent cellular control plane, but Neutrino can be incorporated
in consolidated EPC architectures like PEPC. Skycore [40] consoli-
dates RAN and EPC. Skycore is designed for a specific deployment
scenario where the base stations are deployed on unmanned aerial
vehicles (UAV). Skycore broadcasts user state updates to the neigh-
bor nodes, which as we show in our evaluation (§6) does not lead
to a scalable design.
Network function failure recovery: There are proposals on mid-
dlebox failure recovery such as [51, 54]. Neutrino’s failure recovery
is in part inspired by these prior proposals in the general middlebox
context. However, the specific failure recovery scheme in Neutrino;
per-procedure checkpointing and message logging mechanisms,
are designed to satisfy the consistency and latency requirements in
the cellular context.
9 CONCLUSION
Next-generation cellular networks aim to support new and emerg-
ing applications with ultra-low latency and high reliability require-
ments. In this work, we identify the key issues in meeting these
requirements in existing cellular control plane. We design Neu-
trino, a new edge-based cellular control plane that provides users
an abstraction of reliable access to cellular services while ensuring
lower latency.18 We show Neutrino can lead to substantial improve-
ments in the performance of latency-sensitive applications, while
tolerating control plane failures. With discussions about 5G core ar-
chitectures actively under-way, we hope this paper will contribute
to an important discourse in control plane designs.
ACKNOWLEDGMENTS
We thank our shepherd Sanjay Rao and the anonymous SIGCOMM
reviewers for their valuable feedback.
18This work does not raise any ethical issues.
Figure 20: Size comparison of encoded messages between Op-
timized FBs, FBs and ASN.1.
7 DISCUSSION
In this section, we discuss Neutrino’s deployability and serialization
tradeoffs.
Deployability: Neutrino is designed for next-generation cellular
networks like 5G and 6G. It only requires minimal changes to BS;
instead of ASN.1, BS use Neutrino’s FBs-based serialization engine.
In rolling out 5G deployments, cellular providers are expected to
make major upgrades on BS [13], hence, we expect upgrading the
serialization engine would not be a hindrance in adopting Neutrino.
However, Neutrino’s serialization engine is not compatible with
previous generations of cellular networks (4G/LTE and earlier),
although Neutrino’s consistency protocol (§4.2) and proactive state
replication scheme (§4.3) can seamlessly work with 4G/LTE.
Serialization tradeoff: Neutrino’s serialization scheme reduces
encoding/decoding time by a factor of up to 19.2× at the cost of an
increase in message size. With increasing available bandwidth in
cellular networks, we believe this is an acceptable tradeoff for the
cellular providers. We are currently investigating further optimiza-
tions in Neutrino’s FB-based compiler to reduce the overhead in
message sizes while retaining its latency benefits.
8 RELATED WORK
Scaling distributed MMEs: There are recent proposals for scaling
MMEs [12, 14, 31, 43]. SCALE [14] proposes mechanisms for scaling
a software 4G/LTE MME to handle increasing signaling load. It uses
state replication to handle MME failures and consistent-hashing
based load balancing. MMLite [43] proposes a load balancing solu-
tion for MMEs, leveraging skewed consistent hashing to distribute
incoming connections more efficiently. However, as we discussed
earlier (§2), both SCALE and MMLite do not provide any consis-
tency guarantees. MobileStream [31] proposes a programmable
mobile core control platform which decomposes control plane in
multiple stateless and one stateful node and externalizes user state.
MobileStream provides better programmability of the control plane
than other schemes, however, in an edge-deployment scenario,
lookups on a remote state store can become a source of increased
latency. In comparison to these schemes, Neutrino provides (i) con-
sistency guarantees, (ii) faster serialization, and (iii) faster failure
recovery. There are other general proposals for externalizing NF
659
A Low Latency and Consistent Cellular Control Plane
SIGCOMM ’20, August 10–14, 2020, Virtual Event, NY, USA
REFERENCES
[1] [n. d.]. ASN.1. https://asn1.io/. ([n. d.]). [Online; accessed 19-Sep-2019].
[2] [n. d.]. Data Plane Development Kit. https://www.dpdk.org/. ([n. d.]). [Online;
[3] [n. d.]. Fast-CDR. https://github.com/eProsima/Fast-CDR. ([n. d.]).
[Online;
[4] [n. d.]. Geo Hash. http://geohash.gofreerange.com/. ([n. d.]). Online; accessed
accessed 19-Sep-2019].
accessed 19-Sep-2019].
19-Sep-2019.
[5] [n. d.]. Lightweight Communications and Marshalling. https://lcm-proj.github.io/.
([n. d.]). [Online; accessed 19-Sep-2019].
[6] [n. d.]. MITM Proxy. https://mitmproxy.org/. ([n. d.]). [Online; accessed 28-Jan-
2020].
[7] 3GPP Ref #: 23.401. 2016. General Packet Radio Service (GPRS) enhancements for
Evolved Universal Terrestrial Radio Access Network (E-UTRAN) access. Retrieved
09/05/2016 from http://www.3gpp.org/DynaReport/23401.htm
[8] 3GPP Ref #: 23.501. 2019. System architecture for the 5G System (5GS). Re-
trieved 20/01/2020 from https://portal.3gpp.org/desktopmodules/Specifications/
SpecificationDetails.aspx?specificationId=3144
from www.3gpp.org/dynareport/24301.htm
[9] 3GPP Ref #: 24.301. 2016. Non-Access-Stratum (NAS) protocol. Retrieved 09/05/2016
[10] 3GPP Ref #: 29.272. 2016. Mobility Management Entity (MME) and Serving GPRS
Support Node (SGSN) related interfaces based on Diameter protocol. Retrieved
09/05/2016 from www.3gpp.org/DynaReport/29272.htm
[11] 3GPP Ref #: 36.413. 2016. S1 Application Protocol (S1AP). www.3gpp.org/
dynareport/36413.htm. (2016).
[12] Xueli An, Fabio Pianese, Indra Widjaja, and Utku Gunay Acer. 2012. DMME: A
Distributed LTE Mobility Management Entity. Bell Labs Technical Journal 17, 2
(Sept. 2012), 97–120. https://doi.org/10.1002/bltj.21547
[13] J. G. Andrews, S. Buzzi, W. Choi, S. V. Hanly, A. Lozano, A. C. K. Soong, and J. C.
Zhang. 2014. What Will 5G Be? IEEE Journal on Selected Areas in Communications
32, 6 (June 2014), 1065–1082. https://doi.org/10.1109/JSAC.2014.2328098
[14] Arijit Banerjee, Rajesh Mahindra, Karthik Sundaresan, Sneha Kasera, Kobus
Van der Merwe, and Sampath Rangarajan. 2015. Scaling the LTE Control-Plane
for Future Mobile Access. In CoNEXT’15.
(2014). Re-
trieved 17/06/2020 from http://research.microsoft.com/apps/pubs/default.aspx?
id=230852
[15] Sebastian Burckhardt. 2014. Principles of Eventual Consistency.
[16] Sebastian Burckhardt. 2015. Consistency in Distributed Systems, Microsoft
[17] carla.org. [n. d.]. CARLA. ([n. d.]). Retrieved Jan 27, 2020 from https://github.
Research. In Springer International Publishing Switzerland’15.
com/carla-simulator/carla.git
[18] Alexey Dosovitskiy, German Ros, Felipe Codevilla, Antonio Lopez, and Vladlen
Koltun. 2017. CARLA: An Open Urban Driving Simulator. In Proceedings of the
1st Annual Conference on Robot Learning. 1–16.
[19] Ramakrishna Rao Kotla Mahesh Balakrishnan Marcos K Aguilera Douglas
B. Terry, Vijayan Prabhakaran and Hussam Abu-Libdeh. 2013. Consistency-
based service level agreements for cloud storage. In SOSP ’13.
Retrieved 09/05/2016 from https://goo.gl/yRfxkG
[20] Ericsson. 2016. A vision of the 5G core: flexibility for new business opportunities.
[21] ETSI. 2018. GS MEC 002: Multi-access Edge Computing (MEC); Framework and
Reference Architecture. https://www.etsi.org/committee/1425-mec. (2018).
[22] ETSI. 2018. GS MEC 002: Multi-access Edge Computing (MEC); Phase 2: Use
Cases and Requirements. https://www.etsi.org/committee/1425-mec. (2018).
[23] ETSI. 2018. MEC in 5G networks.
https://www.etsi.org/images/files/
ETSIWhitePapers/etsi_wp28_mec_in_5G_FINAL.pdf. (2018).
edge
[24] FierceTelecom. 2019.
leverages
at-t-virtualized-flexware-service-already-leverages-edge-computing.
[Online; accessed 03-April-2019].
AT&T: Virtualized Flexware service already
https://www.fiercetelecom.com/telecom/
(2019).
computing.
[25] Giuseppe DeCandia, Deniz Hastorun, Madan Jampani, Gunavardhan Kakulapati,
Avinash Lakshman, Alex Pilchin, Swaminathan Sivasubramanian, Peter Vosshall
and Werner Vogels. 2007. Dynamo: Amazon’s Highly Available Key-value Store.
In SOSP’07.
([n. d.]). [Online; accessed 19-Sep-2019].
[26] Google. [n. d.]. FlexBuffers. https://google.github.io/flatbuffers/flexbuffers.html.
[27] Google. [n. d.]. ProtocolBuffers. https://developers.google.com/protocol-buffers/.
([n. d.]). [Online; accessed 19-Sep-2019].
[28] Google/GitHub. [n. d.]. FlatBuffers. https://google.github.io/flatbuffers/. ([n. d.]).
[29] Intel. [n. d.]. UPF-EPC. https://github.com/omec-project/upf-epc.git. ([n. d.]).
[Online; accessed 19-Sep-2019].
[Online; accessed 27-Jan-2020].
[30] Xin Jin, Li Erran Li, Laurent Vanbever, and Jennifer Rexford. 2013. SoftCell:
Scalable and Flexible Core Network Architecture. In CoNEXT’13.
[31] Ryan Junguk Cho and Z. Jacobus Van. 2018. MobileStream: A Scalable, Pro-
grammable and Evolvable Mobile Core Control Plane Platform. In MobiCom’18.
[32] Murad Kablan, Azzam Alsudais, Eric Keller, and Franck Le. 2017. Stateless
Network Functions: Breaking the Tight Coupling of State and Processing. In 14th
USENIX Symposium on Networked Systems Design and Implementation (NSDI 17).
USENIX Association, Boston, MA, 97–112. https://www.usenix.org/conference/
nsdi17/technical-sessions/presentation/kablan
[33] Junaid Khalid and Aditya Akella. 2019. Correctness and Performance for Stateful
Chained Network Functions. In 16th USENIX Symposium on Networked Systems
Design and Implementation (NSDI 19). USENIX Association, Boston, MA, 501–516.
https://www.usenix.org/conference/nsdi19/presentation/khalid
[34] Raheel Khalid. 2018. Envrmnt by Verizon: Cloud XR Experience on 5G with Mo-
bile Edge Networks. https://www.slideshare.net/AugmentedWorldExpo/raheel-
khalid-envrmnt-by-verizon-cloud-xr-experience-on-5g-with-mobile-edge-
networks. (2018).
[35] Nour Kouzayha, Mona Jaber, and Zaher Dawy. 2017. Measurement-Based Signal-
ing Management Strategies for Cellular IoT. In IEEE Internet of Things Journal.
[36] Li Erran Li, Z. Morley Mao, and Jennifer Rexford. 2012. Toward Software-Defined
Cellular Networks. In IEEE, 2012 European Workshop on Software Defined Net-
working.
[37] Yuanjie Li, Zengwen Yuan, and Chunyi Peng. 2017. A Control-Plane Perspective
on Reducing Data Access Latency in LTE Networks. In MobiCom’17.
[38] LightReading. [n. d.]. An Inside Look at Verizon’s Edge Computing Capabili-
ties. https://www.lightreading.com/the-edge/an-inside-look-at-verizons-edge-
computing-capabilities/d/d-id/749548. ([n. d.]). [Online; accessed 19-Sep-2019].
[39] M-CORD. 2016. Mobile CORD: Enabling 5G on CORD. http://opencord.org/
wp-content/uploads/2016/03/M-CORD-March-2016.pdf. (2016). Online; accessed
19-Sep-2019.
[40] Eugene Sampath Mehrdad, Karthikeyan and Z. Morley Mao. 2018. SkyCore:
Moving Core to the Edge for Untethered and Reliable UAV-based LTE Network.
In MobiCom’18.
[41] Mehrdad Moradi, Yikai Lin, Z. Morley Mao, Subhabrata Sen, and Oliver
Spatscheck. 2018. SoftBox: A Customizable, Low-Latency, and Scalable 5G Core
Network Architecture.
IEEE Journal on Selected Areas in Communications 36
(2018), 438–456.
[42] Mehrdad Moradi, Wenfei Wu, Li Erran Li, and Zhuoqing Morley Mao. 2014. Soft-
MoW: Recursive and Reconfigurable Cellular WAN Architecture. In CoNEXT’14.
[43] Vasudevan Nagendra, Arani Bhattacharya, Anshul Gandhi, and Samir R. Das. 2019.
MMLite: A Scalable and Resource Efficient Control Plane for Next Generation
Cellular Packet Core. In Proceedings of the 2019 ACM Symposium on SDN Research
(SOSR ’19).
Operators Urge Action Against Chatty Apps.
https://www.seven.com/press_releases/2012/wireless_network_worst_case_
scenario.php. (2016). [Online; accessed 09-May-2016].
[44] SEVEN Networks. 2016.
09/05/2016 from http://www.ng4t.com/
[45] ng4T. 2016. Next generation Telecommunication Technology Testing Tools. Retrieved
[46] Binh Nguyen, Tian Zhang, Bozidar Radunovic, Ryan Stutsman, Thomas Karagian-
nis, Jakub Kocur, and Jacobus Van. 2018. ECHO: A reliable distributed cellular
core network for hyper-scale public clouds. In Mobicom ’18. ACM, New York, NY,
USA, 163–178. https://dl.acm.org/doi/10.1145/3241539.3241564
[47] Nokia. 2016. Signaling is growing 50% faster than data traffic. (2016). Retrieved
09/05/2016 from https://www.nokia.com/blog
[48] ONOS. [n. d.]. Introducing ONOS - a SDN network operating system for Service
Providers. https://www.opennetworking.org/onos/. ([n. d.]). [Online; accessed
01-Jan-2019].
[49] OpenAirInterface. 2016. OpenAirInterface: A 5G software alliance for democratis-
[Online;
ing wireless innovation . http://www.openairinterface.org/. (2016).
accessed 19-Sep-2019].
[53] Mahadev Satyanarayananz. 2017. The Emergence of Edge Computing.
[51] Shriram Rajagopalan, Dan Williams, and Hani Jamjoom. 2013. Pico Replication:
[50] Zafar Ayyub Qazi, Melvin Walls, Aurojit Panda, Vyas Sekar, Sylvia Ratnasamy,
and Scott Shenker. 2017. A High Performance Packet Core for Next Generation
Cellular Networks. In SIGCOMM’17.
A High Availability Framework for Middleboxes. In SOCC’13.
[52] Sylvia Ratnasamy, Brad Karp, Li Yin, Fang Yu, Deborah Estrin, Ramesh Govindan,
and Scott Shenker. 2002. GHT: A Geographic Hash Table for Data-Centric Storage.
In ACM WSNA’02.
IEEE
Computer Society (2017).
[54] Justine Sherry, Peter Xiang Gao, Soumya Basu, Aurojit Panda, Arvind Krishna-
murthy, Christian Maciocco, Maziar Manesh, João Martins, Sylvia Ratnasamy,
Luigi Rizzo, and Scott Shenker. 2015. Rollback-Recovery for Middleboxes. In
SIGCOMM’15.
[55] Chang-Hong Hsu Matt Skach Md E. Haque1 Lingjia Tang Jason Mars Shih-
Chieh Lin, Yunqi Zhang. 2018. The Architectural Implications of Autonomous
Driving: Constraints and Acceleration. In ACM SIGPLAN’18.
[56] Tarik Taleb and Konstantinos Samdanis. 2011. Ensuring Service Resilience in
the EPS: MME Failure Restoration Case. 2011 IEEE Global Telecommunications
Conference - GLOBECOM 2011 36 (2011), 438–456. https://ieeexplore.ieee.org/
document/6133654
Intelligent network optimization. https://cloud.tencent.com/
[57] Tencent. 2018.
product/ino. (2018). https://cloud.tencent.com/product/ino
660
SIGCOMM ’20, August 10–14, 2020, Virtual Event, NY, USA
Mukhtiar et al.
[58] Maarten van Steen and Andrew S. Tanenbaum. 2017. Distributed Systems: Princi-
[59] Paolo Viotti and Marko Vukolić. 2016. Consistency in Non-Transactional Dis-
ples and Paradigms (3rd edition). Maarten van Steen.
tributed Storage Systems. In ACM Computing Surveys’16.
[60] Qiang Xu, Junxian Huang, Zhaoguang Wang, Feng Qian, Alexandre Gerber, and
Zhuoqing Morley Mao. 2011. Cellular Data Network Infrastructure Characteriza-
tion and Implication on Mobile Content Placement. In SIGMETRICS’11.
[61] Zengwen Yuan Yuanjie Li and Zengwen Yuan. 2017. A Control-Plane Perspective
on Reducing Data Access Latency in LTE Networks. In MobiCom’17.
[62] Kyriakos Zarifis, Tobias Flach, Srikanth Nori, David Choffnes, Ramesh Govindan,
Ethan Katz-Bassett, Z. Morley Mao, and Matt Welsh. 2014. Diagnosing Path
Inflation of Mobile Client Traffic. In PAM’14.
661