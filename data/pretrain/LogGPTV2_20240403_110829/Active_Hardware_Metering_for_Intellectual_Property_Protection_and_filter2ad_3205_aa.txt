title:Active Hardware Metering for Intellectual Property Protection and
Security
author:Yousra Alkabani and
Farinaz Koushanfar
Active Hardware Metering for Intellectual Property
Protection and Security
Yousra M. Alkabani
Computer Science Dept.
Rice University, Houston, TX
PI:EMAIL
Farinaz Koushanfar
Electrical and Computer Engineering Dept.
Rice University, Houston, TX
PI:EMAIL
Abstract
We introduce the ﬁrst active hardware metering scheme
that aims to protect integrated circuits (IC) intellectual
property (IP) against piracy and runtime tampering. The
novel metering method simultaneously employs inherent
unclonable variability in modern manufacturing tech-
nology, and functionality preserving alternations of the
structural IC speciﬁcations. Active metering works by
enabling the designers to lock each IC and to remotely
disable it. The objectives are realized by adding new
states and transitions to the original ﬁnite state machine
(FSM) to create boosted ﬁnite state machines(BFSM) of
the pertinent design. A unique and unpredictable ID gen-
erated by an IC is utilized to place an BFSM into the
power-up state upon activation. The designer, knowing
the transition table, is the only one who can generate in-
put sequences required to bring the BFSM into the func-
tional initial (reset) state. To facilitate remote disabling
of ICs, black hole states are integrated within the BFSM.
We introduce nine types of potential attacks against
the proposed active metering method. We further de-
scribe a number of countermeasures that must be taken
to preserve the security of active metering against the po-
tential attacks. The implementation details of the method
with the objectives of being low-overhead, unclonable,
obfuscated, stable, while having a diverse set of keys
is presented. The active metering method was imple-
mented, synthesized and mapped on the standard bench-
mark circuits. Experimental evaluations illustrate that
the method has a low-overhead in terms of power, de-
lay, and area, while it is extremely resilient against the
considered attacks.
1 Introduction
In the dominant horizontal semiconductor business
model, piracy (illegal copying) and tampering of hard-
ware are omnipresent. In the horizontal business model,
hardware IP1 designed by the leading edge designers
are mostly manufactured in untrusted offshore countries
with lower labor and operational cost. This places the
designers in an unusual asymmetric relationship: the de-
signed IP is transparent to the manufacturers, but the
fabrication process, quantity and added circuitry to the
manufactured integrated circuits (ICs) by the foundry are
clandestine to the designers and IP providers.
The security threat, ﬁnancial loss and economic im-
pacts of hardware piracy which have received far less
attention compared to software, is even more dramatic
than software [8, 31]. Software piracy has received more
attention compared to hardware also because it requires
low-cost resources that are available to the general pub-
lic. Protection of hardware is also crucially important
because the ICs are pervasively used in almost all elec-
tronic devices and the potentially adversarial fabrication
house has the full control over the hardware resources
being manufactured.
It is estimated that the computer
hardware, computer peripherals, and embedded systems
are the dominant pirated IP components [31].
Several other issues make the IC protection problems
truly challenging: (i) very little is known about the cur-
rent and potential IC tampering attacks; (ii) numerous
attacking strategies exist, since tampering can be con-
ducted at many levels of abstraction of the synthesis pro-
cess; (iii) the most likely hardware adversaries are ﬁ-
nancially strong foundries and foreign governments with
large economic resources and technological expertise;
(iv) the adversary has full access to the structural speciﬁ-
cation of the design and most often also to the manufac-
turing test vectors; (v) the internal part of manufactured
ICs are intrinsically opaque. While it is possible to to-
mographically scan an IC, the dense metal interconnect
in 8 or more layers of modern manufacturing technol-
ogy greatly reduce the effectiveness of such expensive
inspections.
IC metering is a set of security protocols that enable
the design house to gain post-fabrication control by pas-
USENIX Association
16th USENIX Security Symposium
291
sive or active count of the produced ICs, their properties
and use, or by remote runtime disabling.
Our strategic goal is the development, implementa-
tion, and quantitative evaluation of symmetric mecha-
nisms and protocols for hardware protection procured
by untrusted synthesis, manufacturing, and/or testing fa-
cilities. The term symmetric emphasizes that both the
designers and the foundry will be protected by the new
methods. The symmetry is warranted by the unique vari-
abilities and the key exchange mechanism that is based
on the agreement of both parties for unlocking each IC.
Hardware metering is important from both commer-
cial and military point of views. For example, without
metering, a foundry can produce numerous copies of one
design without paying royalties, or, as another example,
the sensitive defense designs may become available to
adversaries. The passive hardware metering schemes
work by giving a unique ID to each chip [17, 20, 21]. The
ﬁrst ever active hardware metering method introduced in
this paper, provides not just mechanisms for detection of
illegal copies, but more importantly, ensures that no man-
ufactured IC can be used without the explicit consent of
the designer.
The proposed methods employ two generic security
mechanisms: (1) uniqueness of each IC due to manufac-
turing variability; and (2) structural manipulation of the
design speciﬁcation while preserving behavioral spec-
iﬁcation. While the ﬁrst mechanism has been already
proposed and used for unique IC identiﬁcation, the sec-
ond is novel. Even more novel is the integration of two
mechanisms, a task that requires a great deal of creativity
and formation of solutions to a spectrum of challenging
technology, synthesis and optimization problems, with a
greater impact than the sum of the powers of the individ-
ual techniques.
The integration to the functionality is performed by
interwinding the unique unclonable IDs for each chip
into the FSM of the design. The integrated control part
is denoted by BFSM, and is built by adding new states
and transitions to the original FSM, while preserving the
original functionality of the circuit. To bring the BFSM
into the functional initial (reset) state, knowledge of the
transition table is required. Since the designer is the
only one who knows this information, no one else can
generate a key with a ﬁnite amount of resources to un-
lock the IC. Using a combination of BFSM and newly
added black hole states, remote disabling of the ICs can
be made possible. We outline several possible attacks
against the introduced active hardware metering method
and provide mechanisms that neutralize the impact of
those attacks. For example, we show how addition of the
black hole states disable the random guessing attacks.
The remainder of the paper is as follows. After de-
scribing the background, ﬂow and the state-of-the-art in
the next two sections, we represent the active metering
method in Section 4.
In Section 5, we show a low-
overhead implementation and obfuscation of active me-
tering. Section 6 introduces potential attacks and the
countermeasures that needs to be taken to be resilient
against the attacks. We present experimental evaluation
of the prototype implementation on several standard de-
sign benchmarks in Section 7. We outline a number of
potential applications in Section 8 and conclude in Sec-
tion 9.
2 Preliminaries
In this section, we describe the necessary background re-
quired for understanding the active hardware metering
approach. The aim is to make the paper self-contained
for the readers who are not familiar with the hardware de-
sign and synthesis process. Next, we describe the global
ﬂow of the active hardware metering approach.
2.1 Background
Manufacturing variability (MV). The intense indus-
trial miniaturization of CMOS devices has been driven
by the quest for increasing computational speed and de-
vice density, while lowering cost-per-function, as pre-
dicted by Moore’s law. CMOS variations result in high
variability in the delay and the currents of the VLSI cir-
cuits. The variations might be temporal or spatial. The
temporal variations may occur across nanoseconds to
years [24]. Spatial variation is due to lateral and verti-
cal differences from intended polygon dimensions and
ﬁlm thicknesses . Spatial variation may be intra-die,
or inter-die [27]. Aside from device variations, the cir-
cuit response and its variability are correlated with cir-
cuit topology. We will utilize the spatial variations in our
beneﬁt, while we address the problem of alleviating tem-
poral variability. Bernstein et al. provide a classiﬁcation
of device variations (beyond 65nm) [4].
Design descriptions. We consider the case in which
the sequential design in question represents a fully syn-
chronous ﬂow and that the description of its functionality
from an input/output (I/O) perspective is publicly avail-
able. We assume that the functionality is fully ﬁxed, in
that the I/O behavior is fully speciﬁed. Therefore, we uti-
lize unique unclonable identiﬁcation to embed a distinct
mark in the functionality of each IC, without altering the
functionality in terms of the normal I/O behavior of the
circuit. Our technique is applicable to the case where the
piece of IP is available in structural HDL description, or
in form of a netlist that may or may not be technology
dependent. The description uniquely deﬁnes the sequen-
tial circuit’s behavior and the state transition graph (see
292
16th USENIX Security Symposium
USENIX Association
0
q1
q2
1
q0
01
1
q4
0
q3
0
Figure 1: Example of a STG with ﬁve states.The inputs
required for state-to-state transition are shown next to the
edges.
the next subsection) of the design.
During the design ﬂow, the user will take such a de-
scription and if required, will map it to a speciﬁc technol-
ogy. Typically, logic level optimizations such as retiming
are performed at this stage. Most often, the circuit is used
as a part of a more complex design.
Finite state machine (FSM). FSM is a discrete dynam-
ical structure that translates sequences of input vectors
into sequences of output vectors. FSM can represent any
regular sequential function. It appears in different forms,
e.g. case statements in VHDL and Verilog HDL. The
FSM is deﬁned by the tuple M=(Σ,∆,Q,q0,δ,λ), where
Σ 6= 0 and ∆ 6= 0 are a ﬁnite set of inputs and outputs
symbols respectively; Q={q0,q1,. . .}6= 0 is a ﬁnite set
of states while q0 is the ”reset” state; and the transition
function is denoted as δ(q, a) on the input a and the set
Q × Σ → Q, while the output function is denoted as λ
(q, a) on the set Q × Σ → ∆.
To represent the state transitions and output functions
of the FSM, we use the state transition graph (STG), with
nodes corresponding to states and edges deﬁning the in-
put/output conditions for a state-to-state transition. An
example STG is shown in Figure 1, where there are ﬁve
states {q0, q1, q2, q3, q4}, q0 is the reset state, and there
is a one-bit input controlling the state-to-state transitions.
In the remainder of the paper, we use the terms STG and
FSM interchangeably to refer to the control part of the
design.
2.2 Global ﬂow
As a motivational example for our problem, consider the
scenario in which a given hardware intellectual property
(IP) that belongs to its legitimate owner (Alice) is made
available to a fabrication house (Bob). Alice pays for and
demands NA ICs implementing its design. Bob, utilizes
the IP description to construct a mask that implements
the design. Bob employs the mask to make NA + NB
copies of the design, where the illegal NB copies do not
encounter much additional cost due to the availability of
Alice
Design 
Desc.
FSM (STG)
Extraction
BFSM 
(Added STG)
Key 
Calculation
Manufac.
Specs.
FF 
ValuesKey
Bob
Manufac.
Process
Locked 
IC
FFs 
Readout 
Unlock & 
activate
Figure 2: The global ﬂow of the active hardware meter-
ing approach.
the mask. Bob may sell the NB illegal copies and make
a lot of proﬁt with negligible additional overhead.
The novel active metering helps Alice to protect her
design against piracy by manipulating the STG of the
original design, with the objective of creating a locked
state, that is unique for each of the ICs manufactured
from the design with a very high probability. Upon man-
ufacturing by Bob, each device will be uniquely locked
(i.e., rendered non-functional), unless Alice is contacted
by Bob to provide the particular key to unlock the IC.
The scheme gives the full control over the manufactured
parts and operational devices from the IP to Alice.
The global ﬂow of the active hardware metering
method is shown in Figure 2. We now describe the ﬁg-
ure step by step. Alice takes the high level design de-
scription and synthesizes it to get the FSM of the design.
Next, she constructs the BFSM by adding extra states.
After that, she sends the detailed manufacturable design
speciﬁcations to Bob who makes the mask and manufac-
tures multiple ICs implementing the design. The manu-
factured ICs are locked (nonfunctional) at this stage. For
each IC, Bob reads out the values in its ﬂip ﬂops (FFs)
and sends the values to Alice. FF values can be read
nondestructively, and the values are unique for each IC.
Alice, knowing the BFSM structure, computes a speciﬁc
key that can be used as input to that IC for unlocking
it. The key is then sent back to Bob who utilizes it to
activate the IC.
USENIX Association
16th USENIX Security Symposium
293
3 Related work
We survey the related literature that has inﬂuenced and
inspired this work along four main lines of research:
variability-based ID generation, authentication and secu-
rity by variability-based IDs, intellectual property pro-
tection of VLSI designs, and invasive and noninvasive
hardware attacks.
A number of authors have proposed and implemented
the idea of addition of circuitry that exploits manufactur-
ing variability to generate unique random sequence (ID)
for each chip with the same mask [20, 21, 28]. The IDs
are unclonable and separated from the functionality and
do not provide a measure of trust, as they are easy to tam-
per and remove. Loftstrom et al. proposed a method for
mismatching the devices based on changing the threshold
of the circuits by placing the impurity of random dopant
atoms [20]. Maeda et al. proposed implementing the ran-
dom IDs on poly-crystalline silicon thin ﬁlm transistors
[21]. The drawback of the two described approaches is
that they both need specialized process technology, and
are easily detectable. Very recently, Su et al. have pro-
posed a technique to generate random IDs by using the
threshold mismatches of two NOR gates that are posi-
tively feeding back each other [28]. We will exploit their
technique for the random ID generation.
A team of researchers has explored the idea of using
variability-induced delays for authentication and security
[9, 19, 29]. They use Physically Unclonable Functions
(PUFs) that map a set of challenges to a set of responses,
based on an intractably complex physical system. PUFs
are unique, since process variations cause signiﬁcant de-
lay differences among ICs coming from the same mask.
For each IC, a database of challenge-response sets is
needed. Authentication occurs when the IC correctly
ﬁnds the output of one or more challenge inputs. PUF-
based methods solely utilize manufacturing variability
as their security mechanism. In contrast, our proposed
methods introduce a paradigm shift in hardware security
by adding new strong mechanisms: integration into cir-
cuit functionality at the behavioral synthesis level. Fur-
ther more, even though the active metering methods can
be utilized for authentication, its main target is address-
ing the hardware piracy problem.
Koushanfar et al. have introduced the ﬁrst hardware
metering scheme that gives unique IDs to each IC [16].
The scheme was to make a small part of the design pro-
grammable so that one could upload different control
paths post fabrication. They further described how to
generate numerous different instances of the same con-
trol path with the same hardware [17]. They have also
provided probabilistic proofs for the number of identical
copies and probability of fraud for the proposed meter-
ing schemes [16, 17]. All metering schemes were pas-
sive. Indeed, no active metering scheme has been pro-
posed to date. The prior work in trusted IC domain also
includes introduction of several watermarking schemes
that integrate watermarks to the functionality of the de-
sign at the behavioral synthesis level [11–13, 15, 22, 23,
30, 32]. Watermarking is a fundamentally different prob-
lem when compared to metering. It addresses the prob-
lem of uniquely identifying each IP and not identifying
each IC, so the existence of the same mask does not af-
fect the watermarking results. Fingerprinting for unique
identiﬁcation of programmable platforms has been pro-
posed [18], but the techniques are not applicable to ap-
plication speciﬁc designs (ASICs) due to the existence of
a unique mask. Qu and Potkonjak provide a comprehen-
sive survey of the watermarking, ﬁngerprinting and other
hardware intellectual property protection methods [23].
Even though many strong cryptographical techniques
their attack
are available in hardware and software,
resiliency has been only veriﬁed by classical crypto-
analysis methods. A class of attacks that is very chal-
lenging to address consists of physical techniques. Phys-
ical attacks take advantage of implementation-speciﬁc
characteristics of cryptographical devices to recover the
secret parameters. Koeune and Standaert provide a tu-
torial on physical security and side-channel effects [14].
The physical attacks are divided into invasive and non-
invasive [3]. Invasive attacks depackage the chip to get
direct access to its inside, e.g., probing. Noninvasive at-
tacks rely on outside measurements, e.g., from the pins
or by X-raying the chip, without physically tampering it.
There are multiple ways to attack an IC, including
probing, fault injection, timing, power analysis, and elec-
tromagnetic analysis. Invasive attacks are typically more
expensive than the noninvasive ones, since they need in-
dividual probing of each IC. Note that, according to the
well-established taxonomy of physical attacks, attacks
by the funded organizations (e.g., foundries) are the most
severe ones, since they have both the funding and tech-
nology resources [1–3].
4 Active hardware metering
In this section, we present the details of the active hard-
ware metering approach. Active metering is integrated
into the standard synthesis ﬂow, and is low overhead,
generalizable, and resilient against attacks. By gener-
alizable, we mean that the lock can be implemented on
structures that are common to all designs. By attack-
resiliency, we mean the cryptographic notion of a lock:
that an attacker that does not have inﬁnite computational
power should not be able to unlock the IC without the
knowledge of a key. To be generalizable, the method
proposed here aims at protecting the design by boost-
ing the design’s FSM (and creating a BFSM) common to