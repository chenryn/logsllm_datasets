    legend.loc           : best
    legend.frameon       : True     # if True, draw the legend on a background patch
    legend.framealpha    : None      # legend patch transparency
    #legend.facecolor     : inherit  # inherit from axes.facecolor; or color spec
    #legend.edgecolor     : 0.8      # background patch boundary color
    legend.fancybox      : False     # if True, use a rounded box for the
                                     # legend background, else a rectangle
    #legend.shadow        : False    # if True, give background a shadow effect
    legend.numpoints     : 1        # the number of marker points in the legend line
    legend.scatterpoints : 1        # number of scatter points
    legend.markerscale   : 1.0      # the relative size of legend markers vs. original
    legend.fontsize      : 8
    # Dimensions as fraction of fontsize:
    legend.borderpad     : 0.4      # border whitespace
    legend.labelspacing  : 0.3      # the vertical space between the legend entries
    legend.handlelength  : 1.2      # the length of the legend lines
    legend.handleheight  : 1.1      # the height of the legend handle
    legend.handletextpad : 0.3      # the space between the legend line and legend text
    legend.borderaxespad : 0.3      # the border between the axes and legend edge
    legend.columnspacing : 0.3      # column separation
    ### FIGURE
    # See http://matplotlib.org/api/figure_api.html#matplotlib.figure.Figure
    #figure.titlesize : large      # size of the figure title (Figure.suptitle())
    #figure.titleweight : normal   # weight of the figure title
    figure.figsize   : 6.299212598425196, 3.149606299212598
    														# figure size in inches
    														#	15 x 10 cm = 5.905511811023622, 3.937007874015748
    														# 16 x 10 cm = 6.299212598425196, 3.937007874015748
    														# 16 x 8 cm = 6.299212598425196, 3.149606299212598
    figure.dpi       : 96      # figure dots per inch
    #figure.facecolor : white   # figure facecolor; 0.75 is scalar gray
    #figure.edgecolor : white   # figure edgecolor
    #figure.autolayout : False  # When True, automatically adjust subplot
                                # parameters to make the plot fit the figure
    #figure.max_open_warning : 20  # The maximum number of figures to open through
                                   # the pyplot interface before emitting a warning.
                                   # If less than one this feature is disabled.
    # The figure subplot parameters.  All dimensions are a fraction of the
    #figure.subplot.left    : 0.125  # the left side of the subplots of the figure
    #figure.subplot.right   : 0.9    # the right side of the subplots of the figure
    #figure.subplot.bottom  : 0.11    # the bottom of the subplots of the figure
    #figure.subplot.top     : 0.88    # the top of the subplots of the figure
    #figure.subplot.wspace  : 0.2    # the amount of width reserved for blank space between subplots,
                                     # expressed as a fraction of the average axis width
    #figure.subplot.hspace  : 0.2    # the amount of height reserved for white space between subplots,
                                     # expressed as a fraction of the average axis height
    ### IMAGES
    image.aspect : auto             # equal | auto | a number
    #image.interpolation  : nearest   # see help(imshow) for options
    image.cmap   : viridis           # A colormap name, gray etc...
    #image.lut    : 256               # the size of the colormap lookup table
    #image.origin : upper             # lower | upper
    #image.resample  : True
    #image.composite_image : True     # When True, all the images on a set of axes are
                                      # combined into a single composite image before
                                      # saving a figure as a vector graphics file,
                                      # such as a PDF.
    ### CONTOUR PLOTS
    #contour.negative_linestyle : dashed # dashed | solid
    #contour.corner_mask        : True   # True | False | legacy
    ### ERRORBAR PLOTS
    errorbar.capsize : 1.5            # length of end cap on error bars in pixels
    ### HISTOGRAM PLOTS
    #hist.bins : 10                   # The default number of histogram bins.
                                      # If Numpy 1.11 or later is
                                      # installed, may also be `auto`
    ### SCATTER PLOTS
    #scatter.marker : o               # The default marker type for scatter plots.
    ### Agg rendering
    ### Warning: experimental, 2008/10/10
    #agg.path.chunksize : 0           # 0 to disable; values in the range
                                      # 10000 to 100000 can improve speed slightly
                                      # and prevent an Agg rendering failure
                                      # when plotting very large data sets,
                                      # especially if they are very gappy.
                                      # It may cause minor artifacts, though.
                                      # A value of 20000 is probably a good
                                      # starting point.
    ### SAVING FIGURES
    #path.simplify : True   # When True, simplify paths by removing "invisible"
                            # points to reduce file size and increase rendering
                            # speed
    #path.simplify_threshold : 0.1  # The threshold of similarity below which
                                    # vertices will be removed in the simplification
                                    # process
    #path.snap : True # When True, rectilinear axis-aligned paths will be snapped to
                      # the nearest pixel when certain criteria are met.  When False,
                      # paths will never be snapped.
    #path.sketch : None # May be none, or a 3-tuple of the form (scale, length,
                        # randomness).
                        # *scale* is the amplitude of the wiggle
                        # perpendicular to the line (in pixels).  *length*
                        # is the length of the wiggle along the line (in
                        # pixels).  *randomness* is the factor by which
                        # the length is randomly scaled.
    # the default savefig params can be different from the display params
    # e.g., you may want a higher resolution, or to make the figure
    # background white
    savefig.dpi         : 96   # figure dots per inch or 'figure'
    #savefig.facecolor   : white    # figure facecolor when saving
    #savefig.edgecolor   : white    # figure edgecolor when saving
    savefig.format      : pdf      # png, ps, pdf, svg
    #savefig.bbox        : standard # 'tight' or 'standard'.
                                    # 'tight' is incompatible with pipe-based animation
                                    # backends but will workd with temporary file based ones:
                                    # e.g. setting animation.writer to ffmpeg will not work,
                                    # use ffmpeg_file instead
    #savefig.pad_inches  : 0.1      # Padding to be used when bbox is set to 'tight'
    #savefig.jpeg_quality: 95       # when a jpeg is saved, the default quality parameter.
    #savefig.directory   : ~        # default directory in savefig dialog box,
                                    # leave empty to always use current working directory
    #savefig.transparent : False    # setting that controls whether figures are saved with a
                                    # transparent background by default
    # tk backend params
    #tk.window_focus   : False    # Maintain shell focus for TkAgg
    # ps backend params
    #ps.papersize      : letter   # auto, letter, legal, ledger, A0-A10, B0-B10
    #ps.useafm         : False    # use of afm fonts, results in small files
    #ps.usedistiller   : False    # can be: None, ghostscript or xpdf
                                              # Experimental: may produce smaller files.
                                              # xpdf intended for production of publication quality files,
                                              # but requires ghostscript, xpdf and ps2eps
    #ps.distiller.res  : 6000      # dpi
    #ps.fonttype       : 3         # Output Type 3 (Type3) or Type 42 (TrueType)
    # pdf backend params
    #pdf.compression   : 6 # integer from 0 to 9
                           # 0 disables compression (good for debugging)
    pdf.fonttype       : 42         # Output Type 3 (Type3) or Type 42 (TrueType)
    # svg backend params
    #svg.image_inline : True       # write raster image data directly into the svg file
    #svg.fonttype : 'path'         # How to handle SVG fonts:
    #    'none': Assume fonts are installed on the machine where the SVG will be viewed.
    #    'path': Embed characters as paths -- supported by most SVG renderers
    #    'svgfont': Embed characters as SVG fonts -- supported only by Chrome,
    #               Opera and Safari
    #svg.hashsalt : None           # if not None, use this string as hash salt
                                   # instead of uuid4
    # docstring params
    #docstring.hardcopy = False  # set this when you want to generate hardcopy docstring
    # Set the verbose flags.  This controls how much information
    # matplotlib gives you at runtime and where it goes.  The verbosity
    # levels are: silent, helpful, debug, debug-annoying.  Any level is
    # inclusive of all the levels below it.  If your setting is "debug",
    # you'll get all the debug and helpful messages.  When submitting
    # problems to the mailing-list, please set verbose to "helpful" or "debug"
    # and paste the output into your report.
    #
    # The "fileo" gives the destination for any calls to verbose.report.
    # These objects can a filename, or a filehandle like sys.stdout.
    #
    # You can override the rc default verbosity from the command line by
    # giving the flags --verbose-LEVEL where LEVEL is one of the legal
    # levels, e.g., --verbose-helpful.
    #
    # You can access the verbose instance in your code
    #   from matplotlib import verbose.
    #verbose.level  : silent      # one of silent, helpful, debug, debug-annoying
    #verbose.fileo  : sys.stdout  # a log filename, sys.stdout or sys.stderr
    # Event keys to interact with figures/plots via keyboard.
    # Customize these settings according to your needs.
    # Leave the field(s) empty if you don't need a key-map. (i.e., fullscreen : '')
    #keymap.fullscreen : f, ctrl+f       # toggling
    #keymap.home : h, r, home            # home or reset mnemonic
    #keymap.back : left, c, backspace    # forward / backward keys to enable
    #keymap.forward : right, v           #   left handed quick navigation
    #keymap.pan : p                      # pan mnemonic
    #keymap.zoom : o                     # zoom mnemonic
    #keymap.save : s                     # saving current figure
    #keymap.quit : ctrl+w, cmd+w         # close the current figure
    #keymap.grid : g                     # switching on/off a grid in current axes
    #keymap.yscale : l                   # toggle scaling of y-axes ('log'/'linear')
    #keymap.xscale : L, k                # toggle scaling of x-axes ('log'/'linear')
    #keymap.all_axes : a                 # enable all axes
    # Control location of examples data files
    #examples.directory : ''   # directory to look in for custom installation
    ###ANIMATION settings
    #animation.html : 'none'           # How to display the animation as HTML in
                                       # the IPython notebook. 'html5' uses
                                       # HTML5 video tag.
    #animation.writer : ffmpeg         # MovieWriter 'backend' to use
    #animation.codec : h264            # Codec to use for writing movie
    #animation.bitrate: -1             # Controls size/quality tradeoff for movie.
                                       # -1 implies let utility auto-determine
    #animation.frame_format: 'png'     # Controls frame format used by temp files
    #animation.ffmpeg_path: 'ffmpeg'   # Path to ffmpeg binary. Without full path
                                       # $PATH is searched
    #animation.ffmpeg_args: ''         # Additional arguments to pass to ffmpeg
    #animation.avconv_path: 'avconv'   # Path to avconv binary. Without full path
                                       # $PATH is searched
    #animation.avconv_args: ''         # Additional arguments to pass to avconv
    #animation.mencoder_path: 'mencoder'
                                       # Path to mencoder binary. Without full path
                                       # $PATH is searched
    #animation.mencoder_args: ''       # Additional arguments to pass to mencoder
    #animation.convert_path: 'convert' # Path to ImageMagick's convert binary.
                                       # On Windows use the full path since convert
                                       # is also the name of a system tool.
    pgf.texsystem: lualatex
    pgf.rcfonts: false
    pgf.preamble: \usepackage{mycommands}