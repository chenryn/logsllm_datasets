### Analysis of ISC Report Summaries

We analyzed the summary reports from the Internet Storm Center (ISC) for several scans, as detailed in Table 4. These summaries, compiled daily for each service (e.g., HTTP), include the number of scanned targets, the number of scanning hosts targeting that service, and the ratio of TCP packets. Our primary focus is on the first metric, as all reports related to our 24-hour scans should be captured in a single data point.

We downloaded summary data from the ISC for a one-month period surrounding a sample of our HTTP, EPMAP, DNS, and ECHO scans (i.e., 15 days before and after). The results are plotted in Figure 5, where the x-axis represents the days within the 30-day window, and the highlighted points indicate the days when our scanner was actively probing the specific port. Notably, our HTTP scan (part a) and EPMAP scan (part b) occurred on days when the ISC experienced approximately one-third of its peak daily reports (i.e., 27K compared to 80-90K), which is still a significant number. The figure also shows that EPMAP consistently stands out with a high amount of daily traffic.

### Figure 5: ISC Reports with Our Scans Marked

In contrast, parts (c) and (d) for DNS and ECHO show that our IRLscanner significantly increased report levels above those of surrounding days. In the case of ECHO, we produced an extremely anomalous event, raising the total from almost zero to 50K. This activity raised concerns among network administrators, who suspected a new exploit or virus outbreak. Consequently, one of the traffic monitors at ISC wrote an explanatory blog post to address the community's concerns.

Given the substantial background noise from multiple scanning sources (whose totals are also available from the ISC) in parts (a) and (b) of Figure 5, we hypothesize that network administrators are more likely to react to traffic that clearly stands out (i.e., has a high signal-to-noise ratio) rather than to scans on sensitive ports. This is supported by the fact that attack-reconnaissance port 135 generated the least number of complaints, while the ECHO port, which poses little real threat due to the lack of hosts offering this service and heavy firewall filtering, produced an unusually strong reaction. This relationship, where higher background scan traffic seems to imply fewer complaints, may benefit researchers considering scans on sensitive or popular ports in the future.

### Enumerating Contributors

It is well-documented [6], [48] that contributors to the ISC and other firewall log correlation systems are vulnerable to losing their anonymity due to the nearly real-time public display of firewall reports, with only the destination IP address omitted. Several techniques for correlating reports with targeted subnets (known as contributor enumeration) have been proposed [6]. However, these techniques require tens of billions of packets, allow for false positives, and take multiple days to complete full enumeration.

Using our high-performance scanner, which can locally use multiple IP addresses, a simpler attack can be executed by exploiting the source port, destination port, and source IP address reported in detailed ISC logs. Probing each address in BGP set B with a unique combination of source/destination ports and source IP eliminates the possibility of false positives and the need to send extra packets beyond those in B. This can be achieved for the current 2.1B hosts using 128 source IPs by rotating through all 64K source ports and roughly 250 destination ports, selected from the most-scanned lists to minimize suspicion. However, removing the source port from the public report can render this technique largely ineffective.

### ACK Scans

Many network administrators rely on firewall log analyzers like psad [44] to separate scan traffic from innocuous packets dropped by the firewall. During our analysis, we discovered that many such tools ignore ACK packets, suggesting that network administrators often do not consider them particularly dangerous. To leverage this, we propose a scan technique for cases where finding the majority of hosts in open set O, while significantly reducing IDS detection, is beneficial (e.g., for rarely scanned ports).

The first phase of this technique involves a simple ACK scan to every host in B, effectively discovering the subset of hosts not heavily protected by stateful firewalls. For every RST received, we verify that it has not been previously probed using a hash table and then immediately send a SYN packet to determine if the service is open. By targeting only hosts that previously responded, this type of scan reduces the SYN footprint by 94% for HTTP. A single test measurement (HTTPAS in Table 4) discovered 31.7M of the 44M total responsive hosts, requiring only 125M SYN packets. ISC data shows only 4,746 reports for our IPs during HTTPAS compared to 29,869 reports for HTTP2, which used the same T and m. This represents an 84% decrease in the perceived intrusiveness of the scan.

### DNS Lookups

We now turn to the last form of feedback considered in this paper. While whois lookups seem to be the predominant form of reconnaissance performed by remote network administrators and individuals when they detect a scan, many specialized tools augment IDS reports and firewall logs with DNS lookups on offending IPs to provide more information on the scanning host to the user. For large networks, this functionality should be disabled to prevent remote hosts from causing a DoS by initiating billions of useless DNS lookups. However, many personal firewalls and small subnets implement some form of it.

We tested the frequency of these additional lookups by collecting all incoming requests for IP addresses and hostnames at our locally controlled authoritative DNS server. To ensure that each request initiated by a remote entity contacted our nameserver, we set the DNS TTL to zero for both reverse and forward lookups on scanner IPs/hostnames. After doing so, no RFC-compliant nameserver should maintain our records in their cache.

The results of this collection process for three HTTP scans are listed in Table 11, which shows the number of reverse lookups for the IP addresses themselves and forward lookups on the names returned by those queries. We ensured that these IP addresses were used solely for scanning and their names were not publicized beyond the project website. Therefore, forward lookups are almost certainly due to the common verification technique of determining the consistency between the forward and reverse responses. While the number of requests slightly declined for each subsequent scan, the number of unique servers in each dataset increased. The decline in lookup rates can be attributed to random noise, long-term caching at non-compliant DNS servers, and users growing tired of looking up our IPs.

Performing DNS queries on scanner IPs potentially reveals the location of the IDS tool unless steps are taken to increase anonymity (e.g., using a DNS forwarding service at a distant location). The three scans in Table 11 identified 64K unique DNS servers, with 35K present in each dataset. Further analysis of this data is deferred to future work.

### Conclusion

In this paper, we designed novel algorithms for maximally polite Internet scanning and documented our experience through extensive service-discovery statistics based on our implementation of the proposed methods. Future work will involve exploring methods for reducing B to avoid scanning unproductive networks, expanding RLCG/RR to provide optimal spacing for multiple destination ports (i.e., in hybrid vertical/horizontal scanning), and conducting more in-depth analysis of scan data.

### Acknowledgment

We are grateful to the Network Security team at Texas A&M University for their helpful discussions and professional handling of network administrator complaints.

### References

[References listed as in the original text]

---

This revised version aims to improve clarity, coherence, and professionalism while maintaining the technical details and structure of the original text.