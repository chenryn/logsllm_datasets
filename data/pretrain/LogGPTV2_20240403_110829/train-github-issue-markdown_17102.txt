I have encountered a consistent segmentation fault in the `Nettle.jl` package on the `master` branch. This issue occurs across all three platforms (Windows, macOS, and Linux).

The error is triggered during the execution of the test file `hash_tests.jl` at line 4. The backtrace indicates that the problem originates from the following stack frames:

- `jl_typemap_level_assoc_exact` at `/Users/osx/buildbot/slave/package_osx64/build/src/typemap.c:813`
- `jl_typemap_assoc_exact` at `/Users/osx/buildbot/slave/package_osx64/build/src/./julia_internal.h:876` (inlined)
- `jl_lookup_generic_` at `/Users/osx/buildbot/slave/package_osx64/build/src/gf.c:2112`
- `jl_apply_generic` at `/Users/osx/buildbot/slave/package_osx64/build/src/gf.c:2164`
- `Type` at `/Users/travis/.julia/v0.7/Nettle/src/hash.jl:23`
- `digest` at `/Users/travis/.julia/v0.7/Nettle/src/hash.jl:44`

The lowest "user code" stack frame appears to be in `hash.jl:23`, which contains the following code:

```julia
ccall(hash_type.init, Cvoid, (Ptr{Cvoid},), state)
```

This suggests that the segmentation fault may be related to the `ccall` invocation or the underlying C function it calls. Further investigation is needed to determine the exact cause and potential fixes for this issue.