### 生成 Mifare Classic 和 Hitag2 密钥流

#### 选择 Hitag2 加密及其过滤函数
- **输入**: 秘密初始密钥 (uid^nT, nR)
- **输出**: 密钥流: ks1, ks2, ks3

### 新的安全议题
#### 实验与分析方法
1. **纯代数攻击**
   - 64位连续密钥流
   - 64位连续密钥流 & α33 HELP bits
2. **代数攻击 + 差分攻击**
   - 代数 & 差分方程式
   - 代数 & 差分方程式 & α33 HELP bits

### 纯代数攻击分析
#### Grain of Salt 工具
- **功能**: 生成 Crypto1 和 Hitag2 的 CNF 文件
- **示例**:
  - **Crypto1**: 解决时间 2m43.315s
  - **Hitag2**: 不适用 (NA)

#### Mifare Classic 协议
- **CNF 文件规则**:
  1. 秘密密钥代数 = 1 ~ 48
  2. LFSR
  3. 过滤函数
  4. HELP bits: uid^nt
  5. HELP bits: {nR}
  6. HELP bits: ks2, ks3 (64位)

- **实验方法**: 每个项目进行3到10次数据测试，使用平均值和标准差来获取代表性数据。
- **公式**:
  - 平均值
  - 标准差

#### 实验结果
- **My cnf 1**:
  - **Crypto1**: 解决时间 2m48.226s
  - **Hitag2**: 不适用 (NA)
  - 给定 ks2, ks3 (64位): Hitag2 需要 37000 多分钟... unsat

- **α32 状态 vs α33 状态**
  - **条件与实验**: 添加一些 α33 状态值作为 HELP bits，观察是否有助于加速 Hitag2。

- **My cnf 2**:
  - **Crypto1**: 解决时间 0m34.12s
  - **Hitag2**: 解决时间 10m46.935s

### 代数差分攻击
#### 新的 YY 卡
1. **获取特殊 traces**:
   - Nt 和 Nr 值不同
2. **定义差分方程式**
3. **定义生成 CNF 的条件**

#### 获取特殊的 trace
- 同一张卡的 uid 固定，nT 可以直接影响 state 状态。nR 明文无法直接控制，因此差分在 nT 的第一个 bit 产生。当 nT 使用完时，两条 trace 的差分为 0x000100000000。之后，nR 无法精准控制，而 state 保持 fed bit 持续为 0，必须从 keystream 来挑选。若 ks = ks'，则可认定 state 仅有一个 bit 有差分。
- **特殊 nT 差分值**:
  - **Crypto1**: 0x87441585
  - **Hitag2**: 0xe7002260

#### 差分方程式的产生
- 为了保持 state 仅一个 bit 有差分
- **公式**:
  - \( \frac{dfc}{dx_{15}} = \frac{dfc}{dfa} \cdot \frac{dfa}{dx_{15}} \)
  - \( fc(state) = fc(state + differential) \)
  - \( fc(state) - fc(state + differential) = 0 \)
  - **好处**: 减少一个变量

#### 生成 CNF 的条件
- **CNF 文件规则**:
  1. 秘密密钥代数 = 1 ~ 48
  2. LFSR
  3. 过滤函数
  4. HELP bits: uid^nt
  5. HELP bits: {nR}
  6. 差分方程式: crypto1 * 4 条, Hitag2 * 8 条

#### 实验结果分析
- **最佳表现**: 使用约 25 到 35 条 traces
- **My cnf 2**:
  - **Crypto1**: 解决时间 300 分钟
  - **Hitag2**: 解决时间 大约 1000 秒 ≈ 16.6 分钟

#### HELP α33 bits
- **条件与实验**: 添加 α33 的 HELP bits，观察结果。
- **有效 traces 数量**: 20 条和 30 条 traces
- **逐渐减少 α33 HELP bits (从 48 到 1)**

### 结论
1. **代数差分攻击抵抗能力**: Hitag2 > Crypto1
2. **Filter Function input 的 Hamming 距离**: 13，但解的速度并没有增加
3. **代数差分攻击的影响**: 对 Stream Cipher 和 Mifare Classic 协议有影响
4. **建议**: 停止使用 Mifare Classic，并改用其他架构设计，以免造成更大的安全损失

### 附加内容
#### 非 NIST 密码
- Lavabit, TrueCrypt, SilentMail 等
- 关闭所有好的（难破解的）服务或公司？
- NIST 和 NSA 之间的联系？RSA 和 NSA？
- ECC？
- AES？
- SHA-1？
- OpenSSL Heartbleed？

#### 未来的新世界
- 准备迎接新世界？
- 政府无法再审查？
- 准备迎接密码学末日？
- 离散对数问题 (DLP) 比我们想象的更容易？
- Eurocrypt2014: 有限域中离散对数的启发式准多项式算法
- ECC 是否安全？

### 引用
- “我们必须知道，我们将知道。” —— David Hilbert

谢谢聆听！
Q&A