04Dec201317:30127
poweredoff(0)
Graph
Uptme
00:00:00
Graph
Balloonedmemor
0B
Graph
04Dec201317:30:15
80
Graph
Q.B
Grah
04Det201317:30:20
GB
Sranh
04De201317:30:22
4GB
Graoh
图11-57
查看图形，如图11-58所示。
1h2h2hA
1.5 G6
1466
13G6
12GB
11G8
1.0G6
906.0
1a12B191018144
图11-58
有关Hadoop监控的内容，请参考项目地址https://code.google.com/p/mikoomi/,
读者可以导入模板进行相关设置。
更多的监控模板和方法请读者参考以下链接。
https://github.com/itnihao/zabbix-book/tree/master/1l-chapter
https://www.zabbix.org/wiki/Zabbix_Templates
279
---
## Page 297
第3部分
高级部分
---
## Page 298
第12章
性能优化
在Zabbix的使用过程中，随着监控对象的增多，Zabbix-Server会面临非常大
的压力，从而让Zabbix的管理人员面临管理的难题。因此，本章从性能优化方面
给出了一些具体解决方案。
12.1
Zabbix性能优化概述
造成Zabbix性能下降的因素如表12-1所示。
表12-1
因
素
慢
快
数据库大小
巨大
适应内存大小
触发器表达式的复杂程度
MinO、maxO、avgO
Last()、nodata()
数据收集方法
轮询（SNMP、无代理、Passive代理）
Trapping（Active代理）
数据类型
文本、字符串
数值
前端用户数量
多
少
主机数量也是影响性能的主要因素，如表12-2所示。
表12-2
主机数量（台）
性能（NVPS）
10
10
每个主机有60个Items
100
100
每分钟更新一次
1000
1000
10
100
每个主机有600个Items
100
1000
每分钟更新一次
1000
10000
Zabbix性能低下的表现如下。
·Zabbix队列中有太多被延迟的Item，通过菜单项查看：Administration→Queue
查看。
---
## Page 299
第12章性能优化
·Zabbix绘图中经常出现断图，一些Item没有数据。
●带有nodata（）函数的触发器出现False。
·前端页面无响应，或者响应很慢。
解决方案如下。
·不要使用默认的模板，应定制自己的模板。
·数据库调优。
·架构优化，如使用分布式，各服务器功能独立。
·Items、Trigger调优。
·更换更好的硬件。
12.2
Zabbix性能优化的依据
对 Zabbix-Sever 本身进行监控，选择Zabbix-Server 的监控模板，如图12-1
所示。
Hostlist Host:Zabbix server Mcnitered Z Aoplications(12)Items (97)Tniggers（48）
HostTemplatesipMIMacrosHost inventory
Linked templates
Name
Action
Template AppZabbix ServerUnlink Unlink and clear
TemplateOSLinux
Unink Unlink and clear
Add
Clotie
Fullclon
Delete
图12-1
看到如图12-2所示的Zabbix-Server内部监控情况。
igurationoftriggersCustom slidesCustomgraphs
al
HostZahhixserver
Feb 16th,2
Diskspaceusage
Network traficon eth?
Swapusage
abbix
datagatheningpr
Zabb
图12-2
关于Cache的性能监控，如图12-3所示。
监控的指标是剩余的容量，如果剩余容量已非常小，可以通过调大zabbix
server.conf中的缓存参数，直到这里的监控数据有剩余量为止。
283
---
## Page 300
Zabbix企业级分布式监控系统
Zabbix-Server性能的监控有以下两个。
·每秒处理的数量。
·等待的队列数量。
Zabbixserver:Zabbixcache usage,%free(1h)
80%
60%
[avg)
99.98 %
free
99.98%
99.98
T%efree
avg
9929
%free
Tngger
图12-3
如图12-4是Zabbix-Server的性能监控图
图12-4
查看等待的队列，如图12-5所示。
my-zabbix-n
DIA
onIUsersM
History:Custom
m slides Custom graphsConfiguration of host groups Configuration of hosts 
tomgraphs
QUEUEOFITENSTO BEUPDATED
Items
5seconds
10seconds
30seconds
1minute
5minutes
Zabbix agent
0
0
D
Zabbix agent(active)
0
。
Simple check
0
0
0
0
SNMPv2agent
0
0
0
0
SNMPV3agent
0
0
0
0
Zabbix intemal
Zabbix aggregate
。
0
0
0
Extemal check
Database monitor
0
0
0
IPMIagent
0
SSHagent
0
0
10
TELNETagent
0
JMXagent
0
0
Calculated
0
图12-5
284
---
## Page 301
第12章性能优化
查看详情，可以看到具体的Items，如图12-6所示。
my-zabbix-monitor
DN
Users
QUEUEOFTTENSTOBE UPDATED
Details
Scheduledcheck
Delayedby
Host
Name
devops.itnihao.com
Agent ping
Feb16th,201403:17:47PM2h38m32s
beijing-test-001
Total.memory
Feb 16th,2014 03:17:47PM 2h38m 325
Zabbixserver1
Total memory
Feb16th,201404:16:47PM1h39m32s
devops.itnihao.com
Version of zabbix_agent（d)rur
Hostna
图12-6
等待的队列越多，说明Zabbix-Server性能越差。
NVPS的计算语句如下。
mySql> SELECT SUM(1.O/i.delay) AS gps FROM items i,hosts h WHERE
i.status='ITEM STATUS ACTIVE' AND i.hostid=h.hostid AND h.status='HO
STSTATUS MONITORED'；
Iaps
+一
+
153.243891
NVPS的计算是用PHP语言实现的，文件位于include/func.inc.php的第2509
行（不同的版本，位置可能不相同），如图12-7所示。
// comments:!!Don't forget sync code withC!!!
SELECT SUM(1.0/1,delay)ASqpsS
FROMit
stsh'
return Sstatus;
图12-7
12.3
配置文件的参数优化
在Zabbix-Server中，关于配置文件的参数调整，可以配置的内容如下。
·进程的数量。
·缓存的大小。
·超时时间。
例如，对参数进行如下调整。
StartPollers=160
StartPollersUnreacheable=80
StartTrappers=20
StartPingers=100
StartDiscoverers=120
285
---
## Page 302
Zabbix企业级分布式监控系统
CacheSize=1024M
StartDBSyncers=16
HistoryCacheSize=1024M
TrendCacheSize=1024M
HistoryTextCacheSize=512M
对这些参数进行合理的设置会使Zabbix处于正常的工作状态。
例如，开启Discovery，在设置数量多的情况下，默认参数通常不能满足需求，
会触发设置的阀值，如图12-8所示。
Host
ensst
Lastchange
Age
InfoAck Actions
Zabbix serverZabbix discoverer processesmore than75%busy19Dec 201311:01:353h54m26s
No
1 of 1issueisshown
图12-8
提示发现进程繁忙时，需要修改/etc/zabbix/zabbix_server.conf，如图12-9所示。
Mandatory:5n
Defaulta
startDiscoverers=1
图12-9
设置StartDiscoverers=20，或者更高，最大值是250，根据实际需要增大值，
建议设置100左右，值越大，消耗的CPU和内存越多。
修改配置文件后，需要重启Zabbix-Server的进程，如图12-10所示。
[rootaaawej]#/etc/init.d/zabbix_serverrestart
starting zabbix_server:*
图12-10
对于内存大小的设置，其和共享内存的大小是有关系的，参考如下网址的内容。
https://www.zabbix.org/wiki/How_to/configure_shared_memory
另一个需要注意的问题是，在自动发现规则中，运行时间也有关系，在network
discovery和lowleveldiscovery中，默认的自动发现时间Delay（insec）是3600s，
如果设置得太长，则自动发现不能及时运行发现规则，但在实际环境中，希望在
更短的时间内运行发现规则，能够及时添加主机，能够发现添加硬盘和网卡的监
控项，将这个时间设置得更短，建议在发现规则运行完毕后将此值设置为更大的
值，如3600等，如图12-11所示，或者直接将自动化发现功能关闭，避免资源的
浪费。
286
---
## Page 303
第12章性能优化
Name Localnetwork
AxoJdONAxOJdAqAaAQ3SO
IPrange192.168.1.1-255
Delay(in sec)
3600
Checks.
Zabbix agent
New
Enabled
图12-11
对于其他配置参数，请读者依此类推，根据实际需要调整即可。
12.4Zabbix的架构优化
Zabbix的架构可以分为以下三种模式。
·Server/Agent模式。
·Server/Node/Agent模式。
·Serve/Proxy/Agent模式。
通过采用分布式模式，可以大大降低Server（服务器）的负担，从而大大提
升单台Server（服务器）的性能。关于Proxy和Node模式的内容，请读者参考相
关章节。
12.5Items工作模式及Trigger的优化
Zabbix中的Items默认工作于被动模式，可以通过设置主动模式来提高Server
的性能。主动模式的配置见8.3.2节。
Trigger中正则表达式函数last()、nodataO的速度是最快的，minO、manx()、
avg(是最慢的，尽量使用速度快的函数。
在Trigger的配置中，很可能出现由于一个函数的逻辑错误导致数据库查询较
慢的现象。
12.6Zabbix的数据库优化
Zabbix数据库的优化可分为以下几部分。
287
---
## Page 304
Zabbix企业级分布式监控系统
●对数据库软件本身的优化。采用更高性能的数据库版本，如选择Percona，
选用最新版本的MySQL。
·对数据库本身的参数进行调优配置。
·对Zabbix数据库结构进行优化，如对history.*、trends.*等表进行分表操作，
会最大程度地提高Zabbix数据库的性能。请读者可参考第3章的分表内容。
注意，在进行分表操作的时候，需要关闭housekeeper。
在zabbix_server.conf中的LogSlowQueries参数是关于慢查询的设置，超过
1000ms的查询被记录到日志中，如将其值设置为1000。
LogSlowQueries=1000
开启这个参数可以对慢查询继续记录，方便调优配置。
·对数据库操作系统的优化。
下面给一个MySQL参数配置的例子，仅供读者参考使用（在32GB内存的
服务器中）。
.// (1#)dx#
[client]
= 3306
socket
=/var/lib/mysql/mysql.sock
[mysqld]
port
=3306
socket
=/var/lib/mysql/mysql.sock
skip-external-locking
character-set-server=utf8
slow_query_log
slow_query_log_file = /var/log/mysql/slowquery.log
long_query_time = 2
log-error = /var/log/mysql/log-error.log
skip-name-resolve
max_connections = 5000
back_1og = 300
table-cache=4096
max_allowed packet
=32M
max-heap-table-size= 128M
key_buffer_size
=128M
sort-buffer-size
=16M
join-buffer-size= 16M
net_buffer _length  = 8K
read buffer size
=256K
read_rnd_buffer_size = 512K
myisam_sort_buffer_size = 8M
thread-cache-size
=16
thread-concurrency = 24
query-cache-size
=4096M
query-cache-limit:= 4M
tmp-table-size
=128M
log_warnings
innodb_file_per_table=1
288
---
## Page 305
第12章
性能优化
innodb file io threads=4
innodb_open_files=2048
innodb_buffer_pool_size=10G
innodb_additional_mem_pool=16M
innodb_thread_concurrency= 16
innodb_max_dirty_pages_pct = 90
log-bin=mysql-bin
binlog_format=mixed
server-id
=1
[mysqldump]