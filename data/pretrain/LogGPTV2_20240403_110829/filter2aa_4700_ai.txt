  return pvVar3;
}
// Library Function - Single Match
// Name: ___vcrt_initialize_ptd
// Library: Visual Studio 2015 Release
uint ___vcrt_initialize_ptd(void)
{
  uint uVar1;
  int iVar2;
  uVar1 = FUN_0040341c(FUN_00403174);
  DAT_0041e020 = uVar1;
  if (uVar1 != 0xffffffff) {
    DAT_0041e020 = uVar1;
    iVar2 = FUN_004034cd(uVar1,&DAT_0041ec7c);
    if (iVar2 != 0) {
      return CONCAT31((int3)((uint)iVar2 >> 8),1);
    }
    uVar1 = ___vcrt_uninitialize_ptd();
  }
  return uVar1 & 0xffffff00;
}
// Library Function - Single Match
// Name: ___vcrt_uninitialize_ptd
// Library: Visual Studio 2015 Release
undefined4 ___vcrt_uninitialize_ptd(void)
{
  DWORD DVar1;
  DVar1 = DAT_0041e020;
  if (DAT_0041e020 != 0xffffffff) {
    DVar1 = FUN_00403457(DAT_0041e020);
    DAT_0041e020 = 0xffffffff;
  }
  return CONCAT31((int3)(DVar1 >> 8),1);
}
// Library Function - Single Match
// Name: ___vcrt_initialize_locks
// Library: Visual Studio 2015 Release
uint ___vcrt_initialize_locks(void)
{
  int iVar1;
  uint uVar2;
  LPCRITICAL_SECTION p_Var3;
  p_Var3 = (LPCRITICAL_SECTION)&DAT_0041eca4;
  uVar2 = 0;
  do {
    iVar1 = FUN_0040350b(p_Var3,4000,0);
    if (iVar1 == 0) {
      uVar2 = ___vcrt_uninitialize_locks();
      return uVar2 & 0xffffff00;
    }
    DAT_0041ecbc = DAT_0041ecbc + 1;
    uVar2 = uVar2 + 0x18;
    p_Var3 = p_Var3 + 1;
  } while (uVar2 > 8),1);
}
// Library Function - Single Match
// Name: ___vcrt_uninitialize_locks
// Library: Visual Studio 2015 Release
undefined4 ___vcrt_uninitialize_locks(void)
{
  undefined4 in_EAX;
  undefined4 extraout_EAX;
  int iVar1;
  LPCRITICAL_SECTION lpCriticalSection;
  if (DAT_0041ecbc != 0) {
    lpCriticalSection = (LPCRITICAL_SECTION)(&DAT_0041ec8c + DAT_0041ecbc * 0x18);
    iVar1 = DAT_0041ecbc;
    do {
      DeleteCriticalSection(lpCriticalSection);
      DAT_0041ecbc = DAT_0041ecbc + -1;
      lpCriticalSection = (LPCRITICAL_SECTION)&lpCriticalSection[-1].LockSemaphore;
      iVar1 = iVar1 + -1;
      in_EAX = extraout_EAX;
    } while (iVar1 != 0);
  }
  return CONCAT31((int3)((uint)in_EAX >> 8),1);
}
HMODULE __cdecl FUN_004032e9(int *param_1,int *param_2)
{
  HMODULE *ppHVar1;
  LPCWSTR lpLibFileName;
  HMODULE pHVar2;
  HMODULE hLibModule;
  DWORD DVar3;
  int iVar4;
  do {
    if (param_1 == param_2) {
      return (HMODULE)0x0;
    }
    ppHVar1 = &hLibModule_0041ecc0 + *param_1;
    hLibModule = *ppHVar1;
    if (hLibModule == (HMODULE)0x0) {
      lpLibFileName = (LPCWSTR)(&PTR_u_api_ms_win_core_fibers_l1_1_1_004171b8)[*param_1];
      hLibModule = LoadLibraryExW(lpLibFileName,(HANDLE)0x0,0x800);
      if (hLibModule == (HMODULE)0x0) {
        DVar3 = GetLastError();
        if (((DVar3 == 0x57) && (iVar4 = _wcsncmp(lpLibFileName,L"api-ms-",7), iVar4 != 0)) &&
           (iVar4 = _wcsncmp(lpLibFileName,L"ext-ms-",7), iVar4 != 0)) {
          hLibModule = LoadLibraryExW(lpLibFileName,(HANDLE)0x0,0);
        }
        else {
          hLibModule = (HMODULE)0x0;
        }
        if (hLibModule == (HMODULE)0x0) {
          *ppHVar1 = (HMODULE)0xffffffff;
          goto LAB_00403396;
        }
      }
      pHVar2 = *ppHVar1;
      *ppHVar1 = hLibModule;
      if (pHVar2 != (HMODULE)0x0) {
        FreeLibrary(hLibModule);
      }
LAB_00403392:
      if (hLibModule != (HMODULE)0x0) {
        return hLibModule;
      }
    }
    else {
      if (hLibModule != (HMODULE)0xffffffff) goto LAB_00403392;
    }
LAB_00403396:
    param_1 = param_1 + 1;
  } while( true );
}
FARPROC __cdecl FUN_004033ad(int param_1,LPCSTR param_2,int *param_3,int *param_4)
{
  uint *puVar1;
  FARPROC pFVar2;
  HMODULE hModule;
  uint uVar3;
  byte bVar4;
  puVar1 = &DAT_0041eccc + param_1;
  bVar4 = (byte)DAT_0041e004 & 0x1f;
  pFVar2 = (FARPROC)((DAT_0041e004 ^ *puVar1) >> bVar4 | (DAT_0041e004 ^ *puVar1) << 0x20 - bVar4);
  if (pFVar2 == (FARPROC)0xffffffff) {
    pFVar2 = (FARPROC)0x0;
  }
  else {
    if (pFVar2 == (FARPROC)0x0) {
      hModule = FUN_004032e9(param_3,param_4);
      if ((hModule == (HMODULE)0x0) ||
         (pFVar2 = GetProcAddress(hModule,param_2), pFVar2 == (FARPROC)0x0)) {
        uVar3 = FUN_004022fb(0xffffffff);
        *puVar1 = uVar3;
        pFVar2 = (FARPROC)0x0;
      }
      else {
        uVar3 = FUN_004022fb((uint)pFVar2);
        *puVar1 = uVar3;
      }
    }
  }
  return pFVar2;
}
void __cdecl FUN_0040341c(undefined4 param_1)
{
  FARPROC pFVar1;
  pFVar1 = FUN_004033ad(0,"FlsAlloc",(int *)&DAT_00417270,(int *)"FlsAlloc");
  if (pFVar1 != (FARPROC)0x0) {
    _guard_check_icall();
    (*pFVar1)(param_1);
    return;
  }
                    // WARNING: Could not recover jumptable at 0x00403451. Too many branches
                    // WARNING: Treating indirect jump as call
  TlsAlloc();
  return;
}
void __cdecl FUN_00403457(DWORD param_1)
{
  FARPROC pFVar1;
  pFVar1 = FUN_004033ad(1,"FlsFree",(int *)&DAT_00417284,(int *)"FlsFree");
  if (pFVar1 == (FARPROC)0x0) {
    TlsFree(param_1);
  }
  else {
    _guard_check_icall();
    (*pFVar1)();
  }
  return;
}
void __cdecl FUN_00403492(DWORD param_1)
{
  FARPROC pFVar1;
  pFVar1 = FUN_004033ad(2,"FlsGetValue",(int *)&DAT_00417294,(int *)"FlsGetValue");
  if (pFVar1 == (FARPROC)0x0) {
    TlsGetValue(param_1);
  }
  else {
    _guard_check_icall();
    (*pFVar1)();
  }
  return;
}
void __cdecl FUN_004034cd(DWORD param_1,LPVOID param_2)
{
  FARPROC pFVar1;
  pFVar1 = FUN_004033ad(3,"FlsSetValue",(int *)&DAT_004172a8,(int *)"FlsSetValue");
  if (pFVar1 == (FARPROC)0x0) {
    TlsSetValue(param_1,param_2);
  }
  else {
    _guard_check_icall();
    (*pFVar1)();
  }
  return;
}
void __cdecl FUN_0040350b(LPCRITICAL_SECTION param_1,DWORD param_2,undefined4 param_3)
{
  FARPROC pFVar1;
  pFVar1 = FUN_004033ad(4,"InitializeCriticalSectionEx",(int *)&DAT_004172bc,
                        (int *)"InitializeCriticalSectionEx");
  if (pFVar1 == (FARPROC)0x0) {
    InitializeCriticalSectionAndSpinCount(param_1,param_2);
  }
  else {
    _guard_check_icall();
    (*pFVar1)(param_1,param_2,param_3);
  }
  return;
}
void FUN_00403552(void)
{
  undefined4 uVar1;
  undefined4 *puVar2;
  int iVar3;
  uVar1 = DAT_0041e004;
  puVar2 = &DAT_0041eccc;
  iVar3 = 0;
  do {
    iVar3 = iVar3 + 1;
    *puVar2 = uVar1;
    puVar2 = puVar2 + 1;
  } while (iVar3 != 5);
  return;
}
// Library Function - Single Match
// Name: ___vcrt_uninitialize_winapi_thunks
// Library: Visual Studio 2015 Release
void __cdecl ___vcrt_uninitialize_winapi_thunks(char param_1)
{
  HMODULE *ppHVar1;
  if (param_1 == 0) {
    ppHVar1 = &hLibModule_0041ecc0;
    do {
      if (*ppHVar1 != (HMODULE)0x0) {
        if (*ppHVar1 != (HMODULE)0xffffffff) {
          FreeLibrary(*ppHVar1);
        }
        *ppHVar1 = (HMODULE)0x0;
      }
      ppHVar1 = ppHVar1 + 1;
    } while (ppHVar1 != (HMODULE *)&DAT_0041eccc);
  }
  return;
}
// WARNING: Globals starting with '_' overlap smaller symbols at the same address
void FUN_004035ad(void)
{
  _DAT_0041ece0 = DAT_0041e004;
  return;
}
void __cdecl FUN_004035c0(PVOID param_1)
{
  RtlUnwind(param_1,(PVOID)0x4035d9,(PEXCEPTION_RECORD)0x0,(PVOID)0x0);
  return;
}
// Library Function - Single Match
// Name: __local_unwind2
// Library: Visual Studio
void __cdecl __local_unwind2(int param_1,uint param_2)
{
  uint uVar1;
  uint uVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 local_20;
  undefined *puStack28;
  undefined4 local_18;
  int iStack20;
  iStack20 = param_1;
  puStack28 = &LAB_004035e1;
  local_20 = *in_FS_OFFSET;
  uVar2 = DAT_0041e004 ^ (uint)&local_20;
  *(undefined4 **)in_FS_OFFSET = &local_20;
  while( true ) {
    uVar1 = *(uint *)(param_1 + 0xc);
    if ((uVar1 == 0xffffffff) || ((param_2 != 0xffffffff && (uVar1 <= param_2)))) break;
    local_18 = *(undefined4 *)(*(int *)(param_1 + 8) + uVar1 * 0xc);
    *(undefined4 *)(param_1 + 0xc) = local_18;
    if (*(int *)(*(int *)(param_1 + 8) + 4 + uVar1 * 0xc) == 0) {
      __NLG_Notify(0x101);
      FUN_004036fb(uVar2);
    }
  }
  *in_FS_OFFSET = local_20;
  return;
}
// Library Function - Single Match
// Name: __NLG_Notify1
// Library: Visual Studio
undefined4 __fastcall __NLG_Notify1(undefined4 uParm1)
{
  undefined4 in_EAX;
  undefined4 unaff_EBP;
  DAT_0041e034 = in_EAX;
  DAT_0041e038 = uParm1;
  DAT_0041e03c = unaff_EBP;
  return in_EAX;
}
// Library Function - Single Match
// Name: __NLG_Notify
// Library: Visual Studio
void __NLG_Notify(ulong param_1)
{
  undefined4 in_EAX;
  undefined4 unaff_EBP;
  DAT_0041e034 = in_EAX;
  DAT_0041e038 = param_1;
  DAT_0041e03c = unaff_EBP;
  return;
}
void FUN_004036fb(void)
{
  code *in_EAX;