::: para
要创建集群配置文件框架，请首先创建并命名该集群，然后在该集群中添加节点，如下所示：
:::
::: {.orderedlist xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    在该集群中的节点中执行 `ccs`{.command} 命令创建集群配置文件，使用
    `-h`{.option} 参数指定创建该文件的节点，并使用
    `createcluster`{.option} 选项指定该集群名称：
    :::
    ``` screen
    ccs -h host --createcluster clustername
    ```
    ::: para
    例如：下面的命令在 `node-01.example.com`{.literal} 中创建了名为
    `mycluster`{.literal} 的配置文件：
    :::
    ``` screen
    ccs -h node-01.example.com --createcluster mycluster
    ```
    ::: para
    集群名称不能超过 15 个字符。
    :::
    ::: para
    如果您指定的主机中已经存在 `cluster.conf`{.filename}
    文件，执行这个命令将替换现有文件。
    :::
    ::: para
    如果您要在本地系统中创建集群配置文件，可以使用 `-f`{.option}
    选项而不是 `-h`{.option} 选项。有关在本地创建该文件的详情请参考
    [第 5.1.1 节
    "在本地系统中创建集群配置文件"](#ch-config-ccs-CA.html#s2-config-local-ccs-CA){.xref}
    所述。
    :::
2.  ::: para
    要配置该集群包含的节点，请在该集群的每个节点中执行以下命令：
    :::
    ``` screen
    ccs -h host --addnode node
    ```
    ::: para
    例如：以下三个命令可在 `node-01.example.com`{.literal}
    的配置文件中添加
    `node-01.example.com`{.literal}、`node-02.example.com`{.literal} 和
    `node-03.example.com`{.literal}。
    :::
    ``` screen
    ccs -h node-01.example.com --addnode node-01.example.com
    ccs -h node-01.example.com --addnode node-02.example.com
    ccs -h node-01.example.com --addnode node-03.example.com
    ```
    ::: para
    要查看集群中已经配置的节点列表，请执行以下命令：
    :::
    ``` screen
    ccs -h host --lsnodes
    ```
    ::: para
    [例 5.1 "`cluster.conf`{.filename} File After Adding Three
    Nodes"](#ch-config-ccs-CA.html#ex-clusterconf-basic-ccs-CA){.xref}
    演示了您创建了包括节点
    `node-01.example.com`{.literal}、`node-02.example.com`{.literal} 和
    `node-03.example.com`{.literal} 的集群 `mycluster`{.literal} 后的
    `cluster.conf`{.literal} 配置文件。
    :::
    ::: example
    [⁠]{#ch-config-ccs-CA.html#ex-clusterconf-basic-ccs-CA}
    **例 5.1. `cluster.conf`{.filename} File After Adding Three Nodes**
    ::: example-contents
    ``` screen
    ```
    :::
    :::
    ::: para
    当您在该集群中添加节点时，您可以指定该节点所供献的用来确定是否合法的票数。请使用以下命令为集群节点设定票数：
    :::
    ``` screen
    ccs -h host --addnode host --votes votes
    ```
    ::: para
    添加节点时，`ccs`{.command}
    会为该节点分配一个唯一证书作为该节点的识别符。如果您要在创建节点时手动指定节点识别符，请使用以下命令：
    :::
    ``` screen
    ccs -h host --addnode host --nodeid nodeid
    ```
    ::: para
    要从集群中删除节点，请执行以下命令：
    :::
    ``` screen
    ccs -h host --rmnode node
    ```
:::
::: para
您完成配置集群的所有组件后，需要在所有节点中同步该集群配置文件，如
[第 5.15 节
"在集群节点中推广配置文件"](#ch-config-ccs-CA.html#s1-clusterconf-propagate-ccs-CA){.xref}
所述。
:::
:::
::: section
::: titlepage
# [⁠]{#ch-config-ccs-CA.html#s1-config-fence-devices-ccs-CA}5.5. 配置 Fence 设备 {.title}
:::
::: para
配置 fence 设备包括为集群创建、更新和删除 fence
设备。在您可以在集群中为节点配置 fencing 前必须在集群中创建并命名 fence
设备。有关为该集群中的独立节点配置 fencing 的详情请参考 [第 5.7 节
"为集群成员配置
Fencing"](#ch-config-ccs-CA.html#s1-config-member-ccs-CA){.xref}。
:::
::: para
在配置 fence 设备前，您可能想修改系统 fence 守护进程属性的默认值。为
fence 守护进程配置的值应该是集群的常规值。您可能想要为集群修改的常规
fencing 属性如下：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    `post_fail_delay`{.literal} 属性是在节点失败后，fencing 节点前 fence
    守护进程（`fenced`{.command}）要等待的秒数。`post_fail_delay`{.literal}
    的默认值为 **`0`**。可使用不同的数值以适应集群和网络性能。
    :::
-   ::: para
    `post-join_delay`{.literal} 属性是该节点加入 fence
    守护进程（`fenced`{.command}）后，该守护进程 fence
    该节点前要等待的秒数。`post-join_delay`{.literal} 默认值为
    **`6`**。`post-join_delay`{.literal} 一般在 20-30
    秒之间，可根据集群和网络性能而有所不同。
    :::
:::
::: para
您可以使用 `ccs`{.command} 命令的 `--setfencedaemon`{.option}
选项重新设定 `post_fail_delay`{.literal} 和 `post_join_delay`{.literal}
的值。注：执行 `ccs --setfencedaemon`{.command} 命令将覆盖现有特别设定的
fence 守护进程属性，将其恢复到默认值。
:::
::: para
例如：要配置 `post_fail_delay`{.literal}
属性值，请执行以下命令。这个命令将覆盖您已经使用这个命令设定的其他所有现有
fence 守护进程属性，并将其恢复到默认值。
:::
``` screen
ccs -h host --setfencedaemon post_fail_delay=value
```
::: para
要配置 `post_join_delay`{.literal}
属性值，请执行以下命令。这个命令将覆盖您已经使用这个命令设定的其他所有现有
fence 守护进程属性，并将其恢复到默认值。
:::
``` screen
ccs -h host --setfencedaemon post_join_delay=value
```
::: para
请执行以下命令同时为 `post_join_delay`{.literal} 属性和
`post_fail_delay`{.literal} 属性配置属性值：
:::
``` screen
ccs -h host --setfencedaemon post_fail_delay=value post_join_delay=value
```
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
有关 `post_join_delay`{.literal} 和 `post_fail_delay`{.literal}
属性，以及您可以修改的附加 fence 守护进程的详情请参考
[[fenced]{.refentrytitle}(8)]{.citerefentry} man
page，`/usr/share/cluster/cluster.rng`{.filename} 中的集群方案以及
`/usr/share/doc/cman-X.Y.ZZ/cluster_conf.html`{.filename} 中注释的方案。
:::
:::
:::
::: para
请执行以下命令为集群配置 fence 设备：
:::
``` screen
ccs -h host --addfencedev devicename [fencedeviceoptions]
```
::: para
例如：执行以下命令在集群节点 `node1`{.literal} 的配置文件中配置一个 APC
fence 设备，名为 `myfence`{.literal}，IP 地址为
`apc_ip_example`{.literal}，登录为 `login_example`{.literal}，密码为
`password_example`{.literal}：
:::
``` screen
ccs -h node1 --addfencedev myfence agent=fence_apc ipaddr=apc_ip_example login=login_example passwd=password_example
```
::: para
下面的示例演示了添加这个 APC fence 设备后 `cluster.conf`{.filename}
配置文件的 `fencedevices`{.literal} 部分：
:::
``` screen
```
::: para
为集群配置 fence
设备时，您可能会发现查看您集群的可用设备列表以及每个设备的可用选项会有所帮助。您还可能会发现查看目前为您集群配置的
fence 设备列表也有帮助。有关使用 `ccs`{.command} 命令列出可用 fence
设备及选项，或者输出目前为您集群配置的 fence 设备列表的详情，请参考
[第 5.6 节 "列出 Fence 设备和 Fence
设备选项"](#ch-config-ccs-CA.html#s1-list-fence-devices-ccs-CA){.xref}。
:::
::: para
请执行以下命令从您的集群配置中删除 fence 设备：
:::
``` screen
ccs -h host --rmfencedev fence_device_name
```
::: para
例如：执行以下命令从集群节点 `node1`{.literal} 的集群配置文件中删除名为
`myfence`{.literal} 的 fence 设备：
:::
``` screen
ccs -h node1 --rmfencedev myfence
```
::: para
如果您要修改已经配置的 fence 设备的属性，必须首先删除那个 fence
设备，然后使用修改的属性再次添加该设备。
:::
::: para
注：完成集群的所有组件配置后，需要在所有节点中同步该集群配置文件，如
[第 5.15 节
"在集群节点中推广配置文件"](#ch-config-ccs-CA.html#s1-clusterconf-propagate-ccs-CA){.xref}
所述。
:::
:::
::: section
::: titlepage
# [⁠]{#ch-config-ccs-CA.html#s1-list-fence-devices-ccs-CA}5.6. 列出 Fence 设备和 Fence 设备选项 {.title}
:::
::: para
您可以使用 `ccs`{.command} 命令输出可用 fence 设备列表，并列出每个可用
fence 类型的选项列表。您还可以使用 `ccs`{.command}
命令输出目前为您集群配置的 fence 设备列表。
:::
::: para
请执行以下命令输出目前为您集群配置的 fence 设备列表：
:::
``` screen
ccs -h host --lsfenceopts
```
::: para
例如：以下命令列出集群节点 `node1`{.literal} 中可用的 fence
设备，演示示例输出结果：
:::
``` screen
[root@ask-03 ~]# ccs -h node1 --lsfenceopts
fence_rps10 - RPS10 Serial Switch
fence_vixel - No description available
fence_egenera - No description available
fence_xcat - No description available
fence_na - Node Assassin
fence_apc - Fence agent for APC over telnet/ssh
fence_apc_snmp - Fence agent for APC over SNMP
fence_bladecenter - Fence agent for IBM BladeCenter
fence_bladecenter_snmp - Fence agent for IBM BladeCenter over SNMP
fence_cisco_mds - Fence agent for Cisco MDS
fence_cisco_ucs - Fence agent for Cisco UCS
fence_drac5 - Fence agent for Dell DRAC CMC/5
fence_eps - Fence agent for ePowerSwitch
fence_ibmblade - Fence agent for IBM BladeCenter over SNMP
fence_ifmib - Fence agent for IF MIB
fence_ilo - Fence agent for HP iLO
fence_ilo_mp - Fence agent for HP iLO MP
fence_intelmodular - Fence agent for Intel Modular
fence_ipmilan - Fence agent for IPMI over LAN
fence_kdump - Fence agent for use with kdump
fence_rhevm - Fence agent for RHEV-M REST API
fence_rsa - Fence agent for IBM RSA
fence_sanbox2 - Fence agent for QLogic SANBox2 FC switches
fence_scsi - fence agent for SCSI-3 persistent reservations
fence_virsh - Fence agent for virsh
fence_virt - Fence agent for virtual machines
fence_vmware - Fence agent for VMware
fence_vmware_soap - Fence agent for VMware over SOAP API
fence_wti - Fence agent for WTI
fence_xvm - Fence agent for virtual machines
```
::: para
请执行以下命令列出您可为具体 fence 类型指定的选项列表：
:::
``` screen
ccs -h host --lsfenceopts fence_type
```
::: para
例如：下面的命令列出 `fence_wti`{.literal} fence 代理的 fence 选项列表。
:::
``` screen
[root@ask-03 ~]# ccs -h node1 --lsfenceopts fence_wti
fence_wti - Fence agent for WTI