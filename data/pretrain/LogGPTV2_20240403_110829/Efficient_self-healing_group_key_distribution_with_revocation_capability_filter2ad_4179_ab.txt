uncertainty of the members in B to determine Si is at
least b bits (i.e., H(Si|{Si(cid:1)}Ui(cid:1) ∈B,B1, ..., Bm) ≥ b),
and
(c) what members U1, ..., Un learn from Bj can’t be deter-
mined from the broadcasts or personal keys alone (i.e.,
H(zi,j|B1, ..., Bm) = H(zi,j) = H(zi,j|S1, ..., Sn)).
2. D has t-revocation capability if given any R ⊆ {U1, ..., Un},
where |R| ≤ t, the group manager can generate a broad-
cast Bj, such that for all Ui /∈ R, Ui can recover Kj (i.e.,
H(Kj|Bj , Si) = 0), but the revoked members cannot (i.e.,
H(Kj|Bj ,{Si(cid:1)}Ui(cid:1) ∈R) = H(Kj)).
3. D is self-healing if the following are true for any 1 ≤ j1 <
j < j2 ≤ m:
(a) For any Ui who is a member in sessions j1 and j2, Kj
is determined by the set, {zi,j1 , zi,j2} (i.e.,
H(Kj|zi,j1 , zi,j2 ) = 0).
(b) For any disjoint subsets B, C ⊂ {U1, ..., Un}, where
|B ∪ C| ≤ t, the set {zi(cid:1),j}Ui(cid:1) ∈B,1≤j≤j1 ∪
{zi(cid:1),j}Ui(cid:1) ∈C,m≥j≥j2 contains no information on the
key Kj (i.e.,
H(Kj|{zi(cid:1),j}Ui(cid:1) ∈B,1≤j≤j1 ∪ {zi(cid:1),j}Ui(cid:1) ∈C,m≥j≥j2 )
= H(Kj)).
Our Deﬁnition 2 is a generalization of the notion of session key
distribution in [27]. The difference lies in item 1(b). Both deﬁ-
nitions are aimed at unconditional security. However, session key
distribution in [27] requires that any coalition of at most t valid
group members cannot get any information about another mem-
ber’s personal secret, while Deﬁnition 2 in our paper requires that
the uncertainty of such a coalition to determine another member’s
personal secret is at least b bits. In other words, session key dis-
tribution in [27] doesn’t allow any information leakage, while our
Deﬁnition 2 allows certain information leakage as long as the un-
certainty of the secret is at least b bits.
As a side note, we found that Construction 3 in [27] doesn’t meet
their criteria of session key distribution as claimed in their Theo-
rem 1. Assume Ui is the member that the coalition wants to attack.
Though it is shown in [27] that the coalition of at most t group
members cannot get any information of Ui’s share on each indi-
vidual polynomial, the uncertainty of the personal secret Si, which
consists of a point on each of m2 such polynomials, decreases when
the coalition receives the broadcast messages. This is because the
session key distributed to Ui for each session remains constant in
multiple broadcast messages, and the coalition can get the sum of
this key and a point on a polynomial for multiple polynomials. As
a result, the uncertainty of all the related shares in Si is determined
by the uncertainty of this session key. Nevertheless, Construction
3 in [27] still meets the criteria speciﬁed in our Deﬁnition 2 with at
least m log q-bit privacy.
Security properties of a group key management system have been
considered in the past [21, 29]. These security properties consist of
(1) group key secrecy, which guarantees that it is at least computa-
tionally infeasible for an adversary to discover any group key, (2)
forward secrecy, which guarantees that a passive adversary who
knows a contiguous subset of old group keys cannot discover sub-
sequent group keys, (3) backward secrecy, which guarantees that
a passive adversary who knows a contiguous subset of group keys
cannot discover preceding group keys, and (4) key independence,
which is the combination of forward and backward secrecy.
These security properties have been studied for group key man-
agement systems such as CLIQUES [28] and ELK [21]. However,
they are not sufﬁcient in our framework, since each group member
also has access to some secret information (i.e., Si for Ui), which
is used to compute the group keys. In particular, forward secrecy
doesn’t imply that the adversary cannot discover the subsequent
group keys if he/she further has the secret information only known
to some past group members, and backward secrecy doesn’t guar-
antee that the adversary cannot discover the preceding group keys
if he/she is further provided the secret information only known to
some new group members. To clarify these requirements, we intro-
duce the notions of t-wise forward and backward secrecy.
DEFINITION 3. (t-wise forward and backward secrecy) Let
t, i ∈ {1, ..., n} and j ∈ {1, ..., m}.
• A key distribution scheme guarantees t-wise forward secrecy
if for any set R ⊆ {U1, ..., Un}, where |R| ≤ t, and all r ∈
R are revoked before session j, the members in R together
cannot get any information about Kj, even with the knowl-
edge of group keys before session j (i.e., H(Kj|B1, ..., Bm,
{Si}Ui∈R, K1, ..., Kj−1) = H(Kj)).
• A key distribution scheme guarantees t-wise backward se-
crecy if for any set R ⊆ {U1, ..., Un}, where |R| ≤ t, and
all r ∈ R join after session j, the members in R together
cannot get any information about Kj, even with the knowl-
edge of group keys after session j (i.e., H(Kj|B1, ..., Bm,
{Si}Ui∈R, Kj+1, ..., Km) = H(Kj)).
Note that t-wise forward (backward) secrecy implies forward
(backward) secrecy. Thus, ensuring t-wise forward and backward
secrecy guarantees forward and backward secrecy, key indepen-
dence, and group key secrecy. Moreover, it is easy to see that t-wise
forward secrecy also implies t-revocation capability.
3. EFFICIENT SESSION KEY DISTRIBU-
TION WITH REVOCATION
In this section, we present our techniques for self-healing key
distribution with revocation capability. Our techniques start with
a novel personal key distribution scheme, in which the communi-
cation complexity is only O(t log q) to provide t-revocation capa-
bility. We then apply this technique to develop an efﬁcient key
distribution scheme in Section 3.2, and then reduce its storage re-
quirement in Section 3.3. To further reduce the broadcast message
size, we propose two kinds of trade-offs between the self-healing
capability and broadcast message size in Section 3.4. The secu-
rity of these schemes is guaranteed through a number of theorems.
For space reasons, we only present the proof of Theorem 2. The
proofs of the other theorems can be found in the full version of this
paper [16].
One limitation of these schemes is that self-healing key distribu-
tion is restricted to m sessions. However, we note that the technique
that extends the lifetime of the methods in [27] is also applicable to
ours. Due to space reasons, we do not discuss it in this paper.
3.1 Personal Key Share Distribution
The purpose of personal key share distribution is to distribute
keys to select group members so that each of the select (or non-
revoked) group members shares a distinct personal key with the
group manager, but the other (revoked) group members (as well as
the adversary) cannot get any information of the keys. In our ap-
proach, the group manager broadcasts a message, and all the select
group members derive their keys from the message.
Our approach chooses a random t-degree polynomial f (x) from
Fq[x], and select f (i) to be the personal key share for each group
member Ui. The group manager constructs a single broadcast poly-
nomial w(x) such that for a select group member Ui, f (i) can be
recovered from the knowledge of w(x) and the personal secret Si,
(cid:8)
but for any revoked group member Ui(cid:1) , f (i
) cannot be determined
from w(x) and Si(cid:1) .
Speciﬁcally, we construct w(x) from f (x) with the help of a re-
vocation polynomial g(x) and a masking polynomial h(x) by com-
puting w(x) = g(x)f (x) + h(x). The revocation polynomial g(x)
is constructed in such a way that for any select group member Ui,
g(i) (cid:14)= 0, but for any revoked group member Ui(cid:1) , g(i
(cid:8)
) = 0. Each
group member Uv has its own personal secret Sv = {h(v)}, which
may be distributed by the group manager during setup via the se-
cure communication channel between each group member and the
group manager. Thus, for any select group member Ui, new per-
sonal key f (i) can be computed by f (i) = w(i)−h(i)
, but for any
revoked group member Ui(cid:1) , new personal key cannot be computed
(cid:8)
) = 0. This scheme has the properties of unconditional
because g(i
security and t-revocation capability, which are guaranteed by The-
orem 1.
g(i)
SCHEME 1. Personal key distribution with t-revocation capa-
bility. The purpose of this scheme is to distribute distinct shares of
a target t-degree polynomial, f (x), to non-revoked group members.
1. Setup: The group manager randomly picks a 2t-degree mask-
ing polynomial, h(x) = h0 + h1x + ... + h2tx2t, from
Fq[x]. Each group member Ui gets the personal secret, Si =
{h(i)}, from the group manager via the secure communica-
tion channel between them.
2. Broadcast: Given a set of revoked group members, R =
{r1, r2, ..., rw},|R| ≤ t, the group manager distributes the
shares of t-degree polynomial f (x) to non-revoked group
members via the following broadcast message:
B = {R} ∪ {w(x) = g(x)f (x) + h(x)}, where the revoca-
tion polynomial g(x) is constructed as g(x) = (x− r1)(x−
r2)...(x − rw).
3. Personal key recovery: If any non-revoked group member Ui
receives such a broadcast message, it evaluates the polyno-
mial w(x) at point i and gets w(i) = g(i)f (i) + h(i). Be-
cause Ui knows h(i) and g(i) (cid:14)= 0, it can compute the new
personal key f (i) = w(i)−h(i)
.
g(i)
In Scheme 1, each non-revoked group member Ui can only re-
cover its own personal share f (i), since computing the personal key
of another non-revoked member Uj requires the knowledge of the
personal secret {h(j)} . The coalition of no more than t revoked
members has no way to determine any share on f (x), because no
matter what f (x) is, for any revoked group member Ui(cid:1) , we have
(cid:8)
), which implies that any f (x) is possible from the
h(i
knowledge of the coalition of the revoked group members.
(cid:8)
) = w(i
It is noted that the degrees of g(x), f (x) and h(x) are w, t and
2t, respectively. If w < t, after the broadcast of w(x), we actu-
ally disclose h2t, h2t−1, ..., ht+w+1 to anybody who receives the
broadcast message. Fortunately, this information disclosure does
not give the coalition of no more than t revoked members any in-
formation that they are not entitled to. This is guaranteed by Theo-
rem 1. In fact, t + w degree is enough for the masking polynomial
h(x). However, at the setup stage, the group manager does not
know the exact number of revoked group members in a particular
session. Thus, a practical way to address this problem is to choose
the degree of h(x) as 2t.
THEOREM 1. Scheme 1 is an unconditionally secure personal
key distribution scheme with t-revocation capability.
In the setup stage, each group member Ui needs to store its ID
i and one share of the masking polynomial h(i). Thus, the stor-
age requirement in each group member is O(log q). The broadcast
message consists of a set of no more than t IDs and one 2t de-
gree polynomial. Thus, the communication overhead for Scheme
1 is O(t log q). This is a signiﬁcant improvement over the scheme
in [27], in which the communication complexity is O(t2 log q).
3.2 Self-Healing Key Distribution with Revo-
cation Capability
The technique in Scheme 1 is an efﬁcient scheme to distribute
personal key shares to select group members. Here we further ex-
tend it to enable the group manager to distribute group session keys
to select group members, at the same time allowing group members
to recover lost session keys for previous sessions. This technique
combines the technique in Scheme 1 with the self-healing method
in [27].
Intuitively, the group manager randomly splits each group ses-
sion key Kj into two t-degree polynomials, pj(x) and qj (x), such
that Kj = pj(x) + qj (x). The group manager then distributes
shares pj(i) and qj (i) to each select group member Ui (via broad-
cast). This allows a group member that has both pj(i) and qj(i) to
recover Kj by Kj = pj(i) + qj (i). Thus, assuming there are m
sessions, we can build (m + 1) broadcast polynomials in session
j to distribute the shares of {p1(x), ..., pj(x), qj (x), ..., qm(x)} to
all select group members. If a valid Ui receives the broadcast mes-
sage, it can recover {p1(i), ..., pj(i), qj (i), ..., qm(i)} and com-
pute session key Kj = pj(i) + qj (i). But the revoked group mem-
bers get nothing about the corresponding keys from this broadcast
message. Furthermore, if a select group member Ui receives ses-
sion key distribution messages in sessions j1 and j2, where j1 <
j2, but not the session key distribution message for session j, where
j1 < j < j2, it can still recover the lost session key Kj by ﬁrst re-
covering pj(i) and qj(i) from the broadcast messages in sessions
j2 and j1, respectively, and then computing Kj = pj(i) + qj(i).
SCHEME 2. Self-healing session key distribution scheme with
t-revocation capability.
1. Setup: The group manager randomly picks m · (m + 1)
2t-degree masking polynomials from Fq[x], which are de-
noted as {hi,j (x)}i=1,...,m,j=1,...,m+1. Each Uv gets its
personal secret, Sv = {hi,j(v)}i=1,...,m,j=1,...,m+1, from
the group manager via the secure communication channel
between them. The group manager also picks m random
session keys, {Ki}i=1,...,m ⊂ Fq and m random t-degree
polynomials p1(x), ..., pm(x) from Fq[x]. For each pi(x),
the group manager constructs qi(x) = Ki − pi(x).
2. Broadcast: In the jth session key distribution, given a set of
revoked member IDs, Rj = {r1, r2, ..., rwj}, |Rj| = wj ≤
t, the group manager broadcasts the following message:
Bj= {Rj}
∪ {Pj,i(x) = gj(x)pi(x) + hj,i(x)}i=1,...,j
∪ {Qj,i(x) = gj(x)qi(x) + hj,i+1(x)}i=j,...,m,
where gj(x) = (x − r1)(x − r2)...(x − rwj ).
3. Session key and shares recovery: When a non-revoked group
member Uv receives the jth session key distribution mes-
sage, it evaluates the polynomials {Pj,i(x)}i=1,...,j and
{Qj,i(x)}i=j,...,m at point v, recovers the shares {p1(v), ...,
pj(v)} and {qj (v), ..., qm(v)}, and computes the current
session key by Kj = pj(v) + qj (v). Then it stores all the
items in {p1(v), ..., pj−1(v), Kj , qj+1(v), ..., qm(v)} that
it doesn’t have.
4. Add group members: When the group manager wants to
add a member starting from session j, it picks an unused
ID v ∈ Fq, computes all {hi,k(v)}i=j,...,m,k=j,...,m+1, and
gives {v, {hi,k(v)}i=j,...,m,k=j,...,m+1} to this group mem-
ber via the secure communication channel between them.
A requirement of Scheme 2 is that the sets of revoked group
members must change monotonically. That is, Rj1 ⊆ Rj2 for
1 ≤ j1 ≤ j2 ≤ m. Otherwise, a group member that is revoked
in session j and rejoins the group in a later session can recover the
key for session j, due to the self-healing capability of Scheme 2.
This requirement also applies to the later schemes. Scheme 2 has
the properties of unconditional security, self-healing, t-revocation