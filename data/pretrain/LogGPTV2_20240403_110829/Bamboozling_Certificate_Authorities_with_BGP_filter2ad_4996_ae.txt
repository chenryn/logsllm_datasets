over a peering relationship with the true origin prepended
would likely not attract much attention because little traf-
ﬁc would be misdirected.
If a traditional BGP moni-
toring system were to ﬂag such an announcement, there
would likely be an unreasonable number of false posi-
tives. However, such a leak could allow an adversary to
obtain a bogus TLS certiﬁcate. Thus, a monitoring sys-
tem for CAs needs to be more aggressive about ﬂagging
routes as suspicious than a traditional monitoring system
for general security purposes.
Route Age Heuristic. We propose a new mechanism,
the route age heuristic, to detect suspicious routes for
CAs that would likely be missed by a traditional mon-
itoring system. At a high level, the route age heuristic
computes an age for each route the CA’s ISP is using and
ﬂags routes that are too new. This would force attacks
to be active for a minimum amount of time before a CA
would be willing to sign a certiﬁcate based on them. In
this system, legitimate users with recent BGP routes will
have their certiﬁcates signed after the routes have suf-
ﬁcient age. However, adversaries are required to leave
their attacks active, so network operators have time to
react. There is a clear tradeoff between false positives
(legitimate users that are unnecessarily delayed) and this
minimum time threshold. A larger minimum time al-
lows network operators more time to shutdown a poten-
tial BGP attack but will clearly cause CAs to delay sign-
ing a larger number of certiﬁcates that are coincidently
based on very recent routes. Our goal is to engineer a
method to compute the age of a route that allowed for a
minimum time threshold that was long enough for net-
work operators to react but also did not have an unrea-
sonably high false positive rate.
Algorithm. Our heuristic considers the age of the last
three hops of a route: the origin and the two ASes before
the origin. We use a different threshold value for each
hop. Our algorithm computes the age based on 1) how
long any route to a given preﬁx had been seen (network
age) and 2) how long each hop in the route to that pre-
ﬁx had been seen. To compute the age of each hop, we
constructed an SQL database containing, for each preﬁx,
the last seen AS path and a list of timestamps indicating
when each AS was added to that path. To populate the
database, our algorithm compares the AS path of each
new update for a preﬁx with the previously stored AS
path. Working one AS at a time in the AS path, the al-
gorithm checks to see if each new AS differed from the
stored AS. If the two ASes are the same, the algorithm
keeps the stored time stamp for that hop because there
has been no change in that particular hop on the route.
However, if the two ASes differ, the algorithm uses the
844    27th USENIX Security Symposium
USENIX Association
timestamp of the new BGP update for that hop and all
hops after that hop. To compute the hop ages of a preﬁx,
the algorithm looks up a preﬁx in the database and com-
putes for each hop the current timestamp subtracted by
the stored timestamp for that hop. With these hop ages, a
CA can make ﬁne tuned judgements as to whether a route
is considered old enough to be used in domain control
veriﬁcation.
False Posi-
tive Rates
1 in 100
1 in 200
1 in 400
1 in 800
Network
Age
285
159
50
30
Origin
Age
52
33
17
6
Provider
Age
3.6
1.5
0.56
0.11
3rd Hop
Age
4.6
1.6
0.56
0.11
Table 6: The minimum time thresholds (in hours) for
hops in the AS path with different false positive rates.
5.2.1 Evaluating False Positives
We evaluated the false positive rate of our monitoring
system by simulating its hypothetical deployment by the
Let’s Encrypt CA. We combined the 1.2 million certiﬁ-
cates from Let’s Encrypt in our dataset with historical
BGP data. Using BGPStream from CAIDA [38], we re-
played historical BGP updates and routing information
base data (RIBs) from Level 3 (AS 3356) through route-
views2 vantage point. Level 3 was selected because it is
a tier one ISP and it is a provider to Let’s Encrypt.
We seeded our database by loading in a RIB from one
month before our earliest certiﬁcate. We then began pro-
cessing BGP updates (from after the RIB we loaded) and
certiﬁcates in lockstep. If a BGP update had a timestamp
greater than the timestamp of the oldest unprocessed cer-
tiﬁcate, we would look up the resolved IP address from
the certiﬁcate in our database and ﬁnd the longest preﬁx
match. We then recorded the age of the route used when
the signing CA performed domain control validation for
this certiﬁcate. This process was continued until we had
collected the age on the routes used for every certiﬁcate
in the database.
We found that with a reasonable set of thresholds, we
were able to obtain a false positive rate of 1 in 800 cer-
tiﬁcates. Table 6 shows the tradeoff between false pos-
itive rates and threshold values. At the 1 in 800 false
positive rate, an adversary would be forced leave sub-
preﬁx attacks active for 30 hours because these attacks
announce new networks and would have to meet the net-
work age threshold before being used by CAs. During
this time, traditional manual means of attack detection
(that network operators rely on heavily [41]) would be
able to shut down the attack. Note that the certiﬁcates
that would trigger false positives would not require hu-
man intervention from CAs. The CAs may automatically
retry the certiﬁcate signing later once the BGP route an-
nounced by the domain’s ISP becomes stable.
6 Related Work
BGP Attacks on Infrastructure and Applications.
BGP attacks have been shown to have a sizable effect
on various applications. Sun et al. have shown the effec-
tiveness of BGP attacks at deanonymizing Tor users [44],
and Apostolaki et al. demonstrated the use of BGP to
attack the Bitcoin protocol [13]. Arnbak et al. also
showed how entities such as NSA can use BGP to by-
pass US surveillance laws [15]. Gavrichenkov performed
a preliminary exploration of BGP attacks on TLS [22],
which only considered the most basic traditional sub-
preﬁx and equally-speciﬁc-preﬁx hijacks. We are the
ﬁrst to consider more sophisticated attacks and perform
real-world demonstrations of all the attacks, as well as
develop countermeasures.
BGP Attacks and Defenses. Previous work by Pi-
losov and Kapela has demonstrated the use of advanced
BGP attacks with strategically poisoned AS paths [39].
The vulnerability of peering links has also been explored
by Madory [36]. However, no previous work has applied
these BGP attacks to target encrypted communications.
BGP defenses have been studied in both general and
application-speciﬁc forms. Lad et al. outline a well-
known system to detect traditional BGP attacks using
origin changes [30]. RPKI can be used to authenticate
the origin ASes of BGP routes and generate route ﬁlters
to prevent BGP attacks [17]. Both these systems only
operate on the origin AS of a BGP announcement and
can be fooled by prepended ASNs [23]. BGPsec cryp-
tographically assures the validity of BGP paths and is
immune to such prepending attacks [33]. However, BG-
PSec is not deployed and researchers have shown that
partial BGPSec deployment does not bring signiﬁcant se-
curity improvement [35]. Additionally, SCION presents
a clean slate architecture that would prevent BGP hi-
jacks [48]. SCION has been deployed in production en-
vironment of multiple ISPs but is still not used by the vast
majority of the Internet. Karlin et al. introduced the idea
of cautiously adopting new routes to avoid routing based
on malicious BGP announcements [28]. We adapt this
idea to the PKI by developing a more complex measure-
ment of age and recommending CAs not use new routes
during domain control veriﬁcation.
Sun et al.
developed an application-speciﬁc BGP
monitoring system to protect the Tor network that in-
cludes a similar analytic using route age [43]. Our study
considers a more nuanced notion of age and uses it to
advise CAs in certiﬁcate signing as opposed to alerting
preﬁx owners of an attack.
Work on Domain Control Veriﬁcation. Recent work
USENIX Association
27th USENIX Security Symposium    845
has been making major improvements in standardizing
the process of domain control veriﬁcation. The secu-
rity ﬂaws in the operations of the CA WoSign high-
lighted the importance of port standardization during do-
main control veriﬁcation [3] which was reﬂected in the
CA/Browser Forum ballot 169 [10]. Ballot 169 is also
the ﬁrst document to rigorously enumerate which meth-
ods a CA can use for domain control veriﬁcation.
Bootstrapping Trust Through DNS. Proposals like
DANE [25] and RAINS [46] offer alternatives to the cur-
rent PKI by including server public key information di-
rectly in the name server infrastructure, which is crypto-
graphically veriﬁed. DNSSEC [14] provides additional
security to the existing PKI by preventing network at-
tacks on DNS-based domain control validation methods
through cryptographic signatures on DNS responses.
7 Conclusion
We explore BGP attacks that can be used against the
PKI and successfully demonstrate real-world BGP at-
tacks against top CAs. We then assess the degree of vul-
nerability of the current PKI. Our analysis shows that the
vast majority of domains are vulnerable to a sub-preﬁx or
equally-speciﬁc-preﬁx attack that an adversary can use
to obtain a bogus certiﬁcate.
In addition to exploring
the attack surface, we propose and implement counter-
measures that can signiﬁcantly reduce the vulnerability
of the PKI. We recommend performing domain control
veriﬁcation from multiple vantage points, and develop a
BGP monitoring system with a novel route age analytic
that can be used by CAs. Overall, our work is the ﬁrst
work to develop a taxonomy of BGP attacks on on PKI
(and demonstrate these attacks in the real world), and the
ﬁrst to propose realistic countermeasures that have al-
ready started being adopted by CAs.
8 Acknowledgments
We would like to thank Michael Bailey for shepherd-
ing this paper, Adrian Perrig for detailed feedback, Josh
Aas for feedback on Let’s Encrypt’s deployment, and the
anonymous USENIX reviewers for their suggestions and
comments. We would also like to thank Let’s Encrypt
for their partnership, which has lead to the ﬁrst imple-
mentation of multiple-vantage-point veriﬁcation and has
provided us with crucial data to support this research. In
addition we are grateful for support from the National
Science Foundation under grant CNS-1553437 and the
Open Technology Fund through their Securing Domain
Validation project.
References
[1] 556468 - investigate incident with RapidSSL that issued SSL
certiﬁcate for portugalmail.pt. https://bugzilla.mozilla.
org/show\_bug.cgi?id=556468.
[2] CAIDA spoofer
project.
projects/spoofer/.
https://www.caida.org/
[3] CA:WoSign Issues.
https://wiki.mozilla.org/CA:
WoSign_Issues#Issue_L:_Any_Port_.28Jan_-
_Apr_2015.29.
[4] Certiﬁcate search. https://crt.sh/.
[5] Godaddy:
Verify domain ownership (HTML or DNS).
https://www.godaddy.com/help/verify-domain-
ownership-html-or-dns-7452l.
[6] Let’s Encrypt staging environment. https://letsencrypt.
org/docs/staging-environment/.
[7] Moscow trafﬁc jam.
moscow-traffic-jam.
https://radar.qrator.net/blog/
[8] Usage
of
SSL
certiﬁcate
authorities
for websites.
https://w3techs.com/technologies/overview/ssl\
textunderscorecertificate/all.
[9] Youtube
hijacking:
A RIPE NCC RIS case
study.
https://www.ripe.net/publications/news/industry-
developments/youtube-hijacking-a-ripe-ncc-ris-
case-study, Mar 2008.
[10] Ballot 169 -
revised validation requirements.
https:
//cabforum.org/2016/08/05/ballot-169-revised-
validation-requirements/, Oct 2016.
[11] Ballot 190 -
revised validation requirements.
https:
//cabforum.org/2017/09/19/ballot-190-revised-
validation-requirements/, Sep 2017.
[12] ALICHERRY, M., AND KEROMYTIS, A. D. Doublecheck:
Multi-path veriﬁcation against man-in-the-middle attacks.
In
IEEE Symposium on Computers and Communications (July
2009), pp. 557–563.
[13] APOSTOLAKI, M., ZOHAR, A., AND VANBEVER, L. Hijacking
In IEEE Sympo-
bitcoin: Routing attacks on cryptocurrencies.
sium on Security and Privacy (SP) (May 2017), pp. 375–392.
[14] ARENDS, R., AUSTEIN, R., LARSON, M., MASSEY, D., AND
ROSE, S. DNS security introduction and requirements. RFC
4033, RFC Editor, March 2005. http://www.rfc-editor.
org/rfc/rfc4033.txt.
[15] ARNBAK, A., AND GOLDBERG, S. Loopholes for circumvent-
ing the constitution: Unrestricted bulk surveillance on americans
by collecting network trafﬁc abroad. Mich. Telecomm. & Tech. L.
Rev. 21 (2014), 317.
[16] BIRGE-LEE, H., SUN, Y., EDMUNDSON, A., REXFORD, J.,
AND MITTAL, P. Using BGP to acquire bogus TLS certiﬁcates.
HotPETS’17.
[17] BUSH, R., AND AUSTEIN, R. The resource public key infras-
tructure (RPKI) to router protocol. RFC 6810, RFC Editor, Jan-
uary 2013.
[18] CA/BROWSER FORUM. Baseline Requirements for the Issuance