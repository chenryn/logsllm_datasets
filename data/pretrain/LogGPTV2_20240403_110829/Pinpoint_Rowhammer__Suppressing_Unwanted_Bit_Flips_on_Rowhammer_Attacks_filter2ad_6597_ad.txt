rate of write operations by inserting a sequence of read operations
between two data patterns. In the example presented in Figure 9, the
data0 (p0∗1, p0∗0, p1∗1, p0∗1, and p0∗0 for the five cells) are written
to the aggressor rows at t0. Before the cells are overwritten with
the data1, Rowhammer is conducted using read operations. Con-
sequently, Rowhammer affects the victim row with data0 during
the read operations. After the given interval, Pinpoint Rowham-
mer overwrites the rows with the next data (data1) and conducts
Rowhammer using read operations. The method repeats this proce-
dure until the attack is finished.
We evaluate the effectiveness of Pinpoint Rowhammer over
a range of alternating granularities (alternating intervals). Three
cases of operation sequences for an attack attempt are described in
Figure 10. First, the coarse-1 sequence consists of a single batch of
the 12 data patterns that are equally interleaved. In this case, the
number of read operations between the two data pattern writes
is large. Second, the coarse-n sequence consists of n batches of
the 12 data patterns. Therefore, the number of read operations
between two data pattern writes is smaller than that of the coarse-1
case. Third, the fine sequence consists of m data patterns, and the
sequence only contains write operations. The following two metrics
are measured: the target bit flip rate and unwanted bit flip rate. In
Figure 11, the coarse-1 sequence yields the highest target flip ratio.
The target flip ratio decreases when the alternating granularity is
finer (i.e., large n for coarse-n). The fine sequence yields the lowest
target flip rate. On the other hand, the unwanted flip rate of the
coarse-1 sequence is 4.1%, which is higher than that of the other
sequences, with the exception of coarse-2. The coarse-1 sequence is
the best configuration for the high target flip rate, whereas the fine
sequence is the best for the low unwanted flip rate. Attackers can
choose the alternating granularity based on whether their priority
is the high target flip rate or the low unwanted flip rate. We use
the coarse-1 sequence for subsequent experiments in this study, to
induce the target flip.
Figure 11: Pinpoint Rowhammer over different alternating
granularity (B3 module)
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
function pinpointrowhammer ( total_access ,
alter_granularity , row , bank , column )
{
for (i =0; i < alter_granularity *12; i ++)
{
// retrieve a pinpoint data
upper_data , lower_data =
get_ith_data (i %12)
// write the pinpoint data
for ( column =0; column <1024; column ++)
{
// write 8 bytes data to ( row , bank ,
column )
rowhammer_with_write ( row , bank , column
, upper_data , lower_data )
}
// Rowhammer with read operation
for ( int j =0; j < total_access /
alter_granularity -1024*2; j ++)
rowhammer_with_read ( bank , row )
}
}
Code 1: Pseudo code of Pinpoint Rowhammer
Pseudo Code. Code 1 is a pseudo code of Pinpoint Rowham-
mer. Line 3 handles the number of batches of 12 data patterns.
Line 6 retrieves the i-th data for the upper and lower aggressor
rows. The data consists of an effective pattern for the target bit
and the alternating pattern for the other bits. Lines 9–13 write
the data to the upper and lower aggressor rows. The writing of
the entire row consumes 1,024 iterations because the row size is
8KB, and 8 bytes are written in each iteration. Thereafter, Pinpoint
Rowhammer performs read operations in lines 15–16. The number
of accesses with the read operation is controlled by the variable
alter_granularity. Attackers can adjust the alternating granularity
to increase or decrease the number of read operations. Lines 6–16
are repeated to conduct Pinpoint Rowhammer with the following
data.
5 EXPERIMENTAL SETUP
5.1 Experimental Environments
Two environments are used in this study. First, we build a bare
metal environment on the Intel i7-4770 CPU and Dell 0KWVT8
motherboard. The machine is used to measure the prevalence of
multiple bit flips in a row, as shown in Table 1. We implement a
read operationcoarse-1coarse-nfine   write operation  1st pattern 2nd3rd12th1st pattern 2nd12thn∙12th……………13th ……1st pattern2nd…3rd 4thmth pattern timeattack perioddata0data1data2data11data0 data1data11 data0data11123455060708090coarse-1     coarse-2     coarse-4     coarse-8fineUnwanted flip rate [%]Target flip rate [%]Operation sequencetarget flipunwanted flipSession 7: Hardware and SystemsAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand556tiny operating system (OS) that functions only as a Rowhammer
attack. We run the tiny OS in the bare metal environment from
a USB bootloader. Hence, we can scan the entire memory region
except for a small portion of the reserved area. Second, we build
another environment on the Intel i5-4460 CPU and Asrock b85m
pro4 motherboard. This machine is used to conduct all the proof-
of-concept experiments and Rowhammer attacks in this study.
5.2 Experimental Procedure
Rowhammer Configuration. We use the double-sided version
of Pinpoint Rowhammer, which is described in Section 4. We use
double-sided Rowhammer as a baseline method [20]. The RowStripe
pattern is used for the baseline method [13]. The Rowhammer at-
tacks (Pinpoint Rowhammer and the baseline) access rows 1,200k
times over a period of 128 ms, which is double the 64-ms refresh
interval [13]. Thus, each aggressor row is accessed 600k times.
Detecting Vulnerable Rows. For the evaluation of Pinpoint
Rowhammer, we scan a large amount of memory to select victim
rows. We conduct Rowhammer with the RowStripe pattern to detect
vulnerable cells [13]. If a row undergoes at least one bit flip, we
use the row in further experiments. These rows are categorized
into two groups, which represent two different attack scenarios.
Each row in the first group contains a single bit flip, whereas each
row in the second group contains multiple bit flips. In the first
scenario, the proposed method is expected to induce the target bit
flip while suppressing the bit flips of undetected vulnerable cells. In
the second scenario, the proposed method is expected to induce the
target bit flip while suppressing detected and undetected vulnerable
cells. As a result, we demonstrate that Pinpoint Rowhammer can
suppress unwanted bit flips even if they are not detected during the
scan phase, and the method can selectively induce a bit flip among
multiple vulnerable cells.
Conducting Rowhammer. We conduct Pinpoint Rowhammer
and the baseline Rowhammer attacks on the two groups. Pinpoint
Rowhammer requires information on the effective patterns of each
cell in the victim row. Hence, we conduct the additional scan phase
with the eight patterns presented in Figure 5, and the effectiveness
of each pattern is classified based on the scan results. Thereafter,
the alternating pattern is generated using the ineffective patterns,
and Pinpoint Rowhammer combines it with the effective pattern
of the target bit (Figure 9).
We evaluate the performance of the proposed method using two
attack strategies. First, we conduct a Rowhammer attack once and
analyze the results of the attack. Second, we conduct the Rowham-
mer attack multiple times until the target bit flip is induced. If the
target flip is induced, we terminate the repetition and analyze the
results of the attack. The limit of the repetition is set as 10, and the
attack is regarded as a failure if the target bit flip is not induced
by the end of the 10th attack attempt. In that case, we analyze the
result after the 10th attack attempt.
Data of the Victim Row. In this experiment, the victim row is
filled with random data, with the exception of the target bit. The
random data represents the fact that attackers cannot write data to
the victim row, and the data stored in the victim row is determined
by the victim process. Nevertheless, the target bit is filled with the
RowStripe data to guarantee that the target bit could be flipped.
Table 3: The number of attack instances on each module
Module
Attack instances
(a single flip)
Attack instances
(multiple flips)
A2
A3
B1
B3
5,037
5,113
10,000
10,000
11,687
10,906
25,529
29,693
The fixed data of the target bit is required for the evaluation of the
target bit flip rate.
6 EVALUATION
For a thorough comparison, we conduct an analysis of the Rowham-
mer attack results. We categorize the results of Rowhammer attack
into four cases. The first case is that the target bit is flipped without
any unwanted bit flips. This case represents the complete success
of the Rowhammer attack, whereas underlying three cases repre-
sent the attack failure. The second case is that an unwanted bit
is flipped, in addition to the target bit flip. In this case, attackers
cannot guarantee the success of the attack, although the target bit
is flipped. The unwanted bit flip may cause unexpected behavior
such as an attack failure, a system crash, and memory corruption
(Table 2). Moreover, an attack attempt that induces unwanted flips
can be detected by the system administrator because of its side
effects. Therefore, we regard this case as a failure, whereas previous
work regarded this case as a success without considering the side
effects of unwanted bit flips. The third case is that an unwanted bit
is flipped without the target bit flip. This case also induces the side
effects, as presented in Table 2. The last case is that no flips occur;
thus, no side effects are encountered.
Attacking a Row Containing a Single Bit Flip. We conduct the
baseline Rowhammer and Pinpoint Rowhammer attacks on rows
of the first group. Each row in the first group contains a single
bit flip. We conduct 30,150 attack instances on the rows (Table 3),
and the attack instances are conducted on four different modules
(A2, A3, B1, and B3). One attack instance consists of three attack
attempts: the baseline attack, the Pinpoint Rowhammer attack,
and the worst case simulation of the Pinpoint Rowhammer attack
(neglecting the scan results for the non-target cells). Each attack
instance is applied to a different row.
Figure 12 shows the results of the 30,150 attack instances. Each
bar is divided into four parts. The darker parts of each bar (case 2
and 3) represent unwanted bit flips. In Figure 12a, an average of
61.7% of the baseline attacks yield unwanted bit flips. On the other
hand, 9.7% of the Pinpoint Rowhammer attacks yield unwanted
bit flips, and 10.8% of the worst case Pinpoint Rowhammer attacks
yield unwanted bit flips. By suppressing the unwanted bit flips, the
target and unwanted flip case (case 2) becomes the target flip case
(case 1), and the unwanted flip case (case 3) becomes the no flip
case (case 4). Hence, Pinpoint Rowhammer successfully increases
the attack success rate (case 1) from 26.3% to 63.7%, on average,
when compared with the baseline. It should be noted that the at-
tack success rate (case 1) of the worst case Pinpoint Rowhammer
(62.0%) is comparable to that of Pinpoint Rowhammer.
Session 7: Hardware and SystemsAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand557(a) One Rowhammer attempt
(a) One Rowhammer attempt
(b) Repeated Rowhammer attempts
(b) Repeated Rowhammer attempts
Figure 12: Rowhammer results on rows of the first group
(containing a flip)
Figure 13: Rowhammer results on rows of the second group
(containing multiple flips)
Figure 12b shows the attack results of the repeated Rowham-
mer attempts. As this attack strategy involves the repetition of
Rowhammer until the target bit is flipped, the no flip rate is de-
creased. Compared with the single-attempt-strategy, as presented
in Figure 12a, the no flip rate (case 4) of Pinpoint Rowhammer
decreases from 26.6% to 15.4%, on average. The target flip rate (case
1) of Pinpoint Rowhammer increases from 63.7% to 72.4%. At the
same time, the target and unwanted flip rate (case 2) increases from
7.3% to 9.0%, and the unwanted flip rate (case 3) increases from 2.4%
to 3.2%. If Rowhammer is repeated until the target bit is flipped,