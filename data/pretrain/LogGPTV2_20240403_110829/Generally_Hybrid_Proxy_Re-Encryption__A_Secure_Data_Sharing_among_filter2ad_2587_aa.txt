title:Generally Hybrid Proxy Re-Encryption: A Secure Data Sharing among
Cryptographic Clouds
author:Peng Xu and
Jun Xu and
Wei Wang and
Hai Jin and
Willy Susilo and
Deqing Zou
Generally Hybrid Proxy Re-Encryption: A Secure Data
Sharing among Cryptographic Clouds
Peng Xu†, Jun Xu†, Wei Wang‡, Hai Jin†, Willy Susilo§, Deqing Zou†
†Services Computing Technology and System Lab, Cluster and Grid Computing Lab, School of
Computer Science and Technology, Huazhong University of Science and Technology, Wuhan, 430074,
‡Cyber-Physical-Social Systems Lab, School of Computer Science and Technology, Huazhong
§Centre for Computer and Information Security Research, School of Computer Science and Software
University of Science and Technology, Wuhan, 430074, China
China
Engineering, University of Wollongong, Wollongong, Australia
PI:EMAIL, PI:EMAIL, PI:EMAIL,
PI:EMAIL, PI:EMAIL, PI:EMAIL
ABSTRACT
Proxy Re-Encryption (PRE) is a favorable primitive to real-
ize a cryptographic cloud with secure and ﬂexible data shar-
ing mechanism. A number of PRE schemes with versatile ca-
pabilities have been proposed for diﬀerent applications. The
secure data sharing can be internally achieved in each PRE
scheme. But no previous work can guarantee the secure data
sharing among diﬀerent PRE schemes in a general manner.
Moreover, it is challenging to solve this problem due to huge
diﬀerences among the existing PRE schemes in their alge-
braic systems and public-key types. To solve this problem
more generally, this paper uniforms the deﬁnitions of the
existing PRE and Public Key Encryption (PKE) schemes,
and further uniforms their security deﬁnitions. Then tak-
ing any uniformly deﬁned PRE scheme and any uniformly
deﬁned PKE scheme as two building blocks, this paper con-
structs a Generally Hybrid Proxy Re-Encryption (GHPRE)
scheme with the idea of temporary public and private keys
to achieve secure data sharing between these two underlying
schemes. Since PKE is a more general deﬁnition than PRE,
the proposed GHPRE scheme also is workable between any
two PRE schemes. Moreover, the proposed GHPRE scheme
can be transparently deployed even if the underlying PRE
schemes are implementing.
Keywords
Proxy Re-Encryption, Secure Cloud Storage, Hybrid Proxy
Re-Encryption
1.
INTRODUCTION
Nowadays, Proxy Re-Encryption (PRE) [1] has been widely
recognized as a promising solution to achieve secure cloud
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
ASIA CCS ’16, May 30-June 03, 2016, Xi’an, China
c(cid:13) 2016 ACM. ISBN 978-1-4503-4233-9/16/05. . . $15.00
DOI: http://dx.doi.org/10.1145/2897845.2897923
storage. Technically, PRE allows users to store their en-
crypted data in cloud and securely share their data with
others even if cloud is unauthorized for accessing (or honest-
but-curious).
In the PRE-based cloud, each user usually
encrypts his data by his own public key and stores the re-
sulted ciphertexts in this cloud. Suppose user Alice wants
to share her cloud data with user Bob. Alice delegates a
re-encryption key to cloud; then cloud re-encrypts Alice’s
ciphertexts, and sends the re-encrypted ciphertexts to Bob,
and ﬁnally, Bob decrypts these received ciphertexts by his
own private key. Moreover, a secure PRE scheme guaran-
tees that cloud can not learn anything about Alice’s data
and share Alice’s data to any unauthorized user.
Recently, a lot of versatile PRE schemes have been pro-
posed. These PRE schemes equip the basic PRE with diﬀer-
ent capabilities to meet the requirements of diﬀerent appli-
cations. These versatile PRE schemes facilitate the sharing
of users’ cloud data. However they cause a serious problem.
Suppose two clouds are respectively based on diﬀerent PRE
schemes. It seems to be impossible to securely share users’
data within these two clouds. This problem also exists in
the same cloud, when two enterprises rent the same cloud
but employ diﬀerent PRE schemes to independently realize
their secure cloud storage services.
As an obvious solution of this problem, a data consumer
could register himself in the same PRE scheme with a data
provider before sharing this data provider’s cloud data, and
obtains a new pair of public and private keys. This solution
is so straightforward as to be impractical, since a data cus-
tomer will have his intended keys increased with the number
of PRE schemes he had engaged in. It is impossible for him
to manage so many public and private keys. In a nutshell,
this straightforward solution causes a new problem that we
call “Key Boom”.
Through addressing this new problem, we propose hy-
brid PRE as a promising idea. In application, HPRE allows
two users to share their cloud data no matter whether they
are from two diﬀerent PRE schemes. However, the existing
HPRE schemes [2–6] are only workable for two special PRE
schemes. In other words, none of them is a general solution
for any two PRE schemes.
9131.1 Motivation and Challenges
In this paper, we would like to propose a general HPRE
(GHPRE) scheme. As an application, given any PRE scheme
β and any Public Key Encryption (PKE) scheme α, the pro-
posed GHPRE scheme allows any user in β to delegate a
re-encryption key to cloud, and then cloud can re-encrypt
delegators’ ciphertexts (which were generated by β) into the
new ciphertexts that can be decrypted by any intended user
in α. Moreover, it does not need users in β to modify their
existing cloud ciphertexts before re-encrypting them. This
property implies that the proposed GHPRE scheme can be
directly deployed in any on-going PRE scheme, and this de-
ployment is transparent to users. Furthermore, since PRE is
an extended deﬁnition of PKE in concept, the proposed GH-
PRE scheme also can be used to share users’ date between
any two PRE schemes.
Theoretically, given any PRE scheme β and any PKE
scheme α, the proposed GHPRE scheme provides three new
algorithms, which are respective to generate re-encryption
keys, to re-encrypt the ciphertexts of β and to decrypt the
re-encrypted ciphertexts by an intended private key of α.
To complete this work, we have to overcome the following
challenges: (1) recently, there are many diﬀerent types of
both PRE and PKE schemes, and each type has diﬀerent
deﬁnitions. Obviously, it is impossible for us to construct
a GHPRE scheme for each pair of PRE and PKE schemes.
Therefore, before constructing the GHPRE scheme, we must
uniform the existing PRE and PKE deﬁnitions; (2) We re-
quire the constructed GHPRE scheme to be workable for
any PRE and PKE schemes. It implies that we must ab-
stract the common properties of the existing PRE and PKE
schemes at ﬁrst, and then only use these common properties
to construct the GHPRE scheme. Since these common prop-
erties are few, it makes the GHPRE scheme more diﬃcult
to be constructed.
1.2 Our Contributions
To solve the ﬁrst challenge, two general deﬁnitions of PRE
and PKE are respectively proposed. We summarize the
existing PRE and PKE schemes. According to the types
of public keys, the existing PRE schemes can be catego-
rized into four types: (1) the certiﬁcate-based PRE (CB-
PRE) schemes [7–11], (2) the identity-based PRE (IB-PRE)
schemes [12,13], (3) the certiﬁcate-less PRE (CL-PRE) sche-
mes [14, 15] and (4) the attribute-based PRE (AB-PRE)
schemes [16–18]. Furthermore, we ﬁnd that the diﬀerences
in concept among these four types of PRE schemes mainly
appear in their generation algorithm of public and private
keys. In order to uniform these deﬁnitions, we give a gen-
eral algorithm to deﬁne the generation of public and private
keys. In it, a pair of public and private keys is generated by
system parameters and an auxiliary information of a user.
To generally deﬁne PKE, we meet the same problem as for
PRE. So the similar treatment for PKE is also deﬁned as
PRE.
Our idea is with temporary (or one-time) public and pri-
vate keys to solve the second challenge. Let Cβ be an initial
PRE ciphertext of the PRE scheme β, let P Kβ be the pub-
lic key to generate Cβ, and let (P Kα, SKα) be a pair of
public and private keys of the PKE scheme α. In order to
re-encrypt Cβ into a new ciphertext that can be decrypted
by SKα, the proposed GHPRE scheme ﬁrst chooses a pair
of temporary public and private keys (P K t
β), secondly
β, SK t
employs the re-encryption algorithm of the PRE scheme β
to re-encrypt Cβ into a new ciphertext C(cid:48)
β that can be de-
crypted by SK t
β, and ﬁnally encrypts SK t
β by P Kα to gener-
ate ciphertext Cα. Given the ciphertext (C(cid:48)
β, Cα), it is easy
to ﬁnd that the private key SKα can decrypt this ciphertext
by sequentially decrypting Cα and C(cid:48)
β.
In the proposed GHPRE scheme, the re-encryption key
generation algorithm needs an interactive process between
a user and Key Generation Center (KGC). This interactive
process brings communication burdens. However, GHPRE
makes a good tradeoﬀ between performance and generality
by such scariﬁcations.
1.3 Organization
In Section 2, we propose two general deﬁnitions respec-
tively of PRE and PKE, and give their security deﬁnitions.
In Section 3, taking any PRE scheme and any PKE scheme
as building blocks, we construct the GHPRE scheme. Sec-
tion 4 analyzes the performance and generality of the GH-
PRE scheme in practice. Section 5 concludes this paper.
2. DEFINITIONS BOTH OF PKE AND PRE
In this section, we generally deﬁne PRE and PKE, and
their security deﬁnitions. Comparing with the traditional
deﬁnitions of PRE and PKE, the main diﬀerences are their
deﬁnitions on algorithm Extract, which is used to generate
a pair of public and private keys. The new deﬁnition of al-
gorithm Extract is compatible with the exiting deﬁnitions.
It takes the master public and secret parameters (generated
by algorithm Setup) and an auxiliary information as inputs,
where the auxiliary information consists of the intended type
of the generated public key and other parameters.
Definition 1. (PKE). Generally, a PKE scheme α con-
sists of the following algorithms:
• Setupα(1k) → (MPα, MSα) takes a security parame-
ter 1k as input, and initializes α by returning the mas-
ter public and secret parameters (MPα, MSα).
• Extractα(MPα, MSα, auxα) → (P Kα, SKα) takes
MPα, MSα and an auxiliary information auxα as
inputs, and returns a pair of public and private keys
(P Kα, SKα).
• Encα(MPα, P Kα, Mα) → Cα takes MPα, a public
key P Kα and a plaintext Mα as inputs, and returns a
ciphertext Cα.
• Decα(MPα, SKα, Cα) → Mα takes MPα, a private
key SKα and a ciphertext Cα as inputs, and returns a
plaintext Mα.
In addition, α must satisfy the consistency that for any
ciphertext Cα ← Encα(MPα, P Kα, Mα), if SKα is the cor-
responding private key of P Kα, then Decα(MPα, SKα, Cα)
outputs the plaintext Mα, except with a negligible probability
with security parameter 1k.
According to the above general deﬁnition of PKE, we
adaptively deﬁne its security that is indistinguishability un-
der chosen plaintext attacks (IND-CPA) of PKE. Comparing
with the traditional IND-CPA deﬁnition of PKE, the new
deﬁnition additionally allows any adversary to query public
914keys by issuing auxiliary information. Moreover, any adver-
sary must choose a queried public key as a challenge public
key that he wants to attack. The other details on the new
IND-CPA deﬁnition of PKE have the same essence with its
traditional deﬁnition.
Definition 2. (IND-CPA Security of PKE). We say
that a PKE scheme α is IND-CPA secure, if any probabilis-
tically polynomial time (PPT) adversary B only has a negli-
gible advantage AdvIN D-CP A
to win the following IND-CPA
game:
α,B
• Setup Phase: Challenger C runs Setupα(1k) → (
MPα, MSα) and sends MPα to adversary B. Let
Pα = ∅ be a table to record public and private keys.
• Query Phase 1: B adaptively makes the following
queries multiple times:
– Public Key Query QP Kα (auxα): B issues a
query (cid:104)auxα(cid:105) to C; C runs Extractα(MPα, MSα,
auxα) → (P Kα, SKα), records (P Kα, SKα) in
Pα, and returns P Kα to B.
– Private Key Query QSKα (P Kα): B issues a
query (cid:104)P Kα(cid:105) to C; C retrieves record (P Kα, SKα)
by P Kα from Pα and returns SKα to B if (P Kα,
∗) ∈ Pα, otherwise returns ⊥ to B. Note that
symbol ∗ in a record denotes an asterisk wildcard.
• Challenge Phase: B submits a challenge public key
α,1) to C,
α,∗) ∈ Pα, and B never queried the corre-
α in Query Phase 1. C
α,b ← Encα(MPα,
α,b to B, where b is randomly
P K∗
where (P K∗
sponding private key of P K∗
generates a challenge ciphertext C∗
P K∗
chosen in {0, 1}.
α and two challenge plaintexts (M∗
α,b) and sends C∗
α,0, M∗
α, M∗
• Query Phase 2: B continuously issues queries as in
Query Phase 1 with the restricts that the adversary
cannot query the corresponding private key of the chal-
lenge public key P K∗
α.
• Guess Phase: B outputs his guess b(cid:48) on b. We say
=
2| be the advantage of B to win this game.
that B wins the game if b(cid:48) = b. Let AdvIN D-CP A
|P r[b(cid:48) = b]− 1
α,B
Comparing with above general deﬁnition of PKE, the new
general deﬁnition of PRE also deﬁnes a similar algorithm
to generate public and private keys. Their diﬀerences are
that PRE additionally deﬁnes three algorithms, which are
respectively to generate a re-encryption key, to re-encrypt an
initial PRE ciphertext and to decrypt a re-encrypted PRE
ciphertext.
Definition 3. (PRE). Generally, a PRE scheme β con-
sists of the following algorithms:
• Setupβ(1k) → (MPβ, MSβ) takes a security parame-
ter 1k as input, and initializes β by returning the mas-
ter public and secret parameters (MPβ, MSβ).