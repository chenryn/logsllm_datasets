---
author: Jos Poortvliet
category: 观点
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 1
  viewnum: 3853
date: '2018-12-06 15:26:35'
editorchoice: false
excerpt: 为什么在工程中混合角色对用户更好的三个原因。
fromurl: https://opensource.com/article/18/8/mixing-roles-engineering
id: 10318
islctt: true
largepic: /data/attachment/album/201812/06/152638jli5ohrhtoth6i0q.png
permalink: /article-10318-1.html
pic: /data/attachment/album/201812/06/152638jli5ohrhtoth6i0q.png.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: 为什么在工程中混合角色对用户更好的三个原因。
tags:
- 开发
thumb: false
title: 混合软件开发角色效果更佳
titlepic: true
translator: lixinyuxx
updated: '2018-12-06 15:26:35'
---

大多数开源社区没有严格定义的角色。虽然有一些固定的人员负责系统管理、测试、文档编写和代码开发等任务，但这些成员通常会在不同的角色之间灵活转换，甚至同时承担多个职责。相比之下，传统公司的团队成员往往被赋予明确的角色，如文档编写者、技术支持专家或质量保证专员。

那么，为什么开源社区倾向于采用这种共享角色的方法？更重要的是，这种方法如何影响产品和用户体验？以[Nextcloud](https://nextcloud.com/)为例，我们已经看到这种协作方式为我们的客户和用户带来了诸多好处。

### 1. 更全面的产品测试

每个测试人员都知道，测试是一项极具挑战性的工作。它要求测试人员深入理解产品的功能，并设计、执行测试用例，然后将结果反馈给开发人员。此过程可能需要多次迭代，直到问题完全解决。

在开源社区中，贡献者通常会对他们参与的项目进行全面的测试和记录，确保其稳定性和可靠性后才会发布。用户也常常与开发人员合作，帮助进行测试、翻译和文档编写。这种紧密的合作关系形成了一个快速的反馈循环，从而加快了开发速度并提高了产品质量。

当开发人员直接面对他们的工作成果时，会更加注重减少错误和简化调试过程。自动化测试是开发中的重要组成部分，而高效的反馈机制则确保了自动化测试的正确实施。当然，开发人员也希望他人能分担一些测试任务，但在必要时，他们会主动承担起这些责任。此外，他们还会互相审查代码，因为他们知道问题如果遗留下来，最终会影响到自己。

因此，虽然我不认为完全取消专职测试人员是一个好主意，但对于缺乏社区志愿者测试的项目来说，测试人员应该是开发人员的一部分，并且要密切融入到开发团队中。这样做的结果是：客户得到的产品是由那些有动力确保其稳定性和可靠性的人员所开发和测试的。

### 2. 开发与客户需求之间的紧密协作

让产品开发与客户需求保持一致是非常困难的。每个客户都有独特的需求，既有短期目标也有长期愿景。作为一家公司，你对自己的发展方向也有自己的想法。那么，如何整合所有这些需求和愿景呢？

公司通常会设立专门的角色，如产品经理、技术支持和质量检测员，这些角色与工程和产品开发相分离。这一做法背后的逻辑是，人们在专攻某一领域时表现最佳，而工程师不应该被“简单”的任务（如测试或支持）所困扰。

实际上，这种角色分离主要是为了降低成本。它使管理层能够更好地控制全局，并通过产品管理来确定路线图项目的优先级。（这还增加了会议的数量！）

而在开源社区中，“决策权在于执行者”。开发人员通常是用户（或者由用户资助），因此他们自然地与用户的需求保持一致。当用户参与到测试过程中时（如上所述），开发人员会持续与他们合作，双方都能清楚地了解哪些是可行的，哪些是必需的。

这种开放的合作方式使得用户和项目能够紧密协作。在没有管理层干涉的情况下，用户最迫切的需求可以迅速得到满足，因为工程师已经非常了解这些需求。在 Nextcloud 中，客户无需反复解释问题，也不必依赖初级支持团队成员将问题准确传达给工程师。我们的工程师根据客户的实际需求不断调整优先级，同时基于对客户的深入了解，共同制定长期目标。

### 3. 最佳的支持服务

与专有软件供应商或开放核心(open core)供应商不同，开源供应商有强大的动力提供尽可能最好的支持：这是他们在生态系统中的关键区别。

为什么像 [Collabora](https://www.collaboraoffice.com/) 支持 [LibreOffice](https://www.libreoffice.org/)、[The Qt Company](https://www.qt.io/) 支持 [Qt](https://www.qt.io/developers/) 或 [Red Hat](https://www.redhat.com/en) 支持 [RHEL](https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux) 这样的公司是客户支持的最佳来源呢？

答案在于直接接触工程师。这些公司不仅不阻碍来自工程团队的支持，反而为客户提供了获取工程师专业知识的机会。这有助于确保客户始终尽快获得最佳解决方案。虽然某些工程师可能比其他人花费更多时间在支持上，但整个工程团队都在为客户的成功做出贡献。专有供应商可能会为客户提供昂贵的现场工程师服务，但像 [OpenNMS](https://www.opennms.org/en) 这样的开源公司可以在您的支持合同中提供相同级别的服务，即使您不是财富 500 强企业也是如此。

此外，这种共享角色的方式还有助于测试和客户协作：工程师每天都会处理客户的问题和需求，从而促使他们迅速解决最常见的问题。他们还会构建额外的工具和功能，以满足客户的期望。

简而言之，将质量检测、支持、产品管理和其他工程角色合并为一个团队，可以确保优秀开发人员的三大优点——简洁、高效和自信——与客户的需求紧密一致。

---
via: 
作者：[Jos Poortvliet](https://opensource.com/users/jospoortvliet) 选题：[lujun9972](https://github.com/lujun9972) 译者：[lixinyuxx](https://github.com/lixinyuxx) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出