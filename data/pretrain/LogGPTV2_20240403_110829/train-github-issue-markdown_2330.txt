_Original tickethttp://projects.scipy.org/scipy/ticket/728 on 2008-08-25 by
trac user jschrod3, assigned to @wnbell._
I'm using scipy version  
Out[4]: scipy.version.version  
Out[5]: '0.7.0.dev4561'
When I use the gmres routine from scipy.sparse.linalg, I cannot control its
maximum number of iterations through the maxiter variable, nor does the
"callback" routine ever seem to get called, so I can't track convergence.
I found this ticket,  
http://www.scipy.org/scipy/scipy/attachment/ticket/360/new_iterative_gmres.py  
which I was able to adapt to the current gmres (see attached modified
iterative.py) so that I can get access to residuals in gmres and track
convergence. However since maxiter is broken, gmres will sometimes iterate an
insane number of times before returning and my residual history can be about
10,000 values long for a 744x744 matrix. This also takes a long time, so that
doing automated numerical tests is not at all efficient. (note the 10,000
gmres iterations are what my research aims to fix. I'm well aware that a well-
preconditioned gmres call will terminate much sooner.)
Could gmres be extended so that it  
(1) uses maxiter  
(2) executes "callback(resid)" every full gmres iteration so that I can track
convergence?
These functionalities are critical if I'm to use gmres at all. I would imagine
that others are in my boat.
Thanks