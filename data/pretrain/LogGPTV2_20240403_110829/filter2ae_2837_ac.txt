除了`socat`, `iptables`可以通过 NAT 执行`dumb pipe`重定向。 要将转向器的本地端口80转发到远程主机，配置命令如下：
    iptables -I INPUT -p tcp -m tcp --dport 80 -j ACCEPT
    iptables -t nat -A PREROUTING -p tcp --dport 80 -j DNAT --to-destination :80
    iptables -t nat -A POSTROUTING -j MASQUERADE
    iptables -I FORWARD -j ACCEPT
    iptables -P FORWARD ACCEPT
    sysctl net.ipv4.ip_forward=1
#### 4.3.4 SSH 之 HTTP
我们之前已经介绍过使用`SSH`进行`DNS`隧道。 `SSH`作为一种坚实可靠的方式来突破`NAT`并获得种植体连接转向器和服务器环境的方式。
首先，你必须设置`GatewayPorts`转发，否则将无法正常使用：
    nano /etc/ssh/sshd_config
add
    GatewayPorts yes
要将转向器的本地端口 80 转发到你的内部服务器，命令如下：
    tmux new -S redir80
    ssh  -R *:80:localhost:80
    Ctrl+B, D
译者注：上面的命令第一和第三条非必须，这里作者使用`tmux`进行 Session 保持，`tmux new -S redir80`使用`tmux`开启一个
shell， `Ctrl+B, D`隐藏`tmux`操作界面, 使用`tmux ls`显示 Seesion。_
你也可以转发多个端口，例如：如果希望 443 和 80 一次全部打开：
    tmux new -S redir80443
    ssh  -R *:80:localhost:80 -R *:443:localhost:443
    Ctrl+B, D
#### 4.3.5 Payloads 与 Web 重定向
当我们的`Payloads`(服务)和网络资源开启时，我们希望降低被检测到的风险，同时希望无论是建立`C2`还是收集信息`payload`都能被高效的执行。
下面是 Jeff Dimmock 关于`Apache`的`mod_rewrite`的用法和示例：
  * [Strengthen Your Phishing with Apache mod_rewrite](https://bluescreenofjeff.com/2016-03-22-strengthen-your-phishing-with-apache-mod_rewrite-and-mobile-user-redirection/)
  * [Invalid URI Redirection with Apache mod_rewrite](https://bluescreenofjeff.com/2016-03-29-invalid-uri-redirection-with-apache-mod_rewrite/)
  * [Operating System Based Redirection with Apache mod_rewrite](https://bluescreenofjeff.com/2016-04-05-operating-system-based-redirection-with-apache-mod_rewrite/)
  * [Combatting Incident Responders with Apache mod_rewrite](https://bluescreenofjeff.com/2016-04-12-combatting-incident-responders-with-apache-mod_rewrite/)
  * [Expire Phishing Links with Apache RewriteMap](https://bluescreenofjeff.com/2016-04-19-expire-phishing-links-with-apache-rewritemap/)
  * [Apache mod_rewrite Grab Bag](https://bluescreenofjeff.com/2016-12-23-apache_mod_rewrite_grab_bag/)
  * [Serving Random Payloads with Apache mod_rewrite](https://bluescreenofjeff.com/2017-06-13-serving-random-payloads-with-apache-mod_rewrite/)
其他`Apache`的`mod_rewrite`的用法和示例：
  * [mod_rewrite rule to evade vendor sandboxes from Jason Lang @curi0usjack](https://gist.github.com/curi0usJack/971385e8334e189d93a6cb4671238b10)
  * [Serving random payloads with NGINX - Gist by jivoi](https://gist.github.com/jivoi/a33ace2e25515a31aa2ffbae246d98c9)
要在服务器上自动设置`Apache`的`mod_rewrite`重定向器，请查看 Julain Catrambone's（[@
n0pe_sled](https://twitter.com/n0pe_sled)) 博客文章[Mod_Rewrite Automatic
Setup](https://blog.inspired-sec.com/archive/2017/04/17/Mod-Rewrite-Automatic-Setup.html) 和 [accompanying tool](https://github.com/n0pe-sled/Apache2-Mod-Rewrite-Setup)。
#### 4.3.6 C2 重定向
重定向 C2 流量的意图有两方面：隐藏后端服务器；蒙蔽相关的调查者，让他们以为这是个合法网站。
通过使用`Apache`的`mod_rewrite`和[自定义C2配置文件](＃modification-c2-traffic)或其他代理（比如使用Flask），我们可以高效的过滤出来自调查
C2 的真实流量。
  * [Cobalt Strike HTTP C2 Redirectors with Apache mod_rewrite - Jeff Dimmock](https://bluescreenofjeff.com/2016-06-28-cobalt-strike-http-c2-redirectors-with-apache-mod_rewrite/)
  * [Securing your Empire C2 with Apache mod_rewrite - Gabriel Mathenge (@_theVIVI)](https://thevivi.net/2017/11/03/securing-your-empire-c2-with-apache-mod_rewrite/)
  * [Expand Your Horizon Red Team – Modern SAAS C2 - Alex Rymdeko-Harvey (@killswitch-gui)](https://cybersyndicates.com/2017/04/expand-your-horizon-red-team/)
  * [Hybrid Cobalt Strike Redirectors](https://zachgrace.com/2018/02/20/cobalt_strike_redirectors.html) \- [Zach Grace (@ztgrace)](https://twitter.com/ztgrace) and [@m0ther_](https://twitter.com/m0ther_)
##### C2 使用 HTTPS 重定向
基于上述
“C2重定向”，另一种方法是可以在重定向服务器使用`Apache`的`SSL`代理引擎来接受入站`SSL`请求，并将这些请求代理到`HTTPS`反向侦听器上。
整个阶段使用加密，你可以根据需要在转向器上转发`SSL`证书。
假如你已经使用了LetsEncrypt（aka CertBot），为了使你的`mod_rewrite`规则能够工作，你需要在
**“/etc/apache2/sites-available/000-default-le-ssl.conf”** 安装配置你的证书。
另外，要启用`SSL ProxyPass`引擎，相关配置如下：
    # Enable the Proxy Engine
    SSLProxyEngine On
    # Tell the Proxy Engine where to forward your requests
    ProxyPass / https://DESTINATION_C2_URL:443/
    ProxyPassReverse / https://DESTINATION_C2_URL:443/
    # Disable Cert checking, useful if you're using a self-signed cert
    SSLProxyCheckPeerCN off
    SSLProxyCheckPeerName off
    SSLProxyCheckPeerExpire off
#### 4.3.7 其他 Apache mod_rewrite 资源
  * [Automating Apache mod_rewrite and Cobalt Strike Profiles](https://posts.specterops.io/automating-apache-mod-rewrite-and-cobalt-strike-malleable-c2-profiles-d45266ca642)
  * [mod-rewrite-cheatsheet.com](http://mod-rewrite-cheatsheet.com/)
  * [Official Apache 2.4 mod_rewrite Documentation](http://httpd.apache.org/docs/current/rewrite/)
  * [Apache mod_rewrite Introduction](https://httpd.apache.org/docs/2.4/en/rewrite/intro.html)
  * [An In-Depth Guide to mod_rewrite for Apache](http://code.tutsplus.com/tutorials/an-in-depth-guide-to-mod_rewrite-for-apache--net-6708)
  * [Mod_Rewrite/.htaccess Syntax Checker](http://www.htaccesscheck.com/)
## 五、修改 C2 流量
### 5.1 Cobalt Strike
`Cobalt Strike`通过`Malleable C2`配置文件修改其流量。
配置文件提供了高度可定制的选项，用于修改服务器的`C2`流量在线路上的形式。 `Malleable
C2`配置文件可增加强事件响应的规避，使用的合法内部应用程序冒充已知对手或伪装目标。
  * [Malleable C2 Profiles - GitHub](https://github.com/rsmudge/Malleable-C2-Profiles)
  * [Malleable Command and Control Documentation - cobaltstrike.com](https://www.cobaltstrike.com/help-malleable-c2)
  * [Cobalt Strike 2.0 - Malleable Command and Control - Raphael Mudge](http://blog.cobaltstrike.com/2014/07/16/malleable-command-and-control/)
  * [Cobalt Strike 3.6 - A Path for Privilege Escalation - Raphael Mudge](http://blog.cobaltstrike.com/2016/12/08/cobalt-strike-3-6-a-path-for-privilege-escalation/)
  * [A Brave New World: Malleable C2 - Will Schroeder (@harmj0y)](http://www.harmj0y.net/blog/redteaming/a-brave-new-world-malleable-c2/)
  * [How to Write Malleable C2 Profiles for Cobalt Strike - Jeff Dimmock](https://bluescreenofjeff.com/2017-01-24-how-to-write-malleable-c2-profiles-for-cobalt-strike/)
### 5.2 Empire
`Empire`可以用使用`Communication Profile`定制配置，它可以提供对 URI、User-Agent、Header定制选项。
profile 文件由每个由管道符(|)分隔元素，并使用`listeners`上下文菜单中的`set DefaultProfile`进行设置。
以下是一个示例 Profile：
    "/CWoNaJLBo/VTNeWw11212/|Mozilla/4.0 (compatible; MSIE 6.0;Windows NT 5.1)|Accept:image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*|Accept-Language:en-en"
`DefaultProfile`的值可以通过`Empire`的初始化之前修改`/setup/setup_database.py`来设置。除通过`Communication
Profile`之外，你可以考虑按照Joe
Vest's([@joevest](https://twitter.com/joevest))发布的步骤定制`Empire`服务器的
URI、服务器头和默认网页内容[Empire - Modifying Server C2
Indicators](http://threatexpress.com/2017/05/empire-modifying-server-c2-indicators/)。
  * [Default Empire Communication Profiles (in Empire GitHub repo)](https://github.com/EmpireProject/Empire/tree/master/data/profiles)
  * [How to Make Communication Profiles for Empire - Jeff Dimmock](https://bluescreenofjeff.com/2017-03-01-how-to-make-communication-profiles-for-empire/)
## 六、第三方 C2 频道
自己创建一个可信的合法化的 Web
服务用于`C2`，这需要你有足够的相关知识储备，而且使用的技术越来越复杂，运维管理的时间也越来越高。这里介绍一种利用第三方服务`Domain
Fronting`进行`C2`重定向。
### 6.1 Domain Fronting
`Domain Fronting`是一种被审查制度规避服务和应用程序用于通过合法和高度信任的域进行流量传输的技术。 支持`Domain
Fronting`的热门服务包括[Google App
Engine](https://cloud.google.com/appengine/)、[Amazon
CloudFront](https://aws.amazon.com/cloudfront/)和[Microsoft
Azure](https://azure.microsoft.com/)。 简而言之，流量使用受信任的服务提供商的`DNS`和`SNI`名称。拿
Google
举一个例子，当边缘服务器接收到流量时（例如：位于gmail.com）数据将被转发到数据包的主机头中指定的原始服务器（例如：phish.appspot.com），根据服务提供商的不同，原始服务器会直接将流量转发到指定的域，这里可以是我们的(C2)服务器或者使用代理应用来执行最终跳转。
有关`Domain Fronting`工作原理的更多详细信息，请参阅白皮书[Blocking-resistant communication through
domain fronting](https://www.bamsoftware.com/papers/fronting/)和TOR项目[meek
documentation](https://trac.torproject.org/projects/tor/wiki/doc/meek)。除了标准的
frontable 域名（如任何google.com域名）之外，还可以利用其他合法域名作为前端。
有关前沿领域的更多信息，请查看：
  * [Domain Fronting via Cloudfront Alternate Domains - Vincent Yiu (@vysecurity)](https://www.mdsec.co.uk/2017/02/domain-fronting-via-cloudfront-alternate-domains/)
  * [Finding Domain frontable Azure domains - thoth / Fionnbharr (@a_profligate)](https://theobsidiantower.com/2017/07/24/d0a7cfceedc42bdf3a36f2926bd52863ef28befc.html)
  * [Google Groups: Blog post on finding 2000+ Azure domains using Censys](https://groups.google.com/forum/#!topic/traffic-obf/7ygIXCPebwQ)
  * [FindFrontableDomains tool - Steve Borosh (@rvrsh3ll)](https://github.com/rvrsh3ll/FindFrontableDomains)
#### 关于 Domain Fronting 更多资讯
  * [Simplifying Domain Fronting - Tim Malcomvetter (@malcomvetter)](https://medium.com/@malcomvetter/simplifying-domain-fronting-8d23dcb694a0)
  * [High-reputation Redirectors and Domain Fronting - Raphael Mudge](https://blog.cobaltstrike.com/2017/02/06/high-reputation-redirectors-and-domain-fronting/)
  * [Empire Domain Fronting - Chris Ross (@xorrior)](https://www.xorrior.com/Empire-Domain-Fronting/)