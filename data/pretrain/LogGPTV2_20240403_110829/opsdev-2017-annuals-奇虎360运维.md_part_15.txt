结合实际国情，找到切实可行的方法。
技。IT界如果是江湖的话，谷歌就像是少林派，有一种天下武功出少林的气派。
系数据库，谷歌的技术在IT 领域可以说是标杆。
谷歌神话
软件工程师来解决复杂运维问题。它里面有很多有意思的点，比如：
SRE
觉收获颇多，结合自己的工作经历和书中的要点，写一些感悟和思考。
法宝。
了以后其它企业开始实践还需要2-3年，等到你把这些实现了，谷歌又不知道实现了什么黑科
■读SREGOOGLE运维解密有感（一）
 Mar. 7th 2017 BY 许斯亮
运维开发
那么首先我劝你先冷静一下，它并不是一个万能的解药，要先考虑下你的公司现状问题，
有个传说是谷歌内部使用的系统一般 2-3 年以后才会出相关论文或者开源版本实现，出来
谷歌一直在技术领域处于世界领先位置，从 bigtable 的三篇论文，开源的 k8s，分布式关
有关 SRE 我就不多介绍了，中文名字叫站点可靠性工程师，它的由来是 Google 想通过
我为什么这么说呢？请往下看。
或许你也在读这本书，你也想在内部尝试SRE 的一些方法和思想。
所以SRE这本书自带光环，很多人都觉得这是运维圣经，觉得这是拯救运维领域的不二
这些相关概念网上很多都介绍了，我就不赘述了，我说下一些我感兴趣的点。
·SRE 和开发工程师会轮岗
这几天打算利用碎片时间读了一下"SRE Google 运维解密"这本书，目前读了前几章，感
●另外50%要开发工具解决问题
●运维工作只能占比工作时间 50%
运维开发－读SREGoogle运维解密有感（一）111
---
## Page 117
tobuf。
可以动态带宽管理优化网络连接。
个人一样，谷歌的基础设施就是这个人的肌肉，有了强劲的肌肉才能跑得快，跳得高。
谷歌的肌肉
（开源实现是Prometheus）
112读SREGoogle运维解密有感（一）－运维开发
这些完善的基础设施，给 SRE中的方法和思想做了强有力的支撑。
通过各个层面的负载均衡将用户流量导向健康的服务上面。
GSLB和BNS
所有谷歌服务之间使用 RPC 通信，称为 Stubby（开源实现 gRPC），传输格式是 Pro-
Borgmon从监控对象抓取监控指标，
监控和报警
Chubby提供一个可以处理异地，跨机房级别锁请求的集群锁服务。
·Spanner 分布式的关系型数据库
·Bigtable 松散存储的，分布式，有顺序，持久化的 NoSQL 数据库
使用 Borg 负责在集群层面管理任务编排工作。
调度系统
谷歌基于自研的交换机 Clos，使用 SDN 技术，确保每个数据中心可提供海量带宽，并且
首先本书一开始简单说了下SRE的思想和方法论，然后介绍了谷歌的基础设施，就好像一
·RPC层面负载均衡
·用户服务层面负载均衡
·利用地理位置进行负载均衡DNS 请求
RPC
分布式锁
·Colossus GFS 文件系统的改进白本
在物理机设施（磁盘）上构建了一套简单可用，可靠的集群存储服务。
存储
网络设施
这些指标可以用来触发报警也可以存储起来供观看。
---
## Page 118
预估的用户数，产品发版周期，使用带宽等。
准就需要进行优化。
目的，合理的接受它，确保它在SL〇 标准的范围内，高于这个标准会浪费人力和成本，低于这个标
特性，产品处于的阶段制定。
不断变化和创新，SLO 级别可以放低。
所以它的 SLO 级别必须很高。
服务都是99.999999，要针对业务的不通特性制定不同的SLO。
统是肯定要出故障的。
规划业务到底应该 3 个 9 还是 4 个 9。
生成就感，感觉干的还不赖。可是并没有进一步去思考一下，故障存在的意义。
我们可能还会开“事故总结会”，优化流程和工具。
有一个重要任务是确保服务的稳定，换句话说就是没有故障。
评判一个服务要达成的服务质量。
故障不是洪水猛兽
有”
SL〇 的制定很大程度在于各个团队之间的协商，大家都有基于数据的科学评判方法，比如产品
SLO的制定通常是产品经理，开发团队和 SRE一起协商完成的，大家根据业务的规模，产品
SRE中说到一句话“100%稳定的系统是不存在的”，它把这个做为一个前提，那也意味着系
SRE 中定义了一个概念叫 SLO(Service Level Objectives,服务质量目标)，通过 SLO 合理
SL〇的制定，我觉得就是科学的面对“故障”这个问题，故障不可避免，不应该以消灭故障为
比如：
SLO就是用来解决这个事情的，首先服务的故障不可避免，
我们常见的所谓“99.9%”，
，“故障必须消除”，我们耗费很大精力“消除了一切故障”，系统平稳运行了，自己也会萌
其实我们很多时候对于“故障”的理解是简单粗暴的，从一线员工到老板们都认为“故障不能
所以我们或多或少谈到“故障”就会色变，遇到故障马上第一时间解决，为了避免下次还出现
首先我先说下“故障”这个词，这个词对运维人员来说，是非常不想听到和遇到的。运维人员
谷歌的企业服务，针对企业用户是有签署服务中断赔偿协议的，那么稳定性要求很高，
谷歌的Youtube（当时），针对终端用户且版本迭代很快，业务在
“99.99%”的服务可用性，但是并没有使用科学方法来分析和
运维开发－读SREGoogle运维解密有感（一）113
，每个服务的级别不同，不可能所有
---
## Page 119
谷歌“健壮的肌肉”之上，建立在科学评估（非人治）之上，我们可以从中学习，也要冷静思
结语
，或者重新制定 SLO等级。
要频繁的变更的，可能SLO 等级就会低一些。
稳定的，问题往往出现在变更上。
考
障，只要故障在SL〇范围内就是可接受的，节省出很多精力用在更重要的事情上。
，可以计算一下需要的成本和带来的收益，如果得不偿失就可以不用增加SL〇 等级。
倍10O 倍的成本，通过 SLO让成本和收益取得很好的平衡，假设一个业务想要增加 SLO 等级
SLO 解决的问题
无限，没有科学的进行评估。
114 读SRE Google运维解密有感（一）－运维开发
SRE Google 运维解密是非常好的一本书，它是谷歌运维体系的结晶，但是它也是建立在
这样就解决了业务既要“稳定”又要“创新“的矛盾。
反之，如果变更太频繁，
这样在满足业务创新的需求上，只要在 SL〇 范围内，就认为业务是稳定的。
通过 SLO 很好的解决了这个矛盾，我们先一起给这个业务制定好 SL〇 的等级，如果是需
矛盾因此产生了。
开发会说：我们得变更，这样才有新功能，才能获取更多用户啊。
这个时候运维会说：别做变更了，稳定是第一位的，出了故障，我们得背锅。
可是一个新业务往往需要大量变更，不停的迭代创新。
大家都知道运维工程师最不喜欢的就是“线上变更”，一个服务如果不做变更一般都是很
稳定和创新的矛盾
有了SLO，对于运维工作有了可量化的标准，运维工程师不用每天提心吊胆，生怕出现故
科学的运维
大家都知道维护服务可用性的成本不是线性增长的，到一定程度，增加一个9可能需要10
成本和收益的矛盾
通过这样一个SL〇，之前很多令人头疼的问题就迎刃而解了。
中国的国情更多的是拍脑袋，老板的态度，上面的一句话“不能有事故”，那就是99.999
使故障率超出了 SLO可接受的范围，可以要求开发调低变更频率
---
## Page 120
本文链接：https://opsdev.cn/post/sre-read-and-think-1.htm
这是SRE读后感第一篇，后续再读几章，再写点。
运维开发－读SREGoogle运维解密有感（一）115
---
## Page 121
为琐事也有好处，比如可以适当的减压，因为做起来不用过多的思考，可以作为创造性工作的
假象，让调用方感受到“原来没有那么稳定”
务依赖于它，但是工程师们认为它还是有缺陷，有问题隐患，而在一段时间内它的表现还异常
为“在内部程序质量没有达到一定标准，服务太稳定会产生盲目的依赖”。
么”
在充满辩证的思想。
充满辩证的思想
SRE 充满辩证的思想，总之 SRE是好一本好书，会给你很大的启发。
I读SREGOOGLE运维解密有感（二）
一种调剂，从中也能发现需要优化的问题。
为它把你的时间碎片化了，使工作没有效率。SRE 有很大篇幅讨论了琐事（toil）的问题，它认
成了稳定的假象，一旦出了问题，可能就是大地震。
好处，也会有坏处，它会被外界过度依赖，大家用的很开心，可是这个系统如果还有隐患，造
稳定，这样就给调用方一种错觉，这个服务很好，越来越多的服务依赖于它。
1 Mar. 7th 2017 BY 许斯亮
116 读SRE Google运维解密有感（二）－运维开发
这就是一种辩证的思想，我们一直以来都想追求绝对的稳定，没有辩证的看稳定的系统有
于是，谷歌干了一件“不可思议”的事情，对chubby 计划内停止服务，捅破这种稳定的
，可是面对具体问题的时候，有时候往往做不到这一点。
本书主要是讲通过 SRE 思想进行运维体系的构建，除了技术层面以外，我更关注 SRE 内
工作中的琐事是指那么“无聊”，
琐事也有好处
它举了一个例子，谷歌的chubby 锁服务，它是一个基础服务，作为基础组件很多上层服
这本书最近又读了几章，结合自己的经历，有些地方真的能感同身受，有些地方也惊叹
当然SRE还是在尽量减少琐事，它的坏处还是多于好处。
“什么？我有没有听错”，
服务太稳定不好
一个辩证的思想是凡事都有两面性，这个道理很简单，大家一听就说“对啊，这不是废话
，一直以来运维人员所追求的不就是稳定的服务么？可是谷歌认
“无效率”
，这样减少了对 chubby 的过度依赖。
“流程化”的事情，很多人都很抵触，认
---
## Page 122
问题，影响了业务的访问，通过这次演习他们发现了流程的问题，问题及时修复避免了隐患。
系统。
解，无法很快进行修复。
悉程度越来越少，他只会执行这个脚本，那么这个脚本一旦出问题，因为缺少对线上环境的了
原理，只要运行就好了，对于他来讲是一件很开心的事，可是带来的副作用是他对于线上的熟
流程，我们恨不得完全自动化早一天到来，怎么还能有坏处？
代码的精简。
的api入口，我们常常为了以后的扩展性，预先加入很多冗余功能代码，谷歌反其道而行，鼓励
目，设置非常详细的监控策略，这些监控项不一定真的有意义，反而会带来大量的干扰报警。
指标：
书中的一个例子是随机的关闭一个数据库实例，看看会有什么问题，然后真的出现了一些
谷歌会定期举行故障演习，而且他们是真的在线上演练。
故障演习
体会到了自动化带来的负面作用，谷歌希望使用自洽的方案解决问题，这样才诞生了Borg
 自动化的坏处在于，对于一个运维工程师来讲，操作变成黑盒了，他不用明白一个脚本的
在运维领域，自动化运维是很多公司的目标，我们认为运维自动化，减少人力，规范操作
自动化的坏处
每一行代码都是负担，所有代码都必须有存在的目的，软件工程少就是多!
“什么？我没有听错？自动化会有坏处“，是的，谷歌认为运维自动化是有坏处的。
在代码层面也遵循少即是多的原则，无用的代码，大量冗余的注释都要删除掉，提供简单
通过这四个指标，基本可涵盖大部分问题，设置监控项的时候，我们往往生怕漏掉某个项
·饱和度
·错误
·流量
·延迟
谷歌追求一种简单，有效的解决方案，比如监控项不是越多越好，它列出监控的4个黄金
少即是多
运维开发－读SREGoogle运维解密有感（二）117
---
## Page 123
本文链接：https://opsdev.cn/post/sre-read-and-think-2.html
结语
所以谷歌的思想是：
SRE不仅是一些运维的方法论，它的辩证看问题的思想值得我们学习。
118读SRE Google运维解密有感（二）－运维开发
先写这么多，我得去搬砖了。
的测试时出现故障呢？
你是希望系统在星期六凌晨2点，公司大部分同事还在参加黑森林中的团建时出
口
扫
5:5
查看文章详情
日
---
## Page 124
团队现有情况了解不多，害怕自己搞不定。其实大可不必这样，个人认为值班同学更多的是一
在有效时间内能联系到你。
理，所以很多运维团队的工作必须是7x24 小时的。
运维同学“又爱又恨”的值班。
值班，对运维值班体系也有一些感悟和心得，再参考SRE的“oncall”中的方法来说说这个让
I读SREGOOGLE运维解密有感（三）
家”，而拖慢处理问题的时间，解决问题是最重要的。
个“接口人”的角色，如果遇到自己搞不定的事情，可以向多方位的求助，切忌担心“影响大
电脑和VPN设备戴在身上，能时刻保证处理线上问题，夜里正常休息（但是别睡太死），保证
间值守，事情和需求相对比较少。
如何值班
值班
因为运维人员的工作性质，要时刻保障线上服务的稳定可用，遇到事故问题要第一时间处
我们今天来聊聊“oncall”也就是运维值班制度，本人到目前为止也还在参与一线运维的
I Jul. 2nd 2017 BY 许斯亮
3．不要有过大的心里压力，遇到问题你才能成长。
2．遇到问题尽量自己解决，解决不了要尽快求助。
1．保障手机畅通，电脑和VPN 在身边。
所以如果你是刚刚加入值班的同学，请注意以下几点：
所以值班同学更多的是在“stand by”就是“时刻准备着”，不一定真的处理多少问题。
值班人员也不一定强制要求在公司，他只要保证手机畅通，出了问题马上能联系到你，把
一般情况下，值班人员数量不需要太多，一个周期内基本会是一个，因为他是在非工作时
运维开发－读SRE Google运维解密有感（三）119
---
## Page 125
是多一份保障，问题处理更加高效。
都会影响问题的解决。如果是两个人值班，如上面所说，可能出现“互相推”问题，好处就
一个人值班，很大的好处是责任明确，值班人“责无旁贷”，他只能靠自己响应和处理问题，
值班中的问题
还是可以让值班工作变得轻松的，下面会重点探讨。
班的时候部门去TB爬山，值班的同学可能要背着电脑爬。
事情的时候，你是可以做自己想做的事情，但是你要保障自己的活动能随时被打断，比如你值