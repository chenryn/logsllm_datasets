# 【技术分享】利用任天堂6502处理器指令对桌面版Linux系统进行漏洞利用

## 译文声明
本文是翻译文章，原文来源：scarybeastsecurity.blogspot.com  
原文地址：[https://scarybeastsecurity.blogspot.com/2016/11/0day-exploit-compromising-linux-desktop.html](https://scarybeastsecurity.blogspot.com/2016/11/0day-exploit-compromising-linux-desktop.html)  
译文仅供参考，具体内容和含义以原文为准。

**翻译：** [babyimonfire](http://bobao.360.cn/member/contribute?uid=2815007941)  
**预估稿费：260RMB**  
**投稿方式：发送邮件至 [linwei#360.cn](mailto:linwei#360.cn)，或登录 [网页版](http://bobao.360.cn/contribute/index) 在线投稿**

## 概览
gstreamer 0.10.x 版本在播放 NSF 格式的音乐文件时存在一个漏洞和逻辑错误。两者结合可以实现非常稳定的漏洞利用方法，并且能够绕过 64 位 ASLR 和 DEP 等安全机制。该漏洞之所以稳定，是因为音乐播放器提供了一种图灵完备的“脚本语言”。NSF 文件是任天堂游戏机中的音乐文件格式。接下来我们将详细介绍这个漏洞。

## 漏洞演示及受影响的发行版本
下图展示了触发该漏洞的一个截图。值得注意的是，触发漏洞并不需要用户主动打开恶意文件——只需访问包含恶意文件的目录即可。你可以从 [exploit_ubuntu_12.04.5_xcalc.nsf](exploit_ubuntu_12.04.5_xcalc.nsf) 下载这个文件。在上图中，文件被重命名为“time_bomb.mp3”，稍后会解释原因。

从文件名可以看出，该漏洞可以在 Ubuntu 12.04.5 中被利用。这是一个较老但仍然有官方支持的发行版本。此外，该 PoC（概念验证）代码可在未更新的 Ubuntu 12.04.5 上直接执行。如果你进行了全部更新，新版本的 glibc 可能会导致一些代码偏移量发生变化，从而使 PoC 失效。不过，读者可以通过编写新的 PoC 代码来适配任意版本的 glibc。

漏洞存在于 gstreamer-0.10 版本的音频解码器 libgstnsf.so 中。Ubuntu 12.04 使用 gstreamer-0.10 处理所有音频需求。Ubuntu 14.04 同样受到影响，因为 gstreamer-0.10 是默认安装的，尽管大多数多媒体软件使用 gstreamer-1.0 进行处理。目前尚不清楚在哪些情况下 Ubuntu 14.04 会使用存在漏洞的 gstreamer-0.10 进行媒体处理。Ubuntu 16.04 默认只安装了 gstreamer-1.0，因此不受此漏洞影响。

这个漏洞存在于所谓的“默认”安装中。在 Ubuntu 系统安装时，会出现提示：“是否希望支持 MP3 文件？”选择“是”后，许多额外的包将被安装，包括 gstreamer0.10-plugins-bad，其中就包含了 libgstnsf.so。

### 0day？还有 PoC？
是的，这是 0day 漏洞。作为一个学习实验，我未来公开的大部分漏洞都会是 0day。我在所谓的“协作公开”过程中积累了大量经验，即让收到漏洞预警的厂商花费必要的时间进行修复（例如，我曾等待苹果公司修复 Safari 浏览器漏洞长达一年）。而在“全面公开”方面，即厂商和公众同时获取到漏洞细节，我的经验相对较少。我认为，“协作公开”和“全面公开”之间的正确平衡在于妥协。Project Zero 的 90 天期限策略似乎很好地实现了这一妥协，并有大量的数据支持这一策略。

不必担心，这个 0day 并不严重，只影响非常老的 Linux 发行版本（如上述）。这个 0day 更多是为了好玩而不是造成实际影响。未来的 0day 可能会有更广泛的影响。;-)

### 关于 0day 的哲学问题
如果补丁和 0day 同时发布，那还能算是 0day 吗？以下是针对 Ubuntu 12.04 的补丁：
```bash
sudo rm /usr/lib/x86_64-linux-gnu/gstreamer-0.10/libgstnsf.so
```
乍一看，这个“补丁”似乎是直接删除了功能，但实际上并非如此。你的 NSF 文件仍然可以播放。Ubuntu 12 和 14 为了播放 NSF 文件都加载了两个不同的库。第二个基于 libgme 的 NSF 播放器没有像第一个播放器那样存在该漏洞。

## 攻击面
这个漏洞利用了 gstreamer-0.10 中播放 NSF 音乐文件的插件。这些 NSF 音乐文件与大多数系统上的音乐文件不同。典型的音乐文件是通过数学计算进行压缩和解码的，而 NSF 音乐文件则是通过实时模拟任天堂（NES）CPU 和音频硬件来播放的。gstreamer 插件创建了一个虚拟的 6502 CPU 环境，通过运行 6502 指令并读取虚拟音频硬件寄存器中的结果来实现音频播放。

如果你对播放 NSF 文件感兴趣，可以下载这个文件：cv2.nsf，这是恶魔城2 游戏中的音频文件。你还可以通过搜索“nsf music files”等关键字找到类似的音频文件。如果你的桌面版 Linux 支持 NSF 文件，你可以通过执行命令（如 `totem cv2.nsf`）来播放。这个文件只有 17,264 字节，对于其中包含的音频数量来说显得很小，但这足以容纳一些小程序通过向基本的 NES 硬件发出序列请求来发出一系列简单的声音。

### 实现漏洞利用的方法
- **通过邮件附件形式发送**：如果目标用户下载并打开了附件，就会受到攻击。需要注意的是，为了让恶意文件正常执行，你可能需要将 exploit.nsf 重命名为 exploit.mp3。因为大多数桌面版 Linux 系统无法识别 NSF 文件类型，但会将 MP3 文件的字节序列传递给媒体播放器。大多数基于 gstreamer 的播放器会忽略文件扩展名，而是根据自动检测出的文件格式选择合适的解码器。
- **部分路过式下载**：利用谷歌 Chrome 浏览器的文件下载 UX（用户体验），当访问一个陷阱网页时，可能会将恶意文件直接转储到目标用户的下载文件夹中。当用户通过文件管理器（如 nautilus）浏览该下载文件夹时，系统会自动尝试为已知扩展名的文件生成缩略图（因此需要将恶意 NSF 文件重命名为 .mp3）。生成缩略图时会触发该漏洞。
- **完整路过式下载**：同样利用谷歌 Chrome 浏览器的下载 UX，有一种方法可以实现完整的路过式下载漏洞利用，具体方法将在另一篇博文中描述。
- **基于 USB 设备**：打开 USB 存储设备时，系统仍会自动生成已知扩展名文件的缩略图，同上。

## 6502 CPU 介绍及任天堂 ROM 加载和分页崩溃过程
6502 CPU 本身是一个传奇，被广泛应用于多个传奇系统中，如任天堂、Commodore 64 和 BBC Micro。这是一款 8 位 CPU，具有 16 位寻址能力，拥有 64KB 的地址空间。在任天堂应用中，高 32KB 的地址空间（0x8000 – 0xffff）保留给 ROM，即插入的游戏卡中的只读数据。

现在有一个有趣的问题：如果你想制作一个大于 32KB 的游戏怎么办？例如，你有一个 16 关的游戏，每一关都有 16KB 的视频和音频数据。那么 32KB 的空间显然是不够的。为了解决这个问题，出现了“库（bank）”和“库切换（banks switching）”的概念。所谓库，就是 ROM 上一块对齐、连续的 4KB 区域。一共有 8 个库，分布在 6502 地址 0x8000 – 0xffff 上。每个库都可以映射为游戏卡 ROM（可以远大于 32KB）上一个连续、对齐的 4KB 区域。在运行时，任天堂程序可以对魔法内存（magic memory）位置（0x5ff8 – 0x5fff）进行写操作。这一位置包含控制将 ROM 中哪一部分映射到哪个库中的硬件寄存器。

例如：如果 6502 CPU 向 0x5ff9 写入数值 10，那么 6502 内存位置 0x9000 – 0x9fff 就会被映射为游戏卡 ROM 中索引（10*4096）处。

### 漏洞
1. **在映射到 6502 内存和库切换时，缺少对 ROM 大小的检查**（此处没有 CVE，可以当做是 CESA-2016-0001）

在提到的 ROM 映射过程中，几乎没有边界检查。不仅在初始加载 ROM 时如此，后续的一系列库切换操作也同样缺乏边界检查。所有对 ROM 映射的处理都在 gst-plugins-bad/gst/nsf.c 中，包括：

```c
nsf_bankswitch (uint32 address, uint8 value)
{
    ...
    cpu_page = address & 0x0F;
    roffset = -(cur_nsf->load_addr & 0x0FFF) + ((int) value * 4096);
    cur_nsf->rom + roffset;
}
```

通过这种方式，攻击者可以利用该漏洞实现远程代码执行或其他恶意行为。