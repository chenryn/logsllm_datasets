title:The Practical Subtleties of Biometric Key Generation
author:Lucas Ballard and
Seny Kamara and
Michael K. Reiter
The Practical Subtleties of Biometric Key Generation
Lucas Ballard
Seny Kamara
Department of Computer Science
The Johns Hopkins University
Department of Computer Science
The Johns Hopkins University
Michael K. Reiter
Department of Computer Science
University of North Carolina at Chapel Hill
Abstract
The inability of humans to generate and remember strong
secrets makes it difﬁcult for people to manage crypto-
graphic keys. To address this problem, numerous pro-
posals have been suggested to enable a human to repeat-
ably generate a cryptographic key from her biometrics,
where the strength of the key rests on the assumption
that the measured biometrics have high entropy across
the population. In this paper we show that, despite the
fact that several researchers have examined the security
of BKGs, the common techniques used to argue the se-
curity of practical systems are lacking. To address this
issue we reexamine two well known, yet sometimes mis-
understood, security requirements. We also present an-
other that we believe has not received adequate attention
in the literature, but is essential for practical biometric
key generators. To demonstrate that each requirement
has signiﬁcant importance, we analyze three published
schemes, and point out deﬁciencies in each. For exam-
ple, in one case we show that failing to meet a require-
ment results in a construction where an attacker has a
22% chance of ﬁnding ostensibly 43-bit keys on her ﬁrst
guess. In another we show how an attacker who com-
promises a user’s cryptographic key can then infer that
user’s biometric, thus revealing any other key generated
using that biometric. We hope that by examining the pit-
falls that occur continuously in the literature, we enable
researchers and practitioners to more accurately analyze
proposed constructions.
1
Introduction
While cryptographic applications vary widely in terms of
assumptions, constructions, and goals, all require crypto-
graphic keys. In cases where a computer should not be
trusted to protect cryptographic keys—as in laptop ﬁle
encryption, where keeping the key on the laptop obvi-
ates the utility of the ﬁle encryption—the key must be
input by its human operator. It is well known, however,
that humans have difﬁculty choosing and remembering
strong secrets (e.g., [2, 14]). As a result, researchers have
devoted signiﬁcant effort to ﬁnding input that has sufﬁ-
cient unpredictability to be used in cryptographic appli-
cations, but that remains easy for humans to regenerate
reliably. One of the more promising suggestions in this
direction are biometrics—characteristics of human phys-
iology or behavior. Biometrics are attractive as a means
for key generation as they are easily reproducible by the
legitimate user, yet potentially difﬁcult for an adversary
to guess.
There have been numerous proposals for generating
cryptographic keys from biometrics (e.g., [33, 34, 28]).
At a high level, these Biometric Cryptographic Key Gen-
erators, or BKGs, follow a similar design: during an en-
rollment phase, biometric samples from a user are col-
lected; statistical functions, or features, are applied to the
samples; and some representation of the output of these
features is stored in a data structure called a biometric
template. Later, the same user can present another sam-
ple, which is processed with the stored template to repro-
duce a key. A different user, however, should be unable
to produce that key. Since the template itself is generally
stored where the key is used (e.g., in a laptop ﬁle encryp-
tion application, on the laptop), a template must not leak
any information about the key that it is used to recon-
struct. That is, the threat model admits the capture of the
template by the adversary; otherwise the template could
be the cryptographic key itself, and biometrics would not
be needed to reconstruct the key at all.
Generally, one measures the strength of a crypto-
graphic key by its entropy, which quantiﬁes the amount
of uncertainty in the key from an adversary’s point of
view. If one regards a key generator as drawing an ele-
ment uniformly at random from a large set, then the en-
tropy of the keys can be easily computed as the base-two
logarithm of the size of the set. Computing the entropy of
keys output by a concrete instantiation of a key genera-
USENIX Association  
17th USENIX Security Symposium 
61
tor, however, is non-trivial because “choosing uniformly
at random” is difﬁcult to achieve in practice. This is in
part due to the fact that the key generator’s source of ran-
domness may be based on information that is leaked by
external sources. For instance, an oft-cited ﬂaw in Ker-
beros version 4 allowed adversaries to guess ostensibly
56-bit DES session keys in only 220 guesses [13]. The
problem stemmed from the fact that the seeding infor-
mation input to the key generator was related to infor-
mation that could be easily inferred by an adversary. In
other words, this auxiliary information greatly reduced
the entropy of the key space.
In the case of biometric key generators, where the ran-
domness used to generate the keys comes from a user’s
biometric and is a function of the particular features used
by the system, the aforementioned problems are com-
pounded by several factors. For instance, in the case of
certain biometric modalities, it is known that population
statistics can be strong indicators of a speciﬁc user’s bio-
metric [10, 36, 3]. In other words, depending on the type
of biometric and the set of features used by the BKG,
access to population statistics can greatly reduce the en-
tropy of a user’s biometric, and consequently, reduce the
entropy of her key. Moreover, templates could also leak
information about the key. To complicate matters, in the
context of biometric key generation, in addition to eval-
uating the strength of the key, one must also consider
the privacy implications associated with using biomet-
rics. Indeed, the protection of a user’s biometric infor-
mation is crucial, not only to preserve privacy, but also
to enable that user to reuse the biometric key generator
to manage a new key. We argue that this concern for pri-
vacy mandates not only that the template protect the bio-
metric, but also that the keys output by a BKG not leak
information about the biometric. Otherwise, the compro-
mise of a key might render the user’s biometric unusable
for key generation thereafter.
The goal of this work is to distill the seemingly inter-
twined and complex security requirements of biometric
key generators into a small set of requirements that fa-
cilitate practical security analyses by designers. Speciﬁ-
cally, the contributions of this paper are:
I. The speciﬁcation of three practical requirements
that allow designers to ensure that a BKG ensures
the privacy of a user’s biometric and generates keys
that are suitable for cryptographic applications.
II. The analyses of three published BKGs. These are
contributions in their own right, but more impor-
tantly serve as concrete evidence of the importance
of the requirements.
III. The description of Guessing Distance, a new heuris-
tic measure that, given empirical data, can quickly
estimate the security afforded by a BKG.
IV. Discussion of common pitfalls and subleties in cur-
rent standards for empirical evaluation.
Throughout this paper we focus on the importance of
considering adversaries who have access to public in-
formation, such as templates, when performing security
evaluations. We hope that our observations will pro-
mote critical analyses of BKGs and temper the spread
of ﬂawed (or incorrectly evaluated) proposals.
2 Related Work
To our knowledge, Soutar and Tomko [34] were the ﬁrst
to propose biometric key generation. Davida et al. [9]
proposed an approach that uses iris codes, which are be-
lieved to have the highest entropy of all commonly-used
biometrics. However, iris code collection can be consid-
ered somewhat invasive and the use of majority-decoding
for error correction—a central ingredient of the Davida
et al. approach—has been argued to have limited use in
practice [16].
Monrose et al. proposed the ﬁrst practical BKG that
exploits behavioral (versus physiological) biometrics for
key generation [29]. Their technique uses keystroke la-
tencies to increase the entropy of standard passwords.
Their construction yields a key at least as secure as the
password alone, and an empirical analysis showed that
their approach increases the workload of an attacker by a
multiplicative factor of up to 215. A similar approach was
used to generate cryptographic keys from voice [28, 27].
Many constructions followed those of Monrose et al., us-
ing biometrics such as face [15], ﬁngerprints [33, 39],
handwriting [40, 17] and iris codes [16, 45]. Unfortu-
nately, many are susceptible to attacks. Hill-climbing at-
tacks have been leveraged against ﬁngerprint, face, and
handwriting-based biometric systems [1, 37, 43] by ex-
ploiting information leaked during the reconstruction of
the key from the biometric template.
There has also been an emergence of generative at-
tacks against biometrics [5, 23], which use auxiliary in-
formation such as population statistics along with limited
information about a target user’s biometric. The attacks
we present in this paper are different from generative at-
tacks because we assume that adversaries only have ac-
cess to templates and auxiliary information. Our attacks,
therefore, capture much more limited, and arguably more
realistic, adversaries. Despite such limited information,
we show how an attacker can recover a target user’s key
with high likelihood.
There has also been recent theoretical work to for-
malize particular aspects of biometric key generators.
The idea of fuzzy cryptography was ﬁrst introduced by
Juels and Wattenberg [21], who describe a commitment
scheme that supports noise-tolerant decommitments. In
62 
17th USENIX Security Symposium 
USENIX Association
Section 7 we provide a concrete analysis of a pub-
lished construction that highlights the pitfalls of using
fuzzy commitments as biometric key generators. Fur-
ther work included a fuzzy vault [20], which was later
analyzed as an instance of a secure-sketch that can be
used to build fuzzy extractors [11, 6, 12, 22]. Fuzzy
extractors treat biometric features as non-uniformly dis-
tributed, error-prone sources and apply error-correction
algorithms and randomness extractors [18, 30] to gener-
ate random strings.
Fuzzy cryptography has made important contributions
by specifying formal security deﬁnitions with which
BKGs can be analyzed. Nevertheless, there remains a
gap between theoretical soundness and practical systems.
For instance, while fuzzy extractors can be effectively
used as a component in a larger biometric key generation
system, they do not capture all the practical requirements
of a BKG. In particular, it is unclear whether known con-
structions can correct the kinds of errors typically gen-
erated by humans, especially in the case of behavioral
biometrics. Moreover, fuzzy extractors require biometric
inputs with high min-entropy but do not address how to
select features that achieve this requisite level of entropy.
Since this is an inherently empirical question, much of
our work is concerned with how to experimentally eval-
uate the entropy available in a biometric.
Lastly, Jain et al. enumerate possible attacks against
biometric templates and discuss several practical ap-
proaches that increase template security [19]. Similarly,
Mansﬁeld and Wayman discuss a set of best practices
that may be used to measure the security and usability of
biometric systems [24]. While these works describe spe-
ciﬁc attacks and defenses against systems, they do not
address biometric key generators and the unique require-
ments they demand.
3 Biometric Key Generators
Before we can argue about how to accurately assess bio-
metric key generators (BKGs), we ﬁrst deﬁne the algo-
rithms and components associated with a BKG. These
deﬁnitions are general enough to encompass most pro-
posed BKGs.
BKGs are generally composed of two algorithms, an
enrollment algorithm (Enroll) and a key-generation algo-
rithm (KeyGen):
• Enroll(B1, . . . , Bℓ): The enroll algorithm is a prob-
abilistic algorithm that accepts as input a number
of biometric samples (B1, . . . , Bℓ), and outputs a
template (T ) and a cryptographic key (K). In the
event that B1, . . . , Bℓ do not meet some predeter-
mined criteria, the enroll algorithm might output the
failure symbol ⊥.
• KeyGen(B, T ): The key generation algorithm ac-
cepts as input one biometric sample (B), and a tem-
plate (T ). The algorithm outputs either a crypto-
graphic key (K), or the failure symbol ⊥ if B cannot
be used to create a key.
The enrollment algorithm estimates the variation in-
herent to a particular user’s biometric reading and com-
putes information needed to error-correct a new sample
that is sufﬁciently close to the enrollment samples. Enroll
encodes this information into a template and outputs the
template and the associated key. The key-generation al-
gorithm uses the template output by the enrollment al-
gorithm and a new biometric sample to output a key. If
the provided sample is sufﬁciently similar to those pro-
vided during enrollment, then KeyGen and Enroll output
the same keys.
Generally speaking, there are four classes of informa-
tion associated with a BKG.
• The Biometric (B): A biometric is a measurement
of a person’s behavior or physiology. A BKG ex-
tracts B as algorithmically interpretable representa-
tions (e.g., a set of signals). The BKG typically ap-
plies statistical functions, or features (φ1, . . . , φn),
to the representations, and uses the output to either
derive [17, 41] or lock [33, 16, 38] a cryptographic
key.
• A Template (T ): A template is any piece of in-
formation that is stored on the system for the pur-
pose of re-generating the cryptographic key. Tem-
plates are generally created during an enrollment
process and stored so that a user can easily recre-
ate her key. For all practical purposes, templates
must be considered publicly available. Note that
this assumption implies that more standard biomet-
ric templates, which are typically employed for au-
thentication purposes and are simply the encoding
of a biometric [42], cannot be used securely in this
setting.
• The Key (K): A cryptographic key that is derived
from (or locked by) one or more biometric samples
during an enrollment phase. The key may later be
regenerated using another biometric sample that is
“close” to the original samples and the template that
was also output during enrollment.
• Auxiliary Information (A): Auxiliary information
encompasses any public information not intended
to be used for key-derivation purposes but that is
still readily available to an adversary. Auxiliary in-
formation is speciﬁed with respect to one user and