### 志趣相投的人员组成测试小组（Grouplets）

#### 专注于改进闪电战
- **目标**：在整个Google内部推广自动化测试。
- **资源与约束**：没有预算或正式授权，也没有明确的限制。

#### 测试宣传策略
- **Testing on the Toilet**：仅在线上宣传不足以达到效果。
- **每周更新厕所的测试海报**：两个举措显著促进了成功。

### Test Certified (TC) 计划

#### 提供路线图以改进自动化测试
- **克服障碍**：帮助团队了解如何开始和推进自动化测试。
- **分级体系**：
  - **Level 1**：快速建立基线度量。
  - **Level 2**：设定规则，实现自动化覆盖率目标。
  - **Level 3**：朝着长期的覆盖率目标努力。

#### 提供测试认证导师
- **全职导师**：亲自参与，与团队一起改进测试实践和代码质量。
- **应用知识与工具**：将测试小组的知识、工具和技术应用于团队的代码。
- **指导与目标**：将TC作为指导和目标使用。
- **公司资助**：最终由公司资助全职顾问。

### 公司级的Fixit改进闪电战
- **工程师倡议**：普通工程师可以召集其他工程师进行为期一天的密集代码改良或工具应用冲刺。

### Part VI：集成信息安全、变更管理和合规

#### 信息安全是每个人每天的任务
- **比例**：开发：运维：信息安全 = 100:10:1。
- **集成在SDLC所有阶段**：确保功能团队尽早保证信息安全。
- **邀请信息安全团队**：参加开发迭代的产品演示。
- **通过演示实现合规**：集成安全到缺陷追踪和事后分析。
- **共享代码库和服务**：集成预防的信息安全控制。
- **安全相关的机制和工具**：提供验证和加密的库和服务，配套安全培训和检查工具的使用。

#### 代码库和建议配置
- **密码管理**：连接设置，加密密钥。
- **OS包和构建**：NTP时间同步，正确配置的OpenSSL，syslog配置关键安全信息到ELK。
- **协作**：与运维团队合作，以安全和低风险的方式创建cookbook和构建镜像。

#### 集成安全的部署流水线
- **静态代码扫描**：运行安全测试，如Gauntlt。
- **动态分析**：内存、功能行为、响应时间和性能，如Arachni和OWASP ZAP。
- **依赖扫描**：确保依赖二进制文件和可执行程序不受攻击，如Gemnasium, bundler audit, Maven, OWASP Dependency-Check。

#### 源代码完整性和代码签名
- **PGP Key**：所有提交到代码库的代码都需要签名。
- **CI流程产出的包**：也需要签名。

#### 成功案例
- **Twitter (2009)**：确保软件供应链的安全。
- **Etsy (2010)**：集成信息安全到生产遥测。
- **Salesforce.com (2012)**：自动化的基础设施变更作为标准变更。
- **Etsy (2014)**：PCI合规和职责分离的警示故事。
- **受监管环境中的合规证明 (2015)**。
- **ATM系统的生产遥测依赖**。

### Part III：第一种方式，技术实践的流动

#### 创建部署流水线的基础
- **案例**：澳大利亚电信公司（2009年）。
  - **背景**：10个工作条线采用瀑布模型，但进度落后。
  - **问题**：只有一个工作条线成功到达UAT测试，但花费了额外6个月仍未达到业务预期。
  - **转型**：敏捷转型一年后，只取得很小的改进，仍达不到业务结果的要求。
  - **回顾**：缺乏业务参与。