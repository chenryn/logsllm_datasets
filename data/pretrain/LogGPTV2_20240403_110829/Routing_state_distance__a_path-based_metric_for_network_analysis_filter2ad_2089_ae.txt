(a)
(b)
Figure 15: Cluster pairs (a) C4/C9 and (b) C3/C7. For each pair, the points in common are in green, while the points exclusive
to each cluster are in red or blue. Cluster outlines are also overlaid for ease of interpretation.
the deﬁnition of the Overlapping-Clustering problem fo-
cuses on identifying a labeling of each preﬁx such that the
Jaccard distance between the labels assigned to two preﬁxes
approximates the rsd distance between the corresponding
preﬁxes, to the maximum extent possible. Note that since
the Jaccard distance is a real number in the interval [0, 1]
we seek to approximate the normalized version of RSD.
Our deﬁnition of Overlapping-Clustering builds on
the recent work of Bonchi et al. [5]; its formal deﬁnition
follows.
Problem 2
a
set of nodes X, their m × n nexthop matrix N and an
integer p, identify a labeling of nodes L such that
(Overlapping-Clustering). Given
L-Cost (L) =
X
x,x!∈X×X
˛˛˛J `x, x! | L´ − eD(x, x!)˛˛˛
is minimized and for every x ∈ X it is guaranteed that
|L(x)| ≤ p.
The deﬁnition of Problem 2 does not require the number
of clusters in the output to be provided as part of the input.
Rather, the problem requires as input the maximum number
of clusters p in which a node can participate. Note that the
L-Cost function does not necessarily decrease as p increases.
Thus, in theory there is an optimal value of p, which can
be found by trying all possible values (i.e., {1, . . . , n}) and
report the clustering with the smallest L-Cost value.
In
our experiments, we chose p = 10, because for p >10 we
observed no signiﬁcant decreases in the objective function.
7.2 The Local algorithm
Bonchi et al. [5] showed that not only is Problem 2 NP-
hard to solve, but it is also NP-hard to approximate. There-
fore, we are content with eﬃcient heuristics to minimize the
L-Cost objective function. In this section, we give a brief
description of such a heuristic, which we call Local; this
heuristic is an instantiation of the generic algorithm pro-
posed in [5]. Although space does not permit a detailed
description of our algorithm here, the code is available at:
CodeURL.
The pseudocode of the Local algorithm is shown in Al-
gorithm 2. On a high level it uses a local-search heuristic,
which starts with a random assignment of preﬁxes to clus-
ters and iteratively improves it to reduce the value of the
L-Cost function. More speciﬁcally, at the ﬁrst step (Ini-
tialize routine), every preﬁx is assigned a random set of at
most p labels. Subsequently, the labels of each preﬁx x are
appropriately changed so that the cost of the objective func-
tion improves. This is done by the NNLS and the Boolean
routines. First, NNLS ﬁnds a real-valued assignment of labels
to a node by solving a non-negative least squares problem.
The output of this step is weighted association of the preﬁx
with every cluster– denoted by eL in Algorithm 2. Then, the
routine Boolean transforms the real-valued assignment into
one-zero assigment. Thus, the output of this step is a set of
labels (i.e., clusters) that are associated with preﬁx x. The
details of these steps are described by Bonchi et al. [5]. The
two steps are repeated, till a local minimum – with respect
to the objective function L-Cost – is reached.
7.3 Overlapping Clustering Results
To demonstrate overlapping clustering using RSD we ap-
ply Local to our data with p = 10. This allows any preﬁx
to be a member of as many as 10 clusters. To understand
the results, it is easiest to look at pairs of clusters. All pairs
of clusters have some overlapping subset, so pairs of clusters
illustrate the general power of overlapping clustering for our
data.
From our 10 clusters, we focus on two pairs which we
denote C4/C9 and C3/C7. We show the two pairs visualized
using MDS in Figure 15.
The ﬁgure shows that, as intended, clusters overlap. In
each case, a large number of preﬁxes are in both clusters.
What is perhaps less expected is that points that are close
to each other in RSD space as visualized in 2-D are not
necessarily contained in the same cluster. For example, note
the regions on the right side of each plot in which points
belonging to distinct clusters are shown to be near in RSD.
249C4
C4∩C9
C9
C3
C3∩C7
C7
s
e
c
r
u
o
S
2
4
6
8
10
12
14
16
18
1000
s
e
c
r
u
o
S
2
4
6
8
10
12
14
16
18
20
5000
6000
500
1000 1500 2000 2500 3000 3500
Destinations
2000
3000
4000
Destinations
(a)
(b)
Figure 16: Submatrices of N, with diﬀerent nexthop ASes in diﬀerent colors.
In fact, this eﬀect is exactly what we had hoped overlap-
ping clustering would capture. The reason for this eﬀect is
that point-pairs can be close to each other in RSD space for
diﬀerent reasons. Consider again Figure 14. There are two
diﬀerent sets of sources (S1 and S2) that have similar rout-
ing behavior and create coherent submatrices in N. Each
set of sources causes preﬁxes to cluster together, but inde-
pendently so; the preﬁxes in C1 are near each other in RSD
space because of the similar routing decision of the ASes in
S1, while preﬁxes in C2 are near each other in RSD space
because of the similar routing decision of the ASes in S2.
As a result, in contrast to the non-overlapping case, we
do not ﬁnd that clusters typically map to geographic sets
or regions. Furthermore, clusters are not compact in RSD
space as can be seen in Figure 15.
The overlapping clustering constructed by the Local algo-
rithm allows us to discover the diﬀerent sets of source ASes
that have similar routing behavior. This is shown in Fig-
ure 16. The ﬁgure shows submatrices of N in which each
next hop values has been given a color. These submatrices
correspond to the cluster pairs C4/C9 and C3/C7. In each
ﬁgure, we have ordered the columns so that the preﬁxes con-
tained in each cluster are in the center, and the preﬁxes that
are only in one cluster are on the sides. This allows us to
visualize the sets of ASes that give rise to each cluster.
For example, in Figure 16(a), we can see that the AS in
row 4 has the same next hop for all preﬁxes cluster C4, but
not for the preﬁxes that are only in C9. Likewise, the AS in
row 8 has the same next hop for preﬁxes in C9, but not for
those only in C4. In the case of C3/C7, the cluster-deﬁning
rows are rows 5 and 10.
We conclude that these results give evidence that over-
lapping clustering (using an algorithm such as Local) can
ﬁnd clusters in which diﬀerent sets of ASes each have cohe-
sive routing behavior over overlapping sets of preﬁxes. This
holds the promise of extracting a richer set of local atoms
from BGP data.
8. DISCUSSION
Our sense is that RSD, owing to its simple deﬁnition, is a
general tool that can be used in a variety of settings. These
include further in-depth analysis of BGP, as well as its ap-
plication to entirely diﬀerent domains.
A promising direction for further application of RSD is
to incorprate temporal analysis. Consider a set of nexthop
matrices indexed in time, i.e., Nt, Nt+1, .... In this setting,
one can ask about the RSD of the same preﬁx at diﬀerent
points in time. For preﬁx x, this is simply the number of po-
sitions where Nt(:, x) and Nt+1(:, x) diﬀer. Such a measure
could have value over short timescales for detecting sudden,
signiﬁcant routing changes (such as a preﬁx hijacking) or
over long timescales for characterizing the evolving routing
structure of the Internet. Further, comparison of average
RSD change across all or a selected set of preﬁxes from time
t to time t + 1 could give a sense of overall rate of change
and stability in the interdomain routing system.
Another direction for further analysis of BGP follows from
the observation that the RSD matrix D has low eﬀective
rank. Previous work on traﬃc matrices has shown that this
property naturally leads to an eﬀective method for anomaly
detection [13]. Our initial investigations indicate that this
method can very eﬀectively identify preﬁxes that have un-
usual connectivity patterns in BGP (such as CDNs).
Another consequence of the low eﬀective rank property of
D is that D may be amenable to matrix completion. That
is, it may be possible to accurately estimate the RSD be-
tween two pairs of preﬁxes if enough measurements of RSD
between other pairs is available. This could be useful in
situations where only partial path information is available.
Going beyond the analysis of BGP, RSD can be applied in
any situation in which paths between nodes are an available
data source. For example, it could be applied to collections
of traceroute measurements, information dissemination in
social media, or infection propagation in social and commu-
nication networks.
2509. RELATED WORK
It’s been widely reported that publicly available BGP ta-
bles provide an incomplete view of the AS graph [17].
In
this regard, it is important to develop tools that can ana-
lyze the network using only the BGP path data instead of
the AS graph. The way we deﬁne RSD based on paths elim-
inates the problem of missing edges in the AS graph so that
ambiguities due to missing links do not arise.
In addition, our paper touches on the problem of visualiza-
tion of preﬁxes (or ASes) based on BGP data. The authors
in [11] visualize the set of core ASes using placement based
on AS degree and geographic location. Small scale visual-
izations of selected BGP paths are available through BGPlay
[4] and bgpviz [15]. However, to our knowledge, no macro-
scopic visualization method relies directly on BGP paths as
we do, despite the fact that paths are the fundamental unit
of measurement in BGP. In addition, relatively little work
has been done on clustering of preﬁxes or ASes; the work
that has been done relies on the inferred AS graph rather
than BGP paths [9].
Finally, a number of studies explore aggregation of pre-
ﬁxes. In [6], the authors show that there are many cases in
which a collection of preﬁxes is routed the same way. Such
collections, so called policy atoms, consist of preﬁxes that
share the same BGP paths. In [1], the authors study meth-
ods for calculating policy atoms and their characteristics in
detail. The main goal of these works is using policy atoms
to reduce the sizes of BGP tables. Our work diﬀers from
these works in the sense that we do not require that the pre-
ﬁxes in the same local atom routed the same way. Instead
we cluster the preﬁxes that are routed similarly in some re-
gions of the Internet. In fact, we generalize and extend the
notion of atoms so that it can be used to analyze the routing
behaviors at diﬀerent granularities.
10. CONCLUSIONS
In this paper we have developed a new set of tools for ex-
tracting insight from BGP measurements. We deﬁned a new
metric for measuring distance between preﬁxes, called RSD.
This metric captures the notion of ‘closeness’ of two pre-
ﬁxes with respect to the global routing state of the Internet.
As such, it is a natural tool for visualizing the relationship
between preﬁxes. But going beyond visualization, we show
that RSD can uncover surprising patterns in routing data.
In particular, we show that RSD exposes situations in which
large numbers of ASes make similar routing decisions with
respect to speciﬁc sets of preﬁxes. We call this situation a
local atom, generalizing the notion of a BGP atom. We show
that local atoms exist at the macroscopic scale (one involves
23% of all preﬁxes in the Internet) as well as at much smaller
scales. To expose local atoms, we develop and demonstrate
the power of two new clustering methods speciﬁcally tai-
lored for use with RSD. We conclude that the combination
of (1) computing RSD, (2) visualizing RSD using MDS, and
(3) clustering RSD using Pivot and Local together consti-
tute a powerful toolbox for discovering patterns in massive
datasets of BGP paths.
Code for the Pivot and Local algorithms, as well as code
for computing RSD, is available at http://csr.bu.edu/rsd.
That site also provides a list of RSD values for the preﬁx
pairs used in this study.
11. ACKNOWLEDGEMENTS
This work was supported by NSF grants CNS-1017529,
CNS-0905565, CNS-1018266, CNS- 1012910, CNS-1117039,
by a GAANN Fellowship, and by grants from Microsoft, Ya-
hoo!, and Google. The authors thank the IMC referees and
shepherd for their help in improving the paper. The authors
also appreciate helpful discussions with various network op-
erators.
12. REFERENCES
[1] Y. Afek, O. Ben-Shalom, and A. Bremler-Barr. On the
structure and application of bgp policy atoms. In ACM
SIGCOMM Workshop on Internet measurment, 2002.
[2] N. Ailon, M. Charikar, and A. Newman. Aggregating
inconsistent information: Ranking and clustering. J.
ACM, 55(5), 2008.
[3] N. Bansal, A. Blum, and S. Chawla. Correlation
clustering. Machine Learning, 56:89–113, 2004.
[4] Bgplay. http://bgplay.routeviews.org.
[5] F. Bonchi, A. Gionis, and A. Ukkonen. Overlapping
correlation clustering. In ICDM, pages 51–60, 2011.
[6] A. Broido and k. claﬀy. Analysis of RouteViews BGP
data: policy atoms. In NRDM, 2001.
[7] V. Filkov and S. Skiena. Integrating microarray data
by consensus clustering. Intern. J. on Artiﬁcial
Intelligence Tools, 13:863–880, 2004.
[8] A. Gionis, H. Mannila, and P. Tsaparas. Clustering
aggregation. TKDD, 1(1), 2007.
[9] C. Gkantsidis, M. Mihail, and E. W. Zegura. Spectral
analysis of internet topologies. In INFOCOM, 2003.
[10] G. G¨ursun, N. Ruchansky, E. Terzi, and M. Crovella.
Inferring visibility: Who’s (not) talking to whom? In
SIGCOMM, 2012.
[11] B. Huﬀaker and k. claﬀy. CAIDA’s IPv4 and IPv6 AS
Core AS-level Internet Graph. http://www.caida.
org/research/topology/as_core_network/, 2010.
[12] Hurricane Electric. Hurricane electric peering policy.
http://he.net/peering.html.
[13] A. Lakhina, M. Crovella, and C. Diot. Diagnosing
network-wide traﬃc anomalies. In SIGCOMM, 2004.
[14] W. M¨uhlbauer, S. Uhlig, B. Fu, M. Meulle, and
O. Maennel. In search for an appropriate granularity
to model routing policies. In SIGCOMM, 2007.
[15] RIPE. bgpviz. http://www.ris.ripe.net/bgpviz.
[16] Ripe’s routing information service raw data project.
http://www.ripe.net/data-tools/stats/ris/
ris-raw-data.
[17] M. Roughan, W. Willinger, O. Maennel, D. Perouli,
and R. Bush. 10 lessons from 10 years of measuring
and modeling the internet’s autonomous systems.
IEEE Journal on Selected Areas in Communications,
2011.
[18] University of oregon route views project.
http://www.routeviews.org.
[19] W. S. Torgerson. Multidimensional scaling: I. theory
and method. Psychometrika, 17:401–419, 1952.
251