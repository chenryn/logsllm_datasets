问题： 如何绕过php.ini中disable_function的限制，有哪些方法，其中成功率最高的方法是哪个，为什么?
回答： 为了回答这个问题，我将首先解释`disable_functions`设置的作用和目的。

PHP中的`disable_functions`配置选项用于禁用特定函数或类的方法调用。这个功能的主要目的是提高安全性，防止恶意代码利用敏感操作的功能。默认情况下，在编译时会启用许多危险函数，而通过在服务器上修改`php.ini`文件可以禁止使用这些函数。

然而，有一些技巧可以帮助绕过`disable_functions`的限制：

1. **创建自定义扩展**：一种可能的方式是在C语言中编写一个自定义扩展模块并将其加载到运行时环境中。这样可以在不违反安全策略的情况下添加新的函数。
2. **利用魔术常量**：某些特殊符号（如`__FUNCTION__`）被视为字符串而不是变量名来处理。因此，可以通过构造特殊的表达式来访问被禁用的函数名称作为字符串。
3. **利用命名空间**：如果某个被禁用的函数属于已知的命名空间，则可以尝试从该命名空间引用它，以避免直接匹配预定义的安全列表。
4. **动态生成函数名**：另一种方式是根据上下文生成有效的函数名，例如，结合数组下标运算符`.`、点语法以及单引号包裹的方式来间接地调用被禁用的函数。

以上四种方法都是可行的，但每种方法的成功率取决于具体情况和个人技能水平。一般来说，第一种方法是最复杂的，需要具备一定的编程能力；第二种方法相对简单且易于实现；第三种方法则要求对目标环境有深入的理解；第四种方法是一种高级技术，通常只适用于经验丰富的渗透测试人员。

综上所述，没有绝对正确或错误的答案，因为每个攻击者都有自己的偏好和技术专长。建议选择最适合当前场景和自身技术水平的方法进行评估和实施。