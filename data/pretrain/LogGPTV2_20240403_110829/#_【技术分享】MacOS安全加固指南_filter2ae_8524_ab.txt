从命令行模式中，powerlicy(8)工具里可以找到设置密码策略的所有方面。
这个工具（在第一章中被提到的）恰好在它的手册中有说明。实际建议策略将会是不同的。
**Screen Saver locking（屏幕保护程序锁）**
大多数用户离开他们的电脑都没来得及锁屏，并且当过路人下意识的点击一下窗口就能偷取信息和运行命令时，无人值守的会话状态意味着安全风险。因此建议设置屏幕保护选项-通过系统首选项或者defaults(1)命令：
**Disable su**
su(1)是没有安全敏感，但比sudo(8) 起更重要作用，因此应该被禁止。禁用它就像一个chmod
u-s操作一样简单，但是更久远的建议是在pam_deny.so添加一行（如第一章中的“修改PAM配置文件”）。
**Harden sudo**
虽然无参的sudo(8)比基本的su(1)要更安全,但是sudo的默认配置能够且应该被加固
因此建议以下步骤：
在共同环境中，只有指定的命令能够被sudo使用。这些命令应该包括比shutdown(8)和reboot(8)
更加安全的命令。在任何时候下，绝不应该所有的shell都能被运行，因为这有效的绕过了sudo命令作为用户能简单地sudo bash或相似命令的限制条件。
Sudo有一些已知功能在tty_tickets，它绑定了超级用户许可终端(tty)在那些最终已认证sudo命令上。如果没有这个功能，一旦他们之一被认证，两个不同用户会话终端将自动获得超级用户权限。
其他有用的特性是log_input和log_output。这些应该被全局设置或者被设置在一个单命令模式基础上（使用
[NO]LOG_[INPUT/OUTPUT]）。Sudo命令甚至能够应用到发送电子邮件的成功或失败上。这些命令和其他命令大量文献能够在sudoers(5)找到。
**  
**
**Periodically check start up and login items**
搜寻驻留的恶意软件，因此定期检查用户启动项和登录选项是一个好主意。确切的时间也许不同，但是可以一周一次，或者尽力用钩子相关联登录项。任何新发现的项应该被考虑到审计价值。这包括检查登录/注销钩子甚至是它们自己的工作，因为恶意软件也许会寻求驻留，通过cron或者AT（计划的安排、任务的管理、工作事务）调度它们自身。
**Use MDM (or parental controls) to manage user sessions and capabilities**
如第六章所描述，MacOS有一些软件限制机制，通过mcxlr二进制程序实施并且与它的内核扩展相关联。软件限制十分强大，它仅仅允许被选上白名单的app安装运行或者甚至还原工作站到“kiosk”模式。
精确限制是留给管理员策略的，但是这个机制是被高度推荐的。
**Data Protection**
Periodically obtain cryptographic snapshots of important files
重要系统文件，例如/etc/hosts（绕过DNS），/etc/passwd和其他经常被恶意软件或带有各种各样目的的黑客修改。仅仅依靠文件大小和时间戳是不够的，因为调整文件大小和时间戳十分简单。
加密哈希值功能例如MD5和SHA-1不能够简单地碰撞。因此对重要系统配置文件运行一个周期检查是一个好主意。当然对于文件认为是不可变的（例如，/bin,/usr/bin中的各种各样的二进制等等）。重要文件的确切名单有所不同（因为会需要更新操作系统补丁或升级）。重要文件任何可探测的改变应该立即提示一个警报。
**Periodically backup user data**
用户数据很容易丢失—被意外删除、有针对性破坏或者勒索软件勒索。定期备份数据能够减缓潜在损失。备份脚本能够手动配置，或者使用第三方管理工具。在这些配置手册中，使用find
/ -mtime … | xargs tar zcvf能够运行得很好。
当一个单个、可信的备份服务器能与网络上的机器无密码、使用公钥的SSH会话通信，通过网络备份是最好的。
**Cloud Saving**
MacOS与iCoud结合越来越紧密，这对普通用户通常非常方便，但是在一些情境中会成为一个潜在的数据泄漏点。iCloud存储需要被禁止，用一下命令很容易做到：
**Enable hibernation**
Pmset手册描述了hibernatemode不同选项尤其是模式25，它仅仅可以通过命令行可设置utility.hibernatemode=25是通过pmset唯一可以设置的。系统会存储一份内存映像到持续性存储介质上（磁盘），并且移除内存电源。系统会从磁盘中还原映像。如果你想“hiberna-tion”-慢休眠，慢唤醒和更好的电池寿命，你应该使用这个设置。
**Secure Deletion**
一个HFS（或APFS）中的文件实际上不会被删除-它们的文件系统节点是无链接的，但是数据块直到在低级空间条件下（a low disk space
condition，这里实在不清楚是什么条件）才会被清除或回收。强迫安全删除是可能的-通过使用srm(1)或rm
–p复写数据块内容。注意到这个方法不推荐用户在Flash or Fusion Drives中使用，因为大大地增加了P/E循环次数和缩短了存储介质寿命。
**Physical Security**
设置一个固件密码阻止任何启动配置改变，例如尝试从另一个引导设备引导。这大大地增加了你的Mac的安全性。在Apple文档知识库文章HT204455中有设置固件密码的过程，但必须通过recovery文件系统设置。
**Find my Mac**
许多人熟悉设置”find my i-Device”这样的特色，并且这也同样适用于Mac。尽管经常对于固定位置的Mac
Pro和iMac无用，但是这对于macbook来说是一个福利。不仅仅自动设置固件密码，如果被偷或丢失，它也能够远程锁定和清除Mac。
**FileVault 2**
应该启用FileVault 2（ 全磁盘加密）。这个重要特性在Mac
OS10.7以上版本可以获得。这个功能可靠、易懂并且高效。尽管当在系统上运行时没有明显效果，但是它使得在设备被破坏或重启时非法授权的个人无法访问。
**Remove key during standby**
当一台Mac进入到待机状态时，FileVault2密钥仍然在物理内存中明文存储。这使得有些基于硬件攻击类型能通过捕捉和转储RAM映像确定密钥。设置pmset
destroyfvkeyonstandby 1可以从内存中删除密钥，但是当电脑从待机状态脱离时，就需要用户重新登录了。
注意这个设置已知会干涉电脑正常的待机和power nap。所以这两种设置都应该被禁用（使用pmset –a [standby/powernap]）0。
**  
**
**【未完】**
完整版本请见开头PDF附件。
译者rodster（ID：leixyou）、everettjf
完整PDF版本：[001.MacOS and iOS Internals, Volume
IIIAppendixA全.pdf](http://pan.baidu.com/s/1geQyELd) 密码: vrpy
原文地址：
原文作者：Jonathan Levin