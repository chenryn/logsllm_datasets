I wanted to exclude all of the tensorflow logs in output. I searched and found
that one or both of these setting should work:
    os.environ['TF_CPP_MIN_LOG_LEVEL']='3'
    tf.logging.set_verbosity(tf.logging.ERROR)
Though, I am still getting network loading logs, e.g.:
    2019-02-28 23:51:13,520:INFO::Restoring parameters from ./pre_model/classic/brain4/network--6009999
I was wondering why the `INFO` logs are still there. I also searched a lot
about it and read the previous issues, but neither had a certain solution for
this problem.
  * **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)** : Yes
  * **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)** : Debian 8.7
  * **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device** : NA
  * **TensorFlow installed from (source or binary)** : binary
  * **TensorFlow version (use command below)** : 1.10.1
  * **Python version** : 2.7
  * **Bazel version (if compiling from source)** : NA
  * **GCC/Compiler version (if compiling from source)** : NA
  * **CUDA/cuDNN version** : 9.0
  * **GPU model and memory** : K80 12GB
  * **Exact command to reproduce** :
    checkpoint = tf.train.get_checkpoint_state(os.path.join(directory, saved_model_address))
    tf.train.Saver.restore(session, checkpoint.model_checkpoint_path)
in which `saved_model_address` is the address of the saved model, and session
is an instance of tf.Session() which the model is created in.