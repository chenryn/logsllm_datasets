-   `type`{.literal}：对象类型（用户、组等）；设置`subtree`{.literal} 和
    `target filter`{.literal}
-   `memberof`{.literal}：组成员；设置 `target filter`{.literal}
-   `targetgroup`{.literal}：授予修改特定组的权限（如授予管理组成员资格的权限）；设置
    `target`{.literal}
:::
使用 IdM
权限，您可以控制哪些用户有权访问哪些对象，甚至控制这些对象的属性。IdM
允许您允许或阻止单个属性，或更改特定 IdM 功能（如用户、组或
sudo）的所有可见性，适用于所有匿名用户、所有经过身份验证的用户，或者只更改一组特定的特权用户。\
例如，如果管理员只想将用户或组的访问权限限制到这些用户或组需要访问的特定部分，并且使其他部分完全隐藏于他们，此方法的灵活性对管理员很有用。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
权限不能包含其他权限。
:::
:::
::: section
::: titlepage
## []{#managing-role-based-access-controls-in-idm-using-the-cli_configuring-and-managing-idm.html#default-managed-permissions_role-based-access-control-in-idm-cli}默认管理的权限 {.title}
:::
管理的权限是 IdM
默认附带的权限。它们的行为与用户创建的其他权限类似，但有以下区别：
::: itemizedlist
-   您无法删除它们或修改其名称、位置和目标属性。
-   它们有三组属性：
    ::: itemizedlist
    -   [**Default**]{.strong} 属性，用户无法修改它们，因为它们由 IdM
        管理
    -   [**Included**]{.strong} 属性，它们是用户添加的额外属性
    -   [**Excluded**]{.strong} 属性，这些属性由用户删除
    :::
:::
管理的权限适用于 default 和 included
属性集中显示的所有属性，但不应用到排除集中的所有属性。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
虽然您无法删除受管权限，但将其绑定类型设置为权限并从所有特权中删除托管权限会有效地禁用该权限。
:::
所有受管权限的名称都以 `System:`{.literal} 开头，例如
`System: Add Sudo rule`{.literal} 或
`System: Modify Services`{.literal}。IdM
的早期版本将不同的方案用于默认权限。例如，用户无法删除它们，而只能将它们分配到特权。这些默认权限大部分已转换为受管权限，但以下权限仍使用以前的方案：
::: itemizedlist
-   添加自动成员重新构建成员身份任务
-   添加配置子条目
-   添加复制协议
-   证书删除冻结
-   从 CA 获取证书状态
-   读取 DNA 范围
-   修改 DNA 范围
-   读取 PassSync Manager 配置
-   修改 PassSync Manager 配置
-   阅读复制协议
-   修改复制协议
-   删除复制协议
-   读取 LDBM 数据库配置
-   请求证书
-   请求证书忽略 CA ACL
-   从不同主机请求证书
-   从 CA 检索证书
-   吊销证书
-   写入 IPA 配置
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
如果您试图通过命令行修改受管权限，系统不允许更改您无法修改的属性，命令会失败。如果您试图从
Web UI 修改受管权限，则无法修改的属性将被禁用。
:::
:::
::: section
::: titlepage
## []{#managing-role-based-access-controls-in-idm-using-the-cli_configuring-and-managing-idm.html#privileges-in-idm_role-based-access-control-in-idm-cli}IdM 中的特权 {.title}
:::
特权是一组适用于角色的权限。\
虽然权限提供了执行单个操作的权限，但某些 IdM
任务需要多个权限才能成功。因此，特权组合了执行特定任务所需的不同权限。\
例如，为新 IdM 用户设置帐户需要以下权限：
::: itemizedlist
-   创建新用户条目
-   重置用户密码
-   将新用户添加到默认 IPA 用户组
:::
将这三个低级别任务合并到一个更高级别的任务中，例如名为 [**Add
User**]{.strong}，可使系统管理员更加轻松地管理角色。IdM
已包含几个默认权限。除了用户和用户组外，还将特权分配到主机和主机组，以及网络服务。这种方法允许精细控制一组主机上使用特定网络服务的操作。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
特权可能不包含其他特权。
:::
:::
::: section
::: titlepage
## []{#managing-role-based-access-controls-in-idm-using-the-cli_configuring-and-managing-idm.html#roles-in-idm_role-based-access-control-in-idm-cli}IdM 中的角色 {.title}
:::
角色是用户为角色指定的特权列表。\
实际上，权限授予执行给定低级别任务（创建用户条目、向组添加条目等）的权限，权限组合了更高级别任务（如在给定组中创建新用户）所需的一个或多个这些权限。角色根据需要收集权限：例如，用户管理员角色能够添加、修改和删除用户。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
角色用于对允许的操作进行分类。它们不用作实施特权升级或防止特权升级的工具。
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
角色不能包含其他角色。
:::
:::
::: section
::: titlepage
## []{#managing-role-based-access-controls-in-idm-using-the-cli_configuring-and-managing-idm.html#predefined-roles-in-identity-management_role-based-access-control-in-idm-cli}Identity Management 中的预定义角色 {.title}
:::
Red Hat Identity Management 提供以下预定义角色范围：
::: table
[]{#managing-role-based-access-controls-in-idm-using-the-cli_configuring-and-managing-idm.html#idm140587709725568}
**表 24.1. Identity Management 中的预定义角色**
::: table-contents
  角色                     特权                                                                                                           Description
  ------------------------ -------------------------------------------------------------------------------------------------------------- ---------------------------------------------------
  Helpdesk                 Modify Users and Reset passwords, Modify Group membership                                                      负责执行简单的用户管理任务
  IT Security Specialist   Netgroups Administrators, HBAC Administrator, Sudo Administrator                                               负责管理安全策略，如基于主机的访问控制、sudo 规则
  IT Specialist            Host Administrators, Host Group Administrators, Service Administrators, Automount Administrators               负责管理主机
  Security Architect       Delegation Administrator, Replication Administrators, Write IPA Configuration, Password Policy Administrator   负责管理身份管理环境、创建信任、创建复制协议
  User Administrator       User Administrators, Group Administrators, Stage User Administrators                                           负责创建用户和组
:::
:::
:::
:::
::: section
::: titlepage
# []{#managing-role-based-access-controls-in-idm-using-the-cli_configuring-and-managing-idm.html#managing-idm-permissions-in-the-cli_managing-role-based-access-controls-in-idm-using-the-cli}在 CLI 中管理 IdM 权限 {.title}
:::
本节描述了如何使用命令行界面(CLI)管理身份管理(IdM)权限。
::: itemizedlist
**先决条件**
-   管理 IdM 或 [**用户管理员**]{.strong} 角色的管理员特权。
-   一个活跃的 Kerberos 票据。详情请参阅 [使用 kinit 手动登录到
    IdM](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#using-kinit-to-log-in-to-ipa_logging-in-to-ipa-from-the-command-line){.link}。
:::
::: orderedlist
**流程**
1.  使用 `ipa permission-add`{.literal} 命令创建新的权限条目。\
    例如，添加名为 [*dns admin*]{.emphasis} 的权限：
    ``` literallayout
    $ ipa permission-add "dns admin"
    ```
2.  使用以下选项指定权限的属性：\
    ::: itemizedlist
    -   `--bindtype`{.literal} 指定绑定规则类型。此选项接受
        `all`{.literal}、`anonymous`{.literal} 和 `permission`{.literal}
        参数。`permission`{.literal} bindtype
        表示只有通过角色授予了此权限的用户才能执行它。\
        例如：
        ``` literallayout
        $ ipa permission-add "dns admin" --bindtype=all
        ```
        如果没有指定 `--bindtype`{.literal}，则 `permission`{.literal}
        是默认值。
        ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 注意 {.title}
        不能对特权添加带有非默认绑定规则类型的权限。您也不能对非默认绑定规则类型设置特权中已存在的权限。
        :::
    -   `--right`{.literal} 列出了权限授予的权力，它替换了已弃用的
        `--permissions`{.literal} 选项。可用的值有
        `add`{.literal}、`delete`{.literal}、`read`{.literal}、`search`{.literal}、`compare`{.literal}、`write`{.literal}、`all`{.literal}。
        您可以使用多个 `--right`{.literal}
        选项或使用大括号内以逗号分隔的列表来设置多个属性。例如：
        ``` literallayout
        $ ipa permission-add "dns admin" --right=read --right=write
        ```
        ``` literallayout
        $ ipa permission-add "dns admin" --right={read,write}
        ```
        ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 注意 {.title}
        `add`{.literal} 和 `delete`{.literal}
        是入门级操作（例如删除用户、添加组等），而
        `read`{.literal}、`search`{.literal}、`compare`{.literal} 和
        `write`{.literal} 则是属性级的：您可以写
        `userCertificate`{.literal}，但不能读 `userPassword`{.literal}。
        :::
    -   `--attrs`{.literal} 提供被授予权限的属性列表。\
        您可以使用多个 `--attrs`{.literal}
        选项或通过在大括号内以逗号分隔的列表列出选项，来设置多个属性。例如：
        ``` literallayout
        $ ipa permission-add "dns admin" --attrs=description --attrs=automountKey
        ```
        ``` literallayout
        $ ipa permission-add "dns admin" --attrs={description,automountKey}
        ```
        使用 `--attrs`{.literal}
        提供的属性必须存在，并且是给定对象类型的允许属性，否则命令会失败，并显示模式语法错误。
    -   `--type`{.literal}
        定义对其应用权限的条目对象类型，如用户、主机或服务。每种类型都有其自己的一组允许的属性。\
        例如：
        ``` literallayout
        $ ipa permission-add "manage service" --right=all --type=service --attrs=krbprincipalkey --attrs=krbprincipalname --attrs=managedby
        ```
    -   `--subtree`{.literal}
        提供子树条目；然后，过滤器以这个子树条目下的每个条目为目标。提供现有的子树条目；`--subtree`{.literal}
        不接受通配符或不存在的域名(DN)。在目录中包括 DN。\
        因为 IdM 使用简化的扁平目录树结构，所以 `--subtree`{.literal}
        可用于将某些类型的条目作为目标，如自动挂载位置，它们是其他配置的容器或父条目。例如：
        ``` literallayout
        $ ipa permission-add "manage automount locations" --subtree="ldap://ldap.example.com:389/cn=automount,dc=example,dc=com" --right=write --attrs=automountmapname --attrs=automountkey --attrs=automountInformation
        ```
        ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 注意 {.title}
        `--type`{.literal} 和 `--subtree`{.literal}
        选项是互斥的：您可以将 `--type`{.literal} 包含的过滤器视为
        `--subtree`{.literal} 的简化，目的是使管理员的工作更为简单。
        :::
    -   `--filter`{.literal} 使用 LDAP 过滤器来识别权限应用到哪个条目。\
        IdM 自动检查给定过滤器的有效性。过滤器可以是任何有效的 LDAP
        过滤器，例如：
        ``` literallayout
        $ ipa permission-add "manage Windows groups" --filter="(!(objectclass=posixgroup))" --right=write --attrs=description
        ```
    -   检查组是否存在后，`--memberof`{.literal}
        对给定组的成员设置目标过滤器。例如，要让拥有此权限的用户修改
        engineers 组成员的登录 shell：
        ``` literallayout
        $ ipa permission-add ManageShell --right="write" --type=user --attr=loginshell --memberof=engineers
        ```
    -   在检查组存在后，`--targetgroup`{.literal}
        对指定的用户组设置目标。例如，要让那些在 engineers
        组中的人拥有写成员属性的权限（这样他们可以添加或删除成员）：
        ``` literallayout
        $ ipa permission-add ManageMembers --right="write" --subtree=cn=groups,cn=accounts,dc=example,dc=test --attr=member --targetgroup=engineers
        ```
    -   另外，您还可以指定目标域名(DN)：\
        ::: itemizedlist
        -   `--target`{.literal} 指定要对其应用权限的 DN。可接受通配符.
        -   `--targetto`{.literal} 指定条目可移动到的 DN 子树。
        -   `--targetfrom`{.literal} 指定可从中移出条目的 DN 子树。
        :::
    :::
:::
:::
::: section
::: titlepage
# []{#managing-role-based-access-controls-in-idm-using-the-cli_configuring-and-managing-idm.html#command-options-for-existing-permissions_managing-role-based-access-controls-in-idm-using-the-cli}现有权限的命令选项 {.title}
:::
根据需要，使用以下变体修改现有权限：
::: itemizedlist
-   要编辑现有权限，请使用 `ipa permission-mod`{.literal}
    命令。您可以使用与添加权限相同的命令选项。
-   要查找现有权限，请使用 `ipa permission-find`{.literal}
    命令。您可以使用与添加权限相同的命令选项。
-   要查看特定的权限，请使用 `ipa permissions-show`{.literal} 命令。\
    `--raw`{.literal} 参数显示生成的原始 389-ds ACI。例如：
    ``` literallayout
     $ ipa permission-show  --raw
    ```