t :: A→B. We assume
the convention R(cid:62)0 :: A(cid:57)A.
We denote the set of all settings by Σ.
2.3 Traces
We use the notion of trace to model an execution of the
system. A trace is composed of events. We model events re-
lated to the wireless communication and the detection of a
neighbor. The former, denoted as Bcast, Dcast and Receive,
models broadcast (or omnidirectional) transmission, direc-
tional transmission, and reception, respectively. The latter,
denoted as Neighbor, means that a node accepts another
node as a neighbor. Each event is primarily associated with
(essentially, takes place at) a node we denote as the active
node. For some events, a secondary association with another
node can exist. In particular:
Definition 2. An event is one of the following terms:
• Bcast(A; t; m)
• Dcast(A; t; α, β, m)
• Receive(A; t; B, m)
• Neighbor(A; t; C, t(cid:48))
where: A ∈ V is the active node, t ∈ R(cid:62)0 is the start time,
m ∈ M is a message, α ∈ [0, 2π) is the sending direction,
β ∈ (0, 2π] is the sending angle, B ∈ V is the sender node,
C ∈ V is a declared neighbor, t(cid:48) ∈ R(cid:62)0 is the time at which
C is a neighbor according to A’s declaration.
For an event e, we write start(e) for its start time and
end (e) for its end time. For events including a message
m, end (e) = start(e) + |m|, while for the Neighbor event
end (e) = start(e).
Dcast, representing a message sent with a directional an-
tenna at direction α over an angle β, is illustrated in Fig-
ure 1. Receive represents message reception triggered (caused)
by any incoming message, and thus a previous Bcast and
Dcast event (self-triggered at the sending node). Neighbor
can be thought of as an internal outcome of a neighbor dis-
covery protocol (to be deﬁned later). Then, traces compris-
ing the above events are deﬁned.
Definition 3. A trace θ is a set of events that satisﬁes
what we will call the ﬁnite cut condition: for any ﬁnite t (cid:62) 0,
the subset {e ∈ θ | start(e)  0 parameter the minimum relaying delay intro-
duced by an adversarial node; this delay is due to processing
exclusively, it does not include any propagation time.
Definition 11. A trace θ ∈ ΘS,P is feasible with respect
to an adversary model A∆relay if:
1. ∀Bcast(A; t; m) ∈ θ, A /∈ Vadv
2. ∀Dcast(A; t; α, β, m) ∈ θ, ∃B ∈ Vadv,
∃δ (cid:62) ∆relay + dist(A,B)
Receive(B; t − δ; C, m) ∈ θ
vadv
, ∃C ∈ V,
We denote the set of all traces feasible with respect to a
setting S, T-protocol model P, and adversary model A∆relay
by ΘS,P,A∆relay
.
Condition 1 of Deﬁnition 11 is only to facilitate the pre-
sentation of proofs in subsequent sections, stating that ad-
versarial nodes do not use the Bcast primitive. Condition 2
states that every message sent by an adversarial node is nec-
essarily a replay of a message m that either this or another
adversarial node received. In addition, the delay between re-
ceiving m and re-sending it, or more precisely the diﬀerence
between the start times of the corresponding events, needs
to be at least ∆relay, plus the propagation delay across the
adversary channel in case another adversarial node received
the relayed message.
From A∆relay , we derive two weaker adversary models, A(cid:48)
∆relay
and A(cid:48)(cid:48)
∆relay restricts adversar-
ial nodes to broadcasts, while A(cid:48)(cid:48)
∆relay precludes adversarial
nodes from utilizing an adversary channel. As it will become
clear in Section 3, all these adversary models are valuable
for the impossibility result, and their weakness strengthens
the impossibility result.
∆relay , deﬁned next. Model A(cid:48)
Definition 12. A trace θ ∈ ΘS,P is feasible with respect
to an adversary model A(cid:48)
∆relay if:
1. ∀Dcast(A; t; α, β, m) ∈ θ, A /∈ Vadv
2. ∀Bcast(A; t; m) ∈ θ ∈ θ, ∃B ∈ Vadv,
∃δ (cid:62) ∆relay + dist(A,B)
Receive(B; t − δ; C, m) ∈ θ
vadv
, ∃C ∈ V,
Definition 13. A trace θ ∈ ΘS,P is feasible with respect
to an adversary model A(cid:48)(cid:48)
∆relay if:
1. ∀Bcast(A; t; m) ∈ θ, A /∈ Vadv
2. ∀Dcast(A; t; α, β, m) ∈ θ, ∃δ (cid:62) ∆relay,
∃C ∈ V, Receive(A; t − δ; C, m) ∈ θ
2.7 Neighbor Discovery Speciﬁcation
The ability to communicate directly, without the interven-
tion or ’assistance’ of relays, is expressed in our model by a
link being up, thus the following deﬁnition:
Definition 14. Node A is a neighbor of node B in set-
ting S at time t, if t :: A→B. If t :: A↔B we will say that
nodes A and B are neighbors at time t.
For simplicity of presentation, we use the “t :: A→ B” no-
tation to denote the neighbor relation, as well as the link
5
relation. Having deﬁned the neighbor relation, we are ready
to present the formal speciﬁcation of secure neighbor dis-
covery. This deﬁnition uses a parameter: R ∈ R>0, the
neighbor discovery (ND) range. Typically, R is equal to the
nominal communication range for a given wireless medium,
however, we use R more freely as the communication range
for which ND inferences are drawn.
Definition 15. A protocol model P satisﬁes(solves) two-
party neighbor discovery for an adversary model A, if the
following properties are both satisﬁed:
ND1 ∀S ∈ Σ, ∀θ ∈ ΘS,P,A, ∀A, B ∈ Vcor,
Neighbor(A; t; B, t(cid:48)) ∈ θ =⇒ t(cid:48) :: B→A
ND2 ∀d ∈ (0, R], ∀A, B ∈ V, A (cid:54)= B, ∃S ∈ Σ,
V = Vcor = {A, B} ∧ dist(A, B) = d ∧ R(cid:62)0 :: A↔B
∧ ∃θ ∈ ΘS,P,A, Neighbor(A; t; B, t(cid:48)) ∈ θ
Intuitively, property ND1 requires that if a node accepts some
other correct node B as a neighbor at time t(cid:48), then B is ac-
tually a neighbor at that time. Property ND2 complements
ND1, assuring that the protocol oﬀers minimal availability: