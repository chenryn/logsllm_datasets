**What keywords did you search in Kubernetes issues before filing this one?**
(If you have found any duplicates, you should instead reply there.): dns,
skydns, dns not resolving
* * *
**Is this a BUG REPORT or FEATURE REQUEST?** (choose one): Bug
**Kubernetes version** (use `kubectl version`):
    Client Version: version.Info{Major:"1", Minor:"3", GitVersion:"v1.3.5", GitCommit:"b0deb2eb8f4037421077f77cb163dbb4c0a2a9f5", GitTreeState:"clean", BuildDate:"2016-08-11T20:29:08Z", GoVersion:"go1.6.2", Compiler:"gc", Platform:"darwin/amd64"}
    Server Version: version.Info{Major:"1", Minor:"3", GitVersion:"v1.3.6", GitCommit:"ae4550cc9c89a593bcda6678df201db1b208133b", GitTreeState:"clean", BuildDate:"2016-08-26T18:06:06Z", GoVersion:"go1.6.2", Compiler:"gc", Platform:"linux/amd64"}
**Environment** :
  * Hosted GKE cluster
**What happened** :  
I created a new cluster with the `create cluster` button in the GUI.
Then, I created a number of headless services with explicitly defined
endpoints that pointed at external google cloud VMS:
Endpoint:
    {
        "kind": "Endpoints",
        "apiVersion": "v1",
        "metadata": {
            "name": "rabbitmq"
        },
        "subsets": [
            {
                "addresses": [
                    { "ip": "validExternalIP" }
                ],
                "ports": [
                    { "port": 5672 }
                ]
            }
        ]
    }
Service:
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "name": "rabbitmq",
        "labels": {
          "name": "rabbitmq"
        }
      },
      "spec": {
        "ports": [
          {
            "port": 5672
          }
        ]
      }
    }
My DNS quickly began failing to resolve anything.
According to http://kubernetes.io/docs/user-guide/debugging-services/ this
command should always work:
    root@pod:/usr/src/app# nslookup kubernetes.default
    ;; connection timed out; no servers could be reached
**What you expected to happen** :  
I expected the kubedns pods to properly direct intra-cluster traffic
**How to reproduce it** (as minimally and precisely as possible):  
Create a new cluster, wait