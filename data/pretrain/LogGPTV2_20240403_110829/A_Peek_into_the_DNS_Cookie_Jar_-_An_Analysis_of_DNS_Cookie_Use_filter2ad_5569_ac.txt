312
J. Davis and C. Deccio
the 1.5 million IPs. As a result, we experienced a high churn and only saw
528,832 (34%) of IPs respond with both an answer and an rcode of NOERROR in
our normal condition.3
Responses with Missing/Invalid Client Cookies. Of those resolvers from
which we still received responses, 28,605 (5.4%) included a cookie in the normal
condition (or the intermediate IP did). For these IPs in the no-cookie scenario,
we surprisingly got a normal response from 23,979 (84%) IPs. Of those with bad
responses, 3,625 (13%) had a SERVFAIL rcode and an additional 909 (3.2%)
timed out. For the no-edns queries, we saw similar numbers compared to those
who sent cookies: 24,798 (87%) responded to our stub resolver normally, 2,495
(8.7%) responded with SERVFAIL, and 1,236 (4.3%) timed out.
Finally, in the fake category, we began to see more rejection. This test was
performed a day after no-edns and as a result, there was more churn and some
servers may have stopped sending EDNS since we appeared to not support it. We
recorded 27,079 IPs which sent a cookie in a normal query directly preceding
this test. We saw a much lower percentage of acceptance here with only 5,115
(20%) responding to the stub resolver normally. Most failure is split between
SERVFAIL with 10,059 (40%) of IPs and time outs with 9,564 (38%) of IPs.
The speciﬁcation for DNS Cookies states that a client must discard a response
with an invalid client cookie or a missing cookie when one is expected. However,
we observed that 20% of recursive clients did not reject invalid cookies and that
over 80% of clients did not discard responses that were missing a cookie when
one should have been present (as demonstrated to the client in a previous query).
This means that a majority of recursive clients may still be susceptible to cache
poisoning attacks because a response without EDNS or a DNS COOKIE option is
accepted as easily as a legitimate response with a valid client cookie.
Responses with BADCOOKIE Rcode. Two of our conditions tested how
a recursive resolver responds to a BADCOOKIE rcode. In one condition we still
included the answer, but in the other, we did not. This imitates an authoritative
server strictly requiring cookies (though a correctly behaving serving would pro-
vide a valid server cookie and accept it in future queries). For these conditions,
we consider all 528,832 servers who successfully answered the normal condition
regardless of cookie use.
For the bad queries, 301,929 (57%) of IPs timed out and 206,577 (39%)
returned an rcode of SERVFAIL. We observed similar values for bad-answer:
272,041 (51%) timed out and 236,401 (45%) returned SERVFAIL. We did observe
an extra eﬀort by recursive resolvers receiving either a bad or a bad-answer
response to get a valid response. More than half of IP addresses issued at least
19 queries in connection with either of these responses—as opposed to a median
3 We did not rerun the initial collection as the process is resource intensive and takes
multiple days. We are also less interested in servers lost due to churn as they are
unlikely to be true open resolvers as opposed to misconﬁgurations.
A Peek into the DNS Cookie Jar
313
of 1 for normal queries. Interestingly, 17,921 (3.4%) of recursive resolvers that
responded to our bad-answer query returned to us the answer that our servers
had given to them, despite the BADCOOKIE rcode in the response from our author-
itative servers. Of those that returned an answer, 14,350 (80%) also set the rcode
to SERVFAIL. The lack of enforcement is accompanied by a lack of consensus on
how unexpected responses should be handled.
5.2 Server Handling of Unexpected Client Behavior
Here we performed a short test to determine how DNS servers would respond to
unexpected client behavior, with regard to the server cookie sent by the client.
Speciﬁcally, we had our client send 5 queries that included the most recently
received server cookie, 5 queries without a server cookie, and 5 queries with
a fake server cookie. In each of these conditions, the client cookie was sent as
normal. In the latter two cases, the speciﬁcation provides three options for a
server [11]. They may silently discard the request, respond with the BADCOOKIE
error code, or respond normally as if no cookie option was present. We sent
these queries to all Alexa IPs, TLD IPs, and recursive resolver IPs identiﬁed in
Sect. 3.1 that supported cookies.
For Alexa servers, we observed 41,083 IPs that responded to at least one
normal query with a valid response and rcode of NOERROR. In our two other
scenarios, nearly all of these IPs also had one or more standard responses: >99%
for queries without cookies and with fake cookies. We observed 1 IP that used
the BADCOOKIE rcode even when we sent the most recently received server cookie.
We saw only 28 IPs use BADCOOKIE when we didn’t send a cookie and 27 IPs
when we sent a fake cookie.
For TLD servers, we initially observed 1,246 IPs that responded to at least
one normal query with an rcode of NOERROR. All but 3 IPs returned an rcode
of NOERROR in both the fake and missing cookie scenarios. These 3 IPs con-
sistently returned an rcode of BADCOOKIE under these conditions, and all were
authoritative for the il (Israel) TLD.
For recursive resolvers, we saw 137,896 IPs return an rcode of NXDOMAIN (we
queried for a non-existent domain) for a normal query. Again we saw over 99%
continue to behave normally when the server cookie was missing or fake. We
measured 49 servers using BADCOOKIE for a missing cookie and 53 for a fake
cookie (though 13 IPs sent BADCOOKIE incorrectly in the normal condition).
In summary, practically no server changes its behavior if it doesn’t receive
a server cookie or if it receives a fake one (even after the client previously sent
valid cookies). While this behavior is consistent with the speciﬁcation, it is the
least restrictive approach. As a result, these servers can still potentially be used
in reﬂection attacks because they will generate a full response regardless of the
server cookie.
314
J. Davis and C. Deccio
6 Discussion
We have now enumerated support for DNS Cookies and found that it is limited,
both for clients and servers. We have also seen that few clients and servers
supporting cookies enforce them. This begs the question of what contribution, if
any, DNS Cookies currently make. DNS Cookies are also in a diﬃcult situation
because they require wide deployment for enforcement to be enabled, but there
may be little value in adopting them today. We now discuss the perceived current
beneﬁts of cookies and the path forward to wider adoption and enforcement.
6.1 Cookie Beneﬁts Today
DNS Cookies have minimal value in their current state. We found that cookies
are used by less than 30% of servers and 10% of recursive clients. This alone
means that 70% of servers can be abused for reﬂection attacks and 90% of
clients are not strongly protected from cache poisoning attacks (though other
measures exist). Also noteworthy is the fact that 90% of clients are not sending
server cookies (as a client cookie is a prerequisite).
Due to relatively low adoption rates, those that do support cookies are unable
to enforce them since doing so would break compatibility with the majority
of infrastructure. In our testing, we demonstrated our support for cookies in
preliminary queries but still observed that only 20% of clients and less than 1%
of servers changed their behavior if a cookie was missing or fake.
The only beneﬁt we see today is that receiving a valid cookie acts as a
reassurance that the other party’s identity is correct. In real-world applications,
this reassurance provides little value since it does not change an implementation’s
behavior: it would accept the message regardless of a cookie.
In summary, we do not see any beneﬁts from DNS cookies, as they are used
today. Cookies exist mostly in a dormant state, but if adoption signiﬁcantly
improves such that they can be enforced, they can become eﬀective.
6.2 Path Forward for Cookies
The obvious next step for cookies is to increase adoption among clients and
servers. However, there is somewhat little beneﬁt to doing so today due to the
lack of enforcement. Additionally, servers may not be concerned with identiﬁca-
tion (as they’re only a passive entity in reﬂection attacks) and clients may feel
protected from cache poisoning through other measures.
To incentivize adoption, strategies for partial enforcement should be explored.
For example, clients and servers could begin enforcing cookies use for parties
they previously observe using cookies. In our testing, we saw that 80% of clients
and 99% of servers did not do this. Another enforcement implementation could
involve a mechanism to advertise cookie support. This would allow other parties
to verify that an IP intends to use cookies and then apply strict enforcement
on a case-by-case basis. Neither of these enforcement strategies will overcome
A Peek into the DNS Cookie Jar
315
the lack of cookie adoption because enforcement can only ever be applied to the
small percentage of clients and servers supporting cookies.
As a result, the main step for cookies is to continue to grow adoption num-
bers. As adoption grows, opportunistic or learned enforcement will become more
viable. Given the entrenchment of the DNS in internet infrastructure, it is
unlikely that adoption will ever be universal, and as a result, strict enforce-
ment may never be possible. Here we hope that strategic enforcement can be
suﬃcient enough to deploy as a permanent strategy.
7 Ethical Considerations
All measurements and analyses performed in this paper were designed to be
benign. Queries were sent at a low frequency, typically one per second, and never
exceeded a volume of more than 20 queries per minute to a given IP address.
Additionally, our probes were used solely to measure cookie usage and support.
None of our probes were designed to exploit clients or servers.
8 Conclusion
In this paper, we present what is, to our knowledge, the ﬁrst study of DNS
Cookie usage. We ﬁnd that cookie usage is limited, despite its standardization
four years ago. We ﬁnd that under 30% of IPs for the top 1 million Alexa domains
and less than 20% of IPs for the TLDs supported cookies. We also observe that
17% of recursive resolvers support cookies as a “server”, but only 9% do as a
“client”. We next analyzed a collection of server cookies and exposed potential
issues, such as inconsistent clocks, which could potentially cause issues if cookies
were enforced.
Finally, we experimented to see if any clients or servers enforced cookie usage.
We observe that only 20% of clients and less than 1% of servers behave diﬀerently
if an IP that previously supported cookies does not supply a cookie or replies
with a fake cookie. This highlights that even those supporting cookies are not
seeing any signiﬁcant protection.
Overall, DNS Cookie adoption is limited, and there are few beneﬁts for those
using cookies. For cookies to leave their dormant state, higher adoption rates
are necessary. From there, we believe that strategic enforcement may begin to
produce real-world beneﬁts.
Acknowledgments. We gratefully acknowledge the Comcast Innovation Fund for
their support of the work that produced this material. We also thank the PAM 2021
reviewers and our shepherd for their helpful comments.
Sandia National Laboratories is a multimission laboratory managed and oper-
ated by National Technology and Engineering Solutions of Sandia, LLC., a wholly
owned subsidiary of Honeywell International, Inc., for the U.S. Department of Energy’s
National Nuclear Security Administration under contract DE-NA-0003525.
316
J. Davis and C. Deccio
References
1. dnscurve.org. (2009) https://dnscurve.org/
2. Amazon: Alexa top sites (2020). https://aws.amazon.com/alexa-top-sites/
3. Arends, R., Austein, R., Larson, M., Massey, D., Rose, S.: RFC 4033: DNS security
introduction and requirements, March 2005
4. Arends, R., Austein, R., Larson, M., Massey, D., Rose, S.: RFC 4034: Resource
records for the DNS security extensions, March 2005
5. Arends, R., Austein, R., Larson, M., Massey, D., Rose, S.: RFC 4035: protocol
modiﬁcations for the DNS security extensions, March 2005
6. Bortzmeyer, S.: DNS query name minimisation to improve privacy, March 2016
7. B¨ottger, T., et al.: An empirical study of the cost of DNS-over-HTTPS. In: Proceed-
ings of the ACM SIGCOMM Internet Measurement Conference, IMC pp. 15–21
(2019). https://doi.org/10.1145/3355369.3355575
8. Damas, J., Graﬀ, M., Vixie, P.: Extension mechanisms for DNS (EDNS(0)), April
2013
9. Deccio, C., Davis, J.: DNS privacy in practice and preparation. In: CoNEXT 2019 -
Proceedings of the 15th International Conference on Emerging Networking Exper-
iments and Technologies (2019). https://doi.org/10.1145/3359989.3365435
10. Dickinson, J., Dickinson, S., Bellis, R., Mankin, A., Wessels, D.: Rfc 7766: DNS
transport over TCP - implementation requirements, March 2016
11. Eastland, D., Andrews, M.: RFC 7873: Domain name system (DNS) cookies, May
2016
12. Hilton, S.: DYN analysis summary of Friday October 21 attack (2016). https://
dyn.com/blog/dyn-analysis-summary-of-friday-october-21-attack/
13. Hoﬀman, P., McManus, P.: RFC 8484: DNS queries over https (DOH), October
2018
14. Hu, Z., Zhu, L., Heidemann, J., Mankin, A., Wessels, D., Hoﬀman, P.: RFC 7858:
speciﬁcation for DNS over transport layer security (tls), May 2016
15. Hubert, B., Mook, R.: RFC 5452: Measures for making DNS more resilient against
forged answers, January 2009
16. Internet Assigned Numbers Authority: Root Files (2020). https://www.iana.org/
domains/root/ﬁles
17. Lu, C., et al.: An end-to-end, large-scale measurement of DNS-over-encryption: how
far have we come? In: Proceedings of the ACM SIGCOMM Internet Measurement
Conference, IMC pp. 22–35 (2019)
18. Mockapetris, P.: RFC 1034: domain names - concepts and facilities, November 1987
19. Mockapetris, P.: RFC 1035: Domain names - implementation and speciﬁcation,
November 1987
20. Prince, M.: The DDoS that knocked spamhaus oﬄine (and how we mitigated
it). https://blog.cloudﬂare.com/the-ddos-that-knocked-spamhaus-oﬄine-and-ho/
(2013)
21. Sury, O., Toorop, W., Eastland, D., Andrews, M.: Interoperable domain name
system (DNS) server cookies, May 2020