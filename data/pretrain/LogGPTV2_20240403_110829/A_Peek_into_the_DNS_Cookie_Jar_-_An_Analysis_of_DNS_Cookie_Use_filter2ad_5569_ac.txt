### 312
**Authors: J. Davis and C. Deccio**

#### 1.5 Million IP Addresses and High Churn

We tested 1.5 million IP addresses and observed a high churn rate. Only 528,832 (34%) of the IPs responded with both an answer and an rcode of NOERROR in our normal condition. 

#### Responses with Missing/Invalid Client Cookies

Of the resolvers that still responded, 28,605 (5.4%) included a cookie in the normal condition (or the intermediate IP did). In the no-cookie scenario, 23,979 (84%) of these IPs surprisingly returned a normal response. Among the responses with errors, 3,625 (13%) had a SERVFAIL rcode, and 909 (3.2%) timed out. For the no-EDNS queries, we saw similar results: 24,798 (87%) responded normally, 2,495 (8.7%) responded with SERVFAIL, and 1,236 (4.3%) timed out.

#### Fake Cookie Responses

In the fake cookie category, we observed more rejections. This test was conducted a day after the no-EDNS test, resulting in more churn. We recorded 27,079 IPs that sent a cookie in a normal query before this test. Only 5,115 (20%) responded normally to the stub resolver. The majority of failures were split between SERVFAIL (10,059 or 40% of IPs) and timeouts (9,564 or 38% of IPs).

The DNS Cookies specification states that a client must discard a response with an invalid client cookie or a missing cookie when one is expected. However, we found that 20% of recursive clients did not reject invalid cookies, and over 80% did not discard responses missing a cookie. This indicates that most recursive clients may still be susceptible to cache poisoning attacks, as they accept responses without EDNS or DNS COOKIE options as easily as legitimate responses with valid client cookies.

#### Responses with BADCOOKIE Rcode

We tested how recursive resolvers respond to a BADCOOKIE rcode in two conditions: one where the answer was included and another where it was not. This mimics an authoritative server strictly requiring cookies. For these conditions, we considered all 528,832 servers that successfully answered the normal condition, regardless of cookie use.

For bad queries, 301,929 (57%) of IPs timed out, and 206,577 (39%) returned an rcode of SERVFAIL. Similar values were observed for bad-answer: 272,041 (51%) timed out, and 236,401 (45%) returned SERVFAIL. We noted that more than half of the IP addresses issued at least 19 queries in response to either of these conditions, compared to a median of 1 for normal queries. Interestingly, 17,921 (3.4%) of recursive resolvers that responded to our bad-answer query returned the answer provided by our servers, despite the BADCOOKIE rcode. Of those that returned an answer, 14,350 (80%) also set the rcode to SERVFAIL. This lack of enforcement is accompanied by a lack of consensus on how unexpected responses should be handled.

#### Server Handling of Unexpected Client Behavior

We performed a short test to determine how DNS servers handle unexpected client behavior regarding the server cookie. Specifically, we had our client send five queries with the most recently received server cookie, five queries without a server cookie, and five queries with a fake server cookie. In each case, the client cookie was sent as usual. The specification provides three options for a server: silently discard the request, respond with the BADCOOKIE error code, or respond normally as if no cookie option was present. We sent these queries to all Alexa IPs, TLD IPs, and recursive resolver IPs identified in Section 3.1 that supported cookies.

For Alexa servers, 41,083 IPs responded to at least one normal query with a valid response and rcode of NOERROR. In the other scenarios, nearly all of these IPs also had one or more standard responses: >99% for queries without cookies and with fake cookies. One IP used the BADCOOKIE rcode even when we sent the most recently received server cookie. Only 28 IPs used BADCOOKIE when no cookie was sent, and 27 IPs when a fake cookie was sent.

For TLD servers, 1,246 IPs responded to at least one normal query with an rcode of NOERROR. All but 3 IPs returned an rcode of NOERROR in both the fake and missing cookie scenarios. These 3 IPs consistently returned an rcode of BADCOOKIE under these conditions and were authoritative for the .il (Israel) TLD.

For recursive resolvers, 137,896 IPs returned an rcode of NXDOMAIN (we queried for a non-existent domain) for a normal query. Over 99% continued to behave normally when the server cookie was missing or fake. We measured 49 servers using BADCOOKIE for a missing cookie and 53 for a fake cookie (though 13 IPs incorrectly sent BADCOOKIE in the normal condition).

In summary, practically no server changes its behavior if it doesn’t receive a server cookie or if it receives a fake one. While this behavior is consistent with the specification, it is the least restrictive approach. As a result, these servers can still potentially be used in reflection attacks because they will generate a full response regardless of the server cookie.

### 6. Discussion

We have enumerated support for DNS Cookies and found it to be limited, both for clients and servers. Few clients and servers that support cookies enforce them. This raises the question of what, if any, contribution DNS Cookies currently make. DNS Cookies are in a difficult situation because they require wide deployment for enforcement to be effective, but there may be little value in adopting them today. We now discuss the perceived current benefits of cookies and the path forward to wider adoption and enforcement.

#### 6.1 Current Benefits of Cookies

DNS Cookies have minimal value in their current state. We found that less than 30% of servers and 10% of recursive clients use cookies. This means that 70% of servers can be abused for reflection attacks, and 90% of clients are not strongly protected from cache poisoning attacks (though other measures exist). Notably, 90% of clients do not send server cookies, as a client cookie is a prerequisite.

Due to low adoption rates, those that do support cookies cannot enforce them, as doing so would break compatibility with the majority of infrastructure. In our testing, we demonstrated our support for cookies in preliminary queries but observed that only 20% of clients and less than 1% of servers changed their behavior if a cookie was missing or fake.

The only benefit we see today is that receiving a valid cookie acts as a reassurance that the other party’s identity is correct. In real-world applications, this reassurance provides little value since it does not change an implementation’s behavior: it would accept the message regardless of a cookie.

In summary, we do not see any significant benefits from DNS cookies as they are used today. Cookies exist mostly in a dormant state, but if adoption significantly improves, they can become effective.

#### 6.2 Path Forward for Cookies

The next step for cookies is to increase adoption among clients and servers. However, there is little benefit to doing so today due to the lack of enforcement. Servers may not be concerned with identification (as they are only passive entities in reflection attacks), and clients may feel protected from cache poisoning through other measures.

To incentivize adoption, strategies for partial enforcement should be explored. For example, clients and servers could begin enforcing cookie use for parties they previously observed using cookies. In our testing, we saw that 80% of clients and 99% of servers did not do this. Another enforcement implementation could involve a mechanism to advertise cookie support, allowing other parties to verify that an IP intends to use cookies and then apply strict enforcement on a case-by-case basis. Neither of these enforcement strategies will overcome the lack of cookie adoption, as enforcement can only be applied to the small percentage of clients and servers supporting cookies.

As a result, the main step for cookies is to continue to grow adoption numbers. As adoption grows, opportunistic or learned enforcement will become more viable. Given the entrenchment of DNS in internet infrastructure, universal adoption is unlikely, and strict enforcement may never be possible. Here, we hope that strategic enforcement can be sufficient enough to deploy as a permanent strategy.

### 7. Ethical Considerations

All measurements and analyses performed in this paper were designed to be benign. Queries were sent at a low frequency, typically one per second, and never exceeded a volume of more than 20 queries per minute to a given IP address. Our probes were used solely to measure cookie usage and support and were not designed to exploit clients or servers.

### 8. Conclusion

In this paper, we present, to our knowledge, the first study of DNS Cookie usage. We find that cookie usage is limited, despite its standardization four years ago. Less than 30% of IPs for the top 1 million Alexa domains and less than 20% of IPs for the TLDs support cookies. We also observe that 17% of recursive resolvers support cookies as a "server," but only 9% do as a "client." We analyzed a collection of server cookies and exposed potential issues, such as inconsistent clocks, which could cause problems if cookies were enforced.

Finally, we experimented to see if any clients or servers enforced cookie usage. We observed that only 20% of clients and less than 1% of servers behaved differently if an IP that previously supported cookies did not supply a cookie or replied with a fake cookie. This highlights that even those supporting cookies are not seeing significant protection.

Overall, DNS Cookie adoption is limited, and there are few benefits for those using cookies. For cookies to leave their dormant state, higher adoption rates are necessary. From there, we believe that strategic enforcement may begin to produce real-world benefits.

### Acknowledgments

We gratefully acknowledge the Comcast Innovation Fund for their support of the work that produced this material. We also thank the PAM 2021 reviewers and our shepherd for their helpful comments.

Sandia National Laboratories is a multimission laboratory managed and operated by National Technology and Engineering Solutions of Sandia, LLC., a wholly owned subsidiary of Honeywell International, Inc., for the U.S. Department of Energy’s National Nuclear Security Administration under contract DE-NA-0003525.

### References

1. dnscurve.org. (2009) https://dnscurve.org/
2. Amazon: Alexa top sites (2020). https://aws.amazon.com/alexa-top-sites/
3. Arends, R., Austein, R., Larson, M., Massey, D., Rose, S.: RFC 4033: DNS security introduction and requirements, March 2005
4. Arends, R., Austein, R., Larson, M., Massey, D., Rose, S.: RFC 4034: Resource records for the DNS security extensions, March 2005
5. Arends, R., Austein, R., Larson, M., Massey, D., Rose, S.: RFC 4035: protocol modifications for the DNS security extensions, March 2005
6. Bortzmeyer, S.: DNS query name minimisation to improve privacy, March 2016
7. Böttger, T., et al.: An empirical study of the cost of DNS-over-HTTPS. In: Proceedings of the ACM SIGCOMM Internet Measurement Conference, IMC pp. 15–21 (2019). https://doi.org/10.1145/3355369.3355575
8. Damas, J., Graff, M., Vixie, P.: Extension mechanisms for DNS (EDNS(0)), April 2013
9. Deccio, C., Davis, J.: DNS privacy in practice and preparation. In: CoNEXT 2019 - Proceedings of the 15th International Conference on Emerging Networking Experiments and Technologies (2019). https://doi.org/10.1145/3359989.3365435
10. Dickinson, J., Dickinson, S., Bellis, R., Mankin, A., Wessels, D.: RFC 7766: DNS transport over TCP - implementation requirements, March 2016
11. Eastland, D., Andrews, M.: RFC 7873: Domain name system (DNS) cookies, May 2016
12. Hilton, S.: DYN analysis summary of Friday October 21 attack (2016). https://dyn.com/blog/dyn-analysis-summary-of-friday-october-21-attack/
13. Hoffman, P., McManus, P.: RFC 8484: DNS queries over HTTPS (DOH), October 2018
14. Hu, Z., Zhu, L., Heidemann, J., Mankin, A., Wessels, D., Hoffman, P.: RFC 7858: specification for DNS over transport layer security (TLS), May 2016
15. Hubert, B., Mook, R.: RFC 5452: Measures for making DNS more resilient against forged answers, January 2009
16. Internet Assigned Numbers Authority: Root Files (2020). https://www.iana.org/domains/root/files
17. Lu, C., et al.: An end-to-end, large-scale measurement of DNS-over-encryption: how far have we come? In: Proceedings of the ACM SIGCOMM Internet Measurement Conference, IMC pp. 22–35 (2019)
18. Mockapetris, P.: RFC 1034: domain names - concepts and facilities, November 1987
19. Mockapetris, P.: RFC 1035: Domain names - implementation and specification, November 1987
20. Prince, M.: The DDoS that knocked Spamhaus offline (and how we mitigated it). https://blog.cloudflare.com/the-ddos-that-knocked-spamhaus-offline-and-how-we-mitigated-it/ (2013)
21. Sury, O., Toorop, W., Eastland, D., Andrews, M.: Interoperable domain name system (DNS) server cookies, May 2020