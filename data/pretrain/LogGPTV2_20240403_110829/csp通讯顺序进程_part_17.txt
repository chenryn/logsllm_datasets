B3.5
图3.4
强3.3
1
P1o.,
101
---
## Page 125
X1一台白动售货机至多能连续接受两枚硬币，也至多能连续
且其字母表一般约定为
两个进程之间的选择就是非确定性的。我们把这种组合运算记
进程执行的；但是如果两个进程都有可能执行这同一个动作，赠
如果有一个逃程不能执行某个系统动作，那么该动作一定是另一
下，系统的每个动作也就是它们中某个进程的单独动作了。因此
不道接相互作用或同步，这样做有时也是很有用的。在这种情况
会引入非确定性。
作用的，但字母表不同的进程合拜成并发动作的系统，而且，不
统的其余动作则是任意穿插发生的。应用这个算子，就能把互框
母表中的那些动作的发生，均需两个运算对象同时参加，而整个系
102
然而，把字母表相同的进程并在一起，使它们并发操作，但
举例
在第二章中给出的算子Ⅱ的定义里，同处两个运算对象的字
PIQ
α(PIQ)=aP =aQ
3.6
（读作P穿插于Q）
图3.6
穿
描
---
## Page 126
的是进程的环境，而不是其它的因素。而且只有当被选中的事件
下一事件，使其为b或了。
式串的最右端公式中，由于选择是非确定性的，事件α可能是川
会停止动作，而b与之间的选择是留给环境至权处理。而在公
象的进行情况有关，因而没有非确定性的问题。左边的运算对象
公式串的最左端的公式中，事件α的发生只会与Ⅲ左边的运算对
((a→STOP) Il (b→Qe→R))/
注意Ⅱ对口是没有分配律的。我们举一个反例即可说明（设b≠
L1--3
3.6.1
其中 L= SHAREDLACKEY。
学家服务（参看2.5.3节及2.6.4节中的X1）
X2把四个男仆当作一个仆人使用，每次一个男仆只为一位哲
送出两块巧克力（参看1.1.3节X6）
5
5
4
L6和L7陈逃了在Ⅲ的运算对象提供的初始事件中做出选择
那么PQ=(x:A→(P(x) IQ)y:B→(PHQ(y9))
PISTOP=P
如果P=(x:A→P(x))，
(x→P) Il (y→Q) =(x→(P Il (y→Q))[y→((x→P) |l Q))
当P不发散时，
川有结合律，
法则
=((a-→STOP  b→Q)[(a→STOP Il c→R))/
≠((b-Q)(c→R))
=(b-→Qc-→R)
(VmS VmS) =VmS2
有
，有对称律，对门还有分配律
PI RUN = RUN
III
Q=(y:B→Q(y))
103
口
口
---
## Page 127
这条法则反映了这样一个事实，即由于我扩无法知道（PⅡQ)的
绝执行进程P和Q都拒绝的事件
3.6.2迹和拒绝案
.T= {(t,u)|t∈ traces(P)Au∈traces(Q)As interleaves(t,u)}
(PIQ)能执行对P或Q为可能的任何初始事件：因而它只能拒
义请参看1.9.3节。
由此可见，（RⅡR)与3.5节X2很类似。同理可证得
而且 (b-→R)I R=(α→((b→R)Il (b-→R))Db→(R Il R))
那么(RI R)=(a→((b→R) I R)Da→(Rl (b→R)))
X1 设 R=(α→b→R)
对两个运算对象均为可能事件时，才会出现非确定性问题。
其中
L3 (PIQ)/s= 
的公式定义
L2
L1
104
refusals(P llQ)=refusals(P[Q)
traces(P lQ)= {sl 3t∈traces(P). 3u∈traces(Q). 
(PⅡQ)的迹是由P和Q的迹的任意穿插构成的。穿插的定
执行完迹8中的事件后，（PIQ)的行为可由以下相当复杂
举例
=α→((b→R)  R)
=a→((b→R) R)(R(b→R))
（#+W)ET
ZSWA=(SWAISWA)
=μX.(a-→b→X[b→a→x)
=(a-→(b→→((b→R)R))
(P/t)(Q/u)
[b→(4→((b→R) Il R)))
sinterleaves(t,u)}
卫式递归
由上式
口
5
---
## Page 128
，无法确定。
X3简单自动售货机应当满足下述复合描述
X2当售货机所收硬币和所给出的巧克力价值相当时，售货机
有--点是不言而的，即这个被描远进程的每个迹和每个拒
X1当一台自动售货机已收到的硬币比它已选出的巧克力价值
的含义就修改为
P为一非确定性进程时
里我们再引入变量re}表示进程的--个任意的拒绝集。于是，
它的拒绝集所具备的性质。我们已使用tr来表示进程的迹，这
一进程进行描逃时，我们不仅需要刻画它的迹的特性，而且要刻画
拒绝集是可被间接观察到的进程行为的一个重要方面。因此在对
插方式中的任一种所反映。至于选择哪一种，我们并不知道，也
之后，（P川Q)的未来行为可由P和Q的迹构成s的所有可能穿
的主人自然要求它不能拒绝再收一枚硬币。合
绝集ref任意时刻都应满足上述描述。
为大时，顾客有权要求它不能拒绝再给出一块巧克力，即
迹是通过怎样的方式由进程P和Q的迹穿插构成的：因而继
NEWVMSPEC=FAIRAPROFIT1A(tr↓choc≤tr ↓coin)
tr,ref.tr∈traces(P)Aref∈refusals(Pjtr)>S(tr,ref)
在3.4节中我们已经看到引入进程的拒绝集是很有必要的。
举例
PROF1T 1 =(tr ↓choc= tr ↓coin→coin∈ref)
FAIR=(tr↓chocchoc∈ref)
P sat S(tr,ref)
3.7
描
述
105
门
口
---
## Page 129
因此证明无发散，并不比证明无死锁更麻烦。
要的性质是，进程不停地动作(K6)。为得到这些利签所付的
因而凡是满足NEWVMSPEC的进程都永远不会停止动作。口
P必须执行其中的一个事件。由于（参看上例X3）
如果PsatNONSTOP，且有一环境允许A中所有事件发生，则
述的是字母表为A的永远不停止动作的进程
可连续接受两枚硬币，如
X5我们还可以坚持让机器在顾客愿意送入硬币时，一次至少
极限，如
X4如果我们愿意，可以给连续接受硬币的机器的结存设一个
送出几块巧克力。
货机也满足它，尽管VMS2可以连续接受几枚硬币，并能连续
简单VMS满足该描逃。
有幸的是
公式
进程就不是发散的。我们可以把进程不发散的这个充分条件写成
此，如果存在这样一个集合，进程不能将它拒之门外，那么这个
为什么一个发散的进程能做任何事情，也可以拒绝任何事情。因
代价是证明的规则及过程要稍微复杂些。
进程的许多非常微妙却又极其重要的性质；也许这些性质中最重
我们还希望证明的一点是，进程不会发散。3.8节中叙述了
106
以上几个例子说明把ref引人进程的描述后，我们就能表述
进程STOP拒绝它的字母表中的每个事件。而下列谓词描
ATLEAST2=(tr ↓coin-tr↓chocref≠{coin,choc}
NONSTOP=(ref≠A)
NONSTOP=NONDIV
NONDIV=(ref≠A)
，而且象VMS2（1.1.3节中X6)那样的售
一
口
门
---
## Page 130
L2假设 x∈B.P(x) sat S(tr,x)
对有关一般选择的法则（1.10.2节L4）也需要类似地加强
是当tr=<>时，它的初始动作是不能被拒绝的
条法则（1.10,2节L4A）完全一样，即
略去（我们以后要这样做），法则L2A就跟有关确定性进程的那
L1如果PsatS
因而这种观察就可由P或Q或这两者的描迹进行刻画。所以非确
于是对其行为的每次观察就等于是对P或Q或二者兼有的观察。
成S(tr)，或写成S(tr,ref)的形式。但我们必须清楚，在任何
3.7.1
L2B
了。因此该法则需要加强，需要提及在进程的初始状态下，也就
已不足以证明进程在执行其初始事件之前不能停止动作这一点
句ref二A就可以省略不写。这样一来，如果我们把字母表一同
因为进程的拒绝集总是包含于它的字母表中（3.4.1节L8），子
L2A STOPAsat (tr=Aref≤A)
行任何事件
定性的证明规则的形式非常简单
写法中tr，ref都可能是进程描述的自由变量。
前面有关前缀运算的法则（1.10.2节L4B）虽然仍有效，但
由非确定性的定义可知，（P门Q)或似P动作，或似Q动作。
那么（x:B→P(x)） sat（(tr=<>A(Bref){})
STOP的证明规则陈述了该进程不做任何事情，而且拒绝执
在以下证明规则中，为方便起见，描述时而写成&，时而写
那么(PQ)sat(SVT)
而且 Q sat T
那么(c-→P)sat（(tr=<>Ac∈ref)V(trs=cAS(tr')))
如果PsatS（tr）
证明
STOP sat tr =
107
---
## Page 131
L7 如果 P sat(NODIV AS(ir,ref))
tr≠<>，对(PLQ)的观察是对P或Q的一种观察，因之必须被
绝的。所以，该集合应由它们两者的描述所规定。此后，即当
初启时，即tr=<>，（PQ）所拒绝的集合，必须是P和Q都拒
有关口的法则是出奇地简单
改变符号的法则也需作类似修改
那么(PIQ)sat(3X,Y,tef=(XUY)AS(tr aP,x)
P和Q均不发散
L3如果 Psat S(tr,ref)
则需要一条更复杂一些的法则，即
是，其描述不提及进程的拒绝集。为了正确处理进程的拒绝集，
复杂了
P和Q都不发散
它们两者之一（或两者一起）的描述所规定。
则(P[Q) sat (if tr =then (SAT) else (SVT))
P和Q都不发散
L5
L4 如果 Psat S(tr,ref)
108
如果PsatS
(PQ) sat (3s,l.(tr interleaves(s,t)AS(s)AT(t)))
关于穿插的法则则不必提及拒绝集
且Qsat T
则f(P)sat S(f-i*(tr),f-1(ref))
且 Qsat T(tr,ref)
在2.7节中给出的有关行组合的法则L1仍为有效的条件
有关屏蔽运算的法则，由于要防止进程的发散性，因而变得
且 Q sat T(tr)
如 P sat S(tr)
+
V(tr∈BAS(tr,tro)))
AT(tr raQ,Y))
要求为1-1函数
---
## Page 132
类进程满足的最强的描逃，是无意义的描逃，即永属。
这条法则甚至对非卫式的递归式也成立，不过所能证明的，使这
何合理定义的一个很重要的特征。
作用。正如我们在3.5.1节中所述，这种公平性是屏蔽运算的任
被屏藏的内部动作的状态下，才不能拒绝与其外部环境发生相互
全体时，P\C才能拒绝集合X。因此只有当P\C处于无法执行
实：仅当P能拒绝集合XUC时，即拒绝X与所有被隐藏事件的
这里的是一个从进程的迹到自然数的全面数。
出现次数的某个函数值，即
其中NODIV表示被屏蔽符号出现的次数不可以超过非屏截符号
归式也不一定是构造性的。例如，考虑方程
不必给以下无穷递归式赋以含义
证了方程式有唯一解(1.3节L2)，而且为我们免去了一个厂烦，
进程时，所用的方程式必须是卫式(1.1.2节)。这一限制不仅保
是含有变量n的一个谓词，n的取值范围是自然数0,1,2，
有关递归式（1.10.2节L6)的证明方法也需要强化。设S（）
如果S（0）
但不幸的是，引1人屏蔽运算（3.5节)后，
那么(P\C) sats.tr=s (aP -C)AS(s,ref UC)
在前几章里，我们一直遵守着一个约定，即以递归方法定义