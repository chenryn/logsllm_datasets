-
5.9
19.2
27.6
88.0
conf
142.4
-
358.2
70.0
1.97
1.56
2.69
3.89
3.62
3.38
-
4.54
3.38
6.8
17.5
21.5
108.7
conf
112.9
356.8
411.1
92.7
2.16
1.73
2.49
4.13
4.32
3.36
3.92
4.81
3.71
Dataset
WIKI
SPAM
MLAB
WEB
GAME
SWIN
CALT
IPING
TPING
Also, for some datasets we cannot have smaller gaps between win-
dows, e.g. we only conducted IPING/TPING censuses every six
months and we only collected GAME data every 3+ months.
Overlapping windows smooth out quick changes, but we believe
fast transients in the number of used IPv4 addresses are unlikely.
In the rest of the paper we associate statistics with the end of time
windows. For example, for the ﬁrst window the observed and esti-
mated used space is associated with 31 December, 2011.
4.4 Data collection and processing
Our goal is to get datasets of publicly routed IPv4 addresses that
were actually used. We do not distinguish whether IPs were used
legitimately or illegitimately, such as addresses hijacked by spam-
mers. For active probing we assume that positive responses only
occur when IP addresses were used – the same assumption made
by previous work [2–4].
For IPING we only counted IPv4 addresses that returned ICMP
echo replies, “destination protocol unreachable” or “destination
port unreachable” messages. We ignored addresses with other
ICMP errors or “TTL exceeded” messages, as for these it is un-
clear if they were actually used. For TPING we only counted
addresses that returned SYN/ACKs. We ignored addresses that
returned RSTs, as 25% of RSTs cover nearly contiguous /25 or
larger networks, suggesting they may have originated from ﬁre-
walls. Lack of reply indicates an address was truly unused, a host
ignored the probe, or the probe or response was ﬁltered or lost.
For the passive datasets we extracted the IPv4 addresses from
log ﬁles. We ﬁltered out multicast and private addresses (e.g.,
10.0.0.0/8), and those in unallocated or unrouted space. We identi-
ﬁed the routed space based on the route-views dataset from Route-
Views (RVs) [14]. For each time window we downloaded weekly
snapshots from RV and then aggregated all the snapshots (exclud-
ing a few unallocated but advertised preﬁxes).
For WIKI, SPAM, MLAB, WEB and GAME (server logs), the
addresses are only recorded for successful TCP sessions, so we can
be sure the addresses were used. SWIN and CALT contain unused
IPs from inside the two networks due to scanning that we cannot
ﬁlter out, but their number is negligible compared to the sizes of
the datasets. More problematically is that SWIN and CALT also
contain spoofed IPv4 addresses from outside the two networks that
do not represent used addresses. We describe our ﬁltering of these
in the following section.
4.5 Removal of spoofed IPs
We only have lists of observed IP addresses for SWIN and CALT.
We do not have packet or ﬂow data, and we do not know from
which IPs ﬂows originated. Hence, instead of using the technique
in [6], we needed a new heuristic to remove spoofed addresses.
Our heuristic is based on the assumption that spoofed IP ad-
dresses, which were not actively used, are uniformly distributed
over the IP space, since there are two main reasons for these:
• Distributed Denial of Service (DDoS) attacks where the at-
tacking machines send traﬃc from spoofed source addresses
selected randomly [25].
• Port scans where the scanner uses decoys. For example, the
prominent nmap scanning tool has an option that allows cre-
ating additional scans from random spoofed addresses to ob-
fuscate the identity of the scanning host(s).
Note that for CR spoofed addresses only cause errors if they were
not actually used. DDoS attacks where the attacker spoofs the
source address to be the victim’s address (reﬂector attacks) are
not a problem, as for these the spoofed addresses are most likely
used. Also note that while the autonomous systems (ASs) ﬁlter-
ing spoofed source addresses may not be uniformly distributed,
this does not aﬀect the overall uniform distribution, since attack-
ers or scanners (or their machines) are usually distributed across
the whole Internet including ASs that do not ﬁlter.
The assumption of uniform distribution is supported by circum-
stantial evidence from our data. We observed that the unﬁltered
SWIN and CALT have uniformly random distributed IPv4 ad-
dresses in six /8 preﬁxes that were completely or almost completely
unused by other sources (e.g. 53.0.0.0/8 or 55.0.0.0/8).6 While the
number of observed IPs from these ‘empty’ /8 subnets diﬀers for
SWIN and CALT, for a given dataset and time period the number of
observed IPs is roughly identical for these /8 – consistent with the
assumption that spoofed addresses are uniformly distributed over
the IPv4 space.
Our approach works in two stages. First, we estimate which /24
subnets should be removed entirely, and then we remove potentially
spoof addresses from used /24s.
From SWIN and CALT we removed all /24 subnets that:
1. have fewer than m observed IPs, and
2. have no overlapping IPs that are also in the spoof-free WIKI,
WEB, MLAB and GAME datasets.
6The number of addresses from these /8 in our non-spoofed sources
is negligible (no more than a few tens of addresses) and in some
cases we know from the network administrators that these /8 are
hardly used. However, for SWIN and CALT we see more than
10,000 addresses in these /8.
323We choose m as follows. Treating spoofed IPs as uniformly sam-
pled from a space of s IPs with probability p, the number X of
spoofed IPs in the space follows a Binomial distribution. Speciﬁ-
cally:
Pr (X > k) = 1 − k(cid:88)
(cid:19)
(cid:18) n
i
i
pi (1 − p)n−i .
In our case of /24 subnets, s = 256 and we estimate p based
on the number of spoofed IPs S in each ‘empty’ /8 preﬁx, so
p = S /224. We then choose m = k where Pr (X > k) < 10−8.
Note that for SWIN, S is relatively constant across all time periods
(10,000–15,000), but for CALT it increases from 15,000–20,000
until December 2013 to almost 250,000 in March 2014.
Spoofed IP addresses will also fall into /24 subnets that have
actually used IP addresses. The second phase is to ﬁlter out po-
tentially spoofed IPs in used /24 as follows. Since we assume
the spoofed IPs to be uniformly random distributed, the number
of spoofed IPs is S for used /8 preﬁxes as well. Subtracting the
number of already removed IPs in spoofed /24 subnets we have S (cid:48)
i
spoofed IPs left in /8 preﬁx i. Given the observed number of IPs Ti
in /8 preﬁx i in SWIN or CALT the expected number of not-spoofed
addresses per /8 preﬁx (out of 224 addresses) is
.
i
224 · Ti − S (cid:48)
224 − S (cid:48)
(cid:33)(cid:32)
(cid:33)
i
224
224 − S (cid:48)
i
(cid:32) Ti − S (cid:48)
i
Ti
≈(cid:0)Ti − S (cid:48)
(cid:1) /Ti .
i
On average the probability that an IP in i is valid (V) is
Pr (V) =
This tells us how many IPs to keep in each /8 preﬁx, but we
must also determine which IPs to keep. To do this we use the
fact that the distribution of the ﬁnal byte B of used addresses is
not uniform. We estimate the probability P(B|V) from the IPs ob-
served by all sources except SWIN and CALT. Then assuming that
P(B|not V) = 1
256 (uniform distribution), Bayes’ rule gives that an
IP is not spoofed in SWIN or CALT with probability
Pr (V|B) =
Pr (V) Pr (B|V)
Pr (V) Pr (B|V) + (1 − Pr (V)) /256 .
We then ﬁlter SWIN and CALT by independently removing ad-
dresses ending with B with probability 1 − P(V|B).
We cannot evaluate the true accuracy of our approach, but the
following circumstantial evidence shows that it is eﬀective. With
ﬁltering, randomly distributed IPs in the ‘empty’ /8 networks are
removed. With ﬁltering, the number of used /24 subnets gradually
increases over time and does not show large abrupt increases and
decreases anymore. Without ﬁltering the number of /24 subnets in
SWIN or CALT is much higher than in any other dataset, e.g.
it
is up to 30% higher than for our largest dataset (IPING) and up to
60% higher compared to WEB, GAME. After ﬁltering the number
of used /24 subnets in SWIN and CALT is lower or similar to that
in WEB and GAME.
Figure 2 shows the beneﬁt of ﬁltering spoofed addresses. LLM
estimates that include ﬁltered SWIN and CALT are quite consis-
tent with LLM estimates made without SWIN and CALT. LLM
estimates using unﬁltered SWIN and CALT are much higher (ex-
ceeding the possible maximum for March 2014). To save space,
we only show this comparison for /24 subnets, as spoofed IPs have
less negative impact on the number of observed and estimated used
IPv4 addresses due to the uniform random nature and low (10% or
less) estimated percentage of spoofed IPs.
Figure 2: Observed (obs) and estimated (est) /24 subnets with and
without spoof ﬁltering compared to observed and estimated /24
subnets without SWIN and CALT
4.6 Dynamic and static addresses
Many IPv4 addresses are (re)assigned dynamically (such as with
DHCP or PPPoE). Hence, long passive measurements may observe
multiple addresses for a single host, and over-count the number of
simultaneously used addresses.
If each assignment uses the lowest/highest unused address of
a pool, then the total number of addresses used from the pool is
the maximum simultaneous pool utilisation and the LLM estimate
would indeed estimate the maximum number of simultaneously
used addresses. However, if addresses are drawn uniformly, as our
measurements suggest, then all pool addresses could be observed
even if at most one address is in use at a time. Similarly, a single
host moving between multiple statically assigned addresses may
report multiple addresses, even if at most one is in use at a time.
However, addresses assigned to pools cannot be used elsewhere.
So we argue that any over-count captures addresses (or /24 subnets)
that are on “stand-by” and de facto ‘in use’ at the time of our mea-
surement. (In the future under-utilised pools may be reduced in size
and the freed addresses may be used for other purposes. However,
this is the same as re-purposing addresses of de facto unused hosts.
We cannot quantify such future optimisations.)
We also study /24 subnets, which are less aﬀected by dynamic
addressing [6]. While address reassignments (e.g., host mobility)
may cross diﬀerent /24 subnets, a large fraction of them will be
within the same /24 subnets. Evidence for this we found in 16
consecutive days of GAME session data, where we have unique
client IDs, client login/logout times and client IP addresses. We se-
lected 9 million distinct clients with multiple sessions and analysed
the number of distinct IPv4 addresses and /24 networks used over
time. After the ﬁrst four days all clients had logged in at least once.
From this point in time the observed distinct IP addresses increased
2.7 times (from 16 to 42 million), while the observed distinct /24
networks only increased 1.2 times (from 2.3 to 2.8 million).
5. VALIDATION
In this section, we ﬁrst pick a speciﬁc model-selection algorithm
from among those described in Section 3.3.2, based on test data.
Then, we compare estimated use of addresses against ground truth
for a handful of networks, and show that CR gives better estimates
than simply summing the observed addresses. Finally, we use
cross-validation to demonstrate that this also applies to the whole
address space, since we have no ground truth for most networks.
●●●●●●●●●●Date/24 subnets (M)Dec2011Mar2012Jun2012Sep2012Dec2012Mar2013Jun2013Sep2013Dec2013Mar2014051015●●●●●●●●●●●●●●●●●●●●●Unfiltered_obsUnfiltered_estFiltered_obsFiltered_estNo_SWINCALT_obsNo_SWINCALT_est324Table 3: Cross-validation errors depending on diﬀerent model se-
lection parameter settings
Table 4: Pingable, observed (obs), and estimated (Poisson, right-
truncated Poisson) IPv4 addresses vs. peak usage (truth) as per-
centages of the size of each routed network
IP addresses
/24 subnets
Setting
RMSE [M] MAE [M]
RMSE [k] MAE [k]
Network
Ping [%] Obs. [%]