title:Autonomic Intrusion Detection System
author:Wei Wang and
Thomas Guyet and
Svein J. Knapskog
Autonomic Intrusion Detection System
Wei Wang1,(cid:2), Thomas Guyet2,3, and Svein J. Knapskog1
1 Q2S Centre, Norwegian University of Science and Technology (NTNU)
PI:EMAIL
2 Project DREAM, INRIA Rennes/IRISA, France
3 AGROCAMPUS OUEST, Rennes, France
Abstract. We propose a novel framework of autonomic intrusion de-
tection that fulﬁlls online and adaptive intrusion detection in unlabeled
audit data streams. The framework owns ability of self-managing: self-
labeling, self-updating and self-adapting. Aﬃnity Propagation (AP) uses
the framework to learn a subject’s behavior through dynamical cluster-
ing of the streaming data. The testing results with a large real HTTP
log stream demonstrate the eﬀectiveness and eﬃciency of the method.
1 Problem Statement, Motivation and Solution
Anomaly Intrusion Detection Systems (IDS) are important in current network
security framework. Insomuch as data involved in current network environments
evolves continuously and as the normal behavior of a subject may have some
changes over time, a static anomaly IDS is often ineﬀective. The detection models
should be frequently updated by incorporating new incoming normal examples
and be adapted to behavioral changes. To achieve this goal, there are at least
two main diﬃculties: (1) the lack of precisely labeled data that is very diﬃcult to
obtain in practice; (2) the streaming nature of the data with behavioral changes.
To tackle these diﬃculties, we propose a framework of autonomic IDS that
works in a fashion of self-managing, adapting to unpredictable changes whilst
hiding intrinsic complexity to operators. It has abilities of self-labeling, self-
updating and self-adapting for detecting attacks over unlabeled data streams.
The framework is under an assumption of rareness of abnormal data.
We thus “capture” the anomalies by ﬁnding outliers in the data streams. Given
a bunch of data stream, our method identiﬁes outliers through the initial clus-
tering. In the framework, the detection model is a set of clusters of normal
data items. The outliers generated during the clustering as well as any incoming
outlier that is too far from the current model are suspected to be attacks. To
reﬁne our diagnosis, we deﬁne three states of a data item: normal, suspicious
and anomalous. If an outlier is identiﬁed, it is marked as suspicious and then put
(cid:2) The work was supported by Q2S Centre in communication systems, Centre of Ex-
cellence, which is appointed by the Research Council of Norway and funded by the
Research Council, NTNU and UNINETT. The work was also supported by ERCIM
fellowship program. The authors thank Florent Masseglia for providing us the data.
E. Kirda, S. Jha, and D. Balzarotti (Eds.): RAID 2009, LNCS 5758, pp. 359–361, 2009.
c(cid:2) Springer-Verlag Berlin Heidelberg 2009
360
W. Wang, T. Guyet, and S.J. Knapskog
into a reservoir. Otherwise, the detection model is updated with the normal
incoming data until a change is found, triggering model rebuilding to adapt to
the current behavior. A suspicious item is considered as real anomalous if it is
again marked as suspicious after the adaption.
2 Implementation and Discussion
The autonomic IDS is eﬀective for detecting rare attacks [1]. Detecting bursty
attacks is a challenge as the attack scenario does not well match the assumption.
We thus design another two mechanisms during the autonomic detection. First, if
a data item is very far from the model, the data item will be ﬂagged as anomalous
immediately (other than considered as suspicious). Second, a change is triggered
if the percentage of outliers is high (e.g., larger than 60%) during a time period.
Bursty attacks can thus be easily identiﬁed by the large dissimilarity and by the
prompt model rebuilding.
We use Aﬃnity Propagation (AP) and StrAP [2] to detect bursty attacks with
the framework. We use a real HTTP log stream to test the method. Character
distribution of each HTTP request is used as the feature and the IDS is to
identify whether a request is normal or not. The data contains 40,095 requests
in which 239 attacks occurring in a very short interval (request 7923-9743th, see
Fig.1(a), the k-NN distance between a data item and the training items) after
ﬁltering out static requests. To facilitate comparison, we also use another three
static methods k-NN, PCA and one class SVM for the detection. The ﬁrst 800
attack-free requests are used for training the static models while the ﬁrst 800
requests are used for AP initial clustering. Testing results are shown in Fig.1(b).
Fig.1(a) shows that the normal behavior changes over time and Fig.1(b) in-
dicates that the autonomic detection method achieves the better results than
other three static methods while the detection rates are higher than 50%. Note
that the autonomic IDS does not need a priori knowledge while static methods
need labeled data for training. Our future work is combining the autonomic IDS
with eﬀective static methods to prevent mimicry attacks (e.g., implementing
large-scale attacks to evade the autonomic IDS).
100
0
0
0.5
1
1.5
2.5
HTTP requests in order
2
3
3.5
4
x 104
20
0
5
10
False Positive Rate (%)
15
20
(a) Distance distribution of the log stream
(b) Testing results with comparison
Fig. 1. Dynamic normal behaviors and testing results with comparison
AP
kNN
PCA
SVM
25
30
x
e
d
n
l
i
y
a
m
o
n
A
0.6
0.5
0.4
0.3
0.2
0.1
normal
attacks
)
%
(
t
e
a
R
n
o
i
t
c
e
e
D
t
90
80
70
60
50
40
30
Autonomic Intrusion Detection System
361
References
1. Wang, W., Masseglia, F., Guyet, T., Quiniou, R., Cordier, M.O.: A general frame-
work for adaptive and online detection of web attacks. In: WWW, pp. 1141–1142
(2009)
2. Zhang, X., Furtlehner, C., Sebag, M.: Data streaming with aﬃnity propagation. In:
Daelemans, W., Goethals, B., Morik, K. (eds.) ECML/PKDD 2008, Part II. LNCS
(LNAI), vol. 5212, pp. 628–643. Springer, Heidelberg (2008)