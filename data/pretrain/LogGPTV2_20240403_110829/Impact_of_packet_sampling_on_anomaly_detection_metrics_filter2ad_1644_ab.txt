sampling 1/100, 15min bins, tcp in
sampling 1/1000, 15min bins, tcp in
1.0e+08
1.0e+07
1.0e+06
1.0e+05
1.0e+04
no sampling, 15min bins, tcp in
sampling 1/10, 15min bins, tcp in
sampling 1/100, 15min bins, tcp in
sampling 1/1000, 15min bins, tcp in
1.0e+03
08/08
00:00
08/09
00:00
08/10
00:00
08/11
00:00
08/12
00:00
08/13
00:00
08/14
00:00
1.0e+03
08/08
00:00
08/09
00:00
08/10
00:00
08/11
00:00
08/12
00:00
08/13
00:00
08/14
00:00
(a) Packet counts vs. Date and Time (UTC)
(b) Flow counts vs. Date and Time (UTC)
   16.0
   14.0
   12.0
   10.0
    8.0
    6.0
    4.0
    2.0
no sampling, 15 min bins, tcp in
sampling 1/10, 15 min bins, tcp in
sampling 1/100, 15 min bins, tcp in
sampling 1/1000, 15 min bins, tcp in
   25.0
   20.0
   15.0
   10.0
no sampling, 15 min bins, tcp in
sampling 1/10, 15 min bins, tcp in
sampling 1/100, 15 min bins, tcp in
sampling 1/1000, 15 min bins, tcp in
    0.0
08/08
00:00
08/09
00:00
08/10
00:00
08/11
00:00
08/12
00:00
08/13
00:00
08/14
00:00
    5.0
08/08
00:00
08/09
00:00
08/10
00:00
08/11
00:00
08/12
00:00
08/13
00:00
08/14
00:00
(c) Packet DST IP Entropy vs. Date and Time (UTC)
(d) Flow DST IP Entropy vs. Date and Time (UTC)
Figure 1: Impact of sampling on timeseries of selected metrics. Note that in Figure 1(a) and 1(b) the y-axis is log scale. The plots for
sampling at 1 in 250 are not shown here to increase readability of the plots.
sampling at a rate of q we independently select each packet with
a probability of q or discard it with a probability of 1 − q. Sub-
sequently, we computed the timeseries of volume metrics (byte,
packet, and ﬂow counts), and feature entropy metrics (packet and
ﬂow entropy of IP addresses and port numbers).
The problem with packet traces, which essentially contain no
ﬂow information, is that ﬂow metrics (e.g., ﬂow counts) cannot be
directly inferred from them. One possibility would be to emulate
the ﬂow generation as it is done by e.g. NetFlow routers. Unfor-
tunately, the process of how routers construct ﬂows is not entirely
deterministic, making reconstruction in this way problematic [4].
Thus, instead of trying to emulate a certain router behavior, we sim-
ply approximate i) ﬂow counts by computing the number of unique
4-tuples of TCP ﬂows; and ii) ﬂow entropy by computing the en-
tropy of unique events (e.g., destination IP addresses) within one
interval.
To illustrate the following discussion on sampling effects, a se-
lection of the most meaningful timeseries is depicted in Fig. 1. As
expected, Fig. 1(a) shows that packet counts are not disturbed by
packet sampling. The unsampled values can simply be estimated
by multiplying the sampled value with a factor of 1/q. Likewise,
byte counts (not shown) are not impacted by packet sampling. This
is due to the fact that the variation of packet sizes by a factor of 100
(between 40 and 1500 Bytes) is very small compared to the overall
number of Bytes (≈ 1010) within one interval of 15 minutes. On
the contrary, ﬂow counts are heavily disturbed by packet sampling
even at a sampling rate as low as 1 out of 10 (see Figure 1(b)).
This can be explained with the fact that small ﬂows (with only few
packets) are sampled with a smaller probability compared to larger
ﬂows [6].
More interestingly, packet entropy metrics (Fig. 1(c)), as well as
ﬂow entropy metrics (Fig. 1(d)) are well preserved even at higher
sampling rates. Though we see that packet sampling disturbs en-
tropy metrics (the unsampled value cannot easily be computed from
the sampled value as for byte and packet counts), the main trafﬁc
pattern is still visible in the sampled trace. This insight was the
main motivation for this work.
2.4 Why the Blaster Worm
The primary reason to use the Blaster data as basis for our mea-
surements is that it is primarily visible only in ﬂow counts, a met-
ric that is biased signiﬁcantly by packet sampling. Therefore, the
Blaster worm is an ideal candidate anomaly to study the (worst-
case) effect of packet sampling on anomaly detection metrics. Blaster
is also one of the thoroughly analyzed Internet worms. First ob-
served on August 11, 2003, Blaster uses a TCP random scanning
strategy with ﬁxed destination and variable source port to identify
potential infection targets. Speciﬁcally, the infected host tries to
connect to port 135/TCP on the target machine.
4.5e+07
4.0e+07
3.5e+07
3.0e+07
2.5e+07
2.0e+07
1.5e+07
1.0e+07
5.0e+06
baseline, no sampling, 15min bins, tcp in
blaster outbreak, no sampling, 15min bins, tcp in
baseline, no sampling, 15min bins, tcp in
blaster outbreak, no sampling, 15min bins, tcp in
3.0e+06
2.5e+06
2.0e+06
1.5e+06
1.0e+06
5.0e+05
0.0e+00
00:00
04:00
08:00
12:00
16:00
20:00
(a) Packet counts vs. Time (UTC)
0.0e+00
00:00
04:00
08:00
12:00
16:00
20:00
(b) Flow counts vs. Time (UTC)
baseline, no sampling, 15min bins, tcp in
blaster outbreak, no sampling, 15min bins, tcp in
baseline, no sampling, 15min bins, tcp in
blaster outbreak, no sampling, 15min bins, tcp in
   16.0
   14.0
   12.0
   10.0
    8.0
    6.0
    4.0
    2.0
   26.0
   24.0
   22.0
   20.0
   18.0
   16.0
   14.0
   12.0
    0.0
00:00
04:00
20:00
(c) Packet DST IP Entropy vs. Time (UTC)
16:00
12:00
08:00
   10.0
00:00
04:00
20:00
(d) Flow DST IP Entropy vs. Time (UTC)
16:00
12:00
08:00
Figure 2: Baselines for Selected Metrics.
3.
IMPACT OF SAMPLING ON ANOMALY
DETECTION METRICS
In this section, we study the impact of sampling on common
anomaly detection metrics. Rather than apply a particular anomaly
detection method on sampled views of trafﬁc, we adopt a more gen-
eral strategy. Our strategy is based on the observation that funda-
mentally all anomaly detection methods must ﬁrst deﬁne “normal”
behavior; anomalies then become deviations from this baseline be-
havior. So if we can build the “perfect” baseline for a speciﬁc met-
ric (an objective that all anomaly detection methods will strive for),
we gain insight into the fundamental impact of packet sampling on
any anomaly detection method using this metric, in particular, the
detection schemes with the “best” model for baseline behavior.
In this section, we describe our method to determine the “ideal”
proﬁle for normal trafﬁc. Then, we introduce how we measure the
distance between the idealized baseline and the trace containing the
Blaster worm for any given metric. We use this distance as mea-
sure for the Blaster anomaly size for different sampling rates. We
then study the effect of packet sampling on the size of the Blaster
anomaly, when viewed through ﬂow counts and entropy. Finally,
we validate the robustness of entropy-based proﬁling methods ver-
sus different anomaly intensities.
3.1 Determining the Baseline
Since our intention is to analyze the effect of sampling on anomaly
detection, we need to quantify and measure the factor by which
sampling disturbs anomaly detection metrics.