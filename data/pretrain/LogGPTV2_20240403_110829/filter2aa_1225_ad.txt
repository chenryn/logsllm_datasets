between each functional group.
toy soldiers 2
http://www.ﬂickr.com/photos/janramroth/1302905330/
http://creativecommons.org/licenses/by/2.0/deed.en
jot.punkt
team size
Friday, July 31, 2009
There are advantages and disadvantages to both large and small teams.  Most likely, your 
team size will be determined by your friends, co-workers, affiliations, etc.  Still, you might 
consider limiting yourself if you decide you want to make a small team and have lots of 
potential candidates.
The danger with a large team is that it will struggle under its own weight.  Clearly deﬁning 
roles and responsibilities, making sure the right groups are communicating with the right 
other groups, these are big issues.  Some people complained last year when sk3wl of r00t 
won that they only did so because they had so many people.  That’s an entirely unfair 
accusation -- having a big team can be a liability if you don’t manage it right, and congrats 
to sk3wl for putting together the right mixture to be able to pull it off and pull it off big last 
year.  
Of course, CTF has so many components that a team with ﬁve or less members would have 
an extremely difficult time being competitive, no matter how good each individual was.  
There’s simply too many binaries, too many tasks.  Consider merging with another team to 
form a larger team if that’s your situation, but make sure you carefully delineate tasks and 
responsibilities if you do so.
Photo copyright me -- same license as the presentation.
Friday, July 31, 2009
Let’s talk about one important piece of CTFiquette.  Many teams take the competition very 
seriously.  Unless you personally know someone on a team, be very careful about going up 
and trying to watch their screen, or even sitting behind or to the side of a team.  Spying on 
other teams is a perfectly acceptable strategy (both inside the game room, and elsewhere), so 
most take their physical security seriously.
High voltage warning sign
NIOSH - Nat Inst for Occupational Safety & Health
http://www.ﬂickr.com/photos/niosh/2492839488/
http://creativecommons.org/licenses/by/2.0/deed.en
Implement the following 
in one x86 instruction:
lightning round
for (ecx = 0; ecx < 32; ecx++)
{
    if ((1 << ecx) & eax)
{
        ebx = ecx;
    }
}
Friday, July 31, 2009
The original answer required the actual bytes, but I’ll assume everyone who can ﬁnd the 
answer is capable of running an assembler -- I’ll take the mnemonic here.
lightning round
BSR ebx, eax 
Also accepted: BSR $eax, $ebx
Or for those showing off (if done in their 
head): \0x0f\xbd\xd8
Friday, July 31, 2009
Answer: BSR ebx, eax (also accepted: BSR $eax, $ebx)
dirty tricks
Friday, July 31, 2009
Of course, CTF is primarily about hacking, and what isn’t hacking without some dirty tricks?
free candy
http://www.ﬂickr.com/photos/endora57/49474343/
http://creativecommons.org/licenses/by-nc/2.0/deed.en
endora57
Photoshopped by me, new image likewise released to the public domain.
security is 
only as strong as...
Friday, July 31, 2009
Everyone say it with me: “security is only as strong as...” “the weakest link”
What’s usually the weakest link in security... Passwords, of course!
Story about using the score server to reset the overwrite token on Sk3wlofr00t for a good 
chunk of Saturday at DC15.
Only as strong as the weakest link. Part 2
David
http://www.ﬂickr.com/photos/afferent/461165947/
http://creativecommons.org/licenses/by/2.0/deed.en
Friday, July 31, 2009
Our attack on the overwrite-reset wasn’t the only one that year.  While the Kenshoto CTF 
didn’t have much of a web-app security focus, that didn’t mean it was entirely non-existent.  
For example, the score server was potentially vulnerable to a CSRF attack against the same 
overwrite-key change we abused with a stolen credential.  One team embedded an attack 
against that into all their web services.  It was too bad the legitimate web services weren’t 
working that year, or more folks might have been bit by that clever attack as well.
Frosty Morning Web
foxpar4
http://www.ﬂickr.com/photos/foxypar4/2124673642/
http://creativecommons.org/licenses/by/2.0/deed.en
Friday, July 31, 2009
While the badge hacking contest winner from last year was neat, the second place entry was 
much more entertaining to me.  A whole slew of badges were programmed to transmit the IR 
codes for the hibernate command on HP laptops and with the activate-front-row codes for 
OS X laptops.   
The range on these suckers was phenomenal.  It was great watching people try to ﬁgure out 
why their laptops were constantly hibernating or going in and out of Front Row.  
Normally that would be entertaining enough as it is, but when one of the recipient of the IR 
signal of doom is on one of the CTF teams and trying to actually get work done, well, then I 
count this as an excellent dirty trick for CTF too.
Be warned!  Disable /all/ your external interfaces before you bring a machine to Defcon, and 
especially expect the CTF room to be home to some real shenanigans!
Soldering USB Interface to Badge
Kankie
http://www.ﬂickr.com/photos/kankie/2762312562/
http://creativecommons.org/licenses/by/2.0/deed.en
Friday, July 31, 2009
School’s patched binary used against them, also DC15.
judo - ga≈°per med padcem 2
MelkiaD
http://www.ﬂickr.com/photos/melkiad/2329190548/
http://creativecommons.org/licenses/by/2.0/deed.en
Friday, July 31, 2009
In 2006, one team came tantalizingly close to the hole grail of a CTF win -- hacking the score 
system itself.  While often technically against the rules, and it’s easy to screw up and make 
the game no fun, a clever hack is a clever hack, and taking advantage of a default admin 
interface in one of the VOIP adapters accepting key submissions would have been very clever 
if the attack had actually been pulled off successfully.  Instead, the device’s IP was changed, 
just causing a temporary outage while Kenshoto ﬁxed it.  So close...  The team that did it was 
awarded some breakthrough points by Kenshoto for their cleverness even if they didn’t quite 
pull it off.
Friday, July 31, 2009
It’s a little known fact that there were /two/ challenges solved by use of a vim swap ﬁle in 
this year’s qualiﬁers.
First was the intentional one, Forensics200 -- read the writeups linked to at the end of this 
presentation for more information.
Then there was the other one... Pwn200 -- a service that had some trouble and was being 
ﬁxed live during the qualiﬁers.  Fixed by editing the service live with vim on the service.  And 
exposing the source, making the challenge much simpler.  I wonder if anybody from DDTEK 
is actually here, I don’t know if Team Awesome officially told you guys about that one yet.  ;-)
Friday, July 31, 2009
Don’t ruin the game for everyone. There are some dirty tricks that are best not played:
Collusion, Denial Service, Physical Attacks
The moral is to always check if unsure.  Ask the conference organizers if in doubt.  You do 
not want to be the team banned from CTF because you didn’t think something through, and 
if it’s actually a good hack, most likely the organizers will be cool with you doing it! 
STOP ALL WAY
Peter Kaminski
http://www.ﬂickr.com/photos/peterkaminski/1510724/
http://creativecommons.org/licenses/by/2.0/deed.en
references
Friday, July 31, 2009
So how do you learn this stuff?  Practice it.  What skills do you need?  Easy.
112 Classiﬁcation of Knowledge
jasonvance
http://www.ﬂickr.com/photos/jasonvance/1194678729/
http://creativecommons.org/licenses/by/2.0/deed.en
Friday, July 31, 2009
Start with this small list.
The best skills are the ones mentioned previously under roles.  Get really good at one of 
those and practice it.  There are literally dozens of online challenge sites  out there with 
starter problems to get you going.  Just start breaking stuff and playing with it.  No better 
way to learn.
Go back through the Defcon video archives and check out the presentation my team captain 
Atlas did a few years back on his radical transformation during the 2005 Qualiﬁers to CTF.  If 
you apply yourself, you really can go from just knowing the basics to being truly l33t.
tools and techniques
Friday, July 31, 2009
Ok, those are the skills, but what about the tools?
You want to come prepared with a framework for managing ﬂags, and exploiting other 
servers. Any defensive techniques need to be scripted in packages easy to install no matter 
what the platform you end up defending.  
Wrench Red
Kyle May
http://www.ﬂickr.com/photos/kylemay/2078979917/
http://creativecommons.org/licenses/by/2.0/deed.en
Friday, July 31, 2009
Get good at a scripting language.  Quick and dirty perl, python, ruby, it doesn’t matter.  
Unless you’re very good and very fast with C, it’s worth your time to invest effort into a 
language that enables quick solutions, tools, and techniques.  
Focus on attacks, scoreboard submissions, website scraping, custom service monitoring, etc. 
The key here is rapid development.
reversing
reversing
Friday, July 31, 2009
There’s a lot of different tools you could use for your reversing and exploitation.  Most 
important is to have a few you are comfortable with.  Practice lots with GDB, or another 
portable debugger.  Those skills will last no matter what the platform.
It matters more that you have something you’re comfortable with than you have something 
that other people are using to solve problems.
Friday, July 31, 2009
If you’re doing any binary analysis at all, one required tool is IDA Pro.  The second major 
requirement is a scriptable debugger you’re comfortable with.  Whether it’s Immunity 
Debugger, IDA with the appropriate plugins and debug modules, or some other solution, you 
need to be able to quickly script up tasks in the debugger.  Of course, for most CTF 
challenges, you’re going to be spending some quality time with GDB, so don’t neglect it.
http://capture.theﬂ.ag/
http://ddtek.biz/
http://nopsr.us/
http://shallweplayaga.me/
http://hackerschool.org/DefconCTF/17/B300.html
http://ha.ckers.org/blog/20090406/hacking-without-all-the-jailtime/
Friday, July 31, 2009
Websites
Capture.TheFl.Ag -- Updated copy of these slides, mirror/links to speciﬁc CTF content, many 
more links, links to other writeups, etc.  At some point in the near future when I get more 
trustworthy Internet access.
Nopsrus -- 2006-2008 Qualiﬁers and many Finals Binaries from Doc Brown and 1@stplace
shallweplayaga.me -- Writeups for 2009 qualiﬁers from Team Awesome
RSnake’s blog entry has a huge list of online CTF type sites, many different formats, but 
some great resources among there.
books
Friday, July 31, 2009
IDA Pro Book -- Notice the author on that is none other than the sk3wlm4st3r, Chris Eagle 
himself.  This book is the IDA bible.  The book was at least partially responsible for the 
release of the Collabreate tool mentioned earlier.
Hacking: TAOE is a good solid overview to all sorts of good security techniques.
Shellcoders Handbook: covers many relevant topics
There are many other good books to get you started, but practice the online resources and 
use the books as needed.
books
Friday, July 31, 2009
IDA Pro Book -- Notice the author on that is none other than the sk3wlm4st3r, Chris Eagle 
himself.  This book is the IDA bible.  The book was at least partially responsible for the 
release of the Collabreate tool mentioned earlier.
Hacking: TAOE is a good solid overview to all sorts of good security techniques.
Shellcoders Handbook: covers many relevant topics
There are many other good books to get you started, but practice the online resources and 
use the books as needed.
books
Friday, July 31, 2009
IDA Pro Book -- Notice the author on that is none other than the sk3wlm4st3r, Chris Eagle 
himself.  This book is the IDA bible.  The book was at least partially responsible for the 
release of the Collabreate tool mentioned earlier.
Hacking: TAOE is a good solid overview to all sorts of good security techniques.
Shellcoders Handbook: covers many relevant topics
There are many other good books to get you started, but practice the online resources and 
use the books as needed.
books
Friday, July 31, 2009
IDA Pro Book -- Notice the author on that is none other than the sk3wlm4st3r, Chris Eagle 
himself.  This book is the IDA bible.  The book was at least partially responsible for the 
release of the Collabreate tool mentioned earlier.
Hacking: TAOE is a good solid overview to all sorts of good security techniques.
Shellcoders Handbook: covers many relevant topics
There are many other good books to get you started, but practice the online resources and 
use the books as needed.
The Fine Print
This presentation:
(Some Rights Reserved)
Creative Commons Attribution 3.0 United States License
http://creativecommons.org/licenses/by/3.0/us
Company/product logos:
All photos of companies or products trademarked/copyright their 
respective companies.  
Background images:
Most photos releasd under a Free license.  See the slide notes for 
each slide for more information on image source and license.
Friday, July 31, 2009
Links to each image’s original Flickr page and author credits in the slide notes on each slide.