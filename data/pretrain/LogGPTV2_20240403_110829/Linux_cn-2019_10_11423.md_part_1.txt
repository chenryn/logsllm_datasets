---
author: Karl Voit
category: 技术
comments_data: []
count:
  commentnum: 0
  favtimes: 1
  likes: 0
  sharetimes: 0
  viewnum: 4808
date: '2019-10-05 00:10:00'
editorchoice: false
excerpt: 这篇文章中我会介绍我是如何避免供应商锁定造成受限于那些临时性的解决方案及数据丢失。相反，我更倾向于使用那些可以让我投入时间和精力打理，并能长久使用的解决方案。
fromurl: http://karl-voit.at/managing-digital-photographs/
id: 11423
islctt: true
largepic: /data/attachment/album/201910/05/000950xsxopomsrs55rrb5.jpg
permalink: /article-11423-1.html
pic: /data/attachment/album/201910/05/000950xsxopomsrs55rrb5.jpg.thumb.jpg
related: []
reviewer: wxy
selector: ''
summary: 这篇文章中我会介绍我是如何避免供应商锁定造成受限于那些临时性的解决方案及数据丢失。相反，我更倾向于使用那些可以让我投入时间和精力打理，并能长久使用的解决方案。
tags:
- 照片
- 相片
thumb: false
title: 数码文件与文件夹收纳术（以照片为例）
titlepic: true
translator: qfzy1233
updated: '2019-10-05 00:10:00'
---
![](/data/attachment/album/201910/05/000950xsxopomsrs55rrb5.jpg)
* 更新 2014-05-14：增加了一些具体实例
* 更新 2015-03-16：根据照片的 GPS 坐标过滤图片
* 更新 2016-08-29：以新的 `filetags --filter` 替换已经过时的 `show-sel.sh` 脚本
* 更新 2017-08-28: geeqier 视频缩略图的邮件评论
* 更新 2018-03-06：增加了 Julian Kahnert 的链接
* 更新 2018-05-06：增加了作者在 2018 Linuxtage Graz 大会上 45 分钟演讲的视频
* 更新 2018-06-05：关于 metadata 的邮件回复
* 更新 2018-07-22：移动文件夹结构的解释到一篇它自己的文章中
* 更新 2019-07-09：关于在文件名中避免使用系谱和字符的邮件回复
每当度假或去哪游玩时我就会化身为一个富有激情的摄影师。所以，过去的几年中我积累了许多的 [JPEG](https://en.wikipedia.org/wiki/Jpeg) 文件。这篇文章中我会介绍我是如何避免 [供应商锁定](http://en.wikipedia.org/wiki/Vendor_lock-in)（LCTT 译注： 供应商锁定   vendor lock-in ，原为经济学术语，这里引申为避免过于依赖某一服务平台）造成受限于那些临时性的解决方案及数据丢失。相反，我更倾向于使用那些可以让我**投入时间和精力打理，并能长久使用**的解决方案。
这一（相当长的）攻略 **并不仅仅适用于图像文件**：我将进一步阐述像是文件夹结构、文件的命名规则等等许多领域的事情。因此，这些规范适用于我所能接触到的所有类型的文件。
在我开始传授我的方法之前，我们应该先就我将要介绍方法的达成一个共识，那就是我们是否有相同的需求。如果你对 [raw 图像格式](https://en.wikipedia.org/wiki/Raw_image_format)十分推崇，将照片存储在云端或其他你信赖的地方（对我而言可能不会），那么你可能不会认同这篇文章将要描述的方式了。请根据你的情况来灵活做出选择。
### 我的需求
对于 **将照片（或视频）从我的数码相机中导出到电脑里**，我只需要将 SD 卡插到我的电脑里并调用 `fetch-workflow` 软件。这一步也完成了**图像软件的预处理**以适用于我的文件命名规范（下文会具体论述），同时也可以将图片旋转至正常的方向（而不是横着）。
这些文件将会被存入到我的摄影收藏文件夹 `$HOME/tmp/digicam/`。在这一文件夹中我希望能**遍历我的图像和视频文件**，以便于**整理/删除、重命名、添加/移除标签，以及将一系列相关的文件移动到相应的文件夹中**。
在完成这些以后，我将会**浏览包含图像/电影文件集的文件夹**。在极少数情况下，我希望**在独立的图像处理工具**（比如 [GIMP](http://www.gimp.org/)）中打开一个图像文件。如果仅是为了**旋转 JPEG 文件**，我想找到一个快速的方法，不需要图像处理工具，并且是[以无损的方式](http://petapixel.com/2012/08/14/why-you-should-always-rotate-original-jpeg-photos-losslessly/)旋转 JPEG 图像。
我的数码相机支持用 [GPS](https://en.wikipedia.org/wiki/Gps) 坐标标记图像。因此，我需要一个方法来**对单个文件或一组文件可视化 GPS 坐标**来显示我走过的路径。
我想拥有的另一个好功能是：假设你在威尼斯度假时拍了几百张照片。每一个都很漂亮，所以你每张都舍不得删除。另一方面，你可能想把一组更少的照片送给家里的朋友。而且，在他们嫉妒的爆炸之前，他们可能只希望看到 20 多张照片。因此，我希望能够**定义并显示一组特定的照片子集**。
就独立性和**避免锁定效应**而言，我不想使用那种一旦公司停止产品或服务就无法使用的工具。出于同样的原因，由于我是一个注重隐私的人，**我不想使用任何基于云的服务**。为了让自己对新的可能性保持开放的心态，我不希望只在一个特定的操作系统平台才可行的方案上倾注全部的精力。**基本的东西必须在任何平台上可用**（查看、导航、……），而**全套需求必须可以在 GNU/Linux 上运行**，对我而言，我选择 Debian GNU/Linux。
在我传授当前针对上述大量需求的解决方案之前，我必须解释一下我的一般文件夹结构和文件命名约定，我也使用它来命名数码照片。但首先，你必须认清一个重要的事实：
#### iPhoto、Picasa，诸如此类应被认为是有害的
管理照片集的软件工具确实提供了相当酷的功能。它们提供了一个良好的用户界面，并试图为你提供满足各种需求的舒适的工作流程。
对它们我确实遇到了很多大问题。它们几乎对所有东西都使用专有的存储格式：图像文件、元数据等等。当你打算在几年内换一个不同的软件，这是一个大问题。相信我：总有一天你会因为多种原因而**更换软件**。
如果你现在正打算更换相应的工具，你会意识到 iPhoto 或 Picasa 是分别存储原始图像文件和你对它们所做的所有操作的（旋转图像、向图像文件添加描述/标签、裁剪等等）。如果你不能导出并重新导入到新工具，那么**所有的东西都将永远丢失**。而无损的进行转换和迁移几乎是不可能的。
我不想在一个会锁住我工作的工具上投入任何精力。**我也拒绝把自己绑定在任何专有工具上**。我是一个过来人，希望你们吸取我的经验。
这就是我在文件名中保留时间戳、图像描述或标记的原因。文件名是永久性的，除非我手动更改它们。当我把照片备份或复制到 U 盘或其他操作系统时，它们不会丢失。每个人都能读懂。任何未来的系统都能够处理它们。
### 我的文件命名规范
这里有一个我在 [2018 Linuxtage Graz 大会](https://glt18.linuxtage.at)上做的[演讲](https://glt18-programm.linuxtage.at/events/321.html),其中详细阐述了我的在本文中提到的想法和工作流程。
* [Grazer Linuxtage 2018 - The Advantages of File Name Conventions and Tagging](https://youtu.be/rckSVmYCH90)
* [备份视频托管在 media.CCC.de](https://media.ccc.de/v/GLT18_-_321_-_en_-_g_ap147_004_-_201804281550_-_the_advantages_of_file_name_conventions_and_tagging_-_karl_voit)
我所有的文件都与一个特定的日期或时间有关，根据所采用的 [ISO 8601](https://en.wikipedia.org/wiki/Iso_date) 规范，我采用的是**日期戳**或**时间戳**
带有日期戳和两个标签的示例文件名：`2014-05-09 Budget export for project 42 -- finance company.csv`。
带有时间戳（甚至包括可选秒）和两个标签的示例文件名：`2014-05-09T22.19.58 Susan presenting her new shoes -- family clothing.jpg`。
由于我使用的 ISO 时间戳冒号不适用于 Windows [NTFS 文件系统](https://en.wikipedia.org/wiki/Ntfs)，因此，我用点代替冒号，以便将小时与分钟（以及可选的秒）区别开来。
如果是**持续的一段日期或时间**，我会将两个日期戳或时间戳用两个减号分开：`2014-05-09--2014-05-13 Jazz festival Graz -- folder tourism music.pdf`。
文件名中的时间/日期戳的优点是，除非我手动更改它们，否则它们保持不变。当通过某些不处理这些元数据的软件进行处理时，包含在文件内容本身中的元数据（如 [Exif](https://en.wikipedia.org/wiki/Exif)）往往会丢失。此外，使用这样的日期/时间戳开始的文件名可以确保文件按时间顺序显示，而不是按字母顺序显示。字母表是一种[完全人工的排序顺序](http://www.isisinform.com/reinventing-knowledge-the-medieval-controversy-of-alphabetical-order/)，对于用户定位文件通常不太实用。
当我想将**标签**关联到文件名时，我将它们放在原始文件名和[文件名扩展名](https://en.wikipedia.org/wiki/File_name_extension)之间，中间用空格、两个减号和两端额外的空格分隔 `--`。我的标签是小写的英文单词，不包含空格或特殊字符。有时，我可能会使用 `quantifiedself` 或 `usergenerated` 这样的连接词。我[倾向于选择一般类别](http://karl-voit.at/tagstore/en/papers.shtml)，而不是太过具体的描述标签。我在 Twitter [hashtags](https://en.wikipedia.org/wiki/Hashtag)、文件名、文件夹名、书签、诸如此类的博文等诸如此类地地方重用这些标签。
标签作为文件名的一部分有几个优点。通过使用常用的桌面搜索引擎，你可以在标签的帮助下定位文件。文件名称中的标签不会因为复制到不同的存储介质上而丢失。当系统使用与文件名之外的存储位置（如：元数据数据库、[点文件](https://en.wikipedia.org/wiki/Dot-file)、[备用数据流](https://en.wikipedia.org/wiki/NTFS#Alternate_data_streams_.28ADS.29)等）存储元信息通常会发生丢失。
当然，通常在文件和文件夹名称中，**请避免使用特殊字符**、变音符、冒号等。尤其是在不同操作系统平台之间同步文件时。
我的**文件夹名命名约定**与文件的相应规范相同。
注意：由于 [Memacs](https://github.com/novoid/Memacs) 的 [filenametimestamp](https://github.com/novoid/Memacs/blob/master/docs/memacs_filenametimestamps.org) 模块的聪明之处，所有带有日期/时间戳的文件和文件夹都出现在我的 Org 模式的日历（日程）上的同一天/同一时间。这样，我就能很好地了解当天发生了什么，包括我拍的所有照片。
### 我的一般文件夹结构
在本节中，我将描述我的主文件夹中最重要的文件夹。注意：这可能在将来的被移动到一个独立的页面。或许不是。让我们等着瞧 :-) （LCTT 译注：后来这一节已被作者扩展并移动到另外一篇[文章](https://karl-voit.at/folder-hierarchy/)。）
很多东西只有在一定的时间内才会引起人们的兴趣。这些内容包括快速浏览其内容的下载、解压缩文件以检查包含的文件、一些有趣的小内容等等。对于**临时的东西**，我有 `$HOME/tmp/` 子层次结构。新照片放在 `$HOME/tmp/digicam/` 中。我从 CD、DVD 或 USB 记忆棒临时复制的东西放在 `$HOME/tmp/fromcd/` 中。每当软件工具需要用户文件夹层次结构中的临时数据时，我就使用 `$HOME/tmp/Tools/`作为起点。我经常使用的文件夹是 `$HOME/tmp/2del/`：`2del` 的意思是“随时可以删除”。例如，我所有的浏览器都使用这个文件夹作为默认的下载文件夹。如果我需要在机器上腾出空间，我首先查看这个 `2del` 文件夹，用于删除内容。
与上面描述的临时文件相比，我当然也想将文件**保存更长的时间**。这些文件被移动到我的 `$HOME/archive/` 子层次结构中。它有几个子文件夹用于备份、我想保留的 web 下载类、我要存档的二进制文件、可移动媒体（CD、DVD、记忆棒、外部硬盘驱动器）的索引文件，和一个稍后（寻找一个合适的的目标文件夹）存档的文件夹。有时，我太忙或没有耐心的时候将文件妥善整理。是的，那就是我，我甚至有一个名为“现在不要烦我”的文件夹。这对你而言是否很怪？:-)
我的归档中最重要的子层次结构是 `$HOME/archive/events_memories/` 及其子文件夹 `2014/`、`2013/`、`2012/` 等等。正如你可能已经猜到的，每个年份有一个**子文件夹**。其中每个文件中都有单个文件和文件夹。这些文件是根据我在前一节中描述的文件名约定命名的。文件夹名称以 [ISO 8601](https://en.wikipedia.org/wiki/Iso_date) 日期标签 “YYYY-MM-DD” 开头，后面跟着一个具有描述性的名称，如 `$HOME/archive/events_memories/2014/2014-05-08 Business marathon with/`。在这些与日期相关的文件夹中，我保存着各种与特定事件相关的文件：照片、（扫描的）pdf 文件、文本文件等等。
对于**共享数据**，我设置一个 `$HOME/share/` 子层次结构。这是我的 Dropbox 文件夹，我用各种各样的方法（比如 [unison](http://www.cis.upenn.edu/%7Ebcpierce/unison/)）来分享数据。我也在我的设备之间共享数据：家里的 Mac Mini、家里的 GNU/Linux 笔记本、Android 手机，root-server（我的个人云），工作用的 Windows 笔记本。我不想在这里详细说明我的同步设置。如果你想了解相关的设置，可以参考另一篇相关的文章。:-)
在我的 `$HOME/templates_tags/` 子层次结构中，我保存了各种**模板文件**（[LaTeX](https://github.com/novoid/LaTeX-KOMA-template)、脚本、…），插图和**徽标**，等等。
我的 **Org 模式** 文件，主要是保存在 `$HOME/org/`。我练习记忆力，不会解释我有多喜欢 [Emacs/Org 模式](http://orgmode.org/) 以及我从中获益多少。你可能读过或听过我详细描述我用它做的很棒的事情。具体可以在我的博客上查找 [我的 Emacs 标签](http://karl-voit.at/tags/emacs)，在 Twitter 上查找 [hashtag #orgmode](https://twitter.com/search?q%3D%2523orgmode&src%3Dtypd)。
以上就是我最重要的文件夹子层次结构设置方式。
### 我的工作流程
哒哒哒，在你了解了我的文件夹结构和文件名约定之后，下面是我当前的工作流程和工具，我使用它们来满足我前面描述的需求。
请注意，**你必须知道你在做什么**。我这里的示例及文件夹路径和更多**只适用我的机器或我的环境**。**你必须采用相应的**路径、文件名等来满足你的需求!
#### 工作流程：将文件从 SD 卡移动到笔记本电脑、旋转人像图像，并重命名文件
当我想把数据从我的数码相机移到我的 GNU/Linux 笔记本上时，我拿出它的 mini SD 存储卡，把它放在我的笔记本上。然后它会自动挂载在 `/media/digicam` 上。
然后，调用 [getdigicamdata](https://github.com/novoid/getdigicamdata.sh)。它做了如下几件事：它将文件从 SD 卡移动到一个临时文件夹中进行处理。原始文件名会转换为小写字符。所有的人像照片会使用 [jhead](http://www.sentex.net/%3Ccode%3Emwandel/jhead/) 旋转。同样使用 jhead，我从 Exif 头的时间戳中生成文件名称中的时间戳。使用 [date2name](https://github.com/novoid/date2name)，我也将时间戳添加到电影文件中。处理完所有这些文件后，它们将被移动到新的数码相机文件的目标文件夹: `$HOME/tmp/digicam/tmp/`。
#### 工作流程：文件夹索引、查看、重命名、删除图像文件
为了快速浏览我的图像和电影文件，我喜欢使用 GNU/Linux 上的 [geeqie](http://geeqie.sourceforge.net/)。这是一个相当轻量级的图像浏览器，它具有其他文件浏览器所缺少的一大优势：我可以添加通过键盘快捷方式调用的外部脚本/工具。通过这种方式，我可以通过任意外部命令扩展这个图像浏览器的特性。
基本的图像管理功能是内置在 geeqie：浏览我的文件夹层次结构、以窗口模式或全屏查看图像（快捷键 `f`）、重命名文件名、删除文件、显示 Exif 元数据（快捷键 `Ctrl-e`）。