 gid。
– 160 –
 5 
进程理
5.5.3 改变有效用户和组 ID
Linux 提 POSIX 的进程的效 id 
ID 的
#include 
#include 
int seteuid (uid_t euid);
int setegid (gid_t egid);
setuid() 的调将效 ID 的设 euid。 root 以 euid 提
何。 root 能将效 ID 设效 ID 或存设的
 ID。时 setuid()  0时 -1 errno 设 EPERM。
示进程的 root  euid 的实 ID 
存设的 ID。
对 root  seteuid()  setuid() 的。以
seteuid() 的。的进程以 root  setuid()
更。
的对然的将 seteuid()  setegid() euid
 egid。
5.5.4 BSD 改变用户 ID 和组 ID 的方式
BSD  ID  ID 上自的。出性 Linux 
提
#include 
#include 
int setreuid (uid_t ruid, uid_t euid);
int setregid (gid_t rgid, gid_t egid);
调 setreuid() 将实 ID 效 ID 设 ruid 
euid。将的何设 -1 示相的 ID。
root 将效 ID 设实 ID 或存设的 ID
实 ID 设效 ID。实 ID 或效
 ID 设的实 ID 的或存设的 ID 设
– 161 –
 5 
进程理
新的效 ID Linux 或 Unix 自
的。 POSIX 的。
时 setreuid()  0时 -1 errno 设 EPERM。
示进程的 root  euid 的即实 ID 
存设的 ID或 ruid 效 ID。
的对然的将 setreuid()  setregid()
ruid  rgid euid  egid。
5.5.5 HP-UX 中改变用户 ID 和组 ID 的方式
能式 HP-UX(Hewlett-Packard s Unix
) 自设 ID  ID 的方式。 Linux 同提
#define _GNU_SOURCE
#include 
int setresuid (uid_t ruid, uid_t euid, uid_t
suid);
int setresgid (gid_t rgid, gid_t egid, gid_t
sgid);
调 setresuid() 将实 ID、效 ID 存设的 ID 
设 ruid、 euid  suid。将的何设 -1 示
相的 ID。
root 以何 ID 设何。 root 以
ID 设的实 ID、效 ID 存设的 ID。时
setresuid()（原文 0时 0 errno 设
EAGAIN uid 的实 ID 的同实 ID 的 uid 
超 NPROC 的（以的进程
。
EPERM
 root 设的新的实 ID、效 ID 或存设
的 ID的实 ID、效 ID 或存设的
 ID。
的对然的将 setresuid()  setresgid ()
ruid  rgid euid  egid suid  sgid。
– 162 –
 5 
进程理
5.5.6 操作用户 ID 组 ID 的首选方法
 root  seteuid() 设效 ID。 root 的进
程 ID setuid()时效
ID seteuid()。单的们的 POSIX 
的的时存设的 ID。
提的能 BSD  HP-UX 作出 setuid()  seteuid()
的。
5.5.7 对保存设置的用户 ID 的支持
存设的 ID  IEEE Std 1003.1-2001(POSIX 2001) 出的 Linux
 1.1.38 内时提相的。 Linux 写的程以
存设的 id。的 Unix 写的程存设的
id 或 id  POSIX SAVED IDS 。
对设的 ID  ID 的上的然
的。设的 ID  ID 的相即。
5.5.8 获取用户 ID 和组 ID
的调实 ID  ID
#include 
#include 
uid_t getuid (void);
gid_t getgid (void);
们能。相的调效 ID  ID
#include 
#include 
uid_t geteuid (void);
gid_t getegid (void);
调同能。
– 163 –
 5 
进程理
5.6 会话和进程组
进程属进程。进程或相间的进程
的的的进作业。进程的以
给进程的进程以同进程的进程、
或。
进程进程 ID（pgid的进程。进
程 ID 进程的 pid。进程进程存进
程存。即进程进程然存。
新的进程新的
。的 shell 进程。 shell 进程
(session leader)。进程的 pid 作的 ID。或
进程的集。的给
 (controling terminal)。处理 I/O 的 tty 设备。
的能 shell 。们。
进程提进程的作业
的 shell 能。同时将。的
进程进程零或进程。出时
进程的进程 SIGQUIT 。出的时
进程的进程 SIGHUP 。（
Ctrl+C进程的进程 SIGINT 。以更
的理以及 shell 上的。
我们以上的设的的 shell 
bash ,  pid  1700。的 shell 新进程的进程
进程。进程的 ID  1700 shell 的
进程。进程
进程的进程。
的存的
的进程 (进程)。进程
自的存的。
或进程进程进
程。进程的进程作业的。
– 164 –
 5 
进程理
$ cat ship-inventory.txt | grep booty | sort
以上 shell 进程的进程。以方
式 shell 以进程同时。
”&”以进程。 5-1 示、进程、进程
间的。
 5-1 、进程、进程及间的
Linux 提设进程相的进程的。
们 shell 的进程的进程进程
进程上。
5.6.1 与会话相关的系统调用
时 shell 新的。的调
的以的
#include 
pid_t setsid (void);
调进程进程进程调 setsid() 新的。调
进程的进程新的进程
。调同时进程调进程进程
进程的进程。新 ID 进程 ID 设调进程的 pid。
– 165 –
 5 
进程理
 setsid() 的新新的进程
调进程新的进程新进程的进程。对进程
何存的
。对 shell  shell 的新的
。
调 setsid() 新的 ID。时 -1 errno 设
 EPREM示调进程进程的进程。单的方
以何进程进程。新进程进程子
进程调 setsid()。
pid_t pid;
pid = fork ();
if (pid == -1) {
perror (”fork”);
return -1;
} else if (pid != 0)
exit (EXIT_SUCCESS);
if (setsid ( ) == -1) {
perror (”setsid”);
return -1;
}
然进程的 ID 以的
#define _XOPEN_SOURCE 500
#include 
pid_t getsid (pid_t pid);
对 getsid() 的调 pid 进程的 ID。 pid  0调
进程的 ID。时 -1。 errno 的能 ESRCH示 pid
何进程。 UNIX  errno 设 EPREM示 pid
示的进程调进程属同。 Linux 处理
何进程的 ID。
getsid() 的
– 166 –
 5 
进程理
pid_t sid;
sid = getsid (0);
if (sid == -1)
perror (”getsid”); /* should not be possible */
else
printf (”My session id=%d\n”, sid);
5.6.2 与进程组相关的系统调用
setpgid() 将 pid 进程的进程 ID 设 pgid
#define _XOPEN_SOURCE 500
#include 
int setpgid (pid_t pid, pid_t pgid);
 pid  0调的进程 ID。 pgid  0将 pid 程的进程
ID 设进程 ID。
时 0。件
• pid 的进程调或子进程子进程调
exec  pid 进程调同。
• pid 进程能进程。
•  pgid 存调同。
• pgid 。
时 -1 errno 设
EACCESS pid 进程调进程的子进程调进程调 exec 。
EINVAL
pgid 小 0。
EPERM
pid 进程进程或调同的
进程。能将进程同的进程
。
ESRCH
pid 进程或 0 或进程的子进程。
以进程的进程 ID
#define _XOPEN_SOURCE 500
#include 
– 167 –
 5 
进程理
pid_t getpgid (pid_t pid);
getpgid()  pid 进程的进程 ID。 pid  0进程的进程
ID。出 -1 errno 的 ERSCH示 pid 的进程
。
 getsid()  getpgid 
pid_t pgid;
pgid = getpgid (0);
if (pgid == -1)
perror (”getpgid”); /* should not be possible */
else
printf (”My process group id=%d\n”, pgid);
5.6.3 废弃的进程组函数
Linux  BSD 的操作进程 ID 的。们
的调对性新的程
们。 setpgrp() 设进程 ID
#include 
int setpgrp (void);
的调
if (setpgrp ( ) == -1)
perror (”setpgrp”);
的调的
if (setpgid (0,0) == -1)
perror (”setpgid”);
进程 ID 设进程的进程 ID。时 0时
 -1。 ERSCH setpgid() 的 errno 能 setpgrp()。
同的 getpgrp() 进程 ID
– 168 –
 5 
进程理
#include 
pid_t getpgrp (void);
的调
pid_t pgid = getpgrp ( );
的的
pid_t pgid = getpgid (0);
调进程的进程 ID。 getpgid() 能。
5.7 守护进程
进程何相。进程
时们以 root 或的（ apache 
postfix处理的。上进程的以 d （
 crond  sshd的的。
（Maxwell s demon理 James
Maxwell  1867 进的实。 Daemon 的
存间的能。 Judeo-Christian 的
daemon 同的 daemon 的。实上的 daemon 
的林的自的 Unix 的进
程的。
对进程 init 进程的子进程
何相。
进程以以步进程
1. 调 fork()新的进程将的进程。
2. 进程的进程调 exit()。进程（进程的
进程进程。进程进程
进程。以步的提。
3. 调 setsid()进程新的进程新的
作进程。相（进程新的
同时。
– 169 –
 5 
进程理
4.  chdir( ) 将工作。调 fork() 新进
程的工作能文件何方。进程
时同时理
进程工作的文件。
5. 的文件。何的文件对
的文件们处。
6.  0、 1  2 文件（、出
们 /dev/null。
的程以进程
#include 
#include 
#include 
#include 
#include 
#include 
#include 
int main (void)
{
pid_t pid;
int i;
/* create new process */
pid = fork ( );
if (pid == -1)
return -1;
else if (pid != 0)
exit (EXIT_SUCCESS);
/* create new session and process group */
if (setsid ( ) == -1)
return -1;
/* set the working directory to the root
directory */
– 170 –
 5 
进程理
if (chdir (”/”) == -1)
return -1;
/* close all open files--NR_OPEN is overkill,
but works */
for (i = 0; i 
int daemon (int nochdir, int noclose);
 nochdir 零将工作。 noclose 零
的文件。进程设进程的属性
的。设 0。
时 0。时 -1。 errno 设 fork() 或 setsid() 的
。
5.8 总结
我们 Unix 进程理的进程的
进程的。我们进程理的 API进
程调方式的的 API。
– 171 –
 6 
进程理
第 6 章
高级进程管理
我们进程的、进程的
内。将 Linux 进程调及调然
进程理。调进程的调
调实或作出的。
6.1 进程调度
进程调内进程以的件进程调
 —— 调 —— 的处理给进程的内子。
作出的程调处理效率进程同时
、。
我们进程∗。的进程
的。进、读写文件、 I/O 件的进程时间
相的时间内 (相对
时间)进程的。进程
时间 (调给进程的时间)。内的
进程进程的时间内将出
进程时间将。
进程 ()调。
进程处理时调能的。然
进程进程进程何时时间
调的。
操作能单处理上进程同时
进程操作的。处理上操作
进程同处理上。操作 DOS
能。
操作同式式。 Linux 实式的
调以进程处理进程。
∗: 原文 runnable process
– 172 –
 6 
进程理
的进程的的进程的时
间进程时间 (调给进程的小时间)。
同进程自。我们进程
自的出。理进程出操作绝
出。或的程能时间
。原操作
Linux 。
2.5 内的 O(1) 进程调 Linux 调∗的。 Linux 调
处理处理内存
(NUMA)实时进程自性。
6.1.1 大 O 记法
O(1)  O 的子示的性扩展性。式
if f(x) is O(g(x)),
then
∃c, x1 such that f(x) ≤ c ∗ g(x), ∀x > x1
的以 f 示 x  x1 f 
小 g 上即 g  f g  f 的上。
O(1) 的小 c的
进程 Linux 进程调。对调新进程
进程 O(1) 对性能。单
的调 (以的 Linux 调)进程的进程
的的。给进程调性。
Linux 调时间内的
。
6.1.2 时间片
Linux 给进程的时间对性能。时间
进程时间能小的性
∗对的读以内的 kernel/sched.c 文件
– 173 –
 6 
进程理
的相的时间时间进程调上程的