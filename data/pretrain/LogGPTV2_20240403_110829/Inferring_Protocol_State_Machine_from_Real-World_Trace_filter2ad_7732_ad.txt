of each state type pair, such as (πi, πi+1). Therefore, Veritas will obtain both
the order of diﬀerent state types and the transition probability from state type
πi to πi+1. For the reason that network packets may be out of order in real-world
transmission environment, we employ a threshold value as a ﬁlter, which can get
rid of state type pairs that is out of order. The system only keeps the state type
pairs with a frequency above 0.005.
According to the set of state type pairs, our system is able to depict the linkage
of each state type pair with a directed labeled graph. And all linkages of state
type pairs are employed to construct a deterministic ﬁnite automaton (DFA) of
the protocol under analysis, T . Afterwards, we ﬁnd the minimal DFA that is
consistent with T . In the end, probabilistic protocol state machine (P-PSM) will
be the combination of minimal DFA and the set of state transition probabilities.
Inferring Protocol State Machine from Network Traces
13
Fig. 5. The changes of Dunn indices with the number of clusters for the three protocols
(cid:40)(cid:43)(cid:47)(cid:50)(cid:18)
(cid:43)(cid:40)(cid:47)(cid:50)
(cid:11)(cid:20)(cid:12)
(cid:84)(cid:20)
(cid:11)(cid:19)(cid:12)
(cid:48)(cid:36)(cid:44)(cid:47)(cid:3)
(cid:41)(cid:53)(cid:50)(cid:48)(cid:29)
(cid:11)(cid:20)(cid:12)
(cid:84)(cid:19)
(cid:11)(cid:19)(cid:12)
(cid:53)(cid:38)(cid:51)(cid:55)(cid:3)(cid:55)(cid:50)(cid:29)(cid:3)(cid:31)
(cid:11)(cid:19)(cid:17)(cid:23)(cid:26)(cid:12)
(cid:53)(cid:38)(cid:51)(cid:55)(cid:3)(cid:55)(cid:50)(cid:29)(cid:3)(cid:31)
(cid:84)(cid:21)
(cid:11)(cid:19)(cid:12)
(cid:11)(cid:20)(cid:12)
(cid:84)(cid:22)
(cid:11)(cid:19)(cid:12)
(cid:39)(cid:36)(cid:55)(cid:36)
(cid:11)(cid:19)(cid:17)(cid:24)(cid:22)(cid:12)
(cid:84)(cid:23)
(cid:11)(cid:19)(cid:12)
(cid:21)(cid:24)(cid:19)
(cid:11)(cid:19)(cid:17)(cid:25)(cid:26)(cid:12)
(cid:84)(cid:27)
(cid:11)(cid:19)(cid:12)
(cid:21)(cid:21)(cid:19)
(cid:11)(cid:20)(cid:12)
(cid:84)(cid:28)
(cid:11)(cid:19)(cid:12)
(cid:21)(cid:24)(cid:19)(cid:3)
(cid:11)(cid:19)(cid:17)(cid:22)(cid:12)
(cid:84)(cid:20)(cid:19)
(cid:11)(cid:19)(cid:12)
(cid:24)(cid:24)(cid:19)
(cid:11)(cid:19)(cid:17)(cid:20)(cid:23)(cid:12)
(cid:84)(cid:20)(cid:21)
(cid:11)(cid:20)(cid:12)
(cid:29)
(cid:48)
(cid:50)
(cid:53)
(cid:41)
(cid:3)
(cid:47)
(cid:44)
(cid:36)
(cid:48)
(cid:12)
(cid:20)
(cid:11)
(cid:84)(cid:25)
(cid:11)(cid:19)(cid:12)
(cid:87)
(cid:81)
(cid:72)
(cid:87)
(cid:81)
(cid:82)
(cid:70)
(cid:12)
(cid:20)
(cid:11)
(cid:16)
(cid:19)
(cid:24)
(cid:21)
(cid:12)
(cid:26)
(cid:17)
(cid:19)
(cid:11)
(cid:19)
(cid:24)
(cid:21)
(cid:12)
(cid:27)
(cid:17)
(cid:19)
(cid:11)
(cid:91)
(cid:12)
(cid:28)
(cid:20)
(cid:17)
(cid:19)
(cid:11)
(cid:53)(cid:54)(cid:40)(cid:55)
(cid:11)(cid:19)(cid:17)(cid:19)(cid:22)(cid:22)(cid:12)
(cid:84)(cid:24)
(cid:11)(cid:19)(cid:12)
(cid:52)(cid:56)(cid:44)(cid:55)
(cid:11)(cid:19)(cid:17)(cid:19)(cid:23)(cid:12)
(cid:84)(cid:26)
(cid:11)(cid:20)(cid:12)
(cid:70)(cid:82)(cid:81)(cid:87)(cid:72)(cid:81)(cid:87)
(cid:11)(cid:19)(cid:17)(cid:28)(cid:21)(cid:26)(cid:12)
(cid:84)(cid:20)(cid:20)
(cid:11)(cid:19)(cid:12)
(cid:21)(cid:24)(cid:19)(cid:16)
(cid:11)(cid:19)(cid:17)(cid:21)(cid:12)
(cid:91)
(cid:11)(cid:20)(cid:12)
(cid:84)(cid:20)(cid:22)
(cid:11)(cid:19)(cid:12)
Fig. 6. Probabilistic protocol state machine of SMTP
4 Experimental Evaluation
In evaluation section, in order to verify the eﬀectiveness of Veritas, we use two
kinds of protocols, text and binary. For each protocol under analysis, the input
to our system is real-world trace of the protocol, and the output to the system
is the protocol state machine described in a probabilistic mode.
4.1 Text Protocol
In this paper, we choose SMTP (Simple Mail Transfer Protocol), which is a
stateful and text-based protocol, as a veriﬁcation of text protocol for our system.
In order to infer the P-PSM of SMTP, we capture real-world packets of SMTP
protocol. In this paper, the data source of SMTP is real-world trace, which is
obtained from a backbone router on TCP port 25.
In message clustering phase, as it is shown in Figure 5, the optimal cluster
number k for SMTP is 12. Moreover, after several iterative clustering experi-
ments, we ﬁnd that EHLO and HELO messages are grouped into a cluster. And
14
Y. Wang et al.
the probability of EHLO and HELO being the medoid of the cluster is equal.
This is due to the fact that mail clients may send an EHLO or a HELO command
to initialize a connection.
After state machine minimization, the ﬁnal P-PSM of SMTP protocol we
inferred is shown in Figure 6. As it is shown in Figure 6, the P-PSM of SMTP
protocol contains two parts, one may be the state transition of client to server,
and the other is the state transition of server to client. In addition, from State
q4 to State q5, the state machines only carry on SMTP data transmission, which
does not contain any state information. Furthermore, from State q10 to State
q13, unknown protocol state message is represented by x currently.
4.2 Binary Protocols
To test the validation of our system to the binary protocol, in this part we choose
PPLIVE and XUNLEI, which are peer-to-peer and binary-based protocols.
Analysis on a P2P Streaming Video Application. PPLIVE is a famous
peer-to-peer streaming video application in China. The data source of PPLIVE
protocol is obtained from our server which only runs an entertainment channel of
PPLIVE on UDP port 3987. After state message inference phase, as it is shown
in Figure 5, the optimal cluster number k for PPLIVE protocol is 8.
After state machine inference, the ultimate P-PSM of PPLIVE protocol is
shown in Figure 7. Moreover, the set of protocol state messages are illustrated
in Table 1.
Table 1. PPLIVE Protocol State Messages
Sign
Protocol State Message
a
b
c
d
e
f
g
h
0xe9 0x03 0x62 0x01 0x98 0xab 0x01 0x02 0x01
0xe9 0x03 0x61 0x01 0x98 0xab 0x01 0x02 0x01
0xe9 0x03 0x63 0x01 0x98 0xab 0x01 0x02 0x01
0xe9 0x03 0x53 0x00 0x98 0xab 0x01 0x02 0x5b
0xe9 0x03 0x49 0x01 0x98 0xab 0x01 0x02 0x98
0xe9 0x03 0x51 0x01 0x98 0xab
0xe9 0x03 0x50 0x00 0x98 0xab 0x01 0x02 0x9b
0xe9 0x03 0x4a 0x01 0x98 0xab 0x01 0x02 0x01
Analysis on a P2P File-Sharing Application. XUNLEI is a popular P2P
application in China, and it holds a signiﬁcant UDP Internet traﬃc. The data
source of XUNLEI protocol is obtained from backbone routers on UDP port
15000. In message clustering phase, as it is shown in Figure 5, the optimal cluster
number k for XUNLEI protocol is 10. However, 10 is not the ﬁnal number of
protocol state messages. In the next step, the system will construct DFA and
ﬁnd the minimal DFA that is consistent with it.
After state machine minimization, the ultimate P-PSM of XUNLEI protocol
is shown in Figure 8. Moreover, the set of protocol state messages is illustrated
in Table 2. Furthermore, sign f is not depicted in Figure 8 for the reason that
Inferring Protocol State Machine from Network Traces
15
(cid:69)(cid:11)(cid:19)(cid:17)(cid:26)(cid:26)(cid:12)
(cid:84)(cid:24)
(cid:11)(cid:19)(cid:12)
(cid:69)(cid:11)(cid:19)(cid:17)(cid:20)(cid:27)(cid:12)
(cid:84)(cid:19)
(cid:11)(cid:19)(cid:12)
(cid:72)(cid:11)(cid:20)(cid:12)
(cid:72)(cid:11)(cid:19)(cid:17)(cid:21)(cid:26)(cid:12)
(cid:72)(cid:11)(cid:19)(cid:17)(cid:23)(cid:24)(cid:12)
(cid:72)(cid:11)(cid:19)(cid:17)(cid:19)(cid:19)(cid:24)(cid:12)
(cid:70)(cid:11)(cid:19)(cid:17)(cid:25)(cid:21)(cid:12)
(cid:70)(cid:11)(cid:19)(cid:17)(cid:21)(cid:12)
(cid:68)(cid:11)(cid:19)(cid:17)(cid:19)(cid:21)(cid:12)
(cid:69)(cid:11)(cid:19)(cid:17)(cid:19)(cid:24)(cid:12)
(cid:84)(cid:20)
(cid:11)(cid:19)(cid:12)
(cid:70)(cid:11)(cid:19)(cid:17)(cid:19)(cid:26)(cid:12)