title:Provable-Security Model for Strong Proximity-based Attacks: With Application
to Contactless Payments
author:Ioana Boureanu and
Liqun Chen and
Sam Ivey
Provable-Security Model for Strong Proximity-based Attacks
– With Application to Contactless Payments –
Ioana Boureanu
Liqun Chen
Sam Ivey
PI:EMAIL,PI:EMAIL,PI:EMAIL
University of Surrey, Surrey Centre for Cyber Security (SCCS)
Guidford, UK
ABSTRACT
In Mastercard’s contactless payment protocol called RRP (Relay
Resistant Protocol), the reader is measuring the round-trip times of
the message-exchanges between itself and the card, to see if they
do not take too long. If they do take longer than expected, a relay
attack would be suspected and the transaction should be dropped. A
recent paper of Financial Crypto 2019 (FC19) raises some questions
w.r.t. this type of relay-protection in contactless payments. Namely,
the authors point out that the reader has no incentive to protect
against relaying, as it stands to gain from illicit payments. The paper
defines the notion of such a rogue reader colluding with a MiM
attacker, specifically in the context of contactless payments; the
paper dubs this as collusive relaying. Two new protocols, PayBCR
and PayCCR, which are closely based on Mastercard’s RRP and aim to
achieve resistance against collusive relaying, are presented therein.
Yet, in the FC19 paper, there is no formal treatment of the collusive-
relaying notion or of the security of the protocols.
In this paper, we first lift the FC19 notions out of the specifics
of RRP-based payments – to the generic case of distance bounding.
Thus, we set to answer the wider question of what it would mean
to catch if RTT-measuring parties (readers, cards, or others) cheat
and collude with proximity-based attackers (i.e., relayers or other
types). To this end, we give a new distance-bounding primitive
(validated distance-bounding) and two new security notions: strong
relaying and strong distance-fraud. We also provide a formal model
that, for the first time in distance-bounding, caters for dishonest
RTT-measurers. In this model, we prove that the new contactless
payments in the FC19 paper, PayBCR and PayCCR attain security
w.r.t. strong relaying. Finally, we define one other primitive (vali-
dated and audited distance-bounding), which, in fact, emulates more
closely the PayCCR protocol in the Financial Crypto 2019 paper;
this is because, contrary to the line introducing them, we note
that PayBCR and PayCCR in fact differ in construction and secu-
rity guarantees especially in those that go past relaying and into
authentication.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
ASIA CCS ’20, October 5–9, 2020, Taipei, Taiwan
© 2020 Association for Computing Machinery.
ACM ISBN 978-1-4503-6750-9/20/10...$15.00
https://doi.org/10.1145/3320269.3384748
ACM Reference Format:
Ioana Boureanu, Liqun Chen, and Sam Ivey. 2020. Provable-Security Model
for Strong Proximity-based Attacks – With Application to Contactless
Payments –. In Proceedings of the 15th ACM Asia Conference on Computer and
Communications Security (ASIA CCS ’20), October 5–9, 2020, Taipei, Taiwan.
ACM, New York, NY, USA, 14 pages. https://doi.org/10.1145/3320269.3384748
1 INTRODUCTION
In relay attacks, a malicious party forwards communications be-
tween two legitimate parties, without them knowing and with the
aim to have some gain. In 2015, EMV (Europay Mastercard and
Visa), which is the most widely used electronic payment protocols
was shown [8] to be susceptible to these relay attacks. In turn, this
implies that contactless cards are abused by attackers to unwillingly
make payments to a far-away EMV reader. As such, in 2016, Master-
card enhanced its contactless EMV protocol, called PayPass, with a
relay-protection mechanism. The resulting protocol was dubbed
RRP(relay-resistant protocol). For relay-protection, in RRP, the ter-
minal enforces an upper bound on the round trip times (RTTs)
of the messages it exchanges with the card. This is a RTT-based
method of relay-deterrence, widely known as proximity checking
or distance bounding (DB) [6].
Recent attention has been given to RRP. Namely, in [7], the au-
thors note that the RTT-measurements sitting with the EMV reader
may not fit with the incentives of the latter; specifically, some EMV
terminals would be ready to take illicit, relayed payments, as they
only stand to gain from it anyway. Moreover, the issuing-bank in
RRP does not get any proof of the RTT-checks, so a rogue terminal
as per the above can “walk free”. Thus, [7], did propose new proto-
cols based on RRP, with the view that these protocols would catch
such a cheating reader that would potentially collude with a relay
attacker.
The authors of [7] focused purely on RRP (as opposed to other
DB/payment protocols) and on one definition capturing the poten-
tial collusion between the rogue reader and the relay-attacker. This
definition was called collusive relaying, and it is given informally.
Moreover, this definition is (again) cast in the strict setting of EMV.
Concretely, the security against collusive relaying says that if the
issuing-bank is authenticating a contactless card during a payment,
then that card must have been close to the reader (implicitly the
reader who asked for the payment be taken). Two things strike w.r.t.
this definition. Firstly, it mixes a property of authentication and
one of proximity in ways that are not totally clear. For instance, it is
not clear which inputs the bank ought to receive w.r.t. RTT-checks,
if any. This generality could be fine for a generic primitive, but it
Session 2: Authentication ASIA CCS '20, October 5–9, 2020, Taipei, Taiwan87is arguably too loose given that it is applied to a specific case, like
EMV. Secondly and on a more pedantic note, the name collusive
relaying via the lens of the given definition is misleading, as re-
laying per se is an attack against proximity-checking not against
authentication [11]. For an attack against authentication, we gen-
erally speak of MiM (men in the middle) that do more than just
relaying. So, it appears that [7] aimed to introduced not just security
against relay-facilitating collusions, but also/rather security against
MiM-facilitating collusion.
Also, the general question of an actual primitive that would
augment distance-bounding to protect against cheating by the RTT-
measuring parties was not asked by [7]. In this vain, [7] stops short
of asking itself if there are other collusive attacks in DB which would
align to collusive relaying. I.e., could an attacker collude with an
RTT-measuring card to mount a sort of collusive distance-fraud1.
Last but not least, [7] does not include a formal model, not even
one just for collusive relaying over EMV.
Research Questions. This paper aims to bridge these gaps. It
aims to “peel” back to layer to the original and generic idea in [7],
and answer these questions:
Q1: “If the RTT-measuring party in DB is corrupted, can we still
get some security against a strong form of relaying or of other
proximity-based attacks, whereby –in the attack– the corrupted
entity could side with the main attacker?”
Q2: ”Can we formally prove this type of security for the protocols
in [7]?
Q3: “What primitive would encapsulate this security property
best?”
Q4: “What would the security model for this primitive be?”
Q5: “How do the security definitions yielded here compare with
the collusive-relaying notion introduced in [7]?”.
Note. Consider the presence of rogue RTT-measurers who may
collude with other attackers. In this context, we would like to point
out that it is of practical interest to be first looking at collusions just
w.r.t. relaying (as opposed to collusions over relaying and authenti-
cation as per the albeit informal endeavours in [7]). Indeed, relaying
is a simple attack to put in place (which subverts no cryptography),
as opposed to authentication forgeries. That is why we pursue
the relaying line primarily, and only in Section 5 move towards
including collusive attacks over authentication as well.
Contributions & Structure. In this paper, we answer the above
questions as follows.
(1) Answering Q3 above, we introduce a generic, augmented
DB primitive, called validated distance-bounding ( v-DB).
In this primitive, a party is mandated to recheck the RTT-
measurements, with the view to catch corruption therein.
See Section 3.
(2) Answering Q4 above, we define a security model that allows
for the RTT-measuring party to be malicious. Incidentally,
this also means that it allows for a reader to be malicious (if
the reader does the RTT). To the best of our knowledge, this
is the first formal model of this type in the DB literature. See
Section 4.
1Distance-fraud is a DB attack whereby a far-away card manages to make it look like
it is close to the reader.
(3) Answering Q1 above, v-DB protocols, we define the security
properties of strong relaying and strong distance-fraud.
See Subsection 4.4.
(4) Answering Q2 above, we prove that the protocols in [7]
attain strong relaying. Strong distance-fraud does not
apply to them. See Subsection 4.5, and Appendix A for the
actual proofs.
(5) Answering Q5 above, we also introduce the primitive (vali-
dated and audited distance-bounding ( v-ADB) protocols),
and the property (strong MiM v-ADB-security) that would
be closer to the notion of collusive relaying in [7]. See Sec-
tion 5.
2 BACKGROUND & FOUNDATIONAL
ASPECTS
2.1 Contactless Payment Protocols Designed
around Collusive Relaying
In [7], the authors introduce two protocols PayCCR and PayBCR, both
based on Mastercard’s RRP. These protocols assume the addition of
Trusted Platform Modules (TPMs) to the EMV infrastructure (i.e.,
to the PKI, in such a way that banks can check TPM certificates
during EMV transactions). In this section, we recall relevant details
of these protocols.
PayBCR & PayCCR: High-level Description. Both protocols
in [7] enhance Mastercard’s contactless-payment protocol with re-
lay protection, i.e., RRP [12] . They do so by adding a TPM onboard
the RRP reader. This TPM is called twice, each time to timestamp
an input, such that the difference of the two timestamps closely
approximates the roundtrip time (RTT) between the card and the
reader. Moreover, PayCCR and PayBCR record this timestamping
information, later to be used by the card or the issuing bank to
re-verify the RTT measurements, alongside other checks each nor-
mally makes in RRP. On one hand, PayBCR does not modify the card
side of RRP and thus it is the issuing bank who does the verifica-
tion of the TPM’s timestamps. On the other, PayCCR leaves the RRP
reader-to-bank specifications unchanged, and it modifies the RRP
card so that it re-checks the RTT measurements mediated by the
TPM onboard the RRP reader.
Herein, we will mainly recall PayBCR. The reader is referred
to [7] for details. PayBCR , shown in Figure 1, is tightly based on
RRP. Firstly, the EMV reader sends its nonce NR to the TPM to
be timestamped. The TPM uses the T PM2_GetTime command to
timestamp this nonce and it produces a randomised signature σ1 on
the timestamped nonce. The signature σ1 from the TPM is sent to
the card, in lieu of the nonce so-called UNin RRP. To keep PayBCR
compliant with RRP, a truncation of σ1 is sent to the card; this
truncation is denoted as σ ′
1. The card’s response (NC as per RRP) is
sent to the TPM, which similarly yields a randomised signature σ2.
The SDAD signs the AC, the timing information and σ ′
1 (in place
of UN). Finally, the card’s RRP time-bound td, σ1, σ2, t1 and t2 and
the AC are sent to the bank. With these, the bank can check the
difference between the timestamps to ensure the card and EMV
reader were close.
For completeness, we give the description of PayCCR too; see
Figure 2. Its details are very similar to those of PayBCR, only that it
Session 2: Authentication ASIA CCS '20, October 5–9, 2020, Taipei, Taiwan88Bank
TPM
Reader
Card
Cer t (PubSiдnT P M ), KM
PrivSiдnT P M
PubCA, NR ∈R {0, 1}32
T P M2_GetT ime(NR )
t1 := TPM-AttestedTime;
σ1 = SiдnT P M (t1,NR )
t1, σ1
timed
T P M2_GetT ime(NC )
t2 := TPM-AttestedTime;
σ2 = SiдnT P M (t2, NC )
t2, σ2
td , KM , PrivC
Cer tP r ivCA (PubB)
Cer tP r iv B (PubC )
NC ∈R {0, 1}32
σ′
1
NC , td
READ RECORD
Certs
GEN AC, data, . . .
(ATC)
(ATC,data,σ′
1,..)
KS = EncKM
AC=MACKs
SDAD= SignP r ivC (AC, NC , td ,
σ′
1,. . . )
SDAD, AC
AC, t1, t2, σ1, σ2, td , SDAD, Certs,...
Check SDAD
Check t1 in σ1, t2 in σ2
Check σ1, σ2 & NC , NR, td in SDAD
Check AC, Check t2 − t1 ≤ td
Figure 1: PayBCR [7]: Mastercard’s RRP with Collusive-Relay
Protection & No Changes to the Card
TPM
Reader
Card
PrivSiдnT P M ,...
PubCA
NR ∈R {0, 1}32
TPM2_GetTime(NR )
td , KM , PrivC , Cer tB (PubC )
Cer t (PubSiдnT P M ),
NC ∈R {0, 1}32
t1 := TPM-AttestedTime;
σ1 = SiдnT P M (t1,NR )
timed
t1, σ1
TPM2_GetTime(NC )
σ1
NC
t2 := TPM-AttestedTime;
σ2 = SiдnT P M (t2, NC )
t2, σ2
t2,σ2,t1,NR
Cer t (PubSiдnT P M )
Certs
GEN AC, data, . . .
Check signatures & values in σ1 & σ2,
Check t2 − t1 < td and check Certs
KS = EncKM