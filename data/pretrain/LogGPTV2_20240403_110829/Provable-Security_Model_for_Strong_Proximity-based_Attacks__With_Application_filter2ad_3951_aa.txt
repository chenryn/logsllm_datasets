# Provable-Security Model for Strong Proximity-based Attacks: With Application to Contactless Payments

## Authors
Ioana Boureanu, Liqun Chen, and Sam Ivey

## Affiliations
University of Surrey, Surrey Centre for Cyber Security (SCCS), Guildford, UK

## Abstract
In Mastercard’s contactless payment protocol, RRP (Relay Resistant Protocol), the reader measures the round-trip times (RTTs) of message exchanges with the card to detect potential relay attacks. If the RTTs are longer than expected, a relay attack is suspected, and the transaction is aborted. A recent paper from Financial Crypto 2019 (FC19) raises concerns about the incentive structure in this type of relay protection. Specifically, it points out that the reader has no incentive to prevent relaying, as it benefits from illicit payments. The paper introduces the concept of a rogue reader colluding with a man-in-the-middle (MiM) attacker, termed "collusive relaying," and proposes two new protocols, PayBCR and PayCCR, based on RRP to resist such attacks. However, the FC19 paper lacks a formal treatment of collusive relaying or the security of the proposed protocols.

In this paper, we generalize the concepts from FC19 to the broader context of distance bounding. We introduce a new primitive, validated distance-bounding (v-DB), and two new security notions: strong relaying and strong distance-fraud. We also provide a formal model that, for the first time in distance-bounding, accounts for dishonest RTT-measurers. Using this model, we prove that the new contactless payment protocols, PayBCR and PayCCR, achieve security against strong relaying. Additionally, we define another primitive, validated and audited distance-bounding (v-ADB), which more closely emulates the PayCCR protocol, addressing differences in construction and security guarantees, particularly in authentication.

## 1. Introduction
Relay attacks involve a malicious party forwarding communications between two legitimate parties without their knowledge, often to gain some benefit. In 2015, it was shown that EMV (Europay, Mastercard, and Visa) protocols, widely used for electronic payments, were susceptible to relay attacks. This vulnerability allows attackers to use contactless cards to make unauthorized payments to a distant EMV reader. In response, Mastercard enhanced its contactless EMV protocol, PayPass, with a relay-protection mechanism, resulting in the Relay Resistant Protocol (RRP). In RRP, the terminal enforces an upper bound on the RTTs of messages exchanged with the card, a method known as proximity checking or distance bounding (DB).

Recent attention has been given to RRP, with a 2019 paper noting that the EMV reader may have no incentive to enforce RTT checks, as it benefits from illicit, relayed payments. The issuing bank in RRP does not receive proof of these RTT checks, allowing a rogue terminal to go undetected. The paper proposes new protocols, PayBCR and PayCCR, to address this issue by detecting a cheating reader that might collude with a relay attacker.

The authors of the 2019 paper focused on RRP and introduced a definition for collusive relaying, but this definition is informal and specific to EMV. It mixes properties of authentication and proximity in unclear ways and is too broad for a specific case like EMV. Moreover, the paper does not include a formal model for collusive relaying.

### Research Questions
This paper aims to address these gaps:
1. Can we still achieve security against strong forms of relaying or other proximity-based attacks if the RTT-measuring party is corrupted?
2. Can we formally prove this type of security for the protocols in the 2019 paper?
3. What primitive best encapsulates this security property?
4. What would the security model for this primitive be?
5. How do the security definitions here compare with the collusive-relaying notion in the 2019 paper?

### Contributions & Structure
1. **Validated Distance-Bounding (v-DB)**: We introduce a generic, augmented DB primitive where a party rechecks RTT measurements to detect corruption.
2. **Security Model**: We define a security model that allows for a malicious RTT-measuring party, the first of its kind in DB literature.
3. **Strong Relaying and Strong Distance-Fraud**: We define these security properties for v-DB protocols.
4. **Formal Proofs**: We prove that the protocols in the 2019 paper achieve strong relaying but not strong distance-fraud.
5. **Validated and Audited Distance-Bounding (v-ADB)**: We introduce this primitive and the property of strong MiM v-ADB-security, which better aligns with the collusive relaying notion in the 2019 paper.

## 2. Background & Foundational Aspects

### 2.1 Contactless Payment Protocols Designed around Collusive Relaying
In the 2019 paper, two protocols, PayCCR and PayBCR, were introduced, both based on Mastercard’s RRP. These protocols add Trusted Platform Modules (TPMs) to the EMV infrastructure, allowing banks to check TPM certificates during transactions. Both protocols enhance RRP with relay protection by using a TPM to timestamp inputs, approximating RTTs. PayBCR modifies the issuing bank's verification process, while PayCCR modifies the card to recheck RTT measurements.

#### PayBCR
PayBCR, shown in Figure 1, closely follows RRP. The EMV reader sends its nonce \( NR \) to the TPM for timestamping. The TPM uses the `TPM2_GetTime` command to timestamp the nonce and produces a randomized signature \( \sigma_1 \). The signature \( \sigma_1 \) is sent to the card, replacing the nonce \( UN \) in RRP. A truncation of \( \sigma_1 \), denoted \( \sigma'_1 \), is sent to the card. The card's response \( NC \) is sent to the TPM, which similarly yields a randomized signature \( \sigma_2 \). The SDAD signs the AC, timing information, and \( \sigma'_1 \). Finally, the card’s RRP time-bound \( td \), \( \sigma_1 \), \( \sigma_2 \), \( t1 \), and \( t2 \) are sent to the bank, allowing it to check the difference between timestamps to ensure the card and EMV reader were close.

#### PayCCR
PayCCR, shown in Figure 2, is similar to PayBCR but modifies the card to recheck RTT measurements. The reader sends its nonce \( NR \) to the TPM for timestamping, producing \( \sigma_1 \). The card receives \( \sigma_1 \) and sends its nonce \( NC \) to the TPM, which produces \( \sigma_2 \). The card then rechecks the RTT measurements and sends the necessary data to the bank for verification.

[Figures 1 and 2 should be included here, detailing the steps of PayBCR and PayCCR, respectively.]

---

This revised text provides a clearer, more structured, and professional presentation of the research, making it easier to understand the context, contributions, and technical details.