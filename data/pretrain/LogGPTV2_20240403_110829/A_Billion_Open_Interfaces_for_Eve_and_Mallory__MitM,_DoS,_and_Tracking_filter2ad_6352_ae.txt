### 8. Implementation Security

During our analysis of AWDL and the development of an AWDL prototype, we identified two implementation flaws in Apple's operating systems that can be exploited by an attacker to crash devices in close proximity.

#### DoS: Kernel Panic and System Crash
These vulnerabilities can be exploited by sending corrupted AirDrop Frames (AFs). Specifically, setting invalid values in synchronization parameters can trigger kernel panics on macOS 10.12, while manipulating the channel sequence can cause system crashes on macOS 10.14, iOS 12, watchOS 12, and tvOS 5. To demonstrate these findings, we have provided a proof-of-concept (PoC) video that showcases the second vulnerability on iOS devices [75]. The video illustrates how an attacker can mount a targeted DoS attack to crash a single device, as well as a blackout DoS attack that simultaneously crashes all devices within range.

#### Outlook: Remote Code Execution
While these vulnerabilities are not critical on their own, their existence creates a new class of threats for Wi-Fi devices. An attacker can exploit these flaws without any authentication, meaning they do not need to be on the same network. Given the history of remote code execution vulnerabilities discovered in standardized Wi-Fi implementations [8, 14], we believe a determined attacker could find similar flaws in AWDL.

### 9. Conclusion

The deployment of open Wi-Fi interfaces has enabled new types of applications for mobile devices, allowing them to communicate with each other without being connected to the same Wi-Fi network. However, this also opens up new opportunities for attackers, as they no longer need to provide any form of authentication, such as access to a secure Wi-Fi network. In this paper, we investigate Apple's proprietary AWDL protocol, the first of its kind. We identify three distinct protocol-level vulnerabilities that enable Denial of Service (DoS), user tracking, and Man-in-the-Middle (MitM) attacks. Additionally, we discovered two implementation bugs in Apple's operating systems that cause DoS. Given the complexity of the protocol and its implementations, we conjecture that more severe vulnerabilities will be found in the future.

To build proofs of concept for these attacks, we reverse-engineered AirDrop, a system service that runs on top of AWDL, and implemented open versions of both AWDL and AirDrop, which we have made available as open-source software. Our findings also have implications for non-Apple devices: Neighbor Awareness Networking (NAN), commonly known as Wi-Fi Aware, is a new standard supported by Android that draws on AWDL's design and may be vulnerable to similar attacks. Further investigation is needed to confirm this.

### Responsible Disclosure

We contacted Apple about our findings on December 17, 2018, and shared a draft of this paper along with our PoC code. We supported Apple in fixing the privacy leaks (Section 5) and desynchronization issues (Section 6) in AWDL, as well as the ambiguous authentication state in AirDrop (Section 7). We reported the two implementation vulnerabilities (Section 8) earlier, on August 14 and 27, 2018. Apple has released software updates addressing the second vulnerability on October 30, 2018, for all Apple operating systems [4].

### Acknowledgements

This work is funded by the LOEWE initiative (Hesse, Germany) within the NICER project and by the German Federal Ministry of Education and Research (BMBF) and the State of Hesse within CRISP-DA. The work was partially supported by NSF grant 1740907. We thank the Apple Product Security team for their feedback on the paper.

### Availability

We release the source code of our AWDL [76] and AirDrop [78] implementations as part of the Open Wireless Link project [81] (https://owlink.org).

### References

[References remain unchanged]

---

This revised text is more structured, clear, and professional, making it easier to understand the key points and findings of your research.