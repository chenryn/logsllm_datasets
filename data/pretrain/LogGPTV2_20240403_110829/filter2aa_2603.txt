### DEFCON XXI: How My Botnet Purchased Millions of Dollars in Cars and Defeated the Russian Hackers

#### Introduction
I want to share a story that involves:
- Hacking
- Cars
- Russian Hackers
- Subverting the system

This story also highlights:
- Commercial Botnets
- Creating Competitive Advantages
- Misusing Technology

#### What You Will Learn
- **What makes a good Botnet/Webbot project?**
- **How Bots can create competitive advantages for businesses (with an example)**
- **What I would do differently today (the example occurred 6 years ago)**

#### Key Elements of a Good Bot Project
- **The Bot...**
  - Should not attempt to recreate existing solutions like Google.
  - Must solve a specific problem.
  - Needs to be viable throughout its service life.
  - Should remain discreet and not reveal its presence.

I have permission to share this story. It's rare that I get to discuss specific projects. I've been writing about bots since 1999, covering areas such as medical diagnostics, privacy, fraud detection, private investigations, and government applications.

#### The Problem
- Car dealerships make most of their money from used vehicles.
- Acquiring high-quality used cars is time-consuming and costly.
- A client found a website with great cars but faced significant competition and poor web design, making it difficult to purchase desired vehicles.

#### The Opportunity
- A national franchise posted about 300 rental returns daily for dealerships to purchase.
- Dealers could view the cars before the sale.
- No car could be purchased before 10 AM PDT.

**Example Listing:**
- **Make:** Hudson
- **Model:** 112 Coupe
- **Year:** 1938
- **Miles:** 47,000
- **Condition:** Excellent
- **Price:** $18,500

Users had to continually refresh their browsers to see the "Buy" button, leading to a highly competitive and frustrating process.

#### The Real Problem
- There were a limited number of desirable cars.
- Every dealership wanted the same cars.
- The website's design created peak bandwidth demands, making it very hard to use during the sale.

#### How the Client Coped
- Dealers recruited multiple people to refresh browser windows for specific cars.
- This manual process was inefficient and often unsuccessful.

**Technical Issues:**
- Bandwidth and server lag peaked at the sale time.
- Screens could take up to 30 seconds to refresh.

#### The Solution
**Part 1: Initial Implementation**
- **Problems with the Existing System:**
  1. Too manual.
  2. The "Buy" button took too long to appear.

- **Solution:**
  - Developed a lightweight web interface.
  - Used HTML frames and multiple instances.
  - The bot validated the VIN and synchronized clocks with the target server.
  - The bot started the countdown to purchase and made the purchase attempt.

**Success Rate:**
- The client's purchase success rate went from 0% to near 100%.

**Initial Success Factors:**
- The bot did not need to wait for a signal that the sale was on.

**Signs of Problems:**
- After six months, success rates dropped to about 50%.
- A competing bot developed by Russian hackers was discovered.

**Part 2: Enhancements**
- **Clock Synchronization:**
  - Modified to check more frequently as the sale neared.
  - Calculated system lag to improve timing.

- **Purchase Attempts:**
  - The bot made multiple attempts slightly before the actual sale time based on calculated delays.

**Overall Success:**
- The bot operated for about 40 weeks.
- The client bought approximately 20 cars per week.
- Total cars purchased: 800 (estimated).
- Estimated wholesale value: $12,800,000.

#### What I Would Do Differently Today
- **Strengths:**
  - More successful than anticipated.
  - Lightweight clients.
  - Easy updates and distribution.
  - Stealthy and required authenticated users.
  - Simulated human behavior using multiple accounts.

- **Improvements:**
  - Accommodate newer technology (e.g., AJAX, complex forms).
  - Use a task queue to manage vehicle purchases.
  - Distribute tasks to harvesters located in data centers, offices, or the cloud.
  - Create and execute browser macros on-the-fly.
  - Update the task queue and communicate results via a web interface.

For more details, refer to my DEFCON 17 talk on "Screen Scraper Tricks: Difficult Cases."

#### Acknowledgments
- Thanks to the DEFCON CFP Goons, particularly Nikita, for allowing me to give my 5th DEFCON talk.
- My other talks are available on YouTube:
  - DEFCON X: Developing Webbots & Agents
  - DEFCON XI: Corporate Intelligence
  - DEFCON XV: The Incredible Executable Image Exploit
  - DEFCON XVII: Advanced Scraping: Difficult Cases

**Contact:**
- Email: [www.schrenk.com](mailto:info@schrenk.com)

Thank you for your attention!