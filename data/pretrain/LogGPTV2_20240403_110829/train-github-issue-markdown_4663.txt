Hello,  
I would like to know if it's possible to have a prototype with multiple
reference inside of it's definition.
    service: ServiceTest
    version: 7
    request:
        class: MyModel
        properties:
            # other conf..
            Field3:
                type: collection
                field: fieldCollection
                properties:
                    Field1:
                        type: string
                        field: fieldString
                    Field2:
                        type: collection
                        field: fieldCollection
                        properties:
                            Field1:
                                type: boolean
                                field: fieldBoolean
                            Field2:
                                type: collection
                                field: fieldCollection
                                properties:
                                  # ...
I start to write my Configuration but i don't know if it's possible to do what
i want.
    $rootNode
        ->children()
            ->scalarNode('service')
                ->isRequired()
            ->end()
            ->scalarNode('version')
                ->isRequired()
            ->end()
            ->arrayNode('request')
                ->isRequired()
                ->children()
                    ->scalarNode('class')->end()
                    ->arrayNode('properties')
                        ->children()
                            ->useAttributeAsKey('name')
                            ->prototype('array')
                                ->children()
                                    ->enumNode('type')
                                        ->values(array(
                                            ServiceProperty::TYPE_STRING,
                                            ServiceProperty::TYPE_INTEGER,
                                            ServiceProperty::TYPE_BOOLEAN,
                                            ServiceProperty::TYPE_COLLECTION
                                        ))
                                    ->end()
                                    ->scalarNode('field')->isRequired()->end()
                                    // Refers to the prototype
                                 ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
           ->end()
        ->end()
    ;