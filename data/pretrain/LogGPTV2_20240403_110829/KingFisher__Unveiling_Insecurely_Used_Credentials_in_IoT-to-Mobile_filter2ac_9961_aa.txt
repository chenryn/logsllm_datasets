# KingFisher: Unveiling Insecurely Used Credentials in IoT-to-Mobile Communications

## Authors
Yiwei Zhang, Siqi Ma, Juanru Li, Dawu Gu, Elisa Bertino

## Conference
2022 52nd Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN)

## Abstract
Today, users can access and control their IoT devices using mobile apps. These interactions often rely on IoT-to-mobile communication, which supports direct data exchanges between IoT devices and smartphones. To ensure mutual authentication and encrypted data transmission while maintaining a lightweight implementation, IoT devices and smartphones frequently share credentials with the help of a cloud server. Given the critical role of these credentials in communication security, this paper aims to understand how such sensitive materials are implemented.

We designed a set of analysis techniques and implemented them in KingFisher, an analysis framework. KingFisher identifies shared credentials, tracks their uses, and examines violations against nine security properties that credential implementations should satisfy. Our evaluation of eight real-world IoT solutions, involving over 35 million deployed devices, revealed that all these solutions use insecure credentials, making them vulnerable to privacy leakage or device hijacking.

**Keywords:** IoT-to-mobile communication, value-based analysis, shared credentials, companion app

## I. Introduction
Many Internet-of-Things (IoT) devices now support multiple communication models. In addition to the connection between an IoT device and its cloud backend (IoT cloud, maintained by either a vendor or a third-party public cloud provider), many IoT devices can directly communicate with smartphones via peer-to-peer, local network-based IoT-to-mobile communication. This allows an IoT device to leverage local transmission capabilities to communicate directly with a smartphone when they are connected to the same LAN or PAN (Personal Area Network). This local communication model not only minimizes delays for end-users managing IoT devices through a companion app but also reduces the need to transmit data via unnecessary third parties, enhancing privacy and compliance with regulations.

Despite the benefits, IoT-to-mobile communication still needs to ensure secure mutual authentication and strong cryptographic protection, as attacks are possible within local networks. However, security and protection schemes for IoT-to-mobile communication have been under-investigated, with most research focusing on cloud-centric communication. Current commercial solutions typically adopt a credential-based security mechanism, where credentials are distributed to both the IoT device and the smartphone (often with the help of the cloud) and used for authentication and establishing a secure channel. There are two types of shared credentials (SCs): authentication SCs (ASCs) for identity verification and cryptographic SCs (CSCs) for communication encryption. Unlike pre-shared credentials installed by manufacturers, SCs are often dynamically generated and distributed when an IoT device binds to a smartphone.

SCs are crucial for IoT-to-mobile communication, but their use is often ad hoc, poorly protected, and insecure. An attacker may aim to obtain SCs by compromising the parties using and storing them or exploiting weaknesses in the IoT-cloud-assisted SC generation and distribution. No security standard currently guides the secure use and implementation of SCs, and existing tools like CredMiner and iCredFinder focus on hard-coded credentials, while AuthScope and LeakScope focus on app-to-cloud communications.

To address this, we apply a two-fold approach:
1. We establish nine security properties that securely used SCs must/should satisfy.
2. We design and implement KingFisher, an analysis framework to automatically detect violations against these properties.

KingFisher analyzes security across multi-party interactions (among IoT device, smartphone, and cloud) to check if SCs are securely generated, distributed, used, protected, and revoked. It integrates several analysis techniques to identify SCs in use and examine their security posture. By simultaneously considering both smartphone-to-IoT and smartphone-to-cloud traffic, KingFisher can better understand the SC distribution process.

To evaluate our approach, we used KingFisher to analyze eight popular IoT solutions with over 35 million deployed devices. Despite implementation diversity, KingFisher successfully identified SC-related functions and messages for all eight solutions. None of the solutions securely used SCs; each violated at least four security properties, with the worst case satisfying only two out of nine properties. Details, experiment instructions, and feedback from IoT vendors are available at https://kingfisher.code-analysis.org.

## II. Threats Against Shared Credentials
To systematically study the security threats of SCs, we first need to understand how SCs are managed in IoT-to-mobile communication. The lifecycle of SCs involves three phases: device binding, data transmission, and unbinding. Two types of SCs are used: ASCs for identity verification and CSCs for communication encryption.

During device binding, the smartphone and IoT device authenticate each other, often with the help of an IoT cloud. The IoT cloud acts as a reliable authority, helping bind the devices and distribute SCs. During data transmission, ASCs prove identities, and CSCs protect the data. Finally, during unbinding, the smartphone initiates a request to revoke the binding, and all SCs are deleted.

SCs play a major role in securing IoT-to-mobile communication. ASCs ensure only authorized devices communicate, and CSCs provide cryptographic protection. However, the use of SCs is error-prone, lacking guidelines and standards. We adopt a threat model where the IoT device and smartphone OS are benign, but attackers can install malicious apps on the smartphone to access SCs. We focus on Wi-Fi networks, assuming the network is untrusted, and the attacker can perform passive eavesdropping or active message forgery.

Under this threat model, an attacker can forge user information, send authentication info, leak SCs, and hijack devices. These attacks highlight the need for robust security measures in IoT-to-mobile communication.

---

This revised version is more structured, clear, and professional, making it easier to read and understand.