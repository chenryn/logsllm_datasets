title:KingFisher: Unveiling Insecurely Used Credentials in IoT-to-Mobile
Communications
author:Yiwei Zhang and
Siqi Ma and
Juanru Li and
Dawu Gu and
Elisa Bertino
5
5
0
0
0
.
2
2
0
2
.
5
0
4
3
5
N
S
D
/
9
0
1
1
.
0
1
:
I
O
D
|
E
E
E
I
2
2
0
2
©
0
0
.
1
3
$
/
2
2
/
1
-
3
9
6
1
-
4
5
6
6
-
1
-
8
7
9
|
)
N
S
D
(
s
k
r
o
w
t
e
N
d
n
a
s
m
e
t
s
y
S
e
l
b
a
d
n
e
p
e
D
n
o
e
c
n
e
r
e
f
n
o
C
l
a
n
o
i
t
a
n
r
e
t
n
I
P
I
F
I
/
E
E
E
I
l
a
u
n
n
A
d
n
2
5
2
2
0
2
2022 52nd Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN)
KINGFISHER: Unveiling Insecurely Used
Credentials in IoT-to-Mobile Communications
Yiwei Zhang
Siqi Ma
Juanru Li
Shanghai Jiao Tong University
The University of New South Wales
Shanghai Jiao Tong University
PI:EMAIL
PI:EMAIL
PI:EMAIL
Dawu Gu
Shanghai Jiao Tong University
PI:EMAIL
Elisa Bertino
Purdue University
PI:EMAIL
Abstract—Today users can access and/or control their IoT
devices using mobile apps. Such interactions often rely on IoT-
to-Mobile communication that supports direct data exchanges
between IoT devices and smartphones. To guarantee mutual
authentication and encrypted data transmission in IoT-to-Mobile
communications while keeping lightweight implementation, IoT
devices and smartphones often share credentials in advance
with the help of a cloud server. Since these credentials impact
communication security, in this paper we seek to understand
how such sensitive materials are implemented. We design a set
of analysis techniques and implement them in KINGFISHER, an
analysis framework. KINGFISHER identiﬁes shared credentials,
tracks their uses, and examines violations against nine security
properties that the implementation of credentials should satisfy.
With an evaluation of eight real-world IoT solutions with more
than 35 million deployed devices, KINGFISHER revealed that
all these solutions involve insecurely used credentials, and are
subject to privacy leakage or device hijacking.
Keywords-IoT-to-Mobile communication, Value-based Analysis,
Shared Credential, Companion App
I. INTRODUCTION
Today many Internet-of-Things (IoT) devices support mul-
tiple communication models. In addition to the connection
between an IoT device and its cloud backend (IoT cloud, a
cloud server maintained by either a vendor or a third-party
public cloud provider), many IoT devices are able to directly
communicate with smartphones via peer-to-peer, local network
based IoT-to-Mobile communication. Rather than utilizing the
IoT cloud as a portal to send data to the smartphone, an IoT de-
vice can leverage the local transmission capabilities to directly
communicate with the smartphone when they are connected
to the same LAN or PAN (Personal Area Network) [1]. Such
a local communication model not only allows end-users to
manage IoT devices via a companion app on smartphones
with minimal delays. It also allows IoT devices and their
associated smartphones to directly exchange privacy-sensitive
data, without having to transmit the data via unnecessary third
parties (e.g., the cloud server). Therefore, such a communi-
cation model reduces security risks arising from cloud-based
communications [2], [3], and enhances privacy and compliance
with privacy regulations [4]–[6].
Although an IoT-to-Mobile communication is only estab-
lished between two nearby devices, it still needs to guarantee a
secure mutual authentication between these devices and apply
strong cryptographic protection to secure the data transmission
as attacks are also possible within local networks (e.g., by
compromising devices in a Wi-Fi network via a proxy of
the remote attacker)
[7], [8]. Despite those risks, security
and protection schemes for IoT-to-Mobile communication have
not been much investigated, as previous research has mostly
focused on the security of cloud-centric communication [2],
[3], [9]. To address the critical issue of establishing a secure
channel for IoT-to-Mobile communication, current commercial
solutions typically adopt a credential based security mech-
anism. Such a mechanism requires to ﬁrst distribute some
credentials to both the IoT device and the smartphone (often
with the help of the cloud), and then utilizes these shared
credentials for authentication and for establishing a secure
channel. There are two types of shared credential (SC) that
differ with respect to their use: authentication SC (ASC) used
for identity veriﬁcation, and cryptographic SC (CSC) used
for communication encryption. Unlike pre-shared credentials
installed into devices by manufacturers, SCs are often dynami-
cally generated and distributed only when an IoT device needs
to bind to a smartphone.
SCs are critical security elements for IoT-to-Mobile commu-
nication, but our observation is that the use of SCs in IoT-to-
Mobile communication is very much ad hoc. They are usually
poorly protected and insecurely used. In addition to directly
attacking the communications between the IoT device and the
smartphone, an attacker may also aim at obtaining the used
SCs by either compromising the parties using and storing the
SCs, or exploiting the weaknesses of the IoT-cloud assisted
SC generation and distribution. However, to the best of our
knowledge, no security standard exists to guide the secure use
and implementation of SCs. Also, tools designed to analyze
the use and implementation of credentials in mobile apps, such
as CredMiner [10] and iCredFinder [11], mainly focus on hard-
coded credentials, whereas tools such as AuthScope [12] and
LeakScope [13] focus on to app-to-cloud communications and
do not cover IoT-to-Mobile communication.
2158-3927/22/$31.00 ©2022 IEEE
DOI 10.1109/DSN53405.2022.00055
488
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:28:18 UTC from IEEE Xplore.  Restrictions apply. 
To handle the speciﬁc scenario of IoT-to-Mobile communi-
cation and inspect the security of SCs, we apply a two-fold ap-
proach: (i) We establish nine security properties that securely
used SCs must/should satisfy; (ii) We design and implement
KINGFISHER, an analysis framework to automatically detect
violations against these properties.
KINGFISHER analyzes security across the multi-party in-
teractions (among IoT device, smartphone, and cloud) re-
quired for the management of SCs to check whether they
are securely generated, distributed, used, protected and re-
voked. KINGFISHER integrates several analysis techniques
to identify SCs in use and examine their security posture.
It adopts a keywords-guided function instrumentation and
network clustering to ﬁrst collect SC-related messages in IoT-
to-Mobile communication, and employs a value-based analysis
to identify SCs and track the functions that operate on them in
(Android) companion apps. More importantly, KINGFISHER
extends traditional analysis techniques that check credentials
only in smartphone-to-IoT trafﬁc or only in smartphone-to-
cloud network trafﬁc. By simultaneously considering both
those two types of trafﬁc and tracking credentials across
them, KINGFISHER can better understand the SC distribution
process across the IoT device, the smartphone, and the cloud.
To evaluate our approach and investigate how insecurely
used SCs affect the IoT security, we used KINGFISHER to
analyze eight popular IoT solutions with more than 35 million
deployed devices. KINGFISHER successfully identiﬁed SC-
related functions and messages for all eight solutions despite
their implementation diversity. After pinpointing the SCs,
KINGFISHER inspected their use and found that none of those
solutions securely uses SCs; each of them violated at least four
security properties, with the worst case solution only satisfying
two out of nine properties. We provide the KINGFISHER
details, instructions of our experiments, and the feedback of
IoT vendors at https://kingﬁsher.code-analysis.org.
II. THREATS AGAINST SHARED CREDENTIALS
To systematically study the security threats of SCs, we
need to ﬁrst understand how SCs are managed in IoT-to-
Mobile communication. Figure 1 shows the lifetime of SCs.
Typically, the lifetime of SC involves three phases (device
binding, data transmission, and unbinding) of IoT-to-Mobile
communication, and includes two types of SCs based on the
two main purposes for using secrets, authentication SC (ASC)
and cryptographic SC (CSC). As ﬁrst step, the smartphone
and the IoT device need to authenticate the identity of each
other. In this phase an IoT cloud (maintained by the IoT device
vendor) often acts as a reliable authority. With the help of the
IoT cloud, the smartphone and the IoT device are bound to
each other and both obtain SCs, to be used in the subsequent
data transmissions. Note that the SCs are either generated
by the IoT cloud and separately sent to both the IoT device
and the smartphone, or directly negotiated between the IoT
device and the smartphone. Next, each time data is transferred,
the two communicating parties utilize the ASC to prove their
identities and the CSC to protect the data transmission. Note
Smartphone with 
Companion App
IoT Device
Cloud Server
User Impersonation
Send Auth Info.
SC Leakage
Return SCs
Device Hijacking
Device Binding
User/Device Messages
Data Transmission
Communication Revocation
Unbinding
Send SCs to Cloud
Vulnerable Third-parties
Device Reset
Return SCs
(cid:258)(cid:258)
Device Binding
Reusable SCs
Cloud-Centric Scheme
Device-Centric Scheme
Mutual Negotiation
Fig. 1. Typical IoT-to-Mobile Communication Process and the Threat Model
that actually the ASC could be used to derive a session token
used for authentication and the CSC used to derive session
keys to encrypt and sign the data. Finally, if the smartphone
and the IoT device need to revoke the binding, an unbinding
request, usually initiated by the smartphone, is sent to the IoT
device and the IoT cloud, so that they delete all SCs (and thus
invalidate the binding).
SCs play a major role in securing IoT-to-Mobile commu-
nication. The ASC proves that only the bound IoT device
and smartphone are authorized to communicate;
the CSC
helps implement cryptographic protection for transmitted data.
However, the use of SCs in IoT-to-Mobile communication
is error-prone. Unlike other types of credentials (e.g., web
tokens) that are regulated by security standards [14]–[18],
the implementation of SCs in IoT-to-Mobile communication
lacks guidelines. Also existing security standards for creden-
tials of the client-server model are not directly applicable to
implement SCs. Accordingly, in this paper we adopt the threat
model shown in Figure 1. We assume that the IoT device and
the smartphone OS are both benign. However, attackers may
install malicious apps on the smartphone, and these apps can
access the data storage containing SCs [19]–[21]. We focus
the threat model on the IoT-to-Mobile communication under
Wi-Fi networks only. There are more powerful adversaries that
can attack other local networks, such as Bluetooth [22], [23]
and Zigbee [24], but they require specialized resources not
commonly available. Also, we assume that the Wi-Fi network
is an untrusted network, that is, the attacker can connect to the
Wi-Fi network and perform passive eavesdropping or active
message forgery attacks.
Under the assumed threat model, the attacker can conduct
several attacks. He can forge user information as a legitimate
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:28:18 UTC from IEEE Xplore.  Restrictions apply. 