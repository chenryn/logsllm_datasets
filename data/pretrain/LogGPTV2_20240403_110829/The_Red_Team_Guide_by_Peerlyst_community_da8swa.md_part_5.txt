    [policy](https://www.peerlyst.com/tags/policy) enforced through
    [Group Policy](https://www.peerlyst.com/tags/group-policy) on the
    system and [users](https://www.peerlyst.com/tags/users) in the
    domain
2.  localgroup \ /domain -- queries and retrieves members
    of a local or global group from the local system and domain
    controller respectively
3.  session -- provides a list of ongoing active sessions on a system
    that allows multiple concurrent sessions
4.  share -- used to create and manage remote file share
5.  start -- used to start a
    [service](https://www.peerlyst.com/tags/service) on a local system
6.  stop -- used to stop a service on a local system
7.  use -- used to map a drive letter to remote file share
8.  view -- used to obtain a list of resources on a local system or
    network
## Requires Download and/or Installation
### Global
Global.exe is a command line utility that is part of the Windows 2000
Resource Kit Tools and displays information pertaining to global groups
on a remote system or domain.
> *global \ \\\\\*
### Local
Local.exe is a command line utility that is part of the Windows 2000
Resource Kit Tools and displays information pertaining to local groups
on a remote system or domain.
> *local \ \\\\\*
### Dsquery
The dsquery command line utility is obtained through the Remote Server
Administration [Toolkit](https://www.peerlyst.com/tags/toolkit) (RSAT)
available for Windows 7 & Windows 10 desktop OS's and allows an
authenticated user to query the Active Directory for information based
on a predefined criterion.
> *dsquery \ \*
1.  dsquery [subnet](https://www.peerlyst.com/tags/subnet) -o rdn -limit
    0 -u \\\\ -p \ -- retrieves
    all [IP](https://www.peerlyst.com/tags/ip) address subnets used in
    the internal network by the
    [DHCP](https://www.peerlyst.com/tags/dhcp) service typically running
    on the domain controller
2.  dsquery server -o rdn -limit 0 -u \\\\ -p
    \ -- retrieves the hostnames of all domain controllers
    from the domain a querying system is connected.
3.  dsquery computer -o rdn -limit 0 -u \\\\
    -p \ -- retrieves the hostnames of all systems, except
    the domain controllers from the domain a querying system is
    connected.
### PsLoggedon
The PsLoggedon utility is part of the SysInternal command line utilities
and displays both local and remotely logged on users on a local or
remote system.
> *psloggedon -l \\\\\ -accepteula*
### PsService
The PsService utility is part of the SysInternal command line utilities
and provides a mechanism to control services on a local or remote system
> *psservice \\\\hostname -u \\\\ -p \
> -accepteula query*
### DumpSec
Although dated, this is an invaluable
[tool](https://www.peerlyst.com/tags/tool) for retrieving information
from Active Directory and provides in-depth details on users, groups,
memberships, ACL's, password expiration, logons,
[lockouts](https://www.peerlyst.com/tags/lockouts), etc. This
information can then be saved to a
[CSV](https://www.peerlyst.com/tags/csv) file and processed with Excel
or grep. The comments column describing the nature and purpose of
service accounts can sometimes contain information like the
[username](https://www.peerlyst.com/tags/username) and password used for
them.
### ADInfo
ADInfo is similar to DumpSec and provides detailed information about
user accounts, memberships, and various policies in the queried domain.
### [Microsoft](https://www.peerlyst.com/tags/microsoft) Assessment and Planning Toolkit
The Microsoft Assessment and Planning Toolkit (MAP) is geared towards
simplifying the inventorying, assessment and migration
[process](https://www.peerlyst.com/tags/process) of IT systems in an
organization. But like most [system
administration](https://www.peerlyst.com/tags/system-administration)
tools, its capabilities are handy for an adversary to discover and
enumerate systems in an internal network connected to an Active
Directory. The drawback of using this tool is that it requires
installation and often a service pack update; activities that may draw
needless attention in a [red
team](https://www.peerlyst.com/tags/red-team) assessment.
Notwithstanding these [risks](https://www.peerlyst.com/tags/risks), the
results from the tool are exquisite with intricate details of
[OS](https://www.peerlyst.com/tags/os) and software versions,
[patch](https://www.peerlyst.com/tags/patch) details, services running
and [ports](https://www.peerlyst.com/tags/ports) on which they are
listening to name a few.
### NetScan
NetScan, as the name suggests, is a dedicated [port
scanning](https://www.peerlyst.com/tags/port-scanning) utility but
contains a feature that can substitute the use of PsLoggedon. This
feature provides multi-threading capability which allows faster
[enumeration](https://www.peerlyst.com/tags/enumeration) of logged on
users on multiple systems without having the need to recreate identical
capabilities in a [script](https://www.peerlyst.com/tags/script) that
executes PsLoggedon on more than one host.
## Steps in Reconnaissance and Enumeration
In a Red [Team](https://www.peerlyst.com/tags/team) exercise, it is
often difficult to control the system that one could end up breaching
and the privileges obtained therein, which in turn affects the ability
to conduct effective
[network](https://www.peerlyst.com/tags/network-reconnaissance)
[reconnaissance](https://www.peerlyst.com/tags/network-reconnaissance)
and enumeration. A skilled tester nevertheless uses the tools at their
disposal to the best of their abilities and obtain the best mileage from
them to meet these objectives. In this section, I have provided a brief
overview on the tools and
[techniques](https://www.peerlyst.com/tags/techniques) that can be used
with limited and administrative privileges on a Windows system to
successfully enumerate Active Directory Domain(s) and Forest.
Note that the steps in this section assume that the system
[breached](https://www.peerlyst.com/tags/breached) is using a Windows OS
and we have local administrator privileges to this host. In instances
where we do not have local
administrator privileges to the breached system, please refer to the
next section about tools and techniques that can be leveraged for
[reconnaissance](https://www.peerlyst.com/tags/reconnaissance) and
enumeration.
> *ipconfig /all*
ipconfig used with the /all flag can provide the DNS suffix(es) that can
be used in conjunction with other tools to obtain details on the
Domain(s) in the network.
> *nltest /dclist:\*
>
> *nltest /server:\ /domain_trusts*
nltest used with the /dclist flag and providing the DNS suffix obtained
from the ipconfig command can provide a list of domain controllers for a
Domain. This information can then be used with the /domain_trusts flag
to obtain a list of trust relationship between two or more Domain(s) and
Forest.
> *net accounts /domain*
net command used with the accounts option and the /domain flag retrieves
the password and account
[lockout](https://www.peerlyst.com/tags/lockout) policy enforced on
Domain User accounts.
> *local administrators\\\\ \*
local command used with the name of a localgroup e.g. administrator and
the hostname of a domain controller retrieves a list of Users and User
Groups that have local administrator privileges to this system.
> *global "domain admins" \\\\\*
global command used with the name of a global group e.g. Domain Admins
or [Enterprise](https://www.peerlyst.com/tags/enterprise) Admins option
and the hostname of a domain controller retrieves Users and User Groups
that have global administrator privileges to this system.
> *dsquery subnet -o rdn -limit 0*
dsquery used with the subnet option and specifying flags to provide a
cleaner and complete output retrieves all the subnets with their
respective subnet masks from the DHCP service typically found on a
Domain Controller.
Although some of the tools and techniques listed above require
administrative privileges to a breached system, not having such access
or an inability to attain such privileges do not translate to
enumeration failure. The built-in Windows command line tools and
utilities can be leveraged
to enumerate most if not all of the Active Directory Domain. The steps
in this enumeration are as follows:
> *ipconfig /all*
ipconfig used with the /all flag can provide the DNS suffix(es) that can
be used in conjunction with other tools to obtain details on the
Domain(s) in the network.
> *nltest /dclist:\*
>
> *nltest /server:\ /domain_trusts*
nltest used with the /dclist flag and providing the DNS suffix obtained
from the ipconfig command can provide a list of domain controllers for a
Domain. This information can then be used with the /domain_trusts flag
to obtain the list of trust relationships between two or more Domain(s)
and Forest.
> *net accounts /domain*
net command used with the accounts options and the /domain flag
retrieves the password and account lockout policy enforced on Domain
User accounts.
> *net localgroup administrators /domain*
net command used with the local group option, the /domain flag and the
name of a localgroup
g.  administrator, retrieves a list of Users and User Groups that have
    local administrator privileges to this system.
> *net groups "Domain Admins" /domain*
net command used with the group option, the /domain flag and the name of
a global group e.g. "Domain Admins", retrieve a list of Users and User
Groups that have global administrator privileges to this system.
> *nslookup -type=srv \_ldap.\_tcp.dc.\_msdcs.\*
nslookup command used with the type option and providing the DNS Suffix
retrieves a list of domain controllers and their respective IP
addresses. Although this isn't close to the output of dsquery subnet or
dnscmd /enumzone or /enumrecords that provides a complete list of IP
subnets [or IP Addresses](https://www.peerlyst.com/tags/ip-addresses)
used internally, it can be still be considered a starting point to
discover subnets and IP addresses used in the network. One way to
achieve this would be extrapolating the Class C or Class B subnet from
an IP address and using nslookup in a script to loop through 256 or
65535 addresses to discover valid hostnames and IP address combinations.
E.g. A 10.15.200.1 can be used to query IP addresses in the
10.15.200.0/24 or 10.15..0./16 subnets. Although not the most efficient
approach, it is better than running name resolution scans on the entire
[private](https://www.peerlyst.com/tags/private) IP address spaces.
> Chapter 6
>
> **Introduction to Social Engineering**
>
> Contributor: Chiheb Chebbi
![](media/image36.jpeg)You probably heard this mantra "Social
[Engineering](https://www.peerlyst.com/tags/engineering) ! because there
is no [patch](https://www.peerlyst.com/tags/patch) for
[human](https://www.peerlyst.com/tags/human-1) stupidity." [Social
engineering](https://www.peerlyst.com/tags/social-engineering) is the
art of [hacking](https://www.peerlyst.com/tags/hacking) humans. In other
words, it is a set of
[techniques](https://www.peerlyst.com/tags/techniques) (technical and
nontechnical) used to get useful and [sensitive
information](https://www.peerlyst.com/tags/sensitive-information) from
others using psychological manipulation. In this article, we are going
to learn Social engineering fundamentals, Why people and organizations
are [vulnerable](https://www.peerlyst.com/tags/vulnerable) to it and
finally, [how to](https://www.peerlyst.com/tags/how-to) perform [social
engineering
attacks](https://www.peerlyst.com/tags/social-engineering-attacks) using
[Kali](https://www.peerlyst.com/tags/kali) Linux. If you are new to
[ethical hacking](https://www.peerlyst.com/tags/ethical-hacking) and
[pentesting](https://www.peerlyst.com/tags/pentesting) I highly
recommend you to read my article: [Introduction to Ethical Hacking and
Penetration](https://www.peerlyst.com/posts/introduction-to-ethical-hacking-and-penetration-testing-chiheb-chebbi?trk=explore_page_posts_recent_feed_entry)
[Testing](https://www.peerlyst.com/posts/introduction-to-ethical-hacking-and-penetration-testing-chiheb-chebbi?trk=explore_page_posts_recent_feed_entry)
## Social Engineering Overview
![](media/image37.png)There are many books like *The Art of Inception*,
*The Art of Deception*, *Ghost in the Wire, The Art of Hacking the Human
Mind* and such that discussed Social Engineering and presented many
techniques to teach how to manipulate people to get them to disclose
sensitive information and useful information so you can use them later
in your attacks. All these works proved that human is the [weakest
link](https://www.peerlyst.com/tags/weakest-link) when it comes to
information security. It is not just about [hacking
tools](https://www.peerlyst.com/tags/hacking-tools) and techniques.
Studying human [weaknesses](https://www.peerlyst.com/tags/weaknesses)
could be very useful to succeed in an attack. Before
[learning](https://www.peerlyst.com/tags/learning) how to perform Social
engineering [attacks](https://www.peerlyst.com/tags/attacks) let's
explore why people and organizations are vulnerable to Social
engineering attacks.
\[Image Courtesy:
[[https://wraysec.com/wp-content/uploads/2015/10/Social-engineering-security.png]{.underline}](https://wraysec.com/wp-content/uploads/2015/10/Social-engineering-security.png)
\]
## What makes Organizations vulnerable to Social engineering?
We discovered previously that social engineering uses psychological
[manipulation](https://www.peerlyst.com/tags/manipulation) to trick
targets. Thus, many human weaknesses could be
[exploited](https://www.peerlyst.com/tags/exploited) when performing SE.
These are some causes why people and organizations are vulnerable to
SEattacks:
-   [Trust](https://www.peerlyst.com/tags/trust)
-   Fear
-   Greed
-   Wanting to help others
-   Lack of knowledge
> Other causes were discussed and named "**Cialdini\'s 6 Principles of
> Influence"**
## Cialdini\'s 6 Principles of Influence:
The Cialdini's 6 [principles](https://www.peerlyst.com/tags/principles)
of influence were developed by Dr Robert Cialdini. These principles can
be exploited while performing social engineering engagement. The
principles are:
1.  **Reciprocity:** we pay back what we received from others.
2.  **Commitment & Consistency:** We tend to stick with whatever we've
    already chosen
3.  **Social Proof:** We tend to have more trust in things that are
    popular or endorsed by people that we trust
4.  **Liking** We are more likely to comply with requests made by people
    we like
5.  **Authority**: We follow people who look like they know what they're
    doing
6.  **Scarcity:** We are always drawn to things that are exclusive and
    hard to come by
## Maslow's hierarchy of needs (Maslow)
Everyone knows the Maslow\'s hierarchy of needs. It is very implemented
in the [framework](https://www.peerlyst.com/tags/framework) while
[attack vectors](https://www.peerlyst.com/tags/attack-vectors) can be
based on it. By having a [fair](https://www.peerlyst.com/tags/fair)
understanding of its needs attackers can
![](media/image38.jpeg)[exploit](https://www.peerlyst.com/tags/exploit)
them to perform social engineering attacks
For more details please read my article: [How to Perform Social
Engineering Engagement
using](https://www.peerlyst.com/posts/how-to-perform-the-social-engineering-engagement-using-seef-chiheb-chebbi?trk=search_page_search_result)
[SEEF](https://www.peerlyst.com/posts/how-to-perform-the-social-engineering-engagement-using-seef-chiheb-chebbi?trk=search_page_search_result)
## Social Engineering Techniques
There are a lot of Social engineering attacks. Generally, they can be
divided into two major categories:
-   *Person-based social engineering attacks*
-   *Computer-based social engineering attacks*
The following are some of the most used engineering attacks:
-   **Baiting:** is in many ways similar to
    [phishing](https://www.peerlyst.com/tags/phishing) attacks. However,
    what distinguishes them from other types of social engineering is