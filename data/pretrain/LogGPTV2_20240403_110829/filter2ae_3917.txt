# FFmpeg远程文件窃取漏洞 – 移动端安全分析报告

#### 译文声明
本文为翻译文章，原文来源：360安全播报。译文仅供参考，具体内容及含义以原文为准。

**作者:** 360NirvanTeam & 360VulpeckerTeam

## 1. 漏洞起源
FFmpeg远程文件窃取漏洞最初在海外的一个漏洞平台上被发现，并在去年的一次CTF竞赛中被利用。官方于今年一月份发布了修复版本，并将此漏洞编号为CVE-2016-1897/CVE-2016-1898。在今年的Black Hat会议上也会有关于此漏洞的讨论。同时，360产品线也收到了相关漏洞报告，目前正在跟进修复工作。

## 2. 关于FFmpeg组件
FFmpeg是一个全球领先的多媒体框架，支持解码、编码、转码、复用、解复用、流媒体处理、过滤器和播放几乎所有格式的多媒体文件。它支持无数种编码格式，如HLS（HTTP Live Streaming）。

HLS是Apple公司开发的一种基于HTTP协议的流媒体通信协议。其基本原理是将一个视频流分成多个ts流文件，通过HTTP下载每个文件。当开始一个新的流媒体会话时，客户端首先下载一个m3u8（播放列表）文件，该文件包含了本次HLS会话的所有数据。

## 3. 漏洞原理
问题出在解析m3u8文件的过程中。解析文件时会得到ts流的HTTP地址，但并不局限于视频文件流，可以是任意URL地址，只要符合FFmpeg官方的协议头。因此，这导致了SSRF漏洞。更糟糕的是，官方还支持file协议以及concat协议，后者用于拼接URL，从而导致了本地文件读取漏洞。

下面是一个m3u8文件的示例格式：

```plaintext
#EXTM3U
#EXT-X-STREAM-INF:BANDWIDTH=528000,RESOLUTION=416x234
http://example.com/low.m3u8
#EXT-X-STREAM-INF:BANDWIDTH=1500000,RESOLUTION=640x360
http://example.com/mid.m3u8
```

构造一个媒体文件并访问这个m3u8文件，当本地打开并通过FFmpeg解析时，将会触发漏洞。

## 4. 漏洞危害
通过上传含有漏洞的视频并播放或在转码过程中，攻击者可以触发本地文件读取，获取服务器上的文件内容。漏洞刚曝光时，在服务器端影响较大，国内主流视频网站均受到波及。后续发现，安卓和苹果客户端如果使用了有漏洞的FFmpeg库，同样能触发本地文件读取漏洞，进而通过一段视频获取手机中的文件内容。初始阶段，漏洞只能读取一行文件内容，经过安全评估确认可以读取多行文件及整个文件内容。

## 5. 漏洞修复
查看官方源码后发现，在解析HLS编码时，FFmpeg禁止了所有协议，除了HTTP(S)和file协议。修改方法如下：

如果有使用FFmpeg的程序，请参照以下版本进行升级：
- FFmpeg 2.8.x系列升级至 **2.8.5** 或以上；
- FFmpeg 2.7.x系列升级至 **2.7.5** 或以上；
- FFmpeg 2.6.x系列升级至 **2.6.7** 或以上；
- FFmpeg 2.5.x系列升级至 **2.5.10** 或以上；
- 或直接使用FFmpeg 3.0.x版本。

## 6. 漏洞检测
首先检查APP是否使用了FFmpeg，可以通过扫描可疑的库文件和可执行文件中的特征字符串“detect bitstream specification deviations”。若存在特征字符串，说明使用了FFmpeg，继续后续检测；反之则没有使用FFmpeg。例如：

```sh
$ strings 360HomeGuard_NoPods | grep "detect bitstream"
detect bitstream specification deviations
```

检测是否修复CVE-2016-1897/CVE-2016-1898有两种方案：
1. **基于官方源码包编译的FFmpeg**，判断其版本是否高于2.8.5。通过对2.8.4和2.8.5源码的对比，在2.8.5以上的版本的libavformat库中，存在特征字符串“Invalid frame rate %f”。

    ```sh
    $ grep "Invalid frame rate" -r ffmpeg-2.8.4
    ffmpeg-2.8.4/libavformat/ivfdec.c: av_log(s, AV_LOG_ERROR, "Invalid frame rate %f\n");
    
    $ grep "Invalid frame rate" -r ffmpeg-2.8.5
    ffmpeg-2.8.5/libavformat/ivfdec.c: av_log(s, AV_LOG_ERROR, "Invalid frame rate %f\n");
    ffmpeg-2.8.5/libavformat/nuv.c: av_log(s, AV_LOG_ERROR, "Invalid frame rate %f\n", fps);
    ffmpeg-2.8.5/libavformat/nuv.c: av_log(s, AV_LOG_WARNING, "Invalid frame rate %f, setting to 0.\n", fps);
    ```

2. **检测对于CVE-2016-1897/CVE-2016-1898的源码patch**。官方修复漏洞时引入了字符串“file,”。通过检测这个字符串，可以判断当前App是否修复了漏洞。

    ```sh
    $ strings ffmpegDemo | egrep –color "^file,$"
    file,
    ```

## 7. 市场APP安全状况调查
通过对国内主流应用市场124371款全行业app进行抽样扫描，发现受此漏洞影响的产品数量为6314款，占总数的5%。并对其中受影响的app所使用的FFmpeg库文件做了Top 10统计。

其中使用率最高的`libeasemod_jni.so`属于环信SDK所带的库文件，`libcyberplay-core.so`是某开放云播放器的Android SDK。受影响app行业分类Top 10如下，其中通讯社交类应用受影响最大！