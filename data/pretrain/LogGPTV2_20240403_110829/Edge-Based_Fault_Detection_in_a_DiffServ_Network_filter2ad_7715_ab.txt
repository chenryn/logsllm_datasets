containing the potential fault, the edge node can trigger the
routers to enter a hybrid HELLO state whereby the routers
reduce their HELLO intervals temporarily in the interest of
detecting possible faults.
Figure 2 shows an example of a hybrid HELLO activa-
tion message. In the ﬁgure, EIng detects a possible fault on
the paths to E0 through a warning message from E1. As a
result, EIng sends an Activate-Hybrid message on a mul-
ticast tree containing only E0 using the same paths as the
heartbeat packet. When a node receives the Activate-Hybrid
message, the node will convert the upstream link as well as
the downstream links to the hybrid HELLO mode (accord-
ing to the replication information in the DSMCast header).
The hybrid HELLO mode is active for HybHC × HybH
seconds where HybHC is the number of hybrid HELLO
messages to send and HybH is the temporary HELLO in-
terval to use for the hybrid HELLO packets. During the
hybrid HELLO mode, links that are in the hybrid HELLO
mode are considered dead after HybH × HybD seconds
where HybD (hybrid dead time) is an integer greater than 0.
If the links are functioning correctly, both the upstream and
downstream nodes will be converted to the hybrid HELLO
mode for the speciﬁed timeframe for only those speciﬁc
links. In the case where such a message does not propa-
gate fully (link/node failure), an error will be detected as
the network routing state will be updated.
The use of the hybrid HELLO mode has several advan-
tages. First, the link state routing protocol does not have to
use the reduced HELLO interval unless in hybrid mode. For
the majority of the network operation, the HELLO interval
will be a typically larger value, thus representing a savings
in terms of CPU processing time at core routers. Although
Proceedings of the International Conference on Dependable Systems and Networks (DSN’02) 
0-7695-1597-5/02 $17.00 © 2002 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:14:40 UTC from IEEE Xplore.  Restrictions apply. 
5
Step 1: Link fails
E0
E1
C
C
C
Step 3: Warning heartbeat received
           Activate hybrid sent
C
E0
E1
C
C
Step 5: Link status update sent
C
E0
E1
C
C
EING
E5
EING
E5
EING
E5
Step 2: Sync problem detect
           Warning heartbeat sent by E1
C
E0
E1
C
C
Step 4: Hybrid HELLO(s) sent
C
C
C
E0
E1
Step 6: Heartbeat(s) re-routed
C
C
C
E0
E1
EING
E5
EING
E5
EING
E5
Figure 2. Hybrid HELLO Activation
the heartbeat messages do cost additional bandwidth, the
heartbeat packets are treated as data packets in the core and
thus cause zero CPU processing overhead. Thus, through
the use of the distributed intelligence of the edge routers
coupled with the use of heartbeat packets as input, the fast
link state interval can be intelligently triggered rather than
constantly being used.
3.6. Full Edge-Based Detection
In the above descriptions, each edge router employs a
greedy approach whereby each edge router attempts to ver-
ify all of its respective data paths. However, in sparse
networks, such a greedy approach may be unnecessary as
nodes could divide the veriﬁcation tasks among themselves.
This is due to the fact that the network sparsity causes many
of the veriﬁcations to be redundant. Thus, a further consol-
idation is needed beyond the multicast tree to increase the
efﬁciency of the heartbeat packets. The problem could be
summarized thusly:
For a given DS domain (D) containing a set of edge nodes
E and a set of core nodes C, construct a set of multicast
M trees rooted at nodes in E where each link (X, Y )in
D is traversed by heartbeat packets over both (X, Y ) and
(Y, X).
By employing such a mechanism, the edge nodes could
be used to verify correct operation of links in the DS do-
main without requiring excessive processing of link state
messages. As an additional feature, such packets could be
used to gather information regarding the core node’s status
(queue length for each class, drop rate for each class, etc.)
to assist in QoS management of the network. Such an ap-
proach could offer signiﬁcant beneﬁt for QoS marking and
resource provisioning in a DiffServ network. However, this
problem is beyond the scope of this paper and is a com-
pelling topic for future research.
4. Simulation Studies
In order to evaluate the performance of our model, we
have developed extensions to the ns-2 simulator [11] . A
generic link state protocol was created that mimics the com-
mon features of IS-IS [3] and OSPF [4] such as the HELLO
message and the ﬂooding of link state updates. For our
simulations, we evaluated the performance of four separate
models, a slow HELLO model, the EI-HELLO model, a fast
HELLO model, and a Packet-over-SONET model (for base-
line purposes). The characteristics of each model are shown
in Table 1.
The performance of the models were evaluated on two
network topologies, a small test network and NSFNet [12].
The small network was selected to isolate the fault detection
and recovery times of a single multicast ﬂow. The NSFNet
topology was selected as a realistic topology that would be
indicative of a practical DS domain.
4.1. Small Network Performance
Figure 3 details the topology of the DS domain consid-
ered in the small network study. For the study, a fault was
injected at 10 seconds and Node 0 was monitored for the
Proceedings of the International Conference on Dependable Systems and Networks (DSN’02) 
0-7695-1597-5/02 $17.00 © 2002 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:14:40 UTC from IEEE Xplore.  Restrictions apply. 
6
1
0
Receiver
Receiver
3
2
7
4
8
6
5
Source
Receiver
Primary links - 5.0 Mb, 5 ms
Backup links - 1.0 Mb, 10 ms
Other links - 2.0 Mb, 2 ms
Edge node
Core node
Figure 3. Small network topology
time until the next data packet (maximum packet gap in sec-
onds) was received. The maximum packet gap metric pro-
vides an excellent metric for measuring the responsiveness
of the failure detection and recovery mechanisms. In ad-
dition, a count of average link state messages (ALSC) was
recorded which measured the average number of link state
related messages per node per second. In the count, a link
state related message includes heartbeats, updates, HELLO
messages, and hybrid mode activations across each link in
the network. For the EI-HELLO model, the overhead of the
link state protocol and the heartbeats are shown separately.
4.1.1 Link Failure
For Figures 4 and 5, the link from Node 0 to Node 2 fails
at 10 seconds until the end of the simulation (50 seconds).
Figure 4(a) shows the recovery time as the HELLO interval
is varied. The slow HELLO model provides a curve that is
fairly indicative of most integer limited HELLO models. If
the default HELLO interval value for the majority of link
state protocols is used (10 seconds), the recovery time is
on the order of 30 seconds, an unacceptable re-routing time
for most ﬂows. However, although a fast HELLO interval
offers signiﬁcantly better re-routing performance, such per-
formance comes at an additional overhead as shown in Fig-
ure 5(a).
In contrast, the EI-HELLO offers performance
approaching that of the fast HELLO interval but at a signif-
icantly reduced penalty for a lower HELLO interval since
the lower HELLO interval is only engaged when a possible
fault is detected.
The other ﬁgures show the performance of EI-HELLO
as the heartbeat interval and green settings are varied ver-
sus a ﬁxed fast HELLO (100 ms) and a slow HELLO (5 s)
interval. Although the heartbeat interval offers some gain
for EI-HELLO, the fault detection is limited by the hybrid
HELLO rate and green setting. Thus, setting the heartbeat
interval to a lower level offers only marginal performance
gains at a signiﬁcant cost. Figure 5(b) plots the signiﬁcant
cost of EI-HELLO as the heartbeat interval is varied.
The green setting in Figure 4(c) impacts the performance
of the EI-HELLO signiﬁcantly as the green setting deter-
mines when other edge nodes can offer warnings regarding
synchronization problems of sequence numbers. However,
whereas the green setting can have a profound impact on
the re-routing time, it has very little impact on the message
overhead (see Figure 5(c)). This arises from the fact the
green setting is constrained by the end-to-end delay of the
network and is used as a threshold rather than for directly
generating packets at a ﬁxed interval.
4.1.2 Node Failure
In the event of a node failure, the performance of the EI-
HELLO model follows a similar trend as the one seen in
the single link failure case. However, whereas in the link
failure case node 1 was able to offer warnings to node 6, the
complete failure of node 2 prevents either node 1 or node
0 from receiving heartbeat packets. Thus, the red setting
(twice the green setting) provides the triggering mechanism
for engaging the hybrid HELLO interval. As a result, the
re-routing time for EI-HELLO is increased while both the
fast and slow HELLO modes remain roughly the same. The
graphs for the node failure case are not shown as the trends
are similar to the link failure case.
4.2. Large Network Performance
In order to evaluate the performance of the IE-HELLO
model on a larger scale, the performance was analyzed on
the NSFNet topology [12]. The topology provides a realis-
tic domain to measure the effect of failures in a DS domain.
The topology consisted of 33 links, 17 edge nodes, and 13
core nodes with only a single link from an edge router to the
core routers. For the simulations, the following parameters
were used:
(cid:127) 38 multicast groups were employed with an average of
4 receivers per group. Member join and leave events
occurred on an average of 250 ms apart.
(cid:127) Faults were exponentially distributed with a MTTF
(Mean Time to Failure) of 200 seconds and a MTTR
(Mean Time to Repair) of 50 seconds. Both node as
well as link faults were injected with equal MTF and
MTF characteristics.
Although the fault rate is signiﬁcantly higher than would
occur in practice, the fault rate has been increased to demon-
strate the recovery performance of the models. Hence, the
slow HELLO interval was set to 5 seconds rather than the
default of 10 seconds as with most routers. Since packets
are actually being simulated in ns, using realistic fault rates
Proceedings of the International Conference on Dependable Systems and Networks (DSN’02) 
0-7695-1597-5/02 $17.00 © 2002 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:14:40 UTC from IEEE Xplore.  Restrictions apply. 
7
Parameters
HELLO Settings
Fault Detection
Heartbeat Rate
Green/Red
Hybrid HELLO
IP-SONET
Slow HELLO
EI-HELLO
Fast HELLO
None
5 s
5 s
Lower layer
Dead Time
Dead Time+HBeat
Instant
None
None
None
3 x 5 s
None
None
None
3 x 5 s/Hybrid
250 ms
2/4
100 ms/3
100 ms
Dead Time
3 x 100 ms
None
None
None
Table 1. Simulation Models
40
35
30
25
20
15
10
5
)
s
d
n
o
c
e
s
(
0
e
d
o
N
-
p
a
G
t
e
k
c
a
P
m
u
m
x
a
M
i
Fast HELLO
EI-HELLO (Hybrid)
Slow HELLO (x10)
)
s
d
n
o
c
e
s
(
0
e
d
o
N
-
p
a
G
t
e
k
c
a
P
m
u
m
x
a
M
i
12
10
8
6
4
2
Fast HELLO
EI-HELLO
Slow HELLO
)
s
d
n
o
c
e
s
(
0
e
d
o
N
-
p
a
G
t
e
k
c
a
P
m
u
m
x
a
M
i
Fast HELLO
EI-HELLO
Slow HELLO
12
10
8
6
4
2
0
100 200 300 400 500 600 700 800 900 1000
0
100 150 200 250 300 350 400 450 500
0
1
HELLO interval (milliseconds)
Heartbeat interval (milliseconds)
2
3
4
5
6
7
8
9
10
Green setting (Red = Green x 2)
(a)
(b)
(c)
Figure 4. Effect of EI-HELLO settings on recovery time - link failure - small network - (a) HELLO
interval, (b) heartbeat interval, (c) green parameter setting
Fast HELLO
EI-HELLO (Link State)
EI-HELLO (LS+HBeat)
Slow HELLO (x10)
25
20
15
10
)
d
n
o
c
e
s
r
e
p
s
e
g
a
s
s
e
M
(