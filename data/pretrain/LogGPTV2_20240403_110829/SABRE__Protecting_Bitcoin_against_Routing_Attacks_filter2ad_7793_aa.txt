title:SABRE: Protecting Bitcoin against Routing Attacks
author:Maria Apostolaki and
Gian Marti and
Jan M&quot;uller and
Laurent Vanbever
SABRE: Protecting Bitcoin against Routing Attacks
Maria Apostolaki
ETH Zurich
PI:EMAIL
Gian Marti
ETH Zurich
Jan M¨uller
ETH Zurich
PI:EMAIL
PI:EMAIL
Laurent Vanbever
ETH Zurich
PI:EMAIL
Abstract—Nowadays Internet routing attacks remain practi-
cally effective as existing countermeasures either fail to provide
protection guarantees or are not easily deployable. Blockchain
systems are particularly vulnerable to such attacks as they rely on
Internet-wide communications to reach consensus. In particular,
Bitcoin—the most widely-used cryptocurrency—can be split in
half by any AS-level adversary using BGP hijacking.
In this paper, we present SABRE, a secure and scalable
Bitcoin relay network which relays blocks worldwide through
a set of connections that are resilient to routing attacks. SABRE
runs alongside the existing peer-to-peer network and is easily
deployable. As a critical system, SABRE design is highly resilient
and can efﬁciently handle high bandwidth loads, including Denial
of Service attacks.
We built SABRE around two key technical insights. First,
we leverage fundamental properties of
inter-domain routing
(BGP) policies to host relay nodes: (i) in networks that are
inherently protected against routing attacks; and (ii) on paths
that are economically-preferred by the majority of Bitcoin clients.
These properties are generic and can be used to protect other
Blockchain-based systems. Second, we leverage the fact that
relaying blocks is communication-heavy, not computation-heavy.
This enables us to ofﬂoad most of the relay operations to
programmable network hardware (using the P4 programming
language). Thanks to this hardware/software co-design, SABRE
nodes operate seamlessly under high load while mitigating the
effects of malicious clients.
We present a complete implementation of SABRE together
with an extensive evaluation. Our results demonstrate that
SABRE is effective at securing Bitcoin against routing attacks,
even with deployments of as few as 6 nodes.
I.
INTRODUCTION
Cryptocurrencies, and Bitcoin in particular, are vulnera-
ble to routing attacks in which network-level attackers (i.e.,
malicious Autonomous Systems or ASes) manipulate routing
(BGP) advertisements to divert their connections. Once on-
path, the AS-level attacker can disrupt the consensus algorithm
by partitioning the peer-to-peer network. Recent studies [17]
have shown that these attacks are practical and disruptive.
Speciﬁcally, any AS-level attacker can isolate ∼50% of the
Bitcoin mining power by hijacking less than 100 preﬁxes [17].
Such attacks can lead to signiﬁcant revenue loss for miners and
enable exploits such as double spending.
Network and Distributed Systems Security (NDSS) Symposium 2019
24-27 February 2019, San Diego, CA, USA
ISBN 1-891562-55-X
https://dx.doi.org/10.14722/ndss.2019.23252
www.ndss-symposium.org
Problem Protecting against such partitioning attacks is chal-
lenging. On the one hand,
local (and easily deployable)
countermeasures [17] fail to provide strong protection guar-
antees. These countermeasures include having Bitcoin clients
monitor their connections (e.g., for increased or abnormal
delays) or having them select their peers based on routing
information. On the other hand, Internet-wide countermeasures
are extremely hard to deploy. For example, systematically
hosting Bitcoin clients in /24 preﬁxes (to prevent more-
speciﬁc preﬁx attacks) requires the unlikely cooperation of all
Internet Service Providers hosting Bitcoin clients in addition
to a considerable increase to the size of the Internet routing
tables. Worse yet, even heavy protocol modiﬁcation such as
encrypting all Bitcoin trafﬁc would not be enough to guarantee
Bitcoin safety as AS-level attackers would still be able to
distinguish (and drop) Bitcoin trafﬁc using transport headers.
SABRE: A Secure Relay Network for Bitcoin In this paper,
we present SABRE, a secure relay network which runs along-
side the existing Bitcoin network and which can protect the
vast majority of the Bitcoin clients against routing attacks. Un-
like existing countermeasures, SABRE secures Bitcoin against
routing attacks in a way which: (i) provides strong security
guarantees to any connected client by enabling it to learn and
propagate blocks; (ii) is partially deployable; and (iii) provides
security beneﬁts early-on in the deployment, with as little as
two relay nodes. We built SABRE based on two key insights.
Insight #1: Hosting relays in inherently safe locations Our
ﬁrst insight is to host SABRE relay nodes in locations that: (i)
prevent attackers from diverting relay-to-relay connections, so
as to secure SABRE internal connectivity; and (ii) are attractive
(from a routing viewpoint) to many Bitcoin clients, so as to
protect client connections to the relay network. We do so
by leveraging a fundamental characteristic of BGP policies,
namely, that connections established between two ASes which
directly peer with each other and which have no customers
cannot be diverted by routing attacks. In SABRE, only such
ASes are considered for relay locations.
Using real routing data, we show that such safe locations
are plentiful in the current Internet with 2000 ASes being
eligible. These ASes include large cloud providers, content
delivery networks, and Internet eXchange Points which already
provide hosting services today and therefore have an incentive
to host SABRE nodes. We also show that SABRE deployments
with 6 nodes are already enough to protect 80% of the clients
from 96% of the AS-level adversaries (assuming worst case
scenario for SABRE).
Insight #2: Resiliency through software/hardware co-design
As a publicly-facing and transparent network, SABRE is an
obvious target for attackers who could, among others, craft
(D)DoS attacks against its publicly-known nodes to disrupt
it. To protect SABRE deployments against such attacks, our
second insight is to leverage the fact that most of the relay
operations are communication-heavy (propagating information
around) as opposed to being computation-heavy. In addition
to that, the content (block) that the relays need to propagate
each time is predictable and small in size. These properties
enable us to ofﬂoad most SABRE operations to hardware,
using programmable network devices. Thanks to this software-
hardware co-design, SABRE relay nodes can sustain up to Tbps
of load.
We show that our relay node design is practical by im-
plementing it in P4 and connecting it to an extended regular
Bitcoin client. P4 [19], [15] is a new programming language
which allows to specify the behavior of network data planes.
Besides being general enough to support SABRE, our analysis
indicates that SABRE memory requirements are within the
capabilities of today’s P4 switches.
Contributions Our main contributions are:
AS-level adversaries from partitioning it (Section III).
• The design of SABRE, a novel relay network that prevents
• An algorithm for positioning SABRE nodes in selected
ASes so as to minimize chances of a successful routing
attack against the Bitcoin system (Section IV).
• A novel software-hardware co-design for SABRE relay
nodes which enables them to operate seamlessly under
high load (Section V).
• A measurement study showing the effectiveness of
SABRE in protecting Bitcoin clients together with the
inability of existing relays networks to provide such
protection (Section VI).
• A complete implementation of SABRE, including the P4
code to run on programmable network switches [7] along
with an extended Bitcoin client that can connect to them
(Section VII).
• An analysis of the incentives for candidate ASes to host
SABRE nodes (Section VIII).
Although SABRE focuses on Bitcoin, its design principles
can be applied to protect other Blockchain systems from
routing attacks. We discuss the broader applicability of SABRE
in Section IX.
II. BACKGROUND
In this section, we present an overview of BGP and how it
can be misused (Section II-A), before introducing Bitcoin and
the concept of relays (Section II-B).
A. Border Gateway Protocol (BGP)
The Internet consists of over 60k individual networks,
known as Autonomous Systems (ASes), which rely on
BGP [48] to exchange information about how to reach 700k+
IP preﬁxes [10]. Each AS originates one or more IP preﬁxes
which are then propagated AS-by-AS.
2
(a) AS 2 hijacks 7/24
(b) AS 2 hijacks 7/8
Fig. 1: The effectiveness of a malicious AS in diverting trafﬁc
using BGP hijacks depends on its position and on whether she
originates existing preﬁxes or longer ones. Here, AS 2 attracts
trafﬁc from all ASes when originating 7/24 (a), but only from
AS 1 and 3 when originating 7/8 (b).
Policies BGP is a single-path and policy-based protocol. Each
AS selects one single best route to reach any IP preﬁx—
including self-owned ones—that it selectively exports to its
neighboring ASes (omitting the AS from which it learned the
route). These selection and exportation processes are governed
by the business relationships each AS maintains with its neigh-
bors. The most common business relationships are known as
customer-provider and peer-peer [27]. In a customer-provider
relationship, the customer AS pays the provider AS to get full
Internet connectivity. The provider provides such connectivity
by: (i) exporting to the customer all its best routes; and (ii)
exporting the preﬁxes advertised by the customer to all its
neighbors. In a peer-peer relationship, the two ASes connect
only to transfer trafﬁc between their respective customers
and internal users. They therefore only announce their own
preﬁxes and the routes learned from their customers to each
other. Regarding route selection, an AS prefers customer-
learned routes over peer-learned ones and peer-learned routes
over provider-learned ones. If multiple equally-preferred routes
exist (e.g., if two customers announce a route to the same
preﬁx), an AS favors the route with the minimum AS path
length towards the preﬁx before relying on some arbitrary tie-
break [48].
Hijack BGP routers do not validate route advertisements. Any
malicious AS can create fake advertisements, known as BGP
hijacks, for any preﬁx, and advertise them to its neighbors.
Hijacks constitute an effective way for an AS to redirect trafﬁc
directed to given destinations.
We distinguish two types of hijacks according to whether
the fake announcement contains: (i) a more-speciﬁc (longer)
preﬁx than a legitimate one; or (ii) an existing (equally
speciﬁc) preﬁx. In the former case,
the hijacker AS will
attract all the trafﬁc addressed to the more-speciﬁc preﬁx,
independently from its position in the Internet topology. This is
because routers forward trafﬁc according to the most-speciﬁc
preﬁx matching it. In the latter case, the rogue advertisement
competes with the legitimate one. The amount of diverted
trafﬁc then depends on the relative positions of the attacker
and the victim in the Internet topology.
AS1AS2AS3AS4AS5AS6AS77.0.0.0/87.0.0.0/24hijacked ASlegitimate origincustomerproviderpeerpeerattackerAS1AS2AS3AS4AS5AS6AS7attackercustomerproviderpeerpeerlegitimate origin7.0.0.0/87.0.0.0/8hijacked ASFig. 1a illustrates an example of a more-speciﬁc attack in
which AS 2 advertises 7/24, a more-speciﬁc preﬁx of 7/8
which is advertised by AS 7. In doing so, AS 2 effectively
redirects the corresponding trafﬁc from all ASes except AS 7.1
In contrast, Fig. 1b illustrates the effect of AS 2 advertising
7/8 alongside AS 7. AS 2 only manages to attract the trafﬁc
from AS 1 and AS 3. Indeed, AS 1 learns two routes to 7/8
from its two providers (AS 2 and 5) and prefers the illegitimate
one from AS 2 because it is shorter. Similarly, AS 3 prefers
to reach 7/8 using the customer route learned via AS 2 over
the legitimate peer route learned via AS 5.
More-speciﬁc hijacks are more powerful but come with
drawbacks. First, such attacks are more visible since the
hijacked preﬁxes propagate Internet-wide. In contrast, existing
preﬁxes propagate in smaller regions [30]. For instance, in
Fig. 1b, while AS 4 and AS 5 learn about the hijacked preﬁx,
they do not propagate it further as they prefer the legitimate
announcement. Second, network operators often ﬁlter BGP
advertisements whose preﬁx lengths are longer than /24 [36].
This ﬁltering effectively prevents more-speciﬁc attacks against
existing /24s.
By default, hijacking a preﬁx creates a black hole at the
attacker’s location. However, the attacker can turn a hijack into
an interception attack and make herself a man-in-the-middle
(MITM) by preserving at least one path to the legitimate ori-
gin [47], [31]. For instance, in Fig. 1a, AS 2 could selectively
announce 7/8 to AS 1 so as to keep a working path to the
legitimate origin via AS 3. Observe that AS 2 cannot achieve
the opposite interception attack, i.e., diverting the trafﬁc from
AS 3 and redirecting it to AS 1, as it does not learn a path to
the legitimate origin via AS 1.
Relay networks are overlay networks maintained by a single
administrative entity which run alongside Bitcoin’s peer-to-
peer network. Relay networks aim at assisting the Bitcoin
network, not replacing it. The three most well-known relays
are: Falcon [3], FIBRE [2], and the Fast Relay Network
(FRN) [5]. These relay networks aim at speeding up block
propagation by relying on a system of high-speed relay nodes
and/or on advanced routing techniques. By connecting to these
relays, a Bitcoin client can alleviate the effects of bad network
performance that may otherwise affect the time needed to
acquire a new block.
III. SABRE: A SECURE RELAY NETWORK FOR BITCOIN
SABRE is a transparent relay network protecting Bitcoin
clients from routing attacks by providing them with an extra
secure channel for learning and propagating the latest mined
block. By transparent, we mean that the IP addresses of the
SABRE relay nodes will be publicly known (e.g. via a website)
and that every Bitcoin client is welcome to connect to them.
To beneﬁt from SABRE, a Bitcoin client simply needs to
successfully establish a connection to at least one relay node.
SABRE relays contribute to the block propagation by receiving,
validating and transmitting new blocks to all connected clients.
To achieve its goals, the SABRE network must remain
connected at all times, even under arbitrary BGP advertise-
ments or extremely high load (Section III-A). SABRE leverages
two key insights to guarantee ceaseless operation: (i) smart