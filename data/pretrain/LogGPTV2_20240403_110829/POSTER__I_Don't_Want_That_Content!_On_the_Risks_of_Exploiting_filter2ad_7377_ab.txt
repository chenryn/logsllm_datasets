### Content Storage in the Bitcoin Blockchain: An Analysis

#### Introduction
The Bitcoin blockchain has been used not only for financial transactions but also as a means to store various types of data. This practice, which deviates from standard transactional use, began to spread in mid-2011, approximately six months after Bitcoin gained significant traction [5]. The first notable instance of content storage was a timestamped message embedded in Bitcoin's genesis block. Subsequently, P2PKH (Pay-to-PubKey-Hash) transactions were used to add more content. For example, on May 13, 2011, the Bitcoin logo was stored in two transactions at a cost of 0.02 BTC, then worth $0.16 (now $10.30).

Our dataset includes 7,561 P2PK(H) and multisig transactions containing printable characters, with a total text data size of 1.86 MB. In future work, we plan to extend our analysis to include binary data, such as that stored by services like Apertus, as this type of data is expected to have a more significant impact on the blockchain.

#### Nulldata Transactions
In June 2013, the reference client introduced nulldata transactions as a standard method for storing data on the blockchain. This change aimed to reduce the overhead associated with data-holding transactions, as Bitcoin nodes actively track unspent transactions. Since their introduction, nulldata transactions have experienced exponential growth, with a total of 936,174 nulldata transactions recorded by the end of July 2016. This growth can be attributed, in part, to services that link transactions to real-world assets via the Open Asset protocol. Approximately 9.8% of all non-empty nulldata transactions are linked to such services.

#### Coinbase Transactions
Coinbase transactions, which are the first transactions in each block, started to include additional data in the form of spiritual verses from August 5, 2011. The first advertisement was posted on August 25, 2011. Today, coinbase transactions often advertise the mining pool that created the respective block. From January 2012, miners unofficially voted on supporting Pay-to-Script transactions using coinbase transactions.

#### Non-Standard Transactions
We identified a total of 288,716 non-standard transactions in the blockchain. However, 288,561 (99.9%) of these transactions are nulldata transactions with empty payloads. Only 132 non-standard transactions do not use a standard script template. One such transaction from August 2013 encoded a 1.45 KB patch for the reference client, submitted by Satoshi Nakamoto in 2010.

#### Classification of Content
To date, the Bitcoin community has focused on identifying isolated examples of data stored on the blockchain [11]. Our aim is to quantify the properties of this content and present preliminary results. We analyzed transactions that can be used to add larger amounts of data to the blockchain, excluding coinbase transactions. A total of 940,354 (0.64% of the total) transactions matched this category, with 99.6% being nulldata transactions, of which 9.8% use the Open Assets protocol.

A random manual inspection revealed a variety of content, including attempted double spends, short text messages, notary messages, and a large set of nulldata transactions that were not immediately attributable to a specific service. Additionally, we found potentially critical and illegal content, such as code segments, a leaked firmware private key, and an illegal prime number encoding a decryption algorithm for DVDs. We also discovered 90 encrypted files and excerpts from the Tor Hidden Wiki, containing links to indecent services (e.g., illegal pornography). Every honest user unknowingly stores a copy of this content, potentially exposing them to legal risks.

#### URLs and Tor Links
Motivated by these findings, we searched our dataset for URLs indicated by the keyword "http" and links to Tor hidden services indicated by the ".onion" suffix. We found 11,862 content-holding transactions containing URLs, accounting for 1.3% of the considered dataset. The majority (11,659) used nulldata, 193 used P2PK(H), 8 used multisig, and 2 used non-standard storage methods. Messages from Open-Asset-based services account for 3/4 of the links stored via nulldata transactions. The two non-standard transactions contain a JavaScript cross-site-scripting detector. Only the two transactions holding the Tor Hidden Wiki page dump contain links to content that must be considered illegal or highly questionable based on their descriptions. These two transactions contain almost 400 links, which could render downloading the blockchain illegal in certain jurisdictions [8], especially since images and PDF files have already been stored directly on the blockchain [11].

#### Discussion
Our analysis shows that ≥0.80% of the transactions in Bitcoin's blockchain contain arbitrary content. While censorship-resistant content storage may be desirable in some cases, this (ab)use puts Bitcoin at risk as a currency. The harm stems from the fact that users must locally replicate the blockchain, and undesired content can never be removed. While most of the identified content appears to be included by honest services, the blockchain already contains problematic content such as illegal code or links to illegal material. Illegal content could be deliberately injected to make using the blockchain (and thus Bitcoin) illegal in certain jurisdictions [8], affecting even honest users. Therefore, a deeper understanding of the embedded content and methods to prevent such content from being uploaded is necessary.

Future work will involve gaining a deeper understanding of how content is injected and broadly analyzing blockchain content. This includes the content we have already found and searching for additional content. Most importantly, we aim to address the more complex problem of identifying and characterizing binary data, which is known to exist in the blockchain. Furthermore, we plan to extend our analysis to other public blockchains and investigate the economic impacts of storing content on the blockchains of cryptographic currencies. Finally, we seek to develop countermeasures against the uncontrolled inclusion of data into these blockchains.

#### Acknowledgments
This work was funded by the German Federal Ministry of Education and Research (BMBF) under funding reference number 16KIS0443. The responsibility for the content of this publication lies with the authors.

#### References
[1] M. Ali, J. Nelson, R. Shea, and M. J. Freedman. Blockstack: A Global Naming and Storage System Secured by Blockchains. In USENIX ATC, 2016.
[2] Bitcoin Wiki. Illegal content in the block chain. https://en.bitcoin.it/wiki/Weaknesses.
[3] Bitcoin Wiki. Transaction. https://en.bitcoin.it/wiki/Transaction.
[4] Bitnodes. Global Bitcoin Nodes Distribution. https://bitnodes.21.co.
[5] Blockchain.info. Bitcoin Charts. https://blockchain.info/charts.
[6] CoinMarketCap. Crypto-Currency Market Capitalizations. https://coinmarketcap.com.
[7] I. Eyal and E. G. Sirer. Majority is not enough: Bitcoin mining is vulnerable. In FC, 2014.
[8] E. McReynolds, A. Lerner, W. Scott, F. Roesner, and T. Kohno. Cryptographic Currencies from a Tech-Policy Perspective: Policy Issues and Technical Directions. In Financial Cryptography and Data Security. 2015.
[9] S. Nakamoto. Bitcoin: A peer-to-peer electronic cash system, 2008.
[10] Pseudonymous “Hyena”. Bitcointalk Forum. https://bitcointalk.org/index.php?topic=524877.msg9173767.
[11] K. Shirriﬀ. Hidden surprises in the Bitcoin blockchain and how they are stored: Nelson Mandela, Wikileaks, photos, and Python software. http://www.righto.com/2014/02/ascii-bernanke-wikileaks-photographs.html.
[12] A. Taaki. Bitcoin BIP 1. https://github.com/bitcoin/bips/blob/master/bip-0001.mediawiki, 2011.
[13] G. Wood. Ethereum: A Secure Decentralised Generalised Transaction Ledger. Ethereum Project Yellow Paper, 2016.
[14] J. H. Ziegeldorf, F. Grossmann, M. Henze, N. Inden, and K. Wehrle. Coinparty: Secure multi-party mixing of bitcoins. In ACM CODASPY, 2015.
[15] J. H. Ziegeldorf, R. Matzutt, M. Henze, F. Grossmann, and K. Wehrle. Secure and anonymous decentralized Bitcoin mixing. Future Generation Computer Systems, 2016.