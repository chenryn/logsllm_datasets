---
author: Konstantin Ryabitsev
category: 技术
comments_data: []
count:
  commentnum: 0
  favtimes: 2
  likes: 0
  sharetimes: 0
  viewnum: 9835
date: '2018-04-08 09:19:00'
editorchoice: false
excerpt: 自由软件社区长期依赖于 PGP 确保它生产的软件产品的真实性和完整性。
fromurl: https://www.linux.com/blog/learn/2018/2/protecting-code-integrity-pgp-part-1-basic-pgp-concepts-and-tools
id: 9524
islctt: true
largepic: /data/attachment/album/201804/08/002106h7kk6uchrkbobkk9.jpg
permalink: /article-9524-1.html
pic: /data/attachment/album/201804/08/002106h7kk6uchrkbobkk9.jpg.thumb.jpg
related:
- displayorder: 0
  raid: 9529
reviewer: ''
selector: ''
summary: 自由软件社区长期依赖于 PGP 确保它生产的软件产品的真实性和完整性。
tags:
- PGP
- gpg
thumb: false
title: 用 PGP 保护代码完整性（一）： 基本概念和工具
titlepic: true
translator: kimii
updated: '2018-04-08 09:19:00'
---
![](/data/attachment/album/201804/08/002106h7kk6uchrkbobkk9.jpg)
在本系列文章中，我们将深度探讨如何使用 PGP 确保软件完整性。这些文章将为工作于自由软件项目的开发者提供实用指南，并且将包含以下主题：
1. PGP 基础和最佳实践
2. 如何用 Git 使用 PGP
3. 如何保护你的开发者账户
我们使用与“Freedom”含义相同的词项 “Free”，但这个系列中列出的指南也可以被任何其它类型的依赖于分布式团队开发者贡献的软件中。如果你编写进入公共源仓库的代码，你可以从了解和遵循这篇指南中受益。
### 结构
每节分为两个部分：
* 适用于你项目需求的清单
* 形式自由的考虑事项的列表，解释这些决定取决于什么，并伴随着配置指令
#### 清单优先级
每个清单中各项包含着优先级，用来帮助指导你的决定：
* （必要）该项一定要排在考虑事项列表的前面。如果没有这样做，它们将给提交到开源项目中的代码带来高风险。
* （推荐）包含该项将提升整体安全性，但会影响你与工作环境的交互方式，并且可能需要学习新的习惯或者放弃旧的习惯。
记住，这些只是指导。如果你感到这些优先级不能反映你项目提交的安全，你应该根据自己的需要调整它们。
### PGP 基本概念和工具
#### 清单
1. 理解 PGP 在自由软件开发中的作用 （必要）
2. 理解 公钥密码学   Public Key Cryptography 的基础知识 （必要）
3. 理解 PGP 加密和签名的不同 （必要）
4. 理解 PGP  密钥身份   key identities  （必要）
5. 理解 PGP  密钥有效性   key validity  （必要）
6. 安装 GnuPG 工具（版本 2.x） （必要）
#### 考虑事项
自由软件社区长期依赖于 PGP 确保它生产的软件产品的真实性和完整性。你可能没有注意到，但无论你是一个 Linux 、Mac 和 Windowas 用户，你都曾依赖 PGP 来确保你电脑环境的完整性：
* Linux 发行版依赖 PGP 来确保当二进制或者原代码包从被生产出来到被终端用户安装之间没被更改过
* 自由软件项目通常会伴随发行软件的存档提供分离的 PGP 签名，使得下游的项目可以在把下载的版本集成到自己的分布式下载之前，验证下载版本的完整性。
* 自由软件项目通常依赖代码本身的 PGP 签名来跟踪起源，并验证项目开发者提交的代码的完整性
这与工作于专有平台的程序员使用的开发者证书或代码签名机制非常相似。实际上，这两种技术背后的核心概念非常相似 —— 尽管它们在实现的技术层面和它们委托信任方式的大多不同。PGP 不依赖于集中式认证机构，而是让每个用户为每个证书赋予自己的信任。
我们的目标是使你的项目通过使用 PGP 来进行代码起源和完整性追踪，遵循最佳实践并遵守基本的安全预防措施。
#### 极其基本的 PGP 操作概括
你不需要知道 PGP 如何工作的具体细节 —— 理解核心概念足以成功地达到我们的目的。PGP 依赖于公钥密码学来将明文转换为密文。这个过程需要两种不同的密钥：
* 公钥，被所有人知道
* 私钥，只被拥有者知道
##### 加密
对加密来说，PGP 使用拥有者的公钥创造一条只能通过拥有者私钥解密的消息：
1. 发送者生成一个随机的加密密钥（“会话密钥”）
2. 发送者使用该会话密钥（使用对称算法）加密内容
3. 发送者使用接收者的 PGP 公钥加密会话密钥
4. 发送者向接收者发送加密后的内容和加密后的会话密钥
要解密：
1. 接收者使用他们的 PGP 私钥解密会话密钥
2. 接收者使用会话密钥解密消息的内容
##### 签名
为了创建签名，PGP 私钥或公钥会以相反的方式使用：
1. 签名者生成内容的校检和哈希
2. 签名者使用自己的 PGP 私钥来加密该校检和
3. 签名者伴随内容提供加密后的校检和
要验证签名：
1. 验证者生成自己的内容校检和哈希
2. 验证者使用签名者的 PGP 公钥来解密提供的校检和
3. 如果校检和匹配，就验证了内容的完整性
##### 结合使用