To add a manager to this swarm, run the following command:
    docker swarm join --token \
    SWMTKN-1-1dmtwu...r17stb-2axi5...8p7glz \
    172.31.5.251:2377 
```
 `输出为您提供了在要作为管理器加入的节点上运行所需的确切命令。在您的实验中，加入令牌和 IP 地址会有所不同。
连接命令的格式是:
*   `docker swarm join --token  :`
令牌的格式为:
*   `SWMTKN-1--`
复制命令并在“mgr2”上运行:
```
$ docker swarm join --token SWMTKN-1-1dmtwu...r17stb-2axi5...8p7glz \
> 172.31.5.251:2377
This node joined a swarm as a manager. 
```
 `**mgr2** 作为额外的管理者加入了群体。在生产集群中，您应该始终运行 3 个或 5 个管理器来实现高可用性。
通过在两个管理器中的任一个上运行`docker node ls`来验证 **mgr2** 是否已成功添加。
```
$ docker node ls
ID                HOSTNAME   STATUS    AVAILABILITY    MANAGER STATUS
7xamk...ge662z    mgr1       Ready     Active          Leader
i0ue4...zcjm7f *  mgr2       Ready     Active          Reachable 
```
 `输出显示 **mgr1** 和 **mgr2** 都是群体的一部分，都是管理者。更新后的配置如图 15.6 所示。
![Figure 15.8](img/figure15-6.png)
Figure 15.8
两个经理可能是最糟糕的数字。然而，我们只是在演示实验室里瞎折腾，而不是构建一个业务关键的生产环境；-)
添加群体工作者是一个类似的两步过程。第一步提取加入令牌，第二步是在想要作为工作者加入的节点上运行`docker swarm join`命令。
在任一管理器上运行以下命令，以公开工作者加入令牌。
```
$ docker swarm join-token worker
To add a worker to this swarm, run the following command:
    docker swarm join --token \
    SWMTKN-1-1dmtw...17stb-ehp8g...w738q \
    172.31.5.251:2377 
```
 `同样，您将获得在想要作为工作人员加入的节点上运行所需的确切命令。在您的实验中，加入令牌和 IP 地址会有所不同。
复制命令并在 **wrk1** 上运行，如图所示:
```
$ docker swarm join --token SWMTKN-1-1dmtw...17stb-ehp8g...w738q \
> 172.31.5.251:2377
This node joined a swarm as a worker. 
```
 `从任一群管理器运行另一个`docker node ls`命令。
```
$ docker node ls
ID                 HOSTNAME     STATUS     AVAILABILITY   MANAGER STATUS
7xamk...ge662z *   mgr1         Ready      Active         Leader
ailrd...ofzv1u     wrk1         Ready      Active
i0ue4...zcjm7f     mgr2         Ready      Active         Reachable 
```
 `你现在有一群两个经理和一个工人。管理器配置为高可用性，集群存储复制到两者。最终配置如图 15.7 所示。
![Figure 15.7](img/figure15-7.png)
Figure 15.7
##### 从幕后看 Swarm 安全
现在，我们已经构建了一个安全的 Swarm，让我们花一分钟时间来看看一些涉及的安全技术。
###### 群加入令牌
将新经理和员工加入现有群体所需的唯一东西是相关的加入令牌。因此，保证您的加入令牌的安全是至关重要的。不要在公开的 GitHub 转贴，甚至是不受限制的内部源代码转贴上发布。
每个群维护两个不同的连接标记:
*   一个是加入新经理
*   一个是加入新员工
了解 Swarm 加入标记的格式是值得的。每个连接标记由 4 个不同的字段组成，用破折号(`-`)分隔:
`PREFIX - VERSION - SWARM ID - TOKEN`
前缀总是`SWMTKN`。这允许你对它进行模式匹配，防止人们不小心公开发布它。`VERSION`字段指示群的版本。`Swarm ID`字段是蜂群证书的散列。`TOKEN`字段是决定其能否作为管理者或工作者加入节点的部分。
如下图所示，给定 Swarm 的管理器和工作者加入令牌除了最后的`TOKEN`字段之外是相同的。
*   经理:`SWMTKN-1-1dmtwusdc...r17stb-2axi53zjbs45lqxykaw8p7glz`
*   工人:`SWMTKN-1-1dmtwusdc...r17stb-ehp8gltji64jbl45zl6hw738q`
如果您怀疑您的任何一个加入令牌已经被破坏，您可以用一个命令撤销它们并发布新的令牌。以下示例撤销现有的*管理器*加入令牌并发布新令牌。
```
$ docker swarm join-token --rotate manager
Successfully rotated manager join token.
To add a manager to this swarm, run the following command:
    docker swarm join --token \
     SWMTKN-1-1dmtwu...r17stb-1i7txlh6k3hb921z3yjtcjrc7 \
     172.31.5.251:2377 
```
 `现有的管理器不需要更新，但是，您需要使用新的令牌来添加新的管理器。
请注意，新旧连接令牌之间的唯一区别是最后一个字段。群标识的散列保持不变。
加入令牌存储在默认加密的集群存储中。
###### TLS 和相互认证
每一个加入群体的经理和工人都会被颁发客户证书。该证书用于相互认证。它标识节点、它所属的群以及节点在群中扮演的角色(管理者或工作者)。
您可以使用以下命令在 Linux 节点上检查节点的客户端证书。
```
$ sudo openssl x509 \
  -in /var/lib/docker/swarm/certificates/swarm-node.crt \
  -text
  Certificate:
      Data:
          Version: 3 (0x2)
          Serial Number:
              80:2c:a7:b1:28...a8:af:89:a1:2a:51:89
      Signature Algorithm: ecdsa-with-SHA256
          Issuer: CN = swarm-ca
          Validity
              Not Before: May  5 10:31:00 2020 GMT
              Not After : Aug  3 11:31:00 2020 GMT
          Subject: O=mfbkgjm2tlametbnfqt2zid8x, OU=swarm-manager,
          CN=7xamk8w3hz9q5kgr7xyge662z
          Subject Public Key Info:
```
 `输出中的`Subject`数据使用标准的`O`、`OU`和`CN`字段来指定群标识、节点角色和节点标识。
*   组织(`O`)字段存储群标识
*   组织单位(`OU`)字段存储节点在群中的角色
*   规范名称(`CN`)字段存储节点的加密标识。
这如图 15.8 所示。
![Figure 15.8](img/figure15-8.png)
Figure 15.8
也可以在`Validity`部分看到证书轮换周期。
您可以将这些值与`docker system info`命令输出中显示的相应值进行匹配。
```
$ docker system info
Swarm: active
 NodeID: 7xamk8w3hz9q5kgr7xyge662z    # Relates to the CN field
 Is Manager: true                     # Relates to the OU field
 ClusterID: mfbkgjm2tlametbnfqt2zid8x # Relates to the O field
 ...
 ...
 CA Configuration:
  Expiry Duration: 3 months           # Relates to Validity field
  Force Rotate: 0
 Root Rotation In Progress: false
```
 `###### 配置一些证书颁发机构设置
您可以使用`docker swarm update`命令为 Swarm 配置证书循环周期。以下示例将证书轮换周期更改为 30 天。
```