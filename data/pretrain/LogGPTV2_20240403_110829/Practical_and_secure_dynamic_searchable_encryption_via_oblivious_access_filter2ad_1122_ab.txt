### 优化后的文本

#### 摘要
本文介绍了一种名为DOD-DSSE（Double-Oblivious Dynamic Searchable Symmetric Encryption）的方案，该方案通过在两个非共谋服务器之间使用“获取-重新加密-交换”策略，实现了高效的搜索和更新操作，同时防止了数据访问模式的泄露。与现有方案相比，DOD-DSSE在性能和安全性方面具有显著优势。

#### 主要思想
现有的DSSE（Dynamic Searchable Symmetric Encryption）方案依赖于查询地址令牌与其对应加密结果之间的确定性关联。这种确定性关系虽然允许一致且快速的搜索和更新操作，但会泄露数据结构访问模式。DOD-DSSE通过在两个非共谋服务器之间使用随机化的地址令牌-数据对来解决这个问题。

#### 系统模型
系统模型包括一个客户端和两个服务器 \( S_0 \) 和 \( S_1 \)，每个服务器存储同一文件集合的加密数据结构实例。

**假设：**
1. 服务器通过私有通道与客户端通信。
2. \( S_0 \) 和 \( S_1 \) 是诚实但好奇的，即它们对信息感兴趣但遵守协议，不注入恶意输入。
3. \( S_0 \) 和 \( S_1 \) 不共谋。

#### 安全模型
在DOD-DSSE中，长度为 \( q \) 的数据请求序列 \( \rightarrow \sigma_0 \) 和 \( \rightarrow \sigma_1 \) 分别由 \( S_0 \) 和 \( S_1 \) 独立观察。我们假设加密数据结构可以存储最多 \( N \) 个不同的数据项，每个项对应一个唯一的地址-数据对 \( (u, \text{data}) \)。DOD-DSSE的安全性依赖于任何访问操作在两个服务器之间是不可链接的。

**定义3：** 访问操作的不可链接性是指在服务器 \( S_b \) 观察到的访问操作 \( op(b)_i \) 和 \( op(b)_j \) 在所有 \( 1 \leq i, j \leq q \) 时是不可链接的。

#### DOD-DSSE的操作流程
1. **创建加密数据结构：** 客户端创建两个加密数据结构，每个包含所有可能的搜索和更新查询的地址-数据对，并分别发送给两个非共谋服务器 \( S_0 \) 和 \( S_1 \)。
2. **发送查询：** 客户端向每个服务器发送一个真实的查询和三个随机选择的虚假查询（图2，步骤(1)）。
3. **接收并解密数据：** 每个服务器返回相应的地址-数据对，客户端解密这些数据以获取结果（步骤(2)），然后重新加密（步骤(3)）。
4. **创建新的地址-数据对：** 客户端为每个执行的查询分配重新加密的数据到一个随机地址（步骤(4)）。
5. **交换并写回：** 客户端交换这些地址-数据对，并将它们写回到另一个服务器（步骤(5)）。这意味着从 \( S_0 \) 读取的查询的新地址-数据对将被写入 \( S_1 \)，反之亦然。

#### 性能和安全性
- **性能：** DOD-DSSE在处理大型数据结构时表现出色，只需约一秒即可完成访问操作（见第5节的详细比较）。
- **安全性：** DOD-DSSE通过最小的信息泄露（即一次性的、不可链接的查询）防止了搜索和更新模式的泄露，并阻止了统计攻击。此外，DOD-DSSE在实际网络设置中进行了严格的性能评估，并提供了详细的实现代码供公众使用。

#### 限制
- **假设：** 两个服务器是非共谋的。
- **信息泄露：** 每个服务器只能观察到一次性的、不可链接的查询。

尽管存在这些限制，DOD-DSSE在安全性和性能方面的表现使其成为隐私关键云应用的理想选择。

#### 预备知识
- **符号：** 给定一个比特 \( b \)，\( \neg b \) 表示其补码。\( || \) 表示连接操作。\( x \leftarrow S \) 表示变量 \( x \) 从集合 \( S \) 中随机均匀选择。\( S \setminus \{x\} \) 表示从 \( S \) 中移除 \( x \)，而 \( |S| \) 表示集合 \( S \) 的基数。\( \{x_i\}_{i=1}^l \) 表示 \( (x_1, \ldots, x_l) \)。\( \kappa \) 是一个安全参数。\( E = (Enc, Dec, Gen) \) 是一个IND-CPA安全的对称加密方案，包括三个算法：密钥生成 \( k \leftarrow E.Gen(1^\kappa) \)；使用密钥 \( k \) 对消息 \( M \) 进行加密 \( c \leftarrow E.Enck(M) \)；解密 \( M \leftarrow E.Dec_k(c) \)。我们用 \( c \leftarrow E.Enck(M, a) \) 和 \( M \leftarrow E.Dec_k(c, a) \) 表示带有计数器 \( a \) 的IND-CPA加密和解密。\( H: \{0, 1\}^* \to \{0, 1\}^{|H|} \) 是一个理想的密码散列函数，其中 \( |H| \) 是散列输出的长度。\( \tau \leftarrow KDF(x) \) 是一个密钥派生函数，它接受任意字符串 \( x \in \{0, 1\}^* \) 并输出一个密钥 \( \tau \)。\( f \) 和 \( w \) 分别表示文件和关键词。\( m \) 和 \( n \) 分别表示数据集中文件和关键词的最大数量。如果 \( I \) 是一个矩阵，则 \( I_u \) 表示索引为 \( u \) 的行（即 \( I_u = I[u, *] \)）。我们也滥用此符号来表示索引为 \( u \) 的整个列（即 \( I_u = I[*, u] \)）。这简化了我们的算法和安全分析的表述。\( I_u[j] \) 表示访问 \( I_u \) 的第 \( j \) 个元素。\( read(u, data) \)（或 \( data \leftarrow Read(u) \)）和 \( write(u, data) \) 分别是在地址 \( u \) 上进行读取和写入操作，而 \( u \leftarrow pos(data) \) 返回数据所在的地址 \( u \)。

- **安全定义：** DSSE的安全概念是针对Chosen-Keyword Attacks (CKA2) 的动态自适应安全 [13, 12, 21, 26]，它通过泄漏函数捕捉搜索和更新操作中的信息泄漏（参见 [12, 21, 26] 获取详细信息）。所有现有的DSSE方案（例如 [10, 5, 4, 21, 17, 26]）都具有动态CKA2安全性，但会泄露数据结构访问模式 [23]，定义如下：

  **定义1：** 数据结构访问模式是一个长度为 \( q \) 的数据请求序列 \( \rightarrow \sigma_b = \{op(b)_i\}_{i=1}^q \)，在服务器 \( S_b \) 上进行搜索和更新操作期间，其中 \( op(b)_i \) 可以是 \( read(u(b)_i, data(b)_i) \) 或 \( write(u(b)_i, data(b)_i) \)，\( u(b)_i \) 是 \( S_b \) 上要读取或写入的地址标识符，而 \( data(b)_i \) 是位于 \( u(b)_i \) 处的数据。

  - **搜索模式** 表示是否之前已经搜索过相同的关键词。给定时间 \( t \) 时对 \( w \) 的查询，搜索模式是一个长度为 \( t \) 的二进制向量，在位置 \( i \) 处为1表示第 \( i \) 次搜索是针对 \( w \)，否则为0。
  - **更新模式** 表示在更新操作中泄露的信息，其中级别1（如 [26] 所定义）泄露最少的信息，类似于搜索模式。详情请参阅 [26]。

  **定义2：** 设 \( AP_b(\rightarrow \sigma_b) \) 表示在给定数据请求序列 \( \rightarrow \sigma_b \) 时，服务器 \( S_b \) 的（可能是随机的）访问模式。ORAM方案是安全的，如果对于任意两个相同长度的 \( \rightarrow \sigma_b \) 和 \( \rightarrow \sigma_b' \)，它们的访问模式 \( AP_b(\rightarrow \sigma_b) \) 和 \( AP_b(\rightarrow \sigma_b') \) 对任何人来说都是计算上不可区分的，除了客户端。

#### 结论
DOD-DSSE通过在两个非共谋服务器之间使用随机化的地址令牌-数据对，实现了高效的搜索和更新操作，同时防止了数据访问模式的泄露。其性能和安全性使其成为隐私关键云应用的理想选择。