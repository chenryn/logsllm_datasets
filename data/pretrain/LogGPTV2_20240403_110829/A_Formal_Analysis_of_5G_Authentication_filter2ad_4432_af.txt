### Computer and Communications Security. ACM.

#### References

1. **Karthikeyan Bhargavan, Bruno Blanchet, and Nadim Kobeissi (2017).** *Verified Models and Reference Implementations for the TLS 1.3 Standard Candidate.* In *2017 IEEE Symposium on Security and Privacy (SP).* pp. 483–502. [DOI: 10.1109/SP.2017.26](https://doi.org/10.1109/SP.2017.26)

2. **Bruno Blanchet (2016).** *Modeling and Verifying Security Protocols with the Applied Pi Calculus and ProVerif.* *Foundations and Trends in Privacy and Security* 1(1–2), Oct. 2016, pp. 1–135.

3. **Ravishankar Borgaonkar, Lucca Hirschi, Shinjo Park, Altaf Shaik, Andrew Martin, and Jean-Pierre Seifert (2017).** *New Adventures in Spying 3G & 4G Users: Locate, Track, Monitor.* Briefing at BlackHat USA 2017. [Available at: BlackHat USA 2017](https://www.blackhat.com/us-17/briefings.html#new-adventures-in-spying-3g-and-4g-users-locate-track-and-monitor)

4. **Colin Boyd and Wenbo Mao (1993).** *On a Limitation of BAN Logic.* In *Workshop on the Theory and Application of Cryptographic Techniques.* Springer, pp. 240–247.

5. **Vincent Cheval, Steve Kremer, and Itsaka Rakotonirina (2018).** *DEEPSEC: Deciding Equivalence Properties in Security Protocols - Theory and Practice.* In *Proceedings of the 39th IEEE Symposium on Security and Privacy (S&P’18).* IEEE Computer Society Press, San Francisco, CA, USA, pp. 529–546.

6. **Katriel Cohn-Gordon, Cas Cremers, and Luke Garratt (2016).** *On Post-Compromise Security.* In *Computer Security Foundations Symposium (CSF), 2016 IEEE 29th.* IEEE, pp. 164–178.

7. **Cas Cremers, Marko Horvat, Jonathan Hoyland, Sam Scott, and Thyla van der Merwe (2017).** *A Comprehensive Symbolic Analysis of TLS 1.3.* In *ACM CCS 2017: Proceedings of the 24th ACM Conference on Computer and Communications Security, Dallas, USA, 2017.* pp. 1773–1788. [DOI: 10.1145/3133956.3134063](https://doi.org/10.1145/3133956.3134063)

8. **Cas Cremers, Marko Horvat, Sam Scott, and Thyla van der Merwe (2016).** *Automated Analysis and Verification of TLS 1.3: 0-RTT, Resumption and Delayed Authentication.* In *IEEE Symposium on Security and Privacy.*

9. **Martin Dehnel-Wild and Cas Cremers (2018).** *Authentication Vulnerability in the Most Recent 5G AKA Drafts.* [Available at: Tamarin Project](http://www.cs.ox.ac.uk/people/cas.cremers/tamarin/5G/)

10. **Danny Dolev and Andrew C. Yao (1981).** *On the Security of Public Key Protocols.* *Information Theory, IEEE Transactions on* 29(2), March 1981, pp. 198–208. [DOI: 10.1109/TIT.1983.1056650](https://doi.org/10.1109/TIT.1983.1056650)

11. **Jannik Dreier, Lucca Hirschi, Saša Radomirović, and Ralf Sasse (2018).** *Automated Unbounded Verification of Stateful Cryptographic Protocols with Exclusive OR.* In *31st IEEE Computer Security Foundations Symposium, CSF 2018, Oxford, United Kingdom, July 9-12, 2018.* IEEE Computer Society, pp. 359–373. [DOI: 10.1109/CSF.2018.00033](https://doi.org/10.1109/CSF.2018.00033)

12. **Pierre-Alain Fouque, Cristina Onete, and Benjamin Richard (2016).** *Achieving Better Privacy for the 3GPP AKA Protocol.* *Proceedings on Privacy Enhancing Technologies* 2016(4), pp. 255–275.

13. **Nico Golde, Kévin Redon, and Jean-Pierre Seifert (2013).** *Let Me Answer That for You: Exploiting Broadcast Information in Cellular Networks.* In *22nd USENIX Conference on Security.* USENIX Association.

14. **GSMA (2017).** *Global Mobile Trends 2017.* [Accessed: 2018-05-06](https://www.gsma.com/globalmobiletrends/)

15. **Syed Rafiul Hussain, Omar Chowdhury, Shagufta Mehnaz, and Elisa Bertino (2018).** *LTEInspector: A Systematic Approach for Adversarial Testing of 4G LTE.* In *Network and Distributed Systems Security (NDSS) Symposium 2018.*

16. **Nadim Kobeissi, Karthikeyan Bhargavan, and Bruno Blanchet (2017).** *Automated Verification for Secure Messaging Protocols and Their Implementations: A Symbolic and Computational Approach.* In *IEEE European Symposium on Security and Privacy (EuroS&P).*

17. **Robert Künnemann and Graham Steel (2013).** *YubiSecure? Formal Security Analysis Results for the Yubikey and YubiHSM.* In *Security and Trust Management,* edited by Audun Jøsang, Pierangela Samarati, and Marinella Petrocchi. Springer Berlin Heidelberg, pp. 257–272.

18. **Gavin Lowe (1997).** *A Hierarchy of Authentication Specifications.* In *10th Computer Security Foundations Workshop.* IEEE Computer Society Press.

19. **Simon Meier (2013).** *Advancing Automated Security Protocol Verification.* Ph.D. Dissertation, ETH Zurich.

20. **Simon Meier, Benedikt Schmidt, Cas J. F. Cremers, and David Basin (2013).** *The TAMARIN Prover for the Symbolic Analysis of Security Protocols.* In *CAV (LNCS),* Vol. 8044. Springer, pp. 696–701.

21. **Piers O’Hanlon, Ravishankar Borgaonkar, and Lucca Hirschi (2017).** *Mobile Subscriber WiFi Privacy.* In *2017 IEEE Security and Privacy Workshops, SP Workshops 2017, San Jose, CA, USA, May 25, 2017.* pp. 169–178.

22. **David Rupprecht, Adrian Dabrowski, Thorsten Holz, Edgar Weippl, and Christina Pöpper (2018).** *On Security Research towards Future Mobile Network Generations.* *IEEE Communications Surveys & Tutorials* (2018).

23. **Benedikt Schmidt, Simon Meier, Cas Cremers, and David Basin (2012).** *Automated Analysis of Diffie-Hellman Protocols and Advanced Security Properties.* In *Computer Security Foundations Symposium (CSF).* IEEE, pp. 78–94.

24. **Benedikt Schmidt, Ralf Sasse, Cas Cremers, and David Basin (2014).** *Automated Verification of Group Key Agreement Protocols.* In *Proceedings of the 2014 IEEE Symposium on Security and Privacy (SP ’14).* IEEE Computer Society, Washington, DC, USA, pp. 179–194. [DOI: 10.1109/SP.2014.19](https://doi.org/10.1109/SP.2014.19)

25. **Altaf Shaik, Jean-Pierre Seifert, Ravishankar Borgaonkar, N. Asokan, and Valtteri Niemi (2016).** *Practical Attacks Against Privacy and Availability in 4G/LTE Mobile Communication Systems.* In *23rd Annual Network and Distributed System Security Symposium, NDSS.*

26. **Fabian van den Broek, Roel Verdult, and Joeri de Ruiter (2015).** *Defeating IMSI Catchers.* *Proceedings of the 2015 ACM Conference on Computer and Communications Security - CCS ’15.*

### Notations and Acronyms

We list all the acronyms introduced throughout the paper in Table 4 and provide a correspondence table between our simplified terminology and the 3GPP terminology in Table 5.

**Table 4: Acronyms and Abbreviations (mostly from [TS 33.501, Sec. 3.2])**

| Acronym | Full Name | Description (if needed) | Reference |
|---------|-----------|------------------------|-----------|
| AK      | Anonymity Key | - | Appendix A |
| AMF     | Authentication Management Field | - | Section 2.2 |
| ARPF    | Authentication credential Repository and Processing Function | - | Appendix A |
| AUSF    | Authentication Server Function | - | Section 2.2 |
| EAP     | Extensible Authentication Protocol | - | Section 2.1 |
| IMSI    | International Mobile Subscriber Identity | Uniquely identify subscribers | Appendix A |
| gNB     | new generation base station | NR Node B | Section 4.3 |
| GUTI    | Globally Unique Temporary UE Identity | - | Section 2.1 |
| ME      | Mobile Equipment | - | Appendix A |
| MCC     | Mobile Country Code | Uniquely identify HNs’ countries | Appendix A |
| MNC     | Mobile Network Code | Uniquely identity HNs in a country | Section 2.2 |
| RES     | RESponse | - | Appendix A |
| SEAF    | SEcurity Anchor Function | - | Section 2.2 |
| SUCI    | Subscription Concealed Identifier | - | Section 2.1 |
| SUPI    | Subscription Permanent Identifier | - | Section 2.1 |
| SQN     | SeQuence Number | - | Appendix A |
| UDM     | Unified Data Management | - | Appendix A |
| USIM    | Universal Subscriber Identity Module | - | Appendix A |
| XRES    | eXpected RESponse | - | Section 2.2 |
| SIDF    | Subscription Identifier De-concealing Function | - | Appendix A |
| SNid    | SN identity | - | Appendix A |

**Table 5: Correspondence Between Our Terminology and the One of TS33.501**

| Our Notion | Correspondent Notion in TS33.501 |
|------------|----------------------------------|
| Serving Network | Combination of SEAF, AMF(∗) and gNB |
| Home Network | Combination of AUSF, ARPF, UDM and SIDF |

### Cryptographic Messages Format

We describe the cryptographic messages format in Table 6, abstracting away AMF, other constants, and sub-message lengths.

**Table 6: Cryptographic Messages Format**

| Message Name | Content |
|--------------|---------|
| SUPI         | ⟨IMSI, MCC, MNC⟩ |

### Key Derivation

In 5G AKA, the key derivation is as follows:

- **KSEAF = KDF(KAUSF, SNname)**, where **KAUSF** is derived differently:
  - **KAUSF = MK[1152...1407]** (we write [x..y] for the substring from bit x to y)
  - The master key **MK** is:
    - **KDF(⟨KDF(IK, SNname), KDF(CK, SNname)⟩, ⟨'EAP-AKA', SUPI⟩)**
  - Therefore,
    - **KSEAF = KeySeed(K, R, SQNH, SNname, SUPI)**
    - **= KDF(KDF(⟨KDF(IK, SNname), KDF(CK, SNname)⟩, ⟨'EAP-AKA', SUPI⟩)[512..767], SNname)**

### MAC Messages

- **AT_MAC** are MAC messages over the other sub-messages as part of the same message.
- The key in use is **Kaut = MK[1152...1407]**.

### EAP-AKA' Protocol

The main differences between EAP-AKA' and 5G AKA are:

- The challenge **xRES** does not directly bind the SN’s identity **SNname**. However, since the challenge is MACed (with the session key **Kaut**) together with **SNname**, both are de facto bound together.
- The SN serves as a pass-through until the authentication is considered successful by the HN. Only at this time, the SN obtains **SUPI** and **KSEAF** from the HN, while it obtains **KSEAF** already in the first message in 5G AKA.

### Lowe's Taxonomy and Tamarin Modeling

**Lowe's Taxonomy** defines several properties, including aliveness, recent aliveness, weak agreement, non-injective agreement, and injective agreement. Below, we show how these properties are modeled in Tamarin.

#### C.1 Introductory Example: Secrecy

As an introductory example, let us see how secrecy properties are modeled in Tamarin. For instance, we model the property that the **SUPI** of subscribers is never revealed to the attacker. Formally, such a property is formalized in Tamarin using the formula defined below, where facts **Claim_Secret(a, k)** are produced for each rule of agent **a** (some subscriber or some HN) who accesses or stores the identifier **SUPI**. Note that **K(t)** denotes the fact that **t** is in the attacker’s knowledge.

**Definition C.1.** Secrecy is modeled via the following formula:
\[ \forall a \, t \, \#i. \, \text{Claim_secret}(a, t)@i \Rightarrow \neg(\exists \#j. \, K(t)@j) \]

#### C.2 Aliveness

Lowe defines aliveness as follows (excerpt from [28]):
- A protocol guarantees to an initiator **A** aliveness of another agent **B** if, whenever **A** (acting as initiator) completes a run of the protocol, apparently with responder **B**, then **B** has previously been running the protocol.

Mathematically, this property is modeled in Tamarin as follows. We assume that the Tamarin model is equipped with facts **Claim_commit(a, b, ⟨A, B⟩)** (i.e., an agent **a** of role **A** claims it has established aliveness of **b** whose role is **B**) and **Claim_running(b, B)** (i.e., an agent **b** of role **B** claims it has run the protocol).

**Definition C.2.** Aliveness of a role **A** towards a role **B** is modeled via the following formula:
\[ \forall a \, b \, \#i. \, \text{Claim_commit}(a, b, \langle A, B \rangle)@i \Rightarrow \exists \#j. \, \text{Claim_running}(b, B)@j \]

Note that we do not restrict the timestamp **#j** to be before the timestamp **#i** (e.g., with a constraint **#j < #i**) since the trace semantics of Tamarin already accounts for this constraint.

#### C.3 Non-injective Agreement

Another example is the non-injective agreement property, defined as follows (excerpt from [28]):
- A protocol guarantees to an initiator **A** non-injective agreement with a responder **B** on a set of data items **ts** (where **ts** is a set of free variables appearing in the protocol description) if, whenever **A** (acting as initiator) completes a run of the protocol, apparently with responder **B**, then **B** has previously been running the protocol, apparently with **A**, and was acting as responder in his run, and the two agents agreed on the data values corresponding to all the variables in **ts**.

We assume that the Tamarin model is equipped with facts **Claim_commit_agr(a, b, ⟨A, B, ts⟩)** (i.e., an agent **a** of role **A** claims it has established agreement on data **t** with **b** whose role is **B**) and **Claim_running_agr(b, a, ⟨A, B, ts⟩)** (i.e., an agent **b** of role **B** claims it has run the protocol with **a** and agrees on **ts**).

**Definition C.3.** Non-injective agreement of a role **A** towards a role **B** on data items **ts** is modeled via the following formula:
\[ \forall a \, b \, \#i. \, \text{Claim_commit_agr}(a, b, \langle A, B, ts \rangle)@i \Rightarrow \exists \#j. \, \text{Claim_running_agr}(b, a, \langle A, B, ts \rangle)@j \]

### EAP-AKA' Protocol Flow

The core flow of the EAP-AKA' protocol is depicted in Figure 4. We omit the MAC failure and Re-synchronization failure phases, which are the same as for 5G-AKA (see Section 2.2.2 and Figure 3). We also omit the message headers specific to the EAP framework such as 'EAP Request' and 'EAP Success'. The key derivation is slightly different compared to 5G AKA, with **KSEAF** derived from **KAUSF**.