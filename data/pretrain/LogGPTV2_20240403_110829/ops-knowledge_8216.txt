User: 请解答这个和日志有关的问题What is the correct way to implement anti-CSRF form tokens? I am fully aware of CSRF and have already implemented some safe forms, but I have never been happy with the results yet.

I've created tokens as a md5 of username, form info and a salt and stored it in a session. This has a problem with tabbed browsing (can be fixed by keeping an array of active hashes) and with timing. I would like my hashes to work only for eg. 10 minutes, but how do I put a time-related variable in the hash?

Can anybody point me to a good resource describing how to make CSRF security properly?

Assistant: There is a good explanation on OWASP: OWASP CSRF Prevention Cheat Sheet

In short they say that there are two ways:


Add a random token to each user session. Only if this token is present and correct will the changes be applied, otherwise the request should be rejected. It is important that the token is only sent with a POST request, since GET requests can leak the token to different places (browser history, log files, etc.).

It is also possible to generate a token per request, but this leads to usability problems. For example the back button wouldn't work properly anymore. But of course the security would be increased.

Also make sure (to enhance security even more) that the token is only sent over TLS, so there won't be any man in the middle problems.
The other option is to use some sort of challenge - response (for example CAPTCHAs or one-time tokens).


The OWASP-Page also lists a few measures that don't work. These are


Using (secret) cookies
Not using GET-requests
Multi-Step transactions
URL Rewriting