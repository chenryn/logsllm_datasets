is used outside internal network.
or Internet connection [14]. However, we ﬁnd that once this is
set, the OS keeps this domain name regardless of the DHCP
domain conﬁguration, and thus still issues internal WPAD
queries even after the network has already changed.
The second case is about domain search list conﬁguration,
which can be accessed in the network setting panels of all
OSes we tested. When a queried name is not considered
fully-qualiﬁed [28], e.g., a dotless single label like wpad,
the OS appends the domains in this search list one by one
until obtaining a valid response. This search list can enable
the OS to support both home network and corporate network
by including both of their network domain sufﬁxes. But if
the corporate network domain sufﬁxes are listed ﬁrst, internal
queries are tried ﬁrst and thus leaked when outside the internal
network. This cause has been discussed before in the web
browsing context [20]; in contrast, in our experiment we study
it for the WPAD proxy discovery process.
The third case is speciﬁc to Windows Vista, where we
ﬁnd that the domain is not unset when changing from a
network with a conﬁgured domain to a network without a
conﬁgured domain. This is likely a speciﬁc implementation
ﬂaw in Windows Vista, as all other OSes quickly change the
domain setting to an empty string under the same condition.
Due to this problem, corporate computers with Windows Vista
leak internal queries when connected to a network without a
conﬁgured domain, which can happen both at home and at
public networks such as a caf´e.
These results show that there exist common conﬁgurations
in popular OSes that can mistakenly issue internal WPAD
queries when the device is used outside corporate networks,
causing internal query leaks. Note that these experiments are
not intended to be exhaustive in ﬁnding all possible device-side
causes, which is a rather difﬁcult task. In fact, these identiﬁed
causes might just be the tip of the iceberg, and merely patching
them may only ﬁx a small portion of the problem.
C. Result Summary and Highly-vulnerable ASes
Concluding from the characterization results above, we ﬁnd
that millions of vulnerable queries are leaked from internal
networks every day, and the cause for the majority of the
leaks is on the device side. Under common OS conﬁgurations,
devices with popular OSes mistakenly keep internal domains
even outside internal networks, and thus issue internal names-
pace WPAD queries. Once these queries are issued outside an
internal network, the DNS resolvers have no idea where the
local name servers are for these internal domains. Thus, they
end up querying the DNS servers in the public namespace.
From our analysis above, we are also able to ﬁnd 10 ASes
with both highest query leak volume and query domain sufﬁx
entropy score in the U.S. as shown in Fig. 5 and Fig. 6.
These ASes account for 81.2% of total WPAD query leaks
in the U.S., and at the same time expose the largest variety
of different victims. Thus, we consider them as the most
vulnerable leak sources in our study. In the following sections,
we will focus on these 10 ASes, especially the one with highest
query leak volume, A1, to perform systematic assessment of
the vulnerability status in the wild.
V. ATTACK SURFACE QUANTIFICATION
Shown in the previous section, a large number of vulnerable
WPAD queries are found in the public DNS namespace, many
of which are already exploitable today. In this section we pro-
pose a candidate attack surface quantiﬁcation method derived
from the deﬁnition in §III-B, and evaluate its effectiveness.
A. Quantiﬁcation Method
As deﬁned in §III-B, the attack surface for a new gTLD
is highly-vulnerable SLDs with two properties: (1) high per-
sistence, and (2) high query volume. Because “high” query
volume is a relative measure, we use query ratio, qr, as
the metric for the high query volume property. For an SLD
set S under a new gTLD ntld, we represent query ratio as
qrntld(S) =
, where Qsld.ntld and Qntld are
the number of leaked queries with domain sld.ntld, and with
new gTLD ntld respectively.
Qsld.ntld
Qntld
sld∈S
(cid:2)
To ﬁnd highly-vulnerable domains, our method is to ﬁrst
identify domains with high persistence. This is because a
domain can be exploited as long as it is queried again for
WPAD proxy discovery after domain registration. To quantify
the level of persistence for a domain sldi.ntld, we use period
length p and persistence duration n to identify domains with
leaked WPAD queries to the DNS root server in every p-day
period for at least n days until the delegation of ntld. High
persistence is reﬂected by a small p and large n, e.g., the
domain has leaked queries every day for at least 1 year before
the delegation of ntld. We use this as evidence indicating that
the leakage may likely occur with some degree of frequency
even after the delegation because of high persistence.
For a new gTLD ntld, given a certain p and n, we can
ﬁnd a set of SLDs under ntld, Sp,n
, that meet this level of
persistence in root WPAD NXD dataset, with a corresponding
ntld(Sp,n)
average query ratio value qrntld(Sp,n) =
.
D
Here, D = (cid:5) n
(cid:6) is the number of p-day periods during which
p
WPAD query leaks with domains in Sp,n
are observed, which
we call persistence period. In this equation, qri
ntld(Sp,n) is
the query ratio for the i-th period.
D
i=1
qri
(cid:2)
To meet the high query ratio property, we need to ﬁnd
the set Sp,n
with the highest qrntld(Sp,n) under a satisﬁable
persistence level deﬁned by p and n. This is non-trivial as there
are trade-offs between the choices of p, n and the query ratio
value. For the period length, the smaller, the more persistent,
but with a small p we may lose high query ratio domains with
longer appearing periods. And for the persistence duration,
682682
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:18:12 UTC from IEEE Xplore.  Restrictions apply. 
Algorithm 1 Attack surface quantiﬁcation method
Input: Qntld (the set of daily leaked WPAD query domains
for new gTLD ntld in a victim AS), thrp, thrn
Output: Attack surface domain set S for new gTLD ntld
1: ni = 91i, where i = 1, 2, 3, ...
2: p1 = 1
3: pj = 7(j − 1), where j = 2, 3, 4, ...
4: for i = 1.2, 3, ... do
5:
for j = 1, 2, 3, ... do
Find domain set Spj ,ni from Qntld
dP
qr = qrntld(Spj ,ni) − qrntld(Spj−1,ni)
if dP
(cid:6)  thrn or ni+1 > |Qntld| then
break
6:
7:
8:
9:
10:
11:
12:
13:
14:
15:
)
%
(
o
i
t
a
r
y
r
e
u
q
e
c
a
f
r
u
s
k
c
a
t
t
 100
 90
 80
 70
 60
 50
 40
 30
A
 0
 20
 40
.global
.ads
.group
.network
.dev
.office
 60
 120
 140
 160
 180
 80
 100
Period length p (days)
Fig. 7: Relationship of attack surface query ratio and period
length p.
)
%
(
 100
o
i
t
a
r
y
r
e
u
q
e
c
a
f
r
u
s
k
c
a
t
t
A
 90
 80
 70
 60
.global
.ads
.group
.network
.dev
.office
 50
 50
 100
 200
 400
 150
Persistence duration n (days)
 250
 300
 350
 450
 500
Fig. 8: Relationship of attack surface query ratio and per-
sistence duration n. Since the 6 new gTLDs have different
delegation dates, the data range for the curves are different.
the larger, the more persistent, but with a large n we may lose
some recent high query ratio domains.
Fig. 7 and Fig. 8 show examples of these trade-offs using
6 delegated new gTLD strings with the highest leaked query
percentage (according to Fig. 3). As shown, when p increases,
the increase of query ratio slows down, and when n increases,
the decrease of query ratio starts to drop more sharply. Thus, to
balance the trade off, for a period length p, we stop increasing
it to avoid sacriﬁcing the persistence level, once the increase
rate of qr reaches a limit, thrp, indicating that we have already
included enough high query ratio domains. For the persistence
duration n, we also set such a limit, thrn, and stop increasing
persistence level once the decrease rate of qr exceeds this
limit, indicating more sacriﬁce in the high query ratio property.
Algorithm 1 shows the pseudocode of our quantiﬁcation
method. For p, our method ﬁrst tries p = 1, and then tries
multiples of 7 days considering the weekly pattern of DNS
queries, i.e., p = 7(j − 1) where j = 2, 3, .... This process
stops when (cid:7)qrntld(Sp,n) is less than thrp, or (cid:5) n
(cid:6) is less
p
than 2, which reaches the point of no periodicity. For n, our
method tries multiples of 91 days, i.e., N = 91i where i =
1, 2, 3, ..., until (cid:7)qrntld(Sp,n) is larger than thresn, or the
n is so large that it exhausts our 2-year dataset. We choose
91 days because it is roughly 3 months, which is considered
the least persistence duration in this paper to avoid short-term
domain query phenomena.
end if
16:
17: end for
18: return Spj ,ni
B. Evaluation
We implemented our attack surface quantiﬁcation method,
and applied to the 10 highly-vulnerable ASes using the root
NXD WPAD dataset. In this section we use A1 as an example
to show our results, because it was the top AS in both query
leak volume and domain sufﬁx entropy score, and the ﬁndings
below also apply to the other 9 highly-vulnerable ASes.
In total, A1 presented queries in 255 out of the 738 new
gTLDs delegated as of 2015/08/25. Among them, 19 new
gTLDs only have leaked query data for 1 day, which are
not enough to conclude their attack surface according to our
deﬁnition of persistence. For the remaining 236 new gTLDs,
our method is able to ﬁnd attack surface domains for 204
(86.4%) of them, which are the ones accounting for 99.99%
of total new gTLD WPAD query leaks in this AS.
Fig. 9 shows CDF of attack surface query ratio qrntld, for
the 204 new gTLDs in TLD percentage and leaked WPAD
query trafﬁc percentage. As shown, for 185 (90.7%) of them,
the attack surface query ratio qr output by our method are over
92.1%. These 185 new gTLDs account for 98.4% of total new
gTLD WPAD query leaks in A1, showing that we are able to
ﬁnd domains meeting high query ratio property for new gTLDs
that expose most vulnerabilities in a victim AS.
We also evaluate how well the attack surface output by our
method can meet the high persistence property. As shown
in Fig. 10, for 148 (72.5%) out of the 204 new gTLDs,
which account for 98.8% of total new gTLD WPAD query
leaks in this AS, their attack surface domains have periodical
appearance for more than 4 periods (D >= 4). Thus, our
method is also able to ﬁnd domains meeting high persistence
property for new gTLDs exposing most vulnerabilities.
683683
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:18:12 UTC from IEEE Xplore.  Restrictions apply. 
AS code
name
Domain
A1
A2
A3
A4
A5
A6
A7
A8
A10
A12
Union
Intersection
#
1185
486
747
3621
704
701
1751
457
254
255
8918
90
Attack surface domain characterization
Domain
query %
Distinct
TLD #
97.4
97.0
97.7
96.2
96.1
97.2
95.7
97.6
96.8
95.5
97.0
58.2
204
122
154
331
146
144
230
113
73
70
406
33
# of TLDs have
only 1 SLD
109 (53.4%)
75 (61.5%)
91 (59.1%)
130 (39.3%)
80 (54.8%)
75 (52.1%)
117 (50.9%)
74 (65.1%)
42 (57.5%)
44 (62.9%)
92 (22.7%)
21 (63.6%)
Distinct
SLD #
# of SLD strings
unique to 1 TLD
1122
463
714
3324
673
668
1633
439
235
239
7966
80
1080 (96.3%)
447 (96.5%)
694 (91.2%)
3145 (94.6%)
653 (97.0%)
646 (96.7%)