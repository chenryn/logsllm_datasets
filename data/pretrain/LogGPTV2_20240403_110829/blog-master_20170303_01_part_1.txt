## pidstat 统计进程、线程、进程组的资源消耗  
### 作者                                                         
digoal       
### 日期         
2017-03-03        
### 标签       
PostgreSQL , Linux , pidstat      
----      
## 背景     
如果我们要查看Linux下面进程、进程组、线程的资源消耗的统计信息，可以使用pidstat，它可以收集并报告进程的统计信息。  
pidstat实际上也是将/proc/pid下的统计信息统筹后展现给用户。  
## pidstat例子  
1\. 列出IO统计信息：-d  
2\. 列出内存使用统计，page fault：-r  
3\. CPU统计信息：-u  
4\. 上下文切换统计信息：-w  
5\. 指定输出的维度  
指定命令： -C command  
指定进程号：-p { pid [,...] | SELF | ALL }  
将所有列输出到单行、便于导入单张表中：-h  
按每个CPU核的统计：-I  
按所有CPU核统计：默认  
列出命令的完整内容，包括参数：-l  
列出线程统计信息：-t  
按进程维度单独统计、按进程全局+子进程单独统计、按进程全局、单独统计同时按子任务单独统计：-T { TASK | CHILD | ALL }  
实例，统计5秒的值并输出  
```  
#pidstat -d -r -u -w -l -h -p ALL 5 1|less  
#      Time       PID    %usr %system  %guest    %CPU   CPU  minflt/s  majflt/s     VSZ    RSS   %MEM   kB_rd/s   kB_wr/s kB_ccwr/s   cswch/s nvcswch/s  Command  
 1488541252         1    0.00    0.00    0.00    0.00     0      0.00      0.00   19348   1512   0.00      0.00      0.00      0.00      0.00      0.00  /sbin/init   
 1488541252         2    0.00    0.00    0.00    0.00    50      0.00      0.00       0      0   0.00      0.00      0.00      0.00      0.00      0.00  kthreadd  
 1488541252         3    0.00    0.00    0.00    0.00     0      0.00      0.00       0      0   0.00      0.00      0.00      0.00      0.59      0.00  migration/0  
 1488541252         4    0.00    0.00    0.00    0.00     0      0.00      0.00       0      0   0.00      0.00      0.00      0.00      0.00      0.00  ksoftirqd/0  
 1488541252         5    0.00    0.00    0.00    0.00     0      0.00      0.00       0      0   0.00      0.00      0.00      0.00      0.00      0.00  migration/0  
 1488541252         6    0.00    0.00    0.00    0.00     0      0.00      0.00       0      0   0.00      0.00      0.00      0.00      0.00      0.00  watchdog/0  
 ......  
 1488541264     18523    0.00    0.20    0.00    0.20     5     10.78      0.00 137774940 3002232   0.57      0.00      0.00      0.00      1.96      0.20  /home/digoal/pgsql9.6/bin/postgres   
 1488541264     18549    0.00    0.00    0.00    0.00    61      0.00      0.00  140892   2028   0.00      0.00      0.00      0.00      0.00      0.00  postgres: logger process               
 1488541264     18552    0.00    0.00    0.00    0.00     0      0.00      0.00 137779116 5509520   1.04      0.00      0.00      0.00      0.00      0.00  postgres: checkpointer process         
 1488541264     18554    0.00    0.00    0.00    0.00    20      0.00      0.00 137776328 1058572   0.20      0.00      0.00      0.00      3.92      0.00  postgres: writer process               
 1488541264     18556    0.00    0.00    0.00    0.00    15      0.00      0.00 137774940  19120   0.00      0.00      0.00      0.00      3.92      0.00  postgres: wal writer process           
 1488541264     18557    0.00    0.00    0.00    0.00    21      2.94      0.00 137779092   3404   0.00      0.00      0.00      0.00      3.92      0.00  postgres: autovacuum launcher process     
 1488541264     18559    0.00    0.00    0.00    0.00    11      0.00      0.00  142988   2092   0.00      0.00      0.00      0.00      0.00      0.00  postgres: archiver process   last was 0000000100000030000000B2  
 1488541264     18561    0.00    0.00    0.00    0.00    53      4.90      0.00  143556   2624   0.00      0.00    317.65    317.65      4.12      0.20  postgres: stats collector process      
```  
## 参考  
man pidstat  
```  
PIDSTAT(1)                    Linux User’s Manual                   PIDSTAT(1)  
NAME  
       pidstat - Report statistics for Linux tasks.  
SYNOPSIS  
       pidstat [ -C comm ] [ -d ] [ -h ] [ -I ] [ -l ] [ -p { pid [,...] | SELF | ALL } ] [ -r ] [ -t ] [ -T { TASK | CHILD | ALL } ] [ -u ] [ -V ] [ -w ] [ interval [ count ] ]  
DESCRIPTION  
       The  pidstat  command  is  used for monitoring individual tasks currently being managed by the Linux kernel.  It writes to standard output activities for every task selected with option -p or for every task  
       managed by the Linux kernel if option -p ALL has been used. Not selecting any tasks is equivalent to specifying -p ALL but only active tasks (tasks with  non-zero  statistics  values)  will  appear  in  the  
       report.  
       The pidstat command can also be used for monitoring the child processes of selected tasks.  Read about option -T below.  
       The  interval  parameter  specifies  the  amount  of time in seconds between each report.  A value of 0 (or no parameters at all) indicates that tasks statistics are to be reported for the time since system  
       startup (boot).  The count parameter can be specified in conjunction with the interval parameter if this one is not set to zero. The value of count determines the number of  reports  generated  at  interval  
       seconds apart. If the interval parameter is specified without the count parameter, the pidstat command generates reports continuously.  
       You can select information about specific task activities using flags.  Not specifying any flags selects only CPU activity.  
OPTIONS  
       -C comm  
              Display only tasks whose command name includes the string comm.  
       -d     Report I/O statistics (kernels 2.6.20 and later only).  The following values are displayed:  
              PID  
                     The identification number of the task being monitored.  
              kB_rd/s  
                     Number of kilobytes the task has caused to be read from disk per second.  
              kB_wr/s  
                     Number of kilobytes the task has caused, or shall cause to be written to disk per second.  
              kB_ccwr/s  
                     Number  of  kilobytes  whose  writing  to  disk  has  been cancelled by the task. This may occur when the task truncates some dirty pagecache. In this case, some IO which another task has been  
                     accounted for will not be happening.  
              Command  
                     The command name of the task.  
       -h     Display all activities horizontally on a single line. This is intended to make it easier to be parsed by other programs.  
       -I     In an SMP environment, indicate that tasks CPU usage (as displayed by option -u ) should be divided by the total number of processors.  
       -l     Display the process command name and all its arguments.  
       -p { pid [,...] | SELF | ALL }  
              Select tasks (processes) for which statistics are to be reported.  pid is the process identification number. The SELF keyword indicates that statistics are to be  reported  for  the  pidstat  process  
              itself, whereas the ALL keyword indicates that statistics are to be reported for all the tasks managed by the system.  
       -r     Report page faults and memory utilization.  
              When reporting statistics for individual tasks, the following values are displayed:  
              PID  
                     The identification number of the task being monitored.  
              minflt/s  
                     Total number of minor faults the task has made per second, those which have not required loading a memory page from disk.  
              majflt/s  
                     Total number of major faults the task has made per second, those which have required loading a memory page from disk.  
              VSZ  
                     Virtual Size: The virtual memory usage of entire task in kilobytes.  
              RSS  
                     Resident Set Size: The non-swapped physical memory used by the task in kilobytes.  
              Command  
                     The command name of the task.  
              When reporting global statistics for tasks and all their children, the following values are displayed:  
              PID  
                     The identification number of the task which is being monitored together with its children.  
              minflt-nr  
                     Total number of minor faults made by the task and all its children, and collected during the interval of time.  
              majflt-nr  
                     Total number of major faults made by the task and all its children, and collected during the interval of time.  
              Command  
                     The command name of the task which is being monitored together with its children.  
       -t     Also display statistics for threads associated with selected tasks.  
              This option adds the following values to the reports:  
              TGID  
                     The identification number of the thread group leader.  
              TID  
                     The identification number of the thread being monitored.  
       -T { TASK | CHILD | ALL }  
              This  option  specifies  what  has  to be monitored by the pidstat command. The TASK keyword indicates that statistics are to be reported for individual tasks (this is the default option) whereas the  
              CHILD keyword indicates that statistics are to be globally reported for the selected tasks and all their children. The ALL keyword indicates that statistics are to be reported  for  individual  tasks  
              and globally for the selected tasks and their children.  
              Note:  Global statistics for tasks and all their children are not available for all options of pidstat.  Also these statistics are not necessarily relevant to current time interval: The statistics of  
              a child process are collected only when it finishes or it is killed.  
       -u     Report CPU utilization.  
              When reporting statistics for individual tasks, the following values are displayed:  
              PID  
                     The identification number of the task being monitored.  
              %usr  
                     Percentage of CPU used by the task while executing at the user level (application), with or without nice priority. Note that this field does NOT include time spent running a virtual processor.  
              %system  
                     Percentage of CPU used by the task while executing at the system level (kernel).  
              %guest  
                     Percentage of CPU spent by the task in virtual machine (running a virtual processor).  