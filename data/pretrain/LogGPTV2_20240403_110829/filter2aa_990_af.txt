全测试与漏洞扫
描，渗透测试等手
段保证安全性 
 通过静态代码分
析与漏洞扫描、渗
透测试等手段保
证研发验证阶段
的安全性 
安全
发布
部署 
 建立标准的事件
响应流程 
 建立安全发布标
准，确保发布部署
安全 
 对于前期所有安
全工作进行二次
审查 
云计算开源产业联盟                                                        研发运营安全白皮书 
19 
上线
运营
安全 
 通过人员权限认
证，数据加密存
储、传输，安全监
控，定期更新安全
策略，抵御常见网
络攻击，执行渗透
测试等手段保证
上线运营阶段的
安全 
 通过安全运营操
作流程与持续安
全监控、更新保证
产品上线之后的
安全 
 由安全响应中心
进行持续的安全
监控，对于安全风
险进行及时响应 
表 5 企业研发运营安全具体实践 
（五）开发模式逐步向敏捷化发展，研发运营安全体
系随之向敏捷化演进 
研发运营安全相关体系的发展与开发模式的变化是密不可分的，
随着开发模型由传统的瀑布式开发演变成敏捷开发再转变为 DevOps，
研发运营安全相关体系也随着变化，但其核心理念始终是安全前置，
贯穿全生命周期。目前研发运营安全体系中，以微软提出的安全开发
生命周期（SDL）和 Gartner 提出的 DevSecOps 体系为典型代表。 
安全开发生命周期（SDL）的核心理念就是将安全考虑集成在软
件开发的每一个阶段:需求分析、设计、编码、测试和维护。从需求、
设计到发布产品的每一个阶段每都增加了相应的安全活动，以减少软
件中漏洞的数量并将安全缺陷降低到最小程度。安全开发生命周期
(SDL)是侧重于软件开发的安全保证过程，旨在开发出安全的软件应
用。SDL 在传统软件开发生命周期(SDLC)的各个阶段增加了一些必要
的安全活动，软件开发的不同阶段所执行的安全活动也不同，每个活
云计算开源产业联盟                                                        研发运营安全白皮书 
20 
动就算单独执行也都能对软件安全起到一定作用。具体内容如下图 6
所示。 
图片来源：Microsoft 
图 6 微软 SDL 流程体系 
随着对软件开发质量和效率要求的不断提高，以 DevOps 为代表
的敏捷开发方法得到推崇。在此基础上，Gartner 公司于 2012 年推
出了 DevSecOps 的概念，DevSecOps 即 Development Security 
Operations 的缩写，是一套基于 DevOps 体系的全新安全实践战略框
架，旨在将安全融入敏捷过程中，即通过设计一系列可集成的控制措
施，增大监测、跟踪和分析的力度，优化安全实践，集成到开发和运
营的各项工作中，并将安全能力赋给各个团队，同时保持“敏捷”和
“协作”的初衷。 
DevOps 的目的决定了其对“自动化”和“持续性”的要求更加突
出，因此在将安全控制集成其中时，也应该尽量遵循“自动化”和“透
明”的原则。为了将安全无缝集成到 DevOps 中，Gartner 和一些专家
从实践出发提出了一系列建议，主要包括：风险和威胁建模、自定义
代码扫描、开源软件扫描和追踪、考虑供应链安全问题、整合预防性
安全控制到共享源代码库和共享服务中、版本控制和安全测试的自动
云计算开源产业联盟                                                        研发运营安全白皮书 
21 
化部署、系统配置漏洞扫描、工作负载和服务的持续监控等。下图 7
为 DevSecOps 具体体系框架。 
图片来源：Gartner 
图 7 DevSecOps 体系框架图 
SDL 
DevSecOps 
适用对象 
软件产品安全开发全生命周
期 
DevOps 体系，周期较短、迭
代较快的业务 
安全责任 
特定安全团队 
研发运营所有参与人员 
体系特点 
安全集成在软件开发的每一
个阶段，整体提升安全性 
DevOps 体系中融入安全，安
全工具自动化以及平台化 
体系重点 
整体安全管理制度搭配安全
人员能力达到软件产品研发
安全 
DevOps 体系中嵌入自动化
安全工具，实现 DevOps 体
系的安全 
表 6 SDL 与 DevSecOps 区别对照 
三、 研发运营安全关键要素 
本白皮书认为的研发运营安全关键要素包含两方面内容，1）覆
盖软件应用服务全生命周期的研发运营安全体系，提供理论框架，指
导研发运营安全的实践推进；2）研发运营安全技术工具的持续发展
云计算开源产业联盟                                                        研发运营安全白皮书 
22 
应用，为体系的实践提供技术支撑，加速企业组织研发运营安全的落
地。 
（一）覆盖软件应用服务全生命周期的研发运营安全
体系 
本白皮书提出的研发运营安全体系强调安全左移，结合人员管理
体系、制度流程，从需求分析设计、编码阶段便引入安全，覆盖软件
应用服务全生命周期，整体提升安全性。提出的研发运营安全体系具
有四大特点，1）覆盖范围更广，延伸至下线停用阶段，覆盖软件应
用服务全生命周期；2）更具普适性，抽取关键要素，不依托于任何
开发模式与体系；3）不止强调安全工具，同样注重安全管理，强化
人员安全能力；4）进行运营安全数据反馈，形成安全闭环，不断优
化流程实践。 
1. 管理制度 
管理制度流程是推行研发运营安全的基础。在研发运营安全体系
规划和建设的过程中，首先是建立组织责任体系，制定完善的研发运
营安全管理体系和制度管理规范，明确管理制度和操作流程规范，建
立统一的安全基线。并将组织建设和人员制度管理纳入到全生命管理
周期中，对应的组织负责不同的安全职责与工作，进行安全培训，建
设组织级的安全文化以及对研发人员、测试人员、技术运营人员等进
行安全管理，包括第三方机构的人员，实现人人都为安全负责。 
云计算开源产业联盟                                                        研发运营安全白皮书 
23 
制度和操作规范包括 1）账号和密码管理，2）故障流程管理办法，
3）应急事件分级处理措施，4）人员行为安全规范，5）变更管理制
度，6）团队间安全协作流程和规范等。通过统一的流程管理平台，
保证各个流程环节能够被及时响应，各项任务能够被顺利传递、衔接。 
安全培训针对所有研发、测试、运营人员以及第三方合作人员，
目前是为了提升安全意识，增强研发运营安全能力。培训内容主要包
括 1）安全管理制度，2）安全意识培训，3）安全开发流程，4）安全
编码规范，5）安全设计，6）安全测试等，并对于培训结果进行考核，
制定特殊岗位的上岗前考核机制，未通过相关考核的，不得从事向相
关岗位的工作。 
2. 安全要求 
安全要求明确研发运营安全的基线。安全要求通常包含安全管理
和技术安全要求，二者需要有机结合，不可分割。具体内容包括 1）
设立质量安全门限要求，具有项目级、团队级、组织级的质量安全门
限要求，根据业务场景、产品类型、语言类型划分质量安全门限要求，
智能化收集质量安全门限要求，根据业务场景等进行智能推荐；2）
项目角色以及权限管理，依据最小权限原则，建立资源、行为操作权
限管控，采用多因素认证机制保证访问安全，配置强密码策略，及时
为不需要权限的用户或用户组移除权限；3）安全审计，对于包括研
发、测试、运营的所有相关人员的所有操作行为进行审计，对于审计
记录进行保护，有效期内避免非授权的访问、篡改、覆盖及删除，对
于审计记录形成报表，方便查询、统计与分析，针对审计日志进行自
云计算开源产业联盟                                                        研发运营安全白皮书 
24 
动化与人工审计，对于安全事件进行详细记录，对于高危操作进行重
点审计，进行告警通知，针对行业特点，业务特点进行定制化的安全
审计策略，对于审计记录进行统计分析、关联分析等；4）环境管理，
研发、测试、生产环境隔离，生产环境具有安全基线要求，保障环境
的安全，针对研发、测试环境有明确的权限管控机制，针对各类环境
的操作进行详细记录，具有可追溯性，定期执行生产环境的安全基线
扫描，及时发现和处理安全风险，研发、生产环境具有良好的抗攻击
与灾备容错能力，根据特定行业以及业务场景，对于测试环境接入安
全扫描，针对不同的业务场景以及架构，对于发布环境进行分类管理，
安全加固，生产环境具安全风险自动发现、分析和修复以及秒级容灾
容错切换能力；5）变更管理，有明确的进行变更条件与变更执行机
制，有明确的变更授权机制，对于变更请求进行统一分析、整理，确
定变更方案；6）开源及第三方组件管理，具有组织级的第三方组件
库，明确优选、可用、禁用的第三方组件列表，统一组件来源，具有
明确的第三方组件入库审批机制，第三方组件的引入应遵循最小化引
入原则，减少安全风险，开源及第三方组件与自研代码独立存放、目
录隔离，开源及第三方组件来源可追溯，开源组件追溯源社区，第三
方组件信息追溯到供应商，对开源软件的生命周期进行管理，记录开
源软件的生命周期信息，通过自动化工具及时向使用产品进行通知预
警；7）安全研发测试要求，具有组织级、团队级、项目级的安全编码
规范、安全测试规范。 
3. 安全隐私需求分析与设计 