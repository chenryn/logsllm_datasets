# "I Have No Idea What I'm Doing" - On the Usability of Deploying HTTPS

## Authors
Katharina Krombholz, Wilfried Mayer, Martin Schmiedecker, and Edgar R. Weippl  
SBA Research

## Publication Details
This paper was presented at the 23rd USENIX Security Symposium, held in Vancouver, BC, Canada, from August 16–18, 2017. The proceedings are available under ISBN 978-1-931971-40-9, with open access sponsored by USENIX.

## Abstract
Protecting communication content at scale is a challenging task, and TLS (Transport Layer Security) is the most commonly used protocol for this purpose. However, deploying it securely remains difficult for many online service operators. While Let's Encrypt was specifically designed to promote the adoption of HTTPS, this paper aims to understand the reasons behind the difficulties in correctly deploying TLS and examines the usability of the deployment process for HTTPS. We conducted a series of experiments with 28 knowledgeable participants and identified significant usability challenges that result in weak TLS configurations. Additionally, we interviewed 7 experienced security auditors. Our findings suggest that the deployment process is overly complex, even for individuals with proficient knowledge, and that server configurations should have stronger security by default. The results from our expert interviews confirm the ecological validity of the lab study and highlight that even educated users prefer solutions that are easy to use. An improved and less vulnerable workflow would be highly beneficial for finding stronger configurations in real-world settings.

## 1. Introduction
Transport Layer Security (TLS) and its predecessor, Secure Sockets Layer (SSL), are fundamental cryptographic protocols used to secure information in transit across computer networks. They ensure privacy and data integrity between two communicating parties and are employed in various applications, such as web browsers, smartphone apps, and email communication. Recent studies on TLS usage in both HTTPS [16, 25] and email [24, 31] have revealed that a large fraction of communication endpoints are poorly secured and susceptible to a wide range of attacks (e.g., Heartbleed [3] and DROWN [11]). Human-centric studies [20] have shown that users often ignore warnings and lack understanding of the implications of visiting a website without a valid certificate. Despite efforts to promote encryption, many services still do not use TLS by default. The Let's Encrypt initiative, which offers free certificates trusted by all browsers, is not yet universally adopted, partly due to the lack of Extended Validation (EV) Certificates and the need for initial configuration.

To date, most human-centric studies have focused on non-expert end users, and no user study has examined the usability of the TLS deployment process directly. This study fills this gap by presenting the first user study with expert users to identify key usability issues in the TLS deployment process that lead to insecure configurations. We conducted lab sessions with 28 university students from December 14 to 18, 2015. Data was collected using a think-aloud protocol, entry and exit questionnaires, and the capture of bash and browser histories and resulting server configuration files. We focused on Apache, the most common web server, and found that configuring TLS on Apache is perceived as a challenging task even by experienced users. Participants struggled with important security decisions, such as choosing the right cipher suites, and had difficulty finding reliable sources of information online. Our expert interviews confirmed that insufficiently secure configurations, like those observed in our lab study, are frequently encountered during security audits. Our results provide a baseline for developing improved tools and policies that better meet the needs of expert users.

### Contributions
- A lab study with 28 participants to explore usability challenges in the TLS configuration process.
- Expert interviews with 7 security auditors to provide a baseline for ecological validity and to further explore potential usability improvements and recommendations for the deployment process.

## 2. Background & Related Work
Transport Layer Security (TLS) is the foundation of today’s web security. Several application layer protocols, including HTTPS, use TLS to secure their online communication. TLS 1.2 [14] is the most recent version, with TLS 1.3 on the horizon. Guidelines and best practices for proper TLS deployment have been published [12, 38]. The goals of TLS include extensibility and interoperability, allowing for the use of different TLS versions, cipher suites, and additional security features like HTTP Strict Transport Security (HSTS) [23] and HTTP Public Key Pinning (HPKP) [18].

Recent studies have used Internet-wide scanning techniques to empirically test the quality of TLS configurations and have shown that the TLS landscape is diverse and full of misconfigurations. Lee et al. [29] analyzed supported SSL/TLS versions, and Durumeric et al. [16] and VanderSloot et al. [42] conducted comprehensive studies. Ristic [36] evaluated the quality of TLS configurations using a defined metric [2], while Huang et al. [26] surveyed the use of cipher suites, and Kranch and Bonneau [28] scanned domains for HSTS and public key pinning.

Most user studies regarding TLS and human-computer interaction focus on non-expert end users who receive certificate warnings from their browsers. Akhawe et al. [9] found that these warnings have high click-through rates, with 70.2% of Google Chrome’s SSL warnings not preventing users from visiting insecure sites. Harbach et al. [22] analyzed the influence of linguistic properties on the perceived difficulty of warning messages, suggesting several steps to improve text understandability. Studies have also aimed to improve SSL warnings [20, 21, 41, 43], with Sunshine et al. [41] designing new warnings that performed significantly better. Weber et al. [43] used a participatory design approach, and Felt et al. [21] explored reasons for higher click-through rates in Google Chrome compared to Mozilla Firefox.

Oltrogge et al. [33] studied the applicability of pinning for non-browser software, finding that only a quarter of participants understood the concept. Fahl et al. [19] conducted a study with system administrators, highlighting the need for simpler interfaces and automatic certificate renewal, and emphasizing the importance of better technical education for responsible personnel. Our lab experiments provide a more in-depth exploration of the usability challenges faced by administrators.

## 3. Lab Experiments
### 3.1 Study Design and Procedure
To understand the usability challenges of TLS deployment from an administrator’s perspective, we conducted a series of lab experiments with 28 participants. We recruited students with expert knowledge in security and privacy-enhancing protocols who met the criteria to potentially work as administrators or were already working in such roles.

The experiments proceeded as follows: After recruitment, participants were invited to the lab, briefed about the study, and signed a consent form. They received the study assignment, assuming the role of an administrator of a small to medium-sized enterprise (SME) tasked with securing an Apache web server with HTTPS to pass a security audit. The server system was based on Raspian, a Debian-based Linux distribution, and the Apache version was 2.4.11. We prepared a fictive Certificate Authority (CA) with a simple web interface to facilitate the process of obtaining a valid certificate, removing any bias introduced by specific CAs. The CA required the submission of a valid CSR (certificate signing request) to issue a certificate, and the browser on the local machine already trusted our CA.

Participants were instructed to make the configuration as secure as possible, without specific security requirements. Data was collected using a think-aloud protocol, with an experimenter taking notes. We did not video record the sessions to avoid disrupting participants, as noted in a pre-test. In addition to observation notes, we captured the bash and browser history and the final configuration files. After completing the task, participants filled out a questionnaire covering demographics, previous security experience, and reflections on the experiment.

### 3.2 Recruitment and Participants
We focused on users with proficient knowledge in security and privacy-enhancing technologies. Due to the difficulty of recruiting participants from companies, we recruited students who had completed several security-related courses. To ensure our sample reflected real-world job requirements, we reviewed open job advertisements for system administrators and invited top-performing students to take an online quiz. The quiz and required courses were selected based on a review of 15 job advertisements. The top 30 students with the best scores were invited to participate, and 28 did. The average score was 9.15 (median = 9.37), and the average time to complete the quiz was 6.1 minutes.

Table 1 summarizes the key characteristics of the participants: 2 participants were female, 26 were male; the age range was 21 to 32 with a median of 23. Their industry experience ranged from 2 to 120 months, with a median of 25 months. 17 of the 28 participants were experienced system administrators and had previously deployed TLS.

| Demographic | Gender | Age | Months Worked in Industry | Experienced as Sysadmin | Configured TLS Before |
|-------------|--------|-----|---------------------------|-------------------------|-----------------------|
|             | Female | 2   | 120                       | Yes                     | Yes                   |
|             | Male   | 32  | 2                         | No                      | No                    |

We are confident that our participants are suitable to explore the usability challenges in TLS deployment that real-world system administrators face. To further strengthen the ecological validity of our results, we conducted interviews with security auditors (Section 5).