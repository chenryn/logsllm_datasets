title:"I Have No Idea What I'm Doing" - On the Usability of Deploying HTTPS
author:Katharina Krombholz and
Wilfried Mayer and
Martin Schmiedecker and
Edgar R. Weippl
“I Have No Idea What I’m Doing” -  
On the Usability of Deploying HTTPS
Katharina Krombholz, Wilfried Mayer, Martin Schmiedecker,  
and Edgar Weippl, SBA Research
https://www.usenix.org/conference/usenixsecurity17/technical-sessions/presentation/krombholz
This paper is included in the Proceedings of the 26th USENIX Security SymposiumAugust 16–18, 2017 • Vancouver, BC, CanadaISBN 978-1-931971-40-9Open access to the Proceedings of the 26th USENIX Security Symposium is sponsored by USENIX“I Have No Idea What I’m Doing” –
On the Usability of Deploying HTTPS
Katharina Krombholz
SBA Research
Wilfried Mayer
SBA Research
Martin Schmiedecker
SBA Research
Edgar Weippl
SBA Research
Abstract
Protecting communication content at scale is a difﬁcult
task, and TLS is the protocol most commonly used to
do so. However, it has been shown that deploying it
in a truly secure fashion is challenging for a large frac-
tion of online service operators. While Let’s Encrypt
was speciﬁcally built and launched to promote the adop-
tion of HTTPS, this paper aims to understand the rea-
sons for why it has been so hard to deploy TLS correctly
and studies the usability of the deployment process for
HTTPS. We performed a series of experiments with 28
knowledgable participants and revealed signiﬁcant us-
ability challenges that result in weak TLS conﬁgurations.
Additionally, we conducted expert interviews with 7 ex-
perienced security auditors. Our results suggest that the
deployment process is far too complex even for people
with proﬁcient knowledge in the ﬁeld, and that server
conﬁgurations should have stronger security by default.
While the results from our expert interviews conﬁrm the
ecological validity of the lab study results, they addition-
ally highlight that even educated users prefer solutions
that are easy to use. An improved and less vulnerable
workﬂow would be very beneﬁcial to ﬁnding stronger
conﬁgurations in the wild.
1
Introduction
Transport Layer Security (TLS) and its predecessor Se-
cure Sockets Layer (SSL) are fundamental cryptographic
protocols to secure information in transit across com-
puter networks and are employed to ensure privacy and
data integrity between two communicating parties. They
are used hundreds of million of times every day world-
wide in applications such as web browsers, smartphone
apps or in email communication. Recent studies on TLS
usage in the Internet ecosystem for both HTTPS [16, 25]
and email [24, 31], however,
revealed that a large
fraction of communication endpoints are poorly secured
and suspectible to a broad array of possible attacks
(e.g., Heartbleed [3] and DROWN [11]). Additionally,
human-centric studies [20] have shown that warnings
are still clicked through and that users have little to no
understanding regarding the implications of visiting a
website without a valid certiﬁcate. Even worse, a large
number of services and websites still refrains from using
TLS by default for all communication channels despite
all efforts in propagating the use of encryption. While
the initiative Let’s Encrypt was speciﬁcally launched to
offer free certiﬁcates that are trusted by all browsers, it is
not yet ubiquitiously used for various reasons, e.g., the
lack of Extended Validation (EV) Ceritiﬁcates. Besides
that, Let’s Encrypt still requires to be conﬁgured at least
once.
To date, most studies on human-centric concerns
focused on non-expert end users and, to the best of our
knowledge, no user study has yet been conducted to
examine the usability of the TLS deployment process
directly. Our contribution aims to ﬁll this gap by pre-
senting the ﬁrst user study with expert users to identify
key usability issues in the deployment process of TLS
that lead to insecure conﬁgurations. We conducted lab
sessions that lasted 2 hours each with 28 university
students from 14 to 18 December 2015. Data was
collected via a think-aloud protocol as well as an entry
and exit questionnaire.
In addition we collected the
bash and browser histories and the resulting server
conﬁguration ﬁles. We focused on Apache, as this
is the most common web server to date [7] (A query
at censys.io resulted in 20,890,000 websites using
Apache). We found that conﬁguring TLS on Apache
is perceived as a challenging task even by experienced
users. Our results suggest that administrators struggle
with important security decisions (e.g., choosing the
right cipher suites) which are mainly driven by concerns
about compatibility. Furthermore, our participants had
a hard time ﬁnding reliable sources on the Internet to
USENIX Association
26th USENIX Security Symposium    1339
support their decision making process. The conﬁgu-
ration options in Apache are perceived as difﬁcult to
understand and therefore an additional source of error.
Through our expert interviews, we collected evidence
that
insufﬁciently secure conﬁgurations – like those
from the majority of participants from our lab study –
are frequently encountered during security audits. Our
results shed light on major challenges from an expert
user’s perspective. We are conﬁdent that our results are
a good baseline for the development of improved tools
and policies that are better tied to the expert users’ needs.
The contributions of this paper thus are:
• a lab study with 28 participants to explore usabil-
ity challenges in the TLS conﬁguration process
• expert interviews with 7 security auditors to pro-
vide a baseline for ecological validity and to further
explore potential usability improvements and rec-
ommendations for the deployment process.
2 Background & Related Work
Transport Layer Security is the foundation of today’s
web security. Several application layer protocols use
TLS to secure their online communication. The most
widely used protocol is HTTPS, i.e., TLS provides conﬁ-
dentiality, authenticity and integrity for HTTP. Currently,
TLS 1.2 [14] is the most recent version of the SSL/TLS
protocol family, with TLS 1.3 on the horizon.1 Besides
securing the majority of today’s web trafﬁc, researchers
have found several challenges regarding TLS, which are
vigorously discussed in the literature [13,37]. Guidelines
and best practices for a proper TLS deployment have also
been published [12, 38]. The goals of TLS include ex-
tensibility and interoperability. This includes the ability
to change the quality of the used certiﬁcate, settings of
used cryptographic primitives (cipher suites), enabling
of TLS extensions, use of different TLS versions and
the use of additional security features like HTTP Strict
Transport Security (HSTS) [23] and HTTP Public Key
Pinning (HPKP) [18].
In the last years, many studies
focused on empirically testing the quality of TLS con-
ﬁgurations by using Internet-wide scanning techniques
and showed that the TLS landscape is diverse and full of
misconﬁgurations. Lee et al. [29] analyzed the supported
SSL/TLS versions, the EFF started to analyze used cer-
tiﬁcates [17] with the most comprehensive study by Du-
rumeric et al. [16] and VanderSloot et al. [42]. With
a newly introduced search engine it is also possible to
monitor the ecosystem more easily [15]. Ristic [36] an-
alyzed different parameters and evaluated the quality by
1https://tools.ietf.org/html/draft-ietf-tls-tls13
a deﬁned metric [2]. Huang et al. [26] surveyed the use
of cipher suites and Kranch and Bonneau [28] scanned
domains for HSTS and public key pinning.
studies
Most user
regarding TLS and human-
computer interaction focus on non-expert end users
that receive certiﬁcate warnings from their browsers.
Akhawe et al. [9] performed a large-scale study on the
effectiveness of SSL browser warnings and found that
that these warnings have high click-through rates, i.e.,
70.2% of Google Chrome’s SSL warnings did not pre-
vent users from visiting the initially requested insecure
site. Harbach et al. [22] presented an empirical analy-
sis of the inﬂuence of linguistic properties on the per-
ceived difﬁculty of descriptive text in warning messages
and found that the several steps can help to improve text
understandability.
Several studies have been conducted to improve SSL
warnings [20, 21, 41, 43]: E.g., Sunshine et al. [41] con-
ducted a survey to examine Internet users’ reactions to
and understanding of current SSL warnings. Based on
their ﬁndings, they designed new warnings and showed
that they performed signiﬁcantly better. Weber et al. [43]
used a participatory design approach to improve SSL
warnings. Felt et al. [21] explored reasons for higher
click-through rates for SSL warnings in Google Chrome
compared to Mozilla Firefox. They also showed that the
design of warnings can lead users towards safer deci-
sions.
Oltrogge et al. [33] conducted an extensive study on
the applicability of pinning for non-browser software as
in Android apps. They found that only a quarter of their
participants understood the concept of pinning. Based on
their ﬁndings, they presented a web application to sup-
port developers in making the right decisions and guiding
them through the correct deployment.
Fahl et al. [19] presented the ﬁrst study with system
administrators and found that many of their participants
wished for more simplicity, e.g., simpler interfaces and
automatic certiﬁcate renewal. Their results furthermore
highlight the need for a better technical education of re-
sponsible personnel.
In comparison to our lab experi-
ments, the results from Fahl et al. [19] are based on self-
reported data gathered via an online questionnaire and
therefore provide a baseline for our study.
3 Lab Experiments
In the following, we describe the methodology used to
collect and analyze the data from the lab study.
3.1 Study Design and Procedure
In order to elicit a picture of usability challenges of
TLS deployment
from an administrator’s point of
1340    26th USENIX Security Symposium
USENIX Association
view, we conducted a series of lab experiments with
28 participants. As described in Section 3.2, we re-
cruited students with expert knowledge in the ﬁeld of
security and privacy-enhancing protocols at our univer-
sity who fulﬁlled the criteria to potentially work as an
administrator or were actually working as administrators.
Our experiments proceeded as follows: After the
recruitment phase, the participants were invited to the
lab where they were shortly briefed about the purpose of
our study. After signing a consent form, they received
the study assignment as presented in Appendix A. In the
given scenario, they assumed the role of an administrator
of an SME who is in charge of securing the communi-
cation to an Apache web server with HTTPS in order to
pass a security audit. The server system to secure was
based on Raspian, a Debian-based Linux distribution.
The Apache version in use was 2.4.11. We prepared
and implemented a ﬁctive Certiﬁcate Authority (CA) in
order to facilitate the process of getting a valid certiﬁcate
and to remove any bias introduced by the procedures
from a certain CA. The ﬁctive CA was available through
a simple web interface and required the submission of
a valid CSR (certiﬁcate signing request) for issuing a
valid certiﬁcate. The user interface was very simplistic
and the browser on the local machine already trusted
our CA. Figure 2 in Appendix A shows a screenshot
of the user interface. We opted for this study setting
as we solely wanted to focus on the actual deployment
process instead of the interaction with a CA. There was
no existing TLS conﬁguration on the system, hence
the participants had to start a new conﬁguration from
scratch. We chose Apache for our experimental setup
as to date, Apache maintains a clear lead regarding in
usage share statistics, followed by Microsoft and nginx,
e.g., [1].
We instructed the participants to make the conﬁgura-
tion as secure as possible, whereas the assignment did not
contain any speciﬁc security requirements, such as which
cipher suites to use or whether to deploy HSTS or not.
In order to collect data, we used a think-aloud protocol.
While the participants were working on the task, they
articulated their thoughts while an experimenter seated
next to them observed their work and took notes. We re-
frained from video recording due to the results from our
pre-test during which we ﬁlmed the sessions and noticed
a severe impact on the participants’ behavior. The par-
ticipants from the pre-study also explicitly reported that
they perceived the cameras as disruptive and distracting,
even though they were placed in a discreet way.
In addition to the notes from the observation, we cap-
tured the bash and browser history and the ﬁnal conﬁg-
uration ﬁles. After completing the task, the participants
were asked to ﬁll out a short questionnaire with closed-
and open-ended questions which covered basic demo-
graphics, previous security experience in industry and
reﬂections on the experiment. The complete assignment
and questionnaire can be found in the Appendix of this
paper.
As a result, we had a collection of both qualitative and
quantitative data that was further used for analysis as de-
scribed in Section 3.3.
3.2 Recruitment and Participants
In contrast to most previous studies in the area of TLS
usability, we focused on users that have proﬁcient knowl-
edge in the ﬁeld of security and privacy-enhancing tech-
nologies. As it was very difﬁcult to recruit participants
from companies, irrespective of a ﬁnancial incentive, we
decided to recruit participants at the university and tar-
geted students that had previously completed a set of se-
curity courses similar to recent studies with expert users,
e.g., [8, 35, 44].
To ensure that our sample reﬂected job requirements
of real world system administrators we reviewed open
job advertisements for system administrators to deter-
mine requirements for participation in our study. We then
invited a selected set of students that completed several
security-related courses to take an online quiz to addi-
tionally assess their knowledge irrespective of their pre-
viously issued grades. The full set of questions from the
quiz can be found in Appendix A. The quiz as well as the
required previously completed university courses were
selected based on a review of 15 open job advertisements
for system administrators in our region. The top 30 stu-
dents with the best scores were then invited to participate
in the lab study, and 28 of them did. The participants’
completed the quiz with scores ranging from 8.21 and 10
(out of 10). The average score was 9.15 (median = 9.37).
The average time to complete the quiz was 6.1 minutes.
Table 1 summarizes key characteristics of the partici-
pants: 2 participants were female, 26 were male; the age
range was 21 to 32 with a median of 23. Their experience
working in industry ranged from 2 to 120 months with a
median of 25 months. 17 of our 28 participants were al-
ready experienced system administrators and reported to
have deployed TLS before.
We are conﬁdent that our participants are suitable
to explore usability challenges in TLS deployment that
real-world system administrators face. To furthermore
strengthen ecological validity of our results we con-
ducted a set of interviews with security auditors (Sec-
tion 5).
USENIX Association
26th USENIX Security Symposium    1341
Demographic
Gender
Female
Male
Age
Min.
Max.
Median
Months worked in industry
Min.
Max.
Median
Experienced as sysadmin
Yes
No
Conﬁgured TLS before
Yes
No