I'm receiving a weird behavior which is: when using tab key to switch between
`TextField` for the **first** time, the position of the `TextField` changes a
little. The following screen shot might better explain the situation. I think
it's because of 'FloatingLabelText` but what I don't understand is why only
tab key's event causes this problem not click event, and why does this
behavior only happens the first time.
  * I have searched the issues of this repository and believe that this is not a duplicate.
## Expected Behavior
When focus on a textfield using tab key, the position should stay the same.
## Current Behavior
![giphy](https://user-
images.githubusercontent.com/19363363/34689918-0b936ee4-f46c-11e7-87c2-110472a28ff6.gif)  
As shown above, only the position of TextField named 'treatmentType' is not
changed because it's focused by click event rather than tab key. And if the
same `TextField` was focused by tab before, its position won't be changed.
## Steps to Reproduce (for bugs)
  1. Render component: Table > TableBody >TableRow >TableRowColumn > TextField
  2. Click on the first `TextField` in the first `TableRowColumn`
  3. Switch focus on the other`TextField` by pressing Tab key.
    class TreatmentContent extends React.Component {
        constructor(props) {
            super(props);
            this.state = {
                type: '',
                notes: '',
                status: '',
                location: '',
                food: '',
                firstName: '',
                lastName: '',
                email: '',
                day: ''
            };
            this.notesToAdd = {
                type: 'text',
                notes: 'text',
                status: 'text',
                location: 'text',
                food: 'text',
                firstName: 'text',
                lastName: 'text',
                email: 'text',
                day: 'number',
            };
            this.reorgTableRow = this.reorgTableRow.bind(this);
        }
        reorgTableRow() {
            const notesKeys = _.keys(this.notesToAdd);
            const chunkedKeys = _.chunk(notesKeys, 3);
            return _.map(chunkedKeys, (keyChunk, i) => (
                    {_.map(keyChunk, (keyName, j) => (
                    ))}
            ));
        }
        render() {
            return (
                            {this.reorgTableRow()}
            );
        }
    }
## Context
## Your Environment
"react": "^15.6.1",  
"material-ui": "latest",  
browser: Chrome v63
Tech | Version  
---|---  
Material-UI |  
React |  
browser |  
etc |