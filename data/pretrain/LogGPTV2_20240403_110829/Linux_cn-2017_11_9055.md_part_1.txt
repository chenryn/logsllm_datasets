---
author: Justin W. Flory
category: 技术
comments_data: []
count:
  commentnum: 0
  favtimes: 2
  likes: 0
  sharetimes: 0
  viewnum: 5568
date: '2017-11-14 19:22:00'
editorchoice: false
excerpt: 在这篇文章中，我将分享以下的内容：创建 RPM SPEC 文件；在 Koji 和 Copr 中构建包；使用调试包处理一个问题；提交这个包到 Fedora
  包集合中。
fromurl: https://blog.justinwflory.com/2017/11/first-rpm-package-fedora/
id: 9055
islctt: true
largepic: /data/attachment/album/201711/14/192342gl900rja78080299.png
permalink: /article-9055-1.html
pic: /data/attachment/album/201711/14/192342gl900rja78080299.png.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 在这篇文章中，我将分享以下的内容：创建 RPM SPEC 文件；在 Koji 和 Copr 中构建包；使用调试包处理一个问题；提交这个包到 Fedora
  包集合中。
tags:
- 打包
- RPM
thumb: false
title: 怎么在 Fedora 中创建我的第一个 RPM 包？
titlepic: true
translator: qhwdw
updated: '2017-11-14 19:22:00'
---
![](/data/attachment/album/201711/14/192342gl900rja78080299.png)
过了这个夏天，我把我的桌面环境迁移到了 i3，这是一个瓦片式窗口管理器。当初，切换到 i3 是一个挑战，因为我必须去处理许多以前 GNOME 帮我处理的事情。其中一件事情就是改变屏幕亮度。 xbacklight 这个在笔记本电脑上改变背光亮度的标准方法，它在我的硬件上不工作了。
最近，我发现一个改变背光亮度的工具 [brightlight](https://github.com/multiplexd/brightlight)。我决定去试一下它，它工作在 root 权限下。但是，我发现 brightligh 在 Fedora 下没有 RPM 包。我决定，是在 Fedora 下尝试创建一个包的时候了，并且可以学习怎么去创建一个 RPM 包。
在这篇文章中，我将分享以下的内容：
* 创建 RPM SPEC 文件
* 在 Koji 和 Copr 中构建包
* 使用调试包处理一个问题
* 提交这个包到 Fedora 包集合中
### 前提条件
在 Fedora 上，我安装了包构建过程中所有步骤涉及到的包。
```
sudo dnf install fedora-packager fedpkg fedrepo_req copr-cli
```
### 创建 RPM SPEC 文件
创建 RPM 包的第一步是去创建 SPEC 文件。这些规范，或者是指令，它告诉 RPM 怎么去构建包。这是告诉 RPM 从包的源代码中创建一个二进制文件。创建 SPEC 文件看上去是整个包处理过程中最难的一部分，并且它的难度取决于项目。
对我而言，幸运的是，brightlight 是一个用 C 写的简单应用程序。维护人员用一个 Makefile 使创建二进制应用程序变得很容易。构建它只是在仓库中简单运行 `make` 的问题。因此，我现在可以用一个简单的项目去学习 RPM 打包。
#### 查找文档
谷歌搜索 “how to create an RPM package” 有很多结果。我开始使用的是 [IBM 的文档](https://www.ibm.com/developerworks/library/l-rpm1/index.html)。然而，我发现它理解起来非常困难，不知所云（虽然十分详细，它可能适用于复杂的 app）。我也在 Fedora 维基上找到了 [创建包](https://fedoraproject.org/wiki/How_to_create_an_RPM_package) 的介绍。这个文档在构建和处理上解释的非常好，但是，我一直困惑于 “怎么去开始呢？”
最终，我找到了 [RPM 打包指南](https://fedoraproject.org/wiki/How_to_create_an_RPM_package)，它是大神 [Adam Miller](https://github.com/maxamillion) 写的。这些介绍非常有帮助，并且包含了三个优秀的示例，它们分别是用 Bash、C 和 Python 编写的程序。这个指南帮我很容易地理解了怎么去构建一个 RPM SPEC，并且，更重要的是，解释了怎么把这些片断拼到一起。
有了这些之后，我可以去写 brightlight 程序的我的 [第一个 SPEC 文件](https://src.fedoraproject.org/rpms/brightlight/blob/master/f/brightlight.spec) 了。因为它是很简单的，SPEC 很短也很容易理解。我有了 SPEC 文件之后，我发现其中有一些错误。处理掉一些错误之后，我创建了源 RPM (SRPM) 和二进制 RPM，然后，我解决了出现的每个问题。
```
rpmlint SPECS/brightlight.spec
rpmbuild -bs SPECS/brightlight.spec
rpmlint SRPMS/brightlight-5-1.fc26.src.rpm
rpmbuild -bb SPECS/brightlight-5-1.fc26.x86_64.rpm
rpmlint RPMS/x86_64/brightlight-5-1.fc26.x86_64.rpm
```
现在，我有了一个可用的 RPM，可以发送到 Fedora 仓库了。
### 在 Copr 和 Koji 中构建
接下来，我读了该 [指南](https://fedoraproject.org/wiki/Join_the_package_collection_maintainers) 中关于怎么成为一个 Fedora 打包者。在提交之前，他们鼓励打包者通过在在 [Koji](https://koji.fedoraproject.org/koji/) 中托管、并在 [Copr](https://copr.fedoraproject.org/) 中构建项目来测试要提交的包。
#### 使用 Copr
首先，我为 brightlight 创建了一个 [Copr 仓库](https://copr.fedorainfracloud.org/coprs/jflory7/brightlight/)，[Copr](https://developer.fedoraproject.org/deployment/copr/about.html) 是在 Fedora 的基础设施中的一个服务，它构建你的包，并且为你任意选择的 Fedora 或 EPEL 版本创建一个定制仓库。它对于快速托管你的 RPM 包，并与其它人去分享是非常方便的。你不需要特别操心如何去托管一个 Copr 仓库。
我从 Web 界面创建了我的 Copr 项目，但是，你也可以使用 `copr-cli` 工具。在 Fedora 开发者网站上有一个 [非常优秀的指南](https://developer.fedoraproject.org/deployment/copr/copr-cli.html)。在该网站上创建了我的仓库之后，我使用这个命令构建了我的包。
```
copr-cli build brightlight SRPMS/brightlight.5-1.fc26.src.rpm
```
我的包在 Corp 上成功构建，并且，我可以很容易地在我的 Fedora 系统上成功安装它。
#### 使用 Koji
任何人都可以使用 [Koji](https://koji.fedoraproject.org/koji/) 在多种架构和 Fedora 或 CentOS/RHEL 版本上测试他们的包。在 Koji 中测试，你必须有一个源 RPM。我希望 brightlight 包在 Fedora 所有的版本中都支持，因此，我运行如下的命令：
```
koji build --scratch f25 SRPMS/brightlight-5-1.fc26.src.rpm
koji build --scratch f26 SRPMS/brightlight-5-1.fc26.src.rpm
koji build --scratch f27 SRPMS/brightlight-5-1.fc26.src.rpm
```
它花费了一些时间，但是，Koji 构建了所有的包。我的包可以很完美地运行在 Fedora 25 和 26 中，但是 Fedora 27 失败了。 Koji 模拟构建可以使我走在正确的路线上，并且确保我的包构建成功。
### 问题：Fedora 27 构建失败！
现在，我已经知道我的 Fedora 27 上的包在 Koji 上构建失败了。但是，为什么呢？我发现在 Fedora 27 上有两个相关的变化。
* [Subpackage and Source Debuginfo](https://fedoraproject.org/wiki/Changes/SubpackageAndSourceDebuginfo)
* [RPM 4.14](https://fedoraproject.org/wiki/Changes/RPM-4.14) (特别是，debuginfo 包重写了)
这些变化意味着 RPM 包必须使用一个 debuginfo 包去构建。这有助于排错或调试一个应用程序。在我的案例中，这并不是关键的或者很必要的，但是，我需要去构建一个。
感谢 Igor Gnatenko，他帮我理解了为什么我在 Fedora 27 上构建包时需要去将这些增加到我的包的 SPEC 中。在 `%make_build` 宏指令之前，我增加了这些行。