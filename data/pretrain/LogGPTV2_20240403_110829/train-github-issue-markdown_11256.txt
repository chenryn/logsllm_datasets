  * I have searched the issues of this repository and believe that this is not a duplicate.
  * I have checked the FAQ of this repository and believe that this is not a duplicate.
### Environment
  * Dubbo version: 2.7.5
  * Operating System version: macos 10.15.2
  * Java version: openJDK8
### Steps to reproduce this issue
  1. create a service named Greeting service
  2. startup two nacos instances representing as two registry center in two different zones.
  3. startup two greeting service instances registering to both nacos registry with different registry id
  4. startup one consumer instance registering to both nacos registry with different zone id.
  5. use consumer to call greeting service with cluster=zone-aware and registry_zone parameter.
The code is simple so I will ignore them and just paste properties as below:
#Provider#
    dubbo.protocol.name=dubbo
    dubbo.protocol.port=12345
    dubbo.config.multiple=true
    dubbo.registries.a.id=nuc
    dubbo.registries.a.address=nacos://127.0.0.1:8848
    dubbo.registries.a.zone=nuc
    dubbo.registries.a.use-as-config-center=false
    dubbo.registries.b.id=mbp
    dubbo.registries.b.address=nacos://192.168.1.31:8848
    dubbo.registries.b.zone=mbp
    dubbo.registries.b.use-as-config-center=false
#Consumer#
    server.port=0
    ## Dubbo Registry
    dubbo.registry.address=nacos://127.0.0.1:8848?zone=nuc|nacos://192.168.1.31:8848?zone=mbp
    dubbo.registry.zone
    dubbo.registry.use-as-config-center=false
        public String hello(String name) {
            logger.info(name);
            RpcContext.getContext().setAttachment("cluster", "zone-aware");
            RpcContext.getContext().setAttachment("registry_zone", "nuc");
            return greetingService.sayHelloTo(name);
        }
### Expected Result
I'm confused here, I don't know what to expect. According to the explanation
by @chickenlj in #5399 , One provider instance such as B1 should be able to
register to multiple registries in the same time.
![](https://user-
images.githubusercontent.com/18097545/70682056-8ea65300-1cd8-11ea-8e9b-cf6284e04e48.png)
But ZoneAware policy is being executed in ClusterInvoker level. The
ZoneAwareClusterInvoker use zone value to decide which FailoverClusterInvoker
(contains RegsitryDirectory). I know there is a bug in 2.7.5 that will drop
zone parameter #5654 , but this doesn't matter. Even if that is fixed in
2.7.6, the problem is still there, that is:
you choose the right registry, but the registry still list all available
DubboInvoker (B1, B2), meanwhile, there is no LoadBalance based on zone value
as there is no such value on provider. The consumer A1 can still go to B2 even
when B1 is alive.
### Actual Result
When using zone-aware policy, should one service instance can only register to
one registry? but this will lose the ability to use services in other zone as
a backup. Am I missing something?...