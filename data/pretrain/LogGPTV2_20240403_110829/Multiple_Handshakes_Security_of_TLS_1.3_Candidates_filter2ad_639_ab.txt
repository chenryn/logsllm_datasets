allow the adversary to determine the type of authentication,
i.e., unauthenticated, unilaterally authenticated, or mutually
authenticated. We also allow executions of different authen-
tication types to run concurrently, even within a single party.
In summary, the basic goal of a secure multiple handshakes
protocol is that (a) whenever parties successfully ﬁnish the
protocol, they should have match security guarantees such as
identical keys in partnered sessions, authenticity of the partner
(if needed), and collision-freeness of session identiﬁers, and
(b) the adversary should not be able to distinguish between
the real session key produced by the protocol and a random
key drawn from the same distribution. Moreover, our multiple
handshakes security model can be applied to analyze the
compositional security of other key exchange protocols with
different running modes.
Security of multiple handshakes protocols in TLS 1.3 draft.
One of our main contributions is the ﬁrst formal security
analysis of multiple handshakes of TLS 1.3 candidates in
combinational running setting, covering the various interac-
tions of handshake modes. We show that TLS 1.3 multiple
handshakes protocol achieves the main goal of providing
secure authenticated key exchange in the Multi-Level&Stage
security model.
Our approach for proving the multiple handshakes security
of TLS 1.3 draft is modular. We cannot make use of existing
security results via some kind of the compositional framework
of Brzuska et al. [29] or the subsequent works such as
[22] and [19], because 0-RTT cannot be seen as a secure
symmetric-key protocol while PSK/resumption as a secure
key exchange protocol cannot provide forward secrecy, neither
of which satisﬁes the condition of the composition theorem.
Instead, via an induction approach, we show that if a multiple
handshakes protocol Π is secure in the Multi-Level&Stage
(cid:2),
security model, then new multiple handshakes protocol Π
by combining Π with a handshake session whose mode may
be any kind of handshake mode allowed in TLS 1.3 draft,
is still Multi-Level&Stage-secure, thus we can prove the
multiple handshakes security in TLS 1.3 draft. And by doing
so, our study details the exact level of security the multiple
handshakes protocol provides, for instance, by combining Π
with 0-RTT protocol, we can prove the new added session
is secure in a key-independent and stage-2-forward-secrecy
manner.
Also note that we just focus on the permitted composi-
tion according to the TLS 1.3 draft-10. Specially, the draft
disallows a new ServerConﬁguration to be provided in a
PSK-based resumption handshake, and thus 0-RTT handshakes
cannot be dependent on PSK-based resumption handshakes
and we will leave out this case.
In summary, our work sheds light on important design of
TLS 1.3 draft that would be helpful for its standardization.
On a high level, our provable security analysis conﬁrms the
soundness of TLS 1.3 security protection design.
Multiple handshakes (In)security of TLS 1.2. By recall-
ing the triple handshake attack of Bhargavan et al. [5], we
discuss how TLS 1.2 without countermeasures is not secure
in our multiple handshakes security model. We subsequently
analyze the security of TLS 1.2 with the extended master
secret extension of RFC 7627 [30] and show that TLS 1.2
with countermeasures offers good protection against multiple
handshakes attack. Our analysis of TLS 1.2 again conﬁrms the
soundness of multiple handshakes security model.
II. THE TLS 1.3 DRAFT-10 HANDSHAKE PROTOCOL
In TLS 1.3 draft, there are four primary handshake modes:
full handshake mode, 0-RTT mode, PSK based resumption (P-
SK/resumption) mode, and PSK based resumption combining
with (EC)DHE (PSK/resumption-(EC)DHE) mode.
488488
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:15:40 UTC from IEEE Xplore.  Restrictions apply. 
ǆ^(cid:3)(cid:1370) (cid:11)(cid:14)(cid:7)(cid:9)(cid:484) (cid:8)(cid:154)(cid:150)(cid:148)(cid:131)(cid:133)(cid:150)(cid:4666)(cid:882)(cid:481) (cid:8)(cid:22)(cid:4667)(cid:3)
ǆ^^(cid:3)(cid:1370) (cid:11)(cid:14)(cid:7)(cid:9)(cid:484) (cid:8)(cid:154)(cid:150)(cid:148)(cid:131)(cid:133)(cid:150)(cid:4666)(cid:882)(cid:481) (cid:22)(cid:22)(cid:4667)(cid:3)
(cid:150)(cid:141)(cid:1860)(cid:1871) (cid:1370) (cid:11)(cid:14)(cid:7)(cid:9)(cid:484) (cid:8)(cid:154)(cid:146)(cid:131)(cid:144)(cid:134)(cid:4666)(cid:154)(cid:8)(cid:22)(cid:481) (cid:142)(cid:131)(cid:132)(cid:135)(cid:142)(cid:883)(cid:481) (cid:11)(cid:883)(cid:4667)(cid:3)
(cid:149)(cid:150)(cid:131)(cid:137)(cid:135) (cid:883)(cid:3)
^ĞƌǀĞƌ(cid:3)^
^ĞƌǀĞƌ,ĞůůŽ͗(cid:3) (cid:1870)(cid:1871) (cid:1370) (cid:836)(cid:4668)(cid:882)(cid:481)(cid:883)(cid:4669)(cid:1864)(cid:3)
н<ĞǇ^ŚĂƌĞ͗(cid:3) (cid:28) (cid:1370) (cid:1859)(cid:1877) (cid:3)
(cid:22)(cid:22)(cid:481) (cid:8)(cid:22) (cid:1370) (cid:27)(cid:1877) (cid:3)
(cid:3) ΂ŶĐƌǇƉƚĞĚǆƚĞŶƐŝŽŶƐ΃(cid:3)
΂(cid:22)(cid:135)(cid:148)(cid:152)(cid:135)(cid:148)(cid:6)(cid:145)(cid:144)(cid:136)(cid:139)(cid:137)(cid:151)(cid:148)(cid:131)(cid:150)(cid:139)(cid:145)(cid:144)(cid:1499)(cid:4669)(cid:3)
΂^ĞƌǀĞƌ(cid:6)(cid:135)(cid:148)(cid:150)(cid:139)(cid:136)(cid:139)(cid:133)(cid:131)(cid:150)(cid:135)(cid:1499)΃(cid:3)
΂(cid:6)(cid:135)(cid:148)(cid:150)(cid:139)(cid:136)(cid:139)(cid:133)(cid:131)(cid:150)(cid:135)(cid:21)(cid:135)(cid:147)(cid:151)(cid:135)(cid:149)(cid:150)(cid:1499)΃(cid:3)
΂^ĞƌǀĞƌ(cid:6)(cid:135)(cid:148)(cid:150)(cid:139)(cid:136)(cid:139)(cid:133)(cid:131)(cid:150)(cid:135)(cid:25)(cid:135)(cid:148)(cid:139)(cid:136)(cid:155)(cid:1499)΃(cid:3)
^s(cid:3)(cid:1370) (cid:22)(cid:139)(cid:137)(cid:144)(cid:4666)(cid:1871)(cid:1863)(cid:1845)(cid:481) (cid:11)(cid:884)(cid:4667)(cid:3)
΂(cid:22)(cid:135)(cid:148)(cid:152)(cid:135)(cid:148)(cid:9)(cid:139)(cid:144)(cid:139)(cid:149)(cid:138)(cid:135)(cid:134)΃(cid:3)
^&(cid:3) (cid:1370) (cid:11)(cid:16)(cid:4)(cid:6)(cid:4666)(cid:9)(cid:22)(cid:481) (cid:142)(cid:131)(cid:132)(cid:135)(cid:142)(cid:885)(cid:481) (cid:11)(cid:885)(cid:4667)(cid:3)
ůŝĞŶƚ(cid:3)
ůŝĞŶƚ,ĞůůŽ͗(cid:3) (cid:1870)(cid:1855) (cid:1370) (cid:836)(cid:4668)(cid:882)(cid:481)(cid:883)(cid:4669)(cid:1864)(cid:3)
н<ĞǇ^ŚĂƌĞ͗(cid:3) (cid:27) (cid:1370) (cid:1859)(cid:1876) (cid:3)
^^͕(cid:8)(cid:22) (cid:1370) (cid:28)(cid:1876)(cid:3)
&^(cid:3) (cid:1370) (cid:11)(cid:14)(cid:7)(cid:9)(cid:484) (cid:8)(cid:154)(cid:146)(cid:131)(cid:144)(cid:134)(cid:4666)(cid:154)(cid:22)(cid:22)(cid:481) (cid:142)(cid:131)(cid:132)(cid:135)(cid:142)(cid:884)(cid:481) (cid:11)(cid:885)(cid:4667)(cid:3)
sĞƌŝĨǇ(cid:4666)(cid:1868)(cid:1863)(cid:1845)(cid:481) (cid:22)(cid:6)(cid:25)(cid:481) (cid:11)(cid:884)(cid:4667)(cid:3)
ŚĞĐŬ(cid:3)^&с(cid:11)(cid:16)(cid:4)(cid:6)(cid:4666)(cid:9)(cid:22)(cid:481) (cid:142)(cid:131)(cid:132)(cid:135)(cid:142)(cid:885)(cid:481) (cid:11)(cid:885)(cid:4667)(cid:3)
΂ůŝĞŶƚ(cid:6)(cid:135)(cid:148)(cid:150)(cid:139)(cid:136)(cid:139)(cid:133)(cid:131)(cid:150)(cid:135)(cid:1499)΃(cid:3)
΂ůŝĞŶƚ(cid:6)(cid:135)(cid:148)(cid:150)(cid:139)(cid:136)(cid:139)(cid:133)(cid:131)(cid:150)(cid:135)(cid:25)(cid:135)(cid:148)(cid:139)(cid:136)(cid:155)(cid:1499)΃(cid:3)
(cid:6)(cid:6)(cid:25) (cid:1370) (cid:22)(cid:139)(cid:137)(cid:144)(cid:4666)(cid:1871)(cid:1863)(cid:1829)(cid:481) (cid:11)(cid:886)(cid:4667)(cid:3)
΂(cid:6)(cid:142)(cid:139)(cid:135)(cid:144)(cid:150)(cid:9)(cid:139)(cid:144)(cid:139)(cid:149)(cid:138)(cid:135)(cid:134)΃(cid:3)
&с(cid:11)(cid:16)(cid:4)(cid:6)(cid:4666)(cid:9)(cid:22)(cid:481) (cid:142)(cid:131)(cid:132)(cid:135)(cid:142)(cid:886)(cid:481) (cid:11)(cid:887)(cid:4667)(cid:3)
sĞƌŝĨǇ(cid:4666)(cid:1868)(cid:1863)(cid:1829)(cid:481) (cid:6)(cid:6)(cid:25)(cid:481) (cid:11)(cid:886)(cid:4667)(cid:3)
ŚĞĐŬ(cid:3)&с(cid:11)(cid:16)(cid:4)(cid:6)(cid:4666)(cid:9)(cid:22)(cid:481) (cid:142)(cid:131)(cid:132)(cid:135)(cid:142)(cid:886)(cid:481) (cid:11)(cid:887)(cid:4667)(cid:3)
(cid:143)(cid:8)(cid:22) (cid:1370) (cid:11)(cid:14)(cid:7)(cid:9)(cid:484) (cid:8)(cid:154)(cid:146)(cid:131)(cid:144)(cid:134)(cid:4666)(cid:154)(cid:8)(cid:22)(cid:481) (cid:142)(cid:131)(cid:132)(cid:135)(cid:142)(cid:887)(cid:481) (cid:11)(cid:885)(cid:4667)(cid:3)
ŵ^^(cid:3) (cid:1370) (cid:11)(cid:14)(cid:7)(cid:9)(cid:484) (cid:8)(cid:154)(cid:146)(cid:131)(cid:144)(cid:134)(cid:4666)(cid:154)(cid:22)(cid:22)(cid:481) (cid:142)(cid:131)(cid:132)(cid:135)(cid:142)(cid:888)(cid:481) (cid:11)(cid:885)(cid:4667)(cid:3)
D^(cid:3) (cid:1370) (cid:11)(cid:14)(cid:7)(cid:9)(cid:484) (cid:8)(cid:154)(cid:150)(cid:148)(cid:131)(cid:133)(cid:150)(cid:4666)(cid:143)(cid:22)(cid:22)(cid:481) (cid:143)(cid:8)(cid:22)(cid:4667)(cid:3)
(cid:150)(cid:141)(cid:1853)(cid:1868)(cid:1868) (cid:1370) (cid:11)(cid:14)(cid:7)(cid:9)(cid:484) (cid:8)(cid:154)(cid:146)(cid:131)(cid:144)(cid:134)(cid:4666)(cid:16)(cid:22)(cid:481) (cid:142)(cid:131)(cid:132)(cid:135)(cid:142)(cid:889)(cid:481) (cid:11)(cid:887)(cid:4667)(cid:3)
ZD^(cid:3) (cid:1370) (cid:11)(cid:14)(cid:7)(cid:9)(cid:484) (cid:8)(cid:154)(cid:146)(cid:131)(cid:144)(cid:134)(cid:4666)(cid:16)(cid:22)(cid:481) (cid:142)(cid:131)(cid:132)(cid:135)(cid:142)(cid:890)(cid:481) (cid:11)(cid:887)(cid:4667)(cid:3)
D^(cid:3) (cid:1370) (cid:11)(cid:14)(cid:7)(cid:9)(cid:484) (cid:8)(cid:154)(cid:146)(cid:131)(cid:144)(cid:134)(cid:4666)(cid:16)(cid:22)(cid:481) (cid:142)(cid:131)(cid:132)(cid:135)(cid:142)(cid:891)(cid:481) (cid:11)(cid:887)(cid:4667)(cid:3)
(cid:149)(cid:150)(cid:131)(cid:137)(cid:135) (cid:884)(cid:3)
(cid:149)(cid:150)(cid:131)(cid:137)(cid:135) (cid:885)(cid:3)
(cid:149)(cid:150)(cid:131)(cid:137)(cid:135) (cid:886)(cid:3)
΀EĞǁ^ĞƐƐŝŽŶdŝĐŬĞƚ΁(cid:3)
Fig. 1. The full handshake protocol in TLS 1.3 draft-10. {XXX} indicates a
message XXX encrypted using AEAD encryption with handshake trafﬁc key
tkhs. [XXX] indicates a message XXX encrypted using AEAD encryption
with application trafﬁc key tkapp. XXX∗ indicates a message that can
be transmitted optionally. Hi denotes the hash of the handshake messages
containing the messages starting at ClientHello up to the present time with
the exception of the Finished message.
A. draft-10 Full Handshake
Figure 1 shows the message ﬂow and relevant cryptographic
computations as well as the key schedule for the full hand-
shake in draft-10.
The handshake messages are as follows:
. ClientHello/ServerHello contain the supported versions
and ciphersuites for negotiation, as well as random nonces
rc resp. rs. Both messages can also include HelloExtension
ﬁeld.
. KeyShare contains the ephemeral Difﬁe-Hellman shares
X = gx resp. Y = gy for the group selected by
ClientHello/ServerHello. These messages are included in
HelloExtension ﬁeld.
. EncryptedExtension is the ﬁrst message that is encrypted
. ServerConﬁguration contains the semi-static (EC)DHE
under tkhs.
share for 0-RTT in the future,
identiﬁed by an unique
Conﬁguration id .
authentication using a certiﬁcate.
certiﬁcate of the respective party.
. ServerCertiﬁcate/ClientCertiﬁcate contain the public-key
. CertiﬁcateRequest indicates the server requests for client
. ServerCertiﬁcateVerify/ClientCertiﬁcateVerify contain a
. ClientFinished/ServerFinished contain the HMAC evalu-
. NewSessionTicket creates a pre-shared key (PSK) binding
ation on the session hash under the ﬁnished key FS.
digital signature over the session hash.
between the resumption master secret and the ticket label
for PSK/resumption in the future.
In full handshake protocol, both parties can negotiate ci-
phersuites and key-exchange parameters, and compute the key
at the corresponding stage which has been listed in Figure 1.
At the end of the handshake, both parties can compute the
application trafﬁc key tkapp, the resumption master key RMS,
and the exporter master key EMS. Moreover, key derivation
is done using the HKDF extract-then-expand key derivation
function [31][32], rather than the TLS PRF.
B. draft-10 0-RTT Handshake
Figure 2 shows the message ﬂow and relevant cryptographic
computations as well as the key schedule for the 0-RTT
handshake in draft-10. In 0-RTT handshake protocol, within
the ClientHello message the client sends its EarlyDataIndi-
cation message containing the conﬁguration id informa-
tion to request a 0-RTT handshake. The server accepts the
EarlyDataIndication extension only if the conﬁguration id
matches a known ServerConﬁguration, and then both the
parties use the server’s semi-static key share S = gs to run 0-
RTT, otherwise the handshake will fall back to 1-RTT, where
gs and conﬁguration id contained in a ServerConﬁguration
message are provided by the server in its last session.
The main difference from the full handshake is that SS
would not be equal to ES any more, and the client can send
the application data as well as its Certiﬁcate and Certiﬁcat-
eVerify (if client authentication is required) on its ﬁrst ﬂight
under the key Eadk.
C. draft-10 PSK/resumption and PSK/resumption-(EC)DHE
handshake
Figure 3 shows the message ﬂow and relevant crypto-
graphic computations as well as the key schedule for the
PSK/resumption in draft-10, where ClientHello includes a
PreSharedKeyExtension to indicate the identity of the pre-
shared key of some previously established session. The client
and server set the SS and ES to previous session’s resumption
master secret RMS (denoted by PSK in Figure 3), which has
been authenticated, so they do not exchange key shares or
signatures, and only exchange fresh nonces to derive the new
keys quickly.
Note that PSK/resumption mode does not achieve forward
secrecy, but can be augmented with a (EC)DHE exchange to
provide forward secrecy in combination with the shared keys,
namely PSK/resumption-(EC)DHE mode.
489489
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:15:40 UTC from IEEE Xplore.  Restrictions apply. 
^ĞƌǀĞƌ(cid:3)^
ůŝĞŶƚ(cid:3)
ůŝĞŶƚ,ĞůůŽ͗(cid:3) (cid:1870)(cid:1855) (cid:1370) (cid:836)(cid:4668)(cid:882)(cid:481)(cid:883)(cid:4669)(cid:1864)(cid:3)
нWƌĞ^ŚĂƌĞĚ<ĞǇǆƚĞŶƐŝŽŶ(cid:3)
ǆ(cid:22)(cid:22) (cid:1370) (cid:11)(cid:14)(cid:7)(cid:9)(cid:484) (cid:8)(cid:154)(cid:150)(cid:148)(cid:131)(cid:133)(cid:150)(cid:4666)(cid:882)(cid:481) (cid:22)(cid:22)(cid:4667)(cid:3)
ĂĚŬ(cid:3)(cid:1370) (cid:11)(cid:14)(cid:7)(cid:9)(cid:484) (cid:8)(cid:154)(cid:146)(cid:131)(cid:144)(cid:134)(cid:4666)(cid:154)(cid:22)(cid:22)(cid:481) (cid:142)(cid:131)(cid:132)(cid:135)(cid:142)(cid:883)(cid:481) (cid:11)(cid:883)(cid:4667)(cid:3)
(cid:22)(cid:22) (cid:1370) (cid:27)(cid:1871)
(cid:149)(cid:150)(cid:131)(cid:137)(cid:135) (cid:883)(cid:3)
^^͕(cid:8)(cid:22) (cid:1370) (cid:19)(cid:22)(cid:14)(cid:3)
^ĞƌǀĞƌ(cid:3)^
^ĞƌǀĞƌ,ĞůůŽ͗(cid:3) (cid:1870)(cid:1871) (cid:1370) (cid:836)(cid:4668)(cid:882)(cid:481)(cid:883)(cid:4669)(cid:1864)(cid:3)
(cid:3) нWƌĞ^ŚĂƌĞĚ<ĞǇǆƚĞŶƐŝŽŶ(cid:3)
(cid:22)(cid:22)(cid:481) (cid:8)(cid:22) (cid:1370) (cid:19)(cid:22)(cid:14)(cid:3)
ůŝĞŶƚ(cid:3)
ůŝĞŶƚ,ĞůůŽ͗(cid:3) (cid:1870)(cid:1855) (cid:1370) (cid:836)(cid:4668)(cid:882)(cid:481)(cid:883)(cid:4669)(cid:1864)(cid:3)
н<ĞǇ^ŚĂƌĞ͗(cid:3) (cid:27) (cid:1370) (cid:1859)(cid:1876) (cid:3)
нĂƌůǇĂƚĂ/ŶĚŝĐĂƚŝŽŶ(cid:3)
(cid:22)(cid:22) (cid:1370) (cid:22)(cid:1876)(cid:3)
(cid:3) ;ŶĐƌǇƉƚĞĚǆƚĞŶƐŝŽŶƐ(cid:4667)(cid:3)
;(cid:6)(cid:142)(cid:139)(cid:135)(cid:144)(cid:150)(cid:6)(cid:135)(cid:148)(cid:150)(cid:139)(cid:136)(cid:139)(cid:133)(cid:131)(cid:150)(cid:135)(cid:1499)Ϳ(cid:3)
;(cid:6)(cid:142)(cid:139)(cid:135)(cid:144)(cid:150)(cid:6)(cid:135)(cid:148)(cid:150)(cid:139)(cid:136)(cid:139)(cid:133)(cid:131)(cid:150)(cid:135)(cid:25)(cid:135)(cid:148)(cid:139)(cid:136)(cid:155)(cid:1499)Ϳ(cid:3)
s(cid:3)(cid:1370) (cid:22)(cid:139)(cid:137)(cid:144)(cid:4666)(cid:1871)(cid:1863)(cid:1829)(cid:481) (cid:11)(cid:884)(cid:4667)(cid:3)
;ƉƉůŝĐĂƚŝŽŶ(cid:3)ĂƚĂͿ(cid:3)
ǆ^(cid:3)(cid:1370) (cid:11)(cid:14)(cid:7)(cid:9)(cid:484) (cid:8)(cid:154)(cid:150)(cid:148)(cid:131)(cid:133)(cid:150)(cid:4666)(cid:882)(cid:481) (cid:8)(cid:22)(cid:4667)(cid:3)
ǆ^^(cid:3)(cid:1370) (cid:11)(cid:14)(cid:7)(cid:9)(cid:484) (cid:8)(cid:154)(cid:150)(cid:148)(cid:131)(cid:133)(cid:150)(cid:4666)(cid:882)(cid:481) (cid:22)(cid:22)(cid:4667)(cid:3)
(cid:150)(cid:141)(cid:1860)(cid:1871) (cid:1370) (cid:11)(cid:14)(cid:7)(cid:9)(cid:484) (cid:8)(cid:154)(cid:146)(cid:131)(cid:144)(cid:134)(cid:4666)(cid:154)(cid:8)(cid:22)(cid:481) (cid:142)(cid:131)(cid:132)(cid:135)(cid:142)(cid:883)(cid:481) (cid:11)(cid:883)(cid:4667)(cid:3)
(cid:149)(cid:150)(cid:131)(cid:137)(cid:135)(cid:3)(cid:883)(cid:3)
(cid:3) ΂ŶĐƌǇƉƚĞĚǆƚĞŶƐŝŽŶƐ΃
&^(cid:3) (cid:1370) (cid:11)(cid:14)(cid:7)(cid:9)(cid:484) (cid:8)(cid:154)(cid:146)(cid:131)(cid:144)(cid:134)(cid:4666)(cid:154)(cid:22)(cid:22)(cid:481) (cid:142)(cid:131)(cid:132)(cid:135)(cid:142)(cid:884)(cid:481) (cid:11)(cid:884)(cid:4667)(cid:3)
΂(cid:22)(cid:135)(cid:148)(cid:152)(cid:135)(cid:148)(cid:9)(cid:139)(cid:144)(cid:139)(cid:149)(cid:138)(cid:135)(cid:134)΃
^&(cid:3) (cid:1370) (cid:11)(cid:16)(cid:4)(cid:6)(cid:4666)(cid:9)(cid:22)(cid:481) (cid:142)(cid:131)(cid:132)(cid:135)(cid:142)(cid:885)(cid:481) (cid:11)(cid:884)(cid:4667)
ŚĞĐŬ(cid:3)^&с(cid:11)(cid:16)(cid:4)(cid:6)(cid:4666)(cid:9)(cid:22)(cid:481) (cid:142)(cid:131)(cid:132)(cid:135)(cid:142)(cid:885)(cid:481) (cid:11)(cid:884)(cid:4667)(cid:3)
&с(cid:11)(cid:16)(cid:4)(cid:6)(cid:4666)(cid:9)(cid:22)(cid:481) (cid:142)(cid:131)(cid:132)(cid:135)(cid:142)(cid:886)(cid:481) (cid:11)(cid:884)(cid:4667)(cid:3)
ŚĞĐŬ(cid:3)&с(cid:11)(cid:16)(cid:4)(cid:6)(cid:4666)(cid:9)(cid:22)(cid:481) (cid:142)(cid:131)(cid:132)(cid:135)(cid:142)(cid:886)(cid:481) (cid:11)(cid:884)(cid:4667)(cid:3)
(cid:143)(cid:8)(cid:22) (cid:1370) (cid:11)(cid:14)(cid:7)(cid:9)(cid:484) (cid:8)(cid:154)(cid:146)(cid:131)(cid:144)(cid:134)(cid:4666)(cid:154)(cid:8)(cid:22)(cid:481) (cid:142)(cid:131)(cid:132)(cid:135)(cid:142)(cid:887)(cid:481) (cid:11)(cid:884)(cid:4667)(cid:3)
ŵ^^(cid:3) (cid:1370) (cid:11)(cid:14)(cid:7)(cid:9)(cid:484) (cid:8)(cid:154)(cid:146)(cid:131)(cid:144)(cid:134)(cid:4666)(cid:154)(cid:22)(cid:22)(cid:481) (cid:142)(cid:131)(cid:132)(cid:135)(cid:142)(cid:888)(cid:481) (cid:11)(cid:884)(cid:4667)(cid:3)
D^(cid:3) (cid:1370) (cid:11)(cid:14)(cid:7)(cid:9)(cid:484) (cid:8)(cid:154)(cid:150)(cid:148)(cid:131)(cid:133)(cid:150)(cid:4666)(cid:143)(cid:22)(cid:22)(cid:481) (cid:143)(cid:8)(cid:22)(cid:4667)(cid:3)
(cid:150)(cid:141)(cid:1853)(cid:1868)(cid:1868) (cid:1370) (cid:11)(cid:14)(cid:7)(cid:9)(cid:484) (cid:8)(cid:154)(cid:146)(cid:131)(cid:144)(cid:134)(cid:4666)(cid:16)(cid:22)(cid:481) (cid:142)(cid:131)(cid:132)(cid:135)(cid:142)(cid:889)(cid:481) (cid:11)(cid:884)(cid:4667)(cid:3)
ZD^(cid:3) (cid:1370) (cid:11)(cid:14)(cid:7)(cid:9)(cid:484) (cid:8)(cid:154)(cid:146)(cid:131)(cid:144)(cid:134)(cid:4666)(cid:16)(cid:22)(cid:481) (cid:142)(cid:131)(cid:132)(cid:135)(cid:142)(cid:890)(cid:481) (cid:11)(cid:884)(cid:4667)
D^(cid:3) (cid:1370) (cid:11)(cid:14)(cid:7)(cid:9)(cid:484) (cid:8)(cid:154)(cid:146)(cid:131)(cid:144)(cid:134)(cid:4666)(cid:16)(cid:22)(cid:481) (cid:142)(cid:131)(cid:132)(cid:135)(cid:142)(cid:891)(cid:481) (cid:11)(cid:884)(cid:4667)(cid:3)
(cid:149)(cid:150)(cid:131)(cid:137)(cid:135)(cid:3)(cid:884)(cid:3)
(cid:149)(cid:150)(cid:131)(cid:137)(cid:135)(cid:3)(cid:885)(cid:3)
(cid:149)(cid:150)(cid:131)(cid:137)(cid:135)(cid:3)(cid:886)(cid:3)
΀EĞǁ^ĞƐƐŝŽŶdŝĐŬĞƚ΁
The PSK/resumption handshake protocol
Fig. 3.
in TLS 1.3 draft-10.
P SK comes from the resumption master secret RMS during the established
connection between the same two parties. (XXX) indicates a message XXX
encrypted using AEAD encryption with early data trafﬁc key Eadk, and other
messages can be deﬁned similarly to that in Figure 1.
and Rogaway [28]. The formalization of our notions is inspired
by the notation used by Dowling et al. [19].
A. Overview
Before diving into the technical details, let us ﬁrst describe
the hierarchical architecture for multiple handshakes protocols.
The hierarchical architecture consists of multiple levels, and
in each level, there can be multiple nodes, where each node
denotes one handshake session, and particularly the node in the
ﬁrst level (root level) only denotes session of full handshake
mode.
More speciﬁcally, we also assume in the same level, dif-
ferent sessions are running independently and concurrently,
however they can share the same PSK (the PSK/resumption
case), and sessions in some level can exist only based on the
session in its last level. We will describe this formally later.
A multiple handshakes protocol running is represented by
the nodes on the path from the root level to the leaf level. On
this path the session in some level is dependent on the session
in the last level, and more specially, one session may use the
key materials established or transmitted during its last session.
For example, as shown in Figure 4, in a three-level hier-
archy, the bold line indicates a “full handshake + 0-RTT +
PSK/resumption” multiple handshakes running. In this case
the ServerConﬁguration used in 0-RTT comes from the full
(cid:8)(cid:22) (cid:1370) (cid:28)(cid:1876) (cid:3)
ǆ^(cid:3)(cid:1370) (cid:11)(cid:14)(cid:7)(cid:9)(cid:484) (cid:8)(cid:154)(cid:150)(cid:148)(cid:131)(cid:133)(cid:150)(cid:4666)(cid:882)(cid:481) (cid:8)(cid:22)(cid:4667)(cid:3)
(cid:150)(cid:141)(cid:1860)(cid:1871) (cid:1370) (cid:11)(cid:14)(cid:7)(cid:9)(cid:484) (cid:8)(cid:154)(cid:146)(cid:131)(cid:144)(cid:134)(cid:4666)(cid:154)(cid:8)(cid:22)(cid:481) (cid:142)(cid:131)(cid:132)(cid:135)(cid:142)(cid:884)(cid:481) (cid:11)(cid:885)(cid:4667)(cid:3)