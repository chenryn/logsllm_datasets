of vulnerable sites revoked their certiﬁcates, Heartbleed placed an
unprecedented strain on certiﬁcate authorities and revocation infras-
tructure. In the three months following public disclosure, about as
many revocations were processed by CAs as in the three years pro-
ceeding the incident. Wholesale revocation such as required by an
event like Heartbleed stresses the scalability of basing revocation on
the distribution of large lists of revoked certiﬁcates. As a result, CAs
were backlogged with revocation processing and saddled with unex-
pected ﬁnancial costs for CRL distribution—CloudFlare alone paid
$400,000 per month in bandwidth [60]. The community needs to de-
Figure 10: Patch Rates for Different Response Types. Condi-
tioning on the sort of reply we received for a given notiﬁcation
reveals statistically signiﬁcant differences.
system to automatically process notiﬁcations and complaints will
still often react appropriately.
Over 77% of the contacts never responded. After one day,
20% of such contacts had conducted some patching; after three
weeks, 59% had. Right before Group B’s notiﬁcations, the patch
rate of these contacts was statistically signiﬁcantly higher than
Group B’s patch rate. This shows that even when system opera-
tors do not respond when notiﬁed, they often still patch vulnerable
systems.
7.3 Responses
In our ﬁrst group of notiﬁcations, on April 28, 2014, we contacted
2,308 abuse contacts and received email responses from 514 con-
tacts. Of these 59 (11%) were clearly human-generated, 197 (38%)
were automated, and 258 (50%) were delivery failures. We received
16 automated emails where we subsequently received a human re-
sponse; these we classiﬁed as human (thus, in total we received
530 emails). The vast majority of responses (88%) were in English;
other common languages included Russian, German, Portuguese,
and Spanish.
We classiﬁed a positive response as one that thanked us or stated
their plan to remedy their vulnerable hosts. The human-generated
responses were overall very positive (54/59), with only three that
we deemed neutral, and two negative. The two negative responses
questioned the legality of our scan despite our explicit explanation
that we did not exploit the vulnerability.
Automated messages came in four forms: conﬁrmations (24%),
tickets (44%), trackers (23%), and miscellaneous bounces (9%; pri-
marily out-of-ofﬁce notices and “no longer working here" messages).
Conﬁrmation emails conﬁrmed the receipt of our notiﬁcation; tick-
ets provided a reference or ticket identiﬁer to associate with our
notiﬁcation message; and trackers were tickets that also explicitly
provided a link to a support site to track progress on opened tickets.
Curiously, 21 of the 45 trackers did not provide the credentials to
log into the support website, 2 provided invalid credentials, and
3 did not have our ticket listed on their support site. In the week
following our notiﬁcation, we were informed that 19 tickets were
closed, although only 4 provided any reasoning.
Out of the 258 delivery failure replies, 197 indicated the recipient
did not receive our notiﬁcation. Other error messages included full
inboxes or ﬁltering due to spam, and several did not describe a clear
error. We observed 30 delayed and retrying emails, but all timed-out
within three days.
(cid:1)(cid:2)(cid:3)(cid:1)(cid:2)(cid:4)(cid:1)(cid:2)(cid:5)(cid:1)(cid:2)(cid:6)(cid:1)(cid:2)(cid:7)(cid:1)(cid:1)(cid:2)(cid:1)(cid:4)(cid:8)(cid:3)(cid:9)(cid:1)(cid:10)(cid:8)(cid:1)(cid:5)(cid:1)(cid:10)(cid:8)(cid:7)(cid:11)(cid:1)(cid:10)(cid:8)(cid:3)(cid:1)(cid:12)(cid:13)(cid:14)(cid:15)(cid:13)(cid:16)(cid:17)(cid:18)(cid:19)(cid:13)(cid:20)(cid:21)(cid:22)(cid:23)(cid:21)(cid:24)(cid:22)(cid:17)(cid:25)(cid:26)(cid:13)(cid:27)(cid:21)(cid:28)(cid:25)(cid:17)(cid:29)(cid:21)(cid:30)(cid:22)(cid:31)(cid:13)(cid:21)(cid:32)(cid:12)(cid:20)(cid:21)(cid:12)(cid:18)(cid:17)(cid:15)(cid:29)(cid:13)(cid:27)(cid:33)(cid:25)(cid:31)(cid:13)(cid:21)(cid:22)(cid:23)(cid:21)(cid:30)(cid:15)(cid:18)(cid:16)(cid:20)(cid:34)(cid:35)(cid:31)(cid:18)(cid:16)(cid:21)(cid:36)(cid:13)(cid:20)(cid:37)(cid:22)(cid:16)(cid:20)(cid:13)(cid:20)(cid:38)(cid:35)(cid:17)(cid:22)(cid:31)(cid:18)(cid:17)(cid:13)(cid:27)(cid:21)(cid:36)(cid:13)(cid:20)(cid:37)(cid:22)(cid:16)(cid:20)(cid:13)(cid:20)(cid:24)(cid:22)(cid:21)(cid:36)(cid:13)(cid:20)(cid:37)(cid:22)(cid:16)(cid:20)(cid:13)(cid:20)(cid:39)(cid:13)(cid:40)(cid:25)(cid:41)(cid:13)(cid:14)(cid:42)(cid:21)(cid:43)(cid:18)(cid:25)(cid:40)(cid:35)(cid:14)(cid:13)(cid:21)(cid:36)(cid:13)(cid:20)(cid:37)(cid:22)(cid:16)(cid:20)(cid:13)(cid:20)485velop methods for scalable revocation that can gracefully accommo-
date mass revocation events, as seen in the aftermath of Heartbleed.
Support for Critical Projects. While not a focus of our research,
many in the community have argued that this event dramatically
underscores shortcomings in how our community develops, deploys,
and supports security software. Given the unending nature of soft-
ware bugs, the Heartbleed vulnerability raises the question of why
the Heartbeat extension was enabled for popular websites. The
extension is intended for use in DTLS, an extension unneeded for
these sites. Ultimately, the inclusion and default conﬁguration of this
largely unnecessary extension precipitated the Heartbleed catastro-
phe. It also appears likely that a code review would have uncovered
the vulnerability. Despite the fact that OpenSSL is critical to the
secure operation of the majority of websites, it receives negligible
support [43]. Our community needs to determine effective support
models for these core open-source projects.
Vulnerability Disclosure. With the exception of a small handful,
the most prominent websites patched within 24 hours. In many
ways, this represents an impressive feat. However, we also observed
vulnerability scans from potential attackers within 22 hours, and it
is likely that popular sites were targeted before the onset of large,
indiscriminate scans.
Several factors indicate that patching was delayed because the
Heartbleed disclosure process unfolded in a hasty and poorly co-
ordinated fashion. Several major operating system vendors were
not notiﬁed in advance of public disclosure, ultimately leading to
delayed user recovery. As discussed in Section 3, a number of
important sites remained vulnerable more than 24 hours after ini-
tial disclosure, including Yahoo, the fourth most popular site on
the Internet. The security community needs to be better prepared
for mass vulnerability disclosure before a similar incident happens
again. This includes addressing difﬁcult questions, such as how to
determine which software maintainers and users to notify, and how
to balance advance disclosure against the risk of premature leaks.
Notiﬁcation and Patching.
Perhaps the most interesting lesson
from our study of Heartbleed is the surprising impact that direct noti-
ﬁcation of network operators can have on patching. Even with global
publicity and automatic update mechanisms, Heartbleed patching
plateaued two weeks after disclosure with 2.4% of HTTPS hosts
remaining vulnerable, suggesting that widespread awareness of the
problem is not enough to ensure patching. However, as discussed
in Section 7, when we notiﬁed network operators of the unpatched
systems in their address space, the rate of patching increased by
47%. Many operators reported that they had intended to patch, but
that they had missed the systems we detected.
Although Internet-wide measurement techniques have enabled
the mass detection of vulnerable systems, many researchers (includ-
ing us) had assumed that performing mass vulnerability notiﬁcations
for an incident like Heartbleed would be either too difﬁcult or inef-
fective. Our ﬁndings challenge this view. Future work is needed to
understand what factors inﬂuence the effectiveness of mass notiﬁca-
tions and determine how best to perform them. For instance, was
Heartbleed’s infamy a precondition for the high response rate we
observed? Can we develop systems that combine horizontal scan-
ning with automatically generated notiﬁcations to quickly respond
to future events? Can we standardize machine-readable notiﬁcation
formats that can allow ﬁrewalls and intrusion detection systems to
act on them automatically? What role should coordinating bodies
such as CERT play in this process? With additional work along
these lines, automatic, measurement-driven mass notiﬁcations may
someday be an important tool in the defensive security arsenal.
9. CONCLUSION
In this work we analyzed numerous aspects of the recent OpenSSL
Heartbleed vulnerability, including (1) who was initially vulnerable,
(2) patching behavior, and (3) impact on the certiﬁcate authority
ecosystem. We found that the vulnerability was widespread, and
estimated that between 24–55% of HTTPS-enabled servers in the
Alexa Top 1 Million were initially vulnerable, including 44 of the
Alexa Top 100. Sites patched heavily in the ﬁrst two weeks after
disclosure, but patching subsequently plateaued, and 3% of the
HTTPS Alexa Top 1 Million sites remained vulnerable after two
months. We further observed that only 10% of vulnerable sites
replaced their certiﬁcates compared to 73% that patched, and 14%
of sites doing so used the same private key, providing no protection.
We investigated the attack landscape, ﬁnding no evidence of large-
scale attacks prior to the public disclosure, but vulnerability scans
began within 22 hours. We observed post-disclosure attackers em-
ploying several distinct types of attacks from 692 sources, many
coming from Amazon EC2 and Chinese ASes. We also conducted a
mass notiﬁcation of vulnerable hosts, ﬁnding a signiﬁcant positive
impact on the patching of hosts to which we sent notiﬁcations, indi-
cating that this type of notiﬁcation helps reduce global vulnerability.
Finally, we drew upon our analyses to frame what went well and
what went poorly in our community’s response, providing perspec-
tives on how we might respond more effectively to such events in
the future.
Acknowledgments
The authors thank Ivan Ristic for providing historical data on TLS
support, as well as Elie Bursztein, Paul Pearce, Hovav Shacham,
Aashish Sharma, and Matthias Vallentin. We similarly thank the
exceptional sysadmins at the University of Michigan for their help
and support throughout this project.
This work was supported in part by the Department of Home-
land Security Science and Technology Directorate under contracts
D08PC75388, FA8750-12-2-0235, and FA8750-12-2-0314; the Na-
tional Science Foundation under contracts CNS-0751116, CNS-
08311174, CNS-091639, CNS-1111699, CNS-1255153, and CNS-
1330142; DARPA award HR0011-12-2-005; and the Department of
the Navy under contract N000.14-09-1-1042.
10. REFERENCES
[1] Alexa Top 1,000,000 Sites.
http://s3.amazonaws.com/alexa-static/top-1m.csv.zip.
[2] Bitcoin Core Version History.
https://bitcoin.org/en/version-history.
[3] Installing OpenDKIM. http://www.opendkim.org/INSTALL.
[4] Telnet Server with SSL Encryption Support.
https://packages.debian.org/stable/net/telnetd-ssl.
[5] Install Ejabberd, Oct. 2004.
http://www.ejabberd.im/tuto-install-ejabberd.
[6] Cassandra Wiki - Internode Encryption, Nov. 2013.
http://wiki.apache.org/cassandra/InternodeEncryption.
[7] Android Platform Versions, Apr. 2014.
https://developer.android.com/about/dashboards/
index.html#Platform.
[8] Apple Says iOS, OSX and “Key Web Services” Not Affected
by Heartbleed Security Flaw, Apr. 2014.
http://recode.net/2014/04/10/apple-says-ios-osx-and-key-
web-services-not-affected-by-heartbleed-security-ﬂaw/.
[9] Heartbleed F.A.Q., 2014. https://www.startssl.com/?app=43.
486[10] The Heartbleed Hit List: The Passwords You Need to Change
Right Now, Apr. 2014. http://mashable.com/2014/04/09/
heartbleed-bug-websites-affected/.
[32] A. S. Foundation. CouchDB and the Heartbleed SSL/TLS
Vulnerability, Apr. 2014. https://blogs.apache.org/couchdb/
entry/couchdb_and_the_heartbleed_ssl.
[11] HP Support Document c04249852, May 2014.
http://goo.gl/AcUG8I.
[12] Is Openﬁre Affected by Heartbleed?, Apr. 2014.
https://community.igniterealtime.org/thread/52272.
[13] June 2014 Web Server Survey, 2014. http://news.netcraft.com/
archives/2014/06/06/june-2014-web-server-survey.html.
[14] NGINX and the Heartbleed Vulnerability, Apr. 2014. http://
nginx.com/blog/nginx-and-the-heartbleed-vulnerability/.
[15] Ofﬁcial BTCJam Update, Apr. 2014. http://blog.btcjam.com/
post/82158642922/ofﬁcial-btcjam-update.
[16] SSL Pulse, Apr. 2014.
https://www.trustworthyinternet.org/ssl-pulse/.
[17] Tomcat Heartbleed, Apr. 2014.
https://wiki.apache.org/tomcat/Security/Heartbleed.
[18] Wikimedia’s Response to the “Heartbleed” Security
Vulnerability, Apr. 2014.
https://blog.wikimedia.org/2014/04/10/wikimedias-response-
to-the-heartbleed-security-vulnerability/.
[19] Adobe. Heartbleed Update, Apr. 2014.
http://blogs.adobe.com/psirt/?p=1085.
[20] M. Al-Bassam. Top Alexa 10,000 Heartbleed Scan—April 14,
2014. https://github.com/musalbas/heartbleed-masstest/blob/
94cd9b6426311f0d20539e696496ed3d7bdd2a94/
top1000.txt.
[21] Alienth. We Recommend that You Change Your Reddit
Password, Apr. 2014.
http://www.reddit.com/r/announcements/comments/231hl7/
we_recommend_that_you_change_your_reddit_password/.
[22] B. Amann, M. Vallentin, S. Hall, and R. Sommer. Extracting
Certiﬁcates from Live Trafﬁc: A Near Real-Time SSL Notary
Service. Technical Report TR-12-014, ICSI, Nov. 2012.
[23] AWeber Communications. Heartbleed: We’re Not Affected.
Here’s What You Can Do To Protect Yourself, Apr. 2014.
http://blog.aweber.com/articles-tips/
heartbleed-how-to-protect-yourself.htm.
[24] Bitcoin. OpenSSL Heartbleed Vulnerability, Apr. 2014.
https://bitcoin.org/en/alert/2014-04-11-heartbleed.
[25] Bro Network Security Monitor Web Site. http://www.bro.org.
[26] N. Craver. Is Stack Exchange Safe from Heartbleed?, Apr.
2014. http://meta.stackexchange.com/questions/228758/
is-stack-exchange-safe-from-heartbleed.
[27] R. Dingledine. Tor OpenSSL Bug CVE-2014-0160, Apr. 2014.
https://blog.torproject.org/blog/openssl-bug-cve-2014-0160.
[28] Dropbox Support. https://twitter.com/dropbox_support/status/
453673783480832000, Apr. 2014. Quick Update on
Heartbleed: We’ve Patched All of Our User-Facing Services
& Will Continue to Work to Make Sure Your Stuff is Always
Safe.
[29] Z. Durumeric, J. Kasten, M. Bailey, and J. A. Halderman.
Analysis of the HTTPS Certiﬁcate Ecosystem. In Proc. ACM
Internet Measurement Conference, Oct. 2013.
[30] Z. Durumeric, E. Wustrow, and J. A. Halderman. ZMap: Fast
Internet-Wide Scanning and its Security Applications. In Proc.
USENIX Security Symposium, Aug. 2013.
[31] A. Ellis. Akamai heartbleed Update (V3), Apr. 2014. https://
blogs.akamai.com/2014/04/heartbleed-update-v3.html.
[33] GoDaddy. OpenSSL Heartbleed: We’ve Patched Our Servers,
Apr. 2014. http://support.godaddy.com/godaddy/
openssl-and-heartbleed-vulnerabilities/.
[34] L. Grangeia. Heartbleed, Cupid and Wireless, May 2014.
http://www.sysvalue.com/en/heartbleed-cupid-wireless/.
[35] S. Grant. The Bleeding Hearts Club: Heartbleed Recovery for
System Administrators, Apr. 2014.
https://www.eff.org/deeplinks/2014/04/bleeding-hearts-club-
heartbleed-recovery-system-administrators.
[36] B. Grubb. Heartbleed Disclosure Timeline: Who Knew What
and When. Apr. 2014. http://www.smh.com.au/it-pro/
security-it/heartbleed-disclosure-timeline-who-knew-what-
and-when-20140415-zqurk.html.
[37] L. Haisley. OpenSSL Crash with STARTTLS in Courier, May
2014. http://sourceforge.net/p/courier/mailman/message/
32298514/.
[38] IBM. OpenSSL Heartbleed (CVE-2014-0160), May 2014.
https://www-304.ibm.com/connections/blogs/PSIRT/entry/
openssl_heartbleed_cve_2014_0160.
[39] Infusionsoft. What You Need to Know About Heartbleed, Apr.
2014. http://blog.infusionsoft.com/company-news/
need-know-heartbleed/.
[40] Internal Revenue Service. IRS Statement on “Heartbleed” and
Filing Season, Apr. 2014. http://www.irs.gov/uac/Newsroom/
IRS-Statement-on-Heartbleed-and-Filing-Season.
[41] W. Kamishlian and R. Norris. Installing OpenSSL for Jabberd
2. http://www.jabberdoc.org/app_openssl.html.
[42] Litespeed Technologies. LSWS 4.2.9 Patches Heartbleed Bug,
Apr. 2014. http://www.litespeedtech.com/support/forum/
threads/lsws-4-2-9-patches-heartbleed-bug.8504/.
[43] S. Marquess. Of Money, Responsibility, and Pride, Apr. 2014.
http://veridicalsystems.com/blog/
of-money-responsibility-and-pride/.
[44] M. Masnick. Shameful Security: StartCom Charges People To
Revoke SSL Certs Vulnerable to Heartbleed, Apr. 2014.
http://www.techdirt.com/articles/20140409/11442426859/
shameful-security-startcom-charges-people-to-revoke-ssl-
certs-vulnerable-to-heartbleed.shtml.
[45] N. Mehta and Codenomicon. The Heartbleed Bug.
http://heartbleed.com/.
[46] Microsoft. Microsoft Services unaffected by OpenSSL
Heartbleed vulnerability, Apr. 2014. http://blogs.technet.com/
b/security/archive/2014/04/10/microsoft-devices-and-
services-and-the-openssl-heartbleed-vulnerability.aspx.
[47] MongoDB. MongoDB Response on Heartbleed OpenSSL
Vulnerability, Apr. 2014. http://www.mongodb.com/blog/post/
mongodb-response-heartbleed-openssl-vulnerability.
[48] K. Murchison. Heartbleed Warning - Cyrus Admin Passowrd
Leak!, Apr. 2014. http://lists.andrew.cmu.edu/pipermail/
info-cyrus/2014-April/037351.html.
[49] E. Ng. Tunnel Fails after OpenSSL Patch, Apr. 2014. https://
lists.openswan.org/pipermail/users/2014-April/022934.html.
[50] M. O’Connor. Google Services Updated to Address OpenSSL
CVE-2014-0160 (the Heartbleed Bug), Apr. 2014.
http://googleonlinesecurity.blogspot.com/2014/04/
google-services-updated-to-address.html.
[51] P. Ondruska. Does OpenSSL CVE-2014-0160 Effect Jetty
Users?, Apr. 2014. http://dev.eclipse.org/mhonarc/lists/
jetty-users/msg04624.html.
487[52] OpenSSL Project Team. OpenSSL Security Advisory, Apr.
2014. http://www.mail-archive.com/
PI:EMAIL/msg73408.html.
[53] OpenSSL Project Team. OpenSSL Version 1.0.1g Released,
Apr. 2014. http://www.mail-archive.com/
PI:EMAIL/msg73407.html.
[54] OpenVPN. OpenSSL Vulnerability—Heartbleed.
https://community.openvpn.net/openvpn/wiki/heartbleed.
[55] Oracle. OpenSSL Security Bug—Heartbleed /
CVE-2014-0160, Apr. 2014.
http://www.oracle.com/technetwork/topics/security/
opensslheartbleedcve-2014-0160-2188454.html.
[56] L. Padron. Important Read – Critical Security Advisory And
Patch for OpenSSL Heartbleed Vulnerability, Apr. 2014.
http://blog.zimbra.com/blog/archives/2014/04/
important-read-critical-security-advisory-patch-openssl-
heartbleed-vulnerability.html.
[57] V. Paxson. Bro: A System for Detecting Network Intruders in
Real-Time. Computer Networks, 31(23-24):2435–2463, 1999.
[58] PayPal. OpenSSL Heartbleed Bug—PayPal Account Holders
are Secure, Apr. 2014. https://www.paypal-community.com/
t5/PayPal-Forward/OpenSSL-Heartbleed-Bug-PayPal-
Account-Holders-are-Secure/ba-p/797568.
[59] W. Pinckaers. http://lekkertech.net/akamai.txt.
[60] M. Prince. The Hidden Costs of Heartbleed, Apr. 2014.
http://blog.cloudﬂare.com/the-hard-costs-of-heartbleed.
[61] Publishers Clearing House. Stay Smart About The
“Heartbleed” Bug With PCH!, Apr. 2014.
http://blog.pch.com/blog/2014/04/16/
stay-smart-about-the-heartbleed-bug-with-pch/.
[62] Rackspace. Protect Your Systems From “Heartbleed”
OpenSSL Vulnerability, Apr. 2014.
http://www.rackspace.com/blog/protect-your-systems-from-
heartbleed-openssl-vulnerability/.
[63] Red Hat. How to Recover from the Heartbleed OpenSSL
vulnerability, Apr. 2014.
https://access.redhat.com/articles/786463.
[64] T. Saunders. ProFTPD and the OpenSSL “Heartbleed” Bug,
May 2014. http://comments.gmane.org/
gmane.network.proftpd.user/9465.
[65] B. Say. Bleedingheart Bug in OpenSSL, Apr. 2014.
http://www.stunnel.org/pipermail/stunnel-users/2014-April/
004578.html.
[66] R. Seggelmann, M. Tuexen, and M. Williams. Transport Layer
Security (TLS) and Datagram Transport Layer Security
(DTLS) Heartbeat Extension. IETF Request for Comments
(RFC) 6520, February 2012.
https://tools.ietf.org/html/rfc6520.
[67] N. Sullivan. The Results of the CloudFlare Challenge. Apr.
2014. http://blog.cloudﬂare.com/
the-results-of-the-cloudﬂare-challenge.
[68] Tumblr. Urgent Security Update, Apr. 2014. http://
staff.tumblr.com/post/82113034874/urgent-security-update.
[69] United States Postal Service. Avoiding Heartbleed, May 2014.
https://ribbs.usps.gov/importantupdates/
HeartbleedArticle.pdf.
[70] M. Wimmer. Removed Support for OpenSSL, 2007.
https://jabberd.org/hg/amessagingd/rev/bcb8eb80cbb9.
[71] WordPress. Heartbleed Security Update, Apr. 2014.
http://en.blog.wordpress.com/2014/04/15/security-update/.
[72] S. Yilek, E. Rescorla, H. Shacham, B. Enright, and S. Savage.
When Private Keys Are Public: Results from the 2008 Debian
OpenSSL Vulnerability. In Proc. ACM Internet Measurement
Conference, Nov. 2009.
[73] ZDNet. Heartbleed Bug Affects Yahoo, OKCupid Sites, Apr.
2014. http://www.zdnet.com/heartbleed-bug-affects-yahoo-
imgur-okcupid-convo-7000028213/.
[74] ZEDOinc.
https://twitter.com/ZEDOinc/status/456145140503957504,
Apr. 2014. Customers and partners: none of the ZEDO sites or
assets are affected by Heartbleed.
488