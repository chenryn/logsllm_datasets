participants about their feelings and suspicions. The users
were told that the experiment’s participants were randomly
divided into two groups, and that half of the participants were
manipulated. We then asked them which group they thought
they were assigned to. In reality, all the participants were
manipulated according to their group.
After that question, we continued hinting to the participants
about the real purpose of the experiment, by telling them
that the goal of the discussed manipulation was to take over
one of their accounts. We then asked again which group the
participants thought they were assigned to.
Before asking this question the third time, we told the users
that the account we tried to hack was a Facebook account.
Ethics. We had a dilemma about the right way to conduct
this experiment. We could spoof the Facebook messages and
avoid contacting Facebook for the Facebook SMS group.
However, we chose to simulate a real attack, mainly because
the interaction between the attacking page and the attacker’s
server, and between the server and Facebook,
takes time
and could arouse suspicion. We wanted to make sure the
experiment simulates a real PRMitM attack, and prove that
this attack is indeed practical in real world conditions. We did
not take over any Facebook accounts, nor did we save the
codes typed by the users. We only veriﬁed the correctness of
the typed codes with the users.
Participants. From our institute, 88 volunteer students
participated in the experiment. Of them, 42 were assigned to
Fig. 2: Results of Experiment 2. Only 9.5% of participants
in the Facebook SMS and 20.5% in the detailed SMS group
detected and stopped the attack. In both the groups, about half
the participants did not realize they were attacked; the others
realized after some hints.
the Facebook SMS group and the others to the detailed SMS
group. We used volunteers on purpose, so they could feel free
to leave the experiment at every moment. The participants did
not take a part in other experiments or surveys conducted in
this research.
Results. We completed the attack successfully on 90.5% of
the Facebook SMS group, and on 79.5% of the detailed SMS
group. Namely, among the users who underwent a simulation
of the attack, only 4 participants stopped the experiment and
avoided sending their Facebook password reset code to our
server. In both groups, around 50% of the participants did
not realize they were attacked even after we told them we
hacked into the Facebook account of half the participants. We
observed that the hints helped the participants understand what
happened, but those in the detailed SMS group were quicker
to suspect a security issue. Figure 2 depicts the results.
Results analysis. The results show that the PRMitM attack
can be launched automatically.
We questioned participants who did not stop the attack in
order to understand their behavior. We gained two important
insights that are relevant for improving the password reset
process:
1) Many users just searched for the code without reading
the text. Some of them did not open the message, but
read the code from the notiﬁcation that was prompted in
their phone.
2) Many users who noticed that the message was sent from
Facebook, thought the login to experiment was done us-
ing the widely used login with Facebook mechanism [33].
This means that the sender identity as specify by SMS
spooﬁng has a minor importance in the attack, mainly
if the content of the message is unclear. Furthermore,
adding sentences to the attacking page like ”Powered by
Facebook” or even just an explanation that the message
will arrive with speciﬁc sender, may make SMS spooﬁng
even more worthless.
Relying on this feedback, we designed mechanisms that will
prevent such phenomena. See Section VII-B.
259
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:24:09 UTC from IEEE Xplore.  Restrictions apply. 
V. PRMITM VIA PHONE CALL
This section discusses PRMitM attacks that exploit pass-
word reset using phone calls. We ﬁrst compare the use of SMS
and phone calls in password reset processes, and then describe
the vulnerabilities we found. Finally, we bring Google, the
most popular website in the world, as an example to vulnerable
website and evaluate the PRMitM attack on Google users.
A. SMS code vs. Phone Call
There are many comparison parameters between password
reset process using SMS and phone call. This section focuses
on security aspects, mainly considering the PRMitM attack.
Sender identiﬁer. Using SMS spooﬁng it is possible to
give an indication about the sender regardless of the content.
In phone calls, there is no such equivalent mechanism and the
phone calls arrive from unrecognized numbers.
Length of message. SMS code is limited in its length,
and hence usually does not contain enough information (see
Section IV-A). In phone calls it is possible to deliver longer
messages.
User attention. Reading a code from SMS does not require
effort or concentration. Actually, in Experiment 2, we noticed
that some users do not open the message, but read the code
from the notiﬁcations bar. Other users read only the code. In
a phone call, the user dedicates more attention to the content
of the phone number, mainly because the user will not have
access to the code once the phone call ends.
Language issues. Reading a reset code from an SMS in
unknown language is possible, as numbers are written the same
in many languages. Even a code that combines letters can be
differentiated from the other letters in the message. Therefore,
in many cases, companies send SMS messages in a language
that is different from the language that the user uses. Such
cases can be exploited by the PRMitM attacker. To extract the
reset code from a phone call, at least basic understanding in the
language is required; hence, a user that extracts the code from
a phone call is more likely to also understand the message.
Interactivity. Interactivity in the password reset process
can be used to ensure that the user understands the situation.
Phone calls are more suitable for such an interaction, e.g.,
by typing digits; indeed, Ebay uses interactive phone call to
deliver the password reset code. It is much harder to create
secure interaction using SMS.
B. Vulnerable websites
Websites that support password reset using phone calls
might be vulnerable to PRMitM attack similarly to the SMS
variant. Like SMS messages, a secure phone call must include
the initiating website,
the reset password process, and a
warning about disclosing the code.
If a website uses a phone call that just reads the reset code,
the PRMitM attacker can ask for the phone number for calling
the victim, and instead of that to initiate a password reset
process against the website using the victim’s phone number.
The website will call to the victim, but without any option
for the victim to detect the source of that call. Hence, without
260
suspecting, the victim will forward the received reset code of
the attacked website to the attacker.
Among the popular websites surveyed in this paper (Top 100
websites [27] that appear in Tables II and III), only Google,
Linkedin, eBay and Netﬂix support password reset using both
SMS and phone call (in our country). Paypal supports only
phone calls.
Among these 5 websites, we found that Linkedin and
Google are vulnerable. Linkedin’s phone call does not mention
Linkedin at all. In Google, we noticed a difference between
the 10 languages we could test.
The phone calls in German, French, Russian, Italian, and
Persian are just a translation of the English call (hence will
be denoted as the English group):
Hello! Thank you for using Google phone veri-
ﬁcation. Remember! You should not share this code
with anyone else, and no one from Google will ever
ask for this code. Your code is XXXXXX. Again, your
code is XXXXXX. Good bye.
However, the set of vulnerable phone calls in Spanish (sec-
ond most popular language in the world, more than English),
Arabic, Dutch and Hebrew are surprisingly vulnerable:
Hello! Thank you for using our phone veriﬁ-
cation. Your code is XXXXXX. Again, your code is
XXXXXX. Good bye.
The phone calls in the English group mention the sender
(Google) twice. They also contain a warning about sharing the
code. However, they do not explain what is the meaning of the
code; namely, the password reset process is not mentioned.
In the vulnerable calls, the sender identity is replaced by
the general word our, and the warning is omitted. Because
there is no indication to the real sender or the real meaning
of the received code, the phone calls in these languages are
completely vulnerable to PRMitM attacks.
C. Evaluation: PRMitM on Google Phone Calls
This section describes Experiment 3, a user study we
conducted to evaluate the PRMitM attack on Google users,
exploiting the password reset process via a phone call.
Due to ethical reasons, we did not use the codes received
in the phone call to complete the password reset process.
However, similar to Experiment 2, we successfully tested the
possibility to complete the password-reset process on several
of our own accounts. Namely, we veriﬁed that under the
experiment conditions, in which a password reset request is
sent from a machine that was not used before for the attacked
account, it is also possible to successfully reset the password.
EXPERIMENT 3: Effectiveness of PRMitM attack on Google
users using phone calls.
Experiment process. The experiment process was the same
as in Experiment 2. However, instead of telling the users that
they will get a code in SMS, we told them that we will call
them. To initiate a password reset process in Google, only the
email address of the victim is required. However, we asked the
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:24:09 UTC from IEEE Xplore.  Restrictions apply. 
Although websites are easy targets, it is possible to attack
other applications as well. In particular, some mobile appli-
cations require authentication that is done by typing a code
that is received via SMS or a phone call. This makes them
potentially vulnerable to the PRMitM attack, if the content of
message is not clear enough.
We audited some of the most popular messaging applica-
tions available today to get indication about possible vulnera-
bilities. This section brings our short survey and summarizes
its ﬁndings.
A. Survey: Password Reset in Mobile Messaging Applications
The vulnerabilities we found in popular websites encour-
aged us to search for similar vulnerabilities also in mobile
applications.
In particular, we chose to audit the password reset process of
messaging mobile applications. Taking over such applications
exposes private and sensitive information about the user, and
allows the attacker to perform sensitive operations like sending
messages in the name of the user.
Table V lists the applications we tested and the supported
channels for password reset process 2.
Mobile applications are especially interesting in the per-
spective of password reset process, as messages with password
reset code can be sent through the applications themselves to
the mobile phone of the user. This is an additional option
to initiate password reset process that does not suffer from
the limitations of SMS and phone calls (e.g., limited length,
graphic, etc.). Namely, an installed mobile application can
easily explain to the user about the password reset process;
see also Section VII-E.
Among the nine very popular applications we tested, only
Telegram supports password reset via the application. Tele-
gram also tries to use this option to reset the password before
other techniques like SMS or phone call are used.
SMS is the most supported way to initiate password reset
process. Only four applications support password reset only
via Email, three of them exclusively, which makes the PR-
MitM attack impractical on them.
B. Mobile Applications PRMitM Vulnerabilities
In addition to the lack of use in the application itself to
reset the password, we found the following vulnerabilities:
Vulnerable phone calls in Whatsapp, Snapchat and
Telegram. Among the applications we tested, all the three
that use phone-call during their password reset process, are
vulnerable. Namely, in the phone calls of Whatsapp, Snapchat
and Telegram, there is neither indication to the source of the
call nor explanation about the meaning of the received code
nor warning about not giving away the code. See Table VI.
In Snapchat, to initiate the password reset code, the attacker
has to solve a CAPTCHA and to get the username. While
using the PRMitM attack to solve the CAPTCHA seems
reasonable, it seems harder to trick the victim to give his
2The survey was conducted during the third quarter of 2016.
Fig. 3: Results of Experiment 3.
users to insert both their email address and phone number, so
the call will not be suspicious. Once the users inserted their
phone number, our server contacted Google and initiated a
phone call to them in order to reset the password. We did not
know in advance which language is used by the users, but
asked for this information in the ﬁnal experiment form.
Ethics. The dilemma from Experiment 2 remained with us
also in this experiment. From similar reasons, and because we
could not predict the call language of some of our participants,
we decided to initiate a phone call from Google and not a
spoofed one. As done in Experiment 2, we did not save the
codes typed by the users, and only veriﬁed their correctness
with the users.
Participants. 68 volunteer students from our institute, 39
from them used the English language (English group), and
the others used languages that have vulnerable phone calls
(vulnerable group).
Results. As expected, due to lack of any indication about
the real source of the call, all the participants of the vulnerable
group completely failed to detect
the attack. Among the
participants of the English group, only 7 participants (18%)
blocked the attack. 59% were ”attacked” successfully and
realized after one of the hints. The other 23% did not realize
that they were manipulated also after the three hints. Figure 3
depicts the results.
Results analysis. While we expected that for the languages
used in the vulnerable group it will be impossible to detect the
attack, we were surprised how vulnerable is the English phone
call. Although the number of participants was low, the results
clearly indicate that even the English phone call is vulnerable
to the PRMitM attack.
We were mainly interested in users from the English group
who failed to stop the attack. The most common argument was
the fact that the phone call did not specify anything about the
meaning of the code. To the users who thought that the code
comes from other websites, it sounded reasonable that no one
from Google will ever ask for this code. A few users said
that they did not give enough attention to the message code.
Relying on this feedback, we designed and evaluated a secure
phone call that will prevent the attack; see Section VII-C.
VI. MOBILE APPLICATIONS VULNERABILITIES
The previous sections presented several variants of the PR-
MitM attack. All the attacks were demonstrated and evaluated
on popular websites.
261
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:24:09 UTC from IEEE Xplore.  Restrictions apply. 
Application
Whatsapp
Facebook Messenger
Email
√
Telegram
Kakao
Kik
Line
Nimbuzz
Skype
Snapchat
√
√
√
√
√
SMS
√
√
√
√
√
√
Phone call Application
message
√
√
√
Remarks
Phone call can be initiated only 5 minutes after the SMS was sent
Password reset is done as in Facebook accounts
A message is sent through the Telegram application. If no code
has been sent by the user, an SMS is sent. If yet, no code has been
sent by the user, a phone call is done.
√
The user is required to solve a CAPTCHA and insert the username
The user is required to solve a CAPTCHA like game
TABLE V: Options to reset passwords in popular messaging applications
Application
Snapchat
Whatsapp
Telegram
Phone call message
Your conﬁrmation code is XXXXXX. again:
XXXXXX
Your veriﬁcation code is XXXXXX (repeated
four times)
Hello your code is : XXXXXX. once again:
XXXXXX
TABLE VI: Messages used in phone calls during password