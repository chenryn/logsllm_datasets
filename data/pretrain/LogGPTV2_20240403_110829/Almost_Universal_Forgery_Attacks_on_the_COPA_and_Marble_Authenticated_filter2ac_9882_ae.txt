1. Choose (264 − 1) ((padded) associated data of two
blocks long, message of one block long) pairs (AD(i)
1 ,
1 ) = ((32 ⊕ 33) ∗ i, (2 ∗ 33 ⊕ 2) ∗ i, (2 ⊕
AD(i)
22)∗ i), and obtain their ciphertexts (and tags), where
i = 1, 2,··· , 264 − 1; we denote by C (i)
the ciphertext
for message M (i)
into a table indexed by
⊕ 5 ∗ i).
C (i)
1
1 . Store C (i)
⊕ (3 ⊕ 2 ∗ 3) ∗ i (i.e. C (i)
1
1
1
2
2
2
1
(j)
2
2
1
1
2 ).
⊕C (µ)
⊕ 5 ∗ µ.
1 ,cM (j)
⊕ 5 ∗ (ω × 264) = C (µ)
long, message of two blocks long) pairs (dAD
1 ,cM (j)
2. Choose (264−1) ((padded) associated data of one block
cM (j)
1 ,
2 ) = ((32⊕ 33)∗ (j× 264), (2∗ 33⊕ 2)∗ (j× 264), (2⊕
where j = 1, 2,··· , 264 − 1; we denote by (bC (j)
1 , bC (j)
22)∗(j×264)), and obtain their ciphertexts (and tags),
the ciphertext for message (cM (j)
2 )
3. Check whether bC (j)
⊕ (3⊕ 2∗ 3)∗ (j × 264) (i.e. bC (j)
the match(es) by (bC (ω)
any, that is, bC (ω)
4. Recover L from bC (ω)
L, (2 ⊕ 22) ∗ i ⊕ 2 ∗ L, respectively; for (dAD
⊕
5 ∗ (j × 264)) matches one of the set {C (i)
⊕ 5 ∗ i|i =
1, 2,··· , 264 − 1} for j = 1, 2,··· , 264 − 1. We denote
⊕ 5 ∗ (ω × 264), C (µ)
⊕ 5 ∗ µ) if
1 ), the immediate inputs to the three
E1 operations are (32 ⊕ 33)∗ i⊕ 32 ∗ L, (2∗ 33 ⊕ 2)∗ i⊕ 2∗ 33 ∗
2 ),
the immediate inputs to the three E1 operations are (32 ⊕
33)∗ (j × 264)⊕ 33 ∗ L, (2∗ 33 ⊕ 2)∗ (j × 264)⊕ 2∗ L, (2⊕ 22)∗
(j × 264) ⊕ 22 ∗ L, respectively. Thus, the input diﬀerence
to the three E1 operations under (AD(i)
1 ) and
2 ) are (32 ⊕ 33) ∗ [i ⊕ (j × 264) ⊕ L], (2 ∗
33 ⊕ 2) ∗ [i ⊕ (j × 264) ⊕ L], (2 ⊕ 22) ∗ [i ⊕ (j × 264) ⊕ L],
respectively. Now, if i⊕ (j × 264) = L, then the input diﬀer-
ence to the corresponding three E1 operations will be zero,
⊕ 3 ∗ L, which is equivalent to
1 = 5∗(ω×264)⊕5∗µ = 5∗L.
1 ,cM (j)
(dAD
and bC (j)
bC (j)
⊕ (3 ⊕ 2 ∗ 3) ∗ (j × 264) = C (i)
1 ,cM (j)
1 ,cM (j)
⊕ 2 ∗ 3 ∗ L = C (i)
⊕ (3 ⊕ 2 ∗ 3) ∗ i.
1 ,cM (j)
(j)
For (AD(i)
1 , AD(i)
2 , M (i)
2
The state recovery attack requires about 265 encryption
queries and a memory of about 264 × 16 = 268 bytes, and
has a time complexity of about 265 memory accesses and a
(cid:0)128)0 · (1 −
success probability of about 1
] ≈ 32%, where 1
2
(cid:0)128)2128
2
2 has a similar meaning to that
explained in Section 3.2.2.
× [1 −(
) · (2
2128
1 , AD(i)
2 , M (i)
2
1
1
0
(j)
797sal attack. This forgery way does not apply to Marble v1.2,
since Marble v1.2 will process a padded block of associated
data even there is no associated data, which produces an
unknown τ . Anyway, the forgery way based on modifying
associated data works for Marble v1.2.
5. CONCLUSIONS
In this paper, we have presented almost universal forgery
attacks on the basic cases of COPA, AES-COPA and Marble
that process messages of a multiple of the block size long,
and have shown that the basic cases of COPA, AES-COPA
and Marble only have roughly at most a birthday-bound se-
curity against universal forgery, particularly for AES-COPA
in the nonce-respecting scenario, which may be an unde-
sirable property for AES-COPA, considering that it is pro-
posed for GPGPU-like parallel architectures. Therefore, the
full security claim and conjecture on tag guessing of AES-
COPA and the full security claim on authenticity of Marble
are incorrectly far overestimated in the sense of a general
understanding of full security of these security notions.
6. ACKNOWLEDGMENTS
The author is grateful to Hongjun Wu for his conversa-
tions on forgery-resistance, to Jian Guo and Kan Yasuda
for their discussions on some attacks, to several anonymous
referees for their comments on earlier versions of this pa-
per, and to Prof. Yongzhuang Wei and the Natural Science
Foundation of China (No. 61572148) for their support.
7. REFERENCES
[1] E. Andreeva, A. Bogdanov, A. Luykx, B. Mennink, E.
Tischhauser, and K. Yasuda. AES-COPA v1.
Submission to the CAESAR competition, March 2014.
http://competitions.cr.yp.to/round1/
aescopav1.pdf
[2] E. Andreeva, A. Bogdanov, A. Luykx, B. Mennink, E.
Tischhauser, and K. Yasuda. AES-COPA v2.
Submission to the CAESAR competition, September
2015.
http://competitions.cr.yp.to/round2/
aescopav2.pdf
[3] E. Andreeva, A. Bogdanov, A. Luykx, B. Mennink, E.
Tischhauser, and K. Yasuda. Parallelizable and
authenticated online ciphers. In K. Sako and P.
Sarkar, editors, ASIACRYPT 2013, pages 424–443.
Springer, 2013.
[4] E. Andreeva, A. Bogdanov, A. Luykx, B. Mennink, E.
Tischhauser, and K. Yasuda. Parallelizable and
authenticated online ciphers. IACR Cryptology ePrint
Archive, Report 2013/790, 2013.
http://eprint.iacr.org/2013/790
[5] E. Andreeva, A. Bogdanov, A. Luykx, B. Mennink, E.
Tischhauser, K. Yasuda, N. Datta, and M. Nandi.
COLM v1. Submission to the CAESAR competition,
2016.
http://competitions.cr.yp.to/round2/colm.pdf
[6] M. Bellare and C. Namprempre. Authenticated
encryption: relations among notions and analysis of
the generic composition paradigm. Journal of
Cryptology, 21(4):469–491, 2008.
Figure 5: State recovery attack on Marble v1.2 un-
der variable associated data
4.2 Another (Almost) Universal Forgery At-
tack on Marble
Below we only focus on a diﬀerent way to make an (al-
most) universal forgery on Marble v1.0/1.1 after L is re-
covered by a state recovery attack similar to that described
above or in [10, 11]. Fuhr et al. made an (almost) universal
forgery by modifying associated data [10, 11], however, we
ﬁnd that there is another way to make an (almost) univer-
sal forgery on Marble v1.0/1.1, which is based on modify-
ing message. Diﬀerent from COPA, Marble uses the ad-
ditional secret parameter τ in the tag generation phase.
As a consequence, this diﬀerent forgery way targets Marble
v1.0/1.1 without associated data, because τ = 0 when there
is no associated data in Marble v1.0/1.1. For a message
M = (M1, M2,··· , Mmbn) of mbn 128-bit message blocks
long (mbn ≥ 1), below is the diﬀerent forgery way on Mar-
ble v1.0/1.1 without associated data.
1. Query the Marble encryption and tag generation oracle
with the (mbn + 1)-block message cM = (M1, M2,··· ,
Mmbn, 2mbn+1∗L⊕2mbn∗7∗L⊕⊕
its ciphertext bC = (bC1, bC2,··· , bCmbn, bCmbn+1).
2. The ciphertext for M is C = (bC1, bC2,··· , bCmbn), and
the tag for M is bCmbn+1⊕2mbn∗3∗L⊕2mbn(cid:0)1∗3∗7∗L.
mbn
i=1 Mi), and obtain
This universal forgery attack including the phase of recov-
ering L requires about 265 encryption queries and a memory
of about 268 bytes, and has a time complexity of about 265
memory accesses and a success probability of about 32%.
(Note that if one would treat the time complexity of en-
crypting chosen messages as part of the time complexity of
the attack, the resulting time complexity would be about
265 × 5 ≈ 267.4 AES encryptions.)
Note that the attack does not work for a message with the
preset maximum number of blocks, and is an almost univer-
E1⊕E2E3AD(i)132∗LE1⊕E2E3⊕AD(i)22∗33∗LE1⊕E2E3⊕M(i)12∗L3∗LC(i)1E1⊕E2E3⊕M(i)12∗7∗L3∗7∗LT(i)E1E2E3Const0LConst1Const2E1⊕E2E3⊕bM(j)12∗L3∗LbC(j)1E1E2E3Const0LConst1Const2E1⊕E2E3⊕L2l=1bM(j)l22∗7∗L2∗3∗7∗LbT(j)E1⊕E2E3⊕bM(j)222∗L2∗3∗LbC(j)2S1S2τ(i)τ(i)E1⊕E2E3dAD(j)133∗Lbτ(j)bτ(j)798[7] CAESAR — Competition for Authenticated
[18] J. Lu. On the security of the COPA and Marble
Encryption: Security, Applicability, and Robustness.
http://competitions.cr.yp.to/caesar.html
[8] P. Diaconls and F. Mosteller. Methods for studying
coincidences. Journal of the American Statistical
Association, 84(408):853–861, 1989.
[9] O. Dunkelman, N. Keller, and A. Shamir. Almost
universal forgery attacks on AES-based MAC’s.
Designs, Codes and Cryptography, 76(3):431–449,
2015.
authenticated encryption algorithms against (almost)
universal forgery attack, IACR Cryptology ePrint
Archive, Report 2015/079, 2015.
http://eprint.iacr.org/2015/079
[19] J. Lu. On the security of the LAC authenticated
encryption algorithm. In J.K. Liu and R. Steinfeld,
editors, ACISP 2016, pages 395–408. Springer, 2016.
[20] A. Menezes, P. van Oorschot, and S. Vanstone.
Handbook of Applied Cryptography. CRC Press, 1996.
[10] T. Fuhr, G. Leurent, and V. Suder. Forgery and
[21] M. Nandi. XLS is not a strong pseudorandom
key-recovery attacks on CAESAR candidate marble.
HAL archive hal-01102031, 13 January 2015.
http://hal.inria.fr/hal-01102031v2.
[11] T. Fuhr, G. Leurent, and V. Suder. Collision attacks
against CAESAR candidates: forgery and
key-recovery against AEZ and Marble. In T. Iwata
and J.H. Cheon, editors, ASIACRYPT 2015, pages
510–532. Springer, 2015.
[12] J. Guo. Marble Speciﬁcation Version 1.0. Submission
to the CAESAR competition, 15 March 2014.
http://competitions.cr.yp.to/round1/
marblev10.pdf
[13] J. Guo. Marble Speciﬁcation Version 1.1. Submission
to the CAESAR competition, 26 March 2014.
http://competitions.cr.yp.to/round1/
marblev11.pdf
[14] J. Guo. Marble Speciﬁcation Version 1.2. Submission
to the CAESAR competition, 16 January 2015.
https://groups.google.com/forum/#!topic/
crypto-competitions/FoJITsVbBdM
[15] A. Joux. Multicollisions in iterated hash functions.
Application to cascaded constructions. In M. Franklin,
editor, CRYPTO 2004, pages 306–316. Springer, 2004.
[16] J. Lu. Attacking the Marble authenticated encryption
algorithm. CAESAR forum, 23 January 2015.
https://groups.google.com/forum/#!topic/
crypto-competitions/dBOAt64POqI
[17] J. Lu. On the security claim of tag guessing of the
AES-COPA authenticated encryption algorithm.
CAESAR forum, 30 January 2015.
https://groups.google.com/forum/#!topic/
crypto-competitions/yUGgP-VIS_s
permutation. In P. Sarkar and T. Iwata, editors,
ASIACRYPT 2014, pages 478–490. Springer, 2014.
[22] M. Nandi. Revisiting security claims of XLS and
COPA. IACR Cryptology ePrint Archive, Report
2015/444, 2015.
http://eprint.iacr.org/2015/444
[23] M. Nandi and D.R. Stinson. Multicollision attacks on
some generalized sequential hash functions. IEEE
Transcations on Information Theory, 53(2):759–767,
2007.
[24] National Institute of Standards and Technology
(NIST). Advanced Encryption Standard (AES),
FIPS-197, 2001.
[25] B. Preneel and P.C. van Oorschot. On the security of
iterated message authentication codes. IEEE
Transcations on Information Theory, 45(1):188–199,
1999.
[26] T. Ristenpart and P. Rogaway. How to enrich the
message space of a cipher. In A. Biryukov, editor, FSE
2007, pp. 101–118. Springer, 2007.
[27] J. Zhang, W. Wu, and Y. Zheng. Collision attacks on
CAESAR second-round candidate: ELmD. In F. Bao,
L. Chen, R.H. Deng, and G. Wang, editors, ISPEC
2016, pp. 122–136. Springer, 2016.
799