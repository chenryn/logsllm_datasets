title:One Glitch to Rule Them All: Fault Injection Attacks Against AMD's
Secure Encrypted Virtualization
author:Robert Buhren and
Hans Niklas Jacob and
Thilo Krachenfels and
Jean-Pierre Seifert
One Glitch to Rule Them All: Fault Injection Attacks Against
AMD’s Secure Encrypted Virtualization
Robert Buhren
PI:EMAIL
Technische Universität Berlin - SECT
Hans Niklas Jacob
PI:EMAIL
Technische Universität Berlin - SECT
Thilo Krachenfels
PI:EMAIL
Technische Universität Berlin - SECT
Jean-Pierre Seifert
PI:EMAIL
Technische Universität Berlin - SECT
Fraunhofer SIT
ABSTRACT
AMD Secure Encrypted Virtualization (SEV) offers protection mech-
anisms for virtual machines in untrusted environments through
memory and register encryption. To separate security-sensitive op-
erations from software executing on the main x86 cores, SEV lever-
ages the AMD Secure Processor (AMD-SP). This paper introduces
a new approach to attack SEV-protected virtual machines (VMs) by
targeting the AMD-SP. We present a voltage glitching attack that
allows an attacker to execute custom payloads on the AMD-SPs
of all microarchitectures that support SEV currently on the mar-
ket (Zen 1, Zen 2, and Zen 3). The presented methods allow us
to deploy a custom SEV firmware on the AMD-SP, which enables
an adversary to decrypt a VM’s memory. Furthermore, using our
approach, we can extract endorsement keys of SEV-enabled CPUs,
which allows us to fake attestation reports or to pose as a valid
target for VM migration without requiring physical access to the
target host. Moreover, we reverse-engineered the Versioned Chip
Endorsement Key (VCEK) mechanism introduced with SEV Secure
Nested Paging (SEV-SNP). The VCEK binds the endorsement keys
to the firmware version of TCB components relevant for SEV. Build-
ing on the ability to extract the endorsement keys, we show how
to derive valid VCEKs for arbitrary firmware versions. With our
findings, we prove that SEV cannot adequately protect confidential
data in cloud environments from insider attackers, such as rogue
administrators, on currently available CPUs.
CCS CONCEPTS
• Security and privacy → Hardware attacks and countermea-
sures; Virtualization and security.
KEYWORDS
Secure Encrypted Virtualization; SEV; Secure Nested Paging; SNP;
hardware fault attack; voltage glitching
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea
© 2021 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-8454-4/21/11...$15.00
https://doi.org/10.1145/3460120.3484779
ACM Reference Format:
Robert Buhren, Hans Niklas Jacob, Thilo Krachenfels, and Jean-Pierre Seifert.
2021. One Glitch to Rule Them All: Fault Injection Attacks Against AMD’s
Secure Encrypted Virtualization. In Proceedings of the 2021 ACM SIGSAC
Conference on Computer and Communications Security (CCS ’21), November
15–19, 2021, Virtual Event, Republic of Korea. ACM, New York, NY, USA,
15 pages. https://doi.org/10.1145/3460120.3484779
1 INTRODUCTION
Introduced in 2016, AMD’s Secure Encrypted Virtualization (SEV)
technology is the first commercially available solution aiming to
protect virtual machines (VMs) from higher-privileged entities [30]
Prominent use cases for SEV are cloud environments, where the
high-privileged hypervisor has direct access to a VM’s memory
content. In this scenario, a VM without SEV is unprotected from
an administrator with malicious intentions. By encrypting a VM’s
memory, SEV aims to protect customers’ data even when threatened
by such an insider attack.
“... SEV protects data-in-use enabling customer work-
loads to be protected cryptographically from each other
as well as protected from the hosting software. Even an
administrator with malicious intentions at a cloud data
center would not be able to access the data in a hosted
VM.” [30, p. 9]
SEV leverages AES encryption to ensure the confidentiality of
data-in-use by transparently encrypting a VM’s memory with a
VM-specific key. The memory encryption is carried out by a dedi-
cated memory encryption engine embedded in the memory con-
troller [2]. Recently presented extensions to SEV, SEV Encrypted
State (SEV-ES) and SEV Secure Nested Paging (SEV-SNP), expand
the encryption to the VM’s register content and introduce software-
based integrity protection using memory ownership tracking [3, 29].
Besides runtime protection, SEV provides a remote attestation fea-
ture allowing VM-owners to validate the correct instantiation of
VMs even if the hypervisor is not fully trusted.
To ensure the confidentiality of VM memory encryption keys
and the integrity of the remote attestation feature, AMD CPUs
contain a dedicated security co-processor, the AMD Secure Pro-
cessor (AMD-SP)1. The AMD-SP constitutes the root-of-trust for
modern AMD CPUs [36] and manages SEV-related VM life-cycle
tasks such as deployment and migration [2]. The AMD-SP uses
its own local memory and executes a firmware provided by AMD.
1Formerly known as Platform Security Processor (PSP)
Session 11A: Attestation and Firmware Security CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea2875While the hypervisor, executing on the main x86 cores, is still in
control of the VMs, i.e., it is responsible for scheduling VMs, only
the AMD-SP can access a VM’s memory encryption key. This sepa-
ration ensures that a malicious or compromised hypervisor cannot
access a VM’s data.
Previous research revealed that the AMD-SP is a single point of
failure for the SEV technology [14, 15, 18]. However, the presented
issues are either limited to a specific CPU type, e.g., the issues
presented in [14, 15] only affect the first generation of AMD Epyc
CPUs (Zen 1), or are effectively mitigated by firmware updates [18].
To the best of our knowledge, no AMD-SP-related security issues
that affect SEV are known for the current and last generation of
AMD Epyc CPUs (Zen 2 and Zen 3).
Given the criticality of the AMD-SP for the security properties of
the SEV technology, the question can be raised if there is a system-
atic way to mount attacks against SEV-protected VMs by targeting
the AMD-SP. Particularly, one could consider fault attacks that do
not depend on the presence of software issues but instead force
genuine code to enter an unintended state. Recently, researchers
applied this attack technique to Intel CPUs and mounted attacks
against SGX enclaves [17, 40].
Due to its crucial role in the SEV technology, targeting the
AMD-SP instead of the protected VMs potentially allows an at-
tacker to circumvent any protection guarantees of SEV, indepen-
dent from the targeted VM. Consequently, in this work, we answer
the following research question: What are the implications of fault
injection attacks against the AMD-SP for the SEV technology?
1.1 Contributions
In this work, we analyze the susceptibility of the AMD SEV tech-
nology towards physical attacks targeting the AMD-SP. By manip-
ulating the input voltage to AMD systems on a chip (SoCs), we
induce an error in the read-only memory (ROM) bootloader of the
AMD-SP, allowing us to gain full control over this root-of-trust.
Building on this capability, we show that we can extract SEV-
related secrets, i.e., Chip Endorsement Keys (CEKs), that can be
leveraged to mount software-only attacks that do not require phys-
ical access to the target host. Similar attacks have been previously
presented in [15], however, in contrast to their approach, our attack
does not depend on firmware issues and re-enables the attacks
presented in their work on all SEV-capable CPUs. Additionally,
we reverse-engineered the new key-versioning scheme introduced
by the SEV Secure Nested Paging (SEV-SNP) extension that binds
the CEK to TCB component versions. This new key, called Ver-
sioned Chip Endorsement Key (VCEK), is cryptographically bound
to firmware versions of the target system. Our glitching attack
enables us to extract seeds for the VCEK that allow an attacker to
derive the valid VCEKs for all possible combinations of firmware
versions.
We present our approach to determine the CPU-specific glitch-
ing parameters, i.e., the length and the depth of the voltage drop.
After determining these parameters in an initial characterization
phase, our attack can be mounted fully automatic and requires no
knowledge of the internal structure of the ROM bootloader.
Both the attack and the characterization of the target CPU re-
quire only a cheap (~30 $) µController [42] and a flash programmer
(~12 $), making this attack feasible even for attackers with no access
to special equipment. We successfully mounted the attack on AMD
Epyc CPUs of all microarchitectures that support the SEV tech-
nology, i.e., Zen 1, Zen 2, and Zen 3. We publish our firmware to
mount the glitching attack, the code of our payloads and our imple-
mentation of SEV’s key-derivation functions under an open-source
license at [28]. To prove the successful extraction of endorsement
keys, the repository includes valid signatures over the title of this
paper. The signatures can be validated using public keys, retrieved
from AMD keyservers at [4, 6].
We responsibly disclosed our findings to AMD, including our
experimental setup and code. AMD acknowledged our findings but
refrained from providing an official statement regarding our attack.
1.2 Overview
In the following sections, we present our approach to overcome
SEV’s protection goals using voltage fault injection.
The presented attack allows an attacker to execute custom code
on the AMD-SP by tricking the AMD-SP’s ROM bootloader into
accepting an attacker-controlled public key. The AMD-SP uses this
public key to validate the authenticity of firmware components,
such as the SEV firmware. The ability to execute code on the AMD-
SP allows an attacker to a) exfiltrate confidential key material which
impacts the entire SEV ecosystem’s security and b) deploy a custom
SEV firmware.
In Section 3, we present the required background information
including information on: the SVI2 protocol, which is necessary to
manipulate the AMD-SP’s input voltage, the AMD-SP’s firmware,
including its protection mechanisms, and the SEV technology. In
Section 4, we introduce two possible attack scenarios against SEV
based on the attackers ability to execute code on the AMD-SP. Fur-
thermore, we present our analysis of the AMD-SP’s secure boot
mechanism. Our voltage glitch setup and attack approach is de-
scribed in Section 5. In Section 6, we describe our approach to
decrypt firmware components of AMD Epyc Zen 3 systems to allow
an analysis of the new VCEK key-derivation scheme introduced
with SEV-SNP, which is presented in Section 7. Finally, we discuss
the implications of the presented attacks in Section 8 and conclude
in Section 9.
2 RELATED WORK
Voltage glitching attacks targeting security-sensitive operations on
CPUs have been subject to extensive analysis in the past. The ma-
jority of reported attacks have been carried out on small embedded
systems and SoCs, where typically crowbar circuits (see Section 3.3
for details) are used to inject the fault, e.g., in [12, 21, 51]. A more
thorough list of voltage glitching attacks can be found in [22].
More recently, voltage glitching attacks against Intel desktop
and server CPUs have been reported, which use available inter-
faces to voltage regulators (VRs) for glitching the supply voltage.
Several authors demonstrated how code running in the Intel SGX
enclaves can be faulted by injecting glitches through a software-
based voltage scaling interface [31, 40, 43]. Thereby, SGX’s integrity
properties are violated, and keys from cryptographic operations
running inside the secure enclave can be extracted.
Session 11A: Attestation and Firmware Security CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea2876The work most related to our attack is presented by Chen et al.
in [17]. The authors demonstrate the first physical attack targeting
SGX enclaves entitled VoltPillager. VoltPillager improves the timing
precision of software-based fault attacks and leverages direct hard-
ware access to the VR for injecting glitches. By connecting wires
to the bus between the CPU and the VR, the authors could inject
commands causing voltage glitches with higher timing precision
than the previously mentioned software-based fault injection meth-
ods. Furthermore, the attack is also applicable on patched systems,
where the software interfaces for controlling the voltage are not
accessible to an adversarial process. Although our attack uses the
same mechanism to alter the input voltage to the SoC, namely the
external VR, several factors distinguish our approach from theirs.
We, therefore, compare our approach with VoltPillager in Section 4.
Since its introduction in 2016, several attacks against SEV have
been published [20, 24, 34, 37–39, 54, 57, 58]. These attacks either
rely on the ability to write to encrypted guest memory, the ability
to access the guest’s general-purpose register, or the ability to
alter the mapping between guest-physical and host-physical pages
of a SEV-protected VM. SEV-ES effectively mitigates attacks that
require access to a guest’s register state, and SEV-SNP mitigates
attacks that alter a guest’s memory layout or content. A different
direction is explored in [44]. The authors present issues inside the
Linux kernel of SEV-enabled guests that allow the circumvention of
SEV’s security properties. By manipulating the result of the cpuid
instruction, they show how an attacker could trick the guest into not
enabling the SEV protection at all. To counter this issue, SEV-SNP
introduces a “Trusted CPUID” feature that prevents a hypervisor
from reporting an invalid CPU feature set.
In [15], the authors analyze SEV’s remote attestation mechanism.
They revealed security issues in the AMD-SP’s firmware that enable
an attacker to deploy a custom SEV firmware and extract keys crit-
ical to the remote attestation. Using a manipulated SEV firmware,
an attacker can override the debug policy of SEV-enabled VM’s
and thereby decrypt its memory. The extracted keys can be used to
fake the presence of SEV during deployment or migration. These
attacks require the presence of firmware issues in the AMD-SP. Al-
though the work shows that the AMD-SP is crucial for the security
properties of SEV, the presented firmware issue is only present on
the first generation of SEV capable CPUs (Zen 1). To the best of our
knowledge, no comparable firmware issue for later generations of
AMD CPUs (Zen 2 and Zen 3) has been published.
3 BACKGROUND
This section introduces the Secure Encrypted Virtualization (SEV)
technology, voltage fault injection as means to induce errors in
security-sensitive operations, and the VR communication protocol.
3.1 Secure Encrypted Virtualization
The SEV technology offers protection mechanisms for VMs in un-
trusted environments, such as cloud environments [30]. In contrast
to Intel’s Software Guard Extensions (SGX), which focus on pro-