title:POSTER: A Hybrid Botnet Ecological Environment
author:Dai Yumei and
Liang Yu and
Li Ke
Poster: A Hybrid Botnet Ecological Environment 
 Dai Yumei 
Liang Yu 
Li Ke 
Beijing University of Posts and 
Beijing University of Posts and 
Beijing University of Posts and 
Telecommunications 
PI:EMAIL 
Telecommunications 
PI:EMAIL 
Telecommunications 
PI:EMAIL 
ABSTRACT 
Research into defense against botnets, especially countermeasures 
against  the  command  and  control  (C&C)  protocol,  has  become 
increasingly  significant  as  several  large-scale  botnets  have 
resulted in serious threats on the Internet. However, most existing 
research efforts lack safe and efficient analysis platforms for C&C 
protocol  fuzzing.  Moreover,  owing  to  the  complex  triggering 
conditions  of  botnet  behaviors,  these  analysis  platforms  are 
unable to discover some of the “potential” behaviors of bots. To 
be  well  prepared  for  future  attacks,  increasing  number  of 
researchers  have  begun  to  study  advanced  botnet  designs  that 
could  be  developed  by  botmasters  in  the  near  future;  however, 
they  need  a  relatively  closed  and  controllable  environment 
designed by researchers to quantitatively evaluate the capabilities 
of  these  next-generation  botnets.  Consequently,  we  propose  the 
Hybrid  Botnet  Ecological  Environment  (HBEE),  which  aims  to 
make bots expose as many of their execution paths as possible, in 
order to mine the C&C protocol vulnerabilities of bots as well as 
to  evaluate  the  capability  of  advanced  botnets.  Our  design  can 
also  prevent  bots  from  causing  harm  to  the  real  Internet  by 
malicious  flow  filtration  and  C&C  server  spoofing.  Our 
preliminary results show that HBEE can observe communication 
actions  and  produce  accurate  and  comprehensive  data  about 
botnet behaviors and advanced botnet capabilities. 
Categories and Subject Descriptors 
D.4.6 [OPERATING SYSTEMS (C)]: Security and Protection 
General Terms 
Design, Security 
Keywords 
Botnet, HBEE, C&C, Vulnerability 
1.  INTRODUCTION 
A  botnet  comprises  a  network  of  compromised  computers 
controlled by an attacker (botmaster) [1]. Recently, botnets have 
become  the  root  cause  of  many  Internet  attacks  such  as  Email 
spam, seeding malware, click fraud, and illegal BitCoin Mining. 
These concerns have prompted academia and industry to analyze 
and shut down large-scale botnets, such as Conficker, Zeus, and 
ZeroAccess.  Although  remarkable  research  on  botnet  C&C 
Permission to make digital or hard copies of part or all of this work for 
personal or classroom use is granted without fee provided that copies are 
not  made  or  distributed  for  profit  or  commercial  advantage  and  that 
copies bear this notice and the full citation on the first page. Copyrights 
for third-party components of this work must be honored. For all other 
uses,  contact 
the 
owner/author(s). 
CCS’14, November 3–7, 2014, Scottsdale, Arizona, USA. 
ACM 978-1-4503-2957-6/14/11. 
http://dx.doi.org/10.1145/2660267.2662369 
the  Owner/Author.  Copyright 
is  held  by 
protocol  analysis  has  been  conducted  [3]  [4],  research  on  the 
infrastructure  of  large-scale  botnet  operation  and  monitoring  is 
still crucial, and various problems still remain to be resolved. 
To the best of our knowledge, previous studies mainly focused on 
obtaining  limited  information  on  aggregate  botnet  behaviors 
triggered by a single environment. Consequently, they may miss  
some  potential  botnet  activities  or  even  lose  opportunities  to 
discover  C&C  protocol  vulnerabilities.  More  specifically,  the 
problem  of  how  to  trigger  potential  bots  behaviors  and  gather 
maximal data on network activities still remains unresolved. 
To  ensure  preparedness  against  future  attacks,  Wang  et  al.  [1] 
presented an advanced hybrid peer-to-peer botnet that is, in theory, 
more difficult to be shut down, monitored, and hijacked. Further, 
Cui [2] presented a design for resilient and efficient bidirectional 
communication  botnets,  along  with  a  method  of  quantitatively 
evaluating the capability of advanced botnets. 
To address the problems identified above, we propose the Hybrid 
Botnet Ecological Environment (HBEE). Here, the term “Hybrid” 
means  that  our  proposed  environment  simultaneously  supports 
TrueBot,  VirtualBot  and  FutureBot  operations.  HBEE  is  able  to 
provide various virtual machine (VM) operation environments by 
setting  both  hardware  and  software  configurations.  The 
isomerized  VMs  enable  triggering  of  the  different  behaviors  of 
bots  and  extraction  of  multiple  protocol  specifications  such  as 
server lists, format of C&C messages and  signatures.  Combined 
with  reverse  engineering  techniques,  we  determine  protocol 
vulnerabilities of bots (e.g., denial of service and; buffer overflow) 
to the greatest extent possible. More specifically, considering that 
botnets  and  their  behaviors  change  rapidly,  current  research 
efforts that are geared towards analysis will increasingly have to 
rely  on  external  observations  of  botnet  behaviors 
from 
environment such as HBEE, rather than necessarily being able to 
crack  and  reverse  engineer  botnet  C&C  traffic.  Moreover,  in 
HBEE,  using  FutureBot,  we  can  evaluate  the  capabilities  of 
advanced  botnets;  such  as  WangBot  [1]  and  RoemBot  [2].  The 
results  of  the  preliminary  experiments  conducted  verify  the 
feasibility of HBEE. 
2.  SYSTEM DESIGN 
Architecture:  The  architecture  of  our  proposed  system  is 
depicted  in  Figure  1.  It  consists  of  four  main  parts:  OpenStack, 
BotGroup, HoneyServer Group, and Cuckoo Sandbox. 
OpenStack,  a  free  cloud  platform,  is  the  core  of  HBEE.  It  not 
only  provides  a  communication  and  execution  environment  for 
BotGroup, but also supports and monitors behavior both internal 
and  external  to  VM.  OpenStack  also  supports  management  of 
large-scale  VMs,  which  facilitates  the  generation  of  wide-scale 
communication traffic. 
1421time-zones,  OS 
BotGroup consists of TrueBot, VirtualBot and FutureBot.  
TrueBot comprises real bot - binaries and runs in VMs that have 
been deployed with tiny HIPS, which is used to monitor the host-
level  behaviors  of  TrueBot,  such  as  registry  modifications, 
Startup  deletions,  and  progress  executions,  and  finally  send  all 
monitoring  data  to  the  Analysis  Center.  Botnets  have  become 
sufficiently  sophisticated  and  complex  to  be  able  to  mask  their 
presence  from  detection  systems  and  to  attack  specific  targets; 
therefore,  diverse  environments  are  needed  to  activate  TrueBot 
behavior.  In  order  to  trigger  various  TrueBot  execution  paths, 
HBEE  provides  VMs  with  various  property  settings,  such  as 
countries, 
network 
environments, antivirus programs, and software applications etc. 
The various VM property settings are listed in Table 1. 
FutureBot  was  designed  by  researchers  in  order  to  study 
advanced botnets, such as Wang [1] and Cui [2], and helps them 
to  evaluate  the  capabilities  of  the  advanced  botnets,  such  as  the 
capability of maintaining control of its remaining bots even after a 
substantial portion of the botnet population has been removed by 
defenders, the capability of preventing significant exposure of the 
network topology when some bots are captured by defenders, the 
capability  of  monitoring  and  obtaining  complete  information 
about a botnet by its botmaster, and the capability of preventing 
or  making  it  harder  for  defenders  to  detect  bots  via  their 
communication traffic patterns.  
versions/languages, 
the  basic  modules 
VirtualBot can simulate multiple instances of given TrueBots in 
parallel for an extended period of time, supporting multiple C&C 
protocols, such as IRC, HTTP, P2P, and Domain Flux. Thus they 
are 
for  evaluating  FutureBot  and 
communicating with P2P based TrueBot. For example, using the 
P2P  protocol,  VirtualBot  communicates  with  real  P2P  bots  to 
exchange peer-lists and transfer commands. The ultimate goal for 
which  VirtualBot  is  designed  to  check  whether  regular  attacks 
(Sybil attack or peer-list pollution) will work.  
HoneyServer  Group  primarily  comprises  a  DNS  Server, 
HoneyServer  and  Analysis  Center.  The  function  of  the  DNS 
Server is to redirect all malicious TrueBot traffic to HoneyServer, 
which can simulate most of the known  services,  such  as  HTTP, 
IRC,  FTP,  and  TFTP,  so  as  to  hijack  or  sinkhole  the  C&C  and 
propagation procedures of TrueBot. Analysis Center demonstrates 
in  real  time  the  data  analyzed  by  HIPS,  Cuckoo  Sandbox  and 
C&C Activities Logs. 
Cuckoo  Sandbox  (Automated  Malware  Analysis)  is  deployed 
outside of OpenStack; it can analyze the activities of bots in files, 
processes,  and  network  as  a  complement  and  capture 
communication  data  between  the  C&C  Server  and  bots.  It  also 
goes  a  step  future  to;  determine  the  topological  structure  of  the 
botnets and discover a suspicious C&C Servers. Finally, Cuckoo 
Sandbox  sends  all  monitoring  data  to  the  Analysis  Center  for 
analysis. 
Figure 1. HBEE Architecture 
1422OS versions 
OS languages 
Antivirus programs 
Software applications 
Table 1. The various property settings of the VMs 
Windows 2003, Windows XP, Windows 7, Windows 8, Ubuntu,  CentOS, etc. 
Simplified Chinese, Traditional Chinese, English, Japanese, French, Spanish, etc. 
Avira, AVG, Avast, Eset Smart Security, Kaspersky, ESET NOD 32, etc. 
Internet Explorer, Google Chrome, Firefox, Foxmail, Office, Adobe Acrobat, etc. 
3.  PRELIMINARY RESULTS 
We implemented a prototype of the botnet proposed by Wang et 
al.  [1]  in  HBEE  to  quantitatively  evaluate  its  capability.  The 
prototype  provides  robust  network  connectivity,  individualized 
encryption and control traffic dispersion, limited botnet exposure 
to  each  captured  bot,  and  easy  monitoring  and  recovery  by  its 
master.  We  also  implemented  a  prototype  called  RoemBot, 
proposed  by  Cui  et  al.  [2],  RoemBot  has  a  more  resilient 
commands  distribution  channel,  a  recoverable 
information 
registration channel, and a more efficient data uploading channel. 
In  addition,  we  deployed  a  Waledac  botnet  and  enabled  the 
custom  virtual  bots  to  communicate  with  the  true  Waledac 
samples  and  obtain 
their  peer-list.  Further,  we  observed 
ZeroAccess inside HBEE for more than one month to monitor its 
activities, and consequently discovered that ZeroAccess is used to 
download  other  malware  onto  an  infected  VM  from  a  botnet 
involved in BitCoin Mining and click fraud activities. 
4.  CONCLUSION AND FUTURE WORK 
Our  proposed  Hybrid  Botnet  Ecological  Environment  (HBEE) 
effectively facilitates determination of the potential vulnerabilities 
of bots and quantitative evaluation of the capabilities of advanced 
botnets. 
We plan to improve the closure and controllability of HBEE and 
conduct  more  research  into  methods  of  countering  advanced 
botnets  in  future  work.  Wang  et  al.  [1]  indicate  that  honeypots 
may  play  an  important  role  in  defending  against  the  advanced 
botnet  they  presented.  Therefore,  we  will  also  consider  how  to 
deploy honeypots efficiently in HBEE. 
5.  ACKNOWLEDGMENTS 
The authors would like to thank the anonymous reviewers for thei
r helpful comments for improving this paper. This work is support
ed by the National Natural Science Foundation of China under gra
nt (No. 61202409) and the National High Technology Research a
nd Development Program (863 Program) of China under grant (N
o. 2012AA012902). 
6.   REFERENCES 
[1]  Wang, P., Sparks, S., and Zou, C.C. An advanced hybrid 
peer to peer botnet. In Proceedings of the First Workshop on 
Hot Topics in Understanding Botnets. HotBots'07. 2007.  
[2]  Xiang, C., Binxing, F., Jinqiao, S., Chaoge, L. Botnet triple-
channel model: Towards resilient and efficient bidirectional 
communication botnets. In Security and Privacy in 
Communication Networks, Springer International 
Publishing. pp. 53-68, 2013. 
[3]  John J. P., Moshchuk A., Gribble S.D., and Krishnamurthy 
A. Studying spamming botnets using Botlab [C]. 6th 
USENIX Symposium on Network Systems Design and 
Implementation. Berkeley, CA: USENIX Association, pp. 
291-306, 2009.  
[4]  Chia YC, Juan C. Botnet Infiltration: Finding Bugs in Botnet
 Command and Con-trol[EB/OL]. 2009[2011-6-10]. 
http://www.eecs.berkeley.edu/~chiayuan/cs261  
1423