Experiment result
Failure
No effect
e
g
a
r
e
v
o
c
t
l
u
a
F
100%
75%
50%
25%
0%
Experiment result
Failure
No effect
e
n
i
l
e
s
a
B
d
e
n
e
d
r
a
H
e
n
i
l
e
s
a
B
d
e
n
e
d
r
a
H
e
n
i
l
e
s
a
B
d
e
n
e
d
r
a
H
e
n
i
l
e
s
a
B
d
e
n
e
d
r
a
H
(a) Coverage, without result weighting
(b) Coverage, with result weighting
Fault
Coverage
Baseline
Hardened
BIN_SEM2
SYNC2
w/o
Weighted
Weighted
59.09 % 87.97 % 53.83 % 87.07 %
79.64 % 99.99 % 89.64 % 98.76 %
w/o
(c) Fault coverage, raw data. The percentages without (w/o) weighting are
off by 9–33 percent points compared to the weighted coverages.
bin_sem2
sync2
bin_sem2
sync2
2.0e+06
1.5e+06
1.0e+06
5.0e+05
s
t
n
e
m
i
r
e
p
x
e
d
e
l
i
a
f
#
e
t
l
u
o
s
b
A
4e+06
3e+06
2e+06
1e+06
1e+11
1e+08
1e+05
1e+02
1e+08
1e+05
1e+02
0.0e+00
0e+00
e
n
i
l
e
s
a
B
d
e
n
e
d
r
a
H
e
n
i
l
e
s
a
B
d
e
n
e
d
r
a
H
e
n
i
l
e
s
a
B
d
e
n
e
d
r
a
H
e
n
i
l
e
s
a
B
d
e
n
e
d
r
a
H
(d) Absolute failure result counts, without
result weighting
(e) Absolute failure result counts,
with result weighting (log. scale)
BIN_SEM2
SYNC2
Failure
Count
Baseline
Hardened
w/o
85,636
2,110,356
Weighted
8.55×107
5.02×108
(f) Absolute failure counts, raw data. Without (w/o) weighting, the failure
counts are underestimated by several orders of magnitude.
Weighted
5.08×1011
3.15×108
w/o
435,371
4,459,345
Characteristics
BIN_SEM2
Cycles
Baseline
Hardened
559,868,647
559,905,321
Mem.
942
1,134
SYNC2
Cycles
313,132
10,170,140
Mem.
264
496
(g) Benchmark characteristics: Runtime in CPU cycles, and memory usage
(data addresses read or written during the run) in bytes.
Fig. 2. FI result interpretation with and without avoidance of Pitfalls 1 and 3.
323323
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:50:36 UTC from IEEE Xplore.  Restrictions apply. 
Going beyond their statement, the literature presents no
plausible argument why fault-space coordinates we do not
conduct any experiment for (the white dots in Figure 1b, known
a priori to yield “No Effect”) should be omitted in the result
calculation. Section IV and V will shed more light on this
debate; for now, we assume that all coordinates – the example
fault-space size N is 12 · 9 = 108 – should be included in
the fault coverage calculation, which now correctly (with a
weight of 7, the size of each light-gray equivalence class in
Figure 1b, for each of the four “Failure” results) calculates as
c = 1 − F
108 ≈ 74.1%.
= 1 − 4·7
N
Another explanation why this weighting is necessary can be
derived from intuition: the longer data lives in a memory cell,
the more probable a soft error will affect it. If no weighting
is applied, the same fault coverage is calculated regardless of
seven (Figure 1b) or seven million cycles between the store and
the subsequent load of the data. Then, the pruning technique is
not only a methodology to reduce FI experiment efforts, but has
a severe impact on the result: The fault model unintentionally
has degenerated from “uniform transient single-bit ﬂips in main
memory” to “uniform transient single-bit ﬂips in main memory
while a memory read operation is in progress” (modeling
something similar to single-bit ﬂips on the memory bus). Hence,
the results are extremely skewed depending on the amount of
memory accesses the benchmark executes, and the variance in
memory-data lifetimes.
Now that we know def/use equivalence classes should be
weighted in theory, does this have an impact on real-world
examples? Figure 2a and 2b show fault coverages for the
baseline and hardened variants of the BIN_SEM2 and SYNC2
benchmarks (cf. Section II-D), calculated without and with
weighting. The difference is directly visible: in the unweighted
case, the fault coverages of all benchmark variants are severely
underestimated compared to the weighted case. The coverage
values are off by 9.1 (SYNC2 hardened) up to 33.2 percent
points (SYNC2 baseline).
The reason for the bias in the two example benchmarks
is a correlation between def/use equivalence class size and
experiment outcome. For the four benchmark variants we use,
the only positive aspect is that the trend from the baseline
to the hardened variants is the same in all cases, so that no
dangerously wrong design decisions would have been made
using the unweighted coverage results.
Pitfall 1: Unweighted Result Accounting
Summarizing this section, our ﬁrst pitfall is the unweighted