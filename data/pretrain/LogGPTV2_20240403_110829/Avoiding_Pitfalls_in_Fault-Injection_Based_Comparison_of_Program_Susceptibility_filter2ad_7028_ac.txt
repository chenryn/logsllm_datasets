### Experiment Results and Analysis

#### Summary of Experiment Outcomes
- **Failure**: 100%
- **No Effect**: 75%, 50%, 25%, 0%

#### Coverage Analysis
- **(a) Coverage, without result weighting**
- **(b) Coverage, with result weighting**

| Fault | Baseline | Hardened | BIN_SEM2 | SYNC2 |
|-------|----------|----------|----------|-------|
| w/o   | 59.09%   | 87.97%   | 53.83%   | 87.07% |
| Weighted | 79.64%  | 99.99%   | 89.64%   | 98.76% |

- **(c) Fault coverage, raw data**:
  - The percentages without (w/o) weighting are off by 9–33 percentage points compared to the weighted coverages.

#### Absolute Failure Counts
- **(d) Absolute failure result counts, without result weighting**
- **(e) Absolute failure result counts, with result weighting (log. scale)**

| Fault | Baseline | Hardened |
|-------|----------|----------|
| w/o   | 85,636   | 2,110,356 |
| Weighted | 8.55×10^7 | 5.02×10^8 |

- **(f) Absolute failure counts, raw data**:
  - Without (w/o) weighting, the failure counts are underestimated by several orders of magnitude.

| Fault | Baseline | Hardened |
|-------|----------|----------|
| w/o   | 435,371  | 4,459,345 |
| Weighted | 5.08×10^11 | 3.15×10^8 |

#### Benchmark Characteristics
- **(g) Benchmark characteristics: Runtime in CPU cycles, and memory usage (data addresses read or written during the run) in bytes**

| Benchmark | Cycles | Memory (Bytes) |
|-----------|--------|----------------|
| BIN_SEM2  | 559,868,647 | 942            |
| Hardened  | 559,905,321 | 1,134          |
| SYNC2     | 313,132      | 264            |
| Hardened  | 10,170,140   | 496            |

### Interpretation of Fault Injection (FI) Results

The literature does not provide a plausible argument for omitting fault-space coordinates that yield "No Effect" (the white dots in Figure 1b). Section IV and V will further address this debate. For now, we assume all coordinates should be included in the fault coverage calculation. 

For a fault space size \( N = 12 \times 9 = 108 \), the correct fault coverage with a weight of 7 (the size of each light-gray equivalence class in Figure 1b) is calculated as:

\[ c = 1 - \frac{4 \times 7}{108} \approx 74.1\% \]

#### Importance of Weighting
Weighting is necessary because the longer data lives in a memory cell, the more likely it is to be affected by a soft error. Without weighting, the same fault coverage is calculated regardless of whether the data is stored for seven or seven million cycles. This can skew results, especially if the benchmark has varying memory access patterns and data lifetimes.

#### Impact on Real-World Examples
Figures 2a and 2b show fault coverages for the baseline and hardened variants of the BIN_SEM2 and SYNC2 benchmarks, both with and without weighting. The unweighted case underestimates fault coverages, with differences ranging from 9.1% (SYNC2 hardened) to 33.2% (SYNC2 baseline).

#### Correlation and Bias
The bias in the two example benchmarks is due to a correlation between def/use equivalence class size and experiment outcome. While the trend from baseline to hardened variants remains consistent, using unweighted coverage results could lead to incorrect design decisions.

### Pitfall 1: Unweighted Result Accounting
Summarizing this section, the first pitfall is the unweighted accounting of results, which can significantly underestimate fault coverage and absolute failure counts.