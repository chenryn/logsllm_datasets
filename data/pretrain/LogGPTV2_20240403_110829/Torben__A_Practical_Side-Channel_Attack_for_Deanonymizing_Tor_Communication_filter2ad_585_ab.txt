ing the following URL
http://server.com/res?str
where res is simply a resource of size r1, such as an im-
age or a document, and str a random string of length r2
attached to the URL. We choose a random string here to
reduce caching eﬀects induced by some browsers. Note that
the contacted server can be any server oﬀering resources
with the required sizes. It is suﬃcient to ﬁnd a server that
oﬀers resources with four diﬀerent sizes to successfully carry
out the attack. Consequently, the server does not need to be
controlled by the attacker and hence provides no information
about the attacker’s origin.
3.3.2 Web Page Markers
We are now able to transmit short messages over the side
channel to expose web pages visited using Tor.
If the at-
tacker only wants to monitor a single web page, choosing a
constant message is suﬃcient. However, to monitor multiple
web pages or track how a user browses from one page to an-
other, the web page markers need to be designed such that
they have a large pairwise Hamming distance. To achieve
this, we use the 20 byte SHA-1 hash value of the monitored
URL as a web page marker. This ensures that there is a
natural mapping between URLs and their markers.
3.4 Detection of Web Page Markers
The presented side channel allows web page markers to
be transmitted and recognized by human observers, yet due
to the vast amount of network traﬃc to analyze, our at-
tack only becomes practical if the markers can be detected
automatically.
To identify markers in a monitored data transfer sequence,
we use a sliding window and classify the sequence under each
window independently. This highlights an advantage of our
attack over related traﬃc analysis attacks. Since the marker
is transmitted in a small time frame, it is perfectly valid to
limit the analysis to small sequences of the network trace,
in our experiments 100 symbols, thus signiﬁcantly reducing
the computational resources required for training a classiﬁer
and detecting web page markers.
In order to detect the markers, we train a multi-class Sup-
port Vector Machine (SVM) with probabilistic outputs on
the sequences of individual web page markers. Given an
unknown sequence, the SVM can then be used to identify
the most likely web page marker present in this sequence.
Due to the probabilistic output, we are able to quantify the
conﬁdence of this decision, which enables us to determine se-
quences that do not correspond to any of the known markers.
A sequence is thereby mapped into a high-dimensional vec-
tor space using positional n-grams which we introduced for
this purpose. More details on the embedding can be found
in the technical report [1].
4. EVALUATION
We evaluate the Torben attack in a series of experiments
that allows us to assess its eﬀectiveness in diﬀerent set-
tings. After presenting our experimental setup (Section 4.1
& 4.2), we ﬁrst evaluate the attack in a closed-world set-
ting (Section 4.3) where users can only visit web pages from
a ﬁxed set. We furthermore proceed to consider an open-
world setting where users can freely choose web pages from
a potentially inﬁnite number of web pages—60,000 in our
experiment—(Section 4.4). The open-world setting allows
us to obtain a good approximation for the false-positive rate
of our attack. Finally, we perform a live experiment where
we evaluate the ability of Torben to identify web page mark-
ers in real-world traﬃc generated by multiple users (Sec-
tion 4.5). Note, that a more detailed description of our
evaluation can be found in [1].
4.1 Data Collection
To automatically visit a large number of web pages over
the Tor network in an acceptable time, we use the Selenium
WebDriver (version 2.38.3), a browsing automation plug-in
for Mozilla Firefox. The plug-in is installed along side the
Tor browser bundle (version 3.5), the standard distribution
of Tor. This ensures that the browser conﬁguration used in
our experiments almost exactly matches the conﬁguration
employed by most Tor users.
For our experiments we automatically visit diﬀerent sets
of the top one million web pages from the Alexa ranking
(retrieved in February 2014). For the vast majority of web
pages, the Selenium WebDriver can automatically deter-
mine when the page is fully loaded based on loading of the
page icon.
In rare cases, successful page load is not de-
tected within 3 minutes. In these cases we discard this web
page and use the next page in the Alexa ranking instead.
Moreover, we remove variants of very similar pages. For ex-
ample, we consider only google.com and not google.de or
google.fr. This is necessary to obtain a better comparison
with website ﬁngerprinting approaches as these approaches
are known to fail if web pages are too similar.
4.2 Detection Setup
To perform the Torben attack in practice, we implement
the preprocessing, transmission and detection steps outlined
in Section 3. For extracting positional n-grams from network
traces, we use the tool Sally 1 (version 0.8.3) and for learning
the probabilistic classiﬁcation the library LibSVM 2.
For training the detection method described in Section 3.4,
we generate 100 web page markers using the SHA-1 hashes
of the top Alexa web pages and record 50 transmissions for
each of these markers over Tor. Note that only the web
page markers and not the actual web pages are recorded for
training our detection method.
4.3 Closed-World Evaluation
In the ﬁrst experiment, we consider a closed-world set-
ting, where we visit each of the top 100 Alexa web pages
50 times, ﬁrst in February 2014 and a second time in April
2014 resulting in two data sets. To simulate the attack sce-
nario of a remote marker, we use a reverse proxy and inject
a small JavaScript snippet into each page that opens a sep-
1http://www.mlsec.org/sally/
2http://www.csie.ntu.edu.tw/˜cjlin/libsvm/
arate browser window containing the marker, similar to an
advertisement. The marker is transmitted after a delay of
30 seconds. As 10 of the 100 web pages load very slowly
over Tor and largely overlap with the marker, we increase
the delay to 120 seconds in these cases.
The transmission time of the web page markers ranges
from 12 to 20 seconds with a mean of 18 seconds. As the
transmission happens in the background, these slight diﬀer-
ences to the original web page traﬃc are hardly noticeable,
in particular because communication over Tor often suﬀers
from rather long loading times.
To enable a comparison with related website ﬁngerprint-
ing attacks, we implement the approaches by Herrmann et
al. [4], Panchenko et al. [8] and Cai et al. [2], where the
ﬁrst is slightly modiﬁed to use an SVM instead of an MNB
classiﬁer. For all approaches, we conduct the same experi-
mental procedure as for the Torben attack, except that we
do not implant markers into the web pages. Furthermore,
our detection method is trained solely on web page markers,
whereas the ﬁngerprinting attacks are trained on a sample
of the web pages visited in February 2014.
Figure 2a shows the performance of Torben and the web-
site ﬁngerprinting attacks on the web pages visited in Febru-
ary 2014. Our approach is able to correctly deanonymize
95% of the web page visits, whereas the performance of the
other attacks ranges from 38.9% to 90.6%. However, all
website ﬁngerprinting attacks suﬀer from changes in web
content. When applied to the same web pages visited in
April 2014, none of the passive approaches is able to cor-
rectly identify more than a third of the web pages, as shown
in Figure 2b. By contrast, the Torben attacks attains a sim-
ilar performance as in February 2014 and outperforms the
website ﬁngerprinting attacks, as the learned markers do not
change over time.
Overall, this experiment demonstrates that the proposed
side-channel attack can deanonymize web page visits with
high accuracy in a closed-world setting.
4.4 Open-World Evaluation
In this experiment, we consider an open-world setting,
where the user can freely visit web pages from a large un-
known set and only few of these pages are tagged with a
web page marker. The adversary is thus interested in deter-
mining whether marked web pages have been visited by a
particular user.
We extend the previous experiment by additionally choos-
ing 60,000 web pages at random from the Alexa top one
million ranking, none of which are part of the top 100 web
pages. Each of these web pages is then visited once over
Tor without sending a marker. This large set of web pages
enables us to estimate the false-positive rate of the Torben
attack. Due to the usage of an SVM with probabilistic out-
put, we can simply identify data transfer sequences that do
not contain a web page marker by setting a threshold on the
determined probabilities.
Figure 2c shows a ROC curve for the detection perfor-
mance of Torben in this experiment. Note that the false-
positive rate on the x-axis is given in the range 0 to 0.001,
while the detection rate is shown on the y-axis between 0.6
and 1.0. The attack enables detecting more than 91% of
the 100 web pages with no false positives in set of 60,000
additional web pages.
The outcome of the open-world evaluation demonstrates
the reliability of the web page markers, which are unlikely to
be confused with regular web page traﬃc and enable detect-
ing marked pages with a very low false-positive rate. This
reliability rests on the design of the side channel that makes
use of atypical request-response pairs for transmitting infor-
mation (Section 3.2).
4.5 Live Evaluation
The previous experiments already show the eﬀectiveness
of our approach on a large amount of data that has been
recorded automatically. However, in order to fortify the ob-
tained results, we conduct a further experiment in which we
analyze web traﬃc of real users.
In this experiment, four diﬀerent users surf through the
web for roughly two hours using Tor. Each user visits ar-
bitrary web pages and from time to time, randomly chosen
marked web pages. We simulate the attack scenario of a
remote marker as described in Section 4.3 and set the trans-
mission delay for markers to 120 seconds.
Afterwards, the recorded traﬃc of each user is split into
chunks of three minutes that are separately analyzed using a
sliding window as described in Section 3.4. Hence, the classi-
ﬁer outputs a label and a probability score for each chunk. If
the probability score of a chunk is below a particular thresh-
old, we conclude that the user did not visit any marked web
pages during this time frame. We select this threshold to
be t = 0.1 based on several test runs which we conducted
in advance. From a total of 34 visited marked web pages,
we are able to detect and classify 31 correctly. Furthermore,
the classiﬁer does not output any false positives.
5. LIMITATIONS AND DEFENSES
Our experiments show that Torben is a reliable deanony-
mization technique against Tor. However, its limitations
could enable development of eﬀective defenses.
First of all, our attack makes no attempts of hiding web
page markers. In consequence, developing a detection mech-
anism that identiﬁes and suppresses communication on our
side channel may be an eﬀective method to protect users.
Such mechanisms could be implemented either on the client
side directly in the form of a browser plug-in or even by Tor
nodes to protect all clients at once.
Second, our evaluation shows that web page markers may
be corrupted if they largely overlap with the loading of a
web page. This suggests that, although our classiﬁcation
model is able to compensate some traﬃc interference using
positional features, it fails if the interference becomes too
severe. A second option would thus be to introduce chaﬀ
traﬃc to disturb the side-channel communication. Yet, this
option may not be satisfactory in practice, as it introduces
additional traﬃc and might lower Tor’s overall performance.
6. RELATED WORK
Attacks against anonymization techniques have been a
vivid area of research in the last years. Several researchers
have recognized that, while it may not be possible to deci-
pher encrypted messages, when transmitted over a commu-
nication link, important characteristics of the data such as
its size and partitioning into data units is often disclosed.
For example, Liberatore et al. have shown that it is pos-
(a) February 2014
(b) April 2014
(c) ROC curve
Figure 2: Evaluation of the detection performance in the closed-world (a,b) and open-world scenario (c).
sible to identify web pages in encrypted HTTP traﬃc by
observing characteristic packet lengths [7].
Based on this observation, website ﬁngerprinting attacks
try to deanonymize Tor users by identifying patterns in the
encrypted traﬃc between user and guard node, which are
characteristic for particular monitored web pages [2, 4, 8].
All of these approaches, however, suﬀer from false-positive
rates that are too high to enable practical application. More-
over, our experiment demonstrate that website ﬁngerprint-
ing suﬀers from changes in web content and degrades de-
anonymization performance over time.
While website ﬁngerprinting attacks consider an attacker
only between the client and its entry node, traﬃc conﬁrma-
tion attacks require an attacker who is able to correlate the
traﬃc on both ends of a communication path. Several au-
thors demonstrated the eﬀectiveness of such attacks [6, 9].
However, this scenario requires the attacker to have access
to both ends of the connection over a long period of time.
Passive traﬃc analysis attacks require traﬃc to be ob-
served for a longer period of time before users can be ef-
fectively deanonymized. Approaches where attackers ac-
tively attack the communication path to lower the required
amount of time have therefore been proposed. Several of
these watermarking schemes have been proposed for mixed
networks which use inter-packet delays to encode water-
marking sequences [5, 10]. In contrast to Torben, these at-
tacks do not take place at the application layer and are thus
much more diﬃcult to realize in practice. Furthermore, they
consider a stronger attacker who is able to control the exit
node or the link between the exit node and the server.
7. CONCLUSION
Tor is among the largest and best understood anonymiza-
tion networks operated to date, protecting the privacy of
over a million users worldwide. This paper presents a novel
deanonymization attack on Tor that exploits a fundamen-
tal weaknesses of low-latency anonymization networks. In
particular, we show that an attacker capable of providing
web content to users, e.g., through banner advertisements or
cross-site scripting, is able to deanonymize users via a side-
channel attack. By transmitting web page markers through
this side channel, the attacker can expose the web pages a
user visits within a couple of seconds. This attack is con-
siderably more eﬀective than known website ﬁngerprinting
attacks and far less intrusive than browser exploits used in
the wild. Fortunately, the side-channel communication is
clearly visible in network traces and hence it may be possible
to implement detection approaches as a ﬁrst countermeasure
against this attack.
Acknowledgements. The authors acknowledge funding
from BMBF under the project INDI (FZK 16KIS0154K)
and from DFG under the project DEVIL (RI 2469/1-1).
References
[1] D. Arp, F. Yamaguchi, and K. Rieck.
Torben:
Deanonymizing Tor communication using web page
markers. Technical Report IFI-TB-2014-01, University
of G¨ottingen, 2014.
[2] X. Cai, X. C. Zhang, B. Joshi, and R. Johnson. Touch-
ing from a distance: Website ﬁngerprinting attacks and
defenses.
In Proc. of ACM Conference on Computer
and Communications Security (CCS), 2012.
[3] R. Dingledine, N. Mathewson, and P. Syverson. Tor:
The second-generation onion router. 2004.
[4] D. Herrmann, R. Wendolsky, and H. Federrath. Web-
site ﬁngerprinting: Attacking popular privacy enhanc-
ing technologies with the multinomial naive-bayes clas-
siﬁer. In Proc. of ACM Workshop on Cloud Computing
Security, 2009.
[5] A. Houmansadr and N. Borisov. Swirl: A scalable wa-
termark to detect correlated network ﬂows. In Proc. of
Network and Distributed System Security Symposium
(NDSS), 2011.
[6] B. N. Levine, M. K. Reiter, C. Wang, and M. K. Wright.
Timing attacks in low-latency mix systems. In Finan-
cial Cryptography, 2004.
[7] M. Liberatore and B. N. Levine. Inferring the source
of encrypted http connections. In Proc. of ACM Con-
ference on Computer and Communications Security
(CCS), CCS ’06, 2006.
[8] A. Panchenko, L. Niessen, A. Zinnen, and T. En-
gel. Website ﬁngerprinting in onion routing based
anonymization networks. In Proc. of ACM Workshop
on Privacy in the Electronic Society, 2011.
[9] V. Shmatikov and M.-H. Wang. Timing analysis in low-
latency mix networks: attacks and defenses. 2006.
[10] X. Wang, S. Chen, and S. Jajodia. Network ﬂow water-
marking attack on low-latency anonymous communica-
tion systems. In Proc. of IEEE Symposium on Security
and Privacy (S&P), 2007.
HerrmannPanchenkoCaiTorpedo020406080100Detectionaccuracy38.958.790.695.0HerrmannPanchenkoCaiTorpedo020406080100Detectionaccuracy14.626.132.795.90.00000.00020.00040.00060.00080.0010Falsepositiverate0.650.700.750.800.850.900.951.00DetectionrateFebruary2014April2014