# 十一、AKS 中的网络安全
保护网络是保护应用的关键活动。一方面，安全网络的目标是允许用户连接到您的应用并使用您提供的所有功能。另一方面，您还需要保护您的网络免受攻击者的攻击。这意味着确保他们无法访问您网络的关键部分，即使他们能够访问，这也是有限的。
说到 AKS 中的网络安全，有两个不同的层来保护网络。首先是控制平面。控制平面指托管 Kubernetes 应用编程接口的托管 Kubernetes 主服务器。默认情况下，控制平面暴露在互联网上。您可以通过使用名为**授权 IP 范围**的功能来限制哪些公共 IP 地址可以访问控制平面，或者通过部署私有集群来保护控制平面，这意味着只有连接到您的虚拟网络的机器才能访问控制平面。
要保护的第二个网络层是集群上运行的工作负载。有多种方法可以保护工作负载。第一种方法是使用 Azure 网络功能，例如 Azure 防火墙或**网络安全组** ( **NSGs** )。保护工作负载的第二种方法是使用名为网络策略的 Kubernetes 功能。
在本章中，您将探索保护 AKS 集群网络的不同方法。具体而言，本章包含以下部分:
*   AKS 中的网络与网络安全
*   控制平面网络安全
*   工作负载网络安全
由于 AKS 集群的大多数网络配置只能在集群创建过程中进行配置，因此在本章中，您将创建和销毁多个集群。
让我们从探索 AKS 中网络和网络安全的概念开始这一章。
## AKS 中的组网和网络安全
本节是对 AKS 中网络和安全概念的介绍。首先介绍控制平面，然后是工作负载网络，然后是网络安全。
### 控制平面联网
Kubernetes 集群的控制平面是承载集群的 Kubernetes API 服务器、管理调度程序和存储集群状态的基础结构。例如，当您使用**Kubernetes 集群交互时，您正在向 Kubernetes API 服务器发送命令。在 AKS 中，这个控制平面由微软管理，作为服务提供给你。**
默认情况下，控制平面通过互联网公开，连接到互联网的每个人都可以访问。但这并不意味着控制平面不安全。即使攻击者能够通过网络访问您的控制平面，他们仍然需要群集凭据来针对控制平面执行命令。
然而，通常情况下，组织仍然希望将网络访问限制在其 AKS 集群的控制平面上。AKS 中有两个功能，使您能够将网络访问限制在集群的控制平面。
第一个功能叫做**授权 IP 地址范围**。通过在 AKS 上配置授权的 IP 地址范围，您可以配置允许哪些 IP 地址访问您的应用编程接口服务器。这意味着不允许访问您的应用编程接口服务器的 IP 地址不能与您的应用编程接口服务器交互。这在*图 11.1* 中有说明:
![Configuring authorized IP ranges defines the IP addresses that are allowed to access your API server](img/B17338_11_01.jpg)
图 11.1:解释了授权的知识产权范围
另一种限制网络访问控制平面的方法是使用名为**私有集群**的功能。通过配置私有集群，您不会给控制平面一个公共可达的地址。该群集只能从专用网络访问。要连接到控制平面，您需要使用连接到**蔚蓝虚拟网络** ( **虚拟网络**)的机器。这台机器将使用名为 Azure 私有链接的 Azure 功能与控制平面通信。
私有链接是 Azure 的一项功能，允许您使用虚拟网络中的私有 IP 地址连接到托管服务。使用专用链路时，会在您的虚拟网络中创建一个专用链路端点。要连接到此专用链路端点，您必须从同一虚拟网络中托管的虚拟机、对等虚拟网络或通过连接到该虚拟网络的虚拟专用网络或 Azure 快速路由进行连接。在*图 11.2* 中，您看到了一个使用托管在同一虚拟网络中的虚拟机的例子。您可以看到，承载您的工作负载的节点池(1)以及连接到同一虚拟网络的虚拟机(2)可以连接到控制平面，但是通过互联网连接的用户(3)不能:
![Private Link allows you to connect to managed services using a private IP address in your virtual network](img/B17338_11_02.jpg)
图 11.2:解释了私有集群
重要的是要理解，授权的 IP 地址范围和私有集群都只为 Kubernetes 控制平面提供网络安全；它们不会影响工作负载网络。下一节将介绍工作负载网络。
### 工作负载联网
您在 AKS 中的工作负载部署在虚拟网络中部署的集群上。有许多方法可以在虚拟网络中配置和保护网络。在本节中，我们将介绍部署在虚拟网络中的工作负载的网络安全的几个重要配置选项。然而，这只是对这些概念的介绍。在部署生产集群之前，请参考 AKS 文档，以更深入地了解不同的配置选项:[https://docs.microsoft.com/azure/aks/concepts-network](https://docs.microsoft.com/azure/aks/concepts-network)。
您首先需要选择部署集群的网络模型。这种配置对安全性的影响有限，但从网络角度理解这一点很重要。有两种选择:
*   **Kubenet 组网(默认)**:通过使用 Kubenet 组网，集群节点从 VNet 中的子网获取一个 IP 地址。运行在这些节点上的 Pod 从覆盖网络中获得一个 IP 地址，覆盖网络使用与节点不同的地址空间。通过**网络地址转换** ( **网络地址转换**)启用点对点网络。kubenet 的好处是只有节点使用集群子网中的一个 IP 地址。
*   **Azure Container Network Interface(CNI)networking(advanced**):使用 Azure CNI，Pod 和节点都从创建集群的子网中获得一个 IP 地址。这样做的好处是，集群外部的资源可以直接访问 pods。它的缺点是您需要执行仔细的 IP 地址规划，因为每个 pod 都需要集群子网中的一个 IP 地址。
在这两种网络模式中，您可以在现有虚拟网络中创建集群，也可以让 AKS 代表您创建新的虚拟网络。
要考虑的第二个网络安全配置是通过外部防火墙路由入站和出站流量。这可能是 Azure 防火墙，也可能是第三方**网络虚拟设备** ( **NVA** )。通过外部防火墙路由流量，您可以应用集中式安全规则，进行流量检查，并记录流量访问模式。要进行配置，您需要在群集子网中配置一条**用户定义的路由** ( **UDR** ，通过外部防火墙路由来自您群集的流量。如果您希望进一步探讨这一点，请参考文档:[https://docs.microsoft.com/azure/aks/limit-egress-traffic](https://docs.microsoft.com/azure/aks/limit-egress-traffic)。
另一个网络安全选项是在 Azure 中使用 NSGs 来限制入站和出站流量。默认情况下，当您在 AKS 中创建一个**负载平衡器**类型的服务时，AKS 还将配置一个 NSG，以允许来自任何地方的流量进入该服务。您可以在 AKS 中调整该 NSG 的配置，以限制哪些入侵防御系统可以访问这些服务。
最后，您可以通过使用名为**网络策略**的 Kubernetes 功能来限制集群中的流量。网络策略是一个 Kubernetes 对象，它允许您配置某些 pods 上允许的流量。使用网络策略，您可以保护 pod 到 pod 的流量、pod 外部的流量以及 pod 到外部的流量。建议您主要对 pod 到 pod 流量(也称为东西向流量)使用网络策略，并对外部到 pod 或 pod 到外部流量(也称为南北向流量)使用外部防火墙或 NSGs。
就在集群上配置网络策略而言，AKS 支持两个选项。您可以使用 Azure 网络策略或 Calico 网络策略。Azure 网络策略由微软开发、维护和支持，而 Calico 网络策略是作为开源项目开发的，由一家名为 Tigera([http://tigera.io/](http://tigera.io/))的公司提供可选的商业支持。
在工作负载网络安全一节中，您将在群集上配置网络安全组和网络策略。配置外部防火墙超出了本书的范围；请参考前面提到的文档，了解有关此设置的更多信息。
## 控制平面网络安全
在本节中，您将探索保护 AKS 集群控制平面的两种方法:授权 IP 范围和私有集群。您将从更新您现有的集群以使用授权的 IP 范围开始。
### 使用授权的 IP 范围保护控制平面
在 AKS 上配置授权的 IP 范围将限制哪些公共 IP 地址可以访问 AKS 集群的控制平面。在本节中，您将在现有集群上配置授权的 IP 范围。您将流量限制在一个随机的公共 IP 地址，以验证流量阻塞是否有效。然后，您将从 Azure Cloud Shell 中配置要授权的 IP 地址，并查看这将如何允许流量。
1.  To start, browse to the Azure portal and open the pane for your AKS cluster. Select Networking in the left-hand navigation. Then, select the checkbox next to Set authorized IP ranges, and fill in the IP address, **10.0.0.0**, in the box below, as shown in *Figure 11.3*. You are not using this IP; this configuration is only to verify that you will no longer be able to connect to your Kubernetes control plane if your IP address is not authorized. Finally, hit the Save button at the top of the screen.
    ![Configuring an authorized IP from the Networking pane for your AKS cluster](img/B17338_11_03.jpg)
    图 11.3:配置授权的 IP
2.  Now, open the Azure Cloud Shell. In the Cloud Shell, execute the following command:
    观看 kubectl 获取节点
    最初，这可能仍然会返回节点列表，如图 11.4*所示。这是因为授权的 IP 范围在 AKS 上配置需要几分钟的时间。*
    *![Output from watch kubectl get nodes initially still showing the list of nodes](img/B17338_11_04.jpg)*
    *图 11.4:该命令最初可能仍然显示节点列表*
    *然而，几分钟后，该命令的输出应该会返回一个错误，如图 11.5*所示。这是意料之中的，因为您限制了对控制平面的访问。**
    **![Error showing that you can no longer connect to the control plane through an unauthorized IP](img/B17338_11_05.jpg)**
    **图 11.5:显示无法再连接到控制平面的错误**
***   You can stop the **watch** command by pressing *Ctrl + C*. You will now get the IP address used by your current Cloud Shell session, and will then configure this as an authorized IP. To get the IP address used by your current Cloud Shell session, you can connect to [icanhazip.com](http://icanhazip.com), which is a simple website that will return your public IP. To do this, execute the following command:
    curl icanhazip.com(美国加州大学洛杉矶分校)
    这将返回类似于图 11.6 的输出:
    ![Getting the IP address used by Cloud Shell](img/B17338_11_06.jpg)
    图 11.6:获取云壳使用的 IP 地址
    *   You can now configure this IP address as an authorized IP address in AKS. You can do this in the Networking section of the AKS pane as you did in *step 1*. This is shown in *Figure 11.7*. Make sure to click the Save button at the top of the screen.
    ![Configuring the IP address used by Cloud Shell as an authorized IPthrough the Networking section of the AKS pane](img/B17338_11_07.jpg)
    图 11.7:在 AKS 中将云壳的 IP 地址配置为授权 IP
    *   Now, execute the same command as before to get the list of nodes in your AKS cluster.
    观看 kubectl 获取节点
    最初，这可能仍然会返回您之前看到的错误，如图 11.8 所示。这是因为授权的 IP 范围在 AKS 上配置需要几分钟的时间。** 
 **![Fetching the list of nodes gives you an error initially as the authorized IP is being configured](img/B17338_11_08.jpg)
图 11.8:该命令最初仍然给出一个错误
然而，几分钟后，这个命令的输出应该会返回一个节点列表，如图 11.9 所示。这表明您成功配置了授权的 IP 范围。
![You can now connect to the API server through the authorized IP](img/B17338_11_09.jpg)
图 11.9:通过配置授权的 IP，您现在可以连接到 API 服务器
通过配置授权的 IP 范围，您可以确认当不允许 Cloud Shell 的 IP 地址访问 Kubernetes 控制平面时，连接超时。通过将 Cloud Shell 的 IP 地址配置为授权 IP，您可以连接到控制平面。
在典型的生产场景中，您不会将来自 Cloud Shell 的 IP 地址配置为 AKS 集群上的授权 IP，而是会配置您的 Kubernetes 管理员、您的数据中心或您使用的工具的已知 IP 的知名 IP 地址或范围。这里使用的云外壳只是一个展示功能的例子。
还有第二种保护控制平面的方法，即部署私有集群。您将在下一节中这样做。
### 使用私有集群保护控制平面
通过在 AKS 中配置授权的 IP 范围，您可以限制哪些公共 IP 地址可以访问您的集群。您还可以通过部署私有集群来完全限制集群的任何公共流量。私有集群只能通过使用 Azure 私有链接建立的私有连接来访问。
让我们从配置私有集群并尝试访问它开始:
1.  The private cluster feature can only be enabled at cluster creation time. This means that you will have to create a new cluster. To do this on the free trial subscription, you will have to delete the existing cluster. You can do this using the following command on Cloud Shell:
    az aks 删除-n handonaks-g rg-handonaks-y
    该命令需要几分钟才能完成。请等待它成功删除您以前的群集。
2.  You are now ready to create a new cluster. Because you will, in later steps, also create a new VM to access the cluster (as shown in *Figure 11.2*), you will create a new VNet instead of letting AKS create the VNet for you. To create the VNet, use the following command:
    az 网络 vnet 创建-o 表\
    -资源-组 rg-hand onaks \
    -名称 vnet-hand onaks \
    地址前缀 192.168.0.0/16 \
    --子网名称 akssubnet \
    -子网前缀 192.168.0.0/24
3.  You will require the ID of the subnet that was created in the VNet. To get that ID, use the following command:
    VNET 子网 _ 标识='az 网络 vnet 子网显示\
    -资源-组 rg-hand onaks \
    -vnet-name vnet-hand onaks \
    --名称 aks bnet--查询 id-或 tsv
4.  You will also need a managed identity that has permission to create resources in the subnet you just created. To create the managed identity and give it access to your subnet, use the following commands:
    az 身份创建-名称 handsonaks-mi \
    -资源组 rg-hand onaks
    IDENTITY _ CLIENT id = ' az IDENTITY show-name hand onaks-mi \
    -资源-组 rg-hand onaks \
    -查询 clientId -o tsv '
    az 角色分配创建-受理人$IDENTITY_CLIENTID \
    -作用域$ VNET _ 子网 _ 标识-角色贡献者
    IDENTITY _ ID = ' az IDENTITY show-name hand onaks-mi \
    -资源-组 rg-hand onaks \
    -查询 id 或 tsv
    前面的代码将首先创建托管标识。之后，它获取被管理身份的客户端标识，并授予该客户端对子网的访问权限。在最后一个命令中，它获取托管身份的资源标识。
5.  Finally, you can go ahead and create the private AKS cluster using the following command. As you might notice, you are creating a smaller cluster using only one node. This is to conserve the core quota under the free trial subscription:
    az aks 创建\
    -资源-组 rg-hand onaks \
    -名称 handsonaks \
    -vnet-SUBNET-ID $ VNET _ SUBNET _ ID \
    -启用-管理-身份\
    -分配-身份$IDENTITY_ID \
    -启用-私有-集群\
    -节点数 1 \
    -节点虚拟机大小标准 _DS2_v2 \
    -生成-ssh-密钥
    该命令创建了一个新的 AKS 集群，该集群具有许多本书之前没有介绍过的特殊配置。第一个新配置是 **- vnet-subnet-id** 。这允许您在现有虚拟网络的现有子网中创建 AKS 集群。 **-启用托管身份**参数使群集能够使用托管身份， **-分配身份**参数配置要使用的托管身份。您在这里看到的最后一个新配置选项是 **-启用-私有集群**，它将创建一个带有私有端点的私有集群。
6.  The preceding command will take a couple of minutes to complete. Once it's complete, you can try to access your cluster using the Azure Cloud Shell. This will fail, however, because the Azure Cloud Shell isn't deployed in your VNet. Let's explore this. First, get the cluster credentials:
    az aks get-凭证-n hand onaks-g rg-hand onaks
    这将询问您是否可能覆盖现有的 **kubeconfig** 文件两次。按 *y* 键确认，如图*图 11.10* :
    ![Fetching the cluster credentials using the az aks get-credentials command](img/B17338_11_10.jpg)
    图 11.10:获取集群凭据
    现在，尝试使用以下命令获取集群中的节点: