有更细心的小伙伴，可能又会发现，这里为啥缺了点返回值呢？那是因为APIPOST不会把发送后的实时响应的数据作为响应示例。这个时候，需要手动的将实时响应结果导入或者复制到对应的成功响应示例和错误响应示例。
![image-20210923234507923](images/image-20210923234507923.png)
然后重新生成文档，这个时候，就会包含我们的成功示例啦。
![image-20210923234543863](images/image-20210923234543863.png)
同时还有对应的返回值字段描述
![image-20210923234633108](images/image-20210923234633108.png)
通过这个方法，可以随时随地的测试以及更新文档，简直是后端小伙伴的福音~
但是，不知道小伙伴们有没有发现一个问题，就是在生成接口文档的时候，还是需要自己填写参数描述。
填写参数描述是我们最烦恼的一件事情，尤其对于很多接口来说，往往具有大量相同名称、相同意义的参数，假如每次都需要手动录入，将会是一件非常耗时、低效的事情。
这个时候，我们可以通过 **ApiPost** 参数描述库解决这个问题，通过自定义参数描述库，我们可以将本项目用到的大量参数进行预注释。
![image-20210923235137573](images/image-20210923235137573.png)
并且，我们在填写完某个描述后，会自动同步到 **参数描述库**，以后如果匹配到了相同的名称，会自动生成对应的描述，简直是一劳永逸的方法。
## Mock工具
我们都知道，在后端接口还没有开发完成的时候，接口是无法获取数据的，那么前端小伙伴就需要通过 **Mock** 事先编写好 **API** 的数据生成规则，由工具动态生成 **API** 的返回数据。通过访问 Mock 来获得页面所需要的数据，就可以轻松地完成对接工作。前后端人员只需要定义好接口文档就可以开始并行工作，互不影响，只在最后的联调阶段往来密切。
**ApiPost** 可以让你在没有后端程序的情况下能真实地返回接口数据，我们可以用 ApiPost 实现项目初期纯前端的效果演示，也可以用 **ApiPost** 实现开发中的数据模拟从而实现前后端分离。
同时，**ApiPost** 支持参数直接引用 **mock.js** 变量，点击下方可以查看 **内置Mock字段变量** 有哪些
![image-20210924083229792](images/image-20210924083229792.png)
目前常用的内置变量有以下几种：
- **@guid()**：随机生成一个GUID，例：DEfbBBBf-7A23-a4DB-9BB1-57BCFf5FB5fc
- **@integer(1,100)**：随机生成一个 **1 ~100** 的整数
- **@datetime('yyyy-MM-dd HH:mm:ss')**：返回一个随机的日期和时间字符串。例：**1977-11-17 03:50:15**
- **@url('http')**：生成随机一个 **http URL**
- **@email()**：生成一个随机 **email** 邮箱
- **@province()**：随机生成一个中国省份（或直辖市、自治区、特别行政区）
- **@city()**：随机生成一个中国城市
- **@title()**：随机生成一个标题
- **@cname()**：随机生成一个中文名称
- **@cparagraph(**)：随机生成一段中文文本
下面我们利用这些常见的 **Mock** 变量，来生成一个 **Mock** 服务吧。
首先点击 **Mock服务**，然后编辑 **Mock模板**，右侧即可看到我们实时生成的 **Mock数据** 了
![image-20210924084953591](images/image-20210924084953591.png)
在点击上方的 **复制链接** ，即可把这个接口的 **mock** 请求交给前端小伙伴了，然后各种进行合作开发。
## 测试流程
流程测试是针对一个接口集合的测试，选择相应的环境，可以作为一系列请求一起运行。当您想要自动化API测试时，流程测试非常有用。点击开始，接口集合会并发的像服务器发出请求，最后会按照定义好的测试校验模块给出测试结果。对于**测试同学**来说，这是一个非常不错的功能。
在 ApiPost 中，创建一个流程测试需要如下步骤：
- 新建接口，并添加断言
- 打开流程测试，新建一个流程
- 向流程添加测试接口
- 选择环境，点击开始测试
- 查看返回的测试接口
流程测试界面如下图：
![img](images/1c12d7e187f1a403.png)
通过点击接口名称查看请求的请求和响应参数信息
![img](images/05b6c068bf8c2f91.png)
同时在 **ApiPost** 中，还提供了很多内置函数，例如我们很轻松的就可以对某个变量进行解密处理。
![image.png](images/e85b7702d1113858.png)
更多关于 **ApiPost** 的功能，还等待小伙伴去发现。好啦，本期就到这里啦。
我是陌溪，我们下次再见~
往期推荐
----
*   [蘑菇博客从0到2000Star，分享我的Java自学路线图](https://mp.weixin.qq.com/s/3u6OOYkpj4_ecMzfMqKJRw)
*   [从三本院校到斩获字节跳动后端研发Offer-讲述我的故事](https://mp.weixin.qq.com/s/c4rR_aWpmNNFGn-mZBLWYg)
*   [万字长文带你学习ElasticSearch](https://mp.weixin.qq.com/s/9eh6rK2aZHRiBpf5bRae9g)
*   [双非本科，折戟成沙铁未销，九面字节终上岸！](https://mp.weixin.qq.com/s/SRf2f8wFFyjz2BUUXD_pmg)
*   [如何使用一条命令完成蘑菇博客的部署？](https://mp.weixin.qq.com/s/LgRIqdPAGzN1tCPMi0Y8RQ)
*   [为什么你们制作镜像只有5MB，而我却200MB？](https://mp.weixin.qq.com/s/iWpivtTAKMPKT6gq_3nwaA)
*   [字节二面：蘑菇博客是怎么解决缓存穿透的?](https://mp.weixin.qq.com/s/JNnL6sTySXL9ta5p0rjjXg)
*   [还在用破解IDEA？陌溪手把手教如何申请正版](https://mp.weixin.qq.com/s/mZjoSjk0QqeKFxPbFySomg)
*   [32图，教你部署一个博客小程序](https://mp.weixin.qq.com/s/hFfsDPBdBpaLjXV8Bm5Ycg)
结语
--
博主就职于字节跳动商业化部门，一直在维护校招笔记仓库 **LearningNote**“在Gitee上已有 **3.9k+ star**，仓库地址：https://gitee.com/moxi159753/LearningNotes”，公众号上的文章也会在此同步更新，欢迎各位小伙伴一起交流学习，回复 “**PDF**”获取PDF笔记，点击查看原文可以**在线阅读**。
同时，想要丰富项目经验的小伙伴，可以参考我维护的开源微服务博客项目： **蘑菇博客**“ **Gitee** 官方推荐项目，博客类搜索排名**第一**，在 **Gitee** 已有 **3.6K** star，仓库地址：https://gitee.com/moxi159753/mogu_blog_v2 ”。
本公众号**申请较晚**，暂时没有开通**留言**功能，欢迎小伙伴们添加我的私人微信 **coder_moxi**【备注：**加群**】，我将邀请你加入到**蘑菇博客交流群**中，欢迎小伙伴们找陌溪一块聊天唠嗑，共同学习进步。最后，如果你觉得本文对你有所帮助，麻烦小伙伴们动动手指给文章点个“**赞**”和“**在看**”，非常感谢大家的支持。
![快来找陌溪唠嗑吧](https://gitee.com/moxi159753/LearningNotes/raw/master/doc/images/qq/%E6%B7%BB%E5%8A%A0%E9%99%8C%E6%BA%AA.png)