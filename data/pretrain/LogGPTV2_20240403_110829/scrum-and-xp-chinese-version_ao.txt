在 sprint 计划会议之前，团队领导会跟产品负责人和所有的 Scrum masters 一起开团队分配会议。我们共同讨论上一个 sprint，决定是 否需要进行重分配。也许会合并两个团队，或者调换某个人。我们 就一些问题达成一致，并写到团队分配提案中，在 sprint 计划会议 上进行讨论。在 Sprint 计划会议上，我们首先遍历产品 backlog 中优先级最高的 条目。然后团队领导说：
“各位，我们建议下一个 sprint 这样分配人手。”
108 | 硝烟中的 SCRUM 和 XP
“你们看，我们会从 4 个团队变成 3 个。每个团队中的人员名单已 列出来了。你们可以凑到一块，自己商量一下要墙上的哪块地方。”
（团队领导耐心地等着大家在房间里转悠，直到他们分成 3 组，各 自站在一块空墙下）。
“目前这个团队分配只是初步计划！就是为了节省点大家的时间。
接下来开会的时候，你们还可以去另一个团队，或者把你们这个团
队一分为二，或者跟另一个团队合二为一，怎么都行。做选择的时
候动动脑子，考虑一下产品负责人定下来的优先级。”
我们发现这种方式效果最好。最开始使用一些集中式控制，然后再
用分散式优化。
是否使用特定的团队？
假设你们的技术选型包括三种主要组件：是否使用特定的团队？
假设你们的技术选型包括三种主要组件：
我们怎样管理多个 SCRUM 团队| 109 
再比如说有参与开发这个产品的有 15 个人之多，所以你也不想把 他们都放在一个 Scrum 团队里面。那该怎样创建团队呢？
方式 1：特定于组件的团队
方式之一是创建针对特定组件展开工作的团队，例如“client 团队”、“server 团队”和“DB 团队”。
我们以这种方式开始。但效果不太好，要是大多数故事都涉及到多
个组件就更糟了。
比如：如果有一个名为“留言板，可供用户在上面给彼此留言”的
故事。这个特性需要更新客户端的用户界面，向服务器中添加逻辑，
还要增加数据库中的表。
110 | 硝烟中的 SCRUM 和 XP
这就意味着这三个团队 – client 团队、server 团队和 DB 团队需要
协作来完成这个故事。情况不妙啊。
方式 2：跨组件的团队协作来完成这个故事。情况不妙啊。
方式 2：跨组件的团队
第二种方式是创建跨组件的团队，也就是说团队的职责不会被束缚
在任何特定的组件上。
我们怎样管理多个 SCRUM 团队| 111 
如果大多数故事都包括多个组件，那这种团队划分方式的效果就很
好。每个团队都可以自己实现包括 client、server 和 DB 三部分的完
整故事。他们可以互相独立工作，这就很好。
我们在实施 Scrum 的时候，所做的第一件事情就是打乱特定于组件 的团队（方式 1），创建跨组件的团队（方式 2）。它减少了诸如“我们没法完成这个条目，因为我们在等 server 那帮家伙完成他们
的工作”之类的情况发生。
不过，要是有很强烈的需求，我们也会临时创建针对特定组件展开
工作的团队。
112 | 硝烟中的 SCRUM 和 XP
是否在 sprint 之间重新组织团队?是否在 sprint 之间重新组织团队? 
一般来讲，由于各自优先级最高的故事类型不同，不同的 sprint 之
间会有很大差别；因此也会导致各个 sprint 理想的团队构成也有所
不同。
实际上，几乎在每个 sprint 中我们都会发现自己在说：“这个 sprint
确实非同一般，原因在于……”一段时间以后，我们就放弃了“普
通”sprint 的观念。世界上没有普通的 sprint，就像没有“普通”的
家庭和“普通”的人一样。
在 sprint 中，组建一个只负责客户端的团队，团队中每个人都熟悉
客户端代码，这也许是个好主意。到了下个 sprint，也许弄两个跨
职能团队，把负责客户端代码的人拆分出去也是个好主意。
“团队凝聚力”是Scrum的核心要素之一，如果一个团队合作工作
达多个sprint之久，他们就会变得非常紧密。他们会学会如何达成
团 	队 	涌 	流	（	group 	flow	）	[ 	请 	参 	见团 	队 	涌 	流	（	group 	flow	）	[ 	请 	参 	见
，译者注]，生产力会
提升至难以置信的地步。不过要达到这个地步需要花上一定时间。
如果不断变换团队组成，你就永远无法得到强悍的团队凝聚力。
所以，如果你确实想要重新组织团队，请先考虑一下后果。这是个
长期变化还是短期变化？如果是短期变化，最好考虑跳过这一步。
如果是长期变化，那就干吧。
这里有个例外：第一次在大型团队中开始实施 Scrum 的时候，你需
要就团队拆分进行一些实验，最后才能找到令所有人全都满意的做
法。要确保所有人都能够理解：在最开始几次时犯些错误是可以接
受的，只要能够持续改进。
我们怎样管理多个 SCRUM 团队| 113 
兼职团队成员
我很认同 Scrum 书中所说的话——在 Scrum 团队中含有兼职成员
一般都不是什么好主意。一般都不是什么好主意。
假设 Joe 是 Scrum 团队中的兼职成员。在让他进团队之前，你最好 先认真考虑一下：这个团队确实需要 Joe 么？你确定 Joe 不能全职 工作？他还要做什么其它事情呢？能不能找其他人接过 Joe 的其他 工作，让 Joe 在那份工作中只起到被动的、支持性的作用？Joe 能 不能从下一个 sprint 起在你的团队中全职工作，同时把他的其他工
作转交给其他人？
有时就是没有其他办法。你没有 Joe 不行，因为他是这个楼里唯一 的 DBA，但是其他团队也非常需要他，所以他永远不可能把所有 的时间都分配给你的团队，而公司也不能雇用其他 DBA。好吧。
这种情况下就可以让他兼职工作了（这恰恰是我们碰到的情况）。
但你要确定每次都进行这种评估。
一般来讲，我宁愿要三个全职工作的成员，也不愿意要 8 个只能做
兼职的。
如果有一个人需要把他的时间分配给多个团队，就像上面提到的兼职的。
如果有一个人需要把他的时间分配给多个团队，就像上面提到的
DBA 一样，那最好让他有一个主要从属的团队。找出最需要他的
团队，把它当作他的“主队”。如果没有其他人把他拖走，那他就
得参加这个团队的每日 scrum 会议、sprint 计划会议、回顾等等。
我们怎样进行 Scrum-of-scrums 
Scrum-of-scrums 实际上是一个常规会议，是为了让所有的 Scrum master 聚到一起交流。
我们曾经有过四个产品，其中三个都只有一个 Scrum 团队，而最后 一个产品则共有 25 人，分成了好几个 Scrum 团队，如下图所示：
114 | 硝烟中的 SCRUM 和 XP
这意味着我们有两个层次的 Scrum-of-Scrums。一个是“产品层次”的 Scrum-of-Scrums，包括 Product D 中的所有团队，另外一个是“团 体层次”的 Scrum-of-Scrums，包括所有的产品。产品层次的 Scrum-of-Scrums 
这个会议非常重要。我们一周开一次，有时候频率会更高。在会议
上我们会讨论集成问题，团队平衡问题，为下个 sprint 计划会议做 准备，等等。我们为此分配了 30 分钟时间，但常常超时。其实也 可以每天进行 Scrum-of-Scrums，但我们一直没有时间尝试。
我们的 Scrum-of-Scrums 议程安排如下：
1)  每个人围着桌子坐好，描述一下上周各自的团队都完成了什么
事情，这周计划完成什么事情，遇到了什么障碍。
2)  其他需要讨论的跨团队的问题，例如集成。
Scrum-of-Scrums 的议程对我而言无关紧要，关键在于你要有定期 召开的 Scrum-of-Scrums 会议。
我们怎样管理多个 SCRUM 团队| 115 
团体层次的 Scrum-of-Scrums团体层次的 Scrum-of-Scrums 
我们把这个会议称为“脉动”。我们试过多种形式，参与者也多种 多样。后来就放弃了整个概念，换成了每周的全体（嗯，所有参与 开发的人）会议。时长 15 分钟。
什么？15 分钟？全体参加？每一个产品所包括的全部团队中的所 有人都会参加？这能行么？