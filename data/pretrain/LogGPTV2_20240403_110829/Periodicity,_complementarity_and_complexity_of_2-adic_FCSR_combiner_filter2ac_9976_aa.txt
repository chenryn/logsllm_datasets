title:Periodicity, complementarity and complexity of 2-adic FCSR combiner
generators
author:S. Anand and
Gurumurthi V. Ramanan
Periodicity, Complementarity and Complexity of
2-adic FCSR Combiner Generators
∗
S. Anand
AU-KBC Research Centre
MIT Campus of Anna University
Chromepet, Chennai 600 044, India
†
Gurumurthi V. Ramanan
AU-KBC Research Centre
MIT Campus of Anna University
Chromepet, Chennai 600 044, India
PI:EMAIL
PI:EMAIL
ABSTRACT
Feedback-with-carry shift registers (FCSRs) are nonlinear
analogues of linear feedback shift registers (LFSRs). Like
the LFSRs, FCSRs are easy to implement and are important
primitives in stream cipher design and pseudorandom num-
ber generation. In this paper, we investigate the properties
of combiner generators that use two 2-adic feedback-with-
carry shift registers as primitives. The combining function
is simply the XOR function. This choice is motivated by
an observation of Arnault and Berger on the high nonlin-
earity of the FCSR and that of Siegenthaler on the trade-
oﬀ between resilience and correlation immunity of boolean
functions. When the two FCSRs have odd prime power con-
nection integers with 2 as a primitive root, we determine the
exact period of the output sequence. We also prove that if
the prime factors of the connection integers of the two FC-
SRs belong to diﬀerent equivalence classes modulo 4, then
the output sequence is symmetrically complementary. We
use this fact to derive upper bounds on the linear complex-
ity and the 2-adic complexity of the output sequence of the
FCSR-combiner.
Categories and Subject Descriptors
G.3 [Probability and Statistics]: Random Number Gen-
eration; E.3 [Data Encryption]; F.2.2 [Nonnumerical
Algorithms and Problems]: Computations on discrete
structures
General Terms
Theory, Security, Algorithms, Design
∗The results in this paper are part of the M.S. thesis done
under the direction of the second author.
†Corresponding author.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ASIACCS ’06, March 21–24, 2006, Taipei, Taiwan
Copyright 2006 ACM 1-59593-272-0/06/0003 ...$5.00.
Key
Algorithm
Infinite binary sequence (keystream)
Ciphertext
Binary plaintext
Interceptor (cryptanalyst)
Figure 1: Diagrammatic representation of a stream
cipher
Keywords
stream ciphers, feedback shift registers, combiners, FCSR,
linear complexity, 2-adic complexity, -sequences, pseudo-
random number generators
1.
INTRODUCTION
Stream ciphers are private-key encryption algorithms that
operate on the plaintext one bit or one machine word at a
time. The structure of a stream cipher is shown diagram-
matically in Figure 1 which is adapted from Beker and Piper
[4]. The algorithm or keystream generator is usually a ﬁnite
state machine such as one or more shift registers with ad-
ditional boolean logic. The cryptanalyst is included in the
diagram merely to indicate where interception is likely to oc-
cur. The initial state of the pseudorandom keystream gener-
ator represents the key of the stream cipher. The keystream
is usually XOR-ed with the binary plaintext to give the ci-
phertext.
Stream ciphers are extremely fast and easy to implement.
In addition, they usually have very minimal memory and
hardware resource requirements. Therefore stream ciphers
are of great importance in applications where encryption
speed is paramount and where area-constrained or memory-
constrained devices make it impractical to use block ciphers.
Stream ciphers have been especially popular in military com-
munications since they oﬀer a practical alternative to the
one-time pad, albeit without its absolute security guarantee.
Conventional block encryption algorithms such as AES can
also be used like a stream cipher by running them in one
of the so-called feedback modes, namely, output feedback

a n-1
a n-2
q
1
q
2
...
...
a n-r+1
a n-r
a i
q
r-1
q
r
Figure 2: Linear Feedback Shift Register (LFSR) over F2
mode (OFB) and cipher feedback mode (CFB). However,
an important point of diﬀerence between block ciphers used
in feedback mode and the stream ciphers is that in the lat-
ter there is no error propagation. Any error in one of the
ciphertext bits does not aﬀect subsequent ciphertext bits.
In many applications, the propagation of errors is undesir-
able and in such situations, stream ciphers are preferable
to block ciphers. Examples of stream ciphers that have en-
joyed widespread use include the A5 family of ciphers in
GSM networks, the RC4 cipher in WEP, and the E0 cipher
in Bluetooth.
The linear feedback shift register (LFSR, Figure 2) has
remained the workhorse of stream cipher design for the past
several decades.
It is well-understood and easy to imple-
ment. The general theory of LFSR sequences is based on
the algebra of ﬁnite ﬁelds. Excellent accounts of this theory
may be found in the books of Golomb [8], Rueppel [19] and
Beker and Piper [4]. A nonlinear, with-carry analogue of the
LFSR was described independently by Marsaglia [16], Cou-
ture and L’Ecuyer [5], and Klapper and Goresky [12, 13].
Klapper and Goresky called this architecture the feedback-
with-carry shift register (FCSR, Figure 3). The FCSR is a
common generalisation of the well-known LFSR and other
previously proposed pseudorandom number generators such
as the linear congruential generator (LCG), the add-with-
carry generator (AWC) and the multiply-with-carry gener-
ator (MWC). An FCSR is a feedback shift register that is
similar to the LFSR except that it has a small amount of
auxiliary memory and the analysis of FCSRs is based on the
arithmetic of 2-adic numbers. Like the LFSRs, FCSRs are
very fast and easy to implement in both software and hard-
ware, and as such, are important primitives in the design of
stream ciphers [20].
One of the important measures of the security of a clas-
sical stream cipher is the linear complexity of the pseudo-
random keystream generator used in its design. The linear
complexity of a sequence is deﬁned as the size of the small-
est LFSR that generates the given sequence. Sequences
of low linear complexity are susceptible to cryptanalysis
via the Berlekamp-Massey algorithm. If a sequence (ai)i≥0
is the output of an LFSR with r register cells, then the
Berlekamp-Massey algorithm completely recovers the pa-
rameters, namely, the tap coeﬃcients and the initial state of
the LFSR using just 2r consecutive elements in the sequence.
Hence the LFSR cannot directly be used as a keystream
generator in stream ciphers. By introducing suitable non-
linearities in the output or feedback function of the LFSR, it
is often possible to increase the linear complexity and thus
reduce the predictability of the generated sequence.
A number of methods have been devised to increase the
linear complexity of sequences by including nonlinear feed-
forward functions in an LFSR-based keystream generator.
For example, two LFSR sequences a and b of periods T1 and
T2 respectively may be combined using the XOR function to
yield a new sequence c of period T . In general, n LFSRs may
be combined using some nonlinear boolean function. Such
a construction is called a combination generator or a com-
biner. There is a huge amount of literature on this subject
and such families of constructions as clock-controlled gen-
erators, combination generators and ﬁlter generators have
been studied extensively [19, 20] over the last three decades.
FCSR sequences share many of the important properties
of LFSR sequences. In particular, they can be synthesised
by a 2-adic analogue of the Berlekamp-Massey algorithm.
This algorithm due to de Weger [6] is based on the theory
of approximation lattices of p-adic numbers and it gives rise
to the notion of the 2-adic complexity (Deﬁnition 1) of a se-
quence. The 2-adic complexity of the keystream is also an
important measure of the security of a stream cipher. The
existence of de Weger’s algorithm implies that FCSRs too
cannot be directly used as keystream generators in stream
ciphers. This raises the interesting question of whether, in a
manner that is analogous to the case of the LFSR, it is pos-
sible to increase the 2-adic complexity of FCSR sequences
by introducing suitable boolean functions in the output of
the FCSRs. This question has not received serious attention
in the literature so far. Indeed, stream ciphers using FCSRs
still remain largely unexplored [20]. To our knowledge, there
have been only a handful of papers describing or analysing
the properties of stream cipher designs based on FCSRs [1,
2, 3, 18, 22]. There have been no previous attempts to de-
termine the period, linear complexity and 2-adic complexity
of combiners using FCSRs.
In this paper, we study the periodicity, symmetric comple-
mentarity, linear complexity and 2-adic complexity of com-
biner generators that use two 2-adic FCSRs as primitives
and the XOR operation as the combining function. When
the two FCSRs have odd-prime power connection integers
with 2 as a primitive root, we determine the period of the
output sequence (Theorem 1). We prove that when the

prime factors of the connection integers of the two FCSRs
belong to diﬀerent equivalence classes modulo 4, the output
sequence is symmetrically complementary (Theorem 2). We
use this property to derive upper bounds on the 2-adic com-
plexity (Theorem 3) and the linear complexity (Theorem 4)
of the output sequence of the FCSR-combiner.
In the rest of this section we brieﬂy review the basic theory
of FCSRs and list some of the properties of FCSR sequences.
We ﬁx notation and recall some well-known facts in Section
2. Section 3 contains our main results on the period and
complexity bound of the combiner generator.
1.1 Review of 2-adic Numbers
The analysis of FCSRs is based on the arithmetic of 2-
adic numbers. We will brieﬂy review the concept of 2-adic
numbers before describing the operation of the 2-adic FCSR.
In 1904, Hensel introduced the concept of 2-adic, and in
general, p-adic numbers for p prime. A 2-adic number may
be described as a binary number
α = . . . α3α2α1α0.α−1α−2 . . . α−k
(1)
where αi ∈ {0, 1}, whose representation extends inﬁnitely
to the left of the binary point, but has only ﬁnitely many
places to the right of the point. 2-adic numbers represented
by equation (1) may also be thought of as formal power
series
α =
∞
Xi=−k
αi2i,
(2)
where αi ∈ {0, 1}. When there are no non-zero bits to the
right of the binary point (i.e., k = 0), the 2-adic numbers
are called 2-adic integers,
∞
Z2 = {
Xi=0
αi2i | αi ∈ {0, 1}}
(3)
The set of 2-adic integers is denoted by Z2. The set of
2-adic integers forms a ring with additive identity 0 and
multiplicative identity 1 = 1·20. Addition in Z2 is performed
by ‘carrying’ overﬂow bits to higher order terms, so that
2i + 2i = 2i+1. It may be useful for some readers to think of
the 2-adic numbers as a ‘2’s complement’ number system in
which the numbers extend inﬁnitely to the left of the point.
Using the fact that in Z2, 1 − 1 = 0, it is easy to see that,
−1 = 1 + 21 + 22 + 23 + · · · .
(4)
From the binary (base-2) representation of positive integers,
it is clear that Z2 contains all positive integers. The identity
−α = (−1)α = (1 + 21 + 22 + 23 + · · · )(α0 + α12 + · · · + αr2r)
(5)
shows that Z2 contains the negative integers.
In general,
for an arbitrary 2-adic number α, calculating the additive
inverse −α, can be done as follows. Expressing α in the form
i=0 αi2i), where r is an integer, we have
α = 2r(1 +P∞
−α = 2r(1 +
∞
Xi=0
αi2i)
(6)
where αi denotes the complementary bit and αi + αi = 1.
When k = 0 in equation (2), the set of 2-adic numbers is
denoted by Q2 and it forms a ﬁeld under the operations of
addition and multiplication. Q2 contains Z2 as a subring.
Below are some examples of the 2-adic expansions of integers
and rationals.

Example 1. We give the 2-adic representation of the num-
bers 1
7 , − 1
7 , 9
2 , and 1
10 .
1
7
= . . . 110110110110111.0, −
1
7
= . . . 001001001001001.0,
9
2
= . . . 0000100.10,
1
10
= . . . 1100111001100110.1
(7)
7 and − 1
Note that 1
7 are 2-adic integers, whereas 9
2 and 1
10
are 2-adic rationals. The rational number 1
7 = 0111.0 has an
eventually periodic 2-adic expansion and − 1
7 = 001.0 has a
strictly periodic 2-adic expansion. In both these cases, note
that the period is just the multiplicative order of 2 in the
ﬁeld Z
7Z .
In Z2, the ring of 2-adic integers, every odd integer α ∈
Z has a unique multiplicative inverse. Thus, the ring Z2
contains every rational number p/q provided q is odd. In
fact
Z2 = {
p
q
| p, q ∈ Z, q = 0 and q is odd}.
(8)
This gives an alternative description of Z2. These ideas may
be extended to develop the theory of p-adic and N -adic num-
bers.
We have given a very sketchy account of the theory of 2-
adic numbers. For a comprehensive treatment, we refer to
the books by Koblitz [14], Mahler [15] and Gouvˆea [10].
1.2 The 2-adic FCSR
The operation of the FCSR may be brieﬂy described as
follows. For details, the reader is referred to the original
paper of Klapper and Goresky [13].
Fix an odd positive integer q and let
q + 1 = q121 + q222 + . . . + qr2r