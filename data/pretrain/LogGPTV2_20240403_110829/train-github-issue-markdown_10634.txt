If a cypher query returning nodes is executed using the transactional REST
endpoint essential meta-information is missing (e.g. labels). This disallows
creating generic mapping frameworks for languages, An example:
CDO (http://github.com/buschmais/cdo-neo4j) allows the user to map annotated
Java interfaces to nodes:
    @Label
    public interface Person {
    // represents nodes labeled with Person
      public String getName();
      public void setName(String name);
    }
    @Label
    public interface Customer extends Person { 
    // represents nodes labeled with Customer and Person
      public int getCustomerNo();
      public void setCustomerNo(int customerNo);
    }
The user now may issue cypher queries using the CDO interface
    List persons = cdoManager.createQuery("match (p:Person) return p", Person.class).execute();
CDO will execute this query but for each node returned by the query it needs
to decide whether to create an instance of Person or Customer - this can only
be achieved if the labels are availabe as metadata.
Note: As also relationships may be of different types and can be mapped to
language specific types (e.g. Java classes) they should also contain metadata
(i.e. their type) if they are part of the return clause.