### 优化后的日志记录

#### 可用索引
- **IndexScan(p2_c4)**
- **IndexScan(p2_c1_c1)**
- **IndexScan(p2_c1_c2)**
- **IndexScan(p2_c3_c1)**
- **IndexScan(p2_c3_c2)**

#### pg_hint_plan 提示
- **使用的提示:**
  - `IndexScan(p2 p2_val)`
- **未使用的提示:**
  - 无
- **重复的提示:**
  - 无
- **错误的提示:**
  - 无

#### 查询计划
```
Append
  -> Seq Scan on p2 p2_1
    Filter: ((val >= '50'::text) AND (val <= '50'::text))
  -> Seq Scan on p2_c1 p2_2
    Filter: ((val >= '50'::text) AND (val <= '50'::text))
  -> Seq Scan on p2_c2 p2_3
    Filter: ((val >= '50'::text) AND (val <= '50'::text))
  -> Seq Scan on p2_c3 p2_4
    Filter: ((val >= '50'::text) AND (val <= '50'::text))
  -> Seq Scan on p2_c4 p2_5
    Filter: ((val >= '50'::text) AND (val <= '50'::text))
  -> Seq Scan on p2_c1_c1 p2_6
    Filter: ((val >= '50'::text) AND (val <= '50'::text))
  -> Seq Scan on p2_c1_c2 p2_7
    Filter: ((val >= '50'::text) AND (val <= '50'::text))
  -> Seq Scan on p2_c3_c1 p2_8
    Filter: ((val >= '50'::text) AND (val <= '50'::text))
  -> Seq Scan on p2_c3_c2 p2_9
    Filter: ((val >= '50'::text) AND (val <= '50'::text))

Index Scan using p2_pkey on p2 p2_1
  Index Cond: ((id >= 50) AND (id <= 50))

Index Scan using p2_c1_pkey on p2_c1 p2_2
  Index Cond: ((id >= 50) AND (id <= 50))

Index Scan using p2_c1_c1_pkey on p2_c1_c1 p2_3
  Index Cond: ((id >= 50) AND (id <= 50))

Index Scan using p2_c1_c2_pkey on p2_c1_c2 p2_4
  Index Cond: ((id >= 50) AND (id <= 50))

Index Scan using p2_id2_val on p2 p2_1
  Index Cond: ((id >= 50) AND (id <= 50))

Index Scan using p2_c1_id2_val on p2_c1 p2_2
  Index Cond: ((id >= 50) AND (id <= 50))

Seq Scan on p2_c1_c1 p2_3
  Filter: ((id >= 50) AND (id <= 50))

Seq Scan on p2_c1_c2 p2_4
  Filter: ((id >= 50) AND (id <= 50))

Index Scan using p2_val2_id on p2 p2_1
  Index Cond: ((id >= 50) AND (id <= 50))

Seq Scan on p2_c1 p2_2
  Filter: ((id >= 50) AND (id <= 50))

Seq Scan on p2_c1_c1 p2_3
  Filter: ((id >= 50) AND (id <= 50))

Seq Scan on p2_c1_c2 p2_4
  Filter: ((id >= 50) AND (id <= 50))

Index Scan using p2_pkey on p2 p2_1
  Index Cond: ((id >= 50) AND (id <= 50))

Index Scan using p2_c1_pkey on p2_c1 p2_2
  Index Cond: ((id >= 50) AND (id <= 50))

Index Scan using p2_c1_c1_pkey on p2_c1_c1 p2_3
  Index Cond: ((id >= 50) AND (id <= 50))

Index Scan using p2_c1_c2_pkey on p2_c1_c2 p2_4
  Index Cond: ((id >= 50) AND (id <= 50))

Seq Scan on p2 p2_1
  Filter: ((id >= 50) AND (id <= 50))

Index Scan using p2_c1_id_val_idx on p2_c1 p2_2
  Index Cond: ((id >= 50) AND (id <= 50))

Seq Scan on p2_c1_c1 p2_3
  Filter: ((id >= 50) AND (id <= 50))

Seq Scan on p2_c1_c2 p2_4
  Filter: ((id >= 50) AND (id <= 50))

Seq Scan on p2 p2_1
  Filter: ((id >= 50) AND (id <= 50))

Seq Scan on p2_c1 p2_2
  Filter: ((id >= 50) AND (id <= 50))

Seq Scan on p2_c1_c1 p2_3
  Filter: ((id >= 50) AND (id <= 50))

Seq Scan on p2_c1_c2 p2_4
  Filter: ((id >= 50) AND (id <= 50))

Index Scan using p2_pkey on p2 p2_1
  Index Cond: ((id >= 50) AND (id <= 50))

Index Scan using p2_c1_id_val_idx on p2_c1 p2_2
  Index Cond: ((id >= 50) AND (id <= 50))

Index Scan using p2_c1_c1_pkey on p2_c1_c1 p2_3
  Index Cond: ((id >= 50) AND (id <= 50))

Index Scan using p2_c1_c2_pkey on p2_c1_c2 p2_4
  Index Cond: ((id >= 50) AND (id <= 50))

Index Scan using p2_val_idx on p2 p2_1
  Index Cond: ((val >= '50'::text) AND (val <= '50'::text))

Index Scan using p2_c1_val_idx on p2_c1 p2_2
  Index Cond: ((val >= '50'::text) AND (val <= '50'::text))

Index Scan using p2_c2_val_idx on p2_c2 p2_3
  Index Cond: ((val >= '50'::text) AND (val <= '50'::text))

Index Scan using p2_c3_val_idx on p2_c3 p2_4
  Index Cond: ((val >= '50'::text) AND (val <= '50'::text))

Index Scan using p2_c4_val_idx on p2_c4 p2_5
  Index Cond: ((val >= '50'::text) AND (val <= '50'::text))
```

通过这种结构化的格式，日志记录变得更加清晰和易于理解。每个部分都有明确的标题，并且查询计划中的每一步都被详细列出。