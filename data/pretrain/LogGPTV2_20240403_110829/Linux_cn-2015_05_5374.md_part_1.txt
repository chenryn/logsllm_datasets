---
author: Remy van Elst
category: 系统运维
comments_data:
- date: '2016-07-04 20:58:43'
  message: "我在看这篇文章的同时，在Qually Labs 的 SSL 测试了贵站，发现评级为F级，\r\n存在&quot;This server
    is vulnerable to the OpenSSL Padding Oracle vulnerability (CVE-2016-2107) and
    insecure. &quot;\r\nAnd Grade set to F."
  postip: 39.168.48.170
  username: 来自39.168.48.170的 Firefox 47.0|Windows 10 用户
- date: '2016-07-05 18:09:20'
  message: 额！
  postip: 123.120.84.114
  username: linux [Chrome 50.0|Mac 10.11]
- date: '2016-07-05 18:25:48'
  message: 谢谢，满血复活！
  postip: 123.120.84.114
  username: linux [Chrome 50.0|Mac 10.11]
- date: '2022-01-21 20:11:19'
  message: "友情提示：\r\n从 Chrome 68 开始弃用 HPKP，在 Chrome 72 正式移除 HPKP。\r\n所以不用配置这玩意了。"
  postip: 117.176.109.253
  username: 来自四川南充的 Chrome 70.0|Windows 7 用户
count:
  commentnum: 4
  favtimes: 6
  likes: 0
  sharetimes: 0
  viewnum: 24070
date: '2015-05-04 09:00:00'
editorchoice: true
excerpt: 本文向你介绍如何在 nginx 服务器上设置健壮的 SSL 安全机制。我们通过禁用 SSL 压缩来降低 CRIME 攻击威胁；禁用协议上存在安全缺陷的
  SSLv3 及更低版本，并设置更健壮的加密套件（cipher suite）来尽可能启用前向安全性（Forward Secrecy）；此外，我们还启用了 HSTS
  和 HPKP。这样我们就拥有了一个健壮而可经受考验的 SSL 配置，并可以在 Qually Labs 的 SSL 测试中得到 A 级评分。 如果不求甚解的话，可以从
  https://cipherli.st 上找到 nginx 、Apache 和 Lighttpd 的安全设置，复制粘帖即可。 本教程在 Digital Ocean
  的 VPS 上测试
fromurl: https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
id: 5374
islctt: true
largepic: /data/attachment/album/201505/03/180656c9rra95g25gghdg5.png
permalink: /article-5374-1.html
pic: /data/attachment/album/201505/03/180656c9rra95g25gghdg5.png.thumb.jpg
related:
- displayorder: 0
  raid: 5165
- displayorder: 1
  raid: 5266
- displayorder: 2
  raid: 5282
reviewer: ''
selector: ''
summary: 本文向你介绍如何在 nginx 服务器上设置健壮的 SSL 安全机制。我们通过禁用 SSL 压缩来降低 CRIME 攻击威胁；禁用协议上存在安全缺陷的
  SSLv3 及更低版本，并设置更健壮的加密套件（cipher suite）来尽可能启用前向安全性（Forward Secrecy）；此外，我们还启用了 HSTS
  和 HPKP。这样我们就拥有了一个健壮而可经受考验的 SSL 配置，并可以在 Qually Labs 的 SSL 测试中得到 A 级评分。 如果不求甚解的话，可以从
  https://cipherli.st 上找到 nginx 、Apache 和 Lighttpd 的安全设置，复制粘帖即可。 本教程在 Digital Ocean
  的 VPS 上测试
tags:
- SSL
- OpenSSL
- https
- nginx
thumb: false
title: 增强 nginx 的 SSL 安全性
titlepic: false
translator: wxy
updated: '2015-05-04 09:00:00'
---
[![](/data/attachment/album/201505/03/180656c9rra95g25gghdg5.png)](https://www.ssllabs.com/ssltest/analyze.html?d=raymii.org)
本文向你介绍如何在 nginx 服务器上设置健壮的 SSL 安全机制。我们通过禁用 SSL 压缩来降低 CRIME 攻击威胁；禁用协议上存在安全缺陷的 SSLv3 及更低版本，并设置更健壮的 加密套件   （    cipher suite    ） 来尽可能启用 前向安全性   （    Forward Secrecy    ） ；此外，我们还启用了 HSTS 和 HPKP。这样我们就拥有了一个健壮而可经受考验的 SSL 配置，并可以在 Qually Labs 的 SSL 测试中得到 A 级评分。
如果不求甚解的话，可以从 [https://cipherli.st](https://cipherli.st/) 上找到 nginx 、Apache 和 Lighttpd 的安全设置，复制粘帖即可。
本教程在 Digital Ocean 的 VPS 上测试通过。如果你喜欢这篇教程，想要支持作者的站点的话，购买 Digital Ocean 的 VPS 时请使用如下链接： 。
本教程可以通过[发布于 2014/1/21 的](http://blog.ivanristic.com/2014/01/ssl-labs-stricter-security-requirements-for-2014.html) SSL 实验室测试的严格要求（我之前就通过了测试，如果你按照本文操作就可以得到一个 A+ 评分）。
* [本教程也可用于 Apache](https://raymii.org/s/tutorials/Strong_SSL_Security_On_Apache2.html)
* [本教程也可用于 Lighttpd](https://raymii.org/s/tutorials/Pass_the_SSL_Labs_Test_on_Lighttpd_%28Mitigate_the_CRIME_and_BEAST_attack_-_Disable_SSLv2_-_Enable_PFS%29.html)
* [本教程也可用于 FreeBSD, NetBSD 和 OpenBSD 上的 nginx ，放在 BSD Now 播客上](http://www.bsdnow.tv/episodes/2014_08_20-engineering_nginx): 
你可以从下列链接中找到这方面的进一步内容：
* [野兽攻击（BEAST）](https://en.wikipedia.org/wiki/Transport_Layer_Security#BEAST_attack)
* [罪恶攻击（CRIME）](https://en.wikipedia.org/wiki/CRIME_%28security_exploit%29)
* [怪物攻击（FREAK ）](http://blog.cryptographyengineering.com/2015/03/attack-of-week-freak-or-factoring-nsa.html)
* [心血漏洞（Heartbleed）](http://heartbleed.com/)
* [完备的前向安全性（Perfect Forward Secrecy）](https://en.wikipedia.org/wiki/Perfect_forward_secrecy)
* [RC4 和 BEAST 的处理](https://en.wikipedia.org/wiki/Transport_Layer_Security#Dealing_with_RC4_and_BEAST)
我们需要编辑 nginx 的配置，在 Ubuntu/Debian 上是 `/etc/nginx/sited-enabled/yoursite.com`，在 RHEL/CentOS 上是 `/etc/nginx/conf.d/nginx.conf`。
本文中，我们需要编辑443端口（SSL）的 `server` 配置中的部分。在文末你可以看到完整的配置例子。
*在编辑之前切记备份一下配置文件！*
### 野兽攻击（BEAST）和 RC4
简单的说， 野兽攻击   （    BEAST    ） 就是通过篡改一个加密算法的  密码块链   （    CBC，cipher block chaining    ） 的模式，从而可以对部分编码流量悄悄解码。更多信息参照上面的链接。
针对 野兽攻击   （    BEAST    ） ，较新的浏览器已经启用了客户端缓解方案。推荐方案是禁用 TLS 1.0 的所有加密算法，仅允许 RC4 算法。然而，[针对 RC4 算法的攻击也越来越多](http://www.isg.rhul.ac.uk/tls/) ，很多已经从理论上逐步发展为实际可行的攻击方式。此外，有理由相信 NSA 已经实现了他们所谓的“大突破”——攻破 RC4 。
禁用 RC4 会有几个后果。其一，当用户使用老旧的浏览器时，比如 Windows XP 上的 IE 会用 3DES 来替代 RC4。3DES 要比 RC4 更安全，但是它的计算成本更高，你的服务器就需要为这些用户付出更多的处理成本。其二，RC4 算法能减轻 野兽攻击   （    BEAST    ） 的危害，如果禁用 RC4 会导致 TLS 1.0 用户会换到更容易受攻击的 AES-CBC 算法上（通常服务器端的对 野兽攻击   （    BEAST    ） 的“修复方法”是让 RC4 优先于其它算法）。我认为 RC4 的风险要高于 野兽攻击   （    BEAST    ） 的风险。事实上，有了客户端缓解方案（Chrome 和 Firefox 提供了缓解方案）， 野兽攻击   （    BEAST    ） 就不是什么大问题了。而 RC4 的风险却在增长：随着时间推移，对加密算法的破解会越来越多。
### 怪物攻击（FREAK）
 怪物攻击   （    FREAK    ） 是一种中间人攻击，它是由来自 [INRIA、微软研究院和 IMDEA](https://www.smacktls.com/) 的密码学家们所发现的。 怪物攻击   （    FREAK    ） 的缩写来自“ RSA 出口密钥因子分解   （    Factoring RSA-EXPORT Keys    ） ”
这个漏洞可上溯到上世纪九十年代，当时美国政府禁止出口加密软件，除非其使用编码密钥长度不超过512位的出口加密套件。
这造成了一些现在的 TLS 客户端存在一个缺陷，这些客户端包括： 苹果的 SecureTransport 、OpenSSL。这个缺陷会导致它们会接受出口降级 RSA 密钥，即便客户端并没有要求使用出口降级 RSA 密钥。这个缺陷带来的影响很讨厌：在客户端存在缺陷，且服务器支持出口降级 RSA 密钥时，会发生中间人攻击，从而导致连接的强度降低。
攻击分为两个组成部分：首先是服务器必须接受“ 出口降级 RSA 密钥   （    export grade RSA    ） ”。
中间人攻击可以按如下流程：
* 在客户端的 Hello 消息中，要求标准的 RSA 加密套件。
* 中间人攻击者修改该消息为 ‘输出级 RSA 密钥’   （    export RSA    ） 。
* 服务器回应一个512位的输出级 RSA 密钥，并以其长期密钥签名。
* 由于 OpenSSL/SecureTransport 的缺陷，客户端会接受这个弱密钥。
* 攻击者根据 RSA 模数分解因子来恢复相应的 RSA 解密密钥。
* 当客户端编码 ‘预主密码’   （    pre-master secret    ） 给服务器时，攻击者现在就可以解码它并恢复 TLS 的 ‘主密码’   （    master secret    ） 。
* 从这里开始，攻击者就能看到了传输的明文并注入任何东西了。
本文所提供的加密套件不启用输出降级加密，请确认你的 OpenSSL 是最新的，也强烈建议你将客户端也升级到新的版本。