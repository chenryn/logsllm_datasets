465
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 09:58:33 UTC from IEEE Xplore.  Restrictions apply. 
optimizedtracesthisisalsonotalongthepredictedpathas0.0isaspecialcase,whichresultsintheoptimizedcasebe-ingslightlyworsethanexpected.Catchingzeroinaspecialcaseisdoneintheoptimizedtrace,however,branchmispre-dictionofthecasecausesthetracetotake51cyclesinsteadofthepredicted33cycles.Itisnotfeasibletoperformpred-icationovertheentireoperationtocheckfor0.0.SinceEmμcodetracesareonlyrelevantwhenprogramsactuallyusetheinstructionscoveredbyEmμcodeandEmμcodedoesnoteffectthecontrolﬂowofprograms,asimplemodelcanbeusedtopredicttheslowdownofpro-gramswhenEmμcodeison.ForeacharithmeticoperationbeingEmμcoded,simplyreplace1cycleoftimewiththeaverageexecutiontimeofthecorrespondingarithmeticop-eration’strace.Itisimportanttodistinguishbetweenin-structionsandarithmeticoperationssinceSSEinstructionscanreferencemultiplearithmeticoperations.TheequationforthismodelcanbeseeninFormula1.GPD=Cycorig−(cid:2)i∈EmucodedNi∗(EmuCyci−1)Cycorig(1)AsFigure9shows,thepredictionisquiteclosetotheobservedslowdown.Thepredictionunderestimatedtheslowdownofmesaandmgridbythemost.Thisisbe-causemesaandmgridhavemanyofarithmeticoperationswhere0isaddedormultipliedtoanothernumber.ThiswasnotthepaththatEmμcodetraceswereoptimizedfor.Sincetheaveragenumberofcyclesontraceswaspredictedaroundassumingnonzerooperands,itisnotsurprisingthatformesatheaveragenumberofcyclestakenforasingleprecisionmultiplyis45cyclesinsteadof33cycles.Theotherarithmeticoperationsslowdownrespectivelyinmesaandmgrid.AlongtherighthandsideofFigure9thedynamicpercentageofﬂoatingpointoperationsperformedduringthe5millioninstructionwindowcanbeseen.Asthenumberofoperationsincreasestheamountofslowdownin-creases.Inmcf,therewerezerodynamicﬂoatingpointin-structionsduringthe5millioninstructionwindowthatthebenchmarkwasrunfor.SincemanyoftheSPECCPU2000benchmarkscoverthiscase,itisrepresentativeofallofthosethatdonotuseﬂoatingpointoperations.Mcfre-sultedinnoslowdown,showingthatEmμcodedoesnotin-stilloverheadifnotused.Formesaandvpr,Emμcoderesultedinaslowdownof1.36xand2.58xrespectively.Thesebenchmarkshadarelativelysmallnumberofdy-namicﬂoatingpointoperationsthatwereEmμcoded.SincethealternativeforaﬂoatingpointunitfailureistonotbeabletoruntheprogramthesetwomakegoodcasesforwhyEmμcodeisavaluabletechnique.Itallowsprogramswithasmallnumberofﬂoatingpointoperationstocontinuerun-ningwithasmallamountofslowdown.However,with2530354045152025oded Instructionswn (x)HardwareOptimized Emucode Predicted Emucode%arith051015200510mcfvprmesaequakeappluammpswimmgridPercentage of EmucoSlowdowFigure9.PerformanceimpactofEmμcodefora5millioninstructionrun.Weplotthefrac-tionofEmμcodedinstructionsonsecondaryaxis.Emμcodeprovidesgracefuldegrada-tionofperformancewhilepreservingcorrect-ness.manyoftheotherbenchmarksrun,therewasalargerslow-downobserved,especiallyfortheSPECFPbenchmarks.Sincetheseprogramsprimarilyfocusonﬂoatingpointop-erationsEmμcodeinstillsarelativelylargeslowdownonthem.However,ifaﬂoatingpointunithasfailedthentheseprogramsprobablywouldnotbeabletoobtainsuchperfor-mancelevels,assoftwareemulationisveryclostlyinvolv-ingtrapsintotheoperatingsystem.5.RelatedWorkCorrectionofHardFaultsAlargebodyofresearchex-istsintheareaofhardfaultcorrection.Gracefulperfor-mancedegradation(GPD)canbebuiltaroundtheredun-dancythatalreadyexistswithincurrentmicroprocessorsinordertotakeadvantageofparallelism.Forexample,manysuperscalarprocessors,suchastheIntelPentium4ortheAMDAthlon,havemultiplearithmeticlogicunits(ALU).Ifonesuchunitshouldbecomeunusable,itisstillpossibletoexecutecodeusingoneoftheotherunits,althoughthiswoulddecreaseperformance.ToimplementGPDrequiresthatthefunctionalunitsbesomewhatmodular.Thismeansthatitispossibletodisconnecttheunitfromtherestofthepipeline,whichcanbedoneeasilyinmodernmicroproces-sorssettingtheunitﬂaggedasbusyatissueaswasdonebySrinivasanetal.in[20].TheyshowthatGPDprovides1.42xthereliabilitywithaperformancecostoflessthanﬁvepercent.However,inlargeacceleratorstructuresthereislit-tletozeroredundancybuiltin,sothiskindofGPDwillnotprovidereliabilityoverthosestructureswhereasEmμcodecan.978-1-4244-4421-2/09/$25.00 c(cid:13)2009 IEEE
466
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 09:58:33 UTC from IEEE Xplore.  Restrictions apply. 
Structuralduplicationissimilartotheconceptofdualmodularredundancy(DMR),wherereliabilityisachievedbyusingtwomicroprocessorstorunthesameprogramandcomparingthetworesults.Iftheresultsdifferitisnec-essarytodeterminewhichoneisincorrect.Toisolatethefailedunit,triplemodularredundancy(TMR)canbeem-ployedwheretherearethreecopiesofthestructurebeingprotected.Theconsensusofthethreeisconcludedtobethecorrectresult.However,itispossibletoaddextrafunc-tionalunitsandsimplyturnthemonasneeded.AswithGPD,thisformofSDrequiresthatthearchitectureallowfortheturningonandoffofunitswhenitisdeterminedthattheyhavefailed.AlimitationofSDisthatitincursalargeoverheadinchiparea.IntheextremecaseofTMRitrequires200%overheadtoguaranteereliability,acosttoohighformostmodernarchitectures.Srinivasanetal.[20]showthatSDimprovesreliabilityto3.17xthebasevaluefor2.25xthecost.However,duplicationofexpensiveac-celeratorstructuressuchasaﬂoatingpointunitisexpensiveintermsofareaanddonemoreforperformancethanreli-ability.Emμcodeallowsthecoverageofthesestructureswithouttheneedforduplication.BulletproofbyShyametal.[19]isanothermethodofGPDwhereatestsuiteisrunonthemircroprocessorwithcheckpointingforrecoveryfromfailures,andfaultystruc-turesaredisabled.WhileBulletproofwouldneedDMRinordertobeabletorecoverfromallpointsoffailure,whichisexpensiveintermsofarea,Emμcodedoesnot.DIVAbyAustin[2]usesextrastagesinthepipelinetoimplementamorereliablecheckercorethatre-executesinstructionsandcorrectsifthecheckerﬁndsaproblem,withthecheckercore’sanswertakenasthecorrectone.InorderforDIVAtobeabletoprovidereliabilityoverlargeracceleratorstruc-tures,itwouldberequiredtohaveimplementationsoftheunitsusedtocalculatetheresult.Doingsorequiresanex-tracopyofexpensiveacceleratorstructures,Emμcodedoesnot.Meixneretal.showhowtorecompilecodetocircum-ventstructureswithhardfaultsinwhattheycallDetouring[14].Emμcodedoesnotrequirerecompilingcode.CoreSalvagebyJoseph[11]utilizesredundancywithinamulti-coresystembetweenthecoresbyhavingcertaininstruc-tionstrapintoavirtualmachinemonitor(VMM).Emμcodeobtainsthesameresultwithouttheneedforanexpensivetrapoperation.Thispaperalsoconsiderstheoptimizationofmicrocoderoutines,whereasDetouringandCoreSalvagedonot.Inmodernmicroprocessorstherearenumerousacceler-atedinstructionsthatwouldbecostlytoduplicateinSDorwouldrequireexpandingthecapabilitiesofothercheckers.Examplesoftheseareinstructionsthatmodifyprotectedstateofthearchitecture,suchasanINTinstructiononx86whichnecessitatesacontextswitch,ortheSSEinstructionswhichutilizetheentireﬂoatingpointpipelinetoperformoneoperation.ThecommonimplementationofGPDcan-notbeusedwiththestandardimplementationsforthesein-structions.Duplicationofthesestructureswouldbeexpen-sivebecauseaddinganextraﬂoatingpointunitrequiresalotofchiparea,justiﬁedmoreforperformancereasonsthanforreliability.Thereforeanothermethodisnecessaryforcor-rectingthesetypesofinstructions.Thisstudyexploressuchtechniques.DetectionofHardFaultsEmμcodeassumesanunderly-inghardfaultdetectionmechanism.Harderrordetectionhasbeenexploredinmanyways.TheuseofredundantthreadsonSMTmachineswasexploredbySchuchmanandVijaykumarin[18].Attachingaself-checkingmechanismisexploredbyYilmazetal.in[15].SoftwarepropagationofhardfaultsisperformedbyLietal.[12].Onlinedetec-tionusingﬁrmwarethatperiodicallychecksforerrorsbyusingthescanlatchesisexploredbyConstantinidesetal.[5].Emμcodeassumesthatoneoftheselow-overheadef-fectivemethodsofdetectioncanbeusedtodeterminewhenEmμcodemustmaskahardfault.OtherRelatedWorkDallyhasshownin[7]thatitispos-sibletooptimizeovermultipleﬂoatingpointoperations.Hehasshownthatbyanalyzingthedataﬂowgraphofpro-gramsitispossibletocombineoperationscommonamongaddsandmultipliesoverthesamenumbersandreduceexe-cutiontimeby40percent.However,thetracesthatheusedaredesignedtobeusedwithaﬂoatingpointunitwherethevarioussub-operationsitperformsareopenforoptimiza-tion.SinceEmμcodeisdesignedtoprovidereliabilityoverﬂoatingpointunits,thisinformationisnotusefulforcreat-ingEmμcodetraces,targetingtheintegerpipeline.Corlissetal.in[6]presentsaframeworkforinsertingmicro-coderoutinesintodecodedinstructionsforperfor-mancereasons.Theypresentmanyoftheimportantstruc-turesnecessaryfortheinsertionofEmμcoderoutineswith-outaffectingtheISAstate.Theyintroducestructuressuchaspatternmatchingbasedontheinstructionbitsforparame-terizedreplacement,dedicatedregisters,andaDICEPCforbranchingwithintheirapplicationcustomizationfunctions(ACF).ItwouldbepossibletoutilizeaDISE-likeframe-worktoinsertEmμcodetracesasanACFiftheinstructionop-codewasusedastheDISEtriggerafterthehardfaultwasdetected.6.ConclusionThispaperpresentsEmμcodeasatechniqueformask-inghardfaultsinhardwarestructuresthatareeitherseldomusedorexpensivetoduplicate.Weevaluatethecostofus-ingmicrocodetracesinplaceoftheoriginalinstruction.We978-1-4244-4421-2/09/$25.00 c(cid:13)2009 IEEE
467
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 09:58:33 UTC from IEEE Xplore.  Restrictions apply. 
showthatitispossibletoachievea6xslowdownwhenmi-crocodingaﬂoatingpointarithmeticoperation.A6xslow-downforﬂoatingpointoperationsfortheseinstructionsisacceptableformanyprograms,especiallythosethatdonothavemanyﬂoatingpointinstructions.ForworkloadswithfewerthanﬁvepercentﬂoatingpointoperationscoveredbyEmμcodeaslowdownofonly1.36xto2.56xisachievable,andforworkloadswithsevenpercentto40percentﬂoatingpointoperationscoveredbyEmμcodeaslowdownof3.16xto19.33xwithEmμcodeenabledisobservered.Thereisnoperformanceoverheadifnoﬂoatingpointinstructionscov-eredbyEmμcodeareused.However,Emμcodeismeantforexpensivestructurestoreplicateaswellasinfrequentlyusedinstructions.SupportingEmμcoderequiresaddingminimalhardwaretoaconventionalprocessor.Itrequiresextrastructurestostoreinstructioninformation.Italsonecessitatesalotofindirectbranchingandstoringofdatathatisnolongeravailableaftertheoriginalinstructionisdecoded.Theseproblemsresultfromtracesrequiringmicrocodebranches,whichweﬁndtobehard-to-predict,complicatingachievingperformance.Eliminationofthebranchesisaprimarycon-cernforthiskindofmicrocodetracegeneration,astheyareverycostlytoexecutiontime.Weshowthatpartialpredi-cation,additionalregisters,theuseofthemicrocode’sﬂexi-bilitywithsourceanddestinationregisters,andtheadditionofafewnewinexpensivemicro-opscanproveusefulforoptimizingthetracestobeatbest6xfasterthanthenaiveimplementationand3.79xfasterintheaveragecaseforthetracesthemselves.References[1]Ieeestandardforbinaryﬂoating-pointarithmetic.ANSI/IEEEStd754-1985,Aug.1985.[Online].Available:http://ieeexplore.ieee.org/stamp/stampjsp?arnumber=30711&isnumber1316.[2]T.M.Austin.Diva:Areliablesubstratefordeepsubmicronmicroarchitecturedesign.InMICRO32,pages196–208,1999.[3]D.T.Blaauw,C.Oh,V.Zolotov,andA.Dasgupta.Staticelectromigrationanalysisforon-chipsignalinterconnects.IEEETransactionsonComputer-AidedDesignofIntegratedCircuitsandSystems,27:39–48,2003.[4]S.Borkar.Designingreliablesystemsfromunreliablecom-ponents:Thechallengesoftransistorvariabilityanddegra-dation.IEEEMicro,25:10–16,Nov.-Dec.2005.[5]K.Constantinides,O.Mutlu,T.Austin,andV.Bertacco.Software-basedonlinedetectionofhardwaredefectsmech-anisms,architecturalsupport,andevaluation.MICRO40,pages97–108,Dec.2007.[6]M.L.Corliss,E.C.Lewis,andA.Roth.Dise:Apro-grammablemacroengineforcustomizingapplications.InISCA30,pages362–373,2003.[7]W.J.Dally.Micro-optimizationofﬂoating-pointoperations.InASPLOS,pages283–289,1989.[8]J.R.Hauser.Softﬂoat2b,May2002.[Online].Available:http://www.jhauser.us/arithmetic/SoftFloat.html.[9]G.Hinton,D.Sager,M.Upton,D.Boggs,D.Carmean,A.Kyker,andP.Roussel.Themicroarchitectureofthepen-tium4processor.IntelTechnologyJournal,Q1:1–13,2001.[10]P.Y.T.HsuandE.S.Davidson.Highlyconcurrentscalarprocessing.InISCA13,pages386–395,1986.[11]R.Joseph.Exploringsalvagetechniquesformulti-corear-chitectures.InHPCRI,2005.[12]M.-L.Li,P.Ramachandran,S.K.Sahoo,S.V.Adve,V.S.Adve,andY.Zhou.Understandingthepropagationofharderrorstosoftwareandimplicationsforresilientsystemde-sign.InASPLOS13,pages265–276,NewYork,NY,USA,2008.ACM.[13]S.A.Mahlke,R.E.Hank,J.E.McCormick,D.I.August,andW.W.Hwu.Acomparisonoffullandpartialpredicatedexecutionsupportforilpprocessors.InISCA,pages138–149,1995.[14]A.MeixnerandD.J.Sorin.Detouring:Translatingsoftwaretocircumventhardfaultsinsimplecores.InDSN38,pages80–89,2008.[15]S.Ozev,D.Sorin,andM.Yilmaz.Low-costrun-timediag-nosisofharddelayfaultsinthefunctionalunitsofamicro-processor.ComputerDesign,2007.ICCD2007.25thInter-nationalConferenceon,pages317–324,Oct.2007.[16]J.M.Rabaey.DigitalIntegratedCircuits:ADesignPer-spective.Prentice-Hall,UpperSaddleRiver,NJ,1996.[17]E.Rotenberg,S.Bennett,andJ.E.Smith.Tracecache:alowlatencyapproachtohighbandwidthinstructionfetching.InMICRO29,pages24–35,Washington,DC,USA,1996.IEEEComputerSociety.[18]E.SchuchmanandT.N.Vijaykumar.Blackjack:Harderrordetectionwithredundantthreadsonsmt.InDSN37,2007.[19]S.Shyam,K.Constantinides,S.Phadke,V.Bertacco,andT.Austin.Ultralow-costdefectprotectionformicropross-esorpipelines.ASPLOS,pages113–119,2006.[20]J.Srinivasan,S.Adve,P.Bose,andJ.Rivers.Exploitingstructuralduplicationforlifetimereliabilityenhancement.InISCA,pages520–531,2005.[21]A.M.D.T.Staff.AMDx86-64ArchitectureProgrammersManual,Volume4:128-BitMediaInstructions.AdvancedMicroDevices,2002.[22]J.H.StathisandS.Zafar.Thenegativebiastemperatureinstabilityinmosdevices:Areview.MicroelectronicsandReliability,46:270–286,Feb.2006.[23]M.T.Yourst.Ptlsim:Acycleaccuratefullsystemx86-64microarchitecturalsimulator.InIPASS,pages23–34,2007.