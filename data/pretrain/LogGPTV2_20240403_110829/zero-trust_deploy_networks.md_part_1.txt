---
title: Secure networks with Zero Trust
description: Due to the cloud, mobile devices, and other endpoints that expand boundaries and change paradigms, there isn't necessarily a contained/defined network to secure. Instead, there is a vast portfolio of devices and networks, all linked by the cloud.
ms.date: 09/30/2020
ms.service: security
author: joe-davies-affirm
ms.author: v-jodavies
ms.topic: conceptual
ms.collection:
  - zerotrust-pillar
---
# Secure networks with Zero Trust
:::image type="icon" source="../media/icon-networks-medium.png":::
Big data presents new opportunities to derive new insights and gain a competitive edge. We are moving away from an era where networks were clearly defined and usually specific to a certain location. The cloud, mobile devices, and other [endpoints](https://aka.ms/ZTEndpoints) expand the boundaries and change the paradigm. Now there isn't necessarily a contained/defined network to secure. Instead, there is a vast portfolio of devices and networks, all linked by the cloud.
Instead of believing everything behind the corporate firewall is safe, an end-to-end Zero Trust strategy assumes breaches are inevitable. That means you must verify each request as if it originates from an uncontrolled networkâ€”[identity](https://aka.ms/ZTIdentity) management plays a crucial role in this.
In the Zero Trust model, there are three key objectives when it comes to securing your networks:
- Be ready to handle attacks before they happen. 
- Minimize the extent of the damage and how fast it spreads.
- Increase the difficulty of compromising your cloud footprint.
To make this happen, we follow three Zero Trust principles:
- **Verify explicitly.** Always authenticate and authorize based on all available data points, including user identity, location, device health, service or workload, data classification, and anomalies.
- **Use least-privileged access.** Limit user access with Just-In-Time and Just-Enough-Access (JIT/JEA), risk-based adaptive polices, and data protection to protect both data and productivity.
- **Assume breach.** Minimize blast radius for breaches and prevent lateral movement by segmenting access by network, user, devices, and application awareness. Verify all sessions are encrypted end to end. Use analytics to get [visibility](https://aka.ms/ZTCrossPillars), drive threat detection, and improve defenses.
## Network Zero Trust deployment objectives
   Before most organizations start their Zero Trust journey, they have network security that is characterized by the following:
         Few network security perimeters and open, flat networks.
         Minimal threat protection and static traffic filtering.
         Unencrypted internal traffic.
         When implementing an end-to-end Zero Trust framework for securing networks, we recommend you focus first on these initial deployment objectives:
		 I. Network segmentation: Many ingress/egress cloud micro-perimeters with some micro-segmentation.
	     II. Threat protection: Cloud native filtering and protection for known threats.
		 III. Encryption: User-to-app internal traffic is encrypted.
         After these are completed, focus on these additional deployment objectives:
         IV. Network segmentation: Fully distributed ingress/egress cloud micro-perimeters and deeper micro-segmentation.
         V. Threat protection: Machine learning-based threat protection and filtering with context-based signals.
         VI. Encryption: All traffic is encrypted.
        VII. Discontinue legacy network security technology.
## Networking Zero Trust deployment guide
This guide will walk you through the steps required to secure your networks following the principles of a Zero Trust security framework.
[!INCLUDE [H2 heading, Initial deployment objectives](../includes/deployment-objectives-initial.md)]
### I. Network segmentation: Many ingress/egress cloud micro-perimeters with some micro-segmentation
Organizations should not just have one single, big pipe in and out of their network. In a Zero Trust approach, networks are instead segmented into smaller islands where specific workloads are contained. Each segment has its own ingress and egress controls to minimize the "blast radius" of unauthorized access to data. By implementing software-defined perimeters with granular controls, you increase the difficulty for unauthorized actors to propagate throughout your network, and so reduce the lateral movement of threats.
There is no architecture design that fits the needs of all organizations. You have the option between a few [common design patterns](https://www.microsoft.com/security/blog/2020/06/15/zero-trust-part-1-networking/) for segmenting your network according to the Zero Trust model.
In this deployment guide, we'll walk you through the steps to achieve one of those designs: Micro-segmentation.
With micro-segmentation, organizations can move beyond simple centralized network-based perimeters to comprehensive and distributed segmentation using software-defined micro-perimeters.  
#### Applications are partitioned to different Azure Virtual Networks (VNets) and connected using a hub-spoke model
:::image type="content" source="../media/diagram-network-hub-spoke-two-regions.png" alt-text="Diagram of two virtual networks connected in a hub-and-spoke model." border="false":::
Follow these steps:
1.  [Create dedicated virtual networks](/azure/virtual-network/quick-create-portal) for different applications and/or application components.
2.  Create a central VNet to set up the security posture for inter-app connectivity and connect the app VNets in [a hub-and-spoke architecture](/azure/architecture/reference-architectures/hybrid-networking/hub-spoke).
3.  [Deploy Azure Firewall](/azure/firewall/deploy-ps) in the hub VNet to inspect and govern traffic between the VNets.
### II. Threat protection: Cloud native filtering and protection for known threats
Cloud applications that have opened up endpoints to external environments, such as the internet or your on-premises footprint, are at risk of attacks coming in from those environments. It is therefore imperative that you scan the traffic for malicious payloads or logic.
These types of threats fall into two broad categories:
- **Known attacks**. Threats that have been discovered by your software provider or the larger community. In such cases, the attack signature is available and you need to ensure that each request is checked against those signatures. The key is to be able to quickly update your detection engine with any newly identified attacks.
- **Unknown attacks.** These are threats that don't quite match against any known signature. These types of threats include zero-day vulnerabilities and unusual patterns in request traffic. The ability to detect such attacks depends on how well your defenses know what's normal and what is not. Your defenses should be constantly learning and updating such patterns as your business (and associated traffic) evolves.
Take these steps to protect against known threats:
1.  **For endpoints with HTTP/S traffic**, protect using [Azure Web Application Firewall (WAF)](/azure/web-application-firewall/overview) by:
    1.  Turning on the default ruleset or [OWASP top 10](https://owasp.org/www-project-top-ten/) protection ruleset to protect against known web-layer attacks
    1.  Turning on the bot protection ruleset to prevent malicious bots from scraping information, conducting credential stuffing, etc.
    1.  Adding custom rules to protect against threats specific to your business.
    You can use one of two options:
    - [Azure Front Door](/azure/frontdoor/front-door-overview)
        1. [Create a Web Application Firewall policy on Azure Front Door](/azure/web-application-firewall/afds/waf-front-door-create-portal).
        1. [Configure bot protection for Web Application Firewall](/azure/web-application-firewall/afds/waf-front-door-policy-configure-bot-protection).
        1. [Custom rules for Web Application Firewall](/azure/web-application-firewall/afds/waf-front-door-custom-rules-powershell).
    - [Azure Application Gateway](/azure/application-gateway/overview)
       1. [Create an application gateway with a Web Application Firewall](/azure/web-application-firewall/ag/application-gateway-web-application-firewall-portal).