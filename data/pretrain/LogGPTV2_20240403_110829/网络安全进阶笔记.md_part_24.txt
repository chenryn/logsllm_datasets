从这个基础构架入手，在网络安全检测中，采用本模式有许多优势。第一，它使得在测试
环境改变时重写注入部件非常方便，只有实体注入器的代码需要修改。第二，便于扩展。当需
要加入新的错误类型时，只需创建一个抽象基类（Injector）的子类即可。当然注入管理器要能识
别出这个新的错误类型。第三，支持多线程。当测试环境从单线程变成多线程时，只需要改变
注入管理器即可。第四，它使得每个模块和其他模块的交互都达到了最小化。
块采集，并将不同块的采集结果整合到一起，以提高整个Web的采集覆盖率和页面利用率。
同时，网络爬虫还应尽可能多地采集信息页面，尽可能快地爬行、采集尽可能多的与预先定义
好的主题相关的网页，通过规则的定义和比较，发现网络漏洞的问题所在。很多开源的项目本
身就有非常优秀的创意，HarvestMan的实现思路就具有很好的参考性。
(3）网络爬虫检测的设计与测试。
一个Web应用程序安全漏洞测试工具至少要有一个网络爬行构件来爬行网页，还要有一
个错误注入构件来注入数据。在被注入的数据方面，最重要的就是如何构造一个丰富的注入模
式库。根据以上分析，可以大概得出以下漏洞测试总体结构，如图2.67所示。
用户楼口
流程管理模块
熊虫
模块
注入分析模块
数据访问模块
图2.67网络爬虫漏洞检测总体结构
---
## Page 109
网络安全进阶笔记
在这个结构图中，箭头表示了整个系统的控制流方向。
首先，测试时，通过用户接口层与“爬虫”系统进行交互，而能够与用户接口发生交互的
则是流程管理模块。在接受了用户要求爬行或注入的命令后，流程管理模块首先向配置模块请
求配置信息。然后，或者调用爬行模块进行网络爬行，或者调用注入分析模块执行注入。具体
对爬行或注入的细节的要求除了由流程管理模块从配置模块读入外，还可以由用户在命令行中
指定。
然后，爬行模块在被触发之后，开始执行所要求的网络爬行。网络爬行组件的设计与实现
基于开源项目HarvestMan.它的作用是按照一定的模式向被测系统发送畸形的HTTP请求并根
据响应数据来分析本次注入是否是成功的。
该项目的最新代码可以到http://code.google.com/p/harvestman-crawler下载。也就是说，可
以发现被测的Web站点是否存在这种漏洞。如果用户要求多线程机制，则生成一个线程池，
激活其中所有的线程进行爬行。与常见的搜索引类似，得到的URL数据被放入缓存，下载
的Web页面数据除了放入缓存之外，还要传送给数据访间模块。在爬行过程全部结束之后，
所有的URL才传送给数据访问模块。之所以区别对待，是因为页面数据的内容相对要多，因
此页面数据在分析和抽取链接之后应该尽快地被清出缓存队列，否则很容易造成内存不足，影
响性能。
此外，注入分析组件的功能也很重要，它可以根据用户的要求让数据访问组件从磁盘上读
出待注入的URL和可供注入的字符和字符串，来构造一个请求，放入请求缓存队列。若用户
要求多线程的注入，则请求缓存中的请求就被一个个的线程取出，并向服务器发送。这些请求
都是通过HTTP代理来发送的，服务器返回的响应数据也被HTTP代理截获并传递给响应数据
分析器。
响应数据分析器根据一定的标准判断本次注入是否成功，若是成功的，则把本次请求和响
应通过数据访问组件放入报告数据库，否则就简单地丢弃这个响应对象。
通过Googlecode网站下载相关代码并运行后，能够很快识别被测试网站的源代码泄露漏
洞、目录遍历漏洞、命令行注入漏洞等。由于篇幅所限，这里就不进行详细的代码分析了，不
过，值得一提的是，Google的开源站点提供了丰富的安装、测试以及总结性资料，并对相关代
码进行了详细的注释。
对于安装或测试中的难题，还可以通过该开源项目的维基（Wiki）、焦点问题（Issucs）等渠道
获取帮助。单击相关栏目的每一个主题，即可获得详细的技术资料。总之，网络爬虫技术的研
究对漏洞检测也具有十分重要的意义，在关注网络安全技术的同时，还应重点关注网络爬虫所
使用的相关策略。这样，就能够深入系统内部并主动出击，提高漏洞检测的准确性，从而真正
在网络安全工作中防惠于未然。
2.5服务器安全攻防进阶实例
网络安全实践中，往往面临的环境是多种应用和系统的结合，网络的开放性、互联性等特
征也使Web系统尤其是数据库更易受黑客、恶意软件和其他不轨行为的攻击，阿甘最近就遇
到了这样的问题，他有着《阿甘正传》中主人公一样的执着精神。通过下面的案例，我们来分
析阿甘是如何盗取数据库的资料的。
OOL
---
## Page 110
三
第2章构建个性化的进阶平台
2.5.1数据库与操作系统的安全攻击分析
网络数据库系统的安全性在很大程度上依赖于网络数据库管理系统。如果网络数据库管理
系统安全机制非常强大，则网络数据库系统的安全性能就较好。
1.网络环境下的数据库威胁
总地来看，网络数据库系统的安全框架可以划分为3个层次：网络系统层次、宿主操作系
统层次、数据库管理系统层次。这3个层次防范的重要性也逐层加强，从外到内、由表及里保
证数据的安全。
（1）网络数据库的完整性分析：系统漏洞威胁。
数据库的完整性指保护数据库中的数据不被破坏和删除，下面，我们主要从操作系统和数
据库系统进行分析。首先，在操作系统下，网络数据库系统都是以文件形式进行管理的。因此，
入侵者通过网络可以直接利用操作系统的漏润窃取数据库文件，或者直接利用OS工具非法伪
造、募改数据库文件内容，面且一股网络数据库用户难以察觉。其次，从数据库系统的角度来
看，许多DBA很容易忽略检查严重的安全隐患和不正确的配置，面且数据库厂商一般没有提
供专门的审计接口，即使是已有的功能也不太完整。因此，在网络环境下，需要有相应的工具
能够扫描出系统软件所存在的问题，帮助DBA找出并修复系统存在的管理相关和用户相关的
问题。
在使用十分广泛的SQLServer数据库中，有两种比较典型的攻击。第一种是无需认证的攻
击，主要包括存在于UDP监控器端口上的缓冲区溢出、利用SQLPing等工具间SQL监控器端
口攻击、通过网络噢探等方式获取密码等。另一种是需要认证的攻击，主要包括利用xp_cmdshell
storedprocedure（扩展存储过程）读取文件系统和注册表，通过临时存储过程或SQLAgent绕过
访问控制机制等。面且，有的程序员习惯使用初始密码为空的SA账号访问数据库，这样，黑
客也可以通过客户端进行数据库远程连接，借助扩展存储过程新建一个管理员级别的
Administrators组的用户：
Xp_cmdshell*netlocalgroup Administrators id /add*
对于数据库来说，这无疑于一场灾难。
（2）网络数据库的保密性分析：网络数据传输威胁。
数据库的保密性指保护数据库中的数据不被泄露和未授权获取.SQLServer2000使用
TabularDataStream协议来进行网络数据交换，如i果不加密的话，所有的网络传输都是明文的，
包括密码、数据库内容等，这很可能被第三方人员截取、募改。因此，当用户或应用程序需要
访问SQLServer时，就要发生一个相互交换凭证的过程。这些信息要尽可能进行加密处理，以
防止有人窥探网络上的通信，并使用窥探到的信息假冒一个合法的用户进行信任款骗。
数据库的可用性是确保数据库中的数据不因人为的和自然的原因对授权用户不可用，通常
情况下，对数据库访问的控制只能通过用户控制即用户名/密码来进行。在开放的网络环境中，
一方面，数据库要给网络上的用户提供尽可能方便的服务：另一方面，数据库还要受到来自黑
10.1..
---
## Page 111
网络安全进阶笔记
客的各种攻击，这也增加了密码保护管理的难度，导致网络数据库的可用性受到威胁。分析上
述矛盾，我们可以看到，数据访问通常可以看作以下两个步骤的过程：认证（Authentication）和
授权（Authorization）。前者解决的问题是“我是谁”，这是试图控制SQLServer内部数据库的
人或应用程序的身份的过程：而后者回答的是“允许我干什么”的问题。
（4）网络数据库的一致性分析：以SQL注入成胁为例。
数据库的一致性是确保数据库中的数据满足实体完整性、参照完整性和用户定义完整性要
求。现在，许多站点都采用了ASP、PHP、JSP等脚本语言配合网络数据库的形式。如果不对
网页中用户提交的数据进行合法性判断和过滤，恶意的浏览者就可以通过提交精心构造的数据
统的安全性。除了依赖自身内部的安全机制外，数据库系统的安全还与从业人员素质等因素息
息相关。考虑到网络环境下的具体应用，下面来看看大黑的经验之谈。
2.WebServer服务器安全
首先，应尽可能选择专用的WebServer服务器，在安装系统时应断开服务器的网络连接，
并在此基础上安装ServicePack3的补丁程序。打完补丁后修改注册表，首先禁止默认共享。
在Windows2000中，有一个“默认共享”，这是在安装服务器的时候，把系统安装分区自动
进行共享，虽然对其访问还需要超级用户的密码，但这是潜在的安全隐患，从服务器的安全考
虑，最好关闭这个“默认共享”，以保证系统安全。应禁止IPCS空连接，将键值[HKEY_LOCAL_
MACHINEISYSTEMCurrentControlSetControlLsarestrictanonymous]改为 1
另外，IPCS（IntermetProcessConnection）是为了让进程间通信而开放的命名管道，可以通过
验证用户名和密码状得相应的权限，在远程管理计算机和查看计算机的共享资源时使用。利用
IPCS，连接者甚至可以与目标主机建立一个空的连接面无需用户名与密码（当然，主机必须开
了IPCS共享，否则是连接不上的），面利用这个空的连接，连接者还可以得到目标主机上的用
户列表。
3.IIS安全
针对IIS，要尽量避免把IS安装在网络中的主域控制器上.因为在安装完IIS后，会在所
安装的计算机上生成IUSR_Computemame的匿名账户。这个账户会被添加到域用户组中，从
而把应用于域用户组的访问权限提供给访问Web服务器的每个匿名用户，这样不仅不能保证
IIS的安全性，而且会威胁到主城控制器。在安装完后，应运行ISLOCKD.EXE，该软件是微
软发行的用于填补IS漏洞的软件。但这并不足以保证IIS的安全，应对IIS做进一步的加固：
删除和停用IIS的示范程序和目录，这是IS自带的程序和文件，也是进攻者对Web系统进行
攻击的一个途径。为防止进攻者利用服务器的FTP设置和发送MAIL的功能对网站内容进行
修改，如果服务器不需要FTP和发送MAIL，可以删掉ftproot和mailroot两个文件夹，并关
掉相关的服务。
为避免日志文件被修改或覆盖，需要设置IIS日志文件的访问控制权限：默认情况下，IIS
日目
地方。推荐访问控制权限：Administrators（Full Control);System（Full Control);Everyone(RWC)。
这个步骤将防止一些有恶意的用户通过删除日志信息来掩盖他的记录。
删除危险的脚本影射。例如，对htr文件的映射，请求处理存在堆溢出漏洞，远程攻击者
02
---
## Page 112
第2章构建个性化的进阶平台
可以利用此漏洞得到主机本地普通用户访问权限。而对idq.dll，在处理某些URL请求时存在
一个未经检查的缓冲区，如果攻击者提供一个特殊格式的URL，就可能引发一个缓冲区溢出。
通过精心构造发送数据，攻击者可以改变程序执行流程，执行任意代码。成功地利用这个漏洞，
攻击者可以远程获取LocalSystem权限。因此，删除一些并不需要的脚本影射，可以将利用漏
洞攻击的可能性降至最低。
4.盗取数据
黑吃了顿饭，为的就是那套仰幕已久的“XX系统”，数据库就是用SQLServer2000写的。这
不，代码被阿甘神不知鬼不觉地拿到了，可数据库里面的数据却一直不能拿到手，这也是阿甘
觉得大黑有点“不够意思”的原因，怎么办？等了几天，机会终于来了，这天，还没下班，大
黑的女朋友一个电话就把他“召唤”走了，由于初来乍到，公司的那个秃头经理又对阿甘说：
“阿甘啊，我们的系统还有几个地方有点问题，你今天留下来把它完成吧！”阿甘望了望他泛
光的头项，毫不犹豫地说“好！”头儿转过身，阿甘就开始叹气了。虽然饿着肚子，但问题很
说干就干，阿甘想了很多方法来破解大黑的操作系统，这应该是最原始的办法之一了。可
大黑很勤于打补丁，一时半刻对他的系统也没有办法。在失望中，阿甘打开了自己机器上的
SQLServer2000“企业管理器”，突然，阿甘想到，自己上次看的一个web.config文件中，不
是有数据库密码吗？想到这里，阿甘马上打开了这个ASP.NET配置文件。类似的文件在很多
免费的ASP系统和其他场合都可以得到，且看阿甘拿到的这个文件内容：
(app&ettinge>
...
还有一个间题，大黑的数据库没有启动？怎么办？还是要管理员密码啊！通常情况下，SQL
Server是默认启动的，也就是说，即使没有登录，数据库也可能启动。想到这里，阿甘抱着试
试看的心理打开了大黑的服务器，然后，注册了一个服务器，如图2.68所示。
Mm
图2.68已注册的SQLServer属性
---
## Page 113
网络安全进阶笔记
连接后，激动人心的时刻终于来到了，现在，大黑的数据完全在阿甘的掌握之下了。连接
后的数据如图2.69所示。
AD1
01400