ing advanced HE techniques that perform well in linear function
evaluations, we develop a novel preprocessing protocol for matrix
multiplication operations (i.e., the center building block of this
step), which is evaluated in the preamble phase to accelerate the
privately robust aggregation procedure. Beneficially, once the par-
ties‚Äô local gradients are available, the secure directional similarity
measurement can be implemented non-interactively with negligible
computation overhead. Notably, our cryptographic recipes may be
of independent interests, and can be used in other byzantine-robust
FL schemes [9] [16] and even a wider range of scenarios such as
scientific computing [13]. Besides, to demonstrate the efficiency
and robustness of SecureFL, we conduct extensive experiments on
three real-world datasets with various neural network architectures
against the latest two types of byzantine attacks.
ACSAC‚Äô21,December6‚Äì10,2021,VirtualEvent,USAMengHao,etal.Table1:ComparisonwithpriorworksonpropertiesnecessaryforfederatedlearningProposedWorksApproachPrivacyRobustnessScalabilityUserEfficiency[10]MPC+FedAvg[7]MPC+FedAvg[2]HE+FedAvg[22]HE+FedAvg[25]MPC+Krum[44]MPC+Krum[30]MPC+CosineSimilarityOurSecureFLCrypto-friendlyFLTrustwithcustomizedMPC&HEOntheotherhand,manyworkshavemaderapidstridestowardsrealizingbyzantinerobustnessinFLviadevelopingstatisticallyro-bustaggregationrules,suchasKrum[9],Median[50],andBulyan[16].Themainideaisthattheserviceproviderremovessuspiciousoutliersbyperformingstatisticalanalysisamongparties‚Äôlocalgra-dients,beforeupdatingtheglobalmodelwiththem(seeSection2formoredetails).Notably,Caoetal.recentlyproposedthestate-of-the-artbyzantinerobustFLmethod,FLTrust[11],whichperformseffectiveandcomprehensivebyzantinedetectionbyintroducinganovelserverupdateasthebaselineandanalyzingboththedirectionandmagnitudeoflocalgradients.Specifically,theyfirstdesignedanormalizationprotocoltopreventthemaliciousparties‚Äômanip-ulationonmagnitude,andthenperformeddirectionalsimilaritymeasurementtoeliminatetheeffectoflocalgradientsthatareintheoppositedirectionfromtheserverupdate.Althoughmanyworkshavebeenproposedtoalleviatetheprob-lemsofprivacyleakageandbyzantineattacks,mostofthemuni-laterallyseparatetheabovetwoconcernsandunderestimatetheirinternalconnections.Essentially,privacyviolationandbyzantineattacksareintricatelyintertwined.Attackersmaycarefullyexploitbyzantinevulnerabilitiestoinferotherparties‚Äôtrainingdatasetsandhencedestroyevenprivacy-protectedFLsystems[26],whileprivacyleakageprovidesadversarieswithmorefavorablepriorknowledgetolaunchomniscientandadaptivebyzantineattacks[18][8].Therefore,itisnecessarytodesignaFLsystemrealizingprivacyprotectionandbyzantinerobustnesssimultaneously.Tothisend,anaturalapproachistointegrategenericcryptographictechniquessuchasMPCandHE[14][17]withexistingbyzantine-robustFLprotocols[9][11].However,itaddsalargeoverheadduetotheevaluationofheavycryptographicoperations,e.g.large-scalematrixmultiplicationinthemeasurementoftheparties‚Äôgradientquality,andcomplexnon-linearfunctionusedtoprivatelyexcludeoutliergradients.Consequently,thechallengingproblemishowtodesigncustomizedcryptographicprotocolsforprivateFLsystemsthatcanefficientlyimplementbyzantinedefenseatthesametime.Afewworks[44][25][30]exploredtodevelopunifiedsolutions(seeSection2formoredetails),however,to"purely"facilitatethedesignofefficientcryptographicprotocols,theymadeinappro-priatetrade-offs,suchasrevealingintermediatevalues(e.g.,thequalityoftheparties‚Äôupdates)orexploitingsimplebutvulnerableaggregationrules[9].Inthispaper,weintroduceSecureFL,anefficient,privateandbyzantine-robustFLframeworkthatapproachestheaboveprob-lems,asillustratedinTable1.OurSecureFLfollowsthestate-of-the-artbyzantinerobustmethod,FLTrust[11],andadaptsittotheprivacy-preservingcontexttoachievefullprivacyprotection.Wemainlyfocusonreducingtheoverheadofevaluatingbyzantinedetectionunderciphertext.Specifically,inspiredbytherespectiveadvantagesofHEandMPC,wedevisecustomizedcryptographicprotocolsforthetwokeystepsofFLTrust.(1)Forthemagnitudenormalization,thekeyideaistodesignacrypto-friendlyalternativethatfunctionallyreplacesthecostlynormaliza-tionoperation.Specifically,weobservethatthisstepinvolvingùëë(i.e.,thesizeofthegradient)reciprocalsquarerootandonehigh-dimensionalinnerproductiscomputationallyexpensiveinsecurecomputation.Toreducethisoverhead,weleavetheimplementa-tionofnormalizationtothepartysideinplaintext,anddesignacrypto-friendlyvaliditycheckingprotocolfortheserviceprovidertoinspectwhetherpartiesdeviatefromthespecificationandexplicitlyexcludeupdateswithwrongform.AlongwithourcustomizedMPCprotocols,oursolutionreducesthecommunicationandcomputa-tioncostsroughlybyhalf,withoutanyprivacyleakageandrobust-nessloss.(2)Forthedirectionalsimilaritymeasurement,ourmaininsightisthattheserviceprovidercanpre-computesomecryptographicprotocolsbeforetheparties‚Äôlocalgra-dientsareavailable.Specifically,weidentifyandrepurposeanimportantbutunder-utilizedphase,calledpreamblephase,whereinpriorworkstheserviceprovideronlystaysidleandwaitsforthepartiestouploadtheirlocalgradients.InourSecureFL,utiliz-ingadvancedHEtechniquesthatperformwellinlinearfunctionevaluations,wedevelopanovelpreprocessingprotocolformatrixmultiplicationoperations(i.e.,thecenterbuildingblockofthisstep),whichisevaluatedinthepreamblephasetoacceleratetheprivatelyrobustaggregationprocedure.Beneficially,oncethepar-ties‚Äôlocalgradientsareavailable,thesecuredirectionalsimilaritymeasurementcanbeimplementednon-interactivelywithnegligiblecomputationoverhead.Notably,ourcryptographicrecipesmaybeofindependentinterests,andcanbeusedinotherbyzantine-robustFLschemes[9][16]andevenawiderrangeofscenariossuchasscientificcomputing[13].Besides,todemonstratetheefficiencyandrobustnessofSecureFL,weconductextensiveexperimentsonthreereal-worlddatasetswithvariousneuralnetworkarchitecturesagainstthelatesttwotypesofbyzantineattacks.46Efficient, Private and Robust Federated Learning
ACSAC ‚Äô21, December 6‚Äì10, 2021, Virtual Event, USA
Our key contributions can be summarized as follows:
‚Ä¢ We propose a new federated learning framework, SecureFL,
which achieves state-of-the-art robustness, full privacy pro-
tection and efficiency at the same time.
‚Ä¢ We carefully customize a series of cryptographic compo-
nents for enjoying efficiently mathematical operations in the
evaluation of privately robust aggregation.
‚Ä¢ Extensive experiments illustrate that SecureFL outperforms
prior art up to two orders of magnitude in efficiency with
state-of-the-art robustness.
The remainder of this paper is organized as follows. In Section
2, we overview the latest related works. In Section 3, we introduce
the system model and the threat model followed by describing the
design goals and cryptographic primitives. Then, we present our
cypto-friendly FL variant in Section 4 and carry out our SecureFL
framework in detail in Section 5. Finally, the performance evaluation
is discussed in Section 6 and we conclude our work in Section 7.
2 RELATED WORKS
In this section, we overview the latest related works about privacy-
preserving and byzantine-robust FL.
McMahan et al. [33] developed the pioneering FL method in non-
adversarial settings, FedAvg, which computes the average of the
local model updates, but a risk (i.e., the correctness of the learned
model) emerges upon facing even a single byzantine party [9]. To
mitigate such problem, Blanchard et al. proposed Krum [9], which
selects as the global update one of the n local gradients that is
similar to other parties‚Äô gradients based on the Euclidean distance.
After that, Bulyan [16] was designed via combining Krum and the
idea of median to further improve the byzantine robustness. Besides,
Yin et al. [49] proposed coordinate-wise aggregation rules, such
as trimmed mean and median based rules. Specifically, for each
i-th coordinate of the gradient vector, the service provider first
sorts the n local gradients and then takes their median (or trimmed
mean) as the i-th parameter of the global update. While the above
methods were claimed to be robust against byzantine failures at
the time, the latest works [18] [5] [45] [41] found that they are
still vulnerable to sophisticated byzantine attacks. Consequently,
Cao et al. proposed FLTrust, the state-of-the-art byzantine-robust
method that achieves robustness against even strong and adaptive
attacks [18]. Nevertheless, privacy issues remain unresolved in the
aforementioned byzantine-robust works.
Recently, several works [24] [43] [22] [29] [38] began to explore
unified solutions to privacy leakage and byzantine attacks. For ex-
ample, He et al. [24] combined additive secret sharing based secure
computation and a variant of the Krum aggregation protocol [9],
to mitigate the above problems. Concurrently, So et al. [43] also
devised a similar scheme based on the Krum aggregation rule, but
relied on different cryptographic techniques including verifiable
Shamir‚Äôs secret sharing and Reed-Solomon code. To further im-
prove byzantine robustness, [29] proposed a new defense by using
cosine similarity and generic secure multi-party computation tools.
Different from the Krum-based works [24] [43] that utilize the
Euclidean distance, the cosine similarity measurement addition-
ally takes into account the direction of parties‚Äô updates. However,
unlike SecureFL, the above approaches incur a significant commu-
nication and computation cost that grows quadratically with the
number of parties. The main reason is that they perform pair-wise
byzantine statistical analysis between parties‚Äô gradients, such that
each gradient is required to be compared with all other gradients.
Another disadvantage is that they leak intermediate information
such as confidence information that is used to measure the quality
of parties‚Äô gradients. Such seemingly inconspicuous contents may
reveal the parties‚Äô identity or data quality, thereby undermining
fairness. Besides, Nguyen et al. [38] proposed FLGuard to realize
full privacy protection but focused on mitigating backdoor attacks
[4]. To this end, they design a clustering-based cosine similarity
measurement and combine existing secure computation techniques.
However, its reliance on clustering computations and heavy cryp-
tographic operations results in a protocol that is more expensive
than SecureFL‚Äôs protocol with respect to both computation and
communication. Another recent work [22] for private byzantine-
robust FL was designed using Trusted Execution Environments
(TEEs). In their solution, the service provider is equipped with a
TEE, in which the robustness aggregation procedure is performed
using their customized methods without compromising the par-
ties‚Äô privacy. However, the latest research [44] shows that TEEs
are still vulnerable to hardware-based side-channel attacks, and
hence their work may suffer potential security risks. Different from
TEE-based solutions, our SecureFL provides formal security proof
and robustness analysis theoretically (refer to Appendix B). More
importantly, all of the above schemes are still vulnerable to strong
byzantine attacks [18] [5], since they make an inappropriate trade-
off between the cryptographic performance and robustness, namely
that they use simple but vulnerable aggregation rules, such as Krum
[9]. In contrast, our SecureFL follows the state-of-the-art byzantine-
robust FLTrust [11], and does not sacrifice inference accuracy and
robustness even in designing crypto-friendly FL alternatives and
customized cryptographic protocols.
3 PRELIMINARIES
In this section, we first introduce the system model and the threat
model following the prior works [43] [24], and then describe the
design goals and the cryptographic primitives.
3.1 System Model
In our SecureFL, there are a set of parties P1, P2, ..., Pn and two
servers (i.e., the FL service provider SP and the computing server
CS). SP coordinates the whole training process and CS assists SP
in performing secure two-party computation (2PC). Assume each
party Pi holds a local dataset Di, i ‚àà [n] and SP holds a small but
clean seed dataset Ds for byzantine detection (see more details in
The goal of n parties is to collaboratively train a global model by
solving the following optimization problem: minœâ ED[L(D, œâ)],
where œâ is the weight of the global model and L is the loss function,
e.g., the cross-entropy loss function. In practice, stochastic gradient
descent (SGD) is widely used to minimize the aforementioned loss
in FL. Figure 1 shows the system model of our SecureFL, and we
can observe it consists of three steps in each iteration. Specifically,
at step I, SP broadcasts the latest global model to parties that are
Section 4). We denote the overall training dataset as D =i‚àà[n] Di.
47ACSAC ‚Äô21, December 6‚Äì10, 2021, Virtual Event, USA
Meng Hao, et al.
several studies have been applied to practical scenarios; e.g., Prio
[13], a system for the privacy-preserving collection of aggregate
statistics, has been adopted by Mozilla‚Äôs Firefox browser1 and used
in iOS and Android2 to measure the effectiveness of their Exposure
Notification systems. In summary, the setting of two non-colluding
servers not only facilitates the design of efficient cryptographic
protocols, but also demonstrates potential commercial applications.
3.3 Design Goals
SecureFL aims to empower a FL framework that achieves byzantine
robustness against malicious parties, scalability and privacy pro-
tection at the same time without sacrificing the inference accuracy
and efficiency at the party side. More specifically, we aim to achieve
the following goals:
‚Ä¢ Robustness against malicious parties: Considering real-
world business competition, malicious parties may launch
byzantine attacks to deliberately destroy the competitor‚Äôs FL
system. Our goal is to preserve the accuracy and robustness
of the trained model against such malicious parties.
‚Ä¢ Privacy protection: In the training process, parties will
submit to the service provider their local updates that contain
the private information of their training dataset. Therefore,
the privacy of parties should be protected from being leaked.
‚Ä¢ Scalability: The privately robust aggregation protocol should
be implemented efficiently, and hence applied to large-scale
FL systems that involve hundreds of parties and advanced
neural network architectures.
‚Ä¢ Efficient protocols for parties: FL is particularly used in
the setting of resource-constrained mobile devices, in which
communication is extremely expensive. Therefore, compared
with vanilla FL [33], the proposed scheme should not incur
extra computation and communication costs for parties.
3.4 Cryptographic Primitives
In this section, we provide a description of the cryptographic build-
ing blocks used in SecureFL.
3.4.1 Packed Linearly Homomorphic Encryption. A packed linearly
homomorphic encryption (PLHE) scheme [27] [51] is an encryption
scheme, which additionally enables packing multiple messages into
a single ciphertext and hence supports SIMD (single instruction mul-
tiple data) [42] linearly homomorphic operations. In details, a PLHE
scheme is a tuple of algorithms PLHE = (KeyGen; Enc; Dec; Eval)
with the following syntax: 1) KeyGen(1k) ‚Üí (pk, sk): on input
a security parameter k, KeyGen is a randomized algorithm that
outputs a public key pk and a secret key sk. 2) Enc(pk, m) ‚Üí c:
the encryption algorithm Enc takes a packed plaintext message m
and encrypts it using pk into a ciphertext c. 3) Dec(sk, c) ‚Üí m: on
input sk and a ciphertext c, the (deterministic) decryption algorithm
Dec recovers the plaintext message m. 4) Eval(pk, c1, c2, func) ‚Üí c:
on input pk, two (or more) ciphertexts c1, c2 containing m1, m2,
1https://blog.mozilla.org/security/
2https://github.com/google/exposure-notifications-android
Figure 1: System Model
selected in this iteration. Then at step II, each party pi locally
trains the global model received, computes its local gradient –¥i =
SGD(Di , b, œâ) where b is the batch size, and secretly shares –¥i with
the two servers. Finally at step III, SP and CS privately aggregate
the received local gradients by exploiting the robust aggregation
scheme, and update the global model.
3.2 Threat Model