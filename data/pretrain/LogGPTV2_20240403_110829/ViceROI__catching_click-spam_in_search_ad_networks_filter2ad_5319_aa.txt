title:ViceROI: catching click-spam in search ad networks
author:Vacha Dave and
Saikat Guha and
Yin Zhang
ViceROI: Catching Click-Spam in Search Ad Networks
Vacha Dave∗
UC San Diego
PI:EMAIL
Saikat Guha
Yin Zhang
Microsoft Research India
PI:EMAIL
Univ. of Texas at Austin
PI:EMAIL
ABSTRACT
Click-spam in online advertising, where unethical publishers
use malware or trick users into clicking ads, siphons oﬀ hun-
dreds of millions of advertiser dollars meant to support free
websites and apps. Ad networks today, sadly, rely primarily
on security through obscurity to defend against click-spam.
In this paper, we present Viceroi, a principled approach to
catching click-spam in search ad networks.
It is designed
based on the intuition that click-spam is a proﬁt-making
business that needs to deliver higher return on investment
(ROI) for click-spammers than other (ethical) business mod-
els to oﬀset the risk of getting caught. Viceroi operates
at the ad network where it has visibility into all ad clicks.
Working with a large real-world ad network, we ﬁnd that
the simple-yet-general Viceroi approach catches over six very
diﬀerent classes of click-spam attacks (e.g., malware-driven,
search-hijacking, arbitrage) without any tuning knobs.
Categories and Subject Descriptors
K.6.5 [Management of Computing and Information
Systems]: Security and Protection—Advertising Fraud
Keywords
Click-Spam, Click-Fraud, Invalid Clicks, Traﬃc Quality
1.
INTRODUCTION
Background and motivation. Click-spam in online ad-
vertising, where unethical publishers1 trick users into click-
ing ads or use malware to click on ads, hurts the online econ-
omy by siphoning oﬀ millions of advertiser dollars meant
to support free websites and apps [27]. Reputed ad net-
works2 attempt to ﬁlter click-spam to increase advertisers’
∗Work done while at Microsoft Research India
1Publishers are websites, apps, or games that show ads in
exchange for a fraction of the revenue generated by ad clicks.
2Ad networks aggregate ads from advertisers and broker
them to publishers, e.g., Google AdSense, Bing Ads, Baidu.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
CCS’13, November 4–8, 2013, Berlin, Germany.
Copyright 2013 ACM 978-1-4503-2477-9/13/11 ...$15.00
http://dx.doi.org/10.1145/2508859.2516688.
conﬁdence in their network [29]. Click-spam, however, is an
arms-race and attacks have evolved to avoid detection [4].
Ad networks today ﬁlter click-spam reactively and in an
ad-hoc manner — when a speciﬁc attack is detected (often
by the impacted advertiser), the ad networks creates a ﬁlter
tuned to the detected attack [29]. For example, if an adver-
tiser complains getting thousands of clicks from a single IP
address none of which convert into paying customers, the ad
network may start ﬁltering all clicks from that speciﬁc IP ad-
dress (or that /24 subnet). Reactive ﬁltering harms advertis-
ers since attacks may go undetected for months; in one case
it was estimated that click-spammers siphoned oﬀ at least
$14 million over 4 years before being taken down [5]. Fur-
thermore, ad-hoc point-solutions are quickly circumvented
by attackers, e.g., avoiding the IP blacklist by using a dis-
tributed botnet, potentially adding months before the attack
is rediscovered by a more savvy advertiser. A controlled
measurement study conducted in 2012 found that major ad
networks still missed ongoing click-spam attacks that ac-
counted for an estimated 10–25% of clicks in the study [4].
Ad networks recognize their point-solutions to be weak
and rely primarily on security through obscurity for protec-
tion — they ﬁercely guard their ﬁltering techniques in fear
that “unethical [parties] will immediately take advantage of
this information to conduct more sophisticated fraudulent
activities undetectable by [the ad network]’s methods” [29].
The evolution of click-spam malware, however, demonstrates
the futility of relying primarily on security through obscu-
rity. The TDL4 botnet for instance, which is estimated to
have siphoned millions, avoids threshold based ﬁlters by per-
forming only one click per IP address per day (but doing so
from millions of bots), avoids browser signature based ﬁlters
by plugging into real browsers, and avoids user behavior
based ﬁlters by gating malware actions on user actions [4].
Approach and contributions. We had three goals in
designing Viceroi: 1) proactively ﬁlter click-spam attacks, 2)
in a way that even after we publicly disclose our approach
it is hard (but perhaps not impossible) for click-spammers
to circumvent, and 3) simple and performant enough that
it can be deployed at Internet scales. Brieﬂy, Viceroi meets
these three goals as follows (Section 4 presents design de-
tails).
First, proactive ﬁltering requires a very general approach
that makes no assumptions about the speciﬁc attack mech-
anism. Thus as the click-spammer evolves the attack mech-
anisms over time, the basic ﬁltering approach remains unaf-
fected. A test of whether an approach is general enough in
practice is to see the diversity of attacks the approach can
detect without any tuning parameters. Viceroi detected six
very diﬀerent classes of ongoing click-spam attacks — includ-
ing malware-driven, search-hijacking, arbitrage, conversion-
fraud, ad-injection, and parked-domains — without any tun-
ing knobs. Section 6 presents detailed case-studies.
Second, publicly disclosing the Viceroi approach without
weakening it (i.e., rejecting the ﬂawed ad networks’ prac-
tice of security primarily through obscurity) requires us to
focus on invariants — something the click-spammer can-
not easily change without undermining his business model.
Viceroi is designed around a simple invariant that we iden-
tiﬁed — that a click-spam attack must have higher return-
on-investment (ROI) for the click-spammer than a ethical
publisher to oﬀset the risk of getting caught. Viceroi, in
essence, ﬂags publishers with anomalously high ROI. While
publisher ROI is hard to estimate, in practice we found per-
user revenue a close proxy. To avoid detection by Viceroi,
click-spammers must reduce their per-user revenue to that of
an ethical publisher. At which point, without the economic
incentive to oﬀset the risk of getting caught (by approaches
complementing Viceroi), the net eﬀect is a disincentive to
commit click-spam.
Finally, to operate at Internet scales, Viceroi must deal
with massive volumes of noisy ad network data eﬃciently
and with low false-positives. Viceroi has very good perfor-
mance on ROC and precision-recall curves (around 90% typ-
ically). Furthermore, in simulated attacks, Viceroi has with-
stood attacks against adversaries several times more power-
ful than the ones known today.
We believe Viceroi meets all three goals as evidenced by a
large ad network deploying several aspects of our approach.
2. TERMINOLOGY
At it’s simplest, online search advertising has three play-
ers; advertisers who want to advertise a product or service,
publishers that run websites (search engines, news sites, blog
sites), mobile apps and games that display the ads, and ad
networks (like Google AdSense, Bing Ads, Baidu, and Ya-
hoo) that connect advertisers with the publishers. There
are two kinds of publishers: publishers owned and oper-
ated (O&O) by the ad network, e.g., google.com shows ads
from Google’s ad network, and syndicated publishers not
controlled by the ad network, e.g., ask.com is a syndicated
publisher for Google ads.
Cost-per-click (CPC) or Pay-per-click (PPC) is the
dominant charging model for search ads — advertisers pay
the ad network only when their ad is clicked. Ad networks
typically pay syndicated publishers 70% of the revenue gen-
erated by ad clicks on their site. While there are other charg-
ing models (e.g., pay per impression, pay per action) we
focus solely on pay-per-click search ads in this paper since
they dominate online ad revenues and are growing [24].
Click-Spam is a click the advertiser pays for where the
user did not intend to visit the advertiser’s page.
It in-
cludes clicks through dedicated click-spam malware, acci-
dental clicks, clicks where the user was confused or tricked
into clicking, cases where the user clearly intended to go
somewhere else (e.g., a navigational query for YouTube in a
search engine) which is hijacked into an ad click for some-
thing unrelated to the query, and so on.
Syndicated publishers, because of the strong ﬁnancial mo-
tive, have been known to fraudulently generate clicks to in-
ﬂate their paychecks [5]. Note that O&O publishers are
!"#$%&’()*
+,*6()-()*
+,-().&()*
/0*1(#*)(2"(&3*
8 0 * ! 7 9 ( * : % 3 ’ * 5 6 *
40*56*)(2"(&3&*7,&*
A0*B(3")@&*7,&*
;0*?)(&&%=@*
C0*D$%EF&*=@*7,*
M0*+,*NB<*)(2"(&3*
H0*B(,%)(E3*
G0*<=9&*E$%EF*
/I0*1(#*)(2"(&3*
//0*+,-().&()*?79(*
/80*D$%EF&*#"J*
/40*D’(EF="3*)(2"(&3*
/;0*K’7@F&*?79(*:%3’*E=@-()&%=@*56*
/A0*D=@-()&%=@*?%L($*)(2"(&3*
/C0*<=9&*D=@-()&%=@*
Figure 1: Anatomy of an ad click
unlikely to knowingly generate click-spam since the ad net-
work defrauding its own customers (the advertisers) would
generate massive negative PR resulting in advertisers taking
their business elsewhere.
Ad networks focused on their long-term reputation (if
they are caught being complicit in syndicate generated click-
spam) are driven to ﬁlter click-spam and oﬀer discounts to
advertisers to reduce the impact of click-spam.
Anatomy of a ad click. Figure 1 shows the anatomy
of a click. Ad networks provide publishers a library with
which to fetch ads. This may be JavaScript the publisher can
embed into their website or app, or may be server-side code
(e.g., PHP or Java). As shown in step 3, the JavaScript code
(running in the user’s browser) or PHP/Java code (running
in the publisher’s webserver — not shown) contacts the ad
network’s server to fetch a set of ads that it populates the
website/app with. The code identiﬁes the publisher when
contacting the ad network’s server, which logs the request.
This is called an ad impression (step 4). Each ad returned
(step 5) contains a unique identiﬁer that is used for tracking
clicks on that ad.
If the user clicks the ad (step 6), the user’s browser (or
app) makes an HTTP request to the ad network with the
unique identiﬁer for that ad impression (step 7), which logs
the ad click (step 8). The log record contains the unique
identiﬁer, which is used to lookup the ad advertiser that will
be charged (and how much), the publisher that will be paid,
the user that originally fetched the ad (for fraud detection),
and so on. Every single ad click is logged by the ad network.
The HTTP response to the above request redirects the
browser to the advertiser’s webpage (typically using HTTP
302 response code; steps 9–11). The ad network cannot, in
general, track the user’s activity on the advertiser site. An
advertiser can choose to embed JavaScript code provided
by the ad network into certain pages (e.g., payment con-
ﬁrmation page, mailing list subscription page). When (if)
the user visits the marked pages (step 14), the JavaScript
informs the ad network that the user has performed some
action deemed desirable by the advertiser (step 15). This
is called an ad conversion. The ad network uses cookies to
link conversion events back to the unique identiﬁer of the ad
impression and ad click (step 16); the conversion event may
take place hours or days after the original ad click.
The ad network uses the conversion signal (or lack thereof)
to provide bulk discounts to the advertiser as per the smart-
pricing algorithm [6, 8]. The intuition behind smart-pricing
is that if a publisher sends traﬃc that doesn’t lead to de-
sirable actions (like buying, email signups), then the traﬃc
is not useful to the advertiser. The smart-pricing algorithm
computes a penalty score for syndicated publishers. The
lesser the traﬃc converts for that publisher, the higher the
publisher’s penalty score, and the more the discount oﬀered
to all advertisers for clicks on their ads when shown on that
publisher’s site, and thus the less the money paid out to that
publisher.
3. RELATED WORK
Ad networks and click-spam. Little is known about how
ad networks ﬁght click-spam. Commissioned as part of a
lawsuit settlement between advertisers and Google, Tuzhilin
in [29] reports on his external audit of Google’s click-spam
ﬁltering system as of July 2006. The system passively an-
alyzes every ad click from log data. It contains several ﬁl-
ters each tuned to catching a very speciﬁc attack signature.
Viceroi can be implemented as such a ﬁlter in an ad network.
Characterizing Click-spam. There have been several stud-
ies that characterize the nature of click-spam, elaborating on
speciﬁc attacks [1, 2, 20, 21] after they have been detected.
Viceroi diﬀers from these as it ﬂags malicious publishers,
regardless of the attack vectors. There has also been some
work on traﬃc quality provided by purchased traﬃc [28,32].
A broader measurement study ﬁnds that the current gener-
ation of click-spam is generated with a wide variety of bot
and non-bot mechanisms where users are tricked into click-
ing on ads [4]. The study [4] uses bluﬀ ads [10], which is an
active measurement technique. Viceroi on the other hand is
purely passive.
Click-spam detection. Research in click-spam detection
has focused almost exclusively on (early generation) bots.