(
y
u k
,
−
y
u h
,
)
+
)
regularization
            (3) 
u k h D
∈ >
,
,
Finally, the authors define the prediction model yu,k as follows: 
y
u k
,
=
∑
∈
j F
b r
j
u k
,
j
+
T
p
u
(
1
k
Z
∑
∈
w T
k
q
w
+
α
d
( )
p k
)
                (4) 
In the first part of equation 4, the authors use 
∑
∈
j F
b r
j
u k
,
j
to capture 
the impact of explicit features (such as the quality of the tweet and 
the authority of the publisher) on user u’s rating of tweet k, where 
,
u kr
j
is  the  j-th  explicit  feature  computed  from  tweet  k  regarding 
user  u,  F  is  the  set  of  explicit  features  and  bj  is  the  system-wide 
weight  corresponding  to  the  j-th  explicit  feature,  which  is  to  be 
learned  in  the  prediction  model.  The  second  part  of  equation  4 
considers  a  latent  factor  model  (described  in  Appendix  A.1).  In 
∑ to  capture  the  impact  of  words 
brief,  the  authors  use 
T
p
u
q
w
∈
w T
k
contained in tweet k on user u’s rating of the tweet, where pu is the 
low  dimensional  representation  of  user  u  in  the  latent  feature 
space Rd, Tk is the word set contained in tweet k and qw represents 
the low dimensional representation of word w in the latent feature 
space  Rd;  the  authors  use 
to  capture  the  impact  of  the 
p d
T
u
p k
(
)
social relation between user u and the publisher of tweet k on user 
u’s  rating  of  the  tweet,  where  dp(k)  is  the  low  dimensional  repre-
sentation of the publisher of tweet k in the latent feature space Rd. 
In equation 4, Zk is the normalization term defined as the cardinal-
ity of the word set Tk, and  αis a predefined system-wide parame-
ter  that  indicates  the  importance  of  social  relations  relative  to 
words contained in the tweet.  
Using  D  as  the  training  datasets,  by  solving  objective  3,  the  SP 
learns  the  parameters  of  the  tweet  rating  prediction  model:  the 
system-wide weight vector b,  the  latent  factor  for  user  u  denoted 
as pu, the latent factor for each word w denoted as qw and the la-
tent factor for the publisher of tweet k denoted as dp(k). Note  that 
among all parameters to be learned in the prediction model, only 
the  value  of  pu  depends  on  user  u  and  all  other  parameters  are 
global values. To solve objective 3, the authors perform stochastic 
gradient descent (as described in Section 3.3). After the prediction 
model yu,k is learned,  the  SP  estimates  a  user’s  rating  for  a  tweet 
using equation 4. 
3.3  Stochastic Gradient Descent 
Chen et al. [10] adopt stochastic gradient descent to solve objec-
tive 3. For each tuple  in D, the SP computes the descent 
of each parameter as follows and updates the parameters by mov-
ing in the direction of negative gradient:  
∂
ℓ
∂
p
u
ˆ
=  
e
1
k
Z
∑
∈
w T
k
q
w
−
1
h
Z
∑
∈
w T
h
q
w
+
α
(
d
−
d
)
( )
p h
p k
(
)
−
λ
1
p
u
        (5) 
∂
ℓ
∂
q
k
w
=
1
k
Z
ˆ
ep
u
 −
λ
2
q
,k
w
∂
ℓ
∂
q
h
w
= −
1
h
Z
ˆ
ep
u
 −
λ
2
q
h
w
                                (6) 
∂
ℓ
∂
d
p k
(
)
=
ˆ
α
ep
u
 −
λ
3
d
( )
p k
,
∂
ℓ
∂
d
( )
p h
=
ˆ
α
ep
u
 −
λ
3
d
( )
p h
                           (7) 
∂
ℓ
∂
b
j
=
ˆ(
e r
,
u k
j
−
r
,
u h
j
 −
)
λ
4
b
j
                                                            (8) 
where 
ˆ
e
= −
1
1
(
y
u k
,
−
−
y
u h
,
)
1
+
e
                                                          (9) 
k
Here, 
wq  represents the latent factor of word contained in tweet k. 
The algorithm loops over all tuples in D and updates the parame-
ters accordingly. 
3674.  SYSTEM AND THREAT MODEL 
4.1  System Model 
In  pTwitterRec,  we  assume  a  privacy-preserving  Twitter-like  so-
cial network where tweets posted by users are hidden from the SP. 
We assume that  users  install  a  client  application  to  participate  in 
the social network. In the remainder of the paper, we refer to the 
client software installed on user u’s device as user u for simplicity. 
In pTwitterRec, upon registration, each user’s account is protected 
by  default;  that  is,  a  user’s  tweets  are  only  visible  to  the  user’s 
explicitly  authorized  followers.  In  addition,  the  user’s  tweets  are 
hidden  from  the  SP  as  well.  We  assume  that  a  user  encrypts  the 
tweets  using  a  secret  key  (not  known  by  the  SP)  shared  only 
among  the  user’s  authorized  followers  before  posting  them  to 
pTwitterRec.  The  SP  is  responsible  for  storing  encrypted  tweets 
published  by  users  and  delivering  those  tweets  to  their  corres-
ponding  followers.  How  to  construct  pTwitterRec  such  that  it 
meets the abovementioned assumptions is out of the scope of our 
work;  as  described  in  the  related  work,  systems  such  as  FlyBy-
Night  [22]  and  Hummingbird  [12]  can  be  adapted  to  implement 
pTwitterRec.  
For  tweet  recommendations,  to  prevent  the  SP  from  learning  a 
user’s interests, in pTwitterRec, we introduce a semi-trusted third 