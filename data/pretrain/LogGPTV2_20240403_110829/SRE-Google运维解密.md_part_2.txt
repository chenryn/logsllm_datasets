结合自身工作环境进行实践，找出一条适合自己的持续发展之路。
意义，每一个希望提高工作效率、改进工作成果的技术和管理人员都应该认真阅读理解
多问题困扰着项目管理者、产品经理、软件工程师、运维人员。本书从Google所面临
大型互联网应用的部署规模从几千台到几十万台不一，随着软件系统的复杂度提升也呈
维的业务价值、行业价值便也随之而来。运维也可以“高大上”地存在！
进的运维理论与实践。个人坚信这种理论和实践的提升与改变，才是运维人的出路，
才知道它对传统运维的颠覆性。本书的面世，让国内更多的运维人员接触到Google先
从接触Google SRE的概念开始，就感受到它神秘地存在，直到看到英文版的SRE书籍
进其在中国运维行业的落地生根、蓬勃发展。
进其和《互联网应用运维框架及能力模型》（本书译者孙宇聪先生联合撰写）的融合，促
他的原同事们撰写的书。
的问题、价值观、解决方案、体系建设、最佳实践等方面理论结合实际，非常具备指导
度复杂的情况下确保软件的服务质量？如何在确保质量的情况下优化软件选代速度？很
现出越来越庞大的趋势，如何通过少数人力管理好庞大复杂的应用环境？如何在环境极
一王津银，
，“精益运维”发起人；优维科技创始人；开放运维联盟发
起人之一；开放运维联盟应用标准规范组组长、起草人
萧田国，高效运维社区发起人，开放运维联盟联合主席
一莫显峰，Ucloud联合创始人，CTO
赞誉
---
## Page 8
的思想理念给同事们布道。
自从我离开Google这座充满魔力的城堡，我就一直在等这本书面世，我一直在用书中
Google 多年打磨、积累形成的运维实践变成了最热门的行业焦点。对于一个面临日益严
随着IT行业的不断改变，中小型企业的运维实践逐渐和Google 接轨。突然之间，
家针对两栖爬行动物的专题介绍。演讲非常有意思，但是由于演讲的内容和观众的日常
我还记得Google第一次在运维技术论坛上发表的演讲。感觉就像听了一场野生动物专
每个感兴趣的人都应该通读本书，切身尝试书里提到的一些想法。
如何能够持续不断地建设、部署世界级的工程项目，同时保持世界一流的可靠性标准。
指导思想、最佳实践和常见的应用架构模式以及团队建设模式共享出来，揭示了Google
Google SRE团队通过写作本书为整个运维行业做出了巨大的贡献。通过本书，他们将
我希望读者像我一样，通过阅读这本书，能学习到如何更有效地运维自己的产品与平台。
定一个错误预算（容错率），既能保证用户体验又不影响创新和部署的速度。
需要达到这个目标的成本通常远超于所能获得的价值，所以Google会针对每种产品设
与道理是可以触类旁通的。书中提及许多实用的道理，比如，100%的可用性是不现实的，
由于Google的规模很大，许多人可能认为Google的做法无法效仿，但书中描述的原则
峻的可靠性、
工作感觉距离太遥远，因此演讲的效果并不好。
赞誉
可扩展性、
JezHumble，Continuous Delivery和LeanEnterprise书籍的共同作者
，可维护性挑战的行业，这本书真是太及时了！
Prometheus（开源项目）开发者，前Google SRE（2013）
一BjornRabenstein，SoundCloud生产工程团队负责人，
-DavidN.Blank-Edelman，总监，USENIX董事会成员，
以及SREcon大会的共同创始人
Joe Zhu，Zenlayer 创始人
---
## Page 9
Google曾经走过的弯路。
集了Google在实践过程中积累的宝贵经验。希望通过阅读本书，读者能够绕开一
保障每天不断更新的同时保障一流的可靠性就更难了。这本书就像一套完备的菜谱，
开发一个Gmail这样的大型分布式系统已经很难了。如何运营维护这样的一套系统，
造一个可长期维护的系统提供了非常宝贵的实践经验。
我高度建议任何一个想要创建、扩展大规模集成系统的人阅读本书。这本书针对如何构
Google凭借这些实践经验，将Google服务部署到全世界，同时保持世界一流的可靠性。
本书的作者们和大家分享了Google SRE团队的成长经历，包括其中走过的弯路。
的意义，应该从本书开始。
思考过程、团队目标、设计理念以及学到的宝贵课程。如果你想从起源上了解SRE一词
Google是SRE理念的发明者。本书不光介绍了这个职位的技术细节，还包括了其中的
-UrsHolzle，Google基础架构组资深副总裁
-Russ Allbery，Google SRE，安全工程师
RikFarrow，USENIX成员
赞
誉
一些
收
在
---
## Page 10
我希望通过翻译此书，能将这种体系和理念分享给更多的人。期待与大家更深人地探讨
从这种意义上讲，本书体系化地覆盖了运维工作的方方面面，是一本运维行业的教科书。
“魔法系统”，也没有提供任何“奇技淫巧”，有的只是对问题本质发人深省的深入探讨。
困难时的思考过程、所采用的解决方案以及事后总结的经验教训。本书中没有介绍任何
本书的风格亦是如此。书中很多章节用务实的语言记录了Google SRE团队在面临各种
方法造就了Google这个世界级的奇迹。
点一点地提高服务质量。回头看来，SRE其实是一群崇尚工匠主义的人，我们坚信只要
场景。在每周例会时，他们又会讨论如何消除和防范事故发生、优化各种警报策略以及
务实的态度决定了SRE会认真对待运维问题。在设计评审中，他们会认真推演各种灾难
系统可靠性方面并没有什么万能药，有的只是这种极强的务实态度（pragmatic）。这种
的产品一一我们只想看具体的设计架构、实现细节，以及真实的监控图表。SRE在保障
统、最朴素的软件工程方法将其一一解决的。
运维问题在这个平台上似乎都被无限放大了。但是与此同时，Google恰恰又是利用最传
台级别的服务器集群，还是全球一流的网络架构，背后都有SRE的身影。每个小的传统
应用。同时，SRE还负责运维幕后那些全球首届一指的计算基础设施，不管是全球百万
Google SRE全球共计约1000人，负责运维Google的大部分家喻户晓、不可或缺的商业
与交流！
增强自动化功能。在平时工作中，他们则会精心维护团队的各种文档和项目源代码，
与大家分享了！
和理念时非常兴奋一
多得的经典之作。我作为Google SRE曾经的一员，看到本书中提到的那些熟悉的技术
当我在2016年年初听说本书的英文版即将面世时，第一时间就意识到这将是一本不可
不断地解决根源问题，服务质量就一定会得到提升。而SRE正是用这种“日拱一卒”的
一现在终于有机会用一种体系化、结构化的方式将这些知识和技术
译者序
---
## Page 11
才让我踏踏实实地度过了这200多个小时，完成了我人生中最大的一个Project。
这段职业经历是我终生难忘的。而且，我还要感谢我的家人，是他们的耐心陪伴和帮助
回首在Google度过的8年时光，我想感谢我所有的前同事，感谢他们对我的各种帮助，
译者序
2016年8月3日傍晚
孙宇聪
---
## Page 12
这本书由一群有共同目标的Google工程师写就的短文组成。本书的作者们聚集在同一
保持开放的精神，那么我们也能够一起和他们面对IT行业内最尖端的挑战。
很多从业人员都或多或少地受教条主义的限制。如果Google工程师团队能克服这个惯性
复修改，最后定义出一套完整的工具和科技体系的过程。IT行业大多自我封闭，交流过少，
的。更重要的是，我们展示了在建设过程中，Google工程师团队是如何学习、成长、反
在本书中，我们不仅仅展示了Google是如何建设维护其富有传奇色彩的大型计算集群
将SRE的一些思考和实践带给整个行业，以促进交流。
定义了这个行业。一开始，他们显得很神秘，Google公司内的体验和整个行业也格格不
性工程师。我的几个朋友切身参与了这个新职业的创立，用软件工程理念和自动化工具
速发展将我的预言变成了现实。我之前的定义变成了一个具体的词语：SRE，站点可靠
秘色彩中已经永久地迷失了自己，无法前进。但是，这时Google诞生了，Google的高
些评论者对这种观点表示了强烈的反对：“这个行业还远远没有成熟到可以称为一项工
对传统的系统运维理念发出的革命宣言：我们无法按照传统方式运维Google系统，必须
Google 是在一个系统运维工程师行业转型的阶段发展壮大的。Google的发展史就像是
转型实践的人写成的。
DevOps理念的先行者。本书就是由来自公司各个部门，切身参与甚至主导了整个行业
心的商业模式的转变。Google很早就开始实践IT与商业模式的结合，也是向社区推广
Google的成长经历，是计算机行业中数一数二的成功故事，标志着整个社会向IT 为中
入，Google太特殊了！随着时间的推移，公司内外交流逐渐增多。这本书的目标就是
程”。在那时，我甚至对整个运维行业产生了怀疑，认为这个行业在个人英雄主义与神
提出了一种观点：系统运维本质上是人与计算机共同参与的一项系统性工程。当时的一
要思考一种新的模式，但是同时我们也没有时间等待其他人验证和支持我们的理论。
如果用一个词语来描述Google的历史，那就是不断地“扩大规模”（scaling up)。
XXXi
---
## Page 13
XXxii
显示了谦逊的风格，以及极强的凝聚力、领导力。这些文章记录了作者们的希望、担忧
也许只能被模仿，但是却可以启发读者，指引未来。本书作者们表现出了极大的真诚，
它详细记录了Google迈过分水岭时期的全过程。很显然，这些经历没有办法完全复制
础设施的设计和实现。很多年后的今天，IT行业已经天翻地覆，但是本书仍然弥足珍贵：
来，只有USENIXLISA大会论坛以及其他几个专注于操作系统的会议会讨论一些IT基
自省，是一个在IT行业内部并不流行的词语。我们不断重复发明各种系统。很多年以
是简单的资源扩张。仅此一点，这本书就物超所值了。
构放大困难得多。一个公司的成长，意味着整个公司商业模式和工作模式的扩展，而不
重叠的故事组成的，这恰恰说明了扩展一个计算机系统，要比简单按照书本上的标准架
这本书，归根到底，记录了Google 这个公司的成长经历。书中的很多故事都是由相互
幕真是太难得了！
远只是短暂存在的，但是文档化的设计过程却是无价之宝。有机会了解到这些设计的内
件结果、架构设计而言，真实的设计过程、作者本身的思考经历更有价值。实现细节永
没有万能药，没有什么东西能解决一切问题，但是这恰恰是本书的宗旨：相比最后的软
是解决方案中的一个小小组件，用来链接日益庞杂的软件、人和海量的数据。这本书中
精英力量钻研本质问题的公司，而且这些公司精英很多都有工学博士学位。工具永远只
的风气，过于强调平等却忽略领域专家的意见。Google是行业内为数不多的，愿意投入
码拿来主义”（justshowmethecode）。开源软件社区内部正在形成一种“不要问我问题
这本书的成书过程也堪称奇迹。今天，我们能感受到整个行业都在鼓吹厚颜无耻的“代
不足和缺陷。
因为我们第一次有机会将自己的经历、选择和本书陈列的决策逻辑相互对应，从中发现
果多年之后回头再看，这个选择会是正确的吗？”这些问题，恰恰是阅读本书的最大收获
清的挑战，只能带着谦逊的态度远远旁观。在阅读本书的过程中，相信读者一定会产生
Google的历史，也没有参与到具体的决策过程中，无法全面了解当事人所面临的纠缠不
表了整个IT行业内不同个性融合的现状。而我们作为读者，作为观察者，并不了解整个
做A，只有做B才是正确的。”另一些作者会更谨慎，行文更富有哲学性。这其实恰恰代
解决的经历。这和IT行业内的普遍文风截然不同，风格迥异。有些作者会宣称：“不要
作目标、写作风格，以及技术背景，但是他们都尝试着去真诚地描述自己遇到的问题和
并不是严谨的学术研究论文，而是这些人的切身经历。虽然本书的作者们有着不同的工
度分析不同的决策选择，了解他们是如何一起解决公司内部多种利益冲突的。这些文章
间经常能看到软件系统的共同点，以及工作模式上的共通之处。我们经常可以从多个角
个公司旗下，为了同一个目标努力，本身就是一件很特别的事情。在本书的各个章节之
前言
---
## Page 14
作为旁观者和后来人，从前人的经历中学习到最宝贵的知识。
成功与失败的经历。我向这些作者们和编者们的勇气致敬，正是这种坦率，让我们能够
InSearchofCertainty一书作者
Osl0，2016年3月
前言
MarkBurgess
Xxxii
---