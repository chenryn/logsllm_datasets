title:Pinpoint Rowhammer: Suppressing Unwanted Bit Flips on Rowhammer Attacks
author:Sangwoo Ji and
Youngjoo Ko and
Saeyoung Oh and
Jong Kim
Sangwoo Ji
Pohang, South Korea
PI:EMAIL
Saeyoung Oh
Pohang, South Korea
PI:EMAIL
Youngjoo Ko
Pohang, South Korea
PI:EMAIL
Jong Kim
Pohang, South Korea
PI:EMAIL
Pinpoint Rowhammer: Suppressing Unwanted Bit Flips on
Rowhammer Attacks
Pohang University of Science and Technology
Pohang University of Science and Technology
Pohang University of Science and Technology
Pohang University of Science and Technology
ABSTRACT
In recent studies, sophisticated attack vectors that use a Rowham-
mer bug have been developed. These attacks are dangerous, given
that they can corrupt data stored in arbitrary memory rows with-
out accessing them. Successful Rowhammer attacks require to flip
data of the target cell. However, non-target cells are also corrupted
by the attacks. Such unwanted bit flips can lead to unexpected
consequences such as an attack failure and a system crash.
We propose a novel Rowhammer method, namely, Pinpoint
Rowhammer, which flips the target bit while suppressing unwanted
bit flips. The basic idea is the use of an effective data pattern for the
target bit and ineffective data patterns for non-target bits. We evalu-
ate the proposed method by conducting 107,965 attack instances on
four different dynamic random-access memory (DRAM) modules.
The proposed method increases the attack success rate from 28.9%
to 72.4%, when compared with the state-of-the-art method (double-
sided Rowhammer). In addition, the proposed method suppresses
99.7% of the unwanted vulnerable cells.
CCS CONCEPTS
• Security and privacy → Hardware attacks and countermea-
sures; Security in hardware; Hardware reverse engineering.
KEYWORDS
Rowhammer, hardware security, memory vulnerability
ACM Reference Format:
Sangwoo Ji, Youngjoo Ko, Saeyoung Oh, and Jong Kim. 2019. Pinpoint
Rowhammer: Suppressing Unwanted Bit Flips on Rowhammer Attacks. In
ACM Asia Conference on Computer and Communications Security (AsiaCCS
’19), July 9–12, 2019, Auckland, New Zealand. ACM, New York, NY, USA,
12 pages. https://doi.org/10.1145/3321705.3329811
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
AsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand
© 2019 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-6752-3/19/07...$15.00
https://doi.org/10.1145/3321705.3329811
1 INTRODUCTION
Computer hardware is assumed to be trustworthy in many software-
based security mechanisms. However, numerous hardware security
bugs have been reported. Nowadays, the Rowhammer bug has
attracted significant attention, as an attacker can change the data
stored in dynamic random-access memory (DRAM). Rowhammer
breaks the trustworthiness assumption of hardware by directly
corrupting the memory without any software vulnerability. The
attacker using Rowhammer only requires the reading or writing of
neighboring rows of a victim row. After Kim et al. [13] demonstrated
the prevalence of the Rowhammer bug on DDR3 memory modules,
several sophisticated attacks that exploit Rowhammer have been
introduced. For example, Rowhammer is used to escalate privileges
by corrupting a page table entry (PTE) [8, 20, 25, 27], to conduct
fault attacks on cryptographic systems [2, 19], and to bypass Linux
sudo authentication by corrupting instruction sequences [7].
Most Rowhammer attacks use a two-step strategy: scan and
reproduce. In the scan phase, an attacker scans a memory region
for a vulnerable cell. The vulnerable cell can be exploited if the bit
position of the cell matches the attack requirements. For example,
in a PTE corruption attack [20], the bit that represents the physical
page number (from the 12th–31st bit) should be flipped. In the
reproduction phase, the attacker repetitively conducts Rowhammer
attacks to the same row that contains the target cell, to induce that
bit flip again. This strategy is feasible, given that bit flips caused by
Rowhammer are reproducible [13, 27].
However, the Rowhammer attacks fail when unwanted bit flips
occur. As Rowhammer affects the entire row that contains the
target cell, the data stored in other cells are also flipped by the
attack. Bit flips of the non-target cells are referred to as unwanted
bit flips. Unwanted bit flips corrupt a portion of the page belonging
to a victim or another process, which should not be modified. The
corruption may incur unexpected results such as an attack failure
and a system crash.
In this paper, we identify two causes of unwanted bit flips: incom-
plete scanning and a victim row that contains multiple vulnerable
cells. First, detecting all of the vulnerable cells in memory rows
is almost impossible. One vulnerable cell is revealed by a single
Rowhammer attempt, but another vulnerable cell is revealed after
several attack attempts. Thus, it is highly probable that the scan
phase does not identify several vulnerable cells, which are prob-
lematic in the reproduction phase. When an attacker repeats the
Session 7: Hardware and SystemsAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand549Rowhammer attack, vulnerable cells that are not detected during
the scan phase may be flipped. These unwanted bit flips are not
expected by the attacker. Second, the scan phase may detect a row
that contains multiple vulnerable cells. If a row has multiple vulner-
able cells, the repetition of the Rowhammer attack flips the target
bit and additional bits. Thus, the attacker cannot use that partic-
ular row as a victim row because unwanted bit flips from other
vulnerable cells are inevitable.
We propose a novel Rowhammer method, namely, Pinpoint
Rowhammer, which flips the target bit while suppressing unwanted
bit flips. The method is based on the observation that the induction
of a bit flip is related to the data of the neighboring rows (data
pattern). Moreover, each vulnerable cell has its own set of effec-
tive data patterns which induce the bit flip, whereas other patterns
are ineffective at flipping the bit. Pinpoint Rowhammer applies
the effective data pattern to the target bit and the ineffective data
patterns to non-target bits. However, as mentioned before, the de-
termination of the effectiveness of a pattern is not simple, given
that Rowhammer does not consistently flip vulnerable cells. If the
scan phase fails to detect a vulnerable cell, an effective pattern is
misclassified as ineffective to the cell. Thus, Rowhammer is con-
ducted with the false ineffective pattern, and it will not suppress
unwanted bit flips. To solve this problem, the neighboring rows are
alternately overwritten with other ineffective patterns during the
attack, denoted as an alternating pattern. As a result, the proposed
method suppresses unwanted bit flips by reducing the effect of the
false ineffective patterns.
We evaluate the performance of Pinpoint Rowhammer experi-
mentally using the unwanted flip suppression rate and attack suc-
cess rate. All the experiments are carried out using DDR3 chips
from three DRAM manufacturers. We conduct a total of 107,965
Rowhammer attack instances. To measure the unwanted flip sup-
pression rate, we count the number of vulnerable cells suppressed
by Pinpoint Rowhammer. Moreover, we measure the attack suc-
cess rate in two different attack scenarios. In the first scenario, the
scan phase detects a row containing a single vulnerable cell which
is used as the target cell. The proposed method is expected to sup-
press the undetected vulnerable cells during the reproduction phase.
In the second scenario, the scan phase detects a row that contains
multiple vulnerable cells including the target cell. Thus, the pro-
posed method is expected to suppress non-target vulnerable cells
and undetected vulnerable cells. In all the experiments, Pinpoint
Rowhammer demonstrates 99.7% unwanted flip suppression rate.
Moreover, the average attack success rate of the method is 71.6%,
which is greater than the attack success rate of the state-of-the-art
Rowhammer method by factors of 2 and 6, depending on the attack
scenario.
This paper makes the following contributions:
• We analyze the effects of the unwanted bit flips on the ex-
isting attacks and identify two causes of the unwanted bit
flips.
• We propose a novel data pattern (i.e., the alternating pattern)
to suppress the unwanted bit flips using the relationship
between the bit flips and data patterns.
Figure 1: DRAM internal structure
• We propose Pinpoint Rowhammer which induces the target
bit flip without inducing unwanted bit flips. Moreover, we
evaluate the proposed method using commodity DRAMs.
2 BACKGROUND
2.1 DRAM Architecture
DRAM has a hierarchical structure (Figure 1). A channel physi-
cally connects a memory controller to dual inline memory mod-
ules (DIMMs). A DIMM contains DRAM chips on one side or both
sides. Each side of a DIMM is termed a rank. A rank consists of
eight (DDR3) or sixteen (DDR4) banks, and each bank has two-
dimensional (2D) arrays of cells. A cell is the smallest unit of the
DRAM architecture, and a cell consists of a capacitor and a transis-
tor.
A cell represents a logical bit using its capacitor. The capacitor
is either charged or uncharged with electrons. Based on the con-
figuration of the manufacturer, the charged state of the capacitor
represents the logical value 1 (true-cell) or logical value 0 (anti-
cell) [16]. Given that the charged electrons are subject to leakage
over time, data represented by the cell is changed when the voltage
of the cell decreases below the threshold. Hence, DRAM periodi-
cally recharges cells to maintain the charged state of the cells. To
recharge the cells, DRAM internally reads data from a row and
re-writes the data to the same row. The procedure is termed the
refresh of DRAM. The default refresh interval is 64 ms in DDR3 and
DDR4 DRAMs.
2.2 Rowhammer Bug
Kim et al. revealed that most commodity DDR3 DRAM modules
are vulnerable to disturbance errors [13]. They identified the root
cause of disturbance errors as the repeated toggling of the same
row. They repeatedly accessed (hammered) the same row to induce
disturbance errors. A rapid voltage leak was then observed in cells
in the neighboring rows because of electrical interference such as
electromagnetic coupling, conductive bridges, and hot-carrier injec-
tion [13]. When the voltage of a cell decreases below the threshold
prior to the DRAM refresh, the charged cell is changed to the un-
charged cell. Therefore, a logical bit of the cell is also changed (i.e, 1
DIMMchipbankrowi+1column (bitline)rowirowi-1(wordline)cell      cell       cell      cellcell      cell       cell      cellcell      cell       cell      cell… … Session 7: Hardware and SystemsAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand550→ 0. In some systems, 0 → 1). The change is referred to as a bit flip,
and the bug is referred to as a Rowhammer bug. In Figure 1, the
hammering of rowi electrically interferes with rowi+1 and rowi−1;
thus, the bits of rowi+1 and rowi−1 are flipped. In the example, the
hammered row (rowi) is referred to as an aggressor row.
The Rowhammer bug has the following two characteristics. First,
bit flips are reproducible [13, 27]. When the same row is hammered,
the same bits tend to be flipped. Second, Rowhammer with certain
data patterns tends to induce more bit flips than that with other
data patterns. Previous work revealed that the RowStripe [13] and
killer [14] patterns cause more bit flips.
2.3 Rowhammer Attacks
Rowhammer Methods. Many researchers have developed effec-
tive Rowhammer methods. Kim et al. [13] repeatedly accessed a row
to induce bit flips on neighboring rows. As the method hammers
one row, it is referred to as single-sided Rowhammer. Since there
are two neighboring rows that can affect the same row, Seaborn
and Dullien [20] proposed double-sided Rowhammer which ham-
mers the two rows. In Figure 1, rowi+1 and rowi−1 are hammered.
Thus, the sandwiched row (rowi) is affected by both of the upper
and lower rows, and the bits of rowi are flipped. For convenience
sake, rowi+1, rowi, and rowi−1 of double-sided Rowhammer are
referred to as the upper aggressor row, victim row, and lower ag-
gressor row, respectively. As double-sided Rowhammer induces
more bit flips than others, it is the state-of-the-art Rowhammer
method. Hence, most recent work used the method to perform
Rowhammer [19, 20, 25, 27].
Since the locations of rows are determined by their physical ad-
dresses, attackers require additional information about the physical
address space to conduct double-sided Rowhammer. In previous
work, hugepage [19, 25] or the reverse engineered mapping algo-
rithm between physical addresses and DRAM location [27] were
used to conduct double-sided Rowhammer.
Attack Vectors. Seaborn and Dullien [20] proposed a PTE cor-
ruption attack to escalate privileges. To obtain the read and write
permissions to an arbitrary page, the attack requires the flipping
of a bit related to permissions or the physical page number of the