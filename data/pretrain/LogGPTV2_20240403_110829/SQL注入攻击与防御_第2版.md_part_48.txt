---
## Page 242
SQL注入攻击与防御（第2版）
s./sqlninja -m d
Sqlninja rel.0.2.6
Parsing sqlninja.conf..
[+]
Target is:192.168.0.6:80
+
Starting dnstunnel mode..
[+]Use “exit" to be dropped back to your shell.
2k3-s4p5odministrator
dnstunnel>whoam
dnstunnel>
图5-16执行 Sqlninja 并通过DNS 提取用户名
Sqlninja还具有ICMP通道功能，该功能也依赖于上传的助手程序来创建运载返回数据的
ICMP报文。
5.6.6 Squeeza
下面介绍最后一款用于自动SQL盲注利用的工具—Squceza。它是一款命令行工具，支
持使用多种方法来从SQLServer数据库中提取信息。它专门突出了DNS通道，并向其添加了
一个可靠层。
●URL: www.sensepost.com/rescarch/squeeza。
●要求：Ruby、用于DNS通道的tcpdump(Linux/Mac)、针对任何域的通过验证的DNS
服务器。
·场景：通用错误页面，受控输出：通用错误页面，非受控输出：无错误，全盲注。
·支持的数据库：SQLServer。
·方法：基于时间的逐位推断：非主流通道一DNS。
Squeeza 通常采用一种稍微不同的 SQL注入方法。它将注入划分成数据创建（例如，命令
执行、来自数据库文件系统的文件或SQL查询）和数据提取（例如，使用标准错误、时间推断和
DNS)。这样攻击者便可以更加自由地进行混合与匹配：命令执行使用时间作为返回通道或者
通过DNS进行文件复制。为简洁起见，我们只关注联合使用DNS提取通道和数据来生成命令
执行的方法。
Squeeza的DNS通道完全在T-SQL中处理，这意味着不需要特权级数据库访问（如果存在
可用的特权访问，就可以加快提取速度）。很明显，通过执行命令产生数据和复制文件时需要
特权访间。面对不可预测的UDPDNS包，Squceza确保每次尝试都稳定可靠。它包含一个可
保证所有数据均能到达的传输层，另外还能处理很长的字段（最大为8000字节），并且可以提取
二进制数据。
可以将设置永久保存在配置文件中。每次设置需要的最少信息包括Web服务器（主机）、易
受攻击页面的路径(URL)、任何GET或POST参数（请求字符串)以及请求是GET还是POST(方
法)。在查询字符串中，使用X_X_X_X_X_X标记来定位放置注入字符串的位置。图5-17
是Squceza的一幅截图，它通过DNS返回了一个目录清单。
228
---
## Page 243
第5章SQL盲注利用
c）(mor
20 thg cheezo vo.3
ost.com2008
0-s0dirc\
Dinectoryof c:1
1007/02/12
37:22 PM
07,
/02/12
-DTR
ond Settings
图5-17返回—个目录清单的Squeeza
5.7本章小结
能否理解并利用SQL盲注是区分一般攻击者和专业攻击者的一个标准。面对严密禁用详
细错误消息的防御，大多数新手会转向下一目标。但攻破SQL盲注漏洞并非绝无可能，我们
可借助很多技术。它们允许攻击者利用时间、响应和非主流通道（比如DNS）来提取数据。以SQL
查询方式提问一个返回TRUE或FALSE的简单问题并重复进行上千次，数据库王国的大门便
会向我们散开。
大量的漏洞可用。要明确什么时候应选择基于响应面非时间的利用和什么时候使用重量级的非
主流通道工具，这些细节可节省不少时间。考虑清楚大多数SQL盲注漏洞的自动化程度后，
不管是新手还是专家，都会有大量的工具可用。它们中有些是图形化界面，有些是命令行，它
们能支持多种多样的数据库。
有了SQL注入和SQL盲注的基础知识之后，现在转向进一步利用漏洞：识别并利用一个
不错的注入点之后，接下来做什么呢？能否进一步利用底层操作系统？第6章将揭晓答案！
5.8快速解决方案
1.寻找并确认SQL盲注
·无效数据将返回通用错误页面而非详细错误，这时可通过包含副作用（比如时间延迟）
来确认SQL注入，还可以拆分与平衡参数。如果数字字段为5，就提交3+2或6-1；
如果字符串参数中包含“MadBod”，就提交'Madll'Bod”。
·请思考漏洞的属性：能否强制产生错误以及能否控制无错误页面的内容？
·可通过在SQL中提问某一位是1还是0来推断单个信息位，有很多推断技术可用于实
现该目标。
229
---
## Page 244
SQL注入攻击与防御（第2版）
2.使用基于时间的技术
·可使用逐位方法或二分搜索方法提取数据并利用延迟表示数据的值，可使用明确的
SLEEPO类型函数或运行时间很长的查询来引入延迟。
·通常在 SQLServer和Oracle上采用以时间作为推断的方法，不过这在MySQL上不太
可靠，该机制很可能会失效。
·使用时间作为推断方法在本质上是不可靠的，但却可以通过增加超时或借助其他技巧
来进行改进。
3.使用基于响应的技术
·可使用逐位方法或二分搜索方法提取数据并利用响应内容表示数据的值。一般来说，
现有查询中都包含一条插入子句，它能够根据推断的值来保持查询不变或返回空结果。
·基于响应的技术可成功用于多种多样的数据库。
·某些情况下，一个请求可返回多个信息位。
4.使用非主流通道
带外通信的优点是：可以以块而非位的方式来提取数据，并且在速度上有明显改进。
·最常用的通道是DNS。攻击者说服数据库执行一次名称查找，该查找包含一个由攻击
者控制的域名并在域名前添加了一些要提取的数据。当请求到达DNS名称服务器后，
攻击者就可以查看数据。其他通道还包括HTTP和SMTP。
·不同数据库支持不同的非主流通道，支持非主流通道的工具的数量明显要比支持推断
技术的少。
5.自动利用SQL盲注
·Absinthe的威力在于支持数据库映射，并且能利用基于错误和响应的推断利用来对很
多流行的数据库（不管是商业的还是开源的）进行检索。方便的GUI为攻击者带来了很
好的体验，但缺少特征签名支持限制了其效能。
·BSQLHacker是另一款图形化工具，它使用基于时间及响应的推断技术和标准错误来
从所提问的数据库中提取数据。虽然它仍处于测试阶段，不是很稳定，但该工具前景
很好且提供了很多欺诈机会。
·SQLBrute是一款命令行工具，它针对希望使用基于时间或响应的推断来利用某个固定
漏润的用户。
·Sqlmap将漏洞的发现和利用结合在一款强大的工具中，它既支持基于时间的推断方法，
也支持基于响应的推断方法，另外还支持ICMP通道方法。该工具的成长速度很快，
开发也很活跌。
·Sqlninja有很多特性，它支持使用基于DNS的非主流通道来执行远程命令。首先上传
个自定义的二进制封装器（wrapper)，然后通过上传的封装器来执行命令。封装器捕
获所有来自命令的输出并初始化一个DNS请求序列，请求中包含了编码后的输出。
230
---
## Page 245
第5章SQL盲注利用
·Squceza则从另一个视角审视SQL注入，它将数据创建与数据提取区分开来。该命令
行工具可使用基于时间的推断、标准错误或DNS来提取时间。DNS通道完全借助
T-SQL来执行，因而不需要上传二进制封装器。
5.9常见问题解答
问题：我在提交单引号时得到一个错误，这是否是SQL盲注漏洞？
解答：不能完全确定。有可能是SQL盲注漏洞，也有可能是因为应用在接触数据库之前
检测到了非法输入而打印出的一个错误。但这是第一个信号，在看到这种情况之后，
可以使用拆分与平衡技术，或者使用引起副作用的查询来进行确认。
问题：我已经得到了一个Oracle漏洞，是否可使用时间作为推断技术？
解答：可以。可以将DBMS_PIPE.RECIEVE_MESSAGE函数嵌入SQL语句，或者将其他
类似的功能函数嵌入SQL语句。
问题：是否有工具使用HTTP或SMTP作为渗漏通道？
解答：Pangolin支持HTTP渗漏到一个指定的Web服务器，可以通过Web服务器的日志
来获取数据，也可以编写一个简单的收集数据的应用程序来获取数据。为了将SMTP
作为渗漏通道使用，SMTP要求非常特殊的条件。该工具的设计者可能还没有注意
到这方面的需求。
问题：使用DNS作为渗漏通道意味着我必须拥有自己的域名和名称服务器吗？
解答：是的，但并不很贵。一个月花费几美元就可以得到一个您所需要的虚拟服务器和域
名。一旦尝到它们带来的甜头后，您就会发现相比DNS传送数据的便利，几美元
的花费实在是微不足道。
231
---
## Page 247
第6章利用操作系统
本章目标
·访问文件系统
·执行操作系统命令
巩固访问
6.1概述
第1章的概述中提到过一个概念一利用数据库中的功能访问操作系统的部分功能。大多
数数据库均带有丰富的数据库编程功能，包括与数据库进行交互的接口以及用于扩展数据库的
用户自定义功能。
某些情况下（比如，对于Microsoft SQL Server和Oracle来说），该功能为安全研究人员寻找
这两种数据库服务器中的bug提供了很好的平台。此外，还可以将该功能作为 SQL注入的利
用因素，包括有用的因素（读写文件）、有趣和无用的因素（让数据库服务器“讲话”）
本章我们将探讨如何访问文件系统以执行有效的任务（比如读取数据和上传文件)。我们还
将探讨在底层操作系统上执行各种命令的技术，攻击者可使用它们扩展数据库的可达区域并在
更广范围内发动攻击。
在开始之前，我们先了解一下人们为什么如此热衷于研究这种利用技术。当然，从表面看，
答案只有一个：因为它确实存在。抛开这种陈腐的看法不谈，还有几个原因可以说明人们为什
么希望使用SQL注入攻击主机。
例如，攻击主机有可能使攻击者扩展他们到达的区域。这意味着单个应用受到的影响可以
扩展到数据库服务器附近的其他目标主机。这种将目标数据库服务器用作中枢主机的能力具有
非常好的前景，因为数据库服务器习惯深藏于网络中，而这种网络通常是一种“目标丰富”的
环境。
使用SQL注入攻击入侵底层主机之所以很有吸引力还有一个原因：它为攻击者提供了一
种罕见的机会来溜进传统的非验证攻击和验证攻击的分界线缺口。工作繁重的系统管理员和数
据库管理员通常优先考虑为那些可被匿名用户利用的漏洞打补丁。此外，管理员有时会将要求
使用验证用户的利用放在从属位置上，而将更多关注放在那些更紧急的工作上。攻击者通过有
效利用SQL注入bug来将其角色从未通过验证的匿名用户转换成应用程序用来连接数据库的
已验证用户。我们将在本章和第7章分析这些情况。
---
## Page 248
SQL注入攻击与防御（第2版
工具与陷阱
提升权限的必要性
我们在第4章讨论过借助SQL注入攻击来提升权限时可以使用的方法，许多试图
影响底层操作系统的攻击都要求SQL用户使用提升后的权限来运行。在早期，很少有
人理解最小权限原理，所有应用都使用究全的db-sysadmin权限来连接后台数据库，因
而当时没必要进行权限提升，出于这个原因，大多数自动SQL注入工具包均提供了识
别当前用户权限级别的能力，并且包含多种方法来帮助使用者从标准数据库用户提升为
数据库超级用户，
6.2访问文件系统
访问运行DBMS的主机上的文件系统为潜在攻击者带来了希望。有些情况下，这是攻击
操作系统（例如，寻找保存在机器上的证书）的前兆：而有些情况下，它只是在尝试避开数据库
的验证（例如，MySQL习惯以ASCII文本格式保存数据库文件，因面读文件攻击可以在未达到
DBMS验证级别的情况下读取数据库的内容)。
6.2.1读文件
在运行DBMS的主机上读取任意文件的能力为富有想象力的攻击者提供了很多有题的机
会。“读取什么文件？”是个古老的问题，攻击者长时间以来一直都在问这个问题。很明显，
该问题的答案在很大程度上取决于攻击者的目标。有时攻击者的目标是从主机上窃取文档或二
进制代码：有时攻击者可能希望找到某种类型的证书以便进一步实施攻击。不管目标是什么，
攻击者都希望能够读取ASCII文本和二进制文件。
接下来自然要面对的问题是：攻击者怎样才能查看这些文件（假设能强迫数据库读取文
件）？本章将研究该问题的答案，实际上我们在第4章和第5章已经介绍过这些方法。简单地
说，本节的目标是理解攻击者如何将目标文件系统的内容看作SQL查询的一部分。实际上，取
出数据是另一个要解决的问题。
1. MySQL
MySQL提供了一种完全被滥用的功能，该功能允许使用LOADDATAINFILE和LOAD
FILE命令将文本文件读到数据库中。依据最新的MySQL参考手册，“LOADDATAINFILE语
句以非常快的速度从文本文件中读取一行数据至表中。文件名必须是字符串字面值。”
我们先研究一下LOADDATAINFILE命令的使用方法，因为接下来要用到它。
先创建一个简单的文本文件，名为users.txt:
cat users.txt
Sumit Siddharth sumit,siddharthefakedomain.com 1
Dave Hartley PI:EMAIL,uk 1
Rodrigo Marcos PI:EMAIL 1
234
---
## Page 249