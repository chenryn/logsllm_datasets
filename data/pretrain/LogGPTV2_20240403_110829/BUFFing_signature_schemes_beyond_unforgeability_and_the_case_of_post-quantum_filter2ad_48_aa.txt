title:BUFFing signature schemes beyond unforgeability and the case of post-quantum
signatures
author:Cas Cremers and
Samed D&quot;uzl&quot;u and
Rune Fiedler and
Marc Fischlin and
Christian Janson
2021 IEEE Symposium on Security and Privacy (SP)
BUFFing signature schemes beyond unforgeability
and the case of post-quantum signatures
Cas Cremers∗, Samed Düzlü†, Rune Fiedler‡, Marc Fischlin‡, and Christian Janson‡
∗CISPA Helmholtz Center for Information Security, Germany
‡Cryptoplexity, Technische Universität Darmstadt, Germany
†QPC, Technische Universität Darmstadt, Germany
3
9
0
0
0
.
1
2
0
2
.
1
0
0
0
4
P
S
/
9
0
1
1
.
0
1
:
I
O
D
|
E
E
E
I
1
2
0
2
©
0
0
.
1
3
$
/
1
2
/
5
-
4
3
9
8
-
1
8
2
7
-
1
-
8
7
9
|
)
P
S
(
y
c
a
v
i
r
P
d
n
a
y
t
i
r
u
c
e
S
n
o
m
u
i
s
o
p
m
y
S
E
E
E
I
1
2
0
2
Abstract—Modern digital signature schemes can provide more
guarantees than the standard notion of (strong) unforgeability,
such as offering security even in the presence of maliciously
generated keys, or requiring to know a message to produce
a signature for it. The use of signature schemes that lack
these properties has previously enabled attacks on real-world
protocols. In this work we revisit several of these notions beyond
unforgeability, establish relations among them, provide the ﬁrst
formal deﬁnition of non re-signability, and a transformation that
can provide these properties for a given signature scheme in a
provable and efﬁcient way.
Our results are not only relevant for established schemes:
for example, the ongoing NIST PQC competition towards stan-
dardizing post-quantum signature schemes has six ﬁnalists in its
third round. We perform an in-depth analysis of the candidates
with respect to their security properties beyond unforgeability.
We show that many of them do not yet offer these stronger
guarantees, which implies that the security guarantees of these
post-quantum schemes are not strictly stronger than, but instead
incomparable to, classical signature schemes. We show how
applying our transformation would efﬁciently solve this, paving
the way for the standardized schemes to provide these additional
guarantees and thereby making them harder to misuse.
I. INTRODUCTION
For digital signature schemes, there are two classical security
notions: EUF-CMA, existential unforgeability [1], and the
stronger notion SUF-CMA, strong existential unforgeability.
These security notions guarantee that signatures cannot be
forged under the given public key. However, there is more
to be said about the security properties of signatures beyond
unforgeability: for example, the impact of maliciously generated
keys, the interdependence of keys, or whether one needs to
know a message to be able to produce a signature for it. In [2],
[3], [4] it was shown that some classical signature schemes
provide better guarantees than others in this respect.
We highlight three main properties beyond unforgeability:
The ﬁrst is exclusive ownership [2] (which generalizes
earlier notions of Duplicate-Signature Key Selection (DSKS)
attacks [5], [6]): the property that a signature only veriﬁes
under a single public key. For example, an early version of
Let’s Encrypt’s ACME protocol [7], [8] was vulnerable to
an attack because the used signature scheme (RSA) did not
provide this property. The protocol’s goal was to act as an
automatic certiﬁcate authority: to obtain evidence that a key
owner has admin access to a website, upon which it will sign
a certiﬁcate for the website and the signature veriﬁcation key.
The evidence consisted of, e.g., placing a signed challenge in
a privileged position on the website or DNS records. While
RSA signatures provide unforgeability, they allow constructing
another key pair under which a given signature veriﬁes. The
attack [9], [10] “hijacks” an existing signed challenge that
is still present on a website, constructs a new key pair under
whose public key the existing signature veriﬁes, and then claims
ownership. This causes the CA to produce a valid certiﬁcate for
the attacker on the target website. In [3] an attack was found
on the X509-Mutual authentication/WS-Security protocol that
also exploits generating a new key pair for a given signature.
The second is message-bound signatures (a.k.a. non-
colliding signatures): the property that a signature is only
valid for a unique message. Signature schemes such as DSA
and ECDSA do not provide this property. A possible cause can
be the presence of weak keys that verify multiple or even all
messages. The absence of this property can lead to problems in
protocols that depend on uniqueness properties in the presence
of adversarially chosen keys.
The third property is non re-signability [3] meaning that
one cannot produce a signature under another key given a
signature for some unknown message m. One might expect
that to produce another valid signature on a message m, the
signer needs to know m. However, this is not the case for,
e.g., RSA signatures, where given a signature on m, another
signature can be produced even without knowing m. In [3]
an attack was found on the DRKey/OPT protocols for secure
routing (intended for the SCION architecture) that exploits this
possibility. The protocols aim to provide partial path integrity
guarantees even in the presence of malicious intermediate
nodes by having each intermediate node sign a symmetric
key that they will share with the endpoint. Malicious nodes
could violate the intended path integrity guarantees by claiming
that a signature from an honest node on the path in fact
came from another (colluding) malicious node, thereby making
the endpoints believe that the path did not go through this
honest node. This property was ﬁrst proposed and deﬁned in
the symbolic model in [3]. However, until now, no formal
cryptographic deﬁnition was proposed.
While there are classical signature schemes that violate each
of the above properties, this need not be the case: It was proven
in [4] that the LibSodium variant of the Ed25519 signature
scheme satisﬁes the ﬁrst two properties, and the third follows
by construction. The real-world implication is that depending
on which signature scheme is used, the security protocols above
© 2021, Cas Cremers. Under license to IEEE.
DOI 10.1109/SP40001.2021.00093
1696
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:13:27 UTC from IEEE Xplore.  Restrictions apply. 
could either be secure or insecure. From the perspective of
the design of a signature scheme, it is therefore prudent to
aim for the strongest guarantees from the primitive, such that
the expectations of implementers are not accidentally (and
needlessly) violated.
In this work, we revisit the security properties that go beyond
unforgeability of signature schemes and provide new theoretical
results, including new formal deﬁnitions, establishing relations
between them, and providing a simple generic transformation
that provably achieves them. Our transformation is highly
efﬁcient and only increases the size of the signature moderately
by a single hash digest.
Our work is partly driven by the ongoing NIST competition
for post-quantum secure digital signature schemes. The schemes
that have made it to round 3 are designed to be resilient against
much stronger (quantum) adversaries than previous schemes,
and one might therefore expect them to provide strictly stronger
security properties than existing signature schemes.
Our analysis of the round 3 candidates with respect to these
properties reveals that these schemes do not necessarily provide
modern security properties beyond unforgeability. For example,
we ﬁnd that while CRYSTALS-Dilithium provides all three
properties, exclusive ownership, message-bound signatures, and
non re-signability, FALCON and Rainbow do not. Remarkably,
this implies that e.g. Libsodium’s Ed25519 provides security
properties that some post-quantum candidates do not. Con-
cretely, this would mean that implementing the previously
mentioned protocols with FALCON or Rainbow would enable
(classical) protocol attacks that would have been impossible
with Libsodium’s Ed25519. Fortunately, our transformation can
be applied to the vulnerable schemes to remedy this situation.
In many ways, the situation for the NIST competition is
similar to hash functions and length extension attacks in the
context of the NIST SHA-3 competition. While length extension
attacks had been known for years, they were not excluded by the
standard hash function deﬁnitions. As a result, older schemes
were not considered in this light, leading to attacks on e.g.
Flickr [11] and TLS, IKE, and SSH [12]. In the ﬁnal SHA-3
standard, only schemes were chosen that provide resilience
against length extension attacks, even though the standard hash
function deﬁnition does not require it:
“The SHA-3 functions are also designed to resist
other attacks, such as length-extension attacks, that
would be resisted by a random function of the same
output length, in general providing the same security
strength as a random function, up to the output length.”
[13, p. 24]
Similarly, we would expect the ﬁnal NIST selections for
the post-quantum signature schemes to provide the strongest
modern guarantees, such as offering built-in protection against
maliciously generated keys, instead of leaving this up to the
protocols that use the schemes. Our work therefore also ﬁts
into the wider positive trend of misuse-resistance: creating
cryptographic primitives that are hard to misuse.
Our main contributions are:
• We provide new theoretical results for three security
properties of signature schemes beyond unforgeability:
exclusive ownership (M-S-UEO, and weaker variants
such as S-CEO and S-DEO), message-bound signatures
(MBS), and non re-signability (NR). Notably, we provide
the ﬁrst cryptographic deﬁnition for non re-signability,
and construct a generic BUFF (Beyond UnForgeability
Features) transformation that provably achieves all three
properties. Our results are generic and apply equally to
the classical and the post-quantum setting.
• We apply our theory in practice and perform the ﬁrst
analysis of the round 3 NIST candidates for post-quantum
secure signature schemes w.r.t. these properties. We give
an overview of our results in Table I. We show that
the security of several round 3 candidates is not strictly
stronger than that of existing classical schemes: schemes
like LibSodium Ed25519 offer security guarantees that
FALCON and Rainbow do not. However, our simple
transformation can remedy this situation: we show the
minimal impact of applying the BUFF transformation to
the round 3 candidates, which shows that it is practical
to provably offer these properties.
The remainder of this paper is structured as follows. In
Section II we introduce notation and further preliminaries.
Section III overviews previous work on security properties of
signatures beyond unforgeability. In Section IV we present our
main theoretical results. In Section V we analyze the ﬁnalists
to the NIST competition for post-quantum signature schemes
w.r.t. the three security properties beyond unforgeability. We
conclude in Section VI.
II. PRELIMINARIES
A. Notation
We denote by λ ∈ N the security parameter (usually written
in unary as 1λ) that is implicitly given to all algorithms. A
function µ : N → R is called negligible if, for every constant
c ≥ 0, there exists λc ≥ 0 such that for all λ ≥ λc we have
that µ(λ) ≤ λ−c. Furthermore, we assume that all algorithms
(unless speciﬁed otherwise) run in probabilistic polynomial-
time which we abbreviate by PPT. Note that, as usual, we
state the security notions and assumptions asymptotically,
with respect
to polynomial-time adversary and negligible
functions. It is understood that, when analyzing actual schemes
with concrete parameters, these terms must be interpreted
accordingly as “reasonable” run time and success probabilities
in light of the parameters.
We write a bit as b ∈ {0, 1} and its inversion simply as
b. Furthermore, we denote a (bit) string as s ∈ {0, 1}∗ and
by |s| we denote its binary length. By s(cid:107)t we denote the
concatenation of two strings s and t but we usually assume
that the encoding is such that one can recover s and t from
s(cid:107)t, e.g., when s is of ﬁxed length. A tuple (s, t) of strings
is implicitly encoded as a single bit string if required, e.g.,
when processing the tuple by a hash algorithm. We assume
that such encodings are one-to-one but usually omit the details.
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:13:27 UTC from IEEE Xplore.  Restrictions apply. 
21697
Table I: Several NIST PQ Signature scheme Round 3 candidates and alternate ones lack desirable security properties beyond
unforgeability. We denote by  a proof of the property (under rational assumptions), by  an attack against it, and by • that
we currently have no proof based on standard assumptions. We provide an overview of the detailed analyses of the schemes in
their versions as submitted to Round 3 in the table. Note that the signature schemes that do not have the M-S-UEO property,
they do also not achieve the weaker variants S-CEO and S-DEO.
The “Conclusion” column summarizes for each scheme:  indicates all properties hold. For schemes with  or •, our generic