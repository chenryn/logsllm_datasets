User: Good morning, I'm playing with launch daemons on my Mac running OSX El Capitan.  I've made the script in Python that I would like to run when my machine boots (it should snap a picture through the webcam and save it to a directory I specify).  I've made the appropriate plist, booted into recovery mode to disable csrutil, and then added the plist to /System/Library/LaunchDaemons.  Upon reboot, I do not see any pictures (nor does the green webcam light turn on).  
I checked the error log for the script and found that the python script throws an error that it cannot import CV2 (ImportError: no module named cv2).  However, I do have cv2 installed and it works once the system is booted.  My script seems to be able to load other modules (os, datetime, and time) as they are imported before cv2.  
Is this an additional security feature?  Is there a way to work around this?  If there is a workaround, will it work even when csrutil is enabled?  I don't want to be running around with that disabled, I just disable it to make the necessary changes to the LaunchDaemons directory, and re-enable it after.  I did reboot with csrutil disabled and still received the import error, so it doesn't seem to be that (at least as far as I can tell).  
Thanks!
Edit: Some more googling led me to discover that the python path specified in the plist for my daemon was not the one with which openCV was associated.  However, a quick echo $PYTHONPATH gives me /usr/local/lib/python2.7/site-packages, which when put in the plist no longer gives an error on startup, but now doesn't seem to execute at all.
Also, I've tried changing the directory I write to be /tmp/ since all users have access to that, but still to no avail.
Assistant: Have you tried to do a which python to see if the actual Python version used is the one installed through brew(I assume you did a brew install pythonbecause of the path under /usr/local)?
If the Python executable is not the one under /usr/local then you might be in trouble, take into account that installing through brew won't replace default system Python.