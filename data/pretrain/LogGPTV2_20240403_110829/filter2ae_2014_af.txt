[60] V8 source code, 2021. https://chromium.googlesource.com/v8/v8.  
[61] Zero Day Initiative - Published advisories, 2021.
https://www.zerodayinitiative.com/advisories/published/.  
[62] Martín Abadi, Mihai Budiu, Ulfar Erlingsson, and Jay Ligatti. Control-flow integrity principles, implementations, and applications. TISSEC09.  
[63] Ayush Agarwal, Sioli O’Connell, Jason Kim, Shaked Yehezkel, Daniel
Genkin, Eyal Ronen, and Yuval Yarom. Spook.js: Attacking chrome strict site
isolation via speculative execution. In SP22.  
[64] Marc Andrysco, David Kohlbrenner, Keaton Mowery, Ranjit Jhala, Sorin
Lerner, and Hovav Shacham. On subnormal floating point and abnormal timing. In
SP15.  
[65] Apple. Changeset 160983 in webkit.
https://trac.webkit.org/changeset/160983/webkit, 2013.  
[66] Apple. Changeset 186208 in webkit for
trunk/source/webcore/page/performance.cpp.
http://trac.webkit.org/changeset/186208/webkit/trunk/
Source/WebCore/page/Performance.cpp, 2015.  
[67] Apple. Changeset 253098 in webkit.
https://trac.webkit.org/changeset/253098/webkit, 2015.  
[68] Apple. Allow Execution of JIT-compiled Code Entitlement, 2018.
https://developer.apple.com/documentation/bundleresources/entitlements/com_apple_security_cs_allow-jit.  
[69] Apple. App Store Review Guidelines. https://developer.apple.com/app-store/review/guidelines/, 2020.  
[70] Cornelius Aschermann, Tommaso Frassetto, Thorsten Holz, Patrick Jauernig,
Ahmad-Reza Sadeghi, and Daniel Teuchert. Nautilus: Fishing for deep bugs with
grammars. In NDSS19.  
[71] Michalis Athanasakis, Elias Athanasopoulos, Michalis Polychronakis,
Georgios Portokalidis, and Sotiris Ioannidis. The devil is in the constants:
Bypassing defenses in browser jit engines. In NDSS15.  
[72] Daniel Bates, Adam Barth, and Collin Jackson. Regular expressions
considered harmful in client-side xss filters. In WWW10.  
[73] Niklas Baumstark. Compressing Type Information in Modern C Programs using
Type Isolation, 2019.  
[74] Eric W Biederman and Linux Networx. Multiple instances of the global
linux namespaces. In Proceedings of the Linux Symposium.  
[75] Dionysus Blazakis. The apple sandbox. In Black Hat DC 11.  
[76] blink-dev Google Groups. Intent to implement: Shared array buffers.
https://groups.google.com/a/chromium.org/g/blink-dev/c/d-0ibJwCS24, 2015.  
[77] Google Chromium Blog. Recent Site Isolation improvements.
https://blog.chromium.org/2019/10/recent-site-isolation-improvements.html,
2019.  
[78] Google Chromium Blog. Speeding up Chrome’s release cycle.
https://blog.chromium.org/2021/03/speeding-up-release-cycle.html, 2021.  
[79] Google Security Blog. An update on memory safety in chrome.
https://security.googleblog.com/2021/09/an-update-on-memory-safety-in-chrome.html, 2021.  
[80] Hans-Juergen Boehm and Mark Weiser. Garbage collection in an
uncooperative environment. Software: Practice and Experience.  
[81] E. Bosman, K. Razavi, H. Bos, and C. Giuffrida. Dedup est machina: Memory
deduplication as an advanced exploitation vector. In SP16.  
[82] FraserBrown,DeianStefan,andDawsonEngler.Sys:Astatic/symbolic tool for
finding good bugs in good (browser) code. In USENIX Security 20.  
[83] Sam Brown. Some brief notes on webkit heap hardening.
https://labs.f-secure.com/archive/some-brief-notes-on-webkit-heap-hardening/,
2018.  
[84] Yinzhi Cao, Zhanhao Chen, Song Li, and Shujiang Wu. Deterministic
browser. In CCS17.  
[85] R. Chris. Partitionalloc - a shallow dive and some rand, 2016.
https://struct.github.io/.  
[86] Chromium. Clamp performance.now() to 100us. https://chromium-review.googlesource.com/c/chromium/src/+/853505, 2018.  
[87] Chromium. Security: Constant blinding bypass via Wasm, 2020.  
[88] ComputerWorld. Browser makers build bulwarks to stump spectre attacks.
https://www.computerworld.com/article/3246210/browser-makers-build-bulwarks-to-stump-spectre-attacks.html, 2018.  
[89] Crispin Cowan. Strengthening the Microsoft Edge Sandbox, 2017.  
[90] Cure53. Cure53 Browser Security White Paper.
https://github.com/cure53/browser-sec-whitepaper, 2017.  
[91] Sung Ta Dinh, Haehyun Cho, Kyle Martin, Adam Oest, Kyle Zeng, Alexandros
Kapravelos, Gail-Joon Ahn, Tiffany Bao, Ruoyu Wang, Adam Doupé, et al.
Favocado: Fuzzing the binding code of javascript engines using semantically
correct test cases.  
[92] MDN Web Docs. Cross-origin-embedder-policy.
https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Embedder-Policy, 2021.  
[93] MDN Web Docs. Cross-origin-opener-policy.
https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Opener-Policy, 2021.  
[94] MDN Web Docs. Same-origin policy. https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy, 2021.  
[95] eEye Digital Security. Microsoft Internet Information Services Remote
Buffer Overflow, 2001.  
[96] Filip Pizlo. Introducing Riptide: WebKit’s Retreating Wavefront
Concurrent Garbage Collector. 2017.  
[97] Filip Pizlo. What Spectre and Meltdown Mean For WebKit. 2018.  
[98] Firefox. Always poison deallocated objects in the frame arena, 2009.
https://bugzilla.mozilla.org/show_bug.cgi?id=497495.  
[99] Firefox. Exact stack rooting, 2014. https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Internals/GC/Exact_Stack_Rooting.  
[100] Firefox. [meta] store content-controlled buffers in a separate heap,
2014. https://bugzilla.mozilla.org/show_bug.cgi?id=1052575.  
[101] Firefox. Implement win/osx sandboxing for new RDD process, 2018.
https://bugzilla.mozilla.org/show_bug.cgi?id=1498624.  
[102] Firefox. Enable Code Integrity Guard on RDD Process, 2019.
https://bugzilla.mozilla.org/show_bug.cgi?id=1563774.  
[103] Fortinet. Microsoft MSHTML Remote Code Execution Vulnerability Exploited
in the Wild (CVE-2021-40444). https://www.fortinet.com/blog/threat-research/microsoft-mshtml-remote-code-execution-vulnerability-exploited-in-wild-cve-2021-40444, 2021.  
[104] Ivan Fratric. Dude, where’s my heap? 2015.  