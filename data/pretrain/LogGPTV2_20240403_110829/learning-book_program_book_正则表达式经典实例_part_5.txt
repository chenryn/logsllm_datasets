Ruby
Ruby的正则表达式支持是Ruby语言自身的一部分，这与Perl语言类似。本书会涉
及Ruby1.8和Ruby1.9。Ruby1.8的默认编译会使用由Ruby源代码直接提供的正
则表达式流派。而Ruby1.9的默认编译则会使用Oniguruma正则表达式库。Ruby1.8
也可以被编译来使用Oniguruma，而Ruby1.9也可以被编译来使用较早版本的Ruby
正则流派。在本书中，我们会把内置的Ruby流派称为Ruby1.8，而把Oniguruma
流派称为Ruby1.9。
如果想测试一下你的站点使用的是哪个Ruby正则流派，你可以尝试用一下正则表
达式（a++>。Ruby1.8会说这个正则表达式是非法的，因为它并不支持占有量词
符串。
Oniguruma库被设计为与Ruby1.8向后兼容，它只是在其上添加了新的功能，而不
会破坏已有的正则表达式。该实现甚至把人们认为应该修改的功能也原封不动，例
如：它依然使用（?m）表示“点号匹配换行符”，虽然其他的正则表达式流派使用的都
是(?s)。
使用正则表达式进行查找和替换
查找和替换（Search-and-replace）对正则表达式来说是一个非常常见的任务。一个查
找和替换的功能，会接受一个目标字符串、一个正则表达式和一个替代字符串作为输
人。它的输出则是把目标字符串中所有与正则表达式相匹配的字符串都替换为“替代
文本”。
虽然替代文本（replacementtext）并不是一个正则表达式，读者也可以使用某些特殊的
正则表达式简介
5
www.TopSage.com
---
## Page 22
语法构造动态的替代文本。所有的流派都充许把正则表达式匹配到的文本或者某个捕
获分组，重新添加到替代字符串中。实例2.20和实例2.21会对此加以讲解。有些流派
还会支持把匹配的上下文添加到替代文本中，这会在实例2.22中讲解。在第3章中，
实例3.16将教你如何在代码中为每个匹配都生成一个不同的替代文本。
多种替代文本流派
由于不同正则表达式软件开发人员的不同想法，就造成了非常多的正则表达式流
派，每种流派都拥有不同的语法和特性集合。而这对于替代文本来说也是一样的。
事实上，替代文本拥有比正则表达式更多的流派。构造一个正则表达式引擎是非常
困难的。大多数程序员都倾向于复用一个已有的引擎，而在一个已有的正则表达式
引擎上绑定一个查找和替换的功能，则是相当容易的。这样做造成的结果是，对于
不拥有内置查找和替换功能的正则表达式库来说，它们之上就会存在许多替代文本
的流派。
幸运的是，除了PCRE之外，本书中所有的正则表达式流派都拥有相对应的替代文
本流派。而PCRE中的这个问题则使得使用基于它的流派的程序员感到无所适从。
结果是，所有基于PCRE的应用程序和编程语言都需要提供它们自已的查找和替换
功能。大多数程序员都会试图去复制已有的语法，但是却从来不会按照完全相同的
方式去做。
本书会讲到如下的替代文本流派。关于同这些替代文本流派相对应的正则表达式流派，
请参考前面的“多种正则表达式流派”一节。
Perl
Perl使用s/regex/replace/操作符提供内置的正则表达式替换支持。Perl的替代文本
流派是与Perl的正则表达式流派相对应的。本书会涉及Perl5.6～Perl5.10。后期的
版本在替代文本中添加了命名向后引用（namedbackreference）的支持，并在正则表
达式语法中添加了命名捕获（namedcapture）。
PHP
在本书中，PHP替代文本流派指的是在PHP中的preg_replace功能。这个功能使用
了PCRE的正则表达式流派与PHP的替代文本流派。
其他使用PCRE的编程语言并没有使用与PHP相同的替代文本流派。根据所使用的
编程语言的设计者是从哪里得到的灵感，其中替代文本的语法可能会与PHP相同，
或署也可能与本书中任何一种其他替代文本流派相似。
PHP还拥有一个ereg_replace功能。这个功能使用一种不同的正则表达式流派
（POSIXERE），以及一种不同的替代文本流派。PHP中的ereg功能不在本书讨论的
范围之内。
6第1章
www.TopSage.com
---
## Page 23
.NET
System.Text.RegularExpressions包中提供了各种不同的查找和替换功能。.NET替代
文本流派对应.NET的正则表达式流派。所有的.NET版本都使用相同的替代文本流
派。.NET2.0中新的正则表达式功能并不会影响替代文本的语法。
Java
java.util.regex包中包含了内置的查找和替换功能。本书会涉及Java4、Java5和Java6。
所有版本都会使用同样的替代文本语法。
JavaScript
在本书中，我们使用JavaScript这个术语，指代在ECMA-262标准的第3版中所定
义的替代文本流派与正则表达式流派。
Python
Python中的re模块提供了一个sub功能用于查找和替换。Python的替代文本流派对
应于Python正则表达式流派。本书将涉及Python2.4和Python2.5。Python的正则
表达式支持，多年来已经非常稳定了。
Ruby
Ruby的正则表达式支持是Ruby语言自身的一部分，这其中也包括了查找和替换功
能。本书会涉及到Ruby1.8和Ruby1.9。Ruby1.8的默认编译会使用由Ruby源代
码直接提供的正则表达式流派。而Ruby1.9的默认编译则会使用Oniguruma正则
表达式库。Ruby1.8也可以被编译来使用Oniguruma，而Ruby1.9也可以被编译来
使用较早版本的Ruby正则表达式流派。在本书中，我们会把内置的Ruby流派称为
Ruby1.8，而把Oniguruma流派称为Ruby1.9。
本中添加了对于命名向后引用的支持。命名捕获也是在Ruby1.9的正则表达式中的
一个新的特性。
1.2使用正则表达式的工具
除非你已经拥有了相当长的使用正则表达式编程的经验，否则，我们建议你首先在一
个工具中试验一下正则表达式，而不是一下子就在源代码中使用它们。本章和第2章
中提供的正则表达式示例都是简单（plain）的正则表达式，其中并不包含编程语言（即
使是UNIXshell）所必需的额外的转义符号。因此你可以直接把这些正则表达式输人到
一个应用程序的查找框中。
第3章讲解如何把正则表达式混合到源代码中。把一个字面的（literal）正则表达式作
正则表达式简介
7
www.TopSage.com
---
## Page 24
为一个字符串引用会把它变得更加难懂，因为字符串的转义规则会与正则表达式的转
义规则混杂在一起。我们在实例3.1才会开始讲解这些内容。一旦理解了正则表达式的
基本内容，你就能够从无数的反斜杠的背后看到“森林”。
本节要介绍的工具同样会提供调试和语法检查的功能，以及在绝大多数编程环境中并
不会获得的其他反馈信息。因此，在应用程序中开发正则表达式的时候，你可能会发
现在把一个复杂的正则表达式插人到程序中之前，首先使用这类工具试验一下可能会
非常有用。
RegexBuddy
在本书写作之时，RegexBuddy（如图1-1所示）是用来创建、测试和实现正则表达式
的功能最为丰富的工具。它拥有独特的能力，可以仿真本书中讲到的所有正则表达式
的流派，甚至可以在不同的流派之间进行转换。
Daey
000X+
图1-1RegexBuddy
RegexBuddy是由本书作者之一的JanGoyvaerts设计和开发的。设计和开发RegexBuddy
使Jan成为了正则表达式的专家，而由于使用了RegexBuddy，使得本书的共同作者
Steven迷恋上了正则表达式，以至于他向O'Reilly出版社建议了这本书。
8
第1章
www.TopSage.com
---
## Page 25
如果读者觉得屏幕截图（如图1-1所示）看起来内容有些过多，这是因为我们特意在其
中列出了大多数的面板，用来展示RegexBuddy的强大功能。实际上默认的视图会把所
有的面板都很简洁地压缩成一行标签。另外，你还可以选择把一些面板拉到另外一个
显示器上。
要想尝试本书中给出的一个正则表达式，只需要把它键入RegexBuddy窗口上端的编辑
框中。RegexBuddy会自动对你的正则表达式应用语法着色（syntaxhighlighting），从而
使错误和括弧不匹配的情形更容易看清楚。
在键人正则表达式的同时，Create面板会自动构造一个详细的用英语语言描述的分析。
在该正则表达式的树中双击任意的描述，可以编辑正则表达式的特定部分。你还可以
手动向正则表达式中添加新的部分，或者通过单击InsertToken按钮从菜单中选择想要
的操作。例如，如果你不记得肯定型顺序环视（positivelookahead）的复杂语法，可以
依靠RegexBuddy来帮助添加正确的字符。
在Test面板上可以键人或者粘贴一些示例文本。当Highlight按钮被激活的时候，
RegexBuddy会自动高亮显示与正则表达式匹配的文本。
最经常会用到的一些按钮如下。
List All
显示包含所有匹配的一个列表。
Replace
顶端的Replace按钮会显示一个新的窗口，使你可以输人替代文本。在Test框中的
Replace按钮则能够查看在完成替换之后的目标文本。
Split（Test面板上的按钮，而不是顶端的按钮）
把你给的正则表达式当做是一个分隔符号，使用这个正则表达式，根据在目标文本
中找到的匹配把目标文本分隔成多个部分。
单击任意一个按钮，并选择UpdateAutomatically（自动更新），就可以让RegexBuddy
在编辑正则表达式或者目标文本的时候，做到结果的动态同步显示。
要想看到正则表达式到底会（或者不会）如何执行，在Test面板上单击一个高亮显示
的匹配或者是正则表达式没有能够产生匹配的地方，然后单击Debug按钮。RegexBuddy
会转到Debug面板上，逐步展示整个匹配的过程。单击调试器输出的任意地方就可以
查看哪些正则表达式标记匹配了你所单击的文本。单击正则表达式则可以在调试器中
高亮显示正则表达式的该部分。
在Use面板上，选择你最喜欢的编程语言。然后，选择一个功能就可以立即生成
实现该正则表达式的源代码。RegexBuddy的源代码模板可以使用内置的模板编辑
正则表达式简介
www.TopSage.com
---
## Page 26
器进行完全编辑。你还可以添加新的特性，甚至是新的语言，或者是修改已经提
供的模板。
如果想在一个更大的数据集上测试你的正则表达式，转到GREP面板上就可以在任意
数量的文件和文件夹上进行查找（以及替换）。
当你在维护的源代码中发现一个正则表达式的时候，可以把它复制到剪贴板上，包括
其中用于分隔的引l号和斜杠。在RegexBuddy中，单击顶端的Paste按钮，并选择你的
编程语言的字符串类型。该正则表达式就会以简单正则表达式的形式出现在
RegexBuddy中，对于字符串字面量（stringliterals）来说，那些必需的额外的引|号和转
义符号都被去掉了。再使用顶部的Copy按钮就可以创建一个按照你所期望语法的字符
串，从而可以把它重新粘贴回你的源代码中。
随着经验的增长，用户就可以在Library面板上构建起一个很方便使用的正则表达式库。
当保存一个正则表达式的时候，别忘了添加一个详细的描述与一个测试对象。即使是
对专家来说，正则表达式也可能会是难以捉摸的。
如果你确实无法搞明白一个正则表达式是怎么回事，可以单击Forum面板，然后单击
Login按钮。如果你已经购买了RegexBuddy，这里就会出现一个登录屏幕。单击OK，
就会被立即连接到RegexBuddy用户论坛中。Steven和Jan经常会出现在这个论坛回答
用户的问题。
RegexBuddy可以运行在Windows98/ME/2000/XP/Vista上。对于Linux和Apple爱好者，
RegexBuddy同样可以运行在VMware、Parallels、CrossOverOffice之上，另外它在WINE
上也可以运行，但是可能会存在一些问题。你可以从http://www.regexbuddy.com/
RegexBuddyCookbook.exe下载到RegexBuddy的一个免费评估的版本。除了用户论坛
之外，该试用版包含了完整的功能，可以实际使用7天。
RegexPal
RegexPal（如图1-2所示）是由本书的作者之一StevenLevithan所创建的在线正则表达
式测试工具。你所需要的仅仅是一个版本较新的网页浏览器。RegexPal全部是由
JavaScript编写的。因此，它只支持JavaScript正则流派，这与你用来访问它的网页浏
览器中所实现的正则表达式一样。
如果想尝试一下本书中给出的一个正则表达式，只需浏览http://www.regexpal.com。在
标记了Enterregexhere的输人框中键人正则表达式。RegexPal会自动对你的正则表达
式应用语法着色，从而可以即时显示在这个正则表达式中是否存在任何语法错误。
RegexPal很清楚在处理JavaScript正则表达式的时候，哪些问题可能会毁掉你一天的工
作。如果某个特定的语法在有些浏览器中不能正常工作的话，那么RegexPal会把它突
出显示成一个错误。
10第1章
www.TopSage.com
---
## Page 27
RegeTeer-RegePal-Windous teet bplre
p
gepalcom/
Lie Seorh
RegeTeer-RegP
regexpal o.i.4-aJavaScriptregularexpressiontester
HelpVor
Casesenstie5mchine breaks（m）Detma
D[A=2059.-10（7:[A-20-9-1\.)+1A=21（2,6）D
Options
Quick Relerence
tike.O
Mike'
Delieireland.co
IPguy9[1.2.3.4]
presi
Invalid addresses
1024x768860Hx
osgvalid.
Hike)O*Del18Lreland.com
ohngaol