---
## Page 377
### 安装额外的软件包
安装 `ruby-devel` 和 `make` 会提供一些额外的软件包。具体安装过程如【示例13-4】所示。

#### 13.2.2 安装 EPEL 源
在开始软件安装之前，需要先安装 EPEL 源。环境配置完成后，可以开始安装过程，如【示例13-6】所示。

【示例13-6】
```
Loaded plugins: fastestmirror, langpacks
Package 1:make-3.82-21.e17.x86_64 already installed and latest version
Loading mirror speeds from cached hostfile
* updates: mirrors.sina.cn
* extras: mirrors.yun-idc.com
* epel: ftp.kddilabs.jp
* base: mirrors.skyshe.cn
```

#### 确认环境和软件
确认以上环境和软件都已经安装完成后，还需要安装依赖软件包，如【示例13-5】所示。

【示例13-5】
```
Resolving Dependencies
--> Running transaction check
---> Package gcc.x86_64 0:4.8.3-9.e17 will be installed
--> Finished Dependency Resolution

Dependencies Resolved

=====================================================================================================
 Package                    Arch                  Version                   Repository              Size
=====================================================================================================
Installing:
 gcc                        x86_64                4.8.3-9.e17               opennebula             365 k

Transaction Summary
=====================================================================================================
Install  1 Package

Total download size: 365 k
Installed size: 1.2 M
Downloading packages:
gcc-4.8.3-9.e17.x86_64.rpm                                                                                                                                                           | 365 kB  00:00:00
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : gcc-4.8.3-9.e17.x86_64                                                                                                                                                                                                                       1/1
  Verifying  : gcc-4.8.3-9.e17.x86_64                                                                                                                                                                                                                       1/1

Installed:
  gcc.x86_64 0:4.8.3-9.e17

Complete!
```

#### 安装 OpenNebula
完成上述步骤后，就可以开始安装 OpenNebula，如【示例13-6】所示。

【示例13-4】
```
Loaded plugins: fastestmirror, langpacks
Loading mirror speeds from cached hostfile
 * base: mirrors.sina.cn
 * extras: mirrors.yun-idc.com
 * updates: mirrors.yun-idc.com
 * epel: ftp.kddilabs.jp
Resolving Dependencies
--> Running transaction check
---> Package epel-release.noarch 0:7-5 will be installed
--> Finished Dependency Resolution

Dependencies Resolved

=====================================================================================================
 Package                    Arch                  Version                   Repository              Size
=====================================================================================================
Installing:
 epel-release               noarch                7-5                       extras                 13.4 k

Transaction Summary
=====================================================================================================
Install  1 Package

Total download size: 13.4 k
Installed size: 13.4 k
Downloading packages:
epel-release-7-5.noarch.rpm                                                                                                                                                            | 13.4 kB  00:00:00
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : epel-release-7-5.noarch                                                                                                                                                                                                                      1/1
  Verifying  : epel-release-7-5.noarch                                                                                                                                                                                                                      1/1

Installed:
  epel-release.noarch 0:7-5

Complete!
```

---

## Page 378
### 安装 Ruby 库
安装完成后，还需要安装 Ruby 库才能使用，如【示例13-7】所示。

【示例13-7】
```
[root@mal~]# yum install ruby-devel gcc-c++ mysql-devel curl-devel
Loaded plugins: fastestmirror, langpacks
Determining fastest mirrors
Cleaning up list of fastest mirrors
 * base: mirrors.sina.cn
 * extras: mirrors.yun-idc.com
 * updates: mirrors.yun-idc.com
 * epel: ftp.kddilabs.jp
Resolving Dependencies
--> Running transaction check
---> Package ruby-devel.x86_64 0:2.0.0.648-36.el7_9 will be installed
--> Processing Dependency: rubygem-nokogiri for package: ruby-devel-2.0.0.648-36.el7_9.x86_64
--> Finished Dependency Resolution

Dependencies Resolved

=====================================================================================================
 Package                    Arch                  Version                   Repository              Size
=====================================================================================================
Installing:
 ruby-devel                 x86_64                2.0.0.648-36.el7_9        updates                1.2 M

Transaction Summary
=====================================================================================================
Install  1 Package

Total download size: 1.2 M
Installed size: 1.2 M
Downloading packages:
ruby-devel-2.0.0.648-36.el7_9.x86_64.rpm                                                                                                                                                  | 1.2 MB  00:00:00
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : ruby-devel-2.0.0.648-36.el7_9.x86_64                                                                                                                                                                                                        1/1
  Verifying  : ruby-devel-2.0.0.648-36.el7_9.x86_64                                                                                                                                                                                                        1/1

Installed:
  ruby-devel.x86_64 0:2.0.0.648-36.el7_9

Complete!
```

#### 运行集成化脚本
OpenNebula 提供了一个集成化的脚本，运行此脚本即可完成安装，如【示例13-7】所示。

【示例13-7】
```
[root@mal]#/usr/share/one/install_gems
X Processing Dependency: rubygems for package!
Resolving Dependencies
*extras: mirrors.yun-idc.com
*updates: mirrors.yun-idc.com
*epel:ftp.kddilabs.jp
Running transaction
to
check
```

---

## Page 379
### 配置 Yum 源
工具安装时需要按 13.2.1 小节中的方法先配置 Yum 源。安装方法如【示例13-9】所示。

【示例13-9】
```
[root@nodel]# yum clean all
Cleaning up list of fastest mirrors
 * base: mirrors.sina.cn
 * extras: mirrors.yun-idc.com
 * updates: mirrors.yun-idc.com
 * epel: ftp.kddilabs.jp
Cleaning up everything
```

### 添加淘宝源
此时可以添加国内的淘宝源，然后再执行上述命令。添加淘宝源命令如【示例13-8】所示。

【示例13-8】
```
http://ruby.taobao.org/ added to sources
(4/5):base/7/x86_64/primary_db
(3/5):opennebula/primary_db
```

### 安装 KVM
将采用在 CentOS 7 中安装 KVM 作为客户端。CentOS 7 中安装 KVM 的方法可参考本书的第 10 章，此处不再赘述。

### 安装 OpenNebula 客户端
安装完 KVM 之后就可以开始安装 OpenNebula 的客户端程序了，客户端程序依然采用 Yum 包管理器进行安装。

【示例13-9】
```
Resolving Dependencies
--> Running transaction check
--> Processing Dependency: rubygem-nokogiri for package: opennebula-ruby-4.12.1-1.x86_64
--> Finished Dependency Resolution

Dependencies Resolved

=====================================================================================================
 Package                    Arch                  Version                   Repository              Size
=====================================================================================================
Installing:
 opennebula-ruby            x86_64                4.12.1-1                  opennebula             19 kB

Transaction Summary
=====================================================================================================
Install  1 Package

Total download size: 19 kB
Installed size: 2.5 M
Downloading packages:
opennebula-ruby-4.12.1-1.x86_64.rpm                                                                                                                                                    | 19 kB  00:00:00
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : opennebula-ruby-4.12.1-1.x86_64                                                                                                                                                                                                            1/1
  Verifying  : opennebula-ruby-4.12.1-1.x86_64                                                                                                                                                                                                            1/1

Installed:
  opennebula-ruby.x86_64 0:4.12.1-1

Complete!
```

---

## Page 380
### 配置控制端和客户端
本小节将简要介绍如何配置控制端和客户端。

#### 控制端主守护进程配置
控制端有两个守护进程需要配置，其一是 `oned`，这是 OpenNebula 的主要进程，所有主要功能都通过此进程完成；另一个称为 `sunstone`，这是一个图形化的用户接口。启动 OpenNebula 服务前需要配置这两个进程。

1. **控制端主守护进程配置**
   - 所有软件安装完成后还不能立即使用，还需要做一些配置，包括密码、SSH验证等方面。
   - 【示例13-10】
     ```
     [root@mal ~]# su - oneadmin
     [oneadmin@mal ~]$ "oneadmin:password" > ~/.one/one_auth
     [oneadmin@mal ~]$ chmod 600 ~/.one/one_auth
     ```

2. **图形化用户接口配置**
   - 图形化用户接口进程为 `sunstone`，默认情况下该进程只在本地环回接口（接口名为 lo，IP 地址为 127.0.0.1）侦听，其他计算机均无法访问。为了能使其他计算机都能访问，需要修改侦听地址。
   - 【示例13-11】
     ```
     [root@mal ~]# cat /etc/one/sunstone-server.conf
     # 修改侦听地址 127.0.0.1 为 0.0.0.0
     :host: 0.0.0.0
     :port: 9869
     ```

---

## Page 381
### 启动 OpenNebula 服务
完成上述设置后需要开启开关服务，如图 13.3 所示。

【示例13-11】
```
[root@mal ~]# systemctl start opennebula-sunstone
[root@mal ~]# systemctl start opennebula
```

### 访问 Sunstone
完成上述步骤后就可以通过网页打开 Sunstone 了，如图 13.3 所示。

![](图13.3Sunstone界面)

### 配置 SSH 公钥
OpenNebula 使用 SSH 远程登录到 Node 上，然后执行各种管理命令，因此必须要配置 SSH 服务，让管理端的 `oneadmin` 用户能够自动登录，而不需要密码。控制端配置如【示例13-13】所示。

【示例13-13】
```
[oneadmin@mal ~]$ ssh-keygen
# 生成公钥和私钥
Enter file in which to save the key (/var/lib/one/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your public key has been saved in /var/lib/one/.ssh/id_rsa.pub.
The key's randomart image is:
+---[RSA 2048]----+
|E .  .           |
|. o. .           |
|. + . .          |
|o = o.           |
|+ B S .          |
|o o + .          |
|.. . .           |
| . .             |
|                 |
+-----------------+
```

### 配置 NFS
如果使用多节点的 OpenNebula，需要在控制端上配置 NFS（控制端与客户端位于同一服务器时无须此配置），如【示例13-12】所示。

【示例13-12】
```
[root@mal ~]# systemctl start nfs
# 设置 NFS 将目录 /var/lib/one 共享
[root@mal ~]# echo "172.16.45.22:/var/lib/one /var/lib/one nfs defaults 0 0" >> /etc/fstab
```

---

## Page 382
### 测试 NFS 配置
当控制端配置了 NFS 之后，客户端还需要配置 NFS 挂载（NFS 共享的目录相当于存储）。挂载应该写入文件 `/etc/fstab`，写入内容如下所示。

【示例13-12】
```
172.16.45.22:/var/lib/one /var/lib/one nfs defaults 0 0
```

### 传送公钥
传送公钥给节点上的 `oneadmin` 用户，如【示例13-13】所示。

【示例13-13】
```
[oneadmin@mal ~]$ scp ~/.ssh/id_rsa.pub root@nodel:/var/lib/one
# 执行以下命令时需要输入 nodel 的 root 密码
[oneadmin@nodel ~]$ mv /var/lib/one/id_rsa.pub /var/lib/one/.ssh/
[oneadmin@nodel ~]$ chmod 600 /var/lib/one/.ssh/id_rsa.pub
[oneadmin@nodel ~]$ cat /var/lib/one/.ssh/id_rsa.pub >> /var/lib/one/.ssh/authorized_keys
```

### 配置 KVM
最后，还需要对 KVM 做一些配置，如【示例13-14】所示。

【示例13-14】
```
# 此操作在控制端进行
[root@mal ~]# systemctl start libvirtd
[root@mal ~]# virsh net-start default
Network default started
```

---

希望这些优化后的文本更加清晰、连贯和专业。如果有任何进一步的需求或问题，请随时告诉我！