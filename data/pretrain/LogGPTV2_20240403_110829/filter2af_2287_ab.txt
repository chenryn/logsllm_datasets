这些问题单独看来可能不起眼或根本无害，但许多微小问题串在一起时，便可能产生严重的风险。
本议程将以 Java 为主轴，分析一个笔者所报告的 0day 以及一个在 Bug Bounty 中因多层次架构所导致远端代码执行的案例。
* * *
#### 攻击GraphQL
14:00-14:30  
演讲者：phithon  
[【攻击GraphQL-phithon.pdf】](https://xzfile.aliyuncs.com/upload/zcon/2018/7_%E6%94%BB%E5%87%BBGraphQL_phithon.pdf
"【攻击GraphQL-phithon.pdf】")
GraphQL是一个具有划时代意义的前后端通信语言，也是一门比较年轻的技术（诞生于2012年，开源于2015年），新技术的诞生与广泛应用，对于安全人员来说是一种挑战和机遇。本议题从开发的角度，理解GraphQL的设计与运行思路，分析其中可能存在的安全风险，并从前、后端多角度介绍GraphQL的漏洞利用技巧。
* * *
#### Java反序列化实战
14:30-15:00  
演讲者：廖新喜  
[【Java反序列化实战-廖新喜.pdf】](https://xzfile.aliyuncs.com/upload/zcon/2018/8_Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AE%9E%E6%88%98_%E5%BB%96%E6%96%B0%E5%96%9C.pdf
"【Java反序列化实战-廖新喜.pdf】")
2017年又是反序列漏洞的大年，涌现了许多经典的因为反序列化导致的远程代码执行漏洞，像fastjson，jackson，struts2，weblogic这些使用量非常大的产品都存在这类漏洞，但不幸的是，这些漏洞的修复方式都是基于黑名单，每次都是旧洞未补全，新洞已面世。随着虚拟货币的暴涨，这些直接的远程执行代码漏洞都成了挖矿者的乐园。
本议题将从那些经典案例入手，分析攻击方和防御方的对抗过程。首先是fastjson的最近的安全补丁的分析，由于黑名单做了加密处理，这里会展开如何得到其黑名单，如何构造PoC。当然2018年的重点还是weblogic，由我给大家剖析CVE-2018-2628及其他Weblogic经典漏洞，带大家傲游反序列化的世界，同时也是希望开发者多多借鉴做好安全编码。
* * *
#### 智能合约消息调用攻防
15:00-15:30  
演讲者：隐形人真忙  
[【智能合约消息调用攻防-隐形人很忙.pdf】](https://xzfile.aliyuncs.com/upload/zcon/2018/9_%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E6%B6%88%E6%81%AF%E8%B0%83%E7%94%A8%E6%94%BB%E9%98%B2_%E9%9A%90%E5%BD%A2%E4%BA%BA%E5%BE%88%E5%BF%99.pdf
"【智能合约消息调用攻防-隐形人很忙.pdf】")
随着区块链技术的流行，以以太坊为基础的智能合约应用也层出不穷，但也伴随着巨大的安全风险。本议题从EVM底层机制与原理出发，结合一些作者发现的特性、场景，介绍消息调用风险点和攻击技术，并从开发者角度给出防护措施。
* * *
#### 从数据视角探索安全威胁
15:30-16:00  
演讲者：cdxy  
[【从数据视角探索安全威胁-cdxy.pdf】](https://xzfile.aliyuncs.com/upload/zcon/2018/10_%E4%BB%8E%E6%95%B0%E6%8D%AE%E8%A7%86%E8%A7%92%E6%8E%A2%E7%B4%A2%E5%AE%89%E5%85%A8%E5%A8%81%E8%83%81_cdxy.pdf
"【从数据视角探索安全威胁-cdxy.pdf】")
本议题讨论了数据为安全人员思维方式带来的变化。尝试从数据角度对传统威胁感知方案进行再设计，并展示其在入侵检测、攻击识别、0day预警等方面落地效果。
* * *
#### WEB 2.0 启发式爬虫实战
16:00-16:30  
演讲者：猪猪侠  
[【WEB2.0启发式爬虫实战-猪猪侠.pdf】](https://xzfile.aliyuncs.com/upload/zcon/2018/11_WEB2.0%E5%90%AF%E5%8F%91%E5%BC%8F%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98_%E7%8C%AA%E7%8C%AA%E4%BE%A0.pdf
"WEB2.0启发式爬虫实战_猪猪侠.pdf")
在WEB1.0时代网站均由静态页面构成，随着JS动态脚本的兴起和Ajax技术的发展，WEB2.0崛地而起，前端开发框架（JQuery、AngularJS、Vue.js、React）也相继流行，基于WEB2.0框架开发的网页内容会通过事件对DOM结构进行动态地触发与加载，导致在浏览器中看到的页面是缺失的。
依靠静态分析已不能满足需求，通过浏览器提供的Headless调试模式，我们可遍历一个网页的所有动态对象，自动填充输入表单的参数值，并触发对象上的绑定的事件，有效解决安全测试过程中的攻击面挖掘。
启发式爬虫：基于历史经验和已知场景，构造并实现规则的爬虫。
* * *
#### 如何利用Ryuk分析和挖掘macOS&iOS内核驱动漏洞
16:30-17:00  
演讲者：白小龙&蒸米  
[【如何利用Ryuk分析和挖掘macOS&iOS内核驱动漏洞-白小龙&蒸米.pdf】](https://xzfile.aliyuncs.com/upload/zcon/2018/12_%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8Ryuk%E5%88%86%E6%9E%90%E5%92%8C%E6%8C%96%E6%8E%98macOS%26iOS%E5%86%85%E6%A0%B8%E9%A9%B1%E5%8A%A8%E6%BC%8F%E6%B4%9E_%E7%99%BD%E5%B0%8F%E9%BE%99%26%E8%92%B8%E7%B1%B3.pdf
"【如何利用Ryuk分析和挖掘macOS&iOS内核驱动漏洞_白小龙&蒸米.pdf】")
作为苹果macOS和iOS系统的重要组成部分，苹果系统中的设备驱动（简称苹果驱动）与内核使用着相同的地址空间并具有系统中最高的内核权限。但是，苹果驱动经常因其较差的代码质量而饱受诟病，产生过众多的安全性问题，在针对苹果系统的攻击中作为攻击内核的入口被多次利用。在本次演讲中，我们将分享对苹果驱动进行安全性分析和漏洞挖掘的最新研究。
首先，我们将公开苹果驱动中我们发现的两个安全漏洞。这两个漏洞可以被分别用于泄露内核信息和内核代码任意执行。利用漏洞，攻击者可以控制macOS系统的内核，并提升至系统最高权限。除了漏洞细节，我们还将介绍如何利用这些漏洞实现控制内核的整套攻击流程，包括一些崭新的内核漏洞利用技术和技巧。相比于漏洞细节和利用技巧，发现这些安全漏洞的技术更为重要。
然而，在苹果驱动中挖掘安全性漏洞并非易事，其主要原因在于苹果驱动多为闭源且大量使用面向对象编程。我们将分享一款自研的用于分析macOS及iOS内核驱动的静态分析工具Ryuk。Ryuk使用静态分析技术对苹果驱动的二进制代码进行解析，识别代码特征，能够极大地加速苹果驱动逆向和安全性分析流程，加快漏洞挖掘进程。
* * *