ital signal samples by ej2π∆ft where ∆f is the frequency offset and
t is time since the beginning of the transmission. This process syn-
chronizes all transmitters in the frequency domain without requir-
ing any explicit coordination.
Time Synchronization: To prevent inter-symbol interference (ISI),
concurrent transmitters have to be synchronized within a cyclic pre-
ﬁx of an OFDM symbol [30]. To do this without any explicit coor-
dination, n+ uses the technique in [30]. In particular, any transmit-
ter that wants to join ongoing transmissions estimates the OFDM
symbol boundaries of ongoing transmissions and synchronizes its
transmission with them. To deal with additional delays due to chan-
nel propagation and hardware turn-around time, both the cyclic pre-
ﬁx and the OFDM FFT size are scaled by the same factor. A longer
cyclic preﬁx provides additional leeway for synchronization at the
transmitters, as shown in [30]. Further, this scaling does not in-
crease the overhead because the percentage of cyclic preﬁx to data
samples stays constant.
Imperfections in Nulling and Alignment: In practice, it is im-
possible to get perfect nulling or alignment due to hardware non-
linearities. This means that there is always some residual noise. The
practical question however is: what level of residual noise is accept-
able in these systems? The answer is: as long as the interference is
reduced below the noise level of the hardware, the interference be-
comes negligible. For example, say that, in the absence of nulling
or alignment, the interferer achieves a 25 dB SNR at a particular re-
ceiver. Then if nulling or alignment reduces the interference power
by over 25 dB, the interference will be below the noise, and its
impact is relatively negligible.
Thus, in n+ we make a transmitter join an ongoing transmis-
sion only if it can reduce its interference power below the noise
power. Speciﬁcally, say that interference nulling and alignment in
practice can reduce the transmitter power by L dB (our empirical
results show that L is about 25–27 dB). A transmitter that wants to
contend for the unused degrees of freedom estimates the power of
its signal at each receiver of the ongoing transmissions. The trans-
mitter can do so because it knows the channel to these receivers
and hence it knows the attenuation its signal would experience. If
the resulting signal power after channel attenuation is below L dB,
the transmitter contends for transmitting concurrently. On the other
hand, if the signal power after channel attenuation is still higher
than L, the transmitter reduces its own transmission power so that
after attenuation it is less than L dB. The transmitter contends (and
if it wins the contention transmits) at this lower power, which can
be canceled using practical interference nulling and/or alignment.
Complexity: Components used in n+ such as projections and es-
timation of the MIMO channel values are already used in current
802.11n for decoding point-to-point MIMO packets. Further, the
computational requirement of computing the alignment and nulling
spaces is similar to that of computing beamforming matrices in cur-
rent 802.11n. Given the similarity between the components of n+
and those used in today’s hardware, we believe that n+ can be built
in hardware without signiﬁcant additional complexity.
5.
IMPLEMENTATION
We implement the design of n+ using software radios. Each node
in the testbed is equipped with USRP2 boards [3] and RFX2400
daughterboards, and communicates on a 10 MHz channel. Since
USRP2 boards cannot support multiple daughterboards, we build
a MIMO node by combining multiple USRP2’s using an external
clock [2]. In our evaluation, we use MIMO nodes which have up to
three antennas. Further, we build on the GNURadio OFDM code
base, using different 802.11 modulations (BPSK, 4QAM, 16QAM,
and 64QAM) and coding rates, to implement the effective-SNR
based bitrate selection algorithm.
We implement the following components of our design: carrier
sense, light-weight RTS-CTS, alignment and nulling, bitrate selec-
tion, and frequency offset correction. However, due to the timing
constraints imposed by GNURadio, we evaluate carrier sense inde-
pendently from light-weight RTS-CTS and data transmission. Also,
we do not implement ACKs. To perform nulling and alignment ef-
ﬁciently, concurrent transmitters have to be synchronized within a
 0.3
tx1
tx1 & tx2
 0.009
tx1
tx1 & tx2
0.4dB jump
)
t
t
a
W
m
(
I
S
S
R
 0.2
 0.1
 0
)
t
t
a
W
m
(
I
S
S
R
 0.006
 0.003
 0
8.5dB jump
non-distinguishable area
highly distinguishable
s
F
D
C
 1
 0.8
 0.6
 0.4
 0.2
 0
s
F
D
C
 1
 0.8
 0.6
 0.4
 0.2
 0
tx2 transmitting
tx2 silent
tx2 transmitting
tx2 silent
 10
 20
 30
Symbols
 40
 50
 10
 20
 30
Symbols
 40
 50
 0
 0.2
 0.4
 0.6
Correlation
 0.8
 1
 0
 0.2
 0.4
 0.6
Correlation
 0.8
 1
Power without projection
Power with projection
Correlation without projection
Correlation with projection
(a) Sensing Power
(b) Cross-correlation
Figure 9—Performance of Carrier Sense in the Presence of Ongoing Transmissions. The ﬁgures show that projecting on a space orthog-
onal to the ongoing transmissions provides a high distinguishability between a particular degree of freedom being occupied or free.
tx3, without and with projection. The graph on the left shows that
if tx3 simply looks at the power on the medium without project-
ing, it might miss tx2’s transmission because tx2’s power is low in
comparison with tx1’s power. However, if tx3 projects on the space
orthogonal to tx1, as in the graph on the right, it sees a relatively
big jump in power when tx2 starts, and hence can more easily de-
tect tx2’s transmission.
Next, we show the result of cross correlating the preamble, with-
out and with projection. We use the same size cross-correlation
preamble as 802.11. We evaluate the system’s ability to sense tx2’s
transmission in the presence of tx1’s transmission. In this exper-
iment, we focus on low SNR scenarios (SNR < 3 dB) because
sensing becomes harder when the sensed signal from tx2 has a low
SNR.
Fig. 9(b) plots the CDFs of the cross correlation values, with-
out and with projection, both for the case of when tx2 is silent
and transmitting. The ﬁgure shows that projecting on an orthog-
onal space (the graph on the right) provides a high distinguisha-
bility between the medium being unoccupied and occupied. This is
because, with projection, the range of cross-correlation values mea-
sured when tx2 is silent is quite different from the cross-correlation
values measured when tx2 is transmitting. In contrast, without pro-
jection (the graph on the left), about 18% of the cross-correlation
values measured while tx2 is transmitting are not distinguishable
from the case when tx2 is silent.
6.2 Performance of Nulling and Alignment
While in theory nulling and alignment can eliminate interference
of unwanted transmissions, in practice, system noise and hardware
nonlinearities lead to residual errors. Thus, we examine the accu-
racy of nulling and alignment in practice.
Experiment: To evaluate nulling, we use the scenario in Fig. 2,
where a single-antenna pair tx1-rx1 and a 2-antenna pair tx2-rx2
transmit concurrently. The 2-antenna pair, tx2-rx2, nulls its signal
at rx1 to avoid interfering with tx1’s transmission. We randomly as-
sign the four nodes, tx1, rx1, tx2, and rx2, to the marked locations
in Fig. 10, and run the experiment in three phases: First, we make
the link tx1-rx1 transmit alone to measure the SNR of the wanted
trafﬁc in the absence of the unwanted trafﬁc. Second, we make the
link tx2-rx1 transmit alone to measure the SNR of the unwanted
trafﬁc at rx1 in the absence of nulling. Third, we make tx1 and tx2
transmit concurrently and have tx2 null its signal at rx1. We mea-
sure the SNR of the wanted stream at rx1 after nulling, and compare
it with its SNR in the absence of the unwanted stream. We repeat
the experiment with different random locations in the testbed.
To evaluate alignment, we use the scenario in Fig. 3, i.e., we
add a 3-antenna pair, tx3-rx3, to the two pairs, tx1-rx1 and tx2-rx2,
used in the nulling experiment. As described in §2, the 3-antenna
Figure 10—The testbed. Dots refer to node locations.
cyclic preﬁx. To achieve this goal, we exploit USRP2 timestamps
to synchronize the transmitters despite the delays introduced by op-
erating in software. We send a trigger signal and make the transmit-
ters log the time of detecting the trigger, tstart. The transmitters then
add a large delay, t∆, and set the timestamps of their concurrent
transmissions to tstart + t∆. The value of t∆ depends on the max-
imum delay due to software processing, which in our testbed is
5 ms.
6. RESULTS
We evaluate n+ in the testbed environment shown in Fig. 10, and
compare it against the existing 802.11n design.
6.1 Performance of n+’s Carrier Sense
We start by examining the effect of projection on the perfor-
mance of carrier sense in the presence of ongoing transmissions.
802.11’s carrier sense has two components which together allow
it to detect if the medium is occupied [18]. The ﬁrst component
checks whether the power on the medium is above a threshold. The
second component cross-correlates 10 short OFDM symbols in the
preamble to detect the presence of other 802.11 transmissions. We
investigate how projecting on a space orthogonal to the ongoing
transmissions affects these components.
Experiment: We focus on the example in Fig. 3, where there are
three pairs of nodes, tx1-rx1, tx2-rx2, and tx3-rx3, which have 1, 2,
and 3 antennas, respectively. We make tx3 sense the medium using
the projection technique described in §3.2. tx1 starts transmitting
followed by tx2. The timing between tx1 and tx2 is ensured by
sending a trigger, logging the USRP timestamps when the node
detected the trigger, and scheduling their transmissions with respect
to the timestamp of the common trigger as detailed in §5. We log
the signal at tx3 and process the logs ofﬂine to measure the channels
and then project tx3’s received signals on the space orthogonal to
tx1. We repeat the experiment for different transmission powers of
tx1 and tx2 to check that carrier sense works at low powers.
Results: First, we show in Fig. 9(a) an illustrated power proﬁle at
]
B
d
[
n
o
i
t
c
u
d
e
r
R
N
S
-3.5
-3
-2.5
-2
-1.5
-1
-0.5
 0
 5 - 10 dB (SNR of the wanted signal)
10 - 15 dB
15 - 20 dB
20 - 25 dB
avoided by n+
]
B
d
[
n
o
i
t
c
u
d
e
r
R
N
S
-3.5
-3
-2.5
-2
-1.5
-1
-0.5
 0
 5 - 10 dB (SNR of the wanted signal)
10 - 15 dB
15 - 20 dB
20 - 25 dB
avoided by n+
7.5-12.5
12.5-17.5
17.5-22.5
22.5-27.5
27.5-32.5
7.5-12.5
12.5-17.5
17.5-22.5
22.5-27.5
27.5-32.5
Original SNR of the unwanted signal from tx2 [dB]
Original SNR of the unwanted signal from tx3 [dB]
(a) SNR reduction due to nulling
(b) SNR reduction due to alignment
Figure 11—Performance of Nulling and Alignment. The SNR loss of the wanted stream as a function of the original SNR of the unwanted
streams in the absence of nulling or alignment. The ﬁgure shows that if the unwanted stream had a high SNR before nulling/alignment, it
causes in a higher SNR loss for the wanted stream after nulling/alignment. Thus, n+ allows unwanted streams to transmit concurrently only
if their original SNR is below 27 dB, which results in an average SNR loss of 0.8 dB for nulling and 1.3 dB for alignment.
 1
 0.8
s
F
D
C
 0.6
 0.4
 0.2
 0
 1
 0.8
s
F
D
C
 0.6
 0.4
 0.2
 0
n+
802.11n
 0
 10
 20
 30
 40
 50
 60
 70
Throughput [Mb/s]
(a) Total network throughput
n+
802.11n
 1
 0.8
s
F
D