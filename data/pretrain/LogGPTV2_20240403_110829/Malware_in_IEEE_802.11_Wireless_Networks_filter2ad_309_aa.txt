# Malware in IEEE 802.11 Wireless Networks

**Authors:**
- Brett Stone-Gross
- Christo Wilson
- Kevin C. Almeroth
- Elizabeth M. Belding
- Heather Zheng
- Konstantina Papagiannaki

**Affiliations:**
- University of California, Santa Barbara
- Intel Research, Pittsburgh, PA

**Contact:**
- {bstone, bowlin, almeroth, ebelding, hzheng}@cs.ucsb.edu

## Abstract

Malicious software (malware) is one of the most significant threats to the Internet today. In recent years, malware has increasingly spread to wireless LANs as these networks have become more popular and widespread. However, the actual impact of malware-related network traffic on open wireless networks has not been thoroughly examined. This paper presents the first study to quantify the characteristics of malware in wireless LANs. We use data collected from a large wireless LAN deployment at the 67th IETF meeting in San Diego, California, as a case study. Our measurements demonstrate that even a single infected host can significantly degrade the performance of a wireless network.

## 1. Introduction

There has been extensive research on both malware and wireless networks. Most malware research has focused on propagation modeling, detection, and application characterization [3][5][8]. The impact of malware-induced traffic on the performance of wired networks has often been overlooked because faster access technologies and greater bandwidth mitigate the effects of additional ingress and egress flows. However, limited resources in wireless networks and the inherently broadcast nature of the medium raise valid concerns about network performance. This work analyzes these effects, which include MAC layer retransmissions, management frame collisions, and overall performance degradation due to increased congestion.

Wireless networks have been studied through experimental measurements and simulations. Many studies have assessed wireless performance on deployed networks [1][9][10][13]. For example, Rodrig et al. [12] captured wireless traffic and analyzed the efficiency of the 802.11 protocol, showing significant degradation during periods of high contention. Jardosh et al. [7] proposed monitoring channel busy time as a good measure of channel utilization, and Heusse et al. [6] found that anomalies in multi-rate adaptation algorithms reduce network performance, especially during congestion. However, these studies do not account for the extraneous packets injected by malicious software.

We are the first to quantify, characterize, and correlate the effects of malicious network traffic on wireless performance. Analyzing the impact of malware on wireless networks is crucial for developing more realistic traffic models, justifying the need for network protection, and improving the quality of service in wireless networks. Additionally, recognizing these effects is beneficial for wireless network diagnostics [2][4].

The remainder of this paper is organized as follows:
- Section 2 describes our data collection and filtering process.
- Section 3 summarizes the data sets.
- Section 4 examines the effects of malware on the wireless network.
- Section 5 concludes with an overall summary of our findings.

## 2. Data Collection and Filtering

The wireless network deployed at the 67th IETF meeting was unusual due to its large size and heavy utilization. The network provided an excellent opportunity to analyze the characteristics and prevalence of malware. With over 1,700 unique users, the resulting trace offered a perspective similar to that of a small Internet Service Provider (ISP) experiencing malware attacks. This section details our data collection process at the IETF meeting and our subsequent malware identification process.

### 2.1 Experimental Setup

The on-site network at the IETF meeting consisted of 30 802.11 a/b/g access points, routed to a 44.7 Mbps T3 backhaul link to the Internet. Participants used the Dynamic Host Configuration Protocol (DHCP) to obtain publicly routable IP addresses in the 130.129/16 address range. No MAC layer encryption, Network Address Translation (NAT) devices, or firewalls were present between the access points and the backhaul connection.

Data was collected from two vantage points:
1. **Trunk Data Set:** Full data traces were recorded from a trunk mirror port on the router managing the backhaul Internet link.
2. **Wireless Data Set:** Wireless sniffers were strategically positioned near popular access points to record wireless traffic. Each sniffer consisted of an IBM or Toshiba laptop with an Atheros chipset, configured in RFMon mode to capture all management and data frames. Based on previous measurements [7], we estimate that each sniffer recorded more than 90% of frame transmissions.

Over 511 gigabytes of uncompressed data were collected at the trunk port, along with another 131 gigabytes of uncompressed data recorded by the wireless sniffers. The data collected from the trunk port included some packets destined for a small on-site terminal room, where attendees could access a wired Ethernet connection. By comparing IP addresses in both traces, we confirmed that less than 10% of the traffic observed in the trunk data set came from the terminal room.

### 2.2 Filtering Heuristics

To isolate malicious traffic from normal flows, we developed heuristic-based filters to detect abnormal behavior. These filters were designed based on known malware behavior patterns, and we constructed an identification and measurement system. We observed that malware traffic exhibits two primary types of traffic patterns:
- **Scanning Behavior:** Worms and Trojans typically scan large sequences of IP addresses on known ports, searching for vulnerable or weakly protected services.
- **Flooding Behavior:** Malware often directs attacks by flooding other computers with connection attempts, such as a SYN flood.

For both behavior patterns, malicious traffic flows are often unidirectional and short-lived. Scanning attempts are often directed at unused IP addresses or machines with firewalls, resulting in unidirectional traffic. SYN floods, by definition, are unidirectional. If a scanner finds a live target, it may attempt to infect the host or guess the hostâ€™s password, leading to bursty traffic flow. Certain forms of malware, such as adware, keyloggers, and open relay proxies, generate smaller amounts of network traffic and are harder to identify. Therefore, our results should be considered a lower bound of the malware present.

## 3. Wireless and Trunk Data Analysis

Before examining the wireless data set, we developed a general characterization of the network activity using the trunk data set. Besides deriving network statistics, we used the trunk data set to identify malicious flows, which we later correlated with the more restricted data set obtained from the wireless sniffers.

### 3.1 Malicious Traffic Analysis

We analyzed the malicious traffic present in the trunk data set. There were 109,740 unique external IP addresses in the trace, with 3,941 (3.6%) implicated in malicious behavior. We identified 1,786 internal IP addresses, of which 14 (0.8%) showed indications of malicious activity.

Overall, 272,480,816 egress TCP packets were sent over the course of the meeting, with 4,076,412 (1.5%) involved in malicious flows. 284,565,595 ingress TCP packets were received, with 2,765,683 (1.0%) being malicious. These results are consistent with a study by Kotz and Essien [9], who observed 0.9% of TCP traffic being sent to Microsoft RPC port 445, correlating with denial-of-service attacks against Windows 2000 machines. Our results provide a more comprehensive view of overall malicious traffic percentages.

Although malicious TCP traffic accounted for an average of 1% of the total traffic at the IETF meeting, it represented a much larger percentage of TCP control traffic (SYN and SYN-ACK packets). When data packets are not considered, the magnitude of malicious traffic becomes more pronounced (Figures 2 and 3). Malicious flows accounted for a substantial portion of total TCP connection requests, occasionally rising above 50%. During a massive SSH password cracking attempt on Friday morning, nearly 100% of all TCP control traffic was part of the attack, clearly evident in Figures 2 and 3.

In addition to analyzing malware behavior within the IETF network, we attempted to isolate the effects of such traffic on the wireless medium itself. Although we identified many attacks in the trunk data set, pinpointing these same attacks in the wireless data set proved difficult, as our sniffers did not observe all wireless LAN traffic across all access points. From the set of malicious flows that were detectable in the wireless data sets, many were unsuitable for analysis due to:
1. Ingress attacks involving only a few total packets.
2. Egress scanning attacks generating a few packets per second.
3. Ingress port scans distributed over hosts on all 30 access points.
4. Backscatter from DoS attacks throughout the Internet producing unsolicited TCP SYN ACKs, resets, and ICMP replies [11].

Although these cases were not ideal for analyzing MAC characteristics, they still had an overall effect, as more than 1% of all packets were malicious and present in both the wired and wireless data sets. The most substantial effects on wireless performance were produced by malicious flows originating within the network. Therefore, we examined several of these egress flows under light and heavy channel utilization.

## 4. Quantifying the Impact of Malware

As discussed in Section 3.1, malicious egress flows were well suited for our analysis since these flows consumed more bandwidth and caused more collisions than malicious ingress flows. To understand the impact of these malicious flows on the MAC layer, we aggregated statistics for channel utilization, throughput, probe requests/responses, data packets/retries/acknowledgments, and transmission rates. At the transport layer, we computed the TCP Round-Trip-Times (RTT) to determine the end-to-end delay.

### 4.1 Malware Attacks in Wireless Networks

We performed a detailed analysis of two of the largest attacks occurring in the wireless data sets during the meeting, based on packets per second and bandwidth. These types of attacks were also the most common. They included an ICMP ping flood combined with a NetBIOS exploit and a TCP SYN Flood.

#### ICMP Flood and NetBIOS Exploit

One of the largest network attacks observed during the entire meeting was an ICMP ping sweep across a range of IP addresses, used to probe for machines and prepare for a subsequent NetBIOS worm exploit. The malicious flow persisted for approximately 18 minutes and 7 seconds, occurring late Thursday afternoon during the plenary session between 17:02:38 and 17:20:45. The attack created 79,289 packets at an average rate of 117 packets per second, with a maximum burst of 235 packets per second. The impact of the flow drove the channel utilization to nearly 100%, causing a rise in the number of link layer data retries (retransmissions) and a reduction in transmission rates (Figure 4). The metric in Figure 4(b) shows the two primary ranges of transmission rates of 11-18 Mbps and 48-54 Mbps used by wireless clients. The rectangular regions in Figures 4 and 5 indicate the periods of malicious traffic flow.

During our analysis, we discovered a brief period in the middle of the ping flood just after 17:09:00 when the attack halted. This temporary pause resulted in a reduction in utilization, an increase in data transmission rates, and fewer data retries. We conjecture that the infected machine may have become unresponsive and was rebooted.

An additional result was that the combined throughput on the channel remained relatively constant at 4,412 KB/s over the course of the attack. However, the average and median RTT increased by more than 50% and 100%, respectively, for all TCP flows. Table 1 displays the average and median RTTs for a 10-minute interval before and after the attack, compared to the RTT during the attack.

Several conclusions can be drawn from these results:
1. The attacker adversely affected other clients' performance and obstructed the access point's probe responses to clients searching for access points via probe requests. This is evident in Figure 4(d), which shows the spike in probe responses immediately after the attack.
2. The attack exacerbated a problem in the wireless network, as probe requests and responses were essentially jammed during heavy utilization. Access point control packets such as beacons, probes, and other management frames were lost or delayed, contributing to overall network congestion.
3. A reduction in client transmission rates occurred due to the Auto Rate Fallback (ARF) mechanism, as illustrated in Figure 4(b), due to increased packet loss. This behavior created a negative feedback loop, as client queues filled but were unable to drain effectively due to contention compounded by slower transfer rates. The delay for each host increased as they continuously waited for the channel to become idle.
4. The dramatic increase in TCP delay, as shown in Table 1, can be attributed to the additional strain placed on the link layer by the attack, which produced a large amount of data retransmissions. During the attack, nearly 25% of all MAC layer frames were retransmissions, and at the peak of the attack, the retransmission rate reached 350 packets per second.

## 5. Conclusion

This paper presents the first study to quantify the characteristics of malware in wireless LANs. Using data from a large wireless LAN deployment at the 67th IETF meeting, we demonstrated that even a single infected host can significantly degrade the performance of a wireless network. Our analysis highlights the importance of understanding and mitigating the impact of malware on wireless networks, which can lead to more realistic traffic models, justify the need for network protection, and improve the quality of service in wireless networks. Recognizing these effects is also beneficial for wireless network diagnostics.