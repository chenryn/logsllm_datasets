title:Malware in IEEE 802.11 Wireless Networks
author:Brett Stone-Gross and
Christo Wilson and
Kevin C. Almeroth and
Elizabeth M. Belding and
Heather Zheng and
Konstantina Papagiannaki
Malware in IEEE 802.11 Wireless Networks
Brett Stone-Gross1, Christo Wilson1, Kevin Almeroth1, Elizabeth Belding1,
Heather Zheng1, and Konstantina Papagiannaki2
University of California, Santa Barbara
{bstone,bowlin,almeroth,ebelding,htzheng}@cs.ucsb.edu
1 Department of Computer Science,
2 Intel Research
Pittsburgh, PA
PI:EMAIL
Abstract. Malicious software (malware) is one of the largest threats
facing the Internet today. In recent years, malware has proliferated into
wireless LANs as these networks have grown in popularity and preva-
lence. Yet the actual eﬀects of malware-related network traﬃc in open
wireless networks has never been examined. In this paper, we provide the
ﬁrst study to quantify the characteristics of malware on wireless LANs.
We use data collected from the large wireless LAN deployment at the
67th IETF meeting in San Diego, California as a case study. The mea-
surements in this paper demonstrate that even a single infected host can
have a dramatic impact on the performance of a wireless network.
1 Introduction
There has been ample research on the separate topics of malware and wireless
networks. A majority of malware research has focused on propagation model-
ing, detection, and application characterization [3][5][8]. The impact of malware
induced traﬃc on the performance of wired networks has been largely ignored,
because the eﬀects of additional ingress and egress ﬂows are mitigated by faster
access technologies and more bandwidth. However, limited resources in wireless
networks and the inherently broadcast nature of the medium creates valid con-
cerns when considering network performance. This work analyzes these eﬀects
which include MAC layer retransmissions, management frame collisions, and an
overall performance degradation due to increased congestion.
Wireless networks have been examined through experimental measurements
and simulations. Many studies have assessed wireless performance on deployed
networks [1][9][10][13]. Rodrig et al. captured wireless traﬃc and analyzed the ef-
ﬁciency of the 802.11 protocol [12]. They present how the eﬃciency signiﬁcantly
degrades during periods of high contention with the majority of packets requir-
ing link layer retransmissions due to packet loss and transmission errors. These
results are consistent with our own ﬁndings. Jardosh et al. examined methods
for detecting congestion in large-scale wireless networks [7]. They propose that
monitoring the channel busy time is a good measure of channel utilization. In
M. Claypool and S. Uhlig (Eds.): PAM 2008, LNCS 4979, pp. 222–231, 2008.
c(cid:2) Springer-Verlag Berlin Heidelberg 2008
Malware in IEEE 802.11 Wireless Networks
223
addition, network throughput and goodput can be used as metrics to identify
congestion. Heusse et al. [6] found that anomalies in current multi-rate adap-
tion algorithms of 802.11 cause an overall reduction in network performance,
especially during periods of congestion. We also observed this behavior during
several malware attacks. What all of these studies lack is an accounting of the
extraneous packets that are injected into the network by malicious software.
We are the ﬁrst to quantify, characterize, and correlate the eﬀects of malicious
network traﬃc on wireless performance. We believe that analyzing the eﬀects
malware can have on wireless networks is important. The applications of our
research can lead to more realistic traﬃc models, justify the need for network
protection, and improve the quality of service in wireless networks. In addition,
recognizing these eﬀects are beneﬁcial in wireless network diagnostics [2][4].
The remainder of this paper is organized as follows. Section 2 describes our
data collection and ﬁltering process. In Section 3, the data sets are summarized.
The eﬀects that malware produced in the wireless network are examined in
Section 4. Section 5 concludes with an overall summary of our ﬁndings.
2 Data Collection and Filtering
The wireless network deployed at the 67th IETF meeting was unusual due to
both its large size and heavy utilization. The network provided an excellent op-
portunity to analyze the characteristics and prevalence of malware. With more
than 1,700 unique users on the network, the resulting trace provided the equiva-
lent of a small Internet Service Provider’s (ISPs) perspective of malware attacks.
Details of our data collection process at the IETF meeting and our subsequent
malware identiﬁcation process are discussed in this section.
2.1 Experimental Setup
The on-site network at the IETF meeting consisted of 30 802.11 a/b/g access
points routed to a 44.7Mbps T3 backhaul link to the Internet. Participants uti-
lized the Dynamic Host Conﬁguration Protocol (DHCP) to obtain a publicly
routable IP address in the 130.129/16 address range. No MAC layer encryp-
tion, Network Address Translation (NAT) devices, or ﬁrewalls were present in
between the access points and the backhaul connection.
We collected data from two vantage points:
1. Trunk Data Set: Full data traces were recorded from a trunk mirror port on
the router which managed the backhaul Internet link.
2. Wireless Data Set: Wireless sniﬀers were strategically positioned around the
meeting near popular access points to record wireless traﬃc, as shown in
Figure 1. Each wireless sniﬀer consisted of an IBM or Toshiba laptop with
an Atheros chipset. Each sniﬀer was conﬁgured in RFMon mode to capture
all management and data frames. Based on previous measurements [7], we
estimate that each sniﬀer recorded more than 90% of frame transmissions.
224
B. Stone-Gross et al.
= AP
= AP + Sniffer
Grande Ballroom
Harbor Island Ballroo m
Fig. 1. Locations of wireless APs and data collection sniﬀers at the IETF meeting
Over 511 gigabytes of uncompressed data were collected at the trunk port along
with another 131 gigabytes of uncompressed data recorded by the wireless snif-
fers. The data collected from the trunk port included some packets destined for
a small on-site terminal room. This location was the only place in which atten-
dees could access a wired Ethernet connection. We were able to identify traﬃc
from the terminal room from the ﬁxed set of IP addresses assigned by DHCP,
by comparing IP addresses in both traces, and conﬁrmed that less than 10% of
the traﬃc observed in the trunk data set came from the terminal room.
2.2 Filtering Heuristics
In order to isolate malicious traﬃc from the normal ﬂows present in the data
set, we created a set of heuristic-based ﬁlters to detect abnormal behavior. We
designed the ﬁlters around a set of assumptions about known malware behavior
patterns, and then constructed an identiﬁcation and measurement system. We
observed that malware’s traﬃc exhibits two primary types of traﬃc patterns:
– Scanning behavior: Worms and Trojans are typically spread by scanning
large sequences of IP addresses on known ports. The scans search for vulner-
able or weakly protected services (e.g., default, weak or non-existent pass-
words) that can be exploited.
– Flooding behavior: Malware is often directed to attack other computers by
ﬂooding them with connection attempts (e.g., a SYN ﬂood).
One of the key characteristics of scanning behavior is that the machine in ques-
tion will contact an abnormally large number of diﬀerent IP addresses. This
behavior will occur repeatedly on known vulnerable ports. Flooding behavior
is best characterized as one machine initiating an unusually large number of
connection attempts to one particular IP address.
Malware in IEEE 802.11 Wireless Networks
225
For both behavior patterns, malicious traﬃc ﬂows are often unidirectional
and almost always short-lived. In the former pattern, scan attempts are often
directed at unused IP addresses, or towards machines with ﬁrewalls which results
in unidirectional traﬃc. SYN ﬂoods are by deﬁnition, unidirectional. If a scanner
does manage to ﬁnd a live target, it will attempt to either infect the host or guess
the host’s password, both of which are relatively brief aﬀairs. Attempts may be
repeated, but the connection is broken and reset each time, leading to bursty
traﬃc ﬂow characteristics. Another important consideration is that certain forms
of malware including adware, keyloggers, and open relay proxies generate smaller
amounts of network traﬃc and are consequently harder to identify. Therefore,
the rest of our results should be considered as a lower bound of malware present.
3 Wireless and Trunk Data Analysis
Before we examined our wireless data set, we ﬁrst developed a more general
characterization of the network activity at the IETF using the trunk data set.
Besides deriving network statistics, we used the trunk data set as the basis to
identify malicious ﬂows, which we later correlated with the more restricted data
set obtained from the wireless sniﬀers.
3.1 Malicious Traﬃc Analysis
We begin by analyzing the malicious traﬃc present in the trunk data set. There
were 109,740 unique external IP addresses in the trace, and 3,941 were implicated
in malicious behavior, or about 3.6%. We identiﬁed 1,786 internal IP addresses,
and out of this set 14 (0.8%) showed indications of malicious activity.
Overall, 272,480,816 egress TCP packets were sent over the course of the
meeting, of which 4,076,412 (1.5%) were involved in malicious ﬂows. 284,565,595
ingress TCP packets were received, of which 2,765,683 (1.0%) were malicious.
In general these results appear consistent with a study by Kotz and Essien [9].
They recorded observing 0.9% of TCP traﬃc being sent to Microsoft RPC port
445, which they correlate with denial-of-service attacks against Windows 2000
machines. In our case, since we quantify scanning as well as ﬂooding attacks
across multiple services, our results represent a more complete view of overall
malicious traﬃc percentages.
Although malicious TCP traﬃc accounted for an average of 1% of the total
traﬃc at the IETF meeting, it accounts for a much larger percentage of TCP
control traﬃc, deﬁned as SYN and SYN-ACK packets. Thus, when data pack-
ets are not considered, the magnitude of malicious traﬃc becomes much more
pronounced (as displayed in Figures 2 and 3). From this data, malicious ﬂows
are shown to account for a substantial portion of total TCP connection requests,
occasionally rising above 50%. During a massive SSH password cracking attempt
on Friday morning, nearly 100% of all TCP control traﬃc was part of the attack,
and is clearly evident in Figures 2 and 3. In addition to conducting an analysis
of malware behavior within the IETF network, we also attempted to isolate what
226
B. Stone-Gross et al.
Incoming TCP Control Traffic
Outgoing TCP Control Traffic
100
80
60
40
20
)
%
(
s
u
o
c
i
i
l
a
M
100
80
60
40
20
)
%
(
s
u
o
c
i
i
l
a
M
0
Mon 10:30
Tue 10:30 Wed 10:30
Thu 10:30 Fri 10:30
0
Mon 10:30
Tue 10:30 Wed 10:30
Thu 10:30 Fri 10:30
Fig. 2. Instantaneous percentage of in-
coming malicious TCP traﬃc
Fig. 3.
outgoing malicious TCP traﬃc
Instantaneous percentage of
eﬀects such traﬃc had on the wireless medium itself. Although we were able to
identify many attacks in the trunk data set, pinpointing these same attacks in
the wireless data set proved to be diﬃcult since our sniﬀers did not observe all
wireless LAN traﬃc across all access points. From the set of malicious ﬂows that
were detectable in the wireless data sets, many proved unsuitable for analysis.
The reasons include the following:
1. Ingress attacks that involved only a few total packets.
2. Egress scanning attacks which, though long lived, only generated a few pack-
ets per second.
3. Ingress port scans that were distributed over hosts on all 30 access points.
4. Backscatter from DoS attacks throughout the Internet that produced unso-
licited TCP SYN ACKs, resets, and ICMP replies [11].
Although the preceding cases were not ideal for analyzing MAC characteristics,
these attacks still had an overall eﬀect as more than 1% of all packets were
malicious and present in the wired and wireless data sets. The most substantial
eﬀects on wireless performance were produced by malicious ﬂows that originated
within the network. Therefore, we examined several of these egress ﬂows under
light and heavy channel utilization.
4 Quantifying the Impact of Malware
As previously discussed in Section 3.1, malicious egress ﬂows were well suited for
our analysis since these ﬂows consumed more bandwidth, and caused more colli-
sions than malicious ingress ﬂows. In order to understand the impact of these ma-
licious ﬂows on the MAC layer, we aggregated statistics for channel utilization,
throughput, probe requests/responses, data packets/retries/acknowledgments,
and transmission rates. At the transport layer we computed the TCP Round-
Trip-Times (RTT) to determine the end-to-end delay.
Malware in IEEE 802.11 Wireless Networks
227
Table 1. The eﬀects on TCP RTT of an ICMP ﬂood and NetBIOS attack
Non-Attack Interval During Attack Percent Increase
Avg (Egress)
Avg (Ingress)
Median (Egress)
Median (Ingress)
64.7 ms
23.4 ms
41.6 ms
3.2 ms
99.2 ms
36.1 ms
85.0 ms
6.8 ms
53.23%
54.36%
104.33%
112.50%
4.1 Malware Attacks in Wireless Networks
We performed a detailed analysis of two of the largest attacks occurring in the
wireless data sets during the meeting based on packets per second and band-
width. These types of attacks were also the most common that we observed.
They included an ICMP ping ﬂood combined with a NetBIOS exploit and a
TCP SYN Flood.
ICMP Flood and NetBIOS Exploit. One of the largest network attacks
observed during the entire meeting was an ICMP ping sweep across a range of
IP addresses. The attack was used to probe for machines and prepare for a sub-
sequent NetBIOS worm exploit. The malicious ﬂow persisted for approximately
18 minutes and 7 seconds occurring late Thursday afternoon during the plenary
session between 17:02:38 and 17:20:45. The attack created 79,289 packets at an
average rate of 117 packets per second with a maximum burst of 235 packets
per second. The impact of the ﬂow drove the channel utilization to nearly 100%,
and caused both a rise in the number of link layer data retries (retransmissions)
and a reduction in the transmission rates (shown in Figure 4). The metric in
Figure 4(b) shows the two primary ranges of transmission rates of 11-18Mbps
and 48-54Mbps that were used by wireless clients. The rectangular regions in
Figure 4 and 5 indicate the periods of malicious traﬃc ﬂow.
As part of our analysis, we also discovered a brief period in the middle of
the ping ﬂood just after 17:09:00 when the attack halted. This temporary pause
resulted in a reduction in utilization, an increase in data transmission rates,
and fewer data retries. Unfortunately we were not able to determine why the
attack was suspended during this two minute interval, but we conjecture that
the infected machine may have become unresponsive and was rebooted.
An additional result that we observed in our analysis was that overall, the
combined throughput on the channel remained relatively constant at 4,412 KB/s
over the course of the attack. However, the average and median RTT increased
by more than 50% and 100% respectively for all TCP ﬂows. Table 1 displays the
average and median RTTs for a 10 minute interval before and after the attack
with respect to the RTT during the attack.
There are several conclusions that can be drawn based on these results. First,
the attacker was not only able to adversely aﬀect other clients’ performance,
but also obstruct the access point’s probe responses to clients who were search-
ing for access points via probe requests. This is evident in Figure 4(d), which
illustrates the spike in probe responses immediately after the attack occurred.
228
B. Stone-Gross et al.
Consequently, the attack exacerbated a problem in the wireless network in that
probe requests and responses were essentially jammed during heavy utilization.
Access point control packets such as beacons, probes, and other management
frames were also lost or delayed, and therefore served no productive purpose
and only contributed to the overall network congestion.
A reduction in client transmission rates occurred due to the Auto Rate Fall-
back (ARF) mechanism, as illustrated in Figure 4(b), due to increased packet
loss. As a result, packet transmission times increased, which further increased
the channel busy time. The purpose of ARF is to combat lossy channel condi-
tions by sending data at lower rates (i.e., provide more robust modulation and
coding schemes), and thus decrease the likelihood that data is lost because of
radio noise. However, using the ARF strategy is a poor choice in this case since
dropped packets are due to packet collisions and not noise interference. Dur-
ing these congested periods, this behavior created a negative feedback loop as
client queues ﬁlled, but were unable to eﬀectively drain due to contention com-
pounded by slower transfer rates. Therefore, the delay for each host increased
as they continuously waited for the channel to become idle.
The dramatic increase in TCP delay, as shown in Table 1, can be attributed
to the additional strain that this attack placed on the link layer. Accordingly, the
attack produced a large amount of data retransmissions. During the attack nearly
25% of all MAC layer frames were retransmissions, and at the peak of the attack
350
300
250
200
150
100
50
s
e
i