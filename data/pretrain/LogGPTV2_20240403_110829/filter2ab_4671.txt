### Title: HTTP Request Smuggling in 2020 â€“ New Variants, New Defenses, and New Challenges

**Abstract:**

HTTP Request Smuggling, also known as HTTP Desyncing, is an attack technique first identified in 2005. This method exploits discrepancies in how different HTTP devices (including the server itself) interpret non-standard HTTP requests. It can be used to bypass Web Application Firewalls (WAFs) and other security solutions, poison HTTP caches, inject responses to users, and hijack user requests.

One might assume that HTTP Request Smuggling would be a rare occurrence in 2020, given the increased awareness following James Kettle's presentation at Black Hat 2019 and the ease with which Commercial Off-The-Shelf (COTS) software can be reviewed and patched by vendors. However, this assumption is not entirely accurate.

In this presentation, I will demonstrate four new HTTP Request Smuggling attack variants that are effective against popular, modern web servers and HTTP proxy servers. Additionally, I will present a successful attack using an older variant and show how to circumvent existing HTTP Request Smuggling protections in a free, open-source application security solution.

I will also discuss the limitations of current free, open-source solutions for HTTP Request Smuggling. To address these shortcomings, I have developed a C++ "Request Smuggling Firewall" class library. This library can be integrated into any user-space process (such as a web server or proxy server) to provide robust socket-level protection against HTTP Request Smuggling. The class library is designed to be extensible, allowing it to be adapted for use beyond HTTP Request Smuggling and even beyond HTTP itself.

Finally, I will highlight some anomalies I discovered in various web servers and proxy servers, and challenge the security research community to identify corresponding software vulnerabilities that could be exploited to create full-fledged HTTP Request Smuggling attacks.