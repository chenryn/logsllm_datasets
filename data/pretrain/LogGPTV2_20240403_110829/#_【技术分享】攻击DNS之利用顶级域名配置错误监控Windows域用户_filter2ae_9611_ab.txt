**2.该客户端计算机使用它当前配置的完全合格域名(FQDN)(如newhost.tailspintoys.com)，作为这个查询的指定名称。**
对于标准的主要区域，在SOA查询响应中返回的主服务器或拥有者是固定的和静态的。主服务器名称始终与准确的DNS名称相匹配,因为该名称会存储在区域中，并显示在SOA资源记录中。然而,如果正在更新的区域是目录集成区域,则任何加载此区域的DNS服务器都可以响应此SOA查询,并在SOA查询响应中动态插入它自己的名称作为此区域的主服务器。
**3.DNS客户端服务会尝试联系主DNS服务器。**
客户端会对它名称的SOA查询响应进行处理，以确定这个IP所在的、接受它名称的、作为主服务器的DNS服务器是被授权的。然后，它将根据需要执行下列步骤，以联系并动态更新主服务器。
(1)客户端向SOA查询响应中确定的主服务器发送一个动态更新请求。
如果更新成功，则不执行其他操作。
(2)如果更新失败，接下来，客户端针对SOA记录中指定的区域名称，发送一个NS类型的请求。
(3)当客户端收到此查询的响应时，向收到的响应列表中的第一个DNS服务器发送一个SOA查询。
(4)解析此SOA查询后，客户端向SOA解析出的服务器发送一个动态更新。
如果成功，则不执行其他操作。
(5)如果更新失败，根据第(2)步中查询响应的服务器列表，客户端继续下一个SOA查询过程。
**4.联系到可以执行更新的主服务器后，客户端将发送更新请求，随后服务器将处理该请求。**
更新请求的内容包括指示添加“newhost.tailspintoys.com”的
A(以及可能的PTR)资源记录,并删除“oldhost.tailspintoys.com”的这些相同类型的记录，因为该名称先前已经注册过。
服务器还将进行检查，以确保允许根据客户端请求进行更新。对于标准主要区域，动态更新并不安全，因为任何客户端的更新尝试都会成功。对于活动目录集成区域，更新是安全的，并且使用基于目录的安全设置执行更新。
上面的过程是比较啰嗦的，主要过程可以精简一些，因此我将上面步骤的重要部分加粗了，并将上面步骤中客户端最重要的工作总结如下：
1.机器使用当前完整的主机名，向网络中的DNS服务器发送一个SOA查询。我拿刚才的例子来说明，它会包含documentation.east.thehackerblog.com作为主机名。
2.网络中的DNS服务器收到这个查询后，会返回它自己的一个SOA记录，内容是指定的主名称服务器的主机名，例如，这可能类似于ns1.thehackerblog.com。
3.然后，客户端解析这个SOA记录，并访问解析出的ns1.thehackerblog.com主服务器，并发送它想要做的DNS更新/修改。
4.ns1.thehackerblog.com
DNS服务器收到这个更新后，将documentation.east.thehackerblog.com的IP修改为新的IP。好了，一切路线再次正常了！
**Windows域命名约定 &最佳实践指南**
在我们理解危地马拉DNS异常前，我们需要了解的最后一段信息是Windows域的要求：
“默认情况下，DNS客户端不会尝试动态更新顶级域名(TLD)区域，任何使用单标签命名的区域都会被认为是一个TLD区域，例如，com、edu、blank、my-company。为了允许DNS客户端能动态更新TLD区域，你可以使用更新顶级域名区域策略设置，或者你可以修改注册表”
因此，默认情况下，你不能有类似于companydomain的一个Windows域，因为它是单标签的，会被Windows认为是一个顶级域名，如.com，.net，或.gt。而这个设置可以(有希望的)在每个单独的DNS客户端被禁用，这很容易，仅需要companydomain.com一个域。虽然不是所有的公司都遵循这个说明，但还是在[强烈建议](https://support.microsoft.com/en-sg/help/300684/deployment-and-operation-of-active-directory-domains-that-are-configured-by-using-single-label-dns-names)，因为使用单标签域名时，如果你内部网络域名的末端被注册为互联网顶级域名的DNS根区域，就有可能引起很多冲突(一个著名的问题是[名称碰撞](https://www.icann.org/resources/pages/name-collision-2013-12-06-en)，这是一个[热门的网络讨论话题](https://www.icann.org/en/system/files/files/name-collision-02aug13-en.pdf)，并且还会继续)。
**把它们全放在一起—-成为你域名的主人**
现在我们有了所有信息，情况变得更加明朗了，危地马拉国家有很多Windows网络，在这些网络中有内部的Windows域，它们采用了“.gt”顶级域名的子域名。例如，如果微软在危地马拉有一个部门，他们的内部网络域名有可能类似于microsoftinternal.com.gt，这个机器会周期性的向它网络中的DNS服务器发送动态DNS更新，以确保它网络中的主机名是最新的，并能正确路由。由于种种理由，例如防止与外部公司互联网子域名产生名称碰撞，许多网络很可能利用内部网络域名，该域名在更广泛的互联网中是不存在的，例如在这个例子中，微软可以使用一个内部的活动目录域名，如microsoftinternal.com.gt，从而在这个域里，就不会和外部互联网子域名microsoft.com.gt产生名称碰撞。
问题是，很多巧妙的DNS配置错误，有可能造成本来是向内部域的DNS服务器发送的请求，却发送到了顶级域名服务器上。这个问题被称为名称碰撞，并且是一个证据充分的问题，这有时也被称为DNS查询“泄漏”。
如果一个机器使用一个DNS解析器，并且不清楚该内部网络的DNS设置，或配置错误，导致查询到了外部网络的DNS服务器，从而会使这个查询泄漏到“.gt”顶级域名服务器上，因为他们是整个顶级域名空间的授权名称服务器。名称碰撞问题是非常常见的，并且因为这个原因，新的顶级域名往往会做大量的审查，以确保它们不是一般的内部网络域名，例如.local，.localhost，.localdomain，等等。
当有“.gt”扩展的一个内部区域发生泄漏时，一个机器尝试更新一条内部DNS记录，并发送DNS更新查询，但是意外的发送到了“.gt”顶级域名服务器上。例如，microsoftinternal.com.gt内部域有一个主机，并且向com.gt顶级域名服务器发送DNS更新查询。以下是执行此查询的示例，使用了nsupdate
DNS命令行工具(大部分OSX和Linux系统都支持)：
我们可以看到该查询导致了一个NXDOMAIN错误，但无论如何，却返回了一个SOA响应，并包含了maestro.gt，它作为了主名称服务器。对于该查询，这是一个有效的SOA响应，因此所有主机会继续向maestro.gt服务器发送DNS更新查询，它的IP地址是52.15.155.128(这是我的服务器，我已经注册了maestro.gt域名)。此更新查询会以失败结束，因为我将自己的DNS服务器设置成拒绝客户端的更新请求(因为我不想主动干扰这些机器/网络)。这就是为什么所有这些随机的机器会向我的maestro.gt服务器发送DNS更新请求的原因。
我们现在遇到的问题从本质上说是一个新的DNS漏洞，这是名称碰撞的结果，导致动态DNS更新被发送到“登记在顶级域名的SOA记录列表中”的任何服务器。与常规名称碰撞不同，为了利用这个漏洞，我不需要注册一个完整的新的顶级域名，我们只需要注册一个普通域名，只要这个域名存在于顶级域名的SOA记录列表中就可以(就像我们注册的maestro.gt)。
**自己尝试一下—快速的实验室**
如果你想在活动中看到这种行为，实际上重现相当简单。我们将使用Windows
7系统作为我们的示例系统，并安装在虚拟机里，并运行Wireshark监控所有我们机器发送的DNS流量。