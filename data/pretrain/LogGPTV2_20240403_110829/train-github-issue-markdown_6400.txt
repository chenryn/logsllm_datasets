I am trying to make a loss function with varying input sizes. I am getting the
following error:  
`TypeError: __int__ returned non-int (type NoneType)` when compiling the model
Steps to get the error:  
Make architecture in Keras with None type as input: `input_image =
Input(shape=(None, None, 3))`  
Then make a custom loss function and try to access the size of the tensor
`def custom_loss(y_true, y_pred):`  
`yp_size = [int(y_pred.get_shape()[0]), int(y_pred.get_shape()[1]),
int(y_pred.get_shape()[2]), int(y_pred.get_shape()[3])]`  
`cell_x = tf.tile(tf.range(yp_size[1]), [yp_size[2]]) # And code will go on
eventually returning loss`
Then compile model:  
`model.compile(loss=custom_loss, optimizer=optimizer)`
Theoretically the method should run fine at runtime but it is showing this
error. Can I get any workaround for this?
P.S. I don't want to pad my tensors to a fixed size. And sorry if the issue
got uploaded multiple times.