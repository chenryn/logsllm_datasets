1 
0 
1 
1 18 
1
0
18 
0 
1 27 
t
e
n
r
e
d
n
U
2 
0 
2 
2 
t
s
i
l
h
c
t
a
W
11 
11 
0 
13 
t
e
n
k
r
a
D
1 
1 
0 
1 
n
i
g
o
L
10 
10 
0 
11 
d
n
a
m
m
o
C
4 
4 
0 
4 
e
g
n
a
h
c
e
l
i
F
1 
0 
1 
1 
t
r
e
l
a
e
l
g
o
o
G
5 
0 
5 
5 
t
s
i
l
g
n
i
l
i
a
M
l
a
n
r
e
t
x
E
4  14 
4  14 
0  0 
4  19 
r
e
e
P
r
e
s
U
i
n
m
d
A
2 
2 
0 
3 
0 
0 
0 
1 
14 
14 
0 
18 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:46:24 UTC from IEEE Xplore.  Restrictions apply. 
511C. 
Custom Alerts  
Google Alert maintains an index of words found on web 
pages it  crawls  to build  the  search  database and  update the 
cache. Google Alert can be configured to send notifications 
when certain terms are found in the web page. In the NCSA 
network,  Google  alerts  are  configured  to  catch  spam 
uploaded  by  miscreants  in  the  comments  section  (world 
writable) of web pages or wikis.  
D. 
Notifications  
in 
A total of 34 (27%) incidents were discovered based on 
third party notifications provided to the security team. In our 
analysis we consider these notifications as incidents missed 
by  the  security  monitors.  Section  IX  provides  a  detailed 
discussion on missed incidents. We break down notifications 
into the following groups:  
Mailing list notification. Various information-sharing and 
analysis  groups  (REN-ISAC,  CERT,  FIRST) 
transmit 
notifications of a malicious activity that originates from our 
network.  
External  notifications.  External  sources  notify 
the 
security  team  when  they  notice  or  attribute  the  origin  of 
malicious activity or abuse to the NCSA network. A total of 
14  (11%) 
this  manner. 
However,  these  notifications  also  resulted  in  five  false 
positive 
the  external 
notifications (11/14) were related to an internal host scanning 
outside IP blocks or sending out spam.  
investigations.  Nearly  78%  of 
incidents  were  discovered 
Peer.  A  peer  notification  highlights  a  possible  security 
issue or an incident which may have an adverse effect on our 
network  because  of  shared  resources  among  the  users.  The 
two  notifications  from  peer  sites  corresponded  to  high 
severity incidents.  
Users  weary  of  unexplained  behavior  on  their  systems 
may  request  to  have  their  system  examined  by  security 
experts. Only one incident was reported by a user and turned 
out  to  be  a  false  positive.  This  is  an  interesting  finding, 
which  shows  that  often  users  continue  to  use  their  systems 
unaware of the breach. 
Administrator  notification  is  received  when  something 
suspicious  or  anomalous  is  observed  in  a  system,  e.g.,  an 
unexplained  account  has  been  created  on  the  system  or  a 
hard  disk  becomes  suddenly  full  (without  a  plausible 
explanation). Along with external notifications, administrator 
notifications detected 14 (11%) incidents. 
VIII.  CLASSIFYING AND ANALYZING THE INCIDENTS 
For  every  incident/attack,  described  in  this  paper,  data 
logs  are  correlated  to  extract  the  following  information:  (i) 
incident type, (ii) alert generated (in most cases, a single alert 
was  responsible  for  detecting  an  attack;  where  there  were 
multiple alerts raised, we used the first one as the detector), 
(iii)  exploit  used,  (iv)  misuse  of  compromised  host,  (v) 
relevant  monitoring  logs,  (vi)  privilege  attained  by  the 
attacker, (vii) attack phase, and (viii) severity.  
The  choice of  using  first alert  was  specifically  made  to 
avoid  the  bias  towards  favoring  well-understood  incident 
types 
for  which  multiple  alerting  mechanisms  were 
developed over time. Counting first alert helps us normalize 
all incidents and provides uniform look. Ignoring secondary 
alerts (which was not a common occurrence in our dataset) 
does not affect our findings. 
Table  II  summarizes  the  characteristics  of  three  sample 
incidents.  Record  1  corresponds 
to  an  application 
compromise  incident  where  the  attacker  obtained  root 
privilege  by  exploiting  the  xp_cmdshell  MSSQL  Server 
vulnerability and used the system as an unauthorized media 
server (warez). Record 2 represents a virus infection on the 
host. Finally Record 3 shows credential compromise incident 
where  the  attacker  penetrates  the  system  using  stolen 
credentials. 
An  accurate  categorization  of  incidents  is  essential  to 
guide  a  recovery  strategy  for  an  incident.  For  example,  a 
virus  infection  incident  (infected  system  category)  can  be 
recovered  by  cleaning  up  the  system  using  antivirus 
software,  whereas  a  local  root  compromise  (credential 
compromise  category)  may  require  a  more  comprehensive 
cleanup  strategy,  such  as  complete  re-installation  of  the 
system  and  a  mandatory  change  of  user  passwords.  This 
section  classifies  all  incidents  in  our  data  in  three  ways: 
incident  type/category,  attack  phase,  and  incident  severity. 
The incident type classification sorts the incidents into nine 
broad categories based on the outcome of the investigation, 
the  similarity  of  the  attack  type,  and  the  attacker  goal 
(intended  misuse).  The  attack  phase  classification  attempts 
to break down an attack lifecycle into seven different phases 
[17] and provides an important measure of the effectiveness 
of monitors. The severity measures the impact of an incident 
on the computing enterprise.  
Incident Type 
Application 
Compromise 
Monitor/  
Alert 
Flows/TopN 
xp_cmdshell  MSSQL 
Server 
Infected System 
IDS/Blaster  
W32.Welchi worm 
Credentials 
compromise 
Syslog/ 
Profiling  
Stolen credentials 
TABLE II.  
SAMPLE INCIDENTS 
Exploit used 
Misuse 
Warez  
unauthorized 
media 
Scan 
2048  
Sniff credentials 
ICMP 
Privilege 
obtained 
root 
user 
root 
Attack Phase 
Severity 
Attack 
misuse 
Attack 
misuse 
Breach  
relay/ 
Medium  
relay/ 
Low  
High  
ID 
1  
2  
3  
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:46:24 UTC from IEEE Xplore.  Restrictions apply. 
512TABLE III.  
INCIDENT TYPES 
Incident Type (count) 
Credential compromise (32)  
User credentials are targeted and stolen. 
Attack propagates by using stolen 
credentials and local root escalation 
exploits.  
Vulnerability/Exploits (count) 
Stolen password/key-pair    (31) 
Open-X11 keystroke logging(1)  
Incident compromise specifics (count) 
Root (rootkit + trojan ssh/sshd)    (7) 
User (key-pair/certificate)  
(21) 
(1) 
Spam  
(1) 
Bot  
Scan NFS file system   
(2)  
Web server/application (22)  
Web servers (e.g. IIS or Apache) and/or 
web applications (e.g. phpmyadmin or 
wiki) compromises 
PHP Remote command  
execution/ code injection        (11) 
Web server misconfiguration  (7) 
             (1) 
IIS permissions  
Unknown   
             (3) 
Application compromise (22)  
Compromise of application level 
software (e.g. VNC, OpenSSL,  and 
mysql) 
Bruteforce SSH (20)  
Attackers bruteforce to guess password 
for well known accounts (e.g. 
root/guest/test) for SSH 
Unknown   
VNC exploit  
Mysql exploit  
Telnet exploit  
Rlogin exploit  
SSL exploit  
OpenX11 exploit  
WINS exploit  
MS-SQL exploit  
Weak Passwords  
Misconfiguration  
(6)  
(6) 
(2)  
(2)  
(1) 
(2) 
(1) 
(1) 
(1)  
(19) 
(1) 
Defacement 
(5) 
Scan other hosts  
(5) 
Spam  
(4)  
Backdoor   
(3) 
Bot  
(1) 
Malware    
(1) 
Open proxy  
(1) 
Un-auth FTP server   (1) 
Incorrect permissions  (1) 
(10) 
Warez  
Scan  
(5) 
(3) 
Backdoor   
(1) 
Bot  
(1) 
IRC Bouncer  
(1) 
Sniffer  
Unknown   
(1)  
Bot  
(9) 
SSH Bruteforce Scan  (7) 
(2) 
IRC Bouncer  
root exploit  
(2)  