**Edit:** I don't know how to implement this. I would like the feature, but
it's not the end of the world.  
**Is your feature request related to a problem? Please describe.**
My app uses an 8-bit integer layer ID. Every time I pull a new Three.js
release, I have to paste-replace this line or my app will break:  
`if ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) )
{`  
~~`if ( capabilities.isWebGL2 === true&& ( type === 5124 || type === 5125 || (
type === 5121 && ( ! normalized ) ) ) ) {`~~  
**(On second thought, the above change might actually break someone's code
somewhere.)**
**Describe the solution you'd like**
Can we change that line in the main branch?  
~~All existing working code will work exactly the same.~~ **(No, stuff really
could break.)**
Explanation:  
JS has no 8-bit floats.
  * `normalized=true` if and only if `float` array
  * ~~`normalized=false` if and only if `int` array.~~ Or, you could want floats 0.0 -> 255.0
~~100% unambiguous.~~ No.
Right now, normalized=false just breaks Three.js's buffer implementation /
corrupted data goes to the shader.
**Describe alternatives you've considered**
Even if I make a fork just for that 1 line, it won't be able to merge cleanly,
and I'll still have to go in and copy-paste every time.  
There's a related FR about improving integer support, but I think it went
nowhere.