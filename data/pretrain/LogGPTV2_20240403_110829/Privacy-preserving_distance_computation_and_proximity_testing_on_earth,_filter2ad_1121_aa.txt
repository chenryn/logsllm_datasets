title:Privacy-preserving distance computation and proximity testing on earth,
done right
author:Jaroslav Sedenka and
Paolo Gasti
Privacy-Preserving Distance Computation
and Proximity Testing on Earth, Done Right
Jaroslav Šedˇenka∗
Dept. of Mathematics and Statistics
Masaryk University
Kotláˇrská 2, 61137 Brno, Czech Republic
PI:EMAIL
Paolo Gasti
School of Engineering and Computing Sciences
New York Institute of Technology
1855 Broadway, New York, NY 10023, USA
PI:EMAIL
ABSTRACT
In recent years, the availability of GPS-enabled smartphones
have made location-based services extremely popular. A
multitude of applications rely on location information to
provide a wide range of services. Location information is,
however, extremely sensitive and can be easily abused. In this
paper, we introduce the ﬁrst protocols for secure computation
of distance and for proximity testing over a sphere. Our
secure distance protocols allow two parties, Alice and Bob,
to determine their mutual distance without disclosing any
additional information about their location. Through our
secure proximity testing protocols, Alice only learns if Bob is
in close proximity, i.e., within some arbitrary distance.
Our techniques rely on three diﬀerent representations of
Earth, which provide diﬀerent trade-oﬀs between accuracy
and performance. We show, via experiments on a prototype
implementation, that our protocols are practical on resource-
constrained smartphone devices. Our distance computation
protocols runs, in fact, in 54 to 78 ms on a commodity
Android smartphone. Similarly, our proximity tests require
between 1.2 s and 2.8 s on the same platform. The imprecision
introduced by our protocols is very small, i.e., between 0.1%
and 3% on average, depending on the distance.
Categories and Subject Descriptors
K.4.1 [COMPUTERS AND SOCIETY]: Public Policy
Issues—Privacy; E.3 [DATA ENCRYPTION]
1.
INTRODUCTION
Since the introduction of the ﬁrst popular GPS-enabled
smartphones, location-aware services have been growing in
popularity. Users have now access to a wide array of location-
based applications, including social networks [21], directories
of restaurants and hotels [49, 44], taxi pick-up schedulers [5],
∗Part of this work was done while visiting the New York
Institute of Technology
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
ASIA CCS’14, June 4–6, 2014, Kyoto, Japan.
Copyright 2014 ACM 978-1-4503-2800-5/14/06 ...$15.00.
http://dx.doi.org/10.1145/2590296.2590307.
on-line publishing of geo-tagged photos and videos [11], lo-
cal deals [17], lost/stolen phone locators [20], and “friend
ﬁnders” [16, 1, 4, 34].
These services often raise severe privacy concerns. By
disclosing location data to third parties (e.g., application
developers, cellphone manufacturers, friends), user can be
easily tracked, usually against their will. Although most users
might be comfortable with (or unaware of) being tracked by
cellphone carriers, they may be more reluctant to share loca-
tion information with third parties of unknown reputation.
The dangers of incautious location sharing have been shown
to be very real with documented cases of location data being
actively used by stalkers [47]. Privacy is not only an issue
for the party disclosing its location: service providers may,
in fact, be unwilling to learn the whereabouts of their users,
for fear of bad press and lawsuits [46].
As of today, revealing location information is, in practice,
an all-or-nothing proposition. Mobile devices usually im-
plement coarse-grained “privacy settings”, that allow users
to turn oﬀ location services for speciﬁc applications – often
preventing location-based applications from working at all.
In recent years, researchers have investigated a suitable
middle ground between full disclosure and no disclosure of
location information. This eﬀort has resulted in the intro-
duction of various techniques such as location cloaking [30],
noisy distance computation [18], and privacy-preserving dis-
tance [36] and proximity protocols [50]. However, existing
approaches either provide privacy at the expense of accuracy,
or rely on assumptions that restricts their usefulness. In
particular, cloaking and noisy techniques introduce artiﬁcial
“measurement errors” in the original location, perturbing
the result of the distance computation. Existing protocols
for computing distances in the encrypted domain, on the
other hand, oﬀer accurate results only over small distances,
since they work on either coarse approximations of Earth, or
on small projections of Earth on Euclidean planes. When
multiple small projections are used, parties must privately
determine if their respective coordinates fall within the same
projection.
If they do not, and the protocols do not ac-
count for it, distance computation will return meaningless
results. Finally, existing work does not address the problem
of deﬁning a suitable projection for distance computation.
This makes comparison of accuracy between existing tech-
niques diﬃcult, since the choice of the projection aﬀects the
performance of the protocols.
Contributions. In this paper we introduce novel privacy-
preserving protocols for reliably computing distances and
99proximity between two arbitrary points on Earth. With our
protocols, the two parties – henceforth, “Alice” and “Bob” –
are not required to disclose their location. However, at the
end of our distance protocols, Alice learns how far she is
located from Bob, while Bob learns nothing.
Using our secure proximity testing protocols, Alice only
learns whether Bob is within a certain distance. Moreover,
Bob can return an unconditional positive (i.e., the distance
between Alice and Bob always appear to be smaller than the
threshold) or unconditional negative (the distance between
Alice and Bob is always larger than the threshold) response
to proximity queries from Alice, in order to provide him with
an extra layer of privacy.
An important diﬀerence between two of our protocols and
the current state of the art is the ability of our protocols
to accurately compute distance between two parties located
in arbitrary locations on earth. To achieve this, the two
protocols do not make use of projections of small parts of
Earth’s surface.
Our Protocols. The ﬁrst protocol, PP-UTM, is a concrete
instantiation of Euclidean distance over a projection of Earth.
The projection we use, called UTM, maps Earth over set of
planes. As discussed in Section 3, this technique provides
accurate results if the two parties are located within the same
UTM zone. For this reason, we consider this protocol as a
baseline for assessing the performance of our contribution.
To the best of our knowledge, this is the ﬁrst instantiation
of an Euclidean-distance-based privacy-preserving protocol
that considers a real projection. This, in turn, allows us to
evaluate, for the ﬁrst time, the real-world error introduced
by a privacy-preserving distance computation protocol and
secure proximity testing protocol.
The second protocol, PP-ECEF, allows Alice to calculate
distances in the Earth-Centered, Earth-Fixed (ECEF, also
known as Earth Centered Rotational, or ECR) coordinate
system. This protocol provides very accurate results (less
than 0.1% error) when the two parties are within 14,000 km
(roughly 8,700 miles), and reasonably accurate results (less
than 1% error) for greater distances.
Our third protocol, PP-HS, is based on the haversine for-
mula [42], which is a trigonometric formula used to compute
distances on a sphere. Although slightly less eﬃcient than
the previous two protocols, PP-HS is very accurate regardless
of the position of Alice and Bob. The protocol introduces
very small error (below 0.1%) when the two parties are more
than 14,000 km apart.
Organization. The rest of the paper is organized as follows.
In Section 2 we review the related literature. Section 3 dis-
cusses several techniques for computing distances on various
approximations of Earth.
In Section 4 we introduce our
security model and the cryptographic tools used in our proto-
cols. Section 5 presents our protocols for privacy-preserving
distance computation. We provide a security analysis of the
protocols in Section 6, and evaluate accuracy and perfor-
mance in Section 7. We conclude in Section 8.
2. RELATED WORK
Related work on location privacy can be divided in three
classes: (1) work that aims at quantifying location privacy
(or lack thereof); (2) techniques that anonymize user location
information, and possibly add location obfuscation; and
(3) privacy-preserving protocols based on secure multiparty
computation (SMC).
Quantifying Location Privacy. In [40] Shokri et al. de-
velop a formal framework for the analysis of location-privacy
protection mechanisms. This framework captures adversary’s
prior information, and models various attacks. They intro-
duce metrics for attacker’s performance, such as accuracy,
certainty and success.
Shokri et al. [41] classify location exposure into continuous
(i.e., the adversary can track users over time and space) and
sporadic (the adversary’s focus is on localizing users data
speciﬁc point in time). Their work addresses the case of
sporadic location exposure, formalizing location privacy. In
their framework, the authors also perform localization attacks
using Bayesian inference for Hidden Markov Processes on
anonymized traces.
Location Anonymization and Obfuscation. Gruteser
et al. [18] design a middleware architecture, used by a location
broker service to anonymize user locations and still allow
them to receive the intended service. This technique provide
a median resolution of 125 meters, and does not protect
users’ privacy against the location broker. Several papers
have followed the work of Grueteser et al. (see, e.g., [2, 24,
32, 39]).
Duckham et at. [9] introduced a formal model for location
obfuscation techniques. The authors argue that location
inaccuracy (lack of correspondence between information and
reality), imprecision (lack of speciﬁcity of information), and
vagueness (existence of boundary cases in information) pro-
vide an feasible way for implementing location privacy. In
particular, they argue that their model provides a generic
mechanism for balancing quality of information with privacy.
Krumm’s work [30] shows that spatial cloaking, Gaussian
noise and reduced location resolution can degrade the iden-
tiﬁcation success of the adversary. Gruteser et al. [18] use
k-anonymity, implemented via spatial and temporal cloaking,
to increase the adversary’s uncertainty.
In general, techniques belonging to this class provide only
limited accuracy. Moreover, as has been shown by Golle et
at. [15], Beresford et al. [2], Hoh et al. [19] and many others,
the highly identifying nature of location information often
makes proper anonymization diﬃcult, if not impossible. This
makes location anonymization not suitable for a large array
of location-based services, including social networks.
Privacy-Preserving Protocols. More related to our work,
there has been a large amount of research on SMC proto-
cols for privacy-preserving proximity testing and privacy-
preserving distance computation between two points or a
point and a curve.
Zhong et al. [50] introduced Louis, Lester and Pierre, three
privacy-preserving protocols for proximity testing. The Louis
protocol requires a semi-trusted third party that does not
learn any location information. Lester, the second protocol,
does not require a third party, but one of the participants
might learn the location of the other even if they are no
longer close. Finally, the Pierre protocol provides better
security, at the cost of reduced accuracy.
Narayanan et al. [36] show how to reduce proximity testing
to equality testing. Their approach is based on dividing
the Euclidean space into a grid system; the position of each
user is deﬁned as a set of adjacent triangles on the grid. If
two users are within a certain range, they must share at
100least one grid component. Proximity is therefore computed
through a simple and eﬃcient privacy-preserving protocol.
The authors extend the protocol to work on Earth by slicing
it into thin one-degree strips. This instantiation of their
technique introduces three classes of error: (1) even though
the strips are relatively thin, the curvature of Earth still
leads to errors for points at diﬀerent latitudes; (2) grids
from diﬀerent strips do not align at the strip boundary, and
therefore the parties must belong to the same strip for best
accuracy; and (3) since the basic unit for the tessellation
is a triangle, the perimeter of an area which represent the
user location is not a circle, and therefore there may be
false positives or false negatives across the boundaries of a
user’s zone. Classes (1) and (2) limit the applicability of this
approach to relatively small distances.
Mascetti et al. [33] present Longitude, a privacy-aware cen-
tralized technique for determining the distance of two points.
The proposed protocol implements Euclidean distance, and
the result is obliviously compared with a threshold. This
way, one of the parties only learns whether the other protocol
participant’s input is within a certain distance.
Li et al. [26] design a suite of privacy-preserving protocols
that allows two parties to share information about their lo-
cation with ﬁne-grained access control. Users can specify a
condition and match all users that satisfy such condition. Al-
ternatively, their protocols rely on attribute-based encryption
and homomorphic encryption.
To the best of our knowledge, [36] is the only work that
addresses distances in a non-Euclidean space. However, the
authors do not discuss how mapping a grid on a curved
surfaces aﬀects the accuracy of the protocol.
3. DISTANCE COMPUTATION BETWEEN
TWO POINTS ON EARTH
Although Earth is usually considered a sphere, its shape
is closer to an oblate spheroid, or ellipsoid [43]. The exact
shape, called geoid, is deﬁned as the global mean sea level.
However, for simplicity and eﬃciency, geodetic computations
are usually performed over an approximation of Earth’s shape
– a sphere or one of the various standard ellipsoids. In this
paper, we consider the spherical approximation with radius
6,371 km (which is the radius for a sphere with the same
surface area as the Earth’s ellipsoid) and the World Geodetic
System 84 (WGS84).
The WGS84 geoid is used in the Global Positioning System
(GPS), and is thus a major source of coordinates available
today. As this paper focuses mainly on location privacy,
and not on geodesy, we refer the reader to [43] for proper
treatment of this topic and introduce only the required notion
below.