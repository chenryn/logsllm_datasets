)(kd
)(kd
T
1  
T
t
0
)(ˆ td
ZOH 
Figure 4: Continuous time reconstruction of original
packet stream d(k).
4. MODELING PACKET SAMPLING
Following the same methodology, we derive the spectrum
of the traﬃc bit rate estimated from sampled packets. We
show how this spectrum is related to the spectrum of the
original traﬃc and we identify the part of the spectrum (i.e.,
the set of frequencies) that can be recovered without noise.
We relate this ﬁnding to the values of the sampling rate p
and the measurement bin T under consideration. One can
use this result to set the values of p or T , or both together,
such to avoid aliasing and to recover a traﬃc signal close, if
not identical, to the original one. First, we state our main
result then we follow with its derivation.
Main result: for a traﬃc rate signal with maximum fre-
quency fM in the baseband, an averaging interval T and a
packet sampling rate p, estimation errors are fully avoided
− fM . In the other cases, the estimation errors
iﬀ 0.445
are due to frequency aliasing eﬀects that cannot be ﬁltered
out.
< p
t0
T
Suppose that packets are sampled with some uniform prob-
ability 0 < p < 1 and denote by dp(k) the volume of sampled
data in the time slot [(k)· t0, (k + 1)· t0[, k ∈ N . The signals
d(k) and dp(k) are related to each other, as for each k, dp(k)
is equal to d(k) with probability p and to 0 with probability
1− p. Let us express the time-slot corresponding to the n-th
captured sample of d(k) as tn = ( n
p + Δn)t0, Δn being a
random variable modeling the time between sampled pack-
ets. Under this hypothesis we can compute the spectrum of
dp(k) as:
Dp(f ) =
+ Δn)e
−j2πf ( n
+Δn)t0
(7)
p
+∞
(cid:0)n=−∞
d(
n
p
+∞
n
p
+∞
(−j2πf Δnt0)i
−j2πf n
p
t0 (cid:2)1 +
i!
=
d(
+ Δn)e
(cid:0)i=1
(cid:0)n=−∞
Since we are interested in low-frequency components with
|f| < 1
T , we can safely assume that f Δnt0 (cid:7) 1 or equiva-
lently Δn (cid:7) T /t0. This simply means that the bin size is
very larger than the jitter of the inter-arrival time between
sampled packets. Thus:
(8)
(cid:3) .
Dp(f ) ≈ +∞
(cid:0)
n=−∞
d(n/p + Δn)e
p
t0 .
(9)
−j2πf n
Assuming further that E[d( n
p )], i.e., the
stationarity interval of d(k) is greater than Δnt0, we can
compute the expectation of both members of Eq. (9) as fol-
lows:
p + Δn)] ≈ E[d( n
E[Dp(f )] ≈ +∞
(cid:0)
n=−∞
E[d(n/p)]e
p
t0 .
(10)
−j2πf n
Thus, in the frequency band of interest, the spectrum of the
sampled traﬃc E[Dp(f )] can be viewed as the spectrum of
the original traﬃc E[dk] sub-sampled with frequency p
t0 . Re-
calling the spectrum of the signal E[dk] reported in Eq. (1),
172|
(
fDE p
[
|)]
)(kd
p
H(f) 
)(kd
p
1  
T
t
0
d
k
)()
(
Tp
,
ZOH 
)(ˆ
td
p
−
( pBD
)
( pBD
)
p−
0t
p
0t
f
[Hz
]
Figure 5: Expected spectrum of sampled packet
stream dp(k).
it holds that [17]:
E[Dp(f )] ≈ p
+∞
(cid:0)
n=−∞
D0(f − n · p/t0).
(11)
Figure 6: Continuous time reconstruction of sam-
pled packet stream dp(k).
i.e., a low-pass ﬁltered version of the base-band component
of the average spectrum of d(k) scaled by p. Compared to
Eq (6), this implies that the signal dp(k) modeling the sam-
pled traﬃc should be divided by p in order to compensate
the scaling due to sampling and obtain the same spectrum
as the time averaged reconstruction of the original traﬃc.
5. ESTIMATING BD(P ) USING A FILTER-
BANK
An example of this spectrum is plotted in Fig. 5 where we
can see the aliasing introduced by packet sampling. In gen-
eral, the entire baseband component D0(f ) cannot be esti-
mated from Dp(f ). We deﬁne BD(p) as the largest frequency
component of D0(f ) that can be restored from Dp(f ), i.e.,
only frequency components of d(k) with |f| ≤ BD(p) can
be reconstructed from dp(k).
In other words, if we ﬁlter
dp(k) using a low-pass ﬁlter with bandwidth B, such as H(f )
whose cutoﬀ bandwidth is approximately 0.445
T , we have to
−fM to achieve a correct estimate3.
impose B ≤ BD(p) = p
It is worth pointing out that in real cases, the maximum
traﬃc baseband frequency fM could be very close to 0.5/t0,
thus it is not possible to fully avoid aliasing eﬀects. As
a consequence, BD(p) should be deﬁned as the maximum
frequency that can be estimated with a reasonably small
error due to aliasing.
Once sampled, the reduced traﬃc dp(k) is ﬁltered using
H(f ) to obtain the signal ¯dp(k). Its average spectrum can
be expressed as:
t0
E[ ¯Dp(f )] ≈ pH(f )
+∞
(cid:0)
n=−∞
D0(f − n · p/t0).
(12)
By isolating the baseband component ¯D0(f ), this can be
rewritten as:
E[ ¯Dp(f )] ≈ p
D0(f − n · p/t0)
(13)
T
t0
¯D0(f ) + pH(f ) (cid:0)
n(cid:3)=0
Finally, in order to move to a continuous time representation
that models the averaging of the sampled traﬃc over bins
of T /t0 slots, the signal ¯dp(k) has to be decimated by a
factor T /t0 before being interpolated using a ZOH (see Fig.
6). Using the Poisson summation formula as done to derive
(4), and provided that the ﬁlter H(f ) has removed
Eq.
the aliasing due to the sampling, the expected spectrum of
¯d(p,T )(k), i.e., the decimated version of ¯dp(k), can be written
as:
E[ ¯D(p,T )(f )] ≈ p
+∞
(cid:0)
n=−∞
¯D0(f − n/T ).
(14)
By applying the ZOH, one can extract a continuous time
reconstruction of the sampled traﬃc whose spectrum is
pGZOH (f )
¯D0(f )
3It can be easily shown that the same result holds for any
slot size which is an integer sub-multiple of t0.
The distortion of the signal dp(k) is due to the tails of the
spectrum of the signal d(k) translated and folded together in
the bandwidth of interest [−B, +B]. For a sampling proba-
bility p, we expect to have a number of replicas equal to 1−p
p ,
see Fig. 5. If we assume a constant energy density n0 for
the tails of the spectrum of the original traﬃc d(k), and we
refer to N E(B) as the energy of the noise in the bandwidth
of interest [−B, +B], we can write
N E(B) ≤ 2 · [(1 − p)/p] · B · n0.
(15)
The inequality holds because the replicas of D0(f ) do not
necessarily sum up with the same phase in the band of in-
terest. Eq. (15) is very important because it tells us that as
long as we increase p, not only the total energy of the noise
decreases but also its ﬁrst order derivative with respect to
p decreases. As a consequence, by inspecting the behav-
ior of the variance (i.e., proportional to the energy) of any
low-pass ﬁltered version of dp/p, we can infer if the noise
introduced in a bandwidth B is signiﬁcant.
Herein, we leverage this theoretical ﬁnding to propose an
algorithm that estimates BD(p) by properly processing the
output of a bank of low-pass ﬁlters. The traﬃc is supposed
to be sampled in the network at rate p, hence information
on the original traﬃc, typically fM and the shape of the
baseband component, is not available. The only option left
is either to down sample further the traﬃc at the monitor,
or to play with the monitoring time bin. By calculating
the variance of the traﬃc and tracking its behavior with the
new sampling rate and the time bin, one can estimate the
bandwidth BD(p) of the traﬃc signal that can be restored at
p. Note that knowing BD(p) allows one operator or a router
to properly select the minimum monitoring time resolution
T at which sampled packets should be averaged over time
without paying for aliasing. In fact, we remember that once
BD(p) is estimated, the bin size T can be set as:
T = 0.445/BD(p).
(16)
Before starting the description of the algorithm, it is im-
portant to underline two facts. If we ﬁlter the signal dp1 /p1,
obtained using a sampling probability p1, with two diﬀerent
low-pass ﬁlters, namely FB1 and FB2 , having respectively
bandwidth B1 and B2, with B1 < B2, we expect to collect a
larger amount of noise due to aliasing by using the second ﬁl-
ter (see Eq. (15)). Moreover, if we ﬁlter two diﬀerent signals
dp1 /p1 and dp2 /p2, with p1 < p2, using the same low-pass
,
173  
1BF  
Var. Est. 
Var
(
1Bpi
,
)
2BF  
Var
(
Var. Est. 
2Bpi
,
)
d
p
i  
p
i
jBF  
i BpVar
(
,
Var. Est. 
)
j
1
d p
p
1
2
d p
p
2
d
p
p
L  
L
Filter-bank 1 
Var
(
Bp
1
1
,
)
,...
Var
(
WBp
1
,
)
Filter-bank 2 
Var
(
,...
Var
(
)
WBp
2
,
)
Bp
1
2
,
Variance 
Comparisons 
Smallest eligible 
packet sampling 
probability for 
each Bj 
Filter-bank L 
Var
(
,...
Var
(
)
)
Bp
WL
,
Bp
1
L
,
Wi BpVar
(
,
)