量。例如，你有足够的内存，便可以告诉MySQL服务器，让其为磁盘操作和索引操作提供
 sql_mode变量控制着SQL模式，并在诸多方面影响着对服务器SQL语句的处理。它拥有全
一个系统变量可以同时拥有全局值和会话值、只拥有一个全局值，或者只拥有一个会话值。
口
义服务器的行为，以满足自己的特殊要求。对于那些在两个层面都有值的变量，服务器会
系统变量控制着MySQL服务器的运作参数。
所产生的错误数。
error_count变量只有会话值。它表示的是在可能生成错误的当前会话里，最后那条语句
话值。
缓存的大小。这个缓存为所有的客户端所共享，因此没有必要让每个客户端都拥有一个会
innodb_buffer_pool_size变量只有全局值。
话默认值。
也可以更改全局变量sql_mode的值。新的全局值会成为在更改之后连入的那些客户端的会
其自己的会话中实现对服务器行为的更改，而无其他客户端无关。拥有SUPER权限的客户端
它们会初始化为与全局变量相同的值。所有客户端都可以修改会话变量sql_mode的值，在
局值和会话值。每一个连接上的客户端都可以获得其自己的特定于会话的sql_mode变量，
。使用 SHOWVARIABLES语句可以显示这些变
，它控制着缓冲InnoDB表数据和索引的那个
12.3
使用系统变量和状态变量
427
改
务
新
---
## Page 448
@@ var_name语法，那么当限定符存在时，使用的是会话变量；否则，使用的是全局值。
格式@@SESSION.var_name或者@@LOCAL.var_name 来查询会话变量。如果使用不带限定符的
话变量，可以在语句中加上限定符 GLOBAL 或者 SESSION：
于 60秒的行找出来：
匹配：
12.3.1.1查看系统变量值
428
你也可以查询 INFORMATION_SCHEMA 库的 GLOBAL_VARIABLES 表和 SESSION_VARIABLES
SELECT @@default_storage_engine As 'Default storage engine';
@@-语法具有通用性，可用在SET、SELECT或其他SQL语句里：
限定符关键字和变量名都不区分大小写。
要想查询单个变量值，
LOCAL是 SESSION 的同义词。
SHOW SESSION VARIABLES;
SHOW GLOBAL VARIABLES;
默认情况下，SHOWVARIABLES 会显示各个会话变量值。要想特定地显示全局变量或者会
mysql> SHOW VARIABLES
要想通过指定通用的条件来选择行，
带上LIKE子句，可以对变量的输出行进行限制，使它们的名字都能与给定的 SQL模式相
mysql> SHOW VARIABLES;
使用 SHOWVARIABLES 命令可以查看当前的系统变量值：
net_read_timeout
connect_timeout
Variable_name
bulk_insert_buffer_size
Variable_name
auto_increment_offset
auto_increment_increment
Variable_name
innodb_rollback_on_timeout
innodb_lock_wait_timeout
key_buffer_size
join_buffer_size
innodb_log_buffer_size
innodb_buffer_pool_size
innodb_buffer_pool_instances
big_tables
basedir
back_log
automatic_sp_privileges
autocommit
第12章MySQL的基本管理
-> WHERE Variable_name LIKE %timeout%AND Value  SHOW
系统变量可被设置为特殊值DEFAULT。将DEFAULT分配给全局变量之后，会将其设置为编
在设置全局变量时，你必须拥有 SUPER 权限。
SET
话值设置为全局值的两倍大：
SET GLOBAL v1=va11,v2=va12,SESSION v3=va13,v4=va14;
量v3和v4:
的那些自身未包含限定符的变量设置。
在一次设置多个变量的单条语句里，显式的限定符GLOBAL或SESSION会应用到多个紧随
SET SESSION sql_warnings = O,GLOBAL default_storage_engine = InnoDB;
要想在一条SET语句里设置多个变量，
SET@@var_name=value;
Aborted_clients
Variable_name
Bytes_sent
Bytes_received
Binlog_stmt_cache_use
Binlog_stmt_cache_disk_use
Binlog_cache_disk_use
Aborted_connects
GLOBAL read_buffer_size = 2*1024*1024;
第12章MySQL的基本管理
查看状态变量值
STATUS;
你可以用它们来监视其运作情况。使用SHOWSTATUS语句可
M'或'G"。不过，你可以使用表达式，可以在表达式里引用
，因此它们对于用户来说都是只读的，并且不能像系统变量
下面这条语句将设置全局变量v7和v2，并设置会
，可以使用逗号将各个赋值隔开：
I Value
151
125
0
3
0
，该设置会一直持续到再次发生改变时或者服
---
## Page 451
发周期绑定在一起。
例如，第三方开发人员可以把存储引擎创建为一个插件，单独进行发布，而不用与服务器的开
的功能，并通过只加载所需插件的方式减轻服务器的负担。它还支持服务器功能的独立开发。
全文搜索修饰符、复制机制、审计功能和身份认证方法等。
入"）。在MySQL里，插件可以实现的功能包括存储引擎、INFORMATION_SCHEMA 库的各个表、
能的代码段可以根据服务器来单独编译、然后存储在外部文件里，并根据需要进行加载（“插
12.4
例如：
变量的信息。相对于 SHOW STATUS 而言，这种做法的一个好处是，可以在计算里使用这些值。
例如，想要检查与InnoDB的日志活动相关联的那些状态变量的值，可以使用下面这条语句：
变量的输出进行限制，使它们的名字都能与给定的SQL模式相匹配，或者满足通用的检索条件。
可插拔的服务器架构，让MySQL的DBA可以通过选择性加载插件的方式随意定制服务
随着时间的推移，MySQL服务器的架构已变得更加“可插拔”，以至于实现服务器某些功
口插件注册。在启动时，服务器会在mysql数据库里检查plugin（插件）表，并自动加载注
口“控制语言”。有了它之后，DBA便可以指示服务器加载哪些插件。它利用服务器选项和
口插件目录。所有的插件文件都必须安装在这个位置。插件目录通常为MySQL安装目录下的
口插件文件。服务器插件都是以目标文件方式存储的，这种文件也被称作插件库，因为它们
插件接口包含以下几个组成部分。
本节将讲述插件接口的一般特征。
SELECT @queries/@uptime/60 ASQueries per minute';
SET @uptime =
SET @queries=
查询 INFORMATION_SCHEMA 库的 GLOBAL_STATUS 表和 SESSION_STATUS 表，可以获得状态
与 SHOW VARIABLES一样，将子句LIKE或WHERE与 SHOW STATUS一起使用，可以对这些
IVariable_name
SQL语句来处理插件。例如，--plugin-load选项用于在服务器启动时加载插件，
可以包含多个插件。
(SELECT VARIABLE_VALUE FROMINFORMATION_SCHEMA.GLOBAL_STATUS
WHERE VARIABLE_NAME LIKE'Queries'）;
INSTALLPLUGIN语句用于在运行时加载插件。
位置，可以在服务器启动时设置plugin_dir的值。
lib/plugin，但是可以根据系统变量plugin_dir的值来确定这个位置。要想使用不同的
Innodb_os_log_written
Innodb_os_log_pending_writes
Innodb_os_log_pending_fsyncs
Innodb_os_log_fsyncs
插件接口
Innodb_log_writes
Innodb_log_write_requests
，与身份认证插件特定相关的信息请参考13.2.7节。
1Value
23465984
1384
1234
45504
C
0
12.4插件接口