sults for two security parameters, λ = 15 and λ = 30. Larger
λ values hurt usability.
Eﬀectiveness of the attack. Figure 5 shows the results of
applying Search against the above protocols. From Figure 5,
we can observe the following results.
First, from Figures 5(b) and 5(c), we can observe that
Search can (4, 0.25)-break BSD (20%). This means that af-
ter 4 sessions, a guess with succeed with probability 0.24.
However, at this point, the number of plausible keys in K is
roughly 220. The same trend can be seen for other protocols
as well. This suggests that it is possible to carry out an
impersonation attack even though a large amount of uncer-
tainty regarding the key remains.
Second, from Figures 5(a) and 5(c), we can see that ex-
cept for BSD, the level of security indicated by min-entropy
is signiﬁcantly lower than that indicated by the number of
possible responses. This indicates two things. First, the
number of possible responses is not always an accurate indi-
cator of security. Second, random segment-based challenge
generation algorithms are vulnerable to our guessing attacks
based on the number of segments needed to display a digit.
Third, NSD (7%+SE) (i.e., our attempt to duplicate Pass-
Window) is extremely insecure. Even a stateless adversary,
not having access to any response, can succeed in the ﬁrst
guess with probabilities 10.7% and 8.2% for λ = 15 and 30,
respectively. After intercepting only 3 challenge/response
pairs, the success probabilities increase to 66.9% and 26.2%,
respectively.
Fourth, while NSD (20%+SE) oﬀers a slightly better secu-
rity than NSD (7%+SE) when the attacker has 0 or 1 chal-
lenge/response pair, its security degrades to the same level
as NSD (7%+SE) with 2 or more intercepted sessions; this
is because by using denser segments on non-encoding po-
sitions, it also leaks more information regarding the key in
each session.
Fifth, using noisy frames is a bad idea. This is because
the noisy frames actually provide more deterministic infor-
mation such as which digits are not shown. Removing noisy
frames improves the level of security signiﬁcantly.
Sixth, using shared edges between adjacent positions or
not has almost no noticeable impact on the level of security.
Seventh, all the uni-symbol SVAP variants we identiﬁed are
very insecure. For λ = 15, Search is able to (8, 0.25)-break
all of them, i.e., after observing 8 challenge-response pairs,
an adversary can successfully impersonate a user with prob-
ability 0.25. For λ = 30, Search can (12, 0.09)-break all
uni-symbol SVAP protocols.
Finally, Search can (20, 2−9.84) break HDD with λ = 15,
indicating that HDD may be considered to be acceptable if
this is the best attack we have.
6.2 The SolveLP Attack
Experimental setting. The experimental setting is simi-
lar to that of the previous attack; however, we report only
the min-entropy. For this attack, instead of reporting the
cardinality of the set of plausible keys and responses, we
only make a guess and thus report only the success proba-
bility of the guess. In this experiment, we evaluate the eﬀect
of applying SolveLP on EDD, HDD, HTD, and BSD.
Eﬀectiveness of the attack. Figure 6 illustrates the Min-
Entropy of our attack against EDD, HDD, and HTD. We present
results for security parameters λ = 15 and λ = 30. We now
highlight some of our ﬁndings.
610(a) #plausible keys (λ = 15)
(b) #possible responses (λ = 15)
(c) Min-Entropy of attack (λ = 15)
(d) #plausible keys (λ = 30)
(e) #possible responses (λ = 30)
(f) Min-Entropy of attack (λ = 30)
Figure 5: Eﬀect of the Search attack. The X-axes correspond to (cid:96), the number of authentication sessions for which
the adversary has intercepted the transcripts. The Y-axes in the subﬁgures 5(a) and 5(d)) correspond to the number
of candidate keys. The Y-axes in the subﬁgures 5(b) and 5(e) correspond to the number of plausible responses. The
Y-axes in the subﬁgures 5(c) and 5(f )) correspond to the inverse of the probability that the ﬁrst guess succeeds. The
values in Y-axes are in Log Scale (Base 2).
First, EDD performs the worst under the attack, even worse
than BSD. This is because there are two, instead of one, cor-
rect responses for each frame. SolveLP can (4, 0.25)-break
both BSD and EDD.
Second, SolveLP is more eﬀective than Search on both
BSD and HDD. For example, when λ = 15, SolveLP can
(4, 0.25)-break and (8, 0.25)-break BSD and HDD, respectively,
whereas Search can (8, 0.25)-break and (8, 2−9.97)-break BSD
and HDD, respectively.
Third, increasing the key length also increases the secu-
rity of the protocol (see Figure 6). However, increasing the
key length to achieve an acceptable level of security yields
deployment and usability challenges (e.g., the key card size).
Finally, all the multi-symbol SVAP protocols are (10, 0.25)-
breakable for λ = 15, and (20, 0.125)-breakable when λ =
30. The results directly exhibit the potency of the SolveLP
against the multi-symbol SVAP protocols and let us draw
the conclusion that the concrete SVAPs we have considered
are insecure in general. Designing protocols that are usable
and secure at the same time is a fascinating future research
direction.
Security of diﬀerent protocols. Table 1 presents the
levels of security of diﬀerent schemes in another way.
If
we view min-entropy of 3 as a point at which we declare a
protocol to be broken, Table 1 shows how many sessions a
protocol can withstand under an eavesdropping attack.
Eﬃciency of the attacks. Now we report the running
time of our attacks. We measured the wall clock time it
takes (i.e., using the Linux time utility) to generate and
guess 20 sessions using key length 15. All experiments were
carried out on a 3.40GHz Intel(R) Core(TM) i7-3770 CPU
running GNU/Linux with 16GB RAM.
For Search, it takes less than a second to run an attack
instance. SolveLP takes less than 0.98 minute to run a single
instance of EDD whereas it takes 1.08 and 1.10 minutes for
HDD and HTD, respectively. Also, we implemented the attacks
in python, and we did not aim at optimizing the attack.
The reported times here are just representative examples
demonstrating the feasibility of the attacks in real life.
Note that employing SolveLP using pseudo-boolean, SAT,
or SMT solvers are not feasible in practice. To the best of our
knowledge, the best free solvers for our form of constraints
are MiniCard [2, 3] (for EDD), and MiniSat+ [3] (for HDD
and HTD). Unfortunately, none of the solvers are eﬃcient,
especially when the key length is long (e.g., 15). Speciﬁcally,
for EDD, it takes MiniCard around 10 minutes to make a guess
for one instance, and much longer for HDD.
7. USABILITY EVALUATION
We have conducted a human subject study to evaluate the
usability of several SVAPs. Our study was vetted by our in-
stitution’s IRB and was given an exemption on the grounds
that it is based on survey procedures, and individual partic-
ipants cannot be identiﬁed from the study.
7.1 Study Design
Protocols Studied. We studied the usability of the fol-
lowing protocols: NSD (7%+SE), EDD, HDD, and HTD. For pre-
sentation purposes, we use the alias ASD for NSD (7%+SE).
For each of the protocols, we displayed the superimposed
image (i.e., the key combined with the challenge frame) on
a browser, and let the participants respond according to the
protocol’s authentication requirement. We measured each
 0 20 40 60 80 100 0 2 4 6 8 10 12 14 16 18 20 0 2 4 6 8 10 12 0 2 4 6 8 10 12 14 16 18 20 0 2 4 6 8 10 12 0 2 4 6 8 10 12 14 16 18 20 0 50 100 150 200 0 2 4 6 8 10 12 14 16 18 20 0 2 4 6 8 10 12 0 2 4 6 8 10 12 14 16 18 20 0 2 4 6 8 10 12 0 2 4 6 8 10 12 14 16 18 20NSD(7%+RS)NSD(20%+RS)BSD(20%+RS)BSD(20%)BSDHDD611(a) Min-Entropy (λ = 15)
(b) Min-Entropy (λ = 30)
Figure 6: The X-axes in the curves correspond to (cid:96), the number of authentication sessions for which the adversary has
intercepted the transcripts. The Y-axes in the subﬁgures 6(a) and 6(b)) correspond to the inverse of the probability
that the ﬁrst guess succeeds. The values in Y-axes are in Log Scale (Base 2).
λ
15
30
NSD (20%+SE)
BSD (20%+SE)
(2.9, 0.8)
(4.3, 1.1)
(3.7, 1.5)
(7.3, 3.1)
Search
BSD (20%)
(3.8, 1.9)
(7.1, 3.6)
BSD
HDD
BSD
EDD
HDD
HTD
(7.7, 1.4)
(13.1, 2.3)
(43.6, 4.7)
(83.3, 7.5)
(3.2, 0.9)
(5.7, 1.1)
(2.5, 1.1)
(4.5, 1.4)
(6.7, 1.7)
(13.1, 1.6)
(11.4, 3.6)
(16.0, 2.9)
SolveLP
Table 1: A value in a cell is of the form (s, k) in which s denotes the average number of sessions for an attack
to have min-entropy ≤ 3, i.e., the ﬁrst guess succeeds with probability ≥ 1
8 . The value k denotes the standard
deviation of s.
user’s accuracy and average completion time of each proto-
col authentication session. An authentication session of EDD,
HDD, and HTD consists of four frames (i.e., α = 4), whereas
an authentication session of ASD is an animation of ﬁfteen
frames among which only four frames display digits which
constitute the desired 4-digit response (i.e., α = 15). For
EDD, HDD, and HTD, we choose α to be 4 so that the response
lengths of these protocols are consistent with ASD.
We also noticed the existence of a few 7-segment LED
patterns which closely resemble the 7-segment LED patterns
representing digits, but are not valid digit-representing pat-
terns. We call these patterns confusing patterns (CP). See
Figure 7(a) and Figure 7(b) for these CP and their valid
counterparts. During the training session, we drew users’
attention to those CP to prevent them from getting con-
fused. Meanwhile, we also evaluated the inﬂuence of CP on
authentication, by considering protocol variants which never
display these confusing patterns. We identify the protocol
variants which exclude CP with a trailing ‘-’ in their name,
e.g., ASD-, EDD-, HDD-, HTD-.
Evaluation Process. We ran our user study through Ama-
zon’s Mechanical Turk (MTurk). Each study participant
is randomly assigned a speciﬁc protocol to use and we re-
quire the participant to complete ﬁve authentication sessions
of that protocol. We evaluated the accuracy rate and the
completion time of each participant. Before the evaluation
phase, there is a training phase explaining the protocol’s
authentication requirement.
For ASD and ASD-, the study web page displays an ani-
mation of 15 images, with each image lasting two seconds.
Participants are can enter the four response digits at any
time and then click a button to submit. For the other pro-
tocols, the page displays a static image (a single frame), and
the participants need to input the response for that frame
in order to proceed to the next frame.
The training phase contains a single authentication session
with explanations describing the requirement of the task.
The authentication session used is similar to the ones used
in the real study.
7.2 User Study Result Analysis
For each of the eight protocols (ASD, EDD, HDD, HTD, ASD-,
EDD-, HDD-, HTD-), we recruited ﬁfty participants on MTurk.
The participants’ ages range from 18 to over 50, with about
80% between 23 and 40. Roughly, 80% of the participants
hold bachelor’s or master’s degree. Male participants make
up around 60% of all participants. The distributions are
similar for all the eight groups.
Figure 8 gives the accuracy and completion time of dif-
ferent protocols. We now highlight some of our interesting
ﬁndings below.
Accuracy. In terms of accuracy, EDD performs better than
ASD (t = 1.361, p = 0.177), HDD (t = 1.925, p = 0.057), and
HTD (t = 3.096, p = 0.003) 1. EDD is followed by ASD, which is
slightly better than HDD. HTD is the worst, with accuracy be-
low 80%. This ordering is expected. The diﬀerences among
these three, however, are not statistically signiﬁcant.
Completion time. EDD is also the clear winner in terms
of completion time (t signiﬁcant at p < 10−8), taking an
average of less than 20 seconds per session. EDD is followed
by ASD and HDD, each taking an average of around 40 sec-
onds. Given the animated nature of ASD, taking an average
of around 40 seconds appears reasonable. If a participant
fails to identify a digit, she has to wait for the loop to re-
turn to the same frame again. With an animation loop of
30 seconds, users who did not succeed in the ﬁrst time could
take close to 60 seconds. It is a bit surprising that HDD takes
as long as ASD. This is due to a combination of the need to
1t and p are values used in the t-test to indicate whether a
result is statistically signiﬁcant; t denotes how many stan-
dard deviations, and p is the probability; larger t and smaller
p mean higher signiﬁcance.
 0 2 4 6 8 10 12 0 2 4 6 8 10 12 14 16 18 20 0 2 4 6 8 10 12 0 2 4 6 8 10 12 14 16 18 20BSDHDDHTDEDD612(a) Confusing Patterns
(b) Valid Patterns
Figure 7: Confusing Patterns and their correspond-
ing Valid Patterns
recognize two digits and to do the extra arithmetic step. HTD
takes the longest, with around 50 seconds per authentication
session.
Does practice make perfect? From ﬁgure 9(a), we can
see that, in most cases, the completion time decreases as
the evaluation proceeds. The completion time of the last
session is less than the ﬁrst one in all protocols (t signiﬁcant
at p < .02). However, in terms of accuracy (Figure 9(b)), it
appears that for EDD and ASD, the accuracy improves. For
HDD and HTD, the accuracy rates change more erratically.
In particular, in the last session of HTD, the accuracy rate
drops by a large value. One possible reason is that partic-
ipants lost their patience at the last authentication session
after performing twenty or so additions of three single-digit
numbers.
Overall Assessment. Our results suggest that HDD oﬀers
similar usability as ASD, but with higher security. However,
the level of security oﬀered by HDD is still far from satisfac-
tory. While HTD oﬀers some security enhancement over HDD,
this comes with signiﬁcant usability cost.
How “Random” is EDD? Among all the participants as-
signed to EDD or its variant, only a small amount (2%) of
participants always choose either the left or the right digit
displayed in a frame consistently. Roughly, half of the par-
ticipants (i.e., 44%) randomly choose between the left and
right digits. They choose the left digit roughly with proba-
bility 0.4 to 0.6. The distribution of the probability a partici-
pant chooses the left digit is similar to a normal distribution.
This ﬁnding is interesting due to the fact that it contradicts
the belief that the probability of the left digit being picked
is higher.
Inﬂuence of confusing patterns. We evaluated the inﬂu-
ence of the confusing patterns (CP) on usability. As shown
in Figure 8, removing CP helps increase the users’ accuracy
for EDD (t = 2.982, p = 0.004), and at the same time, decrease
the completion time for HDD (t = −1.649, p = 0.1) and EDD
(t = −2.152, p = 0.03). For the rest of the protocols, the
impact of removing CP in the context of accuracy or com-
pletion time is not substantial.
8. RELATED WORK
Human Identiﬁcation Protocols.
The ﬁrst theoreti-
cal foundation of human identiﬁcation protocol (HIP) dates
back to the work by Matsumoto and Imai [23]. However,
their scheme was broken by Wang et al. [34].
Hopper and Blum [18] proposed to use a NP-hard “learn-
ing parity with noisy” (LPN) problem. Users can compute
inner product of a secret bit-string and a challenge bit-string