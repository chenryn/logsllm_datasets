# Corrigendum: Cloud Provider Connectivity in the Flat Internet

**Authors:**
- Todd Arnold†
- Jia He†
- Weifan Jiang†
- Matt Calder‡†
- Italo Cunha♮†
- Vasileios Giotsas◦
- Ethan Katz-Bassett†

**Affiliations:**
- †Columbia University
- ‡Microsoft
- ♮Universidade Federal de Minas Gerais
- ◦Lancaster University

## Abstract
This corrigendum corrects and extends our results on the benefits of peer locking in mitigating the propagation of route leaks on the Internet, as originally published in [2]. The updated results show even greater benefits of peer locking than initially reported. An extended analysis covering additional peer locking deployment scenarios demonstrates that partial deployments also significantly reduce the propagation of leaked routes.

## CCS Concepts
- Networks → Logical / virtual topologies; Public Internet; Network architectures; Topology analysis and generation.

## Keywords
Internet topology, AS relationships, Routing, Traceroute, BGP

## 1. Introduction
Our original results correctly filtered leaked routes announced directly to ASes deploying peer locking. However, they incorrectly allowed routes leaked to ASes without peer locking to propagate through ASes with peer locking. This led to an underestimation of the benefits of peer locking. Despite this, the original results already indicated significant reductions in the propagation of leaked routes, so the overall conclusions remain unchanged. This corrigendum presents the corrected results.

Figures 7, 8, and 9 replace the corresponding figures in the original paper and show the increased resilience from peer locking. We have made corresponding changes to Section 8.2 to reflect the new results in Figures 7 and 8. Although Figure 9 has been updated, the discussion in Section 8.3 remains unchanged. For completeness, we include the updated Section 8.2 and the unchanged Section 8.3 below.

## 8.2 Resilience vs Peering Footprint
We ran simulations where each cloud provider's routes were leaked by a misconfigured Autonomous System (AS). We considered different announcement configurations for the cloud providers. Each configuration was simulated 5000 times, with the misconfigured AS chosen at random. Figure 8 shows the cumulative distribution function for the fraction of detoured ASes (i.e., those ASes that route to the misconfigured AS).

The misconfigured AS always leaks routes to all its neighbors. The "announce to all" line shows results when Google announces its routes to all neighbors. For comparison, the "average resilience" line shows the average fraction of ASes detoured for a random (legitimate) origin AS and a random misconfigured AS. For each of 200 randomly chosen misconfigured ASes, we randomly chose 200 victim origin ASes and calculated their average resilience. Our results show that Google's footprint provides significantly stronger resilience compared to a random origin AS.

Manually inspecting cases where the leaker attracts traffic from more than 22% of ASes, we found leakers with multiple well-connected providers (e.g., Tier-1 and Tier-2 ISPs). Google peers with many networks, and these networks will prefer leaked routes from customers over peer routes from Google. To verify this, we also show results for a scenario where Google announces to all its neighbors, and different subsets of Google’s neighbors deploy filters such that they discard routes for Google’s prefixes received from any network other than Google (a.k.a. peer locking [4]), limiting the propagation of leaked routes. We consider three scenarios in terms of which neighbors deploy peer locking: Tier-1 neighbors, Tier-1 and Tier-2 neighbors, and all neighbors.

Figure 8 indicates that peer locking Tier-1 and Tier-2 neighbors would limit even the worst leaks to 20% of the ASes in the Internet, and global peer locking would make Google virtually immune to route leaks.

Figure 8 also shows results simulating Google only announcing its prefixes to Tier-1 and Tier-2 ISPs (including its provider in the September 2020 dataset [3], Tata). This scenario, which ignores Google’s rich peering with lower tier and edge ASes, shows significantly reduced resilience against route leaks. In fact, since Google peers with most Tier-1 and Tier-2 ISPs (instead of buying transit), Google’s resilience in this configuration is worse than that of a random origin AS. While adding peers improves resilience against route leaks by making routes shorter, changing a relationship such that an AS receives a route from a peer rather than from a customer decreases resilience as it makes announcements less preferred.

Figures 7a to 7d are similar to Figure 8 and show the fraction of ASes detoured when Microsoft, Amazon, IBM, and Facebook announce their routes under different configurations. The "average resilience" line is the same in all graphs. The results show that all cloud providers are resilient to route leaks. Peer locking is slightly more effective for Google because it has more peers and fewer transit providers; conversely, other cloud providers would be more resilient to leaks than Google if they announced their routes only to Tier-1, Tier-2, and providers.

## 8.3 Fraction of Users Impacted
Figure 9 shows the fraction of users whose ASes have detoured routes for different route announcement configurations from Google. Figure 9 is similar to Figure 8 but weights detoured ASes by their estimated population, as given by APNIC’s population database [1]. Results are similar to the fraction of ASes detoured, with a slight skew to the left, indicating that some of the ASes that are detoured serve a relatively small fraction of users.

## References
[1] Asia-Pacific Network Information Centre (APNIC). [n.d.]. Visible ASNs: Customer Populations (Est.). https://stats.labs.apnic.net/aspop/.

[2] Todd Arnold, Jia He, Weifan Jiang, Matt Calder, Italo Cunha, Vasileios Giotsas, and Ethan Katz-Bassett. 2020. Cloud Provider Connectivity in the Flat Internet. In Proc. ACM Internet Measurement Conference.

[3] CAIDA. [n.d.]. CAIDA Serial-2 Dataset. http://data.caida.org/datasets/as-relationships/serial-2/.

[4] NTT. 2016. Deployment of NTT “Peer Locking” Route Leak Prevention Mechanism. http://instituut.net/~job/peerlock_manual.pdf.

**Figures:**
- Figure 7: Percent of detoured ASes when cloud providers announce routes under different scenarios while a randomly selected misconfigured AS leaks the cloud provider’s prefix.
- Figure 8: Percent of detoured ASes when Google announces routes under different scenarios while a randomly selected misconfigured AS leaks one of Google’s prefixes. The results show that Google’s peering footprint makes it resilient against route leaks.
- Figure 9: Percent of users in detoured ASes when Google announces routes under different scenarios. The results show that Google’s peering footprint protects a large fraction of the user population from route leaks.