Question: Given the code snippet below, which modification would NOT prevent the exploitation of a path traversal vulnerability?


my $dataPath = "/users/cwe/profiles";
my $username = param("user");
my $profilePath = $dataPath . "/" . $username;
open(my $fh, "<", $profilePath) || ExitError("profile read error: $profilePath");


"A": "Sanitizing the 'username' parameter by removing any '../' sequences before appending it to the data path.",
"B": "Replacing the concatenation of '$dataPath' and 'username' with a hardcoded path that does not include user input.",
"C": "Adding an allowlist verification step to ensure 'username' corresponds to an existing profile within a predefined directory.",
"D": "Validating that 'username' is alphanumeric only, without ensuring it does not contain directory traversal sequences."
Answer: D