# 间谍软件取证与逆向分析

## 摘要
目前，危害个人机密资料和系统安全的恶意程序以各种方式无孔不入地进入我们的电脑。当我们上网下载程序、接收电子邮件等时，经常会遇到不知档案是否为恶意程序的情况，而防毒软件也未出现警告。在这次讲座中，我们将讲解一些案例，并介绍静态和动态分析未知程序的技巧。

## 关于讲师
- **姓名**：PK
- **职位**：TWCERT/CC 鉴识实务班讲师
- **邮箱**：pk46(at)aptg.net

## 目录
1. 计算机鉴识
2. 为什么需要间谍软件鉴识
3. 代码逆向工程
4. 反逆向技术
5. 间谍软件逆向
6. 结论

## 1. 计算机鉴识
### 什么是计算机鉴识？
计算机鉴识是一种运用专业的分析与调查技术，将可能成为证据的资料（又称数字证据）进行收集、鉴别、分析与保存的过程，用以在法庭上呈现。狭义地说，就是从电脑安全事件发生后，所进行的一系列寻找数字证据的活动。

### 数字证据
数字证据是任何可能的信息，并能够以二进制（数字）的方式传输或储存，包括网络封包、数字照片、电子邮件、内存数据等。

### 鉴识过程概述
- **收集 (Acquisition)**
  - 实时数据收集 (Volatile/Non-Volatile)
  - 收集基于网络的证据
- **保存 (Preservation)**
  - 鉴定复制
  - 证据处理 (哈希、标签)
- **鉴定 (Identification)**
  - 鉴定分析
  - 调查 Windows/Unix 系统
  - 分析网络流量
- **评估 (Evaluation)**
  - 鉴定直觉/感觉
- **呈现 (Presentation)**
  - 编写计算机鉴识报告

## 2. 为什么需要间谍软件鉴识
### 不良网站
- 哪里有流氓网站？有多流氓？
- 你是否知道自己访问的是流氓网站？

### 不良应用程序
- 我的电脑怪怪的，但是我又不知道发生了什么事？而我的防毒软件也没有出现任何异常或警讯。
- 电脑资源始终不够用？难道我的电脑有怪兽？还是小马？

### 间谍软件鉴识
- **定义**：间谍软件鉴识是计算机鉴识的一部分，主要针对一些未知档案或程序的鉴定分析。当我们进行电脑安全事件调查时，如黑客攻击案件，可能会遇到黑客部署的恶意程序，此时我们就必须手动鉴别并分析这些文件，这个过程称为间谍软件鉴识或恶意软件鉴识。
- **静态分析**
  - 查看 ASCII 和 Unicode 字符串
  - 反汇编代码
  - 确定文件类型 (PE/NE/ELF/COFF)
- **动态分析**
  - 调试
  - 监控 (创建沙盒环境)
- **在线研究**
  - 确定该工具是否在计算机安全或黑客网站上公开可用
- **源代码审查**
  - 如果拥有源代码或通过在线研究确定了源代码

## 3. 代码逆向工程
### 什么是代码逆向工程
- **逆向工程 (RE)**：通过分析一个系统来创建更高抽象层次的表示。
- **代码逆向工程 (RCE)**：分析和反汇编软件系统以理解其设计、组件和内部工作原理。RCE 还可以让我们看到运行程序时无法直接观察到的隐藏行为或尚未激活的行为。

### 代码逆向工程的类型
- **安全相关的逆向**
  - 恶意软件
  - 加密算法
  - 数字版权管理
  - 审计程序二进制文件
- **软件开发中的逆向**
  - 与专有软件实现互操作性
  - 开发竞争软件
  - 评估软件质量和健壮性

### 逆向工具
- **十六进制编辑器**
  - UltraEdit
  - Hex Workshop
  - WinHex
- **反汇编器**
  - IDA Pro
  - W32DASM
- **反编译器**
  - DJ Decompiler
- **调试器**
  - OllyDbg
  - Soft-ICE
- **系统监控工具**
  - API Monitor
  - FileMon
  - RegMon
- **PE 工具**
  - PEiD
  - PEDitor
  - LoadPE

## 4. 反逆向技术
- **消除符号信息**
  - 清除符号名称
  - 通过序号导出函数
- **混淆程序**
  - 垃圾代码
  - 虚拟机
- **嵌入反调试代码**
  - isDebuggerPresent API
  - CreateFIleA API
- **代码加密**
  - 简单 XOR/ADD 加密
  - 打包器和保护器
    - ASPack
    - PECompact
    - UPX
    - FSG
    - Petite
    - PE-PACK
    - ASProtect
    - ACProtect
    - Armadillo
    - EXECryptor
    - EXE Stealth
    - FoxLock
    - Krypton
    - tElock
    - SDProtector
    - Themida
    - VMProtect
    - Xtreme-Protector

### 代码加密
- **简单 XOR/ADD 加密**
  - A xor 0 = A
  - A xor B = C
  - A xor C = B
- **打包器和保护器的优势**
  - 文件大小通常更小
  - 抗破解
  - 抗基于模式的防病毒程序

### 什么是加壳
- **PE 文件**
  - 在硬盘上存储
  - 通过加壳减小文件大小
  - 当执行时，解压存根会解压缩 PE 文件
  - 解压缩完成后跳转到原始入口点 (OEP)

通过以上内容，我们可以更好地理解和应对恶意软件，提高系统的安全性。