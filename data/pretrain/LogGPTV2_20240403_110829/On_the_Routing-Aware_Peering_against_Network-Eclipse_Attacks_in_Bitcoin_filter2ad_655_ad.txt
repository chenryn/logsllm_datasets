D
C
10 4
10 6
10 8 10 10
0
10 0 10 1 10 2 10 3 10 4 10 5
0
10 0 10 1 10 2 10 3 10 4 10 5
F
D
C
1
0.8
0.6
0.4
0.2
0
Figure 7: Cumulative distribution of shadow and hidden-
shadow IPs in terms of their number of IPs, /16 preﬁxes, and
ASes.
Figure 8: Number of shadow and hidden-shadow IPs in each
AS from one experiment with a speciﬁc adversary (AS3356)
and a victim (located in AS2637). The size of rectangles
indicates the number of shadow IPs, and their darkness shows
the ratio of hidden-shadow IPs to shadow IPs.
ASes, and victims are 12 PEERING servers.7 We compare
the shadow IPs and hidden-shadow IPs in terms of the CDF of
IP address count in each type and the number of /16 preﬁxes
and unique ASes hosting those IPs. Figure 7 shows that the
number of hidden-shadow IPs is signiﬁcantly smaller than
the number of shadow IPs; for instance, there are only 24
thousand hidden-shadow IPs compared to 6 million shadow
IPs at the median case, see the ﬁrst plot. Overall, the hidden-
shadow IPs are not plentiful; e.g., less than 15% of cases have
more than a million hidden-shadow IPs, see the dotted line.
Hidden-shadow IPs are also not well-diversiﬁed — in the vast
majority of cases (e.g., 90%), they are hosted in only less
than 120 distinct groups of /16 preﬁx and 80 unique ASes.
This is much more concentrated than the shadow IPs, which
are easily distributed in a few thousands of preﬁx groups and
ASes in the majority of cases.
For better visualization of how hidden-shadow IPs are dis-
tributed, we plot the details of hidden-shadow IP allocation
and their relationship with shadow IPs in a single attack ex-
ample, where the attacker is Level3 (AS3356) and the victim
node locates at Georgia Tech (AS2637), as shown in Fig-
ure 8. The number of shadow IPs in each AS is proportional
to the area of rectangles and the ratio of hidden-shadow IPs
to shadow IPs in that AS (up to 100%) is indicated by the
darkness of the rectangles. In this example, shadow IPs are
7We choose this evaluation set because the control-plane route look-up
scheme has the highest accuracy, see Section 5.1.
distributed in several thousands of ASes; yet, they tend to
concentrate at only a handful of them — more than half of
them belong to less than 10 ASes. Interestingly, Figure 8
also shows that in the majority of ASes, either all shadow
IPs are also hidden-shadow IPs (i.e., RAP misidentiﬁes all
shadow IPs in this AS) or none of them is (i.e., RAP correctly
identiﬁes all shadow IPs).
Exploiting hidden-shadow IPs to undermine RAP. When
the victim implements RAP, the Erebus adversary can adap-
tively prioritize inserting the hidden-shadow IPs to the victim
depending on the RAP defenses’ publicly available conﬁgura-
tion. For example, if the victim allows some of its estimated
connections to share a common AS (e.g., τ = 5), the attacker
can select some regular, non-hidden-shadow IPs along with
hidden-shadow IPs so that there are more attack IPs and they
also become more diversiﬁed. When a low threshold τ is
selected, the adversary may exclusively select and use hidden-
shadow IPs to attack the victim. Since hidden-shadow IPs
are quite limited in the majority of cases, there might be in-
sufﬁcient distinct IPs to poison the victim with a desirable
attack rate (e.g., 2 IP/s). When this happens, the adversary re-
peatedly advertises the same hidden-shadow IP address from
multiple source IP addresses to increase the appearance of a
hidden-shadow IP in the victim’s peer database.
5.3 How (in)effective is RAP?
We use the same evaluation framework described in Sec-
tion 3.2, which includes about 6,000 attack scenarios, to eval-
uate the realistic impacts of RAP defense against the Erebus
attacker who can exploit the hidden-shadow IPs. For the incor-
poration of RAP in the emulator, we choose the control-plane
look-up mechanism because it achieves the lowest Miss Rate
of only 6%. When the control-plane route look-up is not
available, we synthesize the control-plane look-up results by
making some randomly selected preﬁxes containing hidden-
shadow IPs exclusively, adding a Miss Rate of 6% to the
data-plane routes. We conﬁgure RAP to have the median
threshold of τ = 5 (i.e., the victim allows an AS to appear
in at most ﬁve connections) in this evaluation and defer the
detailed evaluation of other τ thresholds to Section 6.2.
Contrary to the common belief, the RAP defense does not
demonstrate excessively powerful effectiveness. Figure 9
shows that when the victims do not implement RAP, the
attacker hijacks all of their connections within 350 days in
93% of attack instances, and when RAP is included, 60% of
instances are still successful, which is 33 percentage points of
reduction. The RAP defense generally extends the required
attack duration, yet, it is not signiﬁcant. For example, to
isolate 50% of the victims, the attackers need about 60 days
when RAP is not deployed and no more than 100 days when
the victims implement RAP. Moreover, considering the victim
nodes’ lifespan, the attack success rate when the victims
implement RAP is still 33%, which is only 20 percentage
1262    30th USENIX Security Symposium
USENIX Association
1
0.8
0.6
0.4
0.2
n
o
i
t
c
n
u
f
n
o
i
t
u
b
i
r
t
s
i
d
e
v
i
t
a
l
u
m
u
C
0
0
50
1
0.8
0.6
0.4
0.2
0
e
t
a
r
s
s
e
c
c
u
s
k
c
a
t
t
A
Without RAP
With RAP
250
300
350
Without RAP
With RAP
100
Attack execution time (days)
200
150
(a) CDF of required attack time.
(b) Attack success rate.
Figure 9: Cumulative distribution of the required execution
time and the attack success rate when Bitcoin client imple-
ments RAP.
points lower than the baseline scenario, see Figure 9b. These
results demonstrate that the RAP defense’s robustness turns
out to be insigniﬁcant when the Erebus attacker exploits the
hidden-shadow IPs, unfortunately.
To better understand the effectiveness of the Erebus attacks
with hidden-shadow IPs, we investigate how hidden-shadow
IPs get selected to be the peers of the victim. Figure 10 shows
how hidden-shadow IPs gradually occupy the new and tried
tables in three scenarios, in which the adversary utilizes a
small, medium, and large set of 10 thousand, 2.5 million, and
130 million hidden-shadow IPs, respectively. Note that we
show only the ratio of legitimate reachable IPs and hidden-
shadow IPs in the two tables in Figure 10 and exclude the
non-hidden-shadow IPs because they are identiﬁed by the
RAP defense and can occupy up to τ = 5 connections, making
the rest of the connections contested by legitimate reachable
IPs and the hidden-shadow IPs. Figure 10 shows that in all
three cases, the hidden-shadow IPs eventually dominate the
legitimate ones. With the medium and large set of hidden-
shadow IPs, the adversary can occupy the vast majority (e.g.,
> 95%) of new table slots as well as the large part of the IPs
(e.g., 70–80%) in the tried table, see Figure 10b and 10c.
With these highly dominated ratios, it is easily understand-
able that the attacks can be successful within a few weeks.
Figure 10a describes an interesting attack instance in which
only 10 thousand repeatedly-advertised hidden-shadow IPs
can dominate the legitimate IPs in the new table and occupy
a non-negligible ratio in the tried table. This demonstrates
that even a small amount of errors (e.g., 10 thousand misiden-
tiﬁed IPs) can circumvent the RAP defenses.
5.4 RAP in Bitcoin vs. RAP in Tor
The RAP approach turns out to be a no silver bullet for the
Erebus attack in Bitcoin, particularly because the infrequent
route inference errors still allow the Erebus adversaries to ﬁnd
and use tens or hundreds of thousands of Sybil identities for
eclipse attacks. We investigate whether the same weakness of
the RAP approaches also seriously undermines the defense
efﬁcacy of previous RAP-based defenses in similar Tor at-
Table 3: Attack success rates when victims implement combi-
nations of two tweaks. Green indicates that the combination
is better than both individual tweaks while yellow indicates
that the combination is better than only one of them.
Baseline: 0.547
T1
T2
T3
T4
T5
T6
T1
0.536
T2
0.422
0.386
T3
0.410
0.409
0.414
T4
0.403
0.311
0.301
0.406
T5
0.390
0.309
0.291
0.247
0.402
T6
0.591
0.427
0.449
0.408
0.387
0.609
tacks [1, 7, 45, 53], and ﬁnd that the same weakness (despite
its existence) cannot be exploited in Tor. The biggest reason
is that, unlike the Bitcoin P2P network, Tor is not a fully
permissionless system. Tor is only partially permissionless
in the sense that anyone can volunteer to run Tor relays but
new relays must go through some rigorous bandwidth review
processes by the Tor infrastructure before they join the Tor
P2P network [56]. Therefore, even if a network attacker in
Tor ﬁnds large numbers of hidden-shadow IPs, she cannot
use them as her Sybil identities. In fact, the limited effect
of route-inference errors in RAP defenses in Tor has been
studied in a recent work [32], and our work on RAP in Bitcoin
shows a striking contrast.
6 Practical Integrated Countermeasures
In previous sections, we discuss the limitations of several sim-
ple protocol patches and the more complex RAP approaches,
and our empirical studies show that none of them sufﬁciently
mitigate the Erebus attacks alone. The next seemingly obvi-
ous step is to compose some of these available countermea-
sures hoping that their overall effectiveness will be sufﬁcient
for handling the attacks in most practical scenarios. However,
such an integrated countermeasure is non-trivial to design
for two reasons: (1) the defense performance of available
countermeasures seems non-monotonic; and (2) there is no
one-size-ﬁts-all RAP conﬁguration in practice. This section
makes several practical suggestions to Bitcoin, including ﬁnd-
ing a cost-effective combination of countermeasures (§6.1),
and the location-speciﬁc optimal conﬁguration for RAP oper-
ation (§6.2).
6.1 Balancing the Efﬁcacy and Costs of Sim-
ple Countermeasures
Erebus countermeasures’ efﬁcacy is measured in the required
Erebus attack execution time, which can be translated into the
attack success rate in conjunction with the Bitcoin node churn
rate; see Section 3.2 for details. The cost of countermeasures
is less obvious to measure as it involves various forms of costs
incurred in different solutions; yet, one clear rule of thumb is
that the more countermeasures are activated, the more costly
the overall integrated countermeasure.
USENIX Association
30th USENIX Security Symposium    1263
new table
tried table
100
%
50
100
50
Legitimate reachable IPs
new table
Hidden-shadow IPs
tried table
100
%
50
100
50
new table
tried table
100
%
50
100
50
0
0
20
40
60
0
0
20
40
60
0
0
20
40
60
80
0
0
20
40
60
80
0
0
20
40
0
0
20
40
Attack duration (days)
Attack duration (days)
Attack duration (days)
(a) Small set: 10K hidden-shadow IPs
(b) Medium set: 2.5M hidden-shadow IPs
(c) Large set: 130M hidden-shadow IPs
Figure 10: Ratios of hidden-shadow IPs (orange) and legitimate reachable IPs (gray) in new and tried tables when adversaries
ﬁnd different numbers of hidden-shadow IPs.
Balancing the efﬁcacy and costs of the available simple
solutions is, unfortunately, hard. The main reason is the non-
monotonicity of the efﬁcacy of these countermeasures. To be
speciﬁc, activating more countermeasures does not necessar-
ily guarantee higher defense performance in terms of attack
success rate. Thus, in practice, we need to evaluate many
combinations and select a set of countermeasures given the
allowed countermeasure costs. For example, if only T1, T3,
and T5 are allowed to run in a Bitcoin node, the best combi-
nation of these three simple countermeasures should be found
after exhaustive evaluations of all possible combinations.
This section shows the non-monotonicity of these simple
countermeasures and presents an example of choosing the
best set of countermeasures.
Pairwise evaluation of T1–T6. To investigate the impact of
the tweaks on each other’s effectiveness, we test the com-
bination of any two tweaks using our evaluation framework
(See Section 3.2) and show the attacks’ success rates against
clients implementing such combinations in Table 3. Overall,
the tweaks T4 and T5 demonstrate stronger defense perfor-
mance when combining with other tweaks than they do alone.
For instance, combining T4 and T5 brings the attack success
rate down to 24.7%, which is 30 percentage points lower
than the baseline (i.e., no countermeasures deployed). The