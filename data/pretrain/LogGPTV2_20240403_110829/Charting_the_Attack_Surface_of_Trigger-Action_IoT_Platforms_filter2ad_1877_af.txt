speciic security postures. Diferent from the network-based [79, 89],
platform-based [39] and app-based [49, 87] IoT-security solutions
which detect vulnerabilities at runtime, iRuler leverages NLP and
model checking to statically check vulnerabilities before an app
is installed and executed. Celik et al. [29] use static analysis to
identify sensitive data lows in IoT apps, while our work studies
vulnerabilities caused by the interaction of multiple trigger-action
rules. Several other studies consider challenges related to access
control in IoT [44, 50, 74, 77].
Researchers have stud-
Trigger-Action Programming (TAP) in IoT.
ied how smart homes [33, 85, 88] and commercial buildings [66] can
be customized using TAP, and the usability of existing TAP frame-
works to propose guidelines for developing more user-friendly
interfaces [46, 83]. Ur et al. [86] create a dataset of IFTTT recipes
and analyze diferent aspects of the recipes. Bastys et al. [23, 24]
discuss user privacy issues in IFTTT and developed a framework to
detect private data leakage to attacker controlled URLs. However,
they concentrate only on the privacy violations in the ilter code
of individual applets, not the interaction between applets. Fernan-
des et al. [40] consider the efect of OAuth-related overprivilege
issues on the IFTTT platform and proposed a way to decouple the
untrusted cloud from trusted clients on the user’s personal devices.
FlowCog [71] extracts app-semantics
NLP-aided Flow Analysis.
and contextual information that deines an android app behavior,
and uses NLP to correlate the app behavior with the information
lows in the app. Other work has used NLP to locate sensitive infor-
mation in mobile apps and track information leakage to third-party
libraries [35, 67]; evaluate the semantic gap between mobile app
descriptions and app permissions [72], and match IoT app descrip-
tion with actual app behavior [84]. Ding et al. [36] use keyword
identiication in the app description of SmartThings apps to detect
app interaction-chains through physical channels. Surbatovich et
al. [81] deine an information-low lattice to analyze potential se-
crecy or integrity violations in IFTTT recipes. While their work
manually rewrites and labels triggers and actions to identify rule-
interactions chains, our approach uses NLP to automate this process.
There are also eforts to build semantic parsers that creates exe-
cutable code from IFTTT-style natural language recipes [53, 73] ,
which are orthogonal to our contributions.
IoT automation errors have been studied
IoT Automation Errors.
from various aspects, including analyzing logic inconsistencies and
supporting end-user debugging to resolve them [20, 34, 51, 52, 90] as
well as assisting IoT app developers with GDPR [58]. Chandrakana
et al. [68] identify that too few triggers in automation rules is a
source of errors and security issues. They propose a tool to deter-
mine a necessary and suicient set of triggers based on the actions
written by end users. However, their tool analyzes each rule in isola-
tion while we consider vulnerabilities from rule interactions. Some
work has also been done on detecting and resolving automation
conlicts in smart home and oice environments [59, 60, 65, 66, 80];
in this work, we consider a broader class of vulnerabilities.
Several recent studies have proposed to
IoT Properties Checking.
check security or safety properties of IoT when multiple rules/apps
are enabled. We compare our approach with other existing ap-
proaches in diferent aspects in Table 5; iRuler is among the works
that support the more advanced features of TA platforms (Multiple
Actions), incorporates a broad set of characteristics into its model
(Environment Modeling, Device Location, Time Modeling, Support
Checking Other Properties), and identiies new classes of inter-rule
vulnerabilities.7 Conversely, these works also provide several use-
ful properties that we did not consider in iRuler. AutoTap [90]
presents a method for verifying coniguration properties as ex-
pressed by novice users, and joins MenShen [28], Salus [51], and
SIFT [52] in supporting automated creation and repair of rules
(Rule Writing). Systems like Soteria [30], IoTSan [70], and Home-
Guard (arXiv preprint only: [32]) are based on source code analysis
of IoT apps and can therefore consider additional factors such as
iner-grained reduction of state explosion and speciic malicious
input sequences. IoTGuard [31] instruments apps to check security
and safety properties at runtime. Conversely, rather than leverage
source code analysis, instrumentation, or a priori knowledge of
app behaviors, our technique uses an NLP-based approach to infer
information low. As a result, iRuler is necessarily less precise
and ine-grained in its analysis but has the advantage of working
out-of-the-box on commodity IoT platforms where source code is
typically unavailable.
7We show the vulnerabilities considered by other work in Table 6 in Appendix B.
Session 7A: Internet of ThingsCCS ’19, November 11–15, 2019, London, United Kingdom1450Table 5: Approaches for checking security and safety properties of IoT rules/apps. [31] checks properties at runtime while all others perform
static checking. These systems all have diferent aims and advantages; this table focuses speciically on the similarity of their design to iRuler.
Multiple
Actions
Environment
Modeling
Device
Location
Time
Modeling
Support Checking
Other Properties
# Inter-rule Vuln
Types Considered
Rule
Writing
Access Required
iRuler
Soteria [30]
IoTSan [70]
AutoTap [90]
MenShen [28]
Salus [51]
SIFT [52]
HomeGuard [32]
IoTGuard [31]
Surbatovich et al. [81]
✓
✓
✓
✗
✗
✗
✗
✓
✓
✗
✓
✗
✗
✗
✓
✓
✓
✗
N/A
✗
✓
✗
✗
✗
✗
✓
✗
✗
✗
✗
✓
✗
✓
✓
✓
✓
✓
✗
N/A
✓
✓
✓
✓
✓
✓
✓
✗
✓
8
3
2
N/A
N/A
N/A
1
5
3
✗
1. Coniguration factors are not considered.
✗
N/A
2. Assumes knowledge of app behaviors is available a priori.
✗
✗
✗
✓
✓
✓
✓
✗
✗
✗
Applet Descriptions, Conig Data
App Source Code1, Device Handler Code
App Source Code, Conig Data
App Behaviors,2 Device Speciications
App Behaviors,2 Device Schema
App Behaviors,2 Conig Data, Device Schema
App Behaviors,2 Device Metadata
App Source Code, Conig Data
App Source Code, Instrumentation
Applet Descriptions1
10 CONCLUSION
While the trigger-action programming paradigm promotes the cre-
ation of rich and collaborative IoT applications, it also introduces
potential security and safety threats if users do not take precautions
in combining these apps. In this work, we generalize and examine
inter-rule vulnerabilities in trigger-action IoT platforms, presenting
a tool for their automatic detection. iRuler combines the power
of SMT solving and model checking to model the IoT systems and
check vulnerable properties. As a related contribution, we have also
demonstrated an NLP-aided technique for inferring information
low between rules in proprietary trigger-action platforms.
ACKNOWLEDGEMENTS
This work was supported in part by NSF CNS 13-30491, NSF CNS
17-50024, and NSF CNS 16-57534. The views expressed are those of
the authors only. We appreciated valuable insights from our CCS
reviewers and our shepherd, Blase Ur.
REFERENCES
[1] 2014. Gartner Says the Internet of Things Will Transform the Data Center.
http://www.gartner.com/newsroom/id/2684616.
[2] 2015. Critical Flaw identiied In ZigBee Smart Home Devices. https://goo.gl/
BFBa1X.
[3] 2016. Mirai Attacks. https://goo.gl/QVv89r.
[4] 2018. Apple HomeKit. http://www.apple.com/ios/home.
[5] 2018. IFTTT. https://ifttt.com.
[6] 2018.
IFTTT Home Security Applets. https://ifttt.com/search/query/home%
20security.
[7] 2018. Iris by Lowe’s. https://www.irisbylowes.com/.
[8] 2018. Microsoft Flow. https://low.microsoft.com.
[9] 2018. Named Entity Recognition (NER) and Information Extraction (IE). https:
//nlp.stanford.edu/ner/.
[10] 2018. openHAB. https://www.openhab.org/.
[11] 2018. SmartThings. https://www.smartthings.com.
[12] 2018. Stanford CoreNLP. https://stanfordnlp.github.io/CoreNLP.
[13] 2018. The Maude System. http://maude.cs.illinois.edu/w/index.php?title=The_
Maude_System.
[14] 2018. TypeScript. https://www.typescriptlang.org/.
[15] 2018. Wink. https://www.wink.com/.
[16] 2018. Word2Vec. https://code.google.com/p/word2vec.
[17] 2018. zapier. https://zapier.com/.
[18] 2019. GloVe: Global Vectors for Word Representation. https://nlp.stanford.edu/
projects/glove.
[19] 2019. Linear temporal logic. https://en.wikipedia.org/wiki/Linear_temporal_
logic.
[20] 2019. Supporting end-user debugging of trigger-action rules for IoT applications.
International Journal of Human-Computer Studies 123 (2019), 56 ś 69.
[21] 2019. Universal Grammatical Dependency Relation Deinitions.
http://
universaldependencies.org/u/dep/.
[22] O. Alrawi, C. Lever, M. Antonakakis, and F. Monrose. 2019. SoK: Security Evalu-
ation of Home-Based IoT Deployments. In 2019 2019 IEEE Symposium on Security
and Privacy (SP), Vol. 00. 208ś226.
[23] Iulia Bastys, Musard Balliu, and Andrei Sabelfeld. 2018. If This Then What?:
Controlling Flows in IoT Apps. In Proceedings of the 2018 ACM SIGSAC Conference
on Computer and Communications Security (CCS ’18). ACM, New York, NY, USA,
1102ś1119.
[24] Iulia Bastys, Frank Piessens, and Andrei Sabelfeld. 2018. Tracking Information
Flow via Delayed Output. In Secure IT Systems, Nils Gruschka (Ed.). Springer
International Publishing, Cham, 19ś37.
[25] Armin Biere, Alessandro Cimatti, Edmund Clarke, and Yunshan Zhu. 1999. Sym-
bolic model checking without BDDs. In International conference on tools and
algorithms for the construction and analysis of systems. Springer, 193ś207.
[26] Armin Biere, Alessandro Cimatti, Edmund M Clarke, Ofer Strichman, Yunshan
Zhu, et al. 2003. Bounded model checking. Advances in computers 58, 11 (2003),
117ś148.
[27] Piotr Bojanowski, Edouard Grave, Armand Joulin, and Tomas Mikolov. 2016.
Enriching Word Vectors with Subword Information. CoRR (2016).
[28] Lei Bu, Wen Xiong, Mike Chieh-Jan Liang, Shi Han, Shan Lin, Dongmei Zhang,
and Xuandong Li. 2018. Systematically Ensuring The Conidence of Real Time
Home Automation IoT Systems. TCPS (ACM Transactions on Cyber-Physical
Systems) (June 2018).
[29] Z. Berkay Celik, Leonardo Babun, Amit Kumar Sikder, Hidayet Aksu, Gang Tan,
Patrick McDaniel, and A. Selcuk Uluagac. 2018. Sensitive Information Tracking
in Commodity IoT. In 27th USENIX Security Symposium (USENIX Security 18).
USENIX Association, Baltimore, MD, 1687ś1704.
[30] Z. Berkay Celik, Patrick McDaniel, and Gang Tan. 2018. Soteria: Automated
IoT Safety and Security Analysis. In 2018 USENIX Annual Technical Conference
(USENIX ATC 18). Boston, MA, 147ś158.
[31] Z. Berkay Celik, Gang Tan, and Patrick D. McDaniel. 2019. IoTGuard: Dynamic
Enforcement of Security and Safety Policy in Commodity IoT. In 26th Annual
Network and Distributed System Security Symposium, NDSS 2019, San Diego, Cali-
fornia, USA, February 24-27, 2019.
[32] Haotian Chi, Qiang Zeng, Xiaojiang Du, and Jiaping Yu. 2018. Cross-App Inter-
ference Threats in Smart Homes: Categorization, Detection and Handling. CoRR
abs/1808.02125 (2018).
[33] Luigi De Russis and Fulvio Corno. 2015. HomeRules: A tangible end-user pro-
gramming interface for smart homes. In Proceedings of the 33rd Annual ACM
Conference Extended Abstracts on Human Factors in Computing Systems. ACM,
2109ś2114.
[34] Luigi De Russis and Alberto Monge Rofarello. 2018. A Debugging Approach for
Trigger-Action Programming. In Extended Abstracts of the 2018 CHI Conference
on Human Factors in Computing Systems (CHI EA ’18). ACM, New York, NY, USA,
Article LBW105, 6 pages.
[35] Soteris Demetriou, Whitney Merrill, Wei Yang, Aston Zhang, and Carl A. Gunter.
2016. Free for All! Assessing User Data Exposure to Advertising Libraries on
Android. In 23rd Annual Network and Distributed System Security Symposium,
NDSS 2016, San Diego, California, USA, February 21-24, 2016.
[36] Wenbo Ding and Hongxin Hu. 2018. On the Safety of IoT Device Physical Inter-
action Control. In Proceedings of the 2018 ACM SIGSAC Conference on Computer
and Communications Security (CCS ’18). ACM, New York, NY, USA, 832ś846.
[37] William Enck, Peter Gilbert, Byung-Gon Chun, Landon P. Cox, Jaeyeon Jung,
Patrick McDaniel, and Anmol N. Sheth. 2010. TaintDroid: An Information-low
Tracking System for Realtime Privacy Monitoring on Smartphones. In Proceedings
of the 9th USENIX Symposium on Operating Systems Design and Implementation
(OSDI’10).
[38] Earlence Fernandes, Jaeyeon Jung, and Atul Prakash. 2016. Security Analysis of
Emerging Smart Home Applications. In IEEE S&P.
Session 7A: Internet of ThingsCCS ’19, November 11–15, 2019, London, United Kingdom1451[39] Earlence Fernandes, Justin Paupore, Amir Rahmati, Daniel Simionato, Mauro
Conti, and Atul Prakash. 2016. FlowFence: Practical Data Protection for Emerging
IoT Application Frameworks. In USENIX Security.
[40] Earlence Fernandes, Amir Rahmati, Jaeyeon Jung, and Atul Prakash. 2017.
Decoupled-IFTTT: Constraining Privilege in Trigger-Action Platforms for the
Internet of Things. arXiv preprint arXiv:1707.00405 (2017).
[41] Earlence Fernandes, Amir Rahmati, Jaeyeon Jung, and Atul Prakash. 2018. De-
centralized Action Integrity for Trigger-Action IoT Platforms. In NDSS.
[42] Behrang Fouladi and Sahand Ghanoun. 2013. Honey, I’m home!!-Hacking Z-Wave
Home Automation Systems. Black Hat USA (2013).
[43] Z Ghahramani. 2015. Probabilistic machine learning and artiicial intelligence.
Nature 521, 7553 (May 2015), 452ś459.
[44] Weijia He, Maximilian Golla, Roshni Padhi, Jordan Ofek, Markus Dürmuth, Ear-
lence Fernandes, and Blase Ur. 2018. Rethinking Access Control and Authentica-
tion for the Home Internet of Things (IoT). In 27th USENIX Security Symposium
(USENIX Security 18). USENIX Association, Baltimore, MD, 255ś272.
[45] Grant Ho, Derek Leung, Pratyush Mishra, Ashkan Hosseini, Dawn Song, and
David Wagner. 2016. Smart Locks: Lessons for Securing Commodity Internet of
Things Devices. In ASIA CCS.
[46] Justin Huang and Maya Cakmak. 2015. Supporting mental model accuracy in
trigger-action programming. In Ubicomp. 215ś225.
[47] Mohit Iyyer, Varun Manjunatha, Jordan Boyd-Graber, and Hal Daumé III. 2015.
Deep Unordered Composition Rivals Syntactic Methods for Text Classiication.
In Proceedings of the 53rd Annual Meeting of the Association for Computational Lin-
guistics and the 7th International Joint Conference on Natural Language Processing
(Volume 1: Long Papers).
[48] Ranjit Jhala and Rupak Majumdar. 2009. Software model checking. ACM Com-
puting Surveys (CSUR) 41, 4 (2009), 21.
[49] Yunhan Jack Jia, Qi Alfred Chen, Shiqi Wang, Amir Rahmati, Earlence Fernan-
des, Z. Morley Mao, and Atul Prakash. 2017. ContexIoT: Towards Providing
Contextual Integrity to Appiied IoT Platforms. In NDSS.
[50] Sanghak Lee, Jiwon Choi, Jihun Kim, Beumjin Cho, Sangho Lee, Hanjun Kim,
and Jong Kim. 2017. FACT: Functionality-centric Access Control System for IoT
Programming Frameworks. In Proceedings of the 22Nd ACM on Symposium on