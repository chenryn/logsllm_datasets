## 0x00 前言
* * *
在Windows系统中，比较常见是从系统导出来的NTLM hash，通过Hashcat能够破解出明文密码。
Hashcat支持超过200种高度优化的hash算法，其中和NTLM
hash相关的有4个，分别为`NetNTLMv1`、`NetNTLMv1+ESS`、`NetNTLMv2`和`NTLM`。
NetNTLM具体是什么呢？又是如何获得的呢？本文受到byt3bl33d3r文章的启发，下面将结合自己的心得，介绍这部分内容
学习链接：
## 0x01 简介
* * *
  * NTLM hash和Net-NTLM hash区别
  * NTLM hash的加密方法
  * Net-NTLM hash的破解
## 0x02 NTLM hash
* * *
通常是指Windows系统下Security Account Manager中保存的用户密码hash
该hash的生成方法：
  1. 将明文口令转换成十六进制的格式
  2. 转换成Unicode格式，即在每个字节之后添加0x00
  3. 对Unicode字符串作MD4加密，生成32位的十六进制数字串
**实际测试：**
用户密码为`test123`
转换成十六进制的格式为`74657374313233`
转换成Unicode格式为`7400650073007400310032003300`
对字符串`7400650073007400310032003300`作MD4加密，结果为`c5a237b7e9d8e708d8436b6148a25fa1`
**注：**
MD4加密可使用工具HashCalc，如下图
下面使用mimikatz导出用户密码的hash，对比进行验证，结果相同，验证成功，如下图
在渗透测试中，通常可从Windows系统中的SAM文件和域控的NTDS.dit文件中获得所有用户的hash，通过Mimikatz读取lsass.exe进程能获得已登录用户的NTLM
hash
**补充：**
Windows Vista和Windows Server 2008以前的系统还会使用LM hash
LM hash的生成方法本文暂不介绍
自Windows Vista和Windows Server 2008开始,Windows取消LM hash
但某些工具的参数需要填写固定格式`LM hash:NT hash`，可以将LM hash填0(LM
hash可以为任意值)，即`00000000000000000000000000000000:NT hash`
## 0x03 Net-NTLM hash
* * *
通过是指网络环境下NTLM认证中的hash
NTLM认证采用质询/应答（Challenge/Response）的消息交换模式，流程如下：
  1. 客户端向服务器发送一个请求，请求中包含明文的登录用户名。服务器会提前存储登录用户名和对应的密码hash
  2. 服务器接收到请求后，生成一个16位的随机数(这个随机数被称为Challenge),明文发送回客户端。使用存储的登录用户密码hash加密Challenge，获得Challenge1
  3. 客户端接收到Challenge后，使用登录用户的密码hash对Challenge加密，获得Challenge2(这个结果被称为response)，将response发送给服务器
  4. 服务器接收客户端加密后的response，比较Challenge1和response，如果相同，验证成功
在以上流程中，登录用户的密码hash即`NTLM hash`，response中包含`Net-NTLM hash`
更多NTLM认证的资料可参考：
在NTLM认证中，NTLM响应分为NTLM v1，NTLMv2，NTLM session v2三种协议，不同协议使用不同格式的Challenge和加密算法
所以也就存在不同协议的Net-NTLM hash，即Net-NTLM v1 hash，Net-NTLM v2 hash
**实际测试：**
服务器：
  * IP： 192.168.62.139
  * 登录用户名： a
  * 登录密码： test123
客户端：
  * IP： 192.168.62.130
客户端通过命令行远程连接服务器，命令如下：
    net use \\192.168.52.139 /u:a test123