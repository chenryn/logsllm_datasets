@unapibageek - @ssantosv
Tracking Malware Developers
by Android “AAPT” Timezone Disclosure Bug
ROCK APPROUND THE CLOCK!
@unapibageek - @ssantosv
Sheila Ayelen Berta
Sergio De Los Santos
Security Researcher 
ElevenPaths
(Telefonica Digital cyber security unit)
Head of Innovation and Lab 
ElevenPaths 
(Telefonica Digital cyber security unit)
@unapibageek - @ssantosv
@unapibageek - @ssantosv
@unapibageek - @ssantosv
@unapibageek - @ssantosv
WHAT WE DID?
@unapibageek - @ssantosv
WHAT WE DID?
@unapibageek - @ssantosv
WHAT WE DID?
@unapibageek - @ssantosv
WHAT WE DID?
@unapibageek - @ssantosv
@unapibageek - @ssantosv
WHAT IS AAPT?
@unapibageek - @ssantosv
WHAT IS AAPT?
@unapibageek - @ssantosv
Aapt timezone
disclosure
@unapibageek - @ssantosv
Aapt timezone
disclosure
@unapibageek - @ssantosv
Aapt timezone
disclosure
@unapibageek - @ssantosv
Aapt timezone
disclosure
@unapibageek - @ssantosv
ANALYZING
SOURCE CODE
@unapibageek - @ssantosv
ANALYZING
SOURCE CODE
@unapibageek - @ssantosv
ANALYZING
SOURCE CODE
@unapibageek - @ssantosv
ANALYZING
SOURCE CODE
@unapibageek - @ssantosv
ANALYZING
SOURCE CODE
@unapibageek - @ssantosv
ANALYZING
SOURCE CODE
@unapibageek - @ssantosv
ANALYZING
SOURCE CODE
@unapibageek - @ssantosv
ANALYZING
SOURCE CODE
@unapibageek - @ssantosv
ANALYZING
SOURCE CODE
EVEN = 0
@unapibageek - @ssantosv
ANALYZING
SOURCE CODE
@unapibageek - @ssantosv
ANALYZING
SOURCE CODE
@unapibageek - @ssantosv
THE PROBLEM
BUG = LOCALTIME(0)
@unapibageek - @ssantosv
THE PROBLEM
BUG = LOCALTIME(0)
EXPECTED = LOCALTIME(TIMESTAMP)
@unapibageek - @ssantosv
runtime
analysis
@unapibageek - @ssantosv
runtime
analysis
@unapibageek - @ssantosv
runtime
analysis
@unapibageek - @ssantosv
runtime
analysis
@unapibageek - @ssantosv
runtime
analysis
@unapibageek - @ssantosv
WHY A TIMEZONE?
HOUR = UNIX EPOCH +/- TIMEZONE
Localtime():
@unapibageek - @ssantosv
WHY A TIMEZONE?
HOUR = UNIX EPOCH +/- TIMEZONE
E.g:
GMT +3 = UNIX EPOCH + 3Hs
GMT  -3  = UNIX EPOCH  - 3Hs
Localtime():
@unapibageek - @ssantosv
WHY A TIMEZONE?
AAPT  BUG = 0 +/- TIMEZONE
@unapibageek - @ssantosv
WHY A TIMEZONE?
AAPT  BUG = 0 +/- TIMEZONE
E.g:
GMT +3 = 0+3 =  01-01-80 03:00
GMT  -3  =  0-3  = 12-31-79 21:00
@unapibageek - @ssantosv
A LITTLE DETAIL
@unapibageek - @ssantosv
A LITTLE DETAIL
@unapibageek - @ssantosv
A LITTLE DETAIL
@unapibageek - @ssantosv
Offset table
GMT +0 = 01-01-80 00:00
GMT +1 = 01-01-80 01:00
GMT +2 = 01-01-80 02:00
GMT +3 = 01-01-80 03:00
GMT +4 = 01-01-80 04:00
GMT +5 = 01-01-80 05:00
GMT +6 = 01-01-80 06:00
GMT +7 = 01-01-80 07:00
GMT +8 = 01-01-80 08:00
GMT +9 = 01-01-80 09:00
GMT +10 = 01-01-80 10:00
GMT +11 = 01-01-80 11:00
@unapibageek - @ssantosv
Offset table
GMT +12/-12 = 01-01-80 12:00
GMT -11 = 12-31-80 13:00
GMT -10 = 12-31-80 14:00
GMT -9 = 12-31-80 15:00
GMT -8 = 12-31-80 16:00
GMT -7 = 12-31-80 17:00
GMT -6 = 12-31-80 18:00
GMT -5 = 12-31-80 19:00
GMT -4 = 12-31-80 20:00
GMT -3 = 12-31-80 21:00
GMT -2 = 12-31-80 22:00
GMT -1 = 12-31-80 23:00
GMT +0 = 01-01-80 00:00
GMT +1 = 01-01-80 01:00
GMT +2 = 01-01-80 02:00
GMT +3 = 01-01-80 03:00
GMT +4 = 01-01-80 04:00
GMT +5 = 01-01-80 05:00
GMT +6 = 01-01-80 06:00
GMT +7 = 01-01-80 07:00
GMT +8 = 01-01-80 08:00
GMT +9 = 01-01-80 09:00
GMT +10 = 01-01-80 10:00
GMT +11 = 01-01-80 11:00
@unapibageek - @ssantosv
EVEN BEYOND AAPT
@unapibageek - @ssantosv
EVEN BEYOND AAPT
@unapibageek - @ssantosv
EVEN BEYOND AAPT
@unapibageek - @ssantosv
@unapibageek - @ssantosv
apks == zip
@unapibageek - @ssantosv
apks == zip
@unapibageek - @ssantosv
SELF SIGNED 
CERTIFICATES
YOU CAN CREATE CERTIFICATES 
AD-HOC WHEN YOU ARE ABOUT TO 
COMPILE YOUR APK
@unapibageek - @ssantosv
SELF SIGNED 
CERTIFICATES
CERTIFICATES STORE THE TIME AND 
DATE OF THE COMPUTER WHERE THEY HAVE BEEN CREATED, IN UTC TIME
@unapibageek - @ssantosv
DATETIMES
Certificate creation datetime (UTC):
Signature file datetime is the local 
computer time (timezone included):
@unapibageek - @ssantosv
DATETIMES
Certificate creation datetime (UTC):
Signature file datetime is the local 
computer time (timezone included):
2018/05/24 15:27:10
2018/05/24 22:26:22
+-50 seconds later than the certificate
@unapibageek - @ssantosv
rock appround 
The clock
File time
Cert time 
2018/05/24 15:27:10 - 2018/05/24 22:26:22
= 
-7 hours and 48 seconds: GMT -7 
@unapibageek - @ssantosv
rock appround 
The clock
File time
Cert time 
2018/07/08 14:30:16 - 2018/07/08 13:30:12 
= 
1 hour: GMT +1
(File created 4 seconds after the cert…) 
Another example:
@unapibageek - @ssantosv
mapping the timezone
UTC 0
STORED IN CERTIFICATE
UTC +8
STORED IN ZIP FILE
Assuming minutes 
and seconds are “close 
in time” because 
certificate and 
signature are created 
together
@unapibageek - @ssantosv
mapping the timezone
UTC 0
STORED IN CERTIFICATE
UTC +8
STORED IN ZIP FILE
Assuming minutes 
and seconds are “close 
in time” because 
certificate and 
signature are created 
together
8 HOURS 
@unapibageek - @ssantosv
GMT CHECK TOOL
@unapibageek - @ssantosv
GMT CHECK TOOL
@unapibageek - @ssantosv
GMT CHECK TOOL
@unapibageek - @ssantosv
GMT CHECK TOOL
@unapibageek - @ssantosv
statistics
@unapibageek - @ssantosv
TIMEZONE  LEAKAGE  BY  AAPT BUG:  179.122 APKs
TIMEZONE  LEAKAGE  BY  DATETIMES:  477.849 APKs
MORE THAN HALF A MILLION OF APKs LEAKING THEIR TIMEZONE
FROM OUR 10 MILLION APKS DATABASE
statistics
61056
APKs
AAPT BUG
UTC +0
31708
APKs
TIMESTAMP
LEAK
3082 
APKs
18479
APKs
AAPT 
BUG
UTC +7
62863
APKs
TIMESTAMP
LEAK
2969 
APKs
@unapibageek - @ssantosv
Is this useful for malware?
MALWARE (1000 SAMPLES) ANALYZED  WITH  AAPT  TIMEZONE  DISCLOSURE
Type
# of APKs
Detected only 
by 1 AV
Detected only 
by 2 AV
Detected only 
by 3 AV
Detected by +3 
AV
TOTAL
% detected
UTC +0
1000
45
13
6
22
86
8,60%
UTC +1
1000
55
5
4
30
94
9,40%
UTC +2
1000
60
6
4
26
96
9,60%
UTC +3
1000
38
21
6
21
86
8,60%
UTC +4
1000
71
28
27
72
198
19,80%
UTC +5
1000
74
7
6
22
109
10,90%
UTC +6
1000
54
0
1
3
58
5,80%
UTC +7
1000
66
18
9
46
139
13,90%
UTC +8
1000
102
47
39
126
314
31,40%
UTC +9
1000
57
4
0
4
65
6,50%
UTC +10
532
15
3
2
10
30
5,64%
UTC +11
276
18
0
4
47
69
25,00%
UTC +12
72
6
0
0
0
6
8,33%
UTC -1
1000
61
10
11
19
101
10,10%
UTC -2
1000
42
25
17
17
101
10,10%
UTC -3
391
19
2
3
2