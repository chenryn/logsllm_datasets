Recall that in this protocol a grid structure is used (see
Section 3.5). Using Protocol 3, we were able to solve
problem instances of considerable size; here we present
measurements for a problem instance of size (200,200).
Table 1 shows the results using various grid sizes. Per-
formance steadily improves up to the grid size of 20,
but begins to decrease slightly after that.
In spite of
decreased overall performance, further increases in the
grid size slightly decrease network bandwidth require-
ments, which results in fewer round trips, so even larger
grid sizes may be suitable for environments with lim-
ited network bandwidth. With a grid size of 20, Protocol
3 requires about as much time for an instance of size
(200, 200) as Protocol 2 requires for an instance of size
(25, 25).
6.2 Smith-Waterman
Figure 6 shows the timing measurements for the three
protocols. For Protocols 1 and 3, the computation time
scales with the size of the score matrix, which is |Σ|2.
For example, the bytes transferred over the network
aligning protein sequences using BLOSUM62 are ap-
proximately 40 times that of for simple edit distance of
the same size problem. This is caused by the use of extra
gates in the Yao circuit which encode each value of the
score function.
225
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 03:13:03 UTC from IEEE Xplore.  Restrictions apply. 
protocol 1
protocol 2
procotol 3
Atallah et al.
)
)
s
s
d
d
n
n
o
o
c
c
e
e
s
s
(
(
e
e
m
m
i
i
t
t
0
0
4
4
1
1
0
0
2
2
1
1
0
0
0
0
1
1
0
0
8
8
0
0
6
6
0
0
4
4
0
0
2
2
0
0
8
8
12
12
16
16
20
20
25
25
problem size
problem size
Figure 5. Timing measurements (in minutes and seconds) comparing edit distance Protocols
1, 2, and 3. The protocol by Atallah et al. [1] could not complete problems of size (20, 20) and
(25, 25) within the 3-minute cutoff for this experiment.
Protocol 2 scales with the alphabet size | Σ |. For a
very large alphabet with hundreds of symbols, Protocol
2 is the best choice because the cost of embedding the
entire matrix into a Yao circuit becomes prohibitive.
7 Conclusion
We presented several privacy-preserving protocols
for computing on genomic data, including calculating
the edit distance and Smith-Waterman similarity scores
between genome sequences. We evaluated our imple-
mentation on real problem instances involving align-
ment of protein sequences, and demonstrated that its
performance is tractable even for instances of substantial
size. Our techniques generalize to other dynamic pro-
gramming algorithms, and we expect that they will ﬁnd
application in other contexts, e.g., in hierarchical clus-
tering algorithms which use edit distance as the metric.
Our protocols are but a ﬁrst step towards practical
methods for achieving privacy in genomic computation.
In our solutions, cryptographic security comes at a sub-
stantial cost in computation and communication. Devel-
opment of more efﬁcient, yet provably secure techniques
for collaborative computation on genome sequences is
an important challenge for future research.
References
[1] M. Atallah, F. Kerschbaum, and W. Du. Secure and pri-
vate sequence comparisons. In WPES, 2003.
[2] A. Bateman, E. Birney, L. Cerruti, R. Durbin,
L. Etwiller, S. R. Eddy, S. Grifﬁths-Jones, K. L. Howe,
M. Marshall, and E. L. Sonnhammer. The Pfam protein
families database. Nucleic Acids Res, 30(1):276–280,
January 2002.
[3] J. Brickell, D. Porter, V. Shmatikov, and E. Witchel.
Privacy-preserving remote diagnostics. In CCS, 2007.
[4] T. H. Cormen, C. E. Leiserson, R. L. Rivest, and
Introduction to Algorithms. MIT Press and
C. Stein.
McGraw-Hill, 2001.
[5] L. Cranor, M. Langheinrich, M. Marchiori, M. Presler-
Marshall, and J. Reagle. The Platform for Privacy Pref-
erences 1.0 (P3P1.0) Speciﬁcation. W3C Recommenda-
tion, 16 April 2002.
[6] L. F. Cranor. Internet privacy. Communications of the
ACM, 42(2):28–38, 1999.
[7] S. R. Eddy. Where did the blosum62 alignment score
matrix come from? Nat Biotechnol, 22(8):1035–1036,
August 2004.
[8] M. Fedoruk. Mapping the Icelandic genome. http:
//www.scq.ubc.ca/?p=381, 2003.
[9] J. Feigenbaum, B. Pinkas, R. Ryger, and F. Saint-Jean.
Secure computation of surveys. In EU Workshop on Se-
cure Multiparty Protocols, 2004.
226
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 03:13:03 UTC from IEEE Xplore.  Restrictions apply. 
protocol 1
protocol 2
procotol 3
)
)
s
s
d
d
n
n
o
o
c
c
e
e
s
s
(
(
e
e
m
m
i
i
t
t
0
0
0
0
0
0
3
3
0
0
0
0
5
5
2
2
0
0
0
0
0
0
2
2
0
0
0
0
5
5
1
1
0
0
0
0
0
0
1
1
0
0
0
0
5
5
0
0
8
8
12
12
16
16
20
20
25
25
60
60
problem size
problem size
Figure 6. Timing measurements (in minutes and seconds) comparing Smith-Waterman Proto-
cols 1, 2, and 3. For problem sizes (25,25) and (60,60), Protocol 1 could not evaluate the circuit.
Grid size
Bandwidth (Alice) Bandwidth (Bob) CPU (Alice) CPU (Bob) wall clock
25
20
10
8
4
2
1
362.2 M
368.5 M
397.4 M
412.0 M
485.3 M
635.2 M
948.0 M
2.1 M
2.6 M
5.4 M
5.8 M
14.4 M
32.0 M
76.7 M
518
385
476
520
784
1296
2480
84
90
123
145
234
408
780
658
534
655
729
1095
1804
4883
Table 1. Network bandwidth (in bytes) and timing measurements (in seconds) for the edit dis-
tance Protocol 3 with a problem of size (200, 200) (M refers to Megabytes).
[10] M. Freedman, K. Nissim, and B. Pinkas. Efﬁcient pri-
In EUROCRYPT,
vate matching and set intersection.
2004.
[17] S. Jarecki and V. Shmatikov. Efﬁcient two-party secure
In EUROCRYPT,
computation on committed inputs.
2007.
[11] Genomic Privacy Project.
http://privacy.
[18] K. Kurosawa and W. Ogata. Bit-slice auction circuit. In
cs.cmu.edu/dataprivacy/projects/
genetic/, 2004.
[12] I. Goldberg, D. Wagner, and E. Brewer.
Privacy-
enhancing technologies for the Internet. In COMPCON,
1997.
[13] O. Goldreich. Foundations of Cryptography: Volume II
Basic Applications. Cambridge University Press, 2004.
[14] O. Goldreich, S. Micali, and A. Wigderson. How to play
any mental game. In STOC, 1987.
ESORICS, 2002.
[19] H.-Y. Lin and W.-G. Tzeng. An efﬁcient solution to the
millionaires’ problem based on homomorphic encryp-
tion. In ACNS, 2005.
[20] Y. Lindell and B. Pinkas. Privacy preserving data min-
ing. Journal of Cryptology, 15(3), 2002.
[21] Y. Lindell and B. Pinkas. A proof of Yao’s protocol
for secure two-party computation. http://eprint.
iacr.org/2004/175, 2004.
[15] D. Gusﬁeld. Algorithms on Strings, Trees, and Se-
[22] M. Naor and B. Pinkas. Efﬁcient oblivious transfer pro-
quences. Cambridge University Press, 1997.
tocols. In SODA, 2001.
[16] HapMap.
International HapMap project. http://