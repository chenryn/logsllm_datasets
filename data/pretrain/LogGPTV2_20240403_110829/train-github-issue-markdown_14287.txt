When using DataFrame.loc with a list of indices, the index name is missing
from the resultant DataFrame unless the list of indices includes all of the
indices in the original DataFrame.
Example:
    import pandas as pd
    d=pd.DataFrame(
        [
            [1,2,3],
            [4,5,6],
            [7,8,9]
        ], 
        columns=['i','j','k']
    ).set_index('i')
When I use .loc and ask for all of the rows, I get (as desired) the correct,
named index out the other end:
    d.loc[[1,4,7]]
    #    j  k
    # i      
    #1  2  3
    #4  5  6
    #7  8  9
    d.loc[[1,4,7]].index.name
    # 'i'
When I ask for a list of indices that is not all of them, I also expect to get
a named index out the other end. However, the index values are preserved but
the index name is lost:
    d.loc[[1,4]]
    #    j  k
    #1  2  3
    #4  5  6
    d.loc[[1,4]].index.name
    # None
Suggesting that this is a bug because the index naming should be the same no
matter whether I `.loc` for for all of the rows or just some of them.