title:Post-Quantum Zero-Knowledge and Signatures from Symmetric-Key Primitives
author:Melissa Chase and
David Derler and
Steven Goldfeder and
Claudio Orlandi and
Sebastian Ramacher and
Christian Rechberger and
Daniel Slamanig and
Greg Zaverucha
Post-Quantum Zero-Knowledge and Signatures from
Symmetric-Key Primitives∗
Melissa Chase
Microsoft Research
PI:EMAIL
Claudio Orlandi
Aarhus University
PI:EMAIL
David Derler
Graz University of Technology
PI:EMAIL
Sebastian Ramacher
Graz University of Technology
PI:EMAIL
Steven Goldfeder
Princeton University
PI:EMAIL
Christian Rechberger
Graz University of Technology &
Denmark Technical University
PI:EMAIL
Daniel Slamanig
AIT Austrian Institute of Technology
PI:EMAIL
ABSTRACT
We propose a new class of post-quantum digital signature schemes
that: (a) derive their security entirely from the security of symm-
etric-key primitives, believed to be quantum-secure, and (b) have
extremely small keypairs, and, (c) are highly parameterizable.
In our signature constructions, the public key is an image y =
f (x) of a one-way function f and secret key x. A signature is a
non-interactive zero-knowledge proof of x, that incorporates a
message to be signed. For this proof, we leverage recent progress of
Giacomelli et al. (USENIX’16) in constructing an efficient Σ-protocol
for statements over general circuits. We improve this Σ-protocol to
reduce proof sizes by a factor of two, at no additional computational
cost. While this is of independent interest as it yields more compact
proofs for any circuit, it also decreases our signature sizes.
We consider two possibilities to make the proof non-interactive:
the Fiat-Shamir transform and Unruh’s transform (EUROCRYPT’12,
’15,’16). The former has smaller signatures, while the latter has a
security analysis in the quantum-accessible random oracle model.
By customizing Unruh’s transform to our application, the overhead
is reduced to 1.6x when compared to the Fiat-Shamir transform,
which does not have a rigorous post-quantum security analysis.
We implement and benchmark both approaches and explore the
possible choice of f , taking advantage of the recent trend to strive
for practical symmetric ciphers with a particularly low number of
multiplications and end up using LowMC (EUROCRYPT’15).
KEYWORDS
Post-quantum cryptography, zero-knowledge, signatures, block
cipher, Fiat-Shamir, Unruh, implementation
∗The performance figures presented here are somewhat outdated. For up to date figures
see https://microsoft.github.io/Picnic/. This is the full version of a paper which appears
in CCS’17: 2017 ACM SIGSAC Conference on Computer and Communications Security,
CCS 2017, Dallas, TX, USA, October 30 - November 03, 2017. ACM, New York, NY,
USA. This paper is a merge of [34, 46].
Greg Zaverucha
Microsoft Research
PI:EMAIL
1 INTRODUCTION
More than two decades ago Shor published his polynomial-time
quantum algorithm for factoring and computing discrete loga-
rithms [81]. Since then, we know that a sufficiently powerful quan-
tum computer is able to break nearly all public key cryptography
used in practice today. This motivates the invention of crypto-
graphic schemes with post quantum (PQ) security, i.e., security
against attacks by a quantum computer. Even though no sufficiently
powerful quantum computer currently exists, NIST recently an-
nounced a post-quantum crypto project1 to avoid a rushed transi-
tion from current cryptographic algorithms to PQ secure algorithms.
The project is seeking proposals for public key encryption, key ex-
change and digital signatures thought to have PQ security. The
deadline for proposals is fall 2017.
In this paper we are concerned with constructing signature
schemes for the post-quantum era. The building blocks of our
schemes are interactive honest-verifier zero-knowledge proof sys-
tems (Σ-protocols) for statements over general circuits and sym-
metric-key primitives, that are conjectured to remain secure in a
post-quantum world.
Post-Quantum Signatures. Perhaps the oldest signature scheme
with post-quantum security are one-time Lamport signatures [63],
built using hash functions. As Grover’s quantum search algorithm
can invert any black-box function [52] with a quadratic speed-up
over classical algorithms, one has to double the bit size of the hash
function’s domain, but still requires no additional assumptions to
provably achieve post-quantum security. Combined with Merkle-
trees, this approach yields stateful signatures for any polynomial
number of messages [71], where the state ensures that a one-time
signature key from the tree is not reused. By making the tree very
large, and randomly selecting a key from it (cf. [47]), along with
other optimizations, yields practical stateless hash-based signa-
tures [17].
There are also existing schemes that make structured (or number-
theoretic) assumptions. Code-based signature schemes can be ob-
tained from identification schemes based on the syndrome decoding
(SD) problem [70, 82, 86] by applying a variant of the well-known
1http://csrc.nist.gov/groups/ST/post-quantum-crypto/
Fiat-Shamir (FS) transform [40]. Lattice-based signature schemes
secure under the short integer solution (SIS) problem on lattices
following the Full-Domain-Hash (FDH) paradigm [13] have been in-
troduced in [43]. More efficient approaches [7, 9, 65, 66] rely on the
FS transform instead of FDH. BLISS [36], a very practical scheme,
also relies on the FS transform, but buys efficiency at the cost of
more pragmatic assumptions, i.e., a ring version of the SIS problem.
For signatures based on problems related to multivariate systems of
quadratic equations only recently provably secure variants relying
on the FS transform have been proposed [56].
When it comes to confidence in the underlying assumptions,
hash-based signatures are arguably the preferred candidate among
all existing approaches. All other practical signatures require an ad-
ditional structured assumption (in addition to assumptions related
to hash functions).
1.1 Contributions
We contribute a novel class of practical post-quantum signature
schemes. Our approach only requires symmetric key primitives like
hash functions and block ciphers and does not require additional
structured hardness assumptions.
Along the way to building our signature schemes, we make
several contributions of general interest to zero-knowledge proofs
both in the classical and post-quantum setting:
• We improve ZKBoo [44], a recent Σ-protocol for proving
statements over general circuits. We reduce the transcript
size by more than half without increasing the computa-
tional cost. We call the improved protocol ZKB++. This
improvement is of general interest outside of our applica-
tion to post-quantum signatures as it yields significantly
more concise zero knowledge proofs even in the classical
setting.
• We also show how to apply Unruh’s generic transform [83–
85] to obtain a non-interactive counterpart of ZKB++ that
is secure in the quantum-accessible random oracle model
(QROM; see [18]). To our knowledge, we are the first to
apply Unruh’s transform in an efficient signature scheme.
• Unruh’s construction is generic, and does not immediately
yield compact proofs. However, we specialize the construc-
tion to our application, and we find the overhead was sur-
prisingly low – whereas a generic application of Unruh’s
transform incurs a 4x increase in size when compared to
FS, we were able to reduce the size overhead of Unruh’s
transform to only 1.6x. Again, this has applications wider
than our signature schemes as the protocol can be used
for non-interactive post-quantum zero knowledge proofs
secure in the QROM.
We build upon these results to achieve our central contribution:
two concrete signature schemes. In both schemes the public key
is set up to be an image y = f (k) with respect to one-way func-
tion f and secret key k. We then turn an instance of ZKB++ to
prove knowledge of k into two signature schemes – one using the
FS transform and the other using Unruh’s transform. The FS vari-
ant, dubbed Fish, yields a signature scheme that is secure in the
ROM, whereas the Unruh variant, dubbed Picnic, yields a signature
scheme that is secure in the QROM, and we include a complete
security proof.
We review symmetric-key primitives with respect to their suit-
ability to serve as f
in our application and conclude that the
LowMC family of block ciphers [4, 6] is well suited. We explore the
parameter space of LowMC and show that we can obtain various
trade-offs between signature size and computation time. Thereby,
our approach turns out to be very flexible as besides the aforemen-
tioned trade-offs we are also able to adjust the security parameter
of our construction in a very fine-grained way.
We provide an implementation of both schemes for 128-bit post-
quantum security, demonstrating the practical relevance of our
approach. In particular, we provide two reference implementations
on GitHub2,3. Moreover, we rigorously compare our schemes with
other practical provably secure post-quantum schemes.
1.2 Related Work
We now give a brief overview of other candidate schemes and
defer a detailed comparison of parameters and performance to
Section 7. We start with the only existing instantiation that solely
relies on standard assumptions, i.e., comes with a security proof in
the standard model (SM). The remaining existing schemes rely on
structured assumptions related to codes, lattices and multivariate
systems of quadratic equations that are assumed to be quantum
safe and have a security proof in the ROM. At the end of the section,
we review the state of the art in zero-knowledge proofs for non-
algebraic statements.
Hash-Based Signatures (SM). Hash-based signatures are attrac-
tive as they can be proven secure in the standard model (i.e., without
ROs) under well-known properties of hash functions such as second
pre-image resistance. Unfortunately, highly efficient schemes like
XMSS [22] are stateful, which seems to be problematic for practical
applications [68]. Stateless schemes like SPHINCS [17] are thus
more desirable, but this comes at reduced efficiency and increased
signature sizes. SPHINCS has a tight security reduction to security
of its building blocks, i.e., hash functions, PRGs and PRFs. At the
128-bit post-quantum security level, signatures are about 41 kB in
size, and keys are of size about 1 kB each.
Code-Based Signatures (ROM). In the code-based setting the
most prominent and provably secure approach is to convert iden-
tification schemes due to Stern [82] and Véron [86] to signatures
using FS. For the 128-bit PQ security level one obtains signature
sizes of around ≈ 129 kB (in the best case) and public key size of
≈ 160 bytes.4 We note that there are also other code-based sig-
natures [27] based on the Niederreiter [72] dual of the McEliece
cryptosystem [67], which do not come with a security reduction,
have shown to be insecure [38] and also do not seem practical [64].
There is a more recent provably secure approach [37], however, it
is not immediate if this leads to efficient signatures.
Lattice-Based Signatures (ROM). For lattice based signatures
there are two major directions. The first are schemes that rely on
2https://github.com/Microsoft/Picnic
3https://github.com/IAIK/fish-begol
4The given estimates are taken from a recent talk of Nicolas Sendrier (available at https:
//pqcrypto.eu.org/mini.html), as, unfortunately, there are no free implementations
available.
2
the hardness of worst-to-average-case problems in standard lattices
[7, 9, 30, 43, 66]. Although they are desirable from a security point
of view, they suffer from huge public keys, i.e., in the orders of a
few to some 10 MBs. TESLA [7] (based upon [9, 66]) improves all
aspects in the performance of GPV [43], but still has keys on the
order of 1 MB. More efficient lattice-based schemes are based on
ring analogues of classical lattice problems [3, 10, 11, 36, 53] whose
security is related to hardness assumptions in ideal lattices. These
constructions drop key sizes to the order of a few kBs. Most notable
is BLISS [35, 36], which achieves performance nearly comparable
to RSA. However, it must be noted, that ideal lattices have not been
investigated nearly as deeply as standard lattices and thus there is
less confidence in the assumptions (cf. [75]).
MQ-Based Signatures (ROM). Recently, Hülsing et al. in [56] pro-
posed a post-quantum signature scheme (MQDSS) whose security
is based on the problem of solving a multivariate system of qua-
dratic equations. Their scheme is obtained by building upon the
5-pass (or 3-pass) identification scheme in [79] and applying the
FS transform. For 128-bit post-quantum security, signature sizes
are about 40 kB, public key sizes are 72 bytes and secret key sizes
are 64 bytes. We note that there are other MQ-based approaches
like Unbalanced Oil-and-Vinegar (UOV) variants [74] or FHEv−
variants (cf. [76]), having somewhat larger keys (order of kBs) but
much shorter signatures. However, they have no provable security
guarantees, the parameter choice seems very aggressive, there are
no parameters for conservative (post-quantum) security levels, and
no implementations are available.
Supersingular Isogenies (QROM). Yoo et al. in [87] proposed a
post-quantum signature scheme whose security is based on super-
singular isogeny problems. The scheme is obtained by building
upon the identification scheme in [39] and applying the Unruh
transform. For 128-bit post-quantum security, signature sizes are
about 140 kB, public key sizes are 768 bytes, and secret key sizes
are 49 bytes.
At the same time, Galbraith et al. [41] published a preprint con-
taining one conceptually identical isogeny-based construction, and
one based on endomorphism rings. They report improved signature
sizes using a time-space trade-off and only present their improve-
ments in terms of classical security parameters.
Zero-Knowledge for Arithmetic Circuits. Zero-knowledge (ZK)
proofs [49] are a powerful tool and exist for any language in NP [48].
Nevertheless, practically efficient proofs were until recently only
known for restricted languages covering algebraic statements in
certain algebraic structures, e.g., discrete logarithms [28, 80] or
equations over bilinear groups [51]. Expressing any NP language
as a combination of algebraic circuits could be done for example by
expressing the relation as a circuit, however for circuits of practi-
cal interest (such as hash functions or block ciphers), this quickly
becomes prohibitively expensive. Even SNARKS, where proof size
can be made small (and constant) and verification is highly efficient,
have very costly proofs (cf. [15, 26, 42] and the references therein).5
Unfortunately, signatures require small proof computation times
(efficient signing procedures), and this direction is not suitable.
5Using SNARKS is reasonable in scenarios where provers are extremely powerful
(such as verifiable computing [42]) or the runtime of the prover is not critical (such as
Zerocash [14]).
3
Quite recently, dedicated ZK proof systems for statements ex-
pressed as Boolean circuits by Jawurek et al. [58] and statements ex-
pressed as RAM programs by Hu et al. [55] have been proposed. As
we exclusively focus on circuits, let us take a look at [58]. They pro-
posed using garbled circuits to obtain ZK proofs, which allow effi-
cient proofs for statements like knowledge of x for y = SHA-256(x).
Unfortunately, this approach is inherently interactive and thus not
suitable for the design of practical signature schemes. The very
recent ZKBoo protocol due to Giacomelli et al. [44], which we
build upon, for the first time, allows to construct non-interactive
zero-knowledge (NIZK) proofs with performance being of interest
for practical applications.
QROM vs ROM. One way of arguing security for signatures ob-
tained via the FS heuristic in the stronger QROM is to assume that
it simply holds as long as the underlying protocol and the hash
function used to instantiate the random oracle (RO) are quantum-
secure. However, it is known [18] that there are signature schemes
secure in the ROM that are insecure in the quantum-accessible
ROM (QROM), i.e., when the adversary can issue quantum queries
to the RO. One central issue in this context is how to handle the
rewinding of adversaries within security reductions as in the FS
transform [31]. Possibilities to circumvent this issue are via history-
free reductions [18] or the use of oblivious commitments within the
FS transform, which is not applicable to our approach. Although
many existing schemes ignore QROM security, given the general
uncertainty of the capabilities of quantum adversaries, we prefer
to avoid this assumption. Building upon results from Unruh [83–
85], we achieve provable security in the QROM under reasonable
assumptions.
2 BUILDING BLOCKS
Below, we informally recall the notion of Σ-protocols and other
standard primitives.
Sigma Protocol. A sigma protocol (or Σ-protocol) is a three flow
protocol between a prover Prove and a verifier Verify, where
transcripts have the form (r , c, s). Thereby, r and s are computed by
Prove and c is a challenge chosen by Verify. Let f be a relation
such that f (x) = y, where y is common input and x is a witness
known only to Prove. Verify accepts if ϕ(y, r , c, s) = 1 for an
efficiently computable predicate ϕ. There also exists an efficient