# Electric Circuit and Control Architecture of Primary Substation 3: Case Study

## Overview
The Local Control Level (LCL) module is a component of the Primary Substation Automation System (PSAS). It provides control and protection functions for the primary substation, as well as an interface to the operator and remote control systems via the inter-site network. The LCL controls switches connected to two High Voltage (HV)/Medium Voltage (MV) transformers, the switch connecting the Red MV busbar (left) to the Green MV busbar (right), and local switches on the MV lines (Figure 1).

## Pilot Application Functions
The pilot application implements two key functions from the LCL module:

### Function 1: Automatic Power Resumption
This function allows automatic power resumption when an HV/MV transformer fails, such as due to internal protection (e.g., high temperature, oil alarm). It disconnects the MV lines connected to the failed transformer's busbar, computes the load carried by the transformer before the failure, and, if possible, transfers the entire load to the remaining transformer.

**Scenario Example:**
- **Initial State:** 
  - Red transformer: 32 MVA (8 lines of 4 MVA each)
  - Green transformer: 24 MVA (8 lines of 3 MVA each)
  - Switches connecting Red and Green bars to their respective transformers are closed.
  - Switch connecting Green MV bar to Red MV bar is open.

- **Anomaly:**
  - Internal protection shuts down the Green transformer, reducing its power from 24 MVA to 0 MVA.
  - The switch connecting the Green bar to the Green transformer opens.
  - The switch connecting the Red bar to the Red transformer remains closed.
  - The switch connecting the two bars remains open.

- **Reaction:**
  - The switch connecting the Green bar to the Red bar receives a command to close.
  - It closes after one execution cycle (100 ms), and the load on the Red transformer increases to 56 MVA.

### Function 2: Parallel Transformers
This function consists of a series of automatic actions to assist remote operators. For example, an operator can request to switch on a transformer, and this request translates into a specific sequence of commands. This re-insertion scenario may be applied some time after a transformer has been excluded.

## System Setup
The PSAS application was developed using a proprietary, automata-based design environment based on the ASFA technique. The development process involves several steps:

1. **Function Extraction and Specification:**
   - Functions 1 and 2 are extracted from the PSAS application and specified using the ASFA Graphical Editor, resulting in a tabular description of the pilot application.

2. **Code Generation:**
   - The ASFA tables are processed by the ASFA-C Translator, producing a target-independent C-code version of the application.
   - The ASFA Partitioner allows the application to be mapped to a single task or decomposed into a set of tasks.
   - A single-task version is used for functional testing on a single host node, while a four-task version is selected for testing on a distributed system.

3. **Runtime Execution:**
   - The Distributed Execution Support Module, composed of BasicSoftware (BSW) and Executive, enforces cyclic execution for PLC-based automation.
   - Robust execution is ensured by cyclically refreshing the I/O image and non-protected memory areas, with the application state safeguarded by hardware or software mechanisms.
   - The BSW handles synchronization and exception handling, while the Executive provides the RTOS interface and ASFA-specific library functions.

## Hardware Architecture
The pilot application was deployed on a distributed system consisting of three dedicated heterogeneous processors for automation functions and two standard PCs for support functions, interconnected by an Ethernet switch (Figure 2):

- **N1 and N2:** Industrial PCs (VMIC and INOVA) with VxWorks as the RTOS.
- **N3:** Siemens SIMATIC M7, an extended PLC with I/O modules, running RMOS32 as the RTOS.
- **N4:** Linux-based standard PC hosting the BackBone.
- **N5:** Windows-NT PC with Operator Console functions.

For inter-site connections, an additional node hosts the gateway software. Input and output from/to the field are simulated, and synchronization signals for cyclic application execution are generated by the internal clock of one of the nodes.

## Instantiating DepAuDE on PSAS
The run-time components of the DepAuDE framework are integrated into the PSAS pilot application. The fault containment region is a node.

- **BSL Tasks:**
  - RMOS32 and VxWorks implementations run on the target nodes (N1, N2, N3).
  - Linux and WinNT versions run on the host nodes (N4, N5).

- **LAN Monitor:**
  - An FTM used for detecting crashed or isolated nodes is present on all nodes.

- **BackBone Task:**
  - Executes recovery strategies and is allocated to N4.

- **ASFA Distributed Execution Support Module:**
  - Composed of BSW and Executive, with each target node hosting an instance.
  - Each BSW instance can act as a master (BSW_M) or slave (BSW_S) depending on the system configuration.
  - The BSW_SLAVE_GROUP consists of all BSW_S instances.
  - The highest performance configuration requires BSW_M to be allocated to N3 and BSW_S processes to run on N1 and N2.
  - Executive process instances are identical on each processing node and form the EXECUTIVE_GROUP.

## Task Allocation
The allocation of application tasks depends on the partitioning of the two LCL functions (Function 1 and Function 2), which do not communicate with each other.

- **Function 2 (Parallel Transformers):**
  - Consists of a single task, PARALLEL_TRS.

- **Function 1 (Automatic Power Resumption):**
  - Consists of three tasks:
    - Two tasks (BUSBAR1 and BUSBAR2) handle low-level, I/O-dependent computations for the MV lines attached to each busbar.
    - One task, STRAT, coordinates the whole function and performs no field I/O.
  - There is no communication between the two BUSBAR tasks, but both communicate with STRAT.

The basic constraint for task allocation is that a task controlling a specific plant component should be allocated to a processor attached to that component. Since both functions control the same set of field components, all target nodes are assumed to be capable of handling these tasks.