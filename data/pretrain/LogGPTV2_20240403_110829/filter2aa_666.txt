**August 8, 2008**

**Inducing Momentary Faults in Secure Smartcards and Microcontrollers**
*DEFCON â€“ Las Vegas*

**Christopher Tarnovsky**
Flylogic Engineering, LLC.
Email: [PI:EMAIL](http://www.flylogic.net)

---

### What is a Momentary Fault?
- A temporary, precisely calculated change in behavior
- The fault typically lasts no more than a few clock cycles
- Multiple faults can be executed to force behavior that deviates from the normal

---

### How Do We Induce These Faults?
- **Low-Capacitance Buffered Driver**: Capable of driving a '1' or '0' and operating in "Hi-Z" (high impedance) mode for listening.
- **Low-Voltage Tolerance**: An additional advantage for precise control.

---

### Why Induce These Faults?
- **Overwrite Stack-Pointer**: To manipulate program execution.
- **Force Repeated Loops in Code Segments**: To disrupt normal flow.
- **Falsify Cryptograms**: To compromise security mechanisms.

---

### Inducing the Fault
- **Physical Connection to Substrate**: Establish a direct connection.
- **Use Low-Capacitance Buffered Driver**: For precise control.
- **Tri-State Buffer**: Desired for eavesdropping.
- **Overdrive at Calculated Points in Time**: To induce the fault.

---

### Eavesdropping (Listening)
- **YELLOW**: Databus signal
- **GREEN**: Clock
- **PURPLE**: Reset
- **BLUE**: Trigger

---

### Overdriving the Databus with a Logic '0'
- **YELLOW**: Databus signal
- **GREEN**: Clock
- **PURPLE**: Reset
- **BLUE**: Trigger

---

### Initial Steps
- **Behavior Analysis**: Understand the device's normal operation.
- **Objective Clarification**: Define the goal of the attack.
- **Determine Possible Attack Areas**:
  - Address bus
  - Data bus
  - Cryptographic blocks

---

### Address Bus Faults
- **Cryptographic Memories**: Likely target.
- **Microcontroller Devices**: Unlikely target.
- **Allows Complete Change of Data Bus**: Potentially powerful.

---

### Data Bus Faults
- **Most Probable Attack Vector**: Allows manipulation of multiple areas.

---

### Cryptographic Block Faults
- **Limited Use**: Typically for cryptographic memory devices.
- **Readout of Write-Only Keys**: Can be achieved.

---

### Execution Steps
- **Determine When and How Long to Induce the Fault**.
- **Multiple Faults**: Consider if more than one fault is needed.
- **Execute on the Same Line**: Determine if multiple faults can be applied.
- **Monitor and Adjust**: Execute the state change and observe the results. If unsuccessful, maintain a "running log" of the bus activity.

---

### In Conclusion
- **Documentation Exaggeration**: Most documentation overstates the implemented security level.
- **Encrypted Buses**: As vulnerable as non-encrypted buses.
- **Internal Clock Randomization**: Only adds a second layer of complexity.
- **Random Software Delays**: Unreliable for security.
- **Technology Improvements**: Still not perfect.
- **Compromised ICs**: Every standard secure IC has been successfully compromised by hackers.
- **Human-Made, Human-Broken**: What is created by humans can be deconstructed by humans.