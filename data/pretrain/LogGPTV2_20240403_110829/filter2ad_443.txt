title:Packet Space Analysis of Intrusion Detection Signatures
author:Fr&apos;ed&apos;eric Massicotte
Packet Space Analysis of
Intrusion Detection Signatures
Fr´ed´eric Massicotte
Communications Research Centre Canada
Ottawa, Ontario, Canada
Abstract. It is often the case that more than one signature is triggered
on a given group of packets, depending on the signature database used
by the IDS. For performance reasons, network IDSs often impose an
alert limit (i.e., they restrict) on the number of signatures that can be
triggered on a given group of packets. Thus, it is possible that some
signatures that should be triggered to properly identify attacks are not
veriﬁed by the IDS and lead to an IDS Evasion attack. In this poster, we
introduce the concept of packet space analysis as a solution to address
these problems.
IDS signatures sometimes overlap (i.e., they partially specify the same group
of packets) and sometimes they even completely include some other signatures
(i.e., a packet that triggers one signature will always trigger some other). As an
illustration, here are Snort signature 1672 and signature 336.
– alert tcp $EXTERNAL NET any -> $HOME NET 21 (msg:”FTP CWD ∼
attempt”; ﬂow:to server,established; content:”CWD”; nocase;
pcre:”/ˆCWD\s+∼/smi”; sid:1672; rev:11;)
– alert tcp $EXTERNAL NET any -> $HOME NET 21 (msg:”FTP CWD ∼
root attempt”; ﬂow:to server,established; content:”CWD”; nocase;
content: ”∼root”; distance:1; nocase; pcre:”/ˆCWD\s+∼root/smi”;
sid:336; rev:10;)
Here, we can see that signature 1672 includes signature 336 because the con-
straints (speciﬁed by the plug-ins) of signature 336 are strictly more restrictive
than the constraints of signature 1672.
The inclusions and intersections between signatures in an IDS database could
have security implications. (1) It is important to know if a group of signatures
prevents other signatures from being triggered because of an alert limit.1 This
type of attack could lead to an IDS evasion attack. (2) The alert limit cannot
be arbitrary and should be identiﬁed using a systematic analysis. Increasing
this alert limit is a solution to prevent an IDS evasion attack, but it could
decrease performance and lead the IDS to miss packets (or attacks). Identifying
the optimal alert limit (i.e., the maximum number of signatures intersecting) is
1 Snort 2.8.4 (released in 2009), has an alerting limit of 3 signatures.
E. Kirda, S. Jha, and D. Balzarotti (Eds.): RAID 2009, LNCS 5758, pp. 365–366, 2009.
c(cid:2) Springer-Verlag Berlin Heidelberg 2009
366
F. Massicotte
i
j
.
j
j iﬀ PSd
i
crucial to identifying the weaknesses of a signature database. Our research on
packet space analysis of an IDS signature database (i.e., analyzing signatures for
inclusions and intersections) could be used to address (1) and (2).
∩ PSd
. Similarly, Sd
i intersects Sd
⊆ PSd
This approach cannot be used without a representation of PSd
To analyze the packet space of an IDS signature database, we propose an
approach that uses set theory. We convert signatures into sets of packets. Thus,
standard set theory operations such as ∪, ∩ and \ can be used. Let PSd
be
i includes Sd
the set of packets that triggers signature Si of IDS d. Thus, Sd
j iﬀ
PSd
allowing the
computation of ∪, ∩ and \. In the case of Snort, to calculate PSd
from Sd
i ,
the plug-ins related to protocol header ﬁelds are converted into ranges of values
with a min and a max and associated with a protocol header ﬁeld. It would be
inappropriate to convert the Snort payload plug-ins into ranges of values. For
example, converting the following pcre regular expression /^CWD\s+∼root/smi
into a range of values is not the proper model to use because its representation
into ranges of values is very complex and payload plug-ins can overlap (i.e.,
specify the same bytes in the packet payload) such as signature 1672 and 336.
To address this situation, we convert each Snort payload plug-in into one ﬁnite
state automaton (FSA) that represents the constraints on the packet payload.
is represented as a FSA for the packet payload and a set of
As a result, PSd
ranges RΠ
f where f is a ﬁeld of protocol Π. The ranges and the FSA can then
be used with ∪, ∩ and \ operators.
i
i
i
i
Based on this, we developed an IDS Signature Space Analyzer (IDS-SSA) to
identify problems in a signature database. We obtained interesting results using
a prototype version of IDS-SSA for signature inclusions on 12 Snort signature
databases downloadable without registration.2 The intersection calculation is
currently not implemented. In Snort 2.4.03, we identiﬁed three pairs of equal
i ⊂ Sd
signatures (i.e., Sd
j )
and two inclusion sequences of length three. For this case study, we did not
identify an inclusion sequence longer than four. These results suggest redundan-
cies between signatures. They also suggest situations that could be exploited
by an attacker (e.g., IDS evasion) as well as potential problems or errors (e.g.,
signatures that are equal) in the signature database.
j ), 266 inclusion sequences of length two (i.e., Sd
i = Sd
The next step is to implement the signature intersection analysis to identify
whether or not there are sets of intersecting signatures with size greater than
the alert limit and to calculate (if possible) or approximate the optimal alert
limit. Moreover, the IDS-SSA could also be used to compare signatures between
diﬀerent signature databases.
2 1.8.6, 1.8.7, 1.9.0, 1.9.1, 2.0.0, 2.1.0, 2.2.0, 2.3.0, 2.3.1, 2.3.2, 2.3.3 and 2.4.0.
3 Last version of the signature database downloadable without registration.