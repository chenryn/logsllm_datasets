(ignore
info-frame-v2.2)
value)
size information)  frame
www.TopSage.com
一如同你即将在第27、
---
## Page 328
到这一点。
返回该字符串直到第一个空字符之前的内容。使用二进制数据处理库的+null+常量可以轻易做
并且ID3读取器本该忽略掉空字符以后的任何字符。因此，你需要一个函数来接受一个字符串并
信息帧的information槽，尽管没有正式地被定义为空终止的字符串，却可以含有一个空字符，
置来寻找它。另外也可以直接使用FIND函数。
是否含有这样一个帧。
找带有“TT2”标识符的帧。
id3-tag对象，你就可以拿它做实验了。例如，可以使用frames函数来检出所有帧对象的列表。
其中的Kitka/Wintersongs/02 Byla Cesta.mp3需要替换成你自己的MP3文件名。得到了
read-id3:
id3-tag对象来进行后续的操作。假设你手头刚好有一个MP3文件，可以像下面这样来使用
互式开发的好机会，跟你之前用来找出需要实现哪些帧的方法大致相同。一开始，需要得到一个
 ID3v2> (find "TT2" (frames *id3*) :test #'string= :key #'id)
第一个帧就是。不过，无法保证它总是第一个帧，因此任何时候都应该通过标识符而不是位
现在假设你想要解出歌曲标题，它很可能就藏在上面的那些帧里。但为了找到它，你需要查
(defun upto-null (string)
晕！那个~@是Emacs打印空字符的方式。在一次从ID3v1升级到ID3v1.1的行动中，
"Byla Cesta^@=
ID3V2> (information (find "TT2" (frames *id3*) :test #'string= ;key #'id))
现在，为了得到帧中的实际信息，可以这样做：
#
ID3v2> (frames *id3*)
（"TT2"
#
ID3V2> *id3*
*ID3*
ID3V2>
#)
(subseq string 0 (position +null+ string)))
@#x73d0533a>
D
@ #x73d04cca>
#x73d0543a>
#x73d04f9a>
#x73d05252>
#x73d0516a
#x73d05082>
#x73d04dba
www.TopSage.com
 25.14 从 ID3 标签中解出信息
一个文本
311
---
## Page 329
进来。
是修改find-frame，让它不只是接受单个标识符，.而是像下面这样接受一个标识符的列表：
上不应该被迫去关注ID3格式的不同版本，因此你应该帮用户处理好这些细节。一个简单的方法
变成了“TIT2”，所有其他的标签也改变了。考虑到该库的用户在获取歌曲标题这么简单的事情
个函数里。
的唯一区别就是标识符。因此，最好可以将代码拆分一下。对于初学者来说，可以编写一个函数，
算是完成了。不过，这些代码与你用来解出其他必要信息（例如专辑名、艺术家和风格）的代码
312
为了允许song同时支持版本2.2和2.3的标签，随后需要改动的只是将版本2.3的标识符添加
不过，这个song的定义只适用于版本2.2的标签，因为在版本2.2和2.3之间标识符从“TT2”
 然后另外一些代码，也就是从text-info-frame中解出具体信息的那部分，可以写在另一
接下来，你只需为那些你想要提供访问函数的字段查找适当的版本2.2和2.3的帧标识符。
("  91 01-x-) ()  11)
然后稍微改变get-text-info，使其可以通过&rest参数接受更多的标识符。
(defun find-frame (id3 ids)
现在song函数的定义就只剩下传递正确的标识符了。
(defun get-text-info (id3 id)
可以将这些代码直接封装到一个接受id3-tag作为参数的名为song的函数里，然后工作就
(defun get-text-info (id3 &rest ids)
ID3v2> (song *id3*)
((Z4 9pT oyut-axaa-aab) (ept) buos unyap)
ID3v2> (get-text-info *id3* "TT2")
#
ID3v2> (find-frame *id3* "TT2")
ID3v2> (upto-null 
现在可以得到正确的标题了。
(find-if #:(lambda (x) (find (id x) ids :test #'string=)) (frames id3)))
"Byla Cesta"
"Byla Cesta"
"Byla Cesta"
(find id (frames id3) :test #'string= :key #'id))
(let
(let
(when frame (upto-null
第25章实践：ID3解析器
(information (find "TT2" (frames *id3*) :test #'string= :key #'id)))
(find-frame
(information frame)))})
(information frame)))))
id3 id)))
www.TopSage.com
下
---
## Page 330
外加由Winamp发明者所创建的附加风格。
最简单方法就是从风格字符串中解出那个数字，并将其作为访问实际数组的索引。
检查其是否以一个左括号开始。然后在检测通过时使用一个即将定义的函数来解码版本1的风格
数用来自动地转换这些风格。下面的函数使用刚刚定义的genre函数来解出实际的风格文本，并
码。但话又说回来，这个库的用户可能并不关心这些年代久远的历史。所以，你应该提供一个函
中。如果风格字段的文本是一个位于括号中的数字，那么这个数字将被解释成一个ID3v1风格代
单个字节中，使用来自一个固定列表的特别风格进行编码。不幸的是，这些代码继续存在于ID3v2
面是一些你将在第27章里用到的函数：
代码：
然后，你需要做的就是定义这些名字数组了。下面的名字数组包含了80种官方的版本1风格，
版本1的风格代码本质上只是一个标准名称数组的索引，因此实现translate-v1-genre的
(defun translated-genre(id3)
最后的难点是保存在TCO或TCON帧中的genre并不容易看明白。在ID3v1中，风格被保存在
(defparameter *id3-v1-genres*
(defun translate-vl-genre(genre)
(aref *id3-v1-genres*(parse-integer genre:start 1:junk-allowed t)))
(let((genre(genreid3)))
"Hard Rock"
"Techno-Industrial""Electronic"
"Trip-Hop"
"Hip-Hop"
;These are the official ID3vl genres.
(if (and genre (char= #\((char genre 0）))
Acid Punk"
Southern Rock"
"DeathMetal"
Psychedelic"
Pop/Funk"
InstrumentalPop"
genre)))
(translate-vl-genre genre)
"Jazz"
"Acid Jazz"
"Jungle"
"vocal"
"Bass"
"Comedy"
"Acid"
"Metal"
"Instrumental
"Jazz+Funk"
"Native American"
"Soul
"Showt
"Country"
"Polka"
"Cult"
www.TopSage.com
unes
"Punk"
"Fusion"
"Retro"
"Trailer
"Dance
"oldies"
"Cabaret"
"Ethnic
"Musical""Rock&Roll
"Trance"
"Disco""Funk"
"Meditative"
"LO-Fi"
"Other"
"New Wave"
"Gothic"
""Classical"
"Tribal"
"Darkwave
"R&B"“Rap"
"Noise
---
## Page 331
体。而另一个主要的基础性内容是一种编写服务器端Web软件的方式，这就是下一章的主题。
格式本身的复杂性。不管怎么说，现在你有了将在第27、28和29章里编写的流式MP3服务器的主
了本书Web站点上的版本，你会发现其实并没有多少行—编写这个库的主要难点在于理解ID3
314
你可能感觉自己在本章里又写了大量代码。但如果你将它们全部放在一个文件里，或是下载
"Synthpop"})
'Christian Rock"
BritPop"
:; These were also invented by the Winamp folks but ignored by the
"Dance Hall"
Freestyle
"Tango"
"Booty Bass"
Gothic Rock"
"Bebob"
"Folk"
onut paarodyoeq anq dueutm yo siouane aua Xq dn apew aram asaui !!
第 25 章 实践：ID3 解析器
Goa
"Latin"
"Duet"
"Primus"
"Black Metal"
"Progressive Rock"
"Folklore"
"Revival "
"Punk Rock"
"Polsk Punk"
"Porn Groove"
www.TopSage.com
"Ballad"
"Celtic"
"Crossover
"Drum Solo"
"Hardcore"
"Power Ballad"