tion 6.3, we have shown that the basic methods AoA-Dev and
CN0-Corr can accurately detect the basic spooﬁng signals
within one rotation cycle (8 seconds). Here, we further test
AoA-Dev and CN0-Corr against the adaptive spoofers that
customize the modulation of the signals for each satellite. The
result is presented in Figure 12. Due to space limit, we only
show the result for the OA-H setting. Other settings have
similar outcomes and thus results are omitted for brevity.
The result in Figure 12 conﬁrms that the basic methods
are no longer effective against the adaptive spoofer. The area
under the ROC is close to 0.5, which means the detection is
close to a random guess. This result conﬁrms the effective
implementation of adaptive spooﬁng.
Adaptive Spoofer vs. Advanced Detection.
Next, we
evaluate the advanced methods against adaptive spoofer. Re-
call both Average Over Rotation Cycles (AORC) and the
Spectrum Analysis (SA) are used to estimate the spoofer’s
AoA. With the AoAs, we then run AoA-Dev to perform
the detection. We call the two methods “AORC-Dev” and
“SA-Dev” respectively. We perform the experiments under
both open air (OA) and urban canyon (UC) environments
using two different types of shields. Since the advanced meth-
ods, especially AORC, need more time to compute AoAs by
3946    30th USENIX Security Symposium
USENIX Association
0.06250.125Frequency (Hz)0100200MagnitudeFrequency-Magnitude0.06250.125Frequency (Hz)-2000200Phase (degree)Frequency-Phase00.51False positive rate00.51True positive rateOA-H66.40.1AoA-DevCN0-Corr(a) Open air with Human block-
age
(b) Open air with Metal blockage
(c) Urban Canyon with Human
blockage
Figure 13: ROC curves for our countermeasures against adap-
tive spooﬁng under different environments. The threshold
values for the best performing points are marked out.
(d) Urban Canyon with Metal
blockage
Figure 14: Detection accuracy (OA-H) within different dura-
tions. Same conﬁguration as that of Figure 13a.
design, we run the measurements for at least 2 minutes per
setting. The results are shown in Figure 13a.
We have two key observations. First, both AORC-Dev and
SA-Dev methods work well in an open air (OA) environment.
When the human body is used as the shield, AORC-Dev
and SA-Dev can achieve true positive rates of 1.0 and 0.95,
respectively, with 0 false positives. Comparing the two types
of shields, we observe the metal sheet has a slight performance
decline. This is likely due to the fact that the metal sheet is
thinner and smaller than a human body.
Second, SA-Dev works better than AORC-Dev in the Ur-
ban Canyon (UC) environment. SA-Dev derives AoA from
spectrum analysis based on phase, which is likely more robust
against the multipath effect compared with the direct AoA
estimation in the time domain (AORC-Dev). In the urban
canyon, SA-Dev’s performance is still acceptable with a true
positive rate of 0.8 and a false positive rate of 0.05.
(a) ∆ f ∈ [0.01,0.05)
(b) ∆ f ∈ [0.05,0.09)
Figure 15: Impact of different guessing errors of the adaptive
spoofer (∆ f ). The modulation frequency is 0.125 Hz in OA-
M, 60 seconds of measurements. The threshold values for the
best performing points are marked out.
Detection Speed.
For AORC-Dev and SA-Dev methods,
we further analyze their detection speed, by setting different
measurement rotation duration. The results are shown in
Figure 14. We ﬁnd that both methods need about 70 seconds
to converge to a steady accuracy. The time required to detect
the adaptive attack is longer than that of the basic attack (in
comparison with Figure 6). The reason is that we need to
rotate the device for enough cycles to derive AoAs.
Sensitivity to Guessing Errors.
Finally, we brieﬂy evalu-
ate the impact of the attacker’s guessing errors. Recall that
the attacker needs to guess the rotation speed of the GPS
spoofer (even with the correct initial facing angle). Here,
we examine the impact of guessing errors. Guessing error
∆ f is the difference between the GPS receiver’s real rotation
speed and the guessed one by the spoofer (measured in Hz).
In this experiment, we conﬁgure the attacker-guessed value
(modulation frequency) as 0.125 Hz. Then we change the
rotation speed of the GPS spoofer dynamically. Figure 15
shows the impact of ∆ f on the detection performance. We ﬁnd
that when the guessing error is above 0.05 Hz, the detection
accuracy remains high for both methods. Even if the attackers
have guessed the rotation speed accurately (e.g., with an error
between 0.01Hz – 0.05Hz), the detection performance only
has a small decline. Overall, our detection methods are not
very sensitive to the guessing errors of the adaptive spoofer.
10 Discussion
10.1 Spoofer Localization
Given our methods can provide a rough estimation of AoAs
(both basic and advanced methods), the information can be
further used to localize the spoofer. For example, the defender
can conduct AoA measurements at two different locations
and then perform triangulation to obtain the spoofer’s loca-
tion. However, this method may suffer from AoA estimation
errors. Another idea is to perform AoA-guided navigation to
locate the spoofer via multiple steps. Due to space limits, we
USENIX Association
30th USENIX Security Symposium    3947
00.51False positive rate00.51True positive rateOA-H82.278.3AORC-DevSA-Dev00.51False positive rate00.51True positive rateOA-M79.482.7AORC-DevSA-Dev00.51False positive rate00.51True positive rateUC-H55.554.6AORC-DevSA-Dev00.51False positive rate00.51True positive rateUC-M72.965.2AORC-DevSA-DevDetection Accuray vs Time (OA-H)102030405060708090100110120Rotatation Duration (second)00.51Detection AccuracyAORC-DevSA-Dev00.51False positive rate00.51True positive rateOA-M79.579.4AORC-DevSA-Dev00.51False positive rate00.51True positive rateOA-M79.2AORC-DevSA-Dev76.4presented our experiments in Appendix A. The experiments
shown promising results (e.g., we are able to localize the
spoofer within 10 meters).
10.2 Multi-spoofer Scenario
Our threat model assumes the attacker has only one spoofer to
transmit signals from one direction. For dedicated attackers,
in theory, they can position multiple spoofers at exactly the
same angles of all the available satellites (one spoofer per
satellite), to potentially disrupt our defense methods. How-
ever, such an attack is difﬁcult to realize in practice. First, the
attacker needs to purchase a large number of spoofers (close
to the number of available satellites). Second, all the spoofers
need to be precisely synchronized (e.g., at the nanosecond
level [2]) to avoid discrepancies in their signal time. Third,
the spoofers also need to constantly adjust their positions to
align the angles when the victim GPS device is on the move
(which is expected during the navigation scenarios for vehi-
cles, drones, and ships). This further complicates the attack
given the difﬁculty of coordinating the precise movements
of multiple (often more than 10) spoofers in real-time while
ensuring they remain stealthy.
Attack Setup.
To understand the multi-spoofer attack, we
present a supplemental experiment. This experiment is based
on a trace-driven simulation rather than real-world multi-
spoofer deployments. This is again due to the ethical and
legal constraints (as discussed in Section 6.2) that prevent us
from running real spoofers in an open space. Our anechoic
chamber is not big enough to support experimenting with mul-
tiple real spoofers (e.g., 10 spoofers). We relax some of the
constraints and emulate a more practical multi-spoofer attack.
We assume the attacker owns n spoofers. Instead of coordi-
nating their precise positions and movements in real-time, we
assume the attacker randomly position these spoofers on a
circle around the target GPS device. We simulate this attack
under the OA-H setting, based on the real-world GPS traces
collected from both spooﬁng and non-spooﬁng experiments
(Section 6). We keep the non-spooﬁng traces unchanged;
For the spooﬁng traces, we shift the azimuth value (i.e., an-
gle) of the single-directional spooﬁng signals to n random
values, which creates/emulates n spoofers. We use the 30-
second traces and evaluate the multi-spoofer attack against
our detection methods.
Observations. We ﬁnd that the multi-spoofer attack is in-
deed stronger than a single-spoofer attack. Figure 16a shows
the performance of the AoA-Dev method. We observe that the
AoA-Dev method can sustain at most n = 3 spoofers. When
n is increased to 4, the detection accuracy is signiﬁcantly
decreased. This is expected, since AoA-Dev detects spooﬁng
based on the standard deviation of AoAs of different satellites.
When multiple spoofers are physically positioned at different
(a) AoA-Dev method
(b) AoA-Combo method
Figure 16: Multi-spoofer simulation results under OA-H. “n
Spof” means n spoofers are used in the simulation.
angles, the standard deviation of AoAs will be signiﬁcantly
increased (which misleads the detector).
In the meantime, we also evaluate the multi-spoofer attack
against an improved version of AoA-Dev. The idea is to
combine the AoA-Dev algorithm (Section 5.2) with the AoA-
Diff algorithm (Section 5.1). We call this method as “AoA-
Combo”. Intuitively, while multi-spoofer attack may increase
the standard deviation of AoAs, the difference between AoAs
and AoEs would still exist. Note that both AoA-Dev and AoA-
Diff produce an angular value (in degrees) as the output. AoA-
Combo simply takes the output angle of AoA-Diff subtracting
the output angle of AoA-dev (i.e., AoA-Diff - AoA-Dev). The
detection result of AoA-Combo is shown in Figure 16b. The
performance of AoA-Combo is better, with a true positive rate
of 0.86, and a false positive rate of 0.05 under 10 spoofers.
The results show that our methods have some level of re-
silience against multiple spoofers. We leave more in-depth
studies of multi-spoofer attacks to future work.
10.3 Applicable Scenarios and Limitations
Working with other GNSS.
Our methods are mainly eval-
uated against GPS spooﬁng attacks. The same idea can be
extended to the civilian bands of other Global Navigation
Satellite Systems such as GLONASS, Beidou, and Galileo.
Other wireless communication techniques that require multi-
ple over-the-air sources (such as the transition zone of cellular
networks) can leverage this idea to detect spooﬁng too.
Possible Deployment Scenarios.
Our smartphone imple-
mentation is primarily used to examine the idea’s feasibility.
We have not fully explored the design space yet. For example,
one of our prototypes relies on human body as the shield. This
prototype can be further improved, e.g., by taking advantage
of the GPS sensors in wearable devices such as smartwatches
and smart necklaces. With wearable devices, we may leverage
the blocking effect caused by natural human movements.
The experiments with the metal shield (Section 6.3) also
suggest other design possibilities. For example, we may build
a mechanical gadget that automatically rotates a GPS receiver
along with a metal plank. Such a gadget can be used in
3948    30th USENIX Security Symposium
USENIX Association
00.51False positive rate00.51True positive rateOA-H74.6  83.283.21 Spof2 Spof3 Spof4 Spof83.200.51False positive rate00.51True positive rateOA-H-39.710 Spofmoving vehicles or stationary infrastructures that need GPS
services. The rotation motion of the gadget can be powered
either electrically or through natural forces (e.g., wind force
propelling a pinwheel-like structure). We defer the design of
such mechanical gadgets to future work.
Applicability to More Advanced GPS Chipsets.
The
smartphones we used all have a refresh rate of 1Hz for the
GPS reading. Such a low refresh rate limits our speed of
detection as it takes time to collect CN0 measurements. Note
that many GPS chipsets in the market can have a refresh rate
of 10Hz. We expect that our scheme can detect spooﬁng
attacks even faster for these more advanced GPS chipsets.
Other Adaptive Attack Strategies.
In addition to the
adaptive attack method discussed in Section 7, attackers may
come up with other strategies. For example, attackers may
choose to spoof a subset of satellites instead of all of them.
The idea is to let the victim device receive both spoofed
and legitimate GPS signals, and thus disrupt our detection
scheme (e.g., AoA-Dev). This adaptive strategy, however, is
difﬁcult to realize in practice. First, to avoid any suspicion
caused by abrupt changes in GPS time estimation, spoofers
must maintain both precise time synchronization and phase
coordination between the spoofed and real signals. Then, even
if this challenging requirement is met, the attacker would face
two situations: (1) If the attacker lets the legitimate signals
dominate, the victim will no longer calculate the desired fake
location. This is because GPS devices typically have satellite
selection algorithms that automatically exclude “outliers”.
Such algorithms are implemented differently among vendors
(i.e., it is difﬁcult to engineer a universally effective attack).
(2) If the attacker lets spoofed signals dominate, our detection
method can still work since the AoAs of the majority of the
satellites would still be clustered around similar angles.
Other Limitations.
Our experiment setups also have limi-
tations. Due to FCC rules and regulations, we only conducted
non-spooﬁng experiments in the outdoor environments and
limited our spooﬁng experiments to indoor. It is possible the
indoor setup cannot perfectly mimic the open air and urban
canyon environments.
11 Conclusion
In this paper, we propose a GPS anti-spooﬁng framework for
off-the-shelf GPS chipsets. This allows our spooﬁng detec-
tion methods to be backward compatible with a large number
of existing GPS devices. By rotating the GPS receiver, we
create a blocking effect that allows us to estimate the signals’
angle-of-arrival (AoA) to facilitate spooﬁng detection. we
demonstrate the robustness and the efﬁciency of the detec-
tion schemes under both basic and adaptive spooﬁng attacks.
We also discuss other potential application scenarios of the
detection methods beyond our current prototypes.
Acknowledgment
We thank our shepherd Aanjhan Ranganathan and anonymous
reviewers for their constructive comments and suggestions.
This work was supported in part by NSF grants CNS-1547366,
CNS-1824494, CNS-2030521, and CNS-1717028.
References
[1] Spooﬁng a
super yacht at
UT News,
https://news.utexas.edu/2013/07/30/
sea.
2013.
spoofing-a-superyacht-at-sea/.
[2] Gp2015 datasheet.
DigChip.com, 2015.
https:
//www.digchip.com/datasheets/parts/datasheet/
537/GP2015.php.
[3] Labsat 3 wideband.
labsat.co.uk, 2017.
https:
//www.labsat.co.uk/index.php/en/products/
labsat-3-wideband.
[4] Internet for the masses not a focus for kymeta, phasor, 2018.
https://spacenews.com/internet-for-the-masses-
not-a-focus-for-kymeta-phasor/.
[5] Global positioning system (gps), 2020. https://www.gps.
gov/.
[6] Jahshan Bhatti and Todd E Humphreys. Hostile control of
ships via false gps signals: Demonstration and detection. NAV-
IGATION: Journal of the Institute of Navigation, 2017.
[7] Kenneth R Britting.
Inertial navigation systems analysis.
Wiley-Interscience, 1971.
[8] Ali Broumandan, T Lin, A Moghaddam, D Lu, J Nielsen, and
G Lachapelle. Direction of arrival estimation of gnss signals
based on synthetic antenna array. In ION GNSS+, 2007.
[9] Hongjun Choi, Wen-Chuan Lee, Yousra Aafer, Fan Fei, Zhan
Tu, Xiangyu Zhang, Dongyan Xu, and Xinyan Deng. De-
tecting attacks against robotic vehicles: A control invariant
approach. In ACM CCS, 2018.
[10] crescentvenus. WALB ( Wireless Attack Launch Box ), 2017.
https://github.com/crescentvenus/WALB.
[11] Mahsa Foruhandeh, Abdullah Z. Mohammed, Gregor Kildow,
Paul Berges, and Ryan Gerdes. Spotr: Gps spooﬁng detection
In Proceedings of the 13th ACM
via device ﬁngerprinting.
Conference on Security and Privacy in Wireless and Mobile