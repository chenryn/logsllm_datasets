# Technical Issues with Hypervisors

## Problem Statement
Hypervisor failures can significantly impact the performance and reliability of virtual machines (VMs). Currently, there is no effective solution to detect these failures. This document outlines three methods for detecting hypervisor anomalies by monitoring VM resources.

### How It Works
1. **IaaS Layer Correlated Anomalies**:
   - **Problem**: Detecting hypervisor failures.
   - **Method 1 (Change Points)**:
     1. Treat time-series data as univariate.
     2. Detect change points.
     3. Use a voting mechanism to decide on global changes.
   - **Method 2 (Isolation Forest)**:
     1. Treat time-series data as features.
     2. Detect significant changes.
     3. Propose and compare three algorithms.
   - **Method 3 (ECP E.Divisive)**:
     1. Treat time-series data as multivariate.
     2. Detect multiple change points.
     3. Identify correlated anomalies.

### Technologies
- **Production Environment**:
  - Indirect approach to detect hypervisor failures by monitoring VMs.
  - Three algorithms were evaluated on existing datasets from simulation environments, synthetic data generators, and public sources.

### Assumptions & Limitations
- Datasets used for evaluation were collected from various sources.
- When a hypervisor malfunctions, VM resource saturation changes abruptly within a window \( w \).
- TRL 5: Basic technological components are integrated with realistic supporting elements for testbed evaluation.

## Root Cause Analysis (RCA)

### Pain Point Description
Once an anomaly is detected, root cause analysis (RCA) is essential to resolve problems. RCA can be based on application logs, metrics, traces, and events.

### Impact
- **Main Achievement**: Lower troubleshooting time by 80%.
- **RCA Techniques**:
  1. **Template Mining**: Fast log reconstruction using the Drain algorithm.
  2. **Natural Language Processing (NLP)**: Log parsing and keyword extraction using NLP.
  3. **Dynamic Grouping**: Time-series classification using Poisson models and Pearson correlation coefficients.

### How It Works
- **Step 1**: Template mining to reconstruct logs.
- **Step 2**: NLP for language-aware log parsing and keyword extraction.
- **Step 3**: Dynamic grouping using Poisson models and correlation coefficients.

### Technologies
- **Production Environment**:
  - Novel, fast algorithms for RCA using log analytics.
  - Topic extraction for fuzzy queries.
  - Online log processing and model construction for immediate RCA.
  - Interactive user interface for easy report browsing.

### Assumptions & Limitations
- On-demand processing requires a certain range of logs to learn normality.
- Results depend on the quality of service logs.
- TRL 5: Basic technological components are integrated with realistic supporting elements for testbed evaluation.

## Multi-modal Anomaly Detection

### Pain Point Description
Move from single-source, single-dimension anomaly detection to multi-source, multi-dimension detection.

### Impact
- **Main Achievement**: Lower false positive alarm rate.
- **Techniques**:
  - Robust anomaly detection ensembles.
  - Extend approaches such as SkyWalking.
  - Use semi-supervised learning for more precise detection.

### How It Works
- **Step 1**: Learning the structure of traces generated by each service endpoint.
- **Step 2**: Aggregating all traces into a behavior model.
- **Step 3**: Comparing new traces with the behavior model to detect anomalies.
- **Step 4**: Determining the root cause when an anomaly is detected.

### Technologies
- **Production Environment**:
  - Machine learning and statistical approaches for sequential data processing.
  - Deep learning (LSTM, CNN), machine learning (Optiks), and sequence analysis (LCS, Multiple sequence alignment, Needleman-Wunsch).

### Assumptions & Limitations
- Requires special software development for recurrent neural networks like LSTM.
- Requires access to topology services.
- TRL 3: Active research and development is initiated.

## Network Verification

### Pain Point Description
Users deploy Virtual Private Clouds (VPCs) to organize their VMs. Configuration errors in VPCs are difficult to localize and correct.

### Impact
- **Main Achievement**: NetworkBrain for planning, discovery, analysis, and optimization.
- **Techniques**:
  - Model networks with all elements (VPC, ECS, Subnets, ACLs, Security Groups) using extended Binary Decision Diagrams (BDDs).
  - Compute all classes of packets expected to flow between source-destination pairs.
  - Efficient detection and localization mechanisms.

### How It Works
- **Step 1**: VPC configuration.
- **Step 2**: Network object model creation.
- **Step 3**: Abstract data plane construction.
- **Step 4**: Verification and diagnosis of reachability problems.

### Technologies
- **Production Environment**:
  - Optimization of BDDs for large-scale verification scenarios.
  - Network analysis tools and the Bastfish network configuration analysis tool.

### Assumptions & Limitations
- Users need to understand which rule precludes reachability and manually correct it.
- Future research on assisted correction is needed.
- TRL 5: Basic technological components are integrated with realistic supporting elements for testbed evaluation.

---

**Copyright Â© 2019 Huawei Technologies Co., Ltd.**
All Rights Reserved. The information in this document may contain predictive statements. Actual results and developments may differ materially from those expressed or implied. Therefore, such information is provided for reference only and constitutes neither an offer nor an acceptance. Huawei may change the information at any time without notice.