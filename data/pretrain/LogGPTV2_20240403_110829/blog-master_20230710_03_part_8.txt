mkdir logs  
vi .dockerignore  
logs/  
```  
6、制作镜像  
6\.1、确认已开启docker 实验属性: `"experimental": true` .  在docker desktop setting: docker engine中配置.  例如:  
```  
{  
  "builder": {  
    "gc": {  
      "defaultKeepStorage": "20GB",  
      "enabled": true  
    }  
  },  
  "dns": [  
    "8.8.8.8"  
  ],  
  "experimental": true,  
  "registry-mirrors": [  
    "https://xxxxxxx.mirror.aliyuncs.com"  
  ]  
}  
```  
下载debian amd64架构基础镜像  
```  
docker pull --platform=linux/amd64 debian:11.8  
```  
确认下载的debian 基础镜像 架构符合预期: amd64  
```  
当前打包镜像的是macbook m2芯片机器:  
  U-4G77XXWF-1921:pg14 digoal$ arch  
  arm64  
下载的debian 基础镜像 架构符合预期: amd64 , 因为我们目标是打包x86_64(amd64)的镜像  
  U-4G77XXWF-1921:pg14 digoal$ docker image inspect debian:11.8|grep Architecture  
          "Architecture": "amd64",  
```  
6\.2、制作postgresql 14镜像:  
```  
cd ~/pg14  
docker build --platform=linux/amd64 -t="digoal/pg14:with_exts_amd64" . 2>&1 | tee ./logs/build.log  
# docker build --platform=linux/amd64 -t="digoal/pg14:with_exts_amd64" --no-cache . 2>&1 | tee ./logs/build.log  
```  
仔细检查是否有错误并解决, 例如:  
```  
grep Error ./logs/build.log  
grep -i fail ./logs/build.log  
grep -i fatal ./logs/build.log  
grep ERROR ./logs/build.log
grep "ERR\!" ./logs/build.log
grep "E: " logs/build.log  
grep error ./logs/build.log | grep -v "\-Werror"  
```  
修复问题后, 可以使用build好的镜像启动容器测试.  
```  
docker run --platform=linux/amd64 -d -it -P --cap-add=SYS_PTRACE --cap-add SYS_ADMIN --privileged=true --name pg --shm-size=1g digoal/pg14:with_exts_amd64  
docker exec -ti pg bash  
psql  
```  
7、推送镜像到阿里云个人镜像服务, 参考:  
- [《制作PolarDB | PostgreSQL 开源docker镜像, 集成大量插件方便学习, 并推送到阿里云镜像服务》](../202307/20230710_02.md)  
7\.1、 将镜像推送到Registry  
```  
docker login --username=dig***@126.com registry.cn-hangzhou.aliyuncs.com  
docker images  
docker tag [ImageId] registry.cn-hangzhou.aliyuncs.com/digoal/opensource_database:[镜像版本号]  
docker push registry.cn-hangzhou.aliyuncs.com/digoal/opensource_database:[镜像版本号]  
```  
根据实际镜像信息替换示例中的`[ImageId]`和`[镜像版本号]`参数。 例如:  
```  
docker tag [ImageId] registry.cn-hangzhou.aliyuncs.com/digoal/opensource_database:pg14_with_exts  
docker push registry.cn-hangzhou.aliyuncs.com/digoal/opensource_database:pg14_with_exts  
```  
7\.2、 拉取image不需要login  
```  
docker pull registry.cn-hangzhou.aliyuncs.com/digoal/opensource_database:pg14_with_exts  
```  
加platform参数启动容器:  
```  
docker run --platform linux/amd64 -d -it -P --cap-add=SYS_PTRACE --cap-add SYS_ADMIN --privileged=true --name pg --shm-size=1g registry.cn-hangzhou.aliyuncs.com/digoal/opensource_database:pg14_with_exts  
-- 也可以在打包镜像的时候指定多平台, 具体请参考docker 文档.  
-- docker buildx build --platform=linux/amd64,linux/arm64 -t="digoal/pg14:with_exts" . 2>&1 | tee ./logs/build.log  
```  
## 集成了哪些插件? 
插件的详细功能和用法请参考:  
- [《未来数据库方向 - 以及PostgreSQL 有价值的插件、可改进功能、开放接口 (202005)》](../202005/20200527_06.md)  
1、PG 14自带的所有插件.  
2、额外安装的插件或工具  
类型增强
- pgmp, PostgreSQL Multiple Precision Arithmetic extension, 支持GMP library, 高性能表达decimal类型.
- unit, 支持很多国际单位的类型
- pg_uuidv7, A tiny Postgres extension to create version 7 UUIDs
- zson, ZSON is a PostgreSQL extension for transparent JSONB compression
- uint, 无符号整型.
- nanoid, nanoid类型.
- ulid, 半高uuid类型.
- snowflake, snowflakeID 分布式数据库全局唯一ID生成器, 比UUID效率高. 
函数增强  
- extra-window-functions, 扩展窗口函数  
- first-last-agg, 扩展聚合函数  
- tdigest, 扩展窗口、聚合函数  
- rational, 扩展插值算法和函数  
- aggs_for_vecs, 数组类型聚合函数扩展.  
- quantile, 统计分析相关聚合函数扩展.
- pgjwt, JSON 值转储格式: JSON Web Tokens
- pg_idkit, 集成了大量UUID方法和函数.
近似统计分析  
- hll, 近似分析, 例如滑动窗口UV, 短视频场景存储已读列表+快速过滤已读视频  
- datasketches, 近似统计算法库  
标签圈选  
- smlar, 标签相似搜索  
- roaringbitmap, 标签圈选  
- pgfaceting, 基于rb index的快速降维分析插件(例如任意条件的UV分析, 滑动窗口分析等)  
存储引擎、分析加强:  
- citus, 分布式和列存储  
- columnar, Hydra Columnar extension. 列存储引擎. 
- vops, 瓦片存储和向量化计算  
- orioledb, 基于UNDO机制的存储引擎.    (未集成.)  
- zedstore, 行列混合存储引擎.          (未集成.)  
- pg_cryogen, appendonly的压缩存储引擎.   (未集成.)  
- pg_ivm, 增量刷新物化视图  
多值列索引扩展加速  
- rum, 多值列+标量复合搜索加速  
- parray_gin, 多值列元素值模糊搜索  
多模型业务场景  
- rdkit, 化学类型+算法+索引  
- timescaledb, 时序  
- pggraphblas, 图式关系加速搜索  
- age, 图式关系搜索(兼容cypherQL语法).    
- madlib, 机器学习分析库  
- pg_variables, 会话或事务级内存变量, 例如用于计数器、需要在会话|事务中存储临时值的场景.  
- temporal_tables, 自动按字段时间归档历史数据.  
- pgtt, 全局临时表, 类似Oracle 全局临时表的风格.
- pipelinedb, 流计算.
- pg4ml, 使用 plpgsql 编写的机器学习框架.
- PGMQ, pg消息队列. 
空间业务场景  
- pgrouting, 路由算法  
- pgrouting-doc  
- pgrouting-scripts  
- pgsphere, 空间类型+索引  
- pointcloud, 点云  
- q3c, 空间类型+索引  
- postgis-3, 丰富的空间类型+算法+函数接口+索引  
- postgis-3-scripts  
- ip4r, IP转地理位置信息  
- h3, h3_postgis, uber开源的基于H3模型的地图相关插件.  
- MobilityDB, An open source geospatial trajectory data management & analysis platform. https://github.com/MobilityDB/MobilityDB
向量搜索  
- similarity, 近似算法, 类型+索引  
- imgsmlr, 图像搜索, 类型+索引  
- pgvector, 向量搜索, 类型+索引(ivfflat、hnsw)
- pg_sparse, paradedb开源. 稀疏向量搜索. 使用rust编写. 
- svector, paradedb开源. 稀疏向量搜索(就是pg_sparse, 更名为svector). 使用c编写.  https://docs.paradedb.com/blog/introducing_sparse   
- hnsw, 向量搜索, 类型+索引(hnsw)  
- pg_embedding, 向量搜索, 类型+索引(hnsw)  
- lantern, 向量搜索, 类型+索引(usearch implemented hnsw)
- lantern_extras, lantern辅助插件: 数据库内置大模型, 外接大模型, 文本|图像向量化, 加速向量索引build等.
- vectorize, 结合pgvector和OpenAI的应用解决方案型插件, 实现db4ai, ai4db的应用. 
文本场景增强  
- prefix, 前缀范围模型  
- groonga, 支持wchar的任意模糊搜索  
- pg_bigm, 增强pg_trgm模糊搜索  
- pg_jieba, 结巴中文分词
- zhparser, scws中文分词
- pg_bm25, paradedb开源. bm25(elastic search目前使用的相关算法)支持, 大数据量文本搜索比传统tsvector,tsrank提升20x性能.
- pg_search, paradedb开源. 通过 bm25+hnsw 支持bm25和向量相似文本搜索. (202401更新, 该插件可能融合入pg_bm25了.)
- pgpcre, 正则. This is a module for PostgreSQL that exposes Perl-compatible regular expressions (PCRE) functionality as functions and operators. 
数据融合, 冷热分离  
- mongo_fdw, 读写mongo数据源  
- parquet_s3_fdw, 读写s3,oss对象存储和parquet文件.  (未集成, 通过duckdb_fdw可以读写s3, aliyun oss, 更加快捷)  
- mysql-fdw, 读写mysql数据源  
- ogr-fdw, 基于ogr的通用数据源读写插件  
- oracle-fdw, 读写oracle数据源  
- tds-fdw, 读写ms sql数据源  
- dblink_plus, mysql,sqlite3,oracle的dblink  
- duckdb_fdw, 读写duckdb数据源. 通过duckdb_fdw还可以读写存放在s3的csv, parquet文件. 
- sqlite_fdw, 读写sqlite3
- parquet_fdw, 读parquet文件. 
- hdfs_fdw, 读写hive, spark数据源  
- pgmemcache, 直接的memcache控制函数库  
- pg_curl, 通过curl支持http,ftp,https等网络协议. 将远程数据加载到数据库中.
- pg_net, 异步HTTP调用接口.
- pgsql-http, HTTP 调用接口.
- pg2arrow , 将pg sql结果转换为arrow格式的数据文件. 适合与其他arrow生态的数据分析产品、DB交换数据, 融入大数据生态, 加速数据分析.
- aws_s3, 读写aws s3对象存储.
- decoderbufs, 逻辑复制decoding, logical decoder output plugin to deliver data as Protocol Buffers
- influxdb_fdw, InfluxDB Foreign Data Wrapper for PostgreSQL.
- pg_analytics, paradedb开源的zero-ETL 数据超融合计算插件. [PostgreSQL zero-ETL 超融合计算 插件 pg_analytics](../202401/20240130_03.md)  
扩展协议, 兼容其他产品
- FerretDB, 支持mongodb协议, 可使用mongodb客户端连接. (未集成)
- babelfish, 支持sql server协议, 可使用sqlserver客户端连接. (未集成)
- Apache Arrow Flight SQL adapter, arrow 协议, 可使用arrow driver连接. (未集成, 需PG 15及以上版本.)
- orafce, 扩展Oracle兼容性
- pg_dbms_metadata, Oracle's DBMS_METADATA Compatibility for PostgreSQL DDL Extraction
存储过程和函数语言增强  
- jsquery, 增强json语法查询库  
- pldebugger, 调试plpgsql函数  
- plpgsql-check, 预检查plpgsql函数  
- pljava, java存储过程和函数语言  
- pllua, lua存储过程和函数语言  
- plproxy, 代理(通常用于sharding和并行数据聚合访问场景)  
- plv8, google v8存储过程和函数语言.      
- plpython3, python存储过程和函数语言  
- plr, R存储过程和函数语言  
- plprofiler, 存储过程和函数的性能分析功能
- plrust, rust存储过程语言支持
安全增强  
- postgresql_anonymizer, 敏感信息遮蔽  
- pgsodium, 敏感信息遮蔽以及sodium加密库函数
- credcheck, 强制约束用户密码复杂度
- pg_savior, prevent accidental data loss due to non-parameterized DELETE queries without a WHERE clause.
数据库管理、审计、性能优化、数据库迁移、同步等  
- powa, 索引推荐, 等待事件分析, 命中率, 配置变更跟踪等  
- hypopg, 虚拟索引, 索引推荐  
- pg-qualstats, 索引推荐  
- pg-stat-kcache, 跟踪cpu、文件系统真实读写行为  
- pg-wait-sampling, 等待事件采样分析  
- show-plans, 执行过程中的SQL执行计划查询  
- pg_hint_plan, 强制设定SQL执行计划  
- plantuner, 增加了一些参数用来控制SQL执行计划  
- pg_store_plans, 保存SQL执行计划  
- pg_plan_inspector, 复杂SQL执行计划优化修正插. 使用机器学习的方法对收集到的SQL和执行计划等信息进行分析, 从而提升性能.  通过sql安装, 没有extension control file
- pg_stat_monitor, 保存数据库运行时统计信息快照, 用于分析性能  
- pg_statviz, 保存统计信息快照, 使用matplotlib绘图.  
- pg_profile, 使用pg_stat_statements, pg_stat_kcache的统计信息打快照并对快照进行分析. 类似[awr](https://zubkov-andrei.github.io/pg_profile/report_examples/pg15.html). 不过我觉得perf insight和pg_stat_monitor更好用.  
- pg_statsinfo, PG数据库监控工具, 支持按快照选取分析系统运行状态, 类似Oracle statspark.  
- pg_stats_reporter, pg_statsinfo报告的网页呈现, 更加美观, 类似awr效果.
- pgtelemetry, 一些DBA常用的监控数据库和操作系统运行状态的视图. 
- pgfincore, 修改数据文件的page cache行为  
- pg_repack, 几乎不影响业务的收缩膨胀的表和索引浪费的存储空间