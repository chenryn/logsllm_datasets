```  
explain analyze select id, province, info, crt_date, crt_ts, filename from parquet_scan('/Users/digoal/duckdb/build/release/testdata/*/*/*.parquet', HIVE_PARTITIONING=1, FILENAME=1) where crt_date='2022-01-02' and province='zhejiang';  
```  
```  
┌───────────────────────────┐  
│      EXPLAIN_ANALYZE      │  
│   ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─   │  
│             0             │  
│          (0.00s)          │  
└─────────────┬─────────────┘                               
┌─────────────┴─────────────┐  
│         PROJECTION        │  
│   ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─   │  
│             id            │  
│          province         │  
│            info           │  
│          crt_date         │  
│           crt_ts          │  
│          filename         │  
│   ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─   │  
│           10000           │  
│          (0.00s)          │  
└─────────────┬─────────────┘                               
┌─────────────┴─────────────┐  
│        PARQUET_SCAN       │  
│   ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─   │  
│          crt_date         │  
│          province         │  
│             id            │  
│            info           │  
│           crt_ts          │  
│          filename         │  
│          EC=10000         │  
│   ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─   │  
│           10000           │  
│          (0.00s)          │  
└───────────────────────────┘      
```  
4、使用parquet_scan , 未包含分区条件, 查看计划  
```  
explain analyze select id, province, info, crt_date, crt_ts, filename from parquet_scan('/Users/digoal/duckdb/build/release/testdata/*/*/*.parquet', HIVE_PARTITIONING=1, FILENAME=1);  
```  
```  
┌───────────────────────────┐  
│      EXPLAIN_ANALYZE      │  
│   ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─   │  
│             0             │  
│          (0.00s)          │  
└─────────────┬─────────────┘                               
┌─────────────┴─────────────┐  
│        PARQUET_SCAN       │  
│   ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─   │  
│             id            │  
│          province         │  
│            info           │  
│          crt_date         │  
│           crt_ts          │  
│          filename         │  
│          EC=40000         │  
│   ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─   │  
│           40000           │  
│          (0.01s)          │  
└───────────────────────────┘    
```  
分区条件可以下推, 收敛需要扫描的parquet文件.    
参考  
https://github.com/duckdb/duckdb/blob/master/test/sql/copy/parquet/parquet_filename.test  
https://github.com/duckdb/duckdb/blob/master/test/sql/copy/parquet/test_parquet_scan.test  
https://www.modb.pro/db/447864  
https://github.com/duckdb/duckdb/blob/master/test/sql/copy/parquet/parquet_metadata.test  
duckdb/extension/parquet/parquet-extension.cpp  
HIVE_PARTITIONING参数:   
```  
binary_as_string  
filename  
hive_partitioning  
class ParquetScanFunction {  
public:  
	static TableFunctionSet GetFunctionSet() {  
		TableFunctionSet set("parquet_scan");  
		TableFunction table_function({LogicalType::VARCHAR}, ParquetScanImplementation, ParquetScanBind,  
		                             ParquetScanInitGlobal, ParquetScanInitLocal);  
		table_function.statistics = ParquetScanStats;  
		table_function.cardinality = ParquetCardinality;  
		table_function.table_scan_progress = ParquetProgress;  
		table_function.named_parameters["binary_as_string"] = LogicalType::BOOLEAN;  
		table_function.named_parameters["filename"] = LogicalType::BOOLEAN;  
		table_function.named_parameters["hive_partitioning"] = LogicalType::BOOLEAN;  
		table_function.get_batch_index = ParquetScanGetBatchIndex;  
		table_function.serialize = ParquetScanSerialize;  
		table_function.deserialize = ParquetScanDeserialize;  
		table_function.projection_pushdown = true;  
		table_function.filter_pushdown = true;  
		table_function.pushdown_complex_filter = ParquetComplexFilterPushdown;  
		set.AddFunction(table_function);  
		table_function.arguments = {LogicalType::LIST(LogicalType::VARCHAR)};  
		table_function.bind = ParquetScanBindList;  
		table_function.named_parameters["binary_as_string"] = LogicalType::BOOLEAN;  
		table_function.named_parameters["filename"] = LogicalType::BOOLEAN;  
		table_function.named_parameters["hive_partitioning"] = LogicalType::BOOLEAN;  
		set.AddFunction(table_function);  
		return set;  
	}  
```  
分区字段名不能和表里的字段名重名冲突, 相关代码  
```  
Binding::Binding(BindingType binding_type, const string &alias, vector coltypes, vector colnames,  
                 idx_t index)  
    : binding_type(binding_type), alias(alias), index(index), types(move(coltypes)), names(move(colnames)) {  
	D_ASSERT(types.size() == names.size());  
	for (idx_t i = 0; i < names.size(); i++) {  
		auto &name = names[i];  
		D_ASSERT(!name.empty());  
		if (name_map.find(name) != name_map.end()) {  
			throw BinderException("table \"%s\" has duplicate column name \"%s\"", alias, name);  
		}  
		name_map[name] = i;  
	}  
}  
```  
#### [期望 PostgreSQL 增加什么功能?](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
#### [PolarDB for PostgreSQL云原生分布式开源数据库](https://github.com/ApsaraDB/PolarDB-for-PostgreSQL "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")