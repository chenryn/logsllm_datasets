could represent ECN-disabling devices on path. A further 34 IPv4 and 3 IPv6
3 Note that the relatively high prevalence of permanent IPv6 connection failure (nearly
10 %) indicates continued limited operational experience with IPv6.
198
B. Trammell et al.
Table 1. Connectivity statistics, of 581,737 IPv4 hosts and 17,029 IPv6 hosts, all
vantage points, 27 Aug – 9 Sep 2014
IPv4
Hosts
pct
IPv6
Hosts
pct
Description
553805
95.20 % 14889
87.43 % Always connected from all vantage points
3998
8631
11999
0.69 % 1594
9.36 % Never connected from any vantage point
1.48 %
2.06 %
138
324
0.81 % Single transient connection failure
1.90 % Non-ECN-related transient connectivity
578433 99.43 % 16945 99.50 % Total ECN-independent connectivity
2193
15
34
201
2443
862
0.38 %
0.00 %
0.01 %
0.03 %
0.42 %
0.15 %
13
0.08 % Stable ECN dependency near host
0
3
0
16
69
0.00 % Stable ECN dependency on path
0.02 % Potential ECN dependency on path
0.00 % Temporal ECN dependency
0.09 % Total ECN-dependent connectivity
0.41 % Inconclusive transient connectivity
Fig. 1. TTL spectrum of ECN-dependent and -independent connectivity cases
Fig. 2. Proportion of sites failing to connect when ECN negotiation is requested
hosts exhibit potential ECN dependency: no connection attempt requesting ECN
succeeds from one vantage point, and at least one connection attempt with
ECN from another vantage point succeeds, though we cannot rule out transient
connectivity eﬀects here. We also observed time-dependent anomalies: 201 cases
for IPv4 where connectivity was ECN-independent from all vantage points during
one trial, but ECN-dependent during another. This probably represents changes
in network or host conﬁguration during the time we ran our trials.
A further 862 cases for IPv4 and 69 for IPv6 cannot be deﬁnitively classiﬁed
as either ECN-dependent or transient, leading us to estimate an upper-bound
“blackhole” rate of 0.57 % for IPv4 and 0.50 % for IPv6. This is comparable
Enabling Internet-Wide Deployment of Explicit Congestion Notiﬁcation
199
to [5], suggesting that boxes that break connectivity when ECN is requested are
not being replaced quickly.
Connectivity dependency can be linked to the operating system of the web-
server by estimating the initial TTL. As shown in Fig. 1, sites with initial TTL 64
(Linux) and 128 (Windows) are roughly equally represented among hosts exhibit-
ing ECN-dependent connectivity, while Linux servers are far more common
among the majority where connectivity is ECN-independent. ECN-dependent
connectivity failure also depends slightly on website rank as shown in Fig. 2: as
many as 2 % of websites with an Alexa rank between 50,000 and 55,000 fail to
connect when ECN is requested, compared to a background rate of about 0.5 %.
The distribution of these sites by rank is shown in Fig. 2.
3.2 RFC 3168 Fallback Testing
Based on our RFC3168 ECN fallback Linux patch applied to single Ubuntu 14.04
machine at ETH Zurich running the 3.13 kernel we reran ECN Spider against
the hosts which showed some evidence of connectivity depending on ECN and, as
expected, we found that this patch eliminated connection failures attributable to
ECN negotiation, at the cost of increased connection setup latency4. Therefore
the implementation of ECN fallback as the default behavior in all operating sys-
tems will restore connectivity and is an important step for wide-scale deployment
of ECN.
3.3 Conclusions
Our analysis therefore indicates that enabling ECN by default would lead to con-
nections to about ﬁve websites per thousand to suﬀer additional setup latency
with RFC 3168 fallback. This represents an order of magnitude fewer than the
about forty per thousand which experience transient or permanent connection
failure due to other operational issues. Comparison with [5] indicates this situ-
ation is likely unchanged in its magnitude since 2011.
As not all websites are equally popular, failures on ﬁve per thousand websites
does not by any means imply that ﬁve per thousand connection attempts will fail.
While estimation of connection attempt rate by rank is out of scope of this work,
we note that the highest ranked website exhibiting stable connection failure has
rank 596, and only 13 such sites appear in the top 5000.
4 An Analysis of ECN Signaling
We then analyzed the traces taken from our three ECN Spider runs using QoF
to determine the extent of server-side support for ECN, and to investigate the
prevalence of the diﬀerent ways in which the ECN mechanism can fail today in
the Internet.
4 Fallback latency is a function of client implementation. We note anecdotally that
additional latency is on the order of seconds on Windows 7, and barely noticeable
on Mac OS X Mavericks.
200
B. Trammell et al.
Table 2. ECN negotiation statistics, of 581,711 IPv4 hosts and 17,028 IPv6 hosts, all
vantage points, 27 Aug – 9 Sep 2014, compared to previous measurements.
IPv4
Hosts
pct
IPv6
Hosts
pct
2011
2012
pct[5] pct[2]
Description
326743 56.17 % 11138 65.41 % 11.2 % 29.48 % Capable of negotiating
324607
55.80 % 11121
65.31 % –
2136
0.37 %
17
0.11 % –
107
27
0.02 %
0.02 %
1
0
0.01 % –
0.00 % –
–
–
–
–
ECN
...and always negotiate
...sometimes negotiate, of
which...
negotiation depends on path
sometimes reﬂect syn
ack ﬂags
248791
43.23 % 3961
26.23 % 82.8 % 70.52 % Not capable of negotiating
2013
6177
0.35 %
83
0.48 % –
1.06 % 1929
11.33 % –
–
–
ECN
...and reﬂect syn ack ﬂags
Never connect with ECN (see
Sect. 3.1)
4.1 ECN Negotiation
As seen in Table 2, the majority of the top million web servers (56.17 % of those
connecting for IPv4, 65.41 % for IPv6) are now capable of negotiating ECN, con-
tinuing a more or less linear trend since 2008. We attribute this to the decision to
negotiate ECN if requested by the client by default in common server operating
systems. Indeed, there continue to be large diﬀerences in ECN support per oper-
ating system, as shown in Fig. 3: note here that almost no initial-TTL 128 (i.e.
Windows) or 255 (Solaris; also Google) hosts negotiate ECN. Considering only
initial-TTL 64 (Linux) hosts, 326,720 of 468,555 or 69.73 % are ECN capable.
As with connectivity, the proportion of hosts negotiating ECN depends
slightly on the rank of the site, as shown in Fig. 4. The highest ranked website
that will negotiate ECN has rank 6 (www.wikipedia.org). We note that websites
of higher rank generally use custom networking software, and are therefore not
aﬀected by ECN negotiation by default. The top 100,000 sites are less likely to
support ECN negotiation than the remaining 900,000.
Troubling are the 107 IPv4 hosts and one single IPv6 host for which ECN
negotiation appears to be dependent on the vantage point. This indicates a device
on path which mangles the ECN TCP ﬂags. There are also 2029 IPv4 and 16 IPv6
hosts which sometimes negotatiate and sometimes do not, indicating either path
or temporal instability in ECN signaling. Further, there are 2047 IPv4 hosts and
83 IPv6 hosts which reﬂect the ECN TCP ﬂags on the syn ack (i.e., answering
syn ece cwr with syn ack ece cwr), indicating poorly implemented end-
host stacks or TCP proxies. Of these, 693 IPv4 hosts and one IPv6 host go on
Enabling Internet-Wide Deployment of Explicit Congestion Notiﬁcation
201
Fig. 3. Comparison of TTL spectrum between ECN-capable and -incapable hosts
Fig. 4. Proportion of sites negotiating ECN by rank
to send ect(0) marked packets, indicating that the end host may believe it has
negotiated ECN correctly.
4.2 IP Signaling Anomalies
Assessing middlebox mangling of IP ECN signaling, we see in Table 3 that
315,605 (97.2 %) of the IPv4 hosts and 8998 (80.9 %) of IPv6 hosts that always
negotiate ECN mark all subsequent packets ect(0) which is the expected sig-
naling; we would expect ECN to work in these cases. On the other hand, there
are 6939 (2.1 %) IPv4 and 2013 (18.1 %) IPv6 hosts which always negotiate ECN
but never send an ect marked packet in any trial from any vantage point. While
it is acceptable for hosts which have negotiated ECN not to mark every data
packet, this could also indicate a middlebox along the path that does not inter-
fere with the ECN TCP signaling but does with ECP IP signaling. We note that
this anomaly is less common for IPv4 than reported in [5], but it is not clear to
what to attribute this change.
We can observe various interesting anomalies here which indicate possible
mangling. 1995 IPv4 hosts do not appear to negotiate ECN but send ect(0)
marked packets anyway. 46 of these set ect(0) on the syn ack which indicates
a middlebox overwriting the former ToS ﬁeld. The other 1849 cases indicate
either a broken TCP stack, or ECN TCP ﬂag mangling on the downstream
path wherein the server believes ECN has been negotiated, but the client does
not, i.e. the ece bit is cleared from the syn ack ece sent by the server. We
note that the magnitude of this anomaly is comparable with that reported in [5],
indicating little if any improvement in middlebox mangling of ECN on this point.
Conversely, Table 4 gives insignt on hosts and paths using the ECN IP bits for
non-ECN purposes, showing statistics for ECN marking by servers on connection
attempts without ECN negotiation.