3. CALL PROVENANCE
The provenance of a call describes the characteristics of the source
and traversed networks. This information can be used to create ﬁn-
gerprints that help distinguish and compare different calls in the ab-
sence of veriﬁable end to end metadata. For example, provenance
can be used to identify if a call has passed through a VoIP network
and, if it has not typically done so, alert the receiver of the change.
At the very least, provenance must be able to distinguish between
trafﬁc that has traversed different telephony networks: PSTN, cel-
lular and VoIP. We investigate whether this can be achieved with
only the audio content available at the receiving end of a call. This
approach is attractive as provenance can be determined without ac-
cess or modiﬁcation to intermediate network elements such as gate-
ways or routers.
As a call traverses multiple networks, the audio is repeatedly re-
encoded with the network’s choice of codec. To illustrate, a Skype
call to a landline is initially encoded using G.729 and re-encoded
using G.711 when it encounters the VoIP-PSTN gateway.
If we
can extract artifacts of each of the applied codecs from the received
audio then simple codec to network translation (G.729 =⇒ VoIP)
determines call provenance. In addition, identifying the codec used
in a particular network helps characterize that network. However,
codecs like G.711 are widely used in both PSTN and VoIP systems,
implying codec detection alone is insufﬁcient. Therefore, we seek
additional differentiators.
Networks themselves introduce degradations into call audio. In
VoIP, there are packet losses which are not seen in circuit switched
PSTN networks. Similarly, mobile phones have bit errors due to
fading effects on radio channels. The loss of an entire packet con-
taining 20 ms of speech is measurably different from a small num-
ber of incorrect bits. These features are more robust than simply
extracting codec information as packet loss and bit errors are hard
for an adversary to control — an adversary bounded by a lossy con-
nection, many miles away, cannot spoof a lossless, dedicated PSTN
line to a bank.
Solution Overview: To identify and characterize the different
networks a call has traversed we focus on degradations speciﬁc
to each network. We ﬁrst demonstrate how we can identify and
characterize a VoIP network by detecting packet loss or concealed
packet loss in the received audio. We then show how PSTN and
Figure 2: Packet Loss and Corresponding Energy Drop. The
breaks in the signal (top) that occur due to packet loss are more
accurately determined using the short time energy (bottom) of
the signal.
cellular networks can be identiﬁed and characterized due to their
vastly different noise characteristics. Finally, since the quality of
the received audio signiﬁcantly degrades with the number of net-
works traversed, we extract quality speciﬁc features. We create
a feature vector that aggregates feature values obtained from the
packet loss, noise and quality measurements and use it to train a
multi-label classiﬁer to identify the networks that a call originated
and traversed. In addition, we demonstrate how the feature vector
provides call provenance ﬁngerprints that can be used to consis-
tently identify a call source.
3.1 Identifying VoIP Networks
3.1.1 Detecting Packet Loss
Within an IP network a lost packet can be easily identiﬁed using
the sequence numbers present in each packet (metadata). However,
these sequence numbers are lost once the call is retransmitted over
another telephony network. Accordingly, we must identify artifacts
of these lost packets from the received audio. The top graph in Fig-
ure 2 shows two seconds of speech encoded with G.711 and trans-
mitted through a VoIP network with a packet loss rate of 5%. The
effect of a lost packet is sometimes visibly identiﬁable by a break
in the waveform (annotated by arrows). However, such loss can
be detected more accurately by determining the short-time average
energy of the signal, as shown in the bottom graph in Figure 2.
Short-time average energy (STE) is traditionally used in speech
analysis to detect words surrounded by pauses as they cause abrupt
drops in energy levels. This can be adapted to detect a packet loss,
which also causes an abrupt decrease in energy. STE for a signal
y(n) is deﬁned as:
∞(cid:88)
En =
m=−∞
y2(m) · w(n − m),
where En is the STE for a window of speech w(n). Speciﬁcally,
w(n) is a sliding Hamming window of length N, where the speech
samples closer to n are weighted more than those at the window
edge. For the codecs we consider, a packet contains at least 10
ms of audio represented by 80 samples of speech. By making our
22.22.42.62.833.23.43.63.84−1−0.500.51AmplitudePacket Loss22.22.42.62.833.23.43.63.8410−1010−5100105Time (s)STEPacket Loss111Figure 3: Packet Loss Prediction. The dots below show the
actual losses and the ones above are identiﬁed by our algorithm.
The close correspondence between the two indicates that we
detect lost packets accurately.
Figure 4: Scenarios showing a false negative (top at 7 sec-
onds) and a false positive (bottom at 3.2 seconds).
window length less than 80, multiple values of En are completely
inﬂuenced by a dropped packet. This results in the breaks in energy
shown in Figure 2. We detect packet loss by looking for a signiﬁ-
cant drop in energy followed by an energy ﬂoor, accompanied by a
signiﬁcant energy rise.
Figure 5: Packet loss affect codecs differently. iLBC encodes
30 ms of audio per packet and therefore a packet loss results
in more audio lost in comparison to Speex which encodes 20
ms of audio.
ﬂoor is a good indication of the codec used. We might identify the
wrong codec when consecutive packets are dropped as two consec-
utive packets dropped in a network using G.729 (10 ms audio) will
be similar to a single packet dropped in a network using G.711 (20
ms audio). However, the probability of consecutive packets being
dropped is lower that the probability of a single dropped packet and
we can identify the codec based on the most commonly occurring
energy ﬂoor length.
To summarize, short time energy provides a highly accurate mech-
anism to determine packet losses and the detection mechanism can
also be used to identify the codec used. Therefore, when a call tra-
verses a potentially lossy VoIP network, the packet loss rate and
the codec used in that network can be extracted from the received
audio.
3.1.2 Detecting Concealed Packet Loss
Some VoIP systems employ packet loss concealment (PLC) al-
gorithms to prevent short speech gaps from affecting call quality.
Such concealment can be carried out at the receiver (reactive) or
with the assistance of the sender (proactive). In reactive recovery,
the lost packet is concealed either with silence, noise or is regener-
ated by interpolating previously received packets. Proactive recov-
ery algorithms include redundant information such as the previous
packet’s audio with each packet. This approach incurs a bandwidth
overhead and is rarely used. We focus on identifying the effects
We note that the presence of all three of these characteristics is
necessary to detect packet loss as each appears individually even
in speech that has not experienced any packet loss. For instance,
in Figure 2, we see a signiﬁcant rise in energy at approximately
2 seconds due to the start of a speech segment. This is a result
of Voice Activity Detection (VAD) in VoIP systems where packets
are only sent during active speech to reduce bandwidth. Similarly,
when a speech segment ends there is a signiﬁcant drop in energy.
Figure 3 shows the STE of a 15 second speech sample, encoded
with G.711 and transmitted through a network with 5% packet loss.
The dots at the bottom are the actual packet losses and the ones
above are the packet losses identiﬁed by our detection mechanism.
The close correspondence between the two shows that our detection
mechanism identiﬁes packet loss accurately.
Figure 4 shows false positive and false negative cases for our
detection mechanism. In the top graph, a packet loss occurs at the
start of a speech segment (7 seconds). Since we classify packet
losses based on an energy drop, ﬂoor and rise, such losses are not
detected. Note that this conservative approach reduces our false
negatives at the cost of potentially missing a small number of losses
at the beginning and end of speech. False negatives are shown in
the bottom graph in Figure 4 at 3.2 seconds and occur in the rare
case when speech stops and starts in quick succession, with the stop
duration corresponding to a multiple of 80. This pattern occurs only
when there is a voiced “plosive,” or a stop sound in speech, such as
the b sound in the word “about.”
Each time a packet loss is detected, the length of the energy ﬂoor
also reveals the codec used in a particular VoIP network. Figure 5
shows the effect of packet loss on two VoIP networks using differ-
ent codecs: iLBC which encodes 30ms and Speex which encodes
20 ms of speech per packet. The length of the energy ﬂoor is larger
for iLBC than Speex. In addition, since G.729 encodes 10 ms and
G.711 encoded 20 ms per packet by default, the length of the energy
246810121410−1010−810−610−410−2100102STETime (s)  Actual PLPredicted PL66.26.46.66.877.27.47.67.810−1010−5100STE  2.22.42.62.833.23.43.63.844.210−1010−5100105STETime (s)Actual PLPredicted PL22.22.42.62.833.23.43.63.8410−1010−5100105STE22.22.42.62.833.23.43.63.8410−1010−5100105STETime (s)30 msiLBCSpeex20 ms112Figure 6: The iLBC packet loss concealment detection algo-
rithm. Because lost packets are regenerated in a largely de-
terministic fashion from the residual and synthesis ﬁlters of the
previous packet, such packets can be detected by measuring the
correlation between the residuals of sequential packets.
of receiver side recovery algorithms on the audio and leave sender
side algorithms to future work.
When the concealment mechanism is silence or noise substitu-
tion, the STE-based algorithm from the previous section can be
used to detect packet losses by suitably adjusting the energy ﬂoor
to correspond to the noise ﬂoor. Most VoIP codecs, however, re-
construct lost packets from previous packets. G.711 uses wave-
form substitution to repeat a portion of the previous packet [49].
In codecs designed speciﬁcally for VoIP such as iLBC or Speex,
the concealment algorithm is more elaborate in order to improve
robustness to high packet loss rates. Fortunately, we observe that
concealment techniques are predominantly deterministic and a de-
tection mechanism can be created that exploits the correlation be-
tween reconstructed packets and previous packets. We discuss the
details of the PLC algorithm in iLBC to provide further clarity.
iLBC uses a linear predictive coding (LPC) algorithm to rep-
resent speech in a signiﬁcantly compressed form. LPC is based
on the source ﬁlter model of speech production, where the larynx
(source) produces sound energy, which when voiced consists of a
fundamental frequency (pitch) and its harmonics. This sound en-
ergy is then shaped (synthesis ﬁlters) by the vocal tract (throat and
mouth) into enhanced frequency bands known as formants, which
provide speech its intonation. The LPC algorithm inverse-ﬁlters the
formants from the speech signal to leave behind the original sound
energy, known as the residual. A codec like iLBC uses the resid-
ual, the synthesis ﬁlters and dynamic codebook encoding to reduce
the original speech into a set of parameters which can be transmit-
ted. The decoder uses these parameters to reconstruct the residual
and the synthesis ﬁlters which when combined re-synthesize the
speech. When a packet is lost, the decoder uses the residual from
the previous packet and creates a new pitch synchronous residual
for the packet to be concealed. Additionally, a random excitation is
added to the new residual (non-deterministic part). The new resid-
ual along with the synthesis ﬁlters from the previous packet are
used to create speech that will be substituted for the lost packet.
Therefore the new residual will be strongly correlated to the pre-
vious packet’s residual. To detect PLC in iLBC we ﬁrst split the
received audio into packets containing 30 ms audio each (the de-
fault for iLBC’s). We then create a pitch synchronous residual from
each packet and compare it to the residual extracted from the next
packet. As these quantities are generally not highly correlated, the
detection of an association between sequential packets is a very
strong indicator of iLBC’s packet loss concealment algorithm. The
packet loss concealment algorithms for the other codecs, though
Figure 7: The result of testing for the presence of highly corre-
lated in-sequence packets based on the iLBC packet loss con-
cealment algorithm. The algorithm speciﬁcally detects iLBC
(solid blue lines) while remaining agnostic to other codecs such
as Speex (dotted green lines)
different, can be detected based on how sequential packets are cor-
related.
Figure 6 shows a detailed block diagram for the iLBC PLC de-
tection algorithm. Since the encoding procedure in iLBC already
extracts the residual from the audio, we ﬁrst split the audio into 30
ms chunks and apply the encoding steps deﬁned in Section 3.1 to
3.3 of iLBC RFC 2951 [20]. This includes running a high pass ﬁl-
ter to remove noise in the audio, performing LPC analysis to extract
the synthesis ﬁlters and then using the synthesis ﬁlters along with
the data to extract the residual, r. We use r to generate a pitch syn-
chronous residual r(cid:48) as deﬁned in Section 4.5 of iLBC RFC 2951.
r(cid:48) will be strongly correlated to the residual from the next chunk of
30 ms of audio if that packet had been lost. We calculate r and r(cid:48)
for each chunk and report high correlations between as indications
of PLC.
Figure 7 shows the correlation between residuals of a 15 sec-
ond speech sample encoded with the iLBC codec (solid blue lines)
and transmitted through a VoIP network with a loss rate of 10%.
At each high correlation point (above 0.8) we conﬁrm from our
logs that the particular packet was lost. To show that the PLC de-
tection algorithm is speciﬁc to iLBC, we run it on the same 15
second speech sample encoded with Speex instead and transmit-
ted through the 10% loss rate VoIP network. The results are again
shown in Figure 7 as the dashed green lines. Though packets were
lost in this case too, the detection algorithm does not show any high
correlation between residuals, conﬁrming that we can create PLC
detection algorithms speciﬁc to the way each codec conceals pack-
ets. Since all the codecs use different concealment strategies, in
addition to detecting concealed packet losses our algorithms also
provide a strong indication of the codec used in a particular VoIP
network.
Finally, in Figure 7 we observe that for the 15 second sample
encoded with iLBC, 54 out of the 501 packets (loss rate = 52