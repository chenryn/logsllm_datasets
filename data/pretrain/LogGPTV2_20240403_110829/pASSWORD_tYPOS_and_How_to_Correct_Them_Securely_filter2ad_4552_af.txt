### 安全性损失与猜测次数的关系

图6展示了在RockYou和Ctop2挑战分布下，安全性损失作为$q$的函数的变化情况。为了简化起见，我们主要关注Ctop2，这是许多部署中常用的选择。图中显示了$q \in \{1, 100, 200, 300, \ldots, 10,000\}$范围内的安全性损失。我们在$q = 1,000$处绘制了一条垂直虚线，这是Chk-AOp预期的查询预算。如前所述，当$q < 1,000$时，Chk-AOp没有损失；只有当攻击者获得超过1,000次查询后，其性能才优于精确检查的情况。

图7展示了类似的图表，但这次是针对phpBB分布。该分布导致在较大的$q$值时出现显著的安全性损失跳跃，这表明在某些点上，攻击者可以利用新进入的高权重密码球来提高成功率。Myspace的图表将展示类似的趋势，为简洁起见，此处省略。

随着$q$的增加，$\lambda_{\text{greedy}} - \lambda_q$趋于平缓。在拼写容错的情况下，攻击者最终会耗尽高权重的密码球，并只能查询单个（高概率）猜测。对于RockYou，改进从未超过1%；对于phpBB，从未超过0.8%。这表明即使$q$增长到实践中不太可能达到的值，拼写容错也不会显著提高攻击者的成功率。我们注意到，可以通过黑名单更多的密码或设置更大的$q$值来使我们的黑名单和近似最优检查器更加保守。

### 估计攻击者

到目前为止，我们考虑的是具有确切密码分布知识的攻击者（即使系统设计者可能不知道）。在实际中，这样的攻击者并不存在，相反，对手必须尝试估计密码分布。我们将这些称为估计攻击者。我们假设对手知道正在使用的精确检查算法。

我们首先考虑使用Weir等人提出的概率上下文无关文法（PCFG）[43]来估计密码分布的攻击者。然而，实验表明，这种方法在线猜测攻击中的效果较差，比下面描述的方法表现更差，并且在所有设置下对拼写容错检查器的表现同样不佳。

因此，我们转向另一种策略来估计密码分布。我们测量使用其中一个密码泄露数据作为分布估计的攻击者的成功率。这是实践中常见的策略。我们将这些攻击测试应用于其他两个分布，并针对精确检查、Chk-All、Chk-wBL和Chk-AOp进行测试。后三种方法使用Ctop2。所有组合的安全性损失汇总在图8中。

从图8可以看出，当切换到容错检查系统时，攻击者获得的最大改进不超过0.28%。更有意思的是，在某些情况下，差异是负的，这意味着攻击者在拼写容错方案下的表现更差。这可能是由于攻击者对分布的估计通常是错误的，从而导致选择的猜测集最大化了根据其估计的成功概率，而不是实际的挑战分布。

总之，我们的模拟结果表明，精心设计的拼写容错检查器在对抗现实中的对手时几乎不会造成安全损失。

### 结论

本文首次探讨了拼写容错密码认证的问题。通过大规模的实际实验，我们发现密码拼写错误是认证系统中用户错误的一个真实且常见的来源。我们发现少数类型的拼写纠正涵盖了绝大多数的密码拼写错误。我们提供了一个形式化的框架来探索拼写容错密码检查器，并重点关注一类与现有密码哈希方案向后兼容的放松检查器。通过所谓的“免费纠正定理”，我们证明存在一种放松检查器，使得最佳攻击不会比对精确检查器的最佳攻击更好。不幸的是，这种构造需要确切的密码分布知识。因此，我们提出了一些受此启发的实际拼写容错检查器，并对其进行了实证分析，表明可以在最小或无安全降级的情况下显著提高实用性。

在未来的工作中，我们计划研究拼写容错是否实际上能够提高整体安全性。因为允许密码拼写错误可以提高良性场景下的登录成功率，这可能有助于使恶意登录尝试更加突出，从而加强用于检测在线密码攻击的信号，尤其是在互联网规模的认证系统中。

### 致谢

本研究部分由NSF拨款CNS-1330308和CNS-1514163以及微软的慷慨资助。

### 参考文献

[略]

---

以上是对原文的优化，使其更加清晰、连贯和专业。希望对你有帮助！