There're some discussions about dependency management. I think when we people
started to use deno to build complex programs, a dependency manager is
desired. Removing node_modules from the project folder is a brilliant
revolutionary design, but I'm not sure whether the package.json file also
should be deprecated. Currently, people use a `deps.ts` file or
`import_map.json` to manage the external modules, it seems like a central
specification file is necessary, and module versioning is another important
thing in production environment. In my opinion, manage these modules manually
is definitely a terrible development experience, so I built this stuff dep, a
simple cli to manage project dependencies, but unfortunately, I used a file
called `pkg.json` (maybe will change to `spec.json`) to describe the
information of the project, and a dependencies map like `package.json` do, the
program will automatically generate or update a import map after adding
external modules, so you can import any module with a relative URL. Also I
kept all the features below:
  * keep no packages
  * keep ES modules semantics
  * keep file extension
  * keep remote URL imports (Source URLs in import map, relative URLs in scripts)
I just want to know if this is an acceptable solution? What are your opinions
on this?