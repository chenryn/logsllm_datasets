---
## Page 259
第11章for和 select 循环语句的应用实践24
pHKtjK(53
[root@o1dboyscripts]+mkpa8swd-19-d2-c3-C3-81
1TrQwrP0:
s-3-o-zp-6-pssy[sds oqpx]
53fMTh~Gp
相关参数说明如下：
-1（1ength ofpassword,Gefault=9）
<==指定密码中数字的数量
<==指定害码长度。
-d#
（minof digits,default=2）
-C
（minof1oercasechars，default-2）<指定害码中小写字母的数量
-C+
（minofuppercasechars，default-2）<指定害码中大写字母的数量
（minofspecial chars，default=1）<==指定害码中特殊字符的数量。
上面的随机数长短不一，如何统一格式化呢？解答：使用md5sum命令。
示例如下：
-----6- ox]
[xoot@oldboy script8]cat/proc/sys/kernel/random/uuidimd5sumlcut-c 2-10
d81978b70
292127444
[root@oldboy scripts]#head /dev/urandom|cksum|md5sum|cut -c 2-10
1834f4da9
[root@oldboy scripts]#date+8seN1md5sum|cut-c2-10
[root9o1dboy scripts]opensslrand -base64 80|md5sum1cut -c2-10
Ba7eff744
5ca8306f2
11.6select循环语句介绍及语法
在第6章范例6-36中通过菜单选择实现了企业业务自动化部署，当时采用的生成
菜单的方法就是cat方法（被称为here文档），这里给大家介绍另外一种实现菜单的方
法，即通过select循环语句实现。
select循环语句的主要作用可能就是创建菜单，在执行带select循环语句的脚本时，
输出会按照数字顺序的列表显示一个菜单项，并显示提示符（默认是#？），同时等待用
户输入数字进行选择，下面就来带大家看看生成菜单项的语法及具体案例实践。
第一种for循环语句为变量取值型，语法结构如下：
select变量名[in某单取值列表]
do
指令..
Buon
---
## Page 260
242跟老男孩学Linux运维：Shell编程实战
提示：bash帮助语法显示：selectname[in word];dolist;done
用fori就相当于使用foriin“$@”。
在这种select循环语句的语法中，在执
sle环开始
行脚本后，select关键字后面会有一个“变
量名”，变量名依次获取in关键字后面的变
量取值列表内容（以空格分隔），每次仅取
一个，然后进人循环（do和done之间），执
行循环内的所有指令，当执行到done时结
用户输入序号
束返回，之后，“变量名”再继续取变量列
表里的下一个变量值，继续执行循环内的
selec循环表达式
遍历结束
所有指令（do和done之间的指令），当执行
开始取值
到done时结束返回，以此类推，直到取完
最后一个变量列表里的值并进入循环执行到
持续
确环
do
done结束为止。与for循环不同的是，select
直到
条件
循环执行后会出现菜单项等待用户选择（不
式不
表达
命令集
会自动循环所有变量列表），面用户输入的
满足
只能是菜单项前面的数字序号，每输入一次
对应的序号就会执行一次循环，直到变量后
done
面对应列表取完为止。
select循环结构执行流程对应的逻辑图
结束
如图11-5所示。
图11-5select循环结构执行流程对应的逻辑图
11.7
7select循环语句案例
范例11-15：用select循环打印简单菜单项的多种实现方法
方法1：直接使用列表字符串。
[root@oldboy scripts]cat 11_15_1,sh
#1/bin/bash
#Author:oldboy training
select name inoldboy oldgir1tingting<=name变量将通历后面的以空格分隔的字特串。
do
echoSname#<==当选择对应菜单项前面的数字时，即打印对应的菜单项内容。
done
---
## Page 261
第11章for和select循环语句的应用实践24
执行结果如下：
执行脚本后打印带数字序列（数字加右小括号）的菜单项，内容就是变量列表的
内容。
1）oldboy
[root8oldboy scripts]sh 11_15_1.sh
2)oldgir1
3) tingting
#?1
<==这里必须是输入序号，不能是变量列表内容，例如oldboy。
oldboy
#<-输入对应序号，返因对应菜单项内容。
#?2
#<==这里必须是输入序号，不能是变量列表内容，例如o1dboy。
oldgir1
<==输入对应序号，返因对应某单项内容。
#73
+<==
这至必须是输入序号，不能是变量列表内容，例如o1dboy。
tingting
<==输入对应序号，返圆对应某单项内容。
?test
<==输入错误，则返国空。
?
<==账认的提示特为S？号，不够优雅，后面的例子将换掉它。
方法2：采用数组做变量列表。
[root@oldboy scripts]cat 11_15_2.sh
1/bin/bash
array=(oldboy oldgir1 tingting)
select nane in *s（array[e]}*
do
done
echo $name
方法三：把命令结果作为变量列表（菜单项）。
（1）数据准备
[rootθoldboy scripts]mkdir-p/tnp/test
[root@o1dboy seripts]mkdir-p/tnp/test/(oldboy,oldgir1,tingting）
[root@oldboyscripts]1e-1/tmp/test/
总用量12
drwxr-xr-x2rootroot409611月
111:35o1dboy
drwxr-xr-x2rootroot409611月
111:35o1dgir1
drwxr-xr-x2rootroot409611月111:35tingting
（2）脚本开发
[root@oldboy scripts]cat 11_15_3.sh
#1/bin/bash
Author:oldboy training
select name in1s/tmp/test
do
echo Snane
done
---
## Page 262
24跟老男孩学 Linux运维：Shell编程实战
（3）执行结果
[root9oldboy scripts]sh 11_15_3.sh
1) o1dboy
3）tingting
2)oldgir1
#?
提示：细心的读者可以看到变量列表部分和for循环是一样的。
通过上一个范例我们了解到，select循环菜单项的默认提示很不友好，并且输人的
是数字，打印的变量值却是数字对应的菜单项内容。那能不能针对默认提示符以及打印
输人内容进行调整呢？当然可以，且看下面的案例。
范例11-16：调整select循环菜单项的默认提示符及利用select变量打印数字序号。
开发脚本如下：
[root@oldboy scripts] cat 11_15_4.sh
#Author:oldboy training
#1/bin/bash
#B1og:http://o1dboy.b1og.51cto.com
PS3=*please select a num from nenu:*
<
PS3就是控制select环的提示符。
这可是新如识！
select name in oldboy oldgirl tingting
op
<==REPLY变量抗是菜单项对应的数字。
done
本范例重点讲解了select循环的两个特殊变量，其中PS3系统环境变量用于控制
select循环的提示符，REPLY变量用于获取菜单项对应的数字，也就是用户输人的数字。
以下为执行演示。
1)oldboy
[rootθoldboy scripts]# sh 11_15_4.sh
2）oldgir1
3) tingting
please select a nun from menu:1
I guess you selected the menu is:
please select a num from menui2
1)oldboy
I guess you selected the menu is:
2)oldgir1
please select a nun fron menu:3
I guess you selected the menu is:
please select a nun from menu:^c
---
## Page 263
第11章for和select循环语句的应用实践24
范例11-17：打印选择菜单，按照选择一键安装不同的Web服务。
示例菜单：
[rooteoldboy scripts]sh
1.[install 1amp]
2.[install 1nmp]
3.[exit]
pls input the nun you want:
要求：
1）当用户输人1时，输出“start installinglamp.”提示，然后执行/server/scripts/
lamp.sh，输出“lamp is installed"后退出脚本，这就是实际工作中所用的lamp一键安装
脚本；
2）当用户输人2时，输出“start installingInmp.”提示，然后执行/server/scripts/
Inmp.sh，输出“Inmp is installed”后退出脚本，这就是实际工作中所用的Inmp一键安装
脚本：
3）当输人3时，退出当前菜单及脚本；
4）当输入任何其他字符时，给出提示“Inputerror”后退出脚本；
5）要对执行的脚本进行相关的条件判断，例如：脚本文件是否存在，是否可执行
等判断，尽量用上前面讲解的知识点。
解答：本范例和范例6-36是一道题，但是采用的实现方法却完全不同，本例将采
用select循环结构实现范例6-36脚本的升级版，读者可看看能否先不看答案自己实现
本例
参考解答脚本1：
[root9oldgirl scripts]cat 11_15_5.sh
1/bin/sh
RETVAR=0
path=/server/scripts
<==如果路径不存在，就创建。
<==定义脚本路径。
[1-d*spath*]
d-eds xxu
function Usage() (
<定文帮助函数。
echo *Usage:S0 argv*
return 1
function Installservice()(
#<==定义安装服务函数。
if[ s-ne 1 ]:then
#<==参数不等于1，就打印暂助函数。
obesn
local RETVAR=0
=和始化返回值
echo *start installing S(1).*
<=打印开始安装服务，传参S1，S1是
函数的参数，本例即1amp或1nmp。
sleep 2:
if[1-x“Spath/S（1）.sh*]then<-如果安装服务脚本不可执行，则给出提示后出。
---
## Page 264
246跟老男孩学 Linux运维：Shell编程实战
echo *spath/s(l).sh does not exiat or can not be exec.
retrun 1
else
$path/$(1).sh
<==执行脚本。
return SRETVAR
#<返因值退回函数体外。
function main()(
<==主函数
PS3=*echo pl8inputthe num you want:·<==某单提示。
<==Belect循环，某单内容列表，列表中有空格就要加引号。
do
..
<接收变量值进行匹配。
(.dueT TTes.
<如果变量值为“Installlamp*，
InstallService 1amp
<==调用安装服务函数，安装1amp服务。
RETVAR=S?
<==将脚本执行结果返国函数体外。
*Install 1nmp*)
<==如果变量值为*Insta111nmp*，
Installservice 1nmp
<==调用安装服务函数，安装1nmp服务。
RETVAR=$?
<将脚本执行结果返回函数体外。
exit)
echo bye.
<==如果变量值为exit。
<==打印 bye.
return 3
<携带返国值3返国函数体外。
<==如果变量值为其他字符，打印如下提示。
*the numyou input must be（11213)*
<==打印提示。
e8ac
done
exit $ RETVAR
main
<==调用main函数，执行总的程序。
参考解答脚本2：这个脚本实现更简单，脚本的差异已标出，其他相同部分不再进
行注释。
[root@oldboy scripts]cat 11_15_6.sh
1/bin/sh
path=/server/scripts
RETVAR=0
function Usage(){
echo *Usage:$0 argv*
return 1
funetion InstallService()(
ff [$# -ne 1 ]:then
Usage
---
## Page 265
第11章for和 select循环语句的应用实践247
local RETVAR=0
f1
if[1-x*$path/s（1).sh*]ithen
sleep 2: