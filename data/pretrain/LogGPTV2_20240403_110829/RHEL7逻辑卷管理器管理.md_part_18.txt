# [⁠]{#LVM_CLI.html#custom_report}4.8. LVM 的自定义报告 {.title}
:::
[]{#LVM_CLI.html#idm140426155594800
.indexterm}[]{#LVM_CLI.html#idm140426155593520
.indexterm}[]{#LVM_CLI.html#idm140426155592240
.indexterm}[]{#LVM_CLI.html#idm140426155590960
.indexterm}[]{#LVM_CLI.html#idm140426167598128
.indexterm}[]{#LVM_CLI.html#idm140426167596688
.indexterm}[]{#LVM_CLI.html#idm140426167595248
.indexterm}[]{#LVM_CLI.html#idm140426167593808 .indexterm}
::: para
可使用 `pvs`{.command}、`lvs`{.command} 和 `vgs`{.command}
命令生成简洁且可自定义的 LVM
对象报告。这些命令生成的报告包括每行一个对象的输出结果。每行包含与该对象有关的属性字段顺序列表。有五种方法可用来选择要报告的对象：即根据物理卷、卷组、逻辑卷、物理卷片段及逻辑卷片段报告。
:::
::: para
以下小节提供：
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    用来控制所生成报告格式的命令参数概述。
    :::
-   ::: para
    可为每个 LVM 对象选择的字段列表。
    :::
-   ::: para
    可用来对生成的报告进行排序的命令参数概述。
    :::
-   ::: para
    指定报告输出结果单位简介。
    :::
:::
:::
::: section
::: titlepage
## [⁠]{#LVM_CLI.html#report_format_control}4.8.1. 格式控制 {.title}
:::
::: para
是否使用 `pvs`{.command}、`lvs`{.command} 或者 `vgs`{.command}
命令可决定显示字段的默认设置及排序顺序。可使用下面的参数控制这些命令的输出结果：
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    可使用 `-o`{.option}
    参数将显示的字段改为默认值以外的内容。例如：下面的输出结果是
    `pvs`{.command} 命令的默认显示内容（即显示物理卷信息）。
    :::
    ``` screen
    # pvs
      PV         VG     Fmt  Attr PSize  PFree
      /dev/sdb1  new_vg lvm2 a-   17.14G 17.14G
      /dev/sdc1  new_vg lvm2 a-   17.14G 17.09G
      /dev/sdd1  new_vg lvm2 a-   17.14G 17.14G
    ```
    ::: para
    下面的命令只显示物理卷名称和大小。
    :::
    ``` screen
    # pvs -o pv_name,pv_size
      PV         PSize
      /dev/sdb1  17.14G
      /dev/sdc1  17.14G
      /dev/sdd1  17.14G
    ```
-   ::: para
    可将加号（+）于 -o 参数合用，在输出结果中附加一个字段。
    :::
    ::: para
    下面的示例除显示默认字段外还显示该物理卷的 UUID。
    :::
    ``` screen
    # pvs -o +pv_uuid
      PV         VG     Fmt  Attr PSize  PFree  PV UUID
      /dev/sdb1  new_vg lvm2 a-   17.14G 17.14G onFF2w-1fLC-ughJ-D9eB-M7iv-6XqA-dqGeXY
      /dev/sdc1  new_vg lvm2 a-   17.14G 17.09G Joqlch-yWSj-kuEn-IdwM-01S9-X08M-mcpsVe
      /dev/sdd1  new_vg lvm2 a-   17.14G 17.14G yvfvZK-Cf31-j75k-dECm-0RZ3-0dGW-UqkCS
    ```
-   ::: para
    在命令中添加 `-v`{.option}
    参数可显示额外的字段。例如：`pvs -v`{.command}
    命令会在默认字段外显示 `DevSize`{.literal} 和 `PV UUID`{.literal}
    字段。
    :::
    ``` screen
    # pvs -v
        Scanning for physical volume names
      PV         VG     Fmt  Attr PSize  PFree  DevSize PV UUID
      /dev/sdb1  new_vg lvm2 a-   17.14G 17.14G  17.14G onFF2w-1fLC-ughJ-D9eB-M7iv-6XqA-dqGeXY
      /dev/sdc1  new_vg lvm2 a-   17.14G 17.09G  17.14G Joqlch-yWSj-kuEn-IdwM-01S9-XO8M-mcpsVe
      /dev/sdd1  new_vg lvm2 a-   17.14G 17.14G  17.14G yvfvZK-Cf31-j75k-dECm-0RZ3-0dGW-tUqkCS
    ```
-   ::: para
    `--noheadings`{.option} 参数会取消标题行。这在编写脚本时有用。
    :::
    ::: para
    下面的示例将 `--noheadings`{.option} 参数与 `pv_name`{.option}
    参数联合使用生成所有物理卷的列表：
    :::
    ``` screen
    # pvs --noheadings -o pv_name
      /dev/sdb1
      /dev/sdc1
      /dev/sdd1
    ```
-   ::: para
    `--separator separator`{.option} 参数使用 *separator* 分离各个字段。
    :::
    ::: para
    下面的示例使用等号（=）分离 `pvs`{.command} 命令的默认输出字段。
    :::
    ``` screen
    # pvs --separator =
      PV=VG=Fmt=Attr=PSize=PFree
      /dev/sdb1=new_vg=lvm2=a-=17.14G=17.14G
      /dev/sdc1=new_vg=lvm2=a-=17.14G=17.09G
      /dev/sdd1=new_vg=lvm2=a-=17.14G=17.14G
    ```
    ::: para
    要在使用 `separator`{.option} 参数时保持字段对齐，请将
    `separator`{.option} 参数与 `--aligned`{.option} 参数配合使用。
    :::
    ``` screen
    # pvs --separator = --aligned
      PV        =VG    =Fmt =Attr=PSize =PFree
      /dev/sdb1 =new_vg=lvm2=a-  =17.14G=17.14G
      /dev/sdc1 =new_vg=lvm2=a-  =17.14G=17.09G
      /dev/sdd1 =new_vg=lvm2=a-  =17.14G=17.14G
    ```
:::
:::
::: para
可使用 `lvs`{.command} 或者 `vgs`{.command} 命令的 `-P`{.option}
参数显示有关失败卷的信息，否则该信息不会出现在输出结果中。有关这个参数字段的输出结果详情，请查看
[第 6.2 节
"在失败的设备中显示信息。"](#troubleshooting.html#partial_output){.xref}。
:::
::: para
有关完整显示参数列表，请查看 `pvs`{.command}(8)、`vgs`{.command}(8) 和
`lvs`{.command}(8) man page。
:::
::: para
卷组字段可与物理卷（和物理卷片段）字段或者逻辑卷（和逻辑卷片段）字段混合，但物理卷和逻辑卷字段不能混合。例如：下面的命令会每行显示一个物理卷的输出结果。
:::
``` screen
# vgs -o +pv_name
  VG     #PV #LV #SN Attr   VSize  VFree  PV
  new_vg   3   1   0 wz--n- 51.42G 51.37G /dev/sdc1
  new_vg   3   1   0 wz--n- 51.42G 51.37G /dev/sdd1
  new_vg   3   1   0 wz--n- 51.42G 51.37G /dev/sdb1
```
:::
::: section
::: titlepage
## [⁠]{#LVM_CLI.html#report_object_selection}4.8.2. 对象选择 {.title}
:::
::: para
本小节提供可用来使用 `pvs`{.command}、`vgs`{.command} 和 `lvs`{.command}
命令显示 LVM 对象信息的表格。
:::
::: para
为方便起见，如果字段名称前缀与该命令的默认匹配，则可将其去掉。例如：在
`pvs`{.command} 命令中，`name`{.literal} 的含义是
`pv_name`{.literal}，但在 `vgs`{.command} 命令中，会将 `name`{.literal}
解读为 `vg_name`{.literal}。
:::
::: para
执行下面的命令与执行 `pvs -o pv_free`{.command} 等同。
:::
``` screen
# pvs -o free
  PFree
  17.14G
  17.09G
  17.14G
```
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
在之后的发行本中，`pvs`{.command}、`vgs`{.command} 和 `lvs`{.command}
输出结果中 attribute
字段中的字符数可能会增加。现有字符字段不会更改位置，但可在结尾处添加新字段。为具体属性字符编写脚本时应考虑这个因素，并根据字符与该字段起始位置的相对位置搜索字符，而不是根据其与该字段的截止位置的相对位置进行搜索。例如：要在
`lv_attr`{.literal} 字段的第九个字节搜索字符 `p`{.literal}，可搜索字符串
\"\^/\...\.....p/\"，但不应搜索字符串 \"/\*p\$/\"。
:::
:::
:::
::: simplesect
::: titlepage
### [⁠]{#LVM_CLI.html#pvs_command}pvs 命令 {.title}
:::
[]{#LVM_CLI.html#idm140426107612208
.indexterm}[]{#LVM_CLI.html#idm140426107610448
.indexterm}[]{#LVM_CLI.html#idm140426160765856
.indexterm}[]{#LVM_CLI.html#idm140426160764096 .indexterm}
::: para
[表 4.2 "pvs Display 字段"](#LVM_CLI.html#tb-table-pvs-fields){.xref}
列出 `pvs`{.command}
目录的显示参数以及在标头显示中出现的字段名称及该字段的描述。
:::
::: table
[⁠]{#LVM_CLI.html#tb-table-pvs-fields}
**表 4.2. pvs Display 字段**
::: table-contents
  -----------------------------------------------------------------------------------
  参数                           标头      描述
  ------------------------------ --------- ------------------------------------------
  `dev_size`{.option}            DevSize   该物理卷所在底层设备的大小
  `pe_start`{.option}            1st PE    底层设备中的第一个物理扩展偏差
  `pv_attr`{.option}             Attr      物理卷状态：（a）可分配；或者（x）导出。
  `pv_fmt`{.option}              Fmt       物理卷元数据格式（`lvm2`{.filename} 或者
                                           `lvm1`{.filename}）
  `pv_free`{.option}             PFree     物理卷中的剩余空间
  `pv_name`{.option}             PV        物理卷名称
  `pv_pe_alloc_count`{.option}   Alloc     已使用物理扩展数
  `pv_pe_count`{.option}         PE        物理扩展数
  `pvseg_size`{.option}          SSize     物理卷的片段大小
  `pvseg_start`{.option}         起始      物理卷片段的起始物理扩展
  `pv_size`{.option}             PSize     物理卷大小
  `pv_tags`{.option}             PV 标签   附加到物理卷的 LVM 标签
  `pv_used`{.option}             已使用    该物理卷中目前已使用的空间数量
  `pv_uuid`{.option}             PV UUID   该物理卷的 UUID
  -----------------------------------------------------------------------------------
:::
:::
::: para
`pvs`{.command} 命令默认显示以下字段：`pv_name`{.option},
`vg_name`{.option}, `pv_fmt`{.option}, `pv_attr`{.option},
`pv_size`{.option}, `pv_free`{.option}。该显示结果按 `pv_name`{.option}
排序。
:::
``` screen
# pvs
  PV         VG     Fmt  Attr PSize  PFree
  /dev/sdb1  new_vg lvm2 a-   17.14G 17.14G
  /dev/sdc1  new_vg lvm2 a-   17.14G 17.09G
  /dev/sdd1  new_vg lvm2 a-   17.14G 17.13G
```
::: para
使用 `pvs`{.command} 命令的 `-v`{.option}
参数值默认显示中添加以下字段：`dev_size`{.option}，`pv_uuid`{.option}。
:::
``` screen
# pvs -v
    Scanning for physical volume names
  PV         VG     Fmt  Attr PSize  PFree  DevSize PV UUID
  /dev/sdb1  new_vg lvm2 a-   17.14G 17.14G  17.14G onFF2w-1fLC-ughJ-D9eB-M7iv-6XqA-dqGeXY
  /dev/sdc1  new_vg lvm2 a-   17.14G 17.09G  17.14G Joqlch-yWSj-kuEn-IdwM-01S9-XO8M-mcpsVe
  /dev/sdd1  new_vg lvm2 a-   17.14G 17.13G  17.14G yvfvZK-Cf31-j75k-dECm-0RZ3-0dGW-tUqkCS
```
::: para
可使用 `pvs`{.command} 命令的 `--segments`{.option}
参数显示每个物理卷片段的信息。一个片段就是一个扩展组。如果要了解逻辑卷是否碎片化，查看片段视图很有帮助。
:::
::: para
`pvs --segments`{.command} 命令默认显示以下字段：`pv_name`{.option},
`vg_name`{.option}, `pv_fmt`{.option}, `pv_attr`{.option},
`pv_size`{.option}, `pv_free`{.option}, `pvseg_start`{.option},
`pvseg_size`{.option}。结果根据物理卷中的 `pv_name`{.option} 和
`pvseg_size`{.option} 排序。
:::
``` screen
# pvs --segments
  PV         VG         Fmt  Attr PSize  PFree  Start SSize
  /dev/hda2  VolGroup00 lvm2 a-   37.16G 32.00M     0  1172
  /dev/hda2  VolGroup00 lvm2 a-   37.16G 32.00M  1172    16
  /dev/hda2  VolGroup00 lvm2 a-   37.16G 32.00M  1188     1
  /dev/sda1  vg         lvm2 a-   17.14G 16.75G     0    26
  /dev/sda1  vg         lvm2 a-   17.14G 16.75G    26    24
  /dev/sda1  vg         lvm2 a-   17.14G 16.75G    50    26
  /dev/sda1  vg         lvm2 a-   17.14G 16.75G    76    24
  /dev/sda1  vg         lvm2 a-   17.14G 16.75G   100    26
  /dev/sda1  vg         lvm2 a-   17.14G 16.75G   126    24
  /dev/sda1  vg         lvm2 a-   17.14G 16.75G   150    22
  /dev/sda1  vg         lvm2 a-   17.14G 16.75G   172  4217
  /dev/sdb1  vg         lvm2 a-   17.14G 17.14G     0  4389
  /dev/sdc1  vg         lvm2 a-   17.14G 17.14G     0  4389
  /dev/sdd1  vg         lvm2 a-   17.14G 17.14G     0  4389
  /dev/sde1  vg         lvm2 a-   17.14G 17.14G     0  4389
  /dev/sdf1  vg         lvm2 a-   17.14G 17.14G     0  4389
  /dev/sdg1  vg         lvm2 a-   17.14G 17.14G     0  4389
```
::: para
可使用 `pvs -a`{.command} 命令查看已被 LVM 探测到但尚未初始化为 LVM
物理卷的设备。
:::
``` screen
# pvs -a
  PV                             VG     Fmt  Attr PSize  PFree
  /dev/VolGroup00/LogVol01                   --       0      0
  /dev/new_vg/lvol0                          --       0      0
  /dev/ram                                   --       0      0
  /dev/ram0                                  --       0      0
  /dev/ram2                                  --       0      0
  /dev/ram3                                  --       0      0
  /dev/ram4                                  --       0      0
  /dev/ram5                                  --       0      0
  /dev/ram6                                  --       0      0
  /dev/root                                  --       0      0
  /dev/sda                                   --       0      0
  /dev/sdb                                   --       0      0
  /dev/sdb1                      new_vg lvm2 a-   17.14G 17.14G
  /dev/sdc                                   --       0      0
  /dev/sdc1                      new_vg lvm2 a-   17.14G 17.09G
  /dev/sdd                                   --       0      0
  /dev/sdd1                      new_vg lvm2 a-   17.14G 17.14G
```
:::
::: simplesect
::: titlepage