(cid:36)(cid:73)(cid:87)(cid:72)(cid:85)(cid:3)(cid:68)(cid:3)(cid:81)(cid:88)(cid:80)(cid:69)(cid:72)(cid:85)(cid:3)
(cid:82)(cid:73) (cid:83)(cid:68)(cid:92)(cid:80)(cid:72)(cid:81)(cid:87)(cid:86)
(cid:884)(cid:882)(cid:882)
(cid:884)(cid:882)(cid:882)
(cid:37)(cid:82)(cid:69)
(cid:882)
(cid:882)
(cid:36)(cid:79)(cid:76)(cid:70)(cid:72)
(cid:53)(cid:72)(cid:69)(cid:68)(cid:79)(cid:68)(cid:81)(cid:70)(cid:76)(cid:81)(cid:74)
(cid:20)(cid:19)(cid:19)
(cid:20)(cid:19)(cid:19)
(cid:20)(cid:19)(cid:19)
(cid:37)(cid:82)(cid:69)
(cid:38)(cid:68)(cid:85)(cid:82)(cid:79)
(cid:36)(cid:79)(cid:76)(cid:70)(cid:72)
(cid:36)(cid:79)(cid:76)(cid:70)(cid:72)
(cid:37)(cid:82)(cid:69)
(cid:38)(cid:68)(cid:85)(cid:82)(cid:79)
(cid:884)(cid:882)(cid:882)
(cid:38)(cid:68)(cid:85)(cid:82)(cid:79)
(cid:882)
(cid:54)(cid:92)(cid:81)(cid:70)(cid:75)(cid:85)(cid:82)(cid:81)(cid:82)(cid:88)(cid:86)(cid:3)(cid:68)(cid:74)(cid:85)(cid:72)(cid:72)(cid:80)(cid:72)(cid:81)(cid:87)(cid:3)(cid:82)(cid:81)(cid:3)
(cid:36)(cid:79)(cid:76)(cid:70)(cid:72)
(cid:883)(cid:882)(cid:882)
(cid:883)(cid:882)(cid:882)
(cid:883)(cid:882)(cid:882)
(cid:37)(cid:82)(cid:69)
(cid:54)(cid:87)(cid:68)(cid:87)(cid:72)(cid:3)(cid:11)(cid:68)(cid:12)
(cid:54)(cid:87)(cid:68)(cid:87)(cid:72)(cid:3)(cid:11)(cid:69)(cid:12)
(cid:74)(cid:79)(cid:82)(cid:69)(cid:68)(cid:79)(cid:3)(cid:82)(cid:73)(cid:73)(cid:86)(cid:72)(cid:87)(cid:29)(cid:3)(cid:20)(cid:19)(cid:19)
(cid:54)(cid:87)(cid:68)(cid:87)(cid:72)(cid:3)(cid:11)(cid:68)(cid:12)
(cid:883)(cid:882)(cid:882)
(cid:883)(cid:882)(cid:882)
(cid:883)(cid:882)(cid:882)
(cid:38)(cid:68)(cid:85)(cid:82)(cid:79)
(cid:54)(cid:87)(cid:68)(cid:85)(cid:87)(cid:3)(cid:85)(cid:72)(cid:69)(cid:68)(cid:79)(cid:68)(cid:81)(cid:70)(cid:76)(cid:81)(cid:74)
(cid:41)(cid:85)(cid:72)(cid:72)(cid:93)(cid:76)(cid:81)(cid:74)
(cid:79)
(cid:72)
(cid:89)
(cid:72)
(cid:47)
(cid:3)
(cid:71)
(cid:72)
(cid:70)
(cid:81)
(cid:68)
(cid:68)
(cid:69)
(cid:80)
(cid:79)
(cid:44)
(cid:55)(cid:76)(cid:80)(cid:72)
Fig. 1. An example of the balance evolution of a 3-nodes network with rebalancing. Each two nodes share their own bi-directional payment channel. For
each channel, both two nodes deposit 100 coins as their initial balance in the channel. The network is balanced in State (a) and is highly skewed in State (b).
(cid:883)(cid:882)(cid:882)
(cid:883)(cid:882)(cid:882)
(cid:36)(cid:79)(cid:76)(cid:70)(cid:72)
(cid:883)(cid:882)(cid:882)
(cid:37)(cid:82)(cid:69)
(cid:491)
(cid:54)(cid:87)(cid:68)(cid:87)(cid:72)(cid:3)(cid:11)(cid:68)(cid:12)
(cid:38)(cid:68)(cid:85)(cid:82)(cid:79)
(cid:491)
(cid:39)(cid:88)(cid:85)(cid:76)(cid:81)(cid:74)(cid:3)(cid:68)(cid:3)(cid:81)(cid:88)(cid:80)(cid:69)(cid:72)(cid:85)(cid:3)(cid:82)(cid:73) (cid:83)(cid:68)(cid:92)(cid:80)(cid:72)(cid:81)(cid:87)(cid:86)
(cid:883)(cid:882)(cid:882)
(cid:36)(cid:79)(cid:76)(cid:70)(cid:72)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:38)(cid:68)(cid:85)(cid:82)(cid:79)
(cid:20)(cid:19)
(cid:36)(cid:79)(cid:76)(cid:70)(cid:72)(cid:182)(cid:86)(cid:3)
(cid:80)(cid:72)(cid:86)(cid:86)(cid:68)(cid:74)(cid:72)(cid:29)(cid:3)(cid:20)(cid:19)
(cid:38)(cid:68)(cid:85)(cid:82)(cid:79)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:37)(cid:82)(cid:69)
(cid:20)(cid:19)
(cid:38)(cid:68)(cid:85)(cid:82)(cid:79)(cid:182)(cid:86)(cid:3)
(cid:80)(cid:72)(cid:86)(cid:86)(cid:68)(cid:74)(cid:72)(cid:29)(cid:3)(cid:20)(cid:19)
(cid:883)(cid:882)(cid:882)
(cid:36)(cid:79)(cid:76)(cid:70)(cid:72)
(cid:883)(cid:882)(cid:882)
(cid:37)(cid:82)(cid:69)
(cid:491)
(cid:883)(cid:882)(cid:882)
(cid:491)
(cid:38)(cid:68)(cid:85)(cid:82)(cid:79)
(cid:883)(cid:882)(cid:882)
(cid:79)
(cid:72)
(cid:89)
(cid:72)
(cid:47)
(cid:3)
(cid:71)
(cid:72)
(cid:70)
(cid:81)
(cid:68)
(cid:68)
(cid:69)
(cid:80)
(cid:79)
(cid:44)
(cid:20)(cid:19)
(cid:37)(cid:82)(cid:69)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:36)(cid:79)(cid:76)(cid:70)(cid:72)
(cid:37)(cid:82)(cid:69)(cid:182)(cid:86)(cid:3)
(cid:80)(cid:72)(cid:86)(cid:86)(cid:68)(cid:74)(cid:72)(cid:29)(cid:3)(cid:20)(cid:19)
(cid:36)(cid:86)(cid:92)(cid:81)(cid:70)(cid:75)(cid:85)(cid:82)(cid:81)(cid:82)(cid:88)(cid:86)(cid:3)(cid:85)(cid:72)(cid:69)(cid:68)(cid:79)(cid:68)(cid:81)(cid:70)(cid:72)(cid:3)(cid:82)(cid:81)(cid:3)(cid:68)(cid:3)
(cid:74)(cid:79)(cid:82)(cid:69)(cid:68)(cid:79)(cid:3)(cid:82)(cid:73)(cid:73)(cid:86)(cid:72)(cid:87)(cid:3)(cid:20)(cid:19)
(cid:54)(cid:87)(cid:68)(cid:87)(cid:72)(cid:3)(cid:11)(cid:68)(cid:12)
(cid:55)(cid:76)(cid:80)(cid:72)
Fig. 2. The main idea of CYCLE (from the view of Alice.)
col is that each rebalancing requires a synchronous agreement
on the payment list for rebalancing among the nodes, i.e., a
new balanced state of channels. The synchronous agreement is
implemented by a collective signing consensus that occupies
much time for signing and message communication. Without
freezing,
the balance of the network changes during the
consensus, and the output of synchronous agreement, i.e., the
payment list for rebalancing, may be inapplicable for the latest
network state, and even lead to security risks.
i.e., Alice
10−→ Carol, Carol
To overcome the above limitations, we introduce an idea
named asynchronous rebalancing, which enables the channels
to be rebalanced during their normal running. Speciﬁcally,
during the normal off-chain running, the participants share the
information about their payments. At the same time, based
on the received information, each participant asynchronously
rebalances its connected channels following the principle that
payments along circular channels can cancel each other out.
For example, in Fig. 2, there are three payments along
10−→ Bob,
circular channels,
and Bob 10−→ Alice. There is a global offset with an initial
value of 0 on the channels. After committing a payment, to
cancel it out, a participant can publish the payment amount
to commit that it accepts a new global offset. In Fig. 2,
each participant publishes the value 10 in a message after its
payment is successful. From the view of Alice, after receiving
the three messages, it can locally apply a global offset of
10 to both its connected channels. From a global view, if
each message can be received by all participants, these three
payments cancel each other out and the network maintains in
State (a) without channel freezing. To visualize the estimated
effect of the existing rebalancing protocol and asynchronous
rebalancing, we illustrate their imbalanced level changes in
the right subﬁgures of Fig. 1 and 2, respectively, which will
be veriﬁed by our experiment in § VIII.
Based on the idea of asynchronous rebalancing, this paper
presents CYCLE, the ﬁrst balancing protocol2 for a sustainable
PCN. It aims to keep a PCN at a balanced level consistently
and avoid freezing channels with the guarantee of security
and privacy. To solve several key challenges including network
latency, malicious participants, and varying payment amounts
(to be discussed in § III-A), the protocol designs a message
mechanism and a smart contract for dispute resolution, which
guarantees the process of asynchronous rebalancing with se-
curity. Moreover, to address the privacy concern during the
information publication, a truncated Laplace mechanism is
designed to achieve differential privacy during balancing. The
protocol is an off-chain solution, which means its normal
running and the dispute settlement for the honest participants
are off-chain and only the dispute settlement for the malicious
ones is performed on-chain by a smart contract.
To summarize, we make the following contributions:
• We propose CYCLE, an off-chain protocol for sustainable
PCNs, aimed to constantly balance the networks without
channel freezing and meet more payment demands.
• On top of the existing PCNs, CYCLE depends on an off-
chain message mechanism and an on-chain smart contract
to guarantee the balance security of participants despite
Byzantine failures.
• For the privacy concern during the balancing, we present
a privacy-preserving scheme for our protocol based on a
truncated Laplace mechanism.
• We provide a proof-of-concept implementation of CYCLE
for Ethereum. Testbed experiments and real data-based
simulation show that CYCLE can keep the channels at
a steady level and satisfy 31% more payments than the
rebalancing protocol with a similar on-chain cost.
2To differentiate with the existing rebalancing protocol, we call CYCLE a
balancing protocol in the paper.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:16:49 UTC from IEEE Xplore.  Restrictions apply. 
42
II. SYSTEM MODEL
III. BALANCING PROTOCOL
A. Network model
A PCN can be modeled as a graph G := (V, E), where V
is the set of nodes namely accounts, E is the set of currently
open payment channels. The bidirectional channel between
account i and j is deﬁned by a tuple cij = (βi, βj, δij) ∈ E,
where βi, βj denote the initial balance for i, j and δij denotes
the current deviation of channel cij. The current balance of
i in the channel is βi + δij and that of j is βj − δij. Nodes
can communicate with each other by exchanging messages
via an underlying peer-to-peer network. Each node has a
public-private key pair. Before sending a message, a node
can sign the message by its private key for authentication
and the message will be propagated through a gossip protocol
[21]. Similar to [12], [13], [31], we consider a synchronous
communication model in which messages sent by honest nodes
can be delivered within a bounded time, but the order is not
necessarily preserved.
B. Threat model
In CYCLE,
there are two kinds of nodes: honest and
malicious. The honest nodes abide by the protocol while the
malicious nodes may collude with each other and violate
the protocol in arbitrary manners, such as denial of service,
or tampering, forgery of messages. The malicious nodes are
willing to lose part of or all of their money, either permanently
or temporarily, in order to steal the money from the honest
nodes. Some network-level attacks such as node eclipsing [18]
are out of scope for this paper, thus we can assume that the
honest nodes can remain on-line to the blockchain. Similar to
the rebalancing protocol [23], we assume that there is at least
one honest node that is the target of the other malicious nodes.
C. Security and privacy goals
We now introduce the security and privacy notions of
interest for CYCLE.
• Balance security [23]: Balance security guarantees that
each honest participant does not lose any of its funds
despite malicious participants. In other words, for each
honest participant, CYCLE only re-distributes the balance
distributed in its connected channels but does not change
its total balance.
• Value privacy [31], [40]: Value privacy guarantees that
for each channel, only its participants learn the value
of payments passing the channel. To provide a provable
privacy guarantee without making assumptions about the
background knowledge, § V gives aformal description
using differential privacy.
To better clarify the idea of CYCLE, we ﬁrst describe a
scheme considering security in § III, based on which we
develop a privacy-preserving scheme considering both security
and privacy in § V.
A. Protocol Roadmap
There are several challenges to implement the strawman
discussed in § I. First, the idea has an assumption that each
message can be received by all participants. However, due
to the network latency or malicious participants, different
participants may receive the messages at different times or
even cannot receive it. Second, it is crucial to guarantee the
atomicity of the global offset, i.e., after a participant receives
the messages, the global offset must be enforceable in its
channels. Otherwise, there will exist accounts losing money
during balancing. However, in the strawman, the atomicity
only depends on the participants’ voluntary compliance, which
is vulnerable to malicious attacks. Third, payments in dif-
ferent channels of the cycle may have different amounts at
different time. However, in the strawman, the global offset
is updated when the messages of all participants are on the
same value, which is hard to be satisﬁed, thus resulting a low
efﬁciency of the balancing. To tackle these challenges, we
present a smart contract-based asynchronous update rule for
the global offset of each channel in § III-B.
B. Protocol Design
a) Basic Idea: In a PCN, the accounts of each channel
cij participate in a channel contract [34]. For each valid
transaction in cij, a new balance deviation δij will be signed
by both account i and j. When there is a dispute, the channel
contract can resolve it by validating the signatures.
Motivated by it, to achieve the atomicity of the balancing,
we aim to extend the state of each channel to include a value Δ
which denotes the global offset and is under the responsibility