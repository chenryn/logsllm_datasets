    # yum module install httpd:2.4
    ```
2.  启动 `Apache HTTP 服务器`{.literal} ：
    ``` literallayout
    # systemctl start httpd
    ```
    或者，如果 `Apache HTTP 服务器`{.literal} 已在您的系统中运行，在安装
    PHP 后重启 `httpd`{.literal} 服务：
    ``` literallayout
    # systemctl restart httpd
    ```
3.  启动 `php-fpm`{.literal} 服务：
    ``` literallayout
    # systemctl start php-fpm
    ```
4.  可选：启用这两个服务在引导时启动：
    ``` literallayout
    # systemctl enable php-fpm httpd
    ```
5.  要获取有关 PHP 设置的信息，请在 `/var/www/html/`{.literal}
    目录中使用以下内容创建 `index.php`{.literal} 文件：
    ``` literallayout
    echo '' > /var/www/html/index.php
    ```
6.  要运行 `index.php`{.literal} 文件，将浏览器指向：
    ``` literallayout
    http:///
    ```
7.  可选：如果您有特定要求，请调整配置：
    ::: itemizedlist
    -   `/etc/httpd/conf/httpd.conf`{.literal} - 通用 `httpd`{.literal}
        配置
    -   `/etc/httpd/conf.d/php.conf`{.literal} - `httpd`{.literal}特定于
        PHP 的配置
    -   `/usr/lib/systemd/system/httpd.service.d/php-fpm.conf`{.literal} -
        默认情况下，php `-fpm`{.literal} 服务使用 `httpd`{.literal}启动
    -   `/etc/php-fpm.conf`{.literal} - FPM 主配置
    -   `/etc/php-fpm.d/www.conf`{.literal} - 默认 `www`{.literal}
        池配置
    :::
:::
::: example
[]{#assembly_using-the-php-scripting-language.html#ex-Using-the-PHP-scripting-language-Running-PHP-script-with-Apache}
**例 44.1. 运行\"Hello, World!\" 使用 Apache HTTP 服务器的 PHP 脚本**
::: example-contents
::: orderedlist
1.  在 `/var/www/html/`{.literal} 目录中为您的项目创建一个
    `hello`{.literal} 目录：
    ``` literallayout
    # mkdir hello
    ```
2.  在 `/var/www/html/hello/`{.literal} 目录中创建一个
    `hello.php`{.literal} 文件，其中包含以下内容：
    ``` literallayout
    # 
    Hello, World! Page
    ```
3.  启动 `Apache HTTP 服务器`{.literal} ：
    ``` literallayout
    # systemctl start httpd
    ```
4.  要运行 `hello.php`{.literal} 文件，将浏览器指向：
    ``` literallayout
    http:///hello/hello.php
    ```
    因此，会显示带有 \"Hello, World!\" 文本的网页。
:::
:::
:::
::: itemizedlist
**其它资源**
-   [设置 Apache HTTP web
    服务器](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/deploying_different_types_of_servers/setting-apache-http-server_deploying-different-types-of-servers){.link}
:::
:::
::: section
::: titlepage
## []{#assembly_using-the-php-scripting-language.html#using-php-with-the-nginx-web-server_using-the-php-scripting-language-with-a-web-server}将 PHP 与 nginx web 服务器搭配使用 {.title}
:::
本节论述了如何通过 `nginx`{.literal} web 服务器运行 PHP 代码。
::: itemizedlist
**先决条件**
-   PHP 脚本语言安装在您的系统上。
    请查看
-   [安装 PHP
    脚本语言](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#installing-the-php-scripting-language_using-the-php-scripting-language){.link}
:::
::: orderedlist
**流程**
1.  安装 `nginx`{.literal} 模块流：
    ``` literallayout
    # yum module install nginx:stream
    ```
    使用您要安装的 `nginx`{.literal} 版本替换 [*stream*]{.emphasis}。
    例如，要安装 `nginx`{.literal} 版本 1.18：
    ``` literallayout
    # yum module install nginx:1.18
    ```
2.  启动 `nginx`{.literal} 服务器：
    ``` literallayout
    # systemctl start nginx
    ```
    或者，如果 `nginx`{.literal} 服务器已在您的系统中运行，在安装 PHP
    后重启 `nginx`{.literal} 服务：
    ``` literallayout
    # systemctl restart nginx
    ```
3.  启动 `php-fpm`{.literal} 服务：
    ``` literallayout
    # systemctl start php-fpm
    ```
4.  可选：启用这两个服务在引导时启动：
    ``` literallayout
    # systemctl enable php-fpm nginx
    ```
5.  要获取有关 PHP 设置的信息，请在 `/usr/share/nginx/html/`{.literal}
    目录中创建 `index.php`{.literal} 文件：
    ``` literallayout
    echo '' > /usr/share/nginx/html/index.php
    ```
6.  要运行 `index.php`{.literal} 文件，将浏览器指向：
    ``` literallayout
    http:///
    ```
7.  可选：如果您有特定要求，请调整配置：
    ::: itemizedlist
    -   `/etc/nginx/nginx.conf`{.literal} - `nginx`{.literal} 主配置
    -   `/etc/nginx/conf.d/php-fpm.conf`{.literal} - `nginx`{.literal}的
        FPM 配置
    -   `/etc/php-fpm.conf`{.literal} - FPM 主配置
    -   `/etc/php-fpm.d/www.conf`{.literal} - 默认 `www`{.literal}
        池配置
    :::
:::
::: example
[]{#assembly_using-the-php-scripting-language.html#ex-Using-the-PHP-scripting-language-Running-PHP-script-with-nginx}
**例 44.2. 运行\"Hello, World!\" 使用 nginx 服务器的 PHP 脚本**
::: example-contents
::: orderedlist
1.  在 `/usr/share/nginx/html/`{.literal} 目录中为您的项目创建一个
    `hello`{.literal} 目录：
    ``` literallayout
    # mkdir hello
    ```
2.  在 `/usr/share/nginx/html/hello/`{.literal} 目录中创建一个
    `hello.php`{.literal} 文件，其中包含以下内容：
    ``` literallayout
    # 
    Hello, World! Page
    ```
3.  启动 `nginx`{.literal} 服务器：
    ``` literallayout
    # systemctl start nginx
    ```
4.  要运行 `hello.php`{.literal} 文件，将浏览器指向：
    ``` literallayout
    http:///hello/hello.php
    ```
    因此，会显示带有 \"Hello, World!\" 文本的网页。
:::
:::
:::
::: itemizedlist
**其它资源**
-   [设置和配置
    NGINX](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/deploying_different_types_of_servers/setting-up-and-configuring-nginx_deploying-different-types-of-servers){.link}
:::
:::
:::
::: section
::: titlepage
# []{#assembly_using-the-php-scripting-language.html#running-a-php-script-using-the-command-line-interface_assembly_using-the-php-scripting-language}使用命令行界面运行 PHP 脚本 {.title}
:::
PHP 脚本通常使用 Web 服务器运行，但也可以使用命令行界面运行。
如果您只想使用命令行运行 `php`{.literal} 脚本，请安装 `php`{.literal}
模块流 `的最小`{.literal} 配置集。
请查看
::: itemizedlist
-   [安装 PHP
    脚本语言](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#installing-the-php-scripting-language_using-the-php-scripting-language){.link}
:::
::: itemizedlist
**先决条件**
-   PHP 脚本语言安装在您的系统上。
    请查看
-   [安装 PHP
    脚本语言](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#installing-the-php-scripting-language_using-the-php-scripting-language){.link}
:::
::: orderedlist
**流程**
1.  在文本编辑器中，创建一个 `filename.php`{.literal} 文件
    将 [*filename*]{.emphasis} 替换为您的文件的名称。
2.  从命令行执行创建的 `filename.php`{.literal} 文件：
    ``` literallayout
    # php filename.php
    ```
:::
::: example
[]{#assembly_using-the-php-scripting-language.html#ex-Using-the-PHP-scripting-language-Running-PHP-script-using-command-line}
**例 44.3. 运行\"Hello, World!\" 使用命令行界面的 PHP 脚本**
::: example-contents
::: orderedlist
1.  使用文本编辑器 `创建包含以下内容的 hello.php`{.literal} 文件：
    ``` literallayout
    ```
2.  从命令行执行 `hello.php`{.literal} 文件：
    ``` literallayout
    # php hello.php
    ```
    因此，打印\"Hello, World!\"。
:::
:::
:::
:::
::: section
::: titlepage
# []{#assembly_using-the-php-scripting-language.html#_additional_resources_15}其它资源 {.title}
:::
::: itemizedlist
-   `httpd(8)`{.literal} - `httpd`{.literal} 服务的 man
    page，其中包含其命令行选项的完整列表。
-   `httpd.conf(5)`{.literal} - `httpd`{.literal} 配置的 man page，描述
    `httpd`{.literal} 配置文件的结构和位置。
-   `nginx(8)`{.literal} - 包含其命令行选项的完整列表和信号列表的
    `nginx`{.literal} Web 服务器的 man page。
-   `php-fpm(8)`{.literal} - PHP FPM 的 man page
    描述其命令行选项和配置文件的完整列表。
:::
:::
:::
[]{#assembly_using-langpacks.html}
::: chapter
::: titlepage
# []{#assembly_using-langpacks.html#assembly_using-langpacks}第 45 章 使用语言包 {.title}
:::
[**[语言包]{.application}**]{.strong}
是元包，可为系统上安装安装的每个软件包安装额外的附加软件包，其中包含翻译、词典和本地化内容。
在 Red Hat Enterprise Linux 8
系统中，[**[语言包安装]{.application}**]{.strong} 基于
`语言包- 语言`{.literal} meta-packages 和 RPM
弱依赖项（Supplements 标签）。
若要将 [**[语言包]{.application}**]{.strong}
用于选定的语言，有两个前提条件：如果满足了这些前提条件，则事务集中自动为所选语言拉取其语言包。
::: itemizedlist
**先决条件**
-   系统中已安装了所选 `语言的 langpacks-`{.literal} 语言
    meta-package。
    在 Red Hat Enterprise Linux 8 中，语言包元软件包使用 Anaconda
    安装程序自动安装操作系统的初始安装，因为这些软件包已在 Application
    Stream 存储库中提供。
    如需更多信息，请参阅
-   [检查提供语言包的语言](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#checking-languages-that-provide-langpacks_using-langpacks){.link}
-   您要搜索区域软件包的基本软件包已安装在系统上。
:::
::: section
::: titlepage
# []{#assembly_using-langpacks.html#checking-languages-that-provide-langpacks_assembly_using-langpacks}检查提供语言包的语言 {.title}
:::
按照以下步骤检查哪些语言提供语言包。