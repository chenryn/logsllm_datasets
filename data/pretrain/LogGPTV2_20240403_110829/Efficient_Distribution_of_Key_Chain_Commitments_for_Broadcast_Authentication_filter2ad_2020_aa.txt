title:Efficient Distribution of Key Chain Commitments for Broadcast Authentication
in Distributed Sensor Networks
author:Donggang Liu and
Peng Ning
E(cid:14)cient Distribution of Key Chain Commitments for Broadcast
Authentication in Distributed Sensor Networks(cid:3)
Donggang Liu
Peng Ning
Department of Computer Science
North Carolina State University
Raleigh, NC 27695-7534
Emails: PI:EMAIL, PI:EMAIL
Abstract
Broadcast authentication is a fundamental security
service in distributed sensor networks. A scheme
named (cid:22)TESLA has been proposed for e(cid:14)cient broad-
cast authentication in such networks. However,
(cid:22)TESLA requires initial distribution of certain in-
formation based on unicast between the base sta-
tion and each sensor node before the actual authen-
tication of broadcast messages. Due to the limited
bandwidth in wireless sensor networks, this initial
unicast-based distribution severely limits the applica-
tion of (cid:22)TESLA in large sensor networks. This paper
presents a novel technique to replace the unicast-based
initialization with a broadcast-based one. As a result,
(cid:22)TESLA can be used in a sensor network with a large
amount of sensors, as long as the message from the
base station can reach these sensor nodes. This pa-
per further explores several techniques that improve
the performance, the robustness, as well as the secu-
rity of the proposed method. The resulting protocol
satis(cid:12)es several nice properties, including low over-
head, tolerance of message loss, scalability to large
networks, and resistance to replay attacks as well as
some known Denial of Service (DOS) attacks.
1. Introduction
A distributed sensor network usually consists of one
or several computationally powerful nodes called base
stations and a large amount of inexpensive, low capac-
ity nodes called sensors (or sensor nodes). The nodes
in a distributed sensor network communicate through
wireless communication, which is usually limited in
(cid:3)This work is partially supported by the U.S. Army Re-
search O(cid:14)ce under grant DAAD19-02-1-0219.
bandwidth. Distributed sensor networks have exten-
sive applications in military as well as civilian opera-
tions, in which it is necessary to deploy sensor nodes
dynamically.
Broadcast authentication is an essential service in
distributed sensor networks. Because of the large
amount of sensor nodes and the broadcast nature of
the communication in distributed sensor networks, it
is usually desirable for the base stations to broadcast
commands and data to the sensor nodes. In hostile
environments (e.g., battle (cid:12)eld, anti-terrorists opera-
tions), it is necessary to enable the sensor nodes to au-
thenticate the broadcast messages received from the
base station.
A protocol named (cid:22)TESLA [13] has been proposed
for broadcast authentication in distributed sensor
networks, which is adapted from a stream authentica-
tion protocol called TESLA [10]. (cid:22)TESLA employs a
chain of authentication keys linked to each other by
a pseudo random function, which is by de(cid:12)nition a
one way function. Each key in the key chain is the
image of the next key under the pseudo random func-
tion. The e(cid:14)ciency of (cid:22)TESLA is based on the fact
that once a sensor node has an authenticated key in
a key chain, only pseudo random function operations
are needed to authenticate the subsequent broadcast
messages.
The original TESLA uses broadcast to distribute
the initial parameters required for broadcast authen-
tication. The authenticity of these parameters are
guaranteed by digital signature generated by the
sender. However, due to the low bandwidth of a sen-
sor network and the low computational resources at
each sensor node, (cid:22)TESLA cannot distribute these
initial parameters using public key cryptography. In-
stead, the base station has to unicast the initial pa-
rameters to the sensor nodes individually. This fea-
ture severely limits the application of (cid:22)TESLA in
1
large sensor networks. For example, The implemen-
tation of (cid:22)TESLA in [13] has 10Kbps bandwidth
and supports 30 bytes messages. To bootstrap 2000
nodes, the base station has to send or receive at
least 4000 packets to distribute the initial parameters,
which takes at least 4000(cid:2)30(cid:2)8
10240 = 93:75 seconds even if
the channel utilization is perfect. Such a method cer-
tainly cannot scale up to very large sensor networks,
which may have thousands of nodes.
In this paper, we propose an extension to (cid:22)TESLA
to address the above limitation. The basic idea is to
predetermine and broadcast the initial parameters re-
quired by (cid:22)TESLA instead of unicast-based message
transmission. In the simplest form, our extension dis-
tributes the (cid:22)TESLA parameters during the initial-
ization of the sensor nodes (e.g., along with the mas-
ter key shared between each sensor and the base sta-
tion). To provide more (cid:13)exibility, especially to pro-
long the life time of (cid:22)TESLA without requiring a very
long key chain, we introduce a multi-level key chain
scheme, in which the higher-level key chains are used
to authenticate the commitments of lower-level ones.
To further improve the survivability of the scheme
against message loss and Denial of Service (DOS) at-
tacks, we use redundant message transmission and
random selection strategies to deal with the messages
that distribute key chain commitments. The resulting
scheme removes the requirement of unicast-based ini-
tial communication between base station and sensor
nodes while keeping the nice properties of (cid:22)TESLA
(e.g., tolerance of message loss, resistance to replay
attacks). Our implementation and experiments fur-
ther demonstrate that our scheme can tolerate high
channel loss rate and is resistant to certain known
DOS attacks to a certain degree.
The rest of this paper is organized as follows. The
next section gives a brief overview of (cid:22)TESLA and
its extensions. Section 3 presents the development
of our multi-level key chain scheme. Section 4 de-
scribes the implementation and experiments with our
scheme. Section 5 discusses the related work, and sec-
tion 6 concludes the paper and points out some future
research directions. Appendix A presents the details
of the two-level key chain scheme, from which the
multi-level key chain is extended.
2. An Overview of (cid:22)TESLA
Authentication of broadcast messages is an impor-
tant security issue in wired or wireless networks. Gen-
erally, an asymmetric mechanism, such as public key
cryptography, is required to authenticate broadcast
messages. Otherwise, a malicious receiver can easily
forge any packet from the sender. However, due to the
high communication, computation and storage over-
head of the asymmetric cryptographic mechanisms,
it is impractical to implement them in resource con-
strained sensor networks.
(cid:22)TESLA introduced asymmetry by delaying the
disclosure of symmetric keys [13]. A sender broad-
casts a message with a Message Authentication Code
(MAC) generated with a secret key K, which will be
disclosed after a certain period of time. When a re-
ceiver receives this message, if it can ensure that the
packet was sent before the key was disclosed, the re-
ceiver can bu(cid:11)er this packet and authenticate it when
it receives the corresponding disclosed key. To contin-
uously authenticate the broadcast packets, (cid:22)TESLA
divides the time period for broadcasting into multi-
ple time intervals, assigning di(cid:11)erent keys to di(cid:11)erent
time intervals. All packets broadcasted in a particu-
lar time interval are authenticated with the same key
assigned to that time interval.
To authenticate the broadcast messages, a receiver
(cid:12)rst authenticates the disclosed keys. (cid:22)TESLA uses
a one-way key chain for this purpose. The sender
selects a random value Kn as the last key for the
key chain and repeatedly performs a pseudo random
function F to compute all the other keys: Ki =
F (Ki+1); 0 (cid:20) i (cid:20) n (cid:0) 1, where the secret key Ki is as-
signed to the ith time interval. With the pseudo ran-
dom function F , given Kj in the key chain, anybody
can compute all the previous keys Ki; 0 (cid:20) i (cid:20) j, but
nobody can compute any of the later keys Ki; j + 1 (cid:20)
i (cid:20) n. Thus, with the knowledge of the initial key
K0, the receiver can authenticate any key in the key
chain by merely performing pseudo random function
operations. When a broadcast message is available in
ith time interval, the sender generates MAC for this
message with a key derived from Ki and then broad-
casts this message along with its MAC and discloses
the key Ki(cid:0)d assigned to the time interval Ii(cid:0)d, where
d is the disclosure lag of the authentication keys. The
sender prefers a long delay in order to make sure that
all or most of the receivers can receive its broadcast
messages. But, for the receiver, a long delay could re-
sult in high storage overhead to bu(cid:11)er the messages.
Each key in the key chain will be disclosed after
some delay. As a result, the attacker can forge a
broadcast packet by using the disclosed key. (cid:22)TESLA
uses a security condition to prevent a receiver from
accepting any broadcast packet authenticated with a
disclosed key. When a receiver receives an incoming
broadcast packet in time interval Ii, it checks the se-
curity condition b(Tc + (cid:1) (cid:0) T0)=Tintc < Ii + d, where
Tc is the local time when the packet is received, T0
is the start time of the time interval 0, Tint is the
duration of each time interval, and (cid:1) is the maxi-
mum clock di(cid:11)erence between the sender and itself.
If the security condition is satis(cid:12)ed, i.e., the sender
has not disclosed the key Ki yet, the receiver accepts
this packet. Otherwise, the receiver simply drops it.
When the receiver receives the disclosed key Ki, it
can authenticate it with a previously received key Kj
by checking whether Kj = F i(cid:0)j(Ki), and then au-
thenticate the bu(cid:11)ered packets that were sent during
time interval Ii.
(cid:22)TESLA is an extension to TESLA [10]. The
only di(cid:11)erence between TESLA and (cid:22)TESLA is in
their key commitment distribution schemes. TESLA
uses asymmetric cryptography to bootstrap new re-
ceivers, which is impractical for current sensor net-
works due to its high computation and storage over-
head. (cid:22)TESLA depends on symmetric cryptography
with the master key shared between the sender and
each receiver to bootstrap the new receivers individu-
ally. In this scheme, the receiver (cid:12)rst sends a request
to the sender, and then the sender replies a packet
containing the current time Tc (for time synchroniza-
tion), a key Ki of one way key chain used in a past
interval i, the start time Ti of interval i, the duration
Tint of each time interval and the disclosure lag d.
TESLA was later extended to include an immediate
authentication mechanism [11]. The basic idea is to
include an image under a pseudo random function of
a late message content in an earlier message so that
once the earlier message is authenticated, the later
message content can be authenticated immediately
after it is received. This extension can also be applied
to (cid:22)TESLA protocol in the same way.
3. E(cid:14)cient Distribution of Key Chain
Commitments for (cid:22)TESLA
The major barrier of using (cid:22)TESLA in large sen-
sor networks lies in its di(cid:14)culty to distribute the key
chain commitments to a large number of sensor nodes.
In other words, the method for bootstrapping new re-
ceivers in (cid:22)TESLA does not scale to a large group of
new receivers, though it is okay to bootstrap one or a
few. The essential reason for this di(cid:14)culty is the mis-
match between the unicast-based distribution of key
chain commitments and the authentication of broad-
cast messages.
In this section, we present our method to address
the limitation of (cid:22)TESLA. The basic idea is to prede-
termine and broadcast the key chain commitments in-
stead of unicast-based message transmissions. In the
following, we present a series of schemes; each later
scheme improves over the previous one by addressing
some of its limitations.
We assume each broadcast message is from the base
station to the sensor nodes. Broadcast messages from
a sensor node to the sensor network can be handled as
suggested in [13]. That is, the sensor node unicasts
the message to the base station, which then broad-
casts the message to the other sensor nodes. The
messages transmitted in a sensor network may reach
the destination directly, or may have to be forwarded
by some intermediate nodes; however, we do not dis-
tinguish between them in our schemes.
For the sake of presentation, we denote the key
chain with commitment K0 as hK0i throughout this
paper.
3.1. Scheme I: Predetermined Key Chain Com-
mitment
A simple solution to bypass the unicast-based dis-
tribution of key chain commitments is to predeter-
mine the commitments, the starting times, and other
parameters of key chains to the sensor nodes during
the initialization of the sensor nodes, possibly along
with the master keys shared between the sensor nodes
and the base station. (Unlike the master keys, whose
con(cid:12)dentiality and integrity are both important, only
the integrity of the key chain commitments needs to
be ensured.) As a result, all the sensor nodes have
the key chain commitments and other necessary pa-
rameters once they are initialized, and are ready to
use (cid:22)TESLA as long as the starting time is passed.
This simple scheme can greatly reduce the overhead
involved in distribution of key chain commitments in
(cid:22)TESLA, since unicast-based message transmission is
not required any more. However, this simple solution
also introduces several problems.
First, a key chain in this scheme can only cover
a (cid:12)xed period of time. To cover a long period of
time, we need either a long key chain, or a large in-
terval to divide the time period. If a long key chain
is used, the base station will have to precompute and
store this key chain.
In addition, the receivers will
have to perform intensive computation of pseudo ran-
dom functions if there is a long delay (which covers
a large number of intervals) between broadcast mes-
sages. If a long interval is used, there will be a long
delay before the authentication of a message after it
is received, and it requires larger bu(cid:11)er at the sen-
sor nodes. Though the extensions to TESLA [11] can
remove this delay and the bu(cid:11)er requirement at the
sensor nodes, the messages will have to be bu(cid:11)ered
longer at the base station.
Second, it is di(cid:14)cult to predict the starting time
of a key chain when the sensor nodes are initialized.
If the starting time is set too early, the sensor nodes
will have to perform a large number of pseudo random
function operations in order to authenticate the (cid:12)rst
broadcast message. In addition, the key chain must
be fairly long so that it does not run out before the
sensor nodes’ life time ends. If the starting time is
set too late, messages broadcasted before it cannot
be authenticated via (cid:22)TESLA.
These problems make this simple scheme not a
In the following, we propose several
practical one.
additional techniques so that we not only avoid the
problems of unicast-based distribution of key com-
mitment, but also those of the simple scheme.
3.2. Scheme II: Naive Two-Level Key Chains
The essential problem of scheme I lies in the fact
that it is impossible to use both a short key chain and
short time intervals to cover a long period of time.
This con(cid:13)ict can be mitigated by using two levels of
key chains.
The two-level key chains consist of a high-level key
chain and multiple low-level key chains. The low-level
key chains are intended for authenticating broadcast
messages, while the high-level key chain is used to
distribute and authenticate commitments of the low-
level key chains. The high-level key chain uses a long
enough interval to divide the time line so that it can
cover the life time of a sensor network without hav-
ing too many keys. The low-level key chains have
short enough intervals so that the delay between the
receipt of broadcast messages and the veri(cid:12)cation of
the messages is tolerable.
The life time of a sensor network is divided into n
(long) intervals of duration (cid:1)0, denoted as I1, I2, ...,
and In. The high-level key chain has n + 1 elements
K0, K1, ..., Kn, which are generated by randomly
picking Kn and computing Ki = F0(Ki+1) for i =
0; 1; :::; n (cid:0) 1, where F0 is a pseudo random function.
The key Ki is associated with each time interval Ii.
We denote the starting time of Ii as Ti. Thus, the
starting time of the high-level key chain is T1.
Since the duration of the high-level time intervals is
usually very long compared to the network delay and
clock discrepancies, we choose to disclose a high-level
key Ki used for Ii in the following time interval Ii+1.
Thus, we use the following security condition to check
whether the base station has disclosed the key Ki
when a sensor node receives a message authenticated
with Ki at time t: t+(cid:14)M ax < Ti+1, where (cid:14)M ax is the
maximum clock discrepancy between the base station
and the sensor node.
Each time interval Ii
is further divided into m
(short) intervals of duration (cid:1)1, denoted as Ii;1, Ii;2,
..., Ii;m. If needed, the base station generates a low-
level key chain for each time interval Ii by randomly
picking Ki;m and computing Ki;j = F1(Ki;j+1) for
j = 0; :::; m (cid:0) 1, where F1 is a pseudo random func-
tion. The key Ki;j is intended for authenticating mes-
sages broadcasted during the time interval Ii;j. The