title:SHA-1 is a Shambles: First Chosen-Prefix Collision on SHA-1 and
Application to the PGP Web of Trust
author:Ga&quot;etan Leurent and
Thomas Peyrin
SHA-1 is a Shambles: First Chosen-Prefix Collision 
on SHA-1 and Application to the PGP Web of Trust
Gaëtan Leurent, Inria, France; Thomas Peyrin, 
Nanyang Technological University, Singapore
https://www.usenix.org/conference/usenixsecurity20/presentation/leurent
This paper is included in the Proceedings of the 29th USENIX Security Symposium.August 12–14, 2020978-1-939133-17-5Open access to the Proceedings of the 29th USENIX Security Symposium is sponsored by USENIX.SHA-1 is a Shambles: First Chosen-Preﬁx Collision on SHA-1 and
Application to the PGP Web of Trust∗
Thomas Peyrin
Nanyang Technological University, Singapore
thomas. peyrin@ ntu. edu. sg
Gaëtan Leurent
Inria, France
gaetan. leurent@ inria. fr
Abstract
The SHA-1 hash function was designed in 1995 and has
been widely used during two decades. A theoretical col-
lision attack was ﬁrst proposed in 2004 [29], but due to
its high complexity it was only implemented in practice
in 2017, using a large GPU cluster [23]. More recently,
an almost practical chosen-preﬁx collision attack against
SHA-1 has been proposed [12]. This more powerful attack
allows to build colliding messages with two arbitrary pre-
ﬁxes, which is much more threatening for real protocols.
In this paper, we report the ﬁrst practical implementa-
tion of this attack, and its impact on real-world security
with a PGP/GnuPG impersonation attack. We managed
to signiﬁcantly reduce the complexity of collision attacks
against SHA-1: on an Nvidia GTX 970, identical-preﬁx
collisions can now be computed with a complexity (ex-
pressed in terms of SHA-1 equivalents on this GPU) of
261.2 rather than 264.7, and chosen-preﬁx collisions with
a complexity of 263.4 rather than 267.1. When renting
cheap GPUs, this translates to a cost of US$ 11k for a
collision, and US$ 45k for a chosen-preﬁx collision, within
the means of academic researchers. Our actual attack
required two months of computations using 900 Nvidia
GTX 1060 GPUs.
Therefore, the same attacks that have been practical on
MD5 since 2009 are now practical on SHA-1. In particular,
chosen-preﬁx collisions can break signature schemes and
handshake security in secure channel protocols (TLS,
SSH), if generated extremely quickly. We strongly advise
to remove SHA-1 from those type of applications as soon
as possible.
We exemplify our cryptanalysis by creating a pair of
PGP/GnuPG keys with diﬀerent identities, but colliding
SHA-1 certiﬁcates. A SHA-1 certiﬁcation of the ﬁrst key
can therefore be transferred to the second key, leading
to an impersonation attack. This proves that SHA-1
signatures now oﬀer virtually no security in practice.
∗https://sha-mbles.github.io/
The legacy branch of GnuPG still uses SHA-1 by default
for identity certiﬁcations, but after notifying the authors,
the modern branch now rejects SHA-1 signatures (the
issue is tracked as CVE-2019-14855).
1 Introduction
Cryptographic hash functions are present in countless
security applications and protocols, used for various pur-
poses such as building digital signature schemes, message
authentication codes or password hashing functions. In
the key application of digital signatures for example,
hash functions are classically applied on the message be-
fore signing it, as a domain extender and also to provide
security guarantees. Informally, a cryptographic hash
function H is a function that maps an arbitrarily long
message M to a ﬁxed-length hash value (we denote n its
bit size). Collision resistance is the main security prop-
erty expected from a hash function: it should be hard for
an adversary to compute a collision (or identical-preﬁx
collision), i.e. two distinct messages M and M0 that map
to the same hash value H(M) = H(M0), where by “hard”
one means not faster than the generic 2n/2 computations
birthday attack.
A cryptanalyst will try to ﬁnd a collision for the hash
function at a reduced cost, but ad-hoc collision attacks
are hard to exploit in practice, because the attacker usu-
ally has little control over the value of the actual colliding
messages (in particular where the diﬀerences are inserted,
which are the interesting parts when attacking a digital
signature scheme). Thus, one can consider stronger vari-
ants of the collision attack more relevant in practice, such
as the so-called chosen-preﬁx collision [25] or CP colli-
sion. Two message preﬁxes P and P 0 are ﬁrst given as
challenge to the adversary, and his goal is to compute two
messages M and M0 such that H(P k M) = H(P 0 k M0),
where k denotes concatenation. With such ability, the
attacker can obtain a collision with arbitrarily chosen
preﬁxes, potentially containing meaningful information.
USENIX Association
29th USENIX Security Symposium    1839
A CP collision can also be found generically with 2n/2
computations (thus 280 for a 160-bit hash function like
SHA-1), but ad-hoc CP collision attacks are much more
diﬃcult to ﬁnd than plain collision attacks, because of the
uncontrolled internal diﬀerences created by the preﬁxes.
Yet, a CP collision attack was found for the MD5 hash
function [25], eventually leading to the creation of col-
liding X.509 certiﬁcates, and later of a rogue Certiﬁcate
Authority (CA) [27]. CP collisions have also been shown
to break important internet protocols, including TLS,
IKE, and SSH [1], because they allow forgeries of the
handshake messages if they can be generated extremely
quickly.
Largely inspired by MD4 [19] and then MD5 [20],
SHA-1 [16] is one the most famous cryptographic hash
functions in the world, having been the NIST and de-
facto worldwide hash function standard for nearly two
decades. It remained a NIST standard until its depre-
cation in 2011 (and was forbidden for digital signatures
at the end of 2013). Indeed, even though its successors
SHA-2 or SHA-3 are believed to be secure, SHA-1 has been
broken by a theoretical collision attack in 2004 [29]. Due
to its high technicality and computational complexity
(originally estimated to about 269 hash function calls),
this attack was only implemented in practice in 2017,
using a large GPU cluster [23]. Unfortunately, the SHA-1
deprecation process has been quite slow and one can
still observe many uses of SHA-1 in the wild, because it
took more than a decade to compute an actual collision,
plain collisions are diﬃcult to use directly to attack a
protocol, and migration is expensive.
Very recently, a CP collision attack against SHA-1 has
been described in [12] (but not implemented), which re-
quires an estimated complexity between 266.9 and 269.4
SHA-1 computations. It works with a two-phase strategy:
given the challenge preﬁxes and the random diﬀerences
on the internal state it will induce, the ﬁrst part of the at-
tack uses a birthday approach to limit the internal state
diﬀerences to a not-too-big subset (as done in [22,25]).
From this subset, reusing basic principles of the vari-
ous collision search advances on SHA-1, one slowly adds
successive message blocks to come closer to a collision,
eventually reaching the goal after a dozen blocks. Even
though these advances put the CP collisions within prac-
tical reach for very well-funded entities, it remains very
expensive to conduct and also very diﬃcult to implement
as the attack contains many very technical parts.
1.1 Our Contributions
In this article, we exhibit the very ﬁrst chosen-preﬁx
collision against SHA-1, with a direct application to
PGP/GnuPG security. Our contributions are threefold.
Function Collision type
SHA-1
free-start collision
collision
Cost Ref.
[24]
257.5
[29]
269
264.7
[22,23]a
261.2 New
[22]
chosen-preﬁx collision 277.1
267.1
[12]
263.4 New
Table 1: Comparison of previous and new cryptanalysis
results on SHA-1. A free-start collision is a collision of
the compression function only, where the attacker has
full control on all the primitive’s inputs. Complexities
in the table are given in terms of SHA-1 equivalents on
a GTX-970 GPU (when possible).
aEquivalent to 261 SHA-1 on CPU, 264.7 on GPU
Complexity improvements. While the work of [12]
was mostly about high-level techniques to turn a collision
attack into a chosen-preﬁx collision attack, we have to
look at the low-level details to actually implement the
attack. This gave us a better understanding of the com-
plexity of the attack, and we managed to signiﬁcantly
improve several parts of the attacks (See Table 1).
First, we improved the use of degrees of freedom (neu-
tral bits [3] and boomerangs [10]) during the search for
near-collision blocks. This reduces the computational
complexity for both plain and chosen-preﬁx collision at-
tacks, leading to important savings: on an Nvidia GTX
970, plain collisions can now be computed with a com-
plexity of 261.2 rather than 264.7 (expressed in terms
of SHA-1 equivalents on this GPU). We note that the
general ideas underlying these improvements might be
interesting for cryptanalysis of algorithms beyond SHA-1.
Second, we improved the graph-based technique of [12]
to compute a chosen-preﬁx collision. Using a larger graph
and more heuristic techniques, we can signiﬁcantly reduce
the complexity of a chosen-preﬁx collision attack, taking
full advantage of the improvements on the near-collision
block search. This results in a chosen-preﬁx collision
attack with a complexity of 263.4 rather than 267.1.
Record computation. We implemented the entire
chosen-preﬁx collision attack from [12], with those im-
provements. This attack is extremely technical, contains
many details, various steps, and requires a lot of engi-
neering work. Performing such a large-scale computation
is still quite expensive, but is accessible with an aca-
demic budget. More precisely, we can can rent cheap
GPUs from providers that use gaming or mining cards in
consumer-grade PCs, rather that the datacenter-grade
hardware used by big cloud providers. This gives a total
1840    29th USENIX Security Symposium
USENIX Association
cost signiﬁcantly smaller than US$ 100k to compute a
chosen-preﬁx collision. We give more detailed complexity
and cost estimates in Table 2.
We have successfully run the computation over a pe-
riod of two months, using 900 GPUs (Nvidia GTX 1060).
Our attack uses one partial block for the birthday stage,
and 9 near-collision blocks. We paid US$ 75k to rent the
GPUs from GPUserversrental, but the actual price could
be smaller because we lost some time tuning the attack.
There is also a large variability depending on luck, and
GPU rental prices ﬂuctuate with cryptocurrency prices.
PGP/GnuPG impersonation. Finally, in order to
demonstrate the practical impact of chosen-preﬁx col-
lisions, we used our CP collision for a PGP/GnuPG
impersonation attack. The chosen preﬁxes correspond
to headers of two PGP identity certiﬁcates with keys of
diﬀerent sizes, an RSA-8192 key and an RSA-6144 key.
By exploiting properties of the OpenPGP and JPEG
format, we can create two public keys (and their cor-
responding private keys): key A with the victim name,
and key B with the attacker name and picture, such that
the identity certiﬁcate containing the attacker key and
picture leads to the same SHA-1 hash as the identity
certiﬁcate containing the victim key and name. There-
fore, the attacker can request a signature of his key and
picture from a third party (from the Web of Trust or
from a CA) and transfer the signature to key A. The
signature stays valid because of the collision, while the
attacker controls key A with the name of the victim, and
signed by the third party. Therefore, he can impersonate
the victim and sign any document in her name.
1.2 SHA-1 Usage and Impact
Our work shows that SHA-1 is now fully and practically
broken for use in digital signatures. GPU technology
improvements and general computation cost decrease
will further reduce the cost, making it aﬀordable for any
ill-intentioned attacker in the very near future.
SHA-1 usage has signiﬁcantly decreased in the last
years; in particular web browsers now reject certiﬁcates
signed with SHA-1. However, SHA-1 signatures are still
supported in a large number of applications. SHA-1 is
the default hash function used for certifying PGP keys
in the legacy branch of GnuPG (v 1.4), and those sig-
natures were accepted by the modern branch of GnuPG
(v 2.2) before we reported our results. Many non-web
TLS clients also accept SHA-1 certiﬁcates, and SHA-1
is still allowed for in-protocol signatures in TLS and
SSH. Even if actual usage is low (a few percent), the fact
that SHA-1 is allowed threatens the security because a
man-in-the-middle attacker can downgrade the connec-
tion to SHA-1. SHA-1 is also the foundation of the GIT
versioning system, and it is still in DNSSEC signatures.
There are probably a lot of less known or proprietary
protocols that still use SHA-1, but this is more diﬃcult
to evaluate.
1.3 Outline
We ﬁrst recall SHA-1 inner workings and previous crypt-
analysis on this hash function in Section 2. We then
provide improvements over the state-of-the-art SHA-1
collision attacks in Section 3 and Section 4, and we de-
scribe the details of the SHA-1 chosen-preﬁx collision
computation in Section 5. Finally, we show a direct ap-
plication of our CP collision attack with a PGP/GnuPG
impersonation (together with discussions on other possi-
ble applications) in Section 6. We discuss SHA-1 usage
and the impact of our results in Section 7. Eventually,
we conclude and propose future works in Section 8.
2 Preliminaries
In this section, we describe the SHA-1 hash function (we
refer to [16] for all the complete details) and summarize
the previous cryptanalysis relevant to our new work.
2.1 Description of SHA-1
SHA-1 is a 160-bit hash function that follows the well-
known Merkle-Damgård paradigm [6,15], with 512-bit
message blocks, and a 160-bit state. The SHA-1 com-
pression function uses the Davies-Meyer construction,
that turns a block cipher E into a compression function:
cvi+1 = Emi+1(cvi)+ cvi, where Ek(y) is the encryption
of the plaintext y with the key k, and + is a word-wise
32-bit modular addition. It is composed of 4 rounds of
20 steps each (for a total of 80 steps), where one step
follows a generalised Feistel network. Since only a single
register value is updated, the other registers being only
rotated copies, we can express the SHA-1 step function
using a single variable:
Ai+1 = (Ai ≪ 5)+ fi(Ai−1, Ai−2 ≫ 2, Ai−3 ≫ 2)
+(Ai−4 ≫ 2)+ Ki + Wi.
where Ki are predetermined constants and fi are boolean
functions (given in Table 3). For this reason, the diﬀer-
ential trails ﬁgures in this article will only represent Ai,
the other register values at a certain point of time can
be deduced directly.
The extended message words Wi are computed lin-
early from the incoming 512-bit message block m, the
process being called message extension. One ﬁrst splits
m into 16 32-bit words M0, . . . , M15, and then the Wi’s
USENIX Association
29th USENIX Security Symposium    1841
Function
SHA-1
Collision type
collision
GPU
GTX 970
GTX 1060
GTX 1080 Ti
GTX 970
GTX 1060
GTX 1080 Ti
MD5k SHA-1 both (plain or CP) GTX 970
GTX 1060
GTX 1080 Ti
chosen-preﬁx