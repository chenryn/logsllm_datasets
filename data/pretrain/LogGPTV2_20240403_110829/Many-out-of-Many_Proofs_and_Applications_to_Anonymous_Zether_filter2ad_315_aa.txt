# Title: Many-out-of-Many Proofs and Applications to Anonymous Zether

# Author: Benjamin E. Diamond
# Affiliation: J.P. Morgan AI Research, New York, United States
# Email: PI:EMAIL

# Abstract
Anonymous Zether, proposed by Bünz, Agrawal, Zamani, and Boneh (FC'20), is a private payment design that requires minimal bandwidth and does not need to remain online. This unique property makes it suitable for resource-constrained devices. In this work, we present an efficient construction of Anonymous Zether. Our protocol features proofs that grow logarithmically with the size of the "anonymity sets" used, improving upon the linear growth of previous methods. It also offers competitive transaction sizes in practice, typically around 3 kilobytes.

Our key tool is a new family of extensions to Groth and Kohlweiss's one-out-of-many proofs (Eurocrypt 2015). These extensions efficiently prove statements about multiple messages within a list of commitments, proving knowledge of a secret subset of a public list and asserting that the commitments in the subset satisfy certain properties (expressed as linear equations). Notably, our communication remains logarithmic, and computation increases only by a logarithmic multiplicative factor. This technique is of independent interest.

We provide an open-source, Ethereum-based implementation of our Anonymous Zether construction.

# Index Terms
- Applied cryptography
- Blockchain and distributed ledger security
- Privacy technologies and mechanisms

# I. Introduction
Blockchain-based cryptocurrencies like Bitcoin [1] allow mutually distrustful participants to maintain shared computational state. These systems generally encode this state and the transactions that modify it "in the clear," providing only limited privacy (e.g., Ron and Shamir [2]).

This deficiency has driven the development of "privacy-preserving" alternatives such as Zcash [3] and Monero [4]. These systems encrypt their state and use non-interactive zero-knowledge proofs to securely and privately modify it.

Fauzi, Meiklejohn, Mercer, and Orlandi’s Quisquis [5] highlights an issue where the computational state of these systems grows linearly over time. They must store all TXOs (even spent ones), making it impossible to discern which have been consumed. While Quisquis’ state size scales linearly with its user base, it scales constantly over time.

A subtler issue prevents the use of even Quisquis on resource-constrained devices. All three systems require wallets to scan the entire cryptocurrency state to determine the user's account state, demanding stateful wallets and synchronization. This imposes a prohibitive cost on resource-limited wallets.

## A. Anonymous Zether
Anonymous Zether, proposed by Bünz, Agrawal, Zamani, and Boneh [6, §D], is a paradigm for private payments. It allows a wallet with reliable access to the blockchain's current state to determine its user's account state with constant bandwidth and computational effort, independent of the system's overall state size and the time since the last synchronization. This property distinguishes Anonymous Zether from Zcash, Monero, and Quisquis, making it suitable for low-bandwidth and low-power devices.

### Approach of Anonymous Zether
The system maintains a global table of accounts, associating each public key with an El Gamal ciphertext (encrypting the account balance "in the exponent"). This table can be queried in constant time.

To send funds, a user selects a ring containing themselves and the recipient, and encrypts the amounts under the respective keys. The smart contract applies these adjustments homomorphically. Finally, the user proves that the transaction preserves monetary invariants, captured by the relation [6, (8)] (see also (1) below), ensuring value conservation, no overdrafts, and that value flows only from known accounts.

Figure 1 illustrates the key relation (1). Given 8 public keys (y0, ..., y7), each with a standing account balance of 100, the two statements show valid and invalid witnesses. In the invalid statement, y1 overspends, excessively credits y6, alters y4's balance, and encrypts y7's adjustment under the wrong key.

### Mobile Cryptocurrency
Wallets and light clients in Zcash, Monero, and Quisquis face significant challenges. Account maintenance requires continual work proportional to the network's throughput and access to user secrets. For example, Zcash's reference wallet must entrust its secret viewing key to an external server, which filters relevant transactions. Monero wallets must scan each new transaction using the user's private view key. Both Zcash and Monero also require wallets to store linearly accumulating secret state, leading to substantial resource burdens or privacy compromises.

An Anonymous Zether wallet, by contrast, needs only to query a constant amount of state from an untrusted full node for each payment, and is essentially stateless. To determine the user's account balance, the wallet retrieves two 64-byte ciphertexts. To send funds, it retrieves 2 · N ciphertexts, where N is the size of the anonymity set. This is true regardless of the network's throughput and size, and of offline periods. The wallet, while offline, needs to remember only the user's 32-byte secret key.

### Anonymity Sets
Each wallet reveals to the full node what it also reveals to the rest of the network, except for balance queries, which can be disguised within anonymity sets. To receive funds, the wallet shares a list of accounts to subscribe to. Expanding this list to include the user's anonymity sets ensures no privacy loss.

Abstractly, Anonymous Zether provides Zether's RAM-like global accounts table with an atomic "multi-write" operation, disguising 2 logical writes within N physical writes. Each consuming application must select N locations to effectively disguise write behavior. It is an open question whether oblivious RAM techniques (e.g., Stefanov et al. [8]) could be applied to generate such selection strategies, potentially offering formal privacy guarantees.

# D. Technical Challenges
Our cryptographic contribution is an efficient proof system.