# Secure Your BLE Devices or Face the Consequences

**@virtualabs | DEF CON 26, August 12, 2018**

## Who Am I?
- **Head of R&D at Econocom Digital Security**
- **Studying Bluetooth Low Energy (BLE) for 3 years**
- **Developer and maintainer of BtleJuice**
- **Experimenting with Nordic's nRF51822**

## Agenda
1. **BLE Sniffing 101**
2. **Improving the BLE Arsenal**
3. **Sniffing BLE Connections in 2018**
4. **Introducing BtleJack: A Flexible Sniffing Tool**
5. **BtleJacking: A New Attack Vector**
6. **How It Works**
7. **Vulnerable Devices & Demos**
8. **Recommendations**

## BLE Sniffing 101
### Available Tools and Their Limitations
- **Ubertooth One**
  - **Cost:** $120
  - **Features:**
    - Sniffs existing and new connections
    - Up-to-date software (Nov. 2017)
    - Does not support channel map updates
- **Adafruit's Bluefruit LE Sniffer**
  - **Cost:** $30 - $40
  - **Features:**
    - Proprietary firmware from Nordic Semiconductor
    - Sniffs only new connections
- **Software-Defined Radio (SDR)**
  - **Features:**
    - Requires a 2.4GHz compatible SDR device
    - High latency
    - Only sniffs BLE advertisements
    - Unable to follow existing or new connections

### Challenges in BLE Sniffing
- **Design Intention:** BLE is designed to make sniffing difficult:
  - 3 separate advertising channels
  - Frequency Hopping Spread Spectrum (FHSS)
  - Master or slave can renegotiate parameters at any time
- **Conclusion:** Sniffing BLE connections is either hard or expensive.

## Man-in-the-Middle (MitM) Attacks
### How BLE MitM Works
1. **Discover the Target Device:** Using advertisement data, services, and characteristics.
2 - **Connect to the Target Device:** The device stops advertising once connected.
3. **Advertise the Same Device:** Await connections and forward data.

### Existing Tools
- **BtleJuice:**
  - **GitHub:** [BtleJuice](https://github.com/DigitalSecurity/btlejuice)
  - **Pros:**
    - Solves the 3 advertising channels issue
    - Captures all BLE operations
    - Allows on-the-fly tampering of data
  - **Cons:**
    - Complex setup: 1 VM and 1 Host computer
    - Only captures HCI events, not BLE Link Layer
    - Limited pairing types
    - Compatible only with 4.0 adapters
- **GAttacker:**
  - **GitHub:** [GAttacker](https://github.com/securing/gattacker)

### Current Limitations
- **Ubertooth-btle:** Outdated and incompatible with recent BLE stacks.
- **Nordic Semiconductor's Sniffer:** Closed source, no active connection sniffing, and may be discontinued.
- **MitM Approach:** Too complex and does not intercept link-layer packets.

## Improving the BLE Arsenal
### The Ideal Tool
- **Requirements:**
  - Sniff existing and new connections
  - Use affordable hardware
  - Open-source

### Sniffing Active Connections
- **Mike Ryan's Technique (2013):**
  - **Steps:**
    1. Identify Access Address (32 bits)
    2. Recover CRCInit value used to compute CRC
    3. Calculate hopInterval: time between two packets / 37
    4. Determine hopIncrement: LUT[time between channel 0 & 1]
  - **Assumption:** All 37 data channels are used.
  - **Current Reality (2018):** Not all channels are used, and some are remapped to maintain a 37-channel hopping sequence.

### Deducing Channel Map and Hop Interval
- **Channel Map:**
  - Listen for packets on every possible channel
  - May take up to 4 x 37 seconds to determine
- **Hop Interval:**
  - Find a unique channel
  - Measure time between two packets and divide by 37
- **Hop Increment:**
  - Pick two unique channels
  - Generate a lookup table
  - Measure time between two packets on these channels
  - Determine increment value

### Sniffing New Connections
- **CONNECT_REQ PDU:**
  - Contains all necessary information
  - Sniffer must listen on the correct channel
- **"Instant" Matters:**
  - Defines when parameter updates are effective
  - Used for channel map and hop interval updates

### Multiple Sniffers for Ultimate Sniffing
- **New Tool: BtleJack**
  - **Based on Micro:Bit**
  - **Cost:** $15
  - **GitHub:** [BtleJack](https://github.com/virtualabs/btlejack)

### BtleJacking: A New Attack
- **Supervision Timeout:**
  - Defined in CONNECT_REQ PDU
  - Time after which a connection is considered lost if no valid packets
  - Enforced by both Central and Peripheral devices
- **Comparison with Jamming:**
  - Supervision timeout vs. jamming

### Impact and Countermeasures
- **Impact:**
  - Unauthorized access to devices, even if already connected
  - Bypasses authentication if performed at the start of the connection
  - Keeps the device's internal state intact, potentially leaking valuable information
- **Countermeasures:**
  - Use BLE Secure Connections (see specifications)
  - Authenticate data at the application layer

### Conclusion
- **BtleJack:**
  - An all-in-one solution for BLE sniffing, jamming, and hijacking
  - Works on all BLE versions
  - Insecure BLE connections are prone to sniffing and hijacking
  - Potential for worse vulnerabilities with future BLE versions (greater range)
- **Action Item:** Secure your BLE connections, seriously!

## Contact Information
- **Twitter:** @virtualabs
- **Email:** damien.cauquil@digital.security

## Q&A
- **Why Didn't You Improve Ubertooth-BTLE Code?**
  - More familiar with nRF51 SoCs than LPC microcontrollers
  - Cost: Buying 3 Ubertooth devices ($360) is not cheap
- **How Did You Make Your Cluster?**
  - Modified ClusterHat v2 ($30)
  - [ClusterHat v2](https://shop.pimoroni.com/products/cluster-hat)

**Thank you! Any questions?**