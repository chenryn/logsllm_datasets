provide correct spoofed responses for the majority of the DNS
requests issued by the DV++ agents.
If the attacker is located on a network of the victim nameserver,
it can hijack requests on the network of the nameserver and send
spoofed responses to the DV++ agents. Luckily domains have more
than one nameserver and the nameservers are placed in different
networks; this is following best practices to avoid a single point
of failure for domains. Our measurements of 1M-top Alexa do-
mains show that an average number of nameservers per domain
is 5, and minimal is 2. Furthermore, the nameservers belonging to
the same domain are hosted in different networks. This ensures
that the attacker cannot hijack and replace responses from all the
nameservers.
We next evaluate attacks by passive MitM attacker, that con-
trols a large ISP, and by an active attacker, that also additionally
attempts to attract traffic from other networks. We run simulations
Session 10C: TLS 2CCS’18, October 15-19, 2018, Toronto, ON, Canada2070using a different number of agents, and demonstrate that even 3
agents in networks of top-tier ISPs suffice to provide strong security
guarantees against MitM attackers.
4.4.1 MitM Attacker. We quantify the ability of an on-path at-
tacker to intercept majority of the DNS requests sent from the
agents to the victim domain. We run simulations using Alexa name-
servers in 1000-top domains and quantify over different attacker-
agents pairs and the fraction of nameservers whose BGP routes
to the victim traverse the attacker. We run simulations with the
BGP route computations presented in [25, 26] to the empirically de-
rived CAIDA AS-level graph [4] from 2016. The graph is annotated
with bilateral business relationships. We average our measurements
over 106 combinations of attacker-victim AS pairs, selecting them
at random. To identify ASes that host the nameservers we mapped
the IP addresses of the nameservers to AS numbers using RIPE
https://stat.ripe.net.
The simulations evaluate all the possibilities for an on-path at-
tacker to cover almost all the routes between the victim domain and
the DV++ agents. We used the dataset from January 2018, which
contained 60006 ASes. We categorise ASes into four classes: large
ASes with more than 250 customers, medium ASes that have be-
tween 25 and 250 customers, small ASes with 1 to 25 customers
and stub ASes that have no customers. AS graph has 56 large ASes,
615 medium ASes, 8329 small ASes and 50995 stub ASes. Our graph
had in total 60006 nodes and 261340 edges.
In our simulation for each combination of attacker-victim ASes
pairs, we measure the fraction of attacker-victim pairs in which the
attacker can capture traffic from more than 50% of the DV++ agents.
This would be a very strong attacker, nevertheless, we show that
DV++ when using sufficient amount of agents ensures security. In
practice, the attackers are of course much weaker. The simulations
show that only 0.1% of the attackers can be on the path between
the victim nameservers and 50% or more of the agents, and hence
capture the traffic between the victim and the agents. No attacker
can capture 50% of the traffic to the agents when one or more
agents are in a large AS, and attackers that are small ISPs or stubs
cannot launch successful attacks. We summarise the result of our
simulation in Table 1, and plot the results in Figure 10. Figure 10
shows that even with agents in 3 vantage points located in either
of top 10 ISPs, the probability of the attacker to launch a successful
hijack of more than 50% of the agents drops to almost 0.
victim/attacker
Large
Medium
Small
Stub
Large Medium Small
0.00
0.00
0.21
0.00
0.00
0.34
0.52
0.00
0.00
0.02
0.12
0.07
Stub
0.00
0.00
0.00
0.00
Table 1: Evaluation of on-path attacker. % of attackers cap-
turing traffic from ≥ 50% agents
4.4.2 Hijacking Attacker. The Border Gateway Protocol (BGP)
is vulnerable to prefix hijack attacks [1–3, 10]. In prefix hijacks,
the attacker hijacks all the traffic of a victim network. We evaluate
Figure 10: Passive Attacker. Large ISP with > 250 customers,
and top ISP is tier 1 ISP.
attacker ability to exploit the insecurity in inter-domain routing
protocol (BGP) to hijack traffic between the victim nameservers
and the DV++ agents. In this case, both the victim nameservers
and the attacker announce victims’ BGP prefixes. We evaluate the
fraction of agents that the attacker can attract. The simulation
result in Figure 11 shows that probability that the attacker attracts
more than 50% of the agents is 2%. The simulation also shows that
the attackers that can hijack traffic from 50% of the agents, would
disconnect the victim from the rest of the Internet. Only 0.20% of
the attackers can successfully launch the attack while maintaining
their route to the victim in order to relay packets between the victim
nameservers and the rest of the Internet while avoiding detection.
This is due to the fact that the fraction of agent nodes that the
attacker hijacks is close to the fraction of the ASes in the Internet
that the attacker attracts when announcing the victim’s prefix.
Figure 11: Simulations with active BGP prefix hijacking at-
tacker.
4.5 Other Applications of DV++
DV++ can be used to bootstrap other mechanisms with security. For
instance, our attacks apply against password recovery procedures in
popular web services. In password recovery procedure the password
or a link to reset the password is sent back to the email that initiated
the password recovery. If the DNS resolver on the network of the
service is attacked, and caches an incorrect record (mapping the
email of the victim to attacker’s controlled IP address) the password
will be sent to the attacker.
DV++ can be used by the web services, to validate the DNS record
of the email requesting the password recovery, hence blocking
malicious requests that do not pass the verification of DV++.
Session 10C: TLS 2CCS’18, October 15-19, 2018, Toronto, ON, Canada20715 RELATED WORK
5.1 DNS Security
Although researchers warned already in late 90s against the poten-
tial vulnerabilities to cache poisoning, DNS cache poisoning was
first demonstrated in 2008 [36] against DNS resolvers that used
fixed or incrementing source ports. Subsequently, [RFC5452] pro-
vided recommendations for patches, which included randomising
the source ports in DNS requests, selecting the nameservers to
which the requests are sent at random, and other patches. Never-
theless, shortly after attacks were found allowing to circumvent the
[RFC5452] patches. Initially, [30, 32] showed that despite randomi-
sation the source ports can be often predicted using side channels,
such as timing. Followup works applied fragmentation for bypass-
ing the recommendations in [RFC5452], [31, 33, 45].
However, predicting the source ports and other defences in
[RFC5452] does not suffice for guaranteeing successful cache poi-
soning attacks. In particular, when the records are already in the
cache, the DNS resolvers would often ignore and discard the DNS
records which contain new values. To gain insights into caches
behaviour [40, 48] performed a study of Which resolvers overwrite
cached records with new values and under what conditions. Often,
DNS resolution platforms consist of multiple actors and caches,
these were studied in [39, 43] and multiple forwarders in DNS
resolution chains which also expose to cache poisoning attacks
[46].
DNSSEC [RFC4033-RFC4035] would prevent the cache poison-
ing attacks, however, recently vulnerabilities and misconfigurations
were found in DNSSEC keys generation and management proce-
dures exposing a large fraction of signed domains (more than 35%)
to attacks, [16, 17, 47]. Furthermore, as [28] showed DNSSEC does
not prevent attacks which replay DNSSEC-signed DNS response
to redirect clients to incorrect servers in Content Distribution Net-
works (CDNs).
5.2 CA Compromises
A valid certificate signed by any of the trusted CAs in the browser,
is accepted by the browsers. This property has spurred a proliferat-
ing market for certificates, it also has devastating implications for
security: any vulnerable or compromised CA can subvert the security
of any domain.
Indeed, there is a long history of attacks against the CAs. The
compromise of small Dutch CA DigiNotar CA in 2011 was a critical
point in history of PKI. For the first time a CA was removed from
browser root stores because of poor infrastructure control and
issuance of spoofed certificates. Subsequent works documented
loopholes in PKI ecosystem, [7, 20, 34]. Other large CAs such as
Comodo and Verisign have experienced breaches as well. In 2016
Chinese CA Wosign ‘mistakenly’ gave out certificates for GitHub
domains due to a loophole in domain validation process. Specifically,
if a user could prove ownership of a subdomain the CA would also
issue certificate for the parent domain without applying DV to prove
ownership of the base domain. In 2015 Comodo issued a certificate
to an unauthorised party for live.fi – domain used by Microsoft
to provide free email. This would have caused users to leak their
credentials. Recently a Egyptian ISP (MCS holdings) obtained a
certificate that was signed by CNNIC, that was included in root
stores. Namely any certificate issued by MCS would be accepted as
valid (even for domains MCS did not own). In 2008, a bug in Debian
OpenSSL caused thousands of certificates to be issued for keys with
only 15-17 bits of entropy [22]. In addition, many browsers accept
(non-root) certificates for 1024-bit RSA keys, which are believed to
be broken by nation state attackers [11].
The research community also pointed out that Border Gateway
Protocol (BGP) prefix hijacking can be leveraged to bypass domain
validation (DV), see poster [13].
5.3 PKI Defences and Alternative Proposals
Following CA compromises and the risk of MitM attacks, new secu-
rity mechanisms have been added to SSL/TLS, and the PKI. These
include certificate transparency (CT), HSTS and HPKP headers,
SCSV for protection against downgrade attacks. A taxonomy in
[12] lists the proposals for improving the security of PKI infrastruc-
ture. We briefly recap here for completeness.
There are attempts to create a new alternative PKI and propos-
als to use additional entities for storing and checking certificates.
Some proposals are aimed at making compromises visible using log
servers to monitor CAs behaviour, for instance, Certificate Trans-
parency (CT) [42], Sovereign Keys [21], Accountable Key Infras-
tructure [38], Attack-Resilient Public Key Infrastructure (ARPKI)
[12], DTKI [5, 15, 49, 50]. DNS-Based Authentication of Named En-
tities (DANE) [RFC7671] uses DNSSEC [RFC4033-RFC4035] to list
trusted CAs for issuing domains certificates. Similarly DNS Certifi-
cate Authority Authentication (CAA) Resource Record [RFC6844]
uses DNS to list acceptable CAs. The goal of these proposals is
to replace or complement the existing certificates issued by CAs
trusted by the browsers. The proposals provide a good starting
point and promising options for design of future PKI. However, due
to their complexity and efficiency overhead as well as the changes
that they require to the existing infrastructure and the deployment
overhead (e.g., introduce multiple interacting entities), most are
not adopted. Since March 2016, the Chrome Browser uses CT and
ceased displaying the green bar for EV certificates that are not
registered in a log server.
After making our DV++ available in March 2017, a parallel simi-
lar direction was proposed by LetsEncrypt, called multi-VA. The
difference is that in contrast to DV++, multi-VA uses fixed nodes
(currently three). Which it uses to perform the validation. By cor-
rupting the nodes, the attacker can subvert the security of multi-VA
mechanism. DV++ selects the nodes at random from a large set.
Furthermore, we ensure that the nodes’ placement guarantees that
the nodes are not all located in the same autonomous system (AS)
and the paths between the nodes and that the validated domain
servers do not overlap.
6 CONCLUSIONS
Automated, efficient and easy-to-use procedures pave success for
many mechanisms and DV is no exception to it. Unfortunately,
the benefits also come with reduced security due to reliance on
an insecure DNS. This makes DV vulnerable to off-path attacks,
allowing even very weak attackers to issue fraudulent certificates
for domains they do not own. We demonstrate such attacks.
Session 10C: TLS 2CCS’18, October 15-19, 2018, Toronto, ON, Canada2072Since cryptography for DNS is far from being sufficiently de-
ployed, we need another way to bootstrap security. The only alter-
native is utilising the distributed nature of the Internet and making
structural assumptions about the attacker’s capabilities. Based on
this observation we design and implement DV++: an innovative
distributed mechanism which comes with the same benefits as DV
while providing resilience even against strong MitM attackers.
7 ACKNOWLEDGEMENTS
The research reported in this paper was supported in part by the
German Federal Ministry of Education and Research (BMBF), by the
Hessian Ministry of Science and the Arts within CRISP (www.crisp-
da.de/) and co-funded by the DFG as part of project S3 within the
CRC 1119 CROSSING.
REFERENCES
[1] [n. d.]. Hijack Event Today by Indosat.
http://www.bgpmon.net/hijack-event-today-by-indosat. ([n. d.]).
[2] [n. d.]. New Threat: Targeted Internet Traffic Misdirection.
http://www.renesys.com/2013/11/mitm-internet-hijacking. ([n. d.]).
[3] 2008. Renesys Blog - Pakistan Hijacks YouTube.
http://www.renesys.com/blog/2008/02/pakistan_hijacks_youtube_1.shtml. (Feb.
2008).
[4] 2011. The CAIDA AS Relationships Dataset, 2011.
http://www.caida.org/data/active/as-relationships/. (2011).
[5] Martín Abadi, Andrew Birrell, Ilya Mironov, Ted Wobber, and Yinglian Xie. 2013.
[6] Nadhem J Al Fardan and Kenneth G Paterson. 2013. Lucky thirteen: Breaking
Global Authentication in an Untrustworthy World.. In HotOS.
the TLS and DTLS record protocols. In Security and Privacy (SP), 2013 IEEE
Symposium on. IEEE, 526–540.
[7] Bernhard Amann, Matthias Vallentin, Seth Hall, and Robin Sommer. 2012.
Extracting certificates from live traffic: A near real-time SSL notary service.
Technical Report TR-12-014 (2012).
10, 11 (2012), 40.
[8] Daniel Anderson. 2012. Splinternet Behind the Great Firewall of China. Queue
[9] Nimrod Aviram, Sebastian Schinzel, Juraj Somorovsky, Nadia Heninger, Maik
Dankel, Jens Steube, Luke Valenta, David Adrian, J Alex Halderman, Viktor
Dukhovni, et al. 2016. DROWN: Breaking TLS Using SSLv2.. In USENIX Security