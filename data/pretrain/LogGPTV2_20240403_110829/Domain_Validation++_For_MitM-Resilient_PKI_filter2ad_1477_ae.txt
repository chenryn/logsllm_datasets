### Providing Spoofed Responses for the Majority of DNS Requests

To provide spoofed responses for the majority of DNS requests issued by DV++ agents, an attacker located on the same network as the victim nameserver can hijack these requests and send spoofed responses. However, domains typically have multiple nameservers distributed across different networks to avoid a single point of failure. Our analysis of the top 1 million Alexa domains shows that, on average, each domain has 5 nameservers, with a minimum of 2. Additionally, these nameservers are hosted in different networks, ensuring that an attacker cannot intercept and replace responses from all of them.

### Evaluation of Attacks by Passive and Active MitM Attackers

#### 4.4.1 MitM Attacker

We evaluate the ability of an on-path attacker to intercept the majority of DNS requests sent from DV++ agents to the victim domain. Using simulations with Alexa nameservers from the top 1,000 domains, we quantify the fraction of nameservers whose BGP routes to the victim traverse the attacker. We use BGP route computations from [25, 26] and the CAIDA AS-level graph [4] from 2016, which is annotated with bilateral business relationships. Our measurements are averaged over 1,000,000 combinations of randomly selected attacker-victim AS pairs. To identify ASes hosting the nameservers, we map their IP addresses to AS numbers using RIPE (https://stat.ripe.net).

Our simulations cover all possible scenarios where an on-path attacker could intercept almost all routes between the victim domain and the DV++ agents. The dataset from January 2018 includes 60,006 ASes, categorized into four classes:
- Large ASes: more than 250 customers
- Medium ASes: 25 to 250 customers
- Small ASes: 1 to 25 customers
- Stub ASes: no customers

The AS graph contains 56 large ASes, 615 medium ASes, 8,329 small ASes, and 50,995 stub ASes, with a total of 60,006 nodes and 261,340 edges.

For each combination of attacker-victim AS pairs, we measure the fraction of pairs where the attacker can capture traffic from more than 50% of the DV++ agents. Despite the strength of such an attacker, our results show that DV++ ensures security when a sufficient number of agents are used. In practice, attackers are much weaker. Our simulations indicate that only 0.1% of attackers can be on the path between the victim nameservers and 50% or more of the agents, thus capturing the traffic. No attacker can capture 5.0% of the traffic to the agents if one or more agents are in a large AS, and small ISPs or stubs cannot launch successful attacks.

**Table 1: Evaluation of On-Path Attacker**
| Victim/Attacker | Large | Medium | Small | Stub |
|-----------------|-------|--------|-------|------|
| Large           | 0.00  | 0.00   | 0.21  | 0.00 |
| Medium          | 0.00  | 0.34   | 0.52  | 0.00 |
| Small           | 0.00  | 0.02   | 0.12  | 0.07 |
| Stub            | 0.00  | 0.00   | 0.00  | 0.00 |

**Figure 10: Passive Attacker**  
Large ISP with > 250 customers, and top ISP is tier 1 ISP.

#### 4.4.2 Hijacking Attacker

The Border Gateway Protocol (BGP) is vulnerable to prefix hijack attacks [1–3, 10]. In such attacks, the attacker hijacks all traffic of a victim network. We evaluate the attacker's ability to exploit BGP vulnerabilities to hijack traffic between the victim nameservers and the DV++ agents. Both the victim nameservers and the attacker announce the victim’s BGP prefixes. We measure the fraction of agents the attacker can attract.

**Figure 11: Simulations with Active BGP Prefix Hijacking Attacker**  
The probability that the attacker attracts more than 50% of the agents is 2%. Only 0.20% of attackers can successfully launch the attack while maintaining their route to the victim, relaying packets without detection. This is because the fraction of agent nodes the attacker hijacks is close to the fraction of ASes in the Internet attracted when announcing the victim’s prefix.

### Other Applications of DV++

DV++ can be used to bootstrap other security mechanisms. For example, it can prevent password recovery attacks on popular web services. In a password recovery procedure, the password or reset link is sent to the initiating email. If the DNS resolver on the service's network is attacked and caches an incorrect record, the password will be sent to the attacker. DV++ can validate the DNS record of the requesting email, blocking malicious requests that fail verification.

### Related Work

#### 5.1 DNS Security

Despite warnings in the late 90s about potential vulnerabilities, DNS cache poisoning was first demonstrated in 2008 [36]. RFC5452 provided recommendations, including randomizing source ports and selecting nameservers at random. However, subsequent attacks bypassed these measures [30, 32, 31, 33, 45]. Predicting source ports and other defenses do not guarantee protection against cache poisoning, especially if records are already cached [40, 48, 39, 43, 46].

DNSSEC [RFC4033-RFC4035] would prevent cache poisoning, but recent vulnerabilities and misconfigurations expose over 35% of signed domains to attacks [16, 17, 47]. DNSSEC also does not prevent replay attacks in Content Distribution Networks (CDNs) [28].

#### 5.2 CA Compromises

A valid certificate from any trusted CA is accepted by browsers, leading to a market for certificates and significant security risks. History includes several CA compromises, such as DigiNotar in 2011, Comodo, Verisign, Wosign, and others. These incidents highlight the need for better security mechanisms.

#### 5.3 PKI Defenses and Alternative Proposals

New security mechanisms like Certificate Transparency (CT), HSTS, HPKP headers, and SCSV have been added to SSL/TLS and PKI. Alternative PKI proposals include CT, Sovereign Keys, Accountable Key Infrastructure, ARPKI, DTKI, DANE, and CAA. These aim to replace or complement existing CA-issued certificates but face adoption challenges due to complexity and overhead.

### Conclusions

Automated, efficient, and easy-to-use procedures, like DV, often come with reduced security due to reliance on an insecure DNS. This makes DV vulnerable to off-path attacks, allowing even weak attackers to issue fraudulent certificates. Given the limited deployment of DNS cryptography, we need to leverage the distributed nature of the Internet. DV++ provides resilience against strong MitM attackers while maintaining the benefits of DV.

### Acknowledgements

This research was supported in part by the German Federal Ministry of Education and Research (BMBF), the Hessian Ministry of Science and the Arts within CRISP (www.crisp-da.de/), and co-funded by the DFG as part of project S3 within the CRC 1119 CROSSING.

### References

[1] [n. d.]. Hijack Event Today by Indosat. http://www.bgpmon.net/hijack-event-today-by-indosat. ([n. d.]).

[2] [n. d.]. New Threat: Targeted Internet Traffic Misdirection. http://www.renesys.com/2013/11/mitm-internet-hijacking. ([n. d.]).

[3] 2008. Renesys Blog - Pakistan Hijacks YouTube. http://www.renesys.com/blog/2008/02/pakistan_hijacks_youtube_1.shtml. (Feb. 2008).

[4] 2011. The CAIDA AS Relationships Dataset, 2011. http://www.caida.org/data/active/as-relationships/. (2011).

[5] Martín Abadi, Andrew Birrell, Ilya Mironov, Ted Wobber, and Yinglian Xie. 2013. Global Authentication in an Untrustworthy World. In HotOS.

[6] Nadhem J Al Fardan and Kenneth G Paterson. 2013. Lucky thirteen: Breaking the TLS and DTLS record protocols. In Security and Privacy (SP), 2013 IEEE Symposium on. IEEE, 526–540.

[7] Bernhard Amann, Matthias Vallentin, Seth Hall, and Robin Sommer. 2012. Extracting certificates from live traffic: A near real-time SSL notary service. Technical Report TR-12-014 (2012).

[8] Daniel Anderson. 2012. Splinternet Behind the Great Firewall of China. Queue 10, 11 (2012), 40.

[9] Nimrod Aviram, Sebastian Schinzel, Juraj Somorovsky, Nadia Heninger, Maik Dankel, Jens Steube, Luke Valenta, David Adrian, J Alex Halderman, Viktor Dukhovni, et al. 2016. DROWN: Breaking TLS Using SSLv2. In USENIX Security.