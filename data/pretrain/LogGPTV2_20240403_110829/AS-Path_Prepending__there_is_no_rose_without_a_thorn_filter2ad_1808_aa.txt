# AS-Path Prepending: There is No Rose Without a Thorn

## Authors
- Pedro de B. Marcos
- Lars Prehn
- Lucas Leal
- Alberto Dainotti
- Anja Feldmann
- Marinho P. Barcellos

## Abstract
Inbound traffic engineering (ITE) is crucial for Autonomous Systems (ASes) to optimize revenue and minimize congestion. AS Path Prepending (ASPP) is a widely used ITE technique that involves inflating the BGP AS path. This simple method can influence routing decisions, as the AS path length is the second tie-breaker in BGP best path selection. Despite its simplicity, opinions on ASPP's effectiveness and security implications are mixed. Our study reveals that over 25% of IPv4 prefixes are prepended by origin ASes. We also find that approximately 6,000 ASes prepend at least one prefix without achieving any ITE goal. Through active measurements, we demonstrate that ASPP's effectiveness depends on the AS's location and the number of available upstreams. Additionally, more than 18% of prepended prefixes contain unnecessary prepends, which amplify existing routing security risks. These findings are validated through interviews with 20 network operators.

## CCS Concepts
- Networks → Network measurement

## ACM Reference Format
Pedro de B. Marcos, Lars Prehn, Lucas Leal, Alberto Dainotti, Anja Feldmann, and Marinho P. Barcellos. 2020. AS-Path Prepending: There is No Rose Without a Thorn. In ACM Internet Measurement Conference (IMC '20), October 27–29, 2020, Virtual Event, USA. ACM, New York, NY, USA, 15 pages. https://doi.org/10.1145/3419394.3423642

**Note:** Both authors, Pedro de B. Marcos and Lars Prehn, have contributed equally to this paper.

## 1. Introduction
Many Internet Autonomous Systems (ASes) receive significantly more traffic than they send, making inbound traffic engineering (ITE) essential. ITE helps ASes manage their incoming traffic based on economic and operational considerations, such as transit costs, latency, packet loss, and capacity. With the increasing options for inter-AS connectivity, including IXPs, PNIs, and peering, ITE has become even more critical.

BGP-enabled ITE techniques include AS-Path Prepending (ASPP), selective or more-specific prefix announcements, BGP communities, and Multi Exit Discriminator (MED) values. ASPP, a straightforward and easy-to-use technique, is often recommended by router vendors. It involves artificially inflating the BGP AS path by inserting duplicate entries of the ASN. While ASPP can steer traffic from one route to another, its effectiveness depends on route propagation and the routing decisions made by other ASes.

Despite its simplicity, opinions on ASPP are mixed. Some appreciate its ease of use and lack of dependency on other ASes, while others question its need, effectiveness, and predictability. Security concerns, such as the potential to amplify routing insecurities and trigger bugs in router software, have also been raised.

Motivated by these mixed views, we investigate the current use of ASPP and address three key questions:
1. **How do ASes use prepending?** We identify and characterize the policies ASes apply when using ASPP.
2. **How effective is prepending?** We evaluate the effectiveness of ASPP from different vantage points and with varying numbers of upstreams.
3. **Does prepending amplify existing routing security risks?** We explore how ASPP can facilitate the spreading of malicious routes.

We use both active and passive measurements, leveraging passively collected routing information from Isolario, RIPE RIS, and RouteViews, and the PEERING testbed for systematic exploration.

### Main Contributions
- **Longitudinal Characterization:** We find that 30% of ASes prepend at least one of their prefixes, resulting in 25% of IPv4 prefixes being prepended.
- **Prepending Policies:** ASes primarily use two distinct prepending sizes, but about 6,000 ASes originate prefixes with a single prepending size, achieving no ITE effect.
- **Effectiveness Analysis:** In scenarios with only two upstreams, ASPP effectiveness is highly dependent on the vantage point. With many upstreams, ASPP shifts traffic from most incoming sources.
- **Security Implications:** Prefixes with three prepends are highly suitable for prefix hijacking, increasing the risk of widespread route leaks or hijacking with no apparent ITE benefit.

We discuss ethical considerations and provide our analysis code for reproducibility.

## 2. Primer on Path Prepending
AS-Path Prepending (ASPP) is an ITE technique where an AS adds its own AS number multiple times (n ≥ 1) before originating or propagating a BGP route, thus artificially increasing the AS-Path length. The first rule in BGP route selection is local preference, followed by the shortest AS path. By inflating the AS Path, an AS can influence the second tie-breaking rule, potentially steering traffic to preferred paths.

### Examples
- **Figure 1a:** AS A announces a prefix P to two neighbors with different prepend sizes, attempting to influence remote ASes to send traffic through AS B.
- **Figure 1b:** ASPP influences AS F's decision, despite a shorter path through AS C.
- **Figure 1c:** ASPP fails to influence AS F, which prefers the shorter path through AS C.

### Types of Prepending
- **Origin-Prepending:** When the AS prepending is the originator.
- **Intermediate-Prepending:** When the AS prepending is not the originator.
- **Remote-Prepending:** When an AS prepends on behalf of another AS using BGP communities or web interfaces.

ASes use ASPP for load balancing, minimizing transit costs, and establishing backup links. Its popularity among operators is due to its ease of use, efficiency in steering traffic, and the limitations of alternative mechanisms.

## 3. Datasets and Data Sanitation
To analyze ASPP utilization, we use publicly available BGP MRT data from Isolario, RIPE RIS, and Route Views. Our datasets include:

- **BGPContinuous:** RIB snapshots and updates from March 1st, 2020, to April 1st, 2020.
- **BGPWeekly:** Data for each Monday between January 1st, 2018, and May 4th, 2020.
- **BGPMonthly:** Data for the 15th day of every month between January 15th, 2010, and April 15th, 2020.

We also use preprocessed RPKI data provided by Chung et al. [18] for the same days as in our BGP datasets.