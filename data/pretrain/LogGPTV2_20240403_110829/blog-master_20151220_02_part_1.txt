## 阿里云ApsaraDB RDS for PostgreSQL 最佳实践 - 2 教你RDS PG的水平分库(plproxy)  
##### [TAG 24](../class/24.md)
### 作者                                                                         
digoal                       
### 日期                         
2015-12-20                         
### 标签                       
PostgreSQL , 阿里云RDS      
----                      
## 背景             
使用pl/proxy 做分布式处理的性能。  
大家可供参考，注意目前plproxy不支持跨库关联，仅仅是函数代理。  
如果要做跨库事务需要结合PostgreSQL的prepared transaction(分布式事务/2PC)来实现，  
如果要做跨库关联，可以用PostgreSQL的外部表，例如在每个节点上都建立其他节点需要关联的表的外部表，这样也可以做关联。  
plproxy支持run on all,any,NR,HASH四种方式。  
接下来我会一一测试 。   
![pic](20151220_02_pic_001.png)  
![pic](20151220_02_pic_002.png)  
部署ECS：  
安装PostgreSQL 9.4.3，略。  
安装plproxy，可参考  
http://blog.163.com/digoal@126/blog/static/1638770402013102242543765/  
http://git.postgresql.org/gitweb/?p=plproxy.git;a=summary  
```  
cd plproxy  
export PATH=/opt/pgsql/bin:$PATH  
gmake  
gmake install  
psql  
create extension plproxy;  
```  
在plproxy代理节点部署数据库密码文件：  
编辑密码文件，免输入密码。(主机名和密码以模糊化，一共有16台RDS)  
```  
# vi ~/.pgpass  
xxxx.pg.rds.aliyuncs.com:3433:*:digoal:xxxx  
xxxx.pg.rds.aliyuncs.com:3433:*:digoal:xxxx  
xxxx.pg.rds.aliyuncs.com:3433:*:digoal:xxxx  
xxxx.pg.rds.aliyuncs.com:3433:*:digoal:xxxx  
xxxx.pg.rds.aliyuncs.com:3433:*:digoal:xxxx  
xxxx.pg.rds.aliyuncs.com:3433:*:digoal:xxxx  
xxxx.pg.rds.aliyuncs.com:3433:*:digoal:xxxx  
xxxx.pg.rds.aliyuncs.com:3433:*:digoal:xxxx  
xxxx.pg.rds.aliyuncs.com:3433:*:digoal:xxxx  
xxxx.pg.rds.aliyuncs.com:3433:*:digoal:xxxx  
xxxx.pg.rds.aliyuncs.com:3433:*:renny:xxxx  
xxxx.pg.rds.aliyuncs.com:3433:*:postgres:xxxx  
xxxx.pg.rds.aliyuncs.com:3433:*:dbnosql:xxxx  
xxxx.pg.rds.aliyuncs.com:3433:*:dbuser:xxxx  
xxxx.pg.rds.aliyuncs.com:3433:*:dbuser:xxxx  
xxxx.pg.rds.aliyuncs.com:3433:*:dbuser:xxxx  
chmod 400 ~/.pgpass  
```  
创建server，用于部署plproxy前期管理远程数据库。  
```  
create extension dblink;  
CREATE SERVER p0 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx1.pg.rds.aliyuncs.com', dbname 'postgres', port '3433');  
CREATE SERVER p1 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx2.pg.rds.aliyuncs.com', dbname 'postgres', port '3433');  
CREATE SERVER p2 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx3.pg.rds.aliyuncs.com', dbname 'postgres', port '3433');  
CREATE SERVER p3 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx4.pg.rds.aliyuncs.com', dbname 'postgres', port '3433');  
CREATE SERVER p4 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx5.pg.rds.aliyuncs.com', dbname 'postgres', port '3433');  
CREATE SERVER p5 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx6.pg.rds.aliyuncs.com', dbname 'postgres', port '3433');  
CREATE SERVER p6 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx7.pg.rds.aliyuncs.com', dbname 'postgres', port '3433');  
CREATE SERVER p7 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx8.pg.rds.aliyuncs.com', dbname 'postgres', port '3433');  
CREATE SERVER p8 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx9.pg.rds.aliyuncs.com', dbname 'postgres', port '3433');  
CREATE SERVER p9 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx10.pg.rds.aliyuncs.com', dbname 'postgres', port '3433');  
CREATE SERVER p10 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx11.pg.rds.aliyuncs.com', dbname 'postgres', port '3433');  
CREATE SERVER p11 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx12.pg.rds.aliyuncs.com', dbname 'postgres', port '3433');  
CREATE SERVER p12 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx13.pg.rds.aliyuncs.com', dbname 'postgres', port '3433');  
CREATE SERVER p13 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx14.pg.rds.aliyuncs.com', dbname 'postgres', port '3433');  
CREATE SERVER p14 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx15.pg.rds.aliyuncs.com', dbname 'postgres', port '3433');  
CREATE SERVER p15 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx16.pg.rds.aliyuncs.com', dbname 'postgres', port '3433');  
```  
创建user mapping  
```  
CREATE USER MAPPING FOR public SERVER p0 OPTIONS (user 'digoal');  
CREATE USER MAPPING FOR public SERVER p1 OPTIONS (user 'digoal');  
CREATE USER MAPPING FOR public SERVER p2 OPTIONS (user 'digoal');  
CREATE USER MAPPING FOR public SERVER p3 OPTIONS (user 'digoal');  
CREATE USER MAPPING FOR public SERVER p4 OPTIONS (user 'digoal');  
CREATE USER MAPPING FOR public SERVER p5 OPTIONS (user 'digoal');  
CREATE USER MAPPING FOR public SERVER p6 OPTIONS (user 'digoal');  
CREATE USER MAPPING FOR public SERVER p7 OPTIONS (user 'digoal');  
CREATE USER MAPPING FOR public SERVER p8 OPTIONS (user 'digoal');  
CREATE USER MAPPING FOR public SERVER p9 OPTIONS (user 'digoal');  
CREATE USER MAPPING FOR public SERVER p10 OPTIONS (user 'renny');  
CREATE USER MAPPING FOR public SERVER p11 OPTIONS (user 'postgres');  
CREATE USER MAPPING FOR public SERVER p12 OPTIONS (user 'dbnosql');  
CREATE USER MAPPING FOR public SERVER p13 OPTIONS (user 'dbuser');  
CREATE USER MAPPING FOR public SERVER p14 OPTIONS (user 'dbuser');  
CREATE USER MAPPING FOR public SERVER p15 OPTIONS (user 'dbuser');  
```  
创建一个不报错的dblink建立函数，方便管理用：  
```  
create or replace function new_dblink_connect(text,text) returns void as $$  
declare  
begin  
  perform dblink_connect($1,$2);  
  exception   
    when SQLSTATE '42710' then  
      return;  
    when others then  
      raise;  
end;  
$$ language plpgsql;  
```  
在16台数据节点分别创建2个数据库，一共32个数据库(db0,db16; db1,db17;, ..... db15,db31;)，将用于演示数据节点扩容。  
```  
do language plpgsql $$  
declare  
begin  
  for i in 0..15 loop  
    perform new_dblink_connect('p'||i||'_conn', 'p'||i);  
    perform dblink_exec('p'||i||'_conn', 'create database db'||i, false);  
    perform dblink_exec('p'||i||'_conn', 'create database db'||(i+16), false);  
    perform dblink_disconnect('p'||i||'_conn');  
  end loop;  
end;  
$$;  
```  
修改server到对应的32个DB。  
```  
alter server p0 options (set dbname 'db0');  
alter server p1 options (set dbname 'db1');  
alter server p2 options (set dbname 'db2');  
alter server p3 options (set dbname 'db3');  
alter server p4 options (set dbname 'db4');  
alter server p5 options (set dbname 'db5');  
alter server p6 options (set dbname 'db6');  
alter server p7 options (set dbname 'db7');  
alter server p8 options (set dbname 'db8');  
alter server p9 options (set dbname 'db9');  
alter server p10 options (set dbname 'db10');  
alter server p11 options (set dbname 'db11');  
alter server p12 options (set dbname 'db12');  
alter server p13 options (set dbname 'db13');  
alter server p14 options (set dbname 'db14');  
alter server p15 options (set dbname 'db15');  
```  
新建剩余的DB。每个+16得到新的DB号。  
```  
CREATE SERVER p16 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx1.pg.rds.aliyuncs.com', dbname 'db16', port '3433');  
CREATE SERVER p17 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx2.pg.rds.aliyuncs.com', dbname 'db17', port '3433');  
CREATE SERVER p18 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx3.pg.rds.aliyuncs.com', dbname 'db18', port '3433');  
CREATE SERVER p19 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx4.pg.rds.aliyuncs.com', dbname 'db19', port '3433');  
CREATE SERVER p20 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx5.pg.rds.aliyuncs.com', dbname 'db20', port '3433');  
CREATE SERVER p21 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx6.pg.rds.aliyuncs.com', dbname 'db21', port '3433');  
CREATE SERVER p22 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx7.pg.rds.aliyuncs.com', dbname 'db22', port '3433');  
CREATE SERVER p23 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx8.pg.rds.aliyuncs.com', dbname 'db23', port '3433');  
CREATE SERVER p24 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx9.pg.rds.aliyuncs.com', dbname 'db24', port '3433');  
CREATE SERVER p25 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx10.pg.rds.aliyuncs.com', dbname 'db25', port '3433');  
CREATE SERVER p26 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx11.pg.rds.aliyuncs.com', dbname 'db26', port '3433');  
CREATE SERVER p27 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx12.pg.rds.aliyuncs.com', dbname 'db27', port '3433');  
CREATE SERVER p28 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx13.pg.rds.aliyuncs.com', dbname 'db28', port '3433');  
CREATE SERVER p29 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx14.pg.rds.aliyuncs.com', dbname 'db29', port '3433');  
CREATE SERVER p30 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx15.pg.rds.aliyuncs.com', dbname 'db30', port '3433');  
CREATE SERVER p31 FOREIGN DATA WRAPPER dblink_fdw OPTIONS (host 'xxxx16.pg.rds.aliyuncs.com', dbname 'db31', port '3433');  
```  
创建user mapping  
```  
CREATE USER MAPPING FOR public SERVER p16 OPTIONS (user 'digoal');  
CREATE USER MAPPING FOR public SERVER p17 OPTIONS (user 'digoal');  
CREATE USER MAPPING FOR public SERVER p18 OPTIONS (user 'digoal');  
CREATE USER MAPPING FOR public SERVER p19 OPTIONS (user 'digoal');  
CREATE USER MAPPING FOR public SERVER p20 OPTIONS (user 'digoal');  
CREATE USER MAPPING FOR public SERVER p21 OPTIONS (user 'digoal');  
CREATE USER MAPPING FOR public SERVER p22 OPTIONS (user 'digoal');  
CREATE USER MAPPING FOR public SERVER p23 OPTIONS (user 'digoal');  
CREATE USER MAPPING FOR public SERVER p24 OPTIONS (user 'digoal');  
CREATE USER MAPPING FOR public SERVER p25 OPTIONS (user 'digoal');  
CREATE USER MAPPING FOR public SERVER p26 OPTIONS (user 'renny');  
CREATE USER MAPPING FOR public SERVER p27 OPTIONS (user 'postgres');  
CREATE USER MAPPING FOR public SERVER p28 OPTIONS (user 'dbnosql');  
CREATE USER MAPPING FOR public SERVER p29 OPTIONS (user 'dbuser');  
CREATE USER MAPPING FOR public SERVER p30 OPTIONS (user 'dbuser');  
CREATE USER MAPPING FOR public SERVER p31 OPTIONS (user 'dbuser');  
```  
增加一个application_name的参数，用于分辨节点：  
```  
alter server p0 options (add application_name '0');  
alter server p1 options (add application_name '1');  
alter server p2 options (add application_name '2');  
alter server p3 options (add application_name '3');  
alter server p4 options (add application_name '4');  
alter server p5 options (add application_name '5');  
alter server p6 options (add application_name '6');  
alter server p7 options (add application_name '7');  
alter server p8 options (add application_name '8');  
alter server p9 options (add application_name '9');  
alter server p10 options (add application_name '10');  
alter server p11 options (add application_name '11');  
alter server p12 options (add application_name '12');  
alter server p13 options (add application_name '13');  
alter server p14 options (add application_name '14');  
alter server p15 options (add application_name '15');  
alter server p16 options (add application_name '16');  
alter server p17 options (add application_name '17');  
alter server p18 options (add application_name '18');  
alter server p19 options (add application_name '19');  
alter server p20 options (add application_name '20');  
alter server p21 options (add application_name '21');  
alter server p22 options (add application_name '22');  
alter server p23 options (add application_name '23');  
alter server p24 options (add application_name '24');  
alter server p25 options (add application_name '25');  
alter server p26 options (add application_name '26');  
alter server p27 options (add application_name '27');  
alter server p28 options (add application_name '28');  
alter server p29 options (add application_name '29');  
alter server p30 options (add application_name '30');  
alter server p31 options (add application_name '31');  
```  
在16台数据节点的32个数据库，每个RDS跑两个数据库。(db0,db16; db1,db17;, ..... db15,db31;)：  
1\. 创建schema: digoal；  
2\. 创建动态函数，用于plproxy测试动态查询。  
```  
do language plpgsql $$  
declare  
  v_sql text;  
begin  
  v_sql := 'CREATE OR REPLACE FUNCTION digoal.dy(sql text)  
     RETURNS SETOF record  
     LANGUAGE plpgsql  
     STRICT  
    AS $function$  
      declare  
        rec record;  