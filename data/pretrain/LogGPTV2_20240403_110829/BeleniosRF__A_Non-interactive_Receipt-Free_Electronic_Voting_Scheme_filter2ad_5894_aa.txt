title:BeleniosRF: A Non-interactive Receipt-Free Electronic Voting Scheme
author:Pyrros Chaidos and
V&apos;eronique Cortier and
Georg Fuchsbauer and
David Galindo
A Non-interactive Receipt-Free Electronic Voting Scheme
BeleniosRF:
Pyrros Chaidos
University College London
Gower St, London WC1E 6BT, UK
PI:EMAIL
Véronique Cortier
LORIA, CNRS & INRIA & Université de Lorraine
54500 Vandœuvre-lès-Nancy, France
PI:EMAIL
Georg Fuchsbauer
Inria, ENS, CNRS, PSL Research University
45, rue d’Ulm, 75005 Paris, France
PI:EMAIL
David Galindo
University of Birmingham
Edgbaston, Birmingham B15 2TT, UK
PI:EMAIL
ABSTRACT
We propose a new voting scheme, BeleniosRF, that oﬀers both
receipt-freeness and end-to-end veriﬁability. It is receipt-free
in a strong sense, meaning that even dishonest voters cannot
prove how they voted. We provide a game-based deﬁnition
of receipt-freeness for voting protocols with non-interactive
ballot casting, which we name strong receipt-freeness (sRF).
To our knowledge, sRF is the ﬁrst game-based deﬁnition
of receipt-freeness in the literature, and it has the merit
of being particularly concise and simple. Built upon the
Helios protocol, BeleniosRF inherits its simplicity and does
not require any anti-coercion strategy from the voters. We
implement BeleniosRF and show its feasibility on a number
of platforms, including desktop computers and smartphones.
1.
INTRODUCTION
Electronic voting protocols should achieve two antagonistic
security goals: privacy and veriﬁability. Additionally, they
must be practical, from a usability, operational, and eﬃciency
point of view. Privacy can be expressed via several, increas-
ingly demanding security properties.
• Basic ballot privacy guarantees that no one can learn
how a voter voted.
• Receipt-freeness ensures that a voter cannot prove to
anyone how she voted. While privacy protects honest
voters, receipt-freeness aims at protecting vote privacy
even when voters willingly interact with an attacker.
• Coercion-resistance should allow an honest voter to
cast her vote even if she is, during some time, fully
under the control of an attacker. Coercion-resistance
typically requires revoting.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
CCS’16, October 24 - 28, 2016, Vienna, Austria
c(cid:13) 2016 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ISBN 978-1-4503-4139-4/16/10. . . $15.00
DOI: http://dx.doi.org/10.1145/2976749.2978337
Conversely, veriﬁability ensures that voters’ ballots are in-
cluded in the ballot box (individual veriﬁability), that the
result corresponds to the content of the ballot box (universal
veriﬁability) and that ballots come only from voters entitled
to vote (eligibility veriﬁability).
Helios [3, 4] is a scheme that “only” achieves privacy and
veriﬁability and is based on a voting system by Cramer,
Gennaro and Schoenmakers [25] with modiﬁcations proposed
by Benaloh [7]. It has been used in several elections such as
that of the president of UC Louvain in Belgium, and of the
Board of Directors of the IACR since 2011 [1]. As emphasized
by its authors, Helios should only be used in low-coercion
environments. Indeed, a voter may reveal the randomness
used to compute her ballot; one can then re-encrypt the
claimed vote and check if the encryption is contained in the
public bulletin board. Helios is thus not receipt-free.
To our knowledge, Civitas [21, 37] is the only scheme that
achieves both veriﬁability and coercion-resistance, without
requiring a great deal of interaction between the ballot box or
the election authorities and the voter (such as [8, 20]). While
the scheme is a foundational work, it seems diﬃcult to use
it in large-scale elections mainly for two reasons. First, the
tally phase requires O(n2) operations where n is the number
of received ballots, which opens the way to denial-of-service
attacks. Second, to achieve coercion-resistance, a voter should
be able to adopt an anti-coercion strategy (in Civitas, a voter
has to lie about her true credential) and then later revote
for her true choice once she is freed from the attacker. We
believe that this scenario is unrealistic in many cases, as it
requires cryptographic skills and a heavy infrastructure to
realize an untappable channel (e.g. in-person registration).
It is also worth noticing that in most countries revoting
is not allowed, as for example in Australia, France, Spain,
Switzerland and the United Kingdom. The only exceptions we
are aware of are Estonia and the Internet voting pilots for the
parliamentary elections in 2011 and 2013 in Norway. While
this way of thinking might be a cultural aspect inherited
from traditional paper ballot systems, it is foreseeable that
it will take time before countries change their electoral rules
in order to adopt a revote policy.
1.1 Our Contributions
Building upon a recent variant of Helios, called Belenios
[22, 30], and a cryptographic primitive called signatures on
randomizable ciphertexts [12], we propose a receipt-free ver-
sion of Helios, which we call BeleniosRF. In our scheme a
voter cannot prove how she voted, even if she is provided
with all the ballot material by the coercer. Interestingly, our
scheme does not demand any strategy of the voter; in partic-
ular, it does not require the active participation of a voter
to deceive a coercer that is asking for a receipt. For example,
a voter does not need to lie or produce fake credentials as in
Civitas, she simply has no way to prove how she voted. This
represents a huge improvement in usability from the voter’s
point of view: all that is required of the voter is to vote.
We show that our scheme BeleniosRF is receipt-free in
a strong sense, meaning that even a dishonest voter using
a voting client that has been tampered with cannot prove
how she voted. We formalize this property, called strong
receipt-freeness (sRF), via a game-based deﬁnition building
on the privacy deﬁnition recently proposed by Bernhard et
al. [9]. We view this formal deﬁnition of receipt-freeness, which
applies to non-interactive ballot casting protocols, as the ﬁrst
contribution of this work. We call it strong receipt-freeness
to emphasize that in non-interactive protocols an attacker
has less room to build a receipt. Indeed, in the absence of
interaction the adversary does not obtain information from
the voting server apart from what is displayed on the bulletin
board; hence any receipt must be built by the adversary
locally and before submitting the ballot.
We claim sRF is the ﬁrst game-based receipt-freeness deﬁni-
tion in the literature accounting for a voter that is corrupted
during the voting phase. Additionally, sRF has the merit of
being simple and concise, potentially allowing for simpler
proofs. In doing so we give a new formulation for the receipt-
freeness deﬁnition by Benaloh and Tuinstra [8] and highlight
that receipt-freeness can be achieved without asking the vot-
ers to vote several times and cancel previously submitted
ballots, and without requiring an untappable channel. All we
need to assume is that the attacker is not permanently eaves-
dropping the communication between the voting server and
the voter, an assumption made by all previous constructions
of receipt-free or coercion-resistant voting schemes.
A key ingredient of BeleniosRF is a randomization service, a
role that we assume is played by the voting server, but which
could be played by a diﬀerent server. The randomization
service is in charge of re-randomizing the ballot cast by a
voter. BeleniosRF’s receipt-freeness then relies on the fact
that the randomness contained in the ballot displayed in
the bulletin board is not under the control of the voter.
Both the voter and the randomization service contribute
to the randomness of the voter’s ballot as displayed on the
bulletin board. In fact, in light of the impossibility result
of [19], the existence of a randomization agent is assumed
in most constructions that claim to be receipt-free. Here
however, we do not rely on letting voters vote multiple times
or on the existence of a trusted token for each voter (such as
e.g. [20, 34, 35, 43]).
The foremost challenge in achieving receipt-freeness non-
interactively and via a randomization service is to prevent
the latter from changing the voter’s intent. The only existing
non-interactive proposal [12] claiming receipt-freeness uses a
powerful cryptographic primitive called signatures on ran-
domizable ciphertexts. It consists of a signature scheme and a
public-key encryption scheme that is randomizable (that is,
given a ciphertext, anyone can create a fresh ciphertext of the
same plaintext—without knowing it). The primitive provides
an additional functionality: given a signature on a ciphertext,
anyone can randomize the ciphertext and adapt the signature
to the new ciphertext, that is, produce a signature that is
valid on the new ciphertext—and all that knowing neither the
decryption key nor the signing key nor the plaintext. On the
other hand, unforgeability guarantees that it is infeasible to
compute a signature on a ciphertext that encrypts a message
of which no encryption has been signed.
Alas, Blazy et al. [12] did not provide a receipt-freeness
deﬁnition nor a proof. By exhibiting a ballot-copying at-
tack adapted from [24], we demonstrate that their scheme
is not receipt-free, worse, it is not even ballot-private. Our
scheme ﬁxes the Blazy et al. construction by binding the ci-
phertexts to voters, while still inheriting the randomizability
from Groth-Sahai non-interactive proofs [32].
We start with giving a new instantiation of signatures on
randomizable ciphertexts, which we show yields an RCCA-
secure public-key encryption scheme [16], from which we build
a non-interactive1 receipt-free e-voting scheme as follows:
• As in Belenios, each voter is provided with a signature
key pair, in addition to authentication means to the
ballot box (typically a login and password).
• Each voter encrypts and signs their ballot and includes
a proof of knowledge to prevent ballot malleability.
• Upon receiving a ballot, the server re-randomizes the
ballot and adapts the corresponding signature and proof
before publishing it.
Receipt-freeness comes from the fact that a voter no longer
has control over, nor knowledge of, the randomness used to
form the ﬁnal ballot stored in the ballot box. On the other
hand, even after the voting server re-randomizes the ballot
cast by the voter’s voting device, the voter can still verify
that her legitimate ballot is present, as the re-randomized
ciphertext comes with a signature that is valid under the
voter’s veriﬁcation key. By unforgeability of the signature
primitive, the vote cannot have been altered by the ballot
box, which we show implies veriﬁability.
Our ﬁnal contribution consists of assessing the feasibility of
BeleniosRF; for this purpose we implemented and measured
the eﬃciency of a Javascript voting client (see Section 5).
1.2 Related Work
Our deﬁnition requires that an adversary cannot distin-
guish whether a voter votes for either a or b, even if the
attacker provides the voter in advance with all the crypto-
graphic material (such as randomness to be used to cast
the ballot). Interestingly, this deﬁnition does not require the
voter to follow a “strategy” to fool the coercer.
The early deﬁnitions of receipt-freeness [8, 43] introduced
the idea that an attacker should not be able to distinguish be-
tween a real transcript and a fake one, but their descriptions
are rather informal. A weaker deﬁnition of receipt-freeness,
proposed in [15, 38], lets the attacker only interact with the
voter after the election (in particular, the attacker cannot
control the randomness of the voter’s device). A simulation-
based deﬁnition for receipt-freeness (UC-RF) was given in [42].
It assumes however that the voters adopt an “anti-coercion
strategy” and is therefore closer to coercion-resistance as de-
ﬁned in [37], even if it does not cover, for instance, abstention
1After successful authentication between the voter and the
ballot box, ballot casting is non-interactive.
attacks. Since BeleniosRF does not require any anti-coercion
strategy from the voters, and game-based security deﬁnitions
are known to be easier to work with, we opted not to use
UC-RF to analyze the receipt-freeness of our new protocol.
The coercion-resistance and receipt-freeness deﬁnitions in [40]
also assume a strategy from the voter. Our deﬁnition can be
seen as a formalization of one of the other possible strategies
sketched in the paper.
Similarly, the symbolic deﬁnition of receipt-freeness in [26]
also requires the voter to adopt a strategy to fool the ad-
versary. Other deﬁnitions in symbolic models aim at charac-
terizing the notion of a receipt [14, 33, 36] but (as usual in
symbolic models) they are much more abstract than standard
computational models.
Previous receipt-free schemes. The scheme by Kiayias
et al. [38] only achieves receipt-freeness for honest voters, as
discussed above. Other well-known and deployed schemes
include Prˆet-`a-voter [44] and Scantegrity [18]. These sys-
tems however are designed for elections with physical voting
booths. The system used in Estonia [46] and the one de-
ployed in Norway [5, 29] might possibly satisfy some level of
receipt-freeness, as the corresponding ballot boxes are not
publicly available. But because of this, they do not achieve
universal veriﬁability (in contrast to BeleniosRF). Kulyk et
al. [39] propose an extension of Helios where voters may later
cancel their vote, still being indistinguishable from null votes
submitted by the crowd. In addition to being diﬃcult to
deploy in practice, this scheme strongly relies on revoting.
Hirt’s scheme [34] heavily depends on the existence of un-
tappable channels. Selene [45] proposes an enhancement for
receipt-free schemes, applicable to BeleniosRF, to ease the
veriﬁcation step made by voters through tracking numbers.
BeleniosRF can be seen as realizing receipt-freeness under
the assumption that the voting server, which is in charge of
running the ballot box, can be trusted to re-randomize ballots
and not reveal the randomness used for that procedure. In
contrast, Helios [41] and [38] achieve receipt-freeness under