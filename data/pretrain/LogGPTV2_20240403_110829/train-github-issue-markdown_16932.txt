### System info
  * Playwright Version: [v1.34.3]
  * Operating System: [macOS 13.2.1]
  * Browser: [Chromium, Firefox]
### Source code
  * I provided exact source code that allows reproducing the issue locally.
When I use newContext() and post() api to send multipart form which includes a
file, I get the error `apiRequestContext.post: Unexpected buffer type of
'data.file'`.
I have this fixture:
    import {  test as base, APIRequestContext, request } from '@playwright/test';
    export const test = base.extend({
      apiRequest: async ({apiBaseURL}, use) => {
        const apiRequestContext = await request.newContext({
          baseURL: process.env.REACT_APP_API_URL
        })
        await use(apiRequestContext);
        await apiRequestContext.dispose();
      },
      post: async ({ apiRequest }, use) => {
        await use(async ({ url, options, context }) => {
          if (options && options.data) {
            options.data = snakecaseKeys(options.data, { exclude: options.exclude || [] });
          }
          if (options && options.multipart) {
            options.multipart = snakecaseKeys(options.multipart, { exclude: options.exclude || [] });
          }
          const response = await apiRequest.post(url, options);
          return camelcaseKeys(await response.json(), { deep: true });
        });
      },
    });
Also, second fixture which uses `post` that relies on `newContext()` (this is
not working, getting error from the title):
    import { faker } from '@faker-js/faker';
    import { tests as base } from '@fixtures/util/util.fixture.ts';
    import snakecaseKeys from 'snakecase-keys';
    export const fileTest = base.extend({
      submitFile: async ({ post }, use) => {
        await use(async (data, token) => {
          const { orderId } = data;
          const file = {
            name: 'file.pdf',
            mimeType: 'application/pdf',
            buffer: Buffer.from('file content'),
          };
          const payload = snakecaseKeys({
            orderId
          });
          return post(
            {
              url: someUrl,
              options: {
                multipart: {
                  ...payload,
                  file,
                },
                headers: {
                  'api-token': token,
                },
                exclude: ['mimeType']
              },
            }
          );
        });
      },
    });
The same fixture is working if I use `context` to call `post` (I would prefer
to use `newContext()` since I don't have to repeat baseUrl every time):
    import { faker } from '@faker-js/faker';
    import { tests as base } from '@fixtures/util/util.fixture.ts';
    import snakecaseKeys from 'snakecase-keys';
    export const fileTest = base.extend({
      submitFile: async ({ context }, use) => {
        await use(async (data, token) => {
          const { orderId } = data;
          const file = {
            name: 'file.pdf',
            mimeType: 'application/pdf',
            buffer: Buffer.from('file content'),
          };
          const payload = snakecaseKeys({
            orderId
          });
          return context.request.post(
              url: process.env.REACT_APP_API_URL + someUrl,
              options: {
                multipart: {
                  ...payload,
                  file,
                },
                headers: {
                  'api-token': token,
                },
              },
          );
        });
      },
    });
So, it seems newContext() have some issues with multipart form and Buffer.
**Expected**
Expected multipart form data to be submitted when using `newContext()`
**Actual**
Getting the error `Error: apiRequestContext.post: Unexpected buffer type of
'data.file'` on the line which points to `post` method in my first fixture.