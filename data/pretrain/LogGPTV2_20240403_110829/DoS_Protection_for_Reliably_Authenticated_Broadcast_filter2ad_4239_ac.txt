is used to process a TG.
6 Protocol Analysis
A formal analysis of the BAS protocol is presented in
Appendix B. We present here a brief overview of how
the BAS protocol defends against various attacks. The
three attacks of primary interest are signature (cid:176)ooding,
replay, and hash (cid:176)ooding.
Signature Flood Signature (cid:176)ood attacks are eﬁec-
tively handled by the selective sequential veriﬂcation
feature of the protocol. For instance,
if the sender
sends 50 copies of each signature packet, the receiver
can sample each candidate signature packet with a 10%
probability and still recover a valid signature packet
with a 99.5% conﬂdence. On the other hand, the 10%
sampling rate cuts down the signature (cid:176)ood by a factor
of 10.
Replay Attack A successful replay attack occurs
when in the acquistion phase, the receiver chooses a
valid old signature packet that is being replayed by
the adversary. BAS protects against this by buﬁer-
ing all signature packets seen over a window of several
transmission groups. A simple analysis shows that by
sampling from a suitably large buﬁer, we can ensure
that the receiver obtains at least one current signa-
ture packet with high probability. Since the acquistion
phase selects the most recent valid signature packet,
the probability of a replay attack is negligible. Once
the acquisition phase succeeds in choosing a current
signature packet, a replay attack does not eﬁect the
stream processing phase. We note here that only a
coarse synchronization is needed between the clocks of
the sender and the receiver in order to choose the most
recent signature packet.
Hash Flood If the adversary attack rate is so high
that we cannot perform even hash computations of all
incoming adversary and valid packets, then we essen-
tially drop data packets (the ones that could not be
authenticated). It is not di–cult to see that an adver-
sary targeting hash computation load at the receiver
will be more eﬁective by focusing on the hash parity
stream than data stream. Each valid data packet for
which receiver is unable to compute a hash due to the
computational overload, causes a loss of a single data
packet. In contrast, each transmission group for which
we are unable to compute hashes for enough packets
in the hash parity stream, will cause us to lose all Nd
data packets in the corresponding transmission group.
Other Attacks Other attacks of interest include: in-
tegrity attacks on the data or HP stream, attacks on
key distribution, and attacks on time stamps. Let us
ﬂrst consider each of these in turn.
If an adversary
introduces false (non-replay) packets into the data or
HP stream, then their hashes will not coincide with
the ones signed by the signature packets. An adver-
sary who sends a large number of such false packets
will have them discarded as quickly as their hashes can
be computed. The BAS protocol uses public keys so
there is no session key distribution protocol to attack.
Attacks on PKI represent the same risk for other pro-
tocols that they do for BAS. BAS uses a very coarse
time requirement, on the order of hours, so attacks on
time stamps cannot exploit ﬂne errors.
7 Implementation
We have implemented the BAS protocol based on the
Real-time Transport Protocol [23]. RTP provides a 12
byte header that includes a 16 bit sequence number, a
timestamp, and other information such as a synchro-
nization source identiﬂer. The BAS protocol exploits
the sequence numbers to correlate three RTP streams.
The ﬂrst of these, the data stream, is an RTP stream
of any kind provided by an application-level protocol.
BAS associates two additional RTP streams to this
one, namely the HP and signature streams. A given
collection of data packets will determine corresponding
hash, parity, and signature packets; this associated col-
lection of data, hash, parity and signature packets is a
Transmission Group (TG). The nature of a transmis-
sion group depends on the rate of at which the data
will be sent and the anticipated reliability of its chan-
nel. We developed design parameters for two rates,
10Mbps and 100Mbps, and three levels of reliability
re(cid:176)ecting average losses of 5%, 20% and 40%. The pa-
rameters are predicated on the assumptions that the
receiver should be able to verify the packets it receives
within 2 seconds over a low speed channel (10Mbps)
and 1 second over a high speed channel (100Mbps) with
a conﬂdence of 99%. For a given rate and reliability,
these assumptions yield a choice of the number of data
packets k in a transmission group, the number of hash
packets needed to hold their hashes, and a number of
parity packets ‘ needed to provide su–cient reliability
to the hash stream. Table 3 provides reliability param-
eters used in our implementation. On a 10Mbps link
we use 11 hash packets: for loss rates of 5%, 20%, and
40% we use 5, 11, and 22 parity packets respectively.
On a 100Mbps link we use 57 hash packets:
for loss
rates of 5%, 20%, and 40% we use 10, 30, and 66 par-
ity packets respectively. The size of the transmission
group is the number of data packets assuming 144 for
each hash packet plus the number of hash and par-
ity packets plus the number of signature packets. For
10Mbps we send 20 signature packets and for 100Mbps
we send 200. A TG for 10/5 (10Mbps and 5% loss)
has 1620 packets, including 20 signature packets, while
a TG for 100/5 has 8475 packets, including 200 signa-
ture packets. These choices assume that packets can
contain up to 1500 bytes of data. Nothing about the
BAS algorithm fundamentally relies on packets of 1500
bytes, but we would use diﬁerent parameters for other
sizes. For a hash we use the ﬂrst 10 (of 20) bytes in a
SHA hash [8].
The number of signature packets to be sent is de-
termined by the need to ensure that the receiver can
ﬂnd a valid signature packet within the speciﬂed veri-
ﬂcation latency assuming that an attacker is given the
same capacity as the sender. Signatures use 1024 bit
RSA with an exponent of 17. Selective sequential veri-
ﬂcation uses a veriﬂcation frequency parameter of 25%
for 10Mbps and 2.5% for 100Mbps.
BAS relies on the use of sequence numbers to de-
termine transmission groups from the three streams
of packets. We assume that all packets are given IP,
UDP, and RTP headers as illustrated in Figure 6(a).
The sizes of headers and available payload are given
Up to 1460
Payload
1440
144 Hashes
1456
FEC Parity Data
20
IP
8
12
UDP
RTP
2
SN
2
Rng
(a)
(b)
(c)
(d)
40
HLH
40
HLH
40
HLH
128
Sig
4
SN
2
2
4
HRng
PRng
Time
Variable
Hashes
Variable
Pad
Figure 6: Packet Formats
in bytes in the ﬂgure. Hash packets are illustrated in
Figure 6(b). In this and other cases in the ﬂgure, HLH
refers to the IP, UDP, and RTP headers. Following rec-
ommendations in the RTP standard, the HL and sig-
nature streams use distinct UDP ports to distinguish
them from each other and the data stream. In particu-
lar, the three streams have distinct sequence numbers.
The SN ﬂeld of each hash packet is the ﬂrst sequence
number from the data stream for which a hash appears
in the hash packet payload, and the range indicates
the total number of data packets whose hashes are in-
cluded. This number is generally 144 (the maximum
that will ﬂt), but could be smaller. The hash of a data
packet applies to its RTP header and payload but not
to its IP and UDP headers. Parity packets are illus-
trated in Figure 6(c). Parity packets are created from
applying a systematic Reed Solomon code to the RTP
and payload portions of the hash packets from their
transmission group. These packets have their own RTP
headers, but the parity information does not recover
these or the IP and UDP headers of hash packets in the
transmission group. It also does not allow the recovery
of any lost data packets. Signature packets are illus-
trated in Figure 6(d). The signature is applied to the
truncated hash of the signiﬂcant ﬂelds in the packet fol-
lowing the signature. These include the sequence num-
ber ﬂeld, SN, which is the RTP sequence number of the
ﬂrst hash packet in its group, the HRng ﬂeld, which is
the value of k, the PRng ﬂeld, which is the value of
l, a 32 bit time based on the Network Time Protocol
(NTP), and the collection of truncated hashes of the
HL stream packets in the transmission group. These
hashes cover all of the data in these packets except for
the IP and UDP headers. Note that only one signature
is required for each transmission group, no matter how
many signature packets are used.
The time stamp is used to avoid replay attacks based
on old sequence numbers. With 16 bit sequence num-
bers there may be some wrap-around in the signature
stream, but this will very slow, on the order of many
hours. The receiver checks that the time stamp is ac-
curate to within 20 minutes to prevent replays. We
could have used the time stamp in the RTP header,
but this complicates interactions with RTP since the
implementation uses the same signature for all of the
signature packets in a transmission group whereas RTP
will assign them all distinct time stamps.
8 Experiments
We now present an experimental evaluation of the BAS
protocol for various settings of rate, loss and attack.
8.1 Setup
We assume the existence of a DoS attacker with ac-
cess to the various levels of bandwidth. The interest-
ing independent variables are the following: sender rate
and latency; loss rate; average burst length; attacker
rate. Our approach ﬂxes a target latency; the proto-
col is then designed for various bandwidth and relia-
bility characteristics of the channel. The interesting
dependent variables are: sender throughput; receiver
throughput; bandwidth overhead; authentication loss.
The sender rate is the number of megabits of data pack-
ets that can be processed in one second; processing
consists of producing the necessary hash, parity, and
signature packets for the data packets. The receiver
rate is the rate in megabits per second at with which
valid data packets can be recovered from a mixture of
packets originating from the sender and an attacker.
The bandwidth overhead is the percentage of band-
width devoted to hash, parity, and signature packets.
The authentication loss is the percentage of data pack-
ets received by the receiver that cannot be veriﬂed by
the receiver due to the loss or reordering of hash, sig-
nature, and parity packets.
To carry out an experiment for a sender we start with
a collection of data and simply generate the necessary
hash, signature, and parity packets. For a receiver, we
start with the stream produced by a valid sender and
apply a loss model to remove a subset of the stream.
We then insert DoS packets randomly into the resulting
stream at a ratio determined by the attack factor. DoS
packets are assumed to take advantage of an informed
attack, so, for instance, they assign sequence numbers
that the receiver is expecting to see from the sender.
Our experiments are for DoS attacks based on signature
(cid:176)ooding only. In particular, no other kinds of packets
are sent by an adversary. The aim is to measure ro-
bustness against signature (cid:176)oods even at levels where
the adversary could be eﬁective by attacking another
limit. For instance, a receiver can perform hashes on
about 77,000 packets each second so a factor 10 attack
on a 100Mbps link would overwhelm this capacity if
it forced the receiver to perform hashes on all of the
packets it receives.
Our throughput numbers are based on the average
of three runs for 32 transmission groups. The authen-
tication loss numbers are based on 15 runs over 32
transmission groups. These were done on a 2.4GHz
PC with enough memory to avoid using the disk and
Redhat Linux 7.3 using cryptographic operations from
OpenSSL 0.9.6.
8.2 Results
We begin with a collection of ﬂgures derived from a sce-
nario that illustrates the basic measurements we con-
sidered. Assume we are given a sender that sends pack-
ets at a rate of 10Mbps and a receiver that gets them
over a channel with a 20% average loss that occurs
i
s
e
r
u
t
a
n
g
s
e
k
a
f
f
o
o
n
/
G
T
c
e
s
1
4
7
10
13
16
19
22
25
28
31
34
TGs x 64
9000
8000
7000
6000
5000
4000
3000
2000
1000
0
0.12
0.1
0.08
0.06
0.04
0.02
0
1
4
7
10
13
16
19
22
25
28
31
34
TGs x 64
e
t
a
r
s
s
o
l
h
t
u
a
6.00%
5.00%
4.00%
3.00%
2.00%
1.00%
0.00%
1
4
7
10
13
16