title:Improving Security Visualization with Exposure Map Filtering
author:Mansour Alsaleh and
David Barrera and
Paul C. van Oorschot
2008 Annual Computer Security Applications Conference
2008 Annual Computer Security Applications Conference
Improving Security Visualization with Exposure Map Filtering
Mansour Alsaleh, David Barrera, P.C. van Oorschot ∗
School of Computer Science, Carleton University, Canada
{malsaleh,dbarrera,paulv}@scs.carleton.ca
Abstract
Graphical analysis of network trafﬁc ﬂows helps security
analysts detect patterns or behaviors that would not be ob-
vious in a text-based environment. The growing volume of
network data generated and captured makes it increasingly
difﬁcult to detect increasingly sophisticated reconnaissance
and stealthy network attacks. We propose a network ﬂow
ﬁltering mechanism that leverages the exposure maps tech-
nique of Whyte et al. (2007), reducing the trafﬁc for the vi-
sualization process according to the network services being
offered. This allows focus to be limited to selected subsets
of the network trafﬁc, for example what might be catego-
rized (correctly or otherwise) as the unexpected or poten-
tially malicious portion. In particular, we use this technique
to ﬁlter out trafﬁc from sources that have not gained knowl-
edge from the network in question. We evaluate the beneﬁts
of our technique on different visualizations of network ﬂows.
Our analysis shows a signiﬁcant decrease in the volume of
network trafﬁc that is to be visualized, resulting in visible
patterns and insights not previously apparent.
1 Introduction
Network security event monitoring is a time consum-
ing and complicated process. Network security analysts
are overwhelmed by massive amounts of audit log data that
ideally would be analyzed for possible threats or malicious
behavior. Different network-based and host-based security
applications generate different types of textual logs. A log
entry may indicate a prevention action taken by the monitor-
ing application (e.g. blocking an attempt to access a closed
port by a ﬁrewall) or an alert of possible malicious behavior
(e.g. a worm signature detected by an intrusion detection
system). Although some advanced network security tools
can provide high-level overviews and reports, network se-
∗Version: Sept. 9, 2008. Authors listed in alphabetical order. The third
author acknowledges NSERC funding under a Discovery Grant and as
Canada Research Chair in Network and Software Security. Partial fund-
ing from NSERC ISSNet is also acknowledged.
curity analysts often need to check the detailed logs in or-
der to investigate a speciﬁc intrusion event. This time con-
suming process may fail to notice potential security threats.
Difﬁculty in correlating different events within one or more
log ﬁles and intentionally omitting from analysis log ﬁles
thought to be less likely to carry important information add
to the problem.
The use of visualization with network security data has
continued to gain interest. Visual representation of network
data, as opposed to textual representation, can help in an-
alyzing a vast amount of data more quickly [4].
It takes
humans much less time to recognize speciﬁc information or
patterns in a picture than to detect the same in text. Humans
are faster than computers in identifying some complex pat-
terns and objects [17], and are able to identify new patterns
never seen before. Most existing visualization tools pro-
vide a variety of representations of raw network data. In
visual representations for mid- and large-size networks, the
massive volume of network data makes it difﬁcult to under-
stand (to mine for useful information) and usually further
processing of the textual data itself is still required.
Network scanning or reconnaissance is a common ini-
tial step in network intrusion attempts for identifying active
hosts/ports on a network. The network exposure maps tech-
nique of Whyte et al. [22] records scan events that can be
analyzed further to detect sophisticated scanning activities.
A table is built of the services offered by a local network
based on how internal hosts respond to incoming connec-
tion attempts, and inferences about probing remote hosts
can be made based on whether probed services are actually
offered. For example, external hosts that probe both any
closed port on a local network machine and any open port
are given special attention. The visualization technique pre-
sented in the present paper uses network exposure maps to
help ﬁlter raw network data, in order to focus visualization
efforts on data whose preliminary classiﬁcation is as un-
known or malicious trafﬁc. This reduces the volume of traf-
ﬁc to be investigated for possible malicious behavior. Con-
sequently, applying simple visualization techniques on the
network trafﬁc remaining after ﬁltering yields much cleaner
views, simpliﬁed by the removal of hopefully irrelevant data
1063-9527/08 $25.00 © 2008 IEEE
1063-9527/08 $25.00 © 2008 IEEE
DOI 10.1109/ACSAC.2008.16
DOI 10.1109/ACSAC.2008.16
195
205
and noise. It may also help analysts better correlate mali-
cious events and discover coordinated external hosts.
We improve existing visualization methods in the ﬁlter-
ing phase by speeding up the process of visually detect-
ing patterns suggesting malicious trafﬁc, obtaining valuable
information from even simple visualizations and requiring
less computing power and storage requirements to process
or plot netﬂow data.
Organization. The sequel is structured as follows. Sec-
tion 2 reviews exposure maps, and describes our dataset and
network environment settings. Section 3 presents our ﬁl-
tering and visualization methodology. Section 4 illustrates
our technique through case scenarios. Section 5 provides
further discussion including limitations. We cover related
work in Section 6. Section 7 concludes.
2 Background and Dataset
2.1 Review of Exposure Maps
Exposure maps [22] were proposed in part to reduce the
computing resources necessary to detect sophisticated scan-
ning. Instead of trying to detect scans through signatures,
exposure maps track which ports are actively responding
to outside connections. For a given internal host, all {IP
address, port} pairs which respond to outside connection
attempts are recorded. Collecting this information over all
hosts in a local network makes up the Network Exposure
Map (NEM). The NEM is built over a training period: out-
going TCP ﬂows containing SYN-ACK ﬂags are observed
and recorded,1 with every host that was seen responding
with SYN-ACK ﬂags added to the NEM. Finally, the NEM
is vetted (the offered services, as indicated by the NEM,
are conﬁrmed to be allowed by the network security pol-
icy). Ideally in the exposure maps technique the training
period should be long enough to include legitimate trafﬁc
going to all open ports on the network in order to populate
the NEM. Probes to closed ports during this training period
will not establish sessions and therefore will not add entries
to the NEM. Thus the training period does not need to be
free from probes. In the production phase, each new incom-
ing connection attempt is checked to see if it matches an
entry in the NEM. If it does, it is labeled as legitimate traf-
ﬁc, otherwise as an atomic scan event. Memory (primary)
for the exposure map itself is minimal, increasing linearly
with the number of services offered on the network; mem-
ory (typically secondary) for the recorded scan events in-
creases linearly with scanning.
1UDP ports in the NEM are added when 2 hosts communicating with
the same source and destination port pairs (Host1 using a as a source port
and b as a destination port, and Host2 using b as source and a as destina-
tion) are tracked within a small time period.
A malware infection can cause ports to transition from
a closed (non-service) state to open. Such trans-darkports
raise an alert and are added to the NEM as they transition,
since these ports are responding to outside probes. An ad-
ministrator tracks each trans-darkport to either shut down
the port or verify that it conforms with the network security
policy (e.g. a new authorized service was rolled out).
Whyte et al. [22] propose exposure maps for both sophis-
ticated scan detection and automated response. We build
on the exposure map idea of only caring about adversaries
who have gained information from the local network (by
discovering active services) and apply this concept to visu-
alization. This allows us to signiﬁcantly reduce the amount
of information displayed in the visualization tool. Having a
less cluttered visual display of netﬂow data helps the admin-
istrator detect low and slow scans as well as other patterns
and stealthy attacks which might go unnoticed under tradi-
tional visualization techniques.
2.2 Exposure Map Generation
The dataset we use in this paper for our visualization ex-
periments consists of a 28-day2 PCAP [16] trafﬁc capture
on a university class C network with 62 Internet-addressable
hosts. Only the ﬁrst quarter of the class C has been assigned,
leaving a darknet of 192 addresses. The network sniffer
used to capture the dataset was placed on the external inter-
face of the border ﬁrewall so trafﬁc between internal hosts
was not captured.
Netﬂow data was generated from the packet capture us-
ing the Argus suite [1]. Each ﬂow was then entered in a
MySQL database. Each database entry contains standard
netﬂow ﬁelds (start and end time, source and destination
ports, protocol, source and destination IPs, session ﬂags,
byte size and packet count) along with unique identiﬁers for
each ﬂow. Also, each of the netﬂow ﬁelds was stored in a
column and indexes were generated for the columns storing
frequently used values (source IP, source port, destination
IP, destination port) to minimize query response time as in
Stockinger et al. [20].
Host
11
11
13
13
58
Protocol
Port
25 (SMTP), 631 (IPP), 993 (IMAPS) TCP
UDP
53 (DNS)
22 (SSH), 80 (HTTP), 443 (HTTPS)
TCP
UDP
53 (DNS)
22 (SSH)
TCP
Table 1. Network Exposure Map (NEM)
2The capture began on Nov. 12, 2007 and ended on Dec. 9, 2007, with
an 8 hour gap starting at 3 p.m. on Nov. 25, 2007 due to a power outage.
196206
Figure 1. Graphical representation of ﬁltered ﬂow subsets
Table Name
Flows (all externally initiated trafﬁc)
T1.b (In-NEM abnormal)
T2 (Not-in-NEM)
T3 (Suspicious)
T4 (Dangerous)
no. of
ﬂows
863,430
690,660
23,683
714,343
39,950
no. of distinct
source IPs
13,442
3,816
78
3,816
78
no. of
packets
15,941,933
1,361,669
565,148
1,926,817
597,648
total size
of all ﬂows
10,051 MB
89 MB
109 MB
198 MB
111 MB
Table 2. Table Statistics. MB denotes megabytes.
To generate the exposure map for this dataset, we query the
database for any ﬂows (with a source IP within the local network)
that responded with a SYN-ACK packet to incoming connection
attempts. These ﬂows include local IP addresses and ports that are
actively responding to incoming TCP requests. For UDP, we query
the database for hosts communicating with the same source and
destination port pairs. We build the NEM accordingly and verify
that it conforms with the network security policy. The resulting
NEM is shown in Table 1.
3 Methodology of Exposure Map Filtering
This section explains our process of ﬁltering and visualizing
the netﬂow data. Externally initiated ﬂows from the dataset are
categorized into a number of disjoint sets (see Fig. 1), in logical
tables with semantics as follows.
Table T1: In-NEM. This table contains ﬂows destined to a
host/port combination offering an authorized service (i.e., to an
authorized open port in the local network). This table is also logi-
cally partitioned into two sub-tables.
T1.a: In-NEM normal. This table contains ﬂows that are
considered ordinary, since their source IP addresses have only at-
tempted connections to authorized services offered by the network
in question (i.e., destined to an authorized open port).
T1.b: In-NEM abnormal. This table contains ﬂows initiated
by source IP addresses that also have ﬂows in T2. We label these
ﬂows ‘suspicious’ because normally, a host does not attempt con-
nections to closed ports while also accessing legitimate services.
Table T2: Not-in-NEM. This table contains ﬂows destined to a
host/port combination for which no authorized service is offered
(i.e., closed port). It is logically partitioned into two sub-tables.