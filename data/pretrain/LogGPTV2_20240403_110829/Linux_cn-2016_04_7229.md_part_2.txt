# mdadm --zero-superblock /dev/sdX1     # Overwrite the existing md superblock with zeroes
```
**7. 设置邮件通知**
你可以配置一个用于发送通知的有效邮件地址或者系统账号(确保在 mdadm.conf 文件中有下面这一行)。——(可选步骤)
```
MAILADDR root
```
在这种情况下，来自 RAID 后台监控程序所有的通知将会发送到你的本地 root 账号的邮件箱中。其中一个类似的通知如下。
说明：此次通知事件和第5步中的例子相关。此处一个设备被标志为错误，并且一个空闲的设备自动地被 mdadm 加入到阵列。我们用完了所有“健康的”空闲设备，因此我们得到了通知。
![RAID Monitoring Alerts](/data/attachment/album/201604/15/222403ao1rbkmzdh5iplm9.png)
*RAID 监控通知*
#### 了解 RAID 级别
**RAID 0**
阵列总大小是最小分区大小的 n 倍，n 是阵列中独立磁盘的个数(你至少需要两个驱动器/磁盘)。运行下面命令，使用 /dev/sdb1 和 /dev/sdc1 分区组装一个 RAID 0 阵列。
```
# mdadm --create --verbose /dev/md0 --level=stripe --raid-devices=2 /dev/sdb1 /dev/sdc1
```
常见用途：用于支持性能比容错更重要的实时应用程序的设置
**RAID 1 (又名镜像)**
阵列总大小等于最小分区大小(你至少需要两个驱动器/磁盘)。运行下面命令，使用 /dev/sdb1 和 /dev/sdc1 分区组装一个 RAID 1 阵列。
```
# mdadm --create --verbose /dev/md0 --level=1 --raid-devices=2 /dev/sdb1 /dev/sdc1
```
常见用途：操作系统的安装或者重要的子文件夹，例如 /home
**RAID 5 (又名奇偶校验码盘)**
阵列总大小将是最小分区大小的 (n-1) 倍。所减少的大小用于奇偶校验(冗余)计算(你至少需要3个驱动器/磁盘)。
说明：你可以指定一个空闲设备 (/dev/sde1) 替换问题出现时的故障部分(分区)。运行下面命令，使用 /dev/sdb1, /dev/sdc1, /dev/sdd1，/dev/sde1 组装一个 RAID 5 阵列，其中 /dev/sde1 作为空闲分区。
```
# mdadm --create --verbose /dev/md0 --level=5 --raid-devices=3 /dev/sdb1 /dev/sdc1 /dev/sdd1 --spare-devices=1 /dev/sde1
```
常见用途：Web 和文件服务
**RAID 6 (又名双重奇偶校验码盘)**
阵列总大小为(n*s)-2*s，其中n为阵列中独立磁盘的个数，s为最小磁盘大小。
说明：你可以指定一个空闲分区(在这个例子为 /dev/sdf1)替换问题出现时的故障部分(分区)。
运行下面命令，使用 /dev/sdb1, /dev/sdc1, /dev/sdd1, /dev/sde1 和 /dev/sdf1 组装 RAID 6 阵列，其中 /dev/sdf1 作为空闲分区。
```
# mdadm --create --verbose /dev/md0 --level=6 --raid-devices=4 /dev/sdb1 /dev/sdc1 /dev/sdd1 /dev/sde --spare-devices=1 /dev/sdf1
```
常见用途：大容量、高可用性要求的文件服务器和备份服务器。
**RAID 1+0 (又名镜像条带)**
因为 RAID 1+0 是 RAID 0 和 RAID 1 的组合，所以阵列总大小是基于两者的公式计算的。首先，计算每一个镜像的大小，然后再计算条带的大小。
```
# mdadm --create --verbose /dev/md0 --level=10 --raid-devices=4 /dev/sd[b-e]1 --spare-devices=1 /dev/sdf1
```
常见用途：需要快速 IO 操作的数据库和应用服务器
#### 创建和管理系统备份
记住， RAID 其所有的价值不是在于备份的替换者！在黑板上写上1000次，如果你需要的话，但无论何时一定要记住它。在我们开始前，我们必须注意的是，没有一个放之四海皆准的针对所有系统备份的解决方案，但这里有一些东西，是你在规划一个备份策略时需要考虑的。
* 你的系统将用于什么？(桌面或者服务器？如果系统是应用于后者，那么最重要的服务是什么？哪个配置是痛点？)
* 你每隔多久备份你的系统？
* 你需要备份的数据是什么(比如文件/文件夹/数据库转储)？你还可以考虑是否需要备份大型文件(比如音频和视频文件)。
* 这些备份将会存储在哪里(物理位置和媒体)？
**备份你的数据**
方法1：使用 dd 命令备份整个磁盘。你可以在任意时间点通过创建一个准确的镜像来备份一整个硬盘或者是分区。注意当设备是离线时，这种方法效果最好，也就是说它没有被挂载并且没有任何进程的 I/O 操作访问它。
这种备份方法的缺点是镜像将具有和磁盘或分区一样的大小，即使实际数据占用的是一个很小的比例。比如，如果你想要为只使用了10%的20GB的分区创建镜像，那么镜像文件将仍旧是20GB。换句话来讲，它不仅包含了备份的实际数据，而且也包含了整个分区。如果你想完整备份你的设备，那么你可以考虑使用这个方法。
**从现有的设备创建一个镜像文件**
```
# dd if=/dev/sda of=/system_images/sda.img
或者
--------------------- 可选地，你可以压缩镜像文件 -------------------
# dd if=/dev/sda | gzip -c > /system_images/sda.img.gz
```
**从镜像文件恢复备份**
```
# dd if=/system_images/sda.img of=/dev/sda
或者
--------------------- 根据你创建镜像文件时的选择(译者注:比如压缩) ----------------
# gzip -dc /system_images/sda.img.gz | dd of=/dev/sda
```
方法2：使用 tar 命令备份确定的文件/文件夹——已经在本系列[第三讲](/article-7171-1.html)中讲了。如果你想要备份指定的文件/文件夹(配置文件，用户主目录等等)，你可以使用这种方法。
方法3：使用 rsync 命令同步文件。rsync 是一种多功能远程（和本地）文件复制工具。如果你想要从网络设备备份或同步文件，rsync 是一种选择。
无论是你是正在同步两个本地文件夹还是本地  挂载在本地文件系统的远程文件夹，其基本语法是一样的。
```
# rsync -av source_directory destination_directory
```
在这里，-a 递归遍历子目录(如果它们存在的话)，维持符号链接、时间戳、权限以及原本的属主/属组，-v 显示详细过程。
![rsync Synchronizing Files](/data/attachment/album/201604/15/222405x8a94kkqyffay9sp.png)
*rsync 同步文件*
除此之外，如果你想增加在网络上传输数据的安全性，你可以通过 ssh 协议使用 rsync。
**通过 ssh 同步本地到远程文件夹**
```
# rsync -avzhe ssh backups root@remote_host:/remote_directory/
```
这个示例，本地主机上的 backups 文件夹将与远程主机上的 /root/remote\_directory 的内容同步。
在这里，-h 选项以易读的格式显示文件的大小，-e 标志用于表示一个 ssh 连接。
![rsync Synchronize Remote Files](/data/attachment/album/201604/15/222410w0r0bcclcgtgc3cf.png)
*rsync 同步远程文件*
**通过ssh同步远程到本地文件夹**
在这种情况下，交换前面示例中的 source 和 destination 文件夹。
```
# rsync -avzhe ssh root@remote_host:/remote_directory/ backups
```
请注意这些只是 rsync 用法的三个示例而已(你可能遇到的最常见的情形)。对于更多有关 rsync 命令的示例和用法 ，你可以查看下面的文章。
* [在 Linux 下同步文件的10个 rsync命令](http://www.tecmint.com/rsync-local-remote-file-synchronization-commands/)
### 总结
作为一个系统管理员，你需要确保你的系统表现得尽可能好。如果你做好了充分准备，并且如果你的数据完整性能被诸如 RAID 和系统日常备份的存储技术支持，那你将是安全的。
如果你有有关完善这篇文章的问题、评论或者进一步的想法，可以在下面畅所欲言。除此之外，请考虑通过你的社交网络简介分享这系列文章。
---
via: 
作者：[Gabriel Cánepa](http://www.tecmint.com/author/gacanepa/) 译者：[cpsoture](https://github.com/cposture) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创翻译，[Linux中国](https://linux.cn/) 荣誉推出