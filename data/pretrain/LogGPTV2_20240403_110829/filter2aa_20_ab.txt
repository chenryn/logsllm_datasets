### 译者序

2011年，索尼遭受了三次大规模攻击，导致7700万PlayStation Network（PSN）用户的个人信息泄露。这次攻击使PSN网络服务瘫痪了23天，并给索尼造成了上亿美元的经济损失。同年12月，国内知名开发者社区CSDN遭到攻击，600万用户账号及明文密码被泄露并在网络上广泛传播。2013年3月，全球知名的云笔记应用Evernote也遭到攻击，导致5000万用户的邮箱地址和加密密码泄露。撰写本文时，全球最大的众筹网站Kickstarter也因遭受攻击而导致用户信息被盗。

这些触目惊心的事件不断提醒我们网络安全的重要性。虽然引发这些事件的根源可能只是代码中一些不起眼的问题，但其后果却极为严重。掌握如何在编程时不引入漏洞已成为Web应用开发者不可或缺的技能。

然而，当开发者试图系统性地学习Web应用安全时，市面上充斥着以攻击者视角编写的“XX攻防大全”等书籍，而鲜有从开发者立场出发的权威性书籍可供参考。图灵公司引进的《Web应用安全权威指南》正好填补了这一领域的空白。

在日本工作期间，当我向同事询问“什么是CSRF”时，得到的回答是：“在那本‘德丸本’中有透彻的讲解。”没错，“德丸本”就是本书在日本的昵称，几乎每个Web开发小组都有一本。本书作者德丸浩先生被誉为日本“Web应用安全领域第一人”，他在经营一家Web安全咨询公司的同时，还在博客上分享自己的Web安全知识。这本书是他多年经验的精华总结。

看过日系技术书的读者一定对其通俗易懂、深入浅出、谦虚谨慎等特点印象深刻。本书也不例外。SQL注入、XSS、CSRF等对Web开发人员来说耳熟能详但可能一知半解的术语，在书中都有详细剖析。本书既适合从头到尾通读进行系统性学习，也适合作为参考书时常查阅。

最后，感谢图灵文化的编辑们将这本书引入国内，感谢另一位译者刘斌的辛勤付出，使得本书能够成功问世。还要感谢妻子马超对我使用业余时间进行翻译工作的鼓励和支持。希望本书能为您带来帮助。

赵文
2014年2月于无锡

### 前言

近年来，利用Web应用中的安全隐患（即所谓的“漏洞”）进行攻击的案例层出不穷，受害者数量也在不断增加。虽然消除安全隐患可以杜绝这些攻击，但这需要Web应用开发人员具备正确的安全性知识。

目前，网络上充斥着大量关于安全性的信息，但多数内容流于表面，无法解答开发人员的困惑。具体来说，主要存在以下几点疑问：
- 安全隐患是如何产生的？
- 安全隐患会产生什么影响？
- 如何编程才能消除安全隐患？
- 为什么某些方法能够消除安全隐患？

本书正是为了解答这些疑问而创作的。从安全隐患产生的原理到具体的对策，以及采用该对策的依据，本书都将尽可能详细地讲述。目标读者包括程序员、设计师、项目经理、质量管理负责人等参与Web应用开发的所有人员。此外，本书也会站在Web应用发包方（甲方）的立场上，为其提供有用的信息。

尽管本书面向开发人员，但也详细介绍了攻击手段，以便让读者切实感受到安全隐患的影响。需要注意的是，未经授权攻击正式网站可能会触犯法律法规。因此，请不要在没有许可的情况下尝试攻击正式网站。

为了方便读者体验攻击流程，本书提供了在VMware Player虚拟机环境中进行安全隐患攻击的方法。希望读者通过亲自动手，加深对安全隐患的理解。

最后，虽然本书示例代码主要使用PHP语言编写，但所述内容同样适用于其他语言。

### 谢辞

在写作本书时，我在网上征集了一些试读者，并根据他们的意见和反馈进行了调整。试读者不仅指出了错别字和语法问题，还提出了各种改进方案，并就安全隐患进行了深入探讨，使我受益匪浅。如果没有这些建议和探讨，本书不会是现在的样子。衷心感谢以下试读者（恕我省略敬称）：
- 大崎雅幸
- 太田良典
- kaito834
- 加藤泰文
- 小邨孝明
- 坂井隆二
- 下冈叶子
- 高木正弘
- 竹迫良范
- 东内裕二
- 塙与志夫
- 日野洋一郎
- 山崎圭吾
- 山下太郎
- Masahiro Yamada (masa141421356)
- 山本阳平

此外，长谷川阳介先生对本书提出了宝贵意见。同时，我也在Twitter上收到了许多人的建议。在此一并表示感谢。

最后，感谢本书的编辑——SB Creative股份有限公司信息书籍编辑部的友保健太先生。友保先生不仅对写作进度缓慢的我给予了照顾，还时常提出宝贵的意见和建议。在此向您致以衷心的感谢。

2011年1月
德丸浩

### 第1章 什么是Web应用的安全隐患

本章将概述贯穿全书的主题——“安全隐患”，包括其定义、带来的问题以及产生原因。本章最后会介绍全书的结构和学习方法。

#### 1.1 安全隐患即“能用于作恶的Bug”

程序Bug对于开发者来说如同家常便饭。应用程序出现Bug会导致各种异常现象，如显示错误结果、处理延迟、网页布局错乱、响应速度缓慢等。其中，有些Bug可被恶意利用，这类Bug被称为安全隐患（Vulnerability），有时也称为安全性Bug。

以下是一些常见的恶意利用案例：
- 未经许可浏览用户个人信息等隐私信息
- 篡改网站内容
- 使网页浏览者的计算机感染病毒
- 伪装成他人窥探用户隐私、发布文章、在线购物或肆意转账
- 使目标网站无法访问
- 在网络游戏中让自己达到无敌状态或非法获得游戏装备道具
- 在确认个人信息时能看到他人的个人信息

如同程序员对一般Bug习以为常一样，Web应用程序开发者对安全隐患也已经司空见惯。如果在开发Web应用程序时对安全隐患一无所知，就会开发出能被用来进行上述恶行的网站。针对这一问题，本书将从原理到具体对策，详细讲述如何在开发Web应用时杜绝安全隐患。

#### 1.2 为什么存在安全隐患会有问题

为什么存在安全隐患会有问题，这是一个越思考越深入的课题。接下来，我们将从几个方面探讨必须杜绝安全隐患的原因。

**经济损失**
网站的安全隐患被恶意利用后，经营者将蒙受经济损失。典型的损失包括：
- 赔偿用户的经济损失
- 给用户寄送代金券作为补偿的花销
- 网站暂停运营造成的机会损失
- 信誉度下降造成的营业额减少

此类经济损失总额有时会高达数十亿日元。

然而，有人可能会认为，如果网站规模不大，上述损失相对较小，因此有些网站运营方采取事前不做相应对策，万一出事再赔偿用户损失的策略。但实际上，实际损失不仅限于经济损失。

**法律要求**
《个人信息保护法》规定了网站实施安全性措施的要求。该法第20条规定，拥有超过5000名用户的网站运营方，作为个人信息经营者，有义务实施网站的安全管理措施。

安全管理措施的具体内容由各省厅分别制定规章。例如，《经济产业领域关于个人信息保护法的指导方针》中提到，“技术性安全管理措施”中的“‘个人数据访问控制’的实践方法示例”中记载：

检验处理个人信息的系统中引入的访问控制功能的有效性。
（例如，检验网络应用是否存在安全隐患。）

这意味着通过Web系统管理个人信息的运营者受到《个人信息保护法》及相关规章的约束，承担着对Web应用的安全隐患采取安全管理措施的法律义务。

**对用户造成不可逆的伤害**
安全隐患造成的事故会给用户带来许多不可逆的伤害。一旦个人信息泄露，就不可能再回收。账号被盗导致用户名誉受损后，也无法恢复原状。此外，如果用户的信用卡账号泄露，即使赔偿金钱损失，也无法完全平抚用户的精神痛苦。换言之，一旦发生安全事故，就会出现许多金钱无法解决的问题。

**欺骗用户**
大多数网站都会夸耀自身的安全性。没有网站会声明“本站不保证安全性，对可能出现的安全问题概不负责”。如果网站强调了自己的安全性，就应该彻底消除安全隐患。安全隐患的存在会极大地影响网站的信誉度和可信度。

**被用于构建僵尸网络**
僵尸网络（Botnet）是威胁互联网安全的主要因素之一。僵尸病毒是一种恶意代码，计算机被感染后会被远程操纵，用于发送垃圾邮件或执行DDoS攻击等恶意行为。据传，2010年初爆发的Gumblar恶意程序的目的之一就是构建僵尸网络。

Web应用的安全隐患也可能被用于构建僵尸网络。攻击者首先篡改存在安全隐患的网站内容，并设下圈套使浏览者的计算机感染僵尸病毒。如果用户的计算机存在安全隐患，就会感染僵尸病毒并接受攻击者的命令。进入僵尸网络的计算机会被用来发送垃圾邮件或执行DDoS攻击，有时还会去攻击新的服务器。新被入侵的机器加入僵尸网络后，被感染的计算机集群数量会不断扩大。

僵尸网络带来的收益是网络犯罪者的主要收入来源之一。因此，在互联网上发布一个带有安全隐患的网站，有可能被反社会势力利用。

#### 1.3 产生安全隐患的原因

接下来，本节将说明安全隐患产生的原因，以便理解为何Web应用程序开发者对安全隐患已经司空见惯。

安全隐患的原因可分为以下两类：
- （A）由Bug造成
- （B）由检验功能不完善造成

情况（A）包括SQL注入（SQL Injection）和跨站脚本（Cross Site Scripting, 简称XSS）等具有影响力的著名安全隐患。这类隐患不仅发生在与安全性无关的地方，而且影响范围可能扩散至整个应用程序，令人头疼。因此，开发团队的每个成员在编写应用程序时必须具备极强的安全意识，但遗憾的是，目前仍有许多开发团队未能做到这一点。

另一方面，目录遍历（Directory Traversal）漏洞是情况（B）的一个典型例子。这种安全隐患的原因是许多开发者缺乏执行安全检验的意识，且其影响也会波及整个应用程序。

由此可见，Web应用的安全隐患可以形象地比喻为“在意想不到的地方隐藏着的一个很深的陷阱”。因此，长期以来安全隐患一直在不断产生。但是，与真正的陷阱不同，我们可以通过学习提前得知哪里会有陷阱。

#### 1.4 安全性Bug与安全性功能

本章开头提到安全隐患是一种Bug，但即使修正了所有Bug也不能保证应用程序绝对安全。例如，未使用HTTPS协议加密传输的状态不能算作Bug，但传输内容存在被窃听的风险。

类似于使用HTTPS加密传输内容，积极主动加强安全性的措施在本书中被称为“安全性功能”。安全性功能是应用程序的一种需求，也称为安全性需求。

从开发管理的角度来看，区分应用程序安全性方面的Bug和需求至关重要。正如Bug必须被消除一样，消除安全隐患也是理所当然的。另一方面，是否将安全性功能加入项目需求，则应由软件发包方结合项目经费作出决定。

为了让读者有意识地区分安全性Bug和安全性功能，本书特意将两者分别独立成章加以细述。

#### 1.5 本书的结构

本书结构如下：
- **第1章**：引入安全隐患概念，介绍其产生原因，说明安全性Bug和安全性功能的区别。
- **第2章**：搭建本书的试验环境。通过VMware虚拟机提供实际体验安全隐患的环境，并介绍搭建此虚拟机环境和安装诊断工具的方法。
- **第3章**：讲述HTTP、Cookie、会话（Session）管理等Web应用安全基础知识，并介绍同源策略。
- **第4章**：全书的核心章节。针对Web应用的每一个功能中易产生的安全隐患模式，对其原理及对策等各个方面加以详细说明。
- **第5章**：讲述认证、账号管理、授权、日志输出等典型的安全性功能。
- **第6章**：讲述字符编码与安全性的关系。Web应用安全隐患的起因很多涉及字符编码。本章将讲述字符编码的基础知识、安全隐患产生的原因和相应的对策。
- **第7章**：从Web应用以外的角度，描绘提高网站安全性措施的全景。
- **第8章**：讲述如何开发安全无虞的Web应用。

### 第2章 搭建试验环境

本章将讲解如何搭建本书中安全隐患用例的运行环境。截图是在Windows 7中取得的，但这些操作同样适用于Windows XP或Windows Vista。

#### 2.1 试验环境概要

本书中安全隐患用例的运行环境如下：
- Linux（Ubuntu 10.04）
- Apache 2.2
- PHP 5.3
- PostgreSQL 8.4
- Postfix等兼容Sendmail的电子邮件服务器

为了方便使用Windows操作系统的读者，本书准备了一个已配置好上述环境的VMware虚拟机。下图展示了在VMware中运行Linux系统的情形。

![本书的试验环境](图2-1)

虽然虚拟机中的Linux服务器实际上在读者的计算机中运行，但请将其想象成互联网上的一台远程服务器。通过使用虚拟机，我们可以在自己的计算机上模拟近似于互联网上的服务器环境。

本章需要安装以下软件：
- VMware Player（VMware运行环境）
- Fiddler（诊断工具）
- 虚拟机

VMware Player和Fiddler是免费公开的软件。虚拟机是指为在VMware Player上运行本书代码而配置的Linux环境。

从下一节开始，我们将依次解释各软件的安装方法。

#### 2.2 安装VMware Player

##### 什么是VMware Player

VMware Player是美国VMware公司推出的一款免费虚拟机软件。本书将利用VMware Player在虚拟机上搭建Linux服务器的运行环境，并将其视为Web服务器进行各种试验。

写作本书时（2011年4月），VMware Player的最新版本为3.1.4，软件要求的配置如下：
- CPU：标准的x86兼容系统或x86-64位兼容个人计算机，支持Intel VT或AMD-V（不支持PAE的Pentium M等处理器）
- 操作系统：Windows XP、Windows Vista或Windows 7
- 内存：1GB以上
- 硬盘：1GB以上空余容量（包括虚拟机）

如果硬盘剩余空间不足，可以将虚拟机保存于外部存储媒介（如U盘或SD卡等），这样安装VMware Player本身只需要约150MB的空间即可。

##### 下载VMware Player

安装VMware Player的最新版，可以前往[VMware官方网站](http://www.vmware.com/go/downloadplayer-cn/)下载，页面如下图所示。

![在VMware的官方网站上能下载最新版的安装文件](图2-2)

##### 安装VMware Player

双击安装程序。这时会显示以下安装向导。

![安装开始](图2-3)

安装过程中可以全部使用默认选项。如有必要，可以更改安装路径等。

![更改安装路径](图2-4)

当看到以下画面时，说明安装已经成功。然后按照画面上的指示重启系统即可。

![安装完成](图2-5)

注：本章的讲解主要针对Windows操作系统，但本书附带的虚拟机环境已在Linux版的VMware Player 3.1.2和Mac OS X的VMware Player 3.1.2上测试过，均能正常运行。