34%
47%
73%
66%
88%
High
Speed
10Mbps
66%
53%
27%
34%
12%
Peak
Total
Group Group
Size
88
95
401
328
281
Size
78
51
239
156
149
as it does not distinguish diﬀerent types of reductions. For
example, in a forest of four trees, a reduction from four to
three trees is treated the same as a reduction from one to
zero trees. Thus a reduction does not necessarily mean a
user sees bad quality.
• Reconnection Time: When a node is disconnected from
a tree, it should be able to reconnect quickly. This may
entail preempting nodes of lower priority or locating a un-
used slot. Time between tree reductions measures how fre-
quently a user experiences a dip in performance; this metric
describes how long such dip persists.
• Utilization: Computed as the total bandwidth consumed
by all hosts over the total forwarding limits of the hosts at a
given time, the metric indicates what fraction of the system
resources are being correctly located and leveraged.
5.2 Experimental Methodology
Our study is conducted based on real-world traces ob-
tained from previous operational deployments of the ESM
Broadcasting System [6]. Each trace lasts for several hours,
and it is clearly not feasible to emulate the full duration.
Thus, for each trace, we select a twenty-minute segment with
characteristics shown in Table 2. The high-speed and low-
speed hosts are generally behind Ethernet and asymmetric
DSL/cable connections, respectively. The traces include the
join/leave patterns of diﬀerent nodes, as well as estimates
of the outgoing bandwidth of each node. To quantify the
resources available in these traces, we introduce Resource
Index (RI) [6], deﬁned as the total forwarding capacity in
the system divided by the bandwidth required for all hosts
to receive the full source rate. We classify traces with an RI
above one to be resource-rich and resource-scarce otherwise.
The primary trace we use for evaluation is the Slash-
dot trace, which is from a resource-scarce broadcast to an
interest-group where the majority of hosts are behind DSL.
SIGCOMM2002 and SOSP2003 are broadcasts of confer-
ences, and thus have a much larger fraction of hosts behind
high bandwidth university machines; as such, they represent
resource-rich environments for comparison. GrandChallenge
is a broadcast of a vehicular competition, and Rally refers to
a broadcast of an election campaign. These traces represent
resource-scarce environments. We focus our evaluation on
the Slashdot trace and use other traces to study how sen-
sitive our systems are to various operating environments.
Figure 3 shows RI as a function of time for the ﬁve trace
segments. We emulate the traces by mapping each client
to a PlanetLab host and use the same client join/leave pat-
terns as in the trace segments to drive the experiment. Fur-
thermore, we emulate DSL/cable and Ethernet hosts with a
degree of 0.25 and 2, respectively.
For each experiment, four multicast trees are formed. Al-
though one could improve the granularity of bandwidth dis-
tribution by using more trees to produce smaller stripes, the
x
e
d
n
I
e
c
r
u
o
s
e
R
 1.4
 1.2
 1
 0.8
 0.6
 0.4
 0.2
SIGCOMM2002
SOSP2003
Rally
Slashdot
GrandChallenge
 0
 200
 400
 600
 800
 1000
 1200
Time (Seconds)
Figure 3: Resource Indices for real-world traces in a
20-minute segment. Traces with an RI above 1 are con-
sidered resource-rich and resource-limited otherwise.
network and video-codec overheads increase with the num-
ber of trees. We consider four trees small enough to be
eﬃcient, while large enough to provide reasonable ﬂexibility
in varying the bandwidth. We use a source data rate of 400
kbps, a typical size of streaming videos on the Internet [6].
The source streams a stripe of 100 kbps to each tree. The
clients already present before the start of the segment join
the broadcast in a burst and begin contributing in the their
respective Contributor trees. We allow them 2 minutes to
reach a steady state, after which the rest of the clients follow
the join/leave patterns in the trace for the next 20 minutes,
and experimental data is collected over that period.
We consider hosts with mean contributions greater than
700 kbps to be High Contributors (HC) and those with mean
contributions between 75 and 100 kbps to be Low Contribu-
tors (LC). This splits hosts with various contribution levels
into two groups and helps us evaluate them separately. Each
result is aggregated or averaged over three runs with a con-
sistent set of PlanetLab machines. When presenting results
in the next section, we ﬁlter out hosts which stay for less
than 2 minutes to highlight the results for hosts which par-
ticipate for a reasonable amount of time. We will study the
impact of node stay time in Section 6.2.
6. EXPERIMENTAL RESULTS
We begin by showing the behavior of a typical host under
the Cont-Aware system in a resource-scarce environment us-
ing the Slashdot trace in Section 6.1. Next, under the same
setting, we compare the performance and average time be-
tween reductions in the number of trees of hosts in Cont-
Aware to those in Cont-Agnostic in Section 6.2 and Sec-
tion 6.3, followed by a detailed evaluation of various key
design components in Section 6.5. Section 6.6 explores how
Cont-Aware behaves in diﬀerent operating environments.
6.1 Results with a Typical Run
Figure 4 shows the performance of a typical high con-
tributor in our system. The node begins by making zero
contribution and connecting to its Contributor tree. Over
the next minute, the number of children the node supports
goes from zero to eight. As the number of adopted children
increases, the number of successfully connected trees also in-
creases quickly, as the node becomes entitled to them. The
actual performance ﬂuctuates due to the fact that ESM uses
non-blocking TCP to transfer data across each overlay link,
leading to burstiness on the received bandwidth.
)
s
p
b
K
(
h
t
d
w
d
n
a
B
i
 800
 700
 600
 500
 400
 300
 200
 100
 0
projected performance
actual performance
transient contribution
 0
 50
 100  150  200  250  300  350  400  450
Time(sec)
Figure 4: Behavior of a typical high contributor under
Cont-Aware. The top curve shows the bandwidth con-
tributed, the solid curve shows the Entitled bandwidth,
and the dashed line shows the actual bandwidth received.
e
l
i
t
n
e
c
r
e
P
 100
 80
 60
 40
 20
 0
 0
Cont-Aware
Cont-Agnostic
 50
 100
 150
 200
 250
 300
 350
 400
Average Bandwidth Received (kbps)
Figure 5: Cumulative distribution of average received
bandwidth for high contributors.
Note that because we smooth away transient drops in con-
tribution, the sudden loss of children between 255 and 300
seconds does not impact performance, and the node quickly
acquires new children. The node is brieﬂy disconnected from
one tree at 250 seconds as shown by a 100 kbps dip of the
solid line. This is due to the departure of the node’s parent.
However, because the node is contributing signiﬁcantly to
the system, the recovery time is very brief – the node ﬁnds
a new location in the tree in under 6 seconds.
6.2 System Performance
In this section, we would like to evaluate how well Cont-
Aware leverages the system resources and distributes them
based on the contribution of each host as compared to Cont-
Agnostic.
In particular, hosts with similar contributions
should see similar performance; hosts with higher contri-
butions should see equal or better performance than those
with lower contributions.
Figure 5 plots the cumulative distribution of the mean
session bandwidth of high contributors for the two schemes:
Cont-Aware and Cont-Agnostic. There are two curves, each
corresponding to one scheme. The y-axis is the CDF and
the x-axis is the mean bandwidth ranging from 0 to 400 kbps
(i.e. source rate). The more a curve is toward the right, the
better the overall performance is. Cont-Aware signiﬁcantly
improves the performance of high contributors with 80% of
them receiving the source rate of 400 kbps. Cont-Agnostic
however allows only 20% of high contributors to receive the
source rate. Furthermore, almost all high contributors un-
e
l
i
t
n
e
c
r
e
P
 100
 80
 60
 40
 20
 0
 0
Cont-Aware
Cont-Agnostic
 50
 100
 150
 200
 250
 300
 350
 400
Average Bandwidth Received (kbps)
Figure 6: Cumulative distribution of average received
bandwidth for low contributors.
der Cont-Aware obtain bandwidth greater than 350 kbps
whereas Cont-Agnostic does much worse, with only half of
high contributors receiving more than 350 kbps. By prior-
itizing high contributors, Cont-Aware allocates about two
more stripes to each high contributor than Cont-Agnostic.
While Figure 5 plots the mean bandwidth CDF for high
contributors alone, Figure 6 plots the same type of graph,
but for low contributors. We see that with Cont-Agnostic,
almost all low contributors receive anywhere from 100 kbps
up to the source rate. Cont-Aware reduces this spread to
200-350 kbps, bringing the performance of all low contrib-
utors toward the mean. This shows Cont-Aware enables
nodes contributing similarly to receive similar bandwidth.
To quantify this observation, we compute the mean and
standard deviation of both curves and ﬁnd that although
low contributors in both schemes receive a mean bandwidth
around 300 kbps, with Cont-Aware, the standard deviation
signiﬁcantly drops from 80.5 to 34.8.
When looking at Figure 5 and 6 together, we see Cont-
Agnostic gives high and low contributors a similar allocation
pattern while Cont-Aware treat high contributors more fa-
vorably. Figure 5 also suggests Cont-Aware reduces the per-
formance spread for high contributors. Furthermore, all low
contributors under Cont-Aware receive at least one stripe
of 100 kbps. Thus we conclude that our contribution-aware
heuristics achieve equitable and diﬀerential distribution of
bandwidth based on nodes’ contributions while oﬀering some
minimum guarantee on performance for low contributors.
This oﬀers incentives to nodes to contribute more and keep
low contributors stay interested in the broadcast.
One question is whether it is possible to make the dis-
tribution among low contributors in Cont-Aware even more
equitable, in which case most of them should receive closer to
the average bandwidth of 300 kbps – for example, 8% of the
low contributors receive less than 250 kbps. We see various
reasons for this. First, we are limited by the granularity im-
posed by the multi-tree framework, and more equality could
result if more trees are created. Second, some clients are lim-
ited by the bandwidth near them – further, there are issues
related to our experimental artifact as several clients may be
mapped to the same PlanetLab machine and compete for in-
coming bandwidth, causing them to under-perform. Third,
there are convergence issues: short-lived low contributors
do not remain in the system long enough to connect to their
Excess trees, and due to the distributed nature of the sys-
tem, resources are not always quickly located. In an extreme
case, an Excess node which fails frequently on consecutive
e
l
i
t
n
e
c
r
e
P
 100
 80
 60
 40
 20
 0
 0
>0min
>2min
>5min
 50
 100
 150
 200
 250
 300
 350
 400
Average Bandwidth Received (kbps)
Figure 7: Cumulative distribution of received band-
width for LC staying for more than 0, 2, and 5 minutes.
e
l
i
t
n
e
c
r