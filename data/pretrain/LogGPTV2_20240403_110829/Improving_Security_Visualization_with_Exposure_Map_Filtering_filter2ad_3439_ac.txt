5 Further Discussion
We emphasize the noticeable reduction in trafﬁc plotted from
the original to the ﬁltered view in all of the visualizations presented
in Section 4. Exposure map-ﬁltered views in all cases provided a
fast way to focus on what we have called dangerous trafﬁc. While
we do not claim that this dangerous trafﬁc is impossible to discover
in the original (unﬁltered) views, the ﬁltered views did help us, and
we believe will help the general analyst speed up network ﬂow
analysis in many cases. Section 4 presented a limited number of
examples of how our ﬁltering technique may help security analysts
better understand malicious activity in their network.
While our ﬁltering technique proved to be useful in many sce-
narios, there are of course cases where attackers might go unno-
ticed. Our proposal is based on exposure maps, and therefore
suffers from inherent limitations of exposure maps such as the
assumption that attackers, while trying to gain knowledge about
the target network, will likely attempt connections to closed ports
only, or both listening (open) and closed ports. Therefore, ﬂows
originating from an attacker’s IP address lucky (or clever) enough
to probe only services the target network is offering will tend to
look like legitimate connections and not get visualized. An ad-
versary with access to a large botnet could perform a scan with
a subset of those machines, and subsequently launch an attack
on only identiﬁed open ports with hosts that were not used dur-
ing the scan. The exposure maps technique would classify all the
scanning IP addresses as suspicious or malicious (except addresses
which only scanned open ports), but the new activity of the new
machines would be classiﬁed normal.
In a more advanced sce-
nario, each zombie machine could be used to probe only a single
port on a single host, and then attacks on the open ports could be
launched with new zombies. Such an attack would appear to be
202212
difﬁcult to detect, although a visual pattern of a coordinated scan
might be detected. As another limitation, large volumes of possi-
bly malicious trafﬁc targeting the network in question might lead
to cluttered ﬁltered visualizations. This could be mitigated by us-
ing further basic ﬁltering such as limiting the ﬁltered visualization
to speciﬁc destination hosts, ports, or protocols.
Many of the potential problems noted above are not speciﬁc to
our particular visualization proposal. Conti et al. [5] discussed a
variety of possible information visualization attacks targeting ei-
ther the users of visualization tools or the software and hardware
of these tools. We believe that essentially any network analysis
visualization tool or approach will have its own drawbacks, and in
many cases a combination of approaches may be required. We be-
lieve that our ﬁltering approach remains useful even though the ex-
posure maps philosophy may result in mis-classifying some trafﬁc
(e.g. shifting focus away from speciﬁc IP addresses, when in fact
those might actually be dangerous or malicious).
Given a massive amount of raw network trafﬁc and logs, it is
not easy for security analysts to monitor network activities in real-
time using most existing visualization techniques. We believe our
technique could be easily adapted to the process of ﬁltering net-
work ﬂows on-the-ﬂy with immediate visualization, allowing an-
alysts to focus exclusively on visualizations of suspicious or dan-
gerous network ﬂows in a real-time fashion. For each new exter-
nally initiated ﬂow, there are at most two comparisons necessary
to decide whether the new ﬂow should be added to the dangerous
table (T4 in Section 3). First, we use the NEM to check if the ﬂow
is destined to a host/port combination for which no authorized ser-
vice is offered. If so (i.e., it is not-in-NEM) then the ﬂow is added
to the dangerous table (the table that is visualized in part (b) of
all of our Section 4 examples) only if the ﬂow source IP address
has also previously attempted to connect to an open port in the
network (for example, within a predeﬁned time window). Other-
wise, if the ﬂow is attempting to connect to an open port, the ﬂow
will be added to the dangerous table only if the ﬂow source IP ad-
dress has probed at least one closed port in the network. Note this
can be naively facilitated by using the equivalent of two bit array
data structures, for each source IP address seen to date (or all 232
IPv4 addresses in the extreme case), tracking if that source has yet
probed (a) an open port, and (b) a closed port. The processing time
for each network ﬂow thus has a small constant upper bound.
6 Related Work
Interest in information security visualization has grown rapidly
in recent years, providing network security analysts with new tools
and methods for visually identifying and classifying network at-
tacks. Most of these visualization systems to date are based upon
the information visualization mantra: overview ﬁrst, zoom and ﬁl-
ter, details on demand [19]. In practice, these systems ﬁrst display
large amounts of data, and then allow the analyst to zoom and ﬁlter
into areas of the visualized data that might be of interest. Looking
for patterns and clusters in graphs is an obvious approach to detect
attacks; however, modern attacks are getting more sophisticated
and stealthier, making it difﬁcult for the analyst to select the appro-
priate areas to zoom into. Often, this situation forces the analyst
into an inefﬁcient repetitive process of zooming in and viewing
details, only to realize that the area zoomed into is not of inter-
est. One of the advantages of visualization should be to speed up
data interpretation by leveraging human visual processing power.
However, today’s highly distributed attacks and excessive Internet
background radiation [15] make it difﬁcult to use standard visual-
ization tools to their full potential. Conti et al. [4, 6] discuss visu-
alization systems which ﬁlter data but leave it up to the analyst to
select which records to display. The preﬁltering phase involves re-
moving unwanted ﬁelds from ﬂows or formatting the data; it does
not automatically remove any full ﬂows.
The Portvis tool [11, 2] allows the analyst to see port activity on
a range of hosts over a deﬁned period of time, offering a very high-
level method of detecting malicious activity. Attackers may be
able to bypass detection by using frequently used ports, or a small
number of packets. The NvisionIP tool [23] uses a grid-based vi-
sualization to plot the source IP address, and colors to identify
ports accessed by this address. This type of visualization can of-
fer interesting insight, but may be prone to clutter when a large
number of sources target a large number of ports. Honeynets are
commonly used to analyze malicious network behavior. Grizzard
et al. [8] compared the Georgia Tech honeynet data to real-world
data submitted by volunteers. Using histograms over large time
scales, they were able to visualize large amounts of data. While
able to detect large spikes in activity related to large-trafﬁc worms
such as Blaster, stealth scans are largely undetectable by these his-
tograms.
An alternate approach is to characterize or model malicious
behavior through visualization. Muelder et al. [13] suggested a
tighter interaction between the typical overview and detail phases.
Conti et al. [3] explored approaches to create a set of images that
visually describe scanning tool behavior (such as NMAP [14]) un-
der different operating systems. While this is useful for under-
standing adversaries who use popular tools, minor modiﬁcations to
these tools can generate a different (and thus evasive) visual foot-
print. Muelder et al. [12] also pursue classiﬁcation of suspicious
network trafﬁc, using associative memory with neural networks to
reduce noise and identify scans. A tool for visualizing horizon-
tal and vertical scans is the Spinning Cube of Potential Doom [9]
which highlights different types of scans. Advanced techniques
such as slow scans or highly distributed scans may be hidden by
the noise of normal trafﬁc and Internet background radiation. A
similar concept for ﬁnding horizontal or vertical scans was also
reviewed by Gates et al. [7] in a 2D space. In our research to date,
we have found few scanners that scan enough ports/hosts to create
horizontal or vertical lines in appropriate graphs. This might be at-
tributed to attackers trying to avoid triggering alarms. Gates et al.
used the concept of unique source IP addresses per hour to detect
malicious activity. Finally, the Isis tool [18] allows visualization
of an intrusion through variable time-scales.
7 Concluding Remarks
Our visualization proposal relies heavily on the exposure maps
technique [22] for network trafﬁc ﬁltering. This signiﬁcantly re-
duces the amount of network trafﬁc displayed for security mon-
itoring and analysis, with plots of the ‘dangerous’ ﬂows focus-
ing attention on trafﬁc from sources that have probed at least one
203213
closed and one open port. Although not a foolproof way of detect-
ing all malicious trafﬁc, we believe this approach proves useful to
highlight both common and some advanced adversaries, and com-
promised hosts.
In contrast, the majority of available tools and
methodologies for visualization we are familiar with offer ﬁlter-
ing features but require the analyst to correctly input appropriate
ﬁltering parameters. Incorrect parameters may result in process-
ing overhead to display unnecessary network trafﬁc or events, and
analysts may then have trouble ﬁnding the needle of malicious ac-
tivity in the haystack of network activity.
We believe the simple visualizations for security-related anal-
ysis of network trafﬁc presented herein demonstrate the effective-
ness of ﬁltering out the “known good” (or assumed good) trafﬁc,
and the “harmless bad” trafﬁc, allowing focus on a speciﬁc type of
suspicious trafﬁc. Although the dataset that we used was from a
relatively small university network, even on this network the visu-
alizations of the unﬁltered ﬂows cause difﬁculties in ﬁnding mali-
cious activities due to the volume and richness of the trafﬁc. While
this dataset has proven effective for illustrating our approach, fu-
ture work includes experimenting further with larger datsets from
larger networks (e.g. perhaps [10]), and testing the effectiveness
of combining our proposal with other existing visualization ap-
proaches [11, 18, 9, 12].
References
[1] Argus Suite. http://qosient.com/argus. Accessed
January 2008.
[2] C. Muelder, K.-L. Ma, and T. Bartoletti. Interactive visual-
In RAID’05:
ization for network and port scan detection.
Proceedings of Recent Advances in Intrusion Detection,
September 2005.
[3] G. Conti and K. Abdullah. Passive visual ﬁngerprinting of
network attack tools. In VizSEC/DMSEC ’04: Proceedings
of the 2004 ACM Workshop on Visualization and Data Min-
ing for Computer Security, pages 45–54, New York, NY,
USA, 2004.
[4] G. Conti, K. Abdullah, J. Grizzard, J. Stasko, J. A. Copeland,
M. Ahamad, and C. Lee. Countering security analyst and
network administrator overload through alert and packet
IEEE Computer Graphics & Applications,
visualization.
26(2):60–70, March/April 2006.
[5] G. Conti, M. Ahamad, and J. Stasko. Attacking information
visualization system usability overloading and deceiving the
In Proceedings of the 2005 symposium on Usable
human.
privacy and security (SOUPS 05), pages 89–100, 2005.
[6] G. Conti, J. Grizzard, M. Ahamad, and H. Owen. Vi-
sual exploration of malicious binary objects using semantic
In Pro-
zoom, interactive encoding and dynamic queries.
ceedings of the Workshop on Visualization for Computer Se-
curity (VizSEC 05), pages 83–90, October 2005.
[7] C. Gates, J. McNutt, J. Kadane, and M. Kellner. Detecting
scans at the ISP level. Technical Report CMU/SEI-2006-TR-
005, Software Engineering Institute, Carnegie Mellon Uni-
versity, 2006.
[8] J. Grizzard, J. Charles Simpson, S. Krasser, H. Owen, and
G. Riley. Flow based observations from NETI@home and
In Proceedings of the Sixth IEEE Sys-
honeynet data.
tems, Man and Cybernetics Information Assurance Work-
shop, pages 244–251, June 2005.
[9] S. Lau. The spinning cube of potential doom. Communica-
tions of the ACM, 47(6):25–26, 2004.
[10] LBNL/ICSI Enterprise Tracing Project.
http:
//www.icir.org/enterprise-tracing/
Overview.html.
[11] J. McPherson, K.-L. Ma, P. Krystosk, T. Bartoletti, and
M. Christensen. Portvis: a tool for port-based detection of
security events. In VizSEC/DMSEC ’04: Proceedings of the
ACM Workshop on Visualization and Data Mining for Com-
puter Security, pages 73–81, New York, NY, USA, 2004.
[12] C. Muelder, L. Chen, R. Thomason, K.-L. Ma, and T. Bar-
toletti. Intelligent classiﬁcation and visualization of network
scans. In Proceedings of the Workshop on Visualization for
Computer Security (VizSEC 07), October 2007.
[13] C. Muelder, K.-L. Ma, and T. Bartoletti. A visualization
methodology for characterization of network scans. In Pro-
ceedings of the Workshop on Visualization for Computer Se-
curity (VizSEC 05), pages 29–38, Washington, DC, USA,
2005. IEEE Computer Society.
[14] NMAP. http://nmap.org. Accessed April 2008.
[15] R. Pang, V. Yegneswaran, P. Barford, V. Paxson, and L. Pe-
terson. Characteristics of internet background radiation. In
IMC ’04: Proceedings of the 4th ACM SIGCOMM Confer-
ence on Internet Measurement, pages 27–40, New York, NY,
USA, 2004.
[16] PCAP. http://tcpdump.org. Accessed January 2008.
[17] M. Peck.
A brainy approach to image sorting.
http://www.spectrum.ieee.org/apr08/6121,
April 2008.
[18] D. Phan, J. Gerth, M. Lee, A. Paepcke, and T. Winograd.
Visual analysis of network ﬂow data with timelines and event
plots. In Proceedings of the Workshop on Visualization for
Computer Security (VizSEC 07), 2007.
[19] B. Shneiderman. The eyes have it: A task by data type
taxonomy for information visualizations. Technical Report
UMCP-CSD CS-TR-3665, College Park, Maryland, 1996.
[20] K. Stockinger, E. W. Bethel, S. Campbell, E. Dart, and
K. Wu. Detecting distributed scans using high-performance
In Proceedings of the 2006
query-driven visualization.
ACM/IEEE Conference on Supercomputing, New York, NY,
USA, 2006.
[21] A. Wagner and B. Plattner.
Entropy based worm and
anomaly detection in fast IP networks. 14th IEEE Interna-
tional Workshops on Enabling Technologies: Infrastructure
for Collaborative Enterprise, pages 172–177, June 2005.
[22] D. Whyte, P. C. van Oorschot, and E. Kranakis. Tracking
darkports for network defense. Twenty-Third Annual Com-
puter Security Applications Conference, ACSAC 2007, pages
161–171.
[23] W. Yurcik. Tool update: NVisionIP improvements (differ-
In Proceedings of the
ence view, sparklines, and shapes).
Workshop on Visualization for Computer Security (VizSEC
06), New York, NY, USA, 2006.
204214