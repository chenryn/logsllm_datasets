### Summary of Authentication Mechanisms in Analyzed Apps

**Fig. 3: Summary of Authentication Mechanisms Found in Our Analysis**
- **Apps Analyzed**: 76
- **Apps Using Authentication**: 29 (38%)
- **Mechanisms Offered**:
  - Password Only: 5
  - Paired Account Only: 5
  - QR Code Only: 0
  - Short Code Only: 0
  - PIN Only: 0
  - Password & Paired Account: 9
  - Password & QR Code: 0
  - Password & PIN: 0
  - Password, PIN & Paired Account: 0
- **Note**: A dash indicates no apps used the specific authentication mechanism.

### App Authentication
We analyzed 76 popular apps across 25 categories. The authentication landscape for these apps was sparse and homogeneous, with only 29% requiring authentication. The available authentication mechanisms on these apps are passwords and paired accounts, sometimes offered in tandem (Fig. 3). In contrast to the HTC Vive, most paired accounts on HoloLens require a password to log into the paired account; thus, for popular HoloLens apps that use authentication, users must almost always enter a password. The most common paired account accepted is Facebook, used by eight apps, followed by Microsoft and Google with six each, and Apple with three apps.

In a second round of review, we analyzed 45 HoloLens-native apps in five authentication-heavy categories: Productivity, Personal Finance, Social, Security, and Business/Collaboration. While the other apps we analyzed use only passwords and paired accounts, apps tailored for HoloLens 2 employ a wide variety of authentication mechanisms, including QR codes, short pairing codes, and PINs (see Fig. 3). In fact, 38% of the authenticated apps made for HoloLens 2 do not offer any methods that use a password. This contrast between authentication in HoloLens-native apps and generic apps suggests that AR developers may be purposefully choosing authentication methods more suited for AR.

### Evaluating Incumbent Authentication Mechanisms
From our exploration of authentication on current AR/VR devices, we identified a list of incumbent authentication mechanisms: passwords, paired accounts (both manually entered and automatically authenticated), PINs, short codes, QR codes, and iris scans. We now evaluate these mechanisms based on user- and developer-desired properties (Section IV). The gray rows of Fig. 4 summarize our evaluation.

#### Knowledge-Based Methods
Our analysis surfaced three knowledge-based methods: passwords, PINs, and paired accounts. Passwords are the most popular and thus the incumbent method to beat. They gain all deployability benefits, which likely contributes to their popularity (as suggested by our user survey, Section III). However, they perform poorly in other categories. The primary issue with passwords in AR and VR is the requirement for users to interact with the virtual keyboard, which is slow, difficult, and unpleasant. Thus, passwords are not efficient, physically effortless, or accessible in terms of visual, mobility, or cognitive aspects. Additionally, we assume passwords are not resilient to physical observation, as preliminary work shows they are vulnerable [42]. Following Bonneau et al., we do not grant passwords resilience to guessing, given users' historical poor choice of passwords [16]. As the primary incumbent, passwords provide a low bar for novel authentication mechanisms to improve upon. Traditional 4-digit PINs share the same benefits and drawbacks as passwords but are additionally quasi-efficient and quasi-infrequent in errors since a small PIN pad is easier and faster to use than a full virtual keyboard.

Paired accounts are another common option. In many cases, they require the user to manually enter the username and password of the paired account, which has the same ranking as passwords, except it is quasi-memorywise effortless since the user needs to remember only one secret for any app using this paired account. However, some paired accounts utilize the account required to use the device and are automatically logged in upon opening an app. This type of paired account is much more usable because the user does not have to perform any extra action when opening an app. Automatic paired accounts gain nearly all usability properties, except for memorywise effortlessness and cognitive accessibility, as the user still must remember the one secret for the paired account. For security, the lack of interaction means this method is resilient to physical observation. Automatic paired accounts are also quasi-resilient to guessing; the attacker would need to guess the credentials to unlock the device, which could be a password (not resilient), iris (resilient), or another method. Therefore, automatic paired accounts are a very promising option for authentication on AR and VR devices.

#### Token-Based Methods
The two token-based methods we observed are short codes and QR codes. For short code authentication, the user first goes to an app or logs into an account on a secondary device. Then, the headset displays a one-time code that the user enters on the secondary device. Short codes are fully deployable and generally more usable than knowledge-based methods because typing on a smartphone or laptop is quick and discreet compared to typing on AR and VR. Thus, short codes are not physically effortless or visually, mobility, or cognitively accessible, but they are quasi-efficient and acceptable in public. Short codes are also only quasi-memorywise effortless since they sometimes require the user to know the credentials for a paired account. For security, short codes are resilient to physical observation and guessing, making them a viable option.

QR codes, on the other hand, involve the user scanning a QR code displayed on the headset with a secondary device. This method is also fully deployable and more usable than knowledge-based methods, as it requires minimal interaction. QR codes are quasi-efficient, physically effortless, and acceptable in public. They are also resilient to physical observation and guessing, making them a strong candidate for AR and VR authentication.