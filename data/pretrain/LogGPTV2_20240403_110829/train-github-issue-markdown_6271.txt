### System info
  * Playwright Version: v1.33.0
  * Operating System: macOS 12.6.5
  * Browser: All
  * Other info: Node 16.13.0, React 18.2
### Source code
  * I provided exact source code that allows reproducing the issue locally.
**Config file**
    import { defineConfig, devices } from '@playwright/experimental-ct-react';
    /**
     * See https://playwright.dev/docs/test-configuration.
     */
    export default defineConfig({
      testDir: './',
      /* The base directory, relative to the config file, for snapshot files created with toMatchSnapshot and toHaveScreenshot. */
      snapshotDir: './__snapshots__',
      /* Maximum time one test can run for. */
      timeout: 10 * 1000,
      /* Run tests in files in parallel */
      fullyParallel: true,
      /* Fail the build on CI if you accidentally left test.only in the source code. */
      forbidOnly: !!process.env.CI,
      /* Retry on CI only */
      retries: process.env.CI ? 2 : 0,
      /* Opt out of parallel tests on CI. */
      workers: process.env.CI ? 1 : undefined,
      /* Reporter to use. See https://playwright.dev/docs/test-reporters */
      reporter: 'html',
      /* Shared settings for all the projects below. See https://playwright.dev/docs/api/class-testoptions. */
      use: {
        /* Collect trace when retrying the failed test. See https://playwright.dev/docs/trace-viewer */
        trace: 'on-first-retry',
        /* Port to use for Playwright component endpoint. */
        ctPort: 3100,
      },
      /* Configure projects for major browsers */
      projects: [
        {
          name: 'chromium',
          use: { ...devices['Desktop Chrome'] },
        },
        {
          name: 'firefox',
          use: { ...devices['Desktop Firefox'] },
        },
        {
          name: 'webkit',
          use: { ...devices['Desktop Safari'] },
        },
      ],
    });
**Test file (self-contained)**
    import { test, expect } from '@playwright/experimental-ct-react';
    import App from './App';
    test.use({ viewport: { width: 500, height: 500 } });
    test('should work', async ({ mount }) => {
      const component = await mount();
      await expect(component).toContainText('Learn React');
    });
**Steps**
  1. Follow the How to get started steps to set up for component testing
  2. Install `react` and `react-dom` manually (not included with template)
  3. Add `src/App.tsx` file manually (not included with template)
  4. `npm run test-ct`
**Expected**
Tests transpile successfully and execute.
**Actual**
All tests fail with the following error:
        ReferenceError: React is not defined
          5 |
          6 | test('should work', async ({ mount }) => {
        > 7 |   const component = await mount();
            |                                 ^
          8 |   await expect(component).toContainText('Learn React');
          9 | });