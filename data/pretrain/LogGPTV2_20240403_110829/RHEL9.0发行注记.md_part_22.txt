:::
在以前的版本中，`usbguard-selinux`{.literal} 软件包依赖于
`usbguard`{.literal}
软件包。这与这些软件包的其它依赖关系相结合，这会导致安装
`usbguard`{.literal} 时存在文件冲突。因此，这会阻止在某些系统上安装
`usbguard`{.literal}。在这个版本中，`usbguard-selinux`{.literal}
不再依赖于 `usbguard`{.literal}，因此 `dnf`{.literal} 可以正确安装
`usbguard`{.literal}。
([BZ#1986785](https://bugzilla.redhat.com/show_bug.cgi?id=1986785){.link})
[]{#_bug_fixes.html#BZ-1932225}
::: title
**`dnf install`{.literal} 和 `dnf update`{.literal} 现在可以在 SELinux
中使用 `fapolicyd`{.literal}**
:::
`fapolicyd-selinux`{.literal} 软件包包含 fapolicyd 的 SELinux
规则，不包含监视所有文件和目录的权限。因此，`fapolicyd-dnf-plugin`{.literal}
无法正常工作，从而导致任何 `dnf install`{.literal} 和
`dnf update`{.literal}
命令使系统无限期停止响应。在这个版本中，监视任何文件类型的权限被添加到
`fapolicyd-selinux`{.literal} 中。因此，`fapolicyd-dnf-plugin`{.literal}
可以正常工作，并且 `dnf install`{.literal} 和 `dnf update`{.literal}
命令可以正常工作。
(BZ#1932225)
[]{#_bug_fixes.html#BZ-2037215}
::: title
**现在，功能被正确应用到非 root 用户**
:::
作为一种安全措施，将 UID（用户标识符）从 root 更改为非 root
为空，通知允许的、有效和低组能力。
但是，`pam_cap.so`{.literal}
模块无法设置不便的能力，因为一个能力需要同时位于允许的并且可继承的设置中。此外，允许的设置在更改
UID（例如使用 `setuid`{.literal}
实用程序）后为空，因此无法设置不便能力。
要解决这个问题，`pam_cap.so`{.literal} 模块现在支持 `keepcaps`{.literal}
选项，该选项允许在将 UID 从 root 更改为非 root
后保留其允许的功能。`pam_cap.so`{.literal} 模块现在支持
`defer`{.literal} 选项，该选项会导致 `pam_cap.so`{.literal} 在回调中的
pam_cap.so 中重新应用到 `pam_end（）`{.literal} 的功能。更改 UID
后，其他应用程序可使用此回调。
因此，如果 `su`{.literal} 和 `login`{.literal} 工具被更新并符合
PAM，您现在可以使用 `pam_cap.so`{.literal} 和 `keepcaps`{.literal} 和
`defer`{.literal} 选项为非 root 用户设置不便功能。
([BZ#2037215](https://bugzilla.redhat.com/show_bug.cgi?id=2037215){.link})
[]{#_bug_fixes.html#BZ-2009226}
::: title
**`usbguard-notifier`{.literal} 不再将太多错误消息记录到 Journal**
:::
在以前的版本中，`usbguard-notifier`{.literal} 服务没有连接到
`usbguard-daemon`{.literal} IPC
接口的进程间通信(IPC)权限。因此，`usbguard-notifier`{.literal}
无法连接到接口，它会将对应的错误消息写入 Journal。由于
`usbguard-notifier`{.literal} 使用 `--wait`{.literal} 选项启动，因此
`usbguard-notifier`{.literal} 会在连接失败后尝试每秒连接到 IPC
接口，默认情况下日志会很快包含大量这些消息。
在这个版本中，`usbguard-notifier`{.literal} 默认不以 `--wait`{.literal}
开始。该服务只尝试连接到 守护进程的三倍（以 1
秒为单位）。因此，日志包含最多三个这样的错误消息。
([BZ#2009226](https://bugzilla.redhat.com/show_bug.cgi?id=2009226){.link})
:::
::: section
::: titlepage
# []{#_bug_fixes.html#bug-fix_networking}网络 {.title}
:::
[]{#_bug_fixes.html#BZ-1975718}
::: title
**WiFi 和 802.1x 以太网连接配置集现在被正确连接**
:::
在以前的版本中，很多 Wifi 和 802.1x
以太网连接配置集无法连接。这个程序漏洞现已解决。现在，所有配置集都可以正常工作。使用旧加密算法的配置集仍可以正常工作，但您需要手动启用
OpenSSL 旧供应商。例如，当使用带有 MS-CHAPv2 和 RC4 和 TKIP 的 RC4
时，这是必需的。
([BZ#1975718](https://bugzilla.redhat.com/show_bug.cgi?id=1975718){.link})
[]{#_bug_fixes.html#BZ-2008521}
::: title
**Afterburn 不再在 `/etc/hostname`{.literal}中设置超过长主机名**
:::
RHEL 主机名的最大长度为 64
个字符。但是，某些云提供商使用完全限定域名(FQDN)作为主机名，最多可包含
255 个字符。在以前的版本中，`afterburn-hostname`{.literal}
服务将此类主机名直接写入 `/etc/hostname`{.literal}
文件。`systemd`{.literal} 服务将主机名截断为 64 个字符，NetworkManager
从截断后的值派生出不正确的 DNS 搜索域。在这个版本中,
`afterburn-hostname`{.literal} truncates 主机名在第一个点或 64
个字符时被省略，以两者为准。因此，NetworkManager 不再在
`/etc/resolv.conf`{.literal} 中设置无效的 DNS 搜索域。
([BZ#2008521](https://bugzilla.redhat.com/show_bug.cgi?id=2008521){.link})
:::
::: section
::: titlepage
# []{#_bug_fixes.html#bug-fix_kernel}内核 {.title}
:::
[]{#_bug_fixes.html#BZ-1985100}
::: title
**`modprobe`{.literal} 按预期加载树外内核模块**
:::
`/etc/depmod.d/dist.conf`{.literal} 配置文件为 `depmod`{.literal}
程序提供搜索顺序。根据搜索顺序，`depmod`{.literal} 创建
`modules.dep.bin`{.literal} 文件。此文件列出了 `modprobe`{.literal}
实用程序用来加载和卸载内核模块并同时解析模块依赖项的模块依赖项。在以前的版本中，`/etc/depmod.d/dist.conf`{.literal}
缺失。因此，`modprobe`{.literal}
无法加载一些树外的内核模块。这个版本包括
`/etc/depmod.d/dist.conf`{.literal}
配置文件，该文件修复了搜索顺序。因此，`modprobe`{.literal}
会如预期加载树外内核模块。
([BZ#1985100](https://bugzilla.redhat.com/show_bug.cgi?id=1985100){.link})
[]{#_bug_fixes.html#BZ-2046472}
::: title
**系统可以成功运行动态 LPAR 操作**
:::
在以前的版本中，如果满足以下条件之一，用户无法从硬件管理控制台(HMC)运行动态逻辑分区(DLPAR)操作：
::: itemizedlist
-   启用安全引导功能，以隐式在完整性模式下启用内核锁定机制。``{.literal}
-   在完整性或机密模式下手动启用了内核锁定机制。``{.literal}
:::
在 RHEL 9 中，内核 `锁定`{.literal} 完全阻止了 Run Time Abstraction
Services(RTAS)访问通过 `/dev/mem`{.literal}
字符设备文件访问系统内存。多个 RTAS 调用需要对 `/dev/mem`{.literal}
进行写入访问权限才能正常工作。因此，RTAS
调用无法正确执行，用户会看到以下错误消息：
``` screen
HSCL2957 Either there is currently no RMC connection between the management console and the partition  or the partition does not support dynamic partitioning operations. Verify the network setup on the management console and the partition and ensure that any firewall authentication between the management console and the partition has occurred. Run the management console diagrmc command to identify problems that might be causing no RMC connection.
```
在这个版本中，这个问题已通过提供非常缩小的 PowerPC 异常 `锁定`{.literal}
来解决。例外允许 RTAS 访问所需的 `/dev/mem`{.literal}
区域。因此，这个问题不再在上述场景中的清单。
(BZ#2046472)
[]{#_bug_fixes.html#BZ-2015863}
::: title
**`alsa-lib`{.literal} 现在可以正确地处理使用 UCM 的音频设备**
:::
`alsa-lib`{.literal}
软件包中的错误导致内部用例管理器(UCM)标识符错误解析。因此，有些使用 UCM
配置的音频设备没有被检测到，或者它们无法正常工作。当系统使用
`pipewire`{.literal} 声音服务时，这个问题更为频繁。在 RHEL 9
的新版本中，更新 `alsa-lib`{.literal} 库解决了这个问题。
([BZ#2015863](https://bugzilla.redhat.com/show_bug.cgi?id=2015863){.link})
:::
::: section
::: titlepage
# []{#_bug_fixes.html#bug-fix_file-systems-and-storage}文件系统和存储 {.title}
:::
[]{#_bug_fixes.html#BZ-2017979}
::: title
**保护 uevents 不再导致多路径设备重新载入失败**
:::
在以前的版本中，当重新扫描 `只读`{.literal}
路径设备时，内核会发送两个写保护 uevents - 一个设备被设为
`读/写`{.literal}，以下设备被设为
`只读`{.literal}。因此，在路径设备上检测到 `读/写`{.literal} uevent
时，`multipathd`{.literal}
会尝试重新载入多路径设备，这会导致重新载入错误信息。有了这个更新，`multipathd`{.literal}
会在重新载入读/写设备前，检查所有路径是否被设置为 `读/写`{.literal}
。因此，当重新扫描 `只读`{.literal} 设备时，`multipathd`{.literal}
不再尝试重新载入 `读/写`{.literal}。
(BZ#2017979)
[]{#_bug_fixes.html#BZ-2017592}
::: title
**`device-mapper-multipath`{.literal} 被 rebase 到版本 0.8.7**
:::
`device-mapper-multipath`{.literal} 软件包已升级至 0.8.7
版本，提供多个程序错误修复和增强。主要变更包括：
::: itemizedlist
-   修复了 `多路径`{.literal} 和 `kpartx`{.literal}
    命令中的内存泄漏的问题。
-   修复了 `multipathd.socket`{.literal} 单元文件中的重复触发器错误。
-   改进了更多设备的自动配置，如 DELL SC 系列数组、EMC Invista 和
    Symmetrix 数组（如果是其他设备）。
:::
([BZ#2017592](https://bugzilla.redhat.com/show_bug.cgi?id=2017592){.link})
:::
::: section
::: titlepage
# []{#_bug_fixes.html#bug-fix_high-availability-and-clusters}高可用性和集群 {.title}
:::
[]{#_bug_fixes.html#BZ-1975388}
::: title
**Pacemaker 属性管理器可以正确地决定远程节点属性，阻止取消隔离循环**
:::
在以前的版本中，在节点上 Pacemaker 的控制器可能会选择 Designated
Controller(DC)，然后其属性管理器发现一个已经主动的远程节点是远程的。发生这种情况时，节点的调度程序不会看到任何远程节点的节点属性。如果集群使用了
unfencing，则可能会导致无法发生循环。在这个版本中，属性管理器可以通过额外的事件来远程了解远程节点，包括启动时的初始属性同步。因此，无论哪个节点被选择使用
DC，都不会发生取消隔离循环。
([BZ#1975388](https://bugzilla.redhat.com/show_bug.cgi?id=1975388){.link})
:::
::: section
::: titlepage
# []{#_bug_fixes.html#bug-fix_compilers-and-development-tools}编译器和开发工具 {.title}
:::
[]{#_bug_fixes.html#BZ-1481850}
::: title
**`-Wsequence-point`{.literal} 警告行为修复**
:::
在以前的版本中，当使用 GCC 编译 C++ 程序时，`-Wsequence-point`{.literal}
警告选项会尝试警告非常长的表达式，因此可能导致量化行为，因此会显著编译时间。在这个版本中，`-Wsequence-point`{.literal}
不会试图警告非常大的表达式，因此不会增加编译时间。
(BZ#1481850)
:::
::: section
::: titlepage
# []{#_bug_fixes.html#bug-fix_identity-management}Identity Management {.title}
:::
[]{#_bug_fixes.html#BZ-2039684}
::: title
**FIPS 模式现在支持 `aesouriercts-hmac-sha1-96`{.literal} 和
`aesmcmcts-hmac-sha1-96`{.literal} 加密类型**
:::
在以前的版本中，Kerberos 在 RHEL 9 上无法使用
`aesxetexcts-hmac-sha1-96`{.literal} 和
`aesxetexcts-hmac-sha1-96`{.literal} 加密类型，因为在 RHEL 9 中弃用了