`gfs2_glock_lock_time`{.literal} 追踪点提供了请求到 DLM
的时间的信息。阻塞(`b`{.literal})标志被加入到 glock
中，专门用于与这个追踪点结合使用。
当为拥有者授予锁定时，会调用
`gfs2_promote`{.literal}，这是作为状态更改的最后阶段，或者请求锁定时，因为
glock 状态已经缓存了合适的模式，可立即授予该锁定。如果拥有者是授予这个
glock 的第一个拥有者，那么就会在该拥有者中设定
f（第一个）标记。目前，这只由资源组使用。
:::
::: section
::: titlepage
# []{#con_gfs2-tracepoints-configuring-gfs2-file-systems.html#ap-bmap-tracepoints-gfs2}Bmap 追踪点 {.title}
:::
块映射对任何文件系统都是一个核心任务。GFS2
使用传统的基于位图的系统，每个块有两个位。这个子系统中的追踪点的主要目的是，允许监控分配和映射块的时间。
对于每个 bmap 操作，`gfs2_bmap`{.literal}
跟踪点都会被调用两次：一次在开始显示 bmap
请求，一次在结尾以显示结果。这样可轻松地将请求和结果匹配，并测量在文件系统的不同部分映射块、不同文件偏移甚至不同文件所需时间。也可以查看返回的平均扩展大小与请求的比较。
`gfs2_rs`{.literal} 追踪点在块分配器中创建、使用和销毁块保留时进行跟踪。
要追踪分配的块，`gfs2_block_alloc`{.literal}
不仅在分配时被调用，在释放块时也会被调用。由于分配都是根据块针对的索引节点引用的，因此这可用于跟踪哪些物理块属于实时文件系统中的文件。这在与
`blktrace`{.literal}合并时特别有用，这会显示有问题的 I/O
模式，然后使用追踪点提供的映射将其返回到相关的内节点。
直接
I/O(`iomap`{.literal})是替代的缓存策略，允许在磁盘和用户缓冲之间直接进行文件数据传输。当缓存的匹配率低时，这将非常有用。`gfs2_iomap_start`{.literal}
和 `gfs2_iomap_end`{.literal} 追踪点会跟踪这些操作，并可用于跟踪使用直接
I/O 的映射，即 Direct I/O 文件系统中的位置以及操作类型。
:::
::: section
::: titlepage
# []{#con_gfs2-tracepoints-configuring-gfs2-file-systems.html#ap-log-gracepoints-gfs2}日志追踪点 {.title}
:::
这个子系统中的追踪点会跟踪添加到日志或从日志中删除的块（`gfs2_pin`{.literal}），以及提交事务到日志的时间（`gfs2_log_flush`{.literal}）。这在调试日志性能问题时非常有用。
`gfs2_log_blocks`{.literal}
追踪点记录日志中保留的块，这有助于显示日志是否太小的工作负载。
`gfs2_ail_flush`{.literal} 追踪点与 `gfs2_log_flush`{.literal}
追踪点，它跟踪 AIL 列表的开始和结束。AIL
列表包含已通过日志、但尚未写回原样的缓冲，并定期刷新，以便释放更多日志空间以供文件系统使用，或者当进程请求
`sync`{.literal} 或 `fsync`{.literal} 时。
:::
::: section
::: titlepage
# []{#con_gfs2-tracepoints-configuring-gfs2-file-systems.html#ap-glockstats-gfs2}Glock 统计 {.title}
:::
GFS2
维护可帮助您跟踪文件系统中正在运行的统计信息。这可让您发现性能问题。
GFS2 维护两个计数器：
::: itemizedlist
-   `dcount`{.literal}，它计算请求的 DLM
    操作数量。这显示了在平均/变量计算中的数据量。
-   `qcount`{.literal}，计算请求的 `syscall`{.literal}
    级别操作数量。通常 `qcount`{.literal} 等于或大于
    `dcount`{.literal}。
:::
另外，GFS2
维护三个平均/变量对。平均/变量对是平滑度估算，使用的算法是用于计算网络代码中往返时间的算法。
GFS2 中维护的平均和不同对没有扩展，而是以整数纳秒为单位。
::: itemizedlist
-   srtt/srttvar：非阻塞操作的往返时间
-   srttb/srttvarb：阻塞操作的往返用时
-   irtt/irttvar：请求间的时间（例如，DLM 请求之间的时间）
:::
非阻塞请求是一个马上完成的请求，无论有疑问的 DLM
锁定状态如何。这当前意味着，请求的条件为 (a) 当前的锁定状态为专用（
exclusive）；(b) 请求的状态为 null 或者非锁定（unlocked）；或 (c)
设定了\"try lock\"标记。其他锁定请求都为阻塞请求。
对于 IRTTs 来说，较大的时间比较好；对于 RTTs 来说，比较小的时间更好。
统计数据保存在两个 `sysfs`{.literal} 文件中：
::: itemizedlist
-   `glstats`{.literal} 文件。这个文件与 `glocks`{.literal}
    文件类似，但它包含统计信息，一个 glock 占用一行。数据从创建 glock
    类型的 \"per cpu\"
    数据初始化（计数器除外，它为零）。这个文件可能非常大。
-   `lkstats`{.literal} 文件。它为每个 glock 类型包含 \"per cpu\"
    统计信息。它每行包含一个统计数据，每列都是一个 cpu 内核。每个 glock
    类型有 8 行，一个类型跟随另一个类型。
:::
:::
::: section
::: titlepage
# []{#con_gfs2-tracepoints-configuring-gfs2-file-systems.html#ap-references-gfs2}参考 {.title}
:::
有关追踪点和 GFS2 `glocks`{.literal} 文件的详情请参考以下资源：
::: itemizedlist
-   有关 glock 内部锁定规则的详情，请参考
    [https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/Documentation/filesystems/gfs2-glocks.rst](https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/Documentation/filesystems/gfs2-glocks.rst){.link}。
-   有关事件追踪的详情，请参考
    [https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/Documentation/trace/events.rst](https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/Documentation/trace/events.rst){.link}。
-   如需 `trace-cmd`{.literal} 工具程序的信息，请参阅
    [http://lwn.net/Articles/341902/](http://lwn.net/Articles/341902/){.link}。
:::
:::
:::
[]{#assembly_analyzing-gfs2-with-pcp-configuring-gfs2-file-systems.html}
::: chapter
::: titlepage
# []{#assembly_analyzing-gfs2-with-pcp-configuring-gfs2-file-systems.html#assembly_analyzing-gfs2-with-pcp-configuring-gfs2-file-systems}第 9 章 使用 Performance Co-Pilot(PCP)监控和分析 GFS2 文件系统. {.title}
:::
Performance Co-Pilot(PCP)可帮助监控和分析 GFS2 文件系统。监控 PCP 中的
GFS2 文件系统是由 Red Hat Enterprise Linux 中的 GFS2 PMDA
模块提供的，该模块可通过 `pcp-pmda-gfs2`{.literal} 软件包获得。
GFS2 PMDA 提供很多由 `debugfs`{.literal} 子系统提供的 GFS2
统计给出的指标。安装后，PMDA 会公开
`glocks`{.literal}、`glstats`{.literal}和 `sbstats`{.literal}
文件中给出的值。报告每个挂载的 GFS2 文件系统的统计组。PMDA
还使用内核功能跟踪器(`ftrace`{.literal})公开的 GFS2 内核追踪点。
::: section
::: titlepage
# []{#assembly_analyzing-gfs2-with-pcp-configuring-gfs2-file-systems.html#proc_installing-gfs2-pdma-analyzing-gfs2-with-pcp}安装 GFS2 PMDA {.title}
:::
为了正常操作，GFS2 PMDA 要求挂载 `debugfs`{.literal}
文件系统。如果没有挂载 `debugfs`{.literal} 文件系统，请在安装 GFS2 PMDA
前运行以下命令：
``` literallayout
# mkdir /sys/kernel/debug
# mount -t debugfs none /sys/kernel/debug
```
在默认安装中不启用 GFS2 PMDA。要通过 PCP 使用 GFS2
指标监控，您必须在安装后启用它。
运行以下命令来安装 PCP 并启用 GFS2 PMDA。请注意，PMDA 安装脚本必须以
root 用户身份运行。
``` literallayout
# yum install pcp pcp-pmda-gfs2
# cd /var/lib/pcp/pmdas/gfs2
# ./Install
Updating the Performance Metrics Name Space (PMNS) ...
Terminate PMDA if already installed ...
Updating the PMCD control file, and notifying PMCD ...
Check gfs2 metrics have appeared ... 346 metrics and 255 values
```
:::
::: section
::: titlepage
# []{#assembly_analyzing-gfs2-with-pcp-configuring-gfs2-file-systems.html#proc_examining-number-of-glocks-analyzing-gfs2-with-pcp}使用 pminfo 工具显示可用性能指标的信息 {.title}
:::
`pminfo`{.literal}
工具显示有关可用性能指标的信息。以下示例显示您可以使用这个工具显示的不同
GFS2 指标。
::: section
::: titlepage
## []{#assembly_analyzing-gfs2-with-pcp-configuring-gfs2-file-systems.html#examining_the_number_of_glock_structures_that_currently_exist_per_file_system}检查每个文件系统目前存在的 glock 结构数 {.title}
:::
GFS2 glock 指标可让您了解当前挂载的 GFS2 文件系统的 glock
结构数及其锁定状态。在 GFS2 中，glock 是一个数据结构，它将合并 DLM
并缓存到单个状态机器。每个 glock 都有一个带有单一 DLM
锁定的映射，为锁定状态提供缓存，使得在单个节点中进行的重复操作不必重复调用
DLM，从而减少不必要的网络流量。
以下 `pminfo`{.literal} 命令根据其锁定模式显示每个挂载的 GFS2 文件系统的
glocks 数列表。
``` literallayout
# pminfo -f gfs2.glocks
gfs2.glocks.total
    inst [0 or "afc_cluster:data"] value 43680
    inst [1 or "afc_cluster:bin"] value 2091
gfs2.glocks.shared
    inst [0 or "afc_cluster:data"] value 25
    inst [1 or "afc_cluster:bin"] value 25
gfs2.glocks.unlocked
    inst [0 or "afc_cluster:data"] value 43652
    inst [1 or "afc_cluster:bin"] value 2063
gfs2.glocks.deferred
    inst [0 or "afc_cluster:data"] value 0
    inst [1 or "afc_cluster:bin"] value 0
gfs2.glocks.exclusive
    inst [0 or "afc_cluster:data"] value 3
    inst [1 or "afc_cluster:bin"] value 3
```
:::
::: section
::: titlepage
## []{#assembly_analyzing-gfs2-with-pcp-configuring-gfs2-file-systems.html#examining_the_number_of_glock_structures_that_exist_per_file_system_by_type}根据类型检查每个文件系统目前存在的 glock 结构数 {.title}
:::
GFS2 glstats 指标给出了每种 glock 类型的计数，这些 glock 每个 ystem
文件都存在，它们通常属于内节点（inode 和
metadata）或者资源组（资源组元数据）类型。
以下 `pminfo`{.literal} 命令显示每个挂载的 GFS2 文件系统中的每种 Glock
类型的数目。
``` literallayout