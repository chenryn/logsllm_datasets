一行。
11.1.11 唯一性分类
有时，原文件中有重复行，这时可以使用 - u选项进行唯一性（不重复）分类以去除重复
行，本例中A l i e n有相同的两行。带重复行的文件如下，其中A l i e n插入了两次：
使用- u选项去除重复行，不必加其他选项，s o r t会自动处理。
加入java编程群：524621833
108
第二部分 文本过滤
下载
11.1.12 使用k的其他sort方法
s o r t还有另外一些方法指定分类键。可以指定 k选项，第1域（分类键）以1开始。不要与
前面相混淆。我经常使用这个选项。因为我习惯于第一域为数值 1，这样使用s o r t时用同样的
数值做分类依据会更有意义。其他选项也可以使用 k，主要用于指定分类域开始的字符数目。
要在第1域进行分类，可以使用- k 4，这是按年租金分类的次序。
11.1.13 使用k做分类键排序
可以指定分类键次序。先以第4域，再以第1域分类，命令为-k4 -k1，也可以反过来，以
便在文件首行显示最高年租金，方法如下：
11.1.14 指定sort序列
可以指定分类键顺序，也可以使用 - n选项指定不使用哪个分类键进行查询。看下面的 s o r t
命令：
该命令意即开始以域0分类，忽略域2，然后再使用域3分类。
11.1.15 pos用法
指定开始分类的域位置的另一种方法是使用如下格式：
意即从f i e l d _ n u m b e r开始分类，但是要在此域的第c h a r a c t e r s _ i n个字符开始。
这里是一个例子，供应区代码加入一些后缀。如：
加入java编程群：524621833
109
第11章 合并与分割
下载
要只使用供应区代码后缀部分将文件分类，其命令为 + 1 . 2，意即以第1域最左边第3个字
符开始分类，其具体含义及脚本如下：
11.1.16 使用head和tail将输出分类
分类操作时，不一定要显示整个文件或一页以查看 s o r t结果中的第一和最后一行。如果只
显示最高年租金，按第4域分类- k 4并求逆，然后使用管道只显示s o r t输出的第一行，此命令为
h e a d，可以指定查阅行数。如果只有第一行，则为head -1：
要查阅最低年租金，使用t a i l命令与h e a d命令刚好相反，它显示文件倒数几行。1为倒数一
行，2为倒数两行等等。查阅最后一行为 tail -1。结合上述的s o r t命令和t a i l命令显示最低年租
金：
可以使用h e a d或t a i l查阅任何大的文本文件，h e a d用来查阅文件头，基本格式如下：
Ta i l用来查阅文件尾，基本格式为：
如果使用h e a d或t a i l时想省略显示行数，缺省时显示1 0行。
要查阅文件前2 0行：
要查阅文件后7行：
11.1.17 awk使用sort输出结果
对数据分类时，对s o r t结果加一点附加信息很有必要，对其他用户尤其如此。使用 a w k可
以轻松完成这一功能。比如说采用上面最低租金的例子，需要将 s o r t结果管道输出到a w k，不
要忘了用冒号作域分隔符，显示提示信息和实际数据。
加入java编程群：524621833
110
第二部分 文本过滤
下载
11.1.18 将两个分类文件合并
将文件合并前，它们必须已被分类。合并文件可用于事务处理和任何种类的修改操作。
下面这个例子，因为忘了把两个家电名称加入文件，它们被放在一个单独的文件里，现在将
之并入一个文件。分类的合并格式为‘sort -m sorted_file1 sorted_file2，下面是包含两个新家
电名称的文件列表，它已经分类完毕：
使用-m +o。将这个文件并入已存在的分类文件v i d e o . s o r t，要以名称域进行分类，实际上
没有必要加入+ o，但为了保险起见，还是加上的好。
11.2 系统sort
s o r t可以用来对/ e t c / p a s s w d文件中用户名进行分类。这里需要以第 1域即注册用户名分类，
然后管道输出结果到a w k，a w k打印第一域。
s o r t还可以用于d f命令，以递减顺序打印使用列。下面是一般d f输出。
使用- b选项，忽略分类域前面的空格。使用域 4（+ 4），即容量列将分类求逆，最后得出
文件系统自由空间的清晰列表。
在一个文本文件中存入所有 I P地址的拷贝，这样查看本机 I P地址更容易一些。有时如果
在管理员权限下，就需要将此文件分类。将 I P地址按文件中某种数值次序分类时，需要指定
加入java编程群：524621833
111
第11章 合并与分割
下载
域分隔符为句点。这里只需关心I P地址的最后一段。分类应从此域即域3开始，未分类文件如
下：
分类后结果如下：
11.3 uniq用法
u n i q用来从一个文本文件中去除或禁止重复行。一般u n i q假定文件已分类，并且结果正确。
我们并不强制要求这样做，如果愿意，可以使用任何非排序文本，甚至是无规律行。
可以认为u n i q有点像s o r t命令中唯一性选项。对，在某种程度上讲正是如此，但两者有一
个重要区别。s o r t的唯一性选项去除所有重复行，而u n i q命令并不这样做。重复行是什么？在
u n i q里意即持续不断重复出现的行，中间不夹杂任何其他文本，现举例如下：
u n i q将前三个May Day看作重复副本，但是因为第4行有不同的文本，故并不认为第五行
持续的May Day为其副本。u n i q将保留这一行。
命令一般格式：
其选项含义：
-u 只显示不重复行。
-d 只显示有重复数据行，每种重复行只显示其中一行
-c 打印每一重复行出现次数。
-f n为数字，前n个域被忽略。
一些系统不识别- f选项，这时替代使用- n。
使用本节开始时的文本，创建文件m y f i l e . t x t，在此文件上运行u n i q命令。
注意第5行保留下来，其文本为最后一行May Day。如果运行sort -u，将只返回May Day
和Going Down。
加入java编程群：524621833
112
第二部分 文本过滤
下载
连续重复出现
使用- c选项显示行数，即每个重复行数目。本例中，行May Day重复出现三次。
1. 不唯一
使用- d显示重复出现的不唯一行：
2. 对特定域进行测试
使用- n只测试一行一部分的唯一性。例如 - 5意即测试第5域后各域唯一性。域从 1开始记
数。
如果忽略第1域，只测试第2域唯一性，使用- n 2，下述文件包含一组数据，其中第 2域代
表组代码。
运行u n i q，将返回所有行。因为这个文件每一行都不同。
如果指定测试在第1域后，结果就会不同。u n i q会比较三个相同的O P，因此将返回一行。
如果‘- f’返回错误，替代使用：
11.4 join用法
j o i n用来将来自两个分类文本文件的行连在一起。如果学过 S Q L语言，可能会很熟悉j o i n
命令。
下面讲述j o i n工作方式。这里有两个文件f i l e 1和f i l e 2，当然已经分类。每个文件里都有一
些元素与另一个文件相关。由于这种关系， j o i n将两个文件连在一起，这有点像修改一个主文
件，使之包含两个文件里的共同元素。
文本文件中的域通常由空格或t a b键分隔，但如果愿意，可以指定其他的域分隔符。一些
系统要求使用j o i n时文件域要少于2 0，为公平起见，如果域大于2 0，应使用D B M S系统。
为有效使用j o i n，需分别将输入文件分类。
其一般格式为：
加入java编程群：524621833
113
第11章 合并与分割
下载
让我们看看它的可用选项列表：
an n为一数字，用于连接时从文件 n中显示不匹配行。例如，- a 1显示第一个文件的不匹
配行，- a 2为从第二个文件中显示不匹配行。
o n.m n为文件号，m为域号。1 . 3表示只显示文件1第三域，每个n，m必须用逗号分隔，
如1 . 3，2 . 1。
j n m n为文件号，m为域号。使用其他域做连接域。
t 域分隔符。用来设置非空格或t a b键的域分隔符。例如，指定冒号做域分隔符- t：。
现有两个文本文件，其中一个包含名字和街道地址，称为n a m e . t x t，另一个是名字和城镇，
为t o w n . t x t。
连接两个文件
连接两个文件，使得名字支持详细地址。例如 M . G o l l s记录指出地址为12 Hidd Rd。连接
域为域0—名字域。因为两个文件此域相同，j o i n将假定这是连接域：
好，工作完成。缺省j o i n删除或去除连接键的第二次重复出现，这里即为名字域。
1. 不匹配连接
如果一个文件与另一个文件没有匹配域时怎么办？这时 j o i n不可以没有参数选项，经常指
定两个文件的- a选项。下面的例子显示匹配及不匹配域。
输出表明P. H e l l e r不匹配第二个文件中任何一个记录。再运行这个命令，但指定只显示第
一个文件中不匹配行：
2. 选择性连接
使用- o选项选择连接域。例如要创建一个文件仅包含人名及城镇， j o i n执行时需要指定显
示域。方式如下：
使用1. 1 显示第一个文件第一个域，2. 2 显示第二个文件第二个域，其间用逗号分隔。命令为：
加入java编程群：524621833
114
第二部分 文本过滤
下载
要创建此新文件，将输出结果重定向到一个文件即可。
使用-jn m进行其他域连接，例如用文件1域3和文件域2做连接键，命令为：
下面观察一个具体实例。有两个文件：
文件p e r s包括名字、工作性质和个人I D号。文件p e r s 2包括部门、个人I D号及工龄。连接
应使用文件p e r s中域4，匹配文件p e r s 2中域2，命令及结果如下：
使用j o i n应注意连接域到底是哪一个，比如说你认为正在访问域 4，但实际上j o i n应该访问
域5，这样将不返回任何结果。如果是这样，用a w k检查域号。例如，键入$ awk '{print $4}'文
件名，观察其是否匹配假想域。
11.5 cut用法
c u t用来从标准输入或文本文件中剪切列或域。剪切文本可以将之粘贴到一个文本文件。
下一节将介绍粘贴用法。
c u t一般格式为：
cut [options] file1 file2
下面介绍其可用选项：
-c list 指定剪切字符数。
-f field 指定剪切域数。
-d 指定与空格和t a b键不同的域分隔符。
- c用来指定剪切范围，如下所示：
- c 1，5-7 剪切第1个字符，然后是第5到第7个字符。
-c1-50 剪切前5 0个字符。
-f 格式与- c相同。
-f 1，5 剪切 第1域，第5域。
- f 1，10-12 剪切第1域，第1 0域到第1 2域。
参照上一节中的文件‘p e r s’，现在从' p e r s '文件中剪切文本。使用冒号做其域分隔符。
加入java编程群：524621833
115
第11章 合并与分割
下载
11.5.1 使用域分隔符
文件中使用冒号“：”为域分隔符，故可用- d选项指定冒号，如- d：。如果有意观察第3域，
可以使用- f 3。要抽取I D域。可使用命令如下：
11.5.2 剪切指定域
c u t命令中剪切各域需用逗号分隔，如剪切域1和3，即名字和I D号，可以使用：
要从文件/ e t c / p a s s w d中剪切注册名及缺省根目录，需抽取域1和域3：
…
使用- c选项指定精确剪切数目。这种方法需确切知道开始及结束字符。通常我不用这种方
法，除非在固定长度的域或文件名上。
当信息文件传送到本机时，查看部分文件名就可以识别文件来源。要得到这条信息需抽
取文件名后三个字符。然后才决定将之存在哪个目录下。下面的例子显示文件名列表及相应
c u t命令：
如果使用ls -l命令作部分输出，情况将不同。需使用- c选项。
要剪切字符，须计算ls -l列表中的字符数。如显示权限用 cut -c1-10。然而这种方法可能
相当慢，因此需要使用其他工具将相应信息抽取出来。要剪切谁正在使用系统的用户信息，