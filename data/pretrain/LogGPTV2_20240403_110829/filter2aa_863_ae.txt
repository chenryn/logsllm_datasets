12.29547954) = 1.0000000399999
CS(90000a05b, t1) = (3.774681365 - 3.624681109)/(6.256995869 - 
6.106995629) = 1.0000001066665
CS(90000a05e, t1) = (3.774681365 - 3.624681109)/(14.5394791 - 
14.38947882) = 0.9999998400003
sTs(reference, t0) = 3.624681109 
sTs(90000a05a, t0) = 12.29547954 
sTs(90000a05b, t0) = 6.106995629 
sTs(90000a05e, t0) = 14.38947882
sTs(reference, t1) = 3.774681365 
sTs(90000a05a, t1) = 12.44547979 
sTs(90000a05b, t1) = 6.256995869 
sTs(90000a05e, t1) = 14.5394791
pTs(reference, 1300000020, t1) = 3.967019137 
pTs(90000a05a, 1300000020, t1) = 12.63781749 
pTs(90000a05b, 1300000020, t1) = 6.449333591 
pTs(90000a05e, 1300000020, t1) = 14.7318168
ToF(reference) = sqrt((0 - 0)^2 + (0 - 0)^2)/c = 0 s
ToF(90000a05a) = sqrt((6.3308356 - 0)^2 + (0 - 0)^2)/c = 
2.11174E-08 s
ToF(90000a05b) = sqrt((6.989999001 – 0)^2 + (-5.28999995 – 
0)^2)/c = 2.92405E-08 s
ToF(90000a05e) = sqrt((-0.2500003 – 0)^2 + (-4.91999999 – 
0)^2)/c = 1.64325E-08 s
GT(reference, 1300000020, t1) = 1 * (3.967019137 - 3.774681365) 
- 0 = 0.192337772 s
GT(90000a05a, 1300000020, t1) = 1.0000000399999 * 
(12.63781749 - 12.44547979) + 2.11174E-08 = 0.192337773 s
GT(90000a05b, 1300000020, t1) = 1.0000001066665 * 
(6.449333591 - 6.256995869) + 2.92405E-08 = 0.192337772 s
GT(90000a05e, 1300000020, t1) = 0.9999998400003 * 
(14.73181684 - 14.5394791) + 1.64325E-08 = 0.192337773 s
Delta(reference, 1300000020, t1) = (0.192337772 - 0.192337772) * 
299792458 = 0 m
Delta(90000a05a, 1300000020, t1) = (0.192337772 - 0.192337773) 
* 299792458 = -0.299792458 m
Delta(90000a05b, 1300000020, t1) = (0.192337772 - 0.192337772) 
* 299792458 = 0 m
Delta(90000a05e, 1300000020, t1) = (0.192337772 - 0.192337773) 
* 299792458 = -0.299792458 m
41
WHITE PAPER
UWB Real Time Locating Systems: How Secure Radio Communications May Fail in Practice
2. Methodology and Attack Demos
Finally, it is possible to generate all available equations of the non-linear system of equations.
As we are interested in two coordinates, only two equations 
are needed to compute a solution. For instance, in case we 
solve a system using the second and third equations, the result 
is shown in Figure 46. It is also possible to use the additional 
available information to increase the precision of the computed 
tag position, which may be influenced by external factors.
Figure 47 reports the plot of the computed position on a chart.
-0.299792458 = sqrt(X1300000020,t1^2 + Y1300000020,t1^2) - sqrt((X1300000020,t1-6.3308356)^2 + Y1300000020,t1^2)
0 = sqrt(X1300000020,t1^2 + Y1300000020,t1^2) - sqrt((X1300000020,t1-6.989999001)^2 + (Y1300000020,t1+5.28999995)^2)
-0.299792458 = sqrt(X1300000020,t1^2 + Y1300000020,t1^2) - sqrt((X1300000020,t1+0.250000299)^2 + (Y1300000020,t1+4.91999999)^2)
Figure 46 - Solution of a generated non-linear system of equations.
Figure 47 - Plot of the computed position of the target tag.
42
WHITE PAPER
UWB Real Time Locating Systems: How Secure Radio Communications May Fail in Practice
2. Methodology and Attack Demos
Figure 48 summarizes the entire procedure that is necessary for a passive eavesdropping attack.
2.5.3 Active Traffic Manipulation Attacks
With the ARP spoofing attack detailed in section 2.5.1, 
and using the same algorithm described in the previous 
section, an attacker is able to see all the traffic among 
the server and the anchors and reconstruct the position 
of arbitrary tags, the only constraint being that they must 
have a foothold on the same subnet. 
The logical question that arises at this point is: can an 
attacker leverage the acquired position to also perform 
active traffic manipulation attacks? There are many 
use cases and reasons that may induce an attacker to 
investigate this possibility. An example may be the desire 
to tamper with geofencing rules. In RTLS, geofencing 
rules can be configured, among other things, for access 
control purposes (an alert is triggered if a certain tag 
enters a restricted area), or anti-theft purposes (an alert is 
triggered if a certain tag leaves a defined area)25 (Figure 
49). If an attacker is able to alter the position of a tag by 
modifying the positioning packet related to that tag, it 
may become possible to enter restricted zones or steal 
valuable items without the operators being able to detect 
that a malicious activity is ongoing. Other examples will 
be described in the next sections.
Figure 48 - Passive eavesdropping attack summary.
25  "Geofencing Technology and Applications", Sewio.
43
WHITE PAPER
UWB Real Time Locating Systems: How Secure Radio Communications May Fail in Practice
2. Methodology and Attack Demos
Figure 49 - Anti-theft protection in RTLS.
To accomplish such an attack, three subtasks need to be 
accomplished:
 y Target Reconnaissance
 y Active Traffic Filtering
 y Packet Information Manipulation
Target Reconnaissance: In an active traffic manipulation 
attack, the goal of an adversary is to alter the position of 
a certain tag to make it appear at a desired coordinate 
instead of the real one.
To successfully deceive an operator into believing a certain 
tag is positioned at a given coordinate, it is important that 
the tag movements on the screen appear as natural as 
possible for the target. Therefore, it is crucial for an attacker 
to monitor the target position over a relevant time frame 
(e.g., one week, one month, or whatever is appropriate for 
the chosen target) and study their normal routine, to make 
the attack as believable as possible. For instance, if the 
target of an attack is a tag tracking the motion of a human 
being, faking its position in a stuttered way with harsh, 
sudden movements would warn an operator and make 
them think that, at the very least, a malfunction of some 
extent is occurring.
This reconnaissance phase can be accomplished by simply 
re-applying the same algorithm described in the previous 
chapters. Target profiling statistics (e.g., normal routine 
paths, average speed, minimum/maximum accelerations, 
or other relevant data) can be automatically generated, in 
order to finely tune the attack parameters and increase the 
chances of a successful attack.
Active Traffic Filtering: Another major difference with 
respect to a passive eavesdropping attack is that, in an 
active traffic manipulation attack, it is important to keep 
the network traffic “as-is” aside from the set of packets that 
are related with the target position. Notably, the resulting 
behavior that needs to be achieved is the following:
 y if the packet is a synchronization packet, it must be 
automatically forwarded to the destination (as the 
alteration of synchronization packets would cause the 
modification of the positions of all tags monitored by the 
RTLS, not only the target ones);
 y if the packet is a positioning packet, verification must 
be completed to determine if it is related to the target 
tag. If so, its timestamp must be modified (and the 
checksum updated). If not, it must be forwarded 
unaltered to the destination.
44
WHITE PAPER
UWB Real Time Locating Systems: How Secure Radio Communications May Fail in Practice
2. Methodology and Attack Demos
To this extent, many techniques are available. This work 
leveraged NFQUEUE, a flexible userspace packet handler 
provided by Iptables. The key idea behind it is to save the 
spoofed packets into a temporary queue, parse them one 
by one, determine if they need to be altered or not, then 
process them accordingly. To do so, a firewall rule was set, 
to forward the incoming packets to the queue:
Iptables –D FORWARD –p {UDP/TCP} -sport {port} -j 
NFQUEUE –queue-num n
With this command, the firewall is configured to redirect 
all incoming packets from a specified port to the NFQUEUE 
number n. Then, from the attacking script, it is possible to 
bind the receiving of each packet to a function that parses 
them and properly invokes the manipulation routines.
Packet Information Manipulation: The final step of the 
attack is the manipulation of the information included in 
the packet. In most scenarios, this translates to altering the 
timestamps and updating the packet integrity fields (RTLS 
may transmit additional information for specific use cases, 
e.g., tag battery level, the press of a button on the tag, etc.).
Altering the timestamps is simply a matter of inverting 
all the equations described in section 2.2.2. If in a passive 
eavesdropping attack the positioning timestamps are 
known and the tag coordinates are unknown, then in an 
active traffic manipulation attack the tag coordinates 
are known (those will be the target coordinates that an 
attacker wants to fake for a target tag) and the positioning 
timestamps are unknown. Starting from equation 8, an 
attacker can simply execute all algorithm steps in reverse 
order and, eventually, obtain the positioning timestamps 
to include in the modified packets for a certain algorithm 
iteration.
Having finalized the packet content, all an attacker needs 
to do is run the integrity check algorithm used by the 
target RTLS to generate the packet checksum, then send 
the modified packets to the target RTLS server. Figure 50 
summarizes the procedure necessary for this process.
Figure 50 - Packet information manipulation summary.
45
WHITE PAPER
UWB Real Time Locating Systems: How Secure Radio Communications May Fail in Practice
2. Methodology and Attack Demos
In this section, we show how an adversary can practically 
leverage the primitives that we described in the previous 
chapter to perform attacks against common real-world use 
cases for RTLS.
2.6.1 Locating and Targeting People/Assets
As described in section 2.1.1, UWB RTLS can be used in 
real-world facilities to keep track of the position of people 
or assets: in factories, UWB RTLS help the management 
system to locate and rescue any employees in case of 
emergency; in hospitals, they are used to track patients’ 
positions and quickly provide medical assistance in case of 
sudden, serious medical symptoms; in generic buildings, 
they can monitor the position of valuable items; etc.
One of the first attacks that an adversary may attempt against 
a real-world RTLS is to passively eavesdrop on the network 
traffic with the aim of reconstructing all tag positions and, 
thus, the position of the related people or assets. 
There may be a variety of reasons behind this desire:
 y An attacker wants to gain knowledge on the habits of 
a target person, with the aim of stalking them and/or 
causing them harm;
 y An attacker wants to locate the position of a valuable 
item, with the aim of stealing it.
To programmatically perform such an attack against a real-
world RTLS, all an attacker needs to do is develop an attack 
script that first performs a MitM attack against the RTLS 
backhaul network as described in section 2.5.1, then runs 
one of the TDoA algorithms available in literature, such as 
the one presented in section 2.2. 
If the attacker does not have prior knowledge of the anchor 
positions, they will need to account for the preliminary 
anchor coordinate estimation phase (as described in 
section 2.4) to obtain the anchor positions. The attack script 
needs to keep track of all synchronization and positioning 
timestamps seen on the network, then continuously 
update the tag positions shown on the map.
In our tests, it was possible to develop a Python script 
capable of enacting the steps described above against both 
Sewio and Avalue RTLS. Figure 51 depicts an execution of 
the script against the Avalue RTLS. As can be noticed, the 
script managed to compute the same position of the target 
tag as shown by the RTLS web interface. Additionally, no 
warnings or abnormal behavior that could have alerted an 
operator were noticeable.
2.6 Attacks Against Real-world Use Cases
46
WHITE PAPER
UWB Real Time Locating Systems: How Secure Radio Communications May Fail in Practice
2. Methodology and Attack Demos
To prevent malicious actors from immediately reusing our 
results and performing attacks against real-world RTLS, 
the code of the script has not been released with this 
white paper.
2.6.2 Geofencing
One of the most crucial functionalities of RTLS from a 
safety perspective is represented by geofencing. RTLS that 
offer geofencing functionalities allow the configuration 
of spatial-aware rules that are triggered whenever a tag 
enters or exits a specific area. For instance, in factories and 
hospitals, geofencing rules can be set up to trigger the 
stoppage of hazardous machines in case a human being 
walks near them.
Geofencing rules can also be employed for non-safety related 
purposes. As an example, in generic buildings, geofencing 
rules can act as an anti-theft solution that triggers an alert 
whenever a valuable item leaves a certain zone.
From the use cases described above, it is clear that 
geofencing rules represent a critical functionality of an 
RTLS and, thus, a valuable target for an adversary. Some 
examples of attacks that can be enacted follow:
 y By modifying the position of tags and placing them 
inside areas monitored by geofencing rules, an attacker 
can cause the stoppage of entire production lines;
 y By placing a tag outside an area monitored by 
geofencing rules, an attacker can cause machinery to 
start moving when a person is in proximity, potentially 
causing harm;
 y By making a tag appear in a steady position, an attacker can 
steal an item tracked by the tag without raising any alerts.
All aforementioned attack scenarios require an attacker to 
actively manipulate the network traffic, in order to change 
the position of a tag at will. To programmatically perform 
this attack against a real-world RTLS, an attacker needs to 
develop an attack script that first performs a MitM attack 
against the RTLS backhaul network as described in section 
2.5.1, then performs all steps described in chapter 2.5.3, i.e., 
target reconnaissance, active traffic filtering, and packet 
Figure 51 - Passive eavesdropping attack against Avalue RTLS.
47
WHITE PAPER
UWB Real Time Locating Systems: How Secure Radio Communications May Fail in Practice
2. Methodology and Attack Demos
information manipulation. Again, if the attacker does not 
have prior knowledge of the anchors' positions, they will 
need to account for the preliminary anchor coordinates 
estimation phase (section 2.4.) The attack script needs to 
keep track of all synchronization timestamps seen on the 
network, generate positioning timestamps accordingly 
to mimic a natural target tag movement, then send the 
modified packets to the target RTLS server.
To verify the possibility of actually interfering with a 
realistic safety geofencing rule, we configured a Mitsubishi 
R08SFCPU controller that was part of one of our lab demos 
to listen to the geofencing alerts raised by the Sewio RTLS 
and, on the basis of the alerts received, control an electric 
motor (Figure 52) according to the following rules:
 y If the controller receives an alert of a tag entering the 
electric motor geofenced zone, it stops the motor, and 
turns on the safety warning light ON;
 y If the controller receives an alert of a tag exiting the 
electric motor geofenced zone, it restarts the motor, and 
turns off the safety warning light OFF;
Figure 52 - Geofencing demo setup.
48
WHITE PAPER
UWB Real Time Locating Systems: How Secure Radio Communications May Fail in Practice
2. Methodology and Attack Demos
In our tests, it was possible to develop a Python script 
capable of enacting the steps described above against 
both the Sewio and Avalue RTLS. Figure 53 and Figure 54 
depict an execution of the script against the Sewio RTLS 
integrated with the previously described electric motor. 
Notably, the script managed to:
 y cause the motor to arbitrarily stop, by modifying the position 
of tags and placing them inside the geofenced zone;
 y cause the motor to restart even when tags (people) were 
in proximity to it, by modifying the position of tags and 
placing them outside the geofenced zone.
Again, no warnings or abnormal behavior that could 
have alerted an operator were noticeable, as the 
injected positions mimicked the natural movements 
of the target tag, which were previously studied in the 