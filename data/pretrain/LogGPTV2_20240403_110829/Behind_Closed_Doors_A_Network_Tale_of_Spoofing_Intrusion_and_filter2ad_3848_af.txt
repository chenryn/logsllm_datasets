### Revised Text

For all other systems, both IPv4 and IPv6 destination-as-source packets were accepted. Only two operating systems (OSes) accepted queries with loopback as the source: Windows Server 2003 and 2003 R2 accepted IPv4 loopback, while Linux accepted IPv6 loopback.

| OS Version | IPv4 DS | IPv6 LB |
|------------|---------|---------|
| Ubuntu 10.04, 12.04, 14.04 | N/A | N/A |
| Ubuntu 16.04, 18.04, 19.04 | N/A | N/A |
| Linux Kernel 4.15, 5.3, 5.0 | N/A | • |
| Linux Kernel 2.6, 3.13, 4.4 | N/A | • |
| FreeBSD 12.1, 12.0, 11.3 | N/A | N/A |
| Windows Server 2008, 2008 R2, 2012, 2012 R2, 2016, 2019 | N/A | N/A |
| Windows Server 2003, 2003 R2 | N/A | • |

**Table 6:** Operating system versions and their acceptance of spoofed-source packets, either destination-as-source (DS) or loopback (LB).

We contacted the two operators responsible for 28 (26%) of the resolvers that handled loopback queries. Since all these queries were from IPv6 loopback sources, we suspected they were running Linux kernel 4.x or earlier. Both operators responded and confirmed our suspicions: one organization was running version 3.10 of the Linux kernel, and the other was running version 2.6.

### Discussion

The findings in this paper are significant. We have demonstrated that, in many cases, systems thought to be accessible only by trusted parties can be reached with minimal effort. Additionally, it is not just the reachability of these systems that matters, but the fact that a potentially malicious third party can identify their operating systems and discover their weaknesses with just a few strategically-formed queries. Finally, through both active measurement and anecdotal evidence supported by communications with DNS operators, we observed a degree of complacency regarding the security and maintenance of internal systems. These observations collectively suggest that security at network borders is often inadequate, that old, vulnerable software and configurations are still in use, and that substantial effort will be required to motivate the necessary changes to address these insecurities. Without such changes, internal systems remain reachable and potentially more vulnerable to various attacks, including DNS cache poisoning (Section 5.2), DNS zone poisoning [29], and NXNS exploitation [43].

Our goal with this research is not only to identify the problems with networks and systems but also to spur widespread change. Increased adoption of Outbound Source Address Validation (OSAV), as recommended in BCP 38, is part of the solution to source address spoofing in the wild, preventing both reflection attacks and spoofed-source infiltration. However, OSAV requires the participation of third-party networks—those hosting the attackers, not the victims. On the other hand, potential victims of spoofed-source network infiltration can prevent such attacks by configuring their own systems for Destination Source Address Validation (DSA). This includes both routers at the network border and local systems. Routers should drop packets bearing an internal source address if they arrive on an external interface. Kernels should drop packets bearing a source address corresponding to any address configured on their system, including loopback addresses. While there might be some legitimate purpose for this behavior, its demand is certainly minimal, and it should not be the default. Even so, every OS we analyzed allowed IPv6 destination-as-source packets to be received, and all but Ubuntu (Linux) allowed the IPv4 equivalent.

### Conclusion

In this paper, we have investigated an area previously explored very little—the lack of DSAV in networks and systems. We presented a methodology for effectively identifying networks and systems vulnerable to spoofed-source infiltration. In November and December of 2019, we sent benign, spoofed-source DNS queries to almost 12 million IPv4 addresses and 800,000 IPv6 addresses in nearly 54,000 and 8,000 respective ASes. Our analysis found that about 5% of IPv4 and 6% of IPv6 queries reached and were handled by their intended targets. However, about half of IPv4 and IPv6 ASNs were infiltrated using our technique. By analyzing the behavior of these resolvers in response to additional spoofed-source DNS queries, we were able to identify the OS of many of the systems we reached behind closed networks. Finally, we identified vulnerable DNS software and systems by analyzing the source port allocation strategies employed by reachable systems. Nearly 4,000 DNS resolvers were found to exhibit no variance in source port across their DNS queries!

The findings in this paper are significant and can have real impact on Internet security. It is our hope that the results of this study, as well as our efforts to encourage change, can make a positive impact, providing a stronger defense against spoofing, infiltration, and cache poisoning.

### Acknowledgements

We gratefully acknowledge the Comcast Innovation Fund for their support of the work that produced this material, DNS-OARC for providing access to the 2018 and 2019 DITL collection, and CAIDA for providing us access to their infrastructure to carry out our experiment. We also acknowledge with gratitude the following individuals who provided helpful reviews of our work: kc clay, Matthew Luckie, and Daniel Zappala. Finally, we thank the IMC 2020 reviewers and our shepherd, Alex Snoeren, for their comments and guidance.

### References

[References section remains unchanged]

---

This revision aims to improve the clarity, coherence, and professionalism of the text. The table has been reformatted for better readability, and the discussion and conclusion sections have been restructured for improved flow and emphasis.