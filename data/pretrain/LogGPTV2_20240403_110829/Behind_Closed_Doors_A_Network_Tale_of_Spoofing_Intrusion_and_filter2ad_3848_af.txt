but for all others, both IPv4 and IPv6 destination-as-source packets
were accepted.
Only two OSes accepted queries with loopback as a source. Win-
dows Server 2003 and 2003 R2 accepted IPv4 loopback, and Linux
IMC ’20, October 27–29, 2020, Virtual Event, USA
Casey Deccio, Alden Hilton, Michael Briggs, Trevin Avery, and Robert Richardson
IPv4
DS
IPv6
LB
Ubuntu 10.04, 12.04, 14.04
OS
Ubuntu 16.04, 18.04, 19.04
Linux
Kernel
4.15, 5.3,
5.0
2.6, 3.13,
4.4
FreeBSD 12.1, 12.0, 11.3
N/A
Windows Server 2008, 2008 R2 N/A
2012, 2012 R2,2016, 2019
N/A
Windows Server 2003, 2003 R2 N/A
LB DS
•
•
•
•
•
•
•
•
•
•
Table 6: OS versions and their acceptance of spoofed-source
packets, either destination-as-source (DS) or loopback (LB).
accepted IPv6 loopback queries. We reached out to the two opera-
tors responsible for 28 (26%) of the resolvers that handled loopback
queries. Because they were all IPv6 loopback sources, we suspected
that they were running Linux kernel 4.x or earlier. Both responded
to our communication and conrmed our suspicions: one organiza-
tion’s servers were running version 3.10 of the Linux kernel and
the other’s were running version 2.6.
6 DISCUSSION
The ndings in this paper are non-trivial. We have shown that,
in many cases, systems thought to be accessible only by trusted
parties can be reached with a minimal amount of eort. We have
also seen that it is not simply the reachability of these systems that
matters, but the fact that a potentially malicious third party can
identify their OSes and discover their weaknesses with just a few
strategically-formed queries. Finally, we observed both through
active measurement and through anecdotal evidence—supported
by communications with DNS operators—that there is some com-
placency with regard to security and maintenance of internal sys-
tems. These messages collectively convey a message that security
at network borders is—in many instances—false, that old, vulnera-
ble software and congurations yet have a deployment presence
in the wild, and that substantial eort will be required to moti-
vate the changes necessary to x these insecurities. Without such
change, internal systems continue to be reachable and potentially
more vulnerable to various attacks, including DNS cache poisoning
(Section 5.2), DNS zone poisoning [29] and NXNS exploitation [43].
Our goal with the current research is not merely to identify
the problems with networks and systems, but to spark impetus
for widespread change. Increased OSAV adoption (i.e., BCP 38) is
certainly part of the solution to source address spoong in the
wild—to prevent both reection attacks and spoofed-source inl-
tration. However, OSAV requires the participation of third party
networks—those hosting the attackers, not the victims. On the other
hand, potential victims of spoofed-source network inltration can
prevent such attacks by conguring their own systems for DSAV.
This includes both routers at the network border and local systems.
Routers should drop packets bearing an internal source address, if
they arrive on an external interface. Kernels should drop packets
bearing a source address corresponding to any address congured
on their system, including loopback addresses. While there might
be some legitimate purpose for this behavior, its demand is certainly
76
minimal, and it should not be the default. Even so, every OS that we
analyzed allowed IPv6 destination-as-source packets to be received,
and all but Ubuntu (Linux) allowed the IPv4 equivalent.
Because of the broad impact of our ndings, spreading awareness
is important, particularly in connection with the publication of this
paper. Our plans include three parts: individual reach-out, broader
communications, and testing tools. Using contact information from
the DNS (see examples in Section 5.2), WHOIS databases, Regional
Internet Registries, and other resources at our disposal, we have
initiated reach out to the technical and administrative contacts at
aected organizations, beginning with those that show the most
vulnerability (e.g., the systems with little or no source port random-
ization). A broader audience will be reached via operator meetings
and conferences, such as RIPE [40] and NANOG [37], where talks
and tutorials can be given. Finally, we plan to make the analysis
of a network or system available to the general public via a Web
interface—both for their testing and our further data collection.
7 CONCLUSION
In this paper we have investigated an area previously explored very
little—the lack of DSAV in networks and systems. We presented a
methodology for eectively identifying networks and systems vul-
nerable to spoofed-source inltration. In November and December
of 2019 we sent benign, spoofed-source DNS queries to almost 12
million IPv4 addresses and 800,000 IPv6 addresses in nearly 54,000
and 8,000 respective ASes. Our analysis found that about 5% of IPv4
and 6% of IPv6 queries reached and were handled by their intended
targets. However, about half of IPv4 and IPv6 ASNs were inltrated
using our technique. By analyzing the behavior of these resolvers
in response to additional spoofed-source DNS queries, we were able
to identify the OS of many of the systems we reached behind closed
networks. Finally, we identied vulnerable DNS software and sys-
tems by analyzing the source port allocation strategies employed
by reachable systems. Nearly 4,000 DNS resolvers were found to
exhibit no variance in source port across their DNS queries!
The ndings in this paper are signicant and can have real im-
pact on Internet security. It is our hope that the results of this
study, as well as our eorts to encourage change can make that im-
pact a positive one, providing a stronger defense against spoong,
inltration, and cache poisoning.
ACKNOWLEDGEMENTS
We gratefully acknowledge the Comcast Innovation Fund for their
support of the work that produced this material, DNS-OARC for
providing access to the 2018 and 2019 DITL collection, and CAIDA
for providing us access to their infrastructure to carry out our
experiment. We also acknowledge with gratitude the following
individuals who provided helpful reviews of our work: kc clay,
Matthew Luckie, and Daniel Zappala. Finally, we thank the IMC
2020 reviewers and our shepherd, Alex Snoeren, for their comments
and guidance.
REFERENCES
[1] Baidu. 2020. Baidu. http://www.baidu.com/
[2] Robert Beverly, Arthur Berger, Young Hyun, and k clay. 2009. Understanding the
Ecacy of Deployed Internet Source Address Validation Filtering. In Proceedings
of the 9th ACM SIGCOMM Conference on Internet Measurement (Chicago, Illinois,
Behind Closed Doors
IMC ’20, October 27–29, 2020, Virtual Event, USA
Attacks.
USA) (IMC ‘09). Association for Computing Machinery, New York, NY, USA,
356–369. https://doi.org/10.1145/1644893.1644936
[3] S. Bortzmeyer. 2016. RFC 7816: DNS Query Name Minimisation to Improve
[4] S. Bortzmeyer and S. Huque. 2016. RFC 8020: NXDOMAIN: There Really Is
Privacy.
Nothing Underneath.
[5] CAIDA. 2020. Spoofer. https://www.caida.org/projects/spoofer/
[6] B. Carpenter and S. Brim. 2002. RFC 3234: Middleboxes: Taxonomy and Issues.
[7] CenturyLink. 2020. CenturyLink Domain Name Server (DNS). https://www.
centurylink.com/home/help/internet/dns.html
[8] Cisco. 2020. OpenDNS. https://www.opendns.com/
[9] M. Cotton, L. Vegoda, Ed. R. Bonica, and B. Haberman. 2013. RFC 6890: Special-
Purpose IP Address Registries.
[10] J. Damas. 2008. RFC 5358: Preventing Use of Recursive Nameservers in Reector
[11] K. Davies. 2008. DNS Cache Poisoning Vulnerability: Explanation and Remedies.
[12] C. Deccio, D. Argueta, and J. Demke. 2019. A Quantitative Study of the Deploy-
ment of DNS Rate Limiting. In International Conference on Computing, Networking
and Communications (ICNC 2019). IEEE, New York, NY, USA, 442–447.
[13] J. Dickinson, S. Dickinson, R. Bellis, A. Mankin, and D. Wessels. 2016. RFC 7766:
DNS Transport over TCP - Implementation Requirements.
[14] D. Dittrich and E. Kenneally. 2012. The Menlo Report: Ethical Principles Guiding
Information and Communication Technology Research. Technical Report. U.S.
Department of Homeland Security.
[15] DNS Operations, Analysis, and Research Center (DNS-OARC). 2018. 2018 DITL
Data. https://www.dns-oarc.net/oarc/data/ditl/2018
[16] DNS Operations, Analysis, and Research Center (DNS-OARC). 2019. 2019 DITL
Data. https://www.dns-oarc.net/oarc/data/ditl/2019
[17] Domain Name System Operation, Analysis, and Research Center. 2020. DNS-
OARC. https://www.dns-oarc.net/
[18] Chad Dougherty. 2008. Multiple DNS implementations vulnerable to cache
poisoning. https://www.kb.cert.org/vuls/id/800113/
[19] D. Eastlake and R. van Mook. 2009. RFC 5452: Measures for Making DNS More
Resilient against Forged Answers.
[20] P. Ferguson and D. Senie. 2000. BCP 38: Network Ingress Filtering: Defeating
Denial of Service Attacks which employ IP Source Address Spoong.
[21] Oliver Gasser, Quirin Scheitle, Pawel Foremski, Qasim Lone, Maciej Korczynski,
Stephen D. Strowes, Luuk Hendriks, and Georg Carle. 2018. Clusters in the
Expanse: Understanding and Unbiasing IPv6 Hitlists. In Proceedings of the 2018
Internet Measurement Conference (Boston, MA, USA). ACM, New York, NY, USA,
15 pages. https://doi.org/10.1145/3278532.3278564
[22] Google. 2020. Google Public DNS. https://developers.google.com/speed/public-
[23] Olafur Gudmundsson. 2018.
Introducing DNS Resolver, 1.1.1.1 (not a joke).
https://blog.cloudare.com/dns-resolver-1-1-1-1/
[24] H. Marshall Jarrett and Michael W. Bailie. 2015.
Prosecuting Computer
Crimes. https://www.justice.gov/sites/default/les/criminal-ccips/legacy/2015/
01/14/ccmanual.pdf
[25] Internet Assigned Numbers Authority. 2020. Service Name and Transport Proto-
col Port Number Registry. https://www.iana.org/assignments/service-names-
port-numbers/service-names-port-numbers.xhtml
query-source
default
https://salsa.debian.org/dns-team/bind9/commit/
[26] Lamont
install.
ed511a4a1182d4434d6c18b33201ae92d1bbb72f
[27] Dan Kaminsky. 2008.
We Know It, Or: ‘64K Should Be Good Enough For Anyone’.
//www.blackhat.com/presentations/bh-jp-08/bh-jp-08-Kaminsky/BlackHat-
Black Ops 2008: It’s The End Of The Cache As
https:
comment
Jones.
2008.
x
in
dns/
Japan-08-Kaminsky-DNS08-BlackOps.pdf
[28] S. Kitterman. 2014. RFC 7208: Sender Policy Framework (SPF) for Authorizing
Use of Domains in Email, Version 1.
[29] Maciej Korczynski, Michał Król, and Michel van Eeten. 2016. Zone Poisoning:
The How and Where of Non-Secure DNS Dynamic Updates. In Proceedings of
the 2016 Internet Measurement Conference (Santa Monica, California, USA) (IMC
‘16). Association for Computing Machinery, New York, NY, USA, 271âĂŞ278.
https://doi.org/10.1145/2987443.2987477
[30] Maciej Korczyński, Yevheniya Nosyk, Qasim Lone, Marcin Skwarek, Baptiste
Jonglez, and Andrzej Duda. 2020. Don’t Forget to Lock the Front Door! Inferring
the Deployment of Source Address Validation on Inbound Trac. In Passive and
Active Measurement (PAM) conference (PAM 2020) (Eugene, OR). ACM, New York,
NY, USA, 14 pages.
[31] Marc Kührer, Thomas Hupperich, Jonas Bushart, Christian Rossow, and Thorsten
Holz. 2015. Going Wild: Large-Scale Classication of Open DNS Resolvers. In
Proceedings of the 2015 Internet Measurement Conference (Tokyo, Japan) (IMC ‘15).
ACM, New York, NY, USA, 355–368. https://doi.org/10.1145/2815675.2815683
[32] Matthew Luckie, Robert Beverly, Ryan Koga, Ken Keys, Joshua A. Kroll, and
k clay. 2019. Network Hygiene, Incentives, and Regulation: Deployment of
Source Address Validation in the Internet. In Proceedings of the 2019 ACM SIGSAC
Conference on Computer and Communications Security (London, United Kingdom)
(CCS ‘19). Association for Computing Machinery, New York, NY, USA, 465–480.
https://doi.org/10.1145/3319535.3354232
[33] D. MacFarland, C. Shue, and A. Kalafut. 2015. Characterizing Optimal DNS Ampli-
cation Attacks and Eective Mitigation. In Passive and Active Measurement: 16th
International Conference, Proceedings. Springer International Publishing, Cham,
15–27. https://doi.org/10.1007/978-3-319-15509-8_2
[34] D. MacFarland, C. Shue, and A. Kalafut. 2017. The Best Bang for the Byte:
Characterizing the Potential of DNS Amplication Attacks. Computer Networks
116 (April 2017), 12–21.
[35] MaxMind. 2020. MaxMind GeoLite2 data. https://www.maxmind.com/
[36] Microsoft. 2020. CVE-2020-1350 | Windows DNS Server Remote Code Execution
https://portal.msrc.microsoft.com/en-US/security-guidance/
Vulnerability.
advisory/CVE-2020-1350
[37] NANOG. 2020. North American Network Operators Group. https://www.nanog.
[38] Jeman Park, Aminollah Khormali, Manar Mohaisen, and Aziz Mohaisen. 2019.
Where Are You Taking Me? Behavioral Analysis of Open DNS Resolvers. In
The 49th IEEE/IFIP International Conference on Dependable Systems and Networks.
IEEE, Portland, OR, USA, 12 pages.
[39] Quad9. 2020. Quad9. https://www.quad9.net/
[40] RIPE NCC. 2020. RIPE Network Coordination Centre. https://www.ripe.net/
[41] Root Server Operators. 2019. Root DNS. http://root-servers.org/
[42] Sarah Scheer, Sean Smith, Yossi Gilad, and Sharon Goldberg. 2018. The Unin-
tended Consequences of Email Spam Prevention. In Passive and Active Measure-
ment. Springer International Publishing, New York, NY, USA, 158–169.
[43] Lior Shar, Yehuda Afek, and Anat Bremler-Barr. 2020. NXNSAttack: Recur-
sive DNS Ineciencies and Vulnerabilities. In 29th USENIX Security Symposium
(USENIX Security 20). USENIX Association, 631–648.
[44] R. van Rijswijk-Deij A. Sperotto and A. Pras. 2014. DNSSEC and Its Potential
for DDoS Attacks: A Comprehensive Measurement Study. In Proceedings of the
2014 Conference on Internet Measurement (IMC ’14). ACM, New York, NY, USA,
449–460. https://doi.org/10.1145/2663716.2663731
[45] Verisign. 2020. Verisign Public DNS. https://www.verisign.com/en_US/security-
services/public-dns/index.xhtml
On
[46] P. Vixie.
in
2013.
DNS.
tures
_the_time_value_of_security_features_in_dns/.
Time Value
the
Fea-
http://www.circleid.com/posts/20130913_on
Security
of
org/
77