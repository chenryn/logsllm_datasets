title:blackhat:asia-22 Backdooring of Real Time Automotive OS Devices
As part of the IoT revolution, the presence of embedded devices around us grows. We rely on these devices during our everyday routines. Some embedded devices are becoming more sophisticated and complex to the point where they resemble modern computers. However, many embedded devices have retained their single-purpose simplicity and run bare-metal software in order to uphold time guarantees and other real-time constraints. In the past, these bare-metal devices were less likely to attract the attention of security researchers, because the data they process is small, limited, and oftentimes standardized. But with these devices becoming increasingly responsible for critical functions in systems used in automotive, medical, and finance, they are becoming more interesting to researchers and malicious hackers. Finding and exploiting vulnerabilities in modern systems in a way that bypasses their defense mechanisms (PAC/ASLR/NX) is hard but not impossible. Once an attacker achieves the initial foothold through code execution, constructing the backdoor for future use is relatively easy thanks to common system standards and a runtime environment (RTE) that provides a rich API to work with. For bare-metal embedded devices, the exact opposite is true, finding and exploiting vulnerabilities in embedded systems might be easy, but establishing a sound foothold in the compromised system is hard due to watchdog constraints, poor APIs, and physical limitations on the bare-metal device.Exploiting vulnerabilities in bare-metal devices present attackers with a new set of challenges that are unfamiliar to modern-system attackers trying to install a backdoor after getting that initial code execution primitive.In this talk, we will share a case study where Argus researchers found a critical security vulnerability in a bare-metal device used in automotive and the lessons learned from actively exploiting it by exploring the uncharted land of bare-metal exploitation.