• 在图8-2a中，网关收到了对FTP URL的HTTP请求。然后网关打开FTP连接，
并向FTP服务器发布适当的命令。然后将文档和正确的HTTP首部通过HTTP
回送。
• 在图8-2b中，网关通过SSL收到了一条加密的Web请求，网关会对请求进行解
集成点：网关、隧道及中继 ｜ 209
密，1然后向目标服务器转发一条普通的HTTP请求。可以将这些安全加速器直
198 接放在（通常处于同一场所的）Web服务器前面，以便为原始服务器提供高性能
的加密机制。
• 在图8-2c中，网关通过应用程序服务器网关API，将HTTP客户端连接到服务
器端的应用程序上去。在网上的电子商店购物、查看天气预报，或者获取股票报
价时，访问的就是应用程序服务器网关。
客户端和服务器端网关
Web网关在一侧使用HTTP协议，在另一侧使用另一种协议。2
可以用一个斜杠来分隔客户端和服务器端协议，并以此对网关进行描述：
/
因此，将HTTP客户端连接到NNTP新闻服务器的网关就是一个HTTP/NNTP网
关。我们用术语服务器端网关和客户端网关来说明对话是在网关的哪一侧进行的。
• 服务器端网关（server-side gateway）通过HTTP与客户端对话，通过其他协议
与服务器通信（HTTP/*）。
• 客户端网关（client-side gateway）通过其他协议与客户端对话，通过HTTP与服
199 务器通信（*/HTTP）。
8.2 协议网关
将HTTP流量导向网关时所使用的方式与将流量导向代理的方式相同。最常见的方
式是，显式地配置浏览器使用网关，对流量进行透明的拦截，或者将网关配置为替
代者（反向代理）。
图8-3显示了配置浏览器使用服务器端FTP网关的对话框。在图中显示的配置中，
配置浏览器将gw1.joes-hardware.com作为所有FTP URL的HTTP/FTP网关。浏览
器没有将FTP命令发送给FTP服务器，而是将HTTP命令发送给端口8080上的
HTTP/FTP网关gw1.joes-hardware.com。
图 8-4 给出了这种网关配置的结果。一般的 HTTP 流量不受影响，会继续流入
原始服务器。但对FTP URL的请求则被放在HTTP请求中发送给网关gw1.joes-
注1：网关上要安装适当的服务器证书。
注2： 在不同HTTP版本之间进行转换的Web代理就像网关一样，它们会执行复杂的逻辑，以便在各个端
点之间进行沟通。但因为它们在两侧使用的都是HTTP，所以从技术上来讲，它们还是代理。
210 ｜ 第8章
hardware.com。网关代表客户端执行 FTP 事务，并通过 HTTP 将结果回送给客
户端。
（a）MSIE的手工代理设置 （b）Navigator的手工代理设置
图8-3 配置一个HTTP/FTP网关
GET http://www.cnn.com/HTTP/1.0
Host: www.cnn.com
User-agent: SuperBrowser 4.2
HTTP
Web服务器
(www.cnn.com)
HTTP客户端 8080
HTTP FTP
GET ftp://ftp.irs.gov/pub/00-index.txt HTTP/1.0
Host: ftp.irs.gov HTTP/FTP网关 FTP服务器
User-agent: SuperBrowser 4.2 (gw1.joes-hardware.com) (ftp.irs.gov)
图8-4 浏览器可以通过配置，让特定的协议使用特定的网关
后面的小节会介绍各种常见网关类型：服务器协议转换器、服务器端安全网关、客
户端安全网关以及应用程序服务器。
8.2.1 HTTP/*：服务器端Web网关
请求流入原始服务器时，服务器端Web网关会将客户端HTTP请求转换为其他协议
（参见图8-5）。
集成点：网关、隧道及中继 ｜ 211
USER anonymous
PASS joe
CWD /pub
TYPE A
MDTM 00-index.txt
GET ftp://ftp.irs.gov/pub/00-index.txt HTTP/1.0 PASV
Host: ftp.irs.gov RETR 00-index.txt 端口21
User-agent: SuperBrowser 4.2
FTP控制连接
HTTP
FTP数据连接
HTTP客户端 HTTP/FTP输 ...data.. FTP服务器
入转换网关
入站
图8-5 HTTP/FTP网关将HTTP请求转换成FTP请求
200 在图8-5中，网关收到了一条对FTP资源的HTTP请求：
ftp://ftp.irs.gov/pub/00-index.txt
网关会打开一条到原始服务器FTP端口（端口21）的FTP连接，通过FTP协议获
取对象。网关会做下列事情：
• 发送USER和PASS命令登录到服务器上去；
• 发布CWD命令，转移到服务器上合适的目录中去；
• 将下载类型设置为ASCII；
• 用MDTM获取文档的最后修改时间；
• 用PASV告诉服务器将有被动数据获取请求到达；
• 用RETR请求进行对象获取；
• 打开到FTP服务器的数据连接，服务器端口由控制信道返回；一旦数据信道打
201 开了，就将对象内容回送给网关。
完成获取之后，会将对象放在一条HTTP响应中回送给客户端。
8.2.2 HTTP/HTTPS：服务器端安全网关
一个组织可以通过网关对所有的输入Web请求加密，以提供额外的隐私和安全性保
护。客户端可以用普通的HTTP浏览Web内容，但网关会自动加密用户的对话（参
见图8-6）。
8.2.3 HTTPS/HTTP客户端安全加速器网关
最近，将 HTTPS/HTTP 网关作为安全加速器使用的情况是越来越多了。这些
HTTPS/HTTP网关位于Web服务器之前，通常作为不可见的拦截网关或反向代理
212 ｜ 第8章
使用。它们接收安全的HTTPS流量，对安全流量进行解密，并向Web服务器发送
普通的HTTP请求（参见图8-7）。
GET http://www.cnn.com/ HTTP/1.0 mdsnrt734tngfd/p0f92piub5.
Host: www.cnn.com lod9fuo8w34b4/;p-90[g9yk,8
User-agent: Superbrowser 4.2 U|t6y6/ $!&9890G&*&98...
HTTP SSL上的HTTP（HTTPS）
3
4
口4
端
HTTP客户端 HTTP/HTTPS 安全Web
输入安全网关 服务器
图8-6 输入HTTP/HTTPS安全网关
受保护的内部LAN
mdsnrt734tngfd/p0f92piub5.
GET http://www.cnn.com/ HTTP/1.0
lod9fuo8w34b4/;p-90[g9yk,8
Host: www.cnn.com
U|t6y6/ $!&9890G&*&98...
User-agent: Superbrowser 4.2
SSL上的HTTP（HTTPS） HTTP
浏览器 HTTPS/HTTP安 www.cnn.com
全加速器网关
图8-7 HTTPS/HTTP安全加速器网关
这些网关中通常都包含专用的解密硬件，以比原始服务器有效得多的方式来解密安
全流量，以减轻原始服务器的负荷。这些网关在网关和原始服务器之间发送的是未
加密的流量，所以，要谨慎使用，确保网关和原始服务器之间的网络是安全的。 202
8.3 资源网关
到目前为止，我们一直在讨论通过网络连接客户端和服务器的网关。但最常见的网
关，应用程序服务器，会将目标服务器与网关结合在一个服务器中实现。应用程序
服务器是服务器端网关，与客户端通过HTTP进行通信，并与服务器端的应用程序
相连（参见图8-8）。
在图 8-8 中，两个客户端是通过 HTTP 连接到应用程序服务器的。但应用程序
服务器并没有回送文件，而是将请求通过一个网关应用编程接口（Application
Programming Interface，API）发送给运行在服务器上的应用程序。
集成点：网关、隧道及中继 ｜ 213
应用程序服务器
HTTP
客户端A 摄相装
置及软件
网络摄像机网关API
11000101101
电子商务应用程序
HTTP 电子商务API
客户端B
图8-8 应用程序服务器可以将HTTP客户端连接任意后台应用程序
• 收到客户端A的请求，根据URI将其通过API发送给一个数码摄相机应用程序。
将得到的图片绑定到一条HTTP响应报文中，再回送给客户端，在客户端的浏览
器中显示。
• 客户端B的URI请求的是一个电子商务应用程序。客户端B的请求是通过服务
器网关API发送给电子商务软件的，结果会被回送给浏览器。电子商务软件与客
户端进行交互，引导用户通过一系列HTML页面来完成购物。
第一个流行的应用程序网关API就是通用网关接口（Common Gateway Interface，
CGI）。CGI是一个标准接口集，Web服务器可以用它来装载程序以响应对特定
URL的HTTP请求，并收集程序的输出数据，将其放在HTTP响应中回送。在过去
的几年中，商业Web服务器提供了一些更复杂的接口，以便将Web服务器连接到
203 应用程序上去。
早期的Web服务器是相当简单的，在网关接口的实现过程中采用的简单方式一直持
续到了今天。
请求需要使用网关的资源时，服务器会请辅助应用程序来处理请求。服务器会将辅
助应用程序所需的数据传送给它。通常就是整条请求，或者用户想在数据库上运行
的请求（来自URL的请求字符串，参见第2章）之类的东西。
然后，它会向服务器返回一条响应或响应数据，服务器则会将其转发给客户端。服
务器和网关是相互独立的应用程序，因此，它们的责任是分得很清楚的。图8-9显
示了服务器与网关应用程序之间交互的基本运行机制。
这个简单的协议（输入请求，转交，响应）就是最古老，也最常用的服务器扩展接
口CGI的本质。
214 ｜ 第8章
服务器内部视图
服务器进程
请求1 引发的网关进程1
请求数据
请求2 引发的网关进程2
请求N 引发的网关进程N
服务器系统
响应N
响应2
响应1
响应数据
图8-9 服务器网关应用程序机制
8.3.1 CGI
CGI是第一个，可能仍然是得到最广泛使用的服务器扩展。在Web上广泛用于动态
HTML、信用卡处理以及数据库查询等任务。
CGI应用程序是独立于服务器的，所以，几乎可以用任意语言来实现，包括Perl、
Tcl、C和各种shell语言。CGI很简单，几乎所有的HTTP服务器都支持它。图8-9
显示了CGI模型的基本运行机制。
CGI的处理对用户来说是不可见的。从客户端的角度来看，就像发起一个普通请求
一样。它完全不清楚服务器和CGI应用程序之间的转接过程。URL中出现字符cgi
和可能出现的“?”是客户端发现使用了CGI应用程序的唯一线索。 204
看来CGI是很棒的，对吧？嗯，好吧，既是也不是。它在服务器和众多的资源类型
之间提供了一种简单的、函数形式的粘合方式，用来处理各种需要的转换。这个接
口还能很好地保护服务器，防止一些糟糕的扩展对它造成的破坏（如果这些扩展直
接与服务器相连，造成的错误可能会引发服务器崩溃）。
但是，这种分离会造成性能的耗费。为每条CGI请求引发一个新进程的开销是很高
的，会限制那些使用CGI的服务器的性能，并且会加重服务端机器资源的负担。为
了解决这个问题，人们开发了一种新型CGI——并将其恰当地称为快速CGI。这个
接口模拟了CGI，但它是作为持久守护进程运行的，消除了为每个请求建立或拆除
新进程所带来的性能损耗。
8.3.2 服务器扩展API
CGI协议为外部翻译器与现有的HTTP服务器提供了一种简洁的接口方式，但如
集成点：网关、隧道及中继 ｜ 215
果想要改变服务器自身的行为，或者只是想尽可能地提升能从服务器上获得的性能
呢？服务器开发者为这两种需求提供了几种服务器扩展API，为Web开发者提供了
强大的接口，以便他们将自己的模块与HTTP服务器直接相连。扩展API允许程序
员将自己的代码嫁接到服务器上，或者用自己的代码将服务器的一个组件完整地替
换出来。
大多数流行的服务器都会为开发者提供一个或多个扩展API。这些扩展通常都会绑
定在服务器自身的结构上，所以，大多数都是某种服务器类型特有的。微软、网景、
Apache和其他服务器都提供了一些API接口，允许开发者通过这些接口改变服务器
的行为，或者为不同的资源提供一些定制的接口。这些定制接口为开发者提供了强
大的接口方式。