### 优化后的文本

#### 8.1 网关的工作原理
- **图8-2a**：网关接收到对FTP URL的HTTP请求后，会打开一个FTP连接并向FTP服务器发送相应的命令。然后，将文档及正确的HTTP头部通过HTTP返回给客户端。
- **图8-2b**：当网关通过SSL接收加密的Web请求时，它首先解密该请求，然后向目标服务器转发普通的HTTP请求。这些安全加速器可以直接部署在（通常在同一地点）Web服务器前，以提供高性能的加密机制。
- **图8-2c**：网关通过应用程序服务器网关API，将HTTP客户端与服务器端的应用程序连接起来。例如，在网上购物、查看天气预报或获取股票报价时，用户实际上是在访问应用程序服务器网关。

#### 客户端与服务器端网关
- Web网关的一侧使用HTTP协议，另一侧则使用其他协议。可以通过“/”来分隔这两种协议，如HTTP/NNTP表示将HTTP客户端连接到NNTP新闻服务器的网关。
  - **服务器端网关**（Server-Side Gateway）：与客户端进行HTTP对话，并通过其他协议与服务器通信（HTTP/*）。
  - **客户端网关**（Client-Side Gateway）：通过其他协议与客户端对话，并通过HTTP与服务器通信（*/HTTP）。

#### 8.2 协议网关
- 将HTTP流量导向网关的方法类似于将流量导向代理的方式，包括显式配置浏览器使用网关、透明拦截流量或将网关配置为反向代理。
- **图8-3**展示了如何配置浏览器使用服务器端FTP网关。在此配置下，浏览器不会直接向FTP服务器发送FTP命令，而是通过HTTP向指定的HTTP/FTP网关发送请求。
- **图8-4**展示了上述配置的结果。普通HTTP流量继续流向原始服务器，而对FTP URL的请求则被封装成HTTP请求发送给网关。网关代表客户端执行FTP事务，并通过HTTP将结果返回给客户端。

#### 8.2.1 HTTP/*：服务器端Web网关
- 当请求到达原始服务器时，服务器端Web网关会将客户端的HTTP请求转换为其他协议（见图8-5）。例如，对于FTP资源的HTTP请求，网关会打开到FTP服务器的连接，执行必要的FTP命令（如登录、切换目录、设置传输模式等），并最终将获取的内容封装在HTTP响应中返回给客户端。

#### 8.2.2 HTTP/HTTPS：服务器端安全网关
- 组织可以利用网关对所有输入的Web请求进行加密，以增强隐私和安全性。客户端仍然可以使用标准HTTP浏览内容，但网关会自动加密用户的对话（见图8-6）。

#### 8.2.3 HTTPS/HTTP：客户端安全加速器网关
- 最近，越来越多的组织开始使用HTTPS/HTTP网关作为安全加速器。这些网关通常位于Web服务器之前，充当不可见的拦截网关或反向代理。它们接收加密的HTTPS流量，对其进行解密，然后向Web服务器发送普通的HTTP请求（见图8-7）。为了确保数据安全，必须保证网关与原始服务器之间的网络是安全的。

#### 8.3 资源网关
- 应用程序服务器是一种常见的服务器端网关，它将客户端通过HTTP与后台应用程序连接起来（见图8-8）。例如，客户端A请求一个数码相机应用程序，网关将请求通过API传递给相应应用并将图像嵌入HTTP响应返回；客户端B请求电子商务应用时，请求同样通过API处理，最终引导用户完成购物过程。

#### 8.3.1 CGI
- CGI（通用网关接口）是最早的且广泛使用的服务器扩展接口之一，用于动态HTML生成、信用卡处理及数据库查询等任务。尽管其简单性使其几乎可在任何语言中实现，但由于每次请求都会启动新进程，性能开销较大。因此，出现了快速CGI等改进版本以提高效率。

#### 8.3.2 服务器扩展API
- 除了CGI外，还有多种服务器扩展API可供开发者选择，以便更灵活地定制HTTP服务器的行为。这些API允许程序员将自己的代码集成进服务器或替换服务器组件，从而提升性能和功能。大多数流行的Web服务器都提供了此类接口，为开发人员提供了强大的自定义能力。