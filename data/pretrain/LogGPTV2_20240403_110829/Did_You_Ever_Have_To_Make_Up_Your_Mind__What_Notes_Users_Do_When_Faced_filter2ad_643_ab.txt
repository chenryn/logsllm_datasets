indication of how much thought
the user gave to the
question. Figure 4 shows the second alert.
In order to attach active content to the design of a
document, the document had to be sent with its own design
(form), as opposed to using one in the mail database to
which it was going. The form and its active content were
not signed. Therefore,
the operations requiring ECL
permissions would be checked against the -No Signature-
entry in the reader's ECL.
the
Users
subject
from their colleague Jane
saw new mail
Doe/SoftwareHouse, with
"Important
Information". When they opened the email (or when they
selected it with the preview pane that displays message
content enabled), if their ECLs did not allow unsigned
code the ability to access another database, a "-No
Signature-" Execution Security Alert came up, covering up
much of the content of the mail message. Since the mail
message used a vanilla stored form, the top quarter of the
displayed message was missing the Note mail look and
Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC(cid:146)02) 
1063-9527/02 $17.00 ' 2002 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:13:27 UTC from IEEE Xplore.  Restrictions apply. 
feel of a formatted header section with the sender's name
on the left hand side and the To:, CC:, BCC: and Subject:
fields on the right hand side, in fields. They could move
that dialog, or respond via one of the buttons. If they
glanced down at the bottom edge of the Notes client, they
would have seen the status message "Signed by Jane
PM,
Doe/SoftwareHouse
11/22/1999
on
02:20:46
according to /SoftwareHouse". If they responded with
"Execute Once" or "Trust Signer", and if their ECL did not
allow unsigned code to send mail on their behalf,
the
second ESA would appear (Figure 4). Dismissing that
dialog in any way finished uncovering the content of the
mail message.
Figure 4: The alert resulting from sending mail from unsigned LotusScript
The text of the mail survey is shown in Figure 5. It
explained the survey and encouraged people who didn’t
allow the unsigned code to execute to send the contact
person mail telling them so, for data gathering purposes
(the Gold Star list). The person who sent the survey was a
SoftwareHouse security person more junior than the one
who had sent the original email with the instructions on
securing ECLs. It went to the same list that had been used
to send the earlier mail message.
Subject: Important Information
Dear colleague,
I'm Jane Doe, from the SoftwareHouse security group. In an effort to determine how useful and effective our efforts have
been in asking all of you to tighten up your workstation ECLs, we are collecting data on whether anyone here at
SoftwareHouse still allows unsigned code to automatically execute on their workstation (and whether anyone who doesn't
would still allow unsigned code of dubious origin to execute).
If your workstation ECL is still wide open, you did not see any alerts when you viewed this message, and you have sent
me email telling me that you allow unsigned code to execute on your workstation. If you did see the alerts, and you
allowed unsigned code to execute by pressing the "Execute Once" or "Trust Signer" buttons on those two Execution
Security Alerts, you also sent me that message. If you routinely let hostile code execute in this fashion, the consequences
could have been much worse (such as erasing your hard drive or leaking Product Y development secrets).
If you saw the alerts and aborted the code execution, thank you. You can further help us by sending me (Jane Doe) email
telling me that you did that, allowing me to add you to our Gold Star list of colleagues who practice good ECL hygiene.
Thank you for participating in our study. Feel free to send me any questions or concerns.
Jane Doe
Figure 5: Text of survey message
4. Results and Discussion
4.1.
Core Results
Figure 6 (below) shows the results from the first two
days of responses to the survey. There were 543 names on
the SoftwareHouse email list (after discounting the most
obvious duplicate names). The "Other" category includes
bounced deliveries and Out of Office notices. Responses
dribbled in for up to two months after the mail was sent;
they are not included in our discussions of the results.
62% of the people on the email list (334) responded
within two days of the survey. 38% (209) of the potential
recipients didn't respond within those two days. They may
have not read the mail, they may have aborted the active
content but not self-reported as Gold Stares, or they may
have been MIME users. (LotusScript is stripped out of
email sent to people configured to receive MIME). Three
respondents self-reported on this, and there were 10 users
in the SoftwareHouse domain configured this way.
Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC(cid:146)02) 
1063-9527/02 $17.00 ' 2002 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:13:27 UTC from IEEE Xplore.  Restrictions apply. 
68% of the respondents (227) – or 42% of the survey
population -- did not allow unsigned code to access
another database and send mail on their behalf. 31% of the
respondents
(102) did have open ECL defaults. A
minimum of 42% (% of Total Sent with Secure ECL
defaults) and a maximum of 82% (all but the 18% with
verifiable Open ECL defaults) of the survey population
had secure ECL defaults. Note that having secure ECL
defaults does not ensure secure operation (as we discuss
below). For a security configuration that must be explicitly
set by users, the circumstances were close to ”as good as
possible.” A mail message with a button to press had been
sent out previously, and the user population had familiarity
with the technology involved. 28% of the respondents (92)
did not execute the unsigned code on their workstation.
56% of the target population did not execute the unsigned
active content (non-response, Gold Star, and other). This
still leaves a window of 44% of the target population that
did execute unsigned active content, including 18% of the
overall population that does so automatically. 44% of a
target population is a large-enough security hole to do
considerable damage. This is substantially larger than the
18% of the target population that did not even have a base
configuration
behavior
(unsigned active content) by default. This indicates that
security mechanisms that can disallow dangerous behavior
based on configuration, without a user override, have a
much greater chance of doing so. Whether they can do so
and still provide competitive and useful features is the
challenge.
disallowing
dangerous
the
% of Total Sent
% of Responses
% of Secure defaults
Names on list
Responses
Open ECL defaults
Secure ECL defaults
Gold Star
Clicked and sent
Other
543
334
102
227
92
135
5
62%
18%
42%
17%
25%
1%
Figure 6: Data from responses to email survey
Of all the respondents we know of that saw the ESA
(Secure ECL defaults), 59% chose the dialog option that
allowed the unsigned active content to run. So, in this
situation, over half chose expediency over security. Again,
this situation is quite close to “as good as possible” within
the usability limitations of the deployed product. The user
community was experienced in the technology, and had
recently been warned of problems with open ECL defaults.
In addition, virus warnings had for some time been
prevalent in the media.
4.2.
Other Issues Affecting Responses
Thirteen of the self-reported Gold Star users (15%)
stated that they moved the ESA dialog aside and read the
email message (Figure 5) before aborting the active
content. While the text of a truly malicious virus would not
make clear that the user should not execute the active
content, often the text of recent virus emails triggers a
cautious response in suspicious minds. Four of the Gold
Stars indicated that they let one alert go and only caught it
on the second. We would have preferred to have the active
content
two
protected actions to send a simple email. This is perhaps
more typically indicative of the number of alerts necessary
for a malicious virus to do anything. It also allowed us to
measure whether
content was
configured to execute, or whether the user was prompted
before it completed.
issue only one alert, but
the unsigned active
took at
it
least
31%
68%
28%
40%
1%
41%
59%
One Gold Star reported that he had his mail database
configured to not allow stored forms. Stored forms allow a
document with a design different from the designs in the
database to be placed in the database. The virus sent
required the ability to attach active content to the PostOpen
event of the form (design), and so required the use of
stored forms. The feature to disallow stored forms provides
extra security, since active content that is restricted to
documents (not forms) can only be executed in Notes after
the user takes some explicit action (such as pressing a
button).
Several people complained that
they still see many
alerts. This is clearly unacceptable. Seeing many alerts in
the course of a normal workday negates the whole purpose
of having the ECLs in the first place. It encourages people
to press “Trust Signer” or “Execute Once” only slightly
less rapidly than the code would have executed unfettered.
SoftwareHouse was not using a small identifiable set of
signer names,
to keep the
Administrative ECLcurrent. One respondent said that they
had hit trust signer literally hundreds of times after taking
the Administrative ECL update when it was recommended
slightly less than 3 months earlier.
and had no process
Twelve people reported that they saw the sender's email
message signature information, and so disregarded the
unsigned nature of the alert. The Notes client displays a
message in the message area at the bottom edge of the
client when a signature is found on a document. A better
Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC(cid:146)02) 
1063-9527/02 $17.00 ' 2002 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:13:27 UTC from IEEE Xplore.  Restrictions apply. 
test would have been to send the unsigned active content in
an unsigned mail message.
4.3.
Miscellaneous Other Issues
At least 23 people pressed “Trust Signer” to the first
alert. We know because we received more than one canned
response message from them, since they read the mail
message at least twice. The later ones had a much shorter
time between actions than the first. This means that their
ECLs became more open than they were before the survey.
These users were encouraged to go to their ECLs and
remove any permissions for the "-No Signature-" entry,
and a general notice on the problem was posted in the
SoftwareHouse
an
unfortunate side effect of the survey.
database. This was
discussion
Several people read the email on machines other than
their primary work machine. They had tightened their
ECLs on their workstation, but not, for example, on their
laptop. Others mentioned that
they now realized they
needed to update their laptop. One person with open ECLs
pulled the network plug when they realized what was
happening after reading the email, then called to report
their actions to the survey person. Some people were glad
to get the survey and reported that they fixed their ECL
settings. Others were not so happy (we received 4 flames).
A number of people were concerned that they had been
previously unaware of this issue. Several of the more
conscientious recipients were confused about whether they
had done the right thing with the alerts and what their ECL
should look like. Users who had done the right thing or
who had secure ECL settings couldn’t tell and thought they
needed to do something. Exercising the active content
abilities of Notes to take a survey on their use had an
additional the side effect. It made the issues around proper
use of active content more obvious than previous the
requests to press a button to ensure secure defaults.
One non-development person with much outside
exposure asked for more documentation for lay users, and
several other folks asked just what was considered to be
best practices in this situation. Lotus Notes R5.02 featured
a release note on some of these issues, and an article in
Notes.Net, a technical resource for Domino administrators
and designers, discusses how to deploy tighter ECLs [3].
Organizational best practice is to have a signing policy and
a limited and identifiable set of identities for signing. IBM
this practice. Groups developing third-party
follows
applications to run on Lotus Notes find it difficult
to
adhere to this discipline during internal development
cycles.
Although the
survey and subsequent discussions
emphasized default
the LotusScript and
@command portion of active content security, several
the Java and Javascript ECL
recipients asked about
settings
for
settings. The Javascript ECL allows “Default” and “No
signature” entries full access to windows and URLs from
the same host. This is because the Notes client can also be
used as a web browser, but there is no standard for signing
Javascript on the web. These defaults match default
browser settings. In the Notes client, they can be reset by
the user or by the site administrator via the Administrative
ECL.
5. Recent Enhancements
Many of the issues with ECL use raised in this study
and by Lotus Notes customers fall into two categories:
getting the user's ECL to cover normal and acceptable use,
and tracking and limiting the opportunities for users to
make security decisions that they do not understand in the
first place.
In the currently shipping version stream, the Refresh
button in the ECL dialog box was added in R5.0.5 to
provide a single consistent mechanism for users to refresh
their ECLs (with the proper instruction). Previously, a
button or similar mechanism would need to be coded into a
mail message or other database document with the
@RefreshECL command.
Domino 6 provides administrators with full control over
updating client ECLs. Domino 6 administrative policies
provide a mechanism to associate specific types of
administrative information with individual users or groups
of users. Security sub-policies let administrators define any
number of named administrative ECLs, and associate them
with different groups of users. An ECL policy consists of a
reference to a fine-grained administrative ECL and an
update policy. The update policy specifies both a
frequency and a mode. The frequency of updating the
user's ECL from their administrative ECL is either never,
once daily, or when the administrative ECL has changed.
The update mode offers the choice to refresh the user's
ECL by merging in the administrative ECL (as described
in Section 2), or to replace the user's ECL with the
administrative ECL. The policy for updating a user's ECL
is checked when that user authenticates to their home
server, which contains their administrative ECL. These
features ensure that user's ECL will stay in sync with the
organizational
administrative ECL.
Administrators still have the challenge of ensuring that the
administrative ECLs cover normal and acceptable cases.
Giving in-house active content developers a separate
namespace for them to use when signing active content
that is distributed throughout the company is the most