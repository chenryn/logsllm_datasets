title:Delegatable pseudorandom functions and applications
author:Aggelos Kiayias and
Stavros Papadopoulos and
Nikos Triandopoulos and
Thomas Zacharias
Delegatable Pseudorandom Functions and Applications
Aggelos Kiayias
Dept. of Informatics & Telecommunications
National and Kapodistrian U. of Athens, Greece
PI:EMAIL
Nikos Triandopoulos
RSA Laboratories
Cambridge MA, USA
PI:EMAIL
Stavros Papadopoulos
Dept. of Computer Science & Engineering
HKUST, Hong Kong
PI:EMAIL
Thomas Zacharias
Dept. of Informatics & Telecommunications
National and Kapodistrian U. of Athens, Greece
PI:EMAIL
ABSTRACT
We put forth the problem of delegating the evaluation of a
pseudorandom function (PRF) to an untrusted proxy and
introduce a novel cryptographic primitive called delegatable
pseudorandom functions, or DPRFs for short: A DPRF en-
ables a proxy to evaluate a pseudorandom function on a
strict subset of its domain using a trapdoor derived from
the DPRF secret key. The trapdoor is constructed with re-
spect to a certain policy predicate that determines the subset
of input values on which the proxy is allowed to compute.
The main challenge in constructing DPRFs is to achieve
bandwidth eﬃciency (which mandates that the trapdoor is
smaller than the precomputed sequence of the PRF values
conforming to the predicate), while maintaining the pseu-
dorandomness of unknown values against an attacker that
adaptively controls the proxy. A DPRF may be optionally
equipped with an additional property we call policy privacy,
where any two delegation predicates remain indistinguish-
able in the view of a DPRF-querying proxy: achieving this
raises new design challenges as policy privacy and bandwidth
eﬃciency are seemingly conﬂicting goals.
For the important class of policy predicates described as
(1-dimensional) ranges, we devise two DPRF constructions
and rigorously prove their security. Built upon the well-
known tree-based GGM PRF family [17], our constructions
are generic and feature only logarithmic delegation size in
the number of values conforming to the policy predicate.
At only a constant-factor eﬃciency reduction, we show that
our second construction is also policy private. Finally, we
describe that their new security and eﬃciency properties
render our DPRF schemes particularly useful in numerous
security applications, including RFID, symmetric searchable
encryption, and broadcast encryption.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
CCS’13, November 4–8, 2013, Berlin, Germany.
Copyright 2013 ACM 978-1-4503-2477-9/13/11 ...$15.00.
http://dx.doi.org/10.1145/2508859.2516668.
669
Categories and Subject Descriptors
C.2.4 [Communication Networks]: Distributed Systems—
client/server, distributed applications; E.3 [Data Encryp-
tion]; G.3 [Probability and Statistics]: random number
generation; K.6.5 [Management of Computing and In-
formation Systems]: Security and Protection—authenti-
cation
General Terms
Algorithms, Security, Theory
Keywords
delegation of computation; pseudorandom functions; RFIDs;
searchable encryption; broadcast encryption; authentication
1.
INTRODUCTION
Due to its practical importance, the problem of securely
delegating computational tasks to untrusted third parties
comprises a particularly active research area. Generally
speaking, secure delegation involves the design of protocols
that allow the controlled authorization for an—otherwise
untrusted—party to compute a given function while achiev-
ing some target security property (e.g., the veriﬁability of
results or privacy of inputs/outputs) and also preserving
the eﬃciency of the protocols so that the delegation itself
remains meaningful. Beyond protocols for the delegation
of general functionalities (e.g., [18, 33]) a variety of speciﬁc
cryptographic primitives have been considered in this con-
text (see related work in Section 2).
Surprisingly enough, pseudorandom functions (PRFs), a
fundamental primitive for emulating perfect randomness via
keyed functions, thus, ﬁnding numerous applications in in-
formation security, have not been explicitly studied in the
context of delegation of computations (of PRF values). We,
hereby, initiate a study on this matter.
A new PRF concept. We introduce delegatable pseu-
dorandom functions, or DPRFs for short, a novel crypto-
graphic primitive which enables the delegation of the evalu-
ation of a PRF to an untrusted proxy according to a given
predicate that deﬁnes the inputs on which the proxy will
evaluate the PRF.
Speciﬁcally, let F be a PRF family, and P a set of pred-
icates, called the delegation policy, deﬁned over the domain
of F. A DPRF is a triplet (F, T, C) constructed with respect
to P, which provides the elementary functionality shown in
Figure 1: For any secret key k and a predicate P ∈ P,
the delegator computes a trapdoor τ via algorithm T , and
τ is transmitted to the proxy. The latter then runs al-
gorithm C on τ to derive exactly the set of PRF values
BP = {fk(x)|P (x)}, where fk ∈ F, i.e., the PRF value
on every input x satisfying predicate P , overall correctly
enabling the evaluation of PRF fk subject to predicate P
without explicit knowledge of secret key k, or even the input
values AP = {x|P (x)}.
Figure 1: The DPRF functionality.
What motivates the above scheme is bandwidth eﬃciency:
As long as the trapdoor τ is sublinear in the size |BP| of
delegated PRF values, the delegation is meaningful as the
delegator conserves resources (otherwise, the proxy could be
provided directly with all the PRF values in BP ).
At the same time, the DPRF must retain the security
properties of the underlying PRF, namely, (i) pseudoran-
domness for any value x conforming to the delegation pred-
icate P , i.e., P (x), and (ii) unpredictability for any noncon-
forming value x such that ¬P (x). In addition, a DPRF can
optionally satisfy a policy-privacy property which prevents
the proxy from inferring information about P or the dele-
gated (input) set AP from the trapdoor τ .
Our deﬁnitional framework. We introduce a formal def-
initional framework for the new primitive of DPRFs, care-
fully capturing all the above technical requirements. We ﬁrst
rigorously deﬁne the correctness and security requirements
that any DPRF should meet. Correctness captures the abil-
ity of the proxy to successfully evaluate the PRF on exactly
those inputs (set AP ) speciﬁed by predicate P . Security cap-
tures the requirement that the delegation capabilities of the
PRF do not compromise its core pseudorandomness prop-
erty. But this condition goes beyond the standard security
deﬁnition of PRFs, since the pseudorandomness attacker, in
addition to the PRF oracle, may now adaptively query also
a trapdoor oracle for delegation on predicates of its choice.
Equally important is also the policy-privacy property that
a DPRF may optionally satisfy, intuitively capturing the in-
ability of a malicious proxy to learn any (non-trivial) prop-
erty about the delegated set AP (that is not implied by
BP ). Our security notion postulates that for any two pred-
icates P, P (cid:48) the corresponding trapdoors are indistinguish-
able, provided that |AP| = |AP (cid:48)| and the adversary issues
no delegation queries that trivially separate BP and BP (cid:48) .
GGM-based realization for range predicates. We de-
vise two bandwidth-eﬃcient and provably secure DPRF con-
structions for the case where the delegation policy contains
predicates described by 1-dimensional ranges. Range-based
policies is an interesting use case, as many applications main-
tain an ordering over the PRF inputs, and delegation rights
are deﬁned with respect to ranges of such inputs.
670
Our ﬁrst DPRF scheme is called best range cover, or BRC
for short, and relies on the well-known GGM PRF fam-
ily [17]. This family deﬁnes a PRF based on the hierarchical
application of any length-doubling pseudorandom generator
(PRG) according to the structure induced by a tree, where
input values are uniquely mapped to root-to-leaf paths. By
exploiting the above characteristics, our BRC scheme fea-
tures logarithmic delegation size in the number |AP| of val-
ues conforming to the policy predicate, by having the trap-
door τ comprise a subset IP of internal (or partial ) PRF
values that optimally cover the target range BP of PRF val-
ues. We provide a formal security proof for the above scheme
which, interestingly, does not trivially follow from the GGM
security proof. The reason is that the adversary can now
employ delegation queries to learn any internal PRF value
in the tree, and not simply leaf PRF values as in the original
security game in [17]. We note that, although similar “range-
covering” GGM-based constructions appear in the literature,
e.g., in [30], no formal security analysis has been given.
However, our BRC scheme does not satisfy policy privacy,
as the structure of the PRF values in IP leaks information
about predicate P . This motivates our second construction,
called uniform range cover, or URC for short. This scheme
augments BRC in a way that renders all trapdoors corre-
sponding to ranges of the same size indistinguishable. This
is achieved by carefully having τ comprising a subset I(cid:48)
P of
PRF values that cover the target range BP of PRF values
less optimally: I(cid:48)
P contains PRF values that are descendants
of those values in IP at a tree height that depends solely on
|BP| (which by deﬁnition leaks to the adversary). More in-
terestingly, by adopting the above change, URC retains both
the asymptotic logarithmic bandwidth complexity of BRC
and its DPRF security, but it crucially achieves a policy-
privacy notion appropriately relaxed to our setting of range
predicates. Inherently, as we argue, no eﬃcient tree-based
DPRF scheme can satisfy policy privacy, so we have to resort
to a suﬃcient relaxation which we call union policy privacy.
Main applications. Finally, our DPRF schemes, equipped
with bandwidth eﬃciency, security and policy privacy (URC
only), lend themselves to new schemes that provide scalable
solutions to a wide range of information security and applied
cryptography settings that involve the controlled authoriza-
tion of PRF-based computations. Generally, DPRFs are
particularly useful in applications that rely on the evaluation
of (secret) key-based cryptographic primitives on speciﬁc in-
puts (according to an underlying policy): Using a DPRF
scheme then allows a cost-eﬃcient, yet secure and private,
key management for an untrusted proxy who is otherwise
capable in executing a particular computational task.
We outline several such applications in which DPRFs are
useful, including authentication and access control in RFIDs,
eﬃcient batch querying in searchable encryption, as well as
broadcast encryption. Due to the underlying GGM build-
ing component, our DPRFs are extremely lightweight, as
their practical implementation entails a few repeated appli-
cations of any eﬃcient candidate instantiation of a PRG that
is length doubling.
Summary of contributions. Our main contributions are:
• We initiate the study of policy-based delegation of the
task of evaluating a pseudorandom function (PRF) on
speciﬁc input values, and introduce the concept of del-
egatable PRFs (DPRFs).
Delegatork,PτCTBP={fk(x)|P(x)}Proxy• We develop a general and rigorous deﬁnitional frame-
work for the new DPRF primitive, capturing proper-
ties such as bandwidth eﬃciency, correctness, security
and policy privacy, and also oﬀering a relaxed union
policy privacy that is arguably necessary for tree-wise
DPRF constructions.
• We present a framework for building DPRF schemes
for the important case where the delegation policy is
governed by range predicates over inputs; our frame-
work augments the generic GGM construction frame-
work of [17] to provide two concrete DPRF schemes,
namely BRC and URC.
• We prove the security of our constructions in a modu-
lar way, thus also yielding the ﬁrst security analysis of
similar GGM-based key-delegation schemes, and the
union-policy privacy of URC.
• We describe several key applications of DPRFs in the
context of eﬃcient key-delegation protocols for authen-
tication, access control and encryption purposes.
Paper organization. Section 2 reviews related work. Sec-
tion 3 formulates the DPRF primitive, Section 4 presents
our two DPRF constructions for the case of range poli-
cies. Section 5 elaborates on the applicability of DPRFs.
Finally, Section 6 concludes our paper with directions for
future work. Selected proofs appear in the Appendix.
2. RELATED WORK
Secure delegation of computations. The notion of dele-
gation of cryptographic operations is already mature: Start-
ing from early work on proxy signatures [28] and proxy cryp-
tography [5], basic primitives such as signatures (e.g., [6, 28])
and encryption (e.g.,[2, 19, 22]) have been studied in the
context of an untrusted proxy who is authorized to operate
on signatures or ciphertexts. Recently, there has also been
an increased interest in veriﬁability and privacy of general
outsourced computations (e.g., [1, 9, 10, 18, 33]) or speciﬁc
crypto-related operations (e.g., [4, 15, 20]). To the best of
our knowledge, however, no prior work explicitly and for-
mally examines the delegation of PRFs.1
PRF extensions. Closer to our new DPRF primitive are
the known extensions of PRFs, namely the veriﬁable PRFs
(VPRFs) (e.g., [12, 27, 29]) and the oblivious PRFs (OPRFs)
(e.g., [16, 23]). A VPRF provides a PRF value along with
a non-interactive proof, which enables anyone to verify the
correctness of the PRF value. Although such proofs can be
useful in third-party settings, they are not related to the
delegation of the PRF evaluation without the secret key.
Similarly, an OPRF is a two-party protocol that securely im-
plements functionality (k, x) → (⊥, fk(x))—that is, a party