{"created": "2017-12-14T16:46:06.044Z", "created_by_ref": "", "description": "When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: [Bypass User Account Control](https://attack.mitre.org/techniques/T1088)).\n\nAdversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage, such as a fake installer requiring additional access or a fake malware removal suite.(Citation: OSX Malware Exploits MacKeeper) This type of prompt can be used to collect credentials via various languages such as [AppleScript](https://attack.mitre.org/techniques/T1155)(Citation: LogRhythm Do You Trust Oct 2014)(Citation: OSX Keydnap malware) and [PowerShell](https://attack.mitre.org/techniques/T1086)(Citation: LogRhythm Do You Trust Oct 2014)(Citation: Enigma Phishing for Credentials Jan 2015).", "external_references": [{"external_id": "T1141", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1141"}, {"external_id": "CAPEC-569", "source_name": "capec", "url": "https://capec.mitre.org/data/definitions/569.html"}, {"description": "Sergei Shevchenko. (2015, June 4). New Mac OS Malware Exploits Mackeeper. Retrieved July 3, 2017.", "source_name": "OSX Malware Exploits MacKeeper", "url": "https://baesystemsai.blogspot.com/2015/06/new-mac-os-malware-exploits-mackeeper.html"}, {"description": "Foss, G. (2014, October 3). Do You Trust Your Computer?. Retrieved December 17, 2018.", "source_name": "LogRhythm Do You Trust Oct 2014", "url": "https://logrhythm.com/blog/do-you-trust-your-computer/"}, {"description": "Marc-Etienne M.Leveille. (2016, July 6). New OSX/Keydnap malware is hungry for credentials. Retrieved July 3, 2017.", "source_name": "OSX Keydnap malware", "url": "https://www.welivesecurity.com/2016/07/06/new-osxkeydnap-malware-hungry-credentials/"}, {"description": "Nelson, M. (2015, January 21). Phishing for Credentials: If you want it, just ask!. Retrieved December 17, 2018.", "source_name": "Enigma Phishing for Credentials Jan 2015", "url": "https://enigma0x3.net/2015/01/21/phishing-for-credentials-if-you-want-it-just-ask/"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "credential-access"}], "modified": "2020-02-12T16:34:06.412Z", "name": "Input Prompt", "object_marking_refs": ["marking-"], "revoked": true, "type": "attack-pattern", "x_mitre_contributors": ["Matthew Molyett, @s1air, Cisco Talos"], "x_mitre_detection": "Monitor process execution for unusual programs as well as malicious instances of [Scripting](https://attack.mitre.org/techniques/T1064) that could be used to prompt users for credentials.\n\nInspect and scrutinize input prompts for indicators of illegitimacy, such as non-traditional banners, text, timing, and/or sources.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["User"], "x_mitre_platforms": ["macOS", "Windows"], "x_mitre_version": "2.0"}, {"created": "2022-05-27T14:06:05.130Z", "created_by_ref": "", "description": "Adversaries may create accounts with cloud providers that can be used during targeting. Adversaries can use cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, MEGA, Microsoft OneDrive, or AWS S3 buckets for [Exfiltration to Cloud Storage](https://attack.mitre.org/techniques/T1567/002) or to [Upload Tool](https://attack.mitre.org/techniques/T1608/002)s. Cloud accounts can also be used in the acquisition of infrastructure, such as [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003)s or [Serverless](https://attack.mitre.org/techniques/T1583/007) infrastructure. Establishing cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.(Citation: Awake Security C2 Cloud)\n\nCreating [Cloud Accounts](https://attack.mitre.org/techniques/T1585/003) may also require adversaries to establish [Email Accounts](https://attack.mitre.org/techniques/T1585/002) to register with the cloud provider. ", "external_references": [{"external_id": "T1585.003", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1585/003"}, {"description": "Gary Golomb and Tory Kei. (n.d.). Threat Hunting Series: Detecting Command & Control in the Cloud. Retrieved May 27, 2022.", "source_name": "Awake Security C2 Cloud", "url": "https://awakesecurity.com/blog/threat-hunting-series-detecting-command-control-in-the-cloud/"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "resource-development"}], "modified": "2022-10-25T15:49:14.785Z", "name": "Cloud Accounts", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "3.0.0", "x_mitre_contributors": ["Francesco Bigarella"], "x_mitre_deprecated": false, "x_mitre_detection": "Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during exfiltration (ex: [Transfer Data to Cloud Account](https://attack.mitre.org/techniques/T1537)).", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["PRE"], "x_mitre_version": "1.1"}
{"created": "2017-05-31T21:30:57.201Z", "created_by_ref": "", "description": "Adversaries may gain access to and use third-party software suites installed within an enterprise network, such as administration, monitoring, and deployment systems, to move laterally through the network. Third-party applications and software deployment systems may be in use in the network environment for administration purposes (e.g., SCCM, HBSS, Altiris, etc.).\n\nAccess to a third-party network-wide or enterprise-wide software system may enable an adversary to have remote code execution on all systems that are connected to such a system. The access may be used to laterally move to other systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints.\n\nThe permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the third-party system, or specific domain credentials may be required. However, the system may require an administrative account to log in or to perform it's intended purpose.", "external_references": [{"external_id": "T1072", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1072"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "execution"}, {"kill_chain_name": "mitre-attack", "phase_name": "lateral-movement"}], "modified": "2023-03-30T21:01:36.669Z", "name": "Software Deployment Tools", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_attack_spec_version": "3.1.0", "x_mitre_contributors": ["Shane Tully, @securitygypsy"], "x_mitre_data_sources": ["Application Log: Application Log Content", "Process: Process Creation"], "x_mitre_detection": "Detection methods will vary depending on the type of third-party software or system and how it is typically used. \n\nThe same investigation process can be applied here as with other potentially malicious activities where the distribution vector is initially unknown but the resulting activity follows a discernible pattern. Analyze the process execution trees, historical activities from the third-party application (such as what types of files are usually pushed), and the resulting activities or events from the file/binary/script pushed to systems. \n\nOften these third-party applications will have logs of their own that can be collected and correlated with other data from the environment. Ensure that third-party application logs are on-boarded to the enterprise logging system and the logs are regularly reviewed. Audit software deployment logs and look for suspicious or unauthorized activity. A system not typically used to push software to clients that suddenly is used for such a task outside of a known admin function may be suspicious. Monitor account login activity on these applications to detect suspicious/abnormal usage.\n\nPerform application deployment at regular times so that irregular deployment activity stands out. Monitor process activity that does not correlate to known good software. Monitor account login activity on the deployment system.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["User", "Administrator", "SYSTEM"], "x_mitre_platforms": ["Linux", "macOS", "Windows"], "x_mitre_remote_support": true, "x_mitre_version": "2.1"}, {"created": "2017-05-31T21:30:41.804Z", "created_by_ref": "", "description": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.", "external_references": [{"external_id": "T1041", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1041"}, {"description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.", "source_name": "University of Birmingham C2", "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "exfiltration"}], "modified": "2023-04-07T17:09:14.040Z", "name": "Exfiltration Over C2 Channel", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "3.1.0", "x_mitre_contributors": ["William Cain"], "x_mitre_data_sources": ["Network Traffic: Network Traffic Content", "Network Traffic: Network Traffic Flow", "File: File Access", "Network Traffic: Network Connection Creation", "Command: Command Execution"], "x_mitre_deprecated": false, "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_network_requirements": false, "x_mitre_platforms": ["Linux", "macOS", "Windows"], "x_mitre_version": "2.2"}, {"created": "2020-02-18T18:22:41.448Z", "created_by_ref": "", "description": "Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges. New processes are typically spawned directly from their parent, or calling, process unless explicitly specified. One way of explicitly assigning the PPID of a new process is via the CreateProcess API call, which supports a parameter that defines the PPID to use.(Citation: DidierStevens SelectMyParent Nov 2009) This functionality is used by Windows features such as User Account Control (UAC) to correctly set the PPID after a requested elevated process is spawned by SYSTEM (typically via svchost.exe or consent.exe) rather than the current user context.(Citation: Microsoft UAC Nov 2018)\n\nAdversaries may abuse these mechanisms to evade defenses, such as those blocking processes spawning directly from Office documents, and analysis targeting unusual/potentially malicious parent-child process relationships, such as spoofing the PPID of [PowerShell](https://attack.mitre.org/techniques/T1059/001)/[Rundll32](https://attack.mitre.org/techniques/T1218/011) to be explorer.exe rather than an Office document delivered as part of [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001).(Citation: CounterCept PPID Spoofing Dec 2018) This spoofing could be executed via [Visual Basic](https://attack.mitre.org/techniques/T1059/005) within a malicious Office document or any code that can perform [Native API](https://attack.mitre.org/techniques/T1106).(Citation: CTD PPID Spoofing Macro Mar 2019)(Citation: CounterCept PPID Spoofing Dec 2018)\n\nExplicitly assigning the PPID may also enable elevated privileges given appropriate access rights to the parent process. For example, an adversary in a privileged user context (i.e. administrator) may spawn a new process and assign the parent as a process running as SYSTEM (such as lsass.exe), causing the new process to be elevated via the inherited access token.(Citation: XPNSec PPID Nov 2017)", "external_references": [{"external_id": "T1134.004", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1134/004"}, {"description": "Chester, A. (2017, November 20). Alternative methods of becoming SYSTEM. Retrieved June 4, 2019.", "source_name": "XPNSec PPID Nov 2017", "url": "https://blog.xpnsec.com/becoming-system/"}, {"description": "Loh, I. (2018, December 21). Detecting Parent PID Spoofing. Retrieved June 3, 2019.", "source_name": "CounterCept PPID Spoofing Dec 2018", "url": "https://www.countercept.com/blog/detecting-parent-pid-spoofing/"}, {"description": "Montemayor, D. et al.. (2018, November 15). How User Account Control works. Retrieved June 3, 2019.", "source_name": "Microsoft UAC Nov 2018", "url": "https://docs.microsoft.com/windows/security/identity-protection/user-account-control/how-user-account-control-works"}, {"description": "Schofield, M. & Satran, M. (2018, May 30). Process Creation Flags. Retrieved June 4, 2019.", "source_name": "Microsoft Process Creation Flags May 2018", "url": "https://docs.microsoft.com/windows/desktop/ProcThread/process-creation-flags"}, {"description": "Secuirtyinbits . (2019, May 14). Parent PID Spoofing (Stage 2) Ataware Ransomware Part 3. Retrieved June 6, 2019.", "source_name": "Secuirtyinbits Ataware3 May 2019", "url": "https://www.securityinbits.com/malware-analysis/parent-pid-spoofing-stage-2-ataware-ransomware-part-3"}, {"description": "Stevens, D. (2009, November 22). Quickpost: SelectMyParent or Playing With the Windows Process Tree. Retrieved June 3, 2019.", "source_name": "DidierStevens SelectMyParent Nov 2009", "url": "https://blog.didierstevens.com/2009/11/22/quickpost-selectmyparent-or-playing-with-the-windows-process-tree/"}, {"description": "Tafani-Dereeper, C. (2019, March 12). Building an Office macro to spoof parent processes and command line arguments. Retrieved June 3, 2019.", "source_name": "CTD PPID Spoofing Macro Mar 2019", "url": "https://blog.christophetd.fr/building-an-office-macro-to-spoof-process-parent-and-command-line/"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "defense-evasion"}, {"kill_chain_name": "mitre-attack", "phase_name": "privilege-escalation"}], "modified": "2022-05-03T02:15:42.360Z", "name": "Parent PID Spoofing", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "2.1.0", "x_mitre_contributors": ["Wayne Silva, F-Secure Countercept"], "x_mitre_data_sources": ["Process: Process Creation", "Process: OS API Execution", "Process: Process Metadata"], "x_mitre_defense_bypassed": ["Heuristic Detection", "Host Forensic Analysis"], "x_mitre_deprecated": false, "x_mitre_detection": "Look for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.(Citation: CounterCept PPID Spoofing Dec 2018)\n\nMonitor and analyze API calls to CreateProcess/CreateProcessA, specifically those from user/potentially malicious processes and with parameters explicitly assigning PPIDs (ex: the Process Creation Flags of 0x8XXX, indicating that the process is being created with extended startup information(Citation: Microsoft Process Creation Flags May 2018)). Malicious use of CreateProcess/CreateProcessA may also be proceeded by a call to UpdateProcThreadAttribute, which may be necessary to update process creation attributes.(Citation: Secuirtyinbits Ataware3 May 2019) This may generate false positives from normal UAC elevation behavior, so compare to a system baseline/understanding of normal system activity if possible.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["User", "Administrator"], "x_mitre_platforms": ["Windows"], "x_mitre_version": "1.0"}
{"created": "2020-10-02T16:27:02.339Z", "created_by_ref": "", "description": "Adversaries may gather information about the victim's organization that can be used during targeting. Information about an organization may include a variety of details, including the names of divisions/departments, specifics of business operations, as well as the roles and responsibilities of key employees.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about an organization may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak)(Citation: SEC EDGAR Search) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).", "external_references": [{"external_id": "T1591", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1591"}, {"description": "Seals, T. (2020, October 15). Broadvoice Leak Exposes 350M Records, Personal Voicemail Transcripts. Retrieved October 20, 2020.", "source_name": "ThreatPost Broadvoice Leak", "url": "https://threatpost.com/broadvoice-leaks-350m-records-voicemail-transcripts/160158/"}, {"description": "U.S. SEC. (n.d.). EDGAR - Search and Access. Retrieved August 27, 2021.", "source_name": "SEC EDGAR Search", "url": "https://www.sec.gov/edgar/search-and-access"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "reconnaissance"}], "modified": "2021-08-27T15:37:09.343Z", "name": "Gather Victim Org Information", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["PRE"], "x_mitre_version": "1.1"}
{"created": "2017-05-31T21:30:49.988Z", "created_by_ref": "", "description": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. (Citation: Microsoft Run Key) These programs will be executed under the context of the user and will have the account's associated permissions level.\n\nPlacing a program within a startup folder will cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in.\n\nThe startup folder path for the current user is:\n* C:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\nThe startup folder path for all users is:\n* C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\n\nThe following run keys are created by default on Windows systems:\n* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\n* HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n* HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\n\nThe HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. (Citation: Microsoft RunOnceEx APR 2018) For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\" (Citation: Oddvar Moe RunOnceEx Mar 2018)\n\nThe following Registry keys can be used to set startup folder items for persistence:\n* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\n* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\n* HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\n* HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\n\nThe following Registry keys can control automatic startup of services during boot:\n* HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\n* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\n* HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\n* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n* HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\n* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\n\nThe Winlogon key controls actions that occur when a user logs on to a computer running Windows 7. Most of these actions are under the control of the operating system, but you can also add custom actions here. The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit and HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell subkeys can automatically launch programs.\n\nPrograms listed in the load value of the registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows run when any user logs on.\n\nBy default, the multistring BootExecute value of the registry key HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager is set to autocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\n\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.", "external_references": [{"external_id": "T1060", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1060"}, {"external_id": "CAPEC-270", "source_name": "capec", "url": "https://capec.mitre.org/data/definitions/270.html"}, {"description": "Microsoft. (n.d.). Run and RunOnce Registry Keys. Retrieved November 12, 2014.", "source_name": "Microsoft Run Key", "url": "http://msdn.microsoft.com/en-us/library/aa376977"}, {"description": "Microsoft. (2018, August 20). Description of the RunOnceEx Registry Key. Retrieved June 29, 2018.", "source_name": "Microsoft RunOnceEx APR 2018", "url": "https://support.microsoft.com/help/310593/description-of-the-runonceex-registry-key"}, {"description": "Moe, O. (2018, March 21). Persistence using RunOnceEx - Hidden from Autoruns.exe. Retrieved June 29, 2018.", "source_name": "Oddvar Moe RunOnceEx Mar 2018", "url": "https://oddvar.moe/2018/03/21/persistence-using-runonceex-hidden-from-autoruns-exe/"}, {"description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.", "source_name": "TechNet Autoruns", "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "persistence"}], "modified": "2020-01-23T22:05:32.409Z", "name": "Registry Run Keys / Startup Folder", "object_marking_refs": ["marking-"], "revoked": true, "type": "attack-pattern", "x_mitre_contributors": ["Oddvar Moe, @oddvarmoe"], "x_mitre_detection": "Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders. (Citation: TechNet Autoruns) Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["User", "Administrator"], "x_mitre_platforms": ["Windows"], "x_mitre_system_requirements": ["HKEY_LOCAL_MACHINE keys require administrator access to create and modify"], "x_mitre_version": "1.0"}
{"created": "2020-12-17T02:13:46.247Z", "created_by_ref": "", "description": "Adversaries may forge credential materials that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies, tokens, or other materials to authenticate and authorize user access.\n\nAdversaries may generate these credential materials in order to gain access to web resources. This differs from [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539), [Steal Application Access Token](https://attack.mitre.org/techniques/T1528), and other similar behaviors in that the credentials are new and forged by the adversary, rather than stolen or intercepted from legitimate users. The generation of web credentials often requires secret values, such as passwords, [Private Keys](https://attack.mitre.org/techniques/T1552/004), or other cryptographic seed values.(Citation: GitHub AWS-ADFS-Credential-Generator) Adversaries may also forge tokens by taking advantage of features such as the `AssumeRole` and `GetFederationToken` APIs in AWS, which allow users to request temporary security credentials.(Citation: AWS Temporary Security Credentials)\n\nOnce forged, adversaries may use these web credentials to access resources (ex: [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550)), which may bypass multi-factor and other authentication protection mechanisms.(Citation: Pass The Cookie)(Citation: Unit 42 Mac Crypto Cookies January 2019)(Citation: Microsoft SolarWinds Customer Guidance)  ", "external_references": [{"external_id": "T1606", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1606"}, {"description": "AWS. (n.d.). Requesting temporary security credentials. Retrieved April 1, 2022.", "source_name": "AWS Temporary Security Credentials", "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html"}, {"description": "Chen, Y., Hu, W., Xu, Z., et. al. (2019, January 31). Mac Malware Steals Cryptocurrency Exchanges\u2019 Cookies. Retrieved October 14, 2019.", "source_name": "Unit 42 Mac Crypto Cookies January 2019", "url": "https://unit42.paloaltonetworks.com/mac-malware-steals-cryptocurrency-exchanges-cookies/"}, {"description": "Damian Hickey. (2017, January 28). AWS-ADFS-Credential-Generator. Retrieved December 16, 2020.", "source_name": "GitHub AWS-ADFS-Credential-Generator", "url": "https://github.com/damianh/aws-adfs-credential-generator"}, {"description": "MSRC. (2020, December 13). Customer Guidance on Recent Nation-State Cyber Attacks. Retrieved December 17, 2020.", "source_name": "Microsoft SolarWinds Customer Guidance", "url": "https://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/"}, {"description": "Rehberger, J. (2018, December). Pivot to the Cloud using Pass the Cookie. Retrieved April 5, 2019.", "source_name": "Pass The Cookie", "url": "https://wunderwuzzi23.github.io/blog/passthecookie.html"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "credential-access"}], "modified": "2023-05-04T18:05:16.877Z", "name": "Forge Web Credentials", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "3.1.0", "x_mitre_contributors": ["Dylan Silva, AWS Security"], "x_mitre_data_sources": ["Web Credential: Web Credential Usage", "Logon Session: Logon Session Creation", "Web Credential: Web Credential Creation"], "x_mitre_deprecated": false, "x_mitre_detection": "Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["SaaS", "Windows", "macOS", "Linux", "Azure AD", "Office 365", "Google Workspace", "IaaS"], "x_mitre_version": "1.3"}, {"created": "2022-04-01T02:15:49.754Z", "created_by_ref": "", "description": "Adversaries may attempt to bypass multi-factor authentication (MFA) mechanisms and gain access to accounts by generating MFA requests sent to users.\n\nAdversaries in possession of credentials to [Valid Accounts](https://attack.mitre.org/techniques/T1078) may be unable to complete the login process if they lack access to the 2FA or MFA mechanisms required as an additional credential and security control. To circumvent this, adversaries may abuse the automatic generation of push notifications to MFA services such as Duo Push, Microsoft Authenticator, Okta, or similar services to have the user grant access to their account.\n\nIn some cases, adversaries may continuously repeat login attempts in order to bombard users with MFA push notifications, SMS messages, and phone calls, potentially resulting in the user finally accepting the authentication request in response to \u201cMFA fatigue.\u201d(Citation: Russian 2FA Push Annoyance - Cimpanu)(Citation: MFA Fatigue Attacks - PortSwigger)(Citation: Suspected Russian Activity Targeting Government and Business Entities Around the Globe)", "external_references": [{"external_id": "T1621", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1621"}, {"description": "Catalin Cimpanu. (2021, December 9). Russian hackers bypass 2FA by annoying victims with repeated push notifications. Retrieved March 31, 2022.", "source_name": "Russian 2FA Push Annoyance - Cimpanu", "url": "https://therecord.media/russian-hackers-bypass-2fa-by-annoying-victims-with-repeated-push-notifications/"}, {"description": "Jessica Haworth. (2022, February 16). MFA fatigue attacks: Users tricked into allowing device access due to overload of push notifications. Retrieved March 31, 2022.", "source_name": "MFA Fatigue Attacks - PortSwigger", "url": "https://portswigger.net/daily-swig/mfa-fatigue-attacks-users-tricked-into-allowing-device-access-due-to-overload-of-push-notifications"}, {"description": "Luke Jenkins, Sarah Hawley, Parnian Najafi, Doug Bienstock. (2021, December 6). Suspected Russian Activity Targeting Government and Business Entities Around the Globe. Retrieved April 15, 2022.", "source_name": "Suspected Russian Activity Targeting Government and Business Entities Around the Globe", "url": "https://www.mandiant.com/resources/russian-targeting-gov-business"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "credential-access"}], "modified": "2023-04-04T03:06:34.448Z", "name": "Multi-Factor Authentication Request Generation", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "3.1.0", "x_mitre_contributors": ["Jon Sternstein, Stern Security", "Pawel Partyka, Microsoft 365 Defender", "Shanief Webb"], "x_mitre_data_sources": ["Application Log: Application Log Content", "Logon Session: Logon Session Creation", "Logon Session: Logon Session Metadata", "User Account: User Account Authentication"], "x_mitre_deprecated": false, "x_mitre_detection": "Monitor user account logs as well as 2FA/MFA application logs for suspicious events: unusual login attempt source location, mismatch in location of login attempt and smart device receiving 2FA/MFA request prompts, and high volume of repeated login attempts, all of which may indicate user's primary credentials have been compromised minus 2FA/MFA mechanism. ", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Windows", "Office 365", "Linux", "macOS", "IaaS", "SaaS", "Azure AD", "Google Workspace"], "x_mitre_version": "1.0"}
{"created": "2020-02-11T18:18:34.279Z", "created_by_ref": "", "description": "Adversaries may modify client software binaries to establish persistent access to systems. Client software enables users to access services provided by a server. Common client software types are SSH clients, FTP clients, email clients, and web browsers.\n\nAdversaries may make modifications to client software binaries to carry out malicious tasks when those applications are in use. For example, an adversary may copy source code for the client software, add a backdoor, compile for the target, and replace the legitimate application binary (or support files) with the backdoored one. Since these applications may be routinely executed by the user, the adversary can leverage this for persistent access to the host.", "external_references": [{"external_id": "T1554", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1554"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "persistence"}], "modified": "2021-10-19T03:18:43.648Z", "name": "Compromise Client Software Binary", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_contributors": ["CrowdStrike Falcon OverWatch"], "x_mitre_data_sources": ["File: File Deletion", "File: File Modification", "File: File Creation", "File: File Metadata"], "x_mitre_detection": "Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment. Look for changes to client software that do not correlate with known software or patch cycles. \n\nConsider monitoring for anomalous behavior from client applications, such as atypical module loads, file reads/writes, or network connections.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Linux", "macOS", "Windows"], "x_mitre_version": "1.0"}
{"created": "2023-03-14T14:38:03.673Z", "created_by_ref": "", "description": "Adversaries may directly collect unsecured credentials stored or passed through user communication services. Credentials may be sent and stored in user chat communication applications such as email, chat services like Slack or Teams, collaboration tools like Jira or Trello, and any other services that support user communication. Users may share various forms of credentials (such as usernames and passwords, API keys, or authentication tokens) on private or public corporate internal communications channels.\n\nRather than accessing the stored chat logs (i.e., [Credentials In Files](https://attack.mitre.org/techniques/T1552/001)), adversaries may directly access credentials within these services on the user endpoint, through servers hosting the services, or through administrator portals for cloud hosted services. Adversaries may also compromise integration tools like Slack Workflows to automatically search through messages to extract user credentials. These credentials may then be abused to perform follow-on activities such as lateral movement or privilege escalation (Citation: Slack Security Risks).", "external_references": [{"external_id": "T1552.008", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1552/008"}, {"description": "Michael Osakwe. (2020, November 18). 4 SaaS and Slack Security Risks to Consider. Retrieved March 17, 2023.", "source_name": "Slack Security Risks", "url": "https://www.nightfall.ai/blog/saas-slack-security-risks-2020"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "credential-access"}], "modified": "2023-04-11T00:34:00.779Z", "name": "Chat Messages", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "3.1.0", "x_mitre_contributors": ["Douglas Weir"], "x_mitre_data_sources": ["Application Log: Application Log Content"], "x_mitre_deprecated": false, "x_mitre_detection": "", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Office 365", "SaaS", "Google Workspace"], "x_mitre_version": "1.0"}
{"created": "2020-03-09T13:48:55.078Z", "created_by_ref": "", "description": "Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system.(Citation: TechNet PowerShell) Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the Start-Process cmdlet which can be used to run an executable and the Invoke-Command cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).\n\nPowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\n\nA number of PowerShell-based offensive testing tools are available, including [Empire](https://attack.mitre.org/software/S0363),  [PowerSploit](https://attack.mitre.org/software/S0194), [PoshC2](https://attack.mitre.org/software/S0378), and PSAttack.(Citation: Github PSAttack)\n\nPowerShell commands/scripts can also be executed without directly invoking the powershell.exe binary through interfaces to PowerShell's underlying System.Management.Automation assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI).(Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)(Citation: Microsoft PSfromCsharp APR 2014)", "external_references": [{"external_id": "T1059.001", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1059/001"}, {"description": "Babinec, K. (2014, April 28). Executing PowerShell scripts from C#. Retrieved April 22, 2019.", "source_name": "Microsoft PSfromCsharp APR 2014", "url": "https://blogs.msdn.microsoft.com/kebab/2014/04/28/executing-powershell-scripts-from-c/"}, {"description": "Christensen, L.. (2015, December 28). The Evolution of Offensive PowerShell Invocation. Retrieved December 8, 2018.", "source_name": "SilentBreak Offensive PS Dec 2015", "url": "https://web.archive.org/web/20190508170150/https://silentbreaksecurity.com/powershell-jobs-without-powershell-exe/"}, {"description": "Dunwoody, M. (2016, February 11). GREATER VISIBILITY THROUGH POWERSHELL LOGGING. Retrieved February 16, 2016.", "source_name": "FireEye PowerShell Logging 2016", "url": "https://www.fireeye.com/blog/threat-research/2016/02/greater_visibilityt.html"}, {"description": "Haight, J. (2016, April 21). PS>Attack. Retrieved June 1, 2016.", "source_name": "Github PSAttack", "url": "https://github.com/jaredhaight/PSAttack"}, {"description": "Hastings, M. (2014, July 16). Investigating PowerShell Attacks. Retrieved December 1, 2021.", "source_name": "inv_ps_attacks", "url": "https://powershellmagazine.com/2014/07/16/investigating-powershell-attacks/"}, {"description": "Malware Archaeology. (2016, June). WINDOWS POWERSHELL LOGGING CHEAT SHEET - Win 7/Win 2008 or later. Retrieved June 24, 2016.", "source_name": "Malware Archaeology PowerShell Cheat Sheet", "url": "http://www.malwarearchaeology.com/s/Windows-PowerShell-Logging-Cheat-Sheet-ver-June-2016-v2.pdf"}, {"description": "Microsoft. (n.d.). Windows PowerShell Scripting. Retrieved April 28, 2016.", "source_name": "TechNet PowerShell", "url": "https://technet.microsoft.com/en-us/scriptcenter/dd742419.aspx"}, {"description": "Warner, J.. (2015, January 6). Inexorable PowerShell \u2013 A Red Teamer\u2019s Tale of Overcoming Simple AppLocker Policies. Retrieved December 8, 2018.", "source_name": "Sixdub PowerPick Jan 2016", "url": "https://web.archive.org/web/20160327101330/http://www.sixdub.net/?p=367"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "execution"}], "modified": "2023-03-27T17:19:48.136Z", "name": "PowerShell", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "3.1.0", "x_mitre_contributors": ["Mayuresh Dani, Qualys", "Praetorian", "Ross Brittain"], "x_mitre_data_sources": ["Process: Process Metadata", "Script: Script Execution", "Process: Process Creation", "Command: Command Execution", "Module: Module Load"], "x_mitre_deprecated": false, "x_mitre_detection": "If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nMonitor for loading and/or execution of artifacts associated with PowerShell specific assemblies, such as System.Management.Automation.dll (especially to unusual process names/locations).(Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution (which is applied to .NET invocations). (Citation: Malware Archaeology PowerShell Cheat Sheet) PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.(Citation: FireEye PowerShell Logging 2016) An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.\n\nConsider monitoring for Windows event ID (EID) 400, which shows the version of PowerShell executing in the EngineVersion field (which may also be relevant to detecting a potential [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)) as well as if PowerShell is running locally or remotely in the HostName field. Furthermore, EID 400 may indicate the start time and EID 403 indicates the end time of a PowerShell session.(Citation: inv_ps_attacks)", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Windows"], "x_mitre_remote_support": true, "x_mitre_version": "1.3"}, {"created": "2017-05-31T21:30:30.757Z", "created_by_ref": "", "description": "Shortcuts or symbolic links are ways of referencing other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process. Adversaries could use shortcuts to execute their tools for persistence. They may create a new shortcut as a means of indirection that may use [Masquerading](https://attack.mitre.org/techniques/T1036) to look like a legitimate program. Adversaries could also edit the target path or entirely replace an existing shortcut so their tools will be executed instead of the intended legitimate program.", "external_references": [{"external_id": "T1023", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1023"}, {"external_id": "CAPEC-132", "source_name": "capec", "url": "https://capec.mitre.org/data/definitions/132.html"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "persistence"}], "modified": "2020-01-24T19:36:41.805Z", "name": "Shortcut Modification", "object_marking_refs": ["marking-"], "revoked": true, "type": "attack-pattern", "x_mitre_contributors": ["Travis Smith, Tripwire"], "x_mitre_detection": "Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change or creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["User", "Administrator"], "x_mitre_platforms": ["Windows"], "x_mitre_version": "1.0"}
{"created": "2020-01-24T13:40:47.282Z", "created_by_ref": "", "description": "Adversaries may establish persistence by executing malicious content triggered by a file type association. When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility.(Citation: Microsoft Change Default Programs)(Citation: Microsoft File Handlers)(Citation: Microsoft Assoc Oct 2017) Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.\n\nSystem file associations are listed under HKEY_CLASSES_ROOT\\.[extension], for example HKEY_CLASSES_ROOT\\.txt. The entries point to a handler for that extension located at HKEY_CLASSES_ROOT\\\\[handler]. The various commands are then listed as subkeys underneath the shell key at HKEY_CLASSES_ROOT\\\\[handler]\\shell\\\\[action]\\command. For example: \n\n* HKEY_CLASSES_ROOT\\txtfile\\shell\\open\\command\n* HKEY_CLASSES_ROOT\\txtfile\\shell\\print\\command\n* HKEY_CLASSES_ROOT\\txtfile\\shell\\printto\\command\n\nThe values of the keys listed are commands that are executed when the handler opens the file extension. Adversaries can modify these values to continually execute arbitrary commands.(Citation: TrendMicro TROJ-FAKEAV OCT 2012)", "external_references": [{"external_id": "T1546.001", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1546/001"}, {"description": "Microsoft. (n.d.). Change which programs Windows 7 uses by default. Retrieved July 26, 2016.", "source_name": "Microsoft Change Default Programs", "url": "https://support.microsoft.com/en-us/help/18539/windows-7-change-default-programs"}, {"description": "Microsoft. (n.d.). Specifying File Handlers for File Name Extensions. Retrieved November 13, 2014.", "source_name": "Microsoft File Handlers", "url": "http://msdn.microsoft.com/en-us/library/bb166549.aspx"}, {"description": "Plett, C. et al.. (2017, October 15). assoc. Retrieved August 7, 2018.", "source_name": "Microsoft Assoc Oct 2017", "url": "https://docs.microsoft.com/windows-server/administration/windows-commands/assoc"}, {"description": "Sioting, S. (2012, October 8). TROJ_FAKEAV.GZD. Retrieved August 8, 2018.", "source_name": "TrendMicro TROJ-FAKEAV OCT 2012", "url": "https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/troj_fakeav.gzd"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "privilege-escalation"}, {"kill_chain_name": "mitre-attack", "phase_name": "persistence"}], "modified": "2023-03-30T21:01:40.699Z", "name": "Change Default File Association", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "2.1.0", "x_mitre_contributors": ["Travis Smith, Tripwire", "Stefan Kanthak"], "x_mitre_data_sources": ["Command: Command Execution", "Process: Process Creation", "Windows Registry: Windows Registry Key Modification"], "x_mitre_deprecated": false, "x_mitre_detection": "Collect and analyze changes to Registry keys that associate file extensions to default applications for execution and correlate with unknown process launch activity or unusual file types for that process.\n\nUser file association preferences are stored under  [HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts and override associations configured under [HKEY_CLASSES_ROOT]. Changes to a user's preference will occur under this entry's subkeys.\n\nAlso look for abnormal process call trees for execution of other commands that could relate to Discovery actions or other techniques.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["Administrator", "SYSTEM", "User"], "x_mitre_platforms": ["Windows"], "x_mitre_version": "1.0"}
{"created": "2020-01-14T01:35:00.781Z", "created_by_ref": "", "description": "Adversaries may inject malicious code into processes via VDSO hijacking in order to evade process-based defenses as well as possibly elevate privileges. Virtual dynamic shared object (vdso) hijacking is a method of executing arbitrary code in the address space of a separate live process. \n\nVDSO hijacking involves redirecting calls to dynamically linked shared libraries. Memory protections may prevent writing executable code to a process via [Ptrace System Calls](https://attack.mitre.org/techniques/T1055/008). However, an adversary may hijack the syscall interface code stubs mapped into a process from the vdso shared object to execute syscalls to open and map a malicious shared object. This code can then be invoked by redirecting the execution flow of the process via patched memory address references stored in a process' global offset table (which store absolute addresses of mapped library functions).(Citation: ELF Injection May 2009)(Citation: Backtrace VDSO)(Citation: VDSO Aug 2005)(Citation: Syscall 2014)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via VDSO hijacking may also evade detection from security products since the execution is masked under a legitimate process.  ", "external_references": [{"external_id": "T1055.014", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1055/014"}, {"description": "backtrace. (2016, April 22). ELF SHARED LIBRARY INJECTION FORENSICS. Retrieved June 15, 2020.", "source_name": "Backtrace VDSO", "url": "https://backtrace.io/blog/backtrace/elf-shared-library-injection-forensics/"}, {"description": "Drysdale, D. (2014, July 16). Anatomy of a system call, part 2. Retrieved June 16, 2020.", "source_name": "Syscall 2014", "url": "https://lwn.net/Articles/604515/"}, {"description": "GNU. (2010, February 5). The GNU Accounting Utilities. Retrieved December 20, 2017.", "source_name": "GNU Acct", "url": "https://www.gnu.org/software/acct/"}, {"description": "Jahoda, M. et al.. (2017, March 14). redhat Security Guide - Chapter 7 - System Auditing. Retrieved December 20, 2017.", "source_name": "RHEL auditd", "url": "https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/security_guide/chap-system_auditing"}, {"description": "Ligh, M.H. et al.. (2014, July). The Art of Memory Forensics: Detecting Malware and Threats in Windows, Linux, and Mac Memory. Retrieved December 20, 2017.", "source_name": "ArtOfMemoryForensics"}, {"description": "O'Neill, R. (2009, May). Modern Day ELF Runtime infection via GOT poisoning. Retrieved March 15, 2020.", "source_name": "ELF Injection May 2009", "url": "https://web.archive.org/web/20150711051625/http://vxer.org/lib/vrn00.html"}, {"description": "Petersson, J. (2005, August 14). What is linux-gate.so.1?. Retrieved June 16, 2020.", "source_name": "VDSO Aug 2005", "url": "https://web.archive.org/web/20051013084246/http://www.trilithium.com/johan/2005/08/linux-gate/"}, {"description": "stderr. (2014, February 14). Detecting Userland Preload Rootkits. Retrieved December 20, 2017.", "source_name": "Chokepoint preload rootkits", "url": "http://www.chokepoint.net/2014/02/detecting-userland-preload-rootkits.html"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "defense-evasion"}, {"kill_chain_name": "mitre-attack", "phase_name": "privilege-escalation"}], "modified": "2022-07-07T17:09:09.048Z", "name": "VDSO Hijacking", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "2.1.0", "x_mitre_data_sources": ["Module: Module Load", "Process: OS API Execution"], "x_mitre_defense_bypassed": ["Anti-virus", "Application control"], "x_mitre_deprecated": false, "x_mitre_detection": "Monitor for malicious usage of system calls, such as ptrace and mmap, that can be used to attach to, manipulate memory, then redirect a processes' execution path. Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics)(Citation: GNU Acct)(Citation: RHEL auditd)(Citation: Chokepoint preload rootkits) \n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Linux"], "x_mitre_version": "1.1"}
{"created": "2017-05-31T21:30:32.259Z", "created_by_ref": "", "description": "**This technique has been deprecated and should no longer be used.**\n\nSome adversaries may split communications between different protocols. There could be one protocol for inbound command and control and another for outbound data, allowing it to bypass certain firewall restrictions. The split could also be random to simply avoid data threshold alerts on any one communication.", "external_references": [{"external_id": "T1026", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1026"}, {"description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.", "source_name": "University of Birmingham C2", "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "command-and-control"}], "modified": "2020-03-30T13:59:11.272Z", "name": "Multiband Communication", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_deprecated": true, "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2) Correlating alerts between multiple communication channels can further help identify command-and-control behavior.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Linux", "macOS", "Windows"], "x_mitre_version": "1.0"}
{"created": "2020-03-15T16:16:25.763Z", "created_by_ref": "", "description": "Adversaries may communicate using application layer protocols associated with transferring files to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as FTP, FTPS, and TFTP that transfer files may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the transferred files. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ", "external_references": [{"external_id": "T1071.002", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1071/002"}, {"description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.", "source_name": "University of Birmingham C2", "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "command-and-control"}], "modified": "2020-08-21T14:41:22.911Z", "name": "File Transfer Protocols", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_data_sources": ["Network Traffic: Network Traffic Flow", "Network Traffic: Network Traffic Content"], "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.(Citation: University of Birmingham C2)", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Linux", "macOS", "Windows"], "x_mitre_version": "1.0"}