# CVE-2021-2394：Oralce7月补丁日二次序列化漏洞分析
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## 0x01 漏洞简述
2021年07月21日，360CERT监测发现`Oracle官方`发布了`2021年7月份`的安全更新，本次分析报告选取的是其中一个反序列化漏洞，CVE编号为`CVE-2021-2194`，漏洞等级：`严重`，漏洞评分：`9.8`。
## 0x02 风险等级
评定方式 | 等级  
---|---  
威胁等级 | 严重  
影响面 | 广泛  
攻击者价值 | 高  
利用难度 | 低  
360CERT评分 | 9.8  
## 0x03 漏洞详情
`diff`补丁后发现`WebLogicFilterConfig`的新增了两个黑名单`package`：
    "oracle.eclipselink.coherence.integrated.internal.querying", "oracle.eclipselink.coherence.integrated.internal.cache"
这次的漏洞依然是一个二次序列化漏洞，前半部分的序列化思路和`CVE-2020-14756`类似，后面代码执行的思路来自`CVE-2020-14841`。（要注意的是这个漏洞不能过
`Weblogic`
新增的白名单机制，但是可以走iiop）在`oracle.eclipselink.coherence.integrated.internal.querying`中发现了`FilterExtractor`这个类，他的`readExternal`方法如下：
跟到`readAttributeAccessor`方法里，当id为1的时候会返回一个`MethodAttributeAccessor`对象，这个对象是`CVE-2020-14841`之后被加入了黑名单的，不过在这里返回的话就不会走反序列化的流程。
也就是说我们依然可以利用`MethodAttributeAccessor`对象，并且最终会赋值到`attributeAccessor`属性，这个对象可以调用任意方法（也不是任意，后面会讲）。继续看到`FilterExtractor`的`extract`方法。
主动去调用了`attributeAccessor#getAttributeValueFromObject`方法，我们看到`MethodAttributeAccessor#getAttributeValueFromObject`。
该方法会通过反射执行`anObject`的`getMethod`方法，这两个变量都是攻击者可控的，于是就能够进行利用，不过这里的`parameters`为`null`，所以只能调用无参方法。
不难想到利用`JdbcRowSetImpl`。
接着，我们还需要找到一个地方来调用`FilterExtractor#extract`。这里利用的又是`CVE-2020-14756`里使用过的`com.tangosol.util.aggregator.TopNAggregator.PartialResult`，这里就不细说了，最终可以调用一个`Comparator`的`compare`方法。
不难想到`ExtractorComparator`。 这里只需要给`m_extractor`赋值为`FilterExtractor`。
而他的`readExternal`方法，刚好又回从输入流中读取`m_extractor`值。
### 构造POC需要注意的点
在给`MethodAttributeAccessor`对象进行赋值的时候，仅仅是赋值了`getter name`和`setter name`。
于是，当执行到`FilterExtractor#extract`时，会先执行`isInitialized`。
这里会返回`false`。
于是调用`initializeAttributes`，这里会根据我们设置的`getMethodName`、`setMethodName`通过反射获取具体的方法。
这里`isWriteOnly`默认为`false`，不能像之前`CVE-2020-14841`一样通过反射进行修改改值，因为`MethodAttributeAccessor`在黑名单里。
这里的逻辑是获取我们要调用的get方法，这里是一个无参方法，反射之后，获取get方法的返回值类型，然后传给set方法，所以这里set方法的参数是根据get方法来的（不一定必须是`getter/setter`）。
最终找到的`JdbcRowSetImpl`方法：
    get -> connect()
    set -> setConnection()
这样，刚好满足`connect`返回值类型是`set`方法的形参类型。
### 漏洞证明
iiop利用：
### 漏洞修复
第一个就是把利用中使用的两个package加入了黑名单里。
第二个就是基于`iiopinputstream`进行修复，这里只是简略的跟进`diff`了一下，在进入序列化`IIOP`流程之后，第一幅图是没修复之前，`s_streamfactory`是`DefaultObjectStreamFactory`，而第二幅图是修复之后，`s_streamfactory`被设置为了`WLSObjectStreamFactory`
具体设置流程在`CoherenceClusterManager`，这是`Weblogic`初始化的流程里
这里由于新增了`WLSCoherenceConfiguator`的初始化，就会给`s_streamfactory`赋值`WLSObjectStreamFactory`
如果`s_streamfactory`是`WLSObjectStreamFactory`，那么就会调用他的`getObject`，会实例化一个`WLSObjectInputStream`
后续就会去读`WLSObjectInputStream`的`byte`数据
这个byte数据在初始化`WLSObjectInputStream`的过程中是不会进行赋值的，于是是为空。
接着，后面在read的时候就会爆eof的错误。
## 0x04 时间线
2021-07-20 Oracle发布安全更新通告
2021-07-21 360CERT发布通告
2021-07-23 360CERT发布分析
## 0x05 参考链接
[1、 Oracle Critical Patch Update Advisory – July
2021](https://www.oracle.com/security-alerts/cpujul2021.html)
## 0x06 特制报告下载链接
一直以来，360CERT对全球重要网络安全事件进行快速通报、应急响应。为更好地为政企用户提供最新漏洞以及信息安全事件的安全通告服务，现360CERT正式推出安全通告特制版报告，以便用户做资料留存、传阅研究与查询验证。
用户可直接通过以下链接进行特制报告的下载。
[CVE-2021-2394：Oralce7月补丁日二次序列化漏洞分析](http://certdl.qihucdn.com/cert-public-file/buddha_analyze/%E3%80%90360CERT%E3%80%91CVE-2021-2394_Oralce7%E6%9C%88%E8%A1%A5%E4%B8%81%E6%97%A5%E4%BA%8C%E6%AC%A1%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90.pdf)
若有订阅意向与定制需求请发送邮件至 g-cert-report#360.cn ，并附上您的 公司名、姓名、手机号、地区、邮箱地址。