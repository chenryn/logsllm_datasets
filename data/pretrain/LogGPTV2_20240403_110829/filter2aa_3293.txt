我是衬衫 忍者的弟弟 今天我去 TG 看片 发现了一个机器人 感觉很好玩 那我们也整一个
用来扫描吧！
首先 我们去买一个服务器 好的 1 分钟过去了 我们买完了
我们现在需要注册一个机器人
@BotFather TG 加他
起一个好听一点的名字就可以了
很快啊 我们就拿到了自己的 Token
https://core.telegram.org/bots/api 这个是 API 文档 可以随便看看
我建议大家先去看一次 python-telegram
那么开始吧
导包下
from telegram import Update,Bot
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
首先 main 方法
绑定方法
我们先看看 start 方法去熟悉一下
update.message.reply_text(“这个是回复用的”)
我们可以通过这个 去发消息
怎么读取消息呢？
用这个 update.message.text
好的 我们弄出来最基本的东西了 我们现在可以通过 TG 发消息来调用 python 了
举个例子 我们来弄一个目录爆破
Pathscan
Bot 是用来发文件的 在上文
这个里面我用了 ffuf 来扫 因为快 然后保存到 test.json 里 用 sendDocument 去发文件
这里面我们输入的命令是/pathscan 通过上面的 add_handler 绑定的那个哦
我的一些正则 瞎 jb 写的
#!/usr/bin/env python
# -*- coding: utf-8 -*-
import re
import requests
import os
from ESD import EnumSubDomain
import nmap
import socket
from telegram import Update,Bot
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
bot=Bot("your token")
def parseDomain(info):
domain= re.findall('https?://(?:[-\w.]|(?:%[\da-fA-F]{2}))+', info)
return domain[0]
def parseInfo(info):
#取 URL
url =
re.findall('http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+',info)
return url[0]
def parseIP(info):
ip = re.findall("(?:[0-9]{1,3}\.){3}[0-9]{1,3}$",info)
domain = re.findall(r'(?:[a-zA-Z0-9](?:[a-zA-Z0-9\-]{,61}[a-zA-Z0-9])?\.)+[a-zA-Z]{2,6}', info)
if ip :
return ip[0]
elif domain
:
new_ip = socket.gethostbyname(domain[0])
return new_ip
def parseRootDomain(info):
rootdomain=re.search("([a-zA-Z0-9][-a-zA-Z0-9]{0,62}(\.[a-zA-Z0-9][-a-zA-Z0-9]{0,62}))",info)
return rootdomain[0]
def start(update: Update, context: CallbackContext) -> None:
update.message.reply_text("好兄弟 给我发个 URL 让我扫描吧")
update.message.reply_text(update.message.text)
def pathscan(update: Update, context: CallbackContext) -> None:
global bot
update.message.reply_text(parseDomain(update.message.text)+"扫描中好兄弟请不要着
急")
domain=parseDomain(update.message.text)
os.system("ffuf -w /root/dict/fuzz.txt -o /root/result/test.json -t 50 -u "+domain+"FUZZ ")
bot.sendDocument(CHAT_ID, open("/root/result/test.json", 'rb'))
os.remove("/root/result/test.json")
def get_url(update: Update, context: CallbackContext) -> None:
response = requests.get(parseInfo(update.message.text))
update.message.reply_text(response.text)
def portScan(update: Update, context: CallbackContext) -> None:
global bot
update.message.reply_text(parseIP(update.message.text)+" 在扫描了！！等着吧")
ip = parseIP(update.message.text)
scanner = nmap.PortScanner()
scanner.scan(ip,ports="1-10000",arguments="-oN /root/result/ports.json")
bot.sendDocument(CHAT_ID, open("/root/result/ports.txt", 'rb'))
os.remove("/root/result/ports.txt")
def subdomain(update: Update, context: CallbackContext) -> None:
result = EnumSubDomain(parseRootDomain(update.message.text)).run()
print("running")
update.message.reply_text(result)
def main():
updater = Updater("your token", use_context=True)
dispatcher = updater.dispatcher
dispatcher.add_handler(CommandHandler("start", start))
dispatcher.add_handler(CommandHandler("pathscan", pathscan))
dispatcher.add_handler(CommandHandler("get_url", get_url))
dispatcher.add_handler(CommandHandler("portscan", portScan))
dispatcher.add_handler(CommandHandler("subdomain", subdomain))
updater.start_polling()
updater.idle()
if __name__ == '__main__':
main()
剩下随意
直接服务器运行 nohup python3 app.py&
我们可以用这个机器人做很多事情这里不展开写了 我后面会加上 Bypass 一些东西的功能
然后把其他模块写全 比如子域名 我就是随便找了一个没好好写