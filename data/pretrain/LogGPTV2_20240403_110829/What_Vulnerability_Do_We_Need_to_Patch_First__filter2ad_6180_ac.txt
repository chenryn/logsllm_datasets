# Introduction

In this study, we explore the prioritization of vulnerabilities in a networked system using different methods. The goal is to identify and patch the most critical vulnerabilities efficiently. We compare the effectiveness and performance of various approaches, including the Exhaustive Search (ES) method and several combined Influence Models (IMs).

## Simulation Setup

We conducted simulations to evaluate the ranking of vulnerabilities in the Potential Security Vulnerabilities (PSV) list under different network scenarios. The simulations were performed on a network with a specific topology, as shown in Figure 4, where the objective is to compromise a host in the database (DBs). The number of hosts ranged from 20 to 100, as the ES method timed out for 200 hosts. We selected k-percentage of ranked vulnerabilities for the PSV, with k values of 0.05, 0.25, and 0.5 (i.e., top 5%, 25%, and 50%).

### Network Topology
**Figure 4: Example Networked System used in Simulations**

## Scenarios and Results

### Scenario 1: Identical Hosts and Vulnerabilities
In this scenario, all hosts have identical vulnerability information. The results showed that all combined IMs (TD, BU, and HB) computed an equivalent solution to the ES method, but with significantly improved performance. The computational time for TD, BU, and HB was equal due to the same algorithms being used.

**Table IX: Time to Compute the PSV (in seconds)**

| No. of Hosts | ES       | TD       | BU       | HB       |
|--------------|----------|----------|----------|----------|
| 20           | 0.344    | 0        | 0        | 0        |
| 40           | 6.708    | 0.031    | 0.031    | 0.031    |
| 60           | 39.46    | 0.073    | 0.073    | 0.073    |
| 80           | 134.762  | 0.112    | 0.112    | 0.112    |
| 100          | 345.642  | 0.204    | 0.204    | 0.204    |

### Scenario 2: Varying Number of Hosts
In this scenario, the number of hosts in subnets was varied, with Subnet3 and Subnet4 having twice as many hosts as Subnet1 and Subnet2. The results were equivalent to those in Scenario 1.

### Scenario 3: Varying Number of Vulnerabilities
A different number of identical vulnerabilities were assigned to each host in an identical network topology. When k ∈ {0.05, 0.25}, all solutions were equivalent to the ES method. When k = 0.5, the solution did not fully match, but as the number of hosts increased, the set coverage (the percentage of vulnerabilities in the PSV) converged to 100%.

**Table X: Set Coverage in Scenario 3, k = 0.5**

| No. of Hosts | TD       | BU       | HB       |
|--------------|----------|----------|----------|
| 20           | 97.14    | 97.14    | 97.14    |
| 40           | 80       | 80       | 80       |
| 60           | 73.68    | 73.68    | 73.68    |
| 80           | 100      | 100      | 100      |
| 100          | 100      | 100      | 100      |

### Scenario 4: Varying Vulnerability Values
In this scenario, the network topology was the same, but with different risk values for different vulnerabilities. Two vulnerabilities with a risk value of five were assigned to hosts in Subnet1 and Subnet2, and two vulnerabilities with a risk value of two were assigned to hosts in Subnet3 and Subnet4. The PSV of the TD method did not match well with the ES method, but others matched equivalently. As the number of hosts increased, the set coverage for the TD method converged to 100%.

**Table XI: Set Coverage in Scenario 4, k = 0.25**

| No. of Hosts | TD       | BU       | HB       |
|--------------|----------|----------|----------|
| 20           | 45.45    | 90.91    | 90.91    |
| 40           | 42.86    | 76.19    | 76.19    |
| 60           | 41.94    | 70.97    | 70.97    |
| 80           | 41.18    | 100      | 100      |
| 100          | 59.15    | 100      | 100      |

### Scenario 5: Mixed Topologies, Varying Number of Hosts, and Different Vulnerabilities
This scenario involved mixed topologies, varying numbers of hosts, and different vulnerabilities. The BU method did not match well for k = 0.05. By increasing the size of the PSV by 20% for the TD and HB methods, we found an equivalent solution to the ES method for all k values.

**Table XII: Set Coverage in Scenario 5**

| No. of Hosts | TD       | BU       | HB       | HB2      |
|--------------|----------|----------|----------|----------|
| 20           | 0        | 0        | 0        | 0        |
| 40           | 0        | 0        | 0        | 0        |
| 60           | 25       | 0        | 0        | 25       |
| 80           | 50       | 0        | 0        | 50       |
| 100          | 57.14    | 0        | 0        | 14.29    |

## Discussion

### Adjusting the Weight
We used a weight value of α = 0.5, which was reasonably selected. Results showed that using combined IMs, a nearly equivalent solution to the ES method was computed. Further, we demonstrated through simulations that adjusting the weight can improve the set coverage and the order of vulnerabilities in the PSV.

### Order of Vulnerabilities in the PSV
Although the set coverage was high, the actual order of vulnerabilities varied when combined IMs were used. One approach to address this is to perform a security analysis for the vulnerabilities in the PSV only, which does not consider all possible cases. This method performs at a fraction of the ES method's performance.

### Combining Multiple Objectives
We used a single security metric to compute the PSV. To extend the prioritization, one can consider multiple security objectives (e.g., minimizing both risk and cost) instead of analyzing individual security metrics. An idea is to use combined security metrics with combined IMs.

## Conclusion

Computing the PSV for patching is challenging in large networked systems with many hosts and vulnerabilities. ARMs are used to analyze security and provide solutions, but these solutions are only for the current state of the networked system. The security must be reanalyzed after updates, causing a scalability problem. We used combined IMs to overcome this issue, showing that the PSV computed using combined IMs is equivalent to the ES method while dramatically improving performance. Simulations also showed very similar results in various network scenarios.

## Acknowledgment
This research was supported by the NATO Science for Peace & Security Multi-Year Project (MD.SFPP 984425).

## References
[References listed here as provided in the original text]

---

This revised version provides a clearer, more structured, and professional presentation of the research findings and methodology.