1
ID
W 7H3
3
W 7H3
1
REH1
3
W 7H3
2
W 7H2
3
Cost Rank
ES Rank
1
2
3
4
5
1
5
2
3
8
ID
REH1
1
W 7H2
4
REH1
2
REH1
5
W 7H2
2
to each host in an identical network topology in this sce-
nario: (i) no vulnerabilities for Subnet1 hosts, (ii) two for
Subnet2 hosts, (iii) four for Subnet3 hosts, (iv) six for
Subnet4 hosts. When k ∈ {0.05,0.25}, all solutions were
equivalent to the ES method. When k = 0.5, the solution did
not match fully, but as the number of hosts increased, the
set coverage (the percentage of vulnerabilities in the PSV)
converged to 100% as shown in Table X.
IV. SIMULATION
We conduct simulations to investigate the ranking of
vulnerabilities in the PSV in different network scenarios
using the risk analysis. The performance and accuracy of
computing the PSV are measured. The simulation network is
shown in Figure 4, where the attack goal is to compromise a
host in the database (DBs). The number of hosts ranges from
20 to 100, because the ES method timed out (> 3 hours) for
200 hosts. To compare results, we selected k-percentage of
ranked vulnerabilities for the PSV, for k ∈ {0.05,0.25,0.5}
(i.e., top 5%, 25% and 50%).
ůůͲхŝŶƚĞƌŶĂů
/ŶƚĞƌŶĂůͲх

&t
/ŶƚĞƌŶĂů
ƐƵďŶĞƚϭ
ƐƵďŶĞƚϮ
ƐƵďŶĞƚϯ
ƐƵďŶĞƚϰ
&t
Ɛ
Figure 4. Example Networked System used in Simulations
Scenario 1: Identical hosts and vulnerabilities
In this scenario, identical topology and vulnerability infor-
mation are used. The result showed that all combined IMs
(TD, BU and HB) computed an equivalent solution to the
ES method, but the performance is dramatically improved
as shown in Table IX. Computational time for T D, BU and
HB are equal because the algorithms used are the same.
TIME TO COMPUTE THE PSV (IN SECONDS)
Table IX
No. of Hosts
20
ES
TD
BU
HB
0.344
0
0
0
40
6.708
0.031
0.031
0.031
60
39.46
0.073
0.073
0.073
80
134.762
0.112
0.112
0.112
100
345.642
0.204
0.204
0.204
Scenario 2: Varying number of hosts
In this scenario, the number of hosts in subnets are varied
from Scenario 1, with the number of hosts in Subnet3 and
Subnet4 are twice larger than in Subnet1 and Subnet2. The
result showed an equivalent solution as in Scenario 1.
Scenario 3: Varying number of vulnerabilities
A different number of identical vulnerabilities are assigned
SET COVERAGE IN SCENARIO 3, k = 0.5
Table X
No. of Hosts
TD
BU
HB
20
97.14
97.14
97.14
40
80
80
80
60
73.68
73.68
73.68
80
100
100
100
100
100
100
100
Scenario 4: Varying vulnerability values
In this scenario, the network topology was the same with
different risk values for different vulnerabilities. We assigned
two vulnerabilities for hosts in Subnet1 and Subnet2 with
the risk value of ﬁve, and two vulnerabilities for hosts
in Subnet3 and Subnet4 with the risk value of two. We
observed that the PSV of the TD method did not match
well with the ES method, but others matched equivalent.
However, as the number of hosts increased, the set coverage
increased for the TD method (converging to 100%). Table
XI shows the result for k = 0.25, which showed the largest
difference in the solution.
SET COVERAGE IN SCENARIO 4, k = 0.25
Table XI
No. of Hosts
TD
BU
HB
20
45.45
90.91
90.91
40
42.86
76.19
76.19
60
41.94
70.97
70.97
80
41.18
100
100
100
59.15
100
100
Scenario 5: Varying the number of hosts, the number
of vulnerabilities and vulnerability values
This scenario consists of mixed topologies, varying number
of hosts and different vulnerabilities. Details are omitted due
to space limitations. The result is shown in Table XII. The
result showed that the PSV of the BU method did not match
well for k = 0.05. We observed that by increasing the size of
the PSV by 20% for the TD and the HB methods, we found
an equivalent solution to the ES method for all k values.
For a small sized PSV (e.g., k = 0.05), the size increase is
not large (i.e., 20% of 5%, which is equivalent to k = 0.06,
or 6%). We also observed that different weight can give a
better solution (e.g., HB2 at 40 hosts and k = 0.25, where
HB2 is a HB method with α = 0.9).
V. DISCUSSION
Adjusting the weight: We used the weight value of
α = 0.5, which was reasonably selected. Results showed that
using the combined IMs, a nearly equivalent solution to the
688
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:24:27 UTC from IEEE Xplore.  Restrictions apply. 
Table XII
SET COVERAGE IN SCENARIO 5
No. of Hosts
TD
BU
HB
HB2
TD
BU
HB
HB2
TD
BU
HB
HB2
20
0
0
0
0
56.25
100
100
100
25
100
100
87.5
40
0
0
0
0
45.16
96.78
96.78
100
22.58
96.78
96.78
83.87
k =
0.05
k =
0.25
k =
0.5
60
25
0
0
25
30.53
97.98
97.98
97.98
25
93.75
93.75
89.58
80
50
0
0
50
32.23
98.31
98.31
98.31
23.81
93.65
93.65
87.30
100
57.14
0
0
14.29
33.33
98.63
98.63
98.63
24.05
93.67
93.67
93.67
ES method is computed. Further, we showed by simulations
that we can compute another solution that can match more
closely with the ES method using different weights. That is,
assigning the weight value appropriately can improve the set
coverage, as well as the order of vulnerabilities in the PSV.
Order of vulnerabilities in the PSV: Although the set
coverage was relatively high for various network scenarios,
the actual order of vulnerabilities varies when combined
IMs are used. To address this problem, one can perform
a security analysis for the vulnerabilities in the PSV only,
which does not consider all possible cases. The performance
of this method is in fraction of the ES method.
Combining multiple objectives: We only used a single
security metric to compute the PSV. To extend the pri-
oritization, one can consider multiple security objectives
(e.g., minimizing both risk and cost) instead of analyzing
individual security metrics. An idea is to use combined
security metrics with combined IMs.
VI. CONCLUSION
Computing the PSV to patch is a difﬁcult in a large
sized networked system with many hosts and vulnerabilities.
ARMs are used to analyze the security and provide solutions
(e.g., locate a vulnerability to patch), but these solutions
are only for the current state of the networked system.
Hence, the security must be reanalyzed when the networked
system is updated (i.e., after a vulnerability patch), causing a
scalability problem. We used the combined IMs to overcome
the scalability problem. Important hosts and vulnerabilities
are ranked, and their associated metric values are combined
to give a single value that reﬂects both network and vulner-
ability information. We showed that compute the PSV using
the combined IMs is equivalent to the ES method, while
the performance improved dramatically. We also showed via
simulations that very similar results are obtained in various
network scenarios.
ACKNOWLEDGEMENT
This research was supported by the NATO Science for
Peace & Security Multi-Year Project (MD.SFPP 984425).
689
REFERENCES
[1] H. Cavusoglu, H. Cavusoglu, and J. Zhang, “Economics of
Security Patch Management.” in Proc. of WEIS, 2006.
[2] B. Brykczynski and R. Small, “Reducing Internet-based Intru-
sions: Effective Security Patch Management,” IEEE Software,
vol. 20, no. 1, pp. 50–57, Jan 2003.
[3] T. Gerace and H. Cavusoglu, “The Critical Elements of the
Patch Management Process,” Communnications of the ACM,
vol. 52, no. 8, pp. 117–121, Aug. 2009.
[4] P. Mell, T. Bergeron, and D. Henning, “Creating a Patch and
Vulnerability Management Program,” NIST Special Publica-
tion, vol. 800, p. 40, 2005.
[5] M. Walker. NIST: Patch management has inherent challenges.
http://www.ﬁercegovernmentit.com/
[Online]. Available:
story/nist-patch-management-has-inherent-challenges/
2013-07-29
[6] X. Ou, W. Boyer, and M. McQueen, “A Scalable Approach to
Attack Graph Generation,” in Proc. of CCS, 2006, pp. 336–
345.
[7] K. Ingols, R. Lippmann, and K. Piwowarski, “Practical attack
graph generation for network defense,” in Proc. of ACSAC,
2006.
[8] J. Hong and D. Kim, “Performance Analysis of Scalable
Attack Representation Models,” in Proc. of SEC, 2013, pp.
330–343.
[9] M. Albanese, S. Jajodia, and S. Noel, “Time-efﬁcient and
Cost-effective Network Hardening using Attack Graphs,” in
Proc. of DSN, 2012.
[10] A. Roy, D. Kim, and K. Trivedi, “Scalable Optimal Coun-
termeasure Selection using Implicit Enumeration on Attack
Countermeasure Trees,” in Proc. of DSN, 2012.
[11] R. Lippmann and K. Ingols, “An Annotated Review of Past
Papers on Attack Graphs,” ESC-TR-2005-054, 2005.
[12] T. Islam and L. Wang, “A Heuristic Approach to Minimum-
Cost Network Hardening Using Attack Graph,” in Proc. of
NTMS, 2008, pp. 1–5.
[13] F. Chen, D. Liu, Y. Zhang, and J. Su, “A Scalable Approach to
Analyzing Network Security using Compact Attack Graphs,”
Journal of Networks, vol. 5, no. 5, 2010.
[14] V. Mehta, C. Bartzis, H. Zhu, E. Clarke, and J. Wing, “Rank-
ing Attack Graphs,” in Proc. of RAID. Berlin, Heidelberg:
Springer-Verlag, 2006, pp. 127–144.
[15] R. Sawilla and D. Skillicorn, “Partial cuts in attack graphs
for cost effective network defence,” in Proc. of HST, 2012,
pp. 291–297.
[16] N. Poolsappasit, R. Dewri, and I. Ray, “Dynamic Security
Risk Management Using Bayesian Attack Graphs,” TDSC,
vol. 9, no. 1, pp. 61–74, 2012.
[17] J. Hong and D. Kim, “Scalable Security Analysis in Hier-
archical Attack Representation Model using Centrality Mea-
sures,” in Proc. of DSNW, 2013.
[18] R. Sawilla and X. Ou, “Identifying critical attack assets in
dependency attack graphs,” in Proc. of ESORICS. Berlin,
Heidelberg: Springer-Verlag, 2008, pp. 18–34.
[19] F. Cadini, E. Zio, and C. Petrescu, “Using Centrality Measures
to Rank the Importance of the Components of a Complex
Network Infrastructure,” in Proc. of CRITIS, 2009, vol. 5508.
[20] L. Gallon and J. Bascou, “Using CVSS in Attack Graphs,”
in Proc. of ARES, 2011, pp. 59–66.
[21] X. Ou and S. Govindavajhala, “MulVAL: A Logic-based
Network Security Analyzer,” in Proc. of USENIX Security,
2005, pp. 113–128.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:24:27 UTC from IEEE Xplore.  Restrictions apply.