| :| 0x00400d00 test rax, rax
| ,=== 0x00400d0a cmp word [local_12h], 0x5f
; [0x5f:2]=0xffff ; '_' ; 95
| |`== 0x00400d13 nop
| | ; JMP XREF from 0x00400d11 (fcn.00400cdd)
| `-> 0x00400d14 cmp word [local_12h], 0x5f
; [0x5f:2]=0xffff ; '_' ; 95
| ,= 0x00400d25 movzx ebx, word [local_12h]
| 0x00400d29 mov rax, qword [local_28h]
| 0x00400d2d mov rdi, rax
; 字符串 group 作为参数
| 0x00400d30 call sub.malloc_c81
; sub.malloc_c81 函数创建一个 group 结构体，并将其返回
| 0x00400d35 mov rdx, rax
| 0x00400d38 movsxd rax, ebx
| 0x00400d3b mov qword [rax*8 + 0x6023e0], rdx
; [0x6023e0:8]=0 ; 将返回的 group 结构体放进 groups，作为 gro
ups[i]
| 0x00400d43 movzx eax, word [local_12h]
| 0x00400d47 cdqe
| 0x00400d49 mov rax, qword [rax*8 + 0x6023e0]
; [0x6023e0:8]=0 ; 返回 groups[i]
| 0x00400d51 add rsp, 0x28
; '('
| 0x00400d55 pop rbx
| 0x00400d56 pop rbp
\ 0x00400d57 ret
该函数在第一个 groups[i] 为 0 的地方创建一个新的 group，将其放入 groups，并
返回这个 groups[i]。
总的来说，当添加一个 user 时，首先检查输入的 group 是否存在，如果存在，那
么将这个 group->ref_count 加 1，设置 user->group 指向这个 group-
>group_name，否则新建一个 group，并将新 group->ref_count 设置为 1，同样设
置 user->group 指向它。
display
1126
6.1.15 pwn 34C3CTF2017 SimpleGC
其中 display-a-user 用于打印出指定 index 的 user，即 users[i]。display-a-group
遍历 users，并打印出指定 group 与 users[i]->group 相同的 users[i]。根据经验，
这个功能就是为了泄漏 heap 和 libc 地址的。
edit a group
我们比较感兴趣的修改 group 操作：
[0x00400a60]> pdf @ sub.Enter_index:_31b
/ (fcn) sub.Enter_index:_31b 302
| sub.Enter_index:_31b ();
| ; var int local_54h @ rbp-0x54
| ; var int local_50h @ rbp-0x50
| ; var int local_48h @ rbp-0x48
| ; var int local_40h @ rbp-0x40
| ; var int local_30h @ rbp-0x30
| ; var int local_8h @ rbp-0x8
| ; CALL XREF from 0x00401573 (main)
| 0x0040131b push rbp
| 0x0040131c mov rbp, rsp
| 0x0040131f sub rsp, 0x60
; '`'
| 0x00401323 mov rax, qword fs:[0x28]
; [0x28:8]=-1 ; '(' ; 40
| 0x0040132c mov qword [local_8h], rax
| 0x00401330 xor eax, eax
| 0x00401332 mov edi, str.Enter_index:
; 0x4016d5 ; "Enter index: "
| 0x00401337 mov eax, 0
| 0x0040133c call sym.imp.printf
; int printf(const char *format)
| 0x00401341 lea rax, [local_40h]
| 0x00401345 mov esi, 4
| 0x0040134a mov rdi, rax
| 0x0040134d call sub.read_b56
; ssize_t read(int fildes, void *buf, size_t nbyte)
| 0x00401352 lea rax, [local_40h]
| 0x00401356 mov rdi, rax
| 0x00401359 call sym.imp.atoi
1127
6.1.15 pwn 34C3CTF2017 SimpleGC
; int atoi(const char *str)
| 0x0040135e mov dword [local_54h], eax
| 0x00401361 mov eax, dword [local_54h]
; eax 为索引 i
| 0x00401364 mov rax, qword [rax*8 + 0x6020e0]
; [0x6020e0:8]=0 ; 取出 users[i]
| 0x0040136c test rax, rax
| ,=group
| || 0x004013bb mov esi, 0x18
; 24
| || 0x004013c0 mov rdi, rax
1128
6.1.15 pwn 34C3CTF2017 SimpleGC
| || 0x004013c3 call sub.read_b56
; 将 group 逐字节写入 users[i]->group，函数结束
| ,=== 0x004013ca lea rax, [local_30h]
; 当输入 "n" 时
| | | 0x004013ce mov esi, 0x18
; 24
| | | 0x004013d3 mov rdi, rax
| | | 0x004013d6 call sub.read_b56
; 读入 group 到 local_30h
| | | 0x004013db lea rax, [local_30h]
| | | 0x004013df mov rdi, rax
| | | 0x004013e2 call sub.strcmp_be0
; 如果 groups 中存在同名 group，将该 group 的 ref_count 加 1
，并返回。否则返回 0
| | | 0x004013e7 mov qword [local_50h], rax
| | | 0x004013eb cmp qword [local_50h], 0
| |,==group_name
| ||| 0x00401414 mov qword [rax + 0x10], rdx
; 将 users[i]->group 赋值为 groups[k]->group_name
| ,==== 0x0040141a mov eax, dword [local_54h]
; 当返回值不是 0 时
| || | 0x0040141d mov rax, qword [rax*8 + 0x6020e0]
; [0x6020e0:8]=0 ; 取出 users[i]
1129
6.1.15 pwn 34C3CTF2017 SimpleGC
| || | 0x00401425 mov rdx, qword [local_50h]
| || | 0x00401429 mov rdx, qword [rdx]
; 取出 groups[k]->group_name
| || | 0x0040142c mov qword [rax + 0x10], rdx
; 将 users[i]->group 赋值为 groups[k]->group_name
| ||,== 0x00401432 nop
| ||| ; JMP XREF from 0x00401430 (sub.Enter_index:_31b)
| ||| ; JMP XREF from 0x00401418 (sub.Enter_index:_31b)
| ||| ; JMP XREF from 0x004013c8 (sub.Enter_index:_31b)
| ```--> 0x00401433 mov rax, qword [local_8h]
| 0x00401437 xor rax, qword fs:[0x28]
| ,= 0x00401447 leave
\ 0x00401448 ret
该函数有两种操作：
输入 "y" 时：修改 users[i]->group，于是所有具有相同 group 的 user->group
都被修改了。这样的问题是会造成有两个同名 group 的存在。
输入 "n" 时：如果 group 已经存在，则将 group->ref_count 加 1，并设置
users[i]->group 赋值为 group->group_name。否则新建一个 new_group，将
group_ref_count 设置为 1，同样将 users[i]->group 赋值为 new_group-
>group_name。这里同样存在问题，当修改了一个 user 的 group 之后，原
group->ref_count 并没有减 1，可能会造成溢出。
delete a user
最后是删除 user 的操作：
[0x00400a60]> pdf @ sub.Enter_index:_1c4
/ (fcn) sub.Enter_index:_1c4 186
| sub.Enter_index:_1c4 ();
| ; var int local_14h @ rbp-0x14
1130
6.1.15 pwn 34C3CTF2017 SimpleGC
| ; var int local_10h @ rbp-0x10
| ; var int local_8h @ rbp-0x8
| ; CALL XREF from 0x00401585 (main)
| 0x004011c4 push rbp
| 0x004011c5 mov rbp, rsp
| 0x004011c8 sub rsp, 0x20
| 0x004011cc mov rax, qword fs:[0x28]
; [0x28:8]=-1 ; '(' ; 40
| 0x004011d5 mov qword [local_8h], rax
| 0x004011d9 xor eax, eax
| 0x004011db mov edi, str.Enter_index:
; 0x4016d5 ; "Enter index: "
| 0x004011e0 mov eax, 0
| 0x004011e5 call sym.imp.printf
; int printf(const char *format)
| 0x004011ea lea rax, [local_10h]
| 0x004011ee mov esi, 4
| 0x004011f3 mov rdi, rax
| 0x004011f6 call sub.read_b56
; ssize_t read(int fildes, void *buf, size_t nbyte)
| 0x004011fb lea rax, [local_10h]
| 0x004011ff mov rdi, rax
| 0x00401202 call sym.imp.atoi
; int atoi(const char *str)
| 0x00401207 mov dword [local_14h], eax
| 0x0040120a cmp dword [local_14h], 0x5f
; [0x5f:4]=-1 ; '_' ; 95
| ,= 0x0040121c mov eax, dword [local_14h]
| | 0x0040121f mov rax, qword [rax*8 + 0x6020e0]
; [0x6020e0:8]=0 ; 取出 users[i]
| | 0x00401227 test rax, rax
| |,=group
| || 0x0040123b mov rdi, rax
| || 0x0040123e call sub.strcmp_139
; 将对应的 group->ref_count 减 1
| || 0x00401243 mov eax, dword [local_14h]
| || 0x00401246 mov rax, qword [rax*8 + 0x6020e0]
; [0x6020e0:8]=0 ; 取出 users[i]
| || 0x0040124e mov rdi, rax
| || 0x00401251 call sym.imp.free
; void free(void *ptr) ; 释放 users[i]
| || 0x00401256 mov eax, dword [local_14h]
| || 0x00401259 mov qword [rax*8 + 0x6020e0], 0
; [0x6020e0:8]=0 ; 将 users[i] 置为 0
| ,=== 0x00401267 nop
| || ; JMP XREF from 0x00401265 (sub.Enter_index:_1c4)
| || ; JMP XREF from 0x0040121a (sub.Enter_index:_1c4)
| ``--> 0x00401268 mov rax, qword [local_8h]
| 0x0040126c xor rax, qword fs:[0x28]
| ,= 0x0040127c leave
\ 0x0040127d ret
其中调用了函数 sub.strcmp_139() ，如下：
[0x00400a60]> pdf @ sub.strcmp_139
/ (fcn) sub.strcmp_139 139
| sub.strcmp_139 (int arg_5fh);
| ; var int local_18h @ rbp-0x18
1132
6.1.15 pwn 34C3CTF2017 SimpleGC
| ; var int local_2h @ rbp-0x2
| ; arg int arg_5fh @ rbp+0x5f
| ; CALL XREF from 0x0040123e (sub.Enter_index:_1c4)