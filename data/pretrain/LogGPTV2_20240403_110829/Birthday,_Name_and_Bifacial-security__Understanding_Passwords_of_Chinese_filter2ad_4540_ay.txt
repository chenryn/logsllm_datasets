### Process of PCFG-Based Guess Generation and Management

To illustrate the process, we will use the example of an improved PCFG (Probabilistic Context-Free Grammar) attack against Tianya, which is trained on Duowan. During the training phase, we augmented the L-segment dictionary with 98,000 name segments (see Table 6).

**Coverage Analysis:**

- **Figure 5(a)** shows that these 98,000 name segments cover only 2.88% of the total L segments in the Tianya test set.
- In contrast, the original L segments trained from Duowan cover 13.75% of the name segments and 60.59% of the non-name L segments in Tianya.

This indicates that Duowan already provides good coverage of the name segments in the Tianya test set, suggesting that adding extra names has a limited impact. This observation is consistent across the other eight test sets. The detailed results are summarized in Table 7, where "Duowan1M" is a shorthand for Duowan 1M and "PY name" stands for Pinyin name. The fraction of L-segments in the test set \( y \) that can be covered by the set \( x \) is denoted as \( CoL(x) \).

**Table 7 Analysis:**

- For both \( x = \text{Duowan 1M} \) and \( x = \text{Duowan} \):
  - \( CoL(x) \) is at least 11.12 times larger than \( CoL(\text{Pinyin name}) - CoL(x) \).
  - \( CoL(\text{Pinyin name}) \cap CoL(x) \) is at least 1.92 times larger than \( CoL(\text{Pinyin name}) - CoL(x) \).

These findings suggest that adding extra names to the PCFG L-segments during training yields limited benefits. However, this does not negate the fact that Pinyin names are prevalent in Chinese web passwords and pose a significant vulnerability. When the training set is well-chosen, the name segments in passwords can be effectively guessed. In the absence of a suitable training set, our improved attack demonstrates its advantages (see Figure 5(b)).

**Benchmarking:**

Although our improved PCFG algorithm may not be optimal, its cracking results set a new benchmark that future algorithms should aim to surpass.

**Limitations:**

- Our study primarily focuses on the impact of names on password cracking. Similar observations and implications likely apply to dates, but this remains unconfirmed and is left for future work.
- Our focus is on the overall security of Chinese passwords compared to English counterparts, so we only present the overall effectiveness of our improved PCFG attack.
- It would be interesting to explore the individual impacts of the improved PCFG structure and the use of Duowan, but this is beyond the scope of the current work.

### Markov-Based Attacks

To validate the robustness of our findings on password security, we also conducted Markov-based attacks.

**Experimental Setups:**

To ensure reproducibility, we detail the experimental setups:

- We employed two smoothing techniques (Laplace Smoothing and Good-Turing Smoothing) to address data sparsity.
- We used two normalization techniques (distribution-based and end-symbol-based) to handle the unbalanced length distribution of passwords.

This results in four attacking scenarios, as shown in Table 8. In each scenario, we tested three types of Markov order (order-5, order-4, and order-3) to determine the most effective order.

**Additional Scenario:**

- Another scenario (backoff with end-symbol normalization) was reported to perform "slightly better" but is "approximately 11 times slower" for both guess generation and probability estimation [36]. Our investigation confirmed similar results, making it unlikely that cost-conscious attackers would use this scenario.

**Challenges:**

- Implementing the Good-Turing (GT) smoothing technique presents a challenge. To our knowledge, we provide the first detailed explanation of this implementation.

By addressing these challenges and conducting thorough experiments, we aim to provide a comprehensive understanding of the effectiveness of different password cracking methods.