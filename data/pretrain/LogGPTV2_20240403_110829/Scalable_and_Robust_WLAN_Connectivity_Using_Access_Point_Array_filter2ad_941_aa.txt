title:Scalable and Robust WLAN Connectivity Using Access Point Array
author:Fanglu Guo and
Tzi-cker Chiueh
Scalable and Robust WLAN Connectivity Using Access Point Array∗
Fanglu Guo
Tzi-cker Chiueh
Computer Science Department, Stony Brook University, NY 11794
Rether Networks Inc., Centereah, NY 11720
{fanglu, chiueh}@cs.sunysb.edu
Abstract
With the enormous economies of scale of Wireless LAN
(WLAN) hardware, the price of commodity WLAN access
points has dropped to the level that is even cheaper than
some WLAN adapters. In this paper we propose to put to-
gether an array of off-the-shelf access points, each operat-
ing at a different radio frequency, to build a super access
point that can both scale up the overall sustained through-
put and improve the robustness of WLAN connectivity in the
presence of failures and denial-of-service attacks. The key
enabling technology for the proposed access point array ar-
chitecture is a dynamic load balancing mechanism that can
adaptively adjust the association between stations and ac-
cess points so as to distribute the trafﬁc load among the ar-
ray’s channels. We have successfully developed such a load
balancing mechanism and used it to build a working ac-
cess point array prototype. Measurements on this prototype
show that the proposed load balancing scheme can indeed
improve the overall throughput and mitigate performance
impacts due to misbehaving stations. In addition, the pro-
totype requires no modiﬁcation to either the access points
or the stations, making it a technology readily applicable to
existing wireless LAN environments.
1. Introduction
Even though commodity 802.11a/g products claim to
support 54 Mbps or 108 Mbps (turbo mode), these are just
payload encoding rate. When overheads such as MAC con-
tention, 802.11 headers, ACK frames, DIFS time, SIFS
time, etc are accounted for, the actual goodput available to
applications is less than half of these rates. Xiao and Ros-
dahl [1] showed that when the WLAN payload size is 1000
bytes, the theoretical maximum application-layer through-
put is only 24.7 Mbps and 32.8 Mbps for encoding rates of
54 Mbps and 108 Mbps, respectively. Furthermore, since
the time used for MAC contention, 802.11 headers, etc re-
mains largely constant in these high rate WLAN products,
1This research is supported by NSF awards CNS-0410694 and CNS-
0435373 as well as fundings from Computer Associates Inc., New York
State Center of Advanced Technology in Sensors, and Rether Networks
Inc.
it leads to a theoretical upper limit for throughput. Xiao
and Rosdahl [1] showed that the theoretical upper limit is
50.2 Mbps no matter how fast the payload encoding rate
is, as long as the MAC protocol is compatible with IEEE
802.11a. The experimental test report from Brown [2] con-
ﬁrmed these theoretical results on 802.11a products.
Given the limited throughput that one radio channel can
support, a natural choice is to use multiple channels simul-
taneously to achieve higher aggregate throughput. Just like
the idea of RAID (Redundant Arrays of Inexpensive Disks)
which puts a set of disks to improve the overall performance
and reliability of a disk subsystem, a WLAN access point
array is a set of access points (APs) that are located in the
same physical location and operate with different frequen-
cies. With proper load balancing control, the access points
in the array work in unison as if the access point array is
one super access point which will improve the aggregate
throughput and fault tolerance of the wireless access net-
works. The access point array can be used to cover populous
areas such as a large conference hall [12], a wireless ISP
hot spot, etc where trafﬁc demand and reliability require-
ment is high. Furthermore, compared with the approach
to upgrading APs and stations (STAs) to new high rate
hardware, WLAN access point array doesn’t need upgrade
STA hardware/software. Normally upgrading STA hard-
ware/software is more difﬁcult than just upgrading APs.
Fortunately, the IEEE 802.11b/802.11g standards and
IEEE 802.11a standard provide 3 and 12 non-overlapped
channels, respectively, which could be used simultaneously
without much interference. Many WLAN vendors [3, 4, 5]
do attempt to exploit the available radio spectrum by sup-
porting load balancing among the APs. For instance, up
to three Cisco’s Aironet Series APs [3], running in differ-
ent channels, can be located in the same physical location
for load balancing. However, the details and effectiveness
of these load balancing schemes are largely unknown. Fur-
thermore, most WLAN load balancers [3, 4] require special
support from proprietary access points (APs) and stations
(STAs), and therefore do not work with APs and STAs from
other manufacturers. The goal of this project is to develop
an open WLAN load balancer that is completely indepen-
dent of both APs and STAs.
In addition to improving aggregate throughput, the ac-
cess point array can improve the robustness of WLAN con-
nectivity. When there are AP failures, other APs in the array
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 11:54:00 UTC from IEEE Xplore.  Restrictions apply. 
can take over the STAs of the failed APs. Thus the access
point array can allow failures of n− 1 APs for an array with
n APs.
The access point array can also mitigate the throughput
impact of STAs with low encoding rate due to the anomaly
of 802.11 MAC protocol [10]. When there is one slow STA
using low encoding rate, the whole channel’s throughput
will be decreased drastically because 802.11 MAC proto-
col provides frame-level fairness instead of time-level fair-
ness. A slow STA with 1 Mbps encoding rate will use about
11 times more channel time than a fast STA which use 11
Mbps encoding rate in 802.11b. If there is only one AP for
the coverage area, unless we deny the access of slow STAs,
there is no much one can do. But with multiple channels
in an access point array, we can put all slow STAs to one
channel and allocate more channel time to fast STAs.
The basic idea of a WLAN load balancer is to properly
associate STAs with APs such that the load on the partic-
ipating APs is balanced and the aggregate throughput is
increased. Although conceptually simple, implementing a
WLAN load balancer is surprisingly challenging, especially
when neither APs nor STAs can be modiﬁed. For example,
without access to individual APs, how to accurately mea-
sure the real-time trafﬁc load of each AP and STA? Even
if real-time trafﬁc load measurements are possible, how to
balance STAs among APs? Once load balancing decisions
are available, how to convince a particular STA to associate
with the AP that we designate?
fectively balance the load among APs dynamically,
This paper reports our experiences of a comprehensive
study of the design space of WLAN load balancers, with
a focus on the practical design and implementation chal-
lenges and their solutions. Speciﬁcally this paper makes the
following contributions:
• A simple and easy-to-implement algorithm that can ef-
• A fully operational WLAN load balancer that imple-
ments the above algorithm without requiring any mod-
iﬁcations on commodity 802.11b APs or STAs, and
• An extensive performance study of the WLAN load
balancer prototype that is based on both synthetic traf-
ﬁc and real packet traces, and shows that the WLAN
load balancer prototype can indeed provide the best
throughput under the given trafﬁc load.
The rest of this paper is organized as follows. Section 2
surveys previous research related to WLAN load balancing.
Section 3 describes the technical challenges of a practical
WLAN load balancing system and their solutions. Section 4
reports the results of a performance study of a fully working
WLAN load balancing prototype based on synthetic trafﬁc
load and real packet traces. Section 5 concludes the paper
with a summary of its major contributions and an outline of
future work.
2. Related Work
Several companies [3, 4, 5] support load balancing in
their wireless LAN products. Cisco’s load balancing pol-
icy [3] is based on the number of users, error rates, and
signal strength. Whether they consider the real time traf-
ﬁc load of each AP is unclear. Other companies [4, 5] do
consider the actual trafﬁc loads of APs. However, the ex-
act algorithms used in these products are never described
in any public literature. In the proprietary solutions from
Cisco and Proxim [3, 4], the APs broadcast their load to the
STAs in their vicinity through the Beacon frames and STAs
choose the least loaded AP based on the received load in-
formation from APs. This requires special ﬁrmware in both
APs and STAs and thus is not compatible with APs/STAs
from other vendors.
Balachandran et al.
its bandwidth requirement,
[6] proposed to balance the APs’
load based on each STA’s bandwidth requirement. Each
STA needs to submit
i.e.
[bmin, bmax] to the load balancing system. Then the sys-
tem consults with the surrounding APs’ current reservation
status to determine to which AP this new STA should be
assigned. This scheme doesn’t consider the real trafﬁc load
of APs or STAs. Some STA may make large reservation
but generate relatively low load. Besides, most users rarely
make reservations before using the network.
Sheu et al.
[7] instead used the number of STAs and
their signal strength as the load metric. They tried to bal-
ance the number of STAs and maximize the average sig-
nal strength between STAs and their APs. Papanikos and
Logothetis [8] used a similar load metric. These schemes
totally ignored APs’ trafﬁc load. Because previous studies
on WLAN workloads [11, 12, 13] showed that the number
of STAs associated with an AP is not at all correlated with
its trafﬁc load, load balancing system which is based on the
number of STAs does not necessarily improve the aggregate
throughput.
Bejerano et al.
[9] proposed to use load balancing to
achieve max-min fairness among STAs. Their scheme re-
quires modiﬁcations to the STAs to estimate their load. An
AP’s load is the sum of its associated STAs’ load. This
scheme fails to take into account radio sources that are not
cooperative, such as STAs, APs that do not report their load.
In contrast, we use the channel idle time as an AP’s load
indicator, which can successfully accommodate these traf-
ﬁc sources. Furthermore, their load balancing algorithm
is quite complex and thus unlikely to be implemented into
commercial products.
Kotz and Essien [11] analyzed nearly two thousand users
on a campus-wide network of 476 access points spread over
161 buildings, and found that there is little correlation be-
tween the number of users and the amount of trafﬁc going
through an access point. In terms of trafﬁc type, they no-
ticed that besides web accesses, network backup and ﬁle
sharing also contribute an unexpectedly large amount of
trafﬁc to the total load. This means that one STA may
occupy one AP for a long period of time because of the
bandwidth-hogging nature of ﬁle transferring applications.
Balachandran et al. [12] studied a well-attended ACM
conference. There were 195 STAs and 4 APs in the confer-
ence auditorium. They found that even in this auditorium,
the trafﬁc load distribution among the four APs is highly un-
even. Furthermore, although the number of users associated
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 11:54:00 UTC from IEEE Xplore.  Restrictions apply. 
Legend
AP
STA
Backbone
WLB
Ethernet Switch
Figure 1. The architecture of the proposed
WLAN AP array. A WLAN load balancer (WLB)
and multiple APs are connected to an Ether-
net switch. WLB dynamically controls the as-
sociation between STAs and APs based on
real-time AP trafﬁc load measurements.
with each AP is almost constant, the load of individual APs
varies considerably. Balazinska and Castro [13] studied a
large corporate WLAN network that includes 3 big build-
ings, 1366 STAs and hundreds of APs. They also found that
the number of STAs associated with an AP has no correla-
tion with its load, and that in a well provisioned network,
access points often experience periods of high demand that
last for a few minutes. These phenomena arise because at
any point in time only a small percentage of users have a
large bandwidth demand, and these users are not evenly dis-
tributed among the APs.
3. Load Balancing Among WLAN Access
Points
The system architecture of the proposed WLAN AP ar-
ray is shown in Figure 1. The WLAN load balancer (WLB)
constantly monitors the trafﬁc load of all STAs and APs, and
will instruct some of the STAs to change their AP associa-
tion when it decides it is time to move some load from one
AP to another. The key feature of this WLAN load balancer
is that it is completely independent of both APs and STAs.
As a result, it works directly with any commodity APs and
STAs, and thus represents the ﬁrst known WLAN load bal-
ancing design that does not require any special support from
APs or STAs. Logically, the WLB takes the following steps
to balance the load of an AP array, and we will discuss each
of them in more detail in the rest of this section:
• Constantly measuring the trafﬁc load of the APs, STAs
• Determining when to trigger a change in STA-to-AP
association based on the degree of load imbalance ob-
served,
• Computing a new STA-to-AP mapping so as to im-
• Enacting the new mapping by moving STAs to their
prove the overall aggregate throughput, and
and radio channels,
new APs.
3.1. Load Metric
An AP’s load can be represented by the number of STAs
associated with the AP [3, 7, 8], the sum of pre-speciﬁed
bandwidth requirements of all STAs associated with the AP
[6], the measured trafﬁc load on the AP [4, 5] or some com-
binations of the above. Previous WLAN trafﬁc statistics
research [11, 12, 13] showed that the number of STAs as-
sociated with an AP is a poor indicator of that AP’s actual
load. The pre-speciﬁed bandwidth requirement of a STA [6]
does not necessarily reﬂect the actual load the STA injects
either. Although the real-time trafﬁc load of an AP’s asso-
ciated channel is an ideal candidate, the challenge is how to
measure it without any help from the APs.
There are three ways to measure an AP’s trafﬁc load.
The ﬁrst way is to count the number of bytes that traverse
through the AP via the Ethernet switch in Figure 1. This
approach is not appropriate for two reasons. First, WLAN
can support multiple payload encoding rates. For instance,
802.11b frames can be transmitted at 1 Mbps, 2 Mbps, 5.5
Mbps, or 11 Mbps. Therefore, using the total number of
bytes sent per second as an AP’s load metric may result in
estimates of radio channel time that vary up to an order of
magnitude. Second, WLAN’s per-frame overhead such as
PLCP header, ACK, RTS, CTS, etc., can be quite signiﬁcant
percentage-wise when the payload size is small. Moreover,
a WLAN set-up may choose to enable or disable RTS/CTS,
to enable or disable fragmentation. Simply counting the
number of bytes per second on the wire essentially ignores
these overheads, which could lead to substantial measure-
ment errors.
The second way to measure an AP’s trafﬁc load is to
measure the amount of time the AP is involved in transmit-
ting or receiving frames. That is, an AP’s busy time is its
load metric. However, this approach is not accurate either
because it ignores the fact that an AP could share its chan-
nel with some other APs that are not under the control of the
WLB. For example, if there is another AP, say AP6, work-
ing in the same coverage area and using the same channel
as AP1, AP6 will compete with AP1 for the channel time
even if AP6 and AP1 use different SSID (Service Set ID, or
network name). When both AP6 and AP1 are fully loaded,
AP1’s busy time will be around half of the channel time.
Let’s further assume AP1, AP2, and AP3 form a WLAN
AP array controlled by a WLB and both AP2 and AP3 are
fully loaded. Because AP1 is busy only half of the time, the
WLB will incorrectly assume that AP1’s load is lower than
that of AP2 and AP3, and moves some STAs from AP2 and
AP3 to AP1. In the end both AP2 and AP3 may not be able
to run at full capacity, all because AP1 unknowingly shares
its channel with another AP, AP6. The lesson from this ex-
ample is that an AP’s busy time is not necessarily the same
as the associated channel’s busy time, because there may be
other radio trafﬁc sources using that channel.
The third way to measure an AP’s trafﬁc load, which is
used in the current design, uses the channel idle time as the
AP’s load indicator, and thus solves the problems of the ﬁrst