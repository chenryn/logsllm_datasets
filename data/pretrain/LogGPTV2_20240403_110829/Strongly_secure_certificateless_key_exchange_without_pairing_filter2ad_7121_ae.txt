· e(yJ P, P )axI · e(ytbdh1P − zbP, P )ac
= e(bP, P )acz1 · e(ytbdh1P − zbP, P )ac
= e(P, P )z1abce(P, P )ytbdh1 ac−z1abc = e(P, P )ytbdh1 ac
?= e(aP, cP )ytbdh1
e(yJ aP, xI P )
e(yJ aP, xI P )
e(lJ aP, xI P )
(cid:19)z
As soon as M submits such an entry to the H2 oracle, B aborts the game and returns
e(H1(IDJ ), P )sxI · e(H1(IDI ), P )sxJ
e(lJ P, aP )xI · e(bP, P )ac
e(lJ aP, xI P )
=
e(lJ aP, xI P )
L
L1
=
= e(P, P )abc
as solution to the BDH challenge.
B uses the same strategy for reveal queries to sessions of IDI where the adversary replaced the
certiﬁcateless public key of IDj, except that B does not abort the game if a matching H2 query is found
but returns the correct H2 value. If no matching H2 query is found, B proceeds as in Section 5.2.1 on
page 13. If the adversary replaces the certiﬁcateless public key of IDI , B additionally uses the strategy
described in Strategy 1. We note that M is allowed to replace the certiﬁcateless public key of IDJ after
the test query has been issued.
The probability that B is able to ﬁnd a solution to the CBDH challenge is
AdvB(k)[CBDH] ≥ AdvM(k)[Π]
9q0q2
1
16
Strategy 6 is symmetric to Strategy 5, so it has the same probability (only IDI and IDJ are exchanged).
The BDH challenge is embedded in L1 instead of L2.
5.4.5 Strategy 7 and 8
The allowed corrupt queries for the adversary are listed in Table 1 on page 12. The BDH challenge can
only be embedded in K2, because the input to all other values used in the key derivation function can
be corrupted by the adversary. Using this strategy, the challenger sets the master public key sP to aP
(notice that B does not know s). B changes the mode of operation of the H1 oracle so that H1 operates as
in Table 2 on page 12, thus H1(IDI ) = bP . B patches the H3 oracle as described in Table 3 on page 13,
thus H3(H1(IDI )) = H3(bP ) = ytbdh1P − zbP . B can still generate private keys for all identities except
IDI by computing sH(IDi) = liaP and sH3(H1(IDi)) = yiaP . As queries for IDI ’s private keys were
ruled out, this does not aﬀect the overall success probability. Additionally, B sets the ephemeral public
key of party J (cid:54)= I that participates in the T th oracle ΠT
If the adversary has an advantage in this strategy, then M needs to query the H2 oracle on the session
key. To distinguish this entry from other H2 queries, B re-computes K1 = e(aP, P )lJ rI and similarly the
1 = e(aP, P )yJ rI . Then, B searches in the table of the H2 oracle for an entry where
K(cid:48)
I,J to cP .
(cid:18) K
K1
(cid:19)z · K(cid:48)
K(cid:48)
1
= e(aP, cP )ytbdh1
B aborts the game as soon as such an entry is submitted to the H2 oracle and returns K/K1 as solution to
the computational bilinear Diﬃe-Hellman challenge. The probability that this happens is lower bounded
by
AdvB(k)[CBDH] ≥ AdvM(k)[Π]
9q0q2
1
A problem for B occurs if M replaces certiﬁcateless public keys. As B knows the ID-based private keys
for all identities except IDI , B can compute K, K(cid:48), L, L(cid:48), N and N(cid:48) for any session except for sessions
involving IDI . B may be unable to compute xixjP if M replaced both xiP and xjP but can use the
pairing as described in Strategy 1. For reveal queries involving IDI and replaced certiﬁcateless public
keys, B uses the H3 oracle as described in Strategy 5.
Strategy 8 is symmetric to Strategy 7, so it has the same probability (only IDI and IDJ are ex-
changed). The BDH challenge is embedded in K1 instead of K2.
5.4.6 Strategy 9
The allowed corrupt queries for the adversary are listed in Table 1 on page 12. The BDH challenge will
be embedded in N . To accomplish this, the challenger sets the master secret key to aP , H1(IDI ) = bP ,
and H1(IDJ ) = cP . Additionally, the H3 oracle (see Table 3 on page 13) is modiﬁed before the game
starts so that H3(H1(IDI )) = H3(bP ) = ytbdh1P − zbP and H3(H1(IDJ )) = H3(cP ) = ytbdh2 P − zcP .
A problem for B arises when the adversary asks session key reveal queries for other sessions than the
test session that include IDI and IDJ , or for sessions where the adversary M replaces the certiﬁcateless
public keys of any of the target identities. In these cases the challenger is unable to computer neither N
nor L. Whenever B is asked a session key reveal query, B ﬁrst checks if H2 was asked with a matching
session string involving both IDI and IDJ . As B is generally unable to compute either L or N , B
uses the trapdoor as explained in Theorem 3 on page 10 for N and Theorem 2 on page 9 for L to
check if M submitted a valid query, i.e.
if the query should be answered with a record from H2 (if
such a record exists). To this end, B extracts L, L(cid:48), N and N(cid:48) from each entry that matches the
session for which the reveal query is being asked, and checks if N(cid:48)
and if
e(aP,P )ytbdh1
ytbdh2
e(cP,aP )zytbdh1 e(bP,aP )zytbdh2
N z2 =
17
LzL(cid:48) = e(aP, xI P )ytbdh2 e(aP, xJ P )ytbdh1 .
N = e(P, P )abc
N(cid:48) = e(P, P )a(ytbdh1−bz)(ytbdh2−cz)
= e(P, P )a(ytbdh1 ytbdh2−ytbdh1 cz−bzytbdh2 +bcz2)
= e(P, P )abcz2+aytbdh1 ytbdh2−ytbdh1 zac−ytbdh2 zab
⇒ N−z2 · N(cid:48) = (e(P, P )abc)−z2 · e(P, P )abcz2+aytbdh1 ytbdh2−ytbdh1 zac−ytbdh2 zab
= e(P, P )aytbdh1 ytbdh2−ytbdh1 zac−ytbdh2 zab
=
e(aP, P )ytbdh1 ytbdh2
e(aP, cP )ytbdh1 z · e(aP, bP )ytbdh2 z .
L = e(H1(IDJ ), P )sxI e(H1(IDI ), P )sxJ
= e(cP, P )axI e(bP, P )axJ = e(P, P )xI ace(P, P )xJ ab
L(cid:48) = e(H3(H1(IDJ )), P )sxI e(H3(H1(IDI )), P )sxJ
= e(ytbdh2 P − zcP, P )axI e(ytbdh1P − zbP, P )axJ = e(P, P )axI ytbdh2−axI zce(P, P )axJ ytbdh1−axJ zb
Lz · L(cid:48) = (e(P, P )xI ace(P, P )xJ ab)z · e(P, P )axI ytbdh2−axI zce(P, P )axJ ytbdh1−axJ zb
= e(P, P )xI acze(P, P )xJ abz · e(P, P )axI ytbdh2
e(P, P )axI zc
= e(P, P )xI acz−xI zace(P, P )xJ abz−xJ zab · e(P, P )axI ytbdh2 e(P, P )axJ ytbdh1
= e(P, P )axI ytbdh2 e(P, P )axJ ytbdh1 = e(aP, xI P )ytbdh2 e(aP, xJ P )ytbdh1
e(P, P )axJ ytbdh1
e(P, P )axJ zb
If no matching record exists, B patches the H2 oracle as explained in Section 5.2.1 on page 13. As soon
as M submits such an entry to the H2 oracle, B aborts the game and returns N as solution to the BDH
challenge. The probability that this happens is lower bounded by
AdvB(k)[CBDH] ≥ AdvM(k)[Π]
9q0q2
1
B is able to distinguish between H2 queries that have correct session data and H2 queries that have
invalid session data and is thus able to operate the H2 oracle consistently. B may have to use the
techniques explained in Strategy 1 and Strategy 5 to operate the H2 oracle.
Theorem 4 follows from the above strategies.
6 Conclusion
We give the strongest security model for certiﬁcateless encryption and relate it to Type I and Type
II adversaries [Den08]. We give the ﬁrst construction for a strongly secure one round certiﬁcateless
key agreement scheme that is proven to be secure in the random oracle model, if the computational
bilinear Diﬃe-Hellman and the computational Diﬃe-Hellman assumptions hold. This enables us to
positively answer Swanson’s [Swa08, Chapter 7] ﬁrst question, whether it is even possible to construct
a certiﬁcateless key agreement scheme that meets the extended eCK model. The protocol is compatible
with existing certiﬁcateless key infrastructures and can thus be deployed easily.
It is furthermore a
natural complement to certiﬁcateless encryption, which brings us to Swanson’s second question: We
show that a practical protocol for CL-AKE exists, although it is computationally expensive. We also
show how the computational cost can be reduced if we use gap assumptions. We prove our scheme to
be more secure than ID-based schemes, in the sense that the KGC can be more actively trying to learn
secrets. To answer Swanson’s third question, whether the ﬂexibility of certiﬁcateless schemes is worth
the increased likeliness of vulnerabilities, we note that the ability of the adversary to replace public keys
does not necessarily have to introduce vulnerabilites. CL-AKE schemes therefore combine user ﬂexibility
with enhanced privacy.
18
It remains to devise computationally more eﬃcient one round protocols for certiﬁcateless key agree-
ment proven secure with respect to standard computational problems such as DH or BDH. Furthermore,
a proof for a certiﬁcateless key agreement scheme in the standard model would be very interesting.
References
[ARP03]
Sattam S. Al-Riyami and Kenneth G. Paterson. Certiﬁcateless Public Key Cryptography.
In Chi-Sung Laih, editor, ASIACRYPT, volume 2894 of Lecture Notes in Computer Science,
pages 452–473. Springer, 2003. Online available at http://eprint.iacr.org/2003/126.
pdf. 1, 5
[BF03]
Dan Boneh and Matthew Franklin. Identity based encryption from the Weil pairing. SIAM
Journal of Computing, 32(3):586–615, 2003. Online available at http://crypto.stanford.
edu/~dabo/papers/bfibe.pdf. 1
[BFMLS08] Kamel Bentahar, Pooya Farshim, John Malone-Lee, and Nigel P. Smart. Generic Con-
structions of Identity-Based and Certiﬁcateless KEMs. J. Cryptology, 21(2):178–199, 2008.
2
[CCS07]
[CKS08]
[DE02]
[Den08]
[DLP08]
[HC08]
[KP05]
[Kra05]
[LL97]
L. Chen, Z. Cheng, and Nigel P. Smart.
pairings. Int. J. Inf. Sec., 6(4):213–241, 2007. 1, 6
Identity-based key agreement protocols from
David Cash, Eike Kiltz, and Victor Shoup. The Twin Diﬃe-Hellman Problem and Applica-
tions. In Nigel P. Smart, editor, EUROCRYPT, volume 4965 of Lecture Notes in Computer
Science, pages 127–145. Springer, 2008. 1, 7, 8, 9
R´egis Dupont and Andreas Enge. Practical non-interactive key distribution based on pair-
ings. Cryptology ePrint Archive, Report 2002/136, 2002. http://eprint.iacr.org/2002/
136. 7
Alexander W. Dent. A survey of certiﬁcateless encryption schemes and security models.
International Journal of Information Security, 7(5):349–377, October 2008. 1, 2, 5, 18
Alexander W. Dent, Benoˆıt Libert, and Kenneth G. Paterson. Certiﬁcateless encryption
schemes strongly secure in the standard model.
In Ronald Cramer, editor, Public Key
Cryptography, volume 4939 of Lecture Notes in Computer Science, pages 344–359. Springer,
2008. 5
Hai Huang and Zhenfu Cao. An ID-based Authenticated Key Exchange Protocol Based
on Bilinear Diﬃe-Hellman Problem. Cryptology ePrint Archive, Report 2008/224, 2008.
http://eprint.iacr.org/2008/224, to be published in ASIACCS’09. 6, 9
Caroline Kudla and Kenneth G. Paterson. Modular Security Proofs for Key Agreement
Protocols. In Bimal K. Roy, editor, ASIACRYPT, volume 3788 of Lecture Notes in Computer
Science, pages 549–565. Springer, 2005. 8
Hugo Krawczyk. HMQV: A High-Performance Secure Diﬃe-Hellman Protocol. Cryptology
ePrint Archive, Report 2005/176, 2005. http://eprint.iacr.org/2005/176. 1, 3, 7
Chae Hoon Lim and Pil Joong Lee. A Key Recovery Attack on Discrete Log-based Schemes
Using a Prime Order Subgroup. In CRYPTO ’97: Proceedings of the 17th Annual Inter-
national Cryptology Conference on Advances in Cryptology, pages 249–263, London, UK,
1997. Springer-Verlag. 7
[LLM07]
Brian A. LaMacchia, Kristin Lauter, and Anton Mityagin. Stronger Security of Authenti-
cated Key Exchange. In Willy Susilo, Joseph K. Liu, and Yi Mu, editors, ProvSec, volume
4784 of Lecture Notes in Computer Science, pages 1–16. Springer, 2007. 2, 3, 5, 6
[LMQ+03] Laurie Law, Alfred Menezes, Minghua Qu, Jerry Solinas, and Scott Vanstone. An Eﬃcient
Protocol for Authenticated Key Agreement. Des. Codes Cryptography, 28(2):119–134, 2003.
2
19
[LQ06]
[MT06]
[SOK00]
[Swa08]
Benoˆıt Libert and Jean-Jacques Quisquater. On Constructing Certiﬁcateless Cryptosystems
from Identity Based Encryption.
In Moti Yung, Yevgeniy Dodis, Aggelos Kiayias, and
Tal Malkin, editors, Public Key Cryptography, volume 3958 of Lecture Notes in Computer
Science, pages 474–490. Springer, 2006. 2
Tarjei K. Mandt and Chik How Tan. Certiﬁcateless Authenticated Two-Party Key Agree-
ment Protocols. In Mitsu Okada and Ichiro Satoh, editors, ASIAN, volume 4435 of Lecture
Notes in Computer Science, pages 37–44. Springer, 2006. 1, 2, 3
R. Sakai, K. Oghishi, and M. Kasahara. Cryptosystems based on pairing. In Proceedings of
Symposium on Cryptography and Information Security (SCIS 2000), pages 233–238, 2000.
6, 8
Colleen Marie Swanson. Security in Key Agreement: Two-Party Certiﬁcateless Schemes.
http://uwspace.uwaterloo.ca/bitstream/10012/4156/1/Swanson_Colleen.pdf, 2008.
Master Thesis, University of Waterloo. Download 2009-01-29. 1, 2, 3, 5, 18
[Ust08]
Berkant Ustaoglu. Obtaining a secure and eﬃcient key agreement protocol from (H)MQV
and NAXOS. Des. Codes Cryptography, 46(3):329–342, 2008. 6
[WCW06]
Shengbao Wang, Zhenfu Cao, and Licheng Wang. Eﬃcient Certiﬁcateless Authenticated
Key Agreement Protocol from Pairings. Wuhan University Journal of Natural Sciences,
11(5):1278–1282, 2006. 1
[XWSX08] Liang Xia, Shengbao Wang, Jiajun Shen, and Guoming Xu. Breaking and repairing the
certiﬁcateless key agreement protocol from ASIAN 2006. Wuhan University Journal of
Natural Sciences, 13(5):562–566, October 2008. 1, 2
[YL04a]
Dae Hyun Yum and Pil Joong Lee. Generic Construction of Certiﬁcateless Encryption. In
Antonio Lagan`a, Marina L. Gavrilova, Vipin Kumar, Youngsong Mun, Chih Jeng Kenneth
Tan, and Osvaldo Gervasi, editors, ICCSA (1), volume 3043 of Lecture Notes in Computer
Science, pages 802–811. Springer, 2004. 2
[YL04b]
Dae Hyun Yum and Pil Joong Lee. Generic Construction of Certiﬁcateless Signature. In
Huaxiong Wang, Josef Pieprzyk, and Vijay Varadharajan, editors, ACISP, volume 3108 of
LNCS, pages 200–211. Springer, 2004. 2
[Zh05]
Shao Zu-hua. Eﬃcient authenticated key agreement protocol using self-certiﬁed public keys
from pairings. Wuhan University Journal of Natural Sciences, 10(1):262–270, 2005. 1
20