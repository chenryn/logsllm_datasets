BEGIN(
number = "^[-+]?([09]+[ - ]?[09]*[ - ][ 09]+)" \
"([eE][-+]?[0-9]+} ?$"
）===
# ticks for x-axis
$1 = "left"
print
next
）====
# ticks for y-axis
$1="bottom"
print
next
$1 == "range"{
 xmin ymin xmax ymax
print $1，$3,$2,$5,$4
next
xd= }
{xx=）==
---
## Page 212
附录B部分习题答案
204
$1-number && $2-number (nd++;print $2,S1,$3; next }
$1~ number && $2 1~ number {# single number:
nd++
#
count data points
print $1, nd, $2
fillin bothx and y
next
）
{print }
对数坐标轴的一个简单版本也可以用同样的方法来实现
Exercise 6.13只需要在if语句中多增加几种判断情形即可，例如：
else if ($i == "pi")
stack[++top] = 3.1415926535879
Exereise 7.1条件A[i]>A[i+1]在本质上是不变的，因为这是由算法保证的，所以它应该总是
为真.真正的问题是check并不检查输出是否是输入的一个排列：如果元素被移到了数组边界之外，它
也不会发现
Exercise7.3第八章曾经简单地描述过：awk使用哈稀表来存放数组，在小数组中查找元素时，
哈稀表只需要常量的时间，但是当数组变大时，查找时间也会增加，
Exercise7.8由makeprof 插入的END动作，是在所有其他的END执行完之后才会轮到它们执
行.所以，如果前面先执行的END中含有exit语句，就会提前终止程序，部分的解决方案是把END插
入到所有其他END的前面.
Exercise7.10把节点压入到栈中，而不是把它们打印出来，当输入结束时，从栈底开始打印结点，
另一种解决办法是交换S1与S2的功能，这既可以在rtsort中完成，也可以通过一个单独的程序来实
现.
---
## Page 213
索引
205
索引中的页码指的是英文原版的页码，与本书页边标注的页码一致，
& AND operator (*与” 运耳并)10, 31, 37, 158
( ） regular expression (正别表达式) 29
$= assignment operator (值运算符) 38
[ ] regular expression (正则表达式) 29
*= assignment operator (或值运算) 38
[~.  regular expression (正别表达 式) 29
+= assignment operator (值运算) 38
|regular expression (正表达 式) 29, 32
== assignment operator (值泌茅将) 38
* regular expression (正表达 式) 30
/= assignment operator (值运算符) 38
+ regular expression (正表达式) 30
^= assignment operator (值运算将) 38
? regular expression (正表达式) 30
= assignment operator (m值运其符) 38, 44
 remainder operator (取余运算符) 36,46
\ backslash (反) 28, 30, 41, 43
= standard input filename (标准输入的文件名) 64, 116
{-} braces (花括 号) 15, 22, 47, 167, 188
"." string constant (字符串常量） 7, 24, 35, 51
comment (注#) 15, 22, 188
_underscore (下 划线) 35
> comparison operator (1t较运苏并) 9
$0 at end of input (输入结束时的 s0)13
>= comparison operator (比较运算花)9
$0 blank line () 192
== comparison operator (比较运其符) 9, 44
$0 record variable (记录变量) 5, 35
? :conditional expression (条件表达式) 37, 68
$0, side-effeets on ($ 0 上的作用) 36 43
， continuation after (是) 22, 188
\007 bell character (*响) 31
== decrement operator (白减运其符) 39, 70, 112
\b backspace character (退格符) 31
^ exponentiation operator (指&运其符) 15, 36, 46
/dev/tty file (文件 /dev/tty) 59
 format conversion (格式转换) 42, 189
f option (选项 f) 4-5, 63, 65, 187
= in character class (字将集中的 ) 29
F option (选项 F) 60, 63, 187
$名 in printf (printf 中的 e) 79
>file, print 90, 188
& in substitution (置换中的 ε) 43, 72, 189
#include processor (#include 预处理器) 62, 64
++ increment operator (增运耳) 39, 146, 158
$n field ($n 字段) 5, 35
| input pipe (输入管道) 62, 76
\n newline charaeter (换行) 8, 31, 79
- match operator (匹配运其特) 25, 27,31, 37, 40
π, computation of (i计其) 39
1 ~ nonmatch operator (不匹配运其符) 25, 27, 31, 37, 40
\t tab character (制表符)15, 24,31
! NOT operator (*" 运其并) 10, 31, 37
$x++ versus $ (x++) ($x++ 与 S(x++)) 146
|| OR operator ("或* 送算符) 10, 31, 37
aetion, default (双认动作) 5, 9, 21, 187
> output redirection (输出定 ) 56, 58, 188
actions, summary of (动作的恶结) 34, 188
>> output redirection (始出童定向) 56, 58, 188
add checks and deposits (累加 支出与存款) 87
output redireetion (输出董定) 58, 188
addcomma program (程序 addcomma) 72, 194
·quotes (单引号)2, 4-5,65, 100
address list (地址列表) 82
. regular expression (正则表达式) 28
address list, sorting (排序地址列表) 84
$ regular expression (正则表达 式) 28
aggregation (聚合) 51, 58, 119
^ regular expression (乏则&达) 28
Aho, A. V. 130, 152, 179, 186
205
---
## Page 214
索引
907
Aho, S. vi
assignment, side-effeets of (m值 的作用) 43
Akkerhuis, J. vi
associative array (关载) 50-51, 193
algorithm, depth-first search (深度优先搜索) 172, 177
associative of operators (运算符之间的关联) 46
algorithm, heapsort (排) 162
atan2 function (函& atan2) 39
algorithm, insertion sort (鲁 入排序) 153
attribute, database (数据库中的属性) 103
algorithm, linear (线性其法) 157, 183
avoiding sort options (退升 sort 的选项) 91, 140
algorithm, make update (&序 make) 176
awk command line (awk 的命令) 1, 3, 63, 65, 187
algorithm, n log n (对＆其法) 162, 165
awk grammar (awk 的语法) 148
algorithm, quadratie (千方算法) 157, 162, 183
awk program, form of (awk 序 形 式) 2, 21, 187
algorithm, quicksort (快逢排序) 160
awk program, running an (运 awk 8序) 3
algorithm, topological sort ( 排) 171
awk program, running time of (awk 级序的运行时间) 183
AND operator, && (*与* 运算符) 10, 31, 37, 158
awk - parser program (程序 awk -parser) 149
ARGC variable (量 ARGC) 36, 63, 189
back edge () 173-174
arguments, command-line (令行参&) 63
backslash, ^ (反 ) 28, 30, 41, 43
arguments, function (山&参&) 54
backspace character, \b (逐格) 31
ARGV, changing (改 ARGV) 64-65, 116
bailing out (紫乌退出) 4
ARGV variable (量 ARGV) 36, 63-65, 116, 189
balanced delimiters (均街的分照符) 77, 195
arith program (程序 arith) 117
base table (&&) 106
arithmetic expression grammar (耳术表达式语法) 145
batch sort test program (批处理形式的排序测试程序) 155
arithmetic functions, summary of (算术表达式总结) 190
BEGIN and END, multiple (多  BEGIN 与 END) 23, 169
arithmetic funetions,table of（其水表达式总结，表格）39
BEGIN pattern (核  BEGIN) 11, 23, 63
arithmetic operator (算术运算符) 36, 44
bell character, \007 (铃) 31
arithmetic operator,table of(算术运算符总结，表格） 46
Bentley, J. L. vi, 130, 152, 179
array, associative 50-51, (关数细) 193
binary tree (又) 163
array parameter (截红参&) 54
blank line, $0 () 192
array reference, cost of (5I用截μ6开销) 184, 204
blank line, printing a (p个空竹) 11, 55
array subseripts (截μ6 下 ) 50-52
blank line separator (空分B) 83
arrays () 16, 50
boundary condition testing(过界条件测试) 155
arrays, multidimensional (多 堆&m) 52, 108, 114, 116, braces, (.-) (花括 号) 15,22,47, 167, 188
182
breadth-first order (究度优先顺序) 163, 171
asm program (程序 asm) 134, 203
break statement (break 语 ) 49
asplit function (ia& asplit) 81
bridge program (程序 bridge) 199
assembler instructions, table of (汇编程序的指令，表格)built-in variables, table of(内建交量总端,表格) 36
132
bundle program (8序 bundle) 81
assembly language (汇编语古) 133
calc1 program (& cale1) 143
assignment, command-line (在命令行然值) 63, 94, 187,ca1c2 program (程序 ca1c2) 144
195, 197
calc3 program (程序 cale3) 146
assignment expression (m值表达式) 39, 127
call by reference (51用华运) 54
assignment, multiple (多重然值) 39
call by value (值传适) 54
assignment operator, &= (M值运耳符) 38
capitals file (文件 capitals) 102
assignment operator, *= (值运算符) 38
cat command(今 cat) 59, 64
assignment operator, += (值述算花)38
cc command (令令 ce)175
assignment operator, == (值述算花)38
changing ARGv ( ARGV) 64-65, 116
assignment operator,/= (m值运耳符) 38
character class, = in (字集) 29
assignment operator,~=(财值运算符) 38
character elass, complemented (互补字并集) 29
assignment operator, = (然值运算符) 38, 44
character class, regular expression (正表达式中的字将
assignment operators (值运算好) 38
集) 29
---
## Page 215
索引
207
characters, table of escape(转义字符总结，表格)31
command-line assignment (令感值)63, 94, 187, 195,
check function (函 check) 155
197
check password file (检查密码文件) 78
commas, inserting ( 入运号) 71
check1 program (程序 check1) 87
comment, #(注) 15, 22, 188
check2 program (8/ check2) 87
comparison expression, value of (北比较表达式的值) 37
check3 program (8/ check3) 88
comparison, numerie (数值 比较) 25-26, 44
checkgen program (8序 checkgen) 79
comparison operator, > (比较运算符) 9
checking,cross-reference (交文引用检查）73
comparison operator, >= (1比较运算符) 9
checks and deposits, add (累加 支出 与 存款) 87
comparison operator, == (1比较运算符) 9, 44
checks, printing ( 支) 74
comparison operators (比较运其符) 36
Cherry, L. L. vi
comparison operators, table of(比较运算符总结，表格)25
chmod command (令 chmod) 65
comparison, string (字符串的比较) 25-26, 44, 184
choose function (◆ choose) 112
compat program (序 compat) 80
c1iche program (&/ e1iche) 113
compiler model (编证器换型) 131
c1ose statement (e1ose §) 59, 82
complemented charaeter class (五字符集) 29
coercion(强制类型持换) 44, 154, 182
compound patterns (复合模式) 31
coercion, number to string （数值强制转换成字符争） 25
computation of base-10 logarithm (计算以 10 为底的对
coercion rules (强制类型转换的规则) 44, 192
数) 39
coereion, string to number (字符争强制转换成数值) 25
computation of e (算 e) 39
coercion to number (线制转换成数)45
computation of x (i+算 π) 39
coercion to string（张制转换成字符串）45
concatenation in regular expression (正则表达式中的拼
co1check program (f/β co1check) 77
接) 29
columns, summing (5求) 67
concatenation operator (接运其符) 40, 43, 182
command, cat ( cat) 59, 64
concatenation, string (字符串接) 13,40,43, 47, 56, 101,
command, cc (令 cc) 175
182, 184
command, chmod (令 chmod) 65
conditional expression, ?: (条件表达式) 37, 68
command, date ( date) 62, 76
constant, ".* string (字串常量) 7, 24, 35, 51
command, egrep ( egrep) 59, 181, 184, 186
constant, numerie (数值常量) 35
command, grep(令 grep) v,181,184
constraint graph (均束关系田) 170
command interpreter, shell (令解排 shell) 4, 65, 99
context-free grammar (上 下文无关语法) 113,145, 148
continuation after，（过号后的延续)22, 188
command, join (令 join) 104
continue statement (continue 语 ) 49
command line, awk (awk 的令) 1, 3, 63, 65, 187
continuing long statements (延续长语 句旬) 15, 22, 188
command, 1order ( 1order) 170
command, 1s (令 1s) 177
control-break program (control-break ) 92, 95, 105,
command, make (令 make) 175
110,126
control-flow statements, summary of (流程控制语句的总
command, nm (命令 nm) 73
) 48
command, pr ( pr) 175