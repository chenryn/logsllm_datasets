ing the third step (usage) the dependency model is evaluated at runtime in the
contextofoccurringeventssuchasSLAviolationsduringmonitoringorrequests
12
for SLA renegotiation. The goal of this evaluation is to determine effects of the
current event on other services (i.e. if the SLA for service S1 is changed, which
other services will be affected). Finally, during the fourth step (retirement) the
dependency model is terminated once the composite service is terminated and
the composite service SLA is expired. During this step the dependency model is
removed from the dependency repository.
At the base of this approach there is a dependency model. A meta-model
for capturing dependencies was developed for this purpose and a model editor
for creating dependency model instances was implemented based on this meta-
model [16]. While the model editor allows the full specification of dependency
model instances, we also developed a model creation approach which partially
automates this procedure.
4.3 Dependency model creation
The process of creating a dependency model is separated into two major steps.
An initial model is generated automatically by an algorithm which analyses
the process description and SLAs. In the second step the model can be refined
by manual changes using a model editor. While the first step enables a more
efficient creation process, the second step ensures that complex dependencies,
which cannot be discovered automatically, can be included into the model. It
also enables users to refine discovered dependencies.
The discovery algorithm takes the process description of the composite ser-
viceanddeterminesallvalidpathsfromthestartnodetotheendnode.Next,the
services within each path are checked for horizontal dependencies. The underly-
ingassumptionforthisprocessisthatservices,whichdonotoccurwithinapath
donothaveconsumer-providerbaseddependencies.Synchronizationconstraints
canoccuralsoacrosspaths,buttheywouldhavetobeexpressedexplicitlysince
neitherprocessdescriptionnorSLAscontainthisinformationimplicitly.Vertical
dependencies are discovered by comparing the single services inside a path with
the composite service. Dependencies regarding the QoS and priceof services are
notanalyzedbasedonthecreatedpaths,butinsteadrequireapreciseanalysisof
the process structure. QoS and price dependencies occur as 1-to-n relationships
between the composite service and the atomic services. These dependencies are
expressed as a function for calculating the respective composite value from the
atomic values. The formula for composite value calculation is generated based
on the process structure [4].
5 Models for the Internet of Services
The intrinsic complexity of IoS-based services requests for a new approach in
Service Engineering (SE) and tools in developing such services [5]. Typically,
services evolve in a common ecosystem in which organizations and IT provide
value in form of services. SE provides methodologies to cope with the complex-
ity of several business actors and their interaction. Furthermore, SE specifies
13
tools for implementing and deploying services, covering both, IT and business
perspectives.
Consequently, SE is a structured approach for creating a new service. It ad-
dressestwoproblems:1)multiplestakeholdersacrossdifferentorganizationsand
2) different perspectives ranging from business to IT. To cope with these chal-
lenges we propose an integrated service engineering methodology and support
by meta-model and model matching.
5.1 Integrated Service Engineering
For the development of IoS-based services we proposed the Integrated Service
Engineering (ISE) methodology [5] and implemented it in the ISE workbench
[12]. Thereby, we present a model-based approach; i.e. each aspect of a ser-
vice is formally represented by a corresponding model. Figure 4 shows the ISE
framework which is part of ISE methodology. Inspired by the Zachman frame-
work and following the separation of concerns paradigm, it structures services
into four main perspectives and five dimensions. These dimensions are: service
description, workflow, data, people and rules. Each of these dimensions is di-
vided into four perspectives (layers) of abstraction. These perspectives of the
ISE methodology can be regarded as a phase in the development (model refine-
ment)ofservices.Thus,themodelswhichareassignedtoeachlayersupportthe
development from different viewpoints (i.e., scope, business, logical, and techni-
cal).
Additionally, models at different dimension but belonging to the same layer
are bound to others in order to form the complete business service model at
the respective level of abstraction. For all cells of the matrix, we have defined
formalmodelswhichshouldbeconsideredintheservicedevelopment.Examples
ofmodelsincludeUML,BPMN,BPEL,OWL,etc.Figure4presentsthemodels
selected and used in the ISE workbench.
Therefore, ISE acts as an integration platform for several models placed in
cells of the framework. Throughout one dimension, models are created with
respect to different views and refined until they conform to a technical specifi-
cation. This leads to multiple representations of information on different layers
of abstraction in the corresponding dimensions. Changes in one model have to
be propagated (or at least detected) into related models holding overlapping
information (depicted by arrows in Figure 4).
5.2 Support by Model matching
Multiplestakeholdersandmultipleperspectivesresultinseveralmodelsdesigned
indifferentways.Thesemodelsexhibitcommonalitieswhichneedtobesynchro-
nized. This requires an integration of these models. The integration challenge is
twofold: (1) one has to integrate the models by means of model transformation
enabling an automatic synchronisation and (2) if a transformation is not avail-
able,oneneedstoidentifycommonalities.Thiscoversuse-casessuchasduplicate
14
Fig.4. The ISE models arranged in the corresponding matrix
detectionaswellastracelinkcreation.Thereby,havingthetracelinkdataavail-
able, common scenarios like change impact and orphaned elements analysis can
be performed.
Figure 4 depicts a service, which is constituted of several models, each of
them corresponding to a meta-model, i.e. a formalism representing a number
of instances, e.g. a UML-class diagram or a BPMN process. These instances
(models) have common features, since they represent the same services. For
instance, a data object used in the BPMN has been modelled in a UML-class
diagram.Thisinformationneedstobekeptinsyncinordertofulfillconsistency.
Nowadays, this is poorly supported by tools and if at all performed manually.
However, our approach has one major advantage; it is model-driven, which
allows for a common formalism and therefore easy access to data in a closed
world. To tackle the integration issue, we proposed to extend and adapt the
aforementioned schema matching service, enabling it to consume meta-models
[14]. We envision an extension allowing also a consumption of models, so corre-
spondences can be discovered on meta-model and model level, thus performing
meta-model and model matching in one system. This allows for a matching
of BPMN and BPEL as well as BPMN and UML or any other meta-model.
But we are not limited to these meta-models, but also support the reoccuring
task of matching of concrete instances such as BPEL processes or Java classes.
We name this approach Layer Independent Matching, since it is applicable to
the meta and instance layer. Finally, one can match heterogeneous specifica-
tions,thusdiscoversimilarity(tracelinks)betweendifferentmodelslikeBPMN,
BPEL, WSDL, USDL, etc as well as their concrete instances.
In model matching (instances) a bigger set of data is available compared to
meta-model matching, so we feel that a stronger focus on structural heuristics
is needed. Following that, we propose to apply graph edit distance algorithm
taking advantage of planar graphs and using different clustering algorithms to
cope with the increased dimension in size of models. For instance, a comparison
between two concrete BPEL processes often contains more than 200 elements.
15
Assumingtheyarerepresentedasformalmodelsinagraphthiscanbeextended
(e.g. in Java classes) to more than 5000 nodes, comparing 5000 x 5000 nodes
leads to 2.5 Mio nodes which requests for a clustering approach, thus reducing
the dimensions of the problem to be matched.
6 Conclusions
In order for the Internet of Services to become a reality, numerous areas of
research need to be (re)explored. From business science, contributions on new
business models and pricing schema will be valuable. In the area of law and
cyberlaw, new legal matters related to the provision and contracting aspects of
IoS-basedservicessupportedbynetworkedinformationdevicesandtechnologies
will be required. From the area of social science, new community rating schema
willbeneeded.Thespectrumofresearchtopicsissubstantialandsizable.Inthis
paper we have centered our attention on four main topics: the notion and char-
acteristics of IoS-based services, the characterization of platform services, the
managementofSLAcontracts,andthedesignofcomplexIoS-basedservices.To
correctly understand the notion of IoS-based services, an historical retrospec-
tivealliedwithadetailedidentificationofthespecificitiesofday-to-dayservices
that can be digitalized into the IoS are fundamental. The next topic presented
platform services and introduced a taxonomy to better understand the type of
platform services provided by marketplaces and provisioning platforms. Under-
standing the shared value-added contribution of an IoS-based service and the
contributionofplatformservicesisimportanttoidentifythefocusofinnovation
and uniqueness. The third topic of study was the management of dependencies
between services in compositions. We described an approach for the handling of
dependenciesatdesignandruntime.Atitscoreithasadependencymodelwhich
is created by a semi-automatic approach of automatic discovery and additional
modeling. Finally, the fourth topic described a structured and model-based ap-
proachtodesignandhandletheintrinsiccomplexityofIoS-basedservices.Once
individualmodelstodescribeaserviceareobtained,thechallengeistointegrate
the models using model matching and transformation. We presented a solution
for supporting a semi-automatic matching of metamodels, models and instances
using a Layer Independent Matching approach.
Acknowledgements. The TEXO project was funded by means of the German
Federal Ministry of Economy and Technology under the promotional reference
01MQ07012. The authors take the responsibility for the contents. The informa-
tion in this document is proprietary to the following Theseus Texo consortium
members: SAP AG, empolis GmbH, intelligent views gmbh, ontoprise GmbH,
Siemens AG, Fraunhofer Gesellschaft, FZI Forschungszentrum Informatik Karl-
sruhe, the German Research Center for Artificial Intelligence (DFKI GmbH),
Technische Universit¨at Darmstadt, Technische Universit¨at Dresden, Technische
Universit¨at Mu¨nchen and Universit¨at Karlsruhe (TH). The information in this
document is provided ”as is”, and no guarantee or warranty is given that the
16
information is fit for any particular purpose. The above referenced consortium
members shall have no liability for damages of any kind including without lim-
itation direct, special, indirect, or consequential damages that may result from
the use of these materials subject to any liability which is mandatory due to
applicable law.
References
1. EU directive 2006/123/EC of the European parliament and of the council of 12
December 2006 on services in the internal market. Technical report, European
Union, 2004.
2. EconomicAssessmentoftheBarriersfortheInternalMarketforServices.Technical
report, Copenhagen Economic, 2005.
3. Ziv Baida, Jaap Gordijn, Borys Omelayenko, and Hans Akkermans. A shared
serviceterminologyforonlineserviceprovisioning.InMarijnJanssen,HenkG.Sol,
andReneW.Wagenaar,editors,ProceedingsoftheSixthInternationalConference
on Electronic Commerce (ICEC04). ACM Press, 2004.
4. JorgeCardoso,JohnMiller,AmitSheth,andJonathanArnold. Qualityofservice
for workflows and web service processes. Journal of Web Semantics, 1:281–308,
2004.
5. Jorge Cardoso, Konrad Voigt, and Matthias Winkler. Service engineering for the
internet of services. In Enterprise Information Systems. Springer, 2008.
6. R. Hull, M. Benedikt, V. Christophides, and J. Su. E-services: a look behind the
curtain. In Proceedings of the twenty-second ACM SIGMOD-SIGACT-SIGART
symposium on Principles of database systems, pages 1–14. ACM Press, 2003.
7. Philip Kotler. Marketing Professional Services. Prentice Hall, Englewood Cliffs,
2002.
8. John Long. ITIL Version 3 at a Glance: Information Quick Reference. Springer
Publishing Company, Incorporated, 2008.
9. Thomas W. Malone and Kevin Crowston. The interdisciplinary study of coordi-
nation. ACM Computing Surveys, 26(1):87–119, March 1994.
10. RichardR.Nelson. Technology and global industry: Companies and nations in the
world economy : Bruce R. Guile and Harvey Brooks (Eds.), (National Academy
Press, Washington, D.C, 1987), volume 18. April 1989.
11. Adrian Payne. Essence Services Marketing. Pearson Education, Limited , 1993.
12. Gregor Scheithauer, Konrad Voigt, Veli Bicer, Matthias Heinrich, Anja Strunk,
and Matthias Winkler. Integrated service engineering workbench: Service engi-
neeringfordigitalecosystems. InInternational ACM Conference on Management
of Emergent Digital EcoSystems, 2009.
13. Thomas F. Stafford and Carol S. Saunders. Moving towards chapter three. e-
Service Journal, 3(1):3–5, Fall 2003.
14. Konrad Voigt. Towards combining model matchers for transformation develop-
ment. In Proceedings of 1st International Workshop on Future Trends of Model-
Driven Development at ICEIS’09, 2009.
15. MatthiasWinklerandAlexanderSchill. Towardsdependencymanagementinser-
vice compositions. In Proceedings of the International Conference on e-Business,
pages 79 – 84, 2009.
16. Matthias Winkler, Christian Sell, Thomas Springer, and Alexander Schill. A de-
pendency model for composite service management. To appear in Proceedings of
the International Conference WWW/Internet 2009, November 2009.