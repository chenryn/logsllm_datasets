        mention 'ucontext_t' in the discussion of signal handler execution
    michael kerrisk
        see also: add swapcontext(3)
signal-safety.7
    michael kerrisk
        note async-signal-safety details for errno
standards.7
    michael kerrisk
        add url for posix.1-2008/susv4
    michael kerrisk
        add lfs (large file summit)
    michael kerrisk  [rob landley]
        fix some urls for locations of the standards
    michael kerrisk
        relocate the discussion on posix manual pages
tcp.7
    alejandro colomar  [philip rowlands]
        tcp_syncookies: it is now an integer [0, 2]
            since linux kernel 3.12, tcp_syncookies can have the value 2,
            which sends out cookies unconditionally.
==================== changes in man-pages-5.11 ====================
released: 2021-03-21, munich
contributors
------------
the following people contributed patches/fixes or (noted in brackets
in the changelog below) reports, notes, and ideas that have been
incorporated in changes in this release:
alejandro colomar 
alessandro bono 
alyssa ross 
bastien roucariès 
bruno haible 
christian brauner 
ciprian dorin craciun 
dmitry v. levin 
dmitry vorobev 
edef 
enke chen 
gabriel krisman bertazi 
ganimedes colomar 
jakub wilk 
jan kara 
jens axboe 
johannes pfister 
johannes wellhöfer 
john morris 
jonathan wakely 
jonny grant 
manfred spraul 
michael kerrisk 
michal hocko 
minchan kim 
pádraig brady 
pali rohár 
palmer dabbelt 
paran lee 
peter h. froehlich 
philipp schuster 
stephen kitt 
steve grubb 
suren baghdasaryan 
szunti 
valentin kettner 
vincent lefevre 
walter franzini 
walter harms 
willem de bruijn 
yang xu 
zack weinberg 
apologies if i missed anyone!
new and rewritten pages
-----------------------
close_range.2
    stephen kitt, michael kerrisk  [christian brauner]
        new page documenting close_range(2)
process_madvise.2
    suren baghdasaryan, minchan kim  [michal hocko, alejandro colomar,
    michael kerrisk]
        document process_madvise(2)
fileno.3
    michael kerrisk
        split fileno(3) content out of ferror(3) into new page
            fileno(3) differs from the other functions in various ways.
            for example, it is governed by different standards,
            and can set 'errno'. conversely, the other functions
            are about examining the status of a stream, while
            fileno(3) simply obtains the underlying file descriptor.
            furthermore, splitting this function out allows
            for some cleaner upcoming changes in ferror(3).
newly documented interfaces in existing pages
---------------------------------------------
epoll_wait.2
    willem de bruijn  [dmitry v. levin]
        add documentation of epoll_pwait2()
            expand the epoll_wait() page with epoll_pwait2(), an epoll_wait()
            variant that takes a struct timespec to enable nanosecond
            resolution timeout.
fanotify_init.2
fanotify.7
    jan kara  [steve grubb]
        document fan_audit flag and fan_enable_audit
madvise.2
    michael kerrisk
        add descriptions of madv_cold and madv_pageout
            taken from process_madvise(2).
openat2.2
    jens axboe
        add resolve_cached
prctl.2
    gabriel krisman bertazi
        document syscall user dispatch
mallinfo.3
    michael kerrisk
        document mallinfo2() and note that mallinfo() is deprecated
            document the mallinfo2() function added in glibc 2.33.
        update example program to use mallinfo2()
system_data_types.7
    alejandro colomar
        add off64_t to system_data_types(7)
ld.so.8
    michael kerrisk
        document the --argv0 option added in glibc 2.33
new and changed links
---------------------
epoll_pwait2.2
    dmitry v. levin
        new link to epoll_wait(2)
mallinfo2.3
    michael kerrisk
        new link to mallinfo(3)
off64_t.3
    alejandro colomar
        new link to system_data_types(7)
global changes
--------------
various pages
    alejandro colomar
        synopsis: use 'restrict' in prototypes
            this change has been completed for *all* relevant pages
            (around 135 pages in total).
various pages
    alejandro colomar  [zack weinberg]
        remove unused 
            the manual pages are already inconsistent in which headers need
            to be included.  right now, not all of the types used by a
            function have their required header included in the synopsis.
            if we were to add the headers required by all of the types used by
            functions, the synopsis would grow too much.  not only it would
            grow too much, but the information there would be less precise.
            having system_data_types(7) document each type with all the
            information about required includes is much more precise, and the
            info is centralized so that it's much easier to maintain.
            so let's document only the include required for the function
            prototype, and also the ones required for the macros needed to
            call the function.
             only defines types, not functions or constants, so
            it doesn't belong to man[23] (function) pages at all.
            i ignore if some old systems had headers that required you to
            include  *before* them (incomplete headers), but if
            so, those implementations would be broken, and those headers
            should probably provide some kind of warning.  i hope this is not
            the case.
            [mtk: already in 2001, posix.1 removed the requirement to
            include  for many apis, so this patch seems
            well past due.]
a few pages
    alejandro colomar
        add notes about missing glibc wrappers
_exit.2
abort.3
err.3
exit.3
pthread_exit.3
setjmp.3
    alejandro colomar
        synopsis: use 'noreturn' in prototypes
            use standard c11 'noreturn' in these manual page for
            functions that do not return.
various pages
    ganimedes colomar  [alejandro colomar]
        normalize synopsis notes about nonexistent glibc wrappers
            to easily distinguish documentation about glibc wrappers from
            documentation about kernel syscalls, let's have a normalized
            'note' in the synopsis, and a further explanation in the page body
            (notes in most of them), as already happened in many (but not all)
            of the manual pages for syscalls without a wrapper.  furthermore,
            let's normalize the messages, following membarrier.2 (because it's
            already quite extended), so that it's easy to use grep to find
            those pages.
        normalize notes about nonexistent glibc wrappers
            this commit normalizes texts under sections other than synopsis
            (most of them in notes).
global changes (formatting fixes and minor edits)
-------------------------------------------------
various pages
    michael kerrisk
        errors: remove redundant statement that 'errno' is set
            this is implied in every other manual page. there is no need to
            state it explicitly in these pages.
various pages
    michael kerrisk
        use periods more consistently inside code comments
            in general, complete sentences in free-standing comments
            should be terminated by periods.
a few pages
    michael kerrisk
        better table formatting
            in particular, allow for rendering in widths different from
            (especially less than) 80 columns.
various pages
    michael kerrisk
        consistency fix-up in ftms
            generally, place '||' at start of a line, rather than the end of
            the previous line.
            rationale: this placement clearly indicates that each piece
            is an alternative.
various pages
    michael kerrisk  [alejandro colomar]
        bring more whitespace consistency in synopsis
            the use of vertical white space in the synopsis sections
            is rather inconsistent. make it more consistent, subject to the
            following heuristics:
            * prefer no blank lines between function signatures by default.
            * where many functions are defined in the synopsis, add blank
              lines where needed to improve readability, possibly by using
              blank lines to separate logical groups of functions.
various pages
    alejandro colomar
       consistently use 'unsigned int'
            most pages use 'unsigned int' (and the kernel too).
            make them all do so.
various pages
    michael kerrisk
        various improvements in wording in return value
various pages
    michael kerrisk
        s/glibc versions .
clone.2
    valentin kettner
        fix types in clone_args
            a file descriptor is an int so it should be stored through an int
            pointer while parent_tid should have the same type as child_tid
            which is pid_t pointer.
close.2
    michael kerrisk
        see also: add close_range(2)
copy_file_range.2
    alejandro colomar
        document glibc wrapper instead of kernel syscall
            glibc uses 'off64_t' instead of 'loff_t'.
delete_module.2
    alejandro colomar
        synopsis: fix prototype parameter types
            the linux kernel uses 'unsigned int' instead of 'int' for the
            'flags' parameter.  as glibc provides no wrapper, use the same
            type the kernel uses.
epoll_create.2
    michael kerrisk
        conforming to: mention that epoll_create1() is linux-specific
epoll_wait.2
    michael kerrisk
        conforming to: mention that epoll_pwait() is linux-specific
execve.2
    palmer dabbelt
        correct the versions of linux that don't have arg_max argv/envp size
execveat.2
    alejandro colomar
        fix prototype
            it's been 6 years since execveat(2) was added to the kernel,
            and there's still no glibc wrapper.  let's document the kernel
            syscall prototype.
getcpu.2
    michael kerrisk  [alejandro colomar]
        rewrite page to describe glibc wrapper function
            since glibc 2.29, there is a wrapper for getcpu(2).
            the wrapper has only 2 arguments, omitting the unused
            third system call argument. rework the manual page
            to reflect this.
getgid.2
getuid.2
    michael kerrisk
        note that these interfaces never modify 'errno'
            see https://www.austingroupbugs.net/view.php?id=511
            and the posix.1-2008 specifications of the interfaces.
gethostname.2
    michael kerrisk
        update ftm requirements for gethostname()
getpagesize.2
getdtablesize.3
    michael kerrisk
        update/correct ftm requirements
getrusage.2
    michael kerrisk
        starting in 2.33, glibc no longer provides vtimes()
ioctl_tty.2
    michael kerrisk
        reformat argument type information
            the current mark-up renders poorly. to resolve this, move
            the type information into a separate line.
ipc.2
    alejandro colomar
        fix prototype parameter types
kcmp.2
    michael kerrisk
        since linux 5.12, kcmp() availability is unconditional
            kcmp() is no longer dependent on config_checkpoint_restore.
keyctl.2
    alejandro colomar
        synopsis: fix prototype parameter types
            the linux kernel uses 'unsigned long'.
            there's no reason to use the typedef '__kernel_ulong_t'.
lookup_dcookie.2
    alejandro colomar
        use standard types: u64 -> uint64_t
madvise.2
    michael kerrisk