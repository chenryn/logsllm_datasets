### 问题描述

我在Debian系统中遇到了登录延迟的问题。具体来说，在输入用户名后，系统会延迟约20秒才允许我输入密码。我已经搜索过相关问题，但找到的大多是关于SSH登录时输入错误密码后的延迟设置，而不是我遇到的具体问题。

此外，同样的延迟也出现在FTP连接过程中。一旦成功登录（无论是通过SSH还是FTP），后续的所有操作都非常迅速。只有在登录过程中才会出现这种延迟。

我在`/etc/ssh/sshd_config`文件中看到了以下配置项：

```plaintext
UsePam yes
```

但我对PAM并不了解，也不知道其配置文件位于何处。

### 日志文件

以下是`/var/log/auth.log`中的部分日志记录：

```plaintext
Mar 17 14:27:29 rel2015 sshd[26206]: Failed password for root from 218.65.30.107 port 57695 ssh2
Mar 17 14:27:30 rel2015 sshd[26206]: Received disconnect from 218.65.30.107: 11:  [preauth]
Mar 17 14:27:30 rel2015 sshd[26206]: PAM 2 more authentication failures; logname= uid=0 euid=0 tty=ssh ruser= rhost=218.65.30.107  user=root
Mar 17 14:27:42 rel2015 sshd[26208]: Received disconnect from 218.65.30.107: 11:  [preauth]
Mar 17 14:28:08 rel2015 proftpd: pam_unix(proftpd:session): session closed for user rbase
Mar 17 14:28:23 rel2015 proftpd: pam_unix(proftpd:session): session opened for user rbase by (uid=0)
Mar 17 14:29:25 rel2015 proftpd: pam_unix(proftpd:session): session closed for user cpm303
Mar 17 14:29:41 rel2015 proftpd: pam_unix(proftpd:session): session opened for user cpm303 by (uid=0)
Mar 17 14:35:01 rel2015 CRON[26318]: pam_unix(cron:session): session opened for user root by (uid=0)
Mar 17 14:35:01 rel2015 CRON[26318]: pam_unix(cron:session): session closed for user root
```

显然，系统正在使用PAM，但我不清楚PAM的配置文件位置。

### 分析与建议

从日志文件中可以看到，有多个条目显示了“Failed password for root”。这些条目并未紧接着一个成功的登录尝试，这表明它们可能是一次密码暴力破解攻击。

这种攻击通常会发送大量的请求，可能会导致SSH服务变得非常缓慢，从而影响合法用户的登录体验。任何已经登录的连接不会受到影响，并且响应速度依然很快。

在这种情况下，你可以采取以下步骤来解决问题：

1. **持续尝试登录**：直到成功登录。
2. **阻止恶意IP**：
   ```bash
   iptables -I INPUT -s 218.65.30.107 -p tcp --dport 22 -j REJECT --reject-with tcp-reset
   ```
3. **禁用密码认证**：编辑`/etc/ssh/sshd_config`文件，将以下行设置为`no`：
   ```plaintext
   PasswordAuthentication no
   ```
4. **重新加载SSH服务**：
   ```bash
   systemctl reload ssh
   ```
5. **验证新的SSH连接**：打开一个新的SSH连接以确保你仍然可以登录。

如果你确实需要某些用户通过密码进行认证，可以考虑以下替代方案：

- **使用Match指令**：限制特定用户名和IP组合的密码认证。
- **使用fail2ban**：自动封禁多次失败密码尝试的IP地址。

通过上述步骤，你应该能够解决登录延迟的问题，并提高系统的安全性。