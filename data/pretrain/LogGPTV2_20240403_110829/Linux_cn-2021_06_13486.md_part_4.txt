通过一个长期运行的 IRC 频道，Jason 找到了 Tony Diaz，并招募了他来担任这份工作。 Jordan 邀请了这对计算机考古学家到他位于 Hollywood Hills 的家中。Tony 将一堆装备装进了卡车的后部，准备从 Oceanside 长途开车到洛杉矶。
**00:29:19 - Tony Diaz**：
我拿了几套闲置的 Apple IIe 系统，打包装箱，各种东西装满了半个皮卡车斗，并且还有用于读取困难的软盘的改装磁盘驱动器和各种类似的工具。磁盘驱动器控制器的功能有所不同，还有一些更为现代化的计算机上的东西，有些可以帮助处理软盘（如果有必要的话）。是的，把它们全部装载起来然后上路。
**00:29:43 - Saron Yitbarek**：
在 Jordan 的起居室里。Tony 建立了一个令人印象深刻的由老式 Apple II 计算机和 3.5 英寸磁盘驱动器组成的阵列。然后 Jordan 把一个装在塑料袋里的鞋盒拿了出来，就仿佛它是个圣杯一样。这个圣杯周围有橡皮筋，以防止鞋盒盖子掉落。
**00:30:03 - Tony Diaz**：
我曾多次遇到这种情况，刚刚打开旧的磁盘盒，它们都有同样的那种霉味。我不知道该怎么说，这很难描述，但是对于那些曾经在海军舰船上的人来说，它们气味相同，和你去到飞机后面闻到的都一样。软盘有它自己的独特的，那个词怎么说来着，光泽。
**00:30:25 - Saron Yitbarek**：
Tony 取出了几个磁盘，看看它们的状况。如果需要的话，他准备着取下保护套，并用 Joy 洗碗皂清洗它们。这些磁盘已经很久没有转动过了。因此，他把手指放在中间，摇晃了一下并旋转了一下，以检查是否发霉。然后他和 Jason 分成了两队。
**00:30:49 - Jason Scott**：
我要去做 磁通量读数   flux reading ，也就是磁信息，从软盘上拉取下来每一个磁性波动信息，这会产生非常巨大且难以解码的软盘镜像。这样的想法是，如果发生其他任何错误或者我们在某种单一方式受到阻碍，那么未来我们能够使用这些信息。
**00:31:16**：
Tony 知道这些磁盘上的信息是什么，他在计算机上使用实用工具来读取磁盘，就像早在 1990 年时候那样，这些数据对他来说是有意义的。我们去找那些很明显是标准文件副本的磁盘。试图确保在我们知道面对的是什么之前，我们不会处理任何只有单张的磁盘。这些最初的简单磁盘上的一些是诸如 《Death Bounce》之类的东西。这是他制作的一款从未问世的游戏，还有 Asteroids Clone。它们能运行，我们能够在机器上玩它们，他看着他几十年来都没想起来过的游戏，它们正运行良好。
**00:32:06 - Saron Yitbarek**：
到目前为止，一切都很顺利。现在轮到被标记着《 波斯王子   Prince of Persia 》的那张磁盘了。Tony 开始分析它，并且意识到它是一个硬盘驱动器的备份，被分成了五份放在了五张软盘里。他需要把整个东西重新整合在一起。
**00:32:23 - Tony Diaz**：
因此，要想还原这些镜像，你必须有一个与写入时大小相同的硬盘驱动器卷。当然，我带来了硬盘，但是怎么可能正好有完全相同的大小呢？因为你并不见得总能这么巧。没关系，我将在我的卡上创建了一个 10M 的分区，并制作了这些磁盘的副本，然后告诉它是从 10M 的驱动器上进行的备份。我们继续还原它，然后得到了一个完美的硬盘驱动器，装满了待查看的源代码文件。
**00:32:50 - Saron Yitbarek**：
重大的发现出现在当他们完成了第一个目录并查看文件的时候。
**00:32:55 - Tony Diaz**：
是的，就是它。Merlin 文件，它们都以 “.s” 结尾，还有 OBJ 文件，用于编译或汇编时 —— 都在这里了。哦，我的天哪，它有如此之多的不同版本，我们不得不把这些弄清楚，但是所有人的头基本上都转向了右后方的显示器和计算机上，多少有点儿沉默，好吧，让我们来瞧瞧这上面有什么？那个呢？我记得这个。
**00:33:20 - Jason Scott**：
当他开始这么做，并且我们开始滚动浏览那张磁盘上的文本文件，Jordan 立即识别出来它们是他的原始源代码。因此，即使我们知道我们有了重大发现，我们也还是继续浏览所有的磁盘，以确保我们不会错过一些其他的版本。在我们发现的东西中，有《波斯王子》中其他正在进行的工作，他曾尝试过不同的图形等等。
**00:33:48 - Saron Yitbarek**：
令人惊讶。当团队看到可识别的源代码文件那一刻，长长地松了一口气。《波斯王子：时之沙》已经从时间的流沙中获救。不过他们的工作还没有完全完成。
**00:34:09 - Saron Yitbarek**：
Jason 将抢救回来的代码上传到了 GitHub，世界各地的粉丝立刻就能获取到它。这件事的消息已经散布出去，人们登录并等待着。
**00:34:22 - Tony Diaz**：
我们那天的主要目的是尽快将其上传到 GitHub 上的一个仓库里。我们一直都连接在同一个 IRC 聊天室，有各种各样的人问我们问题。“这是什么？你看到的是什么？你获得了什么？”而且我们在进行时得到了现场反馈。
**00:34:38 - Jason Scott**：
曾开发过《 毁灭战士   Doom 》和《 雷神   Quake 》的 John Romero 说，他在看源代码时学到了一些技巧，而其他一些人当然完全搞不懂他们在看什么，因为在 20 世纪 80 年代后期所写的代码和今日相比相当不一样。事实上他逐个字节地移动内存，试图清理空间以使得“精灵”看起来像预期的一样。那是完全不同的一个世界。
**00:35:09 - Saron Yitbarek**：
自从 2012 年那重大的一天以来，《波斯王子》的源代码一直被研究、分享、评论和珍藏。这里是 Matthew G. Kirschenbaum 的一些总结。
**00:35:23 - Matthew Kirschenbaum**：
这是另一个例子，有关我们会认为是数字文化、有点像当今艺术作品的方式，我们当下的创造性表达方式。很多东西都被锁在了这些陈旧过时、满是灰尘的软盘里，但是凭借一点运气和工程学工作，发生了一些我们如何把东西弄回来的非常了不起的故事。
**00:35:49 - Saron Yitbarek**：
如今，“保存”图标是我们中的一些人离软盘最近的地方，但是当你们看到它时，我希望你们能够记住，它是这段神奇历史的一部分，我们不应该将其视为理所当然。这是一段有关分享和拯救我们所创造的东西的历史，一段有关保存的历史。
**00:36:09 - Saron Yitbarek**：
《代码英雄（ Command Line Heroes ）》是红帽（ Red Hat ）的一档原创播客节目。请到 [redhat.com/commandlineheroes](https://www.redhat.com/commandlineheroes) 查看我们的软盘研究笔记。顺便说一句，如果我们保存了这一集（大约 51.5 MB )，我们估计它会占用 36 张 3.5 英寸的软盘。我是 Saron Yitbarek，直到下一次，继续写代码吧。
**附加剧集**
从打孔卡和纸带到软盘并不是简单的事情。听听王安的故事，他推动了计算机存储技术的发展。
> 
> **什么是 LCTT SIG 和 LCTT LCRH SIG**
> 
> 
> LCTT SIG 是 LCTT  特别兴趣小组   Special Interest Group ，LCTT SIG 是针对特定领域、特定内容的翻译小组，翻译组成员将遵循 LCTT 流程和规范，参与翻译，并获得相应的奖励。LCRH SIG 是 LCTT 联合红帽（Red Hat）发起的 SIG，当前专注任务是《代码英雄》系列播客的脚本汉化，已有数十位贡献者加入。敬请每周三、周五期待经过我们精心翻译、校对和发布的译文。
> 
> 
> 欢迎[加入 LCRH SIG](/article-12436-1.html) 一同参与贡献，并领取红帽（Red Hat）和我们联合颁发的专属贡献者证书。
> 
> 
> 
---
via: 
作者：[Red Hat](https://www.redhat.com/en/command-line-heroes) 选题：[bestony](https://github.com/bestony) 译者：[JonnieWayy](https://github.com/JonnieWayy) 校对：[wxy](https://github.com/wxy)
本文由 [LCRH](https://github.com/LCTT/LCRH) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出