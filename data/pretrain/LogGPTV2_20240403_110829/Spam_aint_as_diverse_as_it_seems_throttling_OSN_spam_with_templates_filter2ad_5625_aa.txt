title:Spam ain't as diverse as it seems: throttling OSN spam with templates
underneath
author:Hongyu Gao and
Yi Yang and
Kai Bu and
Yan Chen and
Doug Downey and
Kathy Lee and
Alok N. Choudhary
Spam ain’t as Diverse as It Seems:
Throttling OSN Spam with Templates Underneath
Hongyu Gao?, Yi Yang?, Kai Bu∗, Yan Chen?, Doug Downey?, Kathy Lee?, Alok Choudhary?
?Department of Electrical Engineering and Computer Science, Northwestern University
∗College of Computer Science and Technology, Zhejiang University
ABSTRACT
In online social networks (OSNs), spam originating from
friends and acquaintances not only reduces the joy of In-
ternet surﬁng but also causes damage to less security-savvy
users. Prior countermeasures combat OSN spam from diﬀer-
ent angles. Due to the diversity of spam, there is hardly any
existing method that can independently detect the majority
or most of OSN spam. In this paper, we empirically ana-
lyze the textual pattern of a large collection of OSN spam.
An inspiring ﬁnding is that the majority (63.0%) of the col-
lected spam is generated with underlying templates. We
therefore propose extracting templates of spam detected by
existing methods and then matching messages against the
templates toward accurate and fast spam detection. We
implement this insight through Tangram, an OSN spam ﬁl-
tering system that performs online inspection on the stream
of user-generated messages. Tangram automatically divides
OSN spam into segments and uses the segments to construct
templates to ﬁlter future spam. Experimental results show
that Tangram is highly accurate and can rapidly generate
templates to throttle newly emerged campaigns. Speciﬁ-
cally, Tangram detects the most prevalent template-based
spam with 95.7% true positive rate, whereas the existing
template generation approach detects only 32.3%. The inte-
gration of Tangram and its auxiliary spam ﬁlter achieves an
overall accuracy of 85.4% true positive rate and 0.33% false
positive rate.
Categories and Subject Descriptors
J.4 [Computer Applications]: Social and behavioral sci-
ences
General Terms
Human Factors, Measurement, Security
Keywords
Online social networks, spam, spam campaigns
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are not
made or distributed for proﬁt or commercial advantage and that copies bear
this notice and the full citation on the ﬁrst page. Copyrights for components
of this work owned by others than ACM must be honored. Abstracting with
credit is permitted. To copy otherwise, or republish, to post on servers or to
redistribute to lists, requires prior speciﬁc permission and/or a fee. Request
permissions from Permissions@acm.org.
ACSAC ’14, December 08 - 12 2014, New Orleans, LA, USA
Copyright 2014 ACM 978-1-4503-3005-3/14/12 ...$15.00
http://dx.doi.org/10.1145/2664243.2664251.
1.
INTRODUCTION
Spam has been plaguing the Internet community for more
than a decade. With the tremendous popularity of online
social networks (OSNs) in recent years, spammers quickly
start to exploit this new media channel. Despite the de-
velopment of countermeasures, spammers ﬁnd their way to
adapt and stick. Research reveals that on Twitter, one of
the most popular OSNs nowadays, more than 4% of collected
tweets are spam [27], which has slipped through all the de-
ployed defense mechanisms. Researchers have proposed to
combat OSN spam from multiple angles, including mining
the textual content [6], studying the redirection chains of
embedded URLs [15] as well as classifying the URL landing
pages [26]. Despite the eﬀort to build OSN spam mitigation
systems, it is not yet clear what techniques the spammers
are using to construct OSN spam, and how the techniques
evolve. This missing piece of information plays a crucial role
to inspire eﬀective designs to throttle OSN spam.
In this paper, our ﬁrst contribution is to reveal the OSN
spam generation techniques according to spam textual pat-
terns (Section 2). We conduct a measurement study, iden-
tifying 115 campaigns from more than 500 thousand spam
messages. We ﬁnd that the majority of spam (63.0%) is gen-
erated with underlying templates, which is consistent with
prior email spam research [12, 13, 22]. Templates are valu-
able for spammers, because they let spammers control and
customize the semantic meaning of generated messages to
boost the conversion rate. Meanwhile, they generate di-
versiﬁed messages that are more diﬃcult to detect. OSN
spammers have evolved to use more sophisticated templates
that break the assumptions in prior email spam template
generation research, making them ineﬀective for OSN spam.
In addition, the spam without underlying templates calls for
eﬀective countermeasures as well.
In particular, we identify three major challenges that ren-
der existing spam template generation techniques ineﬀective.
1. Absence of invariant substring in template. Prior
spam template generation research [22,33] made a cru-
cial assumption that an invariant substring is hard-
coded in a template, so that every instantiation of the
template contains such string. Unfortunately, an OSN
spam template does not always contain any invariant
substring.
2. Prevalence of noise. Spammers extensively add se-
mantically unrelated noise words into spam messages.
The presence of noise diversiﬁes spam messages, and
increases the diﬃculty to identify semantically mean-
ingful text segments.
3. Spam heterogeneity. Spam instantiating diﬀerent
templates mixes with spam without any underlying
templates.
It is hard to obtain a training set with
a single template in an online detection scenario.
Our second contribution is to propose Tangram, a system
that performs eﬀective template generation to combat OSN
spam (Section 3). Many existing methods detect spam-
mers instead of spam. These methods are based on account
activity and need long observation periods for the account
features to accumulate [3, 25, 29, 31]. Many other detection
approaches are based on URL analysis, which inherently
cannot detect spam without URLs [15, 26, 30]. Researchers
have revealed signiﬁcant amount of such spam [4]. The few
existing methods that detect spam with or without URLs
in real-time suﬀer from high false positive rates [4, 6, 24].
In contrast, Tangram is the ﬁrst accurate online OSN spam
detection system that detects spam with or without URLs.
It extracts templates of spam detected by existing methods
and then matches messages against the templates toward
accurate and fast spam detection. In practice, it can be de-
ployed in combination with heterogeneous detection meth-
ods, like account and URL analysis, to optimize detection
accuracy. Speciﬁcally, Tangram is highly accurate because
of the following four innovations.
1. Embrace the absence of invariant substring. We
identify frequently appearing segments within messages
and then locate equivalent segments among messages.
Such segments are later assembled into spam templates,
which are used to match future spam.
2. Mitigate the prevalence of noise. We cast a sequence-
labeling task to label each word in a given message as
either “noise” or “non-noise”. Only “non-noise” words
are used to generate templates.
3. Break spam heterogeneity. We pre-cluster spam
and perform template generation within individual par-
titions. The template generation procedure also dis-
cards outlier messages in the partition.
4. Build a double defense. We mitigate spam without
underlying templates using a supplementary module
that detects spam with excessive semantically unre-
lated noise words. In an adversarial setting, spammers
may deliberately copy or adapt benign content copied
from other sources in attempt to avoid detection by
Tangram. Since spammers need to use popular con-
tent to attract the audience and they generate a large
number of spam, the OSN administrator will observe
the popular content with replaced URLs in large vol-
ume, which defeats the spammers’ purpose to evade
detection.
In addition, we can equip Tangram with
multiple heterogeneous detection modules in practice.
It is hard for spammers to evade detection from mul-
tiple angles simultaneously.
We evaluate Tangram’s ability to detect real-time spam
on a large Twitter dataset of 17 million tweets (Section 4).
Equiped with one necessary auxiliary spam ﬁlter, Tangram
detects 95.7% of the most prevalent template-based spam.
The complete system detects Twitter spam with 85.4% true
positive rate and 0.33% false positive rate. The true positive
rate is similar with existing systems [4, 6, 24], while the false
positive rate is at least 2 times better than that in [6] and 10
times better than [4, 24]. Tangram reacts to newly emerged
spam campaigns quickly. Finally, we investigate Tangram’s
robustness (Section 5) and related work (Section 6).
2. MOTIVATION: REVEALING TWITTER
SPAM TEMPLATE
In this section, we empirically analyze the textual patterns
of Twitter spam as a ﬁrst attempt to quantitatively reveal
popular techniques that generate current OSN spam. We
ﬁnd that the majority of spam is generated by underlying
templates. This ﬁnding motivates Tangram.
2.1 Data Collection
We ﬁrst collected a large dataset from Twitter that con-
tained about 17 million public tweets generated by 4.2 mil-
lion users. The tweets were generated between June 1, 2011
and July 21, 2011. In the data collection process, we con-
tinuously downloaded popular Twitter Hashtags from the
website What the Trend [1]. We then downloaded all pub-
lic tweets that contained the Hashtags. Our data collec-
tion method was inevitably biased towards tweets contain-
ing popular Hashtags. Consequently, the spam tweets in our
dataset were also biased towards spammers using hashtags.
We, however, would like to emphasize that the numerical
accountIDs in our dataset followed a uniform distribution,
suggesting the dataset was not overly biased towards speciﬁc
account groups.
We revisited Twitter in March 2012 to label the collected
tweets. For each account that posted tweets in the dataset,
we crafted a special URL, using which we could access the
account’s personal proﬁle on Twitter. We only checked if
we were redirected to a page indicating that the account
had been suspended. We found that 120,386 accounts were
suspended. They posted 558,706 tweets, all of which were
labeled as spam. There were 532,676 unique spam tweets,
showing that our collected spam had few duplicates. The
other tweets were labeled as legitimate. Using the same
method, we collected another relatively small tweet dataset
generated during January, 2012, containing 46,844 spam
tweets. The labeled spam tweets did not represent the spam
that Twitter could already detect. Rather, their presence in
our collected data meant that Twitter failed to detect them
when they were generated1.
Big Name A an eye-catching action -
Celebrity B
an eye-catching action -
U RL
Big Name A oﬀensive content , look at this video U RL
Celebrity B
oﬀensive content , look at this video U RL
RIP Celeb C oﬀensive content , look at this video U RL
U RL
Table 1: Retroﬁtted sample spam from a template-
based campaign.
(Notes: We intentionally substi-
tuted likely oﬀensive contents such as celebrity iden-
tities and sexuality in the example spam tweets. In-
terested readers are welcome to contact the authors
for original datasets.)
2.2 Template-based Spam Dominates
Through mining the textual pattern of spam, we ﬁnd that
the majority (63.0%) of the 2011 spam dataset shares under-
1The spam labeling approach assumed that suspended ac-
counts generated no legitimate message. To validate this
assumption, we randomly selected 100 suspended accounts
and manually checked all their posted tweets, which were in-
deed spam. Although spamming was not the only reason for
account suspension in Twitter, our manual checking showed
that it was the overwhelmingly dominant reason.
lying templates. Table 1 shows ﬁve (intentionally retroﬁtted)
sample spam tweets from a much larger, but typical template-
based campaign. We substitute the embedded URLs with
the symbol U RL for brevity. The tweets in this campaign
comprise three components: a celebrity name, an eye-catching
action, and a URL. Each component has one or more choices
of textual content. The number of unique spam messages
that this template can potentially generate, therefore, in-
creases quickly with the number of components.
Spam Template Model. We formally model the true
spam template as a macro sequence (m1, m2, ..., mk). We
deﬁne two types of macros: dictionary macros and noise
macros. At the time of spam generation, a dictionary macro
picks the textual content from a pre-deﬁned list of choices
(e.g., celebrity name in Table 1). It is possible for a dictio-
nary macro to have only one choice. In this case, the macro
reduces to an invariant substring that all generated messages
will contain. Dictionary macros carry semantic meanings so
that spammers can lure the recipients to visit the embedded
URLs. In comparison, we abstract any macro that does not
convey any semantic meaning, but purely increases the mes-
sage diversity or increases the chance of exposing the spam
to more users, as a noise macro. A noise macro can be im-
plemented by, for example, randomly generating a character
string, mentioning Twitter users, etc.; it is not our interest
to diﬀerentiate among them. The concatenation of the in-
stantiation of macros constitutes a spam message.
We assume that a template shall contain at least one dic-
tionary macro, while it may or may not contain any noise
macro. However, we do not assume the existence of any in-
variant substring. Written in human language, a spam mes-
sage is not restricted to any particular expression to present
a semantic meaning. We have also observed spam template
without invariant substring in our data. This relaxed as-
sumption is one of our major diﬀerences from the existing
template generation work [22, 33] that relies on invariant
substrings.
2.3 Template-based Spam Continues Dominat-
ing
Spam Categorization. We ﬁrst split spam into two
categories: “semantically similar” and “semantically dissimi-
lar”. Semantically similar spam forms big clusters that share
the same semantic meaning, whereas semantically dissimilar
spam does not. We further divide the “semantically simi-
lar” spam into “template-based” and “paraphrase” spam. In
contrast with template-based category, Paraphrase Category
consists of spam tweets that share the same semantic mean-
ing but cannot be uniformly divided into semantically equiv-
alent segments. Meanwhile, the tweets do not share regular
wording, e.g., “browsing statistics click Celebrity John U RL”
and “interesting site on Celeb J U RL”. In addition, semanti-
cally dissimilar spam consists of No-content Spam that con-
tains very little semantically meaningful textual content and
Other Spam that we have not systematically categorized.
Template-based spam continues dominating other
categories of spam. Table 2 provides the popularity of
four spam categories in June/July, 2011 and January, 2012.
Template-based spam remains to be the most popular cat-
egory in 2012, with its percentage increasing to 68%. The
no-content category almost vanishes. Its percentage dramat-
ically drops to 0.3%. It is possible that the no-content cate-
gory exhibits strong patterns and can be easily blocked. The
Template 
Generation
Labeled 
Spam
Noise Label
Provide 
Template
Ham 
Buffer
Spam 
Buffer
Random 
Sample
Template 
Matching
No
Matched?
Auxiliary 
Spam Filter
Yes
Filter
Yes
No
Matched?
Go 
Through
Input 
Stream
Figure 1: Tangram framework: The template gen-
eration and matching overview.
increasingly popular template-based spam indicates that our
detection method with focus on spam template generation
is eﬀective to combat modern OSN spam.
Spam Category
Similar Semantic
Dissimilar Semantic
Template-based
Paraphrase
No-content
Others
2011
2012
63.0% 68.3%
14.7% 12.9%
8.4%
13.9% 18.5%
0.3%
Table 2: The popularity of four spam categories in
June/July, 2011 and January, 2012, respectively.
3. TANGRAM: TEMPLATE-BASED SPAM
DETECTION SYSTEM
In this section, we present Tangram, a template-based
spam detection system with high accuracy and speed. We
ﬁrst formulate the notions of template, template matching
and template generation. Next, we present the details of the
online Tangram system. Tangram does not need the knowl-