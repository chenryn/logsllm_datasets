```  
pg_basebackup -D /data01/std -F p -r 10M -R -X s -h pgm-xxx.pg.rds.aliyuncs.com -p 3433 -U stduser -s 5  
```  
```  
-D /data01/std  数据目录  
-F p  通过流复制协议拷贝数据文件  
-r 10M 限速 10MB/s  
-R 生成recovery.conf  
-X s  通过流复制协议拷贝wal日志  
-h xxx  rds pg数据库地址  
-p 3433 rds pg数据库port  
-U stduser  rds_superuser用户  
-s 5  每5秒报告  
```  
11、查看配置standby recovery.conf  
```  
standby_mode = 'on'  
primary_conninfo = 'user=stduser password=''pwd'' host=''pgm-xxx.pg.rds.aliyuncs.com'' port=3433 application_name=custom_client'  
# sslmode可以改成off，如果不需要ssl链接的话  
# 指定application_name，用于识别客户  
```  
12、配置standby postgresql.conf  
注释rds独有参数，以及本地未安装插件的preload library（如果需要使用这些插件的话，必须要在ecs上安装这些插件的软件），同时修改监听。    
```  
vi $PGDATA/postgresql.conf  
port=3433  
#shared_preload_libraries='pg_stat_statements,auth_delay,auto_explain,zhparser,timescaledb,pg_pathman'  
shared_preload_libraries='pg_stat_statements,auth_delay,auto_explain'  
#rds_max_log_files=20  
#rds_sync_replication_timeout=0  
```  
13、配置standby pg_hba.conf  
```  
可以不配置  
```  
14、启动standby  
```  
su - postgres  
pg_ctl start  
```  
15、监控延迟，链接到rds pg主库查询  
```  
psql -h pgm-xxx.pg.rds.aliyuncs.com -p 3433 -U stduser postgres  
postgres=> select * from pg_stat_replication ;  
-[ RECORD 1 ]----+------------------------------  
pid              | 94  
usesysid         | 16385  
usename          | replicator  
application_name | standby1  
client_addr      | 192.168.0.xxx  
client_hostname  |   
client_port      | 46234  
backend_start    | 2019-10-28 10:29:55.251335+08  
backend_xmin     |   
state            | streaming  
sent_lsn         | 11/7D0014F0  
write_lsn        | 11/7D0014F0  
flush_lsn        | 11/7D0014F0  
replay_lsn       | 11/7D0014F0  
write_lag        |   
flush_lag        |   
replay_lag       |   
sync_priority    | 0  
sync_state       | async  
-[ RECORD 2 ]----+------------------------------  
pid              | 12615  
usesysid         | 16398  
usename          | stduser  
application_name | custom_client  
client_addr      | xxx.xxx.xxx.xxx  
client_hostname  |   
client_port      | 64870  
backend_start    | 2019-11-12 21:21:50.036358+08  
backend_xmin     |   
state            | catchup  
sent_lsn         | 11/79F20000  
write_lsn        | 11/78F40000  
flush_lsn        | 11/78F40000  
replay_lsn       | 11/79000000  
write_lag        | 00:00:08.805876  
flush_lag        | 00:00:08.805876  
replay_lag       | 00:00:08.805876  
sync_priority    | 0  
sync_state       | async  
```  
查看延迟  
```  
postgres=> select pg_size_pretty(pg_wal_lsn_diff(pg_current_wal_insert_lsn(), sent_lsn)),   
pg_size_pretty(pg_wal_lsn_diff(pg_current_wal_insert_lsn(), replay_lsn)),*   
from pg_stat_replication   
where application_name='custom_client';  
-[ RECORD 1 ]----+------------------------------  
pg_size_pretty   | 0 bytes  
pg_size_pretty   | 0 bytes  
pid              | 12615  
usesysid         | 16398  
usename          | stduser  
application_name | custom_client  
client_addr      | xxx.xxx.xxx.xxx 
client_hostname  |   
client_port      | 64870  
backend_start    | 2019-11-12 21:21:50.036358+08  
backend_xmin     |   
state            | streaming  
sent_lsn         | 11/7E0014C0  
write_lsn        | 11/7E0014C0  
flush_lsn        | 11/7E0014C0  
replay_lsn       | 11/7E0014C0  
write_lag        |   
flush_lag        |   
replay_lag       |   
sync_priority    | 0  
sync_state       | async  
```  
## 参考  
https://www.postgresql.org/docs/11/app-pgbasebackup.html  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")