172.16.0.2
Orbit nodes                      VINI nodes
UDP tunnel
Figure 9. Integrated architecture to test hand-off in a mobility 
scenario. 
The  execution  steps  of  the  experiment  are  as  follows;  initially, 
video  is  streamed  from  the  Video  Server  to  the  Mobile  Client 
through access point A.  As the Mobile Client moves away from 
192.168.102.0/24
ath0
192.168.102.0/24
tap0
192.168.102.2
br0
BRIDGE
CONFIGURATION
Ifconfig br0 192.168.102.2 netmask 255…
Figure 7.  Example of Bridge IP configuration. 
Linux Routing
br0
tap0
ath0
192.168.102.1
172.19.0.0/24
&
172.20.0.0/24
Through 172.19.0.3
ROUTER
CONFIGURATION
Ifconfig br0 192.168.102.1 netmask 255.255.255.0
Ifconfig ath0 172.19.0.1 netmask 255.255.255.0
route add –net 172.20.0.0/24 gw 172.19.0.3
Figure 8. Example of Router IP configuration. 
5.  INTEGRATED MOBILITY SCENARIO 
In  this  section  we  provide  proof-of  concept  of  the  integrated 
architecture by deploying a Layer 3 experiment over PlanetLab- 
VINI  and  ORBIT.  The  objective  of  this  experiment  is  to 
investigate hand-off issues between access points that may belong 
to different Internet Service Providers (ISPs).  Although mobility 
support  is  a  requirement  in  the  Internet,  IP  does  not  properly 
addresses its specific needs. Designs that have been proposed to 
better support mobility use some form of triangular routing (e.g., 
Mobile IP).  In this experiment, we investigate ways to simplify 
hand-off by removing triangular routing. 
5.1  Experiment Description 
 Figure 9 represents the topology that is used in the experiment. 
Three VINI nodes are physically located in Berkeley, California 
Tech,  and  MIT,  and  communicate  with  each  other  via  UDP 
tunnels.  A  Video  Server  is  linked  to  the  California  Tech  VINI 
node by using an ORBIT node with the Bridge configuration, as 
previously described. We then attach two access points, A and B, 
to the other VINI nodes and configure them in the Router mode.  
The  ath0  wireless  interfaces  on  the  four  ORBIT  nodes  are 
configured with 172.16.X.X IP addresses and are assigned proper 
channel,  essid,  and  frequency.  The  tap0/br0  interfaces  are 
configured  with  192.168.X.X  IP  addresses.  OSPF  is  utilized  to 
automatically set up connectivity between nodes. 
access point A connectivity breaks and the video freezes. Access 
point  A  senses  that  the  link  is  broken  and  through  OSPF 
advertises  that  it  is  no  longer  in  the  routing  path  of  the  Mobile 
Client. That update is propagated and reflected in all the nodes.  
Meanwhile,  the  Mobile  Client  establishes  connectivity  to  the 
network via access point B, which in turn advertises the new link 
to  the  Mobile  Client.  Once  the  new  routing  information  is 
propagated in the network the video is restored. 
 It  is  important  to  note  that  this  investigation  is  different  from 
Mobile IP because in the case of mobile IP access point A would 
relay the packets of the Mobile Client to access point B after the 
hand-off.  In  this  scenario,  the  packets  do  not  traverse  the 
Berkleley  and  access  point  A  overlay  nodes  and  do  not  get 
redirected to access point B.  They instead go through California 
Tech, MIT, and access point B and are delivered directly to the 
Mobile Client. 
5.2  Experimental Results 
Initial results of our measurements with the Iperf tool have shown 
that the packet delay with Mobile IP is 443 msecs as compared to 
225  msecs  with  our  setup.  Furthermore,  by  manually  triggering 
the  change  in  the  routing  paths  when  the  connectivity  of  the 
Mobile  Client  between  access  point  A  and  B  changed,  we  have 
found that it takes approximately 3.5 seconds for the new routes 
to propagate in the network and for the video to get restored. 
Figure  10  shows  the  throughput  from  the  Video  Server  to  the 
Mobile Client with different offered loads.  With an offered load 
of 50 Mbps, the deviation in throughput is higher. However, the 
average 
to  be 
approximately  the  same.  These  values  can  be  justified  after 
looking at the throughput characteristics of the OpenVPN links in 
Table 1. 
for  both  offered 
throughput 
loads 
tends 
Throughput from Video Server to Mobile Client with varying offered load
50 Mbps avg 0.9
1 Mbps avg 0.975
4
3.5
3
2.5
2
1.5
1
0.5
)
s
p
b
M
(
t
u
p
h
g
u
o
r
h
T
0
0
20
40
60
80
100
Time(secs)
120
140
160
180
Figure 10. Throughput characteristics of received video. 
The  OpenVPN  link  between  the  Video  Server  and  California 
Tech  has  a  throughput  of  1.25  Mbps  inferring  that  it  is  the 
bottleneck of the video connection. It is therefore worthwhile to 
note that the selection of links during integration is important as it 
may  dictate  the  results  of  an  experiment.  In  addition,  the 
throughput variation indicates the need for QoS guarantees over 
virtual overlay links to accommodate experiments that are delay 
sensitive.    Currently,  there  are  no  standard  Quality  of  Services 
(QoS)  guarantees  on  the  PlanetLab  nodes  for  bandwidth,  IO  or 
CPU time. The GENI effort aims to address this issue [17]. 
Table 1.  Throughput, delay, and jitter on OpenVPN links 
JITTER 
THROUGHPUT 
OpenVPN 
DELAY 
LINKs 
Access point A 
to Berkeley 
Access point B 
to MIT 
Server bridge to 
California Tech 
Mpbs 
usec 
Usec 
4.01 
4.25 
1.25 
83 
99 
19 
3.0 
2.9 
7.5 
6.  DISCUSSION 
The integration lessons from ORBIT and VINI can be generalized 
and applied to the integration of other wired and wireless testbeds. 
The  utilization  of  Ethernet  tunnels  instead  of  IP  tunnels  has 
allowed the support of non-IP protocols and broadcast packets for 
network layer experimentation. 
While  VINI  provides  a  powerful  platform  to  create  controlled 
network  topologies,  it’s  automatically  generated  underlying 
configuration  files  require  intimate  knowledge  of  VINI’s  inner 
workings.  As  previously  described,  VINI  links  together  Click 
modular software router, UML, UML Switch, XORP BGP/OSPF 
routing software and OpenVPN using a system of Unix sockets, 
UDP sockets and Linux Tap/Tun interfaces. By carrying Ethernet 
traffic to the user space, we allow users with basic knowledge in 
Linux and Linux networking to use the integrated testbed without 
knowing  the  details  of  the  lower  layers  of  virtualization  on  the 
nodes  (e.g.,  Click)  or  having  to  modify  the  underlying  system. 
Therefore, transparency aids the user to expedite the deployment 
of an experiment. 
PlanetLab  nodes  use  virtualization  to  accommodate  multiple 
users. The cost of providing Layer 3 experiments through virtual 
internetworking  at 
lower 
performance  since  forwarding  data  packets  in  the  UML  kernel 
incurs nearly 15% additional overhead [16].  
As  previously  discussed  in  Section  3,  it  is  not  preferred  to 
virtualize wireless nodes because users typically require access to 
the  entire  protocol  stack  to  investigate  lower  layer  issues 
(assuming  a  single  wireless  card  per  node).  However,  it  is 
important  to  note  that  ORBIT  nodes  have  2  wireless  interfaces, 
and we could potentially use two instances of UML and support 
two  concurrent  experiments  by  attaching  an  interface  to  each 
virtual machine. We chose not to provide concurrent support for 
two  experiments  per  node  as  there  is  currently  no  control 
mechanism  within  UML  to  provide  access  to  the  lower  layer 
stack. Access to the physical and MAC layers is typically needed 
in experiments that involve wireless nodes. We instead spatially 
divide  the  ORBIT  grid  such  that  each  VINI-ORBIT  experiment 
gets a portion of the wireless nodes. Experiments use orthogonal 
frequencies,  which  limits  the  number  of  concurrent  experiments 
is,  however,  a 
the  UML 
level 
based upon work supported by the National Science Foundation 
under Grants No. CNS 0335244 and CNS 0627032. 
9.  REFERENCES 
[1]  “PlanetLab: An open platform for developing, deploying, 
and accessing planetary-scale services,” https://www.planet-
lab.org/, available May 15, 2007. 
[2]  “Understanding VINI” , https://www.vini-
veritas.net/documentation/pl-vini/user/understand, available 
May 10, 2007. 
[3]  A. Bavier, N. Feamster, M. Huang, L. Peterson, and J. 
Rexford, “In VINI Veritas: Realistic and Controlled Network 
Experimentation,” in  ACM SIGCOMM, Vol. 36, No. 4, pp. 
3-14, October 2006. 
 “Emulab – Network Emulation Testbed,” 
http://www.emulab.net/, available May 20, 2007. 
[4] 
[5]  B. White, J. Lepreau, and S. Guruprasad, "Lowering the 
barrier to wireless and mobile experimentation," ACM 
SIGCOMM Computer Communications Review, Vol. 33, pp. 
47-52, 2003. 
[6]  D. Raychaudhuri, et al., "Overview of the ORBIT radio grid 
testbed for evaluation of next-generation wireless network 
protocols," in IEEE WCNC, vol. 3, pp. 1664-1669, 2005. 
[7]  H. Lundgren, D. Lundberg, J. Nielsen, E. Nordstrom, and C. 
Tschudin, "A large-scale testbed for reproducible ad hoc 
protocol evaluations," in IEEE WCNC, vol. 1, pp. 412-418, 
2002. 
[8]  R. Karrer, A. Sabharwal, and E. Knightly, " Papers from 
Hotnets-II: Enabling large-scale wireless broadband: the case 
for TAPs," in ACM SIGCOMM Computer Communication 
Review, Vol. 34, pp. 27-32, 2004. 
[9]  WHYNET, http://pcl.cs.ucla.edu/projects/whynet/, accessed 
on 12/05/2005. 
[10] “User-Mode Linux,” http://user-mode-linux.sourceforge.net/, 
available May 5, 2007. 
[11] “XORP: Open Source IP Router,” http://www.xorp.org/, 
available May 17, 2007. 
[12] “Click Modular Router,” http://pdos.csail.mit.edu/click/, 
available May 20, 2007. 
[13] E. Kohler, R. Morris, B. Chen, J. Jannotti, and M. F. 
Kaashoek, “The Click modular router,” ACM Transactions 
on Computer Systems, vol. 18, pp. 263–297, August 2000. 
[14]  “OpenVPN: An open source SSL VPN solution,” 
http://openvpn.net/. 
[15] ‘OpenSSL: The Open Source toolkit for SSL/TLS,” 
http://www.openssl.org/, available May 19, 2007. 
[16] X. Jiang and D. Xu, “Violin: Virtual internetworking on 
overlay infrastructure,” in Proc. International Symposium on 
Parallel and Distributed Processing and Applications, pp. 
937–946, 2004.
based  on  the  number  of  orthogonal  frequencies  available  on the 
802.11a/b/g interfaces. 
Eventhough the aforementioned proof-of-concept experiment was 
based  on  802.11a/b/g,  the  ORBIT  grid  can  also  provide  support 
for  experiments  involving  heterogeneous  wireless  networks.  In 
addition  to  802.11a/b/g,  a  subset  of  ORBIT  nodes  are  equipped 
with  Zigbee,  Bluetooth,  and  GNU  radios.    A  researcher  can 
therefore  choose  to  integrate  a  wired  testbed  with  groups  of 
ORBIT nodes that use different wireless technologies.  
Another aspect of integration is the unification of the control and 
management architectures of both wired and wireless testbeds. An 
ORBIT  user  wanting  to  run  an  integrated  experiment  can 
communicate  with  a  centralized  control  and  management 
infrastructure  that  allocates  to  the  user  the  Orbit  grid  for  a 
particular  time  slot,  while  at  the  same  time  communicates  with 
VINI  nodes  and  set  ups  the  required  authentication  information 
needed for OpenVPN tunnel creation. In addition, it can authorize 
the ORBIT user to use specific slivers on the VINI nodes. On the 
other hand, a VINI user wanting to run an integrated experiment 
can  communicate  with  a  control  and  management  plane  that 
allocates ORBIT nodes for the user as well as copy the required 
authentication  keys  to  enable  OpenVPN  tunnel  creation  on  the 
ORBIT  nodes.  Therefore,  there  is  a  need  for  an  identity-
management federation across both testbeds. In order to allow for 
this  integration  from  the  perspective  of  an  ORBIT  user,  we 
extended  the  ORBIT  control  framework  to  include  VINI  nodes 
through the use of a single programming script and experimental 
methodology.  This unified control and management architecture 
is currently missing from the perspective of a VINI user. 
7.  CONCLUSION 
In this paper, we presented an integrated architecture solution that 
enables  network  layer  experiments  over  wired  and  wireless 
networks  on  existing  Internet  links  with  realistic  background 
traffic.  Our  solution  provides  an  abstraction  of  the  underlying 
software architecture that simplifies the configuration complexity 
of  setting  up  experiments.  In  addition,  it  supports  non-IP  traffic 
and  broadcast  traffic,  as  well  as  any-  to-any  host  connectivity. 
The  usefulness  of  this  integrated  architecture  was  demonstrated 
through the investigation a video hand-off design as an alternative 
to Mobile IP. 
The  results  of  the  research  discussed  in  this  paper  provide  a 
valuable  basis  on  which  researchers  can  build  and  prototype 
mixed wired/wireless experiments. Such a platform will assist in 
developing  next  generation  protocols  that  address  many  core 
issues  such  as  mobility  and  location-directed  broadcasts  over 
extensive network architectures. The results of these experiments 
may  one  day  power  the  next  generation  of  network  devices 
designed for the wireless information age. 
8.  ACKNOWLEDGEMENT 
We  would  like  to  thank  Andy  Bavier  and  Jennifer  Rexford  at 
Princeton  University  for  their  help  with  VINI.  This  material  is