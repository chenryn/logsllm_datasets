have accumulated coins from multiple transactions on the same
address.
A natural question is whether there is also traffic the opposite
way, from Sapling to Sprout. We have found 26 such transactions,
where the output of a Sapling transaction is then an input to a
Sprout shielded transaction. The total value of these transactions
was 226 ZEC, of which 200 ZEC was in just three transactions. The
reason for these transactions could be that the recipients have not
updated their clients yet.
3 TRANSACTION LINKING
We have looked into ways of linking transactions, where we con-
nect hiding and revealing values of shielded transactions. For this
part, we have first removed all the relatively easily identifiable
transactions concerning miners and mining pool payouts using
the methods presented in [9, 20], which resulted in 92,233 hiding
and 107,772 revealing transactions as a hard-core set of remaining
hidden transactions.
If a hiding and a revealing value are exactly the
Heuristic 1.
same, their values are unique as hiding and revealing values in the
observed block range and the hiding transaction is in an earlier
block than the revealing transaction, then they are considered to
be linked.
Using the direct match approach on these remaining transactions
we find that 8,954 revealing shielded transactions out of 107,772
are uniquely matchable considering the entire Zcash blockchain.
××Session 8C: Blockchain VICCS ’19, November 11–15, 2019, London, United Kingdom1815To acquire a false positive rate for the heuristic, we deployed the
following measurement. First we measure the number of unique
transaction output values in the first half of the blockchain (up to
block 236,142). Then we measure how many of these values stay
unique in the second half of the chain. We found, that 14.7% of
these values lose their uniqueness (769,071 out of 5,230,325). This
means that direct value matching heuristic has false positive rate
of just 14.7% over the half-blockchain duration (13 months), and
less over shorter windows of time.
3.1 Direct Value Linking Including the
Transaction Fees
We have also found a handful of interesting transactions, where
both the hiding and revealing value is unique, but the hiding value is
larger by exactly 10,000 Zatoshi, which is the default transaction fee.
This leads us to a likely explanation, that the value was also moved
once as a z-to-z transaction, and then the receiver is revealing it
to the public. Either a user moved the coins to himself between
shielded addresses wrongly assuming that this way he gets more
anonymity, or more plausibly a change of ownership happened for
the coin (and also not gaining anonymity compared to a change of
ownership happening in the plain sight with the t-addresses).
We have investigated and extended the observation above to the
case where instead of a direct value match there is a difference in
value which is a multiple of the default transaction fee of 10,000
Zatoshi. This could correspond to a value making several hops
inside the shielded pool before being revealed, each time losing
10,000 Zatoshis. From this the observer can also conjecture the
number of hops that the value made.
Heuristic 2. If a hiding value is n · 10, 000 Zatoshi (n < 10) larger
than a revealing value, their values are unique as a hiding and re-
vealing value in the observed block range, the hiding transaction is
in an earlier block than the revealing transaction and the transac-
tions have not been linked for any k < n, then they are considered
to be linked.
If we extend the possible linkable values with this technique, the
original 8,954 unique links are increased to 9,919, which is a 10.8%
increase considering only 1 hop. Interestingly the number of unique
links does not increase by much more by increasing the number
of hops (only 400 more links with up to 9 hops2). This seems to
confirm our previous observation that many users think of shielded
pool as a perfect cryptographic anonymizer and think that single
z-z hop inside the shielded pool is sufficient. This expectation of
gained privacy however is not true, if the value passing through
the shielded pool was unique or rare in the entire chain. This also
leads us to an idea of value fingerprinting described in the later
section.
3.2 Subset sum
We have investigated the usefulness of subset sums for linking
shielded transactions by connecting a single hiding transaction to
multiple revealing transactions, or vice versa. The idea is to check
if users hide their value in a single transaction, but reveal it over
2Our maximum allowed since 10 hops would be 100,000 Zatoshi, which is a common
value on its own.
time in multiple payments, or similarly hide their coins in multiple
phases, while revealing it in a single transaction.
First, we had to consider how many numbers can be summed up
overall. If we consider the average number of remaining shielded
transactions, we see that about 2,000 coin revealing and hiding trans-
actions remain for every 10,000 blocks after removing the mining
transactions. The smallest unit of account in Zcash is 1 Zatoshi =
10−8 ZEC. Then any transaction value can be in the range of [1, . . . ,
1014] Zatoshis. If we consider the number of possible combina-
tions of 2,000 inputs or outputs, then it is easy to see that even
(cid:1) = 1.3 · 109 which is well above the birthday bound of all
(cid:0)2000
3
possible values (which is around 107). This means, that some sums
of just 3 values could be just due to a random match. Nevertheless
this could be still of interest since even in case of collisions we can
reason in terms of sizes of anonymity sets (which would still be
relatively small).
The technique did find a handful of interesting matches for 2
sums, especially in cases where one member of the sum is a value
with multiple non-repeating non-zero digits, while the other is
a round value (e.g. consider a transaction with the input value
3.54156325 ZEC and the two outputs with the values 0.40002 ZEC
and 3.14154325 ZEC3). This led to a further analysis idea, which is
explored in the following sub-section.
3.3 Fingerprinted Values
We have found another promising technique for connecting differ-
ent hiding and revealing values that had no direct connections so
far. We will use an approach that we call value fingerprints. In our
definition, the fingerprint of a transaction value is its last 7 digits
in Zatoshis. In particular the last 4 digits are especially stable as
a fingerprint since this value is below the typical transaction fee
of 104 Zatoshis (which is currently below 1 US cent). Thus they
usually have little economic meaning and represent just a remnant
of previous transactions. The distinguishability of a fingerprint
depends on its entropy, which in this case describes how rare the
value is. Intuitively, round values are much more frequent than
random values. It is worth noting that, in a regular economy, the
digits below the fee threshold would typically stay zero. However
this is not the case in the blockchain world, where mining pool pay-
outs are in most cases computed with full precision thus creating
random distribution in the least significant digits and which can
be used for transaction fingerprinting. This is somewhat similar to
the serial numbers on the paper cash banknotes, with a difference
that the precision is not sufficient to keep them unique.
Heuristic 3. If a hiding value matches fingerprints with a revealing
value, no other hiding or revealing value matches fingerprints with
either of them in the observed block range and the hiding transac-
tion is in an earlier block than the revealing transaction, then they
are considered to be linked with the fingerprinting technique.
We consider two fingerprints to match if either 5 of the last 7
digits are the same, or all last 4 digits are equal. Fingerprints where
the last 4 digits are round (e.g. ’0000’, ’1000’) are disregarded.
In the Section 3.1 the heuristics linked transactions where one
of the values in the sum or the difference of the values is exactly
3These are fictitious values to preserve the privacy of the actual transaction.
Session 8C: Blockchain VICCS ’19, November 11–15, 2019, London, United Kingdom181610,000 Zatoshi or a multiple of it. These transaction are linked with
the fingerprint technique as well, since the last 4 digits remain the
same.
3.3.1 Longevity of Fingerprint Uniqueness. One concern with this
method is that the possible fingerprint set is too small, resulting in
no unique links if we consider the entire chain for pairs of hiding
and revealing transactions. In order to check the relative strength
of the linkage, we have investigated with several block ranges how
many unique pairs do we observe. Table 1 describes our results in
terms of block ranges and the number of unique links.
The block range is a sliding window of blocks, where if the range
is N , we consider hiding fingerprints in the first N/2 blocks and we
check for matching revealing fingerprints in the last N/2 blocks.
Once a matching pair is found, it is not considered in next slidings.
The valid transaction set is the same hard-core set as we used for
the case of exact value linking.
Sliding Window Block Range Unique Fingerprint Links
20
100
500
1,000
2,000
4,000
8,000
12,000
16,000
24,000
32,000
64,000
5,448
9,436
9,681
9,733
9,761
9,808
10,335
10,613
10,642
10,363
9,736
6,833
Table 1: Number of unique fingerprint matches through the
entire chain for a given range of blocks.
We will call this feature the longevity of fingerprint uniqueness.
As seen in Table 1 the largest unique matching was on a sliding
window of 16,000 blocks (which is approximately 4 weeks), while
we received similar results between 8,000 and 24,000 blocks as well.
This means that the average longevity of a fingerprint (aka "serial
number") staying unique is approximately between 2-6 weeks. Note
that the database is the same as with the exact value matching. If
we disregard the direct unique value matches (Section 3.1), on the
range of 16,000 blocks, we receive a number of 7,228 unique matches
(Appendix C, Table 8) out of 107,772 total transactions.
Another approach for determining the longevity of fingerprint
uniqueness is examining public transactions to determine how long
the fingerprint of an output stays unique. We have implemented
this approach by calculating the average number of transaction
outputs it takes for a duplicate of a fingerprint to appear consider-
ing all (except mining) transactions in the chain. In this case we
have recorded a fingerprint from an output, traced and saved the
connected chain of transactions where this fingerprint still exists,
and then checked when does the fingerprint appear again from an
unrelated transaction output.
e
c
n
a
t
s
i
D
t
u
p
t
u
O
e
g
a
r
e
v
A
20000
15000
10000
5000
0
‘0000’
Number of Outputs Until Repetition
‘2000’
‘4000’
‘6000’
Last 4 Digits
‘8000’
Figure 2: Average output distance until a fingerprint (last 4
digits of the transaction value) stays unique.
The result of this experiment was that the average number of out-
puts until a fingerprint is unique was 15,979, while the median was
16,788 outputs. Then we have approximated the average number of
shielded outputs in a shielded transaction from the Sapling transac-
tions (where this information is visible) and calculated the average
number of shielded outputs per block, which is 0.95. Then by divid-
ing these two values we get 16,820 blocks for the average and 17,671
blocks for the median value, which is in line with our measure-
ments from Table 1. We have also created a plot, shown in Figure
2, which for every last 4 digit fingerprint represents the average
number of outputs generated by the blockchain during which the
fingerprint stays unique (after we removed all the mining-related
transactions). From this figure we see that a "good fingerprint"
stays unique during generation of about 16000 new outputs by the
blockchain, which is about one month. In Table 1 the decrease in
matches after increasing the window to 24,000 blocks is in line with
our measurements for the longevity of fingerprint uniqueness, as
the likelihood of two random revealing values having the same
fingerprint significantly increases, while the table reports only the
unique matches.
4 THE MODEL FOR THE PROBABILITY OF
FINGERPRINT SURVIVAL
We now present a statistical model which describes the probability
that a fingerprint remains unmodified through several shielded
transactions. More precisely, from the public and shielded trans-
actions data, we will model the hidden walk of the fingerprinted
value through different hops inside the shielded pool (i.e. shielded
transactions) before being revealed in a z-to-t transaction. We’ll
then use this model to compute the survival probability of finger-
prints, i.e. the probability that a value that enters the shielded pool
exits with its fingerprint unmodified. As shown in Figure 2, not
all fingerprints are equally likely and hence we cannot talk about
the survival probability of any fingerprint: we will then refer only
to fingerprints -the good fingerprints- that have an average output
distance greater than 10,000, i.e. fingerprints above the y−axis value
of 10.000 in Figure 2, and we will assume these to be equally likely.
The following model is built accordingly.
Session 8C: Blockchain VICCS ’19, November 11–15, 2019, London, United Kingdom1817P(F P) =
=
n≥0
n≥0
P(Z = n) · P(F P | Z = n)
(cid:32) 
x ∈Z Paths(n+1)
(cid:33)
We denote with P(F P) the overall survival probability of any
good fingerprint going through a path inside the shielded pool
and then exiting with a revealing transaction and we let Z be a
discrete random variable which counts the number of transaction-
hops4 inside the shielded pool over some path. We then denote
with P(Z = n) the probability that a walk inside the shielded pool
goes through exactly n hops before exiting. We further denote with
ZPaths(n + 1) the set of paths of length n + 1 whose first n hops
are inside the shielded pool and the last hop is an exit z-to-t hop.
We can then model the survival probability of good fingerprints as
P(Z = n) ·
P(F P | x) · P(x)
tion of parameter Zlen;
In order to estimate P(F P) under this model, we computed the
following values:
• Zlen: the average number of hops a path goes through inside the
shielded pool before exiting. Assuming each hiding transaction
is independent, we set Zlen to be equal to the ratio between
the number of z-to-z transactions and the number of hiding
transactions. For more details see Appendix A.2.
• P(Z = n): we modeled this probability using a Poisson distribu-
• P(F P | x) for any path x ∈ ZPaths(n + 1) : the probability that
given the path x the fingerprint survives, i.e. the product of the
probabilities that the fingerprint survives in each transaction of