$oldoffice$0*55045061647456688860411218030058*e7e24d163fbd743992d4b8892bf3f2f7*493410dbc832557d3fe1870ace8397e2
MODE: 9720
TYPE: MS Office ⇐ 2003 $0/$1, MD5 + RC4, collider #2
MODE: 9800
TYPE: MS Office ⇐ 2003 SHA1 + RC4, oldoffice$3, oldoffice$4
$oldoffice$3*83328705222323020515404251156288*2855956a165ff6511bc7f4cd77b9e101*941861655e73a09c40f7b1e9dfd0c256ed285acd
MODE: 9810
TYPE: MS Office ⇐ 2003 $3, SHA1 + RC4, collider #1
$oldoffice$3*83328705222323020515404251156288*2855956a165ff6511bc7f4cd77b9e101*941861655e73a09c40f7b1e9dfd0c256ed285acd
MODE: 9820
TYPE: MS Office ⇐ 2003 $3, SHA1 + RC4, collider #2
$oldoffice$3*83328705222323020515404251156288*2855956a165ff6511bc7f4cd77b9e101*941861655e73a09c40f7b1e9dfd0c256ed285acd:b8f63619ca
```
---
### 爆破 md5
```bash
# 16位的MD5
hashcat -m 5100 AC59075B964B0715 -a 3 ?d?d?d?d?d?d
# MD5规则是7位数字
hashcat -m 0 25c3e88f81b4853f2a8faacad4c871b6 -a 3 ?d?d?d?d?d?d?d
# MD5规则是7位小写字母
hashcat -m 0 7a47c6db227df60a6d67245d7d8063f3 -a 3 ?l?l?l?l?l?l?l
# MD5规则是1-8位数字
hashcat -m 0 4488cec2aea535179e085367d8a17d75 -a 3 --increment --increment-min 1 --increment-max 8 ?d?d?d?d?d?d?d?d
# MD5规则是1-8位小写字母+数字
hashcat -m 0 ab65d749cba1656ca11dfa1cc2383102 -a 3 --increment --increment-min 1 --increment-max 8 ?h?h?h?h?h?h?h?h
# MD5规则是 clearlove + 任意2位字符 + 3位纯数字
hashcat -m 0 7276bf625a8c5e65b9e5966bed63bce0 -a 3 clearlove?a?a?d?d?d
# MD5规则是特定字符集：123456abcdf!@+-
hashcat -m 0 8b78ba5089b11326290bc15cf0b9a07d -a 3 -1 123456abcdf!@+- ?1?1?1?1?1
> 注意：这里的-1和?1是数字1，不是字母l
# MD5规则是1-8位,符集集:123456abcdf!@+-
hashcat -m 0 9054fa315ce16f7f0955b4af06d1aa1b -a 3 -1 123456abcdf!@+- --increment --increment-min 1 --increment-max 8 ?1?1?1?1?1?1?1?1
# MD5规则是1-8位数字+大小写字母+可见特殊符号
hashcat -m 0 d37fc9ee39dd45a7717e3e3e9415f65d -a 3 -1 ?d?u?l?s --increment --increment-min 1 --increment-max 8 ?1?1?1?1?1?1?1?1
或者：
hashcat -m 0 d37fc9ee39dd45a7717e3e3e9415f65d -a 3 --increment --increment-min 1 --increment-max 8 ?a?a?a?a?a?a?a?a
# MD5规则是32位的01组合数字
hashcat -m 0 4c753d89d239bb17b8d754ff981c7772 -a 3 -3 01 ?3?3?3?3?3?3?3?3?3?3?3?3?3?3?3?3?3?3?3?3?3?3?3?3?3?3?3?3?3?3?3?3
```
---
### 批量破解
```bash
hashcat -a 0 hash.txt password.txt -o result.txt
```
---
### 爆破 sha256
破解一个原文8个字符的sha256，已知前5个字符。
```
hashcat64 -a 3 --hex-salt -m 1420 b9f5a36134ba3b3b9a41c3ee519899f39fd85f231d9cb2d6c34415fcebe0aa8c:13a03f1f32 --potfile-disable ?b?b?b  -o res3.txt --outfile-format=2 --force
```
---
### 爆破 jwt
> 16500
```bash
echo "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.y3kjst36zujMF4HssVk3Uqxf_3bzumNAvOB9N0_uRV4" > hash.txt
echo "secret123" > pass1.txt
hashcat -m 16500 hash.txt pass1.txt
```
---
### 爆破 BCrypt
> 3200
```bash
echo '$2a$05$LhayLxezLhK1LhWvKxCyLOj0j1u.Kj0jZ0pEmm134uzrQlFvQJLF6' > hash.txt
echo "hashcat" > pass1.txt
hashcat -m 3200 hash.txt pass1.txt
```
---
## 更多实验
### 阿里云按量-抢占式实例-NVIDIA T4-跑 Hashcat
**注意点**
- 抢占式实例一次只能买1小时,切记1小时
- 实例创建完后需要装对应的 NVIDIA 驱动
- -f 测试的跑分速度很完美,但实际跑的时候速度是达不到的
**优点**
- 相对便宜,实际用起来一小时不到2元,感觉像在用 vultr
- 性能强
**过程**
- 付费模式选择 `抢占式实例`
- 实例类型选择 `异构计算 GPU/FPGA/NPU`
- 分类选择 `GPU 计算型`
CPU和内存可以不用考虑,主要是选个好的 GPU,这里可以看到有 NVIDIA T4 和  NVIDIA P4 两种选择
这里选择 T4 便宜一点
镜像选择 `Alibaba Cloud Linux` 这个兼容 centos,用起来没啥问题
下一步网络选择
建议使用按固定带宽收费,你跑 hashcat 其实用不了多少流量, `带宽峰值` 直接拉到 100M
创建完实例后,SSH连接,这里略
安装 hashcat,如果嫌速度慢,可以自己通过 lrzsz 的方式传上去
```bash
mkdir /pentest && cd $_
wget https://hashcat.net/files/hashcat-6.1.1.7z
7z x hashcat-6.1.1.7z && rm -rf hashcat-6.1.1.7z
cd hashcat-6.1.1 && chmod +x hashcat.bin && cp hashcat.bin hashcat
ln -s /pentest/hashcat-6.1.1/hashcat /usr/sbin/hashcat
```
安装显卡驱动
去 NVDIA driver search page 查看支持显卡的驱动最新版本及下载，下载之后是 .run 后缀
安装时一路回车即可,装完之后输入 nvidia-smi
```bash
wget https://cn.download.nvidia.com/tesla/450.80.02/NVIDIA-Linux-x86_64-450.80.02.run
sh NVIDIA-Linux-x86_64-450.80.02.run  -no-x-check -no-nouveau-check -no-opengl-files
nvidia-smi
```
然后就可以愉快的跑 hashcat 了
```bash
hashcat -b --force
```
---
### hashtopolis分布式服务
项目地址 : https://github.com/hashtopolis/server
#### Server
> Ubuntu18.04
```bash
apt update
apt install -y mysql-server
apt install -y apache2
apt install -y libapache2-mod-php php-mysql php php-gd php-pear php-curl
apt install -y git unzip lrzsz
mysql_secure_installation
mysql -u root
CREATE DATABASE hashtopolis;
CREATE USER 'hashtopolis'@'localhost' IDENTIFIED BY 'hashtopolis';
GRANT ALL PRIVILEGES ON hashtopolis.* TO 'hashtopolis'@'localhost';
FLUSH PRIVILEGES;
EXIT;
cd /var/www
git clone https://github.com/s3inlc/hashtopolis
cd hashtopolis
```
```bash
nano /etc/apache2/sites-available/000-default.conf
DocumentRoot /var/www/hashtopolis/src
    AllowOverride ALL
```
```bash
nano /etc/php/7.2/apache2/php.ini
memory_limit = 512M
upload_max_filesize = 500M
post_max_size = 500M
```
```bash
chown -R www-data:www-data /var/www/hashtopolis
service apache2 restart
```
访问 127.0.0.1
输入数据库配置
```
地址 localhost
账号 hashtopolis
密码 hashtopolis
库   hashtopolis
```
创建账号
```
test
PI:EMAIL
test
test
```
#### Agent
> Debian
下载服务器端的 hashtopolis.zip
服务端添加一个新的 voucher
客户端运行 hashtopolis
```
apt update
apt install -y python3-pip
python3 -m pip install psutil requests
python3 hashtopolis.zip
```
#### 使用
- https://www.youtube.com/watch?v=A1QrUVy7UZ0