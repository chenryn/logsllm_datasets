#BHUSA @BlackHatEvents
### DNSSEC Downgrade Attacks
**Presenters:**
- Haya Shulman
- Elias Heftrig
- Michael Waidner

**Information Classification: General**

### Why DNSSEC Downgrade Attacks?
DNS is a critical component of the Internet, involved in nearly all online transactions. Many security mechanisms rely on the integrity and authenticity of DNS, including:
- Determining which IP host to send packets to
- Password recovery
- ACME/Domain Validation for obtaining X.509/HTTPS Certificates
- Authorization of X.509 CAs and authentication of certificates
- SSH host key fingerprints, IPSec Keys, and more

DNSSEC is the primary solution for ensuring the security of DNS records. While downgrade attacks on TLS are well-known, DNSSEC downgrade attacks have received less attention until now.

### Agenda
1. **DNS(SEC) Refresher**
2. **DNSSEC Downgrade Attacks**
3. **Attacks to Weaken Security**
4. **Attacks to Break Security**
5. **Recommendations**

### DNS Resolution – Common Setup
- **Stub Resolver**: Initiates the DNS query.
- **Forwarder**: Forwards the query to a recursive resolver.
- **Recursive Resolver**: Resolves the query by contacting authoritative name servers.
- **Authoritative Name Server**: Provides the final answer.

#### Example Query Flow:
1. Application calls `gethostbyname("www.bank.ing.")`
2. Stub Resolver sends `www.bank.ing. IN A?` to the Forwarder.
3. Forwarder forwards the query to the Recursive Resolver.
4. Recursive Resolver queries the Authoritative Name Server for `bank.ing. 3600 IN NS ns.bank.ing.`

### DNS Poisoning
- **Attack on DNS Record Authenticity**:
  - An attacker can inject a false response, such as `www.bank.ing. 2600 IN A 6.6.6.6`, leading the application to connect to a malicious server.

### Secure DNS in Practice
- **DoH/DoT (DNS over HTTPS/TLS)**: Provides secure communication between the stub resolver and the recursive resolver.
- **DoU + DNSSEC**: Ensures data origin authenticity and integrity, but session maintenance is too expensive for recursive-to-authoritative communication.

### DNSSEC
- **Protection Goals**:
  - Data origin authenticity
  - Integrity of data
  - Not confidentiality

- **Basic Principle**:
  - Protection of DNS data using cryptographic signatures.
  - Trust in public keys delegated via a PKI.
  - Built into and aligned with the DNS hierarchy.

### DNSSEC Chain of Trust
- **RRSIG Signature Records**: Cover record sets (RRset) with the same name, type, and class.
- **DNSKEY Records**: Carry public key material for verification.
- **DS "Delegation Signer" Records**: Carry a digest of the child zone's DNSKEY, similar to certificates in other PKIs.

### Protection of (Non-)Existence
- **Authenticated Denial of Existence**: Uses signed NSEC-type records to mark empty intervals in the name space and specify record types present at interval boundaries.
- **DNSSEC Record Presence Requirement for Signature Algorithms**:
  - DS → DNSKEY → RRSIGs on all zone data
  - If there exists a DNSKEY with algorithm \(a\), then there must exist RRSIGs with algorithm \(a\) for all records in the zone.

### DNSSEC Signature Algorithms
| Number | Mnemonics | DNSSEC Signing | DNSSEC Validation |
|--------|-----------|----------------|-------------------|
| 1      | RSAMD5    | MUST NOT       | MUST NOT          |
| 3      | DSA       | MUST NOT       | MUST NOT          |
| 5      | RSASHA1   | NOT RECOMMENDED| MUST              |
| 6      | DSA-NSEC3-SHA1 | MUST NOT | MUST NOT          |
| 7      | RSASHA1-NSEC3-SHA1 | NOT RECOMMENDED | MUST |
| 8      | RSASHA256 | MUST           | MUST              |
| 10     | RSASHA512 | NOT RECOMMENDED| MUST              |
| 12     | ECC-GOST  | MUST NOT       | MAY               |
| 13     | ECDSAP256SHA256 | MUST | MUST              |
| 14     | ECDSAP384SHA384 | MAY | RECOMMENDED      |
| 15     | ED25519   | RECOMMENDED    | RECOMMENDED       |
| 16     | ED448     | MAY            | RECOMMENDED       |
| 253    | PRIVATE   | (MAY)          | (MAY)             |
| 254    | PRIVATE (OID) | (MAY) | (MAY)             |

### DNSSEC DS Digest Types
| Number | Mnemonics | DNSSEC Delegation | DNSSEC Validation |
|--------|-----------|--------------------|-------------------|
| 1      | SHA-1     | MUST NOT           | MUST              |
| 2      | SHA-256   | MUST               | MUST              |
| 3      | GOST R 34.11-94 | MUST NOT | MAY               |
| 4      | SHA-384   | MAY                | RECOMMENDED       |

### Investigated Domains
- **Signed Domains**:
  - 1373 Top-Level Domains (of 1487)
  - 20083 Tranco Domains (of Top 500k)
  - Excluding approximately 9k domains without a validation path from the DNS root

- **Distribution**:
  - **Signed TLDs**: 92.33% Signed, 7.77% Insecure
  - **Tranco Top 500k**: 4.02% Signed, 95.98% Insecure

### Investigated Resolvers
- **Resolvers**:
  - 9 resolvers in the lab (Bind, Unbound, Knot, PowerDNS; 5 Windows Server Versions)
  - 8 popular open resolver services (Google, Cloudflare, etc.)
  - 15k openly accessible resolvers from a port scan on the IPv4 address space (approximately 3k validating resolvers)

- **Distribution**:
  - **Validating Open Resolvers**: 79.91% Validate, 20.09% Insecure

### Downgrade Attacks on DNSSEC
- **Attacker Model**:
  - On-path attacker positioned between the resolver and the authoritative server.
  - Can send, read, modify, duplicate, delay, or suppress messages.
  - Does not know cryptographic secrets.

- **Further Assumptions**:
  - Attacker can trigger resolution by the resolver.
  - Empty caches.

### Attacks to Weaken Security
- **Goal**:
  - Make the resolver use the weakest possible validation path.
  - Attack the weakest link in the chain of trust.
  - Roughly conforms to downgrading to "Export" in SSL.

- **Examples**:
  - Downgrading to a weaker DS digest.
  - Downgrading to a weaker signature.

### The Case of SHA-1 in DNSSEC
- **Note on SHA-1**:
  - Considered "broken" in terms of cryptanalysis.
  - Practical attacks on DNSSEC are expected in the near future.
  - Non-DNSSEC attacks have been demonstrated since 2019.

- **SHA-1 in DNSSEC**:
  - Being phased out since about 2019 but still widely used.
  - Algorithms 5 and 7 ("NOT RECOMMENDED").
  - Digest type 1 ("MUST NOT").
  - Resolvers must still support it, and virtually all do.

- **Usage Statistics**:
  - **TLDs**:
    - Any: 8.64% (DS), 4.10% (DNSKEY)
    - Exclusively: 0.22% (DS), 3.30% (DNSKEY)
  - **Tranco**:
    - Any: 11.33% (DS), 6.22% (DNSKEY)
    - Exclusively: 3.38% (DS), 5.81% (DNSKEY)

#BHUSA @BlackHatEvents
**Information Classification: General**