Halo:High-AssuranceLocateforDistributedHashTablesApuKapadiaInstituteforSecurityTechnologyStudiesDartmouthCollegeHanover,NH03755,USAakapadia@cs.dartmouth.eduNikosTriandopoulosDepartmentofComputerScienceUniversityofAarhus8200AarhusN,Denmarknikos@daimi.au.dkAbstractWestudytheproblemofreliablysearchingforre-sourcesinuntrustedpeer-to-peernetworks,whereasigniﬁcantportionoftheparticipatingnetworknodesmayactmaliciouslytosubvertthesearchprocess.WepresentanewmethodcalledHaloforperformingre-dundantsearchesoveradistributedhashtable(DHT)structuretoachievehighintegrityandavailabilitylevelswithoutaffectingthestorageandcommunicationcom-plexitiesoftheunderlyingDHT.Otherschemesforre-dundantsearcheshaveproposednewormodiﬁedDHTswithincreasedstoragerequirementsatnodes,requiringmodiﬁcationsatallnodesinthenetwork.Incontrast,Haloaimstoserveasamiddlewarecomponent,mak-ing“black-box”callsoftheunderlyingprimitivesearchoperationtoeventuallyprovideanewcompositesearchoperationofhigherassurance.Weapplythisconcepttothepopularandwell-studiedDHTChord,anddemon-stratetheefﬁciencyandsecurityofourapproachthoughanalyticalmodelingandsimulation-basedanalysis.Forexample,weshowthatfor12%maliciousnodesinthenetwork,aregularChordoperationfails50–60%ofthetime.Incontrast,Haloreducesthisfailurerateto1%.Weshowhowourschemelendsitselftoarecursiveversionthatcantolerate22%maliciousnodeswiththesamelevelofsuccess,whileregularChordfails70–80%ofthetime.1IntroductionPeer-to-peer(p2p)storagenetworkscurrentlycon-stitutethemostdevelopedcomputingarchitectureforimplementinglarge-scaledistributeddata-managementsystems.Thesenetworksrealizeadecentralizedcom-putinginfrastructurefordispersingdataandcomput-ingresourcesamongalargenumberofgeographically-distributedmachines.PAST[8],CAN[25],CFS[5],PIER[17],Kademlia[21],andOpenDHT[27]com-prisearepresentative(andcertainlynotexhaustive)setofp2papplications.Conceptually,inanyp2pnetworkaresource(suchasaﬁle)ismappedtoauniqueparticipat-ingpeer,whichisresponsibleforstoringthatresource.Thecorefunctionalityofanyp2pnetworkamountstoefﬁcientlylocatingresourcesinthep2pnetwork.Adis-tributedhashtable(DHT)isadistributeddatastructurethatimplementsthisveryfunctionality:givenatargetresourceidentiﬁer,thelocateoperationreturnsaniden-tiﬁer(typically,theIPaddress)ofthenoderesponsibleforthetargetresource.Locatingobjectsusuallyinvolvesadistributedsearchbetweenasmallsubsetofparticipat-ingpeersthatshareresource-allocation(orrouting)in-formation.Thusfar,researchershavestudiedmanyas-pectsofthissearchingfunctionality—efﬁciency,search-structuremaintainability,faulttolerance,range-searchextensions,andloadbalancingtonameafew.Reliablesearchinginthefaceofattack.Inthispa-per,westudysecureresourcelocationinp2pnetworks,tryingtoprovideapracticalsolutiontothefundamentalsecurityproblemrelatedtosearchingoverp2pnetworks:howcanonereliablylocateresourcesinthepresenceofmaliciouscolludingnetworknodes?Weassumearan-domByzantinemodelwherearandomlyselectedsub-setofnodescanperformarbitrarilymaliciousbehaviorwhileparticipatinginthedistributedsearchprocess.Forinstance,acoalitionofmaliciousnodescouldeasilyat-tempttoredirectqueriestoaprivatep2psubnetworkthatrunsinparallelwithanaimtodegradetheperformanceorsimplyperformadenial-of-serviceattack.Moreover,maliciousnodesaremotivatedtosubvertalocateopera-tion,byreportingafalsemalicious“owner”ofaﬁle(orotherresource),ratherthanitstrueowner,thusdrasti-callyaffectingthecorestoragefunctionalityofthesys-tem.Inparticular,suchbehaviornotonlyaffectstheintegrityofdata,sinceamaliciousownercanfalsifydataduringthereportingphase,butalsotheavailabil-ityofdata,sincethefalseownercanalsosubvertthestoragephasebysimplydiscardingthereceivednewﬁleordisallowingfuturedataretrievals(i.e.,aﬁleisprac-tically“invisible”sinceitiserroneouslystoredinthewrongnetworknode).Ingeneral,thelocationprocessinap2psystemdeﬁnesan“ownership”relationbetweensharedresourcesandparticipatingnodes.Bysubvert-ingthisprocess,therefore,theadversarycanperformarichsetofattacksontheintegrityofthep2psystem.Forinstance,withmaliciousresourcelocationsthead-versarycanmanagetoalterthestructureoftheoverlaynetworkandaffectthesystem’sconsistency,fairness,orload-balance.Anysecuresearchingmethodshouldnotonlydetectanypossibleattack,butmorecrucially,lo-cateresources,effectivelytoleratingadversarialbehav-iorduringthesearchprocess.Whileexistingcrypto-graphicschemes[34]maybeusedtochecktheintegrityofdata,wefocusontheorthogonalproblemofactuallylocatingtherealdata,whoseintegritymaythenbeveri-ﬁedcryptographically.Solution:redundantsearchestolocatetarget.Fol-lowinganalgorithmicapproach,wepresentanefﬁcienttechniqueforsecuresearchinginp2pnetworksthatex-ploitsthepowerofperformingasmallnumberofcare-fullyselectedredundantlocateoperations.ThemainchallengewithredundantsearchesisthatduetotheinherentnatureofroutingwithinDHTs,multiplere-dundantsearchesconvergetovisitingthesamesmallsetofnodes“close”tothetargetnode,therebymak-ingtheredundantsearchesineffective—sincetheymayalloverlapwiththesamemaliciousnode(s).Tocir-cumventthislimitation,muchoftheexistingresearch(suchaswithCyclone[1]andSalsa[22])hasfocusedon“disentangling”thesesearchesbyeithermodifyingtheChord[33]datastructureorbyproposingentirelynewDHTstoperformmultipledisjointredundantsearches.Unfortunatelythesenewschemescomeatthecostofincreasedstorageateachnodeinthenetwork.Theproblemwithincreasedstoragegoesbeyondactualstor-ageconstraints—maintainingup-to-dateroutinginfor-mationtomorenodesincreasesthecomplexityofmain-tainingtheDHT.Furthermore,theseschemesrequireei-thercompletelynewDHTsormodiﬁcationsatallthenodeswithinthenetwork,andthereforedonotprovideaneasily-applicablesecuritysolutionfortheplethoraofexistingandfullydevelopedDHTs.Ideally,disjointredundantsearchesshouldbeimple-mentedinaDHTwithoutchanginganystructuralchar-acteristicsoroperationalmodesoftheDHT,oraffect-ingitsperformanceguaranteesbeyondtheobviousover-headsduetoredundancyinthesearches.WefollowthisapproachandprovideanovelschemetocreatedisjointredundantsearchesinaDHTbymodifyingonlythecoresearchalgorithmoftheDHT(essentiallybyrepeatedlyusingit).Theunderlyingideaissimple:wemaketheobservationthatthetargetofalocateoperationexistsinseveralroutingtablesofnodesdistributedintheDHT.Wecallthesenodes“knuckles.”1Insteadofsearchingfortheactualtargetalongseveralpaths,wesearchfortheknucklestogetthecorrectanswerforalocateop-eration.Bydoingso,redundantsearchesaredisentan-gledwithoutanymodiﬁcationtotheunderlyingDHT—thestoragerequirementsremainthesame,andinfact,already-deployednodesinaexistinglivep2pnetworkneednomodiﬁcations.Nodescanchoosetomakeuseofouralgorithmtoperformredundantsearcheswhileusingtherestofthenetworkasa“blackbox.”WecallourtechniqueHigh-AssuranceLOcate(Halo).WeapplyHaloforsecuringresourcelocationinChord,whichrepresentsperhapsthemostpopularclassofDHTs.WetheoreticallyanalyzeHaloforChord,provingitscorrectness,efﬁciencyandpracticality.Wepresentasimulation-basedevaluationofHalo,conﬁrm-ingitsperformanceanalysis.WeshowthatHaloisabletotolerateupto12%maliciousnodesinanetworkof10,000nodes.Themaliciousnodesareabletosubvertonly1%ofsearches.Incontrast,aregularlocateoper-ationinChordfails50–60%ofthetimewith12%col-ludingnodes.WealsoapplyHalorecursively(toﬁndtheknucklesoftheknuckles),whichisabletotoler-ate22%colludingnodeswithonly1%failedsearches,whereasChordfails70–80%ofthetime.Defendingagainsthigherratesofcollusionisimpractical,mainlybecauseatthoseratesthetrueownerofanobjectisma-liciouswithahighprobability,signalingmoreendemicproblemswiththenetwork.Replicasvs.redundantsearches.DHTsprovideba-sicput-getfunctionalityforstoringandretrievingdataobjectsinap2pnetwork.Itwouldbereasonabletospeculatethatcertaindata-integrityguaranteescanbeachievedbyusingredundancyattheput-getlevelofthep2psystem.Forinstance,adataﬁlecanintentionallybestoredinasmallsetof“randomly”selectednodes,withthehopethatatleastonecopycanberetrievedcorrectly,1InChord,anode’sroutingtablecontainsforwardpointerstoothernodes,whicharecalledﬁngers.evenunderadversarialnetworkbehavior[15].Unfortu-nately,thisapproachisexpensiveinpractice;inaddi-tiontodownloadingmultiplecopiesofpotentiallylargeﬁles,theoperationsputandgetarenotatomic:theyarebothrealizedbytheunderlyingandmostprimitivelocateoperation,andarethemselvessubjecttoredirec-tionattacks.Asaresultalargenumberofreplicasareneededtoguaranteeintegrity,furtherincreasingthestor-agedemandsofthenetwork.Securingthelocateoper-ation,ontheotherhand,aimstosolvetheproblematthelowestlevelofthehierarchy.Infact,asecurelo-cateoperationcansigniﬁcantlyreducetheoverheadsofahigher-levelreplica-basedsolution.Moreover,locateoperationsconstitutethemainprimitiveforimplement-ingmanyotherimportantoperationsinaDHT,likeup-datingroutinginformation,joiningandleavingthenet-work,andsoon.Papercontributions.Ourcontributionscanbesum-marizedasfollows:1.WepresentanovelalgorithmicapproachcalledHaloforperforminghigh-assurancelocateforre-sourcesinp2pnetworksusingredundancy.2.Bydesign,Halomakesuseoftheunderlyingnet-workasa“blackbox,”andthusdoesnotincreasethestoragerequirementsfornodes,andalsomakesoursolutioneasytodeployorapply.3.Byprovidingbothanalyticalmodelsandsimulation-basedresults,wedemonstratetheeffectivenessandpracticalityofHaloinChord:afewredundantsearchessufﬁcetosigniﬁcantlyimprovethereliabilityofChord’sfunctionality.Paperstructure.AfterpreliminariesinSection2,wepresentourHaloconstructionforChordandproveitscorrectnessinSection3.InSection4,wepresentananalyticalmodelofHaloandinSection5wepresentanexperimentalevaluation.WepresentanoverviewofrelatedworkinSection6andconcludeinSection7.TheAppendixincludesadditionalsimulationgraphs.2PreliminariesWestartbydescribingbasicconceptsandintroducingsomeusefulterminologyforoursolution.2.1DistributedHashTables(DHTs)Anoverlaypeer-to-peer(p2p)networkisanetworkstructureimposedonasubsetofmachinesfromanun-derlyinglargercomputernetwork.Themostelementaryp2pnetworkstructureshavebeendesignedforsupport-ingthefundamental(andnecessaryforanypracticalap-plication)put-getfunctionalitydeﬁnedoverkeyeddataobjects.Distributedhashtables(DHTs)isaclassofnetworkstructuresandassociatedsearchprotocolscom-prisingthesefundamentaloperationsforstoringinap2pnetwork(atsomenetworknode)anobjectxunderkeykxandlaterretrievingfromthenetwork(fromthesamenetworknode)objectxusingkeykx.Anypairofma-chinescancommunicatedirectlyifoneofthemisgiventhenetworkaddressoftheothermachine.Duetoscal-abilityissues,completenetworkrepresentationateachparticipatingpeerispracticallyprohibited.Instead,net-worknodestypicallykeepminimalstructural(routing)informationaboutthep2pnetworkbystoringpointerstoasmallsetofcarefullyselectednetworknodes.Ac-cordingly,theoverlaynetworkisdeﬁnedbyagraphthatspeciﬁeswhichmachinesarelinkedbythesepointers,anditshouldprovidealgorithmsforstoringandlocatingdataofinterestintheoverlaynetwork.MuchofthefunctionalityandtheprotocolpropertiesofanyDHTdependontwoimportantfeatures:(1)thenetworkstructure,i.e.,theunderlyinggraphrepresent-ingdirectnetwork-connectivitycapabilities,and(2)themappingofdataobjectstonetworknodes,i.e.,asys-tematicwaywithwhichresourcesareassociatedwithnetworknodesforstorageinthep2psystem.Torigor-ouslydeﬁnethesetwoconceptsandfacilitatetheimple-mentationofsuchanetwork,bothconceptsaredeﬁnedbyusingalarge,totallyorderedlogicalIDspace.Bothnetworknodesanddataresourcesareﬁrstassigned(us-ingapossiblyprobabilisticprocedure)alogicalIDinthisspace;then,networkconnectivityandresourceas-sociationaredeterministicallydeﬁnedbyfunctionsop-eratingandrangingoverthislogicalIDspace.Usingthesefunctions,onecanthendeﬁneadeterministicpro-ceduremappingdataresourcestonetworknodesstoringtheseresources.Wecallthisoperationlocate:inpartic-ular,givenaresourceidentiﬁerx,operationlocate(x)returnsthenetworknodeidentiﬁerthatxismappedto.Wesaythatlocate(x)ownsresourcex.Moreformally,letq=2mbethesizeofthelog-icalIDspaceU,whichcanbeconsideredidenticaltothesetZq={0,1,2,...,q−1},wherethesuccessorrelationiswelldeﬁnedusingmodulararithmetic.LetNandRdenotetheﬁnitesetsofidentiﬁersofthepos-siblenetwork’snodesinthep2psystemand,respec-tively,ofthedataresourcestobeusedinthesystem(i.e.,dataobjectsthatcanbestoredinthesystem).Typ-ically,NcanbethesetofIPaddressesandRanysetofkeysunderwhichobjectsarestoredinthesystem.LetN={v1,v2,...,vn}⊆Nbethesetofexistingnodesinthesystem.Then,anyDHTstructurebuiltforNdeﬁnesfunctionsf,g,binaryrelationsB,Eandaprocedurelocatesuchthat:1.f:N→UisafunctionmappingnetworknodestoelementsofthelogicalIDspace.2.g:R→UisafunctionmappingdataresourcestoelementsofthelogicalIDspace.3.BisabinaryrelationoverUdenotingresourceownership.Thatis,(g(r),f(v))∈Bifandonlyifresourcerbelongsinnodev∈N(equivalently,nodevownsresourcer).Bydeﬁnition,werequirethatanyresourcebelongstoauniquenode.Notethatrisnotnecessarilyadataobjectidentiﬁer(e.g.,ﬁlename),butanyabstractresourceidentiﬁerinR(e.g.,identifyingacomputationalresource).4.EisabinaryrelationoverUdenotingdirectrout-ingcapabilitiesinthep2psystemsuchthatdirectedgraphGN=(V,E)deﬁnestheunderlyingoverlaynetworkofthep2psystem.Thatis,V={u∈U:u=f(vi),vi∈N}and(f(vi),f(vj))∈Eifandonlyifvi,vj∈Nandnodevicontainsroutinginformationaboutnodevj.5.locateisa(distributed)procedurethatoninputaresourcerandanynodevi∈N,using(partiallyonly)graphG,returnstheuniqueownervr∈Nofr,i.e.,nodevrsuchthat(g(r),f(vr))∈B.2.2ChordWenowinstantiatetheaboveterminologyforChord’sDHT[33].ThelogicalspaceisexactlyZq,withq=2160,alargesetofintegersconceptuallyor-ganizedinaring,i.e.,inacircularfashionwheresuc-cessorlogicalIDsappearclockwiseintheChordring.(Inparticular,thesuccessorof2160−1is0.)Bothfunc-tionsfandgaresettobetheSHA-1hashfunction,thatis,anefﬁcientrandomizedfunctionthatisalsobelievedtobeﬁrstandsecondpre-imageresistant:itiscompu-tationallyhard,givenx,tocomeupwithysatisfyingx=f(y)andalso,giveny,tocomeupwithz%=ysat-isfyingf(y)=f(z).2Thus,nnetworknodesidentiﬁedbytheirIPaddresses,andallpossibleresourcesidenti-ﬁedwithuniquekeys,aremappedintotheChordringinanunpredictable,uniformlyrandom,butconsistent,fashion.3RelationBisdeﬁnedusingthesuccessorrelationinthelogicalring:nodeuthathashestopositionzownsallresourcesrthathashtopositionsintheringforwhichzistheimmediatesuccessor(intheclockwisedirec-tion).Inotherwords,whenmappedtothering,thennetworknodespartitiontheringtonchords;allre-sourcesmappedtoonesuchchordareownedbythenodemappedtotheclockwise-largestendpointofthischord.TheunderlyingconnectivitygraphGisdeﬁnedbyhavingeachnodeinthenetworkbeing“connectedwith”(i.e.,knowingdirectroutinginformationabout)O(logn)othernetworknodes,calledﬁngernodes.Thisexactsetofroutinginformationfornetworknodevmappedtopositionu∈Zqisdeﬁnedasfollows(seeFigure1(a)).First,inadeterministicway,m=logqﬁngerpositionsintheringareassociatedwithu:thesearedeﬁnedbyconsideringsuccessorpositionsofuus-ingoffsetsofexponentiallygrowingsize,thatis,posi-tionsu+20,u+21,...,u+2m−1,m=logq.Then,thenetworknodevatpositionustoresinitsroutingta-bletheIPaddressesofthenetworknodesowningthesemﬁngerpositionsinthering;intotal,O(logn)distinctIPaddressesarestored,whichactuallycorrespondtotheownersoftheO(logn)“mostsigniﬁcant”positions(i.e.,thepositionsthatcorrespondtothelongestexpo-nentialoffsets).4Thisexactsetofﬁngernodesofvisarandomvariablethatdependsontheoriginalplacementofnodesonthelogicalring.Additionally,eachnodevknowsitsimmediatesuccessornodev"inthering(anditcanalsoknowitspredecessornode).Finally,giventhisstructure,thelocateoperationisimplementedbyiteratively,orrecursively,usingthelo-calroutinginformationforlocatingthebestestimateoftheownerofthesearchedkey,i.e.,theclosestﬁngertothedestination(seeFigure1(b)).Thatis,startingfromanyinitialnodeinthep2pnetwork,whennodevisqueriedforIDkduringthelocationsearchprocess,nodevdirectsthesearchtoitsﬁngernodeforwhichk2Theseproperties,anddespitetherecentattacks,makeSHA-1thebestcandidateforimplementingtherandomoraclemodel.3Thismeansthataparticipatingpeerhaspracticallynocontrolinchoosingitspositioninthering,animportantproperty,aswewillsee.4Infact,routingtablesstoreextrainformationthatessentiallymapsO(logn)continuousranges(chords)inthelogicalspaceZqtoIPaddresses.v1v2v3v4v6v5v7v10+1+2+4+8+16v1 + 20: v2v1 + 21: v2v1 + 22: v3v1 + 23: v4v1 + 24: v6Finger Tablev8v9v1v2v3v4v6v5kv7v10v8v9locate(k)predecessor(k)successor(k)(a)(b)Figure1.Chord’sunderlyinggraphandlocationsearchoperation.(a)EachnodemaintainsO(logn)“ﬁngers”toothernodes,wherenisthetotalnumberofnodesinthenetworkandthedistancebetweenanodeanditsﬁngersincreasesexponentially.(b)Iteratively,thelocateoperationlocateforkeykroutesthesearchtothecurrentlyclosestﬁngeruntiltheimmediatepredecessornetworknodeofkisreached.Thepredecessorreturnsitssuccessorasthesuccessornetworknodeforkeyk,thatis,theownerofk.Becauseoftheexponentialdistancesbetweenﬁngers,atargetislocatedinO(logn)steps.is“clockwise-closest”fromtheﬁngernode;thisﬁngercanbeeasilyfoundbyaccessingthelocalroutinginfor-mationofv.Sinceﬁngersareorganizedinexponentialsteps,eachiterationofthesearchwouldonaveragere-ducethesearchspacebyatleastafactorof0.5.Thus,thelocateoperationtakesonaverageO(logn)stepstocorrectlyﬁndtheownerofthesearchedkey.NotethatintherealimplementationofChord,thelocateoperationonasearchkeyactuallyreturnsthepredecessornodevofk,andtherealownerv"ofkissimplyfoundbyexe-cutingthesimpleﬁndsuccessoroperationonv.Forsimplicityweoftenrefertonodevmappedtopositionuintheringassimplynodeu;weusethiscon-ventionalsofortarget,predecessorandsuccessornodes.2.3ThreatmodelSecuresearchinginp2pnetworksisafundamentalconcern,exactlybecausebydeﬁnitionnocentralad-ministrationprocedureorcontrolmechanismisimple-mentedtogovernthesystemfunctionalityandverifyitsintegrity.Ensuringtrustworthysystemfunctionality,therefore,heavilydependsonreliableresourcesearch-ing.Becauseoftheirhighlydistributivenature,p2pnetworkscorrespondtoaninherentlypowerfulthreatmodel:anyparticipatingnetworknodeoranycoalitionofnodescaneasilyexhibitamaliciousbehaviorandthusnotconformwiththedistributedprotocoldesignedforimplementingthelocateoperation.Trivially,anodethatisaccessedduringthelocationsearchprocesscaneffec-tivelyfailthesearch,byeitherstoppingormaliciouslyredirectingthesearchtoanarbitraryoralsomaliciousnode.Tocapturetheabovethreat,weconsiderthatacon-stantfractioncofthennetworknodesinthep2psys-temarecontrolledbyanadversaryandcanthusactma-liciously.WeadopttherandomByzantineadversarialmodel.Eachnetworknodeparticipatesinthecoali-tionofmaliciousnodeswithindependentprobabilityc,0d"1,thenp(k")isindeedthei-thknuckleofk(becausep(k)fallsbetweenp(k")andp(k")+siintheclockwisedirection,makings(k)thei-thﬁngerofkvlocate(k)s(k)knuckle2knuckle1finger2k2k1finger1locate(k1)locate(k2)Figure2.Thekeykforthelocateoperationisusedtocomputeknuckleskeysk1andk2.Nodevinitiatestwoseparatelocateoperationsfork1andk2startingfromﬁngersﬁnger1andﬁnger2.Theseredundantsearcheslocatetheknucklesknuckle1andknuckle2,whoseroutingtablescontainthesuccessornodeandowners(k)ofk.p(k");seeFigure3(a))andourheuristiciscorrect.Otherwise,wehaveCaseI.2,andtheheuristic(ini-tially)fails(becausep(k")isbetweenp(k")+siandkintheclockwisedirection,makingthei-thﬁngerofp(k")somenodeotherthans(k);seeFigure3(b)).But,atstep5ofthealgorithm,weexplicitlyperformthistestandidentifywhetherwehaveasuccessfulpredictionforthei-thknuckle;indeed,wefailwheneverd1≤d"1,inwhichcasethei-thﬁngertiofp(k")iscertainlynottheownerofk,fallingclockwise-beforethek,whichcanbetestedasinstep5.Insteps6and7,however,ouralgorithmtriestorec-tifythisfalseprediction,bytryingthei-thﬁngerofthesuccessors(k")ofk".Thisnewpredictionturnsouttobecorrectwheneverd2>d"2(CaseII.1).Thisisbe-cause,ifd2>d"2thens(k")+siisbetweenkands(k)intheclockwisedirectionOtherwise,ifd2≤d"2,wehaveCaseII.2,andouri-knucklepredictionisincorrect.But,asweprovenext,thisisaninherentpropertyoftheunderlyinggraphofChord,notofouralgorithm.Proposition1.Ifd1≤d"1andd2≤d"2,thentheredoesnotexistani-thknuckleforthetargetnodes(k).Thisconditionariseswithprobability0.25.Proof.(Sketch.)Thei-thﬁngersofnodesp(k")ands(k")arerespectivelyp(k)oranodeataclockwise-earlierpositionintheringandanodeataclockwise-laterpositionthans(k).Sincep(k")ands(k")areadja-centnodes,therecannotexistanodewhosei-thﬁngeriss(k),sincethatnodemustbebetweenp(k")ands(k").Sincenodesareuniformlydistributed(andassum-ingthatallfournodesaredistinct),theprobabilitythatCaseI.2arises(d1≤d"1)is0.5(comparingthelengthsoftworandomlychosensegments).ApplyingthesameargumenttoCaseII.1,wehavethattheprobabilitythatbothcasesarisesimultaneouslyis0.25.CasesI.2andII.1areindependentbecausethedistancesd1,d"1,d2,d"2areindependentandidenticallydistributeduniformran-domvariables.Therefore,if,duringthei-thiterationandfortheChordp2pnetwork,d1≤d"1andd2≤d"2,thenoursearchingtechniquewouldnotcorrectlypredictthei-thknuckle(becauseitsimplydoesnotexist).Theproba-bilitywithwhichtheentirealgorithmfailsis,therefore,0.25!,whichariseswhennoneofthe!predictedknuck-lesarefound.Wenotethatahigh-assurancelocateop-erationasshowninthisalgorithmisusedinconjunctionwitharegularChordlocateoperation,therebyensuringthatHaloperformsnoworsethanChord.Overall,atstep11ouralgorithmcomputesandre-turnsthei-thﬁngerofthepredictedi-thknucklesofthetargetnodes(k)thatisclockwise-closesttothetar-getpositionk.Aswehavearguedearlier,thisguar-ks(k)p(k)k's(k')p(k')d2d1'd2'd1k - 2m-iks(k)p(k)k's(k')p(k')d2d1'd2'd1k - 2m-i(a)(b)ks(k)p(k)k's(k')p(k')d2d1'd2'd1k - 2m-iks(k)p(k)k's(k')p(k')d2d1'd2'd1k - 2m-i(c)(d)Figure3.(a)CaseI.1:p(k")isthecorrectknuckleofs(k)ifd1>d"1.(b)CaseI.2:p(k")isnotthecorrectknuckleofs(k)ifd1≤d"1;then,trys(k")insteadandseecaseII.(c)CaseII.1:s(k")isthecorrectknuckleofs(k)ifd2>d"2.(d)CaseII.2:s(k")isnotthecorrectknuckleofs(k)ifd2≤d"2.anteesthatouralgorithmwillreturnthecorrecttargetnodes(k)aslongasthereexistsatleastonesuccessfulpredictionforaknuckleofs(k)thatisfoundthroughasearchpathintheringthatdoesnotintersectthemali-ciouscoalition.Thus,oursearchingalgorithmalwaysreturnsanoutputthatwithsomehighprobabilityiscor-rect.Inthenextsectionweanalyzeouralgorithmandestimatethe(asweshowsmall)failureprobabilityofoursearchingtechniqueinthefaceofattack,showingthatHaloisindeedahigh-assuranceapproach.3.3RecursiveHaloAlgorithm1implementsan!-redundantsearchoveraDHTbypredictingandlocatingnetworknodesthatarelikelytohavedirectroutinginformationforthetar-getnode.Incontrasttothestraightforwardapproachthatperforms!locationoperationsstartingfromdiffer-entnodes,our!redundantsearcheshavesigniﬁcantlesscorrelationandthereforecanbettertolerateadversarialredirections.These!searchesthemselves,however,haveahighrateoffailuresincetheyarebasedonareg-ularChordlocateoperation.Accordingly,wecanextendourknuckle-basedhigh-assurancelocatebyapplyingAlgorithm1recursivelytolocatewithhigh-assurancethecandidateknucklenodes.Thatis,theideaistoreplaceatthestep4inthealgo-rithmtheoperationpi←locate(ki,fi)withoperationpi←HAlocate(ki,f1,...,f!2),wheref1,...,f!2arethe!2-mostsigniﬁcantﬁngersofthenodeinitiatingthesearch;!2istherecursive-redundancyparameter.Withthisapproach,recursiveHalosucceedsinlocat-ingthecorrectknuckleswithhigherprobabilitythanthenon-recursiveversion,sinceaknuckleislocatedusingHAlocateinsteadoflocate,leadingtohighersuccessratesinﬁndingthetargetnode.Inthenextsectionsweexperimentallydemonstratethepowerofthisideafordegree-2recursionbygettingsigniﬁcantlybetterresultsandachievinghigherassurance.NotethatalthoughthenodecallingouralgorithmcancontactO(logn)nodesintotal,thesecanbeusedmorethanoncesinceforeveryleveloftherecursionasearchforadifferenttargetnodecanbechosen.3.4GeneralizationAlthoughdemonstratedforChord,webelievethatourhigh-assuranceknuckle-basedsearchingtechniquescanbegeneralizedtootherDHTsaslongasthefollow-ingconditionsaremet:1.Theunderlyinggraphrepresentingsharingofdirectroutinginformationbetweennodesallowsthesuc-cessfulpredictionoftheO(logn)knucklenodesofthetargetnode.InChord,theexponentiallydiffer-entoffsetsfordeﬁningﬁngersallowthisprediction.2.Theownershiprelationiswell-deﬁnedaccordingtosomedistancemetricthatallowssuccessfulandsecureselectionofthecorrecttargetnodefromasetofclaimedtargetnodes.InChord,the“clockwiseclosest”relationisused.3.Networknodesaremappedtothelogicalidentiﬁerspaceinarandomuniform-likeway,i.e.,itisin-feasibleformaliciouscolluderstocontroltheirlo-cationinthelogicalidentiﬁerspace.InChord,theuseofSHA-1ensuresthisproperty.Webelievethattheseproperties,orsimilarprop-ertiesthatmakeourHalotechniqueapplicable,aresatisﬁedbymostDHTs,forinstance,DHTsthatusethehypercuberoutingmethod(e.g.,Pastry[28]andTapestry[36]usingthetechniquein[24]),DHTsthatpartitionad-dimensionalspacehierarchicallyintozones(e.g.,CAN[25]),orDHTsthatuseatree-likehierarchy(e.g.,[21,22].Inthefuture,wehopetodemonstratetheeffectivenessofHaloforsomeoftheseDHTs.3.5BootstrappingandJoin/LeaveoperationsAlldynamicoperationsforChord(e.g.,forjoiningorleavingthenetwork)employtheuseoftheprim-itivelocateoperation.Accordingly,wecanachievehigh-assurancedynamicoperationsbyusingourhigh-assurancelocateoperation.TheonlyrequirementisthatajoiningnoderunstheaugmentedjoinoperationusingapredeﬁnedsetofO(logn)publiclyknownandtrustedpeernodes.Thisconditioniseasytoachieve,sinceashortlistofsuchnodescanbemadeavailable,forin-stanceonawebpage.Thesenodesareusedonlyasstartingpointsforjoinandleaveoperations.4AnalysisWedevelopananalyticalapproximationoftheex-pectedfailureratesforaregularChordlocate(k)op-erationanditshigh-assurancecounterpart.Wewillshowhowthisanalyticalapproximationﬁtsoursim-ulationdataclosely.Recallthatwehavedeﬁnedlocate(k)asthelocatesuccessor(k)operation(itre-turnstheownernodeofk),althoughintherealChordimplementationlocate(k)isactuallyimplementedusingthelocatepredecessor(k)operation(itreturnsthepre-decessoroftheowner)followedbytheﬁndsuccessoroperation.Inwhatfollowsweusethisfact.HAlocateisouroperationdescribedinAlgorithm1;Halosearchwith!-redundancymakesuseofaregularChordlocatesuccessor(k)operationfollowedbyHAlocatewithredundancyparameter!−1.4.1ChordLetX=P[locatepredecessor(k)fails],whereXistheprobabilitywithwhichalocatepredecessor(k)op-erationfailsinregularChord.Thelocateoperationfailsifthesuccessorreturnedbythelocateoperationisnotthetruesuccessorofk.Xisarandomvariablebecausethisfailureprobabilitydependsonthenumberofnodestraversedduringthelocateoperation,whichisaran-domvariable.LetKbethenumberofnodestraversedinalocatepredecessor(k)operation.WeknowthatKisbinomiallydistributedwithparameters(logn,12)andhasmean12logn.Ifcisthefractionofmaliciousnodesinthenetwork,thenwehavethatagivennodeismaliciouswithprobabilityc(sincenodesaremappedontotheChordringrandomly,adversariescannotcon-troltheirlocationinthelogicalring).Theprobabilitythatallthenodestraversedbyalocatepredecessor(k)operationarenon-maliciousis(1−c)K,andthereforetheprobabilitythatatleastonenodeismaliciousisX=1−(1−c)K.WeapproximatetheexpectationofthisprobabilityasE[X]≈1−(1−c)12logn.Weobserve(asinArtigasetal.[1])thatE[X]isboundedbythisapproximation.Sinceweassumethatthetargetsuccessorisnotmali-ciousinoursimulations(weaimtoassesshowmanypotentiallysuccessfulsearchesaresubvertedbymali-ciousnodes),E[X]isalsotheexpectedprobabilityofsuccessofalocatesuccessor(k)operation.4.2High-assurancesearchNow,letY=P[HAlocate(k)fails],whereHAlocate(k)involvesoneiterationofourproposedal-gorithm.ThisoperationsucceedsifaregularChordlocatepredecessor(k")succeedsfortheknucklep(k")withestimatedkeyk".However,thissearchwillsucceedonlyifCaseI.1holds(seeFigure3(a)inAppendix3.2).Notethatsincenodesareuniformlydistributed(andas-sumingthatallfournodesaredistinct),thisprobabilityis0.5(comparinglengthsoftworandomlychosenseg-ments).NowifCaseI.2applies(withprobability0.5),thenitispossiblethatthesuccessorofthisnodes(k")isaknucklefork.ApplyingthesameargumenttoCaseII.1(Figure3(c)inAppendix3.2),s(k")willcontains(k)withprobability(1−c)0.5(giventhatCaseI.2ap-plies)sincewemustalsohavethats(k")isnotmali-cious.ThisgivesustheoverallsuccessprobabilityofaHAlocate(k)operationas(1−c)K(0.5+0.5(1−c)0.5)andwehavethatE[Y]≈1−!(1−c)12logn(0.5+(1−c)0.25)".Assumingthat!−1redundantsearchesaredisjoint,theexpectedprobabilitythat!−1HAlocate(k)opera-tionsfailisapproximately#1−!(1−c)12logn(0.5+(1−c)0.25)"$!−1.SinceweperformoneregularChordsearchwith!−1HAlocate(k)operationsforaredundancyparameterof!,wegetanoverallexpectedfailureprobabilityofourHalosearchwithredundancyparameter!isE[Z]≈#1−!(1−c)12logn(0.5+(1−c)0.25)"$!−1E[X]whereZistheprobabilitythatHalosearchfails.Wedescribeoursimulationsinthenextsection,andtheinterestedreadermayrefertoFigures6and7intheAppendixtoobservetheclosenessofﬁtforthisana-lyticalmodelforanetworkof1,000and10,000nodesrespectively.Insummary,themodelﬁtsthedatafairlyaccuratelyaslongasthedisjoint-pathassumptionholds(makingtheeventsthattheindividualsearchpathsfailindependent).Forhighervaluesofredundancy(7for1,000nodesand13for10,000nodes),theprobabilitythattwoseparatelocateoperationsshareasamenodeincreases,andourmodelunderestimatestheprobabilityoffailure.5ExperimentsWeevaluateourapproachforhigh-assurancesearchinthecontextofChord.Wesimulatevariousadversarialenvironments,andshowhowdifferentlevelsofredun-dancycanbeusedtoattainsecurityinthesesituations.Firstwedescribeoursimulationsetup,andthenpresentoursimulationresults.5.1SimulationsetupWebuiltourownsimulatorforChordusingtheJavaprogramminglanguage.ThissimulatormodelsroutinginChord,includingadversarialreroutingoflocatere-quests,anddoesnotmodelnetworkdynamicssuchasjoinandleaveoperations.Oursimulationtakesthepa-rameters*n,c,!1,!2,i,j+asinputanddoesthefollow-ing:ItcreatesnnodesintheChordnetwork,andran-domlymarkscnofthesenodesasmalicious.RoutingtablesareconstructedbasedonChord’salgorithm,how-ever,maliciousnodescommunicatewithinthemselvesandsubvertsearchesbyreportingtheclosestmaliciouspredecessorforasearchkeyinsteadoftheclosestlegiti-matepredecessor.ThesimulationinstantiatesidifferentChordnetworks,andwithineachnetworksimulatesjrandomlocatequeries.Eachlocatequeryoriginatesinarandomlychosenstartnode,forarandomlychosenkeyksuchthatboththestartnodeandsuccessorofkarenotmalicious.EachHalosearchisperformedwithre-dundancyparameters!1and!2.Wevarythecolludingfractioncfrom0to0.3.Webelievethatforvaluesofc>0.3,realsuccessorsofkeysaremaliciouswithahighprobability(equaltoc)andimprovingthesuccessrateofapotentially-successfulsearchhaslittlemean-ingevenifthisfailurerateisclosetozero.WenotethatNambiarandWright[22]usethesamereasoningtosimulatefailureratesforc≤0.2.Eachpointinoursimulationgraphscorrespondstotheaveragefailurerateofsearchesacrossthei=100simulatedChordnetworks,wherethefailureprobabilityforeachinstantiationofaChordnetworkistheaveragefailurerateofj=1000searches.Theerrorbarscorre-spondtoonestandarddeviation.5.2SimulationresultsIninterpretingourresults,wesaythatasearchforakey’ssuccessorissecureifatmost1%ofsearchesforhonestsuccessorsfail.Aswewillsee,forvaryinglevelsofmaliciousnodes,thelevelofredundancycanbeincreasedtoprovidetherequisitesecurity.Figure6intheAppendixshowstheperformanceofHalosearchandtheclosenessofﬁtofthepredictedprobabilitiesfor1,000nodes(Likewise,Figure7intheAppendixfor10,000nodes).ThegraphsshowthatHalosearchvastlyoutperformsChordinlocatingnodes,andismuchbetterthanthenaiveredundantsearchinChord.Dependingonthelevelofsecurityrequired,userscanpicktheappropriateredundancy.Forexample,inanet-workwith10,000nodes,aredundancyof3–5maybeusedforsecurityagainst0–5%colluders.Aredundancyof7–13couldbeusedforsecurityagainst5–12%col-luders.Fortheselevelsofredundancytheprobabilityofafailedsearch(assuminganhonesttarget)isapproxi-mately1%.Similarlevelsofsecurityareobtainedforanetworkof1,000nodes,exceptthattheredundancyislimitedto10redundantsearches.Figures4(a)and4(b)summarizetheresultsforthreedifferentHalosearchesfor1,000and10,000nodesrespectively.Next,westudytheeffectofrecursiveredundantsearches,andobserveinFigures5(a)and5(b)thatsecu-rityisachievedformuchhighernumbersofadversariesinthenetwork.Inparticular,recursiveHalosearchissecureforupto22%maliciousnodes,withonly2–3%searchesfailingfor25%colludingnodes.5.3ComparisonwithotherapproachesItiscertainlypossibletogetbetterresultswithmorestorageatthenodes.Morestorageequatestoshortersearchpaths,andalowerprobabilitythatasearchissubvertedbyamaliciousnode.Forexample,Salsa[22]dividesnnodesintoGgroups.Allnodesmaintaininfor-mationaboutallothernodesinthesamegroup,resultinginnGentriesintheroutingtable.Furthermore,eachnodemaintainsonecontactforlogGothergroups,resultinginO(nG+logG)storageateachnode.AsearchinSalsahaslengthO(logG),whichisconsiderablysmallerthanO(logn).ThereforecomparingSalsawithourschemewouldbeunfair.SimilartoSalsa(althoughwenotethatCyclonepre-datesSalsa),Cyclone[1]subdividesaChordnetworkinto!smallernetworks,resultinginO(!+logn!)stor-ageateachnode,whichresultsinmuchlargerstoragethaninourscheme(andmorestoragethaninSalsa).SearchpathsareoflengthO(logn!),andthereforecom-parabletoSalsa.Again,wedonotbelievethatCyclonecanbecomparedfairlywithourschemebecauseofitsincreasedstorage.Infact,ourHalosearchcanbeap-pliedtoeachChordsubnetworkofCyclonetofurtherimproveCyclone’sperformancewithoutimpactingCy-clone’sstoragerequirements.Inshort,weprovideanoveltechniquetoperformredundantsearchesinChordwithoutrequiringanyex-trastorageatthenodes,andmorespeciﬁcallyO(logn)storage(lowerthanSalsaandCyclone).Indeed,wedon’trequireanychangesinexistingChordnodes,andourHalosearchcanbeinitiatedbyanynodeswiththeaugmentedsearchalgorithm,makinguseofexistingChordconstructsattheothernodes.Asaresult,thestor-agecomplexityofChordisnotaffected,andthelengthofeachredundantsearchremainsO(logn).6RelatedWorkThereisalargeandgrowingliteratureonp2pover-laynetworks.Onepopularclassofoverlaynetworksisthatofdistributedhashtables(DHTs).Thesestruc-turesmakeuseofconsistenthashingtoefﬁcientlysup-portqueriesforexactmatcheswithdatakeys.Exam-plesofdistributedhashtablesincludeChord[13,33],Koorde[18],Pastry[28],Scribe[29],Symphony[20],andTapestry[36]andothers(e.g.,[24,25]),withChordbeingoneofthemostrepresentativeandmoststudiedDHTs.Asanexampleofperformance,Chord,initsoriginalform,supportsqueriesusingO(logn)messagesandO(logn)wordsofmemorycorrespondingtotheO(logn)degreeoftheunderlyinggraph.OntopoftheseDHTsmanydistributedsystemshavebeenbuiltthataresupportingawide-rangeofreal-lifeapplica-tions(e.g.,PAST[8],CAN[25],CFS[5],PIER[17],OpenDHT[27]).Also,otherp2parchitectureswithsim-ilarefﬁciencyprovidemoreelaboratefunctionalityoverp2pnetworks;forinstance,skip-graphs[2]andtheirex-tensions,e.g.,[16]and[14],supportsearchesoveror-deredsetsofresources.Alargesetofsecurityissueshavebeenstudiedinp2psystemsandDHTs.Generalissuesareconsideredin[31,35].InCastroetal.[4]theﬁrstschemesforbattlingadversarialbehaviorinroutingaregiven.TheschemeusedO(logn)messagesperqueryintheab-senceoffaultybehavior,andwasresilienttolimitedad-versarialattacks.However,theschememakesuseofanexternalcertiﬁcationauthority(CA)toprovidever-iﬁablerandomIDvaluestonetworkaddresses.More-over,thesystemwasnotrobusttocertaintypesofat- 0 0.2 0.4 0.6 0.8 1 0 0.05 0.1 0.15 0.2 0.25 0.3Locate failure rateColluding fractionLocate failure rate vs. colluding fraction. 1,000 nodesChord RegularHalo 5Halo 7Halo 10(a)Locatefailureratevs.colludingfractionfora1,000nodenetwork 0 0.2 0.4 0.6 0.8 1 0 0.05 0.1 0.15 0.2 0.25 0.3Locate failure rateColluding fractionLocate failure rate vs. colluding fraction. 10,000 nodesChord RegularHalo 7Halo 10Halo 13(b)Locatefailureratevs.colludingfractionfora10,000nodenetworkFigure4.ComparingvariouslevelsofredundancyforHalosearches.Wecanseethatthefailureratesarenegligibleforupto12%colludingnodes. 0 0.2 0.4 0.6 0.8 1 0 0.05 0.1 0.15 0.2 0.25 0.3Locate failure rateColluding fractionLocate failure rate vs. colluding fraction. 10xX redundant searches, 1,000 nodesChord RegularHalo 10x1Halo 10x3Halo 10x7Halo 10x10(a)Locatefailureratevs.colludingfractionfora1,000nodenetwork 0 0.2 0.4 0.6 0.8 1 0 0.05 0.1 0.15 0.2 0.25 0.3Locate failure rateColluding fractionLocate failure rate vs. colluding fraction. 13xX redundant searches, 10,000 nodesChord RegularHalo 13x1Halo 13x3Halo 13x5Halo 13x9Halo 13x13(b)Locatefailureratevs.colludingfractionfora10,000nodenetworkFigure5.ComparingvariouslevelsofrecursionforHalosearches.Wecanseethatthefailureratescanbemadenegligibleforupto22%colludingnodes.Only2–3%searchesfailfor25%colludingnodes,and10%failfor30%colludingnodes.tacksbytheadversary,inparticulartheSybilattacksofDouceur[7],inwhichtheadversaryacquiresnumerousIDvalueswhichitusestoobtainaconcentratedpres-enceinoneportionofthenetwork.Withrespecttoroutingandsearching,numerousDHTshavebeenshowntotoleratesigniﬁcantnetwork-nodefailures—random(e.g.,[18,25,28,32,36])ormalicious(e.g.,[3,9,10,19,23,30]).Thestructuresthatdeteradversarialbehaviordosoeitherbyaugment-ingtheDHTconnectivitystructureandcommunicationcomplexityoftheroutingalgorithmsbyatleastalog-arithmicfactor(e.g.,[9,10,23,30])orbyusingas-sumptionsaboutexternaltrustedparties(e.g.,supervisorin[19]).Otherschemes(e.g.,[3,10])achievesecuritypropertiesbyformingsuitablylargeandrandomblocksofmachinesthattaketheplaceofeachindividualma-chineinthedatastructure.Amajority-votingschemeisthenusedtopreventfaultybehaviorfromadversarialnodesthataretheminority.Allofthesemajority-votingschemesincuralsoanincreaseofatleastalogarithmicsizeincommunicationoverhead.Withrespecttodataauthenticationandcontentin-tegrity,mostp2psystems(e.g.,[5,8,24,25,27])supportanelementaryauthenticationserviceforretrieveddatausingindividualsignaturesonthestoreddataobjects.Forthestaticcase,storageauthenticationofteninvolvestheso-calledself-certiﬁeddata[12],wherelargedataitems(e.g.,aﬁlesystem)getpartitionedintoblocks,whicharestoredasseparateobjectsinthesystemandareboundtogetherusingcollision-resistanthashinginsometree-likehierarchy,andwheretheroot-blockissigned.Forthedynamiccase,arecenttechniquefordistributeddataauthentication[34]canbeused,wheredynamicdatasetsstoredinp2pnetworkscanbeefﬁ-cientlyauthenticated.OveranyDHTandusingonlythelocationsearchoperation,adistributedversionofMerkletreeisrealized,andusingthisinanetworkwithnnodes,itisshowedhowtoefﬁcientlyauthenticatecon-tentmembershipinafullydynamicsetofmdatael-ementsinO(lognlogm)timeusingO(mlogm)stor-age,withsimilaramortizedcomplexitiesforsupportinginsertionsanddeletions.Thistechniquehowevercan-notbeusedtoachieveauthenticationofroutinginfor-mation,sinceroutinginformation,incontrasttodatare-sourcesiscollectivelycomputedandcannotbesignedbyasingleentity.Finally,privacyandanonymityissues(e.g.,[11,22,26])orothersecurityissues(e.g.,theSybilattack[6,7])relatedtop2psystemshavebeenstudied.WehavediscussedCyclone[1]andSalsa[22]inSec-tion5.3.7ConclusionWepresentedanovelschemecalledHaloforper-formingdisjointredundantsearchesinDHTssuchasChord.Insteadofperformingmultipleredundantsearchesdirectedtowardsatargetnode,Halosearchesforthe“knuckles”ofthetargetnode.Theseknucklescontainthetargetnodeintheirroutingtables,andarespreadovertheDHTsuchthatsearchesfortheseknuck-lesaredisjointwithhighprobability.Weshowedtheeffectivenessofourapproachbypresentingbothanalyt-icalmodelsandasimulation-basedevaluationofHalo.Wefoundthatourschemecansigniﬁcantlyincreasetheintegrityofsearches,byallowingonly1%ofsearchestobesubvertedbyupto22%maliciouscolludingnodesinthenetwork.Asfuturework,weplantofurtherstudyourknuckle-basedhigh-assurancesearch,exploringitstheoreticalboundsandthepoweroft-depthrecursion,aswellastoapplyourtechniquetootherDHTstructures.AcknowledgmentsThisresearchprogramisprimarilyapartoftheIn-stituteforSecurityTechnologyStudies,supportedbytheU.S.BureauofJusticeAssistanceundergrant2005-DD-BX-1091,andbytheInstituteforInformationIn-frastructureProtection(I3P)underanawardfromtheScienceandTechnologyDirectorateattheU.S.Depart-mentofHomelandSecurity.ResearchwasadditionallysupportedbytheCenterforAlgorithmicGameTheoryattheUniversityofAarhus,Denmark,underanawardfromtheCarlsbergFoundation.Theviewsandconclu-sionsinthispaperdonotnecessarilyreﬂecttheviewsofthesponsors.SimulationswereperformedonclustermachinessupportedunderNSFgrantEIA-98-02068.References[1]M.S.Artigas,P.G.Lopez,J.P.Ahullo,andA.F.G.Skarmeta.Cyclone:Anoveldesignschemaforhier-archicaldhts.InP2P’05:ProceedingsoftheFifthIEEEInternationalConferenceonPeer-to-PeerCom-puting(P2P’05),pages49–56,Washington,DC,USA,2005.IEEEComputerSociety.[2]J.AspnesandG.Shah.Skipgraphs.InProceedingsofACM-SIAMSymposiumonDiscreteAlgorithms,pages384–393,2003.[3]B.AwerbuchandC.Scheideler.Towardsascalableandrobustdht.InSPAA’06:ProceedingsoftheeighteenthannualACMsymposiumonParallelisminalgorithmsandarchitectures,pages318–327,NewYork,NY,USA,2006.ACM.[4]M.Castro,P.Drushel,A.Ganesh,A.Rowstron,andD.Wallach.Secureroutingforstructuredpeer-to-peeroverlaynetworks.InProceedingsofUsenixSympo-siumofOperatingSystemsDesignandImplementation(OSDI),2002.[5]F.Dabek,M.F.Kaashoek,D.Karger,R.Morris,andI.Stoica.Wide-areacooperativestoragewithCFS.InProceedingsof18thACMSymposiumonOperatingSystemsPrinciples(SOSP’01),ChateauLakeLouise,Banff,Canada,Oct.2001.[6]G.Danezis,C.Lesniewski-Laas,M.F.Kaashoek,andR.Anderson.Sybil-resistantDHTrouting.InProceed-ingsofthe10thEuropeanSymposiumOnResearchInComputerSecurity,Milan,Italy,September2005.[7]J.R.Douceur.Thesybilattack.InProceedingsofthe1stInternationalWorkshoponPeer-to-PeerSystems(IPTPS’02),pages251–260,2002.[8]P.DruschelandA.Rowstron.Past:Alarge-scale,per-sistentpeer-to-peerstorageutility.InHOTOS’01:Pro-ceedingsofEighthWorkshoponHotTopicsinOperatingSystems,page75,Washington,DC,USA,2001.IEEEComputerSociety.[9]A.FiatandJ.Saia.Censorshipresistantpeer-to-peercontentaddressablenetworks.InProceedingsofSym-posiumonDiscreteAlgorithms,2002.[10]A.Fiat,J.Saia,andM.Young.Makingchordrobusttobyzantineattacks.InProceedingofEuropeanSympo-siumofAlgorithms,pages803–814,2005.[11]M.J.FreedmanandR.Morris.Tarzan:apeer-to-peeranonymizingnetworklayer.InCCS’02:Proceedingsofthe9thACMconferenceonComputerandcommuni-cationssecurity,pages193–206,NewYork,NY,USA,2002.ACMPress.[12]K.Fu,M.F.Kaashoek,andD.Mazieres.Fastandse-curedistributedread-onlyﬁlesystem.ComputerSys-tems,20(1):1–24,2002.[13]P.GanesanandG.S.Manku.OptimalroutinginChord.InProceedingsof15thACM-SIAMSymposiumonDis-creteAlgorithms(SODA),pages169–178,2004.[14]M.T.Goodrich,M.J.Nelson,andJ.Z.Sun.Therainbowskipgraph:afault-tolerantconstant-degreedis-tributeddatastructure.InSODA’06:ProceedingsoftheseventeenthannualACM-SIAMsymposiumonDiscretealgorithm,pages384–393,NewYork,NY,USA,2006.ACMPress.[15]C.HarvesfandD.M.Blough.Theeffectofreplicaplacementonroutingrobustnessindistributedhashta-bles.InP2P’06:ProceedingsoftheSixthIEEEInter-nationalConferenceonPeer-to-PeerComputing,pages57–6,Washington,DC,USA,2006.IEEEComputerSo-ciety.[16]N.J.A.Harvey,M.B.Jones,S.Saroiu,M.Theimer,andA.Wolman.SkipNet:Ascalableoverlaynetworkwithpracticallocalityproperties.InUSENIXSymposiumonInternetTechnologiesandSystems,LectureNotesinComputerScience,2003.[17]R.Huebsch,B.Chun,J.Hellerstein,B.Loo,P.Maniatis,T.Roscoe,S.Shenker,I.Stoica,andA.Yumerefendi.ThearchitectureofPIER:aninternet-scalequerypro-cessor.InProceedingsof2ndConferenceonInnovativeDataSystemsResearch(CIDR),pages28–43,2005.[18]F.KaashoekandD.R.Karger.Koorde:Asimpledegree-optimaldistributedhashtable.InProceedingsof2ndInternationalWorkshoponPeer-to-PeerSystems,2003.[19]K.KothapalliandC.Scheideler.Supervisedpeer-to-peersystems.InProceedingsof2005InternationalSym-posiumonParallelArchitectures,Algorithms,andNet-works(I-SPAN),2005.[20]G.S.Manku,M.Bawa,andP.Raghavan.Symphony:Distributedhashinginasmallworld.InProceedingsof4thUSENIXSymposiumonInternetTechnologiesandSystems,pages127–140,2003.[21]P.MaymounkovandD.Mazires.Kademlia:Apeer-to-peerinformationsystembasedonthexormetric.InProceedingsofthe1stInternationalWorkshoponPeer-to-PeerSystems(IPTPS’02),pages53–65,Mar.2002.[22]A.NambiarandM.Wright.Salsa:astructuredapproachtolarge-scaleanonymity.InCCS’06:Proceedingsofthe13thACMconferenceonComputerandcommunica-tionssecurity,pages17–26,NewYork,NY,USA,2006.ACMPress.[23]M.NaorandU.Wieder.Novelarchitecturesforp2papplications:Thecontinuous-discreteapproach.ACMTrans.Algorithms,3(3):34,2007.[24]C.G.Plaxton,R.Rajaraman,andA.W.Richa.Access-ingnearbycopiesofreplicatedobjectsinadistributedenvironment.InProceedingsofACMSymposiumonParallelAlgorithmsandArchitectures,pages311–320,June1997.[25]S.Ratnasamy,P.Francis,M.Handley,R.M.Karp,andS.Shenker.Ascalablecontent-addressablenetwork.InProceedingsofSIGCOMM,pages161–172,2001.[26]M.RennhardandB.Plattner.PracticalanonymityforthemasseswithMorphMix.InProceedingsofFinancialCryptography,2004.[27]S.Rhea,B.Godfrey,B.Karp,J.Kubiatowicz,S.Rat-nasamy,S.Shenker,I.Stoica,andH.Yu.OpenDHT:ApublicDHTserviceanditsuses.InProceedingsof2005ACMSIGCOMMConference,pages73–84,2005.[28]A.RowstronandP.Druschel.Pastry:Scalable,decen-tralizedobjectlocation,androutingforlarge-scalepeer-to-peersystems.LectureNotesinComputerScience,2218:329,2001.[29]A.I.T.Rowstron,A.-M.Kermarrec,M.Castro,andP.Druschel.SCRIBE:Thedesignofalarge-scaleeventnotiﬁcationinfrastructure.InNetworkedGroupCommu-nication,pages30–43,2001.[30]J.Saia,A.Fiat,S.D.Gribble,A.R.Karlin,andS.Saroiu.Dynamicallyfault-tolerantcontentaddress-ablenetworks.InIPTPS’01:RevisedPapersfromtheFirstInternationalWorkshoponPeer-to-PeerSystems,pages270–279,London,UK,2002.Springer-Verlag.[31]E.SitandR.Morris.Securityconsiderationsforpeer-to-peerdistributedhashtables.InProceedingsofInterna-tionalWorkshoponP2PSystems,pages261–269,2002.[32]I.Stoica,R.Morris,D.Karger,F.Kaashoek,andH.Bal-akrishnan.Chord:AscalablePeer-To-Peerlookupser-viceforinternetapplications.InProceedingsof2001ACMSIGCOMMConference,pages149–160,2001.[33]I.Stoica,R.Morris,D.Karger,M.F.Kaashoek,andH.Balakrishnan.Chord:Ascalablepeer-to-peerlookupserviceforInternetapplications.InProceedingsofSIG-COMM’01,pages149–160,SanDiego,California,Au-gust2001.[34]R.TamassiaandN.Triandopoulos.Efﬁcientcontentau-thenticationinpeer-to-peernetworks.InProceedingsofAppliedCryptographyandNetworkSecurity,pages354–372,2007.[35]D.S.Wallach.Asurveyofpeer-to-peersecurityissues.InProceedingsofInternationalSymposiumonSoftwareSecurity,2002.[36]B.Y.Zhao,L.Huang,J.Stribling,S.C.Rhea,A.D.Joseph,andJ.Kubiatowicz.Tapestry:Aresilientglobal-scaleoverlayforservicedeployment.IEEEJournalonSelectedAreasinCommunications,22(1):41–53,Jan-uary2004.AAdditionalﬁguresPleaserefertothenextpage. 0 0.2 0.4 0.6 0.8 1 0 0.05 0.1 0.15 0.2 0.25 0.3Locate failure rateColluding fractionLocate failure rate vs. colluding fraction. 3 redundant searches, 1000 nodesModel Chord RegularChord RegularRedundant 3Halo 3Model Halo 3(a)Comparingfailureratesforredundancy=3 0 0.2 0.4 0.6 0.8 1 0 0.05 0.1 0.15 0.2 0.25 0.3Locate failure rateColluding fractionLocate failure rate vs. colluding fraction. 4 redundant searches, 1000 nodesModel Chord RegularChord RegularRedundant 4Halo 4Model Halo 4(b)Comparingfailureratesforredundancy=4 0 0.2 0.4 0.6 0.8 1 0 0.05 0.1 0.15 0.2 0.25 0.3Locate failure rateColluding fractionLocate failure rate vs. colluding fraction. 5 redundant searches, 1000 nodesModel Chord RegularChord RegularRedundant 5Halo 5Model Halo 5(c)Comparingfailureratesforredundancy=5 0 0.2 0.4 0.6 0.8 1 0 0.05 0.1 0.15 0.2 0.25 0.3Locate failure rateColluding fractionLocate failure rate vs. colluding fraction. 7 redundant searches, 1000 nodesModel Chord RegularChord RegularRedundant 7Halo 7Model Halo 7(d)Comparingfailureratesforredundancy=7 0 0.2 0.4 0.6 0.8 1 0 0.05 0.1 0.15 0.2 0.25 0.3Locate failure rateColluding fractionLocate failure rate vs. colluding fraction. 10 redundant searches, 1000 nodesModel Chord RegularChord RegularRedundant 10Halo 10Model Halo 10(e)Comparingfailureratesforredundancy=10Figure6.Locatefailureratesvs.colludingfractionforvariouslevelsofredundancyinanetworkof1,000nodes.ThesegraphsalsoshowtheclosenessofﬁtfortheanalyticalmodelsforChordandHalo.Furthermore,wecanseethatHalosearchoutperformsthenaiveredundantsearchforthesamelevelofredundancy. 0 0.2 0.4 0.6 0.8 1 0 0.05 0.1 0.15 0.2 0.25 0.3Locate failure rateColluding fractionLocate failure rate vs. colluding fraction. 3 redundant searches, 10000 nodesModel Chord RegularChord RegularRedundant 3Halo 3Model Halo 3(a)Comparingfailureratesforredundancy=3 0 0.2 0.4 0.6 0.8 1 0 0.05 0.1 0.15 0.2 0.25 0.3Locate failure rateColluding fractionLocate failure rate vs. colluding fraction. 4 redundant searches, 10000 nodesModel Chord RegularChord RegularRedundant 4Halo 4Model Halo 4(b)Comparingfailureratesforredundancy=4 0 0.2 0.4 0.6 0.8 1 0 0.05 0.1 0.15 0.2 0.25 0.3Locate failure rateColluding fractionLocate failure rate vs. colluding fraction. 5 redundant searches, 10000 nodesModel Chord RegularChord RegularRedundant 5Halo 5Model Halo 5(c)Comparingfailureratesforredundancy=5 0 0.2 0.4 0.6 0.8 1 0 0.05 0.1 0.15 0.2 0.25 0.3Locate failure rateColluding fractionLocate failure rate vs. colluding fraction. 7 redundant searches, 10000 nodesModel Chord RegularChord RegularRedundant 7Halo 7Model Halo 7(d)Comparingfailureratesforredundancy=7 0 0.2 0.4 0.6 0.8 1 0 0.05 0.1 0.15 0.2 0.25 0.3Locate failure rateColluding fractionLocate failure rate vs. colluding fraction. 10 redundant searches, 10000 nodesModel Chord RegularChord RegularRedundant 10Halo 10Model Halo 10(e)Comparingfailureratesforredundancy=10 0 0.2 0.4 0.6 0.8 1 0 0.05 0.1 0.15 0.2 0.25 0.3Locate failure rateColluding fractionLocate failure rate vs. colluding fraction. 13 redundant searches, 10000 nodesModel Chord RegularChord RegularRedundant 13Halo 13Model Halo 13(f)Comparingfailureratesforredundancy=13Figure7.Locatefailureratesvs.colludingfractionforvariouslevelsofredundancyinanetworkof10,000nodes.ThesegraphsalsoshowtheclosenessofﬁtfortheanalyticalmodelsforChordandHalo.Furthermore,wecanseethatHalosearchoutperformsthenaiveredundantsearchforthesamelevelofredundancy.