User: How to use Ansible to deploy multiple web servers at once, including configuring web servers and load balancers?
Assistant: 1. Preparations First, Ansible needs to be installed, and there is already a web server and a load balancer that can be accessed remotely. These servers need to be added to the Ansible host inventory and categorized as groups. 2. To create an Ansible playbook, you can first create a file named web_server.yaml, and put all the tasks in this file. These tasks can be accomplished using the rich modules provided by Ansible, for example, using the apt module to install Apache, PHP, and databases. Use the template module to generate configuration files and the copy module to transfer the files to the server. 3. Add a load balancer to the playbook Add the load balancer to the host inventory and create a new task in the playbook to configure the load balancer. It is easy to configure a load balancer on a server running Haproxy using the Haproxy module. Haproxy configuration files can be created using the template module and transferred to the server using the copy module. 4. Run the playbook Use the ansible-playbook command to run the playbook. You can specify the list of hosts to use, the playbook file to run, and other parameters (such as user, password, etc.). After running, all web servers and load balancers will be successfully configured, and the website can be accessed through the load balancer. Reference execution code: --- - name: deploy web servers and load balancer hosts: all become: true vars: web_servers: - name: web1.example.com ip_address: 192.168.1.10 - name: web2.example.com ip_address: 192.168 .1.11 haproxy_server: haproxy.example.com tasks: # Install Apache, PHP and database on web servers - name: Install required packages apt: name: "{{ item }}" state: present with_items: - apache2 - php - php- mysql - mysql-client # Copy Apache virtual host configuration file to web servers - name: Copy Apache virtual host configuration file copy: src: templates/vhost.conf.j2 dest: /etc/apache2/sites-available/{{ item. name }}.conf with_items: "{{ web_servers }}" # Enable virtual host on web servers - name: Enable virtual host command: a2ensite {{ item.name }} with_items: "{{ web_servers }}" # Restart Apache on web servers - name: Restart Apache service: name: apache2 state: restarted # Install Haproxy on Haproxy server - name: Install Haproxy apt: name: haproxy state: present when: inventory_hostname == haproxy_server # Copy Haproxy configuration file to Haproxy server - name : Copy Haproxy configuration file copy: src: templates/haproxy.cfg.j2 dest: /etc/haproxy/haproxy.cfg when: inventory_hostname == haproxy_server # Restart Haproxy - name: Restart Haproxy service: name: haproxy state: restarted when: inventory_hostname == haproxy_server