                return true;            
            }
        }
注意了这里也有一次safe_replace，加密函数在：param::set_cookie('att_json',$json_str);，跟进一下：
/phpcms/libs/classes/param.class.php LINE 86-99
        public static function set_cookie($var, $value = '', $time = 0) {
            $time = $time > 0 ? $time : ($value == '' ? SYS_TIME - 3600 : 0);
            $s = $_SERVER['SERVER_PORT'] == '443' ? 1 : 0;
            $httponly = $var=='userid'||$var=='auth'?true:false;
            $var = pc_base::load_config('system','cookie_pre').$var;
            $_COOKIE[$var] = $value;
            if (is_array($value)) {
                foreach($value as $k=>$v) {
                    setcookie($var.'['.$k.']', sys_auth($v, 'ENCODE'), $time, pc_base::load_config('system','cookie_path'), pc_base::load_config('system','cookie_domain'), $s, $httponly);
                }
            } else {
                setcookie($var, sys_auth($value, 'ENCODE'), $time, pc_base::load_config('system','cookie_path'), pc_base::load_config('system','cookie_domain'), $s, $httponly);
            }
        }
sys_auth($value,
'ENCODE')即是利用了phpcms内置的加密函数进行数据加密，结果正好是咱们需要的，再看看attachments.php中是否有相关权限的验证：
构造方法：
/phpcms/modules/attachment/attachments.php LINE 10-24
    class attachments {
        private $att_db;
        function __construct() {
            pc_base::load_app_func('global');
            $this->upload_url = pc_base::load_config('system','upload_url');
            $this->upload_path = pc_base::load_config('system','upload_path');        
            $this->imgext = array('jpg','gif','png','bmp','jpeg');
            $this->userid = $_SESSION['userid'] ? $_SESSION['userid'] : (param::get_cookie('_userid') ? param::get_cookie('_userid') : sys_auth($_POST['userid_flash'],'DECODE'));
            $this->isadmin = $this->admin_username = $_SESSION['roleid'] ? 1 : 0;
            $this->groupid = param::get_cookie('_groupid') ? param::get_cookie('_groupid') : 8;
            //判断是否登录
            if(empty($this->userid)){
                showmessage(L('please_login','','member'));
            }
        }
    $this->userid = $_SESSION['userid'] ? $_SESSION['userid'] : (param::get_cookie('_userid') ? param::get_cookie('_userid') : sys_auth($_POST['userid_flash'],'DECODE'));
从这里的userid来看是需要普通用户的权限
            if(empty($this->userid)){
                showmessage(L('please_login','','member'));
            }
但是也可以传进加密后的userid_flash参数：sys_auth($_POST['userid_flash'],'DECODE'));
那么这里有两种利用方案，一种是直接通过phpcms会员中心登录获取的cookie中的userid做权限判断，还有一种方式是通过现成的经过sys_auth加密后的字符串去赋值给当前的userid，这里找到了一处，是利用了wap模块的构造方法：
/phpcms/modules/wap/index.php
    class index {
        function __construct() {        
            $this->db = pc_base::load_model('content_model');
            $this->siteid = isset($_GET['siteid']) && (intval($_GET['siteid']) > 0) ? intval(trim($_GET['siteid'])) : (param::get_cookie('siteid') ? param::get_cookie('siteid') : 1);
            param::set_cookie('siteid',$this->siteid);    
            $this->wap_site = getcache('wap_site','wap');
            $this->types = getcache('wap_type','wap');
            $this->wap = $this->wap_site[$this->siteid];
            define('WAP_SITEURL', $this->wap['domain'] ? $this->wap['domain'].'index.php?' : APP_PATH.'index.php?m=wap&siteid='.$this->siteid);
            if($this->wap['status']!=1) exit(L('wap_close_status'));
        }
set_cookie跟进去就是调用sys_auth 加密函数来加密外部获取的sited值，将这里的siteid值再带入上面的userid_flash即可。
接着再返回去看这两个可控参数：s=$s、f=$f，$s带需要读取的目标文件，$f带自己构造的绕过规则检测值：
    $a_k = urlencode(sys_auth("i=$i&d=$d&s=$s&t=".SYS_TIME."&ip=".ip()."&m=".$m."&f=$f&modelid=".$modelid, 'ENCODE’, $pc_auth_key));
经过反复测试，可以采用如下参数，这里以读取down.php文件源码为例：
    s=./phpcms/modules/content/down.ph&f=p%3%25252%2*70C
解释一下这里的参数，s参数带的是要读取的down.php的源码文件，最后的p是由f参数的第一个字符p拼接过去的：
            $fileurl = trim($f);
            if(!$downid || empty($fileurl) || !preg_match("/[0-9]{10}/", $starttime) || !preg_match("/[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}/", $ip) || $ip != ip()) showmessage(L('illegal_parameters'));    
            $endtime = SYS_TIME - $starttime;
            if($endtime > 3600) showmessage(L('url_invalid'));
            if($m) $fileurl = trim($s).trim($fileurl);
            if(preg_match('/(php|phtml|php3|php4|jsp|dll|asp|cer|asa|shtml|shtm|aspx|asax|cgi|fcgi|pl)(.|$)/i',$fileurl) ) showmessage(L('url_error'));
f=p%3%25252%2*70C ：
f参数是绕过正则匹配检查的关键，最后咱们要构造这样的形式：./phpcms/modules/content/down.php','&gt;',$string);
        $string = str_replace("{",'',$string);
        $string = str_replace('}','',$string);
        $string = str_replace('\','',$string);
        return $string;
    }
从过滤内容来看直接带”swfupload_json函数进行param::set_cookie加密:
最后输出的f=p%3C 就是咱们想要的”'), '',$fileurl);
这样在前面就可以将””带入到download中的f参数中绕过正则匹配，所以修复方式就是可以在进行了str_replace后再正则匹配一下$fileurl参数的内容最后放入file_down函数中执行：
    $fileurl = str_replace(array(pc_base::load_config('system','upload_url'),'/'), array(pc_base::load_config('system','upload_path'),DIRECTORY_SEPARATOR), $fileurl);
                    $filename = basename($fileurl);
                    //处理中文文件
                    if(preg_match("/^([sS]*?)([x81-xfe][x40-xfe])([sS]*?)/", $fileurl)) {
                        $filename = str_replace(array("%5C", "%2F", "%3A"), array("\", "/", ":"), urlencode($fileurl));
                        $filename = urldecode(basename($filename));
                    }
                    $ext = fileext($filename);
                    $filename = date('Ymd_his').random(3).'.'.$ext;
                    $fileurl = str_replace(array(''), '',$fileurl);
                    if(preg_match('/(php|phtml|php3|php4|jsp|dll|asp|cer|asa|shtml|shtm|aspx|asax|cgi|fcgi|pl)(.|$)/i',$fileurl) || strpos($fileurl, ":\")!==FALSE || strpos($fileurl,'..')!==FALSE) {
                        showmessage(L('url_error'));
                    }
                    file_down($fileurl, $filename);
**1\. 升级至V9.6.2官方最新版：**
GBK：
UTF-8：[http://download.phpcms.cn/v9/9.6/phpcms_v9.6.2_UTF8.zip](http://www.phpcms.cn/index.php?m=content&c=down&a_k=1bae_myd-iB-LgZI_xMHsRVFMDRWusFe7iZNKlYE7ShJvbK6L3Yc-DhDmtEeFrwtwjim-eW_IPCiPvbufSKRxqIX85ga2Rx9_zsv85vpu2laDb7jVJN8YbLFfUMfjt94lTDRTitjum_sqfzBJEbi-q9IxVN9xm1N_A)
**升级方法**
**方法一：** 在线升级 步骤：登录后台-扩展-在线升级
**方法二：** 手动升级（有二次开发并有改动默认程序）
[**[GBK补丁列表]**](http://download.phpcms.cn/v9/9.0/patch/gbk/)
[**[UTF-8补丁列表]**](http://download.phpcms.cn/v9/9.0/patch/utf8/)
**2\. 个人修复建议（适用于有二次开发并改动默认程序的网站管理者）：**
针对PHPCMS最新版本的特性，主要是因为down类中download方法在进入file_down函数前有如下代码：
    $fileurl = str_replace(array(''), '',$fileurl);
这样在前面就可以将””带入到download中的f参数中绕过正则匹配，所以修复方式就是可以在进行了str_replace后再正则匹配一下$fileurl参数的内容最后放入file_down函数中执行：
    $fileurl = str_replace(array(pc_base::load_config('system','upload_url'),'/'), array(pc_base::load_config('system','upload_path'),DIRECTORY_SEPARATOR), $fileurl);
                    $filename = basename($fileurl);
                    //处理中文文件
                    if(preg_match("/^([sS]*?)([x81-xfe][x40-xfe])([sS]*?)/", $fileurl)) {
                        $filename = str_replace(array("%5C", "%2F", "%3A"), array("\", "/", ":"), urlencode($fileurl));
                        $filename = urldecode(basename($filename));
                    }
                    $ext = fileext($filename);
                    $filename = date('Ymd_his').random(3).'.'.$ext;
                    $fileurl = str_replace(array(''), '',$fileurl);
                    if(preg_match('/(php|phtml|php3|php4|jsp|dll|asp|cer|asa|shtml|shtm|aspx|asax|cgi|fcgi|pl)(.|$)/i',$fileurl) || strpos($fileurl, ":\")!==FALSE || strpos($fileurl,'..')!==FALSE) {
                        showmessage(L('url_error'));
                    }
                    file_down($fileurl, $filename);
**总结**
其实漏洞的核心在于外部参数可以被引入””来污染正常的参数来绕过代码里面的正则匹配，然后在执行文件读取之前被意外的清理了外部带入的污染参数””，漏洞利用得也是如此恰到好处，这也说明了在开发中进行参数过滤的同时是否将恶意参数完全阻挡在了敏感函数执行之前，使之进入敏感函数的参数完全是合法的，这也是开发过程中需要考虑的。