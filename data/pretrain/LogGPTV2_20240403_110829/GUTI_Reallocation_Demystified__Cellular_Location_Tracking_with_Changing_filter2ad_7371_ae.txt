section VI, we assume that the attacker listens to the broadcast
channel for 1 s after the silent call. Let t be the number
of paging messages appearing on the broadcast channel per
second. For simplicity, we only consider byte positions that
have fixed values and treat them in a concatenated form. For
example, if the second and fourth bytes of GUTI are fixed
and the monitored GUTI is 0x12345678, we only consider the
extracted value 0x3478. We define Ai = {ai,1, ai,2, ..., ai,t}
for the i-th call where k bytes (8k bits), and ai,j represents
the j-th value in the time window extracted using the above
method.
Along with these assumptions, we compute the probability
that the intersection of these sets has at least one element
during N calls. In other words, the probability indicates the
existence of the same GUTI as the victim’s one that shows
up every time when the attacker makes N silent calls. The
probability is calculated as shown below. We assume that the
monitored values of k bytes (ai,j) in the paging channel follow
a uniform distribution8. Biases in the actual distribution may
increase the expected number of calls; we cover this issue in
the next experiments.
N−1(cid:92)
i=1
P r(
Ai ̸= ∅)
=
Ai))
Ai)
i=1
a=0
a=0
P r(
28k−1(cid:95)
(a ∈ N−1(cid:92)
P r(a ∈ N−1(cid:92)
≤ 28k−1(cid:88)
28kP r(a ∈ N−1(cid:92)
N−1(cid:89)
N−1(cid:89)
N−1(cid:89)
28k
28k
i=1
i=1
i=1
i=1
(1 − (
28k
28k(1 − ( 28k−1
i=1
=
=
=
=
=
28k − 1
28k
28k )t)N−1
Ai) for some a
P r(a ∈ Ai) for some a
(1 − P r(a /∈ Ai)) for some a
)t) for some a
To determine the number of silent calls the attacker needs
to make, we derive Nmin, the minimum N value that makes
the derived probability be less than 1%. Note that we calculate
the upper bound of the probability. It implies that the attacker
can designate the victim’s GUTI within Nmin times with 99%
success rate. We measure Nmin for varying paging message
rates and GUTI utilization. Figure 11 shows Nmin for the
carriers adopting three types of GUTI allocation rules.
We first examine the case in which the attacker tries to locate
the victim with varying paging message rates. For example,
8Note that the distribution of reallocated M-TMSI values at “one” target
device is deterministic and predictable. Herein, the assumption of uniform
distribution is for the value of fixed bytes in M-TMSI for the devices in the
paging channel.
11
02040608010019:1022:502:306:109:5013:30# of paging / secTime of day(a) Required number of call trial on varying paging message rate
(b) Required number of call trial on varying GUTI utilization
Fig. 11: Required number of calls covering 99% success rate
during the day when many people are active or in an area where
the population density is high, the paging message rate is high,
and therefore inferring the victim’s GUTI becomes difficult.
As Figure 10 shows, the highest and lowest paging message
rates were 88 and 5 paging messages per second. Note that
this experiment was ran on KR-I, whose MME sends paging
messages to all eNodeBs (see Section VI-D for more details).
Therefore, we believe this rate must be higher than that of
other carriers. For example, US-II during the pick time has
around 40 paging messages per second. Figure 11(a) shows
Nmin when we adopt these values to the derived equation,
including the two times higher paging rate. As expected, when
the paging message rate is high, the attacker needs to make
more silent calls. For carriers using the one byte fixed rule, the
attacker can locate the victim using only 5 silent calls during
the night, whereas 12 silent calls are needed during the day.
In addition, if the carrier uses the two or three bytes fixed rule,
Nmin is less than 5 in all cases.
Next, we apply the constraints that reflect the practical
environment for the derived probability. By monitoring the
paging channel, we observe that the GUTI values are not
distributed uniformly. They are duplicated with each other at
the byte level, and some are even reused. We consider this
by defining the GUTI utilization as the ratio of actually used
GUTI values to all possible GUTIs. For example, if the number
of actually used GUTIs in the TA is 230 among 232 values,
the utilization is 0.25. Figure 11(b) shows that low utilization
makes it difficult for the attacker to determine the victim’s
GUTI. We set the paging message rate as 88 messages per
second in this evaluation. Interestingly, the cases of two and
three bytes fixed rules still show low Nmin.
Through probabilistic analysis, we confirm that knowledge
about the partially static GUTI is a big threat. Except when
carriers use the one byte fixed rule, the attacker can easily
locate the victim with a small number of silent calls that take
12
Fig. 12: Worst case simulated attack success rate in KR-I
environment
only 2 min.
2) Practical analysis: Next, we analyze the effectiveness
of each attack with three GUTI allocation rules in a real-
world environment. As in probabilistic analysis, we measure
the number of silent calls required to leak the victim’s location.
Toward this end, we perform the attack every second on the
recorded dataset to reflect a practical environment. We then
measure the number of silent calls required where the number
of candidate GUTIs is zero in each attack; this represents
the number of calls needed to successfully expose the user’s
location. Note that
this simulation checks the worst-case
condition. In a real attack, the probability that the repeated
pattern matches the duplicated case is extremely small. We
run the simulation for three carriers using three different
GUTI allocation rules (one, two, and three bytes fixed) by
assuming that the dataset follows all rules. The total number
of experiments is 64,471 over 18 h for each method with three
GUTI allocation rules.
Figure 12 shows the success rate over the number of silent
call trials for attacks with three GUTI allocation rules. The
success rate for a given number of silent calls is the ratio of
successful cases to the total number of attempts within the given
number of silent calls. The result implies that the attacker could
locate the victim with less than five silent calls for carriers
using the two or three bytes fixed rule. For the carrier using the
one byte fixed rule, 90% of attacks are successfully conducted
within 15 silent calls, taking less than 7 min to locate the
victim.
We note that the paging message traffic influences the
success rate. We run the same experiment as the previous one,
but monitor two times the number of paging messages relative
to before. Carriers using the two or three bytes fixed rule are
not significantly affected by the paging request rate 9. In the
worst case, when the victim’s pattern matches the remaining
ones, attackers might face difficulties in locating victims whose
GUTI have been allocated by the one byte fixed rule. However,
in practice, the number of calls required must be much smaller.
Note that we ran the experiment in which the carrier does not
use the one byte fixed rule.
D. Impact of Paging Coverage on Location Tracking
The commonly shared assumption on location tracking
attacks [20], [30] is that MME sends the paging message to the
9Owing to the slight change, we omit the results in Figure 12
051015201 byte fixed2 bytes fixed3 bytes fixedMinimum RequiredCall Trial5 paging / sec88 paging / sec160 paging / sec01020301 byte fixed2 bytes fixed3 bytes fixedMinimum Required Call Trial100%50%30%0%20%40%60%80%100%0510152025Attack Success Rate (%)Number of Silent Call One byte fixedOne byte fixed (2x paging messages)Two bytes fixedThree bytes fixedTA where the victim is located. Interestingly, we have observed
that the paging coverage for voice calls varies across carriers.
For example, the MME of KR-I sends the paging message to
all eNodeBs, implying that paging messages are broadcasted
to all TAs managed by the MME. This is mainly because the
carrier wants to improve the Quality of Service (QoS). This was
confirmed through interviews with KR-I. We believe that this is
an exceptional case, as paging eNodeBs in all TAs is quite an
expensive operation. The interviewee also believes that KR-I
provides exceptional QoS compared with other carriers. This is
an issue about the trade-off between the QoS of subscribers and
the network overhead. Even if increased signaling messages
on the network incur a processing overhead, configuring the
very large paging coverage increases the probability of success
of the first trial of paging request and reduces the call setup
time. Owing to this configuration, we saw the victim’s GUTI
in the TA where the victim is not located when the voice call is
triggered. As a result, this QoS configuration makes our attack
face difficulties in locating the victim because it increases the
number of false positives.
In addition, the large paging coverage restricts the precision
of the location tracking attack. Because of this coverage size
difference, subscribers who use carriers that send a paging
message to one TA can be located by the TA (normally
 600km2 in South Korea).
E. Impact of Victim’s Mobility on Location Tracking
Another shared assumption in location tracking attacks is
that the victim should be stationary within the paging coverage.
Of course, if the victim is moving inside the paging coverage,
an attacker can specify the TA where the victim is located.
However, if the victim is moving across multiple TAs, the
attacker cannot locate the victim because the paging message
cannot be seen at the TA where the victim existed previously.
One promising result is that our attack model can locate the
victim within a few minutes. Therefore, unless the victim is
moving with high speed or crossing TA boundaries repeatedly,
the attack procedure can be finished before the victim moves
to another TA.
One possible workaround for this mobility issue could be
having multiple paging message listeners over multiple TAs
if the GUTI allocation pattern is maintained after moving to
another TA 10. In this approach, the attacker should monitor
GUTIs over multiple TAs simultaneously; however, this requires
additional cost to setup paging message listeners. Moreover,
the number of monitored GUTIs increases in proportion to the
number of listeners; this requires making more silent calls.
VII. SOLUTION
In this section, we present a secure GUTI allocation logic
that hides the binding between the subscriber and the temporary
identifier. Note that we only focus on the reallocation of GUTI
(more precisely, M-TMSI). In other words, there could be side
10Theoretically, we expect that the GUTI allocation pattern will not be
changed; however, we do not investigate it in this paper. This will be examined
in future work.
channels other than the identifier itself. We believe this is
beyond the scope of this work and leave this issue for future
work. We first outline the five requirements for the logic derived
from the above results discussed in previous sections and from
3GPP standards. We then present our design that meets these
requirements. Lastly, we discuss the solution (Solutions #7.23
and #7.24) contained in the report from 3GPP [1].
A. Requirement
By analyzing the dataset we collected and associated 3GPP
standards, we identified five key requirements for secure GUTI
reallocation.
R1: Frequent refreshing of temporary identifier. As de-
scribed in Section VI and in previous studies [20], [30], static
or unchanging temporary identifiers allow an attacker to launch
location leakage attacks on a victim. If the network reallocates
temporary identifiers frequently, the attacker faces difficulties
in tracking it and mapping it to a subscriber. This requirement
is not different from that suggested in previous studies [1],
[20], [30].
R2: Unpredictable Identity Allocation. To prevent an attacker
from mapping the subscriber to his/her temporary ID, the next
temporary identity that is assigned should be unpredictable.
Specifically, note that all bits should be unpredictable. For
example, if the victim’s next identity value has a bit value
overlapping with the previous identity, the attacker can find
the mapping between the user and the identity by using only a
few paging triggers (see Section VI).
R3: Collision Avoidance. The assigned identity should differ
from the identities of other subscribers. This is because GUTI
must be unique for each MME according to the 3GPP standard
(see Figure 2). GUTIs from two MMEs must be different,
because at least the MMECs are different. The network should
check the use of identities when assigning a new one to a
subscriber. Note that GUTI is reassigned only when GUTI
reallocation is performed. Therefore, when a UE goes offline
without sending a Detach request, its GUTI must not be
assigned to others.
R4: Stress-testing Resistance. Temporary identity reallocation
should not be omitted even if the mobile device or network is
stressed. As described in Section V, performing a stress test
led the UE to reuse the same GUTI, as GUTI reallocation was
omitted.
R5: Low Cost Implementation. The solution must not incur
significant computational and memory-related overhead to fulfill
the above requirements.
B. A Secure GUTI Allocation Logic
Our main approach is to generate unpredictable secure
pseudorandom bits. Many pseudorandom number genera-
tors (PRNGs) are known to not pass statistical randomness
tests [33]. A cryptographically secure PRNG (CPRNG) does
not have a polynomial time algorithm capable of predicting
the k + 1-th bit with probability greater than 50% even
if given a random sequence of k bits. This means that it
is difficult to predict the next number even if the attacker
knows the preceding sequence of numbers. For CPRNG,
provably secure algorithms such as Hash_DRBG could be
13
TABLE IV: Notations for Identity Generation Algorithm
Hash