### Fault Injection and Error Manifestation Analysis

In this study, fault injection was performed on the target system using 78 FIUs (Fault Injection Units). Each FIU was used to inject 40 faults. The DP32 processor, operating at a 50 MHz clock, was the subject of these experiments. All faults were injected with an average duration of 150 ns, following an exponential distribution.

#### Experimental Setup
- **Fault Injection**: 78 FIUs, each injecting 40 faults.
- **Processor Clock**: 50 MHz.
- **Fault Duration**: Exponentially distributed with an average of 150 ns.

#### Error Manifestation Latencies
Table 4 below shows the error manifestation latencies for different observation points, measured in clock cycles.

| Workload        | Observation Point  | Min  | Max  | Mean | Median | Std  | # of Manifested Errors | Total # of Errors |
|-----------------|--------------------|------|------|------|--------|------|-----------------------|-------------------|
| Bubble-sort     | Register File      | 1    | 2978 | 1324.6 | 1455  | 796.1 | 1754                  | 1751              |
| Inverse Matrix  | ALU output lines   | 0    | 462  | 152.66 | 531  | 112.31 | 1592                  | 1739              |
|                 | IR                 | 1    | 2126 | 896.5 | 1420  | 358.09 | 1254                  | 1025              |
|                 | PC                 | 0    | 638  | 85.38 | 89.80 | 308  | 1563                  | 1588              |
|                 | CC                 | 1    | 638  | 44.61 | 929  | 209.70 | 1240                  | 836               |

#### Simulation and Emulation Results
The experimental results for the purely simulated model and the partitioned model (where the ALU was moved to the emulator) did not differ significantly. This is because the communication between the simulator and the emulator was designed to make the entire system behave like a single, unified simulator.

To evaluate the speed-up achieved by the presented method, the same fault injection campaigns were conducted using both a purely simulated model and the hybrid simulation-emulation approach. Table 5 summarizes the speed-ups observed for different workloads.

| Workload        | Pure Simulation Time [min] | Simulation-Emulation Cooperation Time [min] | Speed-up |
|-----------------|----------------------------|---------------------------------------------|----------|
| Bubble sort     | 12951                      | 219                                         | 59.14    |
| Inverse matrix  | 19149                      | 157                                         | 121.97   |

#### Summary and Concluding Remarks
This paper introduces:
1. A new fault injection approach based on the cooperation of simulation and emulation.
2. A fault injection tool, FITSEC, which supports the entire process of system design.
3. A case study where faults are injected into a structural model of a 32-bit processor.
4. A comparison between different fault injection approaches.

The experimental results demonstrate that the hybrid fault injection approach provides a significant speed-up, ranging from 59 to 122 times compared to simulation-based fault injection. The controllability feature of the hybrid approach allows for precise fault injection at specific locations and times, while the observability feature enables detailed tracing of error manifestations throughout the design.

Finally, the FITSEC tool, which supports both Verilog and VHDL languages, facilitates the entire system design process.

### References
[1] M. Abramovici, M.A. Breuer, and A.D. Friedman, *Digital Systems Testing and Testable Design*, Revised edition, IEEE Press, 1995.
[2] J. Aidemark, J. Vinter, P. Folkesson, and J. Karlsson, "GOOFI: Generic Object-Oriented Fault Injection Tool", in *Proc. Int'l Conf. Dependable Systems and Networks*, 2001, pp. 83-88.
[3] J. Arlat, M. Aguera, L. Amat, Y. Crouzet, J.C. Fabre, J.C. Laprie, E. Martins, D. Powell, "Fault injection for dependability validation: a methodology and some applications", *IEEE Trans. Software Engineering*, vol. 16, no. 2, 1990, pp. 166-182.
... (Additional references follow)

---

This revised version aims to improve the clarity, coherence, and professionalism of the original text.