ing node j, and d is the node identiﬁer length.
Since nodes in the system are removed with probability
q, there are (1 − q)N or pN nodes that survive on average.
In step 5, the formula for calculating the routability, r, of
the system under uniform failure probability q is given as
Proceedings of the 2006 International Conference on Dependable Systems and Networks (DSN’06) 
0-7695-2607-1/06 $20.00 © 2006 IEEE 
h n(h) Pr(Sh, Sh+1)
(cid:2)
(cid:2)
(cid:2)
(cid:3)
(cid:3)
(cid:3)
3
1
3
2
3
3
1
2
3
1 − q3
1 − q2
1 − q
Figure 1. Here we
illustrate the reachable
component method us-
ing an 8-nodes hyper-
cube.
Figure 2. We select node 011
to be the root of the routing
graph. The symmetry of the
system means that each node
will be the root of a routing
graph with identical structure.
Figure 3. For illustration purpose, we examine how
011 routes a message to 100. Note that three choices
exist for the ﬁrst hop, 2 choices exist for the second hop
and only one choice left for the last hop. For this exam-
ple, p(h, q) is: p(3, q) = (1 − q3)(1 − q2)(1 − q).
follows:
r =
Mrp
Mp
=
(cid:4)
pN(cid:1)
(cid:2)(cid:4)pN(cid:5))
i=1
(cid:5)
(cid:3) ≈
Si
2
2
E
pN(cid:1)
E[Si]
pN(pN − 1)
i=1
=
E[S]
(pN − 1)
(1)
where Mrp denotes the expected number of routable pairs
among surviving nodes, and Mp is the expected number of
all possible pairs among surviving nodes. Note that the last
equality follows from the observation that DHTs investi-
gated in this paper have symmetric nodes. Therefore, the
routing topology of each node is statistically identical to
each other. Thus, all Si’s are identically distributed for all
i’s: E[S] = E[Si] ∀i.
4.2 Using the Hypercube Geometry as an
Example
A simple application of the RCM method is illustrated
for the CAN hypercubic routing system in Fig. 1-3. The
RCM steps involved are as follows:
Step 1. As reviewed in section 3, in a hypercube routing
geometry [15], the distance (in hops) between two nodes is
their Hamming distance. Routing is greedy by correcting
bits in any order for each hop.
Step 2. Thus, for any random node i in a hypercube routing
system with identiﬁer length of d bits, we have the follow-
ing distance distribution: n(h) =
. The justiﬁcation is
immediate: a node at h hops away has a Hamming distance
of h bits with node i. Since there are
ways to place the
h differing bits, there are
nodes at distance h (see Fig.
2).
(cid:3)
(cid:2)
(cid:2)
(cid:2)
(cid:3)
(cid:3)
d
h
d
h
d
h
i
Step 3. The routing process can be modeled as a discrete
time Markov chain (Fig. 3 and 4(b)). The states S(cid:6)
s of
the Markov chain correspond to the number of corrected
bits. Note that there are only two absorbing states in the
Markov chain: the failure state F and the success state (i.e.
Sh). Thus, the probability of successfully routing to a target
node at distance h hops away is given by the probability of
transitioning from S0 to Sh in the Markov chain model:
p(h, q) = Pr(S0 → S1 → ... → Sh)
= Pr(S0 → S1)Pr(S1 → S2)...Pr(Sh−1 → Sh)
= (1 − qh)(1 − qh−1)...(1 − q)
=
(1 − qm)
(2)
Step 4. Thus, the expected size of the reachable component
is given as:
h(cid:6)
m=1
d(cid:1)
(cid:7)
d(cid:1)
(cid:8) h(cid:6)
d
h
(1 − qm)
E[S] =
n(h)p(h, q) =
h=1
h=1
m=1
Step 5. Using Eq. 1, we obtain the analytical expression for
routability:
d(cid:1)
h=1
n(h)p(h, q)
(cid:8) h(cid:6)
(cid:7)
(1 − q)2d − 1
d(cid:1)
d
h
(1 − q)2d − 1
m=1
h=1
r =
=
(1 − qm)
(3)
(4)
Proceedings of the 2006 International Conference on Dependable Systems and Networks (DSN’06) 
0-7695-2607-1/06 $20.00 © 2006 IEEE 
S0
1-q
S1
1-q
q
q
S2
1-q
q
F
1-q
Sh-1
q
1-q
Sh
S0
h
1-q
S1
1-q h-1
h
q
h-1
q
S2
1-q h-2
h-2
q
1-q 2
Sh-1
q
1-q
Sh
F
(a) Tree
(b) Hypercube
Figure 4. The above diagrams illustrate the Markov chain model of the routing process to a target at distance h hops from the
root node. Note that there are only two absorbing states in these Markov chains: the failure state (denoted by F ) and the success
state (denoted by Sh). (a) Markov chain model for tree routing: The S(cid:1)
is represent the states that correspond to number of corrected
ordered bits. At each Si, the neighbor that will correct the leftmost bit must be present in order for the message to be routed.
Otherwise, the message is dropped and routing fails. Thus, the transition probability from Si to Si+1 is 1 − q, while the transition
probabilities to the failure state is q. (b) Markov chain model for hypercube routing: Here, the S(cid:1)
is represent the states that correspond
to number of corrected bits in any order. The transition probabilities are obtained by noting that at state Si, there are h− i neighbors
to route the message to.
4.3 Summary of Results for other Routing
Geometries
Using the RCM method, the analytical expressions for
the other DHT routing geometries can be similarly derived
as for the hypercube routing geometry.
In all the deriva-
tions, the majority of the work involves ﬁnding the expres-
sion for p(h, q) through Markov chain modeling. Note that
the analytical expressions derived in this section are com-
pared with the simulation results obtained by Gummadi et
al. [2] in Fig. 6(a) and 6(b).
For ease of exposition, we will use the notation G(i, j),
which denotes the probability that, starting at state i,
the Markov chain ever visits state j. By any of the
Markov chain models for the routing protocols, we note that
G(S0, S1) = 1 − Q(h), G(S1, S2) = 1 − Q(h − 1), and
so forth, where the function Q(m) can be thought of as the
probability of failure at the mth phase of the routing pro-
cess. As a result, all of the DHT systems under study have
the property that the probability of successfully traveling h
hops or phases from the root node, p(h, q), is given by the
following common form:
p(h, q) = G(S0, S1)G(S1, S2)...G(Sh−1, Sh)
=
(1 − Q(m))
(5)
h(cid:6)
m=1
Using Eq. 3, we see that only the expressions for n(h) and
Q(m) are needed to compute the routability of the DHT
routing system under investigation. As a result, we will only
provide the n(h) and Q(m) expressions for each system for
conciseness.
4.3.1 Tree
(cid:2)
(cid:3)
d
h
For the tree routing geometry, the routing distance distribu-
tion, n(h), is
by inspection. Furthermore, it is sim-
ple to show that p(h, q) = (1 − q)h by examining the
In sum, the ex-
Markov chain model (see Fig. 4(a)).
pression for routability can be succinctly given as follows:
r = (2−q)d−1
(1−q)2d−1
Proceedings of the 2006 International Conference on Dependable Systems and Networks (DSN’06) 
0-7695-2607-1/06 $20.00 © 2006 IEEE 
1-q
1-q
1-q
1-q
Sh
.
.
.
S2
1-q
S1
1-q
S0
. . .
         h-2
q(1-q     )
         h-1
q(1-q     )
         h-3
q(1-q     )
 1
 1
qh-1
 1
 2
qh-2
q(1-q)
. . .
qh-3
 1
 h-2
q
         h-2
q(1-q     )
 0
 1
qh
 0
 2
qh-1
q(1-q)
. . .
qh-2
 0
h-1
q
F
(a) XOR Routing under Failure
(b) XOR Markov Chain Model
Figure 5. (a) Illustration of XOR routing under failure: in this simple example, node 010 tries to route a message to node 101.
However, its ﬁrst neighbor 111 (i.e. the randomly chosen node that ﬂips the ﬁrst bit and chooses random bits for the rest of the
identiﬁer bits), has just failed. As a result, the message is routed to node 010’s second neighbor, node 000, correcting a lower
order bit. Now, node 000’s ﬁrst neighbor, node 110, is available, and node 110’s second neighbor, node 100, is also available.
Consequently, the message is routed to the destination node 101, by following the dashed arrows in the diagram. (b) Markov chain
model for XOR routing: this diagram illustrates routing to a target located at h phases in distance, which is equivalent to correcting
h bits in order (left to right). The S(cid:1)
is denote the states that correspond to the number of corrected ordered bits, which is equivalent
to the number of phases advanced. The states (i, j) denote a state that corresponds to j suboptimal hops taken after advancing i
phases.
4.3.2 XOR
As reviewed in section 3, connecting to a neighbor at an
XOR distance of [2d−i, 2d−i+1] is equivalent to choosing a
neighbor by matching the ﬁrst (i-1) bits of one’s identiﬁer,
ﬂipping the ith bit, and choose random bits for the rest of
the bits. Note that this is equivalent to how neighbors are
chosen in the Plaxton-tree routing geometry. As a result,
the n(h) expression is given as: n(h) =
just as in the
tree case.
(cid:2)
(cid:3)
n
h
Now, let’s examine how the Markov chain model (Fig.
5(b)) is obtained: in this scenario, a message is to be routed
to a destination h phases away; starting at state S0, state S1
is reached if the optimal neighbor correcting the leftmost
bit exists, which happens with probability 1− q (Si denotes
the state that corresponds to the ith advanced phase). How-
ever, if all h neighbors have failed (i.e. with probability
qh), the failure state F is entered. Otherwise, the rout-
ing process can correct one of the lower order bits, which
happens with probability q(1 − qh−1). Note that there is
a maximum number of h − 1 lower order bits that can be
corrected in the ﬁrst phase. All other transition probabil-
ities can be obtained similarly. By inspecting the Markov
chain model, we note that G(S0, S1) = 1 − Qxor(h),
G(S1, S2) = 1 − Qxor(h − 1), and so forth, where the
function Qxor(m) is deﬁned as follows:
m−1(cid:1)
k=1
m−1(cid:6)
j=m−k
Qxor(m) = qm +
qm[
(1 − qj)]
(6)
q
≈ qm(m +
1 − q (qm−1(m − 1) − 1 − qm+1
1 − q
The approximation is obtained by invoking the following:
1 − x ≈ e−x for x small.
))
4.3.3 Ring
A similar Markov chain model can be constructed for the
Symphony routing geometry. We will simply give the re-
sults due to space constraints (see [5] for detail derivation):
Qring(m) = qm
2m−1−1(cid:1)
[q(1 − qm−1)]k
= qm 1 − [q(1 − qm−1)]2m−1
1 − q(1 − qm−1)
k=0
Proceedings of the 2006 International Conference on Dependable Systems and Networks (DSN’06) 
0-7695-2607-1/06 $20.00 © 2006 IEEE 
100
90
80
70
60
50
40
30
20
10
s
h
t
a
p
d
e
l
i
a
f
f