# Federation and (down to) Earth

## What You Need to Know

### How Does It Work?

1. **Authentication to Identity Provider (IdP):**
   - The user authenticates to the IdP using either Kerberos or a username/password combination.

2. **Redirect with Security Token:**
   - After successful authentication, the user is redirected back to the web application via an HTTP POST request, which includes a security token.

3. **User Experience:**
   - **Happy User:** No need to remember multiple passwords.
   - **Happy Administrator/Developer:** Easier management of user identities and access.

### Additional Features

- **Federation:** Sharing of identity between domains (MDSSO).
- **Delegation:** Maintenance of identity for backend services.
- **Directory Information Distribution:** Enables Attribute-Based Access Control (ABAC), which is an extension of Role-Based Access Control (RBAC).
- **Cloud Suitability:** SAML is suitable for cloud environments, making it ubiquitous.

### WS-Federation [6]

- **Approved OASIS Specification:**
  - Defines mechanisms for different security realms to federate.
  - Allows authorized access to resources managed in one realm to principals whose identities and attributes are managed in other realms.
  - Includes mechanisms for brokering identity, attribute, authentication, and authorization assertions between realms.

- **Security Considerations:**
  - Chapter 16: Compromised services.

### Brokered Federation Model

- **Trust Through a Central Broker:**
  - Establishes trust between many Identity Providers (IdPs).
  - Challenges:
    - How is trust established?
    - Can all IdPs be trusted?
    - How are standards maintained?

### Multiple Identity Providers

- **User Accounts:**
  - Users can establish accounts with multiple IdPs, each serving a different function (e.g., bank, government, reputation management).

### SAML Security Papers

- **On Standards:**
  - "Security Analysis of the SAML Single Sign-on Browser/Artifact Profile" [7]
  - "SSTC Response to Security Analysis of the SAML Single Sign-on Browser/Artifact Profile" [8]
  - "Security and Privacy Considerations for the OASIS Security Assertion Markup Language (SAML) V2.0" [9]

- **On Implementation Issues:**
  - "Armando & Al - Breaking the SAML-based Single Sign-On for Google Apps" [10]
  - "B. Hill - Attacking XML Security - Black Hat US 2007" [3]

### SAML Use Cases and Limitations

- **OASIS SAML V2.0 Technical Overview (draft 3 and 10) [sic]:**
  - Use Case No.1: "Limitations of Browser Cookies"
  - Driver of SAML Adoption No.1: "Multi-Domain SSO"
  - True Issue: Browser cookies are not transmitted between DNS domains, and SAML solves this problem.
  - Potential for Security Issues: Can a bad actor steal cookies? This remains a concern.

### Implementation Security

- **The Good:**
  - Token encryption
  - Replay attacks usually addressed by default

- **The Bad:**
  - Unsigned LogOut Request accepted
  - TargetAudience attribute not verified

- **The Ugly:**
  - Open redirection vulnerability
  - Cookie stealing

### Sharpen Your Weapons

#### Outline

1. **Prelude to Federation:**
   - Introduction

2. **Forward the Federation:**
   - Where we come from

3. **Federation:**
   - What you need to know

4. **Federation and Empire:**
   - Sharpen your weapons

5. **Federation’s Edge:**
   - Design assessment

6. **Federation and (down to) Earth:**
   - Conclusion

#### Tools

- **Tool Set:**
  - Combination of commercial tools (Pro/Community edition)
  - Free and Open Source Software (FOSS) [13]
  - Custom scripts

- **Methodology:**
  - Procedures (formal or custom)
  - Generally accepted best practices [14][15]
  - Habits and personal preferences [16]
  - Manual, ad-hoc, and improvised steps

#### Adapt Your Toolset

- **Proper Use of Tools:**
  - Time constraint
  - Traditional assessment of Web apps and services protected by SAML tokens
  - Configuration of such architectures is crucial yet complex and error-prone
  - Need tools to ensure good configuration settings are effective

#### Existing SAML-Oriented Helpers

- **UNINETT Beta SAML Tracer [17]:**
  - Firefox plugin for viewing SAML messages during single sign-on and single logout

- **Feide RnD SAML 2.0 Debugger [18]:**
  - Online application to encode/decode SAML messages

- **Federation Lab Beta (GÉANT3 Identity Federations) [19]:**
  - Online automated checks on Service Provider (SP) implementation

- **Manual Approach:**
  - Burp decoder
  - Python, Ruby

#### Fed Lab Service Provider Test

- **Against an out-of-the-box "Hello World" SP SimpleSAMLphp based:**

#### Decoding / Encoding

- **Automation:**
  - Gain of automation
  - Easy semantic understanding
  - Relevant request mangling
  - Thwarts anti-replay safeguards (e.g., unique random nonce)
  - Updates timestamps (long scans can unfold)

#### Pre & Post Processing

- **Approach:**
  - Similar to WCF Binary SOAP [23]
  - Proxy chaining
  - Preprocessing (decoding requests / encoding responses)
  - Scanning (fuzz, mangle, do stuff...)
  - Postprocessing (encoding requests / decoding responses)

#### Illustration with Burp Pro Suite

- **Burp Pro Suite [24] Extender:**
  - Java API to extend Burp Suite functionalities
  - Bindings for Python and Ruby (Buby [25])
  - Tutorial: [26]
  - Hook either evt proxy message or evt http message
  - POC: Buby modules and sample code at http://code.google.com/p/buby-saml
  - Commands:
    - `buby -r SAML_preprocessing -e ReqTamperer`
    - `buby -r SAML_postprocessing -e ReqTamperer`

#### Example of Vulnerabilities

- **Open Redirection [27]:**
  - Example: `http://www.vulnerable.com/?redirect=http://www.attacker.com`
  - Not critical but built into the standards
  - Cookie theft: Works even if the victim has not chosen the "Remember" option
  - Demo: Make the SP leak the `idpdisco saml lastidp` cookie, even if `cookie idpdisco saml remember = 0`
  - If a user visits the attacker's site, the attacker can discover the user's IdP (originating organization).

#### Demo: SimpleSAMLPHP Open Redirect

- **When an open redirect leads to cookie theft:**
  - Leveraging an existing live, open-to-everyone test environment
  - Feide [28]: Norwegian academic Federation
  - On a dummy account: `home realm cookie=https://openidp.feide.no`

---

**E. Bouillon**  
*Federation & Empire*  
*Prelude to Federation*  
*Forward the Federation*  
*Federation*  
*Federation and Empire*  
*Federation’s Edge*  
*Federation and (down to) Earth*