title:Leakage-Abuse Attacks against Order-Revealing Encryption
author:Paul Grubbs and
Kevin Sekniqi and
Vincent Bindschaedler and
Muhammad Naveed and
Thomas Ristenpart
2017 IEEE Symposium on Security and Privacy
Leakage-Abuse Attacks against Order-Revealing Encryption
Paul Grubbs∗, Kevin Sekniqi†, Vincent Bindschaedler‡, Muhammad Naveed§, Thomas Ristenpart∗
∗Cornell Tech †Cornell University ‡UIUC §USC
Abstract—Order-preserving encryption and its generaliza-
tion order-revealing encryption (OPE/ORE) allow sorting,
performing range queries, and ﬁltering data — all while only
having access to ciphertexts. But OPE and ORE ciphertexts
necessarily leak information about plaintexts, and what level
of security they provide in practice has been unclear.
In this work, we introduce new leakage-abuse attacks
that recover plaintexts from OPE/ORE-encrypted databases.
Underlying our new attacks is a framework in which we cast
the adversary’s challenge as a non-crossing bipartite matching
problem. This allows easy tailoring of attacks to a speciﬁc
scheme’s leakage proﬁle. In a case study of customer records,
we show attacks that recover 99% of ﬁrst names, 97% of last
names, and 90% of birthdates held in a database, despite all
values being encrypted with the OPE scheme most widely used
in practice.
We also show the ﬁrst attack against the recent frequency-
hiding Kerschbaum scheme, to which no prior attacks have
been demonstrated. Our attack recovers frequently occurring
plaintexts most of the time.
I. INTRODUCTION
Due to frequent data breaches and broad interest in out-
sourcing data to the cloud, companies increasingly want
to encrypt sensitive information before storing it in local
databases or uploading to services operated by third parties.
Standard encryption mechanisms would, however, reduce
the value of these databases and services by preventing
them from doing useful operations on the data. A seeming
solution is to use so-called property-revealing encryption
(PRE) schemes that allow limited operations over ciphertexts
by making public speciﬁc properties of plaintexts. Systems
based on PREs are already used in industry [3, 13, 36, 43]
and increasingly studied in the academic literature [3,20,24,
28, 38, 39].
A widely desired property to preserve is order. This allows
sorting, as well as range and preﬁx search queries, which
are needed to support other server-side operations. Order-
preserving encryption (OPE) [1, 5] ensures that Ek(m1)  p1.
We observe that the adversary’s goal can be cast as a
classic graph problem: a min-weight non-crossing bipartite
matching. One set of nodes consists of ciphertexts and the
other possible plaintexts, and the edges are weighted using
frequency information. Non-crossing refers to the fact that
we want the solution to abide by the adversarially known or-
dering constraints. Unlike the NKW attack, our non-crossing
attack takes fuller advantage of frequency and order infor-
mation. We use a classic algorithm [32] to solve the min-
weight non-crossing matching problem, and its runtime is
both asymptotically and concretely better than the NKW
approach.
We show that our non-crossing attack achieves signiﬁ-
cantly better accuracy, for example it recovers on average
84% of ﬁrst names in our target encrypted datasets, about
a 2x improvement over NKW. High-frequency plaintexts are
particularly at risk: our attack recovers on average 95% of
the 20 most frequent ﬁrst name plaintexts, and 88% of the
20 most frequent last names. The non-crossing attack runs in
only a few hours, even for the largest target dataset, where
the induced matching problem has over 17 billion edges.
Exploiting further leakage. The attacks so far are generic,
and do not take advantage of the additional leakage exhibited
by the OPE schemes used in practice. The most widely used
scheme is due to Boldyreva, Chenette, Lee, and O’Neill
(BCLO) [5], because it is fast, easy to deploy, and has
ciphertexts that are only a few bits longer than plaintexts. It’s
been proven secure in the sense of indistinguishability from
a random order-preserving function, but this provides only
modest guarantees: prior work has shown that for a uniformly
chosen plaintext, the corresponding ciphertext leaks almost
the entire ﬁrst half of the plaintext [6]. Despite widespread
deployment of BCLO, the implications of this leakage for
real datasets has not been studied.
We rectify this, showing that in practical scenarios using
the BCLO scheme to encrypt a set of ﬁrst names, for exam-
ple, allows an attacker to recover almost half the data set.
The leakage is even worse for last names, with almost 97%
of last names trivially recoverable. A key issue making this
leakage so damaging is that varying-length plaintexts must
be padded to the maximum length plaintext, ensuring that
shorter messages completely reside in the leaked ﬁrst half
of the padded plaintext. We emphasize that exploiting this
leakage does not require mounting an inference attack, rather
an adversary simply can inspect ciphertexts, perform a few
elementary calculations, and produce (most) plaintexts.
That said, our graph-based viewpoint on inference attacks
allows us to easily combine this leakage with inference to
improve recovery rates further. We adapt our non-crossing
attack to ﬁrst compute the leakage implied by [6], use it
to exclude matchings that cannot occur, and then solve the
resulting, narrower non-crossing matching problem. The re-
sulting attack allows us to recover on average 99% of ﬁrst
names, more than doubling the recovery rate over using the
BCLO leakage alone without inference.
We also apply our approach to exploit the leakage of the
more recent Chenette, Lewi, Weis, and Wu (CLWW) [12]
ORE scheme. The leakage of CLWW is different than that
of BCLO, and they argue that their scheme may be more
secure: CLWW prove that for uniform randomly distributed
messages, their scheme’s leakage is asymptotically less than
the BCLO leakage. They also propose that security may be
further improved by composing an OPE scheme with their
ORE scheme. We apply our framework to both the CLWW
scheme and the composition of BCLO with CLWW, and
show that, unfortunately, CLWW provides an equivalently
poor level of security as compared to BCLO in the settings
we consider. Interestingly, some plaintext distributions are
particularly bad for CLWW leakage: for example, our attack
656
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:24:38 UTC from IEEE Xplore.  Restrictions apply. 
against BCLO does not perform well on ZIP codes (achieving
12% recovery rate), but on CLWW our attack recovers 97%
of encrypted ZIP codes. Composition of the two schemes
does decrease attack accuracy, but is still far from providing
acceptable security.
Exploiting known plaintexts. Our attacks, as well as the
NKW attack, assumes a relatively weak adversary that only
obtains ciphertexts, but has no information about any speciﬁc
plaintext values. As we discuss in detail in the body, in real-
world deployments many systems relying on OPE/ORE offer
attackers the ability to mount known- or chosen-plaintext
attacks. We show how to extend our attack framework to
take advantage of known plaintexts by simply partitioning
the attack problem based on the known values and running
an attack against each resulting sub-problem independently.
As the BCLO and CLWW attacks already recover most
plaintexts, we see how well this partitioning approach would
help our generic non-crossing attack. Knowing some small
percentage of plaintexts provides a modest improvement for
ﬁrst names and last names, but a huge boost for birthdates
and ZIP codes.
Attacking frequency-hiding schemes. The attacks men-
tioned above work against schemes that at least leak both fre-
quency and order, but Kerschbaum [25] recently introduced
a scheme that hides frequency information. Here there is no
prior work, as the NKW attacks do not apply to frequency-
hiding schemes, and our non-crossing attack framework also
does not apply. We propose a new “binomial” attack that
performs reasonably well, recovering on average 30% of ﬁrst
names and 7% of last names. Notably, it recovers the majority
of high-frequency plaintexts (despite not having frequency
information leaked), suggesting these plaintexts are particu-
larly poorly protected by any order-revealing scheme.
Newer ORE schemes. The ORE schemes we consider have
been deﬁned as having a public, unkeyed, noninteractive
procedure the server can use to reveal the order relation-
ship between the underlying plaintexts of two ciphertexts.
Recently, a new line of work [16,30,41] explore schemes at a
different point in the design space. These schemes are more
similar to searchable symmetric encryption (SSE) in that a
user must generate a query-speciﬁc trapdoor, or complete
multiple rounds of interaction, to perform a range query on
ciphertexts. Unfortunately there are currently major impedi-
ments barring deployment of these schemes in practice (see
Section IX). Our results may encourage systems designers to
consider them in greater earnest.
Summary. We are the ﬁrst to explore the security of OPE
and ORE schemes when used with plaintext data types that
were, before our work, not known to admit attacks. What’s
more, our case study of customer data is representative of
common industry practice. Underlying our new results is a
framework for constructing attacks based on min-weight non-
crossing bipartite matching, which allow for easy extensibil-
ity in the face of leakage beyond frequency and order. Most
importantly for current industry practice, our results show,
for the ﬁrst time, how the leakage of the BCLO scheme
would enable recovery of essentially all plaintexts encrypted
in typical customer record databases. Suggested practical
alternatives such as the CLWW scheme, or the composition
of it with BCLO, do not fare much better. See Figure 1 for
a high level summary of our quantitative results for ﬁrst and
last names.
Our results offer guidance to practitioners about the secu-
rity level offered by OPE and ORE schemes. While obviously
using property-revealing encryption is better than leaving
data in the clear (in some settings the only viable alternative
currently), our work indicates that the security beneﬁts of
deployed schemes is quite marginal.
In terms of countermeasures, an obvious suggestion is to
move towards less leaky schemes, such as those that only
reveal order, including Kerschbaum’s scheme and the more
recent Boneh et al. scheme based on multilinear maps [7,
29]. Unfortunately in most settings there exists inherent
challenges to deployment of these schemes. Kerschbaum’s
scheme is relatively efﬁcient, but requires client-side state
which impedes scaling. The Boneh et al. scheme has cipher-
texts larger by 10 orders of magnitude than BCLO ciphertexts
and requires tens of minutes to compute encryptions. Even
so, our attack against such frequency hiding schemes shows
that for common use cases the high frequency plaintexts may