 **TypeScript Version:**
1.8.9
**Code**
With the following function
    function foo(a) {
      return a + 'hello';
    }
I'd expect that `typeChecker.typeToString` of `foo`'s type should yield `(a:
string) => string`.
Instead, it returns `(a: any) => string`.
Is this an issue of `typeToString`, or is the underlying Type object really
marks `a` as `any`?
If it's the former, how can I walk the Type object to generate the right
signature? A quick glance shows that a procedure type is "anonymous", and
holds an opaque reference of `target` and `mapper`, which doesn't shed light
on how to traverse the type objects. Is there a guide somewhere about the
types?
I'm trying to generate the type signature for run time contract checking, so I
need an accurate representation of the resolved type info.