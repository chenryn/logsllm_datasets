title:Tracking Darkports for Network Defense
author:David Whyte and
Paul C. van Oorschot and
Evangelos Kranakis
Tracking Darkports for Network Defense
Paul C. van Oorschot
School of Computer Science
Evangelos Kranakis
David Whyte
Carleton University, Ottawa, Canada
{dlwhyte, paulv, kranakis}@scs.carleton.ca
Abstract
We exploit for defensive purposes the concept of darkports
– the unused ports on active systems. We are particularly in-
terested in such ports which transition to become active (i.e.
become trans-darkports). Darkports are identiﬁed by pas-
sively observing and characterizing the connectivity behav-
ior of internal hosts in a network as they respond to both le-
gitimate connection attempts and scanning attempts. Dark-
ports can be used to detect sophisticated scanning activity,
enable ﬁne-grained automated defense against automated
malware attacks, and detect real-time changes in a network
that may indicate a successful compromise. We show, in a
direct comparison with Snort, that darkports offer a better
scanning detection capability with fewer false positives and
negatives. Our results also show that the network awareness
gained by the use of darkports enables active response op-
tions to be safely focused exclusively on those systems that
directly threaten the network.
1 Introduction
The Internet is saturated with “nonproductive” network
trafﬁc that includes an estimated 25 billion global intrusion
attempts per day [17, 33]. A precursor to most of these intru-
sion attempts involves some form of reconnaissance activity
to identify vulnerable systems or to determine the best point
of access into a target network. Automated tools method-
ically probe large blocks of Internet address space seeking
vulnerable systems for recruitment into botnets [8, 19, 5, 2].
Large numbers of worm-infected systems randomly scan the
Internet searching for susceptible systems to exploit. Per-
haps most worrisome for a network operator is when a de-
termined adversary directs speciﬁc scanning activity solely
against their network searching for weaknesses to provide
them with an entry vector. This type of reconnaissance is
typically precise, deliberate, and focused.
A variety of complex heuristics have been successfully
developed to detect scanning activity including the obser-
vation of connection failures [11, 23], statistical measures
[12, 25], abnormal network behaviors [28, 31, 6], and con-
nections to network darkspace [7, 14]. Current scanning de-
tection algorithms focus largely on observing and classifying
external network behavior (i.e. incoming network connection
attempts) to detect scanning systems, although many types
of sophisticated scanning techniques (e.g. botnet scanning,
slow scanning) make it difﬁcult or impossible to accurately
determine root-cause origins of scanning activity.
In contrast, exposure maps [29] were proposed to detect
scanning activity by passively observing legitimate trafﬁc
and attack scans (active scanning) directed at a target, and
especially observing how internal hosts respond to exter-
nal connection attempts. Preliminary investigation suggested
they were suitable for detecting sophisticated scanning ac-
tivity directed at an enterprise network, with greater interest
in what an adversary is searching for, than in who is scan-
ning the network. Successful connections to internal systems
would be characterized in exposure maps to deﬁne the cur-
rently active external interface to the network.
In contrast
to remote network security auditing techniques (e.g. Nmap
[9]), exposure maps were asserted to facilitate an efﬁcient,
low-effort method to identify network vulnerabilities, with
exposure status continually updated.
In this paper, we pursue these ideas and introduce dark-
ports which we deﬁne as unused ports (i.e. ports with no ser-
vice responding) located on active hosts. Darkports provide a
method to detect in real-time unauthorized service offerings
from a host; these may indicate a successful compromise
(e.g. a darkport suddenly starts to respond to a connection
request).
First, we validate a preliminary assertion from the posi-
tion paper [29] that exposure maps are very effective at de-
tecting both simple and sophisticated TCP scanning activity
directed at an enterprise network.
In a direct comparison,
the exposure map scanning detection capability was signiﬁ-
cantly better than the well-known Snort [22] (i.e. lower false
negative and positive rates and the ability detect additional
sophisticated scanning activity).
Secondly, we show that the identiﬁcation of darkports
during the construction of the exposure maps provides
network-centric knowledge enabling ﬁne-grained automated
responses, e.g. to identify and deny speciﬁc systems network
access when they are found to be performing scanning activ-
ity and thereafter trying to access a legitimate service in the
network (common behavior for autorooters and worms [18]).
This introduces the ability of selective automated response:
a focused real-time active response option that limits the in-
troduction of new access control rules to deny those scanning
systems directly threatening network assets (i.e. those target-
ing actual services offered by the network). We emphasize
the subtle point, that systems that scan for services not of-
fered by the network are simply identiﬁed (i.e. scan recorded)
but otherwise ignored (e.g. no access control rule introduced
to block the associated source IP address). This ability to
initiate selective automated response reduces network con-
ﬁguration changes, complexity errors (e.g. by avoiding a dra-
matic increase in router/ﬁrewall rules, and possibly leading
to a self-imposed denial of service), and avoids unnecessary
performance degradation of network security devices [4, 32].
Exposure maps and darkports differ from current scan-
ning detection techniques as they rely on identifying the ser-
vices offered by the network instead of tracking external con-
nection events. The result is a scanning detection technique
in which the utilized system detection state does not grow
in proportion to the amount and ﬂuctuation of external net-
work trafﬁc, but rather increases only with the number of
services offered by the network, regardless of the size of
the network and the external network activity. As an added
beneﬁt, maintaining information about internal hosts in the
network instead of external host activity provides the neces-
sary network-awareness to answer in real-time questions that
should be asked after a scan is detected, such as “What infor-
mation has been revealed as a result of the scan?”, and “Has
the network behavior changed?”
The remainder of this paper is organized as follows. Sec-
tion 2 reﬁnes the basic idea of exposure maps and darkports.
Section 3 discusses how exposure maps can be used for scan-
ning detection and automated response. Section 4 describes
our implementation, the evaluation dataset, and methodol-
ogy. Section 5 presents our evaluation results, including a
comparison to Snort, and discussion of advanced scanning
heuristics. Section 6 discusses the scalability and stability
of exposure maps, including resilience to attacks. Section 7
presents limitations of the technique. Section 8 reviews re-
lated work. We conclude in Section 9.
2 Exposure Maps and Darkports
We ﬁrst describe the constituent components of exposure
maps, how exposure maps are constructed and how they de-
ﬁne the darkports within the network. We focus on exposure
maps relative to TCP ports.
COMPONENT DESCRIPTION. Exposure maps passively
identify the services which have been conﬁrmed (using an
observed response during a training period) as being offered
by the hosts of a given network. TCP packets with the SYN
ﬂag set start the three-way connection handshake. When a
connection request is sent to a speciﬁc destination IP ad-
dress/port, if a service is bound to that port and the port is
listening (open), the target host response is a packet with
SYN ACK ﬂag set, to start a session. Listening services, be-
cause they respond to connection attempts or incoming pack-
ets, leak information to scanners; they typically correspond
to the active ports in a network and can be tracked in terms
of what we deﬁne below as the HEM and the NEM. Once
veriﬁed as permitted activity, the HEMs and NEM deﬁne the
authorized access to individual hosts and the network.
n
IPi
portj
More speciﬁcally, a host exposure map (HEM), associ-
ated with a ﬁxed IP address (host), is the set of ports ob-
served responding to external connection attempts within
a predeﬁned period. For each active host i in the net-
work, HEMi is a set of elements each of which begins
with the IP address of i, followed by a port number j;
there is such an element for each portj that has responded
In
to a connection attempt within a predeﬁned period.
symbols, we can abbreviate this as HEMi =
:
(cid:12)(cid:12)(cid:12) portj was observed responding
The HEM is the externally visible interface of a host and
can be considered to represent information leakage from the
host that may reveal characteristics that can be used to ex-
ploit it. Subsequent to the training period, as additional ports
respond to external connection attempts, by deﬁnition the
HEM is augmented by these ports.
o
.
N EMN =S
The network exposure map (NEM) is deﬁned as the col-
lection of HEMs in a given network N at any given point
in time. The NEM deﬁnes how we expect the network
to respond to external connection attempts.
In symbols,
i∈N HEMi. We will often drop the subscript
N in N EMN when the target network is implied by con-
text. This also allows the natural deﬁnition of N EMS for
any subnetwork S ⊂ N, i.e. where S is a subset of the
populated IP addresses in N.
In an implementation, once
the NEM has been built, the individual HEMs that comprise
it can be checked for compliance with the network security
policy. A NEM that complies with the network security pol-
icy is called a vetted NEM. We assume that any service (IP
address/port pair) not compliant with the network security
policy will, once detected, either be shutdown, or implicitly
becomes part of the security policy. Thus, movement from a
NEM to a vetted NEM is always possible.
We deﬁne the darkports on a given (real) host as those
ports that have not been observed offering any services, and
thus are not expected to accept external connection requests.1
The set of darkports for a host is the complement of its HEM.
The set of darkports for a network is the union of the dark-
ports on all its populated hosts. For example, a host with a
HEM of only three TCP ports 22, 80, and 443 would have
216 − 3 TCP darkports i.e., all TCP ports excluding these
three. If a darkport responds to an external connection at-
tempt, it becomes a trans-darkport. This occurs either when
1Although a connection attempt to any port at a darkspace IP address (no
hosts assigned) will not accept a connection attempt, we restrict the term
darkport to unused ports on a populated host address.
a host offers a new service (whether authorized or rogue),
or a connection is made to a service that was not accessed
during the training period. Either event causes the HEM to
expand, and by deﬁnition the NEM expands and will differ
from the vetted NEM. Once a trans-darkport is detected, this
change can be checked against the network security policy
so that the vetted NEM can be updated or any unauthorized
service can be stopped.
EXPOSURE MAP CONSTRUCTION AND MAINTE-
NANCE.
In summary, exposure maps are created by pas-
sively observing a target network’s responses to incoming
connection attempts (both legitimate connections and scan-
ning attempts) over a training period. Every time a host re-
sponds to an external TCP connection attempt, the IP address
and port of the host offering the service is recorded. During
the training period, each host in the network will reveal ser-
vices that it offers; the corresponding ports are recorded in
its HEM. After the training period, the vetted NEM can be
used to identify all the active hosts on the network by their
representative HEMs. Thereafter during ordinary network
operation, passive observation of network packets continues,
and for each connection attempt (i.e. each TCP SYN packet)
compliance with the vetted NEM is tested in real-time. If the
services offered by a host expand beyond the vetted NEM, an
alert is generated to provide notiﬁcation that trans-darkports
have been detected; this indicates that either the vetted NEM
needs to be updated, or some form of unauthorized activity
is occurring.
In general, an important consideration for any technique
that requires a training period is that any existing malicious
activity (e.g. unauthorized services) may become part of the
baseline.
In our particular case, a HEM can be veriﬁed
against an existing network security policy to detect any
unauthorized service offerings by the host. The required
length of the training period will vary with each network en-
vironment depending on a number of factors including num-
ber of active hosts, network security policy, permitted user
applications, and frequency of service usage; see Section 6
for further discussion.
3 Applications of Exposure Maps and Dark-
ports
Exposure maps provide network-centric knowledge to en-
able a variety of security applications including scanning de-
tection and automated response which are discussed in the
subsections below. 2
3.1 Scanning Detection Using Exposure
Maps
MOTIVATION. Panjwani et al. estimate that 50% of at-
tacks against systems are preceeded by some form of net-
2A third application for exposure maps, not presented in this paper due to
page limitations, is network discovery/asset classiﬁcation and is discussed
in [30].
work scanning activity [18]. Current scanning detection al-
gorithms are generally designed to identify and classify sus-
picious network activity as scanning activity using attribution
to a particular source or sources. These algorithms are ef-
fective at detecting wide-range reconnaissance activities that
can be deﬁned as the rapid scanning of large blocks of Inter-
net addresses in the search for a speciﬁc service or vulner-
ability. This is characteristic of autorooters [26] and worm
propagation. Autorooters are composite tools that augment
basic port scanning functionality by launching an attack as
soon as an open port is located on a target system [1]; they
are often used for the rapid enrollment of vulnerable systems
into botnets of tens or hundreds of thousands of compro-