User: I am reading reading path to the registry from a text file. The registry path is

HKEY_LOCAL_MACHINE\Software\MYAPP\6.3

I store this registry in a variable :

REGISTRY_KEY

Then I strip the HKEY_LOCAL_MACHINE part from the string and try to read the value at the key.

if REGISTRY_KEY.split('\\')[0] == "HKEY_LOCAL_MACHINE":
        keyPath = REGISTRY_KEY.strip("HKEY_LOCAL_MACHINE\\")
        try:
            key = winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, keyPath)
            value = winreg.QueryValueEx(key, "InstallPath")[0] 
        except IOError as err:
            print(err)

I get the  following error

[WinError 2] The system cannot find the file specified

However if I do it manually like

key = winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE,r'Software\MYAPP\6.3')

OR

key = winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE,"Software\\MYAPP\\6.3")

it works.
So is there any way I can make the keyPath variable to either be a raw string or contain double '\'
PS:I am using Python 3.3
Assistant: Your REGISTRY_KEY.strip() call is not doing what you think it's doing. It doesn't remove the string HKEY_LOCAL_MACHINE\ from the beginning of the string. Instead, it removes the characters H, K, E, etc., in any order, from both ends of the string. This is why it works when you manually put in what you expect.
As for your original question, a double backslash is an escape sequence that produces a single backslash in your string, so it is not necessary to convert keyPath to double slashes.