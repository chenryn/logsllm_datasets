### 4.1 Channel-Session Length

The length of channel-sessions is quantified by the \(a_i\) values. Similar observations can be made for on-sessions and off-sessions as well.

### 4.2 Modeling Time-Varying Rates

In the previous subsection, we used mixture-exponential models, which imply a constant-rate stochastic process with the mean event rate equal to \( \frac{1}{\sum_i \frac{a_i}{\lambda_i}} \). However, Figure 4 shows that the aggregate event rates for switching-on, switching-off, and channel-switches are highly variable, with many apparently periodic spikes. This variability highlights a subtle underlying independence assumption, which is often used in similar studies without careful validation. In reality, each individual user's activities are influenced by a common external process—TV program schedules—making their activities highly correlated and breaking the independence assumption.

In this subsection, we incorporate the impact of the external process by modeling the aggregate event rates shown in Figure 4. Given the complexity of these rates in the time domain, which would require an overwhelming number of parameters to characterize, we approach the problem from the frequency domain. We apply the Fast Fourier Transform (FFT) to the event time series and present the results in Figure 9. The structure becomes clear, showing distinct spikes at frequencies corresponding to 1 hour, 30 minutes, 15 minutes, etc., and a gradual decrease in power level (y-axis) from low to high frequencies.

We approximate the ambient power level using the Weibull distribution, whose probability density function is:
\[ f(x; k, \mu) = \frac{k}{\mu} \left( \frac{x}{\mu} \right)^{k-1} e^{-(x/\mu)^k} \]
where \(k\) and \(\mu\) are model parameters. The Weibull distribution is chosen because it can approximate a wide range of functions, including exponential, normal, and lognormal, with just two parameters. The best-fitting model parameters for our data traces are reported in Table 2.

Using only a small number of parameters (\(k\), \(\mu\), and the values for the spikes in the frequency domain), we can generate the frequency domain function and apply the inverse FFT to reconstruct the time series. To determine the optimal number of spikes to include in the model, we use the mean squared error between the empirical trace and our modeling output, as shown in Figure 11. The discrepancy becomes negligible when we choose 2 spikes for switch on/off and 3 spikes for channel switch. These values are used in the rest of the paper.

Figure 10 compares the real trace (top) and the result from our model (bottom). The match is very good, even with only 13 parameters (Table 2).

Finally, we define the time series function obtained from this process as our rate moderating function \(g(t)\), which models the impact of external TV program schedules on individual users' activity. Since \(g(t)\) is constructed from data in a given window \(W\) (in our example, \(W = 86,400\) seconds or 1 day), we repeat \(g(t)\) to make it a periodic function: \(g(t + W) = g(t)\). We also normalize \(g(t)\) such that \(\int_0^W g(t) dt = W\). Note that the periodic moderating function \(g\) does not impact the tail behavior of the session length distributions but does change the shape of the session length distribution at small durations, depending on the start time-of-day.

### 4.3 Modeling Channel Popularity Distribution

Section 3 observed that channel popularity is highly skewed. Motivated by the success of Zipf-like distributions in modeling skewed access frequencies in web and VoD systems, we examine the Zipf-like distribution for channel access frequencies. For a channel of popularity rank \(i\), the access probability is a power function of its rank \(i\). Figure 12 shows the channel access frequency as a function of the rank, along with the best-fit power law function and the best-fit exponential function. The Zipf-like distribution captures the top 10% of channels, while the exponential function fits the large "body" part of the distribution better.

The parameters for the Zipf-like distribution, \(f_1(i) = C_1 i^{-\alpha}\), are \(\alpha = 0.513\) and \(C_1 = 12.642\). The parameters for the exponential function, \(f_2(i) = e^{-\beta i} + C_2\), are \(\beta = 0.006\) and \(C_2 = 2.392\). In the rest of the paper, we use a hybrid model, approximating the top 10% of the channel popularity distribution using the Zipf-like power-law function and the remaining part using the exponential function. The probability density function can be expressed as:
\[ f_0(i) = \begin{cases} 
C_1 i^{-\alpha} / C_0 & \text{if } i < 10\% \text{ of available channels}, \\
e^{-\beta i} + C_2 / C_0 & \text{otherwise},
\end{cases} \]
where \(C_0\) is the normalization factor ensuring \(f_0(\cdot)\) is a well-defined density function.

The concatenated distribution function matches well for the top 600 popular channels, which account for over 97% of the channel switches (as shown in Figure 5).

Channel popularity in terms of channel access frequencies is only applicable to target-switching. For sequential-scanning, the channel number simply increments or decrements. We define the probability of a user entering target-switching mode as \(p_t\), which is 0.44 in our data. The probability of a user entering sequential-scanning mode is \(1 - p_t\). When in sequential-scanning state, a user switches to a higher number with the probability \(p_u\) (0.72 in our data) and to a lower number with \(1 - p_u\).

To align the channel ID with channel popularity, we adopt a simple random permutation method, shuffling the ranks of channel popularity and using them as channel IDs. This method, however, does not capture the subtle clustering effect in commercial channel listings, such as music channels being next to each other. Depending on the application, a detailed modeling of such effects may be of interest.

### 4.4 Modeling Channel Popularity Dynamics

The channel popularity model described in the previous section captures the skewness, which is relatively stable over large time scales (e.g., daily [15]). However, our data also show that channel popularity exhibits temporal patterns over the time-of-day (see Figure 7). While a stationary channel popularity model may suffice for many applications (e.g., network capacity planning analysis), some applications (e.g., evaluating P2P type content caching schemes for IPTV) may require a proper modeling of such dynamics. One way to model these dynamics is to observe the differences across multiple smaller time intervals (e.g., hourly granularity) and model the channel popularity in each small interval separately. Alternatively, we can try to understand the underlying structure producing such dynamics and model this underlying process.

In our recent work [15], we demonstrated that channel popularity dynamics can be well explained by groups of users with intrinsically different channel preferences who tend to watch TV at different times of the day. We divide STBs into multiple classes based on some feature. In [15], we compared different choices for such features. To model the daily dynamics of channel popularity, we choose the average daily watching time as our classifier because (1) the resulting subgroups exhibit distinct and stable channel preferences, and (2) the STBs in each subgroup tend to affiliate with the same subgroup over time. Specifically, we classify STBs using two thresholds.