(c) The length of channel-sessions
102
Real trace (log scale)
104
Figure 8: QQ plots comparing models and real traces
Table 2: Modeling parameters for event rates
Switching-on
Switching-off
Channel-switch
k
0.0036
0.0316
0.03840
μ
278
233
293
p1-hour
1.76
4.43
4.23
p30-min
1.41
7.85
5.34
p15-min
x
x
4.53
is quantiﬁed by the ai values. Similar observation can be made for
on-sessions and off-sessions too.
4.2 Modeling Time-Varying Rates
The mixture-exponential models in the previous subsection im-
P
ply a constant-rate stochastic process with the mean event rate
equal to 1/(
i ai/λi). However, we have observed in Fig-
ure 4 that the aggregate event rate for switching-on, switching-off,
and channel-switches are all highly variant, highlighted by many
apparently-periodic spikes. The problem lies in a subtle underlying
independence assumption (which has been commonly used in sim-
ilar study without careful validation). The reality is that each indi-
vidual user’s activities are inﬂuenced by a common external process
– the TV program schedules, and as a result, they become highly
correlated to each other, breaking the independence assumption. In
this subsection, we incorporate this impact from the external pro-
cess through modeling the aggregate event rates in Figure 4.
As the aggregate event rates appear very complicated in the time
domain – requiring an overwhelming number of parameters to char-
acterize it, we decide to try a different angle and approach the prob-
lem from the frequency domain. We apply fast Fourier transform
(FFT) to the event time series and present the result in Figure 9.
The structure, in all cases, suddenly becomes very clear – there
are a few of distinct spikes at frequencies that correspond to 1 hour,
30 minutes, 15 minutes etc., and an ambient gradual decrease in the
power level (y-axis) from low to high frequencies. We next approx-
imate the ambient power level by using the Weibull distribution. Its
probability density function is:
„
«
k−1
f (x; k, μ) = k
μ
x
μ
−(x/μ)k
e
where k and μ are model parameters. We choose the Weibull distri-
bution since it can very well approximate a wide range of classes of
functions including exponential, normal and lognormal only with
two parameters. The model parameters that best match our data
traces are reported in Table 2.
From only a small number of parameters (k, μ, and the values for
the spikes in the frequency domain), we can now generate the fre-
quency domain function and apply inverse FFT to reconstruct the
time series that initially seemed highly complex. To determine the
best trade-off between the number of spikes to explicitly include in
r
o
r
r
e
d
e
r
a
u
q
s
n
a
e
M
2.5 x 10−3
2
1.5
1
0.5
0
0
1
switch on
switch off
channel switch
4
5
2
3
The number of spikes
Figure 11: Find the optimal number of spikes
the model and the quality of the match between the model and the
empirical trace, we show in Figure 11 the discrepancy metric (we
use mean squared error between the empirical trace and our mod-
eling output) as a function of the number of spikes in the model. It
is clear that the discrepancy becomes negligible when we choose 2
spikes for switch on/off and 3 spikes for channel switch. So they
are the values we use in the rest of the paper.
Figure 10 compares the result from the real trace (top) and the
result from our model (bottom). We ﬁnd that they match very well,
even when we use only 13 parameters here (k, μ and the value for
the 2-3 spikes in Table 2).
Finally, we deﬁne the time series function obtained from the
aforementioned process as our rate moderating function g(t),
which models the impact of external TV program schedule to indi-
vidual users’ activity. Since g(t) is constructed from data in a given
window W, (in our example W = 86, 400 seconds, or 1 day), we
simply repeat g(t) to make it a periodic function: g(t+W ) = g(t).
Furthermore, we normalize g(t) such that
0 g(t)dt = W. Note
that the periodic moderating function g will not impact the tail be-
havior of the session length distributions that we have modeled pre-
viously. However, it does change the shape of session length dis-
tribution at small durations. In particular, depending on the start
time-of-day, the session length distribution varies.
4.3 Modeling Channel Popularity Distribu-
We have observed in Section 3 that the channel popularity is
highly skewed. Motivated by the success of Zipf-like distribution
in modeling skewed access frequencies of Web [3] and VoD sys-
tems [18, 21], we also examine the Zipf-like distribution in model-
ing channel access frequencies – for a channel of popularity rank
tion
R
W
435)
e
l
a
c
s
g
o
l
(
r
e
w
o
P
105
100
10−5
10−10
e
t
a
R
e
t
a
R
0.1
0.05
0
0:00
0.1
0.05
0
0:00
1 hour
30 min
10−3
10−2
Frequency (log scale)
(a) Switching-on
10−1
)
e
l
a
c
s
g
o
l
(
r
e
w
o
P
102
100
10−2
10−4
10−6
1 hour
30 min
10−3
10−2
Frequency (log scale)
(b) Switching-off
10−1
)
e
l
a
c
s
g
o
l
(
r
e
w
o
P
102
101
100
10−1
10−2
100
30 minutes
1 hour
101
102
Frequency (log scale)
(c) Channel-switch
Figure 9: The time-varying rates in frequency domain
Trace
8:00
16:00
Local time
Model fitting
8:00
Local time
16:00
(a) Switching-on
e
t
a
R
24:00
e
t
a
R
24:00
0.1
0.05
0
0:00
0.1
0.05
0
0:00
Trace
8:00
16:00
Local time
Model fitting
8:00
Local Time
16:00
(b) Switching-off
0.4
0.2
e
t
a
R
0
0:00
0.4
24:00
e
t
a
R
0.2
24:00
0
0:00
Figure 10: Modeling aggregate event rate
Trace
8:00
16:00
Local time
Model fitting
8:00
16:00
(c) Channel-switch
Local time
103
24:00
24:00
)
e
l
a
c
s
g
o
l
(
y
c
n
e
u
q
e
r
f
s
s
e
c
c
A
108
106
104
102
100
0
Real trace
Exponential
Zpif−like
100
600
Chanel index sorted by popularity (linear scale)
200
300
400
500
700
Figure 12: Fitting the channel popularity distribution
i, the access probability is a power function of its rank i. Fig-
ure 12 shows the channel access frequency as a function of the
rank, along with the best-ﬁt power law function and the best-ﬁt
exponential function. We ﬁnd the Zipf-like distribution well cap-
tures the top 10% channels while the exponential function achieves
a better ﬁt for the large “body” part of the distribution function.
−α, are
The parameters for the Zipf-like distribution, f1(i) = C1i
α = 0.513, C1 = 12.642. The parameters for the exponential
−β+C2, are β = 0.006, C2 = 2.392. In the
function, f2(i) = e
rest of the paper, we use a hybrid model – approximating the top
10% of the channel popularity distribution using the above Zipf-
like power-law function and the remaining part using the exponen-
tial function). Particularly, the probability density function can be
expressed as follows,
−α/C0
C1i
−β+C2 /C0
e
i < 10% of available channels,
others,
(
f0(i) =
where C0 is the normalization factor such that f0(·) is a well-
deﬁned density function.
The concatenated distribution function achieves a good match
for the top 600 popular channels, which together account for over
97% of the channel-switches (as shown in Figure 5).
Channel popularity in terms of channel access frequencies is
only applicable to target-switching. For sequential-scanning, the
channel number simply increments or decrements. We deﬁne the
probability of user entering target-switching mode as pt, which
is 0.44 in our data. The probability of user entering sequential-
scanning mode is hence 1− pt. When in sequential-scanning state,
a user switches to a higher number with the probability of pu (0.72
in our data), and to a lower number with 1 − pu.
To align the channel ID to the channel popularity, we adopt
a simple random permutation method – we randomly shufﬂe the
ranks of the channel popularity and use them as the channel ID.
This however does not capture the subtle clustering effect in the
commercial channel listing, such as music channels being next to
each others. Depending on the application, a detailed modeling of
such effects can be of interest.
4.4 Modeling Channel Popularity Dynamics
The channel popularity model described in the previous section
captures popularity skewness, which have been found relatively
stable at large time scale (e.g., daily [15]). However, we also ob-
serve from our data that channel popularity exhibits some tempo-
ral patterns over time-of-day (See Figure 7). While a stationary
channel popularity model might be sufﬁcient for many applications
(for example network capacity planning analysis), we expect that
some other applications (for example evaluating a P2P type con-
tent caching scheme for IPTV) may require a proper modeling of
such channel popularity dynamics. One way of modeling such dy-
namics is to observe the differences across multiple smaller time in-
tervals (e.g., hourly granularity) and model the channel popularity
436aOFF1 × λON1 × gON(t)
ON1
aON1 × λOFF1 × gOFF(t)
OFF1
ON2
aON2 × λOFF2 × gOFF(t)
aOFF2 × λON2 × gON(t)
OFF2
Figure 13: ON-OFF model
in each small interval separately. Alternately, we can try to under-
stand the underlying structure producing such dynamics and model
this underlying process. In fact, in our recent work [15], we demon-
strate that the channel popularity dynamics can be well explained
by groups of users that have intrinsically different channel prefer-
ence and tend to watch TV at different time of day, as described
next.
We divide STBs into multiple classes according to some feature.
In [15], we have compared different choices for such feature. To
model the daily dynamics of channel popularity, we choose aver-
age daily watching time as our classiﬁer because (1) the resulting
subgroups exhibit distinct and stable channel preference and (2)
the STBs in each subgroup tend to afﬁliate with the same subgroup
over time. Speciﬁcally, we classify STBs using two thresholds,