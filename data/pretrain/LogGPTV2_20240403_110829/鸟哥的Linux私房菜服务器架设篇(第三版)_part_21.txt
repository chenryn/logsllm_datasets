[root@www src]# make install
最后这个模块会被编译完成且安装放置于如下的档名： /lib/modules/$(uname
-r)/kernel/drivers/net/e1000/e1000.ko。 接下来我们得要重载这个新的模块
才行呦！
3. 模块之测试与处理
由于这个模块已经被加载啦，所以我们得要先移除旧的模块后，才能够重载这个
模块。使用的方法有点像这样：
# 1. 先移除已经加载在内存中的旧模块
[root@www ~]# rmmod e1000
# 此时已经捉到的网卡会整个消失不见！因为驱动程序被卸除了嘛！
PI:EMAIL
# 2. 加载新模块，并且查阅一下有没有捉到正确的版本！
[root@www ~]# modprobe e1000
[root@www ~]# modinfo e1000
filename: /lib/modules/2.6.32-71.29.1.el6.x86_64/kernel/drivers/net/e1000/e1000.ko
version: 8.0.30-NAPI <==就是这里！
license: GPL
description: Intel(R) PRO/1000 Network Driver
请自行与前一小节比对一下，就会发现真的捉到正确的版本啰！不过，这个模块
在下次新的核心推出后就会失效！ 为什么呢？因为新核心会给一个新的驱动程
序嘛！就不是你现在这个 8.0.30 的版本啰。这点还是要再次说明的。
4. 设定开机自动启动网络卡模块 (Option)
如果你在开机就能够正确的取得这个模块的话，那么你的网卡就没有问题啦！这
个步骤是可以略过的。如果你的核心还是捉不到网卡， 那你可能得要自己处理
一下模块的对应才行。怎么处理呢？很简单，在 /etc/modprobe.d/ 目录下建立
一个名为 ether.conf 的档案， 内容将模块与网卡代号链接在一块即可！这样
处理：
[root@www ~]# vim /etc/modprobe.d/ether.conf
alias eth0 e1000
alias eth1 e1000 <==因为鸟哥有两张网卡嘛！
[root@www ~]# sync; reboot
为了测试一下刚刚的设定是否会生效，通常鸟哥都会尝试一次重新启动，然后开
机完成之后观察一下是否有正确的启动网络卡， 并观察一下模块加载的情况，
如果一切都顺利，那就太完美了！
5. 尝试设定 IP
等到一切就绪之后，总得试看看这样的网络卡模块是否可以顺利的设定好 IP 吧？
所以我们先手动给他一个私有 IP 看看先：
[root@www ~]# ifconfig eth0 192.168.1.100
[root@www ~]# ifconfig
eth0 Link encap:Ethernet HWaddr 08:00:27:71:85:BD
inet addr:192.168.1.100 Bcast:192.168.1.255
Mask:255.255.255.0
....(以下省略)....
PI:EMAIL
嘿嘿！真的设定妥当哩！然后利用 ping 这个指令去 ping 一下网域内的其他计
算机， 看看能不能有响应，就知道你的网络卡是否 OK 的啦！通常是没有问题
的啦！
4.1.3 Linux 网络相关配置文件案
我们知道 TCP/IP 的重要参数主要是： IP, Netmask, Gateway, DNS IP ，而且千
万不要忘记你这部主机也应该要有主机名 (hostname)！此外，我们也知道 IP 的取得
有手动设定、DHCP 处理等。那么这些参数主要是写在哪些配置文件？如何对应呢？ 底
下就让我们来处理一番！
所需网络
主要配置文件档名 重要参数
参数
DEVICE=网卡的代号
BOOTPROTO=是否使用
dhcp
HWADDR=是否加入网卡
卡号(MAC)
IP IPADDR=就是IP地址
Netmask NETMASK=只网络屏蔽
DHCP 与 啦
/etc/sysconfig/network-scripts/ifcfg-eth0
否 ONBOOT=要不要默认启
Gateway 动此接口
等 GATEWAY=就是通讯闸
啦
NM_CONTROLLED=额外
的网管软件
鸟哥建议取消这个项
目！
NETWORKING=要不要有
网络
主机名 /etc/sysconfig/network NETWORKING_IPV6=支
援IPv6否？
HOSTNAME=你的主机名
DNS IP /etc/resolv.conf nameserver DNS的IP
私有 IP
对应 /etc/hosts 私有IP 主机名 别名
的主机名
PI:EMAIL
你没有看错，主要需要修改的就是这四个档案而已！因此没有很困难！大家都想太多了！
详细的设定后续小节再来讲， 这里先有概念即可。除此之外，还有些档案或许你也应
该要知道一下比较好呦！
 /etc/services
这个档案则是记录架构在 TCP/IP 上面的总总协议，包括 http, ftp, ssh,
telnet 等等服务所定义的 port number ，都是这个档案所规划出来的。如果你
想要自定义一个新的协议与 port 的对应，就得要改这个档案了；
 /etc/protocols
这个档案则是在定义出 IP 封包协议的相关数据，包括 ICMP/TCP/UDP 这方面的
封包协议的定义等。
大概知道上面这几个档案后，未来要修改网络参数时，那就太简单了！至于网络方
面的启动指令的话，可以记得几个简单的指令即可喔！
 /etc/init.d/network restart
这个 script 最重要！因为可以一口气重新启动整个网络的参数！ 他会主动的
去读取所有的网络配置文件，所以可以很快的恢复系统默认的参数值。
 ifup eth0 (ifdown eth0)
启动或者是关闭某张网络接口。可以透过这个简单的 script 来处理喔！ 这两
个 script 会主动到 /etc/sysconfig/network-scripts/ 目录下， 读取适当的
配置文件来处理啊！ (例如 ifcfg-eth0)。
大概你只要只到这些基本的指令与档案，哈哈！网络参数的设定就太简单啦！ 不
过，最好你还是要了解 shell script ，比较好！因为可以追踪整个网络的设定条件。
why ？这是因为每个 distributions 的设定数据可能都不太相同，不过却都以
/etc/init.d/network 作为启动的 script ， 因此，你只要了解到该档案的内容，很
容易就追踪得出来你的配置文件所需要的内容呢！对吧！
另外，新版的 CentOS 6.x 还有额外推出一个名称为 NetworkManager 的软件机制
来管理网络， 不过，鸟哥还是比较喜欢手工打造自己的网络环境，所以很建议将该软
件关闭呢！还好，我们安装的‘basic server (第一章的 1.2.2-2)’ 就这么巧的没有
安装该软件！好佳在～^_^
4.2 连上 Internet 的设定方法
在前几章我们就谈过，台湾地区主要连上因特网的方法有(1)学术网络、(2)ADSL 固
接与拨接、(3)Cable modem 等方式，同时，手动设定 IP 参数是很重要的学习，因此，
底下的各节中，第一节的手动设定固定 IP 一定要做过一次！ 其他的才依照您的环境
去设定去学习！
PI:EMAIL
此外，由于目前使用 Linux notebook 的使用者大增，而 Notebook 通常是以无线
网络来联机的， 所以鸟哥在这里也尝试使用一款无线网络来进行联机设定。至于传统
的 56 Kbps 拨接则因为速度较慢且使用度越来越低， 所以在这里就不多做介绍了。
4.2.1 手动设定固定 IP 参数 (适用学术网络、ADSL 固定制) + 五大检查步骤
所谓的固定 IP 就是指在你的网络参数当中，你只要输入既定的 IP 参数即可。那
么这个既定的 IP 来自哪里呢？ 一般来说，他可能来自于：
 学术网络：由学校单位直接给予的一组 IP 网络参数；
 固定制 ADSL：向 ISP 申请的一组固定 IP 的网络参数；
 企业内部或 IP 分享器内部的局域网络：例如企业内使用私有 IP 作为局域
网络的联机之用时，那么我们的 Linux 当然也就需要向企业的网管人员申请一
组固定的 IP 网络参数啰！
这样清楚吗？也就是说，我们取得的固定 IP 参数并非一定是 public IP 喔！反
正就是一组可接受的固定 IP 就是了！ 所以在架设你的环境之前，请先注意所有网络
参数的来源正确性啊！好了，那么你的 IP 要如何设定呢？先回去翻翻第三章 3.2.1 里
面的图 3.2-1，我们对外网卡 (eth0) 的信息为：
IP: 192.168.1.100
Netmask: 255.255.255.0
Gateway: 192.168.1.254
DNS IP: 168.95.1.1
Hostname: www.centos.vbird
那么要修改的四个档案与相关的启动脚本，以及重新启动后需要用啥指令观察的重点，
鸟哥再次的使用一个简单的表格来说明， 你只要记得这几个表格内的重要档案与指令，
以后在修改网络参数时，就不会出现错误了！看看吧！
修改的参
配置文件与重要启动脚本 观察结果的指令
数
ifconfig
IP相关参 /etc/sysconfig/network-scripts/ifcfg-eth0
(IP/Netmask)
数 /etc/init.d/network restart
route -n (gateway)
DNS /etc/resolv.conf dig www.google.com
hostname (主机名)
/etc/sysconfig/network
主机名 ping $(hostname)
/etc/hosts
reboot
PI:EMAIL
底下我们就分别针对上面的各项设定来进行档案的重新修改啰！
1. IP/Netmask/Gateway 的设定、启动与观察
设定网络参数得要修改 /etc/sysconfig/network-scripts/ifcfg-eth0，请记得，
这个 ifcfg-eth0 与档案内的 DEVICE 名称设定需相同，并且，在这个档案内的
所有设定，基本上就是 bash 的变量设定规则啦 (注意大小写)！
[root@www ~]# vim /etc/sysconfig/network-scripts/ifcfg-eth0
DEVICE="eth0" <==网络卡代号，必须要 ifcfg-eth0 相对应
HWADDR="08:00:27:71:85:BD" <==就是网络卡地址，若只有一张网卡，可省
略此项目
NM_CONTROLLED="no" <==不要受到其他软件的网络管理！
ONBOOT="yes" <==是否默认启动此接口的意思
BOOTPROTO=none <==取得IP的方式，其实关键词只有dhcp，
手动可输入none
IPADDR=192.168.1.100 <==就是 IP 啊
NETMASK=255.255.255.0 <==就是子网掩码
GATEWAY=192.168.1.254 <==就是预设路由
# 重点是上面这几个设定项目，底下的则可以省略的啰！
NETWORK=192.168.1.0 <==就是该网段的第一个 IP，可省略
BROADCAST=192.168.1.255 <==就是广播地址啰，可省略
MTU=1500 <==就是最大传输单元的设定值，若不更改则
可省略