java.lang.Throwable: Explicit termination method 'end' not called  
at dalvik.system.CloseGuard.open(CloseGuard.java:223)  
at java.util.zip.Inflater.(Inflater.java:106)  
at com.android.okhttp.okio.GzipSource.(GzipSource.java:62)  
at com.android.okhttp.internal.http.HttpEngine.unzip(HttpEngine.java:473)  
at
com.android.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:648)  
at
com.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:471)  
at
com.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:407)  
at
com.android.okhttp.internal.huc.HttpURLConnectionImpl.getInputStream(HttpURLConnectionImpl.java:244)  
at
com.bumptech.glide.load.data.HttpUrlFetcher.loadDataWithRedirects(HttpUrlFetcher.java:106)  
at
com.bumptech.glide.load.data.HttpUrlFetcher.loadData(HttpUrlFetcher.java:59)  
at
com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher.loadData(MultiModelLoader.java:99)  
at
com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher.startNextOrFail(MultiModelLoader.java:150)  
at
com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher.onLoadFailed(MultiModelLoader.java:144)  
at
com.bumptech.glide.load.data.HttpUrlFetcher.loadData(HttpUrlFetcher.java:65)  
at
com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher.loadData(MultiModelLoader.java:99)  
at
com.bumptech.glide.load.engine.SourceGenerator.startNext(SourceGenerator.java:62)  
at com.bumptech.glide.load.engine.DecodeJob.runGenerators(DecodeJob.java:302)  
at com.bumptech.glide.load.engine.DecodeJob.runWrapped(DecodeJob.java:272)  
at com.bumptech.glide.load.engine.DecodeJob.run(DecodeJob.java:233)  
at
java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)  
at
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)  
at java.lang.Thread.run(Thread.java:764)  
at
com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory$1.run(GlideExecutor.java:446)
A resource was acquired at attached stack trace but never released. See
java.io.Closeable for information on avoiding resource leaks.