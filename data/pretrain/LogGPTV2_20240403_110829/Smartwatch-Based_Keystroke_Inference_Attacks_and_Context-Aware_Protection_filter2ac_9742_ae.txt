against keystroke inference attacks as soon as typing activ-
ity is identiﬁed. In other words, rTAD’s goal is to maximize
recall, but not to an extent where high false positives start
aﬀecting the utility of other non-malicious applications in-
stalled on the smartwatch. We evaluate rTAD in two diﬀer-
ent settings (visually explained in Figure 9):
• N=1: Typing activity is recognized whenever a 10 sec-
ond window is classiﬁed as a typing window. As a result,
countermeasures against keystroke inference attacks can
be initiated as early as 10 seconds from when the user
starts typing.
• N=2: Typing activity is recognized when two or more 10
second windows are classiﬁed as typing windows within
a minute. Countermeasures against keystroke inference
attacks can be initiated no sooner than 20 seconds from
when the user starts typing.
7.2 Protection
Once rTAD identiﬁes that the user is typing, countermea-
sures against keystroke inference attacks can be activated
automatically in an non-intrusive fashion. And since the
protection mechanism is activated only when the user is
identiﬁed to be typing on a keyboard, the utility of the mo-
tion sensors is not aﬀected when user is actively using other
applications on the smartwatch (such as playing games that
use motion sensors). Such smart protection measures can be
undertaken by the MSAC implemented in the operating sys-
tem itself, or as a trusted middle-ware. For the framework to
work, we assume that all third party applications get access
123Ground Truth TypingTyping Activity Ground TruthRecognitionRecognitionTyping Activity Recognition(1 detection)Typing Activity Detection15 minutes time segmentClassification ResultFNTPTNFP123Ground Truth TypingTyping Activity Ground TruthRecognitionRecognitionTyping Activity Recognition(2 detections within a minute)Typing Activity Detection15 minutes time segmentClassification ResultFNTPTNFPto motion sensor data only via the MSAC and the MSAC
has the ability to modify or restrict the ﬂow of motion sensor
data. Although this assumption requires change in operat-
ing system architecture, it should be a rudimentary task for
operating system developers. Also, it should be noted that
this assumption does not require changes in existing third
party application, as long as the APIs to access motion sen-
sors remain unchanged. Since MSAC requires a change in
the operating system architecture, we are unable to imple-
ment a working MSAC. However, below we list out some of
the strategies that the MSAC can adopt when rTAD reports
that the user is typing:
• Complete Blocking: This strategy is the safest as it will
completely block the side-channel, but it can also harm
the utility of other non-malicious applications that may
want to perform passive computing with motion data.
• Reduced Sampling Rate: When a user types for sig-
niﬁcant amount of time in a day, complete blocking of
the motion sensor data from third party applications can
greatly harm the utility of other non-malicious applica-
tions. In order to preserve some of the utility, MSAC can
provide third party applications access to motion sensors
at a reduced sampling rate. Restricting the precision at
which applications are allowed to access the sensors re-
duces the eﬃciency of side-channel attacks [19, 17].
• Random Out of Order Blocks: A smarter MSAC can
send out of order blocks of sensor readings to third party
applications. Random out of order blocks of sensor data
can greatly lower the inference accuracy of side-channel
attacks, but may still preserve utility for certain non-
malicious application. For example, a daily calorie counter
may not be signiﬁcantly aﬀected by out of order blocks of
sensor readings. That is because the calorie count will
be accurate as long as all the motions are captured by
the application, even if out of order. Size of block and
randomization algorithm will play a signiﬁcation role in
determining how much an adversary can recover versus
the utility of randomly ordered blocks.
There can be other strategies that the MSAC can adopt as
well. We think that it will be best if users are allowed to
choose among the MSAC protection strategies, suitable for
their personal lifestyles.
7.3 Evaluation
We implement and evaluate our proposed rTAD, because
the eﬀectiveness of the entire protection mechanism relies
on rTAD. To evaluate rTAD, we use the same smartwatch
setup detailed in Section 4.3. Preliminary evaluation in-
volved 4 participants with varied lifestyles wearing the watch
for long durations.
If the rTAD application does not rec-
ognize typing activity, it prompts the participant every 15
minutes to collect ground truth.
If the rTAD application
does recognize typing activity, it prompts the user immedi-
ately for ground truth. In case the user continues to type for
long period of time, the rTAD application does not ask the
user for ground truth for 15 minutes after the initial detec-
tion. This avoids annoyance to the participants and results
in equitable ground truth collection. In real usage, the user
will not be prompted for ground truth, instead the MSAC
will automatically start acting as soon as typing activity is
reported by rTAD.
Figure 10: Normalized true positive (TP), true neg-
ative (TN), false positive (FP), and false negative
(FN), along with precision and recall values.
One problem that we encountered when evaluating rTAD
was that in certain cases the Magnetic Field Change feature
acted unexpectedly, introducing a lot of error in classiﬁca-
tion. We observed that the unexpected behavior occurred
only while the participant typed on a laptop. Further inves-
tigation revealed that the magnet inside the laptop’s hard
drive (which are normally installed directly under the key-
board) was responsible for this unexpected behavior. Since
desktop keyboards are generally placed away from the hard
drives, the Magnetic Field Change feature performed in an
expected fashion in that case. For the remainder of the
evaluation we do not use the Magnetic Field Change feature
because it will be hard for the participants to remember
and distinguish between laptop and desktop typing. How-
ever, as laptops featuring non-magnetic solid state drives are
becoming popular, the Magnetic Field Change feature may
eventually become useful in future.
The combined true positives (TP), true negatives (TN),
false positives (FP), and false negatives (FN) results from
the 4 participants are shown in Figure 10. To better visu-
alize the diﬀerence between the two settings, the values in
Figure 10 are normalized with respect to the total number
of ground truth collected in each setting. As explained with
examples in Figure 9, TP signiﬁes that the user was typing
and rTAD correctly identiﬁed that the user was typing, and
if rTAD failed to recognize that the user was typing, it was
recorded as FN. Similarly, TN signiﬁes that the user was not
typing and rTAD correctly identiﬁed that the user was not
typing, and if rTAD identiﬁed that the user was typing, it
was recorded as FP.
In case of N=1, we observe lesser FN and higher TP, but
at the cost of higher FP. In case of N=2, we observe lower
FP, but at the cost of lower TP and higher FN. In other
words, rTAD can gain recall by trading-oﬀ precision, and
vice versa. Nevertheless, in both settings rTAD achieved
high recall values, which asserts it’s eﬀectiveness in the pro-
tection framework.
7.4 Discussions
• Left or Right: Our attack framework, presented ear-
lier in this paper, requires the adversary to have a dif-
ferently trained framework for targets wearing watch on
their right hand. However, the design of rTAD (and thus
the whole protection framework) makes it independent of
which hand the smartwatch is worn on. As a result, rTAD
can start working out of the box, without manual setup.
00.10.20.30.40.50.60.70.8TPTNFPFNTPTNFPFNN=1N=2Precision = 0.585106383 Recall = 0.948275862Precision = 0.867088608Recall = 0.85625• Usability: Our primary focus while designing the pro-
tection framework was usability. We work towards a low
processor intensive design, which in turn consumes low
battery power. We identify activities similar to typing on
keyboard, and try to minimize false positives. The pro-
tection mechanism works in an non-intrusive fashion as
well, and we envision that the entire setup process in a
real-life implementation will be very simple.
8. CONCLUSION
This paper presents a novel keystroke inference attack
which utilizes wrist-motion data gathered from a smart-
watch as side-channel information. In order to harvest the
information masked in wrist movements for inferring key-
strokes, we designed and validated a novel learning-based
attack framework which is speciﬁcally targeted towards re-
covering text typed by a smartwatch wearing user on an
external QWERTY keyboard. By showing the feasibility of
the proposed classiﬁcation and prediction mechanisms, we
validate our hypothesis that wearable devices such as smart-
watches can leak sensitive personal information if access to
sensors (on these devices) is not appropriately regulated. We
also present a smart protection framework to automatically
regulate sensor access, aimed to improve privacy without
degrading utility of the device.
9. ACKNOWLEDGMENTS
Research reported in this publication was partially sup-
ported by the Division of Computer and Network Systems
(CNS) of the National Science Foundation (NSF) under aw-
ard number 1523960 and by the Information Institute of the
U.S. Air Force Research Lab (AFRL) under the summer
faculty fellowship extension grant. The content is solely the
responsibility of the authors and does not necessarily repre-
sent the oﬃcial views of the NSF or the AFRL. The authors
would also like to thank Dr. Kevin Kwiat and Dr. Charles
Kamhoua for their valuable inputs and suggestions.
10. REFERENCES
[1] IEEE Recommended Practices for Speech Quality
Measurements. IEEE Transactions on Audio and
Electroacoustics, 1969.
[2] Experian Marketing Services - Simmons Connect.
http://tinyurl.com/experiansmartphones, May 2013.
[Online; accessed 8-June-2015].
[3] D. Agrawal, B. Archambeault, J. R. Rao, and
P. Rohatgi. The EM Side-channel(s). In Cryptographic
Hardware and Embedded Systems, 2002.
[4] D. Asonov and R. Agrawal. Keyboard Acoustic
Emanations. In IEEE S&P, 2004.
[5] M. Backes, T. Chen, M. Duermuth, H. Lensch, and
M. Welk. Tempest in a Teapot: Compromising
Reﬂections Revisited. In IEEE S&P, 2009.
[6] M. Backes, M. D¨urmuth, S. Gerling, M. Pinkal, and
C. Sporleder. Acoustic Side-Channel Attacks on
Printers. In USENIX Security, 2010.
[7] M. Backes, M. Durmuth, and D. Unruh.
Compromising Reﬂections-or-How to Read LCD
Monitors Around the Corner. In IEEE S&P, 2008.
[8] A. Barisani and D. Bianco. Sniﬃng Keystrokes with
Lasers/Voltmeters. Black Hat USA, 2009.
[9] Y. Berger, A. Wool, and A. Yeredor. Dictionary
Attacks using Keyboard Acoustic Emanations. In
ACM CCS, 2006.
[10] J. Cappos, L. Wang, R. Weiss, Y. Yang, and
Y. Zhuang. BlurSense: Dynamic Fine-Grained Access
Control for Smartphone Privacy. In IEEE Sensors
Applications Symposium, 2014.
[11] T. Fiebig, J. Krissler, and R. H¨ansch. Security Impact
of High Resolution Smartphone Cameras. In USENIX
WOOT, 2014.
[12] J. Friedman. Tempest: A Signal Problem. NSA
Cryptologic Spectrum, 1972.
[13] M. G. Kuhn. Optical Time-Domain Eavesdropping
Risks of CRT Displays. In IEEE S&P, 2002.
[14] M. G. Kuhn and R. J. Anderson. Soft Tempest:
Hidden Data Transmission Using Electromagnetic
Emanations. In Information Hiding, Lecture Notes in
Computer Science, 1998.
[15] A. Maiti, M. Jadliwala, J. He, and I. Bilogrevic.
(Smart)Watch Your Taps: Side-channel Keystroke
Inference Attacks Using Smartwatches. In ACM
ISWC, 2015.
[16] P. Marquardt, A. Verma, H. Carter, and P. Traynor.
(sp)iPhone: Decoding Vibrations From Nearby
Keyboards Using Mobile Phone Accelerometers. In
ACM CCS, 2011.
[17] Y. Michalevsky, D. Boneh, and G. Nakibly.
Gyrophone: Recognizing Speech from Gyroscope
Signals. In USENIX Security, 2014.
[18] L. T. Nguyen, H.-T. Cheng, P. Wu, S. Buthpitiya, and
Y. Zhang. PnLUM: System for Prediction of Next
Location for Users with Mobility. In Nokia Mobile
Data Challenge Workshop, 2012.
[19] E. Owusu, J. Han, S. Das, A. Perrig, and J. Zhang.
ACCessory: Password Inference using Accelerometers
on Smartphones. In ACM HotMobile, 2012.
[20] J.-J. Quisquater and D. Samyde. ElectroMagnetic
Analysis (EMA): Measures and Countermeasures for
Smart Cards. In Smart Card Programming and
Security, Lecture Notes in Computer Science, 2001.
[21] R. Schlegel, K. Zhang, X.-y. Zhou, M. Intwala,
A. Kapadia, and X. Wang. Soundcomber: A Stealthy
and Context-Aware Sound Trojan for Smartphones. In
ISOC NDSS, 2011.
[22] P. Smulders. The Threat of Information Theft by
Reception of Electromagnetic Radiation from RS-232
Cables. Computers & Security, 9(1), 1990.
[23] E. Thomaz, I. Essa, and G. D. Abowd. A Practical
Approach for Recognizing Eating Moments with
Wrist-mounted Inertial Sensing. In ACM UbiComp,
2015.
[24] W. Van Eck. Electromagnetic Radiation from Video
Display Units: An Eavesdropping Risk? Computers &
Security, 4(4), 1985.
[25] M. Vuagnoux and S. Pasini. Compromising
Electromagnetic Emanations of Wired and Wireless
Keyboards. In USENIX Security, 2009.
[26] H. Wang, T. T.-T. Lai, and R. Roy Choudhury. Mole:
Motion leaks through smartwatch sensors. In ACM
MobiCom, 2015.