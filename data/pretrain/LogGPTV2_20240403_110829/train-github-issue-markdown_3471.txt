I have opened this pull request because to discuss if we can return an
exception when filtering/querying a field that is not indexed, or that does
not exist. As an example of this:
## Querying a non-indexed field
    PUT trial
    {
      "mappings": {
        "document_type1": {
          "properties": {
            "prop1": {
              "index": "no",
              "type": "string"
            }
          }
        }
      }
    }
    POST trial/document_type1
    {
      "prop1": "sure"
    }
    POST trial/_search
    {
      "query": {
        "match": {
          "prop1": "sure"
        }
      }
    }
This returns:
    {
       "took": 13,
       "timed_out": false,
       "_shards": {
          "total": 5,
          "successful": 5,
          "failed": 0
       },
       "hits": {
          "total": 0,
          "max_score": null,
          "hits": []
       }
    }
## Querying a non-existing field
    POST trial/_search
    {
      "query": {
        "match": {
          "prop2": "some text"
        }
      }
    }
This returns:
    {
       "took": 13,
       "timed_out": false,
       "_shards": {
          "total": 5,
          "successful": 5,
          "failed": 0
       },
       "hits": {
          "total": 0,
          "max_score": null,
          "hits": []
       }
    }
Both cases could return an exception, indicating that the field is not
indexed, or does not exist. I've marked this issue as a discussion, since
there are some cases such as querying multiple indices that could be a bit
tricky to add consistency to the result of mixed results of existing fields on
certain indices plus non-indexed/existing fields on other indices.