### 802.11a Channels and Frequency Hopping

**Figure 9** illustrates that, at each location, the RSS (Received Signal Strength) ratio for packets sent from certain channels can be quite large. The maximum observed value of \( r(t) \) is approximately 10 when the sender is 4 meters away from Antenna 1. However, at each location, the \( r \) values on different channels vary significantly, with their mean values close to 0. For comparison, we also measured \( r \) on different channels when the sender was very close to the receiver (at 2 cm), as shown in **Figure 9**. This curve indicates that \( r \) is relatively stable across different channels. This experiment suggests that frequency hopping can mitigate the threat posed by a faraway attacker attempting to exploit multipath effects.

**Figure 9: Using Frequency Hopping to Defeat Attacks via Multipath Effects**

### Mitigating Reverse CSI Measurement

To further enhance security, our protocol ensures that the receiver sends messages via both its antennas, making it impossible for an attacker to measure the reverse CSI (Channel State Information) of both channels. Even if the receiver transmits signals from both antennas, the CSI of the reverse channel may differ from that of the forward channel due to non-symmetric noise, which violates reciprocity.

### Time-of-Check to Time-of-Use Attack

Since RSS is measured in the physical layer preamble while the session key is carried in the frame, an attacker might attempt to attack Step 6 of the protocol described in Section 3.5 by sending an encrypted session key when the receiver begins to receive the frame. However, this attack is nearly impossible for several reasons:

1. **Timing Precision**: It is extremely difficult for the attacker to time their frame precisely after the receiver has received the preamble from another user. For 802.11a and 802.11g, a symbol lasts 4 microseconds, including an 800-nanosecond guard interval. To achieve this, the attacker must control their transmission delay within one microsecond, which is practically unfeasible.
2. **Frame Collision**: Even if the attacker could achieve such fine timing, their frame would likely collide with the genuine sender's frame, causing the receiver to drop the frame. Although this method could be used for a DoS (Denial of Service) attack, it is less efficient than jamming, which is outside the scope of this work.

### Beam-Forming Attack

In theory, a powerful faraway attacker might try to form special beams to create a significant difference in RSS values at the two receiving antennas. In practice, however, this attack is highly challenging, if not impossible. The beam-forming attacker would need a narrow-width main lobe (beam), which requires a very large antenna array. Given the small distance between the two antennas on the receiver (typically less than 1 meter), the attacker would need an impractically large array, raising suspicion. Additionally, multipath effects would likely distort the intended beam, preventing the required differential RSS on the two antennas unless the attacker has precise CSI, which is only measurable at the receiver's antennas and never transmitted to the sender.

### Usability

#### Empirical Evaluation
We provide an empirical evaluation of our scheme's usability, with formal usability studies planned for future work.

**Resilience against Interference**: One advantage of our scheme is its ability to resist interference. Many device pairing schemes require auxiliary "out-of-band" channels, such as acoustic [16], which are susceptible to environmental interference. Our scheme, however, uses auxiliary information (RSS) in the existing wireless channel, inheriting the interference-resistance properties of the wireless channel. All experiments were conducted in a typical computer science building with multiple APs and even a microwave oven.

**Avoiding User Errors**: Our scheme requires no decision from the user. The user simply needs to move the sender from one antenna to another on the receiver. If the user fails to follow the instructions, it will result in pairing failure but not insecure pairing, providing a fail-safe default.

**Ease of Use**: The most challenging part of our scheme for the user is aligning the antennas of the two devices; failure to align may result in pairing failure. Other device pairing schemes, such as [14] and [16], require users to align cameras or move devices in 3D space. By contrast, our scheme only requires the user to move the sender in the 2D surface of the receiver, which becomes a simple task when the antenna locations are marked.

**Pairing Time**: Experiments showed that it takes an average of 11.64 seconds to pair devices in our prototype, which is faster than most schemes tested by [10]. We expect similar pairing times for ordinary users because our scheme requires a simple movement and no user decisions.

**Versatility**: Our scheme requires the receiver to have two antennas separated by a reasonable distance. Most current laptops, including those without 802.11n modules, use multiple antennas for diversity. Additionally, there is a trend towards embedding 802.11n Wi-Fi in handheld mobile devices, allowing these devices to benefit from our secure pairing scheme.

### Related Work

**Wireless Device Pairing**: With the proliferation of mobile wireless devices, researchers have proposed many schemes for secure device pairing, relying on trusted side-channels. Earlier approaches required the user to enter a shared secret, leading to usability and security issues. Newer schemes use extra sensory and output hardware as trusted communication channels [10]. These schemes can be categorized into those requiring user decision (e.g., visual [26] or audio [6, 23] output) and those requiring the user to initiate pairing but letting the device decide success (e.g., camera [14, 21], microphone [17], or accelerometer [8, 13]). Our mechanism falls into the latter category, reducing user errors and requiring no extra hardware.

**Distance Bounding Protocols**: Distance bounding protocols [3] establish an upper-bound on the physical distance between two parties by timing the delay between sending a challenge bit and receiving the response bit. They require high-precision clocks, making them unsuitable for consumer electronic devices. Our scheme, on the other hand, measures the RSS ratio between multiple antennas, avoiding the need for high-precision clocks.

**Received Signal Strength (RSS)**: Researchers have used RSS to detect Sybil attacks in wireless sensor networks [5], using the RSS ratio between different monitors to locate users. Our scheme differs in purpose, aiming to determine whether the sender is close to the receiver, rather than localizing packets. Our scheme requires only two antennas and can reject attackers 20 cm away, compared to the meter-level precision of other schemes.

**Directional Antennas**: Hu and Evans [9] use directional antennas to verify proximity and prevent wormhole attacks. Our scheme, however, prefers omnidirectional antennas to avoid misalignment issues and align with consumer preferences.

### Conclusion

We have designed a reliable secure device pairing scheme based on device proximity, leveraging multiple antennas in modern wireless devices. The scheme exploits the characteristic of wireless channels where received signal power is inversely proportional to the distance between the sender and receiver. When a nearby sender is very close to one antenna on the receiver, the receiver observes a large difference in power measured on its two antennas, which a faraway sender cannot induce. We validated our scheme through theoretical analysis and experimental measurements, discussing factors such as antenna gain, alignment, RSS saturation, dynamic rate adaptation, and multipath effects. Finally, we evaluated a prototype by pairing an Openmoko Free Runner mobile phone with a laptop, demonstrating that our scheme is easy, fast, and reliable.

### References

[References remain the same as provided in the original text.]