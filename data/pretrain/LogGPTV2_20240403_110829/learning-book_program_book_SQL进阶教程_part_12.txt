100
理学院
理学院
20051010
101
20050922
102
文学院
103
文学院
20050910
200
文学院
20050922
201
工学院
202
经济学院
20050925
学生提交报告后，“提交日期”列会被写入日期，而提交之前是
NULL.现在我们需要从这张表里找出哪些学院的学生全部都提交了报告（即
理学院、经济学院）。如果只是用WHERE sbmt_dateIS NOT NULL 这样
的条件查询，文学院也会被包含进来，结果就不正确了（因为文学院学号
列生成下面这样的子集。
---
## Page 77
64
第1章神奇的SQL
■所有学生都提交了报告的学院有郭些
S0:Students
51:理学院
52文学院
S工学
20--
54:经济学院
200610-10
20050922
NULL
20050325
COUNThbr_datel=2
0OUNa
COUNTpim_iata(=2
COLAT
COUNTisbmf
COUNT=
COUNThbrrt_datelr
这样生成的4个子集里，我们想要的是SI和S4.那么，这2个子集具
备而其他子集不具备的特征是什么呢？答案是“coNr（*）和couNT（sbmt
date]结果一致”。这是因为S2和S3这2个子集里存在NULL。因此，答
案应该是下面这样。
--查询“提交日期”列内不包含NULL的学院（11：使用COUNT函数
SSL&CT dpt
FROM Student8
HAVING COUNI(+) - COUNT (abnt_date) :
■执行结果
dpt
理学院
经济学院
当然，使用CASE表达式也可以实现同样的功能，而且更加通用。
-查询“提交日期”列内不包含NUL的学院（2|：使用CASE表达式
SEL&CT 4pt
GROUP BY 4pt
FEOM Studenta
HAVING COUNT(+) - SUM(CASE MHEN abnt_date IS MOT NULL
THEN1
ELSE O ENDI :
可以看到，使用CASE表达式时，将“提交日期”不是NULL的行标
记为1，将“提交日期”为NULL的行标记为O。在这里，CASE表达式的
---
## Page 78
1-4 HAVING子句的力量—
65
作用相当于进行判断的函数，用来判断各个元素（=行）是否属于满足了
某种条件的集合。这样的函数我们称为特征函数（characteristicfunction），
或者从定义了集合的角度来将它称为定义函数（关于特征函数的用法，请
在练习题1-4-2中进行练习）。
像这样，HAVINO子句可以用作研究集合性质的工具，特别是在与聚
合函数或CASE表达式一起使用时具有更强大的威力。
用关系除法运算进行购物篮分析
接下来，我们假设有这样两张表：全国连锁折扣店的商品表Items，
以及各个店铺的库存管理表Shopltems。这是关系模型中经需见到的表
结构。
Items
Shopltems
iem|高量]
shop 1 .店铺）
m【商品）
啤酒
仙台
味酒
纸尿裤
仙台
纸尿裤
自行车
仙台
自行车
仙台
东京
味酒
东京
纸尿裤
东京
自行车
大阪
电视
大阪
纸尿裤
大阪
自行车
这次我们要查询的是囊括了表Items中所有商品的店铺。也就是说，
要查询的是仙台店和东京店。大阪店没有啤酒，所以不是我们的目标。这
注0
购物篮分析是首场分析额城常用
的一种分析于疑，用来发现“经
常较一起购买的商品”具有的规
要改变一下它的形式，就可以把它应用到很多业务场景。例如在医疗领域
律。有一个有名的例子，某家此
市发现，虽然不知为什会。但哮
查询同时服用多种药物的患者，或者从员工技术资料库里查询UNIX和
消和域尿裤经骨被一起跨买[色
Oracle两者都精通的程序员，等等
许是因为来买取尿裤的爸爸都会
想限便买些磷清同去入于是便
遇到像表Shopltems这种一个实体（在这里是店铺）的信息分散在多
将啤添和般尿神握在相邻的资
架，从而提升了销售躯。
行的情况时，仅仅在WHERE子句里通过OR或者IN指定条件是无法得到
---
## Page 79
66
—第1章神奇的 SOL
正确结果的。这是因为，在WHERE子句里指定的条件只对表里的某一行数
据有效。
-查询啤酒、抵尿裤和自行车同时在库的店铺：请误的sgL语句
SSLBCT DISTINCT shop
MHERE item IN (SBLECT item FROM Itens) /
■执行结果
shop
****
仙台
东京
大阪
谓词IN的条件其实只是指定了“店内有啤酒或者纸尿裤或者自行车
的店铺”，所以店铺只要有这三种商品中的任何一种，就会出现在查询结
果里。那么该如何针对多行数据（或者说针对集合）设定查询条件呢？也
许大家已经知道了，那就是需要用HAVING子句来解决这个问题。SQL语
句可以像下面这样写。
--查询啤酒、纸尿裤和白行车同时在库的店辅：正确的SQL语句
MHERE SI.iten - I.iten
FROM SbopItems SI, Itens I
CROUP BY SI.shop
HAVING COUNI(SI.iteml - (SELECT COUNT Iitem) FRON ItemBl )
■执行结果
sbop
仙台
东京
HAVING 子句的子查询 （SBLECT COUNT(item）FROM Items) 的返回
值是常量3。因此，对商品表和店铺的库存管理表进行连接操作后结果是
3行的店铺会被选中：对没有啤酒的大阪店进行连接操作后结果是2行，
所以大阪店不会被选中：而仙台店则因为（仙台，窗帘）的行在表连接时
会被排除掉，所以也会被选中：另外，东京店则因为连接后结果是3行，
---
## Page 80
14 HAVING子句的力量—
67
所以当然也会被选中。
然而请注意，如果把HAVING子句改成HAVINGCOUNT（SI.item）
COUNT（I.item)，结果就不对了。如果使用这个条件，仙台、东京、大阪
这3个店铺都会被选中。这是因为，受到连接操作的影响，COUNT{I.
item）的值和表Items原本的行数不一样了。下面的执行结果一目了然。
--Cor{I.item）的值已经不一定是3了
SELECT SI.shop, CoUNT(SI.iten) , CouNT(I.item)
FROM SbopItema SI, Items I
MHERE SI.iten = I.iten
GROUP BY SI.shop1
■执行结果
sbop
COUNT (SI. Item)
COUNT (I .Iten)
仙台
东京
大阪
3
2
间题解决了。那么接下来我们把条件变一下，看看如何排除掉仙台店
，，中）
现东京店。这类问题被称为“精确关系除法”（exact relational division），
（division with a remainder））。解决这个间题我们需要使用外连接。
--精确关系除法运算：使用外连接和COUNT函数
FROM SbopIteme SI LEFT QUTER JOIN Itens I
ON SI.item=I.iten
HAVING COUNI(SI.item) = (SELECT COUNT(itenl FROM Item8)
--条件1
AND COUNI(I.iten) - (SELECT COUNT(itenl FROM Item8l )
--条件2
■执行结果
sbop
东京
---
## Page 81
68
第1章种奇的 SQL
以表Shopltems为主表进行外连接操作后，因为表Items里不存在窗
帘和电视，所以连接后相应行的“Iitem”列是NULL。然后，我们就可以
使用之前用到的检查学生提交报告日期的COUNT函数的技巧了。条件1会
排除掉 coUNT（SI.item）-4的仙台店，条件2会排除掉couNr(I.item)
－2的大阪店（NULL不会被计数）。
■表Shopitems和表Items外连接后的结果
shop
Sl.item
L.item
伯台
啤酒
啤酒
伯台
纸尿裤
纸际
伯台
自行车
自行车
仙台
窗帘
L|原本应信是意
东京
啤酒
啤酒
东京
纸尿裤
纸际
东京
自行车
自行车
大阪
电视
大阪
纸尿裤
纸尿裤
大阪
自行车
自行车
一般来说，使用外连接时，大多会用商品表Items作为主表进行外连
接操作，而这里颠倒了一下主从关系，表使用 Shopltems作为了主表，这
一点比较有趣。
关系除法运算
本节介绍的运算主要是关系除法适算。如果模仿数值适算的写法来写，可
以写作 Shopltems一Items。至予为什么称它为除法适算，我们可以从除法适算
的逆适算——乘法适算的角度来理解一下。除法送算和乘法适算之间有这样的
关系：除法适算的商和除数的泉积等于被除数。
20
÷5=
4
被除数
除数
两
除数
被除数
4×5
=2
20
---
## Page 82
1-4HAVING子句的力量—69
在 SQL里，文艾违接相当于象法适算。把商和除数（表Items）交叉
连接，然后求笛卡儿积，就能得到表ShopItems 的子集（不一定是完整的表
Shopltems），也就是被除数。这就是“除法运算”这一名称的由来。
关系除法运算是美系代数中知名度最低的运算。不过，在实除工作中用到
的机会并不少。像文中例题这样，应用场景很多（很多时候都是不经意间就使
用了）。关系除法适算也是Codd最初定义的8种关系适算中的一种，也算是正
宗的美系适算。
部么为什么它不太为人所知呢？笔者党得很大的一个原因是，关系除法适
算的定义有很多个。除了这里介绍过的两种类型的除法运算之外，C.J.Date还
使用EXISTS谓词定义了一种“带余除法送算”，它和前面介绍的除法运算在处理
结果上稍微有点不网。C.J.Date 的除法适算是在表Items 为空的时候返回所有的
店铺，而前面介绍的使用COUNT函数的除法适算则会适回空。关系除法适算的标
准化进程比较缓慢，而且也没有专用的运算符，所以时而会发生这样怪异的现象。
本节小结
很多人觉得HAVING子句像是影视剧里的配角一样，并没有太多的出
场机会，仿佛是一种附属品，从而轻视了它。但是读过本节内容后，相信
大家就能明白，HAVING子句其实是非常强大的，它是面向集合语言的
大利器。特别是与CASE表达式或自连接等其他技术结合使用更能发挥它
的威力。
下面是本节要点。