(cid:4)(cid:1)(cid:4)(cid:13)
(cid:5)(cid:1)(cid:6)(cid:13)
(cid:5)(cid:1)(cid:4)(cid:13)
(cid:4)(cid:1)(cid:10)(cid:13)
(cid:4)(cid:1)(cid:9)(cid:13)
(cid:4)(cid:1)(cid:8)(cid:13)
(cid:4)(cid:1)(cid:6)(cid:13)
(cid:4)(cid:1)(cid:4)(cid:13)
(cid:5)(cid:12)(cid:1)(cid:7)(cid:14)(cid:25)(cid:18)(cid:17)
(cid:4)(cid:3)(cid:2)(cid:1)(cid:5)(cid:3)(cid:2)(cid:1)(cid:4) (cid:3)(cid:2)(cid:1)(cid:3) (cid:3)(cid:2)(cid:1)(cid:2) (cid:3)(cid:2) (cid:5)(cid:3)(cid:2)(cid:2)
(cid:11)(cid:7)(cid:9)(cid:6)(cid:12)(cid:8)(cid:13)(cid:7)(cid:1)(cid:7)(cid:11)(cid:11)(cid:10)(cid:11)
(cid:10)(cid:20)(cid:24)(cid:17)(cid:21)(cid:20)(cid:23)(cid:17)(cid:1)(cid:7)(cid:14)(cid:25)(cid:18)(cid:17)
(cid:4)(cid:3)(cid:2)(cid:1)(cid:5)(cid:3)(cid:2)(cid:1)(cid:4) (cid:3)(cid:2)(cid:1)(cid:3) (cid:3)(cid:2)(cid:1)(cid:2) (cid:3)(cid:2) (cid:5)(cid:3)(cid:2)(cid:2)
(cid:11)(cid:7)(cid:9)(cid:6)(cid:12)(cid:8)(cid:13)(cid:7)(cid:1)(cid:7)(cid:11)(cid:11)(cid:10)(cid:11)
(cid:11)(cid:15)(cid:19)(cid:17)(cid:16)(cid:26)(cid:21)(cid:17)(cid:25)(cid:1)(cid:7)(cid:14)(cid:25)(cid:18)(cid:17)
(cid:4)(cid:3)(cid:2)(cid:1)(cid:5)(cid:3)(cid:2)(cid:1)(cid:4) (cid:3)(cid:2)(cid:1)(cid:3) (cid:3)(cid:2)(cid:1)(cid:2) (cid:3)(cid:2) (cid:5)(cid:3)(cid:2)(cid:2)
(cid:11)(cid:7)(cid:9)(cid:6)(cid:12)(cid:8)(cid:13)(cid:7)(cid:1)(cid:7)(cid:11)(cid:11)(cid:10)(cid:11)
(cid:5)(cid:1)(cid:4)(cid:14)
(cid:4)(cid:1)(cid:11)(cid:14)
(cid:4)(cid:1)(cid:10)(cid:14)
(cid:4)(cid:1)(cid:8)(cid:14)
(cid:4)(cid:1)(cid:6)(cid:14)
(cid:4)(cid:1)(cid:4)(cid:14)
(cid:5)(cid:1)(cid:4)(cid:14)
(cid:4)(cid:1)(cid:11)(cid:14)
(cid:4)(cid:1)(cid:10)(cid:14)
(cid:4)(cid:1)(cid:8)(cid:14)
(cid:4)(cid:1)(cid:6)(cid:14)
(cid:4)(cid:1)(cid:4)(cid:14)
(cid:5)(cid:1)(cid:4)(cid:14)
(cid:4)(cid:1)(cid:11)(cid:14)
(cid:4)(cid:1)(cid:10)(cid:14)
(cid:4)(cid:1)(cid:8)(cid:14)
(cid:4)(cid:1)(cid:6)(cid:14)
(cid:4)(cid:1)(cid:4)(cid:14)
(cid:5)(cid:7)(cid:2)(cid:3)
(cid:4)(cid:10)(cid:1)(cid:9)(cid:19)(cid:11)(cid:18)(cid:18)
(cid:5)(cid:7)(cid:10)(cid:6)
(cid:4)(cid:10)(cid:1)(cid:7)(cid:14)(cid:13)(cid:17)(cid:23)(cid:19)
(cid:5)(cid:2)(cid:3)(cid:3)
(cid:5)(cid:1)(cid:4)(cid:14)
(cid:4)(cid:1)(cid:11)(cid:14)
(cid:4)(cid:1)(cid:10)(cid:14)
(cid:4)(cid:1)(cid:8)(cid:14)
(cid:4)(cid:1)(cid:6)(cid:14)
(cid:4)(cid:3)(cid:2)(cid:1)(cid:5)(cid:3)(cid:2)(cid:1)(cid:4) (cid:3)(cid:2)(cid:1)(cid:3) (cid:3)(cid:2)(cid:1)(cid:2) (cid:3)(cid:2) (cid:5)(cid:3)(cid:2)(cid:2)
(cid:11)(cid:7)(cid:9)(cid:6)(cid:12)(cid:8)(cid:13)(cid:7)(cid:1)(cid:7)(cid:11)(cid:11)(cid:10)(cid:11)
(cid:8)(cid:17)(cid:21)(cid:14)(cid:18)(cid:17)(cid:20)(cid:14)(cid:1)(cid:9)(cid:19)(cid:11)(cid:18)(cid:18)
(cid:4)(cid:3)(cid:2)(cid:1)(cid:5)(cid:3)(cid:2)(cid:1)(cid:4) (cid:3)(cid:2)(cid:1)(cid:3) (cid:3)(cid:2)(cid:1)(cid:2) (cid:3)(cid:2) (cid:5)(cid:3)(cid:2)(cid:2)
(cid:11)(cid:7)(cid:9)(cid:6)(cid:12)(cid:8)(cid:13)(cid:7)(cid:1)(cid:7)(cid:11)(cid:11)(cid:10)(cid:11)
(cid:9)(cid:12)(cid:16)(cid:14)(cid:13)(cid:23)(cid:18)(cid:14)(cid:22)(cid:1)(cid:9)(cid:19)(cid:11)(cid:18)(cid:18)
(cid:4)(cid:1)(cid:4)(cid:14)
(cid:5)(cid:1)(cid:4)(cid:14)
(cid:4)(cid:1)(cid:11)(cid:14)
(cid:4)(cid:1)(cid:10)(cid:14)
(cid:4)(cid:1)(cid:8)(cid:14)
(cid:4)(cid:1)(cid:6)(cid:14)
(cid:4)(cid:1)(cid:4)(cid:14)
(cid:5)(cid:1)(cid:4)(cid:14)
(cid:4)(cid:1)(cid:11)(cid:14)
(cid:4)(cid:1)(cid:10)(cid:14)
(cid:4)(cid:1)(cid:8)(cid:14)
(cid:4)(cid:1)(cid:6)(cid:14)
(cid:4)(cid:1)(cid:4)(cid:14)
(cid:4)(cid:3)(cid:2)(cid:1)(cid:5)(cid:3)(cid:2)(cid:1)(cid:4) (cid:3)(cid:2)(cid:1)(cid:3) (cid:3)(cid:2)(cid:1)(cid:2) (cid:3)(cid:2) (cid:5)(cid:3)(cid:2)(cid:2)
(cid:11)(cid:7)(cid:9)(cid:6)(cid:12)(cid:8)(cid:13)(cid:7)(cid:1)(cid:7)(cid:11)(cid:11)(cid:10)(cid:11)
(cid:8)(cid:17)(cid:21)(cid:14)(cid:18)(cid:17)(cid:20)(cid:14)(cid:1)(cid:7)(cid:14)(cid:13)(cid:17)(cid:23)(cid:19)
(cid:4)(cid:3)(cid:2)(cid:1)(cid:5)(cid:3)(cid:2)(cid:1)(cid:4) (cid:3)(cid:2)(cid:1)(cid:3) (cid:3)(cid:2)(cid:1)(cid:2) (cid:3)(cid:2) (cid:5)(cid:3)(cid:2)(cid:2)
(cid:11)(cid:7)(cid:9)(cid:6)(cid:12)(cid:8)(cid:13)(cid:7)(cid:1)(cid:7)(cid:11)(cid:11)(cid:10)(cid:11)
(cid:9)(cid:12)(cid:16)(cid:14)(cid:13)(cid:23)(cid:18)(cid:14)(cid:22)(cid:1)(cid:7)(cid:14)(cid:13)(cid:17)(cid:23)(cid:19)
(cid:4)(cid:3)(cid:2)(cid:1)(cid:5)(cid:3)(cid:2)(cid:1)(cid:4) (cid:3)(cid:2)(cid:1)(cid:3) (cid:3)(cid:2)(cid:1)(cid:2) (cid:3)(cid:2) (cid:5)(cid:3)(cid:2)(cid:2)
(cid:11)(cid:7)(cid:9)(cid:6)(cid:12)(cid:8)(cid:13)(cid:7)(cid:1)(cid:7)(cid:11)(cid:11)(cid:10)(cid:11)
(cid:5)(cid:1)(cid:4)(cid:14)
(cid:4)(cid:1)(cid:11)(cid:14)
(cid:4)(cid:1)(cid:10)(cid:14)
(cid:4)(cid:1)(cid:8)(cid:14)
(cid:4)(cid:1)(cid:6)(cid:14)
(cid:4)(cid:1)(cid:4)(cid:14)
(cid:5)(cid:1)(cid:4)(cid:14)
(cid:4)(cid:1)(cid:11)(cid:14)
(cid:4)(cid:1)(cid:10)(cid:14)
(cid:4)(cid:1)(cid:8)(cid:14)
(cid:4)(cid:1)(cid:6)(cid:14)
(cid:4)(cid:1)(cid:4)(cid:14)
(cid:4)(cid:1)(cid:10)(cid:14)
(cid:4)(cid:1)(cid:9)(cid:14)
(cid:4)(cid:1)(cid:8)(cid:14)
(cid:4)(cid:1)(cid:7)(cid:14)
(cid:4)(cid:1)(cid:6)(cid:14)
(cid:4)(cid:1)(cid:5)(cid:14)
(cid:4)(cid:1)(cid:4)(cid:14)
(cid:4)(cid:10)(cid:1)(cid:6)(cid:11)(cid:22)(cid:15)(cid:14)
(cid:4)(cid:3)(cid:2)(cid:1)(cid:5)(cid:3)(cid:2)(cid:1)(cid:4) (cid:3)(cid:2)(cid:1)(cid:3) (cid:3)(cid:2)(cid:1)(cid:2) (cid:3)(cid:2) (cid:5)(cid:3)(cid:2)(cid:2)
(cid:11)(cid:7)(cid:9)(cid:6)(cid:12)(cid:8)(cid:13)(cid:7)(cid:1)(cid:7)(cid:11)(cid:11)(cid:10)(cid:11)
(cid:8)(cid:17)(cid:21)(cid:14)(cid:18)(cid:17)(cid:20)(cid:14)(cid:1)(cid:6)(cid:11)(cid:22)(cid:15)(cid:14)
(cid:4)(cid:3)(cid:2)(cid:1)(cid:5)(cid:3)(cid:2)(cid:1)(cid:4) (cid:3)(cid:2)(cid:1)(cid:3) (cid:3)(cid:2)(cid:1)(cid:2) (cid:3)(cid:2) (cid:5)(cid:3)(cid:2)(cid:2)
(cid:11)(cid:7)(cid:9)(cid:6)(cid:12)(cid:8)(cid:13)(cid:7)(cid:1)(cid:7)(cid:11)(cid:11)(cid:10)(cid:11)
(cid:9)(cid:12)(cid:16)(cid:14)(cid:13)(cid:23)(cid:18)(cid:14)(cid:22)(cid:1)(cid:6)(cid:11)(cid:22)(cid:15)(cid:14)
(cid:4)(cid:3)(cid:2)(cid:1)(cid:5)(cid:3)(cid:2)(cid:1)(cid:4) (cid:3)(cid:2)(cid:1)(cid:3) (cid:3)(cid:2)(cid:1)(cid:2) (cid:3)(cid:2) (cid:5)(cid:3)(cid:2)(cid:2)
(cid:11)(cid:7)(cid:9)(cid:6)(cid:12)(cid:8)(cid:13)(cid:7)(cid:1)(cid:7)(cid:11)(cid:11)(cid:10)(cid:11)
(cid:4)(cid:3)(cid:2)(cid:1)(cid:5)(cid:3)(cid:2)(cid:1)(cid:4) (cid:3)(cid:2)(cid:1)(cid:3) (cid:3)(cid:2)(cid:1)(cid:2) (cid:3)(cid:2) (cid:5)(cid:3)(cid:2)(cid:2)
(cid:11)(cid:7)(cid:9)(cid:6)(cid:12)(cid:8)(cid:13)(cid:7)(cid:1)(cid:7)(cid:11)(cid:11)(cid:10)(cid:11)
(cid:4)(cid:3)(cid:2)(cid:1)(cid:5)(cid:3)(cid:2)(cid:1)(cid:4) (cid:3)(cid:2)(cid:1)(cid:3) (cid:3)(cid:2)(cid:1)(cid:2) (cid:3)(cid:2) (cid:5)(cid:3)(cid:2)(cid:2)
(cid:11)(cid:7)(cid:9)(cid:6)(cid:12)(cid:8)(cid:13)(cid:7)(cid:1)(cid:7)(cid:11)(cid:11)(cid:10)(cid:11)
Fig. 5. Distribution of the fault syndrome (relative error) from the RTL
fault injection in the Functional Units (top), Pipeline (middle), and Scheduler
(bottom) for the ﬂoating point instructions executed with S, M, L inputs.
Fig. 6. Distribution of the fault syndrome (relative error) from the RTL
fault injection in the Functional Units (top), Pipeline (middle), and Scheduler
(bottom) for the integer instructions executed with S, M, L inputs.
a warp (32 threads).
The high DUE AVF for the pipeline (0.3% for ﬂoating point,
2% for integer, 4% for special units, 10% for control opera-
tions) is caused by corruptions of pipeline control registers
that, despite being few (≈16%), are conﬁrmed to be highly
critical. The DUE AVF is exacerbated for special function
units, because of the additional control signals required to
share the use of the few available SFUs, and for control ﬂow
operations (GLD, GST, BRA, ISET) for which faults in the
data path are likely to corrupt the control ﬂow.
The scheduler DUE AVF is almost constant (between 0.5%
and 0.6%) for all instructions but BRA and ISET, for which
the DUE AVF is about 0.8%. Tracking the fault propagation
we found that scheduler DUEs are caused by faults affecting
structures in the controller devoted to store the state of the
warp or memory addresses. In contrast, the scheduler SDCs are
mostly caused by faults affecting warp state bits, so disabling
active or enabling inactive threads.
As observed in Figure 4,
the functional units AVF for
the ﬂoating point
instructions (FADD, FMUL, FMAD) is
much smaller than for the integer instructions (IADD, IMUL,
IMAD). This is caused by the higher complexity and area of
the ﬂoating point units, that are more than 3x larger than the
integer units (see Table I). A larger area increases the number
of injection sites, thus reducing the probability to hit a critical
resource for computation.
include any information about
It is worth noting that the AVF assumes that a fault has
occurred and does not
the
probability for the fault to be generated. In order to consider
also the fault generation probability, the modules AVF should
be weighted with the module relative size (shown in Table I).
A more accurate evaluation would consider the fault rate of
the different modules, for which either proprietary information
on the technology sensitivity or beam experiments would
be necessary. As a ﬁrst evaluation, combining Table I and
Figure 4, we can say that functional units, having a huge size
and high AVF, are likely to be the source of most SDCs, while
pipelines are likely to be the cause of most DUEs.
C. Fault Syndrome
For each SDC observed at the instructions output we keep
a detailed report (described in Section IV-A), that includes
also the corrupted output value. We characterize the fault
syndrome by measuring the relative error induced by the
fault. We also perform an additional analysis of the binary
distribution of errors at the output (how many bits of the output
are corrupted and in which position). Nevertheless, there was
not a clear pattern for the bits corruption (in the large majority
of cases, ≈24 bits are wrong, randomly distributed). This is
in accordance with the fact that computational faults induce a
not-obvious syndrome, as also observed in [18].
The relative error syndrome analysis highlights a very
interesting trend. Figures 5 and 6 show the distribution of
relative errors for the tested micro-benchmarks. We plot, in
the y-axes, the percentage of observed SDCs that modify the
instruction output value from less than 10−8 to over 102. That
is, 0.2% of SDCs observed on FADD executed with the Small
input range modify the output value by 10−6× and 0.3% of
SDCs observed on FFMA executed with the Large input range
modify the output value by 10×.
As depicted in Figures 5 for ﬂoating point and in Figure 6
for integer instructions, the relative difference between the
observed corrupted values and the expected value does not
follow a Gaussian distribution. For all instructions there is a
clear peak that depends on the input range and on the injection
Authorized licensed use limited to: Tsinghua University. Downloaded on October 11,2021 at 08:56:48 UTC from IEEE Xplore.  Restrictions apply. 
299
(cid:2)
(cid:5)
(cid:1)
(cid:10)(cid:12)(cid:1)(cid:17)
(cid:10)(cid:11)(cid:1)(cid:17)
(cid:10)(cid:9)(cid:1)(cid:17)
(cid:14)(cid:1)(cid:17)
(cid:13)(cid:1)(cid:17)
(cid:12)(cid:1)(cid:17)
(cid:11)(cid:1)(cid:17)
(cid:9)(cid:1)(cid:17)
(cid:6)(cid:12)(cid:15)(cid:11)(cid:13)(cid:10)(cid:1)(cid:6)(cid:3)(cid:2)
(cid:5)(cid:21)(cid:13)(cid:20)(cid:12)(cid:17)(cid:13)(cid:10)(cid:1)(cid:8)(cid:16)(cid:18)(cid:18)(cid:21)(cid:17)(cid:20)(cid:10)(cid:9)(cid:1)(cid:10)(cid:13)(cid:10)(cid:14)(cid:10)(cid:15)(cid:20)(cid:19)
(cid:3)(cid:7)(cid:4)
(cid:4)
(cid:2)(cid:5)(cid:6)
(cid:3)
(cid:4)
(cid:4)(cid:6)(cid:9)(cid:8)(cid:7)(cid:15)(cid:11)(cid:8)(cid:14)
(cid:2)(cid:5)(cid:6)
(cid:3)(cid:10)(cid:13)(cid:8)(cid:11)(cid:10)(cid:12)(cid:8)
(cid:3)
Fig. 7. AVF of the scheduler (left) and pipeline (right) for DUEs, single and
multiple thread SDCs for the Max, Zero, and Random t-MxM.
DISTRIBUTION OF THE MULTIPLE PATTERNS (SINGLE CORRUPTED
ELEMENTS ARE NOT LISTED) OBSERVED WITH T-MXM.
TABLE II
inj. site
scheduler
pipeline
col.
row
0.96% 0.07% 0.45%
45.4% 1.36% 1.04%
row+col.
rand.
block
5.77% 0.69% 54.6%
7.29% 0.42% 4.17%
all
site. In some conﬁgurations (FFMA and FMUL FU injections
with L input) two peaks are present. It is also interesting
to notice that the relative difference distribution is narrow, if
compared to the ﬂoating point or integer representation range.
Only in few cases (less than 0.05%), we observed a syndrome
with a relative error higher than 102 (i.e., the corrupted output
value is 100x bigger/smaller than the expected one). This
observation attests that even injecting a random number of bit-
ﬂips in the instruction output might not be realistic. Our results
show that
there is a limited difference between corrupted
and correct values. Interestingly, the median of the syndrome
values between S/M/L varies by just ∼1% in all cases but
MUL and FMA, for which the median changes by up to 30%
(bigger input range has higher median). Only for MUL and
FMA, then, we expect a syndrome dependence on the input.
Once the opcode, the input range, and the injection site
have been determined, to injecting the syndrome in software
we need to select a relative error, statistically taken from
the data presented in Figures 5 and 6 and available in [23].
The syndrome (as relative error) does not follow a Gaussian
distribution (all distributions have a p-value smaller than 0.05
on the Shapiro-Wilk test), but rather follows a power law
distribution [43], in which few events are predominant. We
create a Pseudo-Random Number Generator (PRNG) function,
based on the mathematical formalization in [43], that generates
the syndrome to be injected as follows:
relative error = P −1(1 − r) = xmin(1 − r)−1/(α−1)
(1)
Where 0 ≤ r < 1 is a uniformly distributed random value, α
is the scaling factor, and xmin is the values lower bound. Both
parameters are extracted from our data based on the methods
described in [43].
D. Tiled MxM errors distribution
To better study the impact of multiple threads corruptions in
codes with threads interactions we have characterized, with the
Fig. 8.
Spatial distribution of the multiple corrupted elements patterns
observed in the RTL injection on the mini-app t-MxM. Arrows indicate that
neither the position of the observed pattern nor the block size are ﬁxed.
RTL fault injector, the mini-app t-MxM. We test three input