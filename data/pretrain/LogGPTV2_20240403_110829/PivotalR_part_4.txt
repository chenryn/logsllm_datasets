by(dat, dat$sex, function(x) madlib.lm(rings ~ . - id - sex, data = x))
db.disconnect(cid, verbose = FALSE)
## End(Not run)
cbind2-methods Combinetwodb.objObjectsbyColumns
Description
cbind2 or cbind combine two or multiple db.obj objects to form a new db.obj. And as.list
doestheoppositeandexpandadb.objobjectintoalistofdb.objobjectswitheachoneofthem
representing one column of the original db.obj object. as.list is usually used together with
ReduceandMap.
Usage
## S4 method for signature 'db.obj,db.obj'
cbind2(x, y)
## S4 method for signature 'db.obj'
as.list(x, array = FALSE, ...)
Arguments
x, y Thesignatureofthemethod. Bothargumentsaredb.objobjects.
array logical,defaultisFALSE.WhenitisTRUE,thearraycolumnsarealsoexpanded
andalltheelementsareputintotheresultinglist. Otherwise, anarraycolumn
istreatedasasingleitemintheresult.
... In cbind they can be anything that can form new columns together with x. In
as.list,itisnotimplementedyet.
cbind2-methods 29
Value
cbind2orcbind: Adb.Rqueryobject,whichcontainsallcolumnsofxandy.
as.list: Alistofdb.Rqueryobjects,whicharethecolumnsofx
Author(s)
Author: PredictiveAnalyticsTeamatPivotalInc.
Maintainer: FrankMcQuillan,PivotalInc. 
SeeAlso
db.arraycombinescolumnsofatable/viewintoanarray.
array.lenmeasuresthelengthofthearrayinanarraycolumn.
Examples
## Not run:
## set up the database connection
## Assume that .port is port number and .dbname is the database name
cid 
SeeAlso
madlib.arimacreatesthreetableswithnamesstartingwith"__madlib_temp_"whenitfitsARIMA
modeltotimeseries
delete,arima.css.madlib-methoddeletestheresultofmadlib.arimatogetherwiththemodel,
residualandstatisticstables.
Examples
## Not run:
## set up the database connection
## Assume that .port is port number and .dbname is the database name
cid 
Maintainer: FrankMcQuillan,PivotalInc. 
SeeAlso
coef.
Examples
## Not run:
## set up the database connection
## Assume that .port is port number and .dbname is the database name
cid  e2
## S4 method for signature 'db.obj,db.obj'
e1 = e2
## S4 method for signature 'db.obj,db.obj'
e1  e2
## S4 method for signature 'character,db.obj'
e1 = e2
## S4 method for signature 'character,db.obj'
e1  e2
## S4 method for signature 'db.obj,character'
e1 = e2
## S4 method for signature 'db.obj,character'
e1  e2
## S4 method for signature 'numeric,db.obj'
e1 = e2
## S4 method for signature 'numeric,db.obj'
e1  e2
## S4 method for signature 'db.obj,numeric'
e1 = e2
## S4 method for signature 'db.obj,numeric'
e1 
SeeAlso
db.RquerycontainsaSQLquerythatdoestheoperations.
Examples
## Not run:
## get the help for a method
## help(">,db.obj,db.obj-method")
## set up the database connection
## Assume that .port is port number and .dbname is the database name
cid  10,])
db.disconnect(cid, verbose = FALSE)
## End(Not run)
conn.eql Checkwhethertwoconnectionsarethesame
Description
Two connections are regarded as equal if and only if they have the same database name, host,
DBMS,andportnumber.
Usage
conn.eql(conn.id1, conn.id2)
Arguments
conn.id1 Aninteger,aconnectionIDnumber.
conn.id2 Aninteger,anotherconnectionIDnumber.
36 conn.id
Value
Alogical.TRUEifandonlyifthetwoconnectionshavethesamedatabasename,host,DBMS,and
portnumber.
Author(s)
Author: PredictiveAnalyticsTeamatPivotalInc.
Maintainer: FrankMcQuillan,PivotalInc. 
SeeAlso
connection infohasallfunctionsthatcanextractinformationaboutthedatabaseconnection.
db.connectcreatesconnectionstothedatabases.
db.disconnectdisconnectsanexistingconnection.
db.listlistsallthecurrentconnectionswiththeirinformation.
Examples
## Not run:
## set up the database connection
## Assume that .port is port number and .dbname is the database name
cid1 
SeeAlso
db.connectcreatesconnectionstothedatabases.
db.disconnectdisconnectsanexistingconnection.
db.listlistsallthecurrentconnectionswiththeirinformation.
connection infohasallfunctionsthatcanextractinformationaboutthedatabaseconnection.
conn.eqltestswhethertwoconnectionsareactuallythesameone.
Examples
## Not run:
## set up the database connection
## Assume that .port is port number and .dbname is the database name
cid1 <- db.connect(port = .port, dbname = .dbname, verbose = FALSE)
cid2 <- db.connect(port = .port, dbname = .dbname, verbose = FALSE)
db.list() # list the two connections