User: How to use Ansible for automated deployment? Please provide an Ansible Playbook to implement software deployment and configuration on the specified server.
Assistant: Ansible is an automated configuration management tool that helps administrators automate the configuration and deployment of servers. Below is a simple Ansible Playbook to help you get started with Ansible for automated deployments: --- ## Playbook Description - This Playbook will install and configure the following software: - Apache - MySQL - PHP - Before executing this Playbook, make sure you have Create a target hostgroup called `web` and define it in the `/etc/ansible/hosts` file. --- ```yaml --- - name: Web Server Configuration Playbook hosts: web become: true vars: # Installation version httpd_version: "2.4.6" mysql_version: "5.7" php_version: "7.2" # MySQL root password mysql_root_password : "password" tasks: # Install Apache - name: Install Apache yum: name: httpd state: present version: "{{ httpd_version }}" tags: - apache # Install MySQL - name: Install MySQL yum: name: mysql-server state: present version: "{{ mysql_version }}" tags: - mysql # Configure MySQL - name: Configure MySQL mysql_user: login_unix_socket: /var/lib/mysql/mysql.sock name: root password: "{{ mysql_root_password }}" host: localhost state: present tags: - mysql # Install PHP - name: Install PHP yum: name: php state: present version: "{{ php_version }}" tags: - php # Configure Apache and PHP - name: Configure Apache and PHP template: src: templates/httpd.conf.j2 dest: /etc/httpd/conf/httpd.conf mode: '0644' notify: - restart apache tags: - apache - php # Start Apache - name: Start Apache service: name: httpd state: started enabled: true tags: - apache # Restart Apache handlers: - name: restart apache service: name: httpd state: restarted ``` The above Ansible Playbook will: - Install Apache with version `httpd_version`. - Install MySQL with version `mysql_version`, and set the MySQL root password to `mysql_root_password`. - Install PHP with version `php_version`. - Copy the `httpd.conf.j2` template into the target server and make it available to configure Apache and PHP. - Start Apache.