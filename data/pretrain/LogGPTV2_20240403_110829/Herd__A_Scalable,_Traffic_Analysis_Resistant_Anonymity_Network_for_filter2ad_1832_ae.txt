# 优化后的文本

## 图5：Drac和Herd客户端的带宽需求
Herd客户端保持少量且恒定数量的混淆连接，导致其带宽需求均匀且较低。

## 图6：混合节点（顶部）和超级节点（底部）的CPU利用率与支持的客户端数量的关系
当客户端连接到3个通道而不是2个时，平均阻塞率下降了一个数量级。
超级节点有极大的潜力来减轻混合节点的负载。在我们的模拟中，这些节省的资源在每个通道分别有5个和50个客户端的情况下，变化范围为80%到98%。这种低阻塞率和高节省率是由于语音工作负载的瞬时系统利用率较低——在我们考虑的一整天的跟踪数据中，峰值占空比（即同时打电话的用户比例峰值）仅为1.6%。

### 每用户美元成本
我们现在使用基于跟踪的模拟结果来估计运行Herd的成本，针对大量客户端使用Amazon EC2混合节点。我们使用AWS计算器探索设计空间中的多个点。成本范围从每月每用户$0.10到$1.14。成本范围的低端对应于任何时间1%的用户同时进行通话且只有10%的跨区呼叫；而高端则对应于2%的用户同时进行通话（高于我们在上述跟踪数据中观察到的峰值值）以及100%的跨区呼叫。相对较低的成本原因在于EC2内部区域流量（即在同一数据中心内的数据流量）不产生费用，跨区域流量（即在EC2数据中心之间）产生较低费用，而流向超级节点和客户端的流量成本最高。因为大多数流量是在同一区域内的混合节点之间，并且离开云的流量相对较小，因此总体成本较低。因此，我们认为Herd的设计在扩展到数百万用户时具有足够的经济性。

以上估算假设超级节点免费提供服务，并且我们不对超级节点使用Herd收费。作为一种额外激励，我们可以向超级节点支付费用以换取它们对系统的贡献：在这种情况下，每个付费用户的成本将额外增加$0.14。值得注意的是，选择不在部署中包含超级节点可能会显著影响成本。我们的估计显示，如果不在Herd中包括超级节点，那么每个用户的月成本将是两个数量级更高（$10-100/月/用户）。

### 总结
在一个纯粹基于基础设施的系统中为VoIP提供强大的匿名性相对昂贵，但一组具有良好连接、利他但不受信任的主机可以大幅降低成本。

## 4.2 原型性能
接下来，我们将展示对Herd的CPU、内存和带宽消耗的实验评估。

### 目标和方法
我们评估了第3.8节所述的Herd实现，在有无超级节点的情况下，混合节点的性能表现，同时改变客户端数量（从0到100）。混合节点和超级节点各自托管在Dell OptiPlex 980上（2.8GHz Intel Core i5-760, 8GB RAM），而客户端则共同托管在另一台相同型号的机器上（3.2GHz Intel Core i5-650, 8GB RAM）。对于每种配置，我们启动了三个持续时间为60秒的运行，并使用Linux time命令测量Herd网络进程的CPU利用率，该进程执行所有数据平面处理。CPU利用率是用户和系统CPU时间之和除以实际经过的时间。

### 结果
超级节点减少了混合节点的资源需求。正如预期的那样，使用超级节点将支持n个客户端所需的带宽减少到了近n/a倍，其中a是并发活跃通话的数量（在我们的实验中为1）。此外，如图6所示，没有超级节点时，混合节点的网络进程在支持100个客户端时的CPU利用率为59%，而一个超级节点与混合节点之间有一个混淆连接时，该利用率仅降低至3%。支持一个额外客户端的边际CPU利用率分别为0.01%和0.6%，分别对应有无超级节点的情况。原因是超级节点的网络编码所需的CPU周期远少于维护与多个客户端之间的混淆连接。最后，无论配置如何，混合节点上的内存利用率都很低。例如，没有超级节点的混合节点在支持100个客户端时使用了3.4MB虚拟内存。

### 总结
超级节点将混合节点的带宽和CPU要求降低了整整一个数量级。

## 4.3 用户感知的通话质量
现在我们通过实验比较Drac和Herd的用户感知通话质量。

### 4.3.1 目标：用户感知的通话质量
我们使用E-Model来评估作者进行的实际VoIP通话的质量。E-Model是由国际电信联盟（ITU）定义的一种通话质量分析模型，用于计算评分因子（R-factor），这是一种简单的语音质量度量标准[34]。R-factor的范围是从0到100，并直接决定了平均意见得分（MOS），其范围从1（差）到5（完美）。对于VoIP环境，R-factor是根据口到耳延迟和丢包率定义的。更多细节请参阅Cole等人的研究[25]。

### 4.3.2 系统、部署和方法
**Drac**：由于没有可用的Drac实现，我们使用ping来测量联系人之间的直接延迟（H=0）。Drac在联系人之间直接建立通话。
**Herd**：对于Herd，我们在部署中使用了第3.8节中介绍的实现。Herd通过发送者-接收者相互匿名的电路和超级节点路由流量。
**部署**：为了在实践中评估Herd的通话质量，我们部署了一个完整的Herd系统，包括4个区域，并请求志愿者在每个区域对之间进行单向通话。目前我们的部署包括8个混合节点和会合点、2个目录服务器和4个超级节点，均托管在Amazon EC2上。我们使用了ClojureScript 0.0-2644、node.js 0.10.12、Jitsi 2.4以及Core OS 522.6.0的EC2小型和中型实例。
**方法**：在这次通话质量实验中，我们的4名志愿者（连接自大学网络）每人给位于其他4个区域之一的另一位志愿者拨打了一次电话（总共12次通话），并收听由被叫方托管的预录语音邮件。尽管VoIP通话是全双工的，但每个方向的传输在逻辑上是独立的，因此我们的实验仅在一个方向上传输语音。我们采用了行业标准ITU的方法[5]。
**测试过程**：在本实验中，Herd客户端进行了以下测试。首先，接收到来电后，每个客户端自动播放预录的语音邮件。（我们将语音邮件托管在志愿者处，以确保通话经历真实的端到端丢包和延迟。）其次，活动客户端定期（即每秒）测量呼叫者和被叫者之间的端到端延迟和丢包率。

### 4.3.3 结果：用户感知的通话质量
我们在图7中展示了Drac (H=0) 和Herd的用户感知通话质量。在没有丢包的情况下，欧洲、北美和南美之间的延迟表现出高质量或完美的通话质量，而澳大利亚与其他地区之间的延迟表现为中等质量。在我们的实验中，丢包率从未超过几个百分点，根据E-Model，这将导致最多一个MOS级别的损失，无论哪种系统都一样。

### 总结
Herd实现了适度的额外延迟，同时显著减少了客户端的带宽需求，并且相比Drac（即10.8M vs. 1）提供了更大的匿名集合。

## 图7：Drac (H=0) 和Herd在澳大利亚（AU）、欧洲（EU）、北美（NA）和南美（SA）各位置之间的单向延迟。从上到下的彩色水平带分别对应于较差、低、中、高和完美的感知质量界限。Herd比Drac增加了大约100毫秒的单向延迟。

## 5. 结论与未来工作
Herd是一种新型的VoIP匿名网络，能够在面对强大对手时提供强大的匿名性，同时保持良好的通话质量和适中的成本。Herd的架构依赖于可信的基础结构混合节点来实现区域匿名性，其中用户在其所选提供商的区域内匿名集的大小取决于用户的选择。Herd以一种新颖的方式使用网络编码，将资源需求从其可信基础结构转移到不可信的超级节点，从而能够利用不可信方提供的资源贡献来提高可扩展性和降低成本。Herd依靠分层加密和混淆连接来掩盖强大的对手在全球网络访问下可能发现的通话活动，同时利用VoIP流量特性来减少带宽需求。我们通过在Amazon EC2上部署的实现和基于经验通话数据的跟踪模拟证明了Herd是一个实用且性能良好的解决方案。目前，我们正在将混合节点迁移到多样化的托管中心，为公开发布做准备。未来的工作包括支持群组和视频通话，以及将Herd移植到浏览器并适应移动平台。

### 致谢
感谢匿名评审员、我们的指导老师Stefan Savage以及Bobby Bhattacharjee的宝贵反馈。我们还要感谢Saptarshi Ghosh、Krishna Gummadi、Mainack Mondal和Bimal Viswanath与我们分享他们的数据集。最后，我们要感谢Zheng Leong Chua、Italo Cunha和Vincent Gramoli帮助我们测试了Herd原型实现。这项工作得到了马克斯·普朗克学会、欧洲研究委员会（ERC）imPACT协同资助项目（编号610150）以及美国国家科学基金会（NSF）CNS-1318396项目的资助。

## 6. 参考文献
[此处列出所有参考文献]

---

希望这些修改使您的文本更加清晰、连贯和专业。如果有进一步的需求或需要更多的修改，请随时告诉我！