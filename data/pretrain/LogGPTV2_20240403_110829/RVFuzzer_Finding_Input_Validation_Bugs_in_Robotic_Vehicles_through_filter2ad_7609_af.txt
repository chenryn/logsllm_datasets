programs rely on well-established mechanisms for (1) bug de-
tection and (2) input mutation. Speciﬁcally, these testing tech-
niques leverage generic, easy-to-detect symptoms of program
failures (e.g., segmentation faults) as indication of a triggered
bug and mutate program input following information (e.g.,
code coverage) agnostic to domain semantics. Compared with
conventional software testing, RVFUZZER addresses new
problems and opportunities when ﬁnding (semantic) input
validation bugs in RV control. Many such bugs do not cause
an immediate, easy-to-detect crash of the control program,
especially when running with an RV simulator. Meanwhile,
control-theoretical properties offer hints to reduce the input
value mutation space.
8 Discussion
Control Parameter Inter-dependencies As revealed by
multi-dimensional mutation, the control parameters may have
dependencies on one another. A speciﬁc value of one parame-
ter can increase or decrease the (in)valid value ranges of other
parameters. The ground truth on such inter-parameter depen-
dencies can only be derived from full knowledge about the
underlying control model and the control program implemen-
tation, given the large number of control variables (including
hundreds of parameters), the wide ranges of their values, and
the inﬂuence from various environmental factors. As a result,
it is challenging to fully and accurately capture the control
parameter inter-dependencies, with only the binary of a con-
trol program. In this work, we consider the subject control
program binary as a black box and take a pragmatic approach
by only revealing part of such inter-dependencies. A more
generic approach to control parameter dependency derivation
– possibly based on source code and a formal control model –
is left as future work.
Standard Safety Testing and Certiﬁcation For the safety
of avionics software for airborne systems, there exist standard
safety tests and software certiﬁcations such as DO-178B/C [4]
and ISO/IEC 15408 [3]. To the best of our knowledge, how-
ever, there has been no standard safety testing framework cre-
ated for RVs. We believe that RVFUZZER’s post-production,
black-box-based (i.e., without source code) vetting will serve
as a useful complement to standardized safety testing during
RV design and production.
9 Conclusion
Robotic vehicles (RVs) are facing cyber and cyber-physical
attacks launched via various attack vectors. In this paper,
we identify a new, small-footprint attack against RVs, where
an attacker remotely issues a control parameter-change com-
mand with an illegitimate parameter value to disrupt the RV’s
control and mission. Such a value is erroneously accepted by
the RV control program because of an input validation bug
associated with the control parameter. The attack requires
no code injection, control ﬂow hijacking, or sensor spooﬁng
hence cannot be defeated by existing RV security solutions.
To proactively discover input validation bugs in a control pro-
gram binary, we develop RVFUZZER, a control program test-
ing system that reveals illegitimate-yet-accepted value ranges
of dynamically adjustable control parameters. RVFUZZER
adaptively mutates the input control parameter values to de-
termine the (in)valid value ranges, driven by the detection
of control state deviations in the simulated RV. Furthermore,
it considers the impact of external factors by mutating their
values and presence. RVFUZZER has discovered 89 real in-
put validation bugs in two of the most popular RV control
software suites, with mutation efﬁciency and automation.
438    28th USENIX Security Symposium
USENIX Association
10 Acknowledgment
We thank our shepherd, Nolen Scaife and the anonymous
reviewers for their valuable comments and suggestions. We
also thank Vireshwar Kumar for his detailed feedback and
edits which have improved the quality of the paper. This work
was supported in part by ONR under Grant N00014-17-1-
2045. Any opinions, ﬁndings, and conclusions in this paper
are those of the authors and do not necessarily reﬂect the
views of the ONR.
References
[1] Address space layout randomization, 2001. http://pax.grsecurity.
net/docs/aslr.txt.
[2] Exec shield, 2005. https://static.redhat.com/legacy/f/pdf/
rhel/WHP0006US_Execshield.pdf.
[3] ISO/IEC 15408-1:2009, 2009. https://www.iso.org/standard/50341.html.
[4] RTCA/DO-178C, 2011. Software Considerations in Airborne Systems
and Equipment Certiﬁcation.
[5] SparkFun Autonomous Vehicle Competition 2013, 2013. https://
avc.sparkfun.com/2013.
[6] DHL parcelcopter launches initial operations for research pur-
poses, 2014.
http://www.dhl.com/en/press/releases/
releases_2014/group/dhl_parcelcopter_launches_initial_
operations_for_research_purposes.html.
[7] Gazebo - A dynamic multi-robot simulator, 2014. http://gazebosim.
org.
[8] SITL Simulator (ArduPilot Dev Team), 2014. http://ardupilot.
org/dev/docs/sitl-simulator-software-in-the-loop.html.
exploit,
http://diydrones.com/profiles/blogs/
2015.
hijacking-quadcopters-with-a-mavlink-exploit.
[9] Hijacking
MAVLink
drones
with
a
[10] USPS Drone Delivery | CNBC, 2015. https://www.youtube.com/
watch?v=V9GXiXgaK34&list=PLL3t5xY2V44xOxvTIxS4AHuUhFE_
bMwhz&index=36.
[11] Inertial Navigation Estimation Library, 2016. https://github.com/
priseborough/InertialNav.
[12] 3DR iris+, 2018. https://3dr.com/support/articles/iris.
[13] Amazone Prime Air, 2018.
https://www.amazon.com/b?node=
8037720011.
[14] American Fuzzy Lop, 2018. http://lcamtuf.coredump.cx/afl.
[15] ArduPilot, 2018. http://ardupilot.org.
[16] DJI Phantom 4 Advanced, 2018.
https://www.dji.com/
phantom-4-adv.
[17] Honggfuzz, 2018. https://google.github.io/honggfuzz/.
[18] Intel Aero, 2018. https://software.intel.com/en-us/aero.
[19] libFuzzer, 2018. https://llvm.org/docs/LibFuzzer.html.
[20] LibrePilot, 2018. https://www.librepilot.org.
[21] MAVLink — Micro Air Vehicle Communication Protocol, 2018. https:
//mavlink.io.
[22] MAVProxy - A UAV ground station software package for MAVLink
based systems, 2018. https://ardupilot.github.io/MAVProxy.
[23] Paparazzi UAV - an open-source drone hardware and software project,
2018. http://wiki.paparazziuav.org/wiki/Main_Page.
[24] PX4 Pro Open Source Autopilot - Open Source for Drones, 2018. http:
//px4.io.
[25] Pymavlink - A python implementation of the MAVLink protocol, 2018.
https://github.com/ArduPilot/pymavlink.
[26] QGroundControl - Intuitive and Powerful Ground Control Station for
PX4 and ArduPilot UAVs, 2018. http://qgroundcontrol.com.
[27] Wing - Google X, 2018. https://x.company/projects/wing.
[28] ArduPilot Parameter List, 2019. http://ardupilot.org/copter/
docs/parameters.html.
[29] PX4 Parameter List, 2019. https://dev.px4.io/en/advanced/
parameter_reference.html.
[30] Alireza Abbaspour, Payam Aboutalebi, Kang K Yen, and Arman Sar-
golzaei. Neural adaptive observer-based sensor and actuator fault
detection in nonlinear systems: Application in uav. ISA transactions,
67:317–329, 2017.
[31] Alireza Abbaspour, Kang K Yen, Shirin Noei, and Arman Sargolzaei.
Detection of fault data injection attack on uav using adaptive neural
network. Procedia computer science, 95:193–200, 2016.
[32] Luis Afonso, Nuno Souto, Pedro Sebastiao, Marco Ribeiro, Tiago
Tavares, and Rui Marinheiro. Cellular for the skies: Exploiting mobile
network infrastructure for low altitude air-to-ground communications.
IEEE Aerospace and Electronic Systems Magazine, 31(8), 2016.
[33] JC André, G De Moor, P Lacarrere, and R Du Vachat. Modeling the
24-hour evolution of the mean and turbulent structures of the planetary
boundary layer. Journal of the Atmospheric Sciences, 35(10):1861–
1883, 1978.
[34] Sang Kil Cha, Thanassis Avgerinos, Alexandre Rebert, and David
In Proceedings of
Brumley. Unleashing mayhem on binary code.
the 33rd IEEE Symposium on Security and Privacy (IEEE S&P), IEEE
S&P ’12, 2012.
[35] Sang Kil Cha, Maverick Woo, and David Brumley. Program-adaptive
mutational fuzzing. In Proceedings of the 36th IEEE Symposium on
Security and Privacy (IEEE S&P), IEEE S&P ’15, 2015.
[36] Jiongyi Chen, Wenrui Diao, Qingchuan Zhao, Chaoshun Zuo, Zhiqiang
Lin, XiaoFeng Wang, Wing Cheong Lau, Menghan Sun, Ronghai Yang,
and Kehuan Zhang. Iotfuzzer: Discovering memory corruptions in iot
through app-based fuzzing.
[37] Long Cheng, Ke Tian, and Danfeng Daphne Yao. Orpheus: Enforcing
cyber-physical execution semantics to defend against data-oriented
attacks. In Proceedings of the 33rd Annual Computer Security Applica-
tions Conference (ACSAC), ACSAC ’17, 2017.
[38] Hongjun Choi, Wen-Chuan Lee, Yousra Aafer, Fan Fei, Zhan Tu, Xi-
angyu Zhang, Dongyan Xu, and Xinyan Deng. Detecting attacks
against robotic vehicles: A control invariant approach. In Proceed-
ings of the 25th ACM Conference on Computer and Communications
Security (CCS), CCS ’18, 2018.
[39] Abraham A Clements, Naif Saleh Almakhdhub, Saurabh Bagchi, and
Mathias Payer. Aces: Automatic compartments for embedded systems.
In Proceedings of the 27th USENIX Security Symposium (USENIX
Security), 2018.
[40] Fan Fei, Zhan Tu, Ruikun Yu, Taegyu Kim, Xiangyu Zhang, Dongyan
Xu, and Xinyan Deng. Cross-layer retroﬁtting of uavs against cyber-
physical attacks. In Proceedings of the IEEE International Conference
on Robotics and Automation (ICRA), ICRA ’18, 2018.
[41] Rod Frehlich, Yannick Meillier, Michael L Jensen, Ben Balsley, and
Robert Sharman. Measurements of boundary layer proﬁles in an ur-
ban environment. Journal of applied meteorology and climatology,
45(6):821–837, 2006.
[42] Fadri Furrer, Michael Burri, Markus Achtelik, and Roland Siegwart.
Rotors—a modular gazebo mav simulator framework. In Robot Operat-
ing System (ROS): The Complete Reference (Volume 1), pages 595–625.
2016.
USENIX Association
28th USENIX Security Symposium    439
[43] Vijay Ganesh, Tim Leek, and Martin Rinard. Taint-based directed
whitebox fuzzing. In Proceedings of the 31st International Conference
on Software Engineering (ICSE), ICSE ’09, 2009.
[44] Vijay Ganesh, Tim Leek, and Martin Rinard. Dowsing for overﬂows:
A guided fuzzer to ﬁnd buffer boundary violations. In Proceedings of
the 22nd USENIX Security Symposium (USENIX Security), USENIX
Security ’13, 2013.
[45] Balazs Gati. Open source autopilot for academic research-the paparazzi
system. In Proceedings of the American Control Conference (ACC),
ACC ’13, 2013.
[46] Demoz Gebre-Egziabher, Roger C Hayward, and J David Powell. De-
sign of multi-sensor attitude determination systems. IEEE Transactions
on aerospace and electronic systems, 40(2):627–649, 2004.
[47] Dunstan Graham and Richard C Lathrop. The synthesis of optimum
transient response: criteria and standard forms. Transactions of the
American Institute of Electrical Engineers, Part II: Applications and
Industry, 72(5):273–288, 1953.
[48] Saeid Habibi. The smooth variable structure ﬁlter. Proceedings of the
IEEE, 95(5):1026–1059, 2007.
[49] Zhijian He, Yanming Chen, Zhaoyan Shen, Enyan Huang, Shuai Li,
Zili Shao, and Qixin Wang. Ard-mu-copter: A simple open source
quadcopter platform. In Proceedings of the 2015 11th International
Conference on Mobile Ad-hoc and Sensor Networks (MSN), MSN ’15,
2015.
[50] G Heredia, A Ollero, M Bejar, and R Mahtani. Sensor and actuator
fault detection in small autonomous helicopters. volume 18, pages
90–99. Elsevier, 2008.
[51] Myungsoo Jun, Stergios I Roumeliotis, and Gaurav S Sukhatme. State
estimation of an autonomous helicopter using kalman ﬁltering.
In
Proceedings of 1999 IEEE/RSJ International Conference on Intelligent
Robots and Systems (IROS), IROS ’99, 1999.
[52] Chung Hwan Kim, Taegyu Kim, Hongjun Choi, Zhongshu Gu, By-
oungyoung Lee, Xiangyu Zhang, and Dongyan Xu. Securing real-time
microcontroller systems through customized memory view switching.
In Proceedings of the 27th Annual Symposium on Network and Dis-
tributed System Security (NDSS), 2018.
[53] Nathan P Koenig and Andrew Howard. Design and use paradigms for
gazebo, an open-source multi-robot simulator. In Proceedings of the
IEEE/RSJ International Conference on Intelligent Robots and Systems
(IROS), 2004.
[54] Benjamin C Kuo. Automatic control systems. Prentice Hall PTR, 1987.
[55] Y. Kwon, J. Yu, B. Cho, Y. Eun, and K. Park. Empirical analysis of
mavlink protocol vulnerability for attacking unmanned aerial vehicles.
IEEE Access, 6:43203–43212, 2018.
[56] Yuekang Li, Bihuan Chen, Mahinthan Chandramohan, Shang-Wei Lin,
Yang Liu, and Alwen Tiu. Angora: Efﬁcient fuzzing by principled
search. In Proceedings of the 2017 11th Joint Meeting on Foundations
of Software Engineering (ESEC/FSE), ESEC/FSE ’17, 2017.
[57] Yuekang Li, Bihuan Chen, Mahinthan Chandramohan, Shang-Wei Lin,
Yang Liu, and Alwen Tiu. Steelix: program-state based binary fuzzing.
In Proceedings of the 2017 11th Joint Meeting on Foundations of
Software Engineering (ESEC/FSE), ESEC/FSE ’17, 2017.
[58] Renju Liu and Mani Srivastava. Protc: Protecting drone’s peripherals
through arm trustzone. In Proceedings of the 3rd Workshop on Micro
Aerial Vehicle Networks, Systems, and Applications (DroNet), DroNet
’17, 2017.
[59] Marie Lothon, Donald H Lenschow, and Shane D Mayor. Doppler lidar
measurements of vertical velocity spectra in the convective planetary
boundary layer. Boundary-layer meteorology, 132(2):205–226, 2009.
[60] F Landis Markley, John Crassidis, and Yang Cheng. Nonlinear attitude
ﬁltering methods. In Proceedings of the AIAA Guidance, Navigation,
and Control Conference and Exhibit (AIAA), AIAA ’05, 2005.
[61] Robert Mitchell and Ray Chen. Adaptive intrusion detection of mali-
cious unmanned air vehicles using behavior rule speciﬁcations. IEEE
Transactions on Systems, Man, and Cybernetics: Systems, 44(5):593–
604, 2014.
[62] A. Nemati and M. Kumar. Modeling and control of a single axis tilting
quadcopter. In Proceedings of the American Control Conference (ACC),
ACC ’14, 2014.
[63] H. Peng, Y. Shoshitaishvili, and M. Payer. T-fuzz: Fuzzing by pro-
gram transformation. In Proceedings of the 38th IEEE Symposium on
Security and Privacy (IEEE S&P), IEEE S&P ’18, 2018.
[64] Viswanadhapalli Praveen and S Pillai. A.,“modeling and simulation
of quadcopter using pid controller”. International Journal of Control
Theory and Applications (IJCTA), 9(15):7151–7158, 2016.
[65] Friedrich Pukelsheim. The three sigma rule. The American Statistician,
48(2):88–91, 1994.
[66] Sanjay Rawat, Vivek Jain, Ashish Kumar, Lucian Cojocar, Cristiano
Giuffrida, and Herbert Bos. Vuzzer: Application-aware evolutionary
fuzzing. In Proceedings of the 24th Annual Symposium on Network
and Distributed System Security (NDSS), NDSS ’17, 2017.
[67] Nils Rodday. Hacking a professional drone. 2016.
[68] Nils Miro Rodday, Ricardo de O Schmidt, and Aiko Pras. Exploring
security vulnerabilities of unmanned aerial vehicles. In Proceedings
of the IEEE/IFIP Network Operations and Management Symposium
(NOMS), NOMS ’16, 2016.
[69] S Sabikan and SW Nawawi. Open-source project (osps) platform for
outdoor quadcopter. Journal of Advanced Research Design, 24:13–27,
2016.
[70] Ihab Samy, Ian Postlethwaite, and Dawei Gu. Neural network based
sensor validation scheme demonstrated on an unmanned air vehicle
(uav) model. In Proceedings of 47th IEEE Conference on Decision and
Control (CDC), pages 1237–1242, 2008.
[71] Sergej Schumilo, Cornelius Aschermann, Robert Gawlik, Sebastian
Schinzel, and Thorsten Holz. kaﬂ: Hardware-assisted feedback fuzzing
for os kernels. In Proceedings of the 26th USENIX Security Symposium
(USENIX Security), USENIX Security ’17, 2017.
[72] Yun Mok Son, Ho Cheol Shin, Dong Kwan Kim, Young Seok Park,
Ju Hwan Noh, Ki Bum Choi, Jung Woo Choi, and Yong Dae Kim.
Rocking drones with intentional sound noise on gyroscopic sensors. In
Proceedings of 24th USENIX Security symposium (Usenix Security),