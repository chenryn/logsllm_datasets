Beacon integrates mimikatz. Use the mimikatz command to pass any command to mimikatz’s 
command dispatcher. For example, mimikatz standard::coffee will give you a cup of coffee. 
Beacon will take care to inject a mimikatz instance that matches the native architecture of your 
target. 
Some mimikatz commands must run as SYSTEM to work. Prefix a command with a ! to force 
mimikatz to elevate to SYSTEM before it runs your command. For example, mimikatz 
!lsa::cache will recover salted password hashes cached by the system. 
Once in awhile, you may need to run a mimikatz command with Beacon’s current access token. 
Prefix a command with a @ to force mimikatz to impersonate Beacon’s current access token. For 
example, mimikatz @lsadump::dcsync will run the dcsync command in mimikatz with 
Beacon’s current access token. 
7.19 Credential and Hash Harvesting 
To dump hashes, go to [beacon] -> Access -> Dump Hashes. You may also use the hashdump 
command from the Beacon console. These commands will spawn a job that injects into LSASS 
and dumps the password hashes for local users on the current system.  
The logonpasswords command will use mimikatz to recover plaintext passwords and hashes for 
users who are logged on to the current system. The logonpasswords command is the same as 
[beacon] -> Access -> Run Mimikatz. 
Use dcsync [DOMAIN.FQDN] to pull password hashes for all accounts from a domain 
controller. This technique uses Windows APIs built to sync information between domain 
controllers. It requires a domain administrator trust relationship. Beacon uses mimikatz to 
execute this technique. Use dcsync [DOMAIN.FQDN] [DOMAIN\user], if you want a specific 
password hash. 
Credentials dumped with the above commands are collected by Cobalt Strike and stored in the 
credentials data model. Go to View -> Credentials to pull up the credentials on the current team 
server. 
7.20 Port Scanning 
Beacon has a built in port scanner. Use portscan [targets] [ports] [discovery method] to start the 
port scanner job. You may specify a comma-separated list of target ranges. The same goes for 
ports as well. For example, portscan 172.16.48.0/24 1-1024,8080 will scan hosts 172.16.48.0 
through 172.16.48.255 on ports 1 to 1024 and 8080. 
There are three target discovery options. The arp method uses an ARP request to discover if a 
host is alive or not. The icmp method sends an ICMP echo request to check if a target is alive. 
The none option tells the portscan tool to assume that all hosts are alive. 
www.cobaltstrike.com/
/
55/
The port scanner will run, in between Beacon check ins. When it has results to report, it will send 
them to the Beacon console. Cobalt Strike will process this information and update the targets 
model with the discovered hosts. 
7.21 Network and Host Enumeration 
Beacon’s net module provides tools to interrogate and discover targets in a Windows active 
directory network. Use the net dclist command to find the domain controller for the domain the 
target is joined to. Use the net view command to find targets on the domain the target is joined 
to. Both of these commands populate the targets model as well. The net computers command 
finds targets by querying computer account groups on a Domain Controller. 
The commands in Beacon’s net module are built on top of the Windows Network Enumeration 
APIs. Most of these commands are direct replacements for many of the built-in net commands in 
Windows. There are also a few unique capabilities here as well. For example, use net localgroup 
\\TARGET to list the groups on another system. Use net localgroup \\TARGET group name to 
list the members of a group on another system. These commands are great during lateral 
movement when you have to find who is a local admin on another system. 
Use help net to get a list of all the commands in Beacon’s net module. Use help net command 
to get help for each individual command. 
7.22 Trust Relationships  
The heart of Windows single sign-on is the access token. When a user logs onto a Windows host, 
an access token is generated. This token contains information about the user and their rights. The 
access token also holds information needed to authenticate the current user to another system on 
the network. Impersonate or generate a token and Windows will use its information to 
authenticate to a network resource for you. 
Use steal_token [process id] to impersonate a token from an existing process. If you’d like to 
see which processes are running use ps. The getuid command will print your current token. Use 
rev2self to revert back to your original token. 
If you know credentials for a user; use make_token [DOMAIN\user] [password] to generate a 
token that passes these credentials. This token is a copy of your current token with modified 
single sign-on information. It will show your current username. This is expected behavior. 
Use mimikatz to pass-the-hash with Beacon. The Beacon command pth [DOMAIN\user] [ntlm 
hash] will create and impersonate an access token to pass the specified hash. 
Beacon’s Make Token dialog ([beacon] -> Access -> Make Token) is a front-end for these 
commands. It will present the contents of the credential model and it will use the right command 
to turn the selected credential entry into an access token. 
Kerberos Tickets 
Use kerberos_ticket_use [/path/to/ticket] to inject a Kerberos ticket into the current session. 
This will allow Beacon to interact with remote systems using the rights in this ticket. Try this 
with a Golden Ticket generated by mimikatz 2.0. 
www.cobaltstrike.com/
/
56/
Use kerberos_ticket_purge to clear any kerberos tickets associated with your session. 
7.23 Lateral Movement 
Once you have a token for a domain admin or a domain user who is a local admin on a target, 
you may abuse this trust relationship to get control of the target. Cobalt Strike’s Beacon has 
several built-in options for lateral movement. 
Type jump to list lateral movement options registered with Cobalt Strike. Run jump [module] 
[target] [listener] to attempt to run a payload on a remote target. 
Jump Module 
Arch 
   Description 
psexec 
x86 
Use a service to run a Service EXE artifact 
psexec64 
x64 
Use a service to run a Service EXE artifact 
psexec_psh 
x86 
Use a service to run a PowerShell one-liner 
winrm 
x86 
Run a PowerShell script via WinRM 
winrm64 
x64 
Run a PowerShell script via WinRM 
Run remote-exec, by itself, to list remote execution modules registered with Cobalt Strike. Use 
remote-exec [module] [target] [command + args] to attempt to run the specified command on 
a remote target.  
Remote-exec Module 
   Description 
psexec 
Remote execute via Service Control Manager 
winrm 
Remote execute via WinRM (PowerShell) 
wmi 
Remote execute via WMI 
Lateral movement is an area, similar to privilege escalation, where some attacks present a natural 
set of primitives to spawn a session on a remote target. Some attacks give an execute-primitive 
only. The split between jump and remote-exec gives you flexibility to decide how to weaponize 
an execute-only primitive. 
Aggressor Script has an API to add new modules to jump and remote-exec. See the Aggressor 
Script documentation (the Beacon chapter, specifically) for more information. 
www.cobaltstrike.com/
/
57/
7.24 Lateral Movement GUI 
Cobalt Strike also provides a GUI to make lateral movement easier. Switch to the Targets 
Visualization or go to View -> Targets. Navigate to [target] -> Jump and choose your desired 
lateral movement option. 
The following dialog will open: 
Figure 39. Lateral Movement Dialog 
To use this dialog: 
First, decide which trust you want to use for lateral movement. If you want to use the token in 
one of your Beacons, check the Use session’s current access token box. If you want to use 
credentials or hashes for lateral movement—that’s OK too. Select credentials from the credential 
store or populate the User, Password, and Domain fields. Beacon will use this information to 
generate an access token for you. Keep in mind, you need to operate from a high integrity 
context [administrator] for this to work. 
Next, choose the listener to use for lateral movement. The SMB Beacon is usually a good 
candidate here.  
Last, select which session you want to perform the lateral movement attack from. Cobalt Strike’s 
asynchronous model of offense requires each attack to execute from a compromised system. 
There is no option to perform this attack without a Beacon session to attack from. If you’re on an 
internal engagement, consider hooking a Windows system that you control and use that as your 
starting point to attack other systems with credentials or hashes.  
Press Launch. Cobalt Strike will activate the tab for the selected Beacon and issue commands to 
it. Feedback from the attack will show up in the Beacon console. 
www.cobaltstrike.com/
/
58/
8. Browser Pivoting 
8.1 Overview 
Malware like Zeus and its variants inject themselves into a user’s browser to steal banking 
information. This is a man-in-the-browser attack. So-called, because the attacker is injecting 
malware into the target’s browser. 
Man-in-the-browser malware uses two approaches to steal banking information. They either 
capture form data as it’s sent to a server. For example, malware might hook PR_Write in Firefox 
to intercept HTTP POST data sent by Firefox. Or, they inject JavaScript onto certain 
webpages to make the user think the site is requesting information that the attacker needs. 
Cobalt Strike offers a third approach for man-in-the-browser attacks. It lets the attacker hijack 
authenticated web sessions—all of them. Once a user logs onto a site, an attacker may ask the 
user’s browser to make requests on their behalf. Since the user’s browser is making the request, 
it will automatically re-authenticate to any site the user is already logged onto. I call this a 
browser pivot—because the attacker is pivoting their browser through the compromised user’s 
browser. 
Figure 40. Browser Pivoting in Action 
Cobalt Strike’s implementation of browser pivoting for Internet Explorer injects an HTTP proxy 
server into the compromised user’s browser. Do not confuse this with changing the user’s proxy 
settings. This proxy server does not affect how the user gets to a site. Rather, this proxy server is 
available to the attacker. All requests that come through it are fulfilled by the user’s browser. 
www.cobaltstrike.com/
/
59/
8.2 Setup 
To setup Browser pivoting, go to [beacon] -> Explore -> Browser Pivot. Choose the Internet 
Explorer instance that you want to inject into. You may also decide which port to bind the 
browser pivoting proxy server to as well. 
Figure 41. Start a Browser Pivot 
Beware that the process you inject into matters a great deal. Inject into Internet Explorer to 
inherit a user’s authenticated web sessions. Modern versions of Internet Explorer spawn each tab 
in its own process. If your target uses a modern version of Internet Explorer, you must inject a 
process associated with an open tab to inherit session state. Which tab process doesn’t matter 
(child tabs share session state). Identify Internet Explorer tab processes by looking at the PPID 
value in the Browser Pivoting setup dialog. If the PPID references explorer.exe, the process is 
not associated with a tab. If the PPID references iexplore.exe, the process is associated with a 
tab. Cobalt Strike will show a checkmark next to the processes it thinks you should inject into. 
Once Browser Pivoting is setup, set up your web browser to use the Browser Pivot Proxy server. 
Remember, Cobalt Strike’s Browser Pivot server is an HTTP proxy server.  
Figure 42. Configure Browser Settings 
www.cobaltstrike.com/
/
60/
8.3 Use 
You may browse the web as your target user once browser pivoting is started. Beware that the 
browser pivoting proxy server will present its SSL certificate for SSL-enabled websites you visit. 
This is necessary for the technology to work. 
The browser pivoting proxy server will ask you to add a host to your browser’s trust store when 
it detects an SSL error. Add these hosts to the trust store and press refresh to make SSL protected 
sites load properly. 
If your browser pins the certificate of a target site, you may find its impossible to get your 
browser to accept the browser pivoting proxy server’s SSL certificate. This is a pain. One option 
is to use a different browser. The open source Chromium browser has a command-line option to 
ignore all certificate errors. This is ideal for browser pivoting use: 
chromium --ignore-certificate-errors --proxy-server=[host]:[port] 
The above command is available from View -> Proxy Pivots. Highlight the Browser Pivot 
HTTP Proxy entry and press Tunnel. 
To stop the Browser Pivot proxy server, type browserpivot stop in its Beacon console. 
You will need to reinject the browser pivot proxy server if the user closes the tab you’re working 
from. The Browser Pivot tab will warn you when it can’t connect to the browser pivot proxy 
server in the browser. 
8.4 How it Works 
Internet Explorer delegates all of its communication to a library called WinINet. This library, 
which any program may use, manages cookies, SSL sessions, and server authentication for its 
consumers. Cobalt Strike’s Browser Pivoting takes advantage of the fact that WinINet 
transparently manages authentication and reauthentication on a per process basis. By injecting 
Cobalt Strike’s Browser Pivoting technology into a user’s Internet Explorer instance, you get this 
transparent reauthentication for free. 
www.cobaltstrike.com/
/
61/
9. Pivoting 
9.1 What is Pivoting  
Pivoting, for the sake of this manual, is turning a compromised system into a hop point for other 
attacks and tools. Cobalt Strike’s Beacon provides several pivoting options. For each of these 
options, you will want to make sure your Beacon is in interactive mode. Interactive mode is 
when a Beacon checks in multiple times each second. Use the sleep 0 command to put your 
Beacon into interactive mode. 
9.2 SOCKS Proxy 
Go to [beacon] -> Pivoting -> SOCKS Server to setup a SOCKS4a proxy server on your team 
server. Or, use socks 8080 to setup a SOCKS4a proxy server on port 8080 (or any other port you 
choose).  
All connections that go through these SOCKS servers turn into connect, read, write, and close 
tasks for the associated Beacon to execute. You may tunnel via SOCKS through any type of 
Beacon (even an SMB Beacon). 
Beacon’s HTTP data channel is the most responsive for pivoting purposes. If you’d like to pivot 
traffic over DNS, use the DNS TXT record communication mode. 
To see the SOCKS servers that are currently setup, go to View -> Proxy Pivots. 
Use socks stop to disable the SOCKS proxy server. 
Proxychains 
The proxychains tool will force an external program to use a SOCKS proxy server that you 
designate. You may use proxychains to force third-party tools through Cobalt Strike’s SOCKS 
server. To learn more about proxychains, visit: 
• http://proxychains.sourceforge.net//
Metasploit 
You may also tunnel Metasploit Framework exploits and modules through Beacon. Create a 
Beacon SOCKS proxy server [as described above] and paste the following into your Metasploit 
Framework console: 
setg Proxies socks4:team server IP:proxy port 
setg ReverseAllowProxy true 
These commands will instruct the Metasploit Framework to apply your Proxies option to all 
modules executed from this point forward. Once you’re done pivoting through Beacon in this 
way, use unsetg Proxies to stop this behavior.  
www.cobaltstrike.com/
/
62/
If you find the above tough to remember, go to View -> Proxy Pivots. Highlight the proxy pivot 
you setup and press Tunnel. This button will provide the setg Proxies syntax needed to tunnel 
the Metasploit Framework through your Beacon. 
9.3 Reverse Port Forward 
Use the rportfwd command to setup a reverse pivot through Beacon. The rportfwd command 
will bind a port on the compromised target. Any connections to this port will cause your Cobalt 
Strike server to initiate a connection to another host and port and relay traffic between these two 
connections. Cobalt Strike tunnels this traffic through Beacon. The syntax for rportfwd is: 
rportfwd [bind port] [forward host] [forward port]. 
Use the rportfwd_local command to setup a reverse pivot through Beacon with one variation. 
This feature initiates a connection to the forward host/port from your Cobalt Strike client. The 
forwarded traffic is communicated through the connection your Cobalt Strike client has to its 
team server. 
Use rportfwd stop [bind port] to disable the reverse port forward.  
9.4 Spawn and Tunnel 
Use the spunnel command to spawn a third-party tool in a temporary process and create a reverse 
port forward for it. The syntax is spunnel [x86 or x64] [controller host] [controller port] 
[/path/to/agent.bin]. This command expects that the agent file is position-independent shellcode 
(usually the raw output from another offense platform). The spunnel_local command is the same 
as spunnel, except it initiates the controller connection from your Cobalt Strike client. The 
spunnel_local traffic is communicated through the connection your Cobalt Strike client has to its 
team server. 
Agent Deployed: Interoperability with Core Impact 
The spunnel commands were designed specifically to tunnel Core Impact's agent through Cobalt 
Strike's Beacon. Core Impact is a penetration testing tool and exploit framework also available 
for license from HelpSystems. 
https://www.coresecurity.com/products/core-impact 
To export a raw agent file from Core Impact: 
1. Click the Modules tab in the Core Impact user interface 
2. Search for Package and Register Agent 
3. Double-click this module 
4. Change Platform to Windows 
5. Change Architecture to x86-64 
6. Change Binary Type to raw 
7. Click Target File and press ... to decide where to save the output. 
8. Go to Advanced 
9. Change Encrypt Code to false 
10. Go to Agent Connection 
11. Change Connection Method to Connect from Target 
www.cobaltstrike.com/
/
63/
12. Change Connect Back Hostname to 127.0.0.1 
13. Change Port to some value (e.g., 9000) and remember it. 
14. Press OK. 
The above will generate a Core Impact agent as a raw file. You may use spunnel x64 or 