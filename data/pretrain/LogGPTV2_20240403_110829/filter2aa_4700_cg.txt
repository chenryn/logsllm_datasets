    iVar3 = 0;
  }
  *param_2 = iVar3;
  return fVar6;
}
// Library Function - Single Match
// Name: __set_exp
// Library: Visual Studio 2015 Release
float10 __cdecl __set_exp(ulonglong param_1,short param_2)
{
  double local_c;
  local_c = (double)(param_1 & 0xffffffffffff |
                    (ulonglong)(ushort)((param_2 + 0x3fe) * 0x10 | param_1._6_2_ & 0x800f) > 0x20));
    if (iVar1 == 1) {
      return 0x200;
    }
    if (iVar1 == 2) {
      iVar1 = 4;
    }
    else {
      if (iVar1 != 3) {
        return 1;
      }
      iVar1 = 2;
    }
    return iVar1;
  }
  if ((((ulonglong)_X & 0x7ff0000000000000) == 0) &&
     ((((ulonglong)_X & 0xfffff00000000) != 0 || (_X._0_4_ != 0)))) {
    return (-(uint)(((ulonglong)_X & 0x8000000000000000) != 0) & 0xffffff90) + 0x80;
  }
  if (!in_PF) {
    return (-(uint)(((ulonglong)_X & 0x8000000000000000) != 0) & 0xffffffe0) + 0x40;
  }
  return (-(uint)(((ulonglong)_X & 0x8000000000000000) != 0) & 0xffffff08) + 0x100;
}
BOOL IsProcessorFeaturePresent(DWORD ProcessorFeature)
{
  BOOL BVar1;
                    // WARNING: Could not recover jumptable at 0x004160ce. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = IsProcessorFeaturePresent(ProcessorFeature);
  return BVar1;
}
// Library Function - Single Match
// Name: __FindPESection
// Library: Visual Studio 2015 Release
PIMAGE_SECTION_HEADER __cdecl __FindPESection(PBYTE pImageBase,DWORD_PTR rva)
{
  PIMAGE_SECTION_HEADER p_Var1;
  uint uVar2;
  uVar2 = 0;
  pImageBase = pImageBase + *(int *)(pImageBase + 0x3c);
  p_Var1 = (PIMAGE_SECTION_HEADER)(pImageBase + (uint)*(ushort *)(pImageBase + 0x14) + 0x18);
  if (*(ushort *)(pImageBase + 6) != 0) {
    do {
      if ((p_Var1->VirtualAddress Misc + p_Var1->VirtualAddress)) {
        return p_Var1;
      }
      uVar2 = uVar2 + 1;
      p_Var1 = p_Var1 + 1;
    } while (uVar2 Characteristics;
      *in_FS_OFFSET = local_14;
      return ~(uVar1 >> 0x1f) & 1;
    }
  }
  *in_FS_OFFSET = local_14;
  return 0;
}
undefined4 __cdecl FUN_004161f0(short *param_1)
{
  if (((*param_1 == 0x5a4d) && (*(int *)(*(int *)(param_1 + 0x1e) + (int)param_1) == 0x4550)) &&
     (*(short *)((int *)(*(int *)(param_1 + 0x1e) + (int)param_1) + 6) == 0x10b)) {
    return 1;
  }
  return 0;
}
void FUN_00416238(void)
{
  undefined4 *unaff_EBP;
  undefined4 *in_FS_OFFSET;
  undefined4 unaff_retaddr;
  FUN_00401f78();
  *in_FS_OFFSET = unaff_EBP[-3];
  *unaff_EBP = unaff_retaddr;
  return;
}
// WARNING: This is an inlined function
// WARNING: Unable to track spacebase fully for stack
// WARNING: Variable defined which should be unmapped: param_1
// Library Function - Single Match
// Name: __EH_prolog3_GS
// Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release
void __cdecl __EH_prolog3_GS(int param_1)
{
  undefined4 unaff_EBX;
  undefined4 unaff_ESI;
  undefined4 unaff_EDI;
  int *in_FS_OFFSET;
  undefined4 local_res0;
  uint auStack28 [5];
  undefined local_8 [8];
  param_1 = -param_1;
  *(undefined4 *)((int)auStack28 + param_1 + 0x10) = unaff_EBX;
  *(undefined4 *)((int)auStack28 + param_1 + 0xc) = unaff_ESI;
  *(undefined4 *)((int)auStack28 + param_1 + 8) = unaff_EDI;
  *(uint *)((int)auStack28 + param_1 + 4) = DAT_0041e004 ^ (uint)&param_1;
  *(uint *)((int)auStack28 + param_1) = local_res0;
  *(undefined **)in_FS_OFFSET = local_8;
  return;
}
// WARNING: This is an inlined function
// WARNING: Unable to track spacebase fully for stack
// WARNING: Variable defined which should be unmapped: param_1
// Library Function - Single Match
// Name: __EH_prolog3_catch
// Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release
void __cdecl __EH_prolog3_catch(int param_1)
{
  undefined4 unaff_EBX;
  undefined4 unaff_ESI;
  undefined4 unaff_EDI;
  int *in_FS_OFFSET;
  undefined4 local_res0;
  uint auStack28 [5];
  undefined local_8 [8];
  param_1 = -param_1;
  *(undefined4 *)((int)auStack28 + param_1 + 0x10) = unaff_EBX;
  *(undefined4 *)((int)auStack28 + param_1 + 0xc) = unaff_ESI;
  *(undefined4 *)((int)auStack28 + param_1 + 8) = unaff_EDI;
  *(uint *)((int)auStack28 + param_1 + 4) = DAT_0041e004 ^ (uint)&param_1;
  *(uint *)((int)auStack28 + param_1) = local_res0;
  *(undefined **)in_FS_OFFSET = local_8;
  return;
}
// Library Function - Single Match
// Name: __aulldvrm
// Library: Visual Studio
undefined8 __aulldvrm(uint param_1,uint param_2,uint param_3,uint param_4)
{
  ulonglong uVar1;
  longlong lVar2;
  uint uVar3;
  int iVar4;
  uint uVar5;
  uint uVar6;
  uint uVar7;
  uint uVar8;
  uint uVar9;
  uVar3 = param_1;
  uVar8 = param_4;
  uVar6 = param_2;
  uVar9 = param_3;
  if (param_4 == 0) {
    uVar3 = param_2 / param_3;
    iVar4 = (int)(((ulonglong)param_2 % (ulonglong)param_3 > 1;
      uVar9 = uVar9 >> 1 | (uint)((uVar8 & 1) != 0) > 1;
      uVar3 = uVar3 >> 1 | (uint)((uVar6 & 1) != 0) > 0x20);
    uVar8 = uVar3 + iVar4 * param_4;
    if (((CARRY4(uVar3,iVar4 * param_4)) || (param_2 > 0x20) +
         param_2 * param_3 + param_1 * param_4) > 1;
      uVar5 = uVar5 >> 1 | (uint)((uVar8 & 1) != 0) > 1;
      uVar3 = uVar3 >> 1 | (uint)((uVar6 & 1) != 0) > 0x20);
    uVar5 = uVar3 + iVar4 * param_4;
    if (((CARRY4(uVar3,iVar4 * param_4)) || (param_2 < uVar5)) ||
       ((param_2 <= uVar5 && (param_1 < (uint)lVar2)))) {
      iVar4 = iVar4 + -1;
    }
    uVar3 = 0;
  }
  if (bVar10 == true) {
    bVar10 = iVar4 != 0;
    iVar4 = -iVar4;
    uVar3 = -(uint)bVar10 - uVar3;
  }
  return CONCAT44(uVar3,iVar4);
}
// Library Function - Single Match
// Name: __aullshr
// Library: Visual Studio