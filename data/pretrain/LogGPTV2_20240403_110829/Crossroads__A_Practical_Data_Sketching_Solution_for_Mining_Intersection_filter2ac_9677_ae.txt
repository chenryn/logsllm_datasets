### Parameter Optimization for Sketching Real Data

We initially explored the parameters that work well for our sketch on real data. Figure 9 illustrates the results when both the number of buckets and bucket size are varied. Our findings indicate that a total memory (number of buckets × bucket size) of around 4096 counters is sufficient to maintain high fidelity in the sketched data, with a relative error under 5-10%. Specifically, using 256 × 16 = 4096 counters is adequate to keep the error small enough for anomaly detection. As the size of the available datasets increases, the accuracy of the sketch will not be significantly affected, allowing us to maintain sketches of similar size even for packet-level data traces of several terabytes.

### Evaluation of Intersection Ratios

The results in Figure 11, while satisfactory, did not fully align with those from synthetic data. Upon closer inspection, we found that several pairs had intersection ratios considerably lower than the 0.01-0.1 range we were interested in. Pairs with very small intersection ratios (e.g., 0.001 or less) are not of significant interest in our application as they indicate negligible-sized pairings. To focus on more relevant pairs, we re-ran the experiments, sampling pairs with intersection ratios within the desired range. The corresponding plots for intersection ratios of at least 0.01, 0.02, 0.05, and 0.10 are shown in Figure 10. These results show a substantial reduction in the average relative error. For an intersection ratio of 0.10, even with 16 × 16 = 256 counters, the relative error was reduced to well under 10%.

To further visualize the effect of intersection ratio on the accuracy of the sketch, we fixed the bucket size to 16 and measured the average relative error for pairs with at least some minimum intersection ratio. This is illustrated in Figure 12, which shows a significant drop in relative error within the 0.01 to 0.05 intersection ratio range.

### Impact of Bucket Size and Number

We also investigated the impact of varying the number of buckets and bucket size while keeping the total number of counters fixed at 4096. There was no significant change in performance, but slightly better results were observed with smaller bucket sizes and a larger number of buckets. Thus, we chose to maximize the number of buckets, setting the bucket size to 16 for the remaining experiments. In Figure 11, we plotted the effect of varying the number of buckets on the relative error of the estimate, with the bucket size fixed at 16. The plot clearly shows a trend in the relative error of the measurement.

### Summary of Findings

In summary, we successfully ran our algorithm on data collected by a major cellular carrier over a one-month period, reducing the memory footprint by more than two orders of magnitude while introducing less than 10% error in the estimate of the average RTT value. We found that if the intersection ratio is high, as is expected in most target applications, we can use even smaller sketches or achieve smaller errors, or both.

### Related Work

Our work intersects with data streaming algorithms, cellular network performance, and association rule mining.

#### Data Streaming Algorithms
The seminal work of Alon et al. [2] on estimating frequency moments in a stream opened up the field of data streaming algorithms. The Tug-of-War sketch, introduced in [2] and named in [1], is a simple yet elegant tool for estimating M2 of a stream, which we utilize in this paper. Other research has employed various techniques for mining data streams. For example, Lakhina et al. [14, 12, 13] studied the diagnosis and characterization of feature distributions of network-wide anomalies in streams. Liu et al. [15] proposed PCA- and sketch-based streaming algorithms for network traffic anomaly detection. Yang et al. [25] studied computational partitioning methods between mobile devices and the cloud for optimal processing of streaming data.

#### Cellular Network Performance
Recent years have seen various techniques for measuring and analyzing cellular network metrics and performance. Shaﬁq et al. [19] characterized M2M traffic patterns in cellular networks and studied RTT measurements for TCP flows. They also analyzed Internet traffic dynamics of cellular network devices [20]. Wang et al. [23] implemented a tool to unveil carriers’ NAT and firewall policies, helping developers optimize mobile applications and network configurations. They also characterized geospatial dynamics of application usage in 3G cellular networks [18] and studied cellular network issues [17] by quantifying aggregate network load and characterizing user-level traffic sessions. Falaki et al. [7] studied smartphone traffic and packet loss. Trestian et al. [22] showed how the relationship of mobile network users to their locations can benefit cellular network providers and location-based services. Balasubramanian et al. [3] provided a measurement study of 3G, GSM, and WiFi technologies. Xu et al. [24] focused on identifying diverse usage patterns of smartphone apps in cellular networks. Erman et al. [6] studied caching techniques for video stream traffic generated by smartphones in cellular networks. Gember et al. [8] studied in-context network performance when users interact with their mobile devices.

#### Association Rule Mining
There is extensive literature on association rule mining (ARM). For example, see [5, 9] and references therein. Jin and Agrawal [11] specifically studied ARM in the context of streaming data. ARM techniques have also been used for network troubleshooting. Qiu et al. [16] used standard ARM techniques to mine router syslogs for network performance anomalies. Brauckhoﬀ et al. [4] used ARM for detecting anomalies in backbone networks. Our work reduces the storage needed by existing ARM algorithms for processing massive data streams.

### Conclusions

Change and anomaly detection are essential tasks for all cellular network providers today. In this paper, we address this problem by proposing a novel scheme called Crossroads, which finds anomalous events such as longer-than-usual RTT in cellular network data. We introduced the technique of intersecting pairs of network data stream digests of overlapping streams. Specifically, we provide intersection algorithms for estimating M2, M1, and M0 values in a data stream, reducing the storage cost from O(n) to O(√n). Evaluations on synthetic and real-world data from a major U.S. cellular service carrier demonstrate that our algorithms generate accurate and rapid estimates for detecting anomalies, proving their reliability in practice.

### References
[References remain unchanged]

---

This revised version aims to make the text more coherent, clear, and professional. It organizes the content into logical sections, improves the flow, and clarifies the key points and findings.