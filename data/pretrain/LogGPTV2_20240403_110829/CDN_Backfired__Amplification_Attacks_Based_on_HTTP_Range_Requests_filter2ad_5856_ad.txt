ampliﬁcation factor is about 53. And when abusing Cloudﬂare
as the FCDN and Akamai as the BCDN, the max ampliﬁcation
factor is about 7342. The detailed results are given in Table V.
D. Practicability of the RangeAmp Attacks
To avoid affecting the CDN’s normal operation, we conduct
controlled experiments in our study (see Section VI-A). But
a real-world attacker can continuously and concurrently send
a certain number of range requests to perform the RangeAmp
attacks. In an OBR attack, the victims are speciﬁc ingress
nodes of the FCDN and the BCDN. Due to an ethical concern,
we can’t launch a real attack to verify whether an ingress node
is affected. But in an SBR attack, the victim is the origin
server, thus we can evaluate the attack’s impact by checking
the outgoing bandwidth of our origin server.
We conduct the fourth experiment to evaluate the SBR
attack’s damage to bandwidth. Take Cloudﬂare as an example,
we concurrently send m range requests to Cloudﬂare every
(c) Response trafﬁc from the origin server to the CDN
Fig. 6. Exploring the ampliﬁcation factor of the SBR attack with different
target resources and different CDNs
1MB, the ampliﬁcation factor is 1707, and when the target
resource is 25MB, the ampliﬁcation factor is 43093. The detail
ampliﬁcation factors of each CDN are listed in Table IV.
C. The Ampliﬁcation Factor of the OBR Attack
As shown in Table II and Table III, 4 CDNs can be abused
as the FCDN and 3 CDNs can be abused as the BCDN.
Therefore, excluding the case where a CDN is cascaded with
itself, there are 11 combinations of cascaded CDNs potentially
20
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 11:32:57 UTC from IEEE Xplore.  Restrictions apply. 
THE MAX AMPLIFICATION FACTOR OF THE OBR ATTACK
TABLE V
FCDN
BCDN
Exploited Range Case
Max n
Exploiting with 1KB of Target Resource and Max n
Trafﬁc from Server to BCDN
Trafﬁc from BCDN to FCDN
Ampliﬁcation Factor
CDN77
CDNsun
Cloudﬂare
StackPath
Akamai
Azure
StackPath
Akamai
Azure
StackPath
Akamai
Azure
StackPath
Akamai
Azure
StackPath
bytes=-1024,0-,...,0-
bytes=1-,0-,...,0-
bytes=0-,0-,...,0-
bytes=0-,0-,...,0-
5455
64
5455
5456
64
5456
10750
64
10750
10801
64
-
1676B
1620B
1808B
1676B
1620B
1808B
1676B
1620B
1940B
1676B
1620B
-
Note: n is the number of overlapping ranges in the exploited multi-range request.
6350944B
86745B
6413097B
6337810B
84481B
6414011B
12456915B
85386B
12636554B
12522091B
82191B
-
3789.35
53.55
3547.07
3781.51
52.15
3547.57
7432.53
52.71
6513.69
7471.41
50.74
-
(a) Incoming bandwidth consumption of the client
(b) Outgoing bandwidth consumption of the origin server
Fig. 7. The bandwidth consumption of the client and the origin server with different number of attack requests
second, lasting 30 seconds. The target resource size is 10MB
and the outgoing bandwidth of the origin server is 1000Mbps.
During the experiment, we monitor the outgoing bandwidth
of the origin server and the incoming bandwidth of the client.
We iterate m from 1 to 15 to plot the trend of bandwidth
consumption against time in Fig 7a and Fig 7b.
As illustrated in Fig 7a-7b, no matter how large m is, the
incoming bandwidth consumption of the client is less than
500Kbps, but the outgoing bandwidth consumption of the
origin server is much larger. When m ≤ 10, it is less than
1000Mbps but almost proportional to m. When m ≥ 11, it
is close to 1000Mbps. Exactly, when m ≥ 14, the outgoing
bandwidth of the origin server is exhausted completely.
We perform the above experiment on all 13 CDNs. As
expected, the experimental results are similar. Some CDNs,
including Cloudﬂare and CloudFront, claim to have some
defenses against DDoS attacks. However, during our exper-
iments, vulnerable CDNs raised no alert while using their
default conﬁguration for the potential defenses.
E. Severity Assessment
A serious and common practical impact. According to
our experiment results, the ampliﬁcation factor of an SBR
attack is almost proportional to the target resource size, and
the one of an OBR attack is almost proportional
to the
number of overlapping byte ranges. All 13 CDNs we tested are
vulnerable to the SBR attack, and 11 combinations of cascaded
CDNs are vulnerable to the OBR attack. As we described in
Section III-A, these CDNs are popular around the world and
rank high in the market share. Thus, there are lots of websites
and CDN nodes exposed to our RangeAmp vulnerability.
A low-cost and efﬁcient DDoS attack. Unlike other DDoS
attacks that need to control a large scale of botnets, the attacker
only needs an ordinary laptop to launch the RangeAmp
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 11:32:57 UTC from IEEE Xplore.  Restrictions apply. 
21
attacks. The ingress nodes of CDNs are scattered around the
world, coming into a natural distributed ‘botnet’. This makes
a RangeAmp attacker able to easily congest the target network
and even create a denial of service in seconds, while the
attacker pays a small cost.
A great monetary loss to the victims. Most CDNs charge
their website customers by trafﬁc consumption, including Aka-
mai, Alibaba Cloud, Azure, CDN77, CDNsun, CloudFront,
Fastly, Huawei Cloud, KeyCDN, Tencent Cloud [17]–[21].
When a website is hosted on a vulnerable CDN, its opponent
can abuse the CDN to perform a RangeAmp attack against it,
causing a very high CDN service fee to the website.
A security challenge to anti-DDoS. Traditional DDoS
attacks that consume bandwidth mainly target the victim’s
incoming bandwidth. Instead, The RangeAmp attacks mainly
consume the victim’s outgoing bandwidth. This will pose a
security challenge to the detection of DDoS attacks. As shown
in Section V-D, when we abuse a CDN to perform an SBR
attack, the vulnerable CDN raises no alert under its default
conﬁguration.
VI. DISCUSSION
In this section, we will further discuss the ethics of our
experiments, the root cause of RangeAmp vulnerabilities, and
the mitigation solutions.
A. Ethic Consideration
When conducting real-world experiments to validating and
evaluating the RangeAmp attacks, our primary concern is
that when our experiments consume too much bandwidth,
it may degrade the CDN’s network performance and cause
collateral damage to other CDN-hosted websites. Thus, we
have considered this ethical concern from the beginning.
First, we conduct controlled experiments to limit bandwidth
consumption in both time and volume dimensions. In the 1st
and 2nd experiments, we only send one range request to the
CDN each time, which hardly affects the CDN’s performance.
In the 3rd experiment, our target resource size is just 1KB,
which will not generate excessive trafﬁc in the fcdn-bcdn
connection after being enlarged. In the 4th experiment, we
send all requests to completely different ingress nodes of the
CDN to minimize or avoid real impacts on the performance
of speciﬁc nodes. And we sustain our experiment for only 30
seconds each time to keep the bandwidth consumption as little
as possible.
Second,
in our responsible disclosure, we unveiled our
experiment details and vulnerability reproduction to the cor-
responding CDNs. They responded positively and are in the
progress of reviewing and ﬁxing the threats. Besides, we also
contacted the editors of RFC7233, and they advised us to
discuss the RangeAmp threats in the mail list of the HTTP
working group. We hope that our work contributes to the
security improvement of HTTP.
In summary, we make our best effort to achieve a balance
between the real-world severity evaluation and the risk of
impacting CDNs. And we believe our work’s beneﬁcence
outweighs the damage we cause.
B. Root Cause Analysis
The range request mechanism is deﬁned in RFC2616 [7].
This speciﬁcation states that “HTTP/1.1 origin servers and
intermediate caches ought to support byte ranges when pos-
sible”. It explicitly speciﬁes that if a proxy supporting range
requests receives a range request, forwards the request to an
inbound server, and receives an entire entity, it should only
return the requested range to its client. And this is the only
description related to a CDN environment.
RFC2616 is updated and published as several new RFCs
(RFC7230-7239) in 2014, and the range request mechanism
is speciﬁcally deﬁned in RFC7233 [2]. Involving a CDN
environment, RFC7233 only states that “origin servers and
intermediate caches ought to support byte ranges when possi-
ble”. Besides, RFC7233 adds some security considerations for
multi-range requests, suggesting the server to ignore, coalesce
or reject range requests with more than two overlapping ranges
or many small ranges in the Range header.
However,
there are no additional
illustrations on range
requests in the newest HTTP/2 protocol [8], which just cites
the deﬁnition in HTTP/1.1, “the speciﬁcation and require-
ments of HTTP/1.1 Range Requests [RFC7233] are applicable
to HTTP/2”. And we ﬁnd that
the RangeAmp threats in
HTTP/1.1 are also applicable to HTTP/2.
As described above, RFC2616 has no security considera-
tions for the range request mechanism. It has no restrictions
on multi-range requests and even explicitly allows inconsistent
response sizes between the front-end and the back-end connec-
tions of a proxy. RFC7233 realizes that the range-introduced
efﬁciency could also bring DoS attacks against the server and
gives some suggestions on multi-range requests. However, it
does not clearly deﬁne how CDNs should handle a Range
header. Even worse, RFC7540 fully refers to the deﬁnition of
range requests in HTTP/1.1, without any other illustration. As
a result, each CDN has its own implementation on how to
handle range requests, leading to the SBR attack. Moreover,
RFC7233 has already warned about
the threat caused by
overlapping byte ranges but some CDNs ignore it, causing
the OBR attack.
Root cause: In summary, we think that the unclear deﬁ-
nition and security negligence of the speciﬁcations constitute
the root cause of RangeAmp vulnerabilities, and the imple-
mentation ﬂaws of CDNs greatly worsen it.
C. Mitigation
Server side: Enforce local DoS defense. After deploying a
CDN, customer websites are under the well-advertised DDoS
protections of the CDN. However, our RangeAmp attacks can
nullify this kind of protection. When suffering a RangeAmp
attack,
the origin server can deploy a local DoS defense
(e.g. ﬁltering requests, limiting bandwidth, etc) for temporary
mitigation. But
this does not necessarily work. From the
perspective of the origin server, attack requests are no different
from benign requests and come from widely distributed CDN
nodes. It is difﬁcult for the origin server to defend against it
effectively without affecting normal services.
22
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 11:32:57 UTC from IEEE Xplore.  Restrictions apply. 
CDN side: Modify the speciﬁc implementation on range
requests. CDNs can detect and intercept malicious range
requests based on the characteristics of the RangeAmp attacks.
But the essential approach is to improve the policy of handling
the Range header. As described in Section IV-B, the Dele-
tion policy and the Expansion policy cause the SBR attack.
Therefore, CDNs can adopt the Laziness policy to completely
defend against the SBR attack. But this also makes CDNs
unable to beneﬁt from range requests. A better way is to adopt
the Expansion policy but not extend the byte range too much.
For example, it is acceptable to increase the byte range by
8KB, which will not cause too much trafﬁc difference between
the CDN’s front-end and back-end connections. In addition,
CDNs should follow the security recommendations on multi-
range requests in RFC7233, such as rejecting range requests
with many small ranges or multiple overlapping ranges in
the Range header. Furthermore, as an important part of the
Internet infrastructure, we believe CDNs should perform a full
security evaluation before supporting new protocol features.
Protocol side: Revise a well-deﬁned and security-aware
RFC. As discussed in Section VI-B, the unclear deﬁnitions
and insufﬁcient security considerations of the speciﬁcations
essentially cause RangeAmp threats. Thus, we contacted the
editors of RFC7233 and they agreed that this kind of attack
should be mentioned as a security consideration. According
to their suggestions, we will continue to discuss this threat on
the mailing list of the HTTP working group. We think that a
more speciﬁc limit of the Range header should be deﬁned in
a future updated RFC, especially for the HTTP middle-boxes
like CDNs.
VII. RESPONSIBLE DISCLOSURE
A. Response from CDN vendors
All vulnerabilities found in our study have been reported to
related CDN vendors. We actively contacted vendors one by
one more than one month before the paper was submitted. We
provided them mitigation solutions to eliminate the detected
threats. Most vendors quickly conﬁrmed the vulnerabilities and
claimed to ﬁx them as soon as possible. Some vendors have
indeed ﬁxed the vulnerabilities, including CDN77, Huawei
Cloud, G-Core Labs, and Tencent Cloud. Unfortunately, al-
though we disclosed RangeAmp issues to StackPath in several
ways, including the StackPath Support platform, email, and
customer services, we did not receive any feedback. (Six
months later, StackPath contacted us and explained that they
had responded quickly to our reported RangeAmp attacks, but
their mail system failed to send their feedback to us. They
claimed to deploy a ﬁx across all StackPath edge locations to
mitigate the OBR attack. And they will continue to monitor