title:A Study of Packet Delivery Performance during Routing Convergence
author:Dan Pei and
Lan Wang and
Daniel Massey and
Shyhtsun Felix Wu and
Lixia Zhang
A Study of Packet Delivery Performance during Routing Convergence ∗
Dan Pei, Lan Wang
UCLA CSD
{peidan, lanw}@cs.ucla.edu
Daniel Massey
USC/ISI
S. Felix Wu
UC Davis CSD
Lixia Zhang
UCLA CSD
PI:EMAIL
PI:EMAIL
PI:EMAIL
Abstract
Internet measurements have shown that network failures
happen frequently, and that existing routing protocols can
take multiple seconds, or even minutes, to converge after
a failure. During these routing convergence periods, some
packets may already be en-route to their destinations and
new packets may be sent. These in-ﬂight packets can en-
counter routing loops, delays, and losses. However, little
is known about how many packets are delivered (or not de-
livered) during routing convergence periods.
In this paper, we study the impact of topological connec-
tivity and routing protocol designs on the packet delivery
during routing convergence. We examine three distributed
routing protocols: RIP, Distributed Bellman Ford and BGP
through protocol analysis and simulation experiments. Our
study shows that the packet delivery ratio improves as the
network connectivity becomes richer. However differences
in routing protocol designs impact their ability to fully uti-
lize the topological redundancy in face of component fail-
ures. Two factors in routing protocol design, keeping al-
ternate path information at each router and quickly prop-
agating new reachability information, appear to have the
most impact on the packet delivery behavior during con-
vergence.
1
Introduction
Internet technology advances have beneﬁted our society
and increased our productivity, but at the same time these
advances have also made us critically depend on the relia-
bility of Internet services. At a very fundamental level, all
applications depend on the Internet routing infrastructure
for packet delivery service. In today’s Internet, routers for-
ward data packets hop-by-hop towards their destinations
according to forwarding tables built by dynamic routing
protocols such as BGP[22], OSPF[17], and RIP [14]. In
[2] Paul Baran suggested that adequate redundancy in net-
∗
This material is based upon work supported by the Defense Advanced
Research Projects Agency (DARPA) under Contract No DABT63-00-C-
1027 and by National Science Fundation(NSF) under Contract No ANI-
0221453. Any opinions, ﬁndings and conclusions or recommendations
expressed in this material are those of the authors and do not necessarily
reﬂect the views of the DARPA or NSF.
work connectivity combined with a dynamic routing pro-
tocol should enable data delivery even in the face of severe
component failures.
In theory the Internet has the potential to meet Baran’s
In practice, however,
ideal of reliable packet delivery.
the Internet is a large-scale, complex,
loosely-coupled
distributed system made of many imperfect components.
Measurement results show that faults of various scale and
severity occur frequently at various locations in the Inter-
net [10, 12]. Although routing protocols can adapt to these
failures, it takes time both to detect a failure and to prop-
agate the necessary update messages throughout the net-
work.
[11, 10] have shown that existing routing proto-
cols may take multiple seconds, or even minutes, to con-
verge after a failure. During this convergence period, some
packets are already en route to their destinations and new
packets continue to enter the network. These “in-ﬂight”
packets may encounter looping, delays or losses; however,
there has been no systematic study of packet delivery per-
formance during routing convergence periods.
Two recent technology advances further underscore the
need to understand packet delivery during routing conver-
gence. First, a rapid decrease in bandwidth cost over the
last few years has resulted in a richer Internet connectivity
[9]. This richer connectivity increases the potential to de-
liver packets over alternate paths after a failure, but many
alternate paths could lead to increased convergence time for
BGP when route ﬂap damping is deployed [4, 15]. Second,
rapid increases in link bandwidth have resulted in more “in-
ﬂight” packets at any given time, including the time during
routing convergence. We are not aware of any systematic
studies of richer connectivity’s impact on packet delivery
during a convergence period.
This paper presents a systematic study of packet deliv-
ery performance during routing convergence periods. We
deﬁne a routing convergence period as the time period be-
tween a fault detection and restoration of new path infor-
mation at all the routers. We use simulations to examine
the performance of three routing protocols: RIP [14], a
Distributed Bellman-Ford algorithm (DBF) [3], and BGP
[22]. Our primary concern is packet delivery rate during
the convergence; all the other factors, such as delay or jit-
ter, are only meaningful when packets are delivered.
Our study shows that the network must have adequate
physical redundancy in order to assure reliable packet de-
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:29:48 UTC from IEEE Xplore.  Restrictions apply. 
livery in face of component failures, and that the packet de-
livery ratio for all three protocols improves as the network
connectivity becomes richer. However different protocol
designs can lead to signiﬁcant differences in exploiting rich
topological connectivity even within our chosen set of sim-
ilar routing protocols. For example, with the same topology
and same packet generation rate, RIP dropped 250 pack-
ets while BGP’(a specially parameterized version of BGP)
dropped fewer than 5 packets. We identiﬁed two factors
in routing protocol design that appear to have the most im-
pact on packet delivery performance during routing con-
vergence. First, in addition to the best path, a router should
keep information of some alternate path to each destina-
tion, so that when the best path fails it can switch to an
alternate path instantly for packet forwarding; the packet
delivery rate can be substantially improved even if the al-
ternate path may not be the new best path. Second, once
a change of connectivity is detected, the routing protocol
should propagate the new information as fast as possible.
These results provide insights towards improving packet
delivery during routing convergence.
The remainder of the paper is organized as follows. Sec-
tion 2 reviews related work. Section 3 gives a brief intro-
duction to the three routing protocols studied in the paper.
In Section 4 we ﬁrst identify three factors that we believe
have an important impact on packet delivery during routing
convergence, and then analyze how well the existing rout-
ing protocols match these three factors. Section 5 presents
the simulation results. Section 6 concludes the paper and
discusses our future work.
2 Related Work
It is generally believed that a shorter routing conver-
gence time reduces packet losses. Previous efforts on rout-
ing protocol design have largely focused on speeding up
routing convergence and preventing routing loops. These
approaches tend to achieve loop-free routing through de-
laying routing update propagation. The ExDBF algorithm
described in [5] avoids long-lived routing loops by comput-
ing the complete path to a destination using the predecessor
information. If a neighbor appears in a node’s computed
path to a destination D, this node will not send update mes-
sage regarding D to this neighbor since this will lead to
loops. [6] describes DUAL algorithm which avoids rout-
ing loops by running a “diffusion” process before switch-
ing to a longer path. The routing table is “frozen” and
the affected destinations are unreachable until the diffusion
process completes. Our study differs from previous work
by its focus on packet delivery performance during rout-
ing convergence. Our results show that a shortest conver-
gence time does not necessarily lead to a maximal packet
delivery rate. We believe that an ideal routing protocol
should achieve a good balance between the routing con-
vergence overhead and convergence time, and most impor-
tantly should maximize the packet delivery rate during con-
vergence.
[28] simulated the convergence behaviors of several
routing protocols. The authors measured the convergence
time, number of routing messages, and the routing loops
after node or link failures, but did not measure packet de-
livery during routing convergence. [19] studied the end-to-
end traceroute measurements collected in 1994 and 1995.
The author detected a few transient loops and conjectured
that these transient loops were caused by link failures. [8]
used off-line analysis of traces containing the header of ev-
ery packet traversing a link on a backbone ISP to detect
loops. They observed that forwarding loops are rare, and
that the delay of packets which do escape a routing loop
is increased by 25 to 1300 msec. They also observed that
30% of loops on a subset of the links lasted longer than 10
seconds. The paper stated that the causes of observed for-
warding loops are yet to be identiﬁed in future study. Our
study examines how link failures affect routing and packet
forwarding by studying the forwarding and routing trace
ﬁles, thus we can identify the causes of routing loops in
each circumstance.
[25] simulated the loop-free MS distance vector algo-
rithm from [16], the ExDBF algorithm from [5], and a link
state protocol (SPF) using the NSFNET backbone topol-
ogy. The workload used is an FTP application which does
not use TCP but has a simple ﬂow control with a maxi-
mal window size and retransmission after timeout. They
measure the packet throughput, packet delay and routing
load(bandwidth consumption). The authors observed that,
although the SPF and ExDBF algorithms are known to have
transient loops, their packet delivery performance is better
than that of the loop-free MS algorithm. While this work
measured the end-to-end data delivery performance under
different routing protocols, our study examines the packet
delivery performance with topologies of different connec-
tivity levels.
In addition, we examine in detail packet-
level dynamics such as number of packet drops, number
of TTL expirations, number of transient forwarding paths,
forwarding path convergence delay, to understand exactly
how transient routing protocol behavior affects packet de-
livery and hence the performance of data ﬂows.
Other related work that aims at maximizing packet de-
livery during routing convergence include having alternate
path always ready either at the routing table [27] or at
line-card [1], and “non-stop forwarding” in which a router
keeps forwarding packets while rebooting its routing pro-
tocol daemon [18, 24, 23].
3 A Brief Introduction to RIP, DBF and BGP
In this paper we consider three distributed routing pro-
tocols: RIP [14], DBF(Distributed Bellman Ford) [3], and
BGP [22]1. All of the three are variants of classic distance
1We limit our examination of BGP to shortest-path routing policy only,
while in reality BGP is used to support more complex routing policies.
Furthermore in our simulation each Autonomous System(AS) consists of
just one single BGP router while in reality an AS consists of multiple BGP
routers.
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:29:48 UTC from IEEE Xplore.  Restrictions apply. 
vector routing protocols. We selected three routing pro-
tocols in the same algorithm family so that we can better
correlate the difference in the routing protocol design with
the difference in the observed packet delivery dynamics.
RIP [14] is one of the best known routing protocols. In
RIP, each router periodically advertises its shortest distance
to each destination. Based on the distances learned from all
its neighbors, a router selects the neighbor that leads to the
shortest distance path to a given destination as the next hop,
and discards the reachability information for the same des-
tination from all other neighbor routers. Routing updates
are sent every 30 seconds, and a routing entry is removed if
it does not have an update within 180 seconds. Whenever a
route change is detected, the router sends a “triggered up-
dates” immediately instead of waiting for the next update
interval. A damping timer is applied to space out consecu-
tive update messages; the timer’s value is randomly chosen
between 1 and 5 seconds.
In our simulation RIP is also
enhanced with “split horizon with poison reverse” two-hop
loop prevention scheme: If a node A uses B as the next
hop to reach destination D, A will send B an “inﬁnity”
distance(16) to D.
The DBF algorithm is deﬁned in [3].
In our simula-
tion implementation the only difference between RIP and
DBF protocol is that a DBF router keeps a cache of the
latest routing update learned from each of its neighbors.
Whenever a router notices that it cannot reach a destination
through the current next hop, the router can immediately
select an alternate next hop. As with RIP, the DBF pro-
tocol adopts the “split horizon with poison reverse” loop
prevention mechanism and sends triggered updates upon
routing changes. Note that each RIP(or DBF) update mes-
sage may contain up to 25 destination entries according to
RIP standard[14].
BGP [22] is a path vector protocol and each node an-
nounces to its neighbors the best path (a sequence of nodes)
to each destination. A router keeps a copy of the latest best
path received from each of its neighbors. Because BGP
uses TCP for reliable delivery between neighbor nodes,
routes to all destinations are advertised once only. A router
sends an update only upon route changes. It sends an ex-
plicit withdrawal message to its neighbors when it cannot
reach a previously reachable destination. Similar to RIP
and DBF, BGP uses a timer to space out consecutive up-
dates for the same destination by Minimum Route Adver-
tisement Internal (MRAI)(This timer is called MRAI timer
in the rest of the paper). BGP speciﬁcation recommends
an average MRAI value of 30 seconds with a jitter interval
of 5 seconds. In our simulation, we implemented both this
recommended MRAI value and a modiﬁed average MRAI
value of 3 seconds with a jitter interval of 2 seconds. This
smaller MRAI value makes BGP’s damping delay for trig-
gered updates comparable with that of RIP and DBF. We
name this specially parameterized version of BGP BGP’.
In most BGP implementations and in our simulation, the
MRAI timer is set on a per neighbor node basis rather than
the per (neighbor, destination) basis.
The BGP path information is used to prevent routing
loops. When a node A receives a path from neighbor B
which contains A as one of the nodes in the path, an indica-
tion of routing loop, the node should discard this new path.
Our implementation treats such a path as a withdrawal mes-
sage and thus is similar to the “split horizon with poison re-
verse” loop prevention scheme in RIP and DBF. Note that
although the “counting-to-inﬁnity” behavior cannot occur
in BGP, other routing convergence problems may still oc-
cur [11].
4 Routing Protocols During Convergence
In any large scale network, there will be periods when
the route to a particular destination has not converged, yet
hop-by-hop routing protocols (such as those used in the In-
ternet) continue to forward packets regardless of whether
the route has converged. IP packets carry a Time To Live
(TTL) ﬁeld which speciﬁes the maximum number of hops
the packets may travel. As long as a packet’s TTL value
is greater than zero and the router knows some next hop to
reach the destination, the packet is forwarded to the next
hop and the TTL value is decremented by 1. Although
the sequence of next hops traversed by a packet during a
routing convergence period (called “transient forwarding
path”) may be sub-optimal or even contain transient loops,
the packet may still have a good chance to reach its desti-
nation.
Figure 1 shows an example of how packets can be deliv-
ered during routing convergence. In this ﬁgure, each link
has a unit cost and the packet forwarding path between R1
and R4 is shown in dashed lines.
Initially, as shown in
Figure 1(a), R1 is sending packets to R4 along the short-
est path. In Figure 1(b), the link (R5 R4) goes down. R1
continues to forward packets to R5 and R5 transmits the
packets over the failed link. In Figure 1(c), R5 detects the
link failure and switches to forwarding packets to R6. Un-
aware of the connectivity changes R1 continues to forward
packets to R5. During this time the packets are forwarded
through a non-shortest path. Finally, in Figure 1(d), R1
converges to the new shortest path, and forwards packets to
R2. Note that in this example packets are only dropped be-
tween the instance the link fails and the time R5 switches
to forwarding packets to R6 (Figure 1(b)), and that dur-
ing the subsequent convergence period (Figure 1(c)) pack-
ets successfully reach the destination by going through a
non-shortest path route. Also note that the time it takes
to move from Figure 1(c) to Figure 1(d) counts as part of
the routing convergence delay, even though packet ﬂow has
been restored. This example shows that, after a failure, a
longer routing convergence period does not necessarily im-
ply higher packet losses.
Understanding the relation between routing conver-
gence and packet delivery raises new and interesting chal-
lenges for routing protocol design. In the remainder of this
section, we identify factors that have an important impact
on packet delivery during routing convergence.
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:29:48 UTC from IEEE Xplore.  Restrictions apply. 
R1
R5
R1
R5
R2
R6
R3
R4
R1
R8
R5
R3
R2
R6
(a) R1’s next hop to R4 is R5
(b) Link (R5 R4) fails
R2
R6
R3
R4
R1
R8
R5
R3
R2
R6
(c) R5’s next hop becomes R6