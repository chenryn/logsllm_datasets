### For Windows Only: Specifying the -repsvrfile Directory Path

- The `-repsvrfile` directory path can be specified using either forward slashes (`/`) or backslashes (`\`).
- If the directory name contains spaces, enclose the entire path in double quotation marks.

Example:
```plaintext
-addpubdb
-repsvrfile "C:\Users\User Name\repcli\pubsvrfile.prop"
-dbtype enterprisedb
-dbhost 192.168.2.23
-dbport 5444
-dbuser pubuser
-dbpassword ygJ9AxoJEX854elcVIJPTw==
-database edb
-repgrouptype s
```

### Note on Command Line vs. Text File Usage

- When entering the xDB Replication Server CLI command and its parameters directly at the command line prompt, continuation characters are not required.
- When coding the command into a text file, no continuation characters are needed to continue onto the following lines.

Example of executing the `paramfile` command:
```plaintext
$ java -jar edb-repcli.jar -paramfile ~/addpubdb_advsvr
Adding Publication Database...
Publication database added successfully. Publication Database id:1
```

### 8.2.6 Testing the Command Exit Status

- After executing an xDB Replication Server CLI command, you can test the exit status to determine if the command execution was successful.
- An exit status of `0` indicates successful execution. A non-zero exit status indicates a failure.

#### Table 8-1 - Replication Server CLI Exit Status Codes

| Exit Status | Description                   |
|-------------|-------------------------------|
| 0           | Success                       |
| 201         | Invalid command               |
| 202         | I/O error                     |
| 203         | Decryption failed             |
| 204         | Authentication failed         |
| 205         | Publication service failure   |
| 206         | Remote exception              |
| 207         | Subscription service failure  |

#### For Linux Only

- The environment variable `$?` contains the exit status.

Example of a successful command execution:
```plaintext
$ java -jar edb-repcli.jar -paramfile ~/addpubdb_advsvr
Adding publication database...
Publication database added successfully. Publication database id:1
$ echo $?
0
```

Example of a failed command execution:
```plaintext
$ java -jar edb-repcli.jar -paramfile ~/addpubdb_advsvr
Adding publication database...
Error: The connection attempt failed.
$ echo $?
200
```

#### For Windows Only

- The environment variable `%ERRORLEVEL%` contains the exit status.

Example of a successful command execution on a Windows system:
```plaintext
C:\Users>java -jar C:\\"Program Files"\PostgreSQL\EnterpriseDB-xDBReplicationServer\bin\edb-repcli.jar -paramfile addpubdb_advsvr
Adding publication database...
Publication database added successfully. Publication database id:1
C:\Users>ECHO %ERRORLEVEL%
0
```

Example of an unsuccessful command execution on a Windows system:
```plaintext
C:\Users>java -jar C:\\"Program Files"\PostgreSQL\EnterpriseDB-xDBReplicationServer\bin\edb-repcli.jar -paramfile addpubdb_advsvr
Adding publication database...
Error: FATAL: password authentication failed for user "myuser"
C:\Users>ECHO %ERRORLEVEL%
200
```

### 8.3 xDB Replication Server CLI Commands

This section provides a description, syntax diagram, and examples of each xDB Replication Server CLI command. Commands are presented in the order in which they will typically be used, following the order in which xDB Replication Console operations are performed.

#### Note

- Most commands apply to both single-master and multi-master replication systems.
- Commands that apply only to single-master replication systems are noted with "For SMR only."
- Commands that apply only to multi-master replication systems are noted with "For MMR only."

#### Assumptions for Examples

- It is assumed that the xDB Replication Server CLI commands are executed after making `XDB_HOME/bin` the current working directory.
- For Linux:
  ```plaintext
  cd /opt/PostgreSQL/EnterpriseDB-xDBReplicationServer/bin
  ```
- For Windows:
  ```plaintext
  cd C:\Program Files\PostgreSQL\EnterpriseDB-xDBReplicationServer\bin
  ```

- The `repsvrfile` parameter in the examples refers to files containing the publication server login information. For Linux, the files are located in the user’s home directory (e.g., `~/pubsvrfile`). For Windows, the equivalent usage is `%HOMEPATH%\pubsvrfile`.

- Examples in this section were run on Linux, so the Linux continuation character (`\`) is used. For Windows, use the Windows continuation character (`^`).

### 8.3.1 Getting Help (help)

The `help` command provides a syntax summary of all xDB Replication Server CLI commands.

**Synopsis:**
```plaintext
-help
```

**Examples:**
```plaintext
$ java -jar edb-repcli.jar -help
Usage: java -jar edb-repcli.jar [OPTIONS]
Where OPTIONS include:
-help Prints out Replication CLI command-line usage
-version Prints out Replication CLI version
-encrypt -input  -output  Encrypts input file to output file
-repversion -repsvrfile  Prints Replication Server version
...
```

### 8.3.2 Printing the Version Number (version)

The `version` command provides the xDB Replication Server CLI’s version number.

**Synopsis:**
```plaintext
-version
```

**Examples:**
```plaintext
$ java -jar edb-repcli.jar -version
Version: 6.1.0-alpha
```

### 8.3.3 Printing the xDB Replication Server Version Number (repversion)

The `repversion` command provides the xDB Replication Server’s version number.

**Synopsis:**
```plaintext
-repversion -repsvrfile pubsvrfile
```

**Parameters:**
- `pubsvrfile`: The file containing the publication server login information.

**Examples:**
```plaintext
$ java -jar edb-repcli.jar -repversion -repsvrfile ~/pubsvrfile.prop
6.1.0-alpha
```

### 8.3.4 Encrypting Passwords (encrypt)

The `encrypt` command encrypts the text supplied in an input file and writes the encrypted result to a specified output file.

**Synopsis:**
```plaintext
-encrypt -input infile -output pwdfile
```

**Parameters:**
- `infile`: The file containing the text to be encrypted.
- `pwdfile`: The file containing the encrypted form of the text from `infile`.

**Examples:**
- The file `infile` contains the word "password".
- The `encrypt` command is then executed producing a file named `pwdfile`.
```plaintext
$ java -jar edb-repcli.jar -encrypt -input ~/infile -output ~/pwdfile
```
- The content of file `pwdfile` contains the encrypted form of "password":
  ```plaintext
  ygJ9AxoJEX854elcVIJPTw==
  ```

### 8.3.5 Printing the Time the Server Has Been Running (uptime)

The `uptime` command prints the time interval since the publication server has been up and running.

**Synopsis:**
```plaintext
-uptime -repsvrfile pubsvrfile
```

**Parameters:**
- `pubsvrfile`: The file containing the publication server login information.

**Examples:**
```plaintext
$ java -jar edb-repcli.jar -uptime -repsvrfile ~/pubsvrfile.prop
0 days 0 hours 4 minutes
```

### 8.3.6 Adding a Publication Database (addpubdb)

The `addpubdb` command adds a publication database definition.

**Synopsis:**
```plaintext
-addpubdb
-repsvrfile pubsvrfile
-dbtype { oracle | enterprisedb | postgresql | sqlserver }
-dbhost host
-dbport port
-dbuser user
{ -dbpassword encrypted_pwd | -dbpassfile pwdfile }
[ -oraconnectiontype { sid | servicename } ]
-database dbname
[ -urloptions jdbc_url_parameters ]
[ -filterrule filterid_1[,filterid_2 ] ...]
[ -repgrouptype { m | s } ]
[ -replicatepubschema { true | false } ]
[ -initialsnapshot
[ -verboseSnapshotOutput { true | false } ] ]
[ -nodepriority priority_level ]
[ -changesetlogmode { T | W } ]
```

**Parameters:**
- `pubsvrfile`: The file containing the publication server login information.
- `dbtype`: Specify the database type (oracle, enterprisedb, postgresql, sqlserver).
- `host`: The IP address of the host on which the publication database server is running.
- `port`: The port number on which the database server is listening for connections.
- `user`: The publication database user name.
- `encrypted_pwd`: The encrypted password of the publication database user.
- `pwdfile`: The file containing the encrypted password of the publication database user.
- `oraconnectiontype`: Specify `sid` or `servicename` for Oracle databases.
- `dbname`: The database name, SID, or service name of the publication database.
- `jdbc_url_parameters`: Extended usage of JDBC URL parameters.
- `filterid_n`: Comma-separated list of filter IDs (for MMR only).
- `repgrouptype`: Specify `s` for single-master or `m` for multi-master replication systems.
- `replicatepubschema`: Set to `true` or `false` (for MMR only).
- `initialsnapshot`: Specify this option for initial snapshot replication (for MMR only).
- `verboseSnapshotOutput`: Set to `true` or `false` for verbose snapshot output.
- `priority_level`: Integer value from 1 through 10 assigning the priority level to a master node.
- `changesetlogmode`: Specify `T` for trigger-based or `W` for log-based (WAL) method of synchronization replication.

**Examples:**

1. Adding a publication database definition for an Oracle database:
```plaintext
$ java -jar edb-repcli.jar -addpubdb -repsvrfile ~/pubsvrfile.prop \
> -dbtype oracle -dbhost 192.168.2.6 -dbport 1521 \
> -dbuser pubuser -dbpassword ygJ9AxoJEX854elcVIJPTw== \
> -oraconnectiontype sid \
> -database xe \
> -repgrouptype s
Adding publication database...
Publication database added successfully. Publication database id:1
```

2. Adding a publication database definition for an Advanced Server database:
```plaintext
$ java -jar edb-repcli.jar -addpubdb -repsvrfile ~/pubsvrfile.prop \
> -dbtype enterprisedb -dbhost 192.168.2.7 -dbport 5444 \
> -dbuser pubuser -dbpassfile ~/pwdfile \
> -database edb \
> -repgrouptype s
Adding publication database...
Publication database added successfully. Publication database id:2
```

3. Adding a publication database definition for a master definition node in a multi-master replication system:
```plaintext
$ java -jar edb-repcli.jar -addpubdb -repsvrfile ~/pubsvrfile.prop \
> -dbtype enterprisedb -dbhost 192.168.2.6 -dbport 5444 \
> -dbuser pubuser -dbpassword ygJ9AxoJEX854elcVIJPTw== \
> -database edb \
> -repgrouptype m \
> -nodepriority 1
Adding publication database...
```

---

**Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved.**

**EDB Postgres Replication Server User’s Guide**