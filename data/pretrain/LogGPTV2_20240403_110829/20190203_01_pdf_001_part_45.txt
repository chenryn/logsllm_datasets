For Windows only: The -repsvrfile directory path can be specified with either the
forward slash or backslash character. Enclose the entire directory path in double
quotation marks if a directory name contains space characters:
-addpubdb
-repsvrfile "C:\Users\User Name\repcli\pubsvrfile.prop"
-dbtype enterprisedb
-dbhost 192.168.2.23
-dbport 5444
-dbuser pubuser
-dbpassword ygJ9AxoJEX854elcVIJPTw==
-database edb
-repgrouptype s
Note: Unlike entering the xDB Replication Server CLI command and its parameters
directly at the command line prompt, when coded into a text file, no continuation
characters are needed to continue onto the following lines.
The following shows the execution of the paramfile command:
$ java -jar edb-repcli.jar -paramfile ~/addpubdb_advsvr
Adding Publication Database...
Publication database added successfully. Publication Database id:1
8.2.6 Testing the Command Exit Status
After executing an xDB Replication Server CLI command, you can test the exit status to
determine if the command execution was successful.
An exit status of 0 indicates successful execution. A non-zero exit status indicates a
failure has occurred.
Table 8-1 - Replication Server CLI Exit Status Codes
Exit Status Description
0 Success
201 Invalid command
202 I/O error
203 Decryption failed
204 Authentication failed
205 Publication service failure
206 Remote exception
207 Subscription service failure
For Linux only: The environment variable, $?, contains the exit status.
The following example shows the 0 exit status upon the successful execution of the
addpubdb command contained in the addpubdb_advsvr parameter file described in
Section 8.2.5.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 535
EDB Postgres Replication Server User’s Guide
$ java -jar edb-repcli.jar -paramfile ~/addpubdb_advsvr
Adding publication database...
Publication database added successfully. Publication database id:1
$ echo $?
0
On the other hand, the following example shows a non-zero exit status when the
command failed with an error.
$ java -jar edb-repcli.jar -paramfile ~/addpubdb_advsvr
Adding publication database...
Error:The connection attempt failed.
$ echo $?
200
For Windows only: The environment variable, %ERRORLEVEL%, contains the exit status.
The following shows the exit status upon successful command execution on a Windows
system.
C:\Users>java -jar C:\\"Program Files"\PostgreSQL\EnterpriseDB-
xDBReplicationServer\bin\edb-repcli.jar -paramfile addpubdb_advsvr
Adding publication database...
Publication database added successfully. Publication database id:1
C:\Users>ECHO %ERRORLEVEL%
0
The following shows the exit status upon unsuccessful command execution on a
Windows system.
C:\Users>java -jar C:\\"Program Files"\PostgreSQL\EnterpriseDB-
xDBReplicationServer\bin\edb-
repcli.jar -paramfile addpubdb_advsvr
Adding publication database...
Error:FATAL: password authentication failed for user "myuser"
C:\Users>ECHO %ERRORLEVEL%
200
8.3 xDB Replication Server CLI Commands
This section provides a description, syntax diagram, and examples of each xDB
Replication Server CLI command.
Commands are presented in the order in which they will typically be used, following the
order in which xDB Replication Console operations are performed.
Note: Though most commands described in this section apply to both single-master and
multi-master replication systems, those commands that apply only to single-master
replication systems are noted with For SMR only. Those commands that apply only to
multi-master replication systems are noted with For MMR only. The same notation is
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 536
EDB Postgres Replication Server User’s Guide
used for command parameters that may apply only to single-master replication systems or
multi-master replication systems.
For the examples used in this section, it is assumed that the xDB Replication Server CLI
commands are executed after you have made XDB_HOME/bin your current working
directory, thereby eliminating the need to specify the full path of XDB_HOME/bin for
each execution of the edb-repcli.jar file. For example, assuming xDB Replication
Server is installed in the default installation directory you have issued the following
command in Linux:
cd /opt/PostgreSQL/EnterpriseDB-xDBReplicationServer/bin
In Windows, the equivalent is the following:
cd C:\Program Files\PostgreSQL\EnterpriseDB-xDBReplicationServer\bin
Whenever the repsvrfile parameter appears in the examples, file ~/pubsvrfile
contains the publication server login information and is located in the user’s home
directory while ~/subsvrfile contains the subscription server login information. For
Windows, the equivalent usage is %HOMEPATH%\pubsvrfile and
%HOMEPATH%\subsvrfile.
The examples in this section were run on Linux so you will see use of the Linux
continuation character, which is a backslash (\), to show how an xDB Replication Server
CLI command can be continued onto the next line if you do not want to wrap the text in
your terminal window. For Windows, use the Windows continuation character, which is a
caret (^).
8.3.1 Getting Help (help)
The help command provides a syntax summary of all xDB Replication Server CLI
commands.
Synopsis
-help
Examples
$ java -jar edb-repcli.jar -help
Usage: java -jar edb-repcli.jar [OPTIONS]
Where OPTIONS include:
-help Prints out Replication CLI command-line usage
-version Prints out Replication CLI version
-encrypt -input  -output  Encrypts input file to output file
-repversion -repsvrfile  Prints Replication Server version
.
.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 537
EDB Postgres Replication Server User’s Guide
.
8.3.2 Printing the Version Number (version)
The version command provides the xDB Replication Server CLI’s version number.
Synopsis
-version
Examples
$ java -jar edb-repcli.jar -version
Version: 6.1.0-alpha
8.3.3 Printing the xDB Replication Server Version Number
(repversion)
The repversion command provides the xDB Replication Server’s version number.
Synopsis
-repversion -repsvrfile pubsvrfile
Parameters
pubsvrfile
The file containing the publication server login information.
Examples
$ java -jar edb-repcli.jar -repversion -repsvrfile ~/pubsvrfile.prop
6.1.0-alpha
8.3.4 Encrypting Passwords (encrypt)
The encrypt command encrypts the text supplied in an input file and writes the
encrypted result to a specified output file. Use the encrypt command to generate an
encrypted password that can be copied into a text file that will be referenced by an xDB
Replication Server CLI command that requires a user name and the user’s password.
Synopsis
-encrypt –input infile –output pwdfile
The text in infile is processed using the MD5 encryption algorithm, and the encrypted
text is written to file pwdfile. Make sure that infile contains only the text that you
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 538
EDB Postgres Replication Server User’s Guide
want to encrypt and that there are no extraneous characters or empty lines before the text
or after the text that you want to encrypt.
Parameters
infile
The file containing the text to be encrypted.
pwdfile
The file containing the encrypted form of the text from infile.
Examples
The file infile contains the word “password”.
password
The encrypt command is then executed producing a file named pwdfile.
$ java -jar edb-repcli.jar -encrypt -input ~/infile -output ~/pwdfile
The content of file pwdfile contains the encrypted form of “password”.
ygJ9AxoJEX854elcVIJPTw==
8.3.5 Printing the Time the Server Has Been Running (uptime)
The uptime command prints the time interval since the publication server has been up
and running.
Synopsis
-uptime -repsvrfile pubsvrfile
Parameters
pubsvrfile
The file containing the publication server login information.
Examples
$ java -jar edb-repcli.jar -uptime -repsvrfile ~/pubsvrfile.prop
0 days 0 hours 4 minutes
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 539
EDB Postgres Replication Server User’s Guide
8.3.6 Adding a Publication Database (addpubdb)
The addpubdb command adds a publication database definition.
Synopsis
-addpubdb
-repsvrfile pubsvrfile
-dbtype { oracle | enterprisedb | postgresql | sqlserver }
-dbhost host
-dbport port
-dbuser user
{ -dbpassword encrypted_pwd | -dbpassfile pwdfile }
[ -oraconnectiontype { sid | servicename } ]
-database dbname
[ -urloptions jdbc_url_parameters ]
[ -filterrule filterid_1[,filterid_2 ] ...]
[ -repgrouptype { m | s } ]
[ -replicatepubschema { true | false } ]
[ -initialsnapshot
[ -verboseSnapshotOutput { true | false } ] ]
[ -nodepriority priority_level ]
[ -changesetlogmode { T | W } ]
The addpubdb command creates a new publication database definition. The addpubdb
command displays a unique publication database ID that is assigned to the newly created
publication database definition. The publication database ID is used to identify the
publication database definition on which to operate when running other xDB Replication
Server CLI commands.
See Section 5.2.2 for details on the database connection information that must be
supplied when adding a publication database definition for a single-master replication
system. See sections 6.2.2 and 6.3 for a multi-master replication system.
Parameters
pubsvrfile
The file containing the publication server login information.
-dbtype
Specify oracle if the database is an Oracle database. Specify enterprisedb if
the database is an Advanced Server database in Oracle compatible configuration
mode. Specify postgresql if the database is a PostgreSQL database or an
Advanced Server database in PostgreSQL compatible configuration mode.
Specify sqlserver if the database is a Microsoft SQL Server database.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 540
EDB Postgres Replication Server User’s Guide
host
The IP address of the host on which the publication database server is running.
port
The port number on which the database server is listening for connections.
user
The publication database user name.
encrypted_pwd
The encrypted password of the publication database user. See Section 8.3.4 for
directions on using the encrypt command to generate an encrypted password.
pwdfile
The file containing the encrypted password of the publication database user.
-oraconnectiontype
Specify sid if the Oracle system ID (SID) is used to identify the publication
database in the database parameter. Specify servicename if the Oracle
service name is used to identify the publication database in the database
parameter. Note: For Oracle 12c, use the service name.
dbname
The Postgres or SQL Server database name, the Oracle SID, or the Oracle service
name of the publication database.
jdbc_url_parameters
Extended usage of JDBC URL parameters such as for support of SSL
connectivity. (See Section 7.11 for information on SSL connectivity to the
publication database.)
filterid_n
For MMR only: Applies to non-MDN nodes. Comma-separated list of filter IDs
identifying the filter rules from the set of available table filters to enable on the
corresponding tables in the new master node. Use the printpubfilterslist
command to obtain the filter IDs for the available filter rules in the publication
(see Section 8.3.17). Note: There must be no white space between the comma and
filter IDs.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 541
EDB Postgres Replication Server User’s Guide
-repgrouptype
Specify s if this command applies to a single-master replication system. Specify m
if this command applies to a multi-master replication system. If omitted, the
default is s.
-replicatepubschema
For MMR only: Applies to non-MDN nodes. Set this option to true if you want
the publication table definitions replicated from the master definition node when
creating a new master node. Set this option to false if you have already created
the table definitions in the new master node. If omitted, the default is true. Do
not specify this parameter when creating the master definition node.
-initialsnapshot
For MMR only: Applies to non-MDN nodes. Specify this option if you want an
initial snapshot replication to be performed when creating the master node. Omit
this option if you do not want an initial snapshot replication to be performed when
creating the master node.
Note (For MMR only): Unless you intend to use the offline snapshot technique
(see Section 7.9), it is suggested that you specify this option. An initial snapshot
replication must be performed from the master definition node to every other
master node before performing synchronization replications on demand (see
Section 8.3.42) or by a schedule (see Section 8.3.44). If a newly added master
node did not undergo an initial snapshot, any subsequent synchronization
replication may fail to apply the transactions to that master node. The initial
snapshot can also be taken by performing an on demand snapshot (see Section
8.3.41).
-verboseSnapshotOutput
Set this option to true if you want the output from the snapshot to be displayed.
Set this option to false if you do not want the snapshot output displayed. If
omitted, the default is true.
Note: This option may be given only directly following the specification of the -
initialsnapshot option.
priority_level
For MMR only: Integer value from 1 through 10 assigning the priority level to a
master node with 1 having the highest priority and 10 having the lowest priority.
-changesetlogmode
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 542
EDB Postgres Replication Server User’s Guide
Specify T to use the trigger-based method of synchronization replication for this
publication database. Specify W to use the log-based (WAL) method of
synchronization replication for this publication database. If omitted, the default is
T.
Examples
The following example adds a publication database definition for an Oracle database. The
encrypted password is given on the command line with the dbpassword parameter. A
publication database ID of 1 is assigned to the database by the publication service.
$ java -jar edb-repcli.jar -addpubdb -repsvrfile ~/pubsvrfile.prop \
> -dbtype oracle -dbhost 192.168.2.6 -dbport 1521 \
> -dbuser pubuser -dbpassword ygJ9AxoJEX854elcVIJPTw== \
> -oraconnectiontype sid \
> -database xe \
> -repgrouptype s
Adding publication database...
Publication database added successfully. Publication database id:1
The following example adds a publication database definition for an Advanced Server
database. The encrypted password is read from a file named pwdfile with the
dbpassfile parameter. A publication database ID of 2 is assigned to the database by
the publication service.
$ java -jar edb-repcli.jar -addpubdb -repsvrfile ~/pubsvrfile.prop \
> -dbtype enterprisedb -dbhost 192.168.2.7 -dbport 5444 \
> -dbuser pubuser -dbpassfile ~/pwdfile \
> -database edb \
> -repgrouptype s
Adding publication database...
Publication database added successfully. Publication database id:2
The following example adds a publication database definition for a master definition
node in a multi-master replication system.
$ java -jar edb-repcli.jar -addpubdb -repsvrfile ~/pubsvrfile.prop \
> -dbtype enterprisedb -dbhost 192.168.2.6 -dbport 5444 \
> -dbuser pubuser -dbpassword ygJ9AxoJEX854elcVIJPTw== \
> -database edb \
> -repgrouptype m \
> -nodepriority 1
Adding publication database...