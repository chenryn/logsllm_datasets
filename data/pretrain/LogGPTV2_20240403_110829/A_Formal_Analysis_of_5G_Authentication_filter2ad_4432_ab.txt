for our work is that the USIM stores:
• a unique and permanent subscriber identity, called the Sub-
scription Permanent Identifier (SUPI),
• the public asymmetric key pkHN of its corresponding HN,
• a long-term symmetric key, denoted as K (used as a shared
secret between subscribers and their corresponding HNs),
and
• a counter, called Sequence Number, denoted as SQN.
The HN, associated to some subscriber, stores the same information
in its database.
Simplifications. In the standard, SNs and HNs are composed of
several sub-entities (e.g., HNs consist of a database, authentication
server, etc.). However, very few security properties require this level
Subscriber
Serving Network
Home Network
Phone (UE), USIM
Base station (antenna)
Subscriber’s carrier
Figure 1: Overall architecture: The subscriber uses his
phone (UE), equipped with a USIM, to communicate with a
base station run by the SN over an insecure wireless channel.
The SN communicates with the subscriber’s carrier (HN) on
the right over an authenticated (wired) channel.
3
of granularity. We thus have chosen to consider these three larger
logical entities (see Appendix A for more details).
2.2 Authentication Protocols
To enable SNs and subscribers to establish secure channels and
authenticate each other, the 3GPP has specified two authentica-
tion methods: 5G AKA and EAP-AKA’. The choice between those
two methods is left to the HN, once it has correctly identified the
subscriber with the Initialization Protocol. We now describe these
three security protocols. (All cryptographic messages are precisely
described in Appendix A.)
Initialization Protocol [TS 33.501, Sec. 6.1.2]. Figure 2 de-
2.2.1
picts the sub-protocol responsible for the subscribers’ identification
and initializing the authentication. Once the SN has triggered an
authentication with the subscriber, the latter sends a randomized
encryption of the SUPI (for privacy reasons, as we explain in Sec-
tion 3.2.3): SUCI = ⟨aenc(⟨SUPI, Rs⟩, pkHN), idHN⟩, where aenc(·)
denotes asymmetric encryption, Rs is a random nonce, and idHN
uniquely identifies an HN. The identifier idHN enables the SN to
request authentication material from the appropriate HN. Upon
reception of the SUCI along with the SN’s identity (referred to as
SNname), the HN can retrieve the SUPI, the subscribers’ identity,
and choose an authentication method. Note that SUPI also contains
idHN and therefore identifies both a subscriber and its HN.
2.2.2 The 5G AKA Protocol [TS 33.501, Sec. 6.1.3.2]. As mentioned
before, the key K is used as a long-term shared secret, and SQN
provides replay protection1 for the subscriber. While SQN should
be synchronized between the subscriber and the HN, it may happen
that they become out-of-sync, e.g., due to message loss. We thus use
SQNUE (respectively SQNHN) to refer to the SQN value stored in the
UE (respectively HN). The 5G-AKA protocol consists of two main
phases: a challenge-response and an optional re-synchronization
procedure (that updates the SQN on the HN side in case the SQN
is out of-sync). The entire 5G AKA protocol flow is depicted in
Figure 3.
Challenge-Response. Upon receiving a request for authentication
material, the HN computes an authentication challenge built from:
• a random nonce R (the challenge),
• AUTN (proving the challenge’s freshness and authenticity),
• HXRES∗ (response to the challenge that SN expects),
• KSEAF (key seed for the secure channel that the subscriber
and SN will eventually establish).
The functions f1 − f5, used to compute the authentication param-
eters, are one-way keyed cryptographic functions completely un-
related with each other, and ⊕ denotes Exclusive-OR. Challenge(·)
and KeySeed(·) are complex Key Derivation Functions (KDFs); see
Appendix A for more details. AUTN contains a Message Authentica-
tion Code (MAC) of the concatenation of R with the corresponding
sequence number SQNHN stored for this subscriber. A new sequence
number is generated by incrementing the counter. The sequence
number SQNHN allows the subscriber to verify the freshness of
the authentication request to defend against replay attacks and the
1This design choice is for historical reasons: old USIMs (e.g., in 3G and 4G) did not
have the capability to generate random nonces.
A Formal Analysis of 5G Authentication
D. Basin, J. Dreier, L. Hirschi, S. Radomirović, R. Sasse and V. Stettler
Subscriber
K, SUPI,
SQNUE, SNname
Serving Network
SNname
Home Network
K, SUPI,
SQNHN
Serving Network has initiated an authentication with the UE
SUCI
SUCI, SNname
Figure 2: Initiation of Authentication
Get SUPI from SUCI
Choose authentication method
MAC proves the challenge’s authenticity. The HN does not send the
challenge’s full response RES∗ to the SN but only a hash therereof;
the rationale being that HNs are willing to have assurance of the
presence of its subscribers even with malicious SNs.
The SN stores KSEAF and the challenge’s expected response and
then forwards the challenge to the subscriber. Upon receiving the
challenge, the subscriber first checks its authenticity and freshness.
To do this, the subscriber extracts xSQNHN and MAC from AUTN
and checks that:
(i) MAC is a correct MAC value with respect to K, and replies
’Mac_failure’ if it is not the case,
(ii) the authentication request is fresh2, i.e., SQNUE < xSQNHN,
and replies ⟨’Sync_failure’, AUTS⟩ otherwise (AUTS is
explained in the re-synchronization procedure below).
of
the
number
If all checks hold, then the subscriber computes the key seed KSEAF,
which is used to secure subsequent messages. It also computes the
authentication response RES∗ and sends it to the SN. The SN checks
that this response is as expected and forwards it to the HN, who
validates it. If this validation succeeds then the HN confirms to
the SN that the authentication is successful and sends the SUPI
to the SN. Subsequent communications between the SN and the
subscriber can be secured using the key seed KSEAF.
Re-synchronization procedure [TS 33.501, Sec. 6.1.3.2.1]. In case of a
synchronization failure (case ¬(ii)), the subscriber replies with
⟨’Sync_failure’, AUTS⟩. The AUTS message enables the HN to re-
synchronize with the subscriber by replacing its own SQNHN by the
sequence
SQNUE;
see [TS 33.102, Sec. 6.3.5,6.3.3]. However, SQNUE is not transmitted
in clear text to avoid being eavesdropped on (it is privacy sen-
sitive as explained in Section 3.2.3). Therefore, the specification
requires SQN to be concealed; namely, it is XORed with a value that
should remain private: AK∗ = f5∗(K, R). Formally, the concealed
value is CONC∗ = SQNUE ⊕ AK∗, which allows the HN to extract
SQNUE by computing AK∗. Note that f5∗ and f1∗ are independent
one-way keyed cryptographic functions, completely unrelated to
the functions f1 − f5. Finally, AUTS = ⟨CONC∗, MAC∗⟩, where
MAC∗ = f1∗(K, ⟨SQNUE, R⟩), allowing the HN to authenticate this
message as coming from the intended subscriber.
2.2.3 The EAP-AKA’ Protocol [TS 33.501, Sec. 6.1.3.1] and [RFC
5448]. EAP-AKA’ is very similar to 5G AKA: it relies on the same
mechanisms (challenge-response with K as a shared secret and SQN
for replay protection) and uses similar cryptographic messages.
subscriber
2The freshness check may also consider non-normative protection against the wrap-
ping around of SQNHN which we do not describe here; see [TS 33.102, Sec. C].
4
The main difference is the flow and some key derivation functions
are slightly changed. Since we focus our analysis on the 5G AKA
authentication method, we do not describe those differences in
detail here and refer the curious reader to Appendix B.
3 THREAT MODEL AND SECURITY GOALS
In this section, we derive precise, formal security goals from the
informal descriptions given in the Technical Specification (TS) and
Technical Requirement (TR) documents issued by the 3GPP. Our
formal definitions are our interpretation of these texts. We support
them with quotes from and references to relevant excerpts of the
TS and TR documents. The full list of relevant excerpts along with
explanations of our interpretations is given in Appendix D.
The extraction of precise properties from the standard’s infor-
mally stated goals is an important prerequisite to applying a security
protocol analysis tool (like Tamarin). It is thus a crucial step in the
security analysis of a complex protocol such as 5G AKA.
3.1 Security Assumptions and Threat Model
3.1.1 Assumptions on Channels. The channel between the SN and
the HN provides confidentiality, integrity, authenticity, and replay
protection [TS 33.501, Sec. 5.9.3].
The channel between the subscribers and SNs is subject to eaves-
dropping by passive attackers and manipulation, interception, and
injection of messages by active attackers. A passive attacker listens
to signaling messages (i.e., messages sent on the physical layer) and
can thus eavesdrop on all messages exchanged in its vicinity, but it
never emits a signal. An active attacker sets up a fake base station
to send and receive signaling messages, e.g., to impersonate SNs.
While no 5G-specific hardware is publicly available yet, we recall
that 4G base stations have been built using open-source and freely
available software and hardware [23, 35]. From now on, we shall
consider active attackers, except when explicitly stated otherwise.
3.1.2 Assumptions on Cryptographic Primitives. The functions f1,
f1∗, and f2 are message authentication functions, and f3, f4, f5, f5∗
are key derivation functions [TS 33.102, Sec. 3.2,6.3.2]. To our knowl-
edge there is no comprehensive set of standardized security require-
ments for these functions. The requirements in [TS 33.105, Sec. 5]
are insufficient, but we infer from the informal presentation in
[TS 33.102, Sec. 3.2] and requirements in [TS 33.105, Sec. 5] that
the former provide only integrity protection and the latter both in-
tegrity and confidentiality protection. However, since f1 and f1∗ are
applied to data that should be secret, such as SQN (see Section 3.2.3),
it is our understanding that they should also preserve the confiden-
tiality of their inputs. We therefore assume in our analysis that all
A Formal Analysis of 5G Authentication
D. Basin, J. Dreier, L. Hirschi, S. Radomirović, R. Sasse and V. Stettler
Subscriber
K, SUPI,
SQNUE, SNname
Serving Network
SNname, SUCI
Home Network
K, SUPI,
SQNHN, SNname
new random R
MAC ← f1(K, ⟨SQNHN, R⟩)
AK ← f5(K, R)
CONC ← SQNHN ⊕ AK
AUTN ← ⟨CONC, MAC⟩
xRES∗ ← Challenge(K, R, SNname)
HXRES∗ ← SHA256(⟨R, xRES∗⟩)
KSEAF ← KeySeed(K, R, SQNHN, SNname)
SQNHN ← SQNHN + 1
R, AUTN, HXRES∗, KSEAF
if SHA256(⟨R, RES∗⟩) (cid:44) HXRES∗then abort
Successful Authentication
RES∗, SUCI
SUPI
if RES∗ (cid:44) xRES∗ then abort
R, AUTN
⟨xCONC, xMAC⟩ ← AUTN
AK ← f5(K, R)
xSQNHN ← AK ⊕ xCONC
MAC ← f1(K, ⟨xSQNHN, R⟩)
CHECK (i) xMAC = MAC and
(ii) SQNUE < xSQNHN
If (i) and (ii) (Expected Response)
SQNUE ← xSQNHN
RES∗ ← Challenge(K, R, SNname)
KSEAF ← KeySeed(K, R, x SQNHN, SNname)
RES∗
If (i) and ¬(ii) (Synchronization Failure)
MACS ← f1∗(K, ⟨SQNUE, R⟩)
AK∗ ← f5∗(K, R)
CONC∗ ← SQNUE ⊕ AK∗
AUTS ← ⟨CONC∗, MACS⟩
’Sync_Failure’, AUTS
’Sync_Failure’, AUTS, R, SUCI
if CHECK(i) holds for MACS in AUTS
then SQNHN ← SQNUE + 1
If ¬(i) (MAC Failure)
’Mac_Failure’
Figure 3: The 5G AKA protocol (continuing Figure 2)
these functions protect both integrity and confidentiality, but we
stress that this is either underspecified or subscribers’ privacy is
put at risk (see Section 3.2.3).
3.1.3 Assumptions on Parties. To provide strong, fine-grained guar-
antees, we consider different compromise scenarios. First, we con-
sider an attacker who can compromise some SNs. This means that
the attacker gets access to an authenticated channel between the
compromised SN and HNs, which he can use to eavesdrop on and
inject messages. This is a reasonable assumption in 5G, where au-
thentication methods should provide security guarantees even in
5
the presence of genuine but malicious SNs [TS 33.501, Sec. 6.1.4.1].
In such situations, the HNs may cooperate with such SNs to authen-
ticate some subscriber. In practice, this may happen in roaming
situations. Next, we consider that the attacker may have genuine
USIMs and compromised USIMs under its control. For those com-
promised subscribers, the attacker can access all secret values stored
in the USIMs; i.e., SUPI, K, and SQN. Finally, the attacker can access
all long-term secrets, K, skHN, and SUPI, from compromised HNs.
A Formal Analysis of 5G Authentication
D. Basin, J. Dreier, L. Hirschi, S. Radomirović, R. Sasse and V. Stettler
3.1.4 Assumptions on Data Protection. The subscriber credentials,
notably the key K and the identifier SUPI, shared between sub-
scribers and HNs, should initially be secret, provided they belong
to non-compromised agents [TS 33.501, Sec. 3.1].
The sequence number SQN is a 48-bit counter or a 43-bit counter
[TS 33.102, Sec. 6.3.7,C.3.2] and therefore guessable with a very low
probability. Note that an offline guessing attack on the sequence
number counter is not possible, and online attacks on the UE first
require a correct MAC (based on the shared secret K) before the
UE responds whether the SQN was acceptable. We thus consider a
reasonable threat model where the value of SQN is unknown to the
attacker when the attack starts, but the attacker knows how it is
incremented during the attack. This corresponds to an attacker who
(i) can monitor the activity of targeted subscribers in its vicinity
during the attack but (ii) can neither guess the initial value of SQN
(iii) nor can he monitor targeted subscribers all the time (i.e., from
their first use of the USIM up to the attack time).
While not explicitly stated in the specification, we shall assume
that the private asymmetric key skHN is initially secret.
3.2 Security Requirements
We now extract and interpret from the 5G documents the security
goals that 5G AKA should achieve according to the 5G standard.
3.2.1 Authentication Properties. The 5G specifications make claims
about authentication properties at different places in the documents.
We have identified relevant claims and translated them into formal
security goals, indicated in purple, cursive text. We use Lowe’s tax-
onomy of authentication properties [28] to make the goals precise,
prior to formalization. These properties are well established and
understood, avoiding ambiguity [7]. Moreover, there is a formal
relationship between the taxonomy and mathematical definitions
of security properties that can be directly modeled in Tamarin [1].
We give an overview of Lowe’s taxonomy and its relationship
with formal definitions of authenticity in Appendix C. Intuitively,
the taxonomy specifies, from an agent A’s point of view, four levels