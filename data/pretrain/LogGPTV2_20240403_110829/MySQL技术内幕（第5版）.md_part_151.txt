口innodb_stats_persistent_sample_pages（启动：直接设置；作用范围：全局；动态）
口innodb_stats_on_metadata（启动：直接设置；作用范围：全局；动态）
口innodb_stats_method（启动：直接设置；作用范围：全局；动态）
口innodb_spin_wait_delay（启动：直接设置；作用范围：全局；动态）
口innodb_rollback_segments（启动：直接设置；作用范围：全局；动态）
口innodb_rollback_on_timeout（启动：直接设置；作用范围：全局）
口innodb_replication_delay（启动：直接设置；作用范围：全局；动态）
口innodb_read_ahead_threshold（启动：直接设置；作用范围：全局；动态）
口innodb_random_read_ahead（启动：直接设置；作用范围：全局；动态）
口
口
口innodb_purge_threads（启动：直接设置；作用范围：全局）
innodb_stats_transient_sample_pages 的值。此变量是在 MySQL 5.6.2里引入的。
它指的是，用于估计统计信息的InnoDB 样本的索引页数量。默认值为 20。如果启用了
TABLE 相类似。默认值为ON。
STATUS）有关的统计信息，或者更新那些与访问 STATISTICS 表和执行TABLES
nulls_unequal（每个NULL值单独成为一组）或nulls_igmored（忽略 NULL值）。
相同，还是视为不同。可设置的值包括有：nulls_equal（所有的NULL值在同一个组里）、
linnodb_sort_buffer_size（启动：直接设置；作用范围：全局）
innodb_analyze_is_persistent，那么此设置会被忽略掉。否则，InnoDB 会使用
INFORMATION_SCHEMA语句所得到的各张表有关的统计信息。其效果与运行ANALYZE
它指的是，InnoDB是否要更新与那些与表元数据访问语句（如 SHOW INDEX或 SHOWTABLE
此变量表示的是，服务器在为InnoDB表统计其索引键的分布概率时，应该把 NULL 值视为
待得越久。默认值为6，最小值为0。
它指的是，
641
1 MB。在MySQL5.6.4里最小值为512KB；在MySQL5.6.5及以上的版本里，最小值为
它指的是InnoDB在索引创建期间用于合并排序的缓冲区大小（单位为字节）。默认大小为
变量是在MySQL5.5.11里引入的。在5.6.3里，它被替换成了innodb_undo_logs。
它指的是，在一个事务里，InnoDB 在系统表空间里会使用多少回滚段。默认值为 128。此
整个事务。
InnoDB 存储引擎将只回滚最后一条语句；如果此变量的值是ON，InnODB 存储引擎将回滚
此变量控制着InnoDB 存储引擎在事务超时时的行为。如果此变量的值是OFF（默认值）
是复制线程的延迟时间（单位为毫秒）。默认值为0。
如果在从服务器上已达到innodb_thread_concurrency表明的那个限制，那么此变量便
它指的是InnoDB在执行读取操作时会使用多少个线程。取值范围是1~64；默认值为4。
innodb_read_io_threads（启动：直接设置；作用范围：全局）
作。默认值为56。允许的取值范围为0~64。
个来自同一范围（页面组）的页面构成，那么它会在下一个范围里执行一个异步预读取操
如果InnoDB检测到某个模式的顺序页面访问是由innodb_read_ahead_threshold或多
们的读取顺序无关紧要。默认值为OFF。
它们执行一个异步的预读取操作。预测的依据是该范围内的其他页面是否已被读取，
它指的是，
行删除掉）。默认值为0。此变量是在MySQL5.5.4里引入的。
它指的是，InnoDB使用了多少后台线程来实现清除操作（将所有事务都不再需要的待删除
新到磁盘上。默认值为20。此变量是在MySQL5.5.4里引入的。
4KB。此变量是在MySQL5.6.4里引I入的。在MySQL5.6.4之前，使用的是固定大小1MB。
，InnoDB是否要试图预测何时会需要位于某个范围内（即页面组）的页面，
旋转锁的两次轮询之间的最大等待值。这个值没有单位，但是值越大意味着等
D.1系统变量
，并为
而它
639
---
## Page 660
640
口innodb_use_sys_malloc（启动：直接设置；作用范围：全局）
口
口
口
口
口
口innodb_stats_transient_sample_pages（启动：直接设置；作用范围：全局；动态）
口innodb_stats_sample_pages（启动：直接设置；作用范围：全局；动态）
口
口
InnoDB使用其自己的分配器。
它指的是，InnoDB是否要使用系统内存分配器。默认值为ON。如果禁用此变量，会导致
引入的。
它指的是，在Linux里是否使用异步 IO子系统。默认值为ON。此变量是在MySQL5.5.4里
innodb_use_native_aio（启动：直接设置；作用范围：全局）
MySQL5.6.3里引I入的。
它指的是 InnoDB 针对独立恢复日志所使用的表空间文件数量。默认值为0。此变量是在
innodb_undo_tablespaces（启动：直接设置；作用范围：全局）
变
innodb_undo_logs（启动：直接设置；作用范围：全局；动态）
在其中创建其他日志文件的那个默认目录。此变量是在MySQL5.6.3里引入的。
InnoDB在其中创建独立恢复日志表空间的那个目录。默认值为“.”
如
innodb_undo_directory（启动：直接设置；作用范围：全局）
10000（即10秒）；值为0时，表示的是“不休眠”
innodb_thread_sleep_delay（启动：直接设置；作用范围：
允
它指的是InnoDB尝试维护的线程数量上限。当值为0时（默认值），表示的是
innodb_thread_concurrency（启动：直接设置；作用范围：全局；动态）
TABLE 语句。禁用此变量可以在一定程度上防止应用程序在自动提交模式已被禁用的情况
此
InnoDB表的写
此变量控制的是，当禁用自动提交模式时，InnoDB会如何处理LOCK TABLE 语句，以获得
innodb_table_locks（启动：直接设置；作用范围：全局、会话；动态）
它表示的是，线程在被挂起之前等待InnoDB 释放互斥信号的次数。
获得更好的性能而不使用XA事务，则可以将其设置为OFF。
它表示的是
innodb_support_xa（启动：
似于启用了严格的SQL模式。
它指的是，InoDB是否对表和索引的创建和修改语句的语法进行较严格要求。如果启用了
stats_persistent_sample_pages 的值。此变量是在MySQL 5.6.2里引l入的。
innodb_analyze_is_persistent，此设置会被忽略。否则，InnoDB 会使用innodb
它指的是，用于估计统计信息的InnoDB样本的索引页数量。默认值为8。如果启用了
MySQL5.6.3起，此变量已被弃用，请使用innodb_stats_transient_sample_pages。
在 MySQL 5.5里，它指的是用于估计统计信息的InnoDB样本的索引页数量。默认值为8。
指的是InnoDB线程在被放入InnoDB等待队列之前休眠的时间（单位为毫秒）。默认值为
许的取值范围为0~1000。
发出LOCK TABLE语句时遭遇死锁。
化变量，那么 InnoDB 会把有冲突的子句当作错误；否则，它们会被当作警告。
附录D系统变量、状态变量和用户变量参考
变量的值是
是在MySQL5.6.3里引人的。它用于替换innodb_ro1lback_segments。
的是，InnoDB在XA事务里是否支持两阶段提交模式。默认值为ON；但是如果为了
是
：OFF，InnoD要一直等到没有任何其他线程锁定那个表时才能执行LOCK
直接设置；作用范围：全局、会话；动态）
全局；动态）
，它表示的是InnoDB
“无限制”
。这个有点类
L
自
---
## Page 661
涉及的类型包括：InnoDB存储引擎、查询缓存和SSL。
SCHEMA数据库里查询表GLOBAL_STATUS和SESSION_STATUS来获得状态变量信息。
只有一个全局值，则全局变量和会话变量都将返回相同的值。另外，还可以通过在INFORMATION
值可分为全局级和会话级，分别对应于所有客户端的总和值和当前客户端的值。如果某个状态变量
行mysqladminextended-status命令可以查看这些状态变量。状态变量（与系统变量相似）的
D.2
状态变量提供的是各种与服务器当前运作状态有关的信息。通过使用SHOWSTATUS语句或执
Compression
 Binlog_stmt_cache_use
Aborted_connects
下面列出的是一些比较通用的状态变量。随后的几节描述的是几组彼此相关的状态变量，其中
状态变量名不区分大小写。
关于如何在运行时查看状态变量的更多信息请参考12.3.2节。
口
 Binlog_cache_use
 Binlog_cache_disk_use
Aborted_clients
口timed_mutexes（启动：直接设置；作用范围：全局；动态）
口innodb_write_io_threads（启动：直接设置；作用范围：全局）
口innodb_version（作用范围：全局)
存储在语句缓存里的非事务语句数量。此变量是在MySQL5.5.9里引入的。
因其大小超过系统变量binlog_cache_size的限制而使用临时磁盘文件的那些事务的数量。
因客户端未正确关闭而被中断的客户端连接个数。
表明是否对利用客户端/服务器协议实现的通信进行压缩。
状态变量
它指的是InnoDB在执行写入操作时会使用多少个线程。取值范围是1~64；默认值为4。
一地列出来。每个语句计数器的变量名都以Com_作为开头，并且都有一个后缀，用于表明
执行的次数。这种类型的变量有几十个，并且它们的名字都相似，因此这里没有将它们逐
服务器维护着一组状态变量，它们的作用是计数器，用于表示特定类型的语句（或命令）已
服务器向所有客户端（对于全局值）或当前客户端（对于会话值）发送出去的字节总数。
Bytes_received
因语句缓存已满而存储在临时文件里的非事务语句的数量。此变量是在MySQL5.5.9里引
事务的数量。
因其大小未超过系统变量binlog_cache_size的限制而保存在二进制日志缓存里的那些
连接服务器的尝试失败的次数。
它指的是InnoDB存储引擎的版本号。
务器已执行了多少条SELECT语句和DROPTABLE语句。
该计数器所对应的语句类型。例如，变量Com_select和com_drop_table分别表示的是服
Com_xxx
Bytes_sent
服务器从所有客户端（对于全局值）或当前客户端（对于会话值）接收到的字节总数。
人的。
是否要搜集InnoDB的互斥时间信息。默认值为OFF。
D.2状态变量
641
---
## Page 662
642
 Handler_read_prev
Handler_read_next
Handler_read_last
口
口
口
口
口
口
 Delayed_insert_threads
口
 Created_tmp_files
口
Connections
 Connection_errors_xxx
口
按索引逆序请求读取上一行的次数。
按索引顺序请求读取下一行的次数
请求从索引里读取最后一行的次数。此变量是在MySQL5.5.7里引入的。
请求基于索引值读取行的次数
Handler_read_key
请求基于索引值读取行的次数。
Handler_read_key
请求从索引里读取第一行的次数。
Handler_read_first
为两阶段提交所做的准备次数。
Handler_prepare
服务器使用该实现的次数。
有些存储引擎自己实现了“多范围读取”（Multi-Range Read）优化策略。此变量表示的是
Handler_mrr_init
定操作的次数。此变量是在MySQL 5.6.2里引入的。
此变量与锁定操作数量有关，主要是在表访问的开始和结束时起作用。其值除以2，即为锁
Handler_external_lock
请求从表删除行的次数。
Handler_delete
请求提交事务的次数
Handler_commit
已执行的表刷新操作次数。
Flush_commands
已写入的INSERT DELAYED行的个数。
Delayed_writes
INSERTDELAYED处理器的个数。
在处理INSERTDELAYED行时发生的错误个数。
Delayed_errors
Created_tmp_tables
Created_tmp_disk_tables
尝试连接服务器的次数（包括成功或失败的），
5.6.5里引入的。
这些变量用于跟踪在客户端尝试进行连接时出现的各种类型的错误。这些变量是在MySQL
服务器在处理语句时创建的内部临时表个数。
服务器创建的临时文件个数。
服务器在处理语句时在磁盘上创建的内部临时表个数。
附录D系统变量、状态变量和用户变量参考
此变量是在MySQL5.6.1里引I入的。
---
## Page 663
Open_files
口1
Max_used_connections
口1
Last_query_cost
 Key_writes
口
 Key_reads_requests
 Key_blocks_used
口
口
Handler_write
Handler_update
Handler_savepoint_rollback
Handler_savepoint
口
Handler_read_rnd_next
Handler_read_rnd
口
等待通过INSERT DELAYED语句写入的行个数。
它适用于最近执行的查询，指的是优化器在准备执行计划时选代的次数。此变量是在
把索引块写入键缓存的次数。
请求把数据块写入键缓存的次数。