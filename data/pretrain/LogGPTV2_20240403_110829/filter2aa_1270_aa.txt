Nail the Coffin Shut:
Kurt Grutzmacher - Defcon 16
grutz @ jingojango.net
NTLM IS DEAD
grutz @ jingojango.net
NTLM is DEAD!
grutz @ jingojango.net
NTLM is DEAD!
Slide #
Who I am...
Corporate Penetration Tester for nearly a decade (with a CISSP for 
business purposes, gotta do what ya gotta do)
Have seen the worst security get turned around into lil’ better security
As the Enterprise learned how to protect themselves we had to ﬁgure out 
other ways to attack
This presentation is a culmination of this knowledge
Also dabble in Metasploit development, getting Free MacWorld passes, 
and spreading the good word of OWASP
2
grutz @ jingojango.net
NTLM is DEAD!
grutz @ jingojango.net
NTLM is DEAD!
Slide #
Quick Definitions
LM - LAN Manager
Really old and really tired, never use this again
Finally disabled by default in Vista and Server 2008
NTLM - NT LAN Manager
Replaced “LAN Manager” (for a good reason)
A “suite” of protocols for authentication and security: “NTLM Security 
Support Provider (NTLMSSP)”
Also known as “ntlm 0.12”
Describes an authentication protocol and the hash result
Kerberos - Kerberos
But not just Kerberos, Microsoft extended Kerberos!
3
grutz @ jingojango.net
NTLM is DEAD!
grutz @ jingojango.net
NTLM is DEAD!
Slide #
Scrabble take two
Nonce - Number Used Once
Used to defeat replay attacks
SSPI - Security Support Provider Interface
Microsoft API to several security routines
SPNEGO - Simple and Protected GSSAPI Negotiation Mechanism
I don’t know what to speak to you, so lets negotiate!
IWA - Integrated Windows Authentication
The act of negotiating authentication type using SPNEGO
4
grutz @ jingojango.net
NTLM is DEAD!
grutz @ jingojango.net
NTLM is DEAD!
Slide #
Windows “Type” Auth
NTLM Authentication Protocol is a challenge-response scheme that can be 
broken into three “Types”:
Type 1:  Client sends “Hi, I want to talk to you”
Type 2:  Server sends “Ok, here’s the various features and protocols I 
support including a nonce for you to encrypt your hashes with so nobody 
can replay it later in case they capture it. Oh and the domain you should 
authenticate to.”
Type 3:  Client response “Sweet, I agree on the features you desire and 
support them in my daily life. Here’s the username, domain again, 
workstation name,  and the encrypted LM and NTLM hashes.”
The server recovers the LM/NTLM hashes and compares them to its internal 
table and grants / denies accordingly in the response to a Type 3 message.
5
grutz @ jingojango.net
NTLM is DEAD!
grutz @ jingojango.net
NTLM is DEAD!
Slide #
LM is a rotted corpse
1. Password converted to upper case
2. Password is null-padded or TRUNCATED to 14 bytes
3. Password is split into two halves of 7 bytes each
4. Two DES keys are created, one from each 7 byte half:
4.1.Convert each half to a bit stream
4.2.Insert a zero bit after every 7 bits
5. Each key DES-encrypts the string “KGS!@#$%” creating two 8 byte 
ciphertext values
6. Concatenate the two results for your LM hash
6
grutz @ jingojango.net
NTLM is DEAD!
grutz @ jingojango.net
NTLM is DEAD!
Slide #
NTLMv1 Protocol is… 
1. Cleartext is converted to Unicode and hashed with MD4 -- This is the 
“NTLM Hash”
2. The 16-byte hash is null-padded to 21 bytes and split into three 7-byte 
values
3. These values are each used to create three DES keys
4. Each of these keys is used to DES-encrypt the nonce from the Type 2 
message, resulting in three 8-byte ciphertext values
5. These three ciphertext values are concatenated to form a 24-byte value 
which goes into the Type 3 response.
7
grutz @ jingojango.net
NTLM is DEAD!
grutz @ jingojango.net
NTLM is DEAD!
Slide #
NTLMv2 Protocol is… 
1. NTLM hash is generated
2. Unicode uppercase username and domain name are concatenated
3. An HMAC-MD5 of the NTLM hash and result from Step 2 is made
4. A blob is created using the timestamp, a client nonce and static data
5. An HMAC-MD5 of the blob and result from Step 3 is made
6. This 16-byte value result is used in the NTLM slot
8
grutz @ jingojango.net
NTLM is DEAD!
grutz @ jingojango.net
NTLM is DEAD!
Slide #
NTLMv2 Session… 
1. An 8-byte client nonce is generated and padded to 24 bytes
2. The result is placed into the LM ﬁeld of the Type 3 response -- No LM 
result is generated or passed using NTLMv2 Session
3. Server’s nonce is concatenated with the client nonce -> Session nonce
4. Session nonce is MD5’d and truncated to 8 bytes -> Session hash
5. NTLM hash is generated, null padded to 21 bytes and split into three 7-
byte values
6. These values are each used to create three DES keys
7. Each of these keys is used to DES-encrypt the nonce from the Type 2 
message, resulting in three 8-byte ciphertext values
8. These three ciphertext values are concatenated to form a 24-byte value 
which goes into the Type 3 response.
9
grutz @ jingojango.net
NTLM is DEAD!
grutz @ jingojango.net
NTLM is DEAD!
Slide #
Seems strong…
NTLM is better than LM:
1. Cleartext is NOT converted to upper case
2. Passwords are NOT broken into blocks of 7 bytes
3. DES not so good but it’s the last step to generate results and client/
server nonces protect from pre-computed attacks
4. Server nonces do not protect pre-computed attacks however.
In the end LM and NTLM hashes should be considered the same as 
cleartext. When obtained an attacker does not need to ﬁnd the cleartext in 
order for them to be used.
10
grutz @ jingojango.net
NTLM is DEAD!
grutz @ jingojango.net
NTLM is DEAD!
Slide #
NTLM is supported...
in Microsoft products (IIS, IAS, Exchange, Internet Explorer)
in Samba and Apache and PAM
in other browsers (Mozilla Firefox and Safari)
in proxy servers to support browsers who don’t do NTLM
in your iPhone (really!) for Enterprises
in OSX to connect to Windows shares
in WinCE to connect to Windows shares
in ToasterBrandConsumerDevice to connect to Windows shares
in * to connect to Windows shares
11
...everywhere!
grutz @ jingojango.net
NTLM is DEAD!
grutz @ jingojango.net
NTLM is DEAD!
Slide #
So why is it dead?
NTLM has shown its survivability by hanging on to “backwards 
compatibility” and ubiquitous deployment. If it’s everywhere what is the 
incentive to get rid of it?
Good question, and for one-off sort of authentication the NTLM protocol 
is not a bad option. You’ve got:
Replay protection
Mixed case support from cleartext to ciphertext
Client and Server nonces
Message digests
Timestamping
12
grutz @ jingojango.net
NTLM is DEAD!
grutz @ jingojango.net
NTLM is DEAD!
Slide #
..sounds good so far!
Lets not get ahead of ourselves just yet.
In an ENTERPRISE we have the joyful tune of “Single Sign-On”. When a 
workstation becomes a member of the domain any user that logs on can 
access their resources with only having to type their password once 
during the log on process
This means that the cleartext or LM/NTLM ciphertext may be stored 
within the memory of the workstation throughout the session or beyond!
It also means that authentication can happen at the request of an 
application and not by a user.
13
grutz @ jingojango.net
NTLM is DEAD!
grutz @ jingojango.net
NTLM is DEAD!
Slide #
Attack Scenarios
14
grutz @ jingojango.net
NTLM is DEAD!
grutz @ jingojango.net
NTLM is DEAD!
Slide #
Our Threat Model
The NTLM protocols pre-suppose an Enterprise authentication system 
using Windows Domains or Active Directory.
Evildoers must ﬁt within this environment in order to take advantage of it 
so they usually have to physically have access inside.
Doesn’t mean this isn’t an external threat, just that at this time I can’t think 
of or have seen an attack from the outside in.
15
grutz @ jingojango.net
NTLM is DEAD!
grutz @ jingojango.net
NTLM is DEAD!
Slide #
SMB Relay (original)
First released in March, 2001 at @tlantaCon by Sir Dystic of cDc
Listens for NBT requests and collects LM/NTLM hashes for cracking
Version 1:
Connects back to the requester using their credentials
Emulates an SMB server for the attacker to connect to
TCP/IP Addresses only
Generally great for one-off attacks
Version 2:
Supported NetBIOS names
Relay to a third-party host
16
http://www.xfocus.net/articles/200305/smbrelay.html
grutz @ jingojango.net
NTLM is DEAD!
grutz @ jingojango.net
NTLM is DEAD!
Slide #
SMB Relay (Metasploit)
Re-engineering of SMB Relay script as a Metasploit attack module
Metasploit already had LM/NTLM hash capture support since 2.7
Can connect back to original host or forward to a single host
Works great if:
Users are local administrators
Server service has been started on their workstations
or the users have rights to your destination host
See last year’s “Tactical Exploitation” presentation for other cool ideas.
17
grutz @ jingojango.net
NTLM is DEAD!
grutz @ jingojango.net
NTLM is DEAD!
Slide #
Stopping SMBRelay
Through a GPO or within Local Security Policy change your LAN 
Manager authentication level:
18
grutz @ jingojango.net
NTLM is DEAD!
grutz @ jingojango.net
NTLM is DEAD!
Slide #
Stopping SMBRelay
Through a GPO or within Local Security Policy change your LAN 
Manager authentication level:
18
grutz @ jingojango.net
NTLM is DEAD!
grutz @ jingojango.net
NTLM is DEAD!
Slide #
…but not really
NTLMv2 does not stop this attack. At the current time NTLMv2 is not 
fully supported within the MSF libraries so enable NTLMv2 (for now)
19
grutz @ jingojango.net
NTLM is DEAD!
grutz @ jingojango.net
NTLM is DEAD!
Slide #
Protocol Downgrade
During SPNEGO the client gets the ﬁrst word on protocol support:
Signing, Sealing, use NTLM, Always Sign, send Target block, etc.
The server responds with their own list of support:
NTLM2 key, Target block included, 128-bit encryption, etc
If both sides agree the client sends all the requisite data for an 
authentication attempt and waits for a response.
Using MITM tools such as Cain & Able or Ettercap an attacker can force 
either side to negotiate LOWER than they would have otherwise.
20
grutz @ jingojango.net
NTLM is DEAD!
grutz @ jingojango.net
NTLM is DEAD!
Slide #
Protecting Downgrade
Through a GPO or within Local Security Policy change your LAN 
Manager authentication level:
21
grutz @ jingojango.net
NTLM is DEAD!
grutz @ jingojango.net
NTLM is DEAD!
Slide #
Replay Attacks
Comes in two forms: 
Network capture and replay if no nonce
Obtaining the LM/NTLM hashes and using them during auth
“Pass The Hash” is the term and it is pure awesome:
Obtain privileges on a server or workstation
Dump a copy of stored hashes (SAM, LSASS, running processes)
Skip the part of “converting to LM/NTLM” during the Network 
authentication routines
Who needs to crack hashes anymore?
22
grutz @ jingojango.net
NTLM is DEAD!
grutz @ jingojango.net
NTLM is DEAD!
Slide #
Tools for Replay
Obtain hashes:
FGDump - 
PWDumpX -
Cain & Able - 
Pass The Hash Toolkit
Metasploit, Canvas, CORE Impact
Passing The Hash
Hydra
Pass The Hash Toolkit
Metasploit, Canvas, CORE Impact
23
grutz @ jingojango.net
NTLM is DEAD!
grutz @ jingojango.net
NTLM is DEAD!
Slide #
NTLM over ...
HTTP, IMAP, POP3, SMTP, NNTP, etc. . .
While NTLM is a Microsoft protocol, in order to fully support SSO it has 
to support standard protocols. NTLM “Type Messages” is the 
implementation of the NTLM Protocol over these 7-bit protocols.
Part of the Integrated Windows Authentication suite.
24
grutz @ jingojango.net
NTLM is DEAD!
grutz @ jingojango.net
NTLM is DEAD!
Slide #
IE Trust Zones
In order for Internet Explorer to perform Integrated Windows 
Authentication the browser must be in the “Local Intranet” or customized 
zone with unique security restrictions.
25
grutz @ jingojango.net
NTLM is DEAD!
grutz @ jingojango.net
NTLM is DEAD!
Slide #
What to-do in a zone
Perform automatic Integrated Windows Authorization
Instantiate more ActiveX/COM objects
Less restriction on existing ActiveX functions.
26
grutz @ jingojango.net
NTLM is DEAD!
grutz @ jingojango.net
NTLM is DEAD!
Slide #
Forcing Trust Zones
It has been possible in the past to force IE into the Local Intranet zone 
through the use of Flash or Java applets.
http://heasman.blogspot.com/2008/06/stealing-password-hashes-with-
java-and.html
27
grutz @ jingojango.net
NTLM is DEAD!