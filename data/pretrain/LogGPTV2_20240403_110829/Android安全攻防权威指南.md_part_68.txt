设备厂商通常会以不披露协议（NDA）的法律形式来防止源代码泄露。
从安全的角度来看，这些vendor-ril库非常重要。它们通常只以二进制文件的形式发布，因
---
## Page 306
290第11章攻击RIL无线接口层
此基本没有被Android社区审计过。在Android系统中，vendor-rl还是一块经常需要定制和修改
的代码，其稳定性也一直是个大问题，因此发布的库中可能会包含隐藏的、没有进行加固的调试
功能。综上所述，vendor-ril的代码中存在bug和漏洞的可能性更大。
RIL与基带之间的通信
rild与基带的交互是在vendor-ril中实现的，这完全取决于厂商和基带型号。它可能是一种
私有协议，也可能是基于文本的标准GSMAT指令集。如果某个基带使用了GSMAT指令集，
那相关的Linux内核驱动一般会在/dev文件系统下提供一些串行设备。此时，RIL守护程序只需
要打开指定设备，就可以用GSMAT协议进行通信。虽然协议是标准化的，但基带制造商可能
会在其基带中增加自己定制的指令。因此，各种情况都需要一个与之相匹配的vendor-ril库来协
作。此外，就算使用了标准的指令，大部分基带的行为也会各有不同。不管怎样，协议的细节
完全取决于制造商。
注意GSMAT指令集的更多信息参阅：http://www.etsi.org/deliver/etsi_i_ets/300600_300699/
300642/04_60/ets_300642e04p.pdf。
简单起见，本章只介绍基于AT指令集的调制解调器通信。目前有一些私有的基带协议得到
逆向，并有开源的重薪实现，比如所有三星设备使用的协议。可以在Replicant项目中找到这个
协议的更多信息：http://redmine.replicant.us/projects/replicant/wiki/SamsungModems
11.2短信服务
短信服务（SMS）是移动网络的一项基础服务。绝大部分用户对SMS的了解仅限于从一部
手机向另一部手机发送文本消息。实际上，它还被用于移动网络基础设施与移动手持设备之间所
有类型的通信。
20年前，GSM协会（全球移动通信系统协会，亦简称为GSMA）就完成了SMS的标准化工
作。它并非移动网络最初设计的一部分，面是稍后才被列入标准。SMS使用控制信道传输数据，
该信道主要用于基站和移动设备之间拨打和接听电话的信号传输。由于使用了这个控制信道，
SMS消息的长度被局限在140字节或160个7比特字符之内。目前，几乎所有类型的移动通信网
络都支持SMS服务。
11.2.1SMS消息的收发
使用一部手机向另一部发送短信时，这条短信并不是直接从前者传输到后者。发送短信的手
机会将短信发送到移动网络中一个称为短消息服务中心（SMSC）的地方。之后，短信会经过多
个中间SMSC节点的传递，最终被递送到目标手机。
SMSC的作用并不只是在发送者和接收者之间传递短信。如果接收短信的手机不在基站范围
内或者已关机，SMSC会将这条短信存储到一个队列中，直到那部手机再次变为在线状态。SMS
---
## Page 307
11.2短信服务
291
的递送只是“尽力而为"，也就是说，并不能保证短信一定会递送到。SMS标准中有一个有效期值
（Time-To-Live，TTL）.用于设定短信在队列中储存多久后被丢弃。
移动设备中接收和处理短信的过程会在11.3节中详细介绍。
11.2.2SMS消息格式
前面已经提到，SMS的功能并不仅是在手机之间发送文本消息，它还用于修改或更新手机
配置信息，发送铃声和彩信，通知用户有新的语音邮件，等等。为了实现这些特性，除了支持纯
文本格式的消息外，SMS还支持发送二进制数据。因此，SMS在移动安全方面值得关注。本节
将简要介绍SMS消息格式中几个最重要的部分，更多细节可以参考3GPPSMS标准：
http://www.3gpp.org/ftp/Spccs/html-info/23040.htm。
1.SMS格式
SMS消息有两种不同的格式，具体使用取决于消息是从手机发送到SMSC，还是从SMSC
发送到手机。这两种格式区别不大。由于我们只关心递送侧（也就是手机侧的）消息，所以本节
只介绍名为SMS-Deliver的递送格式。表11-3描述了这一格式。
麦11-3SMSPDU格式
字段名
字节数
用途
SMSC
可变
SMSC 号码
Deliver
1
消息标志
Sender
可变
发送者号码
TP-PID
1
协议ID
TP-DCS
1
数据编码方案
7
时间威
UDL
1
用户数据长度
UD
可变
 OSWS
下面的数据就是一个SMSDeliverPDU格式的SMS消息。这就是该消息从蜂窝调制解调器
传给手机的电话栈时的样子。
0891945111325476P8040091947187674523P100003150821142154
00DC8309BFD060DD161398B3C07
该消息的开头是SMSC信息。SMSC信息的第一字节是长度域（说明后面附带的SMSC数据
长度），接下来的字节是电话号码类型域（这里的91是指国际格式），然后是多字节（前面给出
的长度减1字节）的SMSC号码。在PDU中，SMSC号码的编码方式为将每个字节的高4位和
低4位进行对调。此外，由于这个号码结束时没有保证字节对齐（即出现了半字节），因此会用
F在空档里填充半字节。现在，可以将前面PDU消息数据中的SMSC号码解码成：
长度
美型
91
号码
80
4915112345678
---
## Page 308
292第11章攻击RIL无线接口层
接下来是Deliver字段，它给出了消息头部标志位。这个字段的长度是1字节，用于说明各
类情况，比如还有更多的消息要发送（本例中的0×04这个值），或者用户数据（UD）字段中包
含一个用户数据头（UDH）。后者会通过用户数据头指示位（UDHIbit）来指明。本节后面将简
要介绍UDH
接下来的字段是发送方号码。它的格式与SMSC号码基本一致，唯一的区别是长度域。发
送方号码的长度域是以手机号码中数字的个数，而不是以存储在PDU中实际所用的字节数来
计算的。
长度
类型
号码
0D
91
4917787654321
发送方号码之后是协议标识符（TP-PID）字段。TP-PID的值有多重不同的含义，这取决于
其中某些位是否被置上。它通常会被设置成0x00。后面一个字段是数据编码方案（TP-DCS）字
段，定义了这条消息的用户数据（UD）字段的编码方式。支持的编码方案包括7位、8位和16
位字母表。这个字段还指明是否对数据进行了压缩。对于7位编码的未压缩消息，这个字段的值
是0×00，而对于8位编码的未压缩数据，则会是0×04。这个示例里的值是0×00，说明后面是7
位编码的文本。
接下来的字段是该消息的时间截（TP-SCTS）时间截一共使用7字节，依次是年、月、日，
等等。其中每个字节都采用了高4位和低4位交换的编码。因此，这个示例消息中的时间截表明，
该消息的发送时间是2013年5月28日。
下面的用户数据长度（UDL）字段与数据编码方案（TP-DCS）是相关的。当TP-DCS是7
位编码时，这个字段给出的就是用户数据中存储了多少个7位元素。在这个示例中，说明其中存
储了13（0×0D）个7位元素。最后，示例中的用户数据是C8309BFD060DD16139BB3C07，解
码后是Hel1oCharle8。
2.SMS用户数据头
SMS用户数据头（UDH）用于实现除简单文本信息之外的其他各种SMS功能，比如超长短
信、端口编址短信、提示信息（如新的语音邮件，即Android通知栏上出现的小邮件符号）、WAP
推送以及基于WAP推送的彩信（MMS）等。在SMS-Deliver格式中，UDH是用户数据字段的一
部分。Deliver字段中的UDHI标志用于指示后面的用户数据里是否含有UDH。
UDH是一个通用的数据域，由两部分组成：长度域（UDHL）和数据域。长度域给出了整个
数据域的字节数，面数据域则采用一种名为"信息元素”（IE）的“类型-长度-值”（TLV）格
式进行编码。IE格式的结构如表11-4所示。
表11-4IE格式
字段
字节数
信息元素标识符（IEI）
1
信息元索数据长度（IEDL）
1
信息元素数据（IED）
可变
---
## Page 309
11.3与调制解调器进行交互293
第一字节叫作IEI，表示IE的类型；第二字节叫作IEDL，表示IE的长度；接下来的多字节
叫作IED，存储实际的数据。每个UDH中可以有任意多个IE。下面的示例是包含了一个IE的
UDH，其中的IE说明这是一条超长短信的片段。
050003420301
UDH长度是0×05，超长短信头部的IEI是0×00，长度是0×03，其余部分是该IE的数据。
在 SMS标准中可以找到标准化IEI的完整列表和更多详细信息：htp://www.3gpp.org/ftp/
Specs/html-info/23040.htm。
11.3与调制解调器进行交互
本节介绍与Android智能手机的调制解调器进行交互的必要步骤。与调制解调器进行交互的
原因有很多，本章的主要目的是对电话栈进行模糊测试。
11.3.1模拟调制解调器用于模糊测试
要寻找RIL相关组件中的bug和漏洞，模橱测试是一种有效的方法。第6章介绍过，模糊测
试有意构造恶意格式的输人数据，然后测试软件对输人数据的校验程度。它有悠久的历史，可以
有效地达到目的。要成功进行模测试，需要完成三项工作：生成输入数据，运行测试用例，以
及监控软件崩溃状况。
对RIL而言，如果SMS处理代码中存在漏洞，会是不错的攻击途径。因为SMS有开放的标
准和完善的文档，所以基于标准实现一个自动生成各类SMS信息的程序非常容易。因此，SMS
是完美的模榭测试目标。本章稍后会演示一个简单的SMS模酮生成器。
接下来需要将这些恶意的输入传递给要进行模糊测试的软件组件。这里要测试的组件是rild。
通常情况下，SMS消息以OTA（Over-The-Air）的方式传递：发送手机将信息发送给移动网络，
移动网络再将信息转发给接收手机。但是以这种方法发送SMS消息会有一些问题。
首先，通过实际网络递送信息非常慢，可能要好几秒钟。其次，有些运营商和国家可能无法
发送特定类型的SMS消息。移动运营商会接收某些消息类型但并不会转发；然而我们无法访问
运营商的系统，因此无法判断为什么目标手机没有接收到某条消息。再次，发送短信毕竞需要钱
（尽管有些套餐包含无限的短信数量），面且移动运营商可能会禁掉每天都发出几千条短信的账
号。此外，运营商在理论上能记录下所有经过其网络的SMS信息，可能捕获到触发漏润的SMS
11
信息，从而拿到我们的模椭测试结果。最后，恶意构造的信息也可能无意中伤害到后端的移动通
信系统，比如SMSC节点。综合上面这些情况来看，通过真实的移动网络来发送用于模糊测试的
SMS信息并不是可靠的选择。
有许多方法可以清除这些障碍，比如使用一个小型GSM基站来架设自已的移动网络。不过
也有更好的选择，比如模拟蜂窝调制解调器。
---
## Page 310
294第11章攻击RIL无线接口层
需要模拟蜂窝调制解调器中的特定部分，向Android电话栈中注入SMS消息。用软件实现
一个完整的调制解调器模拟器也未尝不可，不过会增加许多不必要的工作。其实，只需模拟调制
解调器中少数儿个特定的功能即可。我们采用的方法是在调制解调器和rild之间插人一块代码，
充当中间人的角色，来监控并修改两者之间传输的所有数据。在这个层级插入代码，可以访问rild
和调制解调器之间交换的所有指令及其返回结果数据，还可以拦截或修改这些指令与结果。最重
要的是，我们能注入自定义的返回结果，并将其伪装成来自调制解调器。RIL守护程序以及Android
电话栈的其他组件并不能准确区分每条指令到底是真实的还是注人进来的，因此会按照来自真实
调制解润器的情况去接受和处理所有的指令和结果。因此，捕人代码是一种很强大的方法，可以
用于研究蜂窝调制解调器与Android电话栈边界处的安全性问题。
1.插入基于GSMAT指令的vendor-ril
在现实中，很容易就能找到实现GSMAT指令集的蜂窝基带系统。由于这套AT指令集基于
文本，也比较容易理解和实现。因此，它非常适合用于RIL安全性的研究。2009年，CollinMulliner