title:Pisces: Anonymous Communication Using Social Networks
author:Prateek Mittal and
Matthew K. Wright and
Nikita Borisov
Pisces: Anonymous Communication Using Social Networks
Prateek Mittal
University of California,
Berkeley
PI:EMAIL
PI:EMAIL
Matthew Wright
University of Texas at
Arlington
Nikita Borisov
University of Illinois at
Urbana-Champaign
PI:EMAIL
Abstract
1 Introduction
The architectures of deployed anonymity systems such as
Tor suffer from two key problems that limit user’s trust in
these systems. First, paths for anonymous communication
are built without considering trust relationships between
users and relays in the system. Second, the network archi-
tecture relies on a set of centralized servers. In this paper,
we propose Pisces, a decentralized protocol for anonymous
communications that leverages users’ social links to build
circuits for onion routing. We argue that such an approach
greatly improves the system’s resilience to attackers.
A fundamental challenge in this setting is the design of a
secure process to discover peers for use in a user’s circuit.
All existing solutions for secure peer discovery leverage
structured topologies and cannot be applied to unstructured
social network topologies. In Pisces, we discover peers by
using random walks in the social network graph with a bias
away from highly connected nodes to prevent a few nodes
from dominating the circuit creation process. To secure the
random walks, we leverage the reciprocal neighbor policy:
if malicious nodes try to exclude honest nodes during peer
discovery so as to improve the chance of being selected,
then honest nodes can use a tit-for-tat approach and re-
ciprocally exclude the malicious nodes from their routing
tables. We describe a fully decentralized protocol for en-
forcing this policy, and use it to build the Pisces anonymity
system.
Using theoretical modeling and experiments on real-
world social network topologies, we show that (a) the re-
ciprocal neighbor policy mitigates active attacks that an
adversary can perform, (b) our decentralized protocol to
enforce this policy is secure and has low overhead, and (c)
the overall anonymity provided by our system signiﬁcantly
outperforms existing approaches.
Systems for anonymous communication on the Internet,
or anonymity systems, provide a technical means to enhance
user privacy by hiding the link between the user and her
remote communicating parties (such as websites that the
user visits). Popular anonymity systems include Anony-
mizer.com [9], AN.ON [4, 16], and Tor [14]. Tor is used by
hundreds of thousands of users [58], including journalists,
dissidents, whistle-blowers, law enforcement, and govern-
ment embassies [19, 60].
Anonymity systems forward user trafﬁc through a path
(or circuit) of proxy servers. In some systems, including
Tor, the proxies on the circuit are selected from among a
large number of available proxies, each of which is sup-
posed to be operated by a different person. An attacker,
however, might run a substantial fraction of the prox-
ies under different identities. He would then be able to
deanonymize users whose circuits run through his attacker-
controlled proxies. Thus, the security of the anonymity sys-
tem hinges on at least some of the proxies in the circuit
being honest [55]. Having some means to discern which
proxies are likely to be honest would thereby greatly en-
hance the security of the system.
Recently, Johnson et al. proposed a method to incorpo-
rate trust—in which the user must judge which proxies are
more likely to be honest—into a Tor-like system [25, 26].
However, their approach relies on central servers, and offers
only limited scalability (see Section 2). Both Nagaraja [44]
and Danezis et al. [10] describe a compelling vision for
leveraging social relationships in a decentralized (peer-to-
peer) anonymity system by building circuits over edges
in a social network graph. Unfortunately, their protocols
are limited in applicability to a honest-but-curious attacker
model. Against a more powerful Byzantine adversary, both
approaches are vulnerable to route capture attacks, in which
the entire circuit is comprised of malicious nodes. To our
knowledge, no proposed system securely leverages social
relationship information to improve the chances of attacker-
free circuit construction in a decentralized anonymity sys-
tem.
Our contributions: In this paper, we propose to use so-
cial networks to help construct circuits that are more robust
to compromise than any prior approach among decentral-
ized anonymity systems. We take advantage of the fact that,
when protected from manipulation, random walks on social
network topologies are likely to remain among the honest
users [29, 67]. We thus propose to construct random walks
on a social network topology to select circuits in such a way
that they cannot be manipulated by a Byzantine adversary.
We then build circuits from these protected random walks
and show that they provide a very high chance for users to
have an honest circuit, even for users who have a few social
links to malicious peers.
The key challenge in this setting is to prevent the adver-
sary from biasing the random walk by manipulating their
routing tables. To this end, we propose the reciprocal neigh-
bor policy: if malicious nodes try to exclude honest nodes
during peer discovery, then honest nodes can use a tit-for-
tat approach and reciprocally exclude the malicious nodes
from their routing tables. The policy ensures that attempts
to bias the random walk towards malicious nodes reduce the
probability of malicious nodes being selected as intermedi-
ate nodes in the random walk, nullifying the effect of the
attack. Further, to prevent an attacker from beneﬁting by
creating a large clique of malicious peers in the social net-
work, we bias random walks away from peers with many
friends.
An important contribution of our work is a technique
for enforcing the reciprocal neighbor policy in a fully de-
centralized fashion. We efﬁciently distribute each node’s
current list of contacts (using Whanau [29]) so that those
contacts can verify periodically that they are in the list. A
contact that should be in the list, but is not, can remove the
node permanently from its contacts in future time periods.
Further, the list is signed by the node, so any conﬂicting
lists for the same time period constitute proof that the node
is cheating. Using this policy, we design Pisces, a decen-
tralized anonymity system that uses random walks on so-
cial networks to take advantage of users’ trust relationships
without being exposed to circuit manipulation.
We demonstrate through theoretical analysis, simula-
tion, and experiments, that our application of the recipro-
cal neighbor policy provides good deterrence against active
attacks. We also show that our distributed design provides
robust enforcement of this policy, with manageable over-
head for distributing and checking contact lists. Finally,
using real world social network topologies, we show that
Pisces provides signiﬁcantly higher anonymity than existing
approaches. Compared with decentralized approaches that
do not leverage social networks (like ShadowWalker [38]),
Pisces provides up to six bits higher entropy in a single
communication round. Compared with the naive strategy
over social networks, thereby avoiding Sybil attackers;
of using conventional random walks over social networks
(as in the Drac system [10]), Pisces provides twice the en-
tropy over 100 communication rounds. To summarize, this
paper’s contributions are to:
(cid:15) Propose to construct circuits by routing random walks
(cid:15) Propose the reciprocal neighbor policy and biasing of ran-
(cid:15) Propose a distributed protocol for enforcing the policy;
(cid:15) Demonstrate the effectiveness of our approach against at-
(cid:15) Show that overheads are reasonable through simulation
dom walks to improve security;
tackers through analysis and simulation;
and experiments.
2 Background and Related Work
The focus of this work is on low-latency anonymity sys-
tems that can be used for interactive trafﬁc such as Web
browsing and instant messaging. Low-latency anonymity
systems aim to defend against a partial adversary who can
compromise or monitor only a fraction of links in the sys-
tem. Most of these systems rely on onion routing [56] for
anonymous communication. Onion routing enables anony-
mous communication by using a sequence of relays as inter-
mediate nodes to forward trafﬁc. Such a sequence of relays
is referred to as a circuit. A key property of onion routing
is that each relay on the circuit only sees the identity of the
previous hop and the next hop, but no single relay can link
both the initiator and the destination of the communication.
2.1 Centralized/semi(cid:173)centralized approaches
Most deployed systems for anonymous communication
have a centralized or semi-centralized architecture, includ-
ing Anonymizer [9], AN.ON [16], Tor [14], Freedom [8],
Onion Routing [56], and I2P [23]. Anonymizer.com [9] is
effectively a centralized proxy server with a single point
of control.
If the proxy server becomes compromised or
is subject to subpoena, the privacy provided by the system
would be lost. AN.ON [16] distributes the trust among three
independently-operated servers; again, the compromise of
just a few nodes sufﬁces to undermine the entire system.
Both Anonymizer.com and AN.ON are prone to ﬂooding-
based denial of service attacks. Furthermore, with both sys-
tems, it may be possible to eavesdrop on the server(s) and
use end-to-end timing attacks (such as [22, 65, 69]) to sub-
stantially undermine the privacy of all users.
Tor is a widely used anonymous communication sys-
tem, serving roughly 500,000 users [59] and carrying ter-
abytes of trafﬁc each day [58]. Tor is substantially more
distributed than either Anonymizer.com or AN.ON, with
users building circuits from among about 3,000 proxy nodes
(onion routers) as of May 2012 [28]. This helps to pro-
tect against direct attacks and eavesdropping on the entire
system. Tor relies on trusted entities called directory au-
thorities to maintain up-to-date information about all relays
that are online in the form of a network consensus database.
Freedom [8] and I2P [23] also use such centralized direc-
tory servers. Users download the full database, and then lo-
cally select random relays for anonymous communication.
Clients download this database every three hours to handle
relay churn.
Although Tor has a more distributed approach than any
other deployed system, there are several shortcomings with
its architecture. First, Tor does not leverage a user’s trust
relationships for building circuits. In Tor, an attacker could
volunteer a set of proxy nodes under different identities and
then use these nodes to compromise the anonymity of cir-
cuits going through them. Leveraging trust relationships has
been shown to be useful for improving anonymity against
such an attacker in Tor [25, 26]. Second, the trusted direc-
tory authorities are attractive targets for attack; in fact, some
directory authorities were recently found to have been com-
promised [1]. Finally, the requirement for all users to main-
tain global information about all online relays becomes a
scalability bottleneck. McLachlan et al. [33] showed that
under reasonable growth projections, the Tor network could
be spending more bandwidth to maintain this global system
view than for the core task of relaying anonymous commu-
nications. The recent proposal for PIR-Tor [41] might ad-
dress the networking scalability issues, but it does not miti-
gate the basic trust and denial of service issues in a central-
ized approach.
2.2 Incorporating social trust
The importance of leveraging social network trust rela-
tionships to improve the security and privacy properties of
systems has been recognized by a large body of previous
work [10–12, 25, 26, 29, 30, 40, 44, 61, 67, 68]. Recently,
Johnson et al. proposed a method to incorporate trust into
a Tor-like system [25, 26]. However, their approach re-
lies on central servers, and offers only limited scalability.
Nagaraja [44] and Danezis et al. [10] have both proposed
anonymity systems over social networks. However, both
approaches assume an honest-but-curious attack model and
are vulnerable to route capture attacks. In particular, with-
out the security of the reciprocal neighbor policy used in
Pisces, a random walk on the social graph that goes to an
attacker-controlled peer at any step can be controlled by the
attacker for the remainder of the walk.
Designing anonymity systems that are aware of users’
trust relationships is an important step towards defending
against the Sybil attack [15], in which a single entity in
the network (the attacker) can emulate the behavior of mul-
tiple identities and violate security properties of the sys-
tem. Mechanisms like SybilGuard [68], SybilLimit [67],
and SybilInfer [12] aim to leverage social network trust re-
lationships to bound the number of Sybil identities any ma-
licious entity can emulate. These mechanisms are based
on the observation that it is costly for an adversary to form
trust relationships (also known as attack edges) with honest
nodes. When the adversary performs a Sybil attack, he can
create an arbitrary number of edges between Sybil identities
and malicious entities, but cannot create trust relationships
between Sybil identities and honest users. Thus, a Sybil
attack in social networks creates two regions in the social
network graph, the honest region and the Sybil region, with
relatively few edges between them; i.e., the graph features
a small cut. This cut can be used to detect and mitigate the
Sybil attack.
Recent work has challenged the assumption that it is
costly for an attacker to create attack edges with honest
nodes in friendship graphs [5, 7, 24, 66], and proposed the
use of interaction graphs as a more secure realization of
real world social trust. In this work, we will evaluate Pisces
with both friendship graphs as well as topologies based on
interaction graphs. Other mechanisms to infer the strength
of ties between users [18] may also be helpful in creating
resilient social graphs, but these are not the focus of this
paper.
Mohaisen et al. [43] and Viswanath et al. [63] showed
the trade off between the mixing time of social networks,
and the resilience of Sybil defense mechanisms. A larger
community structure leads to poor mixing time, and thus,
weaker resilience to Sybils. In this work, we experiment
with real world datasets that have signiﬁcant community
structure.
2.3 Decentralized and peer(cid:173)to(cid:173)peer approaches
A number of distributed directory services for anony-
mous communication have been designed using a P2P ap-
proach; most have serious problems that prevent them from
being deployed. We point out these issues brieﬂy here. First
we note that the well-known Crowds system, which was the
ﬁrst P2P anonymity system, uses a centralized directory ser-
vice [48] and thus is not fully P2P. The Tarzan system pro-
poses a gossip-based distributed directory service that does
not scale well beyond 10,000 nodes [17].
MorphMix was the ﬁrst scalable P2P anonymity sys-
tem [49]. It uses random walks on unstructured topologies
for circuit construction and employs a witness scheme that
aims to detect routing table manipulation. The detection
mechanism can be bypassed by an attacker who is careful
in his choices of fake routing tables [57]. With or without
the evasion technique, the attacker can manipulate routing
tables to capture a substantial fraction of circuits. Despite
over a decade of research, decentralized mechanisms to se-
cure random walks in unstructured topologies have been an
open problem. Pisces overcomes this problem by having
peers sign their routing tables for a given time slot and en-
suring that nodes observe enough copies to detect cheaters
quickly, before many route captures can occur, and with cer-
tainty.
Recently, several protocols have been proposed using
P2P systems built on distributed hash tables (DHTs), in-
cluding AP3 [36], Salsa [45], NISAN [46], and Torsk [33].
These four protocols are vulnerable to information leak at-
tacks [37,64], as the lookup process and circuit construction
techniques expose information about the requesting peer’s
circuits. These attacks can lead to users being partially or
completely deanonymized. ShadowWalker, which is also
based on a structured topology, employs random walks on
the DHT topology for circuit construction [38]. The rout-
ing tables are checked and signed by shadow nodes such
that both a node in the random walk and all of its shad-
ows would need to be attackers for a route capture attack to
succeed. The protocol was found to be partially broken, but
then also ﬁxed, by Schuchard et al. [51]. Despite it not being
seriously vulnerable to attacks as found against other proto-
cols, ShadowWalker remains vulnerable to a small but non-
trivial fraction of route captures (roughly the same as Tor
for reasonable parameters). ShadowWalker is designed to
perform random walks on structured topologies like DHTs,
and its techniques cannot be adapted to unstructured social
network topologies. The new contribution in Pisces pertains
to securing the random walk process in unstructured social
network topologies. As we show in Section 4, Pisces’s use
of social trust means that it can outperform ShadowWalker
(and Tor) for route captures when the attacker has a bounded
number of attack edges in the social network. For securing
random walks in unstructured topologies, Pisces leverages
new techniques such as reciprocal neighborhood policy and
Metropolis-Hastings random walks, and proposes a novel
protocol to enforce these policies in a fully decentralized
fashion.
Other than these approaches, Mittal et al. [39] brieﬂy
considered the use of the reciprocal neighbor policy for
anonymous communication. However, their protocol is
only applicable to constant degree topologies, and utilizes
central points of trust. Moreover, their evaluation was very
preliminary.