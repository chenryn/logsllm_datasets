量，通过BurpSuite代理进行传输。详细的步骤如下：
1. 启动FireFox浏览器，点击【工具】菜单，点击【选项】。
2. 在新打开的about:preferences#advanced窗口中，依次点击【高级】-【网络】，我们将
会看到FireFox连接网络的设置选项。
第二章BurpSuite代理和浏览器设置
9
3. 点击【设置】，在弹出的【连接设置】对话框中，找到“http代理”，填写127.0.0.1，端口
填写8080，最后点击【确认】保存参数设置，完成FireFox的代理配置。
当然，FireFox浏览器中，可以添加FireFox的扩展组件，对代理服务器进行管理。例如
FireXProxy、ProxySwither都是很好用的组件，感兴趣的读者可以自己下载试用一下。
GoogleChrome设置
GoogleChrome使用BurpSuite作为代理服务器的配置步骤如下：
1. 启动GoogleChrome浏览器，在地址栏输入chrome://settings/，回车后即显示Google
Chrome浏览器的配置界面
第二章BurpSuite代理和浏览器设置
10
2. 点击底部的【显示高级设置】，将显示GoogleChrome浏览器的高级设置。
第二章BurpSuite代理和浏览器设置
11
3. 当然，你也可以直接在搜索框中输入“代理”，回车后将自动定位到代理服务器设置功能。
第二章BurpSuite代理和浏览器设置
12
4. 点击【更改代理服务器设置】，windows系统下将会弹出IE浏览器的代理设置，此时，按
照IE浏览器的设置步骤，完成代理服务器的配置即可。
除了上述的三种常用的浏览器外，还有Safari浏览器也有不少的用户在使用，其代理配置请点
击阅读进行查看。
第二章BurpSuite代理和浏览器设置
13
第三章如何使用BurpSuite代理
BurpProxy是BurpSuite以用户驱动测试流程功能的核心，通过代理模式，可以让我们拦截、
查看、修改所有在客户端和服务端之间传输的数据。
本章主要讲述以下内容：
BurpProxy基本使用
数据拦截与控制
可选项配置Options
历史记录History
BurpProxy基本使用
通过上一章的学习，我们对BurpSuite代理模式和浏览器代理设置有了基本的了解。Burp
Proxy的使用是一个循序渐进的过程，刚开始使用时，可能并不能很快就获取你所期望的结
果，慢慢地当你熟悉了它的功能和使用方法，你就可以用它很好地对一个产品系统做安全能
力评估。一般使用BurpProxy时，大体涉及环节如下：
1. 首先，确认JRE已经安装好，BurpSuite可以启动并正常运行，且已经完成浏览器的代理
服务器配置。
2. 打开Proxy功能中的Intercept选项卡，确认拦截功能为“Interceptionison”状态，如果显示
为“Interceptisoff”则点击它，打开拦截功能。
3. 打开浏览器，输入你需要访问的URL（以http://baike.baidu.com/为例）并回车，这时你
将会看到数据流量经过BurpProxy并暂停，直到你点击【Forward】，才会继续传输下
去。如果你点击了【Drop】，则这次通过的数据将会被丢失，不再继续处理。
4. 当我们点击【Forward】之后，我们将看到这次请求返回的所有数据。
第三章如何使用BurpSuite代理
14
5. 当BurpSuite拦截的客户端和服务器交互之后，我们可以在BurpSuite的消息分析选项卡
中查看这次请求的实体内容、消息头、请求参数等信息。消息分析选项视图主要包括以
下四项：
6. Raw这是视图主要显示web请求的raw格式，包含请求地址、http协议版本、主机头、浏
览器信息、Accept可接受的内容类型、字符集、编码方式、cookie等。你可以通过手工
修改这些信息，对服务器端进行渗透测试。
7. params这个视图主要显示客户端请求的参数信息、包括GET或者POST请求的参数、
Cookie参数。渗透人员可以通过修改这些请求参数来完成对服务器端的渗透测试。
8. headers这个视图显示的信息和Raw的信息类似，只不过在这个视图中，展示得更直观、
友好。
9. Hex这个视图显示Raw的二进制内容，你可以通过hex编辑器对请求的内容进行修改。
默认情况下，BurpProxy只拦截请求的消息，普通文件请求如css、js、图片是不会被拦截
的，你可以修改默认的拦截选项来拦截这些静态文件，当然，你也可以通过修改拦截的作用
域、参数或者服务器端返回的关键字来控制BurpProxy的消息拦截，这些在后面的章节中我
第三章如何使用BurpSuite代理
15
们会进一步的学习。所有流经BurpProxy的消息，都会在httphistory记录下来，我们可以通
过历史选项卡，查看传输的数据内容，对交互的数据进行测试和验证。同时，对于拦截到的
消息和历史消息，都可以通过右击弹出菜单，发送到Burp的其他组件，如Spider、Scanner、
Repeater、Intruder、Sequencer、Decoder、Comparer、Extender，进行进一步的测试。如
下图所示：
数据拦截与控制
BurpProxy的拦截功能主要由Intercept选项卡中的Forward、Drop、Interceptionison/off、
Action、Comment以及Highlight构成，它们的功能分别是：Forward的功能是当你查看过消
息或者重新编辑过消息之后，点击此按钮，将发送消息至服务器端。Drop的功能是你想丢失
当前拦截的消息，不再forward到服务器端。Interceptionison表示拦截功能打开，拦截所有
通过BurpProxy的请求数据；Interceptionisoff表示拦截功能关闭，不再拦截通过Burp
Proxy的所有请求数据。Action的功能是除了将当前请求的消息传递到Spider、Scanner、
Repeater、Intruder、Sequencer、Decoder、Comparer组件外，还可以做一些请求消息的修
改，如改变GET或者POST请求方式、改变请求body的编码，同时也可以改变请求消息的拦
截设置，如不再拦截此主机的消息、不再拦截此IP地址的消息、不再拦截此种文件类型的消
息、不再拦截此目录的消息，也可以指定针对此消息拦截它的服务器端返回消息。
第三章如何使用BurpSuite代理
16
Comment的功能是指对拦截的消息添加备注，在一次渗透测试中，你通常会遇到一连串的请
求消息，为了便于区分，在某个关键的请求消息上，你可以添加备注信息。
Highlight的功能与Comment功能有点类似，即对当前拦截的消息设置高亮，以便于其他的请
求消息相区分。
除了Intercept中可以对通过Proxy的消息进行控制外，在可选项设置选项卡Options中也有很多
的功能设置也可以对流经的消息进行控制和处理。
第三章如何使用BurpSuite代理
17
可选项配置Options
当我们打开可选项设置选项卡Options，从界面显示来看，主要包括以下几大板块（涉及https
的功能不包含在本章内容里，后面会一章专门叙述）：
客户端请求消息拦截
服务器端返回消息拦截
服务器返回消息修改
正则表达式配置
其他配置项
客户端请求消息拦截
客户端请求消息拦截是指拦截客户端发送到服务器端消息的相关配置选项，其界面如下：
主要包含拦截规则配置、错误消息自动修复、自动更新Content-Length消息头三个部分。
1. 如果interceptrequestbasedonthefollowrules的checkbox被选中，则拦截所有符合勾
选按钮下方列表中的请求规则的消息都将被拦截，拦截时，对规则的过滤是自上而下进
行的。当然，我们可以根据自己的需求，通过【Up】和【Down】按钮，调节规则所在位
置和排序。同时，我们可以点击【Add】添加一条规则，也可以选中一条规则，通过点击
【Edit】进行编辑、点击【Remove】进行删除。当我们点击【Add】按钮时，会弹出规
则添加的输入对话框，如下图：
第三章如何使用BurpSuite代理
18
拦截规则添加时，共包含4
个输入项。Booleanopertor表示当前的规则与其他规则是与的方式（And）还是或的方式
（Or）共存；Matchtype表示匹配类型，此处匹配类型可以基于域名、IP地址、协议、
请求方法、URL、文件类型、参数,cookies,头部或者内容,状态码,MIME类型,HTML页
面的title等。Matchrelationship表示此条规则是匹配还是不匹配Matchcondition输入的关
键字。当我们输入这些信息，点击【OK】按钮，则规则即被保存。
2. 如果Automaticallyfixmissing的checkbox被选中，则表示在一次消息传输中，BurpSuite
会自动修复丢失或多余的新行。比如说，一条被修改过的请求消息，如果丢失了头部结
束的空行，BurpSuite会自动添加上；如果一次请求的消息体中，URl编码参数中包含任
何新的换行，BurpSuite将会移除。此项功能在手工修改请求消息时，为了防止错误，有
很好的保护效果。
3. 如果AutomaticallyupdateContent-Length的checkbox被选中，则当请求的消息被修改
后，Content-Length消息头部也会自动被修改，替换为与之相对应的值。
服务器端返回消息拦截
服务器端返回消息拦截顾名思义是指拦截服务器端返回的消息的相关配置项，其界面如下：
它的功能主要包含interceptresponsebasedonthefollowrules和Automaticallyupdate
第三章如何使用BurpSuite代理
19
Content-Lengthheaderwhentheresponseedited两个选项，其功能分别与客户端请求消息
拦截中的interceptrequestbasedonthefollowrules、AutomaticallyupdateContent-Length
headerwhentherequestedited相对应，就不在赘述，请参上一节的内容。
服务器返回消息修改
服务器返回消息修改是指自动修改服务器端返回消息的相关设置项。其界面如下：
自上而下，每
一个选择项分别对应的功能是
显示form表单中隐藏字段
高亮显示form表单中隐藏字段
使form表单中的disable字段生效，变成可输入域
移除输入域长度限制
移动JavaScript验证
移动所有的JavaScript
移除标签
转换https超链接为http链接
移除所有cookie中的安全标志
通过服务器返回消息修改可选择项的设置，可以方便渗透测试人员在安全评估过程中突破原
有的数据限制，更好、更快地检测服务器端的安全性。
正则表达式配置
第三章如何使用BurpSuite代理
20
此项配置主要用来自动替换请求消息和服务器端返回消息中的某些值和文本，它与前文的规
则的不同之处还在于支持正则表达式语言。
当点击【Add】按钮时，在弹出的匹配或替换规则输入对话框中我们可以看到，它可以对请求
和返回消息的消息头，消息体、请求参数名、请求参数值、请求的第一行进行匹配和替换。
例如，当我们要替换所有返回消息中的邮箱地址为PI:EMAIL时，可以参考下图
的设置填写输入项并保存验证。
其他配置项
第三章如何使用BurpSuite代理
21
其他配置项主要是杂项设置。其界面如下：
自上而下依次的功能是
指定使用HTTP/1.0协议与服务器进行通信这项设置用于强制客户端采用HTTP/1.0协议与
服务器进行通信，一般客户端使用的HTTP协议版本依赖于客户端浏览器，但某些服务器
或者应用，必须使用HTTP/1.0协议，此时可勾选此项
指定使用HTTP/1.0协议反馈消息给客户端目前所有的浏览器均支持HTTP/1.0协议和
HTTP/1.1协议，强制指定HTTP/1.0协议主要用于显示浏览器的某些方面的特征，比如，
阻止HTTP管道攻击。
设置返回消息头中的“Connection：close”可用于某些情况下的阻止HTTP管道攻击。
请求消息头中脱掉Proxy-*浏览器请求消息中，通常会携带代理服务器的相关信息，此选
项主要用于清除消息头中的代理服务器信息。
解压请求消息中的压缩文件某些应用在与服务器端进行交互时，会压缩消息体，勾选此
选项，则BurpSuite会自动解压消息体
解压返回消息中的压缩文件大多数浏览器支持压缩的消息体，勾选此选项，则Burp