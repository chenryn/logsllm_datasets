1081-6011/04 $ 20.00 © 2004 IEEE 
3
• Backward Compatibility. Legacy clients and servers
do not break SIFF, and legacy clients can communicate
with updated servers and vice versa. However, both
clients and servers must be updated to take advantage
of the system’s beneﬁts.
To construct a system with these properties, we begin
with the following assumptions, some of which we use for
simplicity of presentation and will relax or remove in Sec-
tion 5.2.
We ﬁrst assume that a victim has the ability to determine
that it is under attack, and can differentiate between legiti-
mate client ﬂows and malicious or misbehaving ﬂows. We
do not require that this differentiation be on a per-packet ba-
sis, or that it be lightweight; only that it exist. 1 However,
the details of a trafﬁc differentiation algorithm are applica-
tion speciﬁc and orthogonal to the focus of this paper, which
simply assumes their existence.
Secondly, we assume that clients, servers and routers
are redesigned and conform to a modiﬁed IP network layer
(non-updated clients and servers will still be able to com-
municate with updated clients and servers, but they will not
realize the beneﬁts of the new system). Speciﬁcally:
• Marking space in the IP header. We assume that the
IP header has sufﬁcient space to accommodate the in-
formation that routers mark in the packet.
• Routers mark every packet. We assume that SIFF
routers are capable of executing minor manipulations
of the marking ﬁeld of every packet that they forward.
These manipulations can be done in parallel with a
routing table lookup. This assumption is minor, since
Internet routers must already decrement the TTL and
recalculate the IP Header Checksum of every packet
they forward.
• Short-term Route Stability. We assume that Inter-
net routes are stable on the order of the time of a
client/server transaction. Violation of this assumption
will not break our system outright, rather, the system’s
performance is likely to decrease with increasing route
instability below the time required for a client/server
transaction. Network routes are more likely to ﬂuc-
tuate under DDoS attack, precisely when our system
requires their stability. However, SIFF will also mit-
igate the effect of DDoS on routers (as packet ﬂoods
are dropped early in the network), and is, in this way,
self-reinforcing. Unfortunately, it is difﬁcult to model
the behavior of a system as complex as the Internet,
especially under DDoS attack, so veriﬁcation of this
assumption is an open problem.
1Because our mechanism limits source address spooﬁng, it can make
malicious host identiﬁcation easier.
Our approach divides all Internet trafﬁc into two types,
privileged and unprivileged. Privileged packets are always
given priority over non-privileged ones when contending
for bandwidth. To establish a privileged channel, a client
must obtain a capability through a special handshake over
an unprivileged channel. Privileged channels consist of spe-
cially marked packets embedded with the capability ob-
tained through the unprivileged handshake.
The capabilities in SIFF are based on information in-
serted into all packets by the network en route to their desti-
nations. This mechanism is similar to that of P i, proposed
by us in an earlier paper [47], except that in SIFF, the com-
putation process for markings is slightly more elaborate, as
packet markings change over time (as opposed to remaining
constant in P i), and are used by both routers and endhosts,
rather than just by endhosts. The capability is generated
piecemeal by each router and marked in a ﬁeld of the packet
along the path to the packet’s destination. The pieces at
each router are generated entirely from packet header data
and local topology information.
SIFF provides the above beneﬁts to the receiver of a priv-
ileged channel. When forwarding a privileged packet, a
router simply checks part of the embedded capability to see
if it matches the markings that the router would have added
to an unprivileged packet—if they match, then the packet is
forwarded; if they do not, then the packet is dropped. The
capabilities themselves are based on the packet markings,
which change independently at each router with a certain
frequency. Routers maintain a window of valid markings
and signal a change of marking to a packet recipient by re-
placing old markings in the embedded capability with new
ones. Because the packet recipient, rather than the packet’s
sender, is receiving the capability updates, continued privi-
leged communication requires that the receiver periodically
update the sender’s capability. Thus, the receiver of a packet
ﬂow has the option to halt that ﬂow by simply refusing to
forward capability updates. Attackers can still ﬂood using
unprivileged packets, but they will no longer disrupt ex-
isting privileged communications. Furthermore, during an
unprivileged ﬂooding attack, a legitimate client and server
need only pass two packets (a total of one round trip) be-
tween themselves to establish a privileged channel and com-
municate, undisturbed, over privileged packets.
3 Design
The SIFF system provides a server with the ability to
establish privileged communication with whatever clients it
chooses by providing those clients with a capability token. 2
2For ease of presentation, we refer to a ﬂow’s source as the client and a
ﬂow’s destination as the server. This does not mean that privileged chan-
nels can only be established from clients to servers.
Proceedings of the 2004 IEEE Symposium on Security and Privacy (S&P’04)  
1081-6011/04 $ 20.00 © 2004 IEEE 
4
Privileged packets carry capabilities that are veriﬁed piece-
meal (and statelessly) by the routers in the network, and are
dropped when the veriﬁcation fails. Routers implementing
SIFF are programmed to give preferential treatment to priv-
ileged packets, so that privileged packets are never dropped
in favor of unprivileged ones (legacy packets not conform-
ing to our scheme are treated as unprivileged packets). Priv-
ileged channel capabilities are time limited and require up-
dating by the server to remain valid. Because server coop-
eration is required for capability updates, a server can halt
the packets of a privileged channel by simply quenching its
capability update messages.
At a high level, the system works as follows: clients
and servers participate in a handshake (similar to the TCP
handshake, which can be carried on top of this handshake)
using a speciﬁc type of unprivileged packet known as an
EXPLORER (or EXP) packet. Routers insert path speciﬁc
information into EXP packets, who’s aggregate among all
the routers in the path is used as a capability token for a
privileged channel between the client and the server. Af-
ter the handshake, clients and servers communicate us-
ing privileged packets called DATA (or DTA) packets, into
which they insert the capabilities carried in the EXP pack-
ets. When routers forward a DTA packet, they ﬁrst check
to see if part of its capability equals that information which
would have been inserted into the packet had it been an EXP
packet. If the markings match, then the packet is forwarded.
If not, then the packet is immediately dropped.
Our discussion assumes a new format for the IP header.
The following ﬁelds are assumed to be present:
• Flags ﬁeld (3-bits). This ﬁeld contains the follow-
ing 1-bit ﬂags:
the signalling ﬂag (SF), used to in-
dicate that the packet is a non-legacy (either EXP or
DTA) packet; the packet type ﬂag (PT), used to indi-
cate that the packet is either a DTA (set) or EXP (unset)
packet; and the capability update (CU) ﬂag, set to indi-
cate that the optional capability reply ﬁeld is present in
the header.
• Capability ﬁeld. This ﬁeld is used by routers to add
their marks to the packet en route to its destination.
• (Optional) Capability reply ﬁeld. This ﬁeld is used
by packet recipients to signal to the packet sender a
new (or updated) capability, and is only present when
the capability update ﬂag is set.
We do not assume an exact length for the capability or ca-
pability reply ﬁelds, as their lengths will depend upon other
parameters (such as the bits marked per router and maxi-
mum path length). We assume the presence of a source and
destination address in the header, but not their exact length.
No other ﬁelds of the packet header are used in our scheme.
Proceedings of the 2004 IEEE Symposium on Security and Privacy (S&P’04)  
1081-6011/04 $ 20.00 © 2004 IEEE 
5
In the following subsections, we describe in detail the
handshake protocol, as well as the potential issues in its im-
plementation.
3.1 Handshake Protocol
Any client wishing to contact a server over a privileged
channel must ﬁrst complete a handshake protocol to obtain a
capability to insert into its privileged packets, and vice versa
for server communication with the client. A single hand-
shake is sufﬁcient to provide both sides of a communication
with their capabilities. Furthermore, handshake packets can
carry upper layer protocol data. The protocol is shown in
Figure 1.
Figure 1. Handshake establishing a privileged
channel. A client sends an EXPLORER packet
to the server, which gets marked with mark-
ing α. The server responds with its own EX-
PLORER packet, with α enclosed in the ca-
pability reply ﬁeld. The client sends its ﬁrst
DATA packet with α in its capability ﬁeld and
with β, from the server’s EXPLORER packet,
enclosed in the capability reply ﬁeld.
The initiator of the handshake (the client) ﬁrst sends out
an EXP packet with its Capability ﬁeld initialized to
0. A packet is marked as an EXP packet by setting the
signalling (SF) ﬂag and leaving the packet type (PT) ﬂag
unset. All routers along the path left shift z bits into the
Capability ﬁeld the EXP packet (see Section 3.2 for a
description of how these markings are computed). The ex-
ception to this rule is that the ﬁrst router in the path that sees
a marking ﬁeld of all 0 bits inserts a 1 bit before its marking
(so that the actual capability in the ﬁeld will consist of all
bits up to, but not including, the most signiﬁcant 1 bit.). Re-
call from Section 2 that we assume that the marking ﬁeld is
large enough to accommodate the markings from all of the
routers in the path plus the 1 bit inserted by the ﬁrst router.
EXP packet marking is shown in Figure 2(a).
(a) Marking scheme for EXPLORER packets. Routers push their markings into the least signiﬁcant
bits of the capability ﬁeld. Packets with a capability ﬁeld of all zeros get marked with an additional 1
bit.
(b) Authentication scheme for DATA packets. Routers check the marking in the least signiﬁcant bits
of the capability ﬁeld, and rotate it into the most signiﬁcant bits, if it is equal to what the marking
would be for an EXPLORER packet.
(c) Windowed authentication and marking for DATA packets. Routers check that the marking equals
one of the valid markings in its window and always rotate the newest marking in the window into the
capability ﬁeld.
Figure 2. Marking and authentication schemes for EXPLORER and DATA packets.
When the EXP packet arrives at the server, the server cre-
ates a response packet. The response packet is also an EXP
packet, with the Capability ﬁeld initialized to zero, but
with the capability update (CU) ﬂag set, and the Capabil-
ity Reply ﬁeld initialized to the contents of the Capa-
bility ﬁeld of the EXP packet from the client. When the
server’s EXP packet arrives at the client, the client exam-
ines the Capability Reply ﬁeld, takes all the bits up
to— but not including— the most signiﬁcant 1 bit in the
packet, splits them into groups of z bits and reverses the or-
der of the groups to obtain its capability. This capability is
inserted into the Capability ﬁeld of all subsequent priv-
ileged packets that the client sends. To complete the hand-
shake, the client must send the server its capability, marked
by the routers in the server’s EXP packet’s Capability
ﬁeld. The client creates a DTA packet, with the CU ﬂag set
and the Capability ﬁeld from the server’s EXP packet
in the Capability Reply ﬁeld; just as the server did
for the client.
The router behavior for marking and forwarding DTA
packets is different from that used for EXP packets. When
a router receives a DTA packet, it calculates a marking
as though the packet were an EXP packet, but then only
veriﬁes that the marking it has calculated is equal to the
marking in the least signiﬁcant bits of the Capability
ﬁeld. If the marking is not equal, then the packet is imme-
diately dropped.
If the marking is equal, then the router
right shifts that marking into the most signiﬁcant bits of
Proceedings of the 2004 IEEE Symposium on Security and Privacy (S&P’04)  
1081-6011/04 $ 20.00 © 2004 IEEE 
6
the Capability ﬁeld. This causes the markings for the
next hop router to occupy the least signiﬁcant bits. DTA
packet marking is shown in Figure 2(b). A DTA packet
will only reach its destination if all the routers along its
path match their markings to the least signiﬁcant bits of the
packet’s Capability ﬁeld. Once the client’s privileged
DTA packet arrives at the server, the server can compute its
capability in the same way that the client did and the hand-
shake is complete, as both hosts can now communicate over
privileged DTA packets.
3.2 Router Marking Calculation
As described in the previous section, each router must
calculate a marking for every packet that it forwards; it left-
shifts the marking into the packet in the case of an EXP
packet, or veriﬁes and right-shifts the marking in the case of
a DTA packet. For a particular packet, the marking is cal-
culated as the last z bits of the output of a keyed hash func-
tion with the following parameters as input: the IP address
of the interface at which the packet arrived at the current
router, the last-hop router’s outgoing interface IP address 3,
and the source and destination IP addresses of the packet
being forwarded.
The use of the source IP address as a hash input has the
effect of tying a capability to a particular host and elimi-
nates the effect of source address spooﬁng. If the attacker
is on a shared medium network with a legitimate client and
observes a capability transmitted to that client, the attacker
is limited to spooﬁng the client’s IP address when ﬂooding
using that client’s capability. The server will revoke the ca-
pability (using a mechanism we introduce in Section 3.2.1)
and all packets using the client’s capability will be dropped
from the network. Although this results in a DoS on the
client, the attacker can presumably accomplish the same
goal by simply ignoring the transmission control mecha-
nism of the shared medium it occupies.
The use of the destination IP address as a hash input pre-
vents attackers from generating “marking maps” by sending
EXP packets from one attacker to another and observing the
marks that result. Any marks learned in this fashion will be
invalid when used to ﬂood DTA packets to a different ma-
chine. 4
For SIFF to effectively stop forged privileged packet
ﬂoods, a router must be able to calculate its marking faster
than it can perform a route lookup. Otherwise, attackers
could simply ﬂood a router with illegitimate DTA packets,
3The last-hop router’s IP address is used to improve the entropy of the
marking [47].
4A more serious vulnerability for a server would be to have a colluding
or unwitting host on its network respond to EXP packets, thus providing an
attacker with a capability that can be used to ﬂood privileged DTA packets
to the server’s network. However, this problem can be avoided by careful
administration of the victim’s network.
causing the router to either overload its route-lookup capa-
bility or ﬁll its buffer with DTA packets, and start drop-
ping potentially legitimate DTA packets indiscriminately.
To meet this performance goal, the router must be able to