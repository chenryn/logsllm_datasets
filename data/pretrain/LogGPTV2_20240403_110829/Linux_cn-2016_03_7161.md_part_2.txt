*sed 匹配字符串*
#### uniq 命令
uniq 命令允许我们返回或者删除文件中重复的行，默认写到标准输出。我们必须注意到，除非两个重复的行相邻，否则uniq 命令不会删除他们。因此，uniq 经常和一个前置的 sort 命令（一种用来对文本行进行排序的算法）搭配使用。默认情况下，sort 使用第一个字段（用空格分隔）作为关键字段。要指定一个不同的关键字段，我们需要使用 -k 选项。
**样例**
du –sch /path/to/directory/\* 命令将会以人类可读的格式返回在指定目录下每一个子文件夹和文件的磁盘空间使用情况（也会显示每个目录总体的情况），而且不是按照大小输出，而是按照子文件夹和文件的名称。我们可以使用下面的命令来让它通过大小排序。
```
# du -sch /var/* | sort -h
```
![sort command](/data/attachment/album/201603/28/055319qckggebd272dhhe2.jpg)
*sort 命令样例*
你可以通过使用下面的命令告诉 uniq 比较每一行的前6个字符（-w 6）（这里是指定的日期）来统计日志事件的个数，而且在每一行的开头输出出现的次数（-c）。
```
# cat /var/log/mail.log | uniq -c -w 6
```
![Count Numbers in File](/data/attachment/album/201603/28/055319ex1ex1hxjmnywnbm.jpg)
*文件中的统计数字*
最后，你可以组合使用 sort 和 uniq 命令（通常如此）。看看下面文件中捐助者、捐助日期和金额的列表。假设我们想知道有多少个捐助者。我们可以使用下面的命令来分隔第一字段（字段由冒号分隔），按名称排序并且删除重复的行。
```
# cat sortuniq.txt | cut -d: -f1 | sort | uniq
```
![Find Unique Records in File](/data/attachment/album/201603/28/055320quba70a7m8vbe4ym.jpg)
*寻找文件中不重复的记录*
* 也可阅读: [13个“cat”命令样例](/article-2336-1.html)
#### grep 命令
grep 在文件（或命令输出）中搜索指定正则表达式，并且在标准输出中输出匹配的行。
**样例**
显示文件 /etc/passwd 中用户 gacanepa 的信息，忽略大小写。
```
# grep -i gacanepa /etc/passwd
```
![grep Command](/data/attachment/album/201603/28/055320eepm9mp9mm4qwe9e.jpg)
*grep 命令样例*
显示 /etc 文件夹下所有 rc 开头并跟随任意数字的内容。
```
# ls -l /etc | grep rc[0-9]
```
![List Content Using grep](/data/attachment/album/201603/28/055321o4y33j3zzk3k4jpk.jpg)
*使用 grep 列出内容*
* 也可阅读: [12个“grep”命令样例](/article-2250-1.html)
#### tr 命令使用技巧
tr 命令可以用来从标准输入中转换（改变）或者删除字符，并将结果写入到标准输出中。
**样例**
把 sortuniq.txt 文件中所有的小写改为大写。
```
# cat sortuniq.txt | tr [:lower:] [:upper:]
```
![Sort Strings in File](/data/attachment/album/201603/28/055321tjh2huac2yxxhx29.jpg)
*排序文件中的字符串*
压缩`ls –l`输出中的分隔符为一个空格。
```
# ls -l | tr -s ' '
```
![Squeeze Delimiter](/data/attachment/album/201603/28/055321hz2w9e42egucz2iu.jpg)
*压缩分隔符*
#### cut 命令使用方法
cut 命令可以基于字节（-b选项）、字符（-c）或者字段（-f）提取部分输入（从标准输入或者文件中）并且将结果输出到标准输出。在最后一种情况下（基于字段），默认的字段分隔符是一个制表符，但可以由 -d 选项来指定不同的分隔符。
**样例**
从 /etc/passwd 中提取用户账户和他们被分配的默认 shell（-d 选项允许我们指定分界符，-f 选项指定那些字段将被提取）。
```
# cat /etc/passwd | cut -d: -f1,7
```
![Extract User Accounts](/data/attachment/album/201603/28/055322pgyrzp6irfm299fj.jpg)
*提取用户账户*
将以上命令结合起来，我们将使用 last 命令的输出中第一和第三个非空文件创建一个文本流。我们将使用 grep 作为第一过滤器来检查用户 gacanepa 的会话，然后将分隔符压缩至一个空格（tr -s ' ')。下一步，我们将使用 cut 来提取第一和第三个字段，最后使用第二个字段（本样例中，指的是IP地址）来排序之后，再用 uniq 去重。
```
# last | grep gacanepa | tr -s ‘ ‘ | cut -d’ ‘ -f1,3 | sort -k2 | uniq
```
![last command](/data/attachment/album/201603/28/055322bio7q6dxhoioeo6q.png)
*last 命令样例*
上面的命令显示了如何将多个命令和管道结合起来，以便根据我们的要求得到过滤后的数据。你也可以逐步地使用它以帮助你理解输出是如何从一个命令传输到下一个命令的（顺便说一句，这是一个非常好的学习经验！）
### 总结
尽管这个例子（以及在当前教程中的其他实例）第一眼看上去可能不是非常有用，但是他们是体验在 Linux 命令行中创建、编辑和操作文件的一个非常好的开始。请随时留下你的问题和意见——不胜感激！
#### 参考链接
* [关于 LFCS](https://training.linuxfoundation.org/certification/LFCS)
* [为什么需要 Linux 基金会认证?](https://training.linuxfoundation.org/certification/why-certify-with-us)
* [注册 LFCS 考试](https://identity.linuxfoundation.org/user?destination=pid/1)
---
via: 
作者：[Gabriel Cánepa](http://www.tecmint.com/author/gacanepa/) 译者：[Xuanwo](https://github.com/Xuanwo) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创翻译，[Linux中国](https://linux.cn/) 荣誉推出