# Checklist
  * I have verified that the issue exists against the `master` branch of Celery.
  * This has already been asked to the discussion group first.
  * I have read the relevant section in the  
contribution guide  
on reporting bugs.
  * I have checked the issues list  
for similar or identical bug reports.
  * I have checked the pull requests list  
for existing proposed fixes.
  * I have checked the commit log  
to find out if the bug was already fixed in the master branch.
  * I have included all related issues and possible duplicate issues  
in this issue (If there are none, check this box anyway).
## Mandatory Debugging Information
  * I have included the output of `celery -A proj report` in the issue.  
(if you are not able to do this, then at least specify the Celery  
version affected).
  * I have verified that the issue exists against the `master` branch of Celery.
  * I have included the contents of `pip freeze` in the issue.
  * I have included all the versions of all the external dependencies required  
to reproduce this bug.
## Optional Debugging Information
  * I have tried reproducing the issue on more than one Python version  
and/or implementation.
  * I have tried reproducing the issue on more than one message broker and/or  
result backend.
  * I have tried reproducing the issue on more than one version of the message  
broker and/or result backend.
  * I have tried reproducing the issue on more than one operating system.
  * I have tried reproducing the issue on more than one workers pool.
  * I have tried reproducing the issue with autoscaling, retries,  
ETA/Countdown & rate limits disabled.
  * I have tried reproducing the issue after downgrading  
and/or upgrading Celery and its dependencies.
## Related Issues and Possible Duplicates
#### Related Issues
  * None
#### Possible Duplicates
  * None
## Environment & Settings
**Celery version** : 5.1.2
**`celery report` Output:**
PI:EMAIL v5.1.2 (sun-harmonics)
macOS-10.15.7-x86_64-i386-64bit 2021-07-20 16:30:46
[config]  
.> app: tasks:0x10ccc9f40  
.> transport: redis://localhost:6379//  
.> results: disabled://  
.> concurrency: 1 (prefork)  
.> task events: ON
[queues]  
.> celery exchange=celery(direct) key=celery
[tasks]  
. tasks.add
[2021-07-20 16:30:46,948: INFO/MainProcess] Connected to
redis://localhost:6379//  
[2021-07-20 16:30:46,957: INFO/MainProcess] mingle: searching for neighbors  
[2021-07-20 16:30:47,994: INFO/MainProcess] mingle: all alone  
[2021-07-20 16:30:48,014: INFO/MainProcess] PI:EMAIL
ready.
# Steps to Reproduce
## Required Dependencies
  * **Minimal Python Version** : 3.8.5
  * **Minimal Celery Version** : 5.1.2
  * **Minimal Kombu Version** : 5.1.0
  * **Minimal Broker Version** : Redis 6.2.4
  * **Minimal Result Backend Version** : N/A or Unknown
  * **Minimal OS and/or Kernel Version** : macOS-10.15.7
  * **Minimal Broker Client Version** : N/A or Unknown
  * **Minimal Result Backend Client Version** : N/A or Unknown
### Python Packages
**`pip freeze` Output:**
### Other Dependencies
N/A
## Minimally Reproducible Test Case
    from celery import Celery
    app = Celery('tasks',
        broker='redis://localhost',
        broker_transport_options = {'visibility_timeout': 0},
        task_acks_late=True,
        task_acks_on_failure_or_timeout=False,
    )
    print(app.conf['task_acks_on_failure_or_timeout'])
# Expected Behavior
expected 'False' output.
# Actual Behavior
but 'True' output. I can not set task_acks_on_failure_or_timeout to False
(default:True)
I think the reason is __autoset(), 'if value' will filter out all False value.  
https://github.com/celery/celery/blob/master/celery/app/base.py#L325
        def __autoset(self, key, value):
            if value:
                self._preconf[key] = value
                self._preconf_set_by_auto.add(key)