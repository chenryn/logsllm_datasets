#### 21、重新发现PostgreSQL之美 - 21 探访宇航员的食物    
场景:  
物联网, 金融, 社交, 电商, 电力, 游戏等行业. 大量传感器、业务日志、FEED等数据.  
因为数据分析、或行业合规, 要求日志类流水类数据需要永久保存  
最近的数据需要高效点查, 高效更新, 高速写入  
历史的数据需要大范围快速分析计算, 高压缩比  
挑战:   
1、历史数据量大, 存储耗费巨大  
2、无法同时解决高并发写入、更新、点查同时快速分析和高压缩比的问题  
PG解决方案:  
- WO写优化、RO读优化  
- RO(读优化)存储高压缩比  
- 向量化计算性能提升一个数量级  
- 分区支持行、列混合存储  
- 通过parser analyze hook,扩展向量类型,扩展向量算子,基于代价的自动化JIT选择,在同一个实例中支持oltp, olap两种模型.  
视频回放: https://www.bilibili.com/video/BV1Ly4y1u7AM/    
#### 22、重新发现PostgreSQL之美 - 22 黄帝内经 
场景:   
电商、社交、SAAS软件行业.   
用户表、租户表、用户行为表.   
挑战:  
按企业、appid等hash分区可能出现倾斜, 例如某些APPID的数据量可能非常大, 热数据可能在同一个分区, saas的某些大企业可能被分到同一分区, 使得数据倾斜.   
PG 解决方案:  
非对称分区方法.   
视频回放: https://www.bilibili.com/video/BV13B4y1M7bz/  
#### 23、重新发现PostgreSQL之美 - 23 彭祖的长寿秘诀
场景:  
- 论坛、短视频、社交、电商等推荐业务.   
- 在推荐的过程中要过滤已读列表.   
挑战:  
- 已读列表巨大, 普通数据库没有多值列类型, 每个已读ID需要存储1条.   
- 使用not in过滤, 性能极差.   
PG 解决方案:   
- 1、多值列, 一个用户已读只需要存储1条  
- 2、datasketch 近似类型, 几KB空间可以存储上亿唯一值.   
- 3、压缩存储多值列 roaringbitmap类型, 效率和空间的平衡.  
- 4、使用partial index, 拆散过滤列表, 降低每次请求的无效数据.   
视频回放: https://www.bilibili.com/video/BV13v411p7cz/  
#### 24、重新发现PostgreSQL之美 - 24 滑动窗口分析 2000x    
场景:   
游戏、社交、电商场景.   
流失用户、新增用户、UV计算.   
滑动计算, 任意窗口.   
挑战:   
数据量大、计算量大   
传统方案需要记录明细, 才能支持滑动计算  
PG解决方案:   
采用HLL类型不需要存储明细, 支持滑动, 交、并、差计算.   
视频回放: https://www.bilibili.com/video/BV1t44y167mj/  
#### 25、重新发现PostgreSQL之美 - 25 最强大脑题目 泰森多边形(空间战略布局问题)  
场景:  
- 电商、手机、运营商、小米、化妆品 等加盟店, 每个门店应该覆盖哪些商圈最合理. KPI如何规划, 空间战略如何布局比较合理?  
- 运营商基站, 每个基站调多大功率最合理.  
挑战:  
点多, 算法复杂.  
PG解决方案:  
冯诺洛伊图, 泰森多边形为以上需求提供了理论基础.  
内置GIS系统, 支持根据离散点生成泰森多边形. 每个基站代表多边形的离散点.  
基站功率覆盖泰森多边形的空间范围即可.  
给加盟店下达KPI的时候可以结合多边形内包含的POI(商圈、写字楼、住宅等人群)来实现.  
视频回放: https://www.bilibili.com/video/BV1p44y167nA/    
#### 26、重新发现PostgreSQL之美 - 26 这个推荐算法价值1亿
场景:  
短视频、电商、社交等基于标签的动态推荐.   
挑战:  
标签多, 按标签权重比例每个标签取N条, 与数据库的交互次数多.  
已读列表巨大, 过滤已读采用传统not in资源消耗大.  
效率低下.  
PG解决方案:   
效率提升1000倍, 可能价值1个亿.   
技术点: 数组、自定义type、partial index降低无效过滤、hash subplan优化not in、array agg, jsonb  
视频回放:  https://www.bilibili.com/video/BV1do4y1y7cq/   
#### 27、重新发现PostgreSQL之美 - 27 无中生有  
场景:      
- 路径规划: 大型商业综合体, 自动驾驶, 虚拟现实.      
- 共享出行(拼车), 配送调度(餐饮、包裹).      
- 刑侦: 轨迹相遇分析      
    - [《重新发现PostgreSQL之美 - 11 时空轨迹系统 新冠&刑侦&预测》](../202106/20210602_01.md)        
挑战:      
- 传统数据库不支持路网数据, 需要move data到应用端进行计算.      
- 现实中轨迹存在缺失点, 当需要分析轨迹相遇事件时, 准确度下降.      
- 在共享出行拼单, 包裹和餐饮配送中存在一到多, 多到多的路径规划, 非常复杂传统数据库不支持.      
PG 解决方案:      
- 支持路网数据存储: 点, 线. 支持道路正、反权重来表示路段通畅度.       
- 内置多重路径规划算法, 支持one to one,one to many,many to one,many to many等算法.    
- 支持道路施工、限行、单行线、按车牌或车辆规格限行、限高、限宽等实现      
视频回放: https://www.bilibili.com/video/BV17K4y197J8/    
#### 28、重新发现PostgreSQL之美 - 28 旋转门        
视频回放: https://www.bilibili.com/video/BV1Eg411g7Sx/  
场景:        
物联网、金融、游戏、社交、电商等时序场景.  
挑战:        
数据量超大, 即使采用列存、数据压缩方式还是很大.  
PG 解决方案:      
有损压缩, 自定义旋转门算法.    
[《SQL流式案例 - 旋转门压缩(前后计算相关滑窗处理例子)》](../201801/20180107_01.md)  
[《PostgreSQL 三角函数的用法举例 - 已知3点求任意夹角（旋转门续）》](../201608/20160816_01.md)  
[《旋转门数据压缩算法在PostgreSQL中的实现 - 流式压缩在物联网、监控、传感器等场景的应用》](../201608/20160813_01.md)  
#### 29、重新发现PostgreSQL之美 - 29 防止老年痴呆
用PG生成数独游戏, 来锻炼锻炼大脑吧    
视频回放: https://www.bilibili.com/video/bv1wq4y1L7eN  
#### 30、重新发现PostgreSQL之美 - 30 打蛇打七寸    
场景:  
电商、网站、社交.如头条,微博等.    
评价、文章、短语内容文本分析, 找出热词、关键词.    
挑战:  
传统数据库不支持文本分析, 需要拉去到程序内计算, 非常慢.  
程序效率差(大多数不是C语言写的,性能弱上加弱).  
PG 解决方案:  
支持文本分析, 包括tf-idf等,支持自定义分词能力.   
分词性能强大: macmini 2018 i5每秒分析速度360万词.   
视频回放: https://www.bilibili.com/video/BV1Fy4y1g73D/    
#### 31、重新发现PostgreSQL之美 - 31 激光点云 LiDAR - 一尺之锤日取一半万世不竭     
场景:  
- 3D打印、自动驾驶、测绘、3D城市、VR.   
- 激光雷达传感器.   
挑战:  
- 数据量大, 要求高效写入和查询  
- 每个点存储的信息量大: 维度多(pcid表达格式,如三原色、材质、时间、位置等等)、且维度需要动态弹性, 存储和查询不方便  
- 存储空间消耗、计算挑战  
- 传统采用文件存储,   
    - 数据效率低查询(为了得到一部分数据，您需要读取整个文件)  
    - 无法并发性(一次只能有一个用户修改点/读取点)  
    - 文件往往会有很多重复(每个工人都有自己的私有版本)，没有数据的安全性(文件可能会被处理破坏，很难管理谁访问什么)  
    - 很难同时使用几个不同的点云  
    - 难以与其他空间数据(矢量、栅格、图像)一起使用点云  
PG 解决方案:  
- 支持点云插件  
- 包含点云类型、patch类型、支持空间属性、附加属性  
- 支持自定义点云格式  
- 包含相应的索引和操作符接口  
- 自动压缩存储(二进制)  
- 支持高效写入、查询  
pgPointcloud提供了一种在postgres数据库中有效存储点的方法。  
实际上，pgpPointCloud存储点组(pcPoints)，称为pcPatch，存储点组允许有效地压缩数据。  
这个补丁有一个边界框，PostGIS空间特性可以使用它来大大加快查询速度。  
pgPointcloud允许高效地查询非常大的点云。可以使用空间标准(哪些点在这个区域中)和点属性标准(between and)。  
点云位于服务器中，它们可以用于处理或可视化，或流。  
视频回放: https://www.bilibili.com/video/bv1Tw411f7mh  
#### 32、重新发现PostgreSQL之美 - 32 天不怕地不怕, 就怕老板问为什么?   
场景:  
- 黑天鹅, 突发事件.  
- 负载突然升高, 响应突然变慢.  