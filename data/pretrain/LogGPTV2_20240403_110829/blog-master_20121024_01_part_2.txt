 6284 pg9.2.0   16   0 1184m 129m 127m R 65.2  0.1   0:27.70 postgres: digoal digoal [local] INSERT                                   
 6280 pg9.2.0   16   0 1184m 129m 127m R 62.2  0.1   0:27.95 postgres: digoal digoal [local] idle                                     
 6281 pg9.2.0   16   0 1184m 129m 128m R 62.2  0.1   0:27.82 postgres: digoal digoal [local] idle                                     
 6283 pg9.2.0   16   0 1184m 129m 128m R 60.2  0.1   0:28.11 postgres: digoal digoal [local] INSERT                                   
 6276 pg9.2.0   16   0 1184m 129m 128m R 59.2  0.1   0:27.73 postgres: digoal digoal [local] INSERT  
```  
测试过程中的iostat截取 :   
```  
avg-cpu:  %user   %nice %system %iowait  %steal   %idle  
          36.12    0.00   34.12    5.12    0.00   24.62  
Device:         rrqm/s   wrqm/s   r/s   w/s   rsec/s   wsec/s avgrq-sz avgqu-sz   await  svctm  %util  
sda               0.00 27606.00  0.00 4723.00     0.00 265880.00    56.29    51.15   11.67   0.12  57.50  
sda1              0.00     0.00  0.00  0.00     0.00     0.00     0.00     0.00    0.00   0.00   0.00  
sda2              0.00     0.00  0.00  0.00     0.00     0.00     0.00     0.00    0.00   0.00   0.00  
sda3              0.00 27606.00  0.00 4723.00     0.00 265880.00    56.29    51.15   11.67   0.12  57.50  
sdb               0.00 26533.00  0.00 976.00     0.00 220064.00   225.48     1.43    1.48   0.76  74.50  
dm-0              0.00     0.00  0.00 27508.00     0.00 220064.00     8.00    71.27    2.59   0.03  74.50  
dm-1              0.00     0.00  0.00 32192.00     0.00 257536.00     8.00   352.96   11.68   0.02  57.60  
dm-2              0.00     0.00  0.00 27508.00     0.00 220064.00     8.00    71.31    2.59   0.03  74.50  
```  
2\. 测试text字段类型的主键, 使用pgbench测试插入离散uuid数据到测试表.  
pgbench script :   
```  
vi pgbench.sql  
insert into test_text_pk (id) values (uuid_generate_v4());  
```  
测试,   
```  
digoal=# checkpoint;  
CHECKPOINT  
```  
pgbench测试结果 :   
```  
pg9.2.0@db-172-16-3-150-> pgbench -M prepared -n -j 8 -c 8 -T 60 -f ./pgbench.sql -U digoal digoal   
transaction type: Custom query  
scaling factor: 1  
query mode: prepared  
number of clients: 8  
number of threads: 8  
duration: 60 s  
number of transactions actually processed: 2133816  
tps = 34674.325489 (including connections establishing)  
tps = 34677.786574 (excluding connections establishing)  
```  
测试过程中的top截取 :   
```  
Tasks: 244 total,   6 running, 238 sleeping,   0 stopped,   0 zombie  
Cpu(s): 32.6%us, 27.4%sy,  0.0%ni, 32.0%id,  6.0%wa,  0.1%hi,  1.9%si,  0.0%st  
Mem:  98992440k total, 89138112k used,  9854328k free,  1246048k buffers  
Swap:  8385920k total,        0k used,  8385920k free, 84442028k cached  
  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND                                                                  
 5580 pg9.2.0   16   0 1184m  69m  68m R 52.5  0.1   0:07.09 postgres: digoal digoal [local] INSERT                                   
 5566 pg9.2.0   15   0  255m 2096 1524 S 52.1  0.0   0:07.94 pgbench -M prepared -n -j 8 -c 8 -T 60 -f ./pgbench.sql -U digoal digoa  
 5582 pg9.2.0   16   0 1184m  69m  67m S 51.5  0.1   0:06.96 postgres: digoal digoal [local] INSERT                                   
 5576 pg9.2.0   16   0 1184m  69m  68m R 50.8  0.1   0:07.08 postgres: digoal digoal [local] INSERT                                   
 5581 pg9.2.0   16   0 1184m  69m  67m S 49.5  0.1   0:06.93 postgres: digoal digoal [local] INSERT                                   
 5577 pg9.2.0   16   0 1184m  69m  67m S 49.1  0.1   0:07.01 postgres: digoal digoal [local] INSERT                                   
 5579 pg9.2.0   16   0 1184m  69m  68m S 49.1  0.1   0:06.90 postgres: digoal digoal [local] INSERT                                   
 5575 pg9.2.0   16   0 1184m  69m  67m R 48.5  0.1   0:07.07 postgres: digoal digoal [local] BIND                                     
 5578 pg9.2.0   16   0 1184m  69m  67m R 46.2  0.1   0:06.83 postgres: digoal digoal [local] INSERT  
```  
测试过程中的iostat截取 :   
```  
avg-cpu:  %user   %nice %system %iowait  %steal   %idle  
          37.58    0.00   32.58    5.37    0.00   24.47  
Device:         rrqm/s   wrqm/s   r/s   w/s   rsec/s   wsec/s avgrq-sz avgqu-sz   await  svctm  %util  
sda               0.00 28633.00  0.00 6048.00     0.00 272856.00    45.12    54.31    8.88   0.09  56.70  
sda1              0.00     0.00  0.00  0.00     0.00     0.00     0.00     0.00    0.00   0.00   0.00  
sda2              0.00     0.00  0.00  0.00     0.00     0.00     0.00     0.00    0.00   0.00   0.00  
sda3              0.00 28633.00  0.00 6048.00     0.00 272856.00    45.12    54.31    8.88   0.09  56.70  
sdb               0.00 29436.00  0.00 746.00     0.00 239496.00   321.04     1.71    2.29   0.89  66.60  
dm-0              0.00     0.00  0.00 30196.00     0.00 241568.00     8.00    90.18    2.98   0.02  66.60  
dm-1              0.00     0.00  0.00 34804.00     0.00 278432.00     8.00   322.95    9.19   0.02  56.70  
dm-2              0.00     0.00  0.00 30196.00     0.00 241568.00     8.00    90.23    2.98   0.02  66.60  
```  
3\. 测试text字段类型的主键, 使用pgbench测试插入顺序的唯一数据到测试表.  
顺序的UUID例如 :   
```  
5a50fad8-81ac-4249-8390-f06e37fb1e9b1  
5a50fad8-81ac-4249-8390-f06e37fb1e9b2  
5a50fad8-81ac-4249-8390-f06e37fb1e9b3  
5a50fad8-81ac-4249-8390-f06e37fb1e9b4  
5a50fad8-81ac-4249-8390-f06e37fb1e9b5  
...  
```  
pgbench script :   
```  
vi pgbench.sql  
insert into test_text_pk (id) values ('5a50fad8-81ac-4249-8390-f06e37fb1e9b'||nextval('test_seq'::regclass));  
```  
测试,   
```  
digoal=# checkpoint;  
CHECKPOINT  
digoal=> truncate table test_text_pk ;  
TRUNCATE TABLE  
```  
pgbench测试结果 :   
```  
pg9.2.0@db-172-16-3-150-> pgbench -M prepared -n -j 8 -c 8 -T 60 -f ./pgbench.sql -U digoal digoal   
transaction type: Custom query  
scaling factor: 1  
query mode: prepared  
number of clients: 8  
number of threads: 8  
duration: 60 s  
number of transactions actually processed: 4548223  
tps = 75802.392652 (including connections establishing)  
tps = 75811.583066 (excluding connections establishing)  
```  
测试过程中的top截取 :   
```  
Tasks: 247 total,   6 running, 241 sleeping,   0 stopped,   0 zombie  
Cpu(s): 65.8%us, 26.7%sy,  0.0%ni,  6.3%id,  0.4%wa,  0.1%hi,  0.7%si,  0.0%st  
Mem:  98992440k total, 89949664k used,  9042776k free,  1246152k buffers  
Swap:  8385920k total,        0k used,  8385920k free, 85253040k cached  
  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND                                                                  
 7266 pg9.2.0   15   0  320m 2104 1520 S 119.6  0.0   0:29.43 pgbench -M prepared -n -j 8 -c 8 -T 60 -f ./pgbench.sql -U digoal digo  
 7275 pg9.2.0   16   0 1180m 172m 170m S 80.1  0.2   0:19.20 postgres: digoal digoal [local] idle                                     
 7281 pg9.2.0   17   0 1180m 165m 163m R 79.1  0.2   0:18.45 postgres: digoal digoal [local] INSERT                                   
 7277 pg9.2.0   17   0 1180m 166m 164m R 77.1  0.2   0:18.62 postgres: digoal digoal [local] INSERT                                   
 7276 pg9.2.0   17   0 1180m 167m 165m R 75.1  0.2   0:18.69 postgres: digoal digoal [local] idle                                     
 7278 pg9.2.0   18   0 1180m 166m 164m R 75.1  0.2   0:18.57 postgres: digoal digoal [local] BIND                                     
 7280 pg9.2.0   17   0 1180m 167m 165m R 75.1  0.2   0:18.59 postgres: digoal digoal [local] INSERT                                   
 7279 pg9.2.0   17   0 1180m 167m 165m S 72.1  0.2   0:18.59 postgres: digoal digoal [local] idle                                     
 7282 pg9.2.0   17   0 1180m 164m 162m S 69.2  0.2   0:18.54 postgres: digoal digoal [local] idle    
```  
测试过程中的iostat截取 :   
```  
avg-cpu:  %user   %nice %system %iowait  %steal   %idle  
          64.96    0.00   26.56    0.50    0.00    7.98  
Device:         rrqm/s   wrqm/s   r/s   w/s   rsec/s   wsec/s avgrq-sz avgqu-sz   await  svctm  %util  
sda               0.00  1909.00  0.00 36.00     0.00 15560.00   432.22     0.35    9.75   0.56   2.00  
sda1              0.00     0.00  0.00  0.00     0.00     0.00     0.00     0.00    0.00   0.00   0.00  
sda2              0.00     0.00  0.00  0.00     0.00     0.00     0.00     0.00    0.00   0.00   0.00  
sda3              0.00  1909.00  0.00 36.00     0.00 15560.00   432.22     0.35    9.75   0.56   2.00  
sdb               0.00 10053.00  0.00 2817.00     0.00 102984.00    36.56     0.56    0.20   0.12  34.90  
dm-0              0.00     0.00  0.00 12873.00     0.00 102984.00     8.00    10.19    0.79   0.03  35.10  
dm-1              0.00     0.00  0.00 1945.00     0.00 15560.00     8.00    19.65   10.10   0.01   2.00  
dm-2              0.00     0.00  0.00 12873.00     0.00 102984.00     8.00    10.80    0.79   0.03  35.40  
```  
4\. 测试int8字段类型的主键, 使用pgbench测试插入整型数据到测试表.  
pgbench script :   
```  
vi pgbench.sql  
insert into test_int8_pk (id) values (nextval('test_seq'::regclass));  
```  
测试,   
```  
digoal=# checkpoint;  
CHECKPOINT  
```  
pgbench测试结果 :   
```  
pg9.2.0@db-172-16-3-150-> pgbench -M prepared -n -j 8 -c 8 -T 60 -f ./pgbench.sql -U digoal digoal   
transaction type: Custom query  
scaling factor: 1  