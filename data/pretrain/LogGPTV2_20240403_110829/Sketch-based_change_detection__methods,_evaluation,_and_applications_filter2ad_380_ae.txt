### Nsk (Ï„)

In this section, we present the results comparing sketch-based and per-flow methods for flow selection using thresholding. The key finding is that with \( K \) set to at least 32K, we can achieve excellent guarantees for low false negatives and false positives. We will illustrate these findings with two sets of figures.

#### Large Router Data File

The first set of figures is based on a large router data file and uses the non-seasonal Holt-Winters model for 60-second (Figure 10) and 300-second (Figure 11) time intervals.

- **Figure 10(a)**: For a very low value of \( H \) (e.g., \( H = 1 \)), the number of alarms is high. Increasing \( H \) to 5 significantly reduces the number of alarms. The figure also shows that increasing the threshold value further decreases the number of alarms. Importantly, there is virtually no difference between the per-flow results and the sketch results when \( H \geq 5 \) and \( K \geq 8K \).

- **Figure 10(b)**: For \( K = 32K \) and higher, the false negative ratio drops rapidly to below 2% even for very low threshold values and is below 1% for a threshold of 0.05.

- **Figure 10(c)**: The false positive ratio for \( K = 32K \) and a low threshold of 0.02 is quite low (below 1%). These results are consistent for the 300-second interval as well.

#### Medium Router Data File

The second set of figures is based on a medium-sized router data file, focusing on a single 300-second interval and varying across four models: Exponentially Weighted Moving Average (EWMA), non-seasonal Holt-Winters (NSHW), and ARIMA with \( d = 0 \) and \( d = 1 \). We only show the false negative and false positive ratios.

- **Figure 12(a)**: The false negative ratio for the EWMA model is well below 1% for thresholds larger than 0.01.

- **Figure 12(b)**: The false negative ratio for the NSHW model is slightly better than the EWMA model.

- **Figure 13(a) and (b)**: For the two different ARIMA models (\( d = 0 \) and \( d = 1 \)), the false negative ratios are low but differ slightly compared to the EWMA and NSHW models for a low threshold of 0.01.

- **Figure 14(a) and (b)**: The false positive ratios for the EWMA and NSHW models are well below 1% for thresholds larger than 0.01 when \( K = 32K \) or higher.

- **Figure 15(a) and (b)**: The false positive ratios for both ARIMA models are also low.

### Implementation Complexity and Performance

Our sketch-based change detection implementation consists of three key components: 4-universal hash functions, sketches, and forecasting. The implementation details are as follows:

- 4-universal hash functions: ~200 lines
- Sketches: ~250 lines
- Forecasting: varies with the model, but all models together are less than 800 lines (all in C).

Hash computation and sketch updates need to be performed for every item in the input stream. By default, sketch estimates are also required. Table 1 summarizes the running times for performing 10 million hash computations, sketch updates, and sketch estimates on two different computers:

- **Computer A**: 400 MHz SGI R12k processor running IRIX64 6.5
- **Computer B**: 900 MHz Ultrasparc-III processor running Solaris 5.8

Each hash computation produces 8 independent 16-bit hash values, sufficient for k-ary sketches with \( H \leq 8 \) and \( K \leq 2^{16} \). Both update and estimate operations assume the hash values have already been computed (once per item).

### Ongoing Work

Our preliminary exploration indicates that our sketch-based change detection method is highly accurate compared to per-flow time series analysis. It has the potential to be a building block for network anomaly detection and traffic measurement. We are exploring several avenues for improvement:

- **Online Change Detection**: Currently, our method has been evaluated in an offline setting. To enable near real-time change detection, we need to modify the technique to obtain forecast model parameters online. One approach is to periodically recompute the parameters using historical data to adapt to changes in overall traffic behavior.
  
- **Avoiding Boundary Effects**: Fixed interval sizes can cause boundary effects. Possible solutions include:
  - Running multiple models with different interval sizes and starting points.
  - Randomizing the interval size (e.g., using exponentially distributed intervals) and normalizing total values by interval size. The linearity of sketches makes this feasible.

- **Reducing False Positives**: Our focus has been on accurately detecting significant deviations from normal behavior. However, some anomalies are benign. Tunable parameters in our framework can be adjusted to limit false positives. For example, the system can be configured to report only the top N major changes or changes above a certain threshold.

- **Combining with Sampling**: Given the massive volumes of data in large networks, sampling is increasingly used to reduce the amount of data collected. Our current approach combines time series analysis with sketches for scalable change detection in large datasets. We plan to integrate this with sampling techniques to further enhance scalability and efficiency.