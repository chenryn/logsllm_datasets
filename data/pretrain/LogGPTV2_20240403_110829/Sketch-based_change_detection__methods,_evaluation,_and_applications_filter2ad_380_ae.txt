Nsk (τ )
In this part of the results, we demonstrate the similarity of sketch
and per-ﬂow results when ﬂows are selected by thresholding. The
overall summary here is that with K set to be at least 32K, we can
provide excellent guarantees for low false negatives and false posi-
tives. We show two sets of ﬁgures.
The ﬁrst set is for the large sized router data ﬁle and uses the non-
seasonal Holt-Winters model for the 60s (Figure 10) and 300s (Fig-
ure 11) time intervals. Figure 10(a) shows that for a very low value
of H (=1), the number of alarms are very high. Simply increasing H
to 5 sufﬁces to dramatically reduce the number of alarms. The ﬁg-
ure also demonstrates the signiﬁcant reduction in number of alarms
that can be realized by increasing the threshold value. Finally, it
shows that there is virtually no difference between the per-ﬂow re-
sults and the sketch results when H ≥ 5 and K ≥ 8K.
Figure 10(b) shows that for K=32K and beyond, the false nega-
tive ratio drops rapidly to be less than 2% even for very low thresh-
old values and is below 1% for threshold of 0.05. The false positive
ratio, as Figure 10(c) shows, for K=32K and even a low threshold
of 0.02, is quite low (below 1%). The overall results are similar for
the 300s interval.
The second set of ﬁgures uses the medium sized router data
ﬁle, for a single interval size (300s) and varies across four mod-
0.1
0.08
0.06
0.04
0.02
)
n
a
e
m
(
e
v
i
t
a
g
e
N
e
s
a
F
l
Thresh=0.01, H=5
Thresh=0.02, H=5
Thresh=0.05, H=5
Thresh=0.07, H=5
)
n
a
e
m
(
e
v
i
t
a
g
e
N
e
s
a
F
l
Thresh=0.01, H=5
Thresh=0.02, H=5
Thresh=0.05, H=5
Thresh=0.07, H=5
0.1
0.08
0.06
0.04
0.02
0
8192
32768
65536
K
0
8192
32768
65536
K
(a) Model=EWMA
(b) Model=NSHW
Figure 12: Thresholding false negatives: medium router, 300s interval, EWMA, NSHW models
Thresh=0.01, H=5
Thresh=0.02, H=5
Thresh=0.05, H=5
Thresh=0.07, H=5
0.1
0.08
0.06
0.04
0.02
)
n
a
e
m
(
e
v
i
t
a
g
e
N
e
s
a
F
l
Thresh=0.01, H=5
Thresh=0.02, H=5
Thresh=0.05, H=5
Thresh=0.07, H=5
0.1
0.08
0.06
0.04
0.02
)
n
a
e
m
(
e
v
i
t
a
g
e
N
e
s
a
F
l
0
8192
32768
65536
K
0
8192
32768
65536
K
(a) Model=ARIMA0
(b) Model=ARIMA1
Figure 13: Thresholding false negatives: medium router, 300s interval, ARIMA models
els: EWMA, non-seasonal Holt-Winters model, ARIMA with d =
0 and 1. We show only the false negative and false positive ratios.
Figure 12 (a) shows the false negative ratio for the EWMA model
to be well below 1% for thresholds larger than 0.01. Likewise,
Figure 12 (b) shows the false negative ratio for the non-seasonal
Holt-Winters model to be slightly better than the EWMA model.
Figure 13 (a) and (b) show for the two different ARIMA models
(d = 0 and 1, respectively), that false negatives are low but differ a
bit as compared to EWMA and NSHW models for a low threshold
of 0.01.
Figure 14 (a) and (b) show the false positive ratios for the EWMA
and NSHW models respectively, to be well below 1% for thresholds
larger than 0.01 for K=32K or higher. Likewise, Figure 15 (a) and
(b) show low false positive ratios for both ARIMA models.
needs to be done on a per-item basis. However, if we are will-
ing to miss some keys that appear too infrequently (which arguably
can only cause limited damage) we can sample the stream of in-
coming keys and only do ESTIMATE on the substream. Operations
like ESTIMATEF2 only need to be done infrequently—once every
interval—and their amortized costs are insigniﬁcant.
operations
compute 8 16-bit hash values
UPDATE (H = 5, K = 216)
ESTIMATE (H = 5, K = 216)
running time (sec)
computer A computer B
0.34
0.81
2.69
0.89
0.45
1.46
5.3 Implementation complexity and performance
There are three key components in our sketch-based change de-
tection implementation: 4-universal hash functions, sketches, and
forecasting. The implementation of 4-universal hash functions is
about 200 lines, sketches around 250 lines, while forecasting code
varies with the forecasting models and all of the models together
are less than 800 lines (all in C).
Hash computation and sketch UPDATE need to be done on ev-
ery item in the input stream. Sketch ESTIMATE, by default, also
Table 1: Running time for performing 10 million hash com-
putations and sketch operations on computer A (400 MHz
SGI R12k processor running IRIX64 6.5) and B (900 MHz
Ultrasparc-III processor running Solaris 5.8).
Table 1 summarizes the running time for performing 10 million
hash computations, sketch UPDATE, and sketch ESTIMATE opera-
tions. Each hash computation produces 8 independent 16-bit hash
values and therefore sufﬁces for k-ary sketches with H ≤ 8 and
K ≤ 216. Both UPDATE and ESTIMATE assume the hash values
0.1
0.08
0.06
0.04
0.02
)
n
a
e
m
(
e
v
i
t
i
s
o
P
e
s
a
F
l
Thresh=0.01, H=5
Thresh=0.02, H=5
Thresh=0.05, H=5
Thresh=0.07, H=5
)
n
a
e
m
(
e
v
i
t
i
s
o
P
e
s
a
F
l
Thresh=0.01, H=5
Thresh=0.02, H=5
Thresh=0.05, H=5
Thresh=0.07, H=5
0.1
0.08
0.06
0.04
0.02
0
8192
32768
65536
K
0
8192
32768
65536
K
(a) Model=EWMA
(b) Model=NSHW
Figure 14: False positives: medium router, 300s interval, EWMA, NSHW models
Thresh=0.01, H=5
Thresh=0.02, H=5
Thresh=0.05, H=5
Thresh=0.07, H=5
0.1
0.08
0.06
0.04
0.02
)
n
a
e
m
(
e
v
i
t
i
s
o
P
e
s
a
F
l
Thresh=0.01, H=5
Thresh=0.02, H=5
Thresh=0.05, H=5
Thresh=0.07, H=5
0.1
0.08
0.06
0.04
0.02
)
n
a
e
m
(
e
v
i
t
i
s
o
P
e
s
a
F
l
0
8192
32768
65536
K
0
8192
32768
65536
K
(a) Model=ARIMA0
(b) Model=ARIMA1
Figure 15: False positives: medium router, 300s interval, ARIMA models
have already been computed (which needs to done only once per
item). The sketch parameters we use are H = 5 and K = 216. As
we can see, the overhead of these operations are not very high. We
note that the current implementation has not been fully optimized
allowing room for further speedup.
6. ONGOING WORK
Our preliminary exploration indicates that our sketch-based change
detection method is highly accurate when compared with per-ﬂow
time series analysis. It offers promise to be a building block for
network anomaly detection and trafﬁc measurement. We outline
some avenues that we are exploring
• Online change detection: We have currently evaluated our
methods in an ofﬂine setting. These evaluations suggest that
the technique may be capable of near real-time change de-
tection. One change required is modifying our technique to
obtain the forecast model parameters online. One possible
way is periodically recomputing the forecast model param-
eters using history data to keep up with changes in overall
trafﬁc behavior.
• Avoiding boundary effects due to ﬁxed interval sizes. Possi-
ble solutions include (i) simultaneously run multiple models
using different interval sizes, and different starting points,
(ii) randomize the interval size (e.g., using exponentially dis-
tributed interval size) and detect changes of total values nor-
malized by interval size. The linearity of sketches makes this
possible.
• Reducing false positives: We have focused on accurate detec-
tion of signiﬁcant deviation from normal behavior. However,
some anomalies are benign. The problem of reducing false
alarms is a major challenge for all change-detection based
network anomaly detection systems. Our change detection
framework has tunable parameters which can be adjusted to
limit the false positives. For instance, the technique can be
asked to only report the top N major changes, or the changes
that are above a threshold. The particular application needs
will guide the actual setting of these tunable parameters.
• Combining with sampling: Given the massive volumes of
data generated in large networks, sampling is increasingly
being used in ISP network measurement infrastructures for
reducing the volume of data that has to be collected. Our
current approach combines time series analysis with sketches
for scalable change detection in massive data sets. We plan