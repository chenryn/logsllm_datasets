DAML+OIL
Extension of RDFS
Allows machine understanding and automated
reasoning.
208
209
OWL
OWL facilitates greater machine
interpretability of Web content than that
supported by XML, RDF, and RDF Schema
(RDF-S) by providing additional vocabulary
along with a formal semantics.
209
210
OWL
OWL has three increasingly-expressive
sublanguages: OWL Lite, OWL DL, and OWL Full
OWL Lite
Classification hierarchy and simple constraints
OWL DL
Maximum expressiveness while retaining computational
completeness (all conclusions are guaranteed to be
computed) and decidability (all computations will finish in
finite time)
OWL Full
Maximum expressiveness and the syntactic freedom of
RDF with no computational guarantees.
210
211
Stack of W3C recommendations
XML
Syntax for structured documents
No semantic constraints on the meaning of these documents
XML Schema
Language for defining the structure of XML documents
RDF
Data model for objects and relations between them
Provides a simple semantics for this data model
Data models represented in an XML syntax.
RDF Schema
A vocabulary for describing properties and classes of RDF resources
OWL
Adds more vocabulary for describing properties and classes
For example: relations between classes (e.g. disjointness), cardinality (e.g.
"exactly one"), equality, characteristics of properties (e.g. symmetry), and
enumerated classes.
211
http://www.w3.org/TR/2003/PR-owl-features-20031215/
212
OWL example
“A full SVG figure must have one chart type“
212
“A char type is a Bar, or a Pie, or a Radar, or a …”
http://www.w3.org/Consortium/Offices/Presentations/RDFTutorial/
213
OWL example
1
213
http://www.w3.org/Consortium/Offices/Presentations/RDFTutorial/
214
OWL example
…
214
http://www.w3.org/Consortium/Offices/Presentations/RDFTutorial/
Ontology Editors
216
Tools: Ontology Editors
More than 50 applications. A few examples,
Protégé 2000
OILed
WebOnto
GKB-Editor
Chimaera
…
216
217
Protégé 2000
Supports OWL
217
http://protege.stanford.edu/
218
OilEd
DAML+OIL
218
http://oiled.man.ac.uk/
219
Chimaera
DAML+OIL
219
http://www.ksl.stanford.edu/software/chimaera/
220
GKB-Editor
(Generic Knowledge Base Editor)
220
http://www.ai.sri.com/~gkb/
221
WebOnto Project
Ontology browsing and editing tool
221
222
Semantic Web Processes
Questions?
222
NEXT: METEOR-S Project @ LSDIS lab
223
Systems and Applications
METEOR-S Project @ LSDIS lab
223
224
Semantics in METEOR-S
Annotation, Discovery, Composition (in development),
and QoS
Focuses on two issues: semantic Web services and
process composition.
Process Composition:
Functional perspective
Web Service Discovery, handling semantic heterogeneity
Operational perspective
QoS specification for Web Services and Processes.
224
225
METEOR-S Project @ LSDIS lab
METEOR-S exploits Workflow, Semantic Web,
Web Services, and Simulation technologies to
meet these challenges in a practical and
standards based approach.
Applying Semantics in Annotation, Quality of Service,
Discovery, Composition, Execution of Web Services
Adding semantics to different layers of Web services
conceptual stack
Use of ontologies to provide underpinning for information
sharing and semantic interoperability
http://swp.semanticweb.org, http://lsdis.cs.uga.edu/proj/meteor/swp.htm
225
226
METEOR-S components for
Semantic Web Services
• Discovery Infrastructure (MWSDI)
– Semantic Annotation and Discovery of Web Services 1
– Semantic Peer-to-Peer network of Web Services Registries 2
• Composer
– SCET: Service Composition and Execution Tool 3
– Semantics Process Template Builder and Process
Generator 4
– QoS Management
• Specify, compute, monitor and control QoS (SWR algorithm) 5
• Orchestrator
(Under development)
– Analysis and Simulation 6
– Execution
– Monitoring 6
226
1 [Sivashanmugam et al-. 1], 2 [Verma et al.], 3 [Chandrasekaran et al.], 4 [Sivashanmugam et al-. 2],
5 [Cardoso et al.], 6 [Silver et al.]
METEOR-S Web Service
Annotation Framework
(MWSAF)
-annotates web services with
semantics
Meteor-S Web Service Annotation Framework
METEOR-S Web service 228
Annotation
Map Web service’s input/output data as well as functional
description using relevant data and function/operation ontologies,
respectively
Annotate WSDL with Ontologies
How ?
Borrow from Schema matching
Semantic disambiguation between terms in XML messages represented
in WSDL and concepts in ontology
Match concepts from WSDL schema to ontological concepts
Problems
Solution – MWSAF
228
Why Matching is Difficult ? 229
(General)
Aims to identify same real-world entity
using names, structures, types, data values, etc
Schemas represent same entity differently
different names => same entity
area & address => location
same names => different entities
area => location or square-feet
Schema & data never fully capture semantics completely
Semantics not documented in sufficient details
Schemas not adequately expressive to capture semantics
Intended semantics is typically subjective
IBM Almaden Lab = IBM?
 Complete Automation not possible 229
230
MWSAF – Architecture
User provided
WSDL File
OOnnttoollooggyy SSttoorree
SchemaGraph
For WSDL
Ont2Schema WSDL2Schema
SchemaGraph ggeettBBeessttMMaappppiinngg
For Ontology
PPaarrsseerr LLiibbrraarryy ((RRaannkkiinngg aallggoorriitthhmm))
NGram
WSDL Ontology Match
findMappings
MatchSynonyms
Concept Concept Score
Annotated
CheckAbbreviations
Phenomen WeatherEvent 0.51
WSDL file
on
MMaattcchheerr LLiibbrraarryy
230
windEvent Wind 0.79
MWSAF – 231
Matching two
concepts
IOParametersMatch (w,o) =
ElemMatch (w,o) + SchemaMatch (w,o) + ContextMatch (w,o)
ElemMatch (w,o) => Element level match
SchemaMatch (w,o) => Schema level match
subTree(w) == subTree(o)
FUNCTION findMapping
INPUT wc Є W , oc Є O
i i
OUTPUT m = ( wc , oc , MS )
i i i
231
232
MWSAF –
Element level Match
Definition
Element level match is the measure of the linguistic similarity
between two concepts based on their names.
Assumption – Concepts from XML schema and ontology have meaningful
names
ElemMatch (w,o) => Element level match
NameMatch with stemming
Description Match (future work)
SynonymsMatch : Snow and snowFall mean the same
HypernymRelation (w is a kind of o) : prevailing_speed is a type of
speed of a wind i.e. windSpeed
HyponymRelation (o is a kind of w)
232
Acronyms : Sea Level Pressure has acronym SLP
233
MWSAF –
Schema level Match
Definition
The Schema level match is the measure of
structural similarity between two concepts
It is based on sub-concept similarity
(subConceptSim) and sub-concept match
(subConceptMatch).
SchemaMatch = subConceptSim *subConceptMatch
[ ] [ ]
where,subConceptSim ∈ 0,1 subConceptMatch ∈ 0,1
233
234
METEOR-S Web Service
Discovery Infrastructure (MWSDI)
- uses Functional, Data and QoS
semantics
Service Discovery
234
METEOR-S Web Service 235
Discovery Infrastructure (MWSDI)
Service Selection
- uses Functional, Data and QoS
semantics
235
236
METEOR-S Web Service
Composition Framework (MWSCF)
- needed for the world where business
processes never stop changing
236
Framework for Semantic Web Process Composition
237
Scenario
Client Application e.g. JSP
Process Client’s Purchase Order (PO)
Discover Suppliers
Request Quote
Analyze Quotes
Optimize on QoS
Inter Service Dependencies
Send PO to supplier(s)
Receive PO Confirmation from Supplier(s)
Confirm PO to Client
237
238
Supply Chain – QoS Based
238
239
Predefined flows
Static binding (supported by BPEL4WS)
Choose service at design time
Supplier 2
Supplier 1 Manufacturer Client
Manufacturer tightly coupled with suppliers
239
240
Predefined flows
Dynamic binding
Choose new services at runtime
Dynamically choose best supplier at runtime
Preferred
Cheaper Supplier
Supplier
Faster
Delivery
Manufacturer Client
240
241
MWSCF Architecture UDDI
UDDI UDDI
UDDI
Execution
UDDI UDDI
Process Execution
Engine
1. Validation and deployment Discovery Infrastructure
2. Executing the process using a client
(MWSDI)
Process Designer
1. Template Construction
activity specification using Template Process
- interfaces
Builder Generator
- services
- semantic activity templates
Process Designer
- other details
2. Process Generation
- Service discovery (automatic)
and selection (semi-automatic)
- Data flow
Activity Process
Ontologies
Interfaces Templates
Repositories are used to store
1. Web Service Interfaces
Repositories
2. Ontologies
3. Process Templates 241
242
Web Process Life-Cycle
Design
Create Process WSDL
Create Process Template
and Add Activities
Discovery Find Ontologies &
Annotate Activity
Requirements
Find Matches
Add Control Flow
Rank Services
Select a Service
Composition Execution
Add to Process Generate Process
Data Transformation Validate Syntax
Data Flow Execute
242
243
Semantic Web Process Design
Template Construction
243
244
Semantic Web Process Design
Process Generation
244
245
Semantic Web Process Design
245
246
Semantic Web Process Design
246
247
Semantic Web Process Design
247
248
Semantic Web Process Design
248
249
Semantic Web Process Design
249
250
Ongoing Projects
SWSI
SWSA Semantic Web Services Architecture
SWSL Semantic Web Services Language
WonderWeb: http://wonderweb.man.ac.uk/
Development of a framework of techniques and
methodologies that provide an engineering approach to the
building and use of ontologies.
Development of a set of foundational ontologies covering a
wide range of application domains.
Development of infrastructures and tool support that will be
required by real world applications in the Semantic Web.
250
251
Ongoing Projects
OWL-S: http://www.daml.org/services/
Set of ontologies to describe functionalties of web services
OWL-S Matchmaker:
 http://www-
2.cs.cmu.edu/%7Esoftagents/daml_Mmaker/OWL-S_matchmaker.htm
Match service requestors with service providers
Semantic Matchmaking for Web Services Discovery
Web Service Composer:
http://www.mindswap.org/~evren/composer/
Semi-automatic process for the dynamic composition of web
services
Web Services: http://www-
106.ibm.com/developerworks/webservices/
WSDL, UDDI, SOAP
Business Process with BPEL4WS
251
252
Conclusions
252
253
Conclusions
Semantic Web service Annotation and Discovery
Data semantics
Functional semantics
QoS Semantics
Web processes vs. Semantic Web processes
OWL-S (OWL-S)
Web process composition
Web services semantic degree of integration
Data, Functional, and QoS similarity
Web process QoS computation
QoS Models, techniques, and algorithms
253
254
Conclusions
Present Problems in Process Composition
Static discovery of Web Services
Design/deployment-time binding of Web services
Process Composition is based on interfaces of participating services
Proposition
Semantics is the enabler to address the problems of scalability,
heterogeneity (syntactic and semantic), machine understandability
faced by Web services
Semantics for Web Services
Semantics can be applied to different layers of Web Services
conceptual stack
Semantics for Web Services can be categorized into at least 4 different
dimensions namely Data, Functional, Execution and Quality (QoS).
254
255
255
256
Conclusions
Semantics can help address big challenges related to
scalability, dynamic environments.
But comprehensive approach to semantics will be
needed:
Data/information, function/operation, execution, QoS
Semantic (Web) principles and technology bring new
tools and capabilities that we did not have in EAI,
workflow management of the past
More at: http://lsdis.cs.uga.edu/proj/meteor/SWP.htm
256
257
Semantic Web Processes
Questions?
257
258
References
Extensive related work at: IBM, Karlsruhe, U. Manchester, OWL-S (CMU, Stanford, UMD)
Resources: http://lsdis.cs.uga.edu/lib/presentations/SWSP-tutorial-resource.htm
[Kreger] http://www-3.ibm.com/software/solutions/webservices/pdf/WSCA.pdf
[Sivashanmugam et al.-1] Adding Semantics to Web Services Standards
[Sivashanmugam et al.-2] Framework for Semantic Web Process Composition
[Verma et al.] MWSDI: A Scalable Infrastructure of Registries for Semantic
Publication and Discovery of Web Services
[Chandrasekaran et al.] Performance Analysis and Simulation of Composite
Web Services
[Cardoso et al.] Modeling Quality of Service for Workflows and Web Service
Processes
[Silver et al.] Modeling and Simulation of Quality of Service for Composition of
Web Services
[Paolucci et al.] Importing Semantic Web in UDDI
[UDDI-v3] http://uddi.org/pubs/uddi-v3.00-published-20020719.htm
http://www.daml.org/services/
http://www-106.ibm.com/developerworks/webservices/library/ws-bpel/
More at: http://lsdis.cs.uga.edu/SWP.htm 258
259
Semantic Web Processes
End
259