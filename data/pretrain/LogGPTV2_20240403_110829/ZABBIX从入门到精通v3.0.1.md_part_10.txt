在我们配置完 zabbix 网络发现规则之后，zabbix 会定期按照这个规则去扫描 IP 段，一旦有发现主机和服务，便生
成一个事件。事件如下列表：
事件 描述
Service Up 每当zabbix检测到active service
Service Down 每当zabbix检测不到service
Host Up 目标IP，至少有一个service是UP
Host Down 所有的services都没响应.
Service Discovered service在维护时间之后恢复或者第一次被发现
Service Lost service在up之后丢失了
Host Discovered 主机在维护时间之后恢复或者第一次被发现
Host Lost 主机在up之后丢失.
关于zabbix自动发现，我们后续有专门的文章来讲解。
zabbix 触发器事件
触发器是zabbix事件中最重要的事件，同时也是最常用到的事件（例如定义action等）。每当触发器状态发生变化，
都会生成一个包含详细状态信息的触发器事件：例如事件什么时候发送的以及当前状态是什么。
zabbix 自动注册事件
active agent主动与server通信，zabbix server使用agent通信的ip地址与端口来添加主机，并且生成一个自动注册
事件。关于自动注册我们后续来讲。
zabbix 脚本报警介质自定义
概述
zabbix 媒介类型包括 mail、sms、自定义脚本，我们用的最多的还是脚本媒介，再次我们就不讲另外两个媒介了。
当事件通知到脚本，会传递三个参数它，分别为$1（发送给谁） $2（标题） $3（内容）。例如发送邮件给
PI:EMAIL，标题为nginx离线，内容是IP地址：1.1.1.1，nginx离线，请立即处理。
媒介配置
点击administrator->media types->create media types
触发器名称
属性 描述
Type 介质类型
script name 脚本名称（需要先定义AlertScriptsPath,mail.sh放在这个目录下,写绝路路径没用）
Enabled 状态
配置 AlertScriptsPath
# mkdir /usr/local/zabbix-2.2.1/alertscripts
# cat /usr/local/zabbix-2.2.1/etc/zabbix_server.conf| grep -i aler
AlertScriptsPath=/usr/local/zabbix-2.2.1/alertscripts
脚本编写
# cd /usr/local/zabbix-2.2.1/alertscripts
# cat mail.sh
#!/bin/sh
to=$1
subject=$2
body=$3
/usr/local/bin/sendEmail -f PI:EMAIL -t "$to" -s smtp.ttlsa.com -u "$subject" -o message-content-type=html -o
message-charset=utf8 -xu PI:EMAIL -xp123456 -m "$body" 2>>/tmp/22.log
备注：sendEmail需要额外安装，请参考《sendEmail发送邮件》
用户媒介
给用户指定媒介:
*点击Administration→Users->打开用户属性表单->在Media tab点击Add
参数介绍
属性 描述
Type 选择媒介类型，这边选自定义媒介
Send to 发送到哪，例如PI:EMAIL,他就是脚本中的$1
When active 报警时间限定，例如1-5,09:00-18:00，只有工作日的9点到18点才会通知，实际工作中，
我们应该是相反。
Use if severity 严重性类型，只接收指定的类型,例如info不想接收，那我不勾选即可。
Status 媒介状态
Enabled – 启用中.
Disabled – 已禁用.
zabbix action 报警配置
介绍
这节内容我们讲解如何配置zabbix报警，也就是zabbix的action配置，action支持如下事件：
 触发器事件 – 触发器状态在OK和PROBLEM之间变化
 发现事件
 自动注册时间 – 新的客户端注册进来
 内部事件 – item转变为unsupported状态，触发器转变为unknown状态
配置 action
Action创建
点击configuration（配置）->Actions（报警）->选择事件来源
Action配置
如上图，我们可以发现这四种事件来源正好是我们前面提到的，选择好你的事件来源之后，点击create action
配置完action的基本内容之后，接下来配置条件
条件配置
Type Of calculation：各种条件之间的关系，包含AND、OR 以及AND/OR，如上图是AND关系，同时要满足以上机
器不在维护状态以及触发器值为PROBLEM才会触发报警的动作。
operaations配置
接下来是“操作”标签，如下：
此处没有报警的动作，当你满足了报警条件也没有任何意义，因为你不执行任何报警的操作，那还要action做什么，
对吧？话说回来，每个action都必须配置operations。
图片上的step说的可能不是很明白，表示阶段，1表示第一次报警，如果2表示第二次报警。action operations可
以添加多个，如下：
action如上图，我们可以看出第1-10次报警都会发邮件给Admin这个用户，每次邮件间隔为300秒，第4-10次开
始（故障发生 15 分钟后）便会发送邮件给 administrators 这个组。这边可以实现故障开始时发送邮件给值班运维，
多少分钟还没处理好发送邮件给主管或者经理，甚至是老板，呵呵。
最后保存之后可以看到我们配置好的action了，只要满足action条件便会出发报警操作。
zabbix 用户宏变量详解 macro
zabbix 宏变量让 zabbix 变得更灵活，变量可以定义在主机、模板以及全局，变量名称类似：{$MACRO}，宏变量都
是大写的。认识了宏变量，你会感叹zabbix越发的强大。
变量可以用于如下地方:
 item名称
 item key参数
 触发器名称和描述
 触发器表达式
 其他地方
宏名称
宏变量名称定义只允许后面包含后面的字符: A-Z , 0-9 , _ , .
zabbix宏变量优先级:
 主机宏(checked first)
 主机模板定义的宏,如果有多个模板，那么按照模板越靠前那么宏的优先级越高
 全局宏(checked last)
话句话说，zabbix 找一个宏的值，首先检查 hosts 有没有，如果没有那么找当前主机的第一个模板，如果还不在找
第二个模板，一直到最后一个模板，如果还是没有找到那将会使用全局宏。如果全局宏也不存在，那么宏变量不会
被替换掉。
自定义宏
定义全局宏， Administration → General → Macros，例如宏名称${TTLSA_SITE}，值www.ttlsa.com.
定义主机/模板级宏变量，编辑主机或者模板，找到Macros选项卡，定义宏变量
宏变量经常用于替代账号、端口、密码等，例如你的某个监控想有用到账号、密码，可以定义为宏，假如下次账号
密码有修改，只需要修改宏即可。而不需要每个监控项都去修改账号密码。
宏变量使用实例
示例一
主机SSH服务:
net.tcp.service[ssh,{$SSH_PORT}]
如果你监控的ssh端口可能会有不同，那么你只需要定义host级别宏变量SSH_PORT
示例二
主机CPU负载触发器
{ca_001:system.cpu.load[,avg1].last(0)}>{$MAX_CPULOAD}
例如有三台主机A\B\C，A主机定义的MAX_CPULOAD为1，B定义的MAX_CPULOAD为2，C定义MAX_CPULOAD
为3，这三台link同一个模板即可。
示例三
主机CPU负载触发器（使用2个宏）
{ca_001:system.cpu.load[,avg1].min({$CPULOAD_PERIOD})}>{$MAX_CPULOAD}
宏可以作为function的一个参数。
zabbix 执行远程命令
概述
监控,有的人只把他当做报警使用,出现问题之后打开跑回家打开电脑，巴拉巴拉的处理掉，大多数时候都是一些小
问题，为何不让zabbix帮你把这些事情处理掉呢？和朋友具体，收到xx硬盘空间慢了、xx服务器高负载等问题，
你要回家处理？多扫兴
瞧瞧zabbix远程执行命令可以做些什么吧:
 重启应用（Apache、nginx、MySQL等等）
 使用IPMI接口重启服务器
 自动释放磁盘空间（删除老文件，清除/tmp目录等等）
 CPU过载时讲一个虚拟机迁移到另外一台物理服务器
 云环境下，一台服务器CPU\硬盘\内存\其他硬件资源不足的情况下，可以自动添加过去
创建一个报警，记得使用邮件报警吗？呵呵，实际上，我们把发送邮件的操作改成执行远程命令就行了
备注：zabbix代理不支持远程命令
远程命令最大长度为255字符，同时支持多个远程命令，如需要执行多条命令，只需要另起一行写命令即可，还有，
远程命令可以使用宏变量。接下来我将一步一步告诉大家如何设置远程命令
配置
首先我们需要在zabbix客户配置文件开启对远程命令的支持，编辑zabbix_agentd.conf，修改
EnableRemoteCommands = 1
重启客户端
备注：Aive zabbix不支持远程命令
然后配置action，Configuration->Actions，选择Operation选项卡，operation type改成Remote Command，选择远
程命令类似 (IPMI, Custom script, SSH, Telnet, Global script)，输入远命令
配置 Action
1) 在Operations选显卡中选择Remote command
2) 选择远程命令类型(IPMI, Custom script, SSH, Telnet, Global script)
3) 写上远程命令
示例:
sudo /etc/init.d/apache restart
上面例子用来在出现状况的情况下重启Apache，务必全包zabbix agent能够执行这个命令.
备注：
1.sudo不用多说了，zabbix用户没有运行某些命令的权限,必须加上.
2.远程命令，自然是在远程的主机后台运行。
Conditions选项卡定义了什么条件下，这个远程命令会被执行，其实这个和前面说的action真没什么区别，大家都
能看懂。下图的意思是，在非维护时间Apache应用出现状况，并且严重性级别为Disaster。满足条件之后，就开始
执行命令了。
访问权限
确保你的zabbix用户有执行权限，如果某些命令需要root权限，那么请使用sudo
# visudo
编辑sudoer文件，zabbix用户便可以执行Apache restart命令了
# allows 'zabbix' user to run all commands without password.
zabbix ALL=NOPASSWD: ALL
# allows 'zabbix' user to restart apache without password.
zabbix ALL=NOPASSWD: /etc/init.d/apache restart
备注：在某些情况下，zabbix需要sudo才能执行命令，请先在/etc/sudoer开启requiretty.具体的方法，请百度或者
google.
使用多种接口执行远程命令
如果目标系统支持多种接口：zabbix agent、IPMI、远程命令（默认），请看如下一些实例
示例1
通过zabbix检测到的一些问题，然后自动重启windows
参数 描述
Operation type Remote command
Type Custom script
Command c:\windows\system32\shutdown.exe -r
示例2
使用IPMI重启服务器
参数 描述
Operation type Remote command
Type IPMI
Command reset on
示例三
使用IPMI关机
参数 描述
Operation type Remote command
Type IPMI
Command power off
zabbix Trapper 监控项配置
概述
zabbix获取数据有超时时间，如果一些数据需要执行比较长的时间才能获取的话，那么zabbix会出现异常，考虑到
这种情况，zabbix增加了Trapper功能，客户端自己提交数据给zabbix，这个通道便是trapper.
使用trapper的步骤如下：
 在zabbix中配置trapper监控项
 传递数据到zabbix中
配置
配置监控项
Configuration（配置） → Hosts（主机）–> 选择需要配置的Host—> 点击右上角的”create item（创建监控项）”
–>输入如下参数
参数说明
属性 描述
Type 这边选择Zabbix trapper.
key 自定义key名称，客户端通过key来传送数据
Type of information 数据类型，比如数字、文本、浮点等等
Allowed hosts 可选，如果指定了，那么当前监控项只接受指定IP地址发送来的数据，多个IP使用逗号
分隔. 这个参数从zabbix
传送数据
我们通过一个最简单的例子来讲解，使用zabbix sender命令传送“ttlsa.com你好”给trapper.
# ./bin/zabbix_sender -z 10.9.4.20 -p 10051 -s "test_01" -k trap -o 'ttlsa.com你好'
info from server: "processed: 1; failed: 0; total: 1; seconds spent: 0.000038"
sent: 1; skipped: 0; total: 1
参数详解:
-z – 指定zabbix server的IP
-p – 指定zabbix server的端口，默认为10051
-s – 指定目标主机，主机名必须是配置中的hostname而不是visible name，切记
-k – 指定key，我们定义的trapper的key，这边便是我们前面定义的trap
-o – 指定要传递的数据
备注：如上的test_01便是目标主机
展示数据
菜单中 Monitoring → Latest data可以查看数据
zabbix Aggregate checks 聚合检测
概述
aggregate checks是一个聚合的检测，例如我想知道某个组的host负载平均值，硬盘剩余总量，或者某几台机器的
这些数据，简单的说，这个方法就是用来了解一个整体水平，而不需要我们一台台看过去。这个方法的数据全部来
之数据库，所以它不需要agent。文章的最后面我们会有一个简单的图例讲述aggregate checks.
aggregate item key语法如下:
groupfunc["Host group","Item key",itemfunc,timeperiod]
多个组使用逗号分隔.
支持按组的 function
GROUP FUNCTION 描述
grpavg 平均值