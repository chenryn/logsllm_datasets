title:HinDom: A Robust Malicious Domain Detection System based on Heterogeneous
Information Network with Transductive Classification
author:Xiaoqing Sun and
Mingkai Tong and
Jiahai Yang and
Xinran Liu and
Heng Liu
HinDom: A Robust Malicious Domain Detection System based on Heterogeneous
Information Network with Transductive Classiﬁcation
Xiaoqing Sun1, Mingkai Tong2, Jiahai Yang3
Institute for Network Sciences and Cyberspace,
Tsinghua University
National Research Center for Information Science
and Technology, Beijing, China
Xinran Liu4, Heng Liu5
4 National Computer Network Emergency
Response Center, Beijing, China
5 Institute for Network Sciences
and Cyberspace Beijing, China
Abstract
Domain name system (DNS) is a crucial part of the Internet,
yet has been widely exploited by cyber attackers. Apart from
making static methods like blacklists or sinkholes infeasible,
some weasel attackers can even bypass detection systems
with machine learning based classiﬁers. As a solution to this
problem, we propose a robust domain detection system named
HinDom. Instead of relying on manually selected features,
HinDom models the DNS scene as a Heterogeneous Informa-
tion Network (HIN) consist of clients, domains, IP addresses
and their diverse relationships. Besides, the metapath-based
transductive classiﬁcation method enables HinDom to detect
malicious domains with only a small fraction of labeled sam-
ples. So far as we know, this is the ﬁrst work to apply HIN in
DNS analysis. We build a prototype of HinDom and evaluate
it in CERNET2 and TUNET. The results reveal that HinDom
is accurate, robust and can identify previously unknown mali-
cious domains.
1
Introduction
Though improved increasingly, the Internet is still widely used
by adversaries who misuse benign services or protocols to run
malicious activities. As a foundation of the Internet, Domain
Name System (DNS) provides mappers among IP addresses
and domain names, identifying services, devices or other re-
sources in the network. As a consequence, domains are one
of the major attack vectors used in various cybercrimes, such
as spams, phishing, malware and botnets, etc. Therefore, it is
essential to effectively detect and block malicious domains
when combating cyber attackers.
After some ﬂexibility-increasing techniques (e.g. Fast-Flux,
Domain-Flux, Double-Flux, etc) make static block meth-
ods like blacklists infeasible, extensive researches are pro-
posed for malicious domain detection. Traditional systems
[3–6, 8, 21] mostly follow a feature based approach. Though
these researches get relatively good performance, potential
problems are commonly ignored. First, in the training phase,
these detection systems require labeled datasets large enough
to guarantee accuracy and coverage. However, the ﬁckle na-
ture of DNS makes accurate labeling an arduous process.
Second, it seems they treat each domain individually and rely
on some manually selected statistical features (e.g. number of
distinct IP addresses, the standard deviation of TTL, etc), mak-
ing the detection system easy to be evaded by sophisticated
attackers [2, 7, 14]. Some researchers [18, 25, 28, 38] intend to
utilize structural information for a more robust detection sys-
tem. However, under the limitations of homogeneous network
methods, almost all these researchers model the DNS-related
data into a client-domain bipartite graph [28] or a domain-IP
bipartite graph [19]. In this case, they can represent at most
two types of entities and utilize only one kind of relationship,
leaving plenty of information untapped.
Facing the problems mentioned above, we propose an in-
telligent domain detection system named HinDom. First, to
fuse more information and introduce higher-level semantics,
we model the DNS scene into a Heterogeneous Information
Network (HIN), as a HIN model can represent diverse com-
ponents and relations. Second, a transductive classiﬁcation
method is applied to make use of the structural information,
and therefore reduces the dependence on labeled datasets. Be-
sides, considering real-world practicality, we design a series
of ﬁltering rules to improve efﬁciency and reduce noises.
In HinDom, we hold the intuitions that, 1) a domain which
has strong associations with the known malicious domains is
likely to be malicious and 2) attackers can falsify domains in-
dividually but cannot easily distort their associations. Thus, to
be more robust against attackers’ evasion tactics, we ﬁrst nat-
urally model the DNS scene into a HIN with client nodes, do-
main nodes, IP address nodes and the following six types of re-
lations among them: (i) Client-query-Domain, client a queries
domain b. (ii) Client-segment-Client, client a and client b be-
long to the same network segment. (iii) Domain-resolve-IP,
domain a is resolved to IP address b. (iv) Domain-similar-
Domain, domain a and domain b have similar character-level
distribution. (v) Domain-cname-Domain, domain a and do-
main b are in a CNAME record. (vi) IP-domain-IP, IP address
USENIX Association        22nd International Symposium on Research in Attacks, Intrusions and Defenses 399a and IP address b are once mapped to the same domain. Then
multiple meta-paths are built to represent connections among
domains and the PathSim algorithm [32] is applied to com-
pute the similarity among domain nodes. The similarities
derived from different meta-paths are combined according
to Laplacian Scores [15], excavating associations among do-
mains over multiple views. Finally, illuminated by LLGC [37],
GNetMine [17] and HetPathMine [22], a meta-path based
transductive classiﬁcation method is introduced to HinDom
to make full use of the information provided by unlabeled
samples.
To sum up, we make the following contributions in this
research:
1) A comprehensive represent model. We naturally rep-
resent the DNS scene by modeling clients, domains, IP ad-
dresses and their diverse relations into a HIN. To the best
of our knowledge, this is the ﬁrst work to introduce HIN in
malicious domain detection. The combined domain similarity
formulated over multiple meta-paths fully represents the rich
semantics contained in DNS-related data.
2) Transductive classiﬁcation in HIN. To reduce the cost
of obtaining label information, we apply a meta-path based
transductive classiﬁcation method in HinDom. The experi-
ment results show that HinDom yields ACC: 0.9960, F1-score:
0.9902 with 90% labeled samples and can still detect mali-
cious domains with ACC: 0.9626, F1-score: 0.9116 when the
initial labeled sample rate decreases to 10%.
3) Practicality evaluation. We implement a prototype of
HinDom and evaluate its performance in two realistic net-
works, CERNET2 and TUNET. During the deployment, we
are able to detect long-buried mining botnets in these two ed-
ucational networks. The evaluation results show that HinDom
is practical in real-world and can identify malicious domains
unrevealed by public blacklists.
The rest of this paper is organized as follows. After pre-
senting related work in Section 2 and introducing necessary
preliminaries in Section 3, we describe HinDom’s framework
and the technical details of each component in Section 4.
Section 5 reports the experiment results and real-world evalu-
ations. We discuss limitations and future work in Section 6
and summarize our work in Section 7.
2 Related Work
Malicious domain detection. As static block methods like
blacklists become infeasible, plenty of researches have been
proposed to detect malicious domains. We group them into
two categories: object-based approaches and association-
based approaches. It is hard to practice a fair comparison
between HinDom and these prior researches, as both their
datasets and system implementations are unavailable. In this
section, we provide detailed introductions of researches in
each group and discuss why HinDom is more advanced.
object-based approaches. Their general method is to ﬁrst
build a classiﬁer based on features extracted from various
DNS-related data. Then after being trained with a ground truth
dataset, the classiﬁer can be used to inspect unlabeled domains.
Notos [3] assigns reputation scores to domains by analyzing
network and zone features. It trains classiﬁers to measure
a domain’s closeness with ﬁve pre-labeled groups (Popular,
Common, Akamai, CDN and Dynamic DNS) and uses the
calculated scores as features for ﬁnal detection. Exposure [6]
extends the scope of detection to malicious domains involved
in spams, phishing, etc and obtains higher efﬁciency with
lower requirements for training data. Kopis [4] gets larger vis-
ibility by leveraging trafﬁc among top-level-domain servers.
Some works aim at detecting a speciﬁc kind of malicious do-
mains. Pleiades [5] detects algorithmically generated domains
(AGDs) by analyzing NXDomain responses in DNS trafﬁc
while others [20,29,36] focus on AGDs’ distinguish character
distributions. In these researches, various resources are ac-
cessed for data enrichment (e.g. ASN, WHOIS, geo-location,
network trafﬁc, etc), yet they are analyzed in a coarse-grained
way. The classiﬁer treats each domain individually and re-
lies on many statistic results as features, which makes the
detection system easy to be evaded by sophisticated attackers.
For instance, character patterns of malicious domains can be
designed to imitate those of the benign ones [2, 14]. It is also
easy for attackers to change temporal patterns like request
intervals or TTL values, which commonly service as major
features of the classiﬁers. HinDom is more robust by further
utilizing the rich structural information among domains.
association-based approaches. Systems in this group get
more macro perspectives by utilizing the relationships among
domains. Manadhata et al. [25] build a bipartite client-domain
graph and apply belief propagation to discover malicious do-
mains. Segugio [28] focuses on the who is querying what
information and constructs a machine-domain bipartite graph
based on DNS trafﬁc between clients and the resolver. Khalil
et al. [18] build a domain-IP graph based on a passive DNS
dataset and then simplify it to a domain graph for detection.
Futai Zou et al. [38] try to utilize both the client-query-domain
relation and the domain-resolve-IP relation by constructing a
DNS query response graph and a passive DNS graph. How-
ever, due to the limitations of homogeneous network analy-
sis methods, all the above researches can represent at most
two types of nodes and utilize only one type of relationship,
leaving plenty of information in DNS-related data untapped.
HinDom solves this problem with a HIN model which can
represent multiple types of nodes and relations for a more
comprehensive analysis.
Heterogeneous information network. In recent years, an
increasing number of researches start to focus on the im-
portance of heterogeneous information network and apply it
to various ﬁelds, such as link prediction, recommender sys-
tem, information fusion, etc [31]. Hindroid [16] is the ﬁrst
work to apply HIN in information security ﬁeld. By analyz-
400          22nd International Symposium on Research in Attacks, Intrusions and DefensesUSENIX Associationing different relations among API calls in Andriod program,
HinDriod extracts higher-level semantics to discover Android
malware precisely. Scorpion [11] use HIN to model relations
among archives, ﬁles, APIs and DLLs for malware detection.
As for transductive classiﬁcation in HIN, GNetMine [17] is
the ﬁrst work to expand a transductive classiﬁcation method
named LLGC [37] from homogeneous network to HIN. Het-
PathMine [22] utilizes metapaths to set different classiﬁcation
criterions for different types of objects. Grempt [35] generates
local estimated labels for unlabeled samples and expands the
transductive method from classiﬁcation to regression. Illumi-
nated by these researches, our work shows HIN’s usefulness
in malicious domain detection.
3 PRELIMINARIES
3.1 Heterogeneous Information Network
In the real world, most systems contain diverse interactions
among different types of components. However, for ease of
analysis, they are usually modeled as homogeneous networks
with unique type of nodes and links. In this case, information
loss is caused by ignoring differences among objects and rela-
tionships. Recently, researchers start to model these systems
into Hetergeneous Information Networks (HINs) [33], which
can fuse richer semantics and support more comprehensive
represents. The basic concepts of HIN are as follows.
p
of
relationships
denoted
the
is
types
the number of
1. Hetergeneous
Deﬁnition
Information Network
(HIN) [33]. Given a graph G=(cid:104)V,E(cid:105), where V is the
set of nodes, E is the set of links. m types of objects are
denoted as V1={v11,v12, ...,v1n1}, ...,Vm={vm1,vm2, ...vmnm},
where ni
i-th type nodes
and
as
are
E1={E11,E12,...,E1q1},...,Ep={ep1,ep2, ...epqp},
where
qi is the number of the i-th type of relations. We regard G
as a HIN if m ≥ 2 or p ≥ 2. When m=p=1, G reduces to a
homogeneous network.
Deﬁnition 2. Network Schema [33]. TG = (cid:104)A,R(cid:105) is the net-
work schema of a HIN G = (cid:104)V,E(cid:105), with type mapping function
ϕ : V → A and ψ : E → R, where A is the set of object types
and R is the set of relationship types.
Deﬁnition 3. metapath [32]. Given a network schema TG =
(cid:104)A,R(cid:105), a metapath P deﬁnes a composite relation R = R1 ◦
R2 ◦ ... ◦ RL between A1 and AL+1, where ◦ is the relation
RL−→
composition operator. P is denoted as A1
AL+1, where L is the length of the metapath.
R1−→ A2
R2−→ ...
Figure 1 shows a HIN model of the bibliographic dataset
DBLP [12]. It represents four types of nodes: paper (P), au-
thor (A), conference (C) and keyword (K), as well as four
kinds of links: authors write papers, papers are published in
conferences, papers contain keywords and a paper cites other
Figure 1: An example of HIN instance (a) and its network
schema (b)
papers. The relation between author and conference can be
represented as metapath A write−−−→ P published
−−−−−→ C, or APC for
short. Metapath APCPA indicates the relation that authors
have published papers on the same conference. To sum up, a
HIN instance contains detailed information while its network
schema describes the structural constraints and metapaths are
used to represent complex relations among entities.
3.2 Transductive Classiﬁcation
Unlike inductive classiﬁcation, instead of learning general de-
cision functions from training data, transductive classiﬁcation
infers from speciﬁc training cases to speciﬁc test cases. The
situation is more like to propagate label information over the
whole network. Therefore, when there are many test samples
but few labeled training samples, transductive methods can
classify more effectively with the utilization of information
from the unlabeled data. Based on deﬁnitions in Section 3.1,
transductive classiﬁcation in HIN can be deﬁned as follow.
Deﬁnition 4. Transductive classiﬁcation in HIN [17].
Given a HIN G = (cid:104)V,E(cid:105) and a subset of its labeled nodes
˜V ⊆ V with their label information denoted by vector Y, trans-
ductive classiﬁcation is to predict labels for nodes in V − ˜V .
4 HinDom System Description
The intuition of HinDom is that domains with strong relation-
ships tend to belong to the same class (benign or malicious).
Besides, attackers can only falsify domain’s features indi-
vidually but cannot easily control the natural associations
generated in DNS. We model clients, domains, IP addresses
as well as their relations into a HIN and analyze six types of
associations among domains based on the following two ob-
servations: (i) Attackers are subjected to the cost of network
resources. That is, though trying to stay dynamic, attackers
tend to reuse network resources due to economic constraints.
USENIX Association        22nd International Symposium on Research in Attacks, Intrusions and Defenses 401Figure 2: The architecture of HinDom
(ii) The set of malicious domains queried by victims of the
same attacker tend to overlap.
As shown in Figure 2, HinDom has ﬁve main components:
Data Collector, HIN Constructor, Graph Pruner, Meta-path
Combiner and Transductive Classiﬁer. After DNS-related data
are collected (step 1), a HIN consist of clients, domains, IP
addresses and their various relations is constructed to repre-
sent the DNS scene (step 2). Then some nodes in the graph
are pruned to ﬁlter noises and reduce computing complexity
(step 3). We analyze six different meta-paths and combine
them according to their inﬂuences on domain detection (step
4). Finally, based on some initial label information, the trans-
ductive classiﬁer categorizes unlabeled domains (step 5). We
analyze the classiﬁcation result and add it to private whitelist
or blacklist for further detection (step 6). In the following, we
will introduce each component in detail.
4.1 Data Collector
To obtain richer information that reveals the behavior of actual
users, instead of sending speciﬁc DNS queries on purpose,
we execute DNS data collection passively. Three major data
sources that we collect are: (i) DNS server log. When dealing
with queries, DNS servers generate logs to collect informa-
tion like source IP, queried domain, time, etc. Among all the
logs, those of the recursive servers are widely used to extract
information about "who is querying what" in local area net-
works. (ii) DNS trafﬁc. It contains the most comprehensive
information with various ﬁelds such as NS, MX, TXT, PTR,
etc. Yet, considering privacy issues, this kind of data is hard to
share publicly. (iii) Passive DNS dataset. Some organizations
(e.g. Internet Systems Consortium, Farsight Security [10],
360 NetLab [26], etc.) have constructed passive DNS (pDNS)
systems with sensors voluntarily deployed by contributors
in their infrastructures. They aggregate the captured DNS
messages before making them publicly available. Records in
pDNS do not contain client information. They only offer the
ﬁrst and last timestamps of a domain’s appearance, as well as
the total number of domain-IP resolutions in between.
The data collector collects resolver’s logs or DNS trafﬁc be-
tween clients and the resolver in a local area network (LAN)
during a time window T, which can be set to an hour, a day
or a week, considering computing resources and the network
size. Noting that HinDom can construct the HIN model just
based on DNS response trafﬁc. But pDNS dataset can provide
richer information on domain-IP relations in both spatial and
temporal dimensions. Besides, when DNS trafﬁc data is un-
available due to permission or technique restrictions, HinDom
can utilize DNS logs construct the client-domain part and use
pDNS dataset for the domain-IP part.
4.2 HIN Constructor
As shown in Figure 3, based on the collected data, HinDom
naturally models the DNS scene as a HIN consist of clients,