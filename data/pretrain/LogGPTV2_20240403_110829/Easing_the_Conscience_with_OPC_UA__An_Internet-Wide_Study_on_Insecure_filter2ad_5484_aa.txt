title:Easing the Conscience with OPC UA: An Internet-Wide Study on Insecure
Deployments
author:Markus Dahlmanns and
Johannes Lohm&quot;oller and
Ina Berenice Fink and
Jan Pennekamp and
Klaus Wehrle and
Martin Henze
Easing the Conscience with OPC UA:
An Internet-Wide Study on Insecure Deployments
Markus Dahlmanns∗, Johannes Lohmöller∗, Ina Berenice Fink∗,
Jan Pennekamp∗, Klaus Wehrle∗, Martin Henze‡
∗Communication and Distributed Systems, RWTH Aachen University, Aachen, Germany
‡Cyber Analysis & Defense, Fraunhofer FKIE, Wachtberg, Germany
{dahlmanns, lohmoeller, fink, pennekamp, wehrle}@comsys.rwth-aachen.de · PI:EMAIL
ABSTRACT
Due to increasing digitalization, formerly isolated industrial net-
works, e.g., for factory and process automation, move closer and
closer to the Internet, mandating secure communication. However,
securely setting up OPC UA, the prime candidate for secure indus-
trial communication, is challenging due to a large variety of insecure
options. To study whether Internet-facing OPC UA appliances are
configured securely, we actively scan the IPv4 address space for pub-
licly reachable OPC UA systems and assess the security of their con-
figurations. We observe problematic security configurations such
as missing access control (on 24% of hosts), disabled security func-
tionality (24%), or use of deprecated cryptographic primitives (25%)
on in total 92% of the reachable deployments. Furthermore, we
discover several hundred devices in multiple autonomous systems
sharing the same security certificate, opening the door for imper-
sonation attacks. Overall, in this paper, we highlight commonly
found security misconfigurations and underline the importance of
appropriate configuration for security-featuring protocols.
CCS CONCEPTS
• Networks → Security protocols; • Security and privacy →
Security protocols;
KEYWORDS
industrial communication, network security, security configuration
ACM Reference Format:
Markus Dahlmanns, Johannes Lohmöller, Ina Berenice Fink, Jan Pennekamp,
Klaus Wehrle, Martin Henze. 2020. Easing the Conscience with OPC UA: An
Internet-Wide Study on Insecure Deployments. In ACM Internet Measure-
ment Conference (IMC ’20), October 27–29, 2020, Virtual Event, USA. ACM,
New York, NY, USA, 10 pages. https://doi.org/10.1145/3419394.3423666
1 INTRODUCTION
Industrial networks, e.g., used for factory and process automation,
traditionally were designed as isolated networks with no connec-
tions to, e.g., office networks or the Internet [6, 44]. Consequently,
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
IMC ’20, October 27–29, 2020, Virtual Event, USA
© 2020 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-8138-3/20/10...$15.00
https://doi.org/10.1145/3419394.3423666
industrial protocols, such as Modbus or ProfiNet, do not implement
any security functionality. However, with an increasing intercon-
nection of industrial networks, serious security threats arise as
evidenced by incidents such as NotPetya or manipulation attacks
on several industrial devices [26]. These threats, coupled with an
increase in industrial communication (e.g., driven by Industry 4.0),
highlight the need for secure industrial protocols.
OPC UA, a comparatively new industrial protocol, released in
2008, was designed from scratch with security in mind [19] and is
attested secure (e.g., by the German Federal Office for Information
Security [19]). However, OPC UA requires an active configuration
of numerous security settings, where incautious decisions lead to
weakly or even unsecured systems. In industrial deployments, such
configurations not only allow for well-known attacks, e.g., eaves-
dropping and theft of confidential data, but also facilitate to control
production lines, cause physical damage, and harm humans [28].
Configuration recommendations [52], e.g., on the use of ciphers,
attempt to confine the spread of insecure deployments.
However, until now, it is unclear whether system operators ad-
here to such security recommendations and therefore prevent unau-
thorized access to modern industrial deployments. In other domains,
active Internet-wide scanning has proven to be a valuable and ac-
cepted method to perform this task [23, 31, 57, 61]. Likewise, differ-
ent works identify the risks of Internet-connected industrial devices
using legacy protocols without security functionality [3, 20, 44].
This motivates us to combine these two streams of research to
analyze the security configurations of industrial deployments.
In this paper, we study whether Internet-connected OPC UA
deployments and their configurations capitalize on the strong level
of security theoretically provided by the underlying protocol de-
sign [19]. To this end, we actively scan the complete IPv4 address
space for publicly reachable OPC UA systems and subsequently
assess the security configurations of found deployments.
Contributions. Our main contributions are as follows.
• We perform weekly measurements of the complete IPv4 address
space over seven months to detect OPC UA devices, which we
can attribute to well-known industrial manufacturers and sectors,
e.g., building automation and power systems.
• We assess the security configurations of Internet-facing OPC UA
devices following official security guidelines and recommenda-
tions. Our results show that 92% of OPC UA systems are con-
figured deficiently, e.g., due to missing access control, disabled
security functionality, use of deprecated cryptographic primi-
tives, or certificate reuse.
• We release our anonymized dataset [11] and our OPC UA exten-
sions of zgrab2 [9] to allow for reproducibility of our results.
IMC ’20, October 27–29, 2020, Virtual Event, USA
Dahlmanns et al.
Sig. Hash
—
SHA1
SHA1
Policy
None
Basic128Rsa15
Basic256
Aes128_Sha256_RsaOaep SHA256
SHA256
Basic256Sha256
Aes256_Sha256_RsaPss
SHA256
A
N
D1
D2
S1
S2
S3
A: abbreviations for policies in the remainder of this paper
Table 1: OPC UA security policies define used ciphers and
key lengths (insecure and deprecated polices marked gray).
Cert. Hash
—
SHA1
SHA1, SHA256
SHA256
SHA256
SHA256
Key Len. [bit]
—
[1024; 2048]
[1024; 2048]
[2048; 4096]
[2048; 4096]
[2048; 4096]
encrypted communication should be used whenever possible. Like-
wise, anonymous authentication should be forbidden. Finally, only
three of the six available security policies should be used, as one
provides no security and two have been deprecated due to the use
of SHA-1 (cf. Table 1). Consequently, it is important to verify that
OPC UA deployments follow these recommendations.
3 RELATED WORK
The benefits of a global view on the security configuration of
OPC UA deployments are emphasized by research on the secu-
rity of Internet-facing industrial appliances as well as Internet-wide
security analyses for Web protocols.
Security of Industrial Deployments: Different works identify
security issues of industrial deployments [6, 26, 33, 53, 56, 62]. While
actual security incidents are seldom [43], already a single incident
can be catastrophic [45]. Remarkably, Mirian et al. [44] still found
ten-thousands of industrial devices connected to the Internet via
legacy and insecure protocols. These devices can be classified, e.g.,
as programmable logic controllers [20]. Other research found robots
controllable via the Internet [13].
Internet scan projects, e.g., Censys [15] or Shodan [59], offer
meta-information about all Internet-connected devices, including
industrial deployments [25, 40], detecting new industrial devices
within one month [3]. Several studies analyzed Shodan’s data on
industrial devices to assess their security and found a vast amount
of devices affected by known software vulnerabilities, e.g., in the
Netherlands [5], in Finland [37], and worldwide [24]. These works
only consider industrial devices using legacy industrial protocols.
Devices using these legacy and insecure industrial protocols
are often subject to scanning activities [4, 17, 35]. While standard
scanning tools, e.g., zmap [16], not necessarily influence normal
operations of industrial devices [8], malicious activities can com-
promise such unprotected devices.
Nawrocki et al. observe communication over legacy industrial
protocols on IXP level and show that 96% of messages originate
from industrial devices [45], emphasizing the need for secure in-
dustrial communication. Assessment guidelines and tools assist
operators in correctly configuring secure industrial protocols such
as OPC UA [30, 52, 55].
However, until now, it is an open question whether OPC UA
deployments actually capitalize on increased security functionality
compared to legacy industrial protocols that provide no security.
Internet Security Measurements: Active and passive mea-
surements have proven useful for insights on the deployment and
(mis-)configuration of security protocols.
Different works examine TLS deployments, i.e., the TLS and
certificate configuration of Internet-facing embedded devices [57],
Figure 1: OPC UA server configuration and communication
steps with clients selecting one of multiple endpoints with
different descriptions a server offers (according to [48–50]).
2 A PRIMER ON OPC UA AND SECURITY
Besides many functional improvements over prior industrial proto-
cols, e.g., cross-vendor communication and platform independence,
OPC UA is the first widely-deployed industrial protocol with built-
in and attested security [19], allowing for secure remote access.
To enable platform-independent communication between indus-
trial devices of different manufacturers, OPC UA servers represent
device functions, sensor values, and other variables as well as their
relationships as a set of nodes in an address space, where name-
spaces provide semantic information about nodes [41]. From this
address space, clients can dynamically request the execution of func-
tions or data of variables. While OPC UA offers a variety of different
communication paradigms and interfaces, e.g., publish/subscribe or
HTTP(S), we focus on the binary interface (standard port 4840 via
TCP) as it is a mandatory feature of all OPC UA devices [49]. It imple-
ments security-specific mechanisms, such as authentication, access
control, as well as integrity protection and confidentiality [50].
Figure 1 illustrates the establishment of a (secure) connection in
OPC UA, specifically focusing on information such as security prim-
itives that an OPC UA server provides to clients. First, as OPC UA
servers can provide data via different endpoints, clients request a
list of endpoints with a description of their security configurations.
Apart from this list, the response includes a certificate that authen-
ticates the server. After choosing one of the available endpoints,
the client starts to establish a secure channel using the channel
parameters in the endpoint description.
Thereby, the security mode in the endpoint description enables or
disables confidentiality and/or authentication for communication.
Notably, establishing a secure channel already allows the client to
authenticate to the server via a certificate, optionally realizing the
first level of access control. Table 1 lists the security policies defining
the cryptographic primitives for the secure channel establishment
in the endpoint description, e.g., hash function and key length.
After establishing a secure channel, clients create a session for
subsequent data transmissions. To access a server’s address space,
clients need to authenticate (using user credentials, a certificate,
or an authentication token) unless anonymous access is enabled.
Depending on the authenticated user, OPC UA servers can enforce
different access control rules at the granularity of single nodes.
Although OPC UA’s protocol design is secure [19], its various
configuration options can significantly impact security. Official
recommendations attempt to improve this situation [52]: First,
communication security should never be disabled, i.e., signed and
Get EndpointsCreate Secure ChannelAuthenticateCreate SessionGet NodesOPC UA ServerSelect Endpoint & DescriptionClientEndpoint /a/Endpoint /b/…Security Mode: Sign&Encrypt⊕Sign ⊕Noneenables / disables confidentiality / authenticitySecurity Policy: Basic256Sha256 ⊕None ⊕…defines cryptographic primitivesAuthentication Token:anon. orcred. or…Description 2…Description 1An Internet-Wide Study on Insecure OPC UA Deployments
IMC ’20, October 27–29, 2020, Virtual Event, USA
the spread of flaws in key generation [27] or TLS implementa-
tions [61], and the shift to newer versions and features [1]. Further,
related work analyzed security certificates regarding configura-
tion [32], validity [7], wrong issuance [38], and certificate trans-
parency logs [22]. Besides HTTPS deployments, also communica-
tion services [31] and SSH were examined [23].
In addition, Internet measurements have been utilized to find
insecurely configured embedded devices [10], detect compromised
IoT devices [42, 46, 58], and study cloud usage as well as communi-
cation security of IoT devices [54]. Motivated by these observations,
we set out to study whether modern Internet-facing industrial ap-
pliances that use the OPC UA protocol capitalize on the promised
increases in security.
Figure 2: OPC UA servers found by our measurements can
often be assigned to well-known manufacturers.
4 OPC UA SCANNING & DATASET
Our methodology to analyze the security configuration of Internet-
facing OPC UA deployments relies on weekly scans of the com-
plete IPv4 address space on the default OPC UA binary protocol
port (TCP, 4840), as implementing the binary protocol is mandatory
for all OPC UA instances [49]. By performing weekly scans, we can
observe situation changes, e.g., software updates and certificate re-
newals. During both, design and execution, we follow principles of
ethical research and established best practices for Internet-wide ac-
tive measurements (cf. Appendix A). Whenever possible, we inform
operators of insecure systems to prevent future harm.
Scanner: We rely on zmap to detect Internet-facing systems
with an open TCP port 4840 and zgrab2, which we extended
with OPC UA functionality based on gopcua, to connect to the
found servers (0.5‰ of hosts with an open TCP port 4840 actu-
ally run OPC UA). Subsequently, we retrieve information on the
provided endpoints, their security configuration, i.e., available se-
curity modes, security policies, and authentication tokens, as well
as establish a secure channel. Whenever a server offers the security
policy Sign or SignAndEncrypt, we send a self-signed certificate
during the secure channel handshake. Furthermore, we also connect
to other host / port combinations listed as endpoints on scanned
OPC UA servers (as of 2020-05-04). For each server with anonymous
access enabled, we traverse through the offered address space to
retrieve all nodes and their access rights.
We use the collected information to (i) validate compliance of se-
curity configurations with security recommendations [52], (ii) com-
pare the conformance of advertised security configurations with
used cryptographic ciphers, and (iii) discover devices neglecting
security best practices [2, 12].
Dataset Overview: In Figure 2, we detail the number of publicly
reachable OPC UA servers over time (seven months between 2020-