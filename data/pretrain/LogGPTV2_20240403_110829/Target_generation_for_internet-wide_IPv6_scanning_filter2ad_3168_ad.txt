a budget of 1 M probes per routed prefix. We can see in Table 2
that 6Gen discovers fewer hits when given fewer seeds. However,
the decrease is not commensurate with the downsampling rate.
For example, compared to 6Gen with the full seed datset, 6Gen
with a 10% sample of seeds still finds 24% as many hits before
dealiasing and 71% after. At initial glance, 6Gen is quite robust to
seed downsampling, and still discovers a large number of hits even
when operating on a significantly reduced input dataset.
7 COMPARISON TO ENTROPY/IP
While Entropy/IP [14] is foremost an analysis tool for identifying
patterns in IPv6 addresses, we can use it to predict new addresses
that align with found patterns. As one of the state-of-the-art target
generation algorithms, Entropy/IP serves as a comparison point
for 6Gen. We compare the algorithms through two evaluations: a
train-and-test experiment where we train on a subset of seeds and
evaluate what fraction of the remaining seeds are predicted, and
an active scan where we compare the number of hits predicted.
We conducted our evaluations using a copy of Entropy/IP pro-
vided by its authors. Our seed dataset was likewise obtained from
the Entropy/IP authors, containing a random sample of 10 K ad-
dresses collected from five content distribution networks (labeled
as CDNs 1–5) used in the original Entropy/IP evaluation [14].
Figure 7: The distribution of TCP/80 hits per routed prefix,
bucketed by the number of seeds in a prefix. We ran 6Gen
with a budget of 1 M probes per prefix. We excluded prefixes
with less than 10 seeds as over 90% had zero hits, and prefixes
with more than 100 K seeds as the population size was too
small for a meaningful distribution.
are slightly more skewed towards fewer ASes than the input seed
dataset. In particular, the top two ASes both belong to Amazon
and accounted for over 20% of our aliased hits. It is interesting to
note that Amazon AS-16509 contained both aliased and dealiased
hits (recall we manually inspected that certain Amazon subnets
were not fully responsive and aliased). Thus, ASes may vary their
aliasing policies across subnets and AS-level filtering of aliasing is
too coarse.
Figure 7 shows the distribution of the number of hits per routed
prefix bucketed by number of seeds. As indicated by the median
values for each bucket, we are able to find active addresses for a
majority of prefixes with more than 10 seeds. We observe a positive
correlation between the number of hits and the number of seeds
per routed prefix. One potential explanation is that 6Gen is not
discovering new addresses, but rather address churn. Hosts at now-
inactive seed addresses may have moved to new addresses, and
6Gen is only rediscovering these hosts. To assess this explanation,
we subtract the number of inactive seeds from the number of hits
for each routed prefix. For a quarter of prefixes, the difference was
positive, demonstrating 6Gen’s utility as it must have found new
addresses that cannot be due to network churn. For the remaining
prefixes, it is unclear whether 6Gen found churned addresses or
simply discovered fewer addresses than inactive seeds.
6.7 Seed Sensitivity
As 6Gen selects address regions to scan based on seeds, the seed
characteristics can impact 6Gen’s performance. Here we explore
how the input seeds affect 6Gen.
6.7.1 Type of Host. Our seed dataset contains IPv6 addresses
from DNS records that correspond with a diverse set of hosts (e.g.,
DNS, web, and SMTP servers). As an initial exploration of whether
seeds of one host type are suitable for discovering other types
of hosts, we executed 6Gen on only DNS name server seeds. We
[101;102)[102;103)[103;104)[104;105)Number of Seeds per Routed Prefix0100101102103104105106Number of HitsIMC ’17, November 1-3, 2017, London, UK
Murdock et al.
(a) CDNs 1 and 2
(b) CDNs 3, 4, and 5
Figure 8: The fraction of addresses in the five CDN test sets found by 6Gen and Entropy/IP during the train-and-test evaluation,
for varying budgets.
(a) Without Filtering for Aliasing
(b) Filtering for Aliasing
Figure 9: The number of TCP/80 hits for targets generated in five CDN networks by 6Gen and Entropy/IP, for varying budgets,
both with and without filtering for aliasing. Both 6Gen and Entropy/IP performed poorly on CDN 1 and did not find a signif-
icant number of hosts, and hence we elided CDN 1 from the graphs. We removed CDN 4 from the post-filtering graph as it
extensively aliased.
7.1 Train-and-Test Evaluation
For each of the five CDN datasets, we split the addresses into
10 groups at random (each with 1 K addresses). We then ran both
6Gen and Entropy/IP on each 10% sample and validated against
the remaining 90%—a form of inverse k-fold validation. We can see
in Figure 8 that 6Gen found a similar or larger number of test ad-
dresses than Entropy/IP for all networks. Excluding CDN 1, where
Entropy/IP failed to predict any test addresses, 6Gen with a bud-
get of 1 M probes predicted 1.04–7.95 times more addresses than
Entropy/IP (with the same budget). We note that both algorithms
failed to discover the majority of test addresses for CDNs 1 and 2.
For CDNs 4 and 5, both algorithms predicted over 88% of the test
addresses. Notably, 6Gen was able to find over 99% of the test ad-
dresses for CDN 4.
We observe that 6Gen is significantly more effective than En-
tropy/IP when operated with a limited budget. However, Entropy/IP
may output a greater diversity of address predictions than 6Gen
at lower budgets, as Entropy/IP samples targets from multiple ad-
dress regions without prioritizing density. This behavior also results
in the smoother performance curves for Entropy/IP compared to
6Gen, as a small increase in the probe budget may allow 6Gen to
greedily incorporate a new dense region, causing a jump in address
discoveries. This difference in how the probe budget affects each
algorithm is noteworthy. Entropy/IP uses the budget only to adjust
01002003004005006007008009001000Budget per CDN (in Thousands of Probes)0.0000.0050.0100.0150.0200.0250.030Fraction of Test Addresses Found6Gen CDN1E/IP CDN16Gen CDN2E/IP CDN201002003004005006007008009001000Budget per CDN (in Thousands of Probes)0.00.10.20.30.40.50.60.70.80.91.0Fraction of Test Addresses Found6Gen CDN3E/IP CDN36Gen CDN4E/IP CDN46Gen CDN5E/IP CDN501002003004005006007008009001000Budget per CDN (in Thousands of Probes)0100200300400500600Number of Hits without Filtering Aliasing(in Thousands)6Gen CDN2E/IP CDN26Gen CDN3E/IP CDN36Gen CDN4E/IP CDN46Gen CDN5E/IP CDN501002003004005006007008009001000Budget per CDN (in Thousands of Probes)020406080100120140160Number of Hits after Filtering Aliasing(in Thousands)6Gen CDN2E/IP CDN26Gen CDN3E/IP CDN36Gen CDN5E/IP CDN5Target Generation for Internet-wide IPv6 Scanning
IMC ’17, November 1-3, 2017, London, UK
the number of targets generated, while 6Gen also uses the budget to
determine the regions of address space it selects. For Entropy/IP’s
original goal of address pattern analysis, the concept of a budget
was not necessary to make decisions. However, modifying the al-
gorithm to specifically cater to scanning purposes, such as through
factoring in a budget when identifying probable address patterns,
may enhance its applicability to Internet-wide scanning.
7.2 Active Scans Comparison
As a second evaluation, we conducted active TCP/80 SYN scans
of each algorithm’s predictions. Similar to the previous experi-
ment, we find that 6Gen performed nearly equivalent to or better
than Entropy/IP for all CDN networks in terms of both total and
dealiased hits (Figure 9). For filtered hits, with the budget set to 1 M
probes, 6Gen found 0.99–134.48 times more hits than Entropy/IP.
Entropy/IP and 6Gen found a similar number of hits in CDN 5,
and neither algorithm received a significant number of responses
in CDN 1. However, 6Gen greatly outperformed Entropy/IP in
CDNs 2, 3, and 4. Note that we removed CDN 4 when consider-
ing filtered hits as it extensively aliased. While the number of hits
discovered serves as a basic metric for evaluating and comparing
6Gen’s and Entropy/IP’s ability to produce promising address tar-
gets, further evaluation is required to understand the differences
between the algorithms.
8 FUTURE WORK
In this paper, we introduced 6Gen and evaluated its effectiveness.
6Gen shows promise and discovers millions of previously-unknown
addresses. However, we also uncovered widespread aliasing. Here,
we discuss several future directions that the research community
needs to consider in order to understand IPv6 address allocation
and improve IPv6 scanning.
IPv6 Dealiasing. Our investigation of IPv6 aliasing in §6.2 un-
covered extensive aliasing in a number of large networks. In total,
98% of the /96 prefixes we discovered responsive targets in exhibited
aliasing on TCP/80. Filtering addresses in aliased regions signifi-
cantly reduced our hits, resulting in a different characterization of
6Gen’s performance. Future efforts in IPv6 target generation and
scanning must factor in aliasing when quantifying performance.
We note that prior work on IPv6 target generation has not factored
in aliasing [14, 31] and their findings may not represent the number
of distinct hosts that each algorithm can discover.
Detecting IPv6 aliasing is itself a significant challenge. In this
work, we used a simple approach of detecting aliasing at the /96
prefix granularity, but this method naturally has limitations (such as
identifying smaller-scale aliasing). Prior efforts to develop effective
IPv6 dealiasing have shown promise, but are limited by features
enabled on the target host. Further exploration is needed to develop
scalable and reliable alias resolution, to better understand the topol-
ogy of the IPv6 Internet, and to more accurately characterize IPv6
scanner performance.
Deeper Exploration of Target Generation Algorithms. Our
initial evaluation of TGAs focused on the ability of 6Gen and En-
tropy/IP to discover hosts responsive on TCP/80 using seeds gath-
ered from DNS records. We must more deeply understand how each
algorithm is affected by different network characteristics, the types
of hosts found by each, and the tradeoffs between the two. Further
exploration of other network services and seed address inputs will
also help shed light on the operating characteristics of these algo-
rithms. For example, how do 6Gen and Entropy/IP perform when
seeking SMTP or SSH servers? Do their predictions differ when
run on only active seeds (seeds freshly probed for responsiveness),
or on seeds that are first dealiased?
We also lack a deep understanding of when each algorithm is
effective and why. Are there certain types of address assignment
patterns that an algorithm is not amenable to discovering? Are there
optimizations we can apply to better improve probing efficiency,
based on common patterns? For example, 6Gen’s budget use is
suboptimal when a network employs a clear address assignment
pattern, as it fails to leverage learnable information for budget
conservation.
There is still much to consider about 6Gen’s operations. For
example, we employed 6Gen with an identical budget for all routed
prefixes. However, it might be natural to allocate budgets differently
for various routed prefixes. For example, a routed prefix’s budget
could be dependent on the number of seeds within, or the size of the
prefix itself. This may heavily skew the target generation towards
denser networks though, trading off diversity for number of active
addresses found. What the most suitable budget allocation policy
is, and how this differs based on target generation goals, is still an
open question.
Scanner Integration. In this paper, we have considered the
TGA as a distinct module that produces targets fed to a network
scanner. However, tight integration between the target generation
and the scanning processes should allow for more effective scanning.
The target generation could provide the initial regions of address
space to begin exploring. As a scan progresses, the results can be fed
back to the generation algorithm, allowing it to dynamically adapt
its predictions based on the additional information. For example,
we can early terminate scanning of a region originally predicted
as promising but that has yielded few discovered hosts. Similarly,
we can test regions that have high hit rates for aliasing, and halt
scanning if aliasing is detected. These measures would allow the
scanner to reallocate budget to networks that prove promising in
reality. Ultimately, such integration allows the target generation
to behave more intelligently, as it is has a feedback loop to better
inform its decisions.
9 CONCLUSION
In this work, we explored the basic challenge of generating promis-
ing IPv6 addresses to scan. We presented 6Gen, a new target gener-
ation algorithm that executes on a set of input seed addresses, given
a user-supplied probe budget. 6Gen operates under the assumption
that address space regions with high densities of similar seeds cor-
relate with those rich with active hosts, and seeks out targets in
these regions.
When evaluated on real-world seed datasets containing ad-
dresses in thousands of network prefixes, 6Gen showed promise and
discovered over 55 M responsive addresses (with a budget of 1 M
probes per routed prefix). However, upon inspecting these hits, we
also uncovered a small number of networks exhibiting large-scale
IP aliasing. Over 98% of our original hits were in aliased networks,
IMC ’17, November 1-3, 2017, London, UK
Murdock et al.
highlighting the extent that IP aliasing can affect performance met-
rics for target generation. When filtering out aliased hits, 6Gen
was still able to find over a million new addresses. Our comparison
with Entropy/IP [14]—the current state of the art TGA—likewise
demonstrated 6Gen’s utility. On the five seed datasets used in the
original Entropy/IP evaluation, 6Gen recovered between 1–8 times
as many addresses during a train-and-test evaluation.
Our exploration of the IPv6 target generation space has high-
lighted important areas for future investigation. In particular, IPv6
aliasing will be a network feature that future TGAs and network
scanners must contend with. In addition, target generation must be-
come more intelligent, perhaps through tightly integrating with the
network scanner. With an IPv6 scanner that can obtain a significant
degree of global visibility into the IPv6 address space, researchers
can begin to tackle the myriad of security and measurement ques-
tions that have been explored for IPv4.
10 ACKNOWLEDGEMENTS
We thank Arthur Berger, David Plonka, and Paul Pearce for exten-
sive discussion and feedback. We are grateful to Jed Crandall and
the University of New Mexico network administrators for provid-
ing us with infrastructure to conduct Internet-scale IPv6 scanning,
and supporting our efforts. We additionally appreciate Jon Hart’s
assistance in obtaining and understanding our seed dataset of IPv6
addresses. This work was supported in part by CNS-1111672, CNS-
1237265, and CNS-1518921. The opinions expressed in this paper
do not necessarily reflect those of the research sponsors.
REFERENCES
[1] OpenMP. http://www.openmp.org.
[2] Alexa. Top 1,000,000 Sites. http://www.alexa.com/topsites.
[3] S. M. Bellovin, B. Cheswick, and A. Keromytis. Worm Propagation Strategies in
an IPv6 Internet. ;login: The USENIX Magazine, 2006.
J. W. Bos, J. A. Halderman, N. Heninger, J. Moore, M. Naehrig, and E. Wustrow.
Elliptic Curve Cryptography in Practice. In International Conference on Financial
Cryptography and Data Security, 2014.
[5] Center for Applied Internet Data Analysis. Archipelago (Ark) Measurement
Infrastructure. http://www.caida.org/projects/ark/.
[6] Center for Applied Internet Data Analysis. CAIDA IPv6 DNS Names Dataset.
[4]
http://www.caida.org/data/active/ipv6dnsnamesdataset.xml.
[7] Center for Applied Internet Data Analysis. RouteViews Prefix to AS Mappings
Dataset. http://www.caida.org/data/routing/routeviews-prefix2as.xml.
[8]
J. Czyz, M. Luckie, M. Allman, and M. Bailey. Don’t Forget to Lock the Back Door!
A Characterization of IPv6 Network Security Policy. In Network and Distributed
Systems Security (NDSS), 2016.
[9] S. Deering and R. Hinden. Internet Protocol, Version 6 (IPv6) Specification. RFC
2460 (Standards Track), 1998.
[12] Z. Durumeric, E. Wustrow, and J. A. Halderman. ZMap: Fast Internet-Wide
[10] R. Droms, J. Bound, B. Volz, T. Lemon, C. Perkins, and M. Carney. Dynamic Host
Configuration Protocol for IPv6 (DHCPv6). RFC 3315 (Standards Track), 2003.
[11] Z. Durumeric, F. Li, J. Kasten, N. Weaver, J. Amann, J. Beekman, M. Payer,
D. Adrian, V. Paxson, M. Bailey, and J. A. Halderman. The Matter of Heart-
bleed. In ACM Internet Measurement Conference (IMC), 2014.
Scanning and Its Security Applications. In Usenix Security, 2013.
[13] T. Fiebig, K. Borgolte, S. Hao, C. Kruegel, and G. Vigna. Something From Noth-
ing (There): Collecting Global IPv6 Datasets From DNS. In Passive and Active
Measurement (PAM), 2017.
[14] P. Foremski, D. Plonka, and A. Berger. Entropy/IP: Uncovering Structure in IPv6
Addresses. In ACM Internet Measurement Conference (IMC), 2016.
//www.net.in.tum.de/pub/ipv6-hitlist/.
[15] O. Gasser, Q. Scheitle, S. Gebhard, and G. Carle. IPv6 Hitlist Collection. http:
[16] O. Gasser, Q. Scheitle, S. Gebhard, and G. Carle. Scanning the IPv6 Internet:
Towards a Comprehensive Hitlist. Network Traffic Measurement and Analysis
Conference (TMA), 2016.
[17] F. Gont and T. Chown. Network Reconnaissance in IPv6 Networks. RFC 7707
(Informational), 2016.
[18] R. D. Graham. MASSCAN: Mass IP Port Scanner. https://github.com/robertdavid
graham/masscan.
Journal, 1950.
Standard), 2006.
[19] R. W. Hamming. Error Detecting and Error Correcting Codes. Bell Labs Technical
[20] R. Hinden and S. Deering. IP Version 6 Addressing Architecture. RFC 4291 (Draft
[22] M. Luckie, R. Beverly, W. Brinkmeyer, et al. Speedtrap: Internet-Scale IPv6 Alias
[21] F. Li, Z. Durumeric, J. Czyz, M. Karami, M. Bailey, D. McCoy, S. Savage, and V. Pax-
son. You’ve Got Vulnerability: Exploring Effective Vulnerability Notifications.
In USENIX Security Symposium, 2016.
Resolution. In ACM Internet Measurement Conference (IMC), 2013.
[23] P. Marchetta, V. Persico, and A. Pescapè. Pythia: Yet Another Active Probing
Technique for Alias Resolution. In ACM Emerging Networking Experiments and
Technologies (CoNEXT), 2013.
[24] R. Padmanabhan, Z. Li, D. Levin, and N. Spring. UAv6: Alias Resolution in IPv6
Using Unused Addresses. In Passive and Active Measurement (PAM), 2015.
Addresses. In ACM Internet Measurement Conference (IMC), 2015.
[25] D. Plonka and A. Berger. Temporal and Spatial Classification of Active IPv6
[26] Rapid7. DNS Records (ANY). https://scans.io/study/sonar.fdns.
[27] Rapid7. Project Sonar. https://sonar.labs.rapid7.com/.
[28] Rapid7. Reverse DNS. https://scans.io/study/sonar.rdns.
[29] Q. Scheitle, O. Gasser, M. Rouhi, and G. Carle. Large-scale Classification of
IPv6-IPv4 Siblings with Variable Clock Skew. In Network Traffic Measurement
and Analysis Conference (TMA), 2017.
[30] S. Thomson, T. Narten, and T. Jinmei. IPv6 Stateless Address Autoconfiguration.
RFC 4862 (Draft Standard), 2007.
J. Ullrich, P. Kieseberg, K. Krombholz, and E. Weippl. On Reconnaissance with
IPv6: A Pattern-Based Scanning Approach. In Availability, Reliability and Security
(ARES), 2015.
[31]