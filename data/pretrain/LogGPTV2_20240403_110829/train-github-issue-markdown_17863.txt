## Bug Report
**For English only** , other languages will not accept.
Before report a bug, make sure you have:
  * Searched open and closed GitHub issues.
  * Read documentation: ShardingSphere Doc.
Please pay attention on issues you submitted, because we maybe need more
details.  
If no response **more than 7 days** and we cannot reproduce it on current
information, we will **close it**.
Please answer these questions before submitting your issue. Thanks!
### Which version of ShardingSphere did you use?
4.0.0-RC2
### Which project did you use? Sharding-JDBC or Sharding-Proxy?
Sharding-JDBC
### Expected behavior
the query result is decrypt
### Actual behavior
the query result is still encrypt
### Reason analyze (If you can)
thie query result not use the encryptRule to decrypt
### Steps to reproduce the behavior, such as: SQL to execute, sharding rule
configuration, when exception occur etc.
spring:  
shardingsphere:  
datasource:  
names: master,slave0  
master:  
type: com.alibaba.druid.pool.DruidDataSource  
driver-class-name: org.h2.Driver  
url: jdbc:h2:mem:dbtest:public;DB_CLOSE_DELAY=-1;MODE=MySQL  
slave0:  
type: com.alibaba.druid.pool.DruidDataSource  
driver-class-name: org.h2.Driver  
url: jdbc:h2:mem:dbtest:public;DB_CLOSE_DELAY=-1;MODE=MySQL  
sharding:  
defaultDataSourceName: dataSource  
master-slave-rules:  
dataSource:  
master-data-source-name: master  
slave-data-source-names[0]: slave0  
load-balance-algorithm-type: ROUND_ROBIN  
encryptRule:  
encryptors:  
encryptor_aes:  
type: AES  
props:  
aes.key.value: 123456  
tables:  
company:  
columns:  
address:  
cipherColumn: address  
encryptor: encryptor_aes  
full_name:  
cipherColumn: full_name  
encryptor: encryptor_aes  
props:  
sql.show: true
### Example codes for reproduce this issue (such as a github link).