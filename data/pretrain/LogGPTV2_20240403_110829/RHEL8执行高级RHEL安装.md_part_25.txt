# []{#kickstart-commands-and-options-reference_installing-rhel-as-an-experienced-user.html#kickstart-commands-for-network-configuration_kickstart-commands-and-options-reference}kickstart 命令用于网络配置 {.title}
:::
在这个列表中的 Kickstart 命令可让您在系统中配置联网。
::: section
::: titlepage
## []{#kickstart-commands-and-options-reference_installing-rhel-as-an-experienced-user.html#network_kickstart-commands-for-network-configuration}Network（可选） {.title}
:::
使用可选的 `network`{.literal} Kickstart
命令配置目标系统的网络信息，并在安装环境中激活网络设备。在第一个
`network`{.literal} 命令中指定的设备会自动激活。您还可以使用
`--activate`{.literal} 选项显式激活设备。
::: title
**语法**
:::
``` screen
network OPTIONS
```
::: itemizedlist
**选项**
-   `--activate`{.literal} - 在安装环境中激活该设备。
    如果您使用的是已经激活的设备中的 `--activate`{.literal}
    选项（例如：使用引导选项配置的界面以便系统可以检索 Kickstart
    文件），那么会重新激活该设备使用在 Kickstart 文件中指定的详情。
    使用 `--nodefroute`{.literal} 选项可防止设备使用默认路由。
-   `--no-activate`{.literal} - 不要在安装环境中激活这个设备。
    默认情况下，无论 `--activate`{.literal} 选项是什么，Anaconda 会激活
    Kickstart 文件中的第一个网络设备。您可以使用
    `--no-activate`{.literal} 选项禁用默认设置。
-   `--bootproto=`{.literal} - `dhcp`{.literal}、`bootp`{.literal}
    `ibft`{.literal} 或 `static`{.literal} 之一。默认选项是
    `dhcp`{.literal}; `bootp`{.literal} 选项和 `dhcp`{.literal}
    选项的效果相同。要禁用设备的 `ipv4`{.literal} 配置，使用
    `--noipv4`{.literal} 选项。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    这个选项配置设备的 ipv4 配置。对于 ipv6 配置，使用
    `--ipv6`{.literal} 和 `--ipv6gateway`{.literal} 选项。
    :::
    DHCP 方法使用 DHCP 服务器系统来获得它的网络配置。BOOTP
    方法类似，需要 BOOTP 服务器来提供网络配置。要指示系统使用 DHCP:
    ``` screen
    network --bootproto=dhcp
    ```
    要指示机器使用 BOOTP 获取其网络配置，在 Kickstart 文件中使用以下行：
    ``` screen
    network --bootproto=bootp
    ```
    要指示机器使用 iBFT 中指定的配置，使用：
    ``` screen
    network --bootproto=ibft
    ```
    `static`{.literal} 方法要求您在 Kickstart 文件中至少指定 IP
    地址和子网掩码。这个信息是静态的，并在安装过程中和安装后使用。
    所有静态网络配置信息必须在[*一行*]{.emphasis}中指定 ;
    您不能象在命令行中换行一样使用反斜杠(`\`{.literal})来换行。
    ``` screen
    network --bootproto=static --ip=10.0.2.15 --netmask=255.255.255.0 --gateway=10.0.2.254 --nameserver=10.0.2.1
    ```
    您还可以同时配置多个名称服务器。要做到这一点，使用
    `--nameserver=`{.literal} 选项一次，并指定每个 IP 地址，用逗号分开：
    ``` screen
    network --bootproto=static --ip=10.0.2.15 --netmask=255.255.255.0 --gateway=10.0.2.254 --nameserver=192.168.2.1,192.168.3.1
    ```
-   `--device=`{.literal} - 使用以下 `network`{.literal}
    命令指定要配置的设备（并最终在 Anaconda 中激活）。
    如果在[*第一次*]{.emphasis}使用 `network`{.literal} 命令时缺少
    `--device=`{.literal} 选项，会使用 `ksdevice=`{.literal} Anaconda
    引导选项。请注意，这个行为被视为已弃用 ;
    在大多数情况下，您应该为每个 `network`{.literal} 命令指定一个
    `--device=`{.literal}。
    如果缺少该 `--device=`{.literal} 选项，则同一 Kickstart 文件中后续
    `network`{.literal}
    命令的行为都会被取消指定。请确定您为第一个之后的任何
    `network`{.literal} 命令指定这个选项。
    您可以使用以下任一方法指定要激活的设备：
    ::: informalexample
    ::: itemizedlist
    -   接口的设备名称，例如 `em1`{.literal}
    -   接口的 MAC 地址，例如 `01:23:45:67:89:ab`{.literal}
    -   关键字 `link`{.literal}，指定链接为 `up`{.literal}
        状态的第一个接口
    -   关键字 `bootif`{.literal}，使用 pxelinux 在 `BOOTIF`{.literal}
        变量中设置的 MAC 地址。在您的 `pxelinux.cfg`{.literal}
        文件中设置 `IPAPPEND 2`{.literal} 将 pxelinux 设置
        `BOOTIF`{.literal} 变量。
    :::
    :::
    例如：
    ``` screen
    network --bootproto=dhcp --device=em1
    ```
-   `--ip=`{.literal} - 设备的 IP 地址。
-   `--ipv6=`{.literal} - 设备的 IPv6 地址，格式为
    [*address*]{.emphasis}\[/[*prefix*]{.emphasis}
    [*length*]{.emphasis}\] - 例如
    `` 3ffe:ffff:0:1::1/128 `. If prefix is omitted, `64 ``{.literal}
    。您还可以使用 `auto`{.literal} 用于自动配置，或使用
    `dhcp`{.literal} 用于只使用 DHCPv6 的配置（无路由器广告）。
-   `--gateway=`{.literal} - 单一 IPv4 地址的默认网关。
-   `--ipv6gateway=`{.literal} - 单一 IPv6 地址的默认网关。
-   `--nodefroute`{.literal} -
    防止将接口设置为默认路由。当您用这个选项激活附加设备时使用
    `--activate=`{.literal} 选项，例如：用于 iSCSI 目标的单独子网中的
    NIC。
-   `--nameserver=`{.literal} - DNS 名称服务器作为 IP
    地址。要指定一个以上名称服务器，使用这个选项，并使用逗号分隔每个 IP
    地址。
-   `--netmask=`{.literal} - 安装的系统的网络掩码。
-   `--hostname=`{.literal}：用于配置目标系统的主机名。主机名可以是完全限定域名(FQDN)，格式为
    `hostname.domainname`{.literal}，也可以是没有域的短主机名。如果您使用动态主机配置协议(DHCP)服务自动为连接的系统分配域名，则仅指定短主机名。
    如果您只想配置目标系统的主机名，使用 `network`{.literal} 命令中的
    `--hostname`{.literal} 选项，且不包含任何其他选项。
    如果您在配置主机名时提供附加选项，`network`{.literal}
    命令将使用指定的选项配置设备。如果您没有指定使用
    `--device`{.literal} 选项配置哪个设备，则会使用默认的
    `--device link`{.literal} 值。另外，如果您没有使用
    `--bootproto`{.literal} 选项指定协议，则该设备会被默认配置为使用
    DHCP。
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    如果您的网络[*没有*]{.emphasis}提供 DHCP 服务，则必须使用 FQDN
    作为系统的主机名。
    :::
-   `--ethtool=`{.literal} -
    指定用于网络设备的附加底层设置，可将其传送给 ethtool 程序。
-   `--onboot=`{.literal} - 是否在引导时启用该设备。
-   `--dhcpclass=`{.literal} - DHCP 类别。
-   `--mtu=`{.literal} - 该设备的 MTU。
-   `--noipv4`{.literal} - 在这个设备中禁用 IPv4。
-   `--noipv6`{.literal} - 在这个设备中禁用 IPv6。
-   `--bondslaves=`{.literal} - 使用这个选项时，由 `--device=`{.literal}
    选项指定的绑定设备会使用 `--bondslaves=`{.literal}
    选项中定义的辅助设备创建。例如：
    ``` screen
    network --device=bond0 --bondslaves=em1,em2
    ```
    以上命令创建了一个名为 `bond0`{.literal} 的绑定设备，将
    `em1`{.literal} 和 `em2`{.literal} 接口用作其辅助设备。
-   `--bondopts=`{.literal} - 绑定接口的可选参数列表，使用
    `--device=`{.literal} 选项和 `--bondslaves=`{.literal}
    选项指定。此列表中的选项必须以逗号["[
    (,]{.quote}"]{.quote})或分号["[
    (;)分隔]{.quote}"]{.quote}。如果某个选项本身包含一个逗号，请使用分号来分隔选项。例如：
    ``` screen
    network --bondopts=mode=active-backup,balance-rr;primary=eth1
    ```
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    `--bondopts=mode=`{.literal} 参数只支持完整模式名称，如
    `balance-rr`{.literal} 或
    `broadcast`{.literal}，而不是它们的数字表示，如 `0`{.literal} 或
    `3`{.literal}。[有关可用模式和支持的模式列表，请参阅配置和管理网络指南](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_networking/configuring-network-bonding_configuring-and-managing-networking#upstream-switch-configuration-depending-on-the-bonding-modes_configuring-network-bonding){.link}。
    :::
-   `--vlanid=`{.literal} - 为使用 `--device=`{.literal}
    作为父设备创建的设备指定虚拟 LAN(VLAN)ID 号（802.1q
    标签）。例如，`network --device=em1 --vlanid=171`{.literal}
    创建一个虚拟 LAN 设备 `em1.171`{.literal}。
-   `--interfacename=`{.literal} - 为虚拟 LAN
    设备指定自定义接口名称。当该选项生成的默认名称不必要时使用
    `--vlanid=`{.literal} 选项。这个选项必须与 `--vlanid=`{.literal}
    选项一起使用。例如：
    ``` screen
    network --device=em1 --vlanid=171 --interfacename=vlan171
    ```
    以上命令在 `em1`{.literal} 设备上创建了 ID 为 `171`{.literal} 的虚拟
    LAN 接口（名为 `vlan171`{.literal}） 。
    接口名称可以是任意名称（例如，`my-vlan`{.literal}），但在某些情况下，必须遵循以下约定：
    ::: informalexample
    ::: itemizedlist
    -   如果名称中包含句点（`.`{.literal}），它的格式必须是
        `NAME.ID`{.literal}。[*NAME*]{.emphasis} 是任意的，但
        [*ID*]{.emphasis} 必须是 VLAN ID。例如： `em1.171`{.literal} 或
        `my-vlan.171`{.literal}。
    -   以 `vlan`{.literal} 开头的名称必须使用 `vlanID`{.literal} 格式 -
        例如 `vlan171`{.literal}。
    :::
    :::
-   `--teamslaves=`{.literal} - `--device=`{.literal}
    选项指定的团队设备将使用这个选项中指定的辅助设备创建。辅助设备用逗号分开。辅助设备可以跟随其配置，该配置是一个单引号括起的
    JSON 字符串，其中双引号用 `\`{.literal} 字符转义。例如：
    ``` screen
    network --teamslaves="p3p1'{\"prio\": -10, \"sticky\": true}',p3p2'{\"prio\": 100}'"
    ```
    另请参阅 `--teamconfig=`{.literal} 选项。
-   `--teamconfig=`{.literal} - 用双引号括起来的 team 设备配置，它是一个
    JSON 字符串，其中的双引号使用 `\`{.literal} 进行转义。该设备名称由
    `--device=`{.literal} 选项指定，其辅助设备及其配置由
    `--teamslaves=`{.literal} 选项指定。例如：
    ``` screen
    network --device team0 --activate --bootproto static --ip=10.34.102.222 --netmask=255.255.255.0 --gateway=10.34.102.254 --nameserver=10.34.39.2 --teamslaves="p3p1'{\"prio\": -10, \"sticky\": true}',p3p2'{\"prio\": 100}'" --teamconfig="{\"runner\": {\"name\": \"activebackup\"}}"
    ```
-   `--bridgeslaves=`{.literal} - 使用这个选项时，将生成使用这个
    `--device=`{.literal} 选项指定的设备名称的网络桥接，并在
    `--bridgeslaves=`{.literal} 选项中定义的设备添加到网桥中。例如：
    ``` screen
    network --device=bridge0 --bridgeslaves=em1
    ```
-   `--bridgeopts=`{.literal} -
    桥接接口用逗号分开的可选参数列表。可用值包括
    `stp`{.literal}、`priority`{.literal}、`forward-delay`{.literal}、`hello-time`{.literal}、
    `max-age`{.literal} 和
    `ageing-time`{.literal}。有关这些参数的详情，请查看 [*[bridge
    setting]{.citetitle}*]{.emphasis} `nm-settings(5)`{.literal} man
    page 或
    [https://developer.gnome.org/NetworkManager/0.9/ref-settings.html](https://developer.gnome.org/NetworkManager/0.9/ref-settings.html){.link}
    中的表。
    有关网络桥接的常规信息，请参阅[配置和管理网络](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_networking/){.link}文档。
-   `--bindto=mac`{.literal} -
    在安装的系统中将设备配置（`ifcfg`{.literal}）文件绑定到设备 MAC
    地址（`HWADDR`{.literal}）而不是默认绑定到接口名称（`DEVICE`{.literal}）。请注意，这个选项独立于
    `--device=`{.literal} 选项 - `--bindto=mac`{.literal}
    将被应用，即使同一 `network`{.literal}
    命令也指定了一个设备名称，`link`{.literal} 或 `bootif`{.literal}。
:::
::: itemizedlist
**备注**
-   由于命名方案的变化，在 Red Hat Enterprise Linux 8 中
    `ethN`{.literal} 设备名（如
    `eth0`{.literal}）将不再可用。有关设备命名方案的更多信息，请参阅上游文档[可扩展网络接口名称](https://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames/){.link}。
-   如果您使用 Kickstart
    选项或者引导选项指定网络中的安装库，但在安装开始时没有可用的网络，安装程序会显示这个信息
    [**[Network Configuration]{.GUI}**]{.strong} 在显示
    之前设置网络连接的窗口 [**[Installation Summary]{.GUI}**]{.strong}
    窗口.如需了解更多详细信息，请参阅执行[*标准 RHEL
    安装文档*]{.emphasis}中的[配置网络和主机名选项](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/performing_a_standard_rhel_installation/graphical-installation_graphical-installation#network-hostname_configuring-system-settings){.link}部分。
:::
:::
::: section
::: titlepage
## []{#kickstart-commands-and-options-reference_installing-rhel-as-an-experienced-user.html#realm_kickstart-commands-for-network-configuration}realm {.title}
:::
`realm`{.literal} Kickstart 命令是可选的。使用它加入 Active Directory 或
IPA 域。有关这个命令的详情请参考 `realm(8)`{.literal} man page 中的
`join`{.literal} 部分。
::: title
**语法**
:::
``` screen
realm join [OPTIONS] domain
```
::: itemizedlist
**必填选项**
-   `domain`{.literal} - 要加入的域。
:::
::: itemizedlist
**选项**
-   `--computer-ou=OU=`{.literal} -
    提供可分辨的机构单元名称以便创建计算机帐户。可识别名称的具体格式取决于客户端软件和成员软件。可省略可识别名称的根
    DSE 部分。
-   `--no-password`{.literal} - 无需密码自动加入。
-   `--one-time-password=`{.literal} -
    使用一次性密码加入。不是所有域都支持它。
-   `--client-software=`{.literal} -