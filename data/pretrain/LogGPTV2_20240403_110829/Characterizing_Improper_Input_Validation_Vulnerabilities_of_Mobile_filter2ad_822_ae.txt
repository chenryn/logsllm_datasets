### Function and Reduction

- **Running Distances (0 > d ≤ 350m ± e1)**
  - **Strava**: 98.65% reduction
  - **Map My Run**: 99.58% reduction
  - **Fitbit**: 99.58% reduction

- **Bus Speeds (0 > v ≤ 70mph ± e2)**
  - **Transit**: 94.25% reduction

- **Price Validation (|aux_price - reported_price| < threshold)**
  - When used in isolation, Neighbors by Ring uses an out-of-band channel for verifying new users (e.g., email). Police Detector assigns user IDs based on unique Android IDs, and Gas Buddy and Google Maps use client certificates. However, these methods are bypassable either through technical means, as demonstrated in our work, or through physical means [45].

### Reputation Schemes and Input Validation

Reputation schemes have gained popularity and found applications in other crowdsourcing domains, such as online reviews. However, they suffer from a cold start problem, which adversaries can exploit to inject high-impact values before being penalized. Input validation can be a valuable addition to our defense arsenal, minimizing the adversary's incentive during the cold start period and throughout the lifetime of a participant account. This also makes the amount of reporting more manageable.

Such strategies are easy to implement, can be immediately deployed with a server-side software update, and do not require any special capabilities on the participants' devices. For example, restricting running distances to the world record (350 miles) with a 20% error margin, which is much higher than the 13m smartphone GPS empirical error [38], would result in a 98.65%, 99.58%, and 95.80% reduction in the maximum allowed value for Strava, Map My Run, and Fitbit, respectively. Constraining accepted bus speeds to the maximum speed limit (70 mph in the UK) with a 20% error margin would result in a 94.25% reduction in the speed allowed for Transit, significantly limiting the impact an adversary can have on bus arrival times.

Similarly, location-based services can use geo-fencing to filter reports. Using the CE-2D strategy, we generated 2701 values but filtered out any that were not within a threshold distance from the nearest road segment. Only 3 and 33 values were accepted, resulting in a 99.89% and 98.78% reduction, respectively. For pricing services, inputs can be restricted according to market price fluctuations. Basket Savings can leverage auxiliary data sources [32, 49] for this. Additionally, it could employ majority voting or other verification mechanisms before displaying a value, as grocery item prices do not change frequently [41].

Even with these restrictions, a determined adversary can sometimes generate realistic inputs, as demonstrated in the case of NbR. Detecting fakes remains an open and challenging problem. We used the GPT-2 Output Detector [46], which is specifically designed to detect inputs generated by the GPT-2 model, but it resulted in poor precision and recall (55% and 53%, respectively). While working to improve automated detection, visual hints about a reporting account's maturity and reputation can help users better judge the veracity of crowdsourced values, especially when real-time distribution is critical.

### Related Work

Previous studies have demonstrated data poisoning in crowdsourcing [25, 40, 51, 55, 56]. Our work focuses on services interfacing with users through mobile apps. More related works include [42, 53], which study specific MCS domains. Polakis et al. [42] showed that two location-based MCSs are vulnerable to fake check-ins. In contrast, we observe a more general vulnerability of IIV and use our observations to design a broader study characterizing the exposure of MCS across domains to improper inputs. Proposed defenses include majority voting [37, 48], reputation systems [54, 58], and trusted sensing [31]. However, these are not always applied in MCSs, and even if they are, their effect is limited when used in isolation.

Related to our framework, prior works also perform analysis from the perspective of mobile apps but focus on IoT devices rather than MCSs [26, 27]. Others analyze the UI of mobile apps similar to our DEM approach [33, 34, 39, 59]. Unlike those works, we aim to automate navigation and value fuzzing rather than identifying privacy leaks through the UI. Zhao et al. [59] focus on input validation but only on the mobile app side, while others have studied how Android applications' network traffic can be intercepted [28, 30, 35, 47]. Furthermore, Zhao et al. [60] reverse-engineer API calls for Android apps, but their work centers on data leakage vulnerabilities rather than IIV vulnerabilities. We employ similar monitoring strategies augmented with dynamic instrumentation to bypass certificate pinning.

Lastly, research on fake text generation and detection [23, 29, 36, 43, 46, 56, 57] is ongoing. Most of these studies are either not tested in practice or focus on social platforms rather than MCSs. In our work, we leverage state-of-the-art text generation strategies to show how they can be combined with spoofed network requests in an end-to-end framework for analyzing real-world MCS services' exposure to improper input injection attacks. Our framework shares similarities with model-based testing [24, 44, 44, 50] and can be seen as a simplistic abstract model for MSCs behavior (the system under test). Building on this modeling is a promising future direction.

### Conclusion

In this work, we developed a framework for analyzing improper input validation vulnerabilities in mobile crowdsourcing services. We successfully applied the framework to eight high-profile services across five application domains and found that they are all severely exposed to improper input injection attacks. Our analysis showed that arbitrary inputs from fake accounts and devices are accepted as genuine, allowing adversaries to fake reports for robberies, gunshots, fitness activities, and manipulate grocery item prices, among other things. We then discussed and showcased how simple-to-implement and deploy input validation strategies can greatly reduce the IIV attack surface and complement existing defenses.

### Acknowledgments

This work was partially supported by the U.S. National Science Foundation (CNS-1956445).

### References

[References listed here as provided in the original text]

---

This version of the text is more structured, clear, and professional, making it easier to read and understand.