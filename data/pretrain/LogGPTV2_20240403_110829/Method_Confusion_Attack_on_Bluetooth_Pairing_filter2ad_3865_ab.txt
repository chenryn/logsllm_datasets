3) Authentication: Only in the subsequent Authentication
stage
actually
authenticated. The method used for authentication (i.e.,
the Association Model) varies. The decision on which
Association Model will be used is based on the information
gathered in the previously mentioned Pairing Feature
Exchange. Both devices conduct this model-selection process
independently. After completion of this decision process, both
devices assume that their pairing partner has concluded upon
the same method as they did. The exact decision process is
detailed in Section II-C.
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:31:14 UTC from IEEE Xplore.  Restrictions apply. 
1333
RISelect/Re-userandom(private)SKISelect/Re-userandom(private)SKRCompute(public)PKI=SKI(cid:12)PCompute(public)PKR=SKR(cid:12)PPKIPKRCalculateDHK=SKI(cid:12)PKRCalculateDHK=SKR(cid:12)PKIRICalculateEa=f6(DHK,NI,NR,rb,IOcapI,addrI,addrR)CalculateEb=f6(DHK,NR,NI,ra,IOcapR,addrR,addrI)EaCheckEa,abortiffailEbCheckEb,abortiffailFig. 3. Numeric Comparison.
Fig. 4. Passkey Entry.
The devices can conclude on one of the following Associ-
ation Models:
• Just Works: The keys are not authenticated (i.e., unau-
this step retrospectively validates integrity and authenticity of
all previously exchanged values.
B. MitM protected Association Models
Besides OOB, NC and PE are the only Association Models
which provide MitM protection. As our attack targets this kind
of protected authentication, they are of central interest to us
and are detailed in the following.
1) Numeric Comparison: NC authenticates the PKs by
creating a hashsum of the PKs that are to be validated. This
hashsum is presented in the form of a 6-digit number to the
user on both devices. If the user conﬁrms those numbers to
be equal on both devices, the keys are authenticated.
To avoid replay attacks, this hash needs to involve random
nonces (NI and NR). Those nonces get exchanged in a
particular order as shown in Fig. 3 and are preceded by a
conﬁrmation message. The conﬁrmation message and the order
of the exchanges are important. In particular, the conﬁrmation
message assures that no partner knows the other partner’s
nonce before they have ﬁxed their own choice of nonce.
Otherwise, an attacker would be able to easily ﬁnd and choose
nonces that cause collisions in the conﬁrmation value V a,
increasing the likelihood of wrongfully approving keys that
are not legitimate.
2) Passkey Entry: The PE requires one of the devices to
choose and display a random 6-digit passkey. This passkey
has to be entered by the user into the other device. The device
which displays is chosen based on its IOCap.
The authentication then gets executed as seen in Fig. 4.
The steps in the marked box are executed for each of the
i ∈ [0, 19]).
20 bits of the entered passkeys (rai, rbi
If the process does not abort before completion, the PKs
are considered authenticated. This bit-wise challenge-response
process assures that both parties are in possession of the
correct passkey.
C. Association Model Agreement
:
Each device has individual capabilities and security require-
ments. For instance, laptops have a display and a keyboard, but
thenticated security requirement).
• Out of Band: The PKs are authenticated over a backchan-
nel separate from Bluetooth (e.g., NFC, QR-Code).
• Numeric Comparison: The user is displayed a 6-digit
number on both devices and has to conﬁrm if they are
equal.
• Passkey Entry: The user is displayed a 6-digit passkey on
one device and is asked to enter it into the other device.
Only the Numeric Comparison (NC) and Passkey Entry (PE)
methods (besides OOB) are capable of properly authenticating
the peer and avoiding MitM attacks as discussed in Section
IX-C (MitM protection). NC and PE are central to our attack
and are discussed in further detail in Section II-B1 and II-B2.
After completion of the Authentication stage, the integrity
and authenticity of the PKs are assumed to be veriﬁed.
Note that no stage does in fact authenticate whether both
partners have performed the same Association Model. This is
a design ﬂaw, which enables our Method Confusion Attack
(as acknowledged by Bluetooth SIG; see Section X).
4) Long-Term Key Calculation and Validation: The now
trusted PKs are then used to establish a secure channel between
both parties. The LT K and M acKey are derived from the
now authenticated PKs:
M acKey||LT K = f 5(DHK, NI , NR, addrI , addrR)
where f 5 is a cryptographic key generation function described
in the Bluetooth speciﬁcation [1, Vol. 3 Part H 2.2.7]. NI and
NR are Nonces that were exchanged in the Authentication
stage (e.g., Section II-B1). The M acKey is of no further
importance for our attack.
(1)
Subsequently, conﬁrmation values are calculated on both
sides (Ea and Eb). They are then exchanged over the new
secure channel and are validated by the peers as can be seen
in Fig. 2. Based on the trust established with the peers’ PKs,
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:31:14 UTC from IEEE Xplore.  Restrictions apply. 
1334
RIGenerateRandomNIGenerateRandomNRra=rb=0rb=rb=0ComputecommitCR=f4(PKR.x,PKI.x,NR,rb)CRNINRCheckcommitCR?=f4(PKR.x,PKI.x,NR,ra)DisplaytouserVI=g2(PKI.x,PKR.x,NI,NR)DisplaytouserVR=g2(PKI.x,PKR.x,NI,NR)WaitforuserconﬁrmWaitforuserconﬁrmRIra=rb=passkey(20bits)eitherenteredorchoosenra=rb=passkey(20bits)eitherenteredorchoosenGeneraterandomNiIGeneraterandomNiRComputecommitCiI=f4(PKI.x,PKR.x,NiI,rai)ComputecommitCiR=f4(PKR.x,PKI.x,NiR,rbi)CiICiRNiICheckcommitCiI?=f4(PKI.x,PKR.x,NiI,rbi)NiRCheckcommitCiR?=f4(PKR.x,PKI.x,NiR,rai)repeat∀i∈[0,19]headphones might have neither. To support a large variety of
devices, the Association Model is dynamically selected based
on the pairing devices’ capabilities and security requirements.
In BLE, the Pairing Feature Exchange is used to agree on a
pairing method. For the Association Model agreement, three
features are of interest [1, Vol.3 Part H 2.3]:
• OOB-bit: Indicates that OOB data is ready
• MitM-bit: Indicates the requirement of authentication
• IOCaps: Indicate provided capabilities for user interac-
tion
In BLE, the possible IOCaps are the following:
• DisplayOnly: The device can only display a 6-digit nu-
meric value.
• DisplayYesNo: The device can display a 6-digit numeric
value and the user can input a conﬁrmation (yes or no).
• KeyboardOnly: The user can input a 6-digit numeric value
and a conﬁrmation.
• KeyboardDisplay: The device can display a 6-digit nu-
meric value and the user can enter a 6-digit numeric value
and a conﬁrmation.
• NoInputNoOutput: The device has no ability to commu-
nicate with the user.
When the pairing features have been exchanged, the de-
vices decide independently from each other which Association
Method is used. First, if any device has OOB data of the peer
ready, the OOB-bit is set and the OOB authentication method
is used. Our attack is not applicable to OOB and we will not
further discuss this method. Next, if no device sets the MitM-
bit, Just Works (JW) is used as authentication. JW offers no
MitM protection during pairing and therefore is not further
discussed (attacks targeting JW are listed in Section IX-C).
If the MitM-bit is set, the IOCaps are used to determine
whether NC or PE is used. Fig. 5 shows the mapping of
IOCaps to the resulting authentication method for Initiator
and Responder, respectively. Based on this table some require-
ments can be derived. For instance, NC requires DisplayYesNo
or DisplayKeyboard on both devices. PE requires Display* at
one device, and *Keyboard at the other.
Furthermore, this description shows that it is possible to
enforce a pairing method. For example, to perform NC with
a KeyboardDisplay device, DisplayYesNo may be announced.
D. Advertising and Discoverability
As our Proof of Concept (PoC) implements the interception
of advertisement packets, we also discuss basic features of
the advertising process [1, Vol. 3 Part C 9.2]. Advertising in
BLE is controlled by the Generic Access Proﬁle (GAP). A
BLE device that is ready to accept pairing requests will enter
discoverable mode. The device will then periodically transmit
advertising packets over one of three channels (37, 38, 39) [1,
Vol. 4 Part E 7.8.5].
The interval of these transmissions has a ﬁxed component
of between 20 ms to 10.24 s [1, Vol. 4 Part E 7.8.5] and a
small random component. This form of dynamic interval is
chosen to reduce the chances of collisions on the medium.
Fig. 5. Provided IOCap and resulting Association Model for LESC [1, Vol.
3 Part H 2.3.5.1].
There are various types of advertising messages. For our
scenario, the pairing with a yet unknown peer is most rel-
evant. Therefore, we will focus on the advertisement mes-
sage ADV IND. This advertisement type signals surrounding
devices that incoming connection requests (e.g., pairing) are
accepted.
The advertisement message starts with the device address,
which can have the following types [1, Vol. 3 Part C 15.1]:
• Public Address: Globally ﬁxed; registered with IEEE.
• Random Static Address: Fixed and chosen randomly; does
not usually change.
In case LE privacy is enabled, these types can also be used
[1, Vol. 3 Part C 10.7]:
• Private Resolvable Address: Derived from a common
secret (Identity Resolving Key (IRK)) between bonded
partners; can change anytime.
• Private Non-Resolvable Address: Randomly generated;
has not to be persistent.
Different data ﬁelds may follow the address in an arbitrary
order. If the device is in discoverable mode, it includes also
its Local Name [1, Vol. 3 Part C 9.2.3.2]. The Local Name
is also the identiﬁer presented to the user in the results of a
device discovery (‘Available Devices’).
III. METHOD CONFUSION ATTACK
The Method Confusion Attack targets the pairing attempt
of two BLE devices with the goal to achieve a MitM position.
Instead of a single pairing between R and I, two pairings are
conducted simultaneously with attacker M. I connects to the
MitM Responder (MR), and the MitM Initiator (MI) connects
to R. One of the pairings is performed via NC, while the other
pairing is performed via PE. This leads to a situation virtually
identical to a valid PE pairing between I and R (Method
Confusion): One device displays a 6-digit value, and the other
device prompts for a 6-digit value. However, the attacker has
gained knowledge over the displayed value, which is then used
to complete pairing with both victims.
This attack is mainly possible for three reasons:
1) The Association Models NC and PE use the same form
of check value; i.e., it is not determinable whether a
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:31:14 UTC from IEEE Xplore.  Restrictions apply. 
1335
InitiatorDisplayOnlyDisplayYesNoKeyboardOnlyNoInputNoOutputKeyboardDisplayDisplayOnlyJustWorksJustWorksPasskeyEntryJustWorksPasskeyEntryDisplayYesNoJustWorksNumericComparisonPasskeyEntryJustWorksNumericComparisonKeyboardOnlyPasskeyEntryPasskeyEntryPasskeyEntryJustWorksPasskeyEntryResponderNoInputNoOutputJustWorksJustWorksJustWorksJustWorksJustWorksKeyboardDisplayPasskeyEntryNumericComparisonPasskeyEntryJustWorksNumericComparisonResponderdisplays,InitiatorinputsInitiatordisplays,ResponderinputsInitiatorinputsandResponderinputsFig. 6. Passkey on Numeric attack implementation. EX is the conﬁrmation value as calculated by device X.
given check value was generated by the NC or PE pairing
process.
2) Devices are not authenticating which Association Model
is actually used by their respective peers.
3) The speciﬁcation does not prescribe any notiﬁcation or
wording that makes the user aware of the Association
Model used. This makes it virtually impossible to rec-
ognize an attack; especially since the risk of a Method
Confusion is not known to the user (cf. Section VI-A).
A. Attack Preparation
1) Initiator Connection to MitM: In order to apply Method
Confusion, I must initiate pairing with MR instead of R, so
the attacker can act as MitM. We assume that the user attempts
to pair two devices, I and R, with each other. R starts to
advertise itself, while I searches for advertisements.
At the same time, MR is also advertising as Responder
under the same name as R. The user now observes MR in the
pairing menu of I, where MR appears indistinguishable from
R. To prevent the device R from showing up in the menu as
well, R’s advertisement signal may be jammed as we describe
in our end-to-end PoC (cf. Section IV). Eventually, the user
engages in pairing with MR instead of R as they perceive MR
as the desired pairing partner.
2) MitM Interaction during Attack: As soon as the pair-
ing request arrives at MR, MI initiates a connection with
device R. Since I and R are now only communicating to
M (MR, MI), M holds a MitM position during the pairing
process. Note, that all the communication between M and I is
handled by the MR entity and all the communication between
M and R is handled by the MI entity. Both entities of M
share their information with each other, and have access to
each other’s variables and state.
Based on the provided IOCaps of the attacked devices,
our attack has two variations: Passkey on Numeric (PoN) and
Numeric on Passkey (NoP). Which of the two variants is
applicable in each scenario is discussed in Section VIII-A.
We will now discuss the attack in detail.
B. Passkey on Numeric
In PoN, I performs PE with MR, while R performs NC
with MI. Fig. 6 shows the concurrent interactions of I and R
with the MitM. First, the Pairing Feature Exchange between
I and MR is performed:
1) I initiates MR and transmits its security requirements and
IOCaps (Keyboard*).
2) MR responds to I and transmits its security requirements
(set MitM-bit) and IOCaps (DisplayOnly).
This triggers MI to begin Pairing Feature Exchange with R:
1) MI initiates R and transmits its security requirements (set
MitM-bit) and IOCaps (DisplayYesNo).
2) R responds to MI and transmits its IOCaps (Dis-
playYesNo / DisplayKeyboard).
Next, PKs are exchanged between I and MR respectively
MI and R simultaneously.
At the beginning of the authentication phase, MR suspends
the pairing procedure with I. In the meantime, MI performs
a NC-based authentication with the victim R:
1) CR, NI and NR are exchanged.
2) MI and R calculate V a.
V a is then presented to the user as a 6-digit number on R’s
display. R is now waiting for the user to compare the number
and then to conﬁrm the NC authentication. MI has gained
knowledge over V a.
Then, the PE procedure between MR and I is continued:
1) MR sets its passkey rb to V a
2) I and MR gradually exchange passkey bits (rai).
this point, I is requesting the user to enter a 6-digit
At
passkey to perform the PE authentication.
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:31:14 UTC from IEEE Xplore.  Restrictions apply. 
1336
RMInitiatorMResponderIIOcapITriggersIOcapMI=DisplayYesNoIOcapRIOcapI=DisplayOnlyPKIPKMIPKRPKMRPerformNumericComparisonVaCalculateVaCalculateVara=rb=VaDisplay6-digitVaUserentersRsVaintopasskeyﬁeldonIandconﬁrmsUserconﬁrmsra=rb=VaPerformPasskeyEntryDeriveLTKIandMacKeyIDeriveLTKRandMacKeyREITriggersAuthPhase2EMIEREMRDomainofMIn summary, I prompts the user to enter a 6-digit value while
R displays a 6-digit value and awaits conﬁrmation. This
situation is virtually equivalent to a legitimate PE pairing
dialogue. We assume the user transfers the value from R to
I and conﬁrms the dialogues. Dependent on the dialogue
design and previous experience a user may be able to detect
the ongoing attack at this point. In Section VI, we analyze
the detection risk and reason that it is unrealistic for a user
to spot an ongoing attack. To substantiate that reasoning, we
report the results from a user study (Section VII), which align
with our prognosis.
MR chooses rb:
On MR: rb = V a
(2)
Since the passkey entered on I is the V a displayed on R, the
following holds:
On I: ra = V a
From (2) and (3) it follows:
Between I and MR: ra = rb
(3)
(4)
Therefore, the PE procedure completes successfully and the
Authentication stage ends on device I and MR.
Subsequently, the Long-Term Key (LTK) Calculation and
Validation stage (Section II-A4) begins by I transmitting its
conﬁrmation value EI. Since I and MR have exchanged their
PKs earlier, they will calculate the same DH-key DHKI,MR.
The same applies to MI and device R which calculate
DHKMI ,R.
calculate EM I as:
After receiving the EI from I, MR will trigger MI to
EMI = f 6(DHKMI ,R, NI , NR, rb, IOcapI , addrI , addrR)
(5)
EMI is then sent to R.
When the user conﬁrms the NC dialogue on device R,
the device completes its Authentication stage and waits for
a conﬁrmation message. As R now receives EMI , it validates
the value successfully and replies with ER to MI. Therefore,
the pairing between R and MI is successfully completed.
Upon receipt of ER on MI, the message is discarded and
M triggers MR to calculate EMR as
EMR = f 6(DHKI,MR , NR, NI , ra, IOcapR, addrR, addrI ) (6)
This value is then transmitted to I.