### 24
**Authorized Use Limited to: Tsinghua University. Downloaded on March 20, 2021, at 09:59:20 UTC from IEEE Xplore. Restrictions Apply.**

### Preface Hijacking Attacks with False Origin
For the rare cases of announcing new (sub)prefixes, an initialization step is performed to bootstrap the hash chain, which involves a slightly more computationally expensive asymmetric-key algorithm. This initialization is optimized to require public key exchange limited to two neighboring ASes instead of a global PKI. To prevent tampering with the initialization process and replay attacks during subsequent route propagation, we exploit the hierarchical structure of the Internet and the business relationships among ASes to impose a partial ordering on the route propagation. We prove that no replay attack can succeed if every AS follows the guideline. Note that this partial ordering does not change the BGP route selection when preventing replay attacks.

In summary, HC-BGP is a lightweight approach to provide prefix ownership security without a global PKI. Moreover, its design to connect sub-prefix announcements with cover-prefix ownership is effective in preventing sub-prefix hijacking attacks. Additionally, using our scheme, network operators can still enjoy the flexibility of common routing practices such as multi-homing, prefix aggregation, and de-aggregation.

The paper is organized as follows:
- **Section 2**: Background of prefix hijacking and an overview of the proposed protocol.
- **Section 3**: Empirical data analysis.
- **Sections 4, 5, and 7**: Presentation of the HC-BGP protocol.
- **Sections 8 and 9**: Performance evaluation.

### 2. Background and Overview

#### 2.1 Prefix Hijacking Attacks
Prefix hijacking is a serious BGP security threat where attackers steal IP addresses belonging to other networks. The attacker AS injects false routes into the global routing table by announcing another network’s prefix. The stolen address blocks can be used for malicious activities such as spamming or denial-of-service attacks, where the attacker's identity is concealed. The fundamental problem that accounts for this attack is the lack of prefix ownership authentication in the BGP system.

In the following, we first review several types of prefix hijacking attacks, then describe our threat model, followed by our design requirements and comparison to existing work.

**IP Prefix Hijacking** can be carried out in several ways [10, 24, 4]. The attacker can either blackhole the victim’s traffic by advertising an invalid route with a false origin or intercept the traffic by inserting a false next hop, possibly leaving the origin AS unchanged. In this paper, we focus on the attack with a false origin, which is due to a lack of address certification and usually results in severe consequences such as reachability problems. Interception-based hijack can be partially addressed by encryption-based solutions [21].

**False-Origin Prefix Hijacking** can be further categorized based on the size of the address block announced. Below are the two categories, as illustrated in Figure 1.

- **Full Prefix Hijack**: The attacker announces exactly the same prefix already announced by the victim. Other networks will select one such route to adopt. In this case, the Internet is partially polluted. For example, in Figure 1(a), both the attacker and the victim announce the same prefix 10.1.0.0/16. Consequently, AS2 and AS3 may prefer the attacker’s route because of the shorter AS path.
- **Sub-Prefix Hijack**: The attacker announces only a subnet of a prefix announced by the victim, and this subnet is not announced previously. Unless filtered, this new sub-prefix is injected into the forwarding table regardless of the route of the existing prefix. Due to the longest prefix matching policy, traffic destined to this subnet follows the false route of the sub-prefix. Therefore, most of the Internet is likely polluted. In Figure 1(b), the attacker announces the sub-prefix 10.1.1.0/24. This route is likely accepted by all other ASes as a new forwarding table entry. Hence, traffic destined to IPs such as 10.1.1.1 is misled to the attacker.

There have been several real-world examples of prefix hijacking. The most recent hijacking attack, however, polluted most of the Internet: the sub-prefix hijacking attack on the YouTube prefix [16]. On February 24, 2008, around 18:50, Pakistan Telecom (AS17557) announced 208.65.153.0/24 to hijack YouTube (AS36561)’s prefix 208.65.152.0/22. Because it was a new prefix, most ASes adopted it. YouTube was blackholed for almost two hours. At around 20:07, YouTube also began to announce 208.65.153.0/24 to reverse the effect. Until 21:10, Pakistan Telecom’s provider PCCW Global (AS3491) started to withdraw the false route. The incident caused severe reachability problems for almost all YouTube users. Accordingly, the scope of affected networks is much larger than previous hijacking incidents.

#### 2.2 Threat Model
We describe the threat model. Given a network G, each AS is assigned a set of IP prefixes. Each AS can only announce prefixes it owns. A prefix p is the set of IP addresses announced in a single routing announcement. A sub-prefix p' of p is a subset of the addresses in p, i.e., p' ⊂ p, where p is p'’s cover-prefix. Among all the sub-prefixes of p, we define the largest sub-prefix p' as the direct sub-prefix of p, i.e., if ¬∃p2, p' ⊂ p2 ⊂ p, then p' is the direct sub-prefix of p and p is the direct cover-prefix. In subsequent discussions, we refer to the cover-prefix as the direct cover-prefix.

We first define the attacks of interest, prefix hijacking attacks with false origin. If p belongs to AS1, then any other ASx announcing p with ASx as the origin AS, is considered a hijacking with false origin. This type of attack has two sub-categories:
1. An AS can advertise a prefix originated from another AS.
2. An AS can advertise any subset of a prefix originated from another AS.

We note that these two categories cover all known hijacking incidents in the past. After ASx hijacks p, in most cases, it blackholes a portion of all the traffic destined to AS1. But it can also tunnel the traffic back to AS1 to be more stealthy to carry out an interception attack [4]. We also consider this attack type. Note that we do not consider any attacks modifying other parts of the AS path, e.g., modifying path (ASx, AS2, AS1) to be (ASx, AS1).

#### 2.3 Solution Requirements
A practical protocol that can prevent the above attacks should satisfy the following requirements:
1. **Ensuring Origin Attestation**: It should prevent both full prefix and sub-prefix false-origin hijacking. If an attacker advertises the prefix currently announced by its owner, or a new sub-prefix covered by a larger prefix owned by other networks, the route to the attacker should be discarded.
2. **Flexibility**: It should support the flexibility for legitimate multiple origin AS (MOAS) and traffic engineering. One prefix can be announced by two ASes for several legitimate reasons [25]: the prefix of the exchange points is usually announced by more than one AS connected at the exchange point; a small customer without its own AS number may use a private AS number to multi-home to two providers which announce the prefix simultaneously. Our solution needs to accommodate these dynamics. For traffic engineering purposes, one prefix could be de-aggregated to multiple sub-prefixes announced independently of the prefix. On the other hand, the owner can also aggregate a set of sub-prefixes to a single large prefix to limit routing table size. Our solution also needs to provide flexibility for aggregation/de-aggregation operations.
3. **Incrementally Deployable**: Like all other secure BGP protocols, it is impossible to force all ASes to adopt the new protocol simultaneously. The adoptability of a protocol highly depends on its incremental benefit [8]. The new protocol needs to support incremental deployment to provide enough incentives for ISPs to deploy it.
4. **Light-Weight**: A major concern for previously proposed secure BGP protocols is the high overhead for both computation and storage. To ensure practical adoptability, we need to design a solution with low overhead. The proposed HC-BGP satisfies all four requirements.

#### 2.4 Comparison with Previous Secure BGP Protocols
Several protocols have been proposed to enhance BGP security by incorporating cryptographic mechanisms to provide confidentiality, integrity, and origin authentication. S-BGP [19] is the first comprehensive secure routing protocol. It relies on two public key infrastructures (PKIs) to secure AS identity and association between networks and ASes. Each route contains two attestations (digitally signed signatures), one for the origin authentication and one for the route integrity. In reality, due to the large number of sign and verify operations, S-BGP is too costly to deploy. Most of the follow-up work to S-BGP focuses on reducing the computational complexity of the second security property of S-BGP, i.e., generating/verifying the route attestation. For example, SPV [11] utilizes purely symmetric cryptographic primitives, a set of one-time signatures, to improve efficiency. Butler et al. [7] reduced the complexity of S-BGP by exploring path stability. Along the angle of reducing the overhead of asymmetric keys, Hen et al. [23] proposed a scheme using key chains to improve its performance.

Only one existing work, Secure Origin BGP (soBGP) [17], focuses on providing address attestation. However, soBGP still uses one PKI to authenticate the address ownership and AS identity. Each soBGP router first builds a topology database securely, including the address ownership, organization relationship, and topology. Aiello et al. build an address ownership proof system [3] which still uses a centralized infrastructure requiring gathering address delegation information.

In summary, all previous secure BGP protocols leave the prefix ownership assurance unchanged. S-BGP relies on the address attestation with the assistance from the centralized trust entity ICANN. SPV proposes using identity-based cryptography (IBC) to make the public key distribution more flexible. However, these address attestation methods suffer from:
1. Dependence on a global PKI.
2. The need for a verification operation for each routing update.
3. Inflexibility for origin AS changes.
4. Inability to handle sub-prefix hijacking.

In contrast, HC-BGP is a new approach to prefix ownership authentication that is both more efficient and flexible than previous approaches. Our scheme uses the lightweight hash chain mechanism and less frequent cryptographic operations, and hence is efficient in terms of computational complexity and memory consumption. Our scheme does not rely on a global PKI and thus provides much more flexibility for traffic engineering in terms of origin AS changes, address allocation/de-allocation.

### 3. Hypothesis and Empirical Analysis
Our goal is to design a practical and efficient solution to secure prefix ownership. Toward this goal, we first seek to gain insights into several key characteristics of the prefixes announced in the Internet. We investigate two hypotheses that directly relate to the design of an efficient secure protocol:

**Hypothesis 1**: For each prefix, the set of its origin ASes is quite stable. This property directly affects the frequency for updating the secure association.

**Hypothesis 2**: The aggregation/de-aggregation dynamics for each prefix are infrequent. This property relates to the association changes across prefixes.

To analyze these two hypotheses, we perform an in-depth analysis of the dynamics of the origin changes as well as the distribution of the prefixes/sub-prefixes. We study these aspects using three months of BGP data, from Dec. 2007 to Feb. 2008, from all vantage points in RouteViews [2].

First, to support the flexibility of MOAS, we studied the frequency and stability of such changes. We found that across the entire three months, only 1,935 (0.9%) prefixes had MOAS behavior. Among them, 97% had only 2 origin ASes, as shown in Figure 2. Across the entire three months, we only observed 52 prefixes announced by new origin ASes. This means that the set of origin ASes for each MOAS prefix is quite stable.

Second, we needed to provide the flexibility of the coexistence of the prefix and sub-prefix. We found that among the total of 214,043 prefixes in the global routing table, only 8% (17,115) had sub-prefixes. Among them, though some prefixes had many sub-prefixes, we found that 90% had less than 10 direct sub-prefixes, as shown in Figure 3.

Finally, we analyzed the dynamics of aggregation/de-aggregation. In Figure 4, each Aggregation event refers to when one sub-prefix is withdrawn, and its cover-prefix still exists, and each De-aggregation event refers to when a new sub-prefix is announced. The duration of aggregation is the time period when only the cover-prefix exists, and the duration of de-aggregation is the period when only the sub-prefix exists. The figure shows that aggregation and de-aggregation occur rarely. The short durations of less than 10 minutes are most likely due to BGP convergence.

From the above analysis, we draw the following observations confirming the two hypotheses above, which are then exploited in the design of HC-BGP:
1. Only a few prefixes have more than one origin AS. Among them, most have only two origin ASes.
2. The set of origin ASes for MOAS prefixes is stable.
3. The majority of the prefixes do not have sub-prefixes.
4. Neither prefix aggregation/de-aggregation nor prefix origin changes are often.

A key observation that guides our HC-BGP protocol design is that most of the proposed secure BGP protocols require origin authentication upon any UPDATE message for this prefix. In contrast, because our problem is to defend against the fraudulent origin (sub)prefix hijacking, we only need to authenticate the binding between a given origin AS and the prefix, which is thus, only needed when the binding changes. Guided by this observation, we can design a much more efficient protocol to secure this binding.

### 4. HC-BGP Protocol
We now present HC-BGP, a new secure BGP protocol that prevents both full prefix and sub-prefix hijacking attacks. We first describe the one-way hash chain building block, our trust model, followed by the protocol.

#### 4.1 One-Way Hash Chains
One-way hash chains are a widely used lightweight cryptographic method to provide security. It was first proposed by Lamport [14] for password protection. Using a cryptographic hash function h(s), a client first needs to use other security methods to notify the server of the initial value hn(s). For subsequent communication, the client only needs to present Table 1. Terminology.

| Term | Definition |
|------|------------|
| h()  | Hash chain function |
| p    | A prefix |
| ˆp   | The direct cover-prefix of p |
| sp   | The secret of prefix p |
| hn(sp) | The initial value of hash chain for prefix p |
| hc(sp) | The current value of hash chain for prefix p |
| k−i  | Router R's private key i |
| k+i  | Router R's public key i |
| k = hn−1(s) | To the server. The server computes h(k) = h(hn−1(s)) to compare with the pre-stored hn(s). If they match, the server verifies the client identity. |

Hash chains have the following key properties. They are useful in cases where an authentication is done once, and all the following values for subsequent authentication can be derived efficiently by repeatedly computing the hash function value. The other end can easily verify each new value. The one-way hash function guarantees that given a value hi(s), it is computationally infeasible for the attacker to derive the secrets. Moreover, many hash functions can provide the second pre-image collision resistance: it is impossible to find another s' such that h(s') = hi+1(s).

HC-BGP uses hash chains to secure the binding between the origin AS and the prefix efficiently in all subsequent UPDATE messages once the first binding is authenticated.

#### 4.2 Trust Model
As discussed in §2.4, all previous secure BGP protocols require a global PKI to provide authenticity. Every AS in the Internet must establish a trust relationship with this global entity and depend on it for any changes. Each AS needs to hold all other ASes' keys. Especially for address attestation, all existing secure BGP methods rely on the PKI. This has imposed significant management burdens and has received a fair share of criticism [20].

Unlike previous work, we rely on the relationship between every pair of neighboring ASes to provide authenticity. We do not require each AS to know all other ASes' keys. Instead, each AS establishes a trust relationship with its directly connected neighbors: if ASA and ASB are neighbors, A and B trust each other, denoted as A ↔ B. This pairwise trust model is consistent with the current commercial relationships established between ASes. Thus, the trust is easy to establish in practice; for instance, the keys between two entities can be exchanged in the contract. The two entities can even decide to use either symmetric key or asymmetric key flexibly themselves.

In the context of prefix hijacking, we assume that each AS trusts its provider, which does not have incentives to hijack customers’ addresses as customer traffic will always traverse its network. Moreover, we assume all Tier-1 ASes are trustworthy as they are large ISPs with careful network management. Historically, there have been no known events of any Tier-1 AS launching hijacking. Note that the trust relationship is established at the AS level. We assume all the routers within an AS trust each other.

### 27