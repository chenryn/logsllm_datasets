[11] T. Gondrom, R. Brandner, and U. Pordesch. Evidence
Record Syntax (ERS). RFC 4998 (Proposed
Standard), Aug. 2007.
[12] V. H. Gupta and K. Gopinath. G2
its VSR: An
information theoretical secure veriﬁable secret
redistribution protocol for long-term archival storage.
In Security in Storage Workshop, 2007.
[13] S. Haber and W. S. Stornetta. How to time-stamp a
digital document. In CRYPTO’ 90, pages 437–455,
1990.
[14] A. Herzberg, S. Jarecki, H. Krawczyk, and M. Yung.
CRYPTO ’95, chapter Proactive Secret Sharing Or:
How to Cope With Perpetual Leakage, pages 339–352.
Springer Berlin Heidelberg, Berlin, Heidelberg, 1995.
[15] https://www.keylength.com. Cryptographic key
length recommendation, 2016.
[16] D. H¨uhnlein, U. Korte, L. Langer, and A. Wiesmaier.
A comprehensive reference architecture for
trustworthy long-term archiving of sensitive data. In
Conference on New Technologies, Mobility and
Security, pages 1–5, Dec 2009.
[17] T. Kuroda et al. Simulating cloud environment for
HIS backup using secret sharing. Studies in health
technology and informatics, 192:171–174, 2012.
[18] A. K. Lenstra. Key lengths. In The Handbook of
Information Security. Wiley, 2004.
[19] T. Loruenser, A. Happe, and D. Slamanig. Archistar:
Towards secure and robust cloud based data sharing.
In CloudCom 2015, pages 371–378, Nov 2015.
[20] T. P. Pedersen. Non-interactive and
information-theoretic secure veriﬁable secret sharing.
In CRYPTO ’91, 1992.
[21] T. A. Ramos, N. da Silva, L. C. Lung, J. G. Kohler,
and R. F. Cust´odio. An infrastructure for long-term
archiving of authenticated and sensitive electronic
documents. In EuroPKI, pages 193–207, 2010.
[22] R. L. Rivest, A. Shamir, and L. Adleman. A method
for obtaining digital signatures and public-key
cryptosystems. Commun. ACM, 21(2):120–126, Feb.
1978.
[23] M. Sasaki et al. Field test of quantum key distribution
in the tokyo qkd network. Opt. Express,
19(11):10387–10409, May 2011.
[24] V. Scarani et al. The security of practical quantum key
distribution. Rev. Mod. Phys., 81:1301–1350, Sep 2009.
[25] A. Shamir. How to share a secret. Commun. ACM,
22(11):612–613, Nov. 1979.
[26] C. E. Shannon. Communication theory of secrecy
systems. The Bell System Technical Journal,
28(4):656–715, Oct 1949.
[27] M. A. G. Vigil, J. A. Buchmann, D. Cabarcas,
C. Weinert, and A. Wiesmaier. Integrity, authenticity,
non-repudiation, and proof of existence for long-term
archiving: A survey. Computers & Security, 50:16–32,
2015.
466APPENDIX
A. SECURITY OF COPRIS
We show that COPRIS provides long-term integrity and
authenticity protection and that no conﬁdential data is leaked
to the evidence and timestamp service. For this, we consider
adversaries that may be active for an unbounded period of
time, but can only do a bounded amount of work per unit
of real time. This allows us to use computationally secure
cryptographic primitives for a limited time period in the
presence of an adversary who is overall unbounded. We re-
fer to the full paper and [6, 9] for more details regarding this
adversary model.
By long-term integrity and authenticity of COPRIS we
mean that it is infeasible for an adversary as described above
to forge an integrity proof, that is, to present a valid integrity
proof for a document d and a time t even though d did not
exist at time t. If the document is protected together with
a digital signature, then long-term integrity achieves long-
term authenticity. A more formal deﬁnition of long-term
integrity is given in [9].
It is essential for the security of
COPRIS that the following assumptions hold.
I1. The commitment schemes used in the proof of integrity
are computationally binding in their usage period.
I2. The timestamp schemes used in the proof of integrity
are computationally unforgeable in their usage period.
I3. The veriﬁer has a valid trust anchor.
The usage period of a cryptographic scheme is deﬁned as the
time interval starting when the scheme is chosen and ending
when it is replaced by a new scheme. By a valid trust anchor
we mean a trust anchor that allows for the veriﬁcation of
all timestamps and commitments. The following theorem
states that under the above assumptions, COPRIS provides
long-term integrity protection.
Theorem A.1. Under Assumptions I1, I2, and I3, COPRIS
provides long-term integrity and authenticity.
Note that there is a small security loss over time as the suc-
cess probabilities of the adversary for each time period add
up. For more details see [6, 9]. Next, we show that COPRIS
is conﬁdentiality preserving in the long-term, i.e., no infor-
mation is leaked to the evidence and timestamp service (in
an information-theoretic sense). This fact relies on the fol-
lowing assumption.
C1. The commitment schemes are information-theoretically
hiding.
Theorem A.2. Under assumption C1, COPRIS is infor-
mation-theoretic conﬁdentiality preserving.
For proofs of Theorems A.1 and A.2 we refer to the full
paper.
B. SECURITY OF LINCOS
We show that under appropriate assumptions, LINCOS
provides integrity protection for an indeﬁnite period of time
and information-theoretic conﬁdentiality protection. Adver-
saries are assumed to have the capabilities described in Sec-
tion A. They run forever but are computationally bounded
per unit of time. In addition, adversaries are assumed to be
active and mobile. This means that adversaries may eaves-
drop on channels or corrupt shareholders. A more detailed
discussion of this model can be found in [14].
Security
year
2040
2065
2085
2103
2116
SHA-2
instance
SHA-224
SHA-224
SHA-256
SHA-384
SHA-384
RSA
log2(n)
2048
3072
4096
5120
6144
Pedersen
log2(p), log2(q)
2048, 224
3072, 224
4096, 256
5120, 384
6144, 384
Table
Lenstra [18].
1:
Parameter
selection according
to
Integrity. Theorem A.1 states that in this adversary model,
LINCOS provides long-term integrity and authenticity pro-
tection if Assumptions I1, I2, and I3 from Section A are
satisﬁed.
Conﬁdentiality. We say that LINCOS provides information-
theoretic conﬁdentiality protection if an adversary with ca-
pabilities as described above cannot recover any informa-
tion about the stored document in an information-theoretic
sense.
For information-theoretic conﬁdentiality we require As-
sumption C1 from Section A and the following assumptions
to hold.
C2. The private channels used in LINCOS provide information-
theoretic conﬁdentiality and computational authentic-
ity at the time of data transmission.
C3. The proactive secret sharing schemes used in LINCOS
provide information-theoretic conﬁdentiality.
C4. During their usage periods, the secret sharing services
used in LINCOS prevent mobile adversaries from learn-
ing k or more shares.
Theorem B.1. Under assumptions C1, C2, C3, and C4
the system LINCOS provides information-theoretic conﬁden-
tiality protection.
For the proof of Theorem B.1 we refer to the full paper.
C. EXPERIMENTAL EVALUATION
In the following, we present a performance analysis of
LINCOS. We estimate the storage space required by the
system and investigate data transmission limits imposed by
QKD. We also measure the time required for integrity ver-
iﬁcation. To do so, we run the following experiment. A
document is stored and protected using LINCOS over a pe-
riod of 100 years, starting in 2016 and ending in 2116. Share
and timestamp renewal happen every two years. The share
renewal period is to be chosen such that mobile adversaries
are unable to recover more shares than permissible. Also,
the typical storage hardware maintenance service interval is
two years. The timestamp renewal period is chosen in accor-
dance with typical certiﬁcate renewal periods. Such certiﬁ-
cates are required to verify the timestamps. Finally, commit-
ment renewal happens every ten years. This is in accordance
with the heuristic security assumptions for the commitment
scheme parameters. Parameter choices for the complexity-
based cryptographic components are done according to the
heuristics in [18]. The corresponding expected protection
periods are presented in Table 1.
467B
k
400
200
0
s
d
n
o
c
e
S
10
5
0
2,020
2,040
2,060
2,080
2,100
2,120
2,020
2,040
2,060
2,080
2,100
2,120
Year
Year
Figure 4: Size of evidence record.
Figure 5: Performance of evidence veriﬁcation.
terial across the network. The resulting throughput in our
current conﬁguration is keyRateQKD = 40 kb/s.
Storage and retrieval. When the document owner stores
data in the conﬁdentiality system, he sends one share to
each shareholder. Likewise, when retrieving the data, the
document owner receives one share per shareholder. Since
sizes = sized +sizeR, the time required for generating the nec-
essary OTP key material per share transfer in a private chan-
nel is ts = sizes/keyRateQKD seconds. For example, 1 GB of
data can be shared in 2.3 days at keyRateQKD = 40 kb/s.
Share renewal. For share renewal, the document owner re-
trieves the current set of shares and distributes new shares
to the shareholders. So the time for communicating the key
material required for resharing is 2 ∗ ts. For example, 1 GB
of data can be reshared in 4.6 days at keyRateQKD = 40 kb/s.
C.3 Evidence veriﬁcation
Figure 5 shows timings for veriﬁcation of an integrity
proof. The timings were measured on a computer with an
2.9 GHz Intel Core i5 CPU and 8 GB RAM running our
Java implementation of the veriﬁcation algorithm. As the
evidence record and the list of decommitment values grow
over time, the veriﬁcation time increases. Veriﬁcation of ev-
idence accumulated over 100 years takes approximately 10
seconds.
It can be expected that, because computers are
getting faster, in a hundred years from now integrity proof
veriﬁcation will only take a fraction of this time.
C.1 Storage space
We analyze the storage space required by the shareholders
and the evidence service as a function of the bitlength sized
of the protected document d.
Shareholders. Each shareholder stores one share s per doc-
ument. Its size is sizes = sized + sizeR. Here R is the list
of decommitment values accumulated over time. Its size is
independent of the document size. The size of a single de-
commitment value equals the size of the parameter q of the
commitment scheme. At present, a secure instantiation of
the Pedersen commitment scheme requires a decommitment
value size of 224 bit. The experiments show that this data
accumulates to sizeR ≤ 1 kB over 100 years.
Evidence service. The evidence service stores one evidence
record E per document. The size of the evidence record sizeE
is independent of the document size. It depends on the size
and number of timestamps and commitments contained in
the evidence record. It grows over time because a new time-
stamp and a new commitment are added with each renewal.
The growth of sizeE over time is shown in Figure 4. Our
experiments show that the size of the evidence record accu-
mulates over 100 years to sizeE ≈ 500 kB.
C.2 Data transmission
Our system uses authenticated and private channels. Au-
thenticated channels easily allow for a data rate of 1 Gb/s,
while they are used for sending only a few hundred kB of
evidence data. So the cost for data transmission via au-
thenticated channels is negligible. Private channels are re-
alized using OTP and QKD. The transmission rate of these
channels is limited due to the key generation rate of QKD.
Therefore, in our analysis we focus on the QKD transmission
rate.
Data rate of private channels. The QKD performance in
the Tokyo QKD Network diﬀers from link to link because
ﬁber channel lengths as well as speciﬁcations of QKD devices
are diﬀerent from each other. Furthermore, some nodes are
directly connected by a QKD link, others have to use key
relay. The achieved secret key rates of the QKD links range
from 10 kb/s to 300 kb/s depending on the speciﬁcation
of the respective QKD link. To prevent being limited by
the slowest QKD links (10 kb/s), keys are relayed between
appropriate KMAs. Such key relaying balances the key ma-
468