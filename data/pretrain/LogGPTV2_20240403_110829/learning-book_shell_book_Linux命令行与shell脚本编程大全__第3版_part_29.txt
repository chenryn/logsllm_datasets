fsck命令能够检查和修复大部分类型的Linux文件系统，包括本章早些时候讨论过的ext、
ext2、ext3、ext4、ReiserFS、JFS和IXFS。该命令的格式是：
Eack optiona fileayaten
你可以在命令行上列出多个要检查的文件系统。文件系统可以通过设备名、在虚拟目录中的
挂载点以及分配给文件系统的唯一UUID值来引用。
跨门尽管日志式文件系统的用户需要用到Esck命令，但是COW文件系统的用户是否也得使用
该命令还存在争议。实际上，ZFS文件系统甚至都没有提供fsck工具的接口
fsck命令使用/etc/fstab文件来自动决定正常挂载到系统上的存储设备的文件系统。如果存储
设备尚未挂载（比如你刚刚在新的存储设备上创建了个文件系统），你需要用-t命令行选项来指
定文件系统类型。表8-4列出了其他可用的命令行选项。
表8-4fack的命令行选项
选项
描述
如果检测到错误，白动修复文件系统
-A
检查/etc/fstab文件中列出的所有文件系统
C
给支持进度条功能的文件系统显示一个进度条（只有ex2和ext3）
不进行检查，只量示哪些检查会执行
出现错误时提示
-R
使用-入选项时跳过根文件系统
8
检查多个文件系统时，依次进行检查
-t
指定要检查的文件系统类型
T
启动时不显示头部信息
A-
在检查时产生详细输出
Y
检测到错误时自动修复文件系统
你可能注意到了，有些命令行选项是重复的。这是为多个命令实现通用的前端带来的部分间
题。有些文件系统修复命令有一些额外的可用选项。如果要做更高级的错误检查，就需要查看这
个文件系统修复工具的手册页面来确定是不是有该文件系统专用的扩展选项。
---
## Page 169
154第8章管理文件系统
窍门只能在未挂载的文件系统上运行fsck命令。对大多数文件系统来说，你只需卸载文件系
统来进行检查，检查完成之后重新挂载就好了。但因为根文件系统含有所有核心的Linux
命令和日志文件，所以你无法在处于运行状态的系统上卸载它。
这正是亲手体验LinuxLiveCD的好时机！只需用LiveCD启动系统即可，然后在根文件系
统上运行fsck命令。
到目前为止，本章讲解了如何处理物理存储设备中的文件系统。Linux还有另一些方法可以
为文件系统创建逻辑存储设备。下一节将告诉你如何使用逻辑存储设备。
8.3逻辑卷管理
如果用标准分区在硬盘上创建了文件系统，为已有文件系统添加额外的空间多少是一种痛苦
的体验。你只能在同一个物理硬盘的可用空间范围内调整分区大小。如果硬盘上没有地方了，你
就必须弄一个更大的硬盘，然后手动将已有的文件系统移动到新的硬盘上。
这时候可以通过将另外一个硬盘上的分区加人已有文件系统，动态地添加存储空间。Linux
逻辑卷管理器（logicalvolume manager，LVM）软件包正好可以用来做这个。它可以让你在无需
重建整个文件系统的情况下，轻松地管理磁盘空间。
8.3.1逻辑卷管理布局
逻辑卷管理的核心在于如何处理安装在系统上的嫂盘分区。在逻辑卷管理的世界里，硬盘称
作物理卷（pbysical volume，PV）。每个物理卷都会映射到硬盘上特定的物理分区。
多个物理卷集中在一起可以形成一个春组（volumegroup，VG）。逻辑卷管理系统将卷组视
为一个物理硬盘，但事实上卷组可能是由分布在多个物理硬盘上的多个物理分区组成的。卷组提
供了一个创建逻辑分区的平台，而这些逻辑分区则包含了文件系统
整个结构中的最后一层是逻辑卷（logicalvolume，LV）。逻辑卷为Linux提供了创建文件系统
的分区环境，作用类似于到目前为止我们一直在探讨的Linux中的物理硬盘分区。Limux系统将逻
辑卷视为物理分区。
可以使用任意一种标准Linux文件系统来格式化逻辑卷，然后再将它加入Linux虚拟目录中的
某个挂载点。
图8-1显示了典型Linux逻辑卷管理环境的基本布局。
---
## Page 170
8.3逻辑卷管理
155
逻辑卷1
逻辑卷2
卷组
物理卷1
物理卷？
物理卷3
物理叁4
物理卷5
分区1
分区2
分区1
分区2
分区1
未使用空间
硬盘1
硬盘2
硬盘3
图8-1逻辑卷管理环境
图8-1中的卷组横跨了三个不同的物理硬盘，覆盖了五个独立的物理分区。在卷组内部有两
个独立的逻辑卷。Linux系统将每个逻辑卷视为一个物理分区。每个逻辑卷可以被格式化成ext4
文件系统，然后挂载到虚拟目录中某个特定位置。
注意，图8-1中，第三个物理硬盘有一个未使用的分区。通过逻辑卷管理，你随后可以轻松
地将这个未使用分区分配到已有卷组：要么用它创建一个新的逻辑卷，要么在需要更多空间时用
它来扩展已有的逻辑卷。
类似地，如果你给系统添加了一块硬盘，逻辑卷管理系统允许你将它添加到已有卷组，为某
个已有的卷组创建更多空间，或是创建一个可用来挂载的新逻辑卷。这种扩展文件系统的方法要
好用得多！
8.3.2Linux中的LVM
Linux LVM是由Heinz Mauelshagen开发的，于1998年发布到了Linux社区。它允许你在Linux
上用简单的命令行命令管理一个完整的逻辑卷管理环境。
LinuxLVM有两个可用的版本。
口LVM1：最初的LVM包于1998年发布，只能用于Linux内核2.4版本。它仅提供了基本的逻
辑卷管理功能。
口LVM2：LVM的更新版本，可用于Linux内核2.6版本。它在标准的LVM1功能外提供了额
外的功能。
大部分采用2.6或更高内核版本的现代Linux发行版都提供对LVM2的支持。除了标准的逻辑
卷管理功能外，LVM2还提供了另外一些好用的功能。
1.快照
最初的LinuxLVM允许你在逻辑卷在线的状态下将其复制到另一个设备。这个功能叫作快
照。在备份由于高可靠性需求而无法锁定的重要数据时，快照功能非常给力。传统的备份方法在
将文件复制到备份媒体上时通常要将文件锁定。快照允许你在复制的同时，保证运行关键任务的
---
## Page 171
156第8章管理文件系统
Web服务器或数据库服务器继续工作。遗憾的是，LVM1只允许你创建只读快照。一旦创建了快
照，就不能再写人东西了。
LVM2允许你创建在线逻辑卷的可读写快照。有了可读写的快照，就可以删除原先的逻辑卷，
然后将快照作为替代挂载上。这个功能对快速故障转移或涉及修改数据的程序试验（如果失败，
需要恢复修改过的数据）非常有用。
2.条带化
LVM2提供的另一个引人注目的功能是条带化（striping）。有了条带化，可跨多个物理硬盘
创建逻辑卷。当LinuxLVM将文件写人逻辑卷时，文件中的数据块会被分散到多个硬盘上。每个
后继数据块会被写到下一个硬盘上。
条带化有助于提高硬盘的性能，因为Linux可以将一个文件的多个数据块同时写入多个硬盘，
而无需等待单个硬盘移动读写磁头到多个不同位置。这个改进同样适用于读取顾序访问的文件，
因为LVM可同时从多个硬盘读取数据。
说明LVM条带化不同于RAID条带化。LVM条带化不提供用来创建容错环境的校验信息。事实
上，LVM条带化会增加文件因硬盘故障而丢失的概率。单个硬盘故障可能会造成多个逻
鲜卷无法访问。
3.镜像
通过LVM安装文件系统并不意味着文件系统就不会再出问题。和物理分区一样，LVM逻辑
卷也容易受到断电和磁盘故障的影响。一旦文件系统损坏，就有可能再也无法恢复。
LVM快照功能提供了一些安慰，你可以随时创建逻辑卷的备份副本，但对有些环境来说可能
还不够。对于涉及大量数据变动的系统，比如数据库服务器，自上次快照之后可能要存储成百上
干条记录。
这个问题的一个解决办法就是LVM镜像。镜像是一个实时更新的逻辑卷的完整副本。当你创
建镜像逻辑卷时，LVM会将原始逻辑卷同步到镜像副本中。根据原始逻辑卷的大小，这可能需要
一些时间才能完成。
一旦原始同步完成，LVM会为文件系统的每次写操作执行两次写人一—一次写人到主逻辑
卷，一次写人到镜像副本。可以想到，这个过程会降低系统的写人性能。就算原始逻辑卷因为某
些原因损坏了，你手头也已经有了一个完整的最新副本！
8.3.3使用LinuxLVM
现在你已经知道LinuxLVM可以做什么了，本节将讨论如何创建LVM来帮助组织系统上的硬
盘空间。LinuxLVM包只提供了命令行程序来创建和管理逻辑卷管理系统中所有组件。有些Limux
发行版则包含了命令行命令对应的图形化前端，但为了完全控制你的LVM环境，最好习惯直接使
用这些命令。
---
## Page 172
8.3逻辑卷管理
157
1.定义物理卷
创建过程的第一步就是将硬盘上的物理分区转换成LinuxLVM使用的物理卷区段。我们的朋
友fdisk命令可以帮忙。在创建了基本的Linux分区之后，你需要通过t命令改变分区类型。
Cormand (m for help) I t
[.. . ] 
Selected partition 1
Hex code (type L to list codes): Be
Changed eystem type of partition 1 to Be (Linux LVM)
Cormand (m for help) 1 p
Disk /6ev/sdb: 5368 M8, 5368709120 bytes
255 heads, 63 sectors/track, 652 cylinders
Units = cy1inders of 16065 * 512 = 8225280 bytes
Sector size (logica1/physical)1 512 bytes / 512 bytes
I/0 size (minimun/optina1): 512 bytes / 512 bytes
Diek identifier1 0xa8661341
Device Boot
Start
pug
262
Blocks
Id Systen
/dev/sdb1
1
21044.83 +
8e
Linux LVK
The partition table has been altered!
Cormand (m for help) 1 
Calling ioctl () to re-read partition table.
Syncing disks,
分区类型Be表示这个分区将会被用作LinuxLVM系统的一部分，而不是一个直接的文件系统
（就像你在前面看到的83类型的分区）。
说明如果下一步中的pvcreate命令不能正常工作，很可能是因为LVM2软件包没有联认安装。
可以使用软件包名Ivm2，按照第9章申介绍的软件安装方法安装这个包
下一步是用分区来创建实际的物理卷。这可以通过pvcreate命令来完成。pvcreate定义了
用于物理卷的物理分区。它只是简单地将分区标记成LinuxLVM系统中的分区而已。
 sudo pvcreate /@ev/sdb1
Gev_is_mpath: falled to get device for 8:17
Phyaical volume */dev/adb1* succesafully created
说明别被吓人的消息dev_is_mpath：failed to get device for B:17或类似的消息哦
住了。只要看到了successfully created就没问题。pvcreate命令会检查分区是否
为多路（multi-path，mpath）设备。如果不是的话，就会发出上面那段消息
---
## Page 173
158
第8章管理文件系统
如果你想查看创建进度的话，可以使用pvdisplay命令来显示已创建的物理卷列表。
 sudo pvdisplay /dev/sdb1
*/dev/sdb1* is a nev physical volune of *2.01 GiB*
-- NEW Physica] volume ---
PV Name
/dev/sdb1
VG Name
PV Size
2.01 GiB
Allocatable
PE Size
NO
Total PE
0
Allocated PE
Free PE
PV UUID
0FIuq2LBodIOwt 8VeNtg1nQ2ikrGU2v7
$
pvdisplay命令显示出/dev/sdb1现在已经被标记为物理卷。注意，输出中的vG Name内容为
空，因为物理卷还不属于某个卷组。
2.创建卷组
下一步是从物理卷中创建一个或多个卷组。究竞要为系统创建多少卷组并没有既定的规则，
你可以将所有的可用物理卷加到一个卷组，也可以结合不同的物理卷创建多个卷组。
要从命令行创建卷组，需要使用vgcreate命令。vgcreate命令需要一些命令行参数来定义
卷组名以及你用来创建卷组的物理卷名。
$ sudo vgcreate Vol1 /dev/sdb1
Volume group *Vol1* successfully created
输出结果平淡无奇。如果你想看看新创建的卷组的细节，可用vgdisplay命令。
$ sudo vgdiaplay Vo11
--- Volune group
VG Name
Vo11
System ID
Fornat
1vn2
Metadata Areas
Metadata Sequence No
1
VG Access
1
readl/vrite
VG Status
resizable
MAX LV
Cur LV
0
Open LV
0
0
Max PV
Cur PV
VG size
Act PV
2,00 GiB
PE Size
4, 00 MiB
Total PE
513
Alloc PE / size
0 /0
Free PE / size
513 / 2.00 GiB
VG UUID
oe4I7e 5RA9G9ti ANoIQKLz qkX4 58wj6e
---
## Page 174
8.3逻辑卷管理
159
这个例子使用/dev/sdb1分区上创建的物理卷，创建了一个名为Vo11的卷组。
创建一个或多个卷组后，就可以创建逻辑卷了。
3.创建逻辑卷
Linux系统使用逻辑卷来模拟物理分区，并在其中保存文件系统。Linux系统会像处理物理分
区一样处理逻辑卷，允许你定义逻辑卷中的文件系统，然后将文件系统挂载到虚拟目录上。
要创建逻辑卷，使用1vcreate命令。虽然你通常不需要在其他LinuxLVM命令中使用命令
行选项，但1vcreate命令要求至少输人一些选项。表8-5显示了可用的命令行选项。
表8-51vcreate的选项
选
新
长选项名
--chunksize
描
述
-c
指定快照逻辑卷的单位大小
-cont:iguous
设置或重置连续分配频略
-
--txipea
指定条带数
-I