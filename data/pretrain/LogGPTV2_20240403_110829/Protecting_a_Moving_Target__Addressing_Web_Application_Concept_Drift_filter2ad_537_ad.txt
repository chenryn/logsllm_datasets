### Injection and Command Execution Exploits

The study includes a variety of attacks, such as cross-site scripting (XSS) (e.g., CVE-2009-1224), SQL injection (e.g., CVE-2009-0258), and command execution exploits. The dataset comprises 1,000 attacks, including 400 XSS attacks, 400 SQL injections, and 200 command injections. The XSS attacks are based on variations from [20], the SQL injections are derived from [21], and the command execution exploits are variations of common command injections targeting Linux and Windows platforms.

### Data Collection and Preparation

In both experiments, the web anomaly detection system, WebAnomaly, was evaluated using HTTP traffic data from real-world web applications. This data was collected from multiple monitoring points at both commercial and academic sites. For each application, the complete contents of each HTTP connection over several months were recorded. The resulting data flows were filtered using signature-based techniques to remove known attacks and then partitioned into distinct training and test sets. The dataset includes 823 unique web applications, 36,392 unique resource paths, 16,671 unique parameters, and 58,734,624 HTTP requests.

### Effects of Concept Drift

#### Experiment 1: Impact on False Positive Rates

In the first experiment, we demonstrate that concept drift in real-world web applications significantly increases false positive rates. WebAnomaly was initially trained on an unmodified, filtered dataset. A baseline ROC curve was obtained by analyzing a test dataset, Q. Subsequently, the test dataset was modified to introduce new behaviors, such as upgrades or source code refactoring, to create Qdrift. The changes included:
- 6,749 new session flows by introducing requests for new resources and creating request sequences for both new and known resources.
- 6,750 new parameters added to existing requests.
- 5,785 mutations of observed parameter values in client requests.

These changes were reflected in the web application's responses, with references to new resources and updated links and forms. WebAnomaly, without the HTTP response modeling technique, was then run over Qdrift. The resulting ROC curves (Figure 4a) show a significant increase in the false positive rate for Qdrift compared to Q, indicating that the detector cannot distinguish between anomalies due to malicious behavior and legitimate changes.

### Change Detection

#### Experiment 2: Improvement in Detection Accuracy

The second experiment quantifies the improvement in WebAnomaly's detection accuracy when the HTTP response modeling technique is enabled. The detector was again trained on an unmodified, filtered dataset and evaluated on both Q and Qdrift. Figure 4b shows the results, where the false positive rate for Qdrift is greatly reduced and approaches that of Q. The small increase in the false positive rate can be attributed to changes in parameter values.

Table 1 details the reduction in the false positive rate due to HTTP response modeling for various types of changes. The total number of anomalies caused by each type of change, the number of false positives, and the corresponding reduction in the false positive rate are shown. The results indicate that the detector can identify anomalies caused by changes in web application behavior, leading to a significant decrease in the false positive rate.

### Conclusion

We conclude that HTTP response modeling is an effective technique for distinguishing between anomalies due to legitimate changes in web applications and those caused by malicious behavior. Anomaly detectors that do not account for concept drift are prone to generating a large number of false positives. Future work will focus on modeling the behavior of JavaScript code and other interactive client-side components.

### References

1. Turner, D., Fossi, M., Johnson, E., Mark, T., Blackbird, J., Entwise, S., Low, M.K., McKinney, D., Wueest, C.: Symantec Global Internet Security Threat Report – Trends for July-December 2007. Technical Report XII, Symantec Corporation (April 2008)
2. Shezaf, O., Grossman, J., Auger, R.: Web Hacking Incidents Database (March 2009), http://whid.xiom.org
3. Open Security Foundation: DLDOS: Data Loss Database – Open Source (March 2009), http://datalossdb.org/
4. Cho, S., Cha, S.: SAD: Web Session Anomaly Detection Based on Parameter Estimation. Computers & Security, vol. 23, pp. 312–319 (2004)
5. Kruegel, C., Robertson, W., Vigna, G.: A Multi-model Approach to the Detection of Web-based Attacks. Journal of Computer Networks 48(5), 717–738 (2005)
6. Robertson, W., Vigna, G., Kruegel, C., Kemmerer, R.A.: Using Generalization and Characterization Techniques in the Anomaly-based Detection of Web Attacks. Proceedings of the Network and Distributed System Security Symposium (NDSS 2006), San Diego, CA, USA (February 2006)
... (additional references continue as in the original text)