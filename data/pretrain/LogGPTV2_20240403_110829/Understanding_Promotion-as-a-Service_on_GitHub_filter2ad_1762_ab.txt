promotion services and found that it costs $0.40 to purchase one
star and $0.50 to purchase one fork.
Fourth, there are a few online shops selling GitHub stars and
forks (e.g., the websites illustrated in [15] and [10]). We found that
the online shops in different locations preferred different charging
modes. In China, operators preferred online third-party payment
like Alipay or WeChat Pay, although this type could be tracked and
Figure 1: Implications of watch, star, and fork
be evaluated in part based on the number of stars and forks of
her repositories. Therefore, promotion services have emerged and
been exploited by developers to promote their repositories with
paid stars and forks, especially for job screenings. In this section,
we will explain how stars and forks work in GitHub, how GitHub
promotion services operate and make a profit. At the end, we will
also discuss the problem scope of this work.
2.1 How Stars and Forks Work on GitHub
Generally speaking, starring a repository is considered a technical
endorsement on the repository. Therefore, the code quality of a
repository has a positive correlation with the number of stars. De-
velopers can obtain a considerable number of stars by writing code
with a superior quality [2]. Starring a repository also helps a GitHub
user keep track of changes. Figure 1 shows the user interface of
these features.
Forking a repository is similar to creating a copy, which allows
developers to modify code without directly changing the original
repository. After forking a repository, developers can either propose
changes to the repository that will be reviewed later or create a new
project based on it. Therefore, the number of forks can indicate the
popularity and re-usability of a repository.
The focus of this work is on stars and forks in a repository,
because these two operations are abused by dishonest developers
to increase their career prospects in software development [4, 6].
Other GitHub social-networking functions such as “watch” and
“follow” are not considered, as to the best of our knowledge, they
have not been used as factors for job screenings so far.
2.2 How GitHub Promotion Operates
We observed the GitHub promotion services from search engines,
public websites, web blogs, online shops, and instant messaging
(IM) tools including Telegram, QQ, and WeChat (the last two are
mainly used in China). The underground market in Darknet was
also included for this purpose 1. Here we focus on the entities
behind promotions and make the following observations.
First, there are a small number of merchants selling GitHub
accounts in the Darknet. One of them claimed that these selling
accounts can be successfully logged into and even offered a lifetime
warranty. The price is about $2.07 per account, which implies that
1We examined the most famous market, Dream Market, in Darknet.
ACSAC ’20, December 07–11, 2020, Online
Kun Du, Hao Yang, Yubao Zhang, Haixin Duan, Haining Wang, Shuang Hao, Zhou Li, and Min Yang
Figure 3: An example of GH Archive.
Figure 2: System Architecture.
linked to a specific person. In other regions, especially in North
America or Europe, operators preferred to use Paypal or Bitcoin.
In the end, to further understand the business model of GitHub
promotion, we ordered services from a few promotion service
providers and performed an infiltration study by following a similar
methodology of previous works that inspect underground busi-
ness [30, 32, 36, 38].
2.3 Problem Scope
It is worthwhile to note that GitHub promotion is a worldwide prob-
lem rather than a regional one (e.g., China), even though the way
that promotion service providers operate in different countries may
vary. For example, promotion service providers in China utilize both
websites and IM groups to attract customers and accept payment
mainly through the payment channels of IM tools (e.g., WeChat).
By contrast, in North America, promotion service providers sell
GitHub stars and watchers mainly through websites and accept
payment only via Paypal or Bitcoin [10, 15]. Some people in the
other countries have also discussed this problem on Internet [13, 20]
3 PROMOTION ACCOUNT DETECTION
In this section, we describe the detection methodology used in this
paper. Figure 2 shows the architecture of the detection system. We
first describe the dataset used to understand GitHub promotion.
Then we introduce how to conduct data preprocessing and data
analysis. Later, we present how to train the classifier and the de-
tection results of the classifier. Finally, we show how we validated
these results.
3.1 Datasets
We collected the GitHub data from the following three sources:
GH Archive [14]. GH Archive records the public GitHub time-
line and archives it for further analysis. Each line of an archive file
represents a JSON encoded event record reported by the GitHub
API, as shown in Figure 3. Each event record includes seven prop-
erties, such as “event_id,” “event_type,” and “actor.” In this study,
we collected all archive files from 2015 to 2019 and used four prop-
erties, including “actor.login_name,” “repo.name,” “created_at,” and
“event_type.”
GitHub API [17]. GH Archive only archives the history since
2015 and also misses the registration and profile information. So,
GitHub API is utilized to collect these missing data, such as the
profile of a specific GitHub account. For avoid being abused, the API
interface has a rate limit, 60 requests per hour for unauthenticated
users.
GitHub Web Interface [22]. Through the web interface, we
can crawl the information directly from GitHub web pages, such as
a specific GitHub account’s avatar, the popular repository list, and
the hot trend list. There is no visit limit in most cases.
3.2 Data Preprocessing
We extracted a total of 23, 375, 824 accounts in GH Archive from
2015 to 2019. To build a classification model in an effective and
efficient manner, we preprocessed the dataset as follows:
Removing Events With No Accounts. We grouped each ac-
count’s event logs by event type and found that not every event
type contains a valid record. Therefore, we removed all such event
types if all accounts extracted have no valid records between 2015
and 2019 (32 event types removed in total) and kept 14 event types.
We list all these 14 event types and their meanings in Table 1. We
highlight both fork and watch events since they are closely related
to the fork and star promotion services in GitHub.
Removing Legitimate Accounts. As illustrated in Section 2.2,
promoters make the most of their profit by starring and forking
repositories. Therefore, we ruled out inactive accounts that have
no star or fork action records between 2015 and 2019, since those
accounts were not engaged in the promotion we targeted.
Understanding Promotion-as-a-Service on GitHub
ACSAC ’20, December 07–11, 2020, Online
Table 1: Event meanings and Example of User log count in some event type.
Event Type
ForkEvent
WatchEvent
CommitCommentEvent
CreateEvent
DeleteEvent
GollumEvent
IssueCommentEvent
IssuesEvent
MemberEvent
PublicEvent
PullRequestEvent
PullRequestRevi-ewCommentEvent
PushEvent
ReleaseEvent
Explanation
a user forks a repository.
someone stars a repository
a commit comment is created.
create repository, branch, or tag.
delete branch or tag.
a Wiki page is created or updated.
an issue comment is created, edited, or deleted.
an issue is opened, edited, deleted or etc.
a user accepts or is removed as a collaborator to a repository.
a private repository is open sourced.
a pull request is assigned, unassigned etc.
a comment on a pull request’s unified diff is created, edited and etc.
Triggered on a push to a repository branch.
a release is published.
User Examples
adieuadi**
6
881
3
42
58
0
115
63
5
2
523
43
770
5
anrf**
3
97
4
53
1
0
646
204
2
0
46
110
727
9
xzrunn**
1
51
0
93
0
0
0
0
0
0
0
0
1728
0
To further filter out other irrelevant accounts, we developed a
simple heuristic that considers the cost of maintaining a promotion
account and the gain of selling forks and stars. We denote the prices
for a single star and fork as 𝑃𝑠 and 𝑃𝑓 , the number of stars and
forks that have been given by the promotion account as 𝐶𝑠 and 𝐶𝑓 ,
respectively. The value of the account is denoted as 𝑉 . An account
is considered a possible promotion account if it holds 𝑃𝑠 ×𝐶𝑠 + 𝑃𝑓 ×
𝐶𝑓 > 𝑉 . We obtain 𝐶𝑠 and 𝐶𝑓 of an account by counting the number
of its watch and fork events, and set 𝑃𝑠, 𝑃𝑓 , and 𝑉 based on the
infiltration study above in Section 2.2. Specifically, we set 𝑉 to 2.07,
𝑃𝑠 to 0.4, and 𝑃𝑓 to 0.5, in light of the observations in DreamMarket
and IM groups. The price is similar across different promotion
service providers. After ruling out these accounts, we obtained
more than 14 million possible dedicated accounts for further data
analysis.
3.3 Characteristics of GitHub Promotion and
Obstacles in Distinguishing
In order to acquire the ground truth, we contacted 10 promotion
service providers in the IM groups, and purchased 1, 023 star and
fork promotions for our test repository. To avoid these providers
coming from a single group, we contacted 4 from the QQ group
that is the most popular IM tool in China, 3 from WeChat that
is another popular IM tool in China in recent years, and the rest
3 from telegram that is used by promoters worldwide. Each sin-
gle fork or star corresponds to an individual promotion account.
Therefore, we collected 1, 023 distinct promotion accounts via the
test repository. We crawled all of the promotion accounts’ informa-
tion and extracted the events of each promotion account from the
archive files. There are three main characteristics and obstacles in
distinguishing promotion accounts from normal ones.
(1) The purpose of a promotion account is to generate profit by
performing star and fork operations on a customer’s repository.
The owners of promotion accounts rarely use these accounts for
project development. As such, most of the promotion accounts’
operations are star and fork. By contrast, the operations on normal
accounts are much more diverse, just like creating a repository,
pulling and modifying code. However, there exist some normal
users whose action pattern is quite similar to that of promotion
accounts, since they star and fork a number of repositories likely
for future concerns. This similarity can result in increasing the
false positive rate in our detection. To overcome this difficulty, we
employ more reliable features (e.g., time distribution) to address this
problem, which will be discussed later.
(2) Many customers who purchase promotion services will ask
service providers to finish the star and fork promotions as soon
as possible. Therefore, promotion accounts are usually associated
with a large number of star and fork operations in a short time
period. However, this pattern could also exhibit on normal users as
well. A visitor to another account’s homepage can easily star all the
repositories without taking a long time to search. In fact, we have
been informed by some GitHub users that they prefer to star all
the projects under a reputable developer account (e.g., Facebook)
in order to watch any related code changes. This also increases the
complexity of differentiating legitimate and promotion accounts.
To overcome this challenge, we used the time interval of adjacent
operation pair as a feature, which will be illustrated in Section 3.5.
(3) Most promotion accounts perform star and fork operations on
well-known repositories in order to disguise as normal accounts for
evading detection. Table 2 shows an operation sequence in a short
interval from a promotion account. We observed that all operations
are “watch events,” which means starring a repository, and the
interval between two operations is less than 20 seconds. The fifth
record is the test repository we used in our study. The promotion
account performed star operations on not only our test repository
but also other repositories that belong to Facebook, Alibaba, etc
for evading detection. However, this pattern cannot last for a long
time, because the number of popular repositories is limited and one
repository can be starred or forked only once.
To distinguish promotion accounts from legitimate accounts, we
consider distinct characteristics of promotion accounts and develop
reliable features for training classifiers in the following illustration.
ACSAC ’20, December 07–11, 2020, Online
Kun Du, Hao Yang, Yubao Zhang, Haixin Duan, Haining Wang, Shuang Hao, Zhou Li, and Min Yang
Table 2: Operation Sequence of a Promotion Account
Type
No.
1 WatchEvent
2 WatchEvent
3 WatchEvent
4 WatchEvent
5 WatchEvent
6 WatchEvent
7 WatchEvent
8 WatchEvent