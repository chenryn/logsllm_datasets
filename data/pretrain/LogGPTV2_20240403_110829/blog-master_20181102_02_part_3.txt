[root@digoal oci]# ll       
total 67360       
drwxr-xr-x 2 root root     4096 Jan 19 11:02 instantclient_12_2       
-rw-r--r-- 1 root root 68965195 Jan 19 11:00 instantclient-basic-linux.x64-12.2.0.1.0.zip       
[root@digoal oci]# cd instantclient_12_2/       
[root@digoal instantclient_12_2]# ll       
total 216696       
-rwxrwxr-x 1 root root     44220 Jan 26  2017 adrci       
-rw-rw-r-- 1 root root       363 Jan 26  2017 BASIC_README       
-rwxrwxr-x 1 root root     57272 Jan 26  2017 genezi       
-rwxrwxr-x 1 root root   8033199 Jan 26  2017 libclntshcore.so.12.1       
-rwxrwxr-x 1 root root  71638263 Jan 26  2017 libclntsh.so.12.1       
-r-xr-xr-x 1 root root   2981501 Jan 26  2017 libipc1.so       
-r-xr-xr-x 1 root root    539065 Jan 26  2017 libmql1.so       
-r-xr-xr-x 1 root root   6568149 Jan 26  2017 libnnz12.so       
-rwxrwxr-x 1 root root   2218687 Jan 26  2017 libocci.so.12.1       
-rwxrwxr-x 1 root root 124771800 Jan 26  2017 libociei.so       
-r-xr-xr-x 1 root root    158543 Jan 26  2017 libocijdbc12.so       
-r-xr-xr-x 1 root root    380996 Jan 26  2017 libons.so       
-rwxrwxr-x 1 root root    116563 Jan 26  2017 liboramysql12.so       
-r--r--r-- 1 root root   4036257 Jan 26  2017 ojdbc8.jar       
-rwxrwxr-x 1 root root    240476 Jan 26  2017 uidrvci       
-rw-rw-r-- 1 root root     74230 Jan 26  2017 xstreams.jar       
[root@digoal instantclient_12_2]# cp libclntsh.so.12.1 /opt/edb/as10/lib/       
[root@digoal instantclient_12_2]# cd /opt/edb/as10/lib       
[root@digoal lib]# ln -s libclntsh.so.12.1 libclntsh.so       
```   
6、创建DBLINK，创建ORACLE外部表，略。参考上面的连接。  
7、配置数据库参数  
```  
su - enterprisedb  
cd $PGDATA  
vi postgresql.conf  
listen_addresses = '0.0.0.0'  
port = 4001   # 多实例时，不同的数据库端口必须不同。  
max_connections = 4000  
superuser_reserved_connections = 13  
unix_socket_directories = '.,/tmp'  
unix_socket_permissions = 0700  
row_security = on  
tcp_keepalives_idle = 45  
tcp_keepalives_interval = 10  
tcp_keepalives_count = 10  
shared_buffers = 32GB  
huge_pages = try  
max_prepared_transactions = 4000  
work_mem = 8MB  
maintenance_work_mem = 2GB  
autovacuum_work_mem = 2GB  
max_stack_depth = 4MB  
dynamic_shared_memory_type = posix  
shared_preload_libraries = '$libdir/dbms_pipe,$libdir/edb_gen,$libdir/dbms_aq'  
vacuum_cost_delay = 0  
bgwriter_delay = 10ms  
bgwriter_lru_maxpages = 1000  
bgwriter_lru_multiplier = 5.0  
effective_io_concurrency = 0  
max_worker_processes = 64  
max_parallel_workers_per_gather = 8  
max_parallel_workers = 24  
wal_level = replica  
synchronous_commit = off   # 异步提交  
full_page_writes = on  # 如果文件系统支持COW，可以关闭。如果块设备支持8K（block_size决定）原子写，也可以关闭。开启有一定性能影响  
wal_buffers = 64MB  
wal_writer_delay = 10ms  
wal_writer_flush_after = 1MB  
checkpoint_timeout = 35min  
max_wal_size = 64GB  
min_wal_size = 16GB  
checkpoint_completion_target = 0.1  
archive_mode = on  
archive_command = '/usr/bin/true'  
max_wal_senders = 16  
wal_keep_segments = 2048  
wal_sender_timeout = 30s  
max_replication_slots = 16  
hot_standby = on  
max_standby_archive_delay = 300s  
max_standby_streaming_delay = 300s  
wal_receiver_status_interval = 1s  
wal_receiver_timeout = 30s  
max_logical_replication_workers = 16  
max_sync_workers_per_subscription = 4  
random_page_cost = 1.1  
effective_cache_size = 400GB  
log_destination = 'csvlog'  
logging_collector = on  
log_truncate_on_rotation = on  
log_min_duration_statement = 10s  
log_checkpoints = on  
log_connections = on  
log_disconnections = on  
log_error_verbosity = verbose    
log_line_prefix = '%t '  
log_lock_waits = on  
log_statement = 'ddl'  
log_temp_files = 0  
log_timezone = 'PRC'  
track_io_timing = on  # 如果不需要跟踪IO的时间，可以关闭，开启有一定性能影响  
track_functions = all    
track_activity_query_size = 2048  
autovacuum = on  
log_autovacuum_min_duration = 0  
autovacuum_max_workers = 6  
autovacuum_freeze_max_age = 1200000000  
autovacuum_multixact_freeze_max_age = 1400000000  
autovacuum_vacuum_cost_delay = 0  
statement_timeout = 300s  
lock_timeout = 15s                                
idle_in_transaction_session_timeout = 60s  
vacuum_freeze_table_age = 1150000000  
vacuum_multixact_freeze_table_age = 1150000000  
datestyle = 'redwood,show_time'  
timezone = 'PRC'  
lc_messages = 'en_US.utf8'  
lc_monetary = 'en_US.utf8'  
lc_numeric = 'en_US.utf8'  
lc_time = 'en_US.utf8'  
default_text_search_config = 'pg_catalog.english'  
edb_redwood_date = on  
edb_redwood_greatest_least = on  
edb_redwood_strings = on  
db_dialect = 'redwood'                
edb_dynatune = 100  
edb_dynatune_profile = mixed  
timed_statistics = off  
```  
8、数据库防火墙配置  
```  
su - enterprisedb  
cd $PGDATA  
vi pg_hba.conf  
# TYPE  DATABASE        USER            ADDRESS                 METHOD  
# "local" is for Unix domain socket connections only  
local   all             all                                     trust  
# IPv4 local connections:  
host    all             all             127.0.0.1/32            trust  
# IPv6 local connections:  
host    all             all             ::1/128                 trust  
# Allow replication connections from localhost, by a user with the  
# replication privilege.  
local   replication     all                                     trust  
host    replication     all             127.0.0.1/32            trust  
host    replication     all             ::1/128                 trust  
host all all 0.0.0.0/0 md5  
```  
9、重启数据库  
```  
pg_ctl restart -m fast  
```  
# 二、IDE  
## cli  
https://www.postgresql.org/docs/current/static/app-psql.html  
```  
enterprisedb@pg11-test-> psql  
psql.bin (10.5.12)  
Type "help" for help.  
postgres=# \dt  
Did not find any relations.  
postgres=# \l  
                                          List of databases  
   Name    |    Owner     | Encoding |  Collate   |   Ctype    | ICU |       Access privileges         
-----------+--------------+----------+------------+------------+-----+-------------------------------  
 edb       | enterprisedb | UTF8     | en_US.utf8 | en_US.utf8 |     |   
 postgres  | enterprisedb | UTF8     | en_US.utf8 | en_US.utf8 |     |   
 template0 | enterprisedb | UTF8     | en_US.utf8 | en_US.utf8 |     | =c/enterprisedb              +  
           |              |          |            |            |     | enterprisedb=CTc/enterprisedb  
 template1 | enterprisedb | UTF8     | en_US.utf8 | en_US.utf8 |     | =c/enterprisedb              +  
           |              |          |            |            |     | enterprisedb=CTc/enterprisedb  
(4 rows)  
```  
## gui  
1、pem (Enterprisedb提供的GUI工具)  
https://www.enterprisedb.com/software-downloads-postgres  
2、pgadmin  
https://www.pgadmin.org/  
[《阿里云ppas 逻辑备份(导出)、还原 - 导出到本地、从本地导入》](../201810/20181018_03.md)    
# 三、压测  
## TPC-B  
```  
su - enterprisedb  
```  
初始化1亿TPC-B数据  
```  
pgbench -i -s 1000  
```  
只读测试  
```  
pgbench -M prepared -n -r -P 1 -c 64 -j 64 -T 120 -S  
transaction type:   
scaling factor: 1000  
query mode: prepared  
number of clients: 64  
number of threads: 64  
duration: 120 s  
number of transactions actually processed: 125854784  
latency average = 0.061 ms  
latency stddev = 0.062 ms  
tps = 1048623.422874 (including connections establishing)  
tps = 1048713.313561 (excluding connections establishing)  
script statistics:  
 - statement latencies in milliseconds:  
         0.001  \set aid random(1, 100000 * :scale)  
         0.060  SELECT abalance FROM pgbench_accounts WHERE aid = :aid;  
```  
读写混合测试  
```  
pgbench -M prepared -n -r -P 1 -c 64 -j 64 -T 120   
transaction type:   
scaling factor: 1000  
query mode: prepared  
number of clients: 64  
number of threads: 64  
duration: 120 s  
number of transactions actually processed: 10363880  
latency average = 0.741 ms  
latency stddev = 1.315 ms  
tps = 86351.412706 (including connections establishing)  
tps = 86359.549707 (excluding connections establishing)  
script statistics:  
 - statement latencies in milliseconds:  
         0.002  \set aid random(1, 100000 * :scale)  
         0.001  \set bid random(1, 1 * :scale)  
         0.001  \set tid random(1, 10 * :scale)  
         0.001  \set delta random(-5000, 5000)  
         0.050  BEGIN;  
         0.155  UPDATE pgbench_accounts SET abalance = abalance + :delta WHERE aid = :aid;  
         0.077  SELECT abalance FROM pgbench_accounts WHERE aid = :aid;  
         0.109  UPDATE pgbench_tellers SET tbalance = tbalance + :delta WHERE tid = :tid;  
         0.102  UPDATE pgbench_branches SET bbalance = bbalance + :delta WHERE bid = :bid;  
         0.083  INSERT INTO pgbench_history (tid, bid, aid, delta, mtime) VALUES (:tid, :bid, :aid, :delta, CURRENT_TIMESTAMP);  
         0.162  END;  
```  
## TPC-C    
参考  
[《PostgreSQL 11 tpcc 测试(103万tpmC on ECS) - use sysbench-tpcc by Percona-Lab》](../201809/20180913_01.md)    
# 四、插件  
https://www.enterprisedb.com/advanced-downloads  
插件介绍、安装、使用  
## 图像  
```  
[root@pg11-test ~]# cd  
[root@pg11-test ~]# . /opt/edb/as10/.bash_profile   
-bash: unalias: vi: not found  
root@pg11-test-> git clone https://github.com/postgrespro/imgsmlr  
Cloning into 'imgsmlr'...  
remote: Enumerating objects: 146, done.  
remote: Total 146 (delta 0), reused 0 (delta 0), pack-reused 146  
Receiving objects: 100% (146/146), 241.11 KiB | 149.00 KiB/s, done.  
Resolving deltas: 100% (69/69), done.  
root@pg11-test-> cd imgsmlr  
root@pg11-test-> USE_PGXS=1 make clean  
rm -f imgsmlr.so   libimgsmlr.a  libimgsmlr.pc  
rm -f imgsmlr.o imgsmlr_idx.o  
rm -rf data/*.hex  
rm -rf results/ regression.diffs regression.out tmp_check/ tmp_check_iso/ log/ output_iso/  
root@pg11-test-> USE_PGXS=1 make  
gcc -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv -g -DLINUX_OOM_ADJ=0 -O2 -DMAP_HUGETLB=0x40000 -fPIC -I. -I./ -I/opt/edb/as10/include/server -I/opt/edb/as10/include/internal -I/opt/local/Current/include -D_GNU_SOURCE -I/opt/local/20160428/649c6f94-f2c0-4703-b065-99d58ae4acc6/include/libxml2 -I/opt/local/20160428/649c6f94-f2c0-4703-b065-99d58ae4acc6/include  -I/opt/local/Current/include/libxml2 -I/opt/local/Current/include -I/mnt/hgfs/edb-postgres.auto/server/source/libmm-edb.linux-x64/inst/include  -c -o imgsmlr.o imgsmlr.c  
gcc -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv -g -DLINUX_OOM_ADJ=0 -O2 -DMAP_HUGETLB=0x40000 -fPIC -I. -I./ -I/opt/edb/as10/include/server -I/opt/edb/as10/include/internal -I/opt/local/Current/include -D_GNU_SOURCE -I/opt/local/20160428/649c6f94-f2c0-4703-b065-99d58ae4acc6/include/libxml2 -I/opt/local/20160428/649c6f94-f2c0-4703-b065-99d58ae4acc6/include  -I/opt/local/Current/include/libxml2 -I/opt/local/Current/include -I/mnt/hgfs/edb-postgres.auto/server/source/libmm-edb.linux-x64/inst/include  -c -o imgsmlr_idx.o imgsmlr_idx.c  
gcc -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv -g -DLINUX_OOM_ADJ=0 -O2 -DMAP_HUGETLB=0x40000 -fPIC -shared -o imgsmlr.so imgsmlr.o imgsmlr_idx.o -L/opt/edb/as10/lib   -L/opt/local/20160428/649c6f94-f2c0-4703-b065-99d58ae4acc6/lib -L/opt/local/20160428/649c6f94-f2c0-4703-b065-99d58ae4acc6/lib  -L/opt/local/Current/lib -L/mnt/hgfs/edb-postgres.auto/server/source/libmm-edb.linux-x64/inst/lib -Wl,--as-needed -Wl,-rpath,'/opt/edb/as10/lib',--enable-new-dtags  -lgd   
root@pg11-test-> USE_PGXS=1 make install  
/bin/mkdir -p '/opt/edb/as10/lib'  
/bin/mkdir -p '/opt/edb/as10/share/extension'  
/bin/mkdir -p '/opt/edb/as10/share/extension'  
/usr/bin/install -c -m 755  imgsmlr.so '/opt/edb/as10/lib/imgsmlr.so'  
/usr/bin/install -c -m 644 .//imgsmlr.control '/opt/edb/as10/share/extension/'  
/usr/bin/install -c -m 644 .//imgsmlr--1.0.sql  '/opt/edb/as10/share/extension/'  
root@pg11-test-> psql  
psql.bin (10.5.12)  
Type "help" for help.  
postgres=# create extension imgsmlr;  
CREATE EXTENSION  
```  
用法  
[《PostgreSQL 11 相似图像搜索插件 imgsmlr 性能测试与优化 1 - 单机单表 (4亿图像)》](../201809/20180904_02.md)    
## 中文分词  
```  
[root@pg11-test ~]# cd  
[root@pg11-test ~]# . /opt/edb/as10/.bash_profile   