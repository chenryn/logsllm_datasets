User: How to configure Nginx as a reverse proxy server to implement load balancing and static resource caching?
Assistant: To configure Nginx as a reverse proxy server to achieve load balancing and static resource caching, you can follow the steps below: 1. Install Nginx: Install Nginx in the Linux system using apt-get, yum or source code. 2. Configure the reverse proxy: open the Nginx configuration file nginx.conf, find the server block under the http module, and add the following configuration: ``` server { listen 80; server_name example.com; location / { proxy_pass http://backend ; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; } location /static/ { root /var/www/example.com; expires 1h; add_header Cache-Control max-age=3600; } } ``` where , listen specifies the listening port number, server_name specifies the server name, location / indicates that all requests will be reverse-proxyed to the http://backend backend server; location /static/ indicates that all requests beginning with /static/ will be cached. 3. Configure load balancing: add the upstream block under the http module, and specify the IP address and port number of the backend server, as follows: ``` upstream backend { server 192.168.1.2:8080; server 192.168.1.3:8080; server 192.168.1.4:8080; } ``` The above configuration means that the round-robin algorithm is used to evenly distribute the requests to the 3 back-end servers. 4. Configure static resource caching: add expires and Cache-Control header information to the location /static/ block, and set the cache time and cache control strategy, as shown above. 5. Restart Nginx: After modifying the configuration file, use the nginx -t command to check whether the configuration file is correct, and then use the service management command to restart the Nginx service. Through the above configuration, Nginx can be used as a reverse proxy server to realize the functions of load balancing and static resource caching.