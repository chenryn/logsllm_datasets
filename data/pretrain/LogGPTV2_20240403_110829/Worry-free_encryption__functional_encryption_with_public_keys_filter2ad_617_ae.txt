1
We will now begin with deﬁning the precise requirements
we will require from the oblivious transfer protocol and la-
bel this new primitive Static OT 2
1 . We formally deﬁne this
primitive below.
A Static OT 2
1 protocol is between two parties, with one
party, the sender having two inputs (M0, M1) and the other
party the chooser has input one bit σ. The protocol is two
rounds, with the ﬁrst from chooser to sender and the second
a response from sender to chooser such that at the end the
chooser learns Mσ with the following guarantees:
Chooser Security: The sender’s view when σ = 0 or
when σ = 1 are computationally indistinguishable.
Sender Security: We use the ideal implementation def-
inition where a trusted third party receives M0 and M1 from
the sender and σ from the chooser and returns Mσ to the
chooser. For any distribution on (M0, M1) and any polyno-
mial time adversarial chooser A in the real implementation,
there exists a simulator A(cid:48) that takes the chooser’s role in
the ideal model with the same inputs as A such that the
outputs of A and A(cid:48) are indistinguishable given M0, M1.
Static Retrieval: For any ﬁrst round message from an
adversarial chooser there is a bit β such that any response
by a honest sender reveals no information about Mβ.
5.3 Security Deﬁnition
Intuitively, the deﬁnition we desire in this situation is
clear. Assume the user and CA collude to make a public
key P K. By the requirement of hidden credentials it should
be impossible for an honest user to determine the set of
credentials associated with P K, if there even is one. Perhaps
this collusion makes it possible to recover more about the
function than evaluation at a point.
The security requirement we would like is that every ma-
liciously generated P K has with it associated some x such
that all that can be recovered from Enc(f, P K, P P ) is f (x).
However, there is a slight diﬃculty in deﬁning this since the
malicious users may not be aware of what this implied cre-
dential x is, if such a credential even exists. Therefore, we
will make use of Ext an exponential time extractor which
recovers such an x. Recall that the guarantees on decompos-
able randomized encodings hold against non-uniform circuit
families; this will be crucial in maintaining security even if
the challenge function is generated after seeing the output
of this exponential time extractor.
We deﬁne the relevant experiment for our purposes below.
ExptA1,A2,A3 (1λ):
A1(1λ) → (P K, P P, σ1),
Ext(P K) → x ∈ {0, 1}n,
A2(P K, x, σ1) → (f1, f2, σ2),
z $←− {0, 1}, W.Enc(fz, P K, P P ) → C,
A3(C, σ2) → g,
Return (g, f0, f1, z).
We will say for the preceding experiment that a scheme is
Minimally Vulnerable to Collusion if there exists a pos-
sibly exponential time deterministic extractor Ext such that:
Pr[g = z ∧ f0(x) = f1(x) ∧ |f0| = |f1|] ≤ 1/2 + ν(λ)
where ν is negligible. Our scheme is below where O is a
1 protocol with rounds O1, O2 with d the state
Static OT2
from O1 that allows reconstruction by the function R. In
other words, the steps of the scheme can be represented as
O1(b) → (A, d), O2(M0, M1, A) → C, R(d, C) → Mb.
5.4 A Minimally Vulnerable Construction
We now describe a scheme that is minimally vulnerable
to collusion. At the moment we do not address the usual
Worry-Free Encryption properties, but will achieve a scheme
which satisﬁes both the usual CPA security notions and
the minimal vulnerability requirement shortly. The Setup
phase will be as before, with the CA publishing a signing
key SignK and storing a veriﬁcation key V K for S.
The pre-processing phase Pre will have the user run the
ﬁrst round of the oblivious transfer protocol O1(x[i]) →
(Σi, di) so that the transfer bit on the ith call is x[i]. That
this is a parallel notion to our previous construction should
now be clear, the user will only be granted access to one in-
dex at the ith location. It then outputs Σ = (Σi : i ∈ [1, n])
and stores SK = (di : i ∈ [1, n]).
The Authorization phase Auth will simply consist of the
central authority signing Σ, and the user’s check phase Check-
Auth will consist of checking this signature. Σ and the sig-
nature will be the user’s public key. Note that the CA is not
actually checking that the indices the user is receiving back
in the OT protocol correspond to his credentials.
Encryption begins by checking the signature and mak-
ing sure the public key is formatted as an n-tuple of 1st
round messages from the OT protocol. Then, it returns
Ci = O2([f ]i,b : b ∈ [1, 2], Σi) the second round of the
OT protocol on the two components of f at that index for
i ∈ [1, n]. To decrypt run R(di, Ci) → [f ]i,x[i] for i ∈ [1, n]
and reconstruct f (x). Call the above scheme M.
Theorem 5.1. If O is a static 1-out-of-2 oblivious trans-
fer scheme and (E, D) is a secure decomposable randomized
encoding, M is minimally vulnerable to collusion.
Proof: For each index i, Σi has a bit associated, bi such
that any response of O2 using Σi as the ﬁrst message will
hide [f ]i,b information theoretically by the static retrieval
guarantee. Let Ext to be the extractor which ﬁnds such a
bit for every index and labels the string of corresponding
bits x(cid:48), this is the string of bits corresponding to indices
where the transfer leaks no information. Then, Ext out-
puts x = x(cid:48). Note the challenge ciphertext can only depend
on [f ]i,x[i] for i ∈ [1, n]. The claim follows from the indis-
tinguishability of the randomized encoding (recall privacy
holds against non-uniform circuit families and therefore any
σ2, P K which allows A3 a non-negligible probability to dis-
tinguish the encryptions of the encodings with non-negligible
probably can be hard-wired into the circuit).
A modiﬁcation for Worry-Free Security. In order to
achieve CPA Worry-Free Encryption guarantees along with
the guarantee of minimal vulnerability, a slight modiﬁca-
tion will be needed. We will use a CPA secure Worry-Free
Encryption scheme W and the above scheme M.
Setup consists of the setup phases of both W and M run-
ning in parallel, the public parameters and MSK values of
the new scheme will be the pair of corresponding outputs in
471W and M. Similarly, the Auth and CheckAuth phases will
be the corresponding phases in W and M run on the cor-
responding input component. The only modiﬁcation from
both schemes running in parallel will be during encryption
and decryption.
Encryption of a Pairwise-Independent Mask. En-
cryption takes as input P KM, P PM, P KW , P PW along with
a function f : {0, 1}n → {0, 1}k. Let Hk
n be an eﬃciently
sampleable family of pairwise independent hash functions
from {0, 1}n → {0, 1}k of the same size sk
n bounded by some
polynomial in n and k.
Encryption will ﬁrst sample h $←− Hk
n and generate Enc(f +
h, P KM, P PM), Enc(h, P KW , P PW ) and return pair of ci-
phertexts as the ciphertext5. Decrypt by decrypting (f +
h)(x) and h(x) to recover f (x). Call this scheme Z.
Theorem 5.2. If O is a static 1-out-of-2 oblivious trans-
fer scheme, (E, D) is a secure decomposable randomized en-
coding and W is a CPA Worry-Free Encryption Scheme, Z
is a CPA secure Worry-Free Encryption Scheme minimally
vulnerable to collusion.
Proof. Since the M component of the challenge cipher-
text only depends on ([(f + h)]i,x[i] : i ∈ [1, n]) for the x
that Ext outputs (deﬁned identically to Ext for M) and
this is the only dependence of f , the scheme is minimally
vulnerable identically to the proof of M.
We now address function hiding. By the static retrieval
guarantee of O and the indistinguishability property of E,
the probability A3 outputs a particular bit can only depend
on (fz + h)(x(cid:48)) for one x(cid:48) (found by Ext) from the ﬁrst ci-
phertext component. Similarly, by the function hiding prop-
erty of W, the probability A3 outputs b only depends on
h(x) for x the user’s credentials from the second compo-
nent. If x = x(cid:48), the adversary’s probability only depends on
fz(x) = f¯z(x) and otherwise, the two values are distributed
uniformly at random by the pairwise independence of h. In
either case, A3’s response can’t depend on z by more than
a negligible factor by the indistinguishability of (E, D).
Hidden credentials follows from the fact that the retrieved
indices in the ﬁrst key component are not revealed by the
chooser security of O and not revealed in the second by the
hidden credentials guarantee of W.
Malicious Authority security follows since P KM is gen-
erated completely by the user and the ciphertext compo-
nent corresponding to M is the only one with dependence
on the challenge function. Since both messages are compu-
tationally hidden from eavesdroppers in the OT protocol,
this implies that the adversary can not distinguish the case
where the challenge ciphertext component encrypted under
P KM is replaced by an encryption of a ﬁxed string of the
same length. Since the latter case has no dependence on the
challenge function, this implies the adversary can only have
negligible probability in guessing the challenge index.
6. REFERENCES
[1] William Aiello, Yuval Ishai, and Omer Reingold.
Priced oblivious transfer: How to sell digital goods. In
EUROCRYPT, pages 119–135, 2001.
5Note that we can assume |f + h| = |g + h| if |f| = |g| by
using h as a black box in the circuit construction.
[2] Benny Applebaum, Yuval Ishai, and Eyal Kushilevitz.
Cryptography in nc0. SIAM J. Comput.,
36(4):845–888, 2006.
[3] John Bethencourt, Amit Sahai, and Brent Waters.
Ciphertext-policy attribute-based encryption. In IEEE
Symposium on Security and Privacy, pages 321–334,
2007.
[4] Dan Boneh and Brent Waters. Conjunctive, subset,
and range queries on encrypted data. In TCC, pages
535–554, 2007.
[5] Yael Gertner, Yuval Ishai, Eyal Kushilevitz, and Tal
Malkin. Protecting data privacy in private information
retrieval schemes. J. Comput. Syst. Sci.,
60(3):592–629, 2000.
[6] Vipul Goyal. Reducing Trust in the PKG in Identity
Based Cryptosystems. In CRYPTO, pages 430–447,
2007.
[7] Vipul Goyal, Abhishek Jain, Omkant Pandey, and
Amit Sahai. Bounded ciphertext policy attribute
based encryption. In ICALP (2), pages 579–591, 2008.
[8] Vipul Goyal, Omkant Pandey, Amit Sahai, and Brent
Waters. Attribute-based encryption for ﬁne-grained
access control of encrypted data. In ACM Conference
on Computer and Communications Security, pages
89–98, 2006.
[9] Yuval Ishai and Eyal Kushilevitz. Perfect
constant-round secure computation via perfect
randomizing polynomials. In ICALP, pages 244–256,
2002.
[10] Jonathan Katz, Amit Sahai, and Brent Waters.
Predicate encryption supporting disjunctions,
polynomial equations, and inner products. In
EUROCRYPT, pages 146–162, 2008.
[11] Jonathan Katz and Arkady Yerukhimovich. On
black-box constructions of predicate encryption from
trapdoor permutations. In ASIACRYPT, pages
197–213, 2009.
[12] Joe Kilian. Founding cryptography on oblivious
transfer. In STOC, pages 20–31, 1988.
[13] A. Lewko, T. Okamoto, A. Sahai, K. Takashima, and
B. Waters. Fully Secure Functional Encryption:
Attribute-Based Encryption and (Hierarchical) Inner
Product Encryption. In EUROCRYPT 2010, pages
62-91.
[14] Moni Naor and Benny Pinkas. Oblivious transfer with
adaptive queries. In CRYPTO, pages 573–590, 1999.
[15] Moni Naor and Benny Pinkas. Eﬃcient oblivious
transfer protocols. In SODA, pages 448–457, 2001.
[16] Amit Sahai. Non-malleable non-interactive zero
knowledge and adaptive chosen-ciphertext security. In
FOCS, pages 543–553, 1999.
[17] Amit Sahai and Brent Waters. Fuzzy identity-based
encryption. In EUROCRYPT, pages 457–473, 2005.
[18] Emily Shen, Elaine Shi, and Brent Waters. Predicate
privacy in encryption systems. In TCC, pages
457–473, 2009.
[19] Elaine Shi and Brent Waters. Delegating capabilities
in predicate encryption systems. In ICALP (2), pages
560–578, 2008.
[20] A.C. Yao. Theory and application of trapdoor
functions. In FOCS, pages 80–91, 1982.
472