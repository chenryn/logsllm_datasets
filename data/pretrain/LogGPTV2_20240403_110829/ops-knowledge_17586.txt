User: How to configure a remote Linux server with Ansible? Please provide examples.
Assistant: Ansible is an automated operation and maintenance tool that can be used to deploy, manage and configure remote Linux servers. Here is a simple example of using Ansible to configure a remote Linux server: 1. Install Ansible Install Ansible on your local machine: ``` sudo apt update sudo apt install ansible ``` 2. Configure the host list in the /etc/ansible/hosts file All hosts to be managed are configured in . The host list should include the remote server's IP address and SSH key or password. ``` [web] 192.168.1.100 [database] 192.168.1.101 [all:vars] ansible_ssh_user=username ansible_ssh_private_key_file=/path/to/ssh_key ``` 3. Writing an Ansible Playbook Execute tasks on remote servers. Here is an example Playbook: ``` --- - name: Install Apache web server hosts: web tasks: - name: Install Apache apt: name: apache2 state: present - name: Copy index.html copy: src: /path /to/index.html dest: /var/www/html/index.html - name: Install MySQL database hosts: database tasks: - name: Install MySQL apt: name: mysql-server state: present - name: Create database mysql_db : name: mydatabase state: present ``` 4. Execute Ansible Playbook Run the Playbook on the local computer and apply the configuration to the remote server: ``` ansible-playbook /path/to/playbook.yml ``` Among them, / path/to/playbook.yml is the path to the Playbook file. After running the Playbook, Ansible will automatically connect to the remote server and perform operations according to the tasks specified in the Playbook. With this simple example, you can start managing and configuring your Linux servers with Ansible. Depending on your needs, you can write more complex Playbooks to automate more tasks and processes.