239,22
10000
11053,62
363,61
11498,90
134,33
25757,51
25891,84
Table 1: Benchmarking results for random circuits of indicated size. Small modulus variants relied on a prime ùëû = 261 ‚àí 1 that
fits in to a 64-bit word, whereas the large modulus results uses ùëû = 2255 ‚àí 19. All times are given in milliseconds. For the prover
we report times for computing the MPC protocol in the head and committing to the views. For the verifier we report times for
verifying the commitments and checking consistency between views. Data was collected using a modest 2.3 GHz Quad-Core
Intel Core i7 with 32 GB RAM, 512 KB L2 CACHE PER CORE, 8 MB L3 CACHE.
to the performance of aggressively optimized unverified implemen-
tations one can get.
ACKNOWLEDGMENTS
The authors would also like to thank the anonymous referees
for their valuable comments and helpful suggestions. This ma-
terial is based upon work supported by DARPA under Contract
No. HR001120C0086. Any opinions, findings and conclusions or rec-
ommendations expressed in this material are those of the author(s)
and do not necessarily reflect the views of the United States Govern-
ment or DARPA. Jos√© Bacelar Almeida has been partially supported
by the Portuguese Foundation for Science and Technology (FCT)
project REASSURE (PTDC/EEI-COM/28550/2017), co-financed by
the European Regional Development Fund (FEDER), through the
North Regional Operational Program (NORTE 2020).
5 RELATED WORK
ZK protocols are a fast-moving area within cryptography, and many
protocols exist both for specific proof goals and for settings that
require a flexible solution that can be used for any relation. Only
a very small part of this field has been studied from the perspec-
tive of computer-aided cryptography [7]. The work in [8] was the
first to formalize a special class of ùõ¥ùúô-protocols in CertiCrypt, a
predecessor of EasyCrypt implemented as a Coq library, and to
prove the security of general and and or composability theorems
for ùõ¥ùúô-protocols. The more recent work from [15] restates many
of these results for ùõ¥-protocols in CryptHOL. It additionally for-
malizes abstract and concrete commitment scheme primitives and
proves a construction of commitment schemes from ùõ¥-protocols.
The most significant machine-checked endeavor for ZK is the
work in [6], that developed a full-stack verified framework for ZK
proofs. It encompasses a non-verified optimizing ZK compiler that
translates high-level ZK proof goals to C or Java implementations,
and a verified compiler that generates a reference implementation.
The machine-checked effort lies in proving that, for any goal, the
reference implementation satisfies the ZK properties and that the
optimized implementation has the same observable behavior as
the reference implementation. The core of the verified compiler
builds on top of the results from [8], extended with and composi-
tions of ùõ¥GSP-protocols, and generates CertiCrypt proof scripts for
automatically proving the equivalence of the two implementations.
There is now a vast body of MPC protocols and frameworks,
some of which have been formally verified using machine-checked
tools. CircGen [1] is a verified compiler that translates C programs
into boolean circuits; it extending the CompCert C compiler with
an additional backend translation to Boolean circuits. This back-
end can then be used to feed circuits to an EasyCrypt machine-
checked implementation of Yao‚Äôs 2-party secure function evaluation
protocol. The work in [24] formalizes in EasyCrypt the ùëõ-party MPC
protocol due to Maurer [27] for the actively secure case. In this paper
we formalize in EasyCrypt the passive case, and provide a formally
verified Jasmin implementation thereof. The work in [19] develops
verified implementations of proactively secure MPC, including an
EasyCrypt formalization of BGW [12] for passive and static active
adversaries that we adapt and build on in this paper.
Independent work on verifying MPC-in-the-HEAD. Recently,
independent work [30] presented a machine-checked security proof
for a class of Œ£-protocols that follows the approach to MitH intro-
duced by the ZKBoo protocol [20], which is an important optimized
derivative of the MitH paradigm. The authors give a formaliza-
tion of decomposition protocols and show how they can be used
to construct Œ£-protocols, which are secure in the sense of special-
soundness and special honest verifier zero-knowledge. We note that
these properties are specific to Œ£ protocols; indeed, additional trans-
formations and security proofs are needed to obtain the standard
non-interactive PoK guarantees that these protocols provide.
The contributions in this paper compared to those in [30] as
follows. We also consider 3-pass ZK protocols, but we give both a
machine-checked proof of security for MitH and a formally ver-
ified implementation; our implementation of MitH includes veri-
fied implementations for the underlying MPC, secret sharing, and
commitment sub-protocols and can be used in practice to prove
arbitrary goals in ZK. Second, our formalization follows the original
IKOS construction given in [25] and uses the standard syntax and
security notions for ZK proofs, MPC protocols, and commitment
schemes. This enables us to build on, and to deploy, standard com-
ponents, but introduces the challenge of formalizing more complex
security proofs. For example, the proof of the (malicious verifier)
ZK property is quite challenging when compared to the honest
verifier variant because the distribution of the verifier‚Äôs challenge is
not known a priori and a form of rejection sampling must be used
in the simulation. The techniques we use to establish this result
allowed us also to formalize the reduction of the soundness error
by repetition and we are currently working to extend this result for
the ZK property of the sequential composition construction.
Session 10B: Crypto and Protocol Security CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea2599Vol. 11959), Kenneth G. Paterson and Douglas Stebila (Eds.). Springer, 669‚Äì692.
https://doi.org/10.1007/978-3-030-38471-5_27
[18] Cyprien Delpech de Saint Guilhem, Emmanuela Orsini, and Titouan Tanguy.
2021. Limbo: Efficient Zero-knowledge MPCitH-based Arguments. Cryptology
ePrint Archive, Report 2021/215. https://eprint.iacr.org/2021/215.
[19] Karim Eldefrawy and Vitor Pereira. 2019. A High-Assurance Evaluator for
Machine-Checked Secure Multiparty Computation. In Proceedings of the 2019
ACM SIGSAC Conference on Computer and Communications Security, CCS 2019,
London, UK, November 11-15, 2019, Lorenzo Cavallaro, Johannes Kinder, XiaoFeng
Wang, and Jonathan Katz (Eds.). ACM, 851‚Äì868. https://doi.org/10.1145/3319535.
3354205
[20] Irene Giacomelli, Jesper Madsen, and Claudio Orlandi. 2016. ZKBoo: Faster Zero-
Knowledge for Boolean Circuits. In 25th USENIX Security Symposium, USENIX
Security 16, Austin, TX, USA, August 10-12, 2016, Thorsten Holz and Stefan Savage
(Eds.). USENIX Association, 1069‚Äì1083. https://www.usenix.org/conference/
usenixsecurity16/technical-sessions/presentation/giacomelli
[21] Paul Grubbs, Jiahui Lu, and Thomas Ristenpart. 2017. Message Franking via
Committing Authenticated Encryption. In Advances in Cryptology - CRYPTO 2017
- 37th Annual International Cryptology Conference, Santa Barbara, CA, USA, August
20-24, 2017, Proceedings, Part III (Lecture Notes in Computer Science, Vol. 10403),
Jonathan Katz and Hovav Shacham (Eds.). Springer, 66‚Äì97. https://doi.org/10.
1007/978-3-319-63697-9_3
[22] Yaron Gvili, Julie Ha, Sarah Scheffler, Mayank Varia, Ziling Yang, and Xinyuan
Zhang. 2021. TurboIKOS: Improved Non-interactive Zero Knowledge and Post-
quantum Signatures. In Applied Cryptography and Network Security - 19th Interna-
tional Conference, ACNS 2021, Kamakura, Japan, June 21-24, 2021, Proceedings, Part
II (Lecture Notes in Computer Science, Vol. 12727), Kazue Sako and Nils Ole Tippen-
hauer (Eds.). Springer, 365‚Äì395. https://doi.org/10.1007/978-3-030-78375-4_15
[23] Helene Haagh, Aleksandr Karbyshev, Sabine Oechsner, Bas Spitters, and Pierre-
Yves Strub. [n. d.]. Computer-aided proofs for multiparty computation with active
security. In Proceedings of the 31st Computer Security Foundations Symposium.
IEEE, In print.
[24] Helene Haagh, Aleksandr Karbyshev, Sabine Oechsner, Bas Spitters, and Pierre-
Yves Strub. 2018. Computer-aided proofs for multiparty computation with active
security. In 2018 IEEE 31st Computer Security Foundations Symposium (CSF). IEEE,
119‚Äì131.
[25] Yuval Ishai, Eyal Kushilevitz, Rafail Ostrovsky, and Amit Sahai. 2007. Zero-
knowledge from secure multiparty computation. In Proceedings of the 39th Annual
ACM Symposium on Theory of Computing, San Diego, California, USA, June 11-13,
2007, David S. Johnson and Uriel Feige (Eds.). ACM, 21‚Äì30. https://doi.org/10.
1145/1250790.1250794
Improved Non-
Interactive Zero Knowledge with Applications to Post-Quantum Signatures. In
Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communica-
tions Security, CCS 2018, Toronto, ON, Canada, October 15-19, 2018, David Lie,
Mohammad Mannan, Michael Backes, and XiaoFeng Wang (Eds.). ACM, 525‚Äì537.
https://doi.org/10.1145/3243734.3243805
[26] Jonathan Katz, Vladimir Kolesnikov, and Xiao Wang. 2018.
[27] Ueli Maurer. 2006. Secure multi-party computation made simple. Discrete Applied
Mathematics 154, 2 (2006), 370‚Äì381.
[28] Bryan Parno, Jon Howell, Craig Gentry, and Mariana Raykova. 2013. Pinocchio:
Nearly Practical Verifiable Computation. In IEEE Symposium on Security and
Privacy. 238‚Äì252.
[29] Okan Seker, Sebastian Berndt, Luca Wilke, and Thomas Eisenbarth. 2020. SNI-in-
the-head: Protecting MPC-in-the-head Protocols against Side-channel Analysis.
In CCS ‚Äô20: 2020 ACM SIGSAC Conference on Computer and Communications Secu-
rity, Virtual Event, USA, November 9-13, 2020, Jay Ligatti, Xinming Ou, Jonathan
Katz, and Giovanni Vigna (Eds.). ACM, 1033‚Äì1049. https://doi.org/10.1145/
3372297.3417889
[30] Nikolaj Sidorenco, Sabine Oechsner, and Bas Spitters. 2021. Formal security anal-
ysis of MPC-in-the-head zero-knowledge protocols. Cryptology ePrint Archive,
Report 2021/437. https://eprint.iacr.org/2021/437.
REFERENCES
[1] Jos√© Bacelar Almeida, Manuel Barbosa, Gilles Barthe, Fran√ßois Dupressoir, Ben-
jamin Gr√©goire, Vincent Laporte, and Vitor Pereira. 2017. A fast and verified
software stack for secure function evaluation. In Proceedings of the 2017 ACM
SIGSAC Conference on Computer and Communications Security. 1989‚Äì2006.
[2] Jos√© Bacelar Almeida, Manuel Barbosa, Gilles Barthe, Benjamin Gr√©goire, Adrien
Koutsos, Vincent Laporte, Tiago Oliveira, and Pierre-Yves Strub. 2020. The Last
Mile: High-Assurance and High-Speed Cryptographic Implementations. In 2020
IEEE Symposium on Security and Privacy, SP 2020, San Francisco, CA, USA, May
18-21, 2020. IEEE, 965‚Äì982. https://doi.org/10.1109/SP40000.2020.00028
[3] Jos√© Bacelar Almeida, Manuel Barbosa, Gilles Barthe, Hugo Pacheco, Vitor Pereira,
and Bernardo Portela. 2018. Enforcing ideal-world leakage bounds in real-world
secret sharing MPC frameworks. In 2018 IEEE 31st Computer Security Foundations
Symposium (CSF). IEEE, 132‚Äì146.
[4] Jos√© Bacelar Almeida, C√©cile Baritel-Ruet, Manuel Barbosa, Gilles Barthe, Fran√ßois
Dupressoir, Benjamin Gr√©goire, Vincent Laporte, Tiago Oliveira, Alley Stoughton,
and Pierre-Yves Strub. 2019. Machine-Checked Proofs for Cryptographic Stan-
dards: Indifferentiability of Sponge and Secure High-Assurance Implementations
of SHA-3. In Proceedings of the 2019 ACM SIGSAC Conference on Computer and
Communications Security, CCS 2019, London, UK, November 11-15, 2019, Lorenzo
Cavallaro, Johannes Kinder, XiaoFeng Wang, and Jonathan Katz (Eds.). ACM,
1607‚Äì1622. https://doi.org/10.1145/3319535.3363211
[5] Scott Ames, Carmit Hazay, Yuval Ishai, and Muthuramakrishnan Venkitasub-
ramaniam. 2017. Ligero: Lightweight Sublinear Arguments Without a Trusted
Setup. In Proceedings of the 2017 ACM SIGSAC Conference on Computer and Com-
munications Security, CCS 2017, Dallas, TX, USA, October 30 - November 03, 2017,
Bhavani M. Thuraisingham, David Evans, Tal Malkin, and Dongyan Xu (Eds.).
ACM, 2087‚Äì2104. https://doi.org/10.1145/3133956.3134104
[6] Jos√© Bacelar Almeida, Manuel Barbosa, Endre Bangerter, Gilles Barthe, Stephan
Krenn, and Santiago Zanella B√©guelin. 2012. Full proof cryptography: verifiable
compilation of efficient zero-knowledge protocols. In Proceedings of the 2012 ACM
conference on Computer and communications security. 488‚Äì500.
[7] Manuel Barbosa, Gilles Barthe, Karthikeyan Bhargavan, Bruno Blanchet, Cas
Cremers, Kevin Liao, and Bryan Parno. 2021. SoK: Computer-Aided Cryptography.
IEEE Security and Privacy (2021).
[8] Gilles Barthe, Daniel Hedin, Santiago Zanella B√©guelin, Benjamin Gr√©goire, and
Sylvain Heraud. 2010. A machine-checked formalization of Sigma-protocols. In
2010 23rd IEEE Computer Security Foundations Symposium. IEEE, 246‚Äì260.
[9] Carsten Baum, Cyprien Delpech de Saint Guilhem, Daniel Kales, Emmanuela
Orsini, Peter Scholl, and Greg Zaverucha. 2021. Banquet: Short and Fast Signa-
tures from AES. In Public-Key Cryptography - PKC 2021 - 24th IACR International
Conference on Practice and Theory of Public Key Cryptography, Virtual Event, May
10-13, 2021, Proceedings, Part I (Lecture Notes in Computer Science, Vol. 12710),
Juan A. Garay (Ed.). Springer, 266‚Äì297. https://doi.org/10.1007/978-3-030-75245-
3_11
[10] Carsten Baum and Ariel Nof. 2020. Concretely-efficient zero-knowledge argu-
ments for arithmetic circuits and their application to lattice-based cryptography.
In IACR International Conference on Public-Key Cryptography. Springer, 495‚Äì526.
[11] Michael Ben-Or, Shafi Goldwasser, and Avi Wigderson. 1988. Completeness theo-
rems for non-cryptographic fault-tolerant distributed computation. In Proceedings
of the 20th Annual Symposium on Theory of Computing. ACM, 1‚Äì10.
[12] Michael Ben-Or, Shafi Goldwasser, and Avi Wigderson. 2019. Completeness theo-
rems for non-cryptographic fault-tolerant distributed computation. In Providing
Sound Foundations for Cryptography: On the Work of Shafi Goldwasser and Silvio
Micali. 351‚Äì371.
[13] Rishabh Bhadauria, Zhiyong Fang, Carmit Hazay, Muthuramakrishnan Venki-
tasubramaniam, Tiancheng Xie, and Yupeng Zhang. 2020. Ligero++: A New
Optimized Sublinear IOP. In Proceedings of the 2020 ACM SIGSAC Conference on
Computer and Communications Security. Association for Computing Machinery,
2025‚Äì2038.
[14] Dan Bogdanov, Sven Laur, and Jan Willemson. 2008. Sharemind: A Framework
for Fast Privacy-Preserving Computations. In Proceedings of the 13th European
Symposium on Research in Computer Security. Springer, 192‚Äì206.
[15] David Butler, Andreas Lochbihler, David Aspinall, and Adri√† Gasc√≥n. 2020. For-
malising ùõ¥-Protocols and Commitment Schemes Using CryptHOL. Journal of
Automated Reasoning (2020), 1‚Äì47.
[16] Melissa Chase, David Derler, Steven Goldfeder, Claudio Orlandi, Sebastian Ra-
macher, Christian Rechberger, Daniel Slamanig, and Greg Zaverucha. 2017. Post-
Quantum Zero-Knowledge and Signatures from Symmetric-Key Primitives. In
Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications
Security, CCS 2017, Dallas, TX, USA, October 30 - November 03, 2017, Bhavani M.
Thuraisingham, David Evans, Tal Malkin, and Dongyan Xu (Eds.). ACM, 1825‚Äì
1842. https://doi.org/10.1145/3133956.3133997
[17] Cyprien Delpech de Saint Guilhem, Lauren De Meyer, Emmanuela Orsini, and
Nigel P. Smart. 2019. BBQ: Using AES in Picnic Signatures. In Selected Areas in
Cryptography - SAC 2019 - 26th International Conference, Waterloo, ON, Canada,
August 12-16, 2019, Revised Selected Papers (Lecture Notes in Computer Science,
Session 10B: Crypto and Protocol Security CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea2600