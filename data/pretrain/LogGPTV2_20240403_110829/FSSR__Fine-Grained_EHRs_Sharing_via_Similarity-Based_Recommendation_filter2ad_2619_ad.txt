+ an+1)⃗φ + ⃗v
m).
, where ⃗v
On the basis of this, C returns to A the secret key in the
following two circumstances of attribute ai.
, ⃗Mk· ⃗φ = 0, then we have λρ(k) = ⃗Mk·⃗v =
. The challenger C
−(α
randomly picks rk, r
For ai /∈ W
+ an+1) ⃗Mk · ⃗φ + ⃗Mk · ⃗v
′
+ an+1)φm + v
′
′
2, ..., v
= ⃗Mk · ⃗v
= (0, v
′
p
m
∗
∗
′
k
′
∈ Zp, then computes
′ · (t0tρ(k))rk , D2,k = grk ,
}ai∈U\{ρ(k)}, D4,k = g ⃗Mk·⃗v
′
k
′ · (t0tρ(k))r
}ai∈U\{ρ(k)}
k{D6,k,i = tr
D1,k = g ⃗Mk·⃗v
{D3,k,i = trk
D5,k = gr
(10)
, ⃗Mk· ⃗φ = 0, we have λρ(k) = ⃗Mk·⃗v = ⃗Mk·
For ai ∈ W
′· ⃗φ)−( ⃗Mk· ⃗φ)·an+1. Then the challenger C randomly
′−α
picks ˆrk ∈ Zp and implicity set rk = ˆrk + ( ⃗Mk · ⃗φ)aρ(k), then
computes
D1,k = g ⃗Mk·(⃗v
−(γ0+γ(cid:26)(k))
∏
(gγi
′
k ,
(⃗v
∗
·
′
′
′
i
i
′
′
′−α
⃗φ) · (t0tρ(k))ˆrk · (g
−( ⃗Mk·⃗φ), D2,k = g ˆrk · g
· (gγi
ρ(k)
⃗Mk·⃗φ
ρ(k)
gn+1−i+ρ(k)))
{D3,k,i = tˆrk
i
ρ(k)
′
k = ˆr′
· gn+1−i+ρ(k)) ⃗Mk·⃗φ}ai∈U\{ρ(k)}
With implicity setting r
(11)
k + ( ⃗Mk · ⃗φ)aρ(k), the
parsing of secret key components D4,k, D5,k and D6,k,i
for ai ∈ W
are similar to D1,k, D2,k, D3,k,i
, where
k is randomly selected from Zp. C then returns to A
ˆr′
the secret key SK(M,ρ) = ((M, ρ), D1,k, D2,k,{D3,k,i}
ai∈U\{ρ(k)}, D4,k, D5,k,{D6,k,i} ai∈U\{ρ(k)})k∈[1,l]. Notice
that in the perspective of the adversary A:
D1,k = g ⃗Mk·(⃗v
⃗φ) · (t0tρ(k))ˆrk · (g
−(γ0+γ(cid:26)(k))
∏
(gγi
′−α
∗
·
′
ρ(k)
·
ρ(k)
ai∈W ∗
ai∈W ∗
ρ(k)
∏
ai∈W ∗
7
−1
t
i
)( ⃗Mi·⃗φ)a(cid:26)(k)
· (t0tρ(k))ˆrk · (t0)( ⃗Mk·⃗φ)a(cid:26)(k)
· gn+1−i+ρ(k)))
= g ⃗Mk·(⃗v
′−α
−( ⃗Mk·⃗φ)
⃗φ) · (t0tρ(k))ˆrk · (gγ0
′
′
′
ρ(k)
ρ(k)
n+1
n+1
n+1
′−α
⃗Mk·⃗φ
−( ⃗Mk·⃗φ)
−( ⃗Mk·⃗φ)
γ(cid:26)(k)( ⃗Mi·⃗φ)
· (t0tρ(k))ˆrk
⃗φ) · g
· g
⃗φ) · g
′−α
γ(cid:26)(k)( ⃗Mk·⃗φ)
· g
= g ⃗Mk·(⃗v
· g
= g ⃗Mk·(⃗v
· (t0gγ(cid:26)(k) gn+1−ρ(k))( ⃗Mk·⃗φ)a(cid:26)(k)
= g ⃗Mk·(⃗v
= gλ(cid:26)(k)(t0tρ(k))rk
ρ(k) = g ˆrk · g( ⃗Mk·⃗φ)a(cid:26)(k)
D2,k = g ˆrk · g
⃗Mk·⃗φ
· (gγi
{D3,k,i = tˆrk
= tˆrk
′−α
i
′
⃗φ)−( ⃗Mk·⃗φ)an+1 · (t0tρ(k))ˆrk+( ⃗Mk·⃗φ)a(cid:26)(k)
= grk
i
ρ(k)
· gn+1−i+ρ(k)) ⃗Mk·⃗φ}ai∈U\{ρ(k)}
= trk
i
= tˆrk+( ⃗Mk·⃗φ)a(cid:26)(k)
+an)(β
′
k = ˆr′
′
2,k = (D2,k)u
in the perspective of
′
1,k = (D1,k)u, D
i (gγi gn+1−i)( ⃗Mk·⃗φ)a(cid:26)(k)
Therefore,
(12)
the adversary A,
D1,k, D2,k and D3,k,i are the same as those in the se-
cret key SK(M,ρ) of the original scheme under the setting
rk = ˆrk + ( ⃗Mk · ⃗φ)aρ(k). Similarly, D4,k, D5,k, D6,k,i are
identical to those in the secret key SK(M,ρ) of the original
k + ( ⃗Mk · ⃗φ)aρ(k) in the
scheme under the setting r
adversary A’s view.
2).Outsourcing key query. The adversary A queries on
the outsourcing key OSK about the LSSS access structure
(M, ρ), then the challenger C randomly selects u ∈ Zp and
computes
′−u), D
′
′
0 = g(α
D
{D
3,k,i = (D3,k,i)u}
′
6,k,i = (D6,k,i)u} (13)
5,k = (D5,k)u,{D
′
′
′
4,k = (D4,k)u, D
D
The challenger C returns to the adversary A the out-
′
′
1,k, D
5,k,{D
′
4,k
3).Trapdoor query. The adversary A queries on the trap-
door of a queried keyword q, the challenger Ccomputes
′
6,k,i, then
T0 = D
assembles and returns the trapdoor T D = (T0, T1, T2, T3).
Challenge. The adversary A forwards two equal
length data M sg0, M sg1 to the challenger C, C then
encrypts the message M sgb about
the target attribute
by ﬂipping b ∈ [0, 1]. Given the tuple
set W
(g, gs, g1, ..., gn−1, gn+1, ..., g2n, Y ),
computes C1 =
∗ · Y · e(gs, gα
), C2 = gs, C3 = (gs)γ0 and C4 =
M sg
′ · e(gs, gα
′ · e(C
′
Y β
2, H(w), then forwards the ciphertext
∗
∗
= (W
CT
In the perspective of
2,k,{D
′
′
}) and the user secret key U SK = u.
3,k,i
sourcing key OSK(M,ρ) = (D
, D
)β
, C1, C2, C3, C4) to A.
the adversary A,
· H(q), T1 = D
′
4,k, T2 = D
′
5,k, T3 = D
}, D
′
0, D
′
6,k,i
′
0
it
∗
′
′
e(gn+1, gs), then we have
C1 = M sgb · Y · e(gs, gα
′
= M sgb · e(g, g)(α
′
if Y =
) = M sgb · e(gn+1, gs) · e(gs, gα
)
′
+an+1)s = M sgb · e(g, g)αs
ti)s
∏
ai∈W ∗
C2 = gs, C3 = (gs)γ0 = (gγ0 )s = (t0
C4 = Y β
′
′ · e(gs, gα
, g)sβ
′ · e(C
)β
′ · e(g, gα
′
2, H(wc))
′ · e(C
′
′
)sβ
2, H(wc))
= e(gaq+1
2327-4662 (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 12:21:45 UTC from IEEE Xplore.  Restrictions apply. 
This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/JIOT.2021.3063846, IEEE Internet of
Things Journal
IEEE, VOL., NO.,
= e(g, g)αβse(C
′
2, H(wc))
(14)
Otherwise, if Y is a random value, the ciphertext has
nothing to do with the value of b and c.
Phase 2. This phase is the same as Phase 1.
Guess. The adversary A returns the guess b
′ ∈ {0, 1},
= c, A outputs 1 to
′ ∈ {0, 1} for b and c. If b
′
guess that Y = e(gn+1, gs), otherwise, A outputs 0 to guess
that Y is a random value.
′
= b and c
c
6.3 Keyword secrecy
Any information about the keyword should be hidden
in the scheme, or the external adversary and the semi-
trusted CSP would pay special attentions to the ciphertext
that corresponding to their desired keywords. When we
construct the ciphertext of our LABSE scheme, we ﬁrst
compute the hash value H(w) of the keyword w, then mask
H(w) with the randomly selected s ∈ Zp, while s is only
secretly held by the DO. In this way, the keyword is well-
hidden in the ciphertext CT . If there are external adversary
and CSP who attempt to extract the keyword w from the
ciphertext CT , then the unknown random value s would
enables their effort to be rewardless.
6.4 Collusion attack resistance
In an ABE scheme, collusion attack means multiple DUs
obtain a valid decryption key which can be used to decrypt
a ciphertext CT by combining their decryption key, even if
each of them cannot decrypt CT alone. This kind of attack
cannot succeed against our LABSE scheme. First, if DUs
combine their user secret key, they just share the distinct
u with each other, and would fail to reconstruct the secret
value α. Further, if multiples DUs attempt to combine their
outsourcing key, then such an attempt would be also futile.
′
Each component in the outsourcing key is parsed as: D
0 =
′
gα(β−u), D
2,k =
}ai∈U\{ρ(k)},
(D2,k)u = gurk, {D
′
′
4,k = (D4,k)u = guλ(cid:26)(k) (t0tρ(k))ur
5,k = (D5,k)u =