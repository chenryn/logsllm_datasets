title:Tripwire: inferring internet site compromise
author:Joe DeBlasio and
Stefan Savage and
Geoffrey M. Voelker and
Alex C. Snoeren
Tripwire: Inferring Internet Site Compromise
Joe DeBlasio, Stefan Savage, Geoffrey M. Voelker and Alex C. Snoeren
UC San Diego
{jdeblasio,savage,voelker,snoeren}@cs.ucsd.edu
ABSTRACT
Password reuse has been long understood as a problem: credentials
stolen from one site may be leveraged to gain access to another site
for which they share a password. Indeed, it is broadly understood
that attackers exploit this fact and routinely leverage credentials ex-
tracted from a site they have breached to access high-value accounts
at other sites (e.g., email accounts). However, as a consequence
of such acts, this same phenomena of password reuse attacks can
be harnessed to indirectly infer site compromises—even those that
would otherwise be unknown. In this paper we describe such a mea-
surement technique, in which unique honey accounts are registered
with individual third-party websites, and thus access to an email
account provides indirect evidence of credentials theft at the corre-
sponding website. We describe a prototype system, called Tripwire,
that implements this technique using an automated Web account
registration system combined with email account access data from a
major email provider. In a pilot study monitoring more than 2,300
sites over a year, we have detected 19 site compromises, including
what appears to be a plaintext password compromise at an Alexa
top-500 site with more than 45 million active users.
CCS CONCEPTS
• Security and privacy → Intrusion detection systems; Authen-
tication; Web application security; Phishing; Social network
security and privacy; • Social and professional topics →
Computer crime;
KEYWORDS
Password Reuse, Website Compromise, Cybercrime, Webmail
ACM Reference Format:
Joe DeBlasio, Stefan Savage, Geoffrey M. Voelker and Alex C. Snoeren.
2017. Tripwire: Inferring Internet Site Compromise. In Proceedings of IMC
’17, London, United Kingdom, November 1–3, 2017, 14 pages.
https://doi.org/10.1145/3131365.3131391
INTRODUCTION
1
Virtually all online information services, whether email, social net-
works or e-commerce platforms, rely on user names and passwords
to authenticate their users and limit access to content or capabilities.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
IMC ’17, November 1–3, 2017, London, United Kingdom
© 2017 Copyright held by the owner/author(s). Publication rights licensed to Association
for Computing Machinery.
ACM ISBN 978-1-4503-5118-8/17/11. . . $15.00
https://doi.org/10.1145/3131365.3131391
Thus, attackers seeking to compromise such accounts need only
acquire the user’s credentials.
While there are a range of vectors by which account credentials
can be compromised—including phishing, brute force and malware—
perhaps the most pernicious arises from the confluence of data
breaches and account reuse. In this scenario, an unrelated site is
compromised such that all of its user accounts and passwords (or,
more commonly, password hashes) are exposed. An attacker can
then leverage this information to access any other accounts a user
may have using the same credentials (a situation exacerbated by
the widespread use of a user’s email address as their standard user
name) [3, 8, 14]. In one recent study, Das et al. estimated that over
40% of users reuse passwords [27] and our own anecdotal experi-
ence with stolen bulk account data suggests that up to 20% of stolen
credentials may share a password with their primary email account.
Moreover, opportunities for such attacks abound, with reports of
data breaches now commonplace: in just the past year, reports have
surfaced of 117 million account credentials stolen from Linkedin [10]
and 360 million from Myspace [4]. In 2014, Hold Security reported
obtaining credentials for more than a billion users from breaches on
several Internet services [39]. Indeed, the market for stolen creden-
tials is thriving, with credentials being sold in bulk for under a penny
a piece [41]. The value of these credentials lies in their ability to be
used across sites, enabling account compromise at sites otherwise
wholly unaffected by the unrelated original site’s compromise.
The most sensitive and important credentials on offer are those
associated with major email providers (e.g., Gmail, Live/Hotmail,
Yahoo, etc.) because in modern usage it is these accounts that are the
foundation for one’s Internet footprint. In particular, online services
commonly require an email address to register, to reconfirm accounts,
to communicate key information and to reset or recover passwords.
Thus, access to someone’s email account can be sufficient to gain
access to a broad array of other services as well. Indeed, while
email accounts with such services are routinely compromised en
masse, only one major email provider has had a public breach to
date (Yahoo, in late 2014 [21]).
Unfortunately, the password reuse problem is not easy to address.
While it can be mitigated by the use of password managers and
two-factor authentication, these require mass transitions in user
behavior that have proved difficult to achieve quickly. Absent that,
most providers behave reactively. Once it becomes known that a site
is compromised, the site operators will commonly reset the accounts
of their users. As well, many large service providers will reset or
lock down the accounts of their customers known to have accounts
with a compromised site (on the presumption of password reuse).
However, such responses are predicated on knowing of the com-
promise. In many cases such compromises may never be discovered,
let alone become public. Small sites may lack the staff and instru-
mentation to detect compromises and even large, well-managed sites
IMC ’17, November 1–3, 2017, London, United Kingdom
DeBlasio et al.
have no easy way to identify the source of a breach when their ac-
counts are compromised via password reuse. Further, attackers are
incentivized to be quiet about successful breaches; if the breach is
known publicly, users and service providers will take steps to miti-
gate the effects, thus devaluing the attacker’s cache of credentials.
Indeed, the 1.2-billion account credentials recovered by Hold Secu-
rity are reported to have come from compromises of over 400,000
distinct, relatively unknown sites.
Given this reality, a critical issue is being able to determine when
credentials breaches occur, thus opening up other sites to password
reuse attacks. In this paper we describe a technique for inferring the
occurrence of such breaches (both large and small) without requiring
any special access to Internet sites or their hosting infrastructure.
Our measurement approach detects site compromises externally by
exploiting precisely the attacker’s interest in the password reuse
vector. In particular, by registering honey accounts at Internet sites
using unique email addresses, we place our own accounts at risk,
indistinguishable from any other user’s account at each site under
observation. By further arranging that each of these accounts shares
a unique password with its corresponding email account, we create
a clear password reuse attack opportunity. If any of these email
accounts is ever accessed, such action provides strong and singular
evidence of a compromise at the corresponding site. This approach
allows a wide array of Internet sites to be efficiently monitored for
compromises and admits no false positives—presuming the email
provider itself is not compromised.
We have built a prototype system, called Tripwire, to implement
this technique, which automatically crawls and registers accounts
in this matter. We partnered with a major email provider to conduct
a pilot study of this approach covering approximately 2,300 sites.
Over a year’s time, we discovered evidence of compromise at 19
sites, all but one of which were previously undisclosed to the best of
our knowledge. The sites at which we detected breaches range in size
from very small to a large publicly-traded company with more than
45 million active customers at the time of compromise. Moreover,
by controlling the form of the passwords we can determine whether
a compromise is consistent with a dictionary attack on password
hashes (and thus users with strong passwords may have been pro-
tected) or whether the attacker was able to obtain the passwords in
cleartext (and a strong password would not have helped).
In the remainder of this paper, we discuss previous work related
to the Tripwire technique, the ethical considerations that guide our
study, and our account creation, registration, and monitoring method-
ology. We then quantify the effectiveness of our pilot monitoring,
and report our qualitative experience disclosing our findings to each
of the affected sites, including how they receive such evidence and
the extra-technical challenges in using it to change behavior. We
conclude with a discussion of the complexities of automated account
registration and the challenges in scaling such a service further.
2 RELATED WORK
The Tripwire measurement technique fundamentally depends upon
attackers stealing email account credentials on one site and then
taking advantage of shared password behavior to access the stolen
account on the email provider. Researchers have repeatedly found
that users reuse their passwords across multiple services [27, 31], and
that they have accounts on at least 25 distinct online sites [15, 17, 29],
with some estimates putting the number over 100 sites [12]. Given
this landscape, it seems likely attackers will continue to exploit
this reuse to try to take over additional accounts that might be of
greater value [34]. Indeed, there have been several recent reports of
attackers taking a large list of usernames and passwords acquired at
one service and trying those credentials at another [3, 8, 9].
Previous work has also shown how to detect sites vulnerable
to attack [28, 30, 36], defend against those attacks [22, 23], and
evaluate the risk of compromise to a site or predict whether a site
will be compromised in the future [40, 42]. Yet Canali et al. found
that few shared hosting providers or “add-on” security services
managed to detect even simple site compromises, despite direct
server access [24]. Tripwire offers an advantage over these and other
schemes because it can be deployed and operated by a third party
not affiliated with the websites or their users. Moreover, it is able to
detect the effects of both online (e.g., key logging) and offline (e.g.,
external database dump) attacks, relying only on the integrity of a
major, independent email provider, not of the sites being measured.
The use of a designated decoy device or account to detect at-
tacks against a service is a classic security mechanism [25], and
honeypot accounts have been used to observe recent attacker be-
havior in general [38] and, in particular, have been suggested as a
means of detecting compromise on an online service since at least
2008 [32]. A mechanism of honeypotting has also been suggested to
detect password bruteforcing [35]. All of these systems rely on some
aspect of the underlying service being measured having not been
compromised, and we believe Tripwire is the first use of honeypots
where no part of the system under measurement needs to be trusted.
3 ETHICAL CONSIDERATIONS
Before detailing our system and methodology, it is important to
discuss the ethics and potential for harm associated with our study.
First, while we obtained the full consent and cooperation of our
partner email provider, we do not seek the consent of the websites
that we monitor. It is both impractical and potentially damaging
to the scientific validity of our study for us to seek prior consent
from websites before registering accounts. In particular, sites might
opt-out in a biased way (e.g., those who suspect their security to be
flawed might wish to avoid being included), or choose to handle our
accounts in a special fashion that would break the link between our
account disclosure and site compromise.
Largely because we lack informed consent of the websites under
test, we do not undertake our study glibly or without significant
deliberation. In our view, there are two distinct issues: one of ethics
and potential harm, the other of liability.
It is our belief that the potential direct harm we can cause to
a site by attempting to register for a few (at most three) accounts
that are rarely, if at all, accessed subsequently is limited to the
small amounts of storage and load associated with these actions.
Our automated crawler was rate-limited to attempt page loads no
faster than every three seconds—and typically much slower than
that due to intentional processing delays. Only three sites received
more than eight registration attempts from our crawler1—with the
1Due to crawler debugging, the three most frequently accessed sites were contacted 16,
15, and 9 times.
Tripwire
IMC ’17, November 1–3, 2017, London, United Kingdom
overwhelming majority of sites receiving two or fewer attempts—a
load unlikely to burden even tiny sites.
However, there are also indirect harms which may result to the
brand or reputation of such sites if the knowledge of their breaches
were to become known. For this reason, we have explicitly obscured
the identify of the websites at which we detect compromise. Bal-
anced against these potential harms is the concrete benefit to sites
arising from earlier knowledge of a data breach and the benefit to
consumers from earlier notification of their credentials being com-
promised. As detailed below, we attempted to notify the operators
of all the sites where we detected compromise.
As we discuss at length later, however, our passive monitoring
approach—specifically, one that provides concrete evidence of a
compromise but no information regarding the exploit or mechanism
employed such as pen testing or similar invasive methodologies
would provide—can place notified site operators in a challenging
position. Disclosing a compromise or forcing a password reset is,
at least for some, perceived as a risky move that could drive users
away from a service [6]. Depending on jurisdiction, however, sites
may be required to notify users of any known compromise to their
service [2]. In cases where a site is unable to independently corrob-
orate a compromise, they are forced to choose between their own
investigation and our evidence. Further, without being able to find
the source of the compromise, they have no ability to assure users
that future compromises will not occur.
On the legal side, we consulted extensively with general counsel
and acted with the permission and knowledge of our administration.
While we make no attempt to explicitly check the terms of service
for each site in our study, it is quite likely that one or more aspects
of our methodology are contrary to policies on some sites (e.g., sites
frequently disallow “automated registration”). Even if not explic-
itly disallowed, bot activity is plainly discouraged by many sites
through the use of CAPTCHAs and other Turing-test-like aspects
of their registration processes, which we intentionally try to over-
come. Moreover, if sites asked for personal information as part of
the registration process, we provided fictitious details. Nevertheless,
counsel advised us that the legal risk was low and outweighed by the
scientific merits of the work and, moreover, that both the absence of
real damages to any party and the limitations on the enforceability
of terms-of-service contracts minimize even these limited risks.
Finally, we note that there are no human subject concerns in this
study: all of the information we are providing is fictitious, and no
human (other than perhaps an attacker who compromised a website
under study) ever interacts with the email addresses or the accounts.2
4 METHODOLOGY
Conceptually, Tripwire consists of two distinct phases: account reg-
istration and monitoring. We designed an automated web crawler to
register for accounts, and then partnered with a major email provider
to monitor activity at the associated email accounts. Here we de-
scribe how we created and populated the email accounts used by
Tripwire, the way in which we interact with the email provider, and
the operation of our web crawling infrastructure.
2Aside from a handful of phone calls to the numbers associated with our accounts (see
Section 5.2.2).
4.1 Account and identity management
Tripwire ensures that each account maintains a one-to-one mapping
to an identity. These identities minimally consist of an email address
and password, though many sites require additional information.
4.1.1
Identities. Tripwire identities must not easily be distin-
guishable from organically created accounts so that attackers cannot
selectively avoid them. Hence, we created a database of fictitious
identities and associate each with an email account and password at
our email provider that were designed to look as organic as possible.
Tripwire identities have full names, addresses, phone numbers, dates
of birth, employers, etc. We generate names from sets of real names,
and addresses are syntactically and semantically valid (although
not necessarily extant) US street addresses [7]. Identities have real
US phone numbers under our control. No site saw the same phone
number more than once.
We generate usernames and email addresses to look plausible,
yet be very unlikely to be taken. We generate the local-part of email
addresses in the form of an adjective, a noun, and a four-digit number
(e.g., ArguableGem8317), and then use the first 14 characters
as the username at sites that require a username distinct from the
email address. (Experience shows that many sites limit the username
length.) Since the email provider does not create email accounts for
us when there already exists an account with that username, we use
this check as a heuristic for probable availability of a given username
on all other services. This allows us to reduce the complexity of the
crawler (by allowing us to assume that the username is available).
4.1.2 Passwords. We created accounts with two types of pass-
words to distinguish the types of compromises that may occur. “Hard”
passwords are random alpha-numeric, mixed-case, ten-character
strings without special characters (e.g., i5Nss87yf). “Easy” pass-
words are eight-character strings combining a single, seven-character
dictionary word with its first letter capitalized, followed by a single
digit (e.g., Website1). Easy passwords are deliberately easy to
crack in a brute-force fashion, while hard passwords are designed to
be as difficult to brute-force as common password policy constraints
would allow.
Nearly every website we crawled permits eight-character pass-
words, and many require at least eight characters. The hard password
ten-character length is a balance between a desire for long, compli-
cated passwords, and the need to support websites with short maxi-
mum password lengths. Passwords do not contain non-alphanumeric
characters as, in our experience, few websites require special char-
acters in the password, while several do not support them. These
assumptions simplify our crawler by not having to consider password
policy when trying to create an account.
Tripwire typically registers for multiple accounts on a site by first
attempting to register an account with a hard password. If Tripwire
believes that registration succeeded, it enqueues up to two additional
registration attempts with differing password types. If we later detect
compromises for a site only on accounts with easy passwords (or
where those accounts are compromised much earlier than ones with
hard passwords), it would suggest that, while the website’s database
was breached, the website’s passwords were well hashed. If Trip-
wire also detects activity on accounts with hard passwords, then it
IMC ’17, November 1–3, 2017, London, United Kingdom
DeBlasio et al.
suggests that the site was either storing passwords in plaintext, using
a weak hash, or the compromise was able to bypass the hashing step.
Interaction with the email provider
4.2
We approached our email provider with the idea of Tripwire because
Tripwire works best with a sufficiently attractive target email account.
The email provider was only involved in providing accounts to our
system, and was not aware of what accounts were used on what
services.
We provided a list of identities in advance to our email provider,
who then created the corresponding accounts unless they collided
with a pre-existing account or violated the provider’s naming poli-
cies. All email accounts were created with their corresponding name
(in case an attacker sought to validate the authenticity of the accounts
by checking the personal information at the email provider against
the website’s records) and forwarded any mail received to our own
mail server, where we stored and parsed incoming messages for reg-
istration information. Since forwarding addresses are visible in the
web interface of our email provider, we used forwarding addresses
of accounts at one of a small number of domain names under our
control who had their mail hosted by a third-party mail provider.
This provider then forwarded messages to our mail server.
In addition to forwarding messages, the email provider notifies
us of any successful logins in these otherwise-unused accounts. In
particular, we receive sporadic dumps of login information for all
of the identities we created, independent of whether they have been
used to register accounts at any websites. Our provider is unaware of
which accounts have been used, and which remain unassociated. The
provider dumps provide timestamp, remote IP, and method (IMAP,
POP, etc.) for any successful logins, but does not disclose failed