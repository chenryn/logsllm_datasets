title:HyParView: A Membership Protocol for Reliable Gossip-Based Broadcast
author:João Leitão and
Jos&apos;e Pereira and
Lu&apos;ıs E. T. Rodrigues
HyParView: a membership protocol for reliable gossip-based broadcast∗
Jo˜ao Leit˜ao
University of Lisbon
PI:EMAIL
Jos´e Pereira
University of Minho
PI:EMAIL
Lu´ıs Rodrigues
University of Lisbon
PI:EMAIL
Abstract
Gossip, or epidemic, protocols have emerged as a pow-
erful strategy to implement highly scalable and resilient
reliable broadcast primitives. Due to scalability reasons,
each participant in a gossip protocol maintains a partial
view of the system. The reliability of the gossip protocol de-
pends upon some critical properties of these views, such as
degree distribution and clustering coefﬁcient.
Several algorithms have been proposed to maintain par-
tial views for gossip protocols.
In this paper, we show
that under a high number of faults, these algorithms take
a long time to restore the desirable view properties. To
address this problem, we present HyParView, a new mem-
bership protocol to support gossip-based broadcast that en-
sures high levels of reliability even in the presence of high
rates of node failure. The HyParView protocol is based on a
novel approach that relies in the use of two distinct partial
views, which are maintained with different goals by different
strategies.
1. Introduction
Gossip, or epidemic, protocols have emerged as a pow-
erful strategy to implement highly scalable and resilient re-
liable broadcast primitives [9, 3, 7, 1]. In a gossip proto-
col, when a node wants to broadcast a message, it selects
t nodes from the system at random (this is a conﬁguration
parameter called fanout) and sends the message to them;
upon receiving a message for the ﬁrst time, each node re-
peats this procedure [9]. Gossip protocols are an interest-
ing approach because they are highly resilient (these proto-
cols have an intrinsic level of redundancy that allows them
to mask node and network failures) and distribute the load
among all nodes in the system.
As described above, the protocol requires each node to
know the entire system membership, in order to select the
target nodes for each gossip step. Clearly, this solution is
∗This work was partially supported by project ”P-SON: Probabilisti-
cally Structured Overlay Networks” (POS C/EIA/60941/2004).
not scalable, not only due to the large number of nodes
that may constitute the view, but also due to the cost of
maintaining the complete membership up-to-date. To over-
come this problem, several gossip protocols rely on partial
views [13, 2, 3] instead of the complete membership infor-
mation. A partial view is a small subset of the entire sys-
tem membership. When a node performs a gossip step it
selects t nodes at random from its partial view. The aim
of a membership service (also called a peer sampling ser-
vice [8]) is to maintain these partial views satisfying a num-
ber of good properties. Intuitively, selecting gossip peers
from the partial view should provide the same resiliency as
selecting them at random from the entire membership.
Unfortunately, if a node only has a partial view of the
system, it becomes more vulnerable to the effect of node
failures. In particular, if a large number of nodes fail, the
partial view of each node may be severely damaged, and the
network may become disconnected. Also, the membership
service may take several membership rounds to restore the
target properties of partial views, with a negative impact on
the reliability of all messages disseminated meanwhile.
This paper proposes a novel approach to implement
gossip-based broadcast protocols and describes a member-
ship protocol that allows this approach to be used success-
fully. The key ideas of the paper are as follows:
i) We propose a gossip strategy that is based on the use of
a reliable transport protocol, such as TCP, to gossip between
peers. In this way, the gossip does not need to be conﬁgured
to mask network omissions.
ii) Each node maintains a small symmetric active view
the size of the fanout+1. Note that the fanout may be se-
lected assuming that the links do not omit messages; the
strategy allows to use smaller fanouts than protocols that use
unreliable transport to support gossip exchanges. Broadcast
is performed deterministically by ﬂooding the graph deﬁned
by the active views. While this graph is generated at random
(using our membership service), gossip is deterministic as
long as the graph remains unchanged.
iii) TCP is also used as a failure detector, and since all
members of the active view are tested at each gossip step,
failure of nodes in the active view are quickly detected.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:49:01 UTC from IEEE Xplore.  Restrictions apply. 
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007iv) Each node maintains a passive view of backup nodes
that can be promoted to the active view when one of the
nodes in the active view fails (i.e. disconnects, crashes or
blocks).
v) A membership protocol is in charge of maintaining the
passive view and selecting which members of the passive
view should be promoted to the active view. In fact, two
partial views are maintained by the protocol.
We named our protocol Hybrid Partial View member-
ship protocol, or simply HyParView1. We show that our
approach not only allows the use of a smaller fanout (there-
fore, it is less resource consuming than other approaches)
but also offers a strong resilience to node failures, even in
the presence of extremely large numbers of crashes in the
system. As we will show, our protocol recovers from per-
centages of node failures as high as 90% in as few as 4
membership rounds. This is signiﬁcantly better than pre-
vious approaches. High resiliency to node failures is im-
portant to face occurrences, such as natural disasters (e.g.
earthquakes) or computer worms and virus that may take
down all machines running a speciﬁc OS version (that may
represent a signiﬁcant portion of the system). For instance,
a worm could affect 10.000.000 nodes in the space of
days [15]; also, these worms can spread in a ﬁrst phase and
take down nodes simultaneously at a predetermined time.
The rest of the paper is structured as follows. Section 2
offers an overview of related work. A motivation for our
work, namely an analysis of the impact of high percentage
of node failures in protocols that use partial views is given
in Section 3. HyParView is introduced in Section 4 and
its performance evaluated in Section 5. Finally, Section 6
concludes the paper.
2. Related Work
We start this section by deﬁning more precisely the no-
tion of partial view. Then we introduce the two main ap-
proaches to maintain partial views. Later, we enumerate the
main properties that partial views must own. Finally, we
give some examples of concrete membership protocols.
2.1. Partial Views
A partial view is a set of node identiﬁers maintained lo-
cally at each node that is a small subset of the identiﬁers of
all nodes in the system (ideally, of logarithmic size with the
number of processes in the system). Typically, an identi-
ﬁer is a tuple (ip, port) that allows a node to be reached. A
membership protocol is in charge of initializing and main-
taining the partial views at each node in face of dynamic
changes in the system. For instance, when a new node
joins the system, its identiﬁer should be added to the par-
tial view of (some) other nodes, and it has to create its own
partial view including identiﬁers of nodes already in the sys-
tem. Also, if a node fails or leaves the system, its identiﬁer
should be removed from all partial views as soon as possi-
ble.
Partial views establish neighboring associations among
nodes. Therefore, partial views deﬁne an overlay network.
In other words, partial views establish a directed graph that
captures the neighbor relation between all nodes executing
the protocol. In this graph, nodes are represented by a ver-
tex, while a neighbor relation is represented by an arc from
the node who contains the target node in his partial view.
2.2. Maintaining the Partial View
There are two main strategies that can be used to main-
tain partial views, namely:
Reactive strategy: In this type of approach, a partial
view only changes in response to some external event that
affects the overlay (e.g. a node joining or leaving). In stable
conditions, partial view remains unaltered. Scamp [6, 5] is
an example of such an algorithm2.
Cyclic strategy: In this type of approach, a partial view
is updated every ∆T time units, as a result of some periodic
process that usually involves the exchange of information
with one or more neighbors. Therefore, a partial view may
be updated even if the global system membership is stable.
Cyclon is an example of such an algorithm [17, 16].
Reactive strategies rely on some failure detection mech-
anism to trigger the update of partial views when a node
leaves the system.
If the failure detection mechanism is
fast and accurate, reactive mechanisms can provide faster
response to failures than cyclic approaches.
2.3. Partial View Properties
In order to support fast message dissemination and high
level of fault tolerance to node failures, partial views must
own a number of important properties. These properties
are intrinsically related with graph properties of the overlay
deﬁned by the partial view of all nodes. We list some of the
most important properties here:
Connectivity. The overlay deﬁned by the partial views
should be connected. If this property is not meet, isolated
nodes will not receive broadcast messages.
Degree Distribution.
In an undirected graph, the de-
gree of a node is the number of edges of a node. Given that
partial views deﬁne a directed graph, we distinguish the in-
degree from the out-degree of a node. The in-degree of a
1The protocol is said to be hybrid because it combines both strategies
described in section 2.2
2To be precise, Scamp is not purely reactive as it includes a lease mech-
anism that forces nodes to periodically rejoin.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:49:01 UTC from IEEE Xplore.  Restrictions apply. 
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007node n is the number of nodes that have n’s identiﬁer in
their partial view; it provides a measure of the reachability
of a node in the overlay. The out-degree of a node n is the
number of nodes in n’s partial view; it is a measure of the
node contribution to the membership protocol and, conse-
quently, a measure of the importance of that node to main-
tain the overlay. If the probability of failure is uniformly
distributed in the node space, for improved fault-tolerance
both the in-degree and out-degree should be evenly dis-
tributed across all nodes.
Average Path Length. A path between two nodes in the
overlay is the set of edges that a message has to cross to
move from one node to the other. The average path length
is the average of all shortest paths between all pair of nodes
in the overlay. This property is closely related to the overlay
diameter. To ensure the efﬁciency of the overlay for infor-
mation dissemination, it is essential to enforce low values of
the average path length, as this value is related to the time a
message will take to reach all nodes.
Clustering Coefﬁcient. The clustering coefﬁcient of a
node is the number of edges between that node’s neighbors
divided by the maximum possible number of edges across
those neighbors. This metric indicates a density of neighbor
relations across the neighbors of a node, having it’s value
between 0 and 1. The clustering coefﬁcient of a graph is
the average of clustering coefﬁcients across all nodes. This
property has a high impact on the number of redundant mes-
sages received by nodes when disseminating data, where a
high value to clustering coefﬁcient will produce more re-
dundant messages. It also has an impact in the fault-tolerant
properties of the graph, given that areas of the graph that ex-
hibit high values of clustering will more easily be isolated
from the rest of the graph.
Accuracy. We deﬁne accuracy of a node as the num-
ber of neighbors of that node that have not failed divided
by the total number of neighbors of that node. The accu-
racy of a graph is the average of the accuracy of all correct
nodes. Accuracy has high impact in the overall reliability of
any dissemination protocol using a underlying membership
protocol to select its gossip targets. If the graph accuracy
values are low, the number of failed nodes selected as gos-
sip targets will be higher, and higher fanouts must be used
to mask these failures.
2.4. Membership and Gossip Protocols
Scamp [6, 5] is a reactive membership protocol that
maintains two separate views, a PartialView from which
nodes select their targets to gossip messages, and a InView
with nodes from which they receive gossip messages. One
interesting aspect of this protocol is that the PartialView
does not have a ﬁxed size, it grows to values that are dis-
tributed around log n, where n is the total number of nodes
executing the protocol, and without n being known by any
node. The main mechanism to update the PartialView is
a subscription protocol, executed when new processes join
the system. However, in order to recover from isolation,
nodes periodically send heartbeat messages to all nodes
present in their PartialView. If a node does not receive a
heartbeat for a long time, it assumes that it has become iso-
lated and rejoins the overlay.
Cyclon [17] is a cyclic membership protocol where
nodes maintain a ﬁxed length partial view. This protocol
relies in a operation that is executed periodically every ∆T
by all nodes which is called shufﬂe. Basically, in a shufﬂe
operation, a node selects the “oldest” node in its partial view
and performs an exchange with that node. In the exchange,
the node provides to its peer a sample of its partial view
and, symmetrically, collects a sample of its peer’s partial
view. The join operation is based on ﬁxed length random
walks on the overlay. The join process ensures that, if there
are no message losses or node failures, the in-degree of all
nodes will remain unchanged.
NeEM [12], Network Friendly Epidemic Multicast, is a
gossip protocol that relies on the use of TCP to disseminate
information across the overlay. In NeEM, the use of TCP
is motivated by the desire to eliminate correlated message
losses due to network congestion. The authors show that
better gossip reliability can be achieved by leveraging on
the ﬂow control mechanisms of TCP. In this paper, we rely
on TCP to mask network omissions and to detect failures.
Therefore, our work is complementary of NeEM.
CREW [2] is a gossip protocol for ﬂash dissemination,
i.e. fast simultaneous download of ﬁles by a large number
of destinations using a combination of pull and push gos-
sip. It uses TCP connections to implicitly estimate avail-
able bandwidth, thus optimizing the fanout of the gossip
procedure. The emphasis of CREW is on optimizing la-
tency, mainly by improving concurrent pulling from mul-
tiple sources. A key feature is to maintain a cache of open
connections to peers discovered using a random walk proto-
col, to avoid the latency of opening a TCP connection when
a new peer is required. The same optimization can be ap-
plied in HyParView, by pre-opening connections to some of
the members of the passive view. CREW does not, how-
ever, explicitly manage such cache to improve the overlay,
namely regarding resilience when a large number of nodes
fail.
2.5. Gossip Reliability
We deﬁne gossip reliability as the percentage of active
nodes that deliver a gossip broadcast. A reliability of 100%
means that the gossip message reached all active nodes or,
in other words, the message resulted in an atomic broad-
cast [9].
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:49:01 UTC from IEEE Xplore.  Restrictions apply. 
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 20073. Motivation
tions:
Our work is motivated by the following two observa-
i) The fanout of a gossip protocol is constrained by the
target reliability level and the desired fault-tolerance of the
protocol. When partial views are used, the quality of these
views has also an impact on the fanout required to achieve
high reliability. By using “better” views (according to the
metric of Section 2) and a reliable transport such as TCP,
it should be possible to use smaller fanouts and, thus, more