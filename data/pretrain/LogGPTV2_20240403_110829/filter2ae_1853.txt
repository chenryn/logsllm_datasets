# 绕过防火墙进行RCE并获取root用户权限的漏洞利用案例
#### 译文声明
本文为翻译文章，原文来源：[https://wiki.ioin.in](https://wiki.ioin.in)。译文仅供参考，具体内容和含义请以原文为准。

## 前言
大家好，

本文将探讨Apache Struts2 CVE-2013-2251漏洞，该漏洞由于其能够导致远程代码执行而被广泛利用。简单来说，通过操纵带有`"action:"/"redirect:"/"redirectAction:"`前缀的参数，可以在使用低于Struts 2.3.15版本框架的Java Web应用程序中执行远程命令。当此漏洞开始传播时，主流应用防火墙公司纷纷更新规则引擎和检测技术，以防止进一步感染。然而，在这次研究过程中，我不仅成功绕过了这些防护措施，还通过利用内核漏洞获得了服务器上的root访问权限。

## 攻击过程详解

### 发现目标
在对某旅行预订网站的安全测试中，我发现其可能运行在一个存在已知安全问题的Apache Struts版本上。为了验证这一点，我检查了几个关键参数（如`action, redirect, redirectAction`）是否存在漏洞。

### 初始尝试与障碍
最初，我试图利用OGNL表达式来执行系统命令`ifconfig`，但这一行为立即被防火墙拦截，并将我的请求重定向到了一个机器人页面。面对这种情况，我决定重新审视最初的攻击思路。

### 绕过防火墙策略
考虑到`redirect`参数同样属于可被操控的对象之一，我尝试设置了一个简单的URL重定向至外部站点（例如`http://www.goal.com`）。这一步操作成功返回了一个302状态码，并实现了预期中的跳转效果。基于此发现，我调整了我的payload，将其嵌入到新的重定向链接中：
```
redirect:http://www.goal.com/${...}
```
其中省略号部分包含用于执行`ifconfig`的具体OGNL代码。令人兴奋的是，这种方法成功绕过了现有的防御机制，使我得以查看目标主机的网络配置信息。

### 获取远程Shell
接下来的目标是建立一个持久化的控制通道。为此，我选择了反向SSH隧道结合公钥认证的方式。具体步骤如下：

1. **提取受害者的公钥** (`id_rsa.pub`)。
2. **修改授权密钥列表** (`~/.ssh/authorized_keys`)，添加上述提取到的公钥。
3. **创建反向SSH连接**，允许从攻击者端直接访问受害者机器。

完成以上配置后，我成功地建立了与目标服务器之间的稳定通信渠道，尽管此时仍是以普通用户身份登录。

### 提升权限至Root
最后一步是提升当前用户的权限等级至最高级别（即root）。经过查询得知目标系统的内核版本为2.6.32，存在一个已知的提权漏洞CVE-2013-2094。借助于公开提供的exploit脚本([GitHub链接](https://github.com/realtalk/cve-2013-2094))，我顺利完成了权限提升过程，最终以root用户身份完全掌控了整个系统。

这就是如何结合多个层面的安全弱点，逐步渗透直至全面控制一台服务器的过程概述。希望本文能为网络安全从业者提供一些有价值的参考。感谢Kunal Aggarwal在此项目中的贡献！