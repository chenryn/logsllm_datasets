### IBM MQ .NET Client Tracing Configuration

#### Order of Precedence for Configuration Sources

- **.NET Framework:**
  1. `App.Config`
  2. Environment Variable
  3. `mqclient.ini`

- **.NET Standard and .NET 6:**
  1. Environment Variable
  2. `mqclient.ini`

#### Trace File Management

- The active trace file is named in the format `xms_tracePID.log`, where `PID` is the process ID of the application.
- The default size limit for the active trace file is 20 MB. When this limit is reached, the file is archived with a name in the format `xms_tracePID_YY.MM.DD_HH.MM.SS.log`.
- By default, four trace files are retained: one active file and three archived files. These files are used as a rolling buffer, with the oldest file being removed and replaced by the newest file.
- You can change the number of trace files by specifying a different number in the application configuration file. However, at least two files (one active and one archived) must be maintained.

#### Trace File Formats

- **Basic Format:**
  - Human-readable, in WebSphere Application Server format.
  - Default format.
  - Not compatible with trace analyzer tools.

- **Advanced Format:**
  - Compatible with trace analyzer tools.
  - Must be specified in the application configuration file.

#### Trace Entry Information

- Date and time of the trace entry
- Class name
- Trace type
- Trace message

**Example:**
```
[09/11/2005 14:33:46:914276] 00000004 IBM.XMS.Comms.IoRequest > Allocate Entry
[09/11/2005 14:33:46:914276] 00000004 IBM.XMS.Comms.IoRequest > Initialize Entry
[09/11/2005 14:33:46:914276] 00000004 IBM.XMS.Comms.IoRequest  for Entry
```

#### Application Configuration File Parameters

| Parameter | Description |
| --- | --- |
| `traceSpecification=ComponentName=type=state` | Specifies the class to trace, trace type, and state. Use `*` wildcard for multiple classes. Example: `*=all=enabled` or `IBM.XMS.impl.*=all=enabled`. Valid types: `all`, `debug`, `event`, `EntryExit`. State: `enabled` or `disabled`. |
| `traceFilePath="filename"` | Directory path for trace files. If not specified, files are placed in the current directory. Example: `traceFilePath="c:\somepath"`. |
| `traceFileSize="size"` | Maximum allowed size of the trace file. Default is 20 MB (`traceFileSize="20000000"`). |
| `traceFileNumber="number"` | Number of trace files to retain. Default is 4 (one active and three archived). Minimum is 2. |
| `traceFormat="format"` | Default format is `basic`. Use `traceFormat="advanced"` for compatibility with trace analyzer tools. |

#### Dynamic Trace Settings

- Trace settings in the application configuration file are dynamic and reread every time the file is saved or replaced.
- If errors are found after editing, settings revert to their default values.

#### Tracing Using Environment Variables

- **XMS_TRACE_ON:** Enables all trace if set.
- **XMS_TRACE_FILE_PATH:** Directory path for trace and FFDC records. Default is the current working directory. Example: `XMS_TRACE_FILE_PATH=/dirpath/`.
- **XMS_TRACE_FORMAT:** Trace format, either `BASIC` or `ADVANCED`. Default is `BASIC`.
- **XMS_TRACE_SPECIFICATION:** Overrides the trace specification. See "Tracing XMS .NET applications using an application configuration file" for format details.

#### Tracing Using `mqclient.ini`

- From IBM MQ 9.3.3, the `mqclient.ini` file includes a `Trace` stanza.
- To enable trace, set the following properties:
  - **XMSDotnetTraceLevel:** Set to `1` for basic format, `2` for advanced format.
  - **XMSDotnetTraceFilePath:** File path for trace files. Example: `XMSDotnetTraceFilePath="c:\somepath"`.
  - **XMSDotnetTraceSpecification:** Specify trace elements using `:` delimiter. Example: `*=all=enabled`.
  - **XMSDotnetTraceFileSize:** Maximum file size. Default is 20 MB.
  - **XMSDotnetTraceFileNumber:** Number of trace files to retain. Default is 4.

- To stop trace, set `XMSDotnetTraceLevel` to `0`.

#### Enabling Dynamic Tracing for LDAP Client Library

- From IBM MQ 9.1.0 Fix Pack 4 and IBM MQ 9.1.4, you can switch LDAP client trace on and off without stopping or starting the queue manager.
- Set the environment variable `AMQ_LDAP_TRACE` to a non-null value.
- Use the `strmqtrc` command to start trace: `strmqtrc -m QMNAME -t servicedata`.
- Use the `endmqtrc` command to stop trace.

**Note:** On UNIX platforms, filesystem space cannot be fully released simply by unlinking the trace files. A queue manager end should be performed to release disk space in `/var/mqm/trace`.

For more information, refer to "Collecting troubleshooting information for IBM Support" on page 302.