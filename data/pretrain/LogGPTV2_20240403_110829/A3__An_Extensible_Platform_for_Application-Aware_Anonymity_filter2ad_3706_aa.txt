# A3: An Extensible Platform for Application-Aware Anonymity

## Authors
- Micah Sherr<sup>*</sup>
- Andrew Mao<sup>†</sup>
- William R. Marczak<sup>‡</sup>
- Wenchao Zhou<sup>*</sup>
- Boon Thau Loo<sup>*</sup>
- Matt Blaze<sup>*</sup>

<sup>*</sup>University of Pennsylvania  
<sup>†</sup>Harvard University  
<sup>‡</sup>University of California, Berkeley  

Emails: {msherr, wenchaoz, boonloo, blaze}@cis.upenn.edu, PI:EMAIL, PI:EMAIL

## Abstract
This paper introduces the design and implementation of Application-Aware Anonymity (A3), an extensible platform for deploying anonymity-based services on the Internet. A3 allows applications to tailor their anonymity properties and performance characteristics according to specific communication requirements.

To support flexible path construction, A3 provides a declarative language (A3LOG) that enables applications to specify path selection and instantiation policies. These policies are executed by a declarative networking engine. We demonstrate that A3LOG is sufficiently expressive to encode both novel multi-metric performance constraints and existing relay selection algorithms used in systems like Tor, using concise code. We experimentally evaluate A3 using trace-driven simulations and deployment on PlanetLab, showing that A3 can support a wide range of path selection and instantiation strategies with low performance overhead.

## 1. Introduction
In recent years, there has been significant research into designing systems that enable anonymous communication in the presence of eavesdroppers. Typically, these systems achieve anonymity by routing messages through a series of relays before delivering them to their final destination. Innovations have focused on improving relay selection and path instantiation to provide high anonymity and good performance.

Despite the variety of proposed techniques, no one-size-fits-all anonymity system exists. The appropriate relay selection and path instantiation strategy can vary based on application requirements, performance characteristics, and network constraints. For example, an anonymous video conferencing system may prioritize high bandwidth and low latency over strong anonymity, while an anonymous email system may require very strong anonymity guarantees without strict performance requirements.

Several path instantiation approaches exist. Onion Routing and Tor's telescoping scheme build paths by recursively encrypting and shipping key material to constituent nodes, with the latter allowing the extension of existing paths. Crowds, on the other hand, relies on the network to make routing decisions, suitable for environments where source routing is not available and intermediate nodes can be trusted with the receiver's identity.

In this paper, we present the Application-Aware Anonymity (A3) framework, which enables trade-offs between anonymity and performance through highly customizable relay selection and path instantiation strategies. A3 supports a wide range of anonymity-based networked services with different application-specific constraints. Applications can leverage A3 by specifying path instantiation and relay selection techniques that meet their performance and anonymity requirements.

A key element of A3 is the use of declarative networking, a logic-based framework that efficiently executes high-level protocol specifications with significantly less code than imperative implementations. A3 utilizes a declarative networking system as a policy engine for specifying and executing relay selection and path instantiation policies. Our proposed A3LOG declarative language extends previous languages with constructs specifically designed for anonymity systems, such as user-defined cryptographic primitives and reusable components for specifying and customizing anonymous routing.

A3 is extensible enough to support both traditional node-based and recently proposed link-based relay selection strategies. Node-based strategies select relays based on node properties like bandwidth, while link-based strategies consider link characteristics such as latency, AS hop count, or jitter. We show that both types of strategies, including those used by Tor and other systems, can be concisely represented in A3LOG. By providing a flexible framework for realizing both relay selection and path instantiation policies, A3 enables the rapid development, deployment, and testing of both existing and novel anonymity protocols.

We experimentally evaluate the A3 system through trace-driven simulations and a deployment on PlanetLab, demonstrating that A3 can support a wide range of path selection and instantiation strategies with low performance overhead.

## 2. Related Work
The Internet uses a simple routing scheme where packets are forwarded on a best-effort basis towards their destinations. End-to-end performance is dictated by policies enforced by routers along the path. Overlay networks built on top of the Internet infrastructure allow users to exercise greater control over message relaying, enabling the selection of paths that meet specific requirements.

Anonymity systems like Tor, Onion Routing, Crowds, Tarzan, Hordes, JAP, and MorphMix utilize application-layer overlay routing to obfuscate the addresses of senders and receivers while ensuring reliable message delivery. Some systems also aim to produce high-performance paths. For example, Tor achieves high bandwidth paths by selecting relays based on their advertised bandwidth, while Snader and Borisov's refinements allow initiators to tune the performance of their paths by balancing bandwidth and anonymity.

This paper addresses the problem of extensible anonymous routing, allowing applications to load routing policies at runtime. We show that existing anonymous routing techniques can be compactly represented in A3LOG, enabling applications to tune the degree of anonymity versus performance and to select and combine different relay selection techniques. This work builds on our earlier proposals, extending the use of coordinate embedding systems and introducing link-based routing.

## 3. Background on Declarative Networking
Declarative networking aims to construct extensible architectures that balance flexibility, performance, and safety. Protocols are specified as sets of queries in a high-level language, expressing what a program achieves rather than how it operates. This approach is particularly useful for implementing routing protocols and overlay networks, which can often be expressed as recursive queries. For example, path-vector and distance-vector routing protocols can be written in a few lines of code, and the Chord distributed hash table in 47 lines of code.

### 3.1 Datalog
Our A3LOG declarative language is based on Datalog, a logic programming language. A Datalog program consists of a set of possibly recursive rules, each of the form `q :- p1, p2, ..., pn`, meaning "p1 and p2 and ... and pn implies q". A3LOG extends Datalog by allowing multiple head literals and additional constructs such as cryptographic functions, random and ranking aggregates, and composability.

### 3.2 Example: All Pairs Reachability
To illustrate A3LOG, consider the following rules that compute all pairs of reachable nodes in a network:

```datalog
r1: reachable(S, N) :- neighbor(S, N).
r2: reachable(@N, D) :- neighbor(S, N), reachable(S, D).
```

These rules compute the transitive closure of the neighbor relation, deriving all pairs of nodes that can reach each other. Rule `r1` computes all pairs of nodes reachable within a single hop, while rule `r2` propagates reachability information to neighbors until a distributed fixpoint is reached. The `@` symbol in `r2` denotes the location of each fact derived by the rule head, ensuring that reachability information is propagated correctly.

A3LOG queries are compiled and executed either locally or across the network, depending on the location specifier. This example can be extended to construct more complex routing protocols, such as distance vector and path vector routing.