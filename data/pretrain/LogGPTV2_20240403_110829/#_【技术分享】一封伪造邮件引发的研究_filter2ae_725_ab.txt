邮件接收方通过DNS查询得到公开密钥后进行验证所以说需要在DNS域名解析上中加上一个TXT的记录，用来记录DKIM的公钥信息， 以DNSPOD为例
，类似SPF记录
以PI:EMAIL为例
在主机记录中写入 mail._domainkey.mail
(这里的第一个mail为DKIM中域名的selector，可以修改为不同的值，一个域名可以有多个selector,这样不同的Email
server可以有不同的key), 记录类型为TXT， 记录值为：
    v=DKIM1;k=rsa;p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCmMPX+sFtBSSBaQENMXIY0kMoU xwpjsktTkjlsrdErh8WKSdRqNEZCE7e5/i9qT/rot5WikkyLoO9nWactl5u5rXli Nqy4eGq3aSQAo0J1/prrL9ZP/NWVo2j6lcSgkMgVCdw7gSIxObfvmp6PIb4edNzP nRBnpjey8xWFTDBzvQIDAQAB
格式类似这样，可能具体的公钥信息不一致， 其中v表示DKIM的版本; k表示非对称的加密算法; p表示base64之后的公钥信息
如何查询邮件域的DKIM 公钥：
windows:
    nslookup -qt=txt mail._domainkey.mail.vpgame.net
第一个mail 是上面所说的邮件域的selector，_domainkey 是固定格式(DKIM就是基于domainkeys的技术发展而来)，
mail.vpgame.net 是邮件域
Linux:
    dig -t txt mail._domainkey.mail.vpgame.net
补充一个gmail的：
3）DKIM签名信息分析
这是一封Gmail发给我的腾讯企业邮箱的邮件：
我们看一下DKIM-Signature的内容：
其中，v表示DKIM的版本，
a=rsa-sha1，表示算法(algorithm)。有rsa-sha1和rsa-sha256两种，
c=relaxed/relaxed，表示标准化方法(Canonicalization)，头部和内容都用的relaxed方法。还可以用simple，表示不能有任何改动，包括空格.
d=gmail.com，发送者的域名， 也就是Gmail收到邮件信息中的所谓的”署名域”，
这个”署名域”需要在邮件服务器的DKIM设置中配置的，可以和邮件域(比如PI:EMAIL
@后面的即是邮件域)不一样（一般都保持一样）
s=20161025，表示域名的selector，通过这个selector，可以允许一个域名有多个public
key，这样不同的server可以有不同的key。
h=…，是header list，表示对HEADER中有哪些字段签名。
bh=…，是body hash。也就是内容的hash。
b=…，是header的签名。也就是把h=那个里面所有的字段及其值都取出来，外加DKIM-signature这个头(除了b=这个值，因为还不存在)，一起hash一下，然后用rsa加密。
**0x03. 关于国内有名的sendCloud配置注意事项**
1、发件域和显示发件人(from)的邮件域（@后面的部分） 不一致导致的代发提示
ESP（邮件服务商）在收到邮件的时候都会检查mail_from 和from 的邮件域(@后面的部分)是否一致，不一致则提示邮件代发
gmail也是这样处理
如果你在sendCloud上配置的发件域和邮件显示的发件人的邮件域不一致，则会在gmail邮箱中显示邮件代发
实际发件域是mail.vpgame.net，而显示的发件人的邮件域是mail.vpgame.cn ，两者不一致，Gmail提示代发
下图是一封码农周刊发送到我Gmail邮箱中的一封邮件， 没有提示代发，因为实际发件人的邮件域是和显示发件人的邮件域是一致的
2、使用非加密端口发送代发邮件
比如上面的mail.vpgame.net 代发的一封邮件就是被显示没有加密，可能是直接调用sendCloud的未加密端口发送的
这里显示sendCloud.org未加密这封邮件， 因为gmail是从sendCloud 收到这封邮件的
**0x04. 关于使用foxmail代发邮件**
1\. foxmail 可以配置显示其他账户（由本邮件代发显示邮件账号）
2\. 用上图的配置给自己（上图的实际账号）发封邮件
这里会显示代发
3\. 如果是微信收到邮件呢(腾讯企业邮箱绑定微信后，微信可收信)
不注意看，还真以为是显示的发件人发的邮件呢
4\. 给Gmail 也发一封
Gmail 也没提示代发
但是我们查看Gmail的原始邮件，可以看到此邮件不是显示发件人发的
5\. 我们来看回复此邮件能不能看到猫腻
Gmail的回复, 回复给了显示发件人
fomail的回复，也是回复给了显示收件人
foxmail的快速回复, 回复给了实际发件人
注： 如果是回复全部，则包含实际发件人
**0x05. 一些识别伪造邮件的小技巧**
1、实际发件人与显示发件人不一致
这时候就需要小心了，确认邮件真的是由合法的第三方代发的，比如有名的邮件代发服务商sendCloud，如果不是，一般都是伪造邮件
如何知道邮件的实际发件人？
一般是查看邮件的原始内容，不过还有一个小技巧，就是在收到邮件的时候，邮箱提示信息中显示的就是实际发件人
当然也可以尝试回复一下邮件，这样真实发件人就知道了，对比一下和显示的发件人是否一致，不一致就要小心了
2、一般正常的发件服务器都会配置SPF，有的还会配置DKIM，如果收到的邮件的发件人的邮件域没有配置SPF，则有可能是伪造邮件
3、一般邮件服务商都会有相应的反垃圾邮件的机制，对于有安全提示的邮件要小心，不要轻易相信，不要轻易点击其中图片、链接、附件
如上图，都是伪造邮件，而且显示是收件人也是伪造的
**0x06. 补充**
腾讯企业邮发送的邮件默认是加密的
一般邮件body 内容是base64-utf8 编码后的结果，可以使用k8-web 编码转换工具解码或者编码
邮件中的邮件头的from 或者 to 部分都支持中文别名显示（subject也支持中文），这些就需要写代码将中文内容编码一下，
以下是实现代码（python）
        #!/usr/bin/env python
        # -*- coding:utf8 -*-        
        import sys
        from email.header import make_header
        if __name__ == '__main__':
             reload(sys)
             sys.setdefaultencoding('utf8')
             content = repr('访问下邮件中的链接，看看不能访问')
             print make_header([('xe8xaexbfxe9x97xaexe4xb8x8bxe9x82xaexe4xbbxb6xe4xb8xadxe7x9ax84xe9x93xbexe6x8exa5xefxbcx8cxe7x9cx8bxe7x9cx8bxe4xb8x8dxe8x83xbdxe8xaexbfxe9x97xae', 'utf-8')]).encode()
比如说自己构造邮件原始内容（不是调用某某库哦）的时候想把subject 内容修改一下，则需要先用repr
将中文的16进制编码内容传入make_header的参数中，这种得到的结果就是邮件subject（中文）原始内容
这里要注意一下，不能直接将content传入make_header中，否则会出错，而是先打印repr(‘subject中文内容’)值，然后将其拷贝至make_header中