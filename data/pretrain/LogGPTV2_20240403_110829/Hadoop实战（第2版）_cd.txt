#the directory where the snapshot is stored.
dataDir=$HADOOP_HOME/zookeeper-3.4.3/data
#the location of the log file
dataLogDir=$HADOOP_HOME/zookeeper-3.4.3/log
server.1=zoo1：2888：3888
server.2=zoo2：2888：3888
server.3=zoo3：2888：3888
更多关于ZooKeeper参数的设置请参看15.2.2节。“server.id=host：port：port.”标识了不同的ZooKeeper服务器的配置。每台服务器作为集群的一部分应该知道ensemble
[1]
 中的其他机器，用户可以从“server.id=host：port：port.”中读取相关的信息。参数中host和port比较直观。id标识的是不同的服务器，在服务器的data（dataDir参数所指定的目录）目录下创建一个文件名为myid的文件，这个文件中仅含一行的内容，它所指定的是自身的id值。比如，服务器“1”应该在myid文件中写入“1”。而且这个id值必须是ensemble中唯一的，大小在1到255之间。在这一行配置中，第一个端口（port）是从（follower）机器连接到主（leader）机器的端口，第二个是用来进行leader选举的端口。在这个例子中，每台机器使用三个端口，分别是：clientPort，2181；port，2888；port，3888。
笔者在拥有三台机器的Hadoop集群上测试了ZooKeeper的安装，如上所示，代码清单15-2就是根据自身情况所设置的ZooKeeper配置文档。
清单中的zoo1、zoo2及zoo3分别为三台机器的主机名，该项需要在Ubuntu的host环境中进行设置，这部分内容不是本书的重点，不再赘述。大家可以查阅Ubuntu以及Linux的相关资料。
4.在集群伪分布模式下安装ZooKeeper
通过前面的章节，读者了解到Hadoop可以在伪分布模式下模拟分布式Hadoop的运行。与它不同的是，ZooKeeper不但可以在单机上运行单机模式ZooKeeper，而且可以在单机上模拟集群模式ZooKeeper的运行，也就是将不同的节点运行在同一台机器上。我们索性将其称之为“集群伪分布模式”，以区别“单机模式”。我们知道，伪分布模式下Hadoop的操作和分布式模式下有着很大的不同，但是在集群伪分布模式下对ZooKeeper的操作却和集群模式下没有本质的区别。显然，集群伪分布模式为我们体验ZooKeeper和做一些尝试性的实验提供了很大的便利。比如，我们在实验的时候，可以先使用少量数据在集群伪分布模式下进行测试。当测试可行的时候，再将其移植到集群模式下进行真实的数据实验。这样不但保证了它的可行性，同时大大提高了实验的效率。
那么，如何配置ZooKeeper的集群伪分布模式呢？其实很简单。用心的读者可以发现，在ZooKeeper配置文档中，clientPort参数是用来设置客户端连接ZooKeeper的端口。在server.1=IP1：2887：3887中，IP1指示的是组成ZooKeeper服务的机器IP地址，2887为进行leader选举的端口，3887是组成ZooKeeper服务的机器之间的通信端口。在集群伪分布模式下我们使用每个配置文档模拟一台机器，也就是说，需要在单台机器上运行多个ZooKeeper实例。但是，必须要保证各个配置文档的各个端口不能冲突。
下面是我们所配置的集群伪分布模式，分别通过zoo1.cfg、zoo2.cfg、zoo3.cfg来模拟有三台机器的ZooKeeper集群。详见代码清单15-3至清单15-5。
代码清单15-3 zoo1.cfg
#The number of milliseconds of each tick
tickTime=2000
#The number of ticks that the initial
#synchronization phase can take
initLimit=10
#The number of ticks that can pass between
#sending a request and getting an acknowledgement
syncLimit=5
#the directory where the snapshot is stored.
dataDir=$HADOOP_HOME/zookeeper-3.4.3/d_1
#the port at which the clients will connect
clientPort=2181
#the location of the log file
dataLogDir=$HADOOP_HOME/zookeeper-3.4.3/logs_1
server.1=localhost：2887：3887
server.2=localhost：2888：3888
server.3=localhost：2889：3889
代码清单15-4 zoo2.cfg
#The number of milliseconds of each tick
tickTime=2000
#The number of ticks that the initial
#synchronization phase can take
initLimit=10
#The number of ticks that can pass between
#sending a request and getting an acknowledgement
syncLimit=5
#the directory where the snapshot is stored.
dataDir=$HADOOP_HOME/zookeeper-3.4.3/d_2
#the port at which the clients will connect
clientPort=2182
#the location of the log file
dataLogDir=$HADOOP_HOME/zookeeper-3.4.3/logs_2
server.1=localhost：2887：3887
server.2=localhost：2888：3888
server.3=localhost：2889：3889
代码清单15-5 zoo3.cfg
#The number of milliseconds of each tick
tickTime=2000
#The number of ticks that the initial
#synchronization phase can take
initLimit=10
#The number of ticks that can pass between
#sending a request and getting an acknowledgement
syncLimit=5
#the directory where the snapshot is stored.
dataDir=$HADOOP_HOME/zookeeper-3.4.3/d_3
#the port at which the clients will connect
clientPort=2183
#the location of the log file
dataLogDir=$HADOOP_HOME/zookeeper-3.4.3/logs_3
server.1=localhost：2887：3887
server.2=localhost：2888：3888
server.3=localhost：2889：3889
从上述三个代码清单可以看到，它们除了clientPort不同之外，dataDir也不同。另外，不要忘记在dataDir所对应的目录中创建myid文件来指定对应的ZooKeeper服务器实例。
[1]
 全体，相对于大多数集（quorum）而言。
15.2.2 配置ZooKeeper
ZooKeeper的功能特性是通过ZooKeeper配置文件来进行控制管理（zoo.cfg配置文件）的。这样的设计其实有其自身的原因。通过前面对ZooKeeper的配置可以看出，在对ZooKeeper集群进行配置的时候，它的配置文档是完全相同的（对于集群伪分布模式来说，只有很少的部分是不同的）。这样的配置方式使得在部署ZooKeeper服务的时候非常方便。如果服务器使用不同的配置文件，必须要确保不同配置文件中的服务器列表相匹配。
在设置ZooKeeper配置文档的时候，某些参数是可选的，但是某些参数是必需的。这些必需的参数就构成了ZooKeeper配置文档的最低配置要求。另外，如果需要对ZooKeeper进行更详细的配置，大家可以参考下面将要讲述的内容。
1.最低配置
下面是在最低配置要求中必须配置的参数：
1）clientPort：监听客户端连接的端口。
2）dataDir：存储内存中数据库快照的位置。
注意 应该谨慎地选择日志存放的位置，使用专用的日志存储设备能够大大地提高系统的性能，如果将日志存储在比较繁忙的存储设备上，那么将会在很大程度上影响系统的性能。
3）tickTime：基本事件单元，以毫秒为单位，用来控制心跳和超时，默认情况下最小的会话超时时间为两倍的tickTime。
2.高级配置
下面是高级配置要求中可选的配置参数，用户可以使用下面的参数来更好地规定ZooKeeper的行为：
（1）dataLogDir
这个操作让管理机器把事务日志写入“dataLogDir”所指定的目录中，而不是“dataDir”所指定的目录。这将允许使用一个专用的日志设备，并且帮助我们避免日志和快照之间的竞争。配置如下：
#the location of the log file
dataLogDir=/root/hadoop-0.20.2/zookeeper-3.4.3/log/data_log
（2）maxClientCnxns
这个操作将限制连接到ZooKeeper的客户端的数量，并且限制并发连接的数量，它通过IP来区分不同的客户端。此配置选项可以用来阻止某些类别的Dos攻击。将它设置为0或忽略而不进行设置将会取消对并发连接的限制。
例如，此时我们将maxClientCnxns的值设置为1，如下所示：
#set maxClientCnxns
maxClientCnxns=1
启动ZooKeeper之后，首先用一个客户端连接到ZooKeeper服务器之上。之后如果有第二个客户端尝试对ZooKeeper进行连接，或者有某些隐式的对客户端的连接操作，将会触发ZooKeeper的上述配置。系统会提示相关信息，如图15-2所示。
图 15-2 ZooKeeper maxClientCnxns异常
（3）minSessionTimeout和maxSessionTimeout
即最小的会话超时时间和最大的会话超时时间。在默认情况下，最小的会话超时时间为2倍的tickTme时间，最大的会话超时时间为20倍的会话超时时间。系统启动时会显示相应的信息，如图15-3所示。
图 15-3 默认会话超时时间
从上图中可以看出，minSessionTimeout及maxSessionTimeout的值均为-1。现在我们来设置系统的最小和最大的会话超时时间，如下所示：
#set minSessionTimeout
minSessionTimeout=1000
#set maxSessionTImeout
maxSessionTimeout=10000
在配置minSessionTmeout及maxSessionTimeout的值时需要注意，如果将此值设置得太小的话，会话很可能刚刚建立便由于超时而不得不退出。一般情况下，不能将此值设置得比tickTime的值还小。
3.集群配置
（1）initLimit
此配置表示，允许follower（相对于leader而言的“客户端”）连接并同步到leader的初始化连接时间，它是以tickTime的倍数来表示的。当初始化连接时间超过设置倍数的tickTime时间时，则连接失败。
（2）syncLimit
此配置表示leader与follower之间发送消息时请求和应答的时间长度。如果follower在设置的时间内不能与leader通信，那么此follower将被丢弃。
15.2.3 运行ZooKeeper
1.单机模式下运行ZooKeeper
如果大家已经按照15.2.1节中的第2点正确地配置了ZooKeeper的环境变量，那么我们现在可以直接在终端运行ZooKeeper的sh脚本了，从而启动ZooKeeper的服务。
大家可以通过下面的命令来启动ZooKeeper服务：
zkServer.sh start
这个命令默认情况下执行ZooKeeper的conf文件夹下的zoo.cfg配置文件。当运行成功时大家会看到类似如下的提示界面：
root@ubuntu：～#zkServer.sh start
JMX enabled by default
Using config：/root/hadoop-0.20.2/zookeeper-3.4.3/bin/../conf/zoo.cfg
Starting zookeeper……
STARTED
……
2011-01-19 10：04：42，300-WARN[main：QuorumPeerMain@105]-Either no config or no
quorum defined in config, running in standalone mode
……
2011-01-19 10：04：42，419-INFO[main：ZooKeeperServer@660]-tickTime set to 2000
2011-01-19 10：04：42，419-INFO[main：ZooKeeperServer@669]-minSessionTimeout
set to-1
2011-01-19 10：04：42，419-INFO[main：ZooKeeperServer@678]-maxSessionTimeout
set to-1
2011-01-19 10：04：42，560-INFO[main：NIOServerCnxn$Factory@143]-binding to port
0.0.0.0/0.0.0.0：2181
2011-01-19 10：04：42，806-INFO[main：FileSnap@82]-Reading snapshot/root/
hadoop-0.20.2/zookeeper-3.4.3/data/version-2/snapshot.200000036
2011-01-19 10：04：42，927-INFO[main：FileSnap@82]-Reading snapshot/root/
hadoop-0.20.2/zookeeper-3.4.3/data/version-2/snapshot.200000036
2011-01-19 10：04：42，950-INFO[main：FileTxnSnapLog@208]-Snapshotting：
400000058
从上面可以看出，运行成功后，系统会列出ZooKeeper运行的相关环境配置信息。
2.集群模式下运行ZooKeeper
在集群模式下需要用户在每台ZooKeeper机器上运行第一部分的命令，这里不再赘述。
3.集群伪分布模式下运行ZooKeeper
在集群伪分布模式下，我们只有一台机器，但是要运行三个ZooKeeper服务实例。此时，如果再使用上述命令式肯定是行不通的。这时只要通过下面三条命令就能运行前面所配置的ZooKeeper服务了。如下所示：
zkServer.sh start zoo1.cfg
zkServer.sh start zoo2.cfg