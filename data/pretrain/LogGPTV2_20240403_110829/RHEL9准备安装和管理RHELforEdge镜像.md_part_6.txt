        号来跟踪构建。另外，记录 UUID 号以易于执行进一步的任务。
    :::
2.  检查镜像 compose 状态。
    ``` screen
    # composer-cli compose status
    ```
    命令输出以以下格式显示状态：
    ``` screen
     RUNNING date blueprint-name blueprint-version image-type
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    完成镜像创建过程需要几分钟时间。
    :::
    要中断镜像创建过程，请运行：
    ``` screen
    # composer-cli compose cancel 
    ```
    要删除现有镜像，请运行：
    ``` screen
    # composer-cli compose delete 
    ```
    镜像就绪后，您可以将它 [**用于非网络部署**]{.strong}。
:::
:::
::: section
::: titlepage
## []{#composing-a-rhel-for-edge-image-using-image-builder-command-line_composing-installing-managing-rhel-for-edge-images.html#proc_downloading-a-rhel-for-edge-installer-image-using-the-image-builder-cli_composing-a-rhel-for-edge-image-using-image-builder-command-line}使用 Image Builder CLI 下载 RHEL for Edge 安装程序镜像 {.title}
:::
要使用 Image Builder 命令行界面下载 RHEL for Edge
安装程序镜像，请确定您满足以下先决条件，然后按照流程操作。
::: itemizedlist
**先决条件**
-   您已创建了 RHEL for Edge 安装程序镜像。
:::
::: orderedlist
**步骤**
1.  查看 RHEL for Edge 镜像状态。
    ``` screen
    # composer-cli compose status
    ```
    输出必须显示以下内容：
    ``` screen
    $  FINISHED date blueprint-name blueprint-version image-type
    ```
2.  下载镜像。
    ``` screen
    # composer-cli compose image 
    ```
    镜像构建器将镜像作为 `.iso`{.literal} 文件下载到当前目录。
    UUID 号和镜像大小会同时显示。
    ``` screen
    $ -boot.iso: size MB
    ```
:::
生成的镜像是可引导 ISO 镜像。
:::
:::
::: section
::: titlepage
# []{#composing-a-rhel-for-edge-image-using-image-builder-command-line_composing-installing-managing-rhel-for-edge-images.html#_additional_resources_2}其他资源 {.title}
:::
::: itemizedlist
-   [在 RHEL web 控制台中使用镜像构建器编写 RHEL for Edge
    镜像](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/composing_installing_and_managing_rhel_for_edge_images/index#composing-rhel-for-edge-images-using-image-builder-in-rhel-web-console_composing-installing-managing-rhel-for-edge-images){.link}。
:::
:::
:::
[]{#installing-rpm-ostree-images_composing-installing-managing-rhel-for-edge-images.html}
::: chapter
::: titlepage
# []{#installing-rpm-ostree-images_composing-installing-managing-rhel-for-edge-images.html#installing-rpm-ostree-images_composing-installing-managing-rhel-for-edge-images}第 5 章 在网络基础环境中部署 RHEL for Edge 镜像 {.title}
:::
您可以使用 RHEL 安装程序图形用户界面或 Kickstart 文件部署 RHEL for Edge
镜像。部署 RHEL for Edge
镜像的整体过程取决于您的部署环境是基于网络的还是不是基于网络的。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
要在裸机上部署镜像，请使用 Kickstart 文件。
:::
::: title
**基于网络的部署**
:::
在基于网络的环境中部署 RHEL for Edge 镜像涉及以下高级别步骤：
::: orderedlist
1.  提取镜像文件内容。
2.  设置 Web 服务器
3.  安装镜像
:::
::: section
::: titlepage
# []{#installing-rpm-ostree-images_composing-installing-managing-rhel-for-edge-images.html#extracting-the-tar-file-commit_installing-rpm-ostree-images}提取 RHEL for Edge 镜像提交 {.title}
:::
下载提交后，提取 .tar 文件并记下 ref 名称和提交 ID。
下载的提交文件包含一个带有 OSTree 存储库的 `.tar`{.literal} 文件。OSTree
存储库包含提交和 `compose.json`{.literal} 文件。
compose.json 文件包含与提交相关的信息元数据，它们包含 \"Ref\"（引用
ID）和提交 ID 等信息。提交中包含 rpm 软件包。
要提取软件包内容，请执行以下步骤：
::: itemizedlist
**先决条件**
-   创建 kickstart 文件或使用现有文件.
:::
::: orderedlist
**步骤**
1.  提取下载的镜像 tar 文件：
    ``` screen
    # tar xvf -commit.tar
    ```
2.  前往您提取 `.tar`{.literal} 文件的目录。
    它包含一个 `compose.json`{.literal} 文件和 OSTree
    目录。`compose.json`{.literal} 文件包含提交号，OSTree 目录包含 rpm
    软件包。
3.  打开 `compose.json`{.literal} 文件，再记下提交 ID 号。当您继续设置
    Web 服务器时，您需要这个数字。
    如果安装了 `jq`{.literal} JSON 处理器，也可以使用 `jq`{.literal}
    工具检索提交散列 ID：
    ``` screen
    # jq '.["ostree-commit"]' 
# []{#installing-rpm-ostree-images_composing-installing-managing-rhel-for-edge-images.html#setting-up-a-web-server-to-install-rhel-for-edge-image_installing-rpm-ostree-images}设置 web 服务器以安装 RHEL for Edge 镜像 {.title}
:::
提取 RHEL for Edge 镜像内容后，设置 web 服务器以通过 HTTP 向 RHEL
安装程序提供镜像提交详情。
以下示例提供了使用容器设置 Web 服务器的步骤：
::: itemizedlist
**先决条件**
-   已在您的系统上安装了 Podman。[请参阅如何在 RHEL 中安装
    podman](https://access.redhat.com/solutions/3650231){.link}
:::
::: orderedlist
**步骤**
1.  使用以下步骤创建 `nginx`{.literal} 配置文件：
    ::: informalexample
    ``` screen
    events {
    }
    http {
        server{
            listen 8080;
            root /usr/share/nginx/html;
                    }
             }
    pid /run/nginx.pid;
    daemon off;
    ```
    :::
2.  将 `nginx`{.literal} 配置文件复制到 `/etc/nginx.conf`{.literal}
    目录。
3.  按照以下说明创建一个 dockerfile：
    ::: informalexample
    ``` screen
    FROM registry.access.redhat.com/ubi8/ubi
    RUN dnf -y install nginx && dnf clean all
    COPY kickstart.ks /var/www/html/
    COPY repo /usr/share/nginx/html/
    EXPOSE 8080
    CMD ["/usr/sbin/nginx", "-c", "/etc/nginx.conf"]
    ARG commit
    ADD ${commit} /usr/share/nginx/html/
    ```
    :::
    其中,
    ::: itemizedlist
    -   [*Kickstart.ks*]{.emphasis} 是 RHEL for Edge 镜像中的 Kickstart
        文件的名称。kickstart
        文件包含指令信息。为帮助您稍后管理镜像，建议包含 Greenboot
        检查的检查和设置。要做到这一点，您可以更新 Kickstart
        文件使其包含以下设置：
        ::: informalexample
        ``` screen
        lang en_US.UTF-8
        keyboard us
        timezone Etc/UTC --isUtc
        text
        zerombr
        clearpart --all --initlabel
        autopart
        reboot
        user --name=core --group=wheel
        sshkey --username=core "ssh-rsa AAAA3Nza...."
        ostreesetup --nogpg --osname=rhel --remote=edge
        --url=https://mirror.example.com/repo/
        --ref=rhel/8/x86_64/edge
        %post
        cat  /etc/greenboot/check/required.d/check-dns.sh
        #!/bin/bash
        DNS_SERVER=$(grep nameserver /etc/resolv.conf | cut -f2 -d" ")
        COUNT=0
        # check DNS server is available
        ping -c1 $DNS_SERVER
        while [ $? != '0' ] && [ $COUNT -lt 10 ]; do
        ((COUNT++))
        echo "Checking for DNS: Attempt $COUNT ."
        sleep 10
        ping -c 1 $DNS_SERVER
        done
        EOF
        %end
        ```
        :::
        OSTree 存储库可以从任何 HTTP
        服务托管，并且示例使用容器只是如何执行此操作的一个选项。docker
        文件执行以下任务：
        ::: orderedlist
        1.  使用最新的通用基础镜像 (ubi)
        2.  安装 Web 服务器(nginx)
        3.  将 kickstart 文件添加到服务器
        4.  将 RHEL for Edge 镜像提交添加到服务器