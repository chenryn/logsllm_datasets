title:Bilateral-secure Signature by Key Evolving
author:Tao Xiang and
Xiaoguo Li and
Fei Chen and
Yi Mu
Bilateral-secure Signature by Key Evolving
Tao Xiang
Xiaoguo Li
College of Computer Science
College of Computer Science
College of Computer Science
Chongqing University
Chongqing 400044, China
PI:EMAIL
Chongqing University
Chongqing 400044, China
PI:EMAIL
Fei Chen∗
and Engineering
Shenzhen University
Shenzhen 518060, China
PI:EMAIL
Yi Mu
School of Computing and
Information Technology
University of Wollongong
Wollongong, NSW 2522,
Australia
PI:EMAIL
ABSTRACT
In practice, the greatest threat against the security of a digi-
tal signature scheme is the exposure of signing key, since the
forward security of past signatures and the backward secu-
rity of future signatures could be compromised. There are
some attempts in the literature, addressing forward-secure
signature for preventing forgeries of signatures in the past
time; however, few studies addressed the backward-security
of signatures, which prevents forgeries in the future time. In
this paper, we introduce the concept of key-evolving signa-
ture with bilateral security, i.e., both forward security and
backward security. We ﬁrst deﬁne the bilateral security for-
mally for preventing the adversaries from forging a valid
signature of the past and the future time periods in the case
of key exposure. We then provide a novel construction based
on hub-and-spoke updating structure and the random ora-
cle model, and show that the construction achieves bilateral
security and unbounded number of time periods. Finally,
we compare our scheme with the existing work by rigorous
analysis and experimental evaluation, and demonstrate that
our construction is more secure and eﬃcient for practical
applications.
Keywords
Digital Signature; Bilateral Security; Key Evolving; Forward
Security; Backward Security
∗
The corresponding author is Fei Chen (PI:EMAIL).
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
ASIA CCS ’16, May 30-June 03, 2016, Xi’an, China
c⃝ 2016 ACM. ISBN 978-1-4503-4233-9/16/05. . . $15.00
DOI: http://dx.doi.org/10.1145/2897845.2897864
1.
INTRODUCTION
Digital signature is one of the most fundamental and use-
ful components in modern cryptography. It proves the au-
thenticity of a message by providing a way for users to sign
the message so that the signature can be veriﬁed. Key ex-
posure is a major threat in practice for a digital signature
scheme because the exposure of signing key typically implies
that all security guarantees are lost [5]. It not only compro-
mises the security and validity of any signature issued after
the exposure, but also compromises all past signatures [21,
6], namely the attacker can always construct a valid signa-
ture once the key exposure happens.
Many security properties are proposed or considered in
the design of signature schemes to solve the key exposure
problem, including proactive security [11, 17], key-insulated
security [12, 13], intrusion-resilient[19], and forward securi-
ty [4, 5, 21]. However, many of these solutions are costly in
various ways and are unsuitable for practical deployment. A
simpler and more practical approach to solve the problem
was suggested by Anderson [4] who suggested to update the
key periodically such that attackers could not forge a signa-
ture for past time periods. Such a signature scheme against
key exposure is referred to as forward-secure signature.
Forward-secure signature, as the most practical way to
solve the key exposure problem, divides the lifetime of a
signature scheme into discrete periods (e.g. days, weeks,
years) and updates the key at each new time period. The
recipient of the signature can verify two aspects: the cor-
rectness and the correspondence to a particular period time
[21]. By this way, the attacker cannot forge a valid signature
of previous time periods after key exposure. The forward-
secure signature was ﬁrstly formalized in [5], in which t-
wo constructions were proposed. The ﬁrst one is a generic
method with logarithmic complexity in the number of time
periods; the second scheme is based on Fiat-Shamir signa-
ture and has constant-size signatures, but it has a linear
cost in signature generation and veriﬁcation.
In [18], the
authors proposed a scheme with highly eﬃcient signing and
veriﬁcation based on the work in [15], however their basic
technique requires an expensive update.
In [26], the au-
thors constructed generic forward-secure signatures with an
523unbounded number of time periods. In [21], an extremely
simple construction of forward-secure signatures based on
any regular signature scheme was presented.
Backward security is another important security property.
It would be desirable for a digital signature scheme to cap-
ture this property, as it can prevent attackers from forging
a valid signature of future time periods after the key ex-
posure. However, backward security has only been scarce-
ly studied; for example, none of the previously-mentioned
forward-secure signature schemes is backward-secure.
In
[8], the notion of forward-secure signature with untrusted
update was proposed, which meets the backward security in
some extent. However, the lifetime of their signature system
is bounded by a predeﬁned parameter. Similar work can be
found in [22] and [14], but they either suﬀer from attacks or
need substantial improvement on performance.
In this paper, we introduce bilateral security, a new se-
curity property that satisﬁes forward security and backward
security at the same time, to address the key-exposure prob-
lem of digital signatures. Based on the CDH assumption, we
propose a novel bilateral-secure signature scheme using bi-
linear map. In our construction, we employ a hub-and-spoke
structure to evolve the key. Speciﬁcally, the signer generates
a root key at the beginning of the key generation. Then he
chooses two secrets that satisfy a speciﬁed relation with the
root key, and stores the two secrets separately. After updat-
ing the key at each time period, the speciﬁed relation always
holds. In the verify phase, the veriﬁer not only checks the
correctness of the signature but also validate whether the
speciﬁed relation holds.
1.1 Contributions
Our contributions are summarized as follows:
• We introduce the concept of key-evolving signature
with bilateral security (i.e. forward security and back-
ward security) that allows to update the secret keys
after each time period. We also deﬁne the bilater-
al security of a key-evolving signature scheme, which
prevents attackers from forging a valid signature of the
past and future time periods when the key is exposed.
• We propose a novel forward secure and backward se-
cure signature scheme (FBSS), the scheme dismisses
the threat of key expose problem. Furthermore, to the
best of our knowledge, our work is the ﬁrst to achieve
unbounded number of time periods by a speciﬁc con-
struction with hub-and-spoke updating structure for
prolonging the lifetime of signature system.
• Finally, we prove that our scheme achieves the bilateral-
security under the random oracle model and the CDH
assumption. We compare our work with existing for-
ward-secure schemes with untrusted update (FSSUU).
Experimental results of key generation, key update,
message signing and verifying show that our scheme is
more eﬃcient than existing FSSUU schemes.
1.2 Organization
The organization of this paper is as follows. We begin by
discussing related work in Section 2. Next, we give the pre-
liminaries and deﬁne the secure model of our work in Section
3. Then we present a novel construction in Section 4 and
show the correctness analysis and security proof in Section
5. Section 6 describes our experimental results. Finally we
conclude this paper in Section 7.
2. RELATED WORK
We brieﬂy review forward security and backward security
schemes in this section.
2.1 Forward Security
Forward secure protocol design is an important approach
to the key exposure problem. Originally, forward security
was introduced for key exchange protocols [16]. The notion
forward secure signature was ﬁrst formalized by Bellare and
Minner [5], building on the earlier ideas of Anderson [4].
Bellare and Miner in [5] further proposed practical schemes
and formalized the deﬁnitions of forward-secure signature.
Subsequently, a large number of papers about forward secu-
rity have been published. The existing work can be roughly
classiﬁed into two categories.
One category is generic constructions that do not neces-
sarily require random oracles [4, 5, 21, 26, 10]. The ﬁrst
example is the tree construction in [5], which builds a bina-
ry tree from chains of certiﬁcates where leaves correspond
to time periods.
In [26], the authors constructed gener-
ic forward-secure signatures with an unbounded number of
time periods.
In [21], an extremely simple construction
of forward-secure signature based on any regular signature
scheme is presented. In [10], an evaluation of the practical
performance of these schemes is provided and the authors
also build an open-source forward-secure signature library.
The other category is the speciﬁc schemes based on ran-
dom oracle [5, 3, 18, 20]. In [5], for the ﬁrst time, the au-
thors achieve short signatures with fast key update based
on the Ong-Schnorr scheme [27]; however, the complexity
of veriﬁcation is linear with the period time T . In [18], the
authors proposed a scheme with highly eﬃcient signing and
veriﬁcation based on [15]. Although their basic technique
requires an expensive update, they show how to apply cer-
tain pebbling techniques to achieve constant update time.
Furthermore, forward security has been introduced to other
cryptographic primitives, such as forward secure encryption
[9], forward secure aggregate signatures [25], and forward
secure group signatures [23].
However, all the above schemes cannot prevent attackers
from forging a fake signature of some message in future time
periods.
2.2 Backward Security
For solving the key exposure problem exhaustively, we also
expect a forward-secure signature scheme to be backward-
secure, which prevents the adversaries from forging fakes in
future time periods. There are several preliminary attempts
on backward security, but the study in this ﬁeld is scarce
and a formal security deﬁnition about backward security is
still absent.
In [8], the notion of forward-secure signature with untrust-
ed update was proposed, which meets the backward security
to a certain extent. Their scheme split the secret informa-
tion into two parts: one (encrypted key, storing at machines)
is for evolving keys in the binary tree and the other (pass-
word, remembering in the user) is for encrypting the for-
mer. They assume that password is secure and cannot be
comprised. The signer has to use the password to sign a
message at each signing stage, which ensures that the ad-
524versaries cannot forge a signature after key exposure.
In
[22], a generic forward-secure signature with untrusted up-
date was proposed from any traditional signature scheme by
applying the similar approach in [26]. However the eﬃcien-
cy of generic construction is low. In [14] and [24], one-way
hash chain was employed to the forward-secure signature for
achieving the backward detection, but it was vulnerable to
attacks [28].
Compared with the previous work, our scheme not only
achieves bilateral security, but also has a better performance
and achieves unbounded number of time periods, as shown
in the following sections.
3. PRELIMINARIES AND DEFINITIONS
3.1 Preliminaries
Bilinear map [7] is a cryptographic tool, which has been
used for a number of cryptographic constructions. Let G1
and G2 be two multiplicative cyclic groups of prime order q
and g1 and g2 be two generators of G1. A bilinear map e is
a map e : G1 × G1 7→ G2 with the following properties:
• Computability: There exists a polynomial time algo-
rithm for computing map e eﬃciently.
• Bilinearity: For all u, v ∈ G1 and a, b ∈ Zq, e(ua, vb)
= e(u, v)ab.
• Non-degeneracy: e(g1, g2) ̸= 1.
A bilinear pairing parameter generator is deﬁned as a
polynomial-time algorithm IG, which takes as input a secu-
rity parameter κ and outputs a representation (e, G1, G2, q)
of the bilinear map parameters that satisfy the above prop-
erties, where q is a κ-bit prime.
Assumption 1. (CDH assumption). Given a (cid:12)nite cyclic
group G = ⟨g⟩ of prime order q with a generator g, for a
given triple (g, ga, h) where a ∈ Zq, the CDH problem is to
compute a group element w ∈ G such that w = ha. An
algorithm A is said to have ϵ-advantage in solving the CDH
problem if
P r[A(G, q, g, ga, h) = ha] > ϵ
(1)
The CDH assumption holds in G if no probabilistic polyno-
mial time algorithm has at least ϵ-advantage in solving the
CDH problem in G.
3.2 Deﬁnitions
Definition 1. A key-evolving signature scheme with bi-
lateral security (i.e. forward-security and backward-security)
has (cid:12)ve polynomial algorithms, FBSS = (KeyGen, CheckKey,
Update, Sign, Verify), where
• FBSS.KeyGen: The key generation algorithm takes as
input a security parameter 1κ, κ ∈ N and the total
number of periods T , returns the initial secret key SK0
and the public key P K.
• FBSS.CheckKey: The check key algorithm takes as in-
put the time period j, the corresponding secret key SKj
and the public key P K, returns ⊥ if the SKj is not a
valid key.
• FBSS.Update: The secret key update algorithm takes
as input the time period j and the corresponding secret
key SKj, returns the new secret key SKj+1 of the time
period j + 1.
• FBSS.Sign: The signing algorithm takes as input the
secret key SKj for the current time period j and the
message M to be signed, returns a pair ⟨j, σ⟩, where σ
is the signature of M at period j.
• FBSS.Verify: The veri(cid:12)cation algorithm takes as in-
put the public key P K, a message M and a candidate
signature ⟨j, σ⟩, returns 1 if ⟨j, σ⟩ is a valid signature
of M or 0, otherwise.
It is required that VerifyP K (M , SignSKj (M)) = 1 for every
message M and time period j.
We aim to have an in-depth understanding of the securi-
ty of the key-evolving signature scheme against existential
forgery under adaptive chosen-message attacks at each time
period in this work. We now deﬁne the bilateral security in
terms of a game between an adversary A and a challenger
C. The game proceeds in three phases.
• Setup phase. The challenger C runs the KeyGen algo-
rithm and gives the adversary A the public key P K.
The current time period is set to 0.
• Query phase.
In this phase A can issue three types
of requests in an adaptive, interactive manner (A can
repeatedly make Sign and Update queries):
{ Sign: The adversary can request the challenger to
sign a message M on the current time period j;
the challenger then returns a signature ⟨j, σ⟩ of
M .
{ Update: The adversary A can request the chal-
lenger to execute the Update algorithm, in which
case the time period is updated to the next peri-
od.
{ Break-in: The adversary A can request the chal-
lenger to hand out all the key at the current time
period.
(Unlike the deﬁnition in [5], which re-
quires the game to move to the next phase once
A makes a Break-in query. In our deﬁnition, we
allow A continuously to issue Sign query and Up-
date query, but the Break-in query is allowed only
once.)
• Forge phase. Let j be the time period at which the
adversary breaks in. The adversary produces a forgery,
∗
consisting of a time, message, signature tuple (j
,
σ
). The adversary wins if the forged signature passes
the Verify algorithm and the adversary has not queried
for signature on M
at the exact time j
, M
∗
∗
∗
∗
.
When the forge phase stops and the adversary issues a
∗
, one of the following three
valid signature at time period j
∗
cases may occur. Case i): If j
 j, the adversary generates
forward-secure. Case ii): If j
a valid signature of future time periods, which breaks the
∗
backward-secure. Case iii): If j
= j, the adversary always
can generate a valid signature of time period j, because at
525the break-in phase, the adversary gets the responsive secret
key at the time period j. Thus, in the deﬁnition of bilateral
security, we only take case i) and ii) into consideration and
ignore the last situation.
Formally, we give the following deﬁnitions: