### Cracking 400,000 Passwords

**Presenters:**
- Matt Weir
- Sudhir Aggarwal
- Florida State University

**Special Thanks:**
- Dr. Sudhir Aggarwal
- Professor Breno de Medeiros
- National Institute of Justice
- National White Collar Crime Center

**Research Objectives:**
- Assist law enforcement in developing better models for understanding how people create passwords.
- Investigate methods to enhance password security.

### Forensics and Password Cracking

**Focus:**
- This presentation will not focus on tools or trivia. For more information, visit:
  - **Research Blog:** [http://www.reusablesec.blogspot.com](http://www.reusablesec.blogspot.com)
  - **Tools Page:** [http://sites.google.com/site/reusablesec/](http://sites.google.com/site/reusablesec/)

**Avoiding Misconceptions:**
- The goal is not to claim that "passwords suck," "users are stupid," or that "we’re all doomed."

### Main Goal

**Objective:**
- To understand what a password cracking session looks like and the steps involved in cracking a password list.

### Plan

1. **Password Cracking Basics** (for CISSPs)
2. **Cracking the phpbb.com List**
3. **Cracking the webhostingtalk.com List**
4. **Breakout Room: Questions + Dealing with TrueCrypt, Passphrases, and Non-Standard Passwords**

### Password Cracking Basics

**Types of Password Cracking:**
- **Online:**
  - The system is operational.
  - Limited number of guesses allowed.
- **Offline:**
  - Password hash is obtained.
  - Common in computer forensics.

**Steps in Cracking a Password:**
1. **Create a Password Guess:**
   - Example: `password123`
2. **Hash the Guess:**
   - Example: `52F8A73082B1290`
3. **Compare it Against the Target Hash:**
   - Example: `52F8A73082B1290` vs. `82503CA693453D1`
4. **Repeat if Necessary:**
   - Make another guess, e.g., `monkey123`

### Password Salts

**Definition:**
- A value added to a password to make it harder to crack.
- Example: `MD5("bob" + "defcon")` results in `09f20200fe8131d1114581e916381d04`.

**Important Points:**
- Not secret.
- User does not need to know it.
- Should be unique per user.
- Prevents against hash lookup attacks if targeting a single user.

### Hardware Setup

**Original Setup:**
- 2.4 GHz Core Duo
- 3 GB RAM
- NVIDIA GeForce 8800 GTS

**Current Setup:**
- Due to high power consumption, the setup was adjusted.

### The phpbb.com List

**Background:**
- Development site for phpBB forum software.
- Hacked on January 14, 2009.
- List posted online in early February.

**Details:**
- 259k unsalted MD5 password hashes.
- 83k salted hashes using the phpBB3 hashing algorithm.
- Only MD5 hashes were attacked.

**Hacker's Attack:**
- Attempted to crack 117k passwords over one to two weeks.
- Cracked 28,635 passwords (24%).

**Comparison with Online Crackers:**
- Most online crackers crack 20-40% of passwords.
- Tools like MD5-utils can submit hashes to multiple sites.

### Existing Password Crackers

- **John the Ripper:**
  - Open-source.
  - Highly customizable.
  - Favorite option: `-STDIN`.
  - Ensure updates are checked for large lists.

**Cracking Results:**
- 4 hours: 38% cracked.
- 1 week: 62% cracked.
- 1 month + 1 week: 89% cracked.
- Currently: 95% total, 93% unique MD5 hashes.

**Other Results:**
- Brandon Enright: 95% MD5 hashes cracked.
- Unique hashes missed by each other.

**Statistics:**
- Average length: 7.2 characters.
- 6% contained an uppercase letter.
- 1% contained a special character.
- 51% contained only lowercase letters.

### Creating Strong Passwords

**Challenges:**
- Individuals can create strong passwords, but ensuring uniqueness across a group is difficult.

**Dictionary Attacks:**
- Use a dictionary word and apply mangling rules.
- Failure reasons: wrong word or rule.

**Choosing Dictionaries:**
- Larger dictionaries for no creation rules.
- Smaller, targeted dictionaries for enforced policies.

**Word Mangling Rules:**
- Learn from previously cracked passwords.
- JtR rules available for download.

**Probabilistic Cracking:**
- Some words and mangling rules are more common.
- Example: `password`, `monkey`, `football` with `123`, `007`, `$$$`.

**Brute Force:**
- Optimized with letter frequency analysis and Markov models.
- Used in JtR’s Incremental mode.

**Targeted Brute Force:**
- Capitalize first letter, add numbers at the end.
- Use words like “php” or “phpbb”.
- Tool: `Crunch` (check programming forum on remote-exploit.com).

### Cracking the Web Hosting Talk List

**Background:**
- Hacked on March 21, 2009.
- Over 200k salted hashes stolen.

**Response:**
- Downplayed risks, claimed passwords unbreakable.
- Compromised again on April 7th, 2009.
- 202k password hashes and 2,218 credit card numbers posted.

**User Response:**
- Only 1,348 users (0.6%) changed their passwords.

**Hashing Algorithm:**
- vBulletin: `MD5(MD5(Password).salt)`.

**Testing:**
- 1,109 users used the password “password”.
- Salt differences require individual hashing for each user.
- Time comparison: 1 hour for phpBB vs. 200,000 hours for Web Hosting Talk.

**Cracking Results:**
- 34% of passwords cracked, mostly using previously cracked lists.
- Users often reuse passwords across sites.

### Questions and Comments

- **Research Blog:** [http://www.reusablesec.blogspot.com](http://www.reusablesec.blogspot.com)
- **Tools Page:** [http://sites.google.com/site/reusablesec/](http://sites.google.com/site/reusablesec/)
- **Email Address:** PI:EMAIL

### Additional Topics (Not Covered in Presentation)

**Passphrases:**
- Limited examples.
- Use input dictionaries of phrases or a Mad Libs approach.

**Graphical Passwords:**
- ASCII art used as passwords.
- Created input dictionaries of ASCII art.

**Targeted Attacks:**
- Assign higher probabilities to personal information like kids' names, birth years, and zip codes.
- Tool: CUPP from the remote-exploit group.

**Perl Monks Statistics:**
- Average length: 7.2 characters.
- 30% contained an uppercase letter.
- 8% contained a special character.
- 40% contained only lowercase letters.