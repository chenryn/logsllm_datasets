class of security experiments and provide constraint-solving for
proving symbolic security. However, their work does not consider
rational functions.
Beyond this, prime focus of computer-aided cryptography is to
support proofs in the standard model. Prior work uses a highly
automated tool called AutoGP for proving security of several IBE
in the standard model [24]. However, we are not aware of any
prior work that uses computer-aided tools for reasoning about ABE.
It could be possible to use existing computer-aided tools such as
EasyCrypt [23] for building machine-checked proofs of security of
ABE in the standard model; however, it would be very challenging
to automate existing proofs for the composite order case, and even
more so for the prime order case.
Finally, there have been e(cid:130)orts to integrate formal veri(cid:128)cation
in tool-assisted cryptographic engineerings approaches for pairing-
based cryptography [8]. (cid:145)ere exist some similarities between our
constraint-based method for proving symbolic security and the
techniques they use. However, the goals of the two methods, and
their justi(cid:128)cation, are fundamentally di(cid:130)erent.
2 PRELIMINARIES
Here we give relevant notations and de(cid:128)nitions.
2.1 Lists
We denote by ∅ the empty list, by append(L, x) the act of adding
an element x to the list L, and for any i ∈ N, we denote by L[i] the
i’th element of the L if it exists (lists are indexed from index 1 on),
or ⊥ otherwise.
2.2 Rational fractions
Polynomials. Let p be a prime, n ∈ N. (cid:145)e set of multi-variate
polynomials over Zp with indeterminates X1, . . . , Xn is denoted by
Zp[X1, . . . , Xn]. (cid:145)e following lemma is a standard tool used for
proving security in the Generic Group Model.
Lemma 2.1 (Schwartz-Zippel). For any prime p, t ∈ N∗, any
polynomial P ∈ Zp[X1, . . . , Xt] of degree d > 0,
Pr[P((cid:174)v) = 0] ≤ d
p
,
IBE 1IPE 2CP-ABE[AC17, A14]KP-ABE [GPSW06]Unbounded KP-ABE [RW13]Unbounded CP-ABE [RW13]IBE 2 [BB04]IPE 1 [KSW08]Single-Key Symbolic secure ABEThm. 4.1Many-Key Symbolic secure ABEThm. 3.3GGM secure ABECompactKP-ABESession C4:  From Verification to ABECCS’17, October 30-November 3, 2017, Dallas, TX, USA649where the probability is taken over (cid:174)v ←r Zt
p.
For a polynomial P ∈ Zp[X] and a formal variable Y, we write
P[X → Y] to denote the polynomial in Zp[Y] where X is replaced
by Y. We generalize this notation for multivariate polynomials.
❕
Rational fractions. Let p be a prime, n ∈ N. A rational fraction
is a pair (f , ❕) ∈ Zp[X1, . . . , Xn] × Zp[X1, . . . , Xn]∗. We use f /❕
to denote the rational fraction (f , ❕) and we use f to denote f /1.
For any (cid:174)x ∈ Zn
❕((cid:174)x) = ⊥. We
de(cid:128)ne for all v ∈ Zp, ⊥ + v = v + ⊥ = ⊥, and v · ⊥ = ⊥ · v = ⊥.
We de(cid:128)ne the degree of a rational fraction f /❕ as deg(f /❕) :=
max{deg(f ), deg(❕)}, where deg(f ) and deg(❕) denote the degree
of polynomials f and ❕, respectively.
p such that ❕((cid:174)x) = 0, we denote f ((cid:174)x)
+ f (cid:48)· (cid:98)❕
❕(cid:48))/(cid:98)❕, where(cid:98)❕ = lcm(❕, ❕(cid:48))
Equivalence relation. We de(cid:128)ne an equivalence relation ∼rf be-
tween rational fractions by the clause f /❕ ∼rf f (cid:48)/❕(cid:48) i(cid:130) f ·❕(cid:48) = f (cid:48)·❕,
where f /❕ and f (cid:48)/❕(cid:48) are arbitrary rational fractions.
• Addition: f /❕ +rf f (cid:48)/❕(cid:48) := (f ·(cid:98)❕
Operators. For any two rational fractions f /❕, f (cid:48)/❕(cid:48), we de(cid:128)ne
denotes the least common multiple of polynomials ❕ and ❕(cid:48). Note
that deg(f /❕ +rf f (cid:48)/❕(cid:48)) ≤ deg(f /❕) + deg(f (cid:48)/❕(cid:48)).
• Scalar multiplication: for any α ∈ Zp, and rational fraction f /❕,
α · (f /❕) := (α · f )/❕.
• Product: f /❕ ·rf f (cid:48)/❕(cid:48) as (f · f (cid:48))/(❕ · ❕(cid:48)).
Note that the set of rational fractions equipped with addition, scalar
rf
multiplication and product is an algebra over Zp. In particular,
rational fractions verify the associative property with +rf, we write
i∈[n] αi · fi/❕i := α1 · f1/❕1 +rf . . . +rf αn · fn/❕n, for α1, . . . , αn ∈
Zp, and rational fractions f1/❕1, . . . , fn/❕n. (cid:145)is is called a linear
combination of the rational fractions f1/❕1, . . . , fn/❕n. For any
set of rational fractions Γ, we denote by (cid:104)Γ(cid:105) the set of all linear
combinations of rational fractions in Γ.
For any set of formal variables S and S(cid:48), f /❕ ∈ Zp[S], and f (cid:48)/❕(cid:48) ∈
Zp[S(cid:48)], we naturally extend the operators f /❕ +rf f (cid:48)/❕(cid:48) and f /❕ ·rf
f (cid:48)/❕(cid:48) to obtain rational fractions in Zp[S ∪ S(cid:48)].
2.3 Pairing groups
Let GGen be a probabilistic polynomial time (PPT) algorithm that
on input the security parameter 1λ, returns a description PG =
(p, G1, G2, ❕1, ❕2, GT , e) of pairing groups where G1, G2, GT are
cyclic group of order p for a 2λ-bit prime p, ❕1, ❕2 are generators
of G1, G2, respectively, and e : G1 × G2 → GT is an e(cid:129)ciently
computable (non-degenerate) bilinear map. De(cid:128)ne ❕T := e(❕1, ❕2),
which is a generator of GT . We use implicit representation of
group elements: for a ∈ Zp, de(cid:128)ne [a]s = ❕a
s ∈ Gs as the implicit
representation of a in Gs, for s ∈ {1, 2,T}. Given [a]1 and [b]2,
one can e(cid:129)ciently compute [ab]T using the pairing e. For any
s ∈ {1, 2,T}, we adopt the convention [⊥]s = ⊥.
2.4 Attribute-Based Encryption
We recall the de(cid:128)nition of A(cid:139)ribute Based Encryption (in short:
ABE) from [58] for predicate P : X × Y → {0, 1}. It consists of the
the following PPT algorithms:
• Setup(1λ,X,Y) → (mpk, msk). (cid:145)e setup algorithm gets as
input the security parameter 1λ, the a(cid:139)ribute universe X, the
predicate universe Y. It outputs a master secret key msk and a
master public key mpk, which de(cid:128)nes a key space K.
• Enc(mpk, x) → (ctx , κ). (cid:145)e encryption algorithm gets as input
mpk and an a(cid:139)ribute x ∈ X. It outputs a ciphertext ctx and a
symmetric encryption key κ ∈ K.
• KeyGen(mpk, msk, y) → sky. (cid:145)e key generation algorithm gets
as input mpk, msk and a value y ∈ Y. It outputs the secret key:
sky.
• Dec(mpk, sky , ctx , x) → κ. (cid:145)e decryption algorithm gets as
input sky and ctx such that P(x, y) = 1. It outputs a symmetric
key κ.
Correctness. For all x ∈ X, y ∈ Y such that P(x, y) = 1,
Pr[Dec(mpk, sky , ctx , x) = κ] = 1 − negl(λ),
where the probability is taken over (msk, mpk) ← Setup(1λ,X,Y),
(cts , κ) ← Enc(mpk, x), and sky ← KeyGen(mpk, msk, y).
Adaptive Security. For any stateful adversary A, A(cid:139)ribute Based
Encryption ABE, and security parameter λ, we de(cid:128)ne the advantage
function:
AdvABEA (λ) :=
Pr
(cid:48) = β :
β
(mpk, msk) ← Setup(1λ,X,Y,M)
(x(cid:63)) ← AKeyGen(msk,·)(mpk)
(ctx (cid:63) , κ) ← Enc(mpk, x(cid:63))
β ←r {0, 1}; K0 := κ; K1 ←r K
β(cid:48) ← AKeyGen(msk,·)(ctx (cid:63) , Kβ)
 − 1
2
with the restriction that all queries y that A makes to
KeyGen(msk,·) must satisfy P(x(cid:63), y) = 0 (that is, the secret keys
cannot decrypt the challenge ciphertext). ABE is adaptively secure if
for all PPT adversaries A and security parameter λ, the advantage
AdvABEA (λ) = negl(λ).
3 RATIONAL-FRACTION INDUCED ABE
In this section we de(cid:128)ne a special class of so called Rational-Fraction
Induced ABE (RFI-ABE), that captures all previous dual system ABE,
but also allows inversion in the exponent, thereby capturing ABE’s
that fall out of the scope of dual system encryption, most notably
the IBE from [64], as well as new ABE described in Section 5.
We prove the adaptive security of RFI-ABE in the generic group
model, where it is assumed that no a(cid:139)ack can make use of the
algebraic structure of the particular bilinear group that is used.
As it is common in the literature, we prove security in two steps.
First, we prove a Master (cid:145)eorem ((cid:145)eorem 3.3) that bounds the
probability of distinguishing between the generic and the symbolic
models. Second (Lemma 3.2), we show that the advantage of any
adversary in the symbolic model is zero, provided some algebraic
condition on the ABE is satis(cid:128)ed (this condition is de(cid:128)ned as the
symbolic security of the ABE). For the sake of simplicity, our Master
(cid:145)eorem is specialized to capture the security experiment of RFI-
ABE, however, it can be generalized to capture more general security
games1.
1Note that a more general master theorem could require a looser bound.
Session C4:  From Verification to ABECCS’17, October 30-November 3, 2017, Dallas, TX, USA650More precisely, we adopt the generic model by Maurer [51], where
a third party implements the group and gives access to the adversary
via handles, providing also equality checking. In the symbolic model,
however, the third party does not implement an actual group, but
keeps track of abstract expressions2.
p , α ←r Zp
Setup(1λ,X,Y):
PG ← GGen(1λ); (cid:174)b ←r Zn
Outputs msk := ((cid:174)b, α), mpk := ([(cid:174)b]1,[α]T ) ∈ Gn1 × GT .
Enc(mpk, x ∈ X):
(cid:174)c((cid:174)S, (cid:174)B) ← sE(x), (cid:174)s
ctx := [(cid:174)c((cid:174)b,(cid:174)s)]1 ∈ G|ctx |
1
KeyGen(mpk, msk, y ∈ Y):
(cid:174)k((cid:174)R, (cid:174)B, A) ← rE(y), (cid:174)r ←r Zm
|sky |
2
Dec(mpk, ctx := [(cid:174)c]1, sky := [(cid:174)k]2):
E ← Pair(x, y). Outputs [(cid:174)c(cid:62)E(cid:174)k]T .
:= (s0, . . . , sw1) ←r Zw1+1
, κ := [αs0]T ∈ GT .
G
p
.
p . Outputs sky := [(cid:174)k((cid:174)b, (cid:174)r)]2 ∈
. Outputs
Figure 2: (p, n, sE, rE, Pair)-RFI ABE.
RFI-ABE. Let P : X × Y → {0, 1} be predicate, p be a prime, n ∈
N and the following deterministic poly-time algorithms (rational
fractions are considered over Zp):
• sE(x) → (cid:174)c((cid:174)S, (cid:174)B). On input x ∈ X, the sender encoding algo-
rithm sE outputs a vector of polynomials (cid:174)c = (c1, . . . , c|ctx |)
in the variables (cid:174)S = (S0, . . . , Sw) and the common variables
(cid:174)B = (B1, . . . , Bn). Wlog. we assume that the polynomials do
not contain any monomial Bi or any constant term.
• rE(y) → (cid:174)k((cid:174)R, (cid:174)B, A). On input y ∈ Y, the receiver encoding algo-
rithm rE outputs a vector of rational fractions (cid:174)k = (k1, . . . , k|sky |)
in the variables (cid:174)R = (R1, . . . , Rm), A, and the common variables
(cid:174)B.
• Pair(x, y) → E. On input x ∈ X, y ∈ Y, the Pair algorithm
|ctx |×|sky |
outputs a matrix E ∈ Z
p
We say an ABE is (p, n, sE, rE, Pair)-RFI if it is as described in Fig-
ure 2.
,
Degree of a RFI ABE. We de(cid:128)ne the degree of a RFI ABE as the
maximum degree over all the polynomials that can be created by
multiplying a polynomial from sE(x) with a polynomial from rE(y)
2 For example, consider an experiment where values x, y are sampled from Zp and
the adversary gets handles to ❕x and ❕y . In the generic model, the third party will
choose a group of order p, for example (Zp, +), will sample values x, y ←R Zp and
will give handles to x and y. On the other hand, in the symbolic model the sampling
won’t be performed and the third party will output handles to X and Y , where X
and Y are abstract variables. Now, if the adversary asks for equality of the elements
associated to the two handles, the answer will be negative in the symbolic model, since
abstract variable X is di(cid:130)erent from abstract variable Y , but there is a small chance
the equality check succeeds in the generic model (only when the sampling of x and y
coincides).
for any x ∈ X and y ∈ Y. (cid:145)e degree of a RFI ABE allows to
bound the probability3 of inconsistent equality check between the
generic model and the symbolic model. More formally, given a
(p, n, sE, rE, Pair)-RFI ABE, let dc := max{deg(ci)|i ∈ [|ctx |], (cid:174)c ←
sE(x), x ∈ X} and let dk := max{deg(ki)|i ∈ [|sky|], (cid:174)k ← rE(y), y ∈
Y}. (cid:145)e degree of the pair encoding is de(cid:128)ned by d = dc · dk.
Correctness. (cid:145)e following theorem gives a su(cid:129)cient condition
for a RFI-ABE to be correct according to the de(cid:128)nition of correctness
from Section 2.4.
p
y
y}y∈Yx
Theorem 3.1 (Correctness). Let ABE be a (p, n, rE, sE, Pair)-
RFI ABE for P : X × Y → {0, 1}. If for all x ∈ X, y ∈ Y such
that P(x, y) = 1, (cid:174)c(cid:62)E(cid:174)k ∼rf AS0, where (cid:174)c = sE(x), (cid:174)k = rE(y),
E = Pair(x, y), then, ABE is correct, that is, for all x ∈ X, y ∈ Y,
Pr[Dec(mpk, sky , ctx) (cid:44) κ] ≤ d |sky |
, where d is the degree of ABE.
Symbolic security. We present an algebraic condition on RFI ABE
that is su(cid:129)cient to make it secure in the generic group model, as
shown in Lemma 3.2 and (cid:145)eorem 3.3.

We say a (p, n, sE, rE, Pair)-RFI ABE is symbolically secure
if for all x ∈ X, there does not exist {E∗
such that
(cid:174)ky((cid:174)Ry , (cid:174)B, A) ∼rf AS0, where (cid:174)c((cid:174)S, (cid:174)B) = sE(x),
y∈Yx (cid:174)c((cid:174)S, (cid:174)B)(cid:62)E∗
Yx ⊆ Y is the set of all y ∈ Y such that P(x, y) = 0, and for all
y ∈ Yx , (cid:174)Ry := (Ry,1, . . . , Ry,m1), (cid:174)ky((cid:174)Ry , (cid:174)B, A) := rE(y)((cid:174)R → (cid:174)Ry).
We show in the following lemma that the symbolic security
above implies a seemingly stronger security notion, which allows
to go from security in the private-key se(cid:139)ing, to a public key se(cid:139)ing.
Lemma 3.2 (From public to private key). Let ABE be a

(p, n, sE, rE, Pair)-RFI ABE. (cid:140)e symbolic security of ABE implies that
for all x ∈ X, there does not exist {E∗
and γ ∈ Zp such that
(cid:174)ky((cid:174)Ry , (cid:174)B, A) + γ A ∼rf AS0 where (cid:174)c((cid:174)S, (cid:174)B) =
y∈Yx ((cid:174)B, (cid:174)c((cid:174)S, (cid:174)B))(cid:62)E∗
sE(x), Yx ⊆ Y is the set of all y ∈ Y such that P(x, y) = 0, and for
all y ∈ Yx , (cid:174)Ry := (Ry,1, . . . , Ry,m1), (cid:174)ky((cid:174)Ry , (cid:174)B, A) := rE(y)((cid:174)R → (cid:174)Ry).
a
Security in the
(p, n, sE, rE, Pair)-RFI ABE for P : X × Y → {0, 1}, and A
be an adversary. For xxx ∈ {GGM, SM}, we de(cid:128)ne the experiments
Expxxx
ABE(1λ, A) in Figure 3. We de(cid:128)ne the advantages:
generic group model. Let ABE be
y}y∈Yx
y
(cid:12)(cid:12)(cid:12)(cid:12)1
2 − Pr(cid:104)
ABE(1λ, A) → 1)(cid:105)(cid:12)(cid:12)(cid:12)(cid:12) .
Expxxx
Advxxx
ABE,A(λ) :=
We say ABE is adaptively secure in the generic group model if for
ABE,A(λ) = negl(λ).
all PPT adversaries A: AdvGGM
Very roughly, experiment Expxxx(1λ, A) is the security game
where adversary A is trying to break the ABE