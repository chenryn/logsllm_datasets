外，具有数据库用户名和密码的攻击者可能连接到数据库并查询数据，或者拦截日志主机和
日志主机的账户。
只用于收集和检查日志数据，你可以将日志主机上的账户限制在需要访问日志数据或者管理
下配置：
网络上的主机仍然可以向其发送日志，详见第6章。
数据库服务器应该被看作和日志主机一样关键，并以相同的方式保护。数据库连接应该
Postgresql有类似的访问控制，但是实现的方式不同。主机和用户的访问控制被放人文
大部分数据库都提供数据库访问的某些控制方法，可以通过主机和用户限制。mysql使
将日志放入数据库中有许多方法。所有数据库都支持直接网络连接，使用不同的身份认
对于某些环境，
这里的192.168.3.2是日志主机的IP地址，192.168.3.5是分析系统的地址。还要注意，
hostss11ogdb1ogwriter 192.168.3.2/32password
mysqI>GRANT INSERT,UPDATE PRIVILEGES ONlogdb TO
mySq1>GRANT ALL PRIVILEGESON db.*TO
存储日志的数据库是机密性攻击的另一个向量。保护日志主机的相同问题也适用。此
hostss1 1ogdb 1ogreader 192.168.3.5/32 password
上述例子允许用户logwriter写入数据库，
mysql> GRANT SELECTPRIVILEGES ON 1ogdb TO Togreader@analsysis-station.
4.日志存储的机密性
PI:EMAIL;
example.com;
someuser@'10.1.2.0/255.255.255.0':
隐藏的日志主机可能更为必要。
，只能从日志主机上进行。另一个用户logreader
，隐藏的日志主机在网络上不可见，但是
---
## Page 262
务器，从本地加载。
户对数据库能进行何种操作：
我们选择了一个访问方法，使用SSL加密数据流。然后，SQLGRANT命令用于控制每个用
可能有影响。攻击者如果可以说明日志不能免遭破坏，就可以声称日志是伪造的，不能作为
本不存在的问题。另一种技术是显示同一网络上的另一个主机发起的虚假攻击。
他们忽视攻击者的活动。例如，攻击者可能插入虚假的错误消息，使系统管理员忙于跟踪根
或者让人觉得其他人犯了错误。
像是合法的，因而不会引起注意。内部攻击者甚至可能想要修改日志，以“陷害”其他人，
击者可能只删除表示其在系统上的活动的日志消息，或者简单地修改消息，使得它们看上去
攻击者破坏数据通常是为了掩盖活动的证据。最常见的方法是删除相关的数据。更聪明的攻
17.2.3
对此我们没有技术上的解决方案。
工具的人、验证文件权限和加密流量，加以保护。
相关信息的攻击点。和数据库及日志主机一样，分析工作站应该通过将访问权限限制在使用
方法较为安全，因为攻击者无法直接通过网络攻击数据库服务器。
其不法行为的证据。
分析工作站上的读权限，但是至少不需要授予通过网络写人的权限。有些人可能认为“拉”
如果日志数据用于提供证据，能够断定日志数据的完整性，对于日志是否被接受为证据
，当然，攻击者可以在安全分析人员查看日志数据时“肩窥”，这是另一种机密性攻击。
上述的几类攻击者都想通过插人表示其他活动发生的虚假消息，分散人们的注意力，使
对日志完整性的攻击是通过重写或者插入虚假数据、删除数据，破坏真实数据的能力。
分析系统需要日志数据的访问权限，因此也是获取日志数据访问权限以及日志分析方法
这将拷贝日志主机/var/log目录中之前尚未复制的所有文件。你仍然必须决定是否允许
例如，可以使用“rsync”命令，将SSH作为传输手段，如：
admin=>GRANT INSERT,UPDATE 1ogdb T01ogwriter;
5.分析的机密性
PI:EMAIL:/var/log/*/var/1og/store/
非exportRSYNC_RSH=/usr/bin/ssh
正如我们已经提到的，如果你不打算管理数据库访问控制，可以将数据拉取到数据库服
“拉”方法的好处是数据库不一定要允许任何网络连接，消除了数据库的一个攻击向量。
Oracle用另一种机制提供类似的访问权限。
admin=>GRANTSELECT1ogdbTOlogreader;
remotehostl
对完整性的攻击
第17章对日志系统的攻击241
---
## Page 263
242
连根用户也需要额外的步骤，才能使文件再次变成可写人，这能阻止文件的“无意”覆盖。
动的职责转嫁给他人。这很容易做到：
anton能够修改存储的日志文件，他可以用“marcus”
logger程序。
释)。此外，仅附加文件阻止常规用户修改数据，甚至阻止具备文件写人权限的用户。而且
盖该文件。当然，具有根权限的用户可以重置这个属性（参见关于具有根权限的人侵者的注
句
Unix上，Windows系统上也可能进行类似的攻击（修改或者删除日志），其他平台也会受影响
往往试图提出其他人进行攻击的证据。来自多个源的日志有时候能够对此提出证明。不仅在
不是我干的，是别人干的！”的日志时，多个数据源对防抵赖也很有用。“黑客”被发现时
测到攻击者的活动，即使某些日志文件遭到修改也仍然如此。当受到指控的攻击者生成“那
志，攻击者必须修改它才能有效地隐藏自己的痕迹。多组日志和多个日志信息来源更容易检
修改。
例如，假定系统上的用户“anton”正在做坏事，
生成虚假日志消息是难以缓解的问题。创建消息相当简单，例如，人们可以轻松地使用
在支持扩展属性的Unix系统之上，日志文件可以设置为“仅附加”，避免普通用户覆
较新的Windows版本（如Windows2008和Windows7）使得这种攻击更加困难。
这只需要少量编程。这种文件的格式有足够的文档，编写这类工具非常简单。顺便说一
%sed's/anton/marcus/g'/var/log/1ogfile.x;/bin/
和我们前面讨论的机密性问题类似，不合适的权限可能使攻击者在日志数据存储时直接
由于 syslog 机制的特性，很难抵御这类进攻。可以从系统删除日志记录器程序，但是攻
下面是来自Linux系统的一条真实的syslog消息：
此外，将日志转发到一台集中日志主机虽然不能避免这种攻击，但是创建了另一组日
可以采用和机密性中我们所讨论的相同方法验证日志数据、设备、配置文件等。
(还有一个细节，syslog守护进程必须发送一个SIGHUP信号，才能开始写人到新日志文件)。
生成的虚假消息如下：
使用Unix和Linux系统上的logger标准工具，创建一条匹配原始消息的虚假消息：
Nov 11 22:41:00 ns1 named[765]:sysquery:findns error (NxDOMAIN）on
对于事件日志，攻击稍难一些，因为文件是二进制格式，需要一个工具来读取和写人文
1.源完整性
Nov 1122:45:51ns1 named[765]:sysquery:findns error (NxDOMAIN） on
mv/var/1og/1ogfile.x/var/1og/1ogfile
ns2.dac.net?
net?"
ns2.example.edu?
”替代日志中所有“anton”，将对该活
，不希望这些活动和他联系起来。如果
---
## Page 264
些，反之亦然）来避免。这可以用Unix上的arp指令完成：
syslog-sign协议提供了这种机制。另一个选项是使用安全套接字层（SSL）甚至Intermet协议
滤器，并限制日志主机接受的消息来源主机，以缓解这类攻击。
安全（IPSEC)。
量（劫持会话）。对这类基于网络的攻击，最好的防御措施是使用验证消息完整性的机制。
16进制代码。这条消息用于使系统管理员认为系统突然重启。）
使用pckit生成一条虚假syslog消息的例子：
子，注意，packit本身不是syslog 生成工具，
攻击者可以注入看上去是从网络上合法主机发送而来的伪造syslog消息。
任何确认。由于服务器接收的数据包被当成来自显而易见的发送者接受，具备网络访问权的
有办法知道它是否来自所声称的主机。而且，syslog传输是单向的；服务器不向客户端发送
由其运行setgid日志，并在日志消息中插人真实的进程名（可能还有用户名)。
户可以添加到log组。但是，我们没有实际尝试过。
日志设备组的属主改为log，这些应用程序以守护进程的身份运行于一个角色账户之下，该账
应用程序无法写入日志设备。可以创建一个用户组来访问日志设备，例如，创建log组，将
dev/log）的权限，删除所有人都可以写人的权限。当然，这样会有一些不是以根用户运行的
击者可以轻松地引人自己的拷贝。
如果这些消息完整性机制在你的网络上不可行，你可以在网络边界实施合适的防欺骗过
但是，由常规用户运行的应用程序无法记录日志。可以为日志记录器创建一个包装器，
实际上，可以创建一个受限的日志记录器程序。这包括更改日志记录套接字（通常是）
ARP欺骗可以通过强制日志主机在每个日志源上有一个条目（如果你希望考虑得周全一
具有源和目标之间网段访问权限的攻击者可以用ARP欺骗中间人攻击拦截和修改IP流
有许多程序可以生成任意的网络数据包，大部分基于libnet。packit是这种工具的一个例
角色账户是专为运行特定守护进程而创建的账户
上述命令创建一个UDP数据包，发送给IP地址172.16.110.53的514端口，似乎来自于
标准Unix syslog消息通过UDP传输。UDP数据包报头中的IP地址没有认证，所以没
2.传输中的完整性
最后，对日志定时的攻击可以看作对完整性的一种特殊而具破坏性的攻击。
这是你应该采取的措施，我们建议同时使用人站和出站过滤器，使处于一个网段上的攻击者无法伪装成在
另一个网段上或者来自外部主机
617274757020737563636565646564
0x
，它的作者将其描述为“网络审计工具”。下面是
第17章对日志系统的攻击243
---
## Page 265
攻击的影响比对单一源的攻击更大，因为日志主机收集的所有数据的完整性都受到威胁。
段上时，人们必须维护网关而非日志主机的静态条目，这会带来更大的复杂性和潜在的混乱。
你可以用如下命令查看arp缓存状态：
SSL支持需要“Oracle高级安全性”（OAS)。
Windows领域，Microsoft SQLServer（MSSQL）也可以用SSL加密连接。Oracle8和9的
SSL传输SQL命令和数据的“SQLS”，但是没有广泛应用。
章前面已经提到过）来保护。
域，我们只简单地介绍一些和保护日志数据库数据相关的挑战。
的是到达数据库的数据，后者指的是数据库存储的数据。数据库安全是一个巨大的知识领
访问规则之外，还使用一个验证数据完整性的机制。
数据空间的能力。验证网络访问保护认证证书，并且能够避免会话劫持。最佳的方法是除了
数据库原生支持加密，需要使用第三方软件。
一些，但是对于有多个位置的网站来说代价沉重。
保护存储在数据库中的数据的唯一可靠方法是数据库加密。在本书编著的时候，很少有
有些人通过串口线连接源和日志主机，避开网络拦截和修改的问题。远程攻击稍微困难
例如，最新版本的MySQL数据库（www.mysql.com）支持原生的SSL加密。
数据库给关键数据保护带来了两个挑战，“变动数据”和“静止数据”的处理。前者指
加密连接的主要挑战在于，没有HTTPS（HTTP+SSL）这样的标准化机制。现在有通过
对日志主机的完整性攻击基本上和源上的攻击一样，适用相同的保护技术。但是，这种
非arp-a"fw.example.com(10.0.0.1)at 00:10:4B:26:46:A0[ether]on
上述命令为loghost.example.com创建一个arp表条目，MAC地址为 aa:bb:cc:dd:ee:f。
非arp -s 1oghost.example.com AA:BB:CC:DD:EE:FF
对分析完整性的攻击试图动摇对分析系统准确度的信心。假阳性太多，系统就没有用
5.分析的完整性
变动数据通常通过加密从应用程序到数据库的连接，或者使用“推”日志集的方法（本
和数据库上的机密性攻击一样，适用类似的规则。限制数据库用户写人或者附加到日志
4.数据库完整性
3.日志主机的完整性
当然，人工维护arp缓存很麻烦，移动主机时会导致混乱。此外，当源和日志主机在不同网
第二行的“PERM”表示该条目已经永久性地加人到arp缓存，不会被覆盖。
PERMonetho
在
---
## Page 266
命令：
alliance）一部分的Linux蜜罐中，捕捉了一个人侵会话。这是攻击者获得根权限之后发出的
以及计算机资源。人员的时间往往是最宝贵的，时间的损失和网络断开同样是毁灭性的。
攻击向量。其他攻击则采用不同的方法，例如，导致系统崩溃，以阻止访问。
是获得系统访问权限，删除日志文件。有些可用性攻击和完整性攻击非常类似，使用相同的
17.2.4
使用SSL和合适的签名证书，以及密码控制访问。
可以通过篡改系统创建的报告、创建虚假报告或者在数据审核中劫持会话来实现。
更(包括配置文件），并定期验证软件的完整性。
用软件和修改软件的用户进行权限分离。应该采用修订控制或者用其他软件跟踪对软件的变
的权限应该限制为仅供授权用户使用，用于分析的软件也应该有合适的修改保护。考虑对使
储访问的相同规则。如果通过文件服务器，应该加固传输安全，避免会话劫持和数据流破坏。
析系统用于访问数据的方法应该有完整性保护机制。如果这种方法通过数据库，则适用于存
处。
以分析系统为目标，攻击者可以更改分析工具，使系统不能像预期那样表现。分析系统
对可用性的攻击可以视为一种拒绝服务攻击。在这种情况下，“服务”意味着人力资源
最后，用于显示数据的系统可能遭到篡改，以更改或者抑制显示给分析人员的数据。这
满足一下读者的好奇心，这个会话示例是人侵者通过OpensSSL攻击人侵受害系统，获取访问权限的结果。
假阳性削弱了对该系统捕捉任何信息的信心。下面是对分析系统完整性攻击的三个位置：
非ki7lal1syslog
对可用性的攻击旨在阻止合法用户访问数据和系统。如前所述，攻击者的常用技术之一
#1n-s~/.bash_history1dev/nu11
例如，在本书作者之一运行的作为Honeynet ResearchAlliance（http://www.honeynet.org/