# The State of Web Application Security: 2012

**Robert Rowley**  
*Security Architect, DreamHost*  
**Contact:** PI:EMAIL

## Breakdown
- **Attack Trends**
- **Attacker Motivation**
- **Auditing Backdoors**

## Trends
### Data Collection
- **Web Application Firewall (mod_security)**
  - Deployed on over 1,000,000 websites.
  - Centralized logging for comprehensive data collection.

### Trend Data Sets
- **26 Million Records**
  - Time Frame: August 2011 â€“ Present

## Attacks
### Specific Attacks Against Software
- **E107 (CVE-2009-2254)**
  - **Type:** Remote Code Execution
  - **Vulnerability:** `?var=[php]exec();`
  - **Release Date:** May 2010 (CVE-2010-2099)
- **ZenCart (CVE-2009-2254)**
  - **Type:** SQL Injection/Execution
  - **Release Date:** May 2009 (CVE-2009-2254)

### timthumb
- **Issue:** Allows arbitrary file upload, including fully functional PHP files.
- **Component:** Popular WordPress theme component (not part of WordPress core or plugins).
- **Release Date:** August 2011 (CVE-2011-4106)

### Life Cycle of an Exploit
- **Stages:** Puberty, Maturity
- **Theory:** 
  - Attacks are automated with a lead time for attack code updates.
  - Successful compromises add new nodes, creating fluctuations in growth.

### PHP-CGI Remote Code Execution (CVE-2012-1823)
- **Types of Exploits:**
  - Arbitrary code execution
  - Source code disclosure
  - Denial of service
- **Release Date:** May 2012
- **Response:** Our staff was notified, and we rolled out a virtual patch before the 0-day exploit was released.

## Attack Response
- **Notify the ISP's Abuse Desk**
  - **Daily Notifications:** 90 ISPs
  - **Response Rate:** Most are non-responsive.

### Attack Sources
- **Home/Business ISP:** 20%
- **Hosting/Datacenter:** 80%

### Incident Response
- **Immediate Mitigation:**
  - Put out the fire
  - Monitor
  - Review
- **Long-Term Fixes:**
  - Correct business policy
  - Secure code and/or configurations

### Standard Approach
- **Monitoring**
- **Vulnerability Released**
- **Incident**
- **Assessment**
- **Incident Response**
- **Evaluation**
- **Update**

### Better Approach
- **Monitoring**
- **Vulnerability Released**
- **Incident**
- **Assessment**
- **Incident Response**
- **Evaluation**
- **Update**

## Auditing
### File Monitoring
- **Best Practices:**
  - Use `rsync` for backups
  - Inotify (kernel level)
  - Tripwire (daemon/service)
  - DIY solutions

### Log Analysis
- **Timestamp Correlation:**
  - Example:
    ```bash
    $ ls -la omgfire.com/backdoor.php
    -rw-rw-r-- 1 user grp 0 Feb 13 21:52 omgfire.com/backdoor.php
    $ grep 21:52: logs/omgfire.com/access.log.2012-02-13
    123.125.71.31 - - [13/Feb/2012:21:52:53 -0800] "POST /wp-content/plugins/hello.php HTTP/1.1" 200 158 "-" "Mozilla"
    ```
- **HTTP Logs:**
  - Example:
    ```bash
    $ awk '{print $7}' access.log | sort | uniq -c | sort -n
      1 /phpMyAdmin-2.2.3/index.php
      1 /phpMyAdmin-2.5.5-pl1/index.php
      1 /phpMyAdmin-2.5.5/index.php
      1 /phpMyAdmin-2.5.6-rc2/index.php
      1 /phpMyAdmin/index.php
      1 /pma/index.php
      1 /web/phpMyAdmin/index.php
      1 /websql/index.php
      2 /phpmyadmin/index.php
      4 /robots.txt
     242 /
    ```

### Backdoor Auditing
- **Finding Backdoors:**
  - Use `find` command on Linux/Unix servers.
  - Generic fingerprints: `eval`, `preg_replace`, `exec`, `assert`.
  - Known backdoors: Use specific fingerprints.
- **Cleanup:**
  - Remove or modify malicious code using `find` and `grep`.

## Attacker Motivation
- **Exploitation:**
  - Install backdoors
  - Sell access to backdoors on the black market
  - Phishing
  - Spam
  - BlackHat SEO
  - Traffic theft
  - Install more backdoors

### Payday
- **Phishing:** Identity/password theft
- **Spam:** Commonly known
- **BlackHat SEO:** Hidden links injected on site, redirect visitors
- **Traffic Theft:** Redirect site traffic to malicious pages (e.g., Flashback trojan)
- **Backdoor Installation:** Continuous backdoor installation

### Example .htaccess Infection
- **Infection:**
  ```apache
  ErrorDocument 404 http://congatarcxisi.ru/
  RewriteCond %{HTTP_REFERER} ^.*(google|yahoo|...)
  RewriteRule ^(.*)$ http://congatarcxisi.ru/ [R=301,L]
  ```
- **Data Collection:**
  - 1000 unique domains found.
  - SiteCheck Report: Safe (2%), Low Risk (29%), Malicious (31%), Unknown (38%).
  - TLDs: `.ru` (64%), `.com` (14%), `.info` (8%), `.in` (8%), `.org` (3%), `.net` (2%), other (1%).
  - Registrars: Reg.ru (50%), Directi (18%), Other (18%), GoDaddy (13%).
  - IP Addresses: Various, with 208.87.35.103 (22%) being the most common.

## Backdoor Evolution
- **Techniques:**
  - Plaintext
  - Base64 decode
  - Preg_replace
  - GZinflate
  - Regex revenge
  - Variables as functions

### Examples
- **Base64 Decode:**
  ```php
  eval(base64_decode('JGF1dGhfcGFzcyA9IC...'));
  ```
- **Regex Revenge:**
  ```php
  preg_replace("/.*/e","\x65\x76\x61\x6C\x28\x67...");
  ```
- **Variables as Functions:**
  ```php
  $HixNlV='as';$eQovrf='e';$xsEWcg=$HixNlV.'s'.$eQovrf.'r'.'t';$HtJYXB='b'.$HixNlV.$eQovrf.(64).'_'.'d'.$eQovrf.'c'.'o'.'d'.$eQovrf;
  @$xsEWcg(@$HtJYXB('ZXZhbChnemluZm...'));
  ```

## Conclusions
- **Attackers are evolving their code.**
- **Fingerprinting can be untrustworthy.**
- **Monitor your filesystem regularly.**

## Thank You
- **Trustwave (mod_security)**
- **DreamHost & DreamHost Customers**
- **White Hat Security Researchers**
- **OWASP**
- **Security BSides**
- **HITcon**

## Further Reading
- **Mikko Hypponen (TED talks)**
- **SpiderLabs Blog: http://blog.spiderlabs.com**
- **DreamHost Blog: http://blog.dreamhost.com/category/security**

**Contact:**
- **Email:** PI:EMAIL
- **Twitter:** @iamlei