1,015
1,325
40
Starlink
Kuiper
Telesat
𝑆𝑎𝑡𝑠/𝑜𝑟𝑏𝑖𝑡
22
50
50
75
75
34
36
28
13
33
𝑖
53°
53.8°
74°
81°
70°
51.9°
42°
33°
98.98°
50.88°
Table 1: Shell configurations for Starlink’s first phase of deployment,
Kuiper, and Telesat. We shall frequently refer to the first shell for each
constellation, S1, K1, and T1, in the text.
coverage issue will be addressed by the higher inclination shells, S3-
S5. SpaceX’s stated plan is to deploy more than 42,000 satellites, but
it is unclear how much of this is posturing to secure spectrum [34].
Amazon Kuiper: Kuiper plans three shells, with a total of 3,236
satellites at slightly different operating heights [47–49]. Kuiper
entirely eschews connectivity near the poles, with all its shells hav-
ing inclinations under 52°. The FCC filings mention a few possible
values of 𝑙: “20(min)/30/35/45” [47].
Telesat: Telesat plans two shells with a total of 1,671 satellites [73],
roughly a fifth of which will cover the higher latitudes, using an
inclination of 98.98°, with the rest focused on improving capacity
at lower latitudes. Telesat plans 𝑙 = 10°, but the feasibility of this
is unclear — unlike Starlink and Kuiper, whose filings detail how
to address beam contour and antenna gain changes for 𝑙 ≥ 25°,
Telesat’s filings thus far omit such information.
2.3 Unique dynamics of LEO networks
A satellite’s height, ℎ, determines its orbital velocity, and thus,
orbital period [56]. At ℎ = 550 km, the orbital velocity is more than
27,000 km/hr, and satellites complete an orbit around the Earth in
∼100 minutes [6]. As satellites travel fast across GSes, GS-satellite
links can only be maintained for a few minutes, after which they
require a handoff. ISLs also continuously change in length. The
Earth’s shape and orbital geometry results in satellites coming
closer at higher latitudes. This results in a continuous change in
their relative positions and hence the ISL lengths and latencies.
The end-end path between two GSes thus changes both in terms
of which satellites are involved, and in terms of the lengths of both
the GS-satellite links and the ISLs.
Mobility is, of course, well-studied in a variety of contexts, in-
cluding cellular networks, high-speed trains, drones and airplanes,
and swarms of mobile nodes. For many of these settings, there
are also models of mobility, together with simulation and analysis
infrastructure. However, LEO satellite mobility is unique for several
reasons:
• LEO mobility features much larger distances and velocities
than terrestrial mobile networks.
itself is mobile, rather than just the end-points.
• Unlike most other settings, LEO networks’ core infrastructure
• LEO mobility is predictable; this is not the case for the most
well-studied setting, cellular networks.
• LEO networks feature thousands of network switches (satel-
lites) capable of providing Tbps of connectivity. This scale is
far beyond other networked swarms.
Each previously well-studied setting features one or two of the
above characteristics, but not all of them. For instance, trains, and
to a lesser extent, airplanes, also feature predictable motion, but
none of the other characteristics.
2.4 Large LEO networks need new research
Commercial satellite networks already provide varied network ser-
vices. HughesNet [35] and Viasat [76] primarily serve areas poorly
connected by terrestrial fiber, as well as aircrafts and ships. These
are both GEO satellite constellations, and operating at 35,786 km,
they incur hundreds of milliseconds of latency. Besides, their per-
formance and service goals being different, their GEO satellites
are, by definition, stationary with respect to the Earth, and thus do
not feature LEO dynamics. Iridium [36, 37] operates in LEO, but
primarily offers satellite telephony rather than broadband Internet.
Iridium, with 82 satellites in operation, is the largest of the networks
that pre-date the new LEO mega-constellations.
Thus, no prior networks have all the features of the new LEO
networks, the largest of which are planned to operate thousands
of satellites instead of tens, and provide mass market low-latency
broadband Internet, rather than niche services. One of the upcom-
ing constellations, Starlink, already has more than 400 satellites
operational, and expects a public launch of their service as soon as
2020 [16, 23]. Over the long-term, such networks have the potential
to fundamentally change the Internet, making it crucial for research
to keep pace with the hectic pace of industry developments.
The networking community, recognizing this need, is indeed
ramping up research in this direction. While there is a large body or
earlier work from the 1990s on GEO and small LEO networks [2, 4,
14, 15, 18, 24, 43, 50, 53, 71, 78–80, 82], several position papers [5, 29,
44] have highlighted the new opportunities and challenges of mega-
constellations, e.g., in intra-constellation routing [29] and inter-
domain routing [44], and end-end congestion control [5]. Followup
work has since laid out novel proposals for topology design [6] and
Internet inter-domain routing [26] in this context.
2.5 We are missing the right analysis tools
Unfortunately, the networking community lacks the right tools to
attack many of the LEO networking challenges recent work has
pointed out. We need software to simulate the behavior of such
networks, so that we can deeply understand the problems, and new
research ideas can be evaluated. Understanding the packet-level
behavior of a network is obviously important for congestion control
research, but ultimately, practitioners also want to evaluate routing
and topology work in terms of how it impacts network packets, e.g.,
do some routing schemes cause more packet reordering, and thus,
ultimately result in poor performance?
IMC ’20, October 27–29, 2020, Virtual Event, USA
Kassing and Bhattacherjee et al.
Unfortunately, there is no simulator that fully addresses these
needs. SNS3 [65] models GEO satellite communication channels,
but does not support LEO satellites or inter-satellite connectivity.
Another simulation effort [33] focused on the polar constellations
of interest in the nineties, and the problems of interest therein, e.g.,
connectivity across “seams” that result from satellites traveling
northward in one (longitudinal) hemisphere and southward in the
other. While we could have extended this work for our study of
modern LEO networks, we based Hypatia on the ns-3 platform to
benefit from its more active development and support. Note that
this prior work also did not analyze congestion control and traffic
engineering, nor did it provide visualizations beyond the below-
discussed SaVi tool [81]. A satellite mobility model is available for
ns-3 [61], which can convert satellite trajectories in a specific format
into a coordinate system compatible with ns-3. This capability
is useful, and we build on it by adding models for inter-satellite
and GS-satellite connections. Recent work on LEO inter-satellite
topologies [6] evaluated topologies only in terms of path hop-counts
and distances, not packet simulations. Likewise, work on inter-
domain routing [26] only modeled the network control messages
and path distances. Another effort [21] estimates the throughput
of new LEO networks using statistical methods, and minimizes
the number of GSes needed to support the throughput. It does not
account for network routing and transport dynamics.
We also need visualizations that help build sorely missing in-
tuition for these new networks. While there are many beautiful
visualizations, at least for Starlink [12, 22, 30, 32], most of these do
not focus on networking concepts such as the evolution of paths, uti-
lization, and congestion. The closest related work [29, 30] does not
simulate packet-level behavior, and does not provide source code
for its path-granularity computations or visualizations. NASA’s
GMAT [57] can be used to visualize trajectories of objects in space;
SaVi [81] can additionally render coverage of a satellite. However,
neither provides the ability to define the topology, model network
links, or run network-centric measurements.
While we expect that eventually the community will collect
measurements from real clients on LEO networks, this will not
alleviate the need for simulation and analysis tools. For a variety of
network contexts, such tools continue to be valuable to understand
existing phenomena, and to devise novel, hard-to-evaluate-in-the-
wild techniques.
3 HYPATIA ARCHITECTURE
To address the urgent need for tools that enable research on LEO
networks, we built Hypatia. Hypatia provides a packet-level sim-
ulator that incorporates LEO dynamics, and a visualization module
to aid intuition. The packet simulator is implemented as a module
for ns-3 [60]. It takes into account satellite trajectories, coverage
constraints for GS-satellite connectivity, and the structure of inter-
satellite connectivity. It can be used to implement and evaluate
novel ideas for satellite trajectory design, inter-satellite topology,
routing, and congestion control. The visualization component uses
Cesium [13] to render views of the trajectories, GS-perspective on
overhead satellites, end-end routes, evolving link utilization, and
available bandwidth on routes.
3.1 Setting up a simulated LEO network
At its simplest, Hypatia allows users to specify satellite trajectory
parameters and ground station locations. From these, it automat-
ically generates the state of each satellite over time in a space-
industry standard data format, the GS-satellite and ISL connectivity,
and time-varying forwarding state that decides the paths packets
take. We discuss what parts users need to modify for more complex
simulations.
TLE generation: A two-line element is a standard format for rep-
resenting the trajectory of an Earth-orbiting object [41]. For exist-
ing satellites and orbital debris, NORAD [59] regularly publishes
TLEs [42]. These TLEs are an input dependency for the satellite
mobility model we build on. This arrangement has thus far sufficed
for ns-3’s limited use in this setting: studying connectivity with
one existing satellite.
However, this meant that we needed to ourselves generate TLEs
for satellites that are not yet in orbit, but for which we know orbital
parameters in terms of the Keplerian orbital elements [54] from
the FCC or ITU filings made by the operators. Table. 1 shows the
values we obtained from these filings. We only include a simplified
subset of the parameters in the table; the remaining ones can be
easily derived from the symmetries in play, e.g., only using circular
orbits [47, 68], satellites in one orbit being uniformly spaced out,
and orbits being uniformly spread across the Equator.
We built a utility that accepts Keplerian orbital elements as in-
put, and outputs TLEs in the WGS72 world geodetic system stan-
dard [25]. To test that the output TLEs specify the same constellation
as the input Keplerian orbital elements, we use pyephem, a Python
library that can generate constellations from either the Keplerian
elements or TLEs.
ISL connectivity: Hypatia implements what we believe to be a
reasonable pattern of connectivity between satellites, but modi-
fying this to support arbitrary alternative interconnects is easy.
Our default implementation draws on past literature in satellite
networking, and information in the regulatory filings of the newly
proposed constellations.
The proposed mega-constellations hint at building 4 ISLs per
satellite. Starlink’s filings [68], for example, mention 4 silicon-
carbide components, and as recent work [6, 29] notes, these are
typically components for ISLs. We thus use 4 ISLs per satellite in
our default implementation.
Further, a large body of work in satellite networking indicates a
typical connectivity pattern for a satellite with 4 ISLs: two links to
the immediate neighbors in the orbit, and two links to satellites in
adjacent orbits, forming a mesh-like network [20, 21, 29, 30, 45, 51,
52, 63, 64, 77]. Recent work [6] has called the resulting mesh-like
connectivity “+Grid”. We use +Grid as the default ISL interconnect.
Hypatia also supports constellations eschewing ISLs entirely [31];
experiments demonstrating this are included in Appendix A. Fur-
ther, alternative ISL interconnects can be trivially supported in
Hypatia, if they do not involve dynamic ISLs, i.e., with satellites
connecting to different satellites over time. This is a realistic as-
sumption in most cases: ISL setup times can be tens of seconds, so
reconfiguring ISLs dynamically is avoided [6]. Nevertheless, if such
dynamic connectivity is desired, it will require modifying Hypatia.
Exploring the “Internet from space” with Hypatia
IMC ’20, October 27–29, 2020, Virtual Event, USA
GS-satellite connectivity: We currently simulate only static GSes
with multiple parabolic antennas, not user terminals with single
phased-array antennas that can be mobile [38]. However, Hypatia
can be easily extended to model such terminals. Hypatia inherits
from ns-3 the ability to impose sophisticated models on the GS-
satellite channel, e.g., for loss. Nevertheless, Hypatia’s current
implementation makes several simplifying assumptions about the