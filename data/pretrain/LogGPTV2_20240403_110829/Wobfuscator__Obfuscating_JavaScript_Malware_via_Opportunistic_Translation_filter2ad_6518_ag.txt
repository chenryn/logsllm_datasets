Conference on Dependable Systems and Networks, DSN 2016, Toulouse,
France, June 28 - July 1, 2016.
IEEE Computer Society, 2016, pp.
455–466. [Online]. Available: https://doi.org/10.1109/DSN.2016.48
[57] A. Szanto, T. Tamm, and A. Pagnoni, “Taint tracking for webassembly,”
CoRR, vol. abs/1807.08349, 2018. [Online]. Available: http://arxiv.org/
abs/1807.08349
[58] S. Van Acker, N. Nikiforakis, L. Desmet, F. Piessens,
and
W. Joosen, “Monkey-in-the-browser: malware and vulnerabilities in
augmented browsing script markets,” in 9th ACM Symposium on
Information, Computer and Communications Security, ASIA CCS ’14,
Kyoto, Japan - June 03 - 06, 2014, S. Moriai, T. Jaeger, and
K. Sakurai, Eds. ACM, 2014, pp. 525–530. [Online]. Available:
https://doi.org/10.1145/2590296.2590311
[59] J. Wang, Y. Xue, Y. Liu, and T. H. Tan, “JSDC: A Hybrid
JavaScript Malware Detection and Classification,”
the 10th ACM Symposium on Information,
Singapore Republic of
[Online]. Available:
Approach for
in Proceedings of
Computer and Communications Security.
Singapore: ACM, Apr. 2015, pp. 109–120.
https://dl.acm.org/doi/10.1145/2714576.2714620
[60] P. Wang, S. Wang, J. Ming, Y. Jiang, and D. Wu, “Translingual
obfuscation,” in IEEE European Symposium on Security and Privacy,
EuroS&P 2016, Saarbr¨ucken, Germany, March 21-24, 2016.
IEEE,
2016, pp. 128–144. [Online]. Available: https://doi.org/10.1109/EuroSP.
2016.21
[61] P. Wang, D. Wu, Z. Chen, and T. Wei, “Field experience with obfuscating
million-user ios apps in large enterprise mobile development,” Software:
Practice and Experience, vol. 49, no. 2, pp. 252–273, 2019.
[62] W. Wang, B. Ferrell, X. Xu, K. W. Hamlen, and S. Hao, “Seismic: Se-
cure in-lined script monitors for interrupting cryptojacks,” in European
Symposium on Research in Computer Security.
Springer, 2018, pp.
122–142.
[63] Y. Wang, W.-d. Cai, and P.-c. Wei, “A deep learning approach for
detecting malicious JavaScript code: Using a deep learning approach
JavaScript-based attacks,” Security and Communication
to detect
Networks, vol. 9, no. 11, pp. 1520–1534, Jul. 2016. [Online]. Available:
https://onlinelibrary.wiley.com/doi/10.1002/sec.1441
[64] WebAssembly Community Group, “WebAssembly Specification,” 2017.
[Online]. Available: https://webassembly.github.io/spec/core/
extensions,”
[65] X. Xing, W. Meng, B. Lee, U. Weinsberg, A. Sheth, R. Perdisci,
“Understanding malvertising through ad-injecting
and W. Lee,
the 24th International
browser
Conference on World Wide Web, WWW 2015, Florence,
Italy,
May 18-22, 2015, A. Gangemi, S. Leonardi, and A. Panconesi,
Eds.
[Online]. Available: https:
//doi.org/10.1145/2736277.2741630
ACM, 2015, pp. 1286–1295.
in Proceedings of
[66] W. Xu, F. Zhang,
and S. Zhu,
“The power of obfuscation
techniques in malicious javascript code: A measurement study,” in
7th International Conference on Malicious and Unwanted Software,
MALWARE 2012, Fajardo, PR, USA, October 16-18, 2012.
IEEE
Computer Society, 2012, pp. 9–16.
[Online]. Available: https:
//doi.org/10.1109/MALWARE.2012.6461002
[67] ——, “JStill: mostly static detection of obfuscated malicious JavaScript
the third ACM conference on Data and
San Antonio,
[Online]. Available:
code,” in Proceedings of
application security and privacy - CODASPY ’13.
Texas, USA: ACM Press, 2013, p. 117.
http://dl.acm.org/citation.cfm?doid=2435349.2435364
[68] Y. Xue, J. Wang, Y. Liu, H. Xiao, J. Sun, and M. Chandramohan,
“Detection and classification of malicious JavaScript via attack behavior
modelling,” in Proceedings of the 2015 International Symposium on
Software Testing and Analysis, ser. ISSTA 2015. New York, NY,
USA: Association for Computing Machinery, Jul. 2015, pp. 48–59.
[Online]. Available: https://doi.org/10.1145/2771783.2771814
[69] I. You and K. Yim, “Malware obfuscation techniques: A brief survey,”
in 2010 International conference on broadband, wireless computing,
communication and applications.
IEEE, 2010, pp. 297–300.
[70] Zswang,
“Zswang/jfogs.”
[Online]. Available:
https://github.com/
zswang/jfogs
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:59:50 UTC from IEEE Xplore.  Restrictions apply. 
151588
APPENDIX
PRECISION OF MALWARE DETECTORS ON CODE OBFUSCATED BY WOBFUSCATOR.
TABLE VII
Technique
Cujo
Zozzle
JaSt
JStap (NGrams)
JStap (Values)
Individual transformations:
Baseline (no transformation)
Sync, T1-StringLiteral
Sync, T2-ArrayInitialization
Sync, T3-FunctionName
Sync, T4-CallExpression(a)
Sync, T4-CallExpression(b)
Sync, T5-IfStatement
Sync, T6-ForStatement
Sync, T7-WhileStatement
0.95 (5,548/5,832)
0.85 (1,623/1,907)
0.93 (4,050/4,334)
0.91 (2,780/3,064)
0.91 (3,040/3,324)
0.89 (2,385/2,669)
0.93 (3,513/3,797)
0.93 (3,877/4,161)
0.93 (3,904/4,188)
0.97 (3,598/3,694)
0.97 (3,387/3,483)
0.97 (3,593/3,689)
0.97 (3,550/3,646)
0.97 (3,507/3,603)
0.97 (3,424/3,520)
0.97 (3,505/3,601)
0.97 (3,578/3,674)
0.97 (3,598/3,694)
1.00 (5,076/5,080)
1.00 (3,393/3,397)
1.00 (4,360/4,364)
1.00 (3,512/3,516)
1.00 (1,943/1,947)
1.00 (2,253/2,257)
1.00 (4,535/4,539)
1.00 (4,720/4,724)
1.00 (4,882/4,886)
1.00 (4,483/4,484)
1.00 (1,539/1,540)
1.00 (3,890/3,891)
1.00 (2,747/2,748)
1.00 (1,723/1,724)
1.00 (1,058/1,059)
1.00 (3,717/3,718)
1.00 (3,872/3,873)
1.00 (4,410/4,411)
1.00 (4,439/4,440)
1.00 (1,839/1,840)
1.00 (4,009/4,010)
1.00 (3,463/3,464)
1.00 (3,613/3,614)
1.00 (3,369/3,370)
1.00 (4,178/4,179)
1.00 (4,360/4,361)
1.00 (4,412/4,413)
All sync (using T4(a))
All sync (using T4(b))
All async
0.59 (416/700)
0.59 (415/699)
0.84 (1,490/1,774)
0.97 (3,450/3,546)
0.97 (3,428/3,524)
0.97 (3,524/3,620)
1.00 (1,104/1,108)
1.00 (931/935)
1.00 (1,085/1,089)
0.50 (1/2)
0.00 (0/1)
0.80 (4/5)
1.00 (766/767)
1.00 (350/351)
1.00 (959/960)
Combined transformations:
PRECISION OF MALWARE DETECTORS ON CODE OBFUSCATED BY OTHER OBFUSCATORS.
TABLE VIII
Obfuscator
javascript-obfuscator
Gnirts
jfogs
JSObfu
Cujo
0.94 (4,406/4,690)
0.95 (5,548/5,832)
0.93 (3,515/3,799)
0.95 (4,994/5,278)
Zozzle
0.98 (3,807/3,903)
0.97 (3,598/3,694)
0.97 (3,584/3,680)
0.98 (4,467/4,563)
JaSt
1.00 (4,153/4,157)
1.00 (5,076/5,080)
0.87 (26/30)
1.00 (1,456/1,460)
JStap (NGrams)
1.00 (2,005/2,006)
1.00 (4,483/4,484)
0.94 (16/17)
0.95 (20/21)
JStap (Values)
1.00 (2,947/2,948)
1.00 (4,439/4,440)
1.00 (2,826/2,827)
1.00 (2,420/2,421)
MALWARE CATEGORY BREAKDOWN OF DATASETS AND DETECTOR RECALL RATES.
TABLE IX
Malware Type
Downloader
Misc
Trojan
Malware
Exploit
Ransomware
Cryptominer
Dropper
Hijacker
Riskware
Redirector
Clicker
Iframe
Clickjack
Phishing
VirusTotal
14
167
1618
0
6
12
665
0
112
21
15
25
24
13
3
Dataset Breakdown
GeeksOnSecurity
0
21
0
0
1029
0
0
323
0
0
0
0
0
0
0
HynekPetrak
21619
13527
2058
1546
0
700
0
0
0
0
0
0
0
0
0
Malware Detector Recall
Cujo
0.10(102/988)
0.35(257/731)
0.00(0/201)
0.00(0/109)
0.00(0/151)
0.00(0/56)
1.00(1/1)
0.00(0/17)
0.00(0/12)
1.00(1/1)
0.00(0/3)
-
-
-
-
Zozzle
0.67(1772/2629)
0.64(1100/1732)
0.61(305/499)
0.29(66/231)
0.00(0/151)
0.05(3/59)
0.99(68/69)
0.50(26/45)
0.94(17/18)
1.00(5/5)
0.25(1/4)
1.00(4/4)
1.00(4/4)
1.00(1/1)
-
JaSt
0.11(279/2629)
0.36(625/1732)
0.00(0/499)
0.22(51/231)
0.00(0/151)
0.00(0/3)
0.00(0/69)
0.11(5/45)
0.00(0/18)
0.00(0/5)
0.00(0/4)
0.00(0/4)
0.00(0/4)
0.00(0/1)
-
JStap (N-grams)
0.00(0/2440)
0.00(0/1082)
0.00(0/453)
0.00(0/180)
0.00(0/151)
0.00(0/56)
0.00(0/1)
0.00(0/45)
0.00(0/12)
-
0.00(0/3)
-
1.00(1/1)
-
-
JStap (Values)
0.00(2/1787)
0.06(60/1082)
0.06(25/453)
0.02(3/125)
0.00(0/151)
-
0.00(0/1)
0.00(0/45)
0.00(0/11)
-
0.00(0/3)
-
1.00(1/1)
-
-
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:59:50 UTC from IEEE Xplore.  Restrictions apply. 
161589