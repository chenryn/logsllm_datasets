between your node and the destination node. Use the tracert –d IPv6Address command to trace 
the routing path to the remote destination. The –d command line option prevents the Tracert tool 
Chapter 16 – Troubleshooting TCP/IP 
TCP/IP Fundamentals for Microsoft Windows  
Page: 478 
from performing a DNS reverse query on every near-side router interface in the routing path, which 
speeds up the display of the routing path. This step might not succeed if the intermediate routers or 
the destination are filtering all ICMPv6 messages. 
Check Packet Filtering 
The problem with reaching a destination node might be due to the configuration of Internet Protocol 
security (IPsec) or packet filtering on the source node, intermediate routers, or destination node that is 
preventing packets from being sent, forwarded, or received.  
On the source node, check for the following: 
Active connection security rules with the Windows Firewall with Advanced Security snap-in 
Active IPsec policies with the IP Security Monitor snap-in 
For computers running Windows Server 2008, Routing and Remote Access IPv6 packet filters on 
routing interfaces with the Routing and Remote Access snap-in 
IPsec for IPv6 policies that have been configured with the Ipsec6 tool. 
On intermediate IPv6 routers that are running Windows, check for the following: 
Active connection security rules with the Windows Firewall with Advanced Security snap-in 
Active IPsec policies with the IP Security Monitor snap-in 
For computers running Windows Server 2008, Routing and Remote Access IPv6 packet filters on 
routing interfaces with the Routing and Remote Access snap-in 
IPsec for IPv6 policies that have been configured with the Ipsec6 tool. 
For third-party intermediate IPv6 routers or firewalls, check for the configuration of IPv6-based packet 
filters and IPsec policies. 
On the destination node, check for the following: 
Windows Firewall 
For computers running Windows Server 2008, Routing and Remote Access IPv6 packet filters on 
routing interfaces with the Routing and Remote Access snap-in 
Active connection security rules with the Windows Firewall with Advanced Security snap-in (Windows 
Vista and Windows Server 2008) 
Active IPsec policies with the IP Security Monitor snap-in (Windows Vista and Windows Server 2008) 
IPsec for IPv6 policies that have been configured with the Ipsec6 tool 
The simple IPv6 firewall 
IPv6 for Windows Server 2003 includes support for a simple firewall on an interface. When enabled, 
IPv6 drops incoming TCP Synchronize (SYN) segments and drops all unsolicited incoming UDP 
messages. You can configure the simple firewall with the netsh interface ipv6 set interface 
interface=NameOrIndex firewall=enabled|disabled command. 
Internet Connection Firewall for IPv6 
Chapter 16 – Troubleshooting TCP/IP 
TCP/IP Fundamentals for Microsoft Windows  
Page: 479 
The Internet Connection Firewall for IPv6 is included with the Advanced Networking Pack for 
Windows XP, a free download for Windows XP with SP1. 
For more information about these packet filtering components, see Chapter 13, "Internet Protocol 
Security (IPsec) and Packet Filtering." 
View and Manage the IPv6 Routing Table 
The inability to reach a local or remote destination might be due to incorrect or missing routes in the 
IPv6 routing table. To view the IPv6 routing table, use the route print, netstat –r, or netsh interface 
ipv6 show routes commands. Verify that you have a route corresponding to your local subnet and, if 
automatically configured with a default router, a default route. If you have multiple default routes with 
the same lowest metric, you might need to modify your IPv6 router configurations so that the default 
route with the lowest metric uses the interface that connects to the network with the largest number of 
subnets. 
To add a route to the IPv6 routing table, use the netsh interface ipv6 add route command. To modify 
an existing route, use the netsh interface ipv6 set route command. To remove an existing route, use 
the netsh interface ipv6 delete route command. 
In Windows Vista and Windows Server 2008, you can use the route add, route delete, and route 
change commands to manage IPv6 routes. 
Verify Router Reliability 
If you suspect a problem with router performance, use the pathping –d IPv6Address command to trace 
the path to a destination and display information on packet losses for each router and link in the path. 
The –d command line option prevents the Pathping tool from performing a DNS reverse query on every 
near-side router interface in the routing path, which speeds up the display of the routing path. 
Verifying DNS Name Resolution for IPv6 Addresses 
If reachability using IPv6 addresses works but reachability using host names does not, you might have 
a problem with host name resolution, which is typically a problem with the configuration of the DNS 
client or problems with DNS registration.  
You can use the following tasks to troubleshoot problems with DNS name resolution: 
Verify DNS configuration 
Display and flush the DNS client resolver cache 
Test DNS name resolution with the Ping tool 
Use the Nslookup tool to view DNS server responses 
Verify DNS Configuration 
On the node having DNS name resolution problems, verify the following: 
Host name 
The primary DNS suffix 
DNS suffix search list 
Chapter 16 – Troubleshooting TCP/IP 
TCP/IP Fundamentals for Microsoft Windows  
Page: 480 
Connection-specific DNS suffixes 
DNS servers 
You can obtain this information from the display of the ipconfig /all command. To obtain information 
about which DNS names should be registered in DNS, use the netsh interface ip show dns 
command. 
By default, IPv6 configures the well-known site-local addresses of DNS servers at FEC0:0:0:FFFF::1, 
FEC0:0:0:FFFF::2, and FEC0:0:0:FFFF::3 on each interface that receives a router advertisement. To 
add the IPv6 addresses of additional DNS servers, use the netsh interface ipv6 add dns command. 
To register the appropriate DNS names as IPv6 address resource records (also known as AAAA 
resource records) with DNS dynamic update, use the ipconfig /registerdns command. 
Display and Flush the DNS Client Resolver Cache 
TCP/IP checks the DNS client resolver cache before sending DNS name queries. If a positive cache 
entry exists for a resolved name, the corresponding IPv6 address is used. If a negative cache entry for 
the name exists, DNS name queries are not sent. 
To display the contents of the DNS client resolver cache, use the ipconfig /displaydns command. To 
flush the contents of the DNS client resolver cache and reload it with the entries in the Hosts file, use 
the ipconfig /flushdns command. 
Test DNS Name Resolution with the Ping Tool 
To test DNS name resolution, use the Ping tool and ping a destination by its host name or FQDN. The 
Ping tool display shows the FQDN and its corresponding IPv6 address. 
Use the Nslookup Tool to View DNS Server Responses 
If the Ping tool is using the wrong IPv6 address, flush the DNS client resolver cache and use the 
Nslookup tool to determine the set of addresses returned in the DNS Name Query Response message. 
At the Nslookup > prompt, use the set d2 command to display the maximum amount of information 
about the DNS response messages. Then, use Nslookup to look up the desired FQDN. Look for AAAA 
records in the detailed display of the DNS response messages. 
Verifying IPv6-based TCP Connections 
If reachability and name resolution are working but you cannot establish a TCP connection with a 
destination host, use the following tasks: 
Check for packet filtering 
Verify TCP connection establishment 
Check for Packet Filtering 
As previously discussed in the "Verifying IPv6 Communications" section of this chapter, packet filtering 
by the source node, intermediate routers, and the destination node can prevent TCP connections from 
being established. Use the information in the "Verifying IPv6 Communications" section of this chapter to 
check for packet filtering or IPsec policies at the source node, intermediate routers and firewalls, and 
the destination node. 
Chapter 16 – Troubleshooting TCP/IP 
TCP/IP Fundamentals for Microsoft Windows  
Page: 481 
In many cases, packet filtering is configured to allow specific types of traffic and discard all others, or to 
discard specific types of traffic and accept all others. As an example of the former case, a firewall or 
Web server might be configured to allow only HTTP traffic and discard all other traffic destined for the 
Web server. This means that you will be able to view Web pages on the Web server, but not ping it or 
access its shared folders and files. 
Verify TCP Connection Establishment 
To verify that a TCP connection can be established using a known destination TCP port number, you 
can use the telnet IPv6Address TCPPort command. For example, to verify whether the Web server 
service on the computer with the IPv6 address of 2001:DB8::21AD:2AA:FF:FE31:AC89 is accepting 
TCP connections on TCP port 80, use the telnet 2001:db8::21ad:2aa:ff:fe31:ac89 80 command.  
If the Telnet tool can successfully create a TCP connection, the command prompt window will clear 
and, depending on the protocol, display some text. This window allows you to type in commands to the 
service to which you have connected. Type Control-C to exit the Telnet tool. If the Telnet tool cannot 
successfully create a TCP connection, it displays the message "Connecting To IPv6Address...Could not 
open connection to the host, on port TCPPort: Connect failed". 
Another tool that you can use to test TCP connection establishment is Test TCP (Ttcp). With Ttcp, you 
can both initiate TCP connections and listen for TCP connections. You can also use the Ttcp tool for 
UDP traffic. With Ttcp, you can configure a computer to listen on a specific TCP or UDP port without 
having to install the application or service on the computer. This allows you to test network connectivity 
for specific traffic before the services are in place. 
For more information about Ttcp, see Testing Network Paths for Common Types of Traffic. 
Chapter 16 – Troubleshooting TCP/IP 
TCP/IP Fundamentals for Microsoft Windows  
Page: 482 
Chapter Summary 
This chapter includes the following pieces of key information: 
To try and isolate the components that might be at fault when approaching a troubleshooting issue, you 
should determine what works, what does not work, whether it has ever worked, and what has changed 
since it last worked. 
Windows provides the following tools for troubleshooting TCP/IP problems: Arp, Hostname, Ipconfig, 
Nbtstat, Netsh, Netstat, Nslookup, Ping, Route, Tracert, Pathping, SNMP service, Event Viewer, 
Performance Logs and Alerts, Network Monitor, and Netdiag. 
Troubleshoot IPv4 communications by verifying IPv4 connectivity, DNS name resolution for IPv4 
addresses, NetBIOS name resolution, packet filtering, and IPv4-based TCP sessions. 
Troubleshoot IPv6 communications by verifying IPv6 connectivity, DNS name resolution for IPv6 
addresses, packet filtering, and IPv6-based TCP sessions. 
Chapter 16 – Troubleshooting TCP/IP 
TCP/IP Fundamentals for Microsoft Windows  
Page: 483 
Chapter Glossary 
address resolution – The IPv4 (using ARP) or IPv6 (using neighbor discovery) process that resolves the 
MAC address for a next-hop IP address on a link. 
Address Resolution Protocol – A protocol that uses broadcast traffic on the local subnet to resolve an 
IPv4 address to its MAC address.  
ARP – See Address Resolution Protocol. 
ARP cache – A table for each interface of static or dynamically resolved IPv4 addresses and their 
corresponding MAC addresses. 
default gateway – A configuration parameter for IPv4 that is the IPv4 address of a neighboring IPv4 
router. Configuring a default gateway creates a default route in the IPv4 routing table.  
default route – A route that summarizes all possible destinations and is used for forwarding when the 
routing table does not contain any other more specific routes for the destination. For example, if a 
router or sending host cannot find a subnet route, a summarized route, or a host route for the 
destination, IP selects the default route. The default route is used to simplify the configuration of hosts 
and routers. For IPv4 routing tables, the default route is the route with the network destination of 0.0.0.0 
and netmask of 0.0.0.0. For IPv6 routing tables, the default route has the address prefix ::/0. 
default router – A configuration parameter for IPv6 that is the link-local address of a neighboring IPv6 
router. Default routers are automatically configured by IPv6 router discovery.  
destination cache – A table for destination IPv6 addresses and their previously determined next-hop 
addresses. 
DNS – See Domain Name System (DNS). 
DNS client resolver cache – A RAM-based table that contains both the entries in the Hosts file and the 
results of recent DNS name queries. 
DNS server – A server that maintains a database of mappings of DNS domain names to various types 
of data, such as IP addresses. 
Domain Name System (DNS) – A hierarchical, distributed database that contains mappings of DNS 
domain names to various types of data, such as IP addresses. DNS enables the specification of 
computers and services by user-friendly names, and it also enables the discovery of other information 
stored in the database. 
Host name – The name of a computer or device on a network. Users specify computers on the network 
by their host names. To find another computer, its host name must either appear in the Hosts file or be 
known by a DNS server. For most Windows-based computers, the host name and the computer name 
are the same.  
Host name resolution – The process of resolving a host name to a destination IP address. 
Hosts file – A local text file in the same format as the 4.3 BSD UNIX /etc/hosts file. This file maps host 
names to IP addresses, and it is stored in the systemroot\System32\Drivers\Etc folder. 
Chapter 16 – Troubleshooting TCP/IP 
TCP/IP Fundamentals for Microsoft Windows  
Page: 484 
Lmhosts file – A local text file that maps NetBIOS names to IP addresses for hosts that are located on 
remote subnets. For Windows-based computers, this file is stored in the 
systemroot\System32\Drivers\Etc folder. 
negative cache entries – Host names added into the DNS client resolver cache that were queried but 
that could not be resolved. 
neighbor cache – A cache maintained by every IPv6 node that stores the on-subnet IPv6 address of a 
neighbor and its corresponding MAC address. The neighbor cache is equivalent to the ARP cache in 
IPv4. 
NBNS – See NetBIOS name server (NBNS). 
NetBIOS name - A 16-byte name of a process using NetBIOS. 
NetBIOS name cache – A dynamically maintained table that resides on a NetBIOS-enabled host and 
that stores recently resolved NetBIOS names and their associated IPv4 addresses. 
NetBIOS name resolution – The process of resolving a NetBIOS name to an IPv4 address. 
NetBIOS name server (NBNS) – A server that stores NetBIOS name to IPv4 address mappings and 
resolves NetBIOS names for NetBIOS-enabled hosts. WINS is the Microsoft implementation of a 
NetBIOS name server. 
routing table – The set of routes used to determine the next-hop address and interface for IP traffic sent 
by a host or forwarded by a router. 
Windows Internet Name Service (WINS) – The Microsoft implementation of a NetBIOS name server. 
WINS – See Windows Internet Name Service (WINS). 
Appendix A – IP Multicast 
TCP/IP Fundamentals for Microsoft Windows  
Page: 485 
Appendix A – IP Multicast 
Abstract 
This appendix describes Internet Protocol (IP) multicast for both Internet Protocol version 4 (IPv4) and Internet Protocol 
version 6 (IPv6) and its support in Microsoft Windows operating systems. IP multicast is a one-to-many delivery 
mechanism that is useful for efficiently distributing data to interested listening hosts at arbitrary locations on a private 
network or on the Internet. Network administrators must understand multicast concepts, multicast addressing and 
forwarding, multicast address allocation, and reliable multicast to effectively use and troubleshoot IP multicast traffic. 
Appendix A – IP Multicast 
TCP/IP Fundamentals for Microsoft Windows  
Page: 486 
Overview of IP Multicast 
In addition to unicast and broadcast support, IP also provides a mechanism to send and receive IP 
multicast traffic. IP multicast traffic is sent to a single destination IP address but is received and 
processed by multiple IP hosts, regardless of their location on an IP network. A host listens for a 
specific IP multicast address and receives all packets to that IP address. 
IP multicast is more efficient than IP unicast or broadcast for one-to-many delivery of data. Unlike 
unicast, only one copy of the data is sent. Unlike broadcast, the traffic is only received and processed 
by computers that are listening for it. 
The set of hosts listening on a specific IP multicast address is called a host group. A host can send 
traffic to an IP multicast address without belonging to the corresponding host group. Host group 
membership is dynamic. Hosts can join or leave the group at any time and there are no limitations to 
the size of a host group.  
A host group can span IP routers across multiple network segments. This configuration requires IP 
multicast support on IP routers and the ability for hosts to register their interest in receiving multicast 
traffic from their neighboring routers. Hosts use the Internet Group Management Protocol (IGMP) for 
IPv4 and Multicast Listener Discovery (MLD) for IPv6 for host group membership registration.  
IP Multicast-Enabled Intranet 
In an IP multicast-enabled intranet, any host can send IP multicast traffic to any group address and any 
host can receive IP multicast traffic from any group address, regardless of their location. Figure A-1 
shows an example of an IP multicast-enabled intranet. 
Figure A-1  An IP multicast-enabled intranet 
To facilitate this capability, the hosts and routers of the network must support IP multicast. 
Appendix A – IP Multicast 
TCP/IP Fundamentals for Microsoft Windows  
Page: 487 
Host Support for IP Multicast 
For a host to send IP multicast packets, it must do the following: 
Determine the IP multicast address to use.  