:::
本节介绍了根据您预期的用例，用于 UDS 索引的推荐选项。
通常，红帽建议在所有产品用例中使用 [**稀疏**]{.strong} UDS
索引。这是一个非常高效的索引数据结构，在每个块的 deduplication
窗口中需要大约 10% 的 RAM。在磁盘上，每个块大约需要 72
字节磁盘空间。这个索引的最小配置使用了 256 MB RAM，磁盘大约需要 25 GB
空间。
要使用此配置，请在 `vdo create`{.literal} 命令中指定
`--sparseIndex=enabled --indexMem=0.25`{.literal}
选项。这个配置会导致一个 deduplication 窗口 2.5 TB（也就是说它会记住 2.5
TB 的历史记录）。在大多数用例中，2.5 TB 的 deduplication
窗口适合用于重复数据删除大小为 10 TB 的存储池。
[**但是，索引的默认配置是使用密度索引**]{.strong}。该索引在 RAM
中效率大大降低（除 10 倍之多），但最小磁盘空间（同时也是 10
倍）的最小磁盘空间更低，因此在受限环境中评估更为方便。
通常，建议配置一个 VDO 卷的物理大小的 deduplication
窗口。但这不是实际要求。即便是小的重复数据删除窗口（与物理存储量相比）也可以发现许多使用案例中的大量重复数据。也可以使用较大的窗口，但多数情况下，这样做将无用。
::: itemizedlist
**其它资源**
-   请联系您的红帽大客户经理代表来获得关于调整这个重要系统参数的更多指南。
:::
:::
:::
::: section
::: titlepage
# []{#maintaining-vdo_deduplicating-and-compressing-storage.html#enabling-or-disabling-deduplication-in-vdo_maintaining-vdo}在 VDO 中启用或禁用 deduplication {.title}
:::
在某些情况下,您可能希望临时禁用写入 VDO
卷的删除重复数据功能，同时仍可保留从卷读取和写入的功能。禁用
deduplication
可防止后续写入操作被删除重复数据，但已经删除重复数据的数据会一直保留。
::: section
::: titlepage
## []{#maintaining-vdo_deduplicating-and-compressing-storage.html#deduplication-in-vdo_enabling-or-disabling-deduplication-in-vdo}VDO 中的删除重复数据 {.title}
:::
删除重复数据（Deduplication）是通过删除重复块的多个副本来减少存储资源消耗的技术。
VDO
检测每个重复块，并将其记录为对原始块的引用，而不是多次写入相同的数据。VDO
维护一个从逻辑块地址（由 VDO
上面的存储层使用）到物理块地址的映射，这些地址由 VDO 下的存储层使用。
在进行删除重复数据后，可将多个逻辑块地址映射到相同的物理块地址。这些被称为共享块。块共享对存储用户是不可见的，用户会像
VDO 不存在一样读取和写入块。
当共享块被覆盖时，VDO
为保存新块数据分配一个新的物理块，以确保映射到共享物理块的其他逻辑块地址不会被修改。
:::
::: section
::: titlepage
## []{#maintaining-vdo_deduplicating-and-compressing-storage.html#enabling-deduplication-on-a-vdo-volume_enabling-or-disabling-deduplication-in-vdo}在 VDO 卷中启用 deduplication {.title}
:::
此流程重启关联的 UDS 索引，并通知 VDO 卷再次激活了 deduplication。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
默认启用 deduplication。
:::
::: itemizedlist
**流程**
-   要在 VDO 卷中重启 deduplication，请使用以下命令：
    ``` screen
    # vdo enableDeduplication --name=my-vdo
    ```
:::
:::
::: section
::: titlepage
## []{#maintaining-vdo_deduplicating-and-compressing-storage.html#disabling-deduplication-on-a-vdo-volume_enabling-or-disabling-deduplication-in-vdo}禁用 VDO 卷上的重复数据删除 {.title}
:::
此流程停止关联的 UDS 索引，并通知 VDO 卷重复数据删除不再活跃。
::: itemizedlist
**流程**
-   要在 VDO 卷中停止重复数据删除，请使用以下命令：
    ``` screen
    # vdo disableDeduplication --name=my-vdo
    ```
-   您还可以通过在 `vdo create`{.literal} 命令中添加
    `--deduplication=disabled`{.literal} 选项，在创建新 VDO 卷时禁用
    deduplication。
:::
:::
:::
::: section
::: titlepage
# []{#maintaining-vdo_deduplicating-and-compressing-storage.html#enabling-or-disabling-compression-in-vdo_maintaining-vdo}在 VDO 中启用或禁用压缩 {.title}
:::
VDO
提供数据压缩。您可以禁用它来最大程度提高性能或加快处理不可能压缩的数据，或者重新启用它来提高空间节省。
::: section
::: titlepage
## []{#maintaining-vdo_deduplicating-and-compressing-storage.html#compression-in-vdo_enabling-or-disabling-compression-in-vdo}VDO 中的压缩 {.title}
:::
除了块级 deduplication 外，VDO 还使用 HIOPS 压缩™ 技术提供内联块级压缩。
VDO 卷压缩默认是 on。
虽然 deduplication
是虚拟机环境和备份应用程序的最佳解决方案，但压缩非常适合结构化和非结构化文件格式，通常不会显示块级冗余，如日志文件和数据库。
压缩对未识别为重复的块起作用。当 VDO
首次看到唯一数据时，它会压缩数据。已存储的数据的后续副本会复制，而无需额外的压缩步骤。
压缩功能基于一种并行化的打包算法，允许它一次处理许多压缩操作。在首先存储块并响应请求者后，最佳打包算法会找到多个块，当压缩时可以放入单个物理块。确定特定物理块不太可能保留其他压缩块后，它将被写入存储，并且解压缩块可以释放并重复使用。
在已经响应请求者后执行压缩和打包操作，使用压缩会带来最小延迟损失。
:::
::: section
::: titlepage
## []{#maintaining-vdo_deduplicating-and-compressing-storage.html#enabling-compression-on-a-vdo-volume_enabling-or-disabling-compression-in-vdo}在 VDO 卷中启用压缩 {.title}
:::
此流程启用了 VDO 卷的压缩来提高空间节能。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
默认启用压缩。
:::
::: itemizedlist
**流程**
-   要再次启动它，请使用以下命令：
    ``` screen
    # vdo enableCompression --name=my-vdo
    ```
:::
:::
::: section
::: titlepage
## []{#maintaining-vdo_deduplicating-and-compressing-storage.html#disabling-compression-on-a-vdo-volume_enabling-or-disabling-compression-in-vdo}禁用 VDO 卷上的压缩 {.title}
:::
此流程停止 VDO 卷的压缩，以最大化性能或加快对数据进行压缩的速度。
::: itemizedlist
**流程**
-   要停止在现有 VDO 卷中压缩，请使用以下命令：
    ``` screen
    # vdo disableCompression --name=my-vdo
    ```
-   另外，您可以在创建新卷时在 `vdo create`{.literal} 命令中添加
    `--compression=disabled`{.literal} 选项来禁用压缩。
:::
:::
:::
::: section
::: titlepage
# []{#maintaining-vdo_deduplicating-and-compressing-storage.html#increasing-the-size-of-a-vdo-volume_maintaining-vdo}增大 VDO 卷的大小 {.title}
:::
您可以增大 VDO
卷的物理大小，以利用更多的底层存储容量，或者逻辑大小来为卷提供更多容量。
::: section
::: titlepage
## []{#maintaining-vdo_deduplicating-and-compressing-storage.html#the-physical-and-logical-size-of-a-vdo-volume_increasing-the-size-of-a-vdo-volume}VDO 卷的物理和逻辑大小 {.title}
:::
这部分论述了 VDO 可以使用的物理大小、可用物理大小和逻辑大小。
::: variablelist
[物理大小]{.term}
:   这与底层块设备的大小相同。VDO 使用这个存储用于：
    ::: itemizedlist
    -   用户数据，这些数据可能会进行重复数据删除和压缩
    -   VDO 元数据，如 UDS 索引
    :::
[可用物理大小]{.term}
:   这是 VDO 可用于用户数据的物理大小的一部分
    它等同于物理大小减去元数据的大小，再减去将卷根据指定的 slab
    的大小分为 slab 后剩余的值。
[逻辑大小]{.term}
:   这是 VDO
    卷在应用程序中的置备大小。它通常大于可用的物理大小。如果没有指定
    `--vdoLogicalSize`{.literal} 选项，则逻辑卷的调配现在被置备为
    `1:1`{.literal} 比率。例如，如果将 VDO 卷放在 20GB 块设备之上，则为
    UDS 索引保留 2.5 GB（如果使用默认索引大小）。剩余的 17.5 GB 为 VDO
    元数据和用户数据提供。因此，要消耗的可用存储不超过 17.5
    GB，且可能会因为组成实际 VDO 卷的元数据而减少。
    VDO 目前支持任意逻辑卷大小最多为物理卷的 254 倍，但不能超过 4PB。
:::
::: figure
[]{#maintaining-vdo_deduplicating-and-compressing-storage.html#idm139672009653040}
**图 2.3. VDO 磁盘机构**
::: figure-contents
::: mediaobject
![VDO 磁盘机构](images/vdo-disk-organization.png)
:::
:::
:::
在这个图表中，VDO 重复数据删除存储对象完全位于块设备之上，这意味着 VDO
卷的物理大小与基本块设备大小相同。
::: itemizedlist
**其它资源**
-   有关不同大小的块设备中存储 VDO 元数据数量的更多信息，请参阅 ["VDO
    物理大小要求示例"一节](#deploying-vdo_deduplicating-and-compressing-storage.html#examples-of-vdo-requirements-by-physical-size_vdo-requirements "VDO 物理大小要求示例"){.xref}。
:::
:::
::: section
::: titlepage
## []{#maintaining-vdo_deduplicating-and-compressing-storage.html#thin-provisioning-in-vdo_increasing-the-size-of-a-vdo-volume}VDO 中的精简置备 {.title}
:::
VDO 是一个精简配置的块存储目标。VDO
卷使用的物理空间量可能与为存储用户显示的卷大小有所不同。您可以使用它来节约存储成本。
::: title
**没有可用空间条件**
:::
如果写入的数据没有达到预期的性能率，请小心会意外出现存储空间耗尽的问题。
每当逻辑块（虚拟存储）的数量超过物理块（实际存储）的数量时，文件系统和应用程序可能会意外地遇到没有存储空间的问题。因此，使用
VDO 的存储系统必须为您提供一个监控 VDO 卷中可用池大小的方法。
您可以使用 `vdostats`{.literal}
实用程序确定此可用池的大小。这个工具的默认输出列出所有运行 VDO
卷的信息，其格式与 Linux `df`{.literal} 程序类似。例如：
``` screen
Device                1K-blocks   Used        Available   Use%
/dev/mapper/vdo-name  211812352   105906176   105906176   50%
```
当 VDO 卷的物理存储容量接近满时，VDO 在系统日志中报告警告，如下所示：
``` screen
Oct  2 17:13:39 system lvm[13863]: Monitoring VDO pool vdo-name.
Oct  2 17:27:39 system lvm[13863]: WARNING: VDO pool vdo-name is now 80.69% full.
Oct  2 17:28:19 system lvm[13863]: WARNING: VDO pool vdo-name is now 85.25% full.
Oct  2 17:29:39 system lvm[13863]: WARNING: VDO pool vdo-name is now 90.64% full.
Oct  2 17:30:29 system lvm[13863]: WARNING: VDO pool vdo-name is now 96.07% full.
```
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
这些警告消息只有在 `lvm2-monitor`{.literal}
服务运行时才会出现。它会被默认启用。
:::
::: title
**如何防止没有空间的问题**
:::
如果可用池的大小低于一定级别，可以执行以下操作：
::: itemizedlist
-   删除数据。当删除的数据不再被重复时，可能重新获得可用空间。只有发出了签发后，删除数据才可以释放空间。
-   添加物理存储
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
监控 VDO 卷的物理空间，以防止出现空间不足的情况。物理块不足可能会导致
VDO 卷中最近写入的数据丢失。
:::
::: title
**精简配置以及 TRIM 和 DISCARD 命令**
:::
要从精简配置的存储节约中受益，物理存储层需要知道何时删除数据。使用精简配置存储运行的文件系统会发送