# Securing Interactive Sessions Using Mobile Device through Visual Channel and Visual Inspection

**Authors:**
- Chengfang Fang
- Ee-Chien Chang

**Affiliation:**
- School of Computing, National University of Singapore

**Date:**
- December 8, 2010

---

## Abstract

This paper presents a method for securing interactive sessions with a server via a workstation using a mobile device. The proposed method leverages the visual channel and visual inspection to authenticate and secure transactions. We address the challenges of verifying transaction content and ensuring confidentiality and authenticity in two adversary models.

---

## 1. Introduction

We are interested in securing interactions with a server via a workstation using a mobile device. The traditional one-time password (OTP) method does not verify the transaction content, allowing the workstation to potentially modify the transaction. Our approach aims to overcome this limitation by integrating visual channels and visual inspection.

### 1.1 System Overview

- **Workstation:** Initiates the transaction request.
- **User:** Verifies the transaction content using a mobile device.
- **Server:** Processes the transaction.
- **Mobile Device:** Captures and verifies the transaction content.

---

## 2. Outline

- **Background and Related Methods**
- **Our Method**
- **Design Challenges**
- **Proof of Concept Demonstration**
- **Conclusion and Future Work**

---

## 3. One-Time Password (OTP)

### 3.1 Traditional OTP

- **Workstation:** Requests a transaction.
- **User:** Receives a one-time password (e.g., 512953).
- **Server:** Verifies the OTP.

However, this method does not verify the transaction content, making it vulnerable to modification by the workstation.

---

## 4. Related Work

- **[Clarke2002]:** Captures every pixel and verifies the pixels or performs OCR to verify the message using a MAC barcode on the screen.
- **[Sharp2006]:** Blurs sensitive information on the workstation and displays the region around the mouse pointer on the mobile device.

---

## 5. Our Scheme: Setting

- **Workstation:** Displays the transaction details.
- **User:** Uses the mobile device to capture and verify the transaction.
- **Visual Channel:** Transmits the transaction details.
- **Key:** Used for encryption and decryption.
- **Server:** Processes the verified transaction.

---

## 6. Adversary Models

### 6.1 Model 1: Honest Mobile Device

- **Assumption:** The mobile device is honest, but the terminal may be compromised.
- **Objective:** Achieve confidentiality and authenticity.

### 6.2 Model 2: Dishonest Mobile Device

- **Assumption:** Both the mobile device and the terminal could be compromised, but they cannot collude.
- **Objective:** Achieve authenticity.

---

## 7. Model 1 Solution

### 7.1 Sensitive Information Presentation

- **Non-sensitive portions:** Displayed as they are.
- **Sensitive information:** Replaced by specially designed 2D barcodes.

### 7.2 Verification Process

1. **User verifies the order of the barcodes.**
2. **User moves the mobile device over the barcode.**
3. **Mobile device captures and verifies the barcodes, and displays the content.**

---

## 8. Model 2 Solution

### 8.1 Transaction Information

- **Transaction information:** Displayed together with their barcodes.

### 8.2 Verification Process

1. **User verifies the order of the barcodes.**
2. **User moves the mobile device over the barcode.**
3. **Mobile device captures and verifies the barcodes, and displays the content.**
4. **User verifies the transactions are consistent in the device and workstation.**

---

## 9. Rearrangement Attacks

- **Sub-region authentication:** Capture and decode one small region at a time.
- **Hardware limitation:** Mobile camera cannot capture the whole screen with sufficient precision.
- **Problem:** How to authenticate the whole message using a device that can only verify one small region at a time.

---

## 10. Visual Inspection of Visual Cues

### 10.1 Idea

- **Bind location information to the appearance of the barcodes.**

### 10.2 Example

- **Last block of the line:** Last block

---

## 11. Our Design

### 11.1 Design Details

- **2-bit message + 1-bit visual appearance + key -> 3 pixels**
- **L-blocks:** Arranged based on the session key.

### 11.2 Security Features

- **Malicious terminal:** Changing a Black L-block to a White L-block has a 3/4 chance of introducing an error.
- **Adversary:** Needs to change many L-blocks, which will likely destroy the barcode.

---

## 12. Alternatives

### 12.1 Alternative 1: Camera as a Channel

- **Advantages:** Sends everything via the camera.
- **Disadvantages:** Less user-friendly, difficult to extend to cater to dishonest mobile devices.

### 12.2 Alternative 2: Store Location Information

- **Advantages:** Stores location information in the payload.
- **Disadvantages:** Difficult to prevent deletion and duplication attacks, applicable only for some table data.

---

## 13. Sending Message to Server

- **Workstation:** Initiates the transaction (e.g., Transfer $5000 to Bob).
- **User:** Enters the OTP (e.g., 512953) to approve the transaction.
- **Server:** Processes the approved transaction.

---

## 14. Comparison with Existing Work

- **Can:**
  - Authenticate transaction content.
  - Provide confidentiality when the mobile device is trusted.
- **Requires:**
  - Mobile device with a camera and display.
- **Does NOT require:**
  - Installation in the workstation.
  - Out-of-band channel.
  - Trusted mobile device when confidentiality is not required.

---

## 15. Proof-of-Concept Implementation

- **Platform:** Android API 1.6.
- **Tested Devices:**
  - Acer Liquid
  - Motorola Milestone XT
  - HTC Legend
- **Tested Monitors:**
  - 19-inch TFT monitor (Dell Optiplex 755)
  - 13.3-inch display (Toshiba Portege M900 laptop)
  - 15-inch CRT monitor (Dell)

---

## 16. Performance

- **Decoding rate:** Around 5 frames per second.
- **Bit error rate:** A 50x50 barcode can carry approximately 952 bits and correct up to 8% errors.

---

## 17. Proof-of-Concept Demo

- **Device:** Acer Liquid model.
- **Webpage rendering:** Dell Optiplex 755, 19-inch TFT monitor.
- **User experience:** Augmented reality framework used instead of manual picture-taking.

---

## 18. Conclusions and Future Work

- **Achievements:**
  - Designed a visual cue technique to secure interactions.
  - Implemented a proof-of-concept system that is feasible on mobile devices.
  - Demonstrated the potential of combining computer processing power and human perceptual systems for authentication.
- **Future Work:**
  - Explore other applications of the visual cue technique.

---

## 19. Acknowledgments

- **Thank you!**

---

**ACSAC 2010**
**Securing Interactive Sessions Using Mobile Device through Visual Channel and Visual Inspection**
**Page 28 of 28**