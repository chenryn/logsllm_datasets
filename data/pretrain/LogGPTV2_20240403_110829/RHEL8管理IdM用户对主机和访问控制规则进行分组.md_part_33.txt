:::
::: orderedlist
**流程**
1.  进入 [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录：
    ``` literallayout
    $ cd ~/MyPlaybooks/
    ```
2.  制作位于
    `/usr/share/doc/ansible -freeipa/playbooks/permission/ 目录中的 permission-`{.literal}
    member-present.yml``{=html} 文件的副本：
    ``` literallayout
    $ cp /usr/share/doc/ansible-freeipa/playbooks/permission/permission-member-present.yml permission-member-present-copy.yml
    ```
3.  打开 `permission-member-present-copy.yml`{.literal} Ansible playbook
    文件以进行编辑。
4.  通过在 `ipapermission`{.literal} 任务部分中设置以下变量来调整文件：
    ::: itemizedlist
    -   调整任务 `的名称`{.literal}，使其与您的用例对应。
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员的密码。
    -   将 `name`{.literal} 变量设置为权限的名称。
    -   将 `attrs`{.literal} 列表设置为 `description`{.literal} 和
        `gecos`{.literal} 变量。
    -   确保 `action`{.literal} 变量设置为 `member`{.literal}。
    :::
    这是当前示例修改的 Ansible playbook 文件：
    ``` literallayout
    ---
    - name: Permission member present example
      hosts: ipaserver
      become: true
      tasks:
      - name: Ensure that the "gecos" and "description" attributes are present in "MyPermission"
        ipapermission:
          ipaadmin_password: Secret123
          name: MyPermission
          attrs:
          - description
          - gecos
          action: member
    ```
5.  保存该文件。
6.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i inventory permission-member-present-copy.yml
    ```
:::
:::
::: section
::: titlepage
# []{#using-ansible-playbooks-to-manage-rbac-permissions-in-idm_managing-users-groups-hosts.html#using-ansible-to-ensure-an-attribute-is-not-a-member-of-an-idm-rbac-permission_using-ansible-playbooks-to-manage-rbac-permissions-in-idm}使用 Ansible 确保属性不是 IdM RBAC 权限的成员 {.title}
:::
作为身份管理系统管理员(IdM)，您可以自定义 IdM 基于角色的访问控制(RBAC)。
以下流程描述了如何使用 Ansible playbook 确保属性不是 IdM 中 RBAC
权限的成员。因此，当拥有权限的用户在 IdM LDAP
中创建条目时，该条目不能具有与 属性关联的值。
这个示例描述了如何确保以下目标状态：
::: itemizedlist
-   [**MyPermission**]{.strong} 权限存在。
-   具有特权的用户创建的主机条目包含 [**MyPermission**]{.strong}
    权限，不能具有 `description`{.literal} 属性。
:::
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   您已在 Ansible 控制节点上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
-   [示例假定您已创建并配置了](#preparing-your-environment-for-managing-idm-using-ansible-playbooks_managing-users-groups-hosts.html "第 20 章 准备您的环境以使用 Ansible playbook 管理 IdM"){.link}
    [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录，作为存储示例
    playbook 副本的中央位置。
-   [**MyPermission**]{.strong} 权限存在。
:::
::: orderedlist
**流程**
1.  进入 [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录：
    ``` literallayout
    $ cd ~/MyPlaybooks/
    ```
2.  制作位于
    `/usr/share/doc/ansible -freeipa/playbooks/permission/ 目录的 permission-`{.literal}
    member-absent.yml``{=html} 文件的副本：
    ``` literallayout
    $ cp /usr/share/doc/ansible-freeipa/playbooks/permission/permission-member-absent.yml permission-member-absent-copy.yml
    ```
3.  打开 `permission-member-absent-copy.yml`{.literal} Ansible playbook
    文件进行编辑。
4.  通过在 `ipapermission`{.literal} 任务部分中设置以下变量来调整文件：
    ::: itemizedlist
    -   调整任务 `的名称`{.literal}，使其与您的用例对应。
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员的密码。
    -   将 `name`{.literal} 变量设置为权限的名称。
    -   将 `attrs`{.literal} 变量设置为 `description`{.literal}。
    -   将 `action`{.literal} 变量设置为 `member`{.literal}。
    -   确保 `state`{.literal} 变量设置为 `absent`{.literal}
    :::
    这是当前示例修改的 Ansible playbook 文件：
    ``` literallayout
    ---
    - name: Permission absent example
      hosts: ipaserver
      become: true
      tasks:
      - name: Ensure that an attribute is not a member of "MyPermission"
        ipapermission:
          ipaadmin_password: Secret123
          name: MyPermission
          attrs: description
          action: member
          state: absent
    ```
5.  保存该文件。
6.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i inventory permission-member-absent-copy.yml
    ```
:::
:::
::: section
::: titlepage
# []{#using-ansible-playbooks-to-manage-rbac-permissions-in-idm_managing-users-groups-hosts.html#using-ansible-to-rename-an-idm-rbac-permission_using-ansible-playbooks-to-manage-rbac-permissions-in-idm}使用 Ansible 重命名 IdM RBAC 权限 {.title}
:::
作为身份管理系统管理员(IdM)，您可以自定义 IdM 基于角色的访问控制。
以下流程描述了如何使用 Ansible playbook
重新命名权限。这个示例描述了如何将 [**MyPermission 重命名为**]{.strong}
[**MyNewPermission**]{.strong}。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   您已在 Ansible 控制节点上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
-   [示例假定您已创建并配置了](#preparing-your-environment-for-managing-idm-using-ansible-playbooks_managing-users-groups-hosts.html "第 20 章 准备您的环境以使用 Ansible playbook 管理 IdM"){.link}
    [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录，作为存储示例
    playbook 副本的中央位置。
-   [**MyPermission**]{.strong} 存在于 IdM 中。
-   IdM 中不存在 [**MyNewPermission**]{.strong}。
:::
::: orderedlist
**流程**
1.  进入 [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录：
    ``` literallayout
    $ cd ~/MyPlaybooks/
    ```
2.  制作位于
    `/usr/share/doc/ansible -freeipa/playbooks/permission/ 目录中的 permission-`{.literal}
    renamed.yml``{=html} 文件的副本：
    ``` literallayout
    $ cp /usr/share/doc/ansible-freeipa/playbooks/permission/permission-renamed.yml permission-renamed-copy.yml
    ```
3.  打开 `permission-renamed-copy.yml`{.literal} Ansible playbook
    文件进行编辑。
4.  通过在 `ipapermission`{.literal} 任务部分中设置以下变量来调整文件：
    ::: itemizedlist
    -   调整任务 `的名称`{.literal}，使其与您的用例对应。
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员的密码。
    -   将 `name`{.literal} 变量设置为权限的名称。
    :::
    这是当前示例修改的 Ansible playbook 文件：
    ``` literallayout
    ---
    - name: Permission present example
      hosts: ipaserver
      become: true
      tasks:
      - name: Rename the "MyPermission" permission
        ipapermission:
          ipaadmin_password: Secret123
          name: MyPermission
          rename: MyNewPermission
          state: renamed
    ```
5.  保存该文件。
6.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i inventory permission-renamed-copy.yml
    ```
:::
:::
::: section
::: titlepage
# []{#using-ansible-playbooks-to-manage-rbac-permissions-in-idm_managing-users-groups-hosts.html#_additional_resources}其它资源 {.title}
:::
::: itemizedlist
-   有关 IdM RBAC 中权限概念的更多信息，请参阅 [IdM
    中的权限](#using-ansible-playbooks-to-manage-role-based-access-control-in-idm_managing-users-groups-hosts.html#permissions-in-idm_using-ansible-playbooks-to-manage-role-based-access-control-in-idm "IdM 中的权限"){.link}。
-   有关 IdM RBAC 中权限概念的更多信息，请参阅 [IdM
    中的特权](#using-ansible-playbooks-to-manage-role-based-access-control-in-idm_managing-users-groups-hosts.html#privileges-in-idm_using-ansible-playbooks-to-manage-role-based-access-control-in-idm "IdM 中的权限"){.link}。
-   有关使用 `ipapermission`{.literal} 模块的更多 Ansible playbook
    示例，请参阅
    `/usr/share/doc/ansible -freeipa/ 目录中的README-`{.literal}
    permission``{=html} 文件。文件还包含
    `ipapermission`{.literal} 变量的定义。
-   有关使用 `ipapermission`{.literal} 模块的更多 Ansible playbook
    示例，请参阅
    `/usr/share/doc/ansible-freeipa/playbooks/ipapermission`{.literal}
    目录。
:::
:::
:::
[]{#using-an-id-view-to-override-a-user-attribute-value-on-an-IdM-client_managing-users-groups-hosts.html}
::: chapter
::: titlepage
# []{#using-an-id-view-to-override-a-user-attribute-value-on-an-IdM-client_managing-users-groups-hosts.html#using-an-id-view-to-override-a-user-attribute-value-on-an-IdM-client_managing-users-groups-hosts}第 24 章 使用 ID 视图覆盖 IdM 客户端中的用户属性值 {.title}
:::
如果 Identity Management(IdM)用户希望覆盖存储在 IdM LDAP
服务器中的一些用户或组属性，例如登录名称、主目录、用于身份验证的证书或
`SSH`{.literal} 密钥，您将作为 IdM 管理员可以使用 IdM ID
视图重新定义特定 IdM 客户端的这些值。例如，您可以为 IdM
客户端中的用户指定不同的主目录，此用户最常用于登录 IdM。
本章论述了如何重新定义在作为客户端注册 IdM 的主机上与 IdM 用户关联的
POSIX 属性值。具体来说，本章论述了如何重新定义用户登录名称和主目录。
本章包括以下部分：
::: itemizedlist
-   [ID
    视图](#using-an-id-view-to-override-a-user-attribute-value-on-an-IdM-client_managing-users-groups-hosts.html#id-views_using-an-id-view-to-override-a-user-attribute-value-on-an-IdM-client "ID 视图"){.link}
-   [ID 视图对 SSSD
    性能的潜在负面影响](#using-an-id-view-to-override-a-user-attribute-value-on-an-IdM-client_managing-users-groups-hosts.html#potential-negative-impact-of-id-views-on-sssd-performance_using-an-id-view-to-override-a-user-attribute-value-on-an-IdM-client "ID 视图对 SSSD 性能的潜在负面影响"){.link}
-   [ID
    视图可以覆盖的属性](#using-an-id-view-to-override-a-user-attribute-value-on-an-IdM-client_managing-users-groups-hosts.html#attributes-an-ID-view-can-override_using-an-id-view-to-override-a-user-attribute-value-on-an-IdM-client "ID 视图可以覆盖的属性"){.link}
-   [获取 ID view
    命令的帮助信息](#using-an-id-view-to-override-a-user-attribute-value-on-an-IdM-client_managing-users-groups-hosts.html#getting-help-for-ID-view-commands_using-an-id-view-to-override-a-user-attribute-value-on-an-IdM-client "获取 ID view 命令的帮助信息"){.link}
-   [使用 ID 视图覆盖特定主机上 IdM
    用户的登录名称](#using-an-id-view-to-override-a-user-attribute-value-on-an-IdM-client_managing-users-groups-hosts.html#using-an-ID-view-to-override-the-login-name-of-an-IdM-user-on-a-specific-host_using-an-id-view-to-override-a-user-attribute-value-on-an-IdM-client "使用 ID 视图覆盖特定主机上 IdM 用户的登录名称"){.link}
-   [修改 IdM ID
    视图](#using-an-id-view-to-override-a-user-attribute-value-on-an-IdM-client_managing-users-groups-hosts.html#modifying-an-IdM-ID-view_using-an-id-view-to-override-a-user-attribute-value-on-an-IdM-client "修改 IdM ID 视图"){.link}
-   [添加 ID 视图以覆盖 IdM 客户端中的 IdM
    用户主目录](#using-an-id-view-to-override-a-user-attribute-value-on-an-IdM-client_managing-users-groups-hosts.html#adding-an-ID-view-to-override-an-IdM-user-home-directory-on-an-IdM-client_using-an-id-view-to-override-a-user-attribute-value-on-an-IdM-client "添加 ID 视图以覆盖 IdM 客户端中的 IdM 用户主目录"){.link}
-   [将 ID 视图应用到 IdM
    主机组](#using-an-id-view-to-override-a-user-attribute-value-on-an-IdM-client_managing-users-groups-hosts.html#applying-an-ID-view-to-an-IdM-host-group_using-an-id-view-to-override-a-user-attribute-value-on-an-IdM-client "将 ID 视图应用到 IdM 主机组"){.link}
:::
::: section
::: titlepage
# []{#using-an-id-view-to-override-a-user-attribute-value-on-an-IdM-client_managing-users-groups-hosts.html#id-views_using-an-id-view-to-override-a-user-attribute-value-on-an-IdM-client}ID 视图 {.title}
:::
Identity Management(IdM)中的 ID 视图是一个 IdM
客户端侧视图，它指定以下信息：
::: itemizedlist
-   集中定义的 POSIX 用户或组属性的新值
-   应用新值的客户端主机或主机。
:::
ID 视图包含一个或多个覆盖。覆盖是集中定义的 POSIX 属性值的特定替换。
您只能为 IdM 服务器中集中的 IdM 客户端定义 ID 视图。您无法在本地为 IdM
客户端配置客户端覆盖。
例如，您可以使用 ID 视图来实现以下目标：
::: itemizedlist
-   为不同的环境定义不同的属性值。例如，您可以允许 IdM 管理员或其他 IdM
    用户在不同 IdM 客户端上拥有不同的主目录：您可以在另一个 IdM
    客户端上将 `/home/crypt/username`{.literal}
    配置为此用户的主目录，并在另一个客户端上将
    `/dropbox/username`{.literal} 配置为此用户的主目录。在这种情况下使用
    ID 视图非常方便，例如，更改
    `fallback_homedir`{.literal}、`overwrite_homedir`{.literal}
    或客户端的 `/etc/sssd/sssd.conf`{.literal}
    文件中的其他主目录变量将影响所有用户。[例如，请参阅添加 ID
    视图来覆盖 IdM 客户端上的 IdM
    用户主目录](#using-an-id-view-to-override-a-user-attribute-value-on-an-IdM-client_managing-users-groups-hosts.html#adding-an-ID-view-to-override-an-IdM-user-home-directory-on-an-IdM-client_using-an-id-view-to-override-a-user-attribute-value-on-an-IdM-client "添加 ID 视图以覆盖 IdM 客户端中的 IdM 用户主目录"){.link}。
-   将之前生成的属性值替换为其他值，如覆盖用户的
    UID。当您要实现系统范围的更改时，此功能非常有用，否则在 LDAP
    方面很难实现，例如将 1009 设为 IdM 用户的 UID。用于生成 IdM 用户 UID
    的 IdM ID 范围从不低于 1000 甚至 10000。如果 IdM 用户所有 IdM
    客户端上存在一个 UID 为 1009 的本地用户，您可以使用 ID 视图覆盖在
    IdM 中创建用户时生成的 IdM 用户的 UID。
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
您只能将 ID 视图应用到 IdM 客户端，不适用于 IdM 服务器。
:::