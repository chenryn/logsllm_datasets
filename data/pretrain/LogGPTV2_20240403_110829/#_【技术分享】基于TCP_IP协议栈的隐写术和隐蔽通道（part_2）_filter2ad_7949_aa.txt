# 【技术分享】基于TCP/IP协议栈的隐写术和隐蔽通道（Part 2）

## 译文声明
本文为翻译文章，原文来自exploit-db.com。具体内容表达及含义请以原文为准。

## 翻译信息
- **翻译者**: shan66
- **预估稿费**: 200 RMB
- **投稿方式**: 发送邮件至 linwei#360.cn 或登录网页版在线投稿

## 传送门
- [【技术分享】基于TCP/IP协议栈的隐写术和隐蔽通道（Part 1）](http://bobao.360.cn/learning/detail/3754.html)

## 隐写术理论基础
在第一篇文章中，我们简要介绍了隐写术。现在我们将深入探讨这一主题。

### 隐写术分类
隐写术主要分为两类：
1. **隐藏在明处**：例如，将莎士比亚戏剧文本嵌入斑马图像中，通常不会有人检查每个像素的最低有效位（LSB）。如果确实有人进行这种检查，他们就能发现隐藏的文本。
   - 第一篇中的方法，即将纯数据封装在TCP/IP报头中，就属于此类别。
   
2. **基于加密的隐写术**：使用加密技术确保即使对图像进行全面分析，也无法找到莎士比亚戏剧文本的痕迹。
   - 加密技术提供了一层保护，但人们会知道存在通信信道。而隐写术则使得通信信道不被察觉，从而实现更高级别的隐蔽性。

### 隐写术的局限性
隐写术虽然强大，但往往会在某些情况下留下痕迹。例如，图片中的LSB隐写会导致色差，引起怀疑。在第一篇文章中，由于只能在随机字段中推送ASCII字节，这显著降低了这些字段的数据熵，容易引起取证人员的注意。一旦基于隐写术的隐蔽通道被发现，其安全性就会降低到单纯的加密层面。

## Pozzo & Lucky
Pozzo & Lucky 是戏剧《等待戈多》中的两个关键角色，同时也是本项目的名字。该项目始于一个赌注，目的是开发一种远程命令执行shell，使其无法被网络设备检测且不留网络踪迹。

### 设计思路
- **原理**：通过IP标识和TCP序列号（ISN）字段传递命令。
- **组件**：
  - **Lucky**：安装在目标机器上，用于接收并执行命令。
  - **Pozzo**：控制安装了Lucky的目标机器。

### 功能
- 执行操作系统命令（带输出和不带输出）
- 远程实时执行Shellcode
- 文件上传/下载
- 完全绕过.pcap文件分析、防火墙日志分析和常规分析
- 模拟nmap -sS端口扫描或任何类型的SYN扫描
- 可用于Windows和Linux系统
- 不创建连接，每个数据包可以从不同的源IP发送到不同的目标端口

### 缺点
- **速度慢**：带宽仅为5字节/包，需要极大的耐心。
- **缺乏持久性和隐蔽性**：必须与rootkit配合使用。
- **代理问题**：代理会杀死它，需要通过端口转发才能正常工作。
- **依赖性**：在Windows上依赖Winpcap，在Linux上依赖Scapy，可能会被PyInstaller等工具阻止。

### 要求
- 目标主机需具有root/admin权限。
- Pozzo与Lucky必须在同一子网内，或至少Pozzo有一个指向Lucky的TCP端口路由。
- Pozzo不能位于NAT之后，因为NAT会修改出站Pozzo数据包的源端口。

### 概念
- **Lucky**：运行在目标机器上的数据包嗅探器，接收所有到达机器的数据包，并通过算法确定哪些数据包是由Pozzo创建的。
- **Pozzo数据包**：通过IP标识字段和TCP序列号字段以强加密形式提供6字节数据。Lucky从这些数据包中提取有效负载，并生成RST-ACK数据包响应，注入加密后的命令执行结果。

### 解决面临的问题
#### 克服熵问题
- **问题**：随机字段中的数据可预测性高，导致熵降低。
- **解决方案**：使用加密技术，特别是定制的一次性密钥加密方案（OTP），通过对通行字短语进行SHA512运算得到密钥，然后对数据进行XOR运算，每次处理6字节的数据。这样可以确保数据的随机性和不可预测性。

#### 克服身份问题
- **问题**：如何区分不同来源的数据包。
- **解决方案**：检查数据包的源端口，但不期望它始终相同。使用类似于OTP的循环算法来动态变化源端口，避免被分析人员轻易发现。

通过以上设计，Pozzo & Lucky 提供了一种高度隐蔽且难以检测的远程命令执行方法。