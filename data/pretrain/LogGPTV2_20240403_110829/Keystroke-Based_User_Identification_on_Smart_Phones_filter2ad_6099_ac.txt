38.4
11.5
19.5
31.3
18.4
33.4
26.5
21.3
53.2
31.2
43.2
34.2
21.5
31.2
33.4
28.5
39.2
30.5
35.4
31.2
31.3
43.2
22.3
38.2
30.8
9.22
J48
FRR
39.2
67.4
26.4
32.4
25.8
32.4
24.8
32.1
38.5
79.6
34.5
73.5
75.2
39.3
81.2
30.4
23.2
34.6
32.4
28.3
25.3
28.5
55.3
39.2
18.3
40.7
19.2
FAR
44.3
31.2
44.3
21.3
33.4
24.6
21.2
24.6
44.3
42.1
21.7
43.8
19.5
43.5
12.4
21.7
41.2
23.5
47.7
33.2
31.4
19.4
23.4
16.4
19.4
29.9
10.9
conﬁrms that their accuracies are not acceptable for real-world deployments
because such a high FRR will simply frustrate legitimate users.
4.3 Discussion
The main reason for poor FAR and FRR performance of these classiﬁers is that
they are unable to cope with the variation in the feature set that was highlighted
by cv in the previous section. Thus an important outcome of this pilot study is
that we need to design a classiﬁer for our user identiﬁcation and authentication
system that should meet the following requirements: (1) it should provide low
(< 5%) FAR, (2) it should also provide low (< 5%) FRR, (3) it must have small
detection time to correctly classify a user, (4) the system must be deployable
on real mobile phones, (5) it should continuously adapt to the variation in the
feature set, and (6) it should have low run-time complexity.
Requirement (1) ensures that an imposter does not go undetected. Once this
requirement is combined with requirement (3), we reduce the identiﬁcation delay
on a mobile phone. Requirement (2) is important because if our system starts
rejecting the legitimate users, it will lead to their frustration and annoyance and
the system will lose its usability appeal. Finally requirement (6) is important
because a highly complex system can not be deployed on resource constrained
mobile phones.
The following section develops a classiﬁer that can simultaneously meet all of
the above requirements.
Keystroke-Based User Identiﬁcation on Smart Phones
233
5 A Tri-mode System for Mobile Phone User
Identiﬁcation
Based on the results of the last section, we propose a tri-mode system for mo-
bile phone user identiﬁcation. To simultaneously cater for the requirements set
above, the system operates in three sequential modes.
Learning Mode. This mode can be further divided into two submodes: initial
(static) learning and continuous (dynamic) learning. In the static learning phase,
a keystroke proﬁle of a user is collected and a feed-forward classiﬁer is trained
on this proﬁle. The dynamic learning phase executes continuously to track and
learn changes in the user’s behavior. These changes are fed back into the feed-
forward detector to allow it to adapt to variations in the user’s behavior.
Detection Mode. In the detection mode, the classiﬁer trained during the learn-
ing mode is used to diﬀerentiate between legitimate users and imposters. If the
detector raises an alarm during this mode, the system moves to the veriﬁcation
mode.
Veriﬁcation Mode. In the veriﬁcation mode, a user is asked to type a remem-
bered 8-character PIN. In the veriﬁcation mode, we not only compare the typed
characters with the stored PIN but also match how the PIN has been typed. In
the worst case, when an imposter already knows the PIN, the imposter would
still have to enter the PIN using the legitimate user’s keystroke dynamics. This
mode acts as a ﬁnal line of defence against an imposter who has successfully
breached every other protection layer.
Interested readers can ﬁnd all the technical details and algorithms used in the
development of this tri-mode system in [25]. In subsequent sections, we give a
general overview of the algorithms used in each of the modes described above.
5.1 Algorithms in Learning and Detection Modes
Previous results showed that, due to the variation in the feature-set of diﬀer-
ent users, standard machine learning classiﬁers cannot provide acceptable error
rates for the present problem of keystroke-based mobile phone user identiﬁca-
tion. Speciﬁcally, variation in the features’ set results in a diﬀused dataset and
consequently it is not possible to assign crisp classiﬁcation boundaries to diﬀer-
ent users. A study of existing classiﬁers reveals that classiﬁers based upon fuzzy
logic [30] are well-suited for such problem. Fuzzy classiﬁers can provide accept-
able accuracies on diﬀused datasets because they assign a given data point a
degree of membership to all available classes. The primary task of fuzzy clas-
siﬁcation is to determine the boundaries of the decision regions based on the
training datapoints. Once the class-labeled decision regions in the feature space
are determined, classiﬁcation of an unknown point is achieved by simply iden-
tifying the region in which the unknown point resides. Since fuzzy logic assigns
each data point a degree of membership to diﬀerent decision regions instead of
a single association to one decision region (thus showing inherent capability to
234
S. Zahid et al.
deal with fuzzy/diﬀused datasets), we expect a fuzzy classiﬁer to provide an
accurate and eﬃcient learning mechanism for the diﬀused mobile phone feature-
set. The remainder of this section develops and evaluates a fuzzy classiﬁer for
mobile phone user classiﬁcation.
Initial Learning using a Feed-Forward Fuzzy Classiﬁer. We are work-
ing on a two-class classiﬁcation problem as we need to distinguish between a
legitimate user and an imposter. A fuzzy system is based on a database, rule
base, and a fuzzy inference system. The database is composed of linguistic vari-
ables, fuzzy partitions, and membership functions. We now describe our fuzzy
clustering algorithm and then evaluate its accuracy on the mobile keystrokes
dataset.
In order to determine an initial rule base for fuzzy system, we deﬁne the cen-
troid of a cluster in the form of (x1, x2, . . . , xz), where x1, x2, . . . , xz are the
values of the ﬁrst, second, . . . , zth feature, respectively, where z is the dimen-
sion of the feature vector. It is mentioned earlier that we use z = 6 features.
For a given data point, we search its value in the corresponding fuzzy sets, de-
termine its degree of membership to each fuzzy partition and then assign the
point to the partition with the maximum degree of membership. To determine
the consequent of a rule, we ﬁnd the density of the cluster of the centroid for
which we are deﬁning an antecedent of the rule. If a cluster has high, medium
or low density then the output belongs to the fuzzy partitions high, medium or
low, respectively, in the consequent of the rule. We repeat this procedure for all
training data points to deﬁne a rule-base using the centroids of all the clusters.
To give a preliminary indication of the accuracy of the ﬁrst phase of our pro-
posed system, the FAR and FRR values of the fuzzy classiﬁer are shown in Table
3. FAR and FRR of approximately 18.6% and 19.0%, respectively – much better
Table 3. A comparative study of the feasible techniques
RBFN
Fuzzy
GA-Fuzzy
PSO-GA Fuzzy
FAR
FRR
Users
u1
u2
u3
u4
u5
u6
u7
u8
u9
u10
u11
u12
u13
u14
u15
u16
u17
u18
u19
u20
u21
u22
u23
u24
u25
Avg
standard deviation
FAR
33.2
28.4
22.5
58.3
45.2
48.9
36.7
68.9
44.1
30.9
23.5
33.2
19.5
33.5
20.4
67.5
39.4
34.5
37.4
33.3
28.5
22.1
21.8
31.2
38.2
36.0
13.5
FRR
9.31
11.9
11.2
12.4
21.4
11.5
21.4
18.9
31.3
43.2
12.3
33.5
54.3
31.3
59.6
15.6
13.7
35.6
15.8
66.7
19.8
33.1
32.1
24.1
22.4
26.5
15.7
FAR
18.1
17.3
21.3
17.6
18.3
17.1
18.9
21.6
19.3
17.3
18.3
16.2
19.7
17.3
17.3
18.1
19.2
19.1
15.1
17.5
22.1
19.2
19.8
16.6
22.1
18.6
1.86
FRR
19.3
21.6
17.5
16.2
15.3
18.2
19.9
21.4
19.8
21.2
22.1
17.2
18.1
16.4
16.3
16.9
14.5
22.4
26.8
18.1
17.2
15.5
22.6
21.8
19.3
19.0
3.00
PSO-Fuzzy
FRR
FAR
7.55
8.34
6.43
9.63
9.22
7.43
8.74
7.92
8.73
6.12
9.01
9.54
5.91
6.94
6.42
7.22
6.71
9.02
9.13
11.4
8.21
7.44
9.42
5.22
8.23
6.12
9.84
9.15
8.92
7.97
7.01
6.95
9.21
9.12
7.01
10.1
5.17
6.02
5.95
9.14
7.05
5.11
9.31
6.21
8.01
9.11
6.16
6.22
8.91
8.34
7.58
8.09
1.47
1.55
FAR
8.32
8.73
6.34
8.91
7.43
8.63
7.23
8.34
9.84
10.1
9.23
9.31
8.34
8.91
7.25
6.33
8.93
11.3
9.61
7.21
8.87
9.94
12.1
10.4
8.22
8.79
1.46
FRR