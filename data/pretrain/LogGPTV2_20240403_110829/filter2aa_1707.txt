### DefCon 21, Las Vegas 2013
#### Let’s Screw With nMap
**Presenter:** Gregory Pickett, CISSP, GCIA, GPEN  
**Location:** Chicago, Illinois  
**Email:** PI:EMAIL  
**Organization:** Hellfire Security

---

### Overview
- **Nosey Bastards!**
- **All About Packet Normalization**
- **Working It All Out**
- **Putting It Into Practice**
- **Finishing Up**

---

### Network Defenders
- We encounter scans and probes on our network daily, both from internal and external sources.
- Everyone is targeting us.
- Identifying our assets is a critical step in defending against these threats.

### How They Do It
- Network stack implementation varies widely, which can help attackers identify the operating system type and version.
- By matching the headers of their target to known operating system implementations, attackers can determine the OS.
- For example, if a target has a TTL of 128, it is likely a Windows 2003 Server. This is based on specific options such as:
  - MSS of 1460
  - Single NOP
  - Window Size 0
  - Ending SACK

### Implications
- If attackers can identify your assets, they know the weaknesses and how to exploit them without triggering your sensors.
- The goal is to remove these differences to reduce their advantage and significantly decrease their chances of success.

### My Answer: Packet Normalization
- **What is packet normalization?**
  - It is not a fully developed concept, but it involves making packets conform to a standard or norm.
  - **Normalization vs. Scrubbing:**
    - **Scrubbing** is about removing or canceling certain values.
    - **Normalization** is about making packets normal, especially to conform to a standard.

### Scrubbing
- Used by many firewalls and network devices (e.g., Cisco ACE and ASA) to:
  - Randomize IP ID
  - Clear IP DF
  - Set IP tos/dscp and ttl
  - Reassemble IP fragments
- **Primary Concerns:**
  - Policy violations
  - Abnormal packets
  - Abnormal flows

### Incoming Normalization
- Used by IPS and IDS devices for:
  - IP fragment reassembly
  - IP TTL evasion
- **Primary Concerns:**
  - Detecting attacks
  - Detection evasion
  - Masquerading

### Examples
- **IP Personality Morph:**
  - Modifies the stack to pretend to be a different host.

### Fingerprinting Process
- TCP, UDP, and ICMP probes are sent.
- Results are compiled into a fingerprint and compared against a database to identify the operating system.
- **Tools:**
  - Nmap
  - xprobe2
  - SinFP
  - Vulnerability scanners like Nessus

### Best Practices
- Disrupt existing patterns.
- Clear out unnecessary values.
- Randomize where possible (e.g., IP ID, IP TTL, TCP Options).

### Normalizing
- **IP Time-To-Live (TTL) / Hop Limit:**
  - Make assumptions about well-known TTLs.
  - Estimate the number of hops traveled and recalibrate the current TTL.
- **TCP Options:**
  - Assume only a few well-known options are needed.
  - Read necessary options, discard the rest, and rewrite them in proper order.
  - Use NOPs to fill the end of the options.

### Putting It All Together with IDGuard
- **Selecting the Platform:**
  - Identified suitable hardware (e.g., Mikrotik Routerboards).
  - Identified suitable operating system (e.g., OpenWrt).
- **Deploying to Hardware:**
  - Purchase hardware from a local vendor.
  - Create a netboot image and set up a DHCP & TFTP netboot environment.
  - Connect to the routerboard, configure for DHCP, and flash the image.
  - Load the kernel module manually or via a package.
  - Configure the firewall.

### What Worked and What Didn’t
- **Worked:**
  - TTL standardizing
  - TCP option standardizing
- **Didn’t Work:**
  - ToS/DSCP/Traffic Class clearing
  - ECN clearing
  - URG flag and URG pointer clearing
  - IP ID randomization
  - DF clearing

### End Results
- **Operating System Identification:**
  - Unprotected vs. Protected
  - Examples: Windows 7, Windows Server 2003, Ubuntu Desktop 11.10, Red Hat Enterprise Linux 6, Allied Telesyn AlliedWare, Cisco IOS 12.X, D-Link embedded

### Other Effects
- **Fingerprinting Tools:**
  - Nmap
  - Xprobe2
  - SinFP
  - Nessus
- **Other Tools:**
  - Ping
  - Traceroute

### Challenges and Resolutions
- **Authorized Activity:**
  - IDGuard excludes authorized activity.
- **Banners and Direct Query:**
  - Windows networking available, application-layer query, OS details in reply.
  - Resolution: Perimeter and internal network configurations.
- **Connectivity and Fragmentation:**
  - Upstream and downstream fragmentation issues.
  - Resolution: Access switch placement and excluding fragments.
- **TTL Attenuation and Special Uses:**
  - Resolution: Exclude ICMP echo requests and UDP traceroute range.
- **Link-Local Routing Protocols:**
  - RIP packets have a TTL of 1; a TTL of 255 is abnormal.
  - Resolution: Exclude routing protocols.

### Performance and Stability
- **Concerns:**
  - Poorly coded applications
  - Potential performance impacts
- **Benefits:**
  - Shields from casual attackers, automated assaults, and oblique threats.
  - Protects unmanaged, unpatched, and unhardened systems.
  - Defeats canned exploits.

### What’s Next
- More platforms (e.g., open-source router firmware, Linux-based switches).
- Production trials and vendor discussions.
- Accurate target identification is key to a successful attack, so let’s make it harder with fingerprint prevention.

### Final Thoughts
- Proof of Concept: SHA1 hash is 289256c1b46f7f7443527364ad4a75ee0a072160.
- Updates can be found at [IDGuard SourceForge](http://idguard.sourceforge.net/).

### Links
- [Packet Mangling](http://www.wisegeek.com/what-is-packet-mangling.htm)
- [OpenBSD PF Scrub](http://www.openbsd.gr/faq/pf/scrub.html)
- [Packet Mangling with iptables](http://www.linuxsecurity.com.br/info/fw/PacketManglingwithiptables.doc)
- [Scrubbing](http://chdir.org/~nico/scrub/)
- [Cisco ASA TCP Normalization](http://www.cisco.com/en/US/docs/security/asa/asa82/configuration/guide/conns_tcpnorm.pdf)
- [Cisco ACE TCP/IP Normalization](http://www.cisco.com/en/US/docs/interfaces_modules/services_modules/ace/v3.00_A2/configuration/security/guide/tcpipnrm.pdf)
- [Packet-Level Normalisation](http://www.sans.org/reading_room/whitepapers/intrusion/packet-level-normalisation_1128)
- [Nmap OS Detection Methods](http://nmap.org/book/osdetect-methods.html)
- [RCP100](http://rcp100.sourceforge.net)
- [Mikrotik RB450G](http://wiki.openwrt.org/toh/mikrotik/rb450g)
- [Buildroot Exigence](http://wiki.openwrt.org/doc/howto/buildroot.exigence)
- [OpenWrt Build Guide](http://wiki.openwrt.org/doc/howto/build)
- [Flashing OpenWrt](http://wiki.openwrt.org/doc/devel/crosscompile)

### Special Thanks
- Aditiya Sood
- Kenny Nguyen and E-CQURITY
- Kevin Fogarty
- Kathy Gillette
- Nick Pruitt