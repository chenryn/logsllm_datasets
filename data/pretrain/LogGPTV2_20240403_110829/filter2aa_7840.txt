### 版权声明
版权所有 © 1993 Thomas Koenig (PI:EMAIL)  
版权所有 © 1999 Bruno Haible (PI:EMAIL)

### 许可声明
本手册允许制作和分发原版副本，前提是保留版权声明和许可声明。对于修改后的版本，必须在满足原版复制条件的前提下，将整个衍生作品按照与本许可相同的条款进行分发。

### 免责声明
由于 Linux 内核和库不断变化，本手册页面可能不准确或过时。作者对因使用本文档中的信息而产生的错误、遗漏或损害不承担任何责任。本手册免费提供，作者在编写过程中可能没有像专业工作时那样严谨。

### 致谢
- 1993 年 7 月 24 日 由 Rik Faith (PI:EMAIL) 修改
- 1997 年 7 月 15 日 由 Andries Brouwer (PI:EMAIL) 修改
- 1999 年 7 月 4 日 由 Bruno Haible (PI:EMAIL) 修改
- 1999 年 8 月 24 日 由 Andries Brouwer (PI:EMAIL) 修改
- 2001 年 2 月 6 日 由 Andries Brouwer (PI:EMAIL) 修改

### 手册页
**SETLOCALE(3)** - GNU, Linux Programmer's Manual - 1999-07-04

## 名称
`setlocale` - 设置当前的区域选项

## 概述
```c
#include <locale.h>

char *setlocale(int category, const char *locale);
```

## 描述
`setlocale()` 函数用于设置或查询程序的当前区域选项。

如果 `locale` 不为 `NULL`，则根据参数更改相应的区域选项。`category` 参数指定需要更改的区域选项部分：

- **LC_ALL**：代表所有部分。
- **LC_COLLATE**：代表正则表达式匹配（包括范围表达式和字符类）和字符串排序。
- **LC_CTYPE**：代表正则表达式匹配、字符分类、转换、大小写比较以及宽字符函数。
- **LC_MESSAGES**：代表本地化的消息（自然语言）。
- **LC_MONETARY**：代表货币格式。
- **LC_NUMERIC**：代表数字格式（如小数点和千位分隔符）。
- **LC_TIME**：代表时间和日期格式。

`locale` 参数是一个指向字符串的指针，该字符串表示需要设置的 `category` 的值。此字符串可以是已知的区域选项常量（如 "C" 或 "da_DK"），也可以是另一个 `setlocale` 调用返回的字符串。

如果 `locale` 为空字符串 `""`，则根据环境变量设置相应部分。具体实现有关，对于 glibc 来说，首先检查环境变量 LC_ALL（无论 `category`），然后检查与 `category` 同名的环境变量（如 LC_COLLATE, LC_CTYPE, LC_MESSAGES, LC_MONETARY, LC_NUMERIC, LC_TIME），最后检查环境变量 LANG。以最先找到的有效环境变量为准。如果其值不是一个有效的区域选项，则区域选项不会改变，`setlocale` 返回 `NULL`。

标准区域选项 "C" 和 "POSIX" 是可移植的；它们的 LC_CTYPE 部分对应的是 7 位 ASCII 字符集。

一个典型的区域选项格式如下：
```
language[_territory][.codeset][@modifier]
```
其中：
- `language` 是 ISO 639 语言代码。
- `territory` 是 ISO 3166 国家代码。
- `codeset` 是类似 "ISO-8859-1" 或 "UTF-8" 的字符集或编码标识符。

使用 `locale -a` 可以获取系统支持的区域选项列表。

如果 `locale` 为 `NULL`，则仅查询当前的区域选项而不更改它。

当主程序开始时，默认设置为可移植的 "C" 区域选项。程序可以在初始化后调用 `setlocale(LC_ALL, "")`，并从 `localeconv()` 的返回值中获取与区域选项相关的信息。如果 `MB_CUR_MAX > 1`，则使用多字节和宽字节函数处理文本，并使用 `strcoll()`, `wcscoll()` 或 `strxfrm()`, `wcsxfrm()` 来比较字符串，这样可以使程序具有较好的可移植性。

## 返回值
成功的 `setlocale()` 调用会返回一个表示当前区域选项的字符串（指针）。这个字符串可能是在静态存储区中分配的。之后可以用相应的 `category` 和这个字符串作为参数再次调用该函数，以恢复程序区域选项的相应部分。如果请求不能完成，则返回 `NULL`。

## 遵循
ANSI C, POSIX.1

## 注意
Linux（即 GNU libc）支持可移植的 "C" 和 "POSIX" 区域选项。以前它曾支持欧洲 Latin-1 区域选项 "ISO-8859-1" 和俄罗斯的 "KOI-8" 区域选项。现在非英语的欧洲人需要安装相应的区域选项文件。

## 参见
- `locale(1)`
- `localedef(1)`
- `strcoll(3)`
- `isalpha(3)`
- `localeconv(3)`
- `strftime(3)`
- `charsets(4)`
- `locale(7)`

### 中文版维护人
唐友

### 中文版最新更新
2001/12/2

### 中国Linux论坛man手册页翻译计划
http://cmpp.linuxforum.net