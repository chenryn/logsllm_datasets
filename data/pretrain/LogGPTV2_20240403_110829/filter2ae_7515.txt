# ThinkPHP 6.0 任意文件创建漏洞分析

##### 译文声明
本文为翻译文章，具体内容和含义以原文为准。
作者：[mochazz](https://mochazz.github.io/) @奇安信观星实验室

前两天，我注意到一个关于 **ThinkPHP 6.0** 的漏洞报告：[【安全风险通告】ThinkPHP 6.0 任意文件创建漏洞安全风险通告](https://mp.weixin.qq.com/s/qgjf55CWNXNNzmLQgzUOpQ)。由于没有详细的漏洞细节，只能通过描述及官方的 commit 记录来推断漏洞的具体情况。

## 漏洞环境设置

1. 创建一个新的 ThinkPHP 项目：
   ```bash
   ➜  html composer create-project topthink/think tp60
   ```

2. 将 `tp60/composer.json` 文件中的 `"topthink/framework": "^6.0.*"` 改为 `"topthink/framework": "6.0.0"`，并执行以下命令：
   ```bash
   ➜  tp60 composer update
   ➜  tp60 ./think run --host=0.0.0.0 --port=8000
   ```

3. 修改 `/var/www/html/tp60/app/controller/Index.php` 文件内容。

## 漏洞概述

近日，奇安信补天漏洞响应平台收到了有关 ThinkPHP 6.0 任意文件创建漏洞的报告。该漏洞源于 ThinkPHP 6.0 的某个逻辑问题，攻击者可以利用此漏洞创建或覆盖任意文件，从而导致 Web 应用被破坏（如远程拒绝服务），甚至在特定情况下获取服务器控制权（GetShell）。建议相关单位尽快自查，并升级至修复版本。

### 漏洞原理

根据描述，我们可以推测该漏洞与 session 存储机制有关。在正常请求中，session 文件默认存储在 `/var/www/html/tp60/runtime/session` 目录下，文件名格式类似于 `sess_PHPSESSID`。当我们在 `PHPSESSID` 中插入特殊字符时，程序仍然能够生成对应的 session 文件。因此，这里存在任意文件创建漏洞，且通过插入路径穿越符，还可能导致文件覆盖和 GetShell。

### 漏洞代码分析

在 session 初始化时，程序会将 `PHPSESSID` 对应的值赋给 `thinksessionStore:id`。如果 `PHPSESSID` 的长度等于 32 字节，则无任何过滤直接赋值。随后，在构造响应数据返回给用户之前，程序会将 session 写入文件，而这个文件的文件名则由之前的 `PHPSESSID` 拼接而成。由于没有任何过滤，这就导致了任意文件创建和覆盖的问题。如果 session 数据是可控的，还可以实现 GetShell。

### 利用效果

最终的利用效果如下：
- 任意文件创建
- 文件覆盖
- 在特定情况下可能实现 GetShell

## 招聘信息

奇安信观星实验室常年招聘安全研究员、红队工程师，简历请投递至 [PI:EMAIL]，并在邮件中注明 (姓名+职位)。