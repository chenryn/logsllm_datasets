# ThinkPHP6.0任意文件创建分析
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
作者：[mochazz](https://mochazz.github.io/)@奇安信观星实验室
前两天看到 **ThinkPHP6.0** 的一个漏洞： [【安全风险通告】ThinkPHP 6.0
“任意”文件创建漏洞安全风险通告](https://mp.weixin.qq.com/s/qgjf55CWNXNNzmLQgzUOpQ)
。由于没有漏洞细节，只能通过这些描述及官方 **commit** 记录来还原一下漏洞细节。
## 漏洞环境
    ➜  html composer create-project topthink/think tp60
将 **tp60/composer.json** 文件的 **“topthink/framework”: “^6.0.*”,** 改成 **6.0.0**
版本，并执行如下命令。
    ➜  tp60 composer update
    ➜  tp60 ./think run --host=0.0.0.0 --port=8000
修改 **/var/www/html/tp60/app/controller/Index.php** 文件如下：
     ）
     近日，奇安信补天漏洞响应平台收到ThinkPHP 6.0 “任意”文件创建漏洞，该漏洞源于ThinkPHP
> 6.0的某个逻辑漏洞，成功利用此漏洞的攻击者可以实现“任意”文件创建或覆盖，可能造成 Web 应用被破坏（远程拒绝服务），特殊场景下还可造成
> GetShell。建议各单位自查，并尽快升级至修复版本。
所以我们很容易想到该漏洞可能和文件存储 **session** 有关。我们发送正常数据包时，会发现 **session** 文件默认存储在
**/var/www/html/tp60/runtime/session** 下，其文件名格式类似 **sess_PHPSESSID** 。而当我们在
**PHPSESSID**
中插入特殊字符时，程序还是能正常生成对应文件。因此，这里存在任意文件创建漏洞，且通过插入路径穿越符，还存在文件覆盖和getshell的可能。
下面我们来看具体的漏洞代码。在 **session** 初始化时，程序会将 **PHPSESSID** 对应的值赋值给
**thinksessionStore:id** 。这里如果 **PHPSESSID** 对应值长度等于32，则无任何过滤直接赋值。
然后在程序构造响应数据返回给用户时，会先将 **session** 写入文件，而这个文件的文件名则由之前的 **PHPSESSID**
拼接而成。由于没有任何的过滤，这也就造成了任意文件创建、覆盖。如果在 **session** 数据可控的情况下，还能达到 **getshell** 的目的。
最终利用效果如下：
**招聘信息：奇安信观星实验室常年招聘安全研究员、红队工程师，简历投递至[PI:EMAIL](mailto:PI:EMAIL)
，投递注明( 姓名+职位)**