```bash
# add repo
helm repo add feisky https://feisky.xyz/kubernetes-charts
helm update
# install packages
helm install feisky/node-problem-detector --namespace kube-system --name npd
```
## Node 重启守护进程
Kubernetres 集群中的节点通常会开启自动安全更新，这样有助于尽可能避免因系统漏洞带来的损失。但一般来说，涉及到内核的更新需要重启系统才可生效。此时，就需要手动或自动的方法来重启节点。
[Kured \(KUbernetes REboot Daemon\)](https://github.com/weaveworks/kured) 就是这样一个守护进程，它会
* 监控 `/var/run/reboot-required` 信号后重启节点
* 通过 DaemonSet Annotation 的方式每次仅重启一台节点
* 重启前驱逐节点，重启后恢复调度
* 根据 Prometheus 告警 \(`--alert-filter-regexp=^(RebootRequired|AnotherBenignAlert|...$`\) 取消重启
* Slack 通知
部署方法
```bash
kubectl apply -f https://github.com/weaveworks/kured/releases/download/1.0.0/kured-ds.yaml
```
## 其他容器监控系统
除了以上监控工具，还有很多其他的开源或商业系统可用来辅助监控，如
* [Sysdig](http://blog.kubernetes.io/2015/11/monitoring-Kubernetes-with-Sysdig.html)
* [Weave scope](https://www.weave.works/docs/scope/latest/features/)
* [Datadog](https://www.datadoghq.com/)
* [Sematext](https://sematext.com/)
### sysdig
sysdig 是一个容器排错工具，提供了开源和商业版本。对于常规排错来说，使用开源版本即可。
除了 sysdig，还可以使用其他两个辅助工具
* csysdig：与 sysdig 一起自动安装，提供了一个命令行界面
* [sysdig-inspect](https://github.com/draios/sysdig-inspect)：为 sysdig 保存的跟踪文件（如 `sudo sysdig -w filename.scap`）提供了一个图形界面（非实时）
#### 安装 sysdig
```bash
# on Linux
curl -s https://s3.amazonaws.com/download.draios.com/stable/install-sysdig | sudo bash
# on MacOS
brew install sysdig
```
使用示例
```bash
# Refer https://www.sysdig.org/wiki/sysdig-examples/.
# View the top network connections for a single container
sysdig -pc -c topconns
# Show the network data exchanged with the host 192.168.0.1
sysdig -s2000 -A -c echo_fds fd.cip=192.168.0.1
# List all the incoming connections that are not served by apache.
sysdig -p"%proc.name %fd.name" "evt.type=accept and proc.name!=httpd"
# View the CPU/Network/IO usage of the processes running inside the container.
sysdig -pc -c topprocs_cpu container.id=2e854c4525b8
sysdig -pc -c topprocs_net container.id=2e854c4525b8
sysdig -pc -c topfiles_bytes container.id=2e854c4525b8
# See the files where apache spends the most time doing I/O
sysdig -c topfiles_time proc.name=httpd
# Show all the interactive commands executed inside a given container.
sysdig -pc -c spy_users
# Show every time a file is opened under /etc.
sysdig evt.type=open and fd.name
```
### Weave Scope
Weave Scope 是另外一款可视化容器监控和排错工具。与 sysdig 相比，它没有强大的命令行工具，但提供了一个简单易用的交互界面，自动描绘了整个集群的拓扑，并可以通过插件扩展其功能。从其官网的介绍来看，其提供的功能包括
* [交互式拓扑界面](https://www.weave.works/docs/scope/latest/features/#topology-mapping)
* [图形模式和表格模式](https://www.weave.works/docs/scope/latest/features/#mode)
* [过滤功能](https://www.weave.works/docs/scope/latest/features/#flexible-filtering)
* [搜索功能](https://www.weave.works/docs/scope/latest/features/#powerful-search)
* [实时度量](https://www.weave.works/docs/scope/latest/features/#real-time-app-and-container-metrics)
* [容器排错](https://www.weave.works/docs/scope/latest/features/#interact-with-and-manage-containers)
* [插件扩展](https://www.weave.works/docs/scope/latest/features/#custom-plugins)
Weave Scope 由 [App 和 Probe 两部分](https://www.weave.works/docs/scope/latest/how-it-works)组成，它们
* Probe 负责收集容器和宿主的信息，并发送给 App
* App 负责处理这些信息，并生成相应的报告，并以交互界面的形式展示
```bash
                    +--Docker host----------+      +--Docker host----------+
.---------------.   |  +--Container------+  |      |  +--Container------+  |
| Browser       |   |  |                 |  |      |  |                 |  |
|---------------|   |  |  +-----------+  |  |      |  |  +-----------+  |  |
|               |----->|  | scope-app || scope-app |  |  |
|               |   |  |  +-----------+  |  | \  / |  |  +-----------+  |  |
|               |   |  |        ^        |  |  \/  |  |        ^        |  |
'---------------'   |  |        |        |  |  /\  |  |        |        |  |
                    |  | +-------------+ |  | /  \ |  | +-------------+ |  |
                    |  | | scope-probe |-----'    '-----| scope-probe | |  |
                    |  | +-------------+ |  |      |  | +-------------+ |  |
                    |  |                 |  |      |  |                 |  |
                    |  +-----------------+  |      |  +-----------------+  |
                    +-----------------------+      +-----------------------+
```
#### 安装 Weave scope
```bash
kubectl apply -f "https://cloud.weave.works/k8s/scope.yaml?k8s-version=$(kubectl version | base64 | tr -d '\n')&k8s-service-type=LoadBalancer"
```
安装完成后，可以通过 weave-scope-app 来访问交互界面
```bash
kubectl -n weave get service weave-scope-app
```
![](../../.gitbook/assets/weave-scope%20%282%29.png)
点击 Pod，还可以查看该 Pod 所有容器的实时状态和度量数据：
![](../../.gitbook/assets/scope-pod%20%284%29.png)
## 参考文档
* [Kubernetes Heapster](https://github.com/kubernetes/heapster)