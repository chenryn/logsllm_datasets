I'm currently debugging why a particular test suite takes 26s in Deno when it
should be faster. Noticed that we spend about 55% of the time on the
`realpath` syscall. The majority of those are coming from
`ensure_registry_read_permission` which tends to trigger two `realpath`
syscalls pretty frequently.
deno/cli/npm/resolvers/common.rs
Lines 93 to 120 in d43e75c
|  pub fn ensure_registry_read_permission(  
---|---  
|  fs: &Arc,  
|  permissions: &dyn NodePermissions,  
|  registry_path: &Path,  
|  path: &Path,  
|  ) -> Result {  
|  // allow reading if it's in the node_modules  
|  if path.starts_with(registry_path)  
|  && path  
|  .components()  
|  .all(|c| !matches!(c, std::path::Component::ParentDir))  
|  {  
|  // todo(dsherret): cache this?  
|  if let Ok(registry_path) = fs.realpath_sync(registry_path) {  
|  match fs.realpath_sync(path) {  
|  Ok(path) if path.starts_with(registry_path) => {  
|  return Ok(());  
|  }  
|  Err(e) if e.kind() == ErrorKind::NotFound => {  
|  return Ok(());  
|  }  
|  _ => {} // ignore  
|  }  
|  }  
|  }  
|  
|  permissions.check_read(path)  
|  }  
In my case the `node_modules` branch inside the if-statement is hit about 100k
times. The first `realpath` call checks the registry path which is always the
exact same path for me. The second call against `path` has lots of duplicated
checks too. Did a little analysis and here is a list of the top paths which
are checked repeatedly.
    7084 "/project/node_modules/.deno/happy-dom@9.20.3/node_modules/happy-dom/package.json"
    4660 "/project/node_modules/.deno/@blueprintjs+icons@4.16.0/node_modules/@blueprintjs/package.json"
    2320 "/project/node_modules/.deno/@blueprintjs+icons@4.16.0/node_modules/@blueprintjs/icons/lib/cjs/generated-icons/20px/paths"
    2320 "/project/node_modules/.deno/@blueprintjs+icons@4.16.0/node_modules/@blueprintjs/icons/lib/cjs/generated-icons/16px/paths"
    1952 "/project/node_modules/.deno/@testing-library+user-event@14.4.3/node_modules/@testing-library/user-event/dist/esm/package.json"
    1628 "/project/node_modules/.deno/aria-query@5.1.3/node_modules/aria-query/package.json"
    1536 "/project/node_modules/.deno/date-fns@2.30.0/node_modules/date-fns/package.json"
     902 "/project/node_modules/.deno/aria-query@5.1.3/node_modules/aria-query/lib/etc/roles/literal"
     655 "/project/node_modules/.deno/@testing-library+dom@9.3.0/node_modules/@testing-library/package.json"
     491 "/project/node_modules/.deno/date-fns@2.30.0/node_modules/date-fns/node_modules"
     491 "/project/node_modules/.deno/date-fns@2.30.0/node_modules/@babel/runtime/package.json"
     429 "/project/node_modules/.deno/aria-query@5.1.3/node_modules/aria-query/lib/etc/roles/dpub"
     374 "/project/node_modules/.deno/call-bind@1.0.2/node_modules/call-bind/package.json"
     352 "/project/node_modules/.deno/react@18.2.0/node_modules/react/package.json"
Commenting out the `realpath` calls inside `ensure_registry_read_permission`
brings down the total test time from 26s to 16s. This leads me to conclude
that caching that is very much worth it. There is an older comment by
@dsherret which hints at potential gains by caching that already.
![Screenshot 2023-05-28 at 08 27 54](https://user-
images.githubusercontent.com/1062408/241506668-2c42bc53-da97-44d1-b6e3-b4bd4d2161bf.png)