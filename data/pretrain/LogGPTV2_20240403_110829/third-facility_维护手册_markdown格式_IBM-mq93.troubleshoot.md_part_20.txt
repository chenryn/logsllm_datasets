To modify any of the connection properties that are used when creating an MQQueueManager, you need
to carry out the following steps:
1.Create a properties file called mqclassesforjava.config.
2.Enable the connection property override functionality by setting the OverrideConnectionDetails
property to true.
3.Start the application, specifying the configuration file as part of the Java invocation.
Procedure
1.Create a properties file called mqclassesforjava.config containing the properties and values that
need to be overridden.
It is possible to override 13 properties that are used by the IBM MQ classes for Java when connecting
to a queue manager as part of the MQQueueManager constructor.
120 Troubleshooting and Support for IBM MQ
Table 3. Properties that can be overridden
Property Property key
CCSID $CCSID_PROPERTY
Channel $CHANNEL_PROPERTY
Connect options $CONNECT_OPTIONS_PROPERTY
Hostname $HOST_NAME_PROPERTY
SSL key reset $SSL_RESET_COUNT_PROPERTY
Local address $LOCAL_ADDRESS_PROPERTY
Queue manager name qmgr
Password $PASSWORD_PROPERTY
Port $PORT_PROPERTY
Cipher suite $SSL_CIPHER_SUITE_PROPERTY
FIPS required $SSL_FIPS_REQUIRED_PROPERTY
SSL peer name $SSL_PEER_NAME_PROPERTY
User ID $USER_ID_PROPERTY
Application name $APPNAME_PROPERTY
Notes:
a.All of the property keys start with the $ character, except for the queue manager name. The reason
for this is because the queue manager name is passed in to the MQQueueManager constructor
as an argument, rather than being set as either a static field on the MQEnvironment class, or a
property in a Hashtable, and so internally this property needs to be treated slightly differently
from the other properties.
b.Property keys starting with the $ character are processed by reference to the constant values
defined in MQConstants.java, as discussed in the preceding text.
You can, but should not, use the literal values of these constants, in which case the $ character is
omitted
To override a property, add an entry in the following format to the properties file:
mqj.property key=value
For example, to set the name of the channel to be used when creating MQQueueManager objects, you
can add the following entry to the properties file:
mqj.$CHANNEL_PROPERTY=MY.NEW.CHANNEL
To change the name of the queue manager that an MQQueueManager object connects to, you can add
the following entry to the properties file:
mqj.qmgr=MY.OTHER.QMGR
2.Enable the connection override functionality by setting the
com.ibm.mq.overrideConnectionDetails property to be true.
Setting the property com.ibm.mq.overrideConnectionDetails to be true means that the
properties that are specified in the properties file are used to override the values specified in the
IBM MQ troubleshooting and support 121
application. You can either set the extra property as another property in the configuration file itself, or
pass the property as a system property, by using:
-Dcom.ibm.mq.overrideConnectionDetails=true
Applications that need to set a specific application name with IBM MQ can do so in one of three ways:
• Using the override mechanism described in the preceding text, define the
mqj.$APPNAME_PROPERTY property.
The value of the mqj.$APPNAME_PROPERTY property specifies the name used to identify the
connection to the queue manager, with only the first 28 characters being used. For example:
mqj.$APPNAME_PROPERTY=ExampleApplName
Note: You might see examples using the literal value of the property name, for example in older
documentation. For example, mqj.APPNAME=ExampleApplName.
• You can pass this value to the MQQueueManager constructor in the properties HashTable, with
only the first 28 characters being used. For example:
Hashtable properties = new Hashtable();
properties.Add( MQConstants.APPNAME_PROPERTY, "ExampleApplName" );
MQQueueManager qMgr = new MQQueueManager("qmgrname", properties);
• You can set the AppName property in the MQEnvironment class, with only the first 28 characters
being used. For example:
MQEnvironment.AppName = "ExampleApplName";
3.Start the application.
Pass the properties file you created to the client application at run time by setting the Java system
property:
-Dcom.ibm.msg.client.config.location
Note that the location of the configuration file must be specified as a URI, for example:
-Dcom.ibm.msg.client.config.location=file:///classesforjava/mqclassesforjava.config
Overriding connection properties: example with IBM MQ classes for JMS
This example shows how to override properties when you are using the IBM MQ classes for JMS.
About this task
The following code example shows how an application creates a ConnectionFactory programmatically:
JmsSampleApp.java
...
JmsFactoryFactory jmsff;
JmsConnectionFactory jmsConnFact;
jmsff = JmsFactoryFactory.getInstance(JmsConstants.WMQ_PROVIDER);
jmsConnFact = jmsff.createConnectionFactory();
jmsConnFact.setStringProperty(WMQConstants.WMQ_HOST_NAME,"127.0.0.1");
jmsConnFact.setIntProperty(WMQConstants.WMQ_PORT, 1414);
jmsConnFact.setStringProperty(WMQConstants.WMQ_QUEUE_MANAGER,"QM_V80");
jmsConnFact.setStringProperty(WMQConstants.WMQ_CHANNEL,"MY.CHANNEL");
jmsConnFact.setIntProperty(WMQConstants.WMQ_CONNECTION_MODE,
WMQConstants.WMQ_CM_CLIENT);
...
122 Troubleshooting and Support for IBM MQ
The ConnectionFactory is configured to connect to the queue manager QM_V80 using the CLIENT
transport and channel MY.CHANNEL.
You can override the connection details by using a properties file, and force the application to connect to a
different channel, by using the following procedure.
Procedure
1.Create an IBM MQ classes for JMS configuration file that is called jms.config in the /userHome
directory (where userHome is your home directory).
Create this file with the following contents:
jmscf.CHANNEL=MY.TLS.CHANNEL
jmscf.SSLCIPHERSUITE=TLS_RSA_WITH_AES_128_CBC_SHA256
2.Run the application, passing the following Java system properties into the Java runtime environment
that the application is running in:
-Dcom.ibm.msg.client.config.location=file:///userHome/jms.config
-Dcom.ibm.msg.client.jms.overrideConnectionFactory=true
Results
Carrying out this procedure overrides the ConnectionFactory that was created programmatically by the
application, so that when the application creates a connection, it tries to connect by using the channel
MY.TLS.CHANNEL and the cipher suite TLS_RSA_WITH_AES_128_CBC_SHA256.
Related tasks
“Using IBM MQ connection property override” on page 116
Connection property override allows you to change the details that are used by a client application to
connect to a queue manager, without modifying the source code.
“Using connection property override in IBM MQ classes for JMS” on page 117
If a connection factory is created programmatically, and it is not possible to modify the source code
for the application that creates it, then the connection override functionality can be used to change
the properties that the connection factory uses when a connection is created. However, the use of the
connection override functionality with connection factories defined in JNDI is not supported.
“Using connection property override in IBM MQ classes for Java” on page 119
In the IBM MQ classes for Java, connection details are set as properties using a combination of different
values. The connection override functionality can be used to override the connection details that an
application uses if it is not possible to modify the source code for the application.
Troubleshooting Managed File Transfer problems
Use this information to help you to diagnose errors in Managed File Transfer.
Related tasks
“Tracing Managed File Transfer resources on Multiplatforms” on page 443
The trace facility in Managed File Transfer is provided to help IBM Support diagnose your problems and
issues. You can trace various different resources.
“Tracing Managed File Transfer for z/OS resources” on page 450
The trace facility in Managed File Transfer for z/OS is provided to help IBM Support diagnose your
problems and issues. You can trace various different resources.
“Collecting information for Managed File Transfer problems” on page 335
IBM MQ troubleshooting and support 123
If you need assistance from IBM Support to resolve a problem when a Managed File Transfer agent,
database logger or other command is reporting a problem or failing to work properly on Multiplatforms,
you first need to collect troubleshooting information to send to IBM Support to help find a solution.
Related reference
MFT commands
Hints and tips for using MFT
Here are some suggestions to help you to make best use of Managed File Transfer
• If you change the agent.properties file, stop and restart the agent to pick up the changes.
• If you start a file transfer and there is no sign of transfer progress and no errors are reported, check that
the source agent is running. If the transfer is shown but does not progress, check that the destination
agent is also running. You can check the current state of agents in the agent log or verify that the agent
is active with an ftePingAgent command.
• When you cancel an individual transfer using the fteCancelTransfer command, you can use either
the source or destination agent in the -agentName parameter. However, when you delete a transfer
schedule using the fteDeleteScheduledTransfer command, you must use the source agent name
in the -agentName parameter.
• When you create a file transfer the source and destination file paths, either absolute or relative,
are significant only on the source and destination agents. The system and directory that the
fteCreateAgent command is issued from has no relevance to the file being transferred.
• When you use Managed File Transfer to transfer files in text mode between different platforms, the
default file encoding of the source platform might not be supported by the destination platform. This
causes a transfer to fail with the following error:
BFGIO0058E: The transfer source encoding xxx is illegal or for an unsupported character set.
You can resolve this error by setting the source encoding to one that is supported by the destination
platform using an environment variable. Set the BFG_JVM_PROPERTIES system environment variable
on the source system as follows: BFG_JVM_PROPERTIES="-Dfile.encoding=xxx", where xxx is
an encoding supported by the destination platform. For example, if you are transferring files in text
mode to a different platform and the source locale is set to "ja", set BFG_JVM_PROPERTIES as follows:
BFG_JVM_PROPERTIES="-Dfile.encoding=EUC-JP". If the source locale is set to "ja_JP.PCK", set
BFG_JVM_PROPERTIES as follows: BFG_JVM_PROPERTIES="-Dfile.encoding=Shift_JIS".
You can also resolve this error for an individual transfer by using the -sce parameter when you start a
new transfer. For more information, see fteCreateTransfer: start a new file transfer.
Related reference
Java system properties for MFT
Return codes for MFT
Managed File Transfer commands, Ant tasks, and log messages provide return codes to indicate whether
functions have successfully completed.
The following table lists the product return codes with their meanings:
Table 4. MFT return codes
Return code Short name Description
0 Success The command was successful
1 Command unsuccessful The command ended
unsuccessfully.
124 Troubleshooting and Support for IBM MQ
Table 4. MFT return codes (continued)
Return code Short name Description
2 Command timed out The agent did not reply with
the status of the command
within a specified timeout. By
default, this timeout is unlimited
for managed call and transfer
commands. For example, when
you specify the -w parameter
with the fteCreateTransfer
command. By default, this
timeout is 5 seconds for other
commands.
3 Acknowledgement timed out The agent did not acknowledge
receipt of the command within
a specified timeout. By default,
this timeout is 5 seconds.
4 Wrong agent The command was sent to
the wrong agent. The agent
specified in the command XML is
not the agent that is reading the
command queue, on which the
message was placed.
20 Transfer partially successful The transfer completed with
partial success and some files
were transferred.
21 Transfer stopped The transfer was stopped by one
of the user exits.
22 Cancel transfer timed out The agent received a request
to cancel a transfer but the
cancellation could not be
completed within 30 seconds.
The transfer was not canceled.
26 Cancel ID not found The agent received a request to
cancel a transfer but the transfer
cannot be found. This might be
because the transfer completed
before the cancel request was
processed by the agent. It might
also be caused because you
supplied an incorrect transfer
ID to the fteCancelTransfer
command. The cancel request
was ignored.
27 Cancel in progress The agent received a request
to cancel a transfer, but the
transfer is already in the process
of being canceled. The new
cancel transfer request was
ignored.
IBM MQ troubleshooting and support 125
Table 4. MFT return codes (continued)
Return code Short name Description
40 Failed The transfer failed and none
of the files specified were
transferred.
41 Cancelled The transfer was canceled.
42 Trigger failed The transfer did not take
place because the transfer was
conditional and the required
condition was not met.
43 Malformed XML An XML message was
malformed.
44 Source agent capacity exceeded The source agent did not have
sufficient capacity to carry out
the transfer.
45 Destination agent capacity The destination agent did not
exceeded have sufficient capacity to carry
out the transfer.
46 Source agent maximum number The number of files being
of files exceeded transferred exceeded the limit of
the source agent.
47 Destination agent maximum The number of files transferred
number of files exceeded exceeded the limit of the
destination agent.
48 Invalid log message attributes A log message is malformed.
This error is an internal error.
If you receive this return code
contact the IBM support center
for further assistance.
49 Destination unreachable The source agent is unable send
a message to the destination
agent due to an IBM MQ
problem. For example if the
source agent queue manager
has not been configured
correctly to communicate with
the destination agent queue
manager.
50 Trial version violation An attempt was made by a trial
version agent to communicate
with an agent that is not a trial
version agent.
51 Source transfer not permitted The maxSourceTransfers
agent property has been set to
0. It is not permitted for this
agent to be the source of any
transfers.
126 Troubleshooting and Support for IBM MQ
Table 4. MFT return codes (continued)
Return code Short name Description
52 Destination transfer not The
permitted maxDestinationTransfers
agent property has been set to
0. It is not permitted for this
agent to be the destination for
any transfers.
53 Not authorized The user is not authorized
to perform the operation. See
the accompanying message for