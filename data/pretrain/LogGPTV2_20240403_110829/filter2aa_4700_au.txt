        goto LAB_00407404;
      }
      *(int *)((int)this + 0x14) = *(int *)((int)this + 0x14) + 4;
      if ((*(uint *)((int)this + 0x20) >> 4 & 1) == 0) {
        uVar3 = *(uint *)(*(int *)((int)this + 0x14) + -4);
        uVar6 = 0;
        goto LAB_00407404;
      }
      uVar3 = *(uint *)(*(int *)((int)this + 0x14) + -4);
    }
  }
  uVar6 = (int)uVar3 >> 0x1f;
LAB_00407404:
  uVar5 = *(uint *)((int)this + 0x20);
  if ((((uVar5 >> 4 & 1) != 0) && ((int)uVar6 > 7);
  if ((((uint)pcVar4 & 1) != 0) &&
     ((*(int *)((int)this + 0x38) == 0 || (pcVar4 = *(char **)((int)this + 0x34), *pcVar4 != '0'))))
  {
    *(int *)((int)this + 0x34) = *(int *)((int)this + 0x34) + -1;
    **(undefined **)((int)this + 0x34) = 0x30;
    *(int *)((int)this + 0x38) = *(int *)((int)this + 0x38) + 1;
  }
  return CONCAT31((int3)((uint)pcVar4 >> 8),1);
}
uint __thiscall FUN_004074a1(void *this,uint param_1,byte param_2)
{
  int iVar1;
  undefined4 *puVar2;
  uint uVar3;
  short *psVar4;
  uint uVar5;
  uint uVar6;
  bool bVar7;
  iVar1 = FUN_00406e52(*(undefined4 *)((int)this + 0x2c));
  if (iVar1 == 1) {
    *(int *)((int)this + 0x14) = *(int *)((int)this + 0x14) + 4;
    if ((*(uint *)((int)this + 0x20) >> 4 & 1) == 0) {
      uVar3 = (uint)*(byte *)(*(int *)((int)this + 0x14) + -4);
    }
    else {
      uVar3 = SEXT14(*(char *)(*(int *)((int)this + 0x14) + -4));
    }
  }
  else {
    if (iVar1 == 2) {
      *(int *)((int)this + 0x14) = *(int *)((int)this + 0x14) + 4;
      if ((*(uint *)((int)this + 0x20) >> 4 & 1) == 0) {
        uVar3 = (uint)*(ushort *)(*(int *)((int)this + 0x14) + -4);
      }
      else {
        uVar3 = SEXT24(*(short *)(*(int *)((int)this + 0x14) + -4));
      }
    }
    else {
      if (iVar1 != 4) {
        if (iVar1 != 8) {
          puVar2 = (undefined4 *)FUN_00407f40();
          *puVar2 = 0x16;
          uVar3 = FUN_00407e83();
          return uVar3 & 0xffffff00;
        }
        *(int *)((int)this + 0x14) = *(int *)((int)this + 0x14) + 8;
        uVar3 = *(uint *)(*(int *)((int)this + 0x14) + -8);
        uVar6 = *(uint *)(*(int *)((int)this + 0x14) + -4);
        goto LAB_00407557;
      }
      *(int *)((int)this + 0x14) = *(int *)((int)this + 0x14) + 4;
      if ((*(uint *)((int)this + 0x20) >> 4 & 1) == 0) {
        uVar3 = *(uint *)(*(int *)((int)this + 0x14) + -4);
        uVar6 = 0;
        goto LAB_00407557;
      }
      uVar3 = *(uint *)(*(int *)((int)this + 0x14) + -4);
    }
  }
  uVar6 = (int)uVar3 >> 0x1f;
LAB_00407557:
  uVar5 = *(uint *)((int)this + 0x20);
  if ((((uVar5 >> 4 & 1) != 0) && ((int)uVar6 > 7);
  if ((((uint)psVar4 & 1) != 0) &&
     ((*(int *)((int)this + 0x38) == 0 || (psVar4 = *(short **)((int)this + 0x34), *psVar4 != 0x30))
     )) {
    *(int *)((int)this + 0x34) = *(int *)((int)this + 0x34) + -2;
    **(undefined2 **)((int)this + 0x34) = 0x30;
    *(int *)((int)this + 0x38) = *(int *)((int)this + 0x38) + 1;
  }
  return CONCAT31((int3)((uint)psVar4 >> 8),1);
}
// Library Function - Multiple Matches With Same Base Name
// Name: type_case_n
// Library: Visual Studio 2015 Release
uint __fastcall type_case_n(int param_1)
{
  uint *puVar1;
  int iVar2;
  undefined4 *puVar3;
  uint uVar4;
  *(int *)(param_1 + 0x14) = *(int *)(param_1 + 0x14) + 4;
  puVar1 = *(uint **)(*(int *)(param_1 + 0x14) + -4);
  iVar2 = __get_printf_count_output();
  if (iVar2 == 0) {
LAB_00407611:
    puVar3 = (undefined4 *)FUN_00407f40();
    *puVar3 = 0x16;
    uVar4 = FUN_00407e83();
    uVar4 = uVar4 & 0xffffff00;
  }
  else {
    iVar2 = FUN_00406e52(*(undefined4 *)(param_1 + 0x2c));
    if (iVar2 == 1) {
      uVar4 = 0;
      *(undefined *)puVar1 = *(undefined *)(param_1 + 0x18);
    }
    else {
      if (iVar2 == 2) {
        uVar4 = (uint)*(ushort *)(param_1 + 0x18);
        *(ushort *)puVar1 = *(ushort *)(param_1 + 0x18);
      }
      else {
        if (iVar2 == 4) {
          uVar4 = *(uint *)(param_1 + 0x18);
          *puVar1 = uVar4;
        }
        else {
          if (iVar2 != 8) goto LAB_00407611;
          uVar4 = *(uint *)(param_1 + 0x18);
          *puVar1 = uVar4;
          puVar1[1] = (int)uVar4 >> 0x1f;
        }
      }
    }
    *(undefined *)(param_1 + 0x30) = 1;
    uVar4 = CONCAT31((int3)(uVar4 >> 8),1);
  }
  return uVar4;
}
// Library Function - Multiple Matches With Same Base Name
// Name: type_case_o
// Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release
void __fastcall type_case_o(void *param_1)
{
  if ((*(uint *)((int)param_1 + 0x20) >> 5 & 1) != 0) {
    *(uint *)((int)param_1 + 0x20) = *(uint *)((int)param_1 + 0x20) | 0x80;
  }
  FUN_0040734e(param_1,8,0);
  return;
}
// Library Function - Multiple Matches With Same Base Name
// Name: type_case_o
// Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release
void __fastcall type_case_o(void *param_1)
{
  if ((*(uint *)((int)param_1 + 0x20) >> 5 & 1) != 0) {
    *(uint *)((int)param_1 + 0x20) = *(uint *)((int)param_1 + 0x20) | 0x80;
  }
  FUN_004074a1(param_1,8,0);
  return;
}
void __fastcall FUN_004076aa(void *param_1)
{
  *(undefined4 *)((int)param_1 + 0x28) = 8;
  *(undefined4 *)((int)param_1 + 0x2c) = 10;
  FUN_0040734e(param_1,0x10,1);
  return;
}
void __fastcall FUN_004076c2(void *param_1)
{
  *(undefined4 *)((int)param_1 + 0x28) = 8;
  *(undefined4 *)((int)param_1 + 0x2c) = 10;
  FUN_004074a1(param_1,0x10,1);
  return;
}
undefined4 __fastcall FUN_004076da(undefined4 *param_1)
{
  uint uVar1;
  undefined4 uVar2;
  int iVar3;
  char *pcVar4;
  param_1[5] = param_1[5] + 4;
  iVar3 = param_1[10];
  pcVar4 = *(char **)(param_1[5] + -4);
  *(char **)(param_1 + 0xd) = pcVar4;
  if (iVar3 == -1) {
    iVar3 = 0x7fffffff;
  }
  uVar1 = FUN_00405a94(*param_1,param_1[1],*(char *)((int)param_1 + 0x31),param_1[0xb]);
  if ((char)uVar1 == 0) {
    if ((wchar_t *)pcVar4 == (wchar_t *)0x0) {
      pcVar4 = "(null)";
      param_1[0xd] = 0x417ba4;
    }
    uVar2 = FUN_0040afdb(pcVar4,iVar3);
  }
  else {
    if ((wchar_t *)pcVar4 == (wchar_t *)0x0) {
      param_1[0xd] = 0x417b94;
      pcVar4 = (char *)L"(null)";
    }
    *(undefined *)(param_1 + 0xf) = 1;
    uVar2 = FUN_0040b0fd(pcVar4,iVar3);
  }
  param_1[0xe] = uVar2;
  return CONCAT31((int3)((uint)uVar2 >> 8),1);
}
undefined4 __fastcall FUN_0040774b(uint *param_1)
{
  uint uVar1;
  uint uVar2;
  wchar_t *pwVar3;
  param_1[5] = param_1[5] + 4;
  uVar2 = param_1[10];
  pwVar3 = *(wchar_t **)(param_1[5] - 4);
  *(wchar_t **)(param_1 + 0xd) = pwVar3;
  if (uVar2 == 0xffffffff) {
    uVar2 = 0x7fffffff;
  }
  uVar1 = FUN_00405ac5(*param_1,param_1[1],*(short *)((int)param_1 + 0x32),param_1[0xb]);
  if ((char)uVar1 == 0) {
    if (pwVar3 == (wchar_t *)0x0) {
      param_1[0xd] = 0x417ba4;
    }
    uVar2 = FUN_004077be(param_1,uVar2);
  }
  else {
    if (pwVar3 == (wchar_t *)0x0) {
      pwVar3 = L"(null)";
      param_1[0xd] = 0x417b94;
    }
    *(undefined *)(param_1 + 0xf) = 1;
    uVar2 = FUN_0040b0fd(pwVar3,uVar2);
  }
  param_1[0xe] = uVar2;
  return CONCAT31((int3)(uVar2 >> 8),1);
}
int __thiscall FUN_004077be(void *this,int param_1)
{
  uint uVar1;
  byte *pbVar2;
  int iVar3;
  iVar3 = 0;
  pbVar2 = *(byte **)((int)this + 0x34);
  if (0 > 8),1);
}
uint __fastcall FUN_00407841(int iParm1)
{
  undefined4 in_EAX;
  undefined4 *puVar1;
  uint uVar2;
  if ((*(int *)(iParm1 + 0x1c) != 0) && (*(int *)(iParm1 + 0x1c) != 7)) {
    puVar1 = (undefined4 *)FUN_00407f40();
    *puVar1 = 0x16;
    uVar2 = FUN_00407e83();
    return uVar2 & 0xffffff00;
  }
  return CONCAT31((int3)((uint)in_EAX >> 8),1);
}
uint __cdecl FUN_00407863(FILE *param_1)
{
  uint uVar1;
  undefined4 *puVar2;
  undefined *puVar3;
  undefined *puVar4;
  uVar1 = (uint)param_1->_flag >> 0xc;
  if ((uVar1 & 1) == 0) {
    uVar1 = __fileno(param_1);
    puVar3 = &DAT_0041e100;
    if ((uVar1 == 0xffffffff) || (uVar1 == 0xfffffffe)) {
      puVar4 = &DAT_0041e100;
    }
    else {
      puVar4 = (undefined *)((uVar1 & 0x3f) * 0x38 + (&DAT_0041f080)[(int)uVar1 >> 6]);
    }
    if (puVar4[0x29] == 0) {
      if ((uVar1 != 0xffffffff) && (uVar1 != 0xfffffffe)) {
        puVar3 = (undefined *)((uVar1 & 0x3f) * 0x38 + (&DAT_0041f080)[(int)uVar1 >> 6]);
      }
      if ((puVar3[0x2d] & 1) == 0) goto LAB_004078e5;