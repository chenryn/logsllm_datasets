### Title: All You Ever Wanted to Know about the AMD Platform Security Processor and Were Afraid to Emulate - Inside a Deeply Embedded Security Processor

AMD's Zen (and later) CPUs incorporate the "(Platform) Secure Processor" (PSP), an embedded ARM core within the x86 CPU. The PSP is active even before the main x86 cores and has full access to the system's main memory. During system runtime, it serves as a trust anchor for features such as AMD's "Secure Encrypted Virtualization" and a generic Trusted Execution Environment (TEE) interface, for which Linux kernel patches are currently in development.

The firmware running on the PSP is entirely proprietary, and there is minimal public documentation available. These factors have motivated us to conduct a thorough investigation of this critical component.

Over the past two years, we have reverse-engineered several components of the PSP firmware and hardware to understand its capabilities and identify potential security vulnerabilities. Our efforts have uncovered multiple security issues that allow us to execute arbitrary code on the PSP.

Recently, we developed an emulator for the PSP. This emulator enables us to trace the execution of the firmware and facilitates the development and testing of our own code, which can be executed on the PSP by exploiting the identified security issues. The emulator can run both the on-chip and off-chip bootloaders used to initialize the system. In the emulated environment, it is possible to place the firmware into a debug mode where signature verifications are disabled, and additional debug output is generated.

We will also present a mode where a stub runs on the physical PSP, taking commands from the emulator to forward hardware accesses from the firmware. This setup allows the real system to be booted using the firmware running inside the emulator.

All the tools we have developed, including the emulator, are open source and available on GitHub: [https://github.com/PSPReverse](https://github.com/PSPReverse)