### References

- **C. Meadows.** A More Efficient Cryptographic Matchmaking Protocol for Use in the Absence of a Continuously Available Third Party. *1986 IEEE Symposium on Security and Privacy*, pages 134–134, April 1986.

- **Martin M. Merener.** Theoretical Results on De-anonymization via Linkage Attacks. *Trans. Data Privacy*, 5(2):377–402, August 2012.

- **Payman Mohassel and Peter Rindal.** ABY3: A Mixed Protocol Framework for Machine Learning. *IACR Cryptology ePrint Archive*, 2018:403, 2018.

- **Payman Mohassel and Seyed Saeed Sadeghian.** How to Hide Circuits in MPC: An Efficient Framework for Private Function Evaluation. In *Advances in Cryptology - EUROCRYPT 2013, 32nd Annual International Conference on the Theory and Applications of Cryptographic Techniques, Athens, Greece, May 26-30, 2013. Proceedings*, volume 7881 of *Lecture Notes in Computer Science*, pages 557–574. Springer, 2013.

- **Arvind Narayanan and Vitaly Shmatikov.** How to Break Anonymity of the Netflix Prize Dataset. *CoRR*, abs/cs/0610105, 2006.

- **Efe Onaran, Siddharth Garg, and Elza Erkip.** Optimal De-anonymization in Random Graphs with Community Structure. *2016 37th IEEE Sarnoff Symposium, Newark, NJ, USA, September 19-21, 2016*, pages 1–2. IEEE, 2016.

- **Michele Orrù, Emmanuela Orsini, and Peter Scholl.** Actively Secure 1-out-of-n OT Extension with Application to Private Set Intersection. In *Topics in Cryptology – CT-RSA 2017: The Cryptographers’ Track at the RSA Conference 2017, San Francisco, CA, USA, February 14–17, 2017, Proceedings*, pages 381–396. Springer International Publishing, 2017.

- **Benny Pinkas, Thomas Schneider, Gil Segev, and Michael Zohner.** Phasing: Private Set Intersection Using Permutation-Based Hashing. *24th USENIX Security Symposium, USENIX Security 15, Washington, D.C., USA, August 12-14, 2015.*, pages 515–530. USENIX Association, 2015.

- **Benny Pinkas, Thomas Schneider, Christian Weinert, and Udi Wieder.** Efficient Circuit-Based PSI via Cuckoo Hashing. In *Advances in Cryptology - EUROCRYPT 2018 - 37th Annual International Conference on the Theory and Applications of Cryptographic Techniques, Tel Aviv, Israel, April 29 - May 3, 2018 Proceedings, Part III*, volume 10822 of *Lecture Notes in Computer Science*, pages 125–157. Springer, 2018.

- **Benny Pinkas, Thomas Schneider, and Michael Zohner.** Faster Private Set Intersection Based on OT Extension. *23rd USENIX Security Symposium (USENIX Security 14)*, pages 797–812, San Diego, CA, 2014. USENIX Association.

- **Benny Pinkas, Thomas Schneider, and Michael Zohner.** Scalable Private Set Intersection Based on OT Extension. *Cryptology ePrint Archive*, Report 2016/930, 2016. [http://eprint.iacr.org/2016/930](http://eprint.iacr.org/2016/930).

- **Amanda Cristina Davi Resende and Diego F. Aranha.** Faster Unbalanced Private Set Intersection. 2018.

- **Robert Helmer, Anthony Miyaguchi, and Eric Rescorla.** Testing Privacy-Preserving Telemetry with Prio. 2018.

- **Peter Rindal.** libOTe: An Efficient, Portable, and Easy to Use Oblivious Transfer Library. [https://github.com/osu-crypto/libOTe](https://github.com/osu-crypto/libOTe).

- **M. Sadegh Riazi, Mohammad Samragh, Hao Chen, Kim Laine, Kristin E. Lauter, and Farinaz Koushanfar.** XONN: XNOR-Based Oblivious Deep Neural Network Inference. *28th USENIX Security Symposium, USENIX Security 2019, Santa Clara, CA, USA, August 14-16, 2019*, pages 1501–1518. USENIX Association, 2019.

- **Aaron Smith.** 6 New Facts About Facebook. *Pew Research Center Fact Tank*, 2014. [http://www.pewresearch.org/fact-tank/2014/02/03/6-new-facts-about-facebook/](http://www.pewresearch.org/fact-tank/2014/02/03/6-new-facts-about-facebook/).

- **Facebook Threat Exchange.** 2018.

- **Sameer Wagh, Divya Gupta, and Nishanth Chandran.** SecureNN: 3-Party Secure Computation for Neural Network Training. *PoPETs*, 2019(3):26–49, 2019.

- **Yuchen Zhao and Isabel Wagner.** POSTER: Evaluating Privacy Metrics for Graph Anonymization and De-anonymization. In *Proceedings of the 2018 on Asia Conference on Computer and Communications Security, AsiaCCS 2018, Incheon, Republic of Korea, June 04-08, 2018*, pages 817–819. ACM, 2018.

### Voter Registration and Threat Log Running Time
| n   | 28  | 212 | 216 | 220  | 224  | 226  |
|-----|-----|-----|-----|------|------|------|
| LAN | 0.01| 0.02| 0.2 | 4.7  | 114.7| 2190.1|
| WAN | 0.01| 0.02| 0.3 | 7.0  | 134.8| 2546.4|

| n   | 28  | 212 | 216 | 220  | 224  | 226  |
|-----|-----|-----|-----|------|------|------|
| Voter Intra-state | 0.02| 0.03| 0.2 | 5.1  | 121.4| 488.1|
| Voter Inter-state | 0.05| 0.09| 0.9 | 17.9 | 388.4| 1553.9|
| Threat Log N = 2 | 0.10| 0.19| 1.7 | 47.1 | 1021.0| 16336.1|
| Threat Log N = 4 | 0.01| 0.01| 0.02| 0.02| 0.02| 0.02|
| Threat Log N = 8 | 0.01| 0.01| 0.02| 0.02| 0.02| 0.02|

### Figure 9: The running time in seconds for the Voter Registration and Threat Log applications. The input tables each contain n rows.

### Voter Query Details

Given the problem statement from Section 5.1, a naive solution is to construct a centralized database of all registered voters and citizen records. This would make it relatively straightforward to identify individuals with inaccurate records, those attempting to double register, or those who are not registered at all. However, the construction of such a centralized repository has faced strong opposition in the United States due to concerns about data privacy and excessive government overreach.

As a compromise, many states have joined the Electronic Registration Information Center (ERIC), a non-profit organization that aims to improve the accuracy of voter rolls and increase access to voter registration for eligible citizens. ERIC acts as a semi-trusted third party, maintaining a centralized database containing hashes of relevant information, such as names, addresses, driver's license numbers, and social security numbers.

Instead of storing this sensitive information in plaintext, all records are randomized using two cryptographically strong salted hash functions. Before sending the data to ERIC, each state is provided with the first salt value, `salt1`, and updates each value `v` as `v := H(salt1 || v)`. This hashed data is then sent to ERIC, where it is hashed a second time using a second salt value. The desired comparisons can then be applied to the hashed data within ERIC's secure data center. While this approach provides a moderate degree of protection, a series of works, such as [NS06, Mer12, DSS12, OGE16, ZW18], have shown that significant information can still be extracted using sophisticated statistical techniques. Additionally, if an adversary gains access to the salt values, a straightforward dictionary attack can be applied.

To enhance security, we propose the deployment of our secure database join framework. Two or more states and ERIC will participate in a Multi-Party Computation (MPC) protocol. We consider two possible solutions: maintaining the existing repository but having it secret-shared between the computational parties, or each state holding its own data and performing pairwise comparisons among themselves. We prefer the more distributed setting and further explore the pairwise comparison approach.

The situation is further complicated by how this data is distributed within and between states. No single state organization typically has sufficient information to identify individuals who are incorrectly or double registered. For example, voter registration forms usually require a name, home address, and state ID/driver's license number. Comparing this information between two states would not provide a reliable attribute for joining the records. Names are far from unique identifiers. ERIC's solution is to first perform a join between a state's registered voters and their Department of Motor Vehicles (DMV) records using the state ID/driver's license number as the join key. Since the DMV typically possesses an individual's Social Security Number (SSN), this can be used as a unique identifier across all states. However, due to regulations in some states, this join must be performed on hashed data or, presumably, on secret-shared data.

In addition to identifying double-registered individuals, ERIC aims to improve the accuracy of all voter records. This includes identifying individuals who have moved and not yet registered in their new state or who have moved within a state and not updated their current address. In these cases, joins between and within states should include an indicator denoting that an individual has updated their address at a DMV different from the voter registration record. There are likely other scenarios that ERIC also identifies, but we leave the exploration of them to future work.

Using the building blocks from Section 3, it is relatively straightforward to perform the required joins. First, a state performs a left join between their DMV data and the voter registration data. Within this join, the addresses in the inner join are compared. In the event of a discrepancy, the dates when these addresses were obtained can be compared to identify the most up-to-date address. The agency with the older address can be notified and initiate a procedure to determine which, if any, of the addresses should be updated.

Once this join is performed, each state holds a secret-shared table of all their citizens with a state ID and their current registration status. Each pair of states can then run an inner join protocol using the SSN as the key. There are several possible outcomes:
1. A person has a DMV record in two states but is registered in neither. The identity of these persons should not be revealed as it does not affect the voting process.
2. A person is registered in both states. We wish to reveal this group to both states so that appropriate action can be taken.
3. A person is registered in state A and has a newer DMV address in state B. In this case, we want to reveal the identity of the person to the state they are registered in. This state can then contact the person to inquire whether they wish to switch their registration to the new state.

This approach offers several advantages over ERIC's hashing technique. All highly sensitive information, such as a person's address, state ID number, and SSN, can still be hashed before being added to the database. However, less sensitive information, such as dates, need not be hashed, allowing for more expressive queries that use numerical comparisons. To achieve the same functionality using the current ERIC approach, these dates would have to be stored in plaintext, which leaks significant information. Additionally, the ERIC approach reveals the truth value for each party of the predicate, whereas our approach reveals no information about any intermediate values.

```sql
stateA = SELECT DMV.name,
                DMV.ID,
                DMV.SSN,
                CASE WHEN DMV.date > Voter.date THEN DMV.date ELSE Voter.date END AS date,
                CASE WHEN DMV.date > Voter.date THEN 'DMV' ELSE 'Voter' END AS source
FROM DMV
LEFT JOIN Voter ON DMV.ID = Voter.ID;
```

This query ensures that the most recent address and its source (DMV or Voter) are selected, providing a more accurate and secure way to manage voter records.