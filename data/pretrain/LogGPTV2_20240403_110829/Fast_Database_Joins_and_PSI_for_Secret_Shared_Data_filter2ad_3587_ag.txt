C. Meadows. A more eﬃcient cryptographic matchmaking protocol for
use in the absence of a continuously available third party. In 1986 IEEE
Symposium on Security and Privacy, pages 134–134, April 1986.
Martin M. Merener. Theoretical results on de-anonymization via linkage
attacks. Trans. Data Privacy, 5(2):377–402, August 2012.
Payman Mohassel and Peter Rindal. ABY3: A mixed protocol frame-
work for machine learning. IACR Cryptology ePrint Archive, 2018:403,
2018.
Payman Mohassel and Seyed Saeed Sadeghian. How to hide circuits in
MPC an eﬃcient framework for private function evaluation. In Thomas
Johansson and Phong Q. Nguyen, editors, Advances in Cryptology - EU-
ROCRYPT 2013, 32nd Annual International Conference on the Theory
and Applications of Cryptographic Techniques, Athens, Greece, May 26-
30, 2013. Proceedings, volume 7881 of Lecture Notes in Computer Sci-
ence, pages 557–574. Springer, 2013.
[NS06]
Arvind Narayanan and Vitaly Shmatikov. How to break anonymity of
the netﬂix prize dataset. CoRR, abs/cs/0610105, 2006.
[OGE16]
Optimal de-
Efe Onaran, Siddharth Garg, and Elza Erkip.
anonymization in random graphs with community structure. In 2016
37th IEEE Sarnoﬀ Symposium, Newark, NJ, USA, September 19-21,
2016, pages 1–2. IEEE, 2016.
[OOS17] Michele Orr`u, Emmanuela Orsini, and Peter Scholl. Actively secure
1-out-of-n ot extension with application to private set intersection. In
Helena Handschuh, editor, Topics in Cryptology – CT-RSA 2017: The
Cryptographers’ Track at the RSA Conference 2017, San Francisco, CA,
USA, February 14–17, 2017, Proceedings, pages 381–396, Cham, 2017.
Springer International Publishing.
[PSSZ15] Benny Pinkas, Thomas Schneider, Gil Segev, and Michael Zohner.
Phasing: Private set intersection using permutation-based hashing. In
Jaeyeon Jung and Thorsten Holz, editors, 24th USENIX Security Sym-
posium, USENIX Security 15, Washington, D.C., USA, August 12-14,
2015., pages 515–530. USENIX Association, 2015.
[PSWW18] Benny Pinkas, Thomas Schneider, Christian Weinert, and Udi Wieder.
Eﬃcient circuit-based PSI via cuckoo hashing. In Jesper Buus Nielsen
and Vincent Rijmen, editors, Advances in Cryptology - EUROCRYPT
31
2018 - 37th Annual International Conference on the Theory and Appli-
cations of Cryptographic Techniques, Tel Aviv, Israel, April 29 - May 3,
2018 Proceedings, Part III, volume 10822 of Lecture Notes in Computer
Science, pages 125–157. Springer, 2018.
Benny Pinkas, Thomas Schneider, and Michael Zohner. Faster private
set intersection based on OT extension. In 23rd USENIX Security Sym-
posium (USENIX Security 14), pages 797–812, San Diego, CA, 2014.
USENIX Association.
Benny Pinkas, Thomas Schneider, and Michael Zohner. Scalable private
set intersection based on OT extension. Cryptology ePrint Archive,
Report 2016/930, 2016. http://eprint.iacr.org/2016/930.
Amanda Cristina Davi Resende and Diego F. Aranha. Faster unbal-
anced private set intersection. 2018.
Eric Rescorla Robert Helmer, Anthony Miyaguchi. Testing privacy-
preserving telemetry with prio. 2018.
Peter Rindal. libOTe: an eﬃcient, portable, and easy to use Oblivious
Transfer Library. https://github.com/osu-crypto/libOTe.
[PSZ14]
[PSZ16]
[RA18]
[RH18]
[Rin]
[RSC+19] M. Sadegh Riazi, Mohammad Samragh, Hao Chen, Kim Laine,
Kristin E. Lauter, and Farinaz Koushanfar. XONN: xnor-based obliv-
ious deep neural network inference.
In Nadia Heninger and Patrick
Traynor, editors, 28th USENIX Security Symposium, USENIX Security
2019, Santa Clara, CA, USA, August 14-16, 2019, pages 1501–1518.
USENIX Association, 2019.
[Smi14]
Aaron Smith. 6 new facts about facebook. Pew Research Center Fact
Tank, 2014. http://www.pewresearch.org/fact-tank/2014/02/03/
6-new-facts-about-facebook/.
[thr18]
Facebook threat exchange. 2018.
[WGC19]
Sameer Wagh, Divya Gupta, and Nishanth Chandran.
Securenn:
3-party secure computation for neural network training. PoPETs,
2019(3):26–49, 2019.
[ZW18]
Yuchen Zhao and Isabel Wagner. POSTER: evaluating privacy metrics
for graph anonymization and de-anonymization.
In Jong Kim, Gail-
Joon Ahn, Seungjoo Kim, Yongdae Kim, Javier L´opez, and Taesoo Kim,
editors, Proceedings of the 2018 on Asia Conference on Computer and
Communications Security, AsiaCCS 2018, Incheon, Republic of Korea,
June 04-08, 2018, pages 817–819. ACM, 2018.
32
Application
LAN
WAN
28
0.01
0.01
0.02
0.05
0.10
212
0.02
0.02
0.03
0.09
0.19
216
0.2
0.3
0.2
0.9
1.7
n
220
4.7
7.0
5.1
17.9
47.1
Voter Intra-state
Voter Inter-state
Threat Log N = 2
Threat Log N = 4
Threat Log N = 8
Figure 9: The running time in seconds for the Voter Registration and Threat Log
applications. The input tables each contain n rows.
224
114.7
134.8
121.4
388.4
1,021.0
226
2,190.1
2,546.4
488.1
1,553.9
16,336.1
28
1.0
1.6
2.4
6.6
14.9
212
1.0
1.6
2.5
6.8
15.3
216
2.2
4.0
4.8
13.1
30.0
n
220
27.1
45.4
34.6
108.7
264.3
224
456.1
747.7
585.6
1,739.2
4,228.8
226
7,463.9
12,284.1
2,342.4
6,956.8
16,915.2
A Voter Query Details
Given the problem statement from 5.1, a naive solution is to construct a central-
ized database of all the registered voters and citizen records. It is then a relatively
straightforward process to identify persons with inaccurate records, attempt to dou-
ble register or are simply not register at all. However, the construction of such a
centralized repository of information has long had strong opposition in the United
States due to concerns of data privacy and excessive government overreach. As a
compromise many states have volunteered to join the Electronic Registration Infor-
mation Center (ERIC)[eri18] which is a non-proﬁt organization with the mission of
assisting states to improve the accuracy of America’s voter rolls and increase access
to voter registration for all eligible citizens. This organization acts as a semi-trusted
third party which maintains a centralized database containing hashes of the rele-
vant information, e.g. names, addresses, drivers license number and social security
number.
In particular, instead of storing this sensitive information in plaintext, all records
are randomized using two cryptographically strong salted hash functions. Roughly
speaking, before this sensitive information is sent to ERIC, each state is provided
with the ﬁrst salt value salt1 and updates each value v as v := H(salt1||v). This
hashed data is then sent to ERIC where the data is hashed a second time by ERIC
which possesses the other salt value. The desired comparisons can then be applied
to the hashed data inside ERIC’s secure data center. When compared with existing
alternative, this approach provides a moderate degree of protection. In particular,
so long as the salt values remain inaccessible by the adversary, deanatomized any
given record is likely non-trivial. However, a long series of works, e.g. [NS06, Mer12,
DSS12, OGE16, ZW18], have shown that a signiﬁcant amount of information can be
extracted with sophisticated statistical techniques. Moreover, should the adversary
possess the salt values a straightforward dictionary attack can be applied.
We propose adding another layer of security with the deployment of our secure
database join framework. In particular, two or more of the states and ERIC will
participate in the MPC protocol. From here we consider two possible solutions.
The ﬁrst option is to maintain the existing repository but now have it secret shared
between the computational parties. Alternatively, each state could be the long-term
holder of their own data and the states perform all pairwise comparison amongst
33
themselves. For reason of preferring the more distributed setting we further explore
the pairwise comparison approach.
The situation is further complicated by how this data is distributed within and
between states.
In the typical setting no single state organization has suﬃcient
information to identify individuals which are incorrectly or double registered. For
example, typical voter registration forms requires a name, home address and state
ID/driver’s license number. If two states compared this information there would be
no reliable attribute for joining the two records. The name of the voter could be
used but names are far from a unique identiﬁer. The solution taken by ERIC is
to ﬁrst perform a join between a state’s registered voters and their Department of
Motor Vehicles (DMV) records, using the state ID/driver’s license number as the
join-key. Since the DMV typically possesses an individual’s Social Security Number
(SSN), this can now be used as a unique identiﬁer across all states. However, due
to regulations within some states this join is only allowed to be performed on the
hashed data or, presumably, on secret shared data.
In addition to identifying individuals that are double registered, the mission
of ERIC is to generally improve the accuracy of all voter records. This includes
identifying individuals that have moved and not yet registered in their new state or
that have simply moved within a state and not updated their current address. In
this case the joins between/within states should also include an indicator denoting
that an individual has updated their address at a DMV which is diﬀerent than the
voter registration record. There are likely other scenarios which ERIC also identiﬁes
but we leave the exploration of them to future work.
Given the building blocks of Section 3 it is a relatively straightforward task to
perform the required joins. First a state performs a left join between their DMV
data and the voter registration data. Within this join the addresses in the inner join
are compared. In the event of a discrepancy, the date of when these addresses were
obtained can be compared to identify the most up to date address. Moreover, the
agency with the older address can be notiﬁed and initial a procedure to determine
which, if any, of the addresses should be updated.
Once this join is performed, each state holds a secret shared table of all their
citizens that possess a state ID and their current registration status. Each pair of
states can then run an inner join protocol using the social security number as the
key. There are several cases that a result record can be in. First it is possible for
a person to have a DMV record in two states and be registered in neither. The
identity of these persons should not be revealed as this does not eﬀect the voting
process. The next case is that a person is registered in both states. We wish to
reveal this group to both states so that the appropriate action can be taken. The
ﬁnal case that we are interested in is when a person is registered in state A and
has a newer DMV address in state B. In this case we want to reveal the identity of
the person to the state that they are registered to. This state can then contact the
person to inquire whether they wish to switch their registration to the new state.
34
This approach has additional advantages over the hashing technique of ERIC.
First, all of the highly sensitive information such as a persons address, state ID
number and SSN can still be hashed before being added to the database5. However,
now that the data is secret shared less sensitive information such as dates need not
be hashed. This allows for the more expressive query described above which uses a
numerical comparison. To achieve the the same functionality using the current ERIC
approach these dates would have to be stored in plaintext which leaks signiﬁcant
information. In addition, when the ERIC approach performs these comparison the
truth value for each party of the predicate is revealed. Our approach reveals no
information about any intermediate value.
stateA = select DM V.name,
DM V.ID,
DM V.SSN,
DV M.date > V oter.date ?
DM V.date : V oter.date as date,
DV M.date > V oter.date ?