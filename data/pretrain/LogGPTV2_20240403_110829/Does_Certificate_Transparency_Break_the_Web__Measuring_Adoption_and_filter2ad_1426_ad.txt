### VII. RISKS

Certificate Transparency (CT) enforcement has not yet caused widespread disruption for end users, as discussed in Section V. However, the CT ecosystem is still in its early stages, and broader implementation could introduce new challenges. This section examines two primary risks associated with CT enforcement: (1) log disqualification or distrust, which may require website owners or Certificate Authorities (CAs) to take corrective actions to prevent user disruptions, and (2) server-side SCT (Signed Certificate Timestamp) delivery, which can cause issues if implemented incorrectly. Our goal is to evaluate the potential impact of these risks on end users and identify best practices to mitigate them.

#### A. Log Distrust

Chrome enforces a set of requirements for logs, including maintaining a certain uptime, quickly incorporating certificates into the log, and always presenting consistent views [38]. If a log fails to meet these requirements, it may be removed from Chrome’s trusted list, and its SCTs will no longer be accepted. This can lead to warnings or breakage for end users. Chrome's response to different types of log failures varies:

- **Unrecoverable Security Failure**: If a log's private key is compromised, the log is fully distrusted, and none of its SCTs are considered valid. This type of distrust can cause significant disruption because it invalidates existing certificates. Fortunately, such incidents have been rare, with only one virtually unused log experiencing this issue [39].

- **Single Security Incident**: In cases of a single security incident, a log can be disqualified. Certificates with embedded SCTs from the disqualified log remain valid if they also include SCTs from other trusted logs [12]. However, SCTs delivered via TLS extension or OCSP response must be replaced, and Chrome will not accept new SCTs from the log. Disqualification can cause disruption, especially if servers fail to update their SCTs. Nevertheless, disqualification is generally less disruptive than full distrust because it typically does not require replacing many existing certificates.

- **Operational Incident**: For operational issues that do not pose a significant security risk, a log can be frozen. Existing SCTs from the log continue to be accepted, but the log cannot issue new SCTs. Freezing is usually done in cooperation with the log operator and has minimal impact on end users.

We focus on disqualification because it is more common and can cause user disruption, whereas freezing is frequent but has little impact, and full distrust is extremely rare.

**1) Measuring Disqualification Risk**

A small number of CT logs carry a disproportionate risk of causing negative impacts on end users. When a log is disqualified, two effects occur: (1) websites must replace SCTs served in the TLS extension or OCSP response, and (2) existing certificates may need to be replaced if they contain multiple SCTs from disqualified logs.

In practice, the second effect is the larger risk because it requires site owners to take action, even if they are unaware of CT. Historically, certificate errors have been frequent when browsers make changes that necessitate certificate replacements. For example, deprecated SHA-1 certificates accounted for 9.4% of all certificate errors in Chrome after it began showing full-page warnings for them [18].

We find that a single pair of logs disproportionately affects many sites. If both logs were disqualified, a large number of sites' existing certificates would no longer be CT-compliant. Table V shows the number of Alexa Top 10,000 websites with certificates that would become noncompliant if specific pairs of logs were disqualified.

| Disqualified Logs | Sites with Affected Certs |
|------------------|--------------------------|
| Google Pilot, Symantec CT | 458 |
| Google Pilot, Digicert CT2 | 23 |
| Google Rocketeer, Symantec CT | 18 |
| Google Pilot, Digicert CT1 | 17 |
| Google Skydiver, Digicert CT2 | 14 |
| Google Rocketeer, Digicert CT2 | 2 |
| Google Skydiver, Symantec CT | 1 |
| Google Pilot, Symantec Vega | 1 |

If the Google Pilot and Symantec CT logs were both disqualified, 458 websites (12% of the CT-compliant websites in the Alexa list) would no longer serve CT-compliant certificates.

Table V simulates log disqualifications as of February 1, 2018. Logs can also be retroactively disqualified, affecting certificates issued since the retroactive disqualification date [40]. Retroactive disqualifications can have an even greater impact on end users, as newly issued certificates might need to be replaced.

**2) Disqualification Incidents**

To understand how log disqualification happens and can be avoided, we describe several incidents and their resolutions:

- **Unrecoverable Incidents**: In February 2017, the Venaﬁ log presented two inconsistent views, violating the append-only property of CT logs [41]. The incident was caused by an Amazon Web Services outage, where the log published a view based on an out-of-sync backup. The log was retroactively disqualified from the point of inconsistency [40]. This disqualification affected fewer than 2,000 certificates and had minimal negative impact on end users. Vigilant monitoring and quick reporting helped minimize the impact.

- **Recoverable Incidents**: Cloudflare is currently bringing up a new set of CT logs that have recovered from two notable incidents:
  - In one incident, the log presented two consistent views but failed to produce the full set of certificates between them [42]. The issue was resolved by reconstructing the certificates using a redundant datastore.
  - In another pre-production incident, an implementation bug led to inaccurate views. To prevent similar issues, Cloudflare now uses two independent implementations and checks the results before publishing.

Neither of these incidents affected users, as they occurred during development or Chrome's monitoring period [38].

#### B. Server-Side SCT Delivery

Some websites choose to serve SCTs themselves via the TLS extension rather than having CAs embed them in certificates or serve them in OCSP responses. This approach avoids sending SCTs to clients that do not support them, conserving bandwidth.

While server-side SCT delivery can avoid some negative impacts, improper implementation can pose risks. For example, a server must use up-to-date log metadata; otherwise, it might serve SCTs from a distrusted log, leading to warnings or breakage for users.

**1) Measuring Server-Side SCT Delivery**

Server-side SCT delivery is often implemented by large organizations, such as performance- and bandwidth-conscious CDNs. Despite most individual site owners not choosing this method, the TLS extension accounts for a significant percentage of SCTs. In the week ending February 1, 2018, 47.97% of SCTs observed in Chrome came from the TLS extension, compared to 0.01% from OCSP responses and 52.02% embedded in certificates. Half of the CT-compliant websites in the Alexa Top 10,000 serve SCTs via the TLS extension.

It is crucial that server-side SCT delivery follows best practices, as issues can affect a large number of users.

**2) Server-Side SCT Delivery Incidents**

In mid-2017, a company briefly served an SCT via the TLS extension that many Chrome clients did not accept, causing a dip in valid SCTs. The incident occurred because the websites used a log trusted in the latest Chrome version, which had not yet been widely deployed. Fortunately, CT was not yet required, and the incident was not visible to end users.

This underscores the importance of gradually adopting CT to discover and fix problems before they impact users. Currently, mature implementations of server-side SCT delivery are still under development, making this an important area for future work.

### VIII. DISCUSSION: DESIGN PRINCIPLES

Our measurements show that CT has been adopted with minimal disruption so far. We discuss three design principles that have contributed to this success:

#### A. Small Number of First-Movers

The burden of CT adoption primarily falls on CAs, allowing individual websites to benefit from CT without taking action. For example, when Chrome required CT for EV certificates, CAs began embedding SCTs to maintain the EV UI. If individual site owners had been required to take action, the noncompliance rate would likely have been higher. While site owners can improve their CT security (e.g., by deploying the Expect-CT header), they do not need to by design.

In contrast, HTTP Public Key Pinning (HPKP) depends on individual site owners, who often struggle to implement it correctly [47]–[49]. As a result, HPKP has seen low adoption, leading to its deprecation in Chrome [51]. While CT can be challenging, one CA or CDN can protect all its customers, leading to high adoption without individual site owner involvement.

#### B. Staged Enforcement

By rolling out CT enforcement in stages, ecosystem problems are identified and fixed early, minimizing negative impacts on end users. Each stage carries a smaller risk of breakage than universal enforcement. For example, when Chrome rolled out CT enforcement for a large CA, some websites stopped working, accounting for 1.2% of certificate warnings. The impact could have been much larger if multiple CAs had been subject to enforcement simultaneously.

To limit the impact of each stage, enforcement requirements can be constrained. For EV certificates, Chrome shipped a whitelist of logged certificates not served with SCTs, ensuring all relevant certificates were logged while minimizing user impact. In July 2018, Chrome began requiring CT for all certificates issued after April 2018, using an issuance date cutoff to balance security and feasibility.

#### C. Browser Policy

Chrome's CT policy mitigates the risks of the early CT ecosystem. For example, the policy allows logs to be frozen or disqualified rather than fully distrusted in response to certain types of failures (Section VII-A). Freezing and disqualification have been deemed appropriate responses for several operational and security incidents [52], [53], benefiting users by causing less disruption than full distrust events.

### IX. DISCUSSION: DEPLOYMENT HURDLES

#### A. Sponsorship from Major Players

Successful CT deployment has relied heavily on sponsorship and investment from major players like Google and Cloudflare. For example, EV certificates were not widely logged until Chrome began dropping the EV UI for noncompliant certificates. Additionally, Cloudflare has driven a substantial portion of CT adoption (Table II). It is unclear whether CT would have been widely adopted without such investments.

Future similar systems may not see successful deployment without similar investment from major ecosystem players. While CT does not require individual site operators to take action, it does require substantial implementation investment from other entities, including browser vendors. Browsers face a first-mover risk when considering whether to adopt new technologies, and the success of CT highlights the importance of strategic partnerships and staged rollouts.