        ```
    2.  在路由器 B 中，ping `192.0.2.1`{.literal}:
        ``` literallayout
        # ping 192.0.2.1
        ```
    :::
:::
::: itemizedlist
**其它资源**
-   有关使用 `nmcli`{.literal} 的详情，请查看 `nmcli`{.literal} man
    page。
-   有关您可以使用 `nmcli`{.literal} 设定的隧道设置的详情，请查看
    `nm-settings(5)`{.literal} man page 中的
    `ip-tunnel settings`{.literal} 部分。
:::
:::
::: section
::: titlepage
# []{#configuring-ip-tunnels_configuring-and-managing-networking.html#configuring-a-gretap-tunnel-to-transfer-ethernet-frames-over-ipv4_configuring-ip-tunnels}配置 GRETAP 隧道来通过 IPv4 传输以太网帧 {.title}
:::
Generic Routing Encapsulation Terminal Access Point(GRETAP)隧道在 OSI
级别 2 上运行，并封装 IPv4 数据包中的以太网流量，如 [RFC
2784](https://tools.ietf.org/html/rfc2784){.link} 所述。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
通过 GRETAP 隧道发送的数据没有加密。出于安全考虑，通过 VPN
或不同的加密连接建立隧道。
:::
此流程描述了如何在两个 RHEL 路由器之间创建 GRETAP
隧道以使用桥接连接两个网络，如下图所示：
::: informalfigure
::: mediaobject
![GRETAP 隧道](images/GRETAP-tunnel.png)
:::
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
`gretap0`{.literal} 设备名称被保留。为该设备使用 `gretap1`{.literal}
或者不同名称。
:::
::: itemizedlist
**先决条件**
-   每个 RHEL 路由器都有一个网络接口，它连接到其本地网络，接口没有分配
    IP 配置。
-   每个 RHEL 路由器都有一个网络接口，它连接到互联网。
:::
::: orderedlist
**流程**
1.  在网络 A 的 RHEL 路由器上：
    ::: orderedlist
    1.  创建名为 `bridge0`{.literal}的网桥接口：
        ``` literallayout
        # nmcli connection add type bridge con-name bridge0 ifname bridge0
        ```
    2.  配置网桥的 IP 设置：
        ``` literallayout
        # nmcli connection modify bridge0 ipv4.addresses '192.0.2.1/24'
        # nmcli connection modify bridge0 ipv4.method manual
        ```
    3.  为连接到本地网络的接口添加新连接配置集到网桥：
        ``` literallayout
        # nmcli connection add type ethernet slave-type bridge con-name bridge0-port1 ifname enp1s0 master bridge0
        ```
    4.  为网桥添加 GRETAP 隧道接口的新连接配置集：
        ``` literallayout
        # nmcli connection add type ip-tunnel ip-tunnel.mode gretap slave-type bridge con-name bridge0-port2 ifname gretap1 remote 198.51.100.5 local 203.0.113.10 master bridge0
        ```
        `remote`{.literal} 和 `local`{.literal}
        参数设置远程和本地路由器的公共 IP 地址。
    5.  可选：如果您不需要，STP（Spanning Tree Protocol）：
        ``` literallayout
        # nmcli connection modify bridge0 bridge.stp no
        ```
        默认情况下，STP 被启用并导致在使用连接前出现延迟。
    6.  配置激活 `bridge0`{.literal} 连接会自动激活网桥端口：
        ``` literallayout
        # nmcli connection modify bridge0 connection.autoconnect-slaves 1
        ```
    7.  激活 `bridge0`{.literal} 连接：
        ``` literallayout
        # nmcli connection up bridge0
        ```
    :::
2.  在网络 B 中的 RHEL 路由器中：
    ::: orderedlist
    1.  创建名为 `bridge0`{.literal}的网桥接口：
        ``` literallayout
        # nmcli connection add type bridge con-name bridge0 ifname bridge0
        ```
    2.  配置网桥的 IP 设置：
        ``` literallayout
        # nmcli connection modify bridge0 ipv4.addresses '192.0.2.2/24'
        # nmcli connection modify bridge0 ipv4.method manual
        ```
    3.  为连接到本地网络的接口添加新连接配置集到网桥：
        ``` literallayout
        # nmcli connection add type ethernet slave-type bridge con-name bridge0-port1 ifname enp1s0 master bridge0
        ```
    4.  为网桥添加 GRETAP 隧道接口的新连接配置集：
        ``` literallayout
        # nmcli connection add type ip-tunnel ip-tunnel.mode gretap slave-type bridge con-name bridge0-port2 ifname gretap1 remote 203.0.113.10 local 198.51.100.5 master bridge0
        ```
        `remote`{.literal} 和 `local`{.literal}
        参数设置远程和本地路由器的公共 IP 地址。
    5.  可选：如果您不需要，STP（Spanning Tree Protocol）：
        ``` literallayout
        # nmcli connection modify bridge0 bridge.stp no
        ```
    6.  配置激活 `bridge0`{.literal} 连接会自动激活网桥端口：
        ``` literallayout
        # nmcli connection modify bridge0 connection.autoconnect-slaves 1
        ```
    7.  激活 `bridge0`{.literal} 连接：
        ``` literallayout
        # nmcli connection up bridge0
        ```
    :::
:::
::: orderedlist
**验证步骤**
1.  在两个路由器中，验证 `enp1s0`{.literal} 和 `gretap1`{.literal}
    连接是否已连接，并且 `CONNECTION`{.literal} 列显示了端口的连接名称：
    ``` literallayout
    # nmcli device
    nmcli device
    DEVICE   TYPE      STATE      CONNECTION
    ...
    bridge0  bridge    connected  bridge0
    enp1s0   ethernet  connected  bridge0-port1
    gretap1  iptunnel  connected  bridge0-port2
    ```
2.  从每个 RHEL 路由器中，ping 路由器的内部接口的 IP 地址：
    ::: orderedlist
    1.  在路由器 A 中，ping `192.0.2.2`{.literal}:
        ``` literallayout
        # ping 192.0.2.2
        ```
    2.  在路由器 B 中，ping `192.0.2.1`{.literal}:
        ``` literallayout
        # ping 192.0.2.1
        ```
    :::
:::
::: itemizedlist
**其它资源**
-   有关使用 `nmcli`{.literal} 的详情，请查看 `nmcli`{.literal} man
    page。
-   有关您可以使用 `nmcli`{.literal} 设定的隧道设置的详情，请查看
    `nm-settings(5)`{.literal} man page 中的
    `ip-tunnel settings`{.literal} 部分。
:::
:::
::: section
::: titlepage
# []{#configuring-ip-tunnels_configuring-and-managing-networking.html#additional_resources_2}其它资源 {.title}
:::
::: itemizedlist
-   有关隧道接口列表以及使用 `ip`{.literal}
    程序临时配置隧道的详情，请查看 `ip-link(8)`{.literal} man page。
:::
:::
:::
[]{#configuring-fibre-channel-over-ethernet_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#configuring-fibre-channel-over-ethernet_configuring-and-managing-networking.html#configuring-fibre-channel-over-ethernet_configuring-and-managing-networking}第 16 章 使用以太网配置光纤 {.title}
:::
根据 IEEE T11 FC-BB-5
标准，使用以太网（FCoE）的光纤通道是通过以太网传输光纤通道帧的协议。通常数据中心有一个专用的
LAN 和 Storage Area Network（SAN），它和它们自己的配置是相互分开的。FCoE
将这些网络合并为一个整合的网络结构。例如 FCoE
的优点是降低硬件和能源成本。
::: section
::: titlepage
# []{#configuring-fibre-channel-over-ethernet_configuring-and-managing-networking.html#using-hardware-fcoe-hbas-in-rhel_configuring-fibre-channel-over-ethernet}在 RHEL 中使用硬件 FCoE HBA {.title}
:::
在 Red Hat Enterprise Linux 中，您可以使用以下驱动程序支持的硬件 FCoE
主机总线适配器（HBA）：
::: itemizedlist
-   `qedf`{.literal}
-   `bnx2fc`{.literal}
-   `fnic`{.literal}
:::
如果您使用这样的 HBA，在 HBA 设置中配置 FCoE
设置。详情请查看适配器文档。
您在设置中配置了 HBA 后，从 Storage Area
Network（SAN）中导出的逻辑单元号（LUN）将自动可用于 RHEL 作为
`/dev/sd*`{.literal} 设备。您可以使用类似本地存储设备的设备。
:::
::: section
::: titlepage
# []{#configuring-fibre-channel-over-ethernet_configuring-and-managing-networking.html#setting-up-a-software-fcoe-device_configuring-fibre-channel-over-ethernet}设置软件 FCoE 设备 {.title}
:::
软件 FCoE 设备可让您使用部分支持 FCoE 的以太网适配器访问 FCoE
的逻辑单元号（LUN）。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
RHEL 不支持需要 `fcoe.ko`{.literal} 内核模块的软件 FCoE 设备。
:::
完成此步骤后，RHEL 会自动访问 Storage Area Network（SAN）中导出的 LUN
作为 `/dev/sd*`{.literal} 设备。您可以使用类似本地存储设备的设备。
::: itemizedlist
**先决条件**
-   主机总线适配器(HBA)使用 `qedf`{.literal}、`bnx2fc`{.literal} 或
    `fnic`{.literal} 驱动程序，不需要 `fcoe.ko`{.literal} 内核模块。
-   SAN 使用 VLAN 来将存储流量与普通以太网流量分开。
-   网络切换已被配置为支持 VLAN。
-   服务器的 HBA 在它的 BIOS 中被配置。详情请查看您的 HBA 文档。
-   HBA 连接至网络，连接是在线的。
:::
::: orderedlist
**流程**
1.  安装 `fcoe-utils`{.literal} 软件包：
    ``` literallayout
    # yum install fcoe-utils
    ```
2.  将 `/etc/fcoe/cfg-ethx`{.literal} 模板文件复制到
    `/etc/fcoe/cfg-interface_name`{.literal}。例如：如果要配置
    `enp1s0`{.literal} 接口使用 FCoE，输入：
    ``` literallayout
    # cp /etc/fcoe/cfg-ethx /etc/fcoe/cfg-enp1s0
    ```
3.  启用并启动 `fcoe`{.literal} 服务：
    ``` literallayout
    # systemctl enable --now fcoe
    ```
4.  发现 FCoE VLAN ID，启动发起程序，并为发现的 VLAN 创建网络设备：
    ``` literallayout
    # fipvlan -s -c enp1s0
    Created VLAN device enp1s0.200
    Starting FCoE on interface enp1s0.200
    Fibre Channel Forwarders Discovered
    interface       | VLAN | FCF MAC
    ------------------------------------------
    enp1s0          | 200  | 00:53:00:a7:e7:1b
    ```
5.  可选： 要显示发现的目标、LUN 和与 LUN 关联的设备详情，请输入：
    ``` literallayout
    # fcoeadm -t
    Interface:        enp1s0.200
    Roles:            FCP Target
    Node Name:        0x500a0980824acd15
    Port Name:        0x500a0982824acd15
    Target ID:        0
    MaxFrameSize:     2048 bytes
    OS Device Name:   rport-11:0-1
    FC-ID (Port ID):  0xba00a0
    State:            Online
    LUN ID  Device Name   Capacity   Block Size  Description
    ------  -----------  ----------  ----------  ---------------------
         0  sdb           28.38 GiB      512     NETAPP LUN (rev 820a)
         ...
    ```
    这个示例显示 SAN 中的 LUN 0 已作为 `/dev/sdb`{.literal}
    设备附加到主机中。
:::
::: itemizedlist
**验证步骤**
-   使用 `fcoeadm -i`{.literal} 命令显示所有活跃 FCoE 接口的信息：
    ``` literallayout
    # fcoeadm -i
    Description:      BCM57840 NetXtreme II 10 Gigabit Ethernet
    Revision:         11
    Manufacturer:     Broadcom Inc. and subsidiaries
    Serial Number:    000AG703A9B7
    Driver:           bnx2x Unknown
    Number of Ports:  1
        Symbolic Name:     bnx2fc (QLogic BCM57840) v2.12.13 over enp1s0.200
        OS Device Name:    host11