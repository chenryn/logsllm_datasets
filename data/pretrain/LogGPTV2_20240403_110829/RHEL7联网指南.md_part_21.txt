`connection.autoconnect`{.option} 设定为
`yes`{.literal}，这样就不会将给出 `ipv4.method`{.option} 的
`IP`{.systemitem} 地址设定为
`auto`{.literal}。[**NetworkManager**]{.application} 还会将配置写入
`/etc/sysconfig/network-scripts/ifcfg-team-ServerA`{.filename}，其中会将对应的
ONBOOT 设定为 `yes`{.literal}，并将 BOOTPROTO 设定为 `dhcp`{.literal}。
:::
::: para
注：再次启用该接口前，[**NetworkManager**]{.application} 不会意识到对
ifcfg 文件的手动更改。有关使用配置文件的详情，请查看 [第 1.9 节 "使用
sysconfig
文件进行网络配置"](#ch-Introduction_to_RHEL_Networking.html#sec-Network_Configuration_Using_sysconfig_Files){.xref}。
:::
::: para
请运行以下命令查看其他分配的值：
``` screen
~]$ nmcli con show team-ServerA
connection.id:                          team-ServerA
connection.uuid:                        b954c62f-5fdd-4339-97b0-40efac734c50
connection.interface-name:              ServerA
connection.type:                        team
connection.autoconnect:                 yes…
ipv4.method:                            auto[输出结果截选]
```
因为没有指定任何 JSON 配置文件，所以采用默认值。有关成组 JSON
参数及其默认值的详情，请查看 `teamd.conf(5)`{.filename} man
page。注：该名称衍生自接口名称，在接口名称的前面添加类型。另外还可使用
`con-name`{.option} 选项指定一个名称，如下：
``` screen
~]$ nmcli connection add type team con-name Team0 ifname ServerB
Connection 'Team0' (5f7160a1-09f6-4204-8ff0-6d96a91218a7) successfully added.
```
:::
::: para
运行以下命令查看刚刚配置的成组接口：
``` screen
~]$ nmcli con show
NAME                UUID                                  TYPE            DEVICE
team-ServerA        b954c62f-5fdd-4339-97b0-40efac734c50  team            ServerA
eth1                0e8185a1-f0fd-4802-99fb-bedbb31c689b  802-3-ethernet  --   
eth0                dfe1f57b-419d-4d1c-aaf5-245deab82487  802-3-ethernet  --
Team0               5f7160a1-09f6-4204-8ff0-6d96a91218a7  team            ServerB
```
:::
::: para
运行以下格式的命令更改为成组分配的名称：
``` synopsis
nmcli con mod old-team-name connection.id new-team-name
```
:::
::: para
要为现有成组载入成组配置文件，请使用以下格式的命令：
``` synopsis
nmcli connection modify team-name team.config JSON-config
```
可将成组配置文件指定为 JSON
字符串，或提供包含该配置的文件名。该文件名可包括路径。两种情况都会在
*`team.config`* 属性中保存 JSON 字符串。如果是 JSON
字符串，请使用单引号将字符串括起来，并将整个字符串粘贴到命令行中。
:::
::: para
运行以下格式的命令检查 `team.config`{.literal} 属性：
``` synopsis
nmcli con show team-name | grep team.config
```
:::
::: para
运行以下命令在 `Team0`{.literal} 中添加名为 *Team0-port1* 的接口
*eth0*：
``` screen
~]$ nmcli con add type team-slave con-name Team0-port1 ifname eth0 master Team0
Connection 'Team0-port1' (ccd87704-c866-459e-8fe7-01b06cf1cffc) successfully added.
```
同样，可使用以下命令添加另一个名为 *Team0-port2* 的接口 *eth1*：
``` screen
~]$ nmcli con add type team-slave con-name Team0-port2 ifname eth1 master Team0
Connection 'Team0-port2' (a89ccff8-8202-411e-8ca6-2953b7db52dd) successfully added.
```
编写时，[**nmcli**]{.application} 只支持以太网接口。
:::
::: para
要启用成组，必须首先激活这些端口，如下：
``` screen
~]$ nmcli connection up Team0-port1
Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/2)
```
``` screen
~]$ nmcli connection up Team0-port2
Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/3)
```
:::
::: para
可通过激活这些端口验证是否已激活成组接口，如下：
``` screen
~]$ ip link
3:  Team0:  mtu 1500 qdisc noqueue state UP mode DEFAULT
    link/ether 52:54:00:76:6f:f0 brd ff:ff:ff:ff:ff:f
```
另外还可使用命令启用该接口组，如下：
``` screen
~]$ nmcli connection up Team0
Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/4)
```
:::
::: para
有关 [**nmcli**]{.application} 简介请查看 [第 2.3 节 "使用
NetworkManager 命令行工具
nmcli"](#ch-Configure_IP_Networking.html#sec-Using_the_NetworkManager_Command_Line_Tool_nmcli){.xref}。
:::
:::
::: section
::: titlepage
## [⁠]{#ch-Configure_Network_Teaming.html#sec-Creating_a_Network_Team_Using_teamd}5.10.2. 使用 teamd 创建网络成组 {.title}
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
使用 teamd 创建的配置不会持久，因此应按照 [第 5.10.1 节 "使用 nmcli
配置网络成组"](#ch-Configure_Network_Teaming.html#sec-Configure_Network_Teaming_Using_nmcli){.xref}
或 [第 5.10.3 节 "使用 ifcfg
文件创建网络成组"](#ch-Configure_Network_Teaming.html#sec-Creating_a_Network_Team_Using_ifcfg_Files){.xref}
中规定的步骤创建成组接口。
:::
:::
:::
::: para
要创建网络成组，作为成组端口或链接接口的虚拟接口需要一个 JSON
格式的配置文件。快捷的方法是复制示例配置文件，然后使用有
`root`{.systemitem}
授权的编辑器进行编辑。请输入以下命令列出可用示例配置文件：
``` screen
~]$ ls /usr/share/doc/teamd-*/example_configs/
activebackup_arp_ping_1.conf  activebackup_multi_lw_1.conf   loadbalance_2.conf
activebackup_arp_ping_2.conf  activebackup_nsna_ping_1.conf  loadbalance_3.conf
activebackup_ethtool_1.conf   broadcast.conf                 random.conf
activebackup_ethtool_2.conf   lacp_1.conf                    roundrobin_2.conf
activebackup_ethtool_3.conf   loadbalance_1.conf             roundrobin.conf
```
请使用以下命令查看包含的文件之一，比如
`activebackup_ethtool_1.conf`{.filename}：
``` screen
~]$ cat /usr/share/doc/teamd-*/example_configs/activebackup_ethtool_1.conf
{
	"device":	"team0",
	"runner":	{"name": "activebackup"},
	"link_watch":	{"name": "ethtool"},
	"ports":	{
		"eth1": {
			"prio": -10,
			"sticky": true
		},
		"eth2": {
			"prio": 100
		}
	}
}
```
创建工作配置目录保存 `teamd`{.systemitem}
配置文件。例如：作为常规用户输入以下格式的命令：
``` screen
~]$ mkdir ~/teamd_working_configs
```
将选择的文件复制到工作目录中，并根据需要进行编辑。例如：可使用以下命令格式：
``` screen
~]$ cp /usr/share/doc/teamd-*/example_configs/activebackup_ethtool_1.conf \ ~/teamd_working_configs/activebackup_ethtool_1.conf
```
要编辑该文件以适应您的环境（例如更改作为网络成组端口的接口），请打开要编辑的文件，如下：
``` screen
~]$ vi ~/teamd_working_configs/activebackup_ethtool_1.conf
```
进行必要的更改并保存文件。有关使用 [**vi**]{.application}
编辑器或使用首选编辑器的详情，请查看 `vi(1)`{.filename} man page。
:::
::: para
注：在该成组内作为端口使用的接口不得处于 active
状态，就是说将其添加到成组设备时，它们必须处于
["[down]{.quote}"]{.quote} 状态。运行以下命令检查其状态：
``` screen
~]$ ip link show
1: lo:  mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
2: em1:  mtu 1500 qdisc pfifo_fast state UP mode DEFAULT qlen 1000
    link/ether 52:54:00:d5:f7:d4 brd ff:ff:ff:ff:ff:ff
3: em2:  mtu 1500 qdisc pfifo_fast state UP mode DEFAULT qlen 1000
  link/ether 52:54:00:d8:04:70 brd ff:ff:ff:ff:ff:ff
```
在这个示例中可以看到要使用的两个接口都处于 ["[UP]{.quote}"]{.quote}
状态。
:::
::: para
请作为 `root`{.systemitem} 用户，使用以下命令格式禁用接口：
``` screen
~]# ip link set down em1
```
根据需要在每个接口中执行这个操作。
:::
::: para
要创建基于配置文件的成组接口，请作为 `root`{.systemitem}
用户进入可使用的配置目录（在这个示例中为 *teamd_working_configs*）：
``` screen
~]# cd /home/userteamd_working_configs
```
然后运行以下格式的命令：
``` screen
~]# teamd -g -f activebackup_ethtool_1.conf -d
Using team device "team0".
Using PID file "/var/run/teamd/team0.pid"
Using config file "/home/user/teamd_working_configs/activebackup_ethtool_1.conf"
```
`-g`{.option} 选项用于显示 debug 信息，`-f`{.option}
选项用于指定要载入的配置文件，`-d`{.option}
选项可让该进程中启动后作为守护进程运行。有关其他选项的详情请查看
`teamd(8)`{.filename} man page。
:::
::: para
请作为 `root`{.systemitem} 用户使用以下命令检查成组接口状态：
``` screen
~]# teamdctl team0 state
setup:
  runner: activebackup
ports:
  em1
    link watches:
      link summary: up
      instance[link_watch_0]:
        name: ethtool
        link: up
  em2
    link watches:
      link summary: up
      instance[link_watch_0]:
        name: ethtool
        link: up
runner:
  active port: em1
```
:::
::: para
请作为 `root`{.systemitem} 用户，使用以下命令在网络成组接口
[team0]{.interface} 中应用一个地址：
``` screen
~]# ip addr add 192.168.23.2/24 dev team0
```
:::
::: para
请运行以下命令检查成组接口的 IP 地址：
``` screen
~]$ ip addr show team0
4: team0:   mtu 1500 qdisc noqueue state UP 
    link/ether 16:38:57:60:20:6f brd ff:ff:ff:ff:ff:ff
    inet 192.168.23.2/24 scope global team0
       valid_lft forever preferred_lft forever
    inet6 2620:52:0:221d:1438:57ff:fe60:206f/64 scope global dynamic 
       valid_lft 2591880sec preferred_lft 604680sec
    inet6 fe80::1438:57ff:fe60:206f/64 scope link 
       valid_lft forever preferred_lft forever
```
:::
::: para
请作为 `root`{.systemitem} 用户，使用以下命令激活该成组接口，或使其处于
["[up]{.quote}"]{.quote} 状态：
``` screen
~]# ip link set dev team0 up
```
:::
::: para
请作为 `root`{.systemitem}
用户，使用以下命令暂时取消激活成组接口，或使其处于
["[down]{.quote}"]{.quote} 状态：
``` screen
~]# ip link set dev team0 down
```
:::
::: para
请作为 `root`{.systemitem}
用户，使用以下命令格式终止或杀死成组守护进程的实例：
``` screen
~]# teamd -t team0 -k
```
使用 `-k`{.option} 选项指定要杀死的与设备 [team0]{.interface}
关联的守护进程实例。其他选项请查看 `teamd(8)`{.filename} man page。
:::
::: para
请运行以下命令获得 `teamd`{.systemitem} 命令行选项帮助信息：
``` screen
~]$ teamd -h
```
此外，请查看 `teamd(8)`{.filename} man page。
:::
:::
::: section
::: titlepage
## [⁠]{#ch-Configure_Network_Teaming.html#sec-Creating_a_Network_Team_Using_ifcfg_Files}5.10.3. 使用 ifcfg 文件创建网络成组 {.title}
:::
::: para
要 `ifcfg`{.literal} 文件创建网络成组，在
`/etc/sysconfig/network-scripts/`{.filename} 目录中创建一个文件，如下：
``` screen
DEVICE=team0
DEVICETYPE=Team
ONBOOT=yes
BOOTPROTO=none
IPADDR=192.168.11.1
PREFIX=24
TEAM_CONFIG='{"runner": {"name": "activebackup"}, "link_watch": {"name": "ethtool"}}'
```
这样可为该成组创建接口，换句话说这就是主接口。
:::
::: para
要创建属于 [team0]{.interface} 成员的端口，请在
`/etc/sysconfig/network-scripts/`{.filename}
目录中创建一个或多个文件，如下：