said to have a differential advantage when for
Otor ← ObsN ∗ (C,⊥,⊥) and Ovia ← ObsN ∗ (C, v1, v2),
the set Otor ⊂ Ovia, where Obs is as deﬁned in Deﬁnition V.3.
In words, an adversary has a differential advantage in ShorTor
when new observations are gained as a result of introducing
via relays. We now examine scenarios in which the adversary
does gain differential advantage by corrupting via relays. We
formalize these scenarios in Lemma 1.
Lemma 1. Let V ⊆ N be the set of candidate via relays.
Fix N ∗ ⊆ N , the set of adversary-corrupted relays. For all
sets of observations Otor and Ovia for a circuit C ∈ C, as
in Deﬁnition V.4, Otor ⊂ Ovia if and only if there exists at least
one via relay in N ∗
between two consecutive non-corrupted
relays in C.
Proof. Let ra, rb ∈ C be any two consecutive circuit relays in
C (either {guard, middle} or {middle, exit}) with via relay
v connecting ra and rb. Corrupting either ra or rb provides
the adversary with a view of the wire, which is equivalent
to the view obtained from corrupting the via (see Remark 1).
For any circuit C ∈ C, the set of observation points gained
from corrupting v is a strict subset of the set of observation
points gained from corrupting either ra or rb individually.
Therefore, we have that the adversary only obtains an additional
observation (Otor ⊂ Ovia) if ra and rb are not corrupted while
(cid:2)
the via relay v is corrupted.
Claim 1. An adversary-corrupted via relay observes strictly
less than an adversary-corrupted circuit middle relay in Tor.
Proof. By Lemma 1, we have that the adversarial advantage
from corrupting a via relay is strictly less than corrupting
any middle relay. Via relays are positioned either between the
guard and middle relays or middle and exit relays. As such,
corrupting a middle relay in a circuit tightly upper bounds the
(cid:2)
observation points gained from corrupting both vias.
In Claim 2, we argue that ShorTor does not advantage the
adversary in any of the anonymity notions of Deﬁnition V.1
(we empirically conﬁrm this result in Section V-C).
Claim 2. ShorTor applied to the baseline Tor network with
path selection algorithm PS : N → C which outputs circuits
independently of the sender and recipient (as is currently the
case in Tor [26,27]), does not impact the anonymity notions
of Deﬁnition V.1 of the AnoA framework.
Proof. Under the AnoA framework, corrupting the middle relay
does not change the adversary’s ability to deanonymize either
sender, recipient, or relationship anonymity when the circuit
is constructed independently of the sender and recipient (see
analysis of Backes et al. [14]). This is because each middle relay
is equally probable in all communication scenarios, giving the
adversary no advantage [14]. As a consequence, by leveraging
Claim 1, corrupting one or both via relays when ShorTor is
applied to Tor does not advantage the adversary in the AnoA
(cid:2)
anonymity game of Deﬁnition V.1.
Claim 2 shows that ShorTor does not impact anonymity
of Tor. However, when the middle relay is not chosen
independently of the sender or recipient (for example, when
using location-aware path selection proposals; see Section VI),
then ShorTor can exacerbate the negative impact on anonymity.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:36:07 UTC from IEEE Xplore.  Restrictions apply. 
121944
Fig. 10: Fraction of circuits seen by relays in Tor vs. ShorTor. Left
side considers incremental deployment (Section IV-C3). As more
relays begin to support ShorTor (x-axis), the average network share
goes down, though some outliers see more trafﬁc. Right side looks at
regional network share, or the fraction of circuits seen by relays in
different regions.
Fig. 9: Anonymity impact of ShorTor, compared with baseline Tor
(client-independent) and LASTor (dependent on client location) path
selection. Each plot shows sender (SA), recipient (RA), and rela-
tionship (REL) anonymity (Deﬁnition V.1) for a different adversarial
relay corruption strategy. Shaded region represents the difference in
the MATOR-computed anonymity bounds with and without ShorTor.
“FVEY” refers to “Five Eyes” intelligence alliance member countries.
Under ANoA, ShorTor affects all anonymity notions for LASTor,
though not baseline Tor. Extended plots provided in Appendix A.
We quantify this advantage using MATOR by applying
ShorTor to LASTor [5], a location-biased path-selection pro-
posal. We emphasize that LASTor is not integrated in Tor and
has known security ﬂaws [86]—we include it as an illustrative
example of a location-aware path selection scheme.
C. Quantifying Anonymity of ShorTor
We now turn to empirically computing the worst-case
anonymity impact under the AnoA framework when ShorTor is
applied to Tor and proposed modiﬁcations thereof. We modify
MATOR (our code is open-source [1]; written in C++ and
Python) to incorporate the use of via relays as described in
Section III-B. We report our quantitative results in Fig. 9.
ShorTor applied to Tor: We conﬁrm the results of Claim 2
on the adversarial impact of ShorTor used with baseline Tor:
the worst-case anonymity bounds computed by MATOR for
baseline Tor and ShorTor are equal, as relays are selected
independently of both the sender and recipient.
ShorTor Applied to LASTor: We examine the impact of
ShorTor when combined with biased path selection algorithms
(e.g., path selection that takes client location into account).
We use the LASTor [5] proposal for this purpose. We ﬁnd
that ShorTor applied to LASTor decreases anonymity under all
three anonymity notions of Deﬁnition V.1, as via relays offer
additional observations points for the skewed distribution of
guards and exits used by LASTor.
D. Network Share and Trafﬁc Analysis Attacks
A limitation of AnoA is that it does not take into account
trafﬁc analysis attacks that can be conducted by a single point
of observation [60], such as a via relay. Most notably, this
includes website ﬁngerprinting attacks [20,45,72,80,88].
To analyze the adversarial advantage in orchestrating such
attacks in ShorTor, we consider the relative network share
disparity between baseline Tor and ShorTor. By this we mean
the relative fraction of circuits seen by a relay when acting
as part of a circuit vs. as a via. Regional network share is
a concern for Tor users primarily due to varying policies
jurisdictions [48]. Separately,
on surveillance in different
determining network share of individual relays at different
levels of deployment allows us to assess the potential security
impact of incrementally deploying ShorTor.
In Fig. 10, we plot the network share using the same
circuits as in Section IV-C2. We vary the deployment level of
ShorTor to measure the expected change in network share as
a function of relays supporting ShorTor (Section IV-C3). We
ﬁnd that ShorTor increases the median network share (as trafﬁc
traverses more nodes when using ShorTor). However, median
network share decreases with larger deployments. The worst-
case network share increases from about 0.4 % to about 0.8 %
for relays located in Germany (which is by far the country with
the most Tor relays). It is important to note that the overall
network shares remain low, indicating a small disparity in
expected network trafﬁc observed.
Our analysis does not take into account adversarial place-
ment of relays with fast network connections to boost their via
selection probability. However, this is not unique to ShorTor:
relays in Tor already have a high disparity in their network
share based on bandwidth inﬂuencing their circuit selection
probability. As such, we believe that the impact of ShorTor on
trafﬁc analysis attacks is modest and in-line with Tor’s existing
assumptions about adversarial placement of relays.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:36:07 UTC from IEEE Xplore.  Restrictions apply. 
131945
VI. RELATED WORK
In this section, we outline past works that focus on reducing
latency in Tor though optimized routing decisions. We note
that all works here operate at the circuit layer and are proposed
modiﬁcations to Tor’s circuit selection protocol. There is addi-
tionally a large body of work that alters path selection in Tor
for purposes of security [13,15,30,40,48,64,73,82,89]. While
important, these works are orthogonal to ShorTor and often
result in substantially degraded performance [61,74] without
clear security advantages over Tor’s current protocol [36,85,86].
Trafﬁc Splitting: Rather than selecting a single faster
circuit, Karaoglu et al. [49] and AlSabah et al. [7] split trafﬁc
across multiple circuits. This distributes the load of the circuit
across a larger number of relays, improving latency by reducing
congestion on relays in the circuit. Conﬂux [7] can achieve an
average reduction in time-to-ﬁrst-byte of 23 % over baseline Tor.
Splitting trafﬁc across multiple circuits solves an orthogonal
problem to that addressed in ShorTor and combining both
protocols could be an interesting future direction.
Location-Aware Path Selection: Alternative path selection
proposals that reduce latency on Tor share a common theme:
they all, either directly or indirectly, account for the location
of the client or destination server when choosing a circuit [5,9,
16,42,74,79,87]. This makes intuitive sense, as fast paths are
likely to also be geographically short and, in particular, are
unlikely to contain multiple ocean crossings.
Imani et al. [42] propose to improve performance of Tor
circuits by having clients build multiple circuits, then prefer-
entially select from those according to a series of strategies
focusing on circuit length, RTT, and congestion. In addition
to latency, Sherr et al. [79] include measurements of jitter and
packet loss when selecting relays.
Wang et al. [87] opportunistically selects relays with low
latency to construct circuits that avoid congested relays.
NavigaTor [9] applies a similar strategy to Wang et al. [87]
and demonstrates improved performance by using latency
(speciﬁcally round-trip time) to discard slow Tor circuits.
PredicTor [16] avoids the overhead of constructing then
discarding multiple circuits by using a random forest classiﬁer
trained on Tor performance data to predict the performance
of a circuit prior to building it. CLAPS (CLient Aware Path
Selection) [74] solves a weight-optimization problem to ensure
a strict bound on anonymity degradation when selecting
location-biased circuits.
There additionally exists a large body of work on the security
implications of location awareness in path selection as this can
make Tor clients more identiﬁable by creating a correlation
between their geographic location and the relays chosen for
their circuit [12,14,36,60,61,74,85,86]. As shown in Section V,
ShorTor does not share this problem and is able to reduce
latency for Tor clients without the security pitfalls of location-
aware circuit selection techniques.
VII. DISCUSSION
Other sources of delay in Tor: The type of overhead
that ShorTor addresses is not the largest source of delay
in Tor. Limited congestion control [6,32], under-optimized
multiplexing of circuits on TCP connections [17,18], and high
queuing delays [43,44,46] are likely larger contributors to
latency in Tor than suboptimal BGP routes. Despite this, we
believe ShorTor to be of interest. The source of delays addressed
by ShorTor and the techniques applied are both completely
independent of other delays in Tor. Because of this, the decrease
in latency provided by ShorTor will trivially stack with any
future improvements to congestion control, circuit multiplexing,
or queueing. As such, we believe ShorTor to be a valuable
contribution to improving the latency of Tor connections.
Compatibility with security-focused path selection:
ShorTor is also fully compatible with any modiﬁcations to
Tor’s path selection algorithm. Prior work has shown that
existing proposals, overviewed brieﬂy in Section VI, suffer from
poor load balancing and non-uniform client behavior, hurting
performance and client anonymity [12,14,36,60,61,74,85,86].
However, this does not preclude some future path selection
proposal from improving upon Tor’s current algorithm. In
this case, ShorTor is again agnostic to the choice of the
path selection algorithm and would require no modiﬁcation to
continue improving latency on top of the new algorithm.
Generality: While we apply multi-hop overlay routing to
Tor speciﬁcally, we note that it is a general purpose technique.
Evaluating its effectiveness for other relatively small scale,
distributed communication networks is an interesting direction
for future work. However, as shown by prior work [75] and
conﬁrmed here for Tor, accurate evaluation of multi-hop overlay
routing cannot be done with general purpose latency data and
requires measurements from the speciﬁc network involved.
VIII. CONCLUSION
We presented ShorTor, an incrementally-deployable protocol
for improving the latency of Tor’s connections. We evaluated
the performance and security of ShorTor, demonstrating that
it provides substantial improvements to tail latencies on Tor
circuits, with minimal impact to security. As part of our
evaluation we collected a dataset of pairwise latencies between
the thousand most popular Tor relays. This dataset allowed
us to determine the reduction in latency ShorTor provides
to Tor circuits directly without relying on simulation or
approximated data. Finally, while we proposed and evaluated
ShorTor speciﬁcally for Tor, the protocol is general and has
foreseeable applications to other distributed communication
networks.
IX. ACKNOWLEDGEMENTS
We would like to thank Arthur Berger for invaluable
suggestions and discussion surrounding internet routing, Frank
Cangialosi for conversations about Ting and tips on measuring
the Tor network, and Anish Athalye for his ideas around
evaluating page load times and feedback on our security
analysis. We are also grateful to the Tor community for their
support of this project and, in particular, Roger Dingledine,
Georg Koppen, and Tariq Elahi for extensive advice related to
running our experiments.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:36:07 UTC from IEEE Xplore.  Restrictions apply. 
141946
REFERENCES
[1] Source code for ShorTor measurement infrastructure and
MaTor security analysis. https://github.com/sachaservan/
ShorTor.
[2] RIPE Atlas.
https://atlas.ripe.net/, 2021. Accessed
December 2021.
[3] Akamai.
Content delivery networks — what
is a
CDN? https://www.akamai.com/our-thinking/cdn/what-is-
a-cdn, 2021. Accessed December 2021.
[4] Akamai. SureRoute. https://developer.akamai.com/article/
sureroute, 2021. Accessed December 2021.
[5] Masoud Akhoondi, Curtis Yu, and Harsha V Madhyastha.
LASTor: A low-latency AS-aware Tor client. In 2012
IEEE Symposium on Security and Privacy, pages 476–490.
IEEE, 2012.
[6] Mashael AlSabah, Kevin Bauer, Ian Goldberg, Dirk Grun-
wald, Damon McCoy, Stefan Savage, and Geoffrey M.
Voelker. DefenestraTor: Throwing out windows in Tor.
In Simone Fischer-H¨ubner and Nicholas Hopper, editors,
Privacy Enhancing Technologies, pages 134–154, Berlin,
Heidelberg, 2011. Springer Berlin Heidelberg.
ISBN
978-3-642-22263-4.
[7] Mashael AlSabah, Kevin Bauer, Tariq Elahi, and Ian
Goldberg. The path less travelled: Overcoming Tor’s bot-