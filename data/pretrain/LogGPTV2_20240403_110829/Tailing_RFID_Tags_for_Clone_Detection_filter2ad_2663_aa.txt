title:Tailing RFID Tags for Clone Detection
author:Davide Zanetti and
Srdjan Capkun and
Ari Juels
Tailing RFID Tags for Clone Detection
Davide Zanetti
Srdjan Capkun
Ari Juels
ETH Zurich, Switzerland
ETH Zurich, Switzerland
RSA, The Security Division of EMC
PI:EMAIL
PI:EMAIL
PI:EMAIL
Abstract
RFID (Radio-Frequency IDentiﬁcation) is a key emerg-
ing technology for supply-chain monitoring and detection
of counterfeit and grey-market goods. The most preva-
lent RFID tags are, however, simply “wireless barcodes,”
themselves vulnerable to cloning and counterfeiting. While
continuous monitoring can, in principle, detect cloning at-
tacks, real-world supply chains often contain signiﬁcant
blind zones where tag readings are unavailable, allowing
attackers to inject counterfeit goods with cloned tags into
supply chains undetectably.
This paper introduces tailing, a novel approach, both
simple and practical, for detecting cloned RFID tags in sup-
ply chains. With tailing, RFID readers write random values
to tags as they pass through a supply chain, creating in each
tag a tail composed of random values. The tails of legitimate
tags and cloned ones diverge over time, making cloning de-
tectable by a centralized detector even across blind zones.
We show that tailing works with existing barcode-type
tags (e.g., EPC tags). The centralized detector is non-
interactive, and requires no modiﬁcation of existing supply-
chain data ﬂows. We characterize the cloning-detection ef-
ﬁcacy of tailing analytically and through supply-chain sim-
ulations, showing that tailing presents high detection rates
and low false positive rates, as well as rate tradeoffs out-
performing those of previous schemes.
1
Introduction
Radio-Frequency IDentiﬁcation (RFID) tags are inex-
pensive wireless microchips used to identify physical ob-
jects. RFID tags are present in passports, drivers’ licenses,
clothing, payment cards, and on shipping cases.
A major driver of the deployment of RFID systems is to
prevent/detect counterfeiting, the introduction of fake goods
into a supply chain. By afﬁxing RFID tags directly to goods
or the cases in which they are transported, supply-chain
partners can automatically track goods in transit, facilitat-
ing detection of counterfeits. Counterfeit detection is of vi-
tal importance to many industries, such as the pharmaceu-
tical industry, in which counterfeit goods have caused not
only large proﬁt losses, but also patient deaths [25]. De-
tection of counterfeit items in RFID-enabled supply chains
may seem straightforward, since RFID tags typically emit
unique identiﬁers: A supply-chain partner can in principle
conﬁrm an object’s authenticity by checking its serial num-
ber against a shipping manifest or with a directory service
spanning supply-chain partners, e.g., EPCIS [10]. However,
two major challenges to RFID counterfeit detection remain:
Cloning attacks and fragmentary supply-chain visibility.
Cloning attacks. Due to cost and power constraints, most
RFID tags used in supply chains, known as EPC (Electronic
Product Code) tags [11], have only “barcode”-like function-
ality. They emit raw data, with no authentication; their full
data contents may then be easily extracted and copied into
a special-purpose clone device or another tag [20]. Even
tags with cryptography generally offer minimally effective
tamper resistance or side-channel protections [12, 28].
Fragmentary supply-chain visibility. RFID tags are gen-
erally passive devices that transmit data only to nearby
RFID readers. Their range is often limited to just tens of
meters, and potentially further reduced by factors such as
tag orientation, tag placement, and nearby materials (e.g.,
metal, water). Additionally, in supply chains, large pop-
ulations of tags are often scanned in a short time (like a
pallet of tagged goods passing through an RFID-enabled
gate), causing read failures. Finally, some commercial part-
ners cannot share supply-chain information or do not do so
for fear of disclosing sensitive business intelligence. Entire
segments of a supply chain may be opaque to participating
entities. Thus, real-world supply chains often have large
“blind zones,” in which RFID tags scans do not happen or
are not reported.
These two challenges undermine the effectiveness of
unique identiﬁers in clone detection. Authentic identiﬁers
do not ensure authentic tags or goods. Even natural de-
tection strategies like looking for multiple, simultaneous
appearances of the same tag identiﬁer have limited effect.
Blind zones can mask evidence of cloned tags or create in-
consistencies in observed tag paths that lead to false alarms.
In this paper, we introduce a new approach to clone de-
tection in RFID-enabled supply chains that we call tailing.
Tailing consists of RFID readers writing random symbols
into tags, creating in each tag a tail of values that evolves
over time. Writing multiple symbols into the tags grad-
ually randomizes the tails; this preserves symbol discrep-
ancies over time, propagating them through blind zones.
While passing through the supply chain, clones and authen-
tic tags thus diverge in appearance, rendering clones more
easily detectable. Tailing does not rely on any pre-deﬁned
(in)correct information based on supply-chain structure or
product ﬂow, which would make it sensitive to shifts in
supply-chain dynamics.
It relies instead on purpose-built
evidence in the form of tails.
We analyze tailing both analytically and through sim-
ulations. To this end, we introduce an adversarial model
suitable for the study of RFID clone-detection, which cap-
tures a broad space of adversarial capabilities such as reader
compromise, and factors in chain conﬁguration and visibil-
ity. To the best of our knowledge, it is the ﬁrst supply-chain
model in which adversaries can compromise readers.
We ﬁrst explore tailing analytically by evaluating the
probability of successful clone injection, i.e., undetected
passage of a clone through the supply chain. We show that
tailing diminishes the success probability of even strong ad-
versaries that compromise many readers. We then eval-
uate the impact of blind zones and reader errors, show-
ing the effectiveness of tailing in the face of the resulting
fragmentary visibility.
Secondly, we holistically evaluate the security of tail-
ing by simulating its use in various supply-chain scenarios
with different degrees of visibility, chain structures, prod-
uct ﬂows, and adversaries. These simulations show that
tailing achieves high clone-detection rates and low false-
alarm rates even when visibility is highly fragmentary, as in
real-world RFID-enabled supply chains. We further com-
pare our mechanism against existing approaches [24, 36];
we ﬁnd that tailing outperforms them in terms of true posi-
tive rate / false negative rate tradeoffs.
Finally, we show that tailing meets the resource require-
ments of ordinary, barcode-type RFID, such as EPC tags
(e.g., tailing requires only 8 bits of tag memory).
In ad-
dition, we show that tailing should scale with acceptable
overhead in real-world supply chains.
The rest of the paper is organized as follows.
In Sec-
tion 2 we describe the considered supply-chain scenario and
our system and adversarial models. We introduce tailing in
Section 3 and provide an overview of our main results in
Section 4. We present the results of analytic, simulation-
based, and performance evaluations in Sections 5, 6, and 7
respectively. We compare tailing to existing work in Sec-
tion 8, while Section 9 gives an overview of related work.
We conclude the paper in Section 10.
2 Problem Statement
We now describe the considered RFID-enabled supply-
chain scenario and present our system and adversarial mod-
els, which are depicted in Figure 1.
2.1 RFID(cid:173)enabled Supply Chains
RFID-enabled supply chains are traditional supply
chains enhanced such that each product (or pallet of prod-
ucts) is equipped with an RFID tag containing a unique
identiﬁer (ID). Supply-chain partners, like manufacturers,
distributors, and retailers deploy RFID systems to create,
store, and share observations of the tags/products circulat-
ing in the supply chain. An RFID system is typically com-
posed of a front end, which includes RFID tags and read-
ers, and a back end, which includes databases and service-
oriented platforms like discovery and tracking services.
A product and its tag are considered to be a single, in-
separable element. Tag hardware is constrained: Tags have
limited memory and only basic functional capabilities. We
assume no (cryptographic) authentication between tags and
readers, as is the case with the EPC C1G2 standard [11] – a
de facto RFID standard for supply chains. We also assume
that the tag ID is not writable, but the tag memory can be
read and (re)written by any nearby reader.
On each tag observation by a reader, an event is created
and stored in a local database. An event encapsulates in-
formation about the process S (e.g., receiving, stocking, or
shipping), occurrence time T , and location L in which a
product/tag ID is sighted. Two special events are created
when tags enter the supply chain (an into-the-chain event,
created at the manufacturer when tags and IDs are assigned
to products) and when tags leave the chain (out-of-the-chain
event, created at the retailer). Each supply-chain partner is
equipped with multiple RFID readers and local databases.
Third party services may be authorized to access, aggregate,
and analyze events from partners’ local databases, typically
to optimize business processes.
Our approach assumes failures in the front end during
tag-reader communication, but that back-end failures are
negligible. We also consider that some partners may not
share data. We call it a misevent when an event is not re-
ported (shared), a misread when a tag passes unnoticed (i.e.,
when no events are created), and a miswrite when a tag write
operation fails (possibly corrupting memory). We do not
consider broken or damaged tags and we assume that phan-
tom reads are negligible and that multiple reads of the same
tag are ﬁltered out during data collection.
As for the supply-chain structure, we assume that part-
ners know only their direct business partners and may con-
tinuously join and leave the chain. In terms of product ﬂow,
we consider recalls as well as misdeliveries.
Counterfeiter
123
1
Manufacturer
L1
123
ID
123
T
L
S
11:20.120
25/07/12
L1 Shipping
Distributor
L2
2
123
123
3
Distributor
L3
123
123
123
5
6
Retailer
L4
123
4
Retailer
L5
Retailer
L6
123
123
7
1
2
3
Counterfeiter
Counterfeit injection point
4
5
Compromized RFID reader
Inactive RFID reader
Misread
6 Misevent (DB not online)
7 Miswrite
Figure 1. An RFID(cid:173)enabled supply chain af(cid:173)
fected by blind zones and reader failures (mi(cid:173)
sevents, misreads, miswrites, inactive read(cid:173)
ers), as well as by counterfeiter’s actions
(clone injection, reader compromise), while
a genuine product (ID = 123) and its clone
are circulating in it.
2.2 System and Adversarial Models
The goal of the adversary is to inject counterfeit goods
into the supply chain without detection by a centralized de-
tector. This detector has a global view of the tags/goods
in the supply chain: It collects and correlates events from
the local databases of supply-chain partners. The adversary
seeks to hide the presence of its counterfeits from the de-
tector. We assume that all genuine products in the supply
chain carry RFID tags. Therefore, a counterfeit product will
pass as genuine only if it is equipped with a tag. Moreover,
that tag must bear a valid and unique ID associated with a
genuine product.
The visibility of the detector into the supply chain is lim-
ited to a subset of readers that participate in clone detection,
and is affected by misevents, misreads, and miswrites. The
detector does not rely on any pre-deﬁned information about
the supply-chain structure (e.g., partner relationships and
locations) and product ﬂow (e.g., transportation times).
The adversary controls a subset of readers. Such control
models several forms of adversarial intrusion into the sup-
ply chain, including collusion with supply-chain partners,
corruption of reader hardware/software, bribery of employ-
ees, and so forth. When the adversary compromises readers
participating in the clone detection, it controls the channel
to the detector and can dictate if and what data the latter
receives. The adversary can inject new products into the
supply chain with RFID tags bearing data of its choice and,
additionally, knows valid identiﬁers for all tags in the sup-
ply chain at any given time. We call a clone a counterfeit
product that carries a valid ID. The adversary may perform
any of the following actions at the compromised readers:
• Emulation: The adversary may simulate the presence
of an RFID tag, with data of its choice.
• Blocking: The adversary may prevent a compromised
reader from scanning selected nearby RFID tags.
• Tampering: The adversary may alter the data contents
of passing tags, but not tags’ IDs, which are read-only.
The adversary also knows the paths followed by products
in the supply chain.
(Paths tend to be dictated by easy-
to-ascertain commercial relationships, and are often fairly
stable over time.) Thus it has the following capabilities:
• Injection point selection: The adversary can select
counterfeit injection points.
• Knowledge of genuine path: The adversary knows the
paths of genuine products.
• Knowledge of counterfeit path: The adversary knows
the paths of counterfeit products.
The adversary is, however, restricted in three key regards:
• No access to detector database: The adversary cannot
read or modify data gathered by the detector (but can
add data to the database via emulation).
• No product ﬂow (path) modiﬁcation: The adversary
cannot modify the paths followed by genuine goods in
the supply chain (but can specify the paths taken by
counterfeit products).
• No product ﬂow (lead time) modiﬁcation: The adver-
sary cannot modify the product lead times (i.e., the
times that products spend in the different steps of the
supply chain like warehousing or transportation). The
adversary does, though, learn the relative timestamps
of the events for both genuine and counterfeit prod-
ucts. (For example, the adversary knows that reader i
scans a genuine product before reader j scans the cor-
responding counterfeit.)
Finally, we assume that a counterfeit appearing before
the genuine product enters, or after it leaves the supply
chain is easily detected by verifying the corresponding into-
the-chain and out-of-the-chain events. We refer to such a
detection mechanism as whitelist-based detection.
3 Tailing for Clone Detection
Tail, Pointer
AXC,2
AXY,3
WXY,1
WMY,2
Genuine product
123
123
123
123
Tailing relies on the creation and veriﬁcation of traces
of collected tag events. It requires collaboration between
supply-chain partners and a service-oriented platform, the
detector, and draws information from across the entire
RFID system. It involves four different steps: (i) Tail mod-
iﬁcation, (ii) event collection, (iii) rule veriﬁcation, and
(iv) clone detection.
3.1 Tail Modiﬁcation
As previously mentioned, a tag’s tail consists of a se-
quence of random symbols that evolve over time. Tail mod-
iﬁcation is performed individually by each RFID reader par-
ticipating in clone detection. It requires no interaction with
the detector or other supply-chain partners (or other read-
ers, for that matter). The operation of tail modiﬁcation is
an extension of the tag observation operation as detailed in
Section 2.1, and affects both the tag memory and the obser-
vation event stored in the local database.
To modify a tag’s tail, a reader refers to a stored value (in
the tag memory) that we call the tail pointer, which points
to the most recently modiﬁed tail position. It then writes a
piece of random data (some random bits), a symbol, to the
next available position in the tag memory, and increments
and writes the new tail pointer value. The associated event
created and stored in a local database includes, in addition
to the ID, T , L, and S attributes, the tag tail T T and the
tail pointer T P . It also includes a tailing ﬂag T F , which
indicates if the event is usable by the detector (i.e., that the
reader is participating in tailing and the event appears to be
valid). More precisely, to modify a tail, a reader: (i) Reads
the tag ID, tail, and tail pointer from tag memory, (ii) up-
dates the tail pointer (unitary increment, with wraparound)
and stores it in the tag memory, (iii) picks a random symbol
and inserts it in the tail, i.e., writes it to the next available
position indicated by the pointer, and (iv) creates an event
containing attributes (ID, T, L, S, T T, T P, T F ) and adds
it to its local database.
Naturally, partners must agree on or standardize system
parameters for use by the detector. A reader can at any time
signal non-participation by marking its events as unusable
using the tailing ﬂag (T F ).
3.2 Rule Veriﬁcation and Clone Detection
Upon request by a supply-chain partner, the detector col-
lects all of the events (with valid T F s) related to a speciﬁc
tag ID to build what we call a tag trace. It validates this
trace, looking for evidence of cloning, against a set of rules
that we now describe.
Tag trace
(events)
AXC,2
AXY,3
WXY,1
WMY,2
Rule Verification
t0
t1
(a)
t2
t3