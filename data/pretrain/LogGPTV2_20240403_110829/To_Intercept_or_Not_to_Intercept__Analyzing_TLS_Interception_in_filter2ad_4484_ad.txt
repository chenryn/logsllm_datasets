✓
N/A
certificates to the browser, while pfSense, Microsoft TMG and Cisco
Ironport WSA terminate the connection. Regarding malformed
extension values, none of the appliances blocked the anomalous
certificate: Untangle and Microsoft TMG accepted it and displayed
the web page, while pfSense and Cisco Ironport WSA passed it to
the browser, which caught it and blocked access. Microsoft TMG
and Cisco Ironport WSA check the revocation status of the offered
certificates, while Untangle and pfSense do not. When exposed
to expired leaf certificates, Untangle, pfSense and Microsoft TMG
block access, while Cisco Ironport WSA forwards the certificates to
the browser, as its default settings are configured to only monitor
expired leaf, and not to drop the connections.
Untangle fails to detect expired or not yet valid root CA cer-
tificates; pfSense and Microsoft TMG block access, while Cisco
Ironport WSA disallows adding them to its trusted store in the
first place. When exposed to leaf certificates whose keyUsage do
not include keyEnciphernment, Untangle, pfSense and Cisco Iron-
port WSA terminate the TLS connections, while Microsoft TMG
allows them. Untangle fails to detect root CA certificates that do
not have keyCertSign among the keyUsage values, while pfSense
and Microsoft TMG block access, and Cisco Ironport WSA disal-
lows adding such a root CA certificate to its trusted store. Similarly,
Cisco Ironport WSA disallows adding root CA certificates whose
extKeyUsage parameter is codeSigning, while Untangle, pfSense
and Microsoft TMG accept connections with such certificates.
As for root CA RSA key sizes, Cisco Ironport WSA does not
allow adding RSA-512 root certificates to its store, Untangle and
pfSense permit TLS connections involving such certificates, while
➙
✓
✓
✓
✓
✓
✓
N/A
➙
✓
✓
✓
✓
N/A
➙
✓
✓
✓
✓
✓
✓
N/A
Microsoft TMG successfully terminates the connection. All of the
tested appliances permit server certificates signed by RSA-1024 root
CA certificates.
Regarding leaf certificate key sizes, all appliances terminate con-
nections that utilize RSA-512. Untangle, pfSense and Cisco Ironport
WSA accept RSA-768, RSA-1016, and RSA-1024 certificates, while
Microsoft TMG blocks access to RSA-768 and RSA-1016 but allows
RSA-1024 certificates. Microsoft TMG mirrors signature hashing
algorithms, so weak and deprecated hash algorithms are passed to
the client. Untangle and pfSense do not accept certificates signed
using the MD4 algorithm, while Cisco Ironport WSA continues
connections with such certificates. On the other hand, MD5 and
SHA1 are accepted by pfSense and Cisco Ironport WSA, while
Untangle accepts SHA1 and disallows MD5. When exposed to cer-
tificates signed by their own key pair, Untangle and Microsoft TMG
fail to notice the anomaly, while pfSense and Cisco Ironport WSA
terminate the connection. Note that, when a TLS connection is ter-
minated, Untangle and Microsoft TMG use a TLS handshake failure;
pfSense redirects the connection to an error page; and Cisco Iron-
port WSA uses an untrusted CA certificate, relying on the browser
to block it.
For all appliances, we check if the TLS inspection feature is en-
abled by default after the activation of the appliances, or if it requires
any manual step. Only UserGate Web Filter enables inspection by
default. Thus, due to the lack of any certificate validation in User-
Gate, users located behind a freshly installed UserGateappliance
are automatically vulnerable to trivial MITM attacks.
ASIA CCS ’18, June 4–8, 2018, Incheon, Republic of Korea
Louis Waked, Mohammad Mannan, and Amr Youssef
Table 5: Results for certificate validation, part III. For legend, see Table 3.
Root Key
Length
(Good Leaf)
512
1024
✓
✓
✓
✓
✓
✓
✓
✓
✓
Untangle
pfSense
WebTitan Gateway
Microsoft TMG
UserGate Web Filter
✓
Cisco Ironport WSA N/A
512
Leaf Key
Length
(Good Root)
768
1016
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
Signature Hashing
Algorithm
1024 MD4 MD5
✓
✓
✓
✓
✓
✓
✓
✓
➙
✓
✓
✓
➙
✓
✓
SHA1
✓
✓
✓
➙
✓
✓
DHE
Modulus
Length
512
1024
✓
✓
✓
✓
✓
✓
✓
Own
Root
✓
✓
✓
✓
Table 6: Results for CA trusted stores, private keys and initial setup. ‘N/A’: not available as we could not locate the private key
on disk; ‘None’: the appliance does not rely on any store, as it performs no certificate validation; ‘World’: readable by any user
account on the appliance.
Trusted CA Store
Location
/usr/share/untangle/lib/
ssl-inspector/trusted-ca-list.jks
/usr/local/share
/certs/ca-root-nss.crt
Untangle
pfSense
WebTitan Gateway
N/A
Microsoft TMG
UserGate Web Filter
Cisco Ironport WSA
mmc.exe
Windows Trusted Store
Local Computer
N/A
Network → Certificate
Management → Cisco
Trusted Root Certificate List
Type
Java
Key Store
Mozilla
NSS
None
Microsoft
Store
None
Location
Private Key
State
Read Permission
/usr/share/untangle
/settings/untangle-
certificates/untangle.key
/usr/local/etc
/squid/serverkey.pem
/usr/blocker/ssl
/ssl_cert/webtitan.pem
CERT_SYSTEM_STORE
_LOCAL_MACHINE_MY
/opt/entensys/webfilter
/etc/private.pem
Plaintext
Plaintext
Plaintext
Exportable
Key
Root
World
World
Admin
Plaintext
World
Cisco GUI
N/A
N/A
N/A
Initial Behavior
Inspection
By Default
Pre-Generated
Key Pair
Off
Off
Off
Off
On
Off
No
No
No
No
No
No
5.3 CA Trusted Stores
In this section, we analyze the results concerning CA trusted stores,
their accessibility, source, and content; see Table 6. Note that, as
WebTitan Gateway and UserGate Web Filter do not perform any
certificate validation, their trusted stores are of no use.
Accessibility. Untangle’s file system can be accessed through SSH.
We found that Untangle relies on two CA trusted stores, saved in
Java Keystore files on the filesystem. The first store, ‘trusted-ca-
list.jks’, holds the CA authorities trusted by default by Untangle,
while the second store, ‘trustStore.jks’, holds the custom CA cer-
tificates, added by the machine administrator through Untangle’s
UI. pfSense also allows SSH, and we found that its CA trusted store
on the FreeBSD filesystem under ‘ca-root-nss.crt’. pfSense does
not offer any UI to add custom CA certificates. We append our
crafted certificates to the original store, in a format that includes
the public key, in addition to the text meta-data (OpenSSL’s ‘-text’
option). Microsoft TMG relies on the Windows Server’s standard
trusted store. To view the content of the trusted store and to inject
our crafted CA certificates, we rely on the conventional tool, the
Microsoft Management Console, in the Trusted Root Certification
Authorities section of the Local Computer. Cisco Ironport WSA’s
trusted CA store can be accessed through the appliance’s web inter-
face, under the Cisco Trusted Root Certificate List. The appliance
also includes another interface, the Cisco Blocked Certificates, for
untrusted issuer certificates. To add custom CA certificates, the
appliance includes a third interface, the Custom Trusted Root Cer-
tificates. However, Cisco Ironport WSA does not allow the injection
of most of the invalid Root certificates, and responds with an error
in these cases.
Source and content. As documented on Untangle’s SSL Insepctor
wiki page [21], the list of trusted certificates is generated from the
Linux ca-certificates package, in addition to Mozilla’s list of cer-
tificates. However, the list includes Microsoft’s own Root Agency
certificate, which indicates the additional inclusion of the Windows
trusted certificates. The Root Agency certificate is an RSA-512 cer-
tificate, valid until 2039, which can be readily compromised.1 It has
been used since the 1990s as the default test certificate for code
signing and development; Windows systems still include this cer-
tificate, but mark it as untrusted. The private key corresponding to
this certificate could also be extracted from the MakeCert tool, as
it is hard-coded. As a result, Untangle is instantly vulnerable to a
trivial MITM attack, using the Root Agency’s certificate key pair.
1In 2016, it took about four hours and $75 to factor RSA-512 using Amazon EC2 [46].
Analyzing TLS Interception in Network Appliances
ASIA CCS ’18, June 4–8, 2018, Incheon, Republic of Korea
Untangle’s trusted store also includes 21 RSA-1024 root certificates,
and 30 expired certificates. It also includes certificates from issuers
that are no longer trusted by major browser/OS vendors: three CN-
NIC ROOT CA certificates, six DigiNotar root CA certificates, three
TÜRKTRUST CA certificates, and four WoSign CA certificates.
pfSense’s trusted CA store relies on the Mozilla’s NSS certificates
bundle, extracted from the nss-3.30.2 version, with 20 untrusted
certificates omitted from the bundle, as specified in the header of
the trusted store. It does not include any RSA-512 or RSA-1024
certificates, and no expired certificates. However, the store includes
two CNNIC ROOT CA certificates, and four WoSign CA certificates.
Similar to all Windows operating systems, the Windows Server
2008 R2 which hosts Microsoft TMG, does not display the full list
of trusted root certificates in its management console, and instead,
only displays the root certificates of web servers already visited. We
thus rely on the Microsoft Trusted Root Certificate Program [14]
to browse the list of certificates trusted to the date of the testing.
We found that the list includes two CNNIC ROOT CA certificates,
two TÜRKTRUST CA certificates, two ANSSI CA certificates, and
four WoSign CA certificates. Nonetheless, the acquired list does
not include the RSA key sizes of the certificates, their expiry dates,
or their revocation states. As for Cisco Ironport WSA, we found
four potentially problematic root CA certificates included into the
trusted store, related to TÜRKTRUST. All certificates included in
Cisco’s trusted store are trusted by current browser/OS vendors.
However, the RSA key sizes are not displayed within the UI, so we
could not check for RSA-512 and RSA-1024 CA certificates.
5.4 Private Key Protection
In this section, we discuss the results regarding the TLS proxies’
private keys, in terms of storage location, state, and the privilege
required to access them; see Table 6.
We could not access the filesystem of Cisco Ironport WSA’s
AsyncOS to locate the private key on disk. Instead, we extract its
private key from memory using Heartleech [9] (see Appendix B for
details). As there is no information on the private key on disk, and
the located key was used only for testing external content signed by
own key, we do not discuss this appliance in the rest of the section.
We rely on the methodologies stated in Section 4.2 to access the
filesystem for non-Windows network appliances. pfSense and Un-
tangle’s access is acquired through SSH, while WebTitan Gateway’s
access is acquired through the mounting of its virtual disk drive on
a separate machine. UserGate provides access to its OS terminal by
default. Untangle, pfSense, WebTitan Gateway and UserGate store
their plaintext private keys in directories on their OS filesystems (as
‘untangle.key’, ‘serverkey.pem’, ‘webtitan.pem’, and ‘private.pem’
files, respectively). pfSense, WebTitan Gateway and UserGate allow
the read file permission to all users accounts (write is restricted to
root), while Untangle allows read/write only to the root account.
Microsoft TMG’s private key is stored using Microsoft’s Soft-
ware Key Storage Provider, utilizing CNG. The key is an exportable
key, meaning that it can be exported through the Microsoft Man-
agement Console, if opened with the right privileges. The Microsoft
Management Console must be executed with SYSTEM privileges
to export the private key. We rely on the Mimikatz tool to export
the key, which requires a less privileged Administrator account.
None of the tested appliances use pre-generated keys/certificates.
We installed multiple instances of each appliance, and each one has
a distinct certificate.
5.5 Practical Attacks
In this section, we summarize how the vulnerabilities reported
could be exploited by an attacker.
MITM attacks can be trivially launched to impersonate any web
server against clients behind UserGate (by default) and WebTitan
Gateway (after TLS interception is enabled), due to their lack of
certificate validation. Clients behind Untangle are also similarly
vulnerable, due to the RSA-512 ‘Root Agency’ certificate in its