### Optimized Text

#### Setup and Definitions
We will consider the set of identities \(\mathcal{I}\) and let \(g_T\) be the gadget matrix \(\begin{pmatrix} 1 & \delta \end{pmatrix} \in \mathbb{R}^{1 \times 2}\). Let \(a_1 \in \mathbb{R}^3_{q_1}\) and \(a_2 \in \mathbb{R}^3_{q_2}\).

**GSetup(1\(\lambda\))**:
1. Sample \(A := \begin{pmatrix} a_1^T \\ a_2^T \end{pmatrix}\).
2. Sample \(a \xleftarrow{\$} \mathbb{R}^2_{q_2}\).
3. Sample \(R \xleftarrow{\$} S^{2 \times 2}_{q_2}\).
4. Set \(b^T = a^T R \in \mathbb{R}^{1 \times 2}_{q_2}\).
5. Sample \((s_{01}, s_{02}, s_{03}) \xleftarrow{\$} D^1_r \times D^3_s \times D^2_s\).
6. Set \(g_{pk} := (A, a, b, u)\).
7. For \(i \in \mathbb{Z}^*_{q_2}\):
   - Sample \(s_{i3} \xleftarrow{\$} D^3_s\).
   - Sample \((s_{i1}, s_{i2}) \in \mathbb{R}^4\) such that \((a^T | b^T + i g_T) \begin{pmatrix} s_{i1} \\ s_{i2} \end{pmatrix} = u - a^T s_{i3}\).
   - Set \(u := (a^T | b^T + i g_T | a^T) \begin{pmatrix} s_{i1} \\ s_{i2} \\ s_{i3} \end{pmatrix}\).
8. For \(i \in \mathbb{Z}_{q_2}\), set \(sk_i := s_i := (s_{i1}, s_{i2}, s_{i3})\).

Intuitively, user \(i\) can sign a message \(M \in \{0, 1\}^*\) by providing a non-interactive proof that they know a small \(s \in \mathbb{R}^7\) such that \((a^T | b^T + i g_T | a^T) s = u\). The message is part of the hash that generates the challenge. However, this would reveal their identity. To circumvent this issue, we commit to the part of the matrix that depends on \(i\) (i.e., \(i g_T\)) and prove knowledge of a solution to a related equation.

#### Signature Generation
**Sign(M, \(s_i\))**:
1. Set \(t := \begin{pmatrix} t_1 \\ t_2 \end{pmatrix} = \text{Com}(i, r) \in \mathbb{R}^{q_1} \times \mathbb{R}^{q_2}\), where \(r \xleftarrow{\$} S^3_1\).
2. Set \(t' := \begin{pmatrix} t'_1 \\ t'_2 \end{pmatrix} = \text{Com}(i \delta, r')\), where \(r' \xleftarrow{\$} S^3_1\).
3. Set \(v^T := (a^T | b^T + \begin{pmatrix} t_2 & t'_2 \end{pmatrix} | a^T) \in \mathbb{R}^{1 \times 7}_{q_2}\).
4. In parallel:
   - Compute a proof \(\Pi_1\) that \(t, t'\) open to messages \(m, m'\) such that \(m' = \delta m\).
   - Compute a proof \(\Pi_2\) that \(t\) opens to a message \(m\) such that \(m = \sigma^{-1}(m) = \sigma^{-5}(m)\).
   - Compute a proof \(\Pi_3\) of knowledge of \(s'\) such that \(v^T s' = u\).
5. Output the signature \(z = (t, t', \Pi_1, \Pi_2, \Pi_3)\).

The proofs \(\Pi_1, \Pi_2, \Pi_3\) use the Fiat-Shamir heuristic to transform interactive proofs into non-interactive ones in the random oracle model. The message \(M\) is included in the random oracle call to obtain a signature. For extraction, all proofs must be executed with the same challenge. This is done by running all three proofs in parallel and computing a common challenge as a hash of all relevant information.

#### Signature Verification
**Verify(t, t', \(\Pi_1, \Pi_2, \Pi_3\))**:
1. Let \(t = \begin{pmatrix} t_1 \\ t_2 \end{pmatrix}\) and \(t' = \begin{pmatrix} t'_1 \\ t'_2 \end{pmatrix}\).
2. Let \(v^T = (a^T | b^T + \begin{pmatrix} t_2 & t'_2 \end{pmatrix} | a^T)\).
3. Verify \(\Pi_1\) using \(t, t', \delta\).
4. Verify \(\Pi_2\) using \(t, \sigma^{-1}, \sigma^5\).
5. Verify \(\Pi_3\) using \(v\).

#### Adding the Opening
To open the group signature scheme, we add a verifiable encryption. The signer encrypts their identity using a public key associated with a decryption key that the group manager possesses and proves that the encryption is indeed of their identity.

**PKESetup(1\(\lambda\))**:
1. Sample \(a \xleftarrow{\$} \mathbb{R}^Q\).
2. Sample \(s, e \xleftarrow{\$} S^3_Q\).
3. Set \(b := as + e \in \mathbb{R}^3_Q\).
4. Output \((s, (a, b))\).

**Enc((a, b), r, t_1)**:
1. Set \(B_1 := \begin{pmatrix} pb_1 & 0 & p & 0 & 0 & 1 & 0 & 0 \\ pb_2 & 0 & 0 & p & 0 & 0 & 1 & 0 \\ pb_3 & 0 & 0 & 0 & p & 0 & 0 & 1 \end{pmatrix}\).
2. Sample \(r, e_1 \xleftarrow{\$} S^1\).
3. Sample \(e_2 \xleftarrow{\$} S^3\).
4. Set \(u := p(ar + e_1)\).
5. Set \(v := p(br + e_2) + m\).
6. Set \(B_2 := \begin{pmatrix} pa & p & 0 & 0 & 0 & 0 & 0 & 0 \\ 0 & 1 & 0 & 0 & 0 & 0 & 0 & 0 \end{pmatrix} \in \mathbb{R}^{1 \times 8}\).
7. Set \(B := \begin{pmatrix} B_1 \\ B_2 \end{pmatrix} \in \mathbb{R}^{8 \times 8}\).
8. Set \(x := \begin{pmatrix} r \\ u \\ v \\ t_1 \end{pmatrix} \in \mathbb{R}^4_{Q} \times \mathbb{R}^{q_1}\).
9. Set \(y := \begin{pmatrix} e_1 \\ e_2 \\ r \\ v \\ t_1 \end{pmatrix} \in \mathbb{R}^4_{Q} \times \mathbb{R}^{q_1}\).
10. Compute a proof \(\Pi\) of knowledge of \(x\) such that \(Bx = y\).
11. Output \((u, v, \Pi)\).

**Verify((u, v, \(\Pi\)), t_1)**:
1. Set \(B_1, B_2, B, y\) as in Enc.
2. Output \(\text{Verify}(\Pi, B, y)\).

**Dec((u, v, \(\Pi\)), s)**:
1. If \(\text{Verify}((u, v, \(\Pi\)), t_1) = 1\), let \(c\) be the challenge used in \(\Pi\).
2. Loop:
   - \(c' \xleftarrow{\$} C\)
   - \(\bar{c} := c - c'\)
   - \(\bar{r} := (v - us)\bar{c} \mod Q\)
   - If \(\|\bar{r}\|_\infty \leq Q/8\kappa\):
     - \(\bar{r} := \bar{r} \mod q\)
     - return \((\bar{r}, \bar{c})\)

**Lemma 5.1 ([LN17] Lemma 3.1)**: Let \(sk = s\), and \(e\) be the error in \(b = as + e\). If for given \((u, v, t_1) \in \mathbb{R}^4_{Q} \times \mathbb{R}^{q_1}\) there exists \(\bar{r}B := (\bar{r}, \bar{e}_1, \bar{e}_2, \bar{r}) \in \mathbb{R}^8\), and \(\bar{c} \in \mathbb{R}\) such that:
\[ BrB = \begin{pmatrix} u \mod Q \\ v \mod Q \\ t_1 \mod q_1 \end{pmatrix} \]
and
\[ \|p(\bar{u}e + \bar{e}_2 - \bar{e}s) + \bar{r}\|_\infty \leq Q/4\kappa \]
Then for \((\bar{r}', \bar{c}') = \text{Dec}(u, v, \Pi, t_1)\), we have:
\[ \begin{pmatrix} \bar{r} \\ \bar{c} \end{pmatrix} \mod p = \begin{pmatrix} \bar{r}' \\ \bar{c}' \end{pmatrix} \mod p \]

Once we have verifiable encryption, adding traceability to our group signature is straightforward. During key generation, we create \((pk, sk) \xleftarrow{\$} \text{PKESetup}(1\lambda)\), add \(pk\) to the group public key, and set \(gmsk = sk\). When signing, a user computes an encryption \(v\) of their randomness \(r\), which satisfies \(a^T_1 r = t_1 \mod q_1\), and adds \(v\) to the signature. For verification, one only needs to check the extra proof \(\Pi\).

**Open(msk, z)**:
1. Parse \(z\) as \((t, t', \Pi_1, \Pi_2, \Pi_3, v)\).
2. Let \((\bar{r}, \bar{c}) = \text{Dec}(msk, t_1, z)\).
3. Set \(id := \bar{c}^{-1}(t_2 - a^T_2 \bar{r}) \in \mathbb{R}^{q_2}\).
4. If \(id \in \mathbb{Z}^{q_2}\) then output \(id\), otherwise output \(\bot\).

If decryption succeeds, the proof \(\Pi\) verifies, which entails that there exists \(\bar{r}', \bar{c}'\) such that \(a^T_1 \bar{r}' = \bar{c}' t_1 \mod q_1\) and by Lemma 5.1:
\[ \begin{pmatrix} \bar{r} \\ \bar{c} \end{pmatrix} \mod p = \begin{pmatrix} \bar{r}' \\ \bar{c}' \end{pmatrix} \mod p \]
Multiplying this equation by \(\bar{c}\) and \(\bar{c}'\), we get \(\bar{r}' \bar{c} = \bar{r} \bar{c}' \mod p\), and since both sides are smaller than \(p\), this equation holds over the integers. Thus:
\[ a^T_1 \bar{r} = \bar{c} t_1 \mod q_1 \]
This ensures that if \(t = (t_1, t_2)\) is a well-formed commitment, the identity returned by the Open algorithm will be its message.

#### Security Proofs
**Lemma 6.1 (Binding)**: Let \(\kappa \geq \max_{c \in C} \|c\|_1\). If there is an adversary \(A\) who can output a commitment \(t\) with two valid openings \((m, r, c)\) and \((m', r', c')\) such that \(m \neq m'\) with probability \(\epsilon\), then there is an algorithm \(A'\) who can break M-SIS\(_{q_1,n,m,4\kappa B_{\text{Com}}}\) in the same time and with advantage \(\epsilon\).

**Lemma 6.2 (Hiding)**: For any \(m, m' \in \mathbb{R}^l_{q_2}\), if there is an adversary \(A\) who can distinguish between \(\text{Com}(m)\) and \(\text{Com}(m')\) with advantage \(\epsilon\), then there exists an algorithm \(A'\) who runs in the same time and breaks M-LWE\(_{q_2,m-n-l,\xi}\) with probability \(\epsilon/2\).

**Proof**: Given an instance \((B, y) \in \mathbb{R}^{(n+l) \times (m-n-l)}\) of M-LWE\(_{q_2,m-n-l,\xi}\), parse \(B\) and \(y\) as \(\begin{pmatrix} B_1 \\ B_2 \end{pmatrix}\) and \(\begin{pmatrix} y_1 \\ y_2 \end{pmatrix}\). Let \(\rho : \mathbb{R} \to \mathbb{Z}\) be a randomized rounding function which maps \(x \in \mathbb{R}\) to \(\rho(x) \xleftarrow{\$} \lfloor x \rfloor + B_x - \lfloor x \rfloor\), where \(B_x - \lfloor x \rfloor\) is a Bernoulli variable which outputs 1 with probability \(x - \lfloor x \rfloor\). Note that for \(q_1 \leq q_2\), \(\rho(y_1)\) is well-defined.

\(A'\) samples \(R \xleftarrow{\$} \mathbb{R}^{n \times l}\) and constructs the commitment. The rest of the proof follows from the properties of the rounding function and the M-LWE assumption.