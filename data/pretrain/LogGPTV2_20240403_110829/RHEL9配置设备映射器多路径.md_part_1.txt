[]{#index.html}
::: book
::: titlepage
::: producttitle
[Red Hat Enterprise Linux]{.productname} [9]{.productnumber}
:::
# []{#index.html#idm140554179783072}配置设备映射器多路径 {.title}
## 使用设备映射器多路径功能 {.subtitle}
::: abstract
**摘要**
这个文档提供如何在 Red Hat Enterprise Linux 9
中配置和管理设备映射器多路径（DM-Multipath）功能的步骤。
:::
------------------------------------------------------------------------
:::
:::
[]{#making-open-source-more-inclusive.html}
::: preface
::: titlepage
# []{#making-open-source-more-inclusive.html#making-open-source-more-inclusive}让开源更具包容性 {.title}
:::
红帽致力于替换我们的代码、文档和 Web
属性中存在问题的语言。我们从这四个术语开始：master、slave、黑名单和白名单。由于此项工作十分艰巨，这些更改将在即将推出的几个发行版本中逐步实施。如需了解更多详细信息，请参阅
[CTO Chris Wright
信息](https://www.redhat.com/en/blog/making-open-source-more-inclusive-eradicating-problematic-language){.link}。
:::
[]{#proc_providing-feedback-on-red-hat-documentation_configuring-device-mapper-multipath.html}
::: preface
::: titlepage
# []{#proc_providing-feedback-on-red-hat-documentation_configuring-device-mapper-multipath.html#proc_providing-feedback-on-red-hat-documentation_configuring-device-mapper-multipath}对红帽文档提供反馈 {.title}
:::
我们感谢您对文档提供反馈信息。请让我们了解如何改进文档。
::: itemizedlist
-   关于特定内容的简单评论：
    ::: orderedlist
    1.  请确定您使用 [*Multi-page HTML*]{.emphasis}
        格式查看文档。另外，确定 [**Feedback**]{.strong}
        按钮出现在文档页的右上方。
    2.  用鼠标指针高亮显示您想评论的文本部分。
    3.  点在高亮文本上弹出的 [**Add Feedback**]{.strong}。
    4.  按照显示的步骤操作。
    :::
:::
::: itemizedlist
-   要通过 Bugzilla 提交反馈，请创建一个新的 ticket：
    ::: orderedlist
    1.  进入
        [Bugzilla](https://bugzilla.redhat.com/enter_bug.cgi?product=Red%20Hat%20Enterprise%20Linux%209){.link}
        网站。
    2.  在 Component 中选择 [**Documentation**]{.strong}。
    3.  在 [**Description**]{.strong}
        中输入您要提供的信息。包括文档相关部分的链接。
    4.  点 [**Submit Bug**]{.strong}。
    :::
:::
:::
[]{#overview-of-device-mapper-multipathing_configuring-device-mapper-multipath.html}
::: chapter
::: titlepage
# []{#overview-of-device-mapper-multipathing_configuring-device-mapper-multipath.html#overview-of-device-mapper-multipathing_configuring-device-mapper-multipath}第 1 章 设备映射器多路径概述 {.title}
:::
使用设备映射器多路径（DM 多路径），您可以将服务器节点和存储阵列间的多个
I/O 路径配置为单一设备。这些 I/O
路径是可包含独立电缆、交换机和控制器的物理存储区域网络(SAN)连接。多路径聚合了
I/O 路径并生成由聚合路径组成的新设备。
DM 多路径提供：
::: variablelist
[冗余]{.term}
:   DM
    多路径可在主动/被动（active/passive）配置中提供故障切换。在主动/被动配置中，对于
    I/O，任何时候都只会使用一半的路径。如果 I/O
    路径的任何元素（如电缆、交换机或控制器）出现故障，DM
    多路径会切换到备用路径。
[改进的性能]{.term}
:   可将 DM 多路径配置为主动/主动模式，其中将 I/O
    以轮循（round-robin）方式分布到所有路径中。在一些配置中，DM
    多路径可以检测 I/O 路径中的载入，并动态重新平衡负载。
:::
::: section
::: titlepage
# []{#overview-of-device-mapper-multipathing_configuring-device-mapper-multipath.html#active-passive-multipath-configuration-with-one-raid-device_overview-of-device-mapper-multipathing}带一个 RAID 设备的主动/被动多路径配置 {.title}
:::
在此配置中，服务器上有两个主机总线适配器(HBA)，两个 SAN 交换机和两个
RAID 控制器。以下是在这个配置中可能出现的故障：
::: itemizedlist
-   HBA 故障
-   光纤通道电缆失败
-   SAN 交换机故障
-   阵列控制器端口故障
:::
配置 DM 多路径后，任何这些点会导致 DM 多路径切换到备用 I/O
路径。以下镜像描述了服务器到 RAID 设备的两个 I/O
路径的配置。在这里，有一个 I/O 路径通过 `hba1、SAN1`{.literal}
``{=html} 和 `cntrlr1`{.literal}，第二个 I/O 路径则经过 Hba
`2`{.literal}、`SAN2`{.literal} 和 `cntrlr2`{.literal}。
::: figure
[]{#overview-of-device-mapper-multipathing_configuring-device-mapper-multipath.html#active-passive-one-raid_overview-of-device-mapper-multipathing}
**图 1.1. 带一个 RAID 设备的主动/被动多路径配置**
::: figure-contents
::: mediaobject
![带一个 RAID
设备的主动/被动多路径配置](images/active-passive-multipath-configuration-with-one-raid-device.png)
:::
:::
:::
:::
::: section
::: titlepage
# []{#overview-of-device-mapper-multipathing_configuring-device-mapper-multipath.html#active-passive-multipath-configuration-with-two-raid-devices_overview-of-device-mapper-multipathing}带两个 RAID 设备的主动/被动多路径配置 {.title}
:::
在此配置中，服务器中存在两个 HBA，两个 SAN 交换机，每个有两个 RAID
控制器。配置 DM 多路径后，在任意 RAID 设备的 I/O 路径点会导致 DM
多路径切换到该设备的备用 I/O 路径。以下镜像描述了每个 RAID 设备有两个
I/O 路径的配置。在这里，每个 RAID 设备有两个 I/O 路径。
::: figure
[]{#overview-of-device-mapper-multipathing_configuring-device-mapper-multipath.html#active-passive-two-raid_overview-of-device-mapper-multipathing}
**图 1.2. 带两个 RAID 设备的主动/被动多路径配置**
::: figure-contents
::: mediaobject
![带两个 RAID
设备的主动/被动多路径配置](images/active-passive-multipath-configuration-with-two-raid-device.png)
:::
:::
:::
:::
::: section
::: titlepage
# []{#overview-of-device-mapper-multipathing_configuring-device-mapper-multipath.html#active-active-multipath-configuration-with-one-raid-device_overview-of-device-mapper-multipathing}带一个 RAID 设备的主动/主动多路径配置 {.title}
:::
在此配置中，服务器中有两个 HBA、两个 SAN 交换机和两个 RAID
控制器。以下镜像描述了从服务器到存储设备的两个 I/O
路径的配置。在这里，可将 I/O 分布到这两个路径中。
::: figure
[]{#overview-of-device-mapper-multipathing_configuring-device-mapper-multipath.html#active-active-one-raid_overview-of-device-mapper-multipathing}
**图 1.3. 带一个 RAID 设备的主动/主动多路径配置**
::: figure-contents
::: mediaobject
![带一个 RAID
设备的主动/主动多路径配置](images/active-passive-multipath-configuration-with-one-raid-device.png)
:::
:::
:::
:::
::: section
::: titlepage
# []{#overview-of-device-mapper-multipathing_configuring-device-mapper-multipath.html#dm-multipath-components_overview-of-device-mapper-multipathing}DM 多路径组件 {.title}
:::
下表描述了 DM 多路径组件。
::: table
[]{#overview-of-device-mapper-multipathing_configuring-device-mapper-multipath.html#components-of-dm-multipath_overview-of-device-mapper-multipathing}
**表 1.1. DM 多路径的组件**
::: table-contents
  ----------------------------------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  组件                                描述
  `dm_multipath`{.literal} 内核模块   为路径和路径组群重新路由 I/O 并支持故障切换。
  `mpathconf`{.literal} 工具          配置并启用设备映射器多路径。
  `multipath`{.literal} 命令          列出并配置多路径设备。每当添加块设备时，它也由 `udev`{.literal} 执行，以确定该设备是否是多路径设备的一部分。
  `multipathd`{.literal} 守护进程     自动创建和删除多路径设备并监控路径；作为路径失败，可以更新多路径设备。允许对多路径设备进行交互式的修改。如果 `/etc/multipath.conf`{.literal} 文件有任何更改，请重新加载该服务。
  `kpartx`{.literal} 命令             为设备中的分区创建设备映射器设备。当创建了多路径设备以便在其之上创建分区设备时，该命令将由 `udev`{.literal} 自动执行。`kpartx`{.literal} 命令在其自己的软件包中提供，但 `device-mapper-multipath`{.literal} 软件包依赖于它。
  `mpathpersist`{.literal}            在多路径设备中设置 `SCSI-3`{.literal} 持久预留。该命令的工作方式类似于 `sg_persist`{.literal} 对不是多路径的 SCSI 设备工作，但它处理多路径设备上所有路径上的持久预留。它与 `多路径`{.literal} 协调，以确保在稍后添加的路径上正确设置保留。要使用此功能，必须在 `/etc/multipath.conf`{.literal} 文件中定义 `reservation_key`{.literal} 属性。否则 `multipathd`{.literal} 守护进程将不会检查新发现的路径或恢复的路径。
  ----------------------------------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
:::
:::
:::
::: section
::: titlepage
# []{#overview-of-device-mapper-multipathing_configuring-device-mapper-multipath.html#the-multipath-command_overview-of-device-mapper-multipathing}multipath 命令 {.title}
:::
`multipath`{.literal}
命令用于检测和组合到设备的多个路径。它提供不同的选项来管理您的多路径设备。
下表描述了您可能会用到的 `multipath`{.literal} 命令的一些选项。
::: table
[]{#overview-of-device-mapper-multipathing_configuring-device-mapper-multipath.html#tb-table-multipath-options}
**表 1.2. 有用的 `多路径`{.literal} 命令选项**
::: table-contents
  选项                  描述
  --------------------- ------------------------------------------------------------------------------------
  `-l`{.literal}        显示来自 `sysfs`{.literal} 和设备映射器的当前多路径配置。
  `-ll`{.literal}       显示来自 `sysfs`{.literal}、设备映射器以及系统中所有其他可用组件的当前多路径配置。
  `-f 设备`{.literal}   删除命名的多路径设备。
  `-F`{.literal}        删除所有未使用的多路径设备。
  `-w 设备`{.literal}   从 ` wwid`{.literal} s``{=html} 文件中删除指定设备的 wwid。
  `-W`{.literal}        重置 `wwids`{.literal} 文件，使其只包含当前的多路径设备。
:::
:::
:::
::: section
::: titlepage
# []{#overview-of-device-mapper-multipathing_configuring-device-mapper-multipath.html#multipath-command-output_overview-of-device-mapper-multipathing}multipath 命令输出 {.title}
:::
当您创建、修改或者列出多路径设备时，您会看到当前设备设置的显示。格式如下。
::: itemizedlist
-   对于每个多路径设备：
:::
``` literallayout
action_if_any: alias (wwid_if_different_from_alias) dm_device_name_if_known vendor,product size=size features='features' hwhandler='hardware_handler' wp=write_permission_if_known
```
::: itemizedlist
-   对于每个路径组：
:::
``` literallayout
-+- policy='scheduling_policy' prio=prio_if_known status=path_group_status_if_known
```
::: itemizedlist
-   对于每个路径：
:::
``` literallayout
 `- host:channel:id:lun devnode major:minor dm_status_if_known path_status online_status
```
例如： multipath 命令的输出结果可能如下：
``` literallayout
3600d0230000000000e13955cc3757800 dm-1 WINSYS,SF2372
size=269G features='0' hwhandler='0' wp=rw
|-+- policy='round-robin 0' prio=1 status=active
| `- 6:0:0:0 sdb 8:16  active ready  running
`-+- policy='round-robin 0' prio=1 status=enabled
  `- 7:0:0:0 sdf 8:80  active ready  running
```
如果路径已启动并准备好进行 I/O，则路径的状态为 `ready`{.literal} 或
`ghost`{.literal}。如果路径停机，其状态为 `faulty`{.literal} 或
`shaky`{.literal}。路径状态由 `multipathd`{.literal} 守护进程根据
`/etc/multipath.conf`{.literal} 文件中定义的轮询间隔定期进行更新。
其他可能的路径状态值如下。
::: itemizedlist
-   `I/o pending`{.literal}
    ：检查程序正在主动检查这个路径，状态将很快更新。
-   `I/o timeout`{.literal} ：这与 `故障`{.literal}
    相同。它让用户知道检查程序在超时时间前没有返回成功或失败。