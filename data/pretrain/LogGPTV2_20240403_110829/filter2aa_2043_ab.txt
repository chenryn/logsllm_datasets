# Universal Plug and Play (UPnP) and Security Concerns

## Introduction
Universal Plug and Play (UPnP) is a set of networking protocols that allow devices to discover each other's network presence, establish communication, and control one another. This document explores the capabilities and security implications of UPnP.

## Capabilities of UPnP
- **Control AV Equipment**: Manage audio and video devices.
- **Home Automation**: Automate household tasks and control smart home devices.
- **Network Administration**: Simplify network configuration and management.
- **Physical Security Systems**: Integrate and manage security systems.
- **Industrial Monitoring and Control**: Monitor and control industrial processes.
- **Inter-Device Communication**: Enable seamless communication between devices.
- **Remote Control and Automation**: Enhance remote control and automation capabilities.
- **Integration and Convenience**: Combine multiple functions, such as turning on lights, setting the TV, and sending text messages.

## Potential Risks and Security Concerns

### General Security Issues
- **Embedded Devices**: Often have limited memory and processing power.
- **Development Practices**: Board development and software development are often handled by different companies, leading to potential security gaps.
- **Cost Constraints**: Manufacturers may prioritize cost reduction over security.
- **Deployment Challenges**: Millions of internet-facing UPnP-enabled devices from various vendors make it difficult to standardize and update firmware.
- **XML Parsing Vulnerabilities**: XML parsing can be resource-intensive and prone to vulnerabilities, including recursion bugs, XML External Entity (XXE) attacks, and command injection.

### Specific Vulnerabilities
- **CVE-2012-5958**: A vulnerability in the UPnP service where `strncpy` is used to copy a string from the ST header into a buffer without proper size validation.
  - **Disclosure**: HD Moore
  - **Details**: https://community.rapid7.com/docs/DOC-2150
  - **Example Attack**:
    ```http
    M-SEARCH * HTTP/1.1
    Host:239.255.255.250:1900
    ST:uuid:schemas:device:[string longer than COMMAND_LEN]:blah
    Man:"ssdp:discover"
    MX:3
    ```

- **D-Link DIR-815 UPnP Command Injection**: The contents of the ST header are passed as arguments to a script without validation or sanitization.
  - **Disclosure**: Zach Cutlip
  - **Details**: http://shadow-Ble.blogspot.com/2013/02/dlink-dir-815-upnp-command-injection.html
  - **Example Attack**:
    ```http
    M-SEARCH * HTTP/1.1
    Host:239.255.255.250:1900
    ST:uuid:`[shell command]`
    Man:"ssdp:discover"
    MX:3
    ```

- **AirTies RT Series SOAPAction Buffer Overflow**: The `ExecuteSoapAction` function allocates a statically-sized buffer and copies the value of the SOAPAction header into it without bounds checking.
  - **Disclosure**: Onur Alanbel
  - **Details**: https://www.exploit-db.com/exploits/36839/
  - **Example Attack**:
    ```http
    POST / HTTP/1.1
    Content-Type: text/xml; charset=utf-8
    SOAPAction: "n:schemas-upnp-org:service:WANIPConnection:1#[more than 2048 bytes]"
    Content-Length: [length of req]
    Host: x.x.x.x:5555
    ```

- **Broadcom SetConnectionType Format String Vulnerability**: The `SetConnectionType` action feeds the value of the NewConnectionType argument to `snprintf` without sanitization.
  - **Disclosure**: Leon Juranic and Vedran Kajic
  - **Details**: http://sebug.net/paper/Exploits-Archives/2013-exploits/1301-exploits/DC-2013-01-003.txt
  - **Example Attack**:
    ```plaintext
    [format string]
    ```

- **CVE-2014-3242**: SOAPpy allows the declaration of user-defined XML External Entities in a SOAP request without sanitization.
  - **Disclosure**: pnig0s
  - **Details**: http://www.pnigos.com/?p=260
  - **Example Attack**:
    ```xml
    ]>
      &xxe;
    ```

- **CVE-2014-2928**: The F5 iControl API `set_hostname` action passes the value of the hostname argument to the shell without sanitization.
  - **Disclosure**: Brandon Perry (PBerry Crunch!)
  - **Details**: http://seclists.org/fulldisclosure/2014/May/32
  - **Example Attack**:
    ```plaintext
    `[shell command]`.whatever.com
    ```

- **Netgear R6200 SetFirmware Vulnerabilities**: Multiple vulnerabilities in dead or non-functional code shipped with the device, including lack of authentication.
  - **Disclosure**: Zach Cutlip
  - **Details**: http://shadow-Ble.blogspot.com/2015/04/abandoned-part-01.html

## Recommendations for Users
- **Know Your Network**: Regularly scan your network for UPnP devices.
- **Disable Unnecessary Services**: If you don't need UPnP, disable it at the device or router level.
- **Stay Updated**: Keep firmware and software up to date.
- **Fuzzing and Testing**: Use tools like Burp, WSFuzzer, and Miranda to test for vulnerabilities.

## Contact Information
- **Twitter**: @HeadlessZeke
- **IRC**: HeadlessZeke on freenode
- **Email**: PI:EMAIL

Thank you!