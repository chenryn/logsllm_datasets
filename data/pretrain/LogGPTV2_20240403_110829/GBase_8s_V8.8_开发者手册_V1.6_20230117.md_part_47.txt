//遍历结果集，逐行获取记录
//将每条记录中各字段值，按指定分隔符分割，由换行符结束，拼成一个字符串
//把拼成的字符串，添加到缓存bufferwhile(rs.next()){
buffer.append(rs.getString(1)+delimiter
+rs.getString(2)+delimiter
+rs.getString(3)+delimiter
+rs.getString(4)
+ "\n");
}
rs.close();
try{
//建立目标数据库连接Class.forName(driver);
Connectionconn=DriverManager.getConnection(url,user,pass);
BaseConnectionbaseConn=(BaseConnection)conn;
baseConn.setAutoCommit(false);
//初始化表信息
Stringsql="Copy"+tablename+"fromSTDINwith(DELIMITER"
+"'"+delimiter+"'"+","+" ENCODING"+"'"+encoding+
"'");
//提交缓存buffer中的数据
CopyManagercp=newCopyManager(baseConn);
StringReaderreader=newStringReader(buffer.toString());
cp.copyIn(sql,reader);
baseConn.commit();reader.close();baseConn.close();
}catch(ClassNotFoundExceptione){
e.printStackTrace(System.out);
}catch(SQLExceptione){
南大通用数据技术股份有限公司
310
GBase 8s V8.8开发者手册
e.printStackTrace(System.out);
}
}catch(Exceptione){
e.printStackTrace();
}
}
//********************************
// 从源数据库返回查询结果集
//*********************************
privatestaticResultSetgetDataSet(){ResultSetrs=null;
try{
Class.forName("com.MY.jdbc.Driver").newInstance();
Connectionconn=
DriverManager.getConnection("jdbc:MY://10.119.179.227:3306/jack?
useSSL=false&allowPublicKeyRetrieval=true","jack","xxxxxxxxx");
Statementstmt=conn.createStatement();
rs=stmt.executeQuery("select*frommigration_table");
}catch(SQLExceptione){
e.printStackTrace();
}catch(Exceptione){
e.printStackTrace();
}
returnrs;
}
}
9.3 使用 gsql 元命令导入数据
gsql工具提供了元命令\copy进行数据导入。
\COPY命令
\copy命令格式以及说明参见表 9-5\copy元命令说明。
表 9-5\copy 元命令说明
语法 说明
\copy{table[(column_list)]| 在gsql客户端登录数据库成功后，可以使用该命令进
行数据的导入/导出操作。但是与SQL的COPY命令不
(query) }{ from |to }{ filename
同，该命令读取/ 写入的文件是本地文件，而非数据库
| stdin | stdout | pstdin |
服务器端文件；所以，要操作的文件的可访问性、权
pstdout }[ with ] [ binary ]
南大通用数据技术股份有限公司
311
GBase 8s V8.8开发者手册
[ delimiter [ as ] 'character' ] 限等，都是受限于本地用户的权限。
[ null [ as ] 'string' ] [ csv
说明：\COPY只适合小批量、格式良好的数据导入场
[ header ] [ quote [ as ]
景，不会对非法字符做预处理，也无容错能力，无法
'character' ] [ escape [ as ]
适用于含有异常数据的场景。导入数据应优先选择
'character' ] [ force quote
COPY。
column_list | * ] [ force not null
column_list]]
参数说明
 table
表的名称（可以有模式修饰）。取值范围：已存在的表名。
 column_list
可选的待拷贝字段列表。
取值范围：任意字段。如果没有声明字段列表，将使用所有字段。
 query
其结果将被拷贝。
取值范围：一个必须用圆括弧包围的SELECT或VALUES命令。
 filename
文件的绝对路径。执行copy命令的用户必须有此路径的写权限。
 stdin
声明输入是来自标准输入。
 stdout
声明输出打印到标准输出。
 pstdin
声明输入是来自gsql的标准输入。
 pstout
声明输出打印到gsql的标准输出。
 binary
使用二进制格式存储和读取，而不是以文本的方式。在二进制模式下，不能声明
南大通用数据技术股份有限公司
312
GBase 8s V8.8开发者手册
DELIMITER，NULL，CSV选项。指定binary类型后，不能再通过option或copy_option指
定CSV、FIXED、TEXT等类型。
 delimiter[as]'character'
指定数据文件行数据的字段分隔符。
 分隔符不能是\r和\n。
 分隔符不能和null参数相同，CSV格式数据的分隔符不能和quote参数相同。
 TEXT格式数据的分隔符不能包含： \.abcdefghijklmnopqrstuvwxyz0123456789。
 数据文件中单行数据长度需>符号提示时，输入数据，输入\.时结束
Enterdatatobecopiedfollowedbyanewline.
Endwithabackslashandaperiodonalinebyitself.
>>1
南大通用数据技术股份有限公司
314
GBase 8s V8.8开发者手册
>>2
>>\.
查询导入目标表a的数据。
gbase=#SELECT*FROMa;
a
---
1
2
(2rows)
2 从本地文件拷贝数据到目标表a。假设存在本地文件/home/gbase/2.csv。
 分隔符为‘，’。
 在导入过程中，若数据源文件比外表定义的列数多，则忽略行尾多出来的列。
gbase=#\copyaFROM'/home/gbase/2.csv'WITH(delimiter',',IGNORE_EXTRA_DATA'on');
9.4 用 gs_restore 命令导入数据
操作场景
gs_restore 是GBase 8s数据库提供的与gs_dump 配套的导入工具。通过该工具，可将
gs_dump导出的文件导入至数据库。gs_restore支持导入的文件格式包含自定义归档格式、
目录归档格式和tar归档格式。
gs_restore具备如下两种功能。
 导入至数据库
如果指定了数据库，则数据将被导入到指定的数据库中。其中，并行导入必须指定连接
数据库的密码。导入时生成列会自动更新，并像普通列一样保存。
 导入至脚本文件
如果未指定导入数据库，则创建包含重建数据库所需的SQL语句脚本，并将其写入至
文件或者标准输出。该脚本文件等效于gs_dump导出的纯文本格式文件。
gs_restore工具在导入时，允许用户选择需要导入的内容，并支持在数据导入前对等待
导入的内容进行排序。
操作步骤
南大通用数据技术股份有限公司
315
GBase 8s V8.8开发者手册
gs_restore默认是以追加的方式进行数据导入。为避免多次导入造成数据异常，在
进行导入时， 建议选择使用"-c" 和"-e"参数。"-c"表示在重新创建数据库对象前，清理
（删除）已存在于将要还原的数据库中的数据库对象；"-e"表示当发送SQL语句到数据
库时如果出现错误请退出，默认状态下会继续，且在导入后会显示一系列错误信息。
步骤1 以操作系统用户gbase登录数据库主节点。
步骤2 使用gs_restore命令，从postgres整个数据库内容的导出文件中，将数据库的所有对
象的定义导入到backupdb。
gs_restore-Ujack/home/gbase/backup/MPPDB_backup.tar-p15432-dbackupdb-s-e-c
Password:
表 9-6 常用参数说明
参数 参数说明 举例
-U 连接数据库的用户名。 -Ujack
-W 指定用户连接的密码。 -Wabcd@123
如果主机的认证策略是trust，则不会对数据库管理员进
行密码验证，即无需输入-W选项；
如果没有-W选项，并且不是数据库管理员，会提示用户
输入密码。
-d 连接数据库dbname，并直接将数据导入到该数据库中。 -dbackupdb
-p 指定服务器所侦听的TCP端口或本地Unix域套接字后 -p15432
缀，以确保连接。
-e 当发送SQL语句到数据库时如果出现错误，则退出。默 ——
认状态下会忽略错误任务并继续执行导入，且在导入后
会显示一系列错误信息。
-c 在重新创建数据库对象前，清理（删除）已存在于将要 ——
导入的数据库中的数据库对象。
-s 只导入模式定义，不导入数据。当前的序列值也不会被 ——
导入。
其他参数说明请参见《GBase8sV8.8_3.0.x_工具参考》中“服务端工具 >gs_restore”章
节。
南大通用数据技术股份有限公司
316
GBase 8s V8.8开发者手册
----结束
示例
示例一：执行gs_restore，导入指定 MPPDB_backup.dmp 文件（自定义归档格式）中
postgres数据库的数据和对象定义。
gs_restorebackup/MPPDB_backup.dmp-p15432-dbackupdb
Password:
gs_restore[2017-07-2119:16:26]:restoreoperationsuccessful
gs_restore:totaltime:13053ms
示例二：执行gs_restore，导入指定MPPDB_backup.tar文件（tar归档格式）中postgres
数据库的数据和对象定义。
gs_restorebackup/MPPDB_backup.tar-p15432-dbackupdb
gs_restore[2017-07-2119:21:32]:restoreoperationsuccessfulgs_restore[2017-07-2119:21:32]:
totaltime:21203ms
示例三：执行gs_restore，导入指定MPPDB_backup目录文件（目录归档格式）中postgres
数据库的数据和对象定义。
gs_restorebackup/MPPDB_backup-p15432-dbackupdb
gs_restore[2017-07-2119:26:46]:restoreoperationsuccessful
gs_restore[2017-07-2119:26:46]:totaltime:21003ms
示例四：执行gs_restore，将postgres数据库的所有对象的定义导入至backupdb数据库。
导入前，数据库存在完整的定义和数据，导入后，backupdb数据库只存在所有对象定义，
表没有数据。
gs_restore/home/gbase/backup/MPPDB_backup.tar-p15432-dbackupdb-s-e-c
Password:
gs_restore[2017-07-2119:46:27]:restoreoperationsuccessful
gs_restore[2017-07-2119:46:27]:totaltime:32993ms
示例五：执行gs_restore，导入MPPDB_backup.dmp文件中PUBLIC模式的所有定义和
数据。在导入时会先删除已经存在的对象，如果原对象存在跨模式的依赖则需手工强制干预。
gs_restorebackup/MPPDB_backup.dmp-p15432-dbackupdb-e-c-nPUBLIC
gs_restore:[archiver(db)]ErrorwhilePROCESSINGTOC:
gs_restore:[archiver(db)]ErrorfromTOCentry313;1259337399TABLEtable1gaussdba
gs_restore:[archiver(db)]couldnotexecutequery:
ERROR:cannotdroptabletable1becauseotherobjectsdependonit
DETAIL:viewt1.v1dependsontabletable1
HINT:UseDROP...CASCADEtodropthedependentobjectstoo.
南大通用数据技术股份有限公司
317
GBase 8s V8.8开发者手册
Commandwas:DROPTABLEpublic.table1;
手工删除依赖，导入完成后再重新创建。
gs_restorebackup/MPPDB_backup.dmp-p15432-dbackupdb-e-c-nPUBLIC
gs_restore[2017-07-2119:52:26]:restoreoperationsuccessful
gs_restore[2017-07-2119:52:26]:totaltime:2203ms
示例六：执行gs_restore，导入MPPDB_backup.dmp文件中hr模式下表hr.staffs的定义。