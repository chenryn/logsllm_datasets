mustache-security, 2014.
[13] Hickson, I. The iframe element, November 2013.
[14]
[11] Heiderich, M., Niemietz, M., Schuster, F., Holz, T., and Schwenk, J. Scriptless
attacks: stealing the pie without touching the sill. In Proceedings of the 2012 ACM
conference on Computer and communications security (2012), ACM, pp. 760–771.
[12] Heiderich, M., Schwenk, J., Frosch, T., Magazinius, J., and Yang, E. Z. mxss
attacks: Attacking well-secured web-applications by using innerhtml mutations.
In Proceedings of the 2013 ACM SIGSAC conference on Computer & communications
security (2013), ACM, pp. 777–788.
Jim, T., Swamy, N., and Hicks, M. Defeating script injection attacks with browser-
enforced embedded policies. In Proceedings of the 16th international conference
on World Wide Web (2007), ACM, pp. 601–610.
[15] Kern, C. Securing the tangled web. Communications of the ACM 57, 9 (2014),
38–47.
[16] Klein, A. Dom based cross site scripting or xss of the third kind. Web Application
Security Consortium, Articles 4 (2005), 365–372.
[17] Lekies, S., Stock, B., and Johns, M. 25 Million Flows Later - Large-scale
Detection of DOM-based XSS. In Proceedings of the 20th ACM Conference on
Computer and Communication Security (CCS ’13) (2013).
[18] Louw, M. T., and Venkatakrishnan, V. BluePrint: Robust Prevention of Cross-
site Scripting Attacks for Existing Browsers. In IEEE Symposium on Security and
Privacy (Oakland’09) (May 2009).
toStaticHTML method.
[19] Maone, G. Noscript, 2009.
[20] MSDN.
[API], https://msdn.microsoft.com/library/
Cc848922.
[21] Nadji, Y., Saxena, P., and Song, D. Document Structure Integrity: A Robust
Basis for Cross-site Scripting Defense. In Network & Distributed System Security
Symposium (NDSS 2009) (2009).
[22] Nava, E. A. V. Fighting XSS with Isolated Scripts. [online], http://sirdarckcat.
blogspot.de/2017/01/(cid:27)ghting-xss-with-isolated-scripts.html, January 2017.
[23] Nava, E. V., and Lindsay, D. Our favorite XSS (cid:27)lters/IDS and how to attack
them. Presentation at the BlackHat US conference, 2009.
[24] Oda, T., Wurster, G., van Oorschot, P. C., and Somayaji, A. Soma: Mutual
approval for included content in web pages. In Proceedings of the 15th ACM
conference on Computer and communications security (2008), ACM, pp. 89–98.
[25] Pan, X., Cao, Y., Liu, S., Zhou, Y., Chen, Y., and Zhou, T. Cspautogen: Black-box
enforcement of content security policy upon real-world websites. In Proceedings
of the 2016 ACM SIGSAC Conference on Computer and Communications Security
(New York, NY, USA, 2016), CCS ’16, ACM, pp. 653–665.
[26] Parameshwaran, I., Budianto, E., Shinde, S., Dang, H., Sadhu, A., and Saxena,
P. Auto-patching dom-based xss at scale. In Proceedings of the 2015 10th Joint
Meeting on Foundations of Software Engineering (New York, NY, USA, 2015), ACM,
pp. 272–283.
[27] Roemer, R., Buchanan, E., Shacham, H., and Savage, S. Return-oriented
programming: Systems, languages, and applications. ACM Trans. Info. & System
Security 15, 1 (Mar. 2012).
Ie 8 xss (cid:27)lter architecture/implementation. Blog: http://blogs. tech-
net. com/srd/archive/2008/08/18/ie-8-xss-(cid:27)lter-architecture-implementation. aspx
(2008).
[29] Ross, D. Happy 10th birthday cross-site scripting! [online], https://blogs.msdn.
[28] Ross, D.
microsoft.com/dross/2009/12/15/happy-10th-birthday-cross-site-scripting/,
2009.
[30] Stamm, S., Sterne, B., and Markham, G. Reining in the web with content
security policy. In Proceedings of the 19th international conference on World wide
web (2010), ACM, pp. 921–930.
[31] Stamm, S., Sterne, B., and Markham, G. Reining in the web with content
security policy. In Proceedings of the 19th international conference on World wide
web (New York, NY, USA, 2010), WWW ’10, ACM, pp. 921–930.
[32] Stock, B., Lekies, S., Mueller, T., Spiegel, P., and Johns, M. Precise Client-side
Protection against DOM-based Cross-Site Scripting. In 23rd USENIX Security
Symposium (USENIX Security ’14) (2014).
[33] Tantek Celik, Daniel Glazman, I. H. P. L. J. W. Selectors level 4. W3C Editor’s
Draft (2017).
[34] W3C. Content Content Security Policy Level 3. W3C Editor’s Draft, 10 May
2017, https://w3c.github.io/webappsec-csp/, May 2017.
[35] Weichselbaum, L., Spagnuolo, M., Lekies, S., and Janc, A. Csp is dead, long live
csp! on the insecurity of whitelists and the future of content security policy. In
Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications
Security (2016), ACM, pp. 1376–1387.
[36] Weinberger, J., Akhawe, D., and Eisinger, J. Suborigins. W3C Editor’s Draft,
18 May 2017, https://w3c.github.io/webappsec-suborigins/, May 2017.
[37] Zalewski, M. Postcards from the post-xss world. Online at http://lcamtuf.
coredump. cx/postxss (2011).
Session H2:  Code Reuse AttacksCCS’17, October 30-November 3, 2017, Dallas, TX, USA1722P
S
A
W
O
y
t
i
r
u
c
e
S
d
o
M
.
0
0
3
.
S
R
C
L
M
T
H
e
r
u
s
o
l
C
e
l
g
o
o
G
)
1
0
-
5
0
-
7
1
0
2
(
r
e
z
i
t
i
n
a
s
.
.
7
8
0
y
f
i
r
u
P
M
O
D
r
e
t
l
i
F
S
S
X
t
p
i
r
c
S
o
N
.
2
0
5
.
r
e
t
l
(cid:27)
S
S
X
E
G
D
E
S
S
X
e
m
o
r
h
C
r
o
t
i
d
u
A
P
S
C
c
i
m
a
n
y
d
-
t
c
i
r
t
s
l
a
v
e
-
e
f
a
s
n
u
P
S
C
s
e
c
n
o
n
P
S
C
s
t
s
i
l
e
t
i
h
w
P
S
C
k
r
o
w
e
m
a
r
F
y
r
a
r
b
i
L
/
S
K
R
O
W
E
M
A
R
F
S
J
N
I
S
T
E
G
D
A
G
T
P
I
R
C
S
A
I
V
S
E
S
S
A
P
Y
B
N
O
I
T
A
G
I
T
I
M
S
S
X
A
)
e
t
a
l
p
m
e
t
<
(
-
)
e
t
a
l
p
m
e
t
<
(
-
r
e
m
y
l
o