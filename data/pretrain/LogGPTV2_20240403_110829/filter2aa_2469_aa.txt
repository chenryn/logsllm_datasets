# 目录

1. [关于OWASP](#about-owasp)
2. [前言](#foreword)
3. [简介](#introduction)
4. [发布说明](#release-notes)
5. [API安全风险](#api-security-risks)
6. [OWASP API 安全 Top 10 – 2019](#owasp-api-top-10-2019)
   - [API1:2019 失效的对象级别授权](#api1-2019)
   - [API2:2019 失效的用户身份验证](#api2-2019)
   - [API3:2019 过度的数据暴露](#api3-2019)
   - [API4:2019 资源缺乏和速率限制](#api4-2019)
   - [API5:2019 失效的功能级授权](#api5-2019)
   - [API6:2019 批量分配](#api6-2019)
   - [API7:2019 安全配置错误](#api7-2019)
   - [API8:2019 注入](#api8-2019)
   - [API9:2019 资产管理不当](#api9-2019)
   - [API10:2019 日志和监控不足](#api10-2019)

## 关于OWASP
<a name="about-owasp"></a>
“开源Web应用安全项目”（OWASP）是一个开放社区，致力于帮助各组织开发、购买和维护可信任的应用程序。在OWASP，您可以找到以下免费和开源的信息：
- 应用安全工具和标准；
- 关于应用安全测试、安全代码开发和安全代码审查方面的完整书籍；
- 演示文稿和视频；
- 关于常见风险的Cheat Sheets；
- 标准的安全控制和安全库；
- 全球各地分会；
- 尖端技术研究；
- 专业的全球会议；
- 邮件列表。

更多信息，请访问：[https://www.owasp.org](https://www.owasp.org)。
更多中文信息，请访问：[http://www.owasp.org.cn/](http://www.owasp.org.cn/)。

所有的OWASP工具、文档、论坛和全球各地分会都是开放的，并对所有致力于改进应用程序安全的人士开放。我们主张将应用程序安全问题看作是人、过程和技术的问题，因为提供应用程序安全最有效的方法是在这些方面提升。

OWASP是一个新型组织。我们没有商业压力，使得我们能够提供无偏见、实用、低成本的应用安全信息。尽管OWASP支持合理使用商业安全技术，但OWASP不隶属于任何技术公司。和许多开源软件项目一样，OWASP以一种协作、开放的方式制作了许多不同种类的材料。

OWASP基金会是确保项目长期成功的非营利性组织。几乎每一个与OWASP相关的人都是一名志愿者，这包括了OWASP董事会、全球各地分会会长、项目领导和项目成员。我们用资金和基础设施来支持创新的安全研究。我们期待您的加入！

## 前言
<a name="foreword"></a>
在当今应用驱动的世界中，创新的一个基本要素是应用程序编程接口（API）。从银行、零售、运输到物联网、自动驾驶汽车、智能城市，API都是现代移动、SaaS 和 Web应用程序的一个关键组成部分，并且在面向客户、面向合作伙伴和面向内部的应用中都会使用到。

一般来说，API会公开应用程序的逻辑和敏感数据，如个人识别信息（PII），正因为如此，API越来越成为攻击者的目标。如果没有安全的 API，快速创新将不可能。

虽然更为宽泛的 OWASP Top 10仍然具有重要意义，但由于API的特殊性质，我们需要一份特定的API安全风险清单。API安全聚焦于策略和解决方案，以便理解并且缓解与API相关的独特脆弱点和安全风险。

如果您熟悉 OWASP Top 10，那么您会发现这两个文件之间的相似之处：它们的目的都是为了更容易阅读和被采纳。如果您还不熟悉OWASP Top 10系列，您可能需要先阅读本文 API 安全风险部分和方法和数据部分，然后再阅读十大风险列表。

您可以在我们GitHub上的项目仓库为OWASP API Top 10提出您的问题、意见和想法：
- [https://github.com/OWASP/API-Security/issues](https://github.com/OWASP/API-Security/issues)
- [https://github.com/OWASP/API-Security/blob/master/CONTRIBUTING.md](https://github.com/OWASP/API-Security/blob/master/CONTRIBUTING.md)

您可以在以下链接找到《OWASP API 安全 Top 10》：
- [https://www.owasp.org/index.php/OWASPAPISecurity_Project](https://www.owasp.org/index.php/OWASPAPISecurity_Project)
- [https://github.com/OWASP/API-Security](https://github.com/OWASP/API-Security)

我们感谢所有这个项目的贡献者，并将他们全部列在致谢部分。谢谢您们！

## 简介
<a name="introduction"></a>
欢迎参阅2019年版《OWASP API 安全 Top 10》！如果您熟悉 OWASP Top 10系列，您会注意到它们之间的相似之处：它们的目的都是为了更容易阅读和被采纳。但是如果您不熟悉这个系列，请考虑先访问 OWASP API 安全项目的维基页面，然后再深入挖掘最关键的API安全风险。

API 在现代应用程序架构中发挥着非常重要的作用。虽然安全意识和创新发展不同步，但专注于常见的 API 安全弱点仍然很重要。OWASP API 安全 Top 10的主要目的是教育在 API 开发和维护期间的参与者，例如，开发人员、设计师、架构师、管理人员或组织机构。

在方法和数据部分，您可以阅读有关我们是如何创建本文第一版的更多信息。在未来的版本中，我们希望让安全从业人员参与，并公开征集数据。现在，我们鼓励每个人通过我们的 GitHub 仓库或邮件列表提出问题、评论和想法。

这是第一版《OWASP API 安全 Top 10》，我们计划每三或四年更新一版。与这个版本不同，在未来的版本中，我们希望公开征集数据，让安全行业的同行参与这项工作。在方法和数据部分中，您将了解到我们如何构建此版本的详细信息。若想了解更多有关安全风险的详细信息，请参阅API 安全风险部分。

重要的是要认识到，在过去的几年里，应用程序架构发生了显著变化。目前，API在微服务、单页应用程序（SPA）、移动应用程序、物联网（IoT）等新体系架构中扮演着非常重要的角色。

OWASP API 安全 Top 10是一项必要的工作，旨在提高人们对现代 API 安全问题的认识。由于志愿者们的不懈努力，这项工作才成为可能。这些志愿者都列在致谢部分。参与本中文版本项目的成员名单也列在致谢部分。

谢谢！

## 发布说明
<a name="release-notes"></a>
本项目采用了OWASP风险评级方法进行风险分析。下表汇总了与风险评分相关的术语。

注意：此方法没有考虑威胁来源的可能性。它也没有考虑与特定应用程序相关的各种技术细节。这些因素都可能影响攻击者发现和利用特定漏洞的总体可能性。这个评估方法也没有考虑到您业务的实际影响。基于企业文化、行业和监管环境，您的组织将决定接受多少应用程序和 API 带来的安全风险。OWASP API 安全 Top 10的目的不是为您做风险分析。

| 因素 | 评分 |
| --- | --- |
| 威胁来源 | 易：3 平均：2 难：1 |
| 可利用性 | 易：3 平均：2 难：1 |
| 弱点普遍性 | 广泛：3 常见：2 少见：1 |
| 弱点可检测性 | 易：3 平均：2 难：1 |
| 技术影响 | 严重：3 中等：2 小：1 |
| 业务影响 | 严重：3 中等：2 小：1 |

参考资料：
- OWASP资料
  - [OWASP Risk Rating Methodology](https://owasp.org/www-project-risk-rating-methodology/)
  - [Article on Threat/Risk Modeling](https://owasp.org/www-community/Threat_Risk_Modeling)
- 外部资料
  - [ISO 31000: Risk Management Std](https://www.iso.org/standard/62506.html)
  - [ISO 27001: ISMS](https://www.iso.org/isoiec-27001-information-security.html)
  - [NIST Cyber Framework (US)](https://www.nist.gov/cyberframework)
  - [ASD Strategic Mitigations (AU)](https://www.cyber.gov.au/acsc/view-all-content/publications/strategies-mitigate-targeted-cyber-intrusions)
  - [NIST CVSS 3.0](https://nvd.nist.gov/vuln-metrics/cvss)
  - [Microsoft Threat Modelling Tool](https://docs.microsoft.com/en-us/threat-modeling/)

## API安全风险
<a name="api-security-risks"></a>
### OWASP API 安全 Top 10 – 2019
<a name="owasp-api-top-10-2019"></a>

#### API1:2019 失效的对象级别授权
<a name="api1-2019"></a>
API倾向于公开处理对象标识符的端点，从而产生广泛的攻击表层访问控制问题。在使用用户输入访问数据源的每个函数中，都应考虑对象级授权检查。

#### API2:2019 失效的用户身份验证
<a name="api2-2019"></a>
身份验证机制的实现往往不正确，使得攻击者能够破坏身份验证令牌或利用漏洞临时或永久地盗用其他用户的身份。破坏了系统识别客户端/用户的能力，损害API的整体安全性。

#### API3:2019 过度的数据暴露
<a name="api3-2019"></a>
依赖通用方法，开发人员倾向于公开所有对象属性而不考虑其各自的敏感度，依赖客户端在向用户显示数据前执行数据筛选。

#### API4:2019 资源缺乏和速率限制
<a name="api4-2019"></a>
API 通常不会对客户端/用户可以请求的资源的大小或数量施加任何限制。这不仅会影响 API 服务器的性能，导致拒绝服务（DoS），而且还会为诸如暴力破解等身份验证缺陷敞开大门。

#### API5:2019 失效的功能级授权
<a name="api5-2019"></a>
具有不同层次结构、组和角色的复杂访问控制策略，以及管理功能和常规功能之间不明确的分离，往往会导致授权漏洞。通过利用这些漏洞，攻击者可以访问其他用户的资源和/或管理功能。

#### API6:2019 批量分配
<a name="api6-2019"></a>
将客户端提供的数据（例如 JSON）绑定到数据模型，而无需基于白名单进行适当的属性筛选，通常会导致批量分配。无论是猜测对象属性、探索其他 API 端点、阅读文档或在请求负载中提供其他对象属性，攻击者都可以修改它们不被允许修改的对象属性。

#### API7:2019 安全配置错误
<a name="api7-2019"></a>
安全错误配置通常是由于不安全的默认配置、不完整或临时配置、开放云存储、配置错误的HTTP 头、不必要的 HTTP 方法、允许跨域资源共享（CORS）和包含敏感信息的详细错误消息造成的。

#### API8:2019 注入
<a name="api8-2019"></a>
当不受信任的数据作为命令或查询的一部分发送给解释器时，就会出现注入缺陷，如 SQL、NoSQL、命令注入等。攻击者的恶意数据可诱使解释器在未经恰当授权的情况下执行非预期的命令或访问数据。

#### API9:2019 资产管理不当
<a name="api9-2019"></a>
资产管理不当是指未能充分保护和管理API相关的资产，如密钥、证书、配置文件等。这可能导致未经授权的访问和数据泄露。

#### API10:2019 日志和监控不足
<a name="api10-2019"></a>
日志和监控不足是指API缺乏有效的日志记录和监控机制，无法及时检测和响应安全事件。这使得攻击者可以长时间未被发现地进行攻击。