complete, in the sense that they allow (and even promote) the possibility of
exposing all listed anomalies; and second, we want to make these simple and
limit the number of diﬀerent tests required. Guided by these principles, we
30
3.3. MEASUREMENT METHODOLOGY
designed the following two tests.
3.3.2.1 Test 1
The sequence of events for the ﬁrst test is depicted in Figure 3.2. In this test,
each agent performs two consecutive writes and continuously issues reads in
the background, with a frequency that is determined by the maximum fre-
quency that is allowed by the rate limit of the online service. The writes by
the diﬀerent agents are staggered: agents have sequential identiﬁers and the
ﬁrst write by agent i is issued when it observes the last write of agent i − 1. For
all operations, we log the time when they occurred (invocation and response
times) and their output.
The output of running this test already allows us to detect most of the
consistency anomalies from the previous section as follows:
• A violation of Read Your Writes occurs, for instance, when Agent 1 writes
M1 (or M2), and in a subsequent read operation M1 (or M2) is miss-
ing. (The same applies to each message written by each of the remaining
Figure 3.2: Timeline for Test 1 with three agents.
31
Agent 2StartTestWrite(m3)StopReadEndTestAgent3StartTestStartReadStopReadEndTestStartReadAgent 1StartTestWrite(m1)StopReadEndTestStartReadWrite(m2)Write(m4)Observed(m2)Write(m5)Write(m6)Observed(m4)TimeCHAPTER 3. MEASUREMENT STUDY
Figure 3.3: Timeline for Test 2 with three agents.
agents.)
• A violation of Monotonic Writes occurs, for instance, when Agent 1 writes
M1 and M2, and afterwards that agent either observes only the eﬀects of
M2 in the output of a read operation, or observes the eﬀect of both writes
in a diﬀerent order. (The same applies to each pair of messages written
by each of the remaining agents.)
• A violation of Monotonic Reads occurs when any agent observes the eﬀect
of a message M and in a subsequent read by the same agent the eﬀects of
M are no longer observed.
• A violation of Writes Follows Reads occurs when some agent either ob-
serves M3 without observing M2 or observes M5 without observing M4.
We only consider these particular pairs of messages because, in the de-
sign of our test, M3 and M5 are the only write operations that require the
observation of M2 and M4, respectively, as a trigger.
3.3.2.2 Test 2
The timeline for the second test is depicted in Figure 3.3. This test attempts to
uncover divergence among the view that diﬀerent agents have of the system, by
having all agents issue a single write (roughly) simultaneously, and all agents
32
Agent 2StartTestWrite(m2)StopReadEndTestAgent3StartTestStartReadWrite(m3)StopReadEndTestStartReadAgent 1StartTestWrite(m1)StopReadEndTestStartReadTime3.3. MEASUREMENT METHODOLOGY
Figure 3.4: Content divergence where computed window is zero
continuously reading the current state in the background. This simultaneity
could increase the chances of diﬀerent writes arriving at diﬀerent replicas in a
diﬀerent order, and therefore leading the state of such replicas to diverge.
The output of running this test gauges the remaining questions from the
previous section. In particular:
• A violation of Content Divergence occurs, for instance, when an Agent
observes a sequence of writes containing only M1 and another Agent sees
only M2.
• A violation of Order Divergence occurs, for instance, when an Agent sees
the sequence (M2,M1) and another Agent sees the sequence (M1,M2).
The content and order divergence windows are also computed using the re-
sults of this test by ordering all events according to their absolute time (factor-
ing in the correction for clock deltas as explained previously), and determining
the interval of time during which the anomaly conditions hold, as determined
by the most recent read. Note that the timeline considering operations from
all agents may lead to the following situation, depicted in Figure 3.4: agent
1 reads (M1) at time t1; agent 1 reads (M1,M2) at t2; agent 2 reads (M2) at t3;
agent 2 reads (M1,M2) at t4, with t1  where no anomalies were seen.
37
 0 20 40 60 80 100RYWMWMRWFRCDODPercentage of TestsGoogle+Facebook FeedFacebook GroupCHAPTER 3. MEASUREMENT STUDY
(a) Google+
(b) Facebook Feed
(c) Correlation of anomalies
Figure 3.7: Distribution of Read Your Writes anomalies per test.
3.4.2 Session guarantees
We analyze the prevalence of anomalies for each session guarantee. For the
Read Your Writes guarantee, Figure 3.6 shows a high value (99%) for Face-
book Feed and a visible presence of this type of anomaly (22%) in Google+.
Figure 3.7a presents the number of observations of the anomaly per test for
Google+. This shows that, in the particular case of Google+, more than half
of the tests where this anomaly was detected had several individual violations
of the property. The results also show that this anomaly is more prevalent on
clients in Oregon and Japan. The results for Facebook Feed, which are reported
in Figure 3.7b, show the opposite trend: most occurrences of this anomaly
are in tests where it is only detected once or twice per agent. In contrast with
Google+, Facebook Feed showed a similar prevalence across client locations. To
determine whether these anomalies are correlated across locations, Figure 3.7c
depicts the percentage of tests where these anomalies occurred in each agent
38
 0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 512345>5Percentage of TestsNumber of Observed AnomaliesORIEJP 0 5 10 15 20 25 30 35 40 4512345>5Percentage of TestsNumber of Observed AnomaliesORIEJP 0 10 20 30 40 50 60 70ORIEJPOR/IEOR/JPJP/IEALLPercentage of TestsLocation of Agent(s)Google+Facebook Feed3.4. RESULTS
(a) Google+
(b) Facebook Feed
(c) Facebook Group
(d) Correlation of anomalies
Figure 3.8: Distribution of Monotonic Writes anomalies per test.
exclusively versus across diﬀerent combinations of the agents. The results
show that this does not tend to be a global phenomenon: in Google+, the large
majority of occurrences are only perceived by a single agent. However, for
Facebook Feed, all three locations perceived the anomaly in a large fraction of
tests, because this anomaly arises much more frequently.
Next, we analyze the prevalence of violations of the Monotonic Writes ses-
sion guarantee, with Figure 3.6 showing a signiﬁcant prevalence of this type of
anomaly both in Facebook Feed and in Facebook Group, with a 89% and 93%
prevalence, respectively. Google+ shows a fairly low prevalence with only 6%.
The results in Figure 3.8, for Google+, show that this anomaly, when detected
in a test, is often observed several times in that test. Additionally, Oregon and
Japan have an increased incidence of this anomaly occurring multiple times in
a single test, whereas in Ireland, when this anomaly is detected, it often occurs
a single time in each test. This phenomenon however might be a consequence
of the way that our tests are designed, as in test 1 Ireland is the last client to
39
 0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.612345>5Percentage of TestsNumber of Observed AnomaliesORIEJP 0 5 10 15 20 25 3012345>5Percentage of TestsNumber of Observed AnomaliesORIEJP 0 5 10 15 20 25 30 35 40 45 5012345>5Percentage of TestsNumber of Observed AnomaliesORIEJP 0 5 10 15 20 25 30ORIEJPOR/IEOR/JPJP/IEALLPercentage of TestsLocation of Agent(s)Google+Facebook FeedFacebook GroupCHAPTER 3. MEASUREMENT STUDY
issue its sequence of two write operations, terminating the test as soon as these
become visible. Thus, it has a smaller opportunity window for detecting this
anomaly. This observation is supported by the fact that the same trend is ob-
served in the results for the Facebook services, and by additional experiments
that we have performed, where we rotated the location of each agent.
Figure 3.8d presents the correlation of the location of agents across the
tests that observed the anomaly. The ﬁgure shows that this tends to be a local
occurrence in Google+, where the anomaly is visible in only one of the locations,
whereas in Facebook Feed and Group this anomaly tends to be global with a
larger prevalence in Japan.
The large occurrence of these anomalies in the Facebook services motivated
us to inspect more carefully these phenomena across these services. We noticed
that in Facebook Feed, messages are often reordered across diﬀerent read op-
erations executed by each agent. However, for the particular case of Facebook
Group, the reordering of messages occurred mostly in messages issued by the
same agent, and that all agents observed this reordering of operations consis-
tently. Upon further inspection, we noticed that each event in Facebook Group
is tagged with a timestamp that has a precision of one second, and that when-
ever two write operations were issued by an agent within that interval (causing
them to be tagged with the same timestamp) the eﬀects of those operations
would always be observed in reverse order. This suggests that, in this service,
this anomaly is produced by a deterministic ordering scheme for breaking ties
in the creation timestamp.
The experiment for Monotonic Reads, as shown in Figure 3.6, indicates that