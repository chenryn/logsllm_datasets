title:A Guided Tour Puzzle for Denial of Service Prevention
author:Mehmud Abliz and
Taieb Znati
2009 Annual Computer Security Applications Conference
A Guided Tour Puzzle for Denial of Service Prevention
Mehmud Abliz∗
Taieb Znati∗†
∗Department of Computer Science
†Telecommunication Program
University of Pittsburgh
Pittsburgh, Pennsylvania 15260
{mehmud, znati}@cs.pitt.edu
Abstract—Various cryptographic puzzle schemes are pro-
posed as a defense mechanism against denial of service attack.
But, all these puzzle schemes face a dilemma when there is a
large disparity between the computational power of attackers
and legitimate clients: increasing the difﬁculty of puzzles might
unnecessarily restrict legitimate clients too much, and lower
difﬁculty puzzles cannot sufﬁciently block attackers with large
computational resources. In this paper, we introduce guided
tour puzzle1, a novel puzzle scheme that is not affected by
such resource disparity. A guided tour puzzle requires a client
to visit a predeﬁned set of nodes, called tour guides,
in a
certain sequential order to retrieve an n-piece answer, one
piece from each tour guide that appears in the tour. This puzzle
solving process is non-parallelizable, thus cheating by trying to
solve the puzzle in parallel is not possible. Guided tour puzzle
not only achieves all previously deﬁned desired properties
of a cryptographic puzzle scheme, but it also satisﬁes more
important requirements, such as puzzle fairness and minimum
interference, that we identiﬁed. The number of tour guides
required by the scheme can be as few as two, and this extra
cost can be amortized by sharing the same set of tour guides
among multiple servers.
I. INTRODUCTION
A denial of service (DoS) or a distributed denial of
service (DDoS) attack is an attempt by malicious parties
to prevent legitimate users from accessing a service, usually
by depleting the resources of the server which hosts that
service and making the service unavailable to legitimate
users. The targeted resource of the attack can be bandwidth,
CPU, memory, disk capacity, or combination of the above.
In many cases, denial of service attacks are easy to mount
in that the server commits signiﬁcant amount of resources
to process a request which consumes very few resources to
generate by a client.
Cryptographic puzzles are proposed to defend against
such denial of service attacks by better balancing the compu-
tational load of client and server. In a cryptographic puzzle
scheme, a client is required to solve a cryptographic puzzle
and submit the puzzle solution as proof of work before the
server commits substantial resources to its request. A cryp-
tographic puzzle is a computational problem whose solution
1It is called guided tour puzzle because completing a guided tour is like
solving a maze (a tour puzzle) to a malicious client that does not follow
the rules of the puzzle scheme.
requires moderate amount of cryptographic operations from
the solver, and the amount of work required is guaranteed by
the security of both the puzzle construction method and the
cryptographic algorithm used. In most puzzle schemes, each
puzzle requires an approximately ﬁxed number of crypto-
graphic operations, such as hashing, modular multiplication,
or modular exponentiation, to compute the puzzle solution.
Thus, the more an attacker wants to overwhelm the server,
the more puzzles she has to compute, consequently the more
computational resources of her own she needs to consume.
The construction and veriﬁcation of the puzzle are designed
to be very efﬁcient to avoid DoS on the puzzle scheme itself.
Since ﬁrst introduced by Dwork and Naor in [1] to combat
junk e-mails, cryptographic puzzles are extended to defeat
various attacks such as denial of service, Sybil attacks etc.
Moreover, new ways of constructing and distributing puzzles
are introduced one after another. But none of the proposed
schemes so far tried to solve what we call the resource
disparity problem. A resource disparity problem in puzzle
schemes appear when there exists a large disparity between
the computational power of attackers and legitimate clients,
signiﬁcantly reducing the effectiveness of cryptographic
puzzles against DoS attacks. We use an example of the most
commonly used puzzle, hash-reversal puzzle, to explain the
problem.
In a hash reversal puzzle, such as [2][3][4][5][6], a puzzle
with difﬁculty d takes on average 2d−1 hash operations to
compute its solution. Say a server can handle 1000 requests
per second, and a subset of clients have limited resources,
and can perform 105 hash operations per second at maxi-
mum. Assuming these clients can spend at most 50% of their
computational power on computing puzzles, then the server
0.5×105 ≈ 20 seconds between sending
should allow at least
a puzzle and receiving its solution, for a hash-reversal puzzle
with difﬁculty d = 21. An attacker with an ASIC designed
for hash computation can perform 109 hash operations per
second [7], so she can compute
220/109 = 20,000 puzzles
with the same difﬁculty during that 20-second period. This
means an attacker with just one such ASIC component can
easily overwhelm the server. For more powerful servers, an
attacker can still launch successful denial of service attack
using multiple such dedicated devices.
20sec
220
1063-9527/09 $26.00 © 2009 IEEE
DOI 10.1109/ACSAC.2009.33
279
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:07:31 UTC from IEEE Xplore.  Restrictions apply. 
The server can try to further block such attackers by
increasing the difﬁculty of the puzzle, for example setting
d = 30, but that will restrict the legitimate clients too much.
Making it worse, some clients with limited computational
power might never be able to solve the puzzle on time,
hence never being able to get service. In fact, the server
should not even expect a client to make 50% of its com-
putational power available for puzzle computation, since a
client should use majority of its resources on normal user
operations. Thus, even assuming the ratio of computational
powers of legitimate clients and malicious clients is a small
number, such as 40 [8], the disparity between their available
computational power is ampliﬁed to a far bigger number due
to the fact that only a limited percentage of the resources
are available for puzzle computation at legitimate clients
whereas malicious clients can try to make the most of their
already strong computational power.
In this paper, we introduce a novel puzzle scheme, called
guided tour puzzle, that is not affected by the resource
disparity problem. We use the network round-trip delay as
the unit work in the puzzle solving process, and require a
client to complete a guided tour by visiting a predeﬁned set
of nodes, called tour guides, in a certain sequential visiting
order. Contribution of our work is the following:
• We study the state of the art in the cryptographic puz-
zles, and identify a comprehensive list of requirements
that a puzzle scheme should satisfy.
• We further extend this list by deﬁning two highly
desired properties of a puzzle scheme that have not
been considered by previous works.
• We explore a novel approach to designing crypto-
graphic puzzles by introducing guided tour puzzle.
Through analysis and experiments, we show that guided
tour puzzle achieves the desirable properties of a good
puzzle scheme. In particular, we show how guided tour
puzzle achieves puzzle fairness and minimum interfer-
ence properties, and why achieving them is essential
to the effectiveness of a puzzle scheme in preventing
denial of service attacks.
• We also provide a comprehensive survey of various
cryptographic puzzle schemes.
The rest of the paper is organized as follows. Section II
discusses a comprehensive set of requirements of a puzzle
scheme. Section III deﬁnes design goals of guided tour
puzzle and assumed threat model, followed by a formal
introduction of basic guided tour puzzle. Several improve-
ments to the basic scheme is proposed in Section IV. In
Section V, we use analysis and measurement techniques to
show that guided tour puzzle satisﬁes our requirements and
design goals. Section VI provides an overview of the related
work in cryptographic puzzle area, and we discuss future
improvements to our scheme and give a conclusion of the
paper in Section VII.
II. DESIRED PROPERTIES
Various cryptographic puzzle schemes are proposed so
far, each focusing only on a subset of requirements for
cryptographic puzzles. We made an endeavor to provide
a more comprehensive list of requirements that a crypto-
graphic puzzle scheme should satisfy.
A. General Properties
We use general properties to refer to puzzle properties
that are discussed to some extent in the existing literature.
Computation guarantee. The computation guarantee
means a cryptographic puzzle guarantees a lower and upper
bound on the number of cryptographic operations spent on
a client to ﬁnd the puzzle answer. In other words, a mali-
cious client should not be able to solve a puzzle spending
signiﬁcantly less number of operations than required.
Efﬁciency. The construction, distribution and veriﬁcation
in terms
of a puzzle by the server should be efﬁcient,
of CPU, memory, bandwidth, hard disk etc. Speciﬁcally,
puzzle construction, distribution and veriﬁcation should add
minimal overhead to the server to prevent the puzzle scheme
from becoming an avenue for denying service [3].
Adjustability of difﬁculty. This property is also referred
to as puzzle granularity [9]. Adjustability of puzzle difﬁculty
means the cost of solving the puzzle can be increased or
decreased in ﬁne granularity. Adjustability of difﬁculty is
important, because ﬁner adjustability enables the server to
achieve better trade-off between blocking attackers and the
service degradation of legitimate clients.
Correlation-free. A puzzle is considered correlation-free
if knowing the solutions to all previous puzzles seen by
a client does not make solving a new puzzle any easy.
Apparently, if a puzzle is not correlation-free, then it allows
malicious clients to solve puzzles faster by correlating
previous answers.
Stateless. A puzzle is said to be stateless if it requires the
server to store no client information or puzzle-related data
in order to verify puzzle solutions. Requiring the server to
use a small and ﬁxed memory for storing such information
is also acceptable in most cases.
Tamper-resistance. A puzzle scheme should limit replay
attacks over time and space. Puzzle solutions should not be
valid indeﬁnitely and should not be usable by other clients
[3].
Non-parallelizability. Non-parallelizability means the
puzzle solution cannot be computed in parallel using mul-
tiple machines [9]. Non-parallelizable puzzles can prevent
attackers from distributing computation of a puzzle solution
to a group of machines to obtain the solution quicker.
B. Puzzle Fairness and Minimum Interference
Puzzle fairness and minimum interference are two very
important properties that are little discussed and not ad-
dressed by previous schemes.
280
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:07:31 UTC from IEEE Xplore.  Restrictions apply. 
Puzzle fairness. Puzzle fairness means a puzzle should
take same amount of time for all clients to compute, re-
gardless of their CPU power, memory size, and bandwidth.
If a puzzle can achieve fairness,
then a powerful DoS
attacker can effectively be reduced to a legitimate client. Not
being able to achieve fairness leads to the resource disparity
problem we mentioned earlier.
the client should not
Minimum interference. This property requires that puz-
zle computation at
interfere with
user’s normal operations. If a puzzle scheme takes up too
much resources and interfere with users’ normal computing
activity, users might disable the puzzle scheme or even try to
avoid using any service that deploys such a puzzle scheme.
III. GUIDED TOUR PUZZLE
In this section, we ﬁrst describe our goals in designing
guided tour puzzle, and introduce a threat model that is
stronger than a model assumed by previous puzzle schemes.
Next, we present a basic version of the guided tour puzzle.
A. Design Goals
Although we introduce guided tour puzzle in a denial
of service prevention setting, we expect tour puzzles to be
used to defend against various attacks such as e-mail spams,
Sybil attacks etc. With this in mind, guided tour puzzle
aims to achieve all the desired properties of cryptographic
puzzles introduced in Section II. Among those properties,
puzzle fairness and minimum interference are not addressed
by any previous puzzle scheme, and are our main goals in
designing guided tour puzzle. Moreover, guided tour puzzle
strives to achieve better effectiveness against both DoS and
DDoS attacks.
B. Threat Model