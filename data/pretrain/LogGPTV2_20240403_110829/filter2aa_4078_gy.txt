费的由公众随意开发的 Linux 操作系统一直在进行竞争。 Unix 版本的严格编号以及它们在完全不同
的 内核(操作系统的核心代码)上进行开发的事实 ， 使得难以编写病毒， 从而对 Unix 系统产生大范围
的影响 。
也就是说， Macintosh 和 Unix 用户不应该安于现状。 只 有几个病毒对他们的系统带来威胁， 这
并不意味着其中 的病毒不能对他们的系统随时产生影响。任何人都有责任确保计算机系统的安全性，
并应该实施适当 的反病毒机制 以确保其资源的持续安全。
3. 反病毒机制
今天， 几乎每台工作中 的台式计算机都运行着某种反病毒软件包。 流行的计算机反病毒软件包
括微软的 Security Essentials、 McAfee 的 VlfUsScan 和 Norton 的 AntiVIms， 但是市场上还存在其他很
多产品能够提供从单一系统到整个企业的保护: 有的被设计用于防范指定的常见病毒威胁类型， 例
如入站 电子邮件。
这些软件包中 的大多数都使用一种被称为特征型检测的方法来识别系统中潜在 的病毒感染。 实
质上， 反病毒软件包维护着一个极大的数据库， 这个数据库中包含所有己知病毒的指示特征。 依赖
于反病毒包和配置设置， 反病毒软件包能够定期扫描存储介质 ， 对所有包含与标准匹配的数据的任
何文件进行检查 。 一旦检测到任何问题， 反病毒软件包就会采取下列措施中 的某种措施:
• 如果软件可以消除这些病毒， 那么就对这些被感染的文件进行杀毒， 并且将系统还原到安
全 的状态。
第 21 章 恶意代码与应用攻击
• 如果软件识别 了病毒但是不知道如何为文件杀毒， 那么可能会隔离这个文件， 直至用户或
管理员可 以人工进行分析。
• 如果安全设置策略没有提供隔离或者文件超出了预定义的危险阔值， 那么反病毒软件包可
能删除这些被感染的文件 ， 以试图保持系统的完整性。
使用特征型反病毒软件包时， 必须记住的是， 软件包的有效性只依赖于基础性的病毒定义文件
的有效性。 如果不经常更新病毒定义(通常需要每年订购的费用)， 那么反病毒软件将不能检测新出
现的病毒。 互联网上每年新出现成千上万个病毒， 过期的病毒定义文件将很快使反病毒防护失效。
许多防病毒软件包还使用基于启发式的机制来检测潜在的恶意软件感染。 这些方法分析软件的
行为， 寻找病毒活动的迹象， 例如试图提高特权级别、 掩盖电子踪迹， 以及更改不相关的或操作系
统的文件。
大多数现代反病毒软件产品能够检测、 删除和清除系统上的大量不 同类型的恶意代码。 换句话
说， 反病毒解决方案不仅仅限于防范病毒。 这些工具往往能够提供针对蠕虫、 特洛伊木马 、 逻辑炸
弹 以及其他电子邮件或 Web 承载代码的防护。 在怀疑互联网上存在新的恶意代码时， 最佳的做法是
联系反病毒软件供应商并咨询当前针对新威胁的防护状态。 不要坐等下一次定期或 自动特征字典更
新。 此外， 不要相信第三方关于反病毒解决方案所提供保护状态的言论。 始终牢记与反病毒软件供
应商直接联系。 大多数负责的反病毒软件供应商都会在确定新的重大威胁的第一时间 向客户发出警
报 ， 因 此客户 也一定要保证关注这样的警报。
其他安全软件包(例如， 流行的 Tripwire 数据完整性保证软件包)也提供了辅助的反病毒功能。
Tripwire 被设计用于警示管理员发生未授权的文件修改， 常常被用来检测对 Web 服务器的破坏和类
似的攻击。 不过， 如果关键的系统可执行文件(如 command.com)被突然修改， 那么 Tripwire 也可能
提供某些病毒感染的警告。 这些系统通过维护系统所有存储文件的散列值的数据库进行工作(对用于
创建这些散列值的散列函数的详细讨论， 可 以参看第 6 章 " 密码学与对称加密算法" )。 通过比较这
些归档的散列值与当前计算的文件散列值， 就可以检测出两个时间段之间所有被修改的文件。 在最
基本的层面上， 散列是用来汇总文件内 容的数字 。 只要文件保持不变， 散列将保持不变。 如果文件
被修改， 即使是轻微的， 散列也将发生明显的变化， 表明文件己被修改。 除非该操作似乎可解释，
例如， 如果发生在安装新软件、 操作系统补丁程序的应用或类似的更改之后 ， 在可执行文件中的突
然更改可能是恶意软件感染的迹象。
4. 病毒技术
当病毒检测和消除技术得到提高以便战胜恶意开发人员设计的新威胁时， 新类型的病毒被设计
用于挫败使用这些技术的系统。 接下来我们将分析病毒的 4 种具体类型， 它们使用卑鄙的技术企图
逃避检测 ， 这4种类型是: 复合病毒、 隐 形病毒、 多态病毒和加密病毒。
复合病毒 复合病毒使用 多种传播技术试图渗透只防御其中一种方法的系统。 例如， 在 1 993
年发现的 Marzia病毒通过为每个文件添加 2048 个字节的恶意代码来感染关键的 COM和 EXE 文件，
最明显的就是系统文件 command.com。 这个特征说明它是一种文件程序感染病毒。 此外， 在 Marzia
病毒感染系统两个小时后 ， 它会向系统的主引 导记录写入恶意代码， 这说明它也是一种引 导扇 区
病毒。
隐形病毒 隐形病毒通过对操作系统的实际篡改来欺骗反病毒软件包认为所有事情都工作正
常， 从而将自 己隐藏起来。 例如， 隐形的引 导扇 区病毒可能利用恶意代码覆盖系统的主引导记录，
随后还通过修改操作系统的文件访 问功能来覆盖 自 身痕迹。 当反病毒软件包请求 MBR 的副本时，
623
624
CISSP 官方学 习指南(第 7 版)
被修改的操作系统代码提供它所期望看到的版本: 也就是没有任何病毒特征的未被感染的 b但R 版
本 。 然而 ， 系统启 动时会读取被感染的 MBR， 井且将病毒加载到 内存中 。
多态病毒 在系统间传输时， 多态病毒实际上会修改 自 己的代码。 这种病毒的传播和破坏技术
保持完全相同 ， 但是每次感染新的系统时病毒的特征略有不同。 多态病毒制造者的希望就是， 通过
连续改变特征使得特征型反病毒软件包失效。 然而 ， 反病毒软件供应商识破了许多多态病毒技术的
代码， 因此目 前使用的反病毒软件版本都能够检测出 己知的多态病毒。 剩下的唯一担心是， 为了阻
止多态病毒的攻击而生成必要的特征文件， 这会花费供应商较长的时间， 因此可能导致多态病毒在
更长时间范围 内在互联 网上肆无忌惮地运行。
加密病毒 加密病毒使用密码术(参看第 6 章的内容)来躲避检测 。 在加密病毒的外部表现中 ，
它们实际上很像多态病毒， 每个被感染的系统都有不同特征的病毒。 然而， 加密病毒不是通过改变
代码来生成这些修改过的特征， 而是修改在磁盘上的存储方式。 加密病毒使用一个很短的、 被称为
病毒解密程序的代码段， 这个代码段包含必要的密码学信息， 用于对存储在磁盘上其他地方的主病
毒代码进行加载和解密。 每个感染过程都使用不同的密钥， 这使得主代码在每个系统上都呈现出 完
全不同 的样子。 不过， 病毒解密程序往往包含指示特征， 因此加密病毒很容易被最新的反病毒软件
包识破。
5. 骗局
如果缺少对病毒骗局。oax)导致的损害和资源浪费的讨论， 那么对病毒的研究就不算完整。 几
乎每个电子邮件用户都曾经收到过朋友转发来的邮件信息或者有关 Intemet 存在最新病毒威胁的警
告 。 这个传闻 中 的 "病毒" 总是那些 目 前尚未发作但是最具破坏性的病毒， 没有任何反病毒软件包
能够检测和/或删除它们。 有关这种骗局的一个著名示例是欢乐时光(Good Times)病毒警告， 它最早
在 1 994 年出现在 互联网上， 直到今天依然在传播。
如果想获得关于这个主题的更多信息， m泸h-tracking 网站 Snopes 保存了一份病毒骗局列表， 网
址如下: http://www. snopes.comlcomputer/virus/virus.asp。
2 1 . 1 .3 逻辑炸弹
你曾经在第 20章"软件开发安全 " 中学过， 逻辑炸弹是感染系统并且在达到一个或多个满足的
逻辑条件(例如 ， 时间、 程序启动 、 Web 站点登录等)前保持休眠状态的恶意代码对象。 大多数逻辑
炸弹被软件开发人员编入用户定制 的应用程序中 ， 这些开发人员 的 目 的是在被突然解雇时破坏公司
的工作 。 第 20 章 己经介绍 了 几个这类逻辑炸弹的例子。
然而， 必须记住的是， 像所有恶意代码对象一样 ， 逻辑炸弹具有许多形式和大小。 事实上， 许
多病毒和特洛伊木马都包含一个逻辑炸弹组件。著名 的米开朗其罗病毒在 1991 年被发现时曾导致介
质混乱， 它就是由其包含的逻辑炸弹触发启动的。 这个病毒通过共享被感染的软盘来感染系统的主
引 导记录， 并且随后将 自 己隐藏起来， 直到 3 月 6 日 (即著名 的意大利艺术家米开朗其罗 的生 日)这
一天启动， 从而重新格式化被感染系统的硬盘井且破坏硬盘包含的所有数据。
2 1 . 1 .4 特洛伊木马
系统管理员经常警告计算机用户 ， 不要从互联网上下载并安装软件， 除非能够绝对保证来源可
第 21 章 恶意代码与应用攻击
靠。 事实上， 许多公司严格地禁止安装任何非 盯 部门预筛选的软件 ， 这样的策略能够最小化组织的
网络被特洛伊木马破坏的风险。 特洛伊木马是一种软件l}芋， 这种软件程序表面上友善， 但是实质
上承载恶意有效载荷 ， 具有对系统或网络的潜在破坏能力 。
不同的特洛伊木马在功能上区别很大。 一些木马将破坏系统上存储的所有数据 ， 试图在尽可能
短的时间段内产生大规模的破坏。 一些木马则可能是无害的。 例如， 在 2∞2 年中出现在互联网上的
一系列木马， 这些木马声称为 PC 用户提供在计算机上运行为 Microsoft Xbox 游戏系统设计的游戏
的能力。 当用户运行这个手里芋时， 它什么也不做。 不过， 它还向 Windows 注册表插入一个值， 导致
每次计算机启动后都打开指定的 Web 页面。 该特洛伊木马的制作者们希望通过 Xbox 木马接收到大
量的对其 Web 页面的浏览， 从而得到广告收入。 不过令他们感到遗憾的是， 反病毒专家们很快就发
现了他们 的真实企图， 并且相关网站也被关 闭 了 。
最近对安全圈造成重大影响的一类木马是流氓杀毒软件。 这类软件欺骗用户安装它 ， 声称是一
个防病毒包， 通常伪装成一个弹出广告， 并模仿成安全警告的外观和感觉。 一旦用户安装软件， 就
会窃取个人信息或提示用 户 付款 以 " 更新 " 流氓杀毒软件。 " 更新 " 只 是禁用木马 !
另一个变种一一勒索软件， 是特别阴险的。 勒索软件感染 目 标计算机， 然后使用加密技术来加
密存储在系统上的文档、 电子表格和其他文件， 并使用 只有恶意软件创建者知道的密钥。 接下来用
户 无法访问他们的文件， 并收到一条不祥的弹出消息警告， 文件将被永久删除， 除非在短时间内支
付赎金。 用 户然后经常支付这个赎金来重新获得对他们文件的访问。 最著名的勒索软件种类之一是
Cryptolocker。
⑧ 真实场景
僵尸网络
数年以前， 本书 的一位作者访问了一家组织 ， 这家公司 怀凝 自 己存在安全问题， 但是却不具备
诊断或解决问题的专业知识。 安全问题的主要症状是网络速度缓慢。 我们在执行基本的测试时发现，
公司 网 络中 的 所有系统都没有运行基本的反病毒软件 ， 并且某些 系 统 已 经感染 了 特洛伊木马 。
是什么原因导致网络速度缓慢呢? 是的 ， 特洛伊木马使所有被感染的 系统都成为 某个僵尸 网 络
(botnet)的成员 ， 僵尸 网络由 Intemet 上被僵尸牧人。otmaster)控制的众多 计算积〈有时是数千台)组成。
这个特定僵尸 网 络的僵尸牧人使组织 网 络中的系统参与针对某个 Web 站点(由于某个原 因 或其
他原 因 ， 僵尸牧人不喜欢相应的站点)的拒绝服务攻击。 僵尸牧人指示僵尸 网络中 的所有系统都反复
检索相 同 的 Web 页面， 从而使受攻击的 Web 站点 由于负 荷过高导致出现故障。 组织 网 络中存在大
约 30 个被感染的 系统， 僵尸 网络的攻击几乎 占 用 了 所有带宽 !
解决这个问题非常简单。 我们在所有 系统中都安装了 反病毒软件并删除了 特洛伊木马 。 进行这
些操作之后 ， 一切都恢复正常 了 。
21 . 1 .5 蠕虫