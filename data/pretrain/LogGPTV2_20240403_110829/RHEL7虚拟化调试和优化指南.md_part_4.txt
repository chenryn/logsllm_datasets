:::
::: para
[**tuned**]{.application} 是一项配置文件调整机制，使 Red Hat Enterprise
Linux 适应特定负载特性，例如 CPU
密集型任务要求，或存储／网络吞吐量的响应能力。
:::
::: para
伴随它的工具 [**ktune**]{.application} 结合了
[**tuned-adm**]{.application}
工具，提供大量预先配置的调整分析，以便在大量具体使用案例中提高性能并降低能耗。编辑这些配置或者创建新配置可生成为系统定制的性能解决方案。
:::
::: para
提供作为 [**tuned-adm**]{.application} 中一部分的虚拟化相关文件包括：
:::
::: variablelist
[*`virtual-guest`*]{.term}
:   ::: para
    基于 *`throughput-performance`* 文件，*`virtual-guest`*
    同样会降低虚拟内存的 swappiness。
    :::
    ::: para
    在创建 Red Hat Enterprise Linux 7 客户虚拟机时，*`virtual-guest`*
    文件将被自动选择。建议虚拟机使用该文件。
    :::
    ::: para
    本文件在 Red Hat Enterprise Linux 6.3
    和之后可用，但在安装虚拟机时须手动选择。
    :::
[*`virtual-host`*]{.term}
:   ::: para
    基于 *`throughput-performance`* 文件，*`virtual-host`*
    也会降低虚拟内存的 swappiness，并启用更积极的脏页（dirty
    page）回写。建议虚拟化主机使用本文件，包括 KVM 和 Red Hat Enterprise
    Virtualization 主机。
    :::
:::
::: para
在 Red Hat Enterprise Linux 7 安装的默认情况下，将安装 [tuned]{.package}
软件包，并启用 `tuned`{.systemitem} 服务。
:::
::: para
要列出所有可用配置文件并识别目前激活的配置文件，请运行：
:::
``` screen
# tuned-adm list
Available profiles:
- balanced
- desktop
- latency-performance
- network-latency
- network-throughput
- powersave
- sap
- throughput-performance
- virtual-guest
- virtual-host
Current active profile: throughput-performance
```
::: para
也可创建自定义 [**tuned**]{.application}
文件对一组调整参数进行封装。创建自定义 [**tuned**]{.application}
文件的使用说明，请参考 `tuned.conf`{.command} 手册页。
:::
::: para
要只显示当前激活的配置文件请运行：
:::
``` screen
tuned-adm active
```
::: para
要切换到某个可用的配置文件请运行：
:::
``` screen
tuned-adm profile profile_name
```
::: para
例如，切换到 `virtual-host`{.systemitem} 文件，请运行：
:::
``` screen
tuned-adm profile virtual-host
```
::: {.important xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**重要**
:::
::: admonition
::: para
设置 Red Hat Enterprise Linux 7.1 中的 tuned
配置文件和以上命令后，需重启 [**tuned**]{.application}
服务，且系统必须被重启使其持续应用修改。更多信息请查看《Red Hat
Enterprise Linux 7 性能调试指南》。
:::
:::
:::
::: para
在某些情况下，更优的选择是禁用 [**tuned**]{.application}
并使用手动设定的参数。禁用一切调试请运行：
:::
``` screen
tuned-adm off
```
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
有关 [**tuned**]{.application}、[**tuned-adm**]{.application} 和
[**ktune**]{.application} 的更多信息，请参照《*Red Hat Enterprise
Linux 7 电源管理指南* 》，可由
 获取。
:::
:::
:::
:::
:::
[]{#chap-Virtualization_Tuning_Optimization_Guide-Networking.html}
::: chapter
::: titlepage
# [⁠]{#chap-Virtualization_Tuning_Optimization_Guide-Networking.html#chap-Virtualization_Tuning_Optimization_Guide-Networking}第 5 章 联网 {.title}
:::
::: section
::: titlepage
# [⁠]{#chap-Virtualization_Tuning_Optimization_Guide-Networking.html#idm140616977157552}5.1. 简介 {.title}
:::
::: para
本章节包括虚拟化环境中的联网优化主题。
:::
:::
::: section
::: titlepage
# [⁠]{#chap-Virtualization_Tuning_Optimization_Guide-Networking.html#sect-Virtualization_Tuning_Optimization_Guide-Networking-General_Tips}5.2. 联网调试须知 {.title}
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    使用多个网络以避免单一网络过载。例如用专用网络进行管理、备份及／或实时迁移。
    :::
-   ::: para
    通常，在所有组件中可以满足匹配最大传输单元（1,500字节）。如果需要更大的消息，提高最大传输单元值可以减少碎片。如果改变了最大传输单元，路径中所有的设备都应该有一个匹配的最大传输单元值。
    :::
-   ::: para
    使用 *`arp_filter`* 阻止 ARP
    Flux，这种不良情况可能会在主机和客机中发生，造成这一现象的原因是机器从一个以上网络界面响应
    ARP请求：运行
    `echo 1 > /proc/sys/net/ipv4/conf/all/arp_filter`{.command} 或编辑
    `/etc/sysctl.conf`{.filename} 让重启后这设置得以持续。
    :::
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
关于 ARP Flux
的更多信息请参照以下网址：。
:::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#chap-Virtualization_Tuning_Optimization_Guide-Networking.html#sect-Virtualization_Tuning_Optimization_Guide-Networking-Virtio_and_vhostnet}5.3. Virtio 和 vhost_net {.title}
:::
::: para
以下示意图将演示 Virtio 和 vhost_net 构架中，kernel 的作用。
:::
::: figure
[⁠]{#chap-Virtualization_Tuning_Optimization_Guide-Networking.html#idm140616988212000}
::: figure-contents
::: mediaobject
![Virtio 和 vhost_net 构架](images/virtio_vhostnet.png)
:::
:::
**图 5.1. Virtio 和 vhost_net 构架**
:::
::: para
vhost_net 将部分 Virtio 驱动从用户空间移至
kernel。这将减少复制操作、降低延迟和 CPU 占用量。
:::
:::
::: section
::: titlepage
# [⁠]{#chap-Virtualization_Tuning_Optimization_Guide-Networking.html#sect-Virtualization_Tuning_Optimization_Guide-Networking-Device_Assignment_and_SRIOV}5.4. 设备分配和 SR-IOV {.title}
:::
::: para
以下示意图将演示设备分配和 SR-IOV 构架中 kernel 的作用。
:::
::: figure
[⁠]{#chap-Virtualization_Tuning_Optimization_Guide-Networking.html#idm140616990477424}
::: figure-contents
::: mediaobject
![设备分配和 SR-IOV](images/devassign_sriov.png)
:::
:::
**图 5.2. 设备分配和 SR-IOV**
:::
::: para
设备分配使整个设备在客机中可用。SR-IOV 需要驱动和硬件中的支持，包括 NIC
和系统板，并允许创建多个虚拟设备并进入不同的客机。客机中需要针对供应商的驱动，但
SR-IOV 提供一切网络选项中的最低延迟。
:::
:::
::: section
::: titlepage
# [⁠]{#chap-Virtualization_Tuning_Optimization_Guide-Networking.html#sect-Virtualization_Tuning_Optimization_Guide-Networking-Techniques}5.5. 网络调试技巧 {.title}
:::
::: para
这一部分描述了虚拟化环境中网络性能调试的技术。
:::
::: section
::: titlepage
## [⁠]{#chap-Virtualization_Tuning_Optimization_Guide-Networking.html#sect-Virtualization_Tuning_Optimization_Guide-Networking-Zero_copy_transmit}5.5.1. 桥接零复制传输 {.title}
:::
::: para
零复制传输（Bridge Zero Copy
Transmit）模式对于大尺寸的数据包较为有效。通常在客机网络和外部网络间的大数据包传输中，它对主机
CPU 负荷的减少可达到 15%，对吞吐量没有影响。
:::
::: para
它不对客机到客机、客机到主机或小数据包负载造成影响。
:::
::: para
Red Hat Enterprise Linux 7
虚拟机完全支持桥接零复制传输，但是被默认禁用。若需要启动零复制传输模式，请将
vhost_net 模块的 *`experimental_zcopytx`* kernel 模块参数设置到 1。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
由于针对限制服务和信息的威胁防御技术泄露攻击，在传输中通常会创建一个额外的数据复制。启动零复制传输将禁用这一威胁防御技术。
:::
:::
:::
::: para
如果有性能回归限向，或如果无需担心主机 CPU
的使用，零复制传输模式可以通过将 *`experimental_zcopytx`* 设置到 0
被禁用。
:::
:::
::: section
::: titlepage
## [⁠]{#chap-Virtualization_Tuning_Optimization_Guide-Networking.html#sect-Virtualization_Tuning_Optimization_Guide-Networking-Multi-queue_virtio-net}5.5.2. 多队列 virtio-net {.title}
:::
::: para
多队列 virtio-net 提供了随着虚拟 CPU
数量增加而改变网络性能的方法，即允许每一次通过一组以上的 virtqueue
传输数据包。
:::
::: para
今天的高端服务器拥有更多处理器，其中所运行客机的虚拟 CPU
数量往往也在增加。在单一队列的 virtio-net
中，客机中协议堆叠的缩放收到限制，因为网络性能不随虚拟 CPU
数量的增加而改变。鉴于 virtio-net 只有一组 TX 和 RX
队列，客机不能并行传输或检索数据包。
:::
::: para
多队列支持通过允许并行的数据包处理移除这些瓶颈。
:::
::: para
多队列 virtio-net 在这些时候可以提供最佳性能：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    流量数据包相对较大。
    :::
-   ::: para
    客机同时在各种连接中活跃，流量从客机、客机到主机或客户端运行到外部系统。
    :::
-   ::: para
    队列数量与虚拟 CPU 相同。因为多队列支持可以优化 RX 中断关联和 TX
    队列选择，实现特定队列对于特定虚拟 CPU 的私有化。
    :::
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}