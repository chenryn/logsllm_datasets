of the generic 
Algo­
Some instantiations 
Variable 
phase in 
p. Variable 
the validation 
round. 
which the vote of process 
p has been val­
is a 
votep represents 
p. This variable 
the value considered 
for deci­
is initialized 
tsp represents 
the most 
sion by process 
value initp of process 
recent 
idated during 
list of pairs (v, ¢ ), each pair denoting 
set to v in the selection 
Byzantine 
some value v may have been validated 
the variable 
the context 
ignored. 
historyp 
both tsp and historyp 
can be ignored 
of our generic 
of 
processes, variable 
is used to prove that 
in some phase ¢; in 
can be 
historyp 
and 
faults, 
The size of variable 
historyp 
that votep has been 
round of phase ¢. In the context 
Variable 
of benign 
algorithm. 
Round (r =  3¢ -2). The selection 
round 
First, 
processes 
to elect a set of 
historyp 
it allows 
validators, 
that have a special 
role in the 
The Selection 
has two roles. 
processes, 
called 
next validation 
round. 
of each process, 
Selector(p, 
of processes 
The election 
which is locally 
is based on the proposal 
returned 
by the function 
a set 
¢) outputs 
in Section 
3.2. 
¢). The function 
S  II and is formally 
defined 
role of the selection 
round is for validators 
Selector(p, 
is unbounded,s 
in some instantiations 
for the decision. 
tsp, historyp, 
for" Find the Locked 
is implemented 
a value that will be considered 
FLV() 
where  is the set 
by the function 
Value"), 
to select 
The selection 
(stands 
of messages 
tion round. 
be returned 
can be selected, 
information 
instance, 
a selection 
tion of FLV() can be found in Section 
(votep, 
When a value v is locked, 
by FLV().  On the other hand, if any value 
7. If no enough 
may occur, 
for 
then FLV() may return 
to FLV() (which 
does not receive 
any message 
A formal 
3.2. 
is provided 
if a validator 
then null is returned. 
-) received 
during 
defini­
no value v' -I=- v can 
in the selec­
round), 
The selection 
round is executed 
as follows. 
Each pro­
Selector(p, ¢) 
and the set S of processes 
output 
to the processes 
7). 
each honest 
received, 
in S (line 
process 
9). If any value can be selected 
(Le., 
cess p first sends its state 
by function 
Based on the set of messages 
selects 
a value (line 
FLV () returns 
chosen among 
lected 
the selected 
(lines 
validators 
that all honest 
validators, 
 (lines 
selectedp 
value, 
(i.e., 
7), the selected 
value is deterministically 
10-11). When a value has been se­
p sets its vote to 
-I=- null), process 
and logs the selected 
value in the history 
1. An honest 
2. All honest 
process 
processes 
v in round r'  r). 
However, 
is v-valent 
p decides 
if v is locked 
it follows 
that, 
then the configura­
algorithm 
the opposite 
is not true (e.g., 
in round r, and the first honest 
v in round r' 2': r, then v is not locked 
if 
in 
3 A Generic Consensus Algorithm 
We now present 
a generic 
from which well-known 
stantiated 
parametrization 
(see Section 
algorithms 
consensus 
is obtained 
5). Generality 
1: parameters 
appear 
1), 
can be in­
by 
of Algorithm 
algorithm 
(see Algorithm 
in a box. 
3.1 Generic Algorithm 
2010 IEEEIIFIP 
International 
Conference 
on Dependable 
Systems & Networks (DSN) 
each process 
starts 
with a 
possibly 
decides on a value. 
by the following 
decide 
processes 
properties: 
differently; 
decide; 
processes 
are honest 
v, then v is the initial 
eventually 
and if an honest 
pro­
value of some process; 
2.3 The Consensus Problem 
problem, 
value, 
and later 
is specified 
No two honest 
All correct 
In the consensus 
given initial 
The problem 
• Agreement: 
• Termination: 
• Validity: If all processes 
cess decides 
• Unanimity [20]: If all honest 
tial value v and an honest 
Unanimity 
makes sense with Byzantine 
Locked Value. In the context 
refer below to the notion 
similarities 
fined in [8], but is actually 
is locked 
with the notion 
extends 
in round r if: 
(which 
processes 
decides, 
have the same ini­
then it decides 
process 
v. 
is optional, 
and only 
validity) 
processes. 
of a consensus 
we 
of locked value.4 This notion 
has 
de­
(see below). 
of univalent 
different 
A value v 
algorithm, 
configuration 
called 
The generic 
1 consists 
Algorithm 
Each phase ¢ consists 
of a sequence 
phases that can be seen as successive 
trials 
a value. 
tively 
(r =  3¢ -1), and decision round 
that some values 
idation 
round. 
three rounds. 
of 
on 
of three rounds, 
respec­
round (r = 3¢ -2), validation 
round 
(r =  3¢). We will see 
allow us to skip the val­
and then the 
of the parameters 
process 
We first describe 
to decide 
states, 
selection 
12-14). At the end of the selection 
round the set of 
for the next round is elected. 
that consider 
Line 15 guarantees 
a non-empty 
have the same set of validators. 
processes 
set of 
For termination, 
the selection 
correct 
validators 
have selected 
round must 
ensure 
the same value. 
en-
This is 
that all 
4Note that the definition 
from our definition. 
differs 
of the term locked value in some other works 
5Bounding the size of the variable 
More details 
round of communication. 
can be found in [3]. 
historyp 
requires 
an additional 
978-1-4244-7501-8/10/$26.00 
©201O IEEE 
345 
DSN 2010: RUtti et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 13:58:22 UTC from IEEE Xplore.  Restrictions apply. 
2010 IEEE/IFIP 
International 
Conference 
on Dependable 
Systems & Networks (DSN) 
1» 1 
if selectp =  ? then 
Algorithm 
selectp .- choose deterministically 
a value in { v  : (v, - ,  -, -) E f1; } 
if selectp # null then 
votep .- selectp 
historyp  .-historyp 
send (votep, tsp, history,,, 1 Selector(p, 1» I) to 1 Selector(p, 
Algorithm 1 Generic 
1: Initialization: 
2: 
vote1) := init7) 
3: 
tsp := 0 
4 : 
historyp :=  {(initp, O)} 
Round r = 31> -2: 
5: Selection 
6:  S;: 
7: 
8:  T;: 
9:  select" .- 1 FLV(f1;) 1 
10: 
11: 
12: 
13: 
14: 
15:  validatorsp .- S if exists the set S such that more than nt" messages (-,  -, - ,  S) have been received else 111 
16: Validation 
17:  S: 
18: 
19: 
20:  T;: 
21 :  validatorsp .- S if exists the set S such that b + 1 messages (-, S) has been received else 111 
sp 1+" then 
22: 
23: 
24: 
25: 
26: 
27: Decision Round r = 31>: 
28:  S: 
29: 
30: 
31: 
32: 
if there is a value v such that I { q E validatorsp: f1; [q] =  (v,  -) } I > Ivalidaor
votep +- v 
tsp .- 1> 
send (votep, tsp) to all 
Tr. p' 
if received at least  messages with the same value (v, I FLAG I) then 
DECIDE v 
votep .- v such that (v, tsp) E historyp 
ifp E validatorsp then 
send (selectp, validatorsp) 
to all 
Round r = 31> -1: 
U {(vote,,, 1» }  
else 
'* value considered 
for consensus *' 
'* last phase in which votep has been validated 
*' 
1* updates to the variable votep *' 
'* round in which P cons must eventually 
hold *' 
'* round in which P900<1 must eventually 
hold *' 
'* reven the value 
of votep to ensure consistency 
with ts" *' 
'* round in which Pgoo<1 must eventually 
hold *' 
sured whenever 
ecute the function 
Pcons holds,6 since all correct 
processes 
ex­
FLV (fI';,) on the same set of messages. 
in the 
The selection 
round can be suppressed 
the variable 
to initialize 
This requires 
and validatorsp 
p. Note that it is safe to select 
Optimization: 
first phase. 
with initp, 
process 
for the following 
then any value may be selected 
value v is initially 
lectors 
locked, 
= v, and all honest 
with the same set S on each 
at the first round 
If no value is initially 
selectors. 
locked, 
If some 
all honest 
se­
selectors 
select 
then by definition 
v. 
have initp 
by honest 
reason. 
initp 
selectedp 
Round (r = 3¢-1). The role of this round 
process 
by validators 
in the selection 
p to determine 
round is a valid value. 
which value se­
The Validation 
is for every honest 
lected 
Among all honest 
sidered 
to be valid. 
processes, 
at most one value may be con­
The validation 
as follows. 
round is executed 
first sends the value selected 
in the selection 
round 
19). Then, each 
(line 
with the set of validators 
idator 
together 
Each val­
have se­
tries 
21). Based 
process 
validators 
p computes 
the set of validators 
as follows: 
sp is the set S such that p receives 
b + 1 messages 
(line 
this condition 
a valid value v. 
to determine 
of correct 
honest 
val idator 
(-, S), or 0 if no set satisfies 
on this set, each process 
If it observes 
that a majority 
lected 
process 
tsp to the current 
is reverted 
the same value v, then v is a valid value. 
p sets its vote votep to v, and updates 
tsp (line 
Selector(p
22-24). Otherwise, 
the vote 
to the value corresponding to 
, ¢) returns 
p and in all phases 
, ¢), 
the sets 
Optimizations: 
same set of processes 
then validatorsp 
and line 21 can be suppressed. 
Selector(p
, ¢) and validator 
at lines 
spectively 
As a result, 
p do not need to be sent re­