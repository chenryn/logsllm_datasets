title:Ting: Measuring and Exploiting Latencies Between All Tor Nodes
author:Frank Cangialosi and
Dave Levin and
Neil Spring
Ting: Measuring and Exploiting Latencies
Between All Tor Nodes
Frank Cangialosi
University of Maryland University of Maryland
PI:EMAIL
PI:EMAIL
Dave Levin
Neil Spring
University of Maryland
PI:EMAIL
ABSTRACT
Tor is a peer-to-peer overlay routing network that achieves
unlinkable communication between source and destination.
Unlike traditional mix-nets, Tor seeks to balance anonymity
and performance, particularly with respect to providing low-
latency communication. As a result, understanding the la-
tencies between peers in the Tor network could be an ex-
tremely powerful tool in understanding and improving Tor’s
performance and anonymity properties. Unfortunately, there
are no practical techniques for inferring accurate latencies
between two arbitrary hosts on the Internet, and Tor clients
are not instrumented to collect and report on these mea-
surements.
In this paper, we present Ting, a technique for measuring
latencies between arbitrary Tor nodes from a single vantage
point. Through a ground-truth validation, we show that
Ting is accurate, even with few samples, and does not re-
quire modiﬁcations to existing clients. We also apply Ting
to the live Tor network, and show that its measurements are
stable over time. We demonstrate that the all-pairs latency
datasets that Ting permits can be applied in disparate ways,
including faster methods of deanonymizing Tor circuits and
eﬃciently ﬁnding long circuits with low end-to-end latency.
Categories and Subject Descriptors
C.4 [Performance of Systems]: Measurement Techniques;
C.2.2 [Computer-Communication Networks]: Network
Protocols; C.2.0 [Computer-Communication Networks]:
Security and Protection
Keywords
Latency measurement; Tor; Deanonymization
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
IMC’15, October 28–30, 2015, Tokyo, Japan.
Copyright is held by the owner/author(s). Publication rights licensed to ACM.
ACM 978-1-4503-3848-6/15/10 ...$15.00.
DOI: http://dx.doi.org/10.1145/2815675.2815701.
1.
INTRODUCTION
Tor [7] is a popular peer-to-peer service for providing un-
linkable communication and anonymous services.
It oper-
ates by allowing a source node to create a circuit through
multiple Tor relays, each of whom learns only about the node
preceding and the node following it in the circuit. To keep
the nodes on the path from linking the source and destina-
tion, Tor circuit creation mandates at least two relays.
Arguably, the primary feature of Tor that has led to its
widespread success is Tor’s balance between anonymity and
good end-to-end performance, particularly with respect to
network latency. One consequence of this trade-oﬀ is that
Tor defaults to circuits of length three: an entry node, a
middle node, and an exit node. Another consequence of this
design choice is that Tor relays do not arbitrarily introduce
delays or “mixing” like in other anonymity systems [22, 4,
29], and instead forward as quickly as is possible (and fair).
Tor’s performance and anonymity are therefore highly de-
pendent on the round-trip time latencies between the nodes
within the Tor network. For example, there have been many
proposals for improving how Tor selects its circuits [2, 28, 20,
8] that beneﬁt from understanding the inter-Tor-node laten-
cies, and as we demonstrate in Section 5.1, latency knowl-
edge can speed up existing deanonymization techniques [16,
9, 12, 10].
However, to date, there are no techniques available within
Tor or through other Internet measurement to accurately
measure the round-trip times between two arbitrary Tor
nodes. Researchers and practitioners have thus had to rely
on approximations such as geographic distances, which sim-
ply cannot model network phenomena such as triangle in-
equality violations (TIVs) in Internet routing [15].
In this paper, we present Ting, a technique for accurately
measuring the round-trip times between any arbitrary pair
of Tor nodes. Ting operates strictly at Tor’s “data plane”:
it carefully constructs circuits and directly measures laten-
cies to and through Tor relays. Critically, Ting works with-
out requiring any modiﬁcations to the Tor protocol, to Tor
clients, or special permission from Tor users. Through a
ground-truth validation on PlanetLab [21], we show that
Ting is extremely accurate, imposes little communication or
computational overhead on the Tor network, and can be run
from a single host.
We also show three applications of such an unprecedent-
edly accurate and thorough latency dataset. Among these,
we show for the ﬁrst time the presence of TIVs in the Tor
network, and the extent to which Ting’s measurements can
be used to improve end-to-end paths.
289Ting ﬁlls a gap that has formed in network measurement
tools: the ability to directly measure the latencies between
two hosts, neither of which are under the control of the ex-
perimenter. The King technique [11], introduced in 2002,
indirectly measured latency between two arbitrary hosts by
cleverly constructing queries to publicly available recursive
DNS servers. Unfortunately, since then, most publicly avail-
able DNS servers have disallowed recursive queries due to
security concerns, rendering King narrowly applicable. Con-
versely, we show that Ting can be used to infer with direct
measurements the end-to-end latencies among any pair of
active Tor nodes.
In other words, as Tor’s user base in-
creases, so too does Ting’s applicability. We show that Tor’s
current user base span a diverse set of networks (including,
in particular, residential hosts) from among ∼6000 unique
/24 networks, making Ting a viable tool for wide-scale net-
work measurement.1
This paper makes the following contributions:
• We present the design, implementation, and validation
of Ting, a technique for measuring round-trip times
between any arbitrary pair of Tor relays. Ting does not
require modiﬁcations to or special participation from
Tor clients. To the best of our knowledge, Ting is the
only practical tool today for measuring pairwise RTTs
in the Tor network.
• We thoroughly validate Ting’s accuracy (80% of the
time, its estimates are within 10% of ground-truth),
stability (over a week, Ting’s estimates vary by less
than 5ms), and trade-oﬀs between speed and accuracy.
• We present algorithms that use all-pairs latency mea-
surements to drastically improve the time (a median
1.5× speedup) to deanonymize Tor circuits.
• Finally, we show that Ting’s measurements can be used
to improve path selection: We ﬁnd an abundance of so-
called triangle inequality violations in inter-Tor-node
latencies, and show that circuits longer than three hops
can be used to achieve lower end-to-end latencies.
The rest of this paper is structured as follows.
In Sec-
tion 2, we present related work on ascertaining and apply-
ing round-trip time estimations among arbitrary hosts. We
present the design of Ting in Section 3, and an extensive val-
idation of Ting in Section 4. In Section 5, we show several
ways to apply Ting’s measurements, including circuit dea-
nonymization and improved path selection. We conclude in
Section 6.
The Ting code and the latency datasets it generated are
publicly available at
https://www.cs.umd.edu/projects/ting
2. BACKGROUND AND RELATED WORK
Our motivation derives from two sources: the desire to di-
rectly perform latency measurements between two hosts not
under our control, and the desire to improve the performance
or anonymity of Tor circuits by performance-informed path
selection. With measured latencies between Tor nodes, we
can determine whether the Internet paths follow geographic
1Ting’s applicability is limited to where Tor can be deployed,
and unfortunately, some countries censor Tor traﬃc to or
from their residents [23].
shortest paths, whether Tor performance is intentionally de-
graded, and whether there are opportunities for performance
optimization. We can evaluate how often Tor’s default ran-
dom relay selection produces high latency paths and whether
diﬀerent path selection approaches might be more diﬃcult to
deanonymize. By taking advantage of Tor as a system that
is representative of volunteer-administered overlay, we can
also learn about the networks that host relay nodes (§5.3).
Prior work has observed that latency information would
be beneﬁcial, but have avoided attempting to incorporate it
explicitly into the Tor protocol [20, 28]. Our approach is to
use, rather than redesign, the protocol in order to measure
inter-relay latency information. This permits immediate,
incremental deployment of Ting-capable clients, since they
can use existing Tor relays.
There are few workable alternatives for estimating the la-
tency between Tor nodes. To make broad, immediate de-
ployment possible, we cannot modify the Tor protocol, e.g.,
to ask relays to ping one another. There are large scale net-
work measurement services that use hardware at clients to
ping often: RIPE Atlas pings root DNS servers from spe-
cialized “probe” devices [24]. Such special purpose hard-
ware [31, 25] could be applied to measure and construct a
database of inter-node latencies, but they require users to
deploy hardware in their networks. Conversely, Ting oper-
ates completely within the Tor peer-to-peer network, and
does not require any additional user deployment. There has
also been considerable work towards estimating inter-node
latencies through the use of relatively few landmarks de-
ployed throughout the network [6, 18, 33]. Such estimation
systems oﬀer considerably greater coverage than Ting—they
can be applied to virtually any pair of nodes—but suﬀer
from the fact that Internet latencies are inherently diﬃcult
to estimate accurately, e.g., due to triangle inequality vio-
lations [26, 15] (§5.2.1). Ting, on the other hand, achieves
greater accuracy by performing direct measurements.
An approach that inspires us is that of Gummadi et al. [11],
who aimed to estimate the latency between clients and servers
by clever use of recursive DNS queries. Their “King” tool
sent a recursive DNS request to a name server associated
with the ﬁrst host that could only be answered by a name
server associated with the second. Although King required
only that one of the two name servers support recursive
queries, in recent years, DNS servers have stopped respond-
ing to recursive queries for concern over ampliﬁcation. This
means that using King directly is no longer practical.
Instead, in this paper, we attempt to apply the idea of
King to Tor.
3. TING TECHNIQUE
In this section, we describe the design of Ting, our tech-
nique for determining the round-trip time (RTT) between
two arbitrary Tor relays. We show that Ting is able to obtain
theoretically accurate RTT measurements without requiring
any modiﬁcations to Tor, without any explicit participation
from other users, and while introducing only tiny amounts
of work for other Tor nodes. Ting is able to do so by leverag-
ing the fact that Tor allows users to select their own (almost
arbitrary) end-to-end circuits. In Section 4, we show that
these theoretical properties are upheld in practice.
2903.1 Building Blocks
Ting has two major components. The ﬁrst is the abil-
ity to construct nearly arbitrary end-to-end circuits. For-
tunately, this can be done without requiring modiﬁcations
to any Tor clients. In particular, we make use of Stem [30],
a Tor controller that provides a clean programmatic inter-
face for both constructing Tor circuits and attaching TCP
connections to them. Even with this control, we are con-
strained to several natural policies that our local, unmodi-
ﬁed Tor client enforces: (1) one-hop circuits are disallowed2,
and (2) a node cannot appear on a given circuit more than
once. Both of these are logical policies for ensuring a user’s
anonymity, but we emphasize that we need not worry about
anonymity with Ting—it performs its measurements explic-
itly, and does not, for instance, piggyback measurements
on real user data. Nonetheless, we seek to be able to work
within these constraints, so that we can operate without hav-
ing to modify future versions of Tor and without requiring
participation from other users.
Ting’s second component is an end-to-end echo client and
server to allow us to collect RTT measurements through Tor
circuits. While similar in spirit to ping—which uses ICMP
messages to estimate RTTs—the key diﬀerence is that our
application operates over TCP, and can thus be used over
Tor. As we will see, we do not also require ping itself: all
of our measurements occur strictly over Tor circuits.
Both of these components are easily attainable and avail-
able online, but we make our code and data public for the
community.
3.2 Strawman Approach
Consider the task of determining R(x, y): the RTT be-
tween two Tor nodes x and y. Suppose further that we have
our echo client running at a source node s and echo server
at destination node d, both under our control.
An initially tempting approach is to use a method similar
in spirit to the technique used by King [11], as shown in
Figure 1:
1. Create a circuit C through nodes x and y, attach a
TCP connection from s to d to this circuit, and mea-
sure the end-to-end RTT RC (s, d) = R(s, x)+R(x, y)+
R(y, d).
2. Ping x from s to obtain an estimate of the RTT be-
tween s and x: (cid:101)R(s, x), and similarly obtain an esti-
mate of the RTT between y and d: (cid:101)R(y, d).
R(x, y) ?= RC (s, d) − (cid:101)R(s, x) − (cid:101)R(y, d).