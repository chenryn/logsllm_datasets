**Migrated issue, originally created by Anonymous**
In my project I need to catch and process an integrity exceptions, because
user want to see a understandable error message instead of framework's
exception (or just http 500 error). So the easiest way I found was something
like this (let's say i want to process only duplicate errors. `obj` is object
to save and `table` is table, mapped to obj's class):
    errors = {}
    try:
        Session.flush([obj](obj))
    except sqlalchemy.exceptions.IntegrityError, e:
        err = str(e.orig)
        m = re.match(r'^column (\w+) is not unique$', err, re.I)
        if not m: raise e
        dupcol = m.groups(0)[0](0)
        del m
        if not dupcol in table.c: raise e
        dupcol = table.c[dupcol](dupcol)
        errors[dupcol](dupcol) = IntegrityError(dupcol.unique)
It is not clear and simple way, is it?
I am sorry for my English.