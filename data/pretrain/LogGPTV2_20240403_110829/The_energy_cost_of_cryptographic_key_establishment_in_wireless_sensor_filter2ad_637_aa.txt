title:The energy cost of cryptographic key establishment in wireless sensor
networks
author:Johann Großsch&quot;adl and
Alexander Szekely and
Stefan Tillich
The Energy Cost of Cryptographic Key Establishment in
Wireless Sensor Networks (Extended Abstract)∗
Johann Großsch¨adl
PI:EMAIL
Alexander Szekely
PI:EMAIL
Graz University of Technology
Stefan Tillich
PI:EMAIL
Institute for Applied Information Processing and Communications
Inffeldgasse 16a, A–8010 Graz, Austria
ABSTRACT
Wireless sensor nodes generally face serious limitations in
terms of computational power, energy supply, and network
bandwidth. Therefore, the implementation of eﬀective and
secure techniques for setting up a shared secret key between
sensor nodes is a challenging task. In this paper we analyze
and compare the energy cost of two diﬀerent protocols for
authenticated key establishment. The ﬁrst protocol employs
a lightweight variant of the Kerberos key transport mecha-
nism with 128-bit AES encryption. The second protocol is
based on ECMQV, an authenticated version of the elliptic
curve Diﬃe-Hellman key exchange, and uses a 256-bit prime
ﬁeld GF(p) as underlying algebraic structure. We evaluate
the energy cost of both protocols on a Rockwell WINS node
equipped with a 133 MHz StrongARM processor and a 100
kbit/s radio module. The evaluation considers both the pro-
cessor’s energy consumption for calculating cryptographic
primitives and the energy cost of radio communication for
diﬀerent transmit power levels. Our simulation results show
that the ECMQV key exchange consumes up to twice as
much energy as Kerberos-like key transport.
Keywords: Wireless networking, security protocols, key
establishment, cryptography, energy evaluation.
1.
INTRODUCTION
Wireless sensor networks often operate in hostile environ-
ments or collect sensitive data (e.g. in health care), which
calls for eﬀective measures to protect them against security
threats like unauthorized access, manipulation of data, and
denial of service [1]. However, wireless sensor networks are
an extremely demanding environment for security architects
due to the resource-constrained nature of battery-operated
∗The research described in this paper has been supported
by the Austrian Science Fund under grant P16952-NO4 and
by the European Commission under grant FP6-IST-033563
(project SMEPP) and IST-2002-507932 (ECRYPT).
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ASIACCS’07, March 20–22, 2007, Singapore.
Copyright 2007 ACM 1-59593-574-6/07/0003 ...$5.00.
sensor nodes (limited energy supply, modest computational
power, small memory/storage, and low-bandwidth network
connectivity). In the recent past, a number of security ar-
chitectures and protocols for wireless sensor networks have
been proposed, taking the special characteristics of sensor
nodes into account. Authentication and key establishment
are the two most essential security services to maintain the
proper operation of a sensor network.
A simple approach for key establishment is to load one or
more keys onto each sensor node prior to deployment. Most
practical security protocols based on pre-deployed keying
use either a single network-wide key shared by all sensor
nodes or a set of keys randomly chosen from a key pool so
that two nodes will share (at least) one key with a certain
probability [3]. These protocols are easy to implement and
entail only little overhead since no complex computations
have to be performed. However, most security architectures
based on pre-deployed keys suﬀer from problems caused by
poor scalability and vulnerability to node capture. A second
family of key establishment protocols uses a trusted third
party (e.g. the base station) to set up a secret key between
two sensor nodes. Each node shares a long-term secret key
with the base station, similar to the well-known Kerberos
protocol [7]. Examples of “Kerberos-like” security protocols
for sensor networks include the node-to-node key establish-
ment schemes based on SNEP [9] and PIKE [2]. All these
protocols have in common that they are built on symmetric
cryptography and entail high communication cost.
Key establishment in sensor networks can also be realized
with protocols which use public-key cryptography to set up
a shared secret key between two nodes. The most important
key exchange protocol was proposed by Diﬃe and Hellman
in 1976 and is usually implemented using the multiplicative
group of a ﬁnite ﬁeld of prime order. Alternatively, it is also
possible to embed the Diﬃe-Hellman key exchange into an
additive group like the group of points on an elliptic curve
deﬁned over a ﬁnite ﬁeld [5]. Typical group sizes range from
1024 to 2048 bits for Z∗
p and from 160 to 256 bits when an
elliptic curve group is used. These large group orders make
Diﬃe-Hellman key exchange highly computation-intensive
and, hence, energy consuming. Carman et al. reported in
[1] that the energy cost of a 1024-bit modular exponenti-
ation—such as needed for Diﬃe-Hellman key exchange—is
about 14.6 mJ on a Rockwell WINS node equipped with a
133 MHz StrongARM microprocessor. For comparison, the
encryption of a 128-bit data block using a symmetric cipher
like the AES requires only 2.17 µJ. Hodjat and Verbauwhede
[6] analyzed and compared the energy cost of elliptic curve
380
Diﬃe-Hellman (ECDH) key exchange and Kerberos-like key
establishment on a Rockwell WINS node. They considered
in their study both the energy required for calculating cryp-
tographic primitives and the energy cost of communication
between the sensor nodes. It was concluded in [6] that, for
comparable security levels, ECDH key exchange consumes
67 times more energy than Kerberos key transport.
The heavy energy requirements of public-key algorithms
reported in [1, 6] have raised serious concerns about their
feasibility in wireless sensor networks. However, it must be
considered that the experiments documented in [1] and [6]
were conducted in 2000 and 2002, respectively, and since
then, enormous progress has been made in the eﬃcient im-
plementation of public-key cryptography, especially elliptic
curve cryptography [5]. This progress makes it necessary to
completely re-evaluate the energy requirements of elliptic
curve cryptosystems. In the present paper we demonstrate
that the energy cost of elliptic curve cryptography—when
implemented with state-of-the-art algorithms—is far lower
than reported in previous work. Our experimental results
clearly show that key exchange protocols using elliptic curve
systems are feasible for wireless sensor networks.
2. KERBEROS KEY TRANSPORT
Kerberos is a network authentication system that uses a
trusted third party to authenticate two entities (i.e. to prove
their identity to one another) by issuing a shared session
key between them [7]. The session key is actually generated
by the trusted third party (in the following abbreviated by
T ) and then securely delivered to the two entities wishing to
establish a shared secret. Each entity on the network shares
a unique long-term secret key with T , which enables the
entities to verify that messages from T are authentic. Sim-
ilarly, knowledge of the long-term key also serves to prove
an entity’s identity to T . In a sensor network, the unique
long-term key that each node shares with T is generally
pre-deployed [1]. The trusted third party can either be a
single centralized entity like the base station or a cluster
head [1], or distributed among trusted sensor nodes [2].
Figure 1: Simpliﬁed Kerberos protocol [4].
Figure 1 illustrates the message transfers between entities
A, B, and T , assuming that A wishes to establish a session
key with entity B. An expression of the form {X}k means
that message X is encrypted using the key k. Kerberos, as
speciﬁed in [7], is a full-featured protocol whose messages
381
can have a size of several kilobytes, which poses a problem
for sensor networks since radio communication drains the
nodes’ battery. Therefore, we conduct our energy evaluation
with a “lightweight” version of the Kerberos protocol with
short messages as summarized below (see [4] for details).
In the ﬁrst message (AS REQ) entity A asks the trusted
third party T for a session key that enables A to securely
communicate with B. Thereupon, T generates a session key
kAB and assembles a reply message (AS REP) consisting
of a ticket and other data as illustrated in Figure 1. The
ticket contains the freshly generated session key kAB and is
encrypted in the long-term key kBT shared between B and
T . Besides the ticket, the AS REP message also includes
the session key kAB in a form readable by A, i.e. encrypted
in the long-term key kAT shared between A and T . Having
received AS REP, entity A decrypts the non-ticket portion
of the message to obtain the session key kAB. Next, A pro-
duces an authenticator, encrypts it using the key kAB, and
sends it along with the ticket to entity B (message AP REQ
in Figure 1). Entity B ﬁrst decrypts the ticket using its