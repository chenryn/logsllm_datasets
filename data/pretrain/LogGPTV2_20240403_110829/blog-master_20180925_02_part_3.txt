postgres=# SELECT * FROM bt_page_items('idx_a_3',1);  
 itemoffset |  ctid  | itemlen | nulls | vars |          data             
------------+--------+---------+-------+------+-------------------------  
          1 | (0,6)  |      16 | f     | f    | 09 00 00 00 00 00 00 00  
          2 | (0,5)  |      16 | f     | f    | 12 00 00 00 00 00 00 00  
          3 | (0,8)  |      16 | f     | f    | 13 00 00 00 00 00 00 00  
          4 | (0,1)  |      16 | f     | f    | 14 00 00 00 00 00 00 00  
          5 | (0,15) |      16 | f     | f    | 15 00 00 00 00 00 00 00  
          6 | (0,4)  |      16 | f     | f    | 22 00 00 00 00 00 00 00  
          7 | (0,10) |      16 | f     | f    | 2b 00 00 00 00 00 00 00  
          8 | (0,3)  |      16 | f     | f    | 30 00 00 00 00 00 00 00  
          9 | (0,9)  |      16 | f     | f    | 33 00 00 00 00 00 00 00  
         10 | (0,7)  |      16 | f     | f    | 46 00 00 00 00 00 00 00  
         11 | (0,2)  |      16 | f     | f    | 4b 00 00 00 00 00 00 00  
(11 rows)  
```  
7、垃圾回收，首先回收索引垃圾版本，最后回收表的垃圾版本。  
```  
postgres=# vacuum verbose a;  
INFO:  vacuuming "public.a"  
INFO:  scanned index "idx_a_1" to remove 1 row versions  
DETAIL:  CPU: user: 0.00 s, system: 0.00 s, elapsed: 0.00 s  
INFO:  scanned index "idx_a_2" to remove 1 row versions  
DETAIL:  CPU: user: 0.00 s, system: 0.00 s, elapsed: 0.00 s  
INFO:  scanned index "idx_a_3" to remove 1 row versions  
DETAIL:  CPU: user: 0.00 s, system: 0.00 s, elapsed: 0.00 s  
INFO:  "a": removed 1 row versions in 1 pages  
DETAIL:  CPU: user: 0.00 s, system: 0.00 s, elapsed: 0.00 s  
INFO:  index "idx_a_1" now contains 10 row versions in 2 pages  
DETAIL:  1 index row versions were removed.  
0 index pages have been deleted, 0 are currently reusable.  
CPU: user: 0.00 s, system: 0.00 s, elapsed: 0.00 s.  
INFO:  index "idx_a_2" now contains 10 row versions in 2 pages  
DETAIL:  1 index row versions were removed.  
0 index pages have been deleted, 0 are currently reusable.  
CPU: user: 0.00 s, system: 0.00 s, elapsed: 0.00 s.  
INFO:  index "idx_a_3" now contains 10 row versions in 2 pages  
DETAIL:  1 index row versions were removed.  
0 index pages have been deleted, 0 are currently reusable.  
CPU: user: 0.00 s, system: 0.00 s, elapsed: 0.00 s.  
INFO:  "a": found 5 removable, 10 nonremovable row versions in 1 out of 1 pages  
DETAIL:  0 dead row versions cannot be removed yet, oldest xmin: 716311280  
There were 4 unused item pointers.  
Skipped 0 pages due to buffer pins, 0 frozen pages.  
0 pages are entirely empty.  
CPU: user: 0.00 s, system: 0.00 s, elapsed: 0.00 s.  
VACUUM  
```  
8、垃圾回收后，索引的垃圾版本被清除。   
```  
postgres=# SELECT * FROM bt_page_items('idx_a_1',1);  
 itemoffset |  ctid  | itemlen | nulls | vars |          data             
------------+--------+---------+-------+------+-------------------------  
          1 | (0,15) |      16 | f     | f    | 01 00 00 00 00 00 00 00  
          2 | (0,2)  |      16 | f     | f    | 02 00 00 00 00 00 00 00  
          3 | (0,3)  |      16 | f     | f    | 03 00 00 00 00 00 00 00  
          4 | (0,4)  |      16 | f     | f    | 04 00 00 00 00 00 00 00  
          5 | (0,5)  |      16 | f     | f    | 05 00 00 00 00 00 00 00  
          6 | (0,6)  |      16 | f     | f    | 06 00 00 00 00 00 00 00  
          7 | (0,7)  |      16 | f     | f    | 07 00 00 00 00 00 00 00  
          8 | (0,8)  |      16 | f     | f    | 08 00 00 00 00 00 00 00  
          9 | (0,9)  |      16 | f     | f    | 09 00 00 00 00 00 00 00  
         10 | (0,10) |      16 | f     | f    | 0a 00 00 00 00 00 00 00  
(10 rows)  
postgres=# SELECT * FROM bt_page_items('idx_a_2',1);  
 itemoffset |  ctid  | itemlen | nulls | vars |          data             
------------+--------+---------+-------+------+-------------------------  
          1 | (0,5)  |      16 | f     | f    | 05 00 00 00 00 00 00 00  
          2 | (0,7)  |      16 | f     | f    | 06 00 00 00 00 00 00 00  
          3 | (0,15) |      16 | f     | f    | 0d 00 00 00 00 00 00 00  
          4 | (0,9)  |      16 | f     | f    | 0e 00 00 00 00 00 00 00  
          5 | (0,4)  |      16 | f     | f    | 20 00 00 00 00 00 00 00  
          6 | (0,3)  |      16 | f     | f    | 24 00 00 00 00 00 00 00  
          7 | (0,6)  |      16 | f     | f    | 28 00 00 00 00 00 00 00  
          8 | (0,10) |      16 | f     | f    | 2a 00 00 00 00 00 00 00  
          9 | (0,2)  |      16 | f     | f    | 3f 00 00 00 00 00 00 00  
         10 | (0,8)  |      16 | f     | f    | 55 00 00 00 00 00 00 00  
(10 rows)  
postgres=# SELECT * FROM bt_page_items('idx_a_3',1);  
 itemoffset |  ctid  | itemlen | nulls | vars |          data             
------------+--------+---------+-------+------+-------------------------  
          1 | (0,6)  |      16 | f     | f    | 09 00 00 00 00 00 00 00  
          2 | (0,5)  |      16 | f     | f    | 12 00 00 00 00 00 00 00  
          3 | (0,8)  |      16 | f     | f    | 13 00 00 00 00 00 00 00  
          4 | (0,15) |      16 | f     | f    | 15 00 00 00 00 00 00 00  
          5 | (0,4)  |      16 | f     | f    | 22 00 00 00 00 00 00 00  
          6 | (0,10) |      16 | f     | f    | 2b 00 00 00 00 00 00 00  
          7 | (0,3)  |      16 | f     | f    | 30 00 00 00 00 00 00 00  
          8 | (0,9)  |      16 | f     | f    | 33 00 00 00 00 00 00 00  
          9 | (0,7)  |      16 | f     | f    | 46 00 00 00 00 00 00 00  
         10 | (0,2)  |      16 | f     | f    | 4b 00 00 00 00 00 00 00  
(10 rows)  
```  
## 性能测试  
1、创建测试表32个索引。  
```  
do language plpgsql $$  
declare  
  sql text;  
begin  
  sql := 'create table a (id int primary key,';  
  for i in 1..32 loop  
    sql := sql||'c'||i||' int default random()*1000,';  
  end loop;  
  sql := rtrim(sql,',');  
  sql := sql||') with (fillfactor=80)';   
  execute sql;  
  for i in 2..32 loop  
    execute 'create index idx_a_c'||i||' on a (c'||i||')';  
  end loop;  
end;  
$$;  
```  
2、写入1000万记录  
```  
insert into a (id) select generate_series(1,10000000);  
```  
3、non-hot更新  
```  
vi test_non_hot.sql  
\set id random(1,10000000)  
update a set c2=c2+random()*100-100 where id=:id;  
```  
4、HOT更新  
```  
vi test_hot1.sql  
\set id random(1,10000000)  
update a set c1=c1+random()*100-100 where id=:id;  
vi test_hot2.sql  
\set id random(1,10000000)  
update a set c2=c2 where id=:id;  
```  
5、性能对比  
5\.1、HOT  
```  
pgbench -M prepared -n -r -P 1 -f ./test_hot1.sql -c 28 -j 28 -T 120  
transaction type: ./test_hot1.sql  
scaling factor: 1  
query mode: prepared  
number of clients: 28  
number of threads: 28  
duration: 120 s  
number of transactions actually processed: 9139010  
latency average = 0.368 ms  
latency stddev = 0.187 ms  
tps = 76157.798606 (including connections establishing)  
tps = 76174.469712 (excluding connections establishing)  
script statistics:  
 - statement latencies in milliseconds:  
         0.001  \set id random(1,10000000)  
         0.366  update a set c1=c1+random()*100-100 where id=:id;  
Total DISK READ :       0.00 B/s | Total DISK WRITE :      13.14 M/s  
Actual DISK READ:       0.00 B/s | Actual DISK WRITE:      13.82 M/s  
  TID  PRIO  USER     DISK READ  DISK WRITE  SWAPIN     IO>    COMMAND                                                                                                                                                                         
45828 be/4 postgres    0.00 B/s   23.39 K/s  0.00 %  1.06 % postgres: postgres postgres 127.0.0.1(41326) UPDATE  
45810 be/4 postgres    0.00 B/s   23.39 K/s  0.00 %  0.99 % postgres: postgres postgres 127.0.0.1(41290) UPDATE  
45821 be/4 postgres    0.00 B/s   23.39 K/s  0.00 %  0.98 % postgres: postgres postgres 127.0.0.1(41312) idle    
45820 be/4 postgres    0.00 B/s    7.80 K/s  0.00 %  0.96 % postgres: postgres postgres 127.0.0.1(41310) UPDATE  
45822 be/4 postgres    0.00 B/s    0.00 B/s  0.00 %  0.96 % postgres: postgres postgres 127.0.0.1(41314) UPDATE  
45819 be/4 postgres    0.00 B/s    7.80 K/s  0.00 %  0.94 % postgres: postgres postgres 127.0.0.1(41308) UPDATE  
45806 be/4 postgres    0.00 B/s    7.80 K/s  0.00 %  0.92 % postgres: postgres postgres 127.0.0.1(41282) idle    
45824 be/4 postgres    0.00 B/s    7.80 K/s  0.00 %  0.90 % postgres: postgres postgres 127.0.0.1(41318) UPDATE  
45827 be/4 postgres    0.00 B/s   54.58 K/s  0.00 %  0.89 % postgres: postgres postgres 127.0.0.1(41324) UPDATE  
45814 be/4 postgres    0.00 B/s    0.00 B/s  0.00 %  0.89 % postgres: postgres postgres 127.0.0.1(41298) UPDATE  
45818 be/4 postgres    0.00 B/s    7.80 K/s  0.00 %  0.88 % postgres: postgres postgres 127.0.0.1(41306) idle    
45823 be/4 postgres    0.00 B/s   15.59 K/s  0.00 %  0.87 % postgres: postgres postgres 127.0.0.1(41316) UPDATE  
45805 be/4 postgres    0.00 B/s    0.00 B/s  0.00 %  0.87 % postgres: postgres postgres 127.0.0.1(41280) UPDATE  
45826 be/4 postgres    0.00 B/s    7.80 K/s  0.00 %  0.86 % postgres: postgres postgres 127.0.0.1(41322) UPDATE  
45809 be/4 postgres    0.00 B/s    0.00 B/s  0.00 %  0.86 % postgres: postgres postgres 127.0.0.1(41288) UPDATE  
45808 be/4 postgres    0.00 B/s   23.39 K/s  0.00 %  0.85 % postgres: postgres postgres 127.0.0.1(41286) UPDATE  