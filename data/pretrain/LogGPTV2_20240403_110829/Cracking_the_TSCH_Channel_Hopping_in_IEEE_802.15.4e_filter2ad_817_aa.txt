title:Cracking the TSCH Channel Hopping in IEEE 802.15.4e
author:Xia Cheng and
Mo Sha
Cracking the Channel Hopping Sequences in IEEE
802.15.4e-Based Industrial TSCH Networks
Xia Cheng
Department of Computer Science
State University of New York at
Binghamton
PI:EMAIL
Junyang Shi
Department of Computer Science
State University of New York at
Binghamton
PI:EMAIL
Mo Sha
Department of Computer Science
State University of New York at
Binghamton
PI:EMAIL
ABSTRACT
Industrial networks typically connect hundreds or thousands of
sensors and actuators in industrial facilities, such as manufacturing
plants, steel mills, and oil refineries. Although the typical industrial
applications operate at low data rates, they pose unique challenges
because of their critical demands for reliable and real-time com-
munication in harsh industrial environments. IEEE 802.15.4 based
Wireless Sensor-Actuator Networks (WSANs) technology is ap-
pealing for use to construct industrial networks because it does
not require wired infrastructure and can be manufactured inexpen-
sively. Battery-powered wireless modules easily and inexpensively
retrofit existing sensors and actuators in industrial facilities with-
out running cables for communication and power. To address the
stringent real-time and reliability requirements, WSANs made a set
of unique design choices such as employing the Time-Synchronized
Channel Hopping (TSCH) technology that distinguish themselves
from traditional wireless sensor networks that require only best
effort services. The function-based channel hopping used in TSCH
simplifies the network operations at the cost of security. Our study
shows that an attacker can reverse engineer the channel hopping
sequences by silently observing the channel activities and put the
network in danger of selective jamming attacks. To our knowledge,
this paper represents the first systematic study that investigates the
security vulnerability of TSCH channel hopping in IEEE 802.15.4e
under realistic traffic. In this paper, we demonstrate the process of
cracking the TSCH channel sequences, present two case studies
using publicly accessible TSCH implementations (developed for
Orchestra and WirelessHART), and provide a set of insights.
CCS CONCEPTS
• Security and privacy → Mobile and wireless security; • Net-
works → Link-layer protocols;
KEYWORDS
Time-Synchronized Channel Hopping, Selective Jamming Attack,
IEEE 802.15.4e, Industrial Wireless Sensor-Actuator Networks
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
IoTDI ’19, April 15–18, 2019, Montreal, QC, Canada
© 2019 Association for Computing Machinery.
ACM ISBN 978-1-4503-6283-2/19/04...$15.00
https://doi.org/10.1145/3302505.3310075
ACM Reference Format:
Xia Cheng, Junyang Shi, and Mo Sha. 2019. Cracking the Channel Hopping
Sequences in IEEE 802.15.4e-Based Industrial TSCH Networks. In IoTDI ’19:
Internet of Things Design and Implementation, April 15–18, 2019, Montreal,
QC, Canada. ACM, New York, NY, USA, 12 pages. https://doi.org/10.1145/
3302505.3310075
1 INTRODUCTION
The Internet of Things (IoT) refers to a broad vision whereby things,
such as everyday objects, places, and environments, are intercon-
nected with one another via the Internet [31]. Until recently, most
of the IoT infrastructures and applications developed by businesses
have focused on smart homes and wearables. However, it is the
“production and manufacturing” IoT, which underlies the Fourth
Industrial Revolution (or Industry 4.0), that promises to be one of
the largest potential economic effects of IoT [43] — up to $47 trillion
in added value globally by 2025, according to McKinsey’s report on
future disruptive technologies [24].
Industrial networks, the underlying support of industrial IoT,
typically connect hundreds or thousands of sensors and actuators
in industrial facilities, such as manufacturing plants, steel mills, oil
refineries, and infrastructures implementing complex monitoring
and control processes. Although the typical industrial applications
operate at low data rates, they pose unique challenges because of
their critical demands for reliable and real-time communication
in harsh industrial environments. Failure to achieve such perfor-
mance can lead to production inefficiency, safety threats, and fi-
nancial loss. These requirements have been traditionally met by
specifically chosen wired solutions, e.g., the Highway Addressable
Remote Transducer (HART) communication protocol [13], where
cables connect sensors and forward sensor readings to a control
room where a controller collects sensor readings and sends com-
mands to actuators. However, wired networks are often costly to
deploy and maintain in industrial environments and difficult to
reconfigure to accommodate new production requirements. IEEE
802.15.4-based Wireless Sensor-Actuator Networks (WSANs) tech-
nology is appealing for use in industrial applications because it does
not require wired infrastructure and can be manufactured inexpen-
sively. Battery-powered wireless modules easily and inexpensively
retrofit existing sensors and actuators in industrial facilities without
running cables for communication and power.
There have been two major technology breakthroughs in in-
dustrial WSANs. An initial breakthrough came in 1997 from the
UC Berkeley’s Smart Dust project [28], which demonstrated tiny,
low-power motes could sense, compute, and communicate through
wireless mesh networks. A second breakthrough came in 2006
with the time-synchronized mesh protocol (TSMP) [29] with a core
IoTDI ’19, April 15–18, 2019, Montreal, QC, Canada
Xia Cheng, Junyang Shi, and Mo Sha
technology of Time-Synchronized Channel Hopping (TSCH): All
devices in a network are time synchronized and hop channels to
exploit frequency diversity. The TSCH technology was adopted by
the leading industrial WSAN standards (WirelessHART [49] and
ISA100 [15]) and the one being standardized by IETF (6TiSCH [14]).
A decade of real-world deployments of WirelessHART and ISA100
have demonstrated the feasibility of using TSCH-based WSANs to
achieve reliable low-power wireless communication in industrial
facilities. Therefore, TSCH was amended into the IEEE 802.15.4e
standard in 2012 [1] as a mode to support industrial or embedded
applications with critical performance requirements.
To address the stringent real-time and reliability requirements,
TSCH made a set of unique design choices that distinguish itself
from traditional Medium Access Control (MAC) protocols designed
for the Wireless Sensor Networks (WSNs) that require only best
effort services [22]. Specifically, TSCH divides time into slices of
fixed length that are grouped in a slotframe. Nodes are synchro-
nized and share the notion of a slotframe that repeats over time.
Frequency diversity is used to mitigate effects of multipath fading
and to improve the robustness and the network capacity. Channel
hopping is achieved by sending successive packets on different
frequencies. All devices in the network compute the channel hop-
ping sequences by following a function. TSCH’s function-based
channel hopping simplifies the network operations at the cost of
security. Our study shows that an attacker can reverse engineer
the channel hopping sequences by silently observing the channel
activities and put the network in danger of selective jamming at-
tacks, where the attacker jams only the transmission of interest on
its specific communication channel in its specific time slot, which
makes the attacks energy efficient and hardly detectable. The selec-
tive jamming attacks are more severe threats in WSANs compared
to the simple jamming attacks, because jamming a channel or the
whole spectrum continuously can be easily detected and located
by a wireless intrusion prevention system (WIPS) [34, 50, 51, 54].
Many countermeasures have been developed in the WSN litera-
ture to minimize the damage, such as adjusting routing [7, 16, 52].
However, the existing approaches may fail to detect more stealthy
attacks such as selective jamming attacks, because the transmission
failures caused by the attacks only happen occasionally and are
buried in the normal fluctuations of low-power links.
To our knowledge, this paper represents the first systematic
study that investigates the security vulnerability of TSCH channel
hopping in IEEE 802.15.4e under realistic settings. The contributions
of this work are three-fold:
• We present the security vulnerability of TSCH channel hop-
ping in IEEE 802.15.4e by demonstrating the process of crack-
ing the channel hopping sequences;
• We perform two case studies using publicly accessible TSCH
• We provide a set of insights distilled from our analysis and
case studies to secure the network by increasing the cracking
difficulty.
implementations1;
1To avoid bias in our attack design and experiments, we use the implementations
provided by the third party researchers in our case studies and have different authors
to design the attacking program and configure the networks to collect data traces.
The remainder of the paper is organized as follows. Section 2 intro-
duces the background of TSCH channel hopping. Section 3 presents
the security vulnerability by demonstrating the cracking process.
Section 4 and Section 5 describe two case studies. Section 6 presents
our lessons learned. Section 7 reviews related work. Section 8 con-
cludes the paper.
2 BACKGROUND ON TSCH CHANNEL
HOPPING
To provide time-deterministic packet deliveries and combat narrow-
band interference and multi-path fading, TSCH combines time-
slotted MAC access, multi-channel communication, and channel
hopping. TSCH divides time into slices of fixed length that are
grouped in a slotframe. Each time slot is long enough to deliver a
data packet and an acknowledgement between a pair of devices.
Nodes are synchronized and share the notion of a slotframe that
repeats over time. Channel hopping is achieved by sending suc-
cessive packets on different frequencies. TSCH uses the channel
hopping sequences, which are fixed and known by all devices in
the network, instead of using the pseudo-random ones to minimize
the channel synchronization overhead. Initially, 16 different chan-
nels are available for communication. Each channel is identified
by ChannelO f f set. However, some of these frequencies could be
blacklisted due to low-quality communication and, hence, the total
number of channels Nchannel used for channel hopping may be
fewer than 16. In TSCH, a link is defined as the pairwise assignment
of directed communication between two nodes in a given time slot
on a given channel offset. Hence, a link between two communicat-
ing nodes can be represented by a pair of values that specifies the
time slot in the slotframe and the channel offset used by the nodes
in that time slot. Let [n, ChannelO f f set] denote a link between two
nodes. Then the communication frequency (channel) to be used for
communication in time slot n of the slotframe is derived as
f = F[(ASN + ChannelO f f set)%Slenдth]
(1)
where ASN is the Absolute Slot Number, defined as the total number
of time slots elapsed since the start of the network, and “%” is the
modulo operator. F is a lookup table that contains a sequence of
available physical channels. Slenдth is the length of the sequence.
Please note that Slenдth may be larger than Nchannel , implying
that some channels appear multiple times in the table F. The first
device in the network sets ASN to 1 and the newcomers learn ASN
from the existing devices. Each device in the network increments
ASN at every time slot and uses it as a global time slot counter.
Eq. 1 defines the TSCH channel hopping mechanism by returning
a different channel for the same link (ChannelO f f set) at different
time slots. Many links can transmit simultaneously in the same time
slot, provided that they are assigned with different ChannelO f f set.
Figure 1 shows an example where the network consists of four
links and uses three channels. Each link has been assigned with
a ChannelO f f set (0, 1, or 2) that represents channel 24, 25, or 26
in F and each node keeps tracking ASN . In each time slot, the
sender and receiver of an active link use Eq. 1 to compute their
communication channel. The table in Figure 1 lists the channel
hopping sequence for each link. For example, node b and node a
use the channel 25 ((ChannelO f f set + ASN)%3 = 1) to transmit
Cracking the Channel Hopping Sequences in TSCH Networks
IoTDI ’19, April 15–18, 2019, Montreal, QC, Canada
Figure 1: Example channel hopping sequences with 3 chan-
nels used. The numbers beside each link indicate the
ChannelO f f set assigned to that link.
and receive data in time slot 1 if link b → a is active in that slot.
The transmission scheduler that runs on top of the MAC layer
is responsible for deciding which set of links should be active in
each time slot. The underlined numbers in Figure 1 describe an
example schedule of active links, which allows node a to collect
readings from the rest of the nodes in every four time slots. The
IEEE 802.15.4 standard specifies neither any scheduling algorithm
nor the way of generating physical channel sequence, but it defines
the abovementioned mechanism to execute a schedule provided by
the scheduler in the upper layer.
The function-based channel hopping used in TSCH simplifies the
network operations because there is no need for the network device
to synchronize the channel. In a conventional TSCH network, each
node learns the current ASN and the channels used in the network
from its neighbors upon joining the network, and then uses those
information to generate a channel hopping sequence, typically until
it leaves the network. However, the channel sequences generated
by TSCH present a strong pattern, which introduces a security vul-
nerability to the network. We will present how an attacker derives
the channel hopping sequences without knowing any parameter of
Eq. 1 in the following section.
3 VULNERABILITY ANALYSIS
We let ASN = Ns ∗ N + X and rewrite Eq. 1 as
f = F[(Ns ∗ N + X + ChannelO f f set)%Slenдth]
(2)
where Ns is the number of time slots in the combined slotframe2, N
is the number of slotframes elapsed since the start of the network,
and X is the time slot offset in the combined slotframe. In this
section, we demonstrate how an attacker, without any prior knowl-
edge on the operating network (any parameter of Eq. 2), cracks
the channel hopping sequences by silently observing the channel
activities.
The attacker is assumed to be a device that is capable of mon-
itoring all transmission activities on all 16 channels in 2.4 GHz
ISM band in the network and has moderate computational capabil-
ity (e.g., a Raspberry Pi 3 Model B [26] integrating with a Wi-Spy
USB Spectrum Analyzer [47]). Today, many TSCH networks are
deployed in open fields to support wireless monitor and control
applications (e.g., in oil drilling plants). The attacker may be de-
ployed or airdropped into the field and powered by batteries or
energy harvesting. The intention of the attacker is to reverse en-