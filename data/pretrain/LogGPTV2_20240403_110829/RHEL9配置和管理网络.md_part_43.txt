# []{#assembly_configuring-ethtool-coalesce-settings_configuring-and-managing-networking.html#proc_using-system-roles-to-configure-ethtool-coalesce-settings_assembly_configuring-ethtool-coalesce-settings}使用 RHEL 系统角色配置 ethtool coalesce 设置 {.title}
:::
您可以使用网络 RHEL 系统角色配置 NetworkManager 连接的
`ethtool`{.literal} coalesce 设置。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
当您运行使用 Networking RHEL 系统角色的 play 时，如果设置的值与 play
中指定的名称不匹配，则系统角色会覆盖具有相同名称的连接配置集。因此，始终在剧本中指定网络连接配置文件的整个配置，即使
IP 配置已经存在。否则，角色会将这些值重置为默认值。
:::
根据它是否已存在，流程使用以下设置创建或更新 `enp1s0`{.literal}
连接配置文件：
::: itemizedlist
-   静态 IPv4 地址 -
    `198.51.100.20`{.literal}，子网掩码为`/24`{.literal}
-   静态 IPv6 地址 - `2001:db8:1::1`{.literal} 和 `/64`{.literal}
    子网掩码
-   IPv4 默认网关 - `198.51.100.254`{.literal}
-   IPv6 默认网关 - `2001:db8:1::fffe`{.literal}
-   IPv4 DNS 服务器 - `198.51.100.200`{.literal}
-   IPv6 DNS 服务器 - `2001:db8:1::ffbb`{.literal}
-   DNS 搜索域 - `example.com`{.literal}
-   `ethtool`{.literal} coalesce 设置：
    ::: itemizedlist
    -   RX 帧 `：128`{.literal}
    -   TX 框架 `：128`{.literal}
    :::
:::
::: itemizedlist
**先决条件**
-   `ansible-core`{.literal} 和 `rhel-system-roles`{.literal}
    软件包在控制节点上安装。
-   如果您在运行 playbook 时使用了与 root
    不同的远程用户，则此用户在受管节点上具有合适的 `sudo`{.literal}
    权限。
:::
::: orderedlist
**步骤**
1.  如果您要在其上执行 playbook
    中指令的主机还没有被列入清单，请将此主机的 IP 或名称添加到
    `/etc/ansible/hosts`{.literal} Ansible 清单文件中：
    ``` literallayout
    node.example.com
    ```
2.  使用以下内容创建
    `~/configure-ethernet-device-with-ethtoolcoalesce-settings.yml`{.literal}
    playbook：
    ``` literallayout
    ---
    - name: Configure an Ethernet connection with ethtool coalesce settings
      hosts: node.example.com
      become: true
      tasks:
      - include_role:
          name: rhel-system-roles.network
        vars:
          network_connections:
            - name: enp1s0
              type: ethernet
              autoconnect: yes
              ip:
                address:
                  - 198.51.100.20/24
                  - 2001:db8:1::1/64
                gateway4: 198.51.100.254
                gateway6: 2001:db8:1::fffe
                dns:
                  - 198.51.100.200
                  - 2001:db8:1::ffbb
                dns_search:
                  - example.com
              ethtool:
                coalesce:
                  rx_frames: 128
                  tx_frames: 128
              state: up
    ```
3.  运行 playbook：
    ::: itemizedlist
    -   要以 `root`{.literal} 用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u root ~/configure-ethernet-device-with-ethtoolcoalesce-settings.yml
        ```
    -   以用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u user_name --ask-become-pass ~/configure-ethernet-device-with-ethtoolcoalesce-settings.yml
        ```
        `--ask-become-pass`{.literal} 选项确保
        `ansible-playbook`{.literal} 命令提示输入
        `-u user_name`{.literal} 选项中定义的用户的 `sudo`{.literal}
        密码。
    :::
    如果没有指定 `-u user_name`{.literal}
    选项，`ansible-playbook`{.literal}
    以当前登录到控制节点的用户身份连接到受管主机。
:::
::: itemizedlist
**其他资源**
-   `/usr/share/ansible/roles/rhel-system-roles.network/README.md`{.literal}
-   `ansible-playbook(1)`{.literal} 手册页
:::
:::
:::
[]{#assembly_using-macsec-to-encrypt-layer-2-traffic-in-the-same-physical-network_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#assembly_using-macsec-to-encrypt-layer-2-traffic-in-the-same-physical-network_configuring-and-managing-networking.html#assembly_using-macsec-to-encrypt-layer-2-traffic-in-the-same-physical-network_configuring-and-managing-networking}第 38 章 使用 MACsec 加密同一物理网络中的第 2 层流量 {.title}
:::
您可以使用 MACsec
来保护两个设备（点到点）之间的通信。例如，您的分支办公室通过带中央办公室的自治区连接连接，您可以在连接办公室的两个主机上配置
MACsec，以提高安全性。
介质访问控制安全(MACsec)是一种第 2
层的协议，用于保护以太网链路上的不同的流量类型，包括：
::: itemizedlist
-   动态主机配置协议(DHCP)
-   地址解析协议(ARP)
-   互联网协议版本 4 / 6(`IPv4`{.literal} / `IPv6`{.literal})以及
-   任何使用 IP的流量（如 TCP 或 UDP）
:::
MACsec 默认使用 GCM-AES-128 算法加密并验证 LAN
中的所有流量，并使用预共享密钥在参与的主机之间建立连接。如果要更改预共享密钥，您需要更新网络中使用
MACsec 的所有主机上的 NM 配置。
MACsec 连接将以太网设备（如以太网网卡、VLAN
或隧道设备）用作父设备。您可以只在 MACsec 设备上设置 IP
配置，以便只使用加密连接与其他主机进行通信，也可以在父设备上设置 IP
配置。在后者的情况下，您可以使用父设备使用未加密连接和 MACsec
设备加密连接与其他主机通信。
macsec
不需要任何特殊硬件。例如，您可以使用任何交换机，除非您只想在主机和交换机之间加密流量。在这种情况下，交换机还必须支持
MACsec。
换句话说，有 2 种常用的方法来配置 MACsec：
::: itemizedlist
-   主机到主机，和
-   主机到交换机，然后交换机到其他主机
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
您只能在相同（物理或虚拟）LAN 的主机间使用 MACsec。
:::
::: section
::: titlepage
# []{#assembly_using-macsec-to-encrypt-layer-2-traffic-in-the-same-physical-network_configuring-and-managing-networking.html#proc_configuring-a-macsec-connection-using-nmcli_assembly_using-macsec-to-encrypt-layer-2-traffic-in-the-same-physical-network}使用 nmcli 配置 MACsec 连接 {.title}
:::
您可以使用 `nmcli`{.literal} 实用程序将以太网接口配置为使用
MACsec。这个步骤描述了如何在通过以太网连接的两个主机之间创建 MACsec
连接。
::: orderedlist
**步骤**
1.  在配置 MACsec 的第一个主机上：
    ::: itemizedlist
    -   为预共享密钥创建连接关联密钥(CAK)和连接密钥名称(CKN)：
        ::: orderedlist
        1.  创建一个 16 字节十六进制 CAK：
            ``` literallayout
            # dd if=/dev/urandom count=16 bs=1 2> /dev/null | hexdump -e '1/2 "%04x"'
            50b71a8ef0bd5751ea76de6d6c98c03a
            ```
        2.  创建一个 32 字节十六进制 CKN：
            ``` literallayout
            # dd if=/dev/urandom count=32 bs=1 2> /dev/null | hexdump -e '1/2 "%04x"'
            f2b4297d39da7330910a74abc0449feb45b5c0b9fc23df1430e1898fcf1c4550
            ```
        :::
    :::
2.  在您要通过 MACsec 连接连接的两个主机上：
3.  创建 MACsec 连接：
    ``` literallayout
    # nmcli connection add type macsec con-name macsec0 ifname macsec0 connection.autoconnect yes macsec.parent enp1s0 macsec.mode psk macsec.mka-cak 50b71a8ef0bd5751ea76de6d6c98c03a macsec.mka-ckn f2b4297d39da7330910a7abc0449feb45b5c0b9fc23df1430e1898fcf1c4550
    ```
    在`macsec.mka-cak`{.literal} 和 `macsec.mka-ckn`{.literal}
    参数中使用上一步生成的 CAK 和 CKN。在 MACsec-protected
    网络的每个主机上，这些值必须相同。
4.  配置 MACsec 连接中的 IP 设置。
    ::: orderedlist
    1.  配置 `IPv4`{.literal} 设置。例如，要为 `macsec0`{.literal}
        连接设置静态 `IPv4`{.literal} 地址、网络掩码、默认网关和 DNS
        服务器，请输入：
        ``` literallayout
        # nmcli connection modify macsec0 ipv4.method manual ipv4.addresses '192.0.2.1/24' ipv4.gateway '192.0.2.254' ipv4.dns '192.0.2.253'
        ```
    2.  配置 `IPv6`{.literal} 设置。例如，要为 `macsec0`{.literal}
        连接设置静态 `IPv6`{.literal} 地址、网络掩码、默认网关和 DNS
        服务器，请输入：
        ``` literallayout
        # nmcli connection modify macsec0 ipv6.method manual ipv6.addresses '2001:db8:1::1/32' ipv6.gateway '2001:db8:1::fffe' ipv6.dns '2001:db8:1::fffd'
        ```
    :::
5.  激活连接：
    ``` literallayout
    # nmcli connection up macsec0
    ```
:::
::: orderedlist
**验证步骤**
1.  验证流量是否已加密：
    ``` literallayout
    # tcpdump -nn -i enp1s0
    ```
2.  可选：显示未加密的流量：
    ``` literallayout
    # tcpdump -nn -i macsec0
    ```
3.  显示 MACsec 统计：
    ``` literallayout
    # ip macsec show
    ```
4.  显示在每种保护类型中的各个计数器：完整性 -only（加密）和加密（加密）
    ``` literallayout
    # ip -s macsec show
    ```
:::
:::
::: section
::: titlepage
# []{#assembly_using-macsec-to-encrypt-layer-2-traffic-in-the-same-physical-network_configuring-and-managing-networking.html#_additional_resources_4}其他资源 {.title}
:::
::: itemizedlist
-   [MACsec：加密网络流量的另一种解决方案](https://developers.redhat.com/blog/2016/10/14/macsec-a-different-solution-to-encrypt-network-traffic/){.link}
    博客。
:::
:::
:::
[]{#using-different-dns-servers-for-different-domains_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#using-different-dns-servers-for-different-domains_configuring-and-managing-networking.html#using-different-dns-servers-for-different-domains_configuring-and-managing-networking}第 39 章 在不同域中使用不同的 DNS 服务器 {.title}
:::
默认情况下，Red Hat Enterprise Linux(RHEL)将所有 DNS 请求发送到
`/etc/resolv.conf`{.literal} 文件中指定的第一个 DNS
服务器。如果这个服务器没有回复，RHEL 会使用这个文件中的下一个服务器。
在一个 DNS 服务器无法解析所有域的环境中，管理员可将 RHEL
配置为将特定域的 DNS 请求发送到所选 DNS 服务器。例如，您可以配置一个 DNS
服务器来解析 `example.com`{.literal} 和另一个 DNS 服务器的查询，以解析
`example.net`{.literal} 的查询。对于所有其他 DNS 请求，RHEL
使用与默认网关连接中配置的 DNS 服务器。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
`systemd-resolved`{.literal}
服务仅作为技术预览提供。红帽产品服务级别协议（SLA）不支持技术预览功能，且其功能可能并不完善，因此红帽不建议在生产环境中使用它们。这些预览可让用户早期访问将来的产品功能，让用户在开发过程中测试并提供反馈意见。
如需有关
[技术预览功能支持范围](https://access.redhat.com/support/offerings/techpreview){.link}
的信息，请参阅红帽客户门户网站中的技术预览功能支持范围。
:::
::: section
::: titlepage
# []{#using-different-dns-servers-for-different-domains_configuring-and-managing-networking.html#sending-dns-requests-for-a-specific-domain-to-a-selected-dns-servers_using-different-dns-servers-for-different-domains}将特定域的 DNS 请求发送到所选 DNS 服务器 {.title}
:::
本节配置 `systemd-resolved`{.literal} 服务，NetworkManager 将特定域的
DNS 查询发送到所选 DNS 服务器。
如果您完成本节中的步骤，RHEL 将使用 `/etc/resolv.conf`{.literal}
文件中由 `systemd`{.literal} 提供的 DNS
服务。`systemd-resolved`{.literal} 服务启动一个 DNS 服务，该服务侦听端口
`53`{.literal} IP 地址 `127.0.0.53`{.literal}。该服务会动态将 DNS
请求路由到 NetworkManager 中指定的对应 DNS 服务器。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
`127.0.0.53`{.literal} 地址只能从本地系统访问，而不可从网络访问。
:::
::: itemizedlist
**先决条件**
-   系统配置了多个网络管理器连接。
-   在负责解析特定域的 NetworkManager 连接中配置 DNS 服务器和搜索域
    例如：如果 VPN 连接中指定的 DNS 服务器应该解析
    `example.com`{.literal} 域的查询，VPN 连接配置集必须具有：
    ::: itemizedlist
    -   配置可解析 `example.com`{.literal}的 DNS 服务器
    -   在 `ipv4.dns-search`{.literal} 和 `ipv6.dns-search`{.literal}
        参数中将搜索域配置为 `example.com`{.literal}