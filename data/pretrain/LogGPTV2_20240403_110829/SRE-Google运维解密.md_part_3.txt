## Page 15
果没有人能够稳定地使用，就没有存在的意义。因为可靠性准2是如此重要，因此SRE专
SRE名称的发明者，宣称可靠性应该是任何产品设计中最基本的概念：任何一个系统如
其次，SRE的关注焦点在于可靠性。BenTreynor Sloss,Google负责7×24运维的副总裁
我们的任务是想出各种各样的办法用现有组件解决新的问题。
SRE和产品研发团队共同工作，其他时候我们需要开发这些系统的额外组件：例如备份
用计算机科学和软件工程手段来设计和研发大型、分布式计算机软件系统。有的时候，
将这个词语展开来说：首先，也是最重要的一点，SRE是工程师（engineer）。SRE使
这个职位的意义。基本上每个Google SRE都会被经常问到这个职位到底代表什么意思，
那么，站点可靠性工程师究竟代表着什么呢？的确，这个词语并不能够特别清晰地描述
Google将这个职位称为站点可靠性工程师（SRE，SiteReliabilityEngineering）。
出发，我们认为如果软件工程职业主要专注于设计和构建软件系统，那么应该有另外一
不需要那么多工程师花费精力去优化、维护。我们认为这个说法是错误的。从这个视角
个说法是：一个系统如果已经开发完成，部署在生产环境上，那么它就是“稳定的”，
40%~90%的花销其实是花在开发建设完成之后不断维护过程中的。并1行业内流行的一
注2
系统和负载均衡系统等。理想情况下，同时推进这些组件在多个项目中复用。还有的时候
以及他们的日常工作究竞是什么。
后顺利退役。这样一种职业必须具备非常广泛的技能，但是和其他职业的专注点都不同。
种职业专注于整个软件系统的生命周期管理。从其设计一直到部署，历经不断改进，最
多精力讨论软件的开发过程，而不是其后的维护过程。有统计显示，一个软件系统的
人的过程才是真正需要花费绝大部分精力的地方。但是，传统软件工程专业花费了很
软件工程有的时候和养孩子类似：虽然生育的过程是痛苦和困难的，但是养育孩子成
注1
的时间的概率（参见文献[Oco12]中的定义）。
在这些预测中数据变动的幅度这么大，本身就说明软件工程不是一个非常注重精确性的职业（具体细
在我们的讨论中，
可靠性（reliability）是指某个系统能够在指定环境下，成功持续执行某个功能指定
信房
AXXX
就
---
## Page 16
XXXVi
注4
注3我们主要关注的软件系统是大型网站和类似的Web服务；这里我们不会讨论大型核电站、
修，要比盖好房子之后再重新修改设计要容易得多。本书第4部分着重介绍了SRE团
来面对可靠性这个话题。这与盖房子有些类似，如果一开始将整个地基打好并保持继续
这就意味着一些小型创业公司，在应付日常面临的种种挑战时，也应该抽出一部分精力
型企业经常对如何应用这些理念和技术感到困惑。可靠性就像安全性，越早关注越好。
最后，我们当然希望社区内出现更多、更可靠的软件系统。我们知道，
容易。
开源类软件相对应。这样可以让本书的一些设计理念与实践的结合度更强，应用起来更
本书中也包含了一些对Google内部生产环境的介绍，将Google内部环境与外部常见的
读者可以进行类比，将书中的理念与自己的实际环境相结合，以便得出更为有效的结论。
际的应用工具介绍等分开。在某些需要结合Google内部信息讨论主题的时候，我们相信
好地定义各种角色和术语。为了这个目的，本书将通用的理论、设计理念和思想，与实
既希望将这些宝贵经验共享给其他相关行业，也希望能从其他行业中汲取知识，从而更
他团队和组织也有很多值得借鉴的地方。本书是对阐述SRE发展过程的一次尝试：我们
虽然SRE这个行业是在Google内部，从Web社区中诞生的，但我们认为这个职业对其
对服务器端软件的优化和修改是相对可控的，变更管理与生产安全又结合得非常紧密
时代，这个职位的出现毫不奇怪。同样，虽然在应用系统运营维护的过程中有数不清的
虽然我们在这里将SRE的职位定义得比较宽泛，但是在这样一个互联网业务高速发展的
非网站类的基础设施系统，例如Bigtable。
部绝大部分产品系统，包括GoogleCloudPlatform这类开发者平台，也包括内部的一些
的第一个工作就是维持网站的正常运转。随着时间的推移，SRE逐渐接管了Google内
的Web 搜索服务。SRE 中的“S”最开始指代的就是google.com的运维服务，因为SRE
不论是遍布全球的存储服务，还是亿万用户赖以工作的E-mail服务，还是Google最初
最后，SRE 的主要工作是运维在分布式集群管理系统上运行的具体业务服务（service）。
的产品中。
一个系统已经“足够可靠”的时候，SRE通常将精力转而投入到研发新的功能和创造新
更可靠，扩展性更好，能更有效地利用资源。但是，SRE并不是无止境地追求完美：当
注于对其负责的软件系统架构设计、运维流程的不断优化，让这些大型软件系统运行得
一种类似于SRE的职业早晚会在这个环境下诞生。
我们主要关注的是可靠性。同时，我们也更倾向于将运维的需要直接消除，具体细节参见第7章。
在这里，
及医疗器械或者其他安全性要求极高的系统。然而，在第33章中，我们将自己的方法与这些行业中
注3
序言
故意
比较
行业内流行的词语DevOps进行区分。
虽然我们认同基础设施即代码的理念，
创业企业甚至中
民航，以
---
## Page 17
注5在这个故事之外，她同时也参与推广了“软件工程”（Software Engineer）这个词语。
解决了问题，使任务可以继续进行。
提到了这种情形，并且提供了重新上传数据以及恢复执行的有效办法，在有限的时间内
解决，三名宇航员将永远无法安全返回了。所幸，当时Margaret的飞行手册更新中恰恰
当时NASA的一片混乱状态。这次不是演习，而是人命关天的危急时刻，如果不能及时
程序的执行。更巧的是，当天正好是美国圣诞节，大部分工程师都休假去了。可想而知，
和FrankBorman三人执行一个长达四天的飞行计划途中，JimLovell意外地触发了P01
几天后，在Apollo8飞船执行下一项飞行任务时。宇航员Jim Lovell、WilliamAnders
间的专业训练，是绝对不会犯如此低级的错误的。）
师都认为这很好笑，认为Margaret是小题大做，几乎所有人都认为宇航员经过如此长时
写道：“在飞行过程中，请勿触发PO1程序。”（当时增加这段文字时，很多NASA工程
Margaret 没有能够成功提交这项软件修改。她只能在火箭飞行手册中添加了一段文字，
NASA管理层认为，这项错误发生的可能性太小，根本不值得为此添加这项修改。于是
项特殊状态检查，以避免飞行员在飞行过程中意外触发P01程序的执行。但不幸的是，
凭借着 SRE的直觉，Margaret 为项目组提交了一个软件改动，申请在飞行程序中增加一
信息，如果在火箭飞行过程中执行这段程序，计算机将无法继续维持火箭航线，后果将
导致了整个模拟过程的失败。（该子程序是起飞前调试程序，执行时会删除现存的导航
意外终止。Margaret和组员调试后发现，原来Lauren意外触发了PO1这段子程序的执行，
按下了控制台上的DSKY键。整个模拟程序出乎意料地崩溃了，导致整个火箭发射程序
在 Margaret忙着和组员们在大型计算机上运行飞行模拟测试的时候，她的小女儿偷偷地
在Apollo7飞船研发期间的某一天，Margaret 带着她的小女儿Lauren一起来到公司。
不断学习，包括来自那些我们最意想不到的地方的经历。”
的工作具有现代SRE的一切特性。注用她自己的话来讲：“团队文化就是从一切经历中
我们选择了Margaret Hamilton，MIT教授，参与了阿波罗登月计划的软件开发工作。她
如果一定要为SRE寻找一个起源的话，谁才能够被称为世界上第一个SRE呢？
的工程师们，正如当年的牛顿一样，是一个新时代的开拓者。
世界正式认可为物理学家之前，他经常被称作是最后的炼金术师。而这些专注于可靠性
高可靠性最好的办法往往就是去认可这些人的工作，并配备足够的激励机制。在牛顿被
些人可能并不叫SRE这个名字，甚至可能没有受到管理层的重视。在这样的企业中，提
对中型企业来说，企业内部可能已经有这样的一组人在做着与SRE非常类似的工作。
队如何进行内部培训、如何加强内部沟通等最佳实践，很多都可以直接拿来应用。
是灾难性的。）
序言
xxxvii
---
## Page 18
xxxvii
等宽加粗字体（Constantwidthbold）
本书的印刷约定
理念！欢迎加入SRE的大家庭！
预案和准备工作，时刻警惕着，不放过一切机会去避免灾难发生。这就是SRE最重要的
景总是在不断重演。希望读者以史为鉴，只有靠着对细节的不懈关注，做好充足的灾难
虽然Apollo8的事故发生在几十年前，但是工程师们一定不会对此感到陌生，类似的场
意外错误。”在这次危机过后，Margaret之前提交的修改申请很快就被批准了。
Margaret 曾经说过：“无论对一个软件系统运行原理掌握得多么彻底，也不能阻止人犯
等宽斜体（Constantwidthitalic）
等宽字体（Constantwidth）
斜体（Italic）
下面是本书中使用的字体约定
表示命令或其他应该由用户输入的文本。
能从中获得阅读的乐趣。
最后，本书配有网站https://g.co/SREBook，其中包括了一些有益读物，希望读者
IV部分）。每一部分都配有简介，并且配有SRE成员以前发表的文章的引用地址。
为以下几个部分：理念性介绍（第Ⅱ部分）、最佳实践（第川部分）和管理经验（第
竟“风险”是SRE最关注的要点）。读者当然也可以选择逐章阅读，本书逻辑上分
描述了Google的生产运行环境，以及SRE是如何系统化认知与量化“风险”的（毕
读者可以按照任何顺序阅读本书，但是我们推荐从第2章和第3章开始。这两章
额外文章，你可以在参考文献中找到。）
但是读者也可以根据自已的兴趣选择某些章节重点阅读。（如果本书中引用了某些
这本书更像是一本会议文集。本书的每一章都可以作为一个独立部分进行阅读，
表示新术语、URL、E-mail地址、文件名及文件扩展名。
这本书是由一系列短文组成的，由GoogleSRE成员和前成员共同写就。相比之下
表示应该替换为用户提供的值的文本。
名称、数据结构类型、环境变量和关键词等。
用于嵌入一小段程序代码，
序言
，也用于行内的一些编程术语、函数名、数据库
如何阅读本书
---
## Page 19
PI:EMAIL
如果你觉得示例代码的使用不合理或不符合以上的许可权限，请随时联系我们：
Niall Richard Murphy (O'Reilly). Copyright 2016 Google, Inc.,978-1-491-92912-4."”。
如，“SiteReliability Engineering,edited byBetsyBeyer,ChrisJones,JenniferPetoff,and
我们感谢但不要求注明出处。出处的格式一般包括标题、作者、出版商和ISBN。例
中则需要许可。
用本书中的示例代码回答问题不需要许可；将书中大量的示例代码附加到你的产品文档
写程序不需要许可：销售或分销O'Reilly随书附带光盘上的示例代码则需要许可：引
代码。你不必联系我们获得许可，除非你要大量传播代码。例如，从书中抄几块代码编
本书对你的工作有所帮助。一般来说，可以在你的程序或者文档中使用本书提供的示例
补充材料可以到http://g.co/SREBook下载。
使用示例代码
索引中所列的页码也为英文原版图书中的页码。
中文版书中切口以“<”表示原书页码，便于读者与英文原版图书对照阅读，本书的
这个图标表示警告或注意。
这个图标表示一般说明。
这个图标表示提示或建议。
序言
XIXXX
---
## Page 20
列表、示例代码以及其他信息。本书的网站地址是：
O'Reilly的每一本书都有专属网站，你可以在那里找到关于本书的相关信息，包括勘误
中国：
美国：
请将对本书的评价和存在的问题通过如下地址告知出版者：
如何联系我们
以及其他数十家出版社。如想了解更多Safari BooksOnline的信息，请在线访问我们。
Press,Apress,Manning,New Riders,McGraw-Hill,Jones & Bartlett,Course Technology
Wiley & Sons,Syngress,Morgan Kaufmann,IBM Redbooks,Packt,Adobe Press,FT
Professional,Microsoft Press,Sams,Que,Peachpit Press,Focal Press,CiscoPress,John
手稿，这些出版商包括O'ReillyMedia，PrenticeHallProfessional，Addison-Wesley
订阅者可以从一个完全可搜索的数据库中获取成千上万的书籍、培训视频和尚未出版的
SafariBooksOnline为组织、政府机构和个人提供了大量的产品组合和定价方案。