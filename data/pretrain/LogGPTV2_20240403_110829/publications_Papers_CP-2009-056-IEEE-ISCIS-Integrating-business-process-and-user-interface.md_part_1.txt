1
Integrating Business Process and User Interface
Models using a Model-Driven Approach
Renata Dividino∗, Veli Bicer†, Konrad Voigt‡and Jorge Cardoso‡
∗ ISWeb Research Group University of Koblenz-Landau
Email: PI:EMAIL
† Forschungszentrum Informatik an der Universita¨t Karlsruhe (TH)
Email: PI:EMAIL
‡SAP Research CEC Dresden
Email: {konrad.voigt,jorge.cardoso}@sap.com
Abstract—Business services are complex entities that encom- with DIAMODL [2] which illustrates the user interaction. In
pass descriptions about different aspects including business addition, to provide support for business services modeling
processesanduserinterfaces.Typically,themodelingofbusiness
integrated with user interface design, we extend the modeling
services results on several correlated models. On the one hand,
languages BPMN and DIAMODL, and implement integration
there is the need to keep these models apart in order to attain
the levels of abstractions needed to model different aspects of rulesinordertoprovidesupportforbusinessprocessmodeling
a service. On the other hand, it is important to maintain the integrated with UI design.
consistency and integrity of models. In this paper, we show how
tomaintaintheconsistencyandintegrityofmodelsandpresenta
II. ISEMETHODOLOGYFORSERVICEENGINEERING
usecasefortheintegrationofuserinterfacedesignandbusiness
process models. In this section we cover our approach for service engi-
neering, called ISE (an acronym for Inter-enterprise Service
Index Terms—Service Engineering, User Interface Design,
Model-driven Engineering, Business Process Integration. Engineering). First we introduce the service engineering dis-
cipline, describing its main aspects. This is followed by an
overview of ISE, describing how the methodology applies
I. INTRODUCTION
Model Driven Engineering (MDE) in order to provide an
The Internet of Services brings a set of new challenges for
integrated framework and implementing workbench.
the research community. One of the challenges that needs to
be handled is the complexity associated with the modeling of
A. Service Engineering
real-world or business services. Services are complex entities
that encompass descriptions about business processes, user Serviceengineering(SE)[3]isanewapproachtothedesign
interfaces,pricingmodels,legalconstraints,knowledgeassets, and implementation of services. Typically services evolve in
technologicalinfrastructures,businessrules,etc.Oneapproach a common ecosystem in which organizations and IT provide
tomanagethelifecycleofaservicemultifacetedstructureisto value in form of services. SE provides methodologies to
distillitcorecharacteristicsintoformalmodelsandafterwards cope with the complexity of several business actors and their
align and integrate the models. This paper describes how a interaction. Furthermore, SE specifies tools for implement-
model-driven approach can be used to model and maintain ing and deploying services, covering both, IT and business
the consistency and integrity of business processes models perspectives. Consequently, SE is a structured approach for
(which describe services’ internal behavior) with service user creating a new (e-)service [3]. Approaches should translate an
interface models. While a service is typically composed by initial abstract description (e.g. natural language), through a
several models (up to 20 in our research [3]), we demonstrate sequenceofrepresentations,toatechnicalstandard-basedrep-
the feasibility of our approach using only two models, which resentation. The ISE methodology, described in the following
takes parts on the traditional design of the user interface (UI) section, addresses exactly the creation of new services using
and business processes, since it provides a concrete list of the a guiding methodology.
major steps to take.
As a use case, we deploy a business service and model
B. ISE Methodology
its underlying business process model. The business service
In the context of the TEXO project1, the ISE methodol-
is called EcoCalculator Service (ECS) and its main objective
ogy [3] and accompanying workbench for service engineering
is to calculate the ecological value (eco value or EV) of
was implemented. Compared to other approaches, the ISE
products(e.g.carpartssuchascarsits)accordingtoEuropean
methodology considers a technical perspective as well as
directives and worldwide environmental regulations. We show
a business and operational perspectives. Since the notions
the business process modeled with BPMN [1] showing the
set of activities that needs to be carried out when the ECS
1TEXOBusinessWebsintheInternetofServices(http://theseusprogramm.
is invoked by a customer, and the UI dialogue modeled de/scenarios/en/texo)
formal representation (e.g. MOF), a domain specific language
Dimensions
formodeltransformationcanbeusedtodefinerulesandapply
Workflow People Rules Service Data them to the models, in order to generate elements from a
source model to a target model automatically. ISE uses for
Scope ProcessMap RoleMap model integration the the Query, View and Transformation
(QVT) technique. We have chosen to rely on QVT because sevitcepsreP
UML
Business UML Activity Use Case of matured concepts, well established infrastructure for model
management and transformation, and available OMG stan-
Logical BPMN DIAMODL
dards. The integration is again depicted in Figure 1 using
arrows. In the following sections we will show how such
Technical BPEL CAP
integration can be done.
Fig. 1. ISE Matrix with separation into dimensions and perspectives, III. BUSINESSPROCESSMODELINGWITHUIS
corresponding models, and exemplary transformations for UI and business
In this section, we describe the theories for UI design and
processesmodels
business process modeling used in this work, and introduce
the DIAMODL and BPMN modeling languages.
of abstraction (perspective) and dimensions (entities) were
A. User Interface Design and DIAMODL
importantforourapproach,wehavefollowedasolutionbased
on the Zachman framework [4]. ISE combines this business AwidelyacceptedprincipleofmethodologiesonUIdesign
approach with the concepts of Model Driven Engineering [7], [8], [9] is the separation (so called modeling in layers)
(MDE) [5]. of concerns with respect to the modeling of the structural,
Figure 1 shows the ISE framework which is part of ISE behavior and presentational aspects of UIs. In terms of
methodology. Inspired by Zachman framework and following ISE, structural aspects are included at the scope, business
the separation of concerns paradigm raised by [6], it divides dimensions; behavior aspects at the logical dimension; and
and structures services into four main perspectives and five presentation aspects at the technical dimension. The main
dimensions. The dimensions are: service description, work- idea of the traditional delineation between structure, behavior
flow,data,peopleandrules.Figure1presentsareducedview, and presentation (with additional layers of granularity) is to
showing only the models relevant for this paper. Furthermore, describe the full set of issues and considerations involved in
each of these dimensions is divided into four perspectives more complex forms of interactive UIs.
(layers) of abstraction. Each of the perspectives of the ISE Behavioral aspects mainly describes interactive qualities of
methodology can be regarded as a phase in the development the UI, i.e. how users and systems cooperate to perform the
(model refinement) of services. Thus, the models which are desired operations. Interactions can be modeled as a dialogue
assigned to each layer support the development from different where operations that allow users to exchange message with
viewpoints (i.e., scope, business, logical, and technical). Ad- theinterfacearedefined.TheUIisusedasancommunication
ditionally, models at different dimension but belonging to the channel for the user to exchange message with the system.
same layer are integrated/binded to others in order to form Note that this layer acts as a glue bringing together system
the complete business service model at the respective level and interface (users).
of abstraction. For all cells of the matrix, we have defined Within the ISE methodology, behavior aspects of an UI
formal models which should be considered in the service are modeled using the DIAMODL notation. The DIAMODL
development. Examples of models include UML, mind maps, notation proposed by [2] offers interactors-with-gates (i.e.
BPMN, BPEL, OWL, DIAMODL, etc. states-with-transitions) interface component abstraction and
Therefore, ISE act as an integration platform for several the hierarchical state formalism statecharts for describing the
models stored in cells of the framework. Throughout one UI’s behavior. DIAMODL’s five core elements are:
dimension, models are created with respect to different views • Interactors. Interactors represent a distinct context for
andrefineduntiltheyconformtoatechnicalspecification.This behaviors of the UI, such as an “input” state and an
leads to multiple representations of information on different “output” state.
layersofabstractioninthecorrespondingdimensions.Changes • Gates. Gates determine how to interpret states i.e. they
in one model have to be propagated into related models model the actions associated with a state, and each state
holdingoverlappinginformation(depictedbyarrowsinFigure can be associated with anther state through connections.
1). We divide the dependencies between models into two • Connections. Connections are directed associations be-
classes: (1) Vertical dependencies cover the synchronization tween any two states that dictates under what conditions
of dependencies between models on different layers of ab- (“triggers”) the UI shifts from the first context (state) to
straction in one dimension. (e.g. BPMN and BPEL) and (2) the second.
Horizontaldependenciesdefinethesynchronizationofmodels • Variables.Variablesareusedforholdingaresource(data
onthesamelayerofabstraction.(e.g.BPMNandDIAMODL). value) and its contained structure.
These dependencies requires the integration of models. We • Computations. Computations enable message exchanges
have adopted a model transformation from MDE to allow amongUIcomponents,andbetweenaUIcomponentand
for an automatic support of integration. Based on a common an interactive system.
Figure 2 presents a simplified DIAMODL model for the process.Gateways,ontheotherhand,areusedtocontrol
ECS example. The main input of the ECS is the identification splits and joins in the process flow.
of the part (product) for which the EV will be calculated. The • Connecting Objects. Connecting objects are used to link
userinputsthePID-value(textInteractPID)whichisinternally flow objects and other elements. There are three ways to
stored in a variable (PDI). When the user clicks on the OK connectelementswhichare:sequenceflow,messageflow
button (buttonInteractor), the PID-value is sent to the system. and association.
Since the calculation of EV is highly dependent on directives • Swimlanes. Swimlanes are elements to represent the
andenvironmentalregulationsholdingforthecountryinwhere boundaries that exist in a process model due to the
the product is built and/or exported to, the country name has inter-organizationalnatureofbusinessprocesses.Thetop-
to be be specified by the user (comboInteractorCountry) – mostswimlaneelementisthepoolwhichcategorizesand
as default value the European directives are considered. This encapsulates the activities performed by an organization
information is forwarded to the system which calculates the entity or a system. A pool can then be partitioned into
respective EV and returns it to the user (textInteractorEV). lanes.
• Artifacts.Artifactsareusedtoprovideadditionalinforma-
tionabouttheprocesssuchasannotationsordataobjects.
Figure 3 shows core BPMN elements used to model the
business process of the ECS. The service starts with the PID-
value input. The first two activities to be executed in parallel
are the Loader (Data Service) and Process Logging. The
Loader retrieves the BOM (bill of material) based on the PID
supplied by the consumer. In parallel, the Process Logging
activity writes log information indicating that a process in-
stancehasstarted.Oncethosetwoactivitiesarecompleted,the
process model checks if the BOM has information describing
all the subparts. Additionally, it checks if the name of a
country is specified in which regulations will be used for the
computation of the EV. If no information is missing, the EV
is computed and Billing, Payment, Performance Analysis and
Logging activities are executed. For reader’s convenience, UI
part is also shown as illustrations of the components. Intu-
itively, this graphical notation of BPMN essentially provides
aspecialkindofflowchartincorporatingconstructstailoredto
Fig.2. DIAMODLmodelfortheECS
business process modeling. Although it is quite useful in this
sense, there is a lack of elements to model constructs specific
to UI models.
B. Business Service Choreographies and BPMN
Modeling business processes, at a high level, requires the
specificationoftheinvolvedpartiesandprocessflowaccording C. DIAMODL and BPMN Synchronization Requirements
tobusinessobjectivesoftheservice.WithinISEmethodology, In view of service engineering requirements, both service
the Business Process Modeling Notation (BPMN) is adopted business process and user interaction contribute to the exe-
toaddressthisneed.Itisoneofthewell-knownlanguagesthat cution of a service to perform its functionality for a desired
aims to specify business processes at a high-level, rather than outcome. They contribute to the design from different angles,
as executable workflows. It provides a modeling mechanism but need to be in synchronized in order to result in a coher-
withastandardvisualrepresentationtocreatebusinessprocess ent execution after service deployment. The common action
modelsandabstractthecomplexityoftheprocess-levelservice units for both models are the activities. In DIAMODL, they
design. According to BPMN specification [1], there are four correspond to the interactors and computations considering
types of core elements that helps to define processes: their assignment to a user or system, respectively. In BPMN,
• Flow Objects. These are the main graphical elements to activities are either tasks, or subprocesses. However, BPMN
define the behavior of a process model. They mainly does not explicitly state by whom an activity is performed,
includes events, activities, and gateways. Events indicate and accordingly no distinction of activity types (i.e. user or
the triggers that occur during the course of the pro- system). As expected, each model assess the other’s activities
cess. BPMN distinguishes start events and intermediate in a black-box manner – i.e. DIAMODL computation repre-
events as two kinds of event consumption whereas end sents the whole business process activities and BPMN tasks
events are only used for event production. Start events standing for user activities and interactors.
lead to process instantiation and intermediate events are Intuitively, the execution of activities from start to end in
consumed by a running process instance. Furthermore, both models are event-driven. Although the activities lead
activities are generic constructs to represent particular to accomplishing overall service goal separately in business
actions (e.g. tasks and sub-processes) to be performed in process and UI, their flows need to be aligned to fit each
Status
Result
Product ID Invalid BOM
Eco value: EV
Country
Enter PID
Status
OK Select Country
Valid BOM
Event: Valid BOM Event: Invalid BOM
PID Event: Additional Info Billing/ Event:EV Event: Error
Loader ... Payment
Eco Value
Calculation SCE
Performance
Process Analysis
Logging Subprocess
Event: Start Coun Event: End
Task try
Process
Logging
Pool
Fig.3. BPMNmodelshowingcoreelementsandinteractionswithUIcomponents
other.InFigure3,thisisillustratedusingdashedlinesbetween ofcapturingthecommoninformationinbothmodelsand
the UI components and business process elements. First, the adapt them for synchronization. A declarative technique
UI needs to be aware of the state of the business process (e.g. QVT) is needed to be implemented for model
in order to set its behavior. This include switching from one transformations.