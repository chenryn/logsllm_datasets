4.1.4 Cluster Correlation
We now have two complementary views of how the
NXDomains should be grouped based on two different
deﬁnitions of similarity between domain names. Nei-
ther view is perfect, and the produced clusters may still
contain noise. Correlating the two results helps ﬁlter the
noise and output clusters of NXDomains that are more
likely to be generated by a DGA. Cluster correlation is
performed in the following way.
Let A = {A1, .., An} be the set of NXDomain clus-
ters obtained by using statistical features, as described
in Section 4.1.2, and B = {B1, .., Bm} be the set of NX-
Domain clusters derived from the bipartite graph parti-
tioning approach discussed in Section 4.1.3. We com-
pute the intersection between all possible pairs of clus-
ters Ii, j = Ai ∩ B j, for i = 1, .., n and j = 1, .., m. All
correlated clusters Ii, j that contain less than a predeﬁned
number l of NXDomains (i.e., |Ii, j|  q D , s is ﬂagged as a good candidate C&C domain
for DGA D.
The threshold q D can be learned during the training
phase. First, we train the HMM with the set NXD . Then,
we use a set L of legitimate “non-DGA” domains from
Alexa. For each domain l ∈ L, we compute the likelihood
f (l) and set the threshold q D so to obtain a maximum
target false positive rate (e.g., max FPs=1%).
6 Data Collection
In this section we provide an overview of the amount
of NXDomain trafﬁc we observed during a period of ﬁf-
teen consecutive months (our evaluation period), start-
ing on November 1st, 2010 and ending on January 15th,
2012. Afterwards, we discuss how we collected the do-
main names used to train and test our DGA Classiﬁer
(see Section 5).
Figure 2: Observations from NXDomain trafﬁc collected below a set of ISP recursive DNS servers over a 439 day window.
6.1 NXDomain Trafﬁc
We evaluated Pleiades over a 15-month period against
DNS trafﬁc obtained by monitoring DNS messages
to/from a set of recursive DNS resolvers operated by a
large North American ISP. These servers were physically
located in the US, and served (in average) over 2 million
client hosts per day1. Our monitoring point was “below”
the DNS servers, thus providing visibility on the NXDo-
mains generated by the individual client hosts.
Figure 2(a) reports, per each day, (1) the number of
NXDomains as seen in the raw DNS trafﬁc, (2) the num-
ber of distinct hosts that in the considered day query at
least one NXDomains, and (3) the number of distinct
(de-duplicated) NXDomains (we also ﬁlter out domain
names that do not have a valid effective TLD [15,19,20]).
The abrupt drop in the number of NXDomains and hosts
(roughly a 30% reduction) experienced between 2011-
03-24 and 2011-06-17 was due to a conﬁguration change
at the ISP network.
On average, we observed about 5 millions (raw) NX-
Domains, 187,600 distinct hosts that queried at least one
NXDomains, and 360,700 distinct NXDomains overall,
per each day. Therefore, the average size of the associ-
ation matrix M used to perform spectral clustering (see
Section 4.1.3) was 187,600 × 360,700. However, it is
worth noting that M is sparse and can be efﬁciently stored
in memory.
In fact, the vast majority (about 90%) of
hosts query less than 10 NXDomains per day, and there-
fore most rows in M will contain only a few non-zero
elements. This is shown in Figure 2(b), which reports
the cumulative distribution function (CDF) for the vol-
ume of NXDomains queried by a host in the monitored
network. On the other hand, Figure 2(c) shows the CDF
for the number of hosts that query an NXDomain (this
relates directly to the sparseness of M according to its
columns).
6.2 Ground Truth
In order to generate the ground truth to train and eval-
uate the DGA Classiﬁer (Section 5), we used a sim-
ple approach. To collect the NXDomains generated by
known DGA-based malware we used two different meth-
ods. First, because the DGA used by different variants of
Conﬁcker and by Murofet are known (derived through
reverse-engineering), we simply used the respective al-
gorithms to generate a set of domain names from each
of these botnets. To obtain a sample set of domains gen-
erated by Bobax and Sinowal, whose exact DGA algo-
rithm is not known (at least not to us), we simply ex-
ecuted two malware samples (one per botnet) in a VM-
based malware analysis framework that only allows DNS
trafﬁc2, while denying any other type of trafﬁc. Over-
all we collected 30,000 domains generated by Conﬁcker,
26,078 from Murofet, 1,283 from Bobax and, 1,783 from
Sinowal.
Finally, we used the top 10,000 most popular domains
according to alexa.com, with and without the www.
preﬁx. Therefore, overall we used 20,000 domain names
to represent the “negative” (i.e., “non-DGA”) class dur-
ing the training and testing of the DGA Classiﬁer.
7 Analysis
In this section, we present the experimental results of
our system. We begin by demonstrating Pleiades’ mod-
eling accuracy with respect to known DGAs like Con-
ﬁcker, Sinowal, Bobax and Murofet. Then, we elaborate
on the DGAs we discovered throughout the ﬁfteen month
NXDomain monitoring period. We conclude the section
by summarizing the most interesting ﬁndings from the
twelve DGAs we detected. Half of them use a DGA al-
gorithm from a known malware family. The other half,
1We estimated the number of hosts by computing the average num-
ber of distinct client IPs seen per day.
2We only allowed UDP port 53.
Table 1: Detection results (in %) using 10-fold cross validation
for different values of a .
a = 5 NXDomains
a = 10 NXDomains
Class
T Prate
Bobax
Conﬁcker
Sinowal
Murofet
Benign
95
98
99
98
96
FPrate
0.4
1.4
0.1