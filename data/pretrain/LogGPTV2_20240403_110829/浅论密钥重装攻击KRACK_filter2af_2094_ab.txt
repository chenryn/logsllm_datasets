### 3. 数据加密算法与安全问题

#### 3.1 计数器模式密码块链消息完整码协议 (CCMP) 与伽罗瓦/计数器模式协议 (GCMP)

所采用的数据加密算法分别为流密码 RC4、认证加密算法 AES-CCM 和认证加密算法 AES-GCM。其中，AES-CCM 和 AES-GCM 的加密部分均基于 CTR 模式的流式加密。明文数据与算法生成的密钥流按比特逐位异或后得到密文数据。

**流式加密的问题：**
在密钥固定的条件下，重用 nonce（随机数）时总会生成相同的密钥流。攻击者可以利用这一特性来解密数据包。具体来说，设密钥流为 KeyStream，两组明文数据分别为 P1 和 P2，且 KeyStream、P1 和 P2 具有相同的比特长度，则对应的密文分别为：
- \( C1 = P1 \oplus \text{KeyStream} \)
- \( C2 = P2 \oplus \text{KeyStream} \)

如果攻击者通过网络收集到密文 C1 和 C2，并且知道 C1 对应的明文 P1，则可以恢复 P2 的信息：
\[ P2 = C2 \oplus \text{KeyStream} = C2 \oplus (P1 \oplus C1) \]

在实际情况下，通常能找到已知内容的数据包，因此在密钥固定且重用 nonce 时，可以通过上述过程解密数据包。即使无法找到已知内容的数据包，当对消息类型有足够的知识（例如，消息为英文字符）时，也可能解密还原出明文。

#### 3.2 AP 安装 PTK 的问题

**疑问：AP 是否安装了 PTK？**

客户端重新安装 PTK 后，发送的消息 4 将被加密，而此时 AP 尚未安装 PTK，无法识别，消息 4 将被丢弃。这是否意味着攻击失败？

**802.11 标准表述存在的问题：**

“On reception of message 4, the Authenticator verifies that the Key Replay Counter field value is one that it used on this 4-way handshake.”

注意其表述为“one”，即只要先前使用过的值都行。凡是照此实现的算法，均可用之前的消息 4 取代，使得攻击者可以完成一个完整的四次握手过程，使 AP 安装 PTK，进而实现对通信数据包的解密。此时，攻击者并不知道实际安装的密钥。

### 3.3 接受明文重传消息 3，安装全 0 密钥

在 Linux 和 Android 系统中，wpa_supplicant 实现 WPA2。由于 2.3 版本以上对协议的错误实现，导致安装 PTK 后将 TK 置为 0。客户端再次收到消息 3 重装密钥时，会从内存中取回 TK。在这种情况下，会导致安装全 0 密钥 TK，使得攻击者不仅能解密数据包，还能进行流量劫持。

**基本步骤：**
- 基本步骤与前例一致。
- 区别在于此时安装的 TK 是全 0，攻击者知道了 TK，可以进行流量劫持，监控并篡改客户端发出的全部数据。

### 3.4 接受加密重传消息 3（转变为接受明文重传）

在 Linux 和 Android 系统中，虽然设定为接受加密重传的消息 3，但也会接受明文重传的消息 3，只要重传的消息 3 紧跟在原始消息 3 之后。无线网卡会将其送入 CPU 的接收队列中。

**处理流程：**
- CPU 先处理第一条消息 3，发出第一条消息 4 后，发出命令让无线网卡安装密钥。
- CPU 再处理第二条消息 3，发出第二条消息 4，无线网卡使用 PTK 对其加密。
- CPU 发出命令，无线网卡重装密钥，nonce 被重用为 1。此时转化为接收明文重传消息 3。

### 3.5 仅接受加密重传消息 3

攻击者先等待客户端完成一次完整的四次握手，在第二次的四次握手过程中，阻塞消息 3，等待 AP 重传的消息 3 到来，一起交付给客户端的无线网卡。

**处理流程：**
- 无线网卡使用当前的 PTK 将其解密，送入 CPU 的接收队列。
- CPU 先处理第一条消息 3，发出第一条消息 4 后，发出命令让无线网卡安装新的密钥 PTK'。
- 系统不对消息 3 加密的密钥进行检查，尽管第二条消息 3 是用以前的 PTK 进行的加密，CPU 直接发出第二条消息 4，发出命令让无线网卡重装密钥，nonce 被重用为 1。

### 3.6 不听话的孩子幸免于难？

Windows 和 iOS 违背 802.11 标准，不接受消息 3 重传，因此免疫四次握手攻击。然而，组密钥握手攻击和 Fast BSS Transition (FT) 握手攻击仍然有效。

### 4. 攻击实例

利用安卓设备存在的可被强制安装全 0 密钥漏洞，获取用户登录名及密码等敏感的个人信息。

#### 4.1 工具
- 探测漏洞是否可用的脚本
- 漏洞利用脚本
- HTTPS 降级工具 sslstrip
- 抓包工具 Wireshark

#### 4.2 攻击过程

**步骤：**
1. 安卓手机连接到 WPA2 加密的无线网络。
2. 手机访问 match.com，安卓手机默认开启 SSL。
3. 启动攻击脚本 krack-all-zero-tk.py，各项信息如下：
   - 真实热点 Real AP：
     - SSID: testnetwork
     - MAC: bc:ae:c5:88:8c:20
     - Channel: 6
   - 被攻击客户端 target：
     - MAC: 90:18:7c:6e:6b:20
   - 伪造同名同 MAC 热点（Rouge AP）：
     - SSID: testnetwork
     - MAC: bc:ae:c5:88:8c:20
     - Channel: 1
4. 启动 enable_internet_forwarding.sh 脚本，使得钓鱼热点可用。
5. 启动 sslstrip，去除 SSL 保护。
6. 使用 Wireshark 抓包，手机再次连接无线网络。
7. 通过构造 CSA 信标的方式强制切换到钓鱼热点。
8. 手机再次连接网页，SSL 保护已去除。
9. 输入账号密码登录。
10. 查看 Wireshark 捕获数据，确认 WPA2 保护已被绕过。

审核人：yiwang  
编辑：边边