账户的密码，各种糖糕事情都可能发生在你的系统（以及数据）上。
---
## Page 563
548
第25章创建与数据库、Web及电子邮件相关的脚本
为了阻止这种情况的发生，明智的做法是在MySQL上创建一个仅对应用中所涉及的数据库
有权限的独立用户账户。可以用GRANTSQL语句来完成。
nysq]> GRANT SELBCT, INSERT, DELETE, UPDATE ON test, * TO test IDENrIFIED
Query OK, 0 rovs affected (0.35 sec)
1, qsa3 ,&q
 CREATE TABLE enp1oyees 1
-> enpid int not nul1,
-> lastname varchar (30) ,
=> firstname varchar (30) ,
-> prinsry key (enpid!) 
-> salary float,
Query OK, 0 rovs affected (0.14 sec)
mysg]>
首先要注意，为了新建一张表，我们需要用root用户账户登录到MySQL上，因为test用户没
有新建表的权限。接下来，我们在mysql程序命令行上指定了test数据库。不这么做的话，就需要
用SQL命令USE来连接到test数据库。
警告在创建新表前，很重要的一点是，妥确保你使用了正确的数据库。另外还要确保使用管
理员用户账户（MySQL中的root用户）登录杂创建表。
表中的每个数据字段都用数据类型来定义。MySQL和PostgreSQL数据库支持许多不同的数据
类型。表25-1列出了其中较常见的一些数据类型。
表25-1MySQL的数据类型
数据类型
措
述
chat
定长字符中值
varchar
整数值
变长字符串值
int
float
浮点值
boolean
布尔类型crue/fala值
date
YYYY-MM-DD格式的日期值
time
HH:mm:ss格式的时间值
t.mest.arp
目期和时间值的组合
25
text
长字符串值
DLOB
大的二进制值，比如图片或视频剪辑
empia数据字段还指定了一个数据约束（data constraint）。数据约束会限制输人什么类型数据
可以创建一个有效的记录。notnul1数据约束指明每条记录都必须有一个指定的empia值。
最后，primarykey定义了可以唯一标识每条记录的数据字段。这意味着每条记录中在表
中都必须有一个唯一的empia值。
创建新表之后，可以用对应的命令来确保它创建成功了，在mysql中是用showtables命令。
---
## Page 565
550
第25章创建与数据库、Web及电子邮件相关的脚本
ryaql> show tables;
 eployees
1 rou in set (0.00 sec)
nyaq1>
有了新建的表，现在你可以开始保存一些数据了。下一节将会介绍应该怎么做。
6.插入和删除数据
毫不意外，你需要使用SQL命令INSERT向表中插入新的记录。每条INSERT命令都必须指定
数据字段值来供MySQL服务器接受该记录。
SQL命令INSERT的格式如下。
INSERT INTO table VALUES (.-.)
每个数据字段的值都用逗号分开。
S myagl mytest -u test -p
Enter password:
mysq1> INSERT INTO enployees VALUES (1, B1um* , *RIch′, 25000,001;
Query OK, 1 rov affected (0.35 sec)
上面的例子用-u命令行选项以mytest用户账户登录。
INSERT命令会将指定的数据写人表中的数据字段里。如果你试图添加另外一条包含相同的
empic数据字段值的记录，就会得到一条错误消息。
ryaq1> INSERT INTO enployees VALUES (1, Blum* , *Barbara ′, 45000 00) ;
ERROR 1062 (23000) = Dup1icate entry *1* Cor key 1
但如果你将empid的值改成唯一的值，那就没问题了。
mysq1> INSERT INTO enployees VALUES (2, *B1um*, *Barbara′, 4500o,0) ;
Query OK, l rov affected (o.no sec)
现在表中应该有两条记录了。
如果你需要从表中删除数据，可以用SQL命令DELETE，但要非常小心。
DELETE命令的基本格式如下。
DELETE FROM table;
其中table指定了要从中删除记录的表。这个命令有个小问题：它会删除该表中所有记录。
要想只删除其中一条或多条数据行，必须用WHERE子句。WHERE子句允许创建一个过滤器来
指定删除哪些记录。可以像下面这样使用WHERE子句。
DELETE FROM enployees KHERE enpid = 2;
这条命令只会删除empia值为2的所有记录。当你执行这条命令时，mysql程序会返回一条消
息来说明有多少个记录符合条件。
---
## Page 566
25.1MySQL数据库
551
ayaq]> DELETE FRON enployeea WHERE enpid = 2;
Query Ok, 1 rou affected (o.29 sec)
跟期望的一样，只有一条记录符合条件并被删除。
7.查询数据
一旦将所有数据都放人数据库，就可以开始提取信息了。
所有查询都是用SQL命令SELECT来完成。SELECT命令非常强大，但用起来也很复杂。
SELECT语句的基本格式如下。
SELECT dacafieldg FROK tabIe
datafields参数是一个用逗号分开的数据字段名称列表，指明了希望查询返回的字段。如
果你要提取所有的数据字段值，可以用星号作通配符。
你还必须指定要查询的表。要想得到有意义的结果，待查询的数据字段必须对应正确的表。
默认情况下，SELECT命令会返回指定表中的所有记录。
mysql> SELECT • FROK enployees;
Iempid I lastnane I flratnane
1salazy1
1 1 B1um
2 1 Blum
IR1ch
250001
31 Blum
Barbara
Katie Jane 1
450001
345001
4 1
B1um
Jessica
523401
4 rows ln set (0.00 sec)
myaq1>
可以用一个或多个修饰符定义数据库服务器如何返回查询数据。下面列出了常用的修饰符。
WHERE：显示符合特定条件的数据行子集。
ORDER BY：以指定顺序显示数据行。
LIMIT：只显示数据行的一个子集。
WHERE子句是最常用的SELECT命令修饰符。它允许你指定查询结果的过滤条件。下面是一个
使用WHERE子句的例子。
0000 
现在你可以看到将数据库访问功能添加到shell脚本中的强大之处了！只要使用几条SQL命令
和mysql程序就可以轻松应对你的数据管理需求。下一节将会介绍如何将这些功能引人shell脚本。
---
## Page 567
552
第25章创建与数据库、Web及电子邮件相关的脚本
25.1.2在脚本中使用数据库
现在你已经有了一个可以正常工作的数据库，终于可以将精力放回shell脚本编程了。本节将
会介绍如何用shell脚本同数据库交互。
1.登录到服务器
如果你为自己的shell脚本在MySQL中创建了一个特定的用户账户，那你需要使用mysq1命
令，以该用户的身份登录。实现的方法有好几种，其中一种是使用-p选项，在命令行中加入密码。
1891 d1se3 n- 2se1/a tbeAt
不过这并不是一个好做法。所有能够访问你脚本的人都会知道数据库的用户账户和密码。
要解决这个问题，可以借助mysql程序所使用的一个特殊配置文件。mysql程序使用
SHOME/.my.cnf文件来读取特定的启动命令和设置。其中一项设置就是用户启动的mysql会话的默
认密码。
要想在这个文加中设置默认密码，只需要像下面这样。
$ cat .ny-cnf
psssvord - test
[a]
$ chnod 400 ny.cnf
可以使用chmod命令将.my.cnf文件限制为只能由本人浏览。现在可以在命令行上测试一下。
Reading cable Lnfornatlon for conpletion ot table and colunn nanes
nysql mytest -u test
You can turn off chia feature to get a qulcker staxtup vith -A
Nelcone co the MySQL monitor, Comnands end vith  oc 1g-
Sexvex version: 5.5.38Dubuntu0. 14. 04.1 (Ubuntu)
Youx MySQL connection 1d ia 44
Copyrlght (c) 2o0o, 2014, Oracle and/ox ita affi1iates. A11 xighta reserved.
aflllates. Other manes nay be tradenaxka of thelr respective
Dracle la a reglstered txademark of Oracle Corpoxatlon and/ox 1ta
omers.
Type *help;* ox *\h′ for help. Type (c* to cleax tbe current lnput atatenent
myaql>
棒极了！这样就不用在shell脚本中将密码写在命令行上了。
2.向服务器发送命令
在建立起到服务器的连接后，接着就可以向数据库发送命令进行交互。有两种实现方法：
口发送单个命令并退出；
口发送多个命令。
要发送单个命令，你必须将命令作为mysq1命令行的一部分。对于mysgl命令，可以用-e
选项。
---
## Page 568
25.1MySQL数据库
553
$ cat ntest1
 send a command to the MysQL servex
#1 /bin/ba.sh
NYSQL=$ (vhlch nyaq1)
SMYsQL mytest -u test -e select
$./mtest1
enpid llastnane
firstnane
salary
1 1 B1um
1R1ch
125000
3 1B1un
21 B1um
1Katie Jane 1 34500
1Barbara
45000
41 B1um
IJessica
152340
数据库服务器会将SQL命令的结果返回给shell脚本，脚本会将它们显示在STDOUT中。
如果你需要发送多条SQL命令，可以利用文件重定向（参见第15章）。要在shell脚本中重定
向多行内容，就必须定义一个结束（cndoffile）字符串。结束字符串指明了重定向数据的开始和
结尾。
下面的例子定义了结束字符串及其中数据。
$ cat mtest2
 sending multiple conmnands to MySQL
#1 /bIn/ba.sh
NYSQL=$ (vhlch nyaq]1
show tables;
$MYSQL nytest
-u test <<BOF
select * fron enployees where salary 
EOF
0000$
$./atest2
Tables_in_test
enployees
enp1d
lastname
firatnane
sa1ary
B1un
Barbara
45000
B1un
Jessica
52340
$
25
shell会将EOE分隔符之间的所有内容都重定向给mysql命令。mysql命令会执行这些命令行，
就像你在提示符下亲自输人的一样。用了这种方法，你可以根据需要向MySQL服务器发送任意
多条命令。但你会注意到，每条命令的输出之间没有没有任何分隔。在25.2.3节中，你会看到如
何解决这个问题。
说明你应该也注意到了，当使用输入重定向时，mysql程序改变了跌认的输出风格。mysql程序
检测到了输入是重定向过来的，所以它只返回了原始数据而不是在数据两边加上ASCII
符号框。这非常有利于提取个别的数据元素。
---