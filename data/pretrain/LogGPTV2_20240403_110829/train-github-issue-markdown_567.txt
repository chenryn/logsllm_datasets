Subject: Memory Leak Identified in `GlideDrawableImageViewTarget`

Hello,

I have identified a memory leak in the `com.bumptech.glide.request.target.ViewTarget` class, specifically within the `GlideDrawableImageViewTarget` implementation. This issue arises because the `GlideDrawableImageViewTarget` retains a strong reference to the activity, preventing the garbage collector (GC) from releasing the activity and its associated resources.

### Issue Details
- **Class Affected**: `com.bumptech.glide.request.target.ViewTarget`
- **Specific Implementation**: `GlideDrawableImageViewTarget`
- **Problem**: The `GlideDrawableImageViewTarget` holds a strong reference to the activity, leading to a memory leak.
- **Detection Method**: I discovered this issue by running the following query in the Eclipse Memory Analyzer Tool (MAT):
  ```sql
  SELECT * FROM instanceof android.support.v7.app.AppCompatActivity
  ```

### Suggested Fix
To resolve this problem, I replaced the strong reference with a `WeakReference` to the view. Specifically, I modified the `ViewTarget` class as follows:

```java
protected final WeakReference<View> view;
```

This change ensures that the activity can be properly garbage collected when it is no longer needed, thereby eliminating the memory leak.

### Additional Information
- **Environment**: Android application using Glide for image loading.
- **Tools Used**: Eclipse Memory Analyzer Tool (MAT).

Thank you for your attention to this matter.

Best regards,
[Your Name]

P.S. Please excuse any English language errors.