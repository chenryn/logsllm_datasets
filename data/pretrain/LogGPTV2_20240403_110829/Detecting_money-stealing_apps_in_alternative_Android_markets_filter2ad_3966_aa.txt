# Title: Detecting Money-Stealing Apps in Alternative Android Markets

**Authors:**
- Chao Yang, Texas A&M University, College Station, TX
- Vinod Yegneswaran, SRI International, Menlo Park, CA
- Phillip A. Porras, SRI International, Menlo Park, CA
- Guofei Gu, Texas A&M University, College Station, TX

**Contact Information:**
- Chao Yang: [EMAIL]
- Vinod Yegneswaran: [EMAIL]
- Phillip A. Porras: [EMAIL]
- Guofei Gu: [EMAIL]

## Abstract
The proliferation of malware in Android marketplaces is a growing and significant concern. One of the most alarming issues is the presence of malicious Android applications designed to steal money from unsuspecting users. These apps are often disguised as benign applications and uploaded to third-party alternative markets that lack robust security vetting procedures, leading to their download and execution by unsuspecting victims.

In this work, we introduce "MoneyGuard," a systematic approach to detect stealthy money-stealing applications in popular Android markets. Our technique focuses on identifying two key behavioral heuristics common among many money-stealing Android malware: hardcoded exfiltration and notification suppression. In our preliminary analysis of 47 SMS-based money-stealing applications, we found that 41 followed this pattern, and we propose a lightweight detection method to identify these behaviors.

**Categories and Subject Descriptors:**
- D.4.6 [Security and Protection]: Invasive software

**General Terms:**
- Security

**Keywords:**
- Android, Malicious apps, Security, Money-stealing

## 1. Introduction
One of the appealing aspects of the Android platform is its "open-market" strategy, which fosters an open and unregulated ecosystem of third-party marketplaces. This lack of centralized control encourages uninhibited development and distribution of Android applications. Unfortunately, cybercriminals have exploited this openness to release malicious Android applications. Google has implemented the Google Bouncer for its Google Play marketplace to combat this threat. However, sophisticated malware can still evade Bouncer's analysis, and Google Play remains inaccessible in countries like China, where users rely on less secure third-party marketplaces. A rising and insidious threat in these marketplaces is money-stealing malware, which conducts unauthorized transactions to siphon funds from innocent victims.

Telecommunication companies charge mobile customers based on their usage of billing services such as SMS, phone calls, and network traffic. Third-party entities, such as owners of premium-rate telephone numbers, can also profit from customer usage of certain services. Consequently, many first-generation malicious money-stealing Android applications have been developed to launch premium services surreptitiously from within the device.

These applications not only cause significant economic losses to victims but also generate substantial profits for malware developers. For example, in November 2011, malicious Android applications masquerading as "Angry Birds" and "Cut the Rope" sent premium rate text messages, affecting 1,391 mobile numbers in the UK and defrauding customers of £27,850. In China, the development and dissemination of such money-stealing applications have become industrialized. A notorious app named "Piranha" reportedly stole 50 million RMB (approximately 8 million dollars) in a year, affecting over 210,000 Chinese mobile devices by March 2012.

In this work, we propose "MoneyGuard," a new approach to detect such money-stealing Android applications. We specifically target stealthy money-stealing applications that attempt to drain user accounts without their knowledge by engaging in one or more of the following behaviors: sending messages to hard-coded third-party premium services, automatically dialing calls to fixed premium numbers, and visiting specific websites or remote servers to achieve illicit goals. Unlike other types of malware, these applications aim to continuously charge the victim's account without providing any notifications. Therefore, they not only contain malicious billing logic but also embed techniques to suppress notifications resulting from such activities (a real case study is described in Section 3).

## 2. Related Work
The growing threat of malicious Android applications has been recognized by both academic research and industry. Battery-based approaches were initially developed to detect mobile malware. Schmidt et al. detect malicious Android applications by statically analyzing Linux executable commands and system calls. Bose et al. use malicious behavioral signatures to detect malware on mobile handsets. TaintDroid detects privacy leaks by tracking the flow of sensitive data. Our work is most similar to DroidRanger, which detects malicious applications from known families by static signature matching and unknown families by dynamic recording and manual checking of suspicious system calls. However, our focus is on detecting money-stealing applications, and we emphasize heuristics such as hardcoded exfiltration parameters and notification suppression.

## 3. Design
### Rabbit Year’s Calendar Case Study
We first demonstrate how a real malicious application, "Rabbit Year’s Calendar," steals victims' money by sending SMS messages to a premium-rate number after five screen taps. It also blocks billing-notification messages from telecommunication companies. The behavioral profile of this application can be divided into three steps:
1. **Claiming Needed Permissions:** The application registers `Telephony.SMS_RECEIVED` and claims `SEND_SMS` and `RECEIVE_SMS` permissions.
2. **Sending Message to a Hard-Coded Premium-Rate Number:** The application sends an SMS message to a hard-coded premium-rate number ("1066185829") using the `SmsManager.getDefault()` and `SendTextMessage()` methods.
3. **Blocking SMS Notifications:** To prevent user notifications of this behavior, the application builds a subclass (`SmsReceiver`) of `BroadcastReceiver`, inherits the `onReceive()` function, and uses `abortBroadcast()` to block SMS messages from ISPs.

### System Architecture
MoneyGuard is designed to detect malicious money-stealing applications that surreptitiously send SMS messages, make phone calls, and visit web servers. The system consists of three components:
1. **Billing Permission Extractor:** This component extracts permissions and receivers related to specific billing behaviors from `AndroidManifest.xml`. It checks for permissions such as `SEND_SMS`, `CALL_PHONE`, and `INTERNET`, and registers receivers for intercepting SMS messages and phone calls.
2. **Billing Behavior Identifier:** This component identifies billing-related behaviors, such as sending SMS messages to premium-rate numbers or making calls to fixed premium numbers.
3. **Notification Suppression Detector:** This component detects techniques used to suppress notifications, such as blocking SMS messages from ISPs.

### Table 1: Extracted Billing Permissions
| Billing Behavior | Permission |
|------------------|------------|
| SMS              | SEND_SMS   |
| Phone Call       | CALL_PHONE |
| Internet Access  | INTERNET   |

---

This optimized version aims to improve clarity, coherence, and professionalism while maintaining the essential content and structure of the original text.