regularSQLstatements. Thesyntaxforthisisagaintoprependthevariablenamewithacolon(:).
D.73. PSQL 417
testdb=> \set foo ’my_table’
testdb=> SELECT * FROM :foo;
wouldthenquerythetable my_table. The valueof the variableiscopiedliterally,so it caneven
containunbalancedquotesorbackslashcommands. Youmustmakesurethatitmakessensewhere
youputit. VariableinterpolationwillnotbeperformedintoquotedSQLentities.
ApopularapplicationofthisfacilityistorefertothelastinsertedOIDinsubsequentstatements
tobuildaforeignkeyscenario. Anotherpossibleuseofthismechanismistocopythecontentsof
afileintoafield. Firstloadthefileintoavariableandthenproceedasabove.
testdb=> \set content ’\’’ ‘cat my_file.txt‘ ’\’’
testdb=> INSERT INTO my_table VALUES (:content);
One possible problem with this approach is that my_file.txt might contain single quotes. These
needtobeescapedsothattheydon’tcauseasyntaxerrorwhenthethirdlineisprocessed. This
couldbedonewiththeprogramsed:
testdb=> \set content ‘sed -e "s/’/\\\\\\’/g"  Theportnumberatwhichthedatabaseserverislistening.
%n Theusernameyouareconnectedas(notyourlocalsystemusername).
%/ Thenameofthecurrentdatabase.
% Like%/,buttheoutputistilde(˜)ifthedatabaseisyourdefaultdatabase.
%# Ifthecurrentuserisadatabasesuperuser,thena#,otherwisea>.
%R Inprompt1normally=,butˆifinsingle-linemode,and! ifthesessionisdisconnectedfrom
thedatabase(whichcanhappenif \connectfails). Inprompt2thesequenceisreplacedby
-*,asinglequote,oradoublequote,dependingonwhetherpsqlexpectsmoreinputbecause
thequerywasn’tterminatedyet,becauseyouareinsidea/*... */comment,orbecauseyou
areinsideaquote. Inprompt3thesequencedoesn’tresolvetoanything.
%digits Ifdigitsstartswith0xtherestofthecharactersareinterpretedasahexadecimaldigitand
thecharacterwiththecorrespondingcodeissubstituted. Ifthefirstdigitis0thecharacters
areinterpretedasonoctalnumberandthecorrespondingcharacterissubstituted. Otherwise
adecimalnumberisassumed.
%:name: Thevalueofthepsql,variablename. SeethesectionVariablesfordetails.
%‘command‘ Theoutputofcommand,similartoordinaryback-ticksubstitution.
To insert a percent sign into your prompt, write %%. The default prompts are equivalent to
’%/%R%# ’ for prompts 1 and2, and ’> >’ for prompt 3. Note: This featurewas shamelessly
plagiarizedfromtcsh.
Miscellaneous
psqlreturns0totheshellifitfinishednormally,1ifafatalerrorofitsown(outofmemory,filenot
found)occurs,2iftheconnectiontothebackendwentbadandthesessionisnotinteractive,and
3ifanerroroccurredinascriptandthevariableON_ERROR_STOPwasset.
Beforestartingup,psqlattemptstoreadandexecutecommandsfromthefile$HOME/.psqlrc.
Itcouldbeusedtosetuptheclientortheservertotaste(usingthe\setandSETcommands).
D.73. PSQL 419
GNUreadline
psql supports the readline and history libraries for convenient line editing and retrieval. The
command history is stored in a file named .psql_history in your home directory and is reloaded
when psql starts up. Tab-completion is also supported, although the completion logic makes no
claimtobeanSQLparser. Whenavailable,psqlisautomaticallybuilttousethesefeatures. Iffor
somereasonyoudonotlikethetabcompletion,youcanturnifoffbyputtingthisinafilenamed
.inputrcinyourhomedirectory:
$if psql
set disable-completion on
$endif
(Thisisnotapsqlbutareadlinefeature. Readitsdocumentationforfurtherdetails.)
If you have the readline library installed but psql does not seem to use it, you must make
sure that Postgres’s top-level configure script finds it. configure needs to find both the library
libreadline.a (or a shared library equivalent) and the header files readline.h and history.h (or
readline/readline.hand readline/history.h) in appropriate directories. If you have the library and
headerfilesinstalledinanobscureplaceyoumusttellconfigureaboutthem,forexample:
$ ./configure --with-includes=/opt/gnu/include --with-libs=/opt/gnu/lib ...
Thenyouhavetorecompilepsql(notnecessarilytheentirecodetree).
TheGNUreadlinelibrarycanbeobtainedfromtheGNUproject’sFTPserveratftp://ftp.gnu.org.
Examples
Note: Thissectiononly showsafew examplesspecificto psql. If you wantto learnSQL or get
familiarwithPostgres,youmightwishtoreadtheTutorialthatisincludedinthedistribution.
Thefirstexampleshowshowtospreadaqueryoverseverallinesofinput. Noticethechanging
prompt:
testdb=> CREATE TABLE my_table (
testdb(> first integer not null default 0,
testdb(> second text
testdb-> );
CREATE
Nowlookatthetabledefinitionagain:
testdb=> \d my_table
Table "my_table"
Attribute | Type | Modifier
420 APPENDIXD. REFERENCEMANUAL
-----------+---------+--------------------
first | integer | not null default 0
second | text |
Atthispointyoudecidetochangetheprompttosomethingmoreinteresting:
testdb=> \set PROMPT1 ’%n@%m % %R%# ’
peter@localhost testdb=>
Let’sassumeyouhavefilledthetablewithdataandwanttotakealookatit:
peter@localhost testdb=> SELECT * FROM my_table;
first | second
-------+--------
1 | one
2 | two
3 | three
4 | four
(4 rows)
Youcanmakethistablelookdifferentlybyusingthe\psetcommand:
peter@localhost testdb=> \pset border 2
Border style is 2.
peter@localhost testdb=> SELECT * FROM my_table;
+-------+--------+
| first | second |
+-------+--------+
| 1 | one |
| 2 | two |
| 3 | three |
| 4 | four |
+-------+--------+
(4 rows)
peter@localhost testdb=> \pset border 0
Border style is 0.
peter@localhost testdb=> SELECT * FROM my_table;
first second
----- ------
1 one
2 two
3 three
D.73. PSQL 421
4 four
(4 rows)
peter@localhost testdb=> \pset border 1
Border style is 1.
peter@localhost testdb=> \pset format unaligned
Output format is unaligned.
peter@localhost testdb=> \pset fieldsep ","
Field separator is ",".
peter@localhost testdb=> \pset tuples_only
Showing only tuples.
peter@localhost testdb=> SELECT second, first FROM my_table;
one,1
two,2
three,3
four,4
Alternatively,usetheshortcommands:
peter@localhost testdb=> \a \t \x
Output format is aligned. Tuples only is off. Expanded display is on.
peter@localhost testdb=> SELECT * FROM my_table;
-[ RECORD 1 ]- first | 1 second | one
-[ RECORD 2 ]- first | 2 second | two
-[ RECORD 3 ]- first | 3 second | three
-[ RECORD 4 ]- first | 4 second | four
Appendix
BugsandIssues
• Insome earlierlife psqlallowedthefirstargumenttostartdirectlyafterthe(single-letter)
command. For compatibility this is still supported to some extent but I am not going to
explain the detailshere as this use is discouraged. But if you get strangemessages, keep
thisinmind. Forexample:
testdb=> \foo
Fieldseparatoris"oo",whichisperhapsnotwhatonewouldexpect.
• psql only works smoothly with servers of the same version. That does not mean other
combinationswillfailoutright,butsubtleandnot-so-subtleproblemsmightcomeup.
422 APPENDIXD. REFERENCEMANUAL
• PressingControl-Cduringacopyin(datasenttotheserver)doesn’tshowthemostidealof
behaviors. IfyougetamessagesuchasPQexec: yougottagetoutofaCOPYstateyourself
—simplyresettheconnectionbyentering\c--.
D.74 REINDEX
Name
REINDEX—Recovercorruptedsystemindexesunderstand-alonePostgres
REINDEX{TABLE|DATABASE|INDEX}name[FORCE]
Inputs
TABLE Recreateallindexesofaspecifiedtable.
DATABASE Recreateallsystemindexesofaspecifieddatabase.
INDEX Recreateaspecifiedindex.
name Thenameofthespecifictable/database/indextobebereindexed.
FORCE Recreateindexesforcedly. WithoutthiskeywordREINDEXdoesnothingunlesstarget
indexesareinvalidated.
Outputs
REINDEX Messagereturnedifthetableissuccessfullyreindexed.
Description
REINDEX is usedto recover corruptedsystem indexes. In order to run REINDEX command,
postmastermustbeshutdownandstand-alonePostgresshouldbestartedinsteadwithoptions-O
and-P(anoptiontoignoresystemindexes). Notethatwecouldn’trelyonsystemindexesforthe
recoveryofsystemindexes.
Usage
Recreatethetablemytable:
REINDEX TABLE mytable;
Somemoreexamples:
REINDEX DATABASE my_database FORCE;
REINDEX INDEX my_index;
D.75. RESET 423
Compatibility
SQL92
ThereisnoREINDEXinSQL92.
D.75 RESET
Name
RESET—Restoresrun-timeparametersforsessiontodefaultvalues
RESETvariable
Inputs
variable RefertoSET formoreinformationonavailablevariables.
Outputs
RESETVARIABLE Messagereturnedifvariableissuccessfullyresettoitsdefaultvalue.
Description
RESETrestoresvariablestotheirdefaultvalues. RefertoSET fordetailsonallowedvaluesand
defaults. RESETisanalternateformforSETvariable=DEFAULT.
Notes
SeealsoSETandSHOW tomanipulatevariablevalues.
Usage
SetDateStyletoitsdefaultvalue:
RESET DateStyle;
SetGeqotoitsdefaultvalue:
RESET GEQO;
Compatibility
SQL92
ThereisnoRESETinSQL92.
424 APPENDIXD. REFERENCEMANUAL
D.76 REVOKE
Name
REVOKE—Revokesaccessprivilegefromauser,agrouporallusers.
REVOKEprivilege[,...]
ONobject[,...]
FROM{PUBLIC|GROUPgroupname|username}
Inputs
privilege Thepossibleprivilegesare:
SELECT Privilegetoaccessallofthecolumnsofaspecifictable/view.
INSERT Privilegetoinsertdataintoallcolumnsofaspecifictable.
UPDATE Privilegetoupdateallcolumnsofaspecifictable.
DELETE Privilegetodeleterowsfromaspecifictable.
RULE Privilegetodefinerulesontable/view. (SeeCREATERULE).
ALL Rescindallprivileges.
object Thenameofanobjectfromwhichtorevokeaccess. Thepossibleobjectsare:
• table
• view
• sequence
group Thenameofagroupfromwhomtorevokeprivileges.
username Thenameofauserfromwhomrevokeprivileges. UsethePUBLICkeywordtospecify
allusers.
PUBLIC Rescindthespecifiedprivilege(s)forallusers.
Outputs
CHANGE Messagereturnedifsuccessfully.
ERROR Message returned if object is not available or impossible to revoke privileges from a
grouporusers.
D.76. REVOKE 425
Description
REVOKE allows creator of an object to revoke permissions granted before, from all users (via
PUBLIC)oracertainuserorgroup.
Notes
Referto\zcommandforfurtherinformationaboutpermissionsonexistingobjects:
Database = lusitania
+------------------+---------------------------------------------+
| Relation | Grant/Revoke Permissions |
+------------------+---------------------------------------------+
| mytable | {"=rw","miriam=arwR","group todos=rw"} |
+------------------+---------------------------------------------+
Legend:
uname=arwR -- privileges granted to a user
group gname=arwR -- privileges granted to a GROUP
=arwR -- privileges granted to PUBLIC
r -- SELECT
w -- UPDATE/DELETE
a -- INSERT
R -- RULE
arwR -- ALL
Tip: Currently,tocreateaGROUPyouhavetoinsertdatamanuallyintotablepg_groupas:
INSERT INTO pg_group VALUES (’todos’);
CREATE USER miriam IN GROUP todos;
Usage
Revokeinsertprivilegefromallusersontablefilms:
REVOKE INSERT ON films FROM PUBLIC;
Revokeallprivilegesfromusermanuelonviewkinds:
REVOKE ALL ON kinds FROM manuel;
426 APPENDIXD. REFERENCEMANUAL
Compatibility
SQL92
The SQL92 syntax for REVOKE has additional capabilities for rescinding privileges, including
thoseonindividualcolumnsintables:
REVOKE {SELECT|DELETE|USAGE|ALLPRIVILEGES } […]ONobject
FROM { PUBLIC | username [, ... } {RESTRICT | CASCADE } REVOKE { INSERT |
UPDATE|REFERENCES}[,...] [(column[,...] ) ] ONobject
FROM { PUBLIC | username [, ...] } { RESTRICT | CASCADE } ] Refer to GRANT for
detailsonindividualfields.
REVOKEGRANTOPTIONFORprivilege[,... ONobject
FROM{PUBLIC |username[,...] }{RESTRICT|CASCADE }]Rescindsauthorityfor
a user to grant the specifiedprivilegeto others. Refer to GRANT for detailson individual
fields.
Thepossibleobjectsare:
If user1gives a privilegeWITH GRANT OPTION to user2, anduser2 givesit to user3 then
user1canrevokethisprivilegeincascadeusingtheCASCADEkeyword.
Ifuser1givesaprivilegeWITHGRANTOPTIONtouser2,anduser2givesittouser3,thenif
user1triestorevokethisprivilegeitfailsifhespecifiestheRESTRICTkeyword.