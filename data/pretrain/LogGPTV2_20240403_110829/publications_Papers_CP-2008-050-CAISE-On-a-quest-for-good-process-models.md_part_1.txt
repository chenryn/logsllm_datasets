On a Quest for Good Process Models:
The Cross-Connectivity Metric
Irene Vanderfeesten1, Hajo A. Reijers1, Jan Mendling2,
Wil M.P. van der Aalst1,2, Jorge Cardoso3
1 Technische Universiteit Eindhoven,
Department of Technology Management,
PO Box 513, 5600 MB Eindhoven, The Netherlands
{i.t.p.vanderfeesten, h.a.reijers, w.m.p.v.d.aalst}@tue.nl
2 Queensland University of Technology,
Faculty of Information Technology,
Level 5, 126 Margaret Street, Brisbane, Australia
PI:EMAIL
3 SAP Research CEC, SAP AG
Chemnitzer Strasse 48, 01187 Dresden, Germany
PI:EMAIL
Abstract. Business process modeling is an important corporate activ-
ity, but the understanding of what constitutes good process models is
ratherlimited.Inthispaper,weturntothecognitivedimensionsframe-
work and identify the understanding of the structural relationship be-
tween any pair of model elements as a hard mental operation. Based on
the weakest-link metaphor, we introduce the cross-connectivity metric
thatmeasuresthestrengthofthelinksbetweenprocessmodelelements.
The definition of this new metric builds on the hypothesis that process
models are easier understood and contain less errors if they have a high
cross-connectivity.Weundertakeathoroughempiricalevaluationtotest
this hypothesis and present our findings. The good performance of this
novelmetricunderlinestheimportanceofcognitiveresearchforadvanc-
ing the field of process model measurement.
Keywords: business process modeling, quality metrics, connectivity,
EPCs.
1 Introduction
Business process models are widely used for a variety of purposes, such as sys-
tem development, training, process enactment, costing and budgeting. In many
business applications their primary purpose is to act as a means of communica-
tion suchthataprocessmodelfacilitatestheunderstandingofcomplexbusiness
processes among various stakeholders [16,19,26]. A process model may be used
towards this end much as an architect will use a model to ascertain the views
of users, to communicate new ideas, and to develop a shared understanding
amongst participants. Beyond that, process models are also used as a formal
specificationforthedevelopmentofinformationsystems.Altogether,itishighly
desirable that process models do not contain execution errors such as deadlocks
and that they are easy to understand for the involved stakeholders.
Eventhoughtheoreticalqualityframeworks[18]andpracticalmodelingguide-
lines [2] are available for quite some time, it is only a very recent development
that empirical insights emerge into the factors that influence the quality of pro-
cess models. For instance, recent studies suggest that larger, real-world process
models tend to contain more formal flaws (such as e.g. deadlocks) than smaller
models[22,24].Theotherstudyworthmentioningsupportsthenotionthatwhen
model size is kept constant (i) a higher density of arcs between the nodes in a
model and (ii) a larger number of paths through a model’s logical connectors
negatively affect its understandability [23].
These results are important stepping stones to what we think is a highly de-
sirable asset for process modelers: Concrete guidelines on how to create process
models in such a way that they are easy to understand for people while reduc-
ing the risk on errors. It is important to realize that a reengineering project
within a multinational company may already involve the creation of thousands
of process models [30]. This implies that effective modeling guidelines may lead
to substantial economic benefits. This is of particular importance since most
modelers are non-experts and hardly familiar with sophisticated design issues
[29]. It is a considerable problem for these application areas of process modeling
in practice that the current situation in understanding measurable factors of
process model quality is still immature. While the mentioned experiments have
progressed process model measurement, existing metrics tend to explain not
more than half of the variability in a subject’s understanding of process models
[23]. Clearly, there is a need for a more theoretical stance to advance the design
of process model metrics. In this paper, we build on insights from cognitive re-
search into visual programming languages for the development of a new metric,
theCross-Connectivity (CC) metric,thataimstocapturethecognitiveeffortto
understand the relationship between any pair of process model elements.
The structure of the paper is as follows. In the next section, we will provide
the motivation for the CC metric and its formalization. In Section 3 we will
describe the empirical evaluation of this metric. Then, we will give an overview
of related work, before giving reflections and conclusions in the final section.
2 The Cross-Connectivity Metric
Uptonow,littleworkexistsonmeasuringbusinessprocessmodelsthatconsiders
thecognitiveeffortofamodeluserforunderstandingit.Oneofthefewexamples
is the research on the ControlFlow Complexity(CFC)metric. In its motivation
Cardoso refers to the mental states that may be generated by a process model
andthedifferenttypesofroutingelements[7].Beyondthat,arecentsurveyinto
complexity metrics identifies the cognitive motivation as a potential backbone
[9]. Most other existing model metrics, however, are adaptations of software
artifact quality metrics that do not dig too deep into cognitive foundations. In
suchcases,thetheoreticalbasisfortheirapplicationonprocessmodelsisindirect
at best.
To break away from this tendency, we draw inspiration from the Cognitive
Dimensions Framework, as first introduced in [11]. The motivation behind this
framework is to use research findings from applied psychology for assisting de-
signersofnotationalsystems.Designerscanusetheframeworktoevaluatetheir
designs with respect to the impact that they will have on the users of these de-
signs.Sinceitsintroduction,ithasgainedwidespreadadoptionintheevaluation
and design of information artifacts; for an overview of results, see [4].
For the purpose of this paper, the most important dimension of this frame-
work consists of the hard mental operations that may be incurred through a
particular notation, i.e. the high demand on a user’s cognitive resources. Read-
ing a process model implies some hard mental operations in this regard that
behavioral relationships between model elements have to be constructed in the
mind of the reader. In particular, it is quite difficult – even for experts – to
understand whether pairs of activities in a model with lots of parallelism and
choices are exclusive or not. Furthermore, even if activities are on a directed
path, it is not directly clear on which other elements they depend if there are
lots of routing elements in between them. The Cross-Connectivity (CC) metric
that we define below aims to quantify the ease of understanding this interplay
of any pair of model elements. It builds on the weakest-link metaphor assuming
thattheunderstandingofarelationshipbetweenanelementpaircanonlybeas
easy, in the best case, as the most difficult part. Therefore, we identify suitable
weights for nodes and arcs along a path between two model elements. Our as-
sertion then is that a lower (higher) CC value is assigned to those models that
are more (less) likely to include errors, because they are more (less) difficult to
understand for both stakeholders and model designers.
Below a set of definitions is given, which together form the basis of the
Cross-Connectivitymetric.Theterm‘Cross-Connectivity’ischosenbecausethe
strength of the connections between nodes is considered across all nodes in the
model. To appreciate the formalization below, it is important to note firstly
that the CC metric expresses the sum of the connectivity between all pairs of
nodes in a process model, relative to the theoretical maximum number of paths
betweenallnodes(seeDefinition5).Secondly,weassumethatthepathwiththe
highest connectivity between two nodes determines the strength of the overall
connectivity between those nodes (see Definition 4). Thirdly, the tightness of a
path(i.e.,degreeofconnectivity)isdeterminedbytheproductofthevaluations
of the links connecting the nodes on the path (see Definition 3). So, a single
weaklinkhasitseffectontheentire connection.Finally,differencesinthetypes
of nodes that a path consists of determine the tightness of the arcs connecting
nodes(seeDefinitions1and2).Forexample,anANDconnectoronapathgives
a stronger relation than an XOR connector. At the end of the formalization,
illustrative example are given of the application of the CC metric for small
process models, showing how the metric can be used to select from alternatives.
Definition 1 (Weight of a Node).
Let a process model be given as a graph consisting of a set of nodes (n ,n ,...∈
1 2
N) and a set of directed arcs (a ,a ,...∈A). A node can be of one of two types:
1 2
(i) task, e.g. t ,t ∈ T, and (ii) connector, e.g. c ,c ∈ C. Thus, N = T ∪C.
1 2 1 2
The weight of a node n, w(n), is defined as follows:
 11 ,, ii ff nn ∈∈ CC ∧∧ nn ii ss oo ff tt yy pp ee XA ON RD
w(n)= d
2d1 + 2 2d d− −2 · d1 , if n∈C∧n is of type OR
−1 1
1 , if n∈T
with d the degree of the node (i.e. the total number of ingoing and outgoing arcs
of the node).
There are three remarks we would like to make. In the first place, note that the
definition above assumes that the process model consists of tasks and connec-
tors. Tasks have at most one input and output arc while connectors can have
multiple input and output arcs. A connector of type AND with multiple input
arcs is a so-called AND-join, i.e., it synchronizes the various flows leading to
the join. The OR-split connector has a behavior in-between an XOR-split (one
output arc is selected) and AND-split (all output arcs are chosen). A connector
can be both a join and a split (i.e. having multiple input and multiple output
arcs), provided that both are of the same type. Secondly, note that we treat all
modelnodesasuniqueelements,eventhoughtheir(business)semanticsmaybe
the same. In this way, for example, we support the inclusion of duplicate tasks.
Finally, Definition 1 does not correspond to a concrete process modeling lan-
guage with well-defined semantics. It captures those routing elements that can
be expressed with standard process modeling languages such as EPCs, UML
Activity Diagrams, Petri nets, BPMN, or YAWL [1].
Mostofthevaluesforw(n)inDefinition1arestraightforwardgiventheintent
ofthismetric,e.g.,arcsconnectedtoanANDconnectorwillhaveahigherweight
thanarcsconnectedtoanXORconnectorbecausethelatterinvolvesconsidering
optionality. The only value that requires some explanation is the value for the
ORconnector.FortheORconnectoritisnotclearupfronthowmanyofthearcs
will be traversed during an execution of the process, e.g., in case of an OR split
with two outgoing arcs either one of the arcs can be traversed, or both of the
arcs might be used. This behavior is reflected in the definition of the weight for
an OR connector. The number of all possible combinations of d arcs is: 2d−1.
Only one of those combinations (i.e. 1 out of 2d−1) is similar to the situation
in which the node would have been an AND, namely the situation in which all
arcs are traversed. This particular combination gets a weight of 1 (since that is
the weight for an AND connector from Definition 1). Therefore, the first part of
the formula for the OR connector is: 1 ·1= 1 . All other combinations of
2d−1 2d−1
arcs can be seen as separate XOR nodes with weight 1. Thus, in 2d−2 out of
d
2d −1 combinations a weight of 1 is added, which leads to the second part of
d
the formula.
The following definition shows that the weight of an arc is based on the
weight of the corresponding nodes.
Definition 2 (Weight of an Arc).
Let a process model be given by a set of nodes (N) and a set of directed arcs (A).
Each directed arc (a) has a source node (denoted by src(a)) and a destination
node (denoted by dest(a)).
The weight of arc a, W(a), is defined as follows:
W(a)=w(src(a))·w(dest(a))
Definition 3 (Value of a Path).
Let a process model be given by a set of nodes (N) and a set of directed arcs (A).
A path p from node n to node n is given by the sequence of directed arcs that
1 2
should be followed from n to n : p =. The value for a path p,
1 2 1 2 x
v(p), is the product of the weights of all arcs in the path:
v(p)=W(a )·W(a )·...·W(a )
1 2 x
Definition 4 (Value of a Connection).
Let a process model be given by a set of nodes (N) and a set of directed arcs (A)
andletP bethesetofpathsfromnoden ton .Thevalueoftheconnection
n1,n2 1 2
from n to n , V(n ,n ), is the maximum value of all paths connecting n and
1 2 1 2 1
n :
2
V(n ,n )= max v(p)
1 2
p∈Pn1,n2
If no path exists between node n and n , then V(n ,n ) = 0. Also note that
1 2 1 2
loops in a path should not be considered more than once, since the value of
the connection will not be higher if the loop is followed more than once in the
particular path.
Basedontheabovevaluationofconnectivity(i.e.,tightnessoftheconnection
between two nodes), we define the Cross-Connectivity metric.
Definition 5 (Cross-Connectivity (CC)).