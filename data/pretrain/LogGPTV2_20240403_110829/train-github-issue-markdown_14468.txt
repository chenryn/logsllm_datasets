## Feature request
Implement NodeJS v12+ internal package.json imports that only apply to import
specifiers from within the package itself.
NodeJS documentation:
https://nodejs.org/api/packages.html#packages_subpath_imports
**What is the expected behavior?**
> Entries in the imports field must always start with # to ensure they are
> disambiguated from package specifiers.
>
> For example, the imports field can be used to gain the benefits of
> conditional exports for internal modules:
>  
>  
>     // package.json
>     {
>     "imports": {
>        "#dep": {
>          "node": "dep-node-native",
>          "default": "./dep-polyfill.js"
>       }
>     },
>      "dependencies": {
>       "dep-node-native": "^1.0.0"
>      }
>     }
>  
>
> where import '#dep' does not get the resolution of the external package dep-
> node-native (including its exports in turn), and  
>  instead gets the local file ./dep-polyfill.js relative to the package in
> other environments.
>
> Unlike the "exports" field, the "imports" field permits mapping to external
> packages.
>
> The resolution rules for the imports field are otherwise analogous to the
> exports field.
**What is motivation or use case for adding/changing the behavior?**
  1. Maintaining interoperability with node package.json specifications.
  2. This feature dis-incentive the use of subpath exports + self-referencing package for internal access. It offers a clean way to replace these `import { X } from "../../../lib"`, (e.g: by `import { X } from "#lib"`).
**How should this be implemented in your opinion?**
No idea, but looks like webpack subpath exports already implement most of the
feature.
**Are you willing to work on this yourself?**  
no