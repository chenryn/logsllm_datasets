---
title: Calling an API from another API
description: Ensure Zero Trust when you have one API that needs to call another API and securely develop your application when it's working on behalf of a user.
author: janicericketts
ms.author: jricketts
ms.service: identity
ms.topic: conceptual
ms.date: 10/10/2022
ms.custom: template-concept
ms.collection:
  - zerotrust-dev
# Customer intent: As a developer, I want to ensure Zero Trust when I have one API that needs to call another API so that I can securely develop my application when it is working on behalf of a user.
---
# Calling an API from another API
How do you, as a developer, [ensure Zero Trust](overview.md) when you have one API that needs to call another API? In this article, you'll learn how to securely develop your application when it's working on behalf of a user.
When a user drives an app's UI, the app might use a delegated permission so that the API knows which user on whose behalf the app is working. It would inspect the subject (sub) claim or object ID (oid) and tenant ID (tid) claims in the access token that the app provides when calling the API. The API wouldn't rely on the untrusted app, which is just a call coming from somewhere on the network. Instead, it would validate the token to ensure that the API only works on behalf of the app user that Microsoft Entra ID verified.
When one API (we'll refer to it as the *Original API*) calls another, it's vital that the API that we're calling (we'll refer to it as the *Downstream API*) follows the above-described validation process. The Downstream API can't rely on an untrusted network source. It must get the user identity from a properly validated access token.
If the Downstream API doesn't follow the proper validation process, the Downstream API must rely on the Original API to provide the identity of the user in another way. The Downstream API might incorrectly use an application permission to perform the operation. Then the Original API would become the sole authority over which users could achieve which results against the Downstream API. The Original API could intentionally (or unintentionally) allow a user to accomplish a task that the user couldn't otherwise accomplish. For example, one user could change the details of another user or read and update documents that the user doesn't have permission to access. Improper validation can cause serious security issues.
For better security, the Original API acquires a [delegated permission](developer-strategy-delegated-permission.md) access token to provide to the Downstream API when the Original API makes the call. Let's walk through how this works.
## Client App acquires access token to call Original API
The following diagram shows the Client App on the left and the Original API on the right.
:::image type="complex" source="../media/develop/api-calls-api/diagram-API-calls-API-slide-01-inline.png" alt-text="Diagram shows Client App with ID and access tokens on the left and the Original API that requires authorization on the right." lightbox="../media/develop/api-calls-api/diagram-API-calls-API-slide-01-expanded.png":::
    Diagram title: The Client App acquired an access token to call the Original API. Diagram subtitle: The Client Application has an access 'A' token that allows it to work on behalf of user identified in token to call the Original API. Diagram components: A representation of a cloud appears in the top center of the slide enclosing a Microsoft Entra ID icon. On the lower left, a rectangle shape represents the Client App. Below the Client App rectangle are two hexagons shapes labeled 'ID' and 'A' that represent ID and access tokens. On the lower right, a cube-shaped icon, a cloud shape, and a world icon represent the Original API. To its left, a square shape label is 'Authorization Required.' An arrow connects the shapes on the left to the shapes on the right.
:::image-end:::
The Client Application has acquired a delegated permission access token (indicated by the pentagon shape with the "A" label) to the Original API. The delegated permission access token allows it to work on behalf of the user to call the Original API that requires authorization.
## Client App gives access token to Original API
The animation below shows the Client App giving the access token to the Original API. The Original API fully validates and inspects the access token to determine the identity of the Client App's user.
:::image type="complex" source="../media/develop/api-calls-api/diagram-API-calls-API-slide-01-to-02-inline.gif" alt-text="Animated diagram shows Client App on the left giving an access token to the Original API that requires authorization on the right." lightbox="../media/develop/api-calls-api/diagram-API-calls-API-slide-01-to-02-expanded.gif":::
    The animated diagram shows two diagrams with a motion transition between the first diagram and the second diagram. First diagram title: The Client App acquired an access token to call the Original API. First diagram subtitle: The Client Application has an access 'A' token that allows it to work on behalf of user identified in token to call the Original API. First diagram components: A representation of a cloud appears in the top center of the slide enclosing a Microsoft Entra ID icon. On the lower left, a rectangle shape represents the Client App. Below the Client App rectangle are two hexagons shapes labeled 'ID' and 'A' that represent ID and access tokens. On the lower right, a cube-shaped icon, a cloud shape, and a world icon represent the Original API. To its left, a square shape label is 'Authorization Required.' An arrow connects the shapes on the left to the shapes on the right. Second diagram title: The Client App gives the access token to the Original API. Second diagram components: A representation of a cloud appears in the top center of the slide enclosing a Microsoft Entra ID icon. On the lower left, a rectangle shape represents the Client App. Below the Client App rectangle is a hexagon shape labeled 'ID' that represents an ID token. On the lower right, a cube-shaped icon, a cloud shape, and a world icon represent the Original API. To its left, a square shape label is 'Authorization Required.' To its left is a hexagon shape labeled 'A' that represents an access token. An arrow connects the shapes on the left to the shapes on the right.
:::image-end:::
## Original API performs token validation and enforcement
The next animation shows that, after the Client App gives the access token to the Original API, the Original API performs token validation and enforcement. If all is good, the API will proceed and service the request for the Client App.
:::image type="complex" source="../media/develop/api-calls-api/diagram-API-calls-API-slide-02-to-03-inline.gif" alt-text="Animated diagram shows Client App with ID token on the left giving the access token to the Original API on the right." lightbox="../media/develop/api-calls-api/diagram-API-calls-API-slide-02-to-03-expanded.gif":::
   The animated diagram shows two diagrams with a motion transition between the first diagram and the second diagram. First diagram title: The Client App gives the access token to the Original API. First diagram components: A representation of a cloud appears in the top center of the slide enclosing a Microsoft Entra ID icon. On the lower left, a rectangle shape represents the Client App. Below the Client App rectangle is a hexagon shape labeled 'ID' that represents an ID token. On the lower right, a cube-shaped icon, a cloud shape, and a world icon represent the Original API. To its left, a square shape label is 'Authorization Required.' On its left is a hexagon shape labeled 'A' that represents an access token. An arrow connects the shapes on the left to the shapes on the right. Second diagram title: The Original API performs token validation and enforcement. If all good, the API proceeds and services the request. Second diagram components: A representation of a cloud appears in the top center of the slide enclosing a Microsoft Entra ID icon. On the lower left, a rectangle shape represents the Client App. Below the Client App rectangle is a hexagon shape labeled 'ID' that represents an ID token. On the lower right, a cube-shaped icon, a cloud shape, and a world icon represent the Original API. An arrow connects the shapes on the left to the shapes on the right. Above the arrow, to the right and below the cloud shape, is a hexagon shape labeled 'A' that represents an access token.
:::image-end:::
## Original API can't use access token to call Downstream API
The following animation shows that the Original API now wants to call a Downstream API. However, the Original API can't use the access token to call the Downstream API.
:::image type="complex" source="../media/develop/api-calls-api/diagram-API-calls-API-slide-04-to-05-inline.gif" alt-text="Animated diagram shows Client App giving access token to Original API. Authorization Required prevents Original API from giving token to Downstream API." lightbox="../media/develop/api-calls-api/diagram-API-calls-API-slide-04-to-05-expanded.gif":::
   The animated diagram shows two diagrams with a motion transition between the first diagram and the second diagram. First diagram title: The Original API wants to call a Downstream API. First diagram components: A representation of a cloud appears in the top center of the slide enclosing a Microsoft Entra ID icon. On the lower left, a rectangle shape represents the Client App. Below the Client App rectangle is a hexagon shape labeled 'ID' that represents an ID token. In the lower middle, a cube-shaped icon, a cloud shape, and a world icon represent the Original API. An arrow connects the shapes on the left to the shapes in the middle. Above the arrow, to the left and below the cloud shape, is a hexagon shape labeled 'A' that represents an access token. Second diagram title: The Original API can't use the token to call the Downstream API. Second diagram components: A representation of a cloud appears in the top center of the slide enclosing a Microsoft Entra ID icon. On the lower left, a rectangle shape represents the Client App. Below the Client App rectangle is a hexagon shape labeled 'ID' that represents an ID token. In the lower middle, a cube-shaped icon, a cloud shape, and a world icon represent the Original API. An arrow connects the shapes on the left to the shapes in the middle. Above the arrow, to the left and below the cloud shape, is a hexagon shape labeled 'A' that represents an access token. On the lower right, a cube-shaped icon, a cloud shape, and a world icon represent the Downstream API. To its left, a square shape label is 'Authorization Required.' An arrow connects the shapes in the middle to the shapes on the right.
:::image-end:::
## Original API goes back to Microsoft Entra ID