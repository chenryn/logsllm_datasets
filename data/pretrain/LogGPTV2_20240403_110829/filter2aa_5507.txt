### ret2dir概述
ret2dir 是哥伦比亚大学网络安全实验室在 2014 年提出的一种辅助攻击手法，主要用来**绕过 smep、smap、pxn 等用户空间与内核空间隔离的防护手段**，原论文见[此处](http://www.cs.columbia.edu/~vpk/papers/ret2dir.sec14.pdf)。
我们首先来思考一下 [x86 下的 Linux kernel 的内存布局](https://elixir.bootlin.com/linux/latest/source/Documentation/x86/x86_64/mm.rst)，存在着这样的一块区域叫做 `direct mapping area`，**线性地直接映射了整个物理内存空间**：
```rst
ffff888000000000 | -119.5  TB | ffffc87fffffffff |   64 TB | direct mapping of all physical memory (page_offset_base)
```
这块区域的存在意味着：对于一个被用户进程使用的物理页框，**同时存在着一个用户空间地址与内核空间地址到该物理页框的映射**，即我们利用这两个地址进行内存访问时访问的是同一个物理页框。
当开启了 SMEP、SMAP、PXN 等防护时，内核空间到用户空间的直接访问被禁止，**我们无法直接使用类似 ret2usr 这样的攻击方式**，但利用内核线性映射区对整个物理地址空间的映射，**我们可以利用一个内核空间上的地址访问到用户空间的数据，从而绕过 SMEP、SMAP、PXN 等传统的隔绝用户空间与内核空间的防护手段**。
下图便是原论文中对 ret2dir 这种攻击的示例，我们在用户空间中布置的 gadget 可以通过 direct mapping area 上的地址**在内核空间中访问到**
但需要注意的是**在新版的内核当中 direct mapping area 已经不再具有可执行权限**，因此我们很难再在用户空间直接布置 shellcode 进行利用，**但我们仍能通过在用户空间布置 ROP 链的方式完成利用**
比较朴素的一种使用 ret2dir 进行攻击的手法便是：
- 利用 mmap 在用户空间大量喷射内存。
- 利用漏洞泄露出内核的“堆”上地址（通过 kmalloc 获取到的地址），**这个地址直接来自于线性映射区**。
- 利用泄露出的内核线性映射区的地址**进行内存搜索**，从而找到我们在用户空间喷射的内存。
**此时我们就获得了一个映射到用户空间的内核空间地址，我们通过这个内核空间地址便能直接访问到用户空间的数据，从而避开了传统的隔绝用户空间与内核空间的防护手段**。
需要注意的是我们往往没有内存搜索的机会，因此需要**使用 mmap 喷射大量的物理内存写入同样的 payload**，之后再随机挑选一个线性映射区上的地址进行利用，这样我们就**有很大的概率命中到我们布置的 payload 上**，这种攻击手法也称为 `physmap spray`。