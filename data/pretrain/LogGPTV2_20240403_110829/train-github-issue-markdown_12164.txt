    What does 'go version' print?
    go version devel +26aa53304a48 Fri Mar 07 16:08:12 2014 -0500 linux/amd64
    What steps reproduce the problem?
    If possible, include a link to a program on play.golang.org.
    package main
    // #cgo pkg-config: cairo
    // #include 
    import "C"
    //export test
    func test(x *C.cairo_t) {}
    func main() {}
    What happened?
    COMPILER OUTPUT
        # command-line-arguments
        Go type not supported in export: [0]byte
        Go type not supported in export: [0]byte
    ...CGO1.GO FILE
        func test(x *[0]byte,)  {}
    _CGO_EXPORT.H FILE
        extern void test(int* p0);
    What should have happened instead?
    COMPILER OUTPUT
        [successful build]
    ...CGO1.GO FILE
        func test(x *_Ctype_cairo_t,)  {}
    _CGO_EXPORT.H FILE
        extern void test(cairo_t* p0);
    Please provide any additional information below.
    In this case, cairo/cairo.h defines cairo_t as
        typedef struct _cairo cairo_t;
    but _cairo is never explicitly defined, which is possibly what is confusing cgo.