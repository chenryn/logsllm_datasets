Slave_SQL_Running_State：从服务器 SQL线程的状态。它与 SHOW PROCESSLIST显示
等待，则为 NULL。此列是在MySQL 5.6.1里引入的。
SQL_Delay：复制延迟时间（单位为秒）。
Master_Info_File：从服务器的master.info文件的名字。此列是在MySQL 5.6.1里引
Master_UUID：主服务器的 server_uuid值。此列是在 MySQL 5.6.1里引入的。
Replicate_Igmore_Server_Ids：需要忽略事件的那些服务器的ID。
任何错误，则它们的值为0和空串。服务器会把非空信息值写入其错误日志。
Last_IO_Errno、Last_IO_Error：IO 线程最近一次错误的编号和信息。如果没有发生
程并处于闲等状态，则这个值为零；如果还没有执行过任何事件或者从服务器的参数刚被
Master_SSL_Crlpath 是在 MySQL 5.6.3里引入的。
Master_SSL_CA_File、
SSL支持。
No 表示不能使用 SSL连接，Ignored表示允许使用SSL连接但从服务器在编译时没有启用
Master_SSL_Allowed：是否可以使用SSL连接主服务器。Yes 表示可以使用 SSL连接，
■Relay：从服务器将不断读取，一直到其SQL线程到达中继日志的指定位置为止。
Until_Condition：START SLAVE语句的 UNTIL子句所给出的条件，该条件决定着SQL
Relay_Log_Space：中继日志文件的总长度。
人的。
是它们适用于SQL线程。
CHANGEMASTER或RESETSLAVE语句修改过，则这个值为NULL。
服务器事件所记录的那个时间戳之间的差值（单位为秒）。
Cipher、Master_SSL_Key、Master_SSL_Verify_Server_Cert、Master_SSL_Crl、
■None：不指定UNTIL子句。
线程应该在何时停止读取和执行事件。
位置。
Exec_Master_Log_Pos：从服务器的 SQL线程在主服务器的二进制日志里的当前执行
置全局系统变量sql_slave_skip_counter，可以使从服务器跳过事件。）
Skip_Counter：当前从服务器应该跳过的那些来自主服务器的日志事件的数量。（通过设
■Master：从服务器将不断读取，一直到其SQL线程到达主服务器二进制日志的指定位
Last_Errno、Last_Error:这些列是Last_SQL_Errno和Last_SQL_Error的别名。
别显式地包含在复制过程中或被排除在外；如果没有内容，则为空白。
table、--replicate-wild-do-table和--replicate-wild-ignore-table选项，分
--replicate-ignore-db
置为止。
Master_SSL_CA_Path、
--replicate-do-table
。此列是在MySQL5.6.1里引入的。
E.1.SQL 语句语法（非复合语句）
Master_SSL_Cert、
。如果SQL线程已经赶上了IO线
--replicate-ignore-
Master_SSL
707
---
## Page 728
子句，则只输出那些能够满足给定表达式的行。
和view)。如果包含LIKE子句，则只显示其名称与给定模式相匹配的表的信息。如果包含WHERE
句也可以显示数据库里的视图，但是所有列都为 NULL（除了Name和Comment，它们分别为视图名
得状态变量的信息。
SESSION 的同义词。
别的值
们分别代表所有客户端的总和和当前客户端的值。默认情况下，SHOW语句将显示给定变量在会话级
出那些能够满足给定表达式的行。
包含LIKE子句，则只显示其名称与给定模式相匹配的变量的信息。如果包含WHERE子句，则只输
708
也可以查询 INFORMATION_SCHEMA 库里的 GLOBAL_STATUS 表和 SESSION_STATUS 表，以获
MySQL服务器可以显示全局级（服务器范围的）或会话级（客户端特定的）的状态变量值。它
口
SHOWTABLESTATUS语句的输出包含下面几列。
显示与数据库里的非TEMPORARY表有关的描述性信息（要求对这些表拥有一定的权限）。此语
与如何使用状态变量有关的更多信息请参考12.3.2节。与各个变量有关的描述请参考附录D。
如果某个变量只有全局值，那么对于GLOBAL和 SESSION，你将得到相同的值。LOCAL 是
SHON SESBAO SARUOS 
值。如果要显式查看全局值或者会话值，可以指定一个范围指示符：
显示服务器的状态变量和它们的值。这些变量提供的是与服务器的运行状态有关的信息。如果
口Last_SQL_Error_Timestamp：最近一次 SQL线程出错的时间。此列是在MySQL5.6.2里
口Last_IO_Error_Timestamp：最近一次IO线程出错的时间。此列是在MySQL5.6.1里引
口 Master_Bind：从服务器绑定的网络接口。此列是在MySQL5.6.1里引入的。
口
口
口
D
口
D
口
口
口
SHOWTABLESTATUS
SHOW [GLOBALI SESSION] STATUS
·SHOWSTATUS
Name：表名。
引入的。在MySQL 5.6.2之前，时间戳是Last_SQL_Error 值的一部分。
Check_time：最近一次表检查或修复时间；如果存储引擎不维护这个值，或者如果表从未被检
Update_time：最近一次表修改时间；如果存储引擎不维护这个值，则它为 NULL。
Create_time：表创建时间。
Auto_increment：表的AUTO_INCREMENT列将生成的下一个值。
Row_format：行存储格式。它来自为 CREATE TABLE 指定的表选项 ROW_FORMAT。
Version：表的.frm文件的版本号。
入的。在MySQL 5.6.2之前，时间戳是Last_IO_Error 值的一部分。
间数量。（此表可能在系统表空间里，也可能拥有其自己的表空间。）
语句来优化它。对于InnoDB表，此列表示的是InnoDB表空间（表存在在其中）里的空闲空
Data_free：数据文件中尚未使用的字节数。如果这个值很大，
Index_length：索引文件的实际字节长度。
Max_data_length：表的数据文件所能增长到的最大长度。
Data_length：表的数据文件的实际字节长度。
Avg_row_length：表的各个行的平均字节数。
Rows：表里的行数。对于某些存储引擎，如InnoDB，这个数字只是一个近似值。
Engine：存储引擎（如 InnoDB、MyISAM等）
附录ESQL语法参考
，可以执行OPTIMIZE TABLE
---
## Page 729
一条语句执行成功，SHOW WARNINGS 语句将返回一个空集。
表，以
如果没有会话值，则显示全局值。）如果要显式查看全局值或会话值，可以指定一个范围指示符：
况下，SHOWVARIABLES会把各个会话变量显示出来。（在MySQL5.5.3之前，它显示的是会话值；
满足给定表达式的行。
子句，则只显示其名称与给定模式相匹配的变量的信息。如果包含WHERE子句，则只输出那些能够
些能够满足给定表达式的行。
LIKE子句，则只显示其名称与给定模式匹配的触发器的信息。如果包含WHERE子句，则只输出那
定数据库里的触发器信息。输出内容只会包含对其拥有TRIGGER权限的那些表的信息。如果包含
WHERE子句，则只输出那些能够满足给定表达式的行。
是视图（VIEW)。如果包含LIKE子句，则只显示其名称与给定模式相匹配的表的信息。如果包含
图名字。可以指定关键字FULL，以显示一列信息，用于表明每个行引用的是表（BASE_TABLE)，还
SHOW coUNT（*）WARNINGS 显示的是保存在系统变量warning_count 里的信息计数值。（还
 SHON LOA vARARES
服务器可以显示全局级（服务器范围的）或会话级（客户端特定的）的系统变量的值。默认情
SHOW WARNINGS 语句将显示最近一条语句的出错信息、警告信息或其他提示性信息。如果最近
·SHOW WARNINGS
关于如何使用系统变量的更多信息请参考12.3.1节。与各个变量有关的描述请参考附录 D。
以获得系统变量的信息。
你也可以检查INFORMATION_SCHEMA 库里的 GLOBAL_VARIABLES 表和 SESSION_VARIABLES
使用SELECT语句的好处是可以方便地在特定的上下文里处理查询结果。
SELECT @@GLOBAL.sSql_mode, @@SESSION.sql_mode, @@LOCAL.sql_mode;
LOCAL是SESSION 的同义词。也可以使用SELECT语句来检索某个动态变量的值：
显示系统变量及其值。这些变量提供的是各种与服务器配置和功能有关的信息。如果包含LIKE
SHOW[GLOBALI SESSION] VARIABLES
·SHOW VARIABLES
这条语句可以显示与默认数据库里的各个触发器有关的信息；如果带有FROM子句，则显示给
SHOW TRIGGERS[FROM db_name]
·SHOW TRIGGERS
显示数据库里的非 TEMPORARY表的名字（要求对这些表拥有一定的权限）。此语句也会显示视
SHOW[FULL] TABLES[(FROMI IN) db_name]
SHOW TABLES
口Comment：在创建表时给出的任何注释文本。
口
口
口
[LIKE'pattern'
[LIKE'pattern'
Checksum：表的校验和；如果此前未被计算过，则它为NULL。
[LIKE'pattern'
为 table_option值而给出的额外选项。
Create_options：在当初创建表的 CREATE TABLE 语句或随后的 ALTER TABLE语句里作
Collation：表的排序规则。排序规则的名字隐含了所用字符集的名字。
查或修复过，则它为NULL。
WARNINGS
WHERE where_expr]
IWHEREwhere_expr]
WHERE where_expr]
E.1.SQL语句语法（非复合语句）
709
含
---
## Page 730
使用。它们是在MySQL5.6.5里引入的。
种访问模式，TEMPORARY临时表总是可以被修改。）这些特性是互斥的，并且不能在同一条语句里
SERIALIZABLE时，它才会发挥作用。
InnoDB，这个子句不会更改当前的隔离级别，因此只有隔离级别为 REPEATABLE READ 或
前的状态。如果要显式地设置自动提交模式，可以设置系统变量autocommit（如2.12.1节所述）。
面这些选项；必须按下面的顺序来指定它们。
则，同时启动IVO和SQL两个线程。
子句并生成一条警告信息。如果该子句包含 SQL_THREAD 选项，则从服务器将只启动SQL线程；否
是从服务器的中继日志里的指定位置为止。如果SQL线程已经在运行，则从服务器将忽略UNTIL
日志文件和位置选项，从服务器在启动后将一直运行到它的SQL线程到达主服务器的二进制日志或
SLAVE 将同时启动IVO 线程和 SQL 线程，而 STOP SLAVE 将同时中止这两个线程。可以指定
止。
管它们是否被保存。
存起来供 SHOW WARNINGS 语句显示的信息个数，但是warning_count 统计的是所有信息，而不
大于SHOWWARNINGS语句所显示的信息的个数。
710
READWRITE 和 READ ONLY 特性决定了事务的访问模式，即是否允许事务修改表。（不管是哪
如果带有WITHCONSISTENT SNAPSHOT 特性，会使事务以一致性读取方式开始执行。对于
在事务被提交或回滚之后，自动提交模式将恢复到它在STARTTRANSACTION语句开始执行之
在自动提交模式被禁用的情况下，要执行的语句将作为一个整体被提交或回滚。
通过禁用自动提交模式的方式开始一个事务，一直到遇见下一条COMMIT或ROLLBACK语句为
口USER：用户名。不能给定为NULL 或空串；如果存在PASSWORD 选项，则必须指定它。
自MySQL5.6.4起，STARTSLAVE可以指定身份认证插件所需要的参数。这个语法允许使用下
如果没有指定任何线程或SQL_THREAD 选项，则可以使用UNTIL子句。根据这个子句所给出的
口SQL_THREAD：启动或停止SQL线程，该线程负责从中继日志读出事件并执行。
口IO_THREAD：启动或停止IO线程，该线程负责从主服务器读取事件并把它们写入中继日志。
●START TRANSACTION
口
口
这条语句，和STOP SLAVE语句，控制着从服务器上复制线程的操作。不带任何选项时，START
STARTASE FL THRD UTL
STARS BYLA 
STARTTRANSACTION
口
START SLAVE[threadoption[,threadoption]...]
START SLAVE
如果给出了LIMIT子句，则可限定要显示的行数。其语法与 SELECT的LIMIT子句相同。
PLUGIN_DIR：插件所在的目录。
DEFAULT_AUTH：身份认证插件名。如果省略，则默认为MySQL本地密码认证方式。
PASSWORD：用户密码。
READ ONLY
附录ESQL语法参考
WRITE
RELAY_LOG_POS = position
[PASSWORD=
MASTER_LOG_POS = position
。系统变量max_error_count限制的是可以被保
---
## Page 731
来，并把ORDER BY或LIMIT 添加到最后那个右括号的后面。在这种情况下，在ORDER BY子句中
ORDER BY或LIMIT子句当作一个整体应用于UNION，则需要将每一条 SELECT语句用圆括号括起
确定LIMIT子句会应用于哪些行。它不会对最终UNION结果里的行顺序产生影响。）如果需要把
则默认行为是剔除重复的行。DISTINCT联合操作的优先级比它左侧的 ALL联合操作的更高：
个关键字ALL，以保留重复的行，并返回所有选取的行。如果关键字DISTINCT和ALL都没有给出，
列名来确定。各输出列的数据类型将根据所选表相应列中的全体数据值来确定。
果集里生成出同样个数的输出列。在最终结果里，各输出列的名字将根据第一条SELECT语句里的
多相关信息请参考12.4节。
在后续的重启中不会再加载它。INSTALL PLUGIN 要求对 mysql.plugin 表拥有 DELETE 权限。更
的时候执行该语句，会出现错误。
方式快。要求拥有表的DROP权限。
的各个允许值的详细信息请参考STARTSLAVE条目。
的所有表锁。在某个事务进行的过程中执行 START TRANSACTION 语句将导致该事务被隐式地提交。
可以在UNION关键字的后面加上一个DISTINCT关键字，以剔除重复的输出行；也可以加上一
如果想要让各个的 SELECT语句都带上ORDER BY和LIMIT子句，则必须把每一个 SELECT语
MySql> SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 1;
UNION用来把多条SELECT语句的检索结果合并在一起。每条SELECT语句必须在它自己的结
mySql> SELECT 1 UNION ALL SELECT 2 UNION SELECT 1;
·UNION
卸载指定的插件，并将它从 mysql.plugin 表里注销掉（如果它列在其中的话)，以便服务器
UNINSTALL PLUGIN plugin_name
·UNINSTALLPLUGIN
这条语句不是事务安全的。如果在事务里执行TRUNCATE TABLE语句，或者在你拥有显式表锁
InnoDB不允许使用这条语句；如果有外键引用了这个表，该语句会返回一个错误。
TRUNCATETABLE 将通过删除并重建表的方式快速清空表的内容。此操作比单独删除每个行的
·TRUNCATE TABLE
这条语句，和 START SALVE 语句，控制着从服务器上复制线程的操作。关于 threadoption
TRUNCATE[TABLE]tbl_name
STOP SLAVE [thread_option[, thread option]...]
·STOP SLAVE
f---+
12
1
ALL]
E.1SQL语句语法（非复合语句）
711
---
## Page 732
匹配的那些行，把quantity值从t2表复制到t1表：
子句可以对多个表里的列进行更新。例如，下面的语句将更新t1表里的ia值与t2 表里的id 值相
语句的相同。