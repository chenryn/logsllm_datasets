Date
Probes
Probes (val.)
Probes (disc.)
VPs
Queries
Queries (timeout)
Responses
Responses (val.)
Responses (disc.)
Resolvers (VPs)
Resolvers(Auth.)
ASes
ASes
in-bailiwick
600 s
4h
out-of-bailiwick
600 s
4h
AAAA probeid.sub.cachetest.net
20190314
9150
9053
97
16103
387037
10436
368478
366853
1625
6679
1696
14884
2444
20190315
9131
8864
267
15618
367060
39471
341707
340522
1185
6364
1629
13187
2474
Table 3: Bailiwick experiments [43].
the response changes reveals the caching behavior of the recur-
sive resolver. We are looking to see if the NS and A records are
independent, or if they are linked, causing the A record to expire
earlier than it needs to, when the NS record times out. To ensure the
test answer is not cached, Atlas probes make queries that include
PROBEID in the identifier (see Table 3), and replies (AAAA records)
have TTL of 60 s, one tenth our probe interval.
Table 3 shows the results of about 340k valid responses from 15.6k
RIPE Atlas VPs. (We discard responses that included NS records,
SERVFAIL, and others that did not include the answer we expected.)
Figure 6 is a timeseries chart of the AAAA answers received
by our vantage points. We count how many responses were sent
by each authoritative server (original and new), aggregated to 10-
minute bins. In this figure, the first arrow down shows the time
when we renumber the IP address of the authoritative server (after
9 minutes).
This figure shows that before renumbering (at 9 minutes), all
queries are answered by the original server (due to edge effects
around Atlas measurements, the very first round has fewer queries,
but rounds after that include results for all VPs). From 9 to 60
minutes we see that some resolvers (the dark blue bars) continue
to use the original server, showing they have cached and trust its
A and NS records. Other resolvers (light yellow bars) switch to the
new server, suggesting they re-fetched the new A record. We see
that most resolvers trust their cache up to the 1-hour TTL.
After one hour the NS records begin to expire. Over the next
hour we can test if the recursive resolver trusts its already-cached,
yet-still-valid TTL for the A record, or if it drops it and refreshes
it anyway and discovers the new server. We see that with an in-
domain server, very few recursives continue to trust the cached A
record—in-domain servers have tied NS and A record cache times in
practice. Specifically, about 90% of the resolvers that queried on the
first round (blue on t = 0) refresh both the NS and A records at
t = 60 min., switching to the new server. We confirm this result
from the authoritative side in §4.6.
106
After two hours, both the NS and A should expire, so we expect
all recursives to switch to the new server.
We see that 305-390 VPs (about 2.25% of the total) continue with
the old resolver, a phenomena known as “sticky resolvers” [37].
4.3 Effective TTLs for Servers Outside the
Served Zone
We now move to what effective TTLs are seen when the authorita-
tive servers are outside the served zone (out-of-bailiwick servers).
In this case, the server’s IP address is trusted even when the NS
record is expired.
For this experiment, we replace both in-bailiwick authorita-
tive servers with ns1.zurrundeddu.com. Since it is not with the
cachetest.net domain, it is an out-of-bailiwick server. As before,
the NS records in the glue has a TTL of 3600 s, and the A glue
record has a TTL of 7200 s. As before, we renumber the A record
of ns1.zurrundeddu.com after 9 minutes. (The .com zone supports
dynamic updates and we verify this change is visible in seconds.)
Finally, we query the AAAA record from 16k RIPE Atlas VPs, every
600 s and watch for changes (Table 3).
Figure 7 shows how VPs react to the changed records, and Table 3
provides details about the experiment. Comparing the in- and out-
of-bailiwick cases (Figure 6 and Figure 7), we see that VPs trust the
A record for the old authoritative server for nearly its full cache
lifetime, out to 120 minutes, not just 60 minutes. This result shows
that most recursive resolvers trust cached A records when served from
different zones (out-of-bailiwick), but not in-bailiwick servers.
4.4 Resolver’s Infrastructure
What kind of resolvers exhibit the behaviors shown in this section
so far? There are many kinds of resolvers today. Prior work has
shown that clients often employ multiple levels of resolvers [36, 48],
with local resolvers, forwarders, and sometimes replicated recur-
sive resolvers. For example, in Table 3, Atlas VPs see 6.3k or 6.6k
resolvers directly reachable from clients in 1.6k ASes for in and
out-of-bailiwick measurements, respectively. However, analysis of
traffic at authoritative servers shows 13.1k and 14.8k IP addresses of
resolvers connect from 2.4k ASes (again, in- and out-of-bailiwick).
This complex infrastructure affects what users see from what oper-
ators announce.
Sticky resolvers: We show in Table 4 a classification of the re-
solvers as seen from VPs. First, we address sticky resolvers, which
are the ones that both send queries on the first round of measure-
ments (blue bar at t = 0) and always contact the same authoritative
name server, even when TTLs expire. For the in-bailiwick experi-
ment, we see that only a minority of VPs (207) have this behavior,
while for out-of-bailiwick we see this number reaching 1.6k VPs
(17.8% of the valid VPs, Table 3). These 1.6k VPs, in turn, query 997
unique resolvers, from 378 ASes.
Of these 997 resolvers, 291 use reserved addresses (private ranges
or local interfaces). The remaining distribution is quite sparse: 16
resolvers are announced from an European NREN, 13 from another
NREN, 10 from Hurricane Electric and 8 from OpenDNS [39], which
provides a public DNS resolver.
To confirm the case of OpenDNS, we repeated the out-of-bailiwick
configuration and send queries from a single VP (a VM located at
EC2 Frankfurt) which sent queries to one of the public resolvers of
Cache Me If You Can
IMC ’19, October 21–23, 2019, Amsterdam, Netherlands
Figure 6: Timeseries of answers for in-bailiwick experiment
Figure 7: Timeseries of answers for out-of-bailiwick experiment
Sticky Resolvers
VPs
Resolvers
ASes
in-bailiwick
196
146
51
out-of-bailiwick
1642
997
378
Table 4: Resolver classifications from bailiwick experi-
ments.
OpenDNS (208.67.222.123), every 300s. Even though this experiment
was carried in July 2019 (2.5 months later), we still found evidence
of this behavior: out of 161 DNS responses received by our client,
13 contained answers which were from the original server after the
expired TTLs. By analyzing the pcap files, we found that this is not
due to OpenDNS being sticky resolver, but that OpenDNS servers
seems to be parent centric, trusting the TTL of NS zurrundeddu.com
from the .com zone (2 days), and, as such, it does not update the A
record values after we renumber it. We confirm that because our au-
thoritative servers have received no queries for NS zurrundeddu.com,
therefore they could have only trusted the parent.
In fact, we confirm this hypothesis by running an experiment
with Ripe Atlas VPs to query for NS of zurrundeddu.com, while
keeping the child authoritative servers offline (zurrundeddu-offline
in [43]). We see that VPs that employ OpenDNS receive a valid
answer, while most others either time out or receive SERVFAIL
code [33] (indicating that their local resolver could not reach the
child authoritative servers).
However, we do not mean that all VPs that use OpenDNS behave
this way. In fact, 252 VPs use OpenDNS public DNS directly (listing
107
an OpenDNS address as a local resolver) in the out-of-bailiwick
experiment, and 225 of these VPs send the expected 24 queries each.
Out of these 225 VPs, 186 have more queries answered by the old
server, but some also answer by the new server, perhaps due to
cache fragmentation and use of different resolver backends [36].
4.5 Same VP, different behavior
In this section we focus on VPs that exhibit distinct behavior for the
in and out-of-bailiwick experiments. To do that, we focus on VPs
that are “sticky” in the in-bailiwick experiment—the 1642 VPs from
Table 4. Our goal is to identify how they behave in the in-bailiwick
experiment.
Out of the 1642 sticky VPs, 1395 were also employed on the
in-bailiwick experiment. Figure 8 shows the distribution of these
1395 VPs and their respective ratio of DNS responses from the new
server, for the in-bailiwick experiment. As can be seen, the same
VPs that were “sticky” for the out-of-bailiwick scenario, mostly
behave as expected, retrieving most responses from the new server.
These results show that same VPs can behave differently depend-
ing on how DNS zones are configured.
4.6 Confirmation from the Authoritative Side
We investigate in this section why results from in-bailiwick and
out-of-bailiwick differ that much. We analyze traffic obtained at
the authoritative servers.
First, we compare the responses for the queries issued by RIPE
Atlas VPs. The responses sent to RIPE Atlas for the in-bailiwick
scenario had, besides the AAAA records in the answers section and
NS record in the authority section, an A record (glue) of the NS
records found in the additional. In comparison, the out-of-bailiwick
scenario had no additional section, as the zone had no glue.
 0 5000 10000 15000 200000102030405060708090100110120130140150160170180190200210220230Original NS expires. Both Original NS and A Original expired. Original A still validDNS redirect: new A.Orig. NS and A validanswersminutes after startoriginalnew 0 5000 10000 15000 200000102030405060708090100110120130140150160170180190200210220230Original NS expires Both Original NS and A expired. Original A still validDNS redirect: new A.Orig. NS and A validanswersminutes after startoriginalnewIMC ’19, October 21–23, 2019, Amsterdam, Netherlands
G. C. M. Moura et al.
format
domains
responsive
discarded
ratio
2LD
1000000
988654
11346
0.99
Alexa Majestic Umbre.
FQDN
1000000
783343
216657
0.78
2LD
1000000
928299
71701
0.93
2019-02-06
Date
NS
A
unique
ratio
unique
ratio
AAAA
unique
ratio
MX
unique
ratio
DNSKEY
unique
ratio
CNAME
unique
ratio
2479257
269896
9.19
1247139
572689
2.18
282818
106235
2.66
1697001
480787
3.53
42950
26274
1.63
45228
3592
12.59
2430773
234356
10.37
1069314
539301
1.98
215935
97545
2.21
1532026
435455
3.52
38262
25275
1.51
2493
1512
1.65
855147
106475
8.03
1126842
451220
2.50
287069
139456
2.06
522089
130751
3.99
11731
6838
1.72
344500
166230
2.07
.nl
2LD