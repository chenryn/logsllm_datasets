### 8.3.36 Creating a Subscription (createsub)

**Description:**
The `createsub` command is used to create a new subscription and associate it with a specific publication.

**Synopsis:**
```bash
-createsub subname -subsvrfile subsvrfile -subdbid dbid -pubsvrfile pubsvrfile -pubname pubname [-filterids filterid_1,filterid_2,...]
```

**Parameters:**
- **subname**: The name of the new subscription.
- **subsvrfile**: The file containing the subscription server login information.
- **subdbid**: The ID of the subscription database.
- **pubsvrfile**: The file containing the publication server login information.
- **pubname**: The name of the publication to which the new subscription will be associated.
- **filterids** (optional): A comma-separated list of filter IDs identifying the filter rules to enable on the corresponding tables in the new subscription. Use the `printpubfilterslist` command to obtain the filter IDs for the available filter rules in the publication (see Section 8.3.17). Note: There must be no white space between the comma and filter IDs.

**Examples:**
```bash
$ java -jar edb-repcli.jar -createsub dept_emp_sub \
> -subsvrfile ~/subsvrfile.prop \
> -subdbid 2 \
> -pubsvrfile ~/pubsvrfile.prop \
> -pubname dept_emp
Creating subscription...
Subscription created successfully
```

### 8.3.37 Printing a Subscription List (printsublist)

**For SMR only:**
The `printsublist` command prints a list of subscription names.

**Synopsis:**
```bash
-printsublist -repsvrfile subsvrfile -subdbid dbid
```

**Parameters:**
- **subsvrfile**: The file containing the subscription server login information.
- **dbid**: The ID of the subscription database. The subscription names subordinate to the specified subscription database are printed.

**Examples:**
```bash
$ java -jar edb-repcli.jar -printsublist -repsvrfile ~/subsvrfile.prop \
> -subdbid 2
Printing subscriptions ...
dept_emp_sub
```

### 8.3.38 Enabling Filters on a Subscription or Non-MDN Node (enablefilter)

**Description:**
The `enablefilter` command enables one or more filter rules on a single-master replication system subscription or on a multi-master replication system master node other than the master definition node.

**Synopsis:**
```bash
-enablefilter -repsvrfile pubsvrfile { -subname subname | -dbid dbid } -filterids filterid_1 [ filterid_2 ] ...
```

**Parameters:**
- **pubsvrfile**: The file containing the publication server login information.
- **subname** (for SMR only): The name of the subscription containing the tables on which the filter rules are to be enabled.
- **dbid** (for MMR only): The publication database ID of the non-MDN node containing the tables on which the filter rules are to be enabled.
- **filterids**: One or more filter IDs separated by space characters identifying the filter rules from the set of available table filters to enable on the corresponding tables in the SMR subscription or MMR non-MDN node. Use the `printpubfilterslist` command to obtain the filter IDs for the available filter rules in the publication (see Section 8.3.17).

**Examples:**
```bash
# Enabling a filter rule on a subscription of a single-master replication system
$ java -jar edb-repcli.jar -enablefilter -repsvrfile ~/pubsvrfile.prop \
> -subname analysts_managers_sub \
> -filterids 47
Enabling filters...
Filter rule(s) updated successfully.

# Enabling multiple filter rules on a master node that is not the master definition node of a multi-master replication system
$ java -jar edb-repcli.jar -enablefilter -repsvrfile ~/pubsvrfile.prop \
> -dbid 139 \
> -filterids 8 16
Enabling filters...
Filter rule(s) updated successfully.
```

### 8.3.39 Disabling Filters on a Subscription or Non-MDN Node (disablefilter)

**Description:**
The `disablefilter` command disables one or more filter rules on a single-master replication system subscription or on a multi-master replication system master node other than the master definition node.

**Synopsis:**
```bash
-disablefilter -repsvrfile pubsvrfile { -subname subname | -dbid dbid } -filterids filterid_1 [ filterid_2 ] ...
```

**Parameters:**
- **pubsvrfile**: The file containing the publication server login information.
- **subname** (for SMR only): The name of the subscription containing the tables on which the filter rules are to be disabled.
- **dbid** (for MMR only): The publication database ID of the non-MDN node containing the tables on which the filter rules are to be disabled.
- **filterids**: One or more filter IDs separated by space characters identifying the currently enabled table filters that are to be disabled in the SMR subscription or MMR non-MDN node.

**Examples:**
```bash
# Disabling a filter rule on a subscription of a single-master replication system
$ java -jar edb-repcli.jar -disablefilter -repsvrfile ~/pubsvrfile.prop \
> -subname analysts_managers_sub \
> -filterids 47
Disabling filters...
Filter rule(s) updated successfully.

# Disabling multiple filter rules on a master node that is not the master definition node of a multi-master replication system
$ java -jar edb-repcli.jar -disablefilter -repsvrfile ~/pubsvrfile.prop \
> -dbid 139 \
> -filterids 8 16
Disabling filters...
Filter rule(s) updated successfully.
```

### 8.3.40 Taking a Single-Master Snapshot (dosnapshot)

**For SMR only:**
The `dosnapshot` command performs snapshot synchronization on the specified subscription in a single-master replication system.

**Synopsis:**
```bash
-dosnapshot subname -repsvrfile subsvrfile [ -verboseSnapshotOutput { true | false } ]
```

**Parameters:**
- **subname**: The name of the subscription for which the snapshot is to be taken.
- **subsvrfile**: The file containing the subscription server login information.
- **-verboseSnapshotOutput** (optional): Set this option to `true` if you want the output from the snapshot to be displayed. Set this option to `false` if you do not want the snapshot output displayed. If omitted, the default is `true`.

**Examples:**
```bash
$ java -jar edb-repcli.jar -dosnapshot dept_emp_sub \
> -repsvrfile ~/subsvrfile.prop
Performing snapshot...
Source database connectivity info...
conn =jdbc:oracle:thin:@192.168.2.6:1521:xe
user =pubuser
password=******
Target database connectivity info...
conn =jdbc:edb://192.168.2.7:5444/subdb
user =subuser
password=******
Connecting with source Oracle database server...
Connecting with target EnterpriseDB database server...
Importing redwood schema EDB...
Table List: 'DEPT','EMP'
Loading Table Data in 8 MB batches...
Disabling FK constraints & triggers on edb.dept before truncate...
Truncating table DEPT before data load...
Disabling indexes on edb.dept before data load...
Loading Table: DEPT ...
[DEPT] Migrated 4 rows.
[DEPT] Table Data Load Summary: Total Time(s): 0.182 Total Rows: 4
Disabling FK constraints & triggers on edb.emp before truncate...
Truncating table EMP before data load...
Disabling indexes on edb.emp before data load...
Loading Table: EMP ...
[EMP] Migrated 14 rows.
[EMP] Table Data Load Summary: Total Time(s): 0.178 Total Rows: 14
Enabling FK constraints & triggers on edb.dept...
Enabling indexes on edb.dept after data load...
Enabling FK constraints & triggers on edb.emp...
Enabling indexes on edb.emp after data load...
Performing ANALYZE on EnterpriseDB database...
Data Load Summary: Total Time (sec): 1.866 Total Rows: 18 Total Size(MB): 0.0
Schema EDB imported successfully.
Migration process completed successfully.
Migration logs have been saved to /var/log/xdb-rep/build57l
******************** Migration Summary ********************
Tables: 2 out of 2
Constraints: 4 out of 4
Total objects: 6
Successful count: 6
Failure count: 0
*************************************************************
Snapshot taken successfully.
```

### 8.3.41 Taking a Multi-Master Snapshot (dommrsnapshot)

**For MMR only:**
The `dommrsnapshot` command performs snapshot synchronization on the specified master node in a multi-master replication system.

**Synopsis:**
```bash
-dommrsnapshot pubname -repsvrfile pubsvrfile -pubhostdbid dbid [ -verboseSnapshotOutput { true | false } ]
```

**Parameters:**
- **pubname**: The name of the publication for which the snapshot is to be taken.
- **pubsvrfile**: The file containing the publication server login information.
- **dbid**: The publication database ID of the target master node for the snapshot replication.
- **-verboseSnapshotOutput** (optional): Set this option to `true` if you want the output from the snapshot to be displayed. Set this option to `false` if you do not want the snapshot output displayed. If omitted, the default is `true`.

**Examples:**
```bash
$ java -jar edb-repcli.jar -dommrsnapshot emp_pub \
> -pubhostdbid 9 \
> -repsvrfile ~/pubsvrfile.prop
Performing snapshot...
Source database connectivity info...
conn =jdbc:edb://192.168.2.6:5444/edb
user =pubuser
password=******
Target database connectivity info...
conn =jdbc:edb://192.168.2.7:5444/mmrnode
user =mmruser
password=******
Connecting with source EnterpriseDB database server...
Connecting with target EnterpriseDB database server...
Importing enterprisedb schema edb...
Table List: 'dept','emp'
Loading Table Data in 8 MB batches...
Disabling FK constraints & triggers on edb.dept before truncate...
Truncating table dept before data load...
Disabling indexes on edb.dept before data load...
Loading Table: dept ...
[dept] Migrated 5 rows.
[dept] Table Data Load Summary: Total Time(s): 0.247 Total Rows: 5
Disabling FK constraints & triggers on edb.emp before truncate...
Truncating table emp before data load...
Disabling indexes on edb.emp before data load...
Loading Table: emp ...
[emp] Migrated 14 rows.
[emp] Table Data Load Summary: Total Time(s): 0.163 Total Rows: 14
Enabling FK constraints & triggers on edb.dept...
Enabling indexes on edb.dept after data load...
Enabling FK constraints & triggers on edb.emp...
Enabling indexes on edb.emp after data load...
Performing ANALYZE on EnterpriseDB database...
Data Load Summary: Total Time (sec): 0.8 Total Rows: 19 Total Size(MB): 0.0
Schema edb imported successfully.
Migration process completed successfully.
Migration logs have been saved to /var/log/xdb-rep/build57l
******************** Migration Summary ********************
Tables: 2 out of 2
Constraints: 4 out of 4
Total objects: 6
Successful count: 6
Failure count: 0
*************************************************************
Snapshot taken successfully.
```

### 8.3.42 Performing a Synchronization (dosynchronize)

**Description:**
The `dosynchronize` command performs synchronization replication on the specified subscription for a single-master replication system, or for an entire multi-master replication system.

**Synopsis:**
```bash
-dosynchronize { subname | pubname } -repsvrfile { subsvrfile | pubsvrfile } [ -repgrouptype { s | m } ]
```

**Parameters:**
- **subname** (for SMR): The name of the subscription to synchronize.
- **pubname** (for MMR): The name of the publication to synchronize.
- **subsvrfile** (for SMR): The file containing the subscription server login information.
- **pubsvrfile** (for MMR): The file containing the publication server login information.
- **-repgrouptype** (optional): Specifies the type of replication group. Use `s` for single-master and `m` for multi-master. If omitted, the default is `s`.

**Examples:**
```bash
# For a single-master replication system
$ java -jar edb-repcli.jar -dosynchronize subname -repsvrfile subsvrfile

# For a multi-master replication system
$ java -jar edb-repcli.jar -dosynchronize pubname -repsvrfile pubsvrfile -repgrouptype m
```

---

**Copyright Notice:**
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved.