Remark 1. We assume that 𝑅 implicitly includes all the necessary
information to be evaluated efficiently. In particular, it includes 𝑘
and the description of 𝑓 , F𝜅 and H𝜅.
Remark 2. In practice (and especially if this protocol is implemented
over the Bitcoin blockchain) F𝜅 will be replaced by the SHA func-
tion. However, for formality, security notions need to be defined
asymptotically.
3.1 Contingent payment security from tS-WI
We want to model the fact that the Client cannot learn anything
about the value 𝑠 that the Server holds until the payment is per-
formed. Our security game from Figure 2 captures this fact, where
the Client plays the role of the adversary A.
4We abbreviate both witness indistinguishable and witness indistinguishability to WI.
Figure 1: Subversion WI games.
We say a garbled circuit scheme is verifiable if for all polynomial-
size (in 𝜅) functions 𝑓 : {0, 1}𝑚 → {0, 1}𝑛 and all 𝑥 ∈ {0, 1}𝑚, for
𝑦 = 𝑓 (𝑥) and for all ppt adversaries A, the following probability is
negligible in 𝜅,
0 , 𝐿(𝑖)
1 }𝑖∈[𝑚], {𝑍 (𝑖)
(GC, {𝐿(𝑖)
0 , 𝑍 (𝑖)
{ ˆ𝑍 (𝑖)}𝑖∈[𝑛] ← Eval(GC, {𝐿(𝑖)
Verify(GC, 𝑓 , {𝐿(𝑖)
0 , 𝐿(𝑖)
∧ ∃𝑖 ∈ [𝑛], ˆ𝑍 (𝑖) ≠ 𝑍 (𝑖)
𝑦𝑖
1 }𝑖∈[𝑛]) ← A(1𝜅, 𝑓 )
𝑥𝑖 }𝑖∈[𝑚]) :
1 }𝑖∈[𝑚], {𝑍 (𝑖)
1 }𝑖∈[𝑛]) = 1
0 , 𝑍 (𝑖)
Pr
 .
2.6 Committing oblivious transfer
For simplicity in the presentation of constructions depending on
this primitive, we describe the ideal functionality associated to
committing oblivious transfer, FCOT . We assume a fixed 𝑛 ∈ N:
(1) Choose: on input (choose, {𝑏𝑖}𝑖∈[𝑛]) from the receiver, where
𝑏𝑖 ∈ {0, 1},∀𝑖 ∈ [𝑛], inform receiver that a choice was received.
(2) Transfer: on input (transfer, {𝑚(𝑖)
1 }𝑖∈[𝑛]) from the sender,
send messages {𝑚(𝑖)
(3) Open: on input (open-all) from the sender, reveal all pairs
{𝑚(𝑖)
A valid committing oblivious transfer construction is such that
for every (possibly malicious) receiver, there is a simulator that can
extract input bits 𝑏𝑖, invoke the ideal functionality obtaining 𝑚𝑏𝑖
and use these values to simulate the receiver’s real world view. We
will use such a simulator in the proof of Theorem 4.1.
}𝑖∈[𝑛] to the receiver.
1 }𝑖∈[𝑛] to the receiver and halt.
0 , 𝑚(𝑖)
0 , 𝑚(𝑖)
𝑏𝑖
2.7 Witness indistinguishability
The notion of witness indistinguishability [25] tries to model the
fact that proofs do not leak any information about the witness they
have been created with. (Observe that proofs may leak informa-
tion about the witness, as long as such information is common
for all valid witnesses.) In Figure 1 we detail the security game of
three different variants of this notion: the standard witness indis-
tinguishability, subversion witness indistinguishability and trapdoor
subversion witness indistinguishability. The latter is a new notion
that we formally define below. We refer to Appendix A for details
about the former two.
Session 2E: Smart Contracts and Cryptocurrencies CCS '20, November 9–13, 2020, Virtual Event, USA646Game InfoCPΠA(𝜅) :
𝑏 ←$ {0, 1}
(𝑅, 𝜏𝑘) ← RGCP(1𝜅)
(crs, 𝜎) ← A(𝑅)
𝑏′ ← AO(𝑅,crs,𝑏,·)(𝜎)
return (𝑏′ = 𝑏)
O(𝑅, crs, 𝑏, 𝑠):
if 𝑓 (𝑠) = 0, return ⊥
𝑟 ← E.Gen(1𝜅)
if 𝑏 = 0 : 𝑐 (cid:66) Enc𝑟 (𝑠);
if 𝑏 = 1 : 𝑐 (cid:66) Enc𝑟 (0|𝑠|); 𝑤 ←$ {0, 1}𝜅; 𝑦 (cid:66) H𝜅(𝑘, 𝑤)
𝜋 ← Π.Prove(𝑅, crs, (𝑐, 𝑦), 𝑤)
return (𝑐, 𝑦, 𝜋)
𝑦 (cid:66) F𝜅(𝑟); 𝑤 (cid:66) 𝑟
Figure 2: Information contingent payment security game.
Definition 3.2. A NI argument system Π is secure for contingent
payment with respect to relation generator RGCP if for every ppt
adversary A, the following advantage is negligible in 𝜅:
(cid:12)(cid:12)(cid:12)(cid:12) Pr(cid:104)InfoCPΠA(𝜅)(cid:105) − 1
2
(cid:12)(cid:12)(cid:12)(cid:12)
.
Adv
Π,A (𝜅) (cid:66)
InfoCP
Our next theorem establishes that tS-WI is enough to achieve
InfoCP security. Its detailed proof is given in Appendix B.1.
tS-WI
(𝜅) + AdveavE (𝜅)(cid:1)
Π,B (𝜅) + 𝑞O(cid:0)𝑞FAdvkey-rec
Theorem 3.3. Let Π be an NI argument system for the CP relation
generator RGCP. Let 𝐹𝜅 be a random oracle for every 𝜅 ≥ 1. For every
ppt adversary A against the InfoCP game making at most 𝑞O queries
to its oracle and at most 𝑞F queries to the random oracle, there exists
a ppt adversary B such that for every 𝜅 ∈ N,
Π,A (𝜅) ≤ Adv
InfoCP
.
Adv
E
One can think of the InfoCP security game as the zero-knowledge
security game for relation 𝑓 . That is, the adversary has access to
an oracle that, on input a valid witness 𝑠 (i.e., such that 𝑓 (𝑠) = 1),
receives a normal proof (the branch in O with 𝑏 = 0) or a “simulated”
proof (the branch in O with 𝑏 = 1), but the adversary cannot
distinguish between the two. However, in this scenario everybody
can compute simulated proofs (no trapdoor is needed, just the ability
to run H forwards). Observe that this is not a problem since, for
the application of contingent payment, the soundness requirement
states that without knowing secret 𝑠, it must be hard to compute a
valid proof and at the same time to be able to withdraw the money.
More precisely, it should be hard to compute a valid proof (𝑐, 𝑦, 𝜋)
together with a preimage 𝑟 of 𝑦 under 𝐹𝜅 such that 𝑓 (Dec𝑟 (𝑐)) = 0.
We formalize this notion in the game presented in Figure 3.
Definition 3.4. The contingent payment protocol based on NI
argument system Π with respect to relation generator RGCP is
sound if for every ppt adversary A, the following advantage is
negligible in 𝜅:
sndss
Π,A (𝜅) (cid:66) Pr(cid:104)InfoCP-SoundnessΠA(𝜅) = 1(cid:105)
We now show that the protocol is sound as long as H and F are
Adv
.
claw-free and F is collision-resistant.
Game InfoCP-SoundnessΠA(𝜅) :
crs ← CrsGen(1𝜅)
(𝑅, 𝜏𝑘) ← RGCP(1𝜅)
((𝑐, 𝑦, 𝜋), 𝑟) ← A(crs, 𝑅)
𝑠 (cid:66) Dec𝑟 (𝑐)
return Π.Verify(crs, (𝑐, 𝑦), 𝜋) = 1 ∧ 𝑦 = 𝐹𝜅(𝑟) ∧ 𝑓 (𝑠) ≠ 1
Figure 3: Information contingent payment soundness game.
Pr
Theorem 3.5 (Soundness). For every ppt adversary A, it holds:
Adv
Π,A (𝜅) ≤ 𝜖ks(𝜅) + AdvCFF,H(𝜅) + AdvCRF (𝜅)
sndss
where the probability is taken over the coins of A and 𝜖ks represents
the knowledge-soundness error of Π.
Proof. Considering the knowledge-soundness extractor, EA,
of Π, the above probability can be upper-bounded by 𝜖ks(𝜅) plus
crs ← CrsGen(1𝜅)
(𝑅, 𝜏𝑘) ← RGCP(1𝜅)
((𝑐, 𝑦, 𝜋), 𝑟) ← A(crs, 𝑅)
𝑠 (cid:66) Dec𝑟 (𝑐)
𝑟′ ← EA(crs, (𝑐, 𝑦), 𝜋)
Π.Verify(crs, (𝑐, 𝑦), 𝜋) = 1
∧ 𝑦 = 𝐹𝜅(𝑟) ∧ 𝑓 (𝑠) ≠ 1 ∧
(cid:18)(𝑦 = 𝐹𝜅(𝑟′) ∧ 𝑓 (Dec𝑟′(𝑐)) = 1)
(cid:19)
:
∨ 𝑦 = 𝐻𝜅(𝑟′)
Now, A combined with EA can be seen as an adversary against the
claw-freeness of function generators F ,H or against the collision-
resistance of F . (Observe that 𝑓 (𝑠) ≠ 1 ∧ 𝑓 (Dec𝑟′(𝑐)) = 1 implies
that 𝑟 ≠ 𝑟′.) Therefore, the above probability can be bounded by
AdvCFF, H(𝜅)+AdvCRF (𝜅). This analysis gives us the final bound stated
in the theorem.
□
Remark 3. The statement from Theorem 3.3 is asymmetric in the
sense that we provide a reduction from tS-WI through adversary B,
but we do not consider adversaries against the encryption scheme
E. This is to highlight the importance of the tS-WI notion in the
proof. Furthermore, some encryption schemes (see the next re-
mark) can be proven to have negligible key-rec and eav advantages
independently of the (possibly unbounded) adversary.
Remark 4. Observe that, in Theorem 3.3 the properties we require on
the encryption scheme are one-time key recovery security and one-
time indistinguishability (see Definition 2.5), which are weaker than
the standard IND-CPA. This opens the possibility of using a mod-
ified version of one-time-pad (OTP) as the encryption algorithm.
Namely,
Gen(1𝜅) :
𝑘1, 𝑘2 ←$ {0, 1}𝜅
return 𝑘1∥ 𝑘2
Enc(𝑘1∥ 𝑘2, 𝑚) :
𝑐 (cid:66) 𝑚 ⊕ 𝑘1
return 𝑐
Dec(𝑘1∥ 𝑘2, 𝑐) :
𝑚 (cid:66) 𝑘1 ⊕ 𝑐
return 𝑚
where the second part of the key is only used to achieve protection
against key recovery. The main advantage of this encryption scheme
is its simplicity, so it has no overhead on the relation for the proof
system. However, this would only be a good option for functions
𝑓 that take short inputs5, because a long message implies a long
encryption key, which would require several iterations of the SHA
5For instance, Sudoku, the classical proof of concept example, where a bit length of
256 is enough for encoding a solution, since 81 log2(9) < 257, but not all cells need
to be given (some are part of the puzzle).
Session 2E: Smart Contracts and Cryptocurrencies CCS '20, November 9–13, 2020, Virtual Event, USA647computation, probably the bottleneck of relation 𝑅. If 𝑓 takes long
inputs, a block cipher (that can handle arbitrarily long messages
with a constant-size key), e.g. AES, would be a better choice.
Remark 5. Observe that the random oracle assumption on F𝜅 is not
necessary, as long as E and F are such that for every 𝑠,
(cid:0)E.Enc𝑟 (𝑠), 𝐹𝜅(𝑟)(cid:1) ≈(cid:0)E.Enc𝑟 (0|𝑠|), 𝑢(cid:1)
for 𝑟 ←E.Gen(1𝜅) and 𝑢 sampled uniformly from the range of 𝐹𝜅.
This becomes clear in the proof of Theorem 3.3 (see Appendix B.1).
On the other hand, the standard approach to reason about SHA is
to assume it is a random oracle and it is not clear how to prove that
the above condition holds for the SHA function otherwise.
4 ZK FROM GARBLED CIRCUITS
While the result in the previous section establishes a theoretical
ground for CP, its instantiation will suffer from a considerable
overhead due to the inevitable use of algebraic structure for the
trapdoor permutation. Optimization techniques from [19] allow
to integrate algebraic relations into arithmetic ones and help to