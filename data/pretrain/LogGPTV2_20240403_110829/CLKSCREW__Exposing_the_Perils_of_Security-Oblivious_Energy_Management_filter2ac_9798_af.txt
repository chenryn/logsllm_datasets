Git at Google.
[3] Nexus 6 Qualcomm-stipulated OPP. https://android.go
oglesource.com/kernel/msm/+/android-msm-sha
mu-3.10-lollipop-mr1/arch/arm/boot/dts/qc
om/apq8084.dtsi. Git at Google.
[4] QSEECOM source code. https://android.googleso
urce.com/kernel/msm/+/android-msm-shamu-3.
10-lollipop-mr1/drivers/misc/qseecom.c. Git at
Google.
[5] Qualcomm Krait PMIC frequency driver source code. https:
//android.googlesource.com/kernel/msm/+/an
droid-msm-shamu-3.10-lollipop-mr1/drivers/
clk/qcom/clock-krait.c. Git at Google.
[6] Qualcomm Krait PMIC voltage regulator driver source code. ht
tps://android.googlesource.com/kernel/msm/
+/android-msm-shamu-3.10-lollipop-mr1/arch
/arm/mach-msm/krait-regulator.c. Git at Google.
[7] Mobile Hardware Stats 2016-09. http://hwstats.unit
y3d.com/mobile/cpu.html, Sep 2016. Unity.
[8] AMAZON. Processor State Control for Your EC2 Instance. ht
tp://docs.aws.amazon.com/AWSEC2/latest/Use
rGuide/processor_state_control.html. Amazon
AWS.
[9] ANATI, I., GUERON, S., JOHNSON, S., AND SCARLATA, V.
Innovative technology for cpu based attestation and sealing. In
Proceedings of the 2nd international workshop on hardware and
architectural support for security and privacy (HASP) (2013),
vol. 13.
[11] ARM. Security Technology - Building a Secure System using
TrustZone Technology. ARM Technical White Paper (2009).
[12] ARM.
Power Management with big.LITTLE: A technical
overview. https://community.arm.com/processors
/b/blog/posts/power-management-with-big-l
ittle-a-technical-overview, sep 2013.
[13] BAR-EL, H., CHOUKRI, H., NACCACHE, D., TUNSTALL, M.,
AND WHELAN, C. The sorcerer’s apprentice guide to fault at-
tacks. Proceedings of the IEEE 94, 2 (2006), 370–382.
[14] BARENGHI, A., BERTONI, G., PARRINELLO, E., AND PELOSI,
G. Low voltage fault attacks on the rsa cryptosystem. In Fault Di-
agnosis and Tolerance in Cryptography (FDTC), 2009 Workshop
on (2009), IEEE, pp. 23–31.
[15] BARENGHI, A., BREVEGLIERI, L., KOREN, I., PELOSI, G.,
AND REGAZZONI, F. Countermeasures against fault attacks on
software implemented AES: effectiveness and cost. In Proceed-
ings of the 5th Workshop on Embedded Systems Security (2010),
ACM, p. 7.
[16] BARR, J. Now Available - New C4 Instances. https://aw
s.amazon.com/blogs/aws/now-available-new-c
4-instances/, jan 2015.
[17] BEAUPRE, S. TRUSTNONE - Signed comparison on unsigned
user input. http://theroot.ninja/disclosures/TR
USTNONE_1.0-11282015.pdf.
[18] BERZATI, A., CANOVAS, C., AND GOUBIN, L. Perturbat-
In International
ing RSA public keys: An improved attack.
Workshop on Cryptographic Hardware and Embedded Systems
(CHES) (2008), Springer, pp. 380–395.
[19] BIHAM, E., CARMELI, Y., AND SHAMIR, A. Bug attacks. In
Annual International Cryptology Conference (2008), Springer,
pp. 221–240.
[20] BLÖMER, J., DA SILVA, R. G., GÜNTHER, P., KRÄMER, J.,
AND SEIFERT, J.-P. A practical second-order fault attack against
In Fault Diagnosis and
a real-world pairing implementation.
Tolerance in Cryptography (FDTC), 2014 Workshop on (2014),
IEEE, pp. 123–136.
[21] BONEH, D. Twenty years of attacks on the RSA cryptosys-
tem. Notices of the American Mathematical Society (AMS) 46,
2 (1999), 203–213.
[22] BONEH, D., DEMILLO, R. A., AND LIPTON, R. J. On the
Importance of Checking Cryptographic Protocols for Faults. In
Proceedings of the 16th Annual International Conference on The-
ory and Application of Cryptographic Techniques (Berlin, Hei-
delberg, 1997), EUROCRYPT’97, Springer-Verlag, pp. 37–51.
[23] BTARUNR. Rejoice! Base Clock Overclocking to Make a Come-
back with Skylake. https://www.techpowerup.com/
218315/rejoice- base- clock- overclocking- t
o-make-a-comeback-with-skylake, Dec 2015. Tech-
Powerup.
[24] CANIVET, G., MAISTRI, P., LEVEUGLE, R., CLÉDIÈRE, J.,
VALETTE, F., AND RENAUDIN, M. Glitch and Laser Fault
Attacks onto a Secure AES Implementation on a SRAM-Based
FPGA. Journal of Cryptology 24, 2 (2011), 247–268.
[25] DOBRAUNIG, C., EICHLSEDER, M., KORAK, T., LOMNÉ, V.,
AND MENDEL, F. Statistical Fault Attacks on Nonce-Based Au-
thenticated Encryption Schemes. Springer Berlin Heidelberg,
Berlin, Heidelberg, 2016, pp. 369–395.
[26] EDGE, J. KS2012: ARM: Secure monitor API. https://lw
n.net/Articles/513756/, Aug 2012.
[10] ARM. c9, Performance Monitor Control Register. http://
infocenter.arm.com/help/index.jsp?topic=/c
om.arm.doc.ddi0344b/Bgbdeggf.html. Cortex-A8
Technical Reference Manual.
[27] EKBERG, J.-E., AND KOSTIAINEN, K. Trusted Execution Envi-
ronments on Mobile Devices. https://www.cs.helsink
i.fi/group/secures/CCS-tutorial/tutorial-s
lides.pdf, Nov 2013. ACM CCS 2013 tutorial.
1072    26th USENIX Security Symposium
USENIX Association
[28] GOOGLE. Multiplatform Content Protection for Internet Video
Delivery. https://www.widevine.com/wv_drm.html.
Widevine DRM.
[46] PALLIPADI, V., AND STARIKOVSKIY, A. The ondemand gover-
nor. In Proceedings of the Linux Symposium (2006), vol. 2, sn,
pp. 215–230.
[29] GOVINDAVAJHALA, S., AND APPEL, A. W. Using Memory
Errors to Attack a Virtual Machine. In Proceedings of the 2003
IEEE Symposium on Security and Privacy (S&P), pp. 154–165.
[30] GRUSS, D., MAURICE, C., AND MANGARD, S. Rowhammer.
js: A remote software-induced fault attack in javascript. In De-
tection of Intrusions and Malware, and Vulnerability Assessment.
Springer, 2016, pp. 300–321.
[31] GRUSS, D., SPREITZER, R., AND MANGARD, S. Cache
Template Attacks: Automating Attacks on Inclusive Last-Level
Caches. In 24th USENIX Security Symposium (USENIX Security
15) (Washington, D.C., 2015), USENIX Association, pp. 897–
912.
[32] HAMMARLUND, P., KUMAR, R., OSBORNE, R. B., RAJWAR,
R., SINGHAL, R., D’SA, R., CHAPPELL, R., KAUSHIK, S.,
CHENNUPATY, S., JOURDAN, S., ET AL. Haswell: The fourth-
generation Intel core processor. IEEE Micro, 2 (2014), 6–20.
[33] HUU, N. M., ROBISSON, B., AGOYAN, M., AND DRACH, N.
Low-cost recovery for the code integrity protection in secure em-
In Hardware-Oriented Security and Trust
bedded processors.
(HOST), 2011 IEEE International Symposium on (2011), IEEE,
pp. 99–104.
[34] INTEL. Intel Software Guard Extensions (Intel SGX). https:
//software.intel.com/en-us/sgx.
[35] INTEL. The Engine for Digital Transformation in the Data Cen-
ter. http://www.intel.com/content/dam/www/pu
blic/us/en/documents/product-briefs/xeon-e
5-brief.pdf. Intel Product Brief.
[36] JEFF, B. big.LITTLE system architecture from arm: Saving
power through heterogeneous multiprocessing and task context
migration. In Proceedings of the 49th Annual Design Automation
Conference (DAC) (2012), ACM, pp. 1143–1146.
[37] KIM, Y., DALY, R., KIM, J., FALLIN, C., LEE, J. H., LEE,
D., WILKERSON, C., LAI, K., AND MUTLU, O. Flipping bits
in memory without accessing them: An experimental study of
In 2014 ACM/IEEE 41st Interna-
DRAM disturbance errors.
tional Symposium on Computer Architecture (ISCA) (June 2014),
pp. 361–372.
[38] KOC, C. K. High-speed RSA implementation. Tech. rep., Tech-
nical Report, RSA Laboratories, 1994.
[39] LENSTRA JR, H. W. Factoring integers with elliptic curves. An-
nals of mathematics (1987), 649–673.
[40] LIPP, M., GRUSS, D., SPREITZER, R., MAURICE, C., AND
MANGARD, S. Armageddon: Cache attacks on mobile de-
vices. In 25th USENIX Security Symposium (USENIX Security
16) (Austin, TX, 2016), USENIX Association, pp. 549–564.
[41] LUO, P., LUO, C., AND FEI, Y. System Clock and Power Supply
Cross-Checking for Glitch Detection. Cryptology ePrint Archive,
Report 2016/968, 2016. http://eprint.iacr.org/
2016/968.
[42] MENEZES, A. J., VANSTONE, S. A., AND OORSCHOT, P. C. V.
Handbook of Applied Cryptography, 1st ed. CRC Press, Inc.,
Boca Raton, FL, USA, 1996.
[43] MILLER, F. P., VANDOME, A. F., AND MCBREWSTER, J. Ad-
vanced Encryption Standard. Alpha Press, 2009.
[44] MONTGOMERY, P. L. Modular multiplication without trial divi-
sion. Mathematics of computation 44, 170 (1985), 519–521.
[45] O’FLYNN, C. Fault Injection using Crowbars on Embedded Sys-
tems. Tech. rep., IACR Cryptology ePrint Archive, 2016.
[47] PATTERSON, D. A., AND HENNESSY, J. L. Computer Archi-
tecture: A Quantitative Approach. Morgan Kaufmann Publishers
Inc., San Francisco, CA, USA, 1990.
[48] QUALCOMM. Snapdragon S4 Processors: System on Chip Solu-
tions for a New Mobile Age. https://www.qualcomm.c
om/documents/snapdragon-s4-processors-sys
tem-chip-soluti
ons-new-mobile-age, jul 2013.
[49] QUALCOMM. Secure Boot and Image Authentication - Technical
Overview. https://www.qualcomm.com/documents
/secure-boot-and-image-authentication-tec
hnical-overview, Oct 2016.
[50] RAZAVI, K., GRAS, B., BOSMAN, E., PRENEEL, B., GIUF-
FRIDA, C., AND BOS, H. Flip feng shui: Hammering a nee-
dle in the software stack. In 25th USENIX Security Symposium
(USENIX Security 16) (Austin, TX, 2016), USENIX Association,
pp. 1–18.
[51] RIVEST, R. L., SHAMIR, A., AND ADLEMAN, L. A method for
obtaining digital signatures and public-key cryptosystems. Com-
munications of the ACM 21, 2 (1978), 120–126.
[52] SEABORN, M., AND DULLIEN, T. Exploiting the DRAM
rowhammer bug to gain kernel privileges. Black Hat (2015).
[53] SHEARER, F. Power Management in Mobile Devices. Newnes,
2011.
[54] STAMENKOVI ´C, Z., PETROVI ´C, V., AND SCHOOF, G. Fault-
tolerant ASIC: Design and implementation. Facta universitatis-
series: Electronics and Energetics 26, 3 (2013), 175–186.
[55] STMICROELECTRONICS. E-fuses. http://www.st.com/e
n/power-management/e-fuses.html?querycrite
ria=productId=SC1532. How-swap power management.
[56] TUNSTALL, M., MUKHOPADHYAY, D., AND ALI, S. Differen-
tial Fault Analysis of the Advanced Encryption Standard using
a Single Fault. In IFIP International Workshop on Information
Security Theory and Practices (2011), Springer, pp. 224–233.
[57] VAN DER VEEN, V., FRATANTONIO, Y., LINDORFER, M.,
GRUSS, D., MAURICE, C., VIGNA, G., BOS, H., RAZAVI, K.,
AND GIUFFRIDA, C. Drammer: Deterministic Rowhammer At-
In Proceedings of the 2016 ACM
tacks on Mobile Platforms.
SIGSAC Conference on Computer and Communications Security
(CCS) (Nov 2016).
[58] VELEGALATI, R., SHAH, K., AND KAPS, J.-P. Glitch Detec-
tion in Hardware Implementations on FPGAs Using Delay Based
In Proceedings of the 2013 Euromicro
Sampling Techniques.
Conference on Digital System Design (Washington, DC, USA,
2013), DSD ’13, IEEE Computer Society, pp. 947–954.
[59] WANG, B., LIU, L., DENG, C., ZHU, M., YIN, S., AND WEI,
S. Against Double Fault Attacks: Injection Effort Model, Space
and Time Randomization Based Countermeasures for Reconﬁg-
IEEE Transactions on Information
urable Array Architecture.
Forensics and Security 11, 6 (2016), 1151–1164.
[60] WEISER, M., WELCH, B., DEMERS, A., AND SHENKER, S.
Scheduling for Reduced CPU Energy. In Proceedings of the 1st
USENIX Conference on Operating Systems Design and Imple-
mentation (OSDI) (1994).
[61] YAROM, Y., AND FALKNER, K. FLUSH+RELOAD: A High
Resolution, Low Noise, L3 Cache Side-Channel Attack.
In
23rd USENIX Security Symposium (USENIX Security 14) (2014),
pp. 719–732.
USENIX Association
26th USENIX Security Symposium    1073
A.3 Vendor-Stipulated vs Observed OPPs
[62] ZHANG, X., XIAO, Y., AND ZHANG, Y. Return-Oriented Flush-
Reload Side Channels on ARM and Their Implications for An-
droid Devices. In Proceedings of the 2016 ACM SIGSAC Confer-
ence on Computer and Communications Security (CCS) (2016),
pp. 858–870.
A Appendix
A.1 Timing Violation due to Undervolting
Figure 15: Glitch due to undervolting: Increasing propa-
gation time of the critical path between the two consecu-
tive ﬂip-ﬂops, clock period T max_path → T max_path
(cid:48) results
in a bit-ﬂip in output 1 → 0.
A.2 FLIPENDIANNESS Implementation
for j ∈ {0 .. 2} do
d ← (src[i∗ 4 + j] | d) (cid:28) 8
d ← 0
dst ← {0}
for i ∈ {0 .. len(src)/4− 1} do
Algorithm 2 Reverse the endianness of a memory buffer.
1: procedure FLIPENDIANNESS(src)
2:
3:
4:
5:
6:
7:
8:
9:
10:
end for
11:
return dst
12:
13: end procedure
end for
d ← src[i∗ 4 + 3] | d
k ← len(src)− i∗ 4− 4
dst[k .. k + 3] ← d
Figure 16: Vendor-stipulated vs maximum voltage/fre-
quency OPPs for Nexus 6P.
Figure 17: Vendor-stipulated vs maximum voltage/fre-
quency OPPs for Pixel.
A.4 Example Glitch in RSA Modulus
Original Modulus N:
...f35a...
Corrupted Modulus NA:
c44dc735f6682a261a0b8545a62dd13df4c646a5ede482cef85892
5baa1811fa0284766b3d1d2b4d6893df4d9c045efe3e84d8c5d036
31b25420f1231d8211e2322eb7eb524da6c1e8fb4c3ae4a8f5ca13
d1e0591f5c64e8e711b3726215cec59ed0ebc6bb042b917d445288
87915fdf764df691d183e16f31ba1ed94c84b476e74b488463e855
51022021763a3a3a64ddf105c1530ef3fcf7e54233e5d3a4747bbb
17328a63e6e3384ac25ee80054bd566855e2eb59a2fd168d3643e4
4851acf0d118fb03c73ebc099b4add59c39367d6c91f498d8d607a
f2e57cc73e3b5718435a81123f080267726a2a9c1cc94b9c6bb681
7427b85d8c670f9a53a777511b
Factors of NA:
0x3, 0x11b, 0xcb9, 0x4a70807d6567959438227805b12a19...
Private Exponent dA:
04160eecc648a3da19abdc42af4cfb41a798e5eb8b1b49c2c29...
1074    26th USENIX Security Symposium
USENIX Association
TFFclock pulseinput (0    1)QsrcDdstoutput (0    0)1TclkTmax_path’010101010TFFTsetupglitchedoutput00.650.700.750.800.850.900.951.001.05Voltage (V)0.51.01.52.02.5Frequency (GHz)Nexus 6P (A57 cluster core)Maximum OPPVendor stock OPP0.30.40.50.60.70.80.91.0Voltage (V)0.00.51.01.52.02.53.0Frequency (GHz)Pixel ("Performance" cluster core)Maximum OPPVendor stock OPP