### Proofs Requiring Rewinding or ROM

Certain proofs that require rewinding or are based in the Random Oracle Model (ROM) can be challenging. However, such restrictions do not significantly impede the verification of a wide range of protocols from the literature. As previously discussed, it is currently unclear which type of rewinding should be integrated into Squirrel. Integrating the ROM (and Quantum ROM, QROM) into PQ-BC and PQ-SQUIRREL could be an interesting area for future work. 

While the (Q)ROM is often necessary for the analysis of cryptographic primitives, it is less frequently required for protocol verification. One notable exception is e-voting protocols, which often rely on the ROM. However, there is ongoing debate about the practical realizability of the ROM. In many cases, it is preferable to use the Pseudorandom Function (PRF) assumption when a secret seed is derived in the protocol, as we did in our case studies. In other scenarios, integrating results such as [52] into PQ-BC might offer a solution in the future.

### Limitations of the Logic and Prover

Apart from protocols whose proofs require rewinding or the ROM, we are not aware of any inherent limitations in the logic or the prover that would hinder the verification of other post-quantum protocols.

### Refining Case Studies

The goal of our case studies is to demonstrate the usability and scalability of the tool, rather than providing an exhaustive analysis of each protocol. For example, our current key exchange analysis only considers a model with static compromise. This is not an inherent limitation of the logic, as the threat model is just one aspect of the protocol modeling. Therefore, a natural next step is to refine our case studies and attempt to prove more advanced properties such as Perfect Forward Secrecy (PFS) or Post-Compromise Security (PCS).

### Improving Automation

Based on our initial set of case studies, PQ-SQUIRREL has shown potential for handling complex case studies, such as the recent proposal for a post-quantum TLS [55]. To perform such complex case studies, further automation in PQ-SQUIRREL is beneficial. We see two main routes to achieve this:

1. **Low-Level Reasoning**: Some low-level reasoning about message equalities and inequalities is already automated in many cases, but this could be improved by leveraging SMT solvers.
2. **Advanced Constraint Solving**: The unique abstraction level of our logic allows us to reason both at the high level of execution traces and at the low level of message indistinguishability. This abstraction opens the door for the application of more advanced constraint solving techniques, similar to those used in symbolic tools, which can further enhance automation.

### Conclusion

We have defined the PQ-BC logic for proving protocol security against quantum attackers and developed the corresponding PQ-SQUIRREL prover to mechanize the reasoning. In the process of extending the BC logic, we identified three simple syntactic side conditions that are both necessary and sufficient. These conditions, along with the new tactics we developed for PQ-SQUIRREL, can also be useful in the classical setting. Our initial case studies demonstrate that PQ-SQUIRREL can effectively be used to prove the security of post-quantum protocols.

### Acknowledgments

We thank Hubert Comon for many insightful discussions.

### References

[References remain unchanged as they are already well-structured and complete.]

This version of the text is more structured, coherent, and professional, making it easier to read and understand.