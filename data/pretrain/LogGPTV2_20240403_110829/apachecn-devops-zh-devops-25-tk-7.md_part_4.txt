 1  aws iam put-role-policy \
 2    --role-name $ROLE \
 3    --policy-name eks-logs \
 4    --policy-document file://logging/eks-logs-policy.json
```
最后，为了安全起见，我们将检索`eks-logs`策略，并确认它确实是正确创建的。
```
 1  aws iam get-role-policy \
 2    --role-name $ROLE \
 3    --policy-name eks-logs
```
输出的`PolicyDocument`部分应该与我们用来创建策略的 JSON 文件相同。
既然我们已经制定了策略，我们可以把注意力转向 Fluentd。
不幸的是，此时此刻(2018 年 12 月)，没有对 CloudWatch 友好的 Fluentd Helm Chart。所以，我们会回到美好的老 YAML。我准备了一个，让我们快速看一下。
```
 1  cat logging/fluentd-eks.yml
```
我不会详细介绍 YAML。你应该能够通过自己探索来理解它的作用。关键资源是包含配置的`fluentd-cloudwatch`配置图和同名的 DaemonSet，它们将在集群的每个节点上运行 Fluentd Pod。YAML 唯一的困难是理解 Fluentd 配置，特别是如果这是你第一次使用它。尽管如此，我们不会深入细节，我会让你自己探索 Fluentd 的文档。相反，我们将`apply`认为 YAML 希望一切都按预期进行。
```
 1  kubectl apply \
 2    -f logging/fluentd-eks.yml
```
在我们进入 Cloudwatch UI 之前，我们将检索 Fluentd Pods，并确认集群的每个节点中都有一个。
```
 1  kubectl -n logging get pods
```
在我的例子中，输出显示了与我的 EKS 集群中的节点数量相匹配的三个`fluentd-cloudwatch` Pods。
```
NAME                       READY   STATUS    RESTARTS   AGE
fluentd-cloudwatch-7dp5b   1/1     Running   0          19s
fluentd-cloudwatch-zq98z   1/1     Running   0          19s
fluentd-cloudwatch-zrrk7   1/1     Running   0          19s
```
现在，一切似乎都在我们的集群中运行，是时候进入云观察用户界面了。
```
 1  open "https://$AWS_DEFAULT_REGION.console.aws.amazon.com/
    cloudwatch/home?#logStream:group=/eks/$NAME/containers"
```
请在日志流名称前缀字段中键入`random-logger`，然后按回车键。因此，应该只有一个流可用。点击它。
一旦进入`random-logger`屏幕，您应该会看到该 Pod 生成的所有日志。我将留给您来探索可用的选项(没有太多)。
![](img/c6a05184-dcf3-41ce-a1a4-6d2fc4839889.png)
Figure 7-5: AWS CloudWatch events screen
一旦您完成了对 CloudWatch 的探索，我们将继续删除 Fluentd 资源以及策略和日志组。我们还有更多日志解决方案需要探索。如果您选择将 CloudWatch 与 Fluentd 一起使用，您应该能够在您的“真实”集群中复制相同的安装步骤。
```
 1  kubectl delete \
 2    -f logging/fluentd-eks.yml
 3
 4  aws iam delete-role-policy \
 5      --role-name $ROLE \
 6      --policy-name eks-logs
 7
 8  aws logs delete-log-group \
 9    --log-group-name \
10    "/eks/devops25/containers"
```
# 将 Azure 日志分析与 AKS 集群相结合
就像 GKE 一样(不像 EKS)，AKS 提供了一个集成的日志解决方案。我们要做的就是启用其中一个 AKS 插件。更准确地说，我们将启用`monitoring`插件。顾名思义，插件不仅满足收集日志的需求，还处理度量。然而，我们只对日志感兴趣。我相信没有什么能在度量上胜过普罗米修斯，尤其是因为它与 HorizontalPodAutoscaler 集成在一起。尽管如此，你也应该探索 AKS 指标，并得出自己的结论。现在，我们将只探索插件的日志部分。
```
 1  az aks enable-addons \
 2    -a monitoring \
 3    -n devops25-cluster \
 4    -g devops25-group
```
输出是一个相当大的 JSON，包含了新启用的`monitoring`插件的所有信息。没有什么令人兴奋的。
需要注意的是，当我们通过向`az aks create`命令添加`-a monitoring`参数来创建集群时，我们可以启用插件。
如果你想知道我们得到了什么，我们可以在`kube-system`名称空间中列出部署。
```
 1  kubectl -n kube-system get deployments
```
输出如下。
```
NAME                 DESIRED CURRENT UP-TO-DATE AVAILABLE AGE
heapster             1       1       1          1         1m
kube-dns-v20         2       2       2          2         1h
kubernetes-dashboard 1       1       1          1         1h
metrics-server       1       1       1          1         1h
omsagent-rs          1       1       1          1         1m
tiller-deploy        1       1       1          1         59m
tunnelfront          1       1       1          1         1h
```
新增加的是`omsagent-rs`部署，它将把日志(和指标)发送到 Azure 日志分析。如果你`describe`它，你会看到它是基于`microsoft/oms`的形象。这是我们第一次也是唯一一次从 Fluentd 转向不同的日志传送解决方案。我们使用它只是因为 Azure 推荐它。
接下来，我们需要等待几分钟，直到日志传播到日志分析。这是你短暂休息的最佳时刻。去拿杯咖啡。
让我们打开 Azure 门户，看看日志分析在行动。
```
 1  open "https://portal.azure.com"
```
请单击左侧菜单中的所有服务项目，在过滤器字段中键入`log analytics`，然后单击日志分析项目。
![](img/7fb76fbc-fb0a-4ec2-827b-8e4bbdb12ca8.png)
Figure 7-6: Azure portal All services screen with log analytics filter
除非您已经在使用日志分析，否则应该只有一个活动工作区。如果是这样，请单击它。否则，如果有多个工作区，选择与`az aks enable-addons`输出的 *id* 条目匹配的工作区。
单击*常规*部分的菜单项日志。
接下来，我们将尝试将输出条目限制为仅包含`random-logger`的条目。请在“在此键入您的查询”中键入以下查询...字段。
```
 1  ContainerLog | where Name contains "random-logger"
```
点击运行按钮，您将看到所有`random-logger`条目。
默认情况下，所有字段都显示在表中，其中许多字段要么没有使用，要么不太有用。额外的列可能会分散我们对日志的注意力，因此我们将更改输出。
指定我们需要哪些列比指定我们不需要哪些列更容易。请展开“列”列表，然后单击“选择无”按钮。接下来，选择**日志条目**、**名称**和**时间生成的**字段，完成后，收缩**列**列表。
你眼前看到的是限于`random-logger`的日志，只通过我们选择的三列呈现。
![](img/eff379dc-1093-4212-8efa-5731ad7a3ba5.png)
Figure 7-7: Azure Log Analytics screen with filtered entries
我将让您自行探索日志分析功能。尽管 Azure 门户的用户界面没有想象的那么直观，但我相信你会成功的。如果您选择采用与日志分析的 AKS 集成，您可能应该探索*日志分析查询语言*([https://docs . Microsoft . com/en-us/azure/azure-monitor/Log-query/query-language](https://docs.microsoft.com/en-us/azure/azure-monitor/log-query/query-language))文档，它将帮助您编写比我们使用的查询更复杂的查询。
考虑到在我们选择最适合您需求的解决方案之前，至少还有一个我们应该探索的解决方案，我们将禁用插件。稍后，如果您确实更喜欢日志分析，那么您所要做的就是再次启用它。
```