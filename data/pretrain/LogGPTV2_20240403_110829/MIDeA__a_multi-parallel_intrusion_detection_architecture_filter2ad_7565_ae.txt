# 图12：观察到的数据包丢失情况

- **(a) 合成流量**
- **(b) 实际流量**

**图12** 显示了数据包丢失情况，作为流量速率的函数。MIDeA 可以在不丢弃任何数据包的情况下处理高达 5.2 Gbit/s 的实际流量速度。

## 限制与未来工作
为了简化编程，我们选择使用进程而不是线程来并行化 MIDeA 的 CPU 部分。我们认为多线程实现会进一步增加设计的复杂性，而不会显著提高整体吞吐量。

在我们的基于流的分区方案中，我们避免了核心之间的任何通信。传统的 Snort 风格的签名匹配不需要对单一流之外的分析进行通信。如果网络分析系统需要这种功能（例如，检测 DDoS 攻击或恶意软件传播），则需要集成一个轻量级的通信方案来协调不同的核心 [47]。

在第 3.2.1 节中描述的网络数据包缓冲引入了一个额外的复制操作。考虑到大多数数据包在匹配签名之前必须被处理，并且每次传输单个数据包会显著降低 PCIe 吞吐量，这个设计是必要的。

最后，每个进程在 GPU 上分配不同的内存空间，这是由于 CUDA 驱动程序的限制，防止不同进程之间共享 GPU 内存。虽然这一政策也适用于线程，但我们相信未来的 CUDA 驱动程序版本将支持设备内存共享。在这种情况下，我们可以轻松迁移到更快的 AC-Full 算法。我们还相信共享的 GPU 内存空间将表现出更高的局部性，并提高计算吞吐量。

## 相关工作
先前的工作主要集中在使用专用硬件来增强 NIDS 的能力。这些方法中的大多数集中在通过使用 FPGA、ASIC 和 TCAM 等专用硬件来改进深度数据包检查 (DPI)，这是 NIDS 中最计算密集的操作 [9, 12, 27, 30, 45, 52]。最近，Meiners 等人 [27] 提出了一种基于 TCAM 的自定义正则表达式匹配方法，其吞吐量可达 18.6 Gbit/s；而我们的相应模式匹配实现单独可达到 70 Gbit/s 的吞吐量，几乎是四倍的改进，使用的是现成的商用设备。

其他方法采用基于 FPGA 的预过滤机制来减少发送到软件 NIDS/NIPS 进行检查的流量 [16, 43]。不幸的是，大多数实现都绑定到特定的架构，因此特别难以扩展和编程。规则集的任何更改都需要重新编译、重新生成自动机、重新合成、替换和路由电路，这是一个耗时且困难的过程。

许多工作还集中在改进检测机制的性能，如字符串匹配和正则表达式匹配 [7, 22, 23, 40, 46, 51]。这些工作与我们的工作是正交的，并可以集成到我们的系统中以改进内存利用率和性能。

另一条研究路线提出了基于集群的方法来应对不断增加的链路速度。与其让单一服务器处理所有传入流量，不如使用一组服务器。主要问题是如何将传入流量划分给后端服务器，同时支持有状态处理。Kruegel 等人 [21] 提出了一种有状态切片机制，将整个网络流量划分为可管理大小的子集，然后由不同的传感器处理。Foschini 等人 [14] 在此基础上扩展了一个允许传感器通过专用控制平面进行通信的并行匹配算法。SPANIDS [38] 使用一种基于 FPGA 的专用交换机，该交换机在重定向网络数据包时考虑了流信息和每台服务器的负载。Xinidis 等人 [50] 提出了一种主动拆分架构，通过早期过滤来减少后端传感器的负载。

其他方法试图使用商用硬件来改进 NIDS 的性能。Paxson 等人 [35] 和 Valentin 等人 [47] 实现了一个 NIDS 集群，通过使用并行节点来扩展。他们的系统基于 Bro [33]，展示了使用商用硬件超越单个 NIDS 实例容量的能力，除了用于将流量均匀分布到后端节点的专用前端硬件。在 Supra-linear Packet Processing [19] 中，单个线程负责数据包收集和调度，而其他多个线程并行处理传入的流。因此，每个处理线程独立处理特定的流。不幸的是，大量时间花在线程之间的上下文切换上，这可能是由于对共享数据包队列的高度锁定争用所致。

为了消除数据包处理架构中由于访问数据包队列而导致的过度争用率，通常使用流固定（即，将一个流的所有数据包“固定”到特定线程进行处理）[20]。这种方法需要稍微更多的数据存储来保持传入数据包到单独的队列中。然而，它允许大多数线程独立工作，这是好的多线程算法的关键特征。Schuff 等人 [39] 评估了不同的每流和流内并行化方法。尽管他们的结果没有提出明确的优胜者，但似乎纯流并发并行性在几乎所有情况下表现更好。

最近，图形处理器已被用于加速入侵检测系统中的计算密集型任务。Gnort [48, 49] 是第一个充分利用图形处理器进行字符串搜索和正则表达式匹配的尝试。不幸的是，其单线程架构限制了其在多核 CPU 出现时的可扩展性。许多其他方法跟随上述方案 [18, 41]，但在架构和性能收益方面没有显著差异。

## 结论
在这项工作中，我们设计并构建了一个多并行入侵检测架构，作为处理和有状态分析网络流量的可扩展解决方案。我们的系统实现了高性能，对于实际流量的处理吞吐量超过 5 Gbit/s，原始模式匹配速度为 70 Gbit/s，使用单盒中的商用现成硬件。

MIDeA 在 NIC、CPU 和 GPU 层面具有三个级别的并行化。它由一个多队列 NIC 组成，该 NIC 将传入流量分布在一组多核 CPU 上进行数据包处理和分析。每个 CPU 核心只处理一小部分网络流的流量。在将流量分割到不同的核心后，MIDeA 进一步将昂贵的内容检查操作卸载到一组 GPU 上。通过在多个 CPU 核心和图形处理器上并行化数据包处理和内容检查，MIDeA 提供了一种构建多并行 NIDS 的可扩展方法，可以在几 Gbit/s 的速度下运行，同时具有极低的价格点。

## 致谢
作者感谢 Evangelos Markatos 在准备本文过程中提供的宝贵意见和建议。这项工作得到了 Marie Curie Actions – Reintegration Grants 项目 PASS、FP7-PEOPLE-2009-IOF 项目 MALCODE 和 FP7 项目 SysSec 的部分支持，由欧洲委员会根据资助协议 No. 254116 和 No. 257007 资助，并由 Prevention, Preparedness and Consequence Management of Terrorism and other Security-related Risks Programme of the European Commission – Directorate-General for Home Affairs 资助的 i-Code 项目（资助协议 No. JLS/2009/CIPS/AG/C2-050）。本出版物仅反映作者的观点，委员会对其中所含信息的使用不承担责任。

## 参考文献
[此处列出参考文献]

---

希望优化后的文本更加清晰、连贯和专业。如果有更多具体需求，请告诉我！