 **Expected Behavior**  
Use the session.setProxy function of a window to set a user:pass authenticated
proxy. Load URL in that window. Expect that app.login event is triggered and
request is made.  
**Actual behavior**  
Set session proxy to a user:pass authenticated proxy, loadURL requests fail
with status "failed" in dev tools. App.login event never called.  
**To Reproduce**  
Create a window, use the session setProxy function to set a user:pass
authenticated proxy. Then try to load ANY url in that window.
    win.webContents.session.setProxy({
              proxyRules: `http://user:pass@ip:port`
            }, () => {});
     }
    //Requests fail status "failed"
    win.loadURL('https://whatismyipaddress.com');
    //This is NOT reached
    app.on('login', function (event, request, authInfo, callback) {
      if (authInfo.isProxy) {
        log.info(`HI ${JSON.stringify(authInfo)}`)
        // callback('username', 'password');
      }
    })
Working code with IP authenticated proxies
    win.webContents.session.setProxy({
              proxyRules: `http://ip:port`
            }, () => {});
     }
    //Requests succeed
    win.loadURL('https://whatismyipaddress.com');
    //This is reached
    app.on('login', function (event, request, authInfo, callback) {
      if (authInfo.isProxy) {
        log.info(`HI ${JSON.stringify(authInfo)}`)
        // callback('username', 'password');
      }
    })
This code is working for me with IP authenticated proxies. App.login is
triggered and the request completes as expected. Just user:pass proxies that
are the issue.
When opening chrome dev tools I can see the requests being attempted and
returning status "failed".
    **Screenshots**
    If applicable, add screenshots to help explain your problem.
    **Additional Information**
    Add any other context about the problem here.