### RF Fuzzing // River Loop Security

#### Introduction to Orthrus
**RF Symbol Value:**
- Preamble Correlation Value
- XOR Result
- Shift Register
- Hamming Distance: The number of differing bits between two values. If the Hamming Distance is 0, the values are equal.

**Orthrus Overview:**
- **Name:** Orthrus (/)
- **Description:** Orthrus is the spiritual successor to the ApiMote and is named after the two-headed dog from Greek mythology. This name reflects its dual capabilities.
- **Key Features:**
  - **Microcontroller:** NXP LPC ARM MCU
    - Host communication via USB
    - Control of radios
    - Implementation and control of the RF state machine
  - **Radios:** ADF radios
    - Slow re-tune time, but allows for pre-emptive re-tuning
    - One radio can listen while the other is ready to transmit, enabling high-speed responsive jamming.

#### Initial Prototype
- **Prototype Description:**
  - ADF development board wired to a Teensy microcontroller
  - Custom PCB design is currently in progress

#### Orthrus RF Design Flow
- **Event Loop Implementation:**
  - Firmware-based event loop
- **Blue-Green Frontends:**
  - Designed for fast retuning and channel hopping
- **Future Work:**
  - State machine abstraction language (e.g., XASM, ASML, SCXML)
  - Implement PHYs via configuration definitions rather than code

#### Packet-in-Packet Detection
- **Frame Structure:**
  - Traditional radio chipsets only detect the outer packet
  - Software-defined decoder in Orthrus can detect both inner and outer packets
- **Packet Structure:**
  - **PHY Header**
  - **PHY Data Unit:**
    - Preamble
    - SFD (Start Frame Delimiter)
    - Length
    - Data
    - CRC (Cyclic Redundancy Check)

#### Get Involved!
- **Contribute to TumbleRF:**
  - Generator for new fuzzing ideas
  - Harness to check the state of a device you care about testing
  - Interface to transmit with your favorite radio
- **Contribute to Orthrus:**
  - Firmware development
  - State machine abstraction definitions

#### Thank You!
- **DEF CON 26 Crew**
- **River Loop Security**
- **Cruise Automation**
- **Ionic Security**

#### Contact Information
- **GitHub Repository:** [TumbleRF](https://github.com/riverloopsec/tumblerf)
- **Questions?**
  - Twitter: @embeddedsec, @rmspeers
  - Email: matt@riverloopsecurity.com, ryan@riverloopsecurity.com

---

This optimized version provides a clearer and more structured overview of the Orthrus project, including its features, prototype, design flow, and ways to get involved.