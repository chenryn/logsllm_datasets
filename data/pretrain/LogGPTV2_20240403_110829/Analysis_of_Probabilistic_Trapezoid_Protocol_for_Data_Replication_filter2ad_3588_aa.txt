title:Analysis of Probabilistic Trapezoid Protocol for Data Replication
author:Tabito Suzuki and
Mamoru Ohara and
Masayuki Arai and
Satoshi Fukumoto and
Kazuhiko Iwasaki
Analysis of Probabilistic Trapezoid Protocol for Data Replication
Tabito SUZUKI
Mamoru OHARA
Kazuhiko IWASAKI
Masayuki ARAI
Satoshi FUKUMOTO
Graduate School of Engineering, Tokyo Metropolitan University
1-2, Minami-osawa, Hachioji, Tokyo 192-0397, Japan
{tabito s@info., ohara@info., arai@, fukumoto@, iwasaki@}eei.metro-u.ac.jp
E-mail:
Abstract
Maintaining the replicated data between nodes can
improve the dependability of data. We propose a prob-
abilistic trapezoid protocol for replicated data that com-
bines this protocol with the concept of a probabilistic quo-
rum system. We analyzed read availability, the latest ver-
sion read availability and the average number of nodes
accessed for the protocol. Our numerical evaluations
demonstrated that it improves not only read availability
but also latest version read availability. Furthermore,
when the number of nodes is greater than 100, it could
effectively reduce system load. We designed and imple-
mented a ﬁle transfer protocol to replicate data. Exper-
imental results proved that the trapezoid protocol could
achieve better throughput than quorum system or grid
protocol. Despite node failure, the probabilistic trape-
zoid protocol also achieved relatively better throughput.
1
Introduction
Data replication techniques are promising to improve
data dependability. A cluster system consisting of many
inexpensive PCs can be extremely dependable and have
outstanding performance [1]. The consistency of repli-
cated data in the distributed nodes must be maintained.
That is, we must consider the cost of maintaining consis-
tent data in order to improve dependability [2]. One data
replication technique is the Read One Write All (ROWA),
where data is read from one node while being written to
all nodes. The main advantage of this technique is its
lower read overhead. However, its main disadvantage is
that the write overhead is proportional to the number of
nodes in the system. In addition, if a node is not avail-
able, data cannot be updated, resulting in lower writing
reliability.
Quorum theory was proposed to overcome these dif-
ﬁculties [3], [4]. The data in a quorum system (QS), is
read from a set of nodes called a quorum and written to
it. The read and write operations can be mutually ex-
cluded, by applying a read and/or write lock techniques.
The QS, however, has to access O(N) nodes resulting in
high read/write operation overheads, where N is the num-
ber of nodes in the system.
A few data replication protocols that can reduce sys-
tem load have been proposed, utilizing a logical structure
for the nodes. A node with the grid protocol was arranged
on a logical mesh to reduce the number of nodes accessed
[5]. The tree quorum protocol applies a logical tree struc-
ture [6], [7]. Youn et al. proposed a hybrid data replica-
tion protocol that combines the concepts of the grid pro-
tocol and the tree quorum protocol [8]. With this proto-
col, it was possible to read/write data only by accessing
a small number of nodes when node failures did not oc-
cur. The trapezoid protocol (referred to as TP after this)
has also been proposed [9]. The TP has a higher level of
data availability and it also has better throughput than the
quorum system or grid protocol.
Another approach to improve data availability has
been presented, which proposed a probabilistic quorum
system (probabilistic QS) [10]. This technique can not
only reduce system load, but also increase data availabil-
ity. However, it could not always ensure consistency of
data. The probabilistic QS is considered useful in sys-
tems where the latest data is not always required, but a
high level of data availability is [11], [12]. The write quo-
rum and the read quorum do not necessarily intersect for
the probabilistic QS.
We propose a probabilistic TP that combines the TP
with the concept of the probabilistic QS. By relaxing the
intersection requirement on the TP, the technique we pro-
pose is able to provide better read availability, reduc-
ing the average number of accessed nodes. We can pre-
vent write conﬂicts by applying the write lock technique.
We theoretically analyzed the read availability, latest ver-
sion read availability (LV read availability), and expected
number of nodes accessed. We also did experiments and
obtained results for various replication protocols.
This paper is organized as follows. Section 2 brieﬂy
reviews replication protocols. We then propose the prob-
abilistic TP in Section 3. Then, our theoretical analysis of
the availabilities and number of accessed nodes are dis-
cussed in Section 4. The experimental results follow in
Section 5, and Section 6 concludes the paper.
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
1
2 Overview of Data Replication Protocols
2.1 Deﬁnitions
A read quorum (RQ) denotes a set of nodes from
|RQ| denotes the size of the RQ.
which data are read.
A write quorum (WQ) denotes a set of nodes in which
|WQ| denotes the size of the WQ. In
data are written.
QS, for an RQ and a WQ, at least one node is included in
the RQ and the WQ [3], [4]. That is,
RQ ∩ WQ (cid:2)= ∅.
Also, for two WQs, WQ1 and WQ2,
WQ1 ∩ WQ2 (cid:2)= ∅
(1)
(2)
holds. For a read operation, the RQ is locked. Similarly,
the WQ is locked for a write operation. Consequently,
access conﬂicts can be prevented. The data read is not
necessarily the latest version in the probabilistic QS [10].
Therefore, the following deﬁnitions are stated as an ex-
tension of read availability.
Deﬁnition 1. Read availability is deﬁned as the probabil-
ity that the data can be read from the sys-
tem.
Deﬁnition 2. LV read availability is deﬁned as the prob-
ability that the data can be read and is the
latest.
Deﬁnition 3. Write availability is deﬁned as the proba-
bility that the data can be written into the
system.
N denotes the number of nodes in the quorum system
and p denotes node availability. We assumed an indepen-
dent fail-stop model for the nodes.
2.2 Quorum System
Equation (3) holds and ensures that the RQ and WQ
have at least one common node in a QS. In other words,
the RQ and WQ intersect. The following equations ensure
that the read data is the latest because the newest version
is written into more than half the nodes.
|RQ| + |W Q| > N
2|W Q| > N
(3)
(4)
2.3 Grid Protocol
Each node for a grid protocol is arranged on an I × J
logical mesh structure [5]. The WQ consists of I nodes
in a column as well as (J − 1) nodes, which have been
selected from all the other columns. The RQ is a set of
J nodes, which have been selected from each column.
Figure 1 has a 3 × 5 grid protocol. An example RQ is
RQ = {A0,0, A2,1, A1,2, A1,3, A2,4}. An example WQ
is WQ = {A1,0, A0,1, A1,1, A2,1, A0,2, A2,3, A1,4}.
A0,0
A0,1
A0,2
A0,3
A0,4
A1,0
A1,1
A1,2
A1,3
A1,4
A2,0
A2,1
A2,2
A2,3
A2,4
Example RQ
Example WQ
Figure 1. Example Grid Protocol with 3 × 5 nodes.
b
B 0,0
B 0,1
B 0,2
B 1,0
B 1,1
B 1,2
B 1,3
B 1,4
l = 0
(The Top Level)
l = 1
B 2,0
B 2,1
B 2,2
B 2,3
B 2,4
B 2,5
B 2,6
l = 2
Figure 2. Example Trapezoid Protocol (sl = 2l + 3, a =
2, b = 3, h = 2, N = 15).
2.4 Trapezoid Protocol
As we can see from Fig. 2, the nodes for the TP are
arranged on a logical trapezoid that has a height of (h+1)
[9]. The top level consists of b nodes and the l-th level
(1 ≤ l ≤ h) consists of sl (= al + b) nodes, where a
is a non-negative integer and b is a positive integer. We
redeﬁned the RQs and WQs for a TP in what follows, to
ensure the consistency in read/write operations [9].
RQ: majority of nodes residing at top level, or (sl − w +
1) nodes residing at the l-th level (1 ≤ l ≤ h).
WQ: majority of nodes residing at top level, and w
arbitrary-chosen nodes in each level.
Parameter w is the number of nodes on which data is writ-
ten at the l-th level in a write operation, where 1 ≤ w ≤
s1, 1 ≤ l ≤ h. If more than half the nodes are available
for the top level, the latest data is readable. For the l-th
level, if more than (sl − w + 1) is available, the latest data
is readable from the l-th level. In this paper, RQl means
the quorum for the l-th level.
We adopted a mechanism to balance the load [8], [9].
Parameter f (0.0 ≤ f ≤ 1.0) describes the level to which
the read request is ﬁrst sent. Using f, the probability that
a read request will ﬁrst be sent to the l-th level, F (l), is
shown as
(cid:1)
F (l) =
(1 − f)l · f,
(1 − f)h.
(l < h)
(l = h)
(5)
A larger f causes a heavier load at the top level, resulting
in bottlenecks.
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
2
All nodes in at least one WQ have to be available for
the write operation to be successful.
Figure 2 has an example of a TP, where sl = 2l + 3,
h = 2 (0 < l < 2). For w = 1, there are 5 RQs ; RQ0 =
{B0,0, B0,1}, {B0,0, B0,2}, {B0,1, B0,2}, RQ1 = {B1,0,
B1,1, B1,2, B1,3, B1,4} and RQ2 = {B2,0, B2,1, B2,2,
B2,3, B2,4, B2,5, B2,6}. An example WQ is WQ = {B0,1,
B0,2, B1,2, B2,6}. If node B1,3 is not available, possible
RQs are RQ0 = {B0,0, B0,1}, {B0,0, B0,2}, {B0,1, B0,2}
and RQ2 = {B2,0, B2,1, B2,2, B2,3, B2,4, B2,5, B2,6}.
2.5 Probabilistic Quorum System
For a probabilistic QS, the condition for a quorum is
relaxed, i.e., an RQ and a WQ do not necessarily inter-
sect [10]. As a result, this technique ensures a high de-
gree of fault tolerance in exchange for a slightly lower
level of consistency. In -intersecting quorum system [10]
which is one of the probabilistic QS, the following equa-
tion holds.
Pr(WQ ∩ RQ (cid:2)= ∅) ≥ 1 − ,
(6)
where 0 ≤  ≤ 1. For example, for N = 100, |RQ| =
|WQ| = 30, and p = 0.9, the -intersecting quorum sys-
tem provides better than 0.99999 LV read availability as
well as read availability that is very close to 1.0.
3 Probabilistic Trapezoid Protocol
We propose a probabilistic TP which has a logical
trapezoid structure with the probabilistic QS. The pro-
posed protocol attains higher read availability than the TP
in Section 2.4. This technique can also detect write con-
ﬂicts by applying the write lock technique.
Smaller sets of nodes that do not necessarily intersect
are used as RQs in a probabilistic TP. The parameter γ
(0.0 ≤ γ ≤ 1.0) indicates the degree of relaxation. The
maximum number of relaxed nodes for the probabilistic
TP, tl, is expressed as follows for the l-th level:
(cid:1)
tl =
0,
(cid:6)sl × γ(cid:7).
(l = 0)
(l (cid:2)= 0)
(7)
In other words, the size of the quorum for the l-th level
(1 ≤ l ≤ h) is derived as Eq. (8).
|RQl| ≥ sl − w + 1 − tl.
(8)
This kind of relaxation is not applied to the top level.
Therefore, if more than half of the nodes in the top level
are available, it is said to be readable. For the l-th level,
a set of nodes consisting of more than (sl − w + 1 − tl)
can be used as a quorum. In other words, the l-th level is
readable. For γ = 0, the probabilistic TP is exactly the
same as the TP shown in Section 2.4. Hereafter, we call
this protocol the TP with γ = 0.0.
The read operation for the probabilistic TP is described
by
Step 1. Select the l-th level according to Eq. (5).
Step 2. Check if the l-th level is readable by applying
steps A, B, and C (to be described later).
Step 3. If readable, the data will be read and read opera-
tion will terminate successfully.
Step 4. If not, try the (l + 1)-th level. For the bottom
level, l = h, try the top level.
If no levels are readable, the read operation fails. The
following describes the procedure for checking whether
the l-th level is readable.
Step A. Select a node randomly and test whether it is
available.
Step B. If the following conditions hold, the l-th level is
determined to be readable:
case 1. There are (sl − w + 1) available nodes.
case 2. There are at least (sl − w + 1− tl) avail-
able nodes and all the nodes in the l-th
have been checked.
Step C. The l-th level is not readable:
if the number
of available nodes found plus the number of
unchecked nodes is < (sl − w + 1 − tl).
Figure 3 describes this procedure.
Let us look at an example of a probabilistic TP for
w = 1, γ = 0.2 by using Fig. 2. We assumed node B1,3
would be unavailable. Since the number of nodes in the 2-
nd level is 5 and γ = 0.2, (sl−w+1−tl) = 4. Therefore,
RQ1 = {B1,0, B1,1, B1,2, B1,4} as well as RQ0 = {B0,0,
B0,1}, {B0,0, B0,2}, {B0,1, B0,2} and RQ2 = {B2,0, B2,1,
B2,2, B2,3, B2,4, B2,5, B2,6}. When the latest data is writ-
ten in B1,3, RQ1 does not provide the latest data.
4 Analysis of Probabilistic Trapezoid Pro-
tocol
In this section, we analyze read availability, LV read
availability and the expected number of nodes accessed
for the probabilistic TP. The write availability for the
probabilistic TP is exactly the same as the one derived
in [9]. To simplify analysis, we assumed the following
conditions.
1. Each node would fail independently.
2. A node will stop on failure (fail-stop).
3. Communication links would always be available.
For readability, we deﬁned the following expression,
which shows the probability that at least j nodes out of i
nodes would be available.
· pk(1 − p)i−k,
(9)
Ψ(i, j) ≡ i(cid:2)
(cid:3)
(cid:4)
i
k
k=j
3
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
Figure 3. Procedure for checking whether l-th level is
readable.
Gread =
(F (l) · Pg(l)) ,
(15)
ity Pread is derived as
Pread = 1 − h(cid:5)
l=0
(1 − Ql).
(12)
Next, let us derive LV read availability for the l-th
level, i.e., Gl. According to Eq.
(7), the latest data is
obtained from the top level. This means G0 = Q0. For
the lower level, the probability that the latest data will be
available is the summation of ξ(k).
sl(cid:2)
Ql,
k=sl−w+1−tl
(l = 0)
(l (cid:2)= 0)
ξ(k),
(13)
where ξ(k) means the probability that a quorum with a
size of k will provide the latest data. ξ(k) is expressed as
(cid:4)
 . (14)
1 −
(cid:4)(cid:16)(cid:3)
(cid:3)