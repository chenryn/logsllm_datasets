c
d
a
o
r
B
f
o
F
D
C
0
5/15 5/30 6/15 6/30 7/15 7/30 8/15
0
 0
10s
Date
Periscope
Meerkat
1min
10min
1h
6h
24h
Length of Broadcasts
y
a
D
r
e
p
s
t
s
a
c
d
a
o
r
B
f
e
p
o
c
s
i
r
e
P
o
#
s
t
s
a
c
d
a
o
r
B
f
o
F
D
C
350k
300k
250k
200k
150k
100k
50k
Periscope
Crawler Down
Meerkat
10k
8k
6k
4k
2k
t
a
k
r
e
e
M
0
5/15 5/30 6/15 6/30 7/15 7/30 8/15
0
Date
Figure 1: # of daily broadcasts.
 1
 0.8
 0.6
 0.4
 0.2
 0
01
Meetkat
Periscope
100
10
# of Viewers per Broadcast
1k
10k
100k
y
a
D
o
#
s
t
s
a
c
d
a
o
r
B
f
o
F
D
C
Figure 2: # of daily active users.
Figure 3: CDF of broadcast length.
 1
 0.8
 0.6
 0.4
 0.2
 0
Meerkat Heart
Meerkat Comment
Periscope Comment
Periscope Heart
01
10
100
1k
10k
100k
1M
Number of Comments/Hearts per Broadcast
 1
 0.8
 0.6
 0.4
 0.2
s
r
e
s
U
f
o
F
D
C
 0
0 1
Meerkat Create
Periscope Create
Meerkat View
Periscope View
10
10k
Number of Broadcasts Viewed/Created
100
1k
Figure 4: Total # of viewers per broad-
cast.
Figure 5: Total # of comments (hearts)
per broadcast.
Figure 6: Distribution of broadcasts
views and creation over users.
casts, generated by 1,847,009 unique broadcasters. Alto-
gether, these broadcasts had a total number of 705,751,096
viewers, including both registered users on mobile apps and
anonymous viewers on web browsers. Of these, more than
482 million views were generated by 7,649,303 registered
mobile users, and the rest were from anonymous views on
the Periscope webpage.
Our crawler was interrupted brieﬂy between August 7–9,
2015 due to a communication bug with the Periscope server.
As a result, our dataset is missing roughly 4.5% of the broad-
casts during this period. We believe this missing data is
small enough not to aﬀect our data analysis or conclusions.
Finally, since Periscope assigns userID sequentially5, we can
identify the total number of registered users. As of August
20, 2015 (the last day of our measurement), Periscope had
12 million registered users. For each user, we crawled her
follower and followee lists to analyze the structure of the so-
cial graph.
Data Collection on Meerkat. We use the same method-
ology to collect broadcast data from Meerkat between May
12 and June 15, 2015. After one month of data collection,
Meerkat management informed us our measurements were
introducing noticeable load on their servers, and we termi-
nated our measurements. As shown in Table 1, the Meerkat
dataset includes a complete list of 164,335 broadcasts, in-
volving 189,075 unique users (57K broadcasters, 183K view-
ers). During our measurement period, these broadcasts col-
lected a total of more than 3.8 million views, of which 3.1
million views were generated by 183K viewers. Since Meerkat
does not assign userID sequentially, and the follower/followee
graph was not fully connected at the time of our measure-
5At launch, Periscope assigned userIDs as sequential num-
bers. In September 2015, they switched to a 13-character
hash string.
ments, we were unable to reliably estimate the total number
of registered users.
3.2 Analysis: Broadcasts & Users
Using the collected datasets, we now explore application-
level characteristics of Periscope and Meerkat. We focus on
three aspects: 1) scale and growth trends in terms of num-
ber of users and broadcasts; 2) duration and intensity of user
interactions during broadcasts; and 3) Periscope’s social net-
work and its impact on broadcast popularity.
Figure 1 plots the number of daily
Scale & Growth.
broadcasts over time on both networks. For Periscope, the
daily broadcast volume grew rapidly over time (more than
300% over three months). This rapid growth is consistent
with prior observations of initial network growth [50]. The
biggest leap occurred shortly after May 26, when Periscope
launched their Android app. The broadcasts show a clear
weekly pattern, where peaks in daily broadcasts usually co-
incide with the weekend. Broadcasts drop to their lowest
weekly level on Mondays, then slowly grow during the week.
In contrast, the volume of Meerkat broadcasts is orders of
magnitude lower, weekly patterns are harder to identify, and
daily broadcast volume nearly dropped by half over a single
month to below 4000. It is clear that closing oﬀ the Twitter
social graph had the intended eﬀect on Meerkat.
Similarly, Periscope’s daily number of active users (both
viewers and broadcasters) also grows rapidly (Figure 2). View-
ers jumped from 200K in May to more than a million by Au-
gust. The ratio between the active viewers and broadcasters
is roughly 10:1. In comparison, Meerkat daily viewers ﬂuc-
tuates, but averages around 20K. Meerkat broadcasters show
a clear descending trend over our measurement period, even-
tually dropping to less than 3K (roughly 40 times smaller
than Periscope).
488Viewer
Follower Viewer
105
104
103
102
101
t
s
a
c
d
a
o
r
B
f
o
s
r
e
w
e
V
i
f
o
#
1
101
102
103
104
105
106
# of Followers of Broadcaster
Figure 7: Broadcaster’s followers vs. # of viewers
(Periscope).
For both net-
Broadcast Duration & User Interaction.
works, the majority of broadcasts are short: 85% of broad-
casts last <10 minutes (Figure 3). Periscope broadcasts are
more even in length, whereas Meerkat streams are more skewed
by a smaller number of longer broadcasts. In terms of view-
ers, the two systems are quite diﬀerent. For Meerkat, most
(60%) broadcasts have no viewers at all. In contrast, nearly
all Periscope broadcasts received at least one viewer, with
the most popular broadcasts attracting as many as 100K view-
ers. Anecdotal evidence shows that recent Periscope ses-
sions have grown much bigger: a single Periscope of a large
rain puddle collected hundreds of thousands of viewers, and
had more than 20,000 simultaneous viewers at its peak [14].
Within both Periscope and Meerkat broadcasts, viewers
interact with the broadcast by posting real-time comments
and hearts. As shown in Figure 5, while not all broadcasts
received responses, a small portion of popular broadcasts are
highly interactive. As expected, Periscope broadcasts gen-
erate much more user interactions. About 10% Periscope
broadcasts received more than 100 real-time comments and
more than 1000 hearts. The most popular broadcast attracted
1.35 million hearts. Recall that the number of total viewers
per broadcast who can comment is limited by Periscope to
roughly 100 (presumably for scalability reasons). This puts
a strong cap on the total number of comments.
We wanted to take a closer look at the distribution of ac-
tivities over each network’s user population. In Figure 6, we
plot the CDF distribution of broadcast views and broadcast
creation activities over users. Here the trends are roughly
consistent across Periscope and Meerkat: user activity is
highly skewed, and small groups of users are much more
active than average in terms of both broadcast creation and
viewership. For Periscope, viewers are especially skewed,
with the most active 15% of users watching 10x more broad-
casts than the median user.
We found that the social network in
Social Network.
Periscope has a clear impact on the broadcast viewership.
Figure 7 shows the correlation between a broadcaster’s num-
ber of followers and number of viewer per broadcast. It’s
clear that users with more followers are more likely to gen-
erate highly popular broadcasts. This is because when a user
starts a new broadcast, all her followers will receive notiﬁ-
cations on their mobile app. On Periscope, celebrities like
Ellen DeGeneres already have over one million followers,
thus creating built-in audiences for their broadcasts. As we
observed in Table 2, Periscope’s follow graph is similar in
graph structure to social graphs in Twitter and Facebook.
Its follow graph exhibits negative assortativity similar to the
Twitter graph, which likely comes from the prevalence of
asymmetric, one-to-many follow relationships.
Our measurements show that Periscope is ex-
Summary.
periencing astounding growth in users and broadcast streams.
Growth in broadcasts is particularly noteworthy, as it is the
main contributor to issues of scalability in video delivery.
On March 28, 2016, Periscope hit a milestone of 200 mil-
lion total broadcasts [35]. And a quick check at the time of
this submission (May 8, 2016) shows an average of roughly
472K daily broadcasts, and the numbers are still growing
steadily.
At this rate, Periscope will face even bigger scalability
challenges in the near future. We also observe that broad-
casts can attract a large number of viewers (up to 100K).
These broadcasts are also highly interactive, with frequent,
real-time hearts from viewers to broadcasters. Periscope
comments, in contrast, are severely constrained by their limit
of 100 active users. Given the audience size of some broad-
casts, it is clear that more inclusive support for group inter-
action is necessary in these broadcasts.
4. UNDERSTANDING END-TO-END DE-
LAY
Our initial measurements have demonstrated the scale and
real-time features of personalized livestream services. As
they continue to grow, a natural question arises:
“Can personalized livestreams scale to millions of streams,
and what, if any, technical challenges limit their scalabil-
ity?”
To answer this question, we must ﬁrst study how Periscope
delivers its streams over its content distribution network (CDN),
which is responsible for delivering real-time video streams
to viewers and scaling up to a massive number of simulta-
neous live streams. In particular, we seek to understand the
key design choices that Periscope has made to support both
scalability and real-timeness, and the resulting system per-
formance.
Our analysis of Periscope broadcast delivery includes four
elements.
• We explore Periscope’s CDN infrastructure to support mes-
sage delivery and live video streaming services. We reverse-
engineer their streaming protocols and CDN locations, and
compare with Meerkat and Facebook Live (§4).
• We perform detailed measurements on Periscope CDN by
breaking-down the video transmission delay to each step of
the transmission process (§4.2).
• Based on collected data, we perform detailed analysis on
streaming delay and explore key design trade-oﬀs between
delay and scalability (§5).
• We analyze the tradeoﬀ between scalability and latency in
the context of the three largest contributors to delay, in-
cluding chunking and polling (§5.2), geolocation factors in
CDN servers (§5.3), and client-side buﬀering strategies (§6).
489Broadercaster
RTMP
Broadercaster
Broadercaster
Periscope 
Server
Wowza
Fastly
Video
Message
RTMP
HLS
HTTPS
PubNub
HTTPS
Viewers
Viewers
Viewers
Viewers
(Commenter)
(Non-commenter)
(a) Control Channel
(b) Video Channel
(c) Message Channel
Fastly