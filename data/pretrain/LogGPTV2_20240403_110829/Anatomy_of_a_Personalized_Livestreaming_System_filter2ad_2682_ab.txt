# Analysis of Periscope and Meerkat Live Streaming Services

## 1. Data Collection and Overview

### 1.1 Periscope Data Collection
We collected data from Periscope between May 15, 2015, and August 20, 2015. The dataset includes 3,500,000 broadcasts generated by 1,847,009 unique broadcasters. These broadcasts had a total of 705,751,096 viewers, including 482 million views from 7,649,303 registered mobile users and the rest from anonymous web viewers.

Our crawler was briefly interrupted from August 7-9, 2015, due to a communication bug with the Periscope server, resulting in a 4.5% data gap. This missing data is small enough not to affect our analysis or conclusions. As of August 20, 2015, Periscope had 12 million registered users. We also crawled follower and followee lists for each user to analyze the social graph structure.

### 1.2 Meerkat Data Collection
We used the same methodology to collect broadcast data from Meerkat between May 12, 2015, and June 15, 2015. After one month, Meerkat management informed us that our measurements were introducing noticeable load on their servers, so we terminated our measurements. The Meerkat dataset includes 164,335 broadcasts involving 189,075 unique users (57,000 broadcasters and 183,000 viewers). These broadcasts collected a total of 3.8 million views, with 3.1 million views generated by 183,000 viewers. Since Meerkat does not assign user IDs sequentially and the follower/followee graph was not fully connected, we could not reliably estimate the total number of registered users.

## 2. Analysis: Broadcasts and Users

### 2.1 Scale and Growth
**Figure 1: Number of Daily Broadcasts**
- **Periscope**: The daily broadcast volume grew rapidly over three months, increasing by more than 300%. The biggest leap occurred after the launch of the Android app on May 26. There is a clear weekly pattern with peaks on weekends and lows on Mondays.
- **Meerkat**: The volume of broadcasts is significantly lower, with no clear weekly pattern. The daily broadcast volume dropped by half over a single month to below 4,000.

**Figure 2: Number of Daily Active Users**
- **Periscope**: The number of active users (both viewers and broadcasters) grew rapidly, with viewers increasing from 200,000 in May to over a million by August. The ratio of active viewers to broadcasters is roughly 10:1.
- **Meerkat**: The number of daily viewers fluctuates but averages around 20,000. The number of broadcasters shows a clear descending trend, dropping to less than 3,000.

### 2.2 Broadcast Duration and User Interaction
**Figure 3: CDF of Broadcast Length**
- **Periscope and Meerkat**: Most broadcasts are short, with 85% lasting less than 10 minutes. Periscope broadcasts are more evenly distributed in length, while Meerkat streams are more skewed by a smaller number of longer broadcasts.

**Figure 4: Total Number of Viewers per Broadcast**
- **Periscope**: Nearly all broadcasts received at least one viewer, with the most popular attracting up to 100,000 viewers. Some recent sessions have attracted hundreds of thousands of viewers, with peak simultaneous viewers exceeding 20,000.
- **Meerkat**: Most broadcasts (60%) have no viewers at all.

**Figure 5: Total Number of Comments (Hearts) per Broadcast**
- **Periscope**: A small portion of popular broadcasts are highly interactive, with about 10% receiving more than 100 real-time comments and more than 1,000 hearts. The most popular broadcast attracted 1.35 million hearts.
- **Meerkat**: Fewer broadcasts received responses, and the interaction level is much lower.

**Figure 6: Distribution of Broadcast Views and Creation Over Users**
- Both platforms show highly skewed user activity, with a small group of users being much more active in both broadcast creation and viewership. For Periscope, the most active 15% of users watch 10 times more broadcasts than the median user.

### 2.3 Social Network
**Figure 7: Broadcasterâ€™s Followers vs. Number of Viewers (Periscope)**
- **Periscope**: There is a clear correlation between the number of followers and the number of viewers per broadcast. Users with more followers are more likely to generate highly popular broadcasts. Celebrities like Ellen DeGeneres, who have over one million followers, create built-in audiences for their broadcasts. The follow graph in Periscope exhibits negative assortativity, similar to Twitter, due to the prevalence of asymmetric, one-to-many follow relationships.

## 3. Summary
Periscope is experiencing rapid growth in users and broadcast streams. The growth in broadcasts is particularly noteworthy as it is the main contributor to scalability issues in video delivery. As of March 28, 2016, Periscope hit a milestone of 200 million total broadcasts, with an average of approximately 472,000 daily broadcasts. At this rate, Periscope will face even bigger scalability challenges in the near future. Broadcasts can attract up to 100,000 viewers and are highly interactive, with frequent, real-time hearts from viewers to broadcasters. However, Periscope comments are limited to 100 active users, indicating a need for more inclusive support for group interaction in these broadcasts.

## 4. Understanding End-to-End Delay

### 4.1 CDN Infrastructure
To understand how Periscope delivers its streams, we explored its CDN infrastructure, reverse-engineered its streaming protocols, and compared them with Meerkat and Facebook Live.

### 4.2 Detailed Measurements on Periscope CDN
We performed detailed measurements on Periscope's CDN by breaking down the video transmission delay into each step of the transmission process.

### 4.3 Streaming Delay and Design Trade-offs
Based on the collected data, we analyzed streaming delay and explored key design trade-offs between delay and scalability.

### 4.4 Key Contributors to Delay
- **Chunking and Polling**: We analyzed the trade-off between scalability and latency in the context of chunking and polling.
- **Geolocation Factors in CDN Servers**: We examined the impact of geolocation factors on CDN server performance.
- **Client-Side Buffering Strategies**: We analyzed the effectiveness of different client-side buffering strategies.

By understanding these elements, we aim to provide insights into the technical challenges and potential solutions for scaling personalized livestream services.