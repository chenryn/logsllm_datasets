User: How to automatically deploy a web server through Ansible script?
Assistant: The following are the basic steps to automate the deployment of web servers using Ansible scripts: 1. Install Ansible: Make sure Ansible is installed on the control node. 2. Write Ansible Playbook: Write an Ansible Playbook that can install and configure the web server. The Playbook should include a list of tasks and specific steps for each task. Here is an example: ``` --- hosts: webservers become: true tasks: - name: Install Apache Web Server apt: name: apache2 state: present - name: Start Apache Web Server and enable it at boot time service: name: apache2 state: started enabled: true - name: Copy index.html file to Apache Web Server Document Root copy: src: /path/to/index.html dest: /var/www/html/index.html ``` In this example, the Playbook performs three tasks: - Install the Apache Web Server - Start the Apache Web Server and enable its autostart - Copy the index.html file into the Apache Web Server document root 3. Write the Inventory file: Write a Ansible Inventory file that includes a list of hosts on which to install the web server. Here is an example: ``` [webservers] web1.example.com web2.example.com web3.example.com ``` In this example we have three web servers named web1, web2, and web3. 4. Run the Playbook: Run the Ansible Playbook to install and configure the web server on the target host. Here is the command: ``` ansible-playbook playbook.yml -i inventory.ini ``` In this example, we specified the target hosts where we want to install the web server in the host inventory file inventory.ini. Ansible Playbook commands that invoke playbook.yml will be run on these target hosts. 5. Test: After installing and configuring the web server, test that it is working. In this example, the IP address or hostname of the web server can be entered into a browser to test whether it is reachable.