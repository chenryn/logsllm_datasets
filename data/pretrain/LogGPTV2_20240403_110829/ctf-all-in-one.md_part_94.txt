| | |:|| 0x00400cc9 e88ffbffff call sub.read_85d
; ssize_t read(int fildes, void *buf, size_t nbyte) ; 读入
笔记内容
| | |:|| 0x00400cce 488b0dd31320. mov rcx, qword [0x006
020a8] ; [0x6020a8:8]=0
| | |:|| 0x00400cd5 8b45ec mov eax, dword [local
_14h]
| | |:|| 0x00400cd8 4863d0 movsxd rdx, eax
| | |:|| 0x00400cdb 4889d0 mov rax, rdx
| | |:|| 0x00400cde 4801c0 add rax, rax
; '#'
| | |:|| 0x00400ce1 4801d0 add rax, rdx
; '('
| | |:|| 0x00400ce4 48c1e003 shl rax, 3
| | |:|| 0x00400ce8 4801c8 add rax, rcx
; '&'
| | |:|| 0x00400ceb 4883c010 add rax, 0x10
| | |:|| 0x00400cef 48c700010000. mov qword [rax], 1
; 设置 Note 结构体成员 isValid 为 1
| | |:|| 0x00400cf6 488b35ab1320. mov rsi, qword [0x006
020a8] ; [0x6020a8:8]=0
980
6.1.7 pwn 0CTF2015 freenote
| | |:|| 0x00400cfd 8b45f0 mov eax, dword [local
_10h]
| | |:|| 0x00400d00 4863c8 movsxd rcx, eax
| | |:|| 0x00400d03 8b45ec mov eax, dword [local
_14h]
| | |:|| 0x00400d06 4863d0 movsxd rdx, eax
| | |:|| 0x00400d09 4889d0 mov rax, rdx
| | |:|| 0x00400d0c 4801c0 add rax, rax
; '#'
| | |:|| 0x00400d0f 4801d0 add rax, rdx
; '('
| | |:|| 0x00400d12 48c1e003 shl rax, 3
| | |:|| 0x00400d16 4801f0 add rax, rsi
; '+'
| | |:|| 0x00400d19 4883c010 add rax, 0x10
| | |:|| 0x00400d1d 48894808 mov qword [rax + 8],
rcx ; 设置 Note 结构体成员 length 为 [local_10h]
| | |:|| 0x00400d21 488b0d801320. mov rcx, qword [0x006
020a8] ; [0x6020a8:8]=0
| | |:|| 0x00400d28 8b45ec mov eax, dword [local
_14h]
| | |:|| 0x00400d2b 4863d0 movsxd rdx, eax
| | |:|| 0x00400d2e 4889d0 mov rax, rdx
| | |:|| 0x00400d31 4801c0 add rax, rax
; '#'
| | |:|| 0x00400d34 4801d0 add rax, rdx
; '('
| | |:|| 0x00400d37 48c1e003 shl rax, 3
| | |:|| 0x00400d3b 4801c8 add rax, rcx
; '&'
| | |:|| 0x00400d3e 488d5020 lea rdx, [rax + 0x20]
; 32
| | |:|| 0x00400d42 488b45f8 mov rax, qword [local
_8h]
| | |:|| 0x00400d46 488902 mov qword [rdx], rax
; 设置 Note 结构体成员 content 为 [local_8h]
| | |:|| 0x00400d49 488b05581320. mov rax, qword [0x006
020a8] ; [0x6020a8:8]=0
| | |:|| 0x00400d50 488b5008 mov rdx, qword [rax +
8] ; [0x8:8]=-1 ; 8 ; 取出 Notes 成员 length
981
6.1.7 pwn 0CTF2015 freenote
| | |:|| 0x00400d54 4883c201 add rdx, 1
; length +1
| | |:|| 0x00400d58 48895008 mov qword [rax + 8],
rdx ; 写回 length
| | |:|| 0x00400d5c bfa3124000 mov edi, str.Done.
; 0x4012a3 ; "Done."
| | |:|| 0x00400d61 e85af9ffff call sym.imp.puts
; int puts(const char *s)
| |,===== 0x00400d68 8345ec01 add dword [local_14h]
, 1
| || :|| ; JMP XREF from 0x00400bfa (sub.Length_of_new_note:_
bc2)
| || :|`-> 0x00400d6c 8b45ec mov eax, dword [local
_14h] ; eax = [local_14h]
| || :| 0x00400d6f 4863d0 movsxd rdx, eax
; rdx 表示序号
| || :| 0x00400d72 488b052f1320. mov rax, qword [0x006
020a8] ; [0x6020a8:8]=0
| || :| 0x00400d79 488b00 mov rax, qword [rax]
; 取出 Notes 成员 max
| || :| 0x00400d7c 4839c2 cmp rdx, rax
; 比较序号与 max
| || `=== 0x00400d85 c9 leave
\ 0x00400d86 c3 ret
该函数首先对你输入的大小进行判断，如果小于 128 字节，则默认分配 128 字节
的空间，如果大于 128 字节且小于 4096 字节时，则分配比输入稍大的 128 字节的
整数倍的空间，如果大于 4096 字节，则默认分配 4096 字节。
982
6.1.7 pwn 0CTF2015 freenote
Edit 的实现如下：
[0x00400770]> pdf @ sub.Note_number:_d87
/ (fcn) sub.Note_number:_d87 502
| sub.Note_number:_d87 (int arg_1000h);
| ; var int local_1ch @ rbp-0x1c
| ; var int local_18h @ rbp-0x18
| ; var int local_14h @ rbp-0x14
| ; var int local_0h @ rbp-0x0
| ; arg int arg_1000h @ rbp+0x1000
| ; CALL XREF from 0x004010e0 (main + 89)
| 0x00400d87 55 push rbp
| 0x00400d88 4889e5 mov rbp, rsp
| 0x00400d8b 53 push rbx
| 0x00400d8c 4883ec18 sub rsp, 0x18
| 0x00400d90 bfa9124000 mov edi, str.Note_num
ber: ; 0x4012a9 ; "Note number: "
| 0x00400d95 b800000000 mov eax, 0
| 0x00400d9a e841f9ffff call sym.imp.printf
; int printf(const char *format)
| 0x00400d9f b800000000 mov eax, 0
| 0x00400da4 e8a5fbffff call sub.atoi_94e
; int atoi(const char *str)
| 0x00400da9 8945e8 mov dword [local_18h]
, eax ; [local_18h] 为要修改的笔记序号
| 0x00400dac 837de800 cmp dword [local_18h]
, 0 ; 进行检查，确保序号是有效的
| ,= 0x00400df1 bfb7124000 mov edi, str.Invalid_
number ; 0x4012b7 ; "Invalid number!"
| | 0x00400df6 e8c5f8ffff call sym.imp.puts
; int puts(const char *s)
| | ,= 0x00400e00 bfc7124000 mov edi, str.Length_o
f_note: ; 0x4012c7 ; "Length of note: "
| | 0x00400e05 b800000000 mov eax, 0
| | 0x00400e0a e8d1f8ffff call sym.imp.printf
; int printf(const char *format)
| | 0x00400e0f b800000000 mov eax, 0
| | 0x00400e14 e835fbffff call sub.atoi_94e
; int atoi(const char *str)
| | 0x00400e19 8945e4 mov dword [local_1ch]
, eax ; [local_1ch] 为新大小
| | 0x00400e1c 837de400 cmp dword [local_1ch]
, 0 ; 进行检查，确保新的大小是有效的
| ,== 0x00400e31 817de4001000. cmp dword [local_1ch]
, 0x1000 ; [0x1000:4]=-1
| |,== 0x00400e41 8b45e4 mov eax, dword [local
_1ch]
| | | 0x00400e44 4863c8 movsxd rcx, eax
| | | 0x00400e47 488b355a1220. mov rsi, qword [0x006
020a8] ; [0x6020a8:8]=0
| | | 0x00400e4e 8b45e8 mov eax, dword [local
_18h]
| | | 0x00400e51 4863d0 movsxd rdx, eax
| | | 0x00400e54 4889d0 mov rax, rdx
| | | 0x00400e57 4801c0 add rax, rax
; '#'
| | | 0x00400e5a 4801d0 add rax, rdx
; '('
| | | 0x00400e5d 48c1e003 shl rax, 3
| | | 0x00400e61 4801f0 add rax, rsi
; '+'
| | | 0x00400e64 4883c010 add rax, 0x10
| | | 0x00400e68 488b4008 mov rax, qword [rax +
8] ; [0x8:8]=-1 ; 8
| | | 0x00400e6c 4839c1 cmp rcx, rax
; 比较新大小与原大小是否相同
| |,==< 0x00400e6f 0f84b7000000 je 0x400f2c
; 如果相同，跳过重新分配空间的过程，直接修改笔记
| ||| 0x00400e75 8b45e4 mov eax, dword [local
_1ch]
| ||| 0x00400e78 99 cdq
| ||| 0x00400e79 c1ea19 shr edx, 0x19
| ||| 0x00400e7c 01d0 add eax, edx
| ||| 0x00400e7e 83e07f and eax, 0x7f
| ||| 0x00400e81 29d0 sub eax, edx
| ||| 0x00400e83 ba80000000 mov edx, 0x80
; 128
985
6.1.7 pwn 0CTF2015 freenote
| ||| 0x00400e88 29c2 sub edx, eax
| ||| 0x00400e8a 89d0 mov eax, edx
| ||| 0x00400e8c c1f81f sar eax, 0x1f
| ||| 0x00400e8f c1e819 shr eax, 0x19
| ||| 0x00400e92 01c2 add edx, eax
| ||| 0x00400e94 83e27f and edx, 0x7f
| ||| 0x00400e97 29c2 sub edx, eax
| ||| 0x00400e99 89d0 mov eax, edx
| ||| 0x00400e9b 89c2 mov edx, eax
| ||| 0x00400e9d 8b45e4 mov eax, dword [local
_1ch]
| ||| 0x00400ea0 01d0 add eax, edx
| ||| 0x00400ea2 8945ec mov dword [local_14h]
, eax
| ||| 0x00400ea5 488b1dfc1120. mov rbx, qword [0x006
020a8] ; [0x6020a8:8]=0
| ||| 0x00400eac 8b45ec mov eax, dword [local
_14h]
| ||| 0x00400eaf 4863c8 movsxd rcx, eax
| ||| 0x00400eb2 488b35ef1120. mov rsi, qword [0x006
020a8] ; [0x6020a8:8]=0
| ||| 0x00400eb9 8b45e8 mov eax, dword [local
_18h]
| ||| 0x00400ebc 4863d0 movsxd rdx, eax
| ||| 0x00400ebf 4889d0 mov rax, rdx
| ||| 0x00400ec2 4801c0 add rax, rax
; '#'
| ||| 0x00400ec5 4801d0 add rax, rdx
; '('
| ||| 0x00400ec8 48c1e003 shl rax, 3
| ||| 0x00400ecc 4801f0 add rax, rsi
; '+'
| ||| 0x00400ecf 4883c020 add rax, 0x20
| ||| 0x00400ed3 488b00 mov rax, qword [rax]
| ||| 0x00400ed6 4889ce mov rsi, rcx
; rsi 为分配的大小，算法和 New 过程中的一样
| ||| 0x00400ed9 4889c7 mov rdi, rax
; rdi 为 Note 成员 content
| ||| 0x00400edc e85ff8ffff call sym.imp.realloc
; void *realloc(void *ptr, size_t size)
986
6.1.7 pwn 0CTF2015 freenote
| ||| 0x00400ee1 4889c1 mov rcx, rax
| ||| 0x00400ee4 8b45e8 mov eax, dword [local
_18h]
| ||| 0x00400ee7 4863d0 movsxd rdx, eax
| ||| 0x00400eea 4889d0 mov rax, rdx
| ||| 0x00400eed 4801c0 add rax, rax
; '#'
| ||| 0x00400ef0 4801d0 add rax, rdx
; '('
| ||| 0x00400ef3 48c1e003 shl rax, 3
| ||| 0x00400ef7 4801d8 add rax, rbx
; '%'
| ||| 0x00400efa 4883c020 add rax, 0x20
| ||| 0x00400efe 488908 mov qword [rax], rcx
| ||| 0x00400f01 488b35a01120. mov rsi, qword [0x006
020a8] ; [0x6020a8:8]=0
| ||| 0x00400f08 8b45e4 mov eax, dword [local
_1ch]
| ||| 0x00400f0b 4863c8 movsxd rcx, eax
| ||| 0x00400f0e 8b45e8 mov eax, dword [local
_18h]
| ||| 0x00400f11 4863d0 movsxd rdx, eax