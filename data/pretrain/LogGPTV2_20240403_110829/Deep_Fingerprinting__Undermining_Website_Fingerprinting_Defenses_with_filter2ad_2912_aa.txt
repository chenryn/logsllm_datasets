title:Deep Fingerprinting: Undermining Website Fingerprinting Defenses with
Deep Learning
author:Payap Sirinam and
Mohsen Imani and
Marc Ju&apos;arez and
Matthew Wright
Deep Fingerprinting: Undermining Website Fingerprinting
Defenses with Deep Learning
Payap Sirinam
Rochester Institute of Technology
Rochester, New York
PI:EMAIL
Marc Juarez
imec-COSIC KU Leuven
Leuven, Belgium
PI:EMAIL
Mohsen Imani
University of Texas at Arlington
Arlington, Texas
PI:EMAIL
Matthew Wright
Rochester Institute of Technology
Rochester, New York
PI:EMAIL
ABSTRACT
Website fingerprinting enables a local eavesdropper to determine
which websites a user is visiting over an encrypted connection.
State-of-the-art website fingerprinting attacks have been shown
to be effective even against Tor. Recently, lightweight website fin-
gerprinting defenses for Tor have been proposed that substantially
degrade existing attacks: WTF-PAD and Walkie-Talkie. In this work,
we present Deep Fingerprinting (DF), a new website fingerprinting
attack against Tor that leverages a type of deep learning called
Convolutional Neural Networks (CNN) with a sophisticated ar-
chitecture design, and we evaluate this attack against WTF-PAD
and Walkie-Talkie. The DF attack attains over 98% accuracy on Tor
traffic without defenses, better than all prior attacks, and it is also
the only attack that is effective against WTF-PAD with over 90%
accuracy. Walkie-Talkie remains effective, holding the attack to just
49.7% accuracy. In the more realistic open-world setting, our attack
remains effective, with 0.99 precision and 0.94 recall on undefended
traffic. Against traffic defended with WTF-PAD in this setting, the
attack still can get 0.96 precision and 0.68 recall. These findings
highlight the need for effective defenses that protect against this
new attack and that could be deployed in Tor. .
CCS CONCEPTS
• Security and privacy → Privacy-preserving protocols; • Net-
works → Network privacy and anonymity;
KEYWORDS
Tor; privacy; website fingerprinting; deep learning
ACM Reference Format:
Payap Sirinam, Mohsen Imani, Marc Juarez, and Matthew Wright. 2018.
Deep Fingerprinting: Undermining Website Fingerprinting Defenses with
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
CCS ’18, October 15–19, 2018, Toronto, ON, Canada
© 2018 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-5693-0/18/10...$15.00
https://doi.org/10.1145/3243734.3243768
Deep Learning. In 2018 ACM SIGSAC Conference on Computer and Commu-
nications Security (CCS ’18), October 15–19, 2018, Toronto, ON, Canada. ACM,
New York, NY, USA, 16 pages. https://doi.org/10.1145/3243734.3243768
1 INTRODUCTION
With more than two million daily users, Tor has emerged as the de
facto tool to anonymously browse the Internet [2]. Tor is, however,
known to be vulnerable to traffic analysis. In particular, website
fingerprinting (WF) is a traffic analysis attack with the potential
ability to break the privacy that Tor aims to provide. WF allows
the attacker to identify web pages in an encrypted connection by
analyzing patterns in network traffic. This allows a local and passive
network adversary, such as a user’s Internet service provider or
someone sniffing the user’s wireless connection, to identify the
websites that the user has visited despite her use of Tor.
WF exploits the fact that differences in website content (e.g.,
different images, scripts, styles) can be inferred from network traf-
fic, even if traffic has been encrypted. From a machine learning
perspective, WF is a classification problem: the adversary trains a
classifier on a set of sites, extracting network traffic features that
are unique to each website. To deploy the attack, the adversary
uses the classifier to match traces of a victim to one of those sites.
The effectiveness of WF depends heavily on both the classifier al-
gorithm and the set of features used. Previous WF attacks use a
set of hand-crafted features to represent Tor traffic, achieving 90%+
accuracy against Tor using classifiers such as Support Vector Ma-
chine (SVM) [27], k-Nearest Neighbors (k-NN) [38], and random
forests [14].
In response to these attacks, a number of defenses have been
proposed. WF defenses add dummy packets into the traffic and add
delays to real packets, aiming to hide features exploited by WF at-
tacks such as traffic bursts and packet lengths. Notably, Tor Project
developers have shown an interest in deploying adaptive padding
as a possible defense [29, 30]. Based on this, Juarez et al. proposed
WTF-PAD and showed that it effectively defends against WF at-
tacks with reasonable overheads, such that it would be practical for
deployment in Tor [20]. Recently, Wang and Goldberg proposed
another effective and low-overhead defense called Walkie-Talkie
(W-T) [41]. These proposals raise the question of whether attacks
could be improved to undermine the effectiveness of the new de-
fenses, a question we address in this work.
Session 10A: TORCCS’18, October 15-19, 2018, Toronto, ON, Canada1928While the state-of-the-art attacks use classifiers that are popular
in many applications, deep learning (DL) has shown to outper-
form traditional machine learning techniques in many domains,
such as speech recognition, visual object recognition, and object
detection [23]. Furthermore, DL does not require selecting and
fine-tuning features by hand [31]. In this work, we thus explore
whether we can leverage deep learning to improve classification
results against defended Tor traffic. The key contributions of our
work are as follows:
• We propose Deep Fingerprinting (DF), a new WF attack based
on a Convolutional Neural Network (CNN) designed using
cutting-edge DL methods. The attack uses a simple input
format and does not require handcrafting features for classi-
fication. We describe how DF leverages advances from com-
puter vision research for effective and robust classification
performance.
• To study the attack in detail, we experiment in a closed-world
setting using a new dataset that we collected with 95 sites
and 1,000 traces per site. We find that our DF WF attack is
more accurate against Tor than the state-of-the-art attacks
with 98.3% accuracy. We also show results for how the num-
ber of training epochs and training dataset size affect the
classification accuracy.
• We then show the effectiveness of the DF attack in the closed-
world setting against Tor traffic defended with WTF-PAD
and W-T. Against WTF-PAD, the attack reaches 90% accuracy,
which is significantly better than all other attacks. Against
W-T, the attack reaches 49.7% accuracy, which is better than
all other attacks and nearly the theoretical maximum accu-
racy [41].
• To investigate in a more realistic setting, we use an open world
with 20,000 unmonitored sites. On non-defended traffic, the
attack achieves 0.99 precision and 0.94 recall. On traffic de-
fended with WTF-PAD, the attack yields 0.95 precision and
0.70 recall. We also examine the possibilities for attacking
weak implementations of W-T.
• Based on our experimental findings, we propose a number of
new directions to explore in both attack and defense.
Overall, we find that the new DF WF attack undermines at least
one defense that had been considered seriously for deployment in
Tor [29, 30]. We have disclosed our findings to the Tor Project, and
they have expressed their concerns about WTF-PAD, setting the
stage for more exploration of the design of realistic defenses.
2 THREAT MODEL
Among its goals, Tor aims to protect users against local eavesdrop-
pers from learning what sites the user is going to. WF attacks,
however, use traffic analysis to undermine Tor’s protections. Prior
work has shown that, under certain conditions, a local and passive
adversary can identify the pages visited by a Tor user by exploiting
patterns in network traffic [8, 14, 16, 27, 28, 39, 40].
To deploy the attack, the adversary captures the sequence of
packets, also known as a traffic trace, from each of a series of his
own visits to a representative set of websites, including sites he is
interested in detecting. From each trace, he then extracts features
Figure 1: The WF threat model
that are unique to each website. In the WF literature, we find a myr-
iad of such features: packet size frequencies [16], total transmission
time and volume in both directions [28], edit-distance score [8, 39],
and the number of traffic bursts in each direction [28, 38], just to
mention a few. As a result, the adversary obtains several feature
vectors for each website that are used to train a supervised classifier
that learns how to identify the site from its features. Finally, the ad-
versary can collect new traffic traces from the user’s connection to
the Tor network, extract the features, and use the trained classifier
to guess the website.
In this work, we assume a network-level adversary that is: local,
meaning that he has access only to the link between the user and
the entry node to the Tor network, and passive, i.e., he can record
network packets but not modify, delay, drop or decrypt them. Po-
tential adversaries that might be in a position to deploy a WF attack
include: eavesdroppers on the user’s local network, local system
administrators, Internet Service Providers (ISP), Autonomous Sys-
tems (AS) between the user and the entry node, and the operators
of the entry node.
Figure 1 depicts the attack scenario: the client surfs the Web over
the Tor anonymity system and the attacker intercepts the traffic
between the client and the Tor network. We assume the adversary
knows the client’s identity and only aims at identifying the website.
Note that the adversary can trivially obtain the client’s IP address
as long as he has access to the TLS connection between the user
and the entry node. Beyond the entry node, Tor has stripped a layer
of encryption and the IP of the client is no longer present in the
headers of network packets.
Within this scenario, we draw on prior work to make several
assumptions about the attacker goals and capabilities.
Closed- vs Open-world Scenario: A closed-word assumes the user
can only visit a small set of sites and that the adversary has samples
to train on all of them [10, 16, 17, 35]. This assumption was criti-
cized for being unrealistic [19, 29], as the world of sites that can
be potentially visited is so large that not even the most powerful
adversaries have the resources to collect data and train for every
site. Subsequent studies have considered an open-world scenario, a
more realistic setting in which the adversary can only train on a
small fraction of the sites the user can visit. We use closed-world
experiments for detailed comparison of different algorithms and
parameter settings, and we report the results of open-world exper-
iments for a more realistic evaluation of the attack. In the open
world, we follow the terminology used in prior work: the monitored
set includes sites that the adversary is interested in detecting, while
the unmonitored set are all other sites.
Session 10A: TORCCS’18, October 15-19, 2018, Toronto, ON, Canada1929In an abuse of language, most
Website vs Webpage Fingerprinting:
authors in the field use “website fingerprinting” to refer to the
fingerprinting of only the home page of those websites. There is
research that has attempted to fingerprint pages that are linked from
the homepage [8], but virtually all studies on website fingerprinting
train and test the attacks on home pages. For comparison with prior
work we make same assumptions in our evaluation.
Traffic Parsing: As pointed out by Juarez et al. [19], the attacker
is assumed to be able to parse all the traffic generated by a web
visit and isolate it from other traffic (e.g., traffic generated by visits
in other tabs, non-HTTP traffic over Tor, and so on). We note that
the adversary is able to do so only if he deploys the attack from an
entry node under his control. In that case, the adversary can select
a domain’s traffic by its Tor circuit ID. Concurrent and subsequent
visits to the same domain would still go through the same circuit.
If the adversary is eavesdropping the link between the client and
the entry, all Tor traffic is multiplexed in the TLS connection to the
entry. However, recent research has developed techniques to parse
visits from multiplexed TLS traffic [40]. As with prior work, we
assume that such parsing has already been done or is not needed.
3 BACKGROUND AND RELATED WORK
In this section, we categorize and summarize prior work on WF
attacks and defenses and then give the necessary background on
deep learning to follow the rest of the paper.
3.1 WF Attacks
Herrmann et al. were the first to evaluate WF against Tor [16].
However, they only achieved 3% accuracy in a closed world of 775
sites. The main problem with their approach was their reliance on
packet length frequencies – Tor sends data in fixed-size (512-byte)
packets known as cells – which renders this feature useless for
classification of Tor traffic. In 2011, Panchenko et al. devised new
features and improved the attack to 55% accuracy on Herrmann et
al.’s dataset [28]. Since then, the success rate of WF attacks against
Tor has been incrementally improved, reaching 90% accuracy by
two classifiers using edit-distances [8, 39]. These attacks, however,
imposed high computational costs on the adversary, which makes
them impractical for real-world deployment.
Recently, a new series of WF attacks have been proposed with ad-
vanced feature sets and more sophisticated classifiers that maintain
the accuracy at 90% while reducing the cost of the attack [14, 27, 38].
These attacks have become the state-of-the-art WF attacks and are
used to benchmark other attacks and defenses. We have selected
them in this study to compare against our deep-learning-based DF
attack.
k-NN. Wang et al. [38] proposed the k-NN attack. This approach
consists in applying a k-Nearest Neighbors (k-NN) classifier, in-
cluding features such as packet ordering, number of incoming and
outgoing cells and numbers of bursts. These features are used in
combination to form a distance metric (e.g., Euclidean distance) to
measure the similarity between different websites. k-NN exhibits
very good performance: in a closed-world setting with 100 sites,
it achieved 91% accuracy, and in an open-world setting with 5,000
sites, it achieved 86% True Positive Rate (TPR) and 0.6% False Posi-
tive Rate (FPR).
CUMUL. Panchenko et al. [27] proposed an attack based on a
Support Vector Machine (SVM) classifier and devised a novel feature
set based on the cumulative sum of packet lengths constructed as
follows: the first coordinate in the feature vector is the length of
the first packet in the traffic trace and the i-th coordinate is the
sum of the value in the (i − 1)-th coordinate plus the length of
the i-th packet, where lengths for incoming packets are negative.
The attack achieved 91% accuracy in a closed-world setting. In the
open-world, they study two different scenarios: multi-class, where
each monitored site is treated as a different class, and two-class,
where the whole set of monitored pages is treated as a single class.
The open world results are 96% TPR and 9.61% FPR for multi-class
and 96% TPR and 1.9% FPR for two-class.
k-FP. Hayes and Danezis [14] proposed the k-fingerprinting attack
(k-FP). k-FP uses a random forest classifier to extract fingerprints
of pages: they train the random forest with traditional features,
but the actual fingerprint is represented by the leafs of the trees in
the random forest. The authors argue this representation is more
effective for WF than the one based on the original features. To
solve the open world problem, they feed these new feature vectors
to a k-NN classifier. They also analyze the importance of their
features and ranked them. The results show that the top 20 most
important features involve counting the number of packets in a
sequence, and that these leak more information about the identity
of a web page than complex features such as packet ordering or
packet inter-arrival time features. k-FP achieved 91% accuracy in a
closed-world setting and 88% TPR and a 0.5% FPR in an open-world
setting.
3.2 WF defenses
The fundamental strategy to defend against WF attacks is to add
dummy packets and/or delay packets. This cover traffic makes WF
features less distinctive, thus increasing the rate of classification
errors committed by the adversary. The first defense that used
this strategy against WF was BuFLO [12], proposed by Dyer et al.,
whose strategy was to modify the traffic to make it look constant
rate and thus remove packet-specific features. However, coarse
features such as total volume, size and time were hard to conceal
without incurring high bandwidth overheads [12]. Tamaraw [6]