in case that (r, ri) can be removed if later r is linked
with ancestors of ri. Next, if, due to the previous it-
eration of comparison, there exists a direct link (r, rj)
between r and one descendant rj of ri, ( vj could be ei-
ther direct or indirect descendant of ri), the edge (r, rj)
should also be replaced by a indirect path via ri. Lines
9-11 launches the recursive call to RH-Builder once r is
fully contained in ri, since the relation between r and
ri is exactly the same as the relation between r and sr.
Therefore, RH-Builder just assigns ri, the descendant of
sr to be sr itself and recursively call RH-Builder on the
subtree rooted at ri. Lines 13-19 indicates the overlap-
ping relation between r and ri. In this case, RH-Builder
do Breadth First Search for any descendant rj of ri such
that r fully contains rj. If it is found, link (r, rj) will
be added into E, accordingly, all edges (r, rk) between
r and any direct or indirect descendant rk of rj needs
to be removed since the existence of a indirect path be-
tween r and rk via edge r, rj.
As we can see that RH-Builder is greedy in the sense
that after each comparison between r and any role in the
hierarchy, adjustment will take place to remove as many
edges as possible. Those edges are redundant since their
inheritance relations have been incorporated in alterna-
tive indirect paths. Therefore, RH-Builder avoids the
co-existence of direct link and indirect path between the
same pair of roles. However, under the assumption that
non-redundancy constraint is not violated for each role,
there could feasibly exist multiple different indirect in-
heritance relations between two roles.
two roles
could be linked via different paths. By allowing this, we
actually explicitly incorporate the concept of the multi-
ple inheritance into our deﬁnition. We now go through
I.e.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:56:35 UTC from IEEE Xplore.  Restrictions apply. 
an example to show how the RH-Builder works, and
then prove the optimality of the constructed hierarchy.
the
toy
example
3. Our
complete
a
from
role
deployed
consists
hierarchy
role
Example
of
constructing
via
RH-Builder
set
{{p1},{p1,p2},{p1,p3},{p1,p3,p4},{p1,p2,p3}}. We
will insert the roles in the order shown above. Figure 3
shows how the RH-Builder works. r1={p1,p2,p3,p4} is
created as the super role. Figure 3.(a) show the insertion
of r2={p1}. In ﬁgure 3.(b), since r3 ⊇ r2, the edge
r1, r2 has been replaced by the new edges (r1, r3),
(r3, r2) denoted by directed dotted lines.
In Figure
3.(c), r4 is inserted, since r4 overlaps r3, therefore, it
performs the breadth ﬁrst search for possible contain-
ment relations in the subtree rooted in r3. Therefore,
r4, r2 has been added into E. Figure 3.(d) and (e)
shows how r5={p1,p3,p4} is inserted. In Figure 3.(d),
r5 is ﬁrst compared with r3, since they overlap, r5
search down the subtree rooted at r3 for containment
relation and consequently add r5, r2 in E. Then r2 gets
marked. Later r5 compares with r4 and creates edge
(r5, r4) since r5 ⊇ r4, meanwhile, (r1, r4) is removed.
Then r4 is marked, and the subtree rooted at r4 is
ﬂagged. During the process of ﬂagging the subtree,
r3 is discovered to be marked. Therefore, (r5, r3) is
removed from E as being redundant. Figure 3.(f) inserts
r6={p1,p2,p3} into the hierarchy.
Next we prove that the role hierarchy built from RH-
Builder is optimal.
Theorem 1. The RH-Builder algorithm is optimal.
Proof. We use G(V, E) to denote the role hierarchy gen-
(cid:2)) to denote any arbi-
erated by RH-Builder and G
trarily picked graph which has the same transitive clo-
sure with G(V, E).
(cid:2)(V, E
(cid:2)
. Since G and G
First, we prove by contradiction that any given edge
(cid:2)
e=(ri, rj) in G must also be in G
. Let’s assume that
(cid:2)
(ri, rj) is not an edge in G
have
the same transitive closure, there must exist at least
(cid:2)
one path in G
which links ri with rj. Without loss
(cid:2)
, therefore, R
of generality, let R be such a path in G
⊆ ROLES, R = {r1,r2, . . . rx } (cid:8)= ∅ such that {
(ri,r1),(r1,r2),. . ., (rx−1,rx),(rx,rj) } ⊆ E . Appar-
ently, not all of those edges are in G, otherwise, the
coexistence of edge (ri, rj) and the indirect path be-
tween ri and rj will violate the non-redundancy con-
straint in G. Without loss of generality, let’s assume that
(cid:2)
but not in G.
e
(the argument will be the same in cases where multiple
(cid:2)
have
edges in G
(cid:2)
=(rm, rn) is the only edge which is in G
(cid:2)
are missing in G). Since G and G
(cid:2)
(cid:2)
(cid:2)
1,r
(cid:2)
1,r
(cid:2)
1),(r
(cid:2)
1),(r
(cid:2)
x),(r
(cid:2) ⊆ ROLES, R
the same transitive closure, there must exists at least one
path in G which links rm with rn. Among all the pathes
linking rm with rn in G, let R
be an arbitrarily picked
x }
= {r
(cid:2)
(cid:2)
(cid:2)
one. That is, R
2, . . . r
1,r
(cid:8)= ∅ such that { (rm,r
(cid:2)
(cid:2)
(cid:2)
(cid:2)
x,rn)
2),. . ., (r
x),(r
x−1,r
} ⊆ E. Now we can see the coexistence of edge
e=(ri, rj) and an indirect path linking ri and rj in
G, which is { (ri,r1),(r1,r2),. . ., (rm,r
(cid:2)
2),. . .,
x,rn),. . ., (rx−1,rx),(rx,rj) } . This appar-
(cid:2)
(cid:2)
(r
x−1,r
ently violates the non-redundancy constraint in G, there-
fore, we conclude that any given edge e in G must also
(cid:2)
be in G
(cid:2)
If G
is exactly the same as G, the theorem holds
since there only exists one complete role hierarchy. Oth-
(cid:2)
erwise, we assume that there exists at least one edge e
(cid:2)
but not in G. since all edges in G are also
which is in G
(cid:2)
(cid:2)
has at least one more edge e
in G
than G. This proves that G is the transitive reduction of
any arbitrary graph which has the same transitive closure
with G.
(cid:2)
, we know that G
.
The theorem that the RH-Builder is optimal can also
be shown by the fact that removal of any edge out of
the hierarchy built by RH-Builder will result in a graph
with a different transitive closure. This is so because any
given edge in G forms the only path between the two
incident vertices. If it were removed from G, it would
be missing in the transitive closure derived subsequently.
In the following we prove that there is only one optimal
hierarchy from a given set of deployed roles.
Theorem 2. The optimal role hierarchy and the set of
deployed roles are in a one-to-one correspondence.
Proof. Let’s assume that G1 and G2 are two different
optimal hierarchies built from a set of deployed roles
DROLES. Then there must exist at least one edge e
incident on ri and rj such that e is in one hierarchy but
not in the other. Without loss of generality, let’s assume
e ∈ G1 only.
Since e = (ri, rj) is in G1, there must exists an in-
heritance relation between ri and rj. since (ri, rj) is not
an edge in G2, but all optimal hierarchies need to meet
the requirement of completeness, there must exist a path
linking ri and rj in G2. To express this, we denote that
in G2 there exists R ⊆ ROLES, R = {r1,r2, . . . rx }
(cid:8)= ∅ such that { (ri,r1),(r1,r2),. . ., (rx−1,rx),(rx,rj) }
⊆ E. Of course, not all these edges will be in G1 at the
same time, otherwise, G1 would not be optimal due to
the coexistence of an indirect relation and direct relation
between ri and rj. In other words, at least one edge in
the above list is not in G1. Without loss of generality,
let’s assume that this edge is e
(cid:2) = (rm, rn).
243243
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:56:35 UTC from IEEE Xplore.  Restrictions apply. 
r1
p1,p2,p3,p4
r1
p1,p2,p3,p4
r1
p1,p2,p3,p4
r2
p1
(a)
r3
p1,p2
r2
p1
(b)
r3
p1,p2
r2 
p1
(c)
r1
p1,p2,p3,p4
r4
p1,p3
r5
p1,p3,p4
r3
p1,p2
r4
p1,p3
r1
p1,p2,p3,p4
r3
p1,p2
r2 
p1 
(e)
r5
p1,p3,p4
r4
p1,p3
r6
p1,p2,p3 
r3
p1,p2
r2
p1
(d)
r5
p1,p3,p4
r4
p1,p3
r1
p1,p2,p3,p4
r2 
p1 
(f)
Figure 3. An example of building a role hierarchy using RH-Builder
Since e = (rm, rn) is an edge in G2, there must ex-
ists an inheritance relation between rm and rn. Similar
as above argument, since (rm, rn) is not an edge in G1,
but all optimal hierarchy need to meet the requirement
of completeness, there must exist a path linking rm and
(cid:2) ⊆ ROLES, R
(cid:2)
rn in G1. That is, in G1 there exists R
x } (cid:8)= ∅ such that { (rm,r
= {r
(cid:2)
(cid:2)
(cid:2)
(cid:2)
2),. . .,
1,r
2, . . . r
x,rn) } ⊆ E.
(cid:2)
(cid:2)
(cid:2)
(r
x),(r
x−1,r
Now we can see that ri (cid:4)(cid:4) rj
in G1,
in
there is a indirect path between ri
another word,
and rj since { (ri,r1),(r1,r2),. . ., (rm,r
(cid:2)
(cid:2)
2),. . .,
1),(r
x,rn) . . ., (rx−1,rx),(rx,rj) } ⊆ E. Mean-
(cid:2)
(cid:2)
(r
x−1,r
while, we know that ri (cid:4) rj in G1. The coexistence of a
direct link and a path between ri and rj implies that G1
is not optimal which is in conﬂict with the assumption
made above. Therefore, the theorem holds.
(cid:2)
x),(r
(cid:2)
1,r
(cid:2)
1),(r
(cid:2)
1,r
Based on the two theorems above, we know that RH-
Builder will build one and only one optimal hierarchy
with the minimal number of edges. A corollary of this is
that the RH-Builder algorithm is order-insensitive when
inserting roles into hierarchy. We now consider the com-
putational complexity of the algorithm. In each insertion