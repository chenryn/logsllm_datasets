:::
[]{#Core_Infrastructure.html#idm139882398257120
.indexterm}[]{#Core_Infrastructure.html#idm139882418254480
.indexterm}[]{#Core_Infrastructure.html#idm139882356879264 .indexterm}
::: para
*ALPM*（Aggressive Link Power
Management，主动连接电源管理）是一项节能技术，其原理为通过在闲置时（即没有
I/O 的时候）将连接到硬盘的 SATA
连接设定为省电模式，以帮助硬盘节电。在连接中有 I/O 请求队列时，ALPM
会自动将 SATA 连接恢复为活跃电源状态。
:::
::: para
ALPM 使用的节电技术是以硬盘延迟为代价的。因此，只有在系统会长时间处于
I/O 闲置状态时才使用 ALPM。
:::
[]{#Core_Infrastructure.html#idm139882418227168
.indexterm}[]{#Core_Infrastructure.html#idm139882406165552
.indexterm}[]{#Core_Infrastructure.html#idm139882419051232
.indexterm}[]{#Core_Infrastructure.html#idm139882356943248
.indexterm}[]{#Core_Infrastructure.html#idm139882409576816 .indexterm}
::: para
ALPM 只适用于使用"*高级主机控制器接口*"（AHCI）的 SATA
控制器。如需了解更多关于 AHCI 的信息，请浏览
。
:::
::: para
电脑支持 ALPM 时，将默认启用 ALPM。ALPM 有三种模式：
:::
::: para
::: {.title xmlns:d="http://docbook.org/ns/docbook"}
min_power
:::
[]{#Core_Infrastructure.html#idm139882400174704
.indexterm}[]{#Core_Infrastructure.html#idm139882399242624
.indexterm}[]{#Core_Infrastructure.html#idm139882410664752
.indexterm}[]{#Core_Infrastructure.html#idm139882410663664 .indexterm}
此模式会在硬盘没有 I/O
的情况下，将连接设定为其最低功率状态（SLUMBER）。这个模式在闲置时间较长时会很有帮助。
:::
::: para
::: {.title xmlns:d="http://docbook.org/ns/docbook"}
medium_power
:::
[]{#Core_Infrastructure.html#idm139882359989024
.indexterm}[]{#Core_Infrastructure.html#idm139882359987936
.indexterm}[]{#Core_Infrastructure.html#idm139882359986848
.indexterm}[]{#Core_Infrastructure.html#idm139882359985760 .indexterm}
此模式会在硬盘没有 I/O
的情况下，将连接设定为第二低功率状态（PARTIAL）。这个模式在尽量不影响性能的条件下可实现电源状态间的转换（例如：在中等
I/O 负载和闲置 I/O 时）。
:::
::: para
`medium_power`{.command} 模式允许连接根据负载情况在 PARTIAL 和满电（即
ACTIVE）状态间进行转换。请注意不可以直接从 PARTIAL 转换到 SLUMBER
然后再转回来。这种情况下，这两种电源状态都需要首先转换成 ACTIVE
状态，然后方可转换到另一个状态。
:::
::: para
::: {.title xmlns:d="http://docbook.org/ns/docbook"}
max_performance
:::
[]{#Core_Infrastructure.html#idm139882401527232
.indexterm}[]{#Core_Infrastructure.html#idm139882401526144 .indexterm}
禁用 ALPM。当硬盘中没有 I/O 时，连接也不会进入任何低功率状态。
:::
::: para
要查看您的 SATA 主机适配器是否支持 ALPM，请查看文件
`/sys/class/scsi_host/host*/link_power_management_policy`{.filename}
是否存在。要更改设置，只要在这些文件中写入本章节中描述的值，或者打开文件检查当前设置即可。
:::
::: {.important xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**重要 --- 有些设置禁用热插拔**
:::
::: admonition
[]{#Core_Infrastructure.html#idm139882401522656
.indexterm}[]{#Core_Infrastructure.html#idm139882401521248 .indexterm}
::: para
将 ALPM 设定为 `min_power`{.command} 或者 `medium_power`{.command}
将自动禁用"热插拔"特性。
:::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#Core_Infrastructure.html#Relatime}3.8. Relatime 驱动器访问优化 {.title}
:::
::: para
POSIX
标准要求操作系统维护记录每个文件最后一次被访问的文件系统元数据。这个时间戳被称为
`atime`{.systemitem}，维护它需要一个重复的对存储的写入操作。这些写入操作让存储是设备及其连接保持忙碌和通电状态。因为很少应用程序会使用
`atime`{.systemitem}
数据，所以这个存储设备活动是在浪费电力。值得注意的是，即使不从存储中读取文件而是从缓存中读取文件，也会发生写入存储的事件。有时，Linux
kernel 还支持 [**mount**]{.application} 的 `noatime`{.option}
选项，并不在使用此选项挂载的文件系统中写入
`atime`{.systemitem}。但是只是关闭这个特性是有问题的，因为有些应用程序会依赖
`atime`{.systemitem} 数据，并在此数据不可用时失败。
:::
::: para
Red Hat Enterprise Linux 7 使用的 kernel 支持另一个可替换选项 ---
`relatime`{.option}。`relatime`{.option} 维护 `atime`{.systemitem}
数据，但不是每次访问该文件时都更改。启用这个选项，则只在上次更新
`atime`{.systemitem}（`mtime`{.systemitem}）后修改该文件时，或者最后一次访问该文件是在相当长一段时间前（默认为一天）时才会将
`atime`{.systemitem} 数据写入磁盘。
:::
::: para
现在，默认情况下会使用启用的 `relatime`{.option}
挂载所有文件系统。您可以将某个文件系统排除在外，而使用
`norelatime`{.option} 挂载该文件系统。
:::
:::
::: section
::: titlepage
# [⁠]{#Core_Infrastructure.html#Power_Capping}3.9. 功率封顶 {.title}
:::
::: para
Red Hat Enterprise Linux 7 支持最近在硬件中使用的功率封顶，比如 HP
的"*动态功率封顶*"（DPC，Dynamic Power
Capping）以及英特尔的节点管理器（NM，Node
Manager）技术。功率封顶允许管理员使用服务器限制功率消耗，但它还可允许管理器更有效地规划数据中心，因为极大降低了现有电源供应的超载风险。管理器可在同一实体机中放置更多的服务器并确定如果服务器电源消耗封顶，在高负载时对电源的需求不会超出可用的电源。
:::
::: para
::: {.title xmlns:d="http://docbook.org/ns/docbook"}
HP 动态功率封顶
:::
动态功率封顶这一功能在选择 ProLiant
和刀片系统服务器时可获得，它可允许系统管理员对一个服务器或者一组服务器的电源消耗封顶。这个封顶是一个绝对限制，无论其当前工作负载如何，服务器将无法超过该限制。这个封顶只在服务器达到其电源消耗限制时才生效。此时某个管理进程会调整
CPU 的 P 状态和时钟限制来限制电量消耗。
:::
::: para
动态功率封顶会修改独立操作系统的 CPU 行为，但是 HP 的"*集成 Lights-Out
2*"（iLO2）固件允许操作系统访问管理处理器，因此用户空间中的应用程序可查询管理处理器。Red
Hat Enterprise Linux 7 中使用的 kernel 包括用于 HP iLO 和 iLO2
固件的驱动程序，它们可允许程序查询 `/dev/hpilo/dXccbN`{.filename}
中的管理处理器。该 kernel 还包括 `hwmon`{.systemitem}
`sysfs`{.systemitem} 接口的扩展来支持功率封顶特性，以及针对使用
`sysfs`{.systemitem} 接口的 ACPI 4.0 计量程序的 `hwmon`{.systemitem}
驱动程序。这些特性允许操作系统和用户空间工具共同读取为功率封顶配置的值以及系统的当前电源用量。
:::
::: para
有关 HP 动态功率封顶详情请参考《*HP 功率封顶以及用于 ProLiant 服务器的
HP
动态功率封顶*》，请查看：。
:::
::: para
::: {.title xmlns:d="http://docbook.org/ns/docbook"}
Intel 节点管理器
:::
Intel 节点管理器在系统中强制使用功率封顶，使用处理器 P 状态和 T 状态限制
CPU
性能，并因此节能。通过设置电源管理策略，管理员可将系统配置为在系统负载低时，比如夜间或者周末，消耗较少的电力。
:::
::: para
Intel 节点管理器使用"*直接操作系统配置和电源管理*"（OSPM，Operating
System-directed configuration and Power
Management）通过标准"*高级配置和电源接口*"调整 CPU 性能。当 Intel
节点管理器通知 OSPM 驱动程序更改到 T
状态时，该驱动程序会响应并更改处理器 P 状态。同样，当 Intel
节点管理器通知 OSPM 驱动程序更改到 P 状态时，该驱动程序也会相应更改 T
状态。这些更改会自动进行且不需要操作系统有进一步的输入。管理员使用"*Intel
数据中心管理器*"（DCM）软件配置并监控 Intel 节点管理器。
:::
::: para
有关 Intel 节点管理器详情请参考《*节点管理器 ---
动态管理数据中心电源*》，请查看：。
:::
:::
::: section
::: titlepage
# [⁠]{#Core_Infrastructure.html#Enhanced_Graphics_Power_Management}3.10. 改进的图形电源管理 {.title}
:::
::: para
Red Hat Enterprise Linux 7
通过删除不必要的资源消耗在图形和显示设备中节能。
:::
::: para
::: {.title xmlns:d="http://docbook.org/ns/docbook"}
LVDS 重新计时
:::
"*低压差分信号传输*"（Low-voltage differential
signalling，LVDS）是使用铜线承载电信号的系统。一个主要的应用是将像素信息传输到笔记本电脑的*液晶显示*（LCD）屏幕中。所有显示都有"*刷新率*"
---
即它们从图形控制器接受新数据并在屏幕中重新成像的频率。通常屏幕每秒接受
60 次新数据（即频率为 60 Hz）。当屏幕和图形控制器是以 LVDS 连接时，LVDS
系统在每次刷新时都会消耗能量。当闲置时，很多 LCD 屏幕的刷新率都会下降到
30 Hz，且不会产生明显的影响［与"*阴极射线管*"（CRT）显示器不同，后者在降低刷新率时会产生闪烁现象］。Red
Hat Enterprise Linux 7 中 kernel 使用的 Intel
图形适配器的驱动程序可自动执行这个"*降频*"，并在屏幕闲置时节约 0.5 W
左右的电力。
:::
::: para
::: {.title xmlns:d="http://docbook.org/ns/docbook"}
启用内存自动刷新
:::
"*同步动态随机访问内存*"（SDRAM） -
用于图形适配器的视频内存，每秒会重复充电上千次，使得每个内存单元可保留保存在其中的数据。除了管理数据的主要功能外，因为有数据流入或者流出内存，所以内存控制器通常负责初始化这些刷新循环。但是
SDRAM
还有一个低功率"*自动刷新*"模式。在这个模式中，内存使用内部计时器生成其自身刷新循环，它可允许系统在不损害当前内存数据的情况下关闭内存控制器。Red
Hat Enterprise Linux 7 使用的 kernel 可在 Intel
图形适配器处于闲置状态时触发内存自动刷新，并可节约 0.8 W 左右的电力。
:::
::: para
::: {.title xmlns:d="http://docbook.org/ns/docbook"}
降低 GPU 时钟频率
:::
标准图形处理单元（GPU）带有内部时钟，用于管理其内部电路的不同部分。Red
Hat Enterprise Linux 7 使用的 kernel 可降低部分 Intel 和 ATI GPU
的内部时钟频率。减少 GPU
组件在给定时间内执行循环的次数，可以避免组件执行不必要的循环，以达到节约电量的目的。当
GPU 闲置时，kernel 可自动降低这些时钟的速度；同时当 GPU
活性增强时会提高其时钟速度。降低 GPU 时钟循环周期最多可节省 5 W 电力。
:::
::: para
::: {.title xmlns:d="http://docbook.org/ns/docbook"}
GPU 关闭
:::
Red Hat Enterprise Linux 7 中使用的 Intel 和 ATI
图形驱动程序可探测到什么时候适配器中没有连接显示器，并完全关闭
GPU。这个功能对不经常连接显示器的服务器尤为重要。
:::
:::
::: section
::: titlepage
# [⁠]{#Core_Infrastructure.html#RFKill}3.11. RFKill {.title}
:::
[]{#Core_Infrastructure.html#idm139882413511776
.indexterm}[]{#Core_Infrastructure.html#idm139882406840720
.indexterm}[]{#Core_Infrastructure.html#idm139882356636672
.indexterm}[]{#Core_Infrastructure.html#idm139882357915760 .indexterm}
::: para
很多计算机系统包含无线电传输，其中包括 Wi-Fi、蓝牙和 3G
设备。这些设备消耗电源，在不使用这些设备时是一种浪费。
:::
::: para
*RFKill* 是 Linux kernel
中的一个子系统，它可提供一个界面，在此界面中可查询、激活并取消激活计算机系统中的无线电传输。当取消激活传输时，可使其处于可被软件重新激活的状态（即"*软锁定*"）或者将其放在软件无法重新激活的位置（即"*硬锁定*"）。
:::
::: para
RFKill 核为子系统提供应用程序编程界面（API）。kernel
驱动程序被设计为支持 RFKill 使用这个 API 注册
kernel，并包含启用和禁用这个设备的方法。另外，RFKill
核提供用户程序可解读的通知以及用户程序查询传输状态的方法。
:::
::: para
RFKill 界面位于
`/dev/rfkill`{.filename}，其中包含系统中所有无线电传输的当前状态。每个设备都在
`sysfs`{.filename} 中注册当前 RFKill 状态。另外，在启用了 RFKill
的设备中每当状态更改时，RFKill 会发出 *uevents*。
:::
::: para
[**Rfkill**]{.application}
是一个命令行工具，您可使用它查询和更改系统中启用了 RFKill
的设备。要获得这个工具，请安装 [rfkill]{.package} 软件包。
:::
::: para
使用命令 `rfkill list`{.command}
获得设备列表，每个都包含与之关联的"*索引号*"，从 `0`{.literal}
开始。您可以使用这个索引号让 [**rfkill**]{.application}
停止使用或者使用某个设备，例如：
:::
``` screen
rfkill block 0
```
::: para
停用系统中第一个启用 RFKill 的设备。
:::
::: para
您还可以使用 [**rfkill**]{.application} 阻断某一类设备，或者所有已启用
RFKill 的设备。例如：
:::
``` screen
rfkill block wifi