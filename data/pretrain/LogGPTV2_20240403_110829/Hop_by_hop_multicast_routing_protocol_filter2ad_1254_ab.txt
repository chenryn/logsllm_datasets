reach S. r2 now joins  at S (Figure2(c)). Eventually
t2 times out resulting in the deletion of r1 from S’s and R3’s
MFTs. As R3 stops receiving tree messages, its MFT
is destroyed (Figure 2(d)). Now, r2 receives data through
the shortest-path from S.
Asymmetric routing may also lead REUNITE to unneeded
packet duplications on certain links.2 Figure 3 gives an ex-
ample. The ﬁrst receiver, r1, sends a join(S, r1) that follows
the path r1 → R4 → R2 → R1 → S. The tree(S, r1) mes-
sages follow the route S → R1 → R6 → R4 → r1. Suppose
now that r2 joins and that join(S, r2) follows r2 → R5 →
R3 → R1 → S. The tree(S, r1) (produced by S) and the
tree(S, r2) (created at R1) both traverse the link R1-R6. As
R6 does not receive join messages from these receivers, it is
not identiﬁed as a branching node. S creates data packets
to r1 and R1 creates packets to r2. So there is two packet
copies on the link R1-R6.
Consequently, the cost (the number of packet copies in the
network) of a REUNITE tree may be larger than that of a
source tree constructed by a classic protocol as PIM-SM
(Protocol Independent Multicast - Sparse Mode)[9], since
2In fact, this possibility also exists when the network has
pure unicast routers or when the REUNITE router is over-
loaded. In both cases, the branching node must migrate to
another router and may cause packet duplications in some
links. For a more detailed description, the reader is referred
to [21].
cause route changes to the remaining receivers, as for r2 in
the example of Figure 2. This is avoided in HBH.
3.1 Tree management in HBH
HBH has three message types: join, tree, and f usion.
Join messages are periodically unicast by the receivers in
the direction of the source and refresh the forwarding state
(MFT entry) at the router where the receiver joined. A
branching router “joins” the group itself at the next up-
stream branching router. Thus the join messages may be
intercepted by the branching nodes which sign themselves
join messages. The source periodically multicasts a tree
message that refreshes the rest of the tree structure. F usion
messages are sent by potential branching routers and con-
struct the distribution tree together with the tree messages.
Each HBH router in S’s distribution tree has either a
MCT or a MFT. A non-branching node in S’s
distribution tree has a MCT. MCT has one single
entry to which two timers are associated, t1 and t2. At the
expiration of t1 the MCT becomes stale and at the expira-
tion of t2 the MCT is destroyed.
A branching node in S’s distribution tree has a MFT.
Two timers, t1 and t2, are associated to each entry in MFT. When t1 times out the MFT entry becomes stale and it
is destroyed when t2 expires. In HBH, a stale entry is used
for data forwarding but produces no downstream tree mes-
sage. A MFT entry in HBH can also be marked. A marked
entry is used to forward tree messages but not for data for-
warding. The Appendix A gives a detailed description of the
message processing rules of HBH. The basic ideas are: the
ﬁrst join issued by a receiver is never intercepted, reaching
the source; the tree messages are periodically multicast by
the source; these are combined with fusion messages sent by
potential branching nodes to construct and reﬁne the tree
structure.
We come back to the ﬁrst example of Section 2.3 to show
how the tree management of HBH works. Figure 5 repeats
the scenario of Figure 2. r1 joins the multicast channel at
S which starts sending tree(S, r1) messages. These mes-
sages create a MCT containing r1 at H1 and H3 (Fig-
ure 2(a)). When r2 joins the group by sending the ﬁrst
join(S, r2), this message is not intercepted and reaches S
(the ﬁrst join message is never intercepted). The tree(S, r2)
produced by the source create MCT state at H4 (Figure
5(b)). Both receivers are connected to the source through
the shortest-path.
Suppose now that r3 (unicast routes: S → H1 → H3 → r3
and r3 → H3 → H1 → S) joins the channel.
It sends
a join(S, r3) to S, which starts sending tree(S, r3) mes-
sages. As H1 receives two diﬀerent tree messages, it sends a
f usion(S, r1, r3) to the source. The reception of the f usion
causes S to mark the r1 and r3 entries in its MFT and to
add H1 to it. In the same way as H1, H3 receives tree(S, r1)
and tree(S, r3) messages and thus send a f usion(S, r1, r3) to
the source (Figure 5(c)). H3’s MFT now contains r1 and r3.
Subsequent join(S, r1) messages are intercepted by H1 and
refresh the r1 marked entry in H1’s MFT. The join(S, r3)
messages refresh the r3 MFT entry at H3. S sends data
addressed to H1, that sends it addressed to H3. H3 sends
copies to r1 and r3. Subsequently, as S receives no more
join(S, r1) neither join(S, r3) messages, its corresponding
MFT entries are destroyed. The ﬁnal structure is shown
in Figure 5(d). In this way, HBH is able to use the good
Figure 3: Packet duplication due to asymmetric
routes in REUNITE.
the RPF (Reverse Path Forwarding) algorithm ensures one
unique packet copy over each network link.
The next section describes HBH protocol functioning and
how its tree construction mechanism is able to cope with the
problems due to asymmetric unicast routing.
3. HOP-BY-HOP MULTICAST PROTOCOL
HBH has a tree construction algorithm that is able to bet-
ter treat the pathological cases due to asymmetric unicast
routes. HBH uses two tables, one MCT and one MFT that
have nearly the same function as in REUNITE. The diﬀer-
ence is that one entry table in HBH stores the address of a
next branching node instead of the address of a receiver (ex-
cepted the branching router nearest the receiver). The MFT
has no dst entry. Data received by a branching router, HB,
has unicast destination address set to HB (in REUNITE
data is addressed to MFT.dst). This choice turns the
tree structure more stable than in REUNITE. A multicast
channel in HBH is identiﬁed by , where S is the
unicast address of the source and G is a class-D IP address
allocated by the source. This deﬁnition solves the address
allocation problem while being compatible with IP Multi-
cast. Therefore HBH can support IP Multicast clouds as
leaves of the distribution tree.
HBH’s tree structure has the advantage of an enhanced
stability of the table entries when compared to REUNITE.
The tradeoﬀ is that in HBH each data packet received by a
branching node produces n + 1 modiﬁed packet copies while
in REUNITE it produces n modiﬁed packets. The tree man-
agement scheme of HBH minimizes the impact of member
departures in the tree structure. This is possible because the
MFT receiver entry is located at the branching node near-
est the receiver. For example, the departure of r1 in Figure
4 has a greater impact in the tree structure of REUNITE
than in that of HBH. In the worst case, HBH may need one
more change than REUNITE (it happens when a branching
node becomes a non-branching one, e.g. after the departure
of r8). In this example routes are symmetric so there is no
route changes for other members when a member leaves the
group. Nevertheless, tree reconﬁguration in REUNITE may
(a) Tree reconﬁguration in REUNITE.
(b) Tree reconﬁguration in HBH.
Figure 4: Comparison of tree reconﬁguration after member departure.
Figure 5: HBH’s tree construction mechanism.
branching point to the distribution tree. The problem of
Figure 3 is simply resolved through the transmission of a
f usion(S, r1, r2) from H6 upstream to the source, similarly
to the example just presented.
4. PERFORMANCE ANALYSIS
We used NS (Network Simulator)[10] to simulate HBH.
Our objectives were to experiment HBH’s tree mechanisms
as well as to compare HBH and REUNITE through the anal-
ysis of the constructed trees. We analyzed the average delay
experienced by all the receivers of the group and the number
of copies of the same packet that are transmitted to reach
all receivers.
4.1 Simulation scenario
The ﬁrst topology used in our simulations is shown in
Figure 6. This topology is typical of a large ISP’s network
[1]. Without loss of generality, we suppose that only one
receiver is connected to each node in the topology. The
presence of one or many receivers attached to a border router
through IGMP [12] does not inﬂuence the cost of the tree, so
we do not consider the aggregation provided by the multicast
service at the local network level. Nodes 0 to 17 in Figure
6 are routers whereas nodes 18 to 35 are potential receivers
of the multicast channel. We have also simulated a random-
generated topology with 50 nodes and higher connectivity
(8.6 versus 3.3).
4.2 Results
We compared HBH to REUNITE and two classical mul-
ticast approaches that are available in NS. NS has a multi-
cast routing protocol that is able to construct shared trees
and source trees with the same structure as the trees con-
structed by the PIM-SM protocol. The diﬀerence is that
NS’s implementation is centralized and the change from the
shared tree to the source tree is realized through an explicit
command, and not automatically as in the original PIM-
SM [9]. Therefore, PIM-SM in our simulations refers to a
protocol that constructs exclusively shared trees, whereas
PIM-SS is a protocol that only constructs source trees. The
tree structure of PIM-SS is the same as that of PIM-SSM
[3], i.e., a reverse SPT. In addition to HBH, we implemented
REUNITE according to [21]. All routers implement the mul-
ticast service in our experiments.
Tree cost
PIM−SM
PIM−SS
REUNITE
HBH
2
4
6
8
10
12
14
16
Number of receivers
(a) ISP topology.
Tree cost
PIM-SM
PIM-SS
REUNITE
HBH
110
100
90
80
70
60
50
40
30
20
350
300
250
200
150
100
s
e
i
p
o
c
t
e
k
c
a
p
f
o
r
e
b
m
u
N
s
e
i
p
o
c
t
e
k
c
a
p
f
o
r
e
b
m
u
N
Figure 6: The ISP topology.
We associate two costs, c(n1, n2) and c(n2, n1), to link n1-
n2. Each cost is an integer randomly chosen in the interval
[1, 10]. Simulations consider one multicast group from 1 to
N where node 18 is ﬁxed as source. A variable number
of randomly chosen receivers join the channel. For each
group size we realized 500 simulation runs per protocol. The
plotted results are the average of the 500 experiments.
50
5
10
15
25
20
30
Number of receivers
35
40
45
(b) 50-node random topology.
Figure 7: Average number of packet copies.
4.2.1 Tree cost
We ﬁrst evaluated the cost of the trees constructed by the
diﬀerent multicast routing protocols. We deﬁne the cost of
a tree as the number of copies of the same packet that are
transmitted in the network links. Therefore, the tree cost
is diﬀerent from the number of links in the tree since the
recursive unicast technique may send more than one copy
of the same packet over a speciﬁc link. This may be due
to the network’s routing asymmetries (as shown is Section
2.3) but also to unicast routers inside the network that are
not able to be branching nodes. In this case, the location
of a branching node may not be the ideal. Nevertheless, as
in our experiments all routers are multicast capable, extra
packet copies are always due to routing asymmetries.
Figure 7 shows the average cost of the multicast trees
constructed by the diﬀerent protocols as the number of re-
ceivers varies. For the ISP topology, PIM-SM constructs the
trees with the highest cost in most cases. This result was
expected since PIM-SM constructs shared trees. As we sim-
ulated the distribution from one source to many receivers,
the utilization of a shared tree is disadvantageous since the
tree is centered on a rendez-vous point (RP). With a high
probability this tree has a higher cost than the equivalent
source tree. HBH and PIM-SS construct the cheapest trees.
This result is expected since PIM-SS constructs source trees
based on the RPF algorithm, which guarantees that at the
maximum one copy of the same packet is transmitted at
each link, and that each receiver is connected to the source
trough the reverse shortest-path. HBH performs similar to
PIM-SS because in HBH each receiver is connected to the
source through the shortest path. Using this path or the
reverse shortest path does not inﬂuence tree cost.
The REUNITE curves in Figure 7 demonstrate that the
tree construction mechanism of REUNITE eﬀectively suf-
fers from the pathological cases produced by asymmetric
unicast routing, as we presented in Section 2.3. The phe-
nomenon is less frequent with a small number of receivers,
since the probability that two receivers share the same link
in the multicast tree is smaller. For the ISP topology, the
problem is also less severe when the number of receivers
is huge (receiver distribution is dense) since a big percent-
age of network links is anyway used in the distribution tree.
Nevertheless, this is not the case for the 50-node topology.
This topology has a much higher connectivity, which means
that a smaller percentage of network links is used. In this
topology HBH’s advantage increases with the group size.
REUNITE also performs worse than PIM-SM shared trees
as a consequence of badly placed branching nodes which lead
to useless packet duplications.
The analysis of the HBH curve shows the enhanced eﬃ-
ciency of HBH’s tree construction mechanism. In terms of
tree cost, the advantage of HBH over REUNITE is as large
as 5% for the ISP topology and 18% for the 50-node topol-
ogy, in average over all group sizes. We conclude that HBH
potentially provides a better bandwidth utilization than RE-
UNITE for asymmetric networks.
4.2.2 Delay
Figure 8 presents the average delay experienced by the
receivers in the multicast channel for the same set of sim-