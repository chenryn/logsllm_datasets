assume that the web server is not well maintained and is, by extension insecure. By
further extension, the attacker can also assume that the entire operating system of the
server may be vulnerable by virtue of poor maintenance.
How this technique can be used
A simple query of “intitle:Test.Page.for.Apache it.worked!" will return a list
of sites running Apache 1.2.6 with a default home page. Other queries will return similar
Apache results:
Apache server version
Query
Apache 1.3.0 – 1.3.9
Intitle:Test.Page.for.Apache It.worked! this.web.site!
Apache 1.3.11 – 1.3.26
Intitle:Test.Page.for.Apache seeing.this.instead
Apache 2.0
Intitle:Simple.page.for.Apache Apache.Hook.Functions
Apache SSL/TLS
Intitle:test.page "Hey, it worked !" "SSL/TLS-aware"
The Google Hacker’s Guide
PI:EMAIL
http://johnny.ihackstuff.com
- Page 20 -
Microsoft’s Internet Information Services (IIS) also ships with default web pages as
shown in Figure 11.
Figure 11: IIS 5.0 default web page
Queries that will locate default IIS web pages include:
IIS Server Version
Query
Many
intitle:welcome.to intitle:internet IIS
Unknown
intitle:"Under construction" "does not currently have"
IIS 4.0
intitle:welcome.to.IIS.4.0
IIS 4.0
allintitle:Welcome to Windows NT 4.0 Option Pack
IIS 4.0
allintitle:Welcome to Internet Information Server
IIS 5.0
allintitle:Welcome to Windows 2000 Internet Services
IIS 6.0
allintitle:Welcome to Windows XP Server Internet Services
In the case of Microsoft-based web servers, it is not only possible to determine web
server version, but operating system and server pack version as well. This information is
invaluable to an attacker bent on hacking not only the web server, but hacking beyond
the web server and into the operating system itself. In most cases, an attacker with
control of the operating system can wreak more havoc on a machine than a hacker that
only controls the web server.
Netscape Servers also ship with default pages as shown in Figure 12.
The Google Hacker’s Guide
PI:EMAIL
http://johnny.ihackstuff.com
- Page 21 -
Figure 12: Netscape Enterprise Server default page
Some queries that will locate default Netscape web pages include:
Netscape Server Version
Query
Many
allintitle:Netscape Enterprise Server Home Page
Unknown
allintitle:Netscape FastTrack Server Home Page
Some queries to find more esoteric web servers/applications include:
Server / Version
Query
Jigsaw / 2.2.3
intitle:"jigsaw overview" "this is your"
Jigsaw / Many
intitle:”jigsaw overview”
iPlanet / Many
intitle:"web server, enterprise edition"
Resin / Many
allintitle:Resin Default Home Page
Resin / Enterprise
allintitle:Resin-Enterprise Default Home Page
JWS / 1.0.3 – 2.0
allintitle:default home page java web server
J2EE / Many
intitle:"default j2ee home page"
KFSensor honeypot
"KF Web Server Home Page"
Kwiki
"Congratulations! You've created a new Kwiki website."
Matrix Appliance
"Welcome to your domain web page" matrix
HP appliance sa1*
intitle:"default domain page" "congratulations" "hp web"
Intel Netstructure
"congratulations on choosing" intel netstructure
Generic Appliance
"default web page" congratulations "hosting appliance"
Debian Apache
intitle:"Welcome to Your New Home Page!" debian
Cisco Micro
Webserver 200
"micro webserver home page"
via manuals, help pages and sample programs
Another method of determining server version involves searching for manuals, help
pages or sample programs which may be installed on the website by default. Many web
server distributions install manual pages and sample programs in default locations. Over
The Google Hacker’s Guide
PI:EMAIL
http://johnny.ihackstuff.com
- Page 22 -
the years, hackers have found many ways to exploit these default web applications to
gain privileged access to the web server. Because of this, most web server vendors
insist that administrators remove this sample code before placing a server on the
Internet. Regardless of the potential vulnerability of such programs, the mere existence
of these programs can help determine the web server type and version. Google can
stumble on these directories via a default-installed webpage or other means.
How this technique can be used
In addition to determining the web server version of a specific target, hackers can use
this technique to find vulnerable targets.
Example:
inurl:manual apache directives modules
This query returns pages that host the Apache web server manuals. The Apache
manuals are included in the default installation package of many different versions of
Apache. Different versions of Apache may have different styles of manual, and the
location of manuals may differ, if they are installed at all. As evidenced in Figure 13, the
server version is reported at the top of the manual page. This may not reflect the current
version of the web server if the server has been upgraded since the original installation.
Figure 13: Determining server version via server manuals
Microsoft’s IIS often deploy manuals (termed ‘help pages’) with various versions of their
web server. One way to search for these default help pages is with a query like
‘allinurl:iishelp core’.
Many versions of IIS optionally install sample applications. Many times, these sample
applications are included in a directory called ‘iissamples,’ which may be discovered
using a query like ‘inurl:iissamples’. In addition, the names of a sample program
can be included in the query such as ‘inurl:iissamples advquery.asp’ as shown
in Figure 14.
The Google Hacker’s Guide
PI:EMAIL
http://johnny.ihackstuff.com
- Page 23 -
Figure 14: An IIS server with default sample code installed
Many times, subdirectories may exist inside the samples directory. A page with both the
‘iissamples’ directory and the ‘sdk’ directory can be found with a query like
‘inurl:iissamples sdk’.
There are many more combinations of default manual, help pages and sample programs
that can be searched for. As mentioned above, these programs often contain
vulnerabilities. Searching for vulnerable programs is yet another trick of the Google
hacker.
Using Google to find interesting files and directories
Using Google to find vulnerable targets can be very rewarding. However, it is often more
rewarding to find not only vulnerabilities but to find sensitive data that is not meant for
public viewing. People and organizations leave this type of data on web servers all the
time (trust me, I’ve found quite a bit of it). Now remember, Google is only crawling a
small percentage of the pages that contain this type of data, but the tradeoff is that
Google’s data can be retrieved from Google quickly, quietly and without much fuss.
It is not uncommon to find sensitive data such as financial information, social security
numbers, medical information, and the like.
How this technique can be used
Of all the techniques examined this far, this technique is the hardest to describe because
it takes a bit of imagination and sometimes just a bit of luck. Often the best way to find
sensitive files and directories is to find them in the context of other “important” words and
phrases.
inurl: searches
The Google Hacker’s Guide
PI:EMAIL
http://johnny.ihackstuff.com
- Page 24 -
Consider the fact that many people store an entire hodgepodge of data inside backup
directories. Often times, the entire content of a web server or personal computer can be
found in a directory called backup. Using a simple query like “inurl:backup” can
yield potential backup directories, yet refining the search to something like
“inurl:backup intitle:index.of inurl:admin” can reveal even more
relevant results. A query like “inurl:admin” can often reveal administrative
directories.
“inurl:admin inurl:userlist” is a generic catch-all query which finds many
different types of administrative userlist pages. These results may take some sorting
through, but the benefits are certainly worth it, as results range from usernames,
passwords, phone numbers, addresses, etc.
filetype:
The inurl: search is one way of finding files, but often times the filetype: operative is
much more effective. It is worth noting that every single known file extension (extracted
from filext.com) can be found with Google. This includes file types that Google can not
read. The point is that even if Google can’t parse a file, it still understands the file’s
extension and can search on it.
An interesting technique exists for discovering all known files of a particular extension.
The technique involves the used of the filetype: operator. Consider the following search:
“filetype:cfg cfg”
This search finds files that end in a “cfg” extension. In addition, the file must contain “cfg”
in either the url, the text or the title. All files of type “cfg” have the term “cfg” in the URL,
so this search shows all known “cfg” files that Google has crawled. When combined with
a site: search, this query can be used to find all “cfg” files from one particular site.
“inurl:admin filetype:xls” can reveal interesting Excel spreadsheets either
named “admin” or stored in a directory named “admin”. Educational institutions are
notorious for falling victim to this search.
combination searches
Combining the techniques listed above can provide more accurate results.
“inurl:admin intitle:login” can reveal admin login pages
“inurl:admin filetype:asp inurl:userlist” will find more specific examples
of an administrator’s user list function, this time written in an ASP page. In most cases,
these types of pages do not require authentication.
ws_ftp.log file searches
The Google Hacker’s Guide
PI:EMAIL
http://johnny.ihackstuff.com
- Page 25 -
Another interesting technique (discovered by murfie) involves scouring ws_ftp.log files
for the existence of files on a web server. The WS_FTP program is a graphical FTP
client for Windows that creates log files tracking all file transfers. Enabled by default,
these log files are placed on the target FTP server and include information about which
files were transferred, where they came from, and where they were ultimately
transferred. Interesting in and of themselves, these files create an excellent opportunity
for the Google hacker to discover files on a web server.
For example, to locate password files, a search like “filetype:log inurl:ws_ftp
intext:password” or “filetype:log inurl:ws_ftp intext:passwd” may
provide useful results.
Using Source Code to find vulnerable targets
Nearly every day, a security advisory is release for some web-based tool. These
advisories often contain information about the version of the software that is affected, the
type of vulnerability and information about how attackers can exploit the vulnerability.
Google can be used to find sites with specific vulnerabilities using only the information
provided in these advisories. We will take a look at how a hacker might use the source
code of a program to discover ways to search for that software with Google.
The CuteNews program had a (minor) vulnerability back in November of 2003:
Figure 15: A typical Security Advisory
As explained in the security advisory, an attacker could use a specially crafted URL to
gain information from a vulnerable target:
The Google Hacker’s Guide
PI:EMAIL
http://johnny.ihackstuff.com
- Page 26 -
Figure 16: Exploit information from a typical advisory
In order to find the best search string to locate potentially vulnerable targets, an attacker
could visit the web page of the software vendor to find the source code of the offending
software. In cases where source code is not available, an attacker can simply download
the offending software and run it on a machine he controls to get ideas for potential
searches. In this case, version 1.3.1 of the CuteNews software is readily available from
the author’s web page.
Once the software is downloaded and optionally unzipped, an attacker must located the
main web page that would be displayed to visitors.  In the case of this particular
software, PHP files are used to display web pages.
Figure 17: The contents of the CuteNews download
Of all the files listed in the main directory of this package, index.php is the most likely
candidate to be a top-level page.
156 // If User is Not Logged In, Display The Login Page
Figure 18: Line 156 of index.php
Line 156 shows a typical informative comment. This comment reveals that this is the
page a user would see if they were not logged in.
173        Username: 
174        
175        
176        
177        Password: 
178        
Figure 19: Lines 173-178 of index.php
Lines 173-178 show typical HTML code and reveal a username and password prompt
that is displayed to the user. Searching for these strings in Google would prove to be too
The Google Hacker’s Guide
PI:EMAIL
http://johnny.ihackstuff.com
- Page 27 -
common. Something more specific must be located. Farther down in the code, a line of
PHP reveals that a footer is placed at the bottom of the page:
191 echofooter();
Figure 20: Line 191 of index.php
In order to discover what this footer looks like, we must locate where the echofooter
function is defined. This can be done simply with grep by searching recursively for
“echofooter” with the word “function” preceeding it. This search is more effective than
simply searching for “echofooter” which is called in many of CuteNews’ scripts.
johnny-longs-g4 root# grep -r "function echofooter" *
inc/functions.inc.php:function echofooter(){
johnny-longs-g4 root#
Figure 21: Locating functions in PHP
According to the grep command, we know to look in the file “inc/functions.inc.php” for
footer (and probably the header) text.
Figure 22: The echofooter function
Although there is a great deal of information in this function, there are certain things that
will catch the eye of a Google hacker due to the uniqueness of the string. For example,
line 168 shows that copyrights are printed and that the term “Powered by” is printed in
the footer. Any decent Google hackers knows that “Powered by” lines can be very useful
in locating specific targets due to their high degree of uniqueness. Following the
“Powered by” phrase is a link to http://cutephp.com/cutenews/ and the string
“$config_version_name”, which will list the version name of the CuteNews program. In
order to have a very specific “Powered by” search to feed to Google, the attacker must
either guess as to the version number that would be displayed (remembering that
version 1.3.1 of SuteNews was downloaded) or the actual version number displayed
must be located in the source code. Again, grep can quickly locate this string for us. We
The Google Hacker’s Guide
PI:EMAIL
http://johnny.ihackstuff.com
- Page 28 -
can either search for the string directly, or put an equal sign (‘=’) after the string to find
where it is defined in the code:
johnny-longs-g4 root$ grep -r "\$config_version_name =" *
inc/install.mdu:\$config_version_name = "CuteNews v1.3.1";
inc/options.mdu:    fwrite($handler, "<?PHP \n\n//System
Configurations\n\n\$config_version_name =
\"$config_version_name\";\n\n\$config_version_id = $config_version_id;\n\n");
johnny-longs-g4 root$
Figure 23: Searching for the version name
As shown above, the full and complete version name is “CuteNews v1.3.1”. Putting the
two pieces of information together brings us to a very specific Google query: “Powered
by CuteNews v1.3.1” This query is very specific and locates nearly perfect results which
display sites running version 1.3.1 of the CuteNews software.
Figure 24: Results of the final CuteNews query
Using Google as a CGI scanner
One step beyond searching for “interesting” files is searching for vulnerable files via
Google. Many times, when a security vulnerability is discovered in a piece of Web server
software, the vulnerability centers around a particular file. Although it is not technically
accurate to do so, many attackers have come to call this type of vulnerability a CGI
script vulnerability since the early web-based vulnerabilities involved CGI scripts. Today,
web-based vulnerabilities can take many different forms, yet the ‘CGI scanner’ or ‘web
scanner’ has become one of the most indispensable tools in the world of web server
hacking. Mercilessly searching out vulnerable programs on a server, these programs
help pinpoint potential avenues for attack. These programs are brutally obvious,
incredibly noisy and fairly accurate tools. Reduced to the least common denominator,
these types of programs accomplish one task; discovering vulnerable files on a web
server. The accomplished Google hacker knows that this same task can be
accomplished more elegantly and subtly via Google query.
The Google Hacker’s Guide
PI:EMAIL
http://johnny.ihackstuff.com
- Page 29 -