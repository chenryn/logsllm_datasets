  bool bVar2;
  short sVar3;
  short *psVar4;
  uint uVar5;
  *param_5 = 0;
  *param_4 = 1;
  if (param_2 != (short **)0x0) {
    *param_2 = param_3;
    param_2 = param_2 + 1;
  }
  bVar1 = false;
  bVar2 = false;
  do {
    sVar3 = 0x22;
    if (*param_1 == 0x22) {
      bVar1 = !bVar1;
      bVar2 = bVar1;
    }
    else {
      *param_5 = *param_5 + 1;
      if (param_3 != (short *)0x0) {
        *param_3 = *param_1;
        param_3 = param_3 + 1;
      }
      sVar3 = *param_1;
      if (sVar3 == 0) goto LAB_004090c2;
    }
    param_1 = param_1 + 1;
  } while ((bVar2) || ((sVar3 != 0x20 && (sVar3 != 9))));
  if (param_3 != (short *)0x0) {
    param_3[-1] = 0;
  }
LAB_004090c2:
  bVar1 = false;
  while( true ) {
    sVar3 = *param_1;
    if (sVar3 != 0) {
      while ((sVar3 == 0x20 || (sVar3 == 9))) {
        param_1 = param_1 + 1;
        sVar3 = *param_1;
      }
    }
    if (sVar3 == 0) break;
    if (param_2 != (short **)0x0) {
      *param_2 = param_3;
      param_2 = param_2 + 1;
    }
    *param_4 = *param_4 + 1;
    while( true ) {
      sVar3 = *param_1;
      uVar5 = 0;
      bVar2 = true;
      psVar4 = param_1;
      while (sVar3 == 0x5c) {
        psVar4 = psVar4 + 1;
        uVar5 = uVar5 + 1;
        sVar3 = *psVar4;
      }
      param_1 = psVar4;
      if (sVar3 == 0x22) {
        param_1 = psVar4;
        if (((uVar5 & 1) == 0) && ((!bVar1 || (param_1 = psVar4 + 1, *param_1 != 0x22)))) {
          bVar2 = false;
          bVar1 = !bVar1;
          param_1 = psVar4;
        }
        uVar5 = uVar5 >> 1;
      }
      while (uVar5 != 0) {
        uVar5 = uVar5 - 1;
        if (param_3 != (short *)0x0) {
          *param_3 = 0x5c;
          param_3 = param_3 + 1;
        }
        *param_5 = *param_5 + 1;
      }
      sVar3 = *param_1;
      if ((sVar3 == 0) || ((!bVar1 && ((sVar3 == 0x20 || (sVar3 == 9)))))) break;
      if (bVar2) {
        if (param_3 != (short *)0x0) {
          *param_3 = sVar3;
          param_3 = param_3 + 1;
        }
        *param_5 = *param_5 + 1;
      }
      param_1 = param_1 + 1;
    }
    if (param_3 != (short *)0x0) {
      *param_3 = 0;
      param_3 = param_3 + 1;
    }
    *param_5 = *param_5 + 1;
  }
  if (param_2 != (short **)0x0) {
    *param_2 = (short *)0x0;
  }
  *param_4 = *param_4 + 1;
  return;
}
LPVOID __cdecl FUN_004091cc(uint param_1,uint param_2,uint param_3)
{
  LPVOID pvVar1;
  if ((param_1 > 1) + 1;
    wVar2 = *_Dst;
  }
  ppwVar7 = (wchar_t **)__calloc_base(iVar6 + 1,4);
  if (ppwVar7 != (wchar_t **)0x0) {
    wVar2 = *param_1;
    local_c = ppwVar7;
    while (wVar2 != L'\0') {
      _Dst = param_1;
      do {
        wVar1 = *_Dst;
        _Dst = _Dst + 1;
      } while (wVar1 != L'\0');
      _SizeInWords = ((int)((int)_Dst - (int)(param_1 + 1)) >> 1) + 1;
      if (wVar2 != L'=') {
        _Dst = (wchar_t *)__calloc_base(_SizeInWords,2);
        if (_Dst == (wchar_t *)0x0) {
          free_environment__(ppwVar7);
          ppwVar7 = (wchar_t **)0x0;
          FID_conflict__free((void *)0x0);
          break;
        }
        eVar4 = _wcscpy_s(_Dst,_SizeInWords,param_1);
        if (eVar4 != 0) {
          uVar11 = 0;
          uVar10 = 0;
          uVar9 = 0;
          uVar8 = 0;
          FUN_00407e93();
          pcVar3 = (code *)swi(3);
          ppwVar7 = (wchar_t **)(*pcVar3)(uVar8,uVar9,uVar10,uVar11);
          return ppwVar7;
        }
        *local_c = _Dst;
        local_c = local_c + 1;
        FID_conflict__free((void *)0x0);
      }
      param_1 = param_1 + _SizeInWords;
      wVar2 = *param_1;
    }
  }
  FID_conflict__free((void *)0x0);
  return ppwVar7;
}
// Library Function - Multiple Matches With Same Base Name
// Name: free_environment<>
// Library: Visual Studio 2015 Release
void __cdecl free_environment__(void **param_1)
{
  void *_Memory;
  void **ppvVar1;
  if (param_1 != (void **)0x0) {
    _Memory = *param_1;
    ppvVar1 = param_1;
    while (_Memory != (void *)0x0) {
      FID_conflict__free(_Memory);
      ppvVar1 = ppvVar1 + 1;
      _Memory = *ppvVar1;
    }
    FID_conflict__free(param_1);
  }
  return;
}
undefined4 FUN_004093de(void)
{
  LPCSTR pCVar1;
  uint uVar2;
  ushort *_Memory;
  int iVar3;
  undefined4 uVar4;
  LPCSTR *ppCVar5;
  if (DAT_0041ef4c == (LPCSTR *)0x0) {
LAB_00409454:
    uVar4 = 0xffffffff;
  }
  else {
    pCVar1 = *DAT_0041ef4c;
    ppCVar5 = DAT_0041ef4c;
    while (pCVar1 != (LPCSTR)0x0) {
      uVar2 = FUN_0040e0f3(0,0,pCVar1,-1,(LPWSTR)0x0,0);
      if (uVar2 == 0) goto LAB_00409454;
      _Memory = (ushort *)__calloc_base(uVar2,2);
      if ((_Memory == (ushort *)0x0) ||
         (iVar3 = FUN_0040e0f3(0,0,*ppCVar5,-1,(LPWSTR)_Memory,uVar2), iVar3 == 0)) {
        FID_conflict__free(_Memory);
        goto LAB_00409454;
      }
      FUN_0040e57d(_Memory,0);
      FID_conflict__free((void *)0x0);
      ppCVar5 = ppCVar5 + 1;
      pCVar1 = *ppCVar5;
    }
    uVar4 = 0;
  }
  return uVar4;
}
void __thiscall FUN_0040945b(void *this,undefined *param_1)
{
  void *pvVar1;
  void *pvVar2;
  pvVar1 = (void *)((int)this + 4);
  while (this != pvVar1) {
    pvVar2 = this;
    _guard_check_icall();
    (*(code *)param_1)(pvVar2);
    this = (void *)((int)this + 4);
  }
  return;
}
// Library Function - Multiple Matches With Same Base Name
// Name: uninitialize_environment_internal<>
// Library: Visual Studio 2015 Release
void __cdecl uninitialize_environment_internal__(void **param_1)
{
  if ((void **)*param_1 != DAT_0041ef58) {
    free_environment__((void **)*param_1);
  }
  return;
}
// Library Function - Multiple Matches With Same Base Name
// Name: uninitialize_environment_internal<>
// Library: Visual Studio 2015 Release
void __cdecl uninitialize_environment_internal__(void **param_1)
{
  if ((void **)*param_1 != DAT_0041ef54) {
    free_environment__((void **)*param_1);
  }
  return;
}
int thunk_FUN_00409226(void)
{
  int iVar1;
  iVar1 = DAT_0041ef50;
  if (DAT_0041ef50 == 0) {
    if (DAT_0041ef4c != 0) {
      iVar1 = FUN_00409252();
      if (iVar1 == 0) {
        return DAT_0041ef50;
      }
      iVar1 = FUN_004093de();
      if (iVar1 == 0) {
        return DAT_0041ef50;
      }
    }
    iVar1 = 0;
  }
  return iVar1;
}
void FUN_004094bf(void)
{
  FUN_0040945b(&DAT_0041ef4c,uninitialize_environment_internal__);
  FUN_0040945b(&DAT_0041ef50,uninitialize_environment_internal__);
  free_environment__(DAT_0041ef58);
  free_environment__(DAT_0041ef54);
  return;
}
void FUN_004094f6(void)
{
  if (DAT_0041ef54 == 0) {
    DAT_0041ef54 = FUN_00409226();
  }
  return;
}
undefined4 thunk_FUN_00409252(void)
{
  undefined8 *_Memory;
  wchar_t **ppwVar1;
  undefined4 uVar2;
  if (DAT_0041ef50 != (wchar_t **)0x0) {