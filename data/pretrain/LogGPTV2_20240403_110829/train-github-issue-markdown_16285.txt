currently, there's no way to extend the Schema with statics, because it's
being exported as a class. It would require converting to an interface then
make the schema class implement the interface. The reason is that mongoose
plugins usually apply either to `statics` member of the Schema, or using
`Schema.static('name', fn)`. Doing a
    declare module 'mongoose' {
       export class Schema {
          static paginate(/*...*/);
       }
    }
gives a duplicate declaration error. applying the extra methods to the model
doesn't seem to work.
    export interface IModelTest extends mongoose.Document, ITimestamp, ITest { }
    export var TestSchema = new mongoose.Schema({
      /*...*/
    });
    TestSchema.plugin(require('../modules/pagination'));
    /* does 
    module.exports = function(Schema) {
      Schema.static('pagination', function(){
        return this.paginate({hide: {$ne: true}}, 1, 10, { populate: 'user' });
      });
    }
    */
    export var model = mongoose.model('Test', TestSchema);
    model.pagination; // error 