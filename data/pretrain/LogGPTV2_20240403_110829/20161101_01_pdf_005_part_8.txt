 export PGPORT=1921
 export PGDATA=/data01/pgdata/1921/pg_root
 export LANG=en_US.utf8
 export PGHOME=/opt/pgsql
 export LD_LIBRARY_PATH=$PGHOME/lib:/lib64:/usr/lib64:/usr/local/lib64:/lib:/usr/lib:/usr/local/lib
 export DATE=`date +"%Y%m%d%H%M"`
 export PATH=$PGHOME/bin:$PATH:.
 export PGHOST=$PGDATA
 export PGDATABASE=postgres
 psql -A -x -c "select row_number() over() as rn, * from (select query,' calls:'||calls||' total_time_s:'||round(total_time::numeric,2)||'
avg_time_ms:'||round(1000*(total_time::numeric/calls),2) as stats from pg_stat_statements order by total_time desc limit 20) t;" >/tmp/stat_query.log 2>&1
 echo -e "$DATE avcp TOP20 query report yest"|mutt -s "$DATE avcp TOP20 query report yest" -a /tmp/stat_query.log PI:EMAIL
 psql -c "select pg_stat_statements_reset()"
 # 9.2以及以上版本的total_time使用毫秒单位. 所以不需要乘以1000.
 crontab -e
 1 8 * * * /home/postgres/script/report.sh
监控数据库活动
 使用举例4, 查看bgwriter的统计信息
 backend 的buffer 写过于频繁说明shared buffer不够用, 或者是bgwriter的sleep time太长需要调整,
 让bgwriter多干点活(bgwriter_delay, bgwriter_lru_maxpages, bgwriter_lru_multiplier)或者调大shared buffer.
 http://www.postgresql.org/docs/9.3/static/runtime-config-resource.html#RUNTIME-CONFIG-RESOURCE-BACKGROUND-
WRITER
监控数据库活动
 使用举例5, 查看数据库级统计信息, 如数据库的 事务提交次数, 回滚次数, 未命中数据块读, 命中读, 行的统计信息(扫描,
输出,插入,更新,删除), 临时文件, 死锁, IOTIME等统计信息.
 数据行的扫描和输出的区别是, 扫描的行不一定输出.
 例如.
 digoal=# explain select count(*) from iso_test;
 QUERY PLAN
 ------------------------------------------------------------------
 Aggregate (cost=25.38..25.39 rows=1 width=0)
 -> Seq Scan on iso_test (cost=0.00..22.30 rows=1230 width=0)
 (2 rows)
 扫描1230行, 输出1行.
 tup_returned 指扫描
 tup_fetched 指输出
监控数据库活动
 digoal=# create table tbl(id int);
 CREATE TABLE
 digoal=# insert into tbl select generate_series(1,10000);
 INSERT 0 10000
 digoal=# analyze tbl;
 ANALYZE
 重置统计信息, 便于查看
 digoal=# select pg_stat_reset();
 pg_stat_reset
 ---------------
 (1 row)
 digoal=# select tup_returned,tup_fetched from pg_stat_database where datname ='digoal';
 tup_returned | tup_fetched
 --------------+-------------
 0 | 0
 (1 row)
监控数据库活动
 以下SQL无索引, 全表扫描
 digoal=# select * from tbl where id0 order by n_dead_tup desc;
 relname | n_live_tup | n_dead_tup
 -------------------+------------+------------
 pg_depend | 6864 |
 pg_proc | 2586 | 374
 pg_class | 429 | 128
 pg_attribute | 2958 | 117
 pg_operator | 737 | 90
 pg_type | 465 | 89
 pg_amop | 414 | 59
 手工执行或者等待autovacuum进程执行.
PostgreSQL 日常维护和检查
 膨胀表的维护,
 postgres=# create extension pgstattuple;
 CREATE EXTENSION