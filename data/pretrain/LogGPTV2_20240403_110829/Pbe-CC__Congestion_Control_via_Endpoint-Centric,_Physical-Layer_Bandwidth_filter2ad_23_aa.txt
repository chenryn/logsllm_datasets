title:Pbe-CC: Congestion Control via Endpoint-Centric, Physical-Layer Bandwidth
Measurements
author:Yaxiong Xie and
Fan Yi and
Kyle Jamieson
PBE-CC: Congestion Control via Endpoint-Centric,
Physical-Layer Bandwidth Measurements
Yaxiong Xie, Fan Yi, Kyle Jamieson
Department of Computer Science, Princeton University
{yaxiongx,fanyi,kylej}@cs.princeton.edu
0
2
0
2
l
u
J
6
]
I
N
.
s
c
[
2
v
5
7
4
3
0
.
2
0
0
2
:
v
i
X
r
a
ABSTRACT
Cellular networks are becoming ever more sophisticated and over-
crowded, imposing the most delay, jitter, and throughput damage
to end-to-end network flows in today’s internet. We therefore ar-
gue for fine-grained mobile endpoint-based wireless measurements
to inform a precise congestion control algorithm through a well-
defined API to the mobile’s cellular physical layer. Our proposed
congestion control algorithm is based on Physical-Layer Bandwidth
measurements taken at the Endpoint (PBE-CC), and captures the
latest 5G New Radio innovations that increase wireless capacity,
yet create abrupt rises and falls in available wireless capacity that
the PBE-CC sender can react to precisely and rapidly. We imple-
ment a proof-of-concept prototype of the PBE measurement module
on software-defined radios and the PBE sender and receiver in C.
An extensive performance evaluation compares PBE-CC head to
head against the cellular-aware and wireless-oblivious congestion
control protocols proposed in the research community and in de-
ployment, in mobile and static mobile scenarios, and over busy and
idle networks. Results show 6.3% higher average throughput than
BBR, while simultaneously reducing 95th percentile delay by 1.8×.
CCS CONCEPTS
• Networks → Transport protocols; Mobile networks.
KEYWORDS
TCP congestion control, Transport protocols, Cellular network, LTE,
Physical control channel, Control information, Capacity estimation
ACM Reference Format:
Yaxiong Xie, Fan Yi, Kyle Jamieson. 2020. PBE-CC: Congestion Control
via Endpoint-Centric, Physical-Layer Bandwidth Measurements. In Annual
conference of the ACM Special Interest Group on Data Communication on the
applications, technologies, architectures, and protocols for computer communi-
cation (SIGCOMM ’20), August 10–14, 2020, Virtual Event, NY, USA. ACM,
New York, NY, USA, 14 pages. https://doi.org/10.1145/3387514.3405880
1 INTRODUCTION
Most of today’s downlink end-to-end data flows terminate at a
cellular last hop to a mobile endpoint, where they encounter the
most delay, variations in delay, loss of their constituent packets,
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
SIGCOMM ’20, August 10–14, 2020, Virtual Event, NY, USA
© 2020 Association for Computing Machinery.
ACM ISBN 978-1-4503-7955-7/20/08...$15.00
https://doi.org/10.1145/3387514.3405880
and limits on their bandwidth. With the increasingly sophisticated
design of today’s and tomorrow’s cellular networks in mind, this
paper argues that it is actually the endpoints that are the entities
best positioned to measure the congestion state of an end-to-end
connection. We further argue that the physical layer of the mobile
endpoint ought to measure the congestion state of the wireless
last hop, and feed these very fine-grained measurements up to the
transport layer and applications through a well-defined API. This
position follows from three challenges that all congestion control
algorithms face when they operate in today’s wireless networks.
First, wireless is fundamentally a shared medium. This means
that when a user’s flow commences or finishes, other users associ-
ated with the same cell tower experience an abrupt drop or rise in
available wireless capacity that takes time to be reflected in the flow
of acknowledgements that today’s ack-based congestion control
protocols send back to the sender [10, 43, 49]. Second, in recent
years, to achieve high throughput and low end-to-end queuing de-
lay, senders must now swiftly react to other abrupt capacity changes
in the wireless cellular link that neither the sender nor even the cell
tower may directly observe. One reason behind this change is that
the newest cellular standards, such as LTE-Advance [2] and 5G New
Radio [1] aggressively exploit a wireless diversity technique called
carrier aggregation to increase wireless capacity, in which the cellu-
lar network aggregates the capacity from two or more cellular base
stations, making that aggregate capacity available to a single user.
When the cellular network adds or removes base stations participat-
ing in a user’s aggregated capacity, the wireless capacity available
to each user abruptly changes, accordingly. Wireless-aware con-
gestion control systems centered on a single base station, such as
Accel-Brake Control (ABC) [17, 18] require non-trivial extensions
to share state across cell sites when carrier aggregation is enabled.
Finally, wireless channel quality is inherently highly dynamic, due
to, e.g., user mobility, multipath propagation, and interference from
neighboring cell towers. These factors change the wireless data
rate that a particular user’s cellular link supports over a time scale
known as the wireless channel coherence time, which can be as
small as milliseconds in the case of vehicular-speed mobility. In
the event of a handover between cell towers, ABC would need to
migrate state, which is not considered in its design.
Further, the foregoing factors interact, exacerbating their effect.
Due to carrier aggregation, an end-to-end connection experiences
fluctuation due to the dynamics of all its aggregated cells, typically
fewer (two to four) than can offer a smoothing of capacity due to
statistical multiplexing.
While both base station and the mobile endpoint are able to
observe these fluctuations, it is only the latter that has fully up-to-
date state on the wireless connection to each and every base station
the mobile connects with. In the current design of the cellular
SIGCOMM ’20, August 10–14, 2020, Virtual Event, NY, USA
Yaxiong Xie, Fan Yi, Kyle Jamieson
physical layer, however, mobile users decode only their own channel
allocation messages, and so cannot track other users’ channel usage
and thus identify idle wireless capacity.
This paper introduces a new congestion control algorithm based
on Physical-Layer Bandwidth measurements, taken at the mobile
Endpoint (PBE-CC). At a high level, PBE-CC is a cross-layer design
consisting of two modules. Our first module comprises an end-to-
end congestion control algorithm loosely based on TCP BBR [10],
but with senders modified to leverage precise congestion control
techniques [25] when possible. We harness our end-to-end conges-
tion control to our second module, a wireless physical-layer capacity
measurement module for mobile devices. Our key innovation is
to enable highly accurate capacity measurements of the wireless
cellular link, which track its variations at millisecond-timescale
granularity, thus enabling significantly more precise control over
senders’ rates as they attempt to match their sending rate to the
available wireless capacity, should the bottleneck capacity be the
wireless link itself. In the event of an increase in wireless capacity,
this allows PBE-CC to be rapidly responsive, detecting the amount
of newly-emerged idle wireless capacity and prompting the sender
to increase its offered rate accordingly. In the event of a decrease
in wireless capacity, this allows PBE-CC senders to rapidly quench
their sending rate, thus avoiding queuing delays, as our evaluation
demonstrates in drill-down experiments (§6).
Our evaluation shows that most of the time, the cellular link is
indeed the bottleneck in the end-to-end path, as many congestion
control protocols [17, 43, 49] assume. PBE-CC makes the same
initial assumption, leveraging the above wireless-aware precise
congestion control functionality to more accurately control the
sender’s pacing, while also taking into account the number of users
sharing the wireless link, so that each PBE-CC sender can offer a
load that results in an overall-fair distribution of wireless capacity
between those users. Further refinements allow PBE-CC senders to
gently approach this target at the connection start, so that other
senders have time to react and adjust accordingly. However, if PBE-
CC detects an increase in the one-way delay of its packets that its
wireless capacity forecasts do not anticipate, this triggers a BBR-
like mechanism to probe the bottleneck rate based on the pace of
acknowledgement packets received by the PBE-CC sender.
We have implemented the PBE-CC congestion control module
in 814 lines of user space C++ code. Mobile telephone wireless
front ends should decode the necessary frequency bands in order
to implement PBE-CC’s physical-layer wireless capacity measure-
ment module, but their (closed-source) firmware does not offer this
functionality, and so we emulate the missing firmware function-
ality using the USRP software-defined radio in our 3,317-LoC C
implementation.
Our performance evaluation uses Pantheon [48] to test PBE-CC
head-to-head against BBR and CUBIC [19], leading congestion con-
trol algorithms, as well as recent congestion control algorithms
for cellular [43, 49], and other recently-proposed algorithms such
as Copa [6], PCC [11] and PCC-Vivace [12]. Our experiments be-
gin with measurements of delay and throughput, under stationary
user-device conditions, both indoors and outdoors, and both dur-
ing busy and quiet hours. Further experiments evaluate the same
under mobile user-device conditions, “controlled” competition for
Table 1: Summary throughput speedup and delay reduction
performance comparison vs. BBR, Verus, and Copa (aver-
aged over 15 idle cellular links and 25 busy links).
PBE-CC
PBE-CC delay reduction
Scheme
BBR
Verus
Copa
Busy
Idle
Busy
Idle
Busy
Idle
tput. speedup 95th. pctl.
1.54×
2.07×
3.97×
3.44×
0.80×
0.79×
1.04×
1.10×
1.25×
2.01×
10.35×
12.94×
avg. delay
1.39×
1.84×
2.53×
2.67×
0.80×
0.82×
the wireless network capacity (that we introduce ourselves in a
known manner), and “uncontrolled” competition from background
traffic of other users at various times of the day. For each competing
scheme, we report (individually) all throughput and delay order sta-
tistics, measured across 100-millisecond time windows, as well as
average case results for these experiments. Table 1 summarizes our
performance results: on average, PBE-CC achieves a 6.3% higher
average throughput than BBR, while simultaneously reducing 95th
percentile delay by a factor of 1.8× and average delay by a factor
of 1.6×. Against Verus, an algorithm specially designed for cellular
networks, PBE-CC achieves significant gains in both throughput
and delay reduction, and against the much-slower Copa, PBE-CC
achieves an approximate 11× throughput improvement while pay-
ing a relative 20% latency penalty. We also evaluate multi-user
fairness, RTT fairness and TCP friendliness of PBE-CC in §6.4.
2 RELATED WORK
End-to-end congestion control. Loss-based algorithms [15, 19,
23, 39] achieve high throughput, but often introduce excessive
delay, while delay-based algorithms [6, 8, 41] are prone to ACK
delay, ACK compression, or network jitter, and thus often result in
network capacity under-utilization. Moreover, it is widely known
that these methods achieve poor capacity utilization when compet-
ing with concurrent loss-based algorithms [6, 39]. Other proposals
use learned algorithms to optimize specific objective functions,
to generate better congestion control actions than human crafted
rules [5, 11, 12, 38, 42]. As we show in our evaluation (§6), online
learning frequently converges to solutions that result in significant
network under-utilization. BBR [10] targets convergence to Klein-
rock’s optimal operating point, i.e., simultaneously maximizing
throughput and minimizing delay, based on estimates of bottle-
neck bandwidth and round trip propagation time. BBR achieves
the best performance among all the algorithms we test, but still
under-utilizes the network and introduces excessive delay because
of its capacity estimates are coarse-grained.
End-to-end congestion control for cellular networks. Some
prior work treats the cellular link as a black box and makes use
of throughput, packet delay and loss statistics to infer link capac-
ity [21]. Raven [29] reduces interactive video latency by sending
redundant data over multiple paths (Wi-Fi and cellular), using Mul-
tipath TCP [44]. PROTEUS [47] collects current throughput, loss,
2
Congestion Control via Endpoint-Centric, Physical-Layer Bandwidth Measurements
SIGCOMM ’20, August 10–14, 2020, Virtual Event, NY, USA