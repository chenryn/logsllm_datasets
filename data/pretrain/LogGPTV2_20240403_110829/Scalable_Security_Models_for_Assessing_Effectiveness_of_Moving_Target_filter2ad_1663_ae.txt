MTD Framework: Existing work of the MTD focused
on the strategy and the outcome of security, but our focus
is to choose the most effective MTD techniques (i.e., the
resulting state of the networked system after applying a
MTD technique) based on the result of security analysis
via ARMs. Zhuang et al. [2] presented a MTD system
that changes the conﬁguration of a network proactively, and
they compared a simple MTD system (random adaptations)
with an intelligent MTD system (adaptation based on attack
detection alerts) in [3]. However, their focus was to see how
frequent the MTD technique should be applied, while the
security of assigning the MTD technique is not assessed.
Manadhata [4] introduced a two-player stochastic game
model to determine an optimal MTD strategy with a method
to quantify the shift in the attack surface, where the attack
524
surface metrics are from [1]. Their focus is to reduce the
attack surface based on the trade-off between security and
usability, where the effectiveness of the MTD techniques is
not considered. Crouse et al. [5] used a Genetic Algorithm to
ﬁnd temporally and spatially diverse conﬁgurations, which
increased the spatial diversity and reduced their deﬁned
vulnerability scores. However, without a proper security
assessment (e.g., using an ARM), one cannot guarantee
that the spatially diverse conﬁgurations is secure. Evans et
al. [6] classiﬁed diversity MTD techniques (e.g., address,
instruction set and data randomisation) with respect to four
different types of attack strategies. However, they did not
take into account any speciﬁc network and its conﬁguration.
MTD Applications:A wide range of applications use
MTD frameworks, including a Self-shielding Dynamic Net-
work Architecture (SDNA) [7], security layer (diversity on
cryptosystems) and physical layer (diversity on ﬁrmware) of
networked systems [8], and Advanced Adaptive Applications
environment [9].
MTD techniques: The MTD techniques can be deployed
in various layers of the networked system as shown in
Table IV, and they can improve the MTD framework.
However, these work did not consider the effectiveness of
their schemes. We enlist some of the most recent MTD
techniques, where their effectiveness could be measured
using our idea in this paper.
Shufﬂe: The shufﬂe based MTD techniques rearrange
the system settings in various layers. At the TCP/IP layer,
Jafarian et al. [10] showed changing IP addresses in a
software deﬁned network (SDN), with their major goal
of maximising the unpredictability and the mutation rate.
Antonatos et al. [11] shufﬂed IP addresses, with a speciﬁed
objective to harden networks against Hitlist Worms. At the
infrastructure layer, Danev et al. [12] used A VM live
migration in private clouds with focuses on integrity of the
software prior to the VM live migration, and Zhang et al.
[13] considered a VM live migration in clouds with focuses
on practicability considering the availability and duration
of the VM live migration. Okhravi et al. [14] showed the
environment migration (e.g., migrating applications to a new
host on different operating system (OS)). At the application
layer, Vikram et al. [15] randomized HTML elements to
mitigate web bots. Jia et al. [16] showed the secure service
access for clients by relocating secret proxies and shufﬂing
client-to-proxy assignments.
Diversity: The diversity based MTD techniques maintain
equivalent functionalities, but the implementations vary in
various layers. At the topology layer, Rohrer et al. [17]
formalized path diversity family of metrics (e.g., reliability
and resilience) and proposed path diversiﬁcation selection
algorithm. Newell et al. [18] assigned diversity to nodes
in the networked system to increase the diversity in attack
paths by solving the diversity assignment problem (DAP)
and computed the optimal diversity assignment solution in
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:25:31 UTC from IEEE Xplore.  Restrictions apply. 
medium-sized networks, and a greedy approximation that
scales to large networks. Also, they solved the DAP in a
changing network by assigning an appropriate variant to new
nodes. At the application layer, Glynis et al. [19] applied
diversity to active software components to change their im-
plementation versions and resources continuously. Jackson et
al. [20] used a compiler based software diversity technique
(two orthogonal compiler-based techniques) to create multi-
ple functionally equivalent, but internally different variants
of a program automatically. Huang et al. [21] used a software
level diversity, where they automatically created a set of
virtual servers with a unique software mix (e.g., web server
program, web application programs, OS, and virtualization
layer). Nguyen et al. [22] used a data diversity to increase the
difﬁculties for attackers to compromise the system. Williams
et al. [23] used the data diversity on VMs. Cox et al. [24]
applied address space partitioning and instruction set tagging
as an example diversity, but can be extended with different
methods in other layers of the system.
Redundancy: The redundancy technique produces mul-
tiple replication of a node or a service to enhance the
availability, such as software redundancy [25]. However, we
considered more speciﬁed attacks in this paper (e.g., when
attacker wants to penetrate through the networked system to
gain secrets), namely Shufﬂe and Diversity.
Security modeling and analysis: Many studies have
attempted to show the effectiveness of using the MTD tech-
niques. However, existing studies did not use the ARMs to
analyze the security, such that one cannot compare different
MTD techniques to determine which one is the most effec-
tive for their networked system. In a large sized networked
system, often not all network components can be secured
due to constraints and limited resources. In this paper, we
incorporated the MTD techniques for security modeling
and analysis using the HARM. We analyzed the security
of Shufﬂe and Diversity, and compared their effectiveness
to support security decisions. In addition, we proposed to
use the IMs [38], [39] to deploy the MTD techniques on
the important nodes, where the NCMs were used to rank
important hosts (e.g., degree, closeness, betweenness), and
security metrics were used to rank important vulnerabilities
in a host (e.g., CVSS BS). We showed that the security
analysis and deploying the MTD techniques using the IMs
and the ES method were (nearly) equivalent, while the
performance (in terms of time) was dramatically improved.
However, we did not consider
The HARM is more adaptable than single-layer ARMs
when there are changes in the networked system [37].
However, we only considered the changes in the networked
system from deploying the MTD techniques. There are other
causes in the virtualized system to update, which creates a
complication for analyzing the security. We will look into
such complex scenarios in future work.
VI. CONCLUSION
Moving Target Defense (MTD) is a game changing net-
work defense strategy that has been studied recently. The
MTD techniques aim to thwart attacks by continuously
changing the attack surface of a system. Various MTD
techniques are proposed to enhance the security, but they
did not consider a formal security analysis to determine
the effectiveness of deploying them. Also, only a number
of MTD techniques are applicable due to constraints, and
it becomes difﬁcult
to decide how to deploy the MTD
techniques effectively when the size of the networked system
is large.
In this paper, we incorporated two MTD techniques,
Shufﬂe and Diversity, in the security modeling and analysis
using the HARM. We showed a formal security analysis of
Shufﬂe and Diversity, and we compared the effectiveness
of these techniques in various scenarios. We also used the
IMs to select highly important nodes in the networked
system (e.g., hosts and vulnerabilities) to deploy the MTD
techniques, and the effectiveness of using the IMs is shown
by comparing against the ES method in simulations.
REFERENCES
[1] P. Manadhata and J. Wing, “An Attack Surface Metric,” IEEE
Transactions on Software Engineering, vol. 37, no. 3, pp.
371–386, 2011.
[2] R. Zhuang, S. Zhang, S. DeLoach, X. Ou, and A. Singhal,
“Simulation-Based Approaches to Studying Effectiveness of
Moving-Target Network Defense,” in Proc. of National Sym-
posium on Moving Target Research, 2012.
[3] R. Zhuang, S. Zhang, A. Bardas, S. DeLoach, X. Ou, and
A. Singhal, “Investigating the Application of Moving Target
Defenses to Network Security,” in Proc. of ISRCS, 2013, pp.
162–169.
[4] P. Manadhata, “Game Theoretic Approaches to Attack Sur-
face Shifting,” in Moving Target Defense II. Springer New
York, 2013, vol. 100, pp. 1–13.
[5] M. Crouse and E. Fulp, “A Moving Target Environment for
Computer Conﬁgurations using Genetic Algorithms,” in Proc.
of SAFECONFIG, 2011, pp. 1–7.
[6] D. Evans, A. Nguyen-Tuong, and J. Knight, “Effectiveness
of Moving Target Defenses,” in Moving Target Defense.
Springer New York, 2011, vol. 54, pp. 29–48.
[7] J. Yackoski, J. Li, S. DeLoach, and X. Ou, “Mission-oriented
Moving Target Defense Based on Cryptographically Strong
Network Dynamics,” in Proc. of CSIIRW, 2013, pp. 57:1–
57:4.
[8] V. Casola, A. De Benedictis, and M. Albanese, “A Moving
Target Defense Approach for Protecting Resource-constrained
Distributed Devices,” in Proc. of IRI, 2013, pp. 22–29.
[9] A. Paulos, P. Pal, R. Schantz, and B. Benyo, “Moving Target
Defense (MTD) in an Adaptive Execution Environment,” in
Proc. of CSIIRW, 2013, pp. 62:1–62:4.
[10] J. Jafarian, E. Al-Shaer, and Q. Duan, “Openﬂow Random
Host Mutation: Transparent Moving Target Defense Using
Software Deﬁned Networking,” in Proc. of HotSDN. ACM,
2012, pp. 127–132.
[11] S. Antonatos, P. Akritidis, E. Markatos, and K. Anagnostakis,
“Defending Against Hitlist Worms Using Network Address
Space Randomization,” in Proc. of WORM, 2005, pp. 30–40.
525
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:25:31 UTC from IEEE Xplore.  Restrictions apply. 
[12] B. Danev, R. Masti, G. Karame, and S. Capkun, “Enabling
Secure VM-vTPM Migration in Private Clouds,” in Proc. of
ACSAC, 2011, pp. 187–196.
[13] Y. Zhang, M. Li, K. Bai, M. Yu, and W. Zang, “Incentive
Compatible Moving Target Defense against VM-Colocation
Attacks in Clouds,” in Information Security and Privacy
Research.
Springer Berlin Heidelberg, 2012, vol. 376, pp.
388–399.
[14] H. Okhravi, A. Comella, E. Robinson, S. Yannalfo,
P. Michaleas, and J. Haines, “Creating a Cyber Moving
Target for Critical Infrastructure Applications,” in Critical
Infrastructure Protection V.
Springer Berlin Heidelberg,
2011, vol. 367, pp. 107–123.
[15] S. Vikram, C. Yang, and G. Gu, “NOMAD: Towards Non-
Intrusive Moving-Target Defense against Web Bots,” in Proc.
of CNS, 2013, pp. 1–9.
[16] Q. Jia, K. Sun, and A. Stavrou, “MOTAG: Moving Target
Defense against Internet Denial of Service Attacks,” in Proc.
of ICCCN, 2013, pp. 1–9.
[17] J. Rohrer, A. Jabbar, and J. Sterbenz, “Path Diversiﬁcation
for Future Internet End-to-End Resilience and Survivability,”
Telecommunication Systems, pp. 1–19, 2013.
[18] A. Newell, D. Obenshain, T. Tantillo, C. Nita-Rotaru, and
Y. Amir, “Increasing Network Resiliency by Optimally As-
signing Diverse Variants to Routing Nodes,” in Proc. of DSN,
2013.
[19] D. Glynis, H. Salim, A. Youssif, and R. Gabriel, “Resilient
Dynamic Data Driven Application Systems (rDDDAS),” Pro-
cedia Computer Science, vol. 18, no. 0, pp. 1929 – 1938,
2013.
[20] T. Jackson, B. Salamat, A. Homescu, K. Manivannan,
G. Wagner, A. Gal, S. Brunthaler, C. Wimmer, and M. Franz,
“Compiler-Generated Software Diversity,” in Moving Target
Defense. Springer New York, 2011, vol. 54, pp. 77–98.
[21] Y. Huang and A. Ghosh, “Introducing Diversity and Uncer-
tainty to Create Moving Attack Surfaces for Web Services,” in
Moving Target Defense. Springer New York, 2011, vol. 54,
pp. 131–151.
[22] A. Nguyen-Tuong, D. Evans, J. Knight, B. Cox, and J. David-
son, “Security Through Redundant Data Diversity,” in Proc.
of DSN, 2008, pp. 187–196.
[23] D. Williams, W. Hu, J. Davidson, J. Hiser, J. Knight, and
A. Nguyen-Tuong, “Security Through Diversity: Leveraging
Virtual Machine Technology,” IEEE Security & Privacy,
vol. 7, no. 1, pp. 26–33, 2009.
[24] B. Cox, D. Evans, A. Filipi, J. Rowanhill, W. Hu, J. David-
son, J. Knight, A. Nguyen-Tuong, and J. Hiser, “N-Variant
Systems: A Secretless Framework for Security through Di-
versity,” in Proc. of USENIX Security, 2006, pp. 105–120.
[25] E. Yuan, S. Malek, B. Schmerl, D. Garlan, and J. Gennari,
“Architecture-Based Self-Protecting Software Systems,” in
Proc. of QoSA, 2013, pp. 33–42.
[26] O. Sheyner, J. Haines, S. Jha, R. Lippmann, and J. Wing,
“Automated Generation and Analysis of Attack Graphs,”
CMU, Tech. Rep., May, 2002.
[27] B. Schneier, Secrets and Lies: Digital Security in a Networked
World.
John Wiley and Sons Inc., 2000.
[28] X. Ou, W. Boyer, and M. McQueen, “A Scalable Approach to
Attack Graph Generation,” in Proc. of CCS, 2006, pp. 336–
345.
[29] K. Ingols, M. Chu, R. Lippmann, S. Webster, and S. Boyer,
“Modeling Modern Network Attacks and Countermeasures
Using Attack Graphs,” in Proc. of ACSAC, 2009, pp. 117
–126.
[30] A. Xie, Z. Cai, C. Tang, J. Hu, and Z. Chen, “Evaluating
Network Security With Two-Layer Attack Graphs,” in Proc.
of ACSAC, 2009, pp. 127 –136.
[31] S. Zonouz, H. Khurana, W. Sanders, and T. Yardley, “RRE:
A Game-theoretic Intrusion Response and Recovery Engine,”
in Proc. of DSN, 2009, pp. 439–448.
[32] A. Roy, D. Kim, and K. Trivedi, “Attack Countermeasure
Trees (ACT): Towards Unifying the Constructs of Attack
and Defense Trees,” Security and Communication Networks,
vol. 5, no. 8, pp. 929–943, 2012.
[33] ——, “Scalable Optimal Countermeasure Selection using
Implicit Enumeration on Attack Countermeasure Trees,” in
Proc. of DSN, 2012.
[34] L. Wang, S. Noel, and S. Jajodia, “Minimum-cost Network
Hardening using Attack Graphs,” Computer Communications,
vol. 29, no. 18, pp. 3812 – 3824, 2006.
[35] M. Albanese, S. Jajodia, and S. Noel, “Time-efﬁcient and
Cost-effective Network Hardening using Attack Graphs,” in
Proc. of DSN, 2012.
[36] R. Lippmann and K. Ingols, “An Annotated Review of Past
Papers on Attack Graphs,” ESC-TR-2005-054, 2005.
[37] J. Hong and D. Kim, “Performance Analysis of Scalable
Attack Representation Models,” in Proc. of SEC, 2013, pp.
330–343.
[38] ——, “Scalable Security Analysis in Hierarchical Attack
Representation Model using Centrality Measures,” in Proc.
of DSNW, 2013.
[39] ——, “Scalable Security Model Generation and Analysis
using k-importance Measure,” in Proc. of SecureComm, 2013,
pp. 270–287.
[40] G. Cybenko and C. Landwehr, “Security Analytics and Mea-
surements,” IEEE Security & Privacy, vol. 10, no. 3, pp. 5–8,
2012.
[41] C. Chung, P. Khatkar, T. Xing, J. Lee, and D. Huang, “NICE:
Network Intrusion Detection and Countermeasure Selection in
Virtual Network Systems,” IEEE Transactions on Dependable
and Secure Computing, vol. 10, no. 4, pp. 198–211, 2013.
[42] L. Gallon and J. Bascou, “Using CVSS in Attack Graphs,”
in Proc. of ARES, 2011, pp. 59–66.
[43] I. Ray and N. Poolsapassit, “Using Attack Trees to Identify
Malicious Attacks from Authorized Insiders,” in Computer
Security ESORICS 2005. Springer Berlin Heidelberg, 2005,
pp. 231–246.
[44] X. Ou and S. Govindavajhala, “MulVAL: A Logic-based
Network Security Analyzer,” in Proc. of USENIX Security,
2005, pp. 113–128.
[45] J. Hong, D. Kim, and T. Takaoka, “Scalable Attack Represen-
tation Model Using Logic Reduction Techniques,” in Proc. of
TrustCom, 2013, pp. 404–411.
CloudBand.
[46] Alcatel-Lucent. Alcatel-Lucent
[Online].
Available: http://www.alcatel-lucent.com/solutions/cloudband
[47] L. Wang, S. Jajodia, A. Singhal, and S. Noel, “k-Zero Day
Safety: Measuring the Security Risk of Networks against
Unknown Attacks,” in Proc. of ESORICS, 2010, pp. 573–587.
[48] L. Wang, S. Jajodia, A. Singhal, C. P., and S. Noel, “k-
Zero Day Safety: A Network Security Metric for Measuring
the Risk of Unknown Vulnerabilities,” IEEE Transactions on
Dependable and Secure Computing, vol. 11, no. 1, pp. 30–44,
2014.
[49] M. Albanese, S. Jajodia, A. Singhal, and L. Wang, “An
Efﬁcient Approach to Assessing the Risk of Zero-day Vul-
nerabilities,” in Proc. of SECRYPT, 2013.
526
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:25:31 UTC from IEEE Xplore.  Restrictions apply.