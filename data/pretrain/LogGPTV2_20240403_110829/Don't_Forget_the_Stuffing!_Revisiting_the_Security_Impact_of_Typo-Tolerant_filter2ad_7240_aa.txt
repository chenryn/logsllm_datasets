title:Don't Forget the Stuffing! Revisiting the Security Impact of Typo-Tolerant
Password Authentication
author:Sena Sahin and
Frank Li
Don’t Forget the Stuffing! Revisiting the Security Impact
of Typo-Tolerant Password Authentication
Sena Sahin
PI:EMAIL
Georgia Institute of Technology
ABSTRACT
To enhance the usability of password authentication, typo-tolerant
password authentication schemes permit certain deviations in the
user-supplied password, to account for common typographical er-
rors yet still allow the user to successfully log in. In prior work, anal-
ysis by Chatterjee et al. demonstrated that typo-tolerance indeed
notably improves password usability, yet (surprisingly) does not
appear to significantly degrade authentication security. In practice,
major web services such as Facebook have employed typo-tolerant
password authentication systems.
In this paper, we revisit the security impact of typo-tolerant pass-
word authentication. We observe that the existing security analysis
of such systems considers only password spraying attacks. How-
ever, this threat model is incomplete, as password authentication
systems must also contend with credential stuffing and tweaking
attacks. Factoring in these missing attack vectors, we empirically
re-evaluate the security impact of password typo-tolerance using
password leak datasets, discovering a significantly larger degrada-
tion in security. To mitigate this issue, we explore machine learning
classifiers that predict when a password’s security is likely affected
by typo-tolerance. Our resulting models offer various suitable op-
erating points on the functionality-security tradeoff spectrum, ulti-
mately allowing for partial deployment of typo-tolerant password
authentication, preserving its functionality for many users while
reducing the security risks.
CCS CONCEPTS
• Security and privacy → Authentication.
KEYWORDS
Password Authentication; Security Analysis; Machine Learning
ACM Reference Format:
Sena Sahin and Frank Li. 2021. Don’t Forget the Stuffing! Revisiting the
Security Impact of Typo-Tolerant Password Authentication. In Proceedings of
the 2021 ACM SIGSAC Conference on Computer and Communications Security
(CCS ’21), November 15–19, 2021, Virtual Event, Republic of Korea. ACM, New
York, NY, USA, 19 pages. https://doi.org/10.1145/3460120.3484791
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea.
© 2021 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-8454-4/21/11...$15.00
https://doi.org/10.1145/3460120.3484791
Frank Li
PI:EMAIL
Georgia Institute of Technology
1 INTRODUCTION
Despite well-documented security and usability concerns [5], human-
chosen passwords remain the de facto standard mechanism for au-
thentication across the web. As a consequence, the security of much
of the web ecosystem and its billions of users remains dependent
on how users and websites manage password authentication.
One password usability issue that arises in practice is that users
struggle to correctly type in their passwords, making typographical
errors that result in delayed or failed login attempts [18, 19]. To
address this issue, typo-tolerant password authentication systems
accept submitted passwords that deviate in certain regards from
the true password, essentially correcting for common classes of
typographical errors. Several major web services, notably includ-
ing Facebook, have been documented as having deployed typo-
tolerance for online logins [2, 15, 34].
While typo-tolerance during password authentication may im-
prove password usability, one might suspect that it also degrades
security during online password guessing attacks, as each password
guessed by the attacker covers a range of passwords rather than
a single one. In 2016, Chatterjee et al. [7] provided the first sys-
tematic usability and security analysis of typo-tolerant password
authentication. They identified that typographical mistakes made
by users during password entry were frequent, with several com-
mon errors that could be readily corrected with simple password
transformation functions. As a result, typo-tolerance would indeed
significantly improve password usability. Furthermore, they also
formally and empirically analyzed the impact of typo-tolerance on
password security under a specific threat model, finding that the
impact was minimal. Thus, the work concluded that typo-tolerance
does not actually result in a tradeoff between security and usability,
but rather produces notable usability gains with negligible degra-
dation in security.
In this paper, we re-examine the security impact of typo-tolerant
password authentication. Our exploration is driven by the observa-
tion that the existing analysis by Chatterjee et al. [7] used an online
attack model that effectively considered only password spraying
attacks [22], where attackers guess common passwords (potentially
based on some password probability distribution). We identify that
this threat model is incomplete. In addition to password spray-
ing attacks, web services also contend with credential stuffing at-
tacks [21, 24], where attackers leverage leaked passwords from one
website to target accounts on other services. Numerous websites
have suffered high-profile credential stuffing attacks [1, 24, 30],
demonstrating that this threat is salient in practice. Additionally,
prior research [10, 25, 36] has developed credential tweaking at-
tacks, where beyond only “stuffing” leaked passwords, attackers
also generate variants of leaked passwords for login attempts.
Session 1D: Authentication and Click Fraud CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea252Credential stuffing exploits the high password reuse rate among
users. However, many users who do not reuse the same password
across websites often use minor variations for different sites [10].
We hypothesize that for many such users, the differences between
two sites’ passwords could be corrected by the policies applied in
typo-tolerant password authentication schemes, thus allowing for
successful credential stuffing (and tweaking) attacks even when the
leaked passwords used by the attacker are not exact matches.
We empirically evaluate our hypothesis by analyzing two re-
cent password leak datasets containing nearly 4 billion account
credentials. We first assess the impact of typo-tolerance on pass-
word spraying attacks, reproducing the prior finding that typo-
tolerance results in limited additional attack success. Even under
a liberal typo-tolerance policy where attackers are afforded 1000
online guesses, less than 1% of emails become newly vulnerable to
password spraying after enabling typo-tolerance. We then evaluate
credential stuffing and tweaking attacks, finding that typo-tolerance
can exacerbate the effectiveness of these attacks significantly. In the
worst case, as many as a third of emails become newly vulnerable
to credential stuffing and tweaking after enabling typo-tolerance,
and up to 9% of emails under more realistic settings.
In summary, our paper makes the following contributions:
Our findings reveal that the security consequences of typo-
tolerant password authentication are more severe than previously
understood. However, this conclusion does not necessarily mean
that typo-tolerance must be wholesale abandoned. To determine
whether typo-tolerance can still be deployed to some extent, we ex-
plore machine learning classifiers that predict if a password may be
newly susceptible to credential stuffing under typo-tolerance. Using
one of our leak datasets, we develop proof-of-concept models that
provide different recall versus false positive rate operating points
that may be suitable for practical use. Ultimately, using such models
in conjunction with typo-tolerant password authentication allows
web services to manage the tradeoff between the functionality of
typo-tolerance and its security concerns.
• We replicate the prior security analysis of typo-tolerant password
authentication on password leak datasets that are two orders of
magnitude larger, confirming the previous work’s results con-
tinue to hold [7].
• We expand our current understanding of typo-tolerant password
authentication by analyzing how it is impacted by credential stuff-
ing and tweaking attacks, which are missing from the existing
analysis’s threat model [7]. Our findings indicate that the au-
thentication security degradation from enabling typo-tolerance
is significantly greater under this more complete threat model.
• We explore machine learning classifiers that can predict when
security may degrade for a password under typo-tolerance. These
classifiers offer different operating points trading off recall and
false positives rates, allowing web services to still deploy typo-
tolerant password authentication to a broad population while
limiting the security risks.
• We discuss future directions for exploring how to further harden
• We have shared our research with Facebook, which has taken
typo-tolerant password authentication.
steps internally to address the concerns.
2 BACKGROUND AND RELATED WORK
In this section, we provide an overview of typo-tolerant password
authentication, highlighting the most relevant details for our sub-
sequent investigation. We also discuss related work on password
attacks and defenses.
2.1 Typo-Tolerant Password Authentication
Typo-tolerant password authentication systems permit certain ty-
pographical errors in the submitted password while still authenti-
cating the user. Such systems have been used in practice, such as
by Facebook [15], to improve the user login experience. In 2016,
Chatterjee et al. [7] conducted the first systematic usability and
security analysis of such authentication schemes.
Usability Analysis. Through a crowdsourced user study and
an analysis of telemetry from live login attempts at Dropbox, Chat-
terjee et al. identified several classes of common typos made during
password entry. The five most common mistakes were, in decreas-
ing order: 1) the case of all letters was flipped (likely due to the
caps lock key), 2) the case of the first letter was flipped, 3) an
extra character appeared at the password end, 4) an extra charac-
ter appeared at the password start, and 5) the last character was
not shift-key modified. From the Dropbox login telemetry, the re-
searchers observed that 9.3% of the failed login attempts were due
to these typos that could have been automatically corrected using
string transformation functions (one for each common typo class).
Had the authentication system tested such corrections on the sub-
mitted passwords before validation, nearly 20% of Dropbox users
who made typos would have logged in faster. In addition, 3% of
all users failed to log in altogether but would have succeeded had
typo-tolerant checking been enabled for the three most common
categories of typos. These results empirically demonstrated that
typo-tolerance can notably improve authentication usability.
The specific password corrector functions identified were (in the
same order as the common typo classes that they correct for):
(1) swc_all: Swap the case of all letters in the password.
(2) swc_first: Swap the case of the first password character.
(3) rm_last: Remove the last password character.
(4) rm_first: Remove the first password character.
(5) n2s_last: Shift-key modify the last password character.
The authors also defined typo-tolerance policies combining these
corrector functions, with the CTopX policy containing the first 𝑋
correctors, in the order listed above (e.g., CTop3 contains swc_all,
swc_first, and rm_last). In our work, we will consider the same set
of corrector functions and typo-tolerance policies.
Security Analysis. While typo-tolerance allows users to more
easily authenticate, one might expect that it could also allow at-
tackers to more readily authenticate as a target, as incorrect at-
tacker password guesses might be automatically corrected to the
target’s true password. Considering online password spraying at-
tacks [22], where the optimal attacker strategy is to guess the most
popular passwords (in decreasing order), Chatterjee et al. provided
both a formal and empirical security evaluation of typo-tolerance,
demonstrating that in fact, such attackers do not gain a signifi-
cant advantage once typo-tolerance is enabled. Through simulating
password spraying attacks using password dumps from three web-
sites, the authors found that if the attacker was permitted 10 login
Session 1D: Authentication and Click Fraud CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea253attempts per account (a reasonable quantity given rate-limiting
and additional login defenses commonly deployed by online ser-
vices), the attack success rate increases by only 0.27% when using
the most permissive typo-tolerance policy. Thus, they conclude
that typo-tolerance provides substantial authentication usability
benefits without noticeable degradation in authentication security.
In this work, we revisit this prior security analysis of typo-
tolerant password authentication by evaluating the security im-
plications of such schemes under a more comprehensive threat
model that, in addition to password spraying [22], includes practical
attacks such as credential stuffing [21, 24] and credential tweak-
ing [25]. We note that more recently, a personalized variant of
typo-tolerance was developed [8] that customizes the typo correc-
tions to the user. Blanchard et al. [4] also developed a typo-tolerance
scheme with reduced server computation costs. In this study, we
focus on traditional typo-tolerance in password authentication sys-
tems, as it has been used in practice [2, 15, 34], likely due to its
simpler design (thus facilitating deployment).
2.2 Password Attacks and Defenses
In this study, we investigate the impact of password spraying [22],
credential stuffing [21, 24], and credential tweaking [25] attacks
on typo-tolerant password authentication, as well as hardening
such typo-tolerant schemes. Prior work has also considered such
password attacks and defenses in a more general context.
Password spraying is enabled by the passwords commonly used
by many users. Meanwhile, credential stuffing and tweaking at-
tacks are fueled by the widespread use of identical or similar pass-
words across online services, as extensively documented by prior
research [10, 26, 27, 31, 32, 35]. As a consequence, data breaches at
one service result in account compromise at other services.
Various defenses against these attacks have been proposed. For
password spraying, one approach [16, 29] is to derive signals from
the passwords used in failed login attempts to detect and block
ongoing attacks. Password strength meters and blocklists also aim
to discourage the use of common passwords [14, 23, 28]. To de-
fend against credential stuffing attacks, Wang et al. [37] devel-
oped a cooperative framework where different web services can
exchange telemetry to detect and block credential stuffing. An-
other line of defenses identifies if user credentials may be in leaked
datasets, typically resulting in user notifications and password re-
sets [9, 13, 20, 33]. The most sophisticated attack we consider is
credential tweaking, where the attacker generates variants of a
leaked password for their login attempts. In 2019, Pal et al. [25]
used a generative neural network model to perform the state-of-the-
art credential tweaking attack, improving upon the effectiveness of
previously developed attacks [10, 36, 38]. To date, defenses against
this attack class are limited to password meters that warn users
against using susceptible passwords [25].
3 METHODOLOGY
In this section, we describe the datasets that we use to empirically
evaluate the impact of typo-tolerance on password authentication
security. Instead of assessing a live authentication system, which
would entail user privacy, security, and ethical concerns, we rely
on public password leaks, as similarly done in prior password re-
search [7, 10, 25, 32].
3.1 Data Source
Our study relies on two recent and massive password leak datasets.
These datasets are publicly available online, although we avoid
publishing their specific locations here due to their sensitive na-
ture. While verifying the data in any data leak is challenging due
to ethical concerns, these datasets have been previously used by
security researchers without raising validity concerns [1, 6, 17, 25].
BreachCompilation. This leaked dataset is an aggregation of var-
ious password breaches, found by 4iQ in late 2017 [6]. It contains
1.4B account credentials associated with 1.1B distinct emails and
463M unique passwords. While this dataset contains well-known
breaches, including LinkedIn, Yahoo, and Myspace, it does not indi-
cate which breach sourced a given credential.
Collection#1. This dataset [17], uncovered in early 2019, contains
multiple compilations of password leaks. The dataset consists of 31
folders (listed in Table 6 in the Appendix), where the folder names
hint at the breach origins (e.g., leaks from certain countries or
certain types of online services). While certain folders contain files
indicating the specific source of a leak (e.g., a domain name in the
filename), many of the folders are aggregations themselves, again
preventing us from ascertaining the provenance of the credentials.
In total, the collection consists of 2.7B account credentials associated
with 772M unique emails and 21M distinct passwords.
3.2 Data Processing
BreachCompilation. We parse the BreachCompilation dataset’s
1.4B lines, which are formatted as delimiter-separated (account,
password) pairs. As we will use email addresses to reliably associate
account credentials with the same user, we filter out lines without a
valid email address as the account identifier. We also filter out lines
without a likely valid plaintext password, including those where
the password is longer than 31 characters (many of which are hash
values, and account for less than 0.1% of all passwords) or shorter
than 3 characters. Finally, we eliminate the approximately 36.5K
emails associated with over 100 passwords, which are unlikely to
represent real users. In total, we removed 2.8M lines, accounting
for 0.2% of the original data.
As listed in Table 6 in the Appendix, the final dataset consists
of 1.1B unique emails, of which 182.1M emails are associated with
multiple passwords. Of these multi-password emails, 21% are associ-
ated with the same password multiple times. This fraction of emails
is commensurate with the password reuse rates observed in prior
studies [10, 32]; thus we believe this observation reflects password
reuse rather than the leak containing extensive duplicated data.
Collection#1. The Collection#1 dataset contains various file types
and formats, including delimiter-separated text files, files with SQL
statements, and HTML documents. We also observe files containing
only hash values instead of plaintext passwords. We focus on pro-
cessing the delimiter-separated text files, which account for 99.9%
of the data.
After parsing these files (considering multiple potential delim-
iters), we process the resulting (account, password) pairs in a similar
Session 1D: Authentication and Click Fraud CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea254fashion as with the BreachCompilation dataset. We filter out pairs
without a valid email for the account, pairs where the password is
longer than 31 characters or shorter than 3 characters, and emails
with over a hundred associated passwords. In total, we filtered out
0.5% of the original data.
As listed in Table 6 in the Appendix, the Collection#1 dataset is
organized into 31 separate folders, where each folder name suggests
a common characteristic of the contained breach data. We observe
similarities in folder names though (e.g., EUcombos and EUcom-
bos_1), suggesting that the same breached data may be duplicated
across multiple folders. Furthermore, we find extensive overlap in
the account credentials between folders. Thus, we evaluate each
folder as a separate leak compilation dataset (we will refer to each
folder’s data as a separate Collection#1 leak combination).
We further investigate the potential existence of duplicate data
for each leak combination. Again, considering emails associated
with multiple passwords, we calculate the fraction that are associ-
ated with the same password multiple times, seeing whether this
rate is commensurate with the password reuse rates observed in
previous studies [10, 32]. As shown in Table 6, for 20 of the leak
combinations, we observe supposed password reuse rates above
50%, with one leak combination exhibiting a 98% password reuse
rate. These rates far exceed the 9–43% reuse rates previously docu-
mented [10, 32]. Thus, we believe these leaks likely contain dupli-
cated data that would not reflect real user password behavior and
do not investigate them further.
Finally, three additional leak combinations contain at most a few
thousand emails associated with multiple passwords. We require
such users for our security evaluation (particularly with studying
credential stuffing attacks), so we also filter out these three leak
combinations, leaving us with eight Collection#1 leak combina-
tions exhibiting reasonable password reuse rates (those less than
50%) to investigate. Table 6 indicates these eight leaks and their
data characteristics. (We caution though that we ultimately lack
ground truth on the true nature of these datasets.) Note that we
investigate each Collection#1 leak combination separately, rather
than aggregate across them.