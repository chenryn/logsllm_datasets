1 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
WhyMI so Sexy? WMI Attacks, Real-Time Defense, and 
Advanced Forensic Analysis 
Willi Ballenthin, Matt Graeber, Claudiu Teodorescu 
DEF CON 23 
2 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
This talk is dedicated to hunting down APT 29 
3 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
So you’ve been owned with WMI… 
 Attackers use WMI - reality 
 Prevention, detection, remediation 
guidance - lacking 
 Forensic capability - non-existent 
 Awareness of offensive capabilities – 
lacking 
 Awareness of defensive capabilities – 
practically non-existent 
4 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
Introduction 
Willi, Matt, and Claudiu 
5 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
About the Speakers 
Willi Ballenthin - @williballenthin 
Reverse Engineer @ FireEye Labs Advanced Reverse Engineering (FLARE) Team 
Forensic Analyst 
Researcher 
Instructor 
6 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
About the Speakers 
Matt Graeber - @mattifestation 
Reverse Engineer @ FireEye Labs Advanced Reverse Engineering (FLARE) Team 
Speaker – Black Hat, MS Blue Hat, BSides LV and Augusta, DerbyCon 
Black Hat Trainer 
Microsoft MVP – PowerShell 
GitHub projects – PowerSploit, PowerShellArsenal, Position Independent Shellcode in C, etc. 
“Living off the Land” Proponent 
Perpetual n00b 
7 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
About the Speakers 
Claudiu “to the rescue” Teodorescu - @cteo13 
Reverse Engineer @ FireEye Labs Advanced Reverse Engineering (FLARE) Team 
Forensic researcher 
Crypto analyst 
GitHub projects – WMIParser 
Soccer player 
8 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
Outline – Session #1 
Background, Motivations, Attack Examples 
 Abridged History of WMI Malware 
 WMI Architecture 
 WMI Query Language (WQL) 
 WMI Eventing 
 Remote WMI 
 WMI Attack Lifecycle 
 Providers 
9 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
Outline – Session #2 
File Format, Investigations, Real-Time Defense, Mitigations 
 WMI Forensics 
 Managed Object Format (MOF) 
 Representation of MOF Primitives 
 Investigation Methodology - A Mock Investigation 
 WMI Attack Detection 
 WMI Attack Mitigations 
10 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
WMI Malware History 
11 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
~2010 - Stuxnet 
 Exploited MS10-061 – Windows Printer Spooler 
 Exploited an arbitrary file write vulnerability 
 WMI provided a generic means of turning a file write to SYSTEM code execution! 
 The attackers dropped a MOF file to gain SYSTEM-level execution. 
http://poppopret.blogspot.com/2011/09/playing-with-mof-files-on-windows-for.html 
12 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
2010 - Ghost 
 Utilized permanent WMI event subscriptions to: 
-
Monitor changes to “Recent” folder 
-
Compressed and uploaded all new documents 
-
Activates an ActiveX control that uses IE as a C2 channel 
http://la.trendmicro.com/media/misc/understanding-wmi-malware-research-
paper-en.pdf 
13 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
2014 – WMI Shell (Andrei Dumitrescu) 
 Uses WMI as a C2 channel 
 WMI namespaces used to store data 
http://2014.hackitoergosum.org/slides/day1_WMI_Shell_Andrei_Dumitrescu.pdf 
14 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
2015 – APT 29 
 Heavy reliance upon WMI and PowerShell 
 Custom WMI class creation 
 WMI repository used to store payloads of arbitrary size 
 Results of commands added to WMI object properties 
 Thanks to our awesome Mandiant investigators for seeking this out, 
discovering it, and remediating! 
-
Nick Carr, Matt Dunwoody, DJ Palombo, and Alec Randazzo 
 Thanks to APT 29 for allowing us to further our investigative techniques! 
15 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
WMI Basics 
Windows Management Instrumentation 
16 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
What is WMI? 
Windows Management Instrumentation 
Powerful local & remote system management infrastructure 
Present since Win98 and NT4 
Can be used to: 
-
Obtain system information 
•
Registry 
•
File system 
•
Etc. 
-
Execute commands 
-
Subscribe to events 
Useful infrastructure for admins 
∴ 
Useful infrastructure for attackers 
17 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
WMI Architecture 
 WMI implements the CIM and WBEM standards to do the following: 
- Provide an object schema to describe “managed components” 
- Provide a means to populate objects – i.e. WMI providers 
- Store persistent objects – WMI/CIM repository 
- Query objects – WQL 
- Transmit object data – DCOM and WinRM 
- Perform actions on objects – class methods, events, etc. 
18 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
WMI Architecture 
19 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
Interacting with WMI 
20 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
Utilities - PowerShell 
“Blue is the New Black” - @obscuresec 
PowerShell is 
awesome 
Need I say more? 
21 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
Utilities – wmic.exe 
Pentesters and 
attackers know about 
this 
Installed everywhere 
Gets most tasks done 
Has some limitations 
22 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
Utilities – Microsoft CIM Studio 
Free 
Very dated but still works 
Good for WMI discovery/research 
23 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
Utilities – Sapien WMI Explorer 
Commercial utility 
Great for WMI discovery/research 
Many additional features 
Huge improvement over CIM Studio 
24 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
Utilities – wbemtest.exe 
The WMI utility you never heard of 
GUI 
Very powerful 
Rarely a blacklisted application 
25 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
Utilities – winrm.exe 
Not a well known utility 
Can interface with WMI over WinRM 
Useful if PowerShell is not available 
winrm invoke Create wmicimv2/Win32_Process @{CommandLine="notepad.exe";CurrentDirectory="C:\"} 
winrm enumerate http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_Process 
winrm get http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_OperatingSystem 
26 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
Utilities 
Linux - wmic, wmis, wmis-pth (@passingthehash) 
-
http://passing-the-hash.blogspot.com/2013/04/missing-pth-tools-writeup-wmic-wmis-curl.html 
Windows Script Host Languages 
-
VBScript 
-
JScript 
IWbem* COM API 
.NET System.Management classes 
27 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
WMI Query Language (WQL) 
28 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
WMI Query Language (WQL) 
SQL-like query language used to 
-
Filter WMI object instances 
-
Register event trigger 
Three query classes: 
1. Instance Queries 
2. Event Queries 
3. Meta Queries 
29 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
WMI Query Language (WQL) – Instance Queries 
Format: 
SELECT [Class property name|*] FROM [CLASS NAME]  
Example: 
SELECT * FROM Win32_Process WHERE Name LIKE "%chrome%" 
30 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
WMI Query Language (WQL) – Event Queries 
Format: 
SELECT [Class property name|*] FROM [INTRINSIC CLASS NAME] WITHIN 
[POLLING INTERVAL]  
SELECT [Class property name|*] FROM [EXTRINSIC CLASS NAME]  
Examples: 
SELECT * FROM __InstanceCreationEvent WITHIN 15 WHERE TargetInstance 
ISA 'Win32_LogonSession' AND TargetInstance.LogonType = 2 
SELECT * FROM Win32_VolumeChangeEvent WHERE EventType = 2 
SELECT * FROM RegistryKeyChangeEvent WHERE Hive='HKEY_LOCAL_MACHINE' 
AND KeyPath='SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run'  
31 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
WMI Query Language (WQL) – Meta Queries 
Format: 
SELECT [Class property name|*] FROM [Meta_Class|SYSTEM CLASS NAME] 
Example: 
SELECT * FROM Meta_Class WHERE __Class LIKE "Win32%“ 
SELECT Name FROM __NAMESPACE 
32 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
WMI Eventing 
33 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
WMI Events 
WMI has the ability to trigger off nearly any conceivable event. 
-
Great for attackers and defenders 
Three requirements 
1.
Filter – An action to trigger off of 
2.
Consumer – An action to take upon triggering the filter 
3.
Binding – Registers a FilterConsumer 
Local events run for the lifetime of the host process. 
Permanent WMI events are persistent and run as SYSTEM. 
34 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
WMI Event Types - Intrinsic 
Intrinsic events are system classes included in every namespace 
Attacker/defender can make a creative use of these 
Must be captured at a polling interval 
Possible to miss event firings 
__ClassCreationEvent 
__InstanceOperationEvent 
__InstanceCreationEvent 
__MethodInvocationEvent 
__InstanceModificationEvent 
__InstanceDeletionEvent 
__TimerEvent 
__NamespaceOperationEvent 
__NamespaceModificationEvent 
__NamespaceDeletionEvent 
__NamespaceCreationEvent 
__ClassOperationEvent 
__ClassDeletionEvent 
__ClassModificationEvent 
35 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
WMI Event Types - Extrinsic 
Extrinsic events are non-system classes 
that fire immediately 
No chance of missing these 
Generally don’t include as much 
information 
Notable extrinsic events: 
Consider the implications… 
ROOT\CIMV2:Win32_ComputerShutdownEvent 
ROOT\CIMV2:Win32_IP4RouteTableEvent 
ROOT\CIMV2:Win32_ProcessStartTrace 
ROOT\CIMV2:Win32_ModuleLoadTrace 
ROOT\CIMV2:Win32_ThreadStartTrace 
ROOT\CIMV2:Win32_VolumeChangeEvent 
ROOT\CIMV2:Msft_WmiProvider* 
ROOT\DEFAULT:RegistryKeyChangeEvent 
ROOT\DEFAULT:RegistryValueChangeEvent 
36 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
WMI Events - Consumers 
The action taken upon firing an event 
These are the standard event consumers: 
-
LogFileEventConsumer 
-
ActiveScriptEventConsumer 
-
NTEventLogEventConsumer 
-
SMTPEventConsumer 
-
CommandLineEventConsumer 
Present in the following namespaces: 
-
ROOT\CIMV2 
-
ROOT\DEFAULT 
37 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
Permanent WMI Events 
Event subscriptions persistent across reboots 
Requirements: 
1.
Filter – An action to trigger off of 
•
Creation of an __EventFilter instance 
2.
Consumer – An action to take upon triggering the filter 
•
Creation of a derived __EventConsumer instance 
3.
Binding – Registers a FilterConsumer 
•
Creation of a __FilterToConsumerBinding instance 
38 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
WMI Events - Overview 
39 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
Remote WMI 
40 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
Remote WMI Protocols - DCOM 
DCOM connections established on port 135 
Subsequent data exchanged on port dictated by 
-
HKEY_LOCAL_MACHINE\Software\Microsoft\Rpc\Internet – Ports (REG_MULTI_SZ) 
-
configurable via DCOMCNFG.exe 
Not firewall friendly 
By default, the WMI service – Winmgmt is running and listening on port 135 
MSDN: Setting Up a Fixed Port for WMI 
MSDN: Connecting Through Windows Firewall 
41 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
Remote WMI Protocols - DCOM 
42 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
Remote WMI Protocols - WinRM/PowerShell Remoting 
SOAP protocol based on the WSMan specification 
Encrypted by default 
Single management port – 5985 (HTTP) or 5986 (HTTPS) 
The official remote management protocol in Windows 2012 R2+ 
SSH on steroids – Supports WMI and code execution, object serialization 
Scriptable configuration via WSMan “drive” in PowerShell 
43 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 
Remote WMI Protocols – WinRM/PowerShell Remoting 
44 
Copyright ©  2015, FireEye, Inc.  All rights reserved. 