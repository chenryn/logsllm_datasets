-   在主机上，使用 `virsh dumpxml`{.literal} 实用程序确认受保护虚拟机的
    XML 配置。配置必须包含 ``{.literal} 和
    ``{.literal} 元素。
    ``` literallayout
    # virsh dumpxml vm-name
    [...]
    ```
:::
::: itemizedlist
**其它资源**
-   有关修改主机的引导配置的其他说明，[请参阅配置内核命令行参数](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_monitoring_and_updating_the_kernel/configuring-kernel-command-line-parameters_managing-monitoring-and-updating-the-kernel){.link}。
-   有关 `genprotimg`{.literal} 工具的更多信息，请参阅 [IBM
    文档](https://www.ibm.com/support/knowledgecenter/linuxonibm/com.ibm.linux.z.lxse/lxse_r_cmd.html#cmd_genprotimg){.link}。
:::
:::
::: section
::: titlepage
# []{#securing-virtual-machines-in-rhel-8_configuring-and-managing-virtualization.html#attaching-cryptographic-coprocessors-to-virtual-machines-on-ibm-z_securing-virtual-machines-in-rhel-8}将加密 coprocessors 附加到 IBM Z 上的虚拟机 {.title}
:::
要在 IBM Z 主机上的虚拟机中使用硬件加密，请从加密的 coprocessor
设备创建介质设备并将其分配给预期的虚拟机。具体步骤请查看以下说明。
::: itemizedlist
**先决条件**
-   您的主机运行在 IBM Z 硬件上。
-   加密 coprocessor 与设备分配兼容。要进行确认，请确保您的共同处理器
    `的类型`{.literal} 列为 `CEX4`{.literal} 或更高版本。
    ``` literallayout
    # lszcrypt -V
    CARD.DOMAIN TYPE  MODE        STATUS  REQUESTS  PENDING HWTYPE QDEPTH FUNCTIONS  DRIVER
    --------------------------------------------------------------------------------------------
    05         CEX5C CCA-Coproc  online         1        0     11     08 S--D--N--  cex4card
    05.0004    CEX5C CCA-Coproc  online         1        0     11     08 S--D--N--  cex4queue
    05.00ab    CEX5C CCA-Coproc  online         1        0     11     08 S--D--N--  cex4queue
    ```
-   已安装 [*mdevctl*]{.emphasis} 软件包。
-   加载 `vfio_ap`{.literal} 内核模块。要验证，请使用：
    ``` literallayout
    # lsmod | grep vfio_ap
    vfio_ap         24576  0
    [...]
    ```
    要载入模块，请使用：
    ``` literallayout
    # modprobe vfio_ap
    ```
:::
::: orderedlist
**流程**
1.  在主机上，将您的加密设备重新分配给 `vfio-ap`{.literal}
    驱动程序。以下示例将两个带有位掩码 ID 的加密设备
    `（0x05、0x0004 ）和(`{.literal} 0x05, 0x00ab)``{=html}
    分配给 `vfio-ap`{.literal}。
    ``` literallayout
    #  echo -0x05 > /sys/bus/ap/apmask
    #  echo -0x0004, -0x00ab > /sys/bus/ap/aqmask
    ```
    有关识别位掩码 ID 值的详情，请参考 IBM 的 KVM Virtual Server
    Management 文档中的
    [为加密适配器资源准备直通设备](http://public.dhe.ibm.com/software/dw/linux390/docu/l19bva05.pdf){.link}。
2.  验证是否正确分配了加密设备。
    ``` literallayout
    # lszcrypt -V
    CARD.DOMAIN TYPE  MODE        STATUS  REQUESTS  PENDING HWTYPE QDEPTH FUNCTIONS  DRIVER
    --------------------------------------------------------------------------------------------
    05          CEX5C CCA-Coproc  -              1        0     11     08 S--D--N--  cex4card
    05.0004     CEX5C CCA-Coproc  -              1        0     11     08 S--D--N--  vfio_ap
    05.00ab     CEX5C CCA-Coproc  -              1        0     11     08 S--D--N--  vfio_ap
    ```
    如果域队列的 DRIVER 值更改为 `vfio_ap`{.literal}，则重新分配成功。
3.  生成设备 UUID。
    ``` literallayout
    # uuidgen
    669d9b23-fe1b-4ecb-be08-a2fabca99b71
    ```
    在此过程中，将 `669d9b23-fe1b-4ecb-be08-a2fabca99b71`{.literal}
    替换为您生成的 UUID。
4.  使用 UUID，创建一个新的 `vfio_ap`{.literal} 设备。
    以下示例演示了创建永久介质设备并为它分配队列。例如，以下命令可将域适配器
    `0x05`{.literal} 和域队列 `0x0004`{.literal} 和 `0x00ab`{.literal}
    分配到设备 `669d9b23-fe1b-4ecb-be08-a2fabca99b71`{.literal}。
    ``` literallayout
    # mdevctl define --uuid 669d9b23-fe1b-4ecb-be08-a2fabca99b71 --parent matrix --type vfio_ap-passthrough
    # mdevctl modify --uuid 669d9b23-fe1b-4ecb-be08-a2fabca99b71 --addattr=assign_adapter --value=0x05
    # mdevctl modify --uuid 669d9b23-fe1b-4ecb-be08-a2fabca99b71 --addattr=assign_domain --value=0x0004
    # mdevctl modify --uuid 669d9b23-fe1b-4ecb-be08-a2fabca99b71 --addattr=assign_domain --value=0x00ab
    ```
5.  启动 mediated 设备。
    ``` literallayout
    # mdevctl start --uuid 669d9b23-fe1b-4ecb-be08-a2fabca99b71
    ```
6.  检查配置是否已正确应用
    ``` literallayout
    # cat /sys/devices/vfio_ap/matrix/mdev_supported_types/vfio_ap-passthrough/devices/669d9b23-fe1b-4ecb-be08-a2fabca99b71/matrix
    05.0004
    05.00ab
    ```
    如果输出中包含您之前分配给 `vfio-ap`{.literal}
    的队列的数字值，则该进程会成功。
7.  使用 `virsh edit`{.literal} 命令打开您要使用加密设备的虚拟机的 XML
    配置。
    ``` literallayout
    # virsh edit vm-name
    ```
8.  将以下行添加到 XML 配置中的
    ` 部分中`{.literal}，并将它保存。
    ``` programlisting
    ```
    请注意，每个 UUID 每次只能分配给一个虚拟机。
:::
::: orderedlist
**验证**
1.  启动您为其分配该介质设备的虚拟机。
2.  客户端操作系统引导后，请确定它检测到分配的加密设备。
    ``` literallayout
    # lszcrypt -V
    CARD.DOMAIN TYPE  MODE        STATUS  REQUESTS  PENDING HWTYPE QDEPTH FUNCTIONS  DRIVER
    --------------------------------------------------------------------------------------------
    05          CEX5C CCA-Coproc  online         1        0     11     08 S--D--N--  cex4card
    05.0004     CEX5C CCA-Coproc  online         1        0     11     08 S--D--N--  cex4queue
    05.00ab     CEX5C CCA-Coproc  online         1        0     11     08 S--D--N--  cex4queue
    ```
    客户机操作系统中的这个命令的输出，与在有相同加密的 coprocessor
    设备的主机逻辑分区中是一致的。
:::
:::
::: section
::: titlepage
# []{#securing-virtual-machines-in-rhel-8_configuring-and-managing-virtualization.html#enabling-standard-harware-security-on-windows-virtual-machines_securing-virtual-machines-in-rhel-8}在 Windows 虚拟机中启用标准硬件安全性 {.title}
:::
要保护 Windows 虚拟机，您可以使用 Windows
设备的标准硬件功能启用基本级别的安全性。
::: itemizedlist
**先决条件**
-   请确定您安装了最新的 WHQL 认证的 VirtIO 驱动程序。
-   确保虚拟机固件支持 UEFI 引导。
-   在您的主机计算机上安装 `edk2-OVMF`{.literal} 软件包。
    ``` literallayout
    # yum install edk2-ovmf
    ```
-   在您的主机机器上安装 `vTPM`{.literal} 软件包。
    ``` literallayout
    # yum install swtpm libtpms
    ```
-   确保虚拟机使用 Q35 机器架构。
-   请确定您有 Windows 安装介质。
:::
::: orderedlist
**流程**
1.  通过在虚拟机 XML 配置的 ``{.literal}
    部分中添加以下参数来启用 TPM 2.0。
    ``` programlisting
    [...]
    [...]
    ```
2.  在 UEFI 模式中安装 Windows。有关如何操作的更多信息，请参阅[创建
    SecureBoot
    虚拟机](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_virtualization/index#creating-a-secureboot-virtual-machine_securing-virtual-machines-in-rhel-8){.link}。
3.  在 Windows 虚拟机上安装 VirtIO
    驱动程序。有关如何进行此操作的更多信息，请参阅在 [Windows guest
    上安装 virtio
    驱动程序](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_virtualization/index#installing-kvm-drivers-on-a-windows-guest_installing-kvm-paravirtualized-drivers-for-rhel-virtual-machines){.link}。
4.  在 UEFI 中，启用安全引导。有关如何进行此操作的更多信息，请参阅
    [安全引导](https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/secure-boot-landing){.link}。
:::
::: itemizedlist
**验证**
-   确定 Windows 机器中的[**设备安全性**]{.strong}页面显示以下信息：
    [**settings \> Update & Security \> Windows Security \> device
    Security**]{.strong}
    ``` literallayout
    Your device meets the requirements for standard hardware security.
    ```
:::
:::
::: section
::: titlepage
# []{#securing-virtual-machines-in-rhel-8_configuring-and-managing-virtualization.html#proc_enabling-enhanced-hardware-security-on-windows-virtual-machines_securing-virtual-machines-in-rhel-8}在 Windows 虚拟机上启用增强的硬件安全性 {.title}
:::
为进一步保护 Windows
虚拟机(VM)，您可以启用基于虚拟化的代码完整性保护，也称为
Hypervisor-Protected Code Integrity(HVCI)。
::: itemizedlist
**先决条件**
-   确保启用了标准硬件安全性。如需更多信息，请参阅在 [Windows
    虚拟机上启用标准硬件安全性](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_virtualization/index#enabling-standard-harware-security-on-windows-virtual-machines_securing-virtual-machines-in-rhel-8){.link}。
-   确保已启用 KVM 嵌套。如需更多信息，请参阅
    [创建嵌套虚拟机](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_virtualization/index#creating-nested-virtual-machines_configuring-and-managing-virtualization){.link}。
-   KVM 命令行中，
    ::: itemizedlist
    -   指定 CPU 型号。
    -   启用虚拟机扩展(VMX)功能。
    -   启用 Hyper-V 亮点.
        ``` literallayout
        # -cpu Skylake-Client-v3,hv_stimer,hv_synic,hv_relaxed,hv_reenlightenment,hv_spinlocks=0xfff,hv_vpindex,hv_vapic,hv_time,hv_frequencies,hv_runtime,+kvm_pv_unhalt,+vmx
        ```
    :::
:::
::: orderedlist
**流程**
1.  在 Windows 虚拟机上，进入 [**Core 隔离详情**]{.strong} 页面：
    [**settings \> Update & Security \> Windows Security \> Device
    Security \> Core isolated details**]{.strong}
2.  将 参数切换为启用 [**内存完整性**]{.strong}。
3.  重启虚拟机。
:::