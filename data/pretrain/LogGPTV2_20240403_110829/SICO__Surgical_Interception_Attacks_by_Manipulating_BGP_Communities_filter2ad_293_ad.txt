5.3 Quantifying announcement propagation
through spread
To quantify how much of the Internet is affected by malicious
announcements with different interception techniques, we measure
their spread which represents the percentage of Internet hosts
that use a given route. Spread loss measures the amount of spread
that is given up (relative to the theoretical maximum spread for
an Interception attack) when a particular interception technique
is implemented.
Spread measurement methodology. We operated two servers,
one to pose as the victim and one to pose as the adversary. We
first made an unmodified BGP announcement from the victim’s
server, and then launched a given BGP interception attack (AS-path
poisoning, selective neighbor announcement, or SICO) from the
adversary’s server. Given a set of active hosts (IP addresses), we
sent a probe to each host from the victim’s server, and measured
the attack spread (Satk), which is defined as the fraction of hosts
that had their responses routed to the adversary. See Figure 8 for an
example. As a baseline, we also measured the attack spread when
the adversary simply announces the victim’s prefix to one provider
(without communities or AS-path poisoning), and call such spread
baseline spread (Sbase). One may not be able to use this type of
announcement to achieve interception, but we can use it to measure
the maximum spread achievable by an interception attack. Then, we
use spread loss, Sloss, to measure the efficiency of an attack, where
Sloss = (Sbase − Satk)/Sbase
Figure 8: Hosts that are in the intercepted portion of the
Internet will send responses to the adversary while hosts
in the portion of the Internet unaffected by the adversary’s
attack will send responses directly to the victim.
An attack with a lower spread loss can intercept more traffic and is
considered to be more effective.
We are particularly interested in the active hosts that are running
ICMP and HTTPS. ICMP is a very widely used protocol and is often
enabled on end hosts and home routers, which can be used as a
rough estimation of the distribution of end hosts. Studying the
effect of interception on HTTPS hosts is important as interception
attacks against HTTPS sites could cause devastating results [47].
For each protocol, we constructed a random sample of 1,000 hosts
that supported that protocol. These hosts served as the target hosts
for our measurements. For ICMP ping hosts we used an ICMP ping
request as the probe and for HTTPS hosts we used a TCP SYN to
port 443.
For HTTPS, we queried a list of 15,000 random hosts from the
Censys Internet-wide scans [54] (using ORDER BY RANDOM() in
Google Big Query SQL) that had port 443 open and were serving
browser-trusted certificates. We then filtered this sample by record-
ing only the hosts that actively responded to our own TCP SYN
packets sent to port 443. Finally we limited the sample size to 1,000
as to not overwhelm the PEERING testbed. To validate that our
filtering did not tamper with randomness of the sample from the
Censys database, we performed a chai-squared analysis presented
in Appendix §E.
For ICMP ping we started with a list of 15,000 collected with no
selection criteria (since the Censys data definition did not include
ping connectivity) using ORDER BY RANDOM() in Google Big
Query SQL and then filtered this sample by recording which hosts
actively responded to our pings. Finally, we limited the sample to
1,000 hosts. We did not perform a chai-squared analysis for reasons
discussed in Appendix §E.
Measuring the spread loss of SICO. We measured the spread
loss of SICO and found that SICO only reduces average spread
(i.e., SYN and Ping spread averaged) by 0.1% (Satk = 68.8%, Sbase =
68.9%) when implemented at the Amsterdam mux and 11.4% (Satk
= 38.9%, Sbase = 43.9%) when implemented in Seattle.
Victim Server VPNMux in Northeastern University PEERING 47065RGNet 3130InternetAdversarial ServerMux in Seattle IXColoclue 8283NEU 156VPNMux in Amsterdam IXVPNNortheastern Upstream Router        PEERING 47065PEERING 47065InternetHost at 3.3.3.3Host at 1.1.1.1Host at 2.2.2.2Unaﬀected portionIntercepted portionICMP Ping requestICMP Ping response1 / 3 hosts aﬀected by attack: 33% spreadVictimAdversaryForward repsonseSession 2E: Internet SecurityCCS ’19, November 11–15, 2019, London, United Kingdom440Setting
Amsterdam SYN
Amsterdam Ping
Amsterdam Avg.
Seattle SYN
Seattle Ping
Seattle Avg.
SICO Poisoning
1 AS
0% 22%
0% 25%
0% 24%
9% 70%
14% 73%
11% 72%
Poisoning
2 ASes
82%
79%
81%
99%
98%
99%
Poisoning
3 ASes
85%
83%
84%
100%
100%
100%
Table 6: Spread losses under different settings (rounded to
the nearest percent). Evaluated with Coloclue at Amsterdam
and RGnet at Seattle as upstreams (“Avg” is SYN and Ping
spread losses averaged).
5.4 Comparison with state-of-the-art
We compared SICO to selective neighbor announcement and AS-
path poisoning. We found that selective neighbor announcement
was incapable of launching interception attacks and AS-path poi-
soning causing a greatly increased spread loss when compared
to SICO.
Comparison with selective neighbor announcement. When
launching interception attacks against Northeastern University
from both Amsterdam and Seattle, selective neighbor announcement
was NOT viable because, whichever upstream the adversary an-
nounced to, the adversary’s announcement prevented the other
provider from having a route to the victim.
Comparison with AS-path poisoning. We experimented with
AS-path poisoning by prepending the ASNs of the adversary’s (one
to three) upstream ASes that were used for forwarding intercepted
traffic in the adversary’s announcement. We reused the setups
from the feasibility measurements (Figure 4 and Figure 7). In both
setups, AS-path poisoning prevented the adversary’s upstream from
importing the adversary’s announcement and gave the adversary a
route to the victim. However, due to the longer AS path, AS-path
poisoning also caused a significant reduction in the spread of the
adversary’s announcement, reducing the amount of Internet traffic
the adversary could collect.
In Table 6 we show the spread losses of SICO and AS-path
poisoning under different settings. SICO outperformed AS-path
poisoning by a factor of over 100x at Amsterdam and over 6x
at Seattle. Specifically, SICO only reduces average spread by 0.1%
when implemented at the Amsterdam mux and 11.4% when im-
plemented in Seattle. In the optimum case for AS path poisoning
(i.e., prepending only a single ASN), the spreads were reduced by
23.7% (Satk = 52.6%, Sbase = 68.9%) and 71.8% (Satk = 12.4%, Sbase
= 43.9%) on average at Amsterdam and Seattle, respectively. Even in
this optimum case, SICO has a 16.2 greater absolute spread than AS-
path poisoning at Amsterdam and a 26.5 greater absolute spread at
Seattle. Considering the poisoning of additional ASNs (which may
be necessary in certain topologies), the spread losses became much
higher (even near 100%), and SICO outperforms AS-path poisoning
by an absolute spread of 57.8% at Amsterdam and 38.8% at Seattle.
The dramatic decrease in propagation caused by poisoning more
than one AS is likely due to prefix filtering practices at major
providers, which filter announcements coming from a customer
containing the ASN of a peer [79]. 8 In both cases we studied, poison-
ing two or more ASes required poisoning the ASNs of major transit
providers that triggered prefix filtering at other transit providers
(which would otherwise carry our route). The dilemma of AS-path
poisoning triggering prefix filters is inherent to the technique and
is a major drawback of AS-path poisoning. While in our setup this
problem was only encountered when poisoning two or more ASes,
if an adversary has a large provider (e.g., a tier-1 provider) that it
wants to use to forward traffic, even poisoning the single ASN of
its immediate provider could trigger prefix filtering and make AS-
path poisoning not viable. This highlights one of the fundamental
benefits of community-based interception over previous techniques:
SICO leaves the AS-path unchanged, which bypasses AS-path-based
filtering and other AS-path related detection techniques.
5.5 Viable AS estimation
To launch a SICO attack, an AS must meet two conditions:
(1) It is multi-homed so it has a provider to forward traffic and a
provider to receive traffic (a requirement of all announcement-
shaping based interception attacks).
(2) It can use communities to influence the behavior of one of its
direct providers or indirect providers (a provider’s provider).
SICO viability without considering community forwarding.
Based on the CAIDA March 2019 topology [12], 59% of all ASes are
multi-homed and thus satisfy condition 1, making them potentially
capable of interception. However, the second condition pertaining
to community support is more difficult to measure directly since
there is no centralized database of AS community support. To
overcome this we do not attempt to model community support
across the entire AS graph. Instead, we only model community
support by ASes that we know support the relevant communities
via manual inspection of their routing policy (i.e., ASes that have a
Yes in all three columns of Table 10). As a conservative metric, we
counted an AS as being capable of launching SICO attacks only it
was multi-homed and had a direct provider (listed in the CAIDA
topology) supporting the required communities. 24% of ASes (or
41% of multi-homed ASes) satisfied this condition giving us a lower
bound of 24% on attack viability.
SICO viability considering community forwarding. However,
directly having a provider that supports communities is not the
only way to achieve community controls. Many providers forward
communities on and may have providers above them that support
communities. To model this, we collected three months of Route
Views project (from May 2019 – July 2019) data [44] and referred
to this dataset as RV dataset. We extracted 176 million BGP updates
that contain communities from the RV dataset, and recorded ASes
that were seen forwarding communities in a manner similar to
Streibelt et al. [81]. Specifically, if we observed the AS path:
AS1, AS2, AS3, AS4
8To confirm this, we repeated the longer AS-path poisoning experiments, but instead
of using the first two and three ASNs in the path, we simply poisoned the adversary’s
immediate upstream two and three times. With these announcements we noticed
significantly larger spread which indicates that the specific ASNs that were poisoned
caused our announcements to be filtered and were responsible for the reduction in
spread (as opposed to only the path length).
Session 2E: Internet SecurityCCS ’19, November 11–15, 2019, London, United Kingdom441with the community AS 4:101, where AS 4 is the prefix’s origin,
we can assume this community was attached by AS 4.9 Then
we can record AS 2 and AS 3 as forwarding communities. We
do not consider this evidence that AS 1 forwards communities
because AS 1 is the Route Views peer. Route Views peers may
use a different configuration for their peering session with the
Route Views collector than for their other BGP sessions. Overall
we recorded 3.5 K ASes as forwarding communities.
With this information, we counted how many ASes had either
a provider that supported communities or a chain of providers
(all of which forwarded communities) that eventually lead to a
provider that supported communities. While this implies that an
adversary can propagate communities to an AS that will support
them, it is worth noting that sometimes, to launch a SICO attack,
community controls are needed at a lower-tier provider to suppress
route propagation over peering links lower in the Internet hierarchy.
Thus, sometimes routing decisions must be influenced at providers
that only forward communities. The most common case of this is
when an AS has a provider that forwards communities but also
peers with all of its other providers. Here, even if the adversary
uses community controls to influence routing at higher-up ASes,
the adversary cannot suppress route propagation over the relevant
peering links between its providers. To exclude this case, we did
not count an AS as begin capable of launching SICO attacks if
its providers that forwarded communities peered with all of its
other providers.
Using this analysis technique, we estimate that SICO is viable to
48% of ASes (or 83% of multi-homed ASes).
5.6 Targeted interception attacks
To measure the effectiveness of targeted interception attacks, we
used the PEERING mux in Amsterdam as an adversary and the
PEERING mux at Northeastern University as a victim. We then
generated a list of sample targets to study. We chose the top 9
Tor nodes by bandwidth in the February 15, 2019 Tor consensus
(the official document containing all Tor nodes bandwidths) as
sample targets. Traffic from these nodes to top websites would
hypothetically be the target of a BGP attack to deanonymize Tor
users, as shown by Sun et al. [83].
For each node we engineered a targeted BGP attack (against a
victim prefix we controlled) that affected as little of the Internet
as possible while still including the IP address of the target node.
We then confirmed that the node was affected by our attack by
sending a TCP SYN packet to a known open port listed in the Tor
consensus, and listening for the responding SYN+ACK packet. Once
we confirmed our attack affected the node we were targeting, we
took a spread measurement to observe the fraction of other Internet
hosts that were affected by the attack.
Of the 9 nodes we studied, 1 node routed traffic to the victim
even when the adversary launched a BGP attack with the maximum
possible spread. Given the Internet topology, the maximum spread
of the adversary was 73%, so it was not unexpected that of the 9
nodes some of them would be beyond the adversary’s reach. On
the remaining 8 nodes, the average attack spread was only 2.7%
9There is no reason for another AS in this path to attach this community because this
update will never pass through AS 4 again.
Tor node IP
Tor node
ASN
28753
46.165.245.154
16276
94.23.150.81
206264
31.220.0.225
12876
62.210.177.181
62744
199.249.230.72
178.32.181.96
16276
195.206.105.217 9009
24940
176.9.44.232
Average
NA
Table 7: Results of BGP attacks targeting Tor nodes.
Spread
SYN
5.3
1.6
0.1
0.3
2.0
1.6
8.8
0.7
2.6
Spread
Ping
5.6
2.1
0.2
0.6
4.6
2.1
7.1
0.8
2.9
Spread
Avg.
5.5
1.8
0.2
0.5
3.3