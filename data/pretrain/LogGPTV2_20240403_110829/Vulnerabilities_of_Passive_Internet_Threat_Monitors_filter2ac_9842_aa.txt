title:Vulnerabilities of Passive Internet Threat Monitors
author:Yoichi Shinoda and
Ko Ikai and
Motomu Itoh
Vulnerabilities of Passive Internet Threat Monitors
Yoichi Shinoda
Information Science Center
Japan Advanced Institute of Science and Technology
1-1 Asahidai, Nomi, Ishikawa 923-1219 Japan
PI:EMAIL
Ko Ikai
National Police Agency, Japan
http://www.cyberpolice.go.jp/english/
Japan Computer Emergency Response Team Coordination Center (JPCERT/CC)
Motomu Itoh
http://www.jpcert.or.jp/english/
Abstract
Passive Internet monitoring is a powerful tool for mea-
suring and characterizing interesting network activity
like worms or distributed denial of service attacks. By
employing statistical analysis on the captured network
trafﬁc, Internet threat monitors gain valuable insight into
the nature of Internet threats. In the past, these monitors
have been successfully used not only to detect DoS at-
tacks or worm outbreaks but also to monitor worm prop-
agation trends and other malicious activities on the Inter-
net. Today, passive Internet threat monitors are widely
recognized as an important technology for detecting and
understanding anomalies on the Internet in a macro-
scopic way.
Unfortunately, monitors that publish their results on
the Internet provide a feedback loop that can be used
by adversaries to deduce a monitor’s sensor locations.
Knowledge of a monitor’s sensor location can severely
reduce its functionality as the captured data may have
been tampered with and can no longer be trusted. This
paper describes algorithms for detecting which address
spaces an Internet threat monitor listens to and presents
empirical evidences that they are successful in locating
the sensor positions of monitors deployed on the Inter-
net. We also present solutions to make passive Internet
threat monitors "harder to detect".
1 Introduction
Back in the good old days, observing trafﬁc at addresses
that never generated packets themselves was rare and
was assumed to be solely due to poorly engineered soft-
ware or misconﬁguration. Nowadays, hosts connected
to the Internet constantly receive probe or attack pack-
ets, whether they are silent or not. It is an unfortunate
fact that most of these packets are generated and sent by
entities with malicious intentions in mind.
Observing these packets from a single vantage point
provides only limited information on the cause behind
these background activities, if any at all. Capturing
packets from multiple monitoring points and interpret-
ing them collectively provides a more comprehensive
view of nefarious network activity. The idea of mon-
itoring background trafﬁc dates back to CAIDA’s net-
work telescope in 2000 [1]. CAIDA uses a huge, routed,
but very sparsely populated address block. Another ap-
proach has been taken by DShield [2] which is a dis-
tributed and collaborative system that collects ﬁrewall
logs from participating system administrators.
Both CAIDA and DShield were successfully used not
only to infer DoS attacks on remote hosts [3], but also
to monitor the activity of existing malware [4], and to
detect outbreaks of new malware. The success of these
systems has resulted in the deployment of many similar
monitoring facilities around the World. Some of these
new monitor deployments feature a large contiguous ad-
dress space like CAIDA’s telescope and others are simi-
lar to DShield’s architecture in the sense that they listen
on addresses widely distributed over the Internet. In this
paper, we will collectively refer to these systems as pas-
sive Internet threat monitors. Today, Internet threat mon-
itors are considered as the primary method to observe
and understand Internet background trafﬁc in a macro-
scopic fashion.
However, we have noticed that most passive threat
monitors that periodically publish monitor results are
vulnerable to active attacks aimed at detecting the ad-
dresses of listening devices, or sensors.
In our study,
we successfully identiﬁed the sensor locations for sev-
USENIX Association
14th USENIX Security Symposium
209
eral monitors in a surprisingly short time when certain
conditions are met. For some monitors, we were able to
locate majority of deployed sensors.
The operation of Internet threat monitors relies on
a single fundamental assumption that sensors are ob-
serving only non-biased background trafﬁc.
If sensor
addresses were known to adversaries then the sensors
may be selectively fed with arbitrary packets, leading to
tainted monitor results that can invalidate any analysis
based on them. Similarly, sensors may be evaded, in
which case sensors are again, effectively fed with bi-
ased inputs. Furthermore, volunteers who participate
in deploying their own sensors face the danger of be-
coming DoS victims which might lower their motivation
to contribute to the monitoring effort. Because passive
threat monitors are an important mechanism for getting
a macroscopic picture background activities on the In-
ternet, we must recognize and study the vulnerability of
these monitors to protect them.
The rest of the paper is organized as follows. In Sec-
tion 2, we provide a brief introduction to passive threat
monitors, followed by a simple example of an actual
detection session in Section 3.
In section 4, vulnera-
bilities of passive threat monitors are closely examined
by designing detection algorithms. We discuss proper-
ties of feedback loops provided by threat monitors, de-
velop detection algorithms that exploit these properties,
and determine other important parameters that collec-
tively characterize detection activities. Finally, in Sec-
tion 6, we show how to protect passive threat monitors
from these threats. While some ideas and thoughts pre-
sented are immediately applicable but their effectiveness
is somewhat limited, others are intended for open dis-
cussion among researchers interested in protecting threat
monitors against detection activities.
Although we focus on sensor detectability of dis-
tributed threat monitors, it is straightforward to extend
our discussion to large telescope-type monitors also.
2 Passive Internet Threat Monitors
2.1 Threat Monitor Internals
Figure 1 shows a typical passive Internet threat monitor.
It has an array of sensors listening to packets arriving at
a set of IP addresses, capturing all trafﬁc sent to these
addresses. Logs of capture events are sent to capture
report processor where these events are gathered, stored,
processed and published as background activity monitor
reports. Some sensors monitor network trafﬁc for large
address spaces, while others capture only packets sent to
their own addresses.
A passive sensor often functions like a ﬁrewall that
is conﬁgured to record and drop all packets. The sen-
sor may also be equipped with an IDS of some kind
to explicitly capture known attacks. A sensor may be
a dedicated “silent” device that never generates packets
by itself, or it may have users behind it in which case its
ﬁrewall must be conﬁgured to pass legitimate packets in
both directions.
Background Activities
Illegitimate
Packets
Sensor
Array
IDS
FW
User(s)
s
g
o
L
W
F
&
S
D
I
Sensor
Data
Capture
Report
Processor
Activity
Reports
Figure 1: Structure of a Typical Internet Threat Monitor
2.2 Characterizing Threat Monitors
To properly characterize passive threat monitors, we
need to look at their two main aspects: the properties of
their sensors and the reports they provide. In the follow-
ing, we provide a brief discussion of both so that readers
get a better understanding of the basic principles behind
Internet threat monitors.
2.2.1 Properties of Sensors
Sensor Aperture A Sensor may monitor a single ad-
dress, or multiple addresses simultaneously. We
call the size of the address space a sensor is lis-
tening to its aperture. Examples of sensors with
extremely large aperture are systems monitoring
routed but empty or sparsely populated address
space, such as the CAIDA’s telescope [1] and
the IUCC/IDC Internet Telescope [5]. CAIDA’s
telescope is claimed to monitor a /8 space, and
IUCC/IDC Internet Telescope is claimed to mon-
itor a /16 space.
Sensor Disposition Some systems use multiple sen-
sors that are distributed across the Internet ad-
dress space, while others just use a single sen-
sor. Extreme examples of a highly distributed sen-
sor are DShield [2] and the Internet Storm Center
[4]. They explain their system as monitoring over
500,000 addresses spanning over 50 different coun-
tries around the World [6].
210
14th USENIX Security Symposium
USENIX Association
Sensor Mobility Sensors may be listening to ﬁxed ad-
dresses or dynamically assigned addresses, de-
pending on how they are deployed. Large, tele-
scope type sensors with extremely large aperture
such as /8 are likely to be listening on ﬁxed ad-
dresses, while small aperture sensors, especially
those hooked up to DSL providers are very likely
to be listening to dynamically changing addresses.
Sensor Intelligence Some systems deploy ﬁrewall type
sensors that capture questionable packets without
deep inspection, while others deploy intrusion de-
tection systems that are capable of classifying what
kind of attacks are being made based on deep in-
spection of captured packets.
There are some sensors that respond to certain
network packets making them not quite “passive”
to capture payloads that all-drop ﬁrewall type sen-
sors cannot. [7, 8].
Sensor Data Authenticity Some systems use sensors
prepared, deployed and operated by institutions,
while others rely on volunteer reports from the gen-
eral public.
We see no fundamental difference between tradi-
tional, so called “telescope” threat monitors and “dis-
tributed sensor” threat monitors as they all listen to back-
ground trafﬁc. In this paper, we focus on detecting sen-
sors of distributed threat monitors, but it is straightfor-
ward to extend our discussion to large telescope moni-
tors.
2.2.2 Report Types
All reports are generated from a complete database of
captured events, but exhibit different properties based
on their presentation. There are essentially two types of
presentation styles: the data can be displayed as “graph”
or in “table” format.
Port Table Table type reports tend to provide accurate
information about events captured over a range of
ports. Figure 2 shows the ﬁrst few lines from a hy-
pothetical report table that gives packet counts for
observed port/protocol pairs.
Time-Series Graph The graph type reports result
from visualizing an internal database, and tend to
provide less information because they summarize
% cat port-report-table-sample
# port
8
135
445
137
139
count
394
11837
11172
582
576
proto
ICMP
TCP
TCP
UDP
TCP
.
.
.
Figure 2: An Example of Table Type Report




events. The graphs we will be focusing on are the
ones that have depict explicit time-series, that is,
the graph represents changes in numbers of events
captured over time. Table type reports also have
time-series property if they are provided periodi-
cally, but graphs tend to be updated more frequently
than tables.
Figure 3 shows an hypothetical time-series graph
report. It contains a time-series of the packets re-
ceived per hour for three ports, during a week long
period starting January 12th.
We examine other report properties in detail in
Section 4.2.
135/tcp
445/tcp
137/udp
t
n
u
o
C
t
e
k
c
a
P
350
300
250
200
150
100
50
0
01/12 01/13 01/14 01/15 01/16 01/17 01/18 01/19
Date
Figure 3: An Example of Time Series Graph Feedback,
showing only three most captured events.
2.3 Existing Threat Monitors
In addition to threat monitors already mentioned, there
are many similar monitors deployed around the World.
For example, SWITCH [9] operate telescope type mon-
itors.
Examples of distributed sensor monitors are the mon-
itor run by the National Police Agency of Japan [10],
ISDAS (Internet Scan Data Acquisition System) run by
JPCERT/CC [11] and WCLSCAN [12] which is unique
in that it uses sophisticated statistical algorithms to esti-
mate background activity trends. The IPA (Information-
Technology Promotion Agency, Japan) is also known to
operate two versions of undocumented threat monitor
called TALOT (Trends, Access, Logging, Observation,
Tool) and TALOT2.
University of Michigan is operating the Internet Mo-
tion Sensor, with multiple differently sized wide aper-
ture sensors
[13, 14]. Telecom-ISAC Japan is also
known to operate an undocumented and unnamed threat
monitor that also combines several different sensor
placement strategies. PlanetLab[15] has also announced
USENIX Association
14th USENIX Security Symposium
211
a plan to build their own monitor based on distributed
wide aperture sensors.
Building and deploying a threat monitor is not a cum-
bersome task for anyone with some unoccupied address
space in hand. For example, the Team Cymru Dark-
net Project provides a detailed step by step guideline for
building a monitor [16].
3 The Problem
3.1 A Simple Example
To demonstrate that our concerns are realistic, we show
that we can identify the addresses of real network moni-
tor sensors. Let us consider one example; we omit some
details about the discovered monitors to not compromise
their integrity. The monitor we were investigating pro-
vides a graph of the top ﬁve packet types that gets up-
dated once an hour. Without any prior knowledge, prop-
erties of this monitor were studied using publicly avail-
able materials such as symposium proceedings, work-
shop handouts and web sites. It became clear that there
is a high likelihood that at least one of its sensors was
located in one of four small address blocks.
We examined the graph to determine if we could ﬁnd
a way to make obvious changes to it by sending appro-
priately typed packets to the suspected addresses ranges.
The graph showed the top 5 packet types with a granu-
larity of only one week, so introducing a new entry into
the graph would require a substantial number of pack-
ets. It was something that we didn’t want to do. Instead,
the existing entries were examined, and one of the UDP
ports was chosen as a target, because of its constant low-
proﬁle curve. So, we sent a batch of empty UDP packets
using the previously chosen port number to each address
in the candidate blocks, covering one block every hour.
Four hours later, we examined the report graph from
this monitor on the web, part of which is shown in
Figure 4, and found a spike of the expected height in
the curve; labeled “Successful Detection.” Because we
knew the time at which we sent packets to each address
block, it was obvious which of the four blocks contained
the sensor. For veriﬁcation purposes, the same proce-
dure was repeated on the suspect block next day, and
produced another spike in the feedback graph, labeled
“Block is Veriﬁed” in the Figure.
3.2 The Impact
In this paper, we are investigating vulnerabilities of
threat monitors that break either implicit or explicit as-
sumptions that are fundamental to a monitors’ function-
ality. The biggest assumption that all monitors rely on is
that they are observing non-biased background trafﬁc.
However, as shown in the simple example presented
in the previous section, sensor address detection is not
Successful
Detection