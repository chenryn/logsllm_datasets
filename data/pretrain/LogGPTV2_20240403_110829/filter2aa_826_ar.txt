25. +http://192.168.1.102/Manage//images/(CODE:403|SIZE:218)
26. +http://192.168.1.102/Manage//sys/(CODE:403|SIZE:218)
27. +http://192.168.1.102/Manage//images(CODE:301|SIZE:158)
28.
29. (!)FATAL:Toomanyerrorsconnectingtohost
30. (Possiblecause:EMPTYREPLYFROMSERVER)
31.
32. ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐
33. END_TIME:SunFeb1723:53:102019
34. DOWNLOADED:673‐FOUND:6
1. root@John:~/wordlist/small#dirbhttp://192.168.1.102/Manage./DIR.txt
2. ‐a"Mozilla/5.0(compatible;Googlebot/2.1;+http://www.google.com/bot.ht
3. ml)"‐c"ASP.NET_SessionId=jennqviqmc2vws55o4ggwu45"‐z100
4.
5. ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐
6. DIRBv2.22
7. ByTheDarkRaver
8. ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐
9.
10. START_TIME:SunFeb1723:54:292019
11. URL_BASE:http://192.168.1.102/Manage/
12. WORDLIST_FILES:./DIR.txt
13. USER_AGENT:Mozilla/5.0(compatible;Googlebot/2.1;+http://www.googl
14. e.com/bot.html)
15. COOKIE:ASP.NET_SessionId=jennqviqmc2vws55o4ggwu45
16. SPEED_DELAY:100milliseconds
17.
18. ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐
19.
20. GENERATEDWORDS:1153
21.
自定义毫秒延迟：
第二十九课：发现目标WEB程序敏感目录第一季
-222-
本文档使用书栈(BookStack.CN)构建
22. ‐‐‐‐ScanningURL:http://192.168.1.102/Manage/‐‐‐‐
23. +http://192.168.1.102/Manage//include/(CODE:403|SIZE:218)
24. +http://192.168.1.102/Manage//news/(CODE:403|SIZE:218)
25. +http://192.168.1.102/Manage//include(CODE:301|SIZE:159)
26. +http://192.168.1.102/Manage//images/(CODE:403|SIZE:218)
27. +http://192.168.1.102/Manage//sys/(CODE:403|SIZE:218)
28. +http://192.168.1.102/Manage//images(CODE:301|SIZE:158)
29.
30. (!)FATAL:Toomanyerrorsconnectingtohost
31. (Possiblecause:EMPTYREPLYFROMSERVER)
32.
33. ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐
34. END_TIME:SunFeb1723:55:502019
35. DOWNLOADED:673‐FOUND:6
1. DIRBv2.22
2. ByTheDarkRaver
3. ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐
4.
5. dirb[][options]
6.
7. =========================NOTES=========================
8. :BaseURLtoscan.(Use‐resumeforsessionresuming)
9. :Listofwordfiles.(wordfile1,wordfile2,wordfile3...)
10.
11. ========================HOTKEYS========================
其他更多有趣的功能：
第二十九课：发现目标WEB程序敏感目录第一季
-223-
本文档使用书栈(BookStack.CN)构建
12. 'n'‐>Gotonextdirectory.
13. 'q'‐>Stopscan.(Savingstateforresume)
14. 'r'‐>Remainingscanstats.
15.
16. ========================OPTIONS========================
17. ‐a:SpecifyyourcustomUSER_AGENT.
18. ‐b:Usepathasis.
19. ‐c:SetacookiefortheHTTPrequest.
20. ‐E:pathtotheclientcertificate.
21. ‐f:FinetunningofNOT_FOUND(404)detection.
22. ‐H:AddacustomheadertotheHTTPrequest.
23. ‐i:Usecase‐insensitivesearch.
24. ‐l:Print"Location"headerwhenfound.
25. ‐N:IgnoreresponseswiththisHTTPcode.
26. ‐o:Saveoutputtodisk.
27. ‐p:Usethisproxy.(Defaultportis1080)
28. ‐P:ProxyAuthentication.
29. ‐r:Don'tsearchrecursively.
30. ‐R:Interactiverecursion.(Asksforeachdirectory)
31. ‐S:SilentMode.Don'tshowtestedwords.(Fordumbterminals)
32. ‐t:Don'tforceanending'/'onURLs.
33. ‐u:HTTPAuthentication.
34. ‐v:ShowalsoNOT_FOUNDpages.
35. ‐w:Don'tstoponWARNINGmessages.
36. ‐X/‐x:Appendeachwordwiththisextensions.
37. ‐z:AddamillisecondsdelaytonotcauseexcessiveFlood.
38.
39. ========================EXAMPLES=======================
40. dirbhttp://url/directory/(SimpleTest)
41. dirbhttp://url/‐X.html(Testfileswith'.html'extension)
42. dirbhttp://url//usr/share/dirb/wordlists/vulns/apache.txt(Testwit
hapache.txtwordlist)
43. dirbhttps://secure_url/(SimpleTestwithSSL)
第二十九课：发现目标WEB程序敏感目录第一季
-224-
本文档使用书栈(BookStack.CN)构建
Micropoor
第二十九课：发现目标WEB程序敏感目录第一季
-225-
本文档使用书栈(BookStack.CN)构建
本课是针对前第1-20课时的msfvenom生成payload的自动补全命令补充。虽msfvenom强大，同样有
着非常繁琐的参数，参数强大，意味着会增加工作效率，但它并不像MSF有命令补全功能，故本课吸取
前20课经验，自动补全msfvenom的参数。
1. root@John:~#cat/etc/shells
2. #/etc/shells:validloginshells
3. /bin/sh
4. /bin/dash
5. /bin/bash
6. /bin/rbash
7. /usr/bin/screen
8. /bin/zsh
9. /usr/bin/zsh
10. /usr/bin/tmux
11. root@John:~#echo$SHELL
12. /bin/bash
复制附录A到~/.oh-my-zsh/custom/plugins/msfvenom文件夹下（注：没有msfvenom目录，创
建即可）
需要zsh的支持：
第三十课：解决msfvenom命令自动补全
-226-
本文档使用书栈(BookStack.CN)构建
1. root@John:~/.oh‐my‐zsh/custom/plugins/msfvenom#pwd
2. /root/.oh‐my‐zsh/custom/plugins/msfvenom
3. root@John:~/.oh‐my‐zsh/custom/plugins/msfvenom#ls
4. _msfvenom
编辑~/.zshrc文件：
1. root@John:~#nano~/.zshrc
1. root@John:~#nano~/.zshrc
2. root@John:~#cat~/.zshrc
3. plugins=(msfvenom)
更新：
1. root@John:~#source~/.zshrc
第三十课：解决msfvenom命令自动补全
-227-
本文档使用书栈(BookStack.CN)构建
效果如下：
1. #compdefmsfvenom
2. #autoload
3. #
4. #zshcompletionformsfvenominMetasploitFrameworkProject
(https://www.metasploit.com)
5. #
6. #github:https://github.com/Green‐m/msfvenom‐zsh‐completion
7. #
8. #author:Green‐m(PI:EMAIL)
9. #
10. #license:GNUGeneralPublicLicensev3.0
11. #
12. #Copyright(c)2018,Green‐m
13. #Allrightsreserved.
14. #
15.
16. VENOM_CACHE_FILE=~/.zsh/venom‐cache
17.
18. venom‐clear‐cache(){
19. rm$VENOM_CACHE_FILE
20. }
21.
22. venom‐cache‐payloads(){
附录A：
第三十课：解决msfvenom命令自动补全
-228-
本文档使用书栈(BookStack.CN)构建
23.
24. if[‐x"$(command‐vmsfvenom)"]
25. then
26. VENOM="msfvenom"
27. elif[‐n"$_comp_command1"]
28. then
29. VENOM=$_comp_command1
30. else
31. echo"Coundnotfindmsfvenompathinsystemenv,pleaserunmsfvenomwith
path."
32. fi
33.
34. if[[!‐d${VENOM_CACHE_FILE:h}]];then
35. mkdir‐p${VENOM_CACHE_FILE:h}
36. fi
37.
38. if[[!‐f$VENOM_CACHE_FILE]];then
39. echo‐n"(...cachingMetasploitPayloads...)"
40. $VENOM‐‐listpayload|grep‐e"^.*\/"|awk'{print$1}'>>
41. $VENOM_CACHE_FILE
42. fi
43. }
44.
45. _msfvenom(){
46.
47. localcurcontext="$curcontext"stateline
48. typeset‐Aopt_args
49.
50. _arguments‐C\
51. '(‐h‐‐help)'{‐h,‐‐help}'[showhelp]'\
52. '(‐l‐‐list)'{‐l,‐‐list}'[Listallmodulesfortype.Typesare:paylo
53. ads,encoders,nops,platforms,archs,encrypt,formats,all]'\
54. '(‐p‐‐payload)'{‐p,‐‐payload}'[Payloadtouse(‐‐listpayloadstolist,
55. ‐‐list‐optionsforarguments).Specify‐orSTDINforcustom]'\
56. '(‐‐list‐options)‐‐list‐options[List‐‐payloadstandard,adva
57. ncedandevasionoptions]'\
58. '(‐f‐‐format)'{‐f,‐‐format}'[Outputformat(use‐‐listformatstoli
59. st)]'\
60. '(‐e‐‐encoder)'{‐e,‐‐encoder}'[Theencodertouse(use‐‐listencoders
61. tolist)]'\
62. '(‐‐smallest)‐‐smallest[Generatethesmallestpossiblepayloadusingall
63. availableencoders]'\
第三十课：解决msfvenom命令自动补全
-229-
本文档使用书栈(BookStack.CN)构建
64. '(‐‐encrypt)‐‐encrypt[Thetypeofencryptionorencodingtoapplytothe
65. shellcode(use‐‐listencrypttolist)]'\
66. '(‐‐encrypt‐key)‐‐encrypt‐key[Akeytobeusedfor‐‐encrypt]'\
67. '(‐‐encrypt‐iv)‐‐encrypt‐iv[Aninitializationvectorfor‐‐encrypt]'\
68. '(‐a‐‐arch)'{‐a,‐‐arch}'[thearchitecturetousefor‐‐payloadand‐
69. ‐encoders(use‐‐listarchstolist)]'\
70. '(‐‐platform)‐‐platform[Theplatformfor‐‐payload(use‐‐listplatforms
71. tolist)]'\
72. '(‐o‐‐out)'{‐o,‐‐out}'[Savethepayloadtoafile]'\
73. '(‐b‐‐bad‐chars)'{‐b,‐‐bad‐chars}'[Characterstoavoidexample:"\x0
74. 0\xff"]'\
75. '(‐n‐‐nopsled)'{‐n,‐‐nopsled}'[Prependanopsledof\[length\]sizeon
76. tothepayload]'\
77. '(‐‐encoder‐space)‐‐encoder‐space[Themaximumsizeoftheencodedpay
78. load(defaultstothe‐svalue)]'\
79. '(‐i‐‐iterations)'{‐i,‐‐iterations}'[Thenumberoftimestoencodethe
80. payload]'\
81. '(‐c‐‐add‐code)'{‐c,‐‐add‐code}'[Specifyanadditionalwin32shellcode
82. filetoinclude]'\
83. '(‐x‐‐template)'{‐x,‐‐template}'[Specifyacustomexecutablefiletouse
84. asatemplate]'\
85. '(‐k‐‐keep)'{‐k,‐‐keep}'[Preservethe‐‐templatebehaviourandinject
86. thepayloadasanewthread]'\
87. '(‐v‐‐var‐name)'{‐v,‐‐var‐name}'[Specifyacustomvariablenametouse
88. forcertainoutputformats]'\
89. '(‐t‐‐timeout)'{‐t,‐‐timeout}'[Thenumberofsecondstowaitwhenre
90. adingthepayloadfromSTDIN(default30,0todisable)]'\
91. '*::($(__msfvenom_options))'&&ret=0
92.
93. lastword=${words[${#words[@]}‐1]}
94.
95. case"$lastword"in