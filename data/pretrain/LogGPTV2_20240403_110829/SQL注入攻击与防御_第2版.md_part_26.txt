关于SQL注入的图书)的商品的详细信息，如图4-1所示。
victin.con voy secue applicalionMicrosof lstenet Explorel
ROX
FleEdVeFavlToHe
FMed
AddeNp:/w. vcim.con/pucts an7d12
GoLi
VICTIM.COM
Typ
Descriptior
Pnce
12Book
SQL Injection Antacks
50
0Done
图4-1示例电子商务站点的商品描述页面
我们假设id参数易受到SQL注入攻击。它是一个数字值，因而我们不需要在例子中使用
单引号来终止任何字符串。很明显，我们在该过程中探讨的概念也适用于其他类型的数据。我
们还假设victim.com使用Microsoft SQLServer作为后台数据库（尽管本章还包括几个其他数据
库服务器的例子）。为清晰起见，所有例子都将基于GET请求，我们将所有注入的有效载荷（payload)
放在URL中。也可以通过在请求体而非URL中包含注入代码来为POST请求应用相同的技术
提示：
请记住，在接下来使用的所有注入技术中，可能需要注释掉剩下的原始查询以获取语法正
确的SQL代码（例如，对于MySQL，可添加两个连字符或一个#字符）。请参考第2章以获取更
多关于如何使用注释终止SQL查询的信息。
4.2.1使用堆叠查询
堆叠查询（stackedquery)指的是在单个数据库连接中执行多个查询序列，是否允许堆叠查询
是影响能否利用SQL注入漏洞的重要因素之一。下面是一个注入堆叠查询的例子，我们调用
xp_cmdshell扩展存储过程来执行一条命令：
上述语句不仅能终止原始查询，还可以添加一条全新的查询，并促使远程服务器按序执行
这两条语句。相比只能将代码注入原始查询的情况，这种方式为攻击者提供了更多自由和可能。
遗的是，并非所有数据库服务器平台都支持堆叠查询。根据远程数据库服务器的差别和
所使用技术框架的不同，情况也各有不间。例如，使用ASPNET和PHP访间MicrosoRSQL
113
---
## Page 128
SQL注入攻击与防御（第2版)
Server时允许堆叠查询，但如果使用Java来访问，就不允许。使用PHP访间PostgreSQL时，
PHP允许堆叠查询：但如果访问MySQL，PHP不允许堆叠查询。
Ferruh Mavituna（一名安全研究员和工具作者）在其SQLInjection Cheat Sheet(SQL注入备忘
单）上公布了一张表，其中收集了这方面的信息：可访问http://ferruh.mavituna.com/sql-injection-
cheatshcet-oku/来获取该表。
4.2.2在Web应用程序中利用Oracle漏洞
当在Web应用程序中利用SQL注入漏润时，Oracle数据库对我们提出了挑战。最大的障
码之一就是Oracle SQL语法的限制，它不允许执行堆叠查询（stacked query)。
为了在Oracle的SQL语言中执行多条语句，需要找到一种办法来执行PL/SQL块。PL/SQL
程序设计语言是直接内置于Oracle中的，它扩展了SQL并允许执行堆叠的命令。方法之一，
就是使用一个匿名PL/SQL块，它包含在一条BEGIN语句与一条END语句之间，是一个自由
编写的PL/SQL块。下面的例子演示了一个“HelloWorld”版本的匿名PL/SQL块：
SQL> DECLARE
MESG VARCHAR2 (200) ;
NIDS8
MESG:=*HELLO WORLD′ ;
DBMS_OUTPUT, PUT_LINE (MESG) /
END;
默认情况下，在安装Oracle时一起安装了一些默认的包，在Oracle 8i到Oracle11gR2等版
本中，安装了两个允许执行匿名PL/SQL块的函数。这两个函数是：
●dbms_xmlquery.newcontext(
●dbms_xmlquery-getxml(
PUBLIC用户默认就允许访问这两个函数。因此任何数据库用户，无论是何种访问权限，
都可以执行这两个函数。在利用SQL注入漏洞时，可以使用这两个函数来执行DML/DDL语
句块，比如下面的例子（假如用户具有CREATEUSER权限的话，就创建一个新的数据库用户）：
http: //www.victim,com/index.jsp?id=1 and (select dbms_xmlquery.
newcontext (*declare PRAGMA AUTONOMOUS_TRANSACTION; begin execute
immediate *' create user pwned identified by pwm3d *'; commit;
end; *) from dua1) is not nu11 --
对于攻击者，以这种方式来执行PL/SQL，可以获得与在交互访问方式下（例如通过Sqlplus）
相同的控制级别，因此可以调用通过OracleSQL通常无法访问到的功能。
4.3识别数据库
要想成功发动SQL注入攻击，最重要的是知道应用正在使用的数据库服务器。没有这一信
息，就不可能修改查询以注入信息并提收目己所感兴趣的数据。
Web应用技术将为我们提供首条线索。例如，ASP和.NET通常使用Microsoft SQL Server
作为后台数据库，而 PHP应用则很可能使用MySQL或PostgreSQL。如果应用是用Java编写
114
---
## Page 129
第4章利用SQL注入
的，那么使用的可能是Oracle或MySQL。此外，底层操作系统也可以提供一些线索：安装
IIS(Intermet信息服务器）作为服务器平台标志着应用是基于Windows 的架构，后台数据库很可
能是 SQL Server。而运行Apache 和 PHP 的Linux服务器则很可能使用的是开源数据库，比如
MySQL或PostgreSQL。当然，在开展跟踪（fingerprint)工作时不应仅仅依靠这些要考虑的因素，
因为管理员很可能将不同技术以不平常的方式组合起来使用。不过数据库服务器面临的架构
（如果能正确识别并跟踪的话）却可以提供很多线索来加速实际的跟踪过程。
识别数据库的最好方法在很大程度上取决于是否处于盲态。如果应用程序返回（至少在某
种程度上）查询结果和（或）数据库服务器错误消息（例如，非盲态），那么跟踪会相当简单，因为
可以很容易通过产生的输出结果来提供关于底层技术的信息。但如果处于盲态，无法让应用返
回数据库服务器消息，那么就需要改变方法，尝试注入多种已知的、只针对特定技术才能执行
4.3.1非盲跟踪
大多数情况下，要了解后台数据库服务器，只需查看一条足够详细的错误消息即可。根据
执行查询所使用的数据库服务器技术的不同，这条由同类型SQL错误产生的消息也会各不相
同。例如，添加一个单引号将追使数据库服务器将单引号后面的字符看作字符串面非SQL代
码，这会产生一条语法错误。对于Microsoft SQLServer米说，最终的错误消息可能与图 4-2
展示的截图类似。
viclim.con wery secuwe applicalion· Kicrosot Inteinet Explorer
Fle
Ed
Sfd心
VICTIM.COM
esoft OLE DB Provider for ODBC Drver
er 80040e14
[Microsef]lODBC SOL, Senver Driverl[SOL Sener[Unclos
fproducts asp, line 33
e] Done
 nee
图4-2由未闭合的引用标记引发的 SQL错误消息
很难想象事情竞如此简单：错误消息中明确提到了“SQLServer”，还附加了一些关于出错
内容的有用细节。后面构思正确的查询时，这些信息会很有帮助。而MySQL5.0产生的语法错
误则很可能如下所示：
ERROR 1064 (42000): You have an error in your SQL syntaxi check the manual
near * ' at line 1
115
---
## Page 130
SQL注入攻击与防御（第2版）
这里的错误消息也包含了清晰的、关于数据库服务器技术的线索。其他错误可能用处不大，
但通常这不是问题。请注意后面这条错误消息开头部分的两个错误代码。这些代码本身就是
MySQL的“签名”。例如，当尝试从同一MySQL上一张不存在的表中提取数据时，会收到下
列错误：
ERROR 1146(42S02) : Tab1e *foo.bar* doesn't exist
不难发现，数据库通常事先为每条错误消息规划了一个编码，用于唯一地标识错误类型。
再看一个例子，读者有可能猜出产生下列错误的数据库服务器：
开头的“ORA”即为提示信息：安装的是Oracle！www.ora-code.com提供了一个完整的
Oracle错误消息库。
然面有时，具有启示意义的关键信息并非来自于数据库服务器本身，而是来自于访问数据
库的技术。例如，请看下面的错误：
Pg_query() : Query failed: ERROR: untezminated quoted string at or near
"" at character 69 in /vaz/www/php/somepge.php on line 20
这里并没有提及数据库服务器技术，但是有一个特定数据库产品所独有的错误代码。PHP
使用pg_query函数（以及已经弃用的版本pg_excc函数）对PostgreSQL数据库执行查询，因此可
以立即推断出后台运行的数据库服务器是PostgreSQL。
注意：
Google是我们的好帮手，任何错误代码、函数名或看上去难懂的字符事，在Google中搜
案，只需几秒就可以辨别出后台数据库。
1.获取标志信息
从错误消息中可以获取相当准确的关于Web应用保存数据所使用技术的信息。但这些信
息还不够，您需要获取更多信息。例如，在前面第一个例子中，我们发现远程数据库为SQL
Server，但该产品包含很多种版本：截至本书写作时，最通用的版本为SQLServer 2005和2008，
但仍然有很多应用使用的是SQLServer2000。如果能够发现更多细节信息，比如准确版本和补
丁级别，那么将有助于我们快速了解远程数据库是否存在一些可利用的、众所周知的漏润。
幸运的是，如果Web应用返回了所注入查询的结果，那么要弄清其准确技术通常会很容
易。所有主流数据库技术都至少允许通过一条特定的查询来返回软件的版本信息。我们需要做
的是让Web应用返回该查询的结果，表4-1给出了各种特定技术所对应的查询示例，它们将返
回包含准确数据库服务器版本信息的字符串。
表4-1在返回各种数据库服务器时对应的查询
数据库服务器
查询
Microsoft SQL Server
SELECT @G@version
MySQL
SELECT version)
SELECT @@/version
116
---
## Page 131
第4章利用SQL注入
(续表)
数据库服务器
查询
Oracle
SELECT banner FROM vSversion
SELECT banner FROM vSversion WHERE rownum=1
PostgreSQL
SELECT version(
例如，对于SQLServer 2008RTM来说，执行SELECT@@version查询时，将得到下列信息：
Micr0soft SQL Server 2008 (RTK) - 10.0.1600.22 (Inte1 X86)
Ju1 9 2008 14:43:34
Copyright (c) 1988 - 2008 Microsoft Corporation
Standard Edition on Windows NT 5.2  (Bui1d 3790: Service Pack 2)
这里面包含了相当多的信息。不仅包含了SQLServer的精确版本和补丁级别，还包含了数
据库安装于其上的操作系统的信息。比如“NT5.2”指的是Windows Server 2003，在上面安装
了 Service Pack 2 补丁。
Microsof SQLServer产生的消息非常详细，因而要想产生一条包含@@version值的消息并
不是很难。例如，对于数字型可注入参数来说，只需简单地在应用希望得到数字值的地方注入
该变量名就可以触发一个类型转换错误。作为一个例子，请思考下列URL：
http:/ /ww. victim.com/products.asp?id=@@version
应用程序希望id字段为数字，但我们传递给它的是@@version字符串。执行该查询时，
SQLServer会忠实地接收@@version的值并尝试将其转换为整数，这时会产生一个类似于图4-3
所示的错误，该错误告诉我们当前使用的是SQLServer 2005，并且包含准确的构建级别(build
level以及关于底层操作系统的信息。
提示：
PostgreSQL数据库的版本信息：Microsoft SQL Server并不是唯一会返回底层操作系统和
系统架构信息的数据库，PostgreSQL数据库也会返回大量信息，比如下面的例子，这是运行SELECT
version0查询的返回结果：
PostgreSQL 9.1.1 on i686-pc-1inux-gnu, compi1ed by i686-pc-1inuxgnu-
gcc (Gentoo Hardened 4.4.5 p1.2, pie-0.4.5, 32-bit)
从上面的信息中，我们不仅知道了PostgreSQL数据库的版本，还知道了底层Linux操作
系统的种类（HardencdGentoo)、系统架构(32位)，以及用于编译数据库服务器自身的编译器的
版本（gcc4.4.5).在某些情况下，所有这些信息都可能变得非常有用，比如在执行SQL注入之
后，我们发现了某种内存读取错误（memorycorruptionbug）漏润，并且想利用它在操作系统层级
扩展攻击的影响。
当然，即便唯一可注入的参数并不是数字，我们也仍然可以检索到需要的信息。例如，如
果可注入的参数回显在响应中，那么便可以很容易地向该字符串注入@@version。具体来讲，
假设我们拥有一个搜索页面，它返回包含指定字符串的所有条目：
http: / /vww, victim, com/searchpeople asp?name=smi th
117
---
## Page 132
SQL注入攻击与防御（第2版）
L
poh
VICTIM.COM
licrosot OUE DB Provider for ODBC Drivers error B0040e07
Dntel X86)Feb9200
uadg p , e 206
products.asp, line 33
e]Done
图4-3使用错误消息来提取服务器版本信息
在类似于下面内容的查询中可能要用到上述URL：
SELECT name, phone, emai1 FROM people WHERE name LIKE *$snith$*
最终页面将包含一条与下面类似的消息：
100 results founds for smith
为检索数据库版本，可以向name参数注入下列内容：
http: //www. victim, com/searchpeople, asp?name='$2B88version2B'
最终查询将变为：