title:Keeping identity secret in online social networks
author:Xinxin Zhao and
Lingjun Li and
Guoliang Xue
Keeping Identity Secret in Online Social Networks
Xinxin Zhao
PI:EMAIL
Lingjun Li
PI:EMAIL
Guoliang Xue
PI:EMAIL
ABSTRACT
Online Social network (OSN) develops rapidly recently. A
large storage space is needed to store users’ records. Usu-
ally, OSN would sign contracts with untrusted third-party
storage providers.
In order to guarantee privacy for both
data and users, we construct a system which can hide a
user’s identity when he visits the untrusted third-party stor-
age sites. We also deﬁne a ﬁne-grained access control policy
for the data owner to issue authorization as well as revoke
a friend’s privilege. We theoretically prove the security of
our system, and demonstrate the performance of our system
through simulations.
Categories and Subject Descriptors
D.4.6 [Security and Protection]: Access controls
Keywords
Online Social Network, Hide Identity, Access Control, Re-
vocation
1.
INTRODUCTION
In today’s society, people spend more and more time in
online social networks (OSNs), getting news, sharing photos
and discovering new relationships. To store an increasing
number of user’s personal data, an OSN operator may rent
storage facilities from untrustworthy storage sites. There-
fore, the protection of personal data from unauthorized ac-
cess is becoming a critical concern in OSNs.
Most of the existing literatures on privacy preservation
focus on data privacy. However, identity privacy is of the
same importance as data privacy. For example, if the cipher-
text of some personal data is stored in a third party storage
site, even though adversaries cannot decrypt the data, they
know who has accessed it, which exposes the owner’s so-
cial relationships. Camenisch presented a protocol [6] for
anonymous access to the records stored in an untrustworthy
Zhao, Li, and Xue are all with Arizona State University,
Tempe, AZ, 85287. This research was supported in part
by ARO grant W911NF-09-1-0467 and NSF grant 1115129.
The information reported here does not reﬂect the opinion
of the federal government.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ASIACCS ’12, May 2–4, 2012, Seoul, Korea.
Copyright 2012 ACM 978-1-4503-1303-2/12/05 ...$10.00.
database and each record has an access control list. They
leveraged zero-knowledge proofs of knowledge to construct
oblivious transfer. In their work, once people obtain the cre-
dentials, they can always access all records associated with
these credentials. While this is quite suitable in the database
environment, it cannot be applied to the OSN environment.
In this paper, we propose a system, which is able to hide
users’ identities from adversaries when they visit the data
stored in an untrustworthy storage site. The system provides
an access control list (ACL) for a data owner to ﬂexibly de-
ﬁne which group of friends can access his data. In addition,
a revocation list (RL) enables a data owner to revoke indi-
vidual users from future access. In the OSN, users in the
same group usually have the same authorization to access
the data owner’s data. However, sometimes the data owner
may want to hide certain information from speciﬁc users in
the group.
In summary, we make the following contributions: 1) The
authorized users can access the data in a storage site in an
anonymous fashion that the storage site is oblivious to ei-
ther the visitor’s identity or the index of the accessed data
stored; 2) Our access control policy allows a data owner to
set group-based access control policy, as well as an individual
level revocation policy; 3) We prove the security of our sys-
tem within the universal composability (UC) framework [8],
allowing our system executing composably with other UC
secure systems without sacriﬁcing any security guarantee.
The organization of our paper is as follows. We introduce
models and security goals in Section 2. Technical prelimi-
naries are presented in Section 3. The construction of our
system is presented in Section 4.
In Section 5, we show
the security analysis of our system. The evaluation result is
presented in Section 6. We demonstrate the related work in
Section 7. Finally, we give a conclusion in Section 8.
2. PROBLEM FORMULATION
2.1 System Model
There are three roles in our system: data owners (DOs),
visitors (V s) and a storage site (DB). DOs are the ones who
manage their homepages and friends list. They classify their
friends into several groups (e.g., classmates, family and col-
leagues) and issue corresponding credentials to each group.
DOs also generate ACL and RL for their uploaded data.
V s are the ones who visit other user’s homepages in OSNs.
When they visit other user’s homepage, they may not want
any third party to know the relationship between them. The
storage site is untrusted and signs a contract with the OSN
operator and provides storage service for all OSN users.
2.2 Threat Model
We consider a malicious adversary, who is computation-
ally bounded and can arbitrarily deviate from the protocol
speciﬁcation. Furthermore, the adversary controls all the
channels in the system such that he can eavesdrop, block or
tamper any message transmitted between two honest partic-
ipants. The adversary can also replay or deliver out-of-order
messages to an honest participant. Multiple adversaries will
be considered as controlled by a single adversary.
2.3 Security Objectives
Our system is designed to achieve the following security
objectives: 1) Access Control: Inappropriate visitors cannot
access the data; 2) Identity Hiding: When a visitor accesses
the storage site, his identity and the index of the data are not
exposed; 3) Collusion Resistant: the database, the visitor,
and the data owner cannot beneﬁt from the collusion.
The security of our system is proved by the indistinguisha-
bility of a real world and an ideal world in the UC frame-
work. In the real world, all honest parties follow the proto-
col; The corrupted parties can arbitrarily deviate from the
protocol. In the ideal world there is an incorruptible trusted
party T to implement all the functionalities of our proto-
cols. All parties communicate through T .
In both of the
ideal world and the real world, there exists an environment
ξ who observes all the honest parties’ inputs, outputs, and
the view of the corrupted parties. The security of a system
is deﬁned as follows [8][6]:
Definition 1. A system is said to securely implement a
functionality if for any adversary A, we can construct a sim-
ulator Sim in the ideal world, such that an environment ξ
cannot distinguish whether it is communicating with Sim in
the ideal world, or with the adversary A in the real world.
The trusted party T holds a tuple (D, ACL, RL), which
represents the data, its ACL and RL; T maintains a group
list GID for each visitor with an identity ID.
1) Initially, T sets its internal database DBT ← ⊥.
2) Upon receiving (U pload, D, ACL, RL) from DO(cid:48), T
adds (ACL, RL) and (ACL, RL, D) to DB(cid:48) and DBT , re-
spectively.
3) Upon receiving (Join, ID,Gi, DO(cid:48)) from V (cid:48), T sends
(Join, ID,Gi) to DO(cid:48). If DO(cid:48) sends back b = 1 then T adds
Gi to GID, otherwise T just returns b to V (cid:48).
4) Upon receiving (Retrieve, σ) from V (cid:48), where σ is the
index of the data, T processes as follows. If DBT (cid:54)= ⊥, T
sends Retrieve to DB(cid:48), then DB(cid:48) sends back a bit b.
If
b = 1 ∧ ACLσ ⊆ GID ∧ ID /∈ RLσ, T sends Dσ to V (cid:48),
otherwise it just returns ⊥ to V (cid:48).
3. TECHNICAL PRELIMINARIES
3.1 Bilinear Map
Let G1, G2, and GT be cyclic multiplicative groups of
prime order p. A bilinear map from G1 × G2 to GT is a
function e : G1 × G2 → GT, such that: for all u ∈ G1, v ∈
G2, a, b ∈ Zp, e(ua, vb) = e(u, v)ab; e(g1, g2) (cid:54)= 1, where
g1, g2 are generators of groups G1, G2, respectively; e can be
eﬃciently computed.
3.2 Complexity Assumptions
The security of our system is based on the complexity
assumption of q-Decisional Multi-Exponent Bilinear Diﬃe-
Hellman Assumption (q-MEBDH) [9], q-Strong Diﬃe-Hellman
Assumption (q-SDH) [3], and q-Bilinear Diﬃe-Hellman Ex-
ponent Assumption (q-BDHE) [4]. Due to the space limit,
we refer to our technical report [13] for the detailed deﬁni-
tion.
3.3 Broadcast Encryption
Broadcast encryption algorithm encrypts broadcasting con-
tent in such a way that only intended users can decrypt the
content. Unauthorized users cannot access the content even
if they have the private key. In our system, we integrate the
protocol proposed by Lewko and Sahai [9] into our system
to revoke a visitor from future accessing.
signature scheme
3.4
3.4.1 ACL Signatures Scheme
We use the modiﬁcation of Boneh’s signature scheme in [3]
for our ACL signature. Given a bilinear group pair (G, GT )
of a prime order p ≥ 2k. g is a generator of group G. We
choose xe, x1,··· , xl
$← Zp, and compute ye = gxe , y1 =
gx1 ,··· , yl = gxl . The private keys are (xe, x1,··· , xl); the
public keys are (g, ye, y1,··· , yl). Suppose the messages are
(rm,G1,··· ,Gi), where i ≤ l. The signature on the message
tuple is E ← g
j=1 xjGj . It can be veriﬁed by check-
ing whether the equation e(E, yegrmQi
xe+rm+Pi
Gj
j ) = e(g, g).
j=1 y
1
3.4.2 Credential Signature Scheme
We utilize the signature scheme proposed by Au et al.
[1] for our credential signature. Given a bilinear group pair
(G, GT ) of a prime order p ≥ 2k. g, h0, h1, h2 are random
generators of G. We choose x $← Zp, and compute y = gx.
The secret key is x. The public keys are (y, g, h0, h1, h2).
Suppose the messages to be signed are (c1, c2). We choose
s, r $← Zp. The signature is A ← (ghc1
x+s . The
signature can be veriﬁed by checking whether the equation
e(A, gsy) = e(ghc1
1 hr
2)
0 hc2
2, g) holds.
0 hc2
1
1 hr
3.5 Zero-Knowledge Proof
A zero-knowledge proof is to let others verify the proof of
knowledge without exposing anything about the knowledge.
Given a bilinear group pair (G, GT ) with prime order p, we
follow the notation introduced in [6] for constructing a zero-
knowledge proof. For example, P K{(α, β) : Y = gαhβ}
denotes a zero-knowledge proof of α, β making Y = gαhβ.
Here, Y ∈ G, α, β ∈ Zp, and G = (cid:104)g(cid:105) = (cid:104)h(cid:105). Given this
notation, one can easily derive an eﬃcient protocol [5][7].
5 wt4
1 , T = wz1
Now we construct a zero-knowledge proof of the creden-
tial signature. Assume we are given a signature (A, s, r) on
(c1, c2). We ﬁrst randomizes the public keys by choosing
$← G such that logg w1,
values w1, w2, w3, w4, w5, w6, w7
logg w2, logg w3, logg w4, logg w5, logg w6, logg w7 are not
known. Then we choose random values t1, t2, t3, t4, t5, t6, γ, δ,
η, , φ, ψ $← Zp, compute ˜A ← Auγ, ˜g ← guδ, ˜y ← yuη, ˜h0 =
h0u, ˜h1 = h1uφ, ˜h2 = h2uψ, B = wδ
1 , S =
wψ
4 wt3
1 , and execute
the following proofs of knowledge: P K{(c1, c2, s, r, t1, t2, t3, t4,
t5, t6, γ, δ, η, , φ, ψ) : P roof (c1, c2, s, r, A, g, y, h0, h1, h2)}.
Here, P roof (c1, c2, s, r, A, g, y, h0, h1, h2) represents
1 ∧
2 wz4
1 ∧
−δwz9
2 wz10
1 ∧
−swz13
3 wz14
1 ∧
−rwz17
4 wz18