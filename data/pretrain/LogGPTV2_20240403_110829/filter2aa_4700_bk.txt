  errno_t eVar5;
  HANDLE pvVar6;
  wchar_t *_Dst;
  int iVar7;
  ushort *_Dst_00;
  wchar_t *_Src;
  undefined4 uVar8;
  undefined4 uVar9;
  undefined4 uVar10;
  undefined4 uVar11;
  if ((((param_2 == (ushort *)0x0) || (*param_2 == 0)) || (param_3 == (wchar_t **)0x0)) ||
     ((*param_3 == (wchar_t *)0x0 || (**param_3 == L'\0')))) {
    puVar3 = (undefined4 *)FUN_00407f40();
    *puVar3 = 0x16;
    FUN_00407e83();
    return (HANDLE)0xffffffff;
  }
  file_name = FUN_00402abe((char *)param_2,0x5c);
  puVar4 = FUN_00402abe((char *)param_2,0x2f);
  if (puVar4 == (ushort *)0x0) {
    _Dst_00 = param_2;
    if ((file_name == (ushort *)0x0) &&
       (file_name = FUN_00402abe((char *)param_2,0x3a), _Dst_00 = param_2,
       file_name == (ushort *)0x0)) {
      file_name = param_2;
      do {
        uVar1 = *file_name;
        file_name = file_name + 1;
      } while (uVar1 != 0);
      _SizeInWords = ((int)((int)file_name - (int)(param_2 + 1)) >> 1) + 3;
      _Dst_00 = (ushort *)__calloc_base(_SizeInWords,2);
      if (_Dst_00 == (ushort *)0x0) {
        FID_conflict__free((void *)0x0);
        return (HANDLE)0xffffffff;
      }
      eVar5 = _wcscpy_s((wchar_t *)_Dst_00,_SizeInWords,L".\\");
      if ((eVar5 != 0) ||
         (eVar5 = _wcscat_s((wchar_t *)_Dst_00,_SizeInWords,(wchar_t *)param_2), eVar5 != 0))
      goto LAB_0040cac8;
      FID_conflict__free((void *)0x0);
      file_name = _Dst_00 + 2;
    }
  }
  else {
    if ((file_name == (ushort *)0x0) || (_Dst_00 = param_2, file_name > 1;
    _SizeInWords = iVar7 + 5;
    _Dst = (wchar_t *)__calloc_base(_SizeInWords,2);
    if (_Dst == (wchar_t *)0x0) {
      pvVar6 = (HANDLE)0xffffffff;
LAB_0040cab3:
      FID_conflict__free(_Dst);
      goto LAB_0040caba;
    }
    eVar5 = _wcscpy_s(_Dst,_SizeInWords,(wchar_t *)_Dst_00);
    if (eVar5 != 0) {
LAB_0040cac8:
      uVar11 = 0;
      uVar10 = 0;
      uVar9 = 0;
      uVar8 = 0;
      FUN_00407e93();
      pcVar2 = (code *)swi(3);
      pvVar6 = (HANDLE)(*pcVar2)(uVar8,uVar9,uVar10,uVar11);
      return pvVar6;
    }
    puVar3 = (undefined4 *)FUN_00407f40();
    _Src = L".com";
    uVar8 = *puVar3;
    do {
      eVar5 = _wcscpy_s(_Dst + iVar7,5,_Src);
      if (eVar5 != 0) goto LAB_0040cac8;
      eVar5 = __waccess_s(_Dst,0);
      if (eVar5 == 0) {
        puVar3 = (undefined4 *)FUN_00407f40();
        *puVar3 = uVar8;
        pvVar6 = FUN_0040cad5(param_1,_Dst,param_3,param_4);
        goto LAB_0040cab3;
      }
      _Src = (wchar_t *)((int)_Src + 10);
    } while ((undefined **)_Src != &PTR_u_ja_JP_004191cc);
    FID_conflict__free(_Dst);
  }
  else {
    eVar5 = __waccess_s((wchar_t *)_Dst_00,0);
    if (eVar5 == 0) {
      pvVar6 = FUN_0040cad5(param_1,(LPCWSTR)_Dst_00,param_3,param_4);
      goto LAB_0040caba;
    }
  }
  pvVar6 = (HANDLE)0xffffffff;
LAB_0040caba:
  FID_conflict__free((void *)(-(uint)(param_2 != _Dst_00) & (uint)_Dst_00));
  return pvVar6;
}
void __cdecl FUN_0040d172(uint param_1,ushort *param_2,wchar_t **param_3,wint_t **param_4)
{
  ushort uVar1;
  wchar_t wVar2;
  int iVar3;
  code *pcVar4;
  bool bVar5;
  undefined4 *puVar6;
  int *piVar7;
  HANDLE pvVar8;
  int *piVar9;
  ushort *_Memory;
  errno_t eVar10;
  ushort *puVar11;
  ushort *puVar12;
  undefined4 uVar13;
  wchar_t *pwVar14;
  undefined4 uVar15;
  undefined4 uVar16;
  undefined4 uVar17;
  wchar_t local_20;
  undefined2 local_1e;
  wchar_t *local_1c;
  char local_15;
  wchar_t local_14;
  undefined2 local_12;
  undefined2 local_10;
  undefined2 local_e;
  undefined2 local_c;
  uint local_8;
  local_8 = DAT_0041e004 ^ (uint)&stack0xfffffffc;
  if ((((param_2 == (ushort *)0x0) || (*param_2 == 0)) || (param_3 == (wchar_t **)0x0)) ||
     (*param_3 == (wchar_t *)0x0)) {
    puVar6 = (undefined4 *)FUN_00407f40();
    *puVar6 = 0x16;
    FUN_00407e83();
  }
  else {
    wVar2 = **param_3;
    piVar7 = (int *)FUN_00407f40();
    if (wVar2 == L'\0') {
      *piVar7 = 0x16;
      FUN_00407e83();
    }
    else {
      iVar3 = *piVar7;
      *piVar7 = 0;
      pvVar8 = FUN_0040ce68(param_1,param_2,param_3,param_4);
      if (((pvVar8 == (HANDLE)0xffffffff) && (piVar9 = (int *)FUN_00407f40(), *piVar9 == 2)) &&
         ((_Memory = FUN_00402b60(param_2,0x5c), _Memory == (ushort *)0x0 &&
          ((_Memory = FUN_00402b60(param_2,0x2f), _Memory == (ushort *)0x0 && (param_2[1] != 0x3a)))
          ))) {
        local_14 = L'P';
        local_12 = 0x41;
        local_10 = 0x54;
        local_e = 0x48;
        local_c = 0;
        local_1c = (wchar_t *)0x0;
        eVar10 = FID_conflict___dupenv_s(&local_1c,(size_t *)0x0,&local_14);
        if (eVar10 == 0) {
          if (local_1c != (wchar_t *)0x0) {
            _Memory = (ushort *)__calloc_base(0x104,2);
            pwVar14 = local_1c;
            if (_Memory != (ushort *)0x0) {
              do {
                do {
                  pwVar14 = (wchar_t *)FUN_00413016(pwVar14,(short *)_Memory,0x103);
                  if ((pwVar14 == (wchar_t *)0x0) || (*_Memory == 0)) goto LAB_0040d12a;
                  puVar12 = _Memory;
                  do {
                    uVar1 = *puVar12;
                    puVar12 = puVar12 + 1;
                  } while (uVar1 != 0);
                  puVar11 = FUN_00402abe((char *)_Memory,0x5c);
                  if ((_Memory + ((int)((int)puVar12 - (int)(_Memory + 1)) >> 1) + -1 != puVar11) &&
                     (puVar11 = FUN_00402abe((char *)_Memory,0x2f),
                     _Memory + ((int)((int)puVar12 - (int)(_Memory + 1)) >> 1) + -1 != puVar11)) {
                    local_20 = L'\\';
                    local_1e = 0;
                    eVar10 = _wcscat_s((wchar_t *)_Memory,0x104,&local_20);
                    if (eVar10 != 0) goto LAB_0040d165;
                  }
                  puVar12 = _Memory;
                  do {
                    uVar1 = *puVar12;
                    puVar12 = puVar12 + 1;
                  } while (uVar1 != 0);
                  puVar11 = param_2;
                  do {
                    uVar1 = *puVar11;
                    puVar11 = puVar11 + 1;
                  } while (uVar1 != 0);
                  if (0x103 > 1) +
                                    ((int)((int)puVar12 - (int)(_Memory + 1)) >> 1)))
                  goto LAB_0040d12a;
                  eVar10 = _wcscat_s((wchar_t *)_Memory,0x104,(wchar_t *)param_2);
                  if (eVar10 != 0) goto LAB_0040d165;
                  puVar6 = (undefined4 *)FUN_00407f40();
                  *puVar6 = 0;
                  pvVar8 = FUN_0040ce68(param_1,_Memory,param_3,param_4);
                  if (pvVar8 != (HANDLE)0xffffffff) goto LAB_0040d12a;
                  piVar9 = (int *)FUN_00407f40();
                } while ((*piVar9 == 2) || (piVar9 = (int *)FUN_00407f2d(), *piVar9 == 0x15));
                puVar12 = _Memory + 1;
                puVar11 = FUN_00402b60(_Memory,0x2f);
                if ((puVar11 == _Memory) &&
                   (puVar11 = FUN_00402b60(puVar12,0x2f), puVar11 == puVar12)) {
                  local_15 = 1;
                }
                else {
                  local_15 = 0;
                }
                puVar11 = FUN_00402b60(_Memory,0x5c);
                if ((puVar11 == _Memory) &&
                   (puVar11 = FUN_00402b60(puVar12,0x5c), puVar11 == puVar12)) {
                  bVar5 = true;
                }
                else {
                  bVar5 = false;
                }
              } while ((local_15 != 0) || (bVar5));
            }
LAB_0040d12a:
            FID_conflict__free(_Memory);
          }
        }
        else {
          if (eVar10 == 0x16) {
LAB_0040d165:
            uVar17 = 0;
            uVar16 = 0;
            uVar15 = 0;
            uVar13 = 0;
            FUN_00407e93();
            pcVar4 = (code *)swi(3);
            (*pcVar4)(uVar13,uVar15,uVar16,uVar17);
            return;
          }
        }
        FID_conflict__free(local_1c);
        local_1c = (wchar_t *)0x0;
      }
      if ((*piVar7 == 0) && (iVar3 != 0)) {
        *piVar7 = iVar3;
      }
    }
  }
  FUN_00401f78();
  return;
}
// Library Function - Single Match
// Name: __waccess_s
// Library: Visual Studio 2015 Release
errno_t __cdecl __waccess_s(wchar_t *_Filename,int _AccessMode)
{
  undefined4 *puVar1;
  BOOL BVar2;
  DWORD DVar3;
  errno_t eVar4;
  byte local_2c [36];
  uint local_8;
  local_8 = DAT_0041e004 ^ (uint)&stack0xfffffffc;
  if (_Filename == (wchar_t *)0x0) {
    puVar1 = (undefined4 *)FUN_00407f2d();
    *puVar1 = 0;
    puVar1 = (undefined4 *)FUN_00407f40();
    *puVar1 = 0x16;
    FUN_00407e83();
  }
  else {
    if ((_AccessMode & 0xfffffff9U) == 0) {
      BVar2 = GetFileAttributesExW(_Filename,GetFileExInfoStandard,local_2c);
      if (BVar2 == 0) {
        DVar3 = GetLastError();
        ___acrt_errno_map_os_error(DVar3);
      }
      else {
        if ((((local_2c[0] & 0x10) != 0) || ((local_2c[0] & 1) == 0)) ||
           (((uint)_AccessMode >> 1 & 1) == 0)) goto LAB_0040d22e;
        puVar1 = (undefined4 *)FUN_00407f2d();
        *puVar1 = 5;
        puVar1 = (undefined4 *)FUN_00407f40();
        *puVar1 = 0xd;
      }
      FUN_00407f40();
    }
    else {
      puVar1 = (undefined4 *)FUN_00407f2d();
      *puVar1 = 0;
      puVar1 = (undefined4 *)FUN_00407f40();
      *puVar1 = 0x16;
      FUN_00407e83();
    }
  }
LAB_0040d22e:
  eVar4 = FUN_00401f78();
  return eVar4;
}
// Library Function - Single Match
// Name: _wcscat_s
// Library: Visual Studio 2015 Release
errno_t __cdecl _wcscat_s(wchar_t *_Dst,rsize_t _SizeInWords,wchar_t *_Src)
{
  wchar_t wVar1;
  errno_t *peVar2;
  wchar_t *pwVar3;
  errno_t eStack20;
  if ((_Dst != (wchar_t *)0x0) && (_SizeInWords != 0)) {
    pwVar3 = _Dst;
    if (_Src != (wchar_t *)0x0) {
      do {
        if (*pwVar3 == L'\0') break;
        pwVar3 = pwVar3 + 1;
        _SizeInWords = _SizeInWords - 1;
      } while (_SizeInWords != 0);
      if (_SizeInWords != 0) {
        _Src = (wchar_t *)((int)_Src - (int)pwVar3);
        do {
          wVar1 = *(wchar_t *)((int)_Src + (int)pwVar3);
          *pwVar3 = wVar1;
          pwVar3 = pwVar3 + 1;
          if (wVar1 == L'\0') break;
          _SizeInWords = _SizeInWords - 1;
        } while (_SizeInWords != 0);
        if (_SizeInWords != 0) {
          return 0;
        }
        *_Dst = L'\0';
        peVar2 = (errno_t *)FUN_00407f40();
        eStack20 = 0x22;
        goto LAB_0040d266;
      }
    }
    *_Dst = L'\0';
  }
  peVar2 = (errno_t *)FUN_00407f40();
  eStack20 = 0x16;
LAB_0040d266:
  *peVar2 = eStack20;
  FUN_00407e83();
  return eStack20;
}
// Library Function - Single Match
// Name: _wcscpy_s
// Library: Visual Studio 2015 Release
errno_t __cdecl _wcscpy_s(wchar_t *_Dst,rsize_t _SizeInWords,wchar_t *_Src)
{
  wchar_t wVar1;
  errno_t *peVar2;
  wchar_t *pwVar3;
  errno_t eVar4;
  if ((_Dst != (wchar_t *)0x0) && (_SizeInWords != 0)) {
    if (_Src != (wchar_t *)0x0) {
      pwVar3 = _Dst;
      do {
        wVar1 = *(wchar_t *)((int)((int)_Src - (int)_Dst) + (int)pwVar3);
        *pwVar3 = wVar1;
        pwVar3 = pwVar3 + 1;
        if (wVar1 == L'\0') break;
        _SizeInWords = _SizeInWords - 1;
      } while (_SizeInWords != 0);
      if (_SizeInWords != 0) {
        return 0;
      }
      *_Dst = L'\0';
      peVar2 = (errno_t *)FUN_00407f40();
      eVar4 = 0x22;
      goto LAB_0040d2d9;
    }
    *_Dst = L'\0';
  }
  peVar2 = (errno_t *)FUN_00407f40();
  eVar4 = 0x16;
LAB_0040d2d9:
  *peVar2 = eVar4;
  FUN_00407e83();
  return eVar4;
}
undefined4 __cdecl FUN_0040d316(short *param_1,int param_2,int param_3,int param_4)
{
  short sVar1;
  undefined4 *puVar2;
  int iVar3;
  short *psVar4;
  int iVar5;
  undefined4 uVar6;
  if (param_4 == 0) {
    if (param_1 == (short *)0x0) {
      if (param_2 == 0) {
        return 0;
      }
    }
    else {