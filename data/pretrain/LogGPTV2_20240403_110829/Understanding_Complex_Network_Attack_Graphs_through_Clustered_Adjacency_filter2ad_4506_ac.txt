### 优化后的文本

#### 图3：攻击图的聚类邻接矩阵（见图1）

- 该图展示了攻击图的聚类邻接矩阵。每个数字代表节点之间的连接。

#### 图4：攻击图的2步可达性矩阵（见图1）

- 该图展示了攻击图的邻接矩阵的二次幂，用于表示2步攻击的可达性。

#### 多步可达性矩阵

在图6中，我们将图5中的每一步可达性矩阵（以及图3中的邻接矩阵）合并成一个单一的矩阵，如公式（3）所定义。现在可以在一个矩阵中看到所有单独的每步可达性矩阵的信息。这个多步可达性矩阵将在第4.4节中用于攻击源和影响预测。

#### 图5：攻击图的2、3和4步可达性（见图1）

- 该图展示了攻击图在2、3和4步内的可达性。

#### 攻击图变化的可达性

图7展示了一个包含730台机器的网络的攻击图邻接矩阵。虽然我们没有展示，但相应的绘制攻击图会非常混乱且难以理解。我们已经将低级安全条件聚合到机器及其间的漏洞利用集合中，因此行和列代表机器，非零条目表示至少存在一对机器之间的漏洞利用。在这种情况下，先验的机器排序（行和列）已经足够，所以我们没有应用矩阵聚类。在图中，黑色表示基线网络配置下的攻击图，在任何网络配置更改之前。橙色则表示由于网络配置更改而产生的新的攻击图边。在这个例子中，垂直的橙色线条（列）表示已添加到网络中的易受攻击的Web服务器，并且这些服务器允许网络中的所有机器连接。

#### 图8：图7的传递闭包（全步可达性）

- 该图展示了基线（黑色）和更改后（黑色+橙色）网络的传递闭包。从图中可以看出，在部署Web服务器之前（黑色），攻击仅可能在主对角线块内进行，从A2,2块到A3,3和A4,4块，以及从A3,3块到A4,4块。但在部署Web服务器之后（黑色+橙色），A1,1块中的机器可以到达网络中的所有机器，并且网络中的所有机器都可以到达A2,2、A3,3、A4,4和A5,5块中的机器。也就是说，只有A1,1块中的机器免受其块外的攻击。

#### 预测攻击源和影响

图9展示了来自图6的多步基于漏洞的可达性矩阵，但这次矩阵元素与入侵警报相关联。通过了解整个网络的攻击可达性，我们可以对检测到的入侵进行分类和关联。在图9中，黄色标记的入侵警报发生在一对已知不可达的机器之间，这可能是误报。同样，紫色标记的入侵警报发生在一对根据攻击图需要至少4个攻击步骤才能到达的机器之间。如果我们依赖传统的攻击图绘制，我们需要追踪许多边才能得出这个结论。

图9中还有两个入侵警报，根据攻击图，它们各自都是可能的一步攻击。实际上，如果我们沿着列从警报1投影到主对角线，我们会在投影行上找到警报2，表明根据攻击图，警报2紧跟在警报1之后。在这种情况下，我们根据它们是协调攻击的一部分的可能性来关联这两个警报。

图10展示了另一个与图6中的多步可达性矩阵相关的入侵警报。这次我们沿列和行向主对角线投影，以探索该警报的前后步骤。这样，我们可以预测攻击的来源（反向）和影响（正向）。沿着行投影到主对角线，我们到达一个只在第二个主对角线块（A2,2块）内有非零条目的列。实际上，这些非零条目都是单位值，表明这些都是一步攻击。换句话说，只有来自A2,2块中的某台机器的攻击才可能导致检测到的入侵，并且这可能在一个攻击步骤内发生。

在图10中，当我们沿着列将检测到的入侵投影到主对角线时，交点行显示了从检测到的事件开始的所有可能的前进步骤。在这种情况下，我们看到第二块中的机器不能被攻击者到达，因为A3,2块是零值。因此，不需要为这些列中的机器采取攻击响应措施。然而，因为A3,1块显示了2到3步的可达性，可以采取措施保护这些列中的机器，尽管不是最高优先级。最高优先级应该是A3,3块中的机器，因为这些机器都可以从检测到的事件在单步内到达。

---

通过这种优化，文本变得更加清晰、连贯和专业，便于读者理解和分析。