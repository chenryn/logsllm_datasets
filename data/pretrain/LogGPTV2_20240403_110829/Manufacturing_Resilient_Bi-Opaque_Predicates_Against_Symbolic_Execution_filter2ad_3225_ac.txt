(cid:19)(cid:148)(cid:135)(cid:134)(cid:139)(cid:133)(cid:131)(cid:150)(cid:135)(cid:149)
Fig. 3: A framework to compose symbolic opaque predicates.
Trace Slicing: A control ﬂow may contain several condi-
tional branches, and each branch requires a constraint model to
be satisﬁed for triggering the branch. We may get the negations
of each constraint model and solve them to generate test cases
that can trigger alternative control ﬂows. This step outputs
several sliced sequences of instructions, each indicating a new
control ﬂow possibility.
Constraint Extraction and Solving: The symbolic execution
engine extracts a condition from each sliced trace, and models
the condition with a contraint modeling language, such as
CVC [14] or SMT-Lib [15]. Then the engine employs a
constraint solver (e.g., STP [16] or Z3 [17]) to solve the
models, and the results are new test cases that can trigger
corresponding control paths. For opaque predicate detection,
the constraint models should be passed to a rule-based opaque
predicate detection engine.
Rule-based Opaque Predicate Detection: The constraint
model generated by a symbolic execution engine is generally
in conjunctive normal form (CNF), i.e., λ1 ∧ λ2 ∧ ... ∧ λn.
Each clause λi
represents a predicate. Then the CNF is
processed according to opaque predicate detection rules, such
as the rules to detect opaque constants, or contextual opaque
predicates [5]. Since the rules are upper-level applications, we
do not discuss their details. Instead, we focus on attacking the
underlying symbolic execution engines. If the generated CNF
is incorrect, it is likely that such attackers would reach false
conclusions.
III. APPROACH
In this section, we ﬁrst introduce our idea to compose
symbolic opaque predicates by attacking the challenges up
against symbolic execution; then we discuss the bi-opaque
property of such opaque predicates; ﬁnally, we demonstrate
how the predicates work in practice.
A. Idea in a Nutshell
Intuitively, we can employ the weakness of symbolic
execution to compose opaque predicates such that they can
evade detection from symbolic execution-based adversaries.
This is feasible because symbolic execution faces some
challenges, and real-world symbolic execution tools have to
adopt heuristic methods to handle them. Introducing such
challenging problems into a program may incur error for
symbolic execution.
668
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:23:23 UTC from IEEE Xplore.  Restrictions apply. 
(cid:139)(cid:144)(cid:150) (cid:136)(cid:151)(cid:144)(cid:133)(cid:4666)(cid:139)(cid:144)(cid:150) (cid:149)(cid:155)(cid:143)(cid:152)(cid:131)(cid:148)(cid:4667)(cid:4668)
(cid:139)(cid:144)(cid:150) (cid:140)(cid:3)(cid:3404)(cid:3)(cid:149)(cid:155)(cid:143)(cid:152)(cid:131)(cid:148)(cid:482)
(cid:139)(cid:144)(cid:150) (cid:142)(cid:883)(cid:820)(cid:131)(cid:148)(cid:155)(cid:4670)(cid:4671)(cid:3)(cid:3404)(cid:3)(cid:4668)(cid:883)(cid:481)(cid:884)(cid:481)(cid:885)(cid:481)(cid:886)(cid:481)(cid:887)(cid:481)(cid:888)(cid:481)(cid:889)(cid:4669)(cid:482)
(cid:139)(cid:144)(cid:150) (cid:142)(cid:884)(cid:820)(cid:131)(cid:148)(cid:155)(cid:4670)(cid:4671)(cid:3)(cid:3404)(cid:3)(cid:4668)(cid:140)(cid:481)(cid:883)(cid:481)(cid:884)(cid:481)(cid:885)(cid:481)(cid:886)(cid:481)(cid:887)(cid:481)(cid:888)(cid:481)(cid:889)(cid:4669)(cid:482)
(cid:139)(cid:144)(cid:150) (cid:139) (cid:3404)(cid:3)(cid:142)(cid:884)(cid:820)(cid:131)(cid:148)(cid:155)(cid:4670)(cid:142)(cid:883)(cid:820)(cid:131)(cid:148)(cid:155)(cid:4670)(cid:140)(cid:936)(cid:889)(cid:4671)(cid:4671)(cid:482)
(cid:139)(cid:136)(cid:4666)(cid:139) (cid:3404)(cid:3404)(cid:3)(cid:140)(cid:4667)
(cid:5)(cid:145)(cid:137)(cid:151)(cid:149)(cid:4666)(cid:4667)(cid:482)
(cid:139)(cid:136)(cid:4666)(cid:139) (cid:3404)(cid:3404)(cid:3)(cid:883)(cid:3)(cid:428)(cid:428)(cid:3)(cid:140)(cid:3)(cid:3404)(cid:3404)(cid:3)(cid:889)(cid:4667)
(cid:9)(cid:145)(cid:145)(cid:4666)(cid:4667)(cid:482)
(cid:883)
(cid:884)
(cid:885)
(cid:886)
(cid:887)
(cid:888)
(cid:889)
(cid:890)
(cid:891)
(cid:883)(cid:882)
(cid:139)(cid:144)(cid:150) (cid:136)(cid:151)(cid:144)(cid:133)(cid:4666)(cid:139)(cid:144)(cid:150) (cid:149)(cid:155)(cid:143)(cid:152)(cid:131)(cid:148)(cid:4667)(cid:4668)
(cid:139)(cid:144)(cid:150) (cid:140)(cid:3)(cid:3404)(cid:3)(cid:149)(cid:155)(cid:143)(cid:152)(cid:131)(cid:148)(cid:482)
(cid:136)(cid:142)(cid:145)(cid:131)(cid:150)(cid:3)(cid:136)(cid:3)(cid:3404)(cid:3)(cid:140)(cid:512)(cid:883)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:484)(cid:882)(cid:482)
(cid:139)(cid:136)(cid:4666)(cid:136)(cid:3404)(cid:3404)(cid:882)(cid:484)(cid:883)(cid:4667)(cid:4668)
(cid:5)(cid:145)(cid:137)(cid:151)(cid:149)(cid:4666)(cid:4667)(cid:482)
(cid:4669)
(cid:139)(cid:136)(cid:4666)(cid:883)(cid:882)(cid:884)(cid:886)(cid:3397)(cid:136)(cid:3)(cid:3404)(cid:3404)(cid:3)(cid:883)(cid:882)(cid:884)(cid:886)(cid:3)(cid:428)(cid:428)(cid:3)(cid:136)(cid:3408)(cid:882)(cid:3)(cid:428)(cid:428)(cid:3)(cid:140)(cid:3404)(cid:3404)(cid:889)(cid:4667)(cid:4668)
(cid:9)(cid:145)(cid:145)(cid:4666)(cid:4667)(cid:482)
(cid:4669)
(cid:4669)
(cid:883)
(cid:884)
(cid:885)
(cid:886)
(cid:887)
(cid:888)
(cid:139)(cid:144)(cid:150) (cid:136)(cid:151)(cid:144)(cid:133)(cid:4666)(cid:139)(cid:144)(cid:150) (cid:149)(cid:155)(cid:143)(cid:152)(cid:131)(cid:148)(cid:4667)(cid:4668)
(cid:139)(cid:144)(cid:150) (cid:140)(cid:3)(cid:3404)(cid:3)(cid:149)(cid:155)(cid:143)(cid:152)(cid:131)(cid:148)(cid:482)
(cid:139)(cid:136)(cid:4666)(cid:140)(cid:3)(cid:3404)(cid:3404)(cid:3)(cid:889)(cid:4667)(cid:4668)
(cid:9)(cid:145)(cid:145)(cid:4666)(cid:4667)(cid:482)(cid:3)
(cid:4669)
(cid:4669)
(cid:883)
(cid:884)
(cid:885)
(cid:886)
(cid:887)
(cid:888)
(cid:889)
(cid:890)
(cid:891)
(cid:883)(cid:882)
(a) Original toy program.
(cid:139)(cid:144)(cid:150) (cid:136)(cid:151)(cid:144)(cid:133)(cid:4666)(cid:139)(cid:144)(cid:150) (cid:149)(cid:155)(cid:143)(cid:152)(cid:131)(cid:148)(cid:4667)(cid:4668)
(cid:139)(cid:144)(cid:150) (cid:139)(cid:481)(cid:3)(cid:140)(cid:3)(cid:3404)(cid:3)(cid:149)(cid:155)(cid:143)(cid:152)(cid:131)(cid:148)(cid:482)
(cid:9)(cid:12)(cid:15)(cid:8)(cid:3)(cid:535)(cid:136)(cid:146) (cid:3404)(cid:3)(cid:136)(cid:145)(cid:146)(cid:135)(cid:144)(cid:4666)(cid:822)(cid:133)(cid:145)(cid:152)(cid:146)(cid:484)(cid:150)(cid:143)(cid:146)(cid:822)(cid:481)(cid:3)(cid:498)(cid:153)(cid:822)(cid:4667)(cid:482)
(cid:139)(cid:136)(cid:4666)(cid:136)(cid:146) (cid:3404)(cid:3404)(cid:3)(cid:17)(cid:24)(cid:15)(cid:15)(cid:4667)(cid:3)(cid:4668)
(cid:135)(cid:154)(cid:139)(cid:150)(cid:4666)(cid:883)(cid:4667)(cid:482)
(cid:4669)
(cid:136)(cid:146)(cid:148)(cid:139)(cid:144)(cid:150)(cid:136)(cid:4666)(cid:136)(cid:146)(cid:481)(cid:822)(cid:936)(cid:134)(cid:822)(cid:481)(cid:140)(cid:4667)(cid:482)
(cid:136)(cid:133)(cid:142)(cid:145)(cid:149)(cid:135)(cid:4666)(cid:136)(cid:146)(cid:4667)(cid:482)
(cid:136)(cid:146) (cid:3404)(cid:3)(cid:136)(cid:145)(cid:146)(cid:135)(cid:144)(cid:4666)(cid:822)(cid:133)(cid:145)(cid:152)(cid:146)(cid:484)(cid:150)(cid:143)(cid:146)(cid:822)(cid:481)(cid:3)(cid:498)(cid:148)(cid:822)(cid:4667)(cid:482)
(cid:136)(cid:149)(cid:133)(cid:131)(cid:144)(cid:136)(cid:4666)(cid:136)(cid:146)(cid:481)(cid:822)(cid:936)(cid:134)(cid:822)(cid:481)(cid:428)(cid:139)(cid:4667)(cid:482)
(cid:883)
(cid:884)
(cid:885)
(cid:886)
(cid:887)
(cid:888)
(cid:889)
(cid:890)
(cid:891)
(cid:883)(cid:882)
(cid:4669)
(cid:883)(cid:883)
(cid:883)(cid:884)
(cid:883)(cid:885)
(cid:883)(cid:886)
(cid:883)(cid:887)
(cid:883)(cid:888)
(cid:883)(cid:889)
(cid:883)(cid:890)
(cid:883)(cid:891)
(cid:884)(cid:882)
(b) Symbolic memory.
(c) Floating-point number.
(cid:136)(cid:133)(cid:142)(cid:145)(cid:149)(cid:135)(cid:4666)(cid:136)(cid:146)(cid:4667)(cid:482)
(cid:139)(cid:136)(cid:4666)(cid:139) (cid:3404)(cid:3404)(cid:3)(cid:889)(cid:4667)(cid:4668)
(cid:9)(cid:145)(cid:145)(cid:4666)(cid:4667)(cid:482)(cid:3)
(cid:4669)
(cid:139)(cid:136)(cid:4666)(cid:139) (cid:488)(cid:3404)(cid:3)(cid:140)(cid:4667)(cid:4668)
(cid:5)(cid:145)(cid:137)(cid:151)(cid:149)(cid:4666)(cid:4667)(cid:482)
(cid:4669)(cid:3)
(cid:4669)
(cid:883)
(cid:884)
(cid:885)
(cid:886)
(cid:887)
(cid:888)
(cid:889)
(cid:890)
(cid:891)
(cid:883)(cid:882)
(cid:139)(cid:144)(cid:150)(cid:888)(cid:886)(cid:820)(cid:150)(cid:3)(cid:23)(cid:138)(cid:148)(cid:135)(cid:131)(cid:134)(cid:19)(cid:148)(cid:145)(cid:146)(cid:4666)(cid:139)(cid:144)(cid:150)(cid:888)(cid:886)(cid:820)(cid:150)(cid:3)(cid:139)(cid:144)(cid:4667)(cid:4668)
(cid:139)(cid:144)(cid:150)(cid:888)(cid:886)(cid:820)(cid:150)(cid:3)(cid:145)(cid:151)(cid:150)(cid:3)(cid:3404)(cid:3)(cid:139)(cid:144)(cid:482)
(cid:146)(cid:150)(cid:138)(cid:148)(cid:135)(cid:131)(cid:134)(cid:820)(cid:150) (cid:150)(cid:139)(cid:134)(cid:482)
(cid:139)(cid:144)(cid:150) (cid:148)(cid:133)(cid:883)(cid:3)(cid:3404)(cid:3)(cid:146)(cid:150)(cid:138)(cid:148)(cid:135)(cid:131)(cid:134)(cid:820)(cid:133)(cid:148)(cid:135)(cid:131)(cid:150)(cid:135)(cid:4666)(cid:428)(cid:150)(cid:139)(cid:134)(cid:481)(cid:3)
(cid:17)(cid:24)(cid:15)(cid:15)(cid:481)(cid:3)(cid:12)(cid:144)(cid:133)(cid:481)(cid:3)(cid:4666)(cid:152)(cid:145)(cid:139)(cid:134)(cid:3)(cid:535)(cid:4667)(cid:3)(cid:428)(cid:145)(cid:151)(cid:150)(cid:4667)(cid:482)(cid:3)(cid:3)
(cid:139)(cid:144)(cid:150) (cid:148)(cid:133)(cid:884)(cid:3)(cid:3404)(cid:3)(cid:146)(cid:150)(cid:138)(cid:148)(cid:135)(cid:131)(cid:134)(cid:820)(cid:133)(cid:148)(cid:135)(cid:131)(cid:150)(cid:135)(cid:4666)(cid:428)(cid:150)(cid:139)(cid:134)(cid:481)(cid:3)
(cid:17)(cid:24)(cid:15)(cid:15)(cid:481)(cid:3)(cid:7)(cid:135)(cid:133)(cid:481)(cid:3)(cid:4666)(cid:152)(cid:145)(cid:139)(cid:134)(cid:3)(cid:535)(cid:4667)(cid:3)(cid:428)(cid:145)(cid:151)(cid:150)(cid:4667)(cid:482)
(cid:146)(cid:150)(cid:138)(cid:148)(cid:135)(cid:131)(cid:134)(cid:820)(cid:140)(cid:145)(cid:139)(cid:144)(cid:4666)(cid:150)(cid:139)(cid:134)(cid:481)(cid:3)(cid:17)(cid:24)(cid:15)(cid:15)(cid:4667)(cid:482)(cid:3)
(cid:148)(cid:135)(cid:150)(cid:151)(cid:148)(cid:144)(cid:3)(cid:145)(cid:151)(cid:150)(cid:482)
(cid:4669)
(cid:883)(cid:883)
(cid:883)(cid:884)
(cid:883)(cid:885)
(cid:883)(cid:886)
(cid:883)(cid:887)
(cid:883)(cid:888)
(cid:883)(cid:889)
(cid:883)(cid:890)
(cid:883)(cid:891)
(cid:884)(cid:882)
(cid:139)(cid:144)(cid:150) (cid:136)(cid:151)(cid:144)(cid:133)(cid:4666)(cid:139)(cid:144)(cid:150) (cid:149)(cid:155)(cid:143)(cid:152)(cid:131)(cid:148)(cid:4667)(cid:4668)
(cid:139)(cid:144)(cid:150) (cid:139)(cid:481)(cid:3)(cid:140)(cid:3)(cid:3404)(cid:3)(cid:149)(cid:155)(cid:143)(cid:152)(cid:131)(cid:148)(cid:482)
(cid:139) (cid:3404)(cid:3)(cid:23)(cid:138)(cid:148)(cid:135)(cid:131)(cid:134)(cid:19)(cid:148)(cid:145)(cid:146)(cid:4666)(cid:140)(cid:4667)(cid:482)
(cid:139)(cid:136)(cid:4666)(cid:139) (cid:3404)(cid:3404)(cid:3)(cid:888)(cid:4667)(cid:4668)
(cid:9)(cid:145)(cid:145)(cid:4666)(cid:4667)(cid:482)(cid:3)
(cid:4669)
(cid:139)(cid:136)(cid:4666)(cid:139) (cid:3404)(cid:3404)(cid:3)(cid:140)(cid:4667)(cid:4668)
(cid:5)(cid:145)(cid:137)(cid:151)(cid:149)(cid:4666)(cid:4667)(cid:482)
(cid:4669)(cid:3)
(cid:4669)
(d) Covert symbolic propagation.
(e) Parallel programming.