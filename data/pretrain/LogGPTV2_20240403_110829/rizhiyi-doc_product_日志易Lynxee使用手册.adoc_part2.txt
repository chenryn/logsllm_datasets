=== 设备配置
日志易 Lynxee 系统提供两种方式创建设备：
* 界面配置
* 从 CSV 导入
==== 界面创建设备
在配置页进入设备标签页，点击"新建"，即可手动创建一个设备对象：
image::images/lynxee-entity-edit.png[]
设备有以下几种属性：
1. 名称: 设备的唯一标识
2. 索引字段值: 设备日志在索引中的标识字段值。当有多个字段都可以唯一标识日志的设备来源时，只需要填写一个即可。在最常见的场景中，设备的索引字段值为hostname，设备名称也同样采用 hostname 值。
3. 附加信息: 其他可以用 CMDB 等第三方来源获取的，有助于运维工作的相关属性。比如设备负责人等。
4. 归属服务: 设备在 IT 系统中所归属的服务。
填写完毕后，点击"保存"即可在返回的列表上看到自己新创建的设备。
==== CSV导入设备
要批量创建多个设备，可以采用 CSV 文件导入的方式。您需要先从公司的配置管理数据库或资产管理数据库中，提前下载和整理成一份 CSV 文件。我们约定 Lynxee 中可导入的 CSV 格式如下：
[source,type=csv]
-------------
name,property1,...,service1/service2...
-------------
在文件第一行，必须指明各列名称。每行代表一个设备，各列是设备属性和所属服务。你可以在导入流程中设置属性类型。设备属于多个服务时，服务内部 ID 以`/`相隔。请提前创建好与名称相应的服务对象。
在配置页进入设备标签页，点击"导入"，即可进入导入流程：
. 选择本地上传，加载准备好的 CSV 文件；
. 进入预览界面，在预览表头上，逐一设定 CSV 每列的属性映射。
. 点击导入，如果存在设备冲突，选择冲突处理策略：
.. 替换
.. 跳过
. 点击完成即可。
image::images/lynxee-entities-import.png[]
=== 全局配置
全局配置中包括以下配置：
* 指标集映射
* 告警发送配置
* 模型配置
* 检测配置
为建立指标体系，需要对接入数据归类映射。
因为指标名称一般以点分割，所以映射配置只需要配置前缀部分即可，可映射多个条件。比如：操作系统分类，映射 os.* 指标；基础设施分类，映射 idc.*, aws.*, azure.* 指标。
目前分类包括基础设施、操作系统、中间件、数据库、业务、其他，
默认未配置或者未命中的，都在其他分类里。
image::images/lynxee/kpi-mapping.png[]
告警发送配置中可以对监控项和日志异常检测告警是否发送进行配置；模型配置中可以对模型是否自动更新以及更新间隔进行配置；检测配置可以对节假日是否检测进行配置。
image::images/lynxee/alert-model-detect-config.png[]
并可以对节假日和工作日进行定义，支持手动和csv上传。
image::images/lynxee/manual-add-holiday-workday.png[]
=== 监控项
Lynxee 采用监控项对象来实际度量 IT 服务的性能。一般而言，IT 系统都会采集大量的指标和状态数据。但多数数据并不具有对最终业务的典型和明确的最终影响。你只需要从海量指标数据中，挑选部分需要密切关注的黄金指标，设置为监控项即可。
导航栏点击打开"指标探索"页面。页面采用树状结构,指标类型名称保留以点分割树状结构的形式，内置第一层级分类，为基础架构，操作系统，中间件，数据库，业务，其他。
image::images/lynxee/kpi-tree.png[]
选择具体某个指标类型后，在左侧可以进一步进行属性过滤。
属性过滤提供两种方式：
快速筛选树：默认由服务+设备两个属性组成。服务名称以点分割为不同层次，最里层为设备名称。
自定义筛选：支持用户任意选择属性和属性值来进行筛选。可以多个属性联合筛选。属性和属性值应支持输入提示。
image::images/lynxee/kpi-tree-filter.png[]
为了跟踪模型的评价在新数据上的效果变化，用户可以搜索相应指标，观察评价报告的趋势图：
image::images/lynxee/kpi-eval-trend.png[]
点击折线图右上角的图标，进入指标训练界面。页面右上部展示指标折线图以及时间选择。时间范围取决于进入配置页前的时间范围长度，你可以重新选择时间展示。
==== 算法原理概述
训练页面下方，展示 Lynxee 目前提供的 6 种指标异常检测算法：
isolationForest(孤立森林)::
该算法是基于树模型的无监督集成算法。在时序数据异常检测中，将窗口化后的多维数据输入模型，得到数据的异常分数。该算法擅长处理与时间不相关的异常，例如极大极小值。这类异常的偏移程度远大于自身的离散程度，适合用在对准确度要求不高、对检测速度要求较高的大量非关键指标上识别平台型异常。要求训练数据包含 1 万个以上的采样点。可配参数包括：
+
* 窗口大小：窗口化指标数据时使用的窗口大小，默认15，窗口越小越敏感。
MovingDiffOutiler(移动差分异常)::
该算法是一种对数据变化率建模的无监督算法。在时序数据异常检测中，将窗口化后的多维数据输入模型，根据历史数据学到的变化率的均值和方差做异常检测，检测出异常的突增或突降。擅长处理单点突增突降的异常，即：正常数据在一定范围内波动，异常数据有较大波动，适合用于对检测速度要求较高且噪音较大的周期性数据，如业务量频繁波动。
+
image::images/lynxee-kpi-ma-example.png[]
+
要求训练数据包含 1 万个以上的采样点。可配参数包括：
+
* 窗口大小：默认为 5
* 使用绝对值模式/比值模式：默认为比值模式。前者用指标值的绝对差值计算变化率，后者用指标值的比值计算变化率。由于一般情况下，指标值较小时，绝对差值更能直观反映指标的变化（比如取值在0-100之间的比率指标），而指标值较大时，比值更能反映指标的变化（如各种业务量）。所以在应用在不同指标时，可以使用不同的模式对变化率建模
CVAE(条件变分自编码器)::
该算法是一种基于变分自编码器（Variational AutoEncoder）的无监督深度学习算法。通过在VAE的网络结构中，加入人为设定的外界条件（例如星期、时间等）来提升对某些特殊模式和业务的适应。主要作用于周期性的业务访问指标(如下图)，需要较长的历史数据进行训练，训练要求至少提供 1 万个以上的采样点，但一般要求最好 4 万个以上。虽然算法允许个别采样点缺失，但采样间隔必须一致。算法加强了对长周期特性的适应，如星期/月份/年度节假日等。该算法训练耗时较长，占用资源较大，但精准度最高。
+
image::images/lynxee-periodic-timeseries-example.png[]
+
可配参数包括：
+
* 是否在训练中添加噪音：添加噪音可以降低实际应用时对微小波动的灵敏度（提升泛化能力）。
* 关心上界：检测过程中数据超出上界的均会被识别为异常。
* 关心下界：检测过程中数据低于下界的均会被识别为异常。
* 时间信息的保留比例：默认为 0.95，如果训练结果对长周期效果过拟合，可以适当调低。
KDE(核密度分析)::
该算法是一种对历史数据分布建模的无监督算法。训练时，对每天处于同一时刻的数据点，选取其相邻一定范围内的点构成一个点集，对点集做核密度分析构造一个核密度模型；对一天中的所有时刻构造一个对应的核模型，则得到了最终的KDE模型。评估时，首先找到待评估点所属的时刻，使用该时刻代表的核密度模型对数据点进行评估。主要用于检测有极其明显的按天类比的分段突变数据。比如证券公司的交易指标，非交易时段完全无数据。如下图所示:
+
image::images/lynxee-trans-timeseries-example.png[]
+
训练要求至少提供 10080 个采样点，但最好提供三周以上数据。可配参数包括：
+
* 决定有多少点会被识别为邻居：决定有多少点会被认为属于“相邻”进而影响学习的点集的大小，用于调节数据量和学习点集之间的平衡，默认为 2。
* 是否使用对称分位点的上下界：默认为否。配置为“否”时，则代表检测时下界对应的灵敏度要更高一些，更关注下界，使得模型对比预期要小的异常更加灵敏。配置为“是”时，则上下界同等关注。
RUBA(比率上界集成异常检测)::
该算法是一种同时考虑数据的值及其变化率的无监督集成算法，针对无周期且只关注单向（升高或降低）变化的指标设计的专属算法，如：CPU/内存使用率、成功率/错误数、延时等。
+
image::images/lynxee-kpi-ruba.png[]
+
RUBA分权重集成三种检测器：比率KDE模型检测器、动态上界阈值检测器、固定阈值检测器。若指标数值较低，则比率 KDE 模型上界的检测结果具有较高权重；若指标数值较高，则动态上界阈值的检测结果具有较高权重，同时辅以固定阈值的约束。可配参数包括：
+
* 指标值的硬上界，异常点也不会超过该上限：即固定阈值。超过该值代表出现非法数据。
* 是否检测数据的向上变化，否则检测向下变化：该配置控制单向检测的方向，比如针对CPU使用率这类关注向上变化的指标，应设置为“是”；针对成功率这类关注向下变化的指标，应设置为“否”。
ProportionZTest(概率Z检验算法)::
该算法是一种基于假设检验的多指标无监督算法，主要应用两个指标存在业务关联时的异常检测。例如：对系统的请求成功率进行指标检测时，判断这类指标的异常不仅需要考虑它们的取值，还要考虑到和它们相关联的请求数的取值；若在请求数很小的时候，单次请求失败会使得成功率急剧下降，但不应视为异常。算法在检测这类关联指标时引入了相关的另一指标用于辅助检测。对于这类关联指标，ProportionZTest在效果和可解释性上要明显强于其他单指标异常检测算法。可配参数包括：
+
* 使用成功模式的ZTest，否则是错误模式：若设置为“是”，用于检测主指标是成功率或者成功数的数据；若设为“否”，则用于检测主指标是错误率或错误数的数据。
* 使用比率模式的ZTest，否则是数量模式：若设置为“是”，用于检测主指标是成功率或错误率的数据，若设为“否”，则用于检测主指标是成功数或错误数的数据。
* 在使用ProportionZTest进行指标检测时，需要预先在日志易 Manager中设置相关指标，配置方式如下：
+
image::images/lynxee-kpi-proportionztest.png[]