X
(
s
g
n
i
t
s
L
i
l
t
a
o
T
f
o
%
 100
 80
 60
 40
 20
 0
 0
 10
Re-listings
De-listings
 30
 20
Duration (days)
 40
 50
s
g
n
i
t
s
i
l
k
c
a
B
l
f
o
r
e
b
m
u
N
 1000
 800
 600
 400
 200
 0
AS-29385 IP Space (256-IP blocks)
(Vertical bar delineates non-contiguous address space)
Figure 1: XBL Durations & Re-listing Rates
Figure 2: Behavioral Variance within an AS
reputation. The PBL is a preventative measure (however,
it is used when examining blacklist performance) which lists
hosts that should never be sending email, on principle.
The mechanism by which a blacklist entry occurs, be it
accurate or otherwise, is beyond the scope of this work. Re-
moval from the blacklist takes two forms: manual de-listing
and timed-expiration. Given its rigorous human mainte-
nance, the SBL follows the former format. The XBL, on
the other hand, defaults to a more automated time-to-live
de-listing policy. Empirical evidence shows the bulk of such
listings expire 5-days after their appearance (see Fig. 1).
However, in the case a blacklisted party can demonstrate
its innocence or show the spam-generating exploit has been
patched, manual removal is also an option for the XBL. Man-
ual de-listings can complicate the calculation of MAX_REP,
but as we will show, worst case spamming behaviors are
rarely realized, permitting strong normalization.
AS Mappings: For the purpose of mapping an IP address
to the Autonomous System(s) (AS(es)) that homes or orig-
inates it, CAIDA [2] reports are used. These are compiled
from Route Views [8] data and are essentially a snapshot of
the BGP routing table.
Email Set: The timestamp and connecting IP address of
approximately 31 million email headers were collected at
the University of Pennsylvania’s engineering email servers
between 8/1/2009 and 12/31/2009. The servers host ap-
proximately 6,100 accounts, of which roughly 5,500 serve
human-users, while the remaining are for various adminis-
trative and school uses (e.g., aliases, lists, etc.).
A considerable number of emails (2.8 million) in the data-
set were both sent and received within the university net-
work. Such emails are not considered in the analysis. Many
intra-network messages are the result of list-serves/aliasing,
and by excluding them, only externally arriving emails are
considered. Our working set is further reduced to 6.1 million
emails when analysis is conducted “above the blacklist,” or
those mails not currently listed on a blacklist (see Sec. 5.1).
A Proofpoint [6] score was provided with each email to cat-
egorize it as either spam or ham (not spam). Proofpoint is a
commercial spam detection service employed by the Univer-
sity whose detection methods are known to include propri-
etary ﬁltering and Bayesian content analysis [24] similar to
that employed by SpamAssassin [1]. Proofpoint claims ex-
tremely high accuracy with a low false-positive rate. Given
no other consistent scoring metric and a lack of access to the
original email bodies, the Proofpoint score is considered the
ground truth in forthcoming analysis.
4.2 Temporal Properties of Spamming IPs
PreSTA leverages the temporal properties of IP blacklists
by aggregating the de-listings and re-listings of blacklist en-
tries. Fig. 1 displays the analysis of those two statistics. Of
IP-addresses de-listed during the experiment period, 26%
were re-listed within 10 days. Overall, 47% of such IPs were
re-listed within 10 weeks, and it is precisely such statistics
that motivate PreSTA’s use of temporal data.
Given that IP addresses are frequently re-listed, we exam-
ined the rate at which de-listing occurs; 80% of XBL entries
were de-listed at, or very close to, 5 days after their entry
(Fig. 1). Even so, this 5-day interval is not ﬁxed. Despite a
non-exact expiration, MAX_REP is well computed using d = 5
(days). Raw reputation values rarely exceeded the calcu-
lated MAX_REP (less than 0.01% of the time).
The SBL requires a manual conﬁrmation of innocence
before de-listing can occur and has no consistent listing
length. Thus, MAX_REP computation cannot proceed as with
the XBL. Instead, the strong assurance provided by de-
listing events can be leveraged in reputation calculation. A
de-listed IP was veriﬁed to be non-spamming, and so there
is no reason to decay entries as they exit the list. Formally,
∀tout, decay(tout) = 0, but as previously, decay(⊥) = 1. In
such circumstances, the MAX_REP value for such IPs is com-
puted as 1 (i.e., the IP address is currently listed).
Adjusting the decay() function in this way permits the
reputations’ of SBL IPs to be based solely on spatial prop-
erties. This is a feature of the reputation model, as it allows
for ﬂexibility in weighing context when it comes to spatial
and temporal information. In a similar way, one can focus
solely on temporal properties by deﬁning singular groups,
and both produce useful spam classiﬁcations (see Sec. 5.7).
4.3 Spatial Properties of Spamming IPs
The hierarchical nature of IP address assignment provides
natural spatial groupings for use by PreSTA. Starting at the
lowest level, a local router or DHCP service assigns IP ad-
dresses to individual machines. The selection pool is likely
well-bounded to a subnet (i.e., a /24 or /16). In turn, these
routers operate within an ISP/AS, which get their alloca-
tions from Regional Internet Registries (RIRs), whose space
is delegated from the Internet Assigned Number Author-
ity [4] (IANA). A clear hierarchy exists, and at each level, a
164
Figure 3: PreSTA Spam Detection Architecture
unique reputation can be applied. We focus our groupings
at the following three levels: (1) the AS(es) that home(s)
the IP, (2) the 768-IP block membership (a rough approxi-
mation of a subnet), and (3) the IP address itself.
Despite its easily partitioned nature,
it remains to be
shown that the IP assignment hierarchy provides relevant
groupings. Previous work and anecdotal evidence suggest
that AS-number is one of the strongest identiﬁers of spam-
mers.
Indeed, entire AS/ISPs, such as McColo [17] and
3FN [18], have been shut down as a result of their malicious
nature. Moreover, in [11], AS-level identiﬁers were used as
a reliable indicator of spamming hosts – indicating that 20
ASes host nearly 42% of spamming IPs.
At the subnet level, it was found that groupings of 768 IP-
addresses (i.e., three adjacent /24s) well contain malicious
activity (see Sec. 5.5 for details). Fig. 2 visualizes the quan-
tity of of XBL listings in /24 blocks of the address space
for an ISP in Uzbekistan. Clearly, there is strong variance
across the address space – some regions are highly listed
while others are not. The AS-level reputation of this ISP
is comparatively poor due to the quantity of listings, but
within the address space, certain block-level reputations are
ideal. This suggests that AS-level reputation alone may be
too broad a metric.
Finally, using a grouping function that singularly groups
entities eﬀectively removes spatial relevance from reputation
computation. Intuitively, the reputation of a single IP ad-
dress should be considered because many mail servers use
static addresses. However, the often dynamic nature of ad-
dress assignment implies that unique IP addresses are not
singular groupings, but rather, could represent many diﬀer-
ent machines over time. A recent study reported that the
percentage of dynamically assigned IP addresses1 on the In-
ternet is substantial and that 96% of mail servers using dy-
namic IPs send spam almost exclusively [31].
5. SPAM IMPLEMENTATION
In this section the implementation of PreSTA for spam
detection is described.
It is designed with three primary
goals: It should produce a classiﬁer that is (1) lightweight;
(2) capable of detecting a large quantity of spam; and (3)
do so with a low false-positive rate. Design decisions are
justiﬁed with respect to these goals. Further, the practical
concerns of such an implementation are discussed.
The work-ﬂow begins when an email is received and the
connecting IP address and timestamp are recorded. Assum-
ing the IP is not actively blacklisted, PreSTA is brought to
bear. The IP is mapped to its respective spatial groupings:
itself, its subnet, and its originating AS(es). Reputations
1Recall that Spamhaus’ PBL blacklist is essentially a listing
of dynamic IP addresses. It is constructed mainly using ISP-
provided data, and as such, is far from a complete listing.
are calculated at each granularity and these component rep-
utations are supplied as input to a machine-learning clas-
siﬁer trained over previous email. The output is a binary
ham/spam label along with each of the three component
reputations – all of which may be used by a client applica-
tion. This procedure is now described in detail, and a visual
reference of the PreSTA work-ﬂow is presented in Fig. 3.
5.1 Traditional Blacklists
In Sec. 4.1 the Spamhaus blacklists were introduced. They
not only provide the basis on which reputations are built,
but in an implementation of PreSTA, it is natural to apply
them as intended – to label emails originating from currently
active IPs as spam. When applied to the email data-set, the
blacklists (PBL included) captured 91.0% of spam with a
0.74% false-positive rate. This detection rate is somewhat
higher than previous published statistics2 [15].
Had the intra-network emails not been excluded from anal-
ysis, the blacklists would have captured a similar 90.9% of
spam emails with a much-reduced 0.46% false-positive rate.
The exclusion of such emails, while inﬂating false-positive
rates, permits concentration only on the more interesting set
of externally-received emails and does not bias results. The
usage of blacklists (independent of spatio-temporal proper-
ties), enables fast detection of a large portion of spam emails
with minimal time and space requirements – the active list-
ing requires roughly 100MB of storage.
Given the temporal statistics presented in Sec. 4.2, we also
experimented with increasing the blacklists’ listing period
to determine if simple policy changes could greatly aﬀect
blacklist performance. This was not the case; increasing the
active duration of expired listings (but not those suspected
of being manually de-listed) by 5 days increased the detec-
tion rate less than 0.05%, and longer listing durations show
minimal accuracy improvements at the expense of signiﬁcant
increases in false-positive rates.
5.2 Historical Database
Before reputation can be calculated, a historical feedback
database must be in place. As described, Spamhaus black-
lists are retrieved at 30-minute intervals. The diff is cal-
culated between consecutive copies and time-stamped en-
tries/exits are written to a database. When a new listing
appears, the spatial groups (IP, subnet, and AS(es)) that IP
is a member of are permanently recorded. For example, if
IP i was blacklisted as a member of AS a, that entry will
always be a part of a’s blacklist history.
Roughly 1GB of space is suﬃcient to store one month’s
blacklist history (the XBL has 1.0–1.5 million IPs turn over
on a daily basis). Fortunately, an extensive history is not
2Our analysis of blacklist performance is from a single-
perspective and may not speak to global eﬀectiveness.
165
a
e
r
A
F
D
C
Plotted area is sum of
component-level areas
 0
 10
 20
 30
 40
 50
Half-life (days)
Figure 4: Aﬀect of Half-Life on CDF Area
required given the exponential decay() function3. For ex-
ample, given a 10-day half-life, a 3-month old XBL entry
contributes 0.6% the weight of an active listing. Lengthy
histories oﬀer diminishing returns. To save space, one should
discard records incapable of contributing statistical signiﬁ-
cance. Further, such removal saves computation time be-
cause the smaller the set hist() returns, the fewer values
which must be processed by raw rep().
5.3 Grouping Functions
Given an entity (IP address) for which to calculate repu-
tation, three grouping functions are applied:
• IP Function: An IP is a group in and of itself, so
such a grouping function mirrors its input.
• Subnet Function: IP subnet boundaries are not pub-
licly available. Instead, an estimate considers blocks
of IP addresses (we use the terms “subnet-level” and
“block-level” interchangeably). IP space is partitioned
into /24s (256 IP segments), and an IP’s block group-
ing consists of the segment in which it resides as well
as the segment on either side; 768 addresses per block.
Thus, block groupings overlap in the address space,
and a single IP input returns one block of IPs (three
/24s). Although such estimations may overﬂow known
AS boundaries, these na¨ıve blocks prove eﬀective.
• AS Function: Mapping an IP to its parent AS(es) re-
quires CAIDA [2] and RouteViews [8] data. Note that
some AS boundaries overlap in address space and some
portions of that space (i.e., unallocated portions) have
no resident AS whatsoever. An IP can be homed by
any number of ASes, including none at all, the techni-
cal considerations of which are addressed in Sec. 5.5.
The function’s output is all the IPs homed by an AS(es)
in which the input IP is a member. Each returned IP is
tagged with the parent AS(es), so a well-deﬁned subset
of the output can be chosen.
5.4 Decay Function
The decay function (Sec. 3.1) controls the extent to which
temporal proximity factors into reputation. It is conﬁgured
via its half-life, h. If h is too small, reputations will decay
rapidly and provide little beneﬁt over using blacklists alone.
Too large an h will cause an increase in false positives due
to stale information.
A good half-life will maximize the diﬀerence between the
reputations of spam and ham email. Analyzing email pre-
dating the evaluation period, the reputation-CDFs for both
spam and ham emails (as in Fig. 6) were plotted using diﬀer-
ent h, seeking to maximize the area between the curves. In
Fig. 4 the calculations from these experiments are presented.
A value of h = 10 (days) was found optimal and this value is
used in the spam application4. With the half-life established
and having chosen d = 5 (days), MAX_REP= 4.14.
As described previously, two separate decay() functions
are employed depending on whether a listing appeared on
the SBL or the XBL. Manually maintained, de-listing from
the SBL is not decayed, but the XBL is decayed using the
aforementioned 10-day half-life. A special ﬂag attached to
each time pair returned by hist() allows both listings to be
used in combination.
5.5 Reputation Calculation
Given the feedback database (Sec. 5.2), output (sets of IP
addresses) of the three grouping functions (Sec. 5.3), and
the decay function (Sec. 5.4), reputation may now be calcu-
lated at each granularity, returning three reputation values.
Calculation closely follows as described in Sec. 3.1.
Calculation of IP-level and subnet-level reputation is
straightforward per the reputation model with size() = 1
and size() = 768, respectively. The particulars of AS-level
calculation are more interesting. An IP may be a member
of any quantity of ASes, including none at all. If an IP is
multi-homed, the conservative choice is made by selecting
the most reputable AS-level reputation. Those IPs mapping
to no AS form their own group, and the reputation for this
group is designated as 0 because, in general, unallocated
space is only used for malicious activity (see Sec. 7). In this
spatial grouping, size() is not constant over time. Instead,
magnitudes are pre-computed for all AS using CAIDA data
and updated as BGP routes change.
5.6 Calculation Optimizations
PreSTA must calculate reputation eﬃciently to achieve
the desired scalability. It should not signiﬁcantly slow email
delivery (latency), and it should be capable of handling
heavy email loads (bandwidth). Caching strategies and other
techniques that support these goals are described below:
• AS Value Caching: Reputations for all ASes are