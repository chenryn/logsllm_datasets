### Postfix Configuration Parameters

- **bounce_notice_recipient**  
  Default: `postmaster`  
  Description: Specifies the recipient for bounce notifications.

- **smtp_connect_timeout**  
  Default: `30s`  
  Description: Sets the timeout for establishing an SMTP connection.

- **fault_injection_code**  
  Default: `0`  
  Description: Controls the injection of faults for testing purposes.

- **unknown_client_reject_code**  
  Default: `450`  
  Description: Specifies the rejection code for unknown clients.

- **virtual_minimum_uid**  
  Default: `100`  
  Description: Sets the minimum user ID for virtual users.

- **fast_flush_domains**  
  Default: `$relay_domains`  
  Description: Defines the domains for which fast flushing is enabled.

- **default_database_type**  
  Default: `hash`  
  Description: Specifies the default database type used by Postfix.

- **dont_remove**  
  Default: `0`  
  Description: Controls whether certain files should be removed.

- **expand_owner_alias**  
  Default: `no`  
  Description: Determines if owner aliases should be expanded.

- **max_idle**  
  Default: `100s`  
  Description: Sets the maximum idle time for a connection.

- **defer_transports**  
  Default: `""`  
  Description: Lists the transports that should be deferred.

- **qmgr_message_recipient_minimum**  
  Default: `10`  
  Description: Sets the minimum number of recipients per message.

- **invalid_hostname_reject_code**  
  Default: `501`  
  Description: Specifies the rejection code for invalid hostnames.

- **fork_attempts**  
  Default: `5`  
  Description: Sets the number of fork attempts before giving up.

- **allow_untrusted_routing**  
  Default: `no`  
  Description: Allows or disallows untrusted routing.

### IMAP Configuration Parameters

- **tls_cipher_list:**  
  Default: `DEFAULT`  
  Description: Specifies the list of TLS ciphers to use.

- **umask**  
  Default: `077`  
  Description: Sets the file creation mask.

- **tls_ca_path**  
  Default: `""`  
  Description: Specifies the path to the CA certificate directory.

- **pop_auth_gssapi**  
  Default: `yes`  
  Description: Enables GSSAPI authentication for POP.

- **sasl_minimum_layer**  
  Default: `0`  
  Description: Sets the minimum SASL security layer.

- **tls_cert_file**  
  Default: `""`  
  Description: Specifies the path to the TLS certificate file.

- **poptimeout**  
  Default: `10`  
  Description: Sets the POP timeout in seconds.

- **tls_sieve_require_cert**  
  Default: `no`  
  Description: Requires a valid client certificate for Sieve script management.

- **mupdate_server**  
  Default: `""`  
  Description: Specifies the MUPDATE server.

- **timeout**  
  Default: `30`  
  Description: Sets the general timeout in seconds.

- **quotawarn**  
  Default: `90`  
  Description: Sets the quota warning threshold in percent.

- **enable_pop**  
  Default: `no`  
  Description: Enables or disables POP service.

- **mupdate_retry_delay**  
  Default: `20`  
  Description: Sets the retry delay for MUPDATE in seconds.

- **tls_session_timeout**  
  Default: `1440`  
  Description: Sets the TLS session timeout in minutes.

- **postmaster**  
  Default: `postmaster`  
  Description: Specifies the postmaster address.

- **defaultacl**  
  Default: `anyone lrs`  
  Description: Sets the default ACL for mailboxes.

- **tls_lmtp_key_file**  
  Default: `""`  
  Description: Specifies the path to the LMTP TLS key file.

- **newsprefix**  
  Default: `""`  
  Description: Specifies the prefix for news folders.

- **userprefix**  
  Default: `Other Users`  
  Description: Specifies the prefix for user folders.

- **deleteright**  
  Default: `c`  
  Description: Sets the delete right for mailboxes.

- **allowplaintext**  
  Default: `yes`  
  Description: Allows plaintext login.

- **pop_auth_clear**  
  Default: `no`  
  Description: Enables clear-text authentication for POP.

- **imapidresponse**  
  Default: `yes`  
  Description: Enables the IMAP ID response.

- **sasl_auto_transition**  
  Default: `no`  
  Description: Enables automatic SASL transition.

- **mupdate_port**  
  Default: `""`  
  Description: Specifies the MUPDATE port.

- **admins**  
  Default: `cyrus`  
  Description: Specifies the administrators for the IMAP server.

- **plaintextloginpause**  
  Default: `0`  
  Description: Sets the pause for plaintext logins.

- **popexpiretime**  
  Default: `0`  
  Description: Sets the expiration time for POP messages.

- **pop_auth_any**  
  Default: `no`  
  Description: Enables any authentication method for POP.

- **sieve_maxscriptsize**  
  Default: `32`  
  Description: Sets the maximum Sieve script size in kilobytes.

- **hashimapspool**  
  Default: `no`  
  Description: Hashes the IMAP spool.

- **tls_lmtp_cert_file**  
  Default: `""`  
  Description: Specifies the path to the LMTP TLS certificate file.

- **tls_sieve_key_file**  
  Default: `""`  
  Description: Specifies the path to the Sieve TLS key file.

- **sievedir**  
  Default: `/usr/sieve`  
  Description: Specifies the directory for Sieve scripts.

- **debug_command**  
  Default: `""`  
  Description: Specifies the debug command.

- **popminpoll**  
  Default: `0`  
  Description: Sets the minimum poll interval for POP.

- **tls_lmtp_require_cert**  
  Default: `no`  
  Description: Requires a valid client certificate for LMTP.

- **tls_ca_file**  
  Default: `""`  
  Description: Specifies the path to the CA certificate file.

- **sasl_pwcheck_method**  
  Default: `auxprop`  
  Description: Specifies the SASL password check method.

- **postuser**  
  Default: `""`  
  Description: Specifies the postuser.

- **sieve_maxscripts**  
  Default: `5`  
  Description: Sets the maximum number of Sieve scripts.

- **defaultpartition**  
  Default: `default`  
  Description: Specifies the default partition.

- **altnamespace**  
  Default: `yes`  
  Description: Enables or disables alternative namespaces.

- **max_imap_connections**  
  Default: `100`  
  Description: Sets the maximum number of IMAP connections.

- **tls_imap_cert_file**  
  Default: `""`  
  Description: Specifies the path to the IMAP TLS certificate file.

- **sieveusehomedir**  
  Default: `no`  
  Description: Uses the home directory for Sieve scripts.

- **reject8bit**  
  Default: `no`  
  Description: Rejects 8-bit characters.

- **tls_sieve_cert_file**  
  Default: `""`  
  Description: Specifies the path to the Sieve TLS certificate file.

- **imapidlepoll**  
  Default: `60`  
  Description: Sets the IMAP idle poll interval in seconds.

- **srvtab**  
  Default: `/etc/srvtab`  
  Description: Specifies the path to the srvtab file.

- **imap_auth_login**  
  Default: `no`  
  Description: Enables LOGIN authentication for IMAP.

- **tls_pop3_cert_file**  
  Default: `""`  
  Description: Specifies the path to the POP3 TLS certificate file.

- **tls_pop3_require_cert**  
  Default: `no`  
  Description: Requires a valid client certificate for POP3.

- **lmtp_overquota_perm_failure**  
  Default: `no`  
  Description: Treats over-quota as a permanent failure for LMTP.

- **tls_imap_key_file**  
  Default: `""`  
  Description: Specifies the path to the IMAP TLS key file.

- **enable_imap**  
  Default: `no`  
  Description: Enables or disables IMAP service.

- **tls_require_cert**  
  Default: `no`  
  Description: Requires a valid client certificate for TLS.

- **autocreatequota**  
  Default: `0`  
  Description: Sets the auto-create quota.

- **allowanonymouslogin**  
  Default: `no`  
  Description: Allows anonymous login.

- **pop_auth_apop**  
  Default: `yes`  
  Description: Enables APOP authentication for POP.

- **partition-default**  
  Default: `/var/spool/imap`  
  Description: Specifies the default partition path.

- **imap_auth_cram_md5**  
  Default: `no`  
  Description: Enables CRAM-MD5 authentication for IMAP.

- **mupdate_password**  
  Default: `""`  
  Description: Specifies the MUPDATE password.

- **idlesocket**  
  Default: `/var/imap/socket/idle`  
  Description: Specifies the idle socket path.

- **allowallsubscribe**  
  Default: `no`  
  Description: Allows all subscriptions.

- **singleinstancestore**  
  Default: `yes`  
  Description: Enables single instance store.

- **unixhierarchysep**  
  Default: `yes`  
  Description: Uses the Unix hierarchy separator.

- **mupdate_realm**  
  Default: `""`  
  Description: Specifies the MUPDATE realm.

- **sharedprefix**  
  Default: `Shared Folders`  
  Description: Specifies the shared folder prefix.

- **tls_key_file**  
  Default: `""`  
  Description: Specifies the path to the TLS key file.

- **lmtpsocket**  
  Default: `/var/imap/socket/lmtp`  
  Description: Specifies the LMTP socket path.

- **configdirectory**  
  Default: `/var/imap`  
  Description: Specifies the configuration directory.

- **sasl_maximum_layer**  
  Default: `256`  
  Description: Sets the maximum SASL security layer.

- **sendmail**  
  Default: `/usr/sbin/sendmail`  
  Description: Specifies the path to the sendmail executable.

- **loginuseacl**  
  Default: `no`  
  Description: Uses ACL for login.

- **mupdate_username**  
  Default: `""`  
  Description: Specifies the MUPDATE username.

- **imap_auth_plain**  
  Default: `no`  
  Description: Enables PLAIN authentication for IMAP.

- **imap_auth_any**  
  Default: `no`  
  Description: Enables any authentication method for IMAP.

- **duplicatesuppression**  
  Default: `yes`  
  Description: Suppresses duplicate messages.

- **notifysocket**  
  Default: `/var/imap/socket/notify`  
  Description: Specifies the notify socket path.

- **tls_imap_require_cert**  
  Default: `no`  
  Description: Requires a valid client certificate for IMAP.

- **imap_auth_clear**  
  Default: `yes`  
  Description: Enables clear-text authentication for IMAP.

- **tls_pop3_key_file**  
  Default: `""`  
  Description: Specifies the path to the POP3 TLS key file.

- **proxyd_allow_status_referral**  
  Default: `no`  
  Description: Allows status referral for proxyd.

- **servername**  
  Default: `""`  
  Description: Specifies the server name.

- **logtimestamps**  
  Default: `no`  
  Description: Logs timestamps.

- **imap_auth_gssapi**  
  Default: `no`  
  Description: Enables GSSAPI authentication for IMAP.

- **mupdate_authname**  
  Default: `""`  
  Description: Specifies the MUPDATE authname.

- **enable_mailman**  
  Default: `no`  
  Description: Enables or disables Mailman.

### Mail Serveradmin Commands

- **getHistory**  
  Description: Views a periodic record of file data throughput or number of user connections. See “Listing Mail Service Statistics” on page 117.

- **getLogPaths**  
  Description: Displays the locations of the Mail service logs. See “Viewing the Mail Service Logs” on page 118.

- **writeSettings**  
  Description: Equivalent to the standard serveradmin settings command, but also returns a setting indicating whether the service needs to be restarted. See “Determining Whether a Service Needs to be Restarted” on page 19.

### Listing Mail Service Statistics

You can use the `serveradmin getHistory` command to display a log of periodic samples of the number of user connections and the data throughput. Samples are taken once each minute.

**To list samples:**
```sh
$ sudo serveradmin command
mail:command = getHistory
mail:variant = statistic
mail:timeScale = scale
Control-D
```

**Output:**
- **mail:nbSamples**  
  Description: The total number of samples listed.
- **mail:v2Legend**  
  Description: "throughput"
- **mail:samplesArray:_array_index:0:vn**  
  Description: The numerical value of the sample (bytes/sec).
- **mail:samplesArray:_array_index:0:t**  
  Description: The time at which the sample was measured (UNIX time).
- **mail:v1Legend**  
  Description: "connections"
- **afp:currentServerTime**  
  Description: The current server time.

**Parameters:**
- **statistic**  
  Description: The value you want to display. Valid values: `v1` (number of connected users) and `v2` (data throughput).
- **scale**  
  Description: The length of time in seconds for which you want to see samples. For example, to see 24 hours of data, specify `mail:timeScale = 86400`.

### Viewing the Mail Service Logs

You can use `tail` or any other file listing tool to view the contents of the Mail service logs.

**To view the latest entries in a log:**
```sh
$ tail log-file
```

**To display the log locations:**
```sh
$ sudo serveradmin command mail:command = getLogPaths
```

**Output:**
- **mail:Server Log**  
  Description: The location of the server log. Default: `srvr.log`
- **mail:Lists qrunner**  
  Description: The location of the Mailing Lists log. Default: `/private/var/mailman/logs/qrunner`
- **mail:Lists post**  
  Description: The location of the Mailing Lists Postings log. Default: `/private/var/mailman/logs/post`
- **mail:Lists smtp**  
  Description: The location of the Mailing Lists Delivery log. Default: `/private/var/mailman/logs/smtp`
- **mail:Lists subscribe**  
  Description: The location of the Mailing Lists Subscriptions log. Default: `/private/var/mailman/logs/subscribe`
- **mail:SMTP Log**  
  Description: The location of the SMTP log. Default: `smtp.log`
- **mail:POP Log**  
  Description: The location of the POP log. Default: `pop3.log`
- **mail:Lists error**  
  Description: The location of the Mailing Lists Error log. Default: `/private/var/mailman/logs/error`
- **mail:IMAP Log**  
  Description: The location of the IMAP log. Default: `imap.log`
- **mail:Lists smtp-failure**  
  Description: The location of the Mailing Lists Delivery Failures log. Default: `/private/var/mailman/logs/smtp-failure`

### Setting Up SSL for Mail Service

Mail service requires some configuration to provide Secure Sockets Layer (SSL) connections automatically. The basic steps are as follows:

1. **Generate a Certificate Signing Request (CSR) and create a keychain.**
2. **Obtain an SSL certificate from an issuing authority.**
3. **Import the SSL certificate into the keychain.**
4. **Create a passphrase file.**

#### Generating a CSR and Creating a Keychain

To begin configuring Mail service for SSL connections, you generate a CSR and create a keychain using the `certtool` command-line tool.

1. **Log in to the server as root.**
2. **In the Terminal application, type the following two commands:**
   ```sh
   $ cd /private/var/root/Library/Keychains/
   $ /usr/bin/certtool r csr.txt k=certkc c
   ```
   This use of the `certtool` command begins an interactive process that generates a CSR in the file `csr.txt` and creates a keychain named `certkc`.

3. **In the New Keychain Passphrase dialog, enter a passphrase or password for the keychain, verify it, and click OK.**
   - Remember this passphrase, as you will need it later.

4. **When prompted, enter a one-word key and a one-word certificate label, then press Return.**
   - For example, you could type your organization’s name as the key and `mailservice` as the certificate label.

5. **Type `r` when prompted to select a key algorithm, then press Return.**
   - Valid options: `r` (RSA), `d` (DSA), `f` (FEE).

6. **Type a key size at the next prompt, then press Return.**
   - Valid key sizes for RSA are 512..2048; default is 512.
   - Larger key sizes are more secure but require more processing time. Key sizes smaller than 1024 may not be accepted by some certificate-issuing authorities.

7. **Type `y` when prompted to confirm the algorithm and key size, then press Return.**

8. **Type `b` when prompted to specify how this certificate will be used, then press Return.**
   - Valid options: `s` (signing), `b` (signing AND encrypting).

9. **Type `s` when prompted to select a signature algorithm, then press Return.**
   - Valid options: `5` (RSA with MD5), `s` (RSA with SHA1).

10. **Type `y` when asked to confirm the selected algorithm, then press Return.**

11. **Enter a phrase or some random text when prompted to enter a challenge string, then press Return.**

12. **Enter the correct information at the next five prompts, which request the various components of the certificate’s Relative Distinguished Name (RDN), pressing return after each entry.**
    - **Common Name:** Enter the server's DNS name, such as `server.example.com`.
    - **Country:** Enter the country in which your organization is located.
    - **Organization:** Enter the organization to which your domain name is registered.
    - **Organizational Unit:** Enter something similar to a department name.
    - **State/Province:** Enter the full name of your state or province.

13. **Type `y` when asked to confirm the information you entered, then press Return.**
    - When you see a message about writing to `csr.txt`, you have successfully generated a CSR and created the keychain that Mail service needs for SSL connections.

#### Obtaining an SSL Certificate

After generating a CSR and a keychain, you continue configuring Mail service for automatic SSL connections by purchasing an SSL certificate from a certificate authority such as Verisign or Thawte. You can do this by completing a form on the certificate authority’s website. When prompted for your CSR, open the `csr.txt` file using a text editor such as TextEdit, then copy and paste the contents of the file into the appropriate field on the certificate authority’s website.

- **Verisign:** [www.verisign.com](http://www.verisign.com)
- **Thawte:** [www.thawte.com](http://www.thawte.com)

When you receive your certificate, save it in a text file named `sslcert.txt`. Ensure the file is plain text and contains only the certificate text.

#### Importing an SSL Certificate Into the Keychain

To import an SSL certificate into a keychain, use the `certtool` command-line tool.

1. **Log in to the server as root.**
2. **Open the Terminal application.**
3. **Go to the directory where the saved certificate file is located.**
   - For example, type `cd /private/var/root/Desktop` and press Return if the certificate file is saved on the desktop of the root user.

4. **Type the following command and press Return:**
   ```sh
   certtool i sslcert.txt k=certkc
   ```
   - This imports the certificate from the file `sslcert.txt` into the keychain named `certkc`.

A message on screen confirms that the certificate was successfully imported.

#### Creating a Passphrase File

To create a passphrase file, use TextEdit, then change the privileges of the file using the Terminal application. This file contains the passphrase you specified when you created the keychain. Mail service will automatically use the passphrase file to unlock the keychain that contains the SSL certificate.

1. **Log in to the server as root (if you’re not already logged in as root).**
2. **In TextEdit, create a new file and type the passphrase exactly as you entered it when you created the keychain.**
   - Do not press Return after typing the passphrase.
3. **Make the file plain text by choosing Make Plain Text from the Format menu.**
4. **Save the file, naming it `cerkc.pass`.**
5. **Move the file to the root keychain folder.**
   - The path is `/private/var/root/Library/Keychains/`.
   - To see the root keychain folder in the Finder, choose Go to Folder from the Go menu, then type `/private/var/root/Library/Keychains/` and click Go.
6. **In the Terminal application, change the access privileges to the passphrase file so only root can read and write to this file.**
   - Type the following two commands, pressing Return after each one:
     ```sh
     cd /private/var/root/Library/Keychains/
     chmod 600 certkc.pass
     ```

Mail service of Mac OS X Server can now use SSL for secure IMAP connections.

7. **Log out as root.**

**Note:** If Mail service is running, you need to stop it and start it again to make it recognize the new certificate keychain.

### Setting Up SSL for Mail Service on a Headless Server

If you want to set up SSL for Mail service on a server that doesn’t have a display, follow the instructions in the sections:

- **Generating a CSR and Creating a Keychain** (page 119)
- **Obtaining an SSL Certificate** (page 121)
- **Importing an SSL Certificate Into the Keychain** (page 121)
- **Creating a Passphrase File** (this page)

Then copy the keychain file `certkc` and the keychain passphrase file `certkc.pass` to the root keychain folder on the headless server. The path on the headless server is `/private/var/root/Library/Keychains/`.

### Working With Web Technologies

Commands you can use to manage Web service in...

---

This document provides a comprehensive and structured overview of the configuration parameters and commands for managing Postfix, IMAP, and Mail services, including detailed steps for setting up SSL.