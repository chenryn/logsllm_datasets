### 5.2 Comparison of Completion Rates and Performance

We first compare the completion rates for Fury Route and iPlane. For Fury Route, the "RIPE filtered" curve in Figure 4 shows a median completion rate of approximately 80%. In contrast, our evaluation of iPlane indicates a completion rate of 56% for the "RIPE filtered" set.

Next, we analyze the performance of both systems in terms of matching RTT measurements when completion is possible. Figure 5 presents the cumulative distribution function (CDF) of the fraction of matched comparisons for each origin across all possible pairs. The performance of Fury Route and iplane is virtually identical in the median case. Notably, Fury Route achieves comparable performance to iPlane using only DNS and CDN deployment properties, rather than relying on iPlane's extensive back-end measurement network, and significantly outperforms iPlane in many cases.

### 5.3 Rank Performance

In this section, we evaluate Fury Route's performance on a different platform, Planet Lab, to determine how well it estimates the relative ordering given by RTT measurements in a 60-node full mesh scenario. We consider all possible pairwise comparisons between destinations for each origin, resulting in up to 1770 comparisons per origin, depending on the completion rate.

Figure 6 shows a CDF of the fraction of matched comparisons for each origin. The dotted line on the left represents all possible pairs. This result is similar to that shown in Figure 5. Each other line in the figure indicates the performance for the subset of comparisons with a minimum distance between path RTTs of δ. For example, for an origin S, δ = 25 includes all pairs of destinations A and B where |RTT(S, A) - RTT(S, B)| > 25 ms. For our set of hosts, 71% of pairs were in δ > 25, 54% in δ > 50, and 29% in δ > 100. In nearly all cases, Fury Route achieves over 50% performance in terms of matches. Additionally, increasing the difference between the origin and destination improves performance. The best case, with a difference of δ = 100, results in 83% of comparisons being correct in the median case.

Many of Fury Route's misestimates are due to limitations in the underlying CDN infrastructure. Targets in areas with limited deployments, such as Africa, South America, or when crossing oceans, result in greater error in the initial hops, degrading the estimates. Figure 6 clearly illustrates this trade-off: when comparing similar distances, Fury Route becomes less accurate as noise begins to dominate.

### 5.4 Overhead Analysis

Fury Route leverages a graph-based approach to provide a simple and effective caching mechanism. This allows the system to reuse the graph for multiple measurements from a single origin, which is the expected use case. With sufficient caching, queries can be executed in seconds, making Fury Route viable as a real-time estimation tool.

To quantify the benefits of graph caching, we conducted an experiment where we randomly sampled 50 Planet Lab nodes as origins. For each origin, we randomly sampled 200 addresses from IPv4 space and constructed chains from each origin to each corresponding destination, reusing the graph for each origin.

Figure 7 presents the average number of queries for each origin. The x-axis indicates the query index, or how many times the graph has been reused, and the y-axis shows the average number of queries, with error bars representing the standard deviation. The initial chain requires an average of 250 queries to complete but quickly decreases, needing only 65 queries by the 10th chain constructed with the graph. After 20 chains are constructed, the average number of queries drops below 50.

### 6 Related Work

A significant body of work has focused on predicting network performance. This includes large-scale measurement platforms [18, 19, 24-26], which aim to measure a large number of routes and hosts from multiple vantage points. Other systems have used coordinate systems based on measurements to known landmarks or peers to estimate network distances without direct measurements [13-15, 21, 27, 31]. Unlike these, Fury Route outsources direct network measurements to underlying CDNs, requiring no access to the measured endpoints or third-party infrastructure.

King [16] explored how latency can be indirectly measured by considering the latency between two nearby DNS resolvers. While similar to Fury Route in not requiring direct participation of either host, King's method requires a nearby open recursive resolver and authoritative server. However, the number of open recursive DNS servers is rapidly decreasing, making this approach less feasible [17].

The use of CDN redirections has been shown to be effective for relative network positioning [20, 29, 30]. If two clients have overlapping CDN replicas, they are likely to be close to each other in the network sense. This approach has been utilized by large-scale systems like BitTorrent [11]. Unlike such systems, which require a large-scale distributed infrastructure, Fury Route has no such limitation and can connect any two endpoints on the Internet.

Finally, the use of ECS [12] as a measurement tool was the key principle in [10, 28]. While these works also use ECS to obtain client-mapping information from existing infrastructure, their goal is to explore specific CDN deployments. Fury Route, on the other hand, uses CDNs to perform network distance estimation.

### 7 Conclusions

We presented Fury Route, a system that builds on the underlying client mapping performed by CDNs and the potential of the EDNS client subnet extension. Fury Route is the only Internet-scale system that provides an infrastructure-free mechanism to estimate the distance between remote hosts, without requiring a measurement infrastructure or administrative manpower. It constructs chains of responses and uses the lengths of these chains to estimate the relative network distance between remote hosts, without any direct network measurements. We demonstrated that Fury Route can construct chains to over 80% of destinations in the median case and matches the accuracy of infrastructure-dependent systems like iPlane. We also showed the potential for caching, with significant capability for caching route graphs, allowing the rapid construction of chains with fewer than 50 queries. Given its lack of requirement for directly controlled measurement infrastructure, low overhead, and ability to measure between arbitrary hosts, Fury Route stands to be a practical and powerful tool for estimating relative network distance.

### References

[References remain unchanged]

This revised version aims to improve clarity, coherence, and professionalism while maintaining the original content and structure.