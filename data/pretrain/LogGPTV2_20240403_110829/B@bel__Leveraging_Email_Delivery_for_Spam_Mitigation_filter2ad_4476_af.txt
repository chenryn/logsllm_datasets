sender-based techniques have coverage problems: pre-
vious work showed how IP blacklists miss detecting a
large fraction of the IP addresses that are actually sending
spam, especially due to the highly dynamic nature of the
machines that send spam (typically botnets) [32, 37, 38].
Our method is a novel, third approach that focuses on
how messages are sent. This avoids costly content anal-
ysis, and does not require the design and implementa-
tion of a reputation metric or blacklist. In contrast, we
attempt to recognize the SMTP dialect during the ac-
tual SMTP transaction, and our empirical results show
that this approach can successfully discriminate between
spam and ham emails. This complements both pre-
acceptance and post-acceptance approaches. Another
work that went in this direction was done by Beverly et
al. [5] and Kakavelakis et al. [19]. The authors of these
two papers leveraged the fact that spambots have often
bad connections to the Internet, and perform spam detec-
tion by looking at TCP-level features such as retransmis-
sions and connection resets. Our system is more robust,
because it does not rely on assumptions based on the net-
work connectivity of a mail client.
Moreover, to the best of our knowledge, we are the
ﬁrst to study the effects of manipulating server feedback
to poison the information sent by a bot to the botmaster.
Protocol Analysis: The core idea behind our approach
is to learn the SMTP dialect spoken by a particular
client. This problem is closely related to the problem of
automated protocol reverse-engineering, where an (un-
known) protocol is analyzed to determine the individual
records/elements and the protocol’s structure [6,13]. Ini-
tial work in this area focused on clustering of network
traces to group similar messages [14], while later meth-
ods extracted protocol information by analyzing the ex-
ecution of a program while it performs network commu-
nication [10, 15, 24, 45, 47]. Sophisticated methods can
also handle multiple messages and recover the protocol’s
state machine. For example, Dispatcher is a tool capa-
ble of extracting the format of protocol messages when
having access to only one endpoint, namely the bot bi-
nary [9]. Cho et al. leverage the information extracted
by Dispatcher to learn C&C protocols [11]. Brumley et
al. studied how deviations in the implementation of a
given protocol speciﬁcation can be used to detect errors
or generate ﬁngerprints [7]. The differences in how a
given program checks and processes inputs are identiﬁed
with the help of binary analysis (more speciﬁcally, sym-
bolic execution).
Our problem is related to previous work on protocol
analysis, in the sense that we extract different SMTP pro-
tocol variations, and use these variations to build ﬁnger-
prints. However, in this work, we treat the speaker of the
protocol (the bot) as a blackbox, and we do not perform
any code analysis or instrumentation to ﬁnd protocol for-
mats or deviations. This is important because (i) mal-
ware is notoriously difﬁcult to analyze and (ii) we might
not always have a malware sample available.
Instead,
our technique allows us to build SMTP dialect state ma-
chines even when interacting with a previously-unknown
spambot.
There is also a line of research on ﬁngerprinting pro-
tocols [12, 30, 49].
Initial work in this area leveraged
manual analysis. Nonetheless, there are methods, such
as FiG, that automatically generate ﬁngerprints for DNS
servers [42]. The main difference between our work and
FiG is that our dialects are stateful while FiG operates
on individual messages. This entirely avoids the need to
merge and explore protocol state machines. However, as
discussed previously, individual messages are typically
not sufﬁcient to distinguish between SMTP engines.
9 Conclusion
In this paper, we introduced a novel way to detect and
mitigate spam emails that complements content- and
sender-based analysis methods. We focus on how email
messages are sent and derive methods to inﬂuence the
spam delivery mechanism during SMTP transactions.
On the one hand, we show how small deviations in
the SMTP implementation of different email agents (so
called SMTP dialects) allow us to detect spambots dur-
ing the actual SMTP communication. On the other hand,
we study how the feedback mechanism used by botnets
can be poisoned, which can be used to have a negative
impact on the effectiveness of botnets.
Empirical results conﬁrm that both aspects of our ap-
proach can be used to detect and mitigate spam emails.
While spammers might adapt their spam-sending prac-
tices as a result of our ﬁndings, we argue that this reduces
their performance and ﬂexibility.
Acknowledgments
This work was supported by the Ofﬁce of Naval Research
(ONR) under Grant N000140911042, the National Sci-
ence Foundation (NSF) under grants CNS-0845559 and
CNS-0905537, by Secure Business Austria, and by the
German Federal Ministry of Education and Research un-
der grant 01BY1111 / MoBE. We want to thank our shep-
herd Alex Moshchuk and the anonymous reviewers for
their valuable comments, and Andreas Boschke for his
help in setting up some of our experiments.
References
[1] RFC 821: Simple Mail Transfer Protocol. http://tools.
ietf.org/html/rfc821.
[2] SURBL URI reputation data. http://www.surbl.org/.
[3] The Spamhaus Project. http://www.spamhaus.org.
[4] BAYER, U., MOSER, A., KRUEGEL, C., AND KIRDA, E. Dy-
namic analysis of malicious code. Journal in Computer Virology
2, 1 (2006), 67–77.
[5] BEVERLY, R., AND SOLLINS, K. Exploiting Trasport-level
In Collaboration, Electronic messag-
Characteristics of Spam.
ing, Anti-Abuse and Spam Conference (CEAS) (2008).
[6] BORISOV, N., BRUMLEY, D., WANG, H. J., DUNAGAN, J.,
JOSHI, P., AND GUO, C. Generic Application-Level Protocol
Analyzer and its Language. In Symposium on Network and Dis-
tributed System Security (NDSS) (2007).
[7] BRUMLEY, D., CABALLERO, J., LIANG, Z., NEWSOM, J., AND
SONG, D. Towards Automatic Discovery of Deviations in Bi-
nary Implementations with Applications to Error Detection and
Fingerprint Generation. In USENIX Security Symposium (2007).
[8] CABALLERO, J., GRIER, C., KREIBICH, C., AND PAXSON,
V. Measuring Pay-per-Install: The Commoditization of Malware
Distribution. In USENIX Security Symposium (2011).
[9] CABALLERO, J., POOSANKAM, P., KREIBICH, C., AND SONG,
D. X. Dispatcher: Enabling Active Botnet Inﬁltration Using Au-
In ACM Conference on
tomatic Protocol Reverse-Engineering.
Computer and Communications Security (CCS) (2009).
[10] CABALLERO, J., YIN, H., LIANG, Z., AND SONG, D. X. Poly-
glot: Automatic Extraction of Protocol Message Format Using
Dynamic Binary Analysis. In ACM Conference on Computer and
Communications Security (CCS) (2007).
[11] CHO, C. BABIC, D. S. D.
Inference and Analysis of Formal
In ACM
Models of Botnet Command and Control Protocols.
Conference on Computer and Communications Security (CCS)
(2010).
[12] COMER, D. E., AND LIN, J. C. Probing TCP Implementations.
In USENIX Summer Technical Conference (1994).
[13] COMPARETTI, P. M., WONDRACEK, G., KRUEGEL, C., AND
KIRDA, E. Prospex: Protocol Speciﬁcation Extraction. In IEEE
Symposium on Security and Privacy (2009).
[14] CUI, W., KANNAN, J., AND WANG, H. J. Discoverer: Auto-
In
matic Protocol Reverse Engineering from Network Traces.
USENIX Security Symposium (2007).
[15] CUI, W., PEINADO, M., CHEN, K., WANG, H. J., AND IRUN-
BRIZ, L. Tupni: automatic reverse engineering of input formats.
In ACM Conference on Computer and Communications Security
(CCS) (2008).
[16] DRUCKER, H., WU, D., AND VAPNIK, V. N. Support vector
machines for spam categorization. In IEEE transactions on neu-
ral networks (1999).
[17] HAO, S., SYED, N. A., FEAMSTER, N., GRAY, A. G., AND
KRASSER, S. Detecting Spammers with SNARE: Spatio-
temporal Network-level Automatic Reputation Engine.
In
USENIX Security Symposium (2009).
[18] JOHN, J. P., MOSHCHUK, A., GRIBBLE, S. D., AND KRISH-
NAMURTHY, A. Studying Spamming Botnets Using Botlab. In
USENIX Symposium on Networked Systems Design and Imple-
mentation (NSDI) (2009).
[19] KAKAVELAKIS, G., BEVERLY, R., AND J., Y. Auto-learning
of SMTP TCP Transport-Layer Features for Spam and Abusive
In USENIX Large Installation System Ad-
Message Detection.
ministration Conference (2011).
[20] KANICH, C., WEAVER, N., MCCOY, D., HALVORSON, T.,
KREIBICH, C., LEVCHENKO, K., PAXSON, V., VOELKER, G.,
AND SAVAGE, S. Show Me the Money: Characterizing Spam-
advertised Revenue. USENIX Security Symposium (2011).
[21] KASPERSKY LAB.
https:
//www.securelist.com/en/analysis/204792230/
Spam_Report_April_2012, 2012.
Spam Report: April 2012.
[22] KREIBICH, C., KANICH, C., LEVCHENKO, K., ENRIGHT, B.,
VOELKER, G. M., PAXSON, V., AND SAVAGE, S. On the Spam
Campaign Trail. In USENIX Workshop on Large-Scale Exploits
and Emergent Threats (LEET) (2008).
[23] LEIBA, B. DomainKeys Identiﬁed Mail (DKIM): Using digital
signatures for domain veriﬁcation. In Collaboration, Electronic
messaging, Anti-Abuse and Spam Conference (CEAS) (2007).
[24] LIN, Z., JIANG, X., XU, D., AND ZHANG, X. Automatic Pro-
tocol Format Reverse Engineering through Context-Aware Moni-
tored Execution. In Symposium on Network and Distributed Sys-
tem Security (NDSS) (2008).
[25] LOWD, D., AND MEEK, C. Good word attacks on statistical
spam ﬁlters. In Collaboration, Electronic messaging, Anti-Abuse
and Spam Conference (CEAS) (2005).
[26] M86 LABS.
Security labs
report.
http://www.
m86security.com/documents/pdfs/security_
labs/m86_security_labs_report_2h2011.pdf,
2011.
[27] MEYER, T., AND WHATELEY, B. SpamBayes: Effective open-
source, Bayesian based, email classiﬁcation system. In Collab-
oration, Electronic messaging, Anti-Abuse and Spam Conference
(CEAS) (2004).
[28] NELSON, B., BARRENO, M., CHI, F. J., JOSEPH, A. D., RU-
BINSTEIN, B. I. P., SAINI, U., SUTTON, C., TYGAR, J. D.,
AND XIA, K. Exploiting Machine Learning to Subvert Your
Spam Filter. In USENIX Symposium on Networked Systems De-
sign and Implementation (NSDI) (2008).
[29] PATHAK, A., HU, Y. C., AND MAO, Z. M. Peeking into spam-
mer behavior from a unique vantage point. In USENIX Workshop
on Large-Scale Exploits and Emergent Threats (LEET) (2008).
[30] PAXSON, V. Automated Packet Trace Analysis of TCP Imple-
mentations. In ACM SIGCOMM Conference (1997).
[31] PITSILLIDIS, A., LEVCHENKO, K., KREIBICH, C., KANICH,
C., VOELKER, G. M., PAXSON, V., WEAVER, N., AND SAV-
AGE, S. botnet Judo: Fighting Spam with Itself. In Symposium
on Network and Distributed System Security (NDSS) (2010).
[32] RAMACHANDRAN, A., DAGON, D., AND FEAMSTER, N. Can
In Collaboration,
DNS-based blacklists keep up with bots?
Electronic messaging, Anti-Abuse and Spam Conference (CEAS)
(2006).
[33] RAMACHANDRAN, A., AND FEAMSTER, N. Understanding
the Network-level Behavior of Spammers. SIGCOMM Comput.
Commun. Rev. 36 (August 2006).
[34] RAMACHANDRAN, A., FEAMSTER, N., AND VEMPALA, S. Fil-
tering Spam with Behavioral Blacklisting. In ACM Conference on
Computer and Communications Security (CCS) (2007).
[35] SAHAMI, M., DUMAIS, S., HECKERMANN, D., AND
HORVITZ, E. A Bayesian approach to ﬁltering junk e-mail.
Learning for Text Categorization (1998).
[36] SCULLEY, D., AND WACHMAN, G. M. Relaxed Online SVMs
for Spam Filtering. In ACM SIGIR Conference on Research and
Development in Information Retrieval (2007).
[37] SINHA, S., BAILEY, M., AND JAHANIAN, F. Shades of Grey:
In In-
On the Effectiveness of Reputation-based “Blacklists”.
ternational Conference on Malicious and Unwanted Software
(2008).
[38] STONE-GROSS, B., HOLZ, T., STRINGHINI, G., AND VIGNA,
G. The Underground Economy of Spam: A Botmaster’s Perspec-
tive of Coordinating Large-Scale Spam Campaigns. In USENIX
Workshop on Large-Scale Exploits and Emergent Threats (LEET)
(2011).
[39] STRINGHINI, G., HOLZ, T., STONE-GROSS, B., KRUEGEL, C.,
AND VIGNA, G. BotMagniﬁer: Locating Spammers on the In-
ternet. In USENIX Security Symposium (2011).
[40] SYMANTEC CORP.
State of spam & phishing report.
http://www.symantec.com/business/theme.
jsp?themeid=state_of_spam, 2010.
[41] TAYLOR, B. Sender reputation in a large webmail service. In
Collaboration, Electronic messaging, Anti-Abuse and Spam Con-
ference (CEAS) (2006).
[42] VENKATARAMAN, S., CABALLERO, J., POOSANKAM, P.,
KANG, M. G., AND SONG, D. X. FiG: Automatic Fingerprint
Generation. In Symposium on Network and Distributed System
Security (NDSS) (2007).
[43] VENKATARAMAN, S., SEN, S., SPATSCHECK, O., HAFFNER,
P., AND SONG, D. Exploiting Network Structure for Proactive
Spam Mitigation. In USENIX Security Symposium (2007).
[44] VIRUSTOTAL. Free Online Virus, Malware and URL Scanner.
https://www.virustotal.com/.
[45] WANG, Z., JIANG, X., CUI, W., WANG, X., AND GRACE, M.
ReFormat: Automatic Reverse Engineering of Encrypted Mes-
sages. In European Symposium on Research in Computer Secu-
rity (ESORICS) (2009).
[46] WOLF, W. An Algorithm for Nearly-Minimal Collapsing of
Finite-State Machine Networks. In IEEE International Confer-
ence on Computer-Aided Design (ICCAD) (1990).
[47] WONDRACEK, G., COMPARETTI, P. M., KRUEGEL, C., AND
KIRDA, E. Automatic Network Protocol Analysis. In Symposium
on Network and Distributed System Security (NDSS) (2008).
[48] XIE, Y., YU, F., ACHAN, K., PANIGRAHY, R., HULTEN, G.,
AND OSIPKOV, I. Spamming Botnets: Signatures and Character-
istics. SIGCOMM Comput. Commun. Rev. 38 (August 2008).
[49] ZALEWSKI, M. p0f v3. http://lcamtuf.coredump.cx/
p0f3/, 2012.
[50] ZHUANG, L., DUNAGAN, J., SIMON, D. R., WANG, H. J.,
AND TYGAR, J. D. Characterizing Botnets From Email Spam
In USENIX Workshop on Large-Scale Exploits and
Records.
Emergent Threats (LEET) (2008).