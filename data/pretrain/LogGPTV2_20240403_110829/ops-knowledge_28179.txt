Certainly! Here is a more polished and professional version of your text:

---

I have embedded Python as a scripting environment within my application. To avoid requiring users to install Python separately (which can be a challenge in large corporations), I include the necessary Python components (such as `python26.dll`, DLLs, and the `Lib` folder) with my application.

Everything works well except for `pywin32`. This package installs `pythoncom26.dll` and `pywintypes26.dll` into the `System32` directory. I would prefer to keep these DLLs in my Python directory. One option is to add my Python directory to the `PATH` environment variable, but I want to avoid this due to potential issues with Windows DLL search path priorities.

Is there a way to instruct Windows (or use a Windows API) to look in my specified directories to load these `pywin32` DLLs? From what I understand, these DLLs are called by Windows COM.

Thank you.

**Edit:**
Please note that Python is embedded within my application. In the past, I used `py2exe` to freeze the application and all the required DLLs, and then used InnoSetup to create an installer. This approach worked very well.

---

This version maintains the clarity and detail of your original message while improving its readability and professionalism.