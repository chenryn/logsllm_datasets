### Extraction from Forensic Image
Finally, physical access to the target’s personal computer can be utilized to extract valid authentication cookies from web browsers. Stored authentication cookies can be automatically located by searching a gathered hard drive image or through live analysis techniques such as Forenscope [6].

### 3.3 Depth of Information Collection
Starting from a target profile, several subsequent elements become available for crawling, including the user’s friends, uploaded photos, and joined groups. Each of these elements can, in turn, provide access to additional information. For example, the single-view page of a photo may contain comments and likes from other users, who do not necessarily have to be direct friends of the photo owner. Additionally, users can be tagged in photos, which are all starting points for further crawling. Similarly, groups provide access to the profiles of all group members, photos with tagged users (who may not be group members), and so forth. Consequently, a social snapshot of a single user not only includes the user’s data and data of their friends but can also reach a significant depth. The depth of the social snapshot is an essential configuration option that controls the extent of the data collected. Figure 2 illustrates an example of a social snapshot with a depth of 2. For a given user, all of their friends are first fetched, followed by the friends' photos. This example highlights the magnitude of available paths and thus the amount of data. Defining a specific social snapshot depth allows us to limit the amount of fetched data, which grows exponentially with the depth.

It is important to note that the relevance of data varies among different elements. For instance, tagged users in a photo are likely to have a closer relationship with the photo owner compared to two users who joined the same group due to similar interests. Therefore, the social snapshot tool prioritizes element types that suggest higher data relevance and uses them as the starting point for each iteration. Prioritization is based on predefined priority flags in the third-party application.

### 3.4 Modules
Our social snapshot application consists of several modules, which we describe below. The core modules are the automated web browser and our custom third-party application, as outlined in Figure 1.

#### Social Snapshot Client
The social snapshot client module initiates the data gathering process using the target user’s credentials or cookies. Once started, the client authenticates itself against the target online social network. It then automatically adds our custom third-party application with the highest possible permissions to the target’s account. Information that cannot be retrieved through the third-party application is crawled and parsed by the client. Once all information has been retrieved, the client removes the third-party application and logs out of the social networking account. The interaction with the social network and web-crawling is performed using the Selenium framework [22]. We implemented the social snapshot client in Java, and the module offers a command line interface.

#### Automated Web Browser
The browser module is responsible for the basic interaction with the target online social network. We used the Selenium testing framework [22] to automate the Mozilla Firefox browser. Selenium comes with a command line server that receives Selenium commands, allowing us to script the behavior of an average user using Firefox to browse a social networking website. We overcame an initial obstacle by patching the original Java source code of the command line server to support cookie authentication.

#### Third-Party Social Snapshot Application
Our OSN social snapshot application is a third-party application designed to gather all possible account data through the target OSN’s API. The main design goal is performance, so multiple program threads are used to gather information as quickly as possible. The third-party application can be configured to prioritize specific account data and to download only a predefined set of account artifacts (social snapshot depth).

### Hijack Module
The hijack module is a network sniffer that collects valid OSN HTTP authentication cookies from sources such as LAN or WiFi connections. We built our hijack module based on Mike Perry’s modified libpkt library [23], which works out-of-the-box with LAN, unencrypted WiFi, and WEP-encrypted WiFi connections. The hijack module offers a command line interface and is implemented in Python.

### Digital Image Forensics Module
The digital image forensics module matches image files gathered from online social networks with their original sources. The goal is to find the pristine image of a compressed picture extracted through our social snapshot application. All images are initially clustered according to their color histograms, rescaled, and compressed to the target picture size, and finally matched using pattern recognition techniques. Since social networks typically remove metadata (EXIF) information from uploaded images, this module helps in finding the source of collected pictures and restoring information such as the original creation time and camera model.

### Analysis Module
The analysis module parses the results gathered by the data collection modules of our application. It processes the crawled data and the information collected through the OSN’s API. Furthermore, the analysis module fetches additional content, such as photos that are openly available by knowing the URI from online social networks. Finally, it generates a report on the social snapshot data. The analysis module can be used to generate exact timelines of communication, metadata summaries (e.g., of pictures), a weighted graph from the network of friends, or their online communication.

### 4. Results and Evaluation
In this section, we describe the evaluation of our social snapshot application. Our generic social snapshot approach is applicable to the majority of today’s social networking services. The sole requirement for target social networks is the availability of a developer API or the adaptation of our automated browser.

For a forensic tool, there are some special requirements:
- Ability to reproduce results
- Create a complete snapshot of the account

To make digital evidence sufficiently reliable for court, it is helpful if the process of gathering the evidence can be reproduced with identical results. In dynamic web-based applications, this is not always possible because data is continuously added (e.g., posts by friends) or removed (e.g., friends-of-friends deciding to unshare data by modifying their privacy settings). However, it is possible to have two or more independent investigators make snapshots at a similar time. While not all artifacts will be identical, one can easily compare the sets of artifacts retrieved by our tool. It is important that all artifacts used in the case are contained in both sets and that the sets do not contain too many unique artifacts, as this would suggest that the snapshots are not reliable. Similar to information retrieval research, we can adapt the metrics of precision and recall.

Let \( n \) independent investigators gather each a set of artifacts \( A_i \):
\[ \text{Recall}_j = \frac{\left| \bigcup_{i=0}^n A_i \cap A_j \right|}{\left| \bigcup_{i=0}^n A_i \right|} \]
\[ \text{Precision}_j = \frac{\left| \bigcup_{i=0}^n A_i \cap A_j \right|}{\left| A_j \right|} \]

These can be combined to form the F-score:
\[ F = 2 \cdot \frac{\text{Precision} \cdot \text{Recall}}{\text{Precision} + \text{Recall}} \]

### 4.1 Social Snapshots on Facebook
At the time of writing, Facebook is the most popular online social network, with a claimed user base of over 600 million. Facebook supports third-party applications and user profiles contain a wealth of information. We decided to evaluate our social snapshot tool on Facebook. Third-party applications on Facebook have access to account data via the Graph API [10]. Almost all account data of Facebook users and their contacts are made available through the API. Facebook restricts sensitive contact information such as phone numbers and email addresses from third-party applications. Therefore, our social snapshot client crawls the contact information of Facebook profiles, while all remaining social data is fetched through a custom third-party application. In October 2010, Facebook introduced a download option [12] that enables users to export their account data. Table 1 outlines the different profile content elements gathered through our social snapshot application compared to Facebook’s download functionality. As shown in Table 1, the download functionality offers a very limited representation of a user’s online activity. For example, for a given user’s friends, only their ambiguous names are made available, and no information on the activity of a given user’s friends is included.

### 4.2 Hardware and Software Setup
To test the functionality of our social snapshot application, we developed a third-party application for Facebook based on their PHP Graph SDK. One of the main modifications we performed was to support multi-threaded API requests. Our third-party social snapshot application for Facebook can handle a number of predefined API requests simultaneously. The single requests are pushed onto a request queue with a specific priority. Thus, our third-party application can be configured, for example, to fetch private messages before user comments in a Facebook group. The extent/depth of social snapshots can be further configured as a parameter for our third-party application. We deployed it on a Linux server in our university network.

| Element                  | Download | Social Snapshot |
|--------------------------|----------|-----------------|
| Contact details          | -        | Crawler         |
| News feed                | -        | Graph API       |
| Checkins                 | -        | Graph API       |
| Photo Tags               | -        | Graph API       |
| Video Tags               | -        | Graph API       |
| Friends                  | name only | Graph API       |
| Likes                    | -        | Graph API       |
| Movies                   | name only | Graph API       |
| Music                    | name only | Graph API       |
| Books                    | name only | Graph API       |
| Groups                   | name only | Graph API       |
| Profile feed (Wall)      | -        | Graph API       |
| Photo Albums             | -        | Graph API       |
| Video Uploads            | -        | Graph API       |
| Messages                 | -        | Graph API       |