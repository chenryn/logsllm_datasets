 symbol name
app name 
_ alloc_skb
._kfree_skb
e1008_xmit_frame -
e1000_clean_tx_irq
 symbol name
HACK#42CPU 负载过高的故障丨249
@
?
257
---
## Page 268
258
的结果。
.·.的总和。接下来用同样的方法测量普通网络的情况。下面是普通网络
解析符号之后，就能看出 e100e 的各个函数的采样比例。①的 14.8%为②、③、
250[
8658
samples %
[sender]# opreport -l -p /lib/modules/2.6.18/kernel/
[sender]# ./nuttcp -T20s -L1500 192.168.1.100 &
66
1
8
6
38
9
2140
78
第5章实践内核调试
16.7839 vmlinux-2.6.18
1.3126
1.9128
2.0373
2.1286
2.1493
2.2711
2.3430
2.4965
2.5311
2.5809
2.9502
2.9598 vmlinux-2.6.18 vmlinux-2.6.18 skb_clone
2.6015
2.7605
3.0358
3.3692
3.4952
3.7627
3.9701
4.8638
1.3886
1.4481
1.4827
1.5754
1.6127
1.9115
9 vmlinux-2.6.18 vmlinux-2.6.18 tcp_ack
2 vmlinux-2.6.18 vmlinux-2.6.18 kmem_cache_free
vmlinux-2.6.18
vmlinux-2.6.18 vmlinux-2.6.18 system_call
vmlinux-2.6.18 vmlinux-2.6.18 tcp_v4_send_check
vmlinux-2.6.18 vmlinux-2.6.18 i
vmlinux-2.6.18 v
vmlinux-2.6.18 vmlinux-2.6.18 0
vmlinux-2.6.18 v
vmlinux-2.6.18
vmlinux-2.6.18
e1000e.ko
e1000e.ko
vmlinux-2.6.18 v
vmlinux-2.6.18
vmlinux-2.6.18
vmlinux-2.6.18 vmlinux-2.6.18 cache_grow
e1000e.ko
vmlinux-2.6.18
vmlinux-2.6.18
vmlinux-2.6.18
e1000e.ko
e1000e.ko
image name
e1000e.ko
e1000e.ko
www.TopSage.com
vmlinux-2.6.18
3 vmlinux-2.6.18
3vmlinux-2.6.18 tcp_v4_rcv
e1000e
e1000e
vmlinux-2.6.180
vmlinux-2.6.18
vmlinux-2.6.18 e
vmlinux-2.6.18
vmlinux-2.6.18 tcp_transmit_skb
vmlinux-2.6.18 mwait_idle
e1000e
vmlinux-2.6.18
vmlinux-2.6.18
e1000e
e1000e
vmlinux-2.6.18
e1000e
el000e
 app name
 el000_clean_rx_irq-
 el000_intr_msi-
e1000_irq_enable
 tcp_sendmsg
 copy_user_generic
ip_queue_xmit
cache_alloc_refill
 dev_queue_xmit
-_alloc_skb
eth_header
 symbol name
ip_output
tcp_v4_rcv
e1000_clean_rx_irq 
e1000_intr_msi
mwait_idle
e1000_xmit_frame
e1000_irq_enable
?
?
?
---
## Page 269
图 5-16 VLAN 网络中 csum_partial_copy_generic()函数的调用顺序 
copy_generic()函数。该函数的调用路径如图 5-16 所示。
与 VLAN 网络相比，第1个的位置不同，VLAN 网络的情况下为 csum_partial
static inline int skb_add_ data(struct sk_buff *skb,
[include/linux/skbuff.h]  
66
8
8
8
8
if(skb->ip_summed= CHECKSUM_NONE）{ /*发送信息时使用的 NIC
const int off = skb->len;
0.0601 vmlinux-2.6.18 vmlinux-2.6.18 copy_from_user
1.3143
1.3376
1.3395
1.3454
1.3977
1.4035
1.4888
1.4966
1.5508
1.8881
1.9056
2.0781
2.1285
2.5104
unsigned int csum = csum_and_copy_from_user(from, 
int err = 0; 
char __user *from, int copy)
vmlinux-2.6.18
vmlinux-2.6.18
libc-2.5.s0
nuttcp
vmlinux-2.6.18
vmlinux-2.6.18
e1000e.ko
vmlinux-2.6.18
vmlinux-2.6.18
vmlinux-2.6.18
vmlinux-2.6.18
vmlinux-2.6.18
vmlinux-2.6.18
vmlinux-2.6.18
 skb_add data()
tcp_sendmsg()
www.TopSage.com
csum_and_copy_from_user()
 csum_partial_copy_from_user()
vmlinux-2.6.18
vmlinux-2.6.18
libc-2.5.s0
nuttcp
vmlinux-2.6.18
vmlinux-2.6.18
e1000e
vmlinux-2.6.18
vmlinux-2.6.18
vmlinux-2.6.18
vmlinux-2.6.18
vmlinux-2.6.18
vmlinux-2.6.18
vmlinux-2.6.18
HACK#42 CPU 负载过高的故障| 251
不支持校验和计算功能*/
copy, 0, &err);
skb_put(skb, copy),
put_page 
dnotify_parent 
_write_nocancel
Nwrite
ip_queue_xmit 
skb_clone
el008_clean_tx_irq
skb_split
tcp_transmit_skb
tcp_ack
system_call
kmem_cache_free 
kfree
?
259
---
## Page 270
260
features可以通过sysfs确认。
features 表明了网络设备所支持的特性，这里所说的特性即校验和计算、VLAN等。
图5-17.e1000e设备的建立顺序
验和计算功能的原理（图5-17）。
化时获取设备信息，因此应当检查一下内核加载e1000e驱动程序时，识别硬件校
接下来要探寻skb->ip_summed值为CHECKSUM_NONE的原因。e1000e驱动程序在初始
设置硬件校验和计算功能的原理
可以看出，源代码中的⑧几乎没有任何负载。
而在普通网络中，由于使用了硬件的校验和计算功能，从opreport命令结果的@中
函数被调用了，说明校验和是由软件（内核）计算的。
csum_partial_copy_generic()。该函数从用户空间传递数据，同时计算校验和。该
CHECKSUM_NONE的情况下，即NIC不支持校验和计算功能的情况下，执行
skb_add_data(）函数的作用是将用户需要发送的数据转给内核（数据包缓冲区）。在
252|第5章实践内核调试
内核空间
用户空间
return0;
e1000_probe()
#modprobeel000e
则设置到features中
查看硬件寄存器确认是否支持H_CHECKSUM，支持
if(adapter->hw.mac.type>=e10082543)
V
www.TopSage.com
register_netdev()
→
注册etho~eth3的net device
register_netdevice()
NETIF_FHWVLANFILTER;
NETIF_F
NETIFFHWCSUM|
HW
VLAN
---
## Page 271
VLAN设备没有继承物理设备eth3的features,因此eth3.510的features成了0x0。
图 5-18VLAN 设备的建立顺序
所有标志均被设置为无效。因此，下一步要确认VLAN 设备的初始化（图5-18)。
eth3（普通网络）上 NETIF_F_HW_CSUM有效，而在VLAN 网络的 eth3.510为 Ox0,
features 为标志位的组合，其值由内核的 include/几inux/netdevice.h定义。
用户空间
#define NETIF_F_FRAGLIST
#define NETIF_ F_ HIGHDMA
#define NETIF_F_HW_CSUM
#define NETIF_F_NO_CSUM
#define NETIF_F_IP_CSUM
#define NETIF_F_SG
[include/linux/netdevice.h]
0x0
[sender]# cat /sys/class/net/eth3.510/features
0x1113a9
[sender]# cat /sys/class/net/eth3/features
内核空间
unsigned long
ioctl 的命令为 ADD_VLAN_CMD
vlan_ioctl_handler()
# vconfig add eth3 510 (VLANID)
V
络设备信息），在 features中查找支持VLAN的
register_vlan_device()
然后从eth3中继承必要的信息创建eth3.510
www.TopSage.com
设备。
搜索eth3的 net_device 结构（内核管理的网
I→
E
features;
8
register_netdevice()
/* Scatter/gather I0. */
/*
*
Can DMA to high memory. */
Can checksum all the packets. */
Does not require checksum. F.e. loopack. */
 Can checksum only TCP/UDP over IPv4. */
注册eth3.510（net_device结构）
HACK#42 CPU 负载过高的故障|253 
261
---
## Page 272
图 5-20
图 5-19connect()系统调用处理
了所有系统调用。
CHECKSUM_NONE 而执行 csum_partial_copy_generic()的原理。图 5-19、图 5-20 总结
上面说的是 features。接下来通过系统调用的处理，检查由于 skb->ip_summed--
254 |
sendmsg()系统调用处理
内核空间
用户空间
第5章实践内核调试
内核空间
用户空间
e1000e驱动程序
通过IP 层将 sk 传递给
sys_sencmsg()
senchisg()系统调用
sys_cannect()
connect()系统调用
>tcp_sendmsg()
e1000e驱动程序，因此skb要继承sock
skb->ip_sumed 设置 CHECKSUM_HW标志。由I于要将 skb传递给
>tcp_v4_conect()
www.TopSage.com
skb_add data()
> sk_setup_caps()
>hard_start_xmit 法
dev_queue_xmit()
if (skb->ip_surmed = = CHECKSUM NONE) [--—-
if (sk->sk_route_caps & NETIF_F_AlL_CSUM)
存到 sk->sk_route_caps r中1）