longer than both (2 + 1)-party and 3-verifier SNIP auditing.
Nevertheless, the amortized cost per audit still barely exceeds
10 ms for Sabre instances even with 𝑛 = 220 registered
mailboxes—indeed, even with up to 𝑛 = 240 mailboxes it
never exceeds 23 ms. Although 2-verifier SNIP auditing is
dramatically less performant than the alternatives, it offers
superior security guarantees and the most apt comparison
with Express; thus, we restrict our remaining experimental
results to this variant. It is worth noting, however, that either
3-server variant would provide (significantly) better auditing
performance wherever an additional party (and the resulting
stronger trust assumption) is palatable. The 3-server variants
also provide a more direct comparison with Riposte.
Figures 5a and 5b compare the auditing costs of Sabre with
2-verifier SNIP auditing versus those of Riposte and Express.
These plots clearly illustrate the benefits of Sabre’s logarith-
mic auditing relative to Riposte’s and Express’ linear auditing.
While the latter perform better for very small DPFs, the
former becomes significantly faster as DPFs begin to exceed
around a hundred thousand mailboxes (or buckets).
Figure 5c shows the cost of verifying a batch of 128
mailbox addresses in Sabre-M. As expected, the running time
of the mailbox address check is constant (i.e., independent of
the number mailboxes).
C. Resistance to denial-of-service attack
The next set of experiments characterizes Sabre’s re-
sistance to resource-exhaustion DoS attacks by comparing
how long it takes a simulated attacker to produce plausible-
looking, yet malformed write requests with how long it
takes Sabre auditing to reject them. The attacker in these
experiments produces its malformed requests by sampling a
sufficient quantity of pseudorandom bits from /dev/urandom.
We consider two kinds of auditing failures, namely (i) when
the address check fails and (ii) when the address check passes
but the DPF audit subsequently fails. (For the latter, we also
consider at which tree depth the auditing aborts.)
Figure 6a plots our findings for the first kind of failure,
comparing the time required to sample a single malformed
request against the time required to check a batch of 128
addresses using the PRF-based address check. For Sabre
instances with as few as 𝑛 = 210 mailboxes, sampling a mal-
formed request takes nearly 1.75× as long as address check-
ing; by 220 mailboxes the difference approaches 4.6×.
Figure 6b plots our findings for the second kind of failure,
comparing the time required to construct a request that
verifies up to but not including the 𝑑 th level of the DPF
(after which the attack samples the rest of the request from
/dev/urandom) against the time required for the auditors to
reject the request. Owing to SNIP verification’s probabilistic
nature, the auditors can reject a malformed DPF upon in-
specting only a fraction of the bits that the attacker must
sample. As a result, sampling a malformed request takes
about 1.5× as long as rejecting it via auditing, for all 𝑑.
In contrast to Riposte and Express auditing—where audi-
tors run asymptotically slower than writers—Sabre auditors
consistently reject malformed requests faster than the sim-
ulated attackers can produce them. We thus conclude that
Sabre is inherently resistant to DoS attacks in the following
sense: An attacker seeking to overwhelm Sabre servers must
expend strictly more resources than the servers.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 14:58:18 UTC from IEEE Xplore.  Restrictions apply. 
111963
120
100
80
60
40
20
)
s
m
(
e
m
i
t
k
c
o
l
c
-
l
l
a
W
210
Sabre-M
Riposte
Express
212
220
Number of buckets/mailboxes (𝑛)
214
216
218
120
100
80
60
40
20
)
s
m
(
e
m
i
t
k
c
o
l
c
-
l
l
a
W
Sabre-M
Riposte
Express
210
212
220
Number of buckets/mailboxes (𝑛)
214
216
218
104
103
102
101
)
s
m
(
e
m
i
t
k
c
o
l
c
-
l
l
a
W
210
PRF-based mailbox address check
214
218
212
Number of mailboxes (𝑛)
216
220
(a) Client-side auditing time
(b) Server-side auditing time
Fig. 5: Sabre 2-verifier SNIP auditing versus Riposte and Express auditing. Observe that the 𝑦-axis in 5a and 5b are
linear, while 𝑦-axis in 5c is log-scaled. Note that 5c reports mailbox-checking times for a batch of 128 requests.
(c) Mailbox checking time
)
s
m
(
e
m
i
t
k
c
o
l
c
-
l
l
a
W
12
10
8
6
4
2
210
Sample /dev/urandom
PRF-based address check
218
212
Number of buckets/mailboxes (𝑛)
214
216
20
15
10
5
)
s
m
(
e
m
i
t
k
c
o
l
c
-
l
l
a
W
220
Create request
Verify consistent levels (up to 𝑑)
8
12
16
20
Depth of first inconsistency (𝑑)
(a) PRF-based address check versus malformed request sampling time
(b) DPF auditing versus malformed request sampling time (𝑛 = 220)
Fig. 6: Sabre 2-verifier SNIP auditing versus malformed request sampling. 6a compares the cost of checking a batch of
128 mailbox addresses with that of sampling a (single) malformed request; 6b compares the cost of verifying a proof
up to level 𝑑 with that of sampling a malformed proof that verifies up to level 𝑑.
D. Head-to-head with Riposte and Express
The next set of experiments provide a head-to-head com-
parison between Sabre with 2-verifier SNIPs and both Riposte
and Express, the respective state-of-the-art systems in the
bulletin-board and mailbox models. We plot the results in
Figures 7 and 8.
(Note that we measured the reference
implementations of Riposte7 and Express8 on the same
servers we used to run Sabre. The 𝑥-axes on all plots stop
at 𝑛 = 218 due to limitations of the Riposte and Express
implementations.)
Figure 7a compares the throughput of Sabre-M against that
of Express for messages of size 1 KiB and 32 KiB. In both
cases, Sabre-M comfortably outperforms Express;
indeed,
Sabre-M with 32 KiB messages even outperforms Express
with 1 KiB messages. In a similar vein to Figure 8a, we expect
the Sabre’s performance advantage to grow (rapidly) with the
introduction of malformed requests.
Figure 7b compares the throughput of Sabre-BB against
that of Riposte. For a meaningful comparison, we provide
separate plots for Sabre-BB with each of the three audit
protocol instantiations. Again, the results confirm our ex-
pectations: Throughput for the (2 + 1)-party and 3-verifier
SNIP variants consistently exceeds 20× that of Riposte, while
the overhead of cut-and-choose in the 2-verifier SNIP variant
eliminates much of this gain when the number of buckets is
small. As the number of buckets grows large, the costs of
7https://bitbucket.org/henrycg/riposte/
8https://github.com/SabaEskandarian/Express
all three Sabre instances converges to that of the full-domain
evaluation of the DPF and subsequent writing.
Figure 10 in Appendix D compares the performance of the
“stepping-stones” to Sabre-M. Comparing those plots with
the plot for Express (from Figure 7a) with 1 KiB messages
reveals comparable throughput when all DPFs pass auditing.
This is unsurprising, as the bottleneck in both protocols
is the DPF evaluation and subsequent writing. We stress
that our use of bitsliced LowMC is crucial here: Express
benefits from the fast AES-NI instruction set on modern
x86-64 CPUs; without bitslicing, the throughput of LowMC
could not compete. The algorithmic improvements of Sabre
become apparent as we progress through the “stepping-
stones” toward Sabre-M, whose smaller DPFs and ability
to use full-domain evaluation greatly reduces the cost of
DPF evaluation; moreover, the use of full-domain evaluation
provides superior pipe-lining and cache utilization, resulting
in notable speedups for the subsequent writing. Our next
experiments reveal further algorithmic improvements that
arise only when some DPFs fail auditing.
1) Head-to-head under DoS attacks: The final set of ex-
periments compares the throughput of Sabre-M with that
of Express in the presence of a resource-exhaustion DoS
attack. Recall that write requests in the mailbox model can be
malformed in two distinct ways; namely, (i) the mailbox ad-
dress is incorrect or (ii) the DPF is not well-formed. Figure 8
presents five plots that each show the effect of varying the
proportion of incoming requests that are well-formed versus
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 14:58:18 UTC from IEEE Xplore.  Restrictions apply. 
121964
d
n
o
c
e
s
/
s
e
i
r
e
u
Q
103
102
101
100
10−1
212