test-> AS ’BEGIN
test’> IF new.code !˜ ’’ˆ[A-Za-z][A-Za-z]$’’
test’> THEN RAISE EXCEPTION ’’State code must be two alphabetic characters.’’;
test’> END IF;
test’> IF new.name !˜ ’’ˆ[A-Za-z ]*$’’
test’> THEN RAISE EXCEPTION ’’State name must be only alphabetic characters.’’;
test’> END IF;
test’> IF length(trim(new.name))  THEN RAISE EXCEPTION ’’State name must longer than two characters.’’;
test’> END IF;
test’> new.code = upper(new.code); -- uppercase statename.code
test’> new.name = initcap(new.name); -- capitalize statename.name
test’> RETURN new;
test’> END;’
test-> LANGUAGE ’plpgsql’;
CREATE
test=> CREATE TRIGGER trigger_statename
test-> BEFORE INSERT OR UPDATE
test-> ON statename
test-> FOR EACH ROW
test-> EXECUTE PROCEDURE trigger_insert_update_statename();
CREATE
test=> DELETE FROM statename;
DELETE 1
test=> INSERT INTO statename VALUES (’a’, ’alabama’);
ERROR: State code must be two alphabetic characters.
test=> INSERT INTO statename VALUES (’al’, ’alabama2’);
ERROR: State name must be only alphabetic characters.
test=> INSERT INTO statename VALUES (’al’, ’al’);
ERROR: State name must longer than two characters.
test=> INSERT INTO statename VALUES (’al’, ’alabama’);
INSERT 292898 1
test=> SELECT * FROM statename;
code | name
------+--------------------------------
AL | Alabama
(1 row)
Figure18.13: Triggercreation
Chapter 19
Extending P SQL Using C
OSTGRE
AlthoughPOSTGRESQLoffersalargenumberoffunctions,operators,datatypes,andaggregates,
sometimesusersmaystillneedtocreatetheirown. Chapter 18showedhowtocreatefunctions
inlanguagesotherthanC.ThischaptercoversCfunctionsandthecreationofcustomoperators,
datatypes,andaggregatesthatbehavejustliketheonesalreadypresentinPOSTGRESQL.
ExtendingPOSTGRESQLinthiswayinvolvesseveralsteps:
1. WriteCcodetoimplementthenewfunctionality.
2. CompiletheCcodeintoanobjectfilethatcontainsCPUinstructions.
3. IssueCREATEFUNCTIONcommandstoregisterthenewfunctions.
4. Issuethepropercommandsifcreatingoperators,datatypes,oraggregates:
• CREATEOPERATOR
• CREATETYPE
• CREATEAGGREGATE
The full details of extending POSTGRESQL are beyond the scope of this book. This chapter
will therefore provide just an overview of this topic. The Programmer’s Manual mentioned in
AppendixA.2hasmoredetailedinformation.
19.1 Write the C Code
The best way to add a new function, operator, data type, or aggregate is to start with a copy of
afilefromthePOSTGRESQLsourcedirectorypgsql/src/backend/utils/adt. Startwithafilethat
containsfunctionssimilartotheonesyouneed,butmakesurethatyournewfunctionnamesare
unique.
219
220 CHAPTER19. EXTENDINGPOSTGRESQLUSINGC
#include "postgres.h"
double *ctof(double *deg)
{
double *ret = palloc(sizeof(double));
*ret = (*deg * 9.0 / 5.0) + 32.0;
return ret;
}
Figure19.1: Cctof function
For example, Chapter 18 included a ftoc() SQL function that converted a temperature from
Fahrenheitto centigradedegrees. Figure 19.1 showsaC function thatconvertsfrom centigrade
toFahrenheit.
While writing C functions, you may find it necessaryto executeSQL queries from inside the
function. Theserverprogramminginterface(SPI)allowsCfunctions to executeSQL queriesand
processresultsfromwithinthesefunctions.
19.2 Compile the C Code
ThenextstepistocompiletheCfileintoanobjectfilethatcontainsCPUinstructions. Aspartof
thisstep,youmustcreateaspecialobjectfilethatcanbedynamicallylinkedintothePOSTGRESQL
server. Manyoperatingsystemsrequirespecialflagstocreateanobjectfilethatcanbedynamically
linked. The best way to find the required flagsis to go to pgsql/src/test/regress and type make
clean and then make regress.so.1 This command will display the compile commands used to
generatethedynamicallylinkableobjectfileregress.so. The-I compileflagsallowsearchingfor
includefiles. Otherflagsareusedfor generatingdynamicobjectfiles; usethem to compileyour
C code into a dynamically linkable object file. You may need to consult your operating system
documentationforassistanceinlocatingtheproperflags.
19.3 Register the New Functions
Nowthatyouhavecreatedadynamicallylinkableobjectfile,youmustregisteritsfunctionswith
POSTGRESQL.TheCREATEFUNCTIONcommandregistersanewfunctionbystoringinformationin
thedatabase. Figure19.2showstheCREATEFUNCTIONcommandforctof. Thefunctionctof takes
1Someoperating systemsmayusegmakeratherthanmake. Also, someoperating systems willuseregress.oratherthan
regress.so.
19.4. CREATEOPERATORS,TYPES,ANDAGGREGATES 221
test=> CREATE FUNCTION ctof(float)
test-> RETURNS float
test-> AS ’/users/pgman/sample/ctof.so’
test-> LANGUAGE ’C’;
CREATE
Figure19.2: Createfunctionctof
test=> SELECT ctof(20);
ctof
------
68
(1 row)
Figure19.3: Callingfunctionctof
afloatargumentandreturnsafloat. TheSQLdatatypefloatisthesameastheCtypedoubleused
in ctof(). The dynamically linkable object file is specified as /users/pgman/sample/ctof.so and is
writtenintheClanguage.
A single object file can contain many functions. You must use CREATE FUNCTION to register
eachfunctionyouwanttoaccessfromPOSTGRESQL.CREATEFUNCTIONalsoallowsnonobjectfiles
tobeusedasfunctions(seeChapter18).
Oncethefunctionsareregistered,theycanbecalledjustlikePOSTGRESQLinternalfunctions.
Figure19.3showsthectof()functionusedinaSELECTstatement. SeeCREATE_FUNCTIONformore
information.
19.4 Create Operators, Types, and Aggregates
Optionally, you can build operators, types, and aggregates using functions. CREATE OPERATOR,
CREATETYPE,andCREATEAGGREGATEregisterthatasetoffunctionsshouldbehaveasanoperator,
type, or aggregate. They name the new operator, type, or aggregate, and then call the supplied
function whenever its name is accessed. See CREATE_OPERATOR, CREATE_TYPE, and CREATE_-
AGGREGATEformoreinformation.
222 CHAPTER19. EXTENDINGPOSTGRESQLUSINGC
19.5 Summary
ExtendingPOSTGRESQL is a complicatedprocess. This chapterhas covered only the basic con-
cepts. RefertotheProgrammer’sManualformoredetailedinformation.
Chapter 20
Administration
This chapter covers a variety of administrative tasks. The chapter assumes POSTGRESQL is
installedandrunning. Ifitisnot,seeAppendixB.
20.1 Files
WhenPOSTGRESQLis installed,it createsfilesin itshome directory,typically/usr/local/pgsql.
ThisdirectoryholdsallthefilesneededbyPOSTGRESQLinvarioussubdirectories:
/bin POSTGRESQLcommand-lineprograms,suchaspsql.
/data Configuration files and tables shared by all databases. For example, pg_shadow is a table
sharedbyalldatabases.
/data/base Asubdirectoryforeachdatabase. Usingtheduandlscommands,administratorscan
displaytheamountofdiskspaceusedbyeachdatabase,table,orindex.
/doc POSTGRESQLdocumentation.
/include Includefilesusedbyvariousprogramminglanguages.
/lib Librariesusedbyvariousprogramminglanguages. Thissubdirectoryalsocontainsfilesused
duringinitializationandsampleconfigurationfilesthatcanbecopiedto/dataandmodified.
/man POSTGRESQLmanualpages.
20.2 Creating Users
To create new users, you run createuser from an operating system prompt. Initially, only the
POSTGRESQL superuser, typically postgres, can create new users. Other users can be given
permissiontocreatenewusersanddatabases.
223
224 CHAPTER20. ADMINISTRATION
$ createuser demouser1
Shall the new user be allowed to create databases? (y/n) n
Shall the new user be allowed to create more new users? (y/n) n
CREATE USER
$ psql test
Welcome to psql, the PostgreSQL interactive terminal.
Type: \copyright for distribution terms
\h for help with SQL commands
\? for help on internal slash commands
\g or terminate with semicolon to execute query
\q to quit
test=> CREATE USER demouser2;
CREATE USER
test=> ALTER USER demouser2 CREATEDB;
ALTER USER
test=> CREATE GROUP demogroup WITH USER demouser1, demouser2;
CREATE GROUP
test=> CREATE TABLE grouptest (col INTEGER);
CREATE
test=> GRANT ALL on grouptest TO GROUP demogroup;
CHANGE
test=> \connect test demouser2
You are now connected to database test as user demouser2.
test=> \q
Figure20.1: Examplesofuseradministration
POSTGRESQL user names do not have to be operating system users. For installations using
databasepasswordauthentication,acreateuserflagallowspasswordstobeassigned.
Usersareremovedwithdropuser. TheCREATEUSER,ALTERUSER,andDROPUSERcommands
areavailableinSQL.
POSTGRESQLalsosupportsthecreationofgroupsusingCREATEGROUPinSQL. GRANTpermis-
sionscanbespecifiedusingthesegroups.
Figure 20.1 shows examples of user administration commands. In the figure, one user is
createdfrom thecommand line,aseconduseriscreatedin psql, andauserismodified. Next,a
groupiscreatedandgiventablepermissions. Finally,theprogramreconnectstothedatabaseasa
differentuser,whichispossiblebecausethesitehaslocalusersconfiguredwithtrustaccess. This
issueiscoveredinSection20.4.
Thesecommandscanbeperformedonlybyauserwithcreateuserprivileges. Moreinformation
abouteachcommandcanbefoundinthemanualpages.
20.3. CREATINGDATABASES 225
$ createdb demodb1
CREATE DATABASE
$ psql test
Welcome to psql, the PostgreSQL interactive terminal.
Type: \copyright for distribution terms
\h for help with SQL commands
\? for help on internal slash commands
\g or terminate with semicolon to execute query
\q to quit
test=> CREATE DATABASE demodb2;
CREATE DATABASE
test=> DROP DATABASE demodb1;
DROP DATABASE
test=> \connect demodb2
You are now connected to database demodb2.
demodb2=> \q
Figure20.2: Examplesofdatabasecreationandremoval
20.3 Creating Databases
To create new databases, you run createdb from an operating system prompt. Initially, only the
POSTGRESQLsuperusercancreatenewdatabases. Otheruserscanbegivenpermissiontocreate
newdatabases.
The createdb program creates a new database by making a copy of the template1 database.
ThisdatabaseiscreatedwhenPOSTGRESQLisfirstinitialized. Anymodificationstotemplate1will
appearinsubsequentlycreateddatabases.
Databases are removed with dropdb. The CREATE DATABASE and DROP DATABASE commands
arealsoavailableinSQL.
Figure 20.2 shows one database created from the command line and another one created
throughpsql. Adatabaseisthendestroyed,andaconnectionmadetoanewdatabase. Additional
informationabouteachcommandcanbefoundinthemanualpages.
20.4 Access Configuration
POSTGRESQL allows administrators to control databaseaccess. Access can be grantedbased on
the database, user, or TCP/IP network address. By default, POSTGRESQL allows databaseaccess
only to users logged into the computer running the databaseserver. To enable network access,
thepostmastermustbestartedwiththe-iflag.
226 CHAPTER20. ADMINISTRATION
Databaseaccessiscontrolledviathedata/pg_hba.conffile,whichislocatedinthePOSTGRESQL
homedirectory. Itcontainsseveraltypesofconfigurationentries:
Local
Localentriescontrolaccessbyusersloggedintothesamecomputerasthedatabaseserver. Local
connections use Unix domain sockets. The following per-database authentication options are
available:
• trust—Trustusersconnectingtothisdatabase.
• password—Requireapasswordofusersconnectingtothisdatabase.
• crypt—Like password, except send the password in an encrypted manner. This method is
moresecurethanpassword.
• reject—Rejectallconnectionrequestsforthisdatabase.
Host and Hostssl
Host and hostssl entries control TCP/IP network access. They include host and netmask fields.
Theseentriessupportallofthelocaloptions,plusthefollowing:
• ident—Usearemoteidentserverforauthentication.
• krb4—UseKerberosIVauthentication.
• krb5—UseKerberosVauthentication.
These entries are effectiveonly if the postmaster uses the -i option. Hostssl controls accessvia
theSecureSocketLayer(SSL)ifenabledintheserver.
User Mappings
By default, passwords used by password and crypt appear in the pg_shadow table. This table is
managedbycreateuserandALTERUSER.
Inaddition,passwordtakesanoptionalargumentthatspecifiesasecondarypasswordfilewhich
overridespg_shadow. Thisfilecontainsusernamesandpasswordsof peoplewho areallowedto
connect. Using this method, a set of users can be given access to certain databases. See the
pg_passwdmanualpageformoreinformationoncreatingsecondarypasswordfiles. Currently,crypt
doesnotsupportsecondarypasswordfiles.
Theidententryalsotakesanoptionalargumentthatspecifiesaspecialmapnametomapident
usernamestodatabaseusernames. Thefiledata/pg_ident.conf recordsthesemappings.
20.5. BACKUPANDRESTORE 227
Examples
Localentriesareconfiguredonper-databasehosts. Adatabaseentryofallappliestoalldatabases.
Indata/pg_hba.conf,thelines
local all trust
host all 127.0.0.1 255.255.255.255 trust
causealllocaluserstobetrusted. ThefirstlineaffectsusersconnectingviaUnixdomainsockets;
thesecondlinecontrolslocalusersconnectingtothesamemachinebyTCP/IP. Thelocalmachine
isaccessedasTCP/IPaddress127.0.0.1(localhost).
Bothhostandhostsslentriesrequiretheadditionalspecificationofhostaddressesandnetwork
masks. Thelines
host all 192.168.34.0 255.255.255.255 crypt
host all 192.168.90.0 255.255.255.0 password
force all users from host 192.168.34.0 and network 192.168.90.0 to provide passwords. Crypt
encrypts the passwords that are sent; password sends passwords over the network without en-
cryption. Theline
host all 192.168.98.0 255.255.255.255 password finance
issimilartothepreviousentries,exceptthatitusestheusernames/passwordsstoredin finance
toauthenticateusers.
Thelines
host sales 192.168.7.12 255.255.255.255 ident
host sales 192.168.7.64 255.255.255.255 ident support
useidenton theremote machinetoverifytheusersconnectingtodatabasesalesfrom thehosts
192.168.7.12and192.168.7.64. Thesecondentryusesthesupportusernamemappingindata/pg_-
ident.conf.
Connectionsfromhostsandnetworksnotappearinginthefilearerejected. Formoreinforma-
tion,seethefiledata/pg_hba.conf andtheAdministrator’sGuidediscussedinAppendixA.2.
Fordatabaseclientapplications,theenvironmentvariablesPGHOST,PGPORT,PGUSER,PGPASS-
WORD, PGDATESTYLE, PGTZ, PGCLIENTENCODING, and PGDATABASE are helpful for setting default
connectionparametersandoptions. ThePOSTGRESQLdocumentationprovidesmoreinformation
aboutthem.
20.5 Backup and Restore
Databasebackupsallowdatabasestoberestoredifadiskdrivefails,atableisaccidentallydropped,
or a databasefileis accidentallydeleted. If the databasesare idle, a standardfilesystem backup
228 CHAPTER20. ADMINISTRATION
$ pg_dump test > /tmp/test.dump
$ createdb newtest
CREATE DATABASE
$ psql newtest < /tmp/test.dump
Figure20.3: Makinganewcopyofdatabasetest
will suffice as a POSTGRESQL backup. If the databases are active, you must use the pg_dumpall
utilitytocreateareliablebackup. Thisutilityoutputsaconsistentsnapshotofalldatabasesintoa
filethatcanbeincludedinafilesystembackup. Infact, onceapg_dumpall filehasbeencreated,
youdonotneedtobackupthe/data/base databasefiles. Afewconfigurationfilesin/data, such
asdata/pg_hba.conf,shouldbeincludedinafilesystembackupbecausetheydonotappearinthe
pg_dumpallfile. Thepg_dumputilitycandumpasinglePOSTGRESQLdatabase.
Torestorefromabackupusingapg_dumpallfile,POSTGRESQLmustbeinitialized,anymanually
edited configuration files restored to /data, and the databasedump file run by psql. This action