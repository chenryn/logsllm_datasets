路径
5、标签标记的对象。通常在action 属性内指定要处理表单数据的 web应用程序的 URL
路径
客户端脚本植入的攻击步骤
1、攻击者注册普通用户后登陆网站
2、打开留言页面，插入攻击的 js 代码
3、其他用户登录网站（包括管理员），浏览此留言的内容
4、隐藏在留言内容中的 js 代码被执行，攻击成功
实例
数据库
CREATE TABLE `postmessage` (
`id` int(11) NOT NULL auto_increment,
`subject` varchar(60) NOT NULL default '',
`name` varchar(40) NOT NULL default '',
`email` varchar(25) NOT NULL default '',
`question` mediumtext NOT NULL,
`postdate` datetime NOT NULL default '0000-00-00 00:00:00',
PRIMARY KEY
(`id`)
) ENGINE=MyISAM
DEFAULT CHARSET=gb2312 COMMENT=' 使 用 者 的 留 言 '
AUTO_INCREMENT=69 ;
//add.php 插入留言
//list.php 留言列表
//show.php 显示留言
程序和数据库打包下载地址
点我下载
提交下图的留言
浏览此留言的时候会执行 js 脚本
插入  无限弹框
插入 跳转钓鱼页面
或者使用其他自行构造的 js 代码进行攻击
防范的方法
一般使用 htmlspecialchars 函数来将特殊字符转换成 HTML 编码
函数原型
string htmlspecialchars (string string, int quote_style, string charset)
string 是要编码的字符串
quote_style 可选 , 值可为 ENT_COMPAT、ENT_QUOTES 、ENT_NOQUOTES ，默认值
ENT_COMPAT，表示只转换双引号不转换单引号。ENT_QUOTES ，表示双引号和单引号都
要转换。ENT_NOQUOTES ，表示双引号和单引号都不转换
charset 可选,表示使用的字符集
函数会将下列特殊字符转换成 html 编码:
& ----> &amp;
" ----> &quot;
' ----> &#039;
 &lt;
> ----> &gt;
把 show.php 的第 98 行改成
然后再查看插入 js 的漏洞页面
PHP 漏洞全解(四)-xss 跨站脚本攻击
XSS(Cross Site Scripting)，意为跨网站脚本攻击，为了和样式表 css(Cascading Style Sheet)区
别，缩写为 XSS
跨站脚本主要被攻击者利用来读取网站用户的 cookies 或者其他个人数据，一旦攻击者得到
这些数据，那么他就可以伪装成此用户来登录网站，获得此用户的权限。
跨站脚本攻击的一般步骤:
1、攻击者以某种方式发送 xss 的 http 链接给目标用户
2、目标用户登录此网站，在登陆期间打开了攻击者发送的 xss 链接
3、网站执行了此 xss 攻击脚本
4、目标用户页面跳转到攻击者的网站，攻击者取得了目标用户的信息
5、攻击者使用目标用户的信息登录网站，完成攻击
当 有 存 在 跨 站 漏 洞 的 程 序 出 现 的 时 候 ， 攻 击 者 可 以 构 造 类 似
http://www.sectop.com/search.php?key= ，诱骗用户点击后，可以获取用户 cookies 值
防范方法:
利用 htmlspecialchars 函数将特殊字符转换成 HTML 编码
函数原型
string htmlspecialchars (string string, int quote_style, string charset)
string 是要编码的字符串
quote_style 可选 , 值可为 ENT_COMPAT、ENT_QUOTES 、ENT_NOQUOTES ，默认值
ENT_COMPAT，表示只转换双引号不转换单引号。ENT_QUOTES ，表示双引号和单引号都
要转换。ENT_NOQUOTES ，表示双引号和单引号都不转换
charset 可选,表示使用的字符集
函数会将下列特殊字符转换成 html 编码:
& ----> &amp;
" ----> &quot;
' ----> &#039;
 &lt;
> ----> &gt;
$_SERVER["PHP_SELF"]变量的跨站
在某个表单中，如果提交参数给自己，会用这样的语句
" method="POST">
......
$_SERVER["PHP_SELF"]变量的值为当前页面名称
例:
http://www.sectop.com/get.php
get.php 中上述的表单
那么我们提交
http://www.sectop.com/get.php/">
那么表单变成
" method="POST">
跨站脚本被插进去了
防御方法还是使用 htmlspecialchars 过滤输出的变量，或者提交给自身文件的表单使用
这样直接避免了$_SERVER["PHP_SELF"]变量被跨站
PHP 漏洞全解(五)-SQL 注入攻击
SQL 注入攻击(SQL Injection)，是攻击者在表单中提交精心构造的 sql 语句，改变原来的 sql
语句，如果 web程序没有对提交的数据经过检查，那么就会造成 sql 注入攻击。
SQL 注入攻击的一般步骤:
1、攻击者访问有 SQL 注入漏洞的网站，寻找注入点
2、攻击者构造注入语句，注入语句和程序中的 SQL 语句结合生成新的 sql 语句
3、新的 sql 语句被提交到数据库中进行处理
4、数据库执行了新的 SQL 语句，引发 SQL 注入攻击
实例
数据库
CREATE TABLE `postmessage` (
`id` int(11) NOT NULL auto_increment,
`subject` varchar(60) NOT NULL default '',
`name` varchar(40) NOT NULL default '',
`email` varchar(25) NOT NULL default '',
`question` mediumtext NOT NULL,
`postdate` datetime NOT NULL default '0000-00-00 00:00:00',
PRIMARY KEY
(`id`)
) ENGINE=MyISAM
DEFAULT CHARSET=gb2312 COMMENT=' 使 用 者 的 留 言 '
AUTO_INCREMENT=69 ;
grant all privileges on ch3.* to 'sectop'@localhost identified by '123456';
//add.php 插入留言
//list.php 留言列表
//show.php 显示留言
程序和数据库打包下载地址
点我下载
页面 http://www.netsos.com.cn/show.php?id=71 可能存在注入点，我们来测试
http://www.netsos.com.cn/show.php?id=71 and 1=1
返回页面
提交 http://www.netsos.com.cn/show.php?id=71 and 1=2
返回页面
一次查询到记录，一次没有，我们来看看源码
//show.php 12-15 行
// 执行 mysql 查询语句
$query = "select * from postmessage where id = ".$_GET["id"];
$result = mysql_query($query)
or die("执行 ySQL 查询语句失败：" . mysql_error());
参数 id 传递进来后，和前面的字符串结合的 sql 语句放入数据库进行查询
提交 and 1=1，语句变成 select * from postmessage whereid = 71 and 1=1 这语句前值后值都
为真，and 以后也为真，返回查询到的数据
提交 and 1=2，语句变成 select * from postmessage where id = 71 and 1=2 这语句前值为真，
后值为假，and 以后为假，查询不到任何数据
正常的 SQL 查询，经过我们构造的语句之后，形成了 SQL 注入攻击。通过这个注入点，我
们还可以进一步拿到权限，比如说利用 union 读取管理密码，读取数据库信息，或者用 mysql
的 load_file，into outfile 等函数进一步渗透。
防范方法
整型参数:
使用 intval 函数将数据转换成整数
函数原型
int intval(mixed var, int base)
var 是要转换成整形的变量
base，可选，是基础数，默认是 10
浮点型参数:
使用 floatval 或 doubleval 函数分别转换单精度和双精度浮点型参数
函数原型
int floatval(mixed var)
var 是要转换的变量
int doubleval(mixed var)
var 是要转换的变量
字符型参数:
使用 addslashes 函数来将单引号“'”转换成“\'”，双引号“"”转换成“\"”，反斜杠“\”转换成“\\”，
NULL 字符加上反斜杠“\”
函数原型
string addslashes (string str)
str 是要检查的字符串
那么刚才出现的代码漏洞，我们可以这样修补
// 执行 mysql 查询语句
$query = "select * from postmessage where id = ".intval($_GET["id"]);
$result = mysql_query($query)
or die("执行 ySQL 查询语句失败：" . mysql_error());
如果是字符型，先判断 magic_quotes_gpc 是否为 On,当不为 On 的时候使用 addslashes 转义
特殊字符
if(get_magic_quotes_gpc())
{
$var = $_GET["var"];
}
else
{
$var = addslashes($_GET["var"]);
}
再次测试，漏洞已经修补