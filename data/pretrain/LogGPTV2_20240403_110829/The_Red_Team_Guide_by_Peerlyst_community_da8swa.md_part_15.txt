# Tips to Defend Against Linux Attacks

## References and Further Reading:
- **Advanced Infrastructure Penetration Testing** - Packt Publishing: Chiheb Chebbi
- **Linux Users and Groups**: [Linode Documentation](https://www.linode.com/docs/tools-reference/linux-users-and-groups/)
- **Schedule Tasks on Linux Using Crontab**: [Kvz Blog](https://kvz.io/blog/2007/07/29/schedule-tasks-on-linux-using-crontab/)
- **LinEnum**: [GitHub Repository](https://github.com/rebootuser/LinEnum)

## Chapter 14: Attacking ICS/SCADA
### Contributor: Mike Art Rebultan

#### Introduction
Industrial Control Systems (ICS) and Supervisory Control and Data Acquisition (SCADA) systems are not immune to cybersecurity threats. In fact, these systems are particularly vulnerable because a successful attack can have severe consequences, including damage to the organization's reputation, financial impact, and even loss of life. This article will discuss security attacks on general ICS/SCADA environments, such as power grids, waste and water management, petrochemical plants, data centers, nuclear power plants, and transportation systems (air, maritime, and railway). The focus will be on often-neglected attack surfaces, including physical and system (OS and firmware) vulnerabilities.

## Physical Security Attacks
Social engineering remains a common method for adversaries to gain access to facilities. Impersonation, where an attacker pretends to be an IT guy, janitor, delivery person, inspector, business partner, vendor, or client, is a frequent tactic. Tailgating, where an attacker follows a legitimate employee into the premises, is another method. 

Insider threats are also a significant concern. For example, a vendor might plug in a USB drive loaded with malware without the control engineer scanning it first. This can happen even in organizations with strict policies, especially if the vendor and employee have a trusted relationship.

Even air-gapped devices are not entirely secure if an adversary has already gained physical access to the ICS environment. They may wait for the right moment to execute their malicious actions without detection.

## Signaling Communication Devices
GPS jamming devices, which are relatively inexpensive, can be used for spoofing. These devices can interfere with navigation systems, affecting autopilot planes, maritime vessels, and other critical systems.

## Communication Channels
GSM or LTE spoofing can disrupt signaling communication between trains and tracks, or between aircraft and tower controllers. Similarly, Wi-Fi networks can be spoofed, hijacked, or jammed to interfere with communication. Wardriving, a technique for finding and exploiting Wi-Fi networks, is a common method used by attackers.

## CCTV
Adversaries can manipulate CCTV cameras using FM radio jammers and tools like Samurai Linux distro. This allows them to change camera directions and gain unauthorized access to operations through Human-Machine Interfaces (HMI), Remote Terminal Units (RTU), or Master Terminal Units (MTU).

## Logical Security Attacks
In the current generation of ICS/OT, air-gapped systems have evolved into connected networks, making them more accessible from the internet. This convenience also makes them more vulnerable to attacks.

### Reconnaissance
The first stage of the cyber kill chain involves reconnaissance, where adversaries gather information about their target. Common tools for this include Shodan and Google Dorking. Shodan filters, such as Modbus, BACnet, S7, and ClearSCADA, can help identify potential targets. Google Dorks, like `intitle:"Miniweb Start Page"`, can also be used to find specific web interfaces.

### Phishing or Spear Phishing
After identifying a target, phishing is a common and effective strategy to compromise privileged accounts. This can lead to lateral movement from the IT network to the OT environment, especially if there is no network segmentation.

## Summary
While there are many attack surfaces in ICS/SCADA environments, the methods discussed here are among the most straightforward. To mitigate these risks and implement defense-in-depth, refer to the author's recorded talk at HITB-GSEC Singapore 2018.

### Abbreviations
- **CCTV**: Closed-Circuit Television
- **HMI**: Human Machine Interface
- **HVAC**: Heating, Ventilating, and Air Conditioning
- **ICS**: Industrial Control System
- **IT**: Information Technology
- **MTU**: Master Terminal Unit
- **RTU**: Remote Terminal Unit
- **SCADA**: Supervisory Control and Data Acquisition
- **OT**: Operational Technology
- **Wi-Fi**: IEEE 802.11x

## References and Further Reading
- [Attacking MODBUS Protocol](https://github.com/enddo/smod)
- [ICS Computer Emergency Response Team - Daily News](https://ics-cert.us-cert.gov/)
- [ICS-CERT's Top 20 Cybersecurity Attacks Against ICS](https://ics-cert.us-cert.gov/sites/default/files/ICSJWG-Archive/QNL_DEC_17/Waterfall_top-20-attacks-article-d2%20-%20Article_S508NC.pdf)
- [Cyber Kill Chain](https://www.lockheedmartin.com/en-us/capabilities/cyber/cyber-kill-chain.html)
- [Google Dork Database](https://www.exploit-db.com/google-hacking-database/)
- [Shodan Search Guide](https://help.shodan.io/the-basics/search-query-fundamentals)
- [Maltego Community Edition](https://www.paterva.com/web7/buy/maltego-clients/maltego-ce.php)
- [Samurai Linux Framework](https://sourceforge.net/projects/samurai/files/)
- [Brutal Tool for Phishing](https://github.com/Screetsec/Brutal)

## Chapter 15: Privilege Escalation
### Contributor: Haythem Arfaoui

#### Introduction
Despite the best efforts of security experts, hackers often find ways to breach networks and steal data. One common technique is privilege escalation, where attackers gain higher-level permissions to access sensitive information, create backdoors, or introduce malware. There are two types of privilege escalation:

- **Horizontal Privilege Escalation**: The attacker gains access to other low-level accounts.
- **Vertical Privilege Escalation**: The attacker attempts to access resources and functions reserved for higher-privileged users, such as administrators.

This section will detail the security issues that can lead to effective privilege escalation attacks on both Linux and Windows operating systems.

## Privilege Escalation Techniques
### LINUX Privilege Escalation
Common techniques in Linux for privilege escalation include:

- **Kernel Exploits**: Such as the Dirty COW exploit, which leverages a race condition to write arbitrary data to restricted system files.
- **Programs Running as Root**: Exploiting programs that run with root privileges.
- **Installed Software**: Targeting vulnerabilities in installed software.
- **Weak/Reused/Plaintext Passwords**: Gaining access through weak or reused passwords.
- **Inside Service**: Exploiting services running with elevated privileges.
- **SUID Misconfiguration**: Misconfigured Set-User-ID (SUID) files.
- **Abusing Sudo Rights**: Exploiting sudo configurations.
- **World-Writable Scripts Invoked by Root**: Manipulating scripts that are writable by all users but executed by root.
- **Bad Path Configuration**: Exploiting PATH environment variable misconfigurations.
- **Cronjobs**: Exploiting cron jobs that run with elevated privileges.
- **Unmounted Filesystems**: Accessing unmounted filesystems that may contain sensitive information.

### Kernel Exploits
- **Dirty COW Exploit**: This exploit, discovered through an HTTP packet capture, uses a race condition to force the Linux kernel to write arbitrary data to restricted system files. It was described as "the most serious Linux local privilege escalation exploit ever" by Dan Rosenberg due to its widespread presence in virtually every distribution of Linux.

By understanding and addressing these vulnerabilities, organizations can better protect their Linux systems from privilege escalation attacks.