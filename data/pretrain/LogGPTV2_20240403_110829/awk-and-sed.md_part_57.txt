printf(
#打开文件，读取所有的行
if (OKmakechange
QQ群：
close(spellout)
”#读取文件的 while循环结束
close(spel lsource)
#将所有行写入临时输出文件
# gusb 做修改并打印每个被修改的行。
#如果找到匹配，用
while( (getline 0){
newspelling)
("Globally change %s to %s? (y/n):",
 print > spellout 
if ($o
50192241
- 434 -
~ /[yy](es)?/ ） {
 newspelling, OKmakechange, changes)
misspelling) {
changes +=1 #计算修改的行数
 madechg = gsub (misspelling,
print ">",
附录三
 $O
第十二章的补充
---
## Page 417
#对所有可用的从属的模块添加检测功能
#INDEXDIR=/work/ index 
# 1.1 -- 7/9/90
masterindex Shel丨脚本的清单
#如果确认，用输出代替输入
useNumber=1
sectNumber=1 
FORMAT=1
PAGE=""
FILES=""
MASTER="
#! /bin/sh 
#在保存修改之前提示用户确认
function confirm_changes( savechanges) 
INDEXMACDIR=/work/macros/current 
INDEXDIR=/work/sedawk/awk/index
#在保存修改之前确认
#
}#函数 make_global_change ()结束
case $1 in
”#提示用户进行更正的 while循环结束
#如果更正没有被确认，
if (savechanges
while (! savechanges )
system("mv '
else if （ OKmakechange ^
一#
#在保存前请确认
# 报告修改的数量
if (OKmakechange 
QQ群：
confirm_changes ()
printf ("%d lines changed. ", changes)
OKmakechange = 
printf "Globally change to:"
/ [yy] (es)?/)
提示输入新的单词 
 spellout "
50192241
435
 spellsource)
y)结束
/[nN]o?/ ){
附录三
第十二章的补充
---
## Page 418
fi
if
fi
if
done
exit 
$INDEXDIR/page. idx $FILES
FILES="/tmp/index$$"
else 
echo "Please supply a valid filename.'
["$FILES" = "" ]; then 
done
for x in $FILES 
exit
shift
esac
s*)
-p*)
*，*)
[1-9]]
(m*)
sectNumber= ‘expr $sectNumber + 1 ‘
awk’-F\t'
sectNumber= ‘expr $sectNumber + 1
romaNum= ‘$INDEXDIR/romanum $sectNumber 
["$useNumber" != 0 ］; then 
awk ’ -F\t’
 volume=$sectNumber namelist=$sectNames $x >>/tmp/index$$ 
NF >1 { print $O ":" volname ”
NR == 1 { split(namelist, 
NF == 1 {print $0 } 
volume=$romaNum $x >>/tmp/index$$
NF >1 { print $0 ":" volume ” 
NF == 1 { print $0 }
fi;;
else 
if ［ -f $1 ]; then
echo $1 "
FORMAT=O;;
PAGE="TRUE";;
sectNames=$1; useNumber=0;;
sectNumber=$1;; 
MASTER="TRUE";;
echo "$1: file not found"
FILES="$FILES $1"
 volname = names [volume] 
QQ群：
is not a valid argument";; 
50192241
436
 names,
附录三
第十二章的补充
---
## Page 419
/work/bin/r omanum
/work/bin/r otate. idx
/work/bin/for mat. idx
/work/bin/pagenums. idx
/work/bin/page. idx
默认时指准备的输出中包含用于格式化的troff 宏。
-p or-page 为每个页码生成了一个索引条目列表。它也可用于防
不是第一卷，那么指定一个卷号作为单独的参数。这个卷号被转换
-m or-master 表示你在编辑一个多卷的索引。每卷的索引条目应
的索引。除非对输出进行重定向，否则结果将显示到屏幕上。
masterindex 根据由 troff 输出的结构化索引条目生成一个格式化
使用说明
提要
这些文档和下面的注释是由 DALE Dougherty 提供的。
masterindex 的文档
if [ -s "/tmp/index$$" ]; then 
 $INDEXDIR/format. idx FMT=$FORMAT MACDIR=$INDEXMACDIR 
/work/bin/combine. idx
止条目的硬拷贝。
为一个罗马数字，并被添加到该文件的索引条目的所有页码之前。
该在一个单独的文件中，
masterindex-
$INDEXDIR/pagenums. idx 
sort -bdf -t: +0 -1
$INDEXDIR/input. idx $FILES |
 work/bin/masterindex
文件
选项
S
INDEXDIR/combine. idx |
rm /tmp/index$$
masterindex [-master [volume]] [-page] [-screen] [filename..]
一生成单册或多卷索引的索引程序。
QQ群：
+1 -2 +3 -4 +2n -3n | uniq |
且文件名应该依次给出。如果第一个文件
50192241
- 437
附录三 
。
第十二章的补充
---
## Page 420
在一行中如果没有发现冒号定界符，第一个逗号被转换为一个冒号）。我建议
部分。但不必担心，
目和第三条目分隔开。
注意，逗号没有用作定界符。用冒号将主条目和次条目分隔开，用分号将次条
逗号将两个关键字分隔开。我们还用一个.XN宏来生成没有页码的“see”引
如果条目由主排序关键字和次排序关键字组成，那么我们可以按下面的方式编
的位置。最简单的情形是：
本节介绍了在文档文件中索引编码条目。我们用.X宏来给出文件中索引条目
索引编码条目
提供更多的支持。
我也努力做一些其他事情来对前面的索引程序进行改进，并为个人编写的索引
我没有全部复制 JofC 的格式，但如果想做这是很容易做的。请你观察 JofC 索
彻底地检查了JofC 索引，
Tim O’Reilly 推荐说he Joy of Cooking（Jof C)索引是一个理想的索引。我
注意这些程序需要“nawk”（新的 awk）：nawk（1）和 sed
. XX "primary: secondary; tertiary"
关
这
用。它按下面的形式定义：
. XX "pr imary, 
码：
. XX "entry"
引并亲自检查它的特点。
背景细节
顺序进行排序：“，II,III，IV，IX，V，VI，VII，VIII，×.）
被正确的排序，
该包含任何troff 字体更改。
这个新的索引程序是模块化的，
缺陷
/work/macr os/current/indexmacs
4
（1V）
键字提供了更大的灵活性，
些编码形式继续按它们自己的方式起作用，
，你应该按下面的形式定义条目：
secondary"
，因此只限于8本书索引（这个排序程序对罗马数字1-10按以下
你仍然可以利用逗号来分隔主关键字和次关键字（要知道
。这意味着在这个语法中逗号可以作为关键字的一个组成
QQ群：
，3个关键字为：
。这个程序没有解决它们。大于8的罗马数字不能
它调用了一系列的小程序。这允许我们连接不
50192241
- 438 -
主关键字，次关键字和第三关键
而masterindex利用3个级别的
附录三 
第十二章的补充
---
## Page 421
这里的分号将第三关键字分隔开。这个分号和关键字一起输出，并且有多个第
.XX "justification: Iines; defined"
前面的例子可以写成具有三级的一个条目：
次关键字的一部分。
这里在“lines”和“justification”之间的逗号不是作为定界符，而是作为
.XX "justification, lines, defined"
（冒号在输出中不出现。）用类似的方法可以编写下面的条目：
. XX "line justification: definition of" 
再次强调，尽管三级条目的语法不同，但以下索引条目是正确的：
引用将被输出到同一行，而第一个次条目将被输出到下一行。
JofC 索引的另外一个特点是第一个次关键字和主关键字出现在同一行。老的索
同的页码）。另外，这个页码不能组合到多个连续页码中。
当troff 处理这个索引条目时，它输出带有星号的页码。这就是当输出显示在
.XB "cat command"
我添加了一个新宏.XB,除了索引条目的页码在输出时以粗体显示，用于表示它
.XX "cat command" 
进行转换。请看下面的条目：
另一个特点是当利用代字号（～）
在新书中利用上面的语法来编码，
XX "justification: lines, defined"
它
.XX "line justification, definition of"
果
度
关
（顺便说一下，
屏
在
要
你
X
XX "cat command"
该
也将产生相同的结果：
主关键字作为单独的条目存在（有与它相关的页码），
键字时可以输出到同一行，
程序将次关键字放在下一行。用JofC方式的一个好处是当条目只包含一个次
将这两个颠倒了
可以将次关键字作为主条目的一个分类（命令，属性，
条目和下面的两个条目是等价的：
“
而不是由“清晰度”
"command: cat"
在JofC索引中，
因为“command cat”没有太大的意义。要在一个条目中使
QQ群：
’来排版下一行。
所以更易读。因此，
50192241
我注意到它们允许在罗马字体和粗体字中有相
）作为定界符时，
即使你只给出了主关键字和次关键字。
- 439 -
下一个次关键字将被缩进。注意
，页码用粗体字转义序列包围。
你应该由“行整版，清晰
可以将主关键字和次关键字
附录三
，这个主关键字的页码
，函数等等）。
第十二章的补充
。注意不
意，如
---
## Page 422
WIN_NOTIFY_EVENT_PROC 13
attribute, WIN_CONSUME_KBD_EVENTS 13
applications, structure of 2; program 1
$ masterindex -s ch01
这里有几行：
当使用-s 参数调用时，这个程序将准备在屏幕上显示索引（或作为 ASCII文件
示条目以一个次条目开始。
顶部的两行是显而易见的。
$ masterindex ch01 
们大多数直接通过troff请求来完成。以下是开始的几行：
/work/macros/current/indexmacs.这些宏应该产生与前面相同的索引格式，包
默认的输出是利用troff（通过fmt）来产生的。其中包含宏，这些宏被定义在
masterindex 有3种类型的输出：troff，screen 和 page。
我想做一件前面的程序没有处理的事，即生成一个没有troff 代码的索引。
输出格式
justification 4-9 
可以按下面形式的输出：
然而主要的任务是为所有的主关键字，次关键字和第三关键字收集页码，因此
三关键字将跟随在次关键字的后面。
 WIN_CONSUME_PICK_EVENTS 13 
打
作
参
参
￥
 so /work/macros/current/indexmacs 
为分隔符来输出。一个“1”表示第二个参数包含个主目录。一个“2”表
S
印）。
-数有3个可能的值。一个“A”表示第二个参数是一个字母表中的字符，应该
数来指定卷的宽度是不够灵活的，
lines 4,6; defined, 5
 2 "XV_INIT_ARGC_PTR_ARGV 5, 6"
2
2
2 "WIN_CONSUME_PICK_EVENTS 13"
1 "attribute, WIN_CONSUME_KBD_EVENTS 13"
A "A"
1 "applications, structure of 2; program
"XV_ERROR_PROC 14"
"WIN_NOTIFY_EVENT_PROC 13"
QQ群：
.XC宏产生多卷输出（对小的书它将输出两卷。
50192241
但这里必须这样处理）。.XF 宏的第一个
440
附录三 
第十二章的补充
用
它
---
## Page 423
$ masterindex -m 4 -s book4 book5
卷号作为参数。
必须以连续的顺序来指定文件。如果第一个文件不是第一卷，你可以用相应的
XV_INIT_ARGS attribute l: 6 
XV_INIT_ARGC_PTR_ARGV attribute Il: 5,6
xv_init(） procedure Il: 4;Ill:5 
$ masterindex -m -s book1 book2 book3
个单独的文件中。
编辑一个主索引
Page 2
Page 1
$ masterindex -p ch01
通
用，将提供索引条目的逐页列表。
显然，这对快速验证索引是有用的。第三种格式也可用来验证索引。用-p 来调
XV_USAGE_PROC 6 
XV_INIT_ARGS 6
XV_INIT_ARGC_PTR_ARGV 5, 6 
XV_ERROR_PROC 14
通过指定-m选项可以调用多卷主索引。对于特定卷的每组索引条目必须放在一
XView libraries
XView, compiling programs
compiling XView programs
XView interface
applications, structure of; program
structure of xView applications
QQ群：
 structure of
50192241
441
附录三
第十二章的补充
---