Class A
num sources (rank)
num sources (rank)
num sources(rank)
num sources (rank)
Xi.exe (W32-Xibo),
4,310 (1)
4,300 (1)
4,313 (1)
7,408 (1)
NB-EP1
NB-EP2
Agobot-1
Agobot-2
Agobot-3
135,139,445
135,139,445,5000
1025,1981,2745,6129
1025,2745,6129
80,139,1025,
2745,6129
msmsgri32.exe (Randex.D),
Antivirus32.exe (SDBot.JW)
EP-2704, mdms.exe(Agobot)
EP-2792, EP-2904
Agobot variant-I
Agobot variant-II
Agobot variant-III
1,187 (2)
780 (3)
16
1
0
1,028 (2)
678(3)
452 (4)
437 (5)
415 (6)
1,046 (2)
721(3)
68(10)
3
0
537(4)
15
0
0
0
Table 9: 24 hours of multi-port source activity at the four sites
24 hour period. We order the proﬁles based on the ranks of all
multi-port proﬁles collected at the UW I network, which showed
the greatest afﬁnity to Agobot. The table reveals several notable
observations. First, the top two exploits are extensively observed
across all four networks and their rankings are consistent in the
Class B networks — a spatial invariant. Second, although the LBL
network is much smaller, it observes the same number of sources
as the other two UW networks for the top three exploits. This is
probably due to the fact that the networks belong to the same /8,
and suggests that these multi-port sources often sweep the address
space. Third, UW I receives many more Agobot scans than the
other networks, though we don’t know why.
We explore Agobot scans in greater detail in Figure 12. The ﬁg-
ures show the volume of unique sources per hour on several of the
Agobot ports during a ﬁve day period in March at the two adja-
cent UW networks. The graph at UW I shows four visible spikes,
indicating an Agobot attack. While UW II background radiation
seems to otherwise closely follow UW I, these Agobot spikes are
peculiarly absent. These graphs also provide a temporal perspective
on the growth of Agobot, with a striking daily spike-followed-by-
decay pattern, presumably as new machines are cleaned up over the
course of the day.
We see little Agobot on the Class A network. This likely reﬂects
Agobot’s “maturity” as malwares go.
It has gone through itera-
tive enhancements and likely has (essentially) “evolved” to have
been programmed to avoid telescopes; or perhaps it has become
equipped with list of target networks, or the scanning is being con-
sciously focused by a human operator via IRC control channels.
Activity
All
Srch+Loc
Samr-exe
Witty
LBL
31K 276K
76%
85%
2,111
1,601
72
241
UW Class A LBL ∩ UW LBL ∩ Class A
582K
57%
2,012
162
15K
75%
1,634
61
6.5K
91%
116
18
Table 10: Trafﬁc from sources seen across networks: intersec-
tions vs. individual networks
6.2 Sources Seen Across Networks
We now consider sets of source hosts seen on multiple networks
at approximately the same time. We analyze source IPs seen across
networks on an arbitrarily chosen day (Mar 29 GMT), characteriz-
ing them in terms of: 1) How many such source hosts are there?
2) Do they send the same trafﬁc to different networks? 3) What
does the activity distribution look like? and 4) how does it compare
to the distribution on individual networks?
As shown in Table 10, source IPs seen at LBL and UW have a
surprisingly large intersection set—almost half the source IPs seen
at LBL are also seen at UW. In contrast, the intersection of LBL
and the Class A is much smaller, even though we are seeing many
more source IPs at the Class A than at UW.4 This contrast may be
due to some sources avoiding the Class A networks, and also the
proximity of LBL and UW in the IP address space.
4Since we only see ICMP Unreachable backscatter only on the Class A
network, and these constitute a signiﬁcant number of source IPs, here we
exclude them from the comparison to avoid skewing the activity distribu-
tion.
All
Srch+Loc
Witty
Blaster
Mar 29 Mar 30 Apr 29
62K
42%
0
24
31K
76%
72
30
30K
83%
64
31
1-Day ∩ 1-Month ∩
680
85%
0
7
1,513
68%
15
8
Table 11: Trafﬁc from sources seen over time: intersections vs.
individual periods
The next evaluation is to conﬁrm that a given source indeed sends
the same trafﬁc to the different networks. We extract an activity
vector for each source IP on the LBL and UW networks and com-
pare, ﬁnding that indeed this is the case, with one peculiarity: while
several thousand SrchAAA and Locator sources are common, we
also ﬁnd nearly two thousand Locator-only sources at one network
that are SrchAAA-only sources at the other. This turns out to be due
to the interaction between source-destination ﬁltering and the scan-
ning mechanism of the SrchAAA/Locator sources. These sources
choose, apparently randomly, to send either SrchAAA or Locator
to a given destination, but not both.
Finally, what does the activity proﬁle of a given source tell us
about how likely we are to see it elsewhere? As shown in Ta-
ble 10, sources exhibiting the dominant activity proﬁle—SrchAAA
and Locator—are often seen at multiple locations in the network.
On the other hand, Samr-exe and Witty present an interesting case.
The Samr-exe sources we see in the intersection of LBL and UW
are more than what we ﬁnd at LBL alone! (1,634 vs 1,601) This
seeming inconsistency is caused by a number of source hosts not
completing the exploit when contacting LBL, and thus not being
identiﬁed there, but doing so at UW. In addition, the Samr-exe pop-
ulation seen at UW is merely 2,061 (0.7%), so we see a surprisingly
large overlap for it between LBL and UW. On the other hand, LBL
and the Class A have only 116 Samr-exe sources in common, out
of more than 2,000 seen on the Class A, suggesting that Samr-exe
sources scan with a local bias.
6.3 Sources Seen Over Time
To characterize sources seen at the same network over time, we
analyze activity seen at LBL on three days: March 29, March 30,
and April 29. This gives us comparisons for adjacent days and one
month apart, respectively. Table 11 characterizes the variation. We
see that the intersection of source hosts—even in the case of only
one day apart—is much smaller than the intersection across net-
works. While this is partly because the UW network is larger than
LBL, looking at the set of sources seen on another LBL network
of the same size on March 29 we ﬁnd more than 5,000 hosts in
common. This conﬁrms that we tend to see a larger intersection
of source IPs across networks than over time. One effect we have
not controlled for here, however, is DHCP artifacts: a host might
be assigned different addresses on different days. We also note that
one month’s time does not greatly further reduce the intersection
size, suggesting that if a host does not have the DHCP artifact, then
it tends to stay in the intersection. The initial steep decaying of
source IP sets also suggest that it will be easier to track a (mali-
cious) host across space than across time.
The number of source hosts seen over time also varies by activ-
ity. For example, Witty did not persist over a month (nor could
it, as it was a rare instance of a worm that deliberately damages
its host); Blaster’s grip on hosts is quite tenacious; and the Sr-
chAAA/Locator sources fall in between.
7. SUMMARY
Previous studies of Internet trafﬁc have identiﬁed a number of
now well-established properties: diurnal cycles in volume; vari-
ability in mix across sites and over time; bursty arrivals; the ubiq-
uity of heavy-tailed distributions. Over the past several years, how-
ever, an important new dimension of Internet trafﬁc has emerged,
and it has done so without any systematic observation or charac-
terization. The gross features of this new breed of trafﬁc are that
it is complex in structure, highly automated, frequently malicious,
potentially adversarial, and mutates at a rapid pace. Each of these
characteristics motivates the need for a deeper understanding of this
“unwanted” trafﬁc.
We have presented an initial study of the broad characteristics of
Internet background radiation. Our evaluation is based on trafﬁc
measurements from four large, unused subnets within the IPv4 ad-
dress space. We developed ﬁltering techniques and active respon-
ders to use in our monitoring, analyzing both the characteristics of
completely unsolicited trafﬁc (passive analysis) and the details of
trafﬁc elicited by our active responses (activities analysis).
Passive analysis demonstrates both the prevalence and variabil-
ity of background radiation. Evaluation of destination ports reveals
that the vast majority of trafﬁc targets services with frequently-
exploited vulnerabilities. Analysis of backscatter trafﬁc shows the
overall dominance of TCP SYN-ACK/RST packets, but otherwise
we do not ﬁnd a great deal of consistency across the monitored
subnets.
Our activities analysis focused on the most popular services tar-
geted by background radiation, ﬁnding a rich variegation. Activ-
ities across all of the monitored services include new worms re-
leased during our study, vestiges of old worms such as Code Red
and Nimda, the frequent presence of “autorooter” scans (similar to
worms, but without self-propagation), and a noticeable number of
connections that are simply empty even when given an opportu-
nity to send data. As with the passive analysis, we ﬁnd signiﬁcant
diversity across the subnets we monitored, and also over time.
We also examined background radiation from the perspective of
source host behavior. Considering source activities across ports
reveals consistent behavior in each of the measurement sites for
the most prevalent multi-port scan type (scans to both ports 139
and 445). Furthermore, there was an appreciable intersection of
sources across measurement sites. This can be explained by the
random scanning behavior of worms like Welchia. However, there
was a much smaller set of sources common to all measurement sites
when they are considered over time.
Perhaps the most striking result of our analysis is the extreme
dynamism in many aspects of background radiation. Unlike be-
nign trafﬁc, which only shows major shifts in constituency when
new applications become popular (which happens on fairly lengthy
time scales), the mix of background radiation sometimes changes
on a nearly-daily basis. This dynamism results in a potpourri of
connection-level behavior, packet payloads, and activity sessions
seen in different regions of the address space.
Our efforts have implications for both the research and opera-
tional communities. The ubiquity of background radiation presents
signiﬁcant difﬁculties for those who monitor Internet trafﬁc: it can
clog stateful analyzers with uninteresting activity, and due to its va-
riety it can signiﬁcantly complicate the detection of new types of
activity (for example, a new worm using the same port as existing
worms). It is clear from the highly diverse and dynamic activity we
have found that further work is needed to both assess the evolution
of background radiation over time and to develop more detailed
characterizations. We believe that our framework—preﬁltering the
trafﬁc, using lightweight responders to engage sources in enough
http://www.caida.org/outreach/papers/2003/sapphire/sapphire.html,
2003.
[21] D. Moore, C. Shannon, and J. Brown. Code red: A case study on the
spread and victims of an internet worm. In Proceedings of ACM
SIGCOMM Internet Measurement Workshop, November 2002.
[22] D. Moore, C. Shannon, G. Voelker, and S. Savage. Internet
quarantine: Requirements for containing self-propagating code. In
Proceedings of IEEE INFOCOM, April 2003.
[23] D. Moore, G. Voelker, and S. Savage. Inferring internet denial of
service activity. In Proceedings of the 2001 USENIX Security
Symposium, Washington D.C., August 2001.
[24] W32 Mydoom.A@mm. http://securityresponse.symantec.com/
avcenter/venc/data/w32.mydoom.a@mm.html.
[25] V. Paxson. Empirically-derived analytic models of wide-area tcp
connections. IEEE/ACM Transactions on Networking, 2:316-336,
1994.
[26] V. Paxson. Bro: A system for detecting network intruders in real
time. Computer Networks, December 1999.
[27] N. Provos. The Honeyd Virtual Honeypot. http://www.honeyd.org,
2003.
[28] W32 Randex.D. http://www.liutilities.com/products/wintaskspro/
processlibrary/msmsgri32.
[29] M. Roesch. Snort: Lightweight intrusion detection for networks. In
Proceedings of USENIX LISA, 1999.
[30] W32 Sasser.Worm. http://securityresponse.symantec.com/avcenter/
venc/data/w32.sasser.worm.html.
[31] Security Focus. Microsoft IIS 5.0 “translate: f” source disclosure
vulnerability. http://www.securityfocus.com/bid/1578/discussion/, April
2004.
[32] S. Singh, C. Estan, G. Varghese, and S. Savage. The Earlybird system
for real-time detection of unknown worms. Technical Report
CS2003-0761, University of California, San Diego, August 2003.
[33] S. Staniford, V. Paxson, and N. Weaver. How to 0wn the Internet in
Your Spare Time. In Proceedings of the 11th USENIX Security
Symposium, 2002.
[34] K. Thompson, G. Miller, and R. Wilder. Wide area Internet trafﬁc
patterns and characteristics. IEEE Network, 11(6):10–23, November
1997.
[35] Make your richer! Get more money easily! http://www.per.rcpt.to/lists/
rlinetd/msg01850.html.
[36] DameWare Mini Remote Control Server <= 3.72 buffer overﬂow.
http://www.securityfocus.com/archive/1/347576.
[37] Microsoft Windows DCOM RPC interface buffer overrun
vulnerability (MS03-026). http://www.securityfocus.com/bid/8205.
[38] Microsoft Windows Locator Service buffer overﬂow vulnerability
(MS03-001). http://www.securityfocus.com/bid/6666.
[39] Microsoft Windows 2000 WebDAV buffer overﬂow vulnerability
(MS03-007). http://www.securityfocus.com/bid/7116.
[40] Windows Messenger Popup Spam. http://www.lurhq.com/
popup spam.html.
[41] W32 Xibo. http://www.sophos.com/virusinfo/analyses/w32xiboa.html.
[42] V. Yegneswaran, P. Barford, and D. Plonka. On the design and use of
internet sinks for network abuse monitoring. In Proceedings of
Recent Advances in Intrusion Detection, 2004.
[43] V. Yegneswaran, P. Barford, and J. Ullrich. Internet intrusions:
Global characteristics and prevalence. In Proceedings of ACM
SIGMETRICS, June 2003.
detail to categorize them, analyzing the resulting trafﬁc along the
axes we have explored—is an important ﬁrst step towards compre-
hensively studying this new phenomenon.
Acknowledgments
Our thanks to the System and Network Security group and the net-
work operations staff of the Lawrence Berkeley National Labora-
tory for hosting the LBL monitoring setup. We are grateful to Dave
Plonka, Jeff Bartig, Geoff Horne and Bill Jensen for their continu-
ing support of the iSink project. We would also like to thank Niels
Provos for his help in setting up the Honeyd monitor at LBL, and
the anonymous reviewers for their constructive critiques.
This work was supported by ARO grant DAAD19-02-1-0304,
NSF grant CCR-0325653, NSF grant ITR/ANI-0205519 and NSF
grant EIN-0335214.
8. REFERENCES
[1] W32 Agobot IB. http://www.sophos.com/virusinfo/analyses/
trojagobotib.html.
[2] C. Anley. Creating arbitrary shellcode in unicode expanded strings,
January 2002. http://www.nextgenss.com/papers/unicodebo.pdf.
[3] M. Arlitt and C. Williamson. Web server workload characterization:
The search for invariants. In Proceedings of SIGMETRICS,
Philadelphia, May 1996.
[4] L. Baldwin, P. Sloss, and S. Friedl. Iraqi Trace.
http://www.mynetwatchman.com/kb/security/articles/iraqiworm
/iraqitrace.htm.
[5] W32 Beagle.J. http://securityresponse.symantec.com/avcenter/venc/
data/w32.beagle.j@mm.html.
[6] B. Caswell and M. Roesch. The SNORT network intrusion detection
system. http://www.snort.org, April 2004.
[7] Common Internet File System. http://www.snia.org/tech activities/
CIFS/CIFS-TR-1p00 FINAL.pdf.
[8] M. Dacier, F. Pouget, and H. Debar. Attack processes found on the
internet. In Proceedings of NATO Symposium, 2004.
[9] P. Danzig, S. Jamin, R. C´aceres, D. Mitzel, , and D. Estrin. An
empirical workload model for driving wide-area TCP/IP network
simulations. Internetworking: Research and Experience, 3:1-26,
1992.
[10] DCE 1.1: Remote procedure call. http://www.opengroup.org/
onlinepubs/9629399/toc.htm.
[11] Flowreplay Design Notes. http://www.synﬁn.net/papers/ﬂowreplay.pdf.
[12] B. Greene. BGPv4 Security Risk Assessment, June 2002.
[13] The Honeynet Project. http://project.honeynet.org, 2003.
[14] J. Jung, V. Paxson, A. Berger, , and H. Balakrishnan. Fast portscan
detectionusing sequential hypothesis testing. In Proceedings of the
IEEE Symposium on Security and Privacy, Oakland, CA, May 2004.
[15] H. Kim and B. Karp. Autograph: Toward automated, distributed
worm signature detection. In 13th USENIX Security Symposium, San
Diego, California, August 2004.
[16] E. Kohler, R. Morris, B. Chen, J. Jannotti, and F. Kaashoek. The
click modular router. ACM Transactions on Computer Systems,
18(3), August 2000.
[17] C. Kreibich and J. Crowcroft. Honeycomb–creating intrusion
detection signatures using honeypots. In 2nd Workshop on Hot
Topics in Networks (Hotnets-II), Cambridge, Massachusetts,
November 2003.
[18] D. Moore. Network telescopes: Observing small or distant security
events. Invited Presentation at the 11th USENIX Security
Symposium, 2002.
[19] D. Moore, V. Paxson, S. Savage, C. Shannon, S. Staniford, and
N. Weaver. Inside the slammer worm. In Proceedings of IEEE
Security and Privacy, June 2003.
[20] D. Moore, V. Paxson, S. Savage, C. Shannon, S. Staniford, and
N. Weaver. The spread of the sapphire/slammer worm.