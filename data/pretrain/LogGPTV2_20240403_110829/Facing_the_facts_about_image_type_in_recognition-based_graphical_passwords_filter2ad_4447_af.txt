individual click-points. Simple patterns are simple geometric
shapes formed by the 5 click-points in a password. Both
can be leveraged to launch efﬁcient dictionary attacks. While
partial success in locating hotspots has been reported using
automated image processing techniques, a more efﬁcient at-
tack collects a small sample of passwords, on the image in
question, from different users. Hotspots are extracted from
this to build an attack dictionary — a small one wherein all
password components are hotspots, or a larger one wherein
some clickpoints are hotspots with others unconstrained. Many
PassPoints passwords also follow geometric patterns [39],
[77], such as a straight line; these can be exploited to prioritize
guesses, and as the patterns are evident across a wide range
of images, they may be used even without prior knowledge or
analysis of the images.
Dictionary attacks against
recognition and cued-recall
graphical password systems require more effort up-front than
against text passwords or recall-based graphical passwords,
since attackers must ﬁrst collect one or more of a set of images.
Images gathered for one system will not help attacks on a
second system, unless both systems use the same image set.
Text password crack tools (Crack [110], John the Rip-
per [111], RainbowCrack [112], and many others) are available
to automate ofﬂine dictionary attacks. Some of these may be
modiﬁed for online attacks. Similar cracking tools would likely
surface for graphical passwords if the latter gain widespread
usage. Text password attack tools are often generic, while
some graphical attack tools may require system-speciﬁc im-
ages (though others, like the pattern-only attacks [77], have
image-independent dictionaries).
B. Capture Attacks
Password capture attacks involve directly obtaining pass-
words, or part thereof, by capturing login credentials entered
by the user, or tricking the user into divulging passwords. We
assume that links over which graphical passwords are sent are
encrypted, otherwise simple network snifﬁng or wire-tapping
allows trivial capture. New graphical password proposals must
consider the following known classes of capture attack.
1) Shoulder-surﬁng: Shoulder-surﬁng [53], [113]–[115] is
a targeted attack exacerbated by the visual aspect of graphical
passwords. As the user enters login information, an attacker
may gain knowledge about their credentials through direct ob-
servation or external recording devices such as video cameras.
As examples of the range of related attacks, text information
can be gleaned from telephoto images of computer screens
reﬂected on nearby items [114], while physical keyboard entry
has been identiﬁed from telephoto lens images as far as
195 feet away [115]. High-resolution cameras with telephoto
lenses and surveillance equipment make shoulder-surﬁng a
real concern if attackers target speciﬁc users and have access
to their geographic location. While problematic in public
environments, shoulder-surﬁng may not be as serious a threat
in private environments; far less academic attention has been
devoted to more relevant threats such as keystroke loggers or
graphical dictionary attacks.
For some recognition-based graphical passwords, multiple
successful logins must be observed to deduce the full secret —
e.g., when only a subset of user portfolio images are displayed
at each login, or if the shared secret is not explicitly revealed
at login. Passwords in other graphical systems can be gathered
from observing or recording one successful login.
Existing graphical schemes believed to be resistant or im-
mune to shoulder-surﬁng [62], [116] have signiﬁcant usability
drawbacks, usually in the time and effort required to log in,
making them less suitable for everyday authentication.
2) Reconstruction: Some attacks involve password recon-
struction rather than direct capture. For example, Weinshall’s
scheme [57], designed speciﬁcally to resist shoulder-surﬁng,
was shown by Golle and Wagner [58] to fall to a SAT (boolean
satisﬁability problem) solver, which reconstructs user secrets
in a few seconds on observing a small number of logins.
Acoustic-based reconstruction attacks on text passwords, such
as the password cracker of Berger et al. [117], seem less suited
to graphical passwords, though ideas from the reconstruction
techniques may be of use.
3) Malware: Malicious software includes any unauthorized
software installed for malicious purposes and without a user’s
informed consent,
including computer viruses and worms,
Trojan horse software including login spooﬁng, code silently
installed as a result of visiting web sites [118], and mobile
code in the form of JavaScript, ActiveX, or Flash components.
TR-09-09: GRAPHICAL PASSWORDS
15
Such malware may gather password information. Keystroke-
loggers [119] record keyboard input; mouse-loggers and screen
scrapers capture mouse actions and record screen memory,
to be sent remotely or made available for retrieval. Text
passwords can be captured using only a keystroke-logger. Most
graphical password systems require one or both of a mouse-
logger and screen scraper to capture passwords, and often
a keystroke-logger as well to collect usernames. Keystroke-
loggers alone may sufﬁce for schemes like Inkblot Authen-
tication (Section VI), which use keyboard only. If graphical
passwords gain popularity, such malware will likely do so also.
4) Phishing and pharming: Phishing attacks [120] trick
users into entering their credentials at a fraudulent website,
e.g., by having the user follow a link, in an email or engineered
to return as a search engine result. As noted earlier, phishing
attacks on recall-based graphical passwords resemble those on
text passwords. For recognition-based and cued-recall systems,
speciﬁc images must be presented to the user. To do so, a
phishing site may retrieve and relay information from the
legitimate site, in a man-in-the-middle (MITM) attack. Pharm-
ing [121], an advanced form of phishing, subverts the DNS
system (by forged DNS responses or DNS cache poisoning)
such that domain names are fraudulently resolved to the IP
address of an attacker’s web site. Depending on design of the
password scheme, recording one or more login attempts at a
phishing site may provide sufﬁcient information for an attacker
to subsequently log in. With a MITM attack, attackers may
also log in to the legitimate site at least once by hijacking a
correct authentication response provided during the attack.
5) Social engineering: Phishing is one form of social engi-
neering attack [122], [123] — for malicious purposes, tricking
users to reveal credentials by any means, e.g., phone calls
from a fake help desk or credit company. While such methods
may require targeted background work (and knowledge of
personal details in personalized attacks), this is often easier
than otherwise breaking into a system [122].
Text passwords and alphanumeric information are relatively
easy to share, with colleagues or attackers. Sharing is more
difﬁcult for graphical passwords; a frame of reference must
be coordinated, before conveying the password in sufﬁcient
detail to be used. This security advantage (complicating social
engineering attacks) has usability drawbacks, e.g., preventing
password reset by phone, and complicating safe backup stor-
age of passwords. Despite the additional difﬁculty, Dunphy et
al. [52] have preliminary evidence that users can sufﬁciently
describe their PassPoints password to enable someone else to
enter it. Other means of sharing a graphical password include
taking photos, screen shots, and drawing.
IX. METHODOLOGY FOR EVALUATION
As with other types of authentication mechanisms, establish-
ing whether a graphical password system meets its usability
and security goals can be challenging. This section summa-
rizes evaluation approaches used, including user studies, with
focus on aspects of special concern for examining graphical
password systems. Data collected from such user studies is
also critical in the security evaluation discussed above.
With usability inspection methods (such as cognitive walk-
throughs [124] and heuristic evaluations [125]), evaluators
inspect and evaluate usability-related aspects of a system.
These are conducted without end users and require a certain
level of expertise in usability [125]. They are useful early
steps in ﬁnding obvious usability problems, but are no sub-
stitute for user studies. While user testing is necessary to
evaluate usability, it is also critically important in evaluating
the practical security of graphical passwords, as well as the
interplay between these two dimensions. The challenge lies in
designing the tests so that meaningful and representative data
is collected. Security tasks are usually not the user’s primary
task in practice, yet they almost inevitably become a focus
when user tests are conducted, which may lead to behaviour
that is not representative of what would happen if the system
were deployed in practice. Novelty effects can occur; this can
be especially problematic with graphical password selection,
since users have yet to develop the coping skills that they may
adopt if using the system regularly.
Since text passwords are the most common knowledge-
based authentication mechanisms, they are often used as a
benchmark to assess the usability and security of graphical
password schemes. While useful, this comparison is biased
because users have years of experience with text passwords.
They are familiar and comfortable with the login process,
can complete it quickly, and have developed a wide range
of coping behaviours and strategies to deal with memorability
issues. The coping strategies can improve user performance
for usability but may also lead to weaker password selection.
Complicating matters further, the usable security community
lacks deﬁnitive and comprehensive results on text passwords
so it is difﬁcult to use them as benchmarks.
This raises the issue of user training and familiarization
before collecting data for analysis. The type of training, its
length, and the instructions provided to users can inﬂuence
their behaviour. Users may be more comfortable and display
behaviour indicative of what would occur in a practical setting,
they may become tired of the task and become careless, or they
may behave more or less securely based entirely on the given
instructions (which may not reﬂect a real life scenario). It is
unclear how much training users should receive (if any) before
evaluation, but researchers should carefully take into account
potential effects when interpreting the results of user studies.
The problem of testing for multiple passwords also needs
special consideration. Recent publications [28], [55], [59] have
tackled this issue but ecological validity remains difﬁcult to
achieve. Details such as how passwords are introduced, the
number of passwords, similarity between passwords, and the
frequency of login may have signiﬁcant impact on the study
results. Furthermore, interference between different types of
graphical passwords has yet to be examined. How to best
evaluate multiple password interference remains an open issue.
There are three general approaches to user testing graphical
password systems: lab studies, ﬁeld studies, and hybrid studies.
Each can provide valuable empirical data.
TR-09-09: GRAPHICAL PASSWORDS
A. Lab studies
Lab studies provide a means to evaluate the success of
design decisions in isolation, quantify improvements and
performance, discover unexpected usability problems, and
identify designs with higher probability of success (or failure)
before investing large amounts of time and resources in ﬁeld
studies. While ﬁeld studies offer superior ecological validity,
lab studies have the advantage of being held in a controlled
setting and so can be used to establish performance bounds
that can indicate whether ﬁeld tests are worthwhile. The
experimenter can ensure that participants are focused on the
task at hand, that the study is designed to enable statistical
testing of different measures, and that clear comparisons can
be made to assess the effectiveness of certain design decisions.
For example, a study may have a goal of examining the
effectiveness of a new password selection aid. In this case,
two versions of the system would be built, differing only
in the inclusion or absence of the new selection aid. The
system would be instrumented to record the user’s choice of
passwords and input during password entry, and to include
measures such as time to create a new password and number of
errors made. With security systems, it is especially important
to be relatively conﬁdent of a system’s design in the lab
before deploying it in ﬁeld studies because of the potential
for security and privacy breaches of users’ real resources and
information if problems occur in a ﬁeld study.
Besides the predetermined measures, lab studies aim to
uncover any unforseen difﬁculties encountered by the users
across a set of predetermined tasks. These tasks should be
carefully chosen to reﬂect realistic usage scenarios. To maxi-
mize ecological validity, the environment should be set up to
mimic target environments as closely as possible in technical
details and instructions given. Users should be closely ob-
served as they perform these tasks, as this is how many usabil-
ity problems are revealed. Researchers must also try to avoid
biasing user behaviour, especially when dealing with security,
as users may behave more or less securely than usual to “help
the researcher”. A method called think-aloud is often used,
where users are encouraged to voice a running commentary
as they perform the tasks. Pre/post questionnaires or interviews
are useful to gather users’ opinions, attitudes, and feedback.
These should be a secondary source of information, used in
conjunction with observations and potentially system logs, as
users’ reported views often do not reﬂect their performance
and fail to reveal crucial usability problems.
An often cited guideline, advocating smaller, quicker us-
ability studies — that ﬁve users are enough to discover
most usability problems [126], [127] — has long been used
to justify small usability studies. Recent work revisits this
assumption, highlighting that this is often not enough and
that in some cases, severe usability problems are only dis-
covered after running a larger group of participants [128]–
[130]. The likelihood of ﬁnding usability problems is not
evenly distributed and may vary with the complexity of the
system being tested. Some problems only arise under speciﬁc
circumstances, so a small sample of users may not be sufﬁcient
to uncover them. The variability in the number of problems
16
found by studying any one user also makes it unlikely that a
sample of ﬁve users would discover most usability problems.
Faulkner [128] justiﬁes that
twenty users “can allow the
practitioner to approach increasing levels of certainty that high
percentages of existing usability problems have been found in
the testing”. When conducting user studies on authentication
schemes involving user choice, there is an additional motiva-
tion for larger studies: user behaviour patterns which weaken
security may only become apparent with a larger sample.
Memorability must be assessed in authentication systems.
One approach is to administer distraction tasks within a
session, as done in psychological studies on memory. These
are intended to clear a user’s working memory (short term
memory) and simulate the longer passage of time. To be
more ecologically valid, many graphical password studies
have multiple lab sessions, where participants return at ﬁxed
intervals to re-enter their passwords over the course of several
days, weeks, or months. Such studies, however, that only
require that users remember a single password (which often
does not protect a meaningful account), raise other ecological
validity concerns. Testing multiple passwords raises its own
ecological validity issues as noted earlier.
B. Field studies
In a ﬁeld study, the system to be tested is deployed for a
group of users who incorporate the system into their regular
routine over a period of time (typically a few weeks to a few
months), so the advantage is strong ecological validity. Field
studies offer the best measure of some important character-
istics, such as memorability, in a realistic setting. However,
they require a signiﬁcant investment in resources and time and