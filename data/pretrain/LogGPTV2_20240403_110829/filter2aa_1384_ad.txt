c
Enumerate weaknesses in the services running on those targets.
 Phase 2—Focused penetration
a
Compromise vulnerable services (gain unauthorized access to them).
Typical internal network penetration test (INPT)
Phase 1: Information gathering
Phase 2: Focused penetration
Phase 4: Documentation
A. Discover network hosts
B. Enumerate listening services
C. Discover vulnerable attack surfaces
Phase 3: Post-exploitation and privilege escalation
A. Establish reliable re-entry
B. Harvest credentials
C. Move laterally (level 2)
Identify privileged user accounts
Elevate to domain admin
A. Gather evidence/screenshots
B. Create linear attack narratives
C. Create final deliverable
Compromise vulnerable hosts (level 1)
Exploit missing software patches
Deploy custom executable payloads
Access remote management interfaces (RMI)
Figure 1.1
The four phases of a network penetration test
6
CHAPTER 1
Network penetration testing
 Phase 3—Post-exploitation; privilege escalation
a
Identify information on compromised systems that can be used to further
access (pivoting).
b
Elevate privileges to the highest level of access on the network, effectively
becoming the company’s system administrator.
 Phase 4—Documentation
a
Gather evidence.
b
Create the final deliverable.
Once the testing portion of the engagement has concluded, the penetration tester
now makes a mental shift from that of an adversary and transitions into a consultant.
They spend the rest of the engagement creating as detailed a report as possible. That
report contains the specific explanation of all the ways they were able to breach the
network and bypass security controls as well as the detailed steps the company can
take to close these identified gaps and ensure that they can no longer be exploited by
anyone. In 9 out of 10 cases, this process takes about 40 hours on average, but the
time required can vary depending on the size of the organization. 
1.4
When a penetration test is least effective
You may have heard the familiar saying, “To a hammer, every problem looks like a
nail.” Turns out you can apply this saying to just about any profession. A surgeon wants
to cut, a pharmacist wants to prescribe a pill, and a penetration tester wants to hack
into your network. But does every organization truly need a penetration test?
 The answer is that it depends on the level of maturity within a company’s informa-
tion security program. I can’t tell you how many times I’ve been able to take over a
company’s internal network on the first day of a penetration test, but the number is
in the hundreds. Of course, I would love to tell you that this is because of my super
leet hacker skillz or that I’m just that good, but that would be a gross exaggeration of
the truth. 
 It has a lot more to do with an exceedingly common scenario: an immature organi-
zation that isn’t even doing the basics is sold an advanced-level penetration test when
it should be starting with a simple vulnerability assessment or a high-level threat
model and analysis gig. There is no point in conducting a thorough penetration test
of all your defense capabilities if there are gaping holes in your infrastructure security
that even a novice can spot.
1.4.1
Low-hanging fruit
Attackers often seek out the path of least resistance and try to find easy ways into an
environment before breaking out the big guns and reverse-engineering proprietary
software or developing custom zero-day exploit code. Truth be told, your average pen-
etration tester doesn’t know how to do something that complex, because it’s never
been a skill they’ve needed to learn. No need to go that route when easy ways in are
7
When a penetration test is least effective
widespread throughout most corporations. We call these easy ways in low-hanging fruit
(LHF). Some examples include the following:
 Default passwords/configurations
 Shared credentials across multiple systems
 All users having local administrator rights
 Missing patches with publicly available exploits
There are many more, but these four are extremely common and extremely danger-
ous. On a positive note, though, most LHF attack vectors are the easiest to remediate.
Make sure you’re doing a good job with basic security concepts before hiring a profes-
sional hacker to attack your network infrastructure. 
 Organizations with significant numbers of LHF systems on their network shouldn’t
bother paying for a “go-all-out” penetration test. It would be a better use of their time
and money to focus on basic security concepts like strong credentials everywhere, reg-
ular software patching, system hardening and deployment, and asset cataloging. 
1.4.2
When does a company really need a penetration test?
If a company is wondering whether it should do a penetration test, I advise answering
the following questions honestly. Start with simple yes/no answers. Then, for every yes
answer, the company should see if it can back up that answer with, “Yes, because of
internal process/procedure/application XYZ, which is maintained by employee
ABC”:
1
Is there an up-to-date record of every IP address and DNS name on the network?
2
Is there a routine patching program for all operating systems and third-party
applications running on the network?
3
Do we use a commercial vulnerability scan engine/vendor to perform routine
scans of the network?
4
Have we removed local administrator privileges on employee laptops?
5
Do we require and enforce strong passwords on all accounts on all systems?
6
Are we utilizing multi-factor authentication everywhere?
If your company can’t answer a solid yes to all of these questions, then a decent pene-
tration tester would probably have little to no trouble breaking in and finding your
organization’s crown jewels. I’m not saying you absolutely shouldn’t buy a penetration
test, just that you should expect painful results.
 It may be fun for the penetration tester; they may even brag to their friends or col-
leagues about how easily they penetrated your network. But I am of the opinion that
this provides very little value to your organization. It’s analogous to a person never
exercising or eating a healthy diet and then hiring a fitness coach to look at their body
and say, “You’re out of shape. That’ll be $10,000, please.”
8
CHAPTER 1
Network penetration testing
1.5
Executing a network penetration test
So, you’ve gone through all the questions and determined that your organization
needs a network penetration test. Good! What’s next? Up to now, I’ve discussed pene-
tration testing as a service that you would typically pay a third-party consultant to con-
duct on your behalf. However, more and more organizations are building internal red
teams to conduct these types of exercises on a routine basis. 
DEFINITION
Red team—A specialized subset of an organization’s internal secu-
rity department, focused entirely on offensive security and adversarial attack-
simulation exercises. Additionally, the term red team is often used to describe a
specific type of engagement that is considered as realistic as possible, simulat-
ing advanced attackers and using a goal-oriented, opportunistic approach
rather than a scope-driven methodology
I’m going to make an assumption from here on that you’ve been or you’re hoping to
be placed in a role that would require you to perform a penetration test for the com-
pany you work for. Maybe you have even done a handful of penetration tests already
but feel like you could benefit from some additional guidance and direction.
 My intention in writing this book is to provide you with a “start-to-finish” methodol-
ogy that you can use to conduct a thorough INPT, targeting your company or any
other organization from which you receive written authorization to do so.
 You’ll learn the same methodology that I have matured over a decades-long career
and used to successfully and safely execute hundreds of network penetration tests tar-
geting many of the largest companies in the world. This process for executing con-
trolled, simulated cyber-attacks that mimic real-world internal breach scenarios has
proved successful in uncovering critical weaknesses in modern enterprise networks
across all vertices. After reading this book and working through the companion exer-
cises, you should have the confidence to execute an INPT, regardless of the size or
industry of the business you’re attacking. You will work through the four phases of my
INPT methodology using the virtual Capsulecorp Pentest network that I have set up as
a companion to this book. Each of the four phases is broken into several chapters
demonstrating different tools, techniques, and attack vectors that penetration testers
use frequently during real engagements. 
1.5.1
Phase 1: Information gathering
Imagine the engineers who designed the entire corporate network sitting down with
you and going over a massive diagram, explaining all the zones and subnets, where
everything is, and why they did it that way. Your job during phase 1, the information-
gathering phase of a penetration test, is to come as close as you can to that level of
understanding without the network engineers’ help (figure 1.2). The more informa-
tion you gain, the better your chances of identifying a weakness. 
 Throughout the first few chapters of this book, I’ll teach you how to gather all of
the information about the target network that is necessary for you to break in. You’ll
9
Executing a network penetration test
learn how to perform network mapping using Nmap and discover live hosts within a
given IP address range. You’ll also discover listening services that are running on net-
work ports bound to those hosts. Then you’ll learn to interrogate these individual ser-
vices for specific information, including but not limited to the following:
 Software name and version number
 Current patch and configuration settings
 Service banners and HTTP headers
 Authentication mechanisms 
In addition to using Nmap, you’ll also learn how to use other powerful open source
pentest tools such as the Metasploit framework CrackMapExec (CME), Impacket, and
many others to further enumerate information about network targets, services, and
vulnerabilities that you can take advantage of to gain unauthorized access to restricted
areas of the target network. 
1.5.2
Phase 2: Focused penetration
Let the fun begin! The second phase of an INPT is where all the seeds planted during
the previous phase begin to bear fruit (figure 1.3). Now that you have identified vul-
nerable attack vectors throughout the environment, it’s time to compromise those
hosts and start to take control of the network from the inside.
 During this section of the book, you’ll learn several types of attack vectors that will
result in some form of remote code execution (RCE) on vulnerable targets. RCE means
Host discovery
Service discovery
Vulnerability discovery
Final
output
Final
output
Final
output
List of available
attack vectors
targets.txt
Protocol-specific 
target lists
ignore.txt
A.
B.
C.
Identify host-specific info:
- IP address
- DNS name
- Operating system
Enumerate listening services:
- Service protocol
- Software name and version
- NSE script output
Test for security weaknesses:
- Missing, weak, or default credentials
- Missing security updates (patches)
- Insecure service configuration
Figure 1.2
The information-gathering phase
10
CHAPTER 1
Network penetration testing
you can connect to a remote command prompt and type commands to your compro-
mised victim that will be executed and will send output back to you at your prompt. 
 I’ll also teach you how to deploy custom web shells using vulnerable web applica-
tions. By the time you’re finished with this phase of the book, you’ll have successfully
compromised and taken control over database servers, web servers, file shares, work-
stations, and servers residing on Windows and Linux operating systems. 
1.5.3
Phase 3: Post-exploitation and privilege escalation
One of my favorite security blogs is written and maintained by a respected penetration
tester named Carlos Perez (@Carlos_Perez). The heading at the top of his page
(https://www.darkoperator.com) absolutely fits for this section of the book: “Shell is
only the beginning.”
 After you’ve learned how to compromise several vulnerable hosts within your tar-
get environment, it’s time to take things to the next level (figure 1.4). I like to refer to
these initial hosts that are accessible via a direct access vulnerability as level-1 hosts. This
phase of the engagement is all about getting to level-2.
 Level-2 hosts are targets that were not initially accessible during the focused pene-
tration phase because you couldn’t identify any direct weaknesses within their listen-
ing services. But after you gained access to level-1 targets, you found information or
Authentication,
configuration, and patching
vulnerabilities
Deploy backdoor web shells
Compromise vulnerable
database servers
Access remote management
services (SSH, RDP, WMI,
SMB…)
Exploit missing software
patches
Gain initial foothold into
restricted network areas
(Level 1)
Figure 1.3
The focused 
penetration phase
11
Executing a network penetration test
vectors previously unavailable to you, which allowed you to compromise a newly acces-
sible level-2 system. This is referred to as pivoting.
 In this section, you’ll learn post-exploitation techniques for both Windows- and
Linux-based operating systems. These techniques include harvesting clear-text and
hashed account credentials to pivot to adjacent targets. You’ll practice elevating non-
administrative users to admin-level privileges on compromised hosts. I’ll also teach
you some useful tricks I’ve picked up over the years for searching passwords inside
hidden files and folders, which are notorious for storing sensitive information. Addi-
tionally, you’ll learn several different methods of obtaining a domain admin account
(a superuser on a Windows Active Directory network).
 By the time you’ve finished with this section of the book, you’ll understand exactly
why we say in this industry that it takes only a single compromised host for you to spread
through a network like wildfire and eventually capture the keys to the kingdom.
1.5.4
Phase 4: Documentation
I realized early in my career that hiring a professional consulting firm to execute a
network penetration test is kind of like buying a $20,000 PDF document. Without the
report, the penetration test means nothing. You broke into the network, found a
bunch of holes in their security, and elevated your initial access as high as it could go.
How does that benefit the target organization? Truth be told, it doesn’t, unless you
can provide detailed documentation illustrating exactly how you were able to do it
and what the organization should do to ensure that you (or someone else) can’t do it
again (figure 1.5).
 I’ve written hundreds of pentest deliverables, and I’ve had to learn—sometimes
the hard way—what clients want to see in a report. I’ve also come to the realization
C. Repeat password guessing
   using discovered credentials
   to unlock access to level-2
   targets.
B. Locate clear-text and hashed
   credentials from all level-1
   targets.
A. Establish a persistent Meterpreter
    that automatically connects 
    back if the session dies.
Level 2: Newly accessible targets
Move laterally
Use credentials to access
new targets
Harvest clear-text credentials
Harvest domain cached
credentials
Harvest local account password
hashes
Install persistent back-door
executable
Harvest credentials
Maintain reliable re-entry
Level 1: Compromised targets
Figure 1.4
The privilege escalation phase
12
CHAPTER 1
Network penetration testing
that they’re the ones paying thousands of dollars to read the report, so it’s probably a
good idea to make sure they’re impressed.
 In addition to showing you exactly what to put in an engagement deliverable, I’ll
also share some efficiency habits I’ve learned over the years that have saved thousands
of production hours of my time—time I was then able to spend doing things I enjoy, like
breaking into corporate networks (rather than staring at a Word document editor).
1.6
Setting up your lab environment
The topic of network penetration testing is one that should be learned by doing. I
have written this book in a format that assumes you, the reader, have access to an
enterprise network and authorization to perform basic penetration testing activities
against it. I understand that some of you may not have such access. Therefore I have
created an open source project called the Capsulecorp Pentest, which will serve as a
Proof of every system compromised
Too many is usually not enough.
Step-by-step, how you penetrated the network
B. Create linear attack narratives
Phase 4: Documentation