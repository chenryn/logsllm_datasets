title:All your Credentials are Belong to Us: On Insecure WPA2-Enterprise
Configurations
author:Man Hong Hue and
Joyanta Debnath and
Kin Man Leung and
Li Li and
Mohsen Minaei and
M. Hammad Mazhar and
Kailiang Xian and
Md. Endadul Hoque and
Omar Chowdhury and
Sze Yiu Chau
All your Credentials are Belong to Us:
On Insecure WPA2-Enterprise Configurations
Man Hong Hue
The Chinese University of Hong Kong
PI:EMAIL
Li Li
Syracuse University
PI:EMAIL
Kailiang Xian
The Chinese University of Hong Kong
PI:EMAIL
Joyanta Debnath
The University of Iowa
PI:EMAIL
Mohsen Minaei
Visa Research
PI:EMAIL
Endadul Hoque
Syracuse University
PI:EMAIL
Sze Yiu Chau∗
The Chinese University of Hong Kong
PI:EMAIL
Kin Man Leung
The University of British Columbia
PI:EMAIL
M. Hammad Mazhar
The University of Iowa
muhammadhammad-
PI:EMAIL
Omar Chowdhury
The University of Iowa
PI:EMAIL
ABSTRACT
In this paper, we perform the first multifaceted measurement study
to investigate the widespread insecure practices employed by ter-
tiary education institutes (TEIs) around the globe when offering
WPA2-Enterprise Wi-Fi services. The security of such services crit-
ically hinges on two aspects: (1) the connection configuration on
the client-side; and (2) the TLS setup on the authentication servers.
Weaknesses in either can leave users susceptible to credential theft.
Typically, TEIs prescribe to their users either manual instructions
or pre-configured profiles (e.g., eduroam CAT). For studying the
security of configurations, we present a framework in which each
configuration is mapped to an abstract security label drawn from
a strict partially ordered set. We first used this framework to eval-
uate the configurations supported by the user interfaces (UIs) of
mainstream operating systems (OSs), and discovered many design
weaknesses. We then considered 7045 TEIs in 54 countries/regions,
and collected 7275 configuration instructions from 2061 TEIs. Our
analysis showed that majority of these instructions lead to insecure
configurations, and nearly 86% of those TEIs can suffer from cre-
dential thefts on at least one OS. We also analyzed a large corpus
of pre-configured eduroam CAT profiles and discovered several
misconfiguration issues that can negatively impact security. Finally,
we evaluated the TLS parameters used by authentication servers of
thousands of TEIs and discovered perilous practices, such as the use
∗Corresponding author of this paper.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea
© 2021 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-8454-4/21/11...$15.00
https://doi.org/10.1145/3460120.3484569
of expired certificates, deprecated versions of TLS, weak signature
algorithms, and suspected cases of private key reuse among TEIs.
Our long list of findings have been responsibly disclosed to the
relevant stakeholders, many of which have already been positively
acknowledged.
CCS CONCEPTS
• Networks → Mobile and wireless security; • Security and
privacy→ Public key (asymmetric) techniques; • Human-centered
computing→ Graphical user interfaces; • Social and professional
topics → Identity theft.
KEYWORDS
Network Security; Authentication; SSL/TLS; PKI; X.509 Certificate
ACM Reference Format:
Man Hong Hue, Joyanta Debnath, Kin Man Leung, Li Li, Mohsen Minaei,
M. Hammad Mazhar, Kailiang Xian, Endadul Hoque, Omar Chowdhury,
and Sze Yiu Chau. 2021. All your Credentials are Belong to Us: On Insecure
WPA2-Enterprise Configurations . In Proceedings of the 2021 ACM SIGSAC
Conference on Computer and Communications Security (CCS ’21), November
15–19, 2021, Virtual Event, Republic of Korea. ACM, New York, NY, USA,
18 pages. https://doi.org/10.1145/3460120.3484569
1 INTRODUCTION
Wi-Fi is one of the cornerstones of digital communication, providing
connectivity to a plethora of devices. The IEEE 802.11i Wi-Fi stan-
dard is commonly referred to as WPA2 (Wi-Fi Protected Access II)
by consumer products. Despite the recent release of WPA3, WPA2
continues to be dominant due to the needs to support pre-existing
devices. Authentication in IEEE 802.11i can be achieved through
either a pre-shared key (PSK) or IEEE 802.1X. Many organizations
including companies and tertiary educational institutions (TEIs)
currently rely on IEEE 802.1X authentication (the so-called WPA2-
Enterprise mode) for providing their users authenticated access to
the Internet and other internal resources.
Session 4B: Wireless, Mobile, and IoT CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1100In a typical WPA2-Enterprise setup, a TLS tunnel is created,
where the back-end authentication server authenticates itself to the
user’s device using X.509 certificates during the TLS handshake,
and then a password-based user authentication happens inside
the tunnel. In most cases, the user authentication reuses the same
credential used by the user’s other services (e.g., email) at the or-
ganization through an existing single sign-on (SSO) service (e.g.,
Microsoft AD FS). While this improves convenience and user ex-
perience, it makes WPA2-Enterprise a lucrative target for attacks,
such as the “Evil Twin” (ET) attack [13, 23], where the adversary
sets up a rogue access point to trick users into handing over their
SSO credentials. To make matters worse, the ET attack can be easily
performed with off-the-shelf hardware and software components
costing around USD $100. Weaknesses allowing the ET attack have
been observed in real-life. For instance, a recent report found that
it was possible to use the ET attack to steal credentials of staffs
working at the United States Department of the Interior, leading to
access of its network and other internal systems [8].
Goal. In this paper, we investigate potential configuration weak-
nesses which could enable the ET and other attacks in the WPA2-
Enterprise ecosystem, especially among TEIs. For our investigation,
we resort to a multifaceted measurement study.
The security of a WPA2-Enterprise Wi-Fi connection relies on
the robustness of the following two factors: (1) the user-side (sup-
plicant) configuration; (2) the strength of the TLS parameters used
by the back-end authentication server. A supplicant configuration
can be viewed as assigning values to different connection attributes
including server name, certificate authorities (CAs), secondary au-
thentication method, etc. TEIs deliver to their staffs and students
OS-specific supplicant configurations by prescribing either (a) step-
by-step manual instructions that users are expected to follow in
the configuration UI of the target OS, or (b) pre-configured pro-
files through installers such as eduroam CAT, which can be down-
loaded and installed in advance. Depending on the target OS, pre-
configured profiles might be able to assign values to certain connec-
tion attributes that are otherwise impossible through the UI. In this
study, we evaluate the security of WPA2-Enterprise deployment of
TEIs by considering aspects (1)(a), (1)(b), and (2).
Approach. In order to enable fair assessment and comparison of
different connection configurations induced by manual instructions
and pre-configured profiles in a systematic way, we first develop a
comparison framework. The main challenge of developing such a
framework is to identify aspects of the connection configuration
that play a critical part in terms of security. In our framework, each
configuration is assigned an abstract security label, drawn from a
strict partially ordered set of labels in which the relative security
acts as the ordering relation. A strict partial order is used because
it is not always clear how to order two insecure configurations.
Studying aspect (1)(a). Using our comparison framework, we
first evaluate the configuration UIs of mainstream operating sys-
tems (OSs) based on their achievable configurations. We observed
that many OSs contain subtle design weaknesses that hinder users
from achieving a secure WPA2-Enterprise configuration. We re-
ported our findings and recommendations to the corresponding
vendors, and received an assortment of responses: some issues got
fixed and new CVE IDs assigned, others were dismissed.
After analyzing the configurations supported by different OSs,
we then evaluate the quality of manual configuration instructions
prescribed by TEIs. We limit ourselves to TEIs because compa-
nies seldom make their Wi-Fi configuration instructions publicly
accessible. In our large-scale study, we collected 7275 configura-
tion instructions from 2061 TEIs in 54 countries/regions. Using
our framework and knowledge of the OS behaviors, we produced
14602 labels for the resulting configurations on mainstream OSs.
Our results show a grim state of affairs: majority of the instructions
lead to insecure configurations, and 97.2% of TEIs that do not rely
on profile installers prescribe at least one insecure instruction for
the various OSs considered. In other words, countless credentials
around the globe can be easily stolen by the ET attack.
Studying aspect (1)(b). After analyzing the instructions, we
turn our attention to TEIs that provide pre-configured eduroam
CAT profiles. We collected 3593 CAT configuration profiles for each
mainstream OS. Although one can side-step some UI limitations
by using pre-configured profiles, we found that some CAT pro-
files themselves suffer from issues including weak/no server name
checking, CA store pollution with large number of certificates, and
reliance on CA certificates with weak signature algorithms.
Studying aspect (2). To evaluate the strength of TLS connec-
tions induced by the back-end authentication servers, we utilize the
roaming nature of eduroam, and conduct a large scale measurement
study on the various parameters related to the trustworthiness of
the TLS tunnel and X.509 certificates. We successfully measure
the back-end setups of 3637 domains, and observe that many of
them suffer from issues that can hinder proper user configuration
and negatively impact security, including the use of deprecated
versions of TLS (e.g., 1.0 and 1.1), weak signature algorithms, certifi-
cates without meaningful names, expired and extremely long-lived
certificates, and suspected cases of key reuse across institutions.
Finding summary. All in all, the results of our multifaceted study
draw a dire picture of the WPA2-Enterprise ecosystem. Our findings
suggest that the current alarming state of affairs is powered by 3
factors, much like the fire triangle, making deployments susceptible
to the ET attack: 1) misguided UI designs on OSs that confuse and
frustrate users; 2) low consideration of adversaries when prescrib-
ing configuration instructions; 3) subtleties of certificate validation
and server name matching are sometimes misconfigured.
Contributions. We present the first comprehensive measurement
study evaluating the security of WPA2-Enterprise deployments of
TEIs around the globe. Our study consists of the following elements:
(1) A comparison framework for evaluating the security of
revealing several oversights in pre-configured profiles.
(5) A measurement study evaluating the TLS setup on the back-
end authentication server of 3637 domains, revealing weak
parameters used by many TEIs.
WPA2-Enterprise supplicant configurations.
(2) A security evaluation of the UIs and achievable configura-
tions of mainstream OSs, identifying design weaknesses that
lead to insecure configurations and other attacks.
(3) A measurement study of 7275 instructions from 2061 TEIs,
showing 85.7% of TEIs are susceptible to the ET attack.
(4) An evaluation of 3593 CAT profiles for each mainstream OS,
Session 4B: Wireless, Mobile, and IoT CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea11012 TECHNICAL BACKGROUND
Here we give a brief summary of the terminologies relevant to this
paper. Readers interested in a thorough review of the IEEE 802.11i
and 802.1X standards can consult the literature (e.g., [33] and [34]).
2.1 WPA2-Enterprise, IEEE 802.1X, and EAP
The authentication in WPA2-Enterprise follows the IEEE 802.1X
standard, which provides an authentication mechanism by encap-
sulating the Extensible Authentication Protocol (EAP) over LAN
(and WLAN). Three components are defined for the authentica-
tion process in 802.1X: supplicant, a component of the end-user
device that is seeking to join the network; authenticator (sometimes
known as the “front-end”), a component that is typically a part
of the wireless access point; and authentication server (sometimes
known as the “back-end”), which actually authenticates the user
by checking the received credential. The authentication exchange
happens logically between the supplicant and the authentication
server, with the authenticator relaying messages between the two.
Although 802.1X did not specify the type of authentication server
to be used, in most cases, the back-end would be a RADIUS server
running on a separate system located either in an organization’s
core network or remotely (as in the case of eduroam). RADIUS
can integrate with existing identity providers such as Microsoft
AD FS and LDAP servers, which enables the reuse of existing SSO
credentials for Wi-Fi access.
2.2 EAP methods and TLS tunneling
EAP is a generic authentication framework that does not dictate a
particular way of authenticating users. Instead, it enables protocol
designers to build their own authentication methods. A variety
of EAP methods can be used with 802.1X, but many of them lack
inbuilt confidentiality protection for the messages being exchanged,
and hence are susceptible to eavesdropping, especially in the wire-
less setting. One way of retrofitting crytographic protections to
such EAP methods is to tunnel them through Transport Layer Se-
curity (TLS). In fact, taking advantage of the flexibility of the EAP
framework, several EAP methods were proposed to do exactly that,
with subtle technical differences.
There are two TLS tunneling proposals that have seen consider-
able deployments in the wild, namely, PEAP and EAP-TTLS. Both
of their designs are quite similar, with the phase-1 of EAP aimed at
establishing a TLS tunnel, and if certificates are not used for client
authentication during TLS handshake, the protocol will then go to
the so-called phase-2 authentication (also known as the inner au-
thentication), where the user authenticates to the server through a
different method, typically password-based. This is also how PEAP
and EAP-TTLS differ: inside the TLS tunnel, PEAP simply executes
a second EAP method, but EAP-TTLS exchanges attribute-value
pairs, which allows it to use other non-EAP methods for the inner
authentication [33].
2.3 Phase-2 authentication methods
Here we give an overview of some phase-2 authentication methods
commonly used with PEAP and EAP-TTLS.
2.3.1 PAP and EAP-GTC. Password Authentication Protocol (PAP)
is a simple password-based authentication protocol, and is often
used with EAP-TTLS but not PEAP, since PAP itself is not an EAP
method. Although it can be configured to transmit an obfuscated
password for some deployment scenarios [36, 38], in its simplest
form, the user identity and password are transmitted to the authen-
tication server in cleartext [33], which is typically what happens
when used as the inner authentication of EAP-TTLS [9]. Occasion-
ally PAP is also used together with token cards, as the alphanu-
meric codes generated by those systems can be used to mimic
passwords [33].
EAP Generic Token Card (GTC) is an EAP method based on
exchanging cleartext credentials, which closely resembles PAP. As
the name suggests, EAP-GTC was intended to be used with token
cards, though in reality it is often overloaded for performing a
password-based user authentication instead [33].
2.3.2 EAP-MSCHAP-V2. Another widely used EAP method, espe-
cially among organizations that rely on the Microsoft AD infras-
tructures, is the Microsoft Challenge-Handshake Authentication
Protocol version 2 (MSCHAPv2). Unlike PAP and GTC, MSCHAPv2
does not transmit passwords in cleartext. Instead, the ciphertext of
a challenge hash will be sent, which is encrypted using DES, with
the MD4 hash of the user’s password as the secret key. Given the
captured transcript of a MSCHAPv2 handshake, revealing the secret
key (password hash) is only as difficult as exhaustively searching
for the key of a single DES encryption (a complexity of 256), which
can then be used by an attacker to impersonate the victim in future
MSCHAPv2 attempts [7]. Additionally, MSCHAPv2 also has some
design weaknesses that can be exploited to speed up dictionary
attacks [30, 50], if one wants to reveal the actual password. Despite
its weaknesses, MSCHAPv2 is supported by most mainstream OSs,
and has been widely used as the phase-2 authentication method.
2.4 The Evil Twin attack
One problem of WPA2 is that the access points are not authenticated
by design, and therefore it is possible for an attacker to impersonate
a known network by setting up a so-called “Evil Twin” (ET) [13, 23].
Depending on the attacker’s goal, the ET attack does not need to
follow a typical man-in-the-middle (MITM) model. In fact, if the
objective is to steal user credentials, which is made particularly
profitable by the reuse of SSO credentials in WPA2-Enterprise, the
attack setup does not even need to provide legitimate connectivity
and can simply terminate after receiving the victim’s response
during the phase-2 authentication. To make matters worse, the ET
attack can be performed using low-cost and highly portable off-
the-shelf hardware and software components. We purchased the
4GB model of Raspberry Pi 4 with less than USD $60, a protective
case at USD $5, and a micro SD card at less than USD $6. We then
install the Raspberry Pi version of Kali Linux and the hostapd-wpe
software package (a configurable implementation of the ET attack),
both of which are free of charge. It took us just a matter of minutes
to set up. The Raspberry Pi 4 hardware works with the necessary
software packages right out of the box, without the need of an extra
USB Wi-Fi adapter, further driving down the cost. With a portable
power bank at less than USD $20, one can even carry the attack
setup in a backpack and move around to hunt down victims at
Session 4B: Wireless, Mobile, and IoT CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1102strategic locations, at a total monetary cost of less than USD $100,
well within reach for mere script kiddies.
3 OUR COMPARISON FRAMEWORK
In this section, we present a framework for comparing the relative
robustness of supplicant configurations. We went through multiple
rounds of refinements in order to accommodate all the options
and subtleties of the mainstream OSs discussed in Section 4. We
are not aware of any prior work giving such a framework. Due to
space constraints, the implicit assumptions and exceptions of our
framework are presented in Appendix A.
3.1 Insight of our comparison framework
For comparing configurations, we introduce the notion of an ab-
stract security label ℓ that captures the abstracted connection at-
tributes of a given configuration. Such labels ℓ are drawn from a
strict partially ordered set L of labels. We resort to L being strict
partially ordered because if two abstract security labels ℓa and ℓb
both indicate susceptibility to attacks, in many cases it is not clear
whether ℓa or ℓb leads to a better outcome for the victim.
Given two configurations c1 and c2 which are mapped to labels
ℓ1 and ℓ2 correspondingly, we say c1 is more secure than c2 if and
only if ℓ2 <s ℓ1 (read, ℓ2 is less than ℓ1). Multiple configurations
(stemmed from the various UIs on different OSs) can be mapped to
the same abstract security label, so long as their abstracted connec-
tion attributes are equivalent.
3.2 Abstract security label
In our discussion, we consider ℓ ∈ L to be of the form ℓ =
(α, β, γ , δ) and use it to capture the possible PEAP and EAP-TTLS
configurations that are considered in this work. The first element of
ℓ, α, is used to capture how the rejection of invalid certificates is
being performed. α ∈ {P, AM, N}, which stands for Programmatic,
Assisted Manual, and None, respectively. Some might question
why α is not a boolean variable and why we need to introduce AM,
besides P and N. Such a refinement is actually necessary because
some OSs (e.g., macOS and iOS) require the user to make the fi-
nal decision on whether to reject the received certificate, as we
will explain in Section 4. The second element, β, captures the trust
anchor used by α to establish the validity of the certificate. β ∈
{Sp., Sys., n/a}, which stands for Specific, System CA store,
and not applicable, respectively. Notice that α = N =⇒ β = n/a,
and not all OSs come with a UI that supports both the β = Spec.
and β = Sys. options. The third element, γ, denotes the way that
the server name is being checked, and γ ∈ {P, M, N}, which stands
for Programmatic, Manual, and None. Once again, support for γ
varies greatly among mainstream OSs. Finally, the fourth element,
δ ∈ {Ob., Cl.}, denotes whether the phase-2 authentication method
sends Obfuscated or Cleartext credentials. Not all OSs allow the
user to choose the preferred phase-2 method.
3.3 Strict partial ordering of security labels
A Hasse diagram showing all the possible configurations captured
by the abstract security label ℓ can be found in Figure 1. Nodes
in the diagram represent abstract security labels that connection
configurations can be mapped to, where the ones that might be sus-
ceptible to the ET credential theft are rectangular-shaped (red and