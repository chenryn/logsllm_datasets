### Network Failures and Execution Factors

In addition to network failures, other factors can affect the execution of our modules. These include the deactivation of our test account, expired domains, and similar issues.

### False Negatives

To gain deeper insights into the effectiveness of our framework, we conducted an indicative experiment to investigate the false negative (FN) rates of the different modules in our system. Specifically, we randomly sampled 20 websites per module where the module’s execution did not complete successfully. We then manually inspected whether these failures were actual true negatives or not.

- **URL Discovery Module**: We identified only four FNs, meaning that in four cases, there was a login option that our system failed to detect.
- **Generic Account Setup Component**: This yielded three FNs, indicating that while we successfully signed up and/or logged in, we were unable to infer the state.
- **SSO Module**: This had five FNs.
- **Cookie Auditor**: This module yielded zero FNs, meaning that there was not a single case where our system incorrectly identified a website as secure against an attack when it was actually vulnerable.
- **Privacy Auditor**: This had four FNs, indicating that there was account information provided during the signup process that was not detected as being leaked.

We did not measure the Authentication Cookies FN rates, as manually identifying all authentication cookies and combinations is prohibitively time-consuming or even infeasible in many cases.

### URL Discovery Effectiveness

Our URL discovery module initially explores the URLs provided by [44] before falling back to our own crawling approach. To quantify the usefulness of this dataset and the effectiveness of our system, we analyzed the results for all websites where we identified a signup option. 

- **23.1%** of the websites were fully discovered using the dataset from [44].
- For the remaining **76.9%**, we had to fall back to crawling the websites.
  - **43.1%** were included in both datasets.
  - **33.8%** were not included in [44].

### Failed Registrations

To better understand the reasons behind failed registrations, we manually inspected 50 randomly selected websites:

- **22 cases** involved some form of anti-bot challenge that our system could not solve.
- In **23 websites**, one of the fields was rejected due to inappropriate formatting, such as mobile phone numbers, addresses, or passwords.
- The remaining **5 websites** failed due to unexpected or complex form behavior, such as custom dropdown lists that needed to be detected and filled out.

### Manual Session Hijacking Verification

Table 6 provides a breakdown of the results from our manual session hijacking validation experiment. In all but one case, the access obtained through our cookie hijacking attacks led to the exposure of sensitive information and functionality, even if we only obtained partial access. This includes the ability to view and edit personal information and execute site-specific functionality. As expected, in most cases, we could not fully change account settings (e.g., password, email) because such operations typically require the user to retype their password, which is unknown to the attacker. However, we found that multiple domains allow the attacker to change the password without knowing the current password.

### Domain Categorization

Table 4 reports the top domain categories (classified using McAfee’s URL Ticketing System [14]) that are vulnerable to at least one attack. Online shopping is the most prevalent category of susceptible domains, highlighting the privacy threat of cookie hijacking. These services often contain a wealth of personal data, such as addresses, and recommendations and prior purchases can reveal sensitive user traits, such as sexual orientation and religion. We also found 148 and 194 domains that provide health-related functionality and adult content, respectively, potentially enabling access to extremely sensitive user data.

### Popular Domains

Table 5 presents the 20 most popular domains found to be vulnerable during our study, spanning various categories such as e-commerce, blogging, and pornography. We manually verified the feasibility of session hijacking attacks in each of these domains. It is important to note that all of these services have a massive user base, likely employ professional development teams, and may even have dedicated security teams, yet they still expose their users to significant threats. Our Privacy Auditor module uncovered several interesting findings, including:

- One domain (avgle.com) leaked the password hash in a cookie.
- Two domains (123rf.com, naukri.com) leaked the phone number in the page’s source, and one (southwest.com) in the local storage.
- One domain (asus.com) leaked the user’s postal address in the source, and two (alibaba.com, mailchimp.com) leaked the user’s workplace in the source.

Another interesting observation is that even major services like Amazon struggle with the correct deployment of security mechanisms. Specifically, while amazon.com deploys HSTS, it does so incompletely. The policy is only set on the “www” subdomain, leading to the leakage of authentication cookies over unencrypted connections to the base domain, as their domain attribute is set to “.amazon.com.”

### Manually Validated Domains and Hijacking Capabilities

Table 6 details the manually validated domains and the capabilities of the hijacking attacks. The table shows the read and write access, settings, and the exposed information and functionality for each domain. The access levels range from full to partial, with some domains allowing extensive modifications and others only limited access.

Session 6D: Web Security CCS '20, November 9–13, 2020, Virtual Event, USA