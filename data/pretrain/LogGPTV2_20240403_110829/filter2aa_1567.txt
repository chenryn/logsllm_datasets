Konstantinos Karagiannis
CTO, Security Consulting
@konstanthacker
ethereum is not bitcoin
“The key component 
is this idea of a 
Turing-complete 
blockchain”
--Vitalik Buterin
smart contracts
• Business logic 
programs
• Semi autonomous
• Move value, 
enforce 
agreements
• Creativity the limit
literally a billion reasons
caveats 
• No zero days
• No customer code
• Yes, a methodology
• No, I doubt smart contracts 
will get that smart
solidity
• Language of choice
• High level, compiles to bytecode
• Similarities to JavaScript and C
• Supports:
• libraries
• inheritance
• user-defined types
• assembly inline
dev tools
• .sol files > bytecode > blockchain
• Auditing .sol easier with 
highlighting
• Atom my fave, with plugins
• language-ethereum
• etheratom
• Remix–browser based
solgraph
oyente
• Symbolic execution tool
• Works with EVM byte 
code or .sol files
• Detects 4* vulns
• Low false positive rate
basic methodology
• Interview devs
• Load .sol file, preferably with highlighting
• Try compiling
• Dissect code flow—optional solgraph
• Run oyente (cross fingers)
• Manually verify 3/4 vuln yay/nays
• Proceed to manually check for following 
vulns…
reentrancy
leave off the first “re” for savings
unchecked send in king of the ether
unchecked send
gas limits
withdraw don’t send
withdrawn not sent
encryption
transaction-ordering dependence
call-stack depth limit
variable or function ambiguity
odds and ends
• Input validation – require(condition)
• Timestamp dependence
• Business logic flaws
• Separating public/private data
get involved
dox me … or just keep in touch
@konstanthacker
PI:EMAIL