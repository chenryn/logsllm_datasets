title:The Limits of Composable Crypto with Transferable Setup Devices
author:Ioana Boureanu and
Miyako Ohkubo and
Serge Vaudenay
Composable Security in the Tamper Proof Hardware Model
under Minimal Complexity
Carmit Hazay(cid:3)
Antigoni Polychroniadouy
Muthuramakrishnan Venkitasubramaniamz
Abstract
We put forth a new formulation of tamper-proof hardware in the Global Universal Composable
(GUC) framework introduced by Canetti et al.
in TCC 2007. Almost all of the previous works rely
on the formulation by Katz in Eurocrypt 2007 and this formulation does not fully capture tokens in a
concurrent setting. We address these shortcomings by relying on the GUC framework where we make
the following contributions:
1. We construct secure Two-Party Computation (2PC) protocols for general functionalities with opti-
mal round complexity and computational assumptions using stateless tokens. More precisely, we
show how to realize arbitrary functionalities with GUC security in two rounds under the minimal
assumption of One-Way Functions (OWFs). Moreover, our construction relies on the underlying
function in a black-box way. As a corollary, we obtain feasibility of Multi-Party Computation
(MPC) with GUC-security under the minimal assumption of OWFs. As an independent contri-
bution, we identify an issue with a claim in a previous work by Goyal, Ishai, Sahai, Venkatesan
and Wadia in TCC 2010 regarding the feasibility of UC-secure computation with stateless tokens
assuming collision-resistant hash-functions (and the extension based only on one-way functions).
2. We then construct a 3-round MPC protocol to securely realize arbitrary functionalities with GUC-
security starting from any semi-honest secure MPC protocol. For this construction, we require
the so-called one-many commit-and-prove primitive introduced in the original work of Canetti,
Lindell, Ostrovsky and Sahai in STOC 2002 that is round-efﬁcient and black-box in the underlying
commitment. Using specially designed “input-delayed” protocols we realize this primitive (with
a 3-round protocol in our framework) using stateless tokens and one-way functions (where the
underlying one-way function is used in a black-box way).
Keywords: Secure Computation, Tamper-Proof Hardware, Round Complexity, Minimal Assumptions
(cid:3)
y
z
Bar-Ilan University, Israel. Email: carmit.hazay@biu.ac.il.
Aarhus University, Denmark. Email: antigoni@cs.au.dk.
University of Rochester, Rochester, NY 14611, NY. Email: muthuv@cs.rochester.edu.
Contents
1 Introduction
1.1 Our Results . .
.
1.2 Our Techniques .
1.3 Related Work . .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
. . . . . . . . . . . . . . . . . . . . . . .
. .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. .
.
. . . . . . . . . . . . . . . . . . . . . . . .
. .
. .
. .
. .
. .
. .
. .
2
4
5
7
.
.
.
2 Modeling Tamper-Proof Hardware in the GUC Framework
7
2.1 The Global Tamper-Proof Model . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10
3 Preliminaries
3.1 Pseudorandom Functions . .
3.2 Commitment Schemes
.
. .
.
3.3 Randomness Extractors . .
.
.
3.4 Hardcore Predicates .
3.5 Secret-Sharing . .
.
.
.
.
.
.
.
.
13
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 13
. 13
. 14
. 15
. 15
.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
.
. .
. . . . . . . . . . . . . . . . . . . . . . . .
. .
. .
. .
4 Two-Round Oblivious Transfer in the Stand-Alone Model
16
4.1 Building Blocks: Commitment Schemes . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16
4.2 Our Protocol . .
. 18
4.2.1 Relaxing to One-Way Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30
. . . . . . . . . . . . . . . . . . . . . . .
4.3 Reusability of Tokens . .
. .
. .
. .
. .
. .
.
.
.
.
.
.
.
.
.
.
5 Two-Round Token-Based GUC Oblivious Transfer
35
5.1 Two-Round 2PC Using Stateless Tokens . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45
5.2 GUC-Secure MPC using Stateless Tokens from One-Way Functions . . . . . . . . . . . . . 46
5.3 On Reusability .
. 46
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
.
.
.
.
.
.
6.1.1 Realizing F 1:M
6 Three-Round Token-Based GUC Secure Multi-Party Computation
47
. 47
6.1 One-Many Commit-and-Prove Functionality . . . . . . . . . . . . . . . . . . . . . . . . .
CP in the FgWRAP-Hybrid . . . . . . . . . . . . . . . . . . . . . . . . . 48
6.2 Warmup: Simple MPC Protocol in the F 1:M
CP -Hybrid . . . . . . . . . . . . . . . . . . . . . . 52
6.3 Three-Round MPC Protocol in the FgWRAP-Hybrid . . . . . . . . . . . . . . . . . . . . . . 53
57
7 Acknowledgements
A Issue with Over Extraction in Oblivious Transfer Combiners [GIS+10]
61
1
1
Introduction
Secure Multi-Party Computation (MPC) enables a set of parties to mutually run a protocol that computes
some function f on their private inputs, while preserving two important properties: privacy and correct-
ness. The former implies data conﬁdentiality, namely, nothing leaks by the protocol execution but the
computed output, while, the later requirement implies that no corrupted party or parties can cause the out-
put to deviate from the speciﬁed function. It is by now well known how to securely compute any efﬁcient
functionality [Yao86, GMW87, MR91, Bea91] under the stringent simulation-based deﬁnitions (following
the ideal/real paradigm). These traditional results prove security in the stand-alone model, where a single
set of parties run a single execution of the protocol. However, the security of most cryptographic proto-
cols proven in the stand-alone setting does not remain intact if many instances of the protocol are executed
concurrently [Can01, CF01, Lin03]. The strongest (but also the most realistic) setting for concurrent se-
curity, known as Universally Composable (UC) security [Can01] considers the execution of an unbounded
number of concurrent protocols in an arbitrary and adversarially controlled network environment. Unfor-
tunately, stand-alone secure protocols typically fail to remain secure in the UC setting. In fact, without
assuming some trusted help, UC-security is impossible to achieve for most tasks [CF01, CKL06, Lin03].
Consequently, UC-secure protocols have been constructed under various trusted setup assumptions in a long
series of works; see [BCNP04, CDPW07, Kat07, KLP07, CPS07, LPV09, DMRV13] for few examples.
One such setup assumption and the focus of this work is the use of tamper-proof hardware tokens.
The ﬁrst work to model tokens in the UC framework was by Katz in [Kat07] who introduced the FWRAP-
functionality to capture such tokens and demonstrated feasibility of realizing general functionalities with
UC-security. Most of the previous works in the tamper proof hardware [Kat07, CGS08, LPV09, GIS+10,
DMRV13, CKS+14, DKMN15b] rely on this formulation. As we explain next, this formulation does not
provide adequate composability guarantees. We begin by mentioning that any notion of composable security
in an interactive setting should allow for multiple protocols to co-exist in the same system and interact with
each other. We revisit the following desiderata put forth by Canetti, Lin and Pass [CLP10] for any notion of
composable security:
Concurrent multi-instance security: The security properties relating to local objects (including data and
tokens) of the analyzed protocol itself should remain valid even when multiple instances of the pro-
tocol are executed concurrently and are susceptible to coordinated attacks against multiple instances.
Almost all prior works in the tamper proof model do not speciﬁcally analyze their security in a con-
current setting. In other words, they only discuss UC-security of a single instance of the protocol. In
particular, when executing protocols in the concurrent setting with tokens, an adversary could in fact
transfer a token received from one execution to another and none of the previous works that are based
on the FWRAP-functionality accommodate transfers.
Modular analysis: Security of the larger overall protocols must be deducible from the security properties
of its components. In other words, composing protocols should preserve security in a modular way.
One of the main motivations and features in the UC-framework is the ability to analyze a protocol
locally in isolation while guaranteeing global security. This does not only enable easier design but
identiﬁes the required security properties. The current framework proposed by Katz [Kat07] does not
allow for such a mechanism.
The state-of-affairs regarding tamper-proof tokens leads us to ask the following question.
Does there exist a UC-formulation of tamper-proof hardware tokens that guarantee strong com-
posability guarantees and allows for modular design?
2
Since the work of [Kat07], the power of hardware tokens has been explored extensively in a long series of
works, especially in the context of achieving UC-security (for example, [CGS08, MS08, GIS+10, DKM11,
DMMN13, DKMN15b, CKS+14]). While the work of Katz [Kat07] assumed the stronger stateful tokens,
the work of Chandran, Goyal and Sahai [CGS08] was the ﬁrst to achieve UC-security using only stateless
tokens. In this work we will focus only on the weaker stateless token model. In the tamper-proof model
with stateless tokens, as we argue below, the issue of minimal assumptions and round-complexity have been
largely unaddressed. The work of Chandran et al.
[CGS08] gives an O((cid:20))-round protocol (where (cid:20) is
the security parameter) based on enhanced trapdoor permutations. Following that, Goyal et al. [GIS+10]
provided an (incorrect) O(1)-round construction based on Collision-Resistant Hash Functions (CRHFs).
The work of Choi et al. [CKS+14], extending the techniques of [GIS+10] and [DKM11], establishes the
same result and provide a ﬁve-round construction based on CRHFs.
All previous constructions require assumptions stronger than one-way functions (OWFs), namely ei-
ther trapdoor permutations or CRHFs. Thus as a ﬁrst question, we investigate the minimal assumptions
required for token-based secure computation protocols. The works of [GIS+10] and [CKS+14] rely on
CRHFs for realizing statistically-hiding commitment schemes. Towards minimizing assumptions, both these
works, originally considered a variant of their respective protocols where they replace the construction of the
statistically-hiding commitment scheme based on CRHFs to the one based on one-way functions [HHRS15]
to obtain UC-secure protocols under minimal assumptions (See Theorem 3 in [GIS+10] and Footnote 7 in
[CKS+14]). While analyzing the proof of this variant in the work of [GIS+10], we found an issue in the
original construction based on CRHFs.1 More recently, the authors of [CKS+14] have removed this obser-
vation in their updated version of the original work (see [CKS+13]).2 Given the state of affairs, our starting
point is to address the following fundamental question regarding tokens that remains open.
Can we construct tamper-proof UC-secure protocols using stateless tokens assuming only one-