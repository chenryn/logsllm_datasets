User: I have a fairly large private python package I just finished creating. I'd like to install it as part of my build process for an app in a Docker container (though this isn't so important). The package source is quite large, so ideally I'd avoid downloading/keeping the whole source.
Right now, I've been just passing around the package source along with my app, but this is unwieldy and hopefully temporary. What's a better way? git submodule/subtree? I'm pretty new to this.
Assistant: If you use github with a private repo you will have to create a SSH deploy key and add the private key to your app folder for builds.
pip install git+git://github.com/myuser/foo.git@v123
Alternatively, you can mount a pip-cache folder from host into container and do pip install from that folder. You'd have to keep the python packages in the cache dir with your app.
pip install --no-index --find-links=/my/pip-cache/
you can install python packages to this pip-cache with the following command:
pre pip 9.0.1:
pip install --download pip-cache/ package1 package2
pip 9.0.1+ (thx for comment @James Hiew):
pip install download pip-cache/ package1 package2