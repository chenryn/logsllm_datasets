:::
:::
:::
::: section
::: titlepage
## []{#assembly_additional-toolsets-for-development_developing-applications.html#using-the-annocheck_annobin}使用 annocheck 程序 {.title}
:::
下面的部分论述了如何使用 `annocheck`{.literal} ：
::: itemizedlist
-   文件
-   目录
-   RPM 软件包
-   `annocheck`{.literal} 额外工具
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
`annocheck`{.literal} 递归扫描 ELF 对象文件的目录、存档和 RPM
软件包。文件必须采用 ELF 格式。`annocheck`{.literal}
不处理任何其他二进制文件类型。
:::
::: section
::: titlepage
### []{#assembly_additional-toolsets-for-development_developing-applications.html#using-annockeck-to-examine-files_using-the-annocheck}使用 annocheck 检查文件 {.title}
:::
下面的部分论述了如何使用 `annocheck`{.literal} 检查 ELF 文件。
::: itemizedlist
**步骤**
-   要检查文件，请使用：
    ``` screen
    $ annocheck file-name
    ```
    使用文件名替换 [*file-name*]{.emphasis}。
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
文件必须采用 ELF 格式。`anocheck`{.literal}
不处理任何其他二进制文件类型。`annocheck`{.literal} 会处理包含 ELF
对象文件的静态库。
:::
::: itemizedlist
**附加信息**
-   有关 `annocheck`{.literal} 和可用命令行选项的详情请参考
    `annocheck`{.literal} man page。
:::
:::
::: section
::: titlepage
### []{#assembly_additional-toolsets-for-development_developing-applications.html#using-annocheck-to-examine-directories_using-the-annocheck}使用 annocheck 检查目录 {.title}
:::
下面的部分论述了如何使用 `annocheck`{.literal} 检查目录中的 ELF 文件。
::: itemizedlist
**步骤**
-   要扫描目录，请使用：
    ``` screen
    $ annocheck directory-name
    ```
    使用目录名称替换
    [*directory-name*]{.emphasis}。`annocheck`{.literal}
    会自动检查目录的内容、其子目录以及该目录中的任何存档和 RPM 软件包。
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
`annocheck`{.literal} 仅查找 ELF 文件。其他文件类型将被忽略。
:::
::: itemizedlist
**附加信息**
-   有关 `annocheck`{.literal} 和可用命令行选项的详情请参考
    `annocheck`{.literal} man page。
:::
:::
::: section
::: titlepage
### []{#assembly_additional-toolsets-for-development_developing-applications.html#using-annocheck-to-examine-rpms_using-the-annocheck}使用 annocheck 检查 RPM 软件包 {.title}
:::
下面的部分论述了如何使用 `annocheck`{.literal} 检查 RPM 软件包中的 ELF
文件。
::: itemizedlist
**步骤**
-   要扫描 RPM 软件包，请使用：
    ``` screen
    $ annocheck rpm-package-name
    ```
    使用 RPM 软件包的名称替换
    [*rpm-package-name*]{.emphasis}。`nocheck`{.literal}
    会以递归方式扫描 RPM 软件包中的所有 ELF 文件。
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
`annocheck`{.literal} 仅查找 ELF 文件。其他文件类型将被忽略。
:::
::: itemizedlist
-   要使用提供 debug info RPM 扫描 RPM 软件包，请使用：
    ``` screen
    $ annocheck rpm-package-name --debug-rpm debuginfo-rpm
    ```
    使用 RPM 软件包的名称替换
    [*rpm-package-name*]{.emphasis}，使用与二进制 RPM 关联的调试信息 RPM
    的名称替换 [*debuginfo-rpm*]{.emphasis}。
:::
::: itemizedlist
**附加信息**
-   有关 `annocheck`{.literal} 和可用命令行选项的详情请参考
    `annocheck`{.literal} man page。
:::
:::
::: section
::: titlepage
### []{#assembly_additional-toolsets-for-development_developing-applications.html#using-annocheck-extra-tools_using-the-annocheck}使用 annocheck 额外的工具 {.title}
:::
`annocheck`{.literal}
包括多个检查二进制文件的工具。您可以使用命令行选项启用这些工具。
下面的部分描述了如何启用：
::: itemizedlist
-   `built-by`{.literal} 工具
-   `notes`{.literal} 工具
-   `section-size`{.literal} 工具
:::
您可以同时启用多个工具。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
强化检查程序被默认启用。
:::
::: section
::: titlepage
#### []{#assembly_additional-toolsets-for-development_developing-applications.html#enabling-the-built-by-tool_using-annocheck-extra-tools}启用 `built-by`{.literal} 工具 {.title}
:::
您可以使用 `annocheck`{.literal} `built-by`{.literal}
工具来查找用于构建二进制文件的编译器的名称。
::: itemizedlist
**步骤**
-   要启用 `built-by`{.literal} 工具，请使用：
    ``` screen
    $ annocheck --enable-built-by
    ```
:::
::: itemizedlist
**附加信息**
-   有关 `built-by`{.literal} 工具的更多信息，请参阅 `--help`{.literal}
    命令行选项。
:::
:::
::: section
::: titlepage
#### []{#assembly_additional-toolsets-for-development_developing-applications.html#enabling-the-notes-tool_using-annocheck-extra-tools}启用 `notes`{.literal} 工具 {.title}
:::
您可以使用 `annocheck`{.literal} `notes`{.literal} 工具显示存储在
`annobin`{.literal} 插件创建的二进制文件中的注释。
::: itemizedlist
**步骤**
-   要启用 `notes`{.literal} 工具，请使用：
    ``` screen
    $ annocheck --enable-notes
    ```
    注释按地址范围排序。
:::
::: itemizedlist
**附加信息**
-   有关 `notes`{.literal} 工具的详情，请查看 `--help`{.literal}
    命令行选项。
:::
:::
::: section
::: titlepage
#### []{#assembly_additional-toolsets-for-development_developing-applications.html#enabling-the-section-size-tool_using-annocheck-extra-tools}启用 `section-size`{.literal} 工具 {.title}
:::
您可以使用 `annocheck`{.literal} `section-size`{.literal}
工具显示指定部分的大小。
::: itemizedlist
**步骤**
-   要启用 `section-size`{.literal} 工具，请使用：
    ``` screen
    $ annocheck --section-size=name
    ```
    使用指定部分的名称替换
    [*name*]{.emphasis}。输出仅限于特定的部分。结束时会生成累积结果。
:::
::: itemizedlist
**附加信息**
-   有关 `section-size`{.literal} 工具的更多信息，请参阅
    `--help`{.literal} 命令行选项。
:::
:::
::: section
::: titlepage
#### []{#assembly_additional-toolsets-for-development_developing-applications.html#hardening-checker-basics_using-annocheck-extra-tools}强化检查程序基础知识 {.title}
:::
强化检查程序被默认启用。您可以使用 `--disable-hardened`{.literal}
命令行选项禁用强化检查程序。
::: section
::: titlepage
##### []{#assembly_additional-toolsets-for-development_developing-applications.html#hardening-checker-options_hardening-checker-basics}强化检查程序选项 {.title}
:::
`annocheck`{.literal} 程序检查以下选项：
::: itemizedlist
-   使用 `-z now`{.literal} linker 选项禁用 lazy 绑定。
-   该程序没有堆栈在内存中的可执行区域。
-   GOT 表的重新定位被设置为只读。
-   没有程序片段设置所有三个读取、写入和执行权限。
-   没有针对可执行代码重新定位。
-   在运行时查找共享库的 runpath 信息仅包含在 /usr 中根目录。
-   程序在启用了 `annobin`{.literal} 备注的情况下编译。
-   程序在启用了 `-fstack-protector-strong`{.literal}
    选项的情况下被编译。
-   程序使用 `-D_FORTIFY_SOURCE=2`{.literal} 编译。
-   程序使用 `-D_GLIBCXX_ASSERTIONS`{.literal} 编译。
-   程序被编译时启用了 `-fexceptions`{.literal}。
-   程序在启用了 `-fstack-clash-protection`{.literal} 的情况下被编译。
-   程序于 `-O2`{.literal} 或更高版本编译。
-   程序没有处于写入状态的重新定位状态。
-   动态可执行文件具有动态片段。
-   共享库使用 `-fPIC`{.literal} 或 `-fPIE`{.literal} 编译。
-   动态可执行文件使用 `-fPIE`{.literal} 编译并通过 `-pie`{.literal}
    链接。
-   如果可用，则使用 `-fcf-protection=full`{.literal} 选项。
-   如果可用，则使用 `-mbranch-protection`{.literal} 选项。
-   如果可用，则使用 `-mstackrealign`{.literal} 选项。
:::
:::
::: section
::: titlepage
##### []{#assembly_additional-toolsets-for-development_developing-applications.html#disabling-the-hardening-checker_hardening-checker-basics}禁用强化检查程序 {.title}
:::
下面的部分论述了如何禁用强化检查程序。
::: itemizedlist
**步骤**
-   要在没有强化检查程序的情况下扫描文件中的备注，请使用：
    ``` screen
    $ annocheck --enable-notes --disable-hardened file-name
    ```
    使用文件名替换 [*file-name*]{.emphasis}。
:::
:::
:::
:::
:::
::: section
::: titlepage
## []{#assembly_additional-toolsets-for-development_developing-applications.html#removing-redundant-annobin-notes_annobin}删除冗余 annobin 备注 {.title}
:::
使用 `annobin`{.literal} 会增加二进制文件的大小。要减少使用
`annobin`{.literal} 编译的二进制文件的大小，您可以删除冗余的
`annobin`{.literal} 备注。要删除冗余的 `annobin`{.literal} 注释，请使用
`objcopy`{.literal} 程序，这是 `binutils`{.literal} 软件包的一部分。
::: itemizedlist
**步骤**
-   要删除冗余的 `annobin`{.literal} 备注，请使用：
    ``` screen
      $ objcopy --merge-notes file-name
    ```
    用文件名替换 [*file-name*]{.emphasis}。
:::
:::
:::
:::