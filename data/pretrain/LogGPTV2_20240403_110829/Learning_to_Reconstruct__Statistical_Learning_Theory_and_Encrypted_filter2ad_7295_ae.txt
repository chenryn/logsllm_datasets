those attacks – that records accessed the same way by most
queries must be “close” – and show how it extends beyond
range queries. We explore this in three ways: (1) by using
learning theory to deﬁne a natural and general notion of
distance relevant to access pattern attacks, (2) by showing how
-nets are the right technical tool for analyzing the meaning
of this distance for particular query classes, and (3) by using
this distance notion to prove a general lower bound on the
query complexity of any attack with access pattern leakage.
To the best of our knowledge, our general lower bound is
the ﬁrst such proof ever given for this setting and illustrates a
core ﬁnding of this work: the security impact of access pattern
leakage for any class of queries is related to its VC dimension.
Distances induced by range queries. Let Ci be the set
of range queries matching value i, and Cj, j. Then, the set
of queries matching i XOR j (exactly one of i and j) is
∆(Ci, Cj), where ∆ is the symmetric difference operator on
sets, and the number of such queries is γ(i, j) def= |∆(Ci, Cj)|.
We can make three interesting observations about γ(i, j). First,
it is related to the numerical distance metric |i − j| (though,
importantly, they are not identical). Second, γ(·,·) is itself a
metric on [N ]. Third, distance in this metric is approximately
revealed by the access pattern leakage of range queries: if
every query accesses either both or neither records i and j,
then γ(i, j) is likely to be small. These three properties were
used extensively in our attacks on range queries, but they are
not speciﬁc to range queries: we can abstract them using ideas
from learning theory.
Distance, generally. Consider any class of queries Q on
[N ] and distribution π over those queries, and consider the
concept space (Q, C) with concepts C def= {Ci}i∈[N ], where
def= {q ∈ Q| q(i) = 1}. Each query is a point in this
each Ci
concept space, and there is a set corresponding to each possible
value in [N ] containing the queries that match it. Now, deﬁne
the symmetric difference concept space (X, C)∆ def= (X, C∆),
where C∆ def= {∆(Ci, Cj)}i,j∈[N ] and ∆(·,·) is the symmetric
difference of the input sets. This new concept space contains,
for each pair i, j, the queries which return exactly one of
i, j. Next deﬁne the function γπ(i, j) def= Prπ [ ∆(Ci, Cj) ]. As
above for range queries, where implicitly π was the uniform
distribution, this deﬁnes a metric on [N ]. To see that the
triangle inequality holds, observe that for any i, j, and k,
any query in ∆(Ci, Cj) is in ∆(Ci, Ck) or ∆(Ck, Cj). This
allows us to generalize the use of -nets in ApproxOrder
to arbitrary query classes. If the adversary observes a set of
queries that is an -net for the symmetric difference concept
space, then it must be the case that for any subset S of records
with identical access pattern, the underlying values V of those
records satisfy diamγ(V ) def= maxi,j∈V γπ(i, j) ≤ .
Thus, if we simply group together records that have the
same access pattern, then the existence of an -net provides an
upper bound on the distance (with respect to the measure γ) of
records in the same group. Essentially, access pattern leakage
from any query class reveals a kind of approximate equality
between the underlying values of the records in the database.
This approximate equality depends both on the query class
and the query distribution. For range queries, we used this
approximate equality to build the ApproxOrder attack and
reveal a great deal of information with few queries. However,
closeness in the metric γ may not be practically interesting
for all query classes and distributions: for example, access
pattern leakage from the “query class” which is sampled
1077
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:47:08 UTC from IEEE Xplore.  Restrictions apply. 
uniformly at random from 2[N ] is unlikely to reveal anything
interesting. Nevertheless, for many query classes used in
practice, closeness in this distance metric can lead to serious
privacy breaches. For example, for preﬁx queries, two values
being close in this metric implies they have a common preﬁx.
We will show a simple attack that allows an adversary to
reveal which records in the database are approximately equal
according to the distance metric γπ.
Approximate equality attack. Consider a set of queries
Q, possible record values [N ], and resulting concept space
(Q, C), whose VC dimension d we assume is ﬁnite and
≥ 2. Let πq be any distribution over Q. The attack takes as
input records {r1, r2, . . . , rR} along with a 0-1 matrix AP
with R rows and Q columns, where APij = 1 iff query j
returns record i. The attack views each row of the matrix as
a number in [0, 2Q − 1] and outputs a partition by grouping
all records with the same number. Let gi = {ri
k} be
any such group, and let V = {v1, . . . , vk} be the underlying
values of these records. An application of the -net theorem
lets us immediately conclude that Prπq [ diamγ(V ) ≤  ] >
1 − (2Q)d2−Q/2, and this bound holds for all groups simul-
taneously.
1, . . . , ri
A. Preﬁx and Sufﬁx Queries
Next, we show how to instantiate the approximate equality
attack for a practically relevant query class. For a set Σ≤(cid:96) of
all strings with length ≤ (cid:96) from some alphabet Σ, deﬁne a
preﬁx query q to be a string in the set ∪(cid:96)
j=1Σj. In text search,
preﬁx queries are usually indicated by a trailing asterisk “*”.
For any element j ∈ Σ≤(cid:96), deﬁne the predicate q(j) to be 1
if either q = j or q is a preﬁx of j, and 0 otherwise. As an
example, take the database {cat, carbon}. A preﬁx query “c*”
on these two values would return both, but “carb*” would
return only the second one.
Although preﬁx queries are technically a subset of range
queries, there are three crucial differences which obviate the
use of previous attacks on range queries: preﬁx queries do
not reveal order, they cannot overlap without one query being
contained in the other, and the number of queries matching any
ﬁxed string is constant. (Replacing “preﬁx” with “sufﬁx” in the
discussion above gives an identical query class that matches
strings based on a sufﬁx instead of a preﬁx. Our discussion
and attacks easily translate to sufﬁx queries, so we dispense
with a separate discussion for them.)
In the the symmetric difference concept space for preﬁx
queries, the concepts ∆(Ci, Cj) for i, j ∈ Σ≤(cid:96) are the queries
that are preﬁxes of exactly one of i or j. If i and j themselves
have a common preﬁx, though, some preﬁx queries will match
both i and j. More precisely, if i and j have a length-k
common preﬁx, then |∆(Ci, Cj)| = (|i| − k) + (|j| − k).
Informally, if the adversary notices that two records are always
accessed together or not at all, then it can infer that they share
a long common preﬁx. We will describe how to formalize this
intuition with -nets. Further, if the adversary has a model of
the database distribution, it can use frequency analysis to learn
the characters of each record, one at a time (reminiscent of
the climax of the science-ﬁction movie WarGames).
A WarGames attack on preﬁx search. Most modern text
and web search systems support preﬁx queries on unstruc-
tured data [18], and they are ubiquitous in software-as-a-
service (SaaS) products like Salesforce, ServiceNow, and
Dropbox [19], [20], [21]. A common [21], [19] design pattern
for these systems is to send a preﬁx query for every character
the user types in the search bar. Since users may ﬁnd their
desired result without ﬁnishing their query, the distribution of
queries is heavily biased towards shorter preﬁxes.
length of
We ﬁrst consider,
for
H(cid:96) = (cid:80)(cid:96)
Our attack in this setting is simple. First, the adversary runs
the approximate equality attack described above, obtaining
a partition of the records in the database. Then, for each
record, it takes the union of all query results containing that
record. Here is where we apply the generalized distance notion
discussed earlier: with an -net, we can ensure that each group
in the partition contains records with at least a length-one
common preﬁx, and that the unions we form afterwards are
exactly the sets of records with the same ﬁrst character. The
ﬁrst character of each record is then recovered via frequency
analysis, and the attack is iterated to learn the second character,
then the third, etc.
Analyzing the attack. We model the queries as being sam-
pled via a two-step process. First, a preﬁx length (cid:96)q is sampled
from a Zipf distribution on [(cid:96)]. (Recall that the standard Zipf
distribution on (cid:96) elements has Pr [ i ] = (1/i)/H(cid:96), where
m=1 1/m is the (cid:96)th harmonic number.) Then, the
query is sampled as a uniformly random element of Σ(cid:96)q. Call
this distribution over queries πts.
two words i, j ∈ Σ≤(cid:96), how
the
to
i
Prπts [ ∆(Ci, Cj) ].
lengths
and share a length-k preﬁx,
then Prπts [ ∆(Ci, Cj) ] =
. Let (cid:96)min
1
H(cid:96)
(cid:80)(cid:96)min
be the length of the shortest string. If the queries observed by
the adversary are an -net for the symmetric difference concept
m=1 1/(m|Σ|m), then, for all i, j
space and for  = 1
H(cid:96)
having no common preﬁx, we have the distance γπts(i, j) > 
and a query accessing i and j differently must have occurred.
The VC dimension of this concept space is at most 4, so
O( 1
δ ) queries sufﬁce for this attack to recover the ﬁrst
character of every record with probability at least 1 − δ. This
same analysis can be iterated for the rest of the characters.
Experiments. We implemented the attack using last name
data from the Fraternal Order of Police (FOP) database dump,
posted online in 2016. It contains the personal information of
over 600,000 law enforcement ofﬁcers in the United States.
For auxiliary data, we used public US Census statistics [22]
on last name frequencies. We also ran the attack on the FAA
ZIP code dataset from the experiments in Section IV-D, but
it performed quite poorly, primarily due to the auxiliary data
being a poor model of the ZIP code distribution.
(cid:16)(cid:80)|i|m=k+1 1/(m|Σ|m) +(cid:80)|j|m=k+1 1/(m|Σ|m)
 log 1
and j’s
If
common preﬁx relates
i and j have different
(cid:17)
In 9 out of 10 trials with only 500 preﬁx queries sampled
1078
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:47:08 UTC from IEEE Xplore.  Restrictions apply. 
according to the distribution described above, we were able to
partition the records into groups with at least a one-character
preﬁx in common. The mean number of queries required to
do this was 315. Once we obtain this partition, we recovered
the ﬁrst character for over 70% of the last-name records. With
the same number of trials for 40,000 queries, we recovered
the ﬁrst and second characters of over 55% of the last-
name records. With 3 million queries, we recovered the ﬁrst
three characters for over 40% of last-name records, and we
recovered roughly 1,500 three-character last names exactly.
The sample complexities given by the -net theorem above
are 1,491, 120,000, and 6 million for recovering 1, 2, and 3
characters—much higher than our experiments indicated. As
we saw above, applying these results can give loose bounds
but the “true” constants are usually small.
This attack on preﬁx queries can be improved. Our goal was
not simply to construct an accurate reconstruction attack for
preﬁx queries, but to demonstrate the power of the learning-
theoretic approach in building and analyzing reconstruction
attacks. We can generalize the preﬁx attack to obtain the
three basic steps for this approach: (1) deﬁne a concept
space and a metric, (2) use an -net to analyze the number
of queries needed to learn approximate equality,
then (3)
perform an attack on the information about values revealed by
approximate equality. We note also that standard results [11]
on intersections and unions of concept classes can extend this
approach to composite query classes (e.g. a SQL query which
intersects the result of a range query on one column and a
preﬁx query on another).
B. A General Lower Bound on Attacks
The metric γ is deﬁned for any query class, and in many
cases this leads to privacy implications: for range queries,
it is closely related to the distance between record values;
for preﬁx queries, the length of the longest common preﬁx.
A general approximate reconstruction attack should recover
values that are close (for γ) to the actual record values, and
lower bounds on closeness (for γ) should imply lower bounds
on the accuracy of any approximate reconstruction attack. The
following theorem gives one such lower bound on the number
of queries necessary for any approximate reconstruction attack
on any query class, as a function of the desired accuracy  and
the VC dimension d of the query class.
Theorem V.1. Let Q be a class of queries on [N ], πq a query
distribution, and C = (Q, C) the associated concept space
with VC dimension d > 1. Let γ(i, j) def= Prπq [ ∆(Ci, Cj) ]
be the distance metric induced on [N ] by Q and πq. Consider
any algorithm that takes as input a database of size R with
elements in [N ], together with the access pattern leakage of
m queries sampled from πq, and outputs an approximation
DB(cid:48) such that γ(DB[i], DB(cid:48)[i]) ≤  for all i ∈ [1, . . . , R],
with probability of success at least 1 − δ (over the choices of
queries from πq). Then m is in Ω( d
δ ).
 + 1
 log 1
This result is a direct application of PAC learning theory: an
algorithm that takes any database as input and outputs a DB(cid:48)
satisfying the stated condition is a PAC learner for the concept
space C deﬁned in the theorem statement. We can thus apply
a general lower bound [23] on the sample complexity of PAC
learning to conclude that m must be in Ω( d
δ ). With a
smaller number of queries m, there will be, with probability at
least δ, two values in [N ] whose distance γ is strictly greater
than , but which every query given to the algorithm accessed
in the same way.
 log 1
 + 1
This result is not easy to interpret, so we brieﬂy reﬂect on
its implications. First, it holds even if the adversary knows the
exact query distribution and database distribution. Next, note
that the same lower bound holds for the existence of an -net:
if the queries fail to form an -net for the metric γ, then some
records that are more than  apart in γ cannot be separated
based on access pattern. Since any approximate attack should
be able to distinguish such records, in some sense this ap-
proximate equality attack is a minimal approximate attack. For
example, consider both our sacriﬁcal -ADR and -AOR attacks
from Sections III and IV. Recovering approximate values or
a partition into buckets with small diameters implies we are
able to group together approximately-equal records. From this
perspective, the lower bound on the existence of an -net for γ
may be interpreted as a lower bound on the number of queries
necessary for any form of approximate attack for which γ is
a relevant notion of distance—not only an approximate attack
attempting to recover values, as in Theorem V.1.
VI. CONCLUSIONS
This work initiates the application of learning theory to
attacks on encrypted databases which leak access patterns.
Our learning-theoretic viewpoint lets us build and analyze
approximate reconstruction attacks which are both nearly-
optimal in query complexity and effective on real data. We