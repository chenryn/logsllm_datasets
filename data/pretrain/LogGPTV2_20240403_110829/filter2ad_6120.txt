title:The Case for Prefetching and Prevalidating TLS Server Certificates
author:Emily Stark and
Lin-Shung Huang and
Dinesh Israni and
Collin Jackson and
Dan Boneh
The Case for Prefetching and
Prevalidating TLS Server
Certiﬁcates
Emily Stark, Lin-Shung Huang, Dinesh
Israni, Collin Jackson, Dan Boneh
February 8, 2012
Transport Layer Security
• Want to secure traﬃc between web
browsers and servers
• One problem is latency from TLS
handshake
The TLS handshake
The TLS handshake
The TLS handshake
The TLS handshake
The TLS handshake
The TLS handshake
Certiﬁcate validation: OCSP
• Online certiﬁcate status protocol
Certiﬁcate validation: OCSP
• Online certiﬁcate status protocol
• Server certiﬁcate speciﬁes OCSP
responder
Certiﬁcate validation: OCSP
• Online certiﬁcate status protocol
• Server certiﬁcate speciﬁes OCSP
responder
• Clients asks responder whether cert is
valid
Certiﬁcate validation: OCSP
• Online certiﬁcate status protocol
• Server certiﬁcate speciﬁes OCSP
responder
• Clients asks responder whether cert is
valid
• Responder speciﬁes how long response is
valid for
The TLS handshake
The TLS handshake
Removing round trips
Previous proposal, TLS Snap Start
• Zero round trip handshake
Removing round trips
Removing round trips
Snap Start challenges
• Client must know server certiﬁcate
• Cached from previous visit
Snap Start challenges
• Client must know server certiﬁcate
• Revocation checking is still slow
• Cached from previous visit
Snap Start challenges
• Client must know server certiﬁcate
• Revocation checking is still slow
• Cached from previous visit
Problem
• TLS imposes extra latency due to
retrieving and validating server
certiﬁcate
• How to obtain certiﬁcate to do Snap
Start handshake?
• How to validate without extra latency?
Contribution
• Real world study of OCSP response
times
• Certiﬁcate prefetching and prevalidation
• Propose four prefetching strategies
• Analysis of eﬀectiveness
• Prototype implementation
How long does OCSP take in the
real world?
• Experimental setup
• OCSP response times collected from
users running Perspectives browser
extensions
• 242 clients, 4474 certiﬁcates, 24
responders
OCSP in the wild
CDF of OCSP response time:
Median: 291 ms, mean: 498 ms
OCSP in the wild
CDF of OCSP response time:
Median: 291 ms, mean: 498 ms
OCSP in the wild
CDF of OCSP response time:
Median: 291 ms, mean: 498 ms
OCSP in the wild
CDF of OCSP response time:
Median: 291 ms, mean: 498 ms
Design
• Prefetch certiﬁcates
• Enables Snap Start handshakes more
frequently
• Prevalidate certiﬁcates
• Removes OCSP lookup from critical path
Design questions
• When to prefetch? When to prevalidate?
• How to obtain certiﬁcate?
When to prefetch
Ideas borrowed from DNS prefetching:
• DNS prefetching triggers are eﬀective
for certs
When to prefetch
Ideas borrowed from DNS prefetching:
• DNS prefetching triggers are eﬀective
for certs
• Could be deployed with HTML hints for
eﬀective prefetching
How to prefetch
• Goal: Obtain server certiﬁcate
• Challenge: Full TLS handshake is
expensive
• Four proposed methods that are more
eﬃcient
Prefetching methods
Option 1: Truncated handshake
Prefetching methods
Option 1: Truncated handshake
Prefetching methods
Option 1: Truncated handshake
• No public key crypto!
• Server admin does nothing
• But implementation requires new API in TLS
layer
Prefetching methods
Option 2: HTTP GET request
e.g., to http://www.domain.com/cert
• Much less load than full TLS handshake, but
still impacts the server
Prefetching methods
What if we want no additional load on
server?
Prefetching methods
What if we want no additional load on
server?
Option 3: Retrieve from CDN
• HTTP GET request, avoid hitting web
server
Prefetching methods
What if we want no additional load on
server?
Option 4: Retrieve from DNS
• DNS TXT record can store certiﬁcate
• No impact on web server
Prevalidation
• After prefetching cert, prevalidate it
• Normal OCSP lookup
Prototype
• Prefetching and prevalidating in
Chromium
• Piggyback on DNS prefetching
architecture
• DNS and HTTP GET prefetching
Analysis
• How much does prefetching and
prevalidating aﬀect handshake latency?
Handshake latency
• Normal TLS handshake: 122 ms
↓ Remove round trips by prefetching cert and using Snap Start
• Snap Start, unvalidated cert: 83 ms
↓ Remove OCSP validation by prevalidating cert
• Snap Start, prevalidated cert: 30 ms
Server: Ubuntu 10.04, 256MB, Apache 2.2.17, Client: Ubuntu 10.04, 1GB RAM
HTTP GET request: 16 ms
Conclusions
• OCSP latency matters, especially when
handshakes have fewer RTTs
• Need prefetched certiﬁcate to enable Snap
Start and for OCSP prevalidation
• 4 proposed strategies for prefetching certs
• Reduce TLS handshake by two RTTs and
OCSP response time (factor of 4 in our
experiments)