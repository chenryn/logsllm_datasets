::: itemizedlist
**流程**
-   要转储单个数据库，请运行：
    ``` literallayout
    # mariadb-dump [options] --databases db_name > backup-file.sql
    ```
-   要一次转储多个数据库，请运行：
    ``` literallayout
    # mariadb-dump [options] --databases db_name1 [db_name2 …​] > backup-file.sql
    ```
-   要转储所有数据库，请运行：
    ``` literallayout
    # mariadb-dump [options] --all-databases > backup-file.sql
    ```
-   要将一个或多个转储的完整数据库加载回服务器，请运行：
    ``` literallayout
    # mariadb  backup-file.sql
    ```
-   要载入从一个数据库转储的表的子集，请运行：
    ``` literallayout
    # mariadb db_name 
## []{#using-mariadb_configuring-and-using-database-servers.html#performing-physical-online-backup_backing-up-mariadb-data}使用 Mariabackup 工具执行物理在线备份 {.title}
:::
[**[mariabackup]{.application}**]{.strong} 是一个基于 Percona XtraBackup
技术的工具，能够执行 InnoDB、Aria 和 MyISAM
表的物理在线备份。这个工具是由 AppStream 存储库中的
`mariadb-backup`{.literal} 软件包提供的。
[**[mariabackup]{.application}**]{.strong} 支持对 [**MariaDB**]{.strong}
服务器的全备份功能，其中包括加密和压缩的数据。
::: itemizedlist
**先决条件**
-   `mariadb-backup`{.literal} 软件包已在系统中安装：
    ``` literallayout
    # dnf install mariadb-backup
    ```
:::
::: itemizedlist
-   您必须为 [**[Mariabackup]{.application}**]{.strong}
    提供要在其下运行备份的用户的凭证。您可以在命令行中或通过配置文件来提供凭证。
-   [**[Mariabackup]{.application}**]{.strong} 的用户必须具有
    `RELOAD`{.literal}、`LOCK TABLES`{.literal} 和
    `REPLICATION CLIENT`{.literal} 特权。
:::
要使用 [**[Mariabackup]{.application}**]{.strong}
创建数据库备份，请使用以下流程：
::: itemizedlist
**流程**
-   要在在命令行上提供凭证的同时创建备份，请运行：
    ``` literallayout
    $ mariabackup --backup --target-dir  --user  --password 
    ```
    `target-dir`{.literal}
    选项定义存储备份文件的目录。如果要执行全备份，目标目录必是空或者不存在。
    `user`{.literal} 和 `password`{.literal}
    选项允许您配置用户名和密码。
-   要使用配置文件中设置的凭证创建备份：
    ::: orderedlist
    1.  在 `/etc/my.cnf.d/`{.literal} 目录中创建配置文件，例如
        `/etc/my.cnf.d/mariabackup.cnf`{.literal}。
    2.  将以下行添加到新文件的 `[xtrabackup]`{.literal} 或
        `[mysqld]`{.literal} 部分中：
        ``` literallayout
        [xtrabackup]
        user=myuser
        password=mypassword
        ```
    3.  执行备份：
        ``` literallayout
        $ mariabackup --backup --target-dir 
        ```
    :::
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
[**[mariabackup]{.application}**]{.strong} 不读取配置文件
`[mariadb]`{.literal} 部分中的选项。如果在 [**MariaDB**]{.strong}
服务器上指定了非默认数据目录，那么您必须在配置文件的
`[xtrabackup]`{.literal} 或 `[mysqld]`{.literal} 部分中指定此目录，以便
[**[Mariabackup]{.application}**]{.strong} 能够找到数据目录。
要指定非默认数据目录，请在 [**MariaDB**]{.strong} 配置文件的
`[xtrabackup]`{.literal} 或 `[mysqld]`{.literal} 部分中包含以下行：
``` literallayout
datadir=/var/mycustomdatadir
```
:::
::: itemizedlist
**其他资源**
-   [使用 Mariabackup
    的全备份和恢复](https://mariadb.com/kb/en/library/full-backup-and-restore-with-mariadb-backup/){.link}
    。
:::
:::
::: section
::: titlepage
## []{#using-mariadb_configuring-and-using-database-servers.html#restoring-data-using-the-mariabackup-tool_backing-up-mariadb-data}使用 Mariabackup 工具恢复数据 {.title}
:::
备份完成后，您可以使用 `mariabackup`{.literal}
命令及以下一个选项来从备份中恢复数据：
::: itemizedlist
-   `--copy-back`{.literal} 允许您保存原始的备份文件。
-   `--move-back`{.literal}
    将备份文件移到数据目录中，并删除原始的备份文件。
:::
要使用 [**[Mariabackup]{.application}**]{.strong}
工具来恢复数据，请使用以下流程：
::: itemizedlist
**先决条件**
-   确保 `mariadb`{.literal} 服务没有运行：
    ``` literallayout
    # systemctl stop mariadb.service
    ```
-   确保数据目录为空。
-   [**[Mariabackup]{.application}**]{.strong} 的用户必须具有
    `RELOAD`{.literal}、`LOCK TABLES`{.literal} 和
    `REPLICATION CLIENT`{.literal} 特权。
:::
::: orderedlist
**流程**
1.  运行 `mariabackup`{.literal} 命令：
    ::: itemizedlist
    -   要恢复数据并保留原始备份文件，请使用 `--copy-back`{.literal}
        选项：
        ``` literallayout
        $ mariabackup --copy-back --target-dir=/var/mariadb/backup/
        ```
    -   要恢复数据并删除原始备份文件，请使用 `--move-back`{.literal}
        选项：
        ``` literallayout
        $ mariabackup --move-back --target-dir=/var/mariadb/backup/
        ```
    :::
2.  修复文件权限。
    恢复数据库时，[**[Mariabackup]{.application}**]{.strong}
    会保留备份的文件和目录特权。但是，[**[Mariabackup]{.application}**]{.strong}
    以恢复数据库的用户和组的身份将文件写入磁盘。恢复备份后，您可能需要调整数据目录的所有者，以匹配
    [**MariaDB**]{.strong} 服务器的用户和组，通常两者都为
    `mysql`{.literal}。
    例如，要递归地将文件的所有权改为 `mysql`{.literal} 用户和组：
    ``` literallayout
    # chown -R mysql:mysql /var/lib/mysql/
    ```
3.  启动 `mariadb`{.literal} 服务：
    ``` literallayout
    # systemctl start mariadb.service
    ```
:::
::: itemizedlist
**其他资源**
-   [使用 Mariabackup
    的全备份和恢复](https://mariadb.com/kb/en/library/full-backup-and-restore-with-mariabackup/){.link}
    。
:::
:::
::: section
::: titlepage
## []{#using-mariadb_configuring-and-using-database-servers.html#performing-file-system-backup_backing-up-mariadb-data}执行文件系统备份 {.title}
:::
要创建 [**MariaDB**]{.strong} 数据文件的文件系统备份，请将
[**MariaDB**]{.strong} 数据目录的内容复制到您的备份位置。
要同时备份当前的配置或日志文件，请使用以下流程的可选步骤：
::: orderedlist
**流程**
1.  停止 `mariadb`{.literal} 服务：
    ``` literallayout
    # systemctl stop mariadb.service
    ```
2.  将数据文件复制到所需位置：
    ``` literallayout
    # cp -r /var/lib/mysql /backup-location
    ```
3.  （可选）将配置文件复制到所需位置：
    ``` literallayout
    # cp -r /etc/my.cnf /etc/my.cnf.d /backup-location/configuration
    ```
4.  （可选）将日志文件复制到所需位置：
    ``` literallayout
    # cp /var/log/mariadb/* /backup-location/logs
    ```
5.  启动 `mariadb`{.literal} 服务：
    ``` literallayout
    # systemctl start mariadb.service
    ```
6.  将备份位置的备份数据加载到 `/var/lib/mysql`{.literal} 目录时，请确保
    `mysql:mysql`{.literal} 是 `/var/lib/mysql`{.literal}
    中所有数据的所有者：
    ``` literallayout
    # chown -R mysql:mysql /var/lib/mysql
    ```
:::
:::
::: section
::: titlepage
## []{#using-mariadb_configuring-and-using-database-servers.html#introduction-to-replication-as-a-backup-solution_backing-up-mariadb-data}作为备份解决方案复制 {.title}
:::
复制是源服务器的一个替代的备份解决方案。如果源服务器复制到副本服务器，备份可以在副本上运行，而不会对源造成任何影响。当您关闭副本，并从副本备份数据时，源仍然可以运行。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
复制本身并不是一个足够的备份解决方案。复制可以防止源服务器出现硬件故障，但它不能确保防止数据的丢失。建议您将对副本的任何其他备份解决方案与此方法一起使用。
:::
::: itemizedlist
**其他资源**
-   有关使用 [**MariaDB Galera 集群**]{.strong} 复制
    [**MariaDB**]{.strong} 数据库的信息说明，请参考 [使用Galera 复制
    MariaDB](#using-mariadb_configuring-and-using-database-servers.html#replicating-mariadb-with-galera_using-mariadb "使用 Galera 复制 MariaDB"){.link}。
-   有关复制作为备份解决方案的更多信息，请参阅 [MariaDB
    文档](https://mariadb.com/kb/en/library/replication-as-a-backup-solution/){.link}。
:::
:::
:::
::: section
::: titlepage
# []{#using-mariadb_configuring-and-using-database-servers.html#proc_migrating-to-mariadb-10-5_using-mariadb}迁移到 MariaDB 10.5 {.title}
:::
在 RHEL 8 中，提供了 [**MariaDB**]{.strong} 服务器版本 10.3 和
10.5，分别由单独的模块流提供。RHEL 9 提供 [**MariaDB 10.5**]{.strong} 和
[**MySQL 8.0。**]{.strong}这部分论述了从 RHEL 8 中的 [**MariaDB
10.3**]{.strong} 版本迁移到 RHEL 9 中的 [**MariaDB 10.5**]{.strong}
版本。
::: section
::: titlepage
## []{#using-mariadb_configuring-and-using-database-servers.html#notable-differences-between_mariadb_10_3_and_mariadb_10_5}MariaDB 10.3 和 MariaDB 10.5 之间的显著区别 {.title}
:::
[**MariaDB 10.3**]{.strong} 和 [**MariaDB 10.5**]{.strong}
之间的显著变化包括：
::: itemizedlist
-   [**MariaDB**]{.strong} 现在默认使用 `unix_socket`{.literal}
    身份验证插件。该插件允许用户在通过本地 Unix 套接字文件连接到
    [**MariaDB**]{.strong} 时使用操作系统凭证。
-   `MariaDB`{.literal} 添加了以 `mariadb-*`{.literal}
    命名的二进制代码，`mysql*`{.literal} 符号链接指向
    `mariadb-*`{.literal}
    的二进制代码。例如，`mysqladmin`{.literal}、`mysqlaccess`{.literal}