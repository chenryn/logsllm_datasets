{v1, v2, . . . , vn}, each representing a diﬀerent autonomous system. Each vertex
is labeled with a unique identiﬁer that represents the 16-bit autonomous system
number that is assigned to organizations by their responsible Internet number
registry (e.g., American Registry for Internet Numbers – ARIN [2]). Each node
vi can be connected to zero or more other vertices {vj, . . . , vk} by undirected
edges {eij, . . . , eik}. An edge (or link) eij represents a direct network connection
between the autonomous systems represented by vi and vj such that routers
located in those systems can exchange traﬃc without having to traverse another
autonomous system. Connections between ASes manifest themselves as adjacent
AS numbers in the AS PATH attributes of UPDATE messages. More precisely, they
can be retrieved from sequence segments of AS PATH attributes.
In addition to sequence segments that show the exact trail of a route update,
an AS PATH attribute can also contain AS sets. AS set segments store autonomous
systems in an arbitrary fashion and commonly appear in the announcement of
aggregated routes. Aggregated routes are utilized to decrease the size of routing
tables and are created by an AS that does not forward BGP update messages
from its peers immediately. Instead, it collects these messages and merges their
address sets into a single block. The AS then announces the resulting block,
essentially claiming that it owns the aggregated address space. In most cases,
however, there is no single AS path that leads to all the aggregated IP address
destinations and the AS PATH attributes have to be merged as well. This is done
Topology-Based Detection of Anomalous BGP Messages
23
by combining all autonomous systems into the unordered collection of AS num-
bers called AS set. This AS set is then used as new AS PATH attribute.
The AS set is needed to prevent routing loops. If the sets were omitted and
the aggregating router announced a path originating at the local AS, the route
might be propagated back to one of the autonomous systems that originally
announced parts of the aggregated route. This AS would be unable to determine
that it has previously announced parts of that aggregated route itself and might
install or forward the update instead of discarding it. Although the omission of
the AS sets when propagating aggregated routes is bad practice and might lead
to routing loops, it is the default setting in Cisco’s BGP implementation. When
an AS set is encountered in the AS PATH attribute, no connectivity information
can be retrieved from it.
Several previous studies of the BGP topology [11, 20, 32] have utilized data
extracted from BGP routing tables or BGP update messages. The resulting
graphs have proven to be useful in determining correspondence between IP
addresses, preﬁxes and ASes. A common classiﬁcation in this research distin-
guishes between core and periphery nodes of the connectivity graph. According
to [10], the core consists of international, national and North American regional
providers while the periphery corresponds to metropolitan area providers, com-
panies and universities. In [33], the core and the periphery nodes are called
transfer and stub nodes, respectively. The authors state that the connectivity
graph is hierarchical with transfer nodes being highly interconnected while stub
nodes attach to at most a few other stub nodes and have one or two links to
transfer nodes.
Both studies utilize the node degree (i.e., the number of neighbors or links
to other nodes) as a distinguishing criteria to classify ASes as either core or
periphery systems. Following this observation, we adapted a technique described
in [6] to determine the core nodes of the AS graph. The algorithm operates by
successively pruning nodes from the graph that have a degree of two or less (i.e.,
nodes that have at most two connections to the remaining nodes in the graph).
The pruning is continued until no more nodes can be removed, and each removed
node is classiﬁed as periphery. Note that each node of the graph can be evaluated
multiple times as the pruning progresses. It is possible that the number of links
of a node with a degree greater than two is reduced due to other nodes that
are removed from the connectivity graph. When the algorithm terminates, all
remaining nodes are classiﬁed as core nodes. This process labels between 10%
an 15% of all autonomous systems as core nodes, a ﬁnding that is in agreement
with the two studies mentioned above [10, 33] as well as results reported in [8].
For exact results obtained for a selection of data sets, see Section 6.
Other methods [8, 31] to classify autonomous systems are possible and might
improve our detection results. In our work, however, we have chosen the straight-
forward approach presented in [6] and leave the assessment of alternative classi-
ﬁcation algorithms for future work.
When the core and periphery nodes of the connectivity graph have been
determined, the complete AS connectivity graph can be decomposed into clusters
24
C. Kruegel et al.
of periphery nodes. This decomposition is achieved by removing all core nodes
from the graph. The resulting graph is no longer connected – instead it consists
of many small groups of interconnected periphery nodes. These groups no longer
have paths between them. This can be expected, as the core nodes represent the
backbone of the Internet that provides the links between collections of smaller
networks. A set (or group) of periphery nodes where each node is reachable from
every other node in the set via at least one path is called a cluster. Note that
the path between nodes in a cluster may contain intermediate nodes. It is not
necessary that each node in a cluster has a direct link to every other node. One
exemplary cluster of six ASes located around Toronto in Ontario, Canada is
shown in Figure 1. The distances between individual autonomous systems range
from 0 kilometers, when two ASes are in the same town (here Toronto), to 238
kilometers. The ﬁgure also shows four uplinks that connect ASes to core nodes
(such as the link from AS 2767 – AT&T Canada to AS 7018 – AT&T WorldNet).
Core nodes
AS7018
AT&T
WorldNet
AS2767
AT&T Canada
Telecom Services
Company
AS19737
Military College of
Canada
AS18621
Connestoga
College
0km
83km
0km
AS808
Canadian
Res. Network
Diameter 285km
238km
AS549
Onet Toronto
0km
AS239
Univ. of Toronto
Fig. 1. AS Cluster around Toronto, Canada
We claim that the geographical distances between autonomous systems that
are represented by the nodes of a single cluster are small. To capture the geo-
graphical distances of a cluster more precisely, we deﬁne the cluster diameter as
the maximum geographical distance between any two of its ASes. In Figure 1, the
maximum distance is 285 kilometers between AS 18621 and AS 19737. For the
calculation of the cluster diameter, it is not necessary that a direct link exists
between the most distant ASes. The idea is to conﬁne a geographic area or
region in which all ASes are located. The validity of our claim can be intuitively
understood by the fact that periphery nodes represent small networks that are
connected to large providers to obtain Internet connectivity (represented by
core nodes) and to other small networks that are located in close vicinity. It is
neither economically nor technically reasonable for a periphery network to install
Topology-Based Detection of Anomalous BGP Messages
25
a direct link to another periphery network that is far away (from a geographical
point of view). Our hypothesis is veriﬁed by deriving the cluster diameters for
AS connectivity graphs (containing several thousand ASes) constructed from
update messages collected at diﬀerent points in time over the last two years. For
a description of the test methodology and the exact results, consult Section 6.
4.2 Detection Techniques and Limitations
Based on the partition of the AS connectivity graph into core and periphery
nodes and the observation that the cluster diameter is small, we deﬁne the
following two constraints that a valid AS PATH must satisfy.
1. The sequence of autonomous systems in an AS PATH may only contain a
single subsequence of core ASes. That is, a path that has traversed and left
the core may never enter the core again.
2. All consecutive pairs of periphery ASes in an AS PATH must either be part
of the same cluster or, when they establish a link between two previously
unconnected clusters, must be in close geographical vicinity.
The ﬁrst constraint ensures that valid routes between two periphery ASes
only traverse the core once and do not detour through a diﬀerent periphery sys-
tem before reaching the destination. As the core represents the backbone of the
Internet, it is capable of delivering packets between any two periphery clusters
directly. This constraint is also discussed in [33] and [8]. Both authors observe
that valid paths traverse the core only once and do not have any intermediate
periphery nodes.
The second constraint refers to direct connections between periphery systems.
As shown in Section 6, periphery ASes that are directly connected are in a close
geographical vicinity. When two periphery ASes are consecutively listed in an
AS path, a direct link between these two is indicated. When a link between the
two ASes already exists or when both belong to the same cluster, the connection
is considered legitimate. When the link connects two previously unconnected
clusters, the geographical distance between the two ASes has to be calculated.
To be a valid update message, this distance has to be below a certain, adjustable
threshold that can also depend on the diameter of the two clusters involved. For
our experiments, this threshold is set to the maximum between the sum of the
two cluster diameters and 300 kilometers1.
The two aforementioned constraints allow us to validate certain properties of
the AS paths in BGP update messages. For example, a malicious periphery AS
that attempts to craft an invalid path to a victim usually cannot simply announce
a direct route to the victim’s AS. This is because such a direct link would violate
the second constraint (assuming that the malicious AS and the victim are far
enough away). In case the malicious nodes attempts to evade detection and
1 300 kilometers was chosen as a reasonable low value to capture the notion of close
proximity. The threshold was selected prior to the evaluation and was not tuned to
improve the experimental results afterwards.
26
C. Kruegel et al.
inserts a core AS between itself and the victim’s AS, the advertisement of this
new route to any core AS would result in a sequence of core nodes that is
interrupted by the oﬀending AS. Such an update message would then violate
the ﬁrst constraint.
An obvious restriction of the topology-based approach is that only connec-
tions between periphery ASes can be validated using the geographical distance
measurement. When a core node installs a new, direct route to another node
(which may be either periphery or core), there is no reason why this announce-
ment should be distrusted. It is perfectly reasonable to conclude that simply
another direct link has been established. This limitation, however, only aﬀects
updates sent by large providers. Since these organizations usually employ net-
work monitoring and implement high security standards, the threat that em-
anates from them is small compared to local providers or companies. Also note
that this limitation does not aﬀect updates that providers receive from their
peers. They can still be checked and potential problems detected.
Another limitation prevents the detection of invalid updates when an AS
claims that is has a direct connection to another autonomous system that is
in a close geographical vicinity. In this case, the distance between the nodes
representing the attacker and the victim AS is short and the model assumes
that a valid, direct route has been installed. This allows a malicious AS to aﬀect
routing to other ASes that are located nearby. However, only a limited number
of periphery ASes are located close to any speciﬁc autonomous system. This puts
a limit on the number of potential targets and the freedom that the attacker has
in choosing the victim. When an attacker attempts to forge a route to a distant
AS, our system is capable of detecting the invalid path update.
The problem of dynamically updating the network model is left for future
work. In our current design, it is necessary to rebuild the network model when
the underlying topology changes in an extent that causes a signiﬁcant raise in
the number of false alarms. Note, however, that the network topology model can
be built very fast. The model creation process required, for our experiments,
update messages collected in a period of less than a day before it converged.
Convergences was reached when new update messages did not result in any
new information inserted into the graph for more than six hours. The detection
process also exhibits a certain robustness against invalid updates during the
model creation phase. Although invalid information is entered into the topology
graph, the defect remains conﬁned locally.
5 Detection of IP Address Ownership Violation
An IP address ownership violation occurs when an AS announces an IP block
that it is not entitled to. This announcement is done by setting the NLRI ﬁeld
of the update message to the illegitimate IP range and transmitting it using an
AS PATH that starts with the malicious AS. An AS that receives such a message
considers the originating malicious AS authoritative for the announced IP block
Topology-Based Detection of Anomalous BGP Messages
27
and will forward corresponding packets there (given that it has not received a
more preferable path to that IP block from the legitimate owner).
This problem, also called Multiple Origin AS (MOAS) conﬂict, was exten-
sively studied by Zhao et al. [34]. The authors point out that MOAS conﬂicts
occur relatively frequently, and also provide several non-malicious explanations
for this phenomenon.
One possibility to distinguish between malicious and legitimate MOAS con-
ﬂicts are BGP protocol enhancements, either using cryptographic solutions such
as S-BGP [14] or protocol extensions such as MOAS lists [35]. A MOAS list
contains a list of all ASes that are entitled to announce a certain IP block, and
is attached to BGP route announcements. Although individual MOAS lists can
be altered or forged, the solution relies on the rich connectivity of the Internet.
It is assumed that a router will, in addition to a malicious MOAS list sent by
an attacker, also receive a valid MOAS list from a legitimate source, thus being
able to detect the inconsistency and raise an alarm.
In contrast to that, we pursue a more na¨ıve strategy and attempt to prevent
as many MOAS conﬂicts as possible that originate from probably legitimate
conﬁgurations. This is done by ignoring BGP updates with aggregated NLRI
ﬁelds or set COMMUNITIES attributes, as described in more detail below. Also,
updates that announce large IP ranges (in our case, network masks with 8 or
less bits) are excluded from our model. This approach aims to reduce the number
of false positives, with the downside of an increased false negative rate. Future
work will investigate improvements of this technique.
In our current approach, we build a model that stores a mapping between
IP address blocks and their respective, authoritative ASes to detect address
ownership violations. This mapping is constructed from BGP update messages
during the model building phase. In the simplest case, the IP address block that
a particular AS owns can be extracted directly from update messages. An IP
range is announced by its owner by creating a suitable BGP UPDATE message
and sending it to the peering partners of the particular autonomous system. As
each AS forwards such updates, it is required to prepend its own number to the
already existing AS PATH attribute. Thus the originating AS appears as the last
entry in the path list. Whenever our system observes a BGP message announcing
an address block, the mapping between the IP range and its owner is inserted
into our model.
It is not a requirement that an AS actually owns an IP block to be entitled
to announce it. In fact, it is possible (and quite common) that an autonomous
system would be granted the right to announce a block for a related AS. All IP