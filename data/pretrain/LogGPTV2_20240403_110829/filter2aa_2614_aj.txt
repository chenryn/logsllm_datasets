Postman使用方式的基础上，将常用的安全攻击手法融入其中，才能达
到安全测试的效果。例如，最常见的用户和口令暴力破解场景，安全人
员需要自己准备攻击向量或字典，再使用其提供的Runner collections方
式，设置字典值payload，进行安全测试验证。字典的选择可以使用
FuzzDB中的wordlists-user-passwd，然后再使用Postman的Runner进行
Fuzz测试，如图4-12所示。
●图4-12 Postman加载暴力破解字典设置
当然，读者也可以通过Postman支持代理的方式，将Postman与Burp
Suite联合使用，这样就可以省略动手编写脚本获取参数的步骤，将
payload的设置在Burp Suite中来做。例如，将Postman的代理地址和端口
设置为Burp Suite的默认代理，如图4-13所示。
●图4-13 Postman代理设置
通过图4-13的代理配置，当在Postman发送API请求时，Burp Suite将
获取到对应的流量，如图4-14所示。
●图4-14 Burp Suite代理Postman后流量展示界面
4.2.4 SoapUI工具
SoapUI是一款商业化的API测试软件，在REST API、SOAP API、
JMS方面都有着广泛的使用基础。
1.基本信息
工具名称：SoapUI。
工具网址：https://www.soapui.org。
工具简介：SoapUI是从做WebService接口测试开始起步的，在后来
的产品功能中逐渐支持了REST 
API接口测试并将专业版改名为Ready
API。随着产品的发展，其功能变得愈加丰富，从API的功能性测试、
性能测试、安全测试到Mock测试，以及持续集成能力。十几年的行业
经验积累使得SoapUI在API领域一直处于领先地位，深受众多测试人员
和开发人员的喜爱。
SoapUI目前有开源版和专业版两个版本，这两个版本的差异如图4-
15所示。
●图4-15 SoapUI官网开源版与专业版功能对比截图
在常规的人工测试中，如果不考虑CI/CD的自动化集成，SoapUI开
源版的功能足够满足日常使用，在这里以SoapUI专业版（即
ReadyAPI）为蓝本进行介绍。SoapUI在API安全方面的功能特性如下。
■ 
多种类型API通信协议支持，常见的有SOAP类型、RESTful类
型、JMS类型等。在同一种工具中支持不同的协议类型，避免使用者工
作时在不同的工具之间切换，极大地降低了学习工具的成本。
■ 原生安全自动化支持，与Postman相比，SoapUI本身自带的安全
检测功能对使用者更加友好，无须借助其他工具，即可开展安全测试工
作。
■ REST API自动发现功能，SoapUI可以通过代理的方式，自动抓
取REST API的流量，形成测试用例。
■ 多种API认证方式支持，比如SAML、用户名/口令、数字证书、
OAuth 1.0、OAuth 2.0等。
2.基本原理
因为SoapUI自身携带安全模块，故其工作原理相对比较简单，如图
4-16所示的流程即为安全工作的流程。
●图4-16 SoapUI工作原理
与Postman类似，SoapUI的测试验证过程更为简洁，大致可划分为
配置加载、安全测试用例生成、请求发送、响应验证43个步骤。配置
加载步骤的目的是将每一个API请求相应的header、body、URL参数、
授权方式等配置信息进行设置，当配置信息收集完成后，安全测试模块
会使用这些信息，组装上SoapUI内置的安全攻击向量，对服务器端发送
API请求。当服务器对请求做出相应的响应时，安全测试模块根据响应
报文，识别是否存在安全漏洞。
3.SoapUI在API安全中的用法
当读者使用SoapUI进行API安全测试时，工具提供了3种API配置导
入路径，如图4-17所示。
●图4-17 SoapUI导入API规范文件设置界面
■ 
从标准的规范文件导入，比如Swagger文件、WSDL文件、
OpenAPI定义文件等。
■ 从URL加载，通过读取URL内容，工具自动解析并生成API相关
配置。
■ 从本地工程读取工程中的配置文件，生成API相关配置。
API配置生成后，工具会自动提示用户选择安全用例。常见的API
安全用例会以列表的形式呈现，用户根据需要选择安全用例（开源版有
部分安全测试用例无法使用），即可启动安全测试。其安全测试用例如
图4-18所示。
●图4-18 SoapUI安全用例选择界面
SoapUI的安全测试模块发出的请求通过服务器响应后，仍交由工具
内部处理，生成安全报告。在SoapUI的安全测试界面，展示每一个请求
的详细执行情况。通过这个界面，也可以更深入地了解SoapUI使用了哪
些payload对API进行了测试验证。其扫描界面如图4-19所示。
●图4-19 SoapUI安全扫描执行界面
SoapUI默认支持的安全扫描类型种类比较多，主要有如下几种。
■ 边界或临界值扫描，比如数组越界、字符串长度越界、数值越界
等。
■ 跨站脚本攻击扫描，比如存储型XSS、反射XSS等。
■ 
模糊测试，除了支持对不同参数的Fuzz外，也支持不同的HTTP
请求方法的Fuzz、JSON对象的Fuzz。
■ 
XML类攻击扫描，比如XML实体攻击、XML炸弹、XPath注入
等。
■ SQL注入类扫描，比如MySQL类注入、Oracle类注入、NoSQL类
注入等。
■ 
信息泄露扫描，比
如.htaccess、.ssh/id_rsa、.ssh/authorized_keys、.svn文件等。
■ 不安全的授权认证扫描，比如与API认证授权相关的内容（如会
话ID、Cookie等）。SoapUI在此方面支持的功能比较弱，更多地需要结
合业务流程，做人工渗透测试和验证。
4.3 其他工具介绍
除了上文中提及的典型工具以外，还有一些工具在API安全的其他
方面有着不同的用途。在这里，也为读者做简要的介绍。
4.3.1 自动化工具
在漏洞扫描工具中，还有些工具功能与SoapUI类似，虽没有友好的
可视化操作界面，却又因在漏洞发现功能上有着独特优势而拥有一定的
用户群体。
1.自动化API攻击工具
这是由著名的Web应用防火墙厂商Imperva开源的一款可定制的API
攻击工具，在无须人工干预的情况下，只需简单地运行该工具即可获得
攻击报告。读者可以访问GitHub（https://github.com/imperva/automatic-
api-attack-tool）去下载此工具。其工作原理是从API规范文件（Swagger
2.0、.json或.yaml格式）读取API信息，对于每个API，通过Fuzz的方
式，模拟攻击请求，检测安全漏洞。它的主要功能特性如下。
■ 适用于检测API的功能实现是否安全设计一致、是否具有缓解攻
击的保护措施类场景。
■ 适用于检测API输入参数是否被正确的处理以及进行模糊测试场
景。
■ 
适用于在CI/CD管道中，与Jenkins作业任务进行持续集成的场
景。
■ 适用于具备API扫描工具定制化需求的场景。
2.Astra工具
Astra是23018年全球黑帽大会上亮相的一款工具，Flipkart安全团队
开发这款工具的目的是想让安全工程师或应用程序开发人员能将Astra用
作其SDL流程的组成部分，专门用于REST API渗透测试。其名称Astra
即来源于Automated Security Testing for REST API's首字母缩写，同
时，“Astra”这个术语本意是表示防御战场上被袭击的工具。通过理解这
些含义，或许能帮助读者更好的理解Flipkart安全团队开始这款工具的意
图。
目前渗透测试操作系统Black 
Arch已将Astra纳入其安全测试工具
包，在GitHub上也有其开源的源码站点（https://github.com/flipkart-
incubator/Astra），读者可以下载源码或参考网站说明使用此工具。作
为专用于REST 
API的安全测试工具，它可以模拟多种类型的攻击，主
要如下。
■ SQL注入。
■ XSS跨站脚本。
■ 信息泄漏。
■ 身份验证和会话管理。
■ CSRF跨站请求伪造。
■ 速率限制。
■ CORS配置错误（包括CORS绕过）。
■ JWT攻击。
■ CRLF检测。
■ XXE攻击。
除了以上攻击类型外，Astra还具备自动检测身份验证相关API、与
CI/CD管道集成等功能。针对Astra工具的详细使用，在后续的章节中，
将为读者做进一步的介绍。
4.3.2 经典安全工具
API安全不是一个新的领域，只是因为近些年API安全问题的突出
而被单独列出来，换一个新的视角去关注其安全性，所以很多经典的安
全工具仍然适用，比如漏洞扫描软件Acunetix 
WVS、协议分析软件
Wireshark等。
1.Acunetix WVS漏洞扫描器
Acunetix WVS是业界知名的一款网络漏洞扫描软件，通常用来扫描
可以通过Web浏览器访问的Web应用程序，因其功能强大，软件界面简
洁，操作简单深受用户喜爱。在API安全方面，Acunetix WVS也提供了
友好的功能支持。比如自定义认证方式和速率控制。作为一款自动化漏
洞扫描工具，其支持浏览器代理、外部文件导入、爬虫等方式获取需要
扫描的URL路径，当API安全扫描时，可以将Postman、Burp Suite中收
集的流量文件导入Acunetix WVS，启动自动化扫描。其文件导入界面如
图4-20所示。
●图4-20 Acunetix WVS导入外部文件
2.Wireshark工具
Wireshark作为业界著名的网络协议包分析软件一直深受IT技术人员
的喜爱，在安全方面也同样有着广泛的使用。网络工程师使用Wireshark
分析网络问题，软件工程师使用Wireshark分析自己编写的软件问题，安
全工程师使用Wireshark分析网络攻击，比如ARP欺骗、DoS攻击、防火
墙规则调试等。正是Wireshark这种强大的网络协议包分析功能，它也常
常被用来分析HTTP/HTTPS协议中的安全问题，尤其是针对API通信和
身份认证方面的攻击。