⾮非常效率
38. ⽂文件上传错误的⽅方便便扩展列列表
By @pwntheweb
Source: link
cat file.js | grep -aoP "(? HTTP 302 (重定向到登录⻚页⾯面)
https://target.com/admin..;/ –> HTTP 200 OK
也可以试试下⾯面的⼩小技巧。
https://target.com/../admin
https://target.com/whatever/..;/admin
40. 通过篡改URI禁⽌止绕过403。
By @remonsec
Source: link
这个⼩小技巧与前⼀一个⾮非常相似。通过篡改URI，我们或许可以绕过应⽤用程序的访问控制。
site.com/secret –> HTTP 403 Forbidden
site.com/secret/ –> HTTP 200 OK
site.com/secret/. –> HTTP 200 OK
site.com//secret// –> HTTP 200 OK
site.com/./secret/.. –> HTTP 200 OK
虽然难得⼀一⻅见，但也不不失为⼀一种尝试。
41. 在SVN仓库中寻找数据库的秘密。
By @faizalabroni
Source: link
以下是 @faizalabroni 是如何在SVN仓库中发现数据库秘密并收集bug赏⾦金金的。
1. Run ./dirsearch.py -u target -e php,html,js,xml -x 500,403
2. 发现 http://url.com/.svn/
3. 克隆隆 & 使⽤用 SVN-Extractor
4. 运⾏行行 ./svn-extractor.py --url http://url.com --match database.php
5. 结果在输出⽬目录下，只要打开它
当场起⻜飞!
验室制作翻译出品
下⾯面是我们需要的⼯工具清单。
https://github.com/maurosoria/dirsearch
https://github.com/anantshri/svn-extractor
42. 从URI⽣生成内容发现词表
By @healthyoutlet
Source: link
有⼀一个很有⽤用的⼯工具叫sprawl，⽤用来扩展URI路路径列列表，⽐比如从waybackurls或gau，并⽣生成⼀一个内容发
现词表。下⾯面是如何使⽤用它。
现在，我们可以使⽤用这个词表来发现我们的⽬目标上托管的其他端点。
这个⼯工具就在这⾥里里。
https://github.com/tehryanx/sprawl
43. 从APK⽂文件中提取端点
By @SalahHasoneh1
Source: link
另⼀一个有⽤用的分析Android APK⽂文件的⼯工具是由@delphit33制作的apkurlgrep。这个⼯工具可以从APK⽂文
件中提取URL，甚⾄至不不需要先解压。
从这⾥里里获取⼯工具
https://github.com/ndelphit/apkurlgrep
44. 找到更更多⼦子域的收集技巧（shodan）。
By @krizzsk
Source: link
echo '/1/dev/admin' | python3 sprawl/sprawl.py -s
apkurlgrep -a path/to/file.apk
验室制作翻译出品
⼤大公司往往会使⽤用⾃自⼰己的CDN（内容分发⽹网络），有些CDN是⽤用来服务内部静态⽂文件的，⽐比如javascript
⽂文件。
利利⽤用以下步骤，我们可以通过shodan搜索引擎找到更更多的内部⼦子域和多汁的javascript⽂文件。
1. 对CDN域名进⾏行行被动或主动枚举，如bigcompanycdn.com。
2. 不不管找到了了什什么⼦子域名，都要⽤用 "http.html"过滤器器在shodan上进⾏行行搜索。
3. 例例⼦子： 你发现 dev-int.bigcompanycdn.com。
shodan查询的结果是这样的
http.html:”dev-int.bigcompanycdn.com”
http.html:”https://dev-int-bigcompanycdn.com”
45. 查找javascript⽂文件中隐藏的GET参数
By @chiraggupta8769 (@intigriti, @sratarun)
Source: link
这⾥里里有⼀一个有趣的⼩小技巧，通过分析javascript⽂文件来寻找隐藏参数。
1. 搜集javascript⽂文件中的变量量名，例例如：1:
var test = "xxx" 。
2. 尝试将每⼀一个都作为GET参数，以发现隐藏的参数，例例如：。
https://example.com/?test="xsstest
这往往会导致XSS!
原来，@sratarun做了了这个复杂的单⾏行行代码⽣生成器器，它可以找到所有的变量量名，并将其作为参数追加。
assetfinder example.com | gau | egrep -v 
'(.css|.png|.jpeg|.jpg|.svg|.gif|.wolf)' | while read url; do vars=$(curl -s 
$url | grep -Eo "var [a-zA-Z0-9]+" | sed -e 's,'var','"$url"?',g' -e 's/ //g' | 
grep -v '.js' | sed 's/.*/&=xss/g'); echo -e "\e[1;33m$url\n\e[1;32m$vars"; 
done
验室制作翻译出品
现在，我们可以测试所有这些URL，并检查我们是否可以⽤用它们触发XSS或类似的东⻄西。
从这⾥里里获取本技巧的所有⼯工具。
https://github.com/tomnomnom/assetfinder
https://github.com/lc/gau
46. 通过GitHub dorks 收集敏敏感信息
验室制作翻译出品
By @D0cK3rG33k
Source: link
这是10个有⽤用的GitHub dorks列列表，可以使⽤用⽂文件扩展名识别敏敏感信息。
1. extension:pem private
2. extension:ppk private
3. extension:sql mysql dump password
4. extension:json api.forecast.io
5. extension:json mongolab.com
6. extension:yaml mongolab.com
7. extension:ica [WFClient] Password=
8. extension:avastlic “support.avast.com”
9. extension:js jsforce conn.login
10. extension:json googleusercontent client_secret
通过这些GitHub dorks，我们可以识别诸如证书私钥、puttygen私钥、带有密码的MySQL转储、API密
钥和秘密、json或yaml配置中的MongoDB凭证、访问Google API的OAuth凭证以及类似的敏敏感数据。
提示：也可以查看以下GitHub的dorks库，其维护者是 @techgaun:
https://github.com/techgaun/github-dorks
47. 通过添加X- HTTP头⽂文件绕过速率限制。
By @Cyb3rs3curi_ty
Source: link
这⾥里里有⼀一个⼩小窍⻔门，可以绕过速率限制的负载均衡器器，代理理和WAF，在我们的⽬目标途中的某个地⽅方之
间。
在你的请求中添加以下HTTP头。
X-Originating-IP: IP
X-Forwarded-For: IP
X-Remote-IP: IP
X-Remote-Addr: IP
X-Client-IP: IP
X-Host: IP
X-Forwared-Host: IP
这些头信息通常被负载均衡器器或代理理服务器器等中间组件使⽤用，通过在这些HTTP头信息中添加任意的内部
IP地址，我们实际上可能会绕过强制的速率限制。
⽤用以下范围的IP地址试试。
192.168.0.0/16
172.16.0.0/12
127.0.0.0/8
10.0.0.0/8
⼀一旦我们再次遇到堵塞，只需增加提供的IP地址即可。
验室制作翻译出品
这个⼩小技巧可能不不⼀一定有效，但当事情变得困难时，绝对值得⼀一试。
48. Top 25 服务器器端请求伪造（SSRF）参数
By @trbughunters
Source: link
以下是可能存在服务器器端请求伪造（SSRF）漏漏洞洞的25⼤大参数。
下次在URL中遇到这样的参数时，要引起注意，因为SSRF是⼀一个关键的漏漏洞洞，可能会让你。
在远程服务器器的环回接⼝口上访问服务。
扫描内部⽹网络并与内部服务进⾏行行潜在的交互。
使⽤用file://协议处理理程序读取服务器器上的本地⽂文件。
横向移动/转⼊入内部环境。
49. 敏敏感数据泄漏漏使⽤用.json
By @SalahHasoneh1
Source: link
这⾥里里有⼀一个使⽤用.json扩展名实现敏敏感数据泄露露的技巧。
?dest={target}
?redirect={target}
?uri={target}
?path={target}
?continue={target}
?url={target}
?window={target}
?next={target}
?data={target}
?reference={target}
?site={target}
?html={target}
?val={target}
?validate={target}
?domain={target}
?callback={target}
?return={target}
?page={target}
?feed={target}
?host={target}
?port={target}
?to={target}
?out={target}
?view={target}
?dir={target}
验室制作翻译出品
Request:
GET /ResetPassword HTTP/1.1{"email":"PI:EMAIL"}
Response: