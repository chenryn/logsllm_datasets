includes sensitive or offensive contents.
• We label non-spam tweets by deﬁning seed accounts. A
large set of truthful accounts (from governments, famous
companies, organizations, and well-known persons) are
considered as the seed and their tweets are labeled as
non-spams.
• We label a tweet as spam if a certain symbol exists and
it is from a group of users with the same afﬁliation while
the users in this group perform spamming behaviors.
Lastly, we perform manual checking both in the labeled
dataset obtained from aforementioned steps and the remaining
unlabeled dataset to reﬁne a reliable ground truth dataset. With
the combination of these approaches, our labeled ground truth
dataset covers a broad range of spams and spammers that can
reﬂect their characteristics of diversity.
C. Machine Learning Based Spammer Detector
Our detector relies on the machine learning-based methods
to perform intelligent spams/spammers classiﬁcation. There
are a variety of prominent machine learning methods that may
be used to classify spammers, such as Decision Tree (DT)
[2], Support Vector Machine (SVM)[39], Gradient Boosting
(GB)/Extreme Gradient Boosting (EGB) [20], [11], k-Nearest
Neighbors Algorithm (kNN) [7], and Random Forest (RF)
[38]. We test all these machine learning classiﬁers on our
labeled ground truth dataset with 10-fold cross-validation and
choose the most accurate one for use in our detector.
Since spammers’ taste may change over time in practice,
the Twitter spammer drift problem [6] is challenging in the
design of pseudo-honeypot. One strategy is to apply the reverse
engineering strategy by keeping track of the spammers’ tastes
in real time. The pseudo-honeypot can update its spam features
automatically in a real-time manner once there are new spams
captured. Meanwhile, the ground truth training dataset also
keeps updating. As spammer drift problem is out of the scope
of this paper, we omit its discussion here to conserve space.
V. EVALUATION AND RESULTS DISCUSSION
In this section, we describe the implementation of our
pseudo-honeypot system and present experimental results to
demonstrate its superior capability in capturing spams and
spammers.
440
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:55:53 UTC from IEEE Xplore.  Restrictions apply. 
THE LISTS OF PROFILE-BASED ATTRIBUTES AND THEIR SAMPLING VALUES.
TABLE II
Index
1
2
3
4
5
6
7
8
9
10
11
Attribute
friends count
follower count
total friends and follower
ratio of friend and follower
account age (days)
lists count
favorites count
status count
average of list per day
average of favorites per day
average of statues per day
Sample value
10 50 100 200 300 500 1k 3k 5k 10k
10 50 100 200 300 500 1k 3k 5k 10k
20 100 200 500 1k 2k 3k 5k 10k 30k
1/10 1/8 1/4 1/2 1 2 4 6 8 10
10 50 100 300 500 1k 1.5k 2k 2.5k 3k
10 20 30 40 50 70 100 200 300 500
10 50 100 500 1k 5k 10k 50k 100k 200k
10 50 100 500 1k 5k 10k 50k 100k 200k
1/100 1/50 1/20 1/10 1/8 1/6 1/4 1/2 1 2
1/50 1/10 1/5 1/2 1 2 3 5 10 50
1/50 1/10 1/5 1/2 1 2 3 4 10 50
Total selected accounts
100
100
100
100
100
100
100
100
100
100
100
A. System Implementation
Our system is implemented by selecting a set of user
accounts that include a total of 24 attributes, as discussed
in Section III-B. For proﬁle-based category listed in Table I,
we consider each attribute with 10 different sample values
while selecting 10 user accounts having each sample attribute
value to serve as the pseudo-honeypot nodes. Consider the
attribute of friends count, for example, we have 10 sample
values, namely, with friend amounts equal to 10, 50, 100, 200,
300, 500, 1000, 3000, 5000, and 10000. Each sample value is
then to include 10 individual accounts selected as the pseudo-
honeypot nodes, for a total of 100 pseudo-honeypot nodes
under the friends count attribute. The sample values of each
attribute in proﬁle-based category are listed in Table II, indi-
cating the construction of 1100 pseudo-honeypot nodes totally.
In the hashtag-based category, we identify the top 10 hashtags
(from [9]) in each attribute and select 10 accounts possessing
each hashtag to serve as pseudo-honeypot nodes. That is,
we have 100 pseudo-honeypot nodes each for entertainment,
general, business, tech, education, environment, social, and
astrology. For the no hashtag attribute, we randomly select 100
accounts that are posting tweets without any hashtag. In total,
we have 900 pseudo-honeypot nodes in the hashtag-based
category. For the trending-based category, each attribute in [9]
identiﬁes its top 10 topics and each of which determines 10
user accounts to serve as the pseudo-honeypot nodes. Hence,
there are 100 pseudo-honeypot nodes each with the trending
up, trending down, and popular topics. For the non-trending
topic, we randomly select 100 accounts that do not post tweets
with any topic in [9]. Hence, there are 400 pseudo-honeypot
nodes totally under the trending-based category.
Overall, we have created a pseudo-honeypot network with
2400 pseudo-honeypot nodes. The time to create such a
pseudo-honeypot network is less than 1 min, substantially
shorter than the traditional honeypot-based solution. Notably,
the nodes in a pseudo-honeypot are not static and are migrated
to another group of accounts after a speciﬁc time duration. The
new group of accounts is selected with the same criteria. In
our implementation, we set the time duration of our pseudo-
honeypot network on a group of accounts to be 1 hour.
The implementation of our system is written in Python
with the Tweepy library. We rely on a streaming API in
TABLE III
THE LABELED SPAMS, SPAMMERS AND THEIR PERCENTAGES IN THE
GROUND TRUTH DATA BY EACH METHOD. THE TOTAL NUMBER OF
TWEETS: 161,633. THE TOTAL NUMBER OF USERS: 73,487.
Categories
Suspended
Clustering
Rule Based
Human
Labeling
# of
spams
10,858
4121
3221
% of
tweets
6.72
2.55
1.99
# of
spammers
3697
1281
862
% of
users
5.03
1.74
1.17
1096
0.68
256
0.35
Tweepy to retrieve tweets and ﬁlter Twitter user accounts. The
streaming API used in the pseudo-honeypot implementation
enables real-time tweet monitoring. An account selected as a
pseudo-honeypot node is denoted by a ﬁlter, represented in
the form of: the mention notation ‘@’ followed with the user
account name in Streaming API (i.e., @user account name).
For example, if the account of M ykhaylo bowning is taken
as a pseudo-honeypot, it is denoted by @M ykhaylo bowning
in the Streaming API, signifying that all
tweets crossing
M ykhaylo bowning are acquired.
B. Experiments
We conduct extensive experiments to evaluate the proposed
pseudo-honeypot system by running it for a total of 700 hours.
The pseudo-honeypot nodes are switched to different user
accounts once in an hour. In the 700-hour experiment, we
collected a total of 5, 618, 476 mention behavioral tweets, with
a total of 2, 785, 815 unique accounts involved. The collected
tweets are analyzed by a computer with one Intel Core i5-
6600K CPU (quad-core) and 32 GB RAM.
C. Ground Truth Labeling and Model Selection
To obtain the ground truth of training dataset, we create a
100-node pseudo-honeypot network with attributes randomly
selected from Table I and run it for 300 hours (from March 10
to March 25, 2018) to gather tweets. We use the approaches
(i.e., suspended account, cluster-based, and rule-based meth-
ods) mentioned in Section IV-B to roughly label this dataset
on September 1, 2018. It then takes two weeks to manually
check the roughly labeled dataset for reﬁnement to obtain a
reliable dataset for training use. The spams, spammers, and
their percentages that are ﬁnally reﬁned by different methods
441
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:55:53 UTC from IEEE Xplore.  Restrictions apply. 
THE ACCURACY, PRECISION, RECALL, AND FALSE POSITIVE RATE OF
MACHINE LEARNING CLASSIFIERS ON GROUND TRUTH DATA.
TABLE IV
THE TOTAL NUMBER OF COLLECTED TWEETS AND CAPTURED SPAMS AND
SPAMMERS UNDER THE TOP 10 ATTRIBUTES.
TABLE V
Method
DT
kNN
SVM
EGB
RF
Accuracy
0.912
0.955
0.877
0.965
0.962
Precision
0.801
0.813
0.912
0.952
0.974
Recall
0.788
0.869
0.762
0.811
0.744
False Positive
0.249
0.193
0.026
0.033
0.002
Fig. 2. The fractions of spammers respects to the number spam messages.
are listed in Table III. In the end, we have labeled a total
of 6, 096 spammers and 19, 296 spams, which involve 8.30%
of the total user accounts and 11.94% of the total tweets,
respectively, as the ground truth dataset.
To determine the best suitable machine learning classi-
ﬁer for use in our pseudo-honeypot detector, we examine
various algorithms, including Decision Tree (DT), k-Nearest
Neighbors (kNN), Support Vector Machine (SVM), Extreme
Gradient Boosting (EGB), and Random Forest (RF). The 10-
fold cross-validation is used to show their accuracy, precision,
recall, and false positive levels, with the results shown in
Table IV. Results show that DT, kNN, SVM, EGB, and RF
achieve the precision levels of 0.801, 0.813, 0.877, 0.952,
and 0.974, respectively. The false positive rates are 0.249,
0.193, 0.026, 0.033, and 0.002, respectively. From these 10-
fold cross-validation results, we conclude that RF outperforms
other classiﬁers. Hence, we equip RF as the classiﬁer in our
pseudo-honeypot detector for the following experiments. In
our experiments, RF is conﬁgured with 70 trees as estimators
while each tree has a maximum depth of 700.
D. Effectiveness of Pseudo-honeypot Attributes
We use the pseudo-honeypot detector to perform classi-
ﬁcation on all 700-hour collected tweets. There are a total
of 1, 208, 375 tweets that are identiﬁed as spams and all
remaining are classiﬁed as non-spams. The 1, 208, 375 spams
are associated with 50, 966 unique accounts, so we have
classiﬁed a total of 50, 966 spammers. Table V shows the
top 10 attributes that capture the most number of spammers.
Figure 2 shows the fraction of spammers respecting to the
number of spam messages. From this ﬁgure, we can see
70.26% of spammers post only one spam message while less
than 0.03% of spammers post more than 10 spam messages.
Index
1
2
3
4
5
6
7
8
9
10
Attributes
Average of lists
Lists count
Friends&followers
Followers count
Favorites count
Trending up
Friends count
Hashtag: Social
Hashtag: General
Popular tweets
Tweets
1025330
489332
383111
296273
326865
385977
220175
219908
145934
305773
Spams
112555
71999
66466
69648
90641
140877
33879
20701