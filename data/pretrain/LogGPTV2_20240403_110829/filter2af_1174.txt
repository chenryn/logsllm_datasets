# UIUCTF2021 Tablet（iPadOS Forensics）

## 译文声明
本文为翻译文章，仅供参考。具体内容和含义以原文为准。

## Tablet1

> Red最近的行为非常可疑……所以我备份了他们的平板电脑，看看他们是否隐藏了什么！  
> 看来Red一直在将敏感数据从Mira HQ传输到自己的私人服务器。我们需要访问该服务器并控制泄漏。

### 私钥
使用以下命令搜索包含`ssh`的文件：
```bash
grep -r "ssh" ./
```
找到`webssh.db`后，使用DB Browser打开数据库文件，并导出私钥为`ssl.txt`。

初始以为还需要密码，但实际上`********`就是密码。使用以下命令解密OpenSSL私钥：
```bash
ssh-keygen -p -N "" -m pem -f ssh.txt
```
得到RSA密钥后，可以连接服务器：
```bash
ssh -p 42069 -i id_rsa red.cha1.uiuc.tf
```
这里我使用Xshell进行连接。

起初以为是通过SSH连接服务器，但这个服务器可能不允许破坏行为，因此尝试SFTP连接。提示我们使用SFTP，修改连接方式后成功连接到服务器。

使用`ls`查看当前目录下的文件和权限，然后使用`get`下载`.bash_history`文件。
```bash
mv /srv/exfiltrated "/srv/..."
```
提示我们进入`/srv/...`目录。在该目录下发现一张图片，下载后即为flag：
```
uiuctf{upload_task_only_takes_9_seconds_0bf79b}
```

## Tablet2

> 等等……有两个冒名顶替者？！Red肯定与另一个冒名顶替者有联系。看看他们正在策划什么。

### Bash History
在`/var/root/`目录下找到`.bash_history`文件，内容如下：
```bash
ls
exit
tar --version
exit
find ./ -iname *hammerandchisel* -type d 2>/dev/null
cd 0CE5D539-F72A-4C22-BADF-A02CE5A50D2E/
ls
cd Library/
ls
cd Caches/
ls
cd com.hammerandchisel.discord/
ls
rm -rf *
ls
cd ..
ls
ls
cd com.hammerandchisel.discord/
ls
exit
cd ../mobile/Containers/Data/Application/AA7DB282-D12B-4FB1-8DD2-F5FEF3E3198B/Library/Application\ Support/
rm webssh.db 
exit
```

重点关注以下命令：
```bash
find ./ -iname *hammerandchisel* -type d 2>/dev/null
cd com.hammerandchisel.discord/
ls
rm -rf *
cd com.hammerandchisel.discord/
ls
cd ../mobile/Containers/Data/Application/AA7DB282-D12B-4FB1-8DD2-F5FEF3E3198B/Library/Application\ Support/
rm webssh.db
```

**Find Command**
通过Google得知这是`Discord`。题目描述中提到的接触可能是通过`Discord`进行的。
```bash
find ./ -iname *hammerandchisel*
```
找到文件`****.plist`，其中看到`BlueAmogus`，猜测为第二个冒名顶替者。

**KTX Files**
在该文件夹中找到了许多KTX文件。为什么在bash历史记录中需要删除它们呢？我们尝试打开这些文件。KTX是一种压缩纹理格式，可以在Windows上使用相应工具转换，或在Mac上直接查看。
```bash
ios_ktx2png.exe *****.ktx
```
[KTX 纹理压缩 | Egret Engine](https://docs.egret.com/engine/docs/2dRender/bitmapTexture/ktx)

从这张图中，我们得到了两个线索：一是加密的笔记，二是密码。

**Cache.db**
继续跟进之前的`bash_history`，找到对应的文件夹并打开`Cache.db`文件。仔细查看信息后，发现了之前图片中被黑色覆盖的密码以及未完全显示的消息。
```
The password is ||su5Syb@k4||su5Syb@k4
White is onto me... they kept calling me out last meeting
I'll deal with them, you just make sure this next sabotage goes to plan
I sent you an encrypted note with all the details
```

现在我们需要找到Blue发送给Red的加密笔记并进行解密。使用以下命令搜索“note”：
```bash
grep -r "note" ./
```
在对应文件夹中找到两个数据库文件。在`Records.db`中发现`recordData`，导出文件后找到`EncryptionInfo`。

**NoteStore.sqlite**
最后，使用以下命令找到存储笔记的数据库：
```bash
sudo find ./ -type f -name NoteStore.sqlite
sudo find ./ -type f -name NoteStore.db
```

在GitHub上找到一个Ruby项目，可以对已知密码的笔记进行解密。
**apple_cloud_note_parser**

安装时可能会遇到OpenSSL的问题：
```bash
log_info "Upgrading and linking OpenSSL ..."
brew install openssl
brew link openssl --force
```
解决报错后，顺利安装`apple_cloud_note_parser`：
```bash
echo "su5Syb@k4" > password.txt
ruby notes_cloud_ripper.rb -f NoteStore.sqlite -w password.txt
```

**Tips**
以下是代码执行流程：
- `generate_key_encrypting_key`
- `aes_key_unwrap`

本文所用文件已分享  
链接: 提取码: alh5