**I'm submitting a ...** (check one with "x")
    [ x ] bug report => search github for a similar issue or PR before submitting
    [ ] feature request
    [ ] support request => Please do not submit support request here, instead see https://github.com/angular/angular/blob/master/CONTRIBUTING.md#question
**Current behavior**  
After upgrading to 4.0, the trigger state name evaluation has changed. For
example, a boolean value `true` doesn't match to a state named "true", which
used to work on `v2.4`. I'm not sure whether the previous or the current
behavior is the planned/desired one, but in any case, my guess would be that
this is a regression issue or an undocumented change happened. Additionally,
truthy and falsy values such as `0` and `1` behave unexpectedly (see repro
examples 3 and 4).
**Expected behavior**  
Both string and truthy/falsy values should behave predictably when used as
state trigger names. Particularly boolean values are often used for state, as
shown on the first rest in the repro below; truthy and falsy values—on the
other hand, perhaps—sit more subjectively in that equation.
**Minimal reproduction of the problem with instructions**  
I've setup a few test cases of scenarios I felt were worth exploring to
exemplify the issue. Strings behave reliably to maintain state, whereas
booleans or otherwise truthy/falsy values behave unreliably.  
http://plnkr.co/edit/12iB5WLvRxl3MkoxOpkk?p=preview
**What is the motivation / use case for changing the behavior?**  
Although ensuring strings to match state is not a difficult thing to achieve,
I think people might expect booleans particularly to match "true" and "false"
state names.
**Please tell us about your environment:**  
OX X 10.11, VScode, Yarn, Webpack Dev Server
  * **Angular version:** `4.0.0`, resolving to `es2015` modules
  * **Browser:** All
  * **Language:** TypeScript 2.2.1
  * **Node (for AoT issues):** `node --version` = `v6.9.5`