whether it is at all possible to correctly guess any con(cid:12)den-
tial data.
Our framework formulates the above knowledge reason-
ing problem accurately. We use term set T to describe the
set of observed messages, term t to represent some con(cid:12)-
dential data, variables set X to correspond to all the guess
made by the attacker, and substitution σ with Dom(σ) = X
to indicate the correct guesses. Because passive eavesdrop-
ping is performed over legitimate protocol sessions, observed
messages must comply with the protocol speci(cid:12)cation and
thus we can assume T to be a ground term set. Likewise,
t is also ground. Then, markup term set ⟨T ∪ X, σ⟩ mod-
els the passive attacker’s knowledge. Finally, the problem
of detecting passive guessing attacks is reduced to deciding
⟨T ∪ X, σ⟩ IE t.
At this point, detection of passive guessing attacks boils
down to deciding guessability. The last missing step is to
give a decision procedure for ⟨T ∪ X, σ⟩ IE t. Unfortunately,
in general, this may be undecidable [1].
Deciding Guessability under standard Dolev-Yao in-
truder model.
Recently, Li and Wang [38] proposed a terminating proce-
dure to determine recognizability under standard Dolev-Yao
intruder model [25]. Here, we adopt this procedure to decide
guessability under Dolev-Yao model.
Although the original procedure (i.e., algorithm Solve)
is intended for deciding strong recognizability (De(cid:12)nition
3.3), it can be easily extended to weak recognizability, as re-
quired in De(cid:12)nition 5.4. At (cid:12)rst, we extend the de(cid:12)nition of
markup term set to a triple ⟨T, η, σ⟩, which includes a second
substitution η that account for partial solution. Then, algo-
rithm returns a new triple ⟨T
′⟩ in solved form. More
formally,
Theorem 7.1. Let ⟨T, σ⟩ be a markup term set, t be a
ground term, and x be a fresh variable. Suppose that T σ ∪
, σ
, η
′
′
{t} does not contain function symbol fst, snd, or dec. If
T σ ⊢Edy t, Solve(⟨T ∪ {x}, ϕ, σ ◦ [t/x]⟩) returns ⟨T
′⟩,
, σ
, η
′
′
and xη
′
=s t, then ⃗T IEdy t.
Please refer to [38] for more details on the algorithm.
7.3 Extension to Active Guessing Attacks
To handle an active attacker, it is important to model
security protocols. As mentioned in Section 7.1, existing
formal methods for protocol modeling fall into two groups:
communication based and computation based.
For simplicity, we adopt a computational view here: we
regard the active attacker as a special passive attacker with
an oracle. More speci(cid:12)cally, we can add equations describing
the oracle to the original equational theory. For instance in
Example 10, we just add Equation 4 to equation theory Edy
′
dy). This method is similar
(and obtain equational theory E
to that of [3], which uses a set of second-order variables to
keep track of the computations. In general, a symbolic trace
[29, 8, 14] that describes the sequences of actions (receive
or send) of a given protocol role brings about n distinct
equations, where n is the number of messages sent by the
role.
′
′
By extending the original equational theory, we get a new
equational theory, say E
, to model the active attacker’s ca-
pabilities3. Therefore, the problem of detecting active guess-
ing attack boils down to deciding guessability under the new
equational theory E
It should be noted that deciding IE′ may be undecidable.
After all, the our approach considers an unbounded number
of sessions of the protocol [46, 11], for which protocol inse-
curity is undecidable [27]. Approximation techniques [20, 6]
are usually employed to handle unbounded veri(cid:12)cation. Due
to space limit, we do not pursue these further here.
.
Active guessing attack is passive guessing attack?.
Thanks to the clear distinction between passive and active
attack, we (cid:12)nd surprisingly that in many cases the enhanced
capabilities of active attacker does not impact guessability
at all; that is to say, active attacker is no more powerful
than passive attacker in term of guessability.
introduction, if an attacker knows {{NA}KAB ,{f(NA)}KAB
For example, in the protocol given at the beginning of the
}
and makes explicit guess of KAB, then all actively guess-
able terms are actually passively guessable, as the following
proposition shows.
Proposition 7.2. Let ⃗T be a markup term set and t be a
ground term. Suppose that
⃗T = ⟨{{NA}KAB ,{f(NA)}KAB , x}, [KAB/x]⟩
and t does not contain function symbol g, dec, fst, or snd.
Then, ⃗T IE
t if and only if ⃗T IEdy t.
′
dy
8. CONCLUSION
In this paper, we present a general framework of guessing,
which clari(cid:12)es and formalizes the intuitive understanding
of \verifying a guess". Thanks to its following innovative
features
3In fact, the original term algebra T is also extended to T ′
,
which includes several new public function symbols modeling
the oracle computation.
324
• independence of any speci(cid:12)c adversary model,
• support of multiple (explicit) guesses, and
• de(cid:12)nition to measure the hardness of guessing
this framework enables us to detect passive and active guess-
ing attacks, both of which rely critically on the decision
problem (cid:3)E.
Apart from the technical contributions of this paper, oth-
er messages we want to convey are that passive attacks are
as important as active attacks, especially in the study of
guessing attacks; and that both communication and com-
putational views of active attacks may o(cid:11)er new insight in
security protocol analysis.
′
′
{m
and k =Edy k
′}k′ if and only
There are two major limitations of this study. First, the s-
tandard Dolev-Yao model considered in Section 7.2 assumes
\perfect encryption", that is, {m}k =Edy
if m =Edy m
. Such an assumption is un-
realistic for cryptographic primitives with visible algebraic
properties such as exclusive or and homomorphic operator,
see [19] for a survey. Second, our de(cid:12)nition of hardness is too
general to be practically useful and it is non-trivial to deter-
mine minmax( ⃗T I t). Moreover, our analysis in Example 8
and 9 assumes a uniform distribution of the guessing value
and thus there is no better way than brute force guessing.
However, in reality, weak secret (say, n bits) usually has low
entropy, making it easier to guess (< n-bit hard).
Our future work will be aimed at addressing these limita-
tions. In particular, we plan to investigate the problem of
detecting guessability under more general equational theory
and develop automatic tools to detecting guessing attack.
9. REFERENCES
[1] M. Abadi and V. Cortier. Deciding knowledge in
security protocols under equational theories. Theor.
Comput. Sci., 367(1):2{32, 2006.
[2] M. Abadi and C. Fournet. Mobile values, new names,
and secure communication. In POPL ’01, pages
104{115. ACM, 2001.
[3] M. Baudet. Deciding security of protocols against
o(cid:11)-line guessing attacks. In CCS ’05, pages 16{25.
ACM, 2005.
[4] G. Birkho(cid:11). On the structure of abstract algebras.
Mathematical Proceedings of the Cambridge
Philosophical Society, 31(04):433{454, 1935.
[5] B. Blanchet. An e(cid:14)cient cryptographic protocol
veri(cid:12)er based on prolog rules. In CSFW ’01, page 82,
2001.
[6] B. Blanchet. Automatic veri(cid:12)cation of
correspondences for security protocols. J. Comput.
Secur., 17(4):363{434, 2009.
[7] B. Blanchet, M. Abadi, and C. Fournet. Automated
veri(cid:12)cation of selected equivalences for security
protocols. Journal of Logic and Algebraic
Programming, 75(1):3 { 51, 2008.
[8] M. Boreale and M. G. Buscemi. A method for
symbolic analysis of security protocols. Theoretical
Computer Science, 338(1-3):393 { 425, 2005.
[9] M. Burrows, M. Abadi, and R. Needham. A logic of
authentication. ACM Trans. Comput. Syst.,
8(1):18{36, 1990.
why is a security protocol correct? pages 160 {171,
may 1998.
[29] F. J. T. F(cid:19)abrega. Strand spaces: proving security
protocols correct. J. Comput. Secur., 7(2-3):191{230,
1999.
[30] R. Fagin, J. Y. Halpern, Y. Moses, and M. Y. Vardi.
Reasoning About Knowledge, volume 1 of MIT Press
Books. The MIT Press, December 2003.
[31] L. Gong. Optimal authentication protocols resistant to
password guessing attacks. In CSFW ’95, page 24,
1995.
[32] L. Gong, M. Lomas, R. Needham, and J. Saltzer.
Protecting poorly chosen secrets from guessing
attacks. Selected Areas in Communications, IEEE
Journal on, 11(5):648 {656, jun. 1993.
[33] B. Groza and M. Minea. A calculus to detect guessing
attacks. In ISC ’09, pages 59{67. Springer-Verlag,
2009.
[34] S. Halevi and H. Krawczyk. Public-key cryptography
and password protocols. ACM Trans. Inf. Syst. Secur.,
2(3):230{268, 1999.
[35] J. Halpern, Y. Moses, and M. Vardi. Algorithmic
knowledge. In Proc. of 5th conference on Theoretical
Aspects of Reasoning about Knowledge, pages 255{266,
1994.
[36] J. Heather, G. Lowe, and S. Schneider. How to
prevent type (cid:13)aw attacks on security protocols. J.
Comput. Secur., 11(2):217{244, 2003.
[37] R. Landauer. Irreversibility and heat generation in the
computing process. IBM Journal of Research and
Development, 44(1.2):261 {269, jan. 2000.
[38] Z. Li and W. Wang. Deciding recognizability under
dolev-yao intruder model. In ISC ’10, to appear.
[39] Z. Li and W. Wang. Rethinking about type-(cid:13)aw
attacks. In Global Telecommunications Conference,
2010. GLOBECOM 2010. IEEE, to appear.
[40] T. Lomas, L. Gong, J. Saltzer, and R. Needhamn.
Reducing risks from poorly chosen keys. SIGOPS
Oper. Syst. Rev., 23(5):14{18, 1989.
[41] G. Lowe. Breaking and (cid:12)xing the needham-schroeder
public-key protocol using fdr. In TACAs ’96, pages
147{166, 1996.
[42] G. Lowe. Analysing protocols subject to guessing
attacks. J. Comput. Secur., 12(1):83{97, 2004.
[43] C. Meadows. A procedure for verifying security
against type confusion attacks. In CSFW 03, pages
62{72, 2003.
[44] J. Millen and V. Shmatikov. Constraint solving for
bounded-process cryptographic protocol analysis. In
CCS ’01, pages 166{175. ACM, 2001.
[45] S. Schneider. Security properties and csp. In SP ’96,
page 174, 1996.
[46] D. X. Song, S. Berezin, and A. Perrig. Athena: a novel
approach to e(cid:14)cient automatic security protocol
analysis. J. Comput. Secur., 9(1-2):47{74, 2001.
[10] I. Cervesato, N. A. Durgin, P. D. Lincoln, J. C.
Mitchell, and A. Scedrov. A meta-notation for
protocol analysis. In CSFW ’99, page 55, 1999.
[11] Y. Chevalier and L. Vigneron. Automated unbounded
veri(cid:12)cation of security protocols. In CAV ’02, pages
324{337. Springer-Verlag, 2002.
[12] c. Ciob^ac(cid:21)a, S. Delaune, and S. Kremer. Computing
knowledge in security protocols under convergent
equational theories. In CADE-22, pages 355{370.
Springer-Verlag, 2009.
[13] M. Cohen and M. Dam. A complete axiomatization of
knowledge and cryptography. In LICS ’07, pages
77{88, 2007.
[14] H. Comon-Lundh and V. Cortier. Computational
soundness of observational equivalence. In CCS ’08,
pages 109{118. ACM, 2008.
[15] H. Comon-Lundh and V. Shmatikov. Intruder
deductions, constraint solving and insecurity decision
in presence of exclusive or. In LICS ’03, pages
271{280, June 2003.
[16] R. Corin, J. Doumen, and S. Etalle. Analysing
password protocol security against o(cid:11)-line dictionary
attacks. Electron. Notes Theor. Comput. Sci.,
121:47{63, 2005.
[17] R. Corin, S. Malladi, J. Alves-Foss, and S. Etalle.
Guess what? here is a new tool that (cid:12)nds some new
guessing attacks. In R. Gorrieri and R. Lucchi, editors,
IFIP WG 1.7, pages 62{71, 2003.
[18] V. Cortier and S. Delaune. Deciding knowledge in
security protocols for monoidal equational theories. In
LPAR, pages 196{210, 2007.
[19] V. Cortier, S. Delaune, and P. Lafourcade. A survey of
algebraic properties used in cryptographic protocols.
J. Comput. Secur., 14(1):1{43, 2006.
[20] C. J. Cremers. Unbounded veri(cid:12)cation, falsi(cid:12)cation,
and characterization of security protocols by pattern
re(cid:12)nement. In CCS ’08, pages 119{128. ACM, 2008.
[21] S. Delaune. Easy intruder deduction problems with
homomorphisms. Information Processing Letters,
97(6):213 { 218, 2006.
[22] S. Delaune and F. Jacquemard. A theory of dictionary
attacks and its complexity. In CSFW ’04, page 2, 2004.
[23] N. Dershowitz and D. A. Plaisted. Rewriting. In
Handbook of Automated Reasoning, pages 535{610.
MIT Press, 2001.
[24] Y. Ding and P. Horster. Undetectable on-line
password guessing attacks. SIGOPS Oper. Syst. Rev.,
29(4):77{86, 1995.
[25] D. Dolev and A. Yao. On the security of public key
protocols. Information Theory, IEEE Transactions on,
29(2):198{208, Mar 1983.
[26] P. H. Drielsma, S. Modersheim, and L. Vigano. A
formalization of o(cid:11)-line guessing for security protocol
analysis. In Logic for Programming, Arti(cid:12)cial
Intelligence, and Reasoning, volume 3452, pages
363{379. 2005.
[27] N. Durgin, P. Lincoln, J. Mitchell, and A. Scedrov.
Multiset rewriting and the complexity of bounded
security protocols. J. Comput. Secur., 12(2):247{311,
2004.
[28] F. Fabrega, J. Herzog, and J. Guttman. Strand spaces:
325