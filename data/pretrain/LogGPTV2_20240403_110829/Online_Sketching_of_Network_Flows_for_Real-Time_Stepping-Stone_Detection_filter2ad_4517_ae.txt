Max Delay (milliseconds)
Chaff Rate 0%
Chaff Rate 10%
Chaff Rate 25%
Chaff Rate 50%
800
1000
t
e
a
R
n
o
i
t
c
e
e
D
t
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
0
200
Chaff Rate 0%
Chaff Rate 10%
Chaff Rate 25%
Chaff Rate 50%
800
1000
400
600
Max Delay (milliseconds)
400
600
Max Delay (milliseconds)
(b) Time-slot Length = 1000 msec
(b) Binary Sketch Length = 1024 bits
(b) Correlated Flow Duration = 90 sec
Figure 6. Effect of time-slot length, for 60 second
long correlated ﬂows and 512 bit binary sketches.
Setting the time-slot length = 500 msec (Figure
5) performs better than both 300 and 1000 msec.
Figure 7. Effect of sketch length for 60 second
long correlated ﬂows and = 500 msec long
time-slots. It is observed that, the detection rate
increases with the increased sketch length.
Figure 8.
Effect of correlated ﬂow duration
for = 500 msec long time-slots and 512 bit
binary sketches. It is observed that, increasing
ﬂow duration increases the detection rate.
attacker sends attack packets to the monitored intermediate
node over multiple ingress ﬂows and merge them into one
egress ﬂow. To detect such cases, a stepping-stone detection
scheme should compare superpositions of several ingress
ﬂows with superpositions of several egress ﬂows for possible
correlations. Unfortunately, such kind of search will be very
costly since every possible combination of the ﬂows have
to be tested. However, due to the linear transformation em-
ployed by the proposed scheme, the integer-array sketch of
the superposition of a set of ﬂows is equal to the summation
of the sketches of those ﬂows. This linearity property enables
quick and efﬁcient computation of the binary sketch of any
given combination of ﬂows. Hence, one can potentially com-
bine this linearity property with an appropriate optimization
technique, such as dynamic programming, gradient search
etc., to efﬁciently search for a small set of ingress ﬂows
and egress ﬂows which are collectively correlated with each
other. We leave the exploration of this issue as a future work.
VI. RELATED WORK
Stepping-Stone Detection: Staniford-Chen and Heberlein
proposed perhaps the ﬁrst technique for the stepping stone
detection problem in [19]. The basic idea proposed was to
correlate two ﬂows based on payload thumbprints. Zhang
and Paxson proposed a ﬂow correlation algorithm based
on occurrence times of packet bursts and silence moments
called ON/OFF periods in [6]. The assumption is that
correlated ﬂows switch from the OFF state to the ON state
at similar times. Yoda and Etoh proposed a similar timing
based algorithm in [8], where correlation was deﬁned over
sequence number vs. time curves of ﬂows. The idea was
that the curves of correlated ﬂows should be close to each
other. Another timing based algorithm was proposed by He
and Tong in [20], where the authors formulate the stepping
stone detection problem as nonparametric hypothesis testing.
In [21],Wang et. al. use inter-packet delay information to
compute the correlation between two ﬂows.
The techniques explained above are all robust against
packet delays and jitter to some extent. However, when
attackers insert chaff packets into ﬂows,
the correlation
mechanisms used by these schemes start to break down.
In [11], Donoho et. al. argue that attackers have maximum
tolerable delay constraints and the correlation between step-
ping stone ﬂows can be detected regardless of chaff packets
if ﬂows last
long enough. Similarly, under a maximum
tolerable delay constraint, Blum et. al. present conﬁdence
bounds on the stepping stone detection problem in [7].
Their algorithm is based on the difference of the number of
packets between two ﬂows at a given time. This difference
is expected to be low for correlated ﬂows even if there
are a few chaff packets. In [9] Zhang et. al. propose a
packet-timing comparison algorithm with special focus on
random delays and chaff. However, their algorithm compares
481
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:05:53 UTC from IEEE Xplore.  Restrictions apply. 
two ﬂows in linear time in the number of packets. In [22]
Strayer et. al. proposed a State-Space algorithm similar to
the one used to identify wireless receiver/transmitter pairs.
The idea is to maintain a conversation probability matrix
(CPM) which shows the correlation between each ﬂow pair
based on the probability that the observed packet is caused
a previously received packet on another ﬂow. In [10], Wu
et. al. tried to improve the chaff resistance properties of [7].
However, they assume that the chaff is introduced only one
of the ﬂows of a correlated ﬂow pair. A similar timing-based
ﬂow correlation method is presented in [23], where authors
identify Skype related correlated ﬂows. In [24], Coskun
and Memon proposed a technique to efﬁciently identify
relay nodes in real time. However, their technique cannot
identify the actual relaying ﬂows. As a completely different
approach, in [16], [17] and [18] authors propose an active
stepping-stone detection scheme based on watermarking.
The basic idea is to mark the timing information of ingress
ﬂows, and search for the traces of those marks in the egress
ﬂows. A similar watermarking technique is proposed in [25]
to track VoIP calls.
Data Stream Sketching: In general, data sketching tech-
niques can be viewed as linear projections of an input stream
on appropriate basis functions [1]. They are widely used to
answer efﬁcient queries on streaming data such as rangesum,
heavy hitters, quantiles, inner product etc.,[2][26][3].
Robust Multimedia Hashing: The proposed technique
shows a resemblance to robust hashing schemes. They both
represent an input signal by a short array (robust hash),
which is resistant to small perturbations on the input. In
the context of multimedia signal processing, robust hash
functions are often used to identify and authenticate multi-
media contents (audio, video and image) in the presence of
perceptually preserving modiﬁcations such as compression,
minor ﬁltering etc. [27, 28, 12].
VII. CONCLUSION
In this paper, we presented a novel stepping-stone detec-
tion scheme based on an online algorithm, which contin-
uously maintains sketches of network ﬂows’ packet-timing
information from a stream of captured packets at the border
of a network. These sketches are then used to efﬁciently
identify correlated ﬂows, since the correlated ﬂows have sim-
ilar sketches. The proposed scheme computes ﬂow sketches
very efﬁciently by a streaming algorithm, which performs a
few arithmetic operations for each packet. In addition, the
sketches of a pair of correlated ﬂows remain similar, even
if the ﬂows encounter various timing perturbations, thereby
allowing the proposed scheme detect the correlated ﬂows
even under delays, jitter, chaff, etc to some extent. Finally,
using the fact that correlated ﬂows have similar sketches,
the proposed scheme identiﬁes correlated ingress/egress ﬂow
pairs among n ingress and m egress ﬂows in O(n + √nm)
time, as compared to known techniques, which requires
O(nm).
Our experiments verify that the proposed scheme is re-
sistant to chaff and packet delays to some extent. However,
there is still room for improvement. We observed in the ex-
periments that, when we use longer time-slots in order to be
more resistant to packet delays, the sketches of uncorrelated
ﬂows start to exhibit some similarities, thereby negatively
affecting the detection performance. Shorter time-slots, on
the other hand, have limited resistance to packet delays.
To combine the advantages of both sides and potentially
improve the resistance to packet delays, we plan to use
randomly varying time-slot lengths. Meanwhile, we used a
ﬁxed threshold when deciding if two ﬂows are correlated
or not. However, using a different threshold for each pair
of ﬂows, regarding several features, such as ﬂow durations,
number of packets etc, will potentially improve the detection
performance. We leave the exploration of these improve-
ments as future work.
REFERENCES
[1] G. Cormode and S. Muthukrishnan, “An improved
data stream summary: The count-min sketch and its
applications,” J. Algorithms, vol. 55, pp. 29–38, 2004.
[2] M. Charikar, K. Chen, and M. Farach-Colton, “Find-
ing frequent items in data streams,” in ICALP ’02:
Proceedings of the 29th International Colloquium on
Automata, Languages and Programming.
London,
UK: Springer-Verlag, 2002, pp. 693–703.
[3] A. C. Gilbert, Y. Kotidis, S. Muthukrishnan, and M. J.
Strauss, “How to summarize the universe: Dynamic
maintenance of quantiles,” in In VLDB, 2002, pp. 454–
465.
[4] D. Schnackenberg, H. Holliday, R. Smith, K. Djahan-
dari, and D. Sterne, “Cooperative intrusion traceback
and response architecture (citra),” in Proceedings of
the DARPA Information Survivability Conference and
Exposition, 2001.
[5] D. Schnackenberg, K. Djahandari, and D. Steme, “In-
frastructure for intrusion detection and responsen,” in
Proceedings of the DARPA Information Survivability
Conference and Exposition, 2000.
[6] Y. Zhang and V. Paxson, “Detecting stepping stones,”
in Proceedings of the 9th USENIX Security Symposium,
August 2000, pp. 171–184.
[7] A. Blum, D. Song, and S. Venkataraman, “Detection of
interactive stepping stones: Algorithms and conﬁdence
bounds,” in Conference of Recent Advance in Intrusion
Detection (RAID), Sophia Antipolis, French Riviera,
France, September 2004.
[8] K. Yoda and H. Etoh, “Finding a connection chain
for tracing intruders,” in F. Guppens, Y. Deswarte, D.
Gollamann, and M. Waidner, editors, 6th European
Symposisum on Research in Computer Security - ES-
482
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:05:53 UTC from IEEE Xplore.  Restrictions apply. 
[20] T. He and L. Tong, “A signal processing perspective of
stepping-stone detection,” in Proc. of IEEE CISS’06,
Princeton, NJ, 2006.
[21] X. Wang, D. S. Reeves, and S. F. Wu, “Inter-packet
delay based correlation for tracing encrypted connec-
tions through stepping stone,” in Proceedings of the
7th European Symposium on Research in Computer
Securit, (ESORICS, 2002, pp. 244–263.
[22] W. T. Strayer, C. E. Jones, I. Castineyra, J. B. Levin,
and R. R. Hain, “An integrated architecture for attack
attribution,” in BBN Technologies, Tech. Rep. BBN
REPORT-8384, December 2003.
[23] K. Suh, D. Figueiredo, J. Kurose, and D. Towsley,
“Characterizing and detecting skype-relayed trafﬁc,” in
Proc. of Infocom, 2006.
[24] B. Coskun and N. Memon, “Efﬁcient detection of
delay-constrained relay nodes,” in ACSAC’07: 23rd
Annual Computer Security Applications Conference,
Miami Beach, FL, Dec 2007.
[25] X. Wang, S. Chen, and S. Jajodia, “Tracking anony-
mous peer-to-peer voip calls on the internet,” in CCS
’05: Proceedings of
the 12th ACM conference on
Computer and communications security, 2005, pp. 81–
91.
[26] A. C. Gilbert, Y. Kotidis, S. Muthukrishnan, and
M. Strauss, “Surﬁng wavelets on streams: One-pass
summaries for approximate aggregate queries,” in
VLDB ’01: Proceedings of the 27th International Con-
ference on Very Large Data Bases, 2001, pp. 79–88.
[27] R. Venkatesan, S. Koon, M. Jakubowski, and P. Moulin,
image hashing,” in Proc. IEEE Int. Conf.
“Robust
Image Processing, 2000.
[28] J. Fridrich, “Robust bit extraction from images,” in
ICMCS ’99, Florence, Italy, June 1999.
3949.
ORICS 2000 LNCS -1985, Toulouse, France, October
2000.
[9] L. Zhang, A. Persaud, A. Johnson, and Y. Guan,
“Stepping stone attack attribution in non-cooperative
ip networks,” in roceedings of the 25th IEEE Inter-
national Performance Computing and Communications
Conference (IPCCC 2006), April 2006.
[10] H.-C. Wu and S.-H. S. Huang, “Detecting stepping-
stone with chaff perturbations,” in AINAW ’07: Pro-
ceedings of
International Conference on
Advanced Information Networking and Applications
Workshops, 2007, pp. 85–90.
the 21st
[11] D. Donoho, A. G. Flesia, U. Shankar, V. Paxson,
J. Coit, and S. Staniford, “Multiscale stepping-stone
detection: Detecting pairs of jittered interactive streams
by exploiting maximum tolerable delay,” in Fifth Inter-
national Symposium on Recent Advances in Intrusion
Detection, Lecture Notes in Computer Science 2516,
New York, Springer, 2002.
[12] J. Haitsma and T. Kalker, “A highly robust audio
ﬁngerprinting system with an efﬁcient search strategy,”
Journal of New Music Research, vol. 32, no. 2, pp.
211–221, 2003.
[13] X. Fu, B. Graham, R. Bettati, and W. Zhao, “On
effectiveness of link padding for statistical trafﬁc anal-
ysis attacks,” in ICDCS ’03: Proceedings of the 23rd
International Conference on Distributed Computing
Systems, 2003, p. 340.
[14] P. Venkitasubramaniam and L. Tong, “Anonymous net-
working with minimum latency in multihop networks,”
in SP ’08: Proceedings of the 2008 IEEE Symposium
on Security and Privacy (sp 2008), 2008, pp. 18–32.
[15] W. Wang, M. Motani, and V. Srinivasan, “Dependent
link padding algorithms for low latency anonymity
systems,” in CCS ’08: Proceedings of the 15th ACM
conference on Computer and communications security,
2008, pp. 323–332.
[16] X. Wang and D. S. Reeves, “Robust correlation of
encrypted attack trafﬁc through stepping stones by
manipulation of interpacket delays,” in CCS ’03: Pro-
ceedings of the 10th ACM conference on Computer and
communications security, 2003, pp. 20–29.
[17] Y. J. Pyun, Y. H. Park, X. Wang, D. Reeves, and
P. Ning, “Tracing trafﬁc through intermediate hosts that
repacketize ﬂows,” in INFOCOM 2007. 26th IEEE In-
ternational Conference on Computer Communications.
IEEE, 2007, pp. 634–642.
[18] A. Houmansadr, N. Kiyavash, and N. Borisov, “Rain-
bow: A robust and invisible non-blind watermark for
network ﬂows,” in NDSS’09: 16th Annual Network and
Distributed System Security Symposium, 2009.
[19] S. Staniford-Chen and L. Heberlein, “Holding intruders
accountable on the internet,” in Proc. IEEE Symposium
on Security and Privacy, Oakland, CA, May 1995, p.
483
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:05:53 UTC from IEEE Xplore.  Restrictions apply.