title:DEMO: Akatosh: Automated Cyber Incident Verification and Impact
Analysis
author:Jared M. Smith and
Elliot Greenlee and
Aaron E. Ferber
DEMO: Akatosh: Automated Cyber Incident Verification and
Impact Analysis
Jared M. Smith
Oak Ridge National Laboratory
University of Tennessee, Knoxville
PI:EMAIL
Elliot Greenlee
Oak Ridge National Laboratory
University of Tennessee, Knoxville
PI:EMAIL
Aaron Ferber
Oak Ridge National Laboratory
PI:EMAIL
ABSTRACT
Akatosh, a U.S. Department of Homeland Security Transition to
Practice Program (TTP) project developed by Oak Ridge National
Laboratory with industry and academic partnership, enables au-
tomated, real-time forensic analysis of endpoints a(cid:137)er malware-
a(cid:138)acks and other cyber security incidents by automatically main-
taining detailed snapshots of host-level activity on endpoints over
time. It achieves this by integrating intrusion detection systems
(IDS) with forensic tools. (cid:140)e combination allows Akatosh to collect
vast amounts of endpoint data and assists in verifying, tracking,
and analyzing endpoints in real time. (cid:140)is provides operations
personnel and analysts as well as managers and executives with
continuous feedback on the impact of malicious so(cid:137)ware and other
security incidents on endpoints in their network.
CCS CONCEPTS
•Security and privacy →Malware and its mitigation; Intru-
sion detection systems; Operating systems security;
KEYWORDS
Incident Response; Forensic Analysis; Endpoint Security; Breach
Remediation
1 INTRODUCTION
While Intrusion Detection Systems (IDS) can help prevent a(cid:138)acks
on a system, they also incur a higher than desired false positive
rate. When a cyber a(cid:138)ack happens to break through an IDS or
other defensive system, the e(cid:130)ort of performing an analysis of the
a(cid:130)ected systems and the recovery from any potential infections
is costly and time-consuming. Developed at Oak Ridge National
Laboratory (ORNL), Akatosh is a highly con(cid:128)gurable system based
on the integration of the capabilities of one or more IDS(cid:128)s and
automated con(cid:128)guration and system veri(cid:128)cation.
With this integration, it is possible to analyze systems in near
real-time and provide operations and forensic analyst personnel
with continuous feedback on the impact of so(cid:137)ware, malware,
and active users on deployed systems. By providing an interface
between any number of IDSs and the Akatosh client, Akatosh is
able to intelligently (cid:128)snapshot(cid:128) a(cid:130)ected systems based on cues
Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for pro(cid:128)t or commercial advantage and that copies bear this notice and the full citation
on the (cid:128)rst page. Copyrights for third-party components of this work must be honored.
For all other uses, contact the owner/author(s).
CCS’17, October 30–November 3, 2017, Dallas, TX, USA
© 2016 Copyright held by the owner/author(s). ISBN 978-1-4503-4946-8/17/10.
DOI: h(cid:138)p://dx.doi.org/10.1145/3133956.3138854
from the IDS. Before incidents, Akatosh takes regularly scheduled
snapshots to account for states of the system over time. With
these snapshots, it can automatically provide a succinct report
on the Akatosh server by di(cid:130)erentiating these previous known
states and post-infection states based on the timing and metadata
associated with IDS noti(cid:128)cations to the client interface. With the
di(cid:130)erentiated states from any point in the history of the machine,
Akatosh helps point out whether a true infection occurred, and
if so, what was impacted, thus lowering the false positive rate of
modern IDS products. With this data, it is also possible to analyze
trends over time in a(cid:138)acks and come closer to conclusions on why
a system was a(cid:138)acked.
Akatosh is a U.S. Department of Homeland Security (DHS) Tran-
sition to Practice program (TTP) project, and is one of eight tech-
nologies in the DHS TTP 2017 class being developed and led by
industry and academic institutions such as MIT Lincoln Laboratory,
MITRE, Worcester Polytechnic University, and Paci(cid:128)c Northwest
National Laboratory. (cid:140)rough the DHS TTP program, we are work-
ing with industry partners to pilot the this technology, demonstrate
it’s capabilities at industry ”demo days” in major international hubs,
and ultimately license the research technology to partners with the
goal of being integrated into production systems serving real users.
2 BACKGROUND
In practice, forensic analysts and other operations personnel face
two distinct and important problems. In the realm of computer secu-
rity defense mechanisms, IDSs consume information like network
packets, endpoint statistics, and other metrics that the IDS uses to
pick out anomalous behavior, which potentially represent cyber at-
tacks. Unfortunately, IDSs have high false alert rates and the sheer
number of alerts over time can overwhelm security operations per-
sonnel, which makes correctly identifying actual a(cid:138)acks di(cid:129)cult.
Another problem faced by enterprises can be seen in a 2016 study
by IBM and the Ponemon Institute [11], which found that among
383 companies, the cost of incident response and mitigation for a
successful cyber a(cid:138)ack accounted for 4 million USD on average
per incident. over a quarter of the total cost was due to forensic
activities associated with the breach. (cid:140)is cost largely comes from
having to verify endpoint state and conduct forensic analysis a(cid:137)er
alerts from endpoints indicate that they were potentially impacted
by an a(cid:138)ack or related security incident.
3 SYSTEM DESIGN
System Architecture Akatosh starts by reducing the impact of
false positives and the cost of incident response by enabling au-
tomated, real-time forensic analysis of endpoints when prompted
DemonstrationCCS’17, October 30-November 3, 2017, Dallas, TX, USA2463in order to provide insight into machine state di(cid:130)erences. (cid:140)e
majority of these images will re(cid:131)ect daily activity without a mali-
cious presence, but this timeline also captures the critical period
following an IDS alert. Consider the memory image taken before
and just a(cid:137)er such an alert; the apparent di(cid:130)erences shed light
on new (cid:128)les, processes, and a multitude of other system changes
caused by possible malicious activity. In order to analyze the images,
Akatosh integrates with existing memory forensics tools Volatility
and Rekall [6, 8]. (cid:140)ese two frameworks combine individual plugins
for extracting various well-known operating system state data to
provide a comprehensive view of machine memory. An example
of a plugin would be the processes running on the machine, or
the active and recently ended network connections. Akatosh then
performs state di(cid:130)erentiation across each plugin in order to pin-
point di(cid:130)erences across images. By displaying these di(cid:130)erences to
forensic analysts, our system provides detailed context and a frame
of reference which intends to speed up the process of recovery a(cid:137)er
an a(cid:138)ack.
Classi(cid:128)cation of State Di(cid:130)erences Using state di(cid:130)erentiated im-
ages before and a(cid:137)er a period of time, a classi(cid:128)cation can be made
between detecting or not detecting malicious activity. Rather than
examining the images themselves or other behavioral information,
our system analyzes two kinds of state transitions: clean to clean
and clean to infected. As forensic experts investigate alerts using
the Akatosh system, a determination is made between real and
false. (cid:140)is expert knowledge can be captured through classi(cid:128)cation
algorithms. In order to produce a sample data set equivalent to this
real knowledge, we capture machine state while infecting systems
with malware. (cid:140)is process is performed programatically using
Cuckoo Sandbox [3], an open source malware analysis system, to
inject malware from online repositories and ORNL resources into
virtual environments running so(cid:137)ware to approximate human be-
haviors like opening and closing so(cid:137)ware, navigating the internet,
and sending emails [19]. (cid:140)is programmatic collection of machine
images before and a(cid:137)er so(cid:137)ware and malware has run on a system
gives us a working dataset of images with which to feed through
Akatosh.
Using this dataset we can perform feature extraction and a clas-
si(cid:128)cation method survey. Hand-coded feature extraction per plugin
is possible but knowledge and time intensive. (cid:140)is approach allows
for pre-analysis using linear discriminant analysis to determine the
plugins that contribute most to overall classi(cid:128)cation accuracy, guid-
ing initial ordering of plugin results on the Akatosh system [12].
More generally, standard natural language pre-processing tools
like bag of words and n-gram extraction can be co-opted to (cid:128)t this
type of document [20]. Our method survey covers standards in
document classi(cid:128)cation such as naive bayes, expectation maximiza-
tion, support vector machines, and decision trees [1] [18] [15]. (cid:140)e
results of these are combined using classi(cid:128)er fusion to produce
a binary recommendation with a speci(cid:128)c con(cid:128)dence [16]. A(cid:137)er
the model crosses a pre-determined con(cid:128)dence threshold, Akatosh