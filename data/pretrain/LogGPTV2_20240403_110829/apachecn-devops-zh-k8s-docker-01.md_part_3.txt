您可能需要交互式地访问一个容器来解决问题或查看日志文件。连接到正在运行的容器的一种方法是使用`docker attach container name`命令。当您附加到一个正在运行的容器时，您将连接到正在运行的容器进程，因此如果您附加到一个正在运行进程的容器，您不可能只看到任何类型的命令提示符。事实上，在容器向屏幕输出一些数据之前的一段时间里，您可能只会看到一个空白屏幕。
一旦连接到容器上，您必须小心–您可能会意外停止运行过程，进而停止容器。让我们使用一个连接到运行 NGINX 的网络服务器的例子。首先，我们需要使用`docker ps`验证容器是否正在运行:
![Figure 1.9 – docker ps output ](img/Fig_1.9_B15514.jpg)
图 1.9–docker PS 输出
使用`attach`命令，我们执行`docker attach bbadb2bddaab`:
![Figure 1.10 – docker attach output ](img/Fig_1.10_B15514.jpg)
图 1.10–Docker 附件输出
如前面的截图所示，一旦您附加到正在运行的容器进程，似乎什么都没有发生。当您附加到流程时，您将只能与流程交互，并且您将看到的唯一输出是发送到标准输出的数据。在 NGINX 容器的情况下，`attach`命令已经附加到 NGINX 进程。为了展示这一点，我们将从另一个会话中把附件和 curl 留给 web 服务器。一旦我们转到容器端口，您将看到日志输出到连接的控制台:
![Figure 1.11 – STDOUT output from the container ](img/Fig_1.11_B15514.jpg)
图 1.11–容器的 STDOUT 输出
根据容器中运行的内容，附加到正在运行的容器有不同的好处。
我们提到，一旦连接到容器上，您需要小心。那些对 Docker 不熟悉的人可能会附加到 NGINX 映像，并假设服务器上没有发生任何事情，或者附加失败。既然他们认为可能有问题，既然只是坐在那里，他们可能会决定使用标准的 *Ctrl + C* 键盘命令来突破容器。这将把它们发送回 bash 提示符，在那里它们可以运行`docker ps`来查看正在运行的容器:
![Figure 1.12 – docker ps output ](img/Fig_1.12_B15514.jpg)
图 1.12–docker PS 输出
NGINX 容器在哪里？我们没有执行`docker stop`命令，容器一直在运行，直到我们连接到容器。为什么附着后容器会停止？
当一个附件被附加到一个容器时，你就被附加到了正在运行的进程。所有键盘命令的作用方式都是一样的，就像你在一个运行 NGINX 的交互式外壳的物理服务器上一样。这意味着当用户使用 *Ctrl + C* 返回提示时，他们停止了正在运行的 NGINX 进程。如果一个容器的运行过程停止，该容器也将停止，这就是为什么`docker ps`命令没有显示一个正在运行的容器。
与其用 *ctrl-c* 返回提示，用户应该先用 *Ctrl + P* ，再用 *Ctrl + Q* 。
除了`attach`命令，还有一个替代命令:`docker exec` 命令。`exec`命令不同于`attach`命令，因为您提供了在容器上执行的过程。
## Docker 工执行
一个更好的选择是`exec`命令。您可以使用`docker exec`命令在容器中执行一个进程，而不是附加到容器上。您需要提供容器名称和要在映像中执行的进程。当然，这个过程必须包含在运行的映像中——如果您在映像中没有 bash 可执行文件，那么当您试图在容器中执行 bash 时，您将会收到一个错误。
我们将再次使用一个 NGINX 容器作为例子。我们将使用`docker ps`验证 NGINX 正在运行，然后使用容器 ID 或名称，我们执行到容器中。命令语法为`docker exec   `:
![Figure 1.13 – docker exec example ](img/Fig_1.13_B15514.jpg)
图 1.13-Docker exec 示例
我们包括的选项是`-it`，它告诉`exec`在交互式 TTY 会话中运行。这里，我们要执行的流程是 bash。请注意该名称是如何从原始用户和主机名更改的。主机名为`Blade`，容器名为`0a7c916e7411`。你可能也注意到了，当前工作目录从`~`变为`/app`，提示没有以 root 用户身份运行，如`$`提示所示。
您可以像使用标准的 **SSH** 连接一样使用会话；您正在容器中运行 bash。
由于我们是而不是附着在容器上， *ctrl-c* 不会停止任何进程的运行。要退出交互会话，只需输入`exit`，然后输入*进入*，即可退出容器。如果您接着运行`docker ps`，您会注意到容器仍然处于运行状态:
![Figure 1.14 – docker ps output ](img/Fig_1.14_B15514.jpg)
图 1.14–docker PS 输出
接下来，让我们看看我们能从 Docker 日志文件中学到什么。
## Docker 日志
`docker logs`命令允许您使用您使用`docker ps`命令检索的容器名称或容器标识从容器中检索日志。您可以从您的`ps`命令中列出的任何容器中查看日志；它当前是运行还是停止并不重要。
日志文件通常是解决容器无法启动或容器处于退出状态的唯一方法。例如，如果您试图运行一个映像，该映像启动后突然停止，您可以通过查看该容器的日志找到答案。
要查看容器的日志，可以使用`docker logs `命令。
要查看容器标识为`7967c50b260f`的容器的日志，可以使用以下命令:
```
docker logs 7967c50b260f
```
这将把容器中的日志输出到您的屏幕上，这可能非常长而且冗长。由于许多日志可能包含大量信息，您可以通过向`logs`命令提供附加选项来限制输出。下表列出了可用于查看日志的选项:
![](img/B15514_Table_1.1.jpg)
## Docker rm
一旦您命名了一个容器，分配的名称不能用于启动一个不同的容器，除非您使用`docker rm`命令将其移除。如果您有一个名为`nginx-test`的容器运行被停止，并且您试图启动另一个名为`nginx-test`的容器，Docker 守护程序将返回一个错误，指出该名称正在使用中:
![Figure 1.15 – Docker naming conflict error ](img/Fig_1.15_B15514.jpg)
图 1.15–Docker 命名冲突错误
这个容器没有运行，但是守护进程知道容器名称以前使用过，并且它仍然在以前运行的容器列表中。
如果您想要重复使用相同的名称，您需要在启动另一个具有该名称的容器之前移除该容器。这是测试容器映像时的常见场景。您可以启动一个容器来发现应用或映像的问题。您停止容器，修复映像/应用问题，并希望使用相同的名称重新部署。由于该名称以前使用过，并且仍然是 Docker 历史记录的一部分，因此您需要在重用该名称之前删除该映像。
我们还没有讨论卷，但是当移除一个带有卷的容器时，最好在移除命令中添加`-v`选项。将`-v`选项添加到`docker rm`命令将移除所有连接到容器的卷。
# 总结
在本章中，您学习了如何使用 Docker 来解决常见的开发问题，包括可怕的“它在我的机器上工作”问题。我们还介绍了您日常使用的最常用的 Docker CLI 命令。我们通过查看和如何处理容器的持久数据以及定制容器网络来结束这一章。
在下一章中，我们将介绍容器为什么以及如何使用持久数据。我们将解释每个可以附加到容器的数据类型，包括卷、绑定装载和 tmpfs。
# 问题
1.  A single Docker image can be used on any Docker host, regardless of the architecture used.
    A.真实的
    B.错误的
2.  What does Docker use to merge multiple image layers into a single filesystem?
    A.合并文件系统
    B.NTFS 文件系统
    C.EXT4 文件系统
    D.联合文件系统
3.  What is the most commonly used Docker storage driver when using a Kernel that is above version 4.0?
    A.上啊
    B. ZFS
    C.VFS-VFS-VFS-VFS-VFS-VFS-VFS-VFS-VFS-VFS-VFS-VFS-VFS
    D.重叠 2
4.  When you edit a container's filesystem interactively, what layer are the changes written to?
    A.操作系统层
    B.最底层
    C.容器层
    D.短命层
5.  Assuming the image contains the required binaries, what Docker command allows you to gain access to a container's bash prompt?
    A.`docker shell -it  /bin/bash`
    B.`docker run -it  /bin/bash`
    C.`docker exec -it  /bin/bash`
    D.`docker spawn -it  /bin/bash`
6.  When a container is stopped, the Docker daemon will delete all traces of the container.
    A.真实的
    B.错误的
7.  What command will show you a list of all containers, including any stopped containers?
    A.`docker ps -all`
    B.`docker ps -a`
    C.`docker ps -list`
    D.`docker list all`