Pr
(x − 1)m + 1 ≤ i
x − 1 +
(cid:20)(cid:18)
(cid:34) y − x + 5
(cid:32) y − x + 5
(cid:33)
y
6
6
= Pr
≥ Pr
≥
y
≥ 1
6y
(cid:21)
m
(cid:19)
1
3
.
y
27
2 and T = [i, i + (cid:96) − 1] be an interval of length (cid:96) = O(cid:0)n1/2(cid:1). There exists a constant
Lemma A.7. Let i > n
C > 0 so that for 0  0 so that for all
m ≤ Cn1/2, it follows that
(cid:107)
rbpeb
(G, m) ≥ min(Ω(n)cb, Ω(n3/2)cr),
with high probability.
(cid:96) = k = O(cid:0)n1/2(cid:1) intervals in the
Lemma A.6. For any two meta-nodes x, y ∈ Gb with x  0.
(cid:107)
Output: Yes, if rbpeb
(G, m). Quanquan Liu [Liu17] observed that when
cr = 0 the problem is PSPACE − Hard via a straightforward reduction from minimum space black pebbling.
As we observed previously, when cb/cr ∈ O (poly(n)) the decision problem is in NP and has a fundamentally
diﬀerent structure. We show that even when the cost of red moves is signiﬁcant, the problem remains
NP − Hard.
Theorem D.1. For cb ≤ 3ncr, the problem rbpeb
(cid:107)
is NP − Hard.
30
Algorithm 1: An algorithm for sampling depth-robust graphs. [ABH17]
Function DRSample(n ∈ N≥2):
V := [v]
E := {(1, 2)}
for v ∈ [3, n] and i ∈ [2] do
E := E ∪ {(v, GetParent(v, i))}
end
return G := (V, E).
Function GetParent(v,i):
else
if i = 1 then
u := i − 1
g(cid:48)←[1,(cid:98)log2(v)(cid:99) + 1]
g := min(v, 2g(cid:48)
r←[max(g/2, 2), g]
)
end
return v − r
// Populate edges
// Get ith parent
// Get random range size.
// Don’t make edges too long.
// Get random edge length.
Gilbert et al. showed that the minimum space black pebbling problem was PSPACE − Hard by reduc-
tion from the Truly Quantiﬁed Boolean Formula (TQBF) problem. For more details about the Gilbert
et al. [GLT79] reduction, we refer an interested reader to Appendix B. We note that an instance φ of
3 − SAT with n variables is still a TQBF instance (albeit with no ∀ quantiﬁers). Thus, given an instance
φ of 3 − SAT with n variables, we can create the corresponding DAG Gφ, as described in the reduction of
Gilbert et al. [GLT79]. The graph Gφ has the property that it can be pebbled with at most 3n + 3 black
pebbles if and only if φ is satisﬁable.
(cid:107)
We detail a gadget to append to Gφ to create a graph Hφ so that rbpeb
(H) = x1 if φ is a satisﬁable
(cid:107)
assignment, but rbpeb
(Hφ) > x1 if φ is not a satisﬁable assignment. The key goal of the additional gadget
is to ensure that we cannot signiﬁcantly reduce the number of red moves (computation costs) by including
a few blue move.
Since an instance φ of 3 − SAT with n variables is still a TQBF instance (albeit with no ∀ quantiﬁers), we
can create the corresponding DAG Gφ, as described in the reduction of Gilbert et al. [GLT79]. For DAG Gφ
with t vertices, there exist unique pyramid gadgets with 3n + 3, 3n + 2, 3n + 1, . . . , 1 vertices in the bottom
layer. Let ∆i be the pyramid gadget with φ vertices in the bottom layer. Additionally, let αi be the vertex
above the apex of pyramid ∆i. Create a directed path P1 with 3n + 3 vertices so that for each 1 ≤ i ≤ 3n + 3,
connect an edge to vertex 3i − 2 of P1 from the top vertex of ∆3n+4−i.
We then connect the ﬁnal vertex of P1 to a directed path P2 with
(cid:18) (3n + 1)(3n)
(cid:19)
(cid:18) (3n − 2)(3n − 3)
(cid:19)
+ 1
+
2
2
+ 1
+ . . . +
(21 + 1) + (6 + 1) =
3
2
n(n + 1)2 + n
2