# 安全测试案例与技术解析

## 逻辑漏洞挖掘
### 相关案例
- [某搞笑管理系统逻辑漏洞的挖掘](https://www.t00ls.net/thread-55395-1-2.html)

### 最大数限制突破
在某些商品购买场景中，服务器仅通过前端 JavaScript 脚本限制用户可购买的数量，而未在后端进行验证。攻击者可以通过抓包工具修改请求中的商品数量，使其超过设定的最大值，从而绕过限制。

### 本地 JS 参数修改
部分应用使用 JavaScript 处理客户端提交的数据。攻击者可通过篡改 JavaScript 代码来测试是否能够影响业务流程。

---

## 接口利用
### 相关文章
- [安全建设-攻防思路与实践（一）](https://mp.weixin.qq.com/s/mnHGLZ_e3tWkxCL-DPAAvQ)

### 相关案例
- [$36k Google App Engine RCE](https://www.ezequiel.tech/p/36k-google-app-engine-rce.html)

### 学习资源
- [inonshk/31-days-of-API-Security-Tips](https://github.com/inonshk/31-days-of-API-Security-Tips)
- [31 Days of API Security](https://docs.google.com/spreadsheets/d/1jn3JnWzQFZW41gKo5Fhxwf2ke2w-pvrpCGhBmKhyIBE/edit#gid=0)

#### BOLA (Broken Object Level Authorization)
这是 OWASP API 安全项目中的一种常见漏洞类型，类似于 IDOR (Insecure Direct Object References)，指的是 API 渗透测试中出现的权限越界问题。
- 参考链接: [OWASP API Security Project](https://owasp.org/www-project-api-security/)

##### 相关文章
- [A Deep Dive On The Most Critical API Vulnerability — BOLA (Broken Object Level Authorization)](https://medium.com/@inonst/a-deep-dive-on-the-most-critical-api-vulnerability-bola-1342224ec3f2)

##### 相关案例
- [How I could have hacked your Uber account](https://appsecure.security/blog/how-i-could-have-hacked-your-uber-account)
- [Content Injection Vulnerability in WordPress](https://blog.sucuri.net/2017/02/content-injection-vulnerability-wordpress-rest-api.html)
- [How spending our Saturday hacking earned us 20k](https://web.archive.org/web/20190614232925/https://medium.com/intigriti/how-spending-our-saturday-hacking-earned-us-20k-60990c4678d4)

##### 测试技巧
- Fuzz 接口路径和名称
    - 示例: https://github.com/ffffffff0x/AboutSecurity/tree/master/Dic/Web/api_param
- 大小写替换
    - `userinfo/view` -> `userINFO/VIew`
- 测试不同版本的 API
    - `/v1/userinfo/view` vs. `/v2/userinfo/view`
- 添加文件扩展名
    - `userinfo/view.json`, `userinfo/view.action`
- 内容注入
    - `userinfo/view?id=*`, `userinfo/view?id=ABC!@#`
- 添加额外参数
    - `userinfo/view` -> `userinfo/view?id=xxx`
- 使用数组和 JSON 对象
    - `{"id":xxx}`, `{"id":[xxx]}`, `{"id":{"id":[xxx]}}`
- 修改请求内容类型
    - `Content-type: application/xml` 或 `application/json`
- 尝试执行 JSON 和 HTTP 参数污染
    ```bash
    POST api / get_profile
    {"user_id":"", "user_id":""}
    {"id":2, "id":1}
    ```
- 测试跨平台 API 点
- 使用不同的 HTTP 方法
- DOS 攻击
    - 设置极限参数值，如 `limit=999999999`
- 测试 SOAP 支持
    - 更改内容类型为 `application/xml` 并发送 XML 请求

---

## 数据篡改
### 商品编号更改
积分兑换系统中，如果仅依赖前端验证，攻击者可以修改商品编号以用较少积分换取更高价值的商品。
- 案例:
    - [联想某积分商城支付漏洞再绕过](https://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2013-041617)

### 金额数据篡改
通过拦截并修改支付请求中的金额字段，攻击者可能以任意价格完成交易。
- 案例:
    - [12308订单支付时的总价未验证漏洞(支付逻辑漏洞)](https://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2015-0117083)
    - [UCloud 另一处严重支付逻辑错误 导致可刷余额](https://wy.2k8.org/bug_detail.php?wybug_id=wooyun-2014-048591l)
    - [destoon无限制增加帐号资金](https://woo.zone.ci/bug_detail.php?wybug_id=wooyun-2014-050481)
    - [大疆某处支付逻辑漏洞可1元买无人机](https://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2016-0194751)
    - [挖掘网站支付漏洞中突然想到的一个骚思路](https://www.t00ls.net/thread-53256-1-2.html)
    - [当我尝试半价预定特斯拉汽车](https://mp.weixin.qq.com/s/iolYdCb9GX44HJD4inkuQA)

### 商品数量篡改
修改购物车或订单中的商品数量可能导致异常行为。
- 案例:
    - [百脑汇商城支付漏洞](http://woo.zone.ci/bug_detail.php?wybug_id=wooyun-2012-07997)

---

## 重放攻击
在涉及验证码、邮件确认等环节，通过重复调用相同请求来生成无效或恶意数据。
- 相关文章:
    - [刷点赞、刷关注、刷收藏漏洞](https://blog.m1kh.com/index.php/archives/539/)
    - [邮箱炸弹及绕过](https://blog.m1kh.com/index.php/archives/324/)
    - [SRC另类思路分享：不受限制的资源调用](https://mp.weixin.qq.com/s/wwkAaRauMfIKVERd0-ZCfQ)

### 恶意注册
注册流程缺乏严格校验时，攻击者可以通过修改请求直接创建账户。
### 短信炸弹
许多平台仅在前端限制短信发送频率，导致后台存在被滥用的风险。
- 案例:
    - [一亩田交易网逻辑漏洞(木桶原理)](http://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2015-094545)
    - [短信轰炸之空格或 \n 绕过](https://cloud.tencent.com/developer/article/1541148)
    - [一次有趣的短信轰炸限制绕过](https://web.archive.org/web/20210811054855/https://blog.m1kh.com/index.php/archives/229/)

### 内容编辑
修改获取验证码时的数据包内容，以发送定制信息。
- 案例:
    - [Lack of URL normalization renders Blocked-Previews feature ineffectual](https://hackerone.com/reports/1102764)

---

## DoS 攻击
### 相关文章
- [Web层面上的那些拒绝服务攻击(DoS)](https://www.sec-in.com/article/445)

#### 资源生成大小可控
当请求参数允许控制图片尺寸时，攻击者可以设置极大值来消耗服务器资源。
- 相关文章:
    - [验证码大小可控导致的拒绝服务攻击漏洞](https://zhuanlan.zhihu.com/p/41800341)

#### Zip 炸弹
上传经过特殊构造的 ZIP 文件以触发自动解压机制，从而耗尽服务器资源。
- 相关文章:
    - [ZBLG:非递归zip炸弹，比例为28000000:1](https://bbs.pediy.com/thread-252487.htm)

#### XML DoS
利用 XXE (XML External Entity) 漏洞解析大型远程文档，造成服务器负载过高。
- 关键概念:
    - Denial-of-Service
    - External Entity
    - Internal Entity

#### ReDOS (Regular Expression Denial of Service)
不严谨的正则表达式可能导致服务器因处理复杂输入而崩溃。
- 正则知识:
    - [regex](../../../Develop/正则/regex.md)
- 相关文章:
    - [Regular expression Denial of Service - ReDoS](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS)
    - [ReDOS初探](http://www.lmxspace.com/2019/02/16/ReDOS%E5%88%9D%E6%8E%A2/)
    - [深度分析PCRE回溯次数限制](http://www.lmxspace.com/2019/02/16/ReDOS%E5%88%9D%E6%8E%A2/)
    - [ReDoS-Attacks](https://www.checkmarx.com/wp-content/uploads/2015/03/ReDoS-Attacks.pdf)

#### API 参数可控
当查询或插入请求参数可被操纵时，除了潜在的数据泄露风险外，还存在通过大量请求占用服务器资源的可能性。
- 案例:
    - [sony infinite loop vulnerability leads to DOS](https://dxploiter.blogspot.com/2017/07/sony-infinite-loop-vulnerability-leads.html)
    - [A Infinite Loop Story.. Note: i have already covered this…](https://medium.com/@D0rkerDevil/a-infinite-loop-story-f2bc05771a88)

希望这些优化后的描述能帮助您更清晰地理解各种安全测试方法及其应用场景。