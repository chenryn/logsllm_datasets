generality, we assume that m∗||r∗ was queried to H. If the
query is a type II query, S aborts. Otherwise, H(m∗||r∗)
must have been a type I query. Let this query be the j∗-
th query. Then we must have that σ∗ = (0||w∗||r(cid:48)||γ∗)d =
(y·(xj∗ )e)d = yd·xj∗ , and S can compute yd = σ∗/xj∗ which
is the solution to the given RSA problem. This completes
the description of S.
It remains to estimate the success probability of S. Let
Forge denote the event that A produces a valid forgery,
let A1 denote the event that S aborts due to k0 yi values
being sampled in a H or a Sign query, all having the most
signiﬁcant bit set to 1 (i.e. b = 1), let A2 denote the event
that S aborts due wi = wj in a H or Sign query for a j < i,
and ﬁnally let A3 denote the event that S aborts due to a
Sign query or the forgery corresponding to a wrong query
type. From the above, it follows that
Adv
RSA
RSAGen,S = Pr[Forge ∧ A1 ∧ A2 ∧ A3]
≥ Pr[Forge|A1 ∧ A2 ∧ A3] · Pr[A3] − Pr[A1] − Pr[A2].
We proceed by showing the following lemmas.
Lemma 15. Pr[Forge|A1∧A2∧A3] ≥ −(qs +qh)·2−k/2+2.
Proof. Note that the view of A in the simulation pro-
vided by S would have been identical to the view of A in
the UF-RR-CMA game had the responses to the H and
G queries (i.e. the hi and gi values) been uniformly dis-
tributed. In this case, A is guaranteed to produce a forgery
with probability . We will now argue that the responses
are statistically close to uniform.
Firstly, note that had the yi values been sampled from
Z
2k−1 , the hi and gi values would have been uniformly dis-
tributed. Secondly, note that in the simulation, the yi val-
ues correspond to uniformly chosen elements of Z∗
N less than
N , y ∈ Z∗
2k−1, as the xi values are sampled from Z∗
N , and
the RSA function is a permutation over Z∗
N . Finally, due to
Lemma 11 and the fact that S use qs+qh samples, A will pro-
duce a forgery with probability at least −(qs +qh)·2−k/2+2.
2
2 + 2−k/2+2)k0 .
Lemma 16. Pr[A1] ≤ (qs + qh)( 1
Proof. Note that the yi elements sampled by S are uni-
formly distributed in Z∗
N . Also note that had the values
been sampled from ZN , the probability that the most sig-
niﬁcant bit is 1 would have been less than 1/2. However,
as the statistical diﬀerence between sampling from ZN and
N is (N − φ(N ))/N ≤ 2k/2+1/2k−1 = 2−k/2+2, we have
Z∗
that S aborts in a single query with probability at most
(1/2 + 2−k/2+2)k0 . As there are qs + qh queries, the lemma
2
follows.
Lemma 17. Pr[A2] ≤ (qs + qh)2(2−k1 + 2−k/2+2).
Proof. Using similar observations as in Lemma 15 above,
we can see that the statistical diﬀerence between sampling
wi from uniform and as done by S, is at most 2−k/2+2.
Hence, the chance that wi collides with any of the previous
values, is at most (qs +qh)(2−k1 +2−k/2+2). Hence, consider-
ing all queries, we have Pr[A2] ≤ (qs + qh)2(2−k1 + 2−k/2+2).
2
Lemma 18. Pr[A3] ≈ (e · qs)−1 for the optimal choice of
p and large values of qs, where e is the base of the natural
logarithm.
Proof. Note that for S not to abort based on the type of
query, all Sign queries has to correspond to type II queries,
and the forgery has to correspond to a type I query. From
the above description, it is easily seen that this will happen
with probability pqs (1 − p). This expression is maximized
for p = 1 − 1/(qs + 1). Inserting this value in the former
expression yields that Pr[A3] ≈ e · qs for large values of qs.
2
Combining the above expression for Adv
RSA
RSAGen,S with the
above lemmas yields the theorem.
2
We will now show that by restricting the function class Φ
and the adversary, a tight reduction can be obtained. Specif-
ically, we will consider a function class Φ which is continu-
ously hard-to-compute, and an adversary that will query a
new related randomness function φ in each signature query.
250We will refer to this type of adversary as a unique random-
ness query respecting adversary. Note that the combination
of these assumptions will imply that the adversary cannot
predict the randomness value using in a signature query,
which allows us to obtain a tight proof, assuming the colli-
sion resistance and continuously hard-to-compute properties
of Φ are suﬃciently strong. However, we stress that these
assumptions are relatively strong, and that, for example, re-
peated randomness attacks are not captured when making
these. Nevertheless, our result shows that tight security is
achieved, even for maliciously biased randomness values, as
long as these are not predictable by the adversary.
Theorem 3. Assume that Φ is collision resistant and con-
tinuously hard-to-compute, and that the RSA problem is hard
with respect to RSAGen. Then PSS is UF-RR-CMA secure
for all unique randomness query respecting adversaries, and
the reduction to the RSA problem with respect to RSAGen is
tight. Speciﬁcally, for all polynomial time and unique ran-
domness query respecting adversaries A against PSS, there
exists algorithms B1,B2 such that
Adv
UF-RR-CMA
PSS,A
RSA
RSAGen,B1 (λ) + (qs + qh) · 2
−k/2+2
(λ) ≤ Adv
+ (qs + qh) · (
1
+ 2
2
+ (qs + qh)2 · (2
−k1 + 2
+ qs · qh · Adv
−k/2+2)k0
−k/2+2)
Φ,B2 (λ) + q2
CHTC
s · CRΦ(λ)
Note that for the reduction to be tight, the continuously
hard-to-compute property and the collision resistance of Φ
needs to be suﬃciently strong, i.e. qs · qh · Adv
s ·
Φ,B2 and q2
CRΦ has to be negligible in the security parameter. Due
to space restriction, the proof of the above theorem is not
included here.
7. CONCLUSION
CHTC
In this paper, we have provided a detailed analysis of the
robustness of the RSA-OAEP encryption scheme and the
RSA-PSS signature scheme, against related randomness at-
tacks. Speciﬁcally, we have shown that under the RSA and
Φ-hiding assumptions, RSA-OAEP encryption remains se-
cure against related randomness attacks for function fami-
lies (Φ, Ψ) where Φ is collision resistant and hard-to-compute
with respect to Ψ. This implies that RSA-OAEP is secure
for a large class of related randomness attacks if the recipi-
ent is honest, and remains secure even if malicious recipients
are additionally considered, as long the randomness used for
the honest recipient cannot be eﬃciently computed from the
randomness used for the malicious recipients. However, we
highlight that, since RSA-OAEP is randomness recovering,
security is not guaranteed if highly correlated randomness
is used for encryption for both malicious and honest recip-
ients. Furthermore, we have shown that under the RSA
assumption, the RSA-PSS signature scheme remains related
randomness secure for any function family Φ, albeit with
a non-tight security reduction, but if Φ is additionally as-
sumed to be continuously hard-to-compute and the attack
is not capable of forcing the use of repeated randomness,
a tight reduction is possible. Our results show that, com-
pared to other widely available and standardized schemes,
RSA-OAEP and RSA-PSS provides better protection when
used in environments where (potentially maliciously caused)
randomness failures might occur.
8. REFERENCES
[1] Abdalla, M., Bellare, M., and Rogaway, P. The
Oracle Diﬃe-Hellman Assumptions and an Analysis of
DHIES. In CT-RSA (2001), vol. 2020 of Lecture Notes
in Computer Science, Springer, pp. 143–158.
[2] Bauer, A., Coron, J., Naccache, D., Tibouchi,
M., and Vergnaud, D. On the broadcast and
validity-checking security of pkcs#1 v1.5 encryption.
In ACNS (2010), pp. 1–18.
[3] Bellare, M., Boldyreva, A., Kurosawa, K., and
Staddon, J. Multirecipient Encryption Schemes:
How to Save on Bandwidth and Computation
Without Sacriﬁcing Security. IEEE Trans.
Information Theory 53, 11 (2007), 3927–3943.
[4] Bellare, M., Boldyreva, A., and O’Neill, A.
Deterministic and Eﬃciently Searchable Encryption.
In CRYPTO (2007), vol. 4622 of Lecture Notes in
Computer Science, Springer, pp. 535–552.
[5] Bellare, M., Boldyreva, A., and Staddon, J.
Randomness Re-use in Multi-recipient Encryption
Schemeas. In Public Key Cryptography - PKC 2003,
6th International Workshop on Theory and Practice in
Public Key Cryptography, Miami, FL, USA, January
6-8, 2003, Proceedings (2003), Y. Desmedt, Ed.,
vol. 2567 of Lecture Notes in Computer Science,
Springer, pp. 85–99.
[6] Bellare, M., Brakerski, Z., Naor, M.,
Ristenpart, T., Segev, G., Shacham, H., and
Yilek, S. Hedged public-key encryption: How to
protect against bad randomness. In ASIACRYPT
(2009), pp. 232–249.
[7] Bellare, M., and Rogaway, P. Random Oracles
are Practical: A Paradigm for Designing Eﬃcient
Protocols. In ACM CCS (1993), ACM, pp. 62–73.
[8] Bellare, M., and Rogaway, P. Optimal
Asymmetric Encryption. In EUROCRYPT (1994),
vol. 950 of Lecture Notes in Computer Science,
Springer, pp. 92–111.
[9] Bellare, M., and Rogaway, P. The Exact Security
of Digital Signatures - How to Sign with RSA and
Rabin. In EUROCRYPT (1996), vol. 1070 of Lecture
Notes in Computer Science, Springer, pp. 399–416.
[10] Bellare, M., and Tackmann, B. Nonce-based
cryptography: Retaining security when randomness
fails. In EUROCRYPT (2016), pp. 729–757.
[11] Bendel, M. Hackers describe PS3 security as epic
fail, gain unrestricted access, 2011.
http://www.exophase.com/20540/hackers-describe-p
s3-security-as-epic-fail-gain-unrestricted-access/.
[12] Bernstein, D. J., Chang, Y.-A., Cheng, C.-M.,
Chou, L.-P., Heninger, N., Lange, T., and van
Someren, N. Factoring RSA keys from certiﬁed
smart cards: Coppersmith in the wild. Cryptology
ePrint Archive, Report 2013/599, 2013.
http://eprint.iacr.org/.
[13] Bitcoin.org. Android security vulnerability, 2013.
http://bitcoin.org/en/alert/2013-08-11-android.
[14] Checkoway, S., Niederhagen, R., Everspaugh,
A., Green, M., Lange, T., Ristenpart, T.,
Bernstein, D. J., Maskiewicz, J., Shacham, H.,
and Fredrikson, M. On the Practical Exploitability
of Dual EC in TLS Implementations. In USENIX
251Security Symposium (2014), USENIX Association,
pp. 319–335.
[15] Coron, J.-S. On the Exact Security of Full Domain
Hash. In CRYPTO (2000), vol. 1880 of Lecture Notes
in Computer Science, Springer, pp. 229–235.
[16] Coron, J.-S. Optimal Security Proofs for PSS and
Other Signature Schemes. In EUROCRYPT (2002),
vol. 2332 of Lecture Notes in Computer Science,
Springer, pp. 272–287.
[17] Cramer, R., and Shoup, V. A Practical Public Key
Cryptosystem Provably Secure Against Adaptive
Chosen Ciphertext Attack. In CRYPTO (1998),
vol. 1462 of Lecture Notes in Computer Science,
Springer, pp. 13–25.
[31] Lenstra, A. K., Hughes, J. P., Augier, M., Bos,
J. W., Kleinjung, T., and Wachter, C. Public
keys. In CRYPTO (2012), pp. 626–642.
[32] Michaelis, K., Meyer, C., and Schwenk, J.
Randomly Failed! The State of Randomness in
Current Java Implementations. In CT-RSA (2013),
pp. 129–144.
[33] National Institute of Standards and
Technology (NIST). FIPS PUB 186-4: Digital
signature standard (DSS), 2013. http://nvlpubs.nist.g
ov/nistpubs/FIPS/NIST.FIPS.186-4.pdf.
[34] Paterson, K. G., Schuldt, J. C. N., and Sibborn,
D. L. Related randomness attacks for public key
encryption. In PKC (2014), pp. 465–482.
[18] Debian. Debian Security Advisory DSA-1571-1:
[35] Pinto, A., Poettering, B., and Schuldt, J. C. N.
Multi-recipient encryption, revisited. In 9th ACM
Symposium on Information, Computer and
Communications Security, ASIA CCS ’14, Kyoto,
Japan - June 03 - 06, 2014 (2014), S. Moriai,
T. Jaeger, and K. Sakurai, Eds., ACM, pp. 229–238.
[36] Ristenpart, T., and Yilek, S. When Good
Randomness Goes Bad: Virtual Machine Reset
Vulnerabilities and Hedging Deployed Cryptography.
In NDSS (2010).
[37] RSA Laboratories. PKCS#1 v2.2: RSA
cryptography standard, 2012.
http://www.emc.com/emc-plus/rsa-labs/standards-ini
tiatives/pkcs-rsa-cryptography-standard.htm.
[38] Schnorr, C.-P. Eﬃcient Identiﬁcation and
Signatures for Smart Cards. In CRYPTO (1989),
vol. 435 of Lecture Notes in Computer Science,
Springer, pp. 239–252.
[39] Shoup, V. A proposal for an ISO standard for public
key encryption. IACR Cryptology ePrint Archive,
Report 2001/112 (2001).
http://eprint.iacr.org/2001/112.
[40] Smith, A. D., and Zhang, Y. On the regularity of
lossy RSA - improved bounds and applications to
padding-based encryption. In TCC, Part I (2015),
pp. 609–628.
[41] Yuen, T. H., Zhang, C., Chow, S. S. M., and Yiu,
S. Related randomness attacks for public key
cryptosystems. In ACM ASIACCS (2015),
pp. 215–223.
OpenSSL – predictable random number generator,
2008. http://www.debian.org/security/2008/dsa-1571.
[19] Dodis, Y., Pointcheval, D., Ruhault, S.,
Vergnaud, D., and Wichs, D. Security analysis of
pseudo-random number generators with input:
/dev/random is not robust. In ACM CCS (2013),
ACM, pp. 647–658.
[20] Dorrendorf, L., Gutterman, Z., and Pinkas, B.
Cryptanalysis of the random number generator of the
Windows operating system. ACM Trans. Inf. Syst.
Secur. 13, 1 (2009).
[21] Fujisaki, E., Okamoto, T., Pointcheval, D., and
Stern, J. RSA-OAEP Is Secure under the RSA
Assumption. In CRYPTO (2001), vol. 2139 of Lecture
Notes in Computer Science, Springer, pp. 260–274.
[22] Fujisaki, E., Okamoto, T., Pointcheval, D., and
Stern, J. RSA-OAEP Is Secure under the RSA
Assumption. J. Cryptology 17, 2 (2004), 81–104.
[23] Gamal, T. E. A Public Key Cryptosystem and a
Signature Scheme Based on Discrete Logarithms. In
CRYPTO (1984), vol. 196 of Lecture Notes in
Computer Science, Springer, pp. 10–18.
[24] Gutterman, Z., and Malkhi, D. Hold Your
Sessions: An Attack on Java Session-Id Generation. In
CT-RSA (2005), pp. 44–57.
[25] Gutterman, Z., Pinkas, B., and Reinman, T.
Analysis of the Linux Random Number Generator. In
IEEE Symposium on Security and Privacy (2006),
pp. 371–385.
[26] Heninger, N., Durumeric, Z., Wustrow, E., and
Halderman, J. A. Mining your Ps and Qs: Detection
of widespread weak keys in network devices. In
USENIX Security Symposium (Aug. 2012).
[27] IEEE. IEEE p1363 – standard speciﬁcations for
public-key cryptography.
http://grouper.ieee.org/groups/1363/.
[28] IEEE. IEEE p1363a – standard speciﬁcations for
public-key cryptography: Additional techniques.
http://grouper.ieee.org/groups/1363/.
[29] ISO/IEC 18033-2. Information technology – security
techniques – encryption algorithms – part 2:
Asymmetric ciphers.
[30] Kamara, S., and Katz, J. How to encrypt with a
malicious random number generator. In FSE (2008),
pp. 303–315.
252