i=1)
B, PKP
A, PKP
A, SKQR
B) = (∅, [[x]]A)
A , PKQR
A )
We will conclude using Theorem 3, our own security proofs
for those steps, as well as the proofs in [23].
The whole protocol computes the function:
i=1, l,
f ({Pi}n
SKP
SKP
i=1,{wh}h,{[[vi]]B}g
A , PKQR
A, PKP
A ,
B, PKP
B , PKQR
B ,
A, SKQR
B, SKQR
, PKF HE
)
B
SKF HE
B
where {Pi}n
i=1 are the polynomials, {wh}h are the thresholds
for each inner node, g is the number of features of the
client’s sample, {[[vi]]B}g
i=1 is the input by the client. fA
returns nothing, while fB returns the plurality-vote class of
the random forest evaluation.
975
A’s view now is:
VA = ({Pi}n
i=1, l,
A , PKP
i=1,{wh}h,{[[vi]]B}g
B, PKQR
A, SKQR
SKP
coins;
{[bh]B}h,{[[[bh, . . . , bh]]]B}h,
{[[yij]]B}
i∈{1,...,n},j∈{1,...,k})
B , PKF HE
B
;
where coins is the random tape for encryptions and {[bh]B}h
the comparison result for each node. We simulate A’s real
view with the following simulator SA:
1) Generate a random bit ˜bh for each inner node in the
for i ∈ {1, . . . , k}, j ∈
2) Generate random bits yij
random forest.
{1, . . . , n}.
3) Generate a random tape (cid:2)coins of the required length.
The length can be determined based mainly on the
polynomials, which encode the number of trees, number
of classes and the number of nodes in the tree.
4) Output
H0 = ({Pi}n
i=1, l,
A , PKP
i=1,{wh}h,{[[vi]]B}g
B, PKQR
A, SKQR
SKP
(cid:2)coins;
{[˜bh]B}h,{[[[˜bh, . . . , ˜bh]]]B}h,
{[[˜yij]]B}
i∈{1,...,n},j∈{1,...,k})
B , PKF HE
B
;
Since (cid:2)coins and coins come from the same distribution, H0
is indistinguishable from:
H1 = ({Pi}n
i=1, l,
A , PKP
i=1,{wh}h,{[[vi]]B}g
B, PKQR
A, SKQR
SKP
coins;
{[˜bh]B}h,{[[[˜bh, . . . , ˜bh]]]B}h,
{[[˜yij]]B}
i∈{1,...,n},j∈{1,...,k})
B , PKF HE
B
;
Moreover, by the semantic security of QR and FHE (we
abstain from the trivial reduction proof here), we can deduce
that H1 is computationally indistinguishable from:
=
H2 = ({Pi}n
i=1, l,
A , PKP
i=1,{wh}h,{[[vi]]B}g
B, PKQR
A, SKQR
SKP
coins;
{[bh]B}h,{[[[bh, . . . , bh]]]B}h,
{[[˜yij]]B}
i∈{1,...,n},j∈{1,...,k})
B , PKF HE
B
;
And by the semantic security of Paillier, we get that H2 is
computationally indistinguishable from:
H3 = ({Pi}n
i=1, l,
A , PKP
i=1,{wh}h,{[[vi]]B}g
B, PKQR
A, SKQR
SKP
coins;
{[bh]B}h,{[[[bh, . . . , bh]]]B}h,
{[[yij]]B}
i∈{1,...,n},j∈{1,...,k})
B , PKF HE
B
;
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:20:45 UTC from IEEE Xplore.  Restrictions apply. 
D outputs 1 if v = arg maxj
j=1 and 0 otherwise. Then,
we construct a reduction R as follows:
1) On input PK, pick uniformly at random x, y, z ← M,
{yj}n
such that x (cid:4)= y (cid:4)= z.
assume x < y < z).
2) Order the chosen values (w.l.o.g., we from here on
3) Generate new keys PKQR
4) Choose challenger messages m0 = x, m1 = z and give
B , SKF HE
B, SKQR
A , SKP
B
.
them to the semantic security challenger.
5) Receive
c
the
query
A , SKP
PK, PKQR
which returns b.
from
the
distinguisher
B , SKF HE
B
B, SKQR
challenger
and
D(∅, 0, 0, 2, 0,
;∅;{[[y]]PK, c}, 2),
6) Return b to the challenger.
Since we simulate both cases perfectly to the distinguisher,
its success probability transfers exactly to our reduction in the
semantic security game. Since Paillier encryption is shown
to be semantically secure under the Decisional Composite
Residuosity Assumption, the distinguisher must have at most
negligible success probability.
Given the correctness of the protocol as well as the com-
putational indistinguishability of both simulators and views,
we can apply Theorem 3. We replace the ideal calls by our
provable secure building blocks. Theorem 3 then gives us the
security of our scheme in the semi-honest model.
Hence, we showed that
VA({Pi}n
i=1, l,
SKP
SKP
i=1,{wh}h,{[[vi]]B}g
A , PKQR
A, PKP
A ,
B, PKP
B , PKQR
B ,
≡cSA({Pi}n
A, SKQR
A, SKQR
B, SKQR
, PKF HE
)
i=1,{wh}h,{[[vi]]B}g
A , PKP
B, PKQR
SKF HE
SKP
B
B
i=1, l,
B , PKF HE
)
B
B’s view is
VB = ({vi}g
n(cid:3)
PKP
coins;
{[[
i=1
i=1, l, c, n, k
A, PKQR
A , SKP
B, SKQR
B , SKF HE
B
;
yij]]A}n
j=1, arg max
j
{ n(cid:3)
i=1
j=1)
yij}n
(cid:2)
{(cid:2)
n
where c is the number inner nodes over all trees, n is the
number of trees, k is the number of classes, [[
i=1 yij]]A is
i=1 yij}
the encrypted vote count per class and arg maxj
is the result of the arg max protocol and hence the output of
B.
We simulate B by the simulator SB as follows:
1) Generate n random Paillier encryptions {[[˜yj]]A}n
j=1.
2) Generate a random value between v ← {1, . . . , n}.
3) Generate a random tape (cid:2)coins of the required length,
n
which can be determined by c, n and k.
4) Output
0 = ({vi}g
(cid:4)
H
i=1, l, c, n, k
A , SKP
A, PKQR
PKP
(cid:2)coins;
{[[˜yj]]A}n
j=1, v)
B, SKQR
B , SKF HE
B
;
distribution with the same length, we can conclude that H
H
Given that (cid:2)coins and coins both are sampled from the same
0 ≡c
(cid:4)
(cid:4)
(cid:4)
1, with H
1 below:
1 = ({vi}g
(cid:4)
H
i=1, l, c, n, k
A, PKQR
A , SKP
PKP
coins;
{[[˜yj]]A}n
j=1, v)
B, SKQR
B , SKF HE
B
;
Next, we show the indistinguishability of H
(cid:4)
1 and VB by
giving a reduction to the semantic security of Paillier. To
this end, we assume that we have a distinguisher D that can
distinguish H
(cid:4) and VB. Speciﬁcally, given
({vi}g
i=1, l, c, n, k
A, PKQR
A , SKP
B, SKQR
B , SKF HE
B
PKP
coins;
{[[yj]]A}n
j=1, v)
;
976
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:20:45 UTC from IEEE Xplore.  Restrictions apply.