,         ,      , Las Vegas , 2012 
Aditya K Sood | Richard J Enbody  
SecNiche Security | Department of Computer Science and Engineering 
Michigan State University 
Botnets Die Hard 
Owned and Operated 
2 
About Us 
 Aditya K Sood 
● PhD Candidate at Michigan State University 
– Working with iSEC Partners 
– Founder, SecNiche Security Labs 
– Worked previously for Armorize, Coseinc and KPMG 
– Active Speaker at Security conferences 
– LinkedIn - http ://www.linkedin.com/in/adityaks   
– Website: http://www.secniche.org | Blog: http://secniche.blogspot.com 
– Twitter: @AdityaKSood  
 Dr. Richard J Enbody 
● Associate Professor, CSE, Michigan State University 
– Since 1987, teaching computer architecture/ computer security / mathematics 
– Co-Author CS1 Python book, The Practice of Computing using Python. 
– Patents Pending – Hardware Buffer Overflow Protection 
3 
Disclaimer 
 This research relates to my own efforts and does not provide the 
view of any of my present and previous employers. 
4 
Agenda 
 Bot Spreading Mechanisms 
– Browser Exploit Packs 
– Drive-by-Download frameworks 
– Spreaders 
– Demonstration 
 POST Exploitation 
– Understanding Ruskill 
– DNS Changer in Action 
– Other System Manipulation Tactics 
– Demonstration 
 Exploiting Browsers/HTTP 
– Man in the Browser 
– Formgrabbing 
– Web Injects 
– Demonstration 
 Conclusion 
5 
Rise of Third Generation Botnets (TGB)  
Zeus  | SpyEye | Andromeda  | Smoke | NGR | Upas | … . .. .. . . ..   
6 
TGB Infections started with Zeus ! 
7 
Bot Spreading Mechanisms 
Widely Deployed  
8 
Browser Exploit Packs 
 Browser Exploit Packs (BEPs) 
─ Overview 
● Automated frameworks containing browser exploits 
● Implements the concept of Drive-by-Download attacks 
●  Exploits are bundled as unique modules 
● Mostly written in PHP + MySQL 
– PHP code is obfuscated with Ion Cube encoder  
● Successfully captures the statistics of infected machine 
● Widely used BEPs are – BlackHole / Nuclear / Phoenix etc. 
─ How is the exploit served? 
● Fingerprinting browser’s environment 
– User-Agent string parameters 
– Plugin detection module – Java / PDF / Flash 
– Custom JavaScripts for extracting information from the infected machine 
9 
Browser Exploit Packs 
 Obfuscated JavaScripts used in BlackHole Infections  
● Hiding the infected domain 
Obfuscated Script 
Deobfuscated Script 
10 
Browser Exploit Packs 
 Plugin Detection Code  
─ Scripts code taken from real world case studies 
PDF ActiveX Detection 
PDF Plugin Detection 
11 
Demonstration 
12 
Drive-by-Download Attacks 
 Drive-by-Download  
● Victim’s browser is forced to visit infected website 
● IFrame redirects browser to the BEP 
● Exploit is served by fingerprinting the browser environment 
● Browser is exploited successfully using JavaScript Heap Spraying 
● BEP silently downloads the malware onto the victim machine 
13 
Drive-by-Download Frameworks  
 Drive-by-Download Frameworks 
─ Java Drive-by Generator 
14 
Demonstration 
15 
Spreaders 
 USB Spreading (Upas Bot - Case Study) 
─ Inside USB Spreader 
– Widely used technique in bot design for infecting USB devices 
─ Win 32 Implementation 
● Bot calls RegisterDeviceNotificationW function 
» It can also be implemented as a windows service 
GUID for Raw USB Device 
16 
 USB Spreading (Upas Bot - Case Study) 
─ Plug and Play (PnP) Devices have unique set of different GUIDs 
– Device interface GUID 
» Required for dbcc_classguid  DEV_BROADCAST_DEVICEINTERFACE 
– Device class GUID 
» Defines wide range of devices 
● Defines WindowProc as follows 
» WM_DEVICECHANGE notification message in DEV_BROADCAST_HDR  
» dbch_devicetype  DBT_DEVTYP_DEVICEINTERFACE 
● Wait for the USB device and triggers device-change event as follows: 
– wParam in WindowProc 
» DBT_DEVICEARRIVAL | DBT_DEVICEREMOVALCOMPLETE 
– Fetches drive letter of the USB devices as follows 
» dbcv_unitmask in _DEV_BROADCAST_VOLUME | Logical drive information 
● Continued ……. 
Spreaders 
17 
Spreaders 
 USB Spreading (Upas Bot - Case Study) 
─ On successful detecting the USB, bot execute function as follows; 
– CopyFileW to copy malicious executable in the USB drive 
– CreateFileW to create autorun.inf file in the USB root directory 
– SetFileAttributesW to apply required files attribute 
Autorun.inf infection 
18 
 USB Spreading (Upas Bot - Case Study) 
─ Infecting USB devices using Malicious .LNK file infection  
Spreaders 
.LNK infection 
19 
Spreaders 
 USB Spreading (Upas Bot - Case Study) 
─ Upas bot in action 
20 
 Upas Bot Network Behavior Detection 
─ Writing signature specific to USB infection 
Spreaders  
21 
POST Exploitation 
Subverting System Integrity 
22 
 What is Ruskill ? 
─ A termed coined in Russia 
● It refers to the group of warriors who demonstrate their skill in the battle 
● Typically used by Diablo game players to demonstrate their strength and power 
─ How does Ruskill relate to bots? 
● Ruskill module is used to demonstrate the capability of bots 
● Removing traces of malware in the system after successful reboot 
Understanding Ruskill 
23 
 Inside Ruskill Module 
─ Found in NGR (Dorkbot)  
─ Remote file downloading and execution 
● Ruskill allows the bot to fetch any executable from third-party resource and 
execute it in the compromised system 
─ Restoring System  
● Ruskill monitors all the changes performed by the malicious executable in the 
system 
● Ruskill restores the registry, files ad network settings to the same state ( before 
the execution of malicious binary) after reboot 
● Deletes the malicious executable after  successful execution in the system 
Understanding Ruskill 
24 
 Inside Ruskill Module 
Understanding Ruskill 
Ruskill Detecting File, DNS 
and Registry modifications 
25 
Demonstration 
26 
Critical Problem - DNS Changer  
27 
 DNS Changer 
─ Exploiting the DNS resolution functionality of the infected machine 
─ What it works for? 
● Blocking security providers websites  (Implementing blacklists) 
– Blocking microsoft.com updates website to restrict the downloading of updates 
– Restricting the opening of anti-virus vendors websites 
● Redirecting the browser to the malicious domain 
– Forcing the infected machine to download updates from malicious domain 
– Triggering chain infection for downloading another set of malware onto the 
infected system 
DNS Changer in Action 
28 
 DNS Changer 
─ How this works? 
● Replacing the DNS server entries in the infected machine with IP addresses of 
the malicious DNS server  
● Adding rogue entries in the hosts configuration file 
● Executing DNS amplification attack by subverting the integrity of LAN 
devices such as routers and gateways 
– It results in DNS hijacking at a large scale in the network  
● Hooking DNS libraries 
– The preferred method is Inline hooking in which detour and trampoline functions 
are created to play with DNS specific DLLs. 
DNS Changer in Action 
29 
 DNS Changer 
─ Inside DNS hooking 
● Hooking DNS API 
– Hooking DNSQuery (*) function calls in dnsapi.lib/dnsapi.dll 
– Implemented by creating a blacklist  
– Bot hijacks the DNS resolution flow by filtering all the incoming DNS requests 
● Hooking DNS Cache Resolver  Service 
– Cache resolver service is used for DNS caching 
– Bot hooks sendto function in ws2_32.dll  to verify the origin of DNS query to 
validate if sendto function is called by dnsrsslvr.dll 
DNS Changer in Action 
30 
 DNS Changer 
─ Implementation in NGR bot  
DNS Changer in Action 
DNS Blocking  
DNS Redirection  
31 
Demonstration 
32 
 Certificate Deletion 
─ Removing all instances of private certificates from the infected machine 
Certificate Deletion 
ICE IX bot - certificate 
deletion module 
33 
 Cryptovirology 
─ Exploiting the Built-in Windows Crypto APIs 
─ Cryptovirology allows malware authors to build robust malware 
─ How Cryptovirology is used in designing bots? 
● Generating random filenames for bots 
● Creating registry entries with random keys 
● Highly used for generating random DNS server entries 
– All DNS entries maps to the same IP address 
● Of course, encrypted communication between infected machine and C&C 
server 
● Verifying the integrity of malicious files downloaded in the system 
– Scrutinizing the bots 
Cryptovirology in Action  
34 
 Cryptovirology 
─ An instance from ICE IX bot – Windows Crypto API misuse 
Cryptovirology in Action  
35 
Exploiting Browsers 
Data Exfiltration Over HTTP 
36 
Downgrading Browser Security 
 Removing Protections 
─ Nullifying browser client side security to perform stealthy operations 
─ Internet Explorer 
● Tampering zone values in the registry 
– \Software\Microsoft\Windows\CurrentVersion\Internet Settings\Zones 
─ Firefox 
● Manipulating entries in user.js file 
– user_pref("security.warn_submit_insecure",false);  
» Browser does not raise an alert box when information in sent over HTTP while 
submitting forms. 
– user_pref("security.warn_viewing_mixed",false);  
» Remove the warning of supporting mixed content over SSL. 
OLD School trick but works very effectively. Several other techniques 
of subverting the browser security also exists.  
37 
Man-in-the-Browser (MitB) 
 Inside MitB 
─ MitB typically refers to a userland rootkit that exploits the browser 
integrity   
38 
What Lies Beneath?  
Note: The Pop up is triggered in user’s 
active session. So what it is actually? 
No doubt it is a Popup, but the 
technique is termed as Web Injects not 
phishing or something like that.  
39 
Web Injects 
 Web Injects 
─ Based on the concept of hooking specific functions in the browser DLLs 
─ On the fly infection tactic 
─ Execution flow 
● Bot injects malicious content in the incoming HTTP responses 
● Injections are based on the static file named as webinjects.txt 
● Rules are statically defined by the botmaster  
● Bot fetches rules from the webinjects.txt file and injects in the live webpages 
─ Information stealing in a forceful manner 
● Exploits user ignorance  
40 
Web Injects 
 What is meant by GPH flags?  
─ Exploitation and infection metrics 
● G - injection will be made only for the resources that are requested by the GET  
● P - injection will be made only for the resources that are requested by the 
POST 
● L - is a flag for grabbing content between the tags data_before and data_after 
inclusive 
● H – similar as L except the ripped content is not included and the contents of 
tags data_before and data_after 
41 
Web Injects – Real Time Cases (1) 
Forceful Cookie Injection in 
Citibank’s website to 
manipulate the user’s session  
42 
Web Injects – Real Time Cases (2) 
Injecting HTML content in Bank of 
America’s webpages to steal the 
ATM number and the Pass code.  
Injecting HTML content in Wells 
Fargo bank to steal user’s ATM 
code. 
43 
Form Grabbing 
 Form Grabbing  
─ It is an advanced technique of capturing information present in forms  
44 
 Why Form Grabbing ? 
─ Keylogging produces plethora of data 
─ Form grabbing – extracting data from the GET/POST requests 
─ Based on the concept of hooking and DLL injection 
─ No real protection against malware 
Form Grabbing 
45 
Form Grabbing 
 Harvested Data  
Harvested data from POST 
requests.  Kaspersky’s anti virus 
license key entered by the user 
46 
Demonstration 
47 
This Data is Not Yours ! 
All Browsers ! 
48 
Conclusion 
 Botnets have become more robust and sophisticated 
 Significant increase in exploitation of browsers 
 HTTP has been used for data exfiltration 
 Botnets die hard 
49 
Questions 
50 
Thanks 
 DEF Con crew 
─ http://www.defcon.org  
 SecNiche Security Labs 
─ http://www.secniche.org 
─ http://secniche.blogspot.com