applying the eclipse attack [22] to Ethereum. Eclipsing one
node of Bitcoin appeared, however, sufﬁciently difﬁcult: it
requires to restart the node’s protocol in order to control all
the logical neighbors the node will eventually try to connect
to. While a Bitcoin node typically connects to 8 logical
neighbors, an Ethereum node typically connects to 25 nodes,
making the problem even harder. Another option would be
to isolate a subgroup of smaller mining power than another
subgroup, however, it would make the attack only possible if
the recipients of the transactions are located in the subgroup
of smaller mining power. Although possible this would limit
the generality of the attack, because the attacker would be
constrained on the transactions it can override.
Note that the Balance attack inherently violates the per-
sistence of the main branch preﬁx and is enough for the
attacker to double spend. The attacker has simply to identify
the subgroup that contains merchants and create transactions
to buy goods from these merchants. After that,
it can
issue the transactions to this subgroup while propagating its
mined blocks to at least one of the other subgroups. Once
the merchant shipped goods, the attacker stops delaying
messages. Based on the high probability that the tree seen by
the merchant is outweighed by another subtree, the attacker
could reissue another transaction transferring the exact same
coin again.
In this section, we present the Balance attack, a novel form
of attacks that affect proof-of-work blockchains, especially
Ethereum. Its novelty lies in identifying subgroups of miners
of equivalent mining power and delaying messages between
them rather than entering a race to mine blocks faster than
others.
A. Executing a Balance Attack
For the sake of simplicity, let us ﬁx k = 2 and postpone
the general analysis for any k ≥ 2 to the companion
technical report [34]. We consider subgraphs G1 = (cid:2)V1, E1(cid:3)
and G2 = (cid:2)V2, E2(cid:3) of the communication graph G = (cid:2)V, E(cid:3)
so that each subgraph has half of the mining power of
583
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:03:34 UTC from IEEE Xplore.  Restrictions apply. 
by the attacker pi, with 0  Δ] >
1 − 4e
Corollary 4. A blockchain system that selects a main branch
based on the GHOST protocol (Alg. 3) is corruptible.
Proof. By lines 17–18 of Alg. 3, we know that GHOST
counts the mined blocks to compute the weight of a subtree,
and to select one blockchain view and discard the other.
Since by Theorem 3,
the expected number of blocks
mined by the attacker at time τ is greater than the difference
− ρ2
3(1−ρ)2 μc ≥ 1− ε, we
Δ with probability larger than 1− 4e
know that when the timer expires at line 18 of Alg. 5, the
attacker can make the system discard the blockchain view of
either G1 or G2 with probability larger than 1−ε by sending
its blockchain view to the other subgraph, hence making the
blockchain system corruptible.
Table I: Notations of the analysis
V. ANALYSIS OF THE R3 NETWORK
(cid:3)
(cid:3)
For the sake of simplicity, we assume that k = 2
(cid:3)) so that the com-
∀v∈V1 pow(v) =
and
munication is delayed between only two communication
subgraphs of equal mining power. We defer the proofs to
the companion technical report [34].
∀v(cid:2)∈V2 pow(v
As there is no better strategy for solving the crypto-
puzzles than random trials, we consider that subgraphs G1
and G2 mine blocks during delay τ. During that time, each
of G1 and G2 performs a series of n = 1−ρ
k tτ independent
and identically distributed Bernoulli trials, each returning
one in case of success with probability p = 1
d and 0
otherwise. Let the sum of these outcomes for subgraphs G1
and G2 be the random variables X1 and X2, respectively,
each with a binomial distribution and mean:
(1 − ρ)tτ
2d
μc = np =
.
(1)
Similarly, the mean of the number of blocks mined by the
malicious miner during time τ is
μm = ρtτ
d
.
The Balance attack relies on the adversary outnumbering
the difference in blocks mined by each subgraph G1 and G2.
Thus, we ﬁrst lower-bound the probability Pr[μm > Δ] that
the expected number of blocks μm mined by the attacker is
greater than the difference Δ = |X1 − X2| in blocks mined
by the two subgraphs G1 and G2.
Theorem 3. At time τ, the probability Pr[μm > Δ] that
the expected number of blocks μm mined by the attacker
The statistics of the R3 network were gathered through the
eth-netstat applications at the end of June 2016. R3 is a
consortium of more than 50 banks that has tested blockchain
systems and in particular Ethereum in a consortium private
chain context over 2016.6 The network consisted at that time
of |V | = 50 nodes among which only 15 were mining.
The mining power of the system was about 20 MH/s, the
most powerful miner mined at 2.4 MH/s or 12% of the total
mining power while the difﬁculty of the crypto-puzzle was
observed close to 30 MH.
First, let assume that the attacker is the r3 node with
ρ = 12% of the mining power as depicted in Figure 4 and
that it delays communication between subgraphs G1 and G2,
each with mining power 1−ρ
2 t = 8.8 MH/s. The probability p
30×106 so that
of solving the crypto-puzzle per hash tested is
the mean is μc = (1−ρ)tτ
2d = 8.8×106×1180
2×30×106 = 346.13 if we
wait for 19 minutes and 40 seconds, i.e., 1180 seconds. The
attacker creates, in expectation, a block every 30
2.4 = 12.5
12.5 (cid:12) = 94 blocks during the 19 minutes and 40