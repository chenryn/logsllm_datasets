GCBDHI security game.
The security proof remains virtually untouched. The only differ-
ence is now that we do not need a trapdoor test to maintain consis-
tency when simulating the random oracle. Instead we can directly
use the oracle Oz2 to check whether a query k∗ = k of the ad-
versary (as part of the H(cid:48) query ˆk) actually equals the intermediate
value computed by some session in the real security game. Again,
the simulator is only able to compute k = kz2 for all sessions but
using Oz2 (·,·) it can check if Oz2 (k∗, k) is equal to 1. These mod-
iﬁcations affect all proofs except for the proof of enhanced weak
PFS.
THEOREM 4. TOPAS+ (Figure 2) has the same security prop-
erties under the same security assumptions as TOPAS (Figure 1),
except that it relies on the (2, 3)-CBDHI’, (3, 3)-CBDHI’, and
(2, 3)-GCBDHI’ assumptions instead of the (2, 3)-CBDHI, (3, 3)-
CBDHI, and (2, 3)-GCBDHI assumptions.
5. DENIABILITY
Deniable key exchange protocols protects Alice against the un-
wanted disclosure of her participation in a protocol run via Bob.
This can be used to implement a digital variant of “off-the-record”
communication over insecure networks. Intuitively, a key exchange
protocol provides deniability, if Bob cannot convince a judge, Judy,
that Alice once talked to him. To show deniability, it sufﬁces to
show that every transcript and corresponding session key that Bob
presents to Judy can equally have been produced by a public sim-
ulation algorithm that has no access to Alice. More formally, for
every PPT Bob that communicates with the PPT Alice, there exists
a PPT simulator which when given the same inputs (including the
same random coins) as Bob produces transcripts and correspond-
ing session keys which are indistinguishable from those produced
1233by Bob. For a formal treatment of deniability in key exchange pro-
tocols see [13].
In 2-message key exchange protocols where the computation of
the exchanged messages involve the secret keys, it may be impos-
sible to achieve deniability. As an example consider exchanging
signed DH shares where the signature involves the identities of both
parties. Of course, when Bob receives such a signature from Al-
ice and presents it to Judy this immediately proves that Alice once
talked to Bob. Fortunately, TOPAS and TOPAS+ provide a very
strong form of deniability, although the computation of a involves
Alice’s secret key.
THEOREM 5. TOPAS and TOPAS+ meet the strong notion of
deniability of [13].
PROOF. Observe that a = gxskA is uniformly distributed since
x is uniform. Therefore the simulator can simulate Alice’s message
a by just choosing a random group element in G1. Recall that by
deﬁnition the simulator is also given the same random coins as Bob.
Thus and because the simulator also knows Bob’s secret key, it can
compute y, b and the corresponding session key K in the exact
same way as Bob.
6. ACKNOWLEDGEMENTS
I am grateful to Yong Li, who generously allowed me to use his
observations in the impossibility result of Appendix E. I would also
like to thank the anonymous reviewers for their helpful comments.
This work was supported by the DFG-Research Training Group
UbiCrypt (GRK 1817/1).
7. REFERENCES
[1] Michel Abdalla, Mihir Bellare, and Phillip Rogaway. The
oracle Difﬁe-Hellman assumptions and an analysis of
DHIES. In David Naccache, editor, CT-RSA 2001, volume
2020 of LNCS, pages 143–158. Springer, April 2001.
[2] Google Security Team Adam Langley. Protecting data for the
long term with forward secrecy.
http://googleonlinesecurity.blogspot.co.
uk/2011/11/
protecting-data-for-long-term-with.html.
[3] Paulo S. L. M. Barreto and Michael Naehrig.
Pairing-friendly elliptic curves of prime order. In Bart
Preneel and Stafford E. Tavares, editors, Selected Areas in
Cryptography, volume 3897 of Lecture Notes in Computer
Science, pages 319–331. Springer, 2005.
[4] Florian Bergsma, Tibor Jager, and Jörg Schwenk. One-round
key exchange with strong security: An efﬁcient and generic
construction in the standard model. In PKC 2015, LNCS,
pages 477–494. Springer, 2015.
[5] Dan Boneh and Xavier Boyen. Efﬁcient selective
identity-based encryption without random oracles. Journal of
Cryptology, 24(4):659–693, October 2011.
[6] Dan Boneh, Craig Gentry, Ben Lynn, and Hovav Shacham.
Aggregate and veriﬁably encrypted signatures from bilinear
maps. In Eli Biham, editor, EUROCRYPT 2003, volume
2656 of LNCS, pages 416–432. Springer, May 2003.
[7] Dan Boneh, Ben Lynn, and Hovav Shacham. Short
signatures from the Weil pairing. Journal of Cryptology,
17(4):297–319, September 2004.
[8] Xavier Boyen. The uber-assumption family (invited talk). In
Steven D. Galbraith and Kenneth G. Paterson, editors,
PAIRING 2008, volume 5209 of LNCS, pages 39–56.
Springer, September 2008.
[9] Ran Canetti and Hugo Krawczyk. Analysis of key-exchange
protocols and their use for building secure channels. In Birgit
Pﬁtzmann, editor, EUROCRYPT 2001, volume 2045 of
LNCS, pages 453–474. Springer, May 2001.
[10] David Cash, Eike Kiltz, and Victor Shoup. The twin
Difﬁe-Hellman problem and applications. In Nigel P. Smart,
editor, EUROCRYPT 2008, volume 4965 of LNCS, pages
127–145. Springer, April 2008.
[11] Yu Chen, Qiong Huang, and Zongyang Zhang.
Sakai-Ohgishi-Kasahara identity-based non-interactive key
exchange revisited and more. In Willy Susilo and Yi Mu,
editors, ACISP 14, volume 8544 of LNCS, pages 274–289.
Springer, July 2014.
[12] Cas J. F. Cremers and Michele Feltz. Beyond eCK: Perfect
forward secrecy under actor compromise and ephemeral-key
reveal. In Sara Foresti, Moti Yung, and Fabio Martinelli,
editors, ESORICS 2012, volume 7459 of LNCS, pages
734–751. Springer, September 2012.
[13] Mario Di Raimondo, Rosario Gennaro, and Hugo Krawczyk.
Deniable authentication and key exchange. In Ari Juels,
Rebecca N. Wright, and Sabrina De Capitani di Vimercati,
editors, ACM CCS 06, pages 400–409. ACM Press,
October / November 2006.
[14] Whitﬁeld Difﬁe and Martin E. Hellman. New directions in
cryptography. IEEE Transactions on Information Theory,
IT-22(6):644–654, 1976.
[15] Dario Fiore and Rosario Gennaro. Making the
Difﬁe-Hellman protocol identity-based. In Josef Pieprzyk,
editor, CT-RSA 2010, volume 5985 of LNCS, pages 165–178.
Springer, March 2010.
[16] Marc Fischlin and Nils Fleischhacker. Limitations of the
meta-reduction technique: The case of schnorr signatures. In
Thomas Johansson and Phong Q. Nguyen, editors,
EUROCRYPT 2013, volume 7881 of LNCS, pages 444–460.
Springer, May 2013.
[17] Steven D. Galbraith, Kenneth G. Paterson, and Nigel P.
Smart. Pairings for cryptographers. Discrete Applied
Mathematics, 156(16):3113–3121, 2008.
[18] Rosario Gennaro, Hugo Krawczyk, and Tal Rabin.
Okamoto-Tanaka revisited: Fully authenticated
Difﬁe-Hellman with minimal overhead. In Jianying Zhou
and Moti Yung, editors, ACNS 10, volume 6123 of LNCS,
pages 309–328. Springer, June 2010.
[19] Hugo Krawczyk. SKEME: a versatile secure key exchange
mechanism for internet. In James T. Ellis, B. Clifford
Neuman, and David M. Balenson, editors, 1996 Symposium
on Network and Distributed System Security, (S)NDSS ’96,
San Diego, CA, February 22-23, 1996, pages 114–127. IEEE
Computer Society, 1996.
[20] Hugo Krawczyk. HMQV: A high-performance secure
Difﬁe-Hellman protocol. In Victor Shoup, editor,
CRYPTO 2005, volume 3621 of LNCS, pages 546–566.
Springer, August 2005.
[21] Laurie Law, Alfred Menezes, Minghua Qu, Jerome A.
Solinas, and Scott A. Vanstone. An efﬁcient protocol for
authenticated key agreement. Des. Codes Cryptography,
28(2):119–134, 2003.
[22] Eiji Okamoto and Kazue Tanaka. Key distribution system
based on identiﬁcation information. IEEE Journal on
Selected Areas in Communications, 7(4):481–485, 1989.
1234[23] Victor Shoup. On formal models for secure key exchange.
Cryptology ePrint Archive, Report 1999/012, 1999.
http://eprint.iacr.org/.
[24] Transport Layer Security working group of the IETF.
Conﬁrming consensus on removing RSA key transport from
TLS 1.3. http://www.ietf.org/mail-archive/
web/tls/current/msg12362.html.
APPENDIX
A. PKI-BASED PROTOCOL VARIANT
TOPAS and TOPAS+ can easily be turned into PKI-based proto-
cols. Due to space limitation we only sketch this here. The global
parameters are the public key of the KGC together with gz
1 (this
value is not required in our identity-based protocol). The certiﬁca-
tion authority creates a signature key pair and publishes the public
key. User keys are generated as follows. Each user chooses a ran-
dom r ∈ Zp and computes sk = gr
1 )r. The CA
provides a certiﬁcate for each user by signing the user’s public key
together with its identity. The rest of the protocol works exactly
as in the identity-based protocol instead that the public key of the
communication partner is used to derive the session key. For exam-
ple, Alice can compute her message a and the intermediate key k as
a = gx
1 skA for random x ∈ Zp and k = (e(b, gz
1 and pk = (gz
2 )/e(pkB, g2))x.
B. ON THE IMPORTANCE OF FULL PFS
Assume a two-message protocol executed between Alice and
Bob where Alice sends a to Bob and Bob sends b to Alice. Now
assume that after deriving the secret session key from b and her se-
cret key, Alice immediately sends a sensitive message to Bob that is
encrypted as ciphertext c with a key derived from the secret session
key. In particular, this message is produced without Alice knowing
whether Bob actually has computed the same key. Now assume an
adversary who is interested in the contents of the ﬁrst messages of
Alice. Whenever it observes that Alice sends a message a over the
network, it drop Bob’s b, computes its own value b(cid:48), and sends it
to Alice. Next it intercepts Alice’s ciphertext c and records a, b(cid:48), c
in a list. Assume that later on, the adversary learns the secret key
of Bob. Weak perfect forward secrecy does not guarantee the se-
crecy of the message c because the attacker changed b to b(cid:48) but full
perfect forward secrecy does so.
C. THE UBER-ASSUMPTION
The non-interactive (k, l)-CBDHI and (k, l)-GCBDHI assump-
tions, can be viewed as special instantiations of Boyen’s Uber-
assumption (and its extensions) restricted to univariate polynomi-
als. Following Boyen, our assumptions differ from the “classical”
Uber-assumption in two ways. First, we consider computational as-
sumptions (which are however implied by their decisional variants)
and second we use rational exponents. However, in [8] Boyen also
presents several extensions to the classical Uber-assumption that
also cover these classes of assumptions. To apply Boyen’s master
theorem and show security in the generic bilinear group model we
have to show independence of the polynomial 1/z (respectively
(z + w)/z2) over Zp from 1, z, z2, . . . , zk and 1, z, z2, . . . , zl.
This means that there do not exist (k + 1)(l + 1) constants {ai,j}
for i ∈ [0, k] and j ∈ [0; l] such that for all z (cid:54)= 0 we always have
1/z =
ai,jzi+j or (z + w)/z2 =
ai,jzi+j
i=0
j=0
i=0
j=0
k(cid:88)
l(cid:88)
k(cid:88)
l(cid:88)
k(cid:88)
l(cid:88)
k(cid:88)
l(cid:88)
over Zp. This is simple. These two equations are equivalent to
ai,jzi+j+1 − 1 = 0 or
ai,jzi+j+2 − z − w = 0.
i=0
j=0
j=0
i=0
Now for any choice of the ai,j, the polynomials on the left-hand
side have at least degree 1 (respectively 2). The maximal degree is
k+l+1 << p (respectively k+l+2 << p). This means they have
at most k + l + 1 (respectively k + l + 2) roots. Thus the equations
cannot be fulﬁlled for all z (cid:54)= 0. As a consequence we can apply
the master theorem of Boyen to show that our assumptions are se-
cure in the generic bilinear group model. Similarly, we can show
that the CBDH assumption is secure in the generic bilinear group
model. This time, we have to show that there do not exist constants
a0, a1, a2 with xy = a0+a1x+a2y for all x, y ∈ Zp. This is again
very simple, as for any x (cid:54)= a2 ∈ Zp there is only a single y ∈ Zp
fulﬁlling the above equation, namely y = (a0 + a1x)/(x − a2).
Thus we can apply the master theorem and obtain security of this
assumption in the generic bilinear group model. We stress that a
successful adversary against the CBDH assumption can easily be
used to break the DDH assumption in G1: assume we are given
the DDH challenge g1, ga
and we have to decide
whether c = 0. We can now use the CBDH attacker to compute
T = (g1, g2)ab. Next we compute e(h, g2) and check whether the
result equals T . On success, we output that c = 0 otherwise c = 1.
1, h = gab+c
1 , gb
1
D. EXISTING IMPOSSIBILITY RESULT
In [20], Krawczyk presented a simple attack against the full PFS
security of implicitly authenticated protocols. To illustrate it, as-
sume a protocol in which Alice and Bob only exchange ephemeral
Difﬁe-Hellman shares gx (sent by Alice) and gy (sent by Bob). Let
us consider the situation where Alice acts as the initiator. To this
end, she generates the ephemeral key gx and sends it to Bob who
responds with gy. The adversary intercepts this value, and gener-
ates its own share by choosing random y and computing gy. Then
it sends gy to Alice. Alice assumes this value was sent by Bob and
generates the session key K from her secret key, x, and gy. Now,
assume that the adversary learns the secret key skB of Bob after
Alice’s session expired. Since the computation of the session key
(from Bob’s perspective) only depends on gx and the knowledge
of y and skB, the adversary is able to re-compute the session key
K. Therefore it can always distinguish K from a random value.
Observe that this impossibility result holds even in the case the two
oracles have a common KGC that produces their secret keys or if
they share a secret key. Essentially, the problem is that the adver-
sary can always compute an ephemeral public key together with the
corresponding ephemeral secret key that seems to come from Bob.
E. NEW IMPOSSIBILITY RESULT
LEMMA 1. Any two-message protocol which provides full PFS
cannot allow the adversary to reveal ephemeral secret keys.
PROOF. Without loss of generality assume Bob sends his mes-
sage b ﬁrst. Since the protocol provides (full) PFS by deﬁnition,
any message b of Bob must contain an ephemeral public key epk.
For contradiction assume the adversary can for one b reveal the
corresponding ephemeral secret esk. The adversary can now eas-
ily break the security of the full PFS game by replaying b to the
test-session (held by some party). It obtains back Bob’s long-term
secret skB. With esk, skB, and the message output by the test-
session, the adversary can always derive the same session key as
the test-session and thus win in the full PFS game.
1235