### B. Evaluation and Implementation

To develop the FLIS (Free Live Streaming) classifier, we adopted a supervised learning approach. This involved collecting a set of labeled webpages to train the classifier by extracting feature vectors. Once trained, the classifier processes new pages by converting them into feature vectors and then classifying them as either FLIS or non-FLIS pages. Specifically, for each new page, the classifier outputs a score. If this score exceeds a predefined threshold, the page is labeled as a FLIS aggregator page.

The components of the FLIS classifier, including the web crawling and feature extraction, are implemented in Python. We utilized the Random Forest algorithm [19] from Weka [27] to build the classifier. The rationale behind using Random Forest is its speed, robustness to outliers, high accuracy, and ability to handle a large number of input features without overfitting. To support future research, the prototype implementation of the FLIS classifier will be made publicly available.

### Evaluation Datasets

To evaluate the performance of the FLIS classifier, we assembled three distinct datasets, which were carefully examined and labeled:

1. **Balanced Dataset (BD):** This dataset contains an equal number of positive (FLIS aggregator pages) and negative (non-FLIS pages) samples. Non-FLIS pages were collected by randomly crawling links from the Alexa top 1,000 domains and manually inspecting each instance. For aggregator pages, we extracted a subset of webpages from the gathered dataset and manually labeled each page. Overall, this dataset consists of 3,500 aggregator pages and 3,500 non-FLIS pages.

2. **Imbalanced Dataset (ID):** In addition to the balanced dataset, we also evaluated the classifier on an imbalanced dataset to reflect real-world conditions where non-FLIS pages outnumber FLIS aggregator pages. This unequal distribution can bias the classifier towards the majority class (non-FLIS pages). To thoroughly assess the discriminative power of the features and the classification algorithm, we created a dataset with a class imbalance ratio of 10:1. Specifically, the imbalanced dataset contains 15,000 non-FLIS pages and 1,500 FLIS aggregator pages.

3. **Special Testing Dataset (STD):** Both the balanced and imbalanced datasets have significantly different negative training samples compared to positive samples. Therefore, evaluating only these datasets would not fully represent the classifier's ability to distinguish between FLIS webpages and common sports webpages. To address this, we assembled an additional special testing dataset containing 1,000 randomly crawled non-FLIS pages listed under the "Sports" category of the Open Directory Project [3].

### Run-time Performance

In addition to classification results, we measured the run-time performance of the FLIS classifier. Running as a single-threaded application on a 64-bit 2.8 GHz Intel Core i5 CPU, our classifier takes an average of 18.4 seconds to classify a given webpage, with the slowest being 75 seconds. The most time-consuming processes are extracting features from HTML sources and network traces, which are IO-bound and account for the majority of the runtime. Overall, our data gathering process (as detailed in Section III-A) demonstrated that the FLIS classifier scales well in an online setting.

### Classifier Evasion

The FLIS classifier is built on attributes targeting the look and modus operandi of aggregator pages. Therefore, it is challenging for aggregators to evade detection. While adversaries may attempt to evade specific features used in the learning process, this often results in increased operating costs or a loss of viewers. For example, if aggregators stop using text and images related to sports and legitimate broadcast channels, they are likely to attract fewer users and reduce interactions with their malicious ads. Overall, we argue that our FLIS classifier provides robust detection of aggregator pages, which can be used by law enforcement for takedown operations and by users to avoid confusion with legitimate services.

### VI. Related Work

There is a significant body of prior work on the piracy of live broadcasts from a legal perspective, focusing on copyright law, the impact on related organizations, and proposals to improve judicial conduct. Our work differs by mapping the FLIS ecosystem through real-world experiments and empirically quantifying the threats for both users and companies whose copyrights and trademarks are abused by FLIS services.

Other research has focused on analyzing malicious advertisements in the context of online fraud and how certain Internet services have been exploited for monetary gain. Studies targeting deceptive advertisement techniques mainly focus on security implications. Our work, however, focuses on the interactions of users with video overlay ads and the associated threats.

### VII. Conclusion

In this paper, we presented the first empirical study of free live streaming services. We developed an infrastructure to map the FLIS ecosystem, identify parties facilitating anonymous live stream broadcasts, and analyze the deceptive advertising content users are exposed to. We discovered various types of abuse, including malware distribution, malicious browser extensions, substandard overlay advertising, and scams. Given the extent of observed abuse and numerous copyright complaints, we engineered a classifier to detect FLIS pages with high accuracy and low false positives. This classifier can alert users to potential dangers and help analysts find unknown FLIS pages to curb copyright infringements.

### Acknowledgments

We thank Jesse Davis for his insightful input on the evaluation of the FLIS classifier, Alexandros Kapravelos for assistance with Chrome extension analysis, Nicolas Christin for help with the final version of the paper, and the anonymous reviewers for their valuable comments. We also thank Amazon for providing the virtual machines that enabled our large-scale, advertisement-characterizing experiments. For KU Leuven, this research was partially funded by the Research Fund KU Leuven, with financial support from the Prevention of and Fight against Crime Programme of the European Union (B-CCENTRE), and by the EU FP7 project NESSoS. For Stony Brook University, this work was supported by the National Science Foundation (NSF) under grant CNS-1527086.

### References

[1] HTTP Live Streaming. https://goo.gl/crRhm9.
[2] InfoSoc Directive 2001/29. http://goo.gl/SOVjac.
[3] Open Directory Project. https://www.dmoz.org/.
[4] Python-Goose. https://github.com/grangier/python-goose.
[5] Real Time Messaging Protocol. http://goo.gl/d1NO9l.
[6] Real Time Streaming Protocol. https://www.ietf.org/rfc/rfc2326.txt.
[7] Realnetworks Incorporation History. http://goo.gl/IxHQRB.
[8] Siezed Domain. http://atdhe.net/.
[9] Siezed Domain. http://frombar.com/.
[10] VirusTotal. https://www.virustotal.com/.
[11] W3C: Same Origin Policy - Web Security. http://goo.gl/Xps3Ph.
[12] Wizwig taken-down. http://www.wiziwig.tv/ofﬂine.html.
[13] Digital video in-stream ad format guidelines and best practices. 2008. http://www.iab.net/media/ﬁle/IAB-Video-Ad-Format-Standards.pdf.
[14] Sumayah Alrwais, Kan Yuan, et al. Understanding the dark side of domain parking. In USENIX Security, 2014.
[15] Marco Balduzzi, Manuel Egele, Engin Kirda, Davide Balzarotti, and Christopher Kruegel. A solution for the automated detection of clickjacking attacks. In ASIA CCS, 2010.
[16] Barclay Ballard. Premier League knocks out Wiziwig in illegal streaming crackdown. http://goo.gl/ETCjH2.
[17] Paul Barford, Igor Canadi, et al. Adscape: Harvesting and analyzing online display ads. In WWW, 2014.
[18] Eda Baykan, Monika Henzinger, Ludmila Marian, and Ingmar Weber. Purely URL-based topic classification. In WWW, 2009.
[19] Leo Breiman. Random forests. Machine learning, 45(1), 2001.
[20] Nicolas Christin, Sally S Yanagihara, and Keisuke Kamataki. Dissecting one-click frauds. In CCS, 2010.
[21] Vacha Dave, Saikat Guha, and Yin Zhang. Viceroi: Catching click-spam in search ad networks. In CCS, 2013.
[22] Holger Dreger, Anja Feldmann, Michael Mai, Vern Paxson, and Robin Sommer. Dynamic application-layer protocol analysis for network intrusion detection. In USENIX Security, 2006.
[23] Sevtap Duman, Kaan Onarlioglu, Ali Osman Ulusoy, William Robertson, and Engin Kirda. Trueclick: Automatically distinguishing trick banners from genuine download links. In ACSAC, 2014.
[24] Aaron Elstein. Web pirates are stealing from sports broadcasters. http://goo.gl/TVOxRi.
[25] Rgis Gras, Einoshin Suzuki, Fabrice Guillet, and Filippo Spagnolo. Statistical Implicative Analysis. Springer, 2008.
[26] Hamed Haddadi. Fighting online click-fraud using bluff ads. SIGCOMM Computer Communication Review, 40(2), 2010.
[27] Mark Hall, Eibe Frank, Geoffrey Holmes, Bernhard Pfahringer, Peter Reutemann, and Ian H Witten. The WEKA data mining software: an update. ACM SIGKDD explorations newsletter, 11(1), 2009.
[28] Stephanie N Horner. DMCA: Professional sports leagues’ answer to protecting their broadcasting rights against illegal streaming. Marq. Sports L. Rev., 24, 2014.
[29] Luca Invernizzi, Paolo Milani, Stefano Benvenuti, Christopher Kruegel, Marco Cova, and Giovanni Vigna. EvilSeed: A guided approach to finding malicious web pages. In Oakland, 2012.
[30] Nav Jagpal, Eric Dingle, Moheeb Abu Rajab, Panayiotis Mavrommatis, Niels Provos, and Kurt Thomas. Trends and lessons from three years fighting malicious extensions. In USENIX Security, 2015.
[31] Dave Lee. Premier league wins piracy block of first row sports. http://www.bbc.com/news/technology-23342349.
[32] Zhou Li, Kehuan Zhang, Yinglian Xie, Fang Yu, and XiaoFeng Wang. Knowing your enemy: Understanding and detecting malicious web advertising. In CCS, 2012.
[33] Michael J Mellis. Internet piracy of live sports telecasts. Marq. Sports L. Rev., 18, 2007.
[34] Nick Nikiforakis, Federico Maggi, Gianluca Stringhini, M Zubair Rafique, Wouter Joosen, et al. Stranger danger: Exploring the ecosystem of ad-based URL shortening services. In WWW, 2014.
[35] Allison Nixon and Christopher Camejo. DDoS protection bypass techniques. In Black Hat Briefings, 2013. https://goo.gl/58Ah2j.
[36] Association of Internet Security Professional. Illegal streaming and cyber security risks: A dangerous status quo? 2014. WE43IM. http://goo.gl/
[37] Kaan Onarlioglu, Utku Ozan Yilmaz, Engin Kirda, and Davide Balzarotti. Insights into user behavior in dealing with internet attacks. In NDSS, 2012.
[38] Cisco Press Release. Global Internet traffic projected to quadruple by 2015. http://goo.gl/MXi3pN.
[39] Niels Provos, Mavrommatis Panayiotis, Moheeb Abu Rajab, and Fabian Monrose. All your iframes point to us. In USENIX Security, 2008.
[40] M Zubair Rafique and Juan Caballero. FIRMA: Malware clustering and network signature generation with mixed network behaviors. In RAID, 2013.
[41] M Zubair Rafique, Ping Chen, et al. Evolutionary algorithms for classification of malware families through different network behaviors. In GECCO, 2014.
[42] Gerard Salton and MJ McGill. Introduction to Modern Information Retrieval. McGraw-Hill Book Co, 1983.
[43] Homeland Security Investigations. Curbing illegal streaming: The investigation and the case. Anti-Piracy and Content Protection Summit. http://www.antipiracycontentsummit.com/media/1000508/44011.pdf.
[44] Chris Smith. Pirating copyrighted content is legal in Europe, if done correctly. http://goo.gl/G6OoCh.
[45] Pete South. Illegal football streams war shows no sign of ending for premier league. http://goo.gl/ajnxcQ.
[46] Kevin Springborn and Paul Barford. Impression fraud in online advertising via pay-per-view networks. In USENIX Security, 2013.
[47] Christina Sterbenz. How sketchy streaming sites really work and why some are legal. http://goo.gl/e6FYXo.
[48] Kurt Thomas, Elie Bursztein, Chris Grier, et al. Ad injection at scale: Assessing deceptive advertisement modifications. In Oakland, 2015.
[49] Alexander Tuzhilin. The Lanes Gifts v. Google Report. http://bit.ly/13ABxSZ.
[50] Carson S Walker. A la carte television: A solution to online piracy. CommLaw Conspectus, 20, 2011.
[51] Xinyu Xing, Wei Meng, Byoungyoung Lee, et al. Understanding malvertising through ad-injecting browser extensions. In WWW, 2015.
[52] Apostolis Zarras, Alexandros Kapravelos, Gianluca Stringhini, et al. The dark alleys of Madison Avenue: Understanding malicious advertisements. In IMC, 2014.
[53] Christoph Zauner. Implementation and benchmarking of perceptual image hash functions. Master’s thesis, Upper Austria University of Applied Sciences, 2010.