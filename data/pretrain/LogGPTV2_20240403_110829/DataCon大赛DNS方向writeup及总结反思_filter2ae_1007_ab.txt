---|---  
144.202.64.226 | 33903  
18.100.48.86 | 8  
6.116.183.244 | 2  
类别 1: DNS zone transfer
ip | frame 数  
---|---  
18.100.48.86 | 3655  
类别 2: DNS dynamic update
ip | frame 数  
---|---  
18.100.48.86 | 3655  
类别 3: DNS Amplification Attack
ip | frame 数  
---|---  
105.191.150.205 | 4150  
127.130.104.152 | 11868  
175.222.102.169 | 17182  
6.116.183.244 | 72 （实际为NSEC)  
类别 4: Misclassificaiton
ip | frame 数  
---|---  
144.202.64.226 | 291  
18.100.48.86 | 428  
在小数据上,使用 KMeans 算法聚类, 聚类效果很好，分类结果和手工分析结果基本相同, 除了 NSEC 枚举攻击被分类成放大, 其它4个类型基本正确,
进一步可以说明攻击类型基本确定。
NSEC 分类错误的主要原因是, 没有添加和 NSEC 攻击相关的特征, 从手动分析数据中可以看出, NSEC 枚举攻击的 frame 存在相应的标志位.
此外还有可能的原因是 NSEC这个类的数量很少 KMeans 算法适用于各类数量均匀的情况，进一步尝试使用 DBSCAN 算法进行聚类，调整 `eps` 和
`min_samples` 参数，直到分类结果为 5 类或 6 类. 分类结果和使用 KMeans 差不多，NSEC
枚举依旧误分类，因此可能的原因就是所用特征不能很好区分 NSEC 枚举攻击类型。
**流量查验**
使用`wireshark`进行数据包`q1_final.pcap`分析。
**初步分析**
数据包较大，共有`10736020`个数据包，打开比较费时，考虑将数据包进行切割，但是切割后存在一个问题，就是数据包的序号会改变对之后提取数据包的序号造成了困难，所以并没有首先对数据包进行盲目的切割，决定分析后再进行切割。
粗略浏览数据包，发现数据包结尾部分出现一部分异常流量，在并没有发现特别明显的异常。
**流量分析**
在数据包最后一部分，出现的流量全部都是解析请求，且请求的类型为`ANY`，怀疑为`DNS反射放大攻击`。
那么就用这类攻击的特征首先进行筛选，`解析请求为ANY`、`返回数据包很大`。
设置过滤器，利用解析请求`ANY` 做为条件。
    dns.qry.type == 255
果然存在异常的数据包，但是还有很多正常的流量，还需要添加条件。
    dns.qry.type == 255 && frame.len > 2000
确定为放大攻击。但这是响应包，需要找到其请求包。
首先确定服务器IP和客户机IP
dns servers | victim ip  
---|---  
187.199.129.12 | 127.130.104.152  
188.141.167.218 | 175.222.102.169  
70.85.232.160 | 105.191.150.205  
这里其实还有一台服务器`45.80.170.1`,在第一步检查时出现但这一步并没有出现，之后检查发现，其实是有两台机器`22.203.191.72`和`223.168.98.1`向`45.80.170.1`发送了解析且类型为`ANY`，但是服务器回应为拒绝，并没有返回数据包，这部分攻击未确定。
将确定的攻击筛选出来，取出请求包。
    (ip.addr == 127.130.104.152 || ip.addr == 175.222.102.169 || ip.addr == 105.191.150.205) && dns.flags.response == 0
得到`DNS反射放大攻击`请求数据包，取出其序号，获得第一类攻击流量。
在上面的筛选过程中就发现，其实服务器`45.80.170.1`是主要的DNS服务器，大部分流量是这台服务器的，那么就有一个问题，除了主要服务器`45.80.170.1`，还剩下多少服务器，多少数据包？
     ip.src !=45.80.170.1 && ip.dst != 45.80.170.1
> 我用的wireshark版本有点问题，不支持ip.addr 的不等查询，只好分开写
发现剩下的数据包仅仅剩下`141213`个，结合上面的放大攻击，猜测是否攻击流量大部分在这里面。
对这些流量进行分析，发现异常流量。
出现大量返回`no such name`的响应包，且响应包中包含相同的`SOA`记录，推测为`kaminsky投毒攻击`。
请求主机为`144.202.64.226`，获得第二类攻击流量。
排查是否存在区域传送。
    dns.qry.type == 252
发现区域传送数据包
请求主机ip仅有一个，为`96.199.230.176`,确定为区域传送攻击。获得第三类攻击流量。
**第一次提交**
上面三种类型形成第一次提交的答案。
攻击分类为
attackid | description  
---|---  
1 | DNS zone transfer  
2 | DNS Amplification Attack  
3 | DNS cache pollution  
其中`DNS zone transfer`攻击请求包5297条，`DNS Amplification Attack`攻击请求包40990条，`DNS
cache pollution`攻击请求包34194条。
**得分** ：55.279
从得分上看，三种分类正确且基本上每一分类的大部分攻击流量被找到，扣分原因可能是因为有一部分错误流量，之后再做筛选。
**确定最后两种攻击**
刚开始就列出的攻击类型，在分析过程中又找到了一种攻击向量，`PTR反查`，利用`PTR记录`的特性可以遍历保留地址来获取内网的域名信息，造成内网信息泄露。
在数据包中查找是否存在这种记录。
从查询结果看，数据包中确实存在`PTR`查询，但是查询并不具备攻击特征，其查询的是域名而不是大量的查询保留IP地址，可能不是攻击，保留，之后再做判断。
沿着之前找出的三种攻击的思路，继续在非`45.80.170.1`的流量上进行分析。
针对`NSEC`记录进行分析，发现大部分流量是存在`NSEC3`记录的，说明已经做了防护，那么是否存在`NSEC`记录呢？
    dns.resp.type == 47
仅仅利用类型筛选发现被`反射攻击`利用的服务器也存在这个问题，需要进一步筛选。
    dns.resp.type == 47 && frame.len <2000
发现异常流量，确定为攻击，攻击类型为`NSEC枚举`。对应的服务器和客户机为
server | client  
---|---  
185.25.160.3 | 6.116.183.244  
对其流量进行分析发现存在一种奇怪的流量，DNS动态更新记录，感觉可能存在问题。
这部分流量在主要服务器`45.80.170.1`和其他服务器上都存在，对其解析请求和回应进行分析，没有确定具体的攻击类型。综合考虑，目前已经找出四种攻击，疑似攻击的`PTR`记录并具备攻击特征，那么这个有很大可能是攻击。主要的查询主机为`18.100.48.86`。
通过对RFC的解读，发现在DNS更新时是有先决条件的，但这部分流量大部分是不具备的，那么可能是攻击者利用DNS的更新机制，将目标IP进行更换，形成攻击。
**第二次提交**
现在再次确认的攻击有`NSEC枚举`，`PTR反查`不具有攻击特征，那么选择`DNS dynamic update`进行提交，提交非主要服务器的流量。
则目前确认的攻击为
attackid | description  
---|---  
1 | DNS zone transfer  
2 | DNS Amplification Attack  
3 | DNS cache pollution  
4 | DNS dynamic update  
5 | NSEC enumeration  
前3种攻击流量不变，增加后两种，其中`DNS dynamic update`具有4091条，`NSEC enumeration`具有74条。
**得分** ：90.909
结合第一次提交，说明攻击类型确定为这五种，且两次提交每次的扣分在5分左右，说明攻击流量已经大部分被找出，接下来进行进一步的筛选。
**第三次提交**
对3种攻击进行筛选，`DNS zone transfer`和`DNS cache
pollution`数量较少，且特征较明显，应该不会错选或遗漏。对于`DNS Amplification
Attack`，存在一个问题，就是在主要服务器`45.80.170.1`也有一部分疑似攻击流量，第一次提交仅仅是将其种一部分加入答案，现在将主要服务的全部疑似流量加入。
则现在的`DNS Amplification Attack`攻击流量有41551条，其余攻击流量不变。
**得分** ：90.57
分数下降，说明加入的流量是错误的，并且由两次的分差和本次增加的流量条数，结合得分计算公式，可以估算`DNS Amplification
Attack`流量的总条数在32000条左右，数字并不确切，但也有一定的参考依据。
**最终的攻击流量确定**
第三次提交确定主要服务器的放大流量是误判流量，则将放大流量中主要服务器相关流量删除，提交3种攻击分类。
第四次提交得分为：59.97。确定前三种攻击的主要攻击流量。
对后两种攻击，`NSEC枚举`的数量较少，且特征明显，不容易误判。但`DNS dynamic
update`情况比较复杂，第一，仅对主机`18.100.48.86`的响应的种类就有很多；第二，也存在主要服务器的响应。首先考虑不同类型的响应的区分度。
在分析时发现请求数大于响应数，可能存在某些请求没有接收到响应。响应的类型一共有五种，数量最多的为拒绝，根据得分情况，保留占比大的拒绝响应，将其他的响应的请求包删除，进行提交。此时`DNS
dynamic update`攻击流量数量为3381条。
第五次提交得分为：93.35。分析得分后发现得分降低，说明删除的流量中正确流量占大部分，且扣分达到了7分，说明这种攻击存在较大部分流量没有找到。
考虑主要服务器上的更新流量，经过分析，发现其对应的主机有两台`237.205.156.233`和`19.220.251.87`,并且请求流量数量不同，前者具有535条，后者414条，决定将其共同提交，可以根据分数变化，确定最终的攻击流量。此时`DNS
dynamic update`攻击流量数量为4345条。
在第五次提交的基础上，第六次提交得分为：97.1，得分提高4分，确定新增加的全部为攻击流量。
修改最终结果，将第五次提交中删除的部分添加至第六次提交答案中，最终攻击流量确定。
攻击类型为
attackid | description  
---|---  
1 | DNS zone transfer  
2 | DNS Amplification Attack  
3 | DNS cache pollution  
4 | DNS dynamic update  
5 | NSEC enumeration  
其中，`DNS zone transfer`包括5298条，`DNS Amplification Attack`包括33200条，`DNS cache
pollution`包括34194条，`DNS dynamic update`包括5055条，`NSEC enumeration`包括72条。
## 题目二 DGA域名家族聚类
###  0x00 题目解读
从官网给出的信息是对DNS流量中的DGA域名进行识别并且进行家族聚类，给出的数据包依然是pcap文件，粗略观察可以看出，数据包中存在明显的`NXDomain`的响应，确定目标。
实验方法在实验过程中逐步完善，但局限于比赛提交次数，一部分实验方法的结果并没有经过验证，这里尽可能介绍实验中使用的方法，希望赛后可能得到进一步的确定。
实验使用环境参数：