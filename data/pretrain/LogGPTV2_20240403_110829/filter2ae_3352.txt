最近在刷题，刷到了CISCN2019
华东南赛区的web4题，读到源码后发现需要去修改Session的值，但看到下面开启了flask的debug，就想着去构造pin码进控制台读取flag，结果后面怎么构造都不对，于是简单研究了下
#### 参数的具体内容
根据网上文章，pin码主要由六个参数构成，主要是`username,modname,getattr(app, "__name__",
app.__class__.__name__),getattr(mod, "__file__", None),str(uuid.getnode()),
get_machine_id()`这六个参数构成，生成pin码的代码则是在`werkzeug.debug.__init__.get_pin_and_cookie_name`，这里以Mac系统为例，直接下断点跟踪
跟踪到186行，`probably_public_bits`和`private_bits`即构成pin码的两个参数数组，其中，`username`的获取如图所示，实际上就是运行当前程序的用户的用户名，这里是我的主机名`forthrglory`
接下来是`modname`，这里取的是`app`对象的`__module__`属性，如果不存在的话取类的`__module__属性`，默认为`flask.app`
再往后和`modname`类似，获取的是当前`app`对象的`__name__`属性，不存在则获取类的`__name__`属性，默认为`Flask`
接着是取`mod`的`__file__`属性，而`mod`实际上就是`flask.app`模块对象，因此最终获取到的`__file__`属性就是`flask`包内`app.py`的绝对路径，这个路径一般情况下都是`/usr/local/lib/python{版本号}/site-packages/flask/app.py`，在开启了`debug`的情况下可以通过报错获取，需要注意的是，在python2中，这个值是`app.pyc`，在python3中才是`app.py`
再往下，`private_bits`的第一个属性通过`str(uuid.getnode())`获取，这里实际上就是当前网卡的物理地址的整型，可以通过`int(MAC,
16)`获取，文件读取则是
接着是`get_machine_id`，这是构造的重点，跟进函数
红框内是重点，首先从`/proc/self/cgroup`中读取第一行，如果存在，则使用`value.strip().partition("/docker/")[2]`进行分割，并取分割后的最后一位，这里对应着`docker`容器的读取方式，容器会共享相同的机器ID。如果读不到的话，继续往下走
接着会去两个文件`/etc/machine-id`和`/proc/sys/kernl/random/boot_id`中国呢读取，这里对应着`Linux`系统的读取方式，前者是`linux`系统的机器ID，后者
则是跟内核相关，每次开机重新生成一个，并非唯一
如果这两个文件还是读取不到，继续往下走
这里是Mac os的生成文件，会去执行`ioreg -c IOPlatformExpertDevice -d 2`命令，然后取`"serial-number" = SOFTWARE->Microsoft->Cryptography->MachineGuid
##### 加密方式
python2绝大部分为md5加密，python3少部分为md5，大部分为sha1加密
##### 机器id读取顺序不同
###### `0.15.5`之前
`/etc/machine-id`->`/proc/sys/kernel/random/boot_id`->`ioreg -c
IOPlatformExpertDevice -d
2`->`HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/Cryptography/MachineGuid`
###### `0.15.5-0.16.0`
`/proc/self/cgroup`->`/etc/machine-id`->`/proc/sys/kernel/random/boot_id`->`ioreg -c IOPlatformExpertDevice -d
2`->`HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/Cryptography/MachineGuid`
`/proc/self/cgroup`需要用正则`value.strip().partition("/docker/")[2]`分割
###### `0.16.0之后`
`/etc/machine-id`->`/proc/sys/kernel/random/boot_id`->`/proc/self/cgroup`->`ioreg -c
IOPlatformExpertDevice -d
2`->`HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/Cryptography/MachineGuid`
`/proc/self/cgroup`需要用正则`f.readline().strip().rpartition(b"/")[2]`分割
参考文章：
​
[有关flask开启debug模式中PIN码生成的流程](https://wangchangze.github.io/2019/07/18/flask%E6%9C%89%E5%85%B3pin%E7%A0%81%E7%94%9F%E6%88%90%E7%9A%84%E6%9C%BA%E5%88%B6/)
​ [Flask debug模式算pin码](https://icode.best/i/84783546060025)
​ [Flask debug模式下的 PIN 码安全性](https://xz.aliyun.com/t/8092#toc-4)