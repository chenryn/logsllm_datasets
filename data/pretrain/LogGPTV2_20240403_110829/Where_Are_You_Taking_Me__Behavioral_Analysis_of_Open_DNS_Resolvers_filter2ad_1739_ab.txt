A. Measurement System
The overall ﬂow of open resolver probing is shown in Fig. 2.
In this ﬁgure, the ﬂow of Q1, Q2, R1, and R2 corresponds
to the DNS query from the prober to the open resolver, the
DNS query from the open resolver to the authoritative name
server, the DNS response from the authoritative name server,
and the DNS response from the open resolver to the prober,
respectively. The root name server and the TLD name server
are not shown in this ﬁgure because they are out of the scope of
this study. The communication with both servers takes place
in the time between Q1 and Q2 to ﬁnd the address of the
authoritative name server. To gather all ﬂows in Fig. 2 during
our measurements, we built and controlled two components: a
prober and an authoritative name server. In the following, we
elaborate on the details of each component.
1) Open Resolver Prober: A prober is responsible for
sending DNS queries to the entire IPv4 address space (Q1)
and collecting responses from open resolvers (R2). The Q1
messages generated by a prober include the subdomains un-
derneath ucfsealresearch.net, which is under our management.
Probing System. To perform DNS probing, we modiﬁed
ZMap [18], an open-source fast Internet-wide scanner. In
theory, ZMap is able to probe the entire IPv4 address space
within an hour. To cope with our limited bandwidth, I/O
constraints, etc., we performed a probing at 100k packets-
per-second (pps). We implemented a systematic probing by
combining the latest ZMap with the subdomain generation
method described in section III-B.
Probing Range. In order to capture a snapshot of open
resolvers on the Internet, we probed all IPv4 addresses except
for some reserved areas as described in Table I. As a result, a
scan of about 3.7 billion IPv4 addresses was conducted, which
resulted in a comprehensive view of open resolvers.
2) Authoritative Name Server: Upon receiving a DNS
query, the open resolver starts a recursive resolution. The
interpretation of the domain name proceeds in the order as
shown in Fig. 1. Among the components that make up the
whole DNS, it is impossible to build a root name server
or a TLD server by ourselves, so we built an authoritative
name server to observe the behavior of open resolvers. The
authoritative name server is responsible for the translation
of subdomains that belonged to the Second-Level Domain
495
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:55:40 UTC from IEEE Xplore.  Restrictions apply. 
(SLD) in the DNS query. A prober generates DNS queries
that include our SLD, which makes our authoritative name
server participate in the recursive resolution process as a last
step ( 6(cid:2) and 7(cid:2) in Fig. 1), the subdomain translation.
System Speciﬁcation. We built an authoritative name server
on a commercial public cloud service, Vultr [19]. The cloud
instance has two 2.6 GHz virtual CPUs, with 4 GB of memory,
and running CentOS 7 x64. BIND 9.9.4 was used, and the
resolution of IPv6 was disabled in our conﬁguration, since
this work only focused on the IPv4 address space.
Second-Level Domain. We purchased an SLD, ucfsealre-
search.net, from GoDaddy [20] to enable the conﬁgured au-
thoritative name server to manage the domain name resolution
of its subdomains. GoDaddy provided the option of changing
responsible DNS server for the purchased SLD. We set the
authoritative name server that we conﬁgured as the responsible
DNS server of the purchased SLD.
B. Subdomain Generation
To understand the behavior of the open resolver, we need to
keep track of Q1, Q2, R1, and R2 for each open resolver.
Basically, DNS matches the pair of the query and the response
using the ID ﬁeld in the DNS header. However, it is infeasible
to assign a unique ID number to each query-response pair
in our measurement. This is because the DNS ID ﬁeld is
only 16 bits which can represent up to 65,535 IDs, while the
probing rate is about 100k pps. Therefore, we implemented
and applied a subdomain generation method to deal with
this issue. During the probing process, DNS queries with
different subdomains (e.g.,or000.0000000.ucfsealresearch.net,
or000.0000001.ucfsealresearch.net, etc.) are sent to different
IP addresses. Using the qname information contained both in
the DNS request and response, we were able to easily group
Q1, Q2, R1, and R2 for each ﬂow.
Subdomain Cluster. Considering the limited memory re-
source of the authoritative name server, it cannot load about
4 billion subdomains for all IP addresses at once. In our
authoritative name server, only about 5 million subdomains
could be reliably loaded. Therefore, we devised a two-tiered
subdomain structure for the measurement as shown in Fig. 3.
We grouped the 5 million subdomains that can be provided
at once by the authoritative name server into one cluster. Five
million subdomains, where each has a unique number (right
7 digits in the ﬁgure), are generated as one cluster (a zone
ﬁle), and each cluster is numbered (left 3 digits in the ﬁgure).
Once the predetermined number of subdomains in the cluster
is exhausted, the cluster is updated with a new cluster number.
Subdomain Reuse. The application of subdomain and cluster-
ing allow us to easily match Q1, Q2, R1, and R2 by com-
paring the qname ﬁeld in DNS packet as well as to prevent
the cached response. However, creating a cluster of 5 million
subdomains also increases the probing time. To be speciﬁc,
it takes about one minute to load 5 million subdomains at
the authoritative name server, and the time will be very long
considering that 4 billion IP addresses can make up to 800
clusters in total. Moreover, the number of open resolvers found
subdomain 
SLD 
or000.0000001.ucfsealresearch.net 
cluster #  subdomain # 
or000.5000000.ucfsealresearch.net 
or001.0000001.ucfsealresearch.net 
Fig. 3. The subdomain structure for open resolver probing.
in other projects [4], [21] was less than 10 million, which
means that about 99.75% of the loaded subdomains would not
be used by the open resolver. As such, we added a subdomain
reuse method to improve the performance. The prober parses
the response packet (R2) after sending the packets including
subdomains within one cluster and reuses the subdomain not
in the collected R2 set, indicating that the packet was sent
to the IP address which is not an open resolver. Using this
approach, we could reduce the number of clusters for probing
from the theoretical value of 800 to only 4.
IV. MEASUREMENT RESULTS
We successfully performed an Internet-wide probing that
lasted approximately 10 hours and 35 minutes, where about 3.7
billion Q1, 13 million of each Q2 and R1, and 6.5 million R2
packets were captured at either the prober or the authoritative
name server. Compared to the number of Q1, the number of
Q2 and R1 is about 0.353% and those of R2 are only about
0.176%. Table II shows a summary of the probing results.
We compare this result with results obtained from a dataset
collected in 2013. In 2013, we performed an Internet-wide
measurement using a C-based system, not based on ZMap as
in this study, which does not affect the settings. As shown in
Table II, the probing took about 7 days for sending about 3.7
billion Q1. We collected about 38 million Q2 and R1, and
about 16.6 million R2 packets. The percentages of Q2 (R1)
and R2 to the number of Q1 are about 1.0357 and 0.453,
respectively. By observing the reduction of Q1 and R2 counts,
we deduce that the number of open resolvers has declined
over ﬁve years. In the following, we explore the change in the
number of open resolvers and their behaviors in-depth.
R2 with Empty Question Field. In the sequel, we focus on
R2 to analyze the behavior of the open resolvers. However, we
remark that some of the collected R2 packets had an empty
dns_question ﬁeld. In general, the dns_question ﬁeld
is included in both the DNS query and the response [22]. As
described in section III-B, dns_question is used to group
the set of Q1, Q2, R1, andR2. Accordingly, we excluded
those 494 packets without dns_question ﬁeld from our
analysis in 2018. As a result, the following analysis only
covered 6,505,764 R2 packets with dns_question ﬁeld.
However, we brieﬂy provide a summary of those excluded
packets in section IV-B4.
496
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:55:40 UTC from IEEE Xplore.  Restrictions apply. 
THE SUMMARY OF THE OPEN RESOLVER PROBING. NOTICE THAT THE NUMBERS IN PARENTHESES IN THE Q2 AND R2 SHOW THE PERCENTAGE OF EACH
TABLE II
NUMBER TO THE NUMBER OF Q1.
Start time
End time
10/28/2013 2PM 11/04/2013 6PM
04/26/2018 3PM 04/27/2018 2AM
Duration
7d 5h
11h
Q1
Q2, R1 (%)
R2 (%)
3,676,724,690
3,702,258,432
38,079,578 (1.0357)
13,049,863 (0.3525)
16,660,123 (0.453)
6,506,258 (0.1757)
A. DNS Answer and Correctness
In this section, we describe a high-level analysis of the
collected R2 packets, both presence and correctness. The
presence of packets is simply measured by counting the
number of R2 at the prober, while the correctness is measured
by comparing the translated result in R2 with the ground truth.
As shown in Table III, we observed 16,660,123 R2 packets
during the probing in 2013. Out of all R2 responses, 4,867,241
responses do not include dns_answer, while 11,792,882
packets contain dns_answer. Among the R2 packets which
have dns_answer ﬁeld, 11,671,589 packets indicate the
correct IP address, but 121,293 responses include incorrect
information. The rate of incorrect information is about 1.029%.
In 2018, on the other hand, we found that 2,863,655 DNS
responses out of total 6,505,764 R2 collected packets had
dns_answer, while the remaining 3,642,109 packets do not.
Moreover, 2,752,562 of the 2,863,655 dns_answer ﬁelds
contained the correct IP address result, and the other 111,093
responses had wrong results (3.879%).
From this result, we can conclude that the number of R2
packets with dns_answer has greatly decreased from about
11.8 million to 2.9 million. The reduction (≈9 million) is
similar to the reduction in the R2 packets (≈10 million).
the number of R2 packets provid-
Interestingly, however,
ing misleading information remains similar (≈110 thousand).
Consequently, the error rate has increased from about 1%
to 4%. From this result, we can infer that the number of
resolvers exhibiting unusual behaviors did not signiﬁcantly
change, despite a signiﬁcant reduction in the total number of
open resolvers.
We conducted a deeper analysis of the answers from open
resolvers. Speciﬁcally, we looked into how open resolvers
behave according to the ideal way in section IV-B, and
investigated the incorrect (suspicious) answers in section IV-C.
B. Analysis of DNS Header
The operation of DNS is mainly based on RFC1034 [23]
and RFC1035 [22]. These documents elaborate the standards
for DNS, such as DNS packet header structure as well as the
process of DNS resolution. Considering that the open resolver
is a component of the whole DNS, we expect it to follow the
standard when participating in the translation process.
Through this measurement, however, we found that many
resolvers don’t follow the standard. To be speciﬁc, when the
resolvers generate DNS answer packets, many of them ﬁll the
DNS ﬂags and the response code ﬁelds not according to the
instructions described in the standard. In the following, we
TABLE III
THE PRESENCE AND CORRECTNESS OF dns_answer FIELD IN R2.
NOTICE THAT W AND W/O CORRESPOND TO THE THE NUMBER OF R2
PACKETS WITH AND WITHOUT dns_answer, RESPECTIVELY. WCorr
AND WIncorr CORRESPOND TO THE NUMBER OF CORRECT AND
INCORRECT ANSWERS, WHICH RESULTS IN WCorr + WIncorr = W ,
AND Err MEANS THE PERCENTAGE OF INCORRECT ANSWERS TO THE W ,
SUCH THAT Err = WIncorr/W × 100.
Year
R2
W/O
2013
16,660,123
4,867,241
2018
6,506,258
3,642,109
W
WCorr
WIncorr
11,792,882
11,671,589
121,293
2,863,655
2,752,562
111,093
Err(%)
1.029
3.879
investigate such behaviors of open resolvers by analyzing the
collected data through a comprehensive measurement.
The
Flag:
1) Recursion
Recursion
Available
Desired (RD) ﬂag bit
in the header of DNS queries
sent during the probing is ‘1’, which means that the recursive
resolution is required. If the recipient of this query can
perform recursive resolution (open resolver), it proceeds with
recursion on behalf of the prober. Once the open resolver
knows the result, it returns the translated IP address with the
Recursion Available (RA) bit of ‘1’ to the prober.
In this work, the investigation of the RA ﬂag in R2 started
to ﬁgure out how many open resolvers exist. According to the
deﬁnition of open resolver, a publicly accessible and recursion-
available resolver, we expected the open resolvers to answer to
our query with the RA bit of 1 and a correct answer. However,
by looking into the collected data we found that RA bit does
not directly mean the existence of an open resolver.
Table IV shows the analysis of RA bit in R2 packets. In
2013, we can see that the RA bit of 12,270,335 R2 packets
appeared as 1, which might imply that there were about 12
million open resolvers. The interesting observation we make
is that there were 241,950 DNS responses with dns_answer
ﬁeld, even though they also have the RA bit of 0 (recursion
unavailable). Moreover, 166,108 of them include the correct
IP address information, which means that the senders of those
166,108 packets actually play the role of the open resolver,
although they indicate they are not open resolvers. Conversely,
there were 719,403 DNS responses without dns_answer
ﬁeld, but with the RA bit of 1 (recursion available), which
means they do not perform the resolution. Such resolvers can
be assumed to be either publicly inaccessible or unable to
perform the recursive resolution. If the latter is the reason for
the blank answer, it can be inferred that those resolvers do not
497
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:55:40 UTC from IEEE Xplore.  Restrictions apply. 
follow the standard implementation for DNS resolution.
In the result collected in 2018, 3,503,581 R2 packets have
the RA bit of 0 (recursion unavailable), while 3,002,183
include RA bit of 1 (recursion available). Moreover, among
the responses with RA bit of 0, 69,166 packets include
dns_answer, 3,994 of correct answers and 65,172 of in-
correct answers, which results in an error rate of 94%. On the
other hand, 207,694 R2 responses do not contain any resolved
IP address, even though they claim to have recursion available.
Regardless of the value of the RA bit, the number of packets
with the dns_answer ﬁeld decreased to about one quarter
(from 241 thousand to 69 thousand for RA bit of 0 and from
11.5 million to 2.8 million for RA bit of 1). However, the
number of incorrect answers is similar, or even larger in 2018
(from 75 thousand to 65 thousand for RA bit of 0 and from
42 thousand to 46 thousand for RA bit of 1).
In terms of the accuracy of the response, when the RA bit
is 0 and the dns_answer ﬁeld is included, the resolved
IP address is often wrong in 2018, with 94.225% of wrong
dns_answer ﬁelds. Moreover, 31.346% of responses with
RA bit of 0 and dns_answer ﬁeld include incorrect infor-
mation in 2013. If the RA bit of 0 and dns_answer were
given together, the probability that the included IP address was
inaccurate increased by more than three times. When the RA
bit is 1, it can be seen that about 0.393% and 1.643% of the
packets containing dns_answer include the wrong result in
2013 and 2018, respectively. Considering that only less than
6% of the cases with the RA bit of 0 include dns_answer
ﬁeld, the ratio of incorrect responses to the total would be low.
Obviously, however, an improper combination of the RA bit
and dns_answer can be a clear indicator of a false result.
is
difﬁcult to determine the number of open resolvers. It can be
estimated that there were about 11.5 million open resolvers
with the strictest criteria in 2013 (with the RA ﬂag of 1
and correct dns_answer). Using the same criteria, it is
estimated that there are about 2.74 million open resolvers in
2018. However, if we only use the RA ﬂag as a criterion, we
can also estimate that there were 12.2 and 3 million open
resolvers in 2013 and 2018, respectively. On the other hand,
it is also possible to conclude that there were about 11.7 and
2.75 million open resolvers by only counting the R2 packets
with correct answer regardless of the RA bit.
While investigating the RA bits in the responses,
it
Flag:
Answer
intuitively,
2) Authoritative
Authoritative