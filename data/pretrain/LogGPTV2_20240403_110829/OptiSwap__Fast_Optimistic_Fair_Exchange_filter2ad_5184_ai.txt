witness x and cannot distinguish the protocol execution and the ideal world using this
inuence.
This is possible, since it is assumed that the simulator controls inputs and outputs of honest
Buyer. The same assumption is placed in the rst game of the proof presented in [14].
If not both messages, the sell -message and the initialize-message, are received from ˜S∗ in
round 1, the simulation terminates, since both messages are needed to start the protocol Π.
In the revealing phase of Π, Seller has to send his encryption key and the correct opening
value to GL,H
1 simulates the
revealing by running GL,H
(reveal, id, k, d). As described before, the revealed value x∗ is
replaced with the correct witness, which was encrypted by Z in round 1, i.e., x. In this step,
the witness x is obtained by computing x = Dec(k, z), which is also done by the Buyer in
the execution of Π. Hence, the obtained witnesses are identical.
Suppose the witness x is correct, i.e., φ(x) = 1, the simulator must ensure that the money
is transferred to Seller. In the protocol execution, honest Buyer B sends a nalize-message in
order to instruct GL,H
to unlock the money in favor of S∗. Since the witness x∗ within FL
icfe
is not necessarily equal to the correct witness x, the simulator must ensure that the money
is transferred to Seller. Without interaction from the simulator, the ideal functionality FL
would check φ(x∗) and as long as x∗ is not the correct witness, it would send the money to
Buyer. In order to send the money to Seller instead, SimS
1 must send an abort-message in
icfe to unfreeze the money in favor of ˜S∗.
the name of ˜B to FL
The delay-parameter of the abort-message is set to 0 in order to transfer the money in this
round and hence to guarantee that the money is transferred in the same round as in the
hybrid world execution.
. Hence, on receiving a valid reveal -message from ˜S∗, SimS
icfe. This way, SimS
1 instructs FL
icfe
jc
jc
jc
In case the witness x is not correct, honest Buyer starts to engage in the dispute resolution
sub-protocol. The simulation of the dispute resolution is the main dierence compared to
the honest simulation and compared to the simulation of the FairSwap protocol given in [14].
The sub-protocol is simulated by SimS
1 in the steps (4a) and (4b). An honest Buyer tries
to create a valid proof of misbehavior as soon as possible. Therefore, SimS
1 checks whether
Buyer is able to create such a proof. If this is possible, he simulates a prove-message and
sends an abort-message to FL
icfe on behalf of ˜S∗. This message triggers FL
icfe to send the
money back to ˜B and a not bought-message to ˜B. The delay-parameter of 0 guarantees that
the money and the message are sent immediately and hence in the same round as in the
protocol execution. In addition SimS
If ˜B cannot create a valid proof of misbehavior, he sends a challenge-message to GL,H
.
1 creates a challenge-message the same way as honest Buyer does and hence the tran-
to lock some fee from Buyer,
1 sends a (f reeze, id, ˜B,|Q|)-message to FL
icfe is
SimS
script is identical. Since a challenge-message instructs GL,H
SimS
instructed to lock the same amount of money as in the protocol execution.
1 creates a not sold -message as output for ˜S∗.
icfe. By sending this freeze-message, FL
jc
jc
39
jc
Π
by
upon
running
protocol
receiving
After honest Buyer challenged Seller, a respond -message must be generated by Seller. SimS
1
GL,H
simulates
a
(respond, id, Rq)-message. In addition he instructs FL
icfe to lock fees from ˜S∗. As soon as
a respond -message is received by honest Buyer B, he checks on the validity of this response.
In case the response is not valid, SimS
1 needs to simulate a complain-message and to termi-
icfe in the name of ˜S∗. This way, the
nate the simulation by sending an abort-message to FL
money is unlocked in favor of B. Again, the delay-parameter of the abort-message is set to 0
in order to perform the actions immediately and hence in the same round as in the protocol
execution.
If the malicious Seller ˜S∗ does not send a respond -message, SimS
1 aborts the simulation
in the name of ˜S∗ and simulates a respond timeout-message. By doing this, the money is
transferred to honest Buyer. This time, the abort-message contains a delay-parameter of 1.
This is necessary, since honest Buyer is only able to detect the abort in the next round and
therefore can only trigger the payo with a respond timeout-message in the next round.
The timing of the simulation simulates all messages in the same round as in the protocol
execution. Since the simulator has the same knowledge as honest Buyer B, which is the set
R, the key k, and the circuit φ, the generated challenge-messages are identical. Moreover,
the complete transcript of the dispute resolution sub-protocol is identical to the protocol
execution and SimS
1 ensures that money is locked and unlocked in the same rounds. Hence,
the hybrid world execution and the hybrid simulation using simulator SimS
1 are indistin-
guishable for any ppt environment Z.
Next, it is necessary to remove the power to control the inputs and outputs of honest
Buyer from the simulator. In particular, the abort-message in round 4 of SimS
1 and the
replacement of x∗ with x after FL
icfe revealed the witness have to be removed. This can be
achieved by inputting the correct witness x to the ideal functionality FL
icfe. To this end, the
same approach as in [14] is taken. The observability feature of the global random oracle
H is used. By querying H for all already executed queries from outside the session, the
simulator is able to obtain the encryption key. Using the key, the simulator is able to extract
the witness x from z at the start of the simulation. Simulator SimS is presented in the
following. By showing the indistinguishability between the hybrid simulation using SimS
and the ideal world execution using SimS , Claim E is shown.
1
Simulator SimS for simulation with corrupted Seller.
if φ(x)
1. Upon
receiving
(sell, id, z, φ)
icfe. Otherwise,
(sell, id, x, φ, p, fS , fB)
to FL
to FL
icfe.
(initialize, id, c, rz, re, rφ, aφ, p, fS , fB)
through ˜S∗ in the rst round, SimS obtains Qid by querying H(observe).
If (k||d, c) ∈ Qid, he computes x = Dec(k, z). Otherwise,
if no such
query exists, SimS sets x = 1n×λ. Then, he computes φ(x). If φ(x) = 1,
(cid:54)= 1, he
he sends
In addition, SimS simulates
(sell-f ake, id, x, φ, p, fS , fB)
sends
execution of Π by running (active, id, c, rz, re, rφ, aφ, p, fS , fB) ←
the
GL,H
(initialize, id, c, rz, re, rφ, aφ, p, fS , fB).
jc
If
only
in the rst
GL,H
If not both messages sell and initialize are received through ˜S∗ in round one,
SimS terminates the simulation.
2. Upon receiving (abort, id) through ˜S∗ in the second round, SimS sends (abort, id)
to FL
(abort, id)
and terminates the simulation.
If SimS receives (buy, id, ˜B) from FL
acceptance of ˜B by running (initialized, id) ← GL,H
icfe. Furthermore, he simulates Π by running (aborted, id) ← GL,H
˜S∗
(active, id, c, rz, re, rφ, aφ, p, fS , fB) ←
icfe in the second round, he simulates the
(initialize, id, c, rz, re, rφ, aφ, p, fS , fB).
(initialize, id, c, rz, re, rφ, aφ, p, fS , fB)
round, SimS
is
received
through
jc
(accept, id).
jc
jc
and
runs
40
jc
jc
jc
(reveal, id, k, d).
3. If ˜B aborts the execution in the third round, FL
icfe leaks (abort, id, ˜B) to SimS .
Then, SimS simulates the abort by executing (aborted, id) ← GL,H
(abort, id)
and terminates the simulation.
Upon receiving (reveal, id, k, d) from ˜S∗ in round 3 such that Open(c, d, k) =
1, SimS simulates the revealing of the encryption key. Therefore, he runs
(revealed, id, k, d) ← GL,H
If no message (reveal, id, k, d) from ˜S∗ is received in round 3 such that
icfe in the name of ˜S∗ and ter-
Open(c, d, k) = 1, SimS sends (abort, id) to FL
minates the simulation.
4. If φ(x) = 1, SimS simulates the nalization of the fair exchange executed by
honest Buyer within the real world by running (sold, id) ← GL,H
(f inalize, id)
and he terminates. Otherwise, if φ(x) (cid:54)= 1, SimS needs to simulate the dispute
resolution sub-protocol. Therefore, he sets R = ∅ and executes the following steps
alternately:
(a) SimS checks whether or not honest Buyer is able to generate a valid proof
of misbehavior by computing π ← GenerateProof(k, φ, R). If π (cid:54)= false,
SimS simulates a valid proof of misbehavior by running GL,H
(prove, id, π)
and terminating the simulation. Otherwise, if π = false, SimS computes
Q ← NextChallenge(φ, R) and simulates a challenge query by running
(challenged, id, Q) ← GL,H
(challenge, id, Q). He sends (f reeze, id, ˜B,|Q|) to
FL
icfe, sets Qr = Q, and continues with step (b) in the next round.
(b) Upon receiving (respond, id, Rq) from ˜S∗, Sim∗ runs (responded, id, Rq) ←
GL,H
icfe, and waits one
round. If ValidateResponse(Qr, Rq, re) = true, SimS continues immediately
with step (a). Otherwise, if ValidateResponse(Qr, Rq, re) = false, he simulates
a complain-message by running GL,H
(complain, id). Furthermore, SimS un-
locks the coins in favor of ˜B by sending (abort, id, 0) in the name of corrupted
Seller ˜S∗ to FL
icfe. Then, he outputs (not sold, id) to ˜S∗ and terminates the
simulation.
If no (respond, id, Rq) message is received from ˜S∗, SimS sends (abort, id, 1)
icfe and waits one round. Then, he runs
in the name of
GL,H
(respond timeout, id), outputs (not sold, id) through ˜S∗, and terminates
the simulation.
(respond, id, Rq), sends (f reeze, id, ˜S∗,|Rq|) to FL
to FL
˜S∗
jc
jc
jc
jc
jc
The dierences to the previous simulator SimS
1 are highlighted in the following. SimS
must provide the correct witness x to FL
icfe in round 1. To this end, he makes use of the
observability property of the global random oracle H. The same argumentation as in [14]
is used to show the indistinguishability. By querying H(observe), SimS obtains a list of all
queries executed by the environment beforehand. The goal of the simulator is to nd out
the encryption key used by Z to create z.
The initialize-message received from Z through S∗ in the rst round contains a commitment
value c to the used encryption key. Two cases can be distinguished. Either the environment
Z created the commitment correctly or the value c is not a valid commitment.
the Commit(k)-
algorithm, it posed a query to H beforehand. Therefore, the set Qid queried by H(observe)
contains a tuple (k||d, c). SimS uses the Dec-algorithm to extract the correct witness x the
same way as honest Buyer does after the encryption key is revealed in the protocol execution.
Honest Buyer uses the revealed key in round 3 to decrypt z. Hence, it is only possible for Z
to distinguish these two executions if Z nds a collision of the hash function, i.e., it nds
two distinct tuples (k, d) and (k(cid:48), d(cid:48)) such that Open(c, d, k) = Open(c, d(cid:48), k(cid:48)) = 1. Based on
commitment
environment
created
using
case
the
the
In
41
jc
icfe
the binding property of the commitment scheme, this is not possible except with negligi-
ble probability. Hence, if the commitment was created correctly, the environment Z cannot
distinguish between the hybrid and the ideal world execution as long as the commitment
scheme is binding.
Now, considering the case that the environment computed the commitment value c incor-
rectly. In this case, Z has to guess a key k and an opening value d such that Open(c, d, k) = 1.
The Open-algorithm only returns 1, if H returns c on input (k||d). Since the random oracle
H samples the query response randomly over {0, 1}µ, the probability to correctly guess k
2µ , which is negligible for large µ. Suppose Z is not able to guess k and d correctly,
and d is 1
GL,H
does not accept the reveal -message from S∗ in the hybrid world and honest Buyer
can abort the protocol execution in order to get his money back. In the ideal world, SimS
simulates the exact same behavior. If he does not receive a reveal -message from Z through
˜S∗ in round 3 such that the Open-algorithm outputs 1, he sends an abort-message to FL
in the name of ˜S∗. This message instructs the ideal functionality to unfreeze the money in
favor of B.
icfe in the rst round equals the witness x,
SimS gets rid of the abort-message in (4a) after the honest Buyer created a valid proof
of misbehavior. Without the abort-message, the Payout-phase of FL
icfe is triggered which
checks φ(x). Based on the fact that honest Buyer is only able to create a valid proof if the
output of the evaluation is 0, FL