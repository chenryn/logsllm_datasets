### 百万合约之母以太坊的漏洞攻防术（下集）：权限控制漏洞

#### 3.2.5.3 权限控制不当与滥用

**权限控制不当**

在EOS平台中，入口函数 `apply` 通常用于验证发送者的身份。如果错误地使用了 `if (code == receiver)` 进行判断，可能会导致身份认证被绕过。具体案例可参考[EOS菠菜应用篇](https://mp.weixin.qq.com/s/QAvFyfAetlwF3Vow-liEew)中的 `apply` 函数部分。

权限控制不当的表现形式多样。例如，在2020年8月5日，Opyn合约遭受黑客攻击，原因是 `vaultToExerciseFrom` 的校验存在缺陷。该检查未验证 `vaultToExerciseFrom` 是否为调用者自己，而是简单地检查是否创建了 vault，这使得攻击者可以任意传入已创建的 vault 地址来通过检查。

**合约滥用用户权限**

滥用权限是指合约申请用户的授权后，合约创建者或开发者可以自主更新成恶意版本，并利用用户的授权进行恶意操作。如果合约升级没有适当的管控，用户可能无感知地面临安全风险。例如，EOS平台中的 `eosio.code` 权限问题，该权限是 dawn4.0 后新增的内部特殊权限，用于加强 inline action 的安全性。inline action 是一个智能合约调用另一个智能合约的过程，需要向用户申请 `eosio.code` 权限。即使授权版本的合约经过审计，也无法保证后续升级后的合约不会作恶。

在DeFi领域，也存在类似的问题。DeFi合约可能会为了方便操纵用户的资产而请求授权。例如，[这笔交易](https://etherscan.io/tx/0x419d17e216cda75dd9635a752e9aedb8f43ed4bfe31a6f75ed8923779c73eb6e)显示地址 `0x3693` 授权给 `Uniswap V2: Router 2` 合约无限动用其 USDT 的权力。这种情况下，如果合约所有者作恶或合约存在漏洞，用户可能会失去全部的 USDT。

为了避免滥用授权带来的风险，用户应谨慎授权，避免授予无限权限，并定期回收不需要的权限。项目方也应尽量最小化请求用户权限，避免请求无限权限。

## 3.3 平台特性漏洞类型

一些区块链平台的特性可能导致安全问题，支持这些特性的平台需特别注意。

### 3.3.1 重入(Re-entrancy)漏洞

重入漏洞首先在以太坊平台上被发现。具体案例可参考[百万合约之母以太坊的漏洞攻防术（上集）](https://mp.weixin.qq.com/s/hi2xigJFtHXbscATbXsAng)中的重入漏洞部分。虽然只要有外部调用就存在重入的可能，但在正常情况下，调用外部函数时会进行代码审计，且外部函数无法预见调用者的函数名，因此仅通过外部调用进行重入攻击较为困难。然而，以太坊平台还支持 `fallback` 特性，使得重入攻击变得更为容易：

1. 当找不到匹配的函数名时，默认调用 `fallback`。
2. 转账操作默认调用 `fallback`。

除了 `fallback`，合约升级也可能导致重入攻击。审计版本可能是正常的，但后来悄悄升级为恶意版本。如果其他平台支持无感升级，重入的风险将非常大。

### 3.3.2 提前交易(Front-running)漏洞

提前交易是指攻击者通过某些手段让自己的交易优先执行。具体案例可参考[百万合约之母以太坊的漏洞攻防术（上集）](https://mp.weixin.qq.com/s/hi2xigJFtHXbscATbXsAng)中的提前交易部分。交易顺序通常由以下三种方式决定：

1. **手续费**：手续费高的交易优先执行。
2. **先进先出**：先接收到的交易优先执行。
3. **共识节点排序**：使用PBFT等共识协议时，交易顺序由主节点决定。

如果交易顺序可以被人为操控，则存在提前交易的风险。

### 3.3.3 延迟交易(Delayed-transaction)漏洞

EOS平台支持延迟交易特性，通过设置 `delay_sec` 让交易在指定时间触发执行。如果 `delay_sec = 0`，由于EOS采用FIFO策略，这些延迟交易会在其他交易之前执行。大量 `delay_sec = 0` 的延迟交易可以发起DoS攻击。具体案例可参考[EOS菠菜应用篇](https://mp.weixin.qq.com/s/QAvFyfAetlwF3Vow-liEew)中的DoS漏洞/交易延迟漏洞部分。

### 3.3.4 回滚(Rollback)漏洞

回滚特性允许在函数执行失败时回滚到初始状态。在以太坊平台，可以通过 `require()`、`assert()` 和 `revert()` 触发回滚；在EOS平台，可以通过 `eosio_assert()` 触发回滚。攻击者可以利用这些方式在不符合自身利益时回滚交易，从而实现持续盈利。具体案例可参考[百万合约之母以太坊的漏洞攻防术（上集）](https://mp.weixin.qq.com/s/hi2xigJFtHXbscATbXsAng)和[EOS菠菜应用篇](https://mp.weixin.qq.com/s/QAvFyfAetlwF3Vow-liEew)中的回滚漏洞部分。

## 3.4 充值场景漏洞类型

充值场景多发生在向交易所或游戏项目方充值的过程中。目前已发现三类主要漏洞：假充值、假通知和假代币。这些漏洞都是利用交易所或项目方校验逻辑存在的漏洞，以零成本获得充值。

### 3.4.1 假充值漏洞

假充值漏洞是指交易所给用户充值的余额与实际收到的余额不符，通常是实际收到的金额少于给用户充值的金额，导致交易所损失。这类漏洞的主要原因是交易所没有正确校验充值结果。例如，在以太坊平台上，错误地认为交易回执中的 `status = true` 即表示充值成功，但实际上 `status = true` 只表示没有抛出异常，即使充值失败，`status` 也可能为 `true`。