Cardoso, J. Adaptive Algorithm to Predict the QoS of Web Processes and Workflows. In International Conference on
Computational Intelligence (ICCI 2004), pages 490-493, Istanbul, Turkey, ISBN: 975-98458-1-4, 2004.
Adaptive Algorithm to Predict the QoS of Web
Processes and Workflows
Jorge Cardoso
specification language.
Abstract—Workflow Management Systems (WfMS) allow It is highly desirable and important to develop prediction
organizations to streamline and automate business processes and algorithms that could be easily adapted to reflect the patterns
reengineer their structure. One important requirement for this type of present in a process specification language. Adaptable
system is the management and computation of the Quality of Service
prediction algorithms for QoS computation can be dynamically
(QoS) of processes and workflows. Currently, a range of Web
changed to cope with the introduction of new patterns. The
processes and workflow languages exist. Each language can be
characterized by the set of patterns they support. Developing and development of such algorithms is the main objective of this
implementing a suitable and generic algorithm to compute the QoS of paper.
processes that have been designed using different languages is a This paper is structured as follows. In Section 2, we discuss
difficult task. This is because some patterns are specific to particular the basis of algorithms to compute and predict the QoS of
process languages and new patterns may be introduced in future
processes. Namely, we present a static algorithm which can be
versions of a language. In this paper, we describe an adaptive
used to compute and predict the QoS of processes, the SWR
algorithm implemented to cope with these two problems. The
algorithm is called adaptive since it can be dynamically changed as algorithm, and discuss the inherent need for adaptive
the patterns of a process language also change. algorithms. Section 3 discusses the characteristics of static and
adaptive QoS prediction algorithms. We present an adaptive
Keywords—Quality of Service, Web processes, Web services, version of the SWR algorithm which is more suitable for
Workflows. current WfMSs. Finally, section 4 presents our conclusions.
I. INTRODUCTION
II. QOS PREDICTION ALGORITHMS
Wi th the mergence of Web services, workflow
The design and composition of processes cannot be
management systems have become essential to support,
undertaken while ignoring the importance of QoS
manage, and enact workflows and Web processes, both
measurements. The management of QoS directly impacts the
between enterprises and within the enterprise [1].
success of organizations participating in e-commerce.
The management of the QoS of Web processes is an
One important requirement of algorithms to compute the
important requirement for organizations operating in modern
QoS of Web processes is the ability to automatically compute
markets involving e-commerce and e-business activities using
the QoS of Web processes based on the QoS of process
distributed Web services interactions.
components (i.e., Web services). This feature is important,
The implementation of QoS management support involves
especially for large processes that in some cases may contain
the development of integrated solutions composed of four
hundreds of Web services. A manual computation is neither
modules: specification, prediction, monitoring, and control [2].
realistic nor viable.
In this paper, we turn our attention to the development of
prediction algorithms. Prediction algorithms are important A. Describing the structure of a process
since they allow the computation of a Web process QoS before Web process, workflows and processes in general can be
making the process available to its customers. specified using specification languages such as BPEL4WS and
Currently there is no agreement on the patterns or control- WSFL. A Web process schema is the actual topology of a
flow pattern that should be part of Web processes or process, that is, the sequence of Web services which must be
workflows languages [3]. Therefore, prediction algorithms performed in order to accomplish an organizational goal. Web
need to be tailored to fit the patterns of specific process process and processes in general can be specified using a
specification languages. As a result, slightly different specification language which include a set of fundamental
implementations of the same prediction algorithm to compute patterns. An example of a Web process is illustrated in Fig. 1.
the QoS of processes need to be developed for each process
Manuscript received October 29, 2004.
J. Cardoso is with the Department of Mathematics and Engineering,
University of Madeira, Funchal, 9000-019 Portugal (Phone: 291-705-156;
Fax: 291-705-199; e-mail: PI:EMAIL).
1
Cardoso, J. Adaptive Algorithm to Predict the QoS of Web Processes and Workflows. In International Conference on
Computational Intelligence (ICCI 2004), pages 490-493, Istanbul, Turkey, ISBN: 975-98458-1-4, 2004.
•• •• that are part of the METEOR [6] workflow language. The
AApppprroovvee algorithm and the rules are hard-coded and cannot be changed
HHoommee LLooaann
•• ⊕⊕ •• •• ⊕⊕ •• easily. We will see in the next section that this is a limitation
that should be overcome.
CChheecckk RReejjeecctt NNoottiiffyy
HHoommee LLooaann HHoommee LLooaann HHoommee LLooaann
•• •• CClliieenntt D. The need for an adaptive algorithm
AApppprroovvee
•• •• •• ⊕⊕ •• •• HHoommee LLooaann CCoonnddiittiioonnaallllyy ⊕⊕ •• A large number of process specification languages exist
AArrcchhiivvee nowadays. While some of these languages have existed for
FFiillll CChheecckk CChheecckk NNoottiiffyy AApppplliiccaattiioonn
LLooaann LLooaann EEdduuccaattiioonn LLooaann EEdduuccaattiioonn LLooaann more than a decade now, there is a lack of consensus as to
RReeqquueesstt TTyyppee CClliieenntt
what constitutes a Web process specification. A modest
•• ⊕⊕ HHooAA mmpppp eerr oo LLvv ooee aann ⊕⊕ agreement has been reached as to what should be key
CChheecckk NNoottiiffyy
CCaarr LLooaann CCaarr LLooaann components of a process specification language [3].
CClliieenntt
RReejjeecctt
CCaarr LLooaann Process specification languages, such as workflow
FIGURE I. Example of a Web process languages, can de described based on the control flow
constructs that they allow to be modeled. These constructs
A Web service with more than one outgoing transition can
have been denominated patterns [7]. Patterns describe control
be classified as an AND-split or XOR-split. AND-split Web
flow dependencies which can be modeled using a particular
services enable all their outgoing transitions after completing
process modeling language and address business requirements.
their execution. AND-split Web services enable only one
It is important to realize that patterns are derived from
outgoing transition after completing their execution. And-split
business requirements. Depending on the application domain it
Web services are represented with a ‘•’ and XOR-split Web
may be essential to create additional patterns to represent and
services are represented with a ‘⊕’. A Web service with more
handle particular types of control flow structures. When new
than one incoming transition can be classified as an and-join or
patterns are needed to design processes that require a specific
XOR-join. AND-join Web services start their execution when
set of requirements, the QoS of the newly created process can
all their incoming transitions are enabled. XOR-join Web
no longer be computed and analyzed using a static algorithm.
services are executed as soon as one of the incoming
Computation is not feasible since new patterns and rules
transitions is enabled. As with AND-split and XOR-split Web
govern the process specification. One obvious solution is to
services, AND-join Web services and XOR-join Web services
rewrite and recompile the algorithm to cope with the newly
are represented with the symbol ‘•’ and ‘⊕’, respectively.
introduced patterns. Another more attractive solution would be
B. Computing Web processes’ QoS to use an adaptive algorithm which could accept new patterns
We identify two methods which can be used to compute the as they are needed for a particular application domain.
overall QoS of processes: mathematical modeling and In the next section we demonstrate how such an adaptive
simulation. Simulation will not be discussed in this paper and algorithm to compute the QoS of Web processes can be
the reader is referred to [4] for the description of simulation designed and implemented.
analysis techniques and systems.
Mathematical modeling methods formally describe the III. FROM A STATIC TO AN ADAPTIVE QOS PREDICTION
formulae to compute QoS metrics among Web services. In the ALGORITHM
next section, we present an algorithm that we have developed In this section we present two versions of the SWR
to automatically compute the overall QoS of a process. algorithm. The first version is a static version of the algorithm.
Any modification or adaptation to support new process
C. The SWR algorithm
patterns requires recoding and recompiling the algorithm. The
To compute QoS metrics for Web processes based on Web
second version of the algorithm is adaptive in the sense that
service’s QoS metrics the Stochastic Workflow Reduction
new patterns can be dynamically added or retracted without
(SWR) algorithm [5] can be used. While the algorithm we
the need to recompile or rebuild the algorithm.
have developed was initially implemented for workflows, it
can also be applied to Web processes. A. SWR algorithm: The static version
The SWR algorithm repeatedly applies a set of reduction Comprehensive solutions to the difficult problems
rules to a Web process until only one Web service remains. encountered in synthesizing QoS for composite Web services
Each time a reduction rule is applied, the process structure (Web processes) are discussed in detail [8], which presents the
changes. After several iterations only one Web service will SWR algorithm. This algorithm is able to compute metrics
remain. When this state is reached, the remaining Web service such as the response time (T), cost (C) and reliability (R).
contains the QoS metrics corresponding to the Web process The SWR algorithm has six reduction rules (sequential,
under analysis. parallel, conditional, fault-tolerant, loop, and network) hard-
The algorithm uses a predefined set of six reduction rules coded and cannot be changed easily, they are static and so is
because a vast majority of workflow systems support them [3]. the algorithm.
The algorithm has been designed for a specific set of patterns As an illustration, we will show how reduction works for a
2
Cardoso, J. Adaptive Algorithm to Predict the QoS of Web Processes and Workflows. In International Conference on
Computational Intelligence (ICCI 2004), pages 490-493, Istanbul, Turkey, ISBN: 975-98458-1-4, 2004.
parallel system. Fig. II shows how a system of parallel Web webservice( archive_application ).
services t , t , …, t , an AND-split Web service t , and an
1 2 n a
Start service and end service. The predicates for these two
AND-join Web service t can be reduced to a sequence of
b
elements are and . For example,
three Web services t , t , and t . In this reduction, the start/1 end/1