title:What happened in my network: mining network events from router syslogs
author:Tongqing Qiu and
Zihui Ge and
Dan Pei and
Jia Wang and
Jun (Jim) Xu
What Happened in my Network? Mining Network Events
from Router Syslogs
Tongqing Qiu
Georgia Tech
Atlanta, GA
PI:EMAIL
Zihui Ge
Dan Pei
AT&T Labs – Research
AT&T Labs – Research
Florham Park, NJ
PI:EMAIL
Florham Park, NJ
PI:EMAIL
Jia Wang
AT&T Labs – Research
Florham Park, NJ
PI:EMAIL
∗
Jun (Jim) Xu
Georgia Tech
Atlanta, GA
PI:EMAIL
ABSTRACT
Router syslogs are messages that a router logs to describe a wide
range of events observed by it. They are considered one of the most
valuable data sources for monitoring network health and for trou-
bleshooting network faults and performance anomalies. However,
router syslog messages are essentially free-form text with only a
minimal structure, and their formats vary among different vendors
and router OSes. Furthermore, since router syslogs are aimed for
tracking and debugging router software/hardware problems, they
are often too low-level from network service management perspec-
tives. Due to their sheer volume (e.g., millions per day in a large
ISP network), detailed router syslog messages are typically exam-
ined only when required by an on-going troubleshooting investiga-
tion or when given a narrow time range and a speciﬁc router under
suspicion. Automated systems based on router syslogs on the other
hand tend to focus on a subset of the mission critical messages (e.g.,
relating to network fault) to avoid dealing with the full diversity and
complexity of syslog messages. In this project, we design a Sys-
logDigest system that can automatically transform and compress
such low-level minimally-structured syslog messages into mean-
ingful and prioritized high-level network events, using powerful
data mining techniques tailored to our problem domain. These
events are three orders of magnitude fewer in number and have
much better usability than raw syslog messages. We demonstrate
that they provide critical input to network troubleshooting, and net-
work health monitoring and visualization.
Categories and Subject Descriptors
[Computer
C.2.3
System Organization]:
Communication Networks—Network Operations
Computer-
∗This work was supported in part by NSF grant CNS-0905169,
funded under the American Recovery and Reinvestment Act of
2009 (Public Law 111-5), and NSF grant CNS-0716423.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
IMC’10, November 1–3, 2010, Melbourne, Australia.
Copyright 2010 ACM 978-1-4503-0057-5/10/11 ...$10.00.
General Terms
Management, Performance
Keywords
Syslog, Data Mining, Troubleshooting
1.
INTRODUCTION
Router syslogs are messages that a router logs to describe a wide
range of events observed by it. Although router syslogs are pri-
marily designed and intended for router vendors to track and de-
bug router software/hardware problems, they are also widely used
by the network service providers as one of the most valuable data
sources in monitoring network health and in troubleshooting net-
work faults and performance anomalies. However, working with
raw syslog messages is not easy from network service manage-
ment prospectives. First, router syslog messages are essentially
free-form text with only a minimal structure. The type of infor-
mation that is logged and its formats vary among different vendors
and router operating systems. Second, router syslog messages are
often too low-level. They do not directly translate into what actu-
ally happened in the network (i.e., network events) without mean-
ingful abstraction and aggregation. Third, not every router syslog
message is an indication of an occurrence of an incident that could
potentially impact network services. For example, some router sys-
log messages are generated purely for debugging purposes and have
no implications on network services.
Although large ISP (Internet Service Provider) network, con-
sisting of thousands of routers, is expected to observe millions of
information-rich syslog message per day, the lack of sentence struc-
tures in log messages and relational structures across messages pre-
vents router syslogs from being utilized to its fullest extent in var-
ious network management applications. Network monitoring sys-
tems typically rely on the input of domain knowledge to be able
to focus on a rather small (yetdeemed important) subset of syslog
messages. For example, commercial network management tools
such as Lonix [1] and NetCool [2] focus on a small set of mes-
sages concerning network faults. The syntax and the relations of
these syslog messages are explicitly captured to allow for auto-
mated parsing and understanding. When certain patterns of sys-
log messages are observed in the network, alarms are triggered and
operation tickets are issued. The parsers and the message relation-
ship models therein need to be constantly updated to keep up with
network changes. For example, routers upgraded to a new operat-
472ing system may introduce new syslog message formats and hence
require a new parser. Network issues can also ﬂy under the radar
if they do not match syslog patterns already programmed. Mean-
while, when troubleshooting a network event, network operators
have to focus on a narrow time-window and a speciﬁc router in
examining the raw syslog messages in detail, in order to avoid be-
ing overwhelmed by the number of syslog messages. It is a very
time-consuming and inefﬁcient process when a complicated net-
work incident involves a large number of messages. Moreover, by
limiting to a small scope, operators lose the sight of “big picture”,
such as the information regarding the frequency or the scope of
the kind of network events under investigation. Finally, network
auditing and trend analysis systems have to rely on rather simple
frequency statistics when it comes to router syslogs. For example,
MERCURY [15] detects network behavior changes due to network
upgrades by tracking the level-shift of message frequencies of in-
dividual syslogs. Knowing the relationship across syslog messages
would make the result much more meaningful.
In this work, we focus on proactively mining network events
from router syslogs. In particular, we design an automated system
(called SyslogDigest) that transforms and compresses massive low-
level minimally-structured syslog messages into a small number of
meaningful and prioritized high-level network events. SyslogDi-
gest is vendor/network independent and does not require domain
knowledge on expected network behaviors. It automatically iden-
tiﬁes signatures of different types of syslog messages in terms of
both their syntax and temporal patterns (e.g., interarrival time of
each type of syslog messages). In addition, SyslogDigest learns as-
sociation rules between different types of syslog messages both on
the same router and across routers. The combination of the signa-
tures and association rules of syslog messages enables us to group
them into meaningful network events. Furthermore, SyslogDigest
prioritizes network events using a number of severity/importance
measures. This allows network operators to quickly identify and
focus on important network events. More importantly, this enables
complex network troubleshooting, in which thousands to tens of
thousands of syslog messages on multiple routers may be related
to a single network event and may need to be identiﬁed out of mil-
lions of syslog messages for examination. SyslogDigest system-
atically classiﬁes and groups these syslog messages into a single
meaningful event, making obsolete the long and error-prone man-
ual grouping process in the current practice. This automated group-
ing capability not only enables monitoring overall network health
and tracking the appearance and evolvement of network events, but
also allows for much better network visualization, since visualizing
such network events provides a much clearer and more accurate big
picture of what happened in the network than visualizing raw sys-
log messages.
It is also worth noting that, SyslogDigest greatly alleviates our
reliance on the domain knowledge of (human) network operators
in interpreting syslog messages. Instead, SyslogDigest is able to
learn signatures and rules that capture how the network behaves
over time. That is, SyslogDigest automatically learns network do-
main knowledge directly from the data. Such domain knowledge
not only tells us what happens in the network, but also provides di-
rect insights on “how the network behaves” vs. “how the network
should behave”. In addition, external domain knowledge, if avail-
able, can be easily input into SyslogDigest to further enhance or
customize the system.
We apply SyslogDigest to router syslog messages collected from
two large operational IP networks: one tier-1 ISP backbone net-
work and one large IPTV backbone network. We show that Sys-
logDigest outputs prioritized network events that are over three or-
ders of magnitude fewer in number and have much better usabil-
ity than raw syslog messages. Using real applications, we further
demonstrate that they provide critical input to not only network
troubleshooting but also network health monitoring and visualiza-
tion.
To summarize, we make four major contributions in this paper.
1. We designed an automated tool SyslogDigest that trans-
forms massive volume of router syslog messages into a much
smaller number of meaningful network events.
2. We developed effective techniques tailored to our problem
domain to systematically identify signatures of syslog mes-
sages, learn association rules that capture network behaviors
over time, group relevant raw syslog messages across multi-
ple routers into network events, and label and prioritize net-
work events based on their nature and severities.
3. We conducted large-scale experiments on real router syslog
data collected from two large operational IP networks and
demonstrated that SyslogDigest is able to transform millions
of syslog messages into network events that are over three
orders of magnitude fewer in number and smaller in size.
The remainder of this paper is organized as follows. Section 2
describes the syntax and semantics of router syslogs. Section 3
presents an overview of SyslogDigest system and Section 4 de-
scribes the detailed methodologies it uses. Section 5 presents the
evaluation results based on router syslog data collected from two
large operational IP networks. We present some applications of
SyslogDigest in Section 6 and related work in Section 7. Finally,
Section 8 concludes the paper.
2. ROUTER SYSLOG
In this section, we provide an overview of the syntax and se-
mantics of router syslog messages. Similar to syslogs on com-
puter servers, router syslogs are the messages that routers gener-
ate to record the hardware and software conditions observed by
them, such as link and protocol-related state changes (e.g., down
or up), alarming environmental measurements (e.g., high voltage
or temperature), and warning messages (e.g., triggered when BGP
neighbors send more routes than the router is conﬁgured to allow).
Although syslog messages are intended primarily for tracking and
debugging router software and hardware problems, they can be ex-
tremely valuable to network operators in managing networked ser-
vices and troubleshooting network incidents. For this reason sys-
logs are usually collected on all routers inside a network, especially
an ISP network, and a syslog (transmission) protocol [6] is stan-
dardized and widely supported by router vendors to transmit syslog
messages from routers to one or more syslog collector(s).
While the syslog protocol – for transmitting syslog messages –
is standardized, the syslog messages themselves are not. They are
essentially free-form texts, the syntax and semantics of which vary
among router vendors and router operating systems. Table 1 shows
a few examples of syslog messages from two router vendors. We
can observe only a minimal structure in a syslog message: (1) a
timestamp indicating when the message is generated, (2) the iden-
tiﬁer of the router that generates the message (called originating
router), (3) message type, also known as the error code, indicating
the nature of the problem, and (4) detailed message information
generated by the router OS. In order to correlate syslog messages
across routers, the clocks (for generating the timestamps) on these
routers need to be synchronized often through the Network Time
Protocol (NTP), which is the case in our studies.
473Table 1: Syslog messages example
Vendor Message timestamp
V1
V1
V1
2010-01-10 00:00:15
2010-01-10 00:00:15
2010-01-10 00:00:15
Router Message-type/error-code
r1
r5
r8
LINEPROTO-5-UPDOWN
LINK-3-UPDOWN
SYS-1-CPURISINGTHRESHOLD
V1
V2
V2
V2
2010-01-10 00:00:26
2010-01-10 00:00:23
2010-01-10 00:00:24
2010-01-10 00:00:26
r8
ra
rb
ra
SYS-1-CPUFALLINGTHRESHOLD
SNMP-WARNING-linkDown
SVCMGR-MAJOR-sapPortStateChangeProcessed
SNMP-WARNING-linkup
Detailed message
Line protocol on Interface Serial13/0.10/ 20:0, changed state to down
Interface Serial2/0.10/2:0, changed state to down
Threshold: Total CPU Utilization(Total/Intr): 95%/1%, Top 3 processes
(Pid/Util): 2/71%, 8/6%, 7/3%
Threshold: Total CPU Utilization(Total/Intr) 30%/1%.
Interface 0/0/1 is not operational
The status of all affected SAPs on port 1/1/1 has been updated.
Interface 0/1/0 is operational
The detailed message information (aforementioned ﬁeld (4))
in router syslogs is quite ad hoc in nature. They are simply
free-form texts “printf"-ed by router operating systems with de-
tailed information such as the location, state/status, or measure-
ment readings of a alarming condition embedded in them. For ex-
ample, in Table 1 line 1, (Line protocol on Interface
Serial13/0.10/20:0, changed state to down), the
Serial13/0.10/20:0 part
indicates the network interface
at which the layer-2 line protocol (PPP) has been impacted
and the down part indicates the status/state of the line proto-
col. The rest of it, Line protocol on Interface ...,
changed state to ..., can be viewed as the sub type for
this type of syslog message. It is worth noting that there are of-
ten multiple sub types associated with the same syslog type (error
code). The combination of syslog type and this sub type can be
used as a template to uniquely identify the class of network condi-
tions that the syslog message describes.
In some syslog versions, the error code ﬁeld contains severity in-
formation. For example, in the ﬁrst four lines (vendor V1 syslogs)
of Table 1, the number between two “-” symbols is the severity level
of the messages – the smaller the number is, the more important the
message is perceived by the originating router. It is important to
note, however, that the severity level of a syslog message is as-
signed by the equipment vendor based on the perceived impact of
the observed event on the performance and proper functioning of
the local network elements. It does not in general translate into the
severity of the impact that this event will have on the performance
and proper functioning of the overall network and therefore cannot
be directly used for to rank-order the importance of events for net-
work service management purposes. For example, syslog messages
concerning router CPU utilization rising above or falling below a
given threshold (lines 3 and 4 in Table 1) have been considered
more important (smaller in severity number) than those concerning
an adjacent link changing its state to “down" (line 2 in Table 1) in
some router OS. Network operators would certainly disagree in this
case.
Router conﬁguration tools usually allow network operators to
specify a threshold such that potential syslog messages with sever-
ity levels above or equal to it will be recorded. In this study, we col-
lect syslogs at such “informational” level (usually the default set-
ting). Depending on the network conditions, the amount of router
syslog messages in an operational network varies.
In the large-
scale ISP network (hundreds to thousands routers) that we study in
the paper, there are typically hundreds of thousands to millions of
messages per day.
3. SYSTEM DESIGN OVERVIEW
The goal of the SyslogDigest system is to automatically trans-
form and compress low-level minimally-structured syslog mes-
sages into meaningful and prioritized high-level network events.
Our key observation is that one single (sometimes intermittent)
condition on a network element, such as an network interface,
router hardware, and router software, can often trigger a large num-
ber of different messages across time, protocol layers, and routers.
For example, messages m1 to m16 in Table 2 are all triggered by
the same network condition: the link between routers r1 and r2
ﬂapped a couple of times. Based on this observation, our basic idea
is to automatically construct a network event by grouping together
related messages, i.e., those triggered by the same network condi-
tion, and then prioritize network events using a number of sever-
ity/importance measures. Our goal is to be able to automatically
determine such connections or the lack of them among syslog mes-
sages without relying on domain knowledge being manually input
and updated (by network operators). SyslogDigest accomplishes
this goal through a two-step process. In this ﬁrst step, an ofﬂine
domain knowledge learning component automatically extracts rel-
evant domain knowledge from raw syslog data. In the second step,
an online processing component will rely on such acquired domain
knowledge and other available information (e.g., temporal close-
ness of messages) to ﬁnally group related messages into high-level
events and present the prioritized results. In the rest of this section,
we will provide a high-level overview of SyslogDigest’s architec-
ture, shown in Figure 1, and the functionalities of its components,
by working out a running example shown in Table 2, where 16
syslog messages are eventually grouped into 1 high-level network
event.
3.1 Ofﬂine Domain Knowledge Learning
that adopt different
The ofﬂine domain knowledge learning component automati-
cally acquires domain knowledge such as the syntax/semantics of
syslog messages, the relationships among various message tem-
plates, and the detailed location information pertained from raw
syslog data. The ofﬂine domain knowledge learning proceeds as
follows.
First,
it automatically learns message templates from the
historical syslog messages. To deal with the challenge posed
from different vendors
by minimally-structured messages
and/or different OS versions
template