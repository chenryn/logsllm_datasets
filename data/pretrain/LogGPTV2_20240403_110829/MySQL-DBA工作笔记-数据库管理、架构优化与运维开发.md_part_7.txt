整个过程就顺利完成了，后面想继续修改密码，有以下几种写法，大同小异。
Query OK, 0 rows affected,"1 warning (0.01 sec)
> set password=password('mysql');
row in set (0.00
修改密码如下：
server_id
server_id
11
搭建从库
Binlog_Do_DB:
 Position: 646
(value
log_bin_basename
binlog_format
log_bin_index
log_bin
参数名称
'130_58')
130
:c6d66211-a645-11e6-a2b6-782bcb472f63:1-135
sec)
不搭建从库的环境就是不完整的。
表1-4
/home/mysql/mysql-bin.index
/home/mysql/mysql-bin
参数值
第1章MySQL发展和技术选型|
120
ROW
ON
23
---
## Page 46
24丨MySQL DBA工作笔记：数据库管理、架构优化与运维开发
File: mysql-bin.000001
@@GLOBAL.GTID_EXECUTED is empty.
the GTIDs of 
-default-character-set=utf8 --single-transaction -R --triggers -q --all-
一个是横线，一个是下画线。
[root@teststd
 Binloq Iqnore DB:
再次查看，从库上 show master 就没有 GTID 的干扰了。
QueryOK，
在从库做一个reset 操作即可。
1rowinset
原因很简单，因为我们这是一个从库，show master 应该不会有 GTID 的信息。
从库应用可能会有如下这样的错误。
[root@testdb2
接下来，我们在主库全库导出。
[root@teststd mysql]# mysqladmin varlgrep server_id 
在参数文件/etc/my.cnf里面是:server-id=58,但是查看参数设置可以看到是 server_id,
从库使用GTID 的方式自动应用。
主库配置一个同步用户：
reset master;
Binlog_Ignore_DB:
mysql 
BY
.dmp.gz
D
-uroot
---
## Page 47
个 bug 的感觉。
动一会儿就会自动停止，
 8fc8d9ac-a62b-11e6-a3ee-a4badb1b4a00:1-1090
more updates
*hwslavestatus***+
详细的日志如下：
案例1-1：MySQL 频繁停库的问题分析
slave 就这样搭建好了，简单的验证就是使用 show slave status 了，如下：
>start slave;
CHANGE MASTER TO
最近碰到了一个蛮有意思的问题，是一个网友向我咨询，说他的 MySQL 服务总是启
然后启动从库的日志应用即可。
Slave_SQL_Running_State:
MASTER AUTO_POSITION=1;
MASTER_USER='repl'
MASTER_HOST=
ASTER
Replicate
 SQL_Remaining_Delay:
Master_Retry_Count:
Read _Master_
Retrieved_Gtid_Set: 8fc8d9ac-a62b-11e6-a3ee-a4badb1b4a00:1090
Slave_SQL_Running:
Master_Server_Id:
 Relay_Log_Space:
Master_Log_File:
Relay
Slave_Io_State:
Auto_Position:
Relay_Log_Pos:
Master_UUID:
Master_Port:
，看看能不能给出一些建议。当我看到日志时，隐隐感觉这是一
'10.127.128.99',
sec)
Log_
File:
File:
(0.01 sec)
 mysql.slave_master_info
 8fc8d9ac-a62b-11e6-a3ee-a4badb1b4a00
20
10.127.128.99
NULL
926
717
teststd-relay-bin.000002
60
Waiting for master to send event
86400
Slave
Yes
 mysql-bin.000009
row
has read all relay log;waiting for
第1章MySQL发展和技术选型|
25
---
## Page 48
26丨MySQLDBA工作笔记：数据库管理、架构优化与运维开发
但是觉得不应该是问题的根本原因。
'INNODB_SYS_FOREIGN_COLS'
clients
events
gracefully
replication
distril
configuration
information.
'INNODB_SYS_DATAFILES
information in the master info repository is not secure and is therefore not
ecomme
仔细查看这个日志，会发现里面没有任何Error 的字样，虽有几个 warming 的信息，
2017-04-13
2017-04-13
2017-04-13 16:26:01 40180 [Note] Event Scheduler: Purging the queue.0
Version:
我觉得这句日志是查找问题的一个重点方向，怎么两个 thread 就可以优雅的 die了呢？
Giving 2 client threads a chance to die gracefully
（1）这是一个从库，可以从 relay 的信息看出。
通过上面的日志，我们会得到一些基本的信息：
2017-04-13
所以我准备从几个角度来查看：
加黑的那句：
（2）停库的时候看起来是一个顺序的过程，不像是掉电宕机或异常crash 的特点。
buti
code:
ended
log/relay-l
-13 16:25:29 40180[Note]
'5.6.20-1og'
316:26:01
 does not guarantee that the relay log info will be consistent,
Please
16:26:01
16:26:01
16:25:29
16:26:01
:25:29
16:26:01
consider
'mysql-bin.000105'
40180
40180
40180
40180
40180
40180
40180
40180
socket:
[Note]
using
40180
40180
40180
[Note]
[Note]
[Note]
[Note]
[Warning]
[Note]
Slave I/o thread exiting, read up to log
'/tmp/mysql.sock'
the
 Shutting down slave threads
Giving 2 client threads a chance to di
Binlog end
 Slave SQL thread exiting, replication
/mysql
Slave
Forcefully disconnecting 0 remaining
[Note]
USER
[Note]
[Note]
Storing
/mysql_base/bin/mysqld:
at
tion
base/bin/mysqld: Normal shutdowr
I/o thread:
position
'mysql-bin.000105'
and
in the MySQL Manual for more
PASSWORD
MySQL
Shutting
Shutting
Shutting
634901970, relay log
 initialized,
user
port: 6607
connected to master
'partition'
name
down
down
down
readyfo
or
starting
Source
plugin
plugin
plugin
---
## Page 49
本，如果得到的结果为0，就会杀掉MySQL 服务，然后等待5秒，重启服务。
第一个是一个 check_mysql.sh 这样的脚本，
是不是系统层面设置了什么任务之类的。
很像是手工指定生成的文件。查看里面的信息，发现是检测 MySQL 运行状态。由此我想
是 bug 有些牵强。
的通，因为根据这位网友的反馈，这台服务器早上还好好的，下午就是这样了，所以说
buffer_pool_size从 40G 设置为 4G，结果问题依旧。
置也蛮合理，也没有生疏的参数设置，所以这个地方也无从下手，不过还是试了试把
使用率几乎为0，还是带着试试看的心态调试了下，设置 swapniess=1，结果问题依旧。
我看到里面还指定了很多细节的网络设置，我纠结是否是 swap 有影响，尽管目前 swap
置和负载都不高。
第四个角度，查找 bug，还真找到一个，bug 编号是 71104，但是这个问题很难解释
第三个角度，数据库参数的设置，这个我看 buffer_pool_size 是 40G，其他的参数设
第二个角度，我查看了内核参数的设置，主要的 shmmax 这些参数设置都没有问题，
这里的关键就是第一部分的内容了，如果连接失败，后面的步骤肯定会出问题，也
#!/bin/bash
使用crontab -1查看，果然看到两个，
大家细细看看这个脚本有没有问题，基本的思路就是：连接到MySQL，查看一下版
这时，我突然看到日志目录下有一个文件，这个文件一看就不是MySQL系统生成的，
我觉得得换个思路，还有哪些盲点没有考虑到。
带着疑问，我尝试了启动加上skip-slave-start，无济于事。
第一个角度，
（4）查找bug
（3）是否是数据库参数的设置
（2）
（1）
 datetime=^date +"%F %H:%M:%s"`
是否是内核参数的设置问题
是否是系统层面的异常
echo
sleep 5;
#date +"%F %H:%M:%S"
then
else
-eq0]
 echo "$datetime mysql is running" >>/mysql_log/check_ mysql.log
我查看了文件系统是ext4，内存是64G，剩余内存还很多，系统的配
pkill mysql;
>>/mysql_log/check_mysql.log
第2个就是这个检查服务状态的任务脚本，而
内容如下：
 -e "select version();" &>/dev/null
第1章MySQL发展和技术选型|27
ey/r
---
## Page 50
28|MySQL DBA工作笔记：数据库管理、架构优化与运维开发
找问题的过程不简单。
接异常出了这个意料之外的问题。
就是会直接杀掉MySQL。
和这位网友确认，他上午是修改了一个数据，这个用户的密码应该修改了，导致连
这个问题的分析也给我好好上了一课，很多复杂的问题，原因其实很简单，但是查