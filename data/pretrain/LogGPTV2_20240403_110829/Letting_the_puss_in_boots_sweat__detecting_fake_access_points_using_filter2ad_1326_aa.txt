title:Letting the puss in boots sweat: detecting fake access points using
dependency of clock skews on temperature
author:Fabian Lanze and
Andriy Panchenko and
Benjamin Braatz and
Thomas Engel
Letting the Puss in Boots Sweat: Detecting Fake Access
Points using Dependency of Clock Skews on Temperature
Fabian Lanze
University of Luxembourg
PI:EMAIL
Benjamin Braatz
University of Luxembourg
PI:EMAIL
ABSTRACT
The only available IEEE 802.11 network identiﬁers (i. e., the
network name and the MAC address) can be easily spoofed.
Consequently, an attacker is able to fake a real hotspot and
attract its traﬃc. By this means, the attacker can intercept,
collect, or change users’ traﬃc (often even if it is encrypted).
In this paper, we describe an eﬃcient method for detect-
ing the replacement of access points (APs) by passive re-
mote physical device ﬁngerprinting. The main feature of our
ﬁngerprinting approach is the clock skew—an unavoidable
phenomenon that causes clocks to run at minuscule yet re-
motely observable diﬀerent speeds—which is extracted from
information contained in beacon frames. We are the ﬁrst
to achieve a high discriminability of devices by completely
eliminating the ﬁngerprinters’ inﬂuence and considering the
clock skew’s dependency on temperature.
Finally, we develop a method for reliable detection of the
presence of AP impostors that works without explicit tem-
perature information. Compared to the best state-of-the-
art approach, our method improves detection accuracy from
about 30 % to 90 % without generating any traﬃc and re-
quires less than one minute to collect a suﬃcient number
of observations. Our approach yields a strong feature for
passive remote physical device ﬁngerprinting in wireless net-
works.
Categories and Subject Descriptors
C.2.0 [COMPUTER-COMMUNICATION
NETWORKS]: General—Security and protection; C.2.3
[COMPUTER-COMMUNICATION NETWORKS]:
Network Operations—Public networks
Keywords
Evil Twin Attack; Security; Wireless Access Point; Fake
Access Point; 802.11; Device Fingerprinting; Clock Skew
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from Permissions@acm.org.
ASIA CCS’14, June 4–6, 2014, Kyoto, Japan.
Copyright 2014 ACM 978-1-4503-2800-5/14/06 ...$15.00.
http://dx.doi.org/10.1145/2590296.2590333.
Andriy Panchenko
University of Luxembourg
PI:EMAIL
Thomas Engel
University of Luxembourg
PI:EMAIL
1.
INTRODUCTION
In recent years, Internet usage shifted from ﬁxed locations
to mobile environments. Nowadays, people are used to be-
ing online all the time, independent of their location, using
laptops, smartphones, or tablets. Wi-Fi access points (APs)
oﬀer fast and cost-eﬀective Internet connectivity. They are
available almost everywhere, in oﬃces, on university cam-
puses, and in public places such as caf´es, shopping malls,
hotels, or airports. Although mobile cellular networks (e. g.,
3G) have gained an increasing inﬂuence, the importance of
Wi-Fi networks remains crucial. Generally, they provide
faster connectivity, oﬀer service whenever mobile networks
are unavailable, overloaded, or overpriced (e. g., in roam-
ing). They are indispensable for devices that do not have
hardware to access mobile cellular networks, e. g., laptops or
many tablets.
The only identiﬁers provided by the IEEE 801.11 stan-
dard for a user to verify the authenticity of an AP are its
SSID (i. e., the network name) and its BSSID (i. e., the MAC
address). Since these can easily be spoofed, an attacker is
able to fake an AP without the user being able to notice (in
the literature/media, this attack is also know as evil twin
[23, 9] and has gained recent attention1).
Once a user is connected to a faked AP, the attacker can
mount various attacks, including interception, collection, or
manipulation of transmitted data. This even remains pos-
sible if the user explicitly enables encryption, e. g., by using
SSL. Since the attacker already established his AP as in-
termediary, he can easily act as man-in-the-middle. Nowa-
days, this does not require special skills as deployable tools
such as SSLstrip2 (which transparently removes SSL encryp-
tion) and BurpProxy3 (which can create faked certiﬁcates
on-the-ﬂy) are freely available and easy to use. Since most
users incautiously accept unsigned or wrongly-signed SSL
certiﬁcates [26, 6], malicious access points are able to con-
duct man-in-the-middle attacks on encrypted traﬃc (i. e.,
can read and modify the data) and to hijack sessions.
The danger of the described attacks arises from their sim-
plicity: All common mobile operating systems including An-
droid and iOS are capable of creating a wireless AP. Hence,
this process can be be performed directly from smartphones,
1http://www.abc15.com/dpp/money/consumer/alerts/
alert-thieves-create-fake-hotel-wi-fi-hot-spots-
to-steal-your-information
2http://www.thoughtcrime.org/software/sslstrip/
3http://portswigger.net/burp/proxy.html
3without attracting the attention of anybody in the vicinity.
Additionally, fully-automated tools are available that are ca-
pable of spooﬁng APs, e. g., rfakeap4, airsnarf 5, jasager 6.
Hence, we focus on attackers who mount short-duration
evil twin attacks by using oﬀ-the-shelf hardware. Scenar-
ios where an attacker needs to extensively modify hardware
components are therefore out of the scope of this work.
The methods described in the 802.11 Robust Secure Net-
work Association (RSNA) speciﬁcation propose to solve this
problem with cryptographic primitives using an additional
authentication server [14]. This requires careful setup and
maintenance. Operators of open hotspots in particular have
no incentive to deploy such a mechanism and, hence, the
solution is rarely used. The usage of virtual private net-
works (VPNs) also does not provide a satisfactory solution
to the problem as, besides similar certiﬁcate-based attacks
like those on SSL, it is possible to kill the VPN session (e. g.,
by dropping management packets) so that the connection
falls back to plain mode, typically without explicit notiﬁca-
tion.
Many public hotspots deploy a web-based authentication
scheme which is additionally used for accounting of clients.
Nevertheless, such a mechanism does not provide any secu-
rity for the user at all. The attacker could simply clone the
login page and accept any credentials. Furthermore the at-
tacker learns the legitimate credentials provided by users for
further misuse. If pre-shared key (PSK) based encryption
(such as WPA) is applied and the attacker knows the PSK,
he can still mount the attack. Note that for public hotspots
the PSK must be distributed to clients by some means or
another (e. g., on a receipt).
Therefore, there is a strong need to equip users with ad-
ditional tools and methods for veriﬁcation of the APs they
connect to, in order to make sure that these are authen-
tic and not traps operated by an attacker. In our targeted
solution, a user has access to a trusted third party that ver-
iﬁes the ﬁngerprint of an authentic hotspot. Consequently,
there is a vital necessity for tools that enable remote device
identiﬁcation and can be applied to currently deployed net-
works without modifying standardized protocols and with-
out requiring the AP operator to cooperate or modify the
deployment.
In this paper, we focus on remote device ﬁngerprinting
based on clock skews. This is an unavoidable physical phe-
nomenon that causes crystal oscillator based clocks to run
with minuscule yet measurable deviations in speed. The fre-
quencies of crystal oscillators are determined by their man-
ufacturing properties (e. g., the cut angle) and the crystal
type. Inevitable inaccuracies during the production process
lead to slight variations of the frequency, even for crystals
produced within the same series [11].
Clock skew is based purely on physical properties, which
makes it an attractive feature for physical device ﬁngerprint-
ing. It is typically measured in parts per million (ppm).
For measuring the clock skew of a remote clock, it is es-
sential to have access to precise timestamps generated by
that clock. In the Wi-Fi scenario we beneﬁt from the fact
that APs emit management frames (called beacons) at a high
frequency. These frames contain a high-precision timestamp
4http://rfakeap.tuxfamily.org/
5http://airsnarf.shmoo.com/
6http://www.digininja.org/jasager/
with microsecond resolution, which is used for the Timing
Synchronization Function (TSF) to synchronize sending and
receiving slots on the shared wireless medium in the IEEE
802.11 communication process. All stations in a basic service
set (BSS), i. e., all clients associated with an AP, synchro-
nize their local TSF timer to the time broadcasted in bea-
con frames. Beacon frames are usually sent every 100 ms.
By speciﬁcation, they are not subject to any delay before
sending. Therefore, they serve as a reliable basis for clock
skew estimation.
Contribution:
We present a novel approach to reliably detect a spoofed
access point utilizing the fact that, in general, other APs
are simultaneously reachable in the vicinity. In detail, our
contributions are as follows:
• We are the ﬁrst to intensively study the inﬂuence of
changing room temperatures on APs’ clock skews in
the context of ﬁngerprinting. As we will show, APs
exhibit signiﬁcantly diﬀerent temperature dependency
characteristics. By learning these, the discriminability
of clock-skew-based ﬁngerprints (in terms of recogni-
tion interval sizes) can be improved by more than 75 %.
• We completely eliminate the inﬂuence of the ﬁnger-
printer (both skew and its dependency on tempera-
ture) on the ﬁngerprint. This allows comparison of
ﬁngerprints produced by arbitrary ﬁngerprinters. We
substantiate this claim mathematically.
• We develop a method for fake AP detection which ex-
ploits temperature dependency without the need for
explicit temperature knowledge and which provides sim-
ilar accuracy. Here, a manageably small number of
around 50 training observations is suﬃcient.
• Finally, we are the ﬁrst to propose a practical solution
to detect faked APs with a high probability.
2. RELATED WORK
Due to the severity of the underlying problem, the ﬁeld of
remote physical device ﬁngerprinting has attracted consid-
erable research interest in recent years and several methods
have been proposed. We distinguish between active and pas-
sive techniques.
Active techniques explicitly interact with the device that
is ﬁngerprinted, e. g., by sending regular or manipulated
packets and evaluating the response. Inherently, such meth-
ods can be detected by the ﬁngerprintee or even cause in-
terference with the regular communication. Sieka [25] eval-
uates timing patterns in the authentication procedure of an
AP using two diﬀerent measuring devices for ﬁngerprinting.
Bratus et al. [3] propose a technique called active behav-
ioral ﬁngerprinting, which is based on malformed stimuli
response, i. e., how devices react to non-standard and mal-
formed 802.11 frames.
Passive methods, on the other hand, do not require any
cooperation with other nodes as they merely observe pass-
ing traﬃc without interaction or modiﬁcation. Hence, these
methods are by design undetectable and do not interfere
with the regular communication. Therefore, we direct our
focus to passive techniques.
4The accuracy of remote wireless device ﬁngerprinting can
be optimized to more than 99 % if dedicated hardware is
applied. Using, e. g., radio frequency ﬁngerprinting (RFF)
[24, 10, 4] such techniques investigate physical properties
of the radio signal with specialized measurement devices.
However, these methods are not applicable in our context
as we target methods that work on regular mobile clients,
which are not equipped with such hardware.
Another class of passive approaches does not aim to iden-
tify unique devices (APs) but rather unique device types [8]
or device driver types [7]. Those methods do not satisfy our
requirement of diﬀerentiating between APs with the same
hardware and ﬁrmware.
Bahl et al. [2] identify the presence of two APs with the
same BSSID. The method uses sequence numbers in 802.11
frame headers but is not able to recognize which of the APs
is faked and is only applicable if both APs are active simulta-
neously in a nearby location. Gonzales et al. [9] present two