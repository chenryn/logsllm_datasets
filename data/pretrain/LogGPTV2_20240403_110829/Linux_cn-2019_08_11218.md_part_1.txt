---
author: Seth Kenlon
category: 软件开发
comments_data:
- date: '2022-11-03 06:57:43'
  message: AM_INIT_AUTOMAKE是可以有参数的，其参数作为调用automake的参数，比如这样写：AM_INIT_AUTOMAKE([-Wall])。
  postip: 36.5.119.117
  username: 来自安徽合肥的 Chrome 103.0|Windows 10 用户
count:
  commentnum: 1
  favtimes: 1
  likes: 0
  sharetimes: 0
  viewnum: 8847
date: '2019-08-13 09:48:42'
editorchoice: false
excerpt: 如果你仍未使用过 Autotools，那么这篇文章将改变你递交代码的方式。
fromurl: https://opensource.com/article/19/7/introduction-gnu-autotools
id: 11218
islctt: true
largepic: /data/attachment/album/201908/13/094739ahql50gx9x10y157.jpg
permalink: /article-11218-1.html
pic: /data/attachment/album/201908/13/094739ahql50gx9x10y157.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: 如果你仍未使用过 Autotools，那么这篇文章将改变你递交代码的方式。
tags:
- Autotools
- make
thumb: false
title: GNU Autotools 介绍
titlepic: true
translator: wxy
updated: '2019-08-13 09:48:42'
---
> 
> 如果你仍未使用过 Autotools，那么这篇文章将改变你递交代码的方式。
> 
> 
> 
![](/data/attachment/album/201908/13/094739ahql50gx9x10y157.jpg)
你有没有下载过流行的软件项目的源代码，要求你输入几乎是仪式般的 `./configure; make && make install` 命令序列来构建和安装它？如果是这样，你已经使用过 [GNU Autotools](https://www.gnu.org/software/automake/faq/autotools-faq.html) 了。如果你曾经研究过这样的项目所附带的一些文件，你可能会对这种构建系统的显而易见的复杂性感到害怕。
好的消息是，GNU Autotools 的设置要比你想象的要简单得多，GNU Autotools 本身可以为你生成这些上千行的配置文件。是的，你可以编写 20 或 30 行安装代码，并免费获得其他 4,000 行。
### Autotools 工作方式
如果你是初次使用 Linux 的用户，正在寻找有关如何安装应用程序的信息，那么你不必阅读本文！如果你想研究如何构建软件，欢迎阅读它；但如果你只是要安装一个新应用程序，请阅读我在[在 Linux 上安装应用程序](/article-9486-1.html)的文章。
对于开发人员来说，Autotools 是一种管理和打包源代码的快捷方式，以便用户可以编译和安装软件。 Autotools 也得到了主要打包格式（如 DEB 和 RPM）的良好支持，因此软件存储库的维护者可以轻松管理使用 Autotools 构建的项目。
Autotools 工作步骤：
1. 首先，在 `./configure` 步骤中，Autotools 扫描宿主机系统（即当前正在运行的计算机）以发现默认设置。默认设置包括支持库所在的位置，以及新软件应放在系统上的位置。
2. 接下来，在 `make` 步骤中，Autotools 通常通过将人类可读的源代码转换为机器语言来构建应用程序。
3. 最后，在 `make install` 步骤中，Autotools 将其构建好的文件复制到计算机上（在配置阶段检测到）的相应位置。
这个过程看起来很简单，和你使用 Autotools 的步骤一样。
### Autotools 的优势
GNU Autotools 是我们大多数人认为理所当然的重要软件。与 [GCC（GNU 编译器集合）](https://en.wikipedia.org/wiki/GNU_Compiler_Collection)一起，Autotools 是支持将自由软件构建和安装到正在运行的系统的脚手架。如果你正在运行 [POSIX](https://en.wikipedia.org/wiki/POSIX) 系统，可以毫不保守地说，你的计算机上的操作系统里大多数可运行软件都是这些这样构建的。
即使是你的项目是个玩具项目不是操作系统，你可能会认为 Autotools 对你的需求来说太过分了。但是，尽管它的名气很大，Autotools 有许多可能对你有益的小功能，即使你的项目只是一个相对简单的应用程序或一系列脚本。
#### 可移植性
首先，Autotools 考虑到了可移植性。虽然它无法使你的项目在所有 POSIX 平台上工作（这取决于你，编码的人），但 Autotools 可以确保你标记为要安装的文件安装到已知平台上最合理的位置。而且由于 Autotools，高级用户可以轻松地根据他们自己的系统情况定制和覆盖任何非最佳设定。
使用 Autotools，你只要知道需要将文件安装到哪个常规位置就行了。它会处理其他一切。不需要可能破坏未经测试的操作系统的定制安装脚本。
#### 打包
Autotools 也得到了很好的支持。将一个带有 Autotools 的项目交给一个发行版打包者，无论他们是打包成 RPM、DEB、TGZ 还是其他任何东西，都很简单。打包工具知道 Autotools，因此可能不需要修补、魔改或调整。在许多情况下，将 Autotools 项目结合到流程中甚至可以实现自动化。
### 如何使用 Autotools
要使用 Autotools，必须先安装它。你的发行版可能提供一个单个的软件包来帮助开发人员构建项目，或者它可能为每个组件提供了单独的软件包，因此你可能需要在你的平台上进行一些研究以发现需要安装的软件包。
Autotools 的组件是：
* `automake`
* `autoconf`
* `automake`
* `make`
虽然你可能需要安装项目所需的编译器（例如 GCC），但 Autotools 可以很好地处理不需要编译的脚本或二进制文件。实际上，Autotools 对于此类项目非常有用，因为它提供了一个 `make uninstall` 脚本，以便于删除。
安装了所有组件之后，现在让我们了解一下你的项目文件的组成结构。
#### Autotools 项目结构
GNU Autotools 有非常具体的预期规范，如果你经常下载和构建源代码，可能大多数都很熟悉。首先，源代码本身应该位于一个名为 `src` 的子目录中。
你的项目不必遵循所有这些预期规范，但如果你将文件放在非标准位置（从 Autotools 的角度来看），那么你将不得不稍后在 `Makefile` 中对其进行调整。
此外，这些文件是必需的：
* `NEWS`
* `README`
* `AUTHORS`
* `ChangeLog`
你不必主动使用这些文件，它们可以是包含所有信息的单个汇总文档（如 `README.md`）的符号链接，但它们必须存在。
#### Autotools 配置
在你的项目根目录下创建一个名为 `configure.ac` 的文件。`autoconf` 使用此文件来创建用户在构建之前运行的 `configure` shell 脚本。该文件必须至少包含 `AC_INIT` 和 `AC_OUTPUT` [M4 宏](https://www.gnu.org/software/autoconf/manual/autoconf-2.67/html_node/Initializing-configure.html)。你不需要了解有关 M4 语言的任何信息就可以使用这些宏；它们已经为你编写好了，并且所有与 Autotools 相关的内容都在该文档中定义好了。
在你喜欢的文本编辑器中打开该文件。`AC_INIT` 宏可以包括包名称、版本、报告错误的电子邮件地址、项目 URL 以及可选的源 TAR 文件名称等参数。
[AC\_OUTPUT](https://www.gnu.org/software/autoconf/manual/autoconf-2.67/html_node/Output.html#Output) 宏更简单，不用任何参数。
```
AC_INIT([penguin], [2019.3.6], [[PI:EMAIL][8]])
AC_OUTPUT
```
如果你此刻运行 `autoconf`，会依据你的 `configure.ac` 文件生成一个 `configure` 脚本，它是可以运行的。但是，也就是能运行而已，因为到目前为止你所做的就是定义项目的元数据，并要求创建一个配置脚本。
你必须在 `configure.ac` 文件中调用的下一个宏是创建 [Makefile](https://www.gnu.org/software/make/manual/html_node/Introduction.html) 的函数。 `Makefile` 会告诉 `make` 命令做什么（通常是如何编译和链接程序）。
创建 `Makefile` 的宏是 `AM_INIT_AUTOMAKE`，它不接受任何参数，而 `AC_CONFIG_FILES` 接受的参数是你要输出的文件的名称。
最后，你必须添加一个宏来考虑你的项目所需的编译器。你使用的宏显然取决于你的项目。如果你的项目是用 C++ 编写的，那么适当的宏是 `AC_PROG_CXX`，而用 C 编写的项目需要 `AC_PROG_CC`，依此类推，详见 Autoconf 文档中的 [Building Programs and Libraries](https://www.gnu.org/software/automake/manual/html_node/Programs.html#Programs) 部分。