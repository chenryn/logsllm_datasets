## PostgreSQL pg_idkit: 各种 UUID 生成方法函数大集合                
### 作者                                                                  
digoal                                                                  
### 日期                                                                  
2023-12-24                                                              
### 标签                                                                  
PostgreSQL , PolarDB , DuckDB , pg_idkit , uuid , 集合                                 
----                                                                  
## 背景     
pg_idkit是rust写的一个PostgreSQL UUID生成方法函数大集合插件.    
https://github.com/VADOSWARE/pg_idkit    
后期将集成到宇宙最强PostgreSQL学习镜像中.     
[《2023-PostgreSQL/DuckDB/MySQL/PolarDB-X Docker镜像学习环境 ARM64版, 已集成热门插件和工具》](../202308/20230814_02.md)           
[《2023-PostgreSQL/DuckDB/MySQL/PolarDB-X Docker镜像学习环境 AMD64版, 已集成热门插件和工具》](../202307/20230710_03.md)           
## 安装pg_idkit    
克隆项目    
```    
docker exec -ti pg bash    
cd /tmp    
git clone --depth 1 https://github.com/VADOSWARE/pg_idkit.git    
```    
配置cargo源, 参考: https://mirrors.ustc.edu.cn/help/crates.io-index.html    
```    
# export CARGO_HOME=/root      
# mkdir -vp ${CARGO_HOME:-$HOME/.cargo}      
# vi ${CARGO_HOME:-$HOME/.cargo}/config      
[source.crates-io]      
replace-with = 'ustc'      
[source.ustc]      
registry = "sparse+https://mirrors.ustc.edu.cn/crates.io-index/"      
```    
安装pg_idkit插件    
```    
cd /tmp/pg_idkit    
cargo install cargo-get cargo-pgrx just    
# 如果对pgrx有版本要求请参考修改, 例如:
  # grep pgrx Cargo.toml 
  # cargo install --locked --version 0.10.2 cargo-pgrx
cargo pgrx init    # create PGRX_HOME 后, 立即ctrl^c 退出    
cargo pgrx init --pg14=`which pg_config`    # 不用管报警    
PGRX_IGNORE_RUST_VERSIONS=y cargo pgrx install --pg-config `which pg_config`     
```    
```    
  Installing extension    
     Copying control file to /usr/share/postgresql/14/extension/pg_idkit.control    
     Copying shared library to /usr/lib/postgresql/14/lib/pg_idkit.so    
 Discovering SQL entities    
  Discovered 35 SQL entities: 0 schemas (0 unique), 35 functions, 0 types, 0 enums, 0 sqls, 0 ords, 0 hashes, 0 aggregates, 0 triggers    
     Writing SQL entities to /usr/share/postgresql/14/extension/pg_idkit--0.2.1.sql    
    Finished installing pg_idkit    
```    
使用pg_idkit:    
```    
postgres=# create extension pg_idkit ;    
CREATE EXTENSION    
postgres=# \dx    
                                                  List of installed extensions    
   Name   | Version |   Schema   |                                         Description                                              
----------+---------+------------+----------------------------------------------------------------------------------------------    
 pg_idkit | 0.2.1   | public     | multi-tool for generating new/niche universally unique identifiers (ex. UUIDv6, ULID, KSUID)    
 plpgsql  | 1.0     | pg_catalog | PL/pgSQL procedural language    
(2 rows)    
postgres=# \df    
                                          List of functions    
 Schema |                Name                 |     Result data type     | Argument data types | Type     
--------+-------------------------------------+--------------------------+---------------------+------    
 public | idkit_cuid2_generate                | text                     |                     | func    
 public | idkit_cuid2_generate_text           | text                     |                     | func    
 public | idkit_cuid_extract_timestamptz      | timestamp with time zone | val text            | func    
 public | idkit_cuid_generate                 | text                     |                     | func    
 public | idkit_cuid_generate_text            | text                     |                     | func    
 public | idkit_ksuid_extract_timestamptz     | timestamp with time zone | val text            | func    
 public | idkit_ksuid_generate                | text                     |                     | func    
 public | idkit_ksuid_generate_text           | text                     |                     | func    
 public | idkit_ksuidms_extract_timestamptz   | timestamp with time zone | val text            | func    
 public | idkit_ksuidms_generate              | text                     |                     | func    
 public | idkit_ksuidms_generate_text         | text                     |                     | func    
 public | idkit_nanoid_generate               | text                     |                     | func    
 public | idkit_nanoid_generate_text          | text                     |                     | func    
 public | idkit_pushid_generate               | text                     |                     | func    
 public | idkit_pushid_generate_text          | text                     |                     | func    
 public | idkit_timeflake_extract_timestamptz | timestamp with time zone | val text            | func    
 public | idkit_timeflake_generate            | text                     |                     | func    
 public | idkit_timeflake_generate_text       | text                     |                     | func    
 public | idkit_timeflake_generate_uuid       | uuid                     |                     | func    
 public | idkit_ulid_extract_timestamptz      | timestamp with time zone | val text            | func    
 public | idkit_ulid_from_uuid                | text                     | uuid uuid           | func    
 public | idkit_ulid_from_uuid_text           | text                     | uuid text           | func    
 public | idkit_ulid_generate                 | text                     |                     | func    
 public | idkit_ulid_generate_text            | text                     |                     | func    
 public | idkit_uuidv6_extract_timestamptz    | timestamp with time zone | val text            | func    
 public | idkit_uuidv6_generate               | text                     |                     | func    
 public | idkit_uuidv6_generate_text          | text                     |                     | func    
 public | idkit_uuidv6_generate_uuid          | uuid                     |                     | func    
 public | idkit_uuidv7_extract_timestamptz    | timestamp with time zone | val text            | func    
 public | idkit_uuidv7_generate               | text                     |                     | func    
 public | idkit_uuidv7_generate_text          | text                     |                     | func    
 public | idkit_uuidv7_generate_uuid          | uuid                     |                     | func    
 public | idkit_xid_extract_timestamptz       | timestamp with time zone | val text            | func    
 public | idkit_xid_generate                  | text                     |                     | func    
 public | idkit_xid_generate_text             | text                     |                     | func    
(35 rows)    
postgres=# select idkit_ksuidms_generate();    
   idkit_ksuidms_generate        
-----------------------------    
 2ZyFFpsNplQfZLzuFpXvi0vSEhH    
(1 row)    
postgres=# select idkit_ksuidms_generate();    
   idkit_ksuidms_generate        
-----------------------------    
 2ZyFG60s2KHkrAnwHgDG7UFIbmj    
(1 row)    
```    
# 更多参考pg_idkit README.md    
  🐘 🪪 `pg_idkit`    
```    
postgres=# CREATE EXTENSION pg_idkit;    
CREATE EXTENSION    
postgres=# SELECT idkit_uuidv7_generate();    
        idkit_uuidv7_generate    
--------------------------------------    
 018c106f-9304-79bb-b5be-4483b92b036c    
```    
## Description    
`pg_idkit` is a [Postgres][postgres] extension for generating many popular types of identifiers:    
| Methodology               | Function                                    | Crate                                | Description                                              |    
|---------------------------|---------------------------------------------|--------------------------------------|----------------------------------------------------------|    
| [UUID v6][uuidv6]         | `idkit_uuidv6_generate()`                   | [`uuidv6`][crate-uuidv6]             | UUID v6 ([RFC 4122][rfc-4122-update])                    |    
|                           | `idkit_uuidv6_generate_uuid()`              |                                      |                                                          |    
|                           | `idkit_uuidv6_extract_timestamptz(TEXT)`    |                                      |                                                          |    
| [UUID v7][uuidv7]         | `idkit_uuidv7_generate()`                   | [`uuid7`][crate-uuid7]               | UUID v7 ([RFC 4122][rfc-4122-update])                    |    
|                           | `idkit_uuidv7_generate_uuid()`              |                                      |                                                          |    
|                           | `idkit_uuidv7_extract_timestamptz(TEXT)`    |                                      |                                                          |    
| [nanoid][nanoid]          | `idkit_nanoid_generate()`                   | [`nanoid`][crate-nanoid]             | NanoID, developed by [Andrey Sitnik][github-ai]          |    
| [ksuid][ksuid]            | `idkit_ksuid_generate()`                    | [`svix-ksuid`][crate-svix-ksuid]     | Created by [Segment][segment]                            |    
|                           | `idkit_ksuid_extract_timestamptz(TEXT)`     |                                      |                                                          |    
| [ksuid][ksuid]            | `idkit_ksuidms_generate()`                  | [`svix-ksuid`][crate-svix-ksuid]     | Same as `ksuid` but with millisecond precision           |    
|                           | `idkit_ksuidms_extract_timestamptz(TEXT)`   |                                      |                                                          |    
| [ulid][ulid]              | `idkit_ulid_generate()`                     | [`ulid`][crate-ulid]                 | Unique, lexicographically sortable identifiers           |    
|                           | `idkit_ulid_extract_timestamptz(TEXT)`      |                                      |                                                          |    
| [Timeflake][timeflake]    | `idkit_timeflake_generate()`                | [`timeflake-rs`][crate-timeflake-rs] | Twitter's Snowflake + Instagram's ID + Firebase's PushID |    
|                           | `idkit_timeflake_extract_timestamptz(TEXT)` |                                      |                                                          |    
| [PushID][pushid]          | `idkit_pushid_generate()`                   | [`pushid`][crate-pushid]             | Google Firebase's PushID                                 |    
| [xid][xid]                | `idkit_xid_generate()`                      | [`xid`][crate-xid]                   | XID                                                      |    
|                           | `idkit_xid_extract_timestamptz(TEXT)`       |                                      |                                                          |    
| [cuid][cuid] (deprecated) | `idkit_cuid_generate()`                     | [`cuid`][crate-cuid]                 | CUID                                                     |    
|                           | `idkit_cuid_extract_timestamptz(TEXT)`      |                                      |                                                          |    
| [cuid2][cuid2]            | `idkit_cuid2_generate()`                    | [`cuid2`][crate-cuid2]               | CUID2                                                    |    
This Postgres extension is made possible thanks to [`pgrx`][pgrx].    
[crate-uuidv6]: https://crates.io/crates/uuidv6    
[crate-uuid7]: https://crates.io/crates/uuid7    
[crate-nanoid]: https://crates.io/crates/nanoid    
[crate-svix-ksuid]: https://crates.io/crates/svix-ksuid    
[crate-svix-ksuid]: https://crates.io/crates/svix-ksuid    
[crate-ulid]: https://crates.io/crates/ulid    
[crate-timeflake-rs]: https://crates.io/crates/timeflake-rs    
[crate-pushid]: https://crates.io/crates/pushid    
[crate-xid]: https://crates.io/crates/xid    
[crate-cuid]: https://crates.io/crates/cuid    
[crate-cuid2]: https://crates.io/crates/cuid2    
## Quickstart    
You can try out `pg_idkit` incredibly quickly by using `docker`, and a previously [released package of `pg_idkit`][released-packages]:    
```console    
docker run \    
    --rm \    
    -e POSTGRES_PASSWORD=replace_this \    
    -p 5432 \    
    --name pg_idkit \    
    ghcr.io/vadosware/pg_idkit:0.2.1-pg16.1-alpine3.18-amd64    
```    
> [!WARNING]    
> Currently only amd64 (x86_64) images are present/supported (See [`pg_idkit` packages][released-packages]).    
>    
> Work to support more platforms is described in [issue #30](https://github.com/VADOSWARE/pg_idkit/issues/30)    
Once the postgres server is running, open another shell and connect to the dockerized Postgres instance running on port `5432`:    
```console    
➜ docker exec -it pg_idkit psql -U postgres    
psql (16.1)    
Type "help" for help.    
postgres=# CREATE EXTENSION pg_idkit;    
CREATE EXTENSION    
postgres=# SELECT idkit_uuidv7_generate();    
        idkit_uuidv7_generate    
--------------------------------------    
 018c106f-9304-79bb-b5be-4483b92b036c    
(1 row)    
```    
## Installing `pg_idkit`    
📃 From Source    