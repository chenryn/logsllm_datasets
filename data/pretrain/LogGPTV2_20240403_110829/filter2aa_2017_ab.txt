It’s not just webcams. 
This is a 
crematorium.  
On the internet. 
Vulnerability management :  a hard topic 
 ICS help industries make money. Most of the time, by 
producing something. The more « uptime » the ICS has, 
the more money you make. That is why a lot of ICS run 
24/7 
 Each production stop costs money, hence the difficulty 
to regularly apply security patches. 
 Moreover, it is not unusual for ICS vendors to advise 
owner not to install AV software, in order to prevent 
false positives. Fortunately, this situation changes. 
Vulnerability management 
Also, not all plants have the luxury of having 
acceptance/test platform. 
As ICS hardware is much more costly than VMs, 
sometimes security patches must be applied to 
production directly. 
Security in protocols 
ICS devices often use proprietary 
protocols, and there are also several 
standards. 
That is why on a given plant/factory 
ICS, you are likely to find several 
protocols in use. 
We will cover the most used ones. 
ics Protocols 
Modbus 
protocol 
▪
Serial communication protocol invented in 1979 by Schneider Electric 
▪
Developed for industrial application 
▪
Royalty-free 
▪
Now one of the standards for industrial communications 
▪
Master / Slave protocol 
▪
Master must regularly poll the slaves to get 
information 
▪
Modbus addresses are 8 bits long, so only 
247 slaves per master 
▪
There is no object description: a request 
returns a value, without any context or unit 
How it works: 
▪
Clear-text 
▪
No authentication 
Security anyone? 
Modbus 
protocol 
▪
Modbus was originally made for serial communications 
▪
However it is now often used over TCP 
MODBUS/TCP FRAME FORMAT 
Name 
Length  
Function 
Transaction identifier 
2 
For synchronization between server & client 
Protocol identifier 
2 
Zero for Modbus/TCP 
Length field 
2 
Number of remaining bytes in this frame 
Unit identifier 
1 
Slave address (255 if not used) 
Function code 
1 
Function codes as in other variants 
Data bytes or command 
n 
Data as response or commands 
Modbus 
protocol 
▪
The most common Modbus functions allow to read and write data from/to a 
PLC 
▪
Other functions, such as file read and diagnostics functions also exist 
▪
Undocumented Modbus function codes can also be used to perform specific 
actions 
COMMONLY USED MODBUS function codes 
Function name 
Function 
code 
Read coils 
1 
Write single coil 
5 
Read holding registers 
3 
Write single register 
6 
Write multiple registers 
16 
Read/Write multiple registers 
23 
Modbus 
protocol 
ALL documented MODBUS function codes (from wikipedia) 
S7 
protocol 
▪
Proprietary protocol by Siemens 
▪
TCP port 102 
▪
Based on COTP (Connection-Oriented Transport Protocol, RFC905) 
▪
A Wireshark dissector is available in the dev branch 
▪
No security 
▪
New version of the protocol available starting with version 4 and up of the 
PLC firmware : provides mutual authentication and communication 
encryption 
▪
Security features analyzed by Quarkslab, see the talk from SSTIC 
https://www.sstic.org/2015/presentation/analyse_de_scurite_de_technologi
es_propritaires_scada/ 
DNP3 
protocol 
▪
Standard protocol, developped by GE in the 90’s 
▪
Slave/Slave : Information can be share at the initiative of any device 
▪
Layer 2 protocol (just top of physical layer), ported to TCP/IP 
▪
Integrity is verified using CRC 
▪
Data reporting communication : only send the data that has changed 
(simplified), or at the initiative of the PLC/RTU 
▪
Used for smartgrids in the US 
▪
Secure DNP3 introduced in 2007 
▪
Works on serial and TCP versions 
▪
Challenge/response to exchange a session key (using PSK) 
▪
Can be done at startup, every XX minutes, or only for sensitive actions (write 
requests for example) 
▪
There is also an aggressive mode, which can be exploited to perform replay 
attacks 
▪
Possible to use secure DNP3 over TLS 
Profibus 
protocol 
▪
Standard protocol 
▪
Used for communication with field devices (sensors/actuators) 
▪
Uses 4-20mA current loop 
OPC 
protocol 
▪
Standard protocol 
▪
Used to exchange data between ICS and Windows devices 
▪
Works on TCP/IP 
▪
Several variants: 
▪
OPC-DA : Data access, used to gather data from the process control 
▪
OPC A&E : Alarm & Events 
▪
OPC HDA : Historical Data Access 
▪
OPC DX : Data Exchange, allow to exchange data between OPC servers 
▪
OPC Security 
▪
OPC XML-DA 
▪
OPC UA : Unified Architecture, aimed at replacing the others while using a more 
modern Service Oriented Architecture. 
▪
Provides authentication and encryption, probably the future of ICS 
protocols 
#foreverdays 
#foreverdays is a term coined by @reverseics 
Very important concept when talking about ICS 
The highest vulnerabilities are not patched. 
So it is really worth considering the effort of 
patch management of ICS equipement when 
you know  
ICS-CERT listed over 250 attacks on ICS in 2013 
59% of attacks targeted the energy sector 
79 attacks successfully compromised the target 
57 attacks did not succeed in compromising the target 
120 attacks were not identified/investigated 
Quizz! 
Q1 : what are the security 
features of the modbus 
protocol ? 
Q2 : which port is used for 
modbus ? For s7 ? 
Q3 : what is opc mostly used 
for ? 
Q4 : why are some plcs 
exposed to the internet ? 
Programming PLCs 
What is  
A PLC? 
▪
Real-time digital computer used for automation 
▪
Replaces electrical relays 
▪
Lots of analogue or digital inputs & outputs 
▪
Rugged devices (immune to vibration, electrical noise, temperature, dust, …) 
What’s inside ? 
Siemens S7-1200 
A few pics 
of PLCs 
PLC 
programming 
▪
“Ladder Logic” was the first programming language for PLC, as it mimics the 
real-life circuits 
▪
IEC 61131-3 defines 5 programming languages for PLCs 
▪
LD:     Ladder Diagram 
▪
FBD:  Function Block Diagram 
▪
ST:     Structured Text 
▪
IL:      Instruction List 
▪
SFC:  Sequential Function Chart 
Ladder diagram 
example 
Structured text 
example 
(* simple state machine *) 
TxtState := 
STATES[StateMachine]; 
CASE StateMachine OF 
   1: ClosingValve(); 
ELSE 
    ;; BadCase(); 
END_CASE; 
LD     Speed 
         GT     1000 
         JMPCN  VOLTS_OK 
         LD     Volts 
VOLTS_OK LD     1 
         ST     %Q75 
Instruction list 
example 
Programming with 
SoMachine 
▪ SoMachine is the software provided by 
Schneider Electric to program the entry-
level PLCs.  
▪ PLCs used in big plants are usually 
programmed using Unity Pro, for which 
there is no free demo version. 
▪ Fortunately, the way this software work is 
very much the same 
Programming with 
SoMachine 
▪ SoMachine is the software provided by 
Schneider Electric to program the entry-
level PLCs.  
▪ PLCs used in big plants are usually 
programmed using Unity Pro, for which 
there is no free demo version. 
▪ Fortunately, the way this software work is 
very much the same 
PLC 
Programming 
▪ Create a project 
▪ Define the hardware setup 
▪ Create variables 
▪ Define the program 
▪ Test 
▪ Debug 
▪ Push to PLC 
▪ START 
PLC 
Programming 
▪ Production line 
▪ Flipped-over bottles must be put in the tray 
PLC 
Programming 
▪ Another production line 
▪ Display indicates when 10 packages  
▪ A button allows resetting the display 
PLC 
Programming 
▪ The main motor must only start if the oil 
pump is running 
▪ Motor must stop is X3 is pressed 
Quizz! 
Q1 : NAME 2 PLC programming 
languages 
Q2 : what software is used to 
program siemens plcs ? 
Q3 : what are the different 
modules from a plcs ? 
PENTESTING PLCs 
ng  
plcs 
Never do this 
on LIVE production system 
Attacking  
plcs 
Never do this 
on LIVE production systems 
▪ Objective : Identify all exposed services on a device or 
a range of devices 
▪ Often the first step in a pentest 
▪ We will use two tools 
▪ Nmap: The world’s finest port scanner 
▪ PLCSCAN: A reconnaissance tool dedicated to PLCs 
Reconnaissance 
Reconnaissance (Nmap) 
▪ The de-facto tool for port scanning but can be really 
dangerous on ICS 
▪ Two stories from NIST SP800-82 
▪
A ping sweep broke for over 50 000$ in product at a semi-conductor factory 
▪
The blocking of gas distribution for several hours after a pentester went 
slightly off-perimeter during an assessment for a gas company 
▪ Nmap useful setup for ICS scanning 
▪
Reduce scanning speed! Use « --scan-delay=1 » to scan one port 
at a time 
▪
Perform a TCP scan instead of a SYN scan / do not perform UDP scan 
▪
Do not use fingerprinting functions, and manually select scripts (do not 
use “–sC”) 
Reconnaissance (PLCSCAN) 
▪ https://code.google.com/p/plcscan/  
by SCADAStrangeLove (http://scadastrangelove.org/) 
▪ Scans for ports 102 (Siemens) and 502 (Modbus) and 
tries to pull information about the PLC (modules, 
firmware version,…) 
▪ Not exhaustive since not all PLCs use Modbus or are 
Siemens 
▪ What if I told you there was another way… SNMP ? 
Lab Session #1: Analyzing a Modbus communication with 
Wireshark 
▪
Launch Wireshark 
▪
Open “modbus1.pcap” 
▪
Try to understand what’s going on 
▪
What’s the value of register #123 at the end? 
Lab session #2: ModbusPal 
▪ Modbuspal is a modbus simulator 