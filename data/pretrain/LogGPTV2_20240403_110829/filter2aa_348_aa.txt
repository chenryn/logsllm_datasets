S-behinder源码学习
PHP类型
入口
net.rebeyond.behinder.ui.controller.MainController.java  
openshell() 打开一个shell，会创建一个新的线程去管理这个shell，下一步是进入到新的线程当
中 mainWindowController
net.rebeyond.behinder.ui.controller.MainWindowController.java  
这里就是获取一个正常shell的连接，重要的是执行这个 this.doConnect() 方法。而这个方法最
后指向的是 this.currentShellService.doConnect() ，继续跟进。
net.rebeyond.behinder.core.shellService.java  
这里需要关注两个地方就是一些变量表示的含义，之后会频繁用到。第二个就是这个
this.echo(content) 方法。此处会根据我们shell类型的不同进入不同的连接处理逻辑，此处以
PHP 为例，就首先进入到 this.currentType.equals('php') ，首先是生成一个随机字符串
content ，然后进入 this.echo() 方法。
net.rebeyond.behinder.core.shellService.java#echo  
此处的两个关键方法是 Utils.getData() 和 Utils.requestAndParse() 。其中这个 getData 是
用于处理功能模板的，继续跟踪深入。注意传递的参数
net.rebeyond.behinder.utils.Utils.java#getData  
最后这个函数来到了 net.rebeyond.behinder.utils.Utils.java#getData ，此处还是先看一
下传递的参数，然后就是根据不同的shell类型选择处理逻辑，此处还是首先选择 php 。此处，首
先是传递的 className=echo ， 然后调用 Param。getParamedPhp 方法去获取参数列表。
net.rebeyond.behinder.core.Params.java#getParamedPhp  
此处有一个路径寻找的过程，这个路径是事先规定好的。根据我们传递的 className=echo ，去
找到 Echo.php 这个文件，然后将文件读取放入缓冲区 StringBuilder 里面，然后调用
getPhpParams() 方法。
net.rebeyond.behinder.core.Params.java#getPhpParames  
这个 getPhpParams 方法是真正用来获取参数列表，通过正则表达式，之后返回 Echo.php 这个文
件中 main 函数的参数列表。
函数返回，继续执行 getParamedPhp  
此处是根据参数列表来为参数赋值，所有的值都是经过 base64 编码的，最后可以看到 Echo.php
的内容变成了上面这样。最后返回字节码。
程序返回到 getData 方法，继续执行后面的逻辑 
将 Echo.php 的内容 Base64 编码，然后和字符串拼接之后获取字节码，然后再进行 AES 加密处
理，其中使用的 iv 向量全 0 ，将加密内容再进行编码然后，返回
net.rebeyond.behinder.core.shellService.java#echo
net.rebeyond.behinder.core.shellService.java#echo->requestAndParse()  
这个方法是用用于发送请求的，然后将响应分装到 map 当中并且返回。 data 是响应数据，
header 是响应头信息。
请求流量与shell执行过程
首先查看webshell的内容
Echo.php
@error_reporting(0);
function main($content)
{
    $result = array();
    $result["status"] = base64_encode("success");
    $result["msg"] = base64_encode($content);
    $key = $_SESSION['k'];
    echo encrypt(json_encode($result),$key);
}
function encrypt($data,$key)
{
    if(!extension_loaded('openssl'))
        {
            for($i=0;$i
@error_reporting(0);
function main($content)
{
    $result = array();
    $result["status"] = base64_encode("success");
    $result["msg"] = base64_encode($content);
    $key = $_SESSION['k'];
    echo encrypt(json_encode($result),$key);
分析到这里，基本已经知道PHP类型shell的执行流程了，而且此处我们其实可以自己将一些代码
替换，那就可以实现自己想添加或者修改的功能了。
最后再来看一下获取基础信息的 BasicInfo.php  
java类型
}
function encrypt($data,$key)
{
    if(!extension_loaded('openssl'))
    {
        for($i=0;$i<strlen($data);$i++) {
            $data[$i] = $data[$i]^$key[$i+1&15];
        }
        return $data;
    }
    else
    {
        return openssl_encrypt($data, "AES128", $key);
    }
}
$content="YVYwWlpxRENJUnhtTmhJdVdKYVdrSDRjaU5ZbnJoQkpiQnRCSkVwTVVZbE5neGRTTGEwZl
BqVmo0dkFWeHlveDBRNkZ2UlhsN1FlbWpVNmpKT1dwekMwaVYyUDBRY0xxVXNuWHVGMkpnSlBSb1M2dj
NNTHJVM3pmUXFLQVpFMVFsQ3lFQmozdlZDMUd1dzdXRlhuNGROdVYzRmZITEFEeHNIYjFYRHV6b1ZOT1
A4WTJZTDRkTkNpamJlS0E1YmxXdEtXTGlkMTNoT1AxRlFSUTBwVkdOS01vUjNxc0drZHpzazczQ1Y2QU
40SHByUzRrdTRuZ0pKaW12SHFDTmVna3l2N3BHbDJURnRqalpjUW9QRDZIM2gyVEhKT3gwT29zRlFWWU