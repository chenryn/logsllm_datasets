Wi(0, dk) − ¯Wi(0, ¯bk) ≤ (N − 1)Lmax + Lk.
(7)
Case 1: Packet pk of ﬂow i departs GPS: ¯Wi(0, ¯bk) ≤ ¯Wi(0, dk)
holds since ¯bk ≤ dk. From Equation 7, it follows that
Wi(0, dk) − ¯Wi(0, dk) ≤ N Lmax.
Case 2: packet pk of ﬂow i is scheduled in MSFQ : Since
¯bk ≤ dk holds, Wi(0, ¯bk) ≤ Wi(0, dk). From Equation 7, it
follows that
Wi(0, ¯bk) − ¯Wi(0, ¯bk) ≤ N Lmax.
otherwise: ¯bk > dk
We will prove both Case 1 and 2 in showing that for any
τ in [dk, ¯bk],
Wi(0, τ ) − ¯Wi(0, τ ) ≤ N Lmax.
Let pk be the kth packet that is scheduled under MSFQ
There is an interval [t, ¯bk], t  dk.
Thus, for m  dk ≥ di
Then, packet pm is scheduled before packets pm+1,··· , pk
under MSFQ but pm departs after all these packets under
GPS.
If no such integer m exists, this is equivalent to the Case
2.1 in the proof of Theorem 4. Since ¯bk > dk, ag  dk
and as a result any packet MSFQ schedules in [dk, ¯bk] be-
fore scheduling pk must have been completed before pk under
GPS. In [ag, τ ], MSFQ might be servicing at most N−1 max-
imum length packets and pm besides packets pm+1,··· , pk−1
(note that pm is scheduled after pk under GPS). Thus, same
structure from the previous paragraph can be used to show
Wi(0, τ ) − ¯Wi(0, τ ) ≤ N Lmax.
Case 3: an idle ﬂow j, j (cid:10)= i, becomes backlogged at t while
ﬂow i is backlogged in GPS: Let pk be the kth packet of
ﬂow i that completes under GPS. Since the potential slope
decreases of Wi occurs between two consecutive ﬂow i packet
departures from GPS, t is in [dk, dk+1] for some k. The proof
follows since the interval [dk, dk+1] is already covered by the
✷
cases proven above.
6. FAIRNESS
So far, we’ve shown that a (M SF Q , N, r) system closely
approximates a (GP S, 1, N r) system in terms of the delay
a packet can experience (Section 4) and the cumulative ser-
vice a ﬂow receives (Section 5). Another desirable property
is to ensure that the amount of service a ﬂow receives in the
packetized system does not exceed arbitrarily the amount
it would have received under GPS. This property leads to
smoother output and “better” fairness [5]. Few metrics that
quantify fairness are used in the GPS literature [9, 5, 10].
In this paper, we measure the fairness of a packetized dis-
cipline by the maximum diﬀerence of the amount of service
any ﬂow receives within any interval to the one the ﬂow
would have received under GPS. If the maximum diﬀerence
is independent of the set of ﬂows, we say that the packe-
tized discipline provides bounded fairness. MSFQ does not
enjoy this property since there is no constant c for which
¯Wi(t, τ ) ≥ Wi(t, τ ) − c holds for every interval [t, τ ] [15].
Thus MSFQ can largely diverse from the ideal discipline by
being far ahead in the completed work for a ﬂow.
Service disciplines with bounded fairness are especially
desirable for rate adaptive applications and for congestion
control algorithms. Being able to schedule packets much
F1
A
1
F2
2
F3
3
F4
4
F5
5
F6
6
F7
7
F8
8
F9
9
F10
F11 10
F1
F2
F3
F4
F5
F6
F7
F8
F9
F10
F11
DCB
HGFE
I
J
Figure 4: Queued packets at time t=0.
A
B
C
D
E
F
G
H
I
J
1
2
3
4
5
6
7
8
9
10
0
4
8
12
16
20
Figure 5: GPS packet scheduling.
earlier than the reference system, can cause the discipline
to favor some ﬂows and behave in a bursty way over given
periods of time. This problem is addressed by Bennet et al.
in [5] for the single server packetized system (M SF Q , 1, r).
Unfortunately, the clever solution presented by Bennet et
al. does not apply directly to the multi-server case.
Example 3: Consider the case of 11 ﬂows sharing 4 out-
put servers. The ﬁrst of the ﬂows (F1) has a weight of 0.5
while each other ﬂow has a weight of 0.05. At time 0, all
packets have already arrived at the system, ﬂow 1 has 10
packets while the other ﬂows have only one each (Figure
4). For simplicity all packets have the same length of L.
Figure 5 depicts the scheduling in the ideal system. Since
MSFQ schedules packets in increasing order of GPS depar-
ture times, all of ﬂow 1 packets will be scheduled before any
other ﬂow’s. Figure 6 depicts this scenario where it can be
seen that some of ﬂow 1 packets are scheduled much earlier
than the corresponding GPS discipline. For example, packet
J is completed at time 12, that is 8 units earlier than in the
ideal system. It can be shown that this “earliness” can be
arbitrarily large and depends on the number of existing ﬂows
✷
in the system.
A solution to this problem for single WFQ server was pro-
posed by Bennet et al. in [5]. Their method, called WF2Q,
consisted in restricting the packets eligible for scheduling
to only the ones that have already started service in the
GPS system. The scheduling of these packets was still done
according to the WFQ discipline, that is in non-decreasing
order of GPS ﬁnishing times. Conceptually, their method in-
serted a packet regulator at the exit of the ﬂow queues which
delayed the eligibility of the packets to the WFQ scheduler.
Unfortunately, the direct application of this technique to
multi-server systems does not ﬁx the undesired burstiness
problem and moreover, it makes the discipline non-work-
conserving.
A
B
C
D
E
F
G
H
I
J
1
2
3
4
5
6
7
8
9
10
F1 −
F2 −
F3 −
F4 −
F5 −
F6 −
F7 −
F8 −
F9 −
F10 −
F11 −
0
4
8
12
16
20
Figure 6: MSFQ scheduling without eligibility
times.
A
B
C
D
E
F
G
H
I
J
1
2
3
4
5
6
7
8
9
10
F1 −
F2 −
F3 −
F4 −
F5 −
F6 −
F7 −
F8 −
F9 −
F10 −
F11 −
0
4
8
12
16
20
Figure 7: MSFQ scheduling using eligibility times.
An instance of the ﬁrst problem is illustrated by Figure
7, which shows the scheduling output of Example 3 using
a multi-server system with the WF2Q discipline.
It can
be seen that packets from the ﬁrst ﬂow can still experience
transmission periods that are as bursty as the previous case
of Figure 6. Thus, the application of WF2Q to multi-server
case still does not lead to smooth schedules.
To illustrate that this regulator technique results into a
non-work-conserving scheduling discipline, take the case where
a large number of maximum length packets from a single ﬂow
are queued in the system at time t. In the GPS case, they
will be scheduled sequentially at full rate of the server (N r),
irrespective of the weights of the ﬂows. In this scenario, as
Figure 8 shows, the second packet will not be eligible in the
packetized system until the same packet gets scheduled in
GPS, that is at t + Lmax
N r . Therefore, no matter how many
servers there are available until that moment, they will re-
main idle even there’s work to be done in the system. This
GPS
1
2
3
idle
idle
idle
idle
idle
MSFQ
Server1
Server2
Server3
Server4
Server5
Server6
...
ServerN
t
4
1
5
2
6
3
idle
7
...
N
N+1
...
4
5
6
N+1
...
...
N
t+NL
...
max
Figure 8: Non-conserving MSFQ scheduling exam-
ple.
N
(N−1)Lmax
situation will continue to repeat until most of the ﬁrst packet
has been transmitted (t +
) on one of the servers.