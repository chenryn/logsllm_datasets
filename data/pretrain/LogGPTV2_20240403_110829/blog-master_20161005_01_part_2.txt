select id, 'mv_user_membership_'||id mvname from generate_series(0,255) t(id) 
union all 
select id, 'mv_user_membership_rev_'||id mvname from generate_series(0,255) t(id) 
) t 
where mod(abs(id), 256) >= 192 and mod(abs(id), 256) uid2 group by 1,2; 
-- 生成uid2被uid1喜欢信息
insert into user_membership_rev select uid2, uid1 from user_membership; 
-- 刷新物化视图
select count(*) from v_refresh_mv0 union all select count(*) from v_refresh_mv1 union all select count(*) from v_refresh_mv2 union all select count(*) from v_refresh_mv3 ;
```
### 业务SQL 设计  
1\. 所有SQL都需要带上分区条件，例如  
```
where uid=? and mod(abs(uid), 256) = mod(abs(?), 256);
where uid1=? and mod(abs(uid1), 256) = mod(abs(?), 256);
where uid2=? and mod(abs(uid2), 256) = mod(abs(?), 256);
```
2\. userinfo 增删改查    
新增用户、销毁用户、修改用户资料、查询用户资料    
```
insert into userinfo(uid,info,text) values (?,?,?);
delete from userinfo where uid=? and mod(abs(uid), 256) = mod(abs(?), 256);
update userinfo set xxx=xxx where uid=? and mod(abs(uid), 256) = mod(abs(?), 256);
select x,x,x from userinfo where uid=? and mod(abs(uid), 256) = mod(abs(?), 256);
```
3\. user_log 增查  
新增用户登陆日志、查询用户日志  
```
insert into user_log(uid,logintime,logouttime,client_addr,client_port) values (?,?,?,?,?);
select x,x,x,x,x from user_log where uid=? and mod(abs(uid), 256) = mod(abs(?), 256);
```
4\. user_membership 增删查  
新增用户关系，删除用户关系，查询用户关系  
```
insert into user_membership(uid1, uid2) values (?,?);
delete from user_membership where uid1=? and mod(abs(uid1), 256) = mod(abs(?), 256);
select x,x from user_membership where uid1=? and mod(abs(uid1), 256) = mod(abs(?), 256);
```
5\. user_membership_rev 增删查  
新增反向用户关系，删除反向用户关系，查询反向用户关系  
```
insert into user_membership_rev(uid2, uid1) values (?,?);
delete from user_membership_rev where uid2=? and mod(abs(uid2), 256) = mod(abs(?), 256);
select x,x from user_membership_rev where uid2=? and mod(abs(uid2), 256) = mod(abs(?), 256);
```
6\. 物化视图  
mv_user_membership 刷新、查询  
mv_user_membership_rev 刷新、查询  
聚合物化视图主要是提高关系查询效率用的，刷新物化视图，查询物化视图  
```
select count(*) from v_refresh_mv0 union all select count(*) from v_refresh_mv1 union all select count(*) from v_refresh_mv2 union all select count(*) from v_refresh_mv3 ;
select x,x from mv_user_membership where uid1=? and mod(abs(uid1), 256) = mod(abs(?), 256);
select x,x from mv_user_membership_rev where uid2=? and mod(abs(uid2), 256) = mod(abs(?), 256);
```
### 执行计划查看
1\. 查看执行计划，SQL是否下推到对应节点执行，是否只访问目标数据节点。    
```
查询
mas1=> explain verbose select * from userinfo where uid=100 and mod(abs(uid), 256) = mod(abs(100), 256);
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Append  (cost=0.00..102.19 rows=2 width=48)
   ->  Seq Scan on digoal.userinfo  (cost=0.00..0.00 rows=1 width=48)
         Output: userinfo.uid, userinfo.info, userinfo.crt_time
         Filter: ((userinfo.uid = 100) AND (mod(abs(userinfo.uid), '256'::bigint) = 100))
   ->  Foreign Scan on digoal.userinfo_100  (cost=100.15..102.19 rows=1 width=49)