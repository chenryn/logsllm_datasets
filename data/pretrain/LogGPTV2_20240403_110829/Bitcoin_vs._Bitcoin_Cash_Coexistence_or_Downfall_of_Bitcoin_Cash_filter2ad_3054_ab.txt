called emergency difﬁculty adjustment (EDA) [7] to decrease
the mining difﬁculty without waiting for 2016 blocks to be
generated when it is signiﬁcantly difﬁcult to ﬁnd a valid block.
Because BTC and BCH have a PoW mechanism compatible
with each other, miners can freely switch between them de-
pending on the mining difﬁculty and the coin price. However,
because the change in coin price is hard to predict, some min-
ers immediately change their coin only when mining difﬁculty
changes, where we call this behavior ﬁckle mining. Concretely,
the ﬁckle miners ﬁrst conduct BTC mining, observing the
changes in the mining difﬁculties of BTC and BCH. Then,
if the BCH mining difﬁculty is low, they immediately shift
to BCH mining. When the BCH mining difﬁculty increases
again thanks to its difﬁculty adjustment algorithm, ﬁckle
miners immediately shift to BTC mining. Fickle mining can
boost proﬁts of miners; however, this behavior might cause
instability of both BTC and BCH.
This mining behavior was easily observed in Bitcoin when
we monitored the mining power in pools. We collected mining
power history data over the course of a week from two
popular pools: ViaBTC [8] and BTC.com [9]. These two pools
support both BTC and BCH mining; miners in the pools can
choose either BTC or BCH mining by just clicking one button.
Figure 1 represents the mining power data of ViaBTC and
BTC.com for a week. In the ﬁgure, the grey regions show
movements of mining power from BTC to BCH mining.
Figure 1. Mining power history of ViaBTC and BTC.com (Sep. 29, 2017 ∼
Oct. 6, 2017). The grey regions represent movements of mining power from
BTC to BCH.
Figure 2. Mining power history of ViaBTC (Dec. 5, 2017 ∼ Dec. 8, 2017).
Grey regions represent movements of mining power from BTC to BCH. Note
that we only displayed the mining power history of ViaBTC because BTC.com
did not evidently execute ﬁckle mining for this period.
As ﬁckle mining causes a sudden increase in mining power
as shown in the grey zones of Figure 1, many blocks were
generated quite quickly in the BCH system. For example, in
the BCH system, 2016 blocks were generated within only
three days in each grey zone. This caused the blockchain
of BCH to be thousands of blocks ahead of BTC, and the
halving time of the block reward in BCH was brought forward.
To address this issue, BCH performed another hard fork on
Nov. 13, 2017 [10]. Currently, BCH adjusts the difﬁculty for
each block based on the previous 144 blocks as a moving
window [11]. To determine if it is possible that miners conduct
ﬁckle mining even after the hard fork of Nov. 13, 2017, we
investigated the BCH mining power data of ViaBTC for four
days (Dec. 5, 2017 ∼ Dec. 8, 2017). Figure 2 represents the
BCH mining power data of ViaBTC during this time period;
as is evident from the ﬁgure, some miners still conduct ﬁckle
mining. Because the BCH mining difﬁculty is more quickly
adjusted than before the hard fork of BCH, ﬁckle miners
(cid:26)(cid:20)(cid:24)
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:45:16 UTC from IEEE Xplore.  Restrictions apply. 
should switch their mining power more quickly than before
the hard fork. Indeed, ﬁckle mining can occur in any mining
difﬁculty adjustment algorithm.
III. RELATED WORK
In this section, we review previous studies related to mining
in PoW systems. Kroll et al. considered the Bitcoin mining
process as a game among multiple players [12] and showed
that a miner possessing 51% mining power can be motivated to
disrupt the Bitcoin system. Several works [13], [14] modeled
and analyzed a game between two pools that can launch
denial of service attacks against each other. Eyal and Sirer
introduced the selﬁsh mining strategy, where a malicious miner
successfully mines blocks but does not immediately broadcast
the blocks; instead, the attacker temporarily withholds the
block [15]. Many researchers have intensively studied ways
to optimize and extend selﬁsh mining [16], [17], [18], [19].
Bonneau introduced bribery attacks as a way for an attacker to
increase her mining power [20]. Lewenberg et al. considered
a mechanism of sharing rewards among pool miners as a
cooperative game [21]. In 2015, Eyal modeled a game between
two pools that execute block withholding (BWH) attacks [22].
As a concurrent work, Luu et al. [23] modeled a power
splitting game to ﬁnd an optimized strategy for a BWH
attacker. Kwon et al. [24] proposed a new attack called a
fork after withholding (FAW) attack against pools [24]. Also,
several works [25], [26] analyzed a transaction-fee regime in
PoW systems, where miners receive incentives for mining as
transaction fees. Moreover, because many cryptocurrencies are
competing with each other, there can be another incentive to
execute 51% attacks. Considering this fact, Bonneau revisited
the 51% attack with some basic analysis [27].
Recently, Ma et al. [28] considered a mining game of
multiple miners and concluded that openness of the Bitcoin
system causes the need for vast mining power. Another
study [29] examined the relation between the Bitcoin/USD
exchange rate and Bitcoin mining power. They ﬁrst proposed
an industry equilibrium model to forecast the mining power
depending on the Bitcoin/USD exchange rate. Then,
they
showed that the real mining power data and simulated mining
power according to their model are similar. Our study focuses
on the relation between two coins that have compatible PoW
mechanisms with each other and the miners’ behavior between
two coins. Furthermore, our model can be used to forecast
the ratio of mining power between two coins. To the best of
our knowledge, this is the ﬁrst to study the effects of ﬁckle
mining.
IV. MODEL
In this section, we formally model a game to represent ﬁckle
mining between two coins.
A. Notation and assumptions
We consider two coins, coinA and coinB, which have
compatible PoW mechanisms with each other. In this case, a
miner with a hardware device can alternately conduct mining
of coinA and coinB; that is, he can conduct ﬁckle mining
between them. Meanwhile, a coinB-faction can stick to coinB-
mining rather than ﬁckle mining or coinA-mining to maintain
its own coin, and the set of coinB-factions sticking to coinB-
mining is denoted by Ωstick. For example, in the case where
BCH is coinB, BITMAIN [30], one of the main supporters
of BCH, may belong to Ωstick. We aim to formalize a game
considering the ﬁckle mining and Ωstick.
The proposed game consists of many players (i.e., min-
ers), where the set of all players is denoted by Ω. Player
i ∈ Ω chooses one of three strategies, si ∈ {F,A,B}:
Fickle mining (F), coinA-only mining (A), and coinB-only
mining (B). The payoff function of player i is denoted by
Ui : {F,A,B}n → R, which we will formally deﬁne later
as well as ﬁckle mining. We also deﬁne three sets MF
= {i ∈ Ω|si = F}, MA = {i ∈ Ω|si = A}, and
MB = {i ∈ Ω|si = B}, indicating a set of players who
conduct ﬁckle mining, coinA-only mining, and coinB-only
mining, respectively. Note that Ωstick is a subset of MB
because players in Ωstick always choose strategy B. The sum
of mining powers in coinA and coinB is regarded as 1; mining
power of a coin is expressed as a ratio to the total mining
power. The mining power possessed by player i is denoted
by ci, and the total computational power possessed by Ωstick
is denoted by cstick. We also deﬁne cmax as the maximum
of {ci | i ∈ Ω\Ωstick}. Moreover, because our game analysis
result would depend on the computational power possessed by
players, we use the notation G(c, cstick) to refer to the game,
where c indicates a vector of computational power possessed
by players except for Ωstick (i.e., c = (ci)i∈Ω\Ωstick). Lastly,
we denote the total mining power of MF , MA, and MB
(cid:2)
as rF (i.e.,
i∈MA ci), and rB (i.e.,
i∈MB ci), respectively. Observe that rA = 1 − rF − rB and
cstick ≤ rB. Namely, (rF , rB) represents the full status of
mining powers where rB is not less than cstick.
i∈MF ci), rA (i.e.,
(cid:2)
(cid:2)
For the analysis of the game, we assume the following:
Assumption 1. A miner conducts either only coinA or coinB-
mining (not both) at each time instance; for example, an ASIC
miner cannot execute both BTC and BCH mining simultane-
ously. However, their choices can be time-varying; that is,
miners can change their coin to mine.
Assumption 2. The price of 1 coinB is equal to that of k
coinA. We assume that 0 < k ≤ 1 without loss of generality.
In addition, rewards for mining a block in both coins are 1
coinA and 1 coinB, respectively.
Assumption 3. In both coinA and coinB systems, mining
difﬁculties are adjusted to maintain the average period of
generating a block as the same speciﬁc time period, which we
denote by 1 Pag time and regard as a time unit; for example, 1
Pag = 10 minutes in the Bitcoin system. Furthermore, we con-
sider a generalized model in which mining difﬁculties of coinA
and coinB are adjusted in proportion to the mining power
for the previous time window, and we consider a normalized
difﬁculty. Thus, if x mining power has been engaged in coin
mining, the mining difﬁculty would be x. More precisely, in
(cid:26)(cid:20)(cid:25)
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:45:16 UTC from IEEE Xplore.  Restrictions apply. 
Table I
LIST OF PARAMETERS.
Ωstick
The set of coinB-factions sticking to coinB
mining to maintain their own coin
Ω
si
Ui
ci
F, A, B
MF , MA, MB
cstick
cmax
c
G(c, cstick)
rF , rA, rB
k
Pag
The set of all players
Player i’s strategy
Player i’s payoff
Fickle, coinA-only, coinB-only mining
The set of players with F, A, B
Computational power of player i
Computational power possessed by Ωstick
The maximum of {ci | i ∈ Ω\Ωstick}
The vector of computational power
possessed by players in Ω\Ωstick
The game of players and Ωstick with
computational power c and cstick
The total computational power
fraction of MF , MA, MB
The relative price of coinB to coinA
The time unit representing the average
period of generating one block
Nde, Nin
DA, DB
E(c, cstick)
The number of considered past blocks when the
mining difﬁculty of coinB decreases or increases
The set of all Nash equilibrium in G(c, cstick)
The mining difﬁculty of coinA, coinB
difﬁculty of coinB over time, caused by the strategies of
players.
- Time t0 : At the beginning, 1 − rB and rB mining powers
are used for coinA and coinB-mining, respectively.
- Time t1 : The mining difﬁculty of coinB decreases because
it is relatively difﬁcult to ﬁnd PoWs with rB mining power.
At the moment, MF shifts from coinA to coinB, and each of
1 − rF − rB and rF + rB mining powers is used for coinA
and coinB-mining, respectively.
- Time t2 : Because the mining difﬁculty of coinB is again
adjusted (increases) after Nin blocks are found in the coinB
system since the last adjustment of the mining difﬁculty of
coinB, the mining difﬁculty of coinB would increase after
NinrB
Pag to ﬁnd one valid
block on average. Then, MF shifts again from coinB to coinA
rF +rB
and conducts coinA-mining until the mining difﬁculty of coinB
decreases.
- Time t3 : Until when the mining difﬁculty of coinB decreases
after Nde blocks are found in the coinB system, MF would
conduct coinA-mining (for Nde(rF +rB)
- This process is continually repeated.
Pag time since it takes
Pag time).
rB
rB
rF +rB
B. Payoff function
Next, we describe payoff functions for our game model. All
payoffs are expressed as a unit of coinA and are calculated as
a proﬁt density, which is deﬁned as an average earned reward
for 1 Pag time divided by the player’s mining power. In other
words, if player i earns a reward R for 1 Pag time on average,
the payoff would be R
. Player i’s payoff function Ui(si, s−i)
ci
Figure 3. Changes in the mining power of coinA and coinB, and mining
difﬁculty of coinB.
our model, the coin mining difﬁculty decreases and increases
again, considering the generation time of a speciﬁc number
of blocks since the last update of coin mining difﬁculty. In
particular, for the mining difﬁculty of coinB, we denote the
number of considered blocks when the coinB-mining difﬁculty
decreases and increases as Nde and Nin, respectively.1 Note
that Nde and Nin cannot be zero. In the case of BTC and
Litecoin, Nde and Nin are 2016.
As described previously, a ﬁckle miner may change the
preferred coin when the coin mining difﬁculty changes. Here
we deﬁne ﬁckle mining formally.
Deﬁnition IV.1 (Fickle mining). Let DA and DB denote the
coinA and coinB-mining difﬁculties, respectively. If DB <
min{rF + rB, k · DA} or DB ≤ rB when DA or DB is
updated, ﬁckle miners (MF ) decide to conduct coinB-mining
until DA or DB is adjusted again. Otherwise, they conduct
coinA-mining.
We also emphasize that if rF is 0, no miner engages in ﬁckle