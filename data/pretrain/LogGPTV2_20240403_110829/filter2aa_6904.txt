### State(状态值)
`state`控制组件内部的状态，`state`改变，重新`render()`界面重新渲染
定义一个state值
```
import React from 'react'
class App extends React.Component{
  constructor(){
    super()
//state属性等于一个对象
//对象内可以是一个数、数组、对象、布尔值等等，用,隔开
    this.state = {
      num:0
    }
  }
  render(){
    return(
        {this.state.num}
    )
  }
}
export default App
```
### setState(接受对象参数)
修改`setState`的方法可以触发`render`自动更新（界面重新渲染）
利用`setState`方法实现点击+1
```
import React from 'react'
class App extends React.Component{
  constructor(){
    super()
      this.state = {
         num:0
      }
  }
  handleClick(){
  this.setState({
    num: ++this.state.num
    })
  }
  render(){
    let styles={textAlign:'center'}
    return(
        {this.state.num}
    )
  }
}
export default App
```
利用`setState`方法切换状态值
```
import React from 'react'
class App extends React.Component{
  constructor(){
    super()
      this.state = {
          show:true
      }
  }
  handleClick(){
    this.setState({
      show:!this.state.show 
    })
  }
  render(){
    return(
        {this.state.show ? '哈哈' : ''}
    )
  }
}
export default App
```
`setState`的应用
```
import React from 'react'
class App extends React.Component{
  constructor(){
    super()
    this.handleClick = this.handleClick.bind(this)
    this.state = {
      num:0,
      show:false
    }
  }
  handleInc(num){
    this.setState({
      num: (this.state.num + num)
        {this.state.num}
          {this.state.show ? '出来混总是要还的' : '是你毁了一个我当好人的机会'}
    )
  }
}
export default App
```