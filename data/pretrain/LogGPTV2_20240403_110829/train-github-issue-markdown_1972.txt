 **Balaji Varanasi** opened **SPR-6053** and commented
When executing a Sybase stored procedure using SimpleJdbcCall class, the
database metadata is not being loaded. The logs show the following messages:
org.springframework.jdbc.core.metadata.CallMetaDataProviderFactory - SQL
Server is not one of the databases fully supported for procedure calls --
supported are: [Apache Derby, DB2, MySQL, Microsoft SQL Server, Oracle,
Sybase]  
org.springframework.jdbc.core.metadata.CallMetaDataProviderFactory - Metadata
processing disabled - you must specify all parameters explicitly  
org.springframework.jdbc.core.metadata.CallMetaDataProviderFactory - Using
org.springframework.jdbc.core.metadata.GenericCallMetaDataProvider
After little research, I found that our Sybase database is named "SQL Server"
and the commonDatabaseName method in JdbcUtils being used to get the database
name compares against the string "sql server".
This problem gets fixed if the comparison with "sql server" is done without
considering the case.
* * *
**Affects:** 2.5.6, 3.0 M4
**Attachments:**
  * sybase.patch ( _822 bytes_ )
**Issue Links:**
  * #11630 Sybase isn't detected by metadata when using WebLogic JDBC Driver ( _ **"is duplicated by"**_ )
  * #10936 Include 'ASE' in the list of product names recognised by JDBCUtils as Sybase ( _ **"is duplicated by"**_ )
**Referenced from:** commits `ea674f2`, `b482d6d`