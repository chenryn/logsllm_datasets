**表 3.1. 指标系统角色变量**
::: table-contents
  角色变量                  描述                                                                                                                                 用法示例
  ------------------------- ------------------------------------------------------------------------------------------------------------------------------------ ----------------------------------------------------------------------------------------
  metrics_monitored_hosts   要通过目标主机分析的远程主机的列表。这些主机将在目标主机上记录指标，因此要确保每个主机的 `/var/log`{.literal} 下有足够的磁盘空间。   `metrics_monitored_hosts: ["webserver.example.com", "database.example.com"]`{.literal}
  metrics_retention_days    在删除前配置性能数据保留的天数。                                                                                                     `metrics_retention_days:14`{.literal}
  metrics_graph_service     一个布尔值标志，使主机能够通过 `pcp`{.literal} 和 `grafana`{.literal} 设置性能数据可视化服务。默认设置为 false。                     `metrics_graph_service: no`{.literal}
  metrics_query_service     一个布尔值标志，使主机能够通过 `redis`{.literal} 设置时间序列查询服务，来查询记录的 `pcp`{.literal} 指标。默认设置为 false。         `metrics_query_service: no`{.literal}
  metrics_provider          指定要用于提供指标的指标收集器。目前，`pcp`{.literal} 是唯一受支持的指标提供者。                                                     `metrics_provider: "pcp"`{.literal}
:::
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
如需有关 `metrics_connections`{.literal}
中使用的参数，以及有关指标系统角色的其他信息，请参阅
`/usr/share/ansible/roles/rhel-system-roles.metrics/README.md`{.literal}
文件。
:::
:::
::: section
::: titlepage
# []{#monitoring-performance-using-rhel-system-roles_monitoring-and-managing-system-status-and-performance.html#using-the-metrics-role-to-monitor-your-local-system-with-visualization_monitoring-performance-using-rhel-system-roles}使用指标系统角色以可视化方式监控本地系统 {.title}
:::
此流程描述了如何使用指标 RHEL 系统角色来监控您的本地系统，同时通过
`Grafana`{.literal} 提供数据可视化。
::: itemizedlist
**先决条件**
-   Ansible Core 软件包安装在控制机器上。
-   您已在要监控的机器上安装了 `rhel-system-roles`{.literal} 软件包。
:::
::: orderedlist
**步骤**
1.  通过将以下内容添加到清单中，来在 `/etc/ansible/hosts`{.literal}
    Ansible 清单中配置 `localhost`{.literal} ：
    ``` screen
    localhost ansible_connection=local
    ```
2.  使用以下内容创建一个 Ansible playbook:
    ``` screen
    ---
    - hosts: localhost
      vars:
        metrics_graph_service: yes
      roles:
        - rhel-system-roles.metrics
    ```
3.  运行 Ansible playbook:
    ``` screen
    # ansible-playbook name_of_your_playbook.yml
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    由于 `metrics_graph_service`{.literal} 布尔值被设置为
    value=\"yes\"，因此会使用 `pcp`{.literal} 自动安装并提供
    `Grafana`{.literal} ，并添加为数据源。
    :::
4.  要查看机器上收集的指标的视图，请访问 `grafanaweb`{.literal} 界面
    ，如 [访问 Grafana web
    UI](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html/monitoring_and_managing_system_status_and_performance/setting-up-graphical-representation-of-pcp-metrics_monitoring-and-managing-system-status-and-performance#accessing-the-grafana-web-UI_setting-up-graphical-representation-of-pcp-metrics){.link}
    中所述。
:::
:::
::: section
::: titlepage
# []{#monitoring-performance-using-rhel-system-roles_monitoring-and-managing-system-status-and-performance.html#using-the-metrics-role-to-monitor-a-fleet-of-machines-remotely_monitoring-performance-using-rhel-system-roles}使用 metrics 系统角色设置监控其自身的独立系统 {.title}
:::
此流程描述了如何使用 metrics 系统角色设置一组机器来监控其自身。
::: itemizedlist
**先决条件**
-   Ansible Core 软件包安装在控制机器上。
-   您已在要用来运行 playbook 的机器上安装了
    `rhel-system-roles`{.literal} 软件包。
-   您已建立 SSH 连接。
:::
::: orderedlist
**步骤**
1.  将您要通过 playbook 监控的机器的名称或 IP 添加到
    `/etc/ansible/hosts`{.literal} Ansible
    清单文件中括号内的标识组名称下：
    ``` screen
    [remotes]
    webserver.example.com
    database.example.com
    ```
2.  使用以下内容创建一个 Ansible playbook:
    ``` screen
    ---
    - hosts: remotes
      vars:
        metrics_retention_days: 0
      roles:
        - rhel-system-roles.metrics
    ```
3.  运行 Ansible playbook:
    ``` screen
    # ansible-playbook name_of_your_playbook.yml -k
    ```
:::
其中 `-k`{.literal} 提示连接到远程系统的密码。
:::
::: section
::: titlepage
# []{#monitoring-performance-using-rhel-system-roles_monitoring-and-managing-system-status-and-performance.html#using-the-metrics-role-to-monitor-a-fleet-of-machines-centrally-via-your-local-machine_monitoring-performance-using-rhel-system-roles}使用 metrics 系统角色通过本地机器集中监控机器的数量 {.title}
:::
此流程描述了如何使用指标系统角色设置本地机器来集中一组监控机器，同时通过
`grafana`{.literal} 提供数据的可视化，并通过 `redis`{.literal}
提供数据的查询。
::: itemizedlist
**先决条件**
-   Ansible Core 软件包安装在控制机器上。
-   您已在要用来运行 playbook 的机器上安装了
    `rhel-system-roles`{.literal} 软件包。
:::
::: orderedlist
**步骤**
1.  使用以下内容创建一个 Ansible playbook:
    ``` screen
    ---
    - hosts: localhost
      vars:
        metrics_graph_service: yes
        metrics_query_service: yes
        metrics_retention_days: 10
        metrics_monitored_hosts: ["database.example.com", "webserver.example.com"]
      roles:
        - rhel-system-roles.metrics
    ```
2.  运行 Ansible playbook:
    ``` screen
    # ansible-playbook name_of_your_playbook.yml
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    由于 `metrics_graph_service`{.literal} 和
    `metrics_query_service`{.literal} 布尔值被设置为
    value=\"yes\"，因此会使用`pcp`{.literal} 来自动安装并提供
    `grafana`{.literal} ，并添加为带有 `pcp`{.literal} 数据记录索引到
    `redis`{.literal} 的数据源，允许 `pcp`{.literal}
    查询语言用于复杂的数据查询。
    :::
3.  要查看机器集中收集的指标的图形表示，并查询数据，请访问
    `grafana`{.literal} web 界面，如 [访问 Grafana Web
    UI](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html/monitoring_and_managing_system_status_and_performance/setting-up-graphical-representation-of-pcp-metrics_monitoring-and-managing-system-status-and-performance#accessing-the-grafana-web-UI_setting-up-graphical-representation-of-pcp-metrics){.link}
    中所述。
:::
:::
::: section
::: titlepage
# []{#monitoring-performance-using-rhel-system-roles_monitoring-and-managing-system-status-and-performance.html#setting-up-authentication-while-monitoring-a-system-using-the-metrics-system-role_monitoring-performance-using-rhel-system-roles}使用指标系统角色在监控系统时设置身份验证 {.title}
:::
PCP 通过简单身份验证安全层(SASL)框架支持 `scram-sha-256`{.literal}
验证机制。指标 RHEL 系统角色使用 `scram-sha-256`{.literal}
身份验证机制自动执行设置身份验证的步骤。这个流程描述了如何使用指标 RHEL
系统角色设置身份验证。
::: itemizedlist
**先决条件**
-   Ansible Core 软件包安装在控制机器上。
-   您已在要用来运行 playbook 的机器上安装了
    `rhel-system-roles`{.literal} 软件包。
:::
::: orderedlist
**步骤**
1.  在您要为其设置身份验证的 Ansible playbook 中包含以下变量：
    ``` screen
    ---
      vars:
        metrics_username: your_username
        metrics_password: your_password
    ```
2.  运行 Ansible playbook:
    ``` screen
    # ansible-playbook name_of_your_playbook.yml
    ```
:::
::: itemizedlist
**验证步骤**
-   验证 `sasl`{.literal} 配置：
    ``` screen
    # pminfo -f -h "pcp://ip_adress?username=your_username" disk.dev.read
    Password:
    disk.dev.read
    inst [0 or "sda"] value 19540
    ```
    [*ip_adress*]{.emphasis} 应替换为主机的 IP 地址。
:::
:::
::: section
::: titlepage
# []{#monitoring-performance-using-rhel-system-roles_monitoring-and-managing-system-status-and-performance.html#using-the-metrics-system-role-to-configure-and-enable-metrics-collection-for-sql-server_monitoring-performance-using-rhel-system-roles}使用指标系统角色为 SQL Server 配置和启用指标集合 {.title}
:::
此流程描述了如何使用指标 RHEL 系统角色来自动化配置，并通过本地系统上的
`pcp`{.literal} 启用 Microsoft SQL Server 的指标集合。
::: itemizedlist
**先决条件**
-   Ansible Core 软件包安装在控制机器上。
-   您已在要监控的机器上安装了 `rhel-system-roles`{.literal} 软件包。
-   您已安装了用于 Red Hat Enterprise Linux 的 Microsoft SQL
    Server，并建立了与 SQL 服务器的\"信任\"连接。
-   您已为 Red Hat Enterprise Linux 安装了用于 SQL Server 的 Microsoft
    ODBC 驱动程序。
:::
::: orderedlist
**步骤**
1.  通过将以下内容添加到清单中，来在 `/etc/ansible/hosts`{.literal}
    Ansible 清单中配置 `localhost`{.literal} ：
    ``` screen
    localhost ansible_connection=local
    ```
2.  创建一个包含以下内容的 Ansible playbook：
    ``` screen
    ---
    - hosts: localhost
      roles:
        - role: rhel-system-roles.metrics
          vars:
            metrics_from_mssql: yes
    ```
3.  运行 Ansible playbook:
    ``` screen
    # ansible-playbook name_of_your_playbook.yml
    ```
:::
::: itemizedlist
**验证步骤**
-   使用 `pcp`{.literal} 命令来验证 SQL Server PMDA
    代理(mssql)是否已加载并在运行：
    ``` screen
    # pcp
    platform: Linux rhel82-2.local 4.18.0-167.el8.x86_64 #1 SMP Sun Dec 15 01:24:23 UTC 2019 x86_64
     hardware: 2 cpus, 1 disk, 1 node, 2770MB RAM
     timezone: PDT+7
     services: pmcd pmproxy
         pmcd: Version 5.0.2-1, 12 agents, 4 clients
         pmda: root pmcd proc pmproxy xfs linux nfsclient mmv kvm mssql
               jbd2 dm
     pmlogger: primary logger: /var/log/pcp/pmlogger/rhel82-2.local/20200326.16.31
         pmie: primary engine: /var/log/pcp/pmie/rhel82-2.local/pmie.log
    ```
:::
::: itemizedlist
**其他资源**
-   [有关用于 Microsoft SQL Server 的 Performance CoPilot
    的更多信息，请参阅此红帽开发者博客文章。](https://www.redhat.com/en/blog/performance-co-pilot-microsoft-sql-server-rhel-82){.link}
:::
:::
::: footnotes
\
------------------------------------------------------------------------
::: {#monitoring-performance-using-rhel-system-roles_monitoring-and-managing-system-status-and-performance.html#ftn.idm140048817713200 .footnote}
[^\[1\]^](#monitoring-performance-using-rhel-system-roles_monitoring-and-managing-system-status-and-performance.html#idm140048817713200){.simpara}
本文档会使用 `rhel-system-roles`{.literal} 软件包自动安装。
:::
:::
:::
[]{#setting-up-pcp_monitoring-and-managing-system-status-and-performance.html}
::: chapter
::: titlepage
# []{#setting-up-pcp_monitoring-and-managing-system-status-and-performance.html#setting-up-pcp_monitoring-and-managing-system-status-and-performance}第 4 章 设置 PCP {.title}
:::
Performance
Co-Pilot(PCP)是用于监控、视觉化、存储和分析系统级性能测量的工具、服务和库集。
这部分论述了如何在您的系统中安装并启用 PCP。
::: section