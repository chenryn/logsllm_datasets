played as Table 5. All non-monitored websites are seen as an extra
class, so evaluation metrics are calculated on 51 classes actually
including fifty monitored and one non-monitored class. BAPM still
outperforms other methods with results about 80% and 60% for
the first and second tab. With non-monitored websites increasing,
most metrics of four methods tend to decrease because a larger non-
monitored website set is more likely to have a trace with similar
direction patterns to monitored ones, which is difficult to iden-
tify. Besides, the result difference between two tabs is particularly
obvious under the open world setting.
Table 5: Results on open world dataset
1st page
2000
82.3
79.1
83.1
55.2
58.0
25.7
49.5
51.7
22.2
32.1
11.4
49.7
4000
79.2
77.3
83.5
50.9
64.6
18.7
46.4
62.1
11.6
38.2
16.3
54.6
6000
77.9
78.0
83.9
41.5
56.4
13.2
37.5
65.7
7.4
36.0
21.9
50.2
2nd page
4000
65.7
64.3
67.0
32.3
7.5
2.4
42.3
37.7
6.2
30.3
66.5
31.2
2000
65.9
63.7
65.8
31.1
2.5
2.3
44.6
40.4
17.0
25.4
60.7
26.0
6000
58.6
65.5
65.4
29.5
3.4
2.5
34.8
40.9
4.3
27.6
52.0
27.2
Acc
Pre
Rec
Acc
Pre
Rec
Acc
Pre
Rec
Acc
Pre
Rec
BAPM
PSP-WF
PSE-WF
Multi-DF
7 DISCUSSION
7.1 Real world dataset analysis
In this section, we use the real world dataset to verify that the
effectiveness of BAPM will not be affected when attackers use
manual traces to train the model and test it on real traces. We
install a Tor proxy on a VPS host and drive a headless chrome
browser to visit target websites through the proxy. An automatic
script continuously visits the Alex top 50 websites recorded on
march 18th, 2021. To build the training set with 10000 manual
traces, it opens one website each time and captures 200 traces for
each website. For the testing set with 1000 real traces, it opens the
first page and waits few seconds, then opens the second one by
starting a new thread and finally kills two threads in order. The
loading time is set to 15 seconds uniformly. As [24] suggested, we
clear browser cookies and wait few seconds before starting the next
capture. We use the tool given in [24] to extract cell directions from
traces as the model input. There are no ethical issues since we do
not provide the proxy service on the data collection node for any
other anonymous users.
Table 6: Results on real world multi-tab packet traces
1st page
2nd page
Acc
BAPM 93.2
PSP-WF
27.6
70.7
PSE-WF
Multi-DF
50.5
Pre
93.5
57.7
81.4
50.0
Rec
92.9
27.3
70.3
51.4
Acc
82.9
8.2
70.5
46.9
Pre
84.9
11.4
80.7
46.8
Rec
83.2
8.4
70.1
47.1
As shown in Table 6. BAPM, PSE-WF and Multi-DF achieve even
better results on real traces. We guess that different page tabs in
real world may have some exclusive time slices to transmit data,
while manually merging does not consider it and mix the data
simply according to time stamps. The exception is that results of
PSP-WF decline, which shows that overlapping points in manual
and real traces may have different characteristics. In summary,
real traces do not destroy the proved effectiveness of BAPM, and
reasons mentioned in section 5.2 why we and attackers tend to
choose manual traces as the training set are reasonable. The real
world dataset is available at https://drive.google.com/drive/folders/
1vfE34oYICpSnNMVvxfeVfcWzBooqAQfR?usp=sharing.
7.2 Possible defenses analysis
Like other WF attacks, injecting random traffic noise into orig-
inal packet traces will destroy fingerprints extracted by BAPM.
The noise may come from: (1) Simultaneous page tabs. In above
experiments we focus on the multi-tab scenarios where users "suc-
cessively" instead of "simultaneously" visit websites. "Successively"
visiting appears in normal cases, while "simultaneously" visiting
means users deliberately open extra tabs at the same time. Concur-
rent page tabs are completely mixed together as an interference
confusing attackers. (2) Non-browsing behaviors during the web
browsing generate irrelevant traffic which also disturbs original
traces. Since the traffic noise is totally unpredictable, all WF works
will be influenced to a certain extent.
A core principle of BAPM is trying to find local direction patterns
of the specific website preserved by blocks, especially in overlap-
ping area. When two tabs are involved, blocks we get may still
well reflect a specific website’s pattern. However, the random noise
severely ruins original patterns in blocks under simultaneous tabs
or non-browsing behaviors, making block relations more difficult
to discover. We performed a simple test by adding the third and
fourth tab into the overlapping area of two-tab traces as the ran-
dom noise. Results show that after adding the fourth tab (i.e., the
bandwidth overhead reached 100% compared with only two tabs
opened), the accuracy for the second tab drops to almost equal with
random decision, meaning that multi-tab fingerprints are no longer
effective. Therefore, keeping the influence of simultaneous tabs
or non-browsing behaviors during the browsing process will be
helpful in defending against potential multi-tab WF attacks.
257BAPM: Block Attention Profiling Model for Multi-tab Website Fingerprinting Attacks on Tor
ACSAC ’21, December 6–10, 2021, Virtual Event, USA
8 CONCLUSION
In this paper, we propose a deep learning WF attacking model
named BAPM against multi-tab browsing behavior. BAPM trans-
forms cell direction sequences including overlapping and non-
overlapping area into blocked tab-aware representations, which
help to avoid information confusion even lost under both tabs and
blocks level. Besides, we apply the multi-head attention mechanism
to the blocks aggregation on the same specific website and gen-
erate a representation variety on each attention head. As a result,
multiple website labels are simultaneously predicted according to
corresponding representation varieties, and attackers do not need
to accurately predetermine website locations in raw packet traces.
BAPM outperforms several well-known multi-tab WF attacks on
the comparison experiment, and the model design effectiveness is
also explained through comprehensive analysis.
We believe that this work makes a step forward on the feasibility
of WF attacks on Tor, which reminds users that their privacy is pos-
sible to be threatened even under more realistic multi-tab scenarios.
Therefore, we also introduce some possible defenses against our
model and discuss how does the fingerprint break with defenses. It
will be safer for users to consciously make some noise to protect
themselves if they do not use proposed countermeasures. Some
extended scenarios such as the fingerprints drift over time or how
to design multi-tab WF models against countermeasures can be
researched in the future.
ACKNOWLEDGMENTS
This work is supported by The National Key Research and Develop-
ment Program of China (No.2020YFB1006100, No.2020YFE0200500
and No.2018YFB1800200), Key research and Development Program
for Guangdong Province under grant No.2019B010137003 and the
Strategic Priority Research Program of Chinese Academy of Sci-
ences, grant No.XDC02040400. We would also like to thank review-
ers for their valuable comments to improve this paper.
REFERENCES
[1] 2021. Tor, 2021. https://www.torproject.org/.
[2] Kota Abe and Shigeki Goto. 2016. Fingerprinting Attack on Tor Anonymity using
Deep Learning. In Proceedings of the APAN – Research Workshop.
[3] Sanjit Bhat, David Lu, Albert Kwon, and Srinivas Devadas. 2019. Var-CNN: A Data-
Efficient Website Fingerprinting Attack Based on Deep Learning. Proceedings on
Privacy Enhancing Technologies (Oct. 2019), 292–310. 10.2478/popets-2019-0070
[4] Xiang Cai, Xin Cheng Zhang, Brijesh Joshi, and Rob Johnson. 2012. Touching from
a distance: website fingerprinting attacks and defenses. In the ACM Conference
on Computer and Communications Security, CCS, Raleigh, NC, USA. 605–616.
https://doi.org/10.1145/2382196.2382260
[5] Kyunghyun Cho, Bart van Merrienboer, Çaglar Gülçehre, Dzmitry Bahdanau,
Fethi Bougares, Holger Schwenk, and Yoshua Bengio. 2014. Learning Phrase
Representations using RNN Encoder-Decoder for Statistical Machine Transla-
tion. In Proceedings of the Conference on Empirical Methods in Natural Language
Processing, EMNLP, Doha, Qatar. 1724–1734. https://doi.org/10.3115/v1/d14-1179
[6] Weiqi Cui, Tao Chen, Christian Fields, Julianna Chen, Anthony Sierra, and Eric
Chan-Tin. 2019. Revisiting Assumptions for Website Fingerprinting Attacks.
In Proceedings of the ACM Asia Conference on Computer and Communications
Security, AsiaCCS, Auckland, New Zealand. 328–339. https://doi.org/10.1145/
3321705.3329802
[7] Roger Dingledine, Nick Mathewson, and Paul F. Syverson. 2004. Tor: The Second-
Generation Onion Router. In Proceedings of the 13th USENIX Security Sympo-
sium, San Diego, CA, USA. 303–320. http://www.usenix.org/publications/library/
proceedings/sec04/tech/dingledine.html
[8] Xiaodan Gu, Ming Yang, and Junzhou Luo. 2015. A novel Website Fingerprinting
attack against multi-tab browsing behavior. In 19th IEEE International Conference
on Computer Supported Cooperative Work in Design, CSCWD, Calabria, Italy.
234–239. https://doi.org/10.1109/CSCWD.2015.7230964
[9] Jamie Hayes and George Danezis. 2016. k-fingerprinting: A Robust Scalable Web-
site Fingerprinting Technique. In 25th USENIX Security Symposium, USENIX
Security, Austin, TX, USA. 1187–1203.
https://www.usenix.org/conference/
usenixsecurity16/technical-sessions/presentation/hayes
[10] Andrew Hintz. 2002. Fingerprinting Websites Using Traffic Analysis. In Privacy
Enhancing Technologies, Second International Workshop, PET, San Francisco, CA,
USA (Lecture urls in Computer Science, Vol. 2482). 171–178. https://doi.org/10.
1007/3-540-36467-6_13
[11] Marc Juárez, Sadia Afroz, Gunes Acar, Claudia Díaz, and Rachel Greenstadt. 2014.
A Critical Evaluation of Website Fingerprinting Attacks. In Proceedings of the
ACM SIGSAC Conference on Computer and Communications Security, Scottsdale,
AZ, USA. 263–274. https://doi.org/10.1145/2660267.2660368
[12] Shuai Li, Huajun Guo, and Nicholas Hopper. 2018. Measuring Information
Leakage in Website Fingerprinting Attacks and Defenses. In Proceedings of the
ACM SIGSAC Conference on Computer and Communications Security, CCS, Toronto,
ON, Canada. 1977–1992. https://doi.org/10.1145/3243734.3243832
[13] Marc Liberatore and Brian Neil Levine. 2006. Inferring the source of encrypted
HTTP connections. In Proceedings of the 13th ACM Conference on Computer and
Communications Security, CCS, Alexandria, VA, USA. 255–263. https://doi.org/10.
1145/1180405.1180437
[14] Liming Lu, Ee-Chien Chang, and Mun Choon Chan. 2010. Website Fingerprinting
and Identification Using Ordered Feature Sequences. In Computer Security -
ESORICS, 15th European Symposium on Research in Computer Security, Athens,
Greece (Lecture urls in Computer Science, Vol. 6345). 199–214. https://doi.org/10.
1007/978-3-642-15497-3_13
[15] Andriy Panchenko, Fabian Lanze, Jan Pennekamp, Thomas Engel, Andreas Zin-
nen, Martin Henze, and Klaus Wehrle. 2016. Website Fingerprinting at In-
ternet Scale. In 23rd Annual Network and Distributed System Security Sympo-
sium, NDSS, San Diego, California, USA. http://wp.internetsociety.org/ndss/wp-
content/uploads/sites/25/2017/09/website-fingerprinting-internet-scale.pdf
[16] Andriy Panchenko, Lukas Niessen, Andreas Zinnen, and Thomas Engel. 2011.
Website fingerprinting in onion routing based anonymization networks. In Pro-
ceedings of the 10th annual ACM workshop on Privacy in the electronic society,
WPES, Chicago, IL, USA. 103–114. https://doi.org/10.1145/2046556.2046570
[17] Aida Ramezani, Amirhossein Khajehpour, and Mahdi Jafari Siavoshani. 2020. On
Multi-Session Website Fingerprinting over TLS Handshake. CoRR abs/2009.09284
(2020). arXiv:2009.09284 https://arxiv.org/abs/2009.09284
[18] Vera Rimmer, Davy Preuveneers, Marc Juarez, Tom Van Goethem, and Wouter
Joosen. 2017. Automated Website Fingerprinting through Deep Learning. In
Network and Distributed System Security Symposium.
[19] Payap Sirinam, Mohsen Imani, Marc Juarez, and Matthew Wright. 2018. Deep Fin-
gerprinting: Undermining Website Fingerprinting Defenses with Deep Learning.
In Proceedings of the ACM SIGSAC Conference on Computer and Communications
Security, CCS, Toronto, ON, Canada. 1928–1943. https://doi.org/10.1145/3243734.
3243768
[20] Payap Sirinam, Nate Mathews, Mohammad Saidur Rahman, and Matthew Wright.
2019. Triplet Fingerprinting: More Practical and Portable Website Fingerprinting
with N-shot Learning. In Proceedings of the ACM SIGSAC Conference on Computer
and Communications Security, CCS, London, UK. 1131–1148. https://doi.org/10.
1145/3319535.3354217
[21] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones,
Aidan N. Gomez, Lukasz Kaiser, and Illia Polosukhin. 2017. Attention is All
you Need. In Annual Conference on Neural Information Processing Systems, Long
Beach, CA, USA. 5998–6008. https://proceedings.neurips.cc/paper/2017/hash/
3f5ee243547dee91fbd053c1c4a845aa-Abstract.html
[22] Christian von der Weth and Manfred Hauswirth. 2013. DOBBS: Towards a
Comprehensive Dataset to Study the Browsing Behavior of Online Users. In
IEEE/WIC/ACM International Conferences on Web Intelligence, WI, Atlanta, GA,
USA. 51–56. https://doi.org/10.1109/WI-IAT.2013.8
[23] Meiqi Wang, Yanzeng Li, Xuebin Wang, Tingwen Liu, and Muqian Chen. 2020.
2ch-TCN: A Website Fingerprinting Attack over Tor Using 2-channel Temporal
Convolutional Networks. In IEEE Symposium on Computers and Communications
(ISCC).
[24] Tao Wang, Xiang Cai, Rishab Nithyanand, Rob Johnson, and Ian Goldberg. 2014.
Effective Attacks and Provable Defenses for Website Fingerprinting. In 23rd
USENIX Security Symposium. San Diego, CA, 143–157. https://www.usenix.org/
conference/usenixsecurity14/technical-sessions/presentation/wang_tao
[25] Tao Wang and Ian Goldberg. 2013. Improved website fingerprinting on Tor. In
Proceedings of the 12th annual ACM Workshop on Privacy in the Electronic Society,
WPES, Berlin, Germany. 201–212. https://doi.org/10.1145/2517840.2517851
[26] Tao Wang and Ian Goldberg. 2016. On Realistically Attacking Tor with Website
Fingerprinting. Proc. Priv. Enhancing Technol. 2016, 4 (2016), 21–36. https:
//doi.org/10.1515/popets-2016-0027
[27] Tao Wang and Ian Goldberg. 2017. Walkie-Talkie: An Efficient Defense Against
Passive Website Fingerprinting Attacks. In 26th USENIX Security Symposium,
Vancouver, BC. 1375–1390. https://www.usenix.org/conference/usenixsecurity17/
technical-sessions/presentation/wang-tao
258ACSAC ’21, December 6–10, 2021, Virtual Event, USA
Guan, et al.
[28] Kelvin Xu, Jimmy Ba, Ryan Kiros, Kyunghyun Cho, Aaron C. Courville, Ruslan
Salakhutdinov, Richard S. Zemel, and Yoshua Bengio. 2015. Show, Attend and
Tell: Neural Image Caption Generation with Visual Attention. In Proceedings of
the 32nd International Conference on Machine Learning, ICML, Lille, France, Vol. 37.
2048–2057. http://proceedings.mlr.press/v37/xuc15.html
[29] Yixiao Xu, Tao Wang, Qi Li, Qingyuan Gong, Yang Chen, and Yong Jiang. 2018.
A Multi-tab Website Fingerprinting Attack. In Proceedings of the 34th Annual
Computer Security Applications Conference, ACSAC, San Juan, PR, USA. 327–341.
https://doi.org/10.1145/3274694.3274697
[30] Zhongliu Zhuo, Yang Zhang, Zhi-Li Zhang, Xiaosong Zhang, and Jingzhong
Zhang. 2018. Website Fingerprinting Attack on Anonymity Networks Based
on Profile Hidden Markov Model. IEEE Trans. Inf. Forensics Secur. 13, 5 (2018),
1081–1095. https://doi.org/10.1109/TIFS.2017.2762825
259