title:Alias Resolution Based on ICMP Rate Limiting
author:Kevin Vermeulen and
Burim Ljuma and
Vamsi Addanki and
Matthieu Gouel and
Olivier Fourmaux and
Timur Friedman and
Reza Rejaie
Alias Resolution Based on ICMP Rate
Limiting
Kevin Vermeulen1(B), Burim Ljuma1(B), Vamsi Addanki1(B),
Matthieu Gouel1(B), Olivier Fourmaux1(B), Timur Friedman1(B),
and Reza Rejaie2(B)
1 Sorbonne Universit´e, Paris, France
{kevin.vermeulen,burim.ljuma,vamsi.krishna,matthieu.gouel,
olivier.fourmaux,timur.friedman}@sorbonne-universite.fr
2 University of Oregon, Eugene, USA
PI:EMAIL
Abstract. Alias resolution techniques (e.g., Midar) associate, mostly
through active measurement, a set of IP addresses as belonging to a
common router. These techniques rely on distinct router features that
can serve as a signature. Their applicability is aﬀected by router support
of the features and the robustness of the signature. This paper presents
a new alias resolution tool called Limited Ltd. that exploits ICMP rate
limiting, a feature that is increasingly supported by modern routers that
has not previously been used for alias resolution. It sends ICMP probes
toward target interfaces in order to trigger rate limiting, extracting fea-
tures from the probe reply loss traces. It uses a machine learning clas-
siﬁer to designate pairs of interfaces as aliases. We describe the details
of the algorithm used by Limited Ltd. and illustrate its feasibility and
accuracy. Limited Ltd. not only is the ﬁrst tool that can perform alias
resolution on IPv6 routers that do not generate monotonically increas-
ing fragmentation IDs (e.g., Juniper routers) but it also complements
the state-of-the-art techniques for IPv4 alias resolution. All of our code
and the collected dataset are publicly available.
1 Introduction
Route traces obtained using traceroute and similar tools provide the basis
for generating maps that reveal the inner structure of the Internet’s many
autonomously administered networks, but not necessarily at the right level of
granularity for certain important tasks. Designing network protocols [42] and
understanding fundamental properties of the Internet’s topology [18] are best
done with router-level maps. Rather than revealing routers, traceroute only
provides the IP addresses of individual router interfaces. The process of group-
ing IP addresses into sets that each belong to a common router is called alias
resolution, and this paper advances the state of the art in alias resolution.
A common approach to alias resolution is to send probe packets to IP
addresses, eliciting reply packets that display a feature that is distinctive enough
c(cid:2) Springer Nature Switzerland AG 2020
A. Sperotto et al. (Eds.): PAM 2020, LNCS 12048, pp. 231–248, 2020.
https://doi.org/10.1007/978-3-030-44081-7_14
232
K. Vermeulen et al.
to constitute a signature, allowing replies coming from a common router to be
matched. This paper describes a new type of signature based upon a functional-
ity, ICMP rate limiting, in which an Internet-connected node (router or end-host)
limits the ICMP traﬃc that it sends or receives within a certain window of time.
This new signature enjoys much broader applicability than existing ones for IPv6
alias resolution, thanks to ICMP rate limiting being a required function for IPv6
nodes. The signature also complements IPv4 existing signatures.
Our contributions are: (1) The Limited Ltd. algorithm, a new signature-based
alias resolution technique that improves alias resolution coverage by 68.4% on
Internet2 for IPv6 and by 40.9% on Switch for IPv4 (2) a free, open source,
and permissively licensed tool that implements the algorithm.
We evaluate Limited Ltd. by comparing its performance to two state-of-the-
art alias resolution tools: Speedtrap [29] for IPv6, and Midar [26] for IPv4,
using ground truth provided by the Internet2 and Switch networks.
The remainder of this paper is organized as follows: Sect. 2 provides technical
background and related work for both alias resolution and ICMP rate limiting.
Section 3 describes the Limited Ltd. technique in detail. Section 4 presents the
evaluation. Section 5 discusses ethical considerations and Sect. 6 summarizes our
conclusions and points to future work.
2 Background and Related Work
Limited Ltd. is the latest in a long line of alias resolution methods stretching back
over twenty-plus years. An inventory of all previously known techniques (Table 1)
shows that there are only four techniques known to work for IPv6. Of these,
there is a publicly-available tool for only one: Speedtrap [29]. But Speedtrap
has a known limitation of only working on routers that generate monotonically
increasing IPv6 fragmentation IDs, whereas there is an entire class of routers,
such as those from Juniper, that do not generate IDs this way. Relying upon
monotonically increasing IP IDs for IPv4, as does state-of-the-art Midar [26],
presents a diﬀerent issue: fewer and fewer routers treat IPv4 IP IDs this way due
to a potential vulnerability [2,15]. Limited Ltd. is a publicly available tool that
does not rely upon monotonically increasing IDs, thereby enabling IPv6 alias
resolution on Juniper routers for the ﬁrst time and IPv4 alias resolution on a
growing class of routers for which Midar will no longer work.
Regarding ICMP, the Internet Control Message Protocol: its IPv4 and IPv6
variants [13,34] allow routers or end-hosts to send error and informational mes-
sages. The RFC for ICMPv6 [13] cites the “bandwidth and forwarding costs”
of originating ICMP messages to motivate the need to limit the rate at which a
node originates ICMP messages. It also recommends the use of a token bucket
mechanism for rate limiting. It explicitly calls for compatibility with traceroute
by stating that “Rate-limiting mechanisms that cannot cope with bursty traﬃc
(e.g., traceroute) are not recommended”. Furthermore, it states that, in the case
of “ICMP messages [being] used to attempt denial-of-service attacks by sending
back to back erroneous IP packets”, an implementation that correctly deploys
Alias Resolution Based on ICMP Rate Limiting
233
Table 1. Alias resolution methods
Algorithms and tools Condition of
applicability
IPv4
IPv6
Year
Basis
(s) = signature
(t) = topology
(o) = other
1998 [32] Source IP address (s) Pansiot and
Grad [32]
Mercator [16]
2002 [40] IP ID (s)
Ally [40]
Respond with a
common IP address in
ICMP Destination
Unreachable messages
Send replies with a
shared IP ID counter
that increases
monotonically with
each reply
(τ ) = tool
(δ ) = dataset
Yes
Yes
(τ ) (δ )
Yes
(τ )
Yes
(τ )
Yes
(τ ) (δ )
IP address resolves to
a name
Yes
Yes
Respond with ICMP
Time Exceeded
messages
Yes
Yes
(τ ) (δ )
RadarGun [7]
Midar [26]
Rocketfuel [40]
Aroma [28]
Apar [17]
kapar [25]
2002 [40] Reverse DNS (o)
2006 [17] traceroute (t)
2010 [38] IP Prespeciﬁed
Timestamp
option (s)
2010 [36] IPv6 source
routing (s)
2013 [29] IPv6 fragmentation
Speedtrap [29]
identiﬁer (s)
2013 [39] IP Record Route
DisCarte [39]
option (t)
2015 [31] IPv6 unused
2019
address (s)
ICMP rate
limiting (s)
Sherry et al. [38]
Pythia [30]
Fill in timestamps as
speciﬁed by the option
yes
Qian et al. [35, 36]
Source routing must be
enabled
IDs elicited from
responses increase
monotonically
Fill in IP addresses as
speciﬁed by the option
Yes
Yes
Yes
(τ ) (δ )
Yes
Padman-abhan et
al. [31]
Limited Ltd.
126 preﬁxes on a point
to point link
ICMP rate limiting
shared by interfaces of
the router
Yes
(τ ) (δ )
Yes
(τ ) (δ )
the recommended token bucket mechanism “would be protected by the ICMP
error rate limiting mechanism”. The RFC makes ICMP rate limiting mandatory
for all IPv6 nodes. ICMP rate limiting is a supported feature on all modern
routers but its implementation may vary by vendor [9,11,12,14,20,22–24] based
on ICMP message type and IP version. ICMP rate limiting can be performed on
incoming traﬃc or generated replies. Limited Ltd. makes no distinction between
the two. It works whenever multiple interfaces of a router are subject to a com-
mon ICMP rate limiting mechanism, i.e., when there is a shared token bucket
across multiple interfaces. Vendor documentation [11,20,23,24], indicates that
ping packets are more likely to trigger shared ICMP rate limiting behavior. We
234
K. Vermeulen et al.
validated this observation in a prior survey and in a lab environment. In par-
ticular on Juniper (model J4350, JunOS 8.0R2.8), we observed a shared ICMP
rate limiting mechanism for Echo Reply, Destination Unreachable and Time
Exceeded packets across all of its interfaces by default. But on Cisco (model
3825, IOS 12.3), we observed that the rates for Time Exceeded and Destination
Unreachable packets are limited on individual interfaces by default, and only the
rate for Echo Reply packets is shared across diﬀerent interfaces [10]. Therefore,
we adopted the ping Echo Request and Echo Reply mechanism in our tool to
maximize the chances of encountering shared ICMP rate limits across router
interfaces.
A few prior studies have examined ICMP rate limiting behavior in the Inter-
net. Ravaioli et al. [37] identiﬁed two types of behavior when triggering ICMP
rate limiting of Time Exceeded messages by an interface: on/oﬀ and non on/oﬀ.
Alvarez et al. [4] demonstrated that ICMP Time Exceeded rate limiting is more
widespread in IPv6 than in IPv4. Guo and Heidemann [19] later proposed an
algorithm, Fader, to detect ICMP Echo Request/Reply rate limiting at very
low probing rates, up to 1 packet per second. They found rate limiting at those
rates for very few /24 preﬁxes. Our work is the ﬁrst one that exploits the shared
nature of ICMP rate limiting across diﬀerent interfaces of a router as a signature
to relate these interfaces for alias resolution.
3 Algorithm
The main intuition behind our approach is that two interfaces of a router that
implements shared ICMP rate limiting, should exhibit a similar loss pattern if
they are both probed by ICMP packets at a cumulative rate that triggers rate
limiting. The key challenges are to eﬃciently trigger rate limiting and reliably
associate aliases based on the similarity of their loss patterns despite the noise
due to independent losses of probes and replies.
Pseudo code 1 describes how Limited Ltd. divides a set of input IP addresses
into subsets that should each be an alias set. It proceeds iteratively, taking the
following steps in each iteration: First, a random IP address from the input set
is selected as a seed, with all remaining members of the input set being candi-
date aliases for the seed. The seed is probed at incrementally higher rates until
the rate rs that induces ICMP rate limiting is identiﬁed (find rate()). Then,
the seed is probed at that rate of rs while all of the candidates interfaces are
simultaneously probed at low rates. All probing takes place from a single van-
tage point. Loss traces for reply packets from the seed and each of the candidate
interfaces are gathered. It is very challenging to infer that two interfaces are
aliases by directly correlating their loss traces. Instead, the algorithm extracts a
set of features from each loss trace and collectively uses these as the signatures
of the corresponding interfaces(signatures()). Using a classiﬁcation technique
(classify()), the algorithm examines whether the signatures of candidate and
seed are suﬃciently similar to classify them as aliases, in which case the candidate
is added to an alias set (As). Each identiﬁed alias set is reﬁned through further
Alias Resolution Based on ICMP Rate Limiting
235
testing in order to reduce the chance of false positives (refine()). Finally, the
alias set is removed from the input set, and iterations continue until the input
set is empty. The remainder of this section further details these steps.
3.1 Triggering ICMP Rate Limiting
The goal of find rate(s) is to eﬃciently determine rs, the probing rate that
triggers ICMP rate limiting at the router to which seed s belongs. It proceeds
by probing the seed with ICMP Echo Request probes across multiple rounds,
increasing the probing rate with each round until the loss rate of observed ICMP
Echo Replies enters a target range. The target loss range should be suﬃciently
large to minimize the eﬀect of random independent losses and also relatively
small to minimize the load on the router. To satisfy these two opposing con-
ditions, we empirically set the range at 5 to 10%. The probing rate remains
constant during each round. The rate is low (64 pps) for the ﬁrst round, and
exponentially increases in consecutive rounds until the loss rate falls within (or
exceeds) the target range.1 If the observed loss rate is within the target range,
the probing is concluded and the last rate is reported as rs. But if the loss rate
is higher than the target range, up to eight additional rounds are launched in a
binary search between the last two rates. If the loss rate still does not fall within
the target range, the probing rate that generates the loss rate closest to the range
1 We have explicitly veriﬁed that the actual probing rate is not limited by the network
card or other factors.
236
K. Vermeulen et al.
Fig. 1. CDF of the probing rate rs (left) and the number of probing rounds (right) to
trigger ICMP rate limiting for 2,277 IPv4 and 1,099 IPv6 addresses.
is chosen. If the target loss range is not reached as the probing reaches a max-
imum rate (32,768 pps), the probing process ends without any conclusion. The
duration of each round of probing should be suﬃciently long to reliably capture
the loss rate while it should also be limited to control the overhead of probing.
We experimentally set the duration of each round of probing to 5 s, followed by a
period, of equal length, of no probing. The right plot of Fig. 1 presents the CDF
of the number of probing rounds to trigger the target loss rate for thousands of
IPv4 and IPv6 interfaces (using our dataset from Sect. 3.3). We observe that for
90% of IPv4 or IPv6 interfaces, the ICMP rate limiting is triggered in less than
8 rounds of probing. The left plot of Fig. 1 shows the CDF of the probing rate
that triggered the target loss rate (i.e., the inferred rate for triggering the ICMP
rate limiting) across the same IPv4 and IPv6 interfaces. This ﬁgure indicates
that for 70% (80%) of IPv6 (IPv4) interfaces, ICMP rate limiting is triggered
at less than 2k pps. This result conﬁrms that our selected min and max probing
rate covers a proper probing range for more than 99% of interfaces. We note
that the binary search process failed to reach the target loss rate for fewer than