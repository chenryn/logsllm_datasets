the SKS scheme is the same as what is signed. Therefore, for different keywords w, different
keys known as the veriﬁcation keys are used in the encryption step in order not to breach the
conﬁdentiality of the other data after being revealed. The PV-SKS2 construction can be used
as a framework to transform any SKS scheme to a PV-SKS scheme. In this construction Π
is an SSE (SKS) scheme according to the Deﬁnition 3, Γ is a digital signature scheme and
H is a second-preimage resistant hash function (see Appendix A.1).
Theorem 3 If F is a secure PRF, π is a secure PRP,Π is an LΠ -adaptively-secure SSE, then
the proposed construction PV-SKS2 is L-adaptively-secure (L will be explained during the
proof).
Proof In deﬁnition 7, the experiment SimΣA,S (λ) is as follows:
1. the adversary A chooses D B.
2. the simulator S on input L(D B) = (LΠ (D B),|W|) constructs Y
∗, ak
∗
and E D B
∗, pk
follows:
– recalls the simulator SΠ of the protocol Π on input LΠ (D B) to construct E D B
– runs (sk
– for j = 1, . . . ,|W|
∗ = pk
∗
∗ randomly chooses r j from the rang of π and r
∗ sets Y
∗) ← Γ .Gen(1λ) and sets ak
(cid:8)
j from the rang of F
∗[r j] = (cid:12)r
, Γ .Sign(sk
)(cid:13)
∗, r
(cid:8)
j
(cid:8)
j
∗, vtag
3. the adversary A repeatedly chooses the query wc.
4. the simulator S on input L(D B, w1, . . . , wc) = (LΠ (D B, w1, . . . , wc),|W|, S Pc) con-
structs V
– recalls the simulator SΠ on input LΠ (D B, w1, . . . , wc) to simulate related interac-
tions and V
– if S Pc = ∅
as follows:
∗, vk
∗
∗
∗
Π as
∗
Π .
123
Publicly veriﬁable SSE
135
Fig. 2 PV-SKS2 construction
∗ randomly chooses a number j ∈ {1, . . . ,|W|} such that it has not already been
chosen
∗ sets vtag
– if S Pc (cid:11)= ∅
∗, vk
assigns vtag
their values from the previous repetition of the query
∗ = r j and vk
∗
⊕ H (V
∗ = r
∗)
(cid:8)
j
The rest of the interactions are simulated exactly the same as the real protocol.
Since Π is a LΠ -adaptively-secure SSE scheme, E D B
and related interactions are
computationally indistinguishable from the corresponding E D BΠ , V and related interac-
tions. As π is a PRP and F is a PRF vtag
are computationally indistinguishable
(cid:16)(cid:17)
from vtag, vk and Y . Thus, obviously PV-SKS2 construction is L-adaptively-secure.
∗, vk
∗
Π ,V
∗
∗
∗
and Y
Theorem 4 If H is a second-preimage resistant hash function and Γ is an unforgeable
digital signature, then PV-SKS2 construction is publicly-sound.
A= for some w ∈ W , the adversary A can produce (V
Proof We deﬁne the event A as follows:
∗) ⊕ c
∗ (cid:11)= V ,
∗ = vk. Where V and vk are obtained from the
Γ .Vrfy( pk, c
honest implementation of PV-SKS2 construction (i.e. vk = F (KV , w) and V = D B(w)).
∗, σ∗) = 1 and H (V
∗, σ∗) such that V
∗, c
123
136
A. Soleimanian, S. Khazaei
We then have:
Pr[SoundΣA(λ) = 1] = Pr[A]
= Pr[A|H (V
+ Pr[A|H (V
≤ Pr[H (V
∗) = H (V )]. Pr[H (V
∗) (cid:11)= H (V )]. Pr[H (V
∗) = H (V )] + Pr[A|H (V
∗) = H (V )]
∗) (cid:11)= H (V )]
∗) (cid:11)= H (V )] ≤ negl(λ).
The last inequality is satisﬁed because H is a second-preimage resistant hash function and
(cid:16)(cid:17)
Γ is an unforgeable digital signature.
5 Proposed PV-SSE constructions
In this section, two PV-SSE constructions that can support Boolean queries are presented.
The ﬁrst one uses two rounds of interaction (from the client’s point of view) while the second
one, based on the idea of OXT algorithm, includes one round of interaction at the cost of
more computation overhead. In our constructions, for simplicity the description is given for
queries of the form q = w1 ∧ . . . ∧ wm. However, both constructions can support all the
queries of the form w1 ∧ φ (w2, . . . , wm ) where φ is an arbitrary Boolean formula.
5.1 PV-SSE1 construction
The idea of the ﬁrst PV-SSE construction is as follows. For the query q = w1∧. . .∧wm, at ﬁrst
we need to extract the documents which contain the keyword w1. Then, for each extracted
document we examine if it contains other keywords w2, . . . , wm as well. Obviously, if it
contains all the other keywords, it means that the document satisﬁes the query. More formally,
in the ﬁrst round our PV-SKS2 is implemented and the client ﬁnds D B(w1) = (id1, . . . , idl )
where l = |D B(w1)|. In the second round, the membership wi ∈ Wid j for i = 2, . . . , m and
j = 1, . . . , l should be examined and if ∀i = 2, . . . , m, wi ∈ Wid j then Wid j satisﬁes the
query. For this purpose, in the second round our PV-SKS1 construction is used in parallel on
the queries q j = (W
(cid:8) = (w2, . . . , wm ) and j = 1, . . . , l.
(cid:8), id j ) where W
Intuitively, if more rounds are used, it can leak more information if the scheme is not
carefully implemented. Thus, while we are using PV-SSK2 in the ﬁrst round, the security
issues should be borne in mind for not leaking lots of information. As it is shown in Fig.
2, our PV-SKS2 construction uses an arbitrary SSE scheme as its sub-component. Different
SSE schemes may have different levels of security and leakage. Here, for the security issues
we consider an SSE scheme persevering the access pattern. More precisely, for a keyword
w the mentioned SSE scheme returns the encrypted form of D B(w) (not D B(w) itself). In
the following construction (Fig. 3) Λ denotes the PV-SKS1 construction and Σ denotes the
PV-SKS2 construction.
Theorem 5 If Λ is LΛ-adaptively-secure and Σ is LΣ -adaptively-secure, then the proposed
PV-SSE1 is L-adaptively-secure where L = (LΛ, LΣ ).
The proof is straightforward.
Theorem 6 If Λ and Σ are publicly-sound, then PV-SSE1 construction is also publicly-
sound.
Since the proof is straightforward, it is eliminated.
123
Publicly veriﬁable SSE
137
Fig. 3 PV-SSE1 construction
5.2 PV-SSE2 construction
As mentioned in PV-SSE1 construction, an interaction is needed so that the client can get
D B(w1). To eliminate this interaction, our PV-SSE2 inspired by OXT algorithm is presented
in Figs. 4, 5 and 6. The general idea is that, during the Setup algorithm, the client needs
to construct a data-structure T Set which contains a list of tuples corresponding to D B(w)
indexed by w ∈ W . In fact, each tuple corresponds to an identiﬁer id ∈ D B(w) and contains
an encrypted form of id and some more information allowing to examine the membership of
other keywords in this document. Thus, by using data-structure T Set, the required interaction
can be removed. Another data-structure is needed to verify that the list of tuples extracted
by the server (through T Set) is correct and complete. This veriﬁcation is done in a sim-
ilar approach to PV-SKS2 through the data-structure Y . The data-structure X indexed by
(w, id) ∈ W × I D is used to check the membership of wi in Wid j for i = 2, . . . , m and
j = 1, . . . , l where D B(w1) = (id1, . . . , idl ) and l = |D B(w1)| in a similar approch to
PV-SKS1.
Since D B(w1) is only available on the server side (as a list of tuples through T Set) and
due to the fact that the client does not have any information about it, the client and the server
should cooperate to ﬁnd the associated cell of X indexed by (wi , id j ). This can be done by
additional information that was stored in T Set for each identiﬁer id j and some information
from the client about wi , i = 2, . . . , m. More precisely, the client sends g
to
F X
p (K X ,wi )
1
123
138
A. Soleimanian, S. Khazaei
the server and the server extracts F I
p
(K I , id j ) from T Set as the information associated
F X
p (K X ,wi ).F I
with the identiﬁer id j and then computes g
1
mentioned cell of X. For the security issues, the values F I
p
p (K I ,id j )
which is the address of the
(K I , id j ) should be blinded as
F X
p (K X ,wi )
1
j where z j = F Z
−1
p
(K Z , w1|| j ) and instead of g
1
F I
p
(K I , id j ).z
, w(cid:8)
) by examining id1, id2 for w(cid:8)
2.
, the client needs
for i = 2, . . . , m and j = 1, . . . , l, otherwise the server can use the
F X
p (K X ,wi ).z j
to send g
1
received information from the client for some chosen identiﬁers. For example, if the client
) where D B(w1) = id1, id2, then the
has already asked for the queries (w1, w2) and (w(cid:8)
server can search for a new query (w1, w(cid:8)
Due to the security issues, the data-structure X should not leak any information beyond
the size of the collection (i.e., |I D| × |W|). The address and the value of a target cell
maybe revealed, but only after a corresponding query has been made. For this purpose, the
address and the value of each cell should seem random. On the other hand, according to
the requirement of the protocol, the address and the value of each cell are created based
on some information on the server side and some information on the client side. By using
exponentiations and DDH assumption, it is guaranteed that server’s information and the
information provided by the client (for a target cell) are not enough to extract information
about the other cells of X.
2
2
After getting to the corresponding cell of X, in a similar approach to the PV-SKS1 scheme,
the server should be able to check the membership and produce a proof. The only difference
with PV-SKS1 scheme is that storing pairs tag0 and tag1 on the server side can arise a
security issue. The issue is that since the value D B(w1) is available only on the server side
(as a list of tuples), the veriﬁcation keys vk0, vk1, generated on the client side, should only
depend on the keywords. However, it is not possible to correctly verify the returned results
by veriﬁcation keys only based on the keywords. More precisely, the server can change the
identiﬁers and there is no way for it to be detected. Therefore, the pair tag0 and tag1 should
be produced by the client for the associated identiﬁer via a counter such that the association
between the identiﬁer and the counter will be veriﬁed through Y .
In PV-SSE2 construction (Figs. 4, 5 and 6), g1 is the generator of a cyclic group G of order
p, g is a OWF, HY is a second-preimage resistant hash function, (Enc, Dec) is a CPA-secure
symmetric encryption scheme (see Appendix A.1) and Σ = (TSetSetup, TSetGetTag,
TSetRetrieve) is a TSet scheme.
, F X
The computational correctness of PV-SSE2 construction can be attained by the fact that the
only way the correctness can fail is if either T Set fails and D B(w1) is not correctly extracted
or if the related cells of X are not correctly attained. Therefore, if T Set is computationally
correct and F I
p are PRF’s then PV-SSE2 is computationally correct. We will ignore to
p
provide a rigorous proof since it is essentially the same as that of Lemma 4 from [8], i.e., the
computational correctness of OXT.
Since the leakage proﬁle L associated with PV-SSE2 is more complicated, it is separately
clariﬁed here. Each conjunctive query q j = w1 ∧ w2 ∧ . . . ∧ wm is symbolically shown as
= wi+1, i =
q j = (s j , x j
1, . . . , m − 1 (m can vary between different queries). The terms s j and x j
i are respectively
known as s-term and x-terms. The notation idc
s denotes the associated identiﬁer with c-th tuple
in t = T[s] (i.e., t ← TSetRetrieve(T Set, stag) where stag ← TSetGetTag(KT , s)).
m ) where for the mentioned query we have s j = w1 and x j
, . . . , x j
1
i
PV-SSE2 leakage proﬁle (L):
1. N = Σw∈W|D B(w)| (the leakage of T Set)
2. |W| × |I D| (the leakage of X)
123
Publicly veriﬁable SSE
139
Fig. 4 PV-SSE2 construction (Setup algorithm)
Fig. 5 PV-SSE2 construction (Search protocol)
3. |W| (the leakage of Y )
4. the repetition in the s-terms: it is revealed that which queries have the same s-terms.
For example, for queries q1 = (w, w1, w2), q2 = (w(cid:8), w2, w3), q3 = (w, w1, w4) the
s-term is repeated in q1, q3 i.e., s1 = s3 = w
5. |D B(s)| for each query q = (s, x1, . . . , xm )
6. #x: the number of existing x-terms in the query (e.g., for query q = (s, x1, x2), #x = 2)
123
140
A. Soleimanian, S. Khazaei
Fig. 6 PV-SSE2 construction (Search protocol)
7. the conditional repetition in x-term/identiﬁer pairs for two queries. For example, for
= x 2
2 if
8. membership pattern: for query q = (s, x1, . . . , xm ), if xi ∈ Widc
s then b[i, c] = 1 and
9. general access pattern: for each query q = (s, x1, . . . , xm ), the set AP = {id ∈
queries q1 = (w, w1, w2) and q2 = (w(cid:8), w3, w1) the server concludes that x 1
D B(s1) ∩ D B(s2) (cid:11)= ∅, otherwise it learns nothing about the repetition.
b[i, c] = 0 otherwise.
D B(s)|∀ i = 1, . . . , m xi ∈ Wid} is revealed.
1
In the following theorem, we consider a TSet instantiation which is (1,4,5)-adaptively-secure
where (1,4,5) are from the above PV-SSE2 leakage proﬁle (such TSet instantiation is pre-
sented in [8]). DDH assumption is presented in Appendix A.1.
Theorem 7 Let TSet be computationally correct and (1,4,5)-adaptively-secure. If F I
, F X
, F Z
p
p
p
and F are secure PRFs, π is a secure PRP, (Enc, Dec) is a CPA-secure symmetric encryption
scheme and DDH assumption holds in group G, then PV-SSE2 is L-adaptively-secure.
Proof In deﬁnition 7, the experiment SimΣA,S (λ) is as follows.
1. the adversary A selects D B
2. on input L(D B) = (1, 2, 3) from the speciﬁed leakage proﬁle for PV-SSE2 construction,
∗, X
∗, Y
∗
the simulator S construct T Set
∗ recalls the simulator of TSet on input N to construct T Set
as follows: