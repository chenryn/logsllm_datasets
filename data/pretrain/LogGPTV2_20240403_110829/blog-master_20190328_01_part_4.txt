         LANGUAGE sql  
         PARALLEL SAFE STRICT COST 1  
        AS $function$select replace(gen_pg_random_uuid()::text,'-','')::RAW(16)$function$  
postgresdb-> \df+ gen_pg_random_uuid  
                                                                                            List of functions  
   Schema   |        Name        | Result data type | Argument data types | Type | Volatility | Parallel |  Owner   | Security | Access privileges | Language |    Source code     |     Description        
------------+--------------------+------------------+---------------------+------+------------+----------+----------+----------+-------------------+----------+--------------------+----------------------  
 pg_catalog | gen_pg_random_uuid | uuid             |                     | func | volatile   | safe     | rdsAdmin | invoker  |                   | internal | gen_pg_random_uuid | generate random uuid  
(1 row)  
postgresdb=> select gen_pg_random_uuid();  
          gen_pg_random_uuid            
--------------------------------------  
 f268eec7-389b-4e0a-ba32-4b6a081d1392  
(1 row)  
postgresdb=> select replace('f268eec7-389b-4e0a-ba32-4b6a081d1392','-','')::raw(16);  
             replace                
----------------------------------  
 F268EEC7389B4E0ABA324B6A081D1392  
(1 row)  
```  
2、EDB EPAS  
```  
ERROR:  42883: function sys_guid() does not exist  
LINE 1: select sys_guid();  
               ^  
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.  
LOCATION:  ParseFuncOrColumn, parse_func.c:858  
```  
内核建议：通过pgcrypto提取gen_random_uuid函数代码，封装一下即可得到sys_uuid()，如下  
```  
postgresdb=> select upper(rawtohex(hextoraw(replace('f268eec7-389b-4e0a-ba32-4b6a081d1392','-',''))));  
              upper                 
----------------------------------  
 F268EEC7389B4E0ABA324B6A081D1392  
(1 row)  
```  
### 3、number * 未支持  
```  
CREATE TABLE GRDK_DK_ZDPK_SBYY(  
    ID NUMBER(*, 0) DEFAULT 0 NOT NULL,  
    YHBM VARCHAR2(10) DEFAULT ' ' NOT NULL,  
    YHMC VARCHAR2(60) DEFAULT ' ' NOT NULL,  
    PKRQ DATE,  
    PKJD VARCHAR2(2) DEFAULT ' ' NOT NULL,  
    MSG VARCHAR2(100) DEFAULT ' ' NOT NULL,  
    PCID NUMBER(*, 0) DEFAULT 0 NOT NULL,  
    ZXJGBM VARCHAR2(60) DEFAULT ' ' NOT NULL  
);  
```  
1、其他PG商业版  
```  
postgresdb=> \d+ GRDK_DK_ZDPK_SBYY  
                                            Table "public.grdk_dk_zdpk_sbyy"  
 Column |          Type          | Collation | Nullable |        Default         | Storage  | Stats target | Description   
--------+------------------------+-----------+----------+------------------------+----------+--------------+-------------  
 id     | numeric(38,0)          |           | not null | 0                      | main     |              |   
 yhbm   | character varying(10)  |           | not null | ' '::character varying | extended |              |   
 yhmc   | character varying(60)  |           | not null | ' '::character varying | extended |              |   
 pkrq   | date                   |           |          |                        | plain    |              |   
 pkjd   | character varying(2)   |           | not null | ' '::character varying | extended |              |   
 msg    | character varying(100) |           | not null | ' '::character varying | extended |              |   
 pcid   | numeric(38,0)          |           | not null | 0                      | main     |              |   
 zxjgbm | character varying(60)  |           | not null | ' '::character varying | extended |              |   
```  
2、EDB EPAS  
```  
ERROR:  42601: syntax error at or near "*"  
LINE 2:     ID NUMBER(*, 0) DEFAULT 0 NOT NULL,  
                      ^  
LOCATION:  scanner_yyerror, scan.l:1419  
```  
内核建议：```number(*``` 直接替换为最大长度38   
### 4、索引不支持schema  
```  
CREATE INDEX public.TMP_HR_USERXX_XXBG_SURE_ID ON public.t1(id);  
```  
1、其他PG商业版  
hack做法，实际上是在TABLE同一个SCHEMA里面  
```  
postgresdb=> CREATE INDEX wt.TMP_HR_USERXX_XXBG_SURE_ID ON public.t1(id);  
CREATE INDEX  
postgresdb=> CREATE INDEX public.TMP_HR_USERXX_XXBG_SURE_ID ON public.t1(id);  
ERROR:  42P07: relation "tmp_hr_userxx_xxbg_sure_id" already exists  
LOCATION:  index_create, index.c:877  
postgresdb=> \di tmp_hr_userxx_xxbg_sure_id   
                      List of relations  
 Schema |            Name            | Type  | Owner | Table   
--------+----------------------------+-------+-------+-------  
 public | tmp_hr_userxx_xxbg_sure_id | index | root  | t1  
(1 row)  
```  
2、EDB EPAS  
```  
postgres=# CREATE INDEX public.TMP_HR_USERXX_XXBG_SURE_ID ON public.t1(id);  
ERROR:  42601: syntax error at or near "."  
LINE 1: CREATE INDEX public.TMP_HR_USERXX_XXBG_SURE_ID ON public.t1(...  
                           ^  
LOCATION:  scanner_yyerror, scan.l:1419  
```  
内核建议：hack做法，实际上是在TABLE同一个SCHEMA里面  
### 5、不支持char指定byte, char长度  
```  
CREATE TABLE CHAR_DATA_TYPE_TEST(  
    CHAR2 CHAR(1),  
    CHAR3 CHAR(1 byte),  
    CHAR4 CHAR(1 CHAR),  
    VARCHAR21 VARCHAR2(1),  
    VARCHAR22 VARCHAR2(1),  
    VARCHAR23 VARCHAR2(1 CHAR),  
    NCHAR2 NCHAR(1),  
    NVARCHAR21 NVARCHAR2(1)  
);  
```  
1、其他PG商业版  
hack做法，byte, char都作为char  
```  
postgresdb=> \d char_data_type_test   
                 Table "public.char_data_type_test"  
   Column   |         Type         | Collation | Nullable | Default   
------------+----------------------+-----------+----------+---------  
 char2      | character(1)         |           |          |   
 char3      | character(1)         |           |          |   
 char4      | character(1)         |           |          |   
 varchar21  | character varying(1) |           |          |   
 varchar22  | character varying(1) |           |          |   
 varchar23  | character varying(1) |           |          |   
 nchar2     | character(1)         |           |          |   
 nvarchar21 | "nvarchar2"(1)       |           |          |   
```  
2、EDB EPAS  
```  
ERROR:  42601: syntax error at or near "byte"  
LINE 3:     CHAR3 CHAR(1 byte),  
                         ^  
LOCATION:  scanner_yyerror, scan.l:1419  
```  
内核建议：hack做法，byte, char都作为char  
### 6、CONSTRAINT DISABLE  
```  
ALTER TABLE a ADD CONSTRAINT a_pk PRIMARY KEY(ID) DISABLE;  
```  
1、其他PG商业版  
hack 做法，DISABLE CONSTRAINT隐式替换为ENABLE CONSTRAINT  
```  
WARNING:  01000: DISABLE CONSTRAINT is redirected to ENABLE CONSTRAINT.  
LOCATION:  base_yyparse, gram.y:4280  
ALTER TABLE  
```  
2、EDB EPAS  
```  
ERROR:  42601: syntax error at or near "DISABLE"  
LINE 1: ALTER TABLE a ADD CONSTRAINT a_pk PRIMARY KEY(ID) DISABLE;  
                                                          ^  
LOCATION:  scanner_yyerror, scan.l:1419  
```  
内核建议：：hack 做法，DISABLE CONSTRAINT隐式替换为ENABLE CONSTRAINT  
### 7、sequence 不支持order   
```  
CREATE SEQUENCE EF_MLH_BM  
    MINVALUE 1  
    MAXVALUE 9999999999  
    INCREMENT BY 1 START WITH 8  
    NOCACHE  
    NOORDER  
    CYCLE;  
```  
1、其他PG商业版  
hack做法，实际上都是noorder, 即使指定了order  
2、EDB EPAS  
```  
ERROR:  42601: syntax error at or near "NOORDER"  
LINE 6:     NOORDER  
            ^  
LOCATION:  scanner_yyerror, scan.l:1419  
```  
内核建议：hack做法，实际上都是noorder,即使指定order  
### 8、PARTITION 不能作为列名  
```  
CREATE TABLE SCHEDULER_CONFIGRATION(  
    ID numeric NOT NULL,  
    GMT_CREATED TIMESTAMP(6),  
    GMT_MODIFIED TIMESTAMP(6),  
    CREATOR VARCHAR2(32),  
    MODIFIER VARCHAR2(32),  
    JOB_NAME VARCHAR2(128) NOT NULL,  
    TRIGGER_NAME VARCHAR2(128),  
    CRON_EXPRESSION VARCHAR2(128) NOT NULL,  
    STATUS VARCHAR2(32) NOT NULL,  
    EXECUTE_SERVERS VARCHAR2(512),  
    PARTITION VARCHAR2(512),  
    PERSISTENT VARCHAR2(32) DEFAULT 'N',  
    PRIORITY numeric DEFAULT 5  
);  
```  
1、其他PG商业版  
支持  
2、社区版本PG  
支持  
3、EDB EPAS 报错  
```  
ERROR:  42601: syntax error at or near "PARTITION"  
LINE 12:     PARTITION VARCHAR2(512),  
             ^  
LOCATION:  scanner_yyerror, scan.l:1419  
```  
内核建议：改进EPAS语法解析器  
### 9、关键字必须使用as才支持作为alias name  
```  
create view v(name) as select relname from pg_class union all select '' name;  
```  
1、其他PG商业版  
支持  
2、EDB EPAS 以及 社区版本PG 报错  
```  
ERROR:  42601: syntax error at or near "name"  
LINE 1: ...e) as select relname from pg_class union all select '' name;  
                                                                  ^  
LOCATION:  scanner_yyerror, scan.l:1419  
```  
改成如下SQL后通过  
```  
create view v(name) as select relname from pg_class union all select '' as name;  
```  
内核建议：改进语法解析器  
### 10、隐式转换不全面  
```  
select nvl2(a,b,c) from (values ('a'::text,'b',to_char('a')) ) as t(a,b,c);  
```  
1、其他PG商业版  
支持  
2、EDB EPAS 以及 社区版本PG 报错  
```  
ERROR:  42883: function nvl2(text, text, character varying) does not exist  
LINE 1: select nvl2(a,b,c) from (values ('a'::text,'b',to_char('a'))...  
               ^  
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.  
LOCATION:  ParseFuncOrColumn, parse_func.c:858  
```  
内核建议：增加隐式转换。  
# 小结  
1、EDB优势，其他PG商用发行版弱势  
分类1 | 分类2 | EDB EPAS | 其他商用发行版PG | 社区版本PG+orafce插件  
---|---|---|---|---  
分区表 | PARTITION BY RANGE | 兼容 | 不兼容 | 不兼容  
分区表 | PARTITION BY HASH | 兼容 | 不兼容 | 不兼容  
分区表 | PARTITION BY LIST | 兼容 | 不兼容 | 不兼容  
分区表 | SUB-PARTITIONING | 兼容 | 不兼容 | 不兼容  
类型 | NUMBER | 兼容 | 兼容 | 不兼容  
类型 | VARCHAR2 , NVARCHAR2 | 兼容 | 兼容 | 兼容  
类型 | CLOB | 兼容 | 兼容 | 不兼容  
类型 | BLOB | 兼容 | 兼容 | 不兼容  
类型 | RAW | 兼容 | 不兼容 | 不兼容  
类型 | LONG RAW | 兼容 | 不兼容 | 不兼容  
类型 | DATE | 兼容 | 不兼容 | 不兼容  
SQL语法 | HIERARCHICAL QUERIES | 兼容 | 不兼容 | 不兼容  
SQL语法 | SYNONYMS (PUBLIC AND PRIVATE) | 兼容 | 不兼容 | 不兼容  
SQL语法 | SEQUENCE GENERATOR | 兼容 | 兼容 | 不兼容  
SQL语法 | HINT | 兼容 | 不兼容 | 不兼容  
函数 | 支持个数 | 3155 | 2514 | 2775   
函数 | DUAL | 兼容 | 兼容 | 兼容  
函数 | DECODE | 兼容 | 兼容 | 兼容  
函数 | ROWNUM | 兼容 | 不兼容 | 不兼容  
函数 | SYSDATE | 兼容 | 不兼容 | 不兼容  
函数 | SYSTIMESTAMP | 兼容 | 不兼容 | 不兼容  
函数 | NVL | 兼容 | 兼容 | 兼容  
函数 | NVL2 | 兼容 | 兼容 | 兼容  
安全 | DATA REDACTION | 兼容 | 不兼容 | 不兼容  
安全 | Database Firewall Only (SQL/Protect) | 兼容 | 不兼容 | 不兼容  
安全 | VPD | 兼容 | 不兼容 | 不兼容  
安全 | PL/SQL代码加密 | 兼容 | 不兼容 | 不兼容  
安全 | PROFILES FOR PASSWORDS | 兼容 | 不兼容 | 不兼容  
PL/SQL | PL/SQL Compatible | 兼容 | 不兼容 | 不兼容  
PL/SQL | NAMED PARAMETER NOTATION FOR STORED PROCEDURES | 兼容 | 不兼容 | 不兼容  
PL/SQL | TRIGGERS | 兼容 | 不兼容 | 不兼容  
PL/SQL | REF CURSORS | 兼容 | 不兼容 | 不兼容  
PL/SQL | IMPLICIT / EXPLICIT CURSORS | 兼容 | 不兼容 | 不兼容  
PL/SQL | ANONYMOUS BLOCKS | 兼容 | 不兼容 | 不兼容  
PL/SQL | BULK COLLECT/BIND | 兼容 | 不兼容 | 不兼容  
PL/SQL | ASSOCIATIVE ARRAYS | 兼容 | 不兼容 | 不兼容  
PL/SQL | NESTED TABLES | 兼容 | 不兼容 | 不兼容  
PL/SQL | VARRAYS | 兼容 | 不兼容 | 不兼容  
PL/SQL | PL/SQL SUPPLIED PACKAGES | 兼容 | 不兼容 | 不兼容  
PL/SQL | PRAGMA RESTRICT_REFERENCES | 兼容 | 不兼容 | 不兼容  
PL/SQL | PRAGMA EXCEPTION_INIT | 兼容 | 不兼容 | 不兼容  
PL/SQL | PRAGMA AUTONOMOUS_TRANSACTION | 兼容 | 不兼容 | 不兼容  
PL/SQL | USER DEFINED EXCEPTIONS| 兼容 | 不兼容 | 不兼容  
PL/SQL | OBJECT TYPES | 兼容 | 不兼容 | 不兼容  
PL/SQL | SUB-TYPES | 兼容 | 不兼容 | 不兼容  
包 | 支持的包 | 26 | 2 | 7  
包 | 包内置函数 | 317 | 6 | 97  
高级功能 | DATABASE LINKS | 兼容 | 不兼容 | 不兼容  
高级功能 | AWR | 兼容 | 不兼容 | 不兼容  
高级功能 | sql profile | 兼容 | 不兼容 | 不兼容  
高级功能 | 索引推荐 | 兼容 | 不兼容 | 不兼容  
高级功能 | 用户级 cpu, memory 资源隔离 | 兼容 | 不兼容 | 不兼容  
高级功能 | TUNING PACKAGE | 兼容 | 不兼容 | 不兼容  
系统视图 | 系统视图个数 | 88 | 40 | 11  
C内嵌编程 | Pro\*C | 兼容 | 不兼容 | 不兼容  
客户端驱动 | OCI | 兼容 | 不兼容 | 不兼容  
2、社区PG优势，ORACLE弱势  
功能点 | PG | Oracle | 说明   
---|---|---|---  
GiST 索引 | 支持 | 不支持 | 空间、范围、向量、相似、图像等均可支持  
GIN 索引 | 支持 | 不支持 | 倒排索引，与搜索引擎类似功能  
TRANSACTIONAL DDL | 支持 | 不支持 | DDL可以封装到事务中，确保原子性。  
VIEW SECURITY BARRIERS | 支持 | 不支持 | 视图安全  
SESSION BASED SYNCHRONOUS REPLICATION | 支持 | 不支持 | 会话级事务同步模式可选  
数据库编程语言 | 支持 | 仅java | 几乎任意语言都可以成为PG的存储过程编程语言  
3、社区PG弱势，ORACLE优势  
功能点 | PG | Oracle | 说明   
---|---|---|---  
DATABASE VAULT | 不支持 | 支持 | -  
DATA MASKING | 不支持 | 支持 | 数据脱敏  
FLASHBACK QUERY | 不支持(通过插件支持) | 支持 | 闪回  
FLASHBACK TABLE, DATABASE AND TRANSACTION QUERY | 不支持(通过插件支持) | 支持 | 回收站  
REAL APPLICATION CLUSTERS (RAC) | 不支持 | 支持 | -  
IN-MEMORY DATABASE | 不支持 | 支持 | 内存数据库  
SUPPORT FOR XML NAMESPACES, DOM, XQUERY, SQL/XML AND XSLT. | 不支持 | 支持 | -  
COMPRESSION (TABLES, FILES, NETWORK, AND BACKUPS) | 不支持 | 支持 | 压缩  
TRANSPORTABLE CROSS-PLATFORM TABLE SPACES | 不支持(通过插件支持) | 支持 | 传输表  
ADVANCED COMPRESSION | 不支持(通过插件支持) | 支持 | 压缩  
ONLINE REORGANIZATION | 不支持(通过插件支持) | 支持 | 在线重组表  
AUTOMATIC MEMORY MANAGEMENT | 不支持 | 支持 | 自动内存管理  
AUTOMATIC STORAGE MANAGEMENT | 不支持 | 支持 | 自动存储管理  
4、EDB弱势，其他PG商用发行版优势  
功能点 | EDB EPAS | 其他PG商用发行版 | 说明   
---|---|---|---  
oid 冲突 | 报错 | 通过 | oid作为列名  
sys_guid | 报错 | 通过 | sys_guid函数  
number \* | 报错 | 通过 | 自动将\*转换为最大长度  
索引不支持指定schema | 报错 | 通过 | 隐式转换为table相同schema  
不支持char指定byte, char长度 | 报错 | 通过 | 隐式转换为字符长度  
CONSTRAINT DISABLE | 报错 | 通过 | 隐式转换为enable  
sequence 不支持order | 报错 | 通过 | 隐式转换为noorder  
PARTITION 不能作为列名 | 报错 | 通过 | 语义解析错误  
关键字必须使用as才支持作为alias name | 报错 | 通过 | 语义解析错误  
隐式转换不全面 | 报错 | 通过 | 隐式转换问题  
有几个点其他商用PG发行版兼容性好于EDB EPAS，采用的是HACK的做法，（例如：sequence order hack做法，实际上都是noorder,即使指定order）。     
EDB EPAS 是当前ORACLE兼容性最好的版本，深度兼容ORACLE。  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")