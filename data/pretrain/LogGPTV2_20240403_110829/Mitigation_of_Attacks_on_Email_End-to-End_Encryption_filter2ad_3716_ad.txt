6We reported this finding to the vendor.
7https://www.thunderbird.net/en-US/, version 60.9.0.
8https://sourceforge.net/projects/enigmail/, version 2.0.8.
9https://gnupg.org/, master branch with commit identifier eae1ea6f.
Session 5E: Infrastructure Security CCS '20, November 9–13, 2020, Virtual Event, USA1654Table 2: Headers from the original message, as used in Reply and Reply-All draft emails by popular email clients.
Any of these headers can be used by an attacker to exfiltrate plaintext after decryption in a REPLY attack.
Reply
Reply-All
Precedence Header Field
-
-
-
Thunderbird68
AppleiPhone
Outlook2016
Outlook.com
AppleiMail
Others1
KMail5
Gmail
- (cid:71)(cid:35) -
Mail-Followup-To (cid:32) -
- (cid:71)(cid:35) -
-
-
-
(cid:32) (cid:71)(cid:35) (cid:32) (cid:32) (cid:32) (cid:71)(cid:35) (cid:71)(cid:35) (cid:35)
(cid:32) (cid:71)(cid:35) (cid:71)(cid:35) (cid:71)(cid:35) (cid:72)(cid:35) (cid:32) (cid:71)(cid:35) (cid:35)
-
-
-
(cid:71)(cid:35) -
-
-
-
-
Reply
Mail-Reply-To
Reply-To
From
Sender
Resent-From
To
Cc
Bcc
Apparently-To
- (cid:71)(cid:35) (cid:72)(cid:35) -
- (cid:32) -
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
1.
2.
3.
4.
5.
6.
7.
always
always
always
always
Headers used in draft:(cid:32) = all,(cid:71)(cid:35) = first,(cid:72)(cid:35) = last,(cid:35) = any (diverse)
1 K9-Android mobile app; AOL, GMX and mail.ru web mail.
-
-
-
-
-
-
-
-
-
-
-
-
-
-
Thunderbird68
AppleiPhone
Outlook2016
Outlook.com
AppleiMail
Others1
KMail5
Gmail
- (cid:32) -
(cid:32) -
-
-
-
-
-
(cid:32) (cid:71)(cid:35) (cid:32) (cid:32) (cid:32) (cid:71)(cid:35) (cid:71)(cid:35) (cid:35)
(cid:32) (cid:71)(cid:35) (cid:71)(cid:35) (cid:71)(cid:35) (cid:72)(cid:35) (cid:32) (cid:71)(cid:35) (cid:35)
-
-
-
-
(cid:32) (cid:71)(cid:35) (cid:32) (cid:32) (cid:32) (cid:32) (cid:71)(cid:35) (cid:35)
(cid:32) (cid:71)(cid:35) (cid:32) (cid:32) (cid:32) (cid:32) (cid:71)(cid:35) (cid:35)
-
-
(cid:32) -
-
- (cid:32) - (cid:32) -
- (cid:71)(cid:35) (cid:72)(cid:35) -
-
-
-
-
-
-
-
-
-
-
-
-
-
-
7.1 Security Guarantees from AEAD
Let M be the original email and MIME element, let DC be the
original decryption context, and let P be the DC policy contained in
DC. Then any attack that uses a modified email and MIME element
M∗ with
DC(M, P) (cid:44) DC(M
∗
, P)
Figure 5: Decryption context prevents decryption of emails
with modified SMTP headers (Figure 2 c).
Enigmail. We added a new account setting dcPolicy to set the
DC policy P that should be used for outgoing emails from this
account. For incoming encrypted emails, the DC policy is provided
in the email as header. In either case, the DC string is calculated
from the provided policy string P using the headers and the MIME
path of the encrypted element, and passed to GnuPG as custom AD.
If decryption fails, an error message is shown (see Figure 5).
Overhead. Our modifications to GnuPG add 28 new lines of source
code and modify 4 existing lines. Our modifications to Enigmail
add 204 lines and modify 15 lines. These numbers show that legacy
systems can easily be retrofitted to support the decryption context
mechanism.
7 DEFINING SECURE DC POLICIES
For now, we have shown that it is possible to define and implement
decryption context policies which mitigate basic attacks. In the fol-
lowing, we present the construction of a strong policy Pstrong. This
policy prevents all known EFAIL-DE and REPLY attacks possible
due to changes in the SMTP and MIME contexts.
will fail, since AEAD.Dec will only return a decryption error. Please
note that P cannot simply select all SMTP headers and all unen-
crypted MIME parts for inclusion in DC, since SMTP headers may
be added during SMTP transport, and the MIME structure may be
slightly changed by some email service providers (e.g., Microsoft
Outlook). Thus there is always a possibility to construct some mod-
ified email M′ for which DC(M, P) = DC(M′, P). So what we have
to show is that for a suitably defined DC policy Pstrong and a suit-
ably restricted email structure Mstrong, if DC(Mstrong, Pstrong) =
DC(M′, Pstrong), then no EFAIL-DE and REPLY attacks are possible.
From now on, we assume that a suitably secure AEAD scheme is
used, guaranteeing integrity of ciphertext (INT-CTXT, [4]).
7.2 Defining Pstrong and Mstrong
For Mstrong, we only allow a limited number of MIME types for the
root elements which are summarized in Table 3. We set Pstrong
(cid:66)
MIME
("mimepath").
SMTP , let R = {r1, r2, ..., rn} be the set of all reply-
related headers (see Section 5); if a Reply or Reply-All action is
triggered by the user, each email client will use one or more of
these headers to determine the email address which will be used to
send the reply to. Then we set Pstrong
SMTP
(cid:66) (r1, r2, . . . , rn).
In the rest of our security analysis, we assume that email clients
conform to RFC specifications. In particular we assume that re-
strictions on the MIME structure defined in the standards are
To define Pstrong
Session 5E: Infrastructure Security CCS '20, November 9–13, 2020, Virtual Event, USA1655Table 3: The MIME context DCMIME for common email encryption standards. micalg depends on the signing algorithm.
Protocol
OpenPGP (Sign &) Encrypt
S/MIME Encrypt
DCMI ME
:mimepath:multipart/encrypted; protocol="application/pgp-encrypted"\r\n
:mimepath:application/pkcs7-mime; protocol="smime-type=enveloped-data"\r\n
S/MIME Encrypt & Sign
:mimepath:multipart/signed; protocol="application/pkcs7-signature"; micalg=sha1\r\n
:mimepath:application/pkcs7-mime; protocol="smime-type=enveloped-data"\r\n
enforced by the email clients. For example, for PGP/MIME type
multipart/encrypted, the email client must enforce that there
are only two leaves to this MIME element, that the first leaf is of
type text/plain and contains only the ASCII string "Version:
1", and that the second leaf is of type application/octet-stream
and this octet-stream is handed to the OpenPGP plugin verbatim.
Along the same lines we assume that OpenPGP plugins and CMS
subroutines conform to their standards and check that the structure
of the data they receive is strictly conforming to the PKCS#7 and
OpenPGP standards.
7.3 Preventing EFAIL-DE and REPLY Attacks
Theorem 1. Assume that an INT-CTXT secure AEAD encryption
scheme is used, and that all email clients enforce MIME, CMS and
OpenPGP restrictions. Let Pstrong := (Pstrong
MIME ), Mstrong be
the original email complying with the restrictions defined above, M′
be a modified email message and P′ be an arbitrary DC policy with
SMTP , Pstrong
DC(M
′
, P′) = DC(Mstrong, Pstrong).
Then (M′, P′) cannot be used in EFAIL-DE or REPLY attacks.
Proof (Sketch). First, we note that P′ = Pstrong, because the
policy is included in the DC and thus any modification will cause
decryption to fail. Next, we distinguish two attacker strategies.
(1) Attacker wants to launch a REPLY attack. To be successful, the
attacker must add a return email address to an attacker-controlled
account to the email source code, using one of the protected head-
ers from R. The attacker must thus either add a new header, or
modify the content of an existing header. Both modifications will
change DC, since all headers from R are included in Pstrong. Thus
decryption will fail.
(2) Attacker wants to launch a EFAIL-DE attack. To be successful,
the attacker must include an exfiltration channel in the MIME tree
of the body of the message. However, this MIME tree is restricted,
MIME = ("mimepath"), to
from the properties of Mstrong and Pstrong
three possible tree structures (see Table 3):
OpenPGP (Sign &) Encrypt: The MIME tree consists of two leaves.
The first is an ASCII label which will not be parsed, and the second
an octet-string which will only be parsed by the OpenPGP parser.
Thus in none of the leaves can a parser be invoked which triggers
exfiltration channels, assuming that the OpenPGP parser works
correctly.
S/MIME Encrypt: The MIME tree consists of a single leaf, which
will be handed over to the CMS parser. Again assuming the CMS
parser works correctly, no exfiltration channels exist.
S/MIME Encrypt & Sign: The MIME tree consists of two leaves.
The first leaf is the same as in the S/MIME Encrypt case, and con-
tains the encrypted content. The content of this element is handed
over to the CMS parser, and assuming the CMS parser works cor-
rectly, no exfiltration channels exist here. Our second assumption
is that AEAD encryption was used, and thus INT-CTXT protects
against any manipulation by the attacker; this is important to guar-
antee that after the cleartext is released and subsequently parsed,
this cleartext does not include any exfiltration channels injected
by the attacker (aka EFAIL-MG attacks). The second MIME leave is
of type application/pkcs7-signature and contains only a sig-
nature; this element is handed over to the CMS parser with only a