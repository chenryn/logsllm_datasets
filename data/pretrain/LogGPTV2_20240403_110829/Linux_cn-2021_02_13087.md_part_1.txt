---
author: Mandy Kendall
category: 软件开发
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 4023
date: '2021-02-05 15:15:00'
editorchoice: false
excerpt: 通过使用一个简单的游戏来练习一些基本的 JavaScript 概念，迈出创建交互性动态 Web 内容的第一步。
fromurl: https://opensource.com/article/21/1/learn-javascript
id: 13087
islctt: true
largepic: /data/attachment/album/202102/05/151531z6fzqx8vk8tdan81.jpg
permalink: /article-13087-1.html
pic: /data/attachment/album/202102/05/151531z6fzqx8vk8tdan81.jpg.thumb.jpg
related:
- displayorder: 0
  raid: 13013
reviewer: wxy
selector: lujun9972
summary: 通过使用一个简单的游戏来练习一些基本的 JavaScript 概念，迈出创建交互性动态 Web 内容的第一步。
tags:
- JavaScript
- 猜数字
thumb: false
title: 通过编写一个简单的游戏学习 JavaScript
titlepic: true
translator: amwps290
updated: '2021-02-05 15:15:00'
---
> 
> 通过使用一个简单的游戏来练习一些基本的 JavaScript 概念，迈出创建交互性动态 Web 内容的第一步。
> 
> 
> 
![](/data/attachment/album/202102/05/151531z6fzqx8vk8tdan81.jpg "Javascript code close-up with neon graphic overlay")
可以肯定地说，没有 [JavaScript](https://opensource.com/tags/javascript)，大多数现代 Web 都将不存在。它是三种标准 Web 技术（以及 HTML 和 CSS ）之一，它使任何人都可以创建我们在万维网体验中所期待的交互式、动态内容。从 [React](https://opensource.com/article/20/11/reactjs-tutorial) 这样的框架到 [D3](https://opensource.com/article/18/9/open-source-javascript-chart-libraries) 这样的数据可视化库，很难想象没有它的 Web。
现在有很多东西要学习，开始学习这种流行语言的好方法是编写一个简单的应用程序以熟悉某些概念。 最近，一些人写了关于如何通过编写简单的猜谜游戏来学习自己喜欢的语言的文章，因此这是一个很好的起点！
### 现在开始吧
JavaScript 有许多种风格，但我将从最基本的开始，通常称为 “普通 JavaScript”。 JavaScript 主要是一种客户端脚本语言，因此它可以在任何标准浏览器中运行，而无需安装任何程序。你只需要一个代码编辑器（[Brackets](https://opensource.com/article/20/12/brackets) 就是一个不错的选择）和一个 Web 浏览器。
### HTML 用户界面
JavaScript 在 Web 浏览器中运行，并与其他标准 Web 技术 HTML 和 CSS 交互。要创建此游戏，你首先需要使用 HTML（超文本标记语言）来创建供玩家使用的简单界面。如果你不清楚，HTML 是一种标记语言，用于为 Web 内容提供结构。
首先，先创建一个 HTML 文件。该文件应具有 `.html` 扩展名，以使浏览器知道它是 HTML 文档。你可以将文件命名为 `guessingGame.html`。
在此文件中使用一些基本的 HTML 标签来显示游戏的标题、玩法说明，供玩家用来输入和提交其猜测的交互式元素以及用于向玩家提供反馈的占位符：
```
       JavaScript Guessing Game 
      Guess the Number!
      I am thinking of a number between 1 and 100. Can you guess what it is?
      My Guess
```
`` 和 `` 元素使浏览器知道在页面上显示什么类型的文本。标签对 `` 表示标签之间的文本（`Guess the Number!`）是标题。后面的一组 `` 标签表示带有说明的短文本是一个段落。此代码块末尾的空 `` 标签用作占位符，用于根据用户的输入提供一些反馈。
### `` 标签
在网页中包含 JavaScript 的方法有很多种，但是对于像这样的简短脚本，可以使用一组 `` 标签并将 JavaScript 直接写在 HTML 文件中。 这些 `` 标签应位于 HTML 文件末尾附近的 `` 标签之前。
现在，你可以开始在这两个脚本标签之间编写 JavaScript。 最终文件如下所示：
```
   JavaScript Guessing Game 
  Guess the Number!
  I am thinking of a number between 1 and 100. Can you guess what it is?
    My Guess
    const randomNumber = Math.floor(Math.random() * 100) + 1
    console.log('Random Number', randomNumber)
    function checkGuess() {
      let myGuess = guess.value
      if (myGuess === randomNumber) {
        feedback.textContent = "You got it right!"
      } else if (myGuess > randomNumber) {
        feedback.textContent = "Your guess was " + myGuess + ". That's too high. Try Again!"
      } else if (myGuess 
```
要在浏览器中运行此文件，请双击文件或打开你喜欢的浏览器,点击菜单，然后选择**文件->打开文件**。（如果使用 Brackets 软件，也可以使用角落处的闪电图标在浏览器中打开文件）。
### 生成伪随机数
猜谜游戏的第一步是为玩家生成一个数字供玩家猜测。JavaScript 包含几个内置的全局对象，可帮助你编写代码。要生成随机数，请使用 `Math` 对象。
JavaScript中的 [Math](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math) 具有处理和数学相关的属性和功能。你将使用两个数学函数来生成随机数，供你的玩家猜测。
[Math.random()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random)，会将生成一个介于 0 和 1 之间的伪随机数。（`Math.random` 包含 0 但不包含 1。这意味着该函数可以生成 0 ，永远不会产生 1）
对于此游戏，请将随机数设置在 1 到 100 之间以缩小玩家的选择范围。取刚刚生成的小数，然后乘以 100，以产生一个介于 0 到……甚至不是 100 之间的小数。至此，你将需要其他步骤来解决这个问题。
现在，你的数字仍然是小数，但你希望它是一个整数。为此，你可以使用属于 `Math` 对象的另一个函数 [Math.floor()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/floor)。`Math.floor()` 的目的是返回小于或等于你作为参数指定的数字的最大整数，这意味着它会四舍五入为最接近的整数：
```
Math.floor(Math.random() * 100)
```
这样你将得到 0 到 99 之间的整数，这不是你想要的范围。你可以在最后一步修复该问题，即在结果中加 1。瞧！现在，你有一个（有点）随机生成的数字，介于 1 到 100 之间：
```
Math.floor(Math.random() * 100) + 1
```
### 变量
现在，你需要存储随机生成的数字，以便可以将其与玩家的猜测进行比较。为此，你可以将其存储到一个 **变量**。