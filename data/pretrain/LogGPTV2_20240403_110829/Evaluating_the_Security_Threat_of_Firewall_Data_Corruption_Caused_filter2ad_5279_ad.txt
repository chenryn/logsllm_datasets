an instmction 
can be 
rate (cache W'/sec  Assuming uniform cache miss with miss rate 1%, an instruction 
in the cache can be replaced 1O"x1O-4x1 
% =  1(i 
and idle time is same as this rate. 
Cache replacement 
replacement) 
Processing rate (packet  10 (sec  The rate for workload processing 
processing. 
workload, 
Job dispatch 
times every second. 
non-firewall 
idle time) 
0 
firewall 
distribution 
utilization I [0.1,0.8] 
noncfirewall workload I 0,0.1,0.2 
(job dispatch) 
Distributions 
idle lime 
of outcomes 
from firewall 
I [0,0.9] 
execution 
2% 
Temporary security 
0.05% Permanent security 
20.22% Svstem crash 
T SV 
P SV 
Crash/Hanz 
No manifestation 77.73% Error not manifested 
Crash/Hang  I 30%  System cfa5h 
No manifestation I 70%  Error not manifested 
of the outcomes of the Non-firewall 
Workload 
Execution 
Distribution 
vulnerability 
vulnerability 
1 -firewall ulilization 
(firewall execution); 
-non-firewall 
obtained from error injection 
workload 
experimens. 
(Refer to Table 2) 
5 Due to the space limitation, 
we only present 
data corresponding 
to a subset of the combination 
of firewall 
utilization 
and non-firewall utilization. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:19:24 UTC from IEEE Xplore.  Restrictions apply. 
1. In absence of the non-firewall 
workload, the  rate 
of 
2. The presence 
unchanged 
vulnerability 
remains relatively 
security 
and 0.37/year for 
(with the mean values of 14.9/year 
and perman ent security vulnerability, re­
temporary 
spectively, for  20 firewalls) for the entire range of 
firewall processor 
utilizations
of non-firewall 
. 
running on the 
workload 
firewall machine  reduces  the 
rate of the temporary 
and 
permanent 
the 
additional 
erroneous 
security vulnerability. This  is  because 
workload increases 
to be evicted 
instruction 
the chance of  an 
from the cache. 
the rates of 
ocessor-utilization, 
3. For a given firewall pr
both temporary 
decrease 
with increasing 
non-firewall 
workload 
and permanent 
security vulnerabilities 
A measure of the temporary 
and perman ent vulner­
ability rates shows how often window of vulnerability oc­
curs. Clearly, 
co­
incide with the 
the occurrence 
arrival of malicious 
packets. 
of the vulnerability  must 
16.0 
  14.0 
$ 12.0 
>-:r... 10.0 
S 8.0 
.. f  6.0 
 :: -----1f- non-firewall 
0.450 
"C 0.400 
g!0.350 
>- 0200 
8.0.250 
-; 0.200 
e 0.150 
> 0.100 
 0.050 
o 0.1 0.2 0.3 0.4  0.5  0.6 
workload 10% 
workload 20% 
______ non-firewall 
0.7 0.8 
Processor Utilization 
by Firewall 
O.OOO +----,-L--_r____1 
--+-
non-firewall workload 0% 
-c<-- non-firewall workload 
____  non-firewall workload 20% 
10% 
o  0.1 02 0.3 0.4  0.5  0.6  0.7 
OB 
Process or Uiliza1ion by Firewall 
Figure 8: Rate of Temporary 
(left) and Permanent 
Security Vulnerability 
(right) 
Security 
Vulnerability 
with 0.1 ErrorlDay for 20 Firewall 
Machines 
Temporary Window of Vulnerability. 
Figure 9 shows 
the mean number of malicious 
packets that can penetrate 
the firewall during a temporary 
window of vulnerability  as 
a function of the firewall processor-utilization 
centage of non-firewall 
packet percentage 
studies (e.g., 
bandwidth 
packet percentage 
are derived assuming 
and for 0%, lO%, and  20% non-firewall 
and the peak malicious 
60%. The three curves 
workload. We assume a malicious 
that about 30% of network 
can be as high as 
can be taken by attacks 
rate of 0.1 error/day 
of 30%, which  is 
an error arrival 
[19]) indicate 
not unusual; 
workload. 
and the 
per­
network 
2. Presence of non-firewall 
workload running on the 
the firewall. For example, 
firewall machine reduces the mean number of packets 
penetrating 
utilizat
processor 
ets getting 
through the 
no non-firewall workload 
non-firewall 
firewall workload. 
ion, mean number of malicious 
pack­
firewall drops from around 7 for 
to around 6 packets for lO% 
workload and around 5 for 20% non­
for 50% firewall 
packets 
penetrating 
utilization, 
Distribution 
and 0% (Figure  lO 
of the number of malicious packets 
during a window of temporary vulnerability. 
workload. It can be observed 
the firewall 
that 
window of vulnerability, assuming 
, 50% firewall 
left) and lO% 
penetrating 
Figure lO (left) and Figure lO (right) show the distribution 
of the number of malicious 
during a temporary 
30% of incoming packets are malicious
processor 
(Figure lO right) non-firewall 
that in the absence of the non-firewall workload, the distri­
bution of the window of vulnerability 
size has 
a longer tail 
(about 5% of the windows of vulnerabi
lity allow more than 
11 malicious 
packets to get through the firewall). With 
lO% of non-firewall workload, however, the tail of the 
distribution 
ability 
the firewall). Approximately 
nerability in Figure lO (left) and 20% in Figure lO (right) 
allow 5 or more malicious 
packets to penetrate the firewall 
(i.e., cause a security violation). These packets are suffi­
cient to launch a large, real security 
overtlow attack, 
cure systems. 
allow more than 9 malicious  packets 
which can lead to severe damage to se­
is shorter  (about  5% 
of the windows of vulner­
26% of the windows of vul­
to get  through 
e.g., a buffer 
attack, 
40% 
33'/, 
::0'/, 
1:;'23% 5i 2J%  g.1S% 
il: 10% 5'/, 
ryyy 6  11 16 
l'Umerof 
MaIciolJs Packet 
6  11 16 
NUnWoi Maicious Packet 
Figure 10: Distribution: 
Number of Malicious 
Packet 
Penetrating 
During a Window of Temporary 
50% Processor 
by the 
Vulnerability, 
Utilization 
Firewall, 30% Malicious Packets, 0% (left) and 10% 
Non-firewall 
Workload (right) 
8.0 * 7.0 
"13 6.0 
8:. 5.0 
'0 4.0  3.0 
E 2.0 
" 
Z 1.0 
-- .  .  .  . .  .  . 
 ;::== . 
o 
10% 
......... non-firewall 
wor1<.load 
wor1<.load 
--+- non-firewall 
20% 
0.0 +-- ----'=:::;===;=::::::::::=;:==;::::=::;=: :::=:=, 
M 
M 
Processor Utilization 
by Firewall 
Figure 9: Mean Number of Malicious 
Penetrating 
the Firewall 
  M  M 
M 
Packets 
During a Window of 
30% Malicious 
Packets 
Temporary 
Vulnerability, 
The following 
1. In absence of the non-firewall 
can be observed 
from this figure: 
workload, the  mean 
number of packets that can penetrate  during 
temporary 
constant 
window of vulnerability 
(approximately 
remains almost 
7 packets). 
a 
8.2. Evaluating 
Violations 
the Frequency of Security 
How significant 
to be asked  are: 
are 
vulnerabilities compared to those due 
misconfiguration? Given the 
Two questions 
error-caused security 
to software bugs or  system 
fraction of malicious  packets 
likely is it that a sufficient 
our case, 5 or more) will get through the firewall  so  to 
initiate 
and execute an actual attack? 
number of malicious 
in the packet  stream,  how 
packets (in 
Published 
Vulnerabilities 
in Major Operating Systems. 
available 
vulnerabilities 
We  first examine the reported and publicly 
kernel-related 
of kernel-r
estimated.  Data 
for three major operating 
laris 2.6, and Windows 2000 -- is s
systems --RedHat Linux 7.x, So­
umm arized in Table 4. 
[16]. Using this data, the rate 
on published kernel-related vulnerabilities 
elated vulnerability in an operational  system  is 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:19:24 UTC from IEEE Xplore.  Restrictions apply. 
Table 4: Rate of Kernel-Related 
Time period 
Number of reported 
kernel-related 
vlllnerabllitle. 
,ecurity 
Operating 
,y,tem 
Security Vulnerability 
R.:'1te of security 
vulnerability 
year 
1 1 . 1  
per 
RedHat Linux 12 
(7.0,7.1,7.2) 
Solaris 2.6  15 
Windows 2000 29 
1 1f2000 -
12/2001 
212000 -1212001 7.8 
2/2000 - 12/2001 15.1 
(on average) 
rate, more than 2 machines 
error-caus
ed violations. 
tive  damage 
to the network, 
the machines behind the firewall. Thus the error-caused 
security vulnerabilities 
security 
will suffer from 
may cause effec­
can be a non-negligible 
threat to a highly secure system. 
These violations 
e.g., overflowing 
buffers on 
source of 
Error-Caused Security Violations. 
Table  5 shows the 
Acknowledgments 
(i.e., 
security 
violations 
5  or more malicious 
error per 10 days) and for a range of  non­
penetrating the firewall) for an error arrival rate of 
rates  of 
packets 
O.l/day  (one 
firewall workloads. In  our study, we assume that for a 
typical network, 
the range of [20%, 40%]. According 
30%  malicious 
violations 
processor 
10%. Over a I -year period, Table 4 shows approximately 
1 1  reported 
occur in a I-year period for 50% firewall 
utilization 
about 2  or  3 security 
and a non-firewall 
vulnerabilities 
packet percentage, 
the percentage 
for RedHat Linux. 
of malicious 
workload 
packets is in 
of up to 
to Table  5,  with  a 
Table 5: Rates of Error-Caused 
Security Violations, 
Firewall 
Processor 
Utilization 
Non-frrcwall 
workload 
= 0% 
= 50% 
Non-frrcwall 
workload 
20% 30% 
= 10% 
Malicious packet 20%  30%  40% 
percentage 
Rate of error-Due to 1.24 2.65 3.86 0.6  1.54 2.48 
caused  TSV 
security Due to 0.34 0.34 0.34 0.28 
violation PSV 
[l/year] 
0.28 
40% 
4  and 
The reported security vulnerabilities 
violations 
the former by software 
Total 1.58 2.99  4.2  0.88 1.82 2.76 
in  Table 
in Table  5 are caused by 
bugs and the 
errors in the system. Once a security­
error-caused security 
different phenomena, 
latter by transient 
related software bug is discover
on the same version 
of an operating 
to this bug until the corresponding 
caused violations, 
chine, can also open access to multiple  machines 
the firewall. In  summary,  although a substantive 
conclusion 
two data points, the magnitude of error-caused  security 
vulnerabilities 
highly secure environment. 
system are susceptible 
patch is applied. Error­
only a particular 
behind 
may not be possible simply 
while impacting 
ed, all machines 
by comparing 
are important 
indicates 
that  they 
clearly 
running 
these 
in a 
ma­
9. Conclusion 
This paper presented 
an experimental 
study of error­
security 
of the error injection 
two widely used firewalls: IPChains 
injection experiments revealed 
issues in Linux kernel firewalls. The target 
experiment described 
and Netfil­
that respec­
injected into the code 
vulnerabili­
related 
components 
here were 
ter. The  error 
tively 2.05% and 1 .95% of the errors 
segment of the two firewalls caused  security 
ties. Some of the errors propagated to permanent 
opened long-lasting 
Others created 
rary vulnerabilities, 
disappeared. We also proposed a SAN  model to describe 
and analyze the interaction 
among major factors that im­
pact the probability of a security vulnerability. 
from simulating the 
in a network system protected 
0.1 error per day, 50% processor 
a 10% non-firewall 
Results 
SAN model showed that, for example, 
by 20 frrewalls, assuming 
utilization 
by the firewall, 
security  holes. 
which disappeared when the errors 
data and 
tempo­
workload, and a 30% malicious-packet 
This work is supported 
in part by NSF Grant CCR 00-
86096 ITR, in part 
by a grant from Motorola 
Motorola Center for Communications 
MURI Grant NOOOI4-01-1-0576. 
Inc. as part of 
and in part by 
References 
[1] R. Anderson and M. G. Kuhn. "Tamper Resistance 
- a Cau­
tionary Note". Proc. The Second USENIX  Workshop on 
Electronic COl1unerce. Oakland, CA, Nov. 1996. 
[2] Dan Boneh, Richard A DeMillo, et al. "On the Importance 
of Eliminating 
vances in Cryptology: Eurocrypt '97, pp.37-51 ,  1997 
Errors in Cryptographic 
Computations". Ad­
[3]  A. Ghosh, 
T. O'Connor, et al. "An Automated Approach for 
Identifying Potential  Vu
Symp. on Security and Privacy, 
lnerabilities in Software". IEEE 
Oakland, CA, May 1998. 
[4] R. L. Rivest, A. Shamir, and L. Ad1eman. "A method for 
obtaining digital signatures 
Communications 
of the ACM, 2 1 (2):120--126, Feb. 1978. 
and public key cryptosystem". 
[5] D. T. Stott, B. Floering,  et al. "Dependability Assessment in 
Distributed Systems with Lightweight Fault Injectors in 
NFTA PE". Proc. IEEE Int'l Computer Perjonnance and De­
pendability 
Symp., pages 9 1-100, Mar. 2000. 
al. "An Experimental 
[6] J. Xu,  S.  Chen,  et 
Study of Security 
0.28 
Vulnerabilities 
Caused by Errors". Proc. of Intt' Con/. on De­
pendable Systems and Networks, GOteborg, Sweden, 200 1 .  
[7] P .  Kochar, J .  Jaffe, B. Jun. "Differential Power Analysis: 
Leaking Secrets". in Crypto '99. 
[8] R. Russell. "Linux IPCHAINS-HOWTO". http://netfilter. 
samba.org lipchainslHOwrO. html 
[9] Y. He and A. Avizienis. "Assessment of the applicabilit
y of 
computing sys­
COTS microprocessors in high-confidence 
tems: A case study". Proc. ICDSN 2000, June 2000 
[ 10] M. Rimen, J.  Ohlsson 
et al. "On Microprocessor Error Be­
havior Modeling". Proc. IEEE International Symp. on Fault­
Tolerant Computing (FTCS-24). June 1994 
[ 1 1] H. Cha, E. Rudnick, J. Patel et al. "A gate-level 
simulation 
environment for alpha-parti
IEEE Transactions on Computers, 45(11). November 1996 
cle-induced 
transient faults". 
[ 12] G. Choi, R. Iyer and D. Saab. "Fault Behavior Dictionary 
of Device-level 
Transients". Proc. IEEE In­
for Simulation 
temational 
Con! Computer-Aided Design, 1993 
[ 13] 1. Lee, R. Iyer and D. Tang. "ErrorlFai1ure Analysis Using 
Event Logs from Fault Tolerant Systems". Proc. of IEEE ht­
ternational Symposium on Fault-Tolerant Computing (FTCS-
2l),pages 10-17. June 1991 
[ 14] R. Orta10, Y. Deswarte and M. Kaaniche, "Experimenting 
with Quantitative 
tional Security," IEEE Transactions on Software Engineer­
ing, vol. 25, no.  5, pp.633-650, 
Evaluation  Tools  for 
Monitoring Opera­
Sept. 1999 
[15] D. Daly, D.  D. Deavours, et al. "Mobius: An Extensible 
Tool for Performance and Dependability Modeling," Pro­
ceedings of the 11th International Conference, TOOLS 2000, 
Schaulllbur
g,IL,11arch,2000. 
[ 16] http://www.securityfocus.com. 12/30/2001 
[ 17] Microsoft Product Security. FrontPage Server Extension 
Sub-Component Buffer Overflow Vulnerability. http://www. 
securiteam. 
comlwindowsntfocus/5YPOMOU4KA.html 
[ 18] D. Patterson and  J. Hennessy. Computer Architecture 
a 
Approach. 2nd Ed. pp384. Morgan Kaufmann 
Quantitative 
Publishers, 
Inc. 1996. 
[ 19] G. Xu and H. Zhang. "Advanced Methods for Detecting 
Unusual Behaviors on Networks in Real-Time" Proc. of IEEE 
International 
Conference on Communication Technology, 
WCC -ICCT 2000, pp: 29 1-295 vol. 1 2000. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:19:24 UTC from IEEE Xplore.  Restrictions apply.