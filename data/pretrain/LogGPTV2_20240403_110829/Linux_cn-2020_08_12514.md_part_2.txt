### 00:05:00
在众多软件开发方法中，极限编程、Kanban 和统一软件开发过程等不胜枚举。这些方法论的竞争催生了新的观点和改进方法，正是 Dave Thomas 及其在雪鸟滑雪场的朋友们热切探讨的领域。

### 00:05:30
这群人在雪鸟滑雪场会面后，经过激烈的讨论，最终确定了一个词——“敏捷”（Agile）。这个词非常贴切，它与传统的瀑布式开发方式截然不同，强调灵活应对变化。随着新信息的不断涌现，敏捷为那些愿意调整方向的人提供了希望。请注意，“敏捷”是一个形容词，而不是名词。

### 00:06:00
敏捷是一种习惯，而非具体的说辞。那么，采用敏捷的开发者提供了什么？他们的总体解决方案是什么？许多人认为敏捷是一套复杂的体系，包括不同的角色和系统。例如，Scrum Master、Scrum 团队和产品负责人，并且他们通常进行一到两周的冲刺工作。同时，工作会被堆积在“冰盒”和“沙盒”中。尽管现在看起来流程繁多，但最初的目标是简单和清晰。实际上，简单是敏捷成功的关键。从那时起，敏捷开始定义几乎每个开发人员的命运之路。

### 00:07:00 - Saron Yitbarek
我们已经提到了，敏捷宣言包含四个核心价值观：
- 个体和互动胜过流程和工具；
- 可工作的软件胜过详尽的文档；
- 客户协作胜过合同谈判；
- 响应变化胜过遵循计划。

我记得第一次看到这个宣言时的情景。当时我刚开始学习编程，并没有觉得这个想法有多棒。直到后来了解了支持敏捷开发的工具和平台，我才意识到它的价值。对于长期受这些问题困扰的开发人员来说，这确实是一个很好的行动方案。

### 00:07:30
该宣言及其支持材料发布在 [Agilemanifesto.org](http://Agilemanifesto.org) 网站上，并呼吁其他开发者签名以表示支持。很快，签名数达到了1000个，接着是10,000个，并持续增长。Dave Thomas 表示，这基本上变成了一场革新运动。

### 00:08:00 - Dave Thomas
他们从未计划将这份宣言带出滑雪小屋。这只是一个充满热情的软件开发群体，致力于帮助他人更好地发展。但显然，“敏捷”本身迅速传播开来。红帽公司首席开发倡导者 Burr Sutter 谈到，对于那些仍困在瀑布式开发中的开发人员来说，敏捷是一种解脱。

### 00:08:30 - Burr Sutter
敏捷的概念从根本上引起了人们的共鸣，它强调关注人员而非流程，注重交互和协作而非工具和文档，重视可工作的软件高于一切，并通过小批量的工作实现高度互动和快速迭代。

### 00:09:00 - Saron Yitbarek
然而，对于一些人来说，这种开发者的革新走得太远。敏捷甚至被视为给不负责任的黑客心态提供合理化的借口。早期反对敏捷的重要声音之一是 Steve Rakitin，他是一名拥有超过40年行业经验的软件工程师。

### 00:09:30
Rakitin 大学毕业后就开始建造第一个核电站数字控制系统，并长期致力于电力软件和医疗设备软件的研发。这些领域对安全要求极高，因此他对这种手忙脚乱的开发方式并不感兴趣。在方法论战争的尾声，敏捷横空出世，Rakitin 对此表示怀疑。

### 00:10:00 - Saron Yitbarek
事实上，敏捷哲学可以追溯到“雪鸟峰会”前几十年。例如，像 Kanban 这样的精益工作方法可以追溯到20世纪40年代，当时丰田受到超市货架存货技术的启发。不过，Rakitin 有另一个担忧。

### 00:10:30 - Steve Rakitin
这篇宣言发表时我非常怀疑它，因为它基本上是为了让软件工程师花更多的时间编写代码，花更少的时间搞清楚需要做什么，同时记录文档的时间也大大减少。

### 00:11:00 - Saron Yitbarek
对于 Rakitin 来说，这不仅仅是提出新的工作流程创意，还关乎他职业生涯的清白声誉。长期以来，软件工程并未被视为正规的工程学科。在他看来，部分原因是缺乏普遍认可的公认实践。

### 00:11:30
当我们经历了90年代的十年，逐渐开始明晰其中的一些流程。似乎其中一些已经在事实上被实施，而且也很合理。然后敏捷宣言出现了。如果软件工程要成为正规的工程学科，就需要流程化的东西。其他所有工程学科都有流程，为什么软件工程就没有？

### 00:12:00 - Saron Yitbarek
我是 Saron Yitbarek，你正在收听的是红帽的原创播客《代码英雄》。如果我们把核电站工作人员的观点放在一边，转而关注更广阔的企业界，我们会发现敏捷已经逐渐广受认可。但这并不是自然而然发生的，过程中遇到了不少阻力。

### 00:12:30 - Darrell Rigby
我们在采用敏捷开发中遇到的最大阻力来自中高级管理层。这位是 Bain & Company 的合伙人 Darrell Rigby，他们一直在尝试在软件开发公司中推行敏捷开发，不仅限于软件开发，还包括产品开发、新闻服务开发、广告计划和忠诚度计划等。无论他们要做什么，项目管理者都会面临压力。

### 00:13:00 - Saron Yitbarek
敏捷改变了他们的价值，因为他们正在逐步退出细节上的管理或干预。现在团队被赋予权力，对他们加以指导。敏捷并不能保证阻止中间轻微的干预。我承认，我第一次看到一个敏捷管理委员会时，认为这是一个永无止境的待办事项清单，感到有些压迫感。但当我开始真正使用敏捷产品管理工具时，我完全变成了它们的粉丝。作为一个编码培训营的新手，我试图弄清楚如何确定功能的优先级并做出产品决策。

### 00:13:30
那些看起来很可怕的工具让我有了所有这些想法，然后给它们命名、排序和结构，从而帮助我更好地管理我的项目。所以，我确实同意 Rigby 的观点。有些人可能会认为，如果敏捷赋予开发人员权力，就会剥夺经理们的管理权。但实际上，它的价值比任何一个职位都要大，敏捷开发的发展势如破竹。更重要的是，它正在证明自己。

### 00:14:00 - Darrell Rigby
目前，成千上万的团队已经采用敏捷开发。因此，我们有很多关于此的数据。答案是，无论何时你开始创新，相比你现在使用的方式，敏捷团队能更好实现目标。

### 00:14:30
许多大型知名公司都在变革自身。亚马逊是敏捷方法的重要用户。Netflix、Facebook 和 Salesforce 也是敏捷的重度用户。实际上，敏捷方法不仅重新定义了工作方式，更是重新定义了行业的运作方式。

### 00:15:00 - Saron Yitbarek
当 Rigby 第一次听说敏捷时，他认为这是一种奇怪的语言。他当时正在与许多大型零售商的 IT 部门合作，无意间听到他们谈论“时间盒”、“冲刺”和“Scrum Master”。起初，他并不懂他们在说什么，甚至试图忽略任何有关敏捷的字眼。毕竟，他本人不是开发人员。

### 00:15:30
但是如今，他却成为了敏捷信徒，把敏捷带到他的家里，带入他的教堂。他不一定每天早上都和家人坐在一起，参加敏捷开发式的会议，但他已经非常擅长为他要做的事情排优先级。

### 00:16:00
十多年来，敏捷已经从边缘走向主流。但是，企业认同还是有代价的。在某些情况下，这种同化甚至会使敏捷宣言的最初意图变得模糊。Dave Thomas 让我想起了这一点。他说，当他和其他16位雪鸟会议上的伙伴第一次写下宣言时，根本没有既定的指示。

### 00:16:30 - Saron Yitbarek
因此，即使宣言中没有告诉你如何应用这些条例，我猜想你已经对大概会发生什么，还有人们会怎么做，有一些大概的思路了吧？

### 00:16:30 - Dave Thomas
老实说，我当时并没有。

### 00:16:30 - Saron Yitbarek
听到这里，你可能会感到惊讶。因为敏捷现在看起来很有说服力。有书籍、认证、工具、课程和产品的整个市场，向你展示如何“实现敏捷”。Dave Thomas 表示，尽管有成千上万的手册和专业人士想要向你展示“唯一真理”，但他们却错过了重点。

### 00:16:30 - Dave Thomas
实际上它是一组价值观。