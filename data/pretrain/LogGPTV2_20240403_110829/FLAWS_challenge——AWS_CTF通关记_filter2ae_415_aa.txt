# FLAWS挑战——AWS CTF通关记

##### 译文声明
本文为翻译文章，具体内容和含义以原文为准。

## 前言
最近在学习Amazon Web Services (AWS)的相关知识时，我发现了一个非常有趣的AWS CTF（夺旗赛）平台——[FLAWS](http://flaws.cloud/)。对于那些希望了解与AWS相关的安全知识的人来说，FLAWS提供了一个极佳的学习机会。通过一系列挑战，参与者可以了解到并掌握AWS常见的错误配置及漏洞。该CTF主要聚焦于AWS特有的问题，而非像SQL注入、XSS或缓冲区溢出等广为人知的通用漏洞。

对于不太熟悉AWS的朋友，建议访问[AWS官网](https://aws.amazon.com/)查阅相关文档或阅读[AWS维基百科条目](https://en.wikipedia.org/wiki/Amazon_Web_Services)来获取基础知识。

根据FLAWS挑战网站主页上的说明：
> **范围**：所有内容都在一个AWS账户内运行，且所有挑战都是`flaws.cloud`下的子域。

这意味着整个平台的所有活动都发生在单个AWS账户中，每个挑战都会作为`flaws.cloud`的一个子域名出现。FLAWS共包含六个级别的挑战，接下来就让我们开始这场探索之旅吧！

## Level 1
> 这一级别充满了乐趣。试着找到第一个子域名。

提示中的“buckets”关键词暗示了这可能涉及到了`AWS S3 buckets`。由于S3存储桶能够托管静态网页，因此猜测`flaws.cloud`可能是部署在S3上。
使用`nslookup`工具查询后发现其IP地址为`52.218.218.194`。接着利用`dig`工具进行反向DNS解析，成功获取到`flaws.cloud`对应的S3存储桶地址为`s3-website-us-west-2.amazonaws.com`。

**小贴士**：当您将网站托管在S3上时，AWS会自动分配一个域名给您，无需额外配置DNS记录。因此，我们可以通过组合`flaws.cloud`与其S3地址来直接访问主页。

由此得知`flaws.cloud`是一个位于`us-west-2`区域内的S3静态网站。如果使用自定义域名如`flaws.cloud`设置S3静态站点，则存储桶名称需与此域名一致。基于此规则，我们可以推断出`flaws.cloud`的S3端点URL应为`http://s3-us-west-2.amazonaws.com/flaws.cloud/`。

访问上述链接后返回了一个XML文件，其中包含了存储桶内的对象列表。从这些信息中，我们注意到存在一个名为`secret-dd02c7c.html`的对象。进一步访问这个特定对象，即可找到进入Level 2的方法。

## Level 2
> 下一关卡与前一关类似，但略有不同。你需要拥有自己的AWS账户才能完成这一挑战。

考虑到仍然围绕着S3展开，并且需要个人AWS账号参与，推测本题意在考察跨账户权限管理。关于如何注册免费AWS账号，请参考这篇文章——[AWS入门 – 开通海外账户及巧用免费套餐](https://zhuanlan.zhihu.com/p/67478818)。

首先，通过提供的AWS Access Key ID 和 Secret Access Key 配置好AWS CLI工具：
```shell
~$ aws configure
AWS Access Key ID: [Your AWS Access Key]
AWS Secret Access Key: [Your AWS Secret Key]
Default region name [ap-southeast-1]: us-west-2
Default output format [None]:
```

通过Level 2入口URL得知目标存储桶名为`level2-c8b217a33fcf1f839f6f1f73a00a9ae7.flaws.cloud`。尝试使用已配置好的CLI命令列出该存储桶中的所有项目，发现了名为`secret-e4443fc.html`的对象。按照先前的经验构造完整的HTTP请求路径并访问之，顺利解锁下一关卡。

## Level 3
> 接下来的关卡依然相似，只是增加了一点新变化。现在是时候寻找您的第一个AWS密钥了！我相信您能找到一些允许您列出其他存储桶的东西。

继续沿用之前对S3的理解，这次的任务是要定位某个AWS凭证。浏览Level 3的目标存储桶`http://s3-us-west-2.amazonaws.com/level3-9afd3927f195e10225021a578e6f78df.flaws.cloud/`时，再次获得了XML格式的对象清单。其中不仅有图片文件还有`.git`目录结构。

使用CLI复制整个存储桶内容至本地进行详细检查，在`.git/COMMIT_EDITMSG`文件中发现了如下注释：“Oops, accidentally added something I shouldn't have”，暗示可能存在误上传的敏感数据。

执行`git log`查看历史提交记录，确实发现在某次推送中包含了一些不应该公开的信息。切换至指定commit `f52ec03b227ea6094b04e43f475fb0126edb5a61`，最终找到了名为`access_keys.txt`的文件，里面存放着一组有效的AWS访问密钥：

```plaintext
access_key AKIAJ366LIPB4IJKT7SA
secret_access_key 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
```

以上就是本次挑战的部分解题过程分享。希望对你有所帮助！