# Title: Domain Validation++ for MitM-Resilient PKI

## Authors:
- Markus Brandt, Fraunhofer SIT, TU Darmstadt
- Tianxiang Dai, Fraunhofer SIT
- Amit Klein, Fraunhofer SIT
- Haya Shulman, Fraunhofer SIT, TU Darmstadt
- Michael Waidner, Fraunhofer SIT

## Abstract
The security of Internet-based applications fundamentally relies on the trustworthiness of Certificate Authorities (CAs). We demonstrate, for the first time, that even a weak off-path attacker can effectively subvert the trustworthiness of popular commercially used CAs. Our attack targets CAs that use Domain Validation (DV) for authenticating domain ownership; collectively, these CAs control 99% of the certificate market. The attack utilizes DNS cache poisoning to trick the CA into issuing fraudulent certificates for domains the attacker does not legitimately own, binding the attacker’s public key to a victim domain.

We discuss short and long-term defenses but argue that they fall short of securing DV. To mitigate these threats, we propose Domain Validation++ (DV++). DV++ replaces the need for cryptography with assumptions in distributed systems. While retaining the benefits of DV (automation, efficiency, and low costs), DV++ is secure even against Man-in-the-Middle (MitM) attackers. Deployment of DV++ is simple and does not require changing the existing infrastructure or systems of the CAs. We demonstrate the security of DV++ under realistic assumptions and provide open-source access to its implementation.

## CCS Concepts
- Security and Privacy → Security Protocols; Public Key Encryption; Distributed Systems Security

## Keywords
- PKI Security, DNS Cache Poisoning, Certificates, CA Attacks

## ACM Reference Format
Markus Brandt, Tianxiang Dai, Amit Klein, Haya Shulman, and Michael Waidner. 2018. Domain Validation++ for MitM-Resilient PKI. In 2018 ACM SIGSAC Conference on Computer and Communications Security (CCS '18), October 15–19, 2018, Toronto, ON, Canada. ACM, New York, NY, USA, 17 pages. https://doi.org/10.1145/3243734.3243790

## Permission Notice
Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org.

## CCS '18, October 15–19, 2018, Toronto, ON, Canada
© 2018 Association for Computing Machinery.
ACM ISBN 978-1-4503-5693-0/18/10...$15.00
https://doi.org/10.1145/3243734.3243790

## 1. Introduction
The stability and security of the web ecosystem rely on Certificate Authorities (CAs) to ensure that services are trusted and communication to them is secure. CAs vouch for the trustworthiness of a service by issuing a digital certificate that binds a domain name to the public key of the service. Upon receiving a request for a certificate for a domain, say `vict.im`, a CA validates that the server issuing the request owns and controls the domain for which it requests the certificate. After successful validation of domain ownership, the CA issues the certificate. The certificate contains, among other things, the public key of the requesting server and the requested domain. The domain name within the certificate is a key element on which trust can be built. The certificate is signed by the private key of the CA. The server then uses this certificate to prove its identity to clients on the Internet. Clients use the server’s public key in the certificate to establish a secure (encrypted and authenticated) connection to the server.

Browsers have hundreds of registered CAs, and a valid certificate for any domain signed by any of these trusted CAs is accepted by the browsers. Therefore, correctly verifying domain ownership during the certificate issuance process is critical to ensuring the security of clients and services. There are several approaches that CAs can use to establish domain ownership: Domain Validation (DV), Organization Validation (OV), and Extended Validation (EV).

DV provides various techniques (e.g., using email or the Domain Name System (DNS)) that allow automated proof of domain ownership. The idea behind DV is that only the owner of the domain can receive and respond to communications sent to the services in that domain. EV and OV, on the other hand, are designed to ensure more stringent certification and involve some human interaction.

Although EV and OV provide higher assurance of ownership, they are cumbersome and inefficient, requiring manual processes to establish the identity of the applicant, such as communication with the customer, phone calls to the company, and additional documents like personal identification cards. Manual verification during certificate generation is more time-consuming and costly, with certificate prices often exceeding $1,000. In contrast, the automation offered by DV has reduced certificate prices, improved the efficiency of the issuance process, and increased the market share of DV-supporting CAs to 99%.

In this work, we explore the security of the DV procedure used by CAs to establish domain ownership. We identify vulnerabilities and show that even a weak off-path attacker can trick the DV process and issue certificates for domains they do not own. We evaluate the attack against CAs and show that vulnerabilities exist in popular and large CAs. Our attack exploits vulnerabilities in DNS, allowing us to inject incorrect mappings into the caches of DNS resolution platforms of CAs. These mappings redirect the target domain to IP addresses controlled by the attacker. As a result, the CAs perform the DV process against hosts controlled by the attacker rather than the real owner of the domain. We discuss the obstacles and challenges and show how to overcome them to launch a successful off-path attack during the certificate issuance.

Our results demonstrate that the Public Key Infrastructure (PKI), which is meant to provide security against strong Man-in-the-Middle (MitM) attackers, is relying on a weak building block that can be circumvented by an off-path attacker.

We discuss short-term patches but show that they do not fully mitigate the vulnerability. A cryptographic defense for DNS, such as DNSSEC [RFC4033-RFC4035], would prevent the attacks, but it would take a long time until domains are protected with DNSSEC and DNS resolvers perform validation. We build upon the ideas of replacing cryptography with assumptions in distributed systems [19] and design and implement Domain Validation++ (DV++)—a distributed mechanism for authenticating domain ownership. We show that DV++ is resilient to MitM attackers while retaining the benefits of DV.

### PKI Security
A significant research effort is focused on evaluating and improving the security of PKI; see Section A for background on PKI. Some works evaluate the security of keys used to establish secure communication [29], while others show how to exploit side channels to recover plaintext from encrypted communication [6] or launch downgrade attacks to recover encrypted communication [9]. There is also a history of attacks against PKI, typically by compromising a CA (reviewed in Related Work, Section 5). However, little attention has been given to the authentication of ownership used by CAs. Correctly authenticating ownership of resources is a key element in certification and essential for building trust in the cryptographic material used for securing communication.

The identified vulnerabilities and the need to secure PKI have motivated research on security mechanisms, most of which propose alternative models for PKI. Some proposals attempt to identify compromised certificates using log servers that monitor CAs' behavior, such as Certificate Transparency [42], Sovereign Keys [21], Accountable Key Infrastructure [38], and Attack-Resilient Public Key Infrastructure [12].

These proposals provide a good starting point and promising directions for the design of future PKI. However, most are not adopted due to their prohibitive complexity and performance, as well as the changes required to the existing infrastructure and the deployment overhead (e.g., introduction of multiple interacting entities). In this work, we propose improvements to the existing PKI without changing the infrastructure or introducing new actors. We design and implement DV++, which replaces DV without requiring further modifications to the PKI. Unlike DV, which we show is vulnerable even to off-path attacks, DV++ provides resilience against strong (on-path) Man-in-the-Middle (MitM) attackers. Security against MitM attackers is essential since PKI needs to operate over untrusted networks. Hence, it is prudent to assume that attackers can eavesdrop, modify, and inject messages. A critical property of DV++ is that it requires no changes to the existing CA ecosystem. The interface and communication with the CA and the verified domain are identical to DV. The difference lies in the verification process, which DV++ applies transparently to the other actors in the CA ecosystem. We explain this in Section 4.

### Attacker Model
For our attacks, we use the weakest off-path attacker, who does not have access to the communication of legitimate parties. The attacker can generate packets and spoof source IP addresses. Note that off-path attackers can often gain MitM capabilities, e.g., by launching BGP prefix hijacking attacks. Indeed, attackers are becoming more sophisticated and increasingly leverage BGP hijacking for DNS cache poisoning [44]. Such attackers obtain MitM capabilities for a short period and can efficiently launch the attacks described in this work. We demonstrate, however, that even weaker (complete off-path) attackers can subvert the security of DV validation in PKI.

### Disclosure and Ethics
Our research shows that even weak off-path attackers can exploit vulnerabilities to issue fraudulent certificates, putting at risk not only the vulnerable CAs but the entire PKI ecosystem, including services and clients. Nevertheless, we believe that this research is important because if the vulnerabilities exist, they may be exploited by attackers for malicious purposes without notifying the affected entities. Our goal is to expose and mitigate these issues. We are disclosing the vulnerabilities and are in contact with the affected CAs.

In the attacks we demonstrate, we leverage DNS cache poisoning to inject spoofed records into DNS caches. Therefore, the immediate short-term countermeasure to mitigate our attacks is to fix the vulnerabilities in DNS that allow injection of records into caches. We notified the affected DNS vendors, operators, and service providers of the vulnerabilities.

Our attacks did not target any existing Internet clients or domains. The evaluation of our attacks against CAs' DNS resolvers was carried out using a domain that we own (for simplicity, we use the domain `vict.im`). This ensured that the CA would not use the spoofed records for any "real" purpose. We set up a set of attacking hosts, which issued certificates for resources in the domain `vict.im`. Our techniques can be applied to attack other domains (we survey the attack surface of popular domains that can be potential victims), so the adoption of mitigations is critical.

Our attacks were carried out ensuring that the normal functionality of CAs was not affected. Part of our study involved inferring different cache overwriting vulnerabilities, which we tested against the DV-supporting CAs. The study of caches introduces a larger volume of traffic than merely running an attack with the goal of exploiting a single vulnerability. To avoid any potential load on the CAs' infrastructure, we distributed the study over a long period, with waiting intervals between the requests for issuing certificates. This ensured that we did not generate an excessive traffic volume on the CAs.

### Contributions
In this work, we show that the DV mechanism, used by CAs to authenticate domain ownership, can be circumvented by off-path attackers. In our attacks, we leverage DNS cache poisoning to inject spoofed records into caching DNS resolvers, mapping resources in the target domain to attacker-controlled hosts. As a result, the DV performed by the CA is run against the attacker's hosts (in this work, these are our machines), allowing the off-path attacker to pass the validation and receive fraudulent certificates (signed by a CA) for domains they do not own. We demonstrate the attack and evaluate it against DV-supporting CAs. We successfully launched the complete attack against 7 of the DV-supporting CAs. Therefore, at least 7 CAs are vulnerable to our attack, but potentially more DV-supporting CAs are vulnerable; we explain the conditions for a successful attack in Section 3. Unfortunately, even a single vulnerable CA is sufficient to subvert the security of PKI. This is because the security of PKI is based on the security of the weakest link in the infrastructure—compromising a single CA allows attackers to issue fraudulent certificates for any domain, which would then be accepted by any operating system and any browser that has that vulnerable CA on its list of trusted CAs.

Our work is the first to weaponize off-path DNS cache poisoning for attacking a complex system such as certificate generation. Prior to our work, such off-path attacks were considered anecdotal and largely theoretical. DNS cache poisoning attacks are known to be launched in the wild, but these are typically done with a MitM attacker, who observes the requests and can efficiently craft malicious DNS responses, e.g., for email hijacking [18] or stealing digital cash [44]. In this work, we provide the first demonstration of the exploitation of off-path DNS cache poisoning for attacking a critical system—the certificate generation in PKI.

We discuss possible mitigations but argue that they do not solve the problem. Cryptographic protection of DNS, such as DNSSEC, would prevent the attacks, but it is unclear when DNSSEC will be fully deployed. We follow the ideas of [19] for replacing cryptography with assumptions in distributed systems. We propose DV++, a modification to DV, which maintains the benefits of DV (it is automated, efficient, and low-cost) while being secure even against MitM attackers.