title:VARIUS-NTV: A microarchitectural model to capture the increased
sensitivity of manycores to process variations at near-threshold voltages
author:Ulya R. Karpuzcu and
Krishna B. Kolluru and
Nam Sung Kim and
Josep Torrellas
VARIUS-NTV: A Microarchitectural Model to Capture the Increased Sensitivity of
Manycores to Process Variations at Near-Threshold Voltages ‡
Ulya R. Karpuzcu∗, Krishna B. Kolluru†, Nam Sung Kim†, and Josep Torrellas∗
†University of Wisconsin Madison
∗University of Illinois Urbana-Champaign
{kkolluru,nskim3}@wisc.edu
{rkarpu2,torrella}@illinois.edu
suggest that NTC can decrease the energy per operation
by several times over STC [7], [13]. A drawback is that
it imposes a frequency reduction, which may be tolerable
through more parallelism in the application. For parallel
loads, since more cores can be running concurrently within
the chip’s power envelope, the result is a higher throughput.
A roadblock for NTC is its higher sensitivity to process
variations — i.e., the deviation of device parameters from
their nominal values. Already in current-technology STC
multicores, process variations result in noticeable differences
in power and performance across the different cores of a
chip [11]. At NTC, due to the low operating Vdd [28], the
same amount of process variations causes a substantially
larger impact on transistor speed and power consumption
variations. Process variations are undesirable because they
result in chips that consume more static power, cycle at lower
frequencies, and can even be faulty.
Process variations should be addressed at multiple levels,
including at the computer architecture level. To confront
variations at the architecture level, we ﬁrst need models of
process variations and how they affect frequency and power,
at a level of abstraction that is useful to microarchitects.
Such models exist for STC (e.g., [20], [25], [27], [35], [37]).
Unfortunately, none of them is applicable to NTC — NTC
uses new memory structures and requires new delay and
power models.
This paper presents the ﬁrst microarchitectural model of
process variations for NTC. The model, called VARIUS-NTV,
extends the existing VARIUS variation model [37]. It models
how variation affects the frequency attained and power
consumed by cores and memories in an NTC manycore,
and the timing and stability faults in SRAM cells at NTC.
The key aspects include: (i) adopting a gate-delay model and
an SRAM cell type that are tailored to NTC, (ii) modeling
SRAM failure modes emerging at NTC, and (iii) accounting
for the impact of leakage current in SRAM timing and
stability models.
Abstract—Near-Threshold Computing (NTC), where the
supply voltage is only slightly higher than the threshold voltage
of transistors, is a promising approach to attain energy-efﬁcient
computing. Unfortunately, compared to the conventional Super-
Threshold Computing (STC), NTC is more sensitive to process
variations, which results in higher power consumption and
lower frequencies than would otherwise be possible, and
potentially a non-negligible fault rate.
To help address variations at NTC at the architecture level,
this paper presents the ﬁrst microarchitectural model of process
variations for NTC. The model, called VARIUS-NTV, extends
the existing VARIUS variation model. Its key aspects include:
(i) adopting a gate-delay model and an SRAM cell type that are
tailored to NTC, (ii) modeling SRAM failure modes emerging
at NTC, and (iii) accounting for the impact of leakage in SRAM
models. We evaluate a simulated 11nm, 288-core tiled manycore
at both NTC and STC. The results show higher frequency
and power variations within the NTC chip. For example, the
maximum difference in on-chip tile frequency is ≈2.3x at STC
and ≈3.7x at NTC. We also validate our model against an
experimental chip.
Keywords-Process variations, Near-threshold voltage, Many-
core architectures, SRAM fault models, Power constraints.
I. INTRODUCTION
Power or energy consumption is typically the primary
concern in today’s computer platforms, ranging from dat-
acenters to handhelds. The main reason for their importance
is that CMOS technology has long ago stopped scaling
close to perfectly and, as a result, power density increases
signiﬁcantly with each technology generation. If we are
to continue delivering scalable computing performance, we
need to ﬁnd new ways to compute more energy- and power-
efﬁciently.
One way to attain higher energy efﬁciency is to reduce
the supply voltage (Vdd) to a value only slightly higher
than a transistor’s threshold voltage (Vth). This environment
is called Near-Threshold Computing (NTC) [7], [13], [28]
— as opposed to conventional Super-Threshold Computing
(STC). Vdd is a most powerful knob because it impacts both
dynamic and static energy super-linearly. Current indications
‡ This work was supported in part by the National Science Foundation
under grant CCF-1012759 and CAREER Award CCF-0953603; DARPA
under UHPC Contract Number HR0011-10-3-0007; DOE ASCR under
Award Number DE-FC02-10ER2599; an IBM Faculty Award; and a gen-
erous gift from AMD.
978-1-4673-1625-5/12/$31.00 ©2012 IEEE
We evaluate a simulated 11nm, 288-core tiled manycore
at both NTC and STC. Our results show that the expected
process variations induce higher differences in frequency
(f) and power at NTC than at STC. For example,
the
maximum difference in tile f within a chip is ≈3.7x at
NTC and only ≈2.3x at STC. We evaluate different core-
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:16:56 UTC from IEEE Xplore.  Restrictions apply. 
tiling organizations in the chip and different conﬁgurations
of on-chip Vdd- and f-domains. Our experiments show that
variation management is especially important at NTC. Fi-
nally, we validate our model against an experimental 80-core
prototype chip [11].
This paper is organized as follows: Section II provides a
background; Section III presents our VARIUS-NTV varia-
tion model; Section IV describes the manycore architecture
evaluated; Sections V and VI evaluate VARIUS-NTV for
the architecture; Section VII outlines our initial validation
of VARIUS-NTV; and Section VIII discusses related work.
II. BACKGROUND
A. Near-Threshold Computing (NTC) Basics
NTC refers to an environment where Vdd is set to a
value only slightly higher than the transistors’ Vth [7],
[13], [28]. For current technologies, this roughly corresponds
to Vdd ≈500mV, while the Vdd of conventional (or STC)
environments is ≈1V.
NTC pushes back the manycore power wall by reducing
the energy per operation several times compared to STC —
at the expense of degrading the frequency of operation [13].
The result is that the power is expected to reduce by about
an order of magnitude, allowing more cores to operate
simultaneously for the same manycore power envelope. If
the application has parallelism, this is a major advantage.
Figure 1 compares the scaling of three parameters under
NTC, STC, and as imposed by classical CMOS theory [10]:
supply voltage, transistor delay and power density. The X
axis shows gate length to characterize each technology gen-
eration. Classical scaling relies on scaling Vdd down at every
technology generation by a constant scaling factor κ. Both
Vdd and transistor delay reduce at each generation, giving
rise to a constant power density. Conventional STC scaling
deviates from classical scaling in that the decrease of the
transistor’s Vth has practically stopped to keep subthreshold
leakage under control, which in turn has prevented Vdd
from scaling [19]. A consequence of this fact is that power
density now keeps increasing. As we go from STC to NTC
scaling, the curves experience vertical shifts. Speciﬁcally, as
Vdd decreases (Figure 1(a)), power density goes down and
transistor delay increases (Figure 1(b)).
In terms of energy and delay, NTC is close to a sweet
spot. Figure 2 shows the inverse of energy per operation
(labeled as energy efﬁciency) in MIPS/Watt (left Y axis)
and the transistor delay (right Y axis) as a function of Vdd.
In the NTC region, the energy efﬁciency is high and the
transistor delay is relatively low. Away from this region,
higher Vdd quickly results in substantially lower energy
efﬁciency. Lower Vdd, on the other hand, quickly results
in slower transistors.
0
1
1
)
V
(
e
g
a
t
l
o
V
y
l
p
p
u
S
1
.
0
1000
Gate Length (nm)
Classical Scaling
10
100
(a)
Power 
Density
s
t
i
n
u
y
r
a
r
t
i
b
r
a
1e4
1e3
1e2
1e1
1e0
Transistor 
Delay
1000
100
Gate Length (nm)
10
NTC Scaling
(b)
STC Scaling
Figure 1. Parameter scaling under three scenarios [7].
~2x
~10x
y
c
n
e
i
c
i
f
f
E
y
g
r
e
n
E
)
t
t
a
W
/
S
P
I
M
(
NTC
STC
Vth
Vdd
NTC
Vdd
STC
Supply Voltage
L
o
g
(
T
r
a
n
s
i
s
t
o
r
D
e
l
a
y
)
~100x
~10x
Figure 2.
Impact of Vdd on energy efﬁciency and delay [13].
B. The Impact of Process Variations at NTC
Each technology generation becomes increasingly vulner-
able to process variations, which manifest across the chip as
static, spatial ﬂuctuations in transistor parameters around the
nominal values [2], [3]. Within-die (WID) process variations
are caused by systematic effects (e.g., due to lithographic
irregularities) and random effects (e.g., due to varying
dopant concentrations) [38]. Two key process parameters
affected by variations are Vth and the effective channel
length (Lef f ). The higher the Vth and Lef f variations are,
the higher the variations in transistor switching speed and
static power consumption are. This results in chips with
increased variation in frequency and power consumption
across cores and memories. Note that, in an environment
with variation, the average core has lower frequency than
before. This is because the slower transistors determine the
frequency of the whole core. Moreover, the average core
consumes more static power. The reason is that low-Vth
transistors consume more additional power than high-Vth
ones save.
Unfortunately, transistor delay and power consumption
are more sensitive to variations in Vth and Lef f at NTC
than at STC. Consider transistor delay ﬁrst. At low Vdd,
transistor delay is experimentally found to be more sensitive
to changes in Vth [14]. For example, Figure 3 shows the
transistor delay from the model of Markovic et al. [28] as
Vth varies. For Vdd=0.6V, the difference in delay between
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:16:56 UTC from IEEE Xplore.  Restrictions apply. 
)
s
n
(
y
a
l
e
D
r
o
t
s
i
s
n
a
r
T
5
.
0
4
.
0
3
.
0
2
.
0
1
.
0
0
Vdd = 0.4V
Vdd = 0.5V
Vdd = 0.6V
11nm
0.25
0.30
Vth(V)
0.35
Figure 3. Transistor delay for different Vth.
transistors of Vth=0.25V and 0.35V is around 30ps, while
for Vdd=0.4V, it jumps to over 200ps.
Dynamic power is also more sensitive to process varia-
tions at NTC than at STC. The reason is that dynamic power
depends on the frequency and, as we have seen, at low Vdd,
transistor delay (and hence frequency) is more sensitive to
changes in Vth.
C. Modeling Process Variations at STC: VARIUS
There are several microarchitectural models that analyze
the impact of process variations on processors and memories
at a level that is useful to microarchitects (e.g., [20], [25],
[27], [35], [37]). However, these works only apply to STC,
and not to NTC. In this paper, we take one of these models,
namely VARIUS [37], and substantially extend it so that it
applies to NTC. To understand our contributions, we brieﬂy
describe VARIUS.
VARIUS models variations in Vth and Lef f . It models
their systematic component by dividing the die into a grid
and assigning to each grid point a ∆Vth and ∆Lef f value
as sampled from a multivariate normal distribution with µ=0
and σsys. Moreover, these values have a spatial correlation
that follows a spherical function. With this function, the
correlation between two points only depends on their Eu-
clidean distance. At a distance equal to zero, the correlation
is one. The correlation then decreases with distance and,
at a distance called Correlation Range (φ), the correlation
becomes zero. VARIUS models the random component of
variation with a normal distribution with µ=0 and σran.
VARIUS plugs the Vth and Lef f variations in the alpha-
power law (Equation 1) and in the equation for static
power [9]. It then ﬁnds the variation in transistor (and gate)
delay and transistor static power, respectively.
tg ∝
Vdd × Lef f
µ(Vdd − Vth)α
(1)
To ﬁnd the distribution of delay of a pipeline stage,
VARIUS proceeds differently depending on whether the
stage has only logic, only an SRAM memory access, or a
combination of both. For logic, it assumes that wire delays
do not suffer from variations and, knowing the number
of gates in a logic path, it uses the gate delay variation
computed above to compute the path delay variation. If
VARIUS knows the distribution of the logic path delays in
the stage (e.g., from Razor data [16]), it can estimate the
distribution of variation-afﬂicted logic path delays.
For a stage with a memory access, VARIUS models the
6-transistor SRAM cell of Figure 4(a). Using the variation
in transistor delay, it computes the variation in cell read
access time. It assumes that the read access time is more
critical than the write access time. Then, using the cell access
time, it computes the memory line access time. Note that the
pipeline stage also contains some logic, namely the decoder,
the logic at the intersection of word- and bit-line, and the
logic at the sense ampliﬁer. The delay through all this logic
is modeled using the previous logic-stage model and is added
to the memory access delay to ﬁnd the distribution of total
path delay in the stage.
For pipeline stages that combine both logic and memory
access, VARIUS estimates the delay distribution by appro-
priately weighting the delay of a logic stage and a memory
stage. Finally, the pipeline stage with the longest delays
determines the safe frequency of the processor.
The static power (Psta) in the processor (or memory
module) is found by integrating the Psta of all of its
transistors. VARIUS uses statistical principles to ﬁnd a
normal distribution for the processor’s Psta as a function
of the normal distributions of the transistors’ Psta.
III. VARIUS-NTV: A MICROARCHITECTURAL MODEL
OF PROCESS VARIATIONS FOR NTC
VARIUS-NTV builds on VARIUS [37] to develop a
microarchitectural model of process variations and resulting
timing errors that is valid at NTC. Much of the general
approach that VARIUS uses still applies to NTC — although
the values of most parameters change. However, there are
several important aspects that require complete redesign.
This is where VARIUS-NTV contributes.
The main contributions of VARIUS-NTV are in four di-
mensions, which address four major limitations of VARIUS:
(i) the VARIUS model for gate delay is based on the alpha-
power law, which is only accurate for Vdd much larger than
Vth; (ii) the VARIUS memory model uses a 6-transistor
SRAM cell, which cannot reliably operate at NTC; (iii) for
SRAM cells, the VARIUS model only considers read access
(or timing) failures, while other memory failure modes
dominate at NTC; and (iv) in the SRAM failure analysis,
VARIUS neglects the impact of leakage while, at NTC, the
impact of leakage is substantial.
In this section, we present
the main contributions of
VARIUS-NTV.