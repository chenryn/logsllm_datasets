attempts. We also maintain a set of control accounts that are not
associated with a website, but into which we log in at our email
provider from time to time. All such control login events have been
accurately reported by our provider.
4.3 Crawler
To scale account registration, we developed a custom-built web
crawler to automatically visit a given site and register for an account.
The crawler attempts registrations on a ‘best-effort’ basis: the crawler
explicitly does not attempt to support all of the site registration
mechanisms encountered on the Web, as our experiment is designed
only as a proof of concept and does not require complete coverage.
4.3.1 Registration. The crawler uses PhantomJS [33], a script-
able, headless web browser based on the WebKit engine [20]. It
processes pages according to the flow shown in Figure 1. It attempts
to identify a registration page on the site, and if successful, iden-
tify and fill each form field serially. If any stage fails, the crawler
aborts with a corresponding error code. The crawler does not support
any site whose registration system does not follow this basic flow,
nor sites that use external account services such as those provided
by Google or Facebook. The crawler relies on many hand-crafted
heuristics to locate registration forms, fill them out, and submit them.
These heuristics take the form of a series of weighted regular expres-
sions and sets of DOM elements to which they apply. Our current
heuristics are only designed to support sites written in English.
Figure 1: Control flow of the Tripwire crawler. Given a URL,
the crawler returns a code indicating the reason for termina-
tion.
If an email address or password was ever shown to a site—
regardless of Tripwire’s assessment of the success of this submission—
we “burn” the identity and forever associate it with that website. If a
registration attempt fails, the identity used may be returned to the
general pool to be used on another attempt only if neither the email
address nor password were exposed to the website. The horizontal
line in Figure 1 depicts the approximate point at which an identity
typically becomes permanently associated with a site.
4.3.2 Bot-detection avoidance. The crawler bypasses some
rudimentary bot-checking systems (such as CAPTCHAs or basic
human-knowledge questions) by relying on a third-party CAPTCHA-
solving service [5]. The crawler operates using a small network
of web proxies that our group maintains solely for research pur-
poses. These IPs are not meant to be unattributable—WHOIS records
clearly state our institution name. They serve simply to decouple
multiple registration attempts at the same site: websites receive at
most one account registration from a given IP. We made no attempt
to match the geolocation of the proxy IP to the address for a given
identity, but in practice this did not seem to prevent registration.
4.3.3 Mail handling. Since many websites require confirma-
tion of email addresses to create an account, our email provider
forwards any messages delivered to our accounts to a mail server
under our control. This server retains a copy of all messages received,
and, as needed, processes incoming message contents. In particular,
it processes all incoming messages to evaluate whether a message
is associated with a recently-registered account, and, if so, if the
message contains a validation link. If it does, the mail server loads
the verification page and saves it for future debugging.
Is registration page?Find most likely registration linkFind registration formIdentify and ﬁll ﬁeldRequired ﬁelds missingSubmission checksNo registration foundSystem ErrorSubmission heuristics failedOK submissionID UsedID ReturnedURLClickNone found ormax tries reachedPage foundFor all ﬁeldsTripwire
IMC ’17, November 1–3, 2017, London, United Kingdom
Interpreting account compromise
4.4
The key assumption with Tripwire is that a successful login reported
by the email provider is the result of an attacker having stolen
credentials from the site on which we registered with our email
account. We end our methodology by arguing why we believe this
assumption to be valid.
Acquiring the correct credentials requires collecting them either
on a machine storing them, or in transit between credential holders.
Credentials are stored in three places: within our own database, with
the email provider, and with the site under measurement. We have
striven to minimize the risk of leaking data from any of these sources.
Our database is accessible only from a small number of servers on a
small internal network, none of which provide externally accessible
services. Communication between our servers is tunneled over SSH.
Individual instances of the crawler have only the identity assigned
to one site, so compromise of multiple identities would require full
arbitrary code execution on the crawling machine.
The provider treats the email accounts used in Tripwire equiv-
alently to their hundreds of millions of other accounts. The email
provider has mechanisms to detect attempts to brute-force passwords.
No known breaches of the email provider affected accounts used
in Tripwire, and sensitive account credentials were only exchanged
between the authors and the email provider via verified PGP.
Perhaps the most compelling evidence of the integrity of the
Tripwire accounts is from the fact that no accounts were tripped
that were not associated with Tripwire registrations. Tripwire has
a database including more than 100,000 valid email addresses and
passwords obtained from the provider that were monitored for logins,
but were not registered with sites. The unused accounts conveniently
serve as honeypot accounts to detect any compromise of the email
provider or our own database since they are stored with the accounts
used in the study, but have not been used for registrations. None of
these unused accounts have ever been accessed.
For the sites under measurement, a possibility is that an attacker
brute-forced our credentials without explicitly breaching a site, e.g.,
an attacker somehow guesses our usernames (or a site exposes them)
and the site does not prevent brute-forcing attempts on its accounts.
If so, then an attacker could conceivably have found the Tripwire
username, brute-forced the password with the site, and then used
those credentials in a password-reuse attack on the email provider.
While unlikely, we consider this within the bounds of attacks that
Tripwire should detect, and Tripwire would correctly declare a site
as compromised in this situation.
In communicating with sites under measurement, the system used
HTTPS when preferred by the site, validating certificates with a
commonly accepted list of roots, and many of the tripped sites used
HTTPS during the registration process. It is possible that an attacker
may have actively impersonated a site during Tripwire’s registration
process. But we consider this threat to be an unlikely one, with only
a few attacks of this kind having been seen in the wild, primarily
due to targeted attacks by state-sponsored actors [16].
Finally, it is possible that a Tripwire account is stored in a sharded
database on the site, and only a subset of the shards are compro-
mised in an attack. If a Tripwire account is in an exposed shard,
Tripwire indicates that a database breach occurred and still detected
a significant compromise of the website under measurement. Con-
versely, if a Tripwire account is not in the shards exposed, then
Tripwire will miss any attacks on the affected users (similar to a
breach that did not result in password-reuse attacks). Registering
for many additional accounts could reduce the possibility of being
stored in an unbreached shard, but we consider this possibility to
be remote, and additional registrations introduces ethical challenges
that are not outweighed by the benefit to this rare case, especially
given Tripwire’s otherwise negligible false-positive rate.
5 ACCOUNT CREATION
We used the Tripwire crawler to register for accounts in batches
between July 2014 and July 2016, with most occurring between
January and March 2015. Tripwire made 65,413 distinct registration
attempts across 33,634 different sites, using a total of 8,352 identities.
We detail our validation methodology below. In our best estimate,
Tripwire successfully registered for approximately 3,664 accounts
on around 2,302 sites.
5.1 Website selection
We registered accounts primarily on four occasions from December
2014 through May of 2016. We initially seeded our crawler with
the Alexa top-1,000 sites [1] combined with the Quantcast top-
1,000 sites [18] (with duplicates removed) in December of 2014.
Subsequent registrations occurred from January through March of
2015 covering the Alexa top-25,000 sites. In late November 2015, we
attempted registrations on all sites in the Alexa top-30,000. Finally,
in May 2016 we manually registered for accounts at all of the eligible
Alexa top-500 sites to ensure good coverage of the most popular
sites. In each case, we used the most up-to-date rankings available
at the start of the registration window.
In all of the automated cases, we filtered URLs through a set of
regular expressions to remove sites known to use common backends—
e.g., Amazon.com, Amazon.de, etc., or Google, YouTube, Blog-
ger, Blogspot, etc.—and others.
5.2 Registration attempts
Because our infrastructure has no automated way to validate regis-
trations after it attempts to create them, there is uncertainty in the
number of accounts and sites for which the crawler successfully reg-
istered. Hence, we rely on heuristics during the registration process,
email-based indicators, and manual sampling to estimate success.
5.2.1 Crawler termination conditions. Figure 1 presents the
termination conditions for the Tripwire crawler’s execution across
various sites. “Required fields missing” indicates that the registration
form did not meet the conditions for a valid form (e.g., did not ask
for both password and email), or the crawler was unable to recognize
a sufficient number of fields to attempt registration. “Submission
heuristics failed” corresponds to the case where the crawler submit-
ted a registration, but suspects that it did not succeed, while “OK
submission” indicates its heuristics suggest it did. Finally, “System
Error” represents cases where the crawler was otherwise unable
to process the site. We investigate the outcomes of the crawler in
Section 7, though we note here that crawler outcome distributions
were similar across Alexa ranks.
IMC ’17, November 1–3, 2017, London, United Kingdom
DeBlasio et al.
Account Status
Email verified
Email received
OK submission
Bad heuristics/Fields missing
Manual
Hard
1,552
128
1,069
4,395
0
Attempted
Total
2,060
179
1,772
4,518
137
Easy
508
51
703
122
137
Sites
1,359
106
860
3,420
137
Success
Hard
98% 1521
82%
105
631
59%
308
7%
100%
0
Easy
498
42
414
9
137
Estimated Valid
Total
2,019 (55%)
147 (4%)
1,045 (29%)
317 (9%)
137 (4%)
3,665 (100%)
Sites
1,332
87
507
239
137
2,302
Total
7,144
1,100
Table 1: Estimates of accounts created by account status.
5,882
1,521
8,666
2,565
5.2.2 Out-of-band confirmation. In addition to the heuristics
Tripwire uses at registration time, some sites provide further con-
firmation of registration via email. If an email account receives an
account verification message, we label it “Email verified”. If the
account receives email, but we do not recognize it as a verification
message, we label the account “Email received”. Over 47% of “OK
submission” results at registration time triggered a verification mes-
sage, and 4% more triggered at least some kind of email message.
Fewer than 8% of the registration attempts of the other categories
resulted in any kind of email message.
While it is possible that registrations could also be verified by
phone, no phone verification occurred in our sample. We did receive
18 calls from seven distinct self-identifying sources (“Hi, this is John
from site X”) to our phone numbers that were directly attributable to
the accounts we registered. (We received several additional phone
calls, but they seemed to be wrong numbers or call-center scams that
cannot be conclusively tied to the phone numbers used in Tripwire
accounts.) All attributable calls were sales teams following up on
what appear to be free-trial accounts for which Tripwire registered.
5.2.3 Success estimation. After accounting for email recep-
tion, we have five distinct outcome categories shown in Table 1. We
manually tested a random sample from each category to determine
their expected success rates as a basis for estimating the number of
accounts and sites for which registration succeeded.
The “Attempted” columns on the left of Table 1 show the number
of accounts and sites according to each registration attempt. “Hard”
and “Easy” correspond to accounts created with those respective
password strengths, and “Total” is their sum. “Sites” corresponds
to the total number of sites on which we registered accounts (some
sites had multiple accounts). We estimate the success rate in each
category by selecting 50 random accounts and manually attempting
to log in to the corresponding site. The “Success” column shows the
success rate of these login attempts. The “Estimated Valid” columns
on the right then show our estimates of the true success rates by
discounting the “Attempted” columns by the login success rates.
Email verified. Our highest confidence bin for automated regis-
trations is any account that received a recognized verification email.
This category consists of 2,060 automated registrations. In our man-
ual tests of a sample of accounts, they succeeded in 98% of cases,
resulting in an estimated 2,019 accounts across 1,332 domains.3
Email received. An additional 179 registration attempts received
email, but the message did not appear to require email verification.
3In the one “failure” case, the site in question is an app-development site partially
hosted at GitHub with a local account registration. Tripwire successfully signed up for
an account on GitHub instead of the site in question.
These accounts were valid in 82% of our tests, for an additional 147
accounts on 87 domains.
OK submission. In 1,772 registration attempts, our attempt passed
all heuristics for success, but no email was received. In our sampling,
59% of these accounts exist, accounting for 1,045 more accounts on
507 domains.
Bad heuristics/Fields missing. The lowest-probability-of-success
outcome is that the system exposed a username and/or password, but
the system triggered a heuristic signaling failure or did not attempt
to submit the form. In these cases, approximately 7% of attempts
still succeed, for an additional 317 accounts on 239 domains.
Manual. Finally, we manually registered accounts at the 137
English-language sites accepting registrations among the Alexa top-
500 sites (4% of all accounts registered).
6 COMPROMISES DETECTED
At various points during our study, our email provider reported
any successful login activity for Tripwire email accounts. (For non-
technical reasons, we were unable to collect login information on a
periodic or real-time basis.) As discussed in Section 4.4, we interpret
a successful account login as indicating a compromise of the associ-
ated site. Among the estimated 2,302 sites with successful account
registrations, Tripwire detected 19 such site compromises between
June 2015 and February 1, 2017.
Figure 2 shows the login activity to email accounts stolen from the
compromised sites across time. Each row corresponds to a compro-
mised site, vertical ticks show when we registered for accounts on
the site, squares show logins to email accounts with easy passwords,
and triangles show logins to email accounts with hard passwords.
They are sorted from the top according to time of first account lo-
gin. Numbers to the right of each row indicate the total number of
account logins for that site. The shaded region in Spring 2015 corre-
sponds to a gap in our account login data. Due to a misunderstanding
of the retention limits at the email provider, login activity was lost
from March 20, 2015, through June 1, 2015. Although no logins
were detected for more than a month after collection resumed, it
is possible that additional sites were compromised and would have
tripped our system during that time.
In the rest of this section, we characterize the sites that were com-
promised and detected by Tripwire, as well as other compromised
sites during the same time frame. We then describe our results of
disclosing the compromises to the sites. Finally, we summarize the
activity of attackers who accessed the stolen email accounts.
Tripwire
IMC ’17, November 1–3, 2017, London, United Kingdom
Figure 2: Registration and login activity to email accounts stolen from compromised sites. Each row corresponds to a compromised
site, and different colors on the same row indicate activity on different accounts at that site. The numbers along the right y-axis
indicate the total number of logins for that site across all accounts. The shaded region in Spring 2015 corresponds to a gap in our logs.
6.1.1 Site characteristics. The compromised sites cover a wide
range in terms of popularity. The detected compromised sites are
distributed throughout our covered site ranking, from a top-500 site
through the full range of sites selected.
Category
Hard
accessed
Site Accounts
accessed
2 of 2
1 of 2
1 of 2
3 of 3
1 of 2
1 of 2
2 of 2
2 of 2
2 of 2
2 of 2
2 of 2
1 of 3
2 of 2
1 of 2
1 of 2
1 of 1
2 of 2
2 of 2
1 of 2
A
B
C
D