可能会用多种方式解释。假设每个审查人在轮查评审中读到一条模
糊的需求。需求对于他们每个人来说都是有意义的，但是对每个人
来说含义都有一些不同。每一位评审人都会说：“这样是可以的。”
然后这种模糊之处没有被发现就过去了。但是在审查中，一名叫做
朗读者的团队成员用他自已的词汇把他所认为的需求的含义描述出
来。其他审查人可以把朗读者的解释与他们自己的理解进行比较。
有时候这将揭示出解释的差别一—也就是模糊之处。如果要到最后
面才能发现，那么会带来很大的问题。
考虑到这么多有利之处，我们决定审查我们已经整理完成的SRS。
Janet负责把三位分析师编写的部分需求规格说明和相关资料编辑在
一起。我们最后得到一份50页的SRS，还有另外大约50页支持资
料，包括分析模型、定义和其他支持信息。
我们邀请了4位产品代言人、我们3位分析师和项目的另外一位利益
相关者参与到审查中。8个人是一个相当大的审查团队了。我并展
审查工作有几年了，所以我担任组织者，让评审能够按照预定的目
标发展。Devon担任记录员，记录在讨论中提出的问题。我们认识
到无法在一次会议中审查完这么多材料。至少司以说，如果想要认
真检查问题，那么一次会议是不够的。所以在同一个星期的周一、
周三和周五安排了3次审查会议，每次会议最长两个半小时（即使
如此，这仍旧是一个相当快的审查速度了）。马拉松式的会议是没
有用处的，因为在儿个小时后，疲劳的眼睛就很难再贡献更多有价
值的意见了。
我们的审查取得了成功，至少从发现的缺陷数量来看取得了成功。
我们现在修复的每个缺陷都意味着我们不需要在以后花费大量成本
和总成本来修复它们了。Devon不停地跑到房间外面去拿更多空白
的审查问题记录单。我们在需求上工作得已经很努力了，所以发现
这么多缺陷有点让人泄气。但是我们也认识到，在这个阶段发现的
每个问题都是一个“很有意义的问题捕获”。
结果
我们至少审查识别出了233个缺陷和问题。大多数都是轻微的，但
是其中的一些如果不是在这么早的阶段发现，将对项目带来很大影
响。找出这么多错误让我们为自己付出的查找时间而感到高兴。显
然，进行审查的成本不小，但是如果这些缺陷流入到我们提交给开
207
---
## Page 209
发人员和测试人员的最终需求中，将会造成很大的潜在损失，远远
超过在审查中所投入的成本。
在审查会议之后我们修正了审查人发现的很多错误。Pau和其他产
品代言人都认为修改后的需求文档准确地描述了他们对化学制品跟
踪系统的需求，至少符合现在已知的需求。接着我们为SRS定义了
一条基线。基线并不意味着规格说明书冻结了或不允许在今后进行
更改。在现实中，由于多种原因，需求将会发生变更。客户会想到
他们之前忘记了的事情，分析师会想到了有用的新功能，我们在设
计和编码过程中可能发现更多的需求错误，在并发过程中业务本身
也可能会发生变化。但是基线的作用是大家都同意的后续项目工作
基础。即使我们都承认需求并不完美，但是达到这个基线里程碑让
所有的参与者都有一个不错的感觉，我们已经完成了这个重要项目
所要达成的目标。需求已经“足够好了”，可以继续开发化学制品跟
踪系统了。
后记：让我们大吃一顿！
随着需求收集过程的进展，我们发现并始时和Paul在交谈过程中遇
到的坚冰开始融化了。他看到我们在理解他的需求和CTS其他利益
相关者的需求上取得了实实在在的进展。Paul观察到我们使用的新
技术比以前的团队采取的方法好，能够更好地完成收集需求的工
作。结果让Paul认识到，如果最终的那些需求能够恰当地实现，将
会让他完全符合政府的报告要求，还能为不同的用户提供很多其他
有价值的服务。
由于我们的团队处理CTS需求的方法，我们也经历了一个明显的文
化变革。在SRS基线后不久，Paul邀请分析师团队、产品代言人和
项目的其他重要利益相关者参加了午餐庆祝会。美味佳肴，大家都
非常愉快，每个人都是酒足饭饱后才回家的。与4个月前相比，Paul
的心情好多了。
尾声：后来发生了什么？
自从1998年成为独立顾问后，我的主要工作方式是参与到用户的工
作中去。我提供培训、教练或对客户遇到的特定问题进行解决。我
常常看不到系统在由于我的介入后会变成什么样子。刚并始的时
候，对于CTS也是这样，我也不知道CTS后来变成什么样子了。
208
---
## Page 210
在我们成功并发出需求之后，我调到了其他工作上，稍后不久文调
到了Contoso制药公司另外一个完全不同的部门中。两年后，我离开
了Contoso，创办了自己的软件培训和咨询公司。我在培训课程中使
用了来自化学制品跟踪系统中的几个例子来描述需求开发过程中的
技术和领悟的东西。
在1999年，我在客户那里讲授一门需求课程。当我把CTS上的经验
分享给大家的时候，班上一位学员说到：“嘿，我认得那个项目！”
这位学员恰巧在市场部工作过。Contoso把部分CTS实现工作外包给
了他以前工作过的一家公司。我对这种巧合很感兴趣，就问他系统
的实现情况以及他以前所在的公司的并发人员认为CTS的需求怎么
样。他说项目进展不错，而那个需求是成功最主要的因素，他的话
让我松了一口气。
尽管并始时很不顺利，化学制品跟踪系统最终成为一个很好的研究
案例。我们学到了如何有选择地、彻底地应用几种新的需求并发方
法。我们找到了过程中让不同的客户代表有效参与的方法。通过合
作的方法，我们享受着一些文化上的好处，Paul和其他主要客户认
识到与IT代表紧密地一起工作不但完全有可能，而且是必需的，这
样才能确保在过程结束时得到合适的产品。最令人欣慰的是，这个
应用程序直到现在还在Contoso制药公司使用，距离上述的需求开发
过程有13年了。
有用的参考资料
1.Ambler,Scott.1995."Reduce Development Costs with Use-Case
Scenario Testing."Software Development 3(7）:53-61.
2.Collard,Ross.1999."Test Design."Software Testing and Quality
Engineering 1(4):30-37.
3.Gottesdiener,Ellen.2002.Requirements by Collaboration:Workshops
for Defining Needs.Boston:Addison-Wesley.
4.Kulak,Daryl,and Eamonn Guiney.2004.Use Cases: Requirements in
Context, Second Edition.Boston: Addison-Wesley.
5.Wiegers,Karl E.1996.Creating a Software Engineering Culture.New
York: Dorset House Publishing.
209
---
## Page 211
6.Wiegers,Karl E.2002.Peer Reviews in Software: A Practical
Guide.Boston: Addison-Wesley.
7.Wiegers,Karl E.2003.Software Requrements,Second
Edition.Redmond, WA:Microsoft Press.
8.Wiegers,Karl E.2006.More About Software Requirements:Thorny
Issues and Practical Advice.Redmond,WA:Microsoft Press
致谢
非常感谢下列人士提供了很多非常有价值的意见：JimBrosseau
Barb Cardenuto、Chris Fahlbusch、Kathy Getz、Andre Gous、Shannon
Jackson、Lori Schirmer和IMoe Stankay。
山1刘易斯（Lewis）和克拉克（Clark）是美国的两位探险家，在
地，记录所见所闻。他们于1804年从圣路易出发，18个月后抵达太
平洋，然后于1806年返回。他们的这次远行激励了许多美国人到西
部去。
第20章在Google的开发工作
AlexMartelli访谈录
我们认识的人似乎都想去Google工作。我们听到了各种各样非常好
的待遇一—从并发人员可以花部分时间并发他们自己的项目，到让
每位员工都感到舒适灵活的按摩师。但是Google的开发工作是非常
严谨的，AlexMartelli当时是以“高级技术主管"的身份加入Google
的，一直在从事着软件开发严谨的那一面工作。我们想听他介绍一
下在Google是如何打造团队的。
Andrew：你是如何了解软件开发工作的？
Alex：我开始在德州仪器公司担任电子工程师，设计计算机芯片，
后来到了IBM研究所。我发现自己从设计硬件、芯片慢慢转向了系
统并发、微程序设计，因为研究工作每次所做的是构建几个原型并
希望原型能够被我们的科学家及其他目标受众使用，所以总的来
说，原型必须易于通过类似FORTRAN或APL这样的语言来使用。那
210
---
## Page 212
些人肯定是不愿意使用微代码的。到了最后，在工作方向经过了几
年的转换之后，我不得不接受一个现实：我将不能再设计硬件了。
我已经不清楚硬件设计、芯片等技术的动向了，于是辞去了那份工
作，转行做了软件开发人员。
此后不久，我加入了一个初创企业，在那里每个人基本上是什么事
情都得做。考虑到我可能是小组中经验最丰富的并发人员，所以很
自然地被视为管理人员，要做的事情是把团队组织并运作起来。并
始时我做得并不算好。幸运的是，我总算没有让公司跨掉并且找到
了一个懂点管理的人接替我的工作，我的大部分精力又回到软件开
发上了。后来，在总结了第一次管理中所犯的错误之后，我在管理
岗位上再次做了尝试。如何在纯技术上对组织作出贡献，如何做好
管理工作并发挥领导力，二者之间需要一个平衡点，我在这方面越
来越适应，能力也越来越强。
2004年，我到Google面试，年底的时候他们给我发来了录用通知，
提供了一份很酷的、让人无法拒绝的职位：“高级技术主管”。我在
过去几年中一直做的就是这份工作，有很多技术方面的工作，也有
很多管理和领导力方面的工作。“高级"的意思是我在Google从来没
有负责过某个软件并发团队，每个团队都有自己的主管。但我的工
作是负责监管某个业务领域的很多团队并把他们整合在一起。
Andrew：能谈谈你刚才提到的第一次管理经历吗？发生了什么事
情？
Alex：我认为影响我表现的因素与我长期以来形成的个性有很大关
系，那就是我对人性始终不渝的信仰。我是经过深思熟虑才使用信
仰这个词的，因为那是一种人们必定相信的东西。在观察世界的时
候，你无法得出人性本善的结论，经验方面的证据似乎对人性本善
的说法也不大支持。我当时就是抱着一种人性本善的观点。
比如说，有一个人之所以加入我们公司，是因为他与我们的另一位
创始人在前一家公司是同事。但是那位创始人并不是软件开发人
员，所以没有意识到他带来的人实际上无法承受初创企业中的那种
巨大压力。那个人在大公司可能干得不错，因为他承担的责任有
限，波澜不惊地就可以把工作做得相当好。但是为了让初创企业生
存下去，需要一种完全不同的强度、参与程度和技能。那个人从以
211
---
## Page 213
Andrew：真滑稽，是不是有点夸张了？
Alex：我不记得他曾经说过“猫吃了我的软件”之类的话，但是我们
在这方面不断遇到问题。到了最后，这个人几乎是公然对抗了，但
是团队中的其他人并不傻，我也不傻，只是太乐观，太信任别人
了。他们都认识到那个人在拖他们的后腿。他的生产能力是负的，
他实际上是可以专心工作的。他不是个偷懒的人，但是在集中精力
工作3天后就得让别人花上7天的时间来修复由他引入的缺陷。我不
断地给第二次机会、第三次机会、第四次机会。有时想来，我真是
太愚蠢了。我可以告诉你，在那种情况下能够采取的办法很多，但
是直到事后我才意识到。
最后，我不得不面对那个人，做一件对经理来说最困难的事情-
同时也是一件让团队正常运作至关重要的事情。我不得不对他说：
“虽然你从公司成立第一天就来了，但我们也只能这样做。”那是我
有生以来第一次解雇别人，或者说是衷心地期望他去寻找其他工作
机会，我不知道这件事让人有多么痛苦。但是为了让团队生存下
去，只能这样做。就像一颗老鼠屎坏了一锅汤。如果管理人员过于