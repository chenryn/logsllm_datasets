---
author: Red Hat
category: 代码英雄
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 7331
date: '2020-11-06 01:21:00'
editorchoice: false
excerpt: 一位“仁慈的终身独裁者（BDFL）”的辞职，永久改变了 Python 语言的命运，Guido van Rossum 那个名为《移交权利》的备忘录，让大家的注意力集中到了语言发展这件事情上。
fromurl: https://www.redhat.com/en/command-line-heroes/season-3/pythons-tale
id: 12795
islctt: true
largepic: /data/attachment/album/202011/06/011850mh1vdq41gh1b4q43.jpg
permalink: /article-12795-1.html
pic: /data/attachment/album/202011/06/011850mh1vdq41gh1b4q43.jpg.thumb.jpg
related:
- displayorder: 0
  raid: 12828
reviewer: acyanbird, wxy
selector: bestony
summary: 一位“仁慈的终身独裁者（BDFL）”的辞职，永久改变了 Python 语言的命运，Guido van Rossum 那个名为《移交权利》的备忘录，让大家的注意力集中到了语言发展这件事情上。
tags:
- Python
thumb: false
title: 《代码英雄》第三季（1）：Python 的故事
titlepic: true
translator: caiichenr
updated: '2020-11-06 01:21:00'
---
> 
> 代码英雄讲述了开发人员、程序员、黑客、极客和开源反叛者如何彻底改变技术前景的真实史诗。
> 
> 
> 
> 
> **什么是《代码英雄》**
> 
> 
>  代码英雄   Command Line Heroes 是世界领先的企业开源软件解决方案供应商红帽（Red Hat）精心制作的原创音频播客，讲述开发人员、程序员、黑客、极客和开源反叛者如何彻底改变技术前景的真实史诗。该音频博客邀请到了谷歌、NASA 等重量级企业的众多技术大牛共同讲述开源、操作系统、容器、DevOps、混合云等发展过程中的动人故事。
> 
> 
> 
![](/data/attachment/album/202011/06/011850mh1vdq41gh1b4q43.jpg)
本文是《[代码英雄](https://www.redhat.com/en/command-line-heroes)》系列播客[第三季（1）：Python 的故事](https://www.redhat.com/en/command-line-heroes/season-3/pythons-tale)的[音频](https://dts.podtrac.com/redirect.mp3/cdn.simplecast.com/audio/a88fbe/a88fbe81-5614-4834-8a78-24c287debbe6/b16fc81d-60c7-4991-9773-e9fce88ca3ba/CLH_S3E1_Pythons_Tale_vFINAL_tc.mp3)脚本。
> 
> 导语：一位“ 仁慈的终身独裁者   benevolent dictator for life （BDFL）”的辞职，永久改变了 Python 语言的命运，Guido van Rossum 那个名为《移交权利》的备忘录，让大家的注意力集中到了语言发展这件事情上。
> 
> 
> 在这一期里，Emily Morehouse 将 Python 技术层面的拓展性和它的包容性社区联系在了一起。Michael Kennedy 解释了 Python 是如何做到在简单易学的同时，又强大到足以担当的起像 Youtube 和 Instagram 这样的大项目。而 Diane Mueller 则强调了 Python 社区是如何率先在科技领域传播了许多包容性的实践 —— 包括社区主导的决策的兴起。
> 
> 
> 有时候，一位仁慈的终身独裁者可以让一个语言开始发展，但 Python 证明了，是社区让语言兴旺起来的。
> 
> 
> 
**00:00:06 - Saron Yitbarek**：
在 2018 年 7 月 12 日的早晨，世界各地的 Python 社区成员起床之后，他们拿起一杯咖啡，打开了自己的电脑。随后一个接着一个地，看见了一条来自他们仁慈的独裁者的消息。
**00:00:24**：
Guido van Rossum，世界上最伟大的编程语言之一 Python 的创造者，也许没有之一。他面向 Python 社区的全体成员写下这条消息，我们不难想象出 Python 的粉丝们阅读这条消息时的画面。
**00:00:38 - 多个配音演员**：
我没想到在我已经如此努力的情况下，仍有这么多人对我的决策不满。我想把自己从决策过程中完全抽离出来，给自己一个永久的假期，让自己一辈子都不做仁慈的独裁者。你们都要靠自己了，我不会指定继任者。那么你们接下来要如何做呢，创立民主制度吗？或者保持无政府状态？
**00:01:00 - Saron Yitbarek**：
在这条简短却惊人的消息发布之后，Guido van Rossum，这个被 Python 社区追随了几十年的人……好吧，他基本上就这样退出了。这条消息被命名为《 移交权利   Transfer of Power 》，它将永久的改变 Python 的格局。
**00:01:19**：
不过除此之外，它又引出一个问题，那就是不光是 Python，所有的这些编程语言在未来要怎样衍变与壮大呢？是否应该由一个仁慈的独裁者把控，赋予它们形状和一致性？又或者，在开源世界里，编程语言的发展与变化是否应该更像口语，取决于所有语言使用者的行为？Python 社区，这个成长速度远超其他语言的社区，需要找到这个问题的答案。
**00:01:56**：
我是 Saron Yitbarek ，这里是《代码英雄》第三季，一个来自红帽的原创播客。在上一季的《代码英雄》里，我们探索了广袤天地，从[游戏主题](/article-12578-1.html)出发，到[失败的艺术](/article-12625-1.html)，再到[无服务器开发](/article-12717-1.html)，最后我们甚至追踪了一台在火星表面，来自 NASA 的[火星车](/article-12744-1.html)。但是真正抓住每个人想象力的一集，似乎是 [Grace Hopper 的故事](/article-12595-1.html)。她参与开发的编译器创造出了世上第一个高级编程语言，COBOL。我们随后意识到，Grace Hopper 的故事不过是万千个塑造了软件开发与运维的世界的故事之一。新的编程语言使得我们可以连通人类与机器，它们为我们打开了一扇通往无限可能的大门。
**00:02:51**：
因此，第三季将全部围绕这些语言展开。我们会谈论 JavaScript、BASIC、Go 以及 Perl，当然，还有 Python。我们的旅程将从 Python 开始，顺着 Python 的故事，我们会学到一个与所有编程语言未来相关的至关重要的事实。
**00:03:16**：
在 Python 的仁慈的独裁者放弃王座之后，整个 Python 社区……呃，有些迷茫。你要如何在独裁者退位之后组织工作呢？有人提议采用 长老会   Presbyterian church 结构，不过没能奏效。要弄清楚 Python 是如何重新找到领导方式的，并了解这对其它语言的未来有什么意义，我们必须要回到 Python 故事的源头。
**00:03:46 - Guido van Rossum**：
好吧，让我用 C 来完成全部代码，这事情变得有些枯燥。
**00:03:51 - Saron Yitbarek**：
本尊驾到，Guido van Rossum，Python 的仁慈的独裁者。Van Rossum 曾在为阿姆斯特丹著名的 Centrum Wiskunde & Informatica 工作数年，在那里他协助开发了 ABC 编程语言。现在，他将描述他使用 C 工作时，发现对一个全新编程语言产生需求的时刻。
**00:04:13 - Guido van Rossum**：
仍然感觉还是有着很多 bug，并且开发速度缓慢。我在想，呃，如果这里支持 ABC 语言，我可以在十五分钟内写出整个登录程序，然后我可以接着开发账户管理之类的功能，但是用 C 进行开发，却要花掉我一整个星期。我开始设想，要提出一种可以在 Amoeba 环境中使用 ABC 语言特性的方法。
**00:04:47 - Saron Yitbarek**：
在研究编程语言的历史时我们发现，没有什么东西是全新的。它们全都是为了拼凑出解决方案而从旧语言借鉴来的。语言会不断的变化、发展、开枝散叶。当 van Rossum 被种种可能性弄得迷茫时，他设想出一个可以弥合 C 与 Shell 编程两者间隙的编程语言。一些场景下使用 C 语言往往是牛刀杀鸡，与此同时，用 Shell 脚本又常常让人感到繁琐，二者之间的最佳结合点，正是 Python 的栖身之处。当 van Rossum 在 1991 年首次发布 Python 时，它给大家都带来了启发，尤其是对系统管理员而言。这是一种前无来者，功能全面的脚本语言。
**00:05:35 - Emily Morehouse**：
第一次使用 Python 时，我立即就爱上了它。
**00:05:39 - Saron Yitbarek**：
这是 Emily Morehouse，目前 Python 担任核心开发者的五位女性之一。
**00:05:44 - Emily Morehouse**：
我认为当你从接触到的像 C++ 这样的第一门语言跨越到 Python 时，发现二者之间如此显著的差异，会真的会意识到语言与其设计的优美之处。你不必去应付内存管理的毛糙的底层实现细节，它可以既快又好的构建一些项目，更不必说它还有着如此广泛的应用领域。
**00:06:18 - Saron Yitbarek**：
Python 吸引力的关键之处，就在于它的可扩展性。举个例子，像 ABC 这样的语言，在设计上是固化单一的，无法形成一个能够真正帮助改善它的社区。反观 Python，van Rossum 在设计之初就希望 Python 是开放的、易于扩展的。
**00:06:37 - Emily Morehouse**：
进行软件设计时，你往往需要用到一些现有的软件或系统，并且要让它们能够协同工作，其实软件设计的核心价值之一就在于确保它的可扩展性。
**00:06:58 - Saron Yitbarek**：
听起来不怎么费脑子，但并非每一个语言都像 Python 这样，有着与生俱来的强可扩展性。事实上，一门不具备可扩展性的语言，大概率会随着自身的发展而崩溃。
**00:07:16 - Emily Morehouse**：
Python 有一个非常有趣的设计，它允许在其内核上进行扩展。实际上，你可以在运行时环境上对系统的不同片段打补丁，假如你想要改变模块导入的方式，或者你想改变你的字符串类型或整数类型，Python 允许你用相当容易的方式去实现这些事。
**00:07:44**：
Python 可扩展性的核心是所谓的 C 扩展，或者说是 C 模块。因此，Python 实际上被设计出来的意图，是为你提供对其它语言的切入点。本质上来讲，如果你可以写出 C 扩展或 C 模块，可以用它去桥接其它数百种语言，那么你在某种角度上算是破解了 Python 的设计，再造了一个它。
**00:08:16 - Saron Yitbarek**：
这完全取决于用户根据自身需求调整语言的能力。所以说 Python，按照 Guido van Rossum 的设想，绝不会局限于独裁者的个人视野。他的《移交权利》备忘录由来已久。Van Rossum 明白社区影响力所能产生的力量，这是一种能够使所有人都聚集于同一顶“大帐篷”之下的力量。没错，他最终被冠以独裁者称号，但却是一名仁慈的独裁者。
**00:08:44 - Emily Morehouse**：
我认为 Python 社区变得如此多元化，原因之一就是 Guido。Python 现在能够拥有女性核心开发者，正是因为 Guido 希望有这样的改变，并一手推动其实现。
**00:09:01 - Saron Yitbarek**：
Python 软件基金会的主席 Naomi Ceder 曾在一次演讲中说：“Python，因语言而来，为社区而留。”这可能正是 Guido van Rossum 留下的最棒的礼物。不仅仅是 Python 语言，他更是为整个 Python 社区都创造了空间。他不仅在语法意义上为 Python 提供了可扩展性，某种角度来讲，他也在社会意义上提供了扩展性。永远都为新来者留有位置。
**00:09:29 - Emily Morehouse**：
Python 有着大量不同的应用领域，而社区又如此多元化。。所以它真的、真的扩展了社区的边界。
**00:09:51**：
Emily Morehouse 是 Python 核心开发者与 Cuttlesoft 的工程总监。
**00:09:59**：