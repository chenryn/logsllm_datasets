Sendingqueries Simpleprotocol
Simple query protocol flow
Client Server
Query
RowDescription
DataRow
DataRow
DataRow
CommandComplete
ReadyForQuery
JanUrban´ski (Ducksboard) Postgresonthewire PGCon2014 29/51
Sendingqueries Extendedprotocol
Outline
1 Protocol basics
2 Sending queries
Simple protocol
Extended protocol
3 Other features
JanUrban´ski (Ducksboard) Postgresonthewire PGCon2014 30/51
Sendingqueries Extendedprotocol
Extended query protocol
 query execution is split into separate steps
 each step is confirmed by a separately server message, but they can
be sent consecutively without waiting
 allows separating parameters from the query body
SELECT admin FROM users WHERE login = ’$var’
 disallows sending several commands in one query
SELECT * FROM posts WHERE id = $var
JanUrban´ski (Ducksboard) Postgresonthewire PGCon2014 31/51
Sendingqueries Extendedprotocol
Extended query protocol
 query execution is split into separate steps
 each step is confirmed by a separately server message, but they can
be sent consecutively without waiting
 allows separating parameters from the query body
SELECT admin FROM users WHERE login = ’x’ or 1=1; --’
 disallows sending several commands in one query
SELECT * FROM posts WHERE id = $var
JanUrban´ski (Ducksboard) Postgresonthewire PGCon2014 31/51
Sendingqueries Extendedprotocol
Extended query protocol
 query execution is split into separate steps
 each step is confirmed by a separately server message, but they can
be sent consecutively without waiting
 allows separating parameters from the query body
SELECT admin FROM users WHERE login = ’x’ or 1=1; --’
 disallows sending several commands in one query
SELECT * FROM posts WHERE id = 1; delete from posts;
JanUrban´ski (Ducksboard) Postgresonthewire PGCon2014 31/51
Sendingqueries Extendedprotocol
Extended query protocol
 query execution is split into separate steps
 each step is confirmed by a separately server message, but they can
be sent consecutively without waiting
 allows separating parameters from the query body
SELECT admin FROM users WHERE login = $1
 disallows sending several commands in one query
SELECT * FROM posts WHERE id = $1
JanUrban´ski (Ducksboard) Postgresonthewire PGCon2014 31/51
Sendingqueries Extendedprotocol
Parse messages
Parse
'P' int32 len str stmt str query int16 numparams int32 paramoid ...
 first, the client sends a Parse message with the query string
 it can contain placeholders ($1, $2, ...) for parameters
 for each parameter you can specify its type
 disambiguate between select foo(1) and select foo(’x’)
 the statement can be optionally given a name
 unnamed statements live until the next unnamed statement is parsed
 named statements need to be explicitly deallocated
JanUrban´ski (Ducksboard) Postgresonthewire PGCon2014 32/51
Sendingqueries Extendedprotocol
Bind messages
Bind
+
'B' int32 len str portal str stmt
int16 numformats int16 format ... +
int16 numparams int32 paramlen char[paramlen] param ... +
int16 numresults int16 format ...
 after the query is parsed, the clients binds its parameters
 an output portal is created for a previously parsed statement
 an empty string can be used for the portal name
 for each parameter, its format (binary or text) and value are specified
 finally, for each output column, the requested output format is sent
JanUrban´ski (Ducksboard) Postgresonthewire PGCon2014 33/51
Sendingqueries Extendedprotocol
Interlude - Describe messages
Describe
'D' int32 len 'S' or 'P' str name
ParameterDescription
't' int32 len int16 numparams int32 paramoid ...
 clients can ask for a description of a statement or a portal
 statement descriptions are returned as two separate messages:
ParameterDescription and RowDescription
 portal descriptions are just RowDescriptions
 clients can use Describe to make sure they know how to handle data
being returned
JanUrban´ski (Ducksboard) Postgresonthewire PGCon2014 34/51
Sendingqueries Extendedprotocol
Execute messages
Execute
'E' int32 len str portal int32 rowlimit
 once the output portal is created, it can be executed
 the output portal is referred to by name
 can specify the number of rows to return, or 0 for all rows
 a series of DataRow messages follow
 no RowDescription is sent
JanUrban´ski (Ducksboard) Postgresonthewire PGCon2014 35/51
Sendingqueries Extendedprotocol
Execute messages cont.
 after the portal has been run to completion, CommandComplete is
sent
 if the requested number of rows is less than what the portal would
return a PortalSuspended message is sent
 AFAIK, only JDBC actually exposes limits for Execute
 libpq doesn’t even have code to handle PortalSuspended...
JanUrban´ski (Ducksboard) Postgresonthewire PGCon2014 36/51
Sendingqueries Extendedprotocol
Sync messages
Sync
'S' int32 len
 an extended protocol query should end with a Sync
 upon receiving Sync the server closes the transaction if it was implicit
and responds with a ReadyForQuery message
 in case of earlier errors, the server sends an ErrorResponse and then
skips until it sees a Sync
JanUrban´ski (Ducksboard) Postgresonthewire PGCon2014 37/51
Sendingqueries Extendedprotocol
Extended query protocol summary
 queries are parsed at Parse stage
 queries are planned at Bind stage
 queries are executed at Execute stage
 with statement logging, these three steps will be timed and logged
separately
JanUrban´ski (Ducksboard) Postgresonthewire PGCon2014 38/51
Sendingqueries Extendedprotocol
Extended query protocol flow
Client Server
ParseOK
Client Server BindOK
Parse
RowDescription
Bind
DataRow
Describe
DataRow
Execute
DataRow
Sync
CommandComplete
ReadyForQuery
JanUrban´ski (Ducksboard) Postgresonthewire PGCon2014 39/51
Sendingqueries Extendedprotocol
Advanced extended protocol usage
Client Server
Bind
Execute
Client Server Bind
Parse
Execute
Sync
Sync
ParseOK BindOK
CommandComplete
ReadyForQuery
BindOK
CommandComplete
ReadyForQuery
JanUrban´ski (Ducksboard) Postgresonthewire PGCon2014 40/51
Otherfeatures TheCOPYsubprotocol
Outline
1 Protocol basics
2 Sending queries
3 Other features
The COPY subprotocol
Less known FEBE features
Future development
JanUrban´ski (Ducksboard) Postgresonthewire PGCon2014 41/51
Otherfeatures TheCOPYsubprotocol
Entering COPY mode
CopyInResponse
'G' int32 len int8 format int16 numfields int16 format ...
 sending COPY FROM STDIN or COPY TO STDIN puts the connection in
COPY mode
 this can happen both during simple and extended query processing
 CopyInResponse and CopyOutResponse indicate that the backend has
switched to COPY mode
 they specify the overall format (text or binary) and the format for
each column
 currently if the overall format is binary, all columns are binary
JanUrban´ski (Ducksboard) Postgresonthewire PGCon2014 42/51
Otherfeatures TheCOPYsubprotocol
Sending COPY data
CopyData
'd' int32 len data
 CopyData messages are simply binary blobs
 to stop COPY FROM, the client can send a CopyFail message
 when transfer is complete, the client sends CopyDone
 in case of backend errors, an ErrorResponse is sent
 there is no way for the frontend to stop a COPY TO operation, short of
cancelling or disconnecting
JanUrban´ski (Ducksboard) Postgresonthewire PGCon2014 43/51
Otherfeatures TheCOPYsubprotocol
COPY subprotocol flow
Client Server
Query - ’COPY tab FROM STDIN’
CopyInResponse
CopyData
CopyData
CopyData
CopyComplete
CommandComplete
ReadyForQuery
JanUrban´ski (Ducksboard) Postgresonthewire PGCon2014 44/51
Otherfeatures LessknownFEBEfeatures
Outline
1 Protocol basics
2 Sending queries
3 Other features
The COPY subprotocol
Less known FEBE features
Future development
JanUrban´ski (Ducksboard) Postgresonthewire PGCon2014 45/51
Otherfeatures LessknownFEBEfeatures
Asynchronous operation
NotificationResponse
'A' int32 len int32 pid str channel str payload
 some messages can appear at any moment during the connection
 ParameterStatus
 NoticeResponse
 NotificationResponse
 NOTIFY messages are only sent when a transaction is committed,
but you should expect them at any time
 notices can be sent at any moment
JanUrban´ski (Ducksboard) Postgresonthewire PGCon2014 46/51
Otherfeatures LessknownFEBEfeatures
Fast-path interface
FunctionCall
+
'F' int32 len int32 funoid
int16 numformats int16 format ... +
int16 numparams int32 paramlen char[paramlen] param ... int16 resultformat
 a specialised interface for calling functions
 separate protocol message, FunctionCall, similar to Query
 the function is identified by its OID
 arguments format and values are specified similar to Bind
 libpq documentation calls it “somewhat obsolete” :)
 can be substituted by a named Parse followed by Bind/Execute
 still used by libpq for large object functions
JanUrban´ski (Ducksboard) Postgresonthewire PGCon2014 47/51
Otherfeatures LessknownFEBEfeatures
Replication subprotocol
 entered using a special replication parameter in the startup packet
 switches the server to a mode where only the simple query protocol
can be used
 instead of SQL, the server accepts replication commands
 for example, START REPLICATION or BASE BACKUP
 responses are a mix of RowDescription/DataRow and COPY
subprotocol data
JanUrban´ski (Ducksboard) Postgresonthewire PGCon2014 48/51
Otherfeatures Futuredevelopment
Outline
1 Protocol basics
2 Sending queries
3 Other features
The COPY subprotocol
Less known FEBE features
Future development
JanUrban´ski (Ducksboard) Postgresonthewire PGCon2014 49/51
Otherfeatures Futuredevelopment
Protocol version 4.0
There are surprisingly few gripes about protocol 3.0, but some proposals
have been floated on the development list.
 protocol compression
 adding nullable indicator to RowDescription
 multi-stage authentication, allowing falling back to a different
authentication method
 negotiating the protocol version
 in-band query cancellation
 sending per-statement GUC
JanUrban´ski (Ducksboard) Postgresonthewire PGCon2014 50/51
Otherfeatures Questions
Questions?
JanUrban´ski (Ducksboard) Postgresonthewire PGCon2014 51/51