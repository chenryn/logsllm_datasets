User: How to deploy a web application and corresponding database container using Docker Compose?
Assistant: Here are some steps to deploy web application and database container using Docker Compose. 1. Create a project folder First you need to create a project folder, for example: my-web-app, and then create a docker-compose.yml file in this folder. 2. Define a database container Define a database container, such as MySQL container: ``` version: '3.7' services: db: image: mysql environment: MYSQL_ROOT_PASSWORD: mysecretpassword MYSQL_DATABASE: mydatabase volumes: - ./db_data:/var/lib/mysql ports: - "3306:3306" ``` In the above example, we use MySQL as the database container, set the root password and database name of the MySQL database, and place the data volume of the database container in my-web-app/ db_data directory. 3. Define a web application container Next, define a web application container, such as one using Node.js: ``` version: '3.7' services: db: image: mysql environment: MYSQL_ROOT_PASSWORD: mysecretpassword MYSQL_DATABASE: mydatabase volumes: - ./db_data:/var/lib/mysql ports: - "3306:3306" web: build: . ports: - "8080:8080" depends_on: - db environment: DATABASE_URL: mysql://root:mysecretpassword@ db/mydatabase ``` In the above example, we use Node.js to build a web application container, map the port of the application container to port 8080 of the host, and set the connection character of the MySQL database in its environment variable string. 4. Start the application container Finally, in the my-web-app project folder, start the application container and the database container with the following command: ``` docker-compose up -d ``` Now, the web application and database containers It should have been successfully deployed and the web application can be accessed by visiting http://localhost:8080.