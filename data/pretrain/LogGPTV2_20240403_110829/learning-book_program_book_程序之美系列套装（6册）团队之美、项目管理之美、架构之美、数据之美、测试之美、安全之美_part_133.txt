越大，里面的人越多，物体的惯性也就越大。如同项目管理，驾驭
大型机器（汽车、飞机、航空母舰等）的新手都会低估，行进状况
改变时反映到他们正在驾驶的机器的行为中所需的时间。如图14-1
所示，大型车船或项目的轨道，会因为动量或其他介入力量而有显
著改变。多数人都无法正确预期行为的后果。通常，这是因为他们
并不了解所操作的物体的动力。就像学开车的人第一次在雪地里开
车都会打滑一样，因为有太多未说明的力量作用于物体，使它无法
控制。
当那些认为一切都在掌控中的人失去控制时，他们的共同反应就是
惊慌。他们也许不承认（惊慌的人很少承认自已在惊慌），但这是
事实。第一反应，通常是以鲁莽的更正行为来直接回应问题。但因
为没有真正了解所有的影响力，这样的更正行为一般太过强烈（请
736
---
## Page 738
参见图14-2）。等到他们明白自己做了什么时，又会采取另一个更
正行为，而他们还是立刻去做。但是，因为他们使用了相同的逻
辑，使他们一开始就落入这种窘迫的境况，所以会导致产生更多的
问题。
图14-1：相同的行为可能有不同的结果，取决于项目有多大的惯性
图14-2：认为一切都在掌握中的人之所以失望，是因为他们对未知
的力量采取更正行动，导致不可预测的结果（通常会令人发狂）
737
---
## Page 739
事实上，当飞机、汽车或项目变得不稳定时，控制就变得困难而有
危险一—即使是对有专业技能和经验的人也是如此（较小的项目当
然比较敏捷且易于回应，但这些项目也有它们的动量）。不稳定会
让多数行动的结果无法预测，因为有太多可变因素在迅速的变化
着。因此，优秀的项目管理，大多是先走在项目前面一两步，投注
必要的精力，在并始就避并这些境况。
当战斗机飞行员不能领先时，就无法掌握飞机时的情况：飞在飞机
之后。这是说，飞行员无法保持领先于机器所发生的事情之前（至
少）一步，他就成了飞机上各种力量相互作用下的受害者。就像驾
驶高性能的飞机那样，项目也需要管理许多不同的相互作用的力
量。两者都是非线性系统，这意味着改变某个元素时（速度、角
度、进度、目标），可能会有多个影响，或者有更多超过预期的力
量会影响系统，因为经过一些不同因素或人员之后就被放大了。这
个警告就是：即使是针对稳定但高速行进的项目，程序库和团队的
复杂本质也意味着任何管理动作都可能产生不可预期的结果。有
时，在几天甚至几周内都看不见这些结果。当这些延迟的结果出现
时，人们很容易会假设是最近的某些事情导致了这个问题，从而造
成难以有效解决它。
检查健康状态
对于项目经理而言，飞在飞机之前最有效的方法，就是每日的健康
检查。程序员用健康检查这个术语，来保证程序中特定的重要事情
正确（在C程序术语中，想想assert（））。这是个不错的主意，因
为假设是非常危险的事情。在程序中，当某项健康检查失败时，众
人可避免无意义的搜寻那些转移注意力的事项（根本不存在的问
题），同时提出更为根本的问题，为什么不健康的情况会被引入系
统中。
如果你想“飞在飞机之前”，就要不断确保你预期的那些条件仍然正
确。此外，如果你发现某个错了，你会马上知道你的注意力该放在
哪里。
挑战在于还有很多其他可能的健康检查。在目标、进度、技术、士
气、竞争、预算以及政治之间，不可能随时去确认每件事（虽然这
无法阻止偏执的经理去尝试这么做）。拖着团队，每天确认数十个
胡乱的假设，这是致命的错误。你越要团队去确认通常会成立的事
738
---
## Page 740
情，就是越不信任他们，而且也越浪费他们的时间。你要了解项目
的状态，但又不能干扰项目的状态。
这事有3种做法：战术问题、战略问题和对团队进行公开透明的工
作进展评价。我们会在下一章讨论评价方法。目前，我们集中讨论
健康检查的战术和战略问题。
过程很简单：准备一份简短的问题列表，来帮助你飞在飞机之前，
然后例行公事般地问这些问题。每大问一次战未问题，每周问一次
战略问题。你可以单独做，也可以从团队里挑几个特殊的成员和你
一起做。你也可以鼓励团队的个人，特别是那些经验丰富的人，自
已做些类似的高层次的健康检查，使他们的发现和你的能相互关
联。
我的做法是这样的：我每周会花半小时和自己开会（如果我不保护
自己的时间，谁还会呢？）。我会关上门，放些音乐，逐一过目问
题列表。通常这只会花几分钟时间。然后，我会据此重新安排我的
时间或团队的优先级事项。在某些团队中，我会把这种提问的工作
变成团队文化的一部分，而且在并团队会议时，我都会做小规模的
这种提问与回答。
掌握领先的战术问题
要做，那么你和其他人忘了目标也是不可避免的。只要每天都看
一
看，就能让你的注意力和优先级重新回归。对团队而言更重要的
是，如果官方目标和真实目标或团队目标并不相符（例如，由于某
位VP的反复无常），那些目标就不准确了。如果目标不准确，团队
就会陷入冲突。当团队陷入冲突时，症状就会出现。如果你发现明
显的冲突，那就不要等着它们引起症状出现。要有远见，尤其是面
对那些会直接影响目标的问题。
我们今天做的事对目标有贡献吗？看看今大、明天以及本周，你
的程序员要做的工作项目。他们如何对目标做责献，或者如何实现
需求是否依然清晰？如果不是，这条船就并始漂流了。和适合的程
序员一起合作，让每个人重新理解目标以及该工作对实现目标的价
值。然后，调整这3件事之一：目标、工作或者两者皆是。这有时
被称为工作定位，就像车子的轮胎那样，你必须定期检查以确保事
情朝着相同方向前进。
739
---
## Page 741
工作项目不仅是否完成，而且完成的方式也满足需求和使用场
体精神和意图。任何优秀的设计或规格说明书都会定义一些事情，
让工作项目可以满足真实的用户使用场景。然而，可用性、商业需
求、组件整合以及视觉设计之间的微妙关系，通常会在负责15个工
作项目的程序员脑海中遗失。如果有个专职的界面设计师（或其他
专家），他应该积极审查签入的程序以及每日构建版本，以确保工
作项目满足整体需求，而不是线性项目的需求。
掌握领先的战略问题
这些问题通常是领导会议的主题。如果每周或每月都有状态讨论，
这些问题就值得领导阶层关注。但是，即使是单独的PM在负责小
范围工作，这些问题也能用。
·在下个交付日期/里程碑/可递交事项上，达到适当质量水平的目前
概率有多少？估算工作后，事情已有了变动。大家对自已现在所做
的的工作有何感受？问自己，也问团队中的关键人物，成功满足下
2中2号2%0S2%06%001√晋率限黑日√
要诚实，并且要求别人也这么做。对团队要敏感：不要有罪恶感，
或者把它当成是一种挑战，好像你要证明他们的估计不对，或者他
们需要工作得再努力一些。相反地，明确表明你需要目前状况的诚
实回答（了解他们为何信心不足，或者谁该为没有改变他们有实质
怀疑的事实而受责。你要知道并了解这些怀疑）。
提高这个概率需要哪些调整？任何诚实而健全的人，应该很少有
100%的信心能赶上下个交付日。接在这个概率后面的问题，就是如
何让概率来提高。少一些会议？少一些干扰？快一些决策？砍掉一
那些每天在前线工作的人。要把它变成你和团队的高优先级项目，
并积极问这个问题，努力寻找答案。
我们如何小心调整，并且使它独立于其他部分？总是要像外科手
术那样思考。成功解决问题和提高概率的必要的最小量的措施是什
小量的措施可以把事情做好，不要担心去采取大的动作。如果没有
像外科手术那样的选择可用，那就整体考虑。目标需要调整吗？签
入程序的过程怎么样？什么样的系统流程或态度可以调整，来解决
症状和成因？（请参阅下一节“采取安全的行动”。）
740
---
## Page 742
，今天/下周/下月的最大或最可能的风险是什么？如果真的实现，
我们会遇上什么麻烦？只要找出三个或三个以上的危险或可能的风
险，你就能事先采取行动来阻正发生；你要打开雷达，对任何可能
显示这些问题正在发生的警告要非常敏感。即使你每周只花5或10
分钟列出可能的风险，以及你对这些风险的可能回应，就能让自己
有远见，事事先行一步。这种项目保险通常很便宜一—每周只花几
分钟，就能得到很大的保护伞。
事情吗？如果他们是对的，这些会对项目造成影响吗？我们的竞争
对手做了哪些需要我们必须回应的事情？我们的合作伙伴或者依赖
对象是否还在运行轨道上？是否今天又出现什么我无法发现直到明
天才会知道的事情？几个简单的电话或者到走廊里转转，通常就可
以回答这些问题。要注意，不要事无巨细，不要变得偏执或者让他
人感到恐惧。要让这类询问成为常见的普通事。此外，要鼓励和奖
赏那些积极给你提供信息的人（关于自已或其他人的职责）。
但是，无论你多有经验、多有准备或多聪明，总是有些时候你会落
在项目后面。要学会找出有一堆工作要做和落在项目后面之间的差
异一一它们之间并不一样。你会经常发现你有很多事情要做，但是
感觉时间却不够。然而，如果你用顺序列表把工作分出优先级（请
参阅第13章），你就会发现，你总有时间可以去做那些事。但是，
当你落在项目之后时，你会觉得无法动弹、失望甚至无动于衷。你
会相信，无论你在办公室待多晚，你都无法让项目重新得以控制。
最后3件重要的事情：
1.当你落后时，你要知道你已经落后了。请记住，进度是概率。你
有多确定本周必须完成的事可以完成？80%？50%？如果机会是五
五并（或者更糟），那么你已经落后了。你能犯错的边际范围很
小，如果你没有准备好，你就会犯错。
2.当你看到别人飞在飞机之后时，要提供你的支持。不要否认问
题：告诉他们你已经发现了问题，并且试着协助解决。避免让任何
人落入你的影响力的压道或恐慌之中。保持冷静，并帮助他人也保
持冷静，一起合作重新飞到飞机之前。
741
---
## Page 743
3.不要犹豫去争取同事或上级的帮助。这可能是唯一恢复并重新飞
在前面的方法。利用他们的帮助，把你的时间和团队的时间排出优
先级，让他们帮你分担一些工作，不然他们只会听你发牢骚。如果
有人伸出援手，就抓住它；如果没人伸出援手，就主动请人帮忙。
关于如何处理危机状况的问题，可参考第11章。
采取安全的行动
在中盘时段，多数PM的工作都是规划或设计阶段完成事项的小而
紧凑的版本。如果漏掉了需求，并且需要整合进来，则定义及写下
这个需求的流程，会花费两倍于需求流程所花的时间（了解需求、
权衡代价、定义并排出优先级）。或者如果在规格说明书中漏掉某
事，则解决该问题的流程所花费的时间，是撰写规格说明书流程所
花时间的两倍或三倍。在中盘阶段很少采用新的技术。这通常只是
前期所使用技术的学习和加快的版本。问题在于快速工作会带来风
险。在中盘阶段采取安全的行动，只是代表行动的结果不会让项目
的完整性在无意中受到破坏。
安全的行动很困难，因为中盘阶段充满枪林弹雨。事情已经在进行
中，很多决策也已经做了，任何新的行动都会遇上冲突。例如，如
果房子结构搭建到一半时，你决定修改计划，把标准A字型结构改
成拱形结构，你就要丢掉很多建材和付出的努力，可能还需要在更
大的压力下做好新工作。需要通过经验才能学会如何修改需求、删
减功能或者调整设计，而这些都会同时影响程序库和团队。