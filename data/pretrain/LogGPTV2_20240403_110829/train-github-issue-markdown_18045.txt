Help doc of `LDA.transform` says:
    Returns
    -------
    X_new : array, shape = [n_samples, n_components]
However:
    X = np.array([[-1, -1, -1], [-2, -1, -1], [-3, -2, -2], [1, 1, 3], [2, 1, 4], [3, 2, 1]])
    y = np.array([1, 1, 1, 2, 2, 2])
    lda = LDA(n_components=3).fit(X, y)
    lda.transform(X).shape
produces  
`(6, 2)` while I expect it to be `(6, 3)` as `n_components == 3`
Looking at the code of transform:  
`return np.dot(X, self.coef_[:n_comp].T)`
Where `self.coef_` is computed as in `.fit()`:  
`self.coef_ = np.dot(self.means_ - self.xbar_, self.scalings_)`
which produces a 2x1 matrix (or whatever the number of means is).
Not sure what the correct thing would be but it seems that `LDA.coef_` should
have length `n_compoments`, no?