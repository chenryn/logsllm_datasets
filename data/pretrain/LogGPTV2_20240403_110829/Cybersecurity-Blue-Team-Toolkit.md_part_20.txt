:::
::: {.section .feature3}
### [LAB 9.1](#c09.xhtml#R_c09-fea-0001){#c09.xhtml#c09-fea-0001 role="doc-backlink"}: EXAMINING WINDOWS SECURITY LOGS {#c09.xhtml#head-2-63}
::: section
[]{#c09.xhtml#c09-sec-0003}
1.  [On a Windows system, use the Windows+R key combination to open the
    Run menu.]{#c09.xhtml#c09-li-0009}
2.  [Type **eventvwr** in the Open field and press
    Enter.]{#c09.xhtml#c09-li-0010}
3.  [There are three panes on the Event Viewer screen. The pane to the
    left is the hierarchy of log files. The pane to the right shows the
    actions you can take. For a granular view of the logs, you use the
    large center pane. Open each level of logs by clicking the arrow to
    the left of the folder or file in the left
    pane.]{#c09.xhtml#c09-li-0011}
4.  [Under Windows Logs, click Security. In the center of the page, a
    list of all security events that have been recorded on this machine
    is displayed. As you see in [Figure
    9.2](#c09.xhtml#c09-fig-0002){#c09.xhtml#R_c09-fig-0002}, these are
    audit successes recorded on this host. To the left, you see actions
    you can take on these logs, including filtering them for critical
    events or warnings as well as examining the log
    properties.]{#c09.xhtml#c09-li-0012}
    ![[**[Figure 9.2](#c09.xhtml#R_c09-fig-0002){#c09.xhtml#c09-fig-0002
    role="doc-backlink"}:**]{.figureLabel} Security logs on a Windows
    machine](Images/c09f002.jpg){.center width="751" height="377"}
5.  [[]{#c09.xhtml#Page_112 .pagebreak title="112"
    role="doc-pagebreak"}When you\'re familiar with the security logs,
    open the Application and System folders. These logs will help you
    understand what applications are running on your machine, what they
    are doing, and whether they are having difficulties. The System
    folder is an excellent place to filter critical events such as
    configuration changes or power loss, as displayed in [Figure
    9.3](#c09.xhtml#c09-fig-0003){#c09.xhtml#R_c09-fig-0003}.]{#c09.xhtml#c09-li-0013}
    ![[**[Figure 9.3](#c09.xhtml#R_c09-fig-0003){#c09.xhtml#c09-fig-0003
    role="doc-backlink"}:**]{.figureLabel} Critical warning on a Windows
    machine](Images/c09f003.jpg){.center width="751" height="557"}
:::
::: {.bottom .hr}
------------------------------------------------------------------------
:::
:::
```{=html}
```
:::
::: section
[]{#c09.xhtml#c09-sec-0004}
## Windows PowerShell {#c09.xhtml#head-2-64}
A *shell* is typically a user interface that accesses the tools behind
the GUI of an operating system. It uses a command‐line interface (CLI)
rather than moving and clicking a mouse. It\'s called a shell because it
is the layer outside the operating system\'s kernel. To use a CLI
successfully, you have to be familiar with the proper syntax and
commands.
Windows PowerShell is a proprietary Windows command‐line shell designed
specifically for administrators. My favorite feature of a command shell
is the ability to speed up the processes by using command‐line
completion, a lifesaver for those of us who are horrible typists. In the
command shell, type a few characters of a command and press the Tab key
a couple of times until the item you []{#c09.xhtml#Page_113 .pagebreak
title="113" role="doc-pagebreak"}want appears. Another feature of
PowerShell is the ability to save sequences of commands that you might
want to reuse in the future. This feature allows you to press the up
arrow to cycle through previous commands.
PowerShell introduced the *cmdlet* (pronounced "command‐let"). It is a
simple, single‐function command‐line tool built into the shell. A cmdlet
is a specific order you give the OS to perform an action like "run this
program." There are more than 200 cmdlets that are written as a
verb‐noun pair. For example, you can type the command `Get‐Help`, and
this will give you a description of a cmdlet.
Searching logs using PowerShell has an advantage over Windows Event
Viewer. You can check for events on remote computers much quicker, which
is extremely valuable if you ever do server management. PowerShell will
help you generate reports, and since we are all so busy, any automation
can help. In [Lab
9.2](#c09.xhtml#c09-fea-0002){#c09.xhtml#R_c09-fea-0002}, you\'ll use
Windows PowerShell to review logs.
```{=html}
```
::: {.top .hr}
------------------------------------------------------------------------
:::
::: {.section .feature3}
### [LAB 9.2](#c09.xhtml#R_c09-fea-0002){#c09.xhtml#c09-fea-0002 role="doc-backlink"}: USING WINDOWS POWERSHELL TO REVIEW LOGS {#c09.xhtml#head-2-65}
::: section
[]{#c09.xhtml#c09-sec-0005}
1.  [On a Windows system, use the Windows+R key combination to open the
    Run menu. Type in `powershell` and press
    Enter.]{#c09.xhtml#c09-li-0014}
2.  [To get a list of event logs on the local machine, as shown in
    [Figure 9.4](#c09.xhtml#c09-fig-0004){#c09.xhtml#R_c09-fig-0004},
    type the following command:]{#c09.xhtml#c09-li-0015}
    ![[**[Figure 9.4](#c09.xhtml#R_c09-fig-0004){#c09.xhtml#c09-fig-0004
    role="doc-backlink"}:**]{.figureLabel} Getting a list in PowerShell
    of available locations of logs](Images/c09f004.jpg){.center
    width="478" height="237"}
    ``` {#c09.xhtml#c09-code-0001}
    Get-EventLog -List
    ```
3.  [To get the system log in its entirety on the local computer, type
    in the following command:]{#c09.xhtml#c09-li-0016}
    ``` {#c09.xhtml#c09-code-0002}
    Get-EventLog -LogName System
    ```
4.  [The `Get‐EventLog` command generates a massive list. To narrow down
    the view, you can display only the last 20 entries in the system
    log, as shown in [Figure
    9.5](#c09.xhtml#c09-fig-0005){#c09.xhtml#R_c09-fig-0005}, by
    pressing the up arrow and adding the following
    syntax:]{#c09.xhtml#c09-li-0017}
    ![[**[Figure 9.5](#c09.xhtml#R_c09-fig-0005){#c09.xhtml#c09-fig-0005
    role="doc-backlink"}:**]{.figureLabel} Retrieving the index, time,
    type, source, and message of the last 20 system
    logs](Images/c09f005.jpg){.center width="751" height="176"}
    ``` {#c09.xhtml#c09-code-0003}
    Get-EventLog -LogName System ‐Newest 20
    ```
5.  [You can specify system log entries related to disk source, as shown
    in [Figure 9.6](#c09.xhtml#c09-fig-0006){#c09.xhtml#R_c09-fig-0006},
    by entering the following command:]{#c09.xhtml#c09-li-0018}
    ![[**[Figure 9.6](#c09.xhtml#R_c09-fig-0006){#c09.xhtml#c09-fig-0006
    role="doc-backlink"}:**]{.figureLabel} Disk errors and warnings in
    system logs](Images/c09f006.jpg){.center width="698" height="81"}
    ``` {#c09.xhtml#c09-code-0004}
    Get-EventLog -LogName System  -Source Disk
    ```
:::
::: {.bottom .hr}
------------------------------------------------------------------------
:::
:::
```{=html}
```
[]{#c09.xhtml#Page_114 .pagebreak title="114"
role="doc-pagebreak"}Windows enables most log files by default, although
you might need to define what level of logging you need. Turning on
verbose logging, the most detail possible should be done only during a
specific event or while trying to track an active, known security
incident. If you aren\'t careful, the volume of logs can take up many
terabytes of disk space. Systems have been known to crash because
well‐meaning system administrators enabled verbose logging for all
systems and then forgot to disable it when troubleshooting was
completed. Be sure to put a sticky note on your monitor to remind
yourself to revert logging levels after you\'re done troubleshooting.
Great logging is about pulling out the necessary critical events and
alerts from an otherwise overwhelming amount of information. The problem
for most admins is not about getting enough information, but getting
useful information out of an overwhelming deluge of data.
To enable a security audit policy to capture load failures in the audit
logs, open an elevated Command Prompt window by right‐clicking the
`Cmd.exe` shortcut and selecting Run As Administrator. You could also
press Windows+R to open the Run box. Type `cmd` and then press
Ctrl+Shift+Enter to run the command as an administrator. In the elevated
Command Prompt window, run the following command:
``` {#c09.xhtml#c09-code-0005}
Auditpol /set /Category:System /failure:enable
```
As you see in [Figure
9.7](#c09.xhtml#c09-fig-0007){#c09.xhtml#R_c09-fig-0007}, you should get
a success message that you are now logging all security audit logs. You
will have to restart the computer for the changes to take effect.
![[**[Figure 9.7](#c09.xhtml#R_c09-fig-0007){#c09.xhtml#c09-fig-0007
role="doc-backlink"}:**]{.figureLabel} Elevated command prompt turning
on security audit logs](Images/c09f007.jpg){.center width="497"
height="126"}
[]{#c09.xhtml#Page_115 .pagebreak title="115" role="doc-pagebreak"}After
you have collected the logs you need and so you do not fill up all the
storage on your asset, do not forget to run the following command:
``` {#c09.xhtml#c09-code-0006}
Auditpol /set /Category:System /failure:disable
```
Searching logs using PowerShell has an advantage over Windows Event
Viewer. You can check for events on remote computers much quicker, which
is extremely valuable if you ever do server management. There is no need
to physically connect to a computer to collect the logs. By using the
PowerShell parameter `‐ComputerName`, you can connect and pass a command
to the remote computer you choose and collect the information you want.
If you want to pull all system logs off the computer named PC1, you can
by using the following command:
``` {#c09.xhtml#c09-code-0007}
Get-EventLog -ComputerName PC1 -LogName System
```
One of the integral parts of understanding these logs and their access
to remote regions of your network is their IP address. The Internet has
run out of IPv4 addresses, and the landscape of the Internet is quickly
evolving. IPv4 is the technology that allows us to connect our devices
to the web with a unique, numerical IP address consisting of 4 octets
separated by a decimal with no number over 255. It looks like
192.168.1.0. Sending data from one computer to another and generating
logs while doing so requires an IP address on both devices.
But we are in transition. With so many applications and with the
evolution of the Internet of Things (IoT), we are starting to see more
and more IPv6 addresses in our logging. Google collects statistics
surrounding IPv6 adoption globally, and the latest numbers indicate that
more than 25 percent of Google users access their resources with IPv6.
For home users and small businesses, this may take another few years to
become an issue, but nearly all modern devices support this new
technology.
What you will start seeing in your logs will be a logical network IPv6
address of 128 bits as opposed to the 32 bits in an IPv4 address. IPv6
is written in hexadecimal as opposed to dotted decimal, and the numbers
are grouped together in eight groups of four instead of four groups of
three. There are some shortening techniques. For example, if the IPv6
address has a grouping of 0000, it will display as `::`. Just be aware,
if you ever start to see your source address of your logs displaying 32
hexadecimal characters instead of your usual 12, something on your
network is using IPv6.[]{#c09.xhtml#Page_116 .pagebreak title="116"
role="doc-pagebreak"}
:::
::: section
[]{#c09.xhtml#c09-sec-0006}
## BareTail {#c09.xhtml#head-2-66}
Historically, system administrators would drop down into a shell to run
`tail ‐f` to follow logs in real time. Developed by Bare Metal Software,
BareTail is an amazing, free, tiny tool that packs quite an impact. You
can monitor your logs in real time in a GUI that allows you to navigate
between multiple tabs to organize your streams of logs, highlighting and
filtering those parts that are important. You can leave it running, and
it refreshes constantly.
When you decide you need a tool to watch the flow of your logs, go to
`www.baremetalsoft.com/baretail` to grab the tool. It downloads as
`baretail.exe`, but it does not "install" as a permanent file. You can
move this file and run it from any location with extremely flexible
configuration options. I usually keep it on a USB.
Once you open BareTail, the first option under the main menu is Open.
Click the Open File option to open a dialog box to navigate to the
program logs you want to monitor. In [Figure
9.8](#c09.xhtml#c09-fig-0008){#c09.xhtml#R_c09-fig-0008}, you see the
path to Nexpose to troubleshoot issues or verify confirmed
vulnerabilities on your system.
![[**[Figure 9.8](#c09.xhtml#R_c09-fig-0008){#c09.xhtml#c09-fig-0008
role="doc-backlink"}:**]{.figureLabel} Opening a file location to view
the log](Images/c09f008.jpg){.center width="751" height="543"}
[]{#c09.xhtml#Page_117 .pagebreak title="117" role="doc-pagebreak"}To
look for specific words or *strings*, open the Highlighting menu next to
the Open menu. You have the ability to filter, change the foreground
color and/or background color, and type into the string location the
keywords you are most interested in. In [Figure
9.9](#c09.xhtml#c09-fig-0009){#c09.xhtml#R_c09-fig-0009}, you see that
in `nse.log`, I have targeted the word *vulnerable*, and I am ignoring
if it is displayed in uppercase or lowercase. In this log, if you scroll
down some, you may see Vulnerable or Not Vulnerable when it examines a
possible vulnerability on an asset. It will find the word you are
searching for inside other words if necessary. When you click OK, the
highlighted filters you create will stay activated in the log for as
long as you have it open.
![[**[Figure 9.9](#c09.xhtml#R_c09-fig-0009){#c09.xhtml#c09-fig-0009
role="doc-backlink"}:**]{.figureLabel} Applying a filter to `nse.log` to
find "vulnerable" assets](Images/c09f009.jpg){.center width="751"
height="363"}
:::
::: section
[]{#c09.xhtml#c09-sec-0007}