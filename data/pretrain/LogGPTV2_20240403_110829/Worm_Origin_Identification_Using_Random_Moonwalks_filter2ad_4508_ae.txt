50
d
e
v
o
v
n
l
i
s
t
s
o
h
f
o
r
e
b
m
u
N
20
40
Number of top frequency causal edges
80
0
0
100
200
300
400
Number of top frequency edges returned (Z)
500
(a)
(b)
Figure 13: (a) Fraction of initial causal edges among the ac-
tual returned causal edges. (b) The number of source hosts
involved as suspect top level hosts vs. number of top fre-
quency edges ((cid:3)) returned.
We proceed to examine whether the detected causal
edges correspond to the initial causal edges. We focus on
the initial 80 causal ﬂows (10% of the total causal ﬂows) in
the attack and plot the fraction of such ﬂows among the ac-
tual returned causal edges in Figure 13 (a). As expected, the
majority of the causal ﬂows actually detected correspond to
the initial ones that can be traced back to the attack origin,
conﬁrming the results in our analytical study.
Given the selected top frequency ﬂows, we examine how
many hosts are involved with initiating these ﬂows. Since
the identiﬁed ﬂows are likely to be top level causal ﬂows,
these hosts are good candidates as hosts on the top level
causal tree that can be chosen for further investigation. We
assume that the source host of every selected ﬂow is poten-
tially the worm origin, and plot the total number of such
hosts as we vary the number of selected ﬂows (cid:0) in Fig-
ure 13 (b). These numbers thus give an upper bound on the
amount of further effort required for worm origin identiﬁca-
tion (without explicitly exploiting the structure of the graph
composed of the selected ﬂows). Although the number of
hosts grows linearly as (cid:0) increases, the slope is less than
one, suggesting the existence of a small number of sources
contributing to a large number of ﬂows. For example, after
(cid:0)(cid:1)(cid:0) walks, if we plan to use the top 50 ﬂows for reconstruct-
ing the top level causal tree, we will have in total only 30
source hosts out of the (cid:2)(cid:1)(cid:3)(cid:1) hosts even with a slowly prop-
agating worm that generates one scan per 50 seconds. In
the next section, we show how the structure of the graph
composed of these returned high frequency ﬂows can addi-
tionally help to identify the worm origin.
7.3 Reconstructing the Top Level Causal Tree
Once we obtain the worm origin suspect set and the (cid:0) se-
lected ﬂows, a number of methods could be used to pinpoint
the exact attack source. Potential methods include corre-
lating the contents or sizes of the selected ﬂows, or using
additional out-of-band information regarding the set of in-
fected hosts. Alternately one can exploit the structure of the
graph composed of the (cid:0) ﬂows. We simply take the 60 top-
frequency ﬂows selected from Trace-50 after (cid:0)(cid:1)(cid:0) walks and
construct a graph of these ﬂows (Figure 14).
The artiﬁcially introduced worm in Trace-50 starts at
host 8033, and each infected host sends only one attack ﬂow
every 50 seconds. Among the top 60 ﬂows found by random
moonwalks and shown in Figure 14, there are 35 causal
ﬂows and 17 ﬂows that carry attack trafﬁc but are not the
ﬂows that actually caused their destinations to become in-
fected. The random moonwalks identify host 8033 as the
actual worm origin and show the large tree branching struc-
ture below it. We also observe quite a few ﬂows with des-
tination host 281. It turned out that in the background trace
we collected, host 281 was infected by some variant of the
Blaster worm [3], and it generates scans with a peak rate
of 72 ﬂows per second. Manual investigation into the real
trace revealed no successful infection events associated with
such scan trafﬁc. As a result, there is no causal tree actually
induced by host 281. However, due to the high scanning
rate, the few ﬂows sent to host 281 are frequently selected
by random moonwalks that trace back to host 281, and this
explains why these normal ﬂows to host 281 appear. Even
though there is unrelated aggressive scanning taking place,
the random moonwalks still cull out the top levels of the
causal tree automatically. Such results show the effective-
ness of random moonwalks at extracting the tree structure
of slow worm propagation patterns (in our example, one
scan every 50 seconds) to identify the worm source, even
in the presence of aggressive scanners and other patholog-
ical background trafﬁc events. We are currently pursuing
reﬁnement techniques to further improve the accuracy of
identifying the worm origin(s) and to reconstruct the higher
levels of the causal tree.
7.4 Parameter Selection
Given a network trace that may contain worm trafﬁc, we
need to select the best parameter values without prior
knowledge of worm propagating characteristics. This sec-
tion studies the performance impact of the input parameters
(cid:1) (maximum path length) and  (sampling window size).
We use Trace-20 and Trace-50 as representative traces for
the following study.
We ﬁrst ﬁx  to 800 seconds for both traces (800 sec-
onds may not be the optimal value for each trace) and vary
the maximum path length (cid:1) in terms of hop counts. Fig-
ure 15 (a) shows the detection accuracy of the top 100 fre-
quency edges (i.e., (cid:0) (cid:5) (cid:0)(cid:1)(cid:1)). We observe that the detection
accuracy for both attack edges and causal edges increases
with longer path length. As discussed earlier in our analy-
sis in Section 6.4, longer paths tend to walk across a larger
portion of the attack tree. As we further increase the path
length, the detection accuracy saturates as the path length
of each walk is bounded by the start of the trace. A longer
maximum path length improves detection accuracy, but also
implies greater sampling overhead since more edges will be
involved in each walk.
Next, we vary the sampling window size  with the
maximum path length (cid:1) set equal to (cid:0) so each walk can
continue as far as possible. Figure 15 (b) shows the impact
of  on the detection accuracy of the 100 top frequency
edges. In both traces, when we increase , the detection
accuracy of the causal edges ﬁrst increases and then de-
creases. The detection accuracy of attack edges, however,
is highest for smaller ’s and becomes lower with a larger
. We also observe that with the slowly propagating worm
in Trace-50, we need a larger  to achieve the best detec-
tion accuracy compared with the faster propagating worm
in Trace-20.
To understand the reason, we show in Figure 15 (c) the
variation of the actual path lengths (in terms of hop-count)
with . When  is small, walks terminate at shorter path
lengths, as a walk is more likely to reach a host that received
no ﬂows within the previous  seconds. While shorter
walks cannot reach the top levels of the causal tree, they
Proceedings of the 2005 IEEE Symposium on Security and Privacy (S&P’05) 
1081-6011/05 $ 20.00 IEEE
2449
20:16:18
2935
8033
20:33:18
20:51:40
20:41:40
21:22:31
2550
7118
21:05:50
20:50:01
21:00:00
21:05:01
20:44:11
2941
1263
8005
7614
4807
7451
21:20:00
21:21:40
21:07:31
20:56:40
20:45:50
3440
7504
3348
6332
21:28:20
20:55:50
21:12:30
20:59:10
20:51:40
20:55:51
5902
4166
6592
2172
3467
6154
21:19:11
20:59:11
21:07:30
543
1170
7052
21:03:20
21:08:20
21:10:01
3546
4915
5860
4107
21:15:51
21:15:00
21:10:00
21:35:50
3230
1980
2465
21:19:10
21:22:31
1119
21:51:41
20:56:41
2307
21:09:11
3835
21:10:50
1291
21:19:10
4008
2058
7671
7082
4040
3138
3218
7770
4599
1312
21:21:41
21:42:30
21:58:20
22:18:20
21:21:40
21:50:00
21:50:01
21:41:41
Causal edge
Non−causal attack edge
Normal edge
6973
20:25:53
21:10:00
5143
2184
5870
75
5884
7030
3327
2005
4323
1319
7558
7874
293
21:34:46
21:34:46
20:23:55
20:24:12
20:24:05
20:43:54
21:48:21
21:25:01
21:37:31
21:51:41
22:13:20
22:13:21
22:32:31
281
Figure 14: Graph of the 60 top frequency ﬂows returned by the random moonwalk algorithm when run on Trace-50. Note the
graph is neither the host contact graph, nor the causal tree. Hosts are represented by circles annotated with the host ID. Flows
are represented as directed arrows between hosts, and are annotated with timestamps. Solid arrows denote causal edges,
dashed arrows denote non-causal attack edges, and dotted edges correspond to normal trafﬁc ﬂows.
are more likely to stumble across attack edges at lower lev-
els, resulting in high detection accuracy for attack edges but
low accuracy for causal edges. Increasing  gives a ran-
dom moonwalk a greater chance to traverse top level edges,
in particular the causal ones, but these long paths also in-
volve more normal ﬂows since they can walk backward to
before the start of the attack, reducing the number of at-
tack edges involved. Thus the detection accuracy of causal
edges increases while that of attack edges decreases. Fi-
nally, further increasing  has a negative impact on the
actual lengths of walks as each walk tend to be shorter by
jumping across a larger portion of the trace every step. The
walks also involve more normal trafﬁc, since attack ﬂows
are generally clustered in time and a large  can skip over
large portions of the attack. As a result, we observe low
detection accuracy for both types of edges when  is too
large.
For both Trace-20 and Trace-50, we achieve the best de-
tection accuracy for causal edges when actual path lengths
are maximally long. For worms that generate ﬂows with a
slower rate, a larger  maximizes the actual path lengths
and achieves better performance.
In summary, given a trace with unknown worm proper-
ties, the best sampling performance is obtained by choosing
the  that gives the longest actual path lengths, in terms
of number of hops that the moonwalks traverse. For all our
experiments, we used the above guideline to choose an op-
timal  for each trace (see Figure 10). An adaptive version
of random moonwalk sampling could launch walks with
different values of  and choose one that maximizes the
observed path lengths.
7.5 Performance vs. Worm Scanning Rate
In this experiment we compare the random moonwalk al-
gorithm with other common methods for identifying poten-
tially anomalous behavior, while varying the rate at which
infected hosts scan new victims. Again, we use the detec-
tion accuracy of both causal and attack edges as our per-
formance metrics, and we compare the following ﬁve tech-
niques:
Proceedings of the 2005 IEEE Symposium on Security and Privacy (S&P’05) 
1081-6011/05 $ 20.00 IEEE
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
4
y
c
a
r