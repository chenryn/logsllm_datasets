to the BLE device, it won’t have any control over what
follows later.
5.2 High-Level Overview
BLE-Guardian is a system the user can use out of the
box; it only requires installing a hardware component
(an external Bluetooth radio) to the gateway and running
an app on the gateway to control and interface with the
Bluetooth radio. Conceptually, BLE-Guardian consists
of device hiding and access control modules. The device
hiding module ensures that the BLE device is invisible to
scanners in the area, while the access control module en-
sures that only authorized clients are allowed to discover,
scan, and connect to the BLE device.
Fig.
3
the
shows
operation
high-level
of
BLE-Guardian from the moment a user designates
a BLE device to be protected all the way to enabling
authorized client connection to the protected device.
The high-level operation of BLE-Guardian takes the
following sequence:
1. The user installs the hardware component along
with the accompanying app on the gateway.
2. The user runs the app, which scans for BLE devices
nearby. The user can then choose a device to hide.
3. The device hiding module of BLE-Guardian starts
by learning the advertisement pattern of the target
BLE device along with that of the other devices in
USENIX Association  
25th USENIX Security Symposium  1211
7
BLE-Guardian 
running
Owner chooses 
BLE device 
to be hidden
Device 
Hiding 
Module
User Alert
New client
appears
Access
denied
Authenticated
client appears
Attacker
 detected
Access Control Module
Client 
Authentication
Access
granted
Whitelist 
Client
Connection 
Enabling
Figure 3: The modules of BLE-Guardian and their un-
derlying interactions.
the area. The device hiding module then applies re-
active jamming to hide the device.
4. When a new client enters the area and wants to dis-
cover the user’s devices, it communicates with the
access control module so that the user can either
grant or reject authorization.
5. If the user authorizes the client, the access control
module advertises privately on behalf of the BLE
device to let the authorized client scan and connect
to it.
6. BLE-Guardian monitors if other unauthorized en-
tities are attempting to connect to the BLE device;
in such a case, it blocks the connection and alerts
the user.
5.3 Device Hiding
The hiding module is responsible for rendering the
BLE device invisible to other scanning devices. The
hiding module jams the device’s advertisement ses-
sion to achieve this invisibility.
it
three types of advertisements, ADV IND,
targets
ADV NONCONN IND, and ADV SCAN IND of Ta-
ble 1, which are periodic and leak more information
about the user as we indicated earlier.
In particular,
Hiding the BLE device is, however, challenging for
two reasons. The hiding module must jam the BLE de-
vice precisely at the moment it is advertising. Also, it
must not disrupt the operation of other devices advertis-
ing in the same area.
5.3.1 Learning
The hiding module ﬁrst learns the target BLE device’s
advertising pattern before jamming to hide its presence.
The device’s advertisement pattern comprises the adver-
tising interval, advertising channel sequence, and the
time to listen on the individual channels. Fortunately, the
39 short
37,38,39
39 long
Keep all 
sequences with 37 
followed by 38
38 short
Keep all 
sequences 
with 37
37 long
Eliminate all 
sequences 
with 37
38 long
39 short
39
38 long
Eliminate all 
sequences with 38
39 short
39 long
38,39
39 long
39,37,38
37,39,38
38,39,37
38,37,39
39,38,37
38,37
39,37
39,37
37 short
37,38
37 short
39 long
37 short
37
39,38
38
Figure 4:
The learning algorithm followed by
BLE-Guardian. The blue boxes refer to monitoring each
channel either for a short period of time (less than 10ms)
or for a longer period of 10.24 seconds. Depending
on whether an advertisement is detected on the channel
some sequences are eliminated till a sequence is decided
on (gray boxes).
latter two parameters are deterministic and can be ob-
served directly, which is not the case for the advertising
interval. The BLE speciﬁcation leaves it to the device
to determine the advertising pattern, so that there are 15
possible permutations of the channel sequence.
As shown in Fig. 4, BLE-Guardian follows a pro-
cess of elimination to identify the advertising sequence
of the BLE device using a single antenna. In the worst
case, it will take three advertising intervals to learn the
entire advertising sequence of a BLE-equipped device.
This corresponds to the longest path of Fig. 4, where
BLE-Guardian monitors each channel for the maximum
advertising interval of 10.24 seconds. At the same time,
it would have identiﬁed the time the BLE device spends
listening on each channel before switching to the next
channel.
While observing the advertising sequence of the BLE
device, the hiding module keeps track of the interval
separating the consecutive advertisements sessions. The
hiding module observes a set of inter-advertisement in-
tervals, ti = adv + p, where adv is the actual adver-
tisement interval as set by the device and p is a ran-
dom variable representing the random delay such that
p ∈ uni f (0,10ms). Also, BLE-Guardian will perform
the same process for all advertising devices in the same
area at the same time to learn their advertising parame-
ters as well. Learning other devices’ advertising at the
same time will be useful as evident below.
1212  25th USENIX Security Symposium 
USENIX Association
8
5.3.2 Actuation
After identifying the advertising pattern, the hiding mod-
ule needs to just detect the start of the advertisement ses-
sion. Then, it jams the advertising channels according to
their advertisement sequence. There is a caveat, though;
the hiding module needs to detect the advertisement be-
fore it can be decoded. Otherwise, the rest of the jam-
ming will not be effective.
From monitoring earlier advertisements, the hiding
module obtains a set of ti’s of different devices’ adver-
tisements, including the BLE device to be hidden. The
advertisement interval will be adv = ti − p for each ob-
served inter-advertisement interval. Each observed ad-
vertisement will be used to improve the estimation of
the advertisement interval. For N observed intervals, we
have:
N
∑
i=1
1
N
N
∑
i=1
p.
N
∑
i=1
(1)
1
N
ti −
adv =
Let P = 1
(ti − p) =
1
N
N ∑N
i=1 p, the random variable P is drawn from
N p ∗ 1
the distribution 1
N p. Since the single
random delays p are i.i.d., the mean of P will be equal
to 5 (mean of the original distribution of p) and the stan-
dard deviation of(cid:31)∑N
. The hiding module
N p ∗ 1
N p . . . 1
estimates adv as:
i=1 σp =
5
N√(3)
adv(cid:28) = E(adv) =
1
N
N
∑
i=1
ti − 5.
(2)
The standard deviation of P will get lower as N in-
creases; it deﬁnes the error in the estimate of adv as
deﬁned by Eq. (1). Given previous N observed adver-
tisements from the BLE device, the hiding module can
predict the next advertisement to happen at advnext ∈
[advlow, advhigh] such that:
advlow = TN + adv(cid:28) − e
advhigh = TN + adv(cid:28) + e + 10,
(3)
(4)
where TN is the time of the last advertisement and e
is the 90th percentile value of P (symmetric around
the mean) which approaches 0 as N increases (so that
advhigh − advlow approaches 10ms).
Starting from the last observed TN of the target
BLE device, the advertisement hiding module computes
advlow and advhigh. Also,
it enumerates the list of
other devices expected to advertise within the interval
[advlow, advhigh].
The device hiding module always listens on the ﬁrst
channel of the advertising sequence of the BLE device
to be hidden. During the interval [advlow, advhigh],
Device Advertisement
Monitoring Interval
Device Advertisement
0
-20
-40
-60
-80
-100
)
m
B
d
(
I
S
S
R
20
0
-20
-40
-60
-80
-100
)
m
B
d
(
I
S
S
R
0
5
10
Time (sec)
1.16
1.18
Time (sec)
1.2
(a) Over 10 seconds.
(b) Single adv. interval.
Figure 5: RSSI at channel 37 when a device is advertis-
ing at a distance of 1m at the interval of 960ms.
the device hiding module will sample the RSSI of the
channel very frequently (every 25µs). When the re-
ceived RSSI is −90dBm or higher (the peaks of Fig. 5a),
BLE-Guardian determines that there is a transmission
currently starting to take place. The device hiding mod-
ule moves immediately to jam the channel on which it is
listening. Since the transmission of a typical advertise-
ment message takes 380µs to ﬁnish [16], jamming the
channel will prevent the message from being decoded by
other receivers.
At this point, two situations might arise; (1) the target
BLE device is the only device expected to be advertising
at this time instant, or (2) some other device is expected
to be advertising in the same interval. In the ﬁrst situ-
ation, the target BLE device is most probably responsi-
ble for this transmission as part of its advertisement ses-
sion. The device hiding module repeats the same process
(sample RSSI and jam) over the rest of the channels to
conﬁrm that transmissions follow the device’s advertis-
ing pattern. Fig. 5b shows an example interval where
there is only one device advertising.
In the second situation, the device hiding module can’t
readily ascertain whether the transmission belongs to the
target BLE device or not. This will take place when the
observed transmission sequence matches the advertising
sequence of the target BLE device and some other de-
vice that is expected to advertise at the same interval. To
resolve this uncertainty, immediately after jamming the
advertising message (400µs after commencing jamming
on the channel), the device hiding module lifts jamming
and sends scan requests for devices other than the tar-
get device. The device hiding module then listens on the
channel to observe if a scan response is received. De-
spite its advertisement being jammed, any device will
still be listening on and will respond to scan requests.
Depending on whether a scan response is received or not,
BLE-Guardian can associate the transmission with the
correct device, be it the target BLE device or some other
USENIX Association  
25th USENIX Security Symposium  1213
9
device.
The device hiding module then adjusts the next mon-
itoring interval according to the observed transmissions
in the current intervals as follows:
advlow = min(TN) +adv (cid:31) − e
advhigh = max(tN) +adv (cid:31) + e + 10,
(5)
(6)
where TN represents the instants of the transmissions
possibly matching the advertisement of the target BLE
device in the current monitoring interval.
Note that we don’t utilize the power level per se, or any
physical-layer indicator, to indicate whether the same de-
vice is transmitting or not, as it is sensitive to the envi-
ronment and the distance between BLE-Guardian and
the target BLE device. To actually perform the jamming,
the device hiding module continuously transmits at the
maximum power for the speciﬁed interval.
BLE-Guardian may jam the advertisements of non-
target devices which might disrupt their operation, which
we referred to as the second situation above. Neverthe-
less, because of the random delay introduced by the de-
vice before each advertisement, the aforementioned “col-
lision” events become unlikely. In Appendix A, we use
renewal theory to show that the expected number of an-
other device’s advertisements within the expected adver-