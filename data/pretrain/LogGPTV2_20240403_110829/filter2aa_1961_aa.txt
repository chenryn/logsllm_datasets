# Catching Malware En Masse: DNS and IP Style

## Authors
- Dhia Mahjoub, Email: [DhiaLite@...](mailto:DhiaLite@...)
- Thibault Reuille, Email: [ThibaultReuille@...](mailto:ThibaultReuille@...)
- Andree Toonk, Email: [atoonk@...](mailto:atoonk@...)

## Part 1: Catching Malware via DNS

### Fast-Flux Botnets as Proxy Networks
Hackers aim to keep their operations online at all times, making the network infrastructure crucial. Common malicious activities include spam, phishing, malware distribution, and botnets, with fast-flux botnets serving as proxy networks. These provide an extra layer of evasion and protection for Command and Control (C2) servers.

#### Fast-Flux Characteristics
- **Infected Hosts:** Act as proxies.
- **Fast-Flux C2s:** Serve as backend control centers.
- **Proxy Network Usage:**
  - Serve malware pushed from C2s to infected clients (e.g., via drive-by downloads or spam).
  - Forward communication from infected clients to C2s.

#### Example: Zeus Crimeware
- **Control Panel:** Manages the botnet.
- **Configuration Files:** Contain URLs for drop zones, additional payloads, and target websites for web injects.
- **Binary Files:** Executables.
- **Builder:** Tool to create new malware variants.
- **Characteristics:**
  - Steals financial data (bank account info, credit card details).
  - Steals sensitive credentials.
  - Performs web injections.

#### C2 Domains
- **Serve Configuration Files**
- **Serve Binary Files**
- **Drop Zones**

### Detection Methods
1. **Periodic Batch Pig Job:**
   - Retrieve domains with TTL = 150 seconds from authoritative logs.
   - Filter out noise domains (spam, legitimate domains known to use TTL = 150).
   - Build a "domain to IP" bipartite graph.
   - Extract the largest connected component.
   - Identify new zbot C2 domains to block.
   - Add IPs from the largest connected component to the pool of zbot IPs.

2. **Streaming Authoritative DNS:**
   - Tap into processed authoritative DNS streams before consolidation into a persistent database.
   - Use fields like ASN, domain, 2LD, IP, NS_IP, timestamp, TTL, type.
   - Implement custom filters and detection heuristics.
   - Continuously harvest IPs and add them to the pool of zbot IPs.
   - Check for any domain in the authlogs DNS stream whose IP or NS_IP is in the pool of zbot IPs.
   - Identify new zbot C2 domains to block.
   - Add new domains to the seed.

### HTTP Traffic Patterns
- **Zeus C2 Domain URLs:**
  - **Config URL:** e.g., `seorubl.in`, `GET /forum/popap1.jpg`
  - **Binary URL:** e.g., `orbitmanes.ru`, `GET /01.exe`
  - **Drop Zone URL:** e.g., `reportonh.com`, `GET /pack32/sysconf.exe`

- **Asprox ClickFraudBot CnC Beacon:**
  - `GET /b/eve/0008f258b0e99d069756f425`
  - `GET /b/letr/002D63501FC3E082B1E9F290`
  - `GET /b/shoe/1480`

- **Beaconing and Announcing Version, Make, OS:**
  - `GET /1/?uid=01604555&ver=1.14&mk=bb3b62&os=S2000&rs=adm&c=14&rq=0`

- **Other URLs:**
  - `azg.su`, `GET /coivze7aip/modules/bot.exe`
  - `tundra-tennes.com`, `GET /infodata/sow32.dll`

### Pony Panel on Zbot Proxy Network
- **Pony 1.9 Leaked:** Trojan Forge in late 2012.
- **Features:**
  - Botnet controller panel.
  - User management, logging, database, statistics.
  - Info stealer (Win32/Fareit).
  - Payload delivery via drive-by/exploit kits or attachments in spam emails.

### TLD Distribution and Geo-Distribution
- **TLD Distribution of CnCs:** Sample of 925 zbot CnC domains.
- **Geo-Distribution of Proxy Network Hosts:** Sample of 170,208 IPs.
- **Clients Phoning to CnCs:** 2,220,230 DNS lookups over 24 hours.

### CnC Domains and Related Samples
- **Sample of 337 zbot CnC domains.**
- **208 different samples (SHA256 communicated with the CnCs).**
- **Top Recorded Sample Names:**
  - Trojan[Spy]/Win32.Zbot
  - TrojanDownloader:Win32/Upatre (used as a downloader for Zeus GameOver).

## Part 2: Catching Malware via IP

### Motivation
- Examine malicious IP ranges in certain ASNs from a new perspective.
- Look beyond simple counting of bad domains and IPs hosted on prefixes of an ASN.

### Internet 101 & BGP
- **Autonomous Systems (AS):** Each organization on the Internet is an AS.
- **BGP (Border Gateway Protocol):** The glue that makes the Internet work.
- **OpenDNS (AS 36692), Google (AS 15169).**

### AS Graph
- **Data Sources:**
  - Routeviews: <http://archive.routeviews.org/bgpdata>
  - Cidr Report: <http://www.cidr-report.org/as2.0/>
  - Hurricane Electric Database: <http://bgp.he.net/>

- **Building the AS Graph:**
  - Directed graph: Node = ASN, directed edge from an ASN to an upstream ASN.
  - Example: `TABLE_DUMP2|1392422403|B|96.4.0.55|11686|67.215.94.0/24|11686!4436!2914!36692|IGP|96.4.0.55|0|0||NAG||`

### Focus of This Study
- **Topology of AS Graph:**
  - Look at finer granularity than BGP prefix: sub-allocated ranges within BGP prefixes.
  - Identify suspicious sibling ASNs through BGP outages.
  - Detect malicious IP ranges and subdomains under compromised domains.

## Part 3: Visualizing Knowledge with Our 3D Engine

### OpenGraphiti
- **Semantic Nets:**
- **Particle Physics:**

### Conclusion
- Summarize the key findings and methods used in detecting and visualizing malware using DNS and IP techniques.