title:Wirelessly Pickpocketing a Mifare Classic Card
author:Flavio D. Garcia and
Peter van Rossum and
Roel Verdult and
Ronny Wichers Schreur
Wirelessly Pickpocketing a Mifare Classic Card
Flavio D. Garcia
Peter van Rossum
Roel Verdult
Ronny Wichers Schreur
Radboud University Nijmegen, The Netherlands
{flaviog,petervr,rverdult,ronny}@cs.ru.nl
Abstract
The Mifare Classic is the most widely used contactless
smartcard on the market. The stream cipher CRYPTO1
used by the Classic has recently been reverse engi-
neered and serious attacks have been proposed. The
most serious of them retrieves a secret key in under a
second. In order to clone a card, previously proposed
attacks require that the adversary either has access
to an eavesdropped communication session or exe-
cutes a message-by-message man-in-the-middle attack
between the victim and a legitimate reader. Although
this is already disastrous from a cryptographic point
of view, system integrators maintain that these attacks
cannot be performed undetected.
This paper proposes four attacks that can be ex-
ecuted by an adversary having only wireless access
to just a card (and not to a legitimate reader). The
most serious of them recovers a secret key in less than
a second on ordinary hardware. Besides the crypto-
graphic weaknesses, we exploit other weaknesses in
the protocol stack. A vulnerability in the computation
of parity bits allows an adversary to establish a
side channel. Another vulnerability regarding nested
authentications provides enough plaintext for a speedy
known-plaintext attack.
1. Introduction
With more than one billion cards sold,
the Mi-
fare Classic covers more than 70% of the contactless
smartcard market1. Such cards contain a slightly more
powerful IC than classical RFID chips (developed
for identiﬁcation only), equipping them with modest
computational power and making them suitable for ap-
plications beyond identiﬁcation, such as access control
and ticketing systems.
The Mifare Classic is widely used in public transport
payment systems such as the Oyster card2 in London,
1. http://www.nxp.com
2. http://oyster.tﬂ.gov.uk
the Charlie Card in Boston3, the SmartRider in Aus-
tralia4, EasyCard in Taiwan5, and the OV-chipkaart6 in
The Netherlands. It is also widely used for access con-
trol in ofﬁce and governmental buildings and military
objects.
According to [MFS08] the Mifare Classic complies
with parts 1 to 3 of the ISO standard 14443-A [ISO01],
specifying the physical characteristics, the radio fre-
quency interface, and the anti-collision protocol. The
Mifare Classic does not
implement part 4 of the
standard, describing the transmission protocol, but in-
stead uses its own secure communication layer. In this
layer, the Mifare Classic uses the proprietary stream
cipher CRYPTO1 to provide data conﬁdentiality and
mutual authentication between card and reader. This ci-
pher has recently been reversed engineered [NESP08],
[GKM+08].
In this paper, we show serious vulnerabilities of the
Mifare Classic that enable an attacker to retrieve all
cryptographic keys of a card, just by wirelessly com-
municating with it. Thus, the potential impact is much
larger than that of the problems previously reported
in [GKM+08], [CNO08], [KHG08], [Noh08], where
the attacker either needs to have access to a legitimate
reader or an eavesdropped communication session. The
attacks described in this paper are fast enough to allow
an attacker to wirelessly ‘pickpocket’ a victim’s Mifare
Classic card, i.e., to clone it immediately.
Vulnerabilities. The vulnerabilities we discovered
concern the handling of parity bits and nested authen-
tications.
• The Mifare Classic sends a parity bit for each
byte that is transmitted. Violating the standard,
the Mifare Classic mixes the data link layer
and secure communication layer: parity bits are
computed over the plaintext instead of over the
3. http://www.mbta.com/fares and passes/charlie
4. http://www.transperth.wa.gov.au
5. http://www.easycard.com.tw
6. http://www.ov-chipkaart.nl
To appear in IEEE Symposium on Security and Privacy (S&P ’09).
i.e.,
the ciphertext.
bits that are actually sent,
This is, in fact, authenticate-then-encrypt which
is generically insecure [Kra01].
Furthermore, parity bits are encrypted with the
same bit of keystream that encrypts the ﬁrst bit
of the next byte of plaintext. During the authenti-
cation protocol, if the reader sends wrong parity
bits, the card stops communicating. However, if
the reader sends correct parity bits, but wrong
authentication data, the card responds with an
(encrypted) error code. This breaks the conﬁ-
dentiality of the cipher, enabling an attacker to
establish a side channel.
• The memory of the Mifare Classic is divided
into sectors, each of them having its own 48-bit
secret key. To perform an operation on a speciﬁc
sector, the reader must ﬁrst authenticate using
the corresponding key. When an attacker has
already authenticated for one sector (knowing the
key for that sector) and subsequently attempts to
authenticate for another sector (without knowing
the key for this sector), that attempt leaks 32 bits
of information about the secret key of that sector.
Attacks. We describe four attacks exploiting these
vulnerabilities to recover the cryptographic keys from
a Mifare Classic card having only contactless com-
munication with it (and not with a legitimate reader).
These attacks make different trade-offs between online
communication time (the time an attacker needs to
communicate with a card), ofﬂine computation time
(the time it takes to compute the cryptographic key
using the data gathered from the card), precomputation
time (one-time generation time of static tables), disk
space usage (of the static tables) and special assump-
tions (whether the attacker has already one sector key
or not).
• The ﬁrst attack exploits the weakness of the parity
bits to mount an ofﬂine brute-force attack on the
48-bit key space. The attacker only needs to try
to authenticate approximately 1500 times (which
takes under a second).
• The second attack also exploits the weakness of
the parity bits but this time the attacker mounts
an adaptive chosen ciphertext attack. The at-
tacker needs approximately 28500 authentication
attempts. In this attack, she needs to make sure
that the challenge nonce of the card is constant,
which is why this takes approximately ﬁfteen
minutes. During these authentication attempts,
the attacker adaptively chooses her challenge to
the card, ultimately obtaining a challenge that
guarantees that there are only 436 possibilities
2
for the odd-numbered bits of the internal state of
the cipher. This reduces the ofﬂine search space
to approximately 33 bits. On a standard desktop
computer this search takes about one minute.
• In the third attack the attacker keeps her own
challenge constant, but varies the challenge of the
tag, again ultimately obtaining a special internal
state of the cipher. These special states have to be
precomputed and stored in a 384 GB table. This
attack requires on average 212 = 4096 authenti-
cation attempts, which could in principle be done
in about two minutes. A few extra authentication
attempts allow efﬁcient lookup in the table.
• The fourth attack assumes that the attacker has
already recovered at least one sector key. When
the attacker ﬁrst authenticates for this sector and
then for another sector, the authentication protocol
is slightly different, viz., the challenge nonce of
the tag is not sent in the clear, but encrypted with
the key of the new sector. Because the random
number generator has only a 16-bit state, because
parity bits leak three bits of information, and be-
cause the tag’s random number generator runs in
sync with the communication timing, this allows
an attacker to guess the plaintext tag nonce and
hence 32 bits of keystream. Due to weaknesses
in the cipher [GKM+08], we can use these 32
bits of keystream to compute approximately 216
candidate keys. These can then be checked ofﬂine
using another authentication attempt. Since this
attack only requires three authentication attempts,
the online time is negligible. The ofﬂine search
takes under a second on ordinary hardware.
Related work. De Koning Gans et al. [KHG08] have
proposed an attack on a Mifare Classic tag that exploits
the malleability of the CRYPTO1 stream cipher to read
partial information from a tag, without even knowing
the encryption algorithm. By slicing a Mifare Classic
chip and taking pictures with a microscope, the cipher
was reverse engineered by Nohl et al. [NESP08].
Courtois et al. claim in [CNO08] that the CRYPTO1
cipher is susceptible to algebraic attacks and Nohl
shows a statistical weakness of the cipher in [Noh08].
A full description of the cipher was given by Garcia et
al. in [GKM+08], together with a reverse engineered
authentication protocol. They also describe an attack
with which an attacker can recover a sector key by
communicating with a genuine reader or by eavesdrop-
ping a successful authentication.
All attacks described in these papers have in com-
mon that they need access to a legitimate reader or
the attacks
intercepted communication. In contrast,
described in our paper only need access to a card.
Impact. The implications of the attacks described in
this paper are vast.
Many ticketing and payment systems using the
Mifare Classic sequentially authenticate for several
sectors verifying the data in the card. In case of
invalid data, the protocol aborts. With previous attacks,
this means that an attacker has to either eavesdrop a
full trace or walk from the reader to the card holder
several times, executing a message-by-message man-
in-the-middle attack. In practice, both options are hard
to accomplish undetected. Furthermore, there is no
guarantee that this allows an attacker to recover all
useful data in the card, since some sectors might not
be read in this particular instance. Our attacks always
enable an attacker to retrieve all data from the card.
Our fourth attack, where the attacker already knows
a single key, is extremely fast (less than one second
per key on ordinary hardware). The ﬁrst key can be re-
trieved using one of our ﬁrst three attacks, but in many
situations this is not even necessary. Most deployed
systems leave default keys for unused sectors or do
not diversify keys at all. Nearly all deployed systems
that do diversify have at least one sector key that is
not diversiﬁed, namely for storing the diversiﬁcation
information. This is even speciﬁed in NXP’s guideline
for system integrators [MAD07]. This means that it is
possible for an adversary to recover all keys necessary
to read and write the sixteen sectors of a Mifare Classic
1k tag in less than sixteen seconds.
Overview. We start by gathering the relevant informa-
tion that is already known about the Mifare Classic
in Section 2: its logical structure, the encryption algo-
rithm, the authentication protocol and the initialization
of the stream cipher, how to undo the initialization
of the stream cipher, and information about how the
tag generates its random numbers. In Section 3, we
continue with a precise description of the discovered
weaknesses in the handling of the parity bits and
nested authentications. In Section 4, we show how
these weaknesses can be exploited to recover a sector
key by communication with just a card. Section 5 gives
some concluding remarks.
2. Background
2.1. Communication
Figure 2.1. Memory layout of the Mifare Classic
14443-A. We have used the Proxmark III7 for commu-
nication; this device implements, among others, these
two layers of this standard and can emulate both a card
and a reader.
codes
of
Using information from [KHG08]
about
the Mifare Classic
the
command
and
from [GKM+08], [NESP08] about the cryptographic
aspects of
the Mifare Classic, we implemented
the functionality of a Mifare Classic reader on
the Proxmark. Note that we can observe a tag’s
communication at the data link level, implying that
we can observe the parity bits as well. Furthermore,
we have the freedom to send arbitrary parity bits,
which is not possible using stock commercial Mifare
Classic readers. However, many newer NFC readers
can be used to communicate with a Mifare Classic
card as well and are capable of sending and receiving
arbitrary parity bits.8 We have also executed the
attacks described in this paper using an inexpensive
(30 USD) stock commercial NFC reader. However,
these readers are typically connected to a host
PC using USB and it is harder to obtain accurate
communication timing.
2.2. Memory structure of the Mifare Classic
The Mifare Classic tag is essentially a memory chip
with secure wireless communication capabilities. The
memory of the tag is divided into sectors, each of
which is further divided into blocks of sixteen bytes
each. The last block of each sector is the sector trailer
and stores two secret keys and the access conditions
for that sector.
To perform an operation on a speciﬁc block, the
reader must ﬁrst authenticate for the sector containing