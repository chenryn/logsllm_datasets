# MySQL 服务管理与性能优化

## 1. 文件列表
- `auto.cnf`
- `ibdata1`
- `ib_logfile0`
- `ib_logfile1`
- `mysql`
- `performance_schema`
- `sys`
- `ib_buffer_pool`
- `ibtmp1`
- `mysql3308.err`
- `mysql3308.pid`
- `mysql3308.sock`
- `mysql3308.sock.lock`

## 2. 查看服务信息
```bash
[root@client-50 ~]# netstat -ntulp | grep 3307
tcp6       0      0 :::3307                 :::*                    LISTEN 5278/mysqld
[root@client-50 ~]# netstat -ntulp | grep 3308
tcp6       0      0 :::3308                 :::*                    LISTEN 5805/mysqld
[root@client-50 ~]# netstat -nultp | grep mysqld
tcp6       0      0 :::3307                 :::*                    LISTEN 6117/mysqld
tcp6       0      0 :::3308                 :::*                    LISTEN 5805/mysqld
```

## 3. 访问服务
```bash
[root@client-50 ~]# /usr/local/mysql/bin/mysql -uroot -p'+lak&lTbh2sc' -S /dir1/mysql3307.sock
mysql> ALTER USER 'root'@'localhost' IDENTIFIED BY '123456';
Query OK, 0 rows affected (0.00 sec)

[root@client-50 ~]# /usr/local/mysql/bin/mysql -uroot -p'pqMSsswNL8' -S /dir1/mysql3307.sock
mysql> ALTER USER 'root'@'localhost' IDENTIFIED BY '123456';
Query OK, 0 rows affected (0.00 sec)

[root@client-50 ~]# /usr/local/mysql/bin/mysql -uroot -p123456 -S /dir1/mysql3307.sock
```

## 4. 存储数据
```sql
mysql> CREATE DATABASE bbsdb;
Query OK, 1 row affected (0.00 sec)

mysql> CREATE TABLE bbsdb.a (id INT);
Query OK, 0 rows affected (0.24 sec)

mysql> INSERT INTO bbsdb.a VALUES (11);
Query OK, 1 row affected (0.03 sec)
```

## 5. 停止服务
```bash
[root@client-50 ~]# /usr/local/mysql/bin/mysqld_multi --user=root --password=123456 stop 1
[root@client-50 ~]# /usr/local/mysql/bin/mysqld_multi --user=root --password=123456 stop 2
```

## 6. 性能调试
### 6.1 配置文件修改
```bash
[root@client-50 ~]# vim /etc/my.cnf
[mysqld1]
server_id = 1
log-bin = mysql111
```

### 6.2 查看主库状态
```bash
[root@client-50 ~]# /usr/local/mysql/bin/mysql -uroot -p123456 -S /dir1/mysql3307.sock
mysql> SHOW MASTER STATUS;
+------------------+----------+--------------+------------------+
| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |
+------------------+----------+--------------+------------------+
| mysql111.000001  | 154      |              |                  |
+------------------+----------+--------------+------------------+
1 row in set (0.00 sec)
```

### 6.3 授权使用
1. **开启实例2并登录**
    ```bash
    [root@client-50 ~]# /usr/local/mysql/bin/mysqld_multi start 2
    [root@client-50 ~]# /usr/local/mysql/bin/mysql -uroot -p123456 -S /dir2/mysql3308.sock
    ```

2. **管理员授权admin**
    ```sql
    mysql> GRANT ALL ON db8.* TO 'admin'@'%' IDENTIFIED BY '123456';
    Query OK, 0 rows affected, 1 warning (0.00 sec)
    ```

3. **客户端登录，按照端口登录相应实例**
    ```bash
    [root@sql52 ~]# mysql -h192.168.4.50 -P3308 -uadmin -p123456
    ```

4. **操作数据库**
    ```sql
    mysql> SHOW DATABASES;
    +--------------------+
    | Database           |
    +--------------------+
    | information_schema |
    +--------------------+
    1 row in set (0.00 sec)

    mysql> CREATE DATABASE db8;
    Query OK, 1 row affected (0.00 sec)

    mysql> CREATE TABLE db8.a (id INT);
    Query OK, 0 rows affected (0.29 sec)

    mysql> INSERT INTO db8.a VALUES (66);
    Query OK, 1 row affected (0.04 sec)

    mysql> INSERT INTO db8.a VALUES (88);
    Query OK, 1 row affected (0.02 sec)

    mysql> SELECT * FROM db8.a;
    +------+
    | id   |
    +------+
    | 66   |
    | 88   |
    +------+
    2 rows in set (0.00 sec)
    ```

## 7. MySQL 性能优化
### 7.1 提高MySQL系统性能和响应速度
- 替换有问题的硬件（CPU/磁盘/内存等）
- 调整服务程序的运行参数
- 优化SQL查询
- 优化网络带宽和网络架构

### 7.2 查看CPU使用情况
```bash
[root@client-50 ~]# uptime
11:28:01 up 3:25, 1 user, load average: 0.06, 0.03, 0.05
```

### 7.3 查看I/O统计
```bash
[root@client-50 ~]# iostat
Linux 3.10.0-693.el7.x86_64 (client-50) 2019年02月27日 _x86_64_ (1 CPU)
avg-cpu: %user %nice %system %iowait %steal %idle
0.05 0.00 0.08 0.19 0.03 99.64

Device: tps kB_read/s kB_wrtn/s kB_read kB_wrtn
vda 1.24 22.79 5.16 281286 63650
dm-0 1.19 22.04 4.99 272051 61602
dm-1 0.00 0.09 0.00 1060 0
```

### 7.4 查看内存使用情况
```bash
[root@client-50 ~]# free -m
              total        used        free      shared  buff/cache   available
Mem:         992          313          344           7         334         488
Swap:            0           0           0
```

### 7.5 查看数据库相关配置
#### 7.5.1 连接数/并发量
```sql
mysql> SHOW VARIABLES LIKE '%conn%';
+-----------------------------------+-------+
| Variable_name                     | Value |
+-----------------------------------+-------+
| character_set_connection          | utf8  |
| collation_connection              | utf8_general_ci |
| connect_timeout                   | 10    |
| disconnect_on_expired_password    | ON    |
| init_connect                      |       |
| max_connect_errors                | 100   |
| max_connections                   | 151   | # 并发连接数
| max_user_connections              | 0     |
| performance_schema_session_connect_attrs_size | 512  |
+-----------------------------------+-------+
9 rows in set (0.00 sec)

mysql> SET GLOBAL max_connections = 200; # 修改并发连接为200
Query OK, 0 rows affected (0.00 sec)

mysql> SHOW VARIABLES LIKE '%max_connection%';
+-----------------+-------+
| Variable_name   | Value |
+-----------------+-------+
| max_connections | 200   |
+-----------------+-------+
1 row in set (0.01 sec)
```

#### 7.5.2 连接超时
```sql
mysql> SHOW VARIABLES LIKE '%timeout%';
+-------------------------------+-------+
| Variable_name                 | Value |
+-------------------------------+-------+
| connect_timeout               | 10    | # 单位为秒，10秒内连接失败
| delayed_insert_timeout        | 300   |
| have_statement_timeout        | YES   |
| innodb_flush_log_at_timeout   | 1     |
| innodb_lock_wait_timeout      | 50    |
| innodb_rollback_on_timeout    | OFF   |
| interactive_timeout           | 28800 |
| lock_wait_timeout             | 31536000 |
| net_read_timeout              | 30    |
| net_write_timeout             | 60    |
| rpl_stop_slave_timeout        | 31536000 |
| slave_net_timeout             | 60    |
| wait_timeout                  | 28800 |
+-------------------------------+-------+
13 rows in set (0.00 sec)
```

#### 7.5.3 缓存相关参数
```sql
mysql> SHOW VARIABLES LIKE '%buffer%';
```

#### 7.5.4 查询优化
```sql
mysql> SHOW GLOBAL STATUS LIKE '%qcache%';
+-------------------------+-------+
| Variable_name           | Value |
+-------------------------+-------+
| Qcache_free_blocks      | 1     |
| Qcache_free_memory      | 1031832 |
| Qcache_hits             | 0     | # 查询缓存里被查找到数据的次数
| Qcache_inserts          | 0     | # 查询请求总数
| Qcache_lowmem_prunes    | 0     | # 清除查询缓存数据的次数
| Qcache_not_cached       | 1     |
| Qcache_queries_in_cache | 0     |
| Qcache_total_blocks     | 1     |
+-------------------------+-------+
8 rows in set (0.00 sec)
```

### 7.6 日志类型
- **错误日志**：默认启用，记录服务启动和运行过程中的信息。路径：`/var/log/mysql.log`
- **binlog日志**：记录所有更改数据的操作。
- **查询日志**：记录执行的所有SQL命令。
- **慢查询日志**：记录耗时较长或不使用索引的查询操作。

#### 7.6.1 启用查询日志
```bash
[root@client-50 ~]# vim /etc/my.cnf
[mysqld]
general-log

[root@client-50 ~]# systemctl restart mysqld

[root@client-50 ~]# tail -f /var/lib/mysql/client-50.log
```

#### 7.6.2 启用慢查询日志
```bash
[root@client-50 ~]# vim /etc/my.cnf
[mysqld]
slow-query-log
long-query-time = 5
log-queries-not-using-indexes

[root@client-50 ~]# systemctl restart mysqld

[root@client-50 ~]# tail -f /var/lib/mysql/client-50-slow.log
```

### 7.7 案例
#### 7.7.1 实现MySQL读写分离
##### 问题
- 搭建一主一从结构
- 配置MaxScale代理服务器
- 测试分离配置

##### 方案
- 使用4台RHEL 7虚拟机
- 192.168.4.10 和 192.168.4.20 分别提供读、写服务
- 通过主从复制保持数据一致性
- MaxScale代理服务器面向客户端，根据请求类型分配到不同的服务器

##### 步骤
1. **搭建主从结构**
    - **主库配置**（192.168.4.10）
        ```bash
        [root@master10 ~]# vim /etc/my.cnf
        [mysqld]
        server_id = 10
        log-bin = master10

        [root@master10 ~]# systemctl restart mysqld
        ```
    - **从库配置**（192.168.4.20）
        ```bash
        [root@slave20 ~]# vim /etc/my.cnf
        [mysqld]
        server_id = 20

        [root@slave20 ~]# systemctl restart mysqld
        ```