title:Multi-recipient encryption, revisited
author:Alexandre Pinto and
Bertram Poettering and
Jacob C. N. Schuldt
Multi-recipient Encryption, Revisited∗
Alexandre Pinto
Royal Holloway,
University of London
and
Instituto Universitário da Maia
Bertram Poettering
Royal Holloway,
University of London
Jacob C.N. Schuldt
Royal Holloway,
University of London
ABSTRACT
A variant of public key encryption that promises eﬃciency
gains due to batch processing is multi-recipient public key
encryption (MR-PKE). Precisely, in MR-PKE, a dedicated
encryption routine takes a vector of messages and a vector
of public keys and outputs a vector of ciphertexts, where the
latter can be decrypted individually, as in regular PKE.
In this paper we revisit the established security notions of
MR-PKE and the related primitive MR-KEM. We identify
a subtle ﬂaw in a security model by Bellare, Boldyreva, and
Staddon, that also appears in later publications by diﬀer-
ent authors. We further observe that these security models
rely on the knowledge-of-secret-key (KOSK) assumption—
a requirement that is rarely met in practice. We resolve
this situation by proposing strengthened security notions for
MR-PKE and MR-KEMs, together with correspondingly se-
cure yet highly eﬃcient schemes. Importantly, our models
abstain from restricting the set of considered adversaries in
the way prior models did, and in particular do not require
the KOSK setting. We prove our constructions secure as-
suming hardness of the static Diﬃe-Hellman problem, in the
random oracle model.
1.
INTRODUCTION
Standard public key encryption is concerned with two
communicating parties, a sender and a receiver, and en-
ables the sender to encrypt a conﬁdential message for the
receiver using the latter’s public key. Should a sender want
to encrypt the same or diﬀerent messages for two or more re-
ceivers, the use of a standard public key encryption scheme
would require the sender to encrypt the messages under the
intended receivers’ public keys independently of each other.
In contrast to this, a multi-recipient multi-message public
key encryption scheme (MR-MM-PKE) enables a sender to
simultaneously encrypt many messages for many receivers
in a single operation. More speciﬁcally, an MR-MM-PKE
∗The research of the second and third authors was supported
by an EPSRC Leadership Fellowship, EP/H005455/1.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
ASIA CCS’14, June 4–6, 2014, Kyoto, Japan.
Copyright 2014 ACM 978-1-4503-2800-5/14/06 ...$15.00.
http://dx.doi.org/10.1145/2590296.2590329.
scheme provides an encryption algorithm which, given a
vector (pk1, . . . , pkn) consisting of the public keys of n re-
ceivers and a corresponding vector (m1, . . . , mn) of n mes-
sages, returns a vector (c1, . . . , cn) of n ciphertexts.
It is
required that these ciphertexts can be decrypted individu-
ally, i.e., each receiver i (holding the public/private key pair
(pki, ski)) be able to decrypt ci without knowledge of the
public keys of the other recipients or the remaining cipher-
texts cj, j (cid:54)= i. Hence, syntactically, decryption is identical
to that of an ordinary public key encryption scheme.
By simultaneously processing messages for multiple re-
ceivers, MR-MM-PKE schemes allow computational and, in
some settings, bandwidth savings compared to the paral-
lel use of standard public key encryption. This property
is highly attractive in applications where batch processing
of encryptions naturally occurs. For example, consider an
online banking system which, following a regular schedule,
sends encrypted bank account statements to all customers
who have provided the bank with a corresponding public
key. By employing an MR-MM-PKE scheme as opposed to
an ordinary public key encryption scheme, the bank could
considerably reduce the computational workload for provid-
ing this service.
1.1 The evolution of MR-MM-PKE
A promising approach towards the construction of eﬃ-
cient MR-MM-PKE schemes is to use an ordinary encryp-
tion scheme to encrypt the messages for their respective re-
ceivers, but to use the same randomness for all encryptions
[13, 5, 4]. Depending on the structure of the encryption
scheme, this can potentially provide a signiﬁcant reduction
in the computational requirements for the encryption pro-
cess, but at the same time requires that the used encryption
scheme remain secure under randomness re-use.
In [13], Kurosawa shows that both ElGamal encryption [11]
and (a version of) Cramer-Shoup encryption [8] are secure
in this setting. Furthermore, it is highlighted that the MR-
MM-PKE schemes obtained by employing randomness re-
use in combination with these encryption schemes provide
a reduction of almost 50% in terms of computational cost,
compared to individually encrypting the messages. How-
ever, the MR-MM-PKE security model used in [13] does not
take into account malicious receivers: all public keys used
in the (multi-recipient) encryption producing the challenge
ciphertext need to be honestly generated, and the corre-
sponding private keys need to remain unknown to the ad-
versary. Hence, the security guarantees provided in practice
are rather weak.
229This issue was identiﬁed and addressed by Bellare, Boldy-
reva, and Staddon [5] who introduced a strengthened vari-
ant of Kurosawa’s security deﬁnition. The updated model
explicitly considers insiders, i.e., malicious receivers, by al-
lowing the adversary to provide some of the public keys used
in the encryption generating the challenge ciphertext. How-
ever, for these keys the adversary also has to reveal the cor-
responding secret keys—a requirement generally known as
the knowledge-of-secret-key (KOSK) assumption.
Commonly seen justiﬁcations for this quite strong assump-
tion argue that in all practical systems, in order to be consid-
ered valid, public keys are registered with a Certiﬁcate Au-
thority (CA), and that this CA will require zero-knowledge
proofs of knowledge of the corresponding private keys. This,
however, is rarely done in practice. In fact, we are not aware
of any CA on the Internet which requires a user to provide
a full proof of knowledge of her private key. It is important
to note here that KOSK-based security arguments generally
do not translate to more realistic settings.
Indeed, as we
discuss in Section 3.2, multi-recipient ElGamal encryption
in the plain (i.e., non-KOSK) setting is trivially breakable,
in strong contrast with the (KOSK-based) results from [5].
Besides the strengthened security model, Bellare et al.
also introduce the notion of reproducibility for an encryption
scheme and obtain the powerful result that all schemes ful-
ﬁlling this additional requirement are amenable to a generic
conversion to an MR-MM-PKE via randomness re-use. In
particular, it is shown that ElGamal and Cramer-Shoup en-
cryption are reproducible, and hence give rise to secure MR-
MM-PKE in a generic way. Note that this re-establishes the
results by Kurosawa, but in a stronger security model.
1.2 Our Contributions
We ﬁrst revisit the (already strengthened) security notion
for MR-MM-PKE as deﬁned by Bellare et al. [5] and observe
that it contains a subtle technical ﬂaw. Speciﬁcally, we note
that when the challenge ciphertext is produced, the used
public keys are always preﬁxed by honest ones. This feature
makes it possible to deﬁne an (admittedly artiﬁcial) MR-
MM-PKE scheme which can be shown secure in the model
of [5], but which is obviously insecure in any practical set-
ting where the adversary can inﬂuence the order in which
the encryption algorithm receives its public keys. Further-
more, we note that the security model of [5] does not allow
repetition of (honest) public keys. Hence, security is not
guaranteed should the sender encrypt more than one mes-
sage for a given receiver. See Section 3.2 for a more detailed
discussion of these issues.
We ﬁx these issues by further strengthening the model
of [5]. In the same step we also drop the KOSK assumption,
i.e., the adversary is from now on allowed to introduce ma-
liciously generated public keys for which he does not know
the decryption keys. We argue that, to ensure security in
practice, MR-MM-PKE schemes should achieve the level of
security captured by this new model.
As discussed above, the schemes proposed in [5] might be-
come insecure in the new setting, and some deﬁnitively do.
Unfortunately, this seems to generally hold for all schemes
obtained via the reproducibility-based transformation, as
the latter inherently requires the KOSK assumption. Hence,
in order to ﬁnd stronger instantiations of MR-MM-PKE, we
need to follow a diﬀerent approach.
As a ﬁrst step towards an MR-MM-PKE scheme that
is secure in our new security model, we introduce the no-
tion of multi-recipient multi-key key encapsulation mecha-
nism (MR-MK-KEM). Following the well-known hybrid ap-
proach, by combining this KEM with an appropriate data
encapsulation mechanism (DEM) we obtain an MR-MM-
PKE scheme.
We then show that the ‘hashed ElGamal’ technique from [1]
combined with randomness re-use gives rise to a secure MR-
MK-KEM and, by consequence, to a secure MR-MM-PKE
scheme. The latter is eﬃcient and provides compact cipher-
texts: when compared to the parallel use of the original
hashed ElGamal scheme, the reduction in the ciphertext size
and in the computational cost associated with encryption is
approximately 50%. In addition, although providing much
stronger security guarantees and not limiting the sender to
encrypt the same message for all receivers, our scheme is
as eﬃcient as the best known MR-PKE scheme for single
messages (see related work).
1.3 Related Work
Research on multi-recipient encryption was initiated by
Kurosawa [13] who deﬁned the ﬁrst security model for MR-
MM-PKE schemes and proposed randomness re-using con-
structions based on ElGamal and Cramer-Shoup encryption.
The primary goal of [13] was to shorten ciphertexts, and
computational advantages of the new primitive were consid-
ered only of subordinate importance. As pointed out above,
Bellare et al. [5] improved upon this work by introducing a
stronger security model and describing a general transforma-
tion from reproducible encryption schemes to MR-MM-PKE
schemes.
The concept of multi-recipient key encapsulation (MR-
KEM) was introduced by Smart in [15].
Intuitively, this
primitive is closely related to MR-PKE due to the hybrid
approach for obtaining public key encryption by generically
combining key encapsulation (KEM) with data encapsula-
tion (DEM). It is important to note, however, that Smart
only considers single-key MR-KEMs, i.e., MR-KEMs that
establish for all recipients the same session key. In combi-
nation with a DEM, such KEMs are helpful to construct
multi-recipient single-message public key encryption (MR-
SM-PKE) schemes which are restricted to applications where
the same message is encrypted for all receivers. This is an
often considered subclass of the more general MR-MM-PKE
primitive. Note that the work of Smart does not consider in-
sider attacks; indeed, it seems that in the single-key setting
such a notion is inapplicable.
The work of Barbosa and Farshim [3] lifts the MR-KEM
results by Smart to the identity-based setting, by corre-
spondingly adapting the deﬁnitions from [15] and carefully
taking into account the arising subtleties. By consequence,
the paper restricts attention to the single-key setting and
does not consider insider attacks.
In apparently independent work, Baek, Safavi-Naini, and
Susilo [2] construct a single-key MR-KEM in the identity-
based setting that computes the ciphertexts for an arbitrary
number of recipients using a single pairing computation in
total. While this is highly attractive from an eﬃciency-
centric point of view, unfortunately the scheme is proven
secure only in a ‘selective-id’ model.
Chatterjee and Sarkar [7] complement the results from [3,
2] by constructing two multi-recipient single-key identity-
230based KEMs that do not require the random oracle heuris-
tic. Their constructions require a hierarchical IBE scheme
(HIBE) with constant-size ciphertexts as a building block
and are hence interesting more from a theoretical perspec-
tive.
Broadcast encryption [12, 14, 6] is closely related to MR-
SM-PKE. More speciﬁcally, a broadcast encryption scheme
allows a sender to encrypt a message for any subset of re-
cipients belonging to a pre-deﬁned universe of users. The
latter is typically ﬁxed at the time the scheme is initial-
ized, but speciﬁc constructions, denoted dynamic broadcast
encryption [10], allow users to be added as prospective recip-
ients after scheme initialization. In contrast, MR-SM-PKE
allows addressing any set of users on an ad-hoc basis, re-
gardless of when their public/private keys were generated.
Independently of that, broadcast encryption requires a cen-
tral authority to generate a public key for the universe of
users as well as a private decryption key for each individual.
These private keys would then have to be delivered to the
users through a conﬁdential and authenticated channel. In
contrast, MR-SM-PKE allows users to independently gener-
ate their own public/private keys and can hence be used in
settings where a trusted third party is not available. Lastly,
note that the more general MR-MM-PKE is not comparable
to broadcast encryption as it supports encrypting diﬀerent
messages to the recipients.
2. PRELIMINARIES
2.1 Notation
We write [n] for {1, . . . , n} and use arrow notation for vec-
tors (e.g., (cid:126)a = (a1, . . . , an) if n = |(cid:126)a|). If A is a ﬁnite set,
we write a ←R A for sampling a uniformly from A. If A is
an algorithm, we write a ←R AO(x) for assigning to a the
outcome of an execution of A on input x with uniformly
picked random coins and oracle access to O.
In experi-
ments and algorithms we write “Require X” as a shortcut
for “Return ⊥ unless X”.
2.2 Static Difﬁe-Hellman Assumption
We recall the cyclic group setting and the static Diﬃe-
Hellman assumption.
Definition 1
(Group generator). A group genera-
tor G is an eﬃcient algorithm which, on input security pa-
rameter 1λ, returns the description of an eﬃcient prime-
order group G. We assume that the group order p and a
distinguished generating element g ∈ G are part of this de-
scription. We will use the notation (G, p, g) ←R G(1λ) ac-
cordingly.
Definition 2
Let G be a group
generator. The advantage of an algorithm A in solving the
static Diﬃe-Hellman problem with respect to G is deﬁned as
(SDH assumption).
AdvSDHG,A(λ) =
(cid:104)
Z ←R AOu,Ov (G, p, g, gu, gv) : Z = guv(cid:105)
(G, p, g) ←R G(1λ); u ←R Zp; v ←R Zp;
,
Pr
where Ou(·,·) and Ov(·,·) are decisional oracles which on
input X, Y ∈ G return 1 if and only if X u = Y , and if and
only if X v = Y , respectively. The probability is taken over
the random coins used to sample u and v and those con-
sumed by G and A. The static Diﬃe-Hellman assumption
holds with respect to G if for all eﬃcient algorithms A the
advantage function AdvSDHG,A(λ) is negligible in λ.
2.3 Data Encapsulation Mechanisms
The concept of hybrid encryption and the related notion
of data encapsulation was ﬁrst introduced in [9]. We recall
the deﬁnition and one of the possible security deﬁnitions.
Definition 3
(Data encapsulation mechanism). A
data encapsulation mechanism (DEM) D = (K, DEM, DEM−1)
consists of a keyspace K = {0, 1}l(λ), for a polynomial l in
the security parameter, and two eﬃcient algorithms as fol-
lows:
• DEM(K, m). On input a key K ∈ K and a message
m ∈ {0, 1}∗, this algorithm returns a ciphertext c.
• DEM−1(K, c). On input a key K ∈ K and a ciphertext
c, this algorithm returns either a message m or the
error symbol ⊥.
A DEM is correct if for all K ∈ K and all m ∈ {0, 1}∗ we
have DEM−1(K, DEM(K, m)) = m.
Definition 4
(One-time CCA security).
A DEM
D = (K, DEM, DEM−1) is said to be indistinguishable against
a one-time chosen ciphertext attack (IND-OT-CCA) if for all
eﬃcient adversaries A = (A1,A2) interacting in the exper-
iments ExptIND-OT-CCA,b
from Figure 1 the following advan-
tage function is negligible in λ,
D,A
(cid:12)(cid:12)(cid:12)(cid:12)Pr