(w + 11)R point multiplications for a single permutation call,
whereas the proof consists of (w + 3) group elements and
2w ﬁeld elements. This might bring a 25-40x increase in
performance depending on w.
6.2.4 RedShift
RedShift [41] is a STARK-inspired proof system which works
with an arbitrary set of constraints. It can be viewed as
PLONK with pairing-based polynomial commitments with
the trusted setup being replaced by Reed-Solomon trust-
less commitments. The RedShift proof is cλ logd2 KB large,
where d is the degree of the circuit polynomials and cλ ≈ 2.5
for a 120-bit security. Due to similarity, we can make the
same optimizations as in PLONK, so that the entire Merkle
tree proof requires polynomials of degree 4800 for width 5,
resulting in the entire proof being around 12 KB in size. Un-
fortunately, no RedShift library is publicly available so far,
and hence we could not measure the actual performance.
6.3 Comparison with Other Hash Algorithms
Unfortunately, no zero-knowledge system implementation
contains all the primitives we want to compare with. How-
ever, for all systems we are interested it, the prover perfor-
mance increases monotonically (and in practice, almost lin-
early) with the number of multiplications or, equivalently,
with the number of R1CS constraints. We thus provide a sum-
mary of constraint counts for various hash functions in the
concrete case of a Merkle tree with 230 elements in Table 4.
We take Blake2s and Pedersen hash estimates from [38], the
SHA-256 count from Hopwood’s notes15, whereas for MiMC
and Rescue we calculated them ourselves based on the round
numbers provided in [4, 6]. The table implies that POSEIDON
and Rescue should have the fastest provers, which is also
conﬁrmed for the STARK case [11]. However, Rescue has a
slower performance in the non-ZK case (Table 1).
6.4 STARKs with POSEIDONπ
ZK-STARKs [9] is a proof system for the computational
integrity, which is not vulnerable to quantum computers and
does not use a trusted setup. STARKs operate with programs
whose internal state can be represented as a set of w registers,
each belonging to a binary ﬁeld GF(2n) or to a 2n-subgroup G
of a prime-order group (this is our primary case, as the scalar
ﬁelds of BLS12-381 and BN254 have such a big subgroup).
The program execution is then represented as a set of T inter-
nal states. The computational integrity is deﬁned as the set
of all wT registers satisfying certain s polynomial equations
(constraints) of degree d.
STARK Costs. According to [51], the number of con-
straints does not play a major role in the prover, veriﬁer, or
communication complexity, which are estimated as follows:
• 8w· T · d · log(wT ) operations in G for the prover,
• a prover memory in Ω (w· T · n), and
• a communication (veriﬁer time) of n· (m + log2(8T d)),
where m is the maximum number of variables in a constraint
polynomial.
The primitive POSEIDONπ can be represented as such a pro-
gram with few registers, a small number of steps, and low
15https://www.zfnd.org/zcon/0/workshop-notes/Zcon0%20Cir
cuit%20Optimisation%20handout.pdf
532    30th USENIX Security Symposium
USENIX Association
degree. Following the same approach as for SNARKs in Sec-
tion 6.2, we keep in registers only S-box inputs and the per-
mutation outputs. Setting w = t, we get T = RF +(cid:100)RP/t(cid:101) and
wT = tRF + RP. Thus, the complexity is as follows:
• 24(tRF + RP)· log2(tRF + RP) operations in G for the
prover,
• a prover memory in Ω (63· (tRF + RP)), and
• a
(veriﬁer
time)
communication
2(24(tRF + RP))).
log2
of 63 · (t +
We suggest t ∈ {3,5} in order to support the same Merkle tree
cases as before. Thus, for our primary instance POSEIDON-
128, we get an AET cost of 20540 for each permutation call
for a width of 3. As we process 510 bits per call, we obtain
a prover complexity of 40 operations per bit. For a width
of 5 we get an AET cost of 38214, which translates to 38
operations per bit in G.
7 Acknowledgements
This work is partially supported by the Ethereum founda-
tion, Starkware Ltd, and IOV42 Ltd. We thank Alexander
Vlasov, Lovesh Harshandani, and Carlos Perez for bench-
marking POSEIDON in various environments. This work
was also supported by the EUH2020 European Union’s
Horizon 2020 research and innovation programme (https:
//ec.europa.eu/programmes/horizon2020/en) under
grant agreement 871473 (KRAKEN).
References
[1] C++ library for zkSNARK. https://github.com/s
cipr-lab/libsnark.
[2] 2019. Mike Lodder, Sovrin’s principal cryptographer
www.sovrin.org, private communication.
[3] Martin R. Albrecht, Carlos Cid, Lorenzo Grassi, Dmitry
Khovratovich, Reinhard Lüftenegger, Christian Rech-
berger, and Markus Schofnegger. Algebraic Cryptanaly-
sis of STARK-Friendly Designs: Application to MAR-
In ASIACRYPT 2019, volume
VELlous and MiMC.
11923 of LNCS, pages 371–397, 2019.
[4] Martin R. Albrecht, Lorenzo Grassi, Christian Rech-
berger, Arnab Roy, and Tyge Tiessen. MiMC: Efﬁcient
Encryption and Cryptographic Hashing with Minimal
Multiplicative Complexity. In ASIACRYPT 2016, vol-
ume 10031 of LNCS, pages 191–219, 2016.
[5] Martin R. Albrecht, Christian Rechberger, Thomas
Schneider, Tyge Tiessen, and Michael Zohner. Ciphers
for MPC and FHE. In EUROCRYPT 2015, volume 9056
of LNCS, pages 430–454, 2015.
[6] Abdelrahaman Aly, Tomer Ashur, Eli Ben-Sasson,
Siemen Dhooghe, and Alan Szepieniec. Design of
symmetric-key primitives for advanced cryptographic
protocols. Cryptology ePrint Archive, Report 2019/426,
2019. https://eprint.iacr.org/2019/426.
[7] Scott Ames, Carmit Hazay, Yuval Ishai, and Muthura-
makrishnan Venkitasubramaniam. Ligero: Lightweight
sublinear arguments without a trusted setup. In CCS,
pages 2087–2104. ACM, 2017.
[8] Tomer Ashur and Siemen Dhooghe. Marvellous: a stark-
friendly family of cryptographic primitives. Cryptology
ePrint Archive, Report 2018/1098, 2018. https://ep
rint.iacr.org/2018/1098.
[9] Eli Ben-Sasson, Iddo Bentov, Yinon Horesh, and
Michael Riabzev. Scalable zero knowledge with no
trusted setup. In CRYPTO (3), volume 11694 of LNCS,
pages 701–732. Springer, 2019.
[10] Eli Ben-Sasson, Alessandro Chiesa, Eran Tromer, and
Madars Virza. Succinct non-interactive zero knowl-
edge for a von neumann architecture. In USENIX Secu-
rity Symposium, pages 781–796. USENIX Association,
2014.
[11] Eli Ben-Sasson, Lior Goldberg, and David Levit. Stark
friendly hash – survey and recommendation. Cryptology
ePrint Archive, Report 2020/948, 2020. https://epri
nt.iacr.org/2020/948.
[12] Guido Bertoni, Joan Daemen, Michaël Peeters, and
Gilles Van Assche. On the Indifferentiability of the
Sponge Construction. In EUROCRYPT 2008, volume
4965 of LNCS, pages 181–197, 2008.
[13] Guido Bertoni, Joan Daemen, Michaël Peeters, and
Gilles Van Assche. Duplexing the sponge: Single-pass
authenticated encryption and other applications. In Se-
lected Areas in Cryptography, volume 7118 of LNCS,
pages 320–337. Springer, 2011.
[14] Tim Beyne, Anne Canteaut, Itai Dinur, Maria Eichlseder,
Gregor Leander, Gaëtan Leurent, María Naya-Plasencia,
Léo Perrin, Yu Sasaki, Yosuke Todo, and Friedrich
Wiemer. Out of Oddity – New Cryptanalytic Techniques
against Symmetric Primitives Optimized for Integrity
Proof Systems. In Advances in Cryptology - CRYPTO
2020, volume 12172 of LNCS, pages 299–328. Springer,
2020.
[15] Eli Biham, Alex Biryukov, and Adi Shamir. Cryptanaly-
sis of Skipjack Reduced to 31 Rounds Using Impossible
Differentials. In EUROCRYPT 1999, volume 1592 of
LNCS, pages 12–23, 1999.
USENIX Association
30th USENIX Security Symposium    533
[16] Eli Biham and Adi Shamir. Differential Cryptanalysis
of DES-like Cryptosystems. Journal of Cryptology,
4(1):3–72, 1991.
[17] Eli Biham and Adi Shamir. Differential Cryptanalysis
of the Data Encryption Standard. Springer, 1993.
[18] Christina Boura, Anne Canteaut, and Christophe De
Cannière. Higher-Order Differential Properties of Kec-
cak and Luffa. In FSE 2011, volume 6733 of LNCS,
pages 252–269, 2011.
[19] Benedikt Bünz, Jonathan Bootle, Dan Boneh, Andrew
Poelstra, Pieter Wuille, and Gregory Maxwell. Bullet-
proofs: Short proofs for conﬁdential transactions and
more. In IEEE Symposium on Security and Privacy,
pages 315–334. IEEE Computer Society, 2018.
oecumenical noninteractive arguments of knowledge.
IACR Cryptology ePrint Archive, 2019:953, 2019.
[28] Víctor Gayoso Martínez, Luis Hernández Encinas, and
Carmen Sánchez Ávila. A survey of the elliptic curve
integrated encryption scheme. 2010. available at https:
//core.ac.uk/download/pdf/36042967.pdf.
[29] Irene Giacomelli, Jesper Madsen, and Claudio Orlandi.
ZKBoo: Faster Zero-Knowledge for Boolean Circuits.
In USENIX Security Symposium, pages 1069–1083.
USENIX Association, 2016.
[30] Lorenzo Grassi, Dmitry Khovratovich, Arnab Roy,
Christian Rechberger, and Markus Schofnegger. Posei-
don: A New Hash Function for Zero-Knowledge Proof
Systems. IACR Cryptol. ePrint Arch., 2019:458, 2019.
[20] Jan Camenisch, Markulf Kohlweiss, and Claudio Sori-
ente. An accumulator based on bilinear maps and efﬁ-
cient revocation for anonymous credentials. In Public
Key Cryptography, volume 5443 of LNCS, pages 481–
500. Springer, 2009.
[31] Lorenzo Grassi, Reinhard Lüftenegger, Christian Rech-
berger, Dragos Rotaru, and Markus Schofnegger. On a
Generalization of Substitution-Permutation Networks:
The HADES Design Strategy. In EUROCRYPT 2020,
volume 12106 of LNCS, pages 674–704, 2020.
[21] Jan Camenisch and Anna Lysyanskaya. Dynamic Ac-
cumulators and Application to Efﬁcient Revocation of
In CRYPTO 2002, volume
Anonymous Credentials.
2442 of LNCS, pages 61–76. Springer, 2002.
[32] Lorenzo Grassi, Christian Rechberger, and Sondre Røn-
jom. Subspace Trail Cryptanalysis and its Applications
to AES. IACR Trans. Symmetric Cryptol., 2016(2):192–
225, 2016.
[22] Melissa Chase, David Derler, Steven Goldfeder, Clau-
dio Orlandi, Sebastian Ramacher, Christian Rechberger,
Daniel Slamanig, and Greg Zaverucha. Post-quantum
zero-knowledge and signatures from symmetric-key
primitives. In CCS, pages 1825–1842. ACM, 2017.
[23] Alessandro Chiesa, Yuncong Hu, Mary Maller, Pratyush
Mishra, Noah Vesely, and Nicholas Ward. Marlin: Pre-
processing zksnarks with universal and updatable srs.
In Anne Canteaut and Yuval Ishai, editors, Advances
in Cryptology – EUROCRYPT 2020, pages 738–768,
Cham, 2020. Springer International Publishing.
[24] David A. Cox, John Little, and Donal O’Shea. Ideals,
varieties, and algorithms - an introduction to compu-
tational algebraic geometry and commutative algebra
(2. ed.). Undergraduate texts in mathematics. Springer,
1997.
[25] Joan Daemen and Vincent Rijmen. The wide trail design
strategy. In IMACC, volume 2260 of LNCS, pages 222–
238. Springer, 2001.
[26] Joan Daemen and Vincent Rijmen. The Design of Rijn-
dael: AES - The Advanced Encryption Standard. Infor-
mation Security and Cryptography. Springer, 2002.
[27] Ariel Gabizon, Zachary J. Williamson, and Oana Ciob-
otaru. PLONK: permutations over lagrange-bases for
[33] Lorenzo Grassi, Christian Rechberger, Dragos Rotaru,
Peter Scholl, and Nigel P Smart. MPC-friendly sym-
metric key primitives. In CCS, pages 430–443. ACM,
2016.
[34] Lorenzo Grassi, Christian Rechberger, and Markus
Schofnegger. Weak Linear Layers in Word-Oriented
Partial SPN and HADES-Like Schemes. Cryptology
ePrint Archive, Report 2020/500, 2020. https://epri
nt.iacr.org/2020/500.
[35] Jens Groth. On the size of pairing-based non-interactive
In EUROCRYPT 2016, volume 9666 of
arguments.
LNCS, pages 305–326. Springer, 2016.
[36] Jian Guo, Guohong Liao, Guozhen Liu, Meicheng Liu,
Kexin Qiao, and Ling Song. Practical Collision Attacks
against Round-Reduced SHA-3. Journal of Cryptology,
33(1):228–270, 2020.
[37] Martin Hell, Thomas Johansson, Alexander Maximov,
and Willi Meier. The Grain Family of Stream Ci-
In The eSTREAM Finalists, volume 4986 of
phers.
LNCS, pages 179–190. Springer, 2008.
[38] Daira Hopwood, Sean Bowe, Taylor Hornby, and Nathan
Wilcox. Zcash protocol speciﬁcation: Version 2020.1.14
[overwinter+sapling+blossom+heartwood+canopy].
Technical report, Zerocoin Electric Coin Company,
534    30th USENIX Security Symposium
USENIX Association
2019. available at https://github.com/zcash/zip
s/blob/master/protocol/protocol.pdf.
putation. In IEEE Symposium on Security and Privacy,
pages 238–252. IEEE Computer Society, 2013.
[50] Vincent Rijmen, Joan Daemen, Bart Preneel, Antoon
Bosselaers, and Erik De Win. The cipher SHARK. In
Fast Software Encryption – FSE 1996, volume 1039 of
LNCS, pages 99–111. Springer, 1996.
[51] StarkWare Industries Ltd. The complexity of STARK-
friendly cryptographic primitives. Private communica-
tion, 2018.
[52] Gavin Wood et al. Ethereum: A secure decentralised
generalised transaction ledger. ethereum project yellow
paper.(2014), 2014.
[53] A. M. Youssef, S. Mister, and S. E. Tavares. On the
Design of Linear Transformations for Substitution Per-
mutation Encryption Networks. In School of Computer
Science, Carleton University, pages 40–48, 1997.
[39] Thomas Jakobsen and Lars R. Knudsen. The Interpo-
lation Attack on Block Ciphers. In FSE 1997, volume
1267 of LNCS, pages 28–40, 1997.
[40] Aniket Kate, Gregory M. Zaverucha, and Ian Goldberg.
Constant-size commitments to polynomials and their
applications. In ASIACRYPT, volume 6477 of LNCS,
pages 177–194. Springer, 2010.
[41] Assimakis Kattis, Konstantin Panarin, and Alexander
Vlasov. Redshift: Transparent snarks from list poly-
nomial commitment iops. Cryptology ePrint Archive,
Report 2019/1400, 2019. https://eprint.iacr.or
g/2019/1400.
[42] Nathan Keller and Asaf Rosemarin. Mind the Middle
Layer: The HADES Design Strategy Revisited. Cryp-
tology ePrint Archive, Report 2020/179, 2020. https:
//eprint.iacr.org/2020/179.
[43] Lars R. Knudsen. Truncated and Higher Order Differ-
In FSE 1994, volume 1008 of LNCS, pages
entials.
196–211, 1994.
[44] Mario Lamberger, Florian Mendel, Christian Rech-
berger, Vincent Rijmen, and Martin Schläffer. Rebound
Distinguishers: Results on the Full Whirlpool Compres-
sion Function. In ASIACRYPT 2009, volume 5912 of
LNCS, pages 126–143, 2009.
[45] F. J. MacWilliams and N. J. A. Sloane. The Theory
of Error-Correcting Codes. North-holland Publishing
Company, 1978.
[46] Mary Maller, Sean Bowe, Markulf Kohlweiss, and Sarah
Meiklejohn.
Sonic: Zero-knowledge snarks from
linear-size universal and updatable structured reference
strings.
In Lorenzo Cavallaro, Johannes Kinder, Xi-
aoFeng Wang, and Jonathan Katz, editors, Proceedings
of the 2019 ACM SIGSAC Conference on Computer
and Communications Security, CCS 2019, London, UK,
November 11-15, 2019, pages 2111–2128. ACM, 2019.
URL: https://doi.org/10.1145/3319535.333981
7, doi:10.1145/3319535.3339817.
[47] Mitsuru Matsui. Linear Cryptanalysis Method for DES
Cipher. In EUROCRYPT 1993, volume 765 of LNCS,
pages 386–397, 1993.
[48] Florian Mendel, Christian Rechberger, Martin Schläffer,
and Søren S. Thomsen. The Rebound Attack: Crypt-
analysis of Reduced Whirlpool and Grøstl. In FSE 2009,
volume 5665 of LNCS, pages 260–276, 2009.
[49] Bryan Parno, Jon Howell, Craig Gentry, and Mariana
Raykova. Pinocchio: Nearly practical veriﬁable com-
USENIX Association
30th USENIX Security Symposium    535