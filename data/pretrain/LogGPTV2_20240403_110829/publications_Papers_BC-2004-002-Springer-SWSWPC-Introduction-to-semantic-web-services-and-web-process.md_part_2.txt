service operation is annotated using an ontology, then the added data semantics can be
used in matching the semantics of the input/output data of the Web service with the
semantics of the input/output data of the requirements.
The Meteor-S Web Service Annotation Framework (MWSAF) [13] provides a
framework and a tool to achieve automatic and semi-automatic annotation of web
services using ontologies.
Figure 3 illustrates one solution to annotate WSDL interfaces with semantic meta-
data based on relevant ontologies [14]. A Web service invocation stipulate an input
interface that specifies the number of input parameters that must be supplied for a
proper Web service realization and an output interface that specifies the number of
outputs parameters to hold and transfer the results of the Web service realization to
other services.
Fig. 3. Semantic annotation of a Web service specified with WSDL
3.2 Semantic Web service Advertisement
After the service is developed and annotated, it has to be advertised to enable discov-
ery. The UDDI registry is supposed to open doors for the success of service oriented
computing leveraging the power of the Internet. Hence the discovery mechanism sup-
ported should scale to the magnitude of the Web by efficiently discovering relevant
services among tens and thousands (or millions according to the industry expectations)
of the Web services.
The present discovery supported by UDDI is inefficient as services retrieved may
be inadequate due to low precision (many services you do not want) and low recall
(missed the services you really need to consider). Effectively locating relevant ser-
vices and efficiently performing the search operation in a scalable way is what is re-
quired to accelerate the adoption of Web services. To meet this challenge, Web ser-
vice search engines and automated discovery algorithms need to be developed. The
discovery mechanisms supported need to be based on Web services profiles with
machine process-able semantics.
3.3 Semantic Web Service Discovery
This stage is the process of discovering appropriate services before selecting a specific
Web service to and binding it to a Web processes [15]. The search of Web services to
model e-commerce applications differs from the search of tasks to model traditional
processes. One of the main differences is in terms of the number of Web services
available to the composition process. In the Web, potentially thousands of Web ser-
vices are available. One of the problems that need to be solved is how to efficiently
discover Web services [10].
The discovery of Web services has specific requirements and challenges as com-
pared to previous work on information retrieval systems and information integration
systems. Several issues need to be considered:
• Precision of the discovery process. The search has to be based, not only on syn-
tactic information, but also on data, functional, and QoS semantics.
• Enable the automatic determination of the degree of integration of the discovered
Web services and a Web process host.
• The integration and interoperation of Web services differs from previous work on
schema integration due to the polarity of the schema that must be integrated [10].
Typically, a cluster of Web services that match initial requirements is constructed.
In the next phase (semantic Web service selection), we selected, from the cluster, the
Web service that more closely matches our requirements. The cluster which contains
the list of other services, which also match the requirements, is maintained. This is
because a service may be chosen later in case of failure or breach of contract.
3.4 Semantic Web service Selection
Web service selection is a need that is almost as important as service discovery. After
discovering Web services whose semantics match the semantics of the requirement,
the next step is to select the most suitable service. Each service can have different
quality aspect and hence service selection involves locating the service that provides
the best quality criteria match.
Service selection is also an important activity in Web service composition [10].
This demands management of QoS metrics for Web services. Web services in differ-
ent domains can have different quality aspects. These are called Domain Independent
QoS metrics. There can be some QoS criteria that can be applied to services in all
domains irrespective of their functionality or specialty. These are called Domain Spe-
cific QoS metrics. Both these kind of QoS metrics need shared semantics for interpret-
ing them as intended by the service provider. This could be achieved by having an
ontology (similar to an ontology used for data semantics) that defines the domain
specific and domain independent QoS metrics.
3.5 Semantic Process Composition
The power of Web services can be realized only when they are efficiently composed
into Web process. This requires a high degree of Interoperability among Web ser-
vices. Interoperability is a key issue in e-commerce because more and more compa-
nies are creating business-to-customer and business-to-business links to better manage
their value chain. In order for these links to be successful, heterogeneous systems from
multiple companies need to interoperate seamlessly. Automating inter-organizational
processes across supply chains presents significant challenges [16].
Compared to traditional process tasks, Web services are highly autonomous and
heterogeneous. Sophisticated methods are indispensable to support the composition of
Web process. Here again, one possible solution is to explore the use of semantics to
enhance interoperability among Web services.
This stage involves creating a representation of Web processes. Many languages
like BPEL4WS [17], BPML [18] and WSCI [19] have been suggested for this pur-
pose. The languages provide constructs for representing complex patterns [20] of Web
service compositions. While composing a process, four kinds of semantics have to be
taken into account. The process designer should consider the functionality of the par-
ticipating services (functional semantics), data that is passed between these services
(data semantics), the quality of these services, the quality of the process as a whole
(QoS semantics) and the execution pattern of these services, the pattern of the entire
process (Execution semantics). Since Web process composition involves all kind of
semantics, it may be understood that semantics play a critical role in the success of
Web services and in process composition.
3.6 Execution of Web processes
Web services and Web processes promise to ease several of nowadays infrastructure
challenges, such as data, application, and process integration. With the emergence of
Web services, workflow management systems (WfMSs) become essential to support,
manage, enact, and orchestrate Web processes, both between enterprises and within
the enterprise. Several researchers have identified workflows as the computing model
that enables a standard method of building Web process applications and processes to
connect and exchange information over the Web [21].
Execution semantics of a Web service encompasses the ideas of message sequence
(e.g., request-response, request-response), conversation pattern of Web service execu-
tion (peer-to-peer pattern, global controller pattern), flow of actions (sequence, paral-
lel, and loops), preconditions and effects of Web service invocation, etc.
Traditional formal mathematical models (Process Algebra [22]), concurrency for-
malisms (Petri Nets [23], state machines [24]) and simulation [25] techniques) can be
used to represent execution semantics of Web services. Formal modeling for workflow
scheduling and execution are also relevant [26]. With the help of execution semantics
process need not be statically bound to component Web services. Instead, based on
the functional and data semantics a list of Web services can be short listed, QoS se-
mantics can be used to select the most appropriate service, and execution semantics
the service can be bound to a process and used to monitor process execution.
3.7 Semantic Web Process QoS
New trading models, such as e-commerce, require the specification of QoS metrics
such as products or services to be delivered, deadlines, quality of products, and cost of
service. To enable adequate QoS management, research is required to develop mecha-
nisms that semantically specify, compute, monitor, and control the QoS of the prod-
ucts or services to be delivered [10, 27].
In e-commerce and e-business Web processes, suppliers and customers define a
binding agreement between the two parties, specifying QoS items such as services to
be delivered, deadlines, and cost of services. The management of QoS metrics of
semantic Web processes directly impacts the success of organizations participating in
e-commerce. Therefore, when services or products are created or managed using Web
processes, the underlying WfMS must accept the specifications and be able to esti-
mate, monitor, and control the QoS rendered to customers.
A comprehensive QoS model that allows the description of Web processes compo-
nents from a QoS perspective have already been developed [28]. One of the models
includes three dimensions: time, cost, and reliability. The QoS model is coupled with
an algorithm (the SWR algorithm [28]) to automatically compute the overall QoS of
Web processes. These developments can be easily applied to automatically compute
the duration, cost, and reliability of Web processes.
4. Ongoing Work
The industrial research related to semantic Web services depends on the ongoing
development of open standards that ensure interoperability between different imple-
mentations. Several initiatives have been conducted with the intention to provide plat-
forms and languages that will allow easy integration of heterogeneous systems. The
standardization efforts for the technologies that underlie Web services include Simple
Object Access Protocol (SOAP)[29], Web Services Description Language
(WSDL)[12], Universal Description, Discovery and Integration (UDDI)[30], and
process description languages, such as Business Process Execution Language for Web
Services (BPEL4WS)[17] (from Microsoft, IBM, BEA).
Recently, the Semantic Web Services Initiative (SWSI)[31], an initiative of aca-
demic and industrial researchers has been composed to create infrastructure that com-
bines Semantic Web and Web Services to enable the automation in all aspects of Web
services. In addition to providing further evolution of OWL-S [32], SWSI will also be
a forum for working towards convergence of OWL-S with the products of the
WSMO[33]/WSML[34]/WSMX[35] research effort.
WSMO is a complete ontology for the definition of Semantic Web Services. It fol-
lows the WSMF as a vision of Semantic Web Services. WSML is a family of lan-
guages that allow Semantic Web Service designers to define Semantic Web Services
in a formal language. The WSMX provides a standard architecture for the execution
of Semantic Web Services.
Besides these major standards and initiatives, there are two ongoing projects being
developed in the US, the LSDIS METEOR-S project [36], and in Europe, the DERI
SWWS project [37].
The METEOR-S (METEOR for Semantic Web services) project is focused on the
usage of semantics for the complete lifecycle of semantic Web processes, namely,
annotation, discovery, composition, and execution.
DERI [38] is currently working on a project titled Semantic Web enabled Web
Services (SWWS). DERI researchers recognize that to use the full potential of Web
services and the technology around UDDI, WSDL and SOAP, it is indispensable to
use semantics, since current technologies provide limited support for automating Web
service discovery, composition and execution. Important objectives of the SWWS
initiative include providing a richer framework for Web Service description and dis-
covery, as well as, providing scalable Web Service mediation middleware.
5. Conclusions
Systems and infrastructures are currently being developed to support Web services.
The main idea is to encapsulate an organization’s functionality within an appropriate
interface and advertise it as Web services.
While in some cases Web services may be utilized in an isolated form, it is normal
to expect Web services to be integrated as part of Web processes. There is a growing
consensus that Web services alone will not be sufficient to develop valuable Web
processes due the degree of heterogeneity, autonomy, and distribution of the Web.
For example, a new requirement for the travel industry is the ability to dynamically
compose travel packages from the aggregation and orchestration of distributed Web
services. Current approaches, using XML-based specification messages, are not suffi-
cient to enable the creation of dynamic travel packages. One solution is the use of
ontologies to overcome semantic problems that arise from the autonomy, heterogene-
ity, and distribution of Web services.
Several researchers agree that it is essential for Web services to be machine under-
standable in order to support all the phases of the lifecycle of Web processes. In this
paper we have presented a set of challenges that the emergence of semantic Web
processes has brought to organizations. Designing semantic Web processes entails
research in two areas: Web services and the Semantic Web. We have presented how
applying semantics to each of the steps in the Semantic Web Process lifecycle can
help address critical issues in reuse, integration and scalability.
References
1. Sheth, A.P., W.v.d. Aalst, and I.B. Arpinar, Processes Driving the Networked Economy.
IEEE Concurrency, 1999. 7(3): p. 18-31.
2. W3C, W3C Semantic Web Activity. http://www.w3.org/2001/sw/. 2004.
3. Uschold, M. and M. Gruninger, Ontologies: Principles, methods and applications. Knowl-
edge Engineering Review, 1996. 11(2): p. 93-155.
4. Gruber, T.R., Toward principles for the design of ontologies used for knowledge sharing.
International Journal of Human-Computer Studies, 1995. 43(5-6): p. 907-928.
5. OTA, OpenTravel Alliance. www.opentravel.org, 2004.
6. OWL, Web Ontology Language (OWL). http://www.w3.org/2004/OWL/, 2004, World
Wide Web Consortium (W3C).
7. Cardoso, J. and A.P. Sheth. Semantic Web Processes: Semantics Enabled Annotation, Dis-
covery, Composition and Orchestration of Web Scale Processes. in Fourth International
Conference on Web Information Systems Engineering (WISE'03). 2003. Roma, Italy.
8. Sivashanmugam, K., et al., Metadata and Semantics for Web Services and Processes, in
Datenbanken und Informationssysteme (Databases and Information Systems). Festschrift
zum 60. Geburtstag von Gunter Schlageter, W. Benn, et al., Editors. 2003: Hagen, Germany.
p. 245-271.
9. Paolucci, M., et al. Importing the Semantic Web in UDDI. in Proceedings Web Services, E-
Business and Semantic Web Workshop, CAiSE 2002. 2002. Toronto, Canada.
10. Cardoso, J. and A. Sheth, Semantic e-Workflow Composition. Journal of Intelligent Infor-
mation Systems (JIIS). 2003. 21(3): p. 191-225.
11. Graham, S., et al., Building Web Services with Java: Making Sense of XML, SOAP,
WSDL, and UDDI. 2002: SAMS.
12. Christensen, E., et al., W3C Web Services Description Language (WSDL).
http://www.w3c.org/TR/wsdl, 2001.
13. Patil, A., et al. MWSAF - METEOR-S Web Service Annotation Framework. in 13th Con-
ference on World Wide Web. 2004. New York City, USA.
14. Cardoso, J., F. Curbera, and A. Sheth. Tutorial: Service Oriented Archiectures and Seman-
tic Web Processes. in The Thirteenth International World Wide Web Conference
(WWW2004). 2004. New York, USA.
15. Verma, K., et al., METEOR-S WSDI: A Scalable Infrastructure of Registries for Semantic
Publication and Discovery of Web Services. Journal of Information Technology and Man-
agement (in print), 2004.
16. Stohr, E.A. and J.L. Zhao, Workflow Automation: Overview and Research Issues. Informa-
tion Systems Frontiers, 2001. 3(3): p. 281-196.
17. BPEL4WS, Web Services. http://www-106.ibm.com/developerworks/webservices/, 2002,
IBM.
18. BPML, Business Process Modeling Language. http://www.bpmi.org/, 2004.
19. WSCI, Web Service Choreography Interface (WSCI) 1.0. http://www.w3.org/TR/wsci/,
2002, World Wide Web Consortium (W3C).
20. Aalst, W.M.P.v.d., et al. Advanced Workflow Patterns. in Seventh IFCIS International
Conference on Cooperative Information Systems. 2000.
21. Fensel, D. and C. Bussler, The Web Service Modeling Framework.
http://www.cs.vu.nl/~dieter/ftp/paper/wsmf.pdf, 2002, Vrije Universiteit Amsterdam (VU)
and Oracle Corporation.
22. Bergstra, J.A., A. Ponse, and S.A. Smolka, Handbook of Process Algebra. 2001: Elsevier.
23. Aalst, W.M.P.v.d., The Application of Petri Nets to Workflow Management. The Journal of
Circuits, Systems and Computers, 1998. 8(1): p. 21-66.
24. Hopcroft, J.E., R. Motwani, and J.D. Ullman, Introduction to Automata Theory, Lan-
guages, and Computation. 2000, Mass.: Addison-Wesley Publishing Company.
25. Bosilj, V., M. Stemberger, and J. Jaklic, Simulation Modelling Toward E-Business Models
Development. International Journal of Simulation Systems, Science & Technology, Special
Issue on: Business Process Modelling, 2001. 2(2): p. 16-29.
26. Attie, P., et al. Specifying and Enforcing Intertask Dependencies. in Proceedings 19th
Intlernational Conference on Very Large Data Bases. 1993. Dublin, Ireland: Morgan Kauf-
man.
27. Cardoso, J., A. Sheth, and J. Miller. Workflow Quality of Service. in International Confer-
ence on Enterprise Integration and Modeling Technology and International Enterprise Mod-
eling Conference (ICEIMT/IEMC’02). 2002. Valencia, Spain: Kluwer Publishers.
28. Cardoso, J., et al., Quality of service for workflows and web service processes. Web Se-
mantics: Science, Services and Agents on the World Wide Web Journal, 2004. 1(3): p. 281-
308.
29. SOAP, Simple Object Access Protocol 1.1. http://www.w3.org/TR/SOAP/, 2002.
30. UDDI, Universal Description, Discovery, and Integration. http://www.uddi.org/, 2002.
31. SWSI, Semantic Web Services Initiative (SWSI). http://www.swsi.org/, 2004.
32. OWL-S, OWL-based Web Service Ontology. http://www.daml.org/services/owl-s/, 2004.
33. WSMO, Web Services Modeling Ontology (WSMO). http://www.wsmo.org/, 2004.
34. WSML, Web Service Modeling Language (WSML).
http://www.wsmo.org/wsml/index.html, 2004.
35. WSMX, Web Services Execution Environment (WSMX). http://www.wsmx.org/, 2004.
36. LSDIS, METEOR-S: Semantic Web Services and Processes.
http://lsdis.cs.uga.edu/Projects/METEOR-S/index.php, 2004.
37. SWWS, Semantic Web Enabled Web Service. http://swws.semanticweb.org/, 2004, Digital
Enterprise Research Institute (DERI).
38. DERI, Digital Enterprise Research Institute (DERI). http://www.deri.ie/, 2004.