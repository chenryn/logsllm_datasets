 **TypeScript Version:**
1.8.2
**Background** :
I have been working on trying to get https://github.com/eslint/typescript-
eslint-parser, a TypeScript parser plugin for ESLint, off the ground, and the
current job is adding JSX support.
ESLint uses espree and so the aim of the project is to convert the output of
the tsc to an AST which espree expects. We already have a solid suite of JSX
tests to develop against (taken from the espree project itself).
We do make use of some helper TypeScript helper methods when converting the
AST, such as `ts.findNextToken()` and I believe I may have found an issue with
the way it handles **JsxText**
Given this JSX code:
    @test content;
...the TSC produces the AST we expect - with `@test content` represented as a
single JsxText node:
![unspecified-1](https://cloud.githubusercontent.com/assets/900523/13686212/afe93c4a-e70c-11e5-8ce1-36a54a2094ab.png)
However, when iterating through the AST using `ts.findNextToken()`, rather
than a single JsxText node, we get a node for `@`, `test` and `content`
separately.
Upon quick inspection of the source I noticed that the related function,
`ts.findPrecedingToken()`, was doing an early check for a JsxText node type,
whereas `ts.findNextToken()` wasn't.
(See
https://github.com/Microsoft/TypeScript/blob/master/src/services/utilities.ts#L338
vs
https://github.com/Microsoft/TypeScript/blob/master/src/services/utilities.ts#L364)
Sure enough when I monkey patched the relevant bit of typescript.js to exit
early if n.kind was JsxText, a single JsxText token was recognised for `@test
content`, and my test passed.
If you agree that this is a bug, then I would be very happy submit a PR,
otherwise any tips on how I might have arrived at this false positive would be
very much appreciated!