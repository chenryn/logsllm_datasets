### Detailed Analysis of Performance Improvements

From Figure 10, which provides a more detailed breakdown of the results, we observe that the average frame rate (FPS) improves from 1.30 FPS on devices running Boxer Android to 4.07 FPS on devices running Daredevil Android. Additionally, the average success rate increases from 46.72% to 88.46% on Android. On iOS, the success rate also improves, from 88.60% on Boxer iOS to 89.13% on Daredevil iOS. Furthermore, the average scan duration decreases from 15.45 seconds to 10.55 seconds on Android and from 10.02 seconds to 9.37 seconds on iOS.

In our system, the scan duration timer starts when the user clicks the "scan card" button and stops after the scan is complete. This includes the time taken for accepting camera permissions, pulling the card out of the wallet, scanning the card, and a 1.5-second voting phase for error correction in the main loop.

### Usability and Frame Rate

Daredevil significantly enhances the usability of card scanning. As shown in Figure 11, only 4.88% of Android phones running Daredevil process fewer than 1 FPS, compared to 44.61% with Boxer Android. The success rate for Android devices with less than 1 FPS (37.92%) is lower than the overall success rate for Android (88.46%). However, the overall increase in devices capable of running Daredevil at 1 FPS or higher leads to a higher overall success rate (Figures 10 and 11).

Figure 11 also indicates that as the frame rate increases, the overall success rate improves for both Boxer and Daredevil. Beyond 1 FPS, the success rate for Daredevil rises sharply compared to Boxer. This can be attributed to Daredevil being trained with significantly more data (Section VI-E), the use of an efficient machine learning pipeline (Section V-D), and marginal improvements from the updated back-end network (Section VI-E). While Boxer could benefit from these improvements, a significant portion of Android devices (44.61%) operate below 1 FPS, limiting the potential gains. Daredevil reduces this number to 4.88%, resulting in significantly higher overall success rates.

### Fraud Detection in Real-World Scenarios

To evaluate Daredevil's real-time fraud detection capabilities, we analyzed data from a large international app deploying our SDK over a 3-month test period. During this period, the app flagged 12,474 transactions as suspicious and challenged them with Daredevil to verify the payment method. Daredevil passed 7,612 transactions and blocked 4,862. Of the 7,612 transactions passed by Daredevil, only 12 resulted in chargebacks, leading to a false negative rate of 0.16%. We are unable to report the false positive rate as the app did not share this data with us. Based on these results, the app has decided to deploy Daredevil.

To determine if Daredevil's fraud decisions are correlated with device frame rates, we analyzed the performance characteristics of the passed and blocked devices. The average frame rate for devices that Daredevil passed was 1.84 FPS, and for those it blocked, it was 1.94 FPS, indicating that frame rates are not a significant factor in fraud detection. Figure 12 visualizes these results, showing similar CDF plots for both groups, further confirming that frame rate is not a discriminating factor.

### False Positive Rate Evaluation

To evaluate Daredevil's false positive rate, we conducted an experiment with four authors scanning 105 cards in a lab setting using the latest production anti-fraud models as of December 2020. In this experiment, we recorded the number of scans incorrectly flagged as fraudulent. Out of 310 scans, Daredevil incorrectly flagged seven scans, resulting in a false positive rate of 2.2%. The false positives were uniformly distributed across all devices, indicating that Daredevil does not unfairly favor well-provisioned or resource-constrained devices. Six of the seven false positives were transient, and the other card was consistently flagged incorrectly by our fake media detection model.

### Impact of Redundancy on Accuracy

We evaluated the effectiveness of our redundancy-based decomposition strategy (described in Section V-D) in aiding fraud detection. Specifically, we assessed the accuracy gains from executing our card tampering detection and fake media detection models in the completion loop. A user study was conducted with and without the card detection model in the main loop to show how it benefits the models running in the completion loop. Users participating in the study randomly ran one of two versions of our app and scanned 30 different predetermined credit card images. The results, summarized in Figure 13, show that the card detection model reduced errors in the card tampering detection model and improved the accuracy of the fake media detection model.

### Impact of Back-End Networks and Data Augmentation

To quantify the impact of back-end networks, we validated our models on image frames extracted from videos. Figure 14 compares the model parameters and accuracy metrics using MobileNet V1 and MobileNet V2 back-ends. Using MobileNet V2 instead of MobileNet V1 resulted in a slight reduction in the number of parameters, with no decrease in precision and a marginal decrease in recall. To assess the impact of data augmentation, we trained Daredevil OCR with varying amounts of training data generated using a custom GAN architecture and standard data augmentation techniques. The results, shown in Figure 15, indicate that high-fidelity synthetic data and efficient back-end networks contribute to achieving the desired accuracy and frame rate.

### Conclusion

In summary, Daredevil's architecture and the use of high-fidelity synthetic data enable us to achieve the desired frame rate and accuracy. Our system provides significant improvements in usability and fraud detection, making it a robust solution for real-world applications.