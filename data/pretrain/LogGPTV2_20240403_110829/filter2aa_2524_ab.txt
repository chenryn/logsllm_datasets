OO0OOOO0000OO00OO[O0O0OO0OO00OOOOO0] = OO0OOOO0000OO00OO[O0O0OO0OO00OOOOO0], 
OO0OOOO0000OO00OO[O00OOOOOOO00OO00O]
            O0O0OOOO0OOOOO0OO = 
OO0OOOO0000OO00OO[((OO0OOOO0000OO00OO[O00OOOOOOO00OO00O] + 
OO0OOOO0000OO00OO[O0O0OO0OO00OOOOO0]) % 256)]
            OO0OOO000000OO0O0.append(chr(ord(O0000O0OOO000OO0O) ^ 
O0O0OOOO0OOOOO0OO))
        else:
            return ''.join(OO0OOO000000OO0O0)
def func(O0O0O0OO00O00OOO0):
    O000OOOO0O00OO000 = rc4(O0O0O0OO00O00OOO0)
    if O000OOOO0O00OO000.encode('utf-8').hex() == 
'275b39c381c28b701ac3972338456022c2ba06c3b04f5501471c47c38ac380c29b72c3b5c38a7e
c2a5c2a0':
        return 'YOU WIN'
    return 'YOU LOSE'
def main():
    pygame.init()
    O00O000OOO000000O = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
    pygame.display.set_caption('')
    O00OOO0O00OOO000O = pygame.font.SysFont('SimHei', 24)
    OO0OO000OO0O0O00O = pygame.font.Font(None, 72)
    OOOO00OO0O0O00000, OO00O00OOOOO000O0 = OO0OO000OO0O0O00O.size('GAME OVER')
    O0000O000OOOO0OO0 = True
    OO0O000000OO0O000 = init_snake()
    OOOO00OOO00O0O0OO = create_food(OO0O000000OO0O000)
    OOO00OO000000O000 = get_food_style()
    O00OOOO00O0O0OO0O = (1, 0)
    O0OO0000O000OOO00 = True
    OO000OOO0O000O00O = False
    O0OO0OO0O0O000O00 = 0
    OOO0OOOOOO0O0OOO0 = 0.5
    OOO00OOO0O0O00OOO = OOO0OOOOOO0O0OOO0
    OOOOOOO0O0OO0OO00 = False 
    OO000OOOOO00O00OO = False
    for OOOO0OO00000OO00O in pygame.event.get():
        if OOOO0OO00000OO00O.type == QUIT:
            sys.exit()
        elif OOOO0OO00000OO00O.type == KEYDOWN:
            if OOOO0OO00000OO00O.key == K_RETURN:
                if O0OO0000O000OOO00:
                    OO000OOO0O000O00O = True
                    O0OO0000O000OOO00 = False
                    O0000O000OOOO0OO0 = True
                    OO0O000000OO0O000 = init_snake()
                    OOOO00OOO00O0O0OO = create_food(OO0O000000OO0O000)
                    OOO00OO000000O000 = get_food_style()
                    O00OOOO00O0O0OO0O = (1, 0)
                    O0OO0OO0O0O000O00 = 0
                    OOOOOOO0O0OO0OO00 = time.time()
            elif OOOO0OO00000OO00O.key == K_SPACE:
                if not O0OO0000O000OOO00:
                    OO000OOOOO00O00OO = not OO000OOOOO00O00OO
            elif OOOO0OO00000OO00O.key in (K_w, K_UP):
                if O0000O000OOOO0OO0:
                    O00OOOO00O0O0OO0O = O00OOOO00O0O0OO0O[1] or (0, -1)
                    O0000O000OOOO0OO0 = False
            elif OOOO0OO00000OO00O.key in (K_s, K_DOWN):
                if O0000O000OOOO0OO0:
                    O00OOOO00O0O0OO0O = O00OOOO00O0O0OO0O[1] or (0, 1)
                    O0000O000OOOO0OO0 = False
            elif OOOO0OO00000OO00O.key in (K_a, K_LEFT):
                if O0000O000OOOO0OO0:
                    if not O00OOOO00O0O0OO0O[0]:
                        O00OOOO00O0O0OO0O = (-1, 0)
                        O0000O000OOOO0OO0 = False
                    elif OOOO0OO00000OO00O.key in (K_d, K_RIGHT):
                        if O0000O000OOOO0OO0:
                            if not O00OOOO00O0O0OO0O[0]:
                                O00OOOO00O0O0OO0O = (1, 0)
                                O0000O000OOOO0OO0 = False
        else:
            O00O000OOO000000O.fill(BGCOLOR)
            for O00O0OOOO0OO0000O in range(SIZE, SCREEN_WIDTH, SIZE):
                pygame.draw.line(O00O000OOO000000O, BLACK, (O00O0OOOO0OO0000O, 
SCOPE_Y[0] * SIZE), (O00O0OOOO0OO0000O, SCREEN_HEIGHT), LINE_WIDTH)
            else:
                for OO0000O0000OO0000 in range(SCOPE_Y[0] * SIZE, 
SCREEN_HEIGHT, SIZE):
                    pygame.draw.line(O00O000OOO000000O, BLACK, (0, 
OO0000O0000OO0000), (SCREEN_WIDTH, OO0000O0000OO0000), LINE_WIDTH)
                else:
                    O0O0O0O00OOO0OOO0 = O0OO0000O000OOO00 or time.time()
            if O0O0O0O00OOO0OOO0 - OOOOOOO0O0OO0OO00 > OOO00OOO0O0O00OOO and 
not OO000OOOOO00O00OO:
                O0000O000OOOO0OO0 = True
                OOOOOOO0O0OO0OO00 = O0O0O0O00OOO0OOO0
                O0O00OO0OO000OOOO = (OO0O000000OO0O000[0][0] + 
O00OOOO00O0O0OO0O[0], OO0O000000OO0O000[0][1] + O00OOOO00O0O0OO0O[1])
                if O0O00OO0OO000OOOO == OOOO00OOO00O0O0OO:
                    OO0O000000OO0O000.appendleft(O0O00OO0OO000OOOO)
                    O0OO0OO0O0O000O00 += OOO00OO000000O000[0]
                    OOO00OOO0O0O00OOO = OOO0OOOOOO0O0OOO0 - 0.03 * 
(O0OO0OO0O0O000O00 // 100)
                    OOOO00OOO00O0O0OO = create_food(OO0O000000OO0O000)
                    OOO00OO000000O000 = get_food_style()
                else:
                    if SCOPE_X[0] = 5192296858534827628530496329220096:
                        OO0O0OO0OO0O0000O = flag
                        print_text(O00O000OOO000000O, OO0OO000OO0O0O00O, 
(SCREEN_WIDTH - OOOO00OO0O0O00000) // 2, (SCREEN_HEIGHT - OO00O00OOOOO000O0) // 
2, func(OO0O0OO0OO0O0000O), RED)
                    if O0OO0000O000OOO00:
                        if OO000OOO0O000O00O:
                            print_text(O00O000OOO000000O, OO0OO000OO0O0O00O, 
(SCREEN_WIDTH - OOOO00OO0O0O00000) // 2, (SCREEN_HEIGHT - OO00O00OOOOO000O0) // 
2, 'GAME OVER', RED)
                    pygame.display.update()
if __name__ == '__main__':
    main()
flagRC4RC4Flag Python3Python2
UTF-8
# -*- coding: utf-8 -*-
import base64
import fuckpy3
DEFAULT_KEY = 'Yó\x02Ã%\x9a\x820\x0b»%\x7f~;ÒÜ'
def rc4(O0O0O0000O0OOOO0O, key=DEFAULT_KEY, skip=1024):
    O00OOOOOOO00OO00O = 0
    OO0OOOO0000OO00OO = bytearray([OO00OOOO0OOOOO00O for OO00OOOO0OOOOO00O in 
range(256)])
    O00OOOOOOO00OO00O = 0
    for OOOO000OOO00O000O in range(256):
        O00OOOOOOO00OO00O = (O00OOOOOOO00OO00O + 
OO0OOOO0000OO00OO[OOOO000OOO00O000O] + ord(key[(OOOO000OOO00O000O % 
len(key))])) % 256
        OO000O0O0OOOOO0OO = OO0OOOO0000OO00OO[OOOO000OOO00O000O]
        O000O0OO00O00000O = OO0OOOO0000OO00OO[O00OOOOOOO00OO00O]
        OO0OOOO0000OO00OO[OOOO000OOO00O000O] = 
OO0OOOO0000OO00OO[O00OOOOOOO00OO00O]
        OO0OOOO0000OO00OO[O00OOOOOOO00OO00O] = OO000O0O0OOOOO0OO
    else:
        O00OOOOOOO00OO00O = 0
        O0O0OO0OO00OOOOO0 = 0
        OO0OOO000000OO0O0 = []
        if skip > 0:
            for OOOO000OOO00O000O in range(skip):
                O00OOOOOOO00OO00O = (O00OOOOOOO00OO00O + 1) % 256
                O0O0OO0OO00OOOOO0 = (O0O0OO0OO00OOOOO0 + 
OO0OOOO0000OO00OO[O00OOOOOOO00OO00O]) % 256
                OO0OOOO0000OO00OO[O00OOOOOOO00OO00O], 
OO0OOOO0000OO00OO[O0O0OO0OO00OOOOO0] = OO0OOOO0000OO00OO[O0O0OO0OO00OOOOO0], 
OO0OOOO0000OO00OO[O00OOOOOOO00OO00O]
        for O0000O0OOO000OO0O in O0O0O0000O0OOOO0O:
            O00OOOOOOO00OO00O = (O00OOOOOOO00OO00O + 1) % 256
            O0O0OO0OO00OOOOO0 = (O0O0OO0OO00OOOOO0 + 
OO0OOOO0000OO00OO[O00OOOOOOO00OO00O]) % 256
            OO0OOOO0000OO00OO[O00OOOOOOO00OO00O], 
OO0OOOO0000OO00OO[O0O0OO0OO00OOOOO0] = OO0OOOO0000OO00OO[O0O0OO0OO00OOOOO0], 
OO0OOOO0000OO00OO[O00OOOOOOO00OO00O]
            O0O0OOOO0OOOOO0OO = 
OO0OOOO0000OO00OO[((OO0OOOO0000OO00OO[O00OOOOOOO00OO00O] + 
OO0OOOO0000OO00OO[O0O0OO0OO00OOOOO0]) % 256)]
            OO0OOO000000OO0O0.append(chr(ord(O0000O0OOO000OO0O) ^ 
O0O0OOOO0OOOOO0OO))
        else:
WEB
babyphp
Google Search github https://github.com/xl7dev/WebShell/blob/master/Ph
p/scanner.php
            return ''.join(OO0OOO000000OO0O0)
testkey = 'a'*0x20
testdata = 'b'*0x20
cipher = 
'275b39c381c28b701ac3972338456022c2ba06c3b04f5501471c47c38ac380c29b72c3b5c38a7e
c2a5c2a0'.unhex().decode('utf-8')
# def func(O0O0O0OO00O00OOO0):
#     O000OOOO0O00OO000 = rc4(O0O0O0OO00O00OOO0)
#     if O000OOOO0O00OO000.encode('utf-8').hex() == 
'275b39c381c28b701ac3972338456022c2ba06c3b04f5501471c47c38ac380c29b72c3b5c38a7e
c2a5c2a0':
#         return 'YOU WIN'
#     return 'YOU LOSE'
res = rc4(cipher)
# flag{snake_bao_is_really_lucky}
function getHtmlContext($url)
{
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_HEADER, TRUE);    //response header 
    curl_setopt($ch, CURLOPT_NOBODY, FALSE); //response body 
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);