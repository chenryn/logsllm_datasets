    **例 30.2. 查看分区的 UUID**
    ::: example-contents
    ``` screen
    $ lsblk --fs /dev/sda1
    NAME FSTYPE LABEL UUID                                 MOUNTPOINT
    sda1 xfs    Boot  ea74bbec-536d-490c-b8d9-5b40bbd7545b /boot
    ```
    :::
    :::
2.  如果挂载点目录不存在，请创建它：
    ``` screen
    # mkdir --parents mount-point
    ```
3.  以 root 用户身份，编辑 `/etc/fstab`{.literal}
    文件，并为文件系统添加一行，由 UUID 标识。
    例如：
    ::: example
    []{#assembly_persistently-mounting-file-systems_managing-file-systems.html#idm139895612302400}
    **例 30.3. /etc/fstab 中的 /boot 挂载点**
    ::: example-contents
    ``` screen
    UUID=ea74bbec-536d-490c-b8d9-5b40bbd7545b /boot xfs defaults 0 0
    ```
    :::
    :::
4.  重新生成挂载单元以便您的系统注册新配置：
    ``` screen
    # systemctl daemon-reload
    ```
5.  尝试挂载文件系统来验证配置是否正常工作：
    ``` screen
    # mount mount-point
    ```
:::
::: itemizedlist
**其他资源**
-   [永久命名属性概述](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/managing_file_systems/index#con_device-names-managed-by-the-udev-mechanism-in-dev-disk-_assembly_overview-of-persistent-naming-attributes){.link}。
:::
:::
:::
[]{#persistently-mounting-a-file-system-using-rhel-system-roles_managing-file-systems.html}
::: chapter
::: titlepage
# []{#persistently-mounting-a-file-system-using-rhel-system-roles_managing-file-systems.html#persistently-mounting-a-file-system-using-rhel-system-roles_managing-file-systems}第 31 章 使用 RHEL 系统角色永久挂载文件系统 {.title}
:::
这部分描述了如何使用 `存储`{.literal} 角色永久挂载文件系统。
::: itemizedlist
**先决条件**
-   存在一个使用该 `存储`{.literal} 角色的 Ansible playbook。
    有关如何应用此类 playbook 的信息，请参阅
    [应用角色](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/configuring_basic_system_settings/index#applying-a-role_getting-started-with-rhel-system-roles){.link}。
:::
::: section
::: titlepage
# []{#persistently-mounting-a-file-system-using-rhel-system-roles_managing-file-systems.html#an-example-ansible-playbook-to-persistently-mount-a-file-system_persistently-mounting-a-file-system-using-rhel-system-roles}永久挂载文件系统的 Ansible playbook 示例 {.title}
:::
本节提供了一个 Ansible playbook 示例。此 playbook
应用存储角色，以立即和永久挂载 XFS 文件系统。
::: example
[]{#persistently-mounting-a-file-system-using-rhel-system-roles_managing-file-systems.html#idm139895582520592}
**例 31.1. 将 /dev/sdb 上的文件系统挂载到 /mnt/data 的 playbook**
::: example-contents
``` screen
---
- hosts: all
  vars:
    storage_volumes:
      - name: barefs
        type: disk
        disks:
          - sdb
        fs_type: xfs
        mount_point: /mnt/data
  roles:
    - rhel-system-roles.storage
```
::: itemizedlist
-   此 playbook 将文件系统添加到 `/etc/fstab`{.literal}
    文件中，并立即挂载文件系统。
-   如果 `/dev/sdb`{.literal} 设备上的文件系统或挂载点目录不存在，则
    playbook 会创建它们。
:::
:::
:::
::: itemizedlist
**其他资源**
-   `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::
:::
[]{#assembly_mounting-file-systems-on-demand_managing-file-systems.html}
::: chapter
::: titlepage
# []{#assembly_mounting-file-systems-on-demand_managing-file-systems.html#assembly_mounting-file-systems-on-demand_managing-file-systems}第 32 章 根据需要挂载文件系统 {.title}
:::
作为系统管理员，您可以将 NFS 等文件系统配置为按需自动挂载。
::: section
::: titlepage
# []{#assembly_mounting-file-systems-on-demand_managing-file-systems.html#the-autofs-service_assembly_mounting-file-systems-on-demand}autofs 服务 {.title}
:::
本节解释了 `autofs`{.literal}
服务的优点和基本概念，用于按需挂载文件系统。
使用 `/etc/fstab`{.literal}
配置进行永久挂载的一个缺点是，无论用户访问挂载的文件系统的频率有多低，系统都必须投入资源来保持装载的文件系统。例如，当系统同时维护多个系统的
NFS 挂载时，这可能会影响系统性能。
`/etc/fstab`{.literal} 的替代方法是使用基于内核的 `autofs`{.literal}
服务。它由以下组件组成：
::: itemizedlist
-   实施文件系统的内核模块，以及
-   执行所有其他功能的用户空间服务。
:::
`autofs`{.literal}
服务可以自动挂载和卸载文件系统（按需），从而节省了系统资源。它可用于挂载文件系统，如
NFS、AFS、SMBFS、CIFS、CIFS 和本地文件系统。
::: itemizedlist
**其他资源**
-   `autofs(8)`{.literal} 手册页。
:::
:::
::: section
::: titlepage
# []{#assembly_mounting-file-systems-on-demand_managing-file-systems.html#the-autofs-configuration-files_assembly_mounting-file-systems-on-demand}autofs 配置文件 {.title}
:::
本节描述了 `autofs`{.literal} 服务所使用的配置文件的用法和语法。
::: title
**主映射文件**
:::
`autofs`{.literal} 服务使用 `/etc/auto.master`{.literal}
（主映射）作为其默认的主配置文件。这可以通过使用
`/etc/autofs.conf`{.literal} 配置文件中的 `autofs`{.literal}
配置以及名称服务开关(NSS)机制来将其更改为使用其他受支持的网络源和名称。
所有 on-demand
挂载点都必须在主映射中配置。挂载点、主机名、导出的目录和选项都可以在一组文件（或其他支持的网络源）中指定，而不必为每个主机手动配置它们。
主映射文件列出了 `autofs`{.literal}
控制的挂载点，以及它们相应的配置文件或网络来源（称为自动挂载映射）。master
映射的格式如下：
``` screen
mount-point  map-name  options
```
使用这种格式的变量有：
::: variablelist
[[*[mount-point]{.replaceable}*]{.emphasis}]{.term}
:   `autofs`{.literal} 挂载点；例如，`/mnt/data`{.literal}。
[[*[map-file]{.replaceable}*]{.emphasis}]{.term}
:   映射源文件，其中包含挂载点列表以及应该挂载这些挂载点的文件系统的位置。
[[*[options]{.replaceable}*]{.emphasis}]{.term}
:   如果提供了这个选项，则它们适用于给定映射中的所有条目（如果它们本身没有指定选项的话）。
:::
::: example
[]{#assembly_mounting-file-systems-on-demand_managing-file-systems.html#idm139895598149344}
**例 32.1. /etc/auto.master 文件**
::: example-contents
以下是 `/etc/auto.master`{.literal} 文件中的一个示例行：
``` screen
/mnt/data  /etc/auto.data
```
:::
:::
::: title
**映射文件**
:::
映射文件配置单个 on-demand 挂载点的属性。
如果目录不存在，自动挂载程序会创建它们。如果在自动挂载程序启动之前目录已存在，则自动挂载程序在退出时不会删除它们。如果指定了超时，则如果在超时时间内没有访问该目录，则目录会被自动卸载。
映射的一般格式与主映射类似。但是，options
字段会出现在挂载点和位置之间，而不是像 master 映射那样在条目的末尾：
``` screen
mount-point  options  location
```
使用这种格式的变量有：
::: variablelist
[[*[mount-point]{.replaceable}*]{.emphasis}]{.term}
:   这指的是 `autofs`{.literal}
    挂载点。这可以是间接挂载的单个目录名称，也可以是直接挂载的挂载点的完整路径。每个直接和间接映射条目键（[*[挂载点]{.replaceable}*]{.emphasis}）后面都跟着一个以空格分隔的偏移目录列表（每个子目录名称都以
    `/`{.literal} 开头），这就是所谓的多挂载条目。
[[*[options]{.replaceable}*]{.emphasis}]{.term}
:   在提供这个选项时，这些选项将附加到主映射条目选项（如果有的话），或者如果配置条目
    `append_options`{.literal} 设为
    `no`{.literal}，则使用这些选项代替主映射选项。
[[*[location]{.replaceable}*]{.emphasis}]{.term}
:   这指的是文件系统的位置，如本地文件系统路径（对于以 `/`{.literal}
    开头的映射名称，前面带有 Sun 映射格式转义字符 `：`{.literal}）、NFS
    文件系统或其他有效的文件系统位置。
:::
::: example
[]{#assembly_mounting-file-systems-on-demand_managing-file-systems.html#idm139895584312912}
**例 32.2. 映射文件**
::: example-contents
以下是映射文件（例如 `/etc/auto.misc`{.literal} ）中的一个示例：
``` screen
payroll  -fstype=nfs4  personnel:/exports/payroll
sales    -fstype=xfs   :/dev/hda4
```
映射文件中的第一列指示 `autofs`{.literal} 挂载点：来自名为
`personnel`{.literal} 的服务器的 `sales`{.literal} 和
`payroll`{.literal}。第二列指示 `autofs`{.literal}
挂载的选项。第三列显示挂载源。
根据给定的配置，`autofs`{.literal} 挂载点将是 `/home/payroll`{.literal}
和 `/home/sales`{.literal}。通常省略 `-fstype=`{.literal}
选项，如果文件系统是 NFS，则不需要该选项，如果系统默认是 NFS 挂载的
NFSv4，则包括 NFSv4 的挂载。
使用给定配置时，如果进程需要访问 `autofs`{.literal} 卸载的目录，如
`/home/payroll/2006/July.sxc`{.literal}，则 `autofs`{.literal}
服务会自动挂载该目录。
:::
:::
::: title
**amd 映射格式**
:::
`autofs`{.literal} 服务也识别 `amd`{.literal}
格式的映射配置。如果要重复使用为 `am-utils`{.literal}
服务编写的现有的自动挂载程序配置（已从 Red Hat Enterprise Linux
中删除），这将非常有用。
但是，红帽建议使用前面章节中描述的更简单的 `autofs`{.literal} 格式。
::: itemizedlist
**其他资源**
-   `autofs(5)`{.literal} 手册页
-   `autofs.conf(5)`{.literal} 手册页
-   `auto.master(5)`{.literal} 手册页
-   `/usr/share/doc/autofs/README.amd-maps`{.literal} 文件
:::
:::
::: section
::: titlepage
# []{#assembly_mounting-file-systems-on-demand_managing-file-systems.html#configuring-autofs-mount-points_assembly_mounting-file-systems-on-demand}配置 autofs 挂载点 {.title}
:::
这个流程描述了如何使用 `autofs`{.literal} 服务配置按需挂载点。
::: itemizedlist
**先决条件**
-   安装 `autofs`{.literal} 软件包：
    ``` screen
    # dnf install autofs
    ```
-   启动并启用 `autofs`{.literal} 服务：
    ``` screen
    # systemctl enable --now autofs
    ```
:::
::: orderedlist
**流程**
1.  为位于 `/etc/auto.identifier`{.literal}
    的按需挂载点创建一个映射文件。使用标识挂载点的名称替换
    [*[identifier]{.replaceable}*]{.emphasis}。
2.  在映射文件中，填写挂载点、选项和位置字段，如 [autofs
    配置文件](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/managing_file_systems/index#the-autofs-configuration-files_assembly_mounting-file-systems-on-demand){.link}
    部分中所述。
3.  注册主映射文件中的映射文件，如 [autofs
    配置文件](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/managing_file_systems/index#the-autofs-configuration-files_assembly_mounting-file-systems-on-demand){.link}
    部分中所述。
4.  允许服务重新读取配置，以便它可以管理新配置的 `autofs`{.literal}
    挂载：
    ``` screen
    # systemctl reload autofs.service
    ```
5.  尝试访问 on-demand 目录中的内容：
    ``` screen
    # ls automounted-directory
    ```
:::
:::
::: section
::: titlepage
# []{#assembly_mounting-file-systems-on-demand_managing-file-systems.html#automounting-user-home-directories-with-autofs-service_assembly_mounting-file-systems-on-demand}使用 autofs 服务自动挂载 NFS 服务器用户主目录 {.title}
:::
这个流程描述了如何配置 [**autofs**]{.strong} 服务来自动挂载用户主目录。
::: itemizedlist
**先决条件**
-   已安装 [**[autofs]{.package}**]{.strong} 软件包。
-   [**[autofs]{.service}**]{.strong} 服务已启用并正在运行。
:::