6.2 Slow Fading Mobile Channels
In this section, we evaluate how well SoftRate can adapt to chan-
nel variations that occur at walking speeds in a slow fading channel.
Simulation setup. We simulate N = 1, . . . 5 TCP ﬂows from
the 802.11 clients to the corresponding wired LAN nodes. We use
the ten walking traces (Table 4) to model the ten uni-directional
links. We assume perfect carrier sense among all senders.
Results. Figure 13 shows the aggregate TCP throughput ob-
tained by the various rate adaptation algorithms as a function of the
number of ﬂows. We ﬁnd that SoftRate outperforms all other al-
gorithms, and comes closest to the omniscient algorithm. SoftRate
gets up to 20% higher throughput than both SNR-based algorithms
4Our simulation does not need to rely on the channel reciprocity as-
sumptions used in [13] because we can afford to change the 802.11
link-layer ACK in the simulator to piggyback SNR information,
while CHARM aims to work with existing 802.11 cards.
Figure 15: Bit rates chosen by RRAA and SampleRate where
the optimal bit rate changes at t = 0: from a higher rate to a
lower rate (top) and from lower to higher (bottom).
trained over the traces because the BER prediction from SNR is
noisier than that using SoftPHY hints. We also found that using
averaged SNR information in CHARM leads to lower responsive-
ness to short-term SNR variations and hence slightly worse per-
formance than using just the instantaneous SNR value. SoftRate
achieves up to 2× higher throughput than RRAA and almost 4×
higher throughput than SampleRate because frame-level algorithms
cannot adapt fast enough to channel fades that are caused due to
mobility, with the result that TCP ends up loosing multiple packets
in a window and reduces its offered load. We ﬁnd that the loss rate
experienced by TCP is an order of magnitude higher with frame-
level algorithms than it is with SoftRate. We repeat with clients
receiving TCP trafﬁc; results are similar to those described above.
For the simulation with one TCP ﬂow, Figure 14 shows how
the bit rates picked by the various algorithms on every transmitted
frame compared against the highest bit rate that would have gotten
the frame through at that time. We ﬁnd that SoftRate chooses the
correct bit rate over 80% of the time.
To better understand the performance of frame-level algorithms,
we simulate RRAA and SampleRate using a synthetic trace, where
the channel alternates between a “good” state (best transmit bit rate
 0 2 4 6 8 10 1254321Throughput (Mbps)Number of 802.11 ClientsOmniscientSoftRateSNR (trained)CHARMRRAASampleRate 0 0.2 0.4 0.6 0.8 1 1.2 1.4SampleRateRRAACHARMSNR (trained)SoftRateFraction of Frames SentOverselectAccurateUnderselectQAM16 1/2QAM16 3/4 0 100 200 300 400 500 600 700 800 900 1000RRAASampleRateQAM16 1/2QAM16 3/4 0 100 200 300 400 500 600 700 800 900 1000Time in milliseconds12Figure 16: TCP throughput in a simulated fast fading channel.
Figure 17: Aggregate TCP throughput as a function of carrier
sense probability between the senders.
is QAM16 3/4) and a “bad” state (best transmit bit rate is QAM16
1/2) every 1 second. Frame trace data for the good and bad states
are taken from appropriate snapshots in the walking trace described
in Table 4. Figure 15 shows the bit rates picked by RRAA and
SampleRate as a function of time, where the best transmit bit rate
moves from the higher rate to the lower rate in the top panel, and
back to higher rate in the bottom panel. The convergence times of
RRAA and SampleRate are 15 ms and 600 ms respectively in the
ﬁrst case, and 85 ms and 650 ms in the second. These convergence
times explain why the frame-level algorithms frequently overselect
and underselect compared to the optimal in Figure 14. One other
interesting point to note is the instability of RRAA’s rate choice
(see the top panel of Figure 15), highlighting another short-coming
of frame-level algorithms. When the frame loss rate at a bit rate is
zero, frame-level algorithms have no way of knowing if the frames
are barely making it through (i.e., the next rate will not work) or
if they are getting through very comfortably (i.e., next rate may
work). SoftRate knows what the BER at the current rate is and
hence can predict whether the next rate will work or not, obviating
the need to unnecessarily probe higher rates.
Implications. Failing to adapt the transmit bit rate quickly to
channel fades that occur with mobility can lead to burst losses that
reduce TCP throughput. As a result, a responsive bit rate adap-
tation protocol like SoftRate offers huge gains for TCP in mobile
channels, compared to less responsive frame-level algorithms.
6.3 Simulated Fast Fading Channels
In this section, we evaluate the performance of SoftRate in fast
fading channels that occur at vehicular mobility speeds.
Simulation setup. One 802.11 client transfers TCP data to a
wired LAN node via the AP. We use the simulation traces from
Table 4 to model the links.
Results. We present the throughput of the various protocols nor-
malized by the throughput of the omniscient algorithm because the
best transmit bit rate (and hence the absolute throughput achieved)
decreases with channel coherence time. Figure 16 shows the nor-
malized throughput of the TCP ﬂow with various rate adaptation
algorithms as a function of varying channel coherence time. The
SNR-BER relationships used by the SNR-based protocol are ob-
tained over the walking traces used in §6.2. As channel coherence
time reduces, the channel BER at any given bit rate increases for the
same SNR. As a result, the SNR-based protocol underestimates the
frame BER at lower coherence times and ends up selecting bit rates
Figure 18: Rate selection accuracy (Pr [carrier sense] = 0.8).
that are above optimal. Because SoftPHY hints measure the aver-
age BER over the entire frame, SoftRate correctly picks the bit rate
that codes for the average channel BER in fast fading channels and
its performance stays the same across various coherence times even
without retraining. We see from the ﬁgure that SoftRate achieves
a performance gain of about 4× over the SNR-based protocol at
a channel coherence time of 100 µs. Gains over CHARM were
similar, as we did not use the retraining mechanism that adjusts
SNR thresholds every few seconds, in order to isolate the impact of
training on the performance of SNR-based protocols.
Implications. SNR-based protocols incur a performance penalty
if not retrained for each operating environment, unlike SoftRate
that works robustly across a wide variety of channel conditions
without requiring retraining. CHARM proposes to retrain the SNR
thresholds on a coarse timescale. However, such mechanisms are
meant to handle calibration issues across different hardware and are
ineffective if the coherence time of the channel changes on a short
timescale, for example, when a train passes by a stationary user.
6.4 Interference-Dominated channels
In this section, we evaluate the impact of interference losses on
the performance of SoftRate.
 0 0.2 0.4 0.6 0.8 1100 us200 us500 us1 msNormalized ThroughputChannel Coherence TimeSoftRateSNR (untrained)RRAASampleRate 0 2 4 6 8 10 12 14 16 18 20 0 0.2 0.4 0.6 0.8 1Throughput (Mbps)Carrier sense probabilitySoftRate (Ideal)SoftRateRRAASampleRate 0 0.2 0.4 0.6 0.8 1 1.2 1.4SampleRateRRAASoftRateSoftRate(Ideal)Fraction of Frames SentOverselectAccurateUnderselect13Simulation setup. The simulation consists of ﬁve 802.11 clients
uploading TCP data via the AP to the wired LAN nodes. We use
the static short range traces described in Table 4 to model each of
the uni-directional links; using a static channel helps us isolate the
beneﬁts due to interference detection from those due to better adap-
tation in mobile channels. We simulate imperfect carrier sense be-
tween the various senders in the simulation to generate collisions.
We vary the carrier sense probability between the senders from 0
(i.e., all senders are perfect hidden terminals) to 1 (i.e., perfect car-
rier sense and hence no interference losses). We simulate two ver-
sions of SoftRate–a present version where interference detection
succeeds 80% of the time and there is no postamble detection, and
a yet-to-be-implemented “ideal” version with postambles and per-
fect interference detection. When the SoftRate receiver identiﬁes a
frame loss as interference, the feedback BER from the receiver is
simply the interference-free BER measured in the trace. Otherwise,
the feedback is a very high BER indicating a noise loss.
Results. Figure 17 shows the performance of the various algo-
rithms as a function of carrier sense probability. RRAA, because
it reacts to short-term frame loss rate, reduces its bit rate in re-
sponse to interference and sees a much lower throughput than the
other algorithms. We found RRAA’s Adaptive RTS/CTS scheme
to be ineffective in preventing collisions, because interference was
unpredictable and resulted in RTS/CTS being constantly turned on
and off without any real beneﬁts. SampleRate, on the other hand,
is resilient to interference losses because it computes the average
transmission time at each bit rate over slower timescales; interfer-
ence affects the transmission time at all bit rates uniformly at such
timescales. The performance of the omniscient algorithm is very
similar to that of the ideal SoftRate and is not shown. The perfor-
mance of the SNR-based algorithms is not affected by interference
because the SNR was estimated using the preamble and not over
the entire frame. Figure 18 shows the rates picked by the various
algorithms on every transmitted frame, compared against the opti-
mal bit rate choice. As expected, RRAA frequently underselects.
Implications. Algorithms that react to short-term channel vari-
ations entail the danger of lowering bit rate on interference losses.
SoftRate’s interference detection mechanism avoids this penalty.
7. CONCLUSION
We have presented SoftRate, a cross-layer wireless bit rate adap-
tation algorithm that achieves throughput gains of up to 2× over
frame-based protocols such as SampleRate and RRAA, 20% over
SNR-based protocols trained on the operating environment, and
4× over untrained SNR-based protocols. The key idea is to ex-
pose per-bit conﬁdences called SoftPHY hints from the physical
layer, using them to estimate the interference-free BER of received
frames. Picking bit rates using the BER thus estimated enables Sof-
tRate to react quickly to channel variation without requiring any
environment-speciﬁc calibration. Moreover, SoftRate’s idea of es-
timating BER from SoftPHY hints can be applied to a variety of
wireless cross-layer protocols that, for example, allocate frequency
or transmit power, or perform efﬁcient error recovery.
Acknowledgments
We gratefully acknowledge the feedback we received from Brad
Karp, our shepherd Ranveer Chandra, and anonymous reviewers.
This work was supported in part by National Science Foundation
grants CNS-0721702 and CNS-0520032 and by Foxconn.
8. REFERENCES
[1] P. A. K. Acharya, A. Sharma, E. M. Belding, K. C. Almeroth, and
D. Papagiannaki. Congestion-Aware Rate Adaptation in Wireless
Networks: A Measurement-Driven Approach. In Proc. IEEE SECON
Conf., pp. 1–9, San Francisco, CA, June 2008.
[2] L. Bahl, J. Cocke, F. Jelinek, and J. Raviv. Optimal Decoding of
Linear Codes for Minimizing Symbol Error Rate (Corresp.). IEEE
Trans. on Information Theory, 20(2):284–287, 1974.
[3] S. Biaz and N. H. Vaidya. Discriminating Congestion Losses from
Wireless Losses Using Inter-arrival Times at the Receiver. In Proc. of
the IEEE ASSET Symp., pp. 10–17, Richardson, TX, Mar. 1999.
[4] J. Bicket. Bit-Rate Selection in Wireless Networks. Master’s thesis,
Massachusetts Institute of Technology, Feb. 2005.
[5] J. Camp and E. Knightly. Modulation Rate Adaptation in Urban and
Vehicular Environments: Cross-Layer Implementation and
Experimental Evaluation. In Proc. of the ACM MobiCom Conf., pp.
315–326, San Francisco, CA, Sept. 2008.
[6] G. D. Forney, Jr. The Viterbi Algorithm (Invited Paper). Proc. of the
IEEE, 61(3):268–278, Mar. 1973.
[7] S. Gollakota and D. Katabi. Zigzag Decoding: Combating Hidden
Terminals in Wireless Networks. In Proc. of the ACM SIGCOMM
Conf., pp. 159–170, Seattle, WA, Aug. 2008.
[8] J. Hagenauer and P. Hoeher. A Viterbi Algorithm with Soft-Decision
Outputs and its Applications. In Proc. IEEE GLOBECOM, pp.
1680–1686, Dallas, TX, Nov. 1989.
[9] D. Halperin, T. Anderson, and D. Wetherall. Taking the Sting out of
Carrier Sense: Interference Canncelation for Wireless LANs. In ACM
MobiCom, pp. 339–350, San Francisco, CA, Sept. 2008.
[10] G. Holland, N. Vaidya, and P. Bahl. A Rate-Adaptive MAC Protocol
for Multihop Wireless Networks. In Proc. of ACM MobiCom Conf.,
pp. 236–251, Rome, Italy, Sept. 2001.
[11] IEEE Standard 802.16e-2005: Air Interface for Fixed and Mobile
Broadband Wireless Access Systems, Amendment 2, Feb. 2006.
http://standards.ieee.org/getieee802/802.16.html.
[12] K. Jamieson and H. Balakrishnan. PPR: Partial Packet Recovery for
Wireless Networks. In Proc. ACM SIGCOMM, pp. 409–420, Kyoto,
Japan, August 2007.
[13] G. Judd, X. Wang, and P. Steenkiste. Efﬁcient Channel-aware Rate
Adaptation in Dynamic Environments. In Proc. of the ACM MobiSys
Conf., pp. 118–131, Breckenridge, CO, June 2008.
[14] A. Kamerman and L. Monteban. WaveLAN II: a High-Performance
Wireless LAN for the Unlicensed Band. Bell Labs Technical Journal,
2(3):118–133, Summer 1997.
[15] K. C. Lin, N. Kushman, and D. Katabi. ZipTx: Exploiting the Gap
Between Bit Errors and Packet Loss. In Proc. of the ACM MobiCom
Conf., pp. 351–362, San Francisco, CA, Sept. 2008.
[16] D. Mandelbaum. An Adaptive-Feedback Coding Scheme Using
Incremental Redundancy (Corresp.). IEEE Trans. on Information
Theory, 20(3):388–389, May 1974.
[17] J. Metzner. Improvements in Block-Retransmission Schemes. IEEE
Trans. on Communications, 27(2):524–532, Feb. 1979.
[18] ONOE Rate Control. http://madwiﬁ.org/browser/trunk/ath_rate/onoe.
[19] J. G. Proakis. Digital Communications, 4th ed. McGraw-Hill, 2000.
[20] S. Rayanchu, A. Mishra, D. Agrawal, S. Saha, and S. Banerjee.
Diagnosing Wireless Packet Losses in 802.11: Separating Collision
from Weak Signal. In Proc. of IEEE INFOCOM Conf., pp. 735–743,
Phoenix, AZ, Apr. 2008.
[21] B. Sadeghi, V. Kanodia, A. Sabharwal, and E. Knightly.
Opportunistic Media Access for Multirate Ad Hoc Networks. In
Proc. of ACM MobiCom Conf., pp. 24–35, Atlanta, GA, Sept. 2002.
[22] T. M. Schmidl and D. C. Cox. Robust Frequency and Timing
Synchroniation for OFDM. IEEE Trans. on Communications.,
45:1613–1621, Dec. 1997.
[23] D. Tse and P. Viswanath. Fundamentals of Wireless Communication.
Cambridge Univ. Press, 2005.
[24] S. Wong, H. Yang, S. Lu, and V. Bharghavan. Robust Rate
Adaptation for 802.11 Wireless Networks. In Proc. of ACM
MobiCom Conf., pp. 146–157, Los Angeles, CA, Sept. 2006.
[25] J. Zhang, K. Tan, J. Zhao, H. Wu, and Y. Zhang. A Practical
SNR-Guided Rate Adaptation. In Proc. of the IEEE INFOCOM
Conf., pp. 2083–2091, Phoenix, AZ, Apr. 2008.
[26] Y. Zheng and C. Xiao. Simulation Models With Correct Statistical
Properties for Rayleigh Fading Channels. IEEE Trans. on
Communications, 51(6):920–928, 2003.
14