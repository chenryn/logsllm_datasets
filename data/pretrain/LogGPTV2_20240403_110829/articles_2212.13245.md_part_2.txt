“metrics”. All the selected keyword pairs are among the most frequently used
topics in the projects. We use these four sets of keywords to find more AIOps
repositories.
2.2.4 Search AIOps projects (second round)
With the extracted four pairs of keywords from the previous step, we use the
GitHubinterfacetosearchforadditionalprojectsrelatedtoAIOps.Wefollow
the same process as described in Section 2.2.1. Our search results identifies
a total of 383 projects after removing duplicated projects contained in the
first-round search results.
2.2.5 Filtering
Based on the knowledge that we have gained from our first-round manual
verification, we apply a filtering phase to remove the toy projects. We use two
criteria to filter the projects: the number of stars and forks. We only consider
theprojectswithstarsandforksgreaterthanorequalto1(stars:>=1&forks:
>=1). The purpose of removing the toy projects is to have relatively mature
projectsandnotsoilourresultswithsmallrepositories(Munaiahetal.,2017).
We apply the filtering to both the projects from the first round and the
second round of searches. For the projects from the first round, we apply the
filtering to the projects after the manual verification step. We intentionally
manually analyze all the projects from the first-round search before the filter-
ing to gain a more comprehensive understanding of the status of the AIOps
StudyingtheCharacteristicsofAIOpsProjectsonGitHub 7
projects. After the filtering process, the 84 manually verified projects from
the first round are reduced to 40 projects. For the projects from the second
round search, we apply the filtering before the manual verification process, in
order to save some unnecessary manual efforts in verifying the projects that
are eventually excluded by the filtering criteria.
2.2.6 Manual verification (second round)
As explained in Section 2.2.2, not all the searched repositories are suitable
for our study. To select the projects that fit the study, we repeat the process
describedinSection2.2.2toperformthemanualverification.Thecodersfollow
the same procedure to decide whether each of these 383 projects is a real
AIOps project or not. After separate coding, discussion session, revision, and
resolving disagreements, we find 57 projects from the expanded keywords;
which corresponds to a selection rate of 15%.
Finally, we combine the 40 projects identified using the “AIOps” keyword
with the 57 projects identified using the expanded keywords. The final set of
97 AIOps projects is used to answer our research questions. The approaches
for answering our research questions are detailed in Section 3
2.2.7 Measuring the reliability of our manual verification
Reliability is vital to ensure the validity of the coding results (Artstein and
Poesio, 2008). The coding results are reliable if there exists a certain level
of agreement between the coders, known as inter-coder agreement. In this
study, we use Cohen’s kappa (Cohen, 1960) to measure the reliability of the
agreements between two coders. Cohen’s kappa is one of the most common
approachestomeasuretheinter-coderagreement(ArtsteinandPoesio,2008).
Table1indicatestherelationbetweenthevalueofCohen’skappaandthelevel
of agreement (McHugh, 2012).
Table 1: Interpretation of Cohen’s kappa.
Value of Cohen’s k Level of Agreement
0-.20 None
.21-.39 Minimal
.40-.59 Weak
.60-.79 Moderate
.80-.90 Strong
.90-1 Almost Perfect
Our manual verification for choosing the proper AIOps projects achieves
a Cohen’s kappa of 0.68 before the discussion session. After the discussion
session between the coders, the kappa score increased to 0.81. As shown in
Table 1, kappa ≥ 0.80 indicates a strong agreement.
8 RoozbehAghilietal.
2.3 Collecting Baseline Projects
To understand how AIOps projects differ from traditional software projects,
wecreatetwobaselinesandcomparetheAIOpsprojectswiththem.Weselect
machine learning (ML) projects as our first baseline, and General projects as
our second baseline.
2.3.1 Machine Learning projects
As our first baseline, we choose ML projects. We select ML for the first base-
line because AIOps can be considered as an application domain of machine
learning. Similar work typically searches for specific frameworks to gather
ML projects on GitHub. For example, (Zhang et al., 2018) select their set
of projects based on searching the keyword “TensorFlow”. Also, (Islam et al.,
2019) gather their projects based on searching for different keywords such as
“TensorFlow” and “Keras”. Since we are not focusing on any specific frame-
work, we use more general keywords. Hence, to gather the set of ML baseline,
we use two keywords: “machine learning” and “deep learning”.
To compare the AIOps projects with the baselines in a similar context,
we filter the baseline projects in the same way as filtering the AIOps projects.
Therefore,weonlyextracttheprojectswithatleastonestarandonefork.Fur-
thermore,becausetheMLprojectshavealongerhistorythanAIOpsprojects,
we apply another criteria: date of creation. In our set of AIOps projects,
the first and last creation dates are 2012/12/25 and 2021/08/19, respectively.
Thus, we apply the same dates to extract the ML baseline. After performing
the search and deletion of duplicate projects in two queries, we obtain 75,198
unique repositories. Due to time and computational resource limitations, ex-
tractingandanalyzingalltheseprojectsisnotfeasible.Hence,following(Chen
et al., 2020) and (Zhang et al., 2019), we randomly sample 383 projects from
the pool of 75,198 ML repositories using a confidence level of 95% and a con-
fidence interval of 5%. To ensure the robustness of our results, we repeat this
process10times.Hence,forourMLbaseline,wehave3,830(10*383)projects.
2.3.2 General projects
Asoursecondbaseline,wechoosegeneralprojectsfromGitHub,meaningthat
we do not specify any particular topic in our search. We also do not limit the
General baseline to a specific language (e.g., Python) because AIOps projects
are not limited to only one language as well. In this way, the General baseline
captures the general characteristics of all GitHub projects. We perform the
same filtering phase as for the ML baseline; the difference is that we do not
indicate any specific topic. After applying the filtering, we obtain 3,796,841
publicandavailablerepositories.Followingthesameapproachforcreatingthe
MLbaseline(confidencelevelof95%andconfidenceintervalof5%),wesample
385 projects. Then, for consistency and robustness, we repeat the sampling
StudyingtheCharacteristicsofAIOpsProjectsonGitHub 9
process 10 times. In total, we obtain 3,850 (10*385) projects for the General
baseline.
As shown in Figure 1, we compare our AIOps projects with the baseline
projects in RQ1 where we study the repositories statistics of the projects, as
well as in RQ3 where we study the code quality of the projects. In RQ2, we
perform a qualitative study for the AIOps projects only, since the research
question is specifically about AIOps projects (i.e., the input data, analysis
techniques, and goals of AIOps solutions).
3 Research Questions and Results
This section presents the details of our research questions (RQs) and the re-
sults. We organize each RQ by its motivation, approach, and results.
3.1 RQ1. What are the characteristics of AIOps projects in terms
of their GitHub metrics?
3.1.1 Motivation
Prior studies proposed AIOps solutions that leverage AI technologies to sup-
port various software operation efforts (Di Stefano et al., 2021; Li et al., 2022,
2020).However,noworkhasinvestigatedreal-worldAIOpsprojectsandtheir
characteristics. Thus, this RQ bridges the gap to study the characteristics of
AIOpsprojectsandcomparethemwiththebaselineprojectsintermsoftheir
GitHub metrics. With this comparison, we can understand the similar and
different patterns between the characteristics of AIOps projects and the base-
lines. Our findings can help AIOps researchers and practitioners understand
the state of AIOps in practice.
3.1.2 Approach
In this RQ, we analyze the repository characteristics of AIOps projects and
comparethemwiththebaselineprojects.WeuseGitHubRESTAPI(GitHub,
2022)toretrievetherepositorycharacteristicsoftheseprojects.Inparticular,
we analyze the characteristics of AIOps projects and the baseline projects
from three perspectives: growth of repositories, programming languages, and
repository metrics.
Growth of repositories. To understand the evolution of the population of
AIOps projects, we analyze the distribution of the AIOps projects based on
their creation time. We also compare the creation time distribution with that
of the baseline projects.
Programming languages. Developers may use different programming lan-
guagesforAIOpsprojects.Understandingthedistributionoftheprogramming
10 RoozbehAghilietal.
A IO p s
1 0 0 M L
G e n e ra l
8 0 st
c
ej
o
r
6 0 p
f
o
e
4 0 g
at
n
e
c
2 0 r e
P
0
2 0 1 3 2 0 1 5 2 0 1 7 2 0 1 9 2 0 2 1
T im e
Fig.2:ThecumulativedistributionofthecreationtimeofAIOpsandbaseline
projects.
Table 2: The top-5 languages of AIOps and baseline projects.
AIOps ML General
Language Usage (%) Language Usage (%) Language Usage (%)
Python 73.6 Python 77.4 Python 19.9
Java 12.1 HTML 3.3 JavaScript 16.6
HTML 4.4 C++ 2.7 Java 9.2
Go 3.3 JavaScript 2.3 C++ 5.7
JavaScript 2.2 R 2.0 PHP 5.3
languagescanprovideinsightsforfutureworktosupportAIOpsprojectdevel-
opment.Eachprojectmayusemultipleprogramminglanguages.Inthiswork,
we extract and present the primary language of each project.
Repository metrics.WestudytherepositorymetricsoftheAIOpsprojects,
including the number of stars, forks, commits, contributors, releases, pull re-
quests, issues, size, and the status of being archived. For the pull requests, we
sum the open and closed pull requests. Similarly, for the issues, we sum the
open and closed issues.
3.1.3 Results
Compared to the ML and General baselines, AIOps projects are
relatively new and exhibit rapid growth in recent years. Figure 2
represents the percentage of projects created in and before each year for the
AIOpsandbaselineprojects.AsmentionedinSection2.3,thecreationdateof
StudyingtheCharacteristicsofAIOpsProjectsonGitHub 11
Table 3: The mean and median of GitHub metrics of AIOps projects and two
baselines. The mean and median are represented by µ and χ, respectively.
(cid:101)
Stars Forks Commits Contributors Archived
µ χ µ χ µ χ µ χ
(cid:101) (cid:101) (cid:101) (cid:101)
AIOps 122.7 19.0 32.1 7.0 492.7 25.0 4.7 2.0 1.0%
ML 121.8 6.0 30.3 3.0 133.4 23.0 3.8 1.0 1.7%
General 34.3 3.0 10.6 2.0 885.6 23.0 7.8 1.0 3.7%
Releases* Pull requests* Issues* Size (mb)
µ χ µ χ µ χ µ χ
(cid:101) (cid:101) (cid:101) (cid:101)
AIOps 2.6 0.0 79.4 0.0 89.9 1.0 77.8 7.8
ML 0.8 0.0 20.8 0.0 15.8 0.0 59.4 4.4
General 1.7 0.0 14.8 0.0 9.6 0.0 29.9 0.5
*The median number of 0 for the releases, pull requests, and issues indicate that more than
halfoftheprojectsdonothaveanyrelease,pullrequest,orissue.
alltheprojectsisbetween2012/12/25and2021/08/19.AsshowninFigure2,
inthefirstfewyears(from2012to2017),thenumberofAIOpsprojectsisvery
small. In recent years (from 2017 to 2021), the AIOps projects experience a
faster growth compared to the ML and General baselines. As can be seen, the
ML projects also exhibit a faster growth than the General baseline projects.
LikeinMLprojects,Pythonisthedominantprogramminglanguage
in the AIOps projects; however, unlike in ML projects, Java is also
a major programming language used in AIOps projects. As shown in
Table 2, Python is the most used language among all the groups; however,
the usage of Python is much higher in AIOps and ML repositories than in the
General baseline (73.6% and 77.4% in contrast to 19.9%). Another interesting
finding is the relatively high usage of Java in AIOps projects (12.1%), while
Java is not among the top-5 popular languages in the ML baseline.
On average, AIOps projects are more popular and active than the
baselines.Table3representsthemeanandmedianofourselectedrepository
metricsfortheAIOpsprojectsandthebaselines.Sincethedatadoesnotfollow
a normal distribution, we mainly compare the metrics using their median
values. However, we consider the mean where the median is zero (e.g., pull
requests).
Considering the median number of stars and forks, AIOps projects are
more popular than the baselines, having 6 times more stars and 3 times more
forksthantheGeneralbaseline.Regardingthecommits,contributors,andthe
number of releases, AIOps projects are more collaborative (median of 2 con-
tributors for AIOps projects, while 1 in ML and General baselines), resulting
in more frequent releases that show the activeness of these projects.
ComparingthenumberofpullrequestsandissuesbetweenAIOpsprojects
andthebaselines,wenoticethatAIOpsprojectsexperiencemorepullrequests
andissues.Thismaybeexplainedinthreeways.First,theAIOpsprojectsare