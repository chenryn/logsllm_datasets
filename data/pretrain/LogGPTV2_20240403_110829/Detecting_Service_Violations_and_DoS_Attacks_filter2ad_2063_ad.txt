n
u
m
m
o
C
101
0
Core
Stripe
Distributed
5
Percentage of Misbehaving Flow
10
15
20
5
15
Percentage of Misbehaving Flow
10
20
(a) Processing overhead.
(b) Communication overhead.
Figure 5. The processing and communication overhead for the monitoring schemes when the percentage
of misbehaving ﬂows is increased. The Core scheme has less communication overhead than Stripe
scheme for (cid:18)  20) depending on the value of (cid:18).
in their traceback analysis [21]. Using this probability, the
marking mechanism has less overhead than others. We
use two different path lengths in the plot; one is h = 4
and another is h = 6. The path length does not increase
the overhead substantially because the path length does
not go up very high for a small-size domain. Figure 4(b)
shows that when number of edge routers are increased in
a domain the processing over is increased for all schemes.
Figure 5 shows both processing and communication
overhead for different monitoring schemes. The pro-
cessing overhead is low for Core scheme than the Stripe
scheme for (cid:18) (cid:20) 20%. This is because the control packet
size of Core can be set equal to the maximum transmis-
sion unit of the network to minimize total number of pack-
ets sent, whereas the probe packet size of the Stripe is 20
bytes with 20 bytes of IP header. However, if the attack in-
tensity is high, i.e., the value of (cid:18) is high, the overhead of
Core exceeds the overhead of both edge-based schemes.
In this example, probes injected by Stripe scheme con-
sumes 600K bytes of bandwidth per sec, which is dis-
tributed over all links of the domain. If all links are OC3
type, on average each link experiences probe trafﬁc less
than 0.015% of the link capacity. The Distributed scheme
consumes ten times less than the Stripe one in this setup.
In Figure 6, we vary the domain size changing the number
of edge routers while keeping the number of core routers
ﬁxed to N = 12. The percentage of misbehaving trafﬁc
(cid:18) is ﬁxed and equals 1%. Figure 6 (a) shows that Core
can result in less computation overhead than edge-based
schemes when the number of edge routers increases. Even
though the overhead of Core scheme depends on both core
and edge routers, this scheme reduces processing over-
head by aggregating ﬂows when it reports to the monitor.
When number of edge routers increases, overhead for both
Core and Distributed schemes increase linearly. The over-
head for Stripe increases substantially with the increase of
edge routers. Depending on (cid:18), Figure 6 (b) shows that the
communication overhead for Stripe may exceed the com-
munication overhead of Core when M > 20.
4.4. Summary
We summarize the important features of all schemes
in Table 2. Ingress ﬁltering and core-assisted monitoring
schemes have high implementation overhead because the
former needs to deploy ﬁlters at all ingress routers in the
Internet and the latter needs support from all edge and core
routers in a domain. But ﬁltering and monitoring can pro-
vide better safety compared to the traceback which only
can identify an attacker after the attack has occurred. All
monitoring schemes need clock synchronization to mea-
sure SLA parameters, which is an extra overhead. But,
they can detect service violations and DoS attacks as well.
Filters are proactive in nature and all other schemes are
reactive. Filters can detect attacks by spoofed packets
whereas the rest of the schemes can detect an attack even if
the attacker does not use spoofed IP addresses from other
domains.
Property
PPM
Ingress Filtering Route-based
number of
incoming
packets
all ingress
edge routers
—
proactive
no
Filtering
number of
incoming
packets
all routers of
selective domains
—
proactive
no
Core-assisted
Monitoring
number of
ﬂows violating
SLAs
all edge and
core routers
at edge and
core routers
reactive
yes
Stripe-based Distributed
Monitoring
Monitoring
routers,
routers,
topology,
topology,
attack trafﬁc
attack trafﬁc
all edge
all edge
routers
routers
at edge
at edge
routers
routers
reactive
reactive
yes
yes
Overhead
depends on
attack
volume
Implementation
overhead
Clock
synchronization
Response
SLA violation
detection
Detect attacks
initiated using
all routers
—
reactive
no
any IP
spoofed IP from spoofed IP from
other domains
other domains
any IP
any IP
any IP
Table 2. Comparison among different schemes to detect/prevent service violations and DoS attacks.
5. Conclusions
We investigated several methods to detect service level
agreement violations and DoS attacks. We showed that
there is no single method that ﬁts all possible scenarios.
Speciﬁcally, in ICMP traceback and probabilistic packet
marking mechanisms, the attacker may be able to confuse
the victim by sending false ICMP traceback packets and
by randomly marking attacking packets.
Ingress ﬁlters
need global deployment to be effective, whereas route-
based ﬁlters strive against the dynamic change of the rout-
ing information.
We showed that network monitoring techniques can be
used to detect service violations by measuring the SLA pa-
rameters and comparing them against the contracted val-
ues between the user and the network provider. We also
argued that monitoring techniques have the potential to
detect DoS attacks in early stages before they severely
harm the victim. Our argument is based on the fact that
a DoS attack injects a huge amount of trafﬁc into the net-
work, which may alter the internal characteristics (e.g.,
delay and loss ratio) of the network. The monitoring tech-
niques watch for these changes and identify the congested
links, which helps in locating the attacker and alerting the
victim.
The presented comparative study showed several issues.
First, it showed that while marking imposes less overhead
than ﬁltering, it is only a forensic method. Filtering, on
the other hand, is a preventive method, which tries to stop
attacks before they harm the system. Second, the core-
based monitoring scheme has a high deployment cost be-
cause it needs to update all edge as well as core routers.
However, the core-based scheme has less processing over-
head than the stripe-based scheme because it aggregates
ﬂow information when it reports to the monitor. Third,
The stripe-based monitoring scheme has lower communi-
cation overhead than the core-based scheme for relatively
small size domains. For large domains, however, core-
based may impose less communication overhead depend-
ing on the attack intensity. Fourth, The distributed scheme
outperforms the other monitoring schemes in terms of de-
ployment cost and overhead in many of the cases.
Acknowledgments
This research is supported in part by the National Sci-
ence Foundation grants CCR-991712 and CCR-001788,
CERIAS, and IBM.
References
[1] C. Barros. A proposal for ICMP traceback messages.
http://www.research.att.com/lists/ietf-
Internet Draft
itrace/2000/09/msg00044.html, Sept. 18, 2000.
[2] S. M. Bellovin. ICMP traceback messages. Internet draft:
draft-bellovin-itrace-00.txt, Mar. 2000.
[3] S. Blake, D. Black, M. Carlson, E. Davies, Z. Wang, and
W. Weiss. An architecture for Differentiated Services.
RFC 2475, Dec. 1998.
[4] Y. Breitbart, C. Y. Chan, M. Garofalakis, R. Rastogi, and
A. Silberschatz. Efﬁciently monitoring bandwidth and la-
tency in IP networks. In Proc. IEEE INFOCOM, Anchor-
age, AK, Apr. 2001.
[5] H. Burch and H. Cheswick. Tracing anonymous packets
to their approximate source. In Proc. USENIX LISA, pages
319–327, New Orleans, LA, Dec. 2000.
[6] R. C´aceres, N. G. Dufﬁeld, J. Horowitz, and D. Towsley.
Multicast-based inference of network-internal loss charac-
teristics. IEEE Transactions on Information Theory, Nov.
1999.
[7] M. C. Chan, Y.-J. Lin, and X. Wang. A scalable monitoring
approach for service level agreements validation. In Proc.
International Conference on Network Protocols (ICNP),
pages 37–48, Osaka, Japan, Nov. 2000.
[8] M. Dilman and D. Raz. Efﬁcient reactive monitoring. In
Proc. IEEE INFOCOM, Anchorage, AK, Apr. 2001.
[9] N. G. Dufﬁeld, F. L. Presti, V. Paxson, and D. Towsley.
Inferring link loss using striped unicast probes. In Proc.
IEEE INFOCOM, Anchorage, AK, Apr. 2001.
[10] P. Ferguson and D. Senie. Network ingress ﬁltering:
Defeating denial of service attacks which employ IP
source address spooﬁng agreements performance monitor-
ing. RFC 2827, May 2000.
[11] A. Habib, S. Fahmy, S. R. Avasarala, V. Prabhakar, and
B. Bhargava. On detecting service violations and band-
width theft in QoS network domains. Journal of Computer
Communicatons (to appear), 2003.
[12] A. Habib, M. Khan, and B. Bhargava.
Edge-to-
edge measurement-based distributed network monitoring.
Technical report, CSD-TR-02-019, Purdue University,
Sept. 2002.
[13] S.
Institute.
Egress
ﬁltering
v
0.2.
http://www.sans.org/y2k/egress.htm, Feb. 2000.
[14] L. Garber. Denial of Service attacks rip the Internet. IEEE
Computer , 33,4:12–17, Apr. 2000.
[15] M. Mahajan, S. M. Bellovin, S. Floyd, J. Ioannidis, V. Pax-
son, and S. Shenker. Controlling high bandwidth aggre-
gates in the network. ACM Computer Communication Re-
view, 32(3):62–73, July 2002.
[16] D. Moore, G. M. Voelker, and S. Savage. Inferring Inter-
net denial-of-service activity. In Proc. USENIX Security
Symposium, Washington D.C, Aug. 2001.
[17] K. Park and H. Lee. On the effectiveness of probabilistic
packet marking for IP traceback under Denial of Service
attack. In Proc. IEEE INFOCOM, Anchorage, AK, Apr.
2001.
[18] K. Park and H. Lee. A proactive approach to distributed
DoS attack prevention using route-based packet ﬁltering.
In Proc. ACM SIGCOMM, San Diego, CA, Aug. 2001.
[19] V. Paxson. End-to-end internet packet dynamics. In Proc.
SIGCOMM ’97, Cannes, France, 1997.
[20] V. Paxson. An analysis of using reﬂectorsfor distributed
denial-of-service attacks. ACM Computer Communication
Review, 31 (3), July 2001.
[21] S. Savage, D. Wetherall, A. Karlin, and T. Anderson. Net-
work support for IP traceback. IEEE/ACM Transaction on
Networking, 9:(3):226–237, June 2001.
[22] C. L. Schuba, I. V. Krsul, M. G. Kuhn, E. H. Spafford,
A. Sundaram, and D. Zamboni. Analysis of a denial of
service attack on tcp. In Proc. IEEE Symposium on Secu-
rity and Privacy, Oakland, CA, May 1997.
[23] A. Snoeren, C. Partridge, L. Sanchez, W. Strayer, C. Jones,
and F. Tchakountio. Hashed-based IP traceback. In Proc.
ACM SIGCOMM, San Diego, CA, Aug. 2001.
[24] G. Spafford and S. Garﬁnk el. Practical Unix and Inter-
net Security. O’Reilly & Associates, Inc, second edition,
1996.