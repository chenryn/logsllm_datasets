issues is not uncommon in the literature. Spring et al. lever-
aged it to prioritize TCP ﬂows of diﬀerent types to improve
response time while maintaining high throughput [25]. Key
et al. used similar ideas to create a low priority background
transfer service [16]. ICTCP [29] instead used receive win-
dow adjustment to solve the incast collapse problem for TCP
in data center networks.
There are a number of measurement studies on TCP per-
[4] evaluated
formance over cellular networks. Chan et al.
5000
4000
3000
2000
1000
)
s
p
b
K
(
t
u
p
h
g
u
o
r
h
T
)
s
m
(
T
T
R
0
500
400
300
200
100
0
8Mbps
6Mbps
4Mbsp
2Mbps
800Kbps
600Kbps
Shaped Sending Rate
Figure 20: TCP performance in AT&T HSPA+ net-
work when the sending rate is shaped to diﬀerent
values. In time-varying cellular networks, it is hard
to determine the shaping parameters beforehand.
the impact of link layer retransmission and opportunistic
schedulers on TCP performance and proposed a network-
based solution called Ack Regulator to mitigate the eﬀect
of rate and delay variability. Lee [18] investigated long-
lived TCP performance over CDMA 1x EVDO networks.
The same type of network is also studied in [20] where
the performance of four popular TCP variants were com-
pared. Prokkola et al. [23] measured TCP and UDP perfor-
mance in HSPA networks and compared it with WCDMA
and HSDPA-only networks. Huang et al.
[14] did a com-
prehensive performance evaluation of various smart phones
over diﬀerent types of cellular networks operated by diﬀer-
ent carriers. They also provide a set of recommendations
that may improve smart phone users experiences.
8. CONCLUSION
In this paper, we thoroughly investigated TCP’s behav-
ior and performance over buﬀerbloated cellular networks.
We revealed that the excessive buﬀers available in the ex-
isting cellular networks void the loss-based congestion con-
trol algorithms and the ad-hoc solution that sets a static
tcp rmem max is sub-optimal. A dynamic receive window
adjustment algorithm was proposed. This solution requires
modiﬁcations only on the receiver side and is backward-
compatible as well as incrementally deployable. Experiment
results show that our scheme reduces RTT by 24% ∼ 49%
while preserving similar throughput in general cases or im-
proves the throughput by up to 51% in large BDP networks.
340The buﬀerbloat problem is not speciﬁc to cellular networks
although it might be most prominent in this environment. A
more fundamental solution to this problem may be needed.
Our work provides a good starting point and is an immedi-
ately deployable solution for smart phone users.
9. ACKNOWLEDGMENTS
Thanks to the anonymous reviewers and our shepherd
Costin Raiciu for their comments. This research is sup-
ported in part by Samsung Electronics, Mobile Communi-
cation Division.
10. REFERENCES
[1] N. Balasubramanian, A. Balasubramanian, and
A. Venkataramani. Energy Consumption in Mobile
Phones: a Measurement Study and Implications for
Network Applications. In IMC’09, 2009.
[2] L. S. Brakmo, S. W. O’Malley, and L. L. Peterson.
TCP Vegas: New Techniques for Congestion Detection
and Avoidance. In ACM SIGCOMM, 1994.
[3] L. Budzisz, R. Stanojevic, A. Schlote, R. Shorten, and
F. Baker. On the Fair Coexistence of Loss- and
Delay-based TCP. In IWQoS, 2009.
[4] M. C. Chan and R. Ramjee. TCP/IP Performance
over 3G Wireless Links with Rate and Delay
Variation. In ACM MobiCom, 2002.
[5] M. Dischinger, A. Haeberlen, K. P. Gummadi, and
S. Saroiu. Characterizing Residential Broadband
Networks. In IMC’07, 2007.
[6] W.-c. Feng, M. Fisk, M. K. Gardner, and E. Weigle.
Dynamic Right-Sizing: An Automated, Lightweight,
and Scalable Technique for Enhancing Grid
Performance. In PfHSN, 2002.
[7] S. Floyd. HighSpeed TCP for Large Congestion
Windows. IETF RFC 3649, December 2003.
[8] S. Floyd and T. Henderson. The NewReno
Modiﬁcation to TCP’s Fast Recovery Algorithm.
IETF RFC 2582, April 1999.
[9] S. Floyd and V. Jacobson. Random Early Detection
Gateways for Congestion Avoidance. IEEE/ACM
Transactions on Networking, 1:397–413, August 1993.
[10] J. Gettys. Buﬀerbloat: Dark Buﬀers in the Internet.
IEEE Internet Computing, 15(3):96, May-June 2011.
[11] S. Ha, I. Rhee, and L. Xu. CUBIC: a New
TCP-friendly High-speed TCP Variant. ACM SIGOPS
Operating Systems Review, 42:64–74, July 2008.
[12] S. Hemminger. Netem - emulating real networks in the
lab. In Proceedings of the Linux Conference, 2005.
[13] H.-Y. Hsieh, K.-H. Kim, Y. Zhu, and R. Sivakumar. A
Receiver-centric Transport Protocol for Mobile Hosts
with Heterogeneous Wireless Interfaces. In ACM
MobiCom, 2003.
[14] J. Huang, Q. Xu, B. Tiwana, Z. M. Mao, M. Zhang,
and P. Bahl. Anatomizing Application Performance
Diﬀerences on Smartphones. In ACM MobiSys, 2010.
[15] V. Jacobson, R. Braden, and D. Borman. TCP
Extensions for High Performance. IETF RFC 1323,
May 1992.
[16] P. Key, L. Massouli´e, and B. Wang. Emulating
Low-priority Transport at the Application Layer: a
Background Transfer Service. In ACM SIGMETRICS,
2004.
[17] C. Kreibich, N. Weaver, B. Nechaev, and V. Paxson.
Netalyzr: Illuminating the Edge Network. In IMC’10,
2010.
[18] Y. Lee. Measured TCP Performance in CDMA 1x
EV-DO Networks. In PAM, 2006.
[19] D. Leith and R. Shorten. H-TCP: TCP for High-speed
and Long-distance Networks. In PFLDnet, 2004.
[20] X. Liu, A. Sridharan, S. Machiraju, M. Seshadri, and
H. Zang. Experiences in a 3G Network: Interplay
between the Wireless Channel and Applications. In
ACM MobiCom, 2008.
[21] R. Ludwig, B. Rathonyi, A. Konrad, K. Oden, and
A. Joseph. Multi-layer Tracing of TCP over a Reliable
Wireless Link. In ACM SIGMETRICS, 1999.
[22] K. Nichols and V. Jacobson. Controlling Queue Delay.
ACM Queue, 10(5):20:20–20:34, May 2012.
[23] J. Prokkola, P. H. J. Per¨al¨a, M. Hanski, and E. Piri.
3G/HSPA Performance in Live Networks from the
End User Perspective. In IEEE ICC, 2009.
[24] D. P. Reed. What’s Wrong with This Picture? The
end2end-interest mailing list, September 2009.
[25] N. Spring, M. Chesire, M. Berryman,
V. Sahasranaman, T. Anderson, and B. Bershad.
Receiver Based Management of Low Bandwidth
Access Links. In IEEE INFOCOM, 2000.
[26] S. Sundaresan, W. de Donato, N. Feamster,
R. Teixeira, S. Crawford, and A. Pescap`e. Broadband
Internet Performance: a View from the Gateway. In
ACM SIGCOMM, 2011.
[27] K. Tan, J. Song, Q. Zhang, and M. Sridharan.
Compound TCP: A Scalable and TCP-Friendly
Congestion Control for High-speed Networks. In
PFLDnet, 2006.
[28] D. X. Wei, C. Jin, S. H. Low, and S. Hegde. FAST
TCP: Motivation, Architecture, Algorithms,
Performance. IEEE/ACM Transactions on
Networking, 14:1246–1259, December 2006.
[29] H. Wu, Z. Feng, C. Guo, and Y. Zhang. ICTCP:
Incast Congestion Control for TCP in Data Center
Networks. In ACM CoNEXT, 2010.
[30] L. Xu, K. Harfoush, and I. Rhee. Binary Increase
Congestion Control (BIC) for Fast Long-distance
Networks. In IEEE INFOCOM, 2004.
[31] Q. Xu, J. Huang, Z. Wang, F. Qian, A. Gerber, and
Z. M. Mao. Cellular Data Network Infrastructure
Characterization and Implication on Mobile Content
Placement. In ACM SIGMETRICS, 2011.
[32] P. Yang, W. Luo, L. Xu, J. Deogun, and Y. Lu. TCP
Congestion Avoidance Algorithm Identiﬁcation. In
IEEE ICDCS, 2011.
APPENDIX
A. LIST OF EXPERIMENT SETUP
See Table 1.
B. SAMPLE TCP RMEM MAX SETTINGS
See Table 2.
341Figure
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
Location
Signal
Strength
Raleigh
Chicago
Seoul
Good
Weak
Client
Model
Traﬃc
Pattern
Location
Congestion
Control
Server
Network
Linux Laptop
Long-lived TCP
Princeton
CUBIC
Seoul
Raleigh
Raleigh
Good
Galaxy S2
Raleigh
Good
Galaxy S2
Droid Charge
Traceroute
Long-lived TCP
Raleigh
CUBIC
AT&T
HSPA+
Ping
Raleigh
-
Carrier
AT&T
Sprint
T-Mobile
Verizon
SK Telecom
Network
Type
HSPA+
EVDO
LTE
WiFi
AT&T
Verizon
AT&T
Sprint
T-Mobile
Verizon
HSPA+
EVDO
LTE
HSPA+
EVDO
AT&T
HSPA+
Raleigh
Good
Linux Laptop
Long-lived TCP
Raleigh
CUBIC
Raleigh
Good
Linux Laptop
Long-lived TCP
Raleigh
NewReno
Vegas
CUBIC
BIC
HTCP
HSTCP
Raleigh
Good
Raleigh
Good
Linux Laptop
Mac OS 10.7 Laptop
Windows 7 Laptop
Galaxy S2
iPhone 4
Windows Phone 7
Galaxy S2
Droid Charge
Long-lived TCP
Raleigh
CUBIC
AT&T
HSPA+
Long-lived TCP
Raleigh
CUBIC
AT&T
Verizon
HSPA+
LTE
Raleigh
Good
Galaxy S2
Short-lived TCP
Long-lived TCP
Raleigh
CUBIC
AT&T
HSPA+
Raleigh
Raleigh
Raleigh
Raleigh
Seoul
Good
Good
Weak
Good
Good
Weak
Galaxy S2
Droid Charge
Long-lived TCP
Seoul
CUBIC
AT&T
Verizon
HSPA+
LTE
Galaxy S2
Long-lived TCP
Raleigh
CUBIC
AT&T
HSPA+
Galaxy S2
Long-lived TCP
Princeton
CUBIC
Galaxy S2
Droid Charge
EVO Shift
Long-lived TCP
Raleigh
CUBIC
-
AT&T
Verizon
Sprint
SK Telecom
WiFi
HSPA+
LTE
EVDO
Raleigh
Good
Galaxy S2
Short-lived TCP
Long-lived TCP
Raleigh
CUBIC
AT&T
HSPA+
Raleigh
Good
Raleigh
Good
Raleigh
Good
Raleigh
Raleigh
Good
Good
Galaxy S2
Droid Charge
Galaxy S2
Droid Charge
EVO Shift
Galaxy S2
Droid Charge
EVO Shift
Long-lived TCP
Seoul
CUBIC
Long-lived TCP
Raleigh
CUBIC
Long-lived TCP
Raleigh
CUBIC
Galaxy S2
Long-lived TCP
Raleigh
Galaxy S2
Long-lived TCP
Raleigh
CUBIC
Vegas
CUBIC
Table 1: The setup of each experiment
AT&T
Verizon
AT&T
Verizon
Sprint
AT&T
Verizon
Sprint
AT&T
AT&T
HSPA+
LTE
HSPA+
LTE
EVDO
HSPA+
LTE
EVDO
HSPA+
HSPA+
Samsung Galaxy S2 (AT&T) HTC EVO Shift (Sprint)
Samsung Droid Charge (Verizon)
LG G2x (T-Mobile)
WiFi
UMTS
EDGE
GPRS
HSPA+
WiMAX
LTE
Default
110208
110208
35040
11680
262144
-
-
110208
110208
393216
393216
393216
-
524288
-
110208
393216
196608
35040
11680
-
-
484848
484848
393216
110208
35040
11680
262144
-
-
110208
Table 2: Maximum TCP receive buﬀer size (tcp rmem max ) in bytes on some sample Android phones for
various carriers. Note that these values may vary on customized ROMs and can be looked up by looking for
“setprop net.tcp.buﬀersize.*” in the init.rc ﬁle of the Android phone. Also note that diﬀerent values are set
for diﬀerent carriers even if the network types are the same. We guess that these values are experimentally
determined based on each carrier’s network conditions and conﬁgurations.
342