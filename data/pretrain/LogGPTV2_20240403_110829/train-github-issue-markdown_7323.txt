I want to decode gif by android-gif-drawable, but load picture with glide.  
android-gif-drawable can pass byte array to decode gif and my code is:
    public void test1(final GifImageView gifImageView) throws IOException {
            // String path1 =
            // "http://img.newyx.net/news_img/201306/20/1371714170_1812223777.gif";
            // test gif url
            String path = "http://cdn.duitang.com/uploads/item/201311/20/20131120213622_mJCUy.thumb.600_0.gif";
            URL url = new URL(path);
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setConnectTimeout(5 * 1000);
            conn.setRequestMethod("GET");
            if (conn.getResponseCode() == HttpStatus.SC_OK) {
                InputStream sourceIs = conn.getInputStream();
                byte[] b = InputStreamTOByte(sourceIs);
                final GifDrawable gifFromStream = new GifDrawable(b);
                gifImageView.post(new Runnable() {
                    @Override
                    public void run() {
                        gifImageView.setImageDrawable(gifFromStream);
                    }
                });
            }
        }
        public static byte[] InputStreamTOByte(InputStream in) throws IOException {
            ByteArrayOutputStream outStream = new ByteArrayOutputStream();
            int BUFFER_SIZE = 1024;
            byte[] data = new byte[BUFFER_SIZE];
            int count = -1;
            while ((count = in.read(data, 0, BUFFER_SIZE)) != -1) {
                outStream.write(data, 0, count);
            }
            data = null;
            return outStream.toByteArray();
        }
and I use path url to test, it can display normal. Then I use glide to decode
the same path url.  
My code is this:
    // first
    // Glide.with(MainActivity.this).load(path).into(imageView);
    // second
    Glide.with(MainActivity.this)
        .load(path)
        .asGif()
        .toBytes()
        .into(new SimpleTarget() {
            @Override
            public void onResourceReady(final byte[] resource,
                    GlideAnimation glideAnimation) {
                GifDrawable gifFromStream;
                try {
                    gifFromStream = new GifDrawable(resource);
                    gifImageView.setImageDrawable(gifFromStream);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });
No matter the first way or the second way, pictures can't display.