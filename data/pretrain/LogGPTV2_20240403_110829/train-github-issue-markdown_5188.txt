**System information**  
-Google Colab  
-GPU  
-Python 3  
-Tensorflow tf-nightly-2.0-preview
When I write the code:  
`from __future__ import absolute_import, division, print_function`  
`!pip install tf-nightly-2.0-preview`  
`import tensorflow as tf`  
`tf.enable_eager_execution()`  
It gives me the error **AttributeError: 'module' object has no attribute
'enable_eager_execution'**
whereas when I simply run the code as:  
`from __future__ import absolute_import, division, print_function`  
`!pip install tf-nightly-2.0-preview`  
`import tensorflow as tf`  
`tf.executing_eagerly()`  
It returns **'True'** , which means that eager execution is working by default
without even enabling it before.  
If I proceed without using tf.enable_eager_execution() in this collab tutorial
https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/r2/tutorials/generative/image_captioning.ipynb#scrollTo=U8l4RJ0XRPEm  
In the cell Caching the features extracted from InceptionV3,  
the last line with "np.save(path_of_feature, bf.numpy())" gives me an error
saying **"Tensor has no attribute called numpy()"**  
If I see the type() of batch_features in the line:  
`batch_features = image_features_extract_model(img)` line is returning a graph
tensor, instead of an eager tensor. It's not supposed to do that. Does this
means that eager execution is not yet enabled or is this a bug.