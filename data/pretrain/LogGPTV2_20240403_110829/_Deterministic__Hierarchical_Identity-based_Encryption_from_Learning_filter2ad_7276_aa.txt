title:(Deterministic) Hierarchical Identity-based Encryption from Learning
with Rounding over Small Modulus
author:Fuyang Fang and
Bao Li and
Xianhui Lu and
Yamin Liu and
Dingding Jia and
Haiyang Xue
(Deterministic) Hierarchical Identity-based Encryption from
Learning with Rounding over Small Modulus
Fuyang Fang1,2,3, Bao Li1,2, Xianhui Lu1,2, Yamin Liu1,2
∗
, Dingding Jia1,2, Haiyang Xue1,2
1State Key Laboratory of Information Security, Institute of Information Engineering,
Chinese Academy of Sciences, Beijing, China
2Data Assurance and Communication Security Research Center, Chinese Academy of Sciences
3University of Chinese Academy of Sciences, Beijing, China
{fyfang13,lb,xhlu,ymliu,ddjia,hyxue12}@is.ac.cn
ABSTRACT
In this paper, we propose a hierarchical identity-based en-
cryption (HIBE) scheme in the random oracle (RO) model
based on the learning with rounding (LWR) problem over s-
mall modulus q. Compared with the previous HIBE schemes
based on the learning with errors (LWE) problem, the ci-
phertext expansion ratio of our scheme can be decreased to
1/2. Then, we utilize the HIBE scheme to construct a de-
terministic hierarchical identity-based encryption (D-HIBE)
scheme based on the LWR problem over small modulus. Fi-
nally, with the technique of binary tree encryption (BTE) we
can construct HIBE and D-HIBE schemes in the standard
model based on the LWR problem over small modulus.
Keywords
(hierarchical) identity-based encryption; deterministic (hier-
archical) identity-based encryption; learning with rounding
1.
INTRODUCTION
Hierarchical identity based encryption (HIBE) is a kind of
identity-based encryption (IBE) scheme where any user at
each level has the ability to delegate private keys for its next
level [9,10]. The constructions of HIBE schemes from lattice
have been studied for several years [1, 2, 7] and all of these
schemes are based on the learning with errors (LWE) prob-
lem [13]. In these LWE-based constructions, the ciphertext
expansion ratios were more than O(log q) due to the error
correction for recovering the messages. As a variant of the
LWE problem, the learning with rounding (LWR) problem
was proposed by Banerjee et al.
in [4] and needs not to
sample any additional error item. The authors of [4] proved
that the hardness of the LWR problem can be reduced to
the LWE problem when the modulus q is super-polynomial.
∗This author is the corresponding author.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
ASIA CCS ’16, May 30-June 03, 2016, Xi’an, China
c(cid:13) 2016 ACM. ISBN 978-1-4503-4233-9/16/05. . . $15.00
DOI: http://dx.doi.org/10.1145/2897845.2897922
Recently, Alwen et al. [3] and Bogdanov et al. [6] proved
that the hardness of the LWR problem can be reduced to
the LWE problem when the modulus q is polynomial. Thus,
the ﬁrst question is whether the ciphertext expansion ratio
of the HIBE schemes can be reduced with the LWR problem
over small modulus instead of the LWE problem.
Escala et al. [8] extended HIBE to the deterministic sce-
nario and proposed the notion of deterministic hierarchical
identity-based encryption (D-HIBE or HIB-DE). However,
they only constructed a pairing-based D-HIBE scheme in [8].
So far, the only known D-IBE scheme in the standard mod-
el based on the LWR assumption was proposed by Xie et
al. [14]. However, the security of their scheme required that
the modulus q should be super-polynomial and they did not
consider the D-HIBE schemes. Therefore, the second ques-
tion is whether the LWR problem with small modulus can
be used to construct D-HIBE schemes.
1.1 Our Contributions
Firstly, we construct an adaptive secure HIBE scheme
based on the LWR problem in the random oracle model,
where the ciphertext expansion ration in our schemes can be
reduced to 1/2. Secondly, we utilize the above HIBE scheme
to construct an adaptive secure D-HIBE scheme based on
the LWR problem in the random oracle model. Finally, by
using the technique of binary tree encryption (BTE) we re-
move the random oracles and construct HIBE and D-HIBE
schemes with selective security based on the LWR problem
in the standard model. In the following table 1, we describe
the parameter settings of our D-HIBE schemes, with and
without random oracles.
Scheme
Model
D-HIBE
RO
Secret Key
(cid:101)O((cid:96)n2d2)
(cid:101)O((cid:96)n2d2)
(cid:101)O((cid:96)n2d2)
(cid:101)O((cid:96)n2d3)
Public Key Ciphertext
m log p
Standard
D-HIBE
d+1ω(log2d m) and q ≥ 2mpB.
In this table, m = O(n log q), p ≥ m
Let d be the maximum hierarchy depth and (cid:96) be the depth of the
identity in question.
m log p
3
2
Table 1: The parameter of our D-HIBE schemes
The security of all our schemes are based on the hardness
of the LWR problem with small modulus [6].
TECHNIQUES: When constructing LWR-based (H)IBE
schemes, we observe that the basis delegation techniques
in [1, 7] are not applicable to the LWR problem with small
907modulus.
In the proof of security for the scheme in [14],
the simulator set Fid∗ := [A0|A0R]. When constructing
the challenge ciphertext, the simulator chose m samples
(A0, b = At
0m + e) from LWE distribution and set
0m + e(cid:99)p
(cid:98)At
(cid:98)Rt(At
0m + e)(cid:99)p
0m(cid:99)p
0m)(cid:99)p
(cid:98)At
(cid:98)Rt(At
= (cid:98)Ft
(cid:20)
(cid:21)
(cid:20)
∗
c
=
(cid:21)
=
id∗ m(cid:99)p
0m + e)(cid:99)p = (cid:98)Rt(At
We notice that the above reduction works when the modulus
q is super-polynomial. However, with the polynomial mod-
ulus q we cannot give a similar reduction. On one hand, the
simulator does not have (cid:98)Rt(At
0m)(cid:99)p
with high probability for polynomial modulus q; On the oth-
er hand, the simulator cannot construct the second item of
challenge ciphertext (cid:98)(A0R)tm(cid:99)p from (cid:98)At
0m(cid:99)p with the
trapdoor R. Furthermore, when constructing the HIBE and
D-HIBE schemes the dimension of lattice can not increase
along with the hierarchy depth since that the number of the
samples of the LWR problem we used is given beforehand.
In [2], Agrawal, Bobeh and Boyen proposed a technique
of delegating a short basis without increasing the dimen-
sion. We recall their technique brieﬂy as follows: Let B =
{b1, .., bm} be a short basis of lattice Λ and R be a matrix
sampling from a distribution Dm×m on low norm matrices.
Then they can obtain a short basis for lattice RΛ by ran-
domizing the basis RB = {Rb1, .., Rbm}. More important-
ly, given a lattice Λ without a short basis, they designed
another algorithm SampleRwithBasis that can sample a
low norm matrix R and a short basis T for lattice RΛ. In
their paper they showed that the matrices R, as private keys
during the simulation, were statistically close to the distri-
bution of private keys in the real HIBE schemes.
In our work, we show that the technique in [2] can be
applied to construct our (H)IBE and D-HIBE schemes.The
encryption matrix Fid and the ciphertext c are
Fid := AR
−1
id ;
c := (cid:98)Ft
idm(cid:99)p
where A is the public matrix with a short basis TA. In the
proof of security for our scheme, the simulator can set A :=
A0Rid∗ where A0 is uniform over Zn×m
and obtain that
−1
Fid∗ := A0Rid∗ R
id∗ . When constructing the challenge
0s(cid:99)p)
ciphertext, the simulator chooses m samples (A0,(cid:98)At
from the LWR distribution and sets
q
∗
c
= (cid:98)At
0s(cid:99)p = (cid:98)(A0Rid∗ R
id∗ )ts(cid:99)p = (cid:98)Ft
−1
id∗ s(cid:99)p
which solves the problem in simulating the challenge ci-
phertext. Meanwhile, the dimension of lattice remains un-
changed along with the hierarchy depth.
1.2 Related Work
In [5], Bellare et.al extended the notion of lossy trapdoor
function (LDTF) [12] to identity-setting and introduced the
notion of identity-based LTDF (IB-LTDF), which could be
used to construct D-IBE schemes. With IB-LTDF they con-
structed a pairing-based D-IBE scheme with selective secu-
rity. In PKC 2014, Escala et al. [8] introduced the notion of
hierarchical identity-based trapdoor functions (HIB-TDFs),
which was an extension of IB-LDTF [5]. With HIB-TDFs
they could construct (D)-HIBE schemes and HIB hedged
encryption schemes. They instantiated the HIB-TDFs with
pairing and constructed a pairing-based D-HIBE scheme.
However, they left possible constructions based on lattice as
an open line for future work.
2. PRELIMINARIES
Let λ be the security parameter and we use negl (λ) to de-
note an arbitrary negligible function f (λ) such that f (λ) =
o(λ−c) for every ﬁxed constant c. We say that a probabil-
ity is overwhelming if it is 1 − negl (λ). Let poly(λ) de-
notes an unspeciﬁed function f (λ) = O(λc) for some con-
stant c. We use (cid:101)O(λ) be a function f (λ) if f (λ) = O(λ ·
logcλ) for some ﬁxed constant c. We denote by a $←− Zq
that a is randomly chosen from Zq. We use PPT denotes
probability polynomial-time. We use A ≈c B denotes that
A is computationally indistinguishable from B.
2.1 Hierarchical IBE and D-HIBE
A HIBE scheme of depth d with the message space M
can be deﬁned by a tuple of PPT algorithms (KeyGen,
Derive, Extract, Enc, Dec) as below: The probabilistic
algorithm KeyGen generates the public key P P and the
master key msk. The Derive algorithm takes as input an
identity id = {i1, ..., i(cid:96)} at depth (cid:96) ≤ d and the private
key SKid(cid:96)−1 of the parent identity id(cid:96)−1 = {i1, ..., i(cid:96)−1} at
depth (cid:96)−1 > 0 and outputs the private key Skid for identity
id. The Extract algorithm uses the msk to extract a pri-
vate key SKid corresponding to a given identity id. Given a
message m ∈ M and an identity id, the probabilistic algo-
rithm Enc uses the P P to encrypt the m with respect to the
identity id and outputs a ciphertext c. Given a ciphertext
c with respect to an identity id, the deterministic algorithm
Dec uses the private key SKid to recover the message m.
When the ciphertext c is invalid, the algorithm outputs ⊥.
A D-HIBE [8] scheme is similar to the deﬁnition of HIBE,
except that the Enc algorithm in a D-HIBE scheme is a
deterministic algorithm.
For the HIBE or D-HIBE system described above, the cor-
rectness is that: for any message m ∈ M, id and (P P, msk)
generated by KeyGen, c is the ciphertext output by the