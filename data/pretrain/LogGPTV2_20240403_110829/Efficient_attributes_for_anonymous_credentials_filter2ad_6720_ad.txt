values, in this case a disjunction of equality proofs.
If the user
intends to prove that her attribute is one out of ten variants, she
needs to provide ten equality proofs similar to those:
(mod n) ∨
) : D1/gsocial_beneﬁt ≡ ±hρ
PK{(ρ, ρ
0
D2/gstudent ≡ ±hρ0
(mod n)} .
Our new method also facilitates the OR-proof in a constant num-
ber of exponentiations. It involves (a) committing to the dedicated
prime attribute Rµ1
1 in the ﬁrst line of the proof statement, (b) show-
ing that the user’s attribute value is contained in the list of options
and that it divides the credential message (second line), and (c)
proving that the commitment is free from ±1 (third line):
0
, ϕ, γ, ψ, ξ, σ) :
, µ0, µ1, ρ, α, β, δ, ρ, ρ
0 Rµ1
PK{(ε, ν
0
Z ≡ ±Rµ0
1 A
i ei ≡ ±Dδhρ0
gQ‘
D = gαhϕ ∧ g = (
0εSν0
D
g
(mod n) ∧ D ≡ ±gαhρ mod n ∧
mod n ∧ 1 ≡ ±Dβgµ1 hρ0
mod n ∧
)γ hψ ∧ g = (gD)σhξ ∧ [. . .]} .
This construction requires two commitments (computing the com-
mitments and proving their knowledge) and four linear relationship
proofs in total. The number of terms and exponentiations is es-
sentially independent from the number of OR-Terms. We note that
prime exponents are publicly known and very small, thus, gQ‘
i ei
counts as one exponentiation for all practical purposes. Thus, we
account for a constant overhead of 23 exponentiations over a nor-
mal proof of possession.
5.3 Quantitative Analysis
We compare the computational complexity between the
Camenisch-Lysyanskaya system, a bit-vector encoding, and our
method in Table 1. We count the number of multi-base exponenti-
ations and the number of modular exponentiations.
The comparison is based on the following parameters:
L: total number of attribute bases without secret key
l: number of string/integer attributes
k: number of prime-encodable attributes/value set for multi-
variate ﬁnite-set attributes
i: number of attributes referenced in a proof
We notice that in general the proofs of possessions of CL creden-
tials are impacted by the total number of attribute bases L, whereas
the bit-vector and prime encoding only depend on the number of
string/integer attributes l. For simple attribute proofs, CL and bit-
vector encoding require O(L) exponentiations whereas our system
only depends on the number of string/integer attributes O(l).
If
one considers a credential with only binary or ﬁnite-set attribute,
CL and bit-vector encoding have a complexity of O(L), whereas
our system runs in constant time O(1). The AND proofs are im-
pacted by the total number of attributes and require O(L) expo-
nentiations. Once the proof of possession is complemented by an
OR-statement, CL encoding requires O(i) terms and O(L + i) ex-
ponentiations4. A traditional bit-vector encoding as discussed in
Section 4.1 involves bit-commitments to all encoded attributes (two
exp. for computing, two for proving), bitwise OR-proofs for all at-
tributes (two exp.), and one equality proof over their product (two
exp.). This amounts to O(k + i) terms and O(L + i) exponentia-
tions. Our system allows for proofs with a constant term number.
The total number of prime-encodable attributes k does not impact
the performance at all. This comes at a cost of a constant overhead
of 18 exponentiations. We discuss the structures of the AND/OR
proof statements in Sections 5.2.1 and 5.2.3.
To stress our point, we make an experiment with the number
of prime-encodable attributes being large against the number of
string/integer attributes: k (cid:29) l. Say we only encode a huge num-
ber of binary or ﬁnite-set attributes (L = k (cid:29) i). In this case
the results are as follows: then proof statements with CL and bit-
vector encoding will converge to O(L) exponentiations. Our sys-
tem, however, converges to a constant number of terms and expo-
nentiations O(1). There is a theoretical impact of the length of the
exponents for a large number of prime attributes encoded in one
attribute base. For all practical applications it is negligible.
6. APPLICATIONS
6.1 Requirements
An application of our extension to the CL credential system
needs to fulﬁll two requirements: (a) a sufﬁcient supply of prime-
encodings and (b) a certiﬁed binding between prime-encoding and
discrete values. First, we observe that the number of primes below
a certain number x is estimated by the prime number theorem as
outlined in [41] and converges to π(x) = x/ln(x). There exist, for
instance, roughly 75.638 prime numbers smaller than 20 bits. This
is a plentiful supply for most application scenarios. Second, the
issuer needs to sign the binding between primes and discrete val-
ues in its public key. Thus, the binary/discrete values used by the
credential system are static. This excludes highly dynamic appli-
cations with ad-hoc issuing of credentials with new attribute types,
however, does not impact any of the standard application scenarios
for credential systems. Typical organizations issuing credentials
4Per i we have two exp. to compute the commitment, two to prove
its knowledge, and two to prove equality.
are governments, banks, telco operators, etc. Their vocabulary for
binary/ﬁnite-set attributes is standardized well in advance.
We observe that space constraints may limit the number of ﬁnite
set attributes the system can govern. The size of the attribute ex-
ponent in the user’s credential limits the number of prime ﬂags set
in a credential. The size of the issuer’s public key limits the total
number of attribute realizations certiﬁed for the system. Thus, even
if many sets in real world are inherently ﬁnite, a system needs to
balance between efﬁciency gain and and space consumption.
The proposed credential system is particularly suited for multiple
classes of attributes:
Binary. The attribute can either be present or not, true or false,
e.g., being a civil servant.
Finite Set. A ﬁnite set of discrete attribute values, where a user
may realize at most one potential value. E.g., hair color.
Multi-Variate Finite Set. A ﬁnite set of discrete attribute values,
where a user may realize any subset of values. A user may
hold multiple values for an attribute such as profession.
Finite Data Structures. Complex data structures of discrete val-
ues from a ﬁnite set, where trees are most useful: a user may
realize a sub-tree or path of a super-tree predetermined by the
issuer. Examples for such attributes are expertise or health
taxonomies as well as role hierarchies.
These attribute types impact a large variance of application scenar-
ios. We choose electronic identity cards as primary example and
complement that with complex expertise as well as medical cre-
dentials in the Appendix A.
6.2 Examples for Electronic Identity Cards
Currently, different European countries are issuing different vari-
ants for electronic identity cards (EID). The computational restric-
tions of such smartcards are immanent. The desire for protection of
citizen rights by privacy-enabling technologies is also a recurring
topic. Particularly, in the area of secondary use—that is, when a
third party is accessing the user’s data—privacy concerns surface
quickly. In early proposals, arbitrary third parties could access the
full data set about the user.
We surveyed different data sets for EID and driver’s license cards
and use the Belgium EID card as example [40]. Table 2 outlines
a superset of example attributes, where the left column contains
string and integer attributes, whereas the right column contains at-
tributes encodable by our prime representation. We explicitly men-
tion minority status as, for instance, the Belgium EID card speciﬁ-
cation [40, pp.12] explicitly covers this option5.
Our scheme is particularly handy for attributes that have a range
of a ﬁnite set of values, where the user may realize a multi-valued
subset off the range. Minority status, profession, or academic de-
gree are such attributes. A citizen may, for instance, be a doctor as
well as a civil servant. Traditional CL signatures encodes each at-
tribute in a separate attribute base, for multi-variate attributes from
5Application of such an attribute varies much from country to
country. For instance, Belgium encodes a status for blind and for
the visually impaired citizens. The German driver’s license also en-
codes the requirement to wear glasses. Further attributes for deaf
or hearing-impaired citizens are thinkable. Though countries also
envision attributes such as profession (e.g., doctor) or role as civil
servant, their storage on the EID card itself is currently subject to
much dispute.
Table 2: Potential attributes on electronic identity cards.
String/Integer
1) name
2) ﬁrst name
3) date of birth
4) identiﬁcation number
5) date of issuance
Binary/Finite Set
6) sex
7) nationality
8) place of birth
9) type of card
10) place of issuance
11) validity time
12-13) eye and hair color
14-16) minority status
17-18) social beneﬁt status
19-21) profession
22-23) academic degree
Example Values
{male, female}
193 recognized states
6400 villages and cities (e.g., Germany)
{EID, kids_card}
429 districts (e.g., Germany)
{2_year, 5_year, 10_year}
6 hair colors, 8 eye colors
{blind, vis_impaired, deaf,
hear_impaired, phys_impaired}
{none, unemployed, social_beneﬁt}
{student, teacher, civil_servant, doctor, . . . }
{B.S., M.S., Ph.D., M.D., . . . }
Table 3: Complexity in EID Scenario: PEID,CS – CL requires
nine commitments and eleven equality proofs; prime encod-
ing contents itself two commitments and four relationship
proofs. PEID,OP – CL requires and AND proof over all L at-
tributes, whereas the prime encoding is only impacted by the l
string/integer attributes.
Parameter
Number of attribute bases
Exp. proof of possession
MExp. in AND-proof for PEID,OP
Exp. in AND-proof for PEID,OP
MExp. in OR-proof for PEID,CS
Exp. in OR-proof for PEID,CS
CL Prime
23
27
1
27
28
67
6
10
1
10
9
28
ﬁnite set it even needs to encode each potential realization in a
base. For the attributes in Table 2, this results in 23 attribute bases.6
With our prime encoding we can fold all binary and ﬁnite-set
attributes into one attribute base. We choose a prime ei for all
binary attributes and ﬁnite set attribute realizations in Table 2: this
involves 193 possible realization of nationality, 429 realizations of
place of issuance districts, 6400 districts for place of birth as well
as several hundred professions, and 14 color variations for hair and
eyes. We dedicate the ﬁrst attribute base, for the product of the
corresponding prime numbers ej that the user realizes. We are left
with ﬁve normal attribute bases and one attribute base R1 for the
prime encoding. Thus, the number of bases is already one fourth
and all proofs of possessions speed up by factor four.
Opinion Polls
Another often discussed example is online opinion polls. In this
scenario, a user needs to prove that she belongs to a certain statisti-
cal class retaining a suitable anonymity set. Opinion polls usually
gather demographic data, but may also collect educational and pro-
fessional parameters. We leave the range proof for the date of birth
aside as it is equal for both methods.7 The remaining proof may
6Nationality and place of issuance will be encoded by a index num-
ber. We assume the minority and social beneﬁt status as multi-
variate attributes with seven realizations spread over ﬁve attributes.
For the potentially multi-variate attributes profession and academic
degree we reserve ﬁve attributes in total. The number of attribute
bases is therefore 23 and L = 24.
7Of course, there is also a very efﬁcient method for corse-grained
range proofs leveraging the prime encoding. We do not use it for
be constructed according to a conjunctive selective disclosure as
speciﬁed in policy PEID,OP:
sex = female ∧ nationality = French ∧
place_of _birth = Paris ∧ social_beneﬁt = none ∧
profession 1 = doctor ∧ profession 2 = civil_servant ∧
ac_degree 1 = M.D. ∧ ac_degree 2 = Ph.D.
We discussed this general proof structure in Section 5.2.1. A tra-
ditional approach requires a proof of possession over L attribute
bases.8. We outline in Table 3 that our new system facilitates the
proof without any overhead to the proof of possession. It is there-
fore only impacted by the l string/integer attributes. It is three times
as efﬁcient, even though we only safe the k attribute bases for the
prime-encoded attributes.
Cultural Subsidies
Virtually all countries grant subsidies for access to cultural institu-
tions to particular population groups: children, students, seniors as
well as handicapped persons and persons eligible for social bene-
ﬁts. Partially, the corresponding groups show hesitation to disclose
their special status because of privacy concerns. Policy PEID,CS is
depicts a disjunction proof over attributes from Table 2:
Wminority (blind, vis_impaired, deaf, . . .) ∨
Wsocial_beneﬁt (unemployed, social_beneﬁt) ∨
Wprofession (student, teacher, civil_servant) ∨
(type = kids_card) .
As demonstrated in Section 5.2.3, this amounts to a proof of
possession, attribute commitment to all relevant attributes (nine
terms)9, and a second step disjunction of equality proofs for the
possible attribute values (eleven terms). Our new scheme reduces
the effort to a single multi-element OR-proof in the prime encod-
ing. As shown in Section 4.4, the user needs to provide a proof
of possession with four terms, a commitment to the prime attribute
base and proofs of their knowledge and division (three terms) as
well as proofs that the commitment does not contain ±1 in a sec-
ond group (three terms). We compare both methods in Table 3 and
this comparison.
8We leverage the system’s capability to have multiple values for
the attribute profession and academic degree ac_degree.
9Note
and
profession are spread over multiple attribute bases to ac-
count of multiple realizations by a user. We assumed three for the
minority, two for social_beneﬁt, and three for profession, thus,
nine terms in total.
attributes minority,
social_beneﬁt,
that
the
observe that our new method is three times as efﬁcient for all proofs
of possessions as well as the OR-proof for policy PEID,CS.
6.3 Discussion
Our method is a enabler for credential systems on small de-
vices. Until now, application designers for this area restricted them-
selves to simple scenarios: credentials must only govern a minimal
number of attributes, proof statements must be as simple as possi-
ble. The linear complexity in the total number of attributes for the
proofs of possession put EID systems at peril. The vastly growing
number of terms and commitments, and thus computational and
communication costs, for complex proof statements acted as sec-
ond bottleneck. These tremendous limitations rendered sensible
applications on small devices virtually impossible.
We have shown that our prime-encoding idea makes complex
proofs in various application scenarios possible. Be it beneﬁt ac-
cess with a great anonymity set or collecting demographic data
in a private manner in the example of an electronic identity card;
be it complex expertise taxonomies of a corporate card; or be it
structured diagnostic statements in a healthcare card—our system
achieves tremendous performance boosts. This does not only hold
for the AND/OR example policies, but also for the overall reduc-
tion of attribute bases. The latter parameter impacts every single
proof. All these improvements bring applications barely running
in feasible time with traditional encodings well in reach of small
devices.
In addition to occupying a high ground in the quest for perfor-
mance, the system comes with two subtle advantages: (a) discrete
and structured attributes, (b) signiﬁcant policy independence. First,
we focus on discrete values from ﬁnite sets. These may be as simple
as binary ﬂags or complex data structures. In contrast to an unstruc-
tured integer/string encoding, discrete values can be manipulated
by equality and relationship proofs. Their semantic is accessible to
the credential system itself. Second, we observe that our method
requires a constant number of terms and commitments for pure
equality, conjunction and disjunction proofs with binary/ﬁnite-set
attributes. Independent from the number of AND/OR clauses in
the policy, the proof only uses a ﬁxed low number of exponentia-
tions. This makes a transaction and their expected response time
predictable to device producers.10