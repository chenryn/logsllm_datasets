we also get the formula (3.4).
With the analysis above, it’s natural to get the following
theorem.
Theorem 3.2. Given a uniformly random instance of
NTRU-1998, NTRU-2001 with an odd dg, NTRU-2001 with
q = dr, NTRU-2005 with gcd(q, dg) = 1 and NTRU-2005
with q | dr, i.e. for any message m, ciphertext c, public key
H (or polynomial h) and the corresponding blinding value
vector r, there exists a polynomial time algorithm that on
input H or h outputs an invertible circular matrix ˆH with
very high probability, such that
Theorem 3.3. For the NTRU-1998 (also NTRU-2001 with
an odd dg, NTRU-2001 with q = dr, NTRU-2005 with gcd(q, dg)
= 1 and NTRU-2005 with q | dr) cryptosystem with enough
(reaches O( 3N
2 )) independent recipients’ ciphertexts and cor-
responding public keys known, there exists a polynomial time
algorithm to recover the plaintext successfully.
P roof . Algorithm consists of three steps.
Step 1. Separating r from Hr and Derandomization
By Theorem 3.2, we can get
r = b − ˆHm mod q.
Then, we do the inner product
(b − ˆHm)T (b − ˆHm) = rT r mod q.
Note that rT r = d is a constant, we get
mT ˆHT ˆHm − 2bT ˆHm = d − bT b mod q.
(3.5)
By Lemma (2.2), ˆHT ˆH is a symmetric circular matrix.
Step 2. Linearization
We linearize the equations (3.5). Let d − bT b = s, bT ˆH =
(w0, w1,··· , wN−1) and
0BBB@
ˆHT ˆH =
a0
a1
...
aN−1
a0
...
aN−1 aN−2
. . .
. . .
. . .
. . .
a1
a2
...
a0
1CCCA
where ai = aN−i, for i ∈ {0, 1,··· , N − 1}. From (3.5), we
get
1 + ··· + m2
N−1)
0 + m2
a0(m2
+ a1(m1m0 + m2m1 + ··· + m0mN−1)
+ ············
+ aN−1(mN−1m0 + m0m1 + ··· + mN−2mN−1)
− 2w0m0 − 2w1m1 − ··· − 2wN−1mN−1
= s mod q
(3.6)
Let xi = mim0 +mi+1m1 +···+mN−1mN−i−1 +m0mN−i +
··· + mi−1mN−1, for i = 0, 1,··· , N − 1. Note that N is an
odd prime, ai = aN−i and xi = xN−i for i ∈ {0, 1,··· , N −
1}, then the formula (3.6) is equivalent to
a0x0 + 2a1x1 + ··· + 2a[ N
2 ]x[ N
−··· − 2wN−1mN−1 = s mod q.
2 ] − 2w0m0 − 2w1m1
(3.7)
Of course, even if N is even, we can easily obtain the same
result.
Furthermore, NTRU is semantically insecure, since r(1) =
0 in NTRU-1998 or r(1) = dr in NTRU-2001 and NTRU-
2005. From formula (2.2), we get
h(1)r(1) + m(1) = c(1) mod q,
For several variants of NTRU, we distinguish three cases:
• For NTRU-1998, we can easily get
m0 + m1 + ··· + mN−1 = c(1) mod q.
(3.8)
ˆHm + r = b mod q,
and
where b = ˆHc mod q. It requires O(N 2) arithmetic opera-
tions.
Based on Theorem 3.2, we can obtain the following main
theorem.
(m0 + m1 + ··· + mN−1)2 = (c(1))2 mod q.
The formula above is equivalent to
x0 + 2x1 + ··· + 2x[ N
2 ] = c(1)2 mod q.
(3.9)
Combining the formulae (3.7) and (3.9), we can get
2(a1 − a0)x1 + ··· + 2(a[ N
−··· − 2wN−1mN−1 = s − a0c(1)2 mod 2k.
2 ] − a0)x[ N
2 ] − 2w0m0 − 2w1m1
(3.10)
What’s more, there is a positive integer u ≥ 1 such that 2u
divides the greatest common divisor of all the coeﬃcients
If u ≥ k, then the equation (3.10) is
but 2u+1 can not.
noneﬀective. In fact u = 1 holds for very high probability.
We just use those samples in which u = 1, so we have
(a1 − a0)x1 + ··· + (a[ N
−··· − wN−1mN−1 =
2 ] − a0)x[ N
s − a0c(1)2
2 ] − w0m0 − w1m1
mod 2k−1.
2
Notice that the formula (3.8) can be obtained from any other
recipient’s ciphertext. Hence we need at least N + [ N
recipients’ ciphertexts and the corresponding public keys to
obtain a system of linear congruence equations
2 ] − 1
L × Y = S mod 2k−1,
2 ])×(N +[ N
2 ]) matrix, Y = (x1, x2,··· , x[ N
where L is a (N +[ N
2 ],
m0, m1,··· + mN−1)T and S is a constant vector. How-
ever, in the practical experiments, we take L ∈ ZQ×(N +[ N
2 ])
q
to guarantee that the rank of L equals to N + [ N
2 ], where
2 ] + l, l ∈ N. Fortunately, in practice scheme
Q = N + [ N
q = 128, 256 or other larger number of the form 2k, Table 1
in Section 2.4 indicates that even if we take l = 1, the rank
of the random matrix L equals to N + [ N
2 ] with very high
probability (close to 1).
• For NTRU-2001 with an odd dg and NTRU-2001 with
q = dr, since m2
i = mi holds for mi ∈ {0, 1}, we have
and
x1+x2+···+x[ N
2
2 ] =
c(1) − drh(1) − 1)(c(1) − drh(1))
mod 2k−1.
(3.13)
Notice that the two formulae (3.12) and (3.13) can be ob-
tained from any other recipient’s ciphertext. Hence, we need
2 ] − 2 recipients’ ciphertexts/public-keys to
at least N + [ N
obtain a system of linear congruence equations L × Y =
S mod 2k−1, where L is a (N + [ N
2 ]) matrix,
Y = (x1, x2,··· , x[ N
2 ], m0, m1,··· + mN−1)T and S is a con-
stant vector. However, in the practical experiments, we take
L ∈ ZQ×(N +[ N
2 ])
q
N + [ N
2.4 indicates that even if we take l = 1, the rank of L equals
to N + [ N
• For NTRU-2005 with gcd(q, dg) = 1 and NTRU-2005 with
q | dr, since m2
i = mi holds for mi ∈ {0, 1}, similar to
NTRU-2001, we have
2 ] + l, l ∈ N. Table 1 in Section
2 ] with very high probability (close to 1).
to guarantee that the rank of L equals to
2 ], where Q = N + [ N
2 ]) × (N + [ N
m0 + m1 + ··· + mN−1 = c(1) − drh(1) mod q,
(3.14)
2x1+2x2+···+2x[ N
2 ] = c(1)−drh(1)−1)(c(1)−drh(1)) mod q
(3.15)
and
2a1x1 + 2a2x2 + ··· + 2a[ N
−2w0m0 − 2w1m1 − ··· − 2wN−1mN−1
= s − a0(c(1) − drh(1)) mod q.
2 ]x[ N
2 ]
(3.16)
Since q is a odd prime, there exists the inverse of 2 mod q.
Thus, the formulae (3.15) and (3.16) are equivalent to
x1 + x2 + ··· + x[ N
0
2 ] = s
mod q.
(3.17)
2a1x1 + 2a2x2 + ··· + 2a[ N
+(a0 − 2w1)m1 + ··· + (a0 − 2wN−1)mN−1
= s mod q.
2 ] + (a0 − 2w0)m0
2 ]x[ N
and
(3.11)
Similar to NTRU-1998, we can easily get
m0 + m1 + ··· + mN−1 = c(1) − drh(1) mod q.
(3.12)
and
(m0 + m1 + ··· + mN−1)2 = (c(1) − drh(1))2 mod q.
The formula above is equivalent to
2x1+2x2+···+2x[ N
2 ] = c(1)−drh(1)−1)(c(1)−drh(1)) mod q
By combining the formulae (3.11) and (3.12), we can get
2 ]x[ N
2a1x1 + 2a2x2 + ··· + 2a[ N
2 ] − 2w0m0 − 2w1m1
−··· − 2wN−1mN−1 = s − a0(c(1) − drh(1)) mod q.
There is a positive integer u ≥ 1 such that 2u divides the
greatest common divisor of all the coeﬃcients but 2u+1 can
not. Similar to NTRU-1998, u = 1 holds for very high prob-
ability. We just use those samples in which u = 1, so we
have
a1x1 + a2x2 + ··· + a[ N
−··· − wN−1mN−1 =
2 ] − w0m0 − w1m1
2 ]x[ N
s − a0(c(1) − drh(1))
mod 2k−1.
2
a1x1 + a2x2 + ··· + a[ N
2 ]x[ N
−··· − wN−1mN−1 = s
00
mod q.
2 ] − w0m0 − w1m1
(3.18)
2 ]) × (N + [ N
Notice that the two formulae (3.14) and (3.17) can be ob-
tained from any other recipient’s ciphertext. Hence, we
2 ] − 2 recipients’ ciphertexts/public-
need at least N + [ N
keys to obtain a system of linear congruence equations L ×
Y = S mod q, where L is a (N + [ N
2 ]) matrix,
Y = (x1, x2,··· , x[ N
2 ], m0, m1,··· , mN−1)T and S is a con-
stant vector. However, in the practical experiments, we take
L ∈ ZQ×(N +[ N
2 ])
q
N + [ N
takes q = 197, 251, 367 or larger primes in practice scheme,
Table 1 indicates that even if we take l = 0, the rank of L
equals to N + [ N
2 ] with very high probability (close to 1).
Step 3. Solving the system of linear congruence equations
We use Gaussian Elimination to solve
L × Y = S mod q
2 ] + l, l ∈ N. NTRU-2005 in [3]
to guarantee that the rank of L equals to
2 ], where Q = N + [ N
.
0
and the output (m0, m1,··· + mN−1) is the plaintext m. It
requires O(N 3) arithmetic operations (see [27], pp.47-48, Al-
2 ]+l)×(N +[ N
gorithm 2.2.1). More accurately, since L ∈ Z(N +[ N
and the rank of L equals to N + [ N
2 ], we apply Gaussian
q
2 ])
elimination to (L|S) mod q0 and get
u11 u12
u22
···
···
. . .
u1n
u2n
...
unn
0BBBBBBBBBB@
9>>>=>>>; n
9>=>; l
1CCCCCCCCCCA
v1
v2
...
vn
0
...
|{z}
0
(3.19)
1
n
}
|
0
{z
2 ] and uii 6= 0, i = 1, 2,··· , n. Thus, we use
where n = N +[ N
back substitution method to solve mN−1, mN−2,··· , m1,
not the whole Y.
(L1, L2,··· , LN +[ N
2 ]+2,··· , LN +[ N
2 ],
L1, L2,··· , L[ N
2 ])T .
T
We compute the Hermite Normal Form B of L
U,
where U ∈ Z(n+l)×(n+l)
is a unimodular matrix (see [27],
pp.69, Algorithm 2.4.6), then get BT Y = UT S mod q0 by
multiplying UT , ﬁnally by iteration solve m0, m1,··· , mN−1
2
in turn, not the whole Y.
Speciﬁcally, we have the following result (l ∈ N, T = the
2 ]) and Y = (m0, m1,··· , mN−1, x1,··· , x[ N
Another way is to use the Hermite Normal Form. For L =
2 ]), we set L = (L[ N
2 ]+1, L[ N
T
: B = L
q0
number of variables):
T
Variant
NTRU-1998 N + [ N
NTRU-2001 N + [ N
NTRU-2005 N + [ N
2 ] N + [ N
2 ] N + [ N
2 ] N + [ N
Recipients
Time
2 ] − 1 + l O(N 3)
2 ] − 2 + l O(N 3)
2 ] − 2 + l O(N 3)
Variant
Pan and Deng in [11] gave the following result:
Time
NTRU-1998 O(N 3/6) O(N 2/6) O(N 9)
O(N 6)
NTRU-2001 O(N 2/2)
NTRU-2005 O(N 2/2)
O(N 6)
O(N/2)
O(N/2)
Recipients
T
Remark 3: Comparing the two tables above, our method is
very eﬃcient in the number of variables and time complexity.
In particular, for NTRU-1998 our method is very nice and
better than that in [11]. We eliminate the blinding value
vector r directly and entirety by doing the inner product