User: Use ansible to write an automated configuration script to add multiple hosts to the same Kubernetes cluster.
Assistant: Below is a possible Ansible automated configuration script for joining multiple hosts to the same Kubernetes cluster. 1. Write an Ansible playbook and define the tasks to be executed ``` --- - name: Join Kubernetes cluster hosts: all become: true tasks: - name: Install kubeadm, kubelet and kubectl yum: name: - kubeadm - kubelet - kubectl state: present - name: Initialize the first control plane node command: kubeadm init --pod-network-cidr=10.244.0.0/16 register: init_output environment: KUBECONFIG: "/etc/kubernetes/admin.conf" ignore_errors: true - name: Copy kubeconfig for root user copy: src: /etc/kubernetes/admin.conf dest: /root/.kube/config owner: root group: root mode: '0600' when: init_output is changed - name: Install a pod network add-on command: kubectl apply -f https://docs.projectcalico.org/v3.10/manifests/calico.yaml when: init_output is changed - name: Join the other control plane nodes and worker nodes to the cluster command : "{{ hostvars[item]['join_command']['cmd'] }}" loop: "{{ groups['all'] }}" when: - "'control-plane' in group_names and 'kubelet' in group_names" - item != inventory_hostname ``` 2. Configure Ansible inventory, specify the list of hosts to perform tasks ``` [control-plane] control-plane-1.example.com control-plane-2.example.com [worker] worker-1.example.com worker-2.example.com [all:vars] ansible_user=root ``` 3. Run the Ansible playbook and perform configuration tasks ``` ansible-playbook -i inventory.ini join_cluster. yml ``` This Ansible automated configuration script will do the following: - Install the kubeadm, kubelet and kubectl packages required for Kubernetes on all hosts. -Initialize the cluster on the first control plane node, generate the init output and copy the kubeconfig file for the root user. - Install the network plugin Calico. - Join other control plane nodes and worker nodes to the cluster. This script enables multiple hosts to join the same Kubernetes cluster at the same time, ensuring that all nodes can work completely.