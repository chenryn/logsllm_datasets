I encountered an issue while attempting to use the `--autoreload` option with Celery in a Django 1.7 project. Here's a detailed description of the problem:

### Issue Description
When I start Celery with the `--autoreload` option, I receive the following error when checking the status:
```sh
celery -A proj status
Error: No nodes replied within time constraint.
```

Without the `--autoreload` option, the status check works as expected:
```sh
celery -A proj status
celery@hostname: OK
1 node online.
```

Additionally, when I run a task using `celery call tasks.taskname`, RabbitMQ receives the message (which I can confirm), but the task is only executed after I restart Celery without the `--autoreload` option.

### Command Used to Start Celery
```sh
celery -A proj worker --loglevel=INFO --autoreload
```

### Log Analysis
The `worker.log` file shows that tasks are discovered and the worker is ready, as indicated by the following log message:
```sh
[2014-09-10 18:46:27,230: WARNING/MainProcess] celery@hostname ready.
```

However, no messages are delivered to the worker from RabbitMQ when the `--autoreload` option is used.

### Summary
- **Problem**: Celery worker does not process messages from RabbitMQ when started with the `--autoreload` option.
- **Symptoms**:
  - `celery status` command fails with "No nodes replied within time constraint."
  - Tasks are received by RabbitMQ but not executed by the worker.
  - Worker logs indicate that the worker is ready, but no messages are processed.

This issue seems to be related to the `--autoreload` option, and I am looking for a solution or workaround to ensure that the worker processes messages correctly while using this option.