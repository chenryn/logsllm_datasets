title:Caching the Internet: A View from a Global Multi-tenant CDN
author:Marcel Flores and
Harkeerat Bedi
Caching the Internet: A View
from a Global Multi-tenant CDN
Marcel Flores(B) and Harkeerat Bedi
Verizon Digital Media Services, Los Angeles, USA
PI:EMAIL
Abstract. Commercial Content Delivery Networks (CDNs) employ a
variety of caching policies to achieve fast and reliable delivery in multi-
tenant environments with highly variable workloads. In this paper, we
explore the eﬃcacy of popular caching policies in a large-scale, global,
multi-tenant CDN. We examine the client behaviors observed in a net-
work of over 125 high-capacity Points of Presence (PoPs). Using produc-
tion data from the Edgecast CDN, we show that for such a large-scale
and diverse use case, simpler caching policies dominate. We ﬁnd that
LRU oﬀers the best compromise between hit-rate and disk I/O, pro-
viding 60% fewer writes than FIFO, while maintaining high hit-rates.
We further observe that at disk sizes used in a large-scale CDN, LRU
performs on par with complex polices like S4LRU. We further exam-
ine deterministic and probabilistic cache admission policies and quantify
their trade-oﬀs between hit-rate and origin traﬃc. Moreover, we explore
the behavior of caches at multiple layers of the CDN and provide rec-
ommendations to reduce connections passing through the system’s load
balancers by approximately 50%.
1 Introduction
Content Delivery Networks (CDNs) provide a core piece of modern Internet
infrastructure [16,39]. They handle immense volumes of traﬃc ﬂowing between
end users and content providers. To facilitate this transmission, while reducing
end-user latency, CDNs employ complex caching systems which include numer-
ous optimizations to improve performance and operational eﬃciency. Many such
systems are purpose-built for speciﬁc application workloads or physical con-
straints, allowing for solutions that are tailor-made to their needs [4,22,38].
While highly eﬀective in context, they are designed to manage well-deﬁned and
homogeneous workloads, granting the operators greater knowledge and control.
Unfortunately, many purpose-built approaches do not apply in multi-tenant
environments where the operating characteristics are a function of the behavior
of end users (i.e., user request patterns), the behavior of content providers (i.e.
customer churn, origin behavior), and the content served. These factors result
in wide variability of request behaviors in both geography and time, potentially
limiting the eﬀectiveness of many specialized techniques.
In this study, we examine the behavior of the Edgecast CDN, a global multi-
tenant CDN, exploring the variations observed in request patterns and ﬁle access
c(cid:2) Springer Nature Switzerland AG 2019
D. Choﬀnes and M. Barcellos (Eds.): PAM 2019, LNCS 11419, pp. 68–81, 2019.
https://doi.org/10.1007/978-3-030-15986-3_5
Caching the Internet: A View from a Global Multi-tenant CDN
69
behaviors through the use of a cache emulator. We consider caching at multiple
tiers in a CDN: disk cache (on the order of terabytes) and a load balancer cache
(on the order of gigabytes). In each tier, we explore the trade-oﬀs inherent in
their operating constraints. We investigate the individual and combined impacts
of cache admission (i.e., which objects are cached) and eviction (i.e., which
objects to remove) policies.
We ﬁnd that relatively simple and easy to manage approaches, such as Least-
Recently-Used (LRU), provide similar performance to more complex techniques
(S4LRU) and are able to improve disk reads by 60% versus simpler techniques,
such as First-In-First-Out (FIFO). At the load balancer level, we are able to serve
nearly 50% of requests from cache employing probabilistic admission and FIFO
with just 1 GB. The view from a global commercial network allows us insight
at a scale that provides meaningful and realistic analysis of the behavior of web
caching in the wild. This represents a step towards managing the complexities
of multi-tenant environments, as many CDN and service providers must do.
We present an overview of related work and previous examinations of cache
behavior in Sect. 2. In Sect. 3 we examine the behaviors of production workloads
and explore how they drive our intuitions on caching behavior. In Sect. 4 we
present an overview of our test environment and provide an evaluation of the
various caching methodologies in Sect. 5. We explore the further potential for
improvement in the systems in Sect. 6. Finally, we conclude in Sect. 7.
2 Related Work
Cache management techniques have a signiﬁcant history in computer sys-
tems [11,24,26,32,33]. However, many of these systems focus on the particu-
lar case of page caching. Web-caching systems have examined traditional web
object behavior, exploring cacheability if objects follow zipf and zipf-like distri-
butions [8,21], and stretched exponential distributions [20]. Others have explored
emergent behaviors that arise from caching on the web [9,12,13,23,37]. Our work
builds its intuitions from many of these works, in particular in the applicability
of FIFO and LRU in the context of large PoPs with large disks and a diverse set
of clients. We further note that in the context of a commercial CDN, the traﬃc
is self-selected for cacheability, as those with cacheable content are most likely
to purchase commercial CDN services.
A number of high performance caches have been developed for both web
objects [1,3] and generic objects [2,17]. Numerous proposals have explored exten-
sions to these systems, with an eye towards making them more eﬃcient for par-
ticular workloads [7,15]. While eﬀective in context, many of these systems and
modiﬁcations are unusable in generic caching systems, in particular for large
scale deployments that cannot readily change core caching technologies.
Other studies have examined the structure, performance and behaviors of
CDNs [18,25,29]. Further studies have examined the nature of speciﬁc request
behaviors, including ﬂash crowds [27,40] and social networks [35]. Google pro-
posed a system for debugging the performance of their CDN with WhyHigh [30].
70
M. Flores and H. Bedi
In [34] and [19], the authors examine a large university trace and examine the
potential cache performance for CDNs and traditional web delivery. In [36], the
authors characterized the workloads of a CDN and examined its cache perfor-
mance, proposing an approach called content-aware caching. Here, we explore
the cache behaviors of content-agnostic policies that are available in production,
and develop an understanding of cache interactions in the CDN.
Finally, a number of purpose built systems have been designed to deal with
large scale and complex cache workﬂows. For example Facebook’s photo caching
systems [5,22,38]. While similar, these systems are designed for managing inter-
nal systems, rather than external customer needs. AdaptSize [6] uses Markov
chains to learn client request pattern shifts. Other systems such as Google’s
Janus [4] are designed to optimize workﬂows for FLASH storage. However, their
system requires manual intervention, which is untenable in commercial CDN
settings. Fundamentally, the ﬁnal back-end origins are operated by third parties
and the workloads are highly variable based on both end-user (access) and cus-
tomer (server side) behaviors. These constraints alter the levels of performance
that are acceptable and the needs of each level of the cache.
3 Overview of a Global CDN
This study is based on the Edgecast CDN, which features a global deployment of
Points-of-Presence (PoPs) around the world. The considered network consists of
PoPs that are well connected to the Internet, as the network aggressively peers
when possible, resulting in a network of over 3000 global interconnections which
provide a total network capacity of over 50 Tbps. The CDN further employs
Anycast routing for replica selection, which means that the traﬃc which arrives
at a PoP may depend on the underlying network.
We note that contrary to some other approaches to rapidly delivering content
to end-users [10,14], the model studied here focuses on the construction of super-
PoPs. These PoPs consist of a large number of servers, usually on the order of
hundreds, providing signiﬁcant resources at each location. These super Pops are
then placed in locations with good network connectivity, providing low latency
access to large Internet Exchanges (IX) and other peering opportunities. Since
each PoP is equipped with signiﬁcant compute and storage capacities, PoPs can
process signiﬁcant traﬃc load before they must reach out to other caches.
Importantly, the CDN is a multi-tenant environment. Unlike many purpose-
built platforms [4,22,38], it must respond to a large variety of content, from large
software updates to streaming video, to images on a web-page. This combination
of behaviors means that the entire global network must be ﬂexible to changing
behaviors and needs from customers. Indeed, we demonstrate that many of the
fundamental characteristics do change, making static analysis diﬃcult. We must
further exercise care in the impact diﬀerent approaches may have on individual
customers, and in particular, if the approaches may result in pathological behav-
iors for some customers but not others (e.g. never caching a particular customers
content). This constraint drives the use of techniques that can be easily assessed
and which have intuitive and clear behavior.
Caching the Internet: A View from a Global Multi-tenant CDN
71
3.1 Diversity in Accessed Content
Here, we provide some background on the nature of the CDN traﬃc proﬁle. As
noted in previous work [6], the CDN caches ultimately handle traﬃc from a
highly diverse set of sources, which include many larger-scale traﬃc patterns,
individual client access behaviors, ﬁle types, and ﬁle sizes. We aim to provide an
intuitive understanding of what kind of traﬃc arrives at each PoP, which will
ultimately determine the policies that work best in these caching systems.
Fig. 1. Requested ﬁle sizes from a geo-
graphically distributed set of regions
(over 24 h).
Fig. 2. Distribution of requested ﬁle
sizes within the US, 6 months apart.
Figure 1 shows the distribution of the request ﬁle sizes from 4 regions around
the world: APAC indicates a sample from a PoP in India, EU in Europe, US in
the United States, and LATAM in South America. First, we see that the spread
of request sizes at each region is quite high, with 10% of ﬁles about 1 KB at
nearly all locations on the low end, and with 90th percentiles as high as 1 GB
in APAC and the US. Second, the behavior across PoPs is diverse, with median
request sizes that vary from 10 s of kilobytes (EU, LATAM) to 10 s of megabytes
(US, APAC). This variation reveals the patterns that these caching system must
be prepared to deal with: there are no ﬁxed distributions in the sizes of responses
across locations.
Figure 2 shows that these diﬀerences are not limited to the geographic
domain. Here we examine 24 h of log traces taken from the same PoP 6 months
apart (both on matching weekdays). The median requested ﬁle size decreases
from 24 MB to 14 KB. This high variation over time indicates that even at the
same server in the same PoP we may see large variations.
These changes are an eﬀect of the following attributes observed from the
perspective of a multi-tenant CDN: (a) the busiest customers vary from region
to region and shift over time, (b) content proﬁles of customers also change over
time, impacting the overall cache contents (c) routine CDN traﬃc management
eﬀorts shift traﬃc across PoPs. However, in all cases, per PoP conﬁgurations
must remain generic and able to handle such diversity of traﬃc behaviors.
The situation is further complicated by variations in the nature of requests.
Figure 3 shows a scatter plot of the bytes delivered over ﬁle sizes for all requests
seen on a single server in the US over a 24 h period. Along the diagonal are ﬁles
for which the entire ﬁle is delivered. However, the area above the diagonal is
72
M. Flores and H. Bedi
Fig. 3. Bytes requested vs. ﬁle size cached
on CDN (red “x” shows median). (Color
ﬁgure online)
Fig. 4. File request distribution. We
observe high variation across regions.
also diverse, suggesting there are a large number of ﬁles for which only a small
portion of a ﬁle is requested. Managing both of these behaviors adds signiﬁcant
challenges to caching: caches must be prepared to deal with large ﬁles that may
consume cache space, but only portions of which are accessed at any given time.
We further see this same type of spread over multiple regions, suggesting this
variation is commonplace.
Figure 4 shows the number of requests seen for each ﬁle for each of the geo-
graphically distributed PoPs. For the US, APAC, and EU, between 60 and 80%
of ﬁles are only requested once. On the other hand, the most popular ﬁles are
extremely popular, with some being requested orders of magnitude more. While
the LATAM PoP saw a lower proportion of requests with a single request, the
majority of ﬁles still saw a small number of requests. The variation in these
distributions again hint at the importance of cache policy selection: many ﬁles
are not well suited for caching and may waste cache space. Therefore we require
a robust caching system that is not sensitive to the presence of such behaviors.
3.2 Similarities in Client Request Pattern
Next, we examine the popularity of objects over time. This will provide us with a
sense of how objects in the cache are accessed. Figure 5 shows the number of hits