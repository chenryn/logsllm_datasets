### CWEID:CWE-5 J2EE Misconfiguration: Data Transmission Without Encryption
title_zh:J2EE误配置：未经加密的数据传输
Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.
### CWEID:CWE-14 Compiler Removal of Code to Clear Buffers
title_zh:ASP.NET误配置：配置文件中存储口令
Sensitive memory is cleared according to the source code, but compiler optimizations leave the memory untouched when it is not read from again, aka "dead store removal."
### CWEID:CWE-12 ASP.NET Misconfiguration: Missing Custom Error Page
title_zh:J2EE误配置：会话ID长度不充分
An ASP .NET application must enable custom error pages in order to prevent attackers from mining information from the framework's built-in responses.
### CWEID:CWE-8 J2EE Misconfiguration: Entity Bean Declared Remote
title_zh:J2EE误配置：缺少定制错误页面
When an application exposes a remote interface for an entity bean, it might also expose methods that get or set the bean's data. These methods could be leveraged to read sensitive information, or to change data in ways that violate the application's expectations, potentially leading to other vulnerabilities.
### CWEID:CWE-9 J2EE Misconfiguration: Weak Access Permissions for EJB Methods
title_zh:系统设置或配置在外部可控制
If elevated access rights are assigned to EJB methods, then an attacker can take advantage of the permissions to exploit the product.
### CWEID:CWE-7 J2EE Misconfiguration: Missing Custom Error Page
title_zh:J2EE误配置：实体Bean远程声明
The default error page of a web application should not display sensitive information about the product.
### CWEID:CWE-11 ASP.NET Misconfiguration: Creating Debug Binary
title_zh:J2EE误配置：EJB方法弱访问权限
Debugging messages help attackers learn about the system and plan a form of attack.
### CWEID:CWE-6 J2EE Misconfiguration: Insufficient Session-ID Length
title_zh:ASP.NET误配置：缺少定制错误页面
The J2EE application is configured to use an insufficient session ID length.
### CWEID:CWE-13 ASP.NET Misconfiguration: Password in Configuration File
title_zh:ASP.NET误配置：创建Debug模式二进制
Storing a plaintext password in a configuration file allows anyone who can read the file access to the password-protected resource making them an easy target for attackers.
### CWEID:CWE-24 Path Traversal: '../filedir'
title_zh:路径遍历：’/../filedir’
The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize "../" sequences that can resolve to a location that is outside of that directory.
### CWEID:CWE-23 Relative Path Traversal
title_zh:输入验证不恰当
The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as ".." that can resolve to a location that is outside of that directory.
### CWEID:CWE-28 Path Traversal: '..\filedir'
title_zh:对路径名的限制不恰当（路径遍历）
The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize "..\" sequences that can resolve to a location that is outside of that directory.
### CWEID:CWE-15 External Control of System or Configuration Setting
title_zh:路径遍历：’../filedir’
One or more system settings or configuration elements can be externally controlled by a user.
### CWEID:CWE-20 Improper Input Validation
title_zh:编译器移除释放缓冲区的代码
The product receives input or data, but it does not validate or incorrectly validates that the input has the properties that are required to process the data safely and correctly.
### CWEID:CWE-29 Path Traversal: '\..\filename'
title_zh:相对路径遍历
The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '\..\filename' (leading backslash dot dot) sequences that can resolve to a location that is outside of that directory.
### CWEID:CWE-30 Path Traversal: '\dir\..\filename'
title_zh:路径遍历：’dir/../filename’
The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '\dir\..\filename' (leading backslash dot dot) sequences that can resolve to a location that is outside of that directory.
### CWEID:CWE-27 Path Traversal: 'dir/../../filename'
title_zh:路径遍历：’..filename’
The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize multiple internal "../" sequences that can resolve to a location that is outside of that directory.
### CWEID:CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')
title_zh:路径遍历：’dirfilename’
The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.
### CWEID:CWE-31 Path Traversal: 'dir\..\..\filename'
title_zh:路径遍历：’dir....filename’
The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize 'dir\..\..\filename' (multiple internal backslash dot dot) sequences that can resolve to a location that is outside of that directory.
### CWEID:CWE-26 Path Traversal: '/dir/../filename'
title_zh:路径遍历：’…’（三个点号）
The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize "/dir/../filename" sequences that can resolve to a location that is outside of that directory.
### CWEID:CWE-32 Path Traversal: '...' (Triple Dot)
title_zh:路径遍历：’..filedir’
The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '...' (triple dot) sequences that can resolve to a location that is outside of that directory.
### CWEID:CWE-34 Path Traversal: '....//'
title_zh:路径遍历：’dir/../../filename’
The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '....//' (doubled dot dot slash) sequences that can resolve to a location that is outside of that directory.
### CWEID:CWE-37 Path Traversal: '/absolute/pathname/here'
title_zh:路径遍历：’…/…//’
The product accepts input in the form of a slash absolute path ('/absolute/pathname/here') without appropriate validation, which can allow an attacker to traverse the file system to unintended locations or access arbitrary files.
### CWEID:CWE-35 Path Traversal: '.../...//'
title_zh:绝对路径遍历
The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '.../...//' (doubled triple dot slash) sequences that can resolve to a location that is outside of that directory.
### CWEID:CWE-36 Absolute Path Traversal
title_zh:路径遍历：’/absolute/pathname/here’
The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize absolute path sequences such as "/abs/path" that can resolve to a location that is outside of that directory.
### CWEID:CWE-38 Path Traversal: '\absolute\pathname\here'
title_zh:路径遍历：’….’（多个点号）
The product accepts input in the form of a backslash absolute path ('\absolute\pathname\here') without appropriate validation, which can allow an attacker to traverse the file system to unintended locations or access arbitrary files.
### CWEID:CWE-42 Path Equivalence: 'filename.' (Trailing Dot)
title_zh:路径遍历：’C:dirname’
The product accepts path input in the form of trailing dot ('filedir.') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.
### CWEID:CWE-39 Path Traversal: 'C:dirname'
title_zh:路径遍历：’absolutepathnamehere’
The product accepts input that contains a drive letter or Windows volume letter ('C:dirname') that potentially redirects access to an unintended location or arbitrary file.
### CWEID:CWE-40 Path Traversal: '\\UNC\share\name\' (Windows UNC Share)
title_zh:路径遍历：’….//’
The product accepts input that identifies a Windows UNC share ('\\UNC\share\name') that potentially redirects access to an unintended location or arbitrary file.
### CWEID:CWE-43 Path Equivalence: 'filename....' (Multiple Trailing Dot)
title_zh:路径遍历：’\UNCsharename'(WindowsUNC共享)
The product accepts path input in the form of multiple trailing dot ('filedir....') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.
### CWEID:CWE-25 Path Traversal: '/../filedir'
title_zh:对路径等价的解析不恰当
The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize "/../" sequences that can resolve to a location that is outside of that directory.
### CWEID:CWE-44 Path Equivalence: 'file.name' (Internal Dot)
title_zh:路径等价：’filename.’(尾部点号)
The product accepts path input in the form of internal dot ('file.ordir') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.
### CWEID:CWE-41 Improper Resolution of Path Equivalence
title_zh:路径等价：’file…name’（多个内部的点号）
The product is vulnerable to file system contents disclosure through path equivalence. Path equivalence involves the use of special characters in file and directory names. The associated manipulations are intended to generate multiple names for the same object.
### CWEID:CWE-46 Path Equivalence: 'filename ' (Trailing Space)
title_zh:路径等价：’filename….’（多个尾部的点号）
The product accepts path input in the form of trailing space ('filedir ') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.
### CWEID:CWE-45 Path Equivalence: 'file...name' (Multiple Internal Dot)
title_zh:路径等价：’filename'(结尾空格)
The product accepts path input in the form of multiple internal dot ('file...dir') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.
### CWEID:CWE-47 Path Equivalence: ' filename' (Leading Space)
title_zh:路径等价：’file.name’(内部点号)
The product accepts path input in the form of leading space (' filedir') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.
### CWEID:CWE-48 Path Equivalence: 'file name' (Internal Whitespace)
title_zh:路径等价：’filename'(开头空格)
The product accepts path input in the form of internal space ('file(SPACE)name') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.
### CWEID:CWE-49 Path Equivalence: 'filename/' (Trailing Slash)
title_zh:路径等价：’filename'(内部空格)
The product accepts path input in the form of trailing slash ('filedir/') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.
### CWEID:CWE-50 Path Equivalence: '//multiple/leading/slash'
title_zh:路径等价：’filename/'(尾部斜杠)
The product accepts path input in the form of multiple leading slash ('//multiple/leading/slash') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.
### CWEID:CWE-33 Path Traversal: '....' (Multiple Dot)
title_zh:路径等价：’//multiple/leading/slash’
The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '....' (multiple dot) sequences that can resolve to a location that is outside of that directory.
### CWEID:CWE-51 Path Equivalence: '/multiple//internal/slash'
title_zh:路径等价：’/multiple/trailling/slash//’
The product accepts path input in the form of multiple internal slash ('/multiple//internal/slash/') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.
### CWEID:CWE-52 Path Equivalence: '/multiple/trailing/slash//'
title_zh:路径等价：’/multiple//internal/slash’
The product accepts path input in the form of multiple trailing slash ('/multiple/trailing/slash//') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.
### CWEID:CWE-53 Path Equivalence: '\multiple\\internal\backslash'
title_zh:路径等价：’multiple\internalbackslash’
The product accepts path input in the form of multiple internal backslash ('\multiple\trailing\\slash') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.
### CWEID:CWE-54 Path Equivalence: 'filedir\' (Trailing Backslash)
title_zh:路径等价：’filedir'(结尾的反斜杠)
The product accepts path input in the form of trailing backslash ('filedir\') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.
### CWEID:CWE-55 Path Equivalence: '/./' (Single Dot Directory)
title_zh:路径等价：Windows8.3形式文件名
The product accepts path input in the form of single dot directory exploit ('/./') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.
### CWEID:CWE-56 Path Equivalence: 'filedir*' (Wildcard)
title_zh:路径等价：’/./’(单点路径)
The product accepts path input in the form of asterisk wildcard ('filedir*') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.
### CWEID:CWE-57 Path Equivalence: 'fakedir/../realdir/filename'
title_zh:路径等价：’filedir*’（通配符）
The product contains protection mechanisms to restrict access to 'realdir/filename', but it constructs pathnames using external input in the form of 'fakedir/../realdir/filename' that are not handled by those mechanisms. This allows attackers to perform unauthorized actions against the targeted file.
### CWEID:CWE-58 Path Equivalence: Windows 8.3 Filename
title_zh:路径等价：’fakedir/’
The product contains a protection mechanism that restricts access to a long filename on a Windows operating system, but it does not properly restrict access to the equivalent short "8.3" filename.
### CWEID:CWE-65 Windows Hard Link
title_zh:在文件访问前对链接解析不恰当（链接跟随）
The product, when opening a file or directory, does not sufficiently handle when the name is associated with a hard link to a target that is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.
### CWEID:CWE-59 Improper Link Resolution Before File Access ('Link Following')
The product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.
### CWEID:CWE-61 UNIX Symbolic Link (Symlink) Following
title_zh:UNIX硬链接
The product, when opening a file or directory, does not sufficiently account for when the file is a symbolic link that resolves to a target outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.
### CWEID:CWE-62 UNIX Hard Link
title_zh:Windows硬链接
The product, when opening a file or directory, does not sufficiently account for when the name is associated with a hard link to a target that is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.
### CWEID:CWE-64 Windows Shortcut Following (.LNK)
title_zh:Windows快捷方式跟随（.LNK）
The product, when opening a file or directory, does not sufficiently handle when the file is a Windows shortcut (.LNK) whose target is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.
### CWEID:CWE-66 Improper Handling of File Names that Identify Virtual Resources
title_zh:Windows设备名处理不恰当
The product does not handle or incorrectly handles a file name that identifies a "virtual" resource that is not directly specified within the directory that is associated with the file name, causing the product to perform file-based operations on a resource that is not a file.
### CWEID:CWE-67 Improper Handling of Windows Device Names
title_zh:标识虚拟资源的文件名处理不恰当
The product constructs pathnames from user input, but it does not handle or incorrectly handles a pathname containing a Windows device name such as AUX or CON. This typically leads to denial of service or an information exposure when the application attempts to process the pathname as a regular file.
### CWEID:CWE-71 DEPRECATED: Apple '.DS_Store'
This entry has been deprecated as it represents a specific observed example of a UNIX Hard Link weakness type rather than its own individual weakness type. Please refer to :CWE-62:.
### CWEID:CWE-72 Improper Handling of Apple HFS+ Alternate Data Stream Path
title_zh:Windows::DATA交换数据流处理不恰当
The product does not properly handle special paths that may identify the data or resource fork of a file on the HFS+ file system.
### CWEID:CWE-69 Improper Handling of Windows ::DATA Alternate Data Stream
title_zh:文件名或路径的外部可控制
The product does not properly prevent access to, or detect usage of, alternate data streams (ADS).
### CWEID:CWE-75 Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)
title_zh:AppleHFS+交换数据流路径处理不恰当
The product does not adequately filter user-controlled input for special elements with control implications.
### CWEID:CWE-73 External Control of File Name or Path
title_zh:输出中的特殊元素转义处理不恰当（注入）
The product allows user input to control or influence paths or file names that are used in filesystem operations.
### CWEID:CWE-76 Improper Neutralization of Equivalent Special Elements
title_zh:特殊命令到另一不同平面时的净化处理不恰当（特殊命令注入）
The product correctly neutralizes certain special elements, but it improperly neutralizes equivalent special elements.
### CWEID:CWE-80 Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)
title_zh:等价特殊元素的转义处理不恰当
The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as "", and "&" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.
### CWEID:CWE-74 Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')
title_zh:OS命令中使用的特殊元素转义处理不恰当（OS命令注入）
The product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.
### CWEID:CWE-77 Improper Neutralization of Special Elements used in a Command ('Command Injection')
title_zh:在命令中使用的特殊元素转义处理不恰当（命令注入）
The product constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream component.
### CWEID:CWE-81 Improper Neutralization of Script in an Error Message Web Page
title_zh:Web页面中脚本相关HTML标签转义处理不恰当（基本跨站脚本）