1.16
2
0.0189
3
(a) Sequence number gap of an AP
(b) The distribution of sequence number
gaps in Figure (a)
Fig. 2. Pattern of inter-frame sequence number gaps for frames coming from an AP.
Because the monitor node is close to the AP, fewer frames are lost or retransmitted than
in the STA case. However, some inter-frame gaps are smaller than 0, which suggests
that the AP can transmit frames out of order.
if S0 is 2 and S1 is 1, the gap between them will be 4095. We treat all G values
that are greater than or equal to 4093 as indications of out of order frames. They
are subsequently converted to a negative value for convenience.
Figure 1 and 2 show the pattern of inter-frame sequence number gap for
frames coming from a STA and an AP, respectively. The sequence number gap
is computed on a monitor node that is located close to the AP. The monitor
node has one WLAN NIC working in the RF monitor mode and thus can receive
all frames that the AP sends and receives. One STA is placed on the edge of the
listening range of the AP so as to stress the monitor node’s ability to receive the
STA’s frames.
316
F. Guo and T.-c. Chiueh
For Figure 1, about 30K frames from the STA are captured and analyzed.
In Figure 1(a), the inter-frame sequence number gap G is shown over time, and
varies between 0 and 30. Most inter-frame sequence number gaps are 0, 1, or 2.
The detailed distribution of G is in Figure 1(b). 88.8% of inter-frame gaps are 1,
3.3% of inter-frame sequence number gaps are 0 due to duplicate frames, around
5.3% inter-frame sequence number gaps are 2, and 2.6% inter-frame sequence
number gaps are greater than 2. When inter-frame sequence number gaps are
greater than 1, it means for some reasons the monitor node fails to capture
intermediate frames.
For Figure 2, around 63K frames from the AP are captured and analyzed.
In contrast to the STA case, inter-frame sequence number gaps can be -1 or
even -2. This means some frames from the AP are transmitted out of order. A
detailed examination shows that whenever inter-frame sequence number gaps
are -1, the ﬁrst frame is always a beacon frame. We conjecture that the AP
tends to prioritize the transmission of beacon frames over normal data frames
to satisfy the beacon broadcasting frequency requirement. We also found one
case in which the gap is -2. This arises because the AP sends a beacon frame
and a probe response frame before a data frame that logically precedes them.
Another major diﬀerence from the STA case is that the maximum inter-frame
sequence number gap for the AP case is only 3. This means fewer frames are
lost, presumably because the monitor node is placed close to the AP so it can
reliably capture all the frames from the AP.
To summarize, the inter-frame sequence number gaps for frames sent by a
STA and an AP when observed from a monitor node close to the AP show the
following patterns:
– The monitor node can receive duplicate frames from both the STA and AP.
– The monitor node may not receive all the frames from the STA or AP. The
further apart the frame source from the monitor node is, the more frames
are likely to be lost.
– While the STA always transmits in order, the AP may transmit time-
sensitive beacon/probe response frames out of order before normal data
frames.
4.3 Spoof Detection Algorithm
In theory, the inter-frame sequence number gap should always be one; so when-
ever the inter-frame sequence number gap for frames from a wireless node is not
one, there is a spooﬁng activity. In practice, however, the inter-frame sequence
number gap may be diﬀerent from one, because frames are lost, retransmitted,
or out of order, as shown in Figure 1 and 2. Simply raising an alert for spooﬁng
whenever the inter-frame sequence number gap is diﬀerent from 1 may generate
too many false positives.
The pseudocode of the proposed spoof detection algorithm is shown in
Figure 3. The monitor node constantly keeps track of the sequence number
associated with frames coming from the AP and each of the STAs. When a
Sequence Number-Based MAC Address Spoof Detection
317
spoofing_detection(station_state, current_frame)
{
    if(station_state.in_verification)
    {
        verify_possible_spoofing(station_state, current_frame);
        return;
    }
    gap = 0xfff & (current_frame.sn - station_state.last_sn);
    if(gap >= 1 && gap = 0xffd) //duplicate frame
    {
        if(current_frame.sn exist in our buffer)
        {
            if(the content of current_frame is the same as buffered frame)
            if yes, normal, return;
            if no, spoofing, raise alarm, return;
        }
        else // current_frame.sn is not in our buffer
        {
            if(station_state.last_frame_type is beacon or probe response
                && current_frame.type is data)
            if yes, valid management frame goes out of order before data frames, return;
            if no, spoofing, raise alarm, return;
        }
    }
    if(gap >= 3 && gap = gap_of_current_frame)
    {
        if(gap_of_next_frame == gap_of_current_frame
            && content of current_frame and next_frame is different)
        {
            spoofing, raise alarm; goto exit;
        }
        //next frame is "bigger" than current one, normal
        if(verification timer expires)
        {
            goto exit;
        }
    }
    else // next frame is "smaller" than current frame
    {
        spoofing, raise alarm; goto exit;
    }
exit:
    station_state.last_sn = next_frame.sn;
    station_state.in_verification = FALSE;
}
Fig. 3. Pseudocode of the proposed spoof detection algorithm
frame is received, the algorithm ﬁrst computes the gap G between the sequence
number of the received frame and that of the last frame coming from the same
source node. We call these two sequence numbers as current SN and last SN,
respectively. The value of G will be between 0 and 4095 inclusively and fall
into three diﬀerent ranges, each of which is explained in more detail in the
318
F. Guo and T.-c. Chiueh
Last
0
1
2
3
4
5
6
7
...
4094
4095
Duplicate
Normal
Abnormal
Abnormal
(a) The three possible relationships between the current sequence
number and the last sequence number: duplicate, normal, abnormal.
Current
Last
Current
0
1
2
3
4
5
6
7
...
4094
4095
Normal
Abnormal
Normal
(b) The two possible relationships between the current sequence number
and the next sequence number: normal, abnormal.
Next
Fig. 4. (a) The diﬀerence between current SN and last SN falls into three categories.
(b) When the source STA is in the veriﬁcation state, the diﬀerence between next SN
and current SN falls into two categories.
following subsections. Figure 4(a) illustrates these relationships, assuming the
last SN is 4.
Normal Sequence Number Advance. Normally current SN should be last
SN plus one. Occasionally, the gap between last SN and current SN can be more
than one, because frames are lost in the air or on the monitor node. Experiments
show that a non-negligible percentage of frames have a gap of two, but the
number of frames with a gap greater than two is small. So the algorithm deﬁnes
[last SN + 1, last SN + 2] as the normal range. For example, in Figure 4, if
current SN is 5 or 6, the current frame is considered normal.
Duplicated Sequence Number. When the current frame is a retransmitted
frame, current SN could be equal to or smaller than last SN. Therefore, the
proposed algorithm deﬁnes the duplicate range as [last SN - 3, last SN]. That
is, if the current frame’s sequence number falls into the duplicate range, it is
considered as a retransmitted frame. For example, in Figure 4, if current SN is
4, 3, 2 or 1, the current frame is treated as a retransmitted frame. The size of
the duplicate range is a conﬁgurable parameter, but we found 4 is a good choice
empirically. A STA can only retransmit the last frame. So only the last SN can
possibly be repeated. However, an AP may transmit frames out of order. The
Sequence Number-Based MAC Address Spoof Detection
319
maximum distance among out-of-order frames is less than 4 in all our tests. So
we choose 4 as the size of the duplicate range. The state maintained is 4 frames
for each AP and 1 frame for each legitimate STA. Thus denial of service to
monitor node’s state is not an issue here.
If the current frame is a retransmitted frame and the monitor node already
has a copy of it, it can use the copy to verify that the current frame is indeed a
retransmitted frame. When the current frame does not match the stored copy,
the current frame must be a spoofed frame. However, the monitor node may not
always have a copy of the current frame, because an AP may transmit beacon
and probe response frame out of order, it is possible for the monitor node to
receive a beacon frame with a SN of K and then a data frame with a SN of K-
1. In this case, the monitor node won’t have a copy for the current data frame,
because it is not a duplicate but rather an out-of-order frame; as a result the cur-
rent frame is not considered as a spoofed frame. However, because normal data
frames are never transmitted out of order, any out-of-order data frames that are
not preceded by beacon or probe response frame are treated as spoofed frames.
Abnormal Sequence Number Advance. When the gap between current
SN and last SN is between 3 and 4092 inclusively, it is considered an abnormal
sequence number advance. It is incorrect to declare the current frame is a spoofed
frame simply because there is an abnormal sequence number advance, since
there are many legitimate scenarios that can lead to such sequence number
advances. For example, when an STA resumes its traﬃc with its current AP
after scanning other channels, resetting its NIC, or roaming out of the coverage
area of the monitor node, the gap between the current frame and the last frame
that the monitor node can observe could be much larger than 1. Furthermore, the
monitor node may miss some frames from an STA due to transient radio signal
propagation problems. Therefore, equating large inter-frame sequence number
gap to spooﬁng could generate many false positives. The proposed algorithm
applies a veriﬁcation process to check if the current frame is a spoofed frame.
It ﬁrst remembers the value of current SN, then sends an ARP request to the
current frame’s source STA, and puts the STA in the veriﬁcation state.
When a STA is in the veriﬁcation state, the monitor node further checks if
the sequence number of successive frames (called next SN) is consistent with
the current SN. There are two cases to consider. When next SN is smaller than
current SN but larger than last SN, the frame corresponding to current SN is a
spoofed frame. For example, in Figure 4(b), current SN is 7, so the source STA
is put in the veriﬁcation state. If next SN is between 4 and 6 inclusively, the
frame corresponding to current SN is a spoofed frame. When next SN is equal to
or larger than current SN, the monitor node continues to check the subsequent
sequence numbers for a period of time. If none of the sequence numbers in this
period is smaller than current SN, the monitor node terminates the veriﬁcation
process for the STA, and concludes that the frame corresponding to current SN
is not a spoofed frame.
Summary. In summary, when a frame is received, if its source STA is not in
the veriﬁcation state, there are three cases for the value of inter-frame sequence
F. Guo and T.-c. Chiueh
320
number gap G. If G ∈ [4093, 4095] or G = 0, the current frame is treated as
a retransmitted frame. If G ∈ [1, 2], the current frame is a normal frame. If
G ∈ [3, 4092], whether the current frame is spoofed depends on the result of
veriﬁcation. When an STA is in the veriﬁcation state, there are two cases for
next SN: either between last SN and current SN or out of this range.
4.4 Attack Analysis
Table 1 shows scenarios under which the proposed algorithm may generate false
positives and negatives. It is organized according to how the algorithm classiﬁes
the inter-frame sequence number gap.
Normal Sequence Number Advance. In this case, the proposed algorithm
concludes that the current frame is not a spoofed frame. Therefore, there is no
false positive as no attack alert is reported. However, if an attacker can use the
sequence number that the victim STA is going to use, false negatives may occur
if the victim STA remains silent.
To solve this problem, the monitor node sends out ARP requests to each STA
every 2000 frames, and synchronizes with their sequence number based on the
ARP responses. This guarantees that the monitor node will detect this type
of false negative within 2000 frames. The frequency as one probing every 2000
frames is a tradeoﬀ between probing overhead and detection latency. If small
detection latency is more desirable, the probing frequency can be increased at
the price of more probing overhead.
Table 1. The false positive (F+) and false negative (F-) analysis of the proposed spoof
detection algorithm
Cases
Normal ad-
vance
False positive and false negative analysis
F+ None as no attack alert reported in this case
F- Attacker simulates victim STA’s sequence number state when
victim STA is inactive
Duplicate
F+ (1) STA reuses sequence number in 4 consecutive numbers. (2)
Other unknown out-of-order frame
F- Attacker sends a spoofed frame when the original frame is lost
and the frame is treated as an out-of-order frame due to bea-
con/probe response
F+ None as no attack alert reported in this case
F- None as potential spooﬁng will be detected
F+ Out-of-order frames
F- No frames come from victim in the veriﬁcation period
Abnormal
advance
Veriﬁcation
state
Sequence Number-Based MAC Address Spoof Detection
321
When attacker can simulate the sequence number that the victim STA is
going to use, the detection algorithm degrade to only detect spooﬁng activity.
It cannot detect each spoofed frames immediately. For short-lived spooﬁng, the
attack will be detected when victim sends out the ﬁrst frame.
Fortunately, this false negative is not easy to be exploited by attacker since
it requires forging correct sequence number. On the other hand, WLAN card
ﬁrmware or even hardware controls sequence number thus makes it not updatable
to card drivers.
Duplicate Sequence Number. If the current frame is treated as a retrans-
mitted frame, false positives may occur when two data frames are transmitted
out of order, or when a STA wraps around its sequence number once every four
consecutive sequence numbers.
Fortunately, both scenarios are very rare, if ever happen. For instance, if the
sequence numbers from a STA evolves as 1 2 3 4 1 2 3 4...., every ﬁfth frame
will have the same sequence number as the frames that are four frames before
and after it. Because they are really diﬀerent frames, the proposed algorithm
will report spooﬁng based on the comparison of their contents.