~
# pwd
/home/ramesh
How to use pushd and popd? Let us first create some temporary directories
and push them to the directory stack as shown below.
# mkdir /tmp/dir1
# mkdir /tmp/dir2
# mkdir /tmp/dir3
# mkdir /tmp/dir4
# cd /tmp/dir1
# pushd .
# cd /tmp/dir2
# pushd .
# cd /tmp/dir3
# pushd .
# cd /tmp/dir4
# pushd .
15
Linux 101 Hacks www.thegeekstuff.com
# dirs
/tmp/dir4 /tmp/dir4 /tmp/dir3 /tmp/dir2 /tmp/dir1
[Note: The first directory (/tmp/dir4) of the dir
command output is always the current directory and not
the content from the stack.]
At this stage, the directory stack contains the following directories:
/tmp/dir4
/tmp/dir3
/tmp/dir2
/tmp/dir1
The last directory that was pushed to the stack will be at the top. When you
perform popd, it will cd to the top directory entry in the stack and remove it
from the stack. As shown above, the last directory that was pushed into the
stack is /tmp/dir4. So, when we do a popd, it will cd to the /tmp/dir4 and
remove it from the directory stack as shown below.
# popd
# pwd
/tmp/dir4
[Note: After the above popd, directory Stack Contains:
/tmp/dir3
/tmp/dir2
/tmp/dir1]
# popd
# pwd
/tmp/dir3
[Note: After the above popd, directory Stack Contains:
/tmp/dir2
/tmp/dir1]
# popd
16
Linux 101 Hacks www.thegeekstuff.com
# pwd
/tmp/dir2
[Note: After the above popd, directory Stack Contains:
/tmp/dir1]
# popd
# pwd
/tmp/dir1
[Note: After the above popd, directory Stack is empty!]
# popd
-bash: popd: directory stack empty
Hack 6. Use “shopt -s cdspell” to automatically
correct mistyped directory names on cd
Use shopt -s cdspell to correct the typos in the cd command automatically as
shown below. If you are not good at typing and make lot of mistakes, this will
be very helpful.
# cd /etc/mall
-bash: cd: /etc/mall: No such file or directory
# shopt -s cdspell
# cd /etc/mall
# pwd
/etc/mail
[Note: By mistake, when I typed mall instead of mail,
cd corrected it automatically]
17
Linux 101 Hacks www.thegeekstuff.com
Chapter 2: Date Manipulation
Hack 7. Set System Date and Time
To change the system date use:
# date {mmddhhmiyyyy.ss}
o mm – Month
o dd – Date
o hh – 24 hour format
o mi – Minutes
o yyyy – Year
o ss – seconds
For example, to set system date to Jan 31st 2008, 10:19 p.m, 53 seconds
# date 013122192009.53
You can also change system date using set argument as shown below.
# date 013122192009.53
# date +%Y%m%d -s "20090131"
# date -s "01/31/2009 22:19:53"
# date -s "31 JAN 2009 22:19:53"
# date set="31 JAN 2009 22:19:53"
To set the time only:
# date +%T -s "22:19:53"
18
Linux 101 Hacks www.thegeekstuff.com
# date +%T%p -s "10:19:53PM"
Hack 8. Set Hardware Date and Time
Before setting the hardware date and time, make sure the OS date and time
is set appropriately as shown in the hack#7.
Set the hardware date and time based on the system date as shown below:
# hwclock –systohc
# hwclock --systohc –utc
Use hwclock without any parameter, to view the current hardware date and
time:
# hwclock
Check the clock file to verify whether the system is set for UTC:
# cat /etc/sysconfig/clock
ZONE="America/Los_Angeles"
UTC=false
ARC=false
Hack 9. Display Current Date and Time in a Specific
Format
Following are different ways of displaying the current date and time in
various formats:
19
Linux 101 Hacks www.thegeekstuff.com
$ date
Thu Jan 1 08:19:23 PST 2009
$ date --date="now"
Thu Jan 1 08:20:05 PST 2009
$ date --date="today"
Thu Jan 1 08:20:12 PST 2009
$ date --date='1970-01-01 00:00:01 UTC +5 hours' +%s
18001
$ date '+Current Date: %m/%d/%y%nCurrent Time:%H:%M:%S'
Current Date: 01/01/09
Current Time:08:21:41
$ date +"%d-%m-%Y"
01-01-2009
$ date +"%d/%m/%Y"
01/01/2009
$ date +"%A,%B %d %Y"
Thursday,January 01 2009
Following are the different format options you can pass to the date
command:
o %D date (mm/dd/yy)
o %d day of month (01..31)
o %m month (01..12)
o %y last two digits of year (00..99)
o %a locale’s abbreviated weekday name (Sun..Sat)
o %A locale’s full weekday name, variable length
(Sunday..Saturday)
o %b locale’s abbreviated month name (Jan..Dec)
20
Linux 101 Hacks www.thegeekstuff.com
o %B locale’s full month name, variable length
(January..December)
o %H hour (00..23)
o %I hour (01..12)
o %Y year (1970…)
Hack 10. Display Past Date and Time
Following are various ways to display a past date and time:
$ date --date='3 seconds ago'
Thu Jan 1 08:27:00 PST 2009
$ date --date="1 day ago"
Wed Dec 31 08:27:13 PST 2008
$ date --date="1 days ago"
Wed Dec 31 08:27:18 PST 2008
$ date --date="1 month ago"
Mon Dec 1 08:27:23 PST 2008
$ date --date="1 year ago"
Tue Jan 1 08:27:28 PST 2008
$ date --date="yesterday"
Wed Dec 31 08:27:34 PST 2008
$ date --date="10 months 2 day ago"
Thu Feb 28 08:27:41 PST 2008
21
Linux 101 Hacks www.thegeekstuff.com
Hack 11. Display Future Date and Time
Following examples shows how to display a future date and time.
$ date
Thu Jan 1 08:30:07 PST 2009
$ date --date='3 seconds'
Thu Jan 1 08:30:12 PST 2009
$ date --date='4 hours'
Thu Jan 1 12:30:17 PST 2009
$ date --date='tomorrow'
Fri Jan 2 08:30:25 PST 2009
$ date --date="1 day"
Fri Jan 2 08:30:31 PST 2009
$ date --date="1 days"
Fri Jan 2 08:30:38 PST 2009
$ date --date="2 days"
Sat Jan 3 08:30:43 PST 2009
$ date --date='1 month'
Sun Feb 1 08:30:48 PST 2009
$ date --date='1 week'
Thu Jan 8 08:30:53 PST 2009
$ date --date="2 months"
Sun Mar 1 08:30:58 PST 2009
$ date --date="2 years"
Sat Jan 1 08:31:03 PST 2011
$ date --date="next day"
Fri Jan 2 08:31:10 PST 2009
22
Linux 101 Hacks www.thegeekstuff.com
$ date --date="-1 days ago"
Fri Jan 2 08:31:15 PST 2009
$ date --date="this Wednesday"
Wed Jan 7 00:00:00 PST 2009
23
Linux 101 Hacks www.thegeekstuff.com
Chapter 3: SSH Client Commands
Hack 12. Identify SSH Client Version
Sometimes it may be necessary to identify the SSH client that you are
currently running and it’s corresponding version number. Use ssh –V to
identify the version number. Please note that Linux comes with OpenSSH.
The following example indicates that this particular system is using OpenSSH:
$ ssh -V
OpenSSH_3.9p1, OpenSSL 0.9.7a Feb 19 2003
The following example indicates that this particular system is using SSH2:
$ ssh -V
ssh: SSH Secure Shell 3.2.9.1 (non-commercial version)
on i686-pc-linux-gnu
Hack 13. Login to Remote Host using SSH
The First time when you login to a remotehost from a localhost, it will display
the host key not found message and you can give “yes” to continue. The host
key of the remote host will be added under .ssh2/hostkeys directory of your
home directory, as shown below.
localhost$ ssh -l jsmith remotehost.example.com
Host key not found from database.
Key fingerprint:
xabie-dezbc-manud-bartd-satsy-limit-nexiu-jambl-title-jarde-
tuxum
You can get a public key’s fingerprint by running
% ssh-keygen -F publickey.pub
24
Linux 101 Hacks www.thegeekstuff.com
on the keyfile.
Are you sure you want to continue connecting (yes/no)? Yes
Host key saved to
/home/jsmith/.ssh2/hostkeys/key_22_remotehost.example.com.pub
host key for remotehost.example.com, accepted by jsmith Mon
May 26 2008 16:06:50 -0700
PI:EMAIL password:
remotehost.example.com$
The Second time when you login to the remote host from the localhost, it will
prompt only for the password as the remote host key is already added to the
known hosts list of the ssh client.
localhost$ ssh -l jsmith remotehost.example.com
PI:EMAIL password:
remotehost.example.com$
For some reason, if the host key of the remote host is changed after you
logged in for the first time, you may get a warning message as shown below.
This could be because of various reasons such as:
o Sysadmin upgraded/reinstalled the SSH server on the remote host
o Someone is doing malicious activity etc.,
The best possible action to take before saying “yes” to the message below, is
to call your sysadmin and identify why you got the host key changed message
and verify whether it is the correct host key or not.
localhost$ ssh -l jsmith remotehost.example.com
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@ WARNING: HOST IDENTIFICATION HAS CHANGED! @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!
Someone could be eavesdropping on you right now (man-in-the-
25
Linux 101 Hacks www.thegeekstuff.com
middle attack)!
It is also possible that the host key has just been changed.
Please contact your system administrator.
Add correct host key to
“/home/jsmith/.ssh2/hostkeys/key_22_remotehost.example.com.pu
b”
to get rid of this message.
Received server key’s fingerprint:
xabie-dezbc-manud-bartd-satsy-limit-nexiu-jambl-title-arde-
tuxum
You can get a public key’s fingerprint by running
% ssh-keygen -F publickey.pub
on the keyfile.
Agent forwarding is disabled to avoid attacks by corrupted
servers.
Are you sure you want to continue connecting (yes/no)? yes
Do you want to change the host key on disk (yes/no)? yes
Agent forwarding re-enabled.
Host key saved to
/home/jsmith/.ssh2/hostkeys/key_22_remotehost.example.com.pub
host key for remotehost.example.com, accepted by jsmith Mon
May 26 2008 16:17:31 -0700
jsmith @remotehost.example.com’s password:
remotehost$
Hack 14. Debug SSH Client Session
Sometimes it is necessary to view debug messages to troubleshoot any SSH
connection issues. pass -v (lowercase v) option to the ssh as shown below to
view the ssh debug messages.
Example without SSH client debug message:
localhost$ ssh -l jsmith remotehost.example.com
warning: Connecting to remotehost.example.com failed:
No address associated to the name
26
Linux 101 Hacks www.thegeekstuff.com
Example with SSH client debug message:
locaclhost$ ssh -v -l jsmith remotehost.example.com
debug:
SshConfig/sshconfig.c:2838/ssh2_parse_config_ext:
Metaconfig parsing stopped at line 3.
debug:
SshConfig/sshconfig.c:637/ssh_config_set_param_verbose:
Setting variable ‘VerboseMode’ to ‘FALSE’.
debug:
SshConfig/sshconfig.c:3130/ssh_config_read_file_ext:
Read 17 params from config file.
debug: Ssh2/ssh2.c:1707/main: User config file not
found, using defaults. (Looked for
‘/home/jsmith/.ssh2/ssh2_config’)
debug: Connecting to remotehost.example.com, port 22…
(SOCKS not used)
warning: Connecting to remotehost.example.com failed:
No address associated to the name
Hack 15. Toggle SSH Session using SSH Escape
Character
When you’ve logged on to the remotehost using ssh from the localhost, you
may want to come back to the localhost to perform some activity and go back
to remote host again. In this case, you don’t need to disconnect the ssh
session to the remote host. Instead, follow the steps below.
1. Login to remotehost from localhost:
localhost$ ssh -l jsmith remotehost
27
Linux 101 Hacks www.thegeekstuff.com
2. Now you are connected to the remotehost:
remotehost$
3. To come back to the localhost temporarily, type the escape character ~
and Control-Z.
When you type ~ you will not see that immediately on the screen until you
press  and press enter. So, on the remotehost in a new line enter
the following key strokes for the below to work: ~
remotehost$ ~^Z
[1]+ Stopped ssh -l jsmith remotehost
localhost$
4. Now you are back to the localhost and the ssh remotehost client session
runs as a typical UNIX background job, which you can check as shown below:
localhost$ jobs
[1]+ Stopped ssh -l jsmith remotehost
5. You can go back to the remote host ssh without entering the password
again by bringing the background ssh remotehost session job to foreground on
the localhost.
localhost$ fg %1
ssh -l jsmith remotehost
remotehost$
28
Linux 101 Hacks www.thegeekstuff.com
Hack 16. SSH Session Statistics using SSH Escape
Character
To get some useful statistics about the current ssh session, do the following.
This works only on SSH2 client.
1. Login to remotehost from localhost.
localhost$ ssh -l jsmith remotehost
2. On the remotehost, type ssh escape character ~ followed by s as shown
below. This will display lot of useful statistics about the current SSH
connection.
remotehost$ [Note: The ~s is not visible on the
command line when you type.]
remote host: remotehost
local host: localhost
remote version: SSH-1.99-OpenSSH_3.9p1