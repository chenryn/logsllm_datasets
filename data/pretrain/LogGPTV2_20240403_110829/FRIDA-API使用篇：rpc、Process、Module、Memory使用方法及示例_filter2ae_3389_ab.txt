图1-4 终端输出了所有已加载的so
###  1.4.4 Process.enumerateThreads()
`Process.enumerateThreads()`：枚举当前所有的线程，返回包含以下属性的对象数组：
索引 | 属性 | 含义  
---|---|---  
1 | id | 线程id  
2 | state | 当前运行状态有running, stopped, waiting, uninterruptible or halted  
3 | context |
带有键pc和sp的对象，它们是分别为ia32/x64/arm指定EIP/RIP/PC和ESP/RSP/SP的NativePointer对象。也可以使用其他处理器特定的密钥，例如eax、rax、r0、x0等。  
使用代码示例如下：
    function frida_Process() {
        Java.perform(function () {
           var enumerateThreads =  Process.enumerateThreads();
           for(var i = 0; i  type: function
    name: __cxa_atexit
    module: /system/lib/libc.so
    address: 0xf58f4521
    type: function
    name: __cxa_finalize
    module: /system/lib/libc.so
    address: 0xf58f462d                                                                                                                                           
    type: function
    name: __stack_chk_fail
    module: /system/lib/libc.so
    address: 0xf58e2681
    ...
###  1.5.6 enumerateExports()
该API会枚举模块中所有中的所有`Export`函数，示例代码如下。
    function frida_Module() {
        Java.perform(function () {
            const hooks = Module.load('libhello.so');
            var Exports = hooks.enumerateExports();
            for(var i = 0; i  type: function
    name: Java_com_roysue_roysueapplication_hellojni_getSum
    address: 0xdf2d411b
    type: function
    name: unw_save_vfp_as_X
    address: 0xdf2d4c43
    type: function
    address: 0xdf2d4209
    type: function
    ...
###  1.5.7 enumerateSymbols()
代码示例如下。
    function frida_Module() {
        Java.perform(function () {
            const hooks = Module.load('libc.so');
            var Symbol = hooks.enumerateSymbols();
            for(var i = 0; i < Symbol.length; i++) {
                console.log("isGlobal:",Symbol[i].isGlobal);
                console.log("type:",Symbol[i].type);
                console.log("section:",JSON.stringify(Symbol[i].section));
                console.log("name:",Symbol[i].name);
                console.log("address:",Symbol[i].address);
             }
        });
    }
    setImmediate(frida_Module,0);
    输出如下：
    isGlobal: true
    type: function
    section: {"id":"13.text","protection":"r-x"}
    name: _Unwind_GetRegionStart
    address: 0xf591c798
    isGlobal: true
    type: function
    section: {"id":"13.text","protection":"r-x"}
    name: _Unwind_GetTextRelBase
    address: 0xf591c7cc
    ...
###  1.5.8 Module.findExportByName(exportName),
Module.getExportByName(exportName)
返回`so`文件中`Export`函数库中函数名称为`exportName`函数的绝对地址。
代码示例如下。
    function frida_Module() {