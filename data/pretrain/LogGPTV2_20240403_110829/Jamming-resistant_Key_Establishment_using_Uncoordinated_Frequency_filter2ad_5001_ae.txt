sage. The expected maximal time period between the ﬁrst
and the last packet of a message is NJ sender hops (see
Section 5.4). During this time, an expected amount of less
c−i , 1} ≤ NJ cm additional packets
than NJ
is received. To be more concrete, we give an example: For
a typical packet length of |mi| = 40 bytes, a fragmentation
into l = 10 packets, a set of c = 200 channels, cm = cn =
1 channel for sending and receiving, ct = 50 attacker chan-
nels for insertion, and a jamming probability of 80%, we get
NJ ≈ 30 000 for the number of packets transmitted by the
sender (see Figure 11(b)). This results in the reception of
about 7 500 packets and corresponds to a required storage
capacity of about 290 kbytes on the receiver side. We argue
that nowadays this amount of space is clearly available on
notebook- or handheld-class devices.
(1 − min{ ct
i=0
pt ≤ 1 − Qcm−1
Signature veriﬁcation. The expected number of pack-
ets that the attacker must send in order to insert a mes-
sage which is received by the receiver is N(pt), where
c−i , 1}) is the probability
that a packet inserted by the attacker is successfully re-
ceived. The expected number of additional messages that
can be inserted by the attacker during the transfer of a
regular message is thus NJ /N(pt), resulting in a total of
NJ /N(pt) + 1 signature veriﬁcations per message trans-
fer. Using the parameters of the above example, this gives
a total of about 160 signature veriﬁcations. Again, we ar-
gue that this is clearly within the realms of possibility with
today’s hardware. For instance, it takes only about 6 s to
verify 160 ECDSA-256 bit signatures on a typical handheld
device with a 206 MHz StrongARM CPU, and less than a
second on a notebook-class device [17].
5.6. Comparison of Coordinated and Uncoordi-
nated Frequency Hopping
Let fH be the hopping frequency of a given transceiver
i | ∝ 1/fH be the resulting length of a packet for a
and |m∗
coordinated frequency hopping scheme; |M∗
i | then denotes
the length of a fragment sent per packet in that scheme.
Provided that the fragment length is large enough to com-
prise the shortest possible fragment of our UFH scheme
(i.e., |M∗
i | ≥ 1 + |h(·)|), our UFH message transfer proto-
col enables anti-jamming communication without a shared
key and achieves the same jamming robustness as the co-
ordinated scheme at the expense of a lower throughput and
an increased storage consumption. More precisely, using
75
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 03:10:26 UTC from IEEE Xplore.  Restrictions apply. 
00.20.40.60.8101000200030004000number of message transmissions (i)Probability that a message is successfully receivedcmcncl= 1= 1= 100= 10pj = 0.0pj = 0.2pj = 0.5pj = 0.8 0⋅100 2⋅104 4⋅104 6⋅104 8⋅104 1⋅105 0 0.2 0.4 0.6 0.8 1probability that a packet is jammed (pj)Exp. number of required packet transmissions (NJ)cmcn= 1= 1c = 100, l = 10c = 200, l = 10c = 300, l = 10c = 100, l = 20c = 200, l = 20c = 300, l = 20 0⋅100 2⋅104 4⋅104 6⋅104 8⋅104 1⋅105 0 0.2 0.4 0.6 0.8 1probability that a packet is jammed (pj)Exp. number of required packet transmissions (NJ)cl= 200= 10cm = 1, cn = 1cm = 1, cn = 2cm = 5, cn = 1cm = 5, cn = 2the same coding scheme and packet length (i.e., |mi| =
|m∗
i |) results in the same probability that a packet gets
jammed for coordinated and uncoordinated frequency hop-
ping. The hash value added in the UFH scheme, however,
decreases the payload per packet to |Mi| = |M∗
i | − |h(·)|
and thus increases the number of packets per message to
l = d|M|/|Mi|e > l∗ = d|M|/|M∗
i |e. The relative
throughput of the presented UFH protocol compared to co-
ordinated frequency hopping is thus ΦJ = NJ /N∗
J , where
J = N(1 − pj)|l=l∗ (see Figure 12(b)).
N∗
5.7. Illustrative Example
We illustrate the feasibility of the proposed jamming-
resistant key establishment protocol by showing a possible
implementation for a Bluetooth-like transceiver. Although
Bluetooth was not designed to resist advanced jamming at-
tacks, it is nevertheless a representative example for what
can be achieved with low-cost hardware. According to [1],
we assume a sender (receiver) hopping frequency of 1.6 kHz
(160 Hz) and a symbol rate of 1 Mbit/s. Other than for Blue-
tooth, the number of frequency channels is assumed to be
200. Regarding the key establishment protocol, we fol-
low the current NIST recommendations [4] and advocate
a mid-term security level of 128 bits for keys and signatures
as well as a short-term security level of 112 bits for hash
links. Hence, we assume 256-bit prime ﬁelds for the ellip-
tic curves (|Sig(·)| = |P KX| = 512 bits) and a hash size
of 112 bits for the hash links.
Identities and time-stamps
are encoded with 64 bit integers. The size of the exchanged
messages is thus |M| = 2176 bits = 272 bytes (Figure 7).
A packet mi consists of a message id (34 bits), a frame
id (6 bits), the payload Mi (168 bits), and the hash value
of the next packet (112 bits). We assume the application
of a Reed-Solomon error-correcting code that encodes 8-
bit blocks into 15-bit blocks, achieving a jamming ratio of
20% [13]. The length of an encoded packet is thus 320 · 15
/ 8 = 600 bits and ﬁts well in a hopping slot of 1/1600 Hz ·
1 Mbit/s = 625 bits. The number of packets per message is
l = d272 / 21e = 13 for uncoordinated and l∗ = d272
/ 35e = 8 for coordinated frequency hopping. The re-
sulting duration for a key establishment and the achievable
throughput with respect to coordinated frequency hopping
are depicted in Figures 12(a) and 12(b), respectively. We
observe that even under harsh conditions where 80% of all
packets are jammed, the expected duration to establish a key
is well below one minute.
6. Related Work
Wireless communication jammers have been widely an-
alyzed and categorized in terms of their capabilities (e.g.,
broadband or narrowband) and behavior (e.g., constant, ran-
(a)
(b)
Figure 12. (a) Duration for a key establish-
ment and (b) relative throughput with respect
to coordinated frequency hopping as a func-
tion of the attacker’s jamming probability for
a Bluetooth-like transceiver using 200 chan-
nels.
In addition to the analytical result, the
average and standard deviation of 100 000
simulated key establishments is shown.
dom, responsive, sweep) [12, 16, 25]. The jammer mod-
els used in prior works [12, 16, 21, 24, 25] cover the inter-
ference with transmissions in terms of signal jamming or
dummy packet/preamble insertions.
In our work we ex-
tend these models by covering also protocol-speciﬁc DoS
attacks. Therefore, our attacker model captures signal jam-
ming and overshadowing as well as message modiﬁcation
and insertion.
As well-known countermeasures against these commu-
nication jamming attacks, spread-spectrum techniques such
as DSSS, chirp [2], and in particular frequency hopping
[1, 16] achieve frequency diversity over the communication
channel. Speciﬁc coding strategies [13] can additionally
strengthen the jamming resistance of transmitted messages
by increasing the fraction of the packet that the attacker
needs to interfere with in order to prevent its successful de-
coding at the receiver.
Recently, anti-jamming strategies have been analyzed
more intensely in the area of sensor networks; a common
strategy taken in those approaches is to detect and localize
the jammer in order to avoid the jammed region [12,23, 25]
or the jammed frequencies [24] during further communica-
tions.
In [21] the authors note that wired sensor pairs as
well as coordinated and uncoordinated (random) channel
hopping can be used for the timely delivery of short warning
message in sensor networks. The channel hopping solutions
proposed in these previous works are, however, very spe-
ciﬁc to the considered sensor-networking applications and
cannot be used to solve the key establishment problem ob-
served in this paper.
Pre-establishing keys between devices in ad-hoc net-
works for subsequent frequency hopping communication
suffers from scalability and network dynamics problems.
Key-establishment approaches that rely on device proxim-
76
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 03:10:26 UTC from IEEE Xplore.  Restrictions apply. 
 0 20 40 60 80 100 120 140 0 0.2 0.4 0.6 0.8 1probability that a packet is jammed (pj)Duration (in sec) to establish a shared keysimulatedanalytical 1⋅10-3 2⋅10-3 3⋅10-3 0 0.2 0.4 0.6 0.8 1probability that a packet is jammed (pj)Relative throughput w.r.t. coordinated FHsimulatedanalyticality [19] [15] [10] [22] [9] can be used in this context, but
require the nodes to be physically close to each other and
to use communication channels that are not being jammed
(e.g., infrared, wire, or visual). Unlike these approaches,
the proposed UFH scheme enables key establishment over
longer ranges using radio communication channels.
In a way, bootstrapping coordinated frequency hopping
starting from uncoordinated hopping resembles the process
of privacy ampliﬁcation [5], where secret shared informa-
tion is distilled from a larger body of shared information
that is only partially secret.
To the best of our knowledge, there is no prior work that
elaborates on the anti-jamming/key establishment circular
dependency problem in the described setting, or that pro-
poses a solution to this problem. Furthermore, we have
not been able to identify any solutions prior to our UFH
scheme that would enable the transfer of messages of arbi-
trary length across a jammed channel in the absence of a
shared secret.
7. Conclusion
In this paper, we elaborated the problem of how two de-
vices that do not share any secrets can establish a shared
secret key over a wireless radio channel in the presence
of a communication jammer. We addressed the cyclic de-
pendency between anti-jamming spread-spectrum commu-
nication and key establishment that is inherent to this prob-
lem, and proposed a novel anti-jamming technique called
Uncoordinated Frequency Hopping (UFH) as a solution to
break this dependency. We further presented a UFH mes-
sage transfer protocol and illustrated on the example of an
authenticated Difﬁe-Hellman-protocol how it can be used
to establish a shared secret key between two parties in the
presence of a jammer. We performed a detailed analysis of
our UFH scheme and showed its feasibility, both in terms of
execution time and resource requirements. Moreover, our
analysis showed that, although our UFH scheme has lower
communication throughput and incurs higher storage and
processing costs, it achieves the same level of anti-jamming
protection as (coordinated) frequency hopping. Finally, we
provided an example which illustrates that UFH key estab-
lishment can be executed using current technology with a
running time well below one minute (with 80% jamming
probability); we point out that this time is reasonably short,
given that with known anti-jamming techniques the devices
would not be able to communicate and therefore could not
execute a key establishment protocol.
We hope that our work will encourage further research to
improve the design of our proposed scheme and to provide
an even more efﬁcient and reliable solution under a poten-
tially reﬁned threat model.
Acknowledgment
The authors would like to thank the anonymous review-
ers for their thorough reviews and helpful suggestions. The
work presented in this paper was supported (in part) by the
Swiss National Science Foundation under Grant 200021-
116444.
References
[1] Speciﬁcation of the bluetooth system (version 1.2), Novem-
ber 2003.
[2] D. Adamy. A ﬁrst course in electronic warfare. Artech
House, 2001.
[3] ANSI. X9.63-2001: Key agreement and key transport using
elliptical curve cryptography. Technical report, American
National Standards Institute, 2001.
[4] E. Barker, W. Barker, W. Burr, W. Polk, and M. Smid. Rec-
ommendation for key management. NIST special publica-
tion 800-57, revised, 2006.
[5] C. H. Bennett, G. Brassard, C. Cr´epeau, and U. Maurer.
Generalized privacy ampliﬁcation. IEEE Transaction on In-
formation Theory, 41(6):1915–1923, Nov. 1995.
[6] D. Boneh and X. Boyen. Short signatures without random
oracles. In EUROCRYPT 2004, Springer LNCS 3027.
[7] D. Boneh and M. Franklin. Identity-based encryption from
the weil pairing. SIAM Journal on Computing, 32(3):586–
615, 2003.
[8] C. Boyd and A. Mathuria. Protocols for Authentication and
Key Establishment. Springer Verlag, 2003.
[9] C. Gehrmann, C. J. Mitchell, and K. Nyberg. Manual au-
thentication for wireless devices. RSA Cryptobytes, 7(1),
2004.
[10] M. T. Goodrich, M. Sirivianos, J. Solis, G. Tsudik, and
E. Uzun. Loud and clear: Human-veriﬁable authentication
based on audio. In Proceedings of the IEEE International
Conference on Distributed Computing Systems, 2006.
[11] C. Karlof, N. Sastry, Y. Li, A. Perrig, and D. Tygar. Distil-
lation codes and applications to DoS resistant multicast au-
thentication. In Proceedings of the Network and Distributed
Systems Security Symposium (NDSS), 2004.
[12] M. Li, I. Koutsopoulos, and R. Poovendran. Optimal jam-
ming attacks and network defense policies in wireless sensor
networks. In IEEE International Conference on Computer
Communications (INFOCOM), 2007.
[13] G. Lin and G. Noubir. On link layer denial of service in data
wireless lans: Research articles. Wireless Communications
& Mobile Computing, 5(3), 2005.
[14] M. Luby. LT codes. In Proceedings of the IEEE Symposium
on Foundations of Computer Science (FOCS), 2002.
[15] J. M. McCune, A. Perrig, and M. K. Reiter. Seeing-is-
believing: Using camera phones for human-veriﬁable au-
thentication. In Proceedings of the IEEE Symposium on Se-
curity and Privacy, 2005.
[16] R. A. Poisel. Modern Communications Jamming Principles
and Techniques. Artech House Publishers, 2006.
77
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 03:10:26 UTC from IEEE Xplore.  Restrictions apply. 
[17] I. Riedel. Protocols and elliptic curve cryptography on
an embedded platform. Master’s thesis, Ruhr-Universit¨at
Bochum, Germany, 2003.
[18] L. Rizzo. Effective erasure codes for reliable computer com-
munication protocols. ACM SIGCOMM Comput. Commun.
Rev., 27(2), 1997.
[19] F. Stajano and R. J. Anderson. The resurrecting duckling:
Security issues for ad-hoc wireless networks. In Proceed-
ings of the 7th International Workshop on Security Proto-
cols, pages 172–194, London, UK, 2000. Springer-Verlag.
[20] Symantec. Securing enterprise wireless networks. White
Paper, 2003.
[21] M. ˇCagalj, S. ˇCapkun, and J.-P. Hubaux. Wormhole-based
antijamming techniques in sensor networks. IEEE Transac-
tions on Mobile Computing, 2007.
[22] S. ˇCapkun and M. ˇCagalj.
Integrity regions: authentica-
In WiSe ’06:
tion through presence in wireless networks.
Proceedings of the 5th ACM workshop on Wireless security,
pages 1–10, New York, NY, USA, 2006. ACM.
[23] A. D. Wood and J. A. Stankovic. Denial of service in sensor
networks. IEEE Computer, 35(10):54–62, Oct. 2002.
[24] W. Xu, W. Trappe, and Y. Zhang. Channel surﬁng: de-
fending wireless sensor networks from jamming and inter-
ference. In ACM Conference on Embedded Networked Sen-
sor Systems (SenSys), 2006.
[25] W. Xu, W. Trappe, Y. Zhang, and T. Wood. The feasibility
of launching and detecting jamming attacks in wireless net-
works. In ACM International Symposium on Mobile Ad Hoc
Networking and Computing (MobiHoc), 2005.
78
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 03:10:26 UTC from IEEE Xplore.  Restrictions apply.