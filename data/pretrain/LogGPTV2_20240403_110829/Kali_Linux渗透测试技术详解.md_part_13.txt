## 第4章 信息收集

### 4.1 路由跟踪与服务区域识别

在进行网络渗透测试时，了解目标主机的位置和路由路径是非常重要的。以下是一些关键概念及其应用示例。

#### 4.1.1 路由跟踪与服务区域

**路由区 (RA) 和服务区 (SA)**

- **路由区 (RA)**: 指当前系统中移动台（如手机或路由器）所在的位置。标识符为 RAI。
- **服务区 (SA)**: 指移动台可获得服务的区域，即不同通信网用户无需知道移动台的实际位置即可与其通信的区域。

以下是通过 `res.graph()` 函数显示的路由跟踪结果示例：

```python
>>> res.graph()
```

执行以上命令后，将显示如下图所示的路由跟踪图：

![路由跟踪图](./images/图4.1路由跟踪图.png)

如果需要保存该图，可以使用以下命令：

```python
>>> res.graph(target=">/tmp/graph.svg")
```

执行以上命令后，图中的信息将会保存到 `/tmp/graph.svg` 文件中。

#### 4.1.2 退出 Scapy 程序

要退出 Scapy 程序，可以使用以下命令：

```python
>>> exit()
```

或者按下 `Ctrl+D` 组合键退出 Scapy 程序。

### 4.2 识别活跃的主机

在进行渗透测试之前，必须先识别目标网络内活跃的主机。本节将介绍如何使用 Nmap 工具来识别活跃的主机。

#### 4.2.1 网络映射器工具 Nmap

Nmap 是一个免费开放的网络扫描和嗅探工具包，常用于探测一组主机是否在线、扫描主机端口以及推断主机所用的操作系统。其工作原理如下表所示：

| 测试 | 描述 |
| --- | --- |
| T1 | 发送 TCP 数据包（Flag=SYN）到开放的 TCP 端口上 |
| T2 | 发送一个空的 TCP 数据包到开放的 TCP 端口上 |
| T3 | 发送 TCP 数据包（Flag=SYN、URG、PSH 和 FIN）到开放的 TCP 端口上 |
| T4 | 发送 TCP 数据包（Flag=ACK）到开放的 TCP 端口上 |
| T5 | 发送 TCP 数据包（Flag=SYN）到关闭的 TCP 端口上 |
| T6 | 发送 TCP 数据包（Flag=ACK）到开放的 TCP 端口上 |
| T7 | 发送 TCP 数据包（Flag=URG、PSH 和 FIN）到关闭的 TCP 端口上 |

Nmap 主要扫描类型包括 Ping 扫描、端口扫描、TCP SYN 扫描、UDP 扫描、操作系统识别和隐蔽扫描等。

#### 4.2.2 使用 Nmap 识别活跃主机

以下是如何使用 Nmap 查看一个主机是否在线的示例：

```bash
root@kali:~# nmap -sP 192.168.41.136
```

输出的信息将显示主机的域名、在线状态和 MAC 地址等。

此外，还可以使用 Nping 获取更多详细信息：

```bash
root@kali:~# nping -echo-client "public" echo.nmap.org
```

输出的信息将显示与 `echo.nmap.org` 网站连接时的数据发送情况，如发送数据包的时间、接收时间、TTL 值和往返时间等。

### 4.3 查看打开的端口

在进行渗透测试时，了解目标主机上打开的端口号是至关重要的。Kali Linux 中提供了 Nmap 和 Zenmap 两个工具来扫描端口。

#### 4.3.1 使用 Nmap 扫描端口

以下是如何使用 Nmap 查看目标主机 `192.168.41.136` 上开放的端口号的示例：

```bash
root@kali:~# nmap 192.168.41.136
```

输出的信息将显示主机上开放的端口和服务。

### 总结

本章介绍了如何使用路由跟踪、Nmap 和 Zenmap 等工具来收集目标网络的信息。这些工具可以帮助你识别活跃的主机和开放的端口，从而为后续的渗透测试提供重要信息。