    :::
[`--erroronfail`{.option}]{.term}
:   ::: para
    如果脚本失败则显示出错信息并暂停安装。该出错信息可让您进入记录失败原因的位置。
    :::
[`--log=`{.option}]{.term}
:   ::: para
    在指定日志文件中记录该脚本的输出结果。例如：
    :::
    ``` programlisting
    %pre --log=/mnt/sysimage/root/ks-pre.log
    ```
:::
::: para
以下是 `%pre`{.command} 部分的示例：
:::
::: example
[⁠]{#chap-kickstart-installations.html#exam-kickstart-pre-script}
**例 23.5. %pre 脚本示例**
::: example-contents
``` programlisting
%pre
#!/bin/sh
hds=""
mymedia=""
for file in /proc/ide/h* do
	mymedia=`cat $file/media`
	if [ $mymedia == "disk" ] ; then
		hds="$hds `basename $file`"
	fi
done
set $hds
numhd=`echo $#`
drive1=`echo $hds | cut -d' ' -f1`
drive2=`echo $hds | cut -d' ' -f2`
#Write out partition scheme based on whether there are 1 or 2 hard drives
if [ $numhd == "2" ] ; then
	#2 drives
	echo "#partitioning scheme generated in %pre for 2 drives" > /tmp/part-include
	echo "clearpart --all" >> /tmp/part-include
	echo "part /boot --fstype xfs --size 75 --ondisk hda" >> /tmp/part-include
	echo "part / --fstype xfs --size 1 --grow --ondisk hda" >> /tmp/part-include
	echo "part swap --recommended --ondisk $drive1" >> /tmp/part-include
	echo "part /home --fstype xfs --size 1 --grow --ondisk hdb" >> /tmp/part-include
else
	#1 drive
	echo "#partitioning scheme generated in %pre for 1 drive" > /tmp/part-include
	echo "clearpart --all" >> /tmp/part-include
	echo "part /boot --fstype xfs --size 75" >> /tmp/part-include
	echo "part swap --recommended" >> /tmp/part-include
	echo "part / --fstype xfs --size 2048" >> /tmp/part-include
	echo "part /home --fstype xfs --size 2048 --grow" >> /tmp/part-include
fi
%end
```
::: para
该脚本决定系统中的硬盘驱动器数量，并根据系统中有一个还是两个驱动器而编写带有不同分区方案的文本文件。不是在
Kickstart 文件中有一组分区命令，而是包含以下行：
:::
``` programlisting
%include /tmp/part-include
```
::: para
在将要使用的脚本中选择的分区命令。
:::
:::
:::
:::
::: section
::: titlepage
## [⁠]{#chap-kickstart-installations.html#sect-kickstart-anaconda-configuration}23.3.5. Anaconda 配置 {.title}
:::
[]{#chap-kickstart-installations.html#idm139805884345408
.indexterm}[]{#chap-kickstart-installations.html#idm139805810296672
.indexterm}
::: para
可在 Kickstart 文件的 `%anaconda`{.command}
部分配置附加安装选项。这个部分控制安装系统的用户界面行为。
:::
::: para
这个部分必须处于 kickstart 文件的最后（在 Kickstart 命令部分之后，如
[第 23.3.2 节 "Kickstart
命令及选项"](#chap-kickstart-installations.html#sect-kickstart-commands){.xref}
所述）而且必须用 `%anaconda`{.command} 命令开头，以 `%end`{.command}
结尾。
:::
::: para
目前，能够在 `%anaconda`{.command} 部分使用的命令只有
`pwpolicy`{.command}。详情请查看 [第 23.3.2 节 "Kickstart
命令及选项"](#chap-kickstart-installations.html#sect-kickstart-commands){.xref}。
:::
::: para
以下是 `%anaconda`{.command} 部分示例：
:::
::: example
[⁠]{#chap-kickstart-installations.html#exam-kickstart-anaconda-script}
**例 23.6. %anaconda 脚本示例**
::: example-contents
``` programlisting
%anaconda
pwpolicy root --minlen=10 --strict
%end
```
::: para
这个 `%anaconda`{.command} 部分示例设定密码策略（即 root 密码不得少于 10
个字符），并严格禁止不满足这个要求的密码。
:::
:::
:::
:::
::: section
::: titlepage
## [⁠]{#chap-kickstart-installations.html#sect-kickstart-postinstall}23.3.6. 安装后脚本 {.title}
:::
[]{#chap-kickstart-installations.html#idm139805882166064
.indexterm}[]{#chap-kickstart-installations.html#idm139805835929984
.indexterm}
::: para
您可以在安装完成后、第一次重启前立即添加要在该系统中运行的命令。这部分内容必须在
Kickstart 的最后，在 [第 23.3.2 节 "Kickstart
命令及选项"](#chap-kickstart-installations.html#sect-kickstart-commands){.xref}
所述 Kickstart 命令之后，同时必须用 `%post`{.command} 命令开头，以
`%end`{.command} 结尾。如果您的 Kickstart 文件还包括一个
`%pre`{.command} 部分，那 `%pre`{.command} 和 `%post`{.command}
的顺序是没有关系的。
:::
::: para
这部分在安装附加软件或者配置附加名称服务器时有用。该后安装脚本是在
chroot 环境中运行，因此默认情况下不支持执行类似为安装介质复制脚本或者
RPM 软件包的任务。您可以使用下述 `--nochroot`{.option}
选项更改这个行为。
:::
::: {.important xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**重要**
:::
::: admonition
::: para
如果您用静态 IP 信息和命名服务器配置网络，您可以在 `%post`{.command}
部分访问和解析 IP 地址。如果您使用 `DHCP`{.systemitem}
配置网络，当安装程序执行到 `%post`{.command}
部分时，`/etc/resolv.conf`{.filename}
文件还没有准备好。此时，您可以访问网络，但是您不能解析 IP
地址。因此，如果您使用 `DHCP`{.systemitem}，您必须在 `%post`{.command}
部分指定 IP 地址。
:::
:::
:::
::: para
可在后安装脚本中使用以下选项更改行为。要使用此选项，请将其添加到该脚本开始的
`%post`{.command} 行。例如：
:::
``` programlisting
%post --interpreter=/usr/bin/python
--- Python script omitted --
%end
```
::: variablelist
[`--interpreter=`{.option}]{.term}
:   ::: para
    允许指定不同的脚本语言，如 Python。例如：
    :::
    ``` programlisting
    %post --interpreter=/usr/bin/python
    ```
    ::: para
    可使用该系统中可用的任意脚本语言。在大多数情况下是
    `/usr/bin/sh`{.systemitem}、`/usr/bin/bash`{.systemitem} 和
    `/usr/bin/python`{.systemitem}。
    :::
[`--nochroot`{.option}]{.term}
:   ::: para
    允许指定要在 chroot 环境之外执行的命令。
    :::
    ::: para
    下例将 `/etc/resolv.conf`{.filename} 文件复制到刚安装的文件系统里。
    :::
    ``` programlisting
    %post --nochroot
    cp /etc/resolv.conf /mnt/sysimage/etc/resolv.conf
    %end
    ```
[`--erroronfail`{.option}]{.term}
:   ::: para
    如果脚本失败则显示出错信息并暂停安装。该出错信息可让您进入记录失败原因的位置。
    :::
[`--log=`{.option}]{.term}
:   ::: para
    在指定的日志文件中记录该脚本的输出结果。注：必须考虑该日志文件的路径，无论您是否使用
    `--nochroot`{.option} 选项。例如：没有 `--nochroot`{.option}：
    :::
    ``` programlisting
    %post --log=/root/ks-post.log
    ```
    ::: para
    使用 `nochroot`{.option}
    :::
    ``` programlisting
    %post --nochroot --log=/mnt/sysimage/root/ks-post.log
    ```
:::
::: para
以下是 `%post`{.command} 部分的示例：
:::
::: example
[⁠]{#chap-kickstart-installations.html#exam-kickstart-post-script}
**例 23.7.  %post 脚本示例**
::: example-contents
``` programlisting
# Start of the %post section with logging into /root/ks-post.log
%post --log=/root/ks-post.log
# Mount an NFS share
mkdir /mnt/temp
mount -o nolock 10.10.0.2:/usr/new-machines /mnt/temp
openvt -s -w -- /mnt/temp/runme
umount /mnt/temp
# End of the %post section
%end
```
::: para
上面的示例是挂载一个 NFS 共享，并执行该共享中位于
`/usr/new-machines/`{.filename} 的名为 `runme`{.filename} 的脚本。注：
Kickstart 模式[*不*]{.emphasis}支持 NFS 文件锁定，因此需要
`-o nolock`{.option} 选项。
:::
:::
:::
::: para
Kickstart 安装中最常使用的后安装脚本是使用 Red Hat Subscription Manager
自动注册安装的系统。以下是 `%post`{.command} 脚本中的自动订阅示例：
:::
::: example
[⁠]{#chap-kickstart-installations.html#exam-kickstart-entitlements}
**例 23.8. 将 subscription-manager 作为安装后脚本运行**
::: example-contents
[]{#chap-kickstart-installations.html#idm139805846690288
.indexterm}[]{#chap-kickstart-installations.html#idm139805846688848
.indexterm}[]{#chap-kickstart-installations.html#idm139805845937568
.indexterm}
``` programlisting
%post --log=/root/ks-post.log
/usr/sbin/subscription-manager register --username=PI:EMAIL --password=secret --serverurl=sam-server.example.com --org="Admin Group" --environment="Dev" --servicelevel=standard --release="7.0"
%end
```
::: para
`subscription-manager`{.command}
命令行脚本会在红帽订阅管理服务器（客户门户网站订阅管理、Subscription
Asset Manager 或者 CloudForms System
Engine）中注册系统。这个脚本还可用来为系统自动分配或者附加与该系统最匹配的订阅。
:::
::: para
在客户门户网站中注册时，请使用 Red Hat Network 登录证书。使用
Subscription Asset Manager 或者 CloudForms System Engine
注册时，请使用本地管理员生成的用户帐户。
:::
::: para
注册命令中可使用附加选项设定系统的首选服务等级，以及对具体操作系统版本限制更新和勘误。
:::
::: para
还可以查看红帽客户门户网站中的 [如何在 kickstart 文件中使用
subscription-manager？](https://access.redhat.com/solutions/748313)，以了解在
Kickstart `%post`{.command} 部分使用 `subscription-manager`{.command}
的附加信息。
:::
:::
:::
:::
::: section
::: titlepage
## [⁠]{#chap-kickstart-installations.html#sect-kickstart-addon}23.3.7. Kickstart 附加组件 {.title}
:::
::: para
从 Red Hat Enterprise Linux 7, Kickstart
安装支持附加组件。这些附加组件可在很多方面扩展基本 Kickstart（
Anaconda）功能。
:::
::: para
要在 Kickstart 文件中使用附加组件，请使用
`%addon addon_name options`{.command} 命令，并使用 `%end`{.command}
语句放在命令结尾，与上一部分所述预安装和后安装脚本类似。例如：如果要使用默认由
[**Anaconda**]{.application} 分配的 [**Kdump**]{.application}
附加组件，请使用以下命令：
:::
``` programlisting
%addon com_redhat_kdump --enable --reserve-mb=auto
%end
```
::: para
`%addon`{.command} 命令不包含任何其自身的选项 -
所有选项都依赖实际附加组件。有关附加组件的详情，请查看 [*《Anaconda
附加组件开发指南》*](https://vpodzime.fedorapeople.org/anaconda-addon-development-guide/)。
:::
:::
::: section
::: titlepage
## [⁠]{#chap-kickstart-installations.html#sect-kickstart-considerations-atomic}23.3.8. Red Hat Enterprise Linux Atomic Host 注意事项 {.title}
:::
::: para
Red Hat Enterprise Linux Atomic Host 的 Kickstart 安装与 Red Hat
Enterprise Linux 安装没有什么不同，以下注意事项除外。
:::
::: para
Red Hat Enterprise Linux Atomic Host 使用 *rpm-ostree*
技术管理和更新软件包。因此在 Kickstart 文件中不适用
`%packages`{.command} 部分。反之，该文件必须包含安装介质中包含
`interactive-defaults.ks`{.filename}文件的命令。该文件包含 Kickstart
命令，指向介质中的 OSTree 存储库，还要禁用 cloud-init 服务。
:::
::: para
使用 Red Hat Enterprise Linux Atomic Host 的默认分区。这是由