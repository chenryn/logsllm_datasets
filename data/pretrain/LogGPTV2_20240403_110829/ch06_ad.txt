### 共享组件与团队自主性

共享组件在提高团队自主性方面具有巨大潜力，特别是在通常由专门团队负责的领域。例如，在 SoundCloud，生产工程（ProdEng）团队为所有团队提供了一个部署平台作为服务。然而，使用该平台并非强制性要求，有些应用程序仍然选择独立运行。这取决于各团队自身的决策。

### 激励结构的重要性

Google 在确保 SRE 实践得以遵循时，采用了一种激励结构，而非简单的“黄金规则”。这种做法鼓励工程师们自发地提升自身效率和生产力。一个广为人知的例子是引入错误预算，而非直接停止发布。如果自我监管不足，SRE 团队可以通过威胁不再轮值来施加压力。尽管如此，这些机制的有效实施需要强有力的管理支持，以便在必要时做出自上而下的决策。

### 工程文化的挑战与机遇

将 SRE 原则引入已建立的组织中，首先需要获得各级管理层的支持，然后才能激励个体工程师。在 SoundCloud，由于其工程文化一直强调团队自主性，因此几乎没有遇到阻力。高级管理层对实验持开放态度，并欢迎任何有助于解决日益增长的可靠性问题的努力。然而，集中引入和执行新规则，如错误预算框架，却颇具挑战性。这是因为许多团队领导非常珍视其自主权。

### 文化融合与变革

执行与现有工程文化相悖的措施通常不是一个好主意。理想情况下，应调整方法使其与现有文化相融合，甚至推动文化向更成熟的方向发展。嵌入式 SRE 的实践就是一个很好的例子。虽然没有人反对这个想法，但期望每个团队都能独立改变其经验证的习惯以充分利用 SRE 是不现实的。即使是在平台团队时代，工程师们也经常抱怨他们的建议被忽略或未被征求。这表明，没有适当的激励结构，变革难以实现。

### 成功案例与文化演变

类似于 Google SRE，我们需要建立一个激励结构和自我监管机制，而不是强制执行严格的规则。此外，我们必须在一个重视实验、创新和团队自主性的文化环境中运作。SoundCloud 的成功案例显示，通过接管轮值责任，团队可以更好地平衡功能与稳定性；通过采用通用部署平台，他们能够更快地推动更新并减少操作开销；现代监控实践不仅有助于故障检测，还提供了新的调试和优化代码的方法。

随着时间的推移，SoundCloud 的工程文化也发生了一些积极的变化：
- **相互学习**：这种理念逐渐取代了对完全自主的追求。内部技术讲座和故障审查等学习机会受到欢迎。
- **以身作则**：例如，Prometheus 的采用最初需要大量说服工作，但在实施后获得了广泛认可。
- **协调与合作**：团队之间缺乏协调的问题促使公司达成共识，即某些共同做法是必要的。这不仅有助于实施 SRE，还对 SoundCloud 工程的多个方面产生了积极影响。

### 结论

对于 Google 开发人员而言，获得 SRE 支持的最大吸引力之一是减轻运维负担。相比之下，SoundCloud 采取了另一种方式，即让开发人员承担更多运维责任。这样做更加符合 SRE 的基本原则：“SRE 是当你要求软件工程师设计运维团队时发生的情况。”在 SoundCloud 这样的中型工程组织中，专用 SRE 团队可能并不适用。然而，即使没有专门的 SRE 团队，也可以应用 SRE 原则，因为软件工程师必须在工作中扮演 SRE 角色。全面的监控、低噪音告警和良好的运维文档可以减少工作负载，使功能无需其他团队的运维即可发布；倾向于某些平台和共同的故障报告过程能促进凝聚力和知识交流；处于协商角色的良好团队不需要否决权就能维持可用性。

### 延伸阅读

这些发展的最初灵感来自前谷歌员工，其中许多人是 SRE。《网站可靠性工程：谷歌如何运行生产系统》一书对此进行了详细解释。我们的故障报告过程基于 Etsy 在 2010 年代早期开发的流程。Susan Fowler 的《生产就绪微服务》也为构建或拥有服务时要考虑的问题提供了良好的起点。

### 编者介绍

Björn Rabenstein 是 SoundCloud 的产品工程师和 Prometheus 的开发人员。在此之前，他曾在 Google 担任网站可靠性工程师，并且是科学数字计算的爱好者。Matthias Rampke 自 2011 年加入 SoundCloud，负责处理内部 IT 事务。作为系统和生产工程团队的一员，他自 2013 年以来一直在运维、调试并频繁重新启动将 SoundCloud 组合在一起的关键基础设施。