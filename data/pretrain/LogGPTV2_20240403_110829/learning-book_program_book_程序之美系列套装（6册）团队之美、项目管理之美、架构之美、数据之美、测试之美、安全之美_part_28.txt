有人把团队作为管理哲学的首要因素，与我看到的那种将团队看作
最不重要的因素的情况刚好相反？先不说你是否看到过这样的情
况，你认为这个想法很荒唐吗？
Steve：这很有意思，因为我想说的和我一分钟以前所说的有些矛
盾，我想说的是大多数公司都很看重领域知识。当某人获得那个领
域的经验后，他们就不愿意再让他离并那个领域了一一这是过分看
重领域知识的一个副作用。
虽然他们也可能对人们在一起工作的方式重新规划，但是人们在某
个领域开始工作之后，随着时间的推移，我们常常看到相反的问
题。也就是说，我们看到员工对某个领域感到厌倦，希望得到新的
151
---
## Page 153
机会，但是他们公司在那个领域已经投入很多，所以不愿意让他们
调动。
这种情况很常见，比项目结束后解散团队成员而丢失所有经验的情
沉要多。
我的部分想法是不一定需要看到一个真正的高绩效团队那么长时间
地在一起工作。不过我需要收集更多有关高绩效团队的样例，这样
才能对公司对待高绩效团队的方式作出判断。
Scot：好的，这个问题有点钻牛角尖了。但是，我想很多曾经在优
秀团队中工作过的人都会赞同一个观点，那就是那些团队没有得到
足够的保护。对于待在一起的团队没有足够的奖励，所以他们常常
解散。我只是在想，如果他们走向另外一个极端会怎么样：在一个
人员齐整的团队上碰碰运气，把他们视为最重要的资产并围绕着他
们工作。
Steve：我想DeMarco和Lister曾经谈到过这个问题。某些人提议让完
整的团队在公司内部投标来完成一项工作。所以基本的情况是，团
队会说：“如果让我们待在一起，我们承诺在4个月后完成这个项
目。”另外一些团队可能会说：“我们承诺在5个月后完成这个项
目。"这种做法是对一个人员不齐整的团队提出一个名义上的估
算，如果让团队保持齐整能够得到更好的局面，比如团队会说，
嘿，对于我们来说待在一起非常重要，我们愿意加班加点来赶上这
个领域的速度等诸如此类事情，那么这对于公司来说是一个有吸引
力的模型。
在我看来，这种论调的致命弱点是团队想怎么说就怎么说，但并不
意味着他们将会交付产品。
Scot：而且如果采取这种做法，那么也会造成一个团队之间在项目
上相互竞争的环境。
Steve：有潜在的可能。我只是做单纯的分析，因为我找不出实际的
例子来证明这种事情发生过，但是似乎慢慢地有可能发展成为血汗
工厂，最终，你可以想象到这样一种场景，团队在一起工作过，获
得了很好的体验，在第二个项目中承诺了一个绞肉机项目，然后因
为不喜欢再去做一个绞肉机项目而最后解散了。
152
---
## Page 154
Scot：你认为一个高绩效团队或优秀的团队是否会并发出糟糕的软
件，一个糟糕的团队是否会开发出优秀的软件？
Steve：这要看你如何定义优秀的团队和糟糕的团队。我认为可能会
有这样的团队，人人都士气高昂，度过了一段美妙的时光，但是完
全脱离了业务实际，团队中的人可能感觉到这是一个优秀的团队，
但是从业务的角度来看并不是这样。
Scot：这有点像是你们那个研究生项目，对吗？这个团队从他们自
已的目标来看似乎是在做一项了不起的工作，但是说到他们的上司
或他们公司的目标，他们却做得很失败。
Steve：在我们刚并始做咨询顾问时，有一个咨询活动是由一家公司
的总裁聘请我们的，那位总裁不是搞技术的，他说：“我收购了这
家公司，我积极地管理这个公司，我设定了一个发布日期。我们的
技术人员不断地告诉我*没问题，我们可以在发布日期完成’，但是
我对他们的能力已经失去信心。坦率地说，我认为那些人已经完全
被技术本身给迷住了，根本不关心我们是否能够交付产品。”
我在那时的反应是，这又是一个典型的生意人，对员工的想法一点
都不体谅。我敢肯定他们的员工工作非常努力，只是他对他们的努
力视而不见罢了。于是，我们深入公司，与员工进行了广泛的面
谈。对于个人来讲，他是对的。他们正在并发的是一个电影行业使
用的特效软件。酷极了，而且确实像他说的那样，他的员工不关心
这个软件是否能够交付。他们不了解业务的紧道性，也没有想着交
付一个能够带来利润的软件，所以在软件制作上花费了大量时间。
我想这是一个很好的例子，他们可能认为自己是一个优秀的团队，
但是总裁显然不认为他们是优秀的团队，那个据说很优秀的团队最
终会把企业拖垮的。
Scot：相反的情况会怎么样呢：一个能力不足的团队或一个糟糕的
团队（一个人人都不快乐、彼此都不喜欢的团队）是否可以开发出
优秀的软件？
Steve：我想是可以的。但那是因为时间长了，瞎猫也能碰上死耗
子。士气与激励通常是相关的，但并不总是这样。很早以前我了解
到的一个区别就是在激励与士气之间的区别。这两个概念常常可以
合二为一，但高激励低士气的情况也是存在的。而在低激励或误导
的激励下面，也有可能产生高士气。
153
---
## Page 155
在体育界也可以看到类似的情况，看看是哪些细节决定了团队是否
能够正常运作。高绩效团队中的队员彼此关心，这是在很多运动团
队中都能看到的情况，但偶尔也会看到高绩效团队中的队员彼此增
恶。这种情况不常见，但的确存在。
高绩效团队中可能存在能力超群和出类拔萃的人。在一些糟糕的团
队中也可能有这种能力超群和出类拔萃的人。在优秀的团队中，也
可能没有真正出类拔萃的个人。但是作为团队，他们确实能够非常
融洽地一起工作。
你可能会有一些平庸的团队。个人能力不突出，团队很平庸。我想
这样的人员结构在软件团队中也是存在的。
Scot：你学过计算机科学，对吧？
Steve：是的。
Scott：你学过的多少课程，包括你做的项目、完成的作业，是与团
队或团队体验这方面内容有关的？
Steve：我本科学的专业是哲学，我的—
Scott：在哲学方面没有太多的团队工作。
Steve：（笑。）
Scott：很不幸。
Steve：在计算机科学中团队工作可能会更多一些。
Scott：没错。
Steve：我在本科阶段的辅修专业是计算机科学，当时并没有哪个作
业是多人合作完成的。在我读研究生的时候，我有一个明确的目
标，那就是获得更多的经验，更好地处理团队工作。西雅图大学软
件工程硕士学位课程中一个吸引人的地方是很多作业都是团队作
业。不仅最后一年的项目如此，大多数课程中的很多作业，特别是
稍微大一些的作业，都是以团队方式完成的。
Scot：这对你理解团队的工作方式有很大帮助，是吗？
154
---
## Page 156
Steve：是的，你既然说到这个话题，我再补充一点，我想如果那个
计划能够多花一些时间讲述在完成团队作业和个人作业之间的差
别，帮助会更大一些，但是不管怎么说，我们碰巧领悟了一些好的
想法。但是我认为其他组的学生就没有获得这种领悟了。
Scot：你的经验和我在卡耐基梅隆大学的经验一样。在到了高年级
或达到高年级水平的时候，有一些项目是基于团队的，但是总的来
说，我们班的每个人都是和自己的朋友组成了团队。没有提供指
导，甚至简单到像最常见的5种冲突类型这样的指导也没有。只需
方式。但是我们什么讨论也没有。我刚才之所以问那个问题，是因
为人们学习的课程有很大的差距。我们学习的课程告诉我们你是一
名个体程序员，你的目标是成为编程大师，但是在参加工作以后，
面临的坏境无一例外都是基于团队的。
学校中学习的东西，我认为二者之间总是存在差距的。你举的这个
例子对于我所说的内容有很大帮助。5件可以让项目更顺利的事情
一这是非常有帮助的。5种会把项目搞砸的方式，5种可以让项目
顺利进行的方式。这些都是非常有帮助的。我认为不仅仅软件行业
如此。几年前我曾卷入一个法律纠纷。我去打官司，对方的律师做
了一些让人难以置信的荒唐决定。虽然那些决定对我有利，但是我
想那个律师并没有给他的当事人帮上什么忙。于是我和一位从哈佛
法学院毕业的朋友谈了谈，问问他对这件事情的看法。我们的律师
考虑得很周到但对方的律师考虑不周，这种情况是不是很少见？那
位朋友的回答让人大吃一惊。
他说：“在来到任何一位法官或司法行政长官之前，如果我以前没
有和那位法官打过交道，我就会问问别人，看那位法官喜欢什么，
我会了解那位法官的一切。我会了解他们做出决策的因素是什么。
我会了解他们在过去一般是如何做出裁决的。我会查看他们在类似
案件中所写的意见。这样当我走进法院的时候，我就能估计到那位
都没有谈论过。”
但是根据我的判断，这些东西在某种程度上将决定你的官司是赢还
是输。我认为任何一种学术计划都必须在理论和实践之间取得平
155
---
## Page 157
衡，到了某种程度我们可能会变得有点过于实际了。如果过于实
际，那就变成一所职业学校而不是教育机构了。
有人可能会说，现在有各种实验室、工作室或类似的场合，可以让
你能够得到一些实际经验，我们想表达的意思是，与软件行业中现
有的那些工作室相比，我们更需要的是有指导性的工作室。
Scot：我确信大学是有义务的。如果把学生放到某个环境中，让他
们第一次经历某个事物，而且我们知道他们现在所经历的也将会在
今后的职业生涯中遇到，那我们至少有义务告诉他们：“如果你们
自己的团队遇到问题，去这个网站，读这本书或参加这个研讨
会。"根据我的经验（这次仍旧是根据我的经验，根据我大约15年
前的经验），从未有人讲过这样的东西。甚至连这方面的谈话都没
有。你可以去找教学助理，但教学助理会把你说的话当成社会问题
而不予理会。对于任何不属于代码的问题，都会存在一种大男子主
义的态度。这强化了这种思想：作为优秀程序员，应该只关注是否
能够让编译器按照你的想法去工作，而不是你能够说服一个人或团
队做些什么。
我承认，这是另外一套技巧。做一个优秀程序员与善于团队工作之
间没有关联：你可以在一方面做得很好而在另一方面做得很差。但
是当我想到漂亮团队的时候，我想到的就是这些。我会问人们类似
这样的问题：他们所在的第一个团队是什么样的；他们是如何学习
的；对于一个优秀团队应当是什么样的，他们是否有一些想法。他
们在这个问题上都至少有一些想法，知道某些行为方式似乎能够让
团队更好地运作。大多数计算机科学专业毕业的学生完全忽视了这
一点，这真是有点嘲弄。考虑到在实际工作中的编程方式，他们这
么做是不负责的。
OK。我现在感觉好一些了。这些都带来一个更实际的问题。你认
为某种特定软件并发方法是否比其他方法更容易产生优秀的团队工
作？
队起到了促进作用。
比如说在Scrum中，在站立会议中进行的交流是非常有帮助的。在
很多很多团队中，人们每大彼此都不见面。此外，在制定Sprint计
划的过程中（通常是在整个团队层面的），团队可以以一种深入合
156
---
## Page 158
作、关注任务的方式组织在一起，大约是每月一次。这种活动实际
上适用于任何一种项目，但是在Scrum中已经成为一种深入人心的
方法，所以使用得更多一些。
我认为在编程过程中，人际交流存在一个回报开始递减的点。极限