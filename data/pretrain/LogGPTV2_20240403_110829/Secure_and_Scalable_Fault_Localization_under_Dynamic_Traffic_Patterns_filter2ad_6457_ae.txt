negative rate of the sketch-based detection are limited under
0.001. Figure 12 plots the result, from which we can see
that a sketch with fewer than 500 bytes can already yield a
desirable accuracy.
Cache size and per-neighbor storage overhead. We now
study the cache size for temporarily storing packet hashes in
live epochs, which, together with the sketch size analyzed
above, constitutes the per-neighbor storage overhead of a
DynaFL router. We denote the upper bound of one-way
network latency as D, epoch length as L, and the number
of packets per second as η. Using 20-byte packet hashes,
the cache size is given by:
i.e.,
the 1-bit
+ 1(· 20 · η · L
(17)
D
’
L
indicator for each packet hash entry
We omit
to indiciate which packet stream the packet belongs to
(see Figure 6). Assuming the per-neighbor sketch size is
500 bytes, one-way latency D = 20ms, and the average
packet size is 300 bytes for an OC-192 link, we derive
327
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:47:18 UTC from IEEE Xplore.  Restrictions apply. 
)
B
M
(
e
z
S
i
 16
 14
 12
 10
 8
 6
 4
 2
 0
 0  10  20  30  40  50  60  70  80  90  100
Epoch Length (ms)
Figure 13. Router per-neighbor state for an OC-192 link with the average
packet size of 300 bytes and one-way network latency as 20ms.
s
y
e
k
f
o
r
e
b
m
u
n
 100000
 10000
 1000
 100
 10
 1
Path-based
DynaFL
ATT Sprint L3
I2 BCube VL2 DCell
Figure 14. Key management overhead at each router. A router in DynaFL
always requires just one key shared with the AC.
the per-neighbor storage overhead of a DynaFL router with
different epoch lengths shown in Figure 13. We can observe
that, with an epoch length of 20ms, only around 4MB is
required per-neighbor. The “humps” exist in the curve due
to the use of the ceiling function in Equation 17.
B. Key Management Overhead
One distinct advantage DynaFL presents is that each
router in DynaFL shares only one secret key with the AC,
whereas in path-based FL protocols it is necessary for each
router to share a secret key with each source node in the
network in the worst case [14], which dramatically compli-
cates the key management and broadens the vulnerability
surface. To quantify DynaFL’s advantage over path-based
FL protocols, we leverage the measured ISP topologies
from the Rocketfuel dataset [31] and the topology from
Internet2 [4]. Figure 14 shows the maximum number of keys
each router needs to manage in path-based FL protocols;
and a router in DynaFL always requires only one secret
key shared with the AC (thus invisible in the ﬁgure). We
can see that the number of keys a router needs to manage in
path-based FL protocols is 100 to 10000 times higher than
that in DynaFL.
C. Bandwidth Overhead
We analyze the bandwidth consumption on each link by
the reporting trafﬁc summaries based on the measured ISP
topologies from the RocketFuel dataset [31]. Recall that the
reporting messages are transmitted along a spanning tree
rooted at the AC. Hence, the bandwidth consumption by the
reporting messages on a link is determined by the number
of children below that link and the degrees of the children.
For each ISP topology, we ﬁrst select a “central” node
as the AC, which is the node in the network that has the
highest fraction of all shortest paths that pass through that
node. Then, we create a minimum spanning tree rooted
at the central node (or the AC) for transmitting reporting
messages to the AC. We consider the epoch length L=20ms,
a per-neighbor trafﬁc summary as 500 bytes, and the epoch
sampling rate is 1%. Hence, on average, each node only
sends one reporting packet in every two seconds. Figure 15
plots the results for ISPs with AS numbers 1221, 1239, 1755,
3257, 3967, and 6461. From the results, we can see that the
fraction of bandwidth used for reporting trafﬁc summaries
on a link is small for all topologies (e.g., between 0.002%
and 0.012% for an OC-192 link).
D. Detection Delay
As Section VI states, the AC performs consistency checks
and detects any anomalies only when the total number of
packets over multiple epochs is accumulated more than a
certain threshold N in order to give a low false positive and
negative rate (e.g.,  5000 packets,
the false positive rate is under 1%.
Figure 17 shows the false negative rates with a malicious
router which only drops packets with a probability of 0.005.
Figure 18 plots the false negative rates with a malicious
329
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:47:18 UTC from IEEE Xplore.  Restrictions apply. 
router which both drops and modiﬁes packets with a prob-
ability of 0.005, respectively. We can see that the sketch-
based approach is effective in detecting packet modiﬁcation
attacks, since by modifying packets the malicious router is
detected faster in Figure 18 than in Figure 17.
IX. RELATED WORK AND DISCUSSION
Realizing its importance, researchers have recently pro-
localization.
posed several approaches for network fault
As aforementioned,
the known secure FL protocols are
all path-based, failing to support dynamic routing paths,
requiring per-path state at routers, and incurring per-source
key sharing and management. Besides these fundamental
limitations, we show that most FL protocols also suffer either
from security vulnerabilities or high protocol overhead.
For example, WATCHERS [16], [22], AudIt [8] and
Fatih [29] implement
the trafﬁc summaries using either
counters or Bloom Filters [15] with no secret keys, thus
remaining vulnerable to packet modiﬁcation attacks as Sec-
tion III-C shows.
Both ODSBR [12], [13] and Secure Traceroute [30] acti-
vate FL only when the end-to-end packet loss rate exceeds a
certain threshold. However, a malicious node can safely drop
packets when FL is not activated, and behave “normally”
when FL is invoked. In addition, ODSBR does not consider
natural packet loss, which can make the algorithm either
not converge or incur high false positives by incriminating
benign links.
Liu et al. propose enabling two-hop-away routers in the
path to monitor each other [26] by using 2-hop acknowl-
edgment packets. However, such a 2-hop-based detection
scheme is vulnerable to colluding neighboring routers. Sim-
ilarly, both Watchdog [28] and Catch [27] can identify
and isolate malicious routers for wireless ad hoc networks,
where a sender S veriﬁes if the next-hop node fi indeed
forwards S’s packets by promiscuously listening to fi’s
transmission. Both Watchdog and Catch are vulnerable to
collusion attacks, where a malicious node fm drops the
packets of a remote sender S (which is out of the promiscu-
ous listening range of fm) while the colluding neighbors in
the promiscuous listening range of fm intentionally do not
report the packet dropping behavior of fm.
Among the known secure proposals, the protocol due to
Avramopoulos et al. [11] incurs high computational and
communication overhead, because it requires acknowledg-
ments from all routers in the path, and requires multiple
digital signature generation and veriﬁcation operations for
each data packet. Recently proposed PAAI-1 [34], Statistical
FL [14], and ShortMAC [36] all require stable routing paths
and per-path state at routers. TrueNet [35] leverages trusted
computing to achieve FL with constant small router state.
However, TrueNet requires special hardware support such
as a TPM.
X. CONCLUSION AND FUTURE WORK
In this paper, we ﬁrst raise the awareness of achieving a
practical and scalable network fault localization protocol
that can cope with dynamic trafﬁc patterns and routing
paths with constant, small router state. After identifying
the fundamental limitations of previous FL protocols which
are all path-based, we explore a neighborhood-based FL
approach; we also propose DynaFL, which utilizes delayed
key disclosure, a novel technique that enables secure yet
efﬁcient checking of packet content conservation.
While existing path-based FL protocols aim to identify
a speciﬁc faulty link (if any), DynaFL localizes data-plane
faults to a coarser-grained 1-hop neighborhood, to achieve
four distinct advantages. First, DynaFL does not require
any minimum duration time of paths or ﬂows in order to
detect data-plane faults as path-based FL protocols do. Thus,
DynaFL can fully cope with short-lived ﬂows which are
popularly seen in modern networks. Second, in DynaFL,
a source node does not need to know the exact outgoing
path, unlike path-based FL protocols. Hence, DynaFL can
support agile (e.g., packet-level) load balancing such as
VL2 routing [20] for datacenter networks. Third, a DynaFL
router only needs around 4MB per-neighbor state based on
our classic Sketch implementation, while a router in a path-
based FL protocol requires per-path state. Finally, a DynaFL
router only maintains a single secret key shared with the AC,
while a router in a path-based FL protocol needs to manage
100 to 10000 secret keys in measured ISP topologies.
DynaFL focuses mainly on unicast communication, while
multicast and broadcast communication may cause the detec-
tion of “packet injection”, since a packet may be “benignly”
duplicated during the transmission. As future work, we plan
to deal with multicast and broadcast scenarios.
XI. ACKNOWLEDGMENTS
The authors gratefully thank Hsu-Chun Hsiao and Patrick
Tague for constructive discussions and insightful sugges-
tions, and the anonymous reviewers for their valuable feed-
back. This research was supported by CyLab at Carnegie
Mellon under grants DAAD19-02-1-0389, W911NF-09-1-
0273, and MURI W 911 NF 0710287 from the Army
Research Ofﬁce, and by support from NSF under award
CNS-1040801. The views and conclusions contained here
are those of the authors and should not be interpreted as
necessarily representing the ofﬁcial policies or endorse-
ments, either express or implied, of ARO, CMU, NSF or
the U.S. Government or any of its agencies.
REFERENCES
[1] Arbor networks: Infrastructure security survey. http://www.
arbornetworks.com/sp security report.php.
[2] Cisco security hole a whopper.
politics/security/news/2005/07/68328.
http://www.wired.com/
330
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:47:18 UTC from IEEE Xplore.  Restrictions apply. 
[22] J. R. Hughes, T. Aura, and M. Bishop. Using conservation of
ﬂow as a security mechanism in network protocols. In IEEE
Symposium on Security and Privacy, 2000.
IEEE 1588 standard for a precision
[23] J.Eidson and K. Lee.
clock synchronization protocol for networked measurement
In Sensors for Industry Conference,
and control systems.
2nd ISA/IEEE., 2002.
[24] M. Kodialam, T. V. Lakshman, and S. Sengupta. Efﬁcient and
robust routing of highly variable trafﬁc. In In Proceedings of
ACM HotNets, 2004.
[25] C. Labovitz, A. Ahuja, and M. Bailey. Shining light on dark
address space. Technical report, Arbor Networks.
[26] K. Liu, J. Deng, P. K. Varshney, and K. Balakrishnan. An
acknowledgement-based approach for the detection of routing
misbehavior in MANETs.
IEEE Transactions on Mobile
Computing, 2007.
[27] R. Mahajan, M. Rodrig, D. Wetherall, and J. Zahorjan.
In
Sustaining cooperation in multi-hop wireless networks.
Usenix NSDI, 2005.
[28] S. Marti, T. J. Giuli, K. Lai, and M. Baker. Mitigating routing
misbehavior in mobile ad hoc networks. In ACM Mobicom,
2000.
[29] A. T. Mizrak, Y. chung Cheng, K. Marzullo, and S. Savage.
Fatih: Detecting and isolating malicious routers.
In IEEE
Transactions on Dependable and Secure Computing, 2005.
[30] V. N. Padmanabhan and D. R. Simon. Secure traceroute
to detect faulty or malicious routing. SIGCOMM Computer
Communication Review (CCR), 33(1):77–82, 2003.
[31] N. Spring, R. Mahajan, and D. Wetherall. Measuring isp
topologies with rocketfuel. In ACM SIGCOMM, 2002.
[32] R. Thomas. ISP security BOF, nanog 28. http://www.nanog.
org/mtg-0306/pdf/thomas.pdf.
[33] M. Thorup and Y. Zhang. Tabulation based 4-universal hash-
ing with applications to second moment estimation. SODA,
2004.
[34] X. Zhang, A. Jain, and A. Perrig. Packet-dropping adversary
identiﬁcation for data plane security. In ACM CoNext, 2008.
[35] X. Zhang, Z. Zhou, G. Hasker, A. Perrig, and V. Gligor.
Network fault localization with small TCB. In Proceedings
of the IEEE International Conference on Network Protocols
(ICNP), 2011.
[36] X. Zhang, Z. Zhou, H.-C. Hsiao, A. Perrig, and P. Tague.
In Pro-
the Network and Distributed System Security
Shortmac: Efﬁcient data plane fault localization.
ceedings of
Symposium (NDSS), 2012.
[37] R. Zhang-shen and N. Mckeown. Designing a predictable
internet backbone with valiant load-balancing. In in IWQoS,
2005.
[3] Symantec warns of
router compromise.
routersusa.com/symantec-warns-of-router-compromise-2.
html.
http://www.
[4] This project has beneﬁted from the use of measurement data
collected on the internet2 network as part of the internet2
observatory project. http://netﬂow.internet2.edu/.
[5] D. Achlioptas. Database-friendly random projections.
Proceedings of PODS.
In
[6] N. Alon, Y. Matias, and M. Szegedy. The space complexity
of approximating the frequency moments. STOC, 1996.
[7] X. Ao. Report on dimacs workshop on large-scale in-
ternet attacks. http://dimacs.rutgers.edu/Workshops/Attacks/
internet-attack-9-03.pdf.
[8] K. Argyraki, P. Maniatis, O. Irzak, S. Ashish, and S. Shenker.
Loss and delay accountability for the Internet. In IEEE ICNP,
2007.
[9] K. Argyraki, P. Maniatis, and A. Singla. Veriﬁable network-
performance measurements. In ACM CoNext, 2010.
[10] B. Augustin, T. Friedman, and R. Teixeira. Measuring load-
balanced paths in the internet. In ACM IMC, 2007.
[11] I. Avramopoulos, H. Kobayashi, R. Wang, and A. Krishna-
murthy. Highly secure and efﬁcient routing. In IEEE Infocom,
2004.
[12] B. Awerbuch, R. Curtmola, D. Holmer, C. Nita-Rotaru, and
H. Rubens. ODSBR: An on-demand secure byzantine resilient
routing protocol for wireless ad hoc networks. ACM Trans
Inform. Syst. Secur, 2008.
[13] B. Awerbuch, D. Holmer, C. Nita-Rotaru, and H. Rubens.
An on-demand secure routing protocol resilient to byzantine
failures. In ACM WiSe, 2002.
[14] B. Barak, S. Goldberg, and D. Xiao. Protocols and lower
In EURO-
bounds for failure localization in the Internet.
CRYPT, 2008.
[15] B. H. Bloom. Space/time trade-offs in hash coding with
allowable errors. Commun. ACM, 13(7):422–426, 1970.
[16] K. A. Bradley, S. Cheung, N. Puketza, B. Mukherjee, and
R. A. Olsson. Detecting disruptive routers: A distributed net-
work monitoring approach. In IEEE Symposium on Security
and Privacy, May 1998.
[17] M. Charikar, K. Chen, and M. Farach-Colton.
Finding
frequent items in data streams. Theoretical Computer Science,
2004.
[18] I. Cunha, R. Teixeira, and C. Diot. Measuring and charac-
terizing end-to-end route dynamics in the presence of load
balancing. In PAM, 2011.
[19] S. Goldberg, D. Xiao, E. Tromer, B. Barak, and J. Rexford.
In
Path-quality monitoring in the presence of adversaries.
Proceedings of SIGMETRICS, 2008.
[20] A. Greenberg, N. Jain, S. Kandula, C. Kim, P. Lahiri,
D. Maltz, P. Patel, and S. Sengupta. VL2: A scalable and
ﬂexible data center network. In ACM SIGCOMM, 2009.
[21] K. J. Houle, G. M. Weaver, N. Long, and R. Thomas. Trends
in denial of service attack technology. Technical report, CERT
Coordination Center.
331
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:47:18 UTC from IEEE Xplore.  Restrictions apply.