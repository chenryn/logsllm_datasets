### Title: Backdooring Hardware Devices by Injecting Malicious Payloads on Microcontrollers

Over the years, numerous studies have explored various methods of backdooring devices by exploiting their hardware components. However, most of this research has focused on powerful microprocessors, such as ARM, Intel, and AMD, rather than microcontrollers. Is targeting microcontrollers worth the effort? 

Microcontrollers are now integral to a wide range of critical systems, including physical security systems, automotive ECUs, traffic signals, elevators, sensors, industrial control systems, home appliances, and even robots. This talk will demonstrate how microcontrollers can also be backdoored and will explore three different techniques for injecting malicious payloads, ranging from basic to advanced methods.

**1. Firmware Entry Point Injection:**
The first method involves locating the entry point of the firmware and injecting the payload there. This approach ensures that the payload is executed at least once when the device boots up.

**2. EUSART Communication Backdoor:**
The second technique is more complex and involves backdooring the EUSART (Enhanced Universal Synchronous Asynchronous Receiver Transmitter) communication. By injecting a malicious payload into the code routine of this hardware peripheral, we can gain control. The memory address for injection can be determined by inspecting the Global Interrupt Enable (GIE), Peripheral Interrupt Enable (PEIE), and the polling process in the microcontroller's interrupt vector.

**3. Stack Manipulation for Program Flow Control:**
The third and most advanced technique allows us to take control of the microcontroller's program flow by manipulating the stack. By writing specific memory addresses to the Top of Stack (TOS), we can execute a payload composed of instructions already present in the original program. This method is similar to a Return-Oriented Programming (ROP) chain, where we leverage existing code snippets to perform our desired actions.

By exploring these techniques, this talk aims to highlight the potential vulnerabilities in microcontroller-based systems and the importance of securing them against such attacks.