# Communication Strategies for Heartbeat-Style Failure Detectors in Wireless Ad Hoc Networks

**Authors:**
Szu-Chi Wang and Sy-Yen Kuo  
Department of Electrical Engineering  
National Taiwan University  
Taipei, Taiwan  
Email: [Insert Email Address Here]

## Abstract
Heartbeat-style failure detectors are a common component in fault-tolerant distributed systems over unreliable and asynchronous networks. A fundamental requirement for these detectors is the diffusion of heartbeat information across the network. In wireless ad hoc networks, the dynamics of mobility and resource constraints make information dissemination challenging. Additionally, as a middleware service, the total bandwidth used for failure detection should be limited. This paper presents several communication strategies for implementing heartbeat-style failure detectors in wireless ad hoc networks. The goal is to support effective and robust gossiping under a fixed message transmission rate. Simulations show that the proposed gossiping schemes are resilient to message losses and topology changes, and their performance can be improved by introducing a transient hierarchy concept.

## 1. Introduction
Wireless ad hoc networks consist of mobile hosts with wireless network interfaces. These networks are characterized by scarce resources (e.g., bandwidth, battery power), a dynamically changing topology, and the absence of a physical backbone infrastructure. If two mobile hosts are within range, they can communicate directly; otherwise, packets must be relayed through intermediate hosts. The lack of a fixed infrastructure allows these networks to be deployed in areas without existing communication infrastructure or where such infrastructure is inconvenient or impossible to construct (e.g., after an earthquake or on a battlefield).

A wireless ad hoc network can be modeled as a simple graph \( G = (V, E) \), where \( V \) represents a set of mobile hosts and \( E \) represents a set of edges. An edge exists between two mobile hosts if they are within transmission range. Assuming all mobile hosts have the same transmission range \( R \), the nodes within \( R \) distance from a node \( p \) are its one-hop neighbors. The corresponding graph is a unit-disk graph, as shown in Figure 1. The maximum hop distance between any pair of nodes is called the diameter \( D \) of the network, and \( \Delta \) indicates the maximum node degree.

![Figure 1. Model the topology of wireless ad hoc networks by unit-disk graphs.](figure1.png)

Due to the characteristics of wireless ad hoc networks, distributed computing in such environments poses many challenges. One of the most significant challenges is designing fault-tolerant systems. The dynamics of mobility, limited bandwidth, and finite power supply require design considerations different from traditional fault-tolerance schemes. Fault tolerance is crucial in wireless ad hoc networks due to high error rates and the susceptibility of mobile hosts to failures, physical damages, or transient disconnections.

A basic component of many fault-tolerant systems is the failure detector, which provides information on which processes have crashed to all interested processes. Accurate failure detection is extremely difficult in asynchronous wireless ad hoc networks. However, Chandra and Toueg [1] showed that some fundamental problems in distributed computing, such as Consensus and Atomic Broadcast, can be solved with this kind of information even if it is not entirely reliable. Moreover, failure detectors, viewed as a middleware service, can facilitate and optimize other middleware services like system management, load balancing, and various forms of reliable broadcast.

In practical applications, timing constraints often allow reporting a process as failed if it is too slow or unreachable for a sufficiently long time. Thus, heartbeat-style failure detectors are commonly used. Each member maintains a heartbeat counter, increases it at regular intervals, and continuously informs other members of the latest value via message passing. If a member \( p \) does not receive an update from another member \( q \) for a predetermined time, \( q \) is considered failed by \( p \). The key metrics for evaluating a failure detector are speed (time to detect crashes) and accuracy (efficiency in avoiding mistakes).

The ability to disseminate failure detection information in a timely manner is critical. This type of information dissemination is often termed "gossiping" (e.g., [3, 4]). In a graph, each node has a piece of information that needs to be diffused to all other nodes. Information is gained through message transmissions, and at the end of the computation, each node has all the pieces of information held by the nodes initially. Gossiping is typically embedded as a low-level service in real computations. However, providing such mechanisms in a wireless network protocol stack is less investigated, motivating our work.

The intuitive way to implement gossiping in wireless ad hoc networks is blind flooding, where every node forwards every received message. However, this scheme is unacceptably costly, leading to broadcast storms, redundancies, contentions, and collisions [5]. Many efforts focus on reducing message retransmissions for broadcasting in wireless ad hoc networks [6, 7].

Given the limited bandwidth and finite battery power in wireless networks, we assume an upper bound on the number of gossip message transmissions for each mobile host. Our aim is to develop gossiping schemes with the following features:
1. **Distributed**: Executable at each mobile host without knowledge of the entire network topology, requiring only local information and a fixed number of iterative message exchanges.
2. **Effective**: Completes the gossiping task within a reasonable number of message transmissions.
3. **Robust**: Resilient to message losses and topology changes in a dynamic wireless environment.

To our knowledge, this is the first study of designing gossiping schemes for heartbeat-style failure detectors in wireless ad hoc networks. The ideas and techniques introduced here can be applied to other middleware services in wireless ad hoc networks that require gossiping-style information dissemination.

The rest of the paper is organized as follows: Section 2 reviews relevant literature, Section 3 describes the system model, Section 4 introduces background on heartbeat-style failure detectors, Sections 5 and 6 present two gossiping schemes, Section 7 compares their performance through simulations, and Section 8 discusses conclusions and future work.

## 2. Related Works
Chandra and Toueg [1] provided the first formal specification of unreliable failure detectors and showed that important fundamental problems in asynchronous systems can be circumvented with their proposed failure detectors. This approach has been generalized and extended in other works (e.g., [8, 9]). However, these studies only consider the eventual behavior of failure detectors. In practical distributed systems, heartbeat-style failure detectors are implemented [10, 11, 12, 13], guaranteeing completeness and offering different levels of accuracy. Gupta et al. [14] highlighted the need to minimize the network load imposed by failure detector algorithms in large-scale distributed systems, a critical concern in wireless environments.

Van Renesse et al. [2] proposed a scalable failure detection service based on a gossiping protocol, where each member sends messages to random members. Such protocols are attractive when the underlying graph is a clique, but their performance degrades if the graph is not a clique [15]. In wireless ad hoc networks, the underlying graph is far from a clique, and network congestion can be exacerbated by message retransmissions. Despite this, gossiping-style failure detectors are advantageous in mobile wireless environments, as a fixed hierarchical structure is impractical, and broadcasting failure events is expensive.

Despite the necessity of designing tailored gossiping schemes for wireless ad hoc networks, little work has been done on this, with most previous work focusing on broadcasting. Ravishankar and Singh [16] studied gossiping algorithms for restricted topologies, and Gupta and Manjunath [17] proposed scheduling algorithms to shorten schedule length. Chrobak et al. [18] developed deterministic and randomized algorithms for gossiping in radio networks, but these works primarily consider time complexity and assume perfect synchronization and no other network traffic. Our work aims to improve gossiping performance under a predetermined upper bound of bandwidth consumption for each mobile host.

## 3. System Model
We consider a wireless ad hoc network composed of \( N \) mobile hosts, each assigned a unique identifier (NID) \( n_1, \ldots, n_N \). Communications are modeled as one-to-all broadcasts, where a mobile host \( p \) transmits a message \( m \), and all one-hop neighbors of \( p \) can hear \( m \). A local broadcast, where a mobile host forwards a message to all its one-hop neighbors, counts as one message transmission. There is no global synchronization mechanism, but we assume the clock rate on each host is very accurate, with low clock drift. More details on this are discussed in Section 4. When a node receives a message, it can combine the included information with its own to form the updated state.