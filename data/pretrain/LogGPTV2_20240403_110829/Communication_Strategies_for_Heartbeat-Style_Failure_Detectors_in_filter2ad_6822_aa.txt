title:Communication Strategies for Heartbeat-Style Failure Detectors in
Wireless Ad Hoc Networks
author:Szu-Chi Wang and
Sy-Yen Kuo
Communication Strategies for Heartbeat-Style Failure Detectors in 
Wireless Ad Hoc Networks 
Szu-Chi Wang and Sy-Yen Kuo 
Department of Electrical Engineering 
National Taiwan University 
Taipei, Taiwan 
PI:EMAIL 
Abstract 
Heartbeat-style  failure  detectors  are  a  commonly 
used  building  block  in  practical  fault-tolerant  distributed 
systems  over  unreliable  and  asynchronous  networks.  A 
basic  requirement  to  implement  such  failure  detectors  is 
to  diffuse  heartbeat  information  across  the  underlying 
network.  In  wireless  ad  hoc  networks,  however,  the 
dynamics  of  mobility  and 
lack  of  resource  make 
information  dissemination  a  formidable  task.  Moreover, 
as  a  middleware  service,  the  total  bandwidth  used  for 
failure  detection  should  be  constrained.  This  paper 
describes  several  communication  strategies  on  which 
heartbeat-style  failure  detectors  can  be  developed  in 
wireless ad hoc networks. The design goal is to support an 
effective  and  robust  means  of  gossiping  under  a  fixed 
message  transmission  rate.  We  show  through  simulations 
that  the  proposed  gossiping  schemes  are  resilient  to 
message  losses  and  topology  changes.  The  simulation 
results  also  show  that  the  performance  of  gossiping  can 
be  improved  by  introducing  the  concept  of  transient 
hierarchy under varied network characteristics. 
1. Introduction 
and 
Wireless  ad  hoc  networks  are  comprised  of  mobile 
hosts  with  wireless  network  interfaces.  These  networks 
are  typically  characterized  by  scarce  resources  (e.g., 
bandwidth,  battery  power,  etc.),  a  dynamic  changing 
topology, 
any  physical  backbone 
infrastructure. If two  mobile  hosts are close enough, they 
can  communicate  directly,  otherwise, 
the  packets 
originated  from  the  source  host  must  be  relayed  over  a
sequence  of  wireless 
including  one  or  more 
intermediate mobile  
_____________________________ 
lack  of 
links 
*Acknowledgment:  This  research  was  supported  by  the  National 
Science Council, Taiwan, R.O.C. under grant NSC 91-2213-E-002-042. 
to  be  easily  deployed 
hosts. Without a  need of a  fixed infrastructure allows the 
network 
in  areas  where  a 
communication  infrastructure  does  not  exist  (e.g.,  due  to 
an earthquake) or the construction of a fixed infrastructure 
is inconvenient or impossible (e.g., on a battlefield). 
A wireless ad hoc network can be modeled by a simple 
graph G = (V, E), where V represents a set of mobile hosts 
and E represents a set of edges. There is an edge between 
two  mobile  hosts  if  both  of  them  are  within  their 
transmission  range.  To  simplify  our  discussion,  we 
assume  that  all  mobile  hosts  have  the  same  transmission 
range, namely, R. All the nodes that are within R distance 
from  a  node  p  are 
the  one-hop  neighbors  of  p.
Consequently, the corresponding graph will be a unit-disk 
graph, as shown in  Figure 1. The maximum  hop distance 
between any pair of nodes is called the diameter D of this 
network,  and  ∆  is  used  to  indicate  the  maximum  node 
degree of this network. Throughout the paper, we use the 
terms  host  and  node  interchangeably,  similarly  for  link 
and edge. 
p1
p1
p2
p2
p3
p3
p4
p4
Figure 1. Model the topology of wireless ad hoc 
Figure 1. Model the topology of wireless ad hoc 
Figure 1. Model the topology of wireless ad hoc 
Figure 1. Model the topology of wireless ad hoc 
etworks by unit----disk graphs.
nnnnetworks by unit
disk graphs. 
etworks by unit
etworks by unit
disk graphs.
disk graphs.
Due to the characteristics of wireless ad hoc networks, 
distributed computing in such an environment poses many 
special  challenges.  One  of  the  most  important  challenges 
is  to  design  fault-tolerant  systems  in  wireless  ad  hoc 
networks.  The  dynamics  of  mobility,  limited  bandwidth 
available  on  wireless  links,  and  finite  power  supply 
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:10:56 UTC from IEEE Xplore.  Restrictions apply. 
a 
Informally, 
require  design  considerations  totally  different  from  those 
of  traditional  fault-tolerance  schemes.  On  the  other  hand, 
fault tolerance is much more important for wireless ad hoc 
networks,  since  mobile  wireless  environments  have  high 
error  rates  and  mobile  hosts  are  more  prone  to  failures, 
physical  damages,  or  transient  disconnections.  A  basic 
component  of  many  fault  tolerant  systems  is  the  failure
detector. 
failure  detector  provides 
information  on  which  processes  have  crashed  to  all  the 
interested processes. Due to the asynchrony in wireless ad 
hoc  networks,  accurate  failure  detection  is  extremely 
difficult.  However,  in  [1],  Chandra  and  Toueg  showed 
that some fundamental problems in distributed computing, 
for  example  Consensus  and  Atomic  Broadcast  can  be 
solved  with  this  kind  of  information  even  it  is  not  totally 
reliable.  Moreover,  as  mentioned  in  [2],  since  the  failure 
detectors  are  usually  viewed  as  a  middleware  service,  it 
can  facilitate  and  optimize  many  other  middleware 
services,  such  as  system  management,  load  balancing, 
group  communication  services,  and  various  forms  of 
reliable  broadcast,  by  providing  useful  failure  detection 
information  in  the  face  of  failures.  To  the  rest  of  this 
paper, we  make the  same assumption as in [2] that every 
participating  process  in  a  distributed  computation  is 
interested in the failure detection information provided by 
all  the  other  participating  processes.  Each  participating 
process is called a member.
time 
its  value  at  regular 
In  practical  applications  since  there  are  some  timing 
constraints  in  most  cases,  it  is  acceptable  to  report  a 
process that is comparatively  too slow or unreachable for 
a  sufficiently  long  time  as  failed.  As  a  result,  heartbeat-
style  failure  detectors  are  commonly  used,  which  usually 
work as follows: each member keeps a heartbeat counter, 
increases 
intervals,  and 
continuously  tries  to  inform  all  the  other  members  the 
latest value of its heartbeat counter by message passing. If 
a  member  p  does  not  receive  any  message  indicating  the 
increment  in  heartbeat  counter  of  another  member  q  for 
more  than  a  predetermined  time,  then  q  is  considered 
failed by p. In general, the most important two metrics for 
evaluating  a  failure  detector  are  speed (the  time  to  detect 
crashes)  and  accuracy  (the  efficiency  to  avoid  mistakes). 
That  is,  to  be  useful,  failure  detection  services  should 
provide  reasonably  fast  and  accurate  failure  detection 
information to all the members. 
Since  in  the  above  scheme  each  member  has  to 
propagate  the  latest  value  of  its  heartbeat  counter,  the 
ability of disseminating failure detection information to all 
the other members in a timely manner plays a critical role 
in  shaping  the  quality  of  a  failure  detection  service.  A 
similar  concept  can  be  found  in  [2].  Such  kind  of 
information  dissemination  is  usually  termed  as  gossiping
(e.g., [3, 4]). It can be formalized as follows: each node in 
a  graph  has  a  piece  of  information  that  needs  to  be 
diffused  to  all  the  other  nodes  in  the  graph.  The 
through  message 
information  can  only  be  gained 
transmissions.  At  the  end  of  the  computation,  each  node 
has all the pieces of information held by the nodes in the 
beginning. Gossiping is usually embedded as a primitive, 
low-level  service  in  many  real  computations.  However, 
providing such mechanism in a wireless network protocol 
stack is less investigated, and this is the motivation behind 
our work. The most intuitive way for gossiping in wireless 
ad  hoc  networks  is  to  ask  each  mobile  host  to  propagate 
its  message  by  blind  flooding.  Here  the  term  blind 
flooding  means  that  every  node  blindly  forwards  every 
message  received  for  the  first  time  by  local  broadcast. 
However,  it  is  conspicuous  this  scheme  is  unacceptably 
costly. In fact, Ni et al. [5] identified the broadcast storm 
problem.  They  showed  through  analyses  and  simulations 
that  diffusing  messages  by  blind  flooding  would  induce 
very  serious  redundancies,  contentions  and  collisions.  To 
deal  with  the  severe  effect  caused  by  broadcast  storms, 
many efforts are concentrating on reducing the number of 
message  retransmissions  for  broadcasting  in  wireless  ad 
hoc  networks  [6,  7],  which  is  another  important  problem 
of information dissemination. 
The  bandwidth  available  for  middleware  services  is 
limited in wireless networks and is usually relatively small 
compared  to  the  total  bandwidth.  Furthermore,  the  finite 
battery  power  of  each  mobile  host  fuels  a  demand  that 
power  consumption  should  be  minimized  as  well  as 
balanced  among  nodes  to  prolong  the  network  life.  As  a 
result,  taking  the  node-based  nature  of  wireless  ad  hoc 
networks  into  consideration,  we  assume  for  each  mobile 
host,  there  is  a  upper  bound  on  the  number  of  gossip 
message transmissions (with a limit on message size) in a 
given  time  interval.  Consequently,  our  aim  is  to  develop 
gossiping  schemes  in  wireless  ad  hoc  networks  with  the 
desirable features listed below: 
1. Distributed: The gossiping scheme can be executed 
at  each  mobile  host  without  the  knowledge  of  the 
entire  network  topology.  Instead,  it  requires  only 
local  information  and  fixed  number  of  iterative 
rounds  of  message  exchanges  among  the  mobile 
hosts in the vicinity. 
2. Effective:  Since  we  assume  the  maximum  message 
transmission  rate  for  each  mobile  host  is  limited, 
the  effectiveness  of  a  gossiping  scheme 
is 
considered  to  be  the  ability  of  completing  the 
gossiping  task  within  a  reasonable  number  of 
message transmissions. 
3. Robust:  The 
communication 
for 
disseminating  information  should  be  robust  to 
message  losses  and  topology  changes  that  occur 
frequently in a dynamic wireless environment. 
strategies 
To  the  best  of  our  knowledge,  this  work  is  the  first 
study  of  designing  gossiping  schemes  for  heartbeat-style 
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:10:56 UTC from IEEE Xplore.  Restrictions apply. 
failure detectors in  wireless ad hoc networks. We believe 
that the ideas and techniques introduced in this paper can 
be applied to other middleware services in wireless ad hoc 
networks  that  require  (perhaps  not  totally  accurate) 
gossiping-style information dissemination to complete the 
computation. The rest of this paper is organized as follows. 
A  relevant  literature review is  given in  Section 2.  Section 3 
describes  the  system  model.  In  Section  4  some  background 
for heartbeat-style failure detectors is introduced. In Section 5 
and 6, two schemes are presented for performing gossiping in 
wireless  ad  hoc  networks.  We  compare  their  performance 
through  simulations  in  Section  7.  Finally,  conclusions  and 
future works are discussed in Section 8. 
2. Related Works 
the 
impossibility 
results  of  some 
the  failure  detection  service 
In  [1],  Chandra  and  Toueg  provided  the  first  formal 
specification  of  unreliable  failure  detectors  and  showed 
that 
important 
fundamental  problems  in  an  asynchronous  system  model 
can  be  circumvented  with  the  augmentation  of  their 
proposed  failure  detectors.  This  kind  of  approach  is 
generalized  and  extended  to  many  other  works  (e.g.,  [8, 
9]). However, in all of the above works only the eventual 
behavior  of  a  failure  detector  is  studied.  In  practical 
distributed  systems, 
is 
operating  in  a  system  with  timing  assumptions  and 
providing  some  quantitative  timeliness  guarantees.  For 
most  realistic  cases,  heartbeat-style  failure  detectors  are 
studied  and  implemented  [10,  11,  12,  13].  These  failure 
detector  algorithms  guarantee  the  completeness  property 
and  offer  different  (probabilistic)  levels  of  accuracy. 
Gupta  et al.  [14]  pointed  out  the  need  of  minimizing  the 
network  load  imposed  by  failure  detector  algorithms  for 
large-scale distributed systems, which is obviously a more 
critical  concern  in  wireless  environment.  Therefore,  the 
heartbeat  dissemination  mechanisms 
the  above 
algorithms are not appropriate in wireless ad hoc networks 
due to the much lower communication capability. 
in 
In  [2],  van  Renesse  et al.  proposed  a  scalable  failure 
detection  service  based  on  a  gossiping  protocol.  In  their 
work,  the  gossiping  task  proceeds  by  each  member 
sending  its  message  to  some  other  members  at  random. 
Such  gossiping  protocols  are  attractive  when 
the 
underlying  graph  of  a  network  is  a  clique,  that  is,  any 
node in the network can send a message to any other node, 
either because there is a direct link to that node or a route 
to that node can be easily found. They provide negligibly 
less reliability than flooding with a much lower overhead. 
However, as pointed in [15], if the underlying graph is not 
a  clique, 
these  gossiping 
protocols  is  inevitably  lower,  and  this  has  been  observed 
in  the  context  of  the  spreading  of  computer  viruses.  As 
mentioned  above,  it  is  obvious  that  such  an  assumption 
cannot  be  made  in  the  context  of  wireless  ad  hoc 
the  performance  of 
then 
networks,  not  only  the  underlying  graph  is  usually  far 
from  a  clique,  but  also  network  congestion  can  be  easily 
exacerbated  by  large  number  of  message  retransmissions 
due  to  message  routing.  However,  gossiping-style  failure 
detectors get advantage in a mobile wireless environment, 
since  it’s  improper  to  arrange  the  failure  detectors  in  a 
fixed  hierarchical  structure.  Moreover,  broadcasting  an 
(possibly  inaccurate)  event  of  process  failure  across  the 
network is very expensive. 
Despite  the  necessity  of  investigating  how  to  design 
tailor-made  gossiping  schemes 
in  wireless  ad  hoc 
networks, not much work has been done on it, and most of 
the  previous  work  focused  on  broadcasting.  In  [16], 
Ravishankar  and  Singh  studied  gossiping  algorithms  for 
some  restricted  topologies  (e.g.,  paths  and  rings)  under 
probabilistic  assumptions  on  the  spatial  distribution  of 
nodes.  In  [17],  Gupta  and  Manjunath  proposed  several 
gossiping  scheduling  algorithms  that  try  to  shorten  the 
schedule  length.  Chrobak  et al  [18]  developed  several 
deterministic  and  randomized  algorithms  for  gossiping  in 
radio  networks  with  unknown  topology.  However,  in  all 
the  above  works,  basically  only 
time 
complexity  is  considered.  Moreover,  in  their  system 
model  the  time  is  slotted,  the  network  is  globally 
synchronized,  failure  occurs  only  in  the  presence  of 
collisions,  and  there  is  no  other  traffic  over  the  whole 
network. In contrast, the computing environment assumed 
in this paper is more close to those of [5, 6, 7], i.e., perfect 
synchronization  mechanism  is  unlikely  and  no  accurate 
knowledge of the  network topology can be assumed. Our 
main concern is to improve the performance of gossiping 
under  a  predetermined  upper  bound  of  bandwidth 
consumption for each mobile host. 
the  running 
3. System Model 
identifiers 
The  system  we  consider  is  a  wireless  ad  hoc  network 
composed of N mobile hosts. Mobile hosts are all assigned 
(NIDs)  n1,  …  nN.  All 
with  unique 
communications are modeled as one-to-all broadcast, that 
is, whenever a mobile host p transmits a message m, every 
one-hop  neighbor  of  p  can  hear  m.  If  a  mobile  host 
forwards a  message to all its  one-hop neighbors (denoted 
as  a  local broadcast),  it  is  counted  as  one  message 
transmission.  There 
synchronization 
mechanism  such  as  a  global  clock.  However,  we  assume 
the  clock  rate  on  each  host  is  very  accurate,  that  is,  the 
clock  drift  is  low.  More  discussion  on  this  is  left  to 
Section  4.  Whenever  a  node  receives  a  message,  it  can 
combine the included information with its own to form the 