T2 = t0 + 2tvp + δp + δv + tvm
(1)
(2)
(3)
The attacker receives the ﬁrst message at T0 which is the
time it was sent t0 plus the time it took the signal to prop-
agate from the veriﬁer V to the attacker M . The next mes-
sage is the prover P ’s response to the ﬁrst message, so the
time at which the attacker receives it T1 is the sum of the
time the ﬁrst message was sent by the veriﬁer t0, of the time
it took the message to propagate from V to P , of the time
P took to process the message δp and of the time it took the
message to propagate from P to M . The third message is
a response to the second message and it includes two prop-
agation times between V and P 1 2tvp and two processing
times δv and δp.
The attacker can now ﬁnd the signals time of ﬂight be-
tween the veriﬁer V and prover P :
 20
 15
 10
 5
 0
-5
-10
-15
-20
-20
a = 10.00 m, c = .299792458 m/ns
∆f =3.34ns
Prover
Verifier
∆f =16.68ns
∆f =33.36ns
∆f =50.03ns
∆f =63.38ns
-15
-10
-5
 0
 5
 10
 15
 20
(meters)
Figure 3: The hyperboles, relative to P and V ,
leaked by two subsequent messages of a distance
bounding protocol for ﬁve diﬀerent values of ∆f =
∆1 − δv.
In order to obtain equation (3) we assume that the veri-
ﬁer sends its next challenge immediately after receiving the
response from the prover. This is true for mutual distance
bounding protocols [27, 29] but not for all types of distance
bounding protocols in general. In Section 4 we show that
in a number of scenarios, indeed only the two ﬁrst messages
are needed for the attacker to obtain the distance dvp.
3.3 Location leakage
It is not only the distance between the prover and veriﬁer
that leaks. From two subsequent distance bounding mes-
sages the attacker can infer his own location (x, y) relative
to the prover and veriﬁer if he knows the distance between
P and V .
For the attacker to obtain information about his position
relative to the prover and veriﬁer he needs the diﬀerence
between the arrival times of two subsequent messages ∆1.
The diﬀerence between the arrival times of two subsequent
messages follows from (1) and (2):
T1 − T0 = ∆1 = tvp + δp + tpm − tvm
(6)
If we convert from time to distance by multiplying with c
on both sides, we get:
c∆1 = dvp + cδp + dpm − dvm
tvp =
(T2 − T0) − δp − δv
2
(4)
c(∆1 − δp) − dvp = px2 + (dvp − y)2 −px2 + y2
(7)
In order for V and P to measure the distance between
them, δv and δp must be small, and constant, public values
as described in Section 2.
When the attacker has found the signals time of ﬂight
tvp using (4), the distance from V to P can be found by
multiplying tvp by the speed of light c
dvp = c · tvp
(5)
1This assumes that the message propagates with equal speed
from V to P and from P to V , i.e., tvp = tpv
In order to describe the position of the attacker relative to
the prover and veriﬁer we have to deﬁne a coordinate system
in which the prover, veriﬁer and attacker have well deﬁned
positions. In (7) we assume the veriﬁer is located at (0,0)
and the location of the prover deﬁnes the positive direction
of the y-axis, i.e., the prover is located at (0,dvp).
To simplify the equations, we deﬁne the left side of equa-
tion (7) as a pseudo distance ∆p:
∆p ≡ c(∆1 − δp) − dvp
for − dvp ≤ ∆p ≤ dvp
(8)
which gives
∆p = px2 + (dvp − y)2 −px2 + y2
y =
±∆pp4x2 + d2
vp − ∆2
p + dvppd2
vp − ∆2
p
vp − ∆2
p
(9)
2pd2
Equation (9) describes a hyperbole relative to the prover
and veriﬁer, on which the attacker must be located. Diﬀer-
ent examples of such hyperboles can be seen in Figure 3
along with the corresponding ∆f = ∆1 − δp values.
In
essence, the messages sent by the prover and veriﬁer work
like beacons in a TDOA [33, 7] system, only here the bea-
cons are not transmitted at the same time, but in a rapid
sequence.
3.4 Attacker initiates the Distance Bounding
Protocol
Another way information can leak from distance bounding
protocols is if the attacker takes the role of the prover (or
veriﬁer) and initiates a distance bounding session with the
other node. This is a deviation from the passive attacker
model since the attacker is now actively sending bits to force
the distance to leak.
Most distance bounding protocols do not have any form of
authentication until after the rapid exchange of messages [4,
30] so even if the attacker does not hold a valid key he can
initiate the protocol and trick the prover (or the veriﬁer) into
completing the rapid message exchange, at which point the
attacker will know the distance to the prover (veriﬁer) and
abort the protocol before completing the authentication.
To the best of our knowledge no existing distance bound-
ing protocol include authentication in the setup phase. Some
use a shared key to communicate before the ranging phase
begins [10, 26] but do not prevent an external attacker from
initiating the protocol and completing (part of) the ranging
phase. Even if authentication is included in the setup phase
of the distance bounding protocol, the individual messages
of the rapid message exchange are not authenticated so an
attacker can still wait for two nodes to initiate the protocol
and then take over the rapid message exchange by overshad-
owing the signal from the valid node.
4.
INFORMATION LEAKAGE
COUNTERMEASURES
In order to prevent information leakage from distance bound-
ing protocols, the attacker must be prevented from calcu-
lating the time of ﬂight of the signal between the veriﬁer
and the prover, as shown in equation (4). In this section,
we explore various solutions to this problem and we show
why each of the solutions fails to provide full protection
against distance and location leakage attacks. We will use
the lessons learned in this section to construct a location
private protocol (Section 5).
The protocols presented in this section all use single bits
as the messages N1, . . . , Nk and the function applied by the
prover is ⊕ (xor). The protocols that represent diﬀerent
countermeasures, all have weaknesses that limit their eﬀec-
tiveness but they highlight why the problem of information
leakage is not trivial to solve.
4.1 Adding random delay between messages
One way to make the calculation of the time of ﬂight of
the signal between the prover and veriﬁer tvp harder for the
P
V
Np ∈ {0, 1}k
Dp ∈ [Dmin, Dmax]k
Cp ← h(Np, Dp)
Delayed rapid
Cp
Nv ∈ {0, 1}k
Dv ∈ [Dmin, Dmax]k
Nv [0]
Np[0]⊕Nv [0]
...
Nv [k]
Np[k]⊕Nv [k]
EKpv (V,Np,Dp)
bit exchange
Decrypt message and
verify Cp = h(Np, Dp)
Figure 5: Distance bounding protocol with random
delay between messages.
attacker, is by adding a random delay between the messages
of the rapid message (rapid bit) exchange in the protocol.
In this case, a new protocol is needed to make sure that the
prover and veriﬁer can still compute the correct distance.
Such a protocol (Figure 5) will be discussed at the end of
this section.
If the prover and veriﬁer add a random delay before send-
ing each bit of the rapid bit exchange, the equations describ-
ing the arrival time of the three subsequent messages will be
modiﬁed to include the random delay for both the prover
and the veriﬁer:
T0 = t0 + tvm
T1 = t0 + tvp + δp + Ωp + tpm
T2 = t0 + 2tvp + δp + Ωp + δv + Ωv + tvm
(10)
(11)
(12)
where Ωp is a random delay added by the prover P and Ωv
is a random delay added by the veriﬁer V . The calculation
of the time of ﬂight now becomes:
tvp =
(T2 − T0) − δp − Ωp − δv − Ωv
2
(13)
If the random delays Ωp and Ωv are set to 0 this equation is
the same as equation (4).
Equations (10) – (12) will vary depending on the attackers
knowledge about his own position relative to the prover and
veriﬁer, e.g., if the attacker knows his distance to the prover
and veriﬁer he will not need the third message to calculate
tvp. We have identiﬁed eight diﬀerent scenarios, shown in
Figure 4, that represent diﬀerent attacker knowledge. In the
rest of this paper we will refer to these scenarios by the letter
used in Figure 4, e.g., the scenario where the attacker has
no knowledge of the distance to either P or V is referred to
as scenario (a). Table 1 contains the equations for message
arrival time in all eight scenarios.
The equations describing the message arrival times are
derived as described in Section 3.2. The ’-’ in the third
column of Table 1 means that no equation is needed for T2 in
these scenarios because the ﬁrst two equations are suﬃcient
for the attacker to compute the distance between the prover
and veriﬁer.
If we look at the equations for tvp in scenario (b), (c) and
/
/
o
o
/
/
o
o
/
/
/
/
M
1
3
2
P
V
M
dmp
dmv
1
3
2
P
V
P
1
3
2
M
V
M
P
1
3
2
V
(a) No knowledge
(b) Known distance to V and P
(c) Close to V
(d) Close to P
1
3
2
P
V
M
dmv
dmp
M
1
3
2
P
V
P
3
2
1
M
P
V
M
3
2
1
V
(e) Known distance to V
(f) Known distance to P
(g) Directly behind V
(h) Directly behind P
Figure 4: Scenarios represent the attacker’s knowledge about his position relative to V and P . In all eight
scenarios the veriﬁer V and the prover P are executing a distance bounding protocol and the attacker M is
able to listen to the traﬃc between V and P .
Reception time of
the ﬁrst message
Reception time of
the second message
Reception time of
the third message
T0
T1
T2