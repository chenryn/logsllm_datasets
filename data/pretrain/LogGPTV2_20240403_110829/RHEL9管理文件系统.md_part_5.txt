这部分列出了 Red Hat Enterprise Linux 支持 NFS 版本及其特性。
目前，Red Hat Enterprise Linux 9 支持以下 NFS 主版本：
::: itemizedlist
-   与 NFSv2 相比，NFS 版本
    3（NFSv3）支持安全异步写入操作，并在处理错误时更可靠。它也支持 64
    位文件大小和偏移，允许客户端访问超过 2 GB 文件数据。
-   NFS 版本 4(NFSv4)通过防火墙，并在 Internet 上工作，不再需要
    `rpcbind`{.literal}
    服务，支持访问控制列表(ACL)，并且使用有状态操作。
:::
红帽不再支持 NFS 版本 2(NFSv2)。
### []{#mounting-nfs-shares_managing-file-systems.html#_default_nfs_version}默认 NFS 版本
Red Hat Enterprise Linux 9 中的默认 NFS 版本为 4.2。NFS
客户端默认试图使用 NFSv4.2 挂载，并在服务器不支持 NFSv4.2 时回退到
NFSv4.1。之后挂载会返回 NFSv4.0，然后回退到 NFSv3。
### []{#mounting-nfs-shares_managing-file-systems.html#_features_of_minor_nfs_versions}次要 NFS 版本的特性
以下是 Red Hat Enterprise Linux 9 中的 NFSv4.2 的功能：
::: variablelist
[服务器端复制]{.term}
:   使用 `copy_file_range()`{.literal} 系统调用，可以使 NFS
    客户端高效地复制数据，而不浪费网络资源。
[稀疏文件]{.term}
:   使文件有一个或者多个
    [*洞（hole）*]{.emphasis}，它们是不分配或者未初始化的数据块，只由 0
    组成。NFSv4.2 中的 `lseek()`{.literal} 操作支持
    `seek_hole()`{.literal} 和
    `seek_data()`{.literal}，这使得应用程序能够在稀疏文件中映射漏洞的位置。
[保留空间]{.term}
:   允许存储服务器保留空闲空间，这会防止服务器耗尽空间。NFSv4.2 支持
    `allocate()`{.literal} 操作来保留空间，支持 `deallocate()`{.literal}
    操作来释放空间，支持 `fallocate()`{.literal}
    操作来预分配和释放文件中的空间。
[标记的 NFS]{.term}
:   强制实施数据访问权限，并为 NFS
    文件系统上的各个文件在客户端和服务器之间启用 SELinux 标签。
[布局增强]{.term}
:   提供 `layoutstats()`{.literal} 操作，它可让一些并行
    NFS(pNFS)服务器收集更好的性能统计数据。
:::
以下是 NFSv4.1 的功能：
::: itemizedlist
-   增强性能和网络安全，同时包括对 pNFS 的客户端支持。
-   对于回调不再需要单独的 TCP 连接，回调允许 NFS
    服务器在无法联系客户端的情况下授予委托：例如，当 NAT
    或防火墙干扰时。
-   只提供一次语义（除重启操作外），防止出现先前的问题，即如果回复丢失，且操作被发送了两次，则某些操作有时会返回不准确的结果。
:::
:::
::: section
::: titlepage
# []{#mounting-nfs-shares_managing-file-systems.html#services-required-by-nfs_mounting-nfs-shares}NFS 所需的服务 {.title}
:::
这部分列出了运行 NFS 服务器或挂载 NFS 共享所需的系统服务。Red Hat
Enterprise Linux 会自动启动这些服务。
Red Hat Enterprise Linux 使用内核级支持和服务流程组合提供 NFS
文件共享。所有 NFS
版本都依赖于客户端和服务器间的远程过程调用（RPC）。要共享或者挂载 NFS
文件系统，下列服务根据所使用的 NFS 版本而定：
::: variablelist
[`nfsd`{.literal}]{.term}
:   为共享 NFS 文件系统请求的 NFS 服务器内核模块。
[`rpcbind`{.literal}]{.term}
:   接受本地 RPC
    服务的端口保留。这些端口随后可用（或公布出去），这样相应的远程 RPC
    服务可以访问它们。`rpcbind`{.literal} 服务响应对 RPC
    服务的请求，并建立到请求的 RPC 服务的连接。这不能与 NFSv4 一起使用。
[`rpc.mountd`{.literal}]{.term}
:   NFS 服务器使用这个进程来处理来自 NFSv3 客户端的 `MOUNT`{.literal}
    请求。它检查所请求的 NFS 共享是否目前由 NFS
    服务器导出，并且允许客户端访问它。如果允许挂载请求，`nfs-mountd`{.literal}
    服务会回复 Success 状态，并将此 NFS 共享的文件句柄返回给 NFS
    客户端。
[`rpc.nfsd`{.literal}]{.term}
:   这个过程启用了要定义的服务器公告的显式 NFS 版本和协议。它与 Linux
    内核一起使用，来满足 NFS 客户端的动态需求，例如，在每次连接 NFS
    客户端时提供服务器线程。这个进程对应于 `nfs-server`{.literal} 服务。
[`lockd`{.literal}]{.term}
:   这是一个在客户端和服务器中运行的内核线程。它实现网络锁管理器(NLM)协议，它允许
    NFSv3 客户端锁住服务器上的文件。每当运行 NFS 服务器以及挂载 NFS
    文件系统时，它会自动启动。
[`rpc.statd`{.literal}]{.term}
:   这个进程实现网络状态监控器(NSM)RPC 协议，该协议可在 NFS
    服务器没有正常关机而重启时通知 NFS 客户端。`rpc-statd`{.literal}
    服务由 `nfs-server`{.literal} 服务自动启动，不需要用户配置。这不能与
    NFSv4 一起使用。
[`rpc.rquotad`{.literal}]{.term}
:   这个过程为远程用户提供用户配额信息。启动 `nfs-server`{.literal}
    时，用户也必须启动 `quota-rpc`{.literal} 软件包提供的
    `rpc-rquotad`{.literal} 服务。
[`rpc.idmapd`{.literal}]{.term}
:   此进程为 NFSv4 客户端和服务器提供上行调用，这些调用在线上 NFSv4
    名称（`user@domain`{.literal}形式的字符串）和本地 UID 和 GID
    之间进行映射。要使 `idmapd`{.literal} 与 NFSv4 正常工作，必须配置
    `/etc/idmapd.conf`{.literal} 文件。至少应指定 `Domain`{.literal}
    参数，该参数定义 NFSv4 映射域。如果 NFSv4 映射域与 DNS
    域名相同，可以跳过这个参数。客户端和服务器必须同意 NFSv4
    映射域才能使 ID 映射正常工作。
    只有 NFSv4 服务器使用 `rpc.idmapd`{.literal}，它由
    `nfs-idmapd`{.literal} 服务启动。NFSv4 客户端使用基于密钥环的
    `nfsidmap`{.literal} 工具，内核按需调用它来执行 ID 映射。如果
    `nfsidmap`{.literal} 有问题，客户端将退回使用
    `rpc.idmapd`{.literal}。
:::
### []{#mounting-nfs-shares_managing-file-systems.html#_the_rpc_services_with_nfsv4}NFSv4 的 RPC 服务
挂载和锁定协议已合并到 NFSv4 协议中。该服务器还会监听已知的 TCP 端口
2049。因此，NFSv4 不需要与 `rpcbind`{.literal}、`lockd`{.literal} 和
`rpc-statd`{.literal} 服务进行交互。NFS 服务器上仍然需要
`nfs-mountd`{.literal} 服务来设置导出，但不涉及任何线上操作。
::: itemizedlist
**其他资源**
-   [仅配置无 `rpcbind`{.literal} 的 NFSv4
    服务器](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/managing_file_systems/index#nfs-and-rpcbind_exporting-nfs-shares){.link}
    。
:::
:::
::: section
::: titlepage
# []{#mounting-nfs-shares_managing-file-systems.html#nfs-host-name-formats_mounting-nfs-shares}NFS 主机名格式 {.title}
:::
这部分论述了在挂载或导出 NFS 共享时用来指定主机的不同格式。
您可以使用以下格式指定主机：
::: variablelist
[单台机器]{.term}
:   以下任意一种：
    ::: itemizedlist
    -   完全限定域名（可由服务器解析）
    -   主机名（可由服务器解析）
    -   IP 地址。
    :::
:::
::: variablelist
[IP 网络]{.term}
:   以下格式之一有效：
    ::: itemizedlist
    -   [*[`a.b.c.d/z`{.literal}]{.replaceable}*]{.emphasis} ，其中
        [*[`a.b.c.d`{.literal}]{.replaceable}*]{.emphasis}
        是网络，[*[`z`{.literal}]{.replaceable}*]{.emphasis}
        是子网掩码中的位数，例如 `192.168.0.0/24`{.literal}。
    -   [*[`a.b.c.d/netmask`{.literal}]{.replaceable}*]{.emphasis}，其中
        [*[`a.b.c.d`{.literal}]{.replaceable}*]{.emphasis}
        是网络，[*[`netmask`{.literal}]{.replaceable}*]{.emphasis}
        是子网掩码；例如 `192.168.100.8/255.255.255.0`{.literal}。
    :::
[Netgroups]{.term}
:   `@group-name`{.literal} 格式，其中
    [*[`group-name`{.literal}]{.replaceable}*]{.emphasis} 是 NIS
    netgroup 名称。
:::
:::
::: section
::: titlepage
# []{#mounting-nfs-shares_managing-file-systems.html#installing-nfs_mounting-nfs-shares}安装 NFS {.title}
:::
这个过程安装挂载或导出 NFS 共享所需的所有软件包。
::: itemizedlist
**流程**
-   安装 `nfs-utils`{.literal} 软件包：
    ``` screen
    # dnf install nfs-utils
    ```
:::
:::
::: section
::: titlepage
# []{#mounting-nfs-shares_managing-file-systems.html#discovering-nfs-exports_mounting-nfs-shares}发现 NFS 导出 {.title}
:::
这个步骤发现给定 NFSv3 或者 NFSv4 服务器导出哪个文件系统。
::: itemizedlist
**流程**
-   对于支持 NFSv3 的任何服务器，请使用 `showmount`{.literal} 工具：
    ``` screen
    $ showmount --exports my-server
    Export list for my-server
    /exports/foo
    /exports/bar
    ```
-   对于支持 NFSv4 的任何服务器，挂载根目录并查找：
    ``` screen
    # mount my-server:/ /mnt/
    # ls /mnt/
    exports
    # ls /mnt/exports/
    foo
    bar
    ```
:::
在同时支持 NFSv4 和 NFSv3
的服务器上，这两种方法都可以工作，并给出同样的结果。
::: itemizedlist
**其他资源**
-   `showmount(8)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#mounting-nfs-shares_managing-file-systems.html#mounting-an-nfs-share-with-mount_mounting-nfs-shares}使用 mount 挂载一个 NFS 共享 {.title}
:::
这个流程使用 `mount`{.literal} 工具挂载从服务器导出的 NFS 共享。
::: itemizedlist
**流程**
-   要挂载一个 NFS 共享，请使用以下命令：
    ``` screen
    # mount -t nfs -o options host:/remote/export /local/directory
    ```
    这个命令使用以下变量：
    ::: variablelist
    [[*[选项]{.replaceable}*]{.emphasis}]{.term}
    :   以逗号分隔的挂载选项列表。
    [[*[主机]{.replaceable}*]{.emphasis}]{.term}
    :   导出您要挂载的文件系统的服务器的主机名、IP
        地址或者完全限定域名。
    [[*[/remote/export]{.replaceable}*]{.emphasis}]{.term}
    :   从服务器导出的文件系统或目录，即您要挂载的目录。
    [[*[/local/directory]{.replaceable}*]{.emphasis}]{.term}
    :   挂载 [*[/remote/export]{.replaceable}*]{.emphasis}
        的客户端位置。
    :::
:::
::: itemizedlist
**其他资源**
-   [常用 NFS
    挂载选项](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/managing_file_systems/index#common-nfs-mount-options_mounting-nfs-shares){.link}
    。
-   [NFS
    主机名格式](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/managing_file_systems/index#nfs-host-name-formats_mounting-nfs-shares){.link}
    。
-   [使用 mount
    挂载文件系统](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/managing_file_systems/index#mounting-a-file-system-with-mount_assembly_mounting-file-systems){.link}
    。
-   `mount(8)`{.literal} 手册页
-   `exports(5)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#mounting-nfs-shares_managing-file-systems.html#common-nfs-mount-options_mounting-nfs-shares}常用 NFS 挂载选项 {.title}
:::
这部分列出了在挂载 NFS
共享时常用的选项。这些选项可用于手动挂载命令、`/etc/fstab`{.literal}
设置和 `autofs`{.literal}。
::: variablelist
[`lookupcache=mode`{.literal}]{.term}
:   指定内核应该如何管理给定挂载点的目录条目缓存。[*[mode]{.replaceable}*]{.emphasis}
    的有效参数为 `all`{.literal}、`none`{.literal} 或
    `positive`{.literal}。
[`nfsvers=version`{.literal}]{.term}
:   指定要使用 NFS 协议的哪个版本，其中
    [*[version]{.replaceable}*]{.emphasis} 为
    `3`{.literal}、`4`{.literal}、`4.0`{.literal}、`4.1`{.literal} 或
    `4.2`{.literal}。这对于运行多个 NFS
    服务器的主机很有用，或者禁止使用较低版本重试挂载。如果没有指定版本，NFS
    将使用内核和 `mount`{.literal} 工具支持的最高版本。
    选项 `vers`{.literal} 等同于 `nfsvers`{.literal}
    ，出于兼容性的原因包含在此发行版本中。
[`noacl`{.literal}]{.term}
:   关闭所有 ACL 处理。当与旧版本的 Red Hat Enterprise Linux、Red Hat
    Linux 或 Solaris 交互时，可能需要此功能，因为最新的 ACL
    技术与较旧的系统不兼容。
[`nolock`{.literal}]{.term}
:   禁用文件锁定。当连接到非常旧的 NFS 服务器时，有时需要这个设置。
[`noexec`{.literal}]{.term}
:   防止在挂载的文件系统中执行二进制文件。这在系统挂载不兼容二进制文件的非
    Linux 文件系统时有用。
[`nosuid`{.literal}]{.term}
:   禁用 `set-user-identifier`{.literal} 和
    `set-group-identifier`{.literal} 位。这可防止远程用户通过运行
    `setuid`{.literal} 程序获得更高的特权。
[`port=num`{.literal}]{.term}
:   指定 NFS 服务器端口的数字值。如果 [*[num]{.replaceable}*]{.emphasis}
    为 `0`{.literal}（默认值），则 `mount`{.literal} 查询远程主机上
    `rpcbind`{.literal} 服务，以获取要使用的端口号。如果远程主机上的 NFS
    服务没有注册其 `rpcbind`{.literal} 服务，则使用标准的 NFS 端口号 TCP
    2049。
[`rsize=num`{.literal} 和 `wsize=num`{.literal}]{.term}
:   这些选项设定单一 NFS 读写操作传输的最大字节数。
    `rsize`{.literal} 和 `wsize`{.literal}
    没有固定的默认值。默认情况下，NFS
    使用服务器和客户端都支持的最大的可能值。在 Red Hat Enterprise Linux
    9 中，客户端和服务器最大为 1,048,576 字节。详情请查看 [rsize 和
    wsize
    的默认和最大值是什么？](https://access.redhat.com/solutions/753853){.link}Kbase
    文章。