### Table 8: DNSSEC, DMARC, and SPF Status of the Alexa and Adobe Top Million Hosts

- **DNSSEC**: 0.46%
- **DMARC**: 16.06%
- **SPF**: 85.02%

#### SPF Implementation
In Table 7 and the SPF column in Table 4, we indicate whether SPF is implemented with a "✓" and whether the policy is strict with a "✓". A strict SPF policy is defined as one that ends in "-all", which instructs the receiver to reject mail not from the correct origin. Among the 22 mail providers, 15 have implemented SPF, but only 5 have a strict policy. SPF usage is high among most popular web services, except for news sites, and is often strict.

#### DNS Lookup and Enforcement
The DNS Lookup columns in Table 7 show a "✓" if the provider performed the necessary DNS query to look up the SPF or DKIM record. The Enforcement columns show a "✓" if invalid SPF or DKIM resulted in the message being placed in the user's spam folder, and a "✗" indicates that the receiving MTA rejected the message at the SMTP layer. Almost all providers performed the SPF DNS query, but only 10 took action, half at the SMTP layer. Eleven providers performed the DKIM selector lookup, but only 3 marked the message as spam. Every DKIM message with an invalid signature was allowed to complete SMTP delivery to the MTA.

### 5.5 DNSSEC, DMARC, and ADSP

- **DNSSEC**: Only comcast.net among the top mail providers supports DNSSEC. Approximately 3% of the Alexa and Adobe top million hosts have DNSSEC, but 13% of Alexa and 23% of Adobe hosts with DNSSEC fail verification. More Adobe users have invalid DNSSEC configurations than valid ones, likely due to popular providers in the Adobe list having improper DNSSEC configuration.
  
- **DMARC**: In the Implementation column of Table 7 and in Table 4, we display a "✓" if DMARC is implemented and a "✓" if it has a strict policy. A strict DMARC policy is defined as one that sets "p=reject" to reject invalid messages. DMARC is implemented by about half of the web services and top mail providers, including all banks and all but one commerce site. About half of the web services with DMARC have a strict policy, primarily banks or social sites. Only 2 mail providers had a strict policy. When receiving mail, 9 of the top providers performed a DMARC lookup, and 7 took action. Two providers filtered messages with a strict DMARC policy without performing DNS lookups, likely because they acted on the DKIM signature failing before the DMARC check. The only provider to query for an ADSP record was 163.com.

### 6. RELATED WORK

Two prior industry studies have reported on the use of TLS by MTAs. Facebook and Google released reports on observed SMTP TLS deployment. Their results provide a valuable picture of server behavior. Our work provides a more comprehensive view of TLS deployment, covering all parts of the message path, and also examines DKIM, SPF, DMARC, and DNSSEC, which provide mail authenticity and integrity.

#### 6.1 Facebook Study
In 2014, Facebook reported TLS use when sending notification emails to their users for a day. They found that 76% of incoming MTAs for unique MX records offered STARTTLS, and about half of the certificates passed validation. 58% of Facebook’s outgoing notification email used TLS. We found that 54% of our unique MX records from hosts in the Adobe list allow TLS for receiving mail, lower than Facebook’s findings. However, 52% of users in 2014 and 89% in 2015 could receive TLS messages when ranked by the Adobe list. We observed much higher certificate validation rates: 75.85% in 2014 and 79.14% in 2015.

#### 6.2 Google Study
Google offers ongoing STARTTLS data as part of the Google Transparency Report. Google reported that 46% of outbound and 40% of inbound messages used TLS at the time of our second measurement (February 2015). Durumeric et al. [3] conducted a similar study, evaluating STARTTLS, DKIM, and SPF deployment as seen from Google. They reported TLS use for 80% of incoming connections, while we estimated 89% of providers in the Adobe list, weighted by the number of users. Durumeric et al. reported that 74% of incoming mail at GMail did not have a DMARC policy, while we found that 32% of providers in the Adobe list did not publish a DMARC policy. The difference is significant and likely due to the different mix of providers in the two measurement sets. They also reported that 92% of mail arriving at Google had an SPF record for the sender, while we found that 85% of providers in the Adobe list had SPF records.

### 7. DISCUSSION

#### 7.1 Passive Eavesdropping Attacks
A passive attacker can observe network traffic but cannot block or modify it. To protect against such an attacker, it is sufficient to establish a shared secret between sender and receiver. We consider best-case and worst-case scenarios.

- **Best Case**: All 22 select providers offer secure submission and retrieval, and 17 use TLS on all means of submission and delivery. Few providers use TLS internally, but we assume internal hops are secured. On the MTA–MTA link, only 28% of the 484 pairs of connections between the 22 select providers would use TLS, amounting to about 50% of message traffic, weighted by the number of users. Extending this to messages between select providers and all providers, the proportion of TLS-protected messages is 74%.

- **Worst Case**: Assuming the least secure submission and delivery mechanisms, the number of messages transferred over secured links does not decrease. If internal links are not assumed to be secure, then only four providers (aol.com, hotmail.com, web.de, and qq.com) use TLS on all internal hops, covering about 34% of users. If we consider all internal hops to be no less secure than the incoming MTA, then 24% of messages sent from select providers to all providers would travel along a TLS-secured mail path.

Thus, anywhere from 24% to 74% of messages from a select provider to a provider on the full list would be protected against a passive attacker along the entire message path.

#### 7.2 Peer Forgery Attacks
Our results show that some providers honor a sender’s strict “-all” SPF policy, and some providers and email generators have a fail-closed policy. With some exceptions, it is generally possible for a peer attacker to impersonate an email generator or provider to another provider. Publishing a strict SPF policy can ensure that some providers will not accept forged email from a domain.

DKIM use and enforcement are less widespread. Of the top five providers, only GMail and Yahoo! used DKIM, and only Hotmail marked a message with an invalid DKIM signature as spam. Publishing a strict “p=reject” DMARC policy results in an invalid message being rejected. Only Yahoo! and AOL have such a strict policy, so we can confidently say that impersonating these two senders to Hotmail, GMail, and Yahoo!, as well as a few other providers, is not possible.

#### 7.3 Active Eavesdropping Attacks
An active attacker has full man-in-the-middle capability. To protect against such an attack requires proper certificate checking. Unfortunately, there is no certificate checking on the submission and delivery path except when using a Web mail interface, and no certificate checking at all on the MTA–MTA hop. Even a pair of users accessing mail exclusively via a Web browser would still be vulnerable to an active attacker on the MTA–MTA hop. BGP and DNS hijacking attacks can redirect traffic to an attacker during a critical period. While DNSSEC is available, only comcast.net among the top 10 providers has a DNSSEC signed MX record, but the comcast.net incoming MTA did not support TLS.

#### 7.4 Active Tampering Attacks
The only defense against an active attacker is DKIM with DNSSEC and a strict DMARC policy (or a bilateral agreement to verify DKIM signatures). Only one provider, Comcast, supports DNSSEC. Of the select providers, 14 performed some sort of verification, but only 5 enforced the policy. Given the low rates of DNSSEC adoption, the large relative number of invalid DNSSEC records, and unenforced SPF and DMARC policies, we conclude that active attacks on message integrity will be unimpeded.

#### 7.5 Recommendations

1. **Use TLS**: TLS support in SMTP, IMAP, and POP3 is stable and mature. All but one of the 22 providers support TLS for SMTP mail submission; enabling TLS support at the MTA is the next step.
2. **Fix Certificates**: In the select provider set, 6 of the 21 SMTP MSAs and 3 of the 10 MTAs supporting TLS provided certificates with a name that did not match the DNS name. This should be fixed.
3. **Verify Certificates**: Certificates should be verified, including the host name, by all clients (MUAs and outgoing MTAs). Enabling host name verification will break over half of all message paths. An incentive, such as delayed mail delivery, may compel mail server administrators to deploy TLS support and use matching certificates.
4. **Require TLS**: Many providers already require TLS use. Requiring TLS eliminates the risk posed by misconfigured MUAs. For MSAs and MDAs using STARTTLS, a way to configure the mail reader to require TLS should be provided.
5. **Certificate Pinning**: To protect against rogue CA attacks, providers should fix the set of each peer’s allowed certificates or CAs. This option may be limited to a few large providers.
6. **Use DKIM and DMARC**: Providers should verify sender identity and sign all outgoing mail. Providers should also publish a strict (“p=reject”) policy. Major providers may establish bilateral signing policies rather than relying on DMARC.
7. **Enforce SPF and DKIM Policy**: Receiving providers should reject mail from unauthorized senders or mail with a missing or invalid DKIM signature from senders with a “p=reject” policy.
8. **Use DNSSEC**: DNS records should be authenticated to protect against active attacks. DNSSEC is the preferred method, and most TLDs, including .com and .org, are signed.

#### 7.6 On Interoperability vs. Security
Security practitioners often face a choice between interoperability and security. Consider certificate verification, the subject of Recommendation 3. Postel’s Principle advocates transferring mail even if the receiving MTA’s certificate is invalid, but accepting an invalid certificate leaves the session vulnerable to a man-in-the-middle attack. Balancing interoperability and security requires weighing both on the same scale, which is notoriously difficult.

Let us consider Recommendation 3 in Game-Theoretic terms. We have two players, Sender and Receiver, representing the sending MTA and receiving MTA, respectively. Receiver has the option to install and maintain a valid certificate at some additional cost, or not. When Sender connects to Receiver, he has the option to verify the certificate (rejecting an invalid one) or to accept all certificates (valid or not). Let us call Receiver strategies “Good certificate” (G) and “Bad certificate” (B), and Sender strategies “Check certificate” (C) and “Accept certificate” (A). There are four possible outcomes:

- **GC**: Mail transferred, Receiver incurs cost C.
- **GA**: Mail transferred, Receiver incurs no cost.
- **BC**: Mail not transferred, both incur losses (LS and LR).
- **BA**: Mail transferred, Receiver incurs no cost, but both are vulnerable to a man-in-the-middle attack (VS and VR).

The payoff matrix for our game is:

| Receiver | Good cert (G) | Bad cert (B) |
|----------|---------------|--------------|
| Check cert (C) | (-C, 0) | (-LR, -LS) |
| Accept cert (A) | (-C - VR, -VS) | (0, 0) |

This matrix helps evaluate the trade-offs between interoperability and security.