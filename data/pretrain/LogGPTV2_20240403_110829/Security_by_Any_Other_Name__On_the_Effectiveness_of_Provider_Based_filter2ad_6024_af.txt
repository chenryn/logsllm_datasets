0.46%
16.06%
85.02%
Table 8: DNSSEC, DMARC and SPF status of the Alexa and Adobe top million hosts.
of Adobe users (Table 8). In the SPF Implementation column of
if SPF
Table 7, and the SPF column in Table 4, we display a
is implemented, and a
if the policy is strict. We deﬁne a strict
policy for SPF as ending in “-all”, which instructs the receiver to
reject mail not from the correct origin. 15 of the 22 mail providers
have SPF, but only 5 implement a strict policy. SPF use is high with
most popular web services, except news sites, and is often strict.
The DNS Lookup columns of Table 7 show a
if the provider
made the necessary DNS query to lookup the SPF or DKIM record.
The Enforcement columns shows a
if invalid SPF or DKIM re-
sulted in the message being placed in the users’s spam folder. A
indicates that the receiving MTA rejected the message at the
SMTP layer. Almost all providers performed the SPF DNS query,
but only 10 took action, half at the SMTP layer. 11 of the providers
performed the DKIM selector lookup, but only 3 marked the mes-
sage as spam. Every DKIM message with an invalid signature was
allowed to successfully complete SMTP delivery to the MTA.
5.5 DNSSEC, DMARC, and ADSP
Of the top mail providers only comcast.net supports DNSSEC.
About 3% of the Alexa and Adobe top million have DNSSEC, how-
ever 13% of Alexa and 23% of Adobe hosts with DNSSEC fail
veriﬁcation. We note that there are more Adobe users who have in-
valid DNSSEC that valid, which is caused by popular providers in
the Adobe list having improper DNSSEC conﬁguration.
For DMARC entries in the Implementation column of Table 7
if DMARC is implemented, and
and in Table 4, we display a
if implementing a strict policy. A DMARC policy is strict
a
if its policy is to reject invalid messages by setting “p=reject”.
DMARC is implemented by about half of the web services and top
mail providers, including all the banks, and all but 1 of the com-
merce sites. About half of the web services with DMARC have
a strict policy, most of which are banks or social sites. Only 2
mail providers had a strict policy. When receiving mail, 9 of the
top providers performed a DMARC lookup, and 7 took action. 2
providers ﬁltered messages with a strict DMARC policy without
doing the DNS lookups which we attribute to the provider taking
action on the DKIM signature failing before the DMARC check is
done. The only provider to query for an ADSP record was 163.com.
While SPF, DKIM, and DMARC are widely implemented, we
found that SPF offers the strongest authenticity protection and im-
pact on deliverability. We also note that email generated by the pa-
per submission system of this conference was sent to us by a MTA
that supports TLS, SPF and DMARC. (A competing conference
management system, easychair.org only supports TLS.)
6. RELATED WORK
Two prior industry studies have reported on the use of TLS by
MTAs. Facebook and Google released reports of observed SMTP
TLS deployment as seen by their servers. Their results provide a
faithful and valuable picture of server behavior from their vantage
point. In this section we compare their results to ours and found
agreement on common measurements. Our work provides a more
complete view of TLS deployment, covering all parts of the mes-
sage path. Of course, we also examined DKIM, SPF, DMARC, and
DNSSEC, which provide mail authenticity and integrity.
6.1 Facebook Study
In 2014 Facebook reported TLS use when sending notiﬁcation
emails to their users for a day [2]. They reported 76% of incom-
ing MTAs for unique MX records offered STARTTLS when sending
emails to their users, and about half of the certiﬁcates pass valida-
tion. 58% of Facebook’s outgoing notiﬁcation email used TLS.
We found 54% of our unique MX records from hosts in the
Adobe list allow TLS for receiving mail, which is lower than Face-
book’s ﬁndings. However we ﬁnd 52% of users in 2014, and in
89% 2015 can receive TLS messages when ranked by the Adobe
list. We also observed much higher certiﬁcate validation, 75.85%
in 2015 and 79.14% in 2015.
6.2 Google Study
Google offers STARTTLS data on an ongoing basis as part of
the Google Transparency Report.6 Google reports 46% of outbound
and 40% of inbound messages used TLS at the time of our second
measurement (February 2015). Note that the Google report mea-
sures number of messages transported using TLS on the MTA–
MTA link. The closest point of comparison is our estimate of the
number of providers weighted by their frequency in the Adoble list
(Sec. 5.3.4): 52% in March 2014 and 89% in February 2015.
More recently, Durumeric et al. [3] carried out a concurrent study
similar to ours, evaluating STARTLS, DKIM, and SPF deployment
as seen from Google. Their measurements were carried out in April
2015. During this period they reported TLS use for 80% of in-
coming connections, while we estimate that 89% of providers in
the Adobe list, weighted by number of users, as described above.
Durumeric et al. report that 74% of incoming mail at GMail does
not have a DMARC policy. We found that 32% of providers in the
Adobe list, weighted by frequency of occurrence, did not publish a
DMARC policy. The difference is signiﬁcant, and most likely due
to the different mix of providers in the two measurement sets. The
authors also report that 92% of mail arriving at Google had an SPF
record for the sender. We found that 85% of providers in the Adobe
list, weighted by frequency of occurrence, had SPF records.
In addition to reporting protocol use statistics, Durumeric et al.
ﬁnd evidence of TLS stripping attacks—man-in-the-middle attacks
preventing a TLS connection from being established, forcing the
mail transfer to take place in the clear. They report that up to 20% of
email received by Google’s incoming MTAs from certain countries
showed evidence of TLS stripping.
7. DISCUSSION
In this section we consider the implications of our results in the
presence of each of the three types of attacker we considered.
7.1 Passive Eavesdropping Attacks
A passive attacker can observe network trafﬁc but cannot block
or modify it. To protect against such an attacker, it is sufﬁcient to
establish a shared secret between sender and receiver. This is ef-
fectively what SSL without certiﬁcate checking enables, provided
other requirements of the protocol are met. We consider a best case
and a worst case scenario. By best case, we mean a scenario where
6https://www.google.com/transparencyreport/
459the most secure option is chosen, if possible. In particular, we as-
sume email is submitted and delivered using the most secure means,
and that internal links are secure. By worst case, we mean that the
least secure option is chosen: submission and delivery will use the
least secure means.
Best case. All of the 22 select providers we considered provide at
least one means of submitting and retrieving email over a secure
connection, and 17 of the 22 use TLS on all means of submission
and delivery. On the internal hops, we found that few providers
use TLS internally. Nonetheless, internal hops may be secured by
other means, so for the best case scenario, we assume that this is
the case. Thus far, then, user submission, delivery, and provider-
internal transport are secure. On the MTA–MTA link, however,
TLS is not as widely deployed. Only 135 (about 28%) of the 484
of the pairs of connections between the 22 select providers would
use TLS. That amounts to about 50% of the message trafﬁc, when
weighted by number of users. If we extend this to messages be-
tween select providers and all providers, the proportion of TLS-
protected messages 74%.
Worst case. For the worst-case scenario, we assume a user chooses
the least secure submission and delivery mechanism available at
each provider. In fact, the providers that allow insecure mail sub-
mission (Table 3) are the same ones that do not support TLS at
the outgoing MTA, and similarly for the delivery side. Thus, while
our worst case scenario increases the risk, the number of messages
transferred over secured links does not decrease.
If we do not assume that internal links are secure, then the only
protection against eavesdropping by a passive attacker is provided
by STARTTLS, then any internal hops not using TLS may be tar-
geted by an attack. Of the select providers, only four, aol.com,
hotmail.com, web.de, and qq.com, use TLS on all internal hops
in outgoing mail. These four together cover about 34% of the users
in the select provider set. If we consider all internal hops on the
receiving and delivery path to be no less secure than the incom-
ing MTA of a provider, then 24% of messages sent from select
providers to all providers would travel along a TLS-secured mail
path.
Thus, anywhere from 24% to 74% of messages from a select
provider to a provider on the full list would be protected against a
passive attacker along the entire message path. The former ﬁgure is
if we allow inﬁltration of internal links, but no additional exposure
introduced on the delivery, the latter, if the only exposure is on the
MTA–MTA hop. We consider this an overall success, in view of the
fact that it was achieved at no cost to the user.
7.2 Peer Forgery Attacks
Our results show that some providers will honor a sender’s strict
“-all” SPF policy, and some of the providers and email genera-
tors did have a fail-closed policy. With some exceptions, it is gen-
erally possible for a peer attacker to impersonate an email genera-
tor or provider to another provider. A domain owner publishing a
strict SPF policy can be assured that some providers will not accept
forged email from her domain.
DKIM use and enforcement is less widespread. Of the top ﬁve
providers, only GMail and Yahoo! used DKIM, and only Hotmail
marked a message with invalid DKIM signature as spam. However
publishing a strict “p=reject” DMARC policy resulted in an in-
valid message being rejected. Only Yahoo! and AOL have such a
strict policy, so we can only say with conﬁdence that impersonat-
ing those two senders to Hotmail, GMail and Yahoo!, as well as a
handful of other providers is not possible. A domain owner pub-
lishing a strict DMARC policy can be assured that at least the top
three as well as a few others will honor the policy.
7.3 Active Eavesdropping Attacks
An active attacker has full man-in-the-middle capability. To pro-
tect against such an attack requires proper certiﬁcate checking. Un-
fortunately, we found that there is no certiﬁcate checking on the
submission and delivery path except when using a Web mail inter-
face, and no certiﬁcate checking at all on the MTA–MTA hop. Even
a pair of users accessing mail exclusively via a Web browser would
still be vulnerable to an active attacker on the MTA–MTA hop.
A man-in-the-middle attack does not require physically cutting
into a link. BGP and DNS hijacking attacks would allow an attacker
to redirect trafﬁc to himself during a critical period. BGP security is
still in standardization [5]. While DNSSEC is available, of the top
10 providers, only comcast.net has a DNSSEC signed MX record.
(However the comcast.net incoming MTA did not support TLS.)
7.4 Active Tampering Attacks
As noted earlier, the only defense against an active attacker is
DKIM with DNSSEC and a strict DMARC policy (or a bilateral
agreement to verify DKIM signatures). Only one provider, Com-
cast supports DNSSEC. And of the select providers 14 performed
some sort of veriﬁcation, however only 5 actually enforced the pol-
icy. Given the low rates of DNSSEC adoption, the large relative
number of invalid DNSSEC records (Table 8), and unenforced SPF
and DMARC policies, we conclude that active attacks on message
integrity will be unimpeded.
7.5 Recommendations
Our ﬁndings show that the Internet mail system is partially vul-
nerable to passive eavesdropping attacks and peer forgery attacks,
and highly vulnerable to active attacks. Fortunately, as discussed
earlier, it is possible to protect against even an active network at-
tacker. The following recommendations summarize steps sufﬁcient
to achieve this level of security using currently-available protocols.
Recommendation 1: Use TLS. TLS support in SMTP, IMAP, and
POP3 is stable and mature. All but one of the 22 provider supports
TLS for SMTP mail submission; enabling TLS support at the MTA
is the next step.
Recommendation 2: Fix certiﬁcates. In the select provider set,
6 of the 21 SMTP MSAs and 3 of the 10 MTAs supporting TLS
provided certiﬁcates with a name that did not match the DNS name.
This should be ﬁxed.
Recommendation 3: Verify certiﬁcates. Certiﬁcates should be ver-
iﬁed, including the host name, by all clients (MUAs and outgoing
MTAs). Given the abysmally poor name matching, simply enabling
host name veriﬁcation will break over half of all message paths. An
incentive, in the form of delayed mail delivery, may be useful in
compelling mail server administrators to deploy TLS support and
use matching certiﬁcates.
Recommendation 4: Require TLS. Many providers of the 22 we
examined already require TLS use. Requiring TLS eliminates the
risk posed by misconﬁgured MUAs. For MSAs and MDAs using
STARTTLS, a way to conﬁgure the mail reader to require TLS
should be provided.
RFC 3207 suggests that outgoing mail servers record the fact that
a particular incoming MTA uses TLS and ensure that TLS use in
future sessions. While RFC 3207 suggests “generating a warning,”
we believe a stronger response, perhaps delaying mail or requiring
human operator intervention, may be appropriate. On the incoming
MTA side, the compatibility requirement articulated in RFC 3207
requires incoming servers to accept mail without TLS. While this
may be necessary in the general case, large providers should es-
tablish bilateral agreements regarding TLS use, and require that all
connections to a provider that supports TLS take place over TLS.
460Recommendation 5: Certiﬁcate pinning. To protect against rogue
CA attacks, the providers should ﬁx the set of each peer’s allowed
certiﬁcates or CAs. Given the overhead of maintaining such certiﬁ-
cate information, this option may be limited to a few large providers.
Recommendation 6: Use DKIM and DMARC. Providers should
verify sender identity and sign all outgoing mail. Providers should
also publish a strict (“p=reject”) policy. Major providers may
also establish bilateral signing policies rather than relying on DMARC.
Recommendation 7: Enforce SPF and DKIM policy. Receiv-
ing providers should reject mail from unauthorized sender or mail
with a missing or invalid DKIM signature from senders with a
“p=reject” policy.
Recommendation 8: Use DNSSEC. DNS records should be au-
thenticated to protect against active attacks. DNSSEC is the pre-
ferred method for doing so, and most TLDs, including .com and
.org, are signed.
7.6 On Interoperability vs. Security
Security practitioners are often faced with a choice between in-
teroperability and security. The case of email security is no dif-
ferent. Consider certiﬁcate veriﬁcation, the subject of Recommen-
dation 3. On the one hand, Postel’s Principle—be conservative in
what you send, be liberal in what you accept—advocates transfer-
ring mail even if the receiving MTA’s certiﬁcate is invalid. On the
other hand, accepting an invalid certiﬁcate leaves the session vul-
nerable to a man-in-the-middle attack. Making the right trade-off
requires weighing interoperability and security on the same scale,
something notoriously difﬁcult to do. With two parties involved,
the situation becomes even more complicated.
Let us consider Recommendation 3 in Game-Theoretic terms.
We have two players, Sender and Receiver, representing the send-
ing MTA and receiving MTA, respectively. Receiver has the option
to install and maintain a valid certiﬁcate at some additional cost,
or the option not to do so. When Sender connects to Receiver, he
has the option to verify the certiﬁcate (rejecting an invalid one) or
to accept all certiﬁcates (valid or not). Let us call Receiver strate-
gies “Good certiﬁcate” and “Bad certiﬁcate” denoted G and B, re-
spectively, and Sender strategies “Check certiﬁcate” and “Accept
certiﬁcate” denoted C and A, respectively. There are four possible
outcomes in our simple game. Three out of four outcomes (GC,
GA, and BA) result in mail being transferred and one (BC) does
not. The latter corresponds to the case where a sending MTA re-
jects an invalid certiﬁcate offered by a receiving MTA.
To evaluate the game, let the cost of maintaining a certiﬁcate be
C. This is the direct cost to Receiver of playing strategy G and is
borne entirely by Receiver. If mail cannot be transferred between
Sender and Receiver, both incur a loss, perhaps in the form of brand
damage, for failing to deliver or receive messages from each other.
Denote the loss to the Sender by LS and loss to the Receiver by
LR. Without loss of generality, let the utility of transmitting a mes-
sage be external (i.e., zero), so that the motivation for transferring a
message is to avoid the loss associating with not doing so. Finally,
let VS and VR be the expected loss, to Sender and Receiver, respec-
tively, associated with being vulnerable to a man-in-the-middle at-
tack. Note that the expectation is taken over the probability of an
attack taking place and the loss incurred from an attack. Alterna-
tively, we can consider VS and VR to be brand damage associated
with sending mail unencrypted between Sender and Receiver.
Putting these together, payoff matrix for our game is:
Receiver Good cert
Bad cert
Check cert
(−C, 0)
(−LR,−LS)
Sender
(−C − VR,−VS)