The new `ansible_ssh_common_args` lets me add a `ProxyCommand`  
argument to the `ssh` invocation for entire inventory groups, which  
simplifies use of an ssh jump host.
My understanding (from reading tickets) is that this was implemented  
to permit use of ProxyCommand: (1) without having to override the  
whole `ssh_args`, or alternatively (2) without needing to use the  
`.ssh/config` of the invoking user.
However, when using `ProxyCommand` this way, the control socket  
in the filesystem is keyed off the far hop (inner tunnel) of the jump,  
which means the near hop does _not_ use a persistent socket. If  
another host needs to be reached via the jump gate, an entirely  
new socket will be set up, even though we could reuse it for the  
inner portion (first hop) of the jump. If reaching 1000 remote hosts  
via a jump gate, we will make 1000 separate ssh invocations, each  
with its own control socket, and no re-use (it only reuses if same  
far-host is destination)
This could be optimized by using ControlPath to describe only the  
near hop, and then use _another_ ssh with ControlPath on the far  
side. I don't know if this is a real issue or not, but thought it was  
worth submitting a ticket for. I think it would involve making a  
jump-host scenario a "first class" connection property that was  
implemented in code that could then be "nested" and duplicated  
on the remote end (rather than just a string-append to ssh args).
If this is just totally crazy, by all means close ticket. I think it could  
help some scenarios though, it would avoid doing the first-half of the  
jump circuit 999 times in the case of 1000 jump targets on the far  
side. So it would have to do only 1001 total ssh setups, rather than  
2000, which could really be a big win...