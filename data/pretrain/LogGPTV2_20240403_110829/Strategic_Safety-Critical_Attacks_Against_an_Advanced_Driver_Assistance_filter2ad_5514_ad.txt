(66.7%)
0
1
(0.4%)
240
240
0
(0.0%)
641
(44.5%)
(0.0%)
(0.3%)
(100.0%)
1201
(83.4%)
Driver
Prevention*
1/1
0/0
0/0
0/0
0/0
0/0
1/1
5.03±1.22
2.77±0.10
1.33±0.17
1.39±0.10
1.47±0.26
2.77±0.06
2.43±1.29
* The number of hazards/accidents prevented when a human driver simulator is added in the simulation.
value selection. Note that the attacks without strategic value
corruption may be detected by Panda’s safety checks,
if
deployed on an actual vehicle. But Panda’s safety checks could
also be disabled by the attacker or bypassed if the attack is
launched after the safety checks (e.g., on the OBD II port).
Table V shows the results across different attack types, in-
cluding the number of hazards that are prevented by the driver.
For timely hazard mitigation, the driver reaction/mitigation
times should be shorter than the Time-to-Hazard (TTH) (See
average TTHs in Table V). Our experiments indicate that
without the driver reaction, the attacks without strategic value
corruption could achieve very high hazard and accident suc-
cess rates (almost 100% for all attack types; not shown in
the table due to space limits). However, when simulating the
human driver reaction, 83.3% of hazards are prevented for the
Acceleration attack, reducing 50% of collision events. Similar
hazard reductions are observed for the Deceleration (58.8%)
and Deceleration-Steering (70.8%) attacks.
Observation 4: Human alertness for timely intervention
is important in preventing hazards and accidents.
However, the driver reaction does not prevent Steering at-
tacks (zero hazards prevented for steering attacks in Table V),
and these attacks still achieve very high hazard and accident
success rates (e.g., 100% for Steering-Right and Acceleration-
Steering). This is because hazards happen in less than 1.63s,
which is much less than the average human driver reaction
time (2.5s), indicating that attacks targeting the steering angle
are the most difﬁcult to be mitigated by the driver. It should be
noted that the Steering-Left attacks achieve lower success in
causing hazards compared to Steering-Right attacks (77.9% vs.
100%) because the Ego vehicle is initialized to a lane closer
to the right guardrail while it travels on a left-curved road.
Observation 5: Steering is the most effective attack type
that cannot be easily halted by the human driver.
Although driver intervention reduces hazard and accident
rates, it may also introduce new hazards. For example, to avoid
a collision with the lead vehicle, the Ego vehicle may stop in
the middle of a lane causing a rear collision, or collide with
curb objects. Table V shows that up to 66.7% new hazards
happened after preventing attacks on the gas output.
After adding the strategic value corruption, even though
there is an overall 6.8% increase in hazard success rates
(76.6% to 83.4%), the total number of alerts generated by the
ADAS decreases to 4, and only less than 0.1% of the induced
hazards are prevented by the driver, even for the cases where
the average TTH is longer than the average driver reaction
time (2.5s) (e.g., Acceleration, Deceleration and Deceleration-
Steering attacks). This further illustrates the effectiveness of
the Context-Aware strategy for evading detection by the ADAS
and/or the human driver.
Observation 6: The strategic value corruption is ef-
fective in evading human driver detection and safety
checks of ADAS.
V. THREATS TO VALIDITY
Although our attack strategy is efﬁcient in ﬁnding potential
weaknesses in the ADAS control software, its robustness and
efﬁcacy might be affected by the quality of sensor data used
for context inference or by existing defense mechanisms (e.g.,
control invariant detection [53] or context-aware monitoring
[31]). Our simulations consider OpenPilot safety checks and
human driver interventions. But other safety and security
mechanisms that can be implemented in ﬁrmware or hardware
interface of the car (e.g., Panda’s safety checks, AEB, encryp-
tion, or intrusion detection) are not included in this study.
Further evaluation of the robustness and detectability of the
attacks are directions of future work.
VI. CONCLUSION
This paper presents a strategic Context-Aware attack that
targets control commands within an ADAS. This attack ﬁnds
the most critical times during a driving scenario to activate
attacks, as well as the attack durations, which can cause
hazards before a human driver or the ADAS safety mechanism
can correct the behavior. The proposed attack is efﬁcient since
large numbers of random fault injections are not needed to
guide the approach. Our experimental results and observations
show that steering is particularly vulnerable and that
the
existing warning system for forward collisions is insufﬁcient.
Our results also highlight the importance of human alertness
for timely intervention for preventing hazards and accidents,
and the importance of automated safety mechanisms that can
check the control actions issued by ADAS.
ACKNOWLEDGMENT
This work was partially supported by the Commonwealth of
Virginia under Grant CoVA CCI: C-Q122-WM-02 and by the
National Science Foundation (NSF) under Grant No. 1748737.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:28:45 UTC from IEEE Xplore.  Restrictions apply. 
785
REFERENCES
[1] “Autonomous driving starts
to hit mainstream as 3.5 million
[Online].
https://canalys-prod-public.s3.eu-west-1.amazonaws.com/
new cars had level 2 features
Available:
static/press_release/2021/CanalysAutomediaalertQ420L2WW.pdf
in q4 2020?” 2021.
[2] “SAE Levels of Driving Automation™ Reﬁned for Clarity and Interna-
tional Audience,” https://www.sae.org/blog/sae-j3016-update, 2021.
[3] A. H. M. Rubaiyat, Y. Qin, and H. Alemzadeh, “Experimental resilience
assessment of an open-source driving agent,” in 2018 IEEE 23rd Paciﬁc
rim international symposium on dependable computing (PRDC).
IEEE,
2018, pp. 54–63.
[4] S. S. Banerjee, S. Jha, J. Cyriac, Z. T. Kalbarczyk, and R. K. Iyer,
“Hands off the wheel in autonomous vehicles?: A systems perspective
on over a million miles of ﬁeld data,” in 2018 48th Annual IEEE/IFIP
International Conference on Dependable Systems and Networks (DSN).
IEEE, 2018, pp. 586–597.
[5] S. Jha, S. Banerjee, T. Tsai, S. K. Hari, M. B. Sullivan, Z. T.
Kalbarczyk, S. W. Keckler, and R. K. Iyer, “Ml-based fault injection
for autonomous vehicles: A case for bayesian fault injection,” in 2019
49th annual IEEE/IFIP international conference on dependable systems
and networks (DSN).
IEEE, 2019, pp. 112–124.
[6] S. Jha, S. Cui, S. Banerjee, J. Cyriac, T. Tsai, Z. Kalbarczyk, and
R. K. Iyer, “Ml-driven malware that targets av safety,” in 2020 50th
Annual IEEE/IFIP International Conference on Dependable Systems and
Networks (DSN).
IEEE, 2020, pp. 113–124.
[7] National Transportation Safety Board, “Collision Between Vehicle Con-
trolled by Developmental Automated Driving System and Pedestrian,
Tempe, Arizona, March 18, 2018 - Accident Report,” 2019, https:
//www.ntsb.gov/investigations/accidentreports/reports/har1903.pdf.
[8] T. Sato, J. Shen, N. Wang, Y. Jia, X. Lin, and Q. A. Chen, “Dirty road
can attack: Security of deep learning based automated lane centering
under {Physical-World} attack,” in 30th USENIX Security Symposium
(USENIX Security 21), 2021, pp. 3309–3326.
[9] K. Koscher, A. Czeskis, F. Roesner, S. Patel, T. Kohno, S. Checkoway,
D. McCoy, B. Kantor, D. Anderson, H. Shacham et al., “Experimental
security analysis of a modern automobile,” in 2010 IEEE symposium on
security and privacy.
IEEE, 2010, pp. 447–462.
[10] S. Checkoway, D. McCoy, B. Kantor, D. Anderson, H. Shacham,
S. Savage, K. Koscher, A. Czeskis, F. Roesner, T. Kohno et al.,
“Comprehensive experimental analyses of automotive attack surfaces.”
in USENIX Security Symposium, vol. 4, no. 447-462. San Francisco,
2011, p. 2021.
[11] K. Kim, J. S. Kim, S. Jeong, J.-H. Park, and H. K. Kim, “Cybersecurity
for autonomous vehicles: Review of attacks and defense,” Computers &
Security, vol. 103, p. 102150, 2021.
[12] C. Miller and C. Valasek, “A survey of remote automotive attack
surfaces,” black hat USA, vol. 2014, p. 94, 2014.
[Online]. Available:
“OpenPilot.”
[13] Comma.ai,
https://github.com/
commaai/openpilot
[14] K. McCord, Automotive Diagnostic Systems: Understanding OBD I and
OBD II. CarTech Inc, 2011.
[15] M. Quigley, K. Conley, B. Gerkey, J. Faust, T. Foote, J. Leibs,
R. Wheeler, A. Y. Ng et al., “ROS: an open-source Robot Operating
System,” in ICRA workshop on open source software, vol. 3, no. 3.2.
Kobe, Japan, 2009, p. 5.
[16] M. Aeberhard, T. Kühbeck, B. Seidl, M. Friedl, J. Thomas, and O. Sche-
ickl, “Automated driving with ros at bmw,” ROSCon 2015 Hamburg,
Germany, 2015.
[17] Comma.ai, “Cereal.” [Online]. Available: https://github.com/commaai/
cereal
[18] B. Dieber, B. Breiling, S. Taurer, S. Kacianka, S. Rass, and P. Schartner,
“Security for the robot operating system,” Robotics and Autonomous
Systems, vol. 98, pp. 192–203, 2017.
[19] K.-T. Cho and K. G. Shin, “Fingerprinting electronic control units
for vehicle intrusion detection,” in 25th USENIX Security Symposium
(USENIX Security 16), 2016, pp. 911–927.
[20] J. Zhou, P. Joshi, H. Zeng, and R. Li, “Btmonitor: Bit-time-based
intrusion detection and attacker identiﬁcation in controller area network,”
ACM Trans. Embed. Comput. Syst., vol. 18, pp. 117:1–117:23, 2020.
[21] C. Miller and C. Valasek, “Adventures in automotive networks and
control units,” Def Con, vol. 21, no. 260-264, pp. 15–31, 2013.
886
[22] H.-G. Wahl and F. Gauterin, “An iterative dynamic programming ap-
proach for the global optimal control of hybrid electric vehicles under
real-time constraints,” in 2013 IEEE Intelligent Vehicles Symposium (IV).
IEEE, 2013, pp. 592–597.
[23] Y. Luo, “Time constraints and fault tolerance in autonomous driving
systems,” Tech. rep, Tech. Rep., 2019.
[24] G. Li, S. K. S. Hari, M. Sullivan, T. Tsai, K. Pattabiraman, J. Emer, and
S. W. Keckler, “Understanding error propagation in deep learning neural
network (dnn) accelerators and applications,” in Proceedings of the
International Conference for High Performance Computing, Networking,
Storage and Analysis, 2017, pp. 1–12.
[25] J. Petit and S. E. Shladover, “Potential cyberattacks on automated vehi-
cles,” IEEE Transactions on Intelligent transportation systems, vol. 16,
no. 2, pp. 546–556, 2014.
[26] Y. Cao, C. Xiao, B. Cyr, Y. Zhou, W. Park, S. Rampazzi, Q. A.
Chen, K. Fu, and Z. M. Mao, “Adversarial sensor attack on lidar-based
perception in autonomous driving,” in Proceedings of the 2019 ACM
SIGSAC conference on computer and communications security, 2019,
pp. 2267–2281.
[27] S. Iqbal, A. Haque, and M. Zulkernine, “Towards a security architecture
for protecting connected vehicles from malware,” in 2019 IEEE 89th
Vehicular Technology Conference (VTC2019-Spring).
IEEE, 2019, pp.
1–5.
[28] A. Ding, P. Murthy, L. Garcia, P. Sun, M. Chan, and S. Zonouz,
“Mini-me, you complete me! data-driven drone security via dnn-based
approximate computing,” in 24th International Symposium on Research
in Attacks, Intrusions and Defenses, 2021, pp. 428–441.
[29] M. Moradi, B. J. Oakes, M. Saraoglu, A. Morozov, K. Janschek, and
J. Denil, “Exploring fault parameter space using reinforcement learning-
based fault injection,” in 2020 50th Annual IEEE/IFIP International
Conference on Dependable Systems and Networks Workshops (DSN-W).
IEEE, 2020, pp. 102–109.
[30] N. Leveson and J. Thomas, “An stpa primer,” Cambridge, MA, 2013.
[31] X. Zhou, B. Ahmed, J. H. Aylor, P. Asare, and H. Alemzadeh, “Data-
driven design of context-aware monitors for hazard prediction in artiﬁcial
pancreas systems,” in 2021 51st Annual IEEE/IFIP International Confer-
ence on Dependable Systems and Networks (DSN), 2021, pp. 484–496.
[32] A. Lima, F. Rocha, M. Völp, and P. Esteves-Veríssimo, “Towards
safe and secure autonomous and cooperative vehicle ecosystems,” in
Proceedings of the 2nd ACM Workshop on Cyber-Physical Systems
Security and Privacy, ser. CPS-SPC ’16. New York, NY, USA:
Association for Computing Machinery, 2016, p. 59–70.
[Online].
Available: https://doi.org/10.1145/2994487.2994489
[33] H. Schafer, E. Santana, A. Haden, and R. Biasini, “A commute in data:
The comma2k19 dataset,” 2018.
[34] “OpenPilot
-
[Online].
Available: https://blog.comma.ai/how-to-write-a-car-port-for-openpilot/
#background--safety-architecture
Architecture,”
Safety
2018.
[35] Comma.ai,
open
“Bringing
source
to
[Online].
https://comma-ai.medium.com/bringing-forward-collision-
our
Available:
warnings-to-our-open-source-self-driving-car-7545b6e398cd
forward
self-driving
collision
car,”
warnings
2019.
[36] "Comma.ai", “AEB: a Case Study Using comma.ai Dataset,” 2019.
[Online]. Available: https://comma-ai.medium.com/aeb-a-case-study-
using-comma-ai-dataset-2fc08a2397f4
[37] N. Leveson, Engineering a safer world: Systems thinking applied to
safety. MIT press, 2011.
[38] H. Alemzadeh, D. Chen, X. Li, T. Kesavadas, Z. T. Kalbarczyk, and
R. K. Iyer, “Targeted attacks on teleoperated surgical robots: Dynamic
model-based detection and mitigation,” in 2016 46th Annual IEEE/IFIP
International Conference on Dependable Systems and Networks (DSN).
IEEE, 2016, pp. 395–406.
[39] N. Gavin, K. David S., and G. Steve, “California commercial driver
handbook,” 2021. [Online]. Available: https://www.dmv.ca.gov/web/
eng_pdf/comlhdbk.pdf
[40] N. Neves, J. Antunes, M. Correia, P. Verissimo, and R. Neves, “Us-
ing attack injection to discover new vulnerabilities,” in International
Conference on Dependable Systems and Networks (DSN’06), 2006, pp.
457–466.
[41] G. Bishop, G. Welch et al., “An introduction to the kalman ﬁlter,” Proc
of SIGGRAPH, Course, vol. 8, no. 27599-23175, p. 41, 2001.
[42] S. Nie, L. Liu, and Y. Du, “Free-fall: Hacking tesla from wireless to
can bus,” Brieﬁng, Black Hat USA, vol. 25, pp. 1–16, 2017.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:28:45 UTC from IEEE Xplore.  Restrictions apply. 
[43] B. R. Payne, “Car hacking: Accessing and exploiting the can bus
protocol,” Journal of Cybersecurity Education, Research and Practice,
2019.
[44] A. Francillon, B. Danev, and S. Capkun, “Relay attacks on passive
keyless entry and start systems in modern cars,” in the Network and
Distributed System Security Symposium (NDSS), 2011.
[45] P. Tyagi and D. Dembla, “Investigating the security threats in vehicular
ad hoc networks (vanets): towards security engineering for safer on-
road transportation,” in 2014 International Conference on Advances in
Computing, Communications and Informatics (ICACCI), 2014.
[46] Z. Cai, A. Wang, W. Zhang, M. Gruffke, and H. Schweppe, “0-days
& mitigations: Roadways to exploit and secure connected bmw cars,”
Black Hat USA, 2019.
[Online]. Available:
https://github.com/
[47] Comma.ai,
“log.capnp.”
commaai/cereal/log.capnp
dbc ﬁle
“Can
[48] autopi,
//www.autopi.io/blog/the-meaning-of-dbc-ﬁle/
[49] commaai, “Opendbc.” [Online]. Available: https://github.com/commaai/
explained.”
[Online]. Available:
https:
opendbc
panda
[50] A. Dosovitskiy, G. Ros, F. Codevilla, A. Lopez, and V. Koltun,
“CARLA: An open urban driving simulator,” in Proceedings of the 1st
Annual Conference on Robot Learning, 2017, pp. 1–16.
[51] Comma.ai, “Panda.” [Online]. Available: https://github.com/commaai/
[52] J. G. Gaspar and D. V. McGehee, “Driver brake response to sudden
unintended acceleration while parking,” Transportation Research Inter-
disciplinary Perspectives, vol. 2, p. 100039, 2019.
[53] H. Choi, W.-C. Lee, Y. Aafer, F. Fei, Z. Tu, X. Zhang, D. Xu, and
X. Xinyan, “Detecting attacks against robotic vehicles: A control invari-
ant approach,” in Proceedings of the 2018 ACM SIGSAC Conference on
Computer and Communications Security. ACM, 2018, pp. 801–816.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:28:45 UTC from IEEE Xplore.  Restrictions apply. 
987