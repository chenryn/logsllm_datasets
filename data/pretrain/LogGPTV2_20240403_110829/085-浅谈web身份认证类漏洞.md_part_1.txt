浅谈web身份认证类漏洞
原创雪狼别动队 酒仙桥六号部队
2020-10-09原文
这是 酒仙桥六号部队 的第 85 篇文章。
全文共计4048个字，预计阅读时长13分钟。
前言
在渗透测试的刀光剑影中，web身份认证是我们绕不开的一个常见问
题，这一类问题其实就是我们经常说的逻辑问题，同时也是我们在
提交渗透测试报告或者挖SRC出现漏洞点比较多的漏洞类型，网上关
于身份认证的逻辑问题的文章其实很多，但也有一些不全面，或者
说对一些新出现的认证问题没有阐述，本文希望能够在前人的基础
上对身份认证类逻辑漏洞进行总结并以自己渗透测试和靶机等遇到
的各种认证可绕过问题进行补充达到帮助渗透测试人员少踩一些弯
路的作用。其中有一些常规的内容一笔带过。
登录框中的漏洞
1.暴力破解用户名和密码
这是我们在做渗透测试中经常遇到的漏洞类型，暴力破解用户名和
密 码 我 们 仅 需 要 将 burp 中 的 intruder 模 块 中 的 attack
type调整到Cluster bomb即可进行暴力破解。
2.用户名枚举、密码可爆破
这类问题也是我们在做渗透测试最喜欢的问题，可以枚举用户名，
并通过特定账号暴力破解密码。
遇到用户名枚举相信我们大多数人遇到这种问题常做的就是检查返
回 包 中 的 是 否 出 现 ： 用 户 名 不 正 确
等字眼或者通过其响应状态即响应码进行对比。
还有一种就是通过响应时间，这种类型经常是返回包中出现：用户
名 或 密 码 不 正 确
等字眼，这时我们也可以进行枚举用户。在我们将密码设置为很长
的一段之后（最好这样做），通过枚举用户时所产生的响应时间的
不同，达到枚举用户名的目的。
Response received 和 Response
completed可在columns中找到。
找到我们响应完成时间与其他用户名有很大差距的就是我们所枚举
出来的用户名，接着可以用此用户名暴力破解密码。
tips:防暴力破解的设计逻辑问题
（1）、当遇到封IP的情况
这是在暴力破解的时候经常会遇到的情况，许多人遇到这种情况会
跳过继续寻找下一个漏洞点，然而这个地方也是可以绕过的。
这边说三个可能会用到的方法：
X-Forwarded-For绕过
这边简单提一下XFF、XFH（凑字数）
X-Forwarded-
For：用于通过HTTP代理或负载平衡器识别连接到web服务器的客户
端的原始IP地址的事实上的标准报头。当客户端和服务器之间的通
信被截获时，服务器访问日志仅包含代理或负载平衡器的IP地址。
要查看客户端的原始IP地址，X-Forwarded-For请使用请求标头。
X-Forwarded-
Host报头是用于识别由客户机在所要求的原始主机一个事实上的标
准报头Host的HTTP请求报头。反向代理的主机名和端口（负载平衡
器，CDN）可能与处理请求的原始服务器不同，在这种情况下，X-
Forwarded-Host标头可用于确定最初使用的主机。
这种绕过方法最为简单，只需在请求包中增加XFF报头即可，并将其
也设置为一个intruder payload即可。
正确用户与需要暴力破解的用户交替出现（或者错误账号稍微多几
次）
这种情况的出现是可能是因为服务端只对失败次数进行了校验，当
登录成功之后失败次数清0.
生成用户名字典：baymax为已知密码的用户名，wil为需要破解的
用户名。
将burp的爆破模式调为：
生成的密码也要一一对应，比如以下这样（123456为正确用户名的
密码，其余的是wil需要爆破的密码）：
短时间请求次数太多封锁IP，但当出现以json格式的请求包的情况
可以这样绕过限制：
（2）、锁定账号
同一用户登录次数过多,将账户封锁一段时间，比如出现以下情况：
可通过建立用户名并确定一个很小的出现频率最高的密码字典，选
择的密码数量不得超过允许的登录尝试次数。例如，如果您确定限
制为3次尝试，则最多选择3个密码。自己有一次做渗透测试便是通
过这种方法拿到密码的。
3.SQL注入、XSS、CSRF
这个相信我也不需要多说，在登录框这边可能存在SQL注入、XSS和
CSRF的。
4.抓包把password字段修改成空值发送
这个比较少见，我也只是从其他人博客上见到过。
5.参数的FUZZ
1）任意后台地址，手动添加参数admin=1之后，发现返回了cooki
e，成功登陆。
2）普通用户时，可手动添加一些参数，说不定权限会提高。
6.信息泄露
这个基本上是老生常谈的问题，有时在源码中会泄露一些信息，也
有时在JS文件中找到令人惊喜的点。比如自己曾经碰到一个网站，
将密码加密算法ase加密信息写在了JS文件中，直接将整个密码字典
加密后爆破。更有甚者可以通过JS暴露的接口未授权访问。
二因素（2FA）身份认证中的漏洞
2FA又称为双因子认证、二因素，是指结合密码以及实物（信用卡、
手机、令牌或指纹等生物标志）两种条件对用户进行认证的方法，
他的优点就是比单纯的密码登录安全得多。就算密码泄露，只要手
机或其他实物等还在，账户就是安全的。不过也有缺点，费时且麻
烦，且账户恢复也是双因素认证最大的麻烦问题。
1.虚假的2FA验证漏洞
当我们使用账户密码登录、出现输入安全口令时，这个时候其实我
们已经“登录”进来了，只需要开启万能的F12大法（简言之便是绕
过客户端校验类型）便可绕过
2.有缺陷的2FA验证逻辑
当carlos用户完成初步的登陆时，但是服务器在校验输入安全口令
时存在设计上的逻辑错误。
出现安全口令的地方：
此时我们抓包发现，他在cookie中直接暴露了用户名，此时尝试将
其修改为wiener并发送到intruter：
对四位数安全口令进行爆破可尝试登录wiener。
如果登录成功，可越权其他用户。
3. 暴 力 破 解 2FA 验 证 码 或 者 利 用 已 公 开 的 漏 洞 （ 如 ： CVE-2019-
15617）
这是我在freebuf中看到的一篇文章（https://www.freebuf.co
m/vuls/219813.html ） ， 目 标 系 统 的 动 态 口 令 OTP (One Time
Password)出现验证机制不当，任何人都可以通过简单的暴力枚举
来绕过它。