2012-05-31 09:51:05,897 32287 INFO Location registered  
2012-05-31 09:51:05,897 32287 DEBUG exec_cmd: select * from pgq_node.create_node('replika', 'leaf', 'dst2_digoal_02', 'dst2_digoal_02', 'src_digoal_01', '1944', null)  
2012-05-31 09:51:05,900 32287 INFO Node "dst2_digoal_02" initialized for queue "replika" with type "leaf"  
2012-05-31 09:51:05,906 32287 INFO Done  
```  
启动worker进程  
```  
postgres@db5-> londiste3 -d /home/postgres/londiste3/dst2_digoal_02.ini worker  
```  
添加表  
```  
postgres@db5-> londiste3 /home/postgres/londiste3/dst2_digoal_02.ini add-table --dest-table=digoal_02.user_info1 --copy-condition="userid londiste3 /home/postgres/londiste3/dst2_digoal_02.ini add-table --dest-table=digoal_02.user_session1 --copy-condition="userid londiste3 /home/postgres/londiste3/dst2_digoal_02.ini tables  
Tables on node  
table_name              merge_state      table_attrs  
----------------------  ---------------  ----------------------------  
digoal_01.user_info     in-copy          {'copy_condition': 'userid londiste3 /home/postgres/londiste3/dst2_digoal_02.ini compare  
2012-05-31 09:55:43,611 32418 INFO Locking digoal_01.user_info  
2012-05-31 09:55:43,612 32418 INFO Syncing digoal_02.user_info1  
2012-05-31 09:55:47,121 32418 INFO Counting digoal_02.user_info1  
2012-05-31 09:55:48,259 32418 INFO srcdb: 200000 rows, checksum=545503592610  
2012-05-31 09:55:48,264 32418 INFO dstdb: 999 rows, checksum=19444530475  
2012-05-31 09:55:48,265 32418 WARNING digoal_02.user_info1: Results do not match!  
2012-05-31 09:55:48,266 32418 INFO Locking digoal_01.user_session  
2012-05-31 09:55:48,267 32418 INFO Syncing digoal_02.user_session1  
2012-05-31 09:55:50,773 32418 INFO Counting digoal_02.user_session1  
2012-05-31 09:55:51,556 32418 INFO srcdb: 200000 rows, checksum=455874670113  
2012-05-31 09:55:51,559 32418 INFO dstdb: 999 rows, checksum=-69913661777  
2012-05-31 09:55:51,559 32418 WARNING digoal_02.user_session1: Results do not match!  
```  
为了得到正确的compare,目前没有好的解决办法, 通过修改配置文件暂时使用, 不适用, 因为其他表可能没有或不是这个条件.  
以下是测试, 注意生产中不要这样使用. 非要这么用的话就写多个配置文件.  
```  
postgres@db5-> vi dst2_digoal_02.ini   
[londiste3]  
job_name = dst2_digoal_02  
db = host=172.16.3.33 port=1919 user=postgres dbname=digoal_02 password=postgres  
queue_name = replika  
logfile = /home/postgres/londiste3/log/dst2_digoal_02.log  
pidfile = /home/postgres/londiste3/pid/dst2_digoal_02.pid  
parallel_copies = 16  
compare_sql = select count(1) as cnt, sum(hashtext(t.*::text)) as chksum from only _TABLE_ t where userid londiste3 -r /home/postgres/londiste3/dst2_digoal_02.ini   
postgres@db5-> londiste3 /home/postgres/londiste3/dst2_digoal_02.ini compare  
2012-05-31 09:59:09,559 32498 INFO Locking digoal_01.user_info  
2012-05-31 09:59:09,560 32498 INFO Syncing digoal_02.user_info1  
2012-05-31 09:59:13,568 32498 INFO Counting digoal_02.user_info1  
2012-05-31 09:59:13,576 32498 INFO srcdb: 999 rows, checksum=19444530475  
2012-05-31 09:59:13,581 32498 INFO dstdb: 999 rows, checksum=19444530475  
2012-05-31 09:59:13,582 32498 INFO Locking digoal_01.user_session  
2012-05-31 09:59:13,583 32498 INFO Syncing digoal_02.user_session1  
2012-05-31 09:59:17,589 32498 INFO Counting digoal_02.user_session1  
2012-05-31 09:59:17,597 32498 INFO srcdb: 999 rows, checksum=-69913661777  
2012-05-31 09:59:17,601 32498 INFO dstdb: 999 rows, checksum=-69913661777  
```  
写多个配置文件的用法, compare用专用的配置文件.  
把dst2_digoal_02.ini恢复, 并reload.  
```  
postgres@db5-> cat dst2_digoal_02.ini   
[londiste3]  
job_name = dst2_digoal_02  
db = host=172.16.3.33 port=1919 user=postgres dbname=digoal_02 password=postgres  
queue_name = replika  
logfile = /home/postgres/londiste3/log/dst2_digoal_02.log  
pidfile = /home/postgres/londiste3/pid/dst2_digoal_02.pid  
parallel_copies = 16  
postgres@db5-> londiste3 -r /home/postgres/londiste3/dst2_digoal_02.ini   
```  
新建一个配置文件, 专用于比较  
```  
postgres@db5-> cat dst2_digoal_02_compare.ini   
[londiste3]  
job_name = dst2_digoal_02  
db = host=172.16.3.33 port=1919 user=postgres dbname=digoal_02 password=postgres  
queue_name = replika  
logfile = /home/postgres/londiste3/log/dst2_digoal_02.log  
pidfile = /home/postgres/londiste3/pid/dst2_digoal_02.pid  
parallel_copies = 16  
compare_sql = select count(1) as cnt, sum(hashtext(t.*::text)) as chksum from only _TABLE_ t where userid londiste3 /home/postgres/londiste3/dst2_digoal_02_compare.ini compare  
2012-05-31 10:03:55,834 32689 INFO Locking digoal_01.user_info  
2012-05-31 10:03:55,835 32689 INFO Syncing digoal_02.user_info1  
2012-05-31 10:03:58,339 32689 INFO Counting digoal_02.user_info1  
2012-05-31 10:03:58,346 32689 INFO srcdb: 999 rows, checksum=19444530475  
2012-05-31 10:03:58,351 32689 INFO dstdb: 999 rows, checksum=19444530475  
2012-05-31 10:03:58,353 32689 INFO Locking digoal_01.user_session  
2012-05-31 10:03:58,353 32689 INFO Syncing digoal_02.user_session1  
2012-05-31 10:04:01,355 32689 INFO Counting digoal_02.user_session1  
2012-05-31 10:04:01,363 32689 INFO srcdb: 999 rows, checksum=-69913661777  
2012-05-31 10:04:01,367 32689 INFO dstdb: 999 rows, checksum=-69913661777  
```  
七、测试添加字段  
把添加字段的SQL放到一个文件中执行. 目标库和主库的表名schema名一致的情况下, 可以正常的复制过去, 而不一致的情况下需要手工修复, 所以建议复制尽量一致.  
```  
postgres@db5-> vi add_column.sql  
begin;  
alter table digoal_01.user_info add column c1 int;  
alter table digoal_01.user_session add column c1 int;  
end;  
```  
使用provider的配置文件执行,   
```  
postgres@db5-> londiste3 /home/postgres/londiste3/src_digoal_01.ini execute ./add_column.sql   
2012-05-31 10:11:09,230 482 INFO Executing: add_column.sql  
2012-05-31 10:11:09,253 482 INFO Execute finished: add_column.sql  
```  
使用consumer执行会报错如下  
```  
postgres@db5-> londiste3 /home/postgres/londiste3/dst2_digoal_02.ini execute ./add_column.sql   
2012-05-31 10:14:52,014 584 ERROR Node is not root node: replika  
```  
主库src_digoal_01.log日志  
```  
2012-05-31 10:11:09,230 482 INFO Executing: add_column.sql  
2012-05-31 10:11:09,253 482 INFO Execute finished: add_column.sql  
```  
查看目标库1是否正常的添加了c1字段, 因为目标库1的schema和表名都和主库一致.  
```  
dst1_digoal_01.log  
2012-05-31 10:11:11,203 31872 INFO Executing: add_column.sql  
2012-05-31 10:11:11,224 31872 INFO Execute finished: add_column.sql  
pg92@db-172-16-3-33-> psql digoal_01 digoal_01  
psql (9.2beta1)  
Type "help" for help.  
digoal_01=> \d user_info   
             Table "digoal_01.user_info"  
   Column   |            Type             | Modifiers   
------------+-----------------------------+-----------  
 userid     | integer                     | not null  
 engname    | text                        |   
 cnname     | text                        |   
 occupation | text                        |   
 birthday   | date                        |   
 signname   | text                        |   
 email      | text                        |   
 qq         | numeric                     |   
 crt_time   | timestamp without time zone |   
 mod_time   | timestamp without time zone |   
 c1         | integer                     |   
Indexes:  
    "pk_user_info" PRIMARY KEY, btree (userid)  
Triggers:  
    _londiste_replika AFTER INSERT OR DELETE OR UPDATE ON user_info FOR EACH ROW EXECUTE PROCEDURE pgq.logutriga('replika', 'deny')  
    _londiste_replika_truncate AFTER TRUNCATE ON user_info FOR EACH STATEMENT EXECUTE PROCEDURE pgq.sqltriga('replika', 'deny')  
digoal_01=> \d user_session   
                         Table "digoal_01.user_session"  
     Column      |              Type              |          Modifiers             
-----------------+--------------------------------+------------------------------  
 userid          | integer                        | not null  
 logintime       | timestamp(0) without time zone |   
 login_count     | bigint                         | default 0  
 logouttime      | timestamp(0) without time zone |   
 online_interval | interval                       | default '00:00:00'::interval  
 c1              | integer                        |   
Indexes:  
    "pk_user_session" PRIMARY KEY, btree (userid)  
Triggers:  
    _londiste_replika AFTER INSERT OR DELETE OR UPDATE ON user_session FOR EACH ROW EXECUTE PROCEDURE pgq.logutriga('replika', 'deny')  
    _londiste_replika_truncate AFTER TRUNCATE ON user_session FOR EACH STATEMENT EXECUTE PROCEDURE pgq.sqltriga('replika', 'deny')  
```  
目标库2没有添加c1和c2字段, 所以需要手工执行. 因为目标库2的schema名和表名不一致, 报错如下.  
```  
2012-05-31 10:16:50,921 32303 INFO Executing: add_column.sql  
2012-05-31 10:16:50,928 32303 ERROR Job dst2_digoal_02 got error on connection 'db': schema "digoal_01" does not exist.   Query: alt  
er table digoal_01.user_info add column c1 int;  
Traceback (most recent call last):  
  File "/opt/skytools3.0.2/lib/python2.7/site-packages/skytools/scripting.py", line 565, in run_func_safely  
    return func()  
  File "/opt/skytools3.0.2/lib/python2.7/site-packages/pgq/cascade/consumer.py", line 199, in work  
    return Consumer.work(self)  
  File "/opt/skytools3.0.2/lib/python2.7/site-packages/pgq/consumer.py", line 257, in work  
    self._launch_process_batch(db, batch_id, ev_list)  