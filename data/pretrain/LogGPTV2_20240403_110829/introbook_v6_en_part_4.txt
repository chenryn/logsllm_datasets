thevaluecalculatedfromthedatastoredinseverallinesof
theoriginaltables.Togetherwithgrouping,aggregatefunc-
tionsareused.Forexample,let’sdisplaythetotalnumberof
examstaken,thenumberofstudentswhopassedtheexams,
andtheaveragescore:
test=# SELECT count(*), count(DISTINCT s_id),
avg(score)
FROM exams;
count | count | avg
-------+-------+--------------------
4 | 3 | 4.7500000000000000
(1 row)
Youcangetsimilarinformationbythecoursenumberusing
theGROUPBYclausethatprovidesgroupingkeys:
test=# SELECT c_no, count(*),
count(DISTINCT s_id), vg(score)
FROM exams
GROUP BY c_no;
c_no | count | count | avg 51
-------+-------+-------+--------------------
iv
CS301 | 2 | 2 | 5.0000000000000000
CS305 | 2 | 2 | 4.5000000000000000
(2 rows)
Forthefulllistofaggregatefunctions,seepostgrespro.com/
doc/functions-aggregate.html.
Inqueriesthatusegrouping,youmayneedtofiltertherows
basedontheaggregationresults.Youcandefinesuchcon-
ditionsintheHAVINGclause.WhiletheWHEREconditionsare
appliedbeforegrouping(andcanusethecolumnsoftheorig-
inaltables),theHAVINGconditionstakeeffectaftergrouping
(sotheycanalsousethecolumnsoftheresultingtable).
Let’sselectthenamesofstudentswhogotmorethanone
excellentscore(5),inanycourse:
test=# SELECT students.name
FROM students, exams
WHERE students.s_id = exams.s_id AND exams.score = 5
GROUP BY students.name
HAVING count(*) > 1;
name
------
Anna
(1 row)
Youcanfindmoredetailsindocumentation:postgrespro.ru/
doc/sql-select.html#SQL-GROUPBY.
ChangingandDeletingData
ThetabledataischangedusingtheUPDATEoperator,which
specifies new field values for rows defined by the WHERE
clause(likefortheSELECToperator).
52 Forexample,let’sincreasethenumberoflecturehoursfor
iv the“Databases”coursetwotimes:
test=# UPDATE courses
SET hours = hours * 2
WHERE c_no = 'CS301';
UPDATE 1
You can find more details in documentation: postgrespro.
com/doc/sql-update.html.
Similarly,theDELETEoperatordeletestherowsdefinedby
theWHEREclause:
test=# DELETE FROM exams WHERE score < 5;
DELETE 1
You can find more details in documentation: postgrespro.
com/doc/sql-delete.html.
Transactions
Let’sextendourdatabaseschemaalittlebitanddistribute
ourstudentsbetweengroups.Eachgroupmusthaveamoni-
tor:astudentofthesamegroupresponsibleforthestudents’
activities.Tocompletethistask,let’screateatableforthese
groups:
test=# CREATE TABLE groups(
g_no text PRIMARY KEY,
monitor integer NOT NULL REFERENCES students(s_id)
);
CREATE TABLE
HerewehaveappliedtheNOTNULLconstraint,whichforbids 53
usingundefinedvalues. iv
Nowweneedanothercolumninthestudentstable,which
wedidn’tthinkofinadvance:thegroupnumber.Luckily,we
canaddanewcolumnintothealreadyexistingtable:
test=# ALTER TABLE students
ADD g_no text REFERENCES groups(g_no);
ALTER TABLE
Using the psql command, you can always view which
columnsaredefinedinthetable:
test=# \d students
Table "public.students"
Column | Type | Modifiers
------------+---------+----------
s_id | integer | not null
name | text |
start_year | integer |
g_no | text |
...
You can also get the list of all tables available in the
database:
test=# \d
List of relations
Schema | Name | Type | Owner
--------+----------+-------+----------
public | courses | table | postgres
public | exams | table | postgres
public | groups | table | postgres
public | students | table | postgres
(4 rows)
54 Nowlet’screateagroup“A-101”andmoveallstudentsinto
iv thisgroup,makingAnnaitsmonitor.
Herewerunintoanissue.Ontheonehand,wecannotcre-
ateagroupwithoutamonitor.Ontheotherhand,howcan
weappointAnnathemonitorifsheisnotamemberofthe
groupyet? Itwouldmakeourdatalogicallyincorrectand
inconsistent.
Wehavecomeacrossasituationwhentwooperationsmust
beperformedsimultaneously,asnoneofthemmakesany
sensewithouttheother. Suchoperationsconstitutingan
indivisiblelogicalunitofworkarecalledatransaction.
Solet’sstartourtransaction:
test=# BEGIN;
BEGIN
Next,weneedtoaddanewgroup,togetherwithitsmonitor.
Sincewedon’trememberAnna’sstudentID,we’lluseaquery
rightinsidethecommandthataddsnewrows:
test=# INSERT INTO groups(g_no, monitor)
SELECT 'A-101', s_id
FROM students
WHERE name = 'Anna';
INSERT 0 1
Nowlet’sopenanewterminalwindowandlaunchanother
psqlprocess: thissessionwillberunninginparallelwith
thefirstone.
Nottogetconfused,wewillindentthecommandsofthesec-
ondsessionforclarity.Willthissessionseeourchanges?
postgres=# \c test
55
You are now connected to database "test" as user iv
"postgres".
test=# SELECT * FROM groups;
g_no | monitor
------+---------
(0 rows)
No,itwon’t,sincethetransactionisnotyetcompleted.
Tocontinuewithourtransaction,let’smoveallstudentsto
thenewlycreatedgroup:
test=# UPDATE students SET g_no = 'A-101';
UPDATE 3
Thesecondsessionstillgetsconsistentdata,whichwasal-
readypresentinthedatabasewhentheuncommittedtrans-
actionstarted.
test=# SELECT * FROM students;
s_id | name | start_year | g_no
------+--------+------------+------
1451 | Anna | 2014 |
1432 | Victor | 2014 |
1556 | Nina | 2015 |
(3 rows)
Let’scommitallourchangestocompletethetransaction:
test=# COMMIT;
COMMIT
Finally,thesecondsessionreceivesallthechangesmadeby
thistransaction,asiftheyappearedallatonce:
test=# SELECT * FROM groups;
56
iv g_no | monitor
-------+---------
A-101 | 1451
(1 row)
test=# SELECT * FROM students;
s_id | name | start_year | g_no
------+--------+------------+-------
1451 | Anna | 2014 | A-101
1432 | Victor | 2014 | A-101
1556 | Nina | 2015 | A-101
(3 rows)
It is guaranteed that several important properties of the
databasesystemarealwaysobserved.
Firstofall,anytransactionisexecutedeithercompletely(like
intheexampleabove),ornotatall.Ifatleastoneofthecom-
mandsreturnsanerror,orwehaveabortedthetransaction
withtheROLLBACKcommand,thedatabasestaysinthesame
stateasbeforetheBEGINcommand.Thispropertyiscalled
atomicity.
Second,whenthetransactioniscommitted,allintegritycon-
straintsmustholdtrue,otherwisethetransactionisrolled
back.Thedataisconsistentwhenthetransactionstarts,and
itremainsconsistentattheendofthetransaction, which
givesthispropertyitsname—consistency.
Third,astheexamplehasshown,otheruserswillneversee
inconsistentdatanotyetcommittedbythetransaction.This
property is called isolation. Thanks to this property, the
databasesystemcanservemultiplesessionsinparallel,with-
outsacrificingdataconsistency. PostgreSQLisknownfora
veryeffectiveisolationimplementation:severalsessionscan
runreadandwritequeriesinparallel,withoutlockingeach
other. Lockingoccursonlyiftwodifferentprocessestryto 57
changethesamerowsimultaneously. iv
Andfinally,durabilityisguaranteed:allthecommitteddata
won’tbelost,evenincaseofafailure(ifthedatabaseisset
upcorrectlyandisregularlybackedup,ofcourse).
Theseareextremelyimportantproperties, whichmustbe
presentinanyrelationaldatabasemanagementsystem.
Tolearnmoreabouttransactions,see:postgrespro.com/doc/
tutorial-transactions.html(Evenmoredetailsareavailable
here:postgrespro.com/doc/mvcc.html).
Conclusion
Wehaveonlymanagedtocoveratinybitofwhatyouneedto
knowaboutPostgreSQL,butwehopethatyouhaveseenit
foryourselfthatit’snotatallhardtostartusingthisdatabase
system.TheSQLlanguageenablesyoutoconstructqueries
ofvariouscomplexity,whilePostgreSQLprovidesaneffective
implementation and high-quality support of the standard.
Tryityourselfandexperiment!
Andonemoreimportantpsqlcommand.Tologout,enter:
test=# \q
58 UsefulpsqlCommands
iv
\? Command-linereferenceforpsql.
\h SQLReference: listofavailablecommandsor
theexactcommandsyntax.
\x Togglesbetweentheregulartabledisplay(rows
and columns) and an extended display (with
eachcolumnprintedonaseparateline).Thisis
usefulforviewingseveral“wide”rows.
\l Listofdatabases.
\du Listofusers.
\dt Listoftables.
\di Listofindexes.
\dv Listofviews.
\df Listoffunctions.
\dn Listofschemas.
\dx Listofinstalledextensions.
\dp Listofprivileges.
\dname Detailed information about the specified ob-
ject.
\d+name Extendeddetailedinformationaboutthespeci-
fiedobject.
\timingon Displaysoperatorexecutiontime.
V Demo Database
Description
GeneralInformation
Tomoveonandlearnmorecomplexqueries,weneedtocre-
ateamoreseriousdatabase(withnotjustthree,buteight
tables)andfillitupwithsomereasonabledata. Youcan
seetheentity-relationshipdiagramfortheschemaofthe
databasewearegoingtouseonp.61.
Asthesubjectfield, wehaveselectedairlineflights: let’s
assumewearetalkingaboutournot-yet-existingairlinecom-
pany. Thisareamustbefamiliartoanyonewhohasever
traveledbyplane;inanycase,we’llexplaineverythingright
here.
Itshouldbementionedthatwetriedtomakethedatabase
schemaassimpleaspossible,withoutoverloadingitwith
unnecessarydetails,butnottoosimpletoallowwritingin-
terestingandmeaningfulqueries.
Themainentityinourschemaisabooking.Eachbookingcan
includeseveralpassengers,withaseparateticketissuedfor
eachpassenger. Thepassengerdoesnotconstituteasepa-
rateentity.Forsimplicity,wecanassumethatallpassengers
areunique.
60 Each ticket contains one or more flight segments (tick-
v et_flights). Several flight segments can be included into
asingleticketinthefollowingcases:
1. Therearenodirectflightsbetweenthepointsofdepar-
tureanddestination,soamulti-legflightisrequired.
2. It’saround-tripticket.
Althoughthereisnoconstraintintheschema,itisassumed
that all tickets in the booking have the same flight seg-
ments.
Eachflightgoesfromoneairporttoanother.Flightswiththe
sameflightnumberhavethesamepointsofdepartureand
destination,butdifferentdeparturedates.
Atflightcheck-in,thepassengerisissuedaboardingpass,
wheretheseatnumberisspecified.Thepassengercancheck
infortheflightonlyifthisflightisincludedintotheticket.
Theflight/seatcombinationmustbeuniquetoavoidissuing
twoboardingpassesforthesameseat.
Thenumberofseatsintheaircraftandtheirdistributionbe-
tweendifferenttravelclassesdependonthespecificmodel
oftheaircraftperformingtheflight.Itisassumedthateach
aircraftmodelhasonlyonecabinconfiguration.
Thedatabaseschemadoesnotcheckthatseatnumbersin
boardingpasseshavethecorrespondingseatsintheaircraft
cabin.
Inthesectionsthatfollow,we’lldescribeeachofthetables,
aswellasadditionalviewsandfunctions.Youcanusethe\d+
commandtogettheexactdefinitionofanytable,including
datatypesandcolumndescriptions.
61 1
snoitidnoc_eraf
v edoc_tfarcria edoc_tfarcria
stfarcriA
ledom egnar staeS on_taes
# ∗ ∗
# # ∗
erutraped_deludehcs
edoc_tropria eman_tropria setanidrooc lavirra_deludehcs tropria_erutraped erutraped_lautca
stropriA enozemit sthgilF tropria_lavirra edoc_tfarcria lavirra_lautca
ytic di_thgifl on_thgifl
sutats
# ∗ ∗ ∗ ∗
# ∗ ∗ ∗ ∗ ∗ ∗ ∗ ◦ ◦
snoitidnoc_eraf
sessap_gnidraoB on_gnidraob
sthgifl_tekciT
on_tekcit di_thgifl tnuoma on_tekcit di_thgifl on_taes
# # ∗ ∗
# # ∗ ∗
eman_regnessap
tnuoma_latot
sgnikooB fer_koob etad_koob stekciT di_regnessap atad_tcatnoc
on_tekcit fer_koob
# ∗ ∗
# ∗ ∗ ∗ ∗
62
v
Bookings 63
v
Toflywithourairline,passengersbooktherequiredtickets
inadvance(book_date,whichmustbenotearlierthanone
month before the flight). The booking is identified by its
number(book_ref,asix-positioncombinationoflettersand
digits).
Thetotal_amountfieldstoresthetotalpriceofalltickets
includedintothebooking,forallpassengers.
Tickets
Atickethasauniquenumber(ticket_no),whichconsistsof
13digits.
The ticket contains the passenger’s identity document
number (passenger_id), as well as their first and last
names (passenger_name) and contact information (con-
tact_data).
NotethatneitherthepassengerID,northenameisperma-
nent(forexample,onecanchangethelastnameorpassport),
soitisimpossibletouniquelyidentifyallticketsofaparticu-
larpassenger.Forsimplicity,let’sassumethatallpassengers
areunique.
FlightSegments
Aflightsegmentconnectsaticketwithaflightandisidenti-
fiedbytheirnumbers.
Eachflightsegmenthasitsprice(amount)andtravelclass
(fare_conditions).
64 Flights
v
Thenaturalkeyoftheflightstableconsistsoftwofields:
theflightnumberflight_noandthedeparturedatesched-
uled_departure.Tomakeforeignkeysabitshorter,asurro-
gatekeyflight_idisusedastheprimarykey.
A flight always connects two points: departure_airport
andarrival_airport.
Thereisnosuchentityasa“connectingflight”:ifthereareno
directflightsfromoneairporttoanother,theticketsimply
includesseveralrequiredflightsegments.
Eachflighthasascheduleddateandtimeofdepartureandar-
rival(scheduled_departureandscheduled_arrival).The
actualdepartureandarrivaltimes(actual_departureand
actual_arrival)maydiffer: thedifferenceisusuallynot
verybig, butsometimescanbeuptoseveralhoursifthe
flightisdelayed.
Flightstatuscantakeoneofthefollowingvalues:
• Scheduled
Theflightisavailableforbooking.Ithappensonemonth
beforetheplanneddeparturedate;beforethattime,there
isnoentryforthisflightinthedatabase.
• OnTime
Theflightisopenforcheck-in(twenty-fourhoursbefore
thescheduleddeparture)andisnotdelayed.
• Delayed
Theflightisopenforcheck-in(twenty-fourhoursbefore
thescheduleddeparture),butisdelayed.
• Departed
Theaircrafthasalreadydepartedandisairborne.
• Arrived 65
Theaircrafthasreachedthepointofdestination. v
• Cancelled
Theflightiscancelled.
Airports
Anairportisidentifiedbyathree-letterairport_codeand
hasanairport_name.
Thecityattributeoftheairportstableidentifiestheair-
portsofthesamecity.Thetablealsoincludescoordinates
(longitudeandlatitude)andthetimezone.Thereisnosepa-
rateentityforthecity.
BoardingPasses
Atthetimeofcheck-in,whichopenstwenty-fourhoursbefore
thescheduleddeparture,thepassengerisissuedaboarding
pass.Liketheflightsegment,theboardingpassisidentified
bytheticketnumberandtheflightnumber.
Boardingpassesareassignedsequentialnumbers(board-
ing_no),intheorderofcheck-insfortheflight(thisnumber
isuniqueonlywithinthecontextofaparticularflight).The
boardingpassspecifiestheseatnumber(seat_no).
Aircraft
Each aircraft model is identified by its three-digit air-
craft_code. Thetablealsoincludesthenameoftheair-
66 craftmodelandthemaximumflyingdistance,inkilometers
v (range).
Seats
Seatsdefinethecabinconfigurationofeachaircraftmodel.
Eachseatisdefinedbyitsnumber(seat_no)andhasanas-
signedtravelclass(fare_conditions):Economy,Comfort,or
Business.
FlightsView
Thereisaflights_vviewovertheflightstabletoprovide