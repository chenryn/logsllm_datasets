“Can coalitions be prevented by other, simpler solutions that
do not require zero knowledge proofs?” The Bitcoin community
has put forth two main alternative approaches to ours. First, we
could promote the use of P2Ppool and other forms of “responsible”
mining, so that users can join pools without ceding full control of
their resources to a central authority. This has been unsuccessful so
far. At the time of writing, P2Pool accounts for less than 2% of the
total hashpower; and while some pools support a protocol (called
“getblocktemplate”) that allows pool members to see the contents
of the blocks they are asigned to work on (and, hence, could leave if
they detect the pool is applying some disagreeable policy), the top
six pools (which account for more than two thirds of the total hash-
power) do not. A second approach is to monitor large pools and
apply social pressure to limit their size. However, pools have been
accused of hiding their bandwidth to avoid backlash. In any case,
we make an analogy to coercion-resistance in electronic voting (see
Section 10): although social deterrents to undesired beahvior may
in some cases be effective, greater conﬁdence can be derived from
a technical and economic deterrent.
“It’s too late to change Bitcoin; and regardless, large miners
wouldn’t support this change.” While we have described our de-
sign as a proposed modiﬁcation to Bitcoin, this is primarily for
ease of presentation; our design is also applicable as the basis for a
new cryptocurrency, or as a modiﬁcation to any of the hundreds of
Bitcoin-like “altcoins” [7] which compete with Bitcoin (though, at
the time of writing, Bitcoin remains far-and-away the most popu-
lar). Indeed altcoins have already begun to experiment with (weak)
nonoutsourceable puzzles.
It seems unlikely our proposed design will soon be adopted by
Bitcoin. Due to the coordination involved and the risk of splintering
the network, there is (understandably) considerable political resis-
tance within the Bitcoin community to adopting “hard fork” proto-
col changes, except in extreme cases [7]. However, such changes
have occurred in the past, and could occcur again. Though min-
ers are inﬂuential and it would be unwise to adopt a new policy
that causes them to leave, they aren’t unilaterally responsible for
Bitcoin governance [7]; instead stakeholders include payment pro-
cessors and services, operators of “full nodes” that may not mine,
and developers of popular clients. Additionally, as we mentioned
in Section 7.3 and explain in detail in our extended online paper,
our nonoutsourceable puzzle constructions can be made backward
compatible with existing Bitcoin mining equipment, lessening the
impact on established miners [17]. Finally, even if our design is not
adopted, the mere public knowledge of a viable coalition-resistant
design alternative that the community could adopt — if necessary
— may already serve as a deterrent against large coalitions.
10. RELATED WORK
Computational puzzles. Moderately hard computational puzzles,
often referred to as “proofs of work,” were originally proposed for
the purpose of combating email spam [16] (though this application
is nowadays generally considered impractical [25]). Most work
on computational puzzles has focused instead on “client puzzles,”
which can be used to prevent denial-of-service attacks [23]. Re-
cently, several attempts have been made to provide formal security
deﬁnitions for client puzzles [13, 21, 42].
Theoretical and economic understanding of Bitcoin. Although a
purely digital currency has been long sought by researchers [11,12,
14], Bitcoin’s key insight is to frame the problem as a consensus
protocol and to provide an incentive for users to participate. Al-
though Bitcoin’s security has initially been proven (informally) in
the “honest majority” model [19,31,32], this assumption is unsatis-
fying since it says nothing about whether the incentive scheme in-
deed leads to an honest majority. An economic analysis of Bitcoin
by Kroll et al. [24] showed that honest participation in Bitcoin may
be incentive compatible under assumptions such as a homogeneous
population of miners and a limited strategy space. More recently,
Eyal and Sirer [18] showed that with a more realistic strategy space,
when a single player (or coalition) comprises more than a third of
the network’s overall strength, the protocol is not incentive compat-
ible (and in fact the threshold is typically much less than one-third,
depending on other factors involving network topology). This re-
sult underscores the importance of discouraging the formation of
Bitcoin mining coalitions.
689Decentralized Mining Pools. While most mining pools (including
the largest) are operated by a central administrator, P2Pool [44] is a
successful protocol for decentralized mining pools that achieve the
desired effect (lower payout variance for participants) that does not
require an administrator. It is possible that engineering efforts to
improve P2Pool’s performance and usability and public awareness
campaigns may steer more users to P2Pool rather than centralized
mining pools (at the time of writing8, P2Pool accounts for only 1%
of the total mining capacity while the two largest pools together
account for 49%). However, as P2Pool inherently requires more
overhead than a centralized pool, we believe it is wiser to directly
discourage coalitions through the built-in reward mechanism.
Altcoins. Numerous attempts have been made to tweak the incen-
tive structure by modifying Bitcoin’s underlying puzzle. The most
popular alternative, Litecoin9 uses an scrypt-based [37] puzzle in-
tended to promote the use of general purpose equipment (espe-
cially CPUs or GPUs) rather than specialized equipment (e.g., Bit-
coin mining ASICs). Another oft-cited goal is to make the puzzle-
solving computation have an intrinsically useful side effect (this is
discussed, for example, in [24]). To our knowledge, we are the ﬁrst
to suggest deterring mining coalitions as a design goal.
Zerocoin [28], Zerocash [4], and PinocchioCoin [15] focus on
making Bitcoin transactions anonymous by introducing a public
cryptographic accumulator for mixing coins. Spending a coin in-
volves producing a zero-knowledge proof that a coin has not yet
been spent. Although our zero-knowledge proof construction may
bear superﬁcial resemblance to this approach, our work addresses
a completely different problem.
Coercion-resistance in Electronic Voting. The approach we take
is inspired by notions of coercion-resistance in electronic voting.
Vote buying (as well as other forms of coercion) is illegal in all US
state and federal elections [22]. While the threat of legal prose-
cution already poses a deterrent against such behavior, electronic
voting schemes have been designed to provide technical counter-
measures as well [6, 33]. In short, such schemes ensure that vot-
ers are unable to obtain any receipt which could demonstrate how
they voted to a coercive attacker. We draw an analogy between
vote buying and what we call outsourcing schemes; analogous to
receipt-freeness, the (strongly) nonoutsourceable property prevents
a worker from proving to a pool operator how its hashpower is used.
Most Closely Related Work. In Permacoin [29], Miller et al. pro-
posed a Bitcoin-like system that achieves decentralized data storage
as a useful side effect of mining. As part of their development, they
implicitly developed a weakly nonoutsourceable puzzle that deters
consolidation of storage capacity. Our Merkle-tree-based weakly
nonoutsourceable puzzle construction is directly inspired by the
construction in Permacoin. However, Permacoin does not make
any attempt to formalize the notion of (weakly) nonoutsourceable
puzzles, nor to consider the goal of deterring outsourcing outside
the context of archival storage. Our paper provides the ﬁrst formal
treatment of nonoutsourceable puzzles. Additionally, we introduce
a new notion of strongly nonoutsourceable puzzles, which repairs
a critical ﬂaw in Permacoin (namely, that weakly nonoutsource-
able puzzles provide no deterrence against hosted mining providers
with valuable reputations, or against pools who collect collateral
deposits from their members).
In independent work, Eyal and Sirer [17] developed a technique
for combining a weakly nonoutsourceable puzzle with an arbitrary
8According to https://blockchain.info/pools re-
trieved on August 1, 2014
9https://litecoin.org/
scratch-off puzzle, resulting in a puzzle that retains the best prop-
erties of the constituents; this can be used, for example, to create
a nonoutsourceable puzzle that is backward-compatible with ex-
isting Bitcoin mining equipment. We discuss applications of this
technique in the full online version of our paper.
11. CONCLUSION
The prevalence of Bitcoin mining coalitions (including both min-
ing pools and hosted mining services), which lead to consolidation
of power and increased systemic risk to the network, are a result of
a built-in design limitation of the Bitcoin puzzle itself – speciﬁcally,
that it admits an effective coalition enforcement mechanism. To
address this, we have proposed formal deﬁnitions of nonoutsource-
able puzzles for which no such enforcement mechanism exists. We
have contributed two constructions: a weak nonoutsourceable puz-
zle provable in the random oracle model, and a generic transforma-
tion from any weak nonoutsourceable puzzle to a strong one. The
former may already be a sufﬁcient deterrent against mining pools,
while the latter thwarts both hosted mining and mining pools. We
have implemented both of our techniques and provide performance
evaluation results showing these add only a tolerable overhead to
the cost of Bitcoin blockchain validation. Overall, we are opti-
mistic that our approach, combined with suitable modiﬁcations to
the reward structure, could be used to guarantee that participation
as an independent individual is the most effective mining strategy.
Acknowledgments We thank the readers and reviewers of earlier
drafts of this paper. This work was supported in part by NSF
awards #0964541, #1223623, and #1518765.
12. REFERENCES
[1] ziftrcoin : A cryptocurrency to enable commerce.
Whitepaper.
[2] James Aspnes, Collin Jackson, and Arvind Krishnamurthy.
Exposing computationally-challenged byzantine impostors.
Department of Computer Science, Yale University, New
Haven, CT, Tech. Rep, 2005.
[3] Simon Barber, Xavier Boyen, Elaine Shi, and Ersin Uzun.
Bitter to better – how to make bitcoin a better currency. In
Financial Cryptography and Data Security, pages 399–414.
Springer, 2012.
[4] Eli Ben-Sasson, Alessandro Chiesa, Christina Garman,
Matthew Green, Ian Miers, Eran Tromer, and Madars Virza.
Zerocash: Decentralized anonymous payments from bitcoin.
In Security and Privacy (SP), 2014 IEEE Symposium on.
IEEE. IEEE, 2014.
[5] Eli Ben-Sasson, Alessandro Chiesa, Eran Tromer, and
Madars Virza. Succinct non-interactive zero knowledge for a
von neumann architecture. In 23rd USENIX Security
Symposium (USENIX Security 14), pages 781–796, San
Diego, CA, August 2014. USENIX Association.
[6] Josh Benaloh and Dwight Tuinstra. Receipt-free secret-ballot
elections. In Proceedings of the twenty-sixth annual ACM
symposium on Theory of computing, pages 544–553. ACM,
1994.
[7] Joseph Bonneau, Andrew Miller, Jeremy Clark, Arvind
Narayanan, Joshua Kroll, and Edward W. Felten. Research
perspectives on bitcoin and second-generation digital
currencies. In 2015 IEEE Symposium on Security and
Privacy. IEEE, 2015.
[8] Joseph Bonneau, Arvind Narayanan, Andrew Miller, Jeremy
Clark, Joshua A Kroll, and Edward W Felten. Mixcoin:
690Anonymity for bitcoin with accountable mixes. In Financial
Cryptography and Data Security, pages 486–504. Springer,
2014.
[9] Danny Bradbury. Alydian targets big ticket miners with
terahash hosting. http:
//www.coindesk.com/alydian-targets-big-
ticket-miners-with-terahash-hosting/,
August 2013.
[10] Vitalik Buterin. Bitcoin network shaken by blockchain fork.
http://bitcoinmagazine.com/3668/bitcoin-
network-shaken-by-blockchain-fork/, 2013.
[11] David Chaum. Blind signatures for untraceable payments. In
Crypto, volume 82, pages 199–203, 1982.
[12] David Chaum, Amos Fiat, and Moni Naor. Untraceable
electronic cash. In Advances in Cryptology—CRYPTO’88,
pages 319–327. Springer, 1990.
[13] Liqun Chen, Paul Morrissey, Nigel P Smart, and Bogdan
Warinschi. Security notions and generic constructions for
client puzzles. In Advances in Cryptology–ASIACRYPT
2009, pages 505–523. Springer, 2009.
[14] Wei Dai. b-money.
http://www.weidai.com/bmoney.txt, 1998.
[15] George Danezis, Cedric Fournet, Markulf Kohlweiss, and
Bryan Parno. Pinocchio coin: building zerocoin from a
succinct pairing-based proof system. In Proceedings of the
First ACM workshop on Language support for
privacy-enhancing technologies, pages 27–30. ACM, 2013.
[16] C. Dwork and M. Naor. Pricing via processing or combatting
junk mail. In CRYPTO, 1993.
[17] Ittay Eyal and Emin Gün Sirer. How to disincentivize large
bitcoin mining pools. Blog post:
http://hackingdistributed.com/2014/06/
18/how-to-disincentivize-large-bitcoin-
mining-pools/, June 2014.
[18] Ittay Eyal and Emin Gün Sirer. Majority is not enough:
Bitcoin mining is vulnerable. In Financial Cryptography and
Data Security, pages 436–454. Springer, 2014.
[19] Juan Garay, Aggelos Kiayias, and Nikos Leonardos. The
bitcoin backbone protocol: Analysis and applications. In
Advances in Cryptology-EUROCRYPT 2015, pages
281–310. Springer, 2015.
[20] Rosario Gennaro, Craig Gentry, Bryan Parno, and Mariana
Raykova. Quadratic span programs and succinct nizks
without pcps. In Advances in Cryptology–EUROCRYPT
2013, pages 626–645. Springer, 2013.
[21] Bogdan Groza and Bogdan Warinschi. Cryptographic
puzzles and dos resilience, revisited. Designs, Codes and
Cryptography, pages 1–31, 2013.
[22] Richard L Hasen. Vote buying. California Law Review,
pages 1323–1371, 2000.
[23] Ari Juels and John G Brainard. Client puzzles: A
cryptographic countermeasure against connection depletion
attacks. In NDSS, volume 99, pages 151–165, 1999.
[24] Joshua A Kroll, Ian C Davey, and Edward W Felten. The
economics of bitcoin mining or, bitcoin in the presence of
adversaries. WEIS, 2013.
[25] Ben Laurie and Richard Clayton. Proof-of-workâ ˘A˙I proves
not to work; version 0.2. In Workshop on Economics and
Information, Security, 2004.
[26] Yoad Lewenberg, Yonatan Sompolinsky, and Aviv Zohar.
Inclusive block chain protocols. Financial Cryptography and
Data Security. Springer, 2015.
[27] Jon Matonis. The bitcoin mining arms race: Ghash.io and the
51% issue. http://www.coindesk.com/bitcoin-
mining-detente-ghash-io-51-issue/, July
2014.
[28] Ian Miers, Christina Garman, Matthew Green, and Aviel D
Rubin. Zerocoin: Anonymous distributed e-cash from
bitcoin. In Security and Privacy (SP), 2013 IEEE Symposium
on, pages 397–411. IEEE, 2013.
[29] Andrew Miller, Ari Juels, Elaine Shi, Bryan Parno, and
Jonathan Katz. Permacoin: Repurposing bitcoin work for
long-term data preservation. In IEEE Symposium on Security
and Privacy, 2014.
[30] Andrew Miller, Ahmed Kosba, Elaine Shi, and Jonathan
Katz. Nonoutsourceable scratch-off puzzles to discourage
bitcoin mining coalitions. (full version).
http://cs.umd.edu/~amiller/
nonoutsourceable_full.pdf, 2015.
[31] Andrew Miller and Joseph J. LaViola, Jr. Anonymous
byzantine consensus from moderately-hard puzzles: A model
for bitcoin. UCF Tech Report. CS-TR-14-01.
[32] Satoshi Nakamoto. Bitcoin: A peer-to-peer electronic cash
system. http://bitcon.org/bitcoin.pdf, 2008.
[33] Valtteri Niemi and Ari Renvall. How to prevent buying of
votes in computer elections. In Advances in
Cryptologyâ ˘A ˇTASIACRYPT’94, pages 164–170. Springer,
1995.
[34] Emily Oster. Are all lotteries regressive? evidence from the
powerball. National Tax Journal, June, 2004.
[35] Bryan Parno. A note on the unsoundness of vntinyram’s
snark. Cryptology ePrint Archive, Report 2015/437, 2015.
http://eprint.iacr.org/.
[36] Bryan Parno, Craig Gentry, Jon Howell, and Mariana
Raykova. Pinocchio: Nearly practical veriﬁable computation.
In IEEE Symposium on Security and Privacy, pages
238–252, 2013.
[37] Colin Percival and Simon Josefsson. The scrypt
password-based key derivation function. 2012.
[38] John Quiggin. On the optimal design of lotteries. Economica,
58(229):1–16, 1991.
[39] Meni Rosenfeld. Analysis of bitcoin pooled mining reward
systems. arXiv preprint arXiv:1112.4980, 2011.
[40] Yonatan Sompolinsky and Aviv Zohar. Secure high-rate
transaction processing in bitcoin. Financial Cryptography
and Data Security. Springer, 2015.
[41] Spreadcoin.
http://spreadcoin.net/files/SpreadCoin-
WhitePaper.pdf, October 2014.
[42] Douglas Stebila, Lakshmi Kuppusamy, Jothi Rangasamy,
Colin Boyd, and Juan Gonzalez Nieto. Stronger difﬁculty
notions for client puzzles and denial-of-service-resistant
protocols. In Topics in Cryptology–CT-RSA 2011, pages
284–301. Springer, 2011.
[43] John Tromp. Cuckoo cycle: a new memory-hard
proof-of-work system. Bitcoin Research Workshop, 2015.
[44] Forrest Voight. p2pool: Decentralized, dos-resistant,
hop-proof pool. https:
//bitcointalk.org/index.php?topic=18313,
June 2011.
691