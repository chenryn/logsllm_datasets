---
## Page 474
21.6在脚本中使用sed
459
$ ,( ds  u f Di ]. u- pos
名为reverse的shell脚本用sed编辑器脚本来反转数据流中的文本行。它使用shell参数s1从命令
行中提取第一个参数，这正是需要进行反转的文件名。
S -/reverse.sh data2.txt
Thia ia the second data line.
Thla ia the last line.
This ia the firat data line.
Thia ia the header line.
现在你能在任何文件上轻松使用这个sed编辑器脚本，再不用每次都在命令行上重新输人了。
21.6.2重定向sed的输出
默认情况下，sed编辑器会将脚本的结果输出到sTDOUT上。你可以在shell脚本中使用各种标
准方法对sed编辑器的输出进行重定向。
可以在脚本中用s（）将sed编辑器命令的输出重定向到一个变量中，以备后用。下面的例子使
用sed脚本来向数值计算结果添加逗号。
21
#1/bin/bash
S cat fact.sh
 ASd cormas to number in factorlal anawer
factorial=1
counter=1
nunber=$1
whlle [ Scounter -1e Snumber ]
do
factorial=S[ $factorla1 ▪ $counter 1
counter=s[ Scounter + 1 1
done
). pes 1 tetxogsegs oqoe) $=atmsex
//[60[601 + *),/
:start
t start
echo *The result la Sresult*
S./fact.sh 20
The resu1t 1α 2, 432, 902, 008 , 176, 640 , 000
在使用普通的阶乘计算脚本后，脚本的结果会被作为sed编辑器脚本的输人，它会给结果加
---
## Page 475
460
第21章sed进阶
上逗号。然后echo语句使用这个值产生最终结果。
21.7创建sed实用工具
如同在本章前面的那些简短例子中看到的，可以使用sed编辑器进行大量很醋的数据格式化
工作。本节展示了一些方使趁手、众所周知的sed编辑器脚本，可以帮助我们进行常见的数据处
理工作。
21.7.1加倍行间距
首先，让我们看一个向文本文件的行间插入空白行的简单sed脚本。
$ sed*G'data2.txt
This is the header line
This is the first data line.
This is the second data line
This io the last line.
者起来相当简单！这个技巧的关键在于保持空间的默认值。记住，G命令会简单地将保持空
间内容附加到模式空间内容后。当启动sed编辑器时，保持空间只有一个空行。将它附加到已有
行后面，你就在已有行后面创建了一个空白行。
你可能已经注意到了，这个脚本在数据流的最后一行后面也加了一个空白行，使得文件的末
尾也产生了一个空白行。如果你不想要这个空白行，可以用排除符号（：）和尼行符号（$）来确
保脚本不会将空白行加到数据流的最后一行后面。
Thia la the header llne.
S sed '$1G' data2.txt
Thia ls the first data line.
Thia la the second data llne.
Thia la the last line.
现在看起来好一些了。只要该行不是最后一行，G命令就会附加保持空间内容。当sed编辑器
到了最后一行时，它会跳过c命令。
21.7.2对可能含有空白行的文件加倍行间距
再进一步探索上面的例子：如果文本文件已经有一些空白行，但你想给所有行加倍行间距要
怎么办呢？如果用前面的脚本，有些区域会有太多的空白行，因为每个已有的空白行也会被加倍。
---
## Page 476
21.7创建sed实用工具
461
 cat data6.txt
Thia la line one.
Thls ia line two.
Thla la line three.
This ia line four.
S sed '$iG' data6.txt
This ia line two.
现在，在原来空白行的位置有了三个空白行。这个问题的解决办法是，首先删除数据流中的
所有空白行，然后用c命令在所有行后插人新的空白行。要删除已有的空白行，需要将a命令和一
个匹配空白行的模式一起使用。
/’$/α
这个模式使用了行首符号（~）和行尾符号（s）。将这个模式加到脚本中会生成想要的结果。
21
S sed */^$/d : $1G' data6.txt
Thia ia line two.
Thia ia line three.
完美！和预期的结果一模一样。
21.7.3给文件中的行编号
第19章演示了如何用等号来显示数据流中行的行号。
S sed *=' data2.txt
Thia ia the header line.
Thia is the firat data line.
Thia ia the second data line.
This ia the last line.
---
## Page 477
462
第21章sed进阶
这可能有点难看，因为行号是在数据流中实际行的上方。比较好的解决办法是将行号和文本
放在同一行。
你已经知道如何用N命令合并行，在sed脚本中使用这个命令应该不难。这个工具的技巧在于
不能将两个命令放到同一个脚本中。
在获得了等号命令的输出之后，你可以通过管道将输出传给另一个sed编辑器脚本，它会使
用N命令来合并这两行。还需要用替换命令将换行符更换成空格或制表符。最终的解决办法看起
来如下。
$sed *=' data2.txt 1 sed *N; s/\n/ /'
1. This is the header line.
2 This is the first data line.
3 This is the second data line.
4 This is the last line.
现在看起来好多了。在查看错误消息的行号时，这是一个很好用的小工具
有些bashshell命令也可以添加行号，但它们会另外加人一些东西（有可能是不需要的间隔）。
$ nl data2.txt
1
This is the header line.
2
This is the second data line,
This is the first data line.
4This is the last line.
$ cat -n data2.txt
1This is the header line.
2
This is the second data line.
This is the first data line.
4This is the last line.
$
21.7.4打印末尾行
到目前为止，你已经知道如何用p命令来打印数据流中所有的或者是匹配某个特定模式的行。
如果只需处理一个长输出（比如日志文件）中的末尾几行，要怎么办呢？
关元符代表数据流中最后一行，所以只显示最后一行很容易。
S sed -n '$p' data2.txt
This is the last line.
那么，如何用关元符来显示数据流末尾的若干行呢？答案是创建滚动窗口。
滚动窗口是检验模式空间中文本行块的常用方法，它使用N命令将这些块合并起来。N命令将
下一行文本附加到模式空间中已有文本行后面。一旦你在模式空间有了一个10行的文本块，你可
以用关元符来检查你是否已经处于数据流的尾部。如果不在，就继续向模式空间增加行，同时删
除原来的行（记住，D命令会删除模式空间的第一行）。
---
## Page 478
21.7创建sed实用工具
463
通过循环N命令和D命令，你在向模式空间的文本行块增加新行的同时也删除了旧行。分支命
令非常适合这个循环。要结束循环，只要识别出最后一行并用g命令退出就可以了。
最终的sed编辑器脚本看起来如下。
S cat data7.txt
This is line 2.
This is line 1.
This is line 4.
This is line 3.
This is line 5.
This is line
This is line 7.
6
This is line 8.
This is line 9.
Thie is line 10.
Thie is line 11.
This is line 12.
This is line 13.
This is line 14.
This is line 15.
$ sed *(
>；11,$D
>18tart
> b start
> }' data7.txt
Thie is line 6.
Thie is line 7.
Thie is line 8.
This is line 9.
This is line 10
This is line 11.
This is line 12,
This is line 13.
Thie is line 15.
This is line 14,
这个脚本会首先检查这行是不是数据流中最后一行。如果是，退出（quit）命令会停止循
环。N命令会将下一行附加到模式空间中当前行之后。如果当前行在第10行后面，11，SD命令会
删除模式空间中的第一行。这就会在模式空间中创建出滑动窗口效果。因此，这个sed程序脚本
只会显示出data7.txt文件最后10行。
21.7.5删除行
另一个有用的sed编辑器工具是删除数据流中不需要的空白行。删除数据流中的所有空白行
很容易，但要选择性地删除空白行则需要一点创造力。本节将会给出一些简短的sed编辑器脚本，
它们可以用来错助删除数据中不需要的空白行。
---
## Page 479
464
第21章sed进阶
1.删除连续的空白行
数据文件中出现多余的空白行会非常让人讨厌。通常，数据文件中都会有空白行，但有时由
于数据行的缺失，会产生过多的空白行（就像之前加倍行间距例子中所见到的那样）
删除连续空白行的最简单办法是用地址区间来检查数据流。第19章介绍了如何在地址中使用
区间，包括如何在地址区间中加人模式。sed编辑器会对所有匹配指定地址区间的行执行该命令。
期除连续空白行的关键在于创建包含一个非空白行和一个空白行的地址区间。如果sed编辑
器遇到了这个区间，它不会删除行。但对于不匹配这个区间的行（两个或更多的空白行）它会
删除这些行。
下面是完成这个操作的脚本。
/-/,/ $/1d
区间是/./到/~$/。区间的开始地址会匹配任何含有至少一个字符的行。区间的结束地址会
匹配一个空行。在这个区间内的行不会被删除。
下面是实际的脚本。
This is line one,
S cat data8.txt
This is line tuo.
This is line three
This is line four.
sed */./, /~$/1d. data8.txt
This is line one.
This is line tuo.
This is line three.
This is line four.
s7
无论文件的数据行之间出现了多少空白行，在输出中只会在行间保留一个空白行。
2.删除开头的空白行
数据文件开头有多个空白行时也很烦人。通常，在将数据从文本文件导人到数据库时，空白
行会产生一些空项，涉及这些数据的计算都得作废。
删除数据流顶部的空白行不难。下面是完成这个功能的脚本。
/ -/,$16
这个脚本用地址区间来决定哪些行要制掉。这个区间从含有字符的行开始，一直到数据流结
束。在这个区间内的任何行都不会从输出中删除。这意味着含有字符的第一行之前的任何行都会
---
## Page 480
21.7创建sed实用工具
465
删除。
来看看这个简单的脚本。
S cat data9.txt
This is line one.
Thie is line two.
S sed */./,$1d' data9.txt
Thie is line one.
This is line two.
7
测试文件在数据行之前有两个空白行。这个脚本成功地删除了开头的两个空白行，保留了数
据中的空白行。
3.删除结尾的空白行
很遗憾，删除结尾的空白行并不像删除开头的空白行那么容易。就跟打印数据流的结尾一样，
删除数据流结尾的空白行也需要花点心思，利用循环来实现。
在开始讨论前，先看看脚本是什么样的。
sed '{
/\n*s/($d; N; b start }
18tart
可能乍一看有点奇怪。注意，在正常脚本的花括号里还有花括号。这允许你在整个命令脚本
中将一些命令分组。该命令组会被应用在指定的地址模式上。地址模式能够匹配只含有一个换行
符的行。如果找到了这样的行，面且还是最后一行，删除命令会删掉它。如果不是最后一行，N
命令会将下一行附加到它后面，分支命令会跳到循环起始位置重新开始。
下面是实际的脚本。
S cat data10.txt
This is the second line
This is the first line.
$ sed *(
>/^\n*$/($d ; N; b start )
>18tart
>}' data10.txt
This is the first line.
This is the second line.
这个脚本成功删除了文本文件结尾的空白行。
---
## Page 481
466
第21章sed进阶
21.7.6删除HTML标签
现如今，从网站下载文本并将其保存或用作应用程序的数据并不罕见。但当你从网站下载文
本时，有时其中也包含了用于数据格式化的HTML标签。如果你只是查看数据，这会是个问题。
标准的HTMLWeb页面包含一些不同类型的HTML标签，标明了正确显示页面信息所需要的
格式化功能。这里有个HTML文件的例子。
 cat datal1.txt
Thiα la the page title
Thi.a 1g the[Lrat 1line Ln the Web page .
Lnfornation to uee in our sed scxipt.