User: These days, I'm transitiong from Matlab to Python after using Matlab/Octave for more than ten years. I have two quick questions:

In the Python interactive mode, is there anything corresponding to Matlab's ans?
How can I run shell commands in the Python interactive mode? Of course, I can use os.system(), but in Matlab we may run shell commands just by placing ! before the actual command. Is there anything similar in Python?
Assistant: You probably want to use the IPython shell (now part of the jupyeter project).  In the IPython shell you can also run system commands using !, although many basic commands (like ls or cd) work without even needing to !.  Unlike in MATLAB, you don't need to pass it as a string (although you can).  So !ls works fine in IPython, while in MATLAB you would need to do !'ls'.  Further, you can assign the results to a variable in IPython, which you can't do in MATLAB.  So a = !ls works in IPython but not in MATLAB.  Further, if you use !!, the result is returned in a form easily usable in Python.  So !!ls returns a list of file names.
IPython still uses the _ notation for getting the previous result (except, as with Python, None is counted as "no result" and thus is not recorded).  You can also get the second-to-last result with __ and the third-to-last with ___.  Further, IPython puts a number next to each line in the command prompt.  To get the result of a particular line, just do _n where n is the number.  So to get the result of the 3rd command, which has the number 3 next to it, just do _3.  This still doesn't work if the result is None, though.
It has a ton of features.  You can get the previous input (as a string) with _i (and so on, following the same pattern as with the outputs).  You can time code with %timeit and %%timeit.  You can jump into the debugger after encountering an error.