.TH SETSERIAL 8 "1998年9月" "Setserial 2.15
.SH NAME
setserial \- 取得/设置 Linux 串行口的信息
.SH 总览
.B setserial
.B "[ \-abqvVWZ]"
设备
.BR "[ "命令参数一 " [ " 设备变元参数 " ] ] ..."
.B "setserial -g"
.B "[\a-abGv ]"
设备一 ...
.SH 描述
.B setserial 
是一个用来设置和取得与一个串行口有关的信息与设置的程序。这些信
息包括某个串行口正在使用的I/o地址与中断号，以及break键是否被当
做引起安全注意的键，等等。
在通常的引导的过程中，只有端口 COM1至COM4被初始化，并使用默认的
I/O地址和中断号，正如以下所列。为了初始化其它的串行口，或者是把
COM1至COM4中的设置改为一个非标准的设置。就必须使用
.B setserial 
程序。一般这个程序会在
.I rc.serial
脚本中使用，此脚本通常会在
.IR /etc/rc.local .
 中被执行
.I 设备
 由变元参数定义的需要设置的串行设备。它们通常具有以下形式：
.BR /dev/cua[0-3]  .
如果没有设定命令参数，
.B setserial 
 将打印出此端口的类型(如，8250，16450 ，14330，16550A，等等)，
 硬件I/O地址，各硬件中也断号,波特数，和一些可操作或更改的标识。
如果选择
.B \-g
选项，命令将列出所给出的设备参数的一些基本信息。 
如果没有指定参数
.B \-g
命令所指定的第一个设备变元将被当作修改或者是显示内容的目标设备，
而其它的设备变元参数将被当作命令参数赋于目标设备。
对于大多数情况，需要有系统管理员的权限才能设置串行口。当然有一
些串行口的参数，也可由普通用户设置，这些参数在本手册中会有另有
说明。
.SH 选项
.B Setserial 
可接受下列参数：
.TP
.B \-a
当输出串行口设备的设置时，显示出所有有效信息.
.TP
.B \-b
当输出串行口设备的设置时，输出主要的设备设置信息，此项适合于
在引导过程时，在/etc/rc 脚本中输出设备信息.
.TP
.B \-G
以特定形式输出串行口的设置信息，此形式可以设置信息以命令行
参数的形式返馈回串行口设备.
.TP
.B \-q
静默.
.TP
.B SetSerial
命令将以更简洁的形式输出.
.TP
.B \-V
输出详细信息.
.B Setserial
可以输出附加的状态的信息.
.TP
.B \-V
显示版本信息然后退出.
.TP
.B \-W
强制初始化中,断然后退出.些选项在核心版本2.1后的Linux中不在提供.
.B \-z
在开始设置标记前清除原有的设置的串行标记.此项与
使用\-G 标记自动保存串行口的设置标记有关.
.SH 命令参数
以下命令参数可以赋于一个串行口.
所有的参数值都被假定为一个八进制数，除非值前标有"0x".
.TP
.BR port " 端口号 "
.B port
此选项设置I/O地址如上.
.TP
.BR irq "中断号"
.B irq
此选项设置硬件的中断号IRQ如上.
.TP
.BR uart "异步通讯(UART)类型"
 此选项用来设置异步通讯(UART)的类型.允许的类型有
.BR none ,
8250,16450, 16550,16550A,16550,16650V2,and 16750.
并且8250 类型 和 16450 没有FIFO's ，起初的16550 有一些错误致
使FIFO's不可用，FIFO 只可用来16550A类型的异步通讯机。设置异步
通讯(UART)类型为  8250，16450，或16550 将启用不使用 FIFO的串
行口.使用异步通讯类型为
.B none
将禁用端口.
一些内猫标注着"16650A UART带有1K缓冲"，这是骗人的.它们没有真正
兼容 16550A的UART；相反的它们只有 一个16450兼容的带1K接收缓冲
UART，以防止接 收时溢出.这是非常重要的，因为它们没有一个没有一
个可传导的FIFO.因此，他们与16650A UART 并不兼容,自动配置过程将
正确的识别它们为16450 类型。如果你想强行使用，需要
.B uart
参数，这样你在传输文件时会发现有字符遗失.这些 UART 通常还有其它
一些问题.
.B skip test
参数也经常被使用.
.B autoconfig
当使用这个参数时，
.B Setserial
将向核心请求自动设置串行口.I/O地址一要正确设置；核心将会
试图检测UART类型，如果
.B auto_irq
参数选用，Linux将试图自动分配中断号IRQ. 
.B autoconfig
参数应在
.BR port,auto_irq ",and "skip_test
等参数使用后也被指定.
.TP
.B auto_irq
在自动配置的过程中，会自动分配中断号IRQ. 此功能不能保证一
定有一个正确的结果；一些硬件的配置可能会迷惑Linux的核心.一
般来说不使用参数
.B auto_irq
 的功能更安全一些，宁可明确地定IRQ中断号.
.B irq
 参数指定中断号.
.TP
.B ^auto_irq
在自动配置的过程中.并
.I 不
试图分配中断号IRQ.
.TP
.B skip_test
在自动配置的过程中,忽略UART检测.一些内猫没有国际半导体公司
兼容的UART设备类型,只有一些便宜的仿制品.有一些甚至不完全支持
loopback检测模式，此模式是核心在试图配置之前用来确定在特定的
地址上是不真有UART设备.因此对于某些内猫你可能需要指定这个参数
以便Linux能正确的初始化UART.
.TP
.B ^skip_tet
在自动配置过程中，
.I 不
忽略UART的检测.
.TP
.BR baud_base "波特基率"
此选项设端口的波特率，此值为时钟频率除以16. 一般情况此项值为 115200， 这也是UART能支持的最快波特率.
.TP
.B spd_hi
当程序要求 38.4kb时，使用57.6kb的连接速度.
这个参数可以用由无特权的用户指定.
.TP
.B spd_vhi
当要求38.4kb时，使用115kb的连接速度.
.B spd_cust
当要求38.4kb时，使用指定的divisor(除数)来计算速度.这时波特率由
.B baud_base(波特基率)
 除以
.B divisor(除数）
得到
.TP
.B spd_normal
当要求38.4kb 时使用38.4kb的速度.
此参数可以由无特权的用户指定.
.TP
.BR divisor "divisor(除数)"
此选项指定了自定义的除数.这个除数将被用在
.B spd_cust
选项中被指定时，当要求38.4kb的速度时，用来自行设置串行口连接
速度此参数可由无特权的普通用户设定.
.TP
.B sak
设置break键为引发安全注意键.
.TP
.B ^sak
禁用引发安全注意键.
.TP
.B fourport
配置端口为一AST Fouroart 卡.
.TP
.B ^fourport
禁用 AST Fourport 配置.
.TP
.BR close delay "delay(延时）"
指定时间长度，单位是百分之一秒，DTR在联出设备被关闭后，仍会保
持一个低速串行通路，在有数据进来之前会重新起动DTR.这选项的默
认值为50，即半秒延时.
.TP
.BR close_delay "delay(延时)"
指定时间长度，单位是百分之一秒，在接受端被禁之前关闭端口时，
核心需要等待从串行口传来的数据. 如果指定为"none"，将不会有
延时.如果指定"infinite" 时，核心将会以不确定的时间等待缓冲
数据的传输.此选项的默认值为是 "none" .
.TP