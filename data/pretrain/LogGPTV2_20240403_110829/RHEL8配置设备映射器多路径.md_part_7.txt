5.  调整文件系统大小（假设不使用 LVM 或 DOS 分区）：
    ``` literallayout
    # resize2fs /dev/mapper/mpatha
    ```
:::
:::
::: section
::: titlepage
# []{#assembly_managing-mpath-configuring-device-mapper-multipath.html#proc_move-root-to-mpath-managing-mpath}将 root 文件系统从单一路径设备移动到多路径设备 {.title}
:::
如果您已在单路径设备中安装您的系统，并在稍后向 root
文件系统添加另一个路径，则需要将 root
文件系统移到多路径设备中。本节介绍了从单路径移到多路径设备的步骤。
确定您安装了 `device-mapper-multipath`{.literal}
软件包后，请执行以下步骤：
::: orderedlist
1.  执行以下命令来创建 `/etc/multipath.conf`{.literal}
    配置文件，载入多路径模块，并将 `multipathd`{.literal} 的 set
    `chkconfig`{.literal} 设置为 `：`{.literal}
    ``` literallayout
    # mpathconf --enable
    ```
2.  如果 `find_multipaths`{.literal} 配置参数没有设置为
    `yes，请`{.literal} 编辑 `/etc/multipath.conf`{.literal} 文件的
    `blacklist`{.literal} `和 blacklist_exceptions`{.literal} 部分，如
    ["防止设备多路径"一节](#assembly_modifying-dm-multipath-configuration-file_configuring-device-mapper-multipath.html#assembly_preventing-devices-from-multipathing_assembly_modifying-dm-multipath-configuration-file "防止设备多路径"){.xref}
    所述。
3.  要让多路径在发现 root
    设备后马上构建多路径设备，请输入以下命令。此命令还可确保
    `find_multipaths`{.literal} 允许设备，即使它只有一个路径。
    ``` literallayout
    # multipath -a root_devname
    ```
    例如，如果 root 设备是 `/dev/sdb`{.literal}，请输入以下命令。
    ``` literallayout
    # multipath -a /dev/sdb
    wwid '3600d02300069c9ce09d41c4ac9c53200' added
    ```
4.  要确认您的配置文件是否已正确设置，您可以输入 `multipath`{.literal}
    命令，并搜索输出结果以以下格式：这表示该命令创建多路径设备失败。
    ``` literallayout
    date  wwid: ignoring map
    ```
    例如，如果设备为
    3600d02300069c9ce09d41c4ac9c53200，则输出中会看到一行，如下所示：
    ``` literallayout
    # multipath
    Oct 21 09:37:19 | 3600d02300069c9ce09d41c4ac9c53200: ignoring map
    ```
5.  要使用 `多路径`{.literal} 重建 `initramfs`{.literal}
    文件系统，请使用以下选项执行 `dracut`{.literal} 命令：
    ``` literallayout
    # dracut --force -H --add multipath
    ```
6.  关闭机器。
7.  配置 FC 开关以便可在该机器中看到其它路径。
8.  引导机器。
9.  检查 root 文件系统(\'/\')是否在多路径设备中。
:::
:::
::: section
::: titlepage
# []{#assembly_managing-mpath-configuring-device-mapper-multipath.html#proc_move-swap-to-mpath-managing-mpath}将 swap 文件系统从单一路径设备移动到多路径设备中 {.title}
:::
默认情况下将 swap
设备设定为逻辑卷。只要您在组成逻辑卷组的物理卷中设置多路径，则不需要任何特定的步骤将其配置为多路径设备。然而，如果您的交换设备不是
LVM 卷，而且它按照设备名称挂载，您可能需要编辑 `/etc/fstab`{.literal}
文件以切换到适当的多路径设备名称。
::: orderedlist
1.  使用 `-v3`{.literal} 选项运行 `/sbin/multipath`{.literal}
    命令，确定交换设备的 WWID 号。命令的输出应在路径列表中显示交换设备。
    您应该在命令输出中查找以下格式的行，显示交换设备：
    ``` literallayout
    WWID  H:B:T:L devname MAJOR:MINOR
    ```
    例如，如果您的 swap 文件系统是在da `或其`{.literal}
    分区上设置的，您会在输出中看到一行，如下所示：
    ``` literallayout
    ===== paths list =====
    ...
    1ATA     WDC WD800JD-75MSA3                           WD-WMAM9F 1:0:0:0 sda 8:0
    ...
    ```
2.  在 `/etc/multipath.conf`{.literal} 文件中为 swap 设备设置别名：
    ``` literallayout
    multipaths {
        multipath {
            wwid WWID_of_swap_device
            alias swapdev
        }
    }
    ```
3.  编辑 `/etc/fstab`{.literal} 文件，并使用多路径设备替换到 root
    设备的旧设备路径。
    例如，如果您在 `/etc/fstab`{.literal} 文件中有以下条目：
    ``` literallayout
    /dev/sda2 swap                    swap    defaults        0 0
    ```
    您可将该条目更改如下：
    ``` literallayout
    /dev/mapper/swapdev swap          swap    defaults        0 0
    ```
:::
:::
::: section
::: titlepage
# []{#assembly_managing-mpath-configuring-device-mapper-multipath.html#proc_dmap-entries-to-mpath-managing-mpath}使用 dmsetup 命令确定设备映射器条目 {.title}
:::
您可以使用 `dmsetup`{.literal}
命令找出哪个设备映射器条目与多路径设备匹配。
以下命令显示所有设备映射器设备及其主号码和副号码。副号码决定 dm
设备的名称。例如，副号码 3 与多路径设备 `/dev/dm-3`{.literal} 对应。
``` literallayout
# dmsetup ls
mpathd  (253:4)
mpathep1        (253:12)
mpathfp1        (253:11)
mpathb  (253:3)
mpathgp1        (253:14)
mpathhp1        (253:13)
mpatha  (253:2)
mpathh  (253:9)
mpathg  (253:8)
VolGroup00-LogVol01     (253:1)
mpathf  (253:7)
VolGroup00-LogVol00     (253:0)
mpathe  (253:6)
mpathbp1        (253:10)
mpathd  (253:5)
```
:::
::: section
::: titlepage
# []{#assembly_managing-mpath-configuring-device-mapper-multipath.html#proc_mpathd-operation-managing-mpath}管理 multipathd 守护进程 {.title}
:::
`multipathd`{.literal} 命令可用于管理 `multipathd`{.literal}
守护进程。有关可用 `multipathd`{.literal} 命令的详情，请查看
`multipathd`{.literal}(8)man page。
以下命令显示 `multipathd show map`{.literal} 命令输出的标准默认格式。
``` literallayout
# multipathd show maps
name sysfs uuid
mpathc dm-0 360a98000324669436c2b45666c567942
```
些 `multipathd`{.literal} 命令包括 `format`{.literal}
选项，后跟通配符。您可以使用以下命令显示可用通配符列表。
``` literallayout
# multipathd show wildcards
```
`multipathd`{.literal}
命令支持以\"raw\"格式显示多路径设备和路径状态的格式命令。在原始格式中，不会打印任何标头，也没有添加字段来使列与标头一致。相反，这些字段将显示与格式字符串中指定的完全相同。然后，可以更轻松地将此输出用于脚本编写。您可以使用
`multipathd show wildcards`{.literal} 命令显示 format
字符串中使用的通配符。
以下 `multipathd`{.literal} 命令以常规和 raw 格式使用带有
`多路径通配符的格式字符串显示 multipathd`{.literal} 监控的多路径设备。
``` literallayout
list|show maps|multipaths format $format
list|show maps|multipaths raw format $format
```
以下 `multipathd`{.literal} 命令以常规和 raw 格式显示
`multipathd`{.literal} 监控的路径，使用带有多路径通配符的格式字符串。
``` literallayout
list|show paths format $format
list|show paths raw format $format
```
以下命令显示 `multipathd 显示映射`{.literal}
的非原始格式和原始格式之间的区别。请注意，采用 `原始`{.literal}
格式时，各列之间没有标头，且只有一个空格。
``` literallayout
# multipathd show maps format "%n %w %d %s"
name   uuid                              sysfs vend/prod/rev
mpathc 360a98000324669436c2b45666c567942 dm-0  NETAPP,LUN
# multipathd show maps raw format "%n %w %d %s"
mpathc 360a98000324669436c2b45666c567942 dm-0 NETAPP,LUN
```
:::
::: section
::: titlepage
# []{#assembly_managing-mpath-configuring-device-mapper-multipath.html#proc_mpath-file-cleanup-managing-mpath}在删除软件包时清除多路径文件 {.title}
:::
如果您需要删除 `device-mapper-multipath rpm`{.literal}.``{=html}
文件，请注意这不会删除 `/etc/multipath.conf、/`{.literal}
`etc/multipath/bindings`{.literal} 和 `/etc/multipath/wwids`{.literal}
文件。您可能需要在以后的 `device-mapper-multipath`{.literal}
软件包安装中手动删除这些文件。
:::
:::
[]{#assembly_removing-storage-devices_managing-mpath.html}
::: chapter
::: titlepage
# []{#assembly_removing-storage-devices_managing-mpath.html#assembly_removing-storage-devices_managing-mpath}第 7 章 删除存储设备 {.title}
:::
您可以从正在运行的系统中安全地删除存储设备，这有助于防止系统内存过载和数据丢失。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
在删除存储设备前，您必须确定您在 I/O
清除过程中因为系统内存负载增加而您有足够的可用内存。使用
`vmstat 1 100`{.literal} 命令查看系统当前的内存负载。您还可以使用
`free`{.literal}
命令查看系统可用内存。红帽不推荐在以下系统中删除存储设备：
::: itemizedlist
-   空闲内存低于内存总量的 5%，每 100 个超过 10 个样本。
-   交换是活动的（vm `stat`{.literal} 命令输出中的非零 `si`{.literal}
    `等等`{.literal} 列）。
:::
:::
::: section
::: titlepage
# []{#assembly_removing-storage-devices_managing-mpath.html#con-storage-device-safe-removaladding-removing-block-devices}安全删除存储设备 {.title}
:::
从正在运行的系统安全地删除存储设备需要采用从顶层开始的顶层方法，通常是应用程序或文件系统，并面向底部（即物理设备）。
您可以通过多种方式使用存储设备，它们可以在物理设备上具有不同的虚拟配置。例如：您可以将虚拟设备配置为多路径设备，使其成为
RAID 的一部分，也可以使其成为 LVM
组的一部分。或者，可以通过文件系统访问设备，也可以直接访问设备（作为\"raw\"设备）。
从顶层工作，您必须确保您要删除的设备不在使用中，所有待处理设备的 I/O
都会清除，操作系统不会引用存储设备。
:::
::: section
::: titlepage
# []{#assembly_removing-storage-devices_managing-mpath.html#proc_removing-block-device_adding-removing-block-devices}删除块设备 {.title}
:::
您可以从正在运行的系统中安全地删除块设备，以帮助防止系统内存过载和数据丢失。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
重新扫描 SCSI
总线或执行更改操作系统状态的任何其他操作（不遵循此处记录的流程）可能会导致
I/O 超时、意外删除的设备或数据丢失而延迟。
:::
::: itemizedlist
**先决条件**
-   如果您要删除多路径设备，且您无法访问其路径设备，请禁用多路径设备的队列：