# 浅谈信息收集的那些事儿

## 前言
信息安全领域的大佬们普遍认为，信息收集是至关重要的一步。没有充分的信息收集，就很难找到漏洞。

## 信息收集的重要性
在进行任何安全测试或渗透测试之前，全面的信息收集可以帮助我们更好地了解目标，并扩大潜在攻击面。

## 子域名收集
子域名枚举是信息收集的第一步，以下是一些常用的工具：

- **Amass**：一个功能强大的子域名发现工具。
  - GitHub: [OWASP/Amass](https://github.com/OWASP/Amass)
- **Sublist3r**：简单易用的子域名枚举工具。
  - GitHub: [aboul3la/Sublist3r](https://github.com/aboul3la/Sublist3r)
- **aiodnsbrute**：异步DNS暴力破解工具。
  - GitHub: [blark/aiodnsbrute](https://github.com/blark/aiodnsbrute)

### 安装与使用
这些工具的安装相对简单。例如，`Amass` 可以通过 `snap` 包管理器轻松安装。对于 `subfinder`，虽然它也是一个很好的工具，但安装可能较为复杂。在这种情况下，可以使用 `Sublist3r` 作为替代。

此外，还有一些在线服务可以辅助子域名收集：
- **Online Subdomain Finder**
- **Hackertarget**

## 目录枚举 & FUZZ
### 目录枚举
目录枚举是另一种常见的信息收集方法。推荐的工具包括：

- **Dirsearch**：适用于 Windows 和 Linux 的多线程目录枚举工具。
  - GitHub: [maurosoria/dirsearch](https://github.com/maurosoria/dirsearch)

#### 字典选择
目录枚举的关键在于字典的选择。一些常用的字典资源包括：

- **RobotsDisallowed**：从大量 `robots.txt` 文件中收集的字典。
  - GitHub: [danielmiessler/RobotsDisallowed](https://github.com/danielmiessler/RobotsDisallowed)
- **SVN Digger**：提供更好的强制浏览列表。
  - 网站: [Netsparker Blog](https://www.netsparker.com/blog/web-security/svn-digger-better-lists-for-forced-browsing/)
- **SecLists**：一个包含多种用途字典的集合。
  - GitHub: [danielmiessler/SecLists](https://github.com/danielmiessler/SecLists)

### FUZZ
FUZZ 是一种通过发送大量请求来发现隐藏内容的技术。推荐的工具包括：

- **parameth**：专门用于参数模糊测试。
  - GitHub: [maK-/parameth](https://github.com/maK-/parameth)
- **WFuzz**：一个功能强大的模糊测试工具。
  - GitHub: [xmendez/wfuzz](https://github.com/xmendez/wfuzz)

#### 字典选择
FUZZ 的关键也在于字典的选择。一些常用的字典资源包括：

- **IntruderPayloads**：包含各种类型的字典，如目录、上传、SQL、XSS、用户名和密码等。
  - GitHub: [1N3/IntruderPayloads](https://github.com/1N3/IntruderPayloads)
- **parameth**：专门用于参数模糊测试的字典。
  - GitHub: [maK-/parameth](https://github.com/maK-/parameth)

## 额外的信息收集
### CMS 识别
CMS 识别可以帮助我们发现已知漏洞。以下是一些有用的工具：

- **云悉**：一个国内的 CMS 识别平台。
  - 网站: [云悉](http://www.yunsee.cn/)

#### 判断 CMS 的方法
- 通过网站特有的 URL 进行判断。
- 通过文件的 MD5 值（如 `/favicon.ico`）进行判断。
- 检查响应头或页面中的 `Power by` 信息。

### JavaScript 信息收集
#### URL 收集
JavaScript 文件中可能包含未公开的敏感接口。以下是一些工具和方法：

- **Burp Suite Professional**：可以通过 `Target => Site Map => Engagement tools => Find scripts` 功能自动提取脚本。
- **javascript_files_extractor**：一个简单的 Python 脚本，用于提取单个页面中的 JavaScript 文件。
  - GitHub: [003random/003Recon](https://github.com/003random/003Recon/blob/master/tools/javascript_files_extractor.py)

#### 提取节点
- **LinkFinder**：一个用于提取 JavaScript 中节点的工具。
  - GitHub: [GerbenJavado/LinkFinder](https://github.com/GerbenJavado/LinkFinder)

### 搜索技巧
#### Google Dork
Google Dork 是一种高级搜索技术，可以帮助我们找到泄露的信息。常见的语法包括：

- `intext:"后台登陆"`
- `site:*.domain.com file type: php`
- `filetype:xlsx`

#### GitHub
在 GitHub 上也可以找到一些泄露的信息，例如：

- `"domain.com" API_KEY`
- `"domain.com" login`
- `"domain.com" password`

## 总结
本文介绍了信息收集的一些基本方法和工具，包括子域名收集、目录枚举、FUZZ、CMS 识别以及 JavaScript 信息收集。希望这些内容能帮助大家更好地进行信息收集工作。如果有任何问题或建议，请随时指出。