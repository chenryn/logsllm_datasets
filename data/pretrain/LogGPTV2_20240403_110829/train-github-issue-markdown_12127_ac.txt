    tests/test_modeling_mobilebert.py::MobileBertModelTest::test_torchscript
    tests/test_modeling_mobilebert.py::MobileBertModelTest::test_torchscript_output_attentions
    tests/test_modeling_mobilebert.py::MobileBertModelTest::test_torchscript_output_hidden_state
    src/transformers/modeling_mobilebert.py:192:
    TracerWarning: Converting a tensor to a Python index might cause the trace to be
    incorrect. We can't record the data flow of Python values, so this value will be
    treated as a constant in the future. This means that the trace might not
    generalize to other inputs! position_ids = self.position_ids[:, :seq_length]
    tests/test_modeling_mobilebert.py::MobileBertModelTest::test_torchscript
    tests/test_modeling_mobilebert.py::MobileBertModelTest::test_torchscript_output_attentions
    tests/test_modeling_mobilebert.py::MobileBertModelTest::test_torchscript_output_hidden_state
    src/transformers/modeling_mobilebert.py:534:
    TracerWarning: torch.tensor results are registered as constants in the trace.
    You can safely ignore this warning if you use this function to create tensors
    out of constant variables that would be the same every time you call this
    function. In any other case, this might cause the trace to be incorrect.
    torch.tensor(1000),
    tests/test_modeling_reformer.py::ReformerLSHAttnModelTest::test_reformer_cached_inference
      src/transformers/modeling_reformer.py:899:
      UserWarning: This overload of nonzero is deprecated: nonzero() Consider using
      one of the following signatures instead: nonzero(*, bool as_tuple) (Triggered
      internally at /pytorch/torch/csrc/utils/python_arg_parser.cpp:882.)
      relevant_bucket_idx = (bucket_idx == (bucket_idx.shape[-1] - 1)).nonzero()
    tests/test_modeling_t5.py::T5ModelTest::test_export_to_onnx
    tests/test_modeling_t5.py::T5ModelTest::test_torchscript_output_attentions
    tests/test_modeling_t5.py::T5ModelTest::test_torchscript_output_hidden_state
    src/transformers/modeling_utils.py:244:
    TracerWarning: Converting a tensor to a Python boolean might cause the trace to
    be incorrect. We can't record the data flow of Python values, so this value will
    be treated as a constant in the future. This means that the trace might not
    generalize to other inputs! if causal_mask.shape[1] . In future versions this behavior
    may lead to duplicated eos tokens being added. warnings.warn(
    tests/test_trainer.py: 44 warnings
      /home/stas/anaconda3/envs/py38-pt17/lib/python3.8/site-packages/torch/nn/parallel/_functions.py:64:
      UserWarning: Was asked to gather along dimension 0, but all input tensors were
      scalars; will instead unsqueeze and return a vector. warnings.warn('Was asked
      to gather along dimension 0, but all '
    tests/test_trainer.py::TrainerIntegrationTest::test_can_resume_training
    tests/test_trainer_callback.py::TrainerCallbackTest::test_event_flow
    /home/stas/anaconda3/envs/py38-pt17/lib/python3.8/site-packages/torch/cuda/nccl.py:48:
    DeprecationWarning: Using or importing the ABCs from 'collections' instead of
    from 'collections.abc' is deprecated since Python 3.3, and in 3.9 it will stop
    working if not isinstance(inputs, collections.Container) or isinstance(inputs,
    torch.Tensor):
    -- Docs: https://docs.pytest.org/en/stable/warnings.html
@LysandreJik