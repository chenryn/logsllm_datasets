## 0x00 前言
Shadow Force 曾在域环境中使用过一种后门技术，通过利用 MSDTC 服务加载 DLL 文件，实现自启动并绕过 Autoruns 对启动项的检测。本文将对该后门进行测试，介绍其利用技巧，并分析防御方法。

## 0x01 简介
本文将涵盖以下内容：
- MSDTC 简介
- 后门思路
- 后门验证
- 更多测试和利用方法
- 检测与防御

## 0x02 MSDTC 简介
MSDTC (Microsoft Distributed Transaction Coordinator) 是 Windows 系统中的一个默认启动服务，用于协调分布式事务。其相关信息如下：
- 服务名称：MSDTC
- 进程名称：msdtc.exe
- 位置：`%windir%\system32`
- 功能：调用 Microsoft Personal Web Server 和 Microsoft SQL Server 的进程

## 0x03 后门思路
参考链接：[相关文章](#)

后门的基本思路是：
当计算机加入域时，MSDTC 服务会在启动时搜索注册表路径 `HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\MSDTC\MTxOCI` 并尝试加载三个 DLL 文件：oci.dll, SQLLib80.dll, xa80.dll。然而，Windows 系统默认并不包含 oci.dll 文件。因此，可以通过将恶意 DLL 文件重命名为 oci.dll 并放置在 `%windir%\system32` 目录下，使得 MSDTC 服务在启动时加载该 DLL 文件，从而实现代码执行。

## 0x04 后门验证
### 测试环境
- 操作系统：Win7 x64
- 域环境搭建（具体步骤省略）

### 测试步骤
1. 使用 Procmon 监控 msdtc.exe 的启动过程。
2. 筛选进程 msdtc.exe，查看文件操作。
3. 观察到 msdtc.exe 尝试加载 oci.dll，但由于系统中不存在该文件而失败。

### 加载恶意 DLL
1. 下载 64 位测试 DLL 文件并保存至 `%windir%\system32` 目录。
2. 结束 msdtc.exe 进程：
   ```bash
   taskkill /f /im msdtc.exe
   ```
3. 等待 msdtc.exe 重新启动并加载新的 oci.dll 文件。
4. 成功加载后，calc.exe 以 system 权限启动。

**注意**：有时通过 `taskkill` 结束进程后，msdtc.exe 可能不会自动重启。此时可以手动重启服务：
```bash
net start msdtc
```

## 0x05 更多测试
### 1. 32 位系统测试
- 在 32 位系统上，只需替换为 32 位 DLL 文件即可。

### 2. 64 位系统测试
- 64 位系统中，尽管 SysWOW64 文件夹下有 32 位的 msdtc.exe，但 MSDTC 服务只会启动 64 位的 msdtc.exe，因此不支持 32 位的 oci.dll。

### 3. 通用测试
- 经测试，MSDTC 服务不仅在域环境中可用，在工作组环境下也会默认启动。因此，该利用方法同样适用于工作组环境。

### 4. 降权启动
- 若要以管理员权限加载 oci.dll，可以在管理员权限的命令提示符下执行：
  ```bash
  msdtc -install
  ```
  此时启动的 calc.exe 将具有 high 权限。

**更多关于降权启动的信息，请参阅** [渗透技巧——程序的降权启动](https://3gstudent.github.io/3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-%E7%A8%8B%E5%BA%8F%E7%9A%84%E9%99%8D%E6%9D%83%E5%90%AF%E5%8A%A8/)

## 0x06 检测与防御
### 检测
- 检查 `%windir%\system32` 目录下是否存在可疑的 oci.dll 文件。

### 防御
- 对于普通用户主机，建议禁用 MSDTC 服务。

## 0x07 小结
本文介绍了利用 MSDTC 服务加载 DLL 文件作为后门的方法，以及如何在不同环境下进行测试。此外，还提供了降权启动的相关技巧。本文由 3gstudent 原创，授权嘶吼独家发布。如需转载，请注明出处。