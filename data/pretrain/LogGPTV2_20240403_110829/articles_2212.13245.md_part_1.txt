Noname manuscript No.
(will be inserted by the editor)
Studying the Characteristics of AIOps Projects on
GitHub
Roozbeh Aghili · Heng Li · Foutse
Khomh
Received:date/Accepted:date
2202
Abstract Artificial Intelligence for IT Operations (AIOps) leverages AI ap-
proaches to handle the massive data generated during the operations of soft-
ware systems. Prior works have proposed various AIOps solutions to support ceD
different tasks in system operations and maintenance (e.g., anomaly detec-
tion). In this work, we investigate open-source AIOps projects in-depth to
understandthecharacteristicsofAIOpsinpractice.Wefirstcarefullyidentify 62
asetofAIOpsprojectsfromGitHubandanalyzetheirrepositorymetrics(e.g.,
the used programming languages). Then, we qualitatively study the projects
]ES.sc[
tounderstandtheirinputdata,analysistechniques,andgoals.Finally,wean-
alyze the quality of these projects using different quality metrics, such as the
number of bugs. We also sample two sets of baseline projects from GitHub:
a random sample of machine learning projects, and a random sample of gen-
eral purpose projects. We compare different metrics of our identified AIOps
projects with these baselines. Our results show a recent and growing interest 1v54231.2122:viXra
inAIOpssolutions.However,thequalitymetricsindicatethatAIOpsprojects
suffer from more issues than our baseline projects. We also pinpoint the most
commonissuesinAIOpsapproachesanddiscussthepossiblesolutionstoover-
come them. Our findings help practitioners and researchers understand the
current state of AIOps practices and sheds light to different ways to improve
AIOps weak aspects. To the best of our knowledge, this work is the first to
characterize open source AIOps projects.
Keywords AIOps · data mining · repository mining · qualitative analysis ·
temporal trends · source code analysis
RoozbehAghili,HengLi,FoutseKhomh
DepartmentofComputerEngineeringandSoftwareEngineering
PolytechniqueMontreal
Montreal,QC,Canada
E-mail:{roozbeh.aghili,heng.li,foutse.khomh}@polymtl.ca
2 RoozbehAghilietal.
1 Introduction
With the prevalence of generated data in large-scale systems, monitoring this
data and transforming it into practical insights is becoming a complex chal-
lenge. Artificial Intelligence for IT Operations (AIOps) has been introduced
to cope with this challenge. It combines big data, machine learning (ML) ap-
proaches, and other advanced analysis techniques (e.g., statistical analysis) to
analyze system performance patterns to be able to improve service quality
and reduce operational costs (Dang et al., 2019; Prasad and Rich, 2018). By
utilizing AIOps techniques, organizations are now able to collect and com-
bine different sources of system data and use them to perform various tasks
(e.g., anomaly detection or failure prediction) in their DevOps or operations
environment (Dang et al., 2019; Prasad and Rich, 2018).
A considerable amount of research has been performed on the topic of
AIOps.PriorworkhasproposedAIOpssolutionsforvariousmaintenanceand
operations tasks, such as predicting node failures (Li et al., 2020; Lin et al.,
2018), predicting task or job failures (El-Sayed et al., 2017; Gao et al., 2020;
Rosà et al., 2015), anomaly detection (He et al., 2018; Lim et al., 2014), and
self healing (Ding et al., 2012, 2014). However, no work has systematically
studied AIOps practices in real-world projects (e.g., public GitHub projects).
Studying AIOps practices in real-world projects is important and has sev-
eral benefits, including (1) helping researchers and practitioners understand
thecurrentstatusofAIOpssolutionsandthecharacteristicsofAIOpsprojects;
(2)providingguidanceforresearchersandpractitionerstoadoptbestperform-
ing AIOps solutions for their application scenarios; and (3) identifying prob-
lems in AIOps practices and shedding lights on future research opportunities.
Therefore, this work identifies and studies a set of AIOps projects pub-
licly available on GitHub. We analyze these projects from different aspects
(e.g., repository characteristics, goals, and code quality) and perform both
quantitative and qualitative analyses to comprehend the practices of AIOps
in real-world projects. We also compare the selected AIOps projects with two
baselines: traditional ML projects and General purpose projects. We specifi-
cally aim to answer the following three research questions (RQs).
RQ1 What are the characteristics of AIOps projects in terms of
their GitHub metrics? We analyze the GitHub metrics of AIOps and
baseline projects to understand the current status of AIOps projects and
also compare them with baselines in terms of their GitHub metrics such
as the programming languages and the number of stars. We observe that
AIOpssolutionsarebeingdevelopedwithafastergrowthratecomparedto
the baselines. AIOps projects also have a higher distribution of popularity
metrics (e.g., number of stars and forks), and also more pull requests and
issues compared to baselines.
RQ2 What are the characteristics of AIOps projects in terms of
their input data, analysis techniques, and goals? Inordertounder-
stand the characteristics of AIOps projects (i.e., their input data, analy-
StudyingtheCharacteristicsofAIOpsProjectsonGitHub 3
sis techniques, and goals), we manually investigate each of these projects.
We find that monitoring data (e.g., logs and performance metrics) is the
most used input data, classical machine-learning techniques are the most
adopted analysis techniques, and anomaly detection is the primary goal of
many AIOps projects.
RQ3 What is the code quality of AIOps projects? We further analyze
the source code of AIOps and baseline projects to identify any interesting
patterns related to their quality. We find that AIOps projects have higher
issue rate, specifically in terms of bugs, code smells, and technical debt,
than the baselines.
We share our replication package on GitHub 1 so that future work can re-
produceorextendourstudy.Ourworkmakesseveralimportantcontributions:
1. As the first study on AIOps practices in real-world projects, our work
helps practitioners and researchers understand the status of AIOps from a
practical point of view.
2. Our qualitative analysis of the input data, analysis techniques, and goals
of the AIOps projects can help practitioners and researchers consider and
adopt AIOps solutions that fit into their specific application scenarios.
3. Our work identifies problems in AIOps practices (e.g., code quality) and
sheds light on future research opportunities in AIOps.
Therestofthepaperisorganizedasfollows.Section2describestheexperi-
mentsetupofourstudy,includingthecollectionandpreparationoftheAIOps
project data used for answering our research questions. Section 3 presents our
approach and results for answering the research questions. Section 4 provides
furtherdiscussionsofourresults.Section5discussesthethreatstothevalidity
of our findings. Section 6 summarizes prior research related to our work, and
finally, Section 7 concludes our paper.
2 Experiment Setup
This section describes our approach for collecting the AIOps and baseline
projects. We first present the overview of our study, then describe the steps
for collecting and verifying AIOps and baseline projects, respectively.
2.1 Overview of our study
Figure 1 presents an overview of our approach for studying the characteristics
of AIOps projects. We select our projects from GitHub which is the largest
code hosting site with over 330 million repositories. We start by searching
the projects with the keyword “AIOps”. Then, through manual verification
(e.g.,removingnon-AIOpsprojects),keywordexpansion(i.e.,throughpattern
1https://github.com/AIOpsstudy/understanding_aiops
4 RoozbehAghilietal.
4 Search AIOps
Search AIOps Keyword keywords projects (2nd 383projects
projects (1stround) extraction round) and
Manual
filtering
505 projects verification
84 40 57 projects
Manual projects projects 97 AIOps
Filtering
verification projects Qualitative analysis RQ2
75,198
projects
Search ML projects Sampling 10*383 ML Quantitative analysis RQ1
projects
3,796,841
Search General projects
Sampling Code quality analysis RQ3
projects 10*385 General
projects
Fig. 1: An overview of our study.
mining), second-round search and manual verification, and threshold-based
filtering (e.g., by the number of stars), we collect a total of 97 AIOps projects
that are used to answer our research questions. In order to better understand
the characteristics of AIOps projects in a bigger context, we also compare our
identified AIOps projects with two baselines:
1. randomly sampled machine learning (ML) projects;
2. randomly sampled general projects
We choose the ML baseline because most of the AIOps projects leverage ML
techniques. We choose the General baseline to compare our AIOps projects
with general software applications on GitHub. Finally, we perform qualita-
tive and quantitative analyses on the collected data to answer our research
questions. Below, we describe the details of our data collection. The detailed
approaches for answering our research questions are presented in Section 3.
2.2 Collecting AIOps Projects
Through two rounds of searching AIOps related keywords on GitHub, we col-
lect a total of 888 candidate projects. Through filtering and manual verifi-
cation, we end up with 97 of them as our final set of AIOps projects. The
methodology we use to select these projects follows the systematic approach
recommendedby(Basilietal.,1986)andisdescribedinthefollowingsections.
2.2.1 Search AIOps projects (first round)
Inthefirststepoffindingagoodsetofprojects,wesearchfortherepositories
that specifically indicate themselves as an AIOps project. For this purpose,
we use the GitHub interface and look for projects that match the keyword
“AIOps”. Our search looks at four sections of a repository and checks if the
StudyingtheCharacteristicsofAIOpsProjectsonGitHub 5
searchedphraseexistsinthesesections.Thesefoursectionsaretherepository
name, the “about” section, the “topics” section, and the “readme” file. After
searching for the keyword “AIOps”, we find 505 repositories.
2.2.2 Manual verification (first round)
Based on existing definitions of AIOps (Dang et al., 2019; Prasad and Rich,
2018), we consider AIOps projects as: any project that uses IT Operations-
related data, utilizes advanced analysis technologies such as machine-learning
orstatisticalanalysis,toreachvaluableinsightsorenhancethesystem’squal-
ity by actions such as monitoring and automation.
Therefore, not all the 505 discovered repositories are good AIOps candi-
dates and suitable for our study. We hence select our subject projects based
on three criteria:
1. The project should be about AIOps, not similar topics such as Machine
LearningOperations(MLOps)2orDevelopmentandOperations(DevOps)3.
Therefore, we delete the projects that are mainly about other topics.
2. The projects should contain sufficient code and be mature. Therefore, we
deletetherepositoriesthatdonothavecodeandareacollectionofpapers,
slides, or other repositories. However, we accept the projects that have
created a dataset so that other developers and researchers can use it in
their work.
3. The project should not be a toy project: we delete the projects that are
homework assignments or university projects.
To select the desirable projects based on the explained criteria, the first
twoauthorsofthepaper(i.e.,coders)jointlyperformacodingprocess,adding
a YES (AIOps projects) or NO (non-AIOps projects) tag to each project. We
perform the coding process as below.
Step 1: Coding. Each coder analyzes all the 505 repositories and solely
decides if each project should be added to the final list of projects.
Step 2: Discussion. The coders share their responses and discuss their
approachesforselectingaproject.Thediscussionsession’sgoalistoreachthe
same understanding of the inclusion criteria among the coders.
Step 3: Revision. Based on the discussion, each coder revises their re-
sponses from step 1.
Step 4: Resolving disagreements. In the last step, the coders discuss
anyconflictsthatmayremainandtrytoresolvethem.Ifanagreementcannot
bereached,thethirdauthorwouldanalyzetheprojectandavoteisperformed.
After performing the manual verification process, we obtain a total of 84
candidateAIOpsprojectsfromthe505projectsderivedfromthesearchresults;
which corresponds to a selection rate of 17%.
2Asetofpracticestomaintainanddeploymachinelearningmodels.
3Asetofpracticesthataimtoshortenthesystemdevelopmentlifecyclewhilepreserving
highquality.
6 RoozbehAghilietal.
2.2.3 Keyword extraction (pattern mining)
Tohaveacomprehensiveviewofreal-worldAIOpsprojects,limitingoursearch
toonekeyword(i.e.,“AIOps”)isnotthorough.Thisismainlybecausetheterm
“AIOps” was introduced in 2018 (Prasad and Rich, 2018), and some projects
might exist before introducing this terminology that are implementing AIOps
solutions but are not using the exact term. Hence, we expand our keywords
to find more projects that do not explicitly indicate themselves as AIOps
repositories but actually are. For doing so, we first extract all the topics of
each of the 84 AIOps projects resulted from the previous step. The topics of
each project are available in the “topic” section of each GitHub repository.
Thenweusefrequentpatternmining(Hanetal.,2007)whichisananalyt-
icalprocesstofindtheassociationsandpatternsinadataset.Specifically,we
utilizethefrequentpatterngrowthmethod(Hanetal.,2000,2004)tofindthe
mostcommontopicsofGitHubrepositories.Wesetthesupportofthemethod
to2,meaningthatthepatternshouldappearinatleasttwoprojects.Intotal,
wefind194patternsbetweenthetopics.Next,weperformadiscussionsession
between all three authors to decide which patterns might be good candidates
for finding more AIOps projects. We select four pairs of two-item patterns:
“anomaly detection” and “log analysis”, “log analysis” and “machine learning”,
“anomalydetection” and“machinelearning”,aswellas“machinelearning” and