title:Poking a Hole in the Wall: Efficient Censorship-Resistant Internet
Communications by Parasitizing on WebRTC
author:Diogo Barradas and
Nuno Santos and
Lu&apos;ıs E. T. Rodrigues and
V&apos;ıtor Nunes
Poking a Hole in the Wall: Eicient Censorship-Resistant
Internet Communications by Parasitizing on WebRTC
Diogo Barradas, Nuno Santos, Luís Rodrigues, Vítor Nunes
INESC-ID, Instituto Superior Técnico, Universidade de Lisboa
{diogo.barradas,nuno.m.santos,ler,vitor.sobrinho.nunes}@tecnico.ulisboa.pt
ABSTRACT
Many censorship circumvention tools rely on trusted proxies that
allow users within censored regions to access blocked Internet con-
tent by tunneling it through a covert channel (e.g,. piggybacking on
Skype video calls). However, building tools that can simultaneously
(i) provide good bandwidth capacity for accommodating the typical
activities of Internet users, and (ii) be secure against trac analysis
attacks has remained an open problem and a stumbling block to
the practical adoption of such tools for censorship evasion.
We present Protozoa, a censorship-resistant tunneling tool fea-
turing both high-performing covert channels and strong trac
analysis resistance. To create a covert channel, a user only needs to
make a video call with a trusted party located outside the censored
region using a popular WebRTC streaming service, e.g., Whereby.
Protozoa can then covertly tunnel all IP trac from unmodied
user applications (e.g., Firefox) through the WebRTC video stream.
This is achieved by hooking into the WebRTC stack and replacing
the encoded video frame data with IP packet payload, while ensur-
ing that the payload of the WebRTC stream remains encrypted, and
the stream’s statistical properties remain in all identical to those
of any common video call. This technique allows for sustaining
enough throughput to enable common-use Internet applications,
e.g., web browsing or bulk data transfer, and avoid detection by
state-of-the-art trac analysis attacks. We show that Protozoa is
able to evade state-level censorship in China, Russia, and India.
CCS CONCEPTS
• Security and privacy ! Network security; • Social and pro-
fessional topics ! Technology and censorship.
KEYWORDS
Censorship circumvention; Trac analysis; WebRTC
ACM Reference Format:
Diogo Barradas, Nuno Santos, Luís Rodrigues, Vítor Nunes. 2020. Poking
a Hole in the Wall: Ecient Censorship-Resistant Internet Communica-
tions by Parasitizing on WebRTC. In Proceedings of the 2020 ACM SIGSAC
Conference on Computer and Communications Security (CCS ’20), Novem-
ber 9–13, 2020, Virtual Event, USA. ACM, New York, NY, USA, 14 pages.
https://doi.org/10.1145/3372297.3417874
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for prot or commercial advantage and that copies bear this notice and the full citation
on the rst page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specic permission and/or a
fee. Request permissions from permissions@acm.org.
CCS ’20, November 9–13, 2020, Virtual Event, USA
© 2020 Association for Computing Machinery.
ACM ISBN 978-1-4503-7089-9/20/11...$15.00
https://doi.org/10.1145/3372297.3417874
1 INTRODUCTION
State-level censors are known to apply techniques to prevent free ac-
cess to information on the Internet. In fact, many countries have de-
ployed a vast censorship apparatus to exercise control over available
content, namely China [41], Russia [60], Iran [1], Bangladesh [52],
India [82], Thailand [26], or Syria [11]. For instance, amidst the re-
cent Coronavirus outbreak, the chinese government has shut down
news websites [31] and instructed chinese social media platforms
to censor references and keywords related to the infection [10, 64],
in an attempt to handle the sharing of negative coverage within and
outside the country. This control can be enforced through various
techniques, such as keyword-based lters [80, 81], image lters [43],
social platform monitoring [32, 42], and even the entire blocking
of Internet destinations [57] or selected protocols [18].
To evade censorship, many circumvention tools have been pro-
posed for enabling users to freely access/share information on the
Internet [39, 69]. Typically, such tools rely on covert channels to
allow for the stealthy transmission of sensitive data through an
apparently innocuous carrier medium [39, 84], for instance a multi-
media streaming carrier application like Skype. The key idea is to
encode the covert data in such a way that an adversary capable of
inspecting the full packet exchange cannot distinguish between a le-
gitimate transmission and one that subliminally carries covert data.
This general approach, which we call multimedia covert streaming,
can typically be achieved in two ways: i) by entirely mimicking the
carrier’s network-level protocols [51] (media protocol mimicking),
or ii) by embedding the covert data into the video (or audio sig-
nal) feed of the carrier application in the course of a regular video
call [3, 36, 44, 46, 50] (raw media tunneling).
Given that all the carrier’s trac is encrypted, one way for an
adversary to counter potential covert channels is to blatantly block
all trac generated by the carrier application. This method, how-
ever, can bring harmful side-eects even for a state-level adversary.
In fact, considering how instrumental many media streaming appli-
cations are for the tissue of economic and social interactions within
censored regions, the costs of shutting down popular applications
can be overwhelming and erode even further the state’s reputa-
tion in the eyes of its international peers. Leveraging on essential
streaming applications can then serve as a strong deterrent for the
enforcement of blocking policies, and constitutes the key insight
that favors the eectiveness of multimedia covert streaming [21].
Nevertheless, an adversary can employ a second class of tech-
niques based on trac analysis. Essentially, it involves probing into
the censored network region, inspecting the trac generated by a
presumable carrier application, and looking for discrepancies in the
trac (e.g., abnormal patterns) that might signal the presence of
covert channels. Hence, it follows that an eective tool for multime-
dia covert streaming must be able to resist these kinds of attacks by
Session 1A: Anonymous Routing and Censorship CCS '20, November 9–13, 2020, Virtual Event, USA35exhibiting trac patterns that will ideally be indistinguishable from
legitimate trac. In other words, when picking from two sampled
ows – one legitimate ow and one crafted ow containing covert
data – the adversary must not be able to distinguish them but by
random guessing, i.e., with 50% chance of success.
Unfortunately, the existing tooling support for multimedia covert
streaming is quite bleak. Several studies revealed that the presence
of modulated covert trac can be detected solely based on the
analysis of trac features such as packet sizes and packet inter-
arrival times [4, 27]. In fact, machine learning (ML)-based trac
analysis techniques can eectively detect small changes in the
packet frequency distributions caused by the embedding of covert
data inside carrier video streams, namely deviations in the packet
sizes and inter-packet arrival times when compared with legitimate
trac. Most existing tools fail this test and are prone to be detected
with high accuracy rates [4]. While some tools like DeltaShaper [3]
can tolerate detection to some degree, they do so at the expense of
reducing the amount of covert data embedded into the cover video
stream, severely limiting the covert channel bandwidth capacity
that can be attained. For instance, in DeltaShaper, the maximum
achievable throughput is only 7 Kbps, which is clearly insucient
for sustaining the trac generated by common Internet users, e.g.,
interactive web browsing, media streaming, or bulk data transfers.
This paper presents Protozoa, a new multimedia covert stream-
ing tool that provides good performance for the covert transmission
of arbitrary IP trac while featuring strong resistance to detection
when subjected to ML-based trac analysis by a state-level adver-
sary. In particular, Protozoa allows an Internet user (client) located
in a censored region to access blocked content by leveraging the
help of a trusted user in the free region who will act as a proxy on
the client’s behalf. Protozoa enables then to create a bidirectional
covert tunnel between both endpoints. Henceforth, the client can
start browsing the web freely: the local IP trac will be transpar-
ently redirected through the covert tunnel to its nal destination
host in the free region, e.g., YouTube. This local application is not
restricted to a browser: Protozoa can tunnel IP trac from arbitrary
unmodied applications, e.g., email or BitTorrent clients.
Protozoa advances the state-of-the-art by incorporating two
new ideas in its design. First, to enable the transmission of covert
trac, it uses web streaming applications based on WebRTC which
are very popular and widely disseminated. Concretely, to create a
covert tunnel, all that two users – client and proxy – need to do is
to establish a video call using a WebRTC-enabled web streaming
website, such as Whereby (https://whereby.com). Protozoa uses the
video call’s associated WebRTC media stream to tunnel covert IP
trac between both endpoints. Second, to encode the covert signal
into the carrier stream, Protozoa introduces a technique named
encoded media tunneling, which allows for boosting the capacity of
covert channels while oering strong resistance to trac analysis
attacks. It consists of embedding the covert data into encoded video
frames, i.e., right after the lossy compression has been applied by
the video codec. This mechanism is implemented by modifying the
WebRTC stack of Protozoa’s Chromium browser component.
We extensively evaluated our Protozoa prototype both through
a set of microbenchmarks resorting to media sessions established
over Whereby, and by testing it in various realistic usage scenarios
and workloads. Our results showed that, under normal network
Ra(cid:81)d(cid:82)(cid:80)
G(cid:88)e(cid:86)(cid:86)
e
a
R
n
o
t
t
i
t
c
e
e
D
Pe(cid:85)(cid:73)ec(cid:87)
G(cid:88)e(cid:86)(cid:86)
50%
60%
70%
80%
(cid:28)0%
100%
P(cid:85)(cid:82)(cid:87)(cid:82)(cid:93)(cid:82)a 
55% - 65%
better
Del(cid:87)aSha(cid:83)e(cid:85)
85% - 95%
Cen(cid:86)(cid:82)(cid:85)S(cid:83)(cid:82)(cid:82)fe(cid:85) 
> 99.9%
F(cid:85)eeWa(cid:89)e
(cid:172)(cid:172)> 99.9%
C(cid:82)(cid:89)e(cid:85)(cid:87)Ca(cid:86)(cid:87)(cid:172)
> 99.9%
Sk(cid:92)(cid:83)eM(cid:82)(cid:85)(cid:83)h 
> 99.9%
Face(cid:87)
(cid:172)(cid:172)> 99.9%
1 (cid:46)(cid:69)(cid:83)(cid:86)
10 (cid:46)(cid:69)(cid:83)(cid:86)
100 (cid:46)(cid:69)(cid:83)(cid:86)
(cid:172)Channel(cid:172)Bandwidth
1 (cid:48)(cid:69)(cid:83)(cid:86)
10 (cid:48)(cid:69)(cid:83)(cid:86)
Media P(cid:85)(cid:82)(cid:87)(cid:82)c(cid:82)l Mimicking
Enc(cid:82)ded Media T(cid:88)nneling
Ra(cid:90) Media T(cid:88)nneling
Figure 1: Design space of multimedia covert streaming tools
along two dimensions: covert channel capacity (X-axis), and
trac analysis resistance (Y-axis). Darker shades indicate in-
creasing chances of detection, i.e., tools are more insecure.
Protozoa outperforms the existing systems in both dimen-
sions. A detailed analysis of this plot is found in Section 9.1.
conditions, Protozoa can deliver covert channel bandwidth capaci-
ties in the order of 1.4Mbps and channel eciency of 98.8%, while
providing strong resistance to trac analysis using state-of-the-art
ML-based techniques [4]. As illustrated in Figure 1, these results
represent a signicant departure over existing media covert stream-