    这种丢弃方式是 [**fstrim**]{.application}
    指令的一部分。它丢弃文件系统中与管理员指定的标准相配的所有不使用的块。
    :::
    ::: para
    红帽企业版 Linux 7 支持 XFS 和 ext4 格式化设备上的 batch
    discard，这些设备支持实际丢弃操作即（
    `/sys/block/devname/queue/discard_max_bytes`{.filename} 值不为 0 的
    HDD 设备，和 `/sys/block/sda/queue/discard_granularity`{.filename}
    不为 `0`{.literal} 的 SSD 设备）。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Maintenance-Online_discard}[online discard（网络丢弃）]{.term}
:   ::: para
    这种方式的丢弃操作在挂载时间使用 `discard`{.option}
    选项配置，实时运行不受用户干扰。然而，online discard
    只丢弃从使用转换到空闲的块。红帽企业版 Linux 7 支持 XFS 和 ext4
    格式化设备上的 online discard。
    :::
    ::: para
    红帽推荐 batch discard，除非要求用 online discard 维持性能，或 batch
    discard 不可用于系统工作负载。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Maintenance-Pre_allocation}[预先分配]{.term}
:   ::: para
    预先分配将硬盘空间标记为已经将磁盘空间分配给一个文件，而未将数据写入该空间。这可用于限制数据碎片和较差的读取性能。红帽企业版
    Linux 7 支持挂载时间内 XFS、ext4、 和 GFS2
    设备上预先分配空间。对您文件系统的合适参数，请参见 `mount`{.command}
    手册页。应用程序也可通过使用 `fallocate(2)`{.methodname}
    `glibc`{.systemitem} 调用从预先分配空间受益。
    :::
:::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#sect-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems-Monitoring_and_diagnosing_performance_problems}5.2. 性能问题监控和诊断 {.title}
:::
::: para
红帽企业版 Linux 7 提供一些工具，这些工具有助于监控系统性能和诊断与
I/O、文件系统及其配置相关性能问题。此章节概述可用的工具，并列举如何使用这些工具监控和诊断与
I/O 及文件系统相关的性能问题的例子。
:::
::: section
::: titlepage
## [⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#sect-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Monitoring_and_diagnosing_performance_problems-Monitoring_system_performance_with_vmstat}5.2.1. 使用 vmstat 监控系统性能 {.title}
:::
::: para
Vmstat 报告整个系统的进程、内存、分页、阻止 I/O、中断和 CPU
活动。它能帮助管理员决定 I/O 子系统是否对任何性能问题负责。
:::
::: para
下列是与 I/O 性能最相关的信息：
:::
::: variablelist
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Monitoring_system_performance_with_vmstat-si}[si]{.term}
:   ::: para
    切换进硬盘，或者以 KB 为单位写入交换空间。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Monitoring_system_performance_with_vmstat-so}[so]{.term}
:   ::: para
    从硬盘中切换出，或者以 kb 为单位从交换空间读取。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Monitoring_system_performance_with_vmstat-bi}[bi]{.term}
:   ::: para
    写入块，或者以 kb 为单位阻止写操作。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Monitoring_system_performance_with_vmstat-bo}[bo]{.term}
:   ::: para
    读取块，或者以 kb 为单位阻止读操作。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Monitoring_system_performance_with_vmstat-wa}[wa]{.term}
:   ::: para
    等待 I/O 操作完成的队列部分。
    :::
:::
::: para
交换空间和数据在同一设备上时，而且是内存使用指示器，切换进硬盘和从硬盘中切换出尤为有用。
:::
::: para
另外，空闲、缓存和缓存列能帮助识别回写频率。缓存值突然下降和空闲值的增加表明回写和页面缓存无效。
:::
::: para
如果使用 [**vmstat**]{.application} 的分析显示 I/O
子系统对性能下降负责，管理员可用 [**iostat**]{.application}
确定承担责任的 I/O 设备。
:::
::: para
[**vmstat**]{.application} 由软件包 [procps-ng]{.package} 提供。更多使用
[**vmstat**]{.application} 的信息，请参见手册页：
:::
``` screen
$ man vmstat
```
:::
::: section
::: titlepage
## [⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#sect-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Monitoring_and_diagnosing_performance_problems-Monitoring_IO_performance_with_iostat}5.2.2. 使用 iostat 监控 I/O 性能 {.title}
:::
::: para
[**Iostat**]{.application} 是由 [sysstat]{.package}
软件包提供的。它报告加载在您系统中的 I/O 设备。如果使用
[**vmstat**]{.application} 的分析显示 I/O
子系统对性能下降负责，您可以使用 [**iostat**]{.application} 来确定负责的
I/O 设备。
:::
::: para
您可以使用 [**iostat**]{.application} 手册页中定义的参数，将
[**iostat**]{.application} 报告的输出集中在特定设备上。
:::
``` screen
$ man iostat
```
::: section
::: titlepage
### [⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#sect-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Monitoring_IO_performance_with_iostat-Detailed_IO_analysis_with_blktrace}5.2.2.1. 使用 blktrace 详细说明 I/O 分析 {.title}
:::
::: para
[**Blktrace**]{.application} 提供 I/O
子系统上时间如何消耗的详细信息。配套工具 [**blkparse**]{.application} 从
[**blktrace**]{.application}
读取原始输出，并产生人们可读的输入和输出操作摘要，该摘要由
[**blktrace**]{.application} 记录。
:::
::: para
更多此工具的细节请参见手册页：
:::
``` screen
$ man blktrace
```
``` screen
$ man blkparse
```
:::
::: section
::: titlepage
### [⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#sect-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Monitoring_IO_performance_with_iostat-Analyzing_blktrace_output_with_btt}5.2.2.2. 用 btt 分析 blktrace 输出 {.title}
:::
::: para
[**Btt**]{.application} 作为 [blktrace]{.package}
软件包的一部分而被提供。它分析 [**blktrace**]{.application}
输出，并显示该数据用在每个 I/O 栈区域的时间量，使它更容易在 I/O
子系统中发现瓶颈。
:::
::: para
例如，如果 [**btt**]{.application}
显示发送至块层（`Q2Q`{.literal}）的请求之间的时间比用于块层（`Q2C`{.literal}）的请求之间的总时间长，那么
I/O
子系统可能不对性能问题负责。如果设备花了很长时间处理请求（`D2C`{.literal}），该设备可能超载，或者发送给该设备的工作负载可能不是最佳的。如果块
I/O 队列等待很长时间，请求（`Q2G`{.literal}）才分配给块 I/O
队列，这可能表明正在使用的存储不能够为 I/O 负载提供服务。
:::
::: para
更多此工具的细节请参见手册页：
:::
``` screen
$ man btt
```
:::
::: section
::: titlepage
### [⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#sect-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Monitoring_IO_performance_with_iostat-Analyzing_blktrace_output_with_seekwatcher}5.2.2.3. 使用 seekwatcher 分析 blktrace 输出 {.title}
:::
::: para
[**seekwatcher**]{.application} 工具可使用 [**blktrace**]{.application}
输出随时间绘制 I/O 图表。它集中在硬盘 I/O 的
LBA（逻辑块地址）、每秒以兆计算的吞吐量、每秒搜寻的数量和每秒 I/O
操作。这能帮助您了解何时达到设备操作系统每秒的限制。
:::
::: para
更多此工具的细节请参见手册页：
:::
``` screen
$ man seekwatcher
```
:::
:::
::: section
::: titlepage
## [⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#sect-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Monitoring_and_diagnosing_performance_problems-Storage_monitoring_with_SystemTap}5.2.3. 使用 SystemTap 监控存储 {.title}
:::
::: para
《*红帽企业版 Linux 7 SystemTap 入门指南*》
包含几个有助于配置和监控存储性能的示例脚本。
:::
::: para
下列的 [**SystemTap**]{.application}
示例脚本与存储性能有关，并可能有助于诊断存储或文件系统性能问题。默认设置下，安装它们至
`/usr/share/doc/systemtap-client/examples/io`{.filename} 目录下。
:::
::: variablelist
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_monitoring_with_SystemTap-disktop.stp}[`disktop.stp`{.filename}]{.term}
:   ::: para
    每 5 秒检查读／写硬盘状态并输出在此期间的前十项。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_monitoring_with_SystemTap-iotime.stp}[`iotime.stp`{.filename}]{.term}
:   ::: para
    显示用在读操作和写操作的时间量，以及读和写的字节量。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_monitoring_with_SystemTap-traceio.stp}[`traceio.stp`{.filename}]{.term}
:   ::: para
    根据观察到的累计 I/O 流，显示每秒前十项可执行文件。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_monitoring_with_SystemTap-traceio2.stp}[`traceio2.stp`{.filename}]{.term}
:   ::: para
    在特定设备进行读和写操作时，显示可执行的名称和进程标识符。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_monitoring_with_SystemTap-inodewatch.stp}[`inodewatch.stp`{.filename}]{.term}
:   ::: para
    每当在特定主要／次要设备上的特定 inode
    上进行读或者写操作时，显示可执行的名称和进程标识符。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_monitoring_with_SystemTap-inodewatch2.stp}[`inodewatch2.stp`{.filename}]{.term}
:   ::: para
    每当在特定主要／次要设备上的特定 inode
    上属性发生变化时，显示将可执行的名称、进程标识符、和属性。