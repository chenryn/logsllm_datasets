title:IBBE-SGX: Cryptographic Group Access Control Using Trusted Execution
Environments
author:Stefan Contiu and
Rafael Pires and
S&apos;ebastien Vaucher and
Marcelo Pasin and
Pascal Felber and
Laurent R&apos;eveillère
IBBE-SGX: Cryptographic Group Access Control
using Trusted Execution Environments
Stefan Contiu∗‡, Rafael Pires†, S´ebastien Vaucher†, Marcelo Pasin†, Pascal Felber† and Laurent R´eveill`ere∗
∗University of Bordeaux, France, PI:EMAIL
†University of Neuchˆatel, Switzerland, PI:EMAIL
‡Scille SAS, France
8
1
0
2
l
u
J
7
2
]
R
C
.
s
c
[
2
v
3
6
5
1
0
.
5
0
8
1
:
v
i
X
r
a
Abstract—While many cloud storage systems allow users to
protect their data by making use of encryption, only few support
collaborative editing on that data. A major challenge for enabling
such collaboration is the need to enforce cryptographic access
control policies in a secure and efﬁcient manner. In this paper,
we introduce IBBE-SGX, a new cryptographic access control
extension that is efﬁcient both in terms of computation and
storage even when processing large and dynamic workloads of
membership operations, while at the same time offering zero
knowledge guarantees.
IBBE-SGX builds upon Identity-Based Broadcasting Encryp-
tion (IBBE). We address IBBE’s impracticality for cloud de-
ployments by exploiting Intel Software Guard Extensions (SGX)
to derive cuts in the computational complexity. Moreover, we
propose a group partitioning mechanism such that the compu-
tational cost of membership update is bound to a ﬁxed constant
partition size rather than the size of the whole group. We have
implemented and evaluated our new access control extension.
Results highlight that IBBE-SGX performs membership changes
1.2 orders of magnitude faster than the traditional approach of
Hybrid Encryption (HE), producing group metadata that are 6
orders of magnitude smaller than HE, while at the same time
offering zero knowledge guarantees.
I. INTRODUCTION
Cloud storage services such as Amazon Web Services,
Google Cloud Platform or Microsoft Azure have shown rapid
adoption during the last years [1]. However, they lack in
offering trustworthiness and conﬁdentiality guarantees to end
users. Although threats commonly originate from malicious
adversaries breaching security measures to gain access to
user data, the menace can also come from an employee with
generous privileges, or curious governments warranting data
collection for national
interest. To overcome these issues,
many approaches rely on the construction of cryptographic
solutions in which the data is secured on the client side before
reaching the storage premises [2], therefore mitigating the lack
of trust in the cloud provider.
To enable collaborative operations on the already secured
data, one needs to enforce access control policies. Because
of the untrusted nature of cloud storage, such administrative
operations also need to be cryptographically protected. En-
forcing cryptographic access control on an untrusted cloud
storage context is subject to a number of requirements. First,
access control schemes should incur as low trafﬁc overhead
as possible because cloud storages have slower response times
in comparison to traditional storage mediums. Second, since
a realistic and dynamic membership operations pattern [3]
coupled with large volumes of users can make the system un-
usable in practice, the system must be limited to an acceptable
computational bound. Third, as only privileged users perform
access control operations, it is required that they gain zero
knowledge to the data content to which the policy is applied.
Last, identities normally employed by users when interacting
with the cloud storage (i.e. existing credentials) should be
sufﬁcient for membership operations, hence avoiding complex
trust establishment protocols.
A number of cryptographic constructions have been pro-
posed for achieving access control. The simplest one, pop-
ularly referred to as Hybrid Encryption (HE), makes use of
symmetric and public-key cryptography, by employing the
former on the actual data and the latter on the symmetric
key [4]. Other approaches rely on pairing-based cryptography
as a substitute for public-key cryptography, and offer different
levels of granularity for specifying access control policies. A
few examples include: Identity Based Encryption (IBE) [5]
which works similarly to public-key encryption at the identity
level; Attribute-Based Encryption (ABE) [6] that supports a
richer tree-like access policy expressiveness; or Identity-Based
Broadcasting Encryption (IBBE) [7] that can capture group-
like policies. Similarly, Identity-based proxy re-encryption
relies on a semi-trusted middle entity to whom users delegate
the re-encryption rights [8].
Unfortunately, pairing-based constructions suffer from im-
portant performance issues. According to Garrison et al. [3],
they are an order of magnitude slower than public-key cryptog-
raphy. Remarkably, even Hybrid Encryption with Public Key
(HE-PKI) incurs prohibitive costs for dynamic access control
(see Figure 2). Moreover, the aforementioned constructions do
not guarantee our zero knowledge requirement.
In this paper, we introduce a new cryptographic access con-
trol scheme that is both computationally- and storage-efﬁcient
considering a dynamic and large set of membership operations,
while offering zero knowledge guarantees. Zero knowledge
is guaranteed by executing the cryptographic access control
membership operations in a Trusted Execution Environment
(TEE).1 Our scheme is based on IBBE which is known to
be ﬂexible enough to produce small constant policy sizes.
Its main drawback is its high impracticable computational
cost. Our solution is to execute the membership operations
1Only membership operations rely on the TEE; user operations are done
in a conventional execution environment.
c(cid:13)2018 IEEE. Personal use of this material is permitted. Permission from IEEE must be obtained for all other uses, in any current or future media, including
reprinting/republishing this material for advertising or promotional purposes, creating new collective works, for resale or redistribution to servers or lists, or
reuse of any copyrighted component of this work in other works. Pre-print version. Presented in the 48th IEEE/IFIP International Conference on Dependable
Systems and Networks (DSN ’18). For the ﬁnal published version, refer to DOI 10.1109/DSN.2018.00032
of IBBE within the TEE so that we can make use of a master
secret key. The TEE guarantees that this secret stays within
the trusted computing boundary. We can therefore propose an
optimization of a well-studied IBBE scheme [9] that drasti-
cally reduces its computational complexity. A remaining issue
is the computational complexity required for users to derive
membership changes. To mitigate this last aspect, we propose
a group partitioning mechanism such that the computational
cost on the user-side is bound to a ﬁxed constant partition size
rather than the potential large group size.
We have implemented our new access control scheme using
Intel Software Guard Extensions (SGX) as TEE. To the best
of our knowledge, we are the ﬁrst
the pairing-
based-speciﬁc library PBC [10] and its underlying dependency
GMP [11] to accurately run within SGX. Moreover, we
deployed our system on a commercially-available public cloud
storage. Our evaluation shows that our scheme only requires
few resources while performing better than HE, in addition to
providing zero knowledge.
to adapt
To summarize, our contributions are the following:
• We propose a new approach to IBBE by conﬁding in Intel
SGX. To the best of our knowledge, this is the ﬁrst effort
seeking to lower the computational complexity bound
of a well-studied IBBE scheme using TEEs as enabling
technology. Additionally, our scheme only requires TEE
support for a minimal set of users (i.e. administrators).
• We instantiate the novel IBBE-SGX construction to an
access control system hosted on a honest-but-curious
cloud storage, proposing an original partitioning scheme
that lowers the time required by users to ingest access
control changes.
• We fully implemented our original access control sys-
tem and evaluated it against a realistic setup. We con-
ducted extensive evaluations, showing that our system
surpasses the performances obtained using state-of-the-
art approaches.
Even though the main motivation for this work is to securely
share data in a cloud environment,
the proposed solution
can be applied for encrypting arbitrary information that is
securely broadcasted to a group of users over any shared
media. Some other examples, besides cloud storages, are peer-
to-peer networks or pay-per-view TV.
The rest of the paper is organized as follows. Section II
presents the model assumptions undertaken within the problem
context. We provide some background about Intel SGX and
cryptographic schemes in Section III. Section IV presents the
unique constructions that allow us to lower the complexity of
an access control scheme by relying on a TEE. In the second
part of that section, details about the partitioning mechanism
are shown. We describe the design and implementation of an
end-to-end system built on top of the scheme in section V.
Section VI presents the evaluation of our solution by perform-
ing both micro- and macro-benchmarks. Section VII presents
the related work in the ﬁelds of cryptography, access control
systems and SGX. Finally, Section VIII concludes and presents
future work.
2
Fig. 1. Model diagram.
II. MODEL
In this study, we consider groups of users who perform col-
laborative editing on cryptographically-protected data stored
on untrusted cloud storage systems. The data is protected
using a block cipher encryption algorithm such as Advanced
Encryption Standard (AES) making use of a symmetric group
key gk. As illustrated in Figure 1, this work addresses the
challenge of designing a system for group access control, in
which the group key gk is cryptographically protected and
derivable only by the members of the group. Because groups
may become large with a signiﬁcant turnover in their members,
we investigate the implication of numerous member additions
and revocations happening throughout their lifetimes.
We distinguish between two types of actors interacting
within the system: administrators and users. All group mem-
bership operations are performed by administrators. Their
duties include creating groups, and adding or revoking group
members. The administrators manifest an honest-but-curious
behavior, correctly serving work requests but with a possible
malicious intent of discovering the group key gk. On the other
hand, users listen to the cloud storage for group membership
changes, and derive the new group key gk whenever it
changes. Users are considered of having a trusted behavior.
The role of the cloud storage is to store the deﬁnitions of
groups access control, also referred to as groups metadata,
together with the list of members composing the group, and
the actual group data. Besides being a storage medium, we also
use the cloud storage as a broadcasting interface for group ac-
cess control changes. Administrators are communicating with
the cloud each time a group membership operation takes place
so that users can be notiﬁed of the group membership update.
We consider the cloud storage to show a similar behavior than
administrators (i.e. honest-but-curious). It correctly services
assigned tasks albeit with a possible malicious intent of
peeking into the groups secrets. Moreover, when manifesting
the curious behavior, the cloud storage could collude with any
number of curious administrators or revoked users.
Size-wise, we target a solution that can accommodate
groups of a very large-scale nature.2 It is desired that adminis-
trators perform membership changes for multiple groups at a
time, therefore the number of administrators is relatively small
when compared to the number of users.
We choose to ensure authenticity guarantees only with
to administrator identities, and therefore authenti-
respect
cate membership changes operations. Also, authenticating the
2Our evaluation uses 1 million users as the largest group size.
Groups Access ControlG1 KeyGroup 1 DataCloud StorageAdministratorG2 Key...Group 2 Datagroup data created by users is out of scope,
the current
model being focused on conﬁdentiality guarantees. Therefore,
the notion of a reference monitor [3], [12] on the cloud
storage is not pertinent within our context. Finally, we do
not consider hiding the identities of group members, nor
the type of executed membership operations, as they can be
inferred by the cloud storage from trafﬁc access patterns.
Privacy constructions offering such guarantees [13]–[15] are
orthogonal to our work.
III. BACKGROUND
The building blocks that lead to the creation of our access
control extension are Intel SGX, Hybrid Encryption, and
Identity Based Broadcast Encryption. This background section
presents them together with open challenges.
A. Intel SGX
Intel SGX is an instruction extension available on modern
x86 CPUs manufactured by Intel. Similarly to ARM Trust-
zone [16] or Sanctum [17], SGX aims to shield code execution