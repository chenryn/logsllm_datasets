removeacomment,useNULL.Commentsareautomaticallydroppedwhentheobjectisdropped.
Usage
Commentthetablemytable:
COMMENT ON mytable IS ’This is my table.’;
Somemoreexamples:
COMMENT ON DATABASE my_database IS ’Development Database’;
COMMENT ON INDEX my_index IS ’Enforces uniqueness on employee id’;
COMMENT ON RULE my_rule IS ’Logs UPDATES of employee records’;
COMMENT ON SEQUENCE my_sequence IS ’Used to generate primary keys’;
COMMENT ON TABLE my_table IS ’Employee Information’;
D.9. COMMIT 271
COMMENT ON TYPE my_type IS ’Complex Number support’;
COMMENT ON VIEW my_view IS ’View of departmental costs’;
COMMENT ON COLUMN my_table.my_field IS ’Employee ID number’;
COMMENT ON AGGREGATE my_aggregate float8 IS ’Computes sample variance’;
COMMENT ON FUNCTION my_function (datetime) IS ’Returns Roman Numeral’;
COMMENT ON OPERATOR ˆ (text, text) IS ’Performs intersection of two text’;
COMMENT ON TRIGGER my_trigger ON my_table IS ’Used for R.I.’;
Compatibility
SQL92
ThereisnoCOMMENTinSQL92.
D.9 COMMIT
Name
COMMIT—Commitsthecurrenttransaction
COMMIT[WORK|TRANSACTION]
Inputs
WORK,TRANSACTION Optionalkeywords. Theyhavenoeffect.
Outputs
COMMIT Messagereturnedifthetransactionissuccessfullycommitted.
NOTICE:COMMIT:notransactioninprogress Ifthereisnotransactioninprogress.
Description
COMMITcommitsthecurrenttransaction. Allchangesmadebythetransactionbecomevisible
toothersandareguaranteedtobedurableifacrashoccurs.
Notes
ThekeywordsWORKandTRANSACTIONarenoiseandcanbeomitted.
UseROLLBACK toabortatransaction.
272 APPENDIXD. REFERENCEMANUAL
Usage
Tomakeallchangespermanent:
COMMIT WORK;
Compatibility
SQL92
SQL92onlyspecifiesthetwoformsCOMMITandCOMMITWORK.Otherwisefullcompatibility.
D.10 COPY
Name
COPY—Copiesdatabetweenfilesandtables
COPY[BINARY]table[WITHOIDS]
FROM { ’filename ’ | stdin } [ [USING] DELIMITERS ’delimiter ’ ] [ WITH NULL AS ’null
string’]
COPY[BINARY]table[WITHOIDS]
TO{’filename’|stdout}[[USING]DELIMITERS’delimiter’][WITHNULLAS’nullstring
’]
Inputs
BINARY Changesthebehavioroffieldformatting,forcingalldatatobestoredorreadinbinary
formatratherthanastext.
table Thenameofanexistingtable.
WITHOIDS Copiestheinternaluniqueobjectid(OID)foreachrow.
filename TheabsoluteUnixpathnameoftheinputoroutputfile.
stdin Specifiesthatinputcomesfromapipeorterminal.
stdout Specifiesthatoutputgoestoapipeorterminal.
delimiter Acharacterthatdelimitstheinputoroutputfields.
D.10. COPY 273
nullprint AstringtorepresentNULLvalues. Thedefaultis\N(backslash-N).Youmightprefer
anemptystring,forexample.
Note: Onacopyin,anydataitemthatmatchesthisstringwillbestoredasaNULLvalue,
soyoushouldmakesurethatyouusethesamestringasyouusedoncopyout.
Outputs
COPY Thecopycompletedsuccessfully.
ERROR: reason Thecopyfailedforthereasonstatedintheerrormessage.
Description
COPY moves data between Postgres tables and standard file-system files. COPY instructs the
Postgresbackendto directly read from or write to a file. The filemust be directlyvisibleto the
backendandthenamemustbespecifiedfromtheviewpointofthebackend. Ifstdinorstdoutare
specified,dataflowsthroughtheclientfrontendtothebackend.
Notes
The BINARY keyword will force all data to be stored/read as binary format rather than as text.
Itissomewhatfasterthan thenormalcopycommand, butisnot generallyportable, andthefiles
generatedaresomewhatlarger,althoughthisfactorishighlydependentonthedataitself.
By default, a text copy uses a tab (\t) character as a delimiter. The delimiter may also be
changedtoanyothersinglecharacterwiththekeywordphraseUSINGDELIMITERS.Characters
indatafieldswhichhappentomatchthedelimitercharacterwillbebackslashquoted.
Youmusthaveselectaccesson anytablewhosevaluesarereadbyCOPY,andeitherinsertor
update access to a table into which values are being insertedby COPY. The backend also needs
appropriateUnixpermissionsforanyfilereadorwrittenbyCOPY.
The keyword phrase USING DELIMITERS specifies a single character to be used for all
delimitersbetweencolumns. Ifmultiplecharactersarespecifiedinthedelimiterstring,onlythe
firstcharacterisused. Tip: DonotconfuseCOPYwiththepsqlinstruction\copy.
COPYneitherinvokesrulesnoractsoncolumndefaults. Itdoesinvoketriggers,however.
COPY stops operation at the first error. This should not lead to problems in the event of
a COPY FROM, but the target relation will, of course, be partially modified in a COPY TO.
VACUUMshouldbeusedtocleanupafterafailedcopy.
BecausethePostgresbackend’scurrentworkingdirectoryisnotusuallythesameastheuser’s
working directory, the result of copying to a file "foo" (without additional path information) may
yield unexpected results for the naive user. In this case, foo will wind up in $PGDATA/foo. In
general,thefullpathnameasitwouldappeartothebackendservermachineshouldbeusedwhen
specifyingfilestobecopied.
274 APPENDIXD. REFERENCEMANUAL
Files used as arguments to COPY must reside on or be accessible to the database server
machinebybeingeitheronlocaldisksoronanetworkedfilesystem.
WhenaTCP/IPconnectionfromonemachinetoanotherisused,andatargetfileisspecified,
thetargetfilewillbewrittenonthemachinewherethebackendisrunningratherthantheuser’s
machine.
File Formats
TextFormat
When COPY TO is used without the BINARY option, the file generated will have each row
(instance) on a single line, with each column (attribute) separated by the delimiter character.
Embedded delimiter characters will be preceded by a backslash character ( \ ). The attribute
values themselves are strings generated by the output function associated with each attribute
type. Theoutput functionfor atypeshouldnottrytogeneratethebackslashcharacter;thiswill
behandledbyCOPYitself.
The actual format for each instance is     ...  . The oid is placed on the beginning of the line if WITH OIDS is
specified.
If COPYissendingitsoutputtostandardoutputinsteadofafile,itwillsendabackslash(\)
andaperiod(.) followedimmediatelybyanewline,onaseparateline,whenitisdone. Similarly,if
COPYisreadingfromstandardinput,itwillexpectabackslash(\)andaperiod(.) followedbya
newline,asthefirstthreecharactersonalinetodenoteend-of-file. However,COPYwillterminate
(followedbythebackenditself)ifatrueEOFisencounteredbeforethisspecialend-of-filepattern
isfound.
The backslash character has other special meanings. A literal backslash character is repre-
sentedastwoconsecutivebackslashes(\\). Aliteraltabcharacterisrepresentedasabackslash
and a tab. A literal newline character is represented as a backslash and a newline. When load-
ing text data not generated by Postgres, you will need to convert backslash characters ( \ ) to
double-backslashes(\\)toensurethattheyareloadedproperly.
BinaryFormat
InthecaseofCOPYBINARY,thefirstfourbytesinthefilewillbethenumberofinstancesinthe
file. Ifthisnumberiszero,theCOPYBINARYcommandwillreaduntilend-of-fileisencountered.
Otherwise, it willstop readingwhen this number of instanceshas beenread. Remaining datain
thefilewillbeignored.
The format for eachinstancein the file isasfollows. Note thatthis format must befollowed
exactly. Unsignedfour-byteintegerquantitiesarecalleduint32inthetablebelow.
D.10. COPY 275
Contentsofabinarycopyfile
Type Meaning
uint32 numberoftuples
Foreverytuple
uint32 totallengthoftupledata
uint32 oid(ifspecified)
uint32 numberofnullattributes
[uint32,...,uint32] attributenumbersofattributes,countingfrom0
AlignmentofBinaryData
On Sun-3s, 2-byte attributes are aligned on two-byte boundaries, and all larger attributes are
alignedon four-byte boundaries. Characterattributesarealignedon single-byteboundaries. On
most othermachines, allattributeslargerthan1 bytearealignedon four-byte boundaries. Note
thatvariablelengthattributesareprecededbytheattribute’slength;arraysaresimplycontiguous
streamsofthearrayelementtype.
Usage
Thefollowingexamplecopiesatabletostandardoutput,usingapipe(|)asthefielddelimiter:
COPY country TO stdout USING DELIMITERS ’|’;
TocopydatafromaUnixfileintoatablecountry:
COPY country FROM ’/usr1/proj/bray/sql/country_data’;
Here is a sample of data suitable for copying into a table from stdin (so it has the termination
sequenceonthelastline):
AF AFGHANISTAN
AL ALBANIA
DZ ALGERIA ...
ZM ZAMBIA
ZW ZIMBABWE
\.
The following is the same data, output in binary format on a Linux/i586 machine. The data is
shownafterfilteringthroughtheUnixutilityod-c. Thetablehasthreefields;thefirstischar(2)
and the second is text. All the rows have a null value in the third field. Notice how the char(2)
fieldispaddedwithnullstofourbytesandthetextfieldisprecededbyitslength:
276 APPENDIXD. REFERENCEMANUAL
355 \0 \0 \0 027 \0 \0 \0 001 \0 \0 \0 002 \0 \0 \0
006 \0 \0 \0 A F \0 \0 017 \0 \0 \0 A F G H
A N I S T A N 023 \0 \0 \0 001 \0 \0 \0 002
\0 \0 \0 006 \0 \0 \0 A L \0 \0 \v \0 \0 \0 A
L B A N I A 023 \0 \0 \0 001 \0 \0 \0 002 \0
\0 \0 006 \0 \0 \0 D Z \0 \0 \v \0 \0 \0 A L
G E R I A
…
\n \0 \0 \0 Z A M B I A 024 \0
\0 \0 001 \0 \0 \0 002 \0 \0 \0 006 \0 \0 \0 Z W
\0 \0 \f \0 \0 \0 Z I M B A B W E
Compatibility
SQL92
ThereisnoCOPYstatementinSQL92.
D.11 CREATE AGGREGATE
Name
CREATEAGGREGATE—Definesanewaggregatefunction
CREATEAGGREGATEname(
BASETYPE=input_data_type
[,SFUNC1=sfunc1,STYPE1=state1_type]
[,SFUNC2=sfunc2,STYPE2=state2_type]
[,FINALFUNC=ffunc]
[,INITCOND1=initial_condition1]
[,INITCOND2=initial_condition2])
Inputs
name Thenameofanaggregatefunctiontocreate.
input_data_type Theinputdatatypeonwhichthisaggregatefunctionoperates.
sfunc1 A statetransition function to be calledfor everynon-NULL inputdatavalue. Thismust
be a function of two arguments, the first being of type state1_type and the second of type
input_data_type. The function must return a value of type state1_type. This function takes
thecurrentstatevalue1andthecurrentinputdataitem,andreturnsthenextstatevalue1.
state1_type Thedatatypeforthefirststatevalueoftheaggregate.
D.11. CREATEAGGREGATE 277
sfunc2 A state transition function to be calledfor everynon-NULL inputdatavalue. This must
beafunction of oneargumentof typestate2_type, returningavalueof thesametype. This
functiontakesthecurrentstatevalue2andreturnsthenextstatevalue2.
state2_type Thedatatypeforthesecondstatevalueoftheaggregate.
ffunc The final function called to compute the aggregate’s result after all input data has been
traversed. Ifbothstatevaluesareused,thefinalfunctionmusttaketwoargumentsoftypes
state1_type and state2_type. If only one state value is used, the final function must take a
singleargumentofthatstatevalue’stype. Theoutputdatatypeoftheaggregateisdefined
asthereturntypeofthisfunction.
initial_condition1 Theinitialvalueforstatevalue1.
initial_condition2 Theinitialvalueforstatevalue2.
Outputs
CREATE Messagereturnedifthecommandcompletessuccessfully.
Description
CREATEAGGREGATEallowsauserorprogrammertoextendPostgresfunctionalitybydefining
newaggregatefunctions. Someaggregatefunctionsforbasetypessuchasmin(int4)andavg(float8)
are already provided in the base distribution. If one defines new types or needs an aggregate
functionnotalreadyprovided,thenCREATE AGGREGATEcanbeusedtoprovidethedesired
features.
Anaggregatefunctionisidentifiedby itsnameandinputdatatype. Twoaggregatescanhave
thesamenameiftheyoperateondifferentinputtypes. Toavoidconfusion,donotmakeanordinary
functionofthesamenameandinputdatatypeasanaggregate.
An aggregate function is made from between one and three ordinary functions: two state
transition functions, sfunc1 and sfunc2, and a final calculation function, ffunc. These are usedas
follows:
sfunc1(internal-state1,next-data-item)—>next-internal-state1
sfunc2(internal-state2)—>next-internal-state2
ffunc(internal-state1,internal-state2)—>aggregate-value
Postgrescreates one or two temporaryvariables(of datatypes stype1 and/or stype2 ) to hold the
currentinternalstatesoftheaggregate. Ateachinputdataitem,thestatetransitionfunction(s)are
invokedtocalculatenewvaluesfortheinternalstatevalues. Afterallthedatahasbeenprocessed,
thefinalfunctionisinvokedoncetocalculatetheaggregate’soutputvalue.
278 APPENDIXD. REFERENCEMANUAL
ffuncmustbespecifiedifbothtransitionfunctionsarespecified. Ifonlyonetransitionfunction
is used, then ffunc is optional. The default behavior when ffunc is not provided is to return the
endingvalueoftheinternalstatevaluebeingused(and,therefore,theaggregate’soutputtypeis
thesameasthatstatevalue’stype).
Anaggregatefunctionmayalsoprovideoneortwoinitialconditions, thatis, initialvaluesfor
theinternalstatevaluesbeingused. Thesearespecifiedandstoredinthedatabaseasfieldsoftype
text, but they must be valid external representations of constants of the state value data types.
If sfunc1 isspecifiedwithout aninitcond1 value,thenthesystemdoesnot callsfunc1 atthefirst
inputitem;instead,theinternalstatevalue1isinitializedwiththefirstinputvalue,andsfunc1is
calledbeginningatthesecondinputitem. ThisisusefulforaggregateslikeMINandMAX.Note
thatanaggregateusingthisfeaturewillreturnNULLwhencalledwithnoinputvalues. Thereis
nocomparableprovisionforstatevalue2;ifsfunc2isspecifiedthenaninitcond2isrequired.
Notes
UseDROPAGGREGATEtodropaggregatefunctions.
The parameters of CREATE AGGREGATE can be written in any order, not just the order
illustratedabove.
It is possible to specify aggregatefunctions that have varyingcombinations of state and final
functions. For example, the count aggregaterequires sfunc2 (an incrementing function) but not
sfunc1orffunc,whereasthesumaggregaterequiressfunc1(anadditionfunction)butnotsfunc2or
ffunc,andtheavgaggregaterequiresbothstatefunctionsaswellasaffunc(adivisionfunction)to
produceitsanswer. Inanycase,atleastonestatefunctionmustbedefined,andanysfunc2must
haveacorrespondinginitcond2.
Usage
Referto thechapteron aggregatefunctionsinthePostgreSQLProgrammer’sGuidefor complete
examplesofusage.
Compatibility
SQL92
CREATEAGGREGATEisaPostgreslanguageextension.ThereisnoCREATEAGGREGATE
inSQL92.
D.12 CREATE CONSTRAINT TRIGGER
Name
CREATECONSTRAINTTRIGGER—Createatriggertosupportaconstraint
D.13. CREATEDATABASE 279
CREATECONSTRAINTTRIGGERname
AFTEReventsONrelationconstraintattributes
FOREACHROW
EXECUTEPROCEDUREfunc’(’args’)’
Inputs
name Thenameoftheconstrainttrigger.
events Theeventcategoriesforwhichthistriggershouldbefired.
relation Tablenameofthetriggeringrelation.
constraint Actualconstraintspecification.
attributes Constraintattributes.
func(args) Functiontocallaspartofthetriggerprocessing.
Outputs
CREATECONSTRAINT Messagereturnedifsuccessful.
Description
CREATECONSTRAINT TRIGGERisusedfrominsideof CREATE/ALTER TABLEandby
pg_dumptocreatethespecialtriggersforreferentialintegrity.
Itisnotintendedforgeneraluse.
D.13 CREATE DATABASE
Name
CREATEDATABASE—Createsanewdatabase
CREATEDATABASEname[WITHLOCATION=’dbpath’]
Inputs
name Thenameofadatabasetocreate.
dbpath An alternatelocation where to store the new databasein the filesystem. See below for
caveats.
280 APPENDIXD. REFERENCEMANUAL
Outputs
CREATEDATABASE Messagereturnedifthecommandcompletessuccessfully.
ERROR: user’username’isnotallowedtocreate/dropdatabases Youmusthavethespe-
cialCREATEDBprivilegetocreatedatabases. SeeCREATEUSER.
ERROR: createdb:database"name"alreadyexists Thisoccursifadatabasewiththename
specifiedalreadyexists.
ERROR: Singlequotesarenotallowedindatabasenames., ERROR: Single quotes are
not allowed in database paths. The database name and dbpath cannot contain single
quotes. Thisisrequired sothatthe shellcommandsthatcreatethedatabasedirectorycan
executesafely.
ERROR: Thepath’xxx’ isinvalid. The expansion of the specified dbpath (see below) failed.
Checkthepathyouenteredormakesurethattheenvironmentvariableyouarereferencing