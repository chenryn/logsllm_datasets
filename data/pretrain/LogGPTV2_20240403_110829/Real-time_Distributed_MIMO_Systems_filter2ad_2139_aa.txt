title:Real-time Distributed MIMO Systems
author:Ezzeldin Hamed and
Hariharan Rahul and
Mohammed A. Abdelghany and
Dina Katabi
Real-time Distributed MIMO Systems
Ezzeldin Hamed Hariharan Rahul Mohammed A. Abdelghany Dina Katabi
Massachusetts Institute of Technology
ABSTRACT
1.
Introduction
Recent years have seen a lot of work in moving
distributed MIMO from theory to practice. While this
prior work demonstrates the feasibility of synchroniz-
ing multiple transmitters in time, frequency, and phase,
none of them deliver a full-ﬂedged PHY capable of sup-
porting distributed MIMO in real-time. Further, none
of them can address dynamic environments or mobile
clients. Addressing these challenges, requires new solu-
tions for low-overhead and fast tracking of wireless chan-
nels, which are the key parameters of any distributed
MIMO system. It also requires a software-hardware ar-
chitecture that can deliver a distributed MIMO within
a full-ﬂedged 802.11 PHY, while still meeting the tight
timing constraints of the 802.11 protocol. This archi-
tecture also needs to perform coordinated power con-
trol across distributed MIMO nodes, as opposed to sim-
ply letting each node perform power control as if it
were operating alone. This paper describes the design
and implementation of MegaMIMO 2.0, a system that
achieves these goals and delivers the ﬁrst real-time fully
distributed 802.11 MIMO system.
CCS Concepts
•Networks → Network protocols; Wireless ac-
cess points, base stations and infrastructure;
•Hardware → Digital signal processing;
Keywords
Wireless Networks, Multi-user MIMO, Distributed
MIMO
Permission to make digital or hard copies of all or part of this work for personal
or classroom use is granted without fee provided that copies are not made or
distributed for proﬁt or commercial advantage and that copies bear this notice
and the full citation on the ﬁrst page. Copyrights for components of this work
owned by others than the author(s) must be honored. Abstracting with credit is
permitted. To copy otherwise, or republish, to post on servers or to redistribute to
lists, requires prior speciﬁc permission and/or a fee. Request permissions from
permissions@acm.org.
SIGCOMM ’16, August 22 - 26, 2016, Florianopolis , Brazil
c(cid:13) 2016 Copyright held by the owner/author(s). Publication rights licensed to
ACM. ISBN 978-1-4503-4193-6/16/08. . . $15.00
DOI: http://dx.doi.org/10.1145/2934872.2934905
Distributed MIMO has long been studied in the-
ory because of its ability to dramatically increase the
throughput of wireless networks [3, 14, 16, 9]. Recent
years have seen signiﬁcant interest in moving distributed
MIMO from theory to practice. Multiple papers [11, 4,
17] have demonstrated the ability to synchronize dis-
tributed transmitters to enable them to concurrently
transmit to multiple independent receivers, without in-
terference.
The primary focus of past work has been to synchro-
nize time, frequency and phase across multiple trans-
mitters. While this is an important ﬁrst step, several
additional critical challenges need to be addressed in or-
der to deliver practical distributed MIMO. Speciﬁcally,
for distributed MIMO to work in practical settings they
need to operate in real-time while being able to sustain
their gains. They also need to adapt to dynamic envi-
ronments with users moving around and the possibility
of mobile clients.
This paper describes the design and implementation
of MegaMIMO 2.0, the ﬁrst real-time fully distributed
802.11 MIMO system. MegaMIMO 2.0 delivers a full-
ﬂedged 802.11 PHY, while meeting the tight timing con-
straints of the 802.11 protocol. It also supports dynamic
environments and mobile clients. To achieve its perfor-
mance goals, MegaMIMO 2.0 has to address the follow-
ing key challenges:
(a) Real-time channel updates: At the heart of all
distributed MIMO designs, there is a core subsystem
that measures the channels from all the transmitters to
all the diﬀerent end users and uses them to apply desired
beamforming and nulling. For any real-time system,
these measurements have to be collected and updated
on the scale of tens of milliseconds. Even in today’s
point-to-point MIMO systems, the process of collecting
channel measurement is known to be high overhead [10].
The problem becomes quadratically more expensive in a
distributed MIMO scenario because all senders have to
measure channels to all clients for all subcarriers.
To illustrate how signiﬁcant a problem overhead is,
we simulate a distributed system consisting of N access
points and N clients. We use typical feedback parame-
ters (8 bits magnitude and phase for all OFDM subcar-
412
d
a
e
h
r
e
v
O
e
g
a
n
e
c
r
e
P
t
 100
 80
 60
 40
 20
 0
 0
4x4
8x8
16x16
 50
 100
 150
 200
 250
 300
Channel feedback interval (ms)
Figure 1: Channel feedback overhead for dis-
tributed MIMO system. The ﬁgure shows that at
typical coherence times of about 100ms, the channel
feedback overhead can signiﬁcantly limit the gains of
distributed MIMO systems, particularly as they scale
to more nodes. For mobile clients with lower coherence
times, the overhead is even higher.
riers, and QPSK with 1/2 rate for the channel feedback
data with proper headers and DIFS), and evaluate over-
head for various channel feedback intervals. Fig. 1 plots
this overhead as a percentage of medium occupancy. As
we can see, the overhead increases drastically with the
number of users and can consume most of the wireless
medium resources for large distributed MIMO systems.
In fact, for a 16 × 16 system, feedback consumes most
of the channel time at typical indoor coherence times of
100 ms. The overhead is even bigger for mobile clients
with lower coherence times. It is therefore clear that for
a real-time distributed MIMO system to be plausible,
it cannot rely on explicit feedback and needs to devise
other mechanisms to update channel information at low
cost.
Addressing this problem in the context of distributed
nodes is not easy. The natural approach for eliminating
channel feedback would be to use channel reciprocity.
Reciprocity refers to the property that the over-the-air
channel from a node, say node A, to another node, say
node B, is the same as the over-the-air channel from
node B to node A. Point-to-point MIMO systems have
leveraged reciprocity to enable a transmitter to infer
the forward channel from its measurements of the re-
verse channel, without the need for any receiver feed-
back. They do this by performing a one-time computa-
tion of a constant calibration factor that compensates
for the part of the channel introduced by the transmit
and receive hardware, and correcting their estimate of
the forward channel from A to B by applying this cal-
ibration factor to the reverse channel from B to A. In
contrast, we demonstrate that in distributed MIMO sys-
tems, there is no such constant calibration factor that
can be computed one-time, and applied to correct for
reciprocity. We present a mathematical model that cap-
tures the variations in the calibration factor in a dis-
tributed system. We also introduce a protocol that com-
putes these variations without additional transmission
overhead, thereby extending the beneﬁts of reciprocity
to distributed MIMO systems.
413
(b) Power control: Practical wireless systems all use
Automatic Gain Control (AGC), an analog module that
dynamically adjusts the received signal to ensure it ﬁlls
the range of the ADC. However, in a distributed MIMO
system, the nodes must maintain a consistent view of
the channels and other signaling information (e.g., their
phase with respect to the lead access point). Further-
more, the measurements of the channels and signaling
information have to be consistent across time. These re-
quirements are at odd with today’s AGCs, which oper-
ate independently from the AGCs on other nodes and
have no memory across packets. Of course, one way to
address this problem is to deactivate any individual con-
trol of AGC across the diﬀerent devices.1 However, doing
this is not acceptable for any practical system, since the
loss of data rates due to the inability to control power
will translate to a large performance loss, defeating the
very purpose of distributed MIMO.
MegaMIMO 2.0 therefore designs a system that in-
fers the AGC parameters from the hardware on a per-
packet basis, and incorporates these parameters into
both distributed MIMO signaling and channel estima-
tion.
(c) Rearchitecting the baseband and ﬁrmware:
Distributed MIMO requires redesigning the ﬁrmware-
hardware interface. Event timing in the existing Wi-
Fi stack is local to each device. Thus, the ﬁrmware-
hardware interface operates on event sequence, and tim-
ing is buried into the hardware. In contrast, in a dis-
tributed MIMO system, the hardware needs to react
to interactions between devices, and perform coordi-
nated actions across multiple devices, as opposed to
purely local timing interaction like in traditional Wi-Fi.
MegaMIMO 2.0 extends the interface between the PHY
and the MAC to support such distributed coordination,
and further enhances the real-time component of the
MAC to enable it to eﬀect this distributed coordination
using local actions at each node.
We have built MegaMIMO 2.0 in a system-on-
module comprised of an FPGA connected by a high-
speed bus to an ARM core. Our implementation fea-
tures a real-time full-ﬂedged 802.11 PHY capable of dis-
tributed MIMO. We evaluated our system in an indoor
deployment consisting of multiple 802.11 distributed-
MIMO capable APs and unmodiﬁed 802.11 clients in
an indoor testbed. Our results show the following:
• MegaMIMO 2.0 can deliver a real-time distributed
MIMO system capable of adapting to mobile de-
vices and dynamic environments with people walking
around. In particular, a four-AP distributed MIMO
system running MegaMIMO 2.0 delivers a median
throughput of 120Mb/s and a maximum through-
put of 194 Mb/s to four clients mounted on moving
Roomba robots.
1This is typically the case in USRPs which have no sup-
port for AGC and on which prior systems have been
demonstrated.
• MegaMIMO 2.0’s reciprocity is both accurate and nec-
essary for high throughput. Speciﬁcally,
in a fully
static environment, beamforming using reciprocity
and beamforming using explicit feedback deliver the
same gain. In contrast, in a mobile environment with
four APs and four mobile clients, explicit feedback re-
duces the median throughput by 20% in comparison to
reciprocity, due to feedback overhead. However, reduc-
ing the feedback rate can decrease the throughput by
as much as 6x due to stale channel information. These
results show the importance of using reciprocity even
in a relatively small 4×4 distributed MIMO system.
Since the feedback overhead increases quadratically
with the size of the distributed MIMO system, we ex-
pect that reciprocity is even more essential for larger
systems.
• MegaMIMO 2.0’s ability to accommodate distributed
power control is critical. In the absence of distributed
gain control, the throughput of clients drops dramati-
cally as the channels between some APs and clients
become signiﬁcantly weaker than channels between
other APs and clients. Our experiments show a re-
duction of 5.1× in throughput when we deactivate
MegaMIMO 2.0’s distributed power control.
2. Related Work
There is a large body of theoretical work that an-
alyzes the performance gains provided by distributed
MIMO, and shows that it can scale wireless throughput
with the size of the network [3, 14, 16, 9]. Motivated
by these results, recent years have seen signiﬁcant re-
search eﬀort in moving theory to practice [11, 4, 17, 2].
While these systems diﬀer in details, they focus only on
the problem of synchronizing the transmitters in time,
phase and frequency, do not address power control and
the overhead of learning and tracking the channels. Fur-
ther, they demonstrate their results using one-shot chan-
nel measurements, and unlike MegaMIMO 2.0, do not
design or show a full ﬂedged physical layer or a real-
time system capable of dealing with moving clients and
dynamic environments.
There is a recent industry eﬀort that targets build-
ing distributed MIMO systems [7, 1, 6]. However, exist-
ing systems are all based on CoMP(cooperative multi-
point), which assumes a shared clock, distributed either
via GPS or a wire, and a dedicated high throughput
ﬁber backhaul infrastructure to deliver signals to all
antennas with very high throughput and carefully con-
trolled latencies. Examples of such systems are PCell [7,
1] and a demonstration by Ericsson [6]. In contrast,
MegaMIMO 2.0 operates with fully distributed indepen-
dent radios, and does not need a single clock. Further, it
introduces a new technique for extending reciprocity to
distributed MIMO systems and presents detailed evalu-
ation results.
Also related to our work are papers studying the
use of reciprocity for channel estimation [5, 8, 13]. The
growth of massive MIMO systems has led to interest
in scalable channel estimation techniques [12]. However,
all these systems assume that all the antennas being
calibrated for reciprocity share a single clock, and are
on the same device. As a result, they do not extend to
distributed scenarios where the diﬀerent devices do not
share a clock, and perform independent gain control.
MegaMIMO 2.0 demonstrates how to extend reciprocity
to these distributed scenarios, thereby enabling scalable
channel estimation for distributed MIMO.
MegaMIMO 2.0 builds on the above related work
but ﬁlls in an important gap by delivering the ﬁrst fully
operational 802.11 distributed MIMO PHY. This per-
formance is enabled by novel techniques for extending
reciprocity to distributed MIMO, coordinating power
control, and providing a software-hardware architecture
that can meet the strict timing constraints of distributed
MIMO.
3. MegaMIMO 2.0 Overview
MegaMIMO 2.0 is a combined hardware-software
system that performs distributed MIMO across multi-
ple APs to multiple clients. The hardware implements a
fully 802.11 a/g/n compatible PHY with enhancements
to support distributed MIMO. The software running at
each AP performs calibration of that AP for adapting
uplink channel estimates and performing power control.
Additionally, the software at each node performs dis-
tributed MIMO, tracking channels to each client, and
coordinating between APs to perform distributed beam-
forming to the clients.
MegaMIMO 2.0 is designed to work across a dis-
tributed set of nodes without requiring a shared clock
across the nodes. It builds upon a prior such system,
MegaMIMO [11], and extends its design and implemen-
tation to support reciprocity, distributed power control,
and a full-ﬂedged real-time 802.11 PHY. At a high level,
MegaMIMO works as follows. One AP acts as the lead
AP (master AP), and all other APs act as slaves. Each
slave AP maintains a reference channel from the lead
AP. A joint transmission is initiated by the lead AP by
transmitting a synchronization header, followed after a
ﬁxed time by the data. Each slave hears the synchro-