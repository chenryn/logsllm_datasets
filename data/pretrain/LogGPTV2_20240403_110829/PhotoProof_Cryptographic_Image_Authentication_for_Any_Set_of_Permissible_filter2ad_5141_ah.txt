can handle PhotoProof algorithms and keys transparently.
The user only needs to edit
the image, as done in any
image editing program, while the plugin keeps track of the
applied (permissible) transformations. Only when the editing
is complete does the plugin call the prover for the required
number of times with the correct parameters, and output the
proof.
Copyright message and metadata protection. Metadata
information is sometimes as important as the image content,
but can easily be edited or forged. In our prototype, we
demonstrated protection of a metadata ﬁeld by including a
protected timestamp (see Section V-A). In the same way, it
is possible to protect GPS location tags, name of camera
owner, or any other type of information that can be added
automatically by the camera.
We can also protect ﬁelds that are added “manually” by
the user after the image was signed, e.g., caption, copyrights
message, face tags, etc. This is made possible by allowing
certain ﬁelds to be edited with access to the original image
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:13:41 UTC from IEEE Xplore.  Restrictions apply. 
only (this can be checked by the compliance predicate). The
original can then be destroyed, ensuring that no one will be
able to edit these ﬁelds without invalidating the proof.
Image provenance tracking. For some applications it may
be desirable to keep track of (and perhaps limit) the list
of transformations that the image went through (and their
order). This is possible using a provenance metadata ﬁeld.
The original (signed) image will be generated with an empty
list. The set of permissible transformations will include only
transformations that append themselves to the provenance
ﬁeld. Note that the length of this ﬁeld is bounded due to the
limit on the overall image size. Alternatively, it is possible
to keep track only of the length of the provenance. This,
in particular, would mitigate the risk of numerous small
permissible changes accumulating into an overall change that
is considered impermissible.
VI. CONCLUSIONS AND FUTURE DIRECTIONS
We presented IA schemes, a cryptographic primitive for
image authentication, and constructed PhotoProof, an IA
scheme based on Proof-Carrying Data and digital signatures.
We also implemented a working prototype together with
a collection of supported permissible transformations. Our
implementation is the ﬁrst proof-of-concept of an IA scheme.
Further improvements are required to make the technology
usable for real world applications. This includes lowering
generation and proving times, extending the set of supported
transformations and raising the limit on image size. This may
be achieved by faster SNARK technology that will be available
in the future to prove larger predicates in less time, better
circuit designs for image transformations that will lower the
required constraint-per-pixel ratio for the compliance predi-
cate, and accelerated implementations using GPGPU, FPGA
or ASIC.
One could also implement a variant of PhotoProof, includ-
ing its zero-knowledge guarantees, using a PCD-like mecha-
nism based on trusted hardware with attestation capabilities
such as TPM (also used by CertiPics; see Section I-B) or
Intel’s SGX. In this alternative implementation, every editing
step attests for the correct execution of the computation that
veriﬁed the previous step’s attestation and did a permissi-
ble transformation. This would yield succinctness and zero-
knowledge comparable to PhotoProof, with much higher per-
formance, but based on trusted hardware and careful platform
conﬁguration, instead of cryptographic proofs.
Increased image size and decreased proof size will enable
practical use of methods to embed the proof inside the image
in an invisible way.
PhotoProof demonstrates the power of PCD in tracking
and enforcing authenticity and provenance for digital images,
while still offering the editing ﬂexibility required by applica-
tions. Analogous needs for authenticity and provenance arise
also for other document types, such as text (e.g., tracking
citations), audio (e.g., proving authenticity of a recording),
databases (e.g., tracking use of sensitive or unreliable infor-
mation), and other structured data. We pose the challenge of
identifying, and implementing, speciﬁc applications in these
domains.
ACKNOWLEDGMENTS
This work was supported by the Broadcom Foundation and
Tel Aviv University Authentication Initiative; by the Check
Point Institute for Information Security; by the Israeli Ministry
of Science and Technology; by the Israeli Centers of Research
Excellence I-CORE program (center 4/11); and by the Leona
M. & Harry B. Helmsley Charitable Trust.
REFERENCES
[1] M. Ajtai, “Generating hard instances of lattice problems,” in ACM
Symposium on the Theory of Computing (STOC) 1996, 1996, pp. 99–
108.
[2] M. Backes, M. Barbosa, D. Fiore, and R. M. Reischuk, “ADSNARK:
Nearly practical and privacy-preserving proofs on authenticated data,”
in IEEE Symposium on Security and Privacy (SP) 2015, 2015, pp. 271–
286.
[3] E. Ben-Sasson, A. Chiesa, C. Garman, M. Green, I. Miers, E. Tromer,
and M. Virza, “Zerocash: Decentralized anonymous payments from
Bitcoin,” in IEEE Symposium on Security and Privacy 2014, 2014, pp.
459–474.
[4] E. Ben-Sasson, A. Chiesa, D. Genkin, E. Tromer, and M. Virza,
“SNARKs for C: Verifying program executions succinctly and in zero
knowledge,” in CRYPTO 2013, 2013, pp. 90–108.
[5] E. Ben-Sasson, A. Chiesa, D. Genkin, E. Tromer, and M. Virza,
“SNARKs for C: Verifying program executions succinctly and in zero
knowledge,” Cryptology ePrint Archive, Report 2013/507, 2013, http:
//eprint.iacr.org/.
[6] E. Ben-Sasson, A. Chiesa, E. Tromer, and M. Virza, “Succinct non-
interactive arguments for a von Neumann architecture,” Cryptology
ePrint Archive, Report 2013/879, 2013.
[7] E. Ben-Sasson, A. Chiesa, E. Tromer, and M. Virza, “Scalable zero
knowledge via cycles of elliptic curves,” in Advances in Cryptology–
CRYPTO 2014. Springer, 2014, pp. 276–294.
[8] N. Bitansky, R. Canetti, A. Chiesa, and E. Tromer, “From extractable
collision resistance to succinct non-interactive arguments of knowledge,
and back again,” in Innovations in Theoretical Computer Science (ITCS)
2012, 2012, pp. 326–349.
[9] ——, “Recursive composition and bootstrapping for SNARKs and
proof-carrying data,” in ACM Symposium on the Theory of Computing
(STOC) 2013, 2013, pp. 111–120.
[10] N. Bitansky, A. Chiesa, Y. Ishai, O. Paneth, and R. Ostrovsky, “Succinct
non-interactive arguments via linear interactive proofs,” in Theory of
Cryptography. Springer, 2013, pp. 315–333.
[11] A. Chiesa and E. Tromer, “Proof-carrying data and hearsay arguments
from signature cards.” in ICS, vol. 10, 2010, pp. 310–331.
[12] ——, “Proof-carrying data: Secure computation on untrusted platforms,”
The Next Wave: The National Security Agency’s review of emerging
technologies, vol. 19, no. 2, pp. 40–46, 2012.
[13] A. Chiesa, E. Tromer, and M. Virza, “Cluster computing in zero
knowledge,” ser. EUROCRYPT ’15, 2015, pp. 371–403.
[14] DARPA, “DARPA Broad Agency Announcement 15-58: Media
Forensics (MediFor),” 2015, https://www.fbo.gov/index?s=opportunity&
mode=form&id=bfa29e5f04566fbb961cd773a8a8649f&tab=core&
_cview=1.
[15] Elcomsoft Co. Ltd., “Canon original data security system compromised:
ElcomSoft discovers vulnerability,” 2010. [Online]. Available: https:
//www.elcomsoft.com/PR/canon_101130_en.pdf
[16] H. Farid, “Image forgery detection,” Signal Processing Magazine, IEEE,
vol. 26, no. 2, pp. 16–25, 2009.
[17] W. Feng and Z.-Q. Liu, “Region-level
image authentication using
bayesian structural content abstraction,” IEEE Transactions on Image
Processing, vol. 17, no. 12, pp. 2413–2424, 2008.
[18] D. Fiore and A. Nitulescu, “On the (in)security of SNARKs in the
presence of oracles,” Cryptology ePrint Archive, Report 2016/112, 2016,
http://eprint.iacr.org/.
[19] R. Frank, Newslore: Contemporary folklore on the Internet. Univ. Press
of Mississippi, 2011, pp. 59–62.
269269
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:13:41 UTC from IEEE Xplore.  Restrictions apply. 
[20] J. Fridrich and M. Goljan, “Robust hash functions for digital watermark-
ing,” in International Conference on Information Technology: Coding
and Computing (ITCC) 2000.
IEEE, 2000, pp. 178–183.
[21] G. L. Friedman, “The trustworthy digital camera: Restoring credibility to
the photographic image,” IEEE Transactions on Consumer Electronics,
vol. 39, no. 4, pp. 905–910, 1993.
[22] R. Gennaro, C. Gentry, B. Parno, and M. Raykova, “Quadratic span
programs and succinct NIZKs without PCPs,” in EUROCRYPT 2013,
2013, pp. 626–645.
[23] O. Goldreich, S. Goldwasser, and S. Halevi, “Collision-free hashing
from lattice problems,” Tech. Rep., 1996, eCCC TR95-042.
[24] S. Goldwasser, S. Micali, and R. L. Rivest, “A digital signature scheme
secure against adaptive chosen-message attacks,” SIAM Journal on
Computing, vol. 17, no. 2, pp. 281–308, 1988.
[25] J. Groth, “Short pairing-based non-interactive zero-knowledge argu-
ments,” in International Conference on the Theory and Application
of Cryptology and Information Security (ASIACRYPT) 2010, 2010, pp.
321–340.
[26] M. M. Hancock, “Ethics
in the age of digital manipulation,”
http://globaljournalist.jour.missouri.edu/stories/2009/07/01/
2009,
ethics-in-the-age-of-digital-manipulation.
[27] C. K. Ho and C.-T. Li, “Semi-fragile watermarking scheme for authen-
tication of jpeg images,” in International Conference on Information
Technology: Coding and Computing (ITCC), vol. 1.
IEEE, 2004, pp.
7–11.
[28] C. W. Honsinger, P. W. Jones, M. Rabbani, and J. C. Stoffel, “Lossless
recovery of an original image containing embedded data,” Aug. 21 2001,
US Patent 6,278,791.
[29] M. K. Johnson and H. Farid, “Exposing digital forgeries in complex
lighting environments,” IEEE Transactions on Information Forensics and
Security, vol. 2, no. 3, pp. 450–461, 2007.
[30] E. Kee and H. Farid, “Digital image authentication from thumbnails,”
International Society for Optics and
in IS&T/SPIE Electronic Imaging.
Photonics, 2010, pp. 75 410E–75 410E.
[31] J. Kelsey, B. Schneier, and C. Hall, “An authenticated camera,” in
IEEE Computer Society,
Computer Security Applications Conference.
1996, pp. 24–24.
[32] C.-Y. Lin and S.-F. Chang, “Semifragile watermarking for authenticating
International Society for
JPEG visual content,” in Electronic Imaging.
Optics and Photonics, 2000, pp. 140–151.
[33] ——, “A robust image authentication method distinguishing jpeg com-
pression from malicious manipulation,” IEEE Transactions on Circuits
and Systems for Video Technology, vol. 11, no. 2, pp. 153–168, 2001.
[34] Y.-C. Lin, D. Varodayan, and B. Girod, “Image authentication using
distributed source coding,” IEEE Transactions on Image Processing,
vol. 21, no. 1, pp. 273–283, 2012.
[35] H. Lipmaa, “Progression-free sets and sublinear pairing-based non-
interactive zero-knowledge arguments,” in Theory of Cryptography.
Springer, 2012, pp. 169–189.
“Elcomsoft
[36] E. C. Ltd.,
discovers
authentication system,” 2011.
image
//www.elcomsoft.com/PR/nikon_110428_en.pdf
vulnerability
in Nikon’s
[Online]. Available: https:
[37] J. Lukas, J. Fridrich, and M. Goljan, “Digital camera identiﬁcation from
sensor pattern noise,” IEEE Transactions on Information Forensics and
Security, vol. 1, no. 2, pp. 205–214, 2006.
[38] F. Lundh, A. Clark, and Secret Labs AB, “Pillow (PIL fork),” http:
//pillow.readthedocs.org.
[39] S. Micali, “Computationally sound proofs,” SIAM Journal on Comput-
ing, vol. 30, no. 4, pp. 1253–1298, 2000, preliminary version appeared
in FOCS 1994.
[40] Z. Ni, Y. Q. Shi, N. Ansari, W. Su, Q. Sun, and X. Lin, “Robust lossless
image data hiding designed for semi-fragile image authentication,” IEEE
Transactions on Circuits and Systems for Video Technology, vol. 18,
no. 4, pp. 497–509, 2008.
[41] M. Nizza and P. J. Lyons, “In an iranian image, a missile too many,” The
Lede — The New York Times News Blog, 2008, http://thelede.blogs.
nytimes.com/2008/07/10/in-an-iranian-image-a-missile-too-many.
[42] A. W. Paeth, “A fast algorithm for general raster rotation,” in Graphics
Interface, vol. 86, 1986, pp. 77–81.
[43] B. Parno, C. Gentry, J. Howell, and M. Raykova, “Pinocchio: Nearly
practical veriﬁable computation,” in IEEE Symposium on Security and
Privacy (Oakland) 2013, 2013, pp. 238–252.
270270
[44] V. Schetinger, M. M. Oliveira, R. da Silva, and T. J. Carvalho, “Humans
are easily fooled by digital images,” arXiv preprint arXiv:1509.05301,
2015.
[45] F. B. Schneider, K. Walsh, and E. G. Sirer, “Nexus authorization
logic (NAL): Design rationale and applications,” ACM Transactions on
Information and System Security (TISSEC), vol. 14, no. 1, p. 8, 2011.
[46] M. Schneider and S.-F. Chang, “A robust content based digital signa-
ture for image authentication,” in International Conference on Image
Processing (ICIP) 1996, vol. 3.
IEEE, 1996, pp. 227–230.
[47] SCIPR Lab, “libsnark: a C++ library for zkSNARK proofs,” https://
github.com/scipr-lab/libsnark.
[48] J. S. Seo, J. Haitsma, T. Kalker, and C. D. Yoo, “A robust image
ﬁngerprinting system using the radon transform,” Signal Processing:
Image Communication, vol. 19, no. 4, pp. 325–339, 2004.
[49] E. G. Sirer, W. de Bruijn, P. Reynolds, A. Shieh, K. Walsh, D. Williams,
and F. B. Schneider, “Logical attestation: an authorization architecture
for trustworthy computing,” in ACM Symposium on Operating Systems
Principles (SOSP) 2011. ACM, 2011, pp. 249–264.
[50] D. Sklyarov, “Forging canon original decision data,” Presented at
CONFidence 2.0, 2010. [Online]. Available: https://www.elcomsoft.
com/presentations/Forging_Canon_Original_Decision_Data.pdf
[51] D. Solo, R. Housley, and W. Ford, “Internet x. 509 public key infras-
tructure certiﬁcate and crl proﬁle,” 1999.
[52] R. Sun, H. Sun, and T. Yao, “A SVD-and quantization based semi-fragile
watermarking technique for image authentication,” in International
IEEE, 2002, pp. 1592–1595.
Conference on Signal Processing, vol. 2.
[53] N. Y. Times, “Guidelines On Integrity,” New York Times, 2008, http:
//www.nytco.com/pdf/guidelines-on-integrity-2/.
[54] F. Van Riper, “Manipulating truth, losing credibility,” The Washing-
ton Post, 2003, http://www.washingtonpost.com/wp-srv/photo/essays/
vanRiper/030409.htm.
[55] R. Venkatesan, S.-M. Koon, M. H. Jakubowski, and P. Moulin, “Ro-
bust image hashing,” in International Conference on Image Processing
(ICIP), vol. 3.
IEEE, 2000, pp. 664–666.
[56] R. S. Wahby, S. Setty, Z. Ren, A. J. Blumberg, and M. Walﬁsh,
“Efﬁcient RAM and control ﬂow in veriﬁable outsourced computation,”
Cryptology ePrint 2014/674, Tech. Rep., 2015.
[57] K. A. Walsh, “Authorization and trust
in software systems,” Ph.D.
dissertation, Cornell University, Ithaca, NY, USA, 2012.
[58] B. Warner, “Pure-Python ECDSA,” https://pypi.python.org/pypi/ecdsa.
[59] H.-l. Zhang, C.-q. Xiong, and G.-z. Geng, “Content based image hashing
robust to geometric transformations,” in International Symposium on
Electronic Commerce and Security, vol. 2.
IEEE, 2009, pp. 105–108.
[60] Y. Zhao, S. Wang, X. Zhang, and H. Yao, “Robust hashing for image
authentication using zernike moments and local features,” IEEE Trans-
actions on Information Forensics and Security, vol. 8, no. 1, pp. 55–63,
2013.
Secure camera: caveats
APPENDIX
Most existing image authentication solutions rely on a
secure camera as a root of trust. Like any other secure device,
the camera may be prone to attacks resulting from software
and hardware vulnerabilities, side channel and fault injection
attacks, and reverse engineering.
One example of this is Canon’s Original Decision Data
(ODD), a feature in some of their high-end cameras which
proves authenticity of images by digitally signing them inside
the camera. Unfortunately, their implementation was insecure
[50], [15]. The same holds for Nikon’s analogous Image
Authentication system [36].
Even when ignoring issues like implementation bugs and
hardware ﬂaws, there are several attack vectors at the camera
level. One possible attack is image injection. An attacker can
exploit the insecure link between a camera’s sensor and its
Image Signal Processor (ISP), by connecting physically to the
ISP, transmitting raw data of an arbitrary image and retrieving
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:13:41 UTC from IEEE Xplore.  Restrictions apply. 
a digital signature for it. One way to prevent this is to encrypt
the sensor-to-ISP channel. Another way is to program the ISP
to sign only signals that bear a speciﬁc analog ﬁngerprint
unique to its matching sensor (e.g., its PRNU [37]). A third
way is to use accelerometers to check whether the video feed
just before taking the picture shows movements that match
their reading, and only then sign.
Another attack is 2D scene staging, discussed also in [21],
[31]. An attacker can fabricate an arbitrary image, print or
project it in high quality, and photograph it with a secure cam-
era. In this case the output image will be signed and considered
genuine, although it is merely a picture of a picture. One partial
solution is to include some additional data in the image that
will help determine whether the visual content of the image
corresponds to the physical surroundings of the camera at
the time of its capture. Examples of such data include the
focus distance of the lens [21], or the range from target [31]
(measurable with a laser beam). One more possibility is to
check the timestamp information (already supported by our
prototype) against external information about event timing.
Another idea is for the camera to take a 3D picture (using
2 lenses and sensors) and determine whether the captured
picture is of a 2D or 3D object, using (nontrivial) image
processing algorithms. Finally, we note that a sufﬁciently
dedicated attacker might precisely fabricate a 3D scene and
photograph it in a studio — in which case it will be deemed
authentic no matter what.
271271
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:13:41 UTC from IEEE Xplore.  Restrictions apply.