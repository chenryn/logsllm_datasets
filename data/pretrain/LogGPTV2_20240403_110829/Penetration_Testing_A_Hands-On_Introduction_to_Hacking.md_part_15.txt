### Thinking Like Attackers: Developing Plans of Attack

To effectively simulate an attack, we must think like attackers and develop plans based on the information we have gathered. Using this information, we will actively search for and verify vulnerabilities using vulnerability-scanning techniques, which will be covered in the next chapter.

### Open Source Intelligence Gathering

Before initiating any direct interaction with a client's network, we can gather a significant amount of information about their organization and infrastructure. However, information gathering can be a dynamic and challenging process. It is not feasible to monitor the online activity of every employee, and sifting through large volumes of data to identify relevant information can be difficult. For example, if the CEO frequently tweets about a favorite sports team, that team’s name might be the basis for her webmail password, but it could also be entirely irrelevant. On the other hand, if the client has job postings for a system administrator with expertise in specific software, it is likely that those platforms are deployed in the client's infrastructure.

#### Open Source Intelligence (OSINT)

Open source intelligence (OSINT) is gathered from legal and publicly available sources such as public records and social media, as opposed to covert methods like dumpster diving, website database dumping, and social engineering. The success of a penetration test often depends on the results of the information-gathering phase. In this section, we will explore some tools to obtain valuable information from these public sources.

### Netcraft

Web servers and web-hosting companies often collect and make publicly available information that can reveal a lot about a website. For instance, Netcraft logs the uptime and provides details about the underlying software. This information is accessible at [http://www.netcraft.com/](http://www.netcraft.com/). Netcraft also offers other services, including antiphishing solutions, which are of particular interest to information security professionals.

**Example:**
- **Query:** `http://www.bulbsecurity.com`
- **Results:**
  - First seen: March 2012
  - Registered through: GoDaddy
  - IP Address: 50.63.212.1
  - Operating System: Linux
  - Web Server: Apache

With this information, when pentesting `bulbsecurity.com`, we can rule out vulnerabilities specific to Microsoft IIS servers. Alternatively, for social engineering, we could craft an email appearing to be from GoDaddy, asking the administrator to log in and check some security settings.

### Whois Lookups

All domain registrars maintain records of the domains they host, including contact information for the owner. For example, running the `whois` command on `bulbsecurity.com` reveals:

```bash
root@kali:~# whois bulbsecurity.com
Registered through: GoDaddy.com, LLC (http://www.godaddy.com)
Domain Name: BULBSECURITY.COM
Created on: 21-Dec-11
Expires on: 21-Dec-12
Last Updated on: 21-Dec-11
Registrant: u
Domains By Proxy, LLC
DomainsByProxy.com
14747 N Northsight Blvd Suite 111, PMB 309
Scottsdale, Arizona 85260
United States
Technical Contact: v
Private, Registration PI:EMAIL
Domains By Proxy, LLC
DomainsByProxy.com
14747 N Northsight Blvd Suite 111, PMB 309
Scottsdale, Arizona 85260
United States
(480) 624-2599 Fax -- (480) 624-2598
Domain servers in listed order:
NS65.DOMAINCONTROL.COM w
NS66.DOMAINCONTROL.COM
```

This site uses private registration, so the registrant and technical contact details are hidden. However, the domain servers are visible. Running `whois` queries on other domains may yield more interesting results, such as personal contact information.

### DNS Reconnaissance

DNS servers can provide valuable information about a domain by translating human-readable URLs into IP addresses.

#### Nslookup

We can use the `nslookup` command-line tool to gather DNS information. For example:

```bash
root@Kali:~# nslookup www.bulbsecurity.com
Server: 75.75.75.75
Address: 75.75.75.75#53
Non-authoritative answer:
www.bulbsecurity.com canonical name = bulbsecurity.com.
Name: bulbsecurity.com
Address: 50.63.212.1
```

We can also find mail servers by querying MX records:

```bash
root@kali:~# nslookup
> set type=mx
> bulbsecurity.com
Server: 75.75.75.75
Address: 75.75.75.75#53
Non-authoritative answer:
bulbsecurity.com mail exchanger = 40 ASPMX2.GOOGLEMAIL.com.
bulbsecurity.com mail exchanger = 20 ALT1.ASPMX.L.GOOGLE.com.
bulbsecurity.com mail exchanger = 50 ASPMX3.GOOGLEMAIL.com.
bulbsecurity.com mail exchanger = 30 ALT2.ASPMX.L.GOOGLE.com.
bulbsecurity.com mail exchanger = 10 ASPMX.L.GOOGLE.com.
```

This indicates that `bulbsecurity.com` uses Google Mail for its email servers.

#### Host

Another utility for DNS queries is `host`. We can use it to find the name servers for a domain:

```bash
root@kali:~# host -t ns zoneedit.com
zoneedit.com name server ns4.zoneedit.com.
zoneedit.com name server ns3.zoneedit.com.
--snip--
```

This output lists all the DNS servers for `zoneedit.com`.

### Zone Transfers

DNS zone transfers allow name servers to replicate all entries about a domain. Many system administrators set up DNS zone transfers insecurely, allowing anyone to transfer the DNS records. For example, `zoneedit.com` is configured to allow zone transfers:

```bash
root@kali:~# host -l zoneedit.com ns2.zoneedit.com
Using domain server:
Name: ns2.zoneedit.com
Address: 69.72.158.226#53
Aliases:
zoneedit.com name server ns4.zoneedit.com.
zoneedit.com name server ns3.zoneedit.com.
zoneedit.com name server ns15.zoneedit.com.
zoneedit.com name server ns8.zoneedit.com.
zoneedit.com name server ns2.zoneedit.com.
zoneedit.com has address 64.85.73.107
www1.zoneedit.com has address 64.85.73.41
dynamic.zoneedit.com has address 64.85.73.112
bounce.zoneedit.com has address 64.85.73.100
--snip--
mail2.zoneedit.com has address 67.15.232.182
--snip--
```

This extensive list of DNS entries provides a starting point for identifying potential vulnerabilities.

### Searching for Email Addresses

External penetration tests often find fewer exposed services than internal ones. A good security practice is to expose only essential services. One effective way to find usernames is by searching for email addresses on the Internet. Tools like `theHarvester` can automate this process by searching multiple sources, such as Google, Bing, PGP, LinkedIn, and others.

**Example:**
```bash
root@kali:~# theHarvester -d bulbsecurity.com -l 500 -b all
Full harvest..
[-] Searching in Google..
Searching 0 results...
Searching 100 results...
Searching 200 results...
Searching 300 results...
--snip--
[+] Emails found:
------------------
PI:EMAIL
[+] Hosts found in search engines:
------------------------------------
50.63.212.1:www.bulbsecurity.com
--snip--
```

### Maltego

Maltego is a data-mining tool designed to visualize open source intelligence gathering. It has both commercial and free community editions. The free Kali Linux version limits the results but is still useful for gathering a significant amount of information quickly.

To run Maltego, enter `maltego` at the command line, create a free account, and log in. You can then add entities and run transforms to gather information. For example, adding the `bulbsecurity.com` domain and running transforms can reveal the MX records, indicating that `bulbsecurity.com` uses Google Apps for email.

**Transforms:**
- To DNS Name – MX (mail server)
- To Website [Quick lookup]
- ToServerTechnologiesWebsite

These transforms can provide detailed information about the software and services used by the domain, such as the presence of an Apache web server with PHP, Flash, and WordPress.

### Port Scanning

The next step in the information-gathering phase is port scanning, which will be covered in the following sections.