::: para
创建一个 `~/.config/menus/gnome-applications.menu`{.filename} 文件：
:::
``` programlisting
​
​
​
​  Applications
​  /etc/xdg/menus/gnome-applications.menu
​
​
​
​  
​    System Tools
​    
​  
​
​
​
​
```
:::
:::
::: para
如上所示，文件中包括一个规定子菜单名字（*System Tools*）的
``{.code} 部分，还包括 ``{.code} 标签。
:::
:::
::: section
::: titlepage
## [⁠]{#installing-integrating-applications.html#remove-submenu-all-users}12.1.4. 为所有用户移除某个子菜单 {.title}
:::
::: para
面向所有用户的"[**应用程序**]{.guimenu}"菜单定制默认存储于
`/etc/xdg/menus/applications.menu`{.filename}
定义文件中。该文件的位置可以通过设置 `$XDG_CONFIG_DIRS`{.envar}
环境变量被覆盖。
:::
::: para
如需覆盖"[**应用程序**]{.guimenu}"菜单的默认属性，您需要修改那个
`.menu`{.filename}
文件。要注意，从"[**应用程序**]{.guimenu}"菜单中移除一个子菜单时，也会将它所包括的所有菜单项从"`活动概览`{.systemitem}"中的应用程序视图里移除，从而防止用户在"`概览`{.systemitem}"中搜索这些项目。
:::
::: example
[⁠]{#installing-integrating-applications.html#idm139838597512128}
**例 12.2. 从应用程序菜单中移除系统工具子菜单**
::: example-contents
::: para
编辑 `/etc/xdg/menus/applications.menu`{.filename}
文件，并通过如下所示的 ``{.code} 元素在那个 `.menu`{.filename}
文件末尾处最后的 ``{.code} 标签前添加一个新的 ``{.code}
部分。
:::
``` programlisting
​
​
​  
​    System Tools
​    
​  
​
​
​
​
```
:::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#installing-integrating-applications.html#default-favorites}12.2. 自定义默认的最热门程序 {.title}
:::
::: para
最热门程序是那些在"`活动概览`{.systemitem}"中的 GNOME Shell *dash*
上可见的程序。可以使用"`dconf`{.systemitem}"来为个别用户设置最热门程序，或为所有用户设置相同的最热门程序。
:::
::: section
::: titlepage
## [⁠]{#installing-integrating-applications.html#default-favorites-per-user}12.2.1. 为个别用户设置不同的最热门程序 {.title}
:::
::: para
可以通过修改 `~/.config/dconf/user`{.filename}
中找到的用户数据库文件来为个别用户设置默认最热门程序。以下样本文件中通过"`dconf`{.systemitem}"将
[**gedit**]{.application}，[**Terminal**]{.application} 和
[**Nautilus**]{.application}
设置为某个用户的默认最热门程序。如果用户希望的话，该例子代码可以允许他们以后修改清单。
:::
::: example
[⁠]{#installing-integrating-applications.html#idm139838595639024}
**例 12.3. `/etc/dconf/profile`{.filename} 文件的内容：**
::: example-contents
``` programlisting
# This line allows the user to change the default favorites later
user-db:user
```
:::
:::
::: example
[⁠]{#installing-integrating-applications.html#idm139838621173488}
**例 12.4. `~/.config/dconf/user`{.filename} 文件的内容：**
::: example-contents
``` programlisting
# Set gedit, terminal and nautilus as default favorites
[org/gnome/shell]
favorite-apps = ['gedit.desktop', 'gnome-terminal.desktop', 'nautilus.desktop']
```
:::
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
您也可以锁定上述设置来阻止用户改变它们。更多信息请参见〈[第 9.5.1 节
"锁定特定设置"](#configuration-overview-gsettings-dconf.html#lock-down-specific-settings){.xref}〉。
:::
:::
:::
:::
::: section
::: titlepage
## [⁠]{#installing-integrating-applications.html#default-favorites-all-users}12.2.2. 为所有用户设置相同的最热门程序 {.title}
:::
::: para
为了使所有用户拥有相同的最热门程序，必须通过"`dconf`{.systemitem}"密钥文件修改系统的数据库文件。以下样本文件修改了"`dconf`{.systemitem}"配置文件，然后创建了一个键值文件来设置某个机构内一楼所有员工的默认最热门程序。
:::
::: example
[⁠]{#installing-integrating-applications.html#idm139838556914704}
**例 12.5. `/etc/dconf/profile`{.filename} 文件的内容：**
::: example-contents
``` programlisting
user-db:user
# This line defines a system database called first_floor
system-db:first_floor
```
:::
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
"`用户`{.systemitem}"数据库文件中的设置优先于"`first_floor`{.systemitem}"数据库文件中的设置，但"`first_floor`{.systemitem}"数据库文件中引入的锁定优先于出现在"`用户`{.systemitem}"中的锁定。关于锁定的更多信息，请参见〈[第 9.5.1 节
"锁定特定设置"](#configuration-overview-gsettings-dconf.html#lock-down-specific-settings){.xref}〉。
:::
:::
:::
::: example
[⁠]{#installing-integrating-applications.html#idm139838591750544}
**例 12.6. `/etc/dconf/db/first_floor.d/00_floor1_settings`{.filename}
文件的内容：**
::: example-contents
``` programlisting
# This sample sets gedit, terminal and nautilus as default favorites
# for all users in the first floor
[org/gnome/shell]
favorite-apps = ['gedit.desktop', 'gnome-terminal.desktop', 'nautilus.desktop']
```
:::
:::
::: para
通过运行 `dconf update`{.command} 命令将您的更改合并到系统数据库中。
:::
:::
:::
::: section
::: titlepage
# [⁠]{#installing-integrating-applications.html#File_Formats}12.3. 配置文件关联 {.title}
:::
::: section
::: titlepage
## [⁠]{#installing-integrating-applications.html#mime-types}12.3.1. 什么是 MIME 类型？ {.title}
:::
::: para
在 GNOME 系统中，通过 MIME（*多用途 Internet
邮件扩展*）的类型来识别文件格式。 GNOME 桌面使用 MIME 类型来：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    确定默认用哪个应用程序打开某种特定的文件格式。
    :::
-   ::: para
    注册同样能打开某种特定文件格式的其它应用程序。
    :::
-   ::: para
    在例如 [**文件**]{.application}
    应用程序的文件属性对话框中，提供了描述文件类型的字符串。
    :::
-   ::: para
    在例如 [**文件**]{.application}
    应用程序的文件属性对话框中，提供了代表某种特定文件格式的图标。
    :::
:::
::: para
MIME 类型名字遵循指定的格式：
:::
``` screen
media-type/subtype-identifier
```
::: example
[⁠]{#installing-integrating-applications.html#idm139838554287744}
**例 12.7. MIME 类型格式**
::: example-contents
::: para
"`image/jpeg`{.systemitem}"是 MIME
类型的一个例子，其中"`image`{.systemitem}"是媒体类型，"`jpeg`{.systemitem}"是子类型识别符。
:::
:::
:::
::: para
GNOME 系统根据 *freedesktop.org Shared MIME Info（freedesktop.org 共享
MIME 信息）*规范来确定：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    存储所有 MIME
    类型说明文件的位置，包括计算机范围的位置和用户特定的位置。
    :::
-   ::: para
    如何注册一种 MIME
    类型，使得桌面环境知道哪些应用程序可以用来打开某种特定的文件格式。
    :::
-   ::: para
    用户如何更改哪种应用程序打开哪种文件格式。
    :::
:::
::: section
::: titlepage
### [⁠]{#installing-integrating-applications.html#mime-database}12.3.1.1. 什么是 MIME 数据库？ {.title}
:::
::: para
MIME 数据库是 GNOME 系统用来存储关于已知 MIME 类型信息的所有 MIME
类型说明文件的集合。
:::
::: para
从系统管理员的角度来看，MIME 数据库最重要的部分是
`/usr/share/mime/packages/`{.filename} 目录，其中存储着对已知 MIME
类型信息进行说明的 MIME 类型相关文件。这种文件的一个例子是
`/usr/share/mime/packages/freedesktop.org.xml`{.filename}，它对默认设置下系统中可用的标准
MIME 类型的信息作了说明。该文件由 [shared-mime-info]{.package}
软件包提供。
:::
:::
::: section
::: titlepage
### [⁠]{#installing-integrating-applications.html#mime-types-more-information}12.3.1.2. 获得更多信息 {.title}
:::
::: para
描述 MIME 类型系统的详细信息，请参见位于网站 freedesktop.org
上的〈*freedesktop.org Shared MIME Info specification（freedesktop.org
共享 MIME 信息说明）*〉。
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    :::
:::
:::
:::
::: section
::: titlepage
## [⁠]{#installing-integrating-applications.html#custom-mime-type-all-users}12.3.2. 为所有用户添加某种自定义的 MIME 类型 {.title}
:::
::: para
如需为系统上的所有用户添加一个自定义的 MIME 类型，并为该 MIME
类型注册一个默认的应用程序，您需要在
`/usr/share/mime/packages/`{.filename} 目录下创建一个新的 MIME
类型说明文件，在 `/usr/share/applications/`{.filename} 目录下创建一个
`.desktop`{.filename} 文件。
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
[⁠]{#installing-integrating-applications.html#idm139838604779824}
**过程 12.3. 为所有用户添加自定义的"`application/x-newtype`{.systemitem}"MIME
类型。**
1.  ::: para
    创建 `/usr/share/mime/packages/application-x-newtype.xml`{.filename}
    文件：
    :::
    ``` programlisting
    ​
    ​
    ​  
    ​    new mime type
    ​    
    ​  
    ​
    ```
    ::: para
    上述 `application-x-newtype.xml`{.filename} 样本文件定义了一种新的
    MIME
    类型"`application/x-newtype`{.systemitem}"，并指定拓展名是`.xyz`{.filename}
    的文件为该 MIME 类型。
    :::
2.  ::: para
    创建一个名为例如 `myapplication1.desktop`{.filename} 的新的
    `.desktop`{.filename} 文件，并将它放置在
    `/usr/share/applications/`{.filename} 目录下：
    :::
    ``` programlisting
    [Desktop Entry]
    Type=Application
    MimeType=application/x-newtype
    Name=My Application 1
    Exec=myapplication1
    ```
    ::: para
    上述 `myapplication1.desktop`{.filename}
    样本文件将"`application/x-newtype`{.systemitem}"MIME 类型与一个名为
    [**My Application 1**]{.application} 的应用程序相关联，该应用程序由
    `myapplication1`{.command} 命令运行。
    :::
3.  ::: para
    请以 root 身份更新 MIME 数据库以使您的更改生效：
    :::
    ``` screen
    # update-mime-database /usr/share/mime
    ```
4.  ::: para
    请以 root 身份更新应用程序数据库：
    :::
    ``` screen
    # update-desktop-database /usr/share/applications
    ```