## 如何快速、轻松、不落地的将 PostgreSQL 迁移到 阿里云 RDS PostgreSQL    
### 作者            
digoal            
### 日期            
2020-08-31            
### 标签            
PostgreSQL , 迁移 , DTS , pg_dump , pg_restore , DSG               
----            
## 背景            
将自建的PG迁移到阿里云RDS PG, 本文提供3种方法, 帮助读者较为轻松的完成迁移.      
## 1、方法1: 采用DTS服务    
https://help.aliyun.com/product/26590.html    
### 优势:    
图形化操作， 上手简单，出问题有专人服务    
支持增量迁移, 割接时停机时间短      
全量迁移免费, 增量收费    
### 缺陷:    
不支持按schema迁移, 不支持上传文件的方式选表, 如果表很多的话勾选特别麻烦.     
### 步骤, 略     
## 2、方法2: PG自带的工具进行迁移    
如果dts迁移不满足业务需求, 或者困难重重, 可以使用PG自带的工具进行迁移.     
### 优势:     
来自PG自己的工具, 兼容性最好,     
性能最好(超乎想象的快),     
选项特别灵活, 支持schema, database, 排除不需要的表, 选择需要的表.      
具体请参考pg_dump, pg_restore, TOC概念 .     
### 缺陷:     
支持全量, 不支持增量.     
要求有一定的PG使用基础能力, linux操作能力,     
### 步骤:     
1、准备一台可以连接到rds和源迁移库的ECS, 最好是linux系统, 下面例子也是linux的环境.     
centos 7.x x64    
https://www.postgresql.org/download/    
https://www.postgresql.org/download/linux/redhat/    
安装pg自带工具(必须包含与源库目标一致的版本(pg_dump)， 建议包括与目标库一致的版本(pg_restore)), 以下为PG 12的版本. 如需其他版本, 请自己进行选择     
```    
# Install the repository RPM:    
yum install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm    
# Install PostgreSQL:    
yum install -y postgresql12-*    
```     
配置环境变量， 主要是保证导出导入时使用的版本为安装的版本。  
```    
su - postgres    
vi .bash_profile     
# 追加           
export PS1="$USER@`/bin/hostname -s`-> "              
export LANG=en_US.utf8            
export PGHOME=/usr/pgsql-12            
export LD_LIBRARY_PATH=$PGHOME/lib:/lib64:/usr/lib64:/usr/local/lib64:/lib:/usr/lib:/usr/local/lib:$LD_LIBRARY_PATH            
export DATE=`date +"%Y%m%d%H%M"`            
export PATH=$PGHOME/bin:$PATH:.            
export MANPATH=$PGHOME/share/man:$MANPATH             
alias rm='rm -i'            
alias ll='ls -lh'            
unalias vi                 
```    
2、迁移用户1: 导出用户    
重要提示: 一定要先迁移用户, 否则可能因为对象的权限,owner问题导致迁移失败    
导出源库用户定义   
```    
pg_dumpall -g -h 127.0.0.1 -p 41921 -U postgres     
```
```
--    
-- PostgreSQL database cluster dump    
--    
SET default_transaction_read_only = off;    
SET client_encoding = 'UTF8';    
SET standard_conforming_strings = on;    
--    
-- Roles    
--    
CREATE ROLE postgres;    
ALTER ROLE postgres WITH SUPERUSER INHERIT CREATEROLE CREATEDB LOGIN REPLICATION BYPASSRLS PASSWORD 'md5d5df0d43cc619177e8c88a541fec598f';    
--    
-- PostgreSQL database cluster dump complete    
--    
```    
3、迁移用户2: 导入用户    
重要提示:   超级用户SUPERUSER需要修改为rds_superuser      
重要提示：  这里的密码最好不要用md5码， RDS可能改过这部分逻辑, 改成你的用户明文密码。  
在RDS PG中执行， 创建用户    
```    
postgres=> CREATE ROLE postgres;    
CREATE ROLE    
postgres=> ALTER ROLE postgres WITH rds_SUPERUSER INHERIT CREATEROLE CREATEDB LOGIN REPLICATION BYPASSRLS PASSWORD 'md5d5df0d43cc619177e8c88a541fec598f';    
ALTER ROLE    
postgres=> \du+ postgres    
                                          List of roles    
 Role name |                   Attributes                    |     Member of      |  Description      
-----------+-------------------------------------------------+--------------------+---------------    
 postgres  | Create role, Create DB, Replication, Bypass RLS | {pg_rds_superuser} | rds_superuser    
```    
4、创建目标数据库     
重要提示: encoding 和源库相同.  使用psql连接到源库， 并在psql中调用```\l``` 可以查询源库编码       
连接到RDS PG执行   
```    
postgres=> create database db3 with template template0 encoding 'UTF8' lc_ctype 'en_US.utf8' lc_collate 'C';  -- encoding 和源库相同    
```    
5、数据导出导入    
环境: 源库: 127.0.0.1:41921:postgres， 目标库：pgm-xxx.pg.rds.aliyuncs.com:1433:db3     
以迁移整个database为例(源postgres库迁移到目标db3库)     
重要提示: 不要导出表空间语句, 因为rds不支持表空间, 全部使用默认表空间即可    
5\.1、数据导出导入有3种方法，方法1:  不落地, 迁移.     
要求: 一台可以连接到rds和源迁移库的ECS, 最好是linux系统, 下面例子也是linux的环境.     
采用与源库PG大版本一致的pg_dump, psql     
配置密码文件(迁移任务完成后， 可以删除这个密码文件)    
格式:   
```
host:port:dbname:username:password
注意dbname, username必须小写(因为PG元数据默认都是小写存储)， 除非你的数据库和用户名在创建时使用双引号， 并且用了大写。    
```
例如:    
```    
vi ~/.pgpass    
pgm-xxx.pg.rds.aliyuncs.com:1433:db3:用户:密码
127.0.0.1:41921:postgres:用户:密码
```
重要提示： 务必设置密码文件权限, 否则无法使用     
```
chmod 400 ~.pgpass    
```    
用管道迁移数据    
```    
nohup pg_dump -F p -h 127.0.0.1 -p 41921 -U postgres -d postgres --no-tablespaces | time psql -h pgm-xxx.pg.rds.aliyuncs.com -p 1433 -U postgres --single-transaction db3 > ./pg.dump.log 2>&1 &   