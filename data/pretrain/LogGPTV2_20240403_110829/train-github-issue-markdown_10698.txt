#### Code Sample
    import pandas as pd
    df = pd.DataFrame({'tms': pd.date_range('2017-1-1', '2017-1-31'), 'v': xrange(31)})
    df_3 = pd.concat([df, df, df], axis=1)
    # What I would like to do: df_3.drop_duplicates(axis=1)
    deduplicated_df = df_3.T.drop_duplicates().T
#### Problem description
Duplicate columns can be introduced when using the `pd.concat(axis=1)` method.
It would be nice (not necessary) to use the `drop_duplicates` method with an
`axis` parameter set to `1`.
This can be implemented right now using: `df.T.drop_duplicates().T`. Maybe
there is an alternative, better way.
Notice that this isn't a bug but a feature request/feature enhancement of an
existing one.
#### Output of `pd.show_versions()`
    INSTALLED VERSIONS
    ------------------
    commit: None
    python: 2.7.10.final.0
    python-bits: 64
    OS: Darwin
    OS-release: 16.6.0
    machine: x86_64
    processor: i386
    byteorder: little
    LC_ALL: None
    LANG: fr_FR.UTF-8
    LOCALE: None.None
    pandas: 0.19.2
    nose: 1.3.7
    pip: 9.0.1
    setuptools: None
    Cython: None
    numpy: 1.13.0
    scipy: 0.19.1
    statsmodels: 0.6.1
    xarray: None
    IPython: 4.0.2
    sphinx: None
    patsy: 0.4.0
    dateutil: 2.6.0
    pytz: 2017.2
    blosc: None
    bottleneck: None
    tables: None
    numexpr: None
    matplotlib: 2.0.2
    openpyxl: None
    xlrd: 1.0.0
    xlwt: 1.1.2
    xlsxwriter: None
    lxml: None
    bs4: None
    html5lib: None
    httplib2: 0.9.2
    apiclient: 1.4.2
    sqlalchemy: 1.1.11
    pymysql: None
    psycopg2: 2.7.1 (dt dec pq3 ext lo64)
    jinja2: 2.9.6
    boto: 2.47.0
    pandas_datareader: None