title:Answering what-if deployment and configuration questions with wise
author:Muhammad Mukarram Bin Tariq and
Amgad Zeitoun and
Vytautas Valancius and
Nick Feamster and
Mostafa H. Ammar
Answering “What-If” Deployment and Conﬁguration
Questions with WISE∗
Mukarram Bin Tariq‡†, Amgad Zeitoun§, Vytautas Valancius‡, Nick Feamster‡, Mostafa Ammar‡
PI:EMAIL, PI:EMAIL, {valas,feamster,ammar}@cc.gatech.edu
‡ School of Computer Science, Georgia Tech. Atlanta, GA
§ Google Inc. Mountain View, CA
Abstract
Designers of content distribution networks often need to determine
how changes to infrastructure deployment and conﬁguration affect
service response times when they deploy a new data center, change
ISP peering, or change the mapping of clients to servers. Today, the
designers use coarse, back-of-the-envelope calculations, or costly
ﬁeld deployments; they need better ways to evaluate the effects
of such hypothetical “what-if” questions before the actual deploy-
ments. This paper presents What-If Scenario Evaluator (WISE),
a tool that predicts the effects of possible conﬁguration and de-
ployment changes in content distribution networks. WISE makes
three contributions: (1) an algorithm that uses traces from exist-
ing deployments to learn causality among factors that affect service
response-time distributions; (2) an algorithm that uses the learned
causal structure to estimate a dataset that is representative of the
hypothetical scenario that a designer may wish to evaluate, and
uses these datasets to predict future response-time distributions;
(3) a scenario speciﬁcation language that allows a network designer
to easily express hypothetical deployment scenarios without being
cognizant of the dependencies between variables that affect service
response times. Our evaluation, both in a controlled setting and
in a real-world ﬁeld deployment at a large, global CDN, shows that
WISE can quickly and accurately predict service response-time dis-
tributions for many practical what-if scenarios.
Categories and Subject Descriptors: C.2.3 [Computer Commu-
nication Networks]: Network Operations, Network Management
General Terms: Algorithms, Design, Management, Performance
Keywords: What-if Scenario Evaluation, Content Distribution
Networks, Performance Modeling
1.
INTRODUCTION
Content distribution networks (CDNs) for Web-based services
comprise hundreds to thousands of distributed servers and data cen-
∗This work is supported in part by NSF Awards CNS-0643974,
CNS-0721581, and CNS-0721559.
†Work performed while the author was visiting Google Inc.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
SIGCOMM’08, August 17–22, 2008, Seattle, Washington, USA.
Copyright 2008 ACM 978-1-60558-175-0/08/08 ...$5.00.
ters [1, 3, 9]. Operators of these networks continually strive to im-
prove the response times for their services. To perform this task,
they must be able to predict how service response-time distribution
changes in various hypothetical what-if scenarios, such as changes
to network conditions and deployments of new infrastructure. In
many cases, they must also be able to reason about the detailed ef-
fects of these changes (e.g., what fraction of the users will see at
least a 10% improvement in performance because of this change?),
as opposed to just coarse-grained point estimates or averages.
Various factors on both short and long timescales affect a CDN’s
service response time. On short timescales, response time can be
affected by routing instability or changes in server load. Occasion-
ally, the network operators may “drain” a data center for mainte-
nance and divert the client requests to an alternative location. In
the longer term, service providers may upgrade their existing facil-
ities, move services to different facilities or deploy new data centers
to address demands and application requirements, or change peer-
ing and customer relationships with neighboring ISPs. These in-
stances require signiﬁcant planning and investment; some of these
decisions are hard to implement and even more difﬁcult to reverse.
the effects of any of these
changes is extremely challenging in practice. Content distribution
networks are complex systems, and the response time perceived by
a user can be affected by a variety of inter-dependent and correlated
factors. Such factors are difﬁcult to accurately model or reason
about and back-of-the-envelope calculations are not precise.
reasoning about
Unfortunately,
This paper presents the design, implementation, and evaluation
of What-If Scenario Evaluator (WISE), a tool that estimates the ef-
fects of possible changes to network conﬁguration and deployment
scenarios on the service response time. WISE uses statistical learn-
ing techniques to provide a largely automated way of interpreting
the what-if questions as statistical interventions. WISE takes as in-
put packet traces from Web transactions to model factors that af-
fect service response-time prediction. Using this model, WISE also
transforms the existing datasets to produce a new datasets that are
representative of the what-if scenarios and are also faithful to the
working of the system, and ﬁnally uses these to estimate the sys-
tem response time distribution.
Although function estimation using passive datasets is a common
application in the ﬁeld of machine learning, using these techniques
is not straightforward because they can only predict the response-
time distribution for a what-if scenario accurately if the estimated
function receives an input distribution that is representative of the
what-if scenario. Providing this input distribution presents difﬁcul-
ties at several levels, and is the key problem that WISE solves.
WISE tackles the following speciﬁc challenges. First, WISE
must allow the network designers to easily specify what-if sce-
narios. A designer might specify a what-if scenario to change the
value of some network features relative to their values in an existing
or “baseline” deployment. The designer may not know that such a
change might also affect other features (or how the features are
related). WISE’s interface shields the designers from this complex-
ity. WISE provides a scenario speciﬁcation language that allows
network designers to succinctly specify hypothetical scenarios for
arbitrary subsets of existing networks and to specify what-if val-
ues for different features. WISE’s speciﬁcation language is simple:
evaluating a hypothetical deployment of a new proxy server for a
subset of users can be speciﬁed in only 2 to 3 lines of code.
Second, because the designer can specify a what-if scenario
without being aware of these dependencies, WISE must automat-
ically produce an accurate dataset that is both representative of
the what-if scenario the designer speciﬁes and consistent with the
underlying dependencies. WISE uses a causal dependency discov-
ery algorithm to discover the dependencies among variables and
a statistical intervention evaluation technique to transform the ob-
served dataset to a representative and consistent dataset. WISE then
uses a non-parametric regression method to estimate the response
time as a piece-wise smooth function for this dataset. We have
used WISE to predict service response times in both controlled set-
tings on the Emulab testbed and for Google’s global CDN for its
Web-search service. Our evaluation shows that WISE’s predictions
of response-time distribution are very accurate, yielding a median
error between 8% and 11% for cross-validation with existing de-
ployments and only 9% maximum cumulative distribution differ-
ence compared to ground-truth response time distribution for what-
if scenarios on a real deployment as well as controlled experiments
on Emulab.
Finally, WISE must be fast, so that it can be used for short-term
and frequently arising questions. Because the methods relying on
statistical inference are often computationally intensive, we have
tailored WISE for parallel computation and implemented it using
the Map-Reduce [16] framework, which allows us to process large
datasets comprising hundreds of millions of records quickly and
produce accurate predictions for response-time distributions.
The paper proceeds as follows. Section 2 describes the problem
scope and motivation. Section 3 makes the case for using statistical
learning for the problem of what-if scenario evaluation. Section 4
provides an overview of WISE, and Section 5 describes WISE’s al-
gorithms in detail. We discuss the implementation in Section 6.
In Section 7, we evaluate WISE for response-time estimation for
existing deployments as well as for a what-if scenario based on a
real operational event. In Section 8, we evaluate WISE for what-if
scenarios for a small-scale network built on the Emulab testbed. In
Section 9, we discuss various properties of the WISE system and
how it relates to other areas in networking. We review related work
in Section 10, and conclude in Section 11.
2. PROBLEM CONTEXT AND SCOPE
This section describes common what-if’ questions that the net-
work designers pose when evaluating potential conﬁguration or de-
ployment changes to an existing content distribution network de-
ployment.
Content Distribution Networks: Most CDNs conform to a two-
tier architecture. The ﬁrst tier comprises a set of globally dis-
tributed front-end (FE) servers that, depending on the speciﬁc im-
plementation, provide caching, content assembly, pipelining, re-
quest redirection, and proxy functions. The second tier comprises
backend (BE) servers that implement the application logic, and
which might also be replicated and globally distributed. The FE
and BE servers may belong to a single administrative entity (as is
(a) Before the Maintenance
(b) During the Maintenance
Figure 1: Network conﬁguration for customers in India.
the case with Google [3]) or to different administrative entities, as
with commercial content distribution networking service providers,
such as Akamai [1]. The network path between the FE and BE
servers may be over a public network or a private network, or a
LAN when the two are co-located. CDNs typically use DNS redi-
rection or URL-rewriting [13] to direct the users to the appropriate
FE and BE servers; this redirection may be based on the user’s
proximity, geography, availability, and relative server load.
An Example “What-if” Scenario: The network designers may
want to ask a variety of what-if questions about the CDN conﬁgu-
ration. For example, the network designers may want to determine
the effects of deploying new FE or BE servers, changing the serving
FE or BE servers for a subset of users, changing the size of typical
responses, increasing capacity, or changing network connectivity,
on the service response time. Following is a real what-if scenario
from Google’s CDN for the Web-search service.
Figure 1 shows an example of a change in network deployment
that could affect server response time. Google has an FE data cen-
ter in India that serves users in India and surrounding regions. This
FE data center uses BE servers located elsewhere in the world, in-
cluding the ones located in Taiwan. On July 16, 2007, the FE data
center in India was temporarily “drained” for maintenance reasons,
and the trafﬁc was diverted to a FE data center that is co-located
with BE in Taiwan, resulting in a change in latency for the users in
India. This change in the network conﬁguration can be described
as a what-if scenario in terms of change of the assigned FE, or more
explicitly as changes in delays between FE and clients that occur
due to the new conﬁguration. WISE aims to predict the response-
time distribution for reconﬁgurations before they are deployed in
practice.
3. A CASE FOR MACHINE LEARNING
In this section, we present two aspects of what-if scenario evalua-
tion that make the problem well-suited for machine learning: (1) an
underlying model that is difﬁcult to derive from ﬁrst principles but
provides a wealth of data; (2) a need to predict outcomes based on
data that may not directly represent the desired what-if scenario.
The system is complex, but observable variables are driven by
fundamental properties of the system. Unfortunately, in large
complex distributed systems, such as CDNs, the parameters that
govern the system performance, the relationships between these
variables, as well as the functions that govern the response-time
distribution of the system, are often complex and are character-
ized by randomness and variability that are difﬁcult to model as
simple readily evaluatable formulas. Fortunately, the underlying
fundamental properties and dependencies that determine a CDN’s
response time can be observed as correlations and joint probabil-
ity distributions of the variables that deﬁne the system, including
the service response time. By observing these joint distributions
(e.g., response times observed under various conditions), machine
learning algorithms can infer the underlying function that affects
the response time. Because most production CDNs collect compre-
hensive datasets for their services as part of everyday operational
and monitoring needs, the requisite datasets are typically readily
available.
Obtaining datasets that directly represent the what-if scenario
is challenging. Once the response-time function is learned, evalu-
ating a what-if scenario requires providing this function with input
data that is representative of the what-if scenario. Unfortunately,
data collected from an existing network deployment only represents
the current setup, and the system complexities make it difﬁcult for
a designer to manually “transform” the data to represent the new
scenario. Fortunately, depending on the extent of the dataset that is
collected and the nature of what-if scenario, machine learning al-
gorithms can reveal the dependencies among the variables and use
the dependency structure to intelligently re-weigh and re-sample
the different parts of the existing dataset to perform this transfor-
mation. In particular, if the what-if scenario is expressed in terms
of the changes to values of the variables that are observed in the
dataset and the changed values or similar values of these variables
are observed in the dataset even with small densities in the origi-
nal dataset, then we can transform the original dataset to one that
is representative of the what-if scenario as well as the underlying
principles of the system, while requiring minimal input from the
network designer.
4. WISE: HIGH-LEVEL DESIGN
WISE entails four steps: (1) identifying features in the dataset
that affect response time; (2) constraining the inputs to “valid” sce-
narios based on existing dependencies; (3) specifying the what-if
scenario; (4) estimating the response-time function and distribu-
tion. Each of these tasks raises a number of challenges, some of
which are general problems with applying statistical learning in
practice, and others are speciﬁc to what-if scenario evaluation. This
section provides an overview and necessary background for these
steps. Section 5 discuss the mechanisms in more depth; the techni-
cal report [24] provides additional details and background.
1. Identifying Relevant Features: The main input to WISE is a
comprehensive dataset that covers many combinations of variables.
Most CDNs have existing network monitoring infrastructure that
can typically provide such a dataset. This dataset, however, may
contain variables that are not relevant to the response-time function.
WISE extracts the set of relevant variables from the dataset and dis-
cards the rest of the variables. WISE can also identify whether there
are missing or latent variables that may hamper scenario evaluation
(Sections 5.1 and 5.2 provide more details).
The nature of what-if scenarios that WISE can evaluate is limited
by the input dataset—careful choice of variables that the monitor-
ing infrastructure collects from a CDN can therefore enhance the
utility of the dataset for evaluating what-if scenarios, choosing such
variables is outside the scope of WISE system.
2. Preparing Dataset to Represent the What-if Scenario: Eval-
uating a what-if scenario requires values for input variables that
“make sense.” Speciﬁcally, an accurate prediction of the response-
time distribution for a what-if scenario requires a joint distribution
of the input variables that is representative of the scenario and is
also consistent with the dependencies that are inherent to the sys-
Figure 2: Main steps in the WISE approach.
tem itself. For instance, the distribution of the number of packets
that are transmitted in the duration of a service session depends on
the distribution of the size of content that the server returns in reply
to a request; if the distribution of content size changes, then the dis-
tribution for the number of packets that are transmitted must also
change in a way that is inherent to the system, e.g., the path-MTU
might determine the number of packets. Further, the change might
cascade to other variables that in turn depend on the number of
packets. To enforce such consistency WISE learns the dependency
structure among the variables and represents these relationships as
a Causal Bayesian Network (CBN) [20]. We provide a brief back-
ground of CBN in this Section and explain the algorithm for learn-
ing the CBN in Section 5.2.
A CBN represents the variables in the dataset as a Directed
Acyclic Graph (DAG). The nodes represent the variables and the
edges indicate whether there are dependencies among the variables.
A variable has a “causal” relationship with another variable, if a
change in the value of the ﬁrst variable causes a change in the val-
ues of the later. When conditioned on its parent variables, a variable
xi in a CBN is independent of all other variables in the DAG except
its decedents; an optimal DAG for a dataset is one where we ﬁnd
the minimal parents for each node that satisfy the above property.
x5
x1
As an example of how the causal structure
may facilitate scenario speciﬁcation and eval-
uation, consider a dataset with ﬁve input vari-
ables (x1 . . . x5), and target variable y. Sup-
pose that we discover a dependency struc-
ture among them as shown in the ﬁgure to
the right. If WISE is presented with a what-
if scenario that requires changes in the value
of variable x2, then the distributions for vari-