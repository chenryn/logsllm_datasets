### Original Ticket
**Ticket URL:** http://projects.scipy.org/scipy/ticket/777  
**Date:** 2008-11-04  
**Reporter:** @pv  
**Assignee:** Unknown

### Issue Description
The LAPACK tests in SciPy (commit `6f2abae`) are failing on a 32-bit Ubuntu Intrepid system with ATLAS3-SSE. The failures occur in the `test_lapack.test_all_lapack` test suite, specifically in the `check_syevr` and `check_syevr_irange` functions.

### Test Failures
#### Failure 1: `check_syevr`
**Traceback:**
```
======================================================================
FAIL: test_lapack.test_all_lapack
----------------------------------------------------------------------
Traceback (most recent call last):
  File ".../nose/case.py", line 182, in runTest
    self.test(*self.arg)
  File ".../scipy/lib/lapack/tests/esv_tests.py", line 41, in check_syevr
    assert_array_almost_equal(w, exact_w)
  File ".../numpy/testing/utils.py", line 311, in assert_array_almost_equal
    header='Arrays are not almost equal')
  File ".../numpy/testing/utils.py", line 296, in assert_array_compare
    raise AssertionError(msg)
AssertionError: 
Arrays are not almost equal
(mismatch 33.3333333333%)
 x: array([-0.66992444,  0.48769444,  9.18222618], dtype=float32)
 y: array([-0.66992434,  0.48769389,  9.18223045])
```

#### Failure 2: `check_syevr_irange`
**Traceback:**
```
======================================================================
FAIL: test_lapack.test_all_lapack
----------------------------------------------------------------------
Traceback (most recent call last):
  File ".../nose/case.py", line 182, in runTest
    self.test(*self.arg)
  File ".../scipy/lib/lapack/tests/esv_tests.py", line 66, in check_syevr_irange
    assert_array_almost_equal(w, exact_w[rslice])
  File ".../numpy/testing/utils.py", line 311, in assert_array_almost_equal
    header='Arrays are not almost equal')
  File ".../numpy/testing/utils.py", line 296, in assert_array_compare
    raise AssertionError(msg)
AssertionError: 
Arrays are not almost equal
(mismatch 33.3333333333%)
 x: array([-0.66992444,  0.48769444,  9.18222618], dtype=float32)
 y: array([-0.66992434,  0.48769389,  9.18223045])
```

### Observations
I noticed that the results are in `float32`, which may be contributing to the precision issues. Further investigation is needed to determine why the results are in `float32` and whether this is expected behavior or a potential bug.