---
author: Julia Evans
category: 技术
comments_data:
- date: '2022-11-15 16:37:37'
  message: 为什么后缀名前有一点并且很重要呢？因为没人关心它
  postip: 185.220.101.8
  username: 来自欧盟的 Firefox 91.0|Windows 10 用户
- date: '2022-11-16 15:46:02'
  message: 点应该是表示根域，然后是一级子域名（例如 .com), 再是子域名（例如 example), 最后是主机名(例如 www). root -&gt;
    com -&gt; example -&gt; www
  postip: 118.113.208.20
  username: 来自四川成都的 Firefox 106.0|GNU/Linux 用户
count:
  commentnum: 2
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 3622
date: '2022-11-15 00:11:00'
editorchoice: false
excerpt: 但是为什么末尾的点是有用且重要的呢？
fromurl: https://jvns.ca/blog/2022/09/12/why-do-domain-names-end-with-a-dot-/
id: 15254
islctt: true
largepic: /data/attachment/album/202211/15/001222ytut3qvtau32f2p2.jpg
permalink: /article-15254-1.html
pic: /data/attachment/album/202211/15/001222ytut3qvtau32f2p2.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: 但是为什么末尾的点是有用且重要的呢？
tags:
- 域名
- DNS
thumb: false
title: 为什么有时候域名的末尾有个点？
titlepic: true
translator: lxbwolf
updated: '2022-11-15 00:11:00'
---
![](/data/attachment/album/202211/15/001222ytut3qvtau32f2p2.jpg)
大家好！今年早些时候，我在写《[DNS 是如何工作的](https://wizardzines.com/zines/dns/)》 时，有人问我——为什么人们有时在域名的末尾加一个点？例如，如果你通过运行 `dig example.com` 查询 `example.com` 的 IP，你会看到一下内容：
```
$ dig example.com
example.com.        5678    IN  A   93.184.216.34
```
执行完 `dig` 命令后，`example.com` 有一个 `.` ——变成了 `example.com.`！发生了什么？
有些 DNS 工具也要求传给它的域名后加一个 `.`：如果你在使用 [miekg/dns](https://github.com/miekg/dns) 时传给它 `example.com`，它会报错：
```
// trying to send this message will return an error
m := new(dns.Msg)
m.SetQuestion("example.com", dns.TypeA)
```
最初我以为我知道这个问题的答案（“呃，末尾的点意味着域名是完全限定的？”）。这是对的 —— 一个 完全限定域名   fully qualified domain name （FQDN）是一个末尾有 `.` 的域名！
但是*为什么*末尾的点是有用且重要的呢？
### 在 DNS 的请求/响应中，域名的末尾并没有 “.”
我曾经（错误地）认为 “为什么末尾有一个点？”的答案可能是 “在 DNS 请求/响应中，域名末尾有一个 `.`，所以我们把它放进去，以匹配你的计算机实际发送/接收的内容”。但事实并不是这样！
当计算机发送 DNS 请求/响应时，域名的末尾并没有点。实际上，域名中*没有*点。
域名会被编码成一系列的长度/字符串对。例如，域名 `example.com` 被编码为这 13 个字节。
```
7example3com0
```
编码后的内容一个点也没有。一个 ASCII 域名（如 `example.com`）被转成了各种 DNS 软件的 DNS 请求/响应中使用的格式。
今天我们来讨论域名被转成 DNS 响应的一个地方：区域文件。
### 区域文件中域名末尾的 “.”
一些人管理域名的 DNS 记录的方法是创建一个被称为 “区域文件” 的文本文件，然后配置一些 DNS 服务器软件（如 `nsd` 或 `bind`）来为该区域文件中指定的 DNS 记录提供服务。
下面是一个对应 `example.com` 的示例区域文件：
```
orange  300   IN    A     1.2.3.4
fruit   300   IN    CNAME orange
grape   3000  IN    CNAME example.com.
```
在这个文件中，任何不以 `.` 结尾的域名（比如 `orange`）后都会自动加上 `.example.com`。所以 `orange` 成了 `orange.example.com` 的简称。DNS 服务器从它的配置中得知这是一个 `example.com` 的区域文件，所以它知道在所有不以点结尾的名字后面自动添加 `example.com`。
我想这里的想法只是为了少打几个字符——如果要打出全称，区域文件会是这样：
```
    orange.example.com.  300   IN    A     1.2.3.4
    fruit.example.com.   300   IN    CNAME orange.example.com.
    grape.example.com.   3000  IN    CNAME example.com.
```
确实多了很多字符。
### 你也可以不通过区域文件来使用 DNS
尽管官方的 DNS RFC（[RFC 1035](https://www.rfc-editor.org/rfc/rfc1035#section-4.1.1)）中定义了区域文件格式，但你也可以不通过区域文件来使用 DNS。例如，AWS Route 53 就不用区域文件来存储 DNS 记录！你可以通过 Web 界面或 API 来创建记录，我猜他们是用某种数据库而不是一堆文本文件来存储记录。
不过，Route 53（像许多其他 DNS 工具一样）确实支持导入和导出区域文件，这个功能或许在你更换 DNS 提供商时很有用。
### dig 命令输出中末尾的 “.”
现在我们来讨论下 `dig` 命令的输出：
```
$ dig example.com
; > DiG 9.18.1-1ubuntu1.1-Ubuntu > +all example.com
;; global options: +cmd
;; Got answer:
;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 10712
;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1
;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 65494
;; QUESTION SECTION:
;example.com.           IN  A
;; ANSWER SECTION:
example.com.        81239   IN  A   93.184.216.34
```
有一件奇怪的事是，几乎每一行都以 `;;` 开头，这是怎么回事？`;` 是区域文件中的注释字符！