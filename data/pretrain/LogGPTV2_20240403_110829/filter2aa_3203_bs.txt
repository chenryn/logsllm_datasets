The servers that receive the push replication use pull replication between each other because the 
network link between Sydney and Seattle is relatively slow. Replication should occur when the link is 
the least busy, such as late at night. 
Configuring Database Replication 
To add a replication partner for a WINS server and to configure replication options, do the following: 
Chapter 12 – Windows Internet Name Service Overview 
TCP/IP Fundamentals for Microsoft Windows  
Page: 355 
1. Open the WINS snap-in, and then open the appropriate server in the tree. 
2. Right-click Replication Partners, and then click New Replication Partner.  
3. In New Replication Partner, type the name or IPv4 address of the WINS server to add as a 
replication partner.  
4. In the details pane, double-click the newly added server.  
5. In the ServerName Properties dialog box, click the Advanced tab. 
6. Configure the replication partner type and the pull and push replication settings as needed, and then 
click OK. 
Figure 12-9 shows the Advanced tab for the properties of a WINS replication partner. 
Figure 12-9  The Advanced tab for the properties of a WINS replication partner 
Replication can be configured to occur at the following times: 
During WINS Server service start-up.  
When a replication partner is configured, the WINS Server service, by default, automatically 
performs pull replication each time it is started. You can also configure the service to perform push 
replication each time it is started. 
At a configured time or interval, such as every five hours (pull trigger). 
When a WINS server reaches a configured threshold for the number of registrations and changes to the 
WINS database (push trigger).  
When the server reaches the threshold, it notifies all of its pull partners, which request the new 
entries. 
When you manually initiate replication using the WINS snap-in. 
To initiate replication with all replication partners, right-click the Replication Partners node of the 
appropriate server in the WINS snap-in, and click Replicate now. To initiate replication with a 
Chapter 12 – Windows Internet Name Service Overview 
TCP/IP Fundamentals for Microsoft Windows  
Page: 356 
specific replication partner, right-click the partner in the details pane and click either Start push 
replication or Start pull replication. 
When you manually initiate replication using the netsh wins server init replicate command. 
WINS Automatic Replication Partners 
If your IPv4 network supports multicast forwarding and routing, you can configure the WINS Server 
service to automatically find other WINS servers on the network by sending WINS autoconfiguration 
messages to the multicast IPv4 address 224.0.1.24. When enabled, this multicasting occurs by default 
every 40 minutes. Any WINS servers found on the network are automatically configured as push and 
pull replication partners, with pull replication set to occur every two hours. If your IPv4 network does not 
support multicast forwarding and routing, the WINS server will find only other WINS servers on its local 
subnet. For more information about IP multicast forwarding and routing, see Appendix A, "IP Multicast." 
Automatic replication is disabled by default. To enable this feature, select the Enable Automatic 
Partner Configuration check box on the Advanced tab for the properties of the Replication Partners 
node in the WINS snap-in. On the Advanced tab, you can also configure the interval to check for new 
partners and the TTL for the multicast packets sent, which determines how far the multicast packets 
can travel before being discarded by routers. 
Chapter 12 – Windows Internet Name Service Overview 
TCP/IP Fundamentals for Microsoft Windows  
Page: 357 
The WINS Proxy 
A WINS proxy is a WINS client computer that is configured to act on behalf of other NetBT computers 
that are not WINS clients. WINS proxies help resolve NetBIOS name queries from non-WINS clients. 
By default, most non-WINS clients send broadcasts to register their NetBIOS names on the network 
and to resolve NetBIOS name queries. A WINS proxy listens to broadcast NetBIOS name queries sent 
on the subnet, queries a WINS server, and replies to the NetBIOS name query. 
WINS proxies are useful or necessary only on subnets that contain NetBIOS broadcast-only (or B-
node) clients. For most Windows-based networks, WINS-capable clients are common and WINS 
proxies are typically not needed. 
You can use WINS proxies in the following ways: 
When a non-WINS client registers a unique name, the WINS proxy checks the name against its 
configured WINS server. If the unique name exists in the WINS server database, the WINS proxy sends 
a negative Name Registration Response message back to the non-WINS client that is attempting to 
register the name.  
When a non-WINS client releases a NetBIOS name, the WINS proxy deletes the name from its 
NetBIOS name cache.  
When a non-WINS client sends a broadcast name query, the WINS proxy attempts to resolve the name 
either by using information contained in its NetBIOS name cache or by sending its own NetBIOS Name 
Query Request message to its WINS server.  
How WINS Proxies Resolve Names 
Figure 12-10 shows how a WINS proxy resolves a NetBIOS name requested by a non-WINS client. 
Chapter 12 – Windows Internet Name Service Overview 
TCP/IP Fundamentals for Microsoft Windows  
Page: 358 
Figure 12-10  How a WINS proxy resolves a NetBIOS name for a non-WINS client 
The WINS proxy (Host A) uses the following steps to resolve a NetBIOS name for the non-WINS 
computer (Host B): 
1. Host B broadcasts a NetBIOS Name Query Request message on the local subnet.  
2. Host A receives the broadcast message and checks its NetBIOS name cache for an entry that 
matches the NetBIOS name specified in the NetBIOS Name Query Request message.  
3. If Host A has a matching NetBIOS name-to-IPv4 address mapping in its NetBIOS name cache, Host 
A returns the IPv4 address to Host B using a positive NetBIOS Name Query Response message. If 
not, Host A sends a unicast NetBIOS Name Query Request message to its WINS server for the 
name that Host B requested. 
4. If the WINS server can resolve the NetBIOS name, it sends a positive NetBIOS Name Query 
Response message back to Host A. 
5. Host A receives the positive NetBIOS Name Query Response message, adds this mapping to its 
NetBIOS name cache, and then sends a unicast positive NetBIOS Name Query Response message 
to Host B.  
If the WINS server sends a negative NetBIOS Name Query Response message to Host A, Host A 
sends no messages to Host B. 
WINS Proxies and Name Registration 
When a non-WINS client broadcasts a NetBIOS Name Registration Request message for a unique 
name, the WINS proxy sends a NetBIOS Name Query Request message to its configured WINS server 
to verify that the name has not already been registered with WINS. If the WINS server sends a positive 
Chapter 12 – Windows Internet Name Service Overview 
TCP/IP Fundamentals for Microsoft Windows  
Page: 359 
NetBIOS Name Query Response message to the WINS proxy, the proxy sends a negative NetBIOS 
Name Registration Response message to the non-WINS client. If the WINS server sends a negative 
NetBIOS Name Query Response message to the WINS proxy, the proxy does not respond to the non-
WINS client. 
Configuration of a WINS Proxy 
To enable a computer running Windows as a WINS proxy, set the 
HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\NetBT\Parameters\EnableProxy registry 
value to 1 (REG_DWORD), and then restart the TCP/IP NetBIOS Helper service. 
Note  Incorrectly editing the registry may severely damage your system. Before making changes to the 
registry, you should back up any valued data on the computer. 
To provide fault tolerance if a WINS proxy becomes unavailable, you should use two WINS proxies for 
each subnet that contains non-WINS clients.  
Chapter 12 – Windows Internet Name Service Overview 
TCP/IP Fundamentals for Microsoft Windows  
Page: 360 
Chapter Summary 
The chapter includes the following pieces of key information: 
WINS is the Windows implementation of a NetBIOS name server, which provides a database for 
registering and querying dynamic mappings of NetBIOS names to IPv4 addresses used on your 
network. 
When a WINS client starts, it registers its NetBIOS names with its configured WINS server. A WINS 
client renews the registration of its NetBIOS names on an ongoing basis.  
WINS clients send their NetBIOS name queries to their configured WINS servers for NetBIOS name 
resolution. 
When a NetBIOS application on a WINS client is shut down, the WINS client releases the names 
registered with its configured WINS server. 
You can configure the WINS client for Windows by DHCP, through Network Connections, using the 
Netsh tool, and during the establishment of a PPP connection. 
The WINS Server service for  
Windows Server 2008 and Windows Server 2003 supports static mappings for non-WINS clients and 
WINS database replication with other WINS servers. 
A pull partner is a WINS server that pulls or requests replication of updated WINS database entries 
from other WINS servers (those configured to use it as a push partner) at a configured interval. Pull 
partners request entries with a higher version ID than that of the last entry received from its configured 
partner. 
A push partner is a WINS server that pushes or notifies other WINS servers (those configured to use it 
as a pull partner) of the need to replicate their database entries when a specified number of entries 
have changed.  
A WINS proxy is a WINS client computer configured to act on behalf of non-WINS clients. WINS 
proxies help detect duplicate names and resolve NetBIOS name queries for NetBT computers.  
Chapter 12 – Windows Internet Name Service Overview 
TCP/IP Fundamentals for Microsoft Windows  
Page: 361 
Chapter Glossary 
DNS – See Domain Name System (DNS). 
DNS client resolver cache – A RAM-based table that contains both the entries in the Hosts file and the 
results of recent DNS name queries. 
Domain Name System (DNS) – A hierarchical, distributed database that contains mappings of DNS 
domain names to various types of data, such as IP addresses. DNS enables users to locate computers 
and services by friendly names and to discover other information stored in the database. 
Host name – The DNS name of a host or interface on a network. For one computer to find another, the 
name of the computer to locate must either appear in the Hosts file on the computer that is looking or  
be known by a DNS server. For most computers running Windows, the host name and the computer 
name are the same.  
Lmhosts file – A local text file that maps NetBIOS names to IP addresses for hosts that are located on 
remote subnets. For computers running Windows, this file is stored in the 
systemroot\System32\Drivers\Etc folder. 
NBNS – See NetBIOS name server (NBNS). 
NetBIOS name - A 16-byte name of a process using NetBIOS. 
NetBIOS name cache – A dynamically maintained table on a NetBIOS-enabled host. The NetBIOS 
name cache stores recently resolved NetBIOS names and their associated IPv4 addresses. 
NetBIOS name resolution – The process of resolving a NetBIOS name to an IPv4 address. 
NetBIOS name server (NBNS) – A server that stores mappings of NetBIOS names to IPv4 addresses  
and that resolves NetBIOS names for NetBIOS-enabled hosts. The WINS Server service is the 
Microsoft implementation of a NetBIOS name server. 
NetBIOS node type – A designation of the specific way that NetBIOS nodes resolve NetBIOS names. 
Network Basic Input/Output System (NetBIOS) – A standard Session layer API for user applications 
and a protocol for session management and data transport. 
pull partner – A WINS component that requests replication of updated WINS database entries from its 
push partner. 
push partner – A WINS component that notifies its pull partner when updated WINS database entries 
are available for replication. 
static mapping – A manually created entry in the database of a WINS server so that WINS clients can 
resolve the NetBIOS names of non-WINS clients. 
Time-to-Live – The amount of time that a NetBIOS name is stored on a WINS server. The TTL is 
configured on the WINS server. 
TTL – See Time-to-Live. 
Windows Internet Name Service (WINS) – The Microsoft implementation of a NetBIOS name server. 
WINS – See Windows Internet Name Service (WINS). 
Chapter 12 – Windows Internet Name Service Overview 
TCP/IP Fundamentals for Microsoft Windows  
Page: 362 
WINS client – A component of the TCP/IP protocol for Windows that supports NetBIOS name 
operations using a WINS server. 
WINS proxy – A WINS client computer configured to act on behalf of non-WINS clients. WINS proxies 
help detect duplicate NetBIOS names and resolve NetBIOS name queries for NetBT computers.  
WINS server – A computer running the WINS Server service. 
Chapter 13 – Internet Protocol Security and Packet Filtering 
TCP/IP Fundamentals for Microsoft Windows  
Page: 363 
Chapter 13 – Internet Protocol Security and Packet Filtering 
Abstract 
This chapter describes the support for Internet Protocol security (IPsec) and IP packet filtering in Microsoft Windows 
operating systems. IPsec can provide cryptographic protection for IP packet payloads. Packet filtering can specify which 
types of packets are received or dropped. A network administrator must understand IPsec and packet filtering and its 
effect on IP network traffic to configure network security and troubleshoot connectivity problems. 
Chapter 13 – Internet Protocol Security and Packet Filtering 
TCP/IP Fundamentals for Microsoft Windows  
Page: 364 
Chapter Objectives 
After completing this chapter, you will be able to: 
Describe the roles that IPsec and IP packet filtering play in helping to protect network nodes. 
Define IPsec and its uses to block, permit, or help protect IP traffic. 
Define packet filtering and its uses to block or permit IP traffic. 
List and describe the security properties of IPsec-protected traffic. 
Describe the functions of the Authentication Header, Encapsulating Security Payload, and Internet Key 
Exchange IPsec protocols. 
Distinguish between transport mode and tunnel mode. 
Describe the purposes of main mode and quick mode IPsec negotiations. 
Define an IPsec policy in terms of its general settings and rules. 
List and describe the configuration elements of an IPsec rule. 
Describe Windows Firewall and how you can use it to help protect against malicious users and 
programs. 
Describe Internet Connection Firewall. 
Describe TCP/IP filtering and its configuration. 
Describe what Basic Firewall does and how Routing and Remote Access can filter IPv4 packets. 
Describe how the basic IPv6 firewall, the IPv6 Internet Connection Firewall, and Windows Firewall filter 
IPv6 packets. 
Chapter 13 – Internet Protocol Security and Packet Filtering 
TCP/IP Fundamentals for Microsoft Windows  
Page: 365 
IPsec and Packet Filtering Overview 
The Internet was originally designed for wide-open communications between connected computers. 
However, today's Internet is a hostile networking environment. Computers on the Internet must protect 
themselves from malicious users and programs that attempt to disable, control, or improperly access 
the resources of the computer. Private intranets can also contain malicious users and programs. On 
either the Internet or a private intranet, sensitive data should be cryptographically protected before 
being sent to its destination. In some cases, laws require you to cryptographically protect data sent over 
the network. 
To help protect traffic or prevent unwanted traffic, Windows Vista, Windows XP, Windows Server 2008, 
and Windows Server 2003 include the following technologies: 
IPsec  A framework of open standards for helping ensure private, protected communications over 
Internet Protocol (IP) networks through the use of cryptographic security services. The Windows 
implementations of IPsec are based on standards developed by the IPsec working group of the Internet 
Engineering Task Force (IETF).  
Packet filtering  The ability to configure interfaces to accept or discard incoming traffic based on a 
variety of criteria such as Transmission Control Protocol (TCP) and User Datagram Protocol (UDP) 
ports, source and destination IP addresses, and whether the incoming traffic was sent because the 
receiving computer requested it. 
This chapter describes these two technologies and how Windows Vista, Windows XP, Windows Server 
2008, and Windows Server 2003 support them. 
Chapter 13 – Internet Protocol Security and Packet Filtering 
TCP/IP Fundamentals for Microsoft Windows  
Page: 366 
IPsec 
The original standards for the TCP/IP protocol suite were not designed to protect IP packets. By default, 
IP packets are easy to interpret, modify, replay, and forge. Without protection for IP packet payloads, 
both public and private networks are susceptible to unauthorized monitoring and access. Although 
internal attacks might result from minimal or nonexistent intranet security, risks from outside a private 
network stem from connections to both the Internet and extranets. Requiring passwords to access 
network resources, such as permissions on a shared folder, does not protect data transmitted across a 
network. 
IPsec is the long-term direction for standards-based, protected, IP-based networking. It provides a key 
line of defense against private network and Internet attacks, balancing ease of deployment with strong 
security. IPsec has two goals:  
1. To protect IP packets  