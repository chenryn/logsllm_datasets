## 0x04 Active Directory 证书服务在LDAP中的体现
ADCS的信息同样也存储在LDAP上，我们可以在配置分区底下的Service底下的`Public Key Services`看到证书相关的信息
，比如在我们的环境就位于`CN=Public Key
Services,CN=Services,CN=Configuration,DC=test16,DC=local`。
每一块的对象的用途都不一样，接下来我们详细介绍我们比较关注的几个对象
  * _Certification Authorities_
这个对象是证书颁发机构，定义了受信任的根证书。
每个 CA 都表示为容器内的一个 AD 对象,objectClass为`certificationAuthority`。
CA证书的内容以二进制的内容放在cACertificate底下。
  * Enrollment Services
这个对象定义了每个企业 CA。
每个企业CA 都表示为容器内的一个 AD 对象,objectClass为`pKIEnrollmentService`
CA证书的内容以二进制的内容放在cACertificate底下。dNSHostName定义了CA的DNS主机
  * certificateTemplates
这个对象定义了所有证书模板
  * NTAuthCertificates
此条目用于存储有资格颁发智能卡登录证书并在 CA 数据库中执行客户端私钥存档的 CA
的证书。关于智能卡，后面会单独写一篇文章详细阐述智能卡，在这篇文章里面，默认提及的证书都是软件层面的，不涉及到硬件的。
  * CDP
这个容器存储了被吊销的证书列表
## 0x05 窃取证书
在我们控的计算机上可能会存在一些证书，这些证书有可能是用客户端身份验证，有可能是CA证书，用以信任其他证书的。我们可以将这些证书导出来，这里我们分为两种情况导出来。
### 0x0501 从系统存储导出证书
这种情况我们使用windows自带的命令`certutil`来导出
`certutil`默认查看的是计算机证书，可以通过指定`-user`参数来查看用户证书
(图形化查看用户证书是命令是`certmgr.msc`，图形化查看计算机证书的命令是`certlm.msc`)
`certutil`还可以通过`-store`来查看存储分区，参数有`CA`,`root`,`My`分别对应`中间证书机构`,`个人证书`,`受信任的根证书颁发机构`。
有些证书在导入的时候需要密码或者勾选证书不可导出
这个时候就需要使用mimikatz来导出证书了。下面我们举两个导出的案例。
1、导出用户证书
打开`certmgr.msc`
如果我们想查看个人证书可以用
`certutil -user -store My`
找到我们想导出的证书的hash
如果仅仅是只是导出证书，不导出私钥
`certutil -user -store My f95e6b5dbafac54963c450052848745a54ec7bd9
c:\Users\test1\Desktop]test1.cer`
如果要导出证书包含私钥
`certutil -user -exportPFX f95e6b5dbafac54963c450052848745a54ec7bd9
c:\Users\test1\Desktop]test1.pfx`
这一步如果我们需要输入一个密码，这个密码是待会儿这个导出的证书 导入到咱们的电脑的时候要用的
2、查看计算机证书
打开`certlm.msc`
如果我们想查看计算机证书可以用
`certutil -store My`
找到我们想导出的证书的hash
`certutil -store My 888d67d9ef30adc94adf3336462b96b5add84af4
c:\Users\test1\Desktop\win10.cer`
在我们要导出pfx文件的时候
这种是勾选了证书不允许被导出的，certutil就导出不了，回过去看我们刚刚查看证书的hash的时候
就可以看到，里面标志着私钥不能被导出，这个时候我们就需要用到mimikatz了,mimikatz的`crypto::certificates`默认也是不支持导出`私钥不能被导出`类型的证书的私钥】
这个时候可以使用`crypto::capi`修改lsass
然后就可以导出了
### 0x0502 从文件系统搜索证书
我们经常可以在邮件，磁盘里面看到证书，我们一般按照后缀来搜索证书的，我们一般关注以下后缀
1、key后缀的，只包含私钥
2、crt/cer 后缀的，只包含公钥
3、csr后缀的，证书申请文件，不包含公钥，也不包含私钥。没啥用
4、pfx,pem,p12后缀的，包含公私钥，我们最喜欢的。
搜索文件后缀的每个人使用的工具不一样，我个人比较喜欢的是`SharpSearch`，.Net的项目，支持内存加载，可以写成CNA插件。
## 0x06 通过用户凭据申请可用于kerberos认证的证书
在所有默认的证书模板里面，我们最关注的模板默认有用户模板和计算机模板。
前面我们说过，使用认证进行kerberos认证的需要扩展权限里面包含以下其中一个
1、客户端身份认证
2、PKINIT 客户端身份验证
3、智能卡登录
4、任何目的
5、子CA
如果用户如果想要注册证书，需要经过两个权限的检验。
1、在CA上具有请求证书的权限，这个默认所有认证的用户都有请求证书的权限。
2、在模板上具有注册证书的权限。
用户/计算机模板，他刚好满足这些条件。
1、他们的扩展属性都有客户端身份认证
2、用户证书默认所有的域用户都有注册权限
3、计算机默认所有的域内计算机都有注册权限
4、用户/计算机模板不需要企业管理员批准
这两个默认的证书模板，让我们不需要有域管的凭据，只需要一个域内用户的凭据，就可以注册证书，这个证书还可用于进行kerberos认证。因此我们这里注册的时候选择的模板是用户/计算机模板(具体哪个模板看我们拥有的凭据是用户还是计算机)。
当我们拿到用户的凭据，想使用这个凭据去申请用户证书，我们可以
1、访问证书注册网页界面
这个咱们之前说过，需要安装证书颁发机构 Web
注册角色。我们可以尝试访问下，访问的路径是`https://CA/certsrv`，会弹401认证，我们输入用户的凭据就行。
这个浏览器建议用IE
2、使用`certmgr.msc`申请
如果我们在域内，直接打开`certmgr.msc`申请就行
## 0x07 通过证书窃取用户凭据
### 0x0701 请求kerberos证书
在传统的kerberos认证的时候，是使用用户密码进行认证的。回顾下申请TGT的过程。
用用户hash加密时间戳作为value，type为PA-ENC-TIMESTAMP，
放在PA_DATA上。KDC收到请求，使用用户hash解密value的值得到时间戳跟当前时间做比对，如果在合理的范围(正常五分钟)，就认证通过。
事实上也可以使用证书作为认证，这也是这次spectorops关于ADCS研究的最大亮点，后面漏洞紧紧围绕这点。
RFC4556引入了对 Kerberos 预身份验证的公钥加密支持。这个RFC 的title是`Public Key Cryptography for
Initial Authentication in Kerberos`，后面我们使用简称PKINIT来介绍使用证书进行kerberos身份认证这种方法。
PKINIT同样也使用时间戳，但不是使用用户密码派生密钥加密消息，而是使用属于证书的私钥对消息进行签名。
我们可以使用rubeus 进行验证。
我们首先为用户Administrator注册一个证书，使用`certmgr.msc`进行注册
然后导出来，记得跟私钥一起导出来
接下来我们拿着这个证书去请求kerberos认证
    Rubeus4.0.exe asktgt /user:Administrator /certificate:administrator.pfx /domain:test16.local /dc:dc-05.test16.local
### 0x0703 请求NTLM 凭据
在微软的文档
也就是当使用证书进行kerberos认证的时候，返回的票据的PAC包里面还有NTLM票据。
这个东西Benjamin(mimikatz,kekeo作者)在17年已经研究并进行武器化
详情见
下面我们用一个案例来说明。
当我们控制了一台主机，里面有个用户的证书
我们使用`certutil`来导出证书(如果导出不了的话，就用mimikatz来导出证书)
然后把pfx文件拷贝到我们自己的计算机，双击导入，输入刚刚我们输的密码。
我们本地的计算机做个代理进内网，并且把dns也代理进去(dns设置为内网的域控)
使用kekeo获取用户的NTLM
我们再做个测试，把用户的密码改了
这个时候用之前获取的证书继续发起请求，还是能获取到NTLM Hash。
## 0x08 引用
  * 
  * [**https://forsenergy.com/zh-cn/certsvr/html/c8955f83-fed9-4a18-80ea-31e865435f73.htm**](https://forsenergy.com/zh-cn/certsvr/html/c8955f83-fed9-4a18-80ea-31e865435f73.htm)
  * [**https://docs.microsoft.com/zh-cn/learn/modules/implement-manage-active-directory-certificate-services/**](https://docs.microsoft.com/zh-cn/learn/modules/implement-manage-active-directory-certificate-services/)
  * [**https://forsenergy.com/zh-cn/certtmpl/html/85e1436e-4c52-489a-93a2-6603f1abadf7.htm**](https://forsenergy.com/zh-cn/certtmpl/html/85e1436e-4c52-489a-93a2-6603f1abadf7.htm)
  * [**https://www.riskinsight-wavestone.com/en/2021/06/microsoft-adcs-abusing-pki-in-active-directory-environment/**](https://www.riskinsight-wavestone.com/en/2021/06/microsoft-adcs-abusing-pki-in-active-directory-environment/)
````