这是一个清除路径“CleanPath”的伪代码。
该函数省略了简单的目录遍历序列，如“ .. ”（如果它在路径的开头找到 “..”序列，它会只省略它）序列，它省略了驱动器号序列，如：“C：\”
，“C：”，并且由于未知原因，“C：\C：”也是如此。
请注意，它不关心第一个字母;以下序列也将被省略：“_:\”, “_:”, “_:\\_:”（在这种情况下，下划线表示任何值）。
## 整合
要创建导致WinRAR将归档文件解压缩到任意路径（目录遍历漏洞）的漏洞利用文件，请解压缩到startup文件夹（在重新启动后获取代码执行）而不是目标文件夹。
我们应该绕过两个过滤函数来触发bug。
要触发空字符串与压缩文件的相对路径的串联，而不是目标文件夹：
`sprintf（final_file_path，“％s％s”，“”，file_relative_path）;`
代替：
`sprintf（final_file_path，“％s％s”，destination_folder，file_relative_path）;`
GetDevicePathLen函数的结果应大于0。  
它取决于相对路径的内容（“file_relative_path”）。如果相对路径如下方式启动设备路径：
    选项1：  C：\some_folder\some_file.ext
    选项2：  some_folder\some_file.ext（第一个斜杠代表当前驱动器。）
GetDevicePathLen的返回值将大于0。
但是，unacev2.dll中有一个名为CleanPath的过滤器函数（图17），它会检查相对路径是否以C：开头，并在调用GetDevicePathLen之前将其从相对路径字符串中删除。
它省略了选项1字符串中的“C：”序列，但没有从选项2字符串中省略“”序列。
为了克服这个限制，我们可以在选项1中添加另一个“C：”序列，它将被CleanPath省略（图17），并按照我们想要的一个“C：”保留字符串的相对路径，如：
    选项1'：C：\C：\some_folder\some_file.ext => C：\some_folder\some_file.ext
但是，WinRAR代码中有一个回调函数（图13），它是验证器/过滤器函数。在提取过程中，unacev2.dll被调用到驻留在WinRAR代码的回调函数当中。
回调函数验证压缩文件的相对路径。如果找到黑名单序列，则将终止提取操作。
回调函数进行的一项检查是以“”（斜杠）开头的相对路径。  
但它没有检查“C：”。因此，我们可以使用选项1’来 **利用目录遍历漏洞** ！
我们还发现了一个 **SMB攻击向量** ，它可以连接到任意IP地址，并在SMB服务器上的任意路径中创建文件和文件夹。
例：  
`C：\\\10.10.10.10\smb_folder_name\some_folder\some_file.ext =>
\\10.10.10.10\smb_folder_name\some_folder\some_file.ext`
## 简单漏洞利用文件的示例
我们将.ace扩展名更改为.rar扩展名，因为WinRAR会根据文件内容检测格式，而不是扩展名。
这是acefile的输出：
我们通过文件名字段中精心构造的字符串（绿色）触发漏洞。
无论目标文件夹的路径是什么，此存档都将解压缩到C：\some_folder\some_file.txt。
## 构造真正的漏洞利用
我们可以通过从ACE存档中提取压缩的可执行文件到其中一个启动文件夹来获得代码执行。驻留在Startup文件夹中的任何文件都将在引导时执行。  
制作一个将其压缩文件提取到Startup文件夹的ACE存档似乎很简单，但事实并非如此。  
以下路径中至少有2个Startup文件夹：
C：\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp  
C：\Users\\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup  
第一个Startup文件夹的路径需要高权限/高完整性级别（如果启用了UAC）。但是，WinRAR默认以中等完整性级别运行。
Startup文件夹的第二个路径要求知道用户的名称。
我们可以尝试通过创建包含数千个精心设计的压缩文件的ACE存档来克服这个问题：所有的文件都包含Startup文件夹的路径，但具有不同的 ****。以此来寄希望于文件可以在我们的目标中工作。  
您的浏览器不支持video标签  
## 最强攻击向量
我们找到了一个向量，它允许我们将文件提取到Startup文件夹，而无需关心。
通过在ACE存档中使用以下文件名字段：
C：\C：C：../ AppData\Roaming\Microsoft\Windows\Start
Menu\Programs\Startup\some_file.exe
它由CleanPath函数转换为以下路径（图17）：
C：../ AppData\Roaming\Microsoft\Windows\Start
Menu\Programs\Startup\some_file.exe
因为CleanPath函数删除了“C：\C：”序列。
此外，此目标文件夹将被忽略，因为GetDevicePathLen函数（图16）将为最后一个“C：”序列返回2。
让我们分析最后的路径：
序列“C：”由Windows翻译为正在运行的进程的“当前目录”。在我们的例子中，它是WinRAR的当前路径。
如果从其文件夹执行WinRAR，则“当前目录”将是此WinRAR文件夹：C：\Program Files\WinRAR
但是，如果通过双击存档文件或右键单击存档文件中的“extract”来执行WinRAR，则WinRAR的“当前目录”将成为存档所在文件夹的路径。
例如，如果存档位于用户的“下载”文件夹中，则WinRAR的“当前目录”将为：  
C：\Users\ **\**Downloads  
如果存档位于Desktop文件夹中，则“当前目录”路径将为：  
C：\Users\ **\**Desktop
要从Desktop或Downloads文件夹到Startup文件夹，我们应该将一个文件夹“../”返回到“用户文件夹”，并连接到启动目录的相对路径：AppData\Roaming\Microsoft\Windows\Start菜单程序启动按以下顺序：“C：../”
所以最终结果为：C：../
AppData\Roaming\Microsoft\Windows\Start\Menu\Programs\Startup\some_file.exe
请记住，有两个针对路径遍历序列的检查：
  1. 在CleanPath函数中跳过这样的序列。
  2. 在WinRAR的回调函数中，会终止提取操作。
CleanPath检查以下路径遍历模式：“ .. ”
WinRAR的回调函数检查以下模式：
    “\..\”
    “\../”
    “/../”
    “/ ..\”
因为第一个斜杠或反斜杠不是我们的序列“C：../”的一部分，所以我们可以绕过路径遍历验证。但是，我们只能回退一个文件夹。我们需要在不知道用户名的情况下将文件解压缩到Startup文件夹。
注意：如果我们想要回退多个文件夹，我们应该连接以下序列“/../”。例如，“C：../../”，而“/../”序列将被回调函数捕获到，并终止文件提取。
## 边注
在我们的研究结束时，我们发现WinACE在linux环境下创建了一个类似unacev2.dll的应用程序，名字为unace-nonfree（使用Watcom编译器编译）。 源代码可用。  
Windows的源代码（由unacev2.dll构建）也包含在内，但它比unacev2.dll的最新版本旧，并且无法为Windows编译/构建。
此外，源代码中缺少某些功能 – 例如，不包括图17中的检查。
但是，图16取自源代码。  
我们还在源代码中找到了目录遍历漏洞。 它看起来像这样：
## CVE编号：
CVE-2018-20250，CVE-2018-20251，CVE-2018-20252，CVE-2018-20253。
## WinRAR的回复
WinRAR决定从他们的软件包中删除UNACEV2.dll，而WinRAR不支持版本号为“5.70 beta 1”的ACE格式。
引自WinRAR官方的[描述](https://www.win-rar.com/whatsnew.html?&L=0)：
    “Nadav Grossman from Check Point Software Technologies informed us about a security vulnerability in UNACEV2.DLL library.Aforementioned vulnerability makes possible to create files in arbitrary folders inside or outside of destination folder when unpacking ACE archives.
    WinRAR used this third party library to unpack ACE archives.
    UNACEV2.DLL had not been updated since 2005 and we do not have access to its source code.
    So we decided to drop ACE archive format support to protect security of WinRAR users.
    We are thankful to Check Point Software Technologies for reporting  this issue.“
Check Point的SandBlast Agent Behavioral Guard可以防御这些威胁。
Check Point的IPS提供针对此威胁的保护：“RARLAB WinRAR ACE格式输入验证远程执行代码（CVE-2018-20250）”
非常感谢我的同事Eyal Itkin（[@EyalItkin](https://github.com/EyalItkin
"@EyalItkin")）和Omri Herscovici（[@omriher](https://github.com/omriher
"@omriher")）对本研究的帮助。
本文译自Check Point研究人员发布的[Extracting a 19 Year Old Code Execution from
WinRAR](https://research.checkpoint.com/extracting-code-execution-from-winrar/)