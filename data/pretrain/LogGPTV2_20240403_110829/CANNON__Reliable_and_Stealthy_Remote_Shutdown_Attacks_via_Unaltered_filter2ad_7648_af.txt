software code base for a modern vehicle, it can be expected
that there exist exploitable vulnerabilities in connected ECUs.
CANnon-based techniques allow the compromise of a single
ECU to inﬂuence all ECUs on the bus in a stealthy manner.
This reason makes the existence of CANnon-relevant interfaces
very dangerous.
In this work, we illustrated the attack capability on two lines
of automotive-grade MCUs, and we believe that several other
lines from independent manufacturers can be susceptible to
this attack. We would strongly encourage the research com-
munity to identify similar gaps in other processors. Since this
attack exploits a fundamental architectural feature, changes
to mitigate such a class of attacks poses an interesting prob-
lem. We illustrated some directions for such changes here.
However, designing speciﬁc modiﬁcations to future security
systems would require further investigation.
CANnon not only enables new attack methodologies, but
it can also be viewed as a capability that can be integrated
into existing software systems for testing. Enabling such
investigations is one of our key motivations for making the
tool widely available [20]. We illustrate a few future directions
below.
Expanding existing tools: Recent work [21] demonstrates
a network mapper for the CAN bus. This approach requires
the tool to operate from customized hardware rather than an
in-vehicle ECU. By using CANnon to target and shut down
ECUs for destination mapping, network mapping could run
on existing ECUs without modiﬁcation. Further, the CANnon
method could be utilized by a genuine node, e.g. an Intrusion
Prevention System (IPS), to remove malicious messages from
the bus. Prior to CANnon, such IPS capabilities typically
require hardware changes.
Clock control for other peripherals: Future work could
investigate the impact of the CANnon-like vulnerability for
other peripherals. It
is possible that other bus protocols,
including transport layer protocols that use CAN for the data
link layer (e.g. GMLAN, MilCAN, UAVCAN, etc.), are likely
vulnerable to a network participant that maliciously holds the
state of the bus. For example, the Local Interconnect Network
(LIN) bus implements the same logical bus states as the CAN
bus and is likely vulnerable to the basic remote disruption
attack.
Non-standard CAN: Automakers are starting to implement
extended CAN and CAN-FD protocols. These protocols rely
on the same principles as standard CAN and thus are vul-
nerable to CANnon. Future work could investigate unique
implications related to these other CAN implementations (e.g.
perhaps the higher bit rate for the data payload in CAN-FD
could enable unique derivations of the CANnon attack).
ACKNOWLEDGMENTS
This work was funded in part by the PITAXVIII PITA
award and the CNS-1564009 NSF IoT award. We thank the
anonymous reviewers for their helpful suggestions.
REFERENCES
[1] S. Checkoway, D. McCoy, B. Kantor, D. Anderson, H. Shacham,
S. Savage, K. Koscher, A. Czeskis, F. Roesner, T. Kohno et al., “Com-
prehensive experimental analyses of automotive attack surfaces.” in
USENIX Security Symposium, vol. 4. San Francisco, 2011, pp. 447–462,
http://static.usenix.org/events/sec11/tech/full papers/Checkoway.pdf.
[2] K. Koscher, A. Czeskis, F. Roesner, S. Patel, T. Kohno, S. Checkoway,
D. McCoy, B. Kantor, D. Anderson, H. Shacham et al., “Experimental
security analysis of a modern automobile,” in 2010 IEEE Symposium
on Security and Privacy.
IEEE, 2010, pp. 447–462, https://ieeexplore.
ieee.org/stamp/stamp.jsp?arnumber=5504804.
[3] S. Nie, L. Liu,
and Y. Du,
from
wireless to can bus,” Brieﬁng, Black Hat USA, pp. 1–16, 2017,
https://paper.seebug.org/papers/Security%20Conf/Blackhat/2017 us/us-
17-Nie-Free-Fall-Hacking-Tesla-From-Wireless-To-CAN-Bus-wp.pdf.
“Free-fall: hacking tesla
208
[4] C. Miller and C. Valasek, “Remote exploitation of an unaltered passenger
vehicle,” Black Hat USA, vol. 2015, p. 91, 2015, http://illmatics.com/
Remote%20Car%20Hacking.pdf.
and B. Groza,
by fault
the
[5] P.-S. Murvay
area networks
in
Availability, Reliability and Security.
http://www.aut.upt.ro/∼pal-stefan.murvay/papers/dos-attacks-
controller-area-networks-fault-injections-from-software-layer.pdf.
controller
layer,”
on
ACM, 2017, p. 71,
International Conference
Proceedings
from the
injections
software
attacks
“Dos
12th
on
of
[6] A. Palanca, E. Evenchick, F. Maggi, and S. Zanero, “A stealth, selec-
tive, link-layer denial-of-service attack against automotive networks,”
in International Conference on Detection of Intrusions and Malware,
and Vulnerability Assessment.
Springer, 2017, pp. 185–206, https:
//www.politesi.polimi.it/bitstream/10589/126393/1/tesi palanca.pdf.
[7] A. Van Herrewege, D. Singelee, and I. Verbauwhede, “CANAuth - A
Simple, Backward Compatible Broadcast Authentication Protocol for
CAN bus,” in ECRYPTWorkshop on Lightweight Cryptography 2011,
2011.
[8] B. Groza, P. Murvay, A. V. Herrewege, and I. Verbauwhede, “Libra-
can: A lightweight broadcast authentication protocol for controller area
networks,” in Cryptology and Network Security, 11th International
Conference, CANS 2012, J. Pieprzyk, A. Sadeghi, and M. Manulis, Eds.,
vol. 7712. Springer, December 12-14, 2012, pp. 185–200.
[9] H. M. Song, H. R. Kim, and H. K. Kim, “Intrusion detection system
based on the analysis of time intervals of can messages for in-vehicle
network,” in 2016 international conference on information networking
(ICOIN).
IEEE, 2016, pp. 63–68, https://ieeexplore.ieee.org/iel7/
7422341/7427058/07427089.pdf.
[10] K.-T. Cho and K. G. Shin, “Viden: Attacker identiﬁcation on in-vehicle
networks,” in Proceedings of the 2017 ACM SIGSAC Conference on
Computer and Communications Security. ACM, 2017, pp. 1109–1123,
https://arxiv.org/pdf/1708.08414.
[11] W. Choi, K. Joo, H. J. Jo, M. C. Park, and D. H. Lee, “Voltageids: Low-
level communication characteristics for automotive intrusion detection
system,” IEEE Transactions on Information Forensics and Security,
vol. 13, no. 8, pp. 2114–2129, 2018, https://ieeexplore.ieee.org/iel7/
10206/4358835/08306904.pdf.
[12] An assessment method for automotive intrusion detection system per-
formance. https://rosap.ntl.bts.gov/view/dot/41006.
[13] B. Elend and T. Adamson, “Cyber security enhancing can transceivers,”
in Proceedings of the 16th International CAN Conference, 2017.
[14] J. Wilson and T. Lieu, “Security and privacy in your car study act of
2017 — H. R. 701,” 2017, available at https://www.congress.gov/115/
bills/hr701/BILLS-115hr701ih.pdf.
[15] K.-T. Cho and K. G. Shin, “Error handling of in-vehicle networks
makes them vulnerable,” in Proceedings of the 2016 ACM SIGSAC
Conference on Computer and Communications Security.
ACM,
2016, pp. 1044–1055, https://rtcl.eecs.umich.edu/wordpress/wp-content/
uploads/ktcho busoff CCS 16.pdf.
[16] ——, “Fingerprinting electronic control units for vehicle intrusion
detection,” in 25th {USENIX} Security Symposium ({USENIX} Security
16), 2016, pp. 911–927, https://www.usenix.org/system/ﬁles/conference/
usenixsecurity16/sec16 paper cho.pdf.
[17] S. U. Sagong, X. Ying, A. Clark, L. Bushnell, and R. Poovendran,
“Cloaking the clock: emulating clock skew in controller area net-
works,” in Proceedings of the 9th ACM/IEEE International Conference
on Cyber-Physical Systems.
IEEE Press, 2018, pp. 32–42, https:
//ieeexplore.ieee.org/iel7/8429083/8443707/08443719.pdf.
[18] C.-W. Lin and A. Sangiovanni-Vincentelli, “Cyber-security for the
controller area network (can) communication protocol,” in 2012 Inter-
national Conference on Cyber Security.
IEEE, 2012, pp. 1–7.
[19] C. Smith, The Car Hacker’s Handbook: A Guide for the Penetration
Tester. No Starch Press, 2016, http://opengarages.org/handbook/.
[20] Cannon. https://github.com/sksecurity/cannon.
[21] S. Kulandaivel, T. Goyal, A. K. Agrawal, and V. Sekar, “Canvas: Fast and
inexpensive automotive network mapping,” in 28th {USENIX} Security
Symposium ({USENIX} Security 19), 2019, pp. 389–405, https://www.
usenix.org/system/ﬁles/sec19-kulandaivel.pdf.
[22] T. Ring, “Connected cars–the next targe tfor hackers,” Network Security,
vol. 2015, no. 11, pp. 11–16, 2015.
[23] Gartner says by 2020, a quarter billion connected vehicles will
enable new in-vehicle services and automated driving capabilities.
https://www.gartner.com/en/newsroom/press-releases/2015-01-26-
gartner-says-by-2020-a-quarter-billion-connected-vehicles-will-
enable-new-in-vehicle-services-and-automated-driving-capabilities.
[24] The car
in the age of connectivity: Enabling car
to cloud con-
nectivity. https://spectrum.ieee.org/telecom/wireless/the-car-in-the-age-
of-connectivity-enabling-car-to-cloud-connectivity.
[25] C. Miller and C. Valasek, “A survey of remote automotive attack
surfaces,” black hat USA, vol. 2014, p. 94, 2014, http://illmatics.com/
remote%20attack%20surfaces.pdf.
[26] Experimental
security
research
of
tesla
autopilot.
https:
//keenlab.tencent.com/en/whitepapers/Experimental Security
Research of Tesla Autopilot.pdf.
[27] Car
hacking
research: Remote
attack
tesla motors.
https:
//keenlab.tencent.com/en/2016/09/19/Keen-Security-Lab-of-Tencent-
Car-Hacking-Research-Remote-Attack-to-Tesla-Cars/.
[28] New car hacking research: 2017, remote attack tesla motors again.
https://keenlab.tencent.com/en/2017/07/27/New-Car-Hacking-Research-
2017-Remote-Attack-Tesla-Motors-Again/.
[29] D. Wise, “Vehicle cybersecurity dot and industry have efforts under way,
but dot needs to deﬁne its role in responding to a real-world attack,”
Gao Reports. US Government Accountability Ofﬁce, 2016.
[30] Microchip
sam 3x
family
of mcus.
http://ww1.microchip.
com/downloads/en/devicedoc/atmel-11057-32-bit-cortex-m3-
microcontroller-sam3x-sam3a datasheet.pdf.
[31] Microchip sam v family of automotive mcus. http://ww1.microchip.
com/downloads/en/DeviceDoc/SAM-E70-S70-V70-V71-Family-Data-
Sheet-DS60001527D.pdf.
[32] S. Longari, M. Penco, M. Carminati, and S. Zanero, “Copycan: An
error-handling protocol based intrusion detection system for controller
area network,” in ACM Workshop on Cyber-Physical Systems Security
& Privacy (CPS-SPC’19), 2019, pp. 1–12, https://re.public.polimi.it/
retrieve/handle/11311/1104918/427927/CopyCAN.pdf.
[33] M. Kneib, O. Schell, and C. Huth, “Easi: Edge-based sender identi-
ﬁcation on resource-constrained platforms for automotive networks,”
https://dl.acm.org/doi/pdf/10.1145/3338499.3357362.
[34] Automotive semiconductor market
trends, and forecast
(2020 - 2025). https://www.mordorintelligence.com/industry-reports/
automotive-semiconductor-market.
- growth,
[35] Nxp mcus. https://www.nxp.com/docs/en/application-note/AN4240.pdf.
[36] Renesas
https://www.renesas.com/us/en/products/synergy/
mcus.
hardware/microcontrollers/glossary.html.
[37] Fujitsu mcus. https://www.fujitsu.com/downloads/EDG/binary/pdf/ﬁnd/
25-5e/5.pdf.
[38] Cypress mcus.
https://www.cypress.com/products/fm4-32-bit-arm-
cortex-m4-microcontroller-mcu-families.
[39] Inﬁneon mcus. https://www.inﬁneon.com/dgdl/Inﬁneon-TC1767-DS-
v01 04-en.pdf?ﬁleId=db3a30431be39b97011bff8570697bdb.
[40] Sam v71 xplained ultra evaluation kit. https://www.microchip.com/
DevelopmentTools/ProductDetails/PartNO/ATSAMV71-XULT.
[41] Spc58ec-disp discovery board. https://www.st.com/en/evaluation-tools/
spc58ec-disp.html?ecmp=tt12221 gl social jul2019.
[42] St spc5 family of automotive mcus. https://www.st.com/en/automotive-
microcontrollers/spc5-32-bit-automotive-mcus.html.
[43] K. Zhu, Z. Chen, Y. Peng, and L. Zhang, “Mobile edge assisted literal
multi-dimensional anomaly detection of in-vehicle network using lstm,”
IEEE Transactions on Vehicular Technology, vol. 68, no. 5, pp. 4275–
4284, 2019.
[44] M. Russo, M. Labonne, A. Olivereau, and M. Rmayti, “Anomaly
detection in vehicle-to-infrastructure communications,” in 2018 IEEE
87th Vehicular Technology Conference (VTC Spring).
IEEE, 2018, pp.
1–6.
[45] M. Foruhandeh, Y. Man, R. Gerdes, M. Li, and T. Chantem, “Simple:
Single-frame based physical
layer identiﬁcation for intrusion detec-
tion and prevention on in-vehicle networks,” 2019, http://u.arizona.edu/
∼yman/papers/simple acsac19.pdf.
[46] C. Young, H. Olufowobi, G. Bloom, and J. Zambreno, “Automotive
intrusion detection based on constant can message frequencies across
vehicle driving modes,” in Proceedings of
the ACM Workshop on
Automotive Cybersecurity. ACM, 2019, pp. 9–14, https://lib.dr.iastate.
edu/cgi/viewcontent.cgi?article=1066&context=ece conf.
[47] D. Boneh, R. A. DeMillo, and R. J. Lipton, “On the importance
of checking cryptographic protocols for faults (extended abstract),” in
Advances in Cryptology - EUROCRYPT ’97, ser. LNCS, W. Fumy, Ed.,
vol. 1233. Springer, May 11-15, 1997, pp. 37–51.
209
[48] E. Biham and A. Shamir, “Differential fault analysis of secret key
cryptosystems,” in Advances in Cryptology - CRYPTO ’97, ser. LNCS,
B. S. K. Jr., Ed., vol. 1294. Springer, August 17-21, 1997, pp. 513–525.
[49] S. P. Skorobogatov and R. J. Anderson, “Optical fault induction attacks,”
in Cryptographic Hardware and Embedded Systems - CHES 2002, ser.
LNCS, B. S. K. Jr., C¸ . K. Koc¸, and C. Paar, Eds., vol. 2523. Springer,
August 13-15, 2002, pp. 2–12.
[50] Y. Kim, R. Daly, J. Kim, C. Fallin, J. Lee, D. Lee, C. Wilkerson, K. Lai,
and O. Mutlu, “Flipping bits in memory without accessing them: An
experimental study of DRAM disturbance errors,” in ACM/IEEE 41st
International Symposium on Computer Architecture, ISCA 2014.
IEEE
Computer Society, June 14-18, 2014, pp. 361–372.
[51] M. Bond and R. J. Anderson, “Api-level attacks on embedded systems,”
IEEE Computer, vol. 34, no. 10, pp. 67–75, 2001.
[52] R. J. Anderson, Security engineering - a guide to building dependable
distributed systems (2. ed.). Wiley, 2008.
210