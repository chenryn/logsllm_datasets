使用CobaltStrike从学习C2profile开始
0x00 前言
我一直是CS的忠实粉丝，随着CS4.4的发布，增加了反射DLL的自定义功能，让CS越来越高度可定制化
了。完全没有必要因为防御方的各种查杀CS而放弃CS，转而选择其他C2，或者自己编写C2。当然我也
认可在一次高对抗的红队行动中，前锋马、潜伏马是必不可少的，多备几套C2方案也没有问题。
如果你在行动中，在流量层被查杀，那么你一定是没有用好C2profile。我不打算一一解释C2profile的参
数的意义，因为官方文档很详细了https://www.cobaltstrike.com/help-malleable-c2，也可以阅读http
s://github.com/Tylous/SourcePoint#global-options。
这个SourcePoint是近期出现的适应最新版本的C2profile自动生成工具。上一个类似工具是：https://git
hub.com/FortyNorthSecurity/C2concealer，但是现在已经落后了。推荐使用SourcePoint。
0x01 SourcePoint
这个工具目前还缺少DNS相关的C2profile，不过作者已经增加到To Do List。接下来我们使用一下这个
工具，这个工具是用GO编写的，作者也发布了编译好的版本，因此使用非常容易。我们使用最简参数，
也就是必须填写的参数：
-Outfile 输出文件名
-Host TeamServer的域名或IP
-Injector 进程注入使用的函数
我们来看下生成的C2profile怎么样：
图中有一个[!]，就是默认是开启了分阶段的，这个开启会导致任何人可以下载你的payload，具体
看《关于CobaltStrike的Stager被扫问题》
配置中缺少了 set sample_name "myc2profile"; 还是要给c2配置取个名字，启动Listener的时候
好选择。
set sleeptime "40000"; 默认生成的这个有点大，默认是60000，也就是60秒，这儿是40秒，每
次我都感觉等的着急，我一般设置在10秒，也就是10000。然后抖动值为50，也就是： set 
jitter    "50"; ，也就是说回连在5到10秒之间抖动。当然在不操作的时候，还是要设置回连间
隔长一点，我一般设置15到30分钟之间。
DNS相关配置是被注释掉的，需要我们手动配置
SourcePoint.exe -Outfile my.c2profile -Host 127.0.0.1 -Injector 
NtMapViewOfSection
dns-beacon {
    set dns_idle             "8.8.8.4";
    set dns_max_txt          "196"; # 这个需要注意，需要被4整除的数字
Produced by AttackTeamFamily - Author: L.N. - Date: 2021-08-19 
No. 1 / 5 - Welcome to www.red-team.cn
配置中transform-x86和transform-x64，把大部分关键字抹除掉了，这个很多公开的配置都没
有，点赞。
set startrwx "true"; 这个配置中是true，改为false，还是不要用可读可写可执行来分配内存。
set amsi_disable "true";  这个CS自带AMSI绕过技术，开启需要注意，毕竟CS是大众工具，
CS自带的方法，很有可能被特征，这也是为什么以前好用的execute-assembly，有时不好用
了，.net4.8加入了AMSI的接口，因此如果你在有.net4.8以上的机器上，使用要慎重。目前使用比
较多的是BOF，或者自己byapss amsi。
set uri "hapvwW2LESRmSSSc8oLrQrS4M ";  默认的这个url是有问题的，需要以 / 开始，可以使
用/api/v1/auth这样比较常见的url。
证书使用的是自签名证书，最好还是搞个免费证书。
整体看，这个工具还是不错的，关键是它关于HTTP(S)数据包伪造，除了提供了6个模板：
Microsoft Window's Update Communication
Slack's Message Communication
Gotomeeting's Active Meeting Communication
Microsoft Outlook's Email Communication
Cloudfront.net
AzureEdge.net
还可以自己定义模板，比如：模仿访问qq.com、alipay.com的http数据包内容。
修改完，一定要使用c2lint验证是否正确，但是c2lint也不是万能的，例如：如果把回传数据加入url当
中，并使用base64编码，由于base64的字符中包含能够影响url解析的字符，导致数据获取问题，这个
就不能被c2lint识别。
只有一个警告，没有配置代码签名。
    set dns_sleep            "2";
    set dns_ttl              "5";
    set maxdns               "200";
    set dns_stager_prepend   "js";
    set dns_stager_subhost   "cdn.";
    set beacon               "cdn.b6c.";
    set get_A                "cdn.16a.";
    set get_AAAA             "cdn.46a.";
    set get_TXT              "cdn.t6x.";
    set put_metadata         "cdn.m6d.";
    set put_output           "cdn.p6o.";
    set ns_response          "zero";
}
Produced by AttackTeamFamily - Author: L.N. - Date: 2021-08-19 
No. 2 / 5 - Welcome to www.red-team.cn
0x02 代码签名和SSL证书
通常情况下，我们使用的是上节中的c2配置文件，但是在高强度的对抗中，代码签名和SSL证书也是需
要用上的。这就涉及到证书来源问题，2种方式：买和“借”，买就不多说了。“借”，有小伙伴分享过在
github挖掘到泄露的代码签名证书。@Digg3r大哥写过一个使用代码签名的文档，一起发出来，我就不
重复写了。
Produced by AttackTeamFamily - Author: L.N. - Date: 2021-08-19 
No. 3 / 5 - Welcome to www.red-team.cn
SSL证书，是涉及到流量加密的，这个很重要，自签名证书很难过高强度对抗。合法证书有时候是出网必
备。
Produced by AttackTeamFamily - Author: L.N. - Date: 2021-08-19 
No. 4 / 5 - Welcome to www.red-team.cn
0x03 总结
深入的理解CS才能用好CS，本文档主要是介绍了sourcepoint这个工具，以及补充了它的不足。后面我
会陆陆续续的写CS相关的各种细节使用。希望大家能够一起挖掘CS更多自定义的功能，并躲避IOC。
Produced by AttackTeamFamily - Author: L.N. - Date: 2021-08-19 
No. 5 / 5 - Welcome to www.red-team.cn