behavior does not leak any information about the input pa-
rameters. This is re(cid:13)ected by the dashed line in Figure 3,
which matches the guessing entropy for a key without side-
channel information, given by 0:5(2w + 1).
Timing Attacks against Exponentiation in F2w.
We analyzed a Gezel implementation of the (cid:12)nite-(cid:12)eld
exponentiation algorithm from [14]. It takes two arguments,
a basis m and an exponent k, and it computes mk in F2w .
The algorithm is based on similar expansions as the inte-
ger multiplication algorithm in the previous example, but
is more complex due to nested loops. To interpret Figure
4, observe that (cid:8)w(1) = ^(cid:8)w(1) and ^(cid:8)w (cid:21) (cid:8)w follow from
Proposition 4. We conclude that one timing measurement
reveals a quantity of information larger than that contained
in the Hamming weight, but that it does not completely de-
termine the key. A second measurement, however, can reveal
all remaining key information.
Power Attacks against Multiplication in F2w.
We analyzed the power leakage of the (cid:12)nite-(cid:12)eld multipli-
cation circuit from the Gezel package. It runs in constant
time and we analyzed the power traces given by counting bit
transitions, as previously explained. As in the case of integer
multiplication, we chose one operand to be secret and one to
be public. Figure 5 shows that the entire secret parameter
is determined by one power trace. A silicon implementation
with similar power consumption will hence be vulnerable to
power attacks.
Scaling-Up.
The algorithms presented in Section 4 rely on the complete
enumeration of the keyspace and therefore do not scale.2 Ho-
wever, our data exhibits regularity and we can successfully
extrapolate to larger bit-widths. Under our working assump-
tion that this regularity re(cid:13)ects the structural similarity of
the parameterized algorithms, we conclude that the inter-
pretations given for each algorithm hold regardless of the
implementation’s bit-width.
In all three examples, the number of attack steps perfor-
med is surprisingly low compared to the sample size used
in many published attacks, e.g., [6, 8, 18, 19]. This is due
to the fact that noise is typically dealt with by increasing
the number of measurements made. Template attacks [10]
use noise models to extract the maximum information from
every measurement and they demonstrate that key recovery
from only a few measurements is indeed possible.
6. RELATED WORK
There has been substantial work in information-(cid:13)ow secu-
rity on detecting or quantifying information leaks, but the
results are only partially applicable to the problem of ana-
lyzing how much information an adaptive side-channel at-
tacker can extract from a system. Early approaches focus on
quantifying the capacity of covert channels between proces-
ses in multi-user systems [26, 39, 16]. The models predate
the (cid:12)rst published side-channel attack against cryptography
[18] and are so general that it is unclear whether and how
they could be instantiated to address the problem at hand.
Di Pierro et al. [29] show how to quantify the number of
statistical tests an observer needs to perform to distinguish
two processes in a probabilistic concurrent language. Lowe
[21] quanti(cid:12)es information (cid:13)ow in a possibilistic process al-
gebra by counting the number of distinguishable behaviors.
Clarkson et al. [12] develop a model for reasoning about an
adaptive attacker’s beliefs about the secret, which may also
be wrong.
The information measures proposed by Clark et al. [11]
are closest to ours. The authors relate observational equi-
valence to random variables and use Shannon entropy to
quantify the information (cid:13)ow. However, their measure cap-
tures the information gain of a passive observer instead of
an active attacker: the public input to the system is chosen
2The computation of ^(cid:8)8(2) for (cid:12)nite-(cid:12)eld exponentiation
took 40 minutes on a 2:4 GHz machine with 3 gigabytes of
RAM.
with respect to a probability distribution and is not under
the attacker’s control.
Several approaches in language-based security use securi-
ty type systems to detect timing side-channels in both se-
quential and multithreaded settings, see [1, 2, 17] and [36,
32], respectively. A successful type check implies that an at-
tacker cannot gain any information about the secret, even
if he exhaustively queries the system. However, such strong
guarantees are of unclear signi(cid:12)cance in the absence of reali-
stic timing models for high-level languages. Information-(cid:13)ow
analyses at the hardware level [38, 20] are based on more
realistic assumptions about the system, but do not model
adaptive attackers.
There is a large body of work on side-channel cryptana-
lysis, in particular on attacks and countermeasures. Howe-
ver, models and theoretical bounds on what side-channel
attackers can achieve are only now emerging. Chari et al. [9]
are the (cid:12)rst to present methods for proving hardware imple-
mentations secure. They propose a generic countermeasure
for power attacks and prove that it resists a given number
of side-channel measurements. Schindler et al. [34] propose
a stochastic model for improving the e(cid:14)ciency of key ex-
traction. However, they do not give bounds on what can, in
principle, be achieved by their techniques. Micali et al. [25]
propose physically observable cryptography, a mathemati-
cal model that aims at providing provably secure cryptogra-
phy on hardware that is only partially shielded. Their model
has recently been specialized by Standaert et al. [37], who
show how assumptions on the computational capabilities of
an attacker can be combined with leakage functions that
measure the information that is revealed by the system’s
side-channels. Our model could be used to solve the open
problem of instantiating these leakage functions. A detailed
investigation of this is the subject of future work.
7. CONCLUSIONS AND FUTURE WORK
We have presented a quantitative model for reasoning
about adaptive side-channel attacks. It allows us to express
an attacker’s remaining uncertainty about a secret as a func-
tion of the number of his side-channel measurements. This
function provides a relevant metric for assessing a system’s
vulnerability to side-channel attacks.
On the theoretical side, our model of adaptive attacks pro-
vides a connection between information-theoretic notions of
security and physical models of hardware. Its simplicity is
re(cid:13)ected in the three line program (see Section 4.3) that
implements this connection. On the practical side, we have
applied our model to automatically derive meaningful asser-
tions about the resistance of hardware implementations to
adaptive side-channel attacks.
As ongoing work, we are extending our model with sta-
tistical techniques for entropy estimation [3, 4]. This allows
us to approximate (cid:8) for larger bit-widths. Our initial ex-
periments are encouraging: we are able to con(cid:12)rm that the
presented integer multiplication algorithm reveals one ope-
rand’s Hamming weight|for implementations with 100 bits
per operand and with an error of less than 1%. However, the
existing con(cid:12)dence intervals for this estimation are too lar-
ge for practical use and, as future work, we hope to improve
them.
8. REFERENCES
[1] J. Agat. Transforming out Timing Leaks. In Proc.
POPL ’00, pages 40{53. ACM.
[2] G. Barthe, T. Rezk, and M. Warnier. Preventing
Timing Leaks Through Transactional Branching
Instructions. In Proc. QAPL ’05, ENTCS, pages
33{55. Elsevier.
[3] G. Basharin. On a Statistical Estimate for the
Entropy of a Sequence of Independent Random
Variables. Theory Probab. Appl., 47:333{336, 1959.
[4] T. Batu, S. Dasgupta, R. Kumar, and R. Rubinfeld.
The complexity of approximating entropy. In Proc.
STOC ’02, pages 678{687. ACM, 2002.
[5] R. Bird. Introduction to Functional Programming
using Haskell. Prentice Hall, second edition, 1998.
[6] D. Boneh and D. Brumley. Remote Timing Attacks are
Practical. In Proc. USENIX Security Symposium ’03.
[7] C. Cachin. Entropy Measures and Unconditional
Security in Cryptography. PhD thesis, ETH Z(cid:127)urich,
1997.
[8] J. Cathalo, F. Koeune, and J.-J. Quisquater. A New
Type of Timing Attack: Application to GPS. In Proc.
CARDIS ’03, LNCS 2779, pages 291{303. Springer.
[9] S. Chari, C. S. Jutla, J. R. Rao, and P. Rohatgi.
Towards Sound Approaches to Counteract
Power-Analysis Attacks. In Proc. CRYPTO ’99,
LNCS 1666, pages 398{412. Springer.
[10] S. Chari, J. R. Rao, and P. Rohatgi. Template
Attacks. In Proc. CHES ’02, LNCS 2523, pages 13{28.
Springer.
[11] D. Clark, S. Hunt, and P. Malacaria. Quantitative
Information Flow, Relations and Polymorphic Types.
J. Log. Comput., 18(2):181{199, 2005.
[12] M. Clarkson, A. Myers, and F. Schneider. Belief in
Information Flow. In Proc. CSFW ’05, pages 31{ 45.
IEEE.
[13] T. H. Cormen, C. Stein, R. L. Rivest, and C. E.
Leiserson. Introduction to Algorithms. McGraw-Hill
Higher Education, second edition, 2001.
[14] M. Davio, J. P. Deschamps, and A. Thayse. Digital
Systems with Algorithm Implementation. John Wiley
& Sons, Inc., 1983.
[15] K. Gandol(cid:12), C. Mourtel, and F. Olivier.
Electromagnetic analysis: Concrete results. In Proc.
CHES ’01, LNCS 2162, pages 251{261. Springer.
[16] J. W. Gray. Toward a Mathematical Foundation for
Information Flow Security. JCS, 1(3-4):255{294, 1992.
[17] D. Hedin and D. Sands. Timing Aware Information
Flow Security for a JavaCard-like Bytecode. In
BYTECODE ’05, ENTCS. Elsevier.
[18] P. Kocher. Timing Attacks on Implementations of
Di(cid:14)e-Hellman, RSA, DSS, and Other Systems. In
Proc. CRYPTO ’96, LNCS 1109, pages 104{113.
Springer.
[19] P. Kocher, J. Ja(cid:11)e, and B. Jun. Di(cid:11)erential Power
Analysis. In Proc. CRYPTO ’99, LNCS 1666, pages
388{397. Springer.
[20] B. K(cid:127)opf and D. Basin. Timing-Sensitive Information
Flow Analysis for Synchronous Systems. In Proc.
ESORICS ’06, LNCS 4189, pages 243{262. Springer.
[21] G. Lowe. Quantifying Information Flow. In Proc.
[32] A. Sabelfeld and D. Sands. Probabilistic
CSFW ’02, pages 18{31. IEEE.
[22] J. L. Massey. Guessing and Entropy. In Proc. IEEE
Noninterference for Multi-threaded Programs. In Proc.
CSFW ’00, pages 200{215. IEEE.
Int. Symp. on Info. Th. ’94, page 204. IEEE.
[33] P. Schaumont, D. Ching, and I. Verbauwhede. An
[23] A. Menezes, P. van Oorschot, and S. Vanstone.
Handbook of Applied Cryptography. CRC Press, 1996.
[24] T. S. Messerges, E. A. Dabbish, and R. H. Sloan.
Power Analysis Attacks of Modular Exponentiation in
Smartcards. In Proc. CHES ’99, LNCS 1717, pages
144{157. Springer.
[25] S. Micali and L. Reyzin. Physically Observable
Cryptography (Extended Abstract). In Proc. TCC
’04, LNCS 2951, pages 278{296. Springer.
Interactive Codesign Environment for Domain-Speci(cid:12)c
Coprocessors. ACM Transactions on Design
Automation for Electronic Systems, 11(1):70{87, 2006.
[34] W. Schindler, K. Lemke, and C. Paar. A Stochastic
Model for Di(cid:11)erential Side-Channel Cryptanalysis. In
Proc. CHES ’05, LNCS 3659, pages 30{46. Springer.
[35] C. Shannon. A Mathematical Theory of
Communication. Bell System Technical Journal,
27:379{423 and 623{656, July and October 1948.
[26] J. K. Millen. Covert Channel Capacity. In Proc. IEEE
[36] G. Smith and D. Volpano. Secure Information Flow in
Symp. on Security and Privacy ’87, pages 60{66.
IEEE.
[27] F. N. Najm. A Survey of Power Estimation
Techniques in VLSI Circuits. IEEE Transactions on
VLSI Systems, 2(4):446{455, 1994.
[28] D. A. Osvik, A. Shamir, and E. Tromer. Cache
Attacks and Countermeasures: the Case of AES. In
Proc. CT-RSA ’06, LNCS 3860, pages 1{20. Springer.
[29] A. D. Pierro, C. Hankin, and H. Wiklicky.
Approximate Non-Interference. In Proc. CSFW ’02,
pages 3{17. IEEE.
[30] J. O. Pliam. On the Incomparability of Entropy and
Marginal Guesswork in Brute-Force Attacks. In Proc.
INDOCRYPT ’00, LNCS 1977, pages 67{79. Springer.
[31] J.-J. Quisquater and D. Samyde. ElectroMagnetic
Analysis (EMA): Measures and Couter-Measures for
Smard Cards. In Proc. E-smart ’01, LNCS 2140, pages
200{210. Springer.
a Multi-Threaded Imperative Language. In Proc.
POPL ’98, pages 355{364. ACM.
[37] F.-X. Standaert, E.Peeters, C. Archambeau, and J.-J.
Quisquater. Towards Security Limits in Side-Channel
Attacks. In Proc. CHES ’06, LNCS 4249, pages 30{45.
Springer.
[38] T. Tolstrup. Language-based Security for VHDL. PhD
thesis, Technical University of Denmark, 2007.
[39] J. Wittbold and D. Johnson. Information (cid:13)ow in
nondeterministic systems. In Proc. IEEE Symp. on
Security and Privacy ’90, pages 144{161. IEEE.
[40] L. Zhong, S. Ravi, A. Raghunathan, and N. Jha.
Power Estimation Techniques for Cycle-Accurate
Functional Descriptions of Hardware. In Proc. ICCAD
’04, pages 668{ 675. ACM.