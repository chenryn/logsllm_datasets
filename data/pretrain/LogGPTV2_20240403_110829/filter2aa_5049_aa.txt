原文 by http://thief.one/  
最近遇到了很多服务器被入侵的例子，为了方便日后入侵检测以及排查取证，我查询了一些linux服务器入侵取证的相关资料，并在此总结分享，以便日后查询。
  一般服务器被入侵的迹象，包括但不局限于：由内向外发送大量数据包（DDOS肉鸡）、服务器资源被耗尽（挖矿程序）、不正常的端口连接（反向shell等）、服务器日志被恶意删除等。那么既然是入侵检测，首先要判断的是服务器是否被入侵，必须排除是管理员操作不当导致的问题，因此入侵检测的第一项工作就是询问管理员服务器的异常现象，这对之后入侵类型的判断非常重要。
  在询问了相关异常信息，排除了管理员操作失误等原因后，那么便可以开始正式的上服务器进行入侵检测以及取证操作了。
## 审计命令
### Linux 日志系统
日志对于安全来说，非常重要，他记录了系统每天发生的各种各样的事情，你可以通过它来检查错误发生的原因，或者受到攻击时攻击者留下的痕迹。日志主要的功能有：审计和监测。他还可以实时的监测系统状态，监测和追踪侵入者等等。
在Linux系统中，有三个主要的日志子系统：
连接时间日志--由多个程序执行，把纪录写入到/var/log/wtmp和/var/run/utmp，login等程序更新wtmp和 utmp文件，使系统管理员能够跟踪谁在何时登录到系统。进程统计--由系统内核执行，当一个进程终止时，为每个进程往进程统计文件（pacct或acct）中写一个纪录，进程统计的目的是为系统中的基本服务提供命令使用统计。
错误日志--由syslogd（8）执行。各种系统守护进程、用户程序和内核通过syslog(3)向文件/var/log/messages报告值得注意的事件。另外有许多UNIX程序创建日志。像HTTP和FTP这样提供网络服务的服务器也保持详细的日志。 常用的日志文件如下：
access-log 记录HTTP/web的传输  (sed -s 's/211.xxx.xxx.xxx/192.168.1.1/g' access_log access.log security)
acct/pacct 纪录用户命令
aculog 纪录MODEM的活动
btmp 纪录失败的纪录
lastlog 纪录最近几次成功登录的事件和最后一次不成功的登录
messages 从syslog中记录信息（有的链接到syslog文件）
sudolog 纪录使用sudo发出的命令
sulog 纪录使用su命令的使用
syslog 从syslog中记录信息（通常链接到messages文件）
utmp 纪录当前登录的每个用户
wtmp 一个用户每次登录进入和退出时间的永久纪录
xferlog 纪录FTP会话
utmp、wtmp和lastlog日志文件是多数重用UNIX日志子系统的关键--保持用户登录进入和退出的纪录。有关当前登录用户的信息记录在文件utmp中；登录进入和退出纪录在文件wtmp中；最后一次登录文件可以用lastlog命令察看。数据交换、关机和重起也记录在wtmp文件中，所有的纪录都包含时间戳。这些文件（lastlog通常不大）在具有大量用户的系统中增长十分迅速。例如wtmp文件可以无限增长，除非定期截取，许多系统以一天或者一周为单位把wtmp配置成循环使用。它通常由cron运行的脚本来修改，这些脚本重新命名并循环使用wtmp文件。通常，wtmp在第一天结束后命名为wtmp.1；第二天后wtmp.1变为wtmp.2等等，直到wtmp.7。
每次有一个用户登录时，login程序在文件lastlog中察看用户的UID。如果找到了，则把用户上次登录、退出时间和主机名写到标准输出中，然后login程序在lastlog中纪录新的登录时间。在新的lastlog纪录写入后，utmp文件打开并插入用户的utmp纪录，该纪录一直用到用户登录退出时删除。utmp文件被各种命令文件使用，包括who、w、users和finger。
下一步，login程序打开文件wtmp附加用户的utmp纪录。当用户登录退出时，具有更新时间戳的同一utmp纪录附加到文件中，wtmp文件被程序last和ac使用。
### auditd
Linux审计系统提供了一种跟踪系统上与安全相关的信息的方法。基于预先配置的规则，审核生成日志条目以记录尽可能多的关于系统上发生的事件信息。  
auditd（或auditd守护进程）是Linux系统中重要的内核审计组件，其负责将审计记录写入磁盘。使用auditd可以实现如下场景的审计监控：  
* 监控文件访问
* 监控系统调用
* 记录用户命令执行
* 记录安全事件
* 执行审计搜索
* 统计概要报表
* 监控网络访问
通常我们使用auditctl用来查看和控制auditd的审计行为，获取审计日志，添加或删除审计规则。如果你希望审计配置在系统重启后仍然有效，请通过系统文件/etc/audit/audit.rules进行持久化配置。  
### last
  这个命令可用于查看我们系统的成功登录、关机、重启等情况，本质就是将/var/log/wtmp文件格式化输出，因此如果该文件被删除，则无法输出结果。
相关参数：
last -10（-n） 查看最近10条记录
last -x reboot 查看重启的记录
last -x shutdown 查看关机的记录
last -d 查看登陆的记录
last –help 命令帮助信息
### lastb
这个命令用于查看登录失败的情况，本质就是将/var/log/btmp文件格式化输出。
相关参数：
lastb name（root） 查看root用户登陆失败记录
lastb -10（-n） 查看最近10条登陆失败记录
lastb –heplp 命令帮助信息
### lastlog
这个命令用于查看用户上一次的登录情况，本质就是将/var/log/lastlog文件格式化输出。
相关参数：
lastlog 所有用户上一次登陆记录
lastlog -u username（root） root用户上一次登陆记录
lastlog –help 命令帮助信息
### who
  这个命令用户查看当前登录系统的情况，本质就是将/var/log/utmp文件格式化输出。主要用来查看当前用户名称，以及登陆的ip地址信息，w命令与who一样，会更详细一些。
### history
查看历史命令记录，其实就是查看~/.bash_history文件内容，删除这个文件，记录就没了。  
默认情况下命令历史存储在~/.bash_history 文件中 。 添加下列内容到 .bash_profile 文件并重新登录bash shell， 将使用 /var/history/$USER-$UID.log 来存储命令历史，并可以定时上报到日志server进行审计，缺点是执行 history 命令看不到命令历史，对此也可以不改变命令历史的存储文件，而是每分钟同步一份~/.bash_history 到 bash_history_tmp，并上报审计。    
``` bash
# vi ~/.bash_profile   //输入以下内容
HISTFILE=/var/history/$USER-$UID.log  
```
如果history 被删，可以结合 accton 和 lastcomm  进行审计  
相关参数：
history 查看所有历史记录
history -10 查看最近10条记录
history | grep "wget" 查看wget相关信息的记录
history –help 命令帮助信息
## 检查ssh 登录
### ssh 登录方式：
1. 客户端存服务端的公钥。每次输入密码，用公钥加密后传输，服务端用私钥解密。当远程主机的公钥被接受以后，它就会被保存在文件$HOME/.ssh/known_hosts之中。下次再连接这台主机，系统就会认出它的公钥已经保存在本地了，从而跳过警告部分，直接提示输入密码。 
2. 服务端存客户端的公钥。登录的时候，远程主机会向用户发送一段随机字符串，用户用自己的私钥加密后，再发回来。远程主机用事先储存的公钥进行解密，如果成功，就证明用户是可信的，直接允许登录shell，不再要求密码。如果还是不行，就打开远程主机的/etc/ssh/sshd_config这个文件，检查下面几行前面"#"注释是否取掉。
``` 
RSAAuthentication yes 
PubkeyAuthentication yes 
AuthorizedKeysFile .ssh/authorized_keys
PasswordAuthentication no  # 禁止密码登录
PermitRootLogin no # 禁止root 登录
 ``` 
远程主机将用户的公钥，保存在登录后的用户主目录的$HOME/.ssh/authorized_keys文件中。公钥就是一段字符串，只要把它追加在authorized_keys文件的末尾就行了。
e.g 远程主机用户project 主目录下已存公钥，本地用户simba 将私钥id_rsa（权限设置为600）放在$HOME/.ssh 目录下，即可 ssh project@dst 登录远程主机。
### ssh 加固：
除了私钥登录，再加上一层随机token 保障  
TOTP协议：  
https://tools.ietf.org/html/rfc6238   
Google-Authenticator：  
https://github.com/google/google-authenticator  
https://aws.amazon.com/cn/blogs/startups/securing-ssh-to-amazon-ec2-linux-hosts/   
https://wiki.archlinux.org/index.php/Google_Authenticator   
### ssh 伪装技巧：
1. 作为跳板的时候，我们有可能需要用本机的ssh去访问别的机器，为了不保存别的机器的公钥在当前用户的目录下    
`ssh -o UserKnownHostsFile=/dev/null -T user@host /bin/bash –i`    
就可以了，但在这样运行某些命令的时候可能会有提示，说你的stdin不是个terminal，这里可以这样解决：python -c 'import pty; pty.spawn("/bin/sh")' 或者自己再建立个ttyshell。  
2. 登录ssh之后不记录history（记住：从 webshell弹回的shell也会记录你的操作）    
`unset HISTORY HISTFILE HISTSAVE HISTZONE HISTORY HISTLOG; export HISTFILE=/dev/null; export HISTSIZE=0; export HISTFILESIZE=0`  
3. 在跳板上登录目标 ssh -T somebody@1.1.1.1 /bin/bash –i，管理员使用 w 命令也查看不到登录tty状态。  
4. 检查登录失败特征  
一般来说，我们可以查看/etc/syslog.conf来获得log文件存放的位置，比如redhat 将登录日志保存在/var/log/secure。  
`grep "Failed password for root" /var/log/auth.log | awk '{print $11}' | sort | uniq -c | sort -nr | more`  
注意：有很多运维喜欢半夜做发布，故登录时间比较晚不一定是黑客，主要看失败次数，以及登录的聚集时间。  
5. sftp 登录  
SSH File Transfer Protocol (SFTP) is a part of the SSH protocol suite. Sometimes also called the Secure File Transfer Protocol, it provides implements secure file transfers over SSH. It supports the full security and authentication functionality of the SSH protocol, including SSH keys.
Only successful login attempt via sftp yourusername@yourservername are logged into /var/log/auth.log marked with
TIMESTAMP SERVERNAME sshd[xxxx] subsystem request for sftp  
## 检查文件状态改动时间
在windows下，一个文件有：创建时间、修改时间、访问时间。
而在Linux下，一个文件也有三种时间，分别是：访问时间、修改时间、状态改动时间。
两者有此不同，在Linux下没有创建时间的概念，也就是不能知道文件的建立时间，但如果文件建立后就没有修改过，修改时间=建立时间; 如果文件建立后，状态就没有改动过，那么状态改动时间=建立时间; 如果文件建立后，没有被读取过，那么访问时间=建立时间。因为不好判断文件是否被改过、读过、其状态是否变过，所以判断文件的建立时间基本上能为不可能。
1、访问时间(ls -la filename)，读一次这个文件的内容，这个时间就会更新。比如对这个文件运用 more、cat 等命令。ls、stat命令都不会修改文件的访问时间。
2、修改时间(ls -l filename)，修改时间是文件内容最后一次被修改时间。比如：vi后保存文件。ls -l 列出的时间就是这个时间。
3、状态改动时间(ls -lc filename)。是该文件的 i 节点最后一次被修改的时间。通过chmod、chown命令修改一次文件属性，这个时间就会更新。
某文件从其他服务器传到本服务器路径下，或者从某个压缩包中解压，change time 会变成当前时间，而 access time 和 modify time 不会变化。再结合进程的启动时间，基本就能确定此文件首次在本服务器的生成时间。
touch -r  use this file's times instead of current time
## 检查用户
Linux不同的用户，有不同的操作权限，但是所有用户都会在/etc/passwd、/etc/shadow、/etc/group文件中记录。
less /etc/passwd  查看是否有新增用户
grep :0 /etc/passwd  查看是否有特权用户（root权限用户）
ls -l /etc/passwd  查看passwd最后修改时间
awk -F: '$3==0 {print $1}' /etc/passwd  查看是否存在特权用户
awk -F: 'length($2)==0 {print $1}' /etc/shadow  查看是否存在空口令用户
注：linux设置空口令：passwd -d username
## 检查进程