373
---
## Page 368
374
功能）。如果缺乏足够的引导，这些工程师经常会重新发明轮子。将常见的功能融合于
在大型组织中，工程师可能不完全了解一些针对常见任务的现有的技术设施（例如限速
推动融合和简化
共同解决问题。
会有专人评估整个检查列表，如果发现过时的项目，会与对应的服务负责人和领域专家
建议可能会过期，内部系统可能会改变，之前关注的重点可能由于新的策略和系统改变
这个检查列表需要持续不断地投入精力进行维护，以确保里面的问题仍然有效：里面的
表中增加新的问题需要经过公司副总裁的批准。LCE遵守以下原则：
精心挑选合理的问题，确保开发者负担在可控范围之内。为了控制该列表的增长，向列
在具体实践中，我们可以提出近乎无限的问题，这样会导致该列表无限增长。LCE需要
工程师评估发布过程，并且给发布团队提供具体的待办事项，以及更多信息的链接。以
LCE使用发布检查列表来评估每次发布过程。该发布列表（参见附录E）可以帮助LCE
子包括民航起飞之前的检查列表以及手术之前的检查列表（参见文献[Gaw09]）。同样的，
检查列表可以用来减少失败，并且在多个职能部门之间保证一致性和完整性。常见的例
发布检查列表
续不断地优化整个发布的体验，在成本与收益上保持平衡。
326
而过时了。LCE会持续维护该检查列表，如果发现问题会进行小型修改。每一年或者半年，
下是列表中的一些例子。
·每个指令必须非常具体、可行，开发者可以在合理的时间内完成。
·每一个问题的重要性必须非常高，理想情况下，都必须有之前发布的经验教训来
·问题：该服务是否有可能被某个用户滥用？
●问题：是否需要一个新的域名？
）问题：是否存储持久化信息？
证明。
一待办事项：在服务中实现限速和用户配额管理。通过此链接了解有关的共享
一待办事项：确保实现了备份，
第27章可靠地进行产品的大规模发布
·待办事项：与市场部门协调想要的域名，并且去申请注册。通过此链接向市
服务。
场部门提交申请。
，通过此链接了解备份实现的细节问题。
---
## Page 369
检查列表是可靠发布新服务和新产品的重要组成部分。我们的检查列表随着时间不停地
起草一个发布检查列表
来说是有用的。
必须要坚守安全发布的抽象原则，再具体细化成新的检查列表内容，确保他们对开发者
发布产品的设计密切相关，而不能简单地增加无关问题。负责这类非常规的发布的LCE
是否需要添加新的项目。在这个对话过程中，一定要记住确保每个问题的“目的”与待
动端发布的LCE需要和移动端领域的专家一起确定现有的检查列表内容是否适用，以及
数天内修复Gmail服务的一个Bug，但对移动设备来说这却是不可能的。因此，负责移
的客户端代码的经验。虽然我们可以通过推送新版本的JavaScript代码在数小时，甚至
例如，在发布Android之前，Google几乎没有处理大规模消费者产品运行不能直接控制
该关注一些宽泛的主题，例如可靠性、故障模式和流程等。
新的检查列表，这通常需要引入相关的领域专家。当起草新的检查列表时，检查列表应
当某个项目进入某个新的产品空间，或者是垂直领域的时候，LCE可能需要创建一个全
发布未知的产品
经验，LCE的话语权更重，可以确保建议和意见受到重视。
向基础设施组提出要求，作为用户和服务负责人之间的沟通桥梁。由于之前多次发布的
的团队一起合作简化他们的审批流程，同时为常见场景实现自动化审批。LCE同时可以
加速发布过程，他们也会替产品团队争取权益。例如，LCE可能会和某个审批流程复杂
通用基础设施服务来替代，或者基础设施服务中哪些地方存在重复。LCE有很多方法来
最多，哪些步骤花费的时间超多，哪些问题不停地反复用类似的方法解决多次，可以用
佳人选。在执行某次发布过程中，他们会收集第一手资料：哪些方面对发布造成的困难
由于LCE对Google所有的产品都有很丰富的经验，因此他们也是识别可简化区域的最
新版本发布功能等。这种标准化机制可以大幅简化发布检查列表：例如，关于限速功能
展性方面的不确定性。常见的基础设施，包括限速功能和用户配额，服务器数据推送功能
元一这些基础设施服务已经经过了多年的优化和加固，可以帮助消除容量、性能和扩
个载体来推动通用基础设施的融合。LCE会推荐现有的基础设施作为服务的基础构建单
几乎所有的Google团队都参与一个通用的发布流程，这使得发布检查列表可以作为-
们的工程质量和服务质量。
个服务之间的知识更容易传递，同时可以确保这些基础设施有足够的关注，以此提高它
一套通用的基础设施类库可以避免这种场景，收益非常明显：消除了重复劳动，使得各
起草一个发布检查列表
1327
375
---
## Page 370
376
328
在单独区域或者国家内有助于建立以后大规模发布时的信心。
流量分布可能与稳定状态下有显著区别，之前的压力测试可能失效。公众的兴趣是很难
新功能通常会在发布之初带来临时的用量增长，在几天内会消除。这种尖峰式的负载或
容量规划
集成
待办事项：
示范问题：
该服务的相关依赖都有足够的容量。
的构建组件。在接下来的容量规划过程中（参见文献[Hix15a]），依赖列表可以用来保证
础设施的负责人加入到发布流程中来。Google拥有很多内部服务，它们经常作为新产品
针对系统架构的评审可以确定该服务是否正确地使用了通用基础设施，并且确保这些基
架构与依赖
GoogleLCE检查列表中抽取一些主题来讨论。
为这些具体事项必须跟公司内部的服务和基础设施相关。在接下里的几节中，我们会从
变长，但是LCE团队会周期性地调整内容。具体的检查列表细节每个公司都会不同，因
预测的，有些Google产品需要为预计容量提供15倍以上的发布容量。首次发布时限制
些内容每个公司都会不同：
部的生态系统通常随着时间迁移而不断变大，经常包括自己的特质与陷阱。所以以下这
配置新服务、设置监控、与负载均衡集成，以及设置DNS配置等提供了指导。这些内
很多公司的对外服务都要运行在一个内部生态系统中，这些系统为如何建立新服务器、
●给服务建立一个新的DNS。
·将非用户请求与用户请求进行隔离。
·确认预计的请求数量。单个页面请求可能会造成后端多个请求。
·从用户到前端再到后端，请求流的顺序是什么样的？
是否存在不同延迟要求的请求类型？
为服务配置监控系统。
为服务配置负载均衡系统。
第27章可靠地进行产品的大规模发布
---
## Page 371
在这几种场景中，客户端的滥用行为很容易影响到服务的稳定性（防止爬虫和拒绝服务
如，手机客户端APP周期性地将数据同步到云端，或者使用了自动刷新功能的网站等。
这个原则当考虑到某些客户端在没有用户输入的情况下执行操作的时候就不适用了，例
双倍的用户来产生。
为（例如单击链接）触发的，请求的速率会受到用户单击速度的限制。双倍的负载需要
在传统网站中，很少需要将用户的合理滥用行为考虑进来。当每条请求都是由于用户行
客户端行为
待办事项：
示范问题：
件不可用的情况？在运行时能否处理依赖不可用和自动恢复情况？
生故障，该服务是否能够在降级模式下继续工作？该服务在启动时能否应对某个依赖组
对无效或者恶意输入，是否有针对拒绝服务攻击（DoS）的保护？如果某个依赖组件发
影响范围。该服务是否能够承受单独物理机故障？单数据中心故障？网络故障？如何应
一部分中，我们可以检查每个组件以及每个组件的依赖组件来确定当它们发生故障时的
针对新服务进行系统性的故障模式分析可以确保发布时服务的可靠性。在检查列表的这
故障模式
示范问题：
和网络资源通常需要很长的准备时间，需要足够提前申请才能获取到。
冗余节点，这样可以让用户不会受到数据中心维护或者其他突发情况的影响。数据中心
务100%的峰值流量，那么我们就需要维护4个或者5个部署点，这其中包括1或2个
容量规划与余度和可用性都有直接关系。例如，如果需要三个相互复制的部署点来服
·为请求设置截止时间，防止由于请求持续时间过长导致资源耗尽。
●本次发布是否与新闻发布会、广告、博客文章或者其他类型的推广活动有关？
加入负载丢弃功能，在过载情况中可以尽早开始丢弃新请求。
该服务是如何处理依赖系统的不可用性的？
系统设计中是否包括单点故障源？
是否已经获取到该服务需要的全部计算资源？
发布过程中和之后预计的流量和增速是多少？
起草一个发布检查列表
329
378
377
---
## Page 372
62
330
多优势一
Google还利用版本系统做一些其他的事情，例如存放配置文件等。版本控制系统具有许
这种方式使得在分支上修复每次发布的Bug更简单。
开发都是在主线分支上（mainline）进行的，但是发布版本是在每个发布的分支上进行的。
很多最佳实践的内容都围绕着如何有效使用版本控制系统而展开。例如，我们大部分的
Google是版本控制系统的重度用户，几乎所有的开发流程都和版本控制系统深度整合
开发流程
待办事项：
示范问题
员都可以在紧急事故中处理问题。
移到文档中，这样才能在紧急情况下派上用场。流程文档应该做到能使任何一个团队成
这些剩余的流程应该在发布之前文档化，确保在工程师还记得各种细节的时候就完全转
包括人在内。
心中，从备份中恢复数据等。为了保障可靠性，我们应该尽量减少流程中的单点故障源
的，每个服务都有需要人工执行的流程：构建一个新版本，迁移服务到另外一个数据中
Google鼓励工程师们使用标准工具来自动化一些常见流程。然而，自动化永远不是完美
流程与自动化
待办事项
示范问题
攻击是另外一个话题，与设计正常用户的安全行为不同）。
·维持服务运行是否需要某些手动执行的流程？
·确保客户端在请求失败之后按指数型增加重试延时。
·该服务是否实现了自动保存／自动完成（输入框）／心跳等功能？
·将所有需要手动执行的流程文档化。
将构建和发布新版本的流程自动化。
将迁移到另外一个数据中心的流程文档化。
保证在自动请求中实现随机延时抖动。
第27章可靠地进行产品的大规模发布
一跟踪历史、修改记录，以及代码审核一
一也都适用于配置文件。在某些案例中，
---
## Page 373
几天内发布该功能”，而不是“我们已经发布了这个功能”。
理？有的时候这些备用方案可能就是简单地准备另外一页幻灯片，“我们会在接下来的
备用方案是发布计划的另外一个方面。如果没有在主题演讲中成功启用这个功能怎么处
队可能需要在主题演讲进行时启用某个功能，但需要在主题演讲之前屏蔽掉。
市场宣传部门或PR部门经常会提出他们的要求，使得整个流程更复杂。例如，某个团
复杂的操作过程或者编写特殊的代码来保障流程的正确性。
件并不能够保障一次性被推送到生产实例上。有的时候为了成功发布，可能要进行一个