User: I would like to know if it is possible (and if so, how) to call a routine from a DLL by the Proc address instead of by name - in Python.
Case in point: I am analyzing a malicious dll, and one of the routines I want to call is not exported (name to reference it by), however I do know the address to the base of the routine.
This is possible in C/C++ by casting the function pointer to a typedef'ed function prototype.
Is there a similar way to do this in Python?
If not, are there any concerns with modifying the export table of the dll, to make a known exported name map to the address.
Assistant: I was able to modify the export table, changing the base address of an already exported routine to my own routine.
This allowed me to execute the subroutine I was interested in via Python by using the exported name.