### How to Check if a Tornado Application is Listening on a Specific URL

If you need to manage multiple URLs dynamically, such as adding new handlers for each new game, it's important to first check if Tornado is already listening on a specific URL. Hereâ€™s how you can do it:

1. **Access the Handlers:**
   Tornado stores its registered handlers in the `tornado.web.Application.handlers` attribute. You can inspect this list to determine if a particular URL is already being listened to.

2. **Check for the URL:**
   Iterate through the `handlers` list and check if the URL you want to add is already present.

Here is an example of how you can implement this:

```python
import tornado.ioloop
import tornado.web

# Define your application
app = tornado.web.Application([
    (r"/game1", GameHandler),
    (r"/game2", GameHandler),
])

def is_url_listened(url):
    """
    Check if the given URL is already being listened to by the Tornado application.
    
    :param url: The URL to check.
    :return: True if the URL is being listened to, False otherwise.
    """
    for host, handlers in app.wildcard_router.rules:
        for spec in handlers:
            if spec.matcher.match(url):
                return True
    return False

# Example usage
url_to_check = "/game3"
if not is_url_listened(url_to_check):
    # Add the new handler
    app.add_handlers(r".*", [(url_to_check, GameHandler)])
else:
    print(f"URL {url_to_check} is already being listened to.")

# Start the server
app.listen(8888)
tornado.ioloop.IOLoop.current().start()
```

### Explanation:
- **`app.wildcard_router.rules`:** This attribute contains the routing rules for the Tornado application. Each rule consists of a host and a list of handlers.
- **`spec.matcher.match(url)`:** This checks if the given URL matches any of the registered routes.

### Best Practices:
- **Domain Model:** For better management, consider keeping a reference to active games in your domain model. This will allow you to have fine-grained control over the URLs and their associated handlers.
- **Dynamic Handler Addition:** Use the `add_handlers` method to dynamically add new handlers to your application.

By following these steps, you can ensure that your Tornado application only listens to unique URLs and avoids conflicts.