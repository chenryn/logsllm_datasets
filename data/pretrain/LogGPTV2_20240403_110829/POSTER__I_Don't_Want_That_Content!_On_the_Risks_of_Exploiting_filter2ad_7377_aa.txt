title:POSTER: I Don't Want That Content! On the Risks of Exploiting
Bitcoin's Blockchain as a Content Store
author:Roman Matzutt and
Oliver Hohlfeld and
Martin Henze and
Robin Rawiel and
Jan Henrik Ziegeldorf and
Klaus Wehrle
POSTER: I Don’t Want That Content! On the Risks of
Exploiting Bitcoin’s Blockchain as a Content Store
Roman Matzutt, Oliver Hohlfeld, Martin Henze,
Robin Rawiel, Jan Henrik Ziegeldorf, Klaus Wehrle
Communication and Distributed Systems, RWTH Aachen University, Germany
PI:EMAIL
ABSTRACT
Bitcoin has revolutionized digital currencies and its underly-
ing blockchain has been successfully applied to other domains.
To be veriﬁable by every participating peer, the blockchain
maintains every transaction in a persistent, distributed, and
tamper-proof log that every participant needs to replicate
locally. While this constitutes the central innovation of
blockchain technology and is thus a desired property, it can
also be abused in ways that are harmful to the overall system.
We show for Bitcoin that blockchains potentially provide mul-
tiple ways to store (malicious and illegal) content that, once
stored, cannot be removed and is replicated by every partic-
ipating user. We study the evolution of content storage in
Bitcoin’s blockchain, classify the stored content, and high-
light implications of allowing the storage of arbitrary data
in globally replicated blockchains.
1.
INTRODUCTION
Bitcoin [9] and its underlying blockchain technology have
revolutionized digital currencies and inﬂuenced other areas
of research. Among the current cryptocurrencies, Bitcoin
remains to be the most popular one with a market capitaliza-
tion of $9.52 billion [6] and ≈5 200 active nodes [4] in August
2016. Motivated by its successful application in cryptocur-
rencies, the blockchain has been transferred to other domains
and inﬂuenced a set of research areas. Examples include
distributed naming services [1], digital notary services [7],
and the realization of smart contracts [13]. This development
highlights that blockchain technology constitutes both, a
productively used paradigm securing sensitive assets and an
active area of research.
While Bitcoin is designed as a cryptographic currency, the
underlying blockchain technology can be (ab-)used in a more
versatile manner—even as a general-purpose content store.
Although a discussion of this possibility has been initiated
by the community [8, 2] and few example contents have
been identiﬁed [11], it still has received less attention than
other, well-studied properties of Bitcoin (e.g., users’ ﬁnan-
Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for third-party components of this work must be honored.
For all other uses, contact the owner/author(s).
CCS’16 October 24-28, 2016, Vienna, Austria
c(cid:13) 2016 Copyright held by the owner/author(s).
ACM ISBN 978-1-4503-4139-4/16/10.
DOI: http://dx.doi.org/10.1145/2976749.2989059
cial privacy [14, 15]) and a broad evaluation is still missing.
Hence, we seek to ﬁll this gap by providing a ﬁrst step to-
wards the systematic analysis of arbitrary content of Bitcoin’s
blockchain. Storing arbitrary content on a blockchain can
be critical to the system’s operability: users need to down-
load the complete blockchain (or trust potentially malicious
peers) to be able to participate. Further, as a blockchain
constitutes a persistent and tamper-proof write-only log, its
contents are virtually unerasable. Thus, the blockchain can
be harmed by injecting arbitrary (and potentially malicious
or illegal) content, which is not only unerasable, but also gets
distributed among all Bitcoin users. As a consequence, users
are put at risk by having to download illegal content; this
harms the entire system. Our preliminary analysis reveals,
e.g., that Bitcoin’s blockchain contains roughly 400 links to
illegal services, which each user stores on her hard disk.
We assess this risk by surveying diﬀerent methods for data
storage in Bitcoin’s blockchain and by empirically analyzing
the content in Bitcoin’s blockchain. Our analysis is based on
Bitcoin since it is the oldest and most widespread blockchain-
based system and provides us with the largest dataset. We
show the chronological development of content storage meth-
ods and discuss exemplary motivations of storing arbitrary
data in the blockchain. This way we aim at opening a debate
on the encouraged or discouraged use of the blockchain tech-
nology employed in a single-purpose system (e.g., Bitcoin) as
general-purpose persistent content store.
2. STORING BLOCKCHAIN CONTENT
We brieﬂy introduce the idea of blockchains and methods
used to embed arbitrary content into them. Blockchains
consist of a chain of cryptographically linked blocks holding
use-case speciﬁc data. E.g., Bitcoin’s blockchain is intended
to hold monetary transactions from one user to another.
Technically, Bitcoin uses a stack-based scripting language to
specify the conditions under which bitcoins can be spent (in
an output script). The funds can only be spent in new trans-
actions containing an input script satisfying these conditions.
Output scripts typically require a user to create a signature
that can be veriﬁed with a speciﬁc public key. Although
Bitcoin’s scripting language is more powerful, the Bitcoin
reference client only accepts standard transactions of a size
of at most 100 KB that only use output scripts from a re-
stricted set of templates. However, the peer appending a new
block (the miner ) can also decide to include non-standard
transactions that do not follow the above-mentioned rules.
Bitcoin allows for various ways to store arbitrary data on its
blockchain, which we illustrate next.
1769Coinbase transactions. Coinbase transactions reward
miners with newly created bitcoins. As regular users can-
not create such transactions, we consider them non-standard.
The input script of a coinbase transaction encodes the block’s
position in the blockchain in a variable-length ﬁeld. Incon-
sistencies between this length ﬁeld and the length ﬁeld of
the input script can contain up to 100 Bytes [3] of arbitrary
data. This is used by miners for, e.g., additional bytes of
randomness [3] or for (unoﬃcial1) feature voting.
P2PK(H) transactions. Pay-to-Pubkey (P2PK) and
Pay-to-Pubkey-Hash (P2PKH) transactions are the most
widely used standard transactions in Bitcoin. Only the
private key corresponding to the public key (or hash value
thereof) speciﬁed in the transaction’s output script can spend
the funds. Yet, users can exchange the public key (hash) with
up to 65 Bytes (resp. 20 Bytes) of data per output script
at the expense of destroying the bitcoins spent, i.e., making
them permanently unspendable as the required private key
is unlikely known by anybody. Considering a maximum size
of 100 KB for standard transactions, a single transaction
can hold up to 83.2 KB of arbitrary data distributed over
4 161 P2PKH outputs (98.3 KB using 1 513 obsolete P2PK
outputs). Multisig transactions, standard transactions that
are used to require groups of users to mutually agree on
spending the funds, can be exploited in a similar vein.
Nulldata transactions. Added to the reference client
as standard transactions in June 2013 (development version)
and ﬁnally in March 2014 (release version), so-called nulldata
transactions allow users to deliberately attach small pieces
of data to regular transactions without destroying bitcoins.
Nulldata transactions may only hold up to 83 bytes.
Non-standard transactions. Finally, output scripts
can be extended with semantically irrelevant parts, e.g., dead
if-branches or noneﬀective stack operations. Such transac-
tions can combine content storage with a transaction behavior
that is equivalent to, e.g., a P2PK(H) transaction, without
destroying bitcoins. This method is the most space-eﬃcient
one as it allows for storing up to 99.6 KB for a transaction of
standard size behaving like a P2PKH transaction. However,
the majority of miners discard such transactions.
3. EVOLUTION OF CONTENT STORAGE
To assess the impact of arbitrary content on blockchain-
based systems, we analyze the evolution of content stored
on Bitcoin’s blockchain. We employ heuristics for detect-
ing transactions holding non-transactional data and extract
(i) all coinbase transactions with ≥ 10 printable ASCII char-
acters or known vote ﬂags, (ii) all P2PK(H) and multisig
transactions with at least 90% of printable ASCII characters
(as suggested by CryptoGraﬃti [10]), (iii) all nulldata trans-
actions with non-empty payload, and (iv) all non-standard
transactions containing output scripts not using a standard
transaction template. Our coinbase and P2PK(H) transac-
tion heuristics might occasionally lead to false positives with
a probability of < 10−5 for P2PKH transactions and coinbase
transactions (which have a median length of 18 Byte).
Based on our heuristics, we analyzed the Bitcoin blockchain
from its emergence in 2009 until end of July 2016 with a total
of ≈146 million transactions (77.67 GB of data). We depict
the rise of data storage per transaction type in Figure 1. In
total, 0.80% of the transactions store data in the blockchain
1BIP 1 [12] deﬁnes the process for introducing new features
Figure 1: Evolution of number of transactions with
arbitrary data for individual storage methods.