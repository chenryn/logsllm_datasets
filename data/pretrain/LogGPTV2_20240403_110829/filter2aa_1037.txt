0x01 前奏
前不久在挖掘某SRC时提交漏洞时，偶然在该SRC官⽹的编辑器发现了⼀个接⼝。
起初以为是任意⽂件包含能RCE了，后来测试发现只是拼接读取了远程资源站的图⽚，原本都想着放弃了，但是当
我在后缀添加了个+号后图⽚被意外的解析成了HTML⻚⾯，这不就意味着get到⼀个存储型XSS？
https://xxx.cn/xxxx/ueditor?image_name=/xxx.png+
接着测试发现拼接图⽚在⼀个⼆级⽬录下，尝试穿越发现存在⾃研WAF，于是Fuzz了下Payload成功Bypass。
#####WAF：
#####Bypass：
Payload: 
0x02 漏洞利⽤
1. 利⽤010Editor或copy命令，制作含有恶意代码的图⽚。
copy tiny.png /b + code.txt /a tiny_code.png
2. 通过本站的⽂件上传恶意图⽚，取得⽂件名（之所以⽤png格式是因为jpg会校验是否为正常图⽚）。
3. 由于该SRC官⽹财务打款需要⼿机个⼈信息(姓名，⼿机号，sfz等)，⽽这些信息⽤户⾃⼰是可⻅的。
我们直接编写了⼀个demo.js⽤于读取受害者个⼈信息，将其部署在XSS平台。
/..%252F/
脚本会通过Ajax请求URL，使⽤DOMParser转换并解析DOM对象，提取⽤户身份证、银⾏卡、⼿机号、地址
等信息后合并base64发送到XSS平台，找了团队的⼏个朋友测试OK。
4. 构造跳转⽹站，诱导受害者访问：
这时只要受害者访问该服务，跳转⾄恶意⻚⾯就能获取信息。
成功窃取到受害者的信息，base64解码即可。
0x03 技术点总结
1. Fuzz出接⼝及参数,拼接+号解析成HTML⻚⾯。
2. URL拼接时BypassWAF进⾏⽬录穿越。
3. 使⽤DOMParser转换为DOM对象并提取表单input值，后通过window.btoa函数base64编码字符串。