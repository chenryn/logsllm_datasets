title:An Ontology-driven Knowledge Graph for Android Malware
author:Christian Ryan and
Sharmishtha Dutta and
Youngja Park and
Nidhi Rastogi
 An Ontology-driven Dynamic Knowledge Graph for 
Android Malware
Ryan Christian1, Sharmishtha Dutta1, Youngja Park2, Nidhi Rastogi1,2
Rensselaer Polytechnic Institute1, IBM TJ Watson Research Center2, Rochester Institute of 
Technology3 New York, USA
ABSTRACT
We present MalONT2.0 – an ontology for malware threat intelli-
gence [4]. New classes (attack patterns, infrastructural resources to
enable attacks, malware analysis to incorporate static analysis, and
dynamic analysis of binaries) and relations have been added follow-
ing a broadened scope of core competency questions. MalONT2.0
allows researchers to extensively capture all requisite classes and
relations that gather semantic and syntactic characteristics of an
android malware attack. This ontology forms the basis for the
malware threat intelligence knowledge graph, MalKG, which we
exemplify using three different, non-overlapping demonstrations.
Malware features have been extracted from openCTI reports on
android threat intelligence shared on the Internet and written in the
form of unstructured text. Some of these sources are blogs, threat
intelligence reports, tweets, and news articles. The smallest unit
of information that captures malware features is written as triples
comprising head and tail entities, each connected with a relation. In
the poster and demonstration, we discuss MalONT2.0 and MalKG.
CCS CONCEPTS
• Computer systems organization → Embedded systems; Re-
dundancy; Robotics; • Networks → Network reliability.
KEYWORDS
Knowledge Graphs, Security Intelligence, Android, Malware
ACM Reference Format:
Ryan Christian, Sharmishtha Dutta, Youngja Park, Nidhi Rastogi. 2021. An 
Ontology-driven 
Android 
Malware. 
In  Proceedings  of  the  2021  ACM  SIGSAC  Conference  on 
Computer and Communi-cations Security (CCS ’21), November 15–19, 2021, 
Virtual  Event,  Republic  of  Korea.  ACM,  New  York,  NY,  USA,  3  pages. 
https://doi.org/10.1145/3460120. 3485353
Knowledge 
Dynamic 
Graph 
for 
INTRODUCTION
1 
Malware attack intelligence describes the working of the attacks, 
their tactics, techniques, and procedures (TTPs), and the technol-
ogy vulnerabilities exploited by the malware. This intelligence can 
equip security researchers with information to build better defenses
against advanced cyber attacks and issue early warnings about fu-
ture threats. The Internet can lead to evidence on attack intelligence
through thousands of diverse and heterogeneous sources, globally
known as open cyber threat intelligence (openCTI). Discerning
and utilizing this knowledge speedily and accurately for longitudi-
nal studies mandate rigorous development of techniques that are
constantly evolving and adapting to the complexities of malware at-
tacks. Therefore, threat intelligence is best utilized when it is timely,
actionable, shared in an universally acceptable format, contextual,
and understandable.
CVE1, NVD2 are vulnerability tracking programs where informa-
tion is combined through a centralized platform in a semi-structured
way. Industry standards like Structured Threat Information eXpres-
sion (STIX)[? ] and trusted automated exchange of indicator infor-
mation (TAXII)[1] provide a language-agnostic framework for stor-
ing, sending, and receiving packages. However, despite concerted
efforts by experts towards organizing malware threat information,
there is a lack of context and transparency in sharing CTI. Ana-
lysts require more than data-driven threat intelligence. They seek
trustworthy data sources, relevant threat indicators, sources and
motivations behind attacks, and the likelihood of an attack. They
also demand context to get a comprehensive picture of the threats,
victims, and the distinct tactics an attacker deploys.
Malware threat ontologies, like MalONT2.0, enable communicat-
ing contextual openCTI feeds by representing them in a structured
format that encapsulates data and information characterized by
properties that vary according to context. Our main contributions
are as follows:
(1) We present MalONT2.0, an ontology for capturing malware
threat intelligence through classes and relations that com-
bine semantic features (such as malware, attacker, infrastruc-
ture) with factual data (extracted from openCTI reports).
(2) Annotated openCTI reports on android malware attacks,
where each annotation is instantiated into classes and shares
a relationship with other instances. Both classes and relations
are defined and described in MalONT2.0 and share similari-
ties with the STIX2.1 framework, where applicable. The in-
stances are stored as RDF triples [2], ⟨𝑒𝑛𝑡𝑖𝑡𝑦ℎ𝑒𝑎𝑑, 𝑟𝑒𝑙𝑎𝑡𝑖𝑜𝑛, 𝑒𝑛𝑡𝑖𝑡𝑦𝑡𝑎𝑖𝑙⟩.
(3) We provide a knowledge graph, MalKG generated from
openCTI reports. We demonstrate the use of this knowledge
graph through three queries (shown in Section 3).
Permission to make digital or hard copies of part or all of this work for personal or 
classroom use is granted without fee provided that copies are not made or distributed 
for profit or commercial advantage and that copies bear this notice and the full citation 
on the first page. Copyrights for third-party components of this work must be 
honored. For all other uses, contact the Owner/Author(s).
CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea.
© 2021 Copyright is held by the owner/author(s).
ACM ISBN 978-1-4503-8454-4/21/11. 
https://doi.org/10.1145/3460120.3485353
1.1 What’s new in MalONT2.0
MalONT2.0 is a significant improvement over prior version [4] as it
comprehensively captures semantic, syntactic, and factual descrip-
tion of a malware threat. Prior version emphasised on contextual
1https://cve.mitre.org/
2https://nvd.nist.gov/
Session 8: Poster & Demo Session CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea2435information coming from semantic data and contained partial fac-
tual data. The main source of openCTI was unstructured threat
reports written on diverse threats such as malware, and APT. The
latest knowledge graph is generated from openCTI reports that fo-
cus exclusively on android malware threats. Designing an ontology
requires answering competency questions that can provide a wide
coverage of the domain. These questions (or a narrower version
of a competency question) are validated by confirming answers to
queries on the instantiated triples. While building MalONT2.0, we
updated the competency questions to the following:
a Find all missing intelligence from the KG relating to various
attack vectors - malware, actors (attacker, attacker-group, or-
ganizations, country), infrastructure (software, applications,
platform, infrastructure used, TTPs). This information may
be spread across triples generated across multiple openCTI
reports describing an attack vector.
b Triples collected from openCTI reports from a wide range of
sources can be aggregated with syntactic intelligence from a
source like VirusTotal3 to provide a richer description of the
attack vector.
c Identifying similar properties and grouping attack vectors
can reveal latent behaviors and can be used in predictive
models to forecast future events, both short- and long-term.
Figure 1: Main Classes (left), Relations (right) from Mal-
ONT2.0
1.2 Example Knowledge Graph
See Figure 4 (left) for a sub-graph of MalKG. A openCTI report
contains information about a malware, Pegasus mapped to Malware
class. This malware is also known as Chrysaor, and it logs user
keystrokes and leaks the data of popular apps. The openCTI report
contains the hash for a single sample of the malware. According to
VirusTotal, this sample was first seen in April 2017.
2 SYSTEM ARCHITECTURE
The proposed framework gathers unstructured openCTI reports
from the Internet using the twitter API. It extracts threat intelligence
information in the form of RDF triples, assigns them classes and
relations from MalONT2.0 (see Figure 1) forming a new knowledge
graph, which it appends to the existing MalKG. In this section, we
describe the main components of this framework .
(1) CTI reports corpus– MalONT2.0 is used to instantiate 25
openCTI reports written between 2011 – 2021, and down-
loaded from the Internet. We followed the process of natu-
ral language annotation for machine learning [3], created
mutually agreed upon annotation guidelines, including a
tie-breaking process managed by a security expert. These re-
ports were authored by analysts from security organizations
such as McAfee Labs. The annotated text has approximately
3,400 tags extracted by annotators using BRAT4 resulting
in 1,100 entities and 2,300 relations. Triples generated from
these are the structural components of MalKG that capture
large-scale facts related to android malware threat intelli-
gence.
(2) MalONT2.0– Semantic text patterns map to classes (called
entity in KG) and object properties (called relations in KG)
defined by MalONT2.0. An ideal open-source ontology can
systematically capture cyber threat and attack information
(facts and analysis) to model the contents of openCTI reports.
For instance, in MalONT2.0, three classes largely describe
malware behavior – Malware, Vulnerability, and Indicator.
Instances of these classes can equip the analysts with infor-
mation on malware behavior and TTPs. See Figure 3 for a
snapshot on an instance of MalONT2.0. See GitHub5 code
for annotated text and corresponding triples for all openCTI
reports.
(3) Knowledge Graph Generation– We construct a knowl-
edge graph corresponding to the malware ontology by pop-
ulating it with triple instances derived from actual openCTI
reports. However, one may argue about the necessity con-
cerning knowledge graphs, given that the instantiated ontol-
ogy is previously obtaining facts and knowledge regarding
the domain. The two key features of knowledge graphs are
the ability to reason on deduced information and infer latent
information. MalKG captures properties connecting nodes
(also called entities) and employs a reasoner to draw associa-
tions among entities that would otherwise not be recognized.
(4) Knowledge Graph Querying– In addition to the MalKG
generated from annotated triples, we also run three queriesn
on the knowledge graph. OpenCTI reports are regularly pub-
lished by security and technology companies. These reports,
especially those freely available for public access, are shared
on the Twitter platform by company personnel. We have
built an interface using python that uses academic Twit-
ter API to extract unique occurrences of android malware
openCTI reports. Triple extraction models trained on anno-
tated instances are used for extraction from frequent batches
of openCTI reports.
3 OUTLINE OF POSTER AND
DEMONSTRATION
Our demonstration describes the ontology MalONT2.0 and briefly
compares it with other ontologies, namely UCO [6], MalONT (our
prior work)[4], and Swimmer ontology[5]– arguably the first mal-
ware ontology. These ontologies have been chosen for comparison
3virustotal.com
4https://brat.nlplab.org/
5https://github.com/aiforsec/DemoCCS2021/
Session 8: Poster & Demo Session CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea2436based on the competency questions defined in Section 1.1. We also
have a live demonstration of MalONT2.0 ontology prepared, as well
as queries for the knowledge graph. A few queries of the knowledge
graph are visualized using Neo4j Bloom6 in figures 2, 3, and 4.
based on STIX2.1 framework and the factual data, all extracted from
openCTI reports, (d) triple generation in the form of RDF from the
annotated text, and assignment of classes and relations. See Figure 5
for a snippet of a McAfee threat report on a spyware, "Golden Cup".
Figure 2: MalKG
Figure 3: Complete sub-graph from a single openCTI report
Figure 4: Subgraph of a single malware (left), path from
Zitmo malware to other related malware (right).
3.1 MalONT2.0 based annotations
First we will demonstrate (a) MalONT2.0 in protege showing all
the classes, sub-classes, and their descriptions, (b) configuration
of BRAT7 using the OWL file generated by MalONT2.0 prior to
annotating openCTI reports, (c) semantic features in MalONT2.0
6https://neo4j.com/developer/neo4j-bloom/
7https://brat.nlplab.org/
Figure 5: McAfee Blog snippet (left), BRAT’s interface (right)
3.2 Demonstrate MalKG
We will demonstrate (a) MalKG generated using only annotated
triples, (b) MalKG generated using all openCTI reports collected so
far using a platform, (c) an entire sub-graph of a malware extracted
from the larger KG. This will include all the triples connected to
this malware including those generated from the openCTI reports
and VirusTotal (see Figure 4).
3.3 Run queries on MalKG
We will demonstrate live queries on the MalKG through the Neo4j
platform. Queries will include searching for entities such as a mal-
ware, an application, or a vulnerability and demonstrate the kinds
of sub-graphs that can be drawn from them (see Figure 3 and 4).
4 CONCLUSION AND FUTURE WORK
We present MalONT2.0 ontology for capturing contextual threat
intelligence from heterogeneous sources. OpenCTI reports pro-
vide semantic information which is used to instantiate classes and
relations of MalONT2.0. VirusTotal provides additional syntactic
information for hashes that occur in the openCTI reports, and we
explore that in depth in future research. We aim to append the
graph generated from this to the existing MalKG. For future work,
we also plan to perform validations on triples generated for MalKG,
at scale. We also plan to demonstrate the use on a dynamically
growing MalKG for forecasting threat vectors.
5 ACKNOWLEDGEMENT
This work is supported by the IBM AI Research Collaboration
(AIRC). The authors would like to thank RPI researchers Erin Turn-
bull and Yueting Liao for their support.
REFERENCES
[1] Julie Connolly, Mark Davidson, and Charles Schmidt. 2014. The trusted automated
exchange of indicator information (taxii). The MITRE Corporation (2014), 1–20.
[2] Jay Pujara, Hui Miao, Lise Getoor, and William Cohen. 2013. Knowledge graph
identification. In International Semantic Web Conference. Springer, 542–557.
Machine Learning. OReilly Media.
[3] James Pustejovsky and Amber Stubbs. 2013. Natural Language Annotation for
[4] Nidhi Rastogi, Sharmishtha Dutta, Mohammed J Zaki, Alex Gittens, and Charu
Aggarwal. 2020. MalONT: An ontology for malware threat intelligence. In Inter-
national Workshop on Deployable Machine Learning for Security Defense. Springer,
28–44.
[5] Morton Swimmer. 2008. Towards an ontology of malware classes. Online] January
[6] Zareen Syed, Ankur Padia, Tim Finin, Lisa Mathews, and Anupam Joshi. 2016. UCO:
A unified cybersecurity ontology. In Workshops at the Thirtieth AAAI Conference
on Artificial Intelligence.
27 (2008).
Session 8: Poster & Demo Session CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea2437