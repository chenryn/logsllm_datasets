Spring Part 2 SpringMVC
审了⼀些Spring的项⽬，还是打算以开发的⻆度从头看⼀下，Spring第⼀部分之前发过⼀遍，这
次打做⼀个补全。跟着B站的视频看的，迷迷糊糊视频快进看了⼀个⼩时，感觉东⻄也不多.....其
实直接上代码看别⼈怎么写的更有效率⼀点233333333
Part3 感觉看下源码分析⽐较好，额，好像springboot也要简单过下，虽然审过了，但是查漏补
缺嘛~
《Spring Part 1 四天学习总结》
https://mp.weixin.qq.com/s/Qqu11XiZkWchhQ15y0J0_A
⼀、SpringMVC 的基本概念
1. 三层架构 
表现层、业务层、持久层
2.MVC
MVC 全名是 Model View Controller，是模型(model)－视图(view)－控制器(controller)的缩
写， 是⼀种⽤于设计创建 Web 应⽤程序表现层的模式。
3.SpringMVC
SpringMVC 是⼀种基于 Java 的实现 MVC 设计模型的请求驱动类型的轻量级 Web 框架，属于
Spring FrameWork 的后续产品，已经融合在 Spring Web Flow ⾥⾯。Spring 框架提供了构建
Web 应⽤程序的全功能 MVC 模块。使⽤  Spring 可插⼊的  MVC 架构，从⽽在使⽤ Spring
进⾏ WEB 开发时，可以选择使⽤ Spring 的 Spring MVC 框架或集成其他 MVC 开发框架，如
Struts1(现在⼀般不⽤)，Struts2 等。
SpringMVC 已经成为⽬前最主流的 MVC 框架之⼀，并且随着 Spring3.0 的发布，全⾯超
越 Struts2，成为最优秀的 MVC 框架。它通过⼀套注解，让⼀个简单的 Java 类成为处理请求
的控制器，⽽⽆须实现任何接⼝。同时它还⽀持RESTful 编程⻛格的请求。
4.SpringMVC优势
1、清晰的⻆⾊划分：
前端控制器（DispatcherServlet）  请求到处理器映射（HandlerMapping） 处理器适配器
（HandlerAdapter）
视图解析器（ViewResolver）
处理器或⻚⾯控制器（Controller） 验证器（ Validator）
命令对象（Command 请求参数绑定到的对象就叫命令对象）
表单对象（Form Object 提供给表单展示和提交到的对象就叫表单对象）。
2、分⼯明确，⽽且扩展点相当灵活，可以很容易扩展，虽然⼏乎不需要。
3、由于命令对象就是⼀个 POJO，⽆需继承框架特定 API，可以使⽤命令对象直接作为业务对
象。
4、和 Spring 其他框架⽆缝集成，是其它 Web 框架所不具备的。
5、可适配，通过 HandlerAdapter 可以⽀持任意的类作为处理器。
6、可定制性，HandlerMapping、ViewResolver 等能够⾮常简单的定制。
7、功能强⼤的数据验证、格式化、绑定机制。
8、利⽤ Spring 提供的 Mock 对象能够⾮常简单的进⾏ Web 层单元测试。
9、本地化、主题的解析的⽀持，使我们更容易进⾏国际化和主题的切换。
10、强⼤的 JSP 标签库，使 JSP 编写更容易。
………………还有⽐如RESTful ⻛格的⽀持、简单的⽂件上传、约定⼤于配置的契约式编程
⽀持、基于注解的零配置⽀持等等。
5.SpringMVC与Strusts2对⽐
共同点：
 它们都是表现层框架，都是基于 MVC 模型编写的。它们的底层都离不开原始 ServletAPI。
 它们处理请求的机制都是⼀个核⼼控制器。
区别：
Spring MVC 的⼊⼝是 Servlet, ⽽ Struts2 是 Filter
 Spring MVC 是基于⽅法设计的，⽽ Struts2 是基于类，Struts2 每次执⾏都会创建⼀个动
作类。所以 Spring MVC 会稍微⽐ Struts2 快些。
 Spring MVC 使⽤更加简洁,同时还⽀持 JSR303, 处理 ajax 的请求更⽅便
 (JSR303 是⼀套 JavaBean 参数校验的标准，它定义了很多常⽤的校验注解，我们可以直
接将这些注解加在我们 JavaBean 的属性上⾯，就可以在需要校验的时候进⾏校验了。)
 Struts2 的 OGNL 表达式使⻚⾯的开发效率相⽐ Spring MVC 更⾼些，但执⾏效率并没有
⽐ JSTL 提升，尤其是 struts2 的表单标签，远没有 html 执⾏效率⾼。
⼆、SpringMVC的请求相应流程
1、服务器启动，应⽤被加载。读取到 web.xml 中的配置创建 spring 容器并且初始化容器中的
对象。
2、浏览器发送请求，被 DispatherServlet 捕获，该 Servlet 并不处理请求，⽽是把请求转发出
去。转发的路径是根据请求 URL，匹配@RequestMapping 中的内容。
3、匹配到了后，执⾏对应⽅法。该⽅法有⼀个返回值。
4、根据⽅法的返回值，借助 InternalResourceViewResolver 找到对应的结果视图。
5、渲染结果视图，响应浏览器。
三、⼀些类的简单理解
1.DispatcherServlet：前端控制器
⽤户请求到达前端控制器，它就相当于 mvc 模式中的 c，dispatcherServlet 是整个流程控制的
中⼼，由它调⽤其它组件处理⽤户的请求，dispatcherServlet 的存在降低了组件之间的耦合
性。
2.HandlerMapping：处理器映射器
HandlerMapping 负责根据⽤户请求找到 Handler 即处理器，SpringMVC 提供了不同的映射器
实现不同的映射⽅式，例如：配置⽂件⽅式，实现接⼝⽅式，注解⽅式等。
3.Handler:处理器
开发中要编写的具体业务控制器。由 DispatcherServlet 把用户请求转发到 Handler。由
Handler 对具体的用户请求进行处理。
4.HandlAdapter：处理器适配器
通过 HandlerAdapter 对处理器进⾏执⾏，这是适配器模式的应⽤，通过扩展适配器可以对更多
类型的处理器进⾏执⾏。
5.View Resolver：视图解析器
View Resolver 负责将处理结果⽣成 View 视图，View Resolver ⾸先根据逻辑视图名解析成物
理视图名即具体的⻚⾯地址，再⽣成 View 视图对象，最后对 View 进⾏渲染将处理结果通过⻚
⾯展示给⽤户。
6.View：视图
SpringMVC 框架提供了很多的 View 视图类型的⽀持，包括：jstlView、freemarkerView、
pdfView 等。我们最常⽤的视图就是 jsp。⼀般情况下需要通过⻚⾯标签或⻚⾯模版技术将模型
数据通过⻚⾯展示给⽤户，需要由程序员根据业务需求开发具体的⻚⾯。