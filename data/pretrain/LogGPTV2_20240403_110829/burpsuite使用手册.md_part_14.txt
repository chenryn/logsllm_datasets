一次简单的渗透测试过程大体包含如下环节： 1.首先，我们通过SoapUI NG Pro 创建安全测
试用例。如下图：
2.在弹出的界面中，选择通过WSDL创建，接着输入WSDL地址。如下图：
199
第十七章 使用Burp Suite测试Web Services服务
3.当SoapUI NG Pro对WSDL解析完成后，会自动生成一系列的安全测试项：
200
第十七章 使用Burp Suite测试Web Services服务
4.我们可以对上图中的安全测试项进行增加和删除，默认情况下，这些安全测试项都是选中
的。比如，如果我们只需要测试是否存在XPath注入，则只要上图中的勾选最下面的一项即
可。 当SoapUI NG Pro根据安全测试项，完成不同的测试用例的创建之后，主操作界面如下
图所示：
201
第十七章 使用Burp Suite测试Web Services服务
5.我们可以选择指定的SOAPAction或者某个SOAPAction下的某个安全项进行单一测试，也可
以直接点击run运行所有的安全测试项。如果测试项过多的话，此操作执行时间会比较长，同
时，如果并发数过多，会给服务器端造成压力，这是测试时候需要注意的。如下图所示，图
中WebService接口正在安全测试中，进度条中显示调用的SOAPAction名称。
202
第十七章 使用Burp Suite测试Web Services服务
6.如果出现下图的状态，则表示测试进程已经执行完毕。
7.7. 此时，我们可以在Burp的Http history面板中查询到刚才发生的所有请求消息，通过不同
的过滤条件查找我们关心的请求或响应消息，并发送到Burp的其他工具组件进行消息重放和
处理、验证。
更多关于SOAPUI的使用请阅读这里
SoapUI NG Pro的安全测试项包括以下内容：
203
第十七章 使用Burp Suite测试Web Services服务
边界扫描
SQL注入
XPath/XQuery注入
模糊测试
无效的参数类型
XML格式畸形
XML炸弹
跨站脚本
上传附件安全
自定义扫描
下面就以SQL注入为例，我们看看SoapUI NG Pro的安全测试配置参数。
对于每一个安全测试项，其基本配置主要分三部分： 1.配置项（Configuration）
主要是指协议描述中定义的输入参数、编码类型、SOAP协议中的特定参数
（namespace、import....)
2.自动化测试策略（Straegy）
主要设置测试过程中的请求延时、选择策略、运行方式等
3.高级选项（Advanced）
204
第十七章 使用Burp Suite测试Web Services服务
通常是指测试时所需要的payload值，或者生成payload的策略。通过上图我们也可以看
出，payload的值是可以自定义添加的。在github上，fuzzdb是被广泛使用的字典库，我
们可以使用它作为测试的payload字典。项目地址为：https://github.com/fuzzdb-
project/fuzzdb
当我们配置完毕后，运行安全测试项时，可以在Burp中查看到发送的payload值，如下图（阴
影选中部分）所示的XSS脚本测试的payload：
同时，我们根据http状态码，对应答进行排序，跟踪可疑的响应消息，获取服务器的敏感信
息。如下图获取的服务器Banner信息：
205
第十七章 使用Burp Suite测试Web Services服务
被Burp拦截到的消息记录，我们可以发送到Intruder，使用fuzzdb进行指定的fuzz测试；也可
以发送到Repeater进行手工的消息内容修改和漏洞是否存在性的验证。具体到某个方面的漏
洞，比如说Xpath注入漏洞，在测试过程中，需要测试人员理解Xpath的注入原理，理解Xpath
的语法，根据服务器端的响应消息，自己手工构造特定的payload才能获得更重要的信息。这
些都是在平时的工作中慢慢积累的，而不是光靠一款工具软件就作为万能的解决方案，希望
读者能明白这个道理。
使用Wsdler测试WebService接口：
除了前面我们说的使用SOAPUI NG Pro 测试WebService外，在Burp里也有一个通过WSDL
解析接口定义，手工测试WebService的插件：Wsdler
206
第十七章 使用Burp Suite测试Web Services服务
如果你安装了此插件，则在Burp的 Proxy >> History 中，可以直接使用【Parse WSDL】功
能。
确认使用【Parse WSDL】解析功能后，此插件自动解析出服务的Operation、Binding、
Endpoint。当选中某个Operation之后，可以查看SOAP消息文本。同时，可以发送到Burp的
其他组件进行进一步操作。
207
第十七章 使用Burp Suite测试Web Services服务
比如，我们将上图中的消息发送到Intruder，使用字符块（Character blocks）的对参数进行
边界测试。
发送Intruder后的截图如下：
208
第十七章 使用Burp Suite测试Web Services服务
使用的payload为字符串1，从1到50，即1,11,111,1111......直到50个1，来测试参数的边界长
度：
生成payload并执行后的结果如下图所示：
209
第十七章 使用Burp Suite测试Web Services服务
上面仅仅简单地叙述了Wsdler的使用，在实际的安全测试中，你可以使用Fuzzdb的字典，进
行更复杂的渗透测试和功能验证。无论你使用什么样的工具，只要能通过一系列的自动化测
试或者手工测试，完成WebService应用程序的安全脆弱性验证，保障应用程序的安全性，提
供了应用程序的安全系统，这就达到我们做渗透测试的目的了。
210
第十八章 使用Burp, Sqlmap进行自动化SQL注入渗透测试
使用Burp, Sqlmap进行自动化SQL注入渗透测试
在OWSAP Top 10中，注入型漏洞是排在第一位的，而在注入型漏洞中，SQL注入是远比命
令行注入、Xpath注入、Ldap注入更常见。这就是本章要讲述的主要内容：在web应用程序的
渗透测试中，如何使用Burp和Sqlmap的组合来进行SQL注入漏洞的测试。在讲述本章内容之
前，默认为读者熟悉SQL的原理和SqlMap的基本使用，如果有不明白的同学，请先阅读
《SQL注入攻击与防御》一书和SqlMap手册（最好是阅读官方文档）。
本章包含的内容有：
1. 使用gason插件+SqlMap测试SQL注入漏洞
2. 使用加强版sqlmap4burp插件+SqlMap批量测试SQL注入漏洞
使用gason插件+SqlMap测试SQL注入漏洞
在正式开始本章的内容之前，我们先做如下两点约定：
你已经安装配置好了python可运行环境
你已经熟悉sqlmap的基本命令行的使用并正确安装
如果你已经做到了上面的两点，那么，我们正式开始进入本章的内容。
Burp Suite与SqlMap整合的插件除了BApp Store 中的SQLiPy外（如图），
211
第十八章 使用Burp, Sqlmap进行自动化SQL注入渗透测试
还有gason和sqlmap4burp。不同的插件之间的功能大同小异，其目的都是使用命令行调用
SqlMap的API接口进行SQL注入的测试，这里，我们主要以gason为例，讲述具体配置安装和
功能使用。
gason插件安装使用大体分以下几个步骤：
1. 首先是下载gason插件。你可以从这个地址进行下载（点击下载），也可以从官方下载源
码自己编译，总之就是获取到插件的安装文件gason-version.jar
2. 打开Burp Extensions进行安装，点击【Add】按钮，按照图中所示操作即可。安装过程
很简单，如果不明白的话，可参考《Burp Suite应用商店插件的使用》章节的内容。
212
第十八章 使用Burp, Sqlmap进行自动化SQL注入渗透测试
如果出现了下图中所示结果，且【Output】和【Errors】两个tab页面中没有错误的提示
信息，表示插件已安装成功。
213
第十八章 使用Burp, Sqlmap进行自动化SQL注入渗透测试
3. 安装完成后，当Burp的Proxy中拦截到消息记录时，可直接发送到sqlmap。如下图所示：
4. 如果没有出现如上图所示的【send to sqlmap】菜单，则表示插件没正确安装成功，需要
读者自己排查一下安装失败的原因。
214
第十八章 使用Burp, Sqlmap进行自动化SQL注入渗透测试
5. 当我们在Burp拦截的请求消息上选择【send to sqlmap】后，则自动弹出sqlmap选项设
置对话框。
从图中我们可以看出，插件会自动抓取消息内容并解析后填充到相关参数设置的选项里
去。例如：参数和参数值，请求方式（GET/POST），url地址等。同时，还有许多与
Sqlmap本身测试使用的选项值仍需要我们自己指定，其中最主要的两个是：
bin目录：这里是指sqlmap.py的路径
Command：sqlmap运行时执行的命令行
6.设置bin目录的方式很简单，点击【....】按钮，选择到sqlmap.py的存储路径即可。当bin
path配置正确后，下方的Command会自动更新，随着设置参数的不同，自动调整需要执行的
sqlmap命令行（如果不理解界面操作各个设置的含义，可以比较设置前后Command值的变
化，即可以知道某个设置对应于sqlmap参数的哪一个选项）。
215
第十八章 使用Burp, Sqlmap进行自动化SQL注入渗透测试
6.设置bin目录的方式很简单，点击【....】按钮，选择到sqlmap.py的存储路径即可。当bin
path配置正确后，下方的Command会自动更新，随着设置参数的不同，自动调整需要执行的
sqlmap命令行（如果不理解界面操作各个设置的含义，可以比较设置前后Command值的变
化，即可以知道某个设置对应于sqlmap参数的哪一个选项）。
7.所有的配置正确之后，【run】按钮将被激活，点击【run】，系统自动进入sqlmap扫描阶
段。
216
第十八章 使用Burp, Sqlmap进行自动化SQL注入渗透测试
当进入sqlmap扫描阶段时，插件会新增一个tab页面，显示执行进度，即如上图的箭头所指。
8.我们可以通过进度跟踪的界面上的【save to file】和【close tab】来保存扫描结果和关闭、
终止扫描。
使用gason插件，与命令行方式执行sqlmap脚本相比，操作变得更加方便。比如说，在命令
行环境中，我们需要先抓取cookie信息，才能放入到命令行里执行；亦或者，我们需要手工录
入一个个参数进行命令行操作，而在gason插件环境中，这些都不需要。当我们点击【send
to sqlmap】时，插件自动帮我们完成了这些操作。且与sqlmap个性设置的选项，我们也可以
通过界面操作，自动完成，比命令行下更直观、更高效。
使用加强版sqlmap4burp插件+SqlMap批量测试SQL注入漏洞
217
第十八章 使用Burp, Sqlmap进行自动化SQL注入渗透测试
如果你只想执行一次sqlmap的操作，即能完成多个链接地址的SQL注入漏洞测试，使用
gason插件的方式操作起来会比较麻烦。那么，是否存在批量检测的使用方法呢？ 国内比较
著名的安全网站freebuf上有两篇类似的文章，感兴趣的同学可以自己阅读看看。
1. 【优化SQLMAP的批量测试能】http://www.freebuf.com/sectool/75296.html
2. 【我是如何打造一款自动化SQL注入工具】http://www.freebuf.com/sectool/74445.html
通过上面的两篇文章，我们可以看出，批量操作在实际应用中非常常见，如果能解决批量问
题，则大大地提高了我们的工作效率，下面我们一起来研究一下如何解决这个问题。
在Sqlmap的官方文档中有这样的介绍：
从这段话中我们可以看出，sqlmap可以通过 -l 参数，一次检测多个url的注入问题，这个参数
的值是Burp proxy或者WebScarab proxy的日志文件。那么，我们是否可以通过插件的方式，