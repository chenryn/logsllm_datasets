6.1 Security in Branchless Banking
The branchless banking system is the foundation of mod-
ern e-commerce, and its security has been studied in several
previous works. In particular, the analysis started with the
classic paper where Anderson ﬁrst raised questions on the
security of banking systems [13]. Since then, there has been
extensive works done studying the enhancement of password-
based authentication in mobile banking [33, 39]. At the same
time, SMS-based mobile bank application is a common de-
sign which is vulnerable to attacks on messages [27], so there
have been plenty of studies aiming to improving such mecha-
nisms [16, 17, 26]. Even though there have been signiﬁcant
amount of efforts on securing the mobile banking systems,
recent studies are still raising concerns on the security of ex-
isting systems [12, 22, 31, 32]. A comprehensive study of the
existing branchless banking applications in different coun-
ties was conducted in [35, 36]. By analyzing the application
communication ﬂow, the authors found critical vulnerabilities
that can lead to compromised transaction integrity in six of
the seven applications. While these efforts are related to our
work, we are analyzing a new paradigm that couples online
banking and third-party management systems, which faces
unique problems in security.
6.2 Security in Online Payment System
The existing work on online and mobile payment systems
with third-party platforms mainly fall along two lines, i.e.,
web-based and in-app payment systems.
5.3 Defending the Attacks and Improvement
From the perspective of PPS providers, it is possible to make
the following changes: 1) KEY changing API should require
authentication; 2) The newly issued KEY should be transmit-
ted as ciphertext or via a secure connection such as HTTPs;
3) Adopt strong cryptographic primitives instead of MD5; 4)
Display clear payment and order information to users in a
uniﬁed manner; 5) Provide actual paid amount in both the
order payment status notiﬁcation and the order inquiry results.
6.2.1 Web-based Payment System Analysis
For web-based payment systems, existing security analysis
has primarily focused on merchant websites that integrate
third-party platforms. In [48], Wang et al. focused on vulner-
abilities in several popular online stores that adopt third-party
payments, like PayPal and Amazon Pay. Dynamic protec-
tion strategies were proposed for automatically protecting the
third-party web services in [52]. In [46], the static detection
methods based on the symbolic execution framework were
3286    30th USENIX Security Symposium
USENIX Association
proposed to detect the vulnerabilities in merchant websites.
Furthermore, [18, 34] generalized black-box detection tech-
niques across multiple web applications, with the analysis
based on network traces or user behaviors. [45] proposed
pattern-based attack methods to automatically generate test
cases for checking security issues of multi-party web applica-
tions.
6.2.2 In-app based Payment System Analysis
The other line of research focused on exploring the vulnerabil-
ities for in-app based payment systems. In [37], it was found
that attackers can bypass server-side validation in Google-
developed in-App Billing to make a purchase for free. Follow-
ing this line, a tool named VirtualSwindle was later proposed
in [25] to automatically target the in-app billing service for
shopping free in Android applications. Closely related to our
work is a systematical security analysis of third-party in-app
payment services in the Chinese market [53, 54]. They out-
lined seven secure design patterns for constructing a secure
transaction process and discussed the potential impact of not
following them.
6.2.3 Other Payment Methods Analysis
In [15], Chen et al. explored syndication payment services
by analyzing the user documentation via NLP-based tech-
niques on syndication services to detect logic vulnerabilities.
Moreover, credit, debit, and gift card usage in online payment
suffers from card counterfeiting. Using keyloggers and cam-
eras, attackers can steal card data and forge a copy [23]. By
monitoring network transmission, a counterfeit card can be
created to shop in the real world store [47]. To protect gift
card security, in [38], a new method to detect counterfeit gift
cards without needing to scan the original was proposed.
However, none of the existing work focuses on the Personal
Payment System (PPS), which is a newly emerged payment
service that has different system mechanisms and customers
from those explored in the existing work. To the best of our
knowledge, we are the ﬁrst to offer a systematic study to
reveal security issues in PPS.
6.3 MD5 Collision Techniques
The payment system relies heavily on a secure signature mech-
anism to prevent packet transmission tampering. Since the
PPS system generally adopts the MD5 as the Token genera-
tion hash function, we reviewed works on the MD5 collision
attack to help examine payment security. The MD5 collision
was ﬁrst noticed by Den Boer and Bosselaers in [19], which
demonstrated that two different vectors can produce an iden-
tical digest. In [49], a full MD5 collision was generated by
Xiaoyun Wang’s group, indicating that MD5 has gradually
become an insecure digest method. In addition, a practical
collision case of two X.509 certiﬁcates with different public
keys resulting in the same MD5 hash value was provided
in [24]. After that, plenty of works improved the MD5 colli-
sion approaches, from the identical preﬁx collision to the cho-
sen preﬁx while shortening the calculation time [14, 41–44],
demonstrating the weakness of MD5. In this paper, we lever-
age open resources to conduct the MD5 collision experiments
and design the attack scheme targeting the vulnerabilities in
the PPS payment process.
7 Conclusion
Personal Payment System (PPS) represents an emerging
paradigm where small business owners leverage an indepen-
dent management platform in combination with a personal
ﬁnancial account on a third-party payment system to conduct
e-commerce. However, the added complexity in composing
the two independent services for payment transaction and
order management signiﬁcantly increases the risk of secu-
rity vulnerabilities. In this paper, we studied the 35 most
widely used PPSs supporting more than 20 million users and
presented an abstracted model that captures the common de-
sign elements within these systems. In our security analysis
of these systems, we found 7 vulnerable patterns in these
designs. By chaining these vulnerabilities together, we pre-
sented 5 proof of concept exploits of these vulnerabilities.
Moreover, we also conducted four real-world attacks to allow
an attacker to purchase items at a lower price without a trace.
We have designed and conducted all the experiments on our
own accounts to minimize the impact on real customers. Fol-
lowing the practice of responsible disclosure, we have also
reported to and worked with vendors to ﬁx some of the vul-
nerabilities. Lastly, we put forth a set of suggestions for future
deployments of PPS.
Acknowledgement
This work was supported in part by Louisiana Board of Re-
gents under Contract Numbers LEQSF(2018-21)-RD-A-24
and in part by US National Science Foundation under grants
CNS-1837519, CNS-1916926, and CNS-1948374.
References
[1] Alibaba security response center. https://security.
alipay.com/.
[2] Alipay. https://www.alipay.com.
[3] Androguard.
androguard.
https://github.com/androguard/
[4] Apple pay. https://www.apple.com/apple-pay/.
USENIX Association
30th USENIX Security Symposium    3287
[5] Fiddler 4. https://www.telerik.com/fiddler.
[6] Paypal. https://www.paypal.com/us/home.
[7] Tencent security response center.
security.tencent.com/.
https://en.
[8] Venmo. https://venmo.com.
[9] Video records and md5 attack ﬁles for attacks in
https://www.dropbox.com/sh/
the case stuty.
kbo321oaw03qils/AAAJSUmncKo3heKY0BOZnSi4a?
dl=0.
[10] Wexpay. https://pay.weixin.qq.com.
[11] Fastpay PPS. http://www.weixin.mobi/, 2020.
[12] Gilberto Marins de Almeida. M-payments in brazil:
Notes on how a country’s background may determine
timing and design of a regulatory model. Wash. JL Tech.
& Arts, 8:347, 2012.
[13] Ross Anderson. Why cryptosystems fail. In Proceedings
of the ACM Conference on Computer and Communica-
tions Security, pages 215–227, 1993.
[14] John Black, Martin Cochran, and Trevor Highland. A
study of the md5 attacks: Insights and improvements. In
Proceedings of International Workshop on Fast Software
Encryption, pages 262–277. Springer, 2006.
[15] Yi Chen, Luyi Xing, Yue Qin, Xiaojing Liao, XiaoFeng
Wang, Kai Chen, and Wei Zou. Devils in the guidance:
Predicting logic vulnerabilities in payment syndication
services through automated documentation analysis. In
USENIX Security Symposium, pages 747–764, 2019.
[16] Ming Ki Chong. Usable authentication for mobile bank-
ing. PhD thesis, University of Cape Town, 2009.
[17] Sheila Cobourne, Keith Mayes, and Konstantinos
Markantonakis. Using the smart card web server in
secure branchless banking.
In Proceedings of Inter-
national Conference on Network and System Security,
pages 250–263, 2013.
[18] G Deepa, P Santhi Thilagam, Amit Praseed, and Al-
wyn R Pais. Detlogic: A black-box approach for detect-
ing logic vulnerabilities in web applications. Journal
of Network and Computer Applications, 109:89–109,
2018.
[20] eMarketer.
Global mobile
payment users
https://www.emarketer.com/content/
2019.
global-mobile-payment-users-2019, 2019.
[21] eMarketer.
Global mobile
payment users
https://www.emarketer.com/content/
2019.
china-mobile-payment-users-2019, 2019.
[22] Andrew Harris, Seymour Goodman, and Patrick Traynor.
Privacy and security concerns associated with mobile
money applications in africa. Wash. JL Tech. & Arts,
8:245, 2012.
[23] B Krebs.
All about fraud: How crooks get the
http://krebsonsecurity.com/2016/04/
cvv.
all-about-fraud-how-crooks-get-the-cvv/,
2016.
[24] Arjen K Lenstra, Xiaoyun Wang, and BMM de Weger.
Colliding x. 509 certiﬁcates. https://eprint.iacr.
org/2005/067, 2005.
[25] Collin Mulliner, William Robertson, and Engin Kirda.
Virtualswindle: An automated attack against in-app
billing on android. In Proceedings of the 2014 ACM
symposium on Information, computer and communica-
tions security, pages 459–470, 22014.
[26] Baraka W Nyamtiga, Anael Sam, and Loserian S Laizer.
Enhanced security model for mobile banking systems in
tanzania. Intl. Jour. Tech. Enhancements and Emerging
Engineering Research, 1(4):4–20, 2013.
[27] Baraka W Nyamtiga, Anael Sam, and Loserian S Laizer.
Security perspectives for USSD versus SMS in con-
ducting mobile transactions: A case study of tanzania.
international journal of technology enhancements and
emerging engineering research, 1(3):38–43, 2013.
[28] Packagist. Payjs PPS.
?query=PayJs, 2020.
https://packagist.org/
[29] Packagist. Paysapi PPS. https://packagist.org/
?query=paysapi, 2020.
[30] Packagist. Xunhupay PPS. https://packagist.org/
?query=Xunhupay, 2020.
[31] Michael Paik. Stragglers of the herd get eaten: secu-
rity concerns for gsm mobile banking applications. In
Proceedings of the Eleventh Workshop on Mobile Com-
puting Systems & Applications, pages 54–59, 2010.
[19] Bert Den Boer and Antoon Bosselaers. Collisions for
the compression function of md5. In Workshop on the
Theory and Application of of Cryptographic Techniques,
pages 293–304. Springer, 1993.
[32] Saurabh Panjwani. Towards end-to-end security in
branchless banking. In Proceedings of the 12th Work-
shop on Mobile Computing Systems and Applications,
pages 28–33, 2011.
3288    30th USENIX Security Symposium
USENIX Association
[33] Saurabh Panjwani and Edward Cutrell. Usably secure,
low-cost authentication for mobile banking.
In Pro-
ceedings of Symposium on Usable Privacy and Security,
pages 1–12, 2010.
[34] Giancarlo Pellegrino and Davide Balzarotti. Toward
black-box detection of logic ﬂaws in web applications.
In NDSS, 2014.
[35] Bradley Reaves, Jasmine Bowers, Nolen Scaife, Adam
Bates, Arnav Bhartiya, Patrick Traynor, and Kevin RB
Butler. Mo (bile) money, mo (bile) problems: Analysis
of branchless banking applications. ACM Transactions
on Privacy and Security (TOPS), 20(3):1–31, 2017.
[36] Bradley Reaves, Nolen Scaife, Adam Bates, Patrick
Traynor, and Kevin RB Butler. Mo (bile) money, mo
(bile) problems: Analysis of branchless banking appli-
cations in the developing world. In Proceedings of the
24th USENIX Conference on Security Symposium, pages
17–32, 2015.
[37] Daniel Reynaud, Dawn Xiaodong Song, Thomas R Ma-
grino, Edward XueJun Wu, and Eui Chul Richard Shin.
Freemarket: Shopping for free in android applications.
In NDSS, 2012.
[38] Nolen Scaife, Christian Peeters, Camilo Velez, Hanqing
Zhao, Patrick Traynor, and David Arnold. The cards
aren’t alright: Detecting counterfeit gift cards using en-
coding jitter. In Proceedings of the IEEE Symposium on
Security and Privacy (SP), pages 1063–1076, 2018.
[39] Ashlesh Sharma, Lakshmi Subramanian, and Dennis
Shasha. Secure branchless banking. In Proceedings of
ACM SOSP Workshop on Networked Systems for Devel-
oping Regions (NSDR), 2009.
[40] Marc Stevens.
Md5 and sha-1 cryptanalytic
https://github.com/cr-marcstevens/
toolbox.
hashclash.
[41] Marc Stevens. On collisions for md5. https://www.
win.tue.nl/hashclash/, 2007.
[42] Marc Stevens, Arjen Lenstra, and Benne De Weger.
Chosen-preﬁx collisions for md5 and colliding x. 509
certiﬁcates for different identities. In Proceedings of
Annual International Conference on the Theory and
Applications of Cryptographic Techniques, pages 1–22.
Springer, 2007.
[43] Marc Stevens, Arjen K Lenstra, and Benne De Weger.
Chosen-preﬁx collisions for md5 and applications. Inter-
national Journal of Applied Cryptography, 2:322–359,
2012.
[44] Marc Stevens, Alexander Sotirov, Jacob Appelbaum, Ar-
jen Lenstra, David Molnar, Dag Arne Osvik, and Benne
De Weger. Short chosen-preﬁx collisions for md5 and
the creation of a rogue ca certiﬁcate. In Proceedings
of Annual International Cryptology Conference, pages
55–69. Springer, 2009.
[45] Avinash Sudhodanan, Alessandro Armando, Roberto
Carbone, Luca Compagna, et al. Attack patterns for
black-box security testing of multi-party web applica-
tions. In NDSS, 2016.
[46] Fangqi Sun, Liang Xu, and Zhendong Su. Detecting
In
logic vulnerabilities in e-commerce applications.
NDSS, 2014.
[47] American Underworld. Report on carding, skimming.
https://www.youtube.com/watch?v=kbrU9Jwhww,
2012.
[48] Rui Wang, Shuo Chen, XiaoFeng Wang, and Shaz
Qadeer. How to shop for free online–security analy-
sis of cashier-as-a-service based web stores. In IEEE
Symposium on Security and Privacy, pages 465–480,
2011.
[49] Xiaoyun Wang and Hongbo Yu. How to break md5 and
other hash functions. In Annual international confer-
ence on the theory and applications of cryptographic
techniques, pages 19–35, 2005.
[50] WordPress.
Xunhupay
PPS.
https://wordpress.org/plugins/
xunhu-wechat-payment-for-woocommerce/,
2020.
[51] WordPress.
Xunhupay
PPS.
https://wordpress.org/plugins/
xunhu-alipay-payment-for-woocommerce/,
2020.
[52] Luyi Xing, Yangyi Chen, XiaoFeng Wang, and Shuo
Chen. Integuard: Toward automatic protection of third-
party web service integrations. In NDSS, 2013.
[53] Wenbo Yang, Juanru Li, Yuanyuan Zhang, and Dawu
Gu. Security analysis of third-party in-app payment in
mobile applications. Journal of Information Security
and Applications, 48:102358, 2019.
[54] Wenbo Yang, Yuanyuan Zhang, Juanru Li, Hui Liu, Qing
Wang, Yueheng Zhang, and Dawu Gu. Show me the
money! ﬁnding ﬂawed implementations of third-party
in-app payment in android apps. In NDSS, 2017.
USENIX Association
30th USENIX Security Symposium    3289