title:SyncAttack: Double-spending in Bitcoin Without Mining Power
author:Muhammad Saad and
Songqing Chen and
David Mohaisen
Session 6A: Consensus and Attacks
CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea.
SyncAack: Double-spending in Bitcoin Without Mining Power
Muhammad Saad
University of Central Florida
Orlando, USA
PI:EMAIL
Songqing Chen
George Mason University
Virginia, USA
PI:EMAIL
David Mohaisen
University of Central Florida
Orlando, USA
PI:EMAIL
ABSTRACT
The existing Bitcoin security research has mainly followed the se-
curity models in [22, 35], which stipulate that an adversary controls
some mining power in order to violate the blockchain consistency
property (i.e., through a double-spend attack). These models, how-
ever, largely overlooked the impact of the realistic network syn-
chronization, which can be manipulated given the permissionless
nature of the network. In this paper, we revisit the security of Bit-
coin blockchain by incorporating the network synchronization into
the security model and evaluating that in practice. Towards this
goal, we propose the ideal functionality for the Bitcoin network
synchronization and specify bounds on the network outdegree and
the block propagation delay in order to preserve the consistency
property. By contrasting the ideal functionality against measure-
ments, we nd deteriorating network synchronization reported by
Bitnodes and a notable churn rate with ⇡10% of the nodes arriving
and departing from the network daily.
Motivated by these ndings, we propose SyncAack, an attack
that allows an adversary to violate the Bitcoin blockchain consis-
tency property and double-spend without using any mining power.
Moreover, during our measurements, we discover weaknesses in
Bitcoin that can be exploited to reduce the cost of SyncAack,
deanonymize Bitcoin transactions, and reduce the eective network
hash rate. We also observe events that suggest malicious nodes are
exploiting those weaknesses in the network. Finally, we patch those
weaknesses to mitigate SyncAack and associated risks.
CCS CONCEPTS
• Security and Privacy ! Distributed systems security.
KEYWORDS
Distributed Systems, Nakamoto Consensus, Security and Privacy
ACM Reference Format:
Muhammad Saad, Songqing Chen, and David Mohaisen. 2021. SyncAack:
Double-spending in Bitcoin Without Mining Power. In Proceedings of the
2021 ACM SIGSAC Conference on Computer and Communications Security
(CCS ’21), November 15–19, 2021, Virtual Event, Republic of Korea. ACM, New
York, NY, USA, 18 pages. https://doi.org/10.1145/3460120.3484568
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for prot or commercial advantage and that copies bear this notice and the full citation
on the rst page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specic permission and/or a
fee. Request permissions from permissions@acm.org.
CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea
© 2021 Association for Computing Machinery.
ACM ISBN 978-1-4503-8454-4/21/11...$15.00
https://doi.org/10.1145/3460120.3484568
1668
1 INTRODUCTION
The double-spend attack is a classical example of violating the
Bitcoin blockchain consistency [22, 29, 34], whereby an adversary
who controls some mining power forks the public chain with a
longer private chain [24, 31]. The double-spend attack succeeds
with a high probability if the adversary controls 51% of the net-
work’s hash rate [19, 27]. Since acquiring 51% hash rate in Bitcoin
is prohibitively costly [3], various attack optimizations have been
proposed to reduce this requirement by exploiting the physical
network characteristics, including the biased distribution of the
mining nodes [6, 38] and the block propagation delay [19, 34].
Despite leveraging the physical network characteristics to the
adversary’s advantage, the optimized double-spend attacks [19]
still use the Nakamoto’s attack construction [31] as a blue print to
model a block race between the adversary and the honest miners.
Therefore, their threat models inherit two specications from [31]:
(1) the adversary controls at least some mining power, and (2) there
is a stable hash rate distribution during the attack (i.e., miners do
not join or leave the network [24]). The probability of a successful
double-spend attack varies exponentially if the hash rate distribu-
tion changes during the attack [36].
In contrast, in this paper we nd that an unstable hash rate
distribution can be used instead to the adversary’s advantage, irre-
spective of new miners joining the network. Moreover, variations in
the hash rate are exploited to exempt the adversary from using the
mining power altogether, while still double-spending successfully.
Our ndings are based on the two characteristics of the real-
world Bitcoin network that have not been thoroughly explored in
the past. First, we note that the blockchain forks, antecedent to a
double-spend attack, do not solely rely on the hash rate distribu-
tion among the honest miners. In fact, forks can also occur due to
weak network synchronization that characterizes the blockchain
view of each node in the network [35]. We further observe that
the network synchronization depends on the overlay topology of
reachable nodes (e.g., using public IP addresses; see §2 for details)
in the network and the block propagation delay among those nodes.
If the overlay topology partitions or the block propagation delay
increases, the blockchain can fork even in the absence of an adver-
sary [35]. Therefore, the network synchronization plays a key role
in preserving the blockchain consistency. However, despite its signif-
icance, the network synchronization has not been comprehensively
characterized in the Bitcoin security model.
Second, we note that prior security models [22, 35] did not fully
incorporate the permissionless nature of Bitcoin, which is intrinsic in
its design. The permissionless network allows nodes to leave or join
the network at any time, thereby causing the network churn. Our
study reveals that the network churn can be exploited to deteriorate
Session 6A: Consensus and Attacks
CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea.
the network synchronization and launch new forms of partitioning
attacks to disrupt the overlay topology. 1
Although partitioning attacks on the Bitcoin network have been
extensively studied [5, 6, 38, 42], they have not been examined in
the context of its permissionless nature and the associated churn. In
particular, the partitioning attacks that involve manipulating the
incoming and outgoing connections of a Bitcoin node assume (1)
the node persistently stays in the network for many days [42], and
(2) the adversary controls more than 100K IP addresses to poison
the IP tables of that node [26, 42]. In §4.2, we show that the ongoing
network churn might aect the rst assumption, and in §4.2.1, we
show that the second assumption can be costly.
Although the network churn makes the existing partitioning
attacks infeasible, it also provides new partitioning opportunities
to split the network. We show that by setting up 10 reachable nodes
and 102 unreachable nodes, an adversary can launch SyncAack to
split the network between the existing nodes and the newly arriving
nodes. By controlling the communication between the two parti-
tions, the adversary can deteriorate the network synchronization
and double-spend, without using any mining power.
Contributions and Roadmap. In short, our work examines the
network synchronization in the Bitcoin security model and ana-
lyzes its robustness in the permissionless settings. Additionally, by
measuring and characterizing the behavior of the real world Bit-
coin network, we propose SyncAack, an attack that allows an
adversary to deteriorate the network synchronization and launch
double-spend attacks without mining power. The highlights of our
contributions are as follows.
(1) We present the rst ideal functionality for the Bitcoin net-
work synchronization that characterizes the blockchain se-
curity in light of the overlay network topology and the block
propagation delay (§3).
(2) We conduct measurements to analyze the Bitcoin network
synchronization in the real world (§4). Our measurements
reveal a deteriorating network synchronization resulting in
an increasing number of forks.
(3) We characterize the permissionless nature of the Bitcoin net-
work by measuring the churn among the reachable nodes
(§4.2). Our measurements show a notable network churn rate
where 10% of the reachable nodes leave the network every
day, replaced by an almost equal number of new nodes.
(4) We incorporate the churn in the Bitcoin security model and
show that if mining nodes experience the churn, then an ad-
versary can launch SyncAack to partition them and double-
spend without using any mining power (§5).
(5) A byproduct of our study is the discovery of Bitcoin weak-
nesses that can be exploited to (1) deanonymize transactions,
and (2) reduce the eective hash rate of the mining nodes.
Our experiments on the testnet reveal that Bitcoin trans-
actions can be deanonymized with ⇡79.4% accuracy. In §6,
we propose SyncAack countermeasures and strengthen
Bitcoin Core to resist transaction deanonymization.2
Additionally, the paper includes background in §2, related work
in §7, conclusion in §8, and appendices in §A–§E.
2 BACKGROUND
In this section, we succinctly review the core concepts related to the
Bitcoin network synchronization. We start by outlining the Bitcoin
network anatomy and dierent node types.
Network Structure. The Bitcoin network consists of nodes con-
nected in a Peer-to-Peer (P2P) model. Those nodes exchange trans-
actions, order transactions in a block, and execute the Nakamoto
consensus to mine a valid block. Once a node mines a block, the
block is relayed to the rest of the network.
Full Nodes and SPV Nodes. Broadly speaking, there are two
types of nodes in the Bitcoin network, the full nodes and the “Sim-
plied Payment Verication” (SPV) nodes [30]. The full nodes main-
tain a complete Bitcoin blockchain ledger while the SPV nodes only
maintain the block headers and request Merkle proofs from full
nodes to verify transactions.
Reachable and Unreachable Full Nodes. Full nodes can be fur-
ther categorized into reachable and unreachable nodes. The reach-
able nodes establish outgoing connections to other reachable nodes,
and accept incoming connections from both reachable and unreach-
able nodes. On the other hand, unreachable nodes (often behind
NATs [20]) only establish outgoing connections to the reachable
nodes and do not accept incoming connections. By default, reach-
able nodes establish 10 outgoing connections and accept up to 115
incoming connections, while unreachable nodes only establish 10
outgoing connections. Since unreachable nodes drop incoming con-
nections, no two unreachable nodes can directly connect to each
other. Information exchange (i.e., blocks) between two unreachable
nodes is enabled through the reachable nodes.
Mining and Non-mining Nodes. In the last few years, the min-
ing diculty in Bitcoin has signicantly increased, limiting the
mining capability to a few mining pools that use specialized hard-
ware (i.e., ASIC mining rigs [41]) to mine blocks. After mining a
block, the mining pools use either reachable or unreachable nodes
to relay it in the P2P network. The nodes used by the mining pools
for block relaying are also called the mining nodes [37] or the min-
ing pool gateways [20]. Prior studies show that at any time, there
are ⇡6K-10K [6, 38] reachable nodes in the Bitcoin network, with
⇡100–350 among which being the mining nodes [20, 37].
As noted in [20, 37], another key dierence between the mining
and non-mining nodes is that the mining nodes have a long network
lifetime and do not experience signicant churn. However, in 2021,
changes in the Bitcoin price have also caused behavior changes in
the mining pools. For instance, new mining pools including ArkPool,
SBI Crypto, and Foundry USA joined the network between 2020 and
2021, while others including PHash.io, NovaBlock, and BytePool
left the network during that time period [17]3. Given the increase
in the number of mining pools joining and leaving the Bitcoin
network, it is fair to assume that compared to the previous years,
in 2021, churn among the mining nodes has increased [17, 20, 37].
1Our characterization of the permissionless network acknowledges the possibility of a
change in the mining power distribution due to the arrival or departure of miners.
2Responsible Disclosure. We have notied the community about the discovered
weaknesses and shared our patch code. The experiments related to SyncAack were
only conducted on our own Bitcoin nodes. We did not manipulate connections of other
reachable nodes in the Bitcoin network.
3A complete list of all the notable mining pools that joined or left the network in the
last few months can be found in [17].
1669
Session 6A: Consensus and Attacks
CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea.
min(#A ). In each round, the trusted party Fsyn observes the following states.
Ideal Functionality Fsyn
Input: Reachable nodes #A , with each =8 2 #A establishing $8 outgoing connections and accepting  8 incoming connections. The average
network outdegree deg+(#A ) is greater than the minimum network outdegree deg+
min(#A ) (see §A) to form a connected overlay topology [40].