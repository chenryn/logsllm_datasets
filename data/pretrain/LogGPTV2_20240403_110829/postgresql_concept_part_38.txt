WORK,TRANSACTION Optionalkeywords. Theyhavenoeffect.
Outputs
COMMIT Messagereturnedifthetransactionissuccessfullycommitted.
NOTICE:COMMIT:notransactioninprogress Ifthereisnotransactioninprogress.
Description
ENDisaPostgresextension,andisasynonymfortheSQL92-compatibleCOMMIT.
Notes
ThekeywordsWORKandTRANSACTIONarenoiseandcanbeomitted.
UseROLLBACK toabortatransaction.
Usage
Tomakeallchangespermanent:
END WORK;
Compatibility
SQL92
ENDisaPostgreSQLextensionwhichprovidesfunctionalityequivalenttoCOMMIT.
D.51 EXPLAIN
Name
EXPLAIN—Showsstatementexecutionplan
EXPLAIN[VERBOSE]query
D.51. EXPLAIN 361
Inputs
VERBOSE Flagtoshowdetailedqueryplan.
query Anyquery.
Outputs
NOTICE:QUERYPLAN:plan ExplicitqueryplanfromthePostgresbackend.
EXPLAIN Flagsentafterqueryplanisshown.
Description
This command displays the execution plan that the Postgres planner generatesfor the supplied
query. The execution plan shows how the table(s) referencedby the querywill be scanned—by
plainsequentialscan,indexscan,etc.—andifmultipletablesarereferenced,whatjoinalgorithms
willbeusedtobringtogethertherequiredtuplesfromeachinputtable.
Themostcriticalpartofthedisplayistheestimatedqueryexecutioncost,whichistheplanner’s
guessathowlongitwilltaketorunthequery(measuredinunitsofdiskpagefetches). Actually
twonumbersareshown: thestart-uptimebeforethefirsttuplecanbereturned,andthetotaltime
toreturnallthetuples. Formostqueriesthetotaltimeiswhatmatters,butincontextssuchasan
EXISTSsub-querytheplannerwillchoosethesmalleststart-uptimeinsteadofthesmallesttotal
time(sincetheexecutorwillstopaftergettingonetuple,anyway). Also,ifyoulimitthenumber
oftuplestoreturnwithaLIMIT clause,theplannermakesanappropriateinterpolationbetween
theendpointcoststoestimatewhichplanisreallythecheapest.
TheVERBOSE option emitsthefullinternalrepresentationof theplantree, ratherthanjust
a summary (and sends it to the postmaster log file, too). Usually this option is only useful for
debuggingPostgres.
Notes
Thereisonlysparsedocumentationontheoptimizer’suseofcostinformationinPostgres. General
information on costestimationfor queryoptimization canbefound in databasetextbooks. Refer
to the Programmer’s Guidein the chapterson indexesandthe geneticqueryoptimizerfor more
information.
Usage
Toshowaqueryplanforasimplequeryonatablewithasingleint4columnand128rows:
EXPLAIN SELECT * FROM foo;
NOTICE: QUERY PLAN:
362 APPENDIXD. REFERENCEMANUAL
Seq Scan on foo (cost=0.00..2.28 rows=128 width=4)
EXPLAIN
For the same table with an index to support an equijoin condition on the query, EXPLAIN will
showadifferentplan:
EXPLAIN SELECT * FROM foo WHERE i = 4;
NOTICE: QUERY PLAN:
Index Scan using fi on foo (cost=0.00..0.42 rows=1 width=4)
EXPLAIN
And finally, for the same table with an index to support an equijoin condition on the query, EX-
PLAINwillshowthefollowingforaqueryusinganaggregatefunction:
EXPLAIN SELECT sum(i) FROM foo WHERE i = 4;
NOTICE: QUERY PLAN:
Aggregate (cost=0.42..0.42 rows=1 width=4) -
> Index Scan using fi on foo (cost=0.00..0.42 rows=1 width=4)
Note that the specificnumbers shown, andeventhe selectedquerystrategy, may varybetween
Postgresreleasesduetoplannerimprovements.
Compatibility
SQL92
ThereisnoEXPLAINstatementdefinedinSQL92.
D.52 FETCH
Name
FETCH—Getsrowsusingacursor
FETCH[direction][count]{IN|FROM}cursor
FETCH[FORWARD|BACKWARD|RELATIVE][{[#|ALL|NEXT|PRIOR]}]{IN
|FROM}cursor
Inputs
direction selectordefinesthefetchdirection. Itcanbeoneofthefollowing:
FORWARD fetchnextrow(s). Thisisthedefaultifselectorisomitted.
BACKWARD fetchpreviousrow(s).
D.52. FETCH 363
RELATIVE NoisewordforSQL92compatibility.
count countdetermineshowmanyrowstofetch. Itcanbeoneofthefollowing:
# Asignedintegerthatspecifieshowmanyrowstofetch. Notethatanegativeintegeris
equivalenttochangingthesenseofFORWARDandBACKWARD.
ALL Retrieveallremainingrows.
NEXT Equivalenttospecifyingacountof 1.
PRIOR Equivalenttospecifyingacountof -1.
cursor Anopencursor’sname.
Outputs
FETCHreturnstheresultsofthequerydefinedbythespecifiedcursor. Thefollowingmessages
willbereturnedifthequeryfails:
NOTICE:PerformPortalFetch:portal"cursor"notfound Ifcursorisnotpreviouslydeclared.
Thecursormustbedeclaredwithinatransactionblock.
NOTICE:FETCH/ABSOLUTEnotsupported, usingRELATIVE Postgresdoesnotsupport
absolutepositioningofcursors.
ERROR: FETCH/RELATIVEatcurrentpositionisnotsupported SQL92allowsonetorepet-
itively retrieve the cursor at its "current position" using the syntax FETCH RELATIVE 0
FROMcursor.
Postgresdoesnotcurrentlysupportthisnotion;infactthevaluezeroisreservedtoindicate
that all rows should be retrieved and is equivalent to specifying the ALL keyword. If
the RELATIVE keyword has been used, Postgres assumes that the user intended SQL92
behaviorandreturnsthiserrormessage.
Description
FETCHallowsausertoretrieverowsusingacursor. Thenumberofrowsretrievedisspecified
by#. Ifthenumberofrowsremaininginthecursorislessthan#,thenonlythoseavailableare
fetched. Substituting thekeywordALLinplaceof anumberwillcauseallremainingrowsin the
cursortoberetrieved. InstancesmaybefetchedinbothFORWARDandBACKWARDdirections.
ThedefaultdirectionisFORWARD.Tip: Negativenumbersareallowedtobespecifiedfortherow
count. AnegativenumberisequivalenttoreversingthesenseoftheFORWARDandBACKWARD
keywords. Forexample,FORWARD-1isthesameasBACKWARD1.
364 APPENDIXD. REFERENCEMANUAL
Notes
Note that the FORWARD and BACKWARD keywords are Postgres extensions. The SQL92
syntaxisalsosupported,specifiedin thesecondform of thecommand. Seebelow for detailson
compatibilityissues.
UpdatingdatainacursorisnotsupportedbyPostgres,becausemappingcursorupdatesback
to base tables is not generally possible, as is also the case with VIEW updates. Consequently,
usersmustissueexplicitUPDATEcommandstoreplacedata.
Cursorsmayonlybeusedinsideoftransactionsbecausethedatathattheystorespansmultiple
userqueries.
Use MOVE to change cursor position. DECLARE will define a cursor. Refer to BEGIN,
COMMIT,andROLLBACK forfurtherinformationabouttransactions.
Usage
Thefollowingexamplestraverseatableusingacursor:
-- Set up and use a cursor:
BEGIN WORK;
DECLARE liahona CURSOR FOR
SELECT * FROM films;
-- Fetch first 5 rows in the cursor liahona:
FETCH FORWARD 5 IN liahona;
code | title | did | date_prod | kind | len
-------+-------------------------+-----+------------+----------+-------
BL101 | The Third Man | 101 | 1949-12-23 | Drama | 01:44
BL102 | The African Queen | 101 | 1951-08-11 | Romantic | 01:43
JL201 | Une Femme est une Femme | 102 | 1961-03-12 | Romantic | 01:25
P_301 | Vertigo | 103 | 1958-11-14 | Action | 02:08
P_302 | Becket | 103 | 1964-02-03 | Drama | 02:28
-- Fetch previous row:
FETCH BACKWARD 1 IN liahona;
code | title | did | date_prod | kind | len
-------+---------+-----+------------+--------+-------
P_301 | Vertigo | 103 | 1958-11-14 | Action | 02:08
-- close the cursor and commit work:
CLOSE liahona;
COMMIT WORK;
D.53. GRANT 365
Compatibility
SQL92
Note: Thenon-embeddeduseofcursorsisaPostgresextension. Thesyntaxandusageofcursors
isbeingcomparedagainsttheembeddedformofcursorsdefinedinSQL92.
SQL92allowsabsolutepositioningofthecursorforFETCH,andallowsplacingtheresultsinto
explicitvariables:
FETCHABSOLUTE#
FROMcursor
INTO:variable[,...]
ABSOLUTE The cursor should be positioned to the specified absolute row number. All row
numbersinPostgresarerelativenumberssothiscapabilityisnotsupported.
:variable Targethostvariable(s).
D.53 GRANT
Name
GRANT—Grantsaccessprivilegetoauser,agrouporallusers
GRANTprivilege[,...] ONobject[,...] TO{PUBLIC|GROUPgroup|username}
Inputs
privilege Thepossibleprivilegesare:
SELECT Accessallofthecolumnsofaspecifictable/view.
INSERT Insertdataintoallcolumnsofaspecifictable.
UPDATE Updateallcolumnsofaspecifictable.
DELETE Deleterowsfromaspecifictable.
RULE Definerulesonthetable/view(SeeCREATERULEstatement).
ALL Grantallprivileges.
object Thenameofanobjecttowhichtograntaccess. Thepossibleobjectsare:
• table
• view
• sequence
PUBLIC Ashortformrepresentingallusers.
366 APPENDIXD. REFERENCEMANUAL
GROUPgroup Agrouptowhomtograntprivileges.
username Thenameofausertowhomtograntprivileges. PUBLICisashortformrepresenting
allusers.
Outputs
CHANGE Messagereturnedifsuccessful.
ERROR: ChangeAcl:class"object"notfound Messagereturnedifthespecifiedobjectisnot
availableorifitisimpossibletogiveprivilegestothespecifiedgrouporusers.
Description
GRANTallowsthecreatorofanobjecttogivespecificpermissionstoallusers(PUBLIC)ortoa
certainuserorgroup. Usersotherthanthecreatordon’thaveanyaccesspermissionunlessthe
creatorGRANTspermissions,aftertheobjectiscreated.
Once a user has a privilege on an object, he is enabled to exercise that privilege. There is
no need to GRANT privileges to the creator of an object, the creator automatically holds ALL
privileges,andcanalsodroptheobject.
Notes
Currently, to grant privilegesin Postgres to only a few columns, you must create a view having
desiredcolumnsandthengrantprivilegestothatview.
Usepsql \zforfurtherinformationaboutpermissionsonexistingobjects:
Database = lusitania
+------------------+---------------------------------------------+
| Relation | Grant/Revoke Permissions |
+------------------+---------------------------------------------+
| mytable | {"=rw","miriam=arwR","group todos=rw"} |
+------------------+---------------------------------------------+
Legend:
uname=arwR -- privileges granted to a user
group gname=arwR -- privileges granted to a GROUP
=arwR -- privileges granted to PUBLIC
r -- SELECT
w -- UPDATE/DELETE
a -- INSERT
R -- RULE
arwR -- ALL
D.53. GRANT 367
RefertoREVOKEstatementstorevokeaccessprivileges.
Usage
Grantinsertprivilegetoallusersontablefilms:
GRANT INSERT ON films TO PUBLIC;
Grantallprivilegestousermanuelonviewkinds:
GRANT ALL ON kinds TO manuel;
Compatibility
SQL92
TheSQL92syntaxforGRANTallowssettingprivilegesforindividualcolumnswithinatable,and
allowssettingaprivilegetograntthesameprivilegestoothers:
GRANT privilege [, ...]
ON object [ ( column [, ...] ) ] [, ...]
TO { PUBLIC | username [, ...] }
[ WITH GRANT OPTION ]
FieldsarecompatiblewiththoseinthePostgresimplementation,withthefollowingadditions:
privilege SQL92permitsadditionalprivilegestobespecified:
SELECT
REFERENCES Allowedtoreferencesomeorallofthecolumnsofaspecifictable/viewin
integrityconstraints.
USAGE Allowedtouseadomain,characterset,collationortranslation. Ifanobjectspecifies
anythingotherthanatable/view,privilegemustspecifyonlyUSAGE.
object
[TABLEtable] SQL92allowstheadditionalnon-functionalkeywordTABLE.
CHARACTERSET Allowedtousethespecifiedcharacterset.
COLLATION Allowedtousethespecifiedcollationsequence.
TRANSLATION Allowedtousethespecifiedcharactersettranslation.
DOMAIN Allowedtousethespecifieddomain.
WITHGRANTOPTION Allowedtograntthesameprivilegetoothers.
368 APPENDIXD. REFERENCEMANUAL
D.54 initdb
Name
initdb—CreateanewPostgresdatabaseinstallation
initdb
[–pgdata|-Ddbdir]
[–sysid|-isysid]
[–pwprompt|-W]
[–encoding|-Eencoding]
[–pglib|-Llibdir]
[–noclean|-n]
[–debug|-d]
[–template|-t]
Inputs
–pgdata=dbdir,-Ddbdir,PGDATA Thisoptionspecifieswhereinthefilesystemthedatabase
shouldbestored. Thisistheonlyinformationrequiredbyinitdb,butyoucanavoiditbyset-
tingthePGDATAenvironmentvariable,whichcanbeconvenientsincethedatabaseserver
(postmaster)canfindthedatabasedirectorylaterbythesamevariable.
–sysid=sysid,-isysid Selects the system id of the database superuser. This defaults to the
effectiveuseridof theuserrunninginitdb. It isreallynot important whatthesuperuser’s
sysidis,butonemightchoosetostartthenumberingatsomenumberlike0or1.
–pwprompt, -W Makesinitdbpromptforapasswordofthedatabasesuperuser. Ifyoudon’tplan
onusingpasswordauthentication,thisisnotimportant. Otherwiseyouwon’tbeabletouse
passwordauthenticationuntilyouhaveapasswordsetup.
–encoding=encoding,-Eencoding Selects the multibyte encoding of the template database.
Thiswillalsobe the defaultencodingof anydatabaseyou createlater, unlessyou override
itthere. Tousethemultibyteencodingfeature,youmustspecifysoatbuildtime,atwhich
timeyoualsoselectthedefaultforthisoption.
Other,lesscommonlyused,parametersarealsoavailable:
–pglib=libdir,-llibdir initdb needs a few input files to initialize the database. This option
tells where to find them. You normally don’t have to worry about this since initdb knows
about the most common installation layouts and will find the files itself. You will be told
if you need to specify their location explicitly. If that happens, one of the files is called
global1.bki.sourceandistraditionallyinstalledalongwiththeothersinthelibrarydirectory
(e.g.,/usr/local/pgsql/lib).
D.55. INITLOCATION 369
–template,-t Replace the template1 database in an existing database system, and don’t touch
anythingelse. Thisisusefulwhenyouneedtoupgradeyourtemplate1databaseusinginitdb
fromanewerreleaseofPostgres,orwhenyourtemplate1databasehasbecomecorruptedby
somesystemproblem. Normallythecontentsoftemplate1remainconstantthroughoutthe
lifeofthedatabasesystem. Youcan’tdestroyanythingbyrunninginitdbwiththe–template
option.
–noclean,-n By default, when initdb determines that an error prevented it from completely
creating the databasesystem, it removes any files it may havecreated before determining
thatitcan’tfinishthejob. Thisoptioninhibitsanytidying-upandisthususefulfordebugging.
–debug,-d Printdebuggingoutputfromthebootstrapbackendandafewothermessagesoflesser
interestfor thegeneralpublic. Thebootstrap backendistheprograminitdbusesto create
thecatalogtables. Thisoptiongeneratesatremendousamountofoutput.
Outputs
initdbwillcreatefilesinthespecifieddataareawhicharethesystemtablesandframework fora
completeinstallation.
Description
initdbcreatesanewPostgresdatabasesystem. Adatabasesystemisacollectionofdatabasesthat
arealladministeredbythesameUnixuserandmanagedbyasinglepostmaster.
Creatingadatabasesystemconsistsofcreatingthedirectoriesinwhichthedatabasedatawill
live,generatingthesharedcatalogtables(tablesthatdon’tbelongtoanyparticulardatabase),and
creating the template1 database. When you create a new database, everythingin the template1
databaseiscopied. Itcontainscatalogtablesfilledinforthingslikethebuilt-intypes.
You must not execute initdb as root. This is because you cannot run the databaseserver as
root either, but the serverneedsto have accessto the filesinitdb creates. Furthermore, during
the initialization phase, when there are no users and no access controls installed, Postgres will
only connect with the name of the currentUnix user, so you must log in underthe account that