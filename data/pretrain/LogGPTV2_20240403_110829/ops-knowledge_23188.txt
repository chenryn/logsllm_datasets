User: I have a fortran file with a lot of useful subroutines, and I want to make a Python interface to it using f2py.
The problem arises because some fortran subroutines call the FFT subroutine from the NAG library (named c06ebf).  When imported into Python, it produces the 'undefined symbol: co6ebf' warning.
Is there other way to perform FFT within my Fortran subroutine and to be able to create Python interface from it using f2py?
Assistant: This problem is solved in a following way:

All instances where commercial FFT library is called are replaced by calls to free FFT library (in this case FFTW3). Of course ' include "fftw3.f" ' is placed on top of the fortran subroutines where necessary. 
Extension module is created using f2py. First line creates the signature file, and in second line the extension module is compiled. Note that we linked the external library in the process - this was not done previously, which caused stated problems.

f2py -m splib -h splib.fpy splib.f
  f2py -c splib splib.f -lfftw3