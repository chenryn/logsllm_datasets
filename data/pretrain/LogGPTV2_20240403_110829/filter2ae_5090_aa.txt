**声明：本文仅供技术交流，请自觉遵守网络安全相关法律法规，切勿利用文中提及的技术从事非法活动。因使用本文内容所产生的一切不良后果与作者无关。**

**前言**  
上周，我有幸参加了某地级市为期七天的网络攻防演练对抗赛。共有14支攻击队伍参与了此次竞赛。比赛初期主要集中在弱口令和应用层漏洞的攻击上，期间有队伍申请使用高危漏洞进行攻击。随后，各队开始转向更高级别的漏洞利用、内网渗透等手段。第四天起，部分团队甚至采用了0day/Nday漏洞及社会工程学钓鱼等方法。从第五天凌晨开始，所有目标变为公共目标，进入混战模式。第七天下午6点，赛事正式结束。最终评分结果显示，第三名得分为五万多分，第二名为六万多分，第一名则达到了七万多分。

作为一名首次参加此类活动的新手，在感叹竞争激烈的同时，我也在思考如何更好地掌握红队渗透技巧。他们为何能如此迅速地完成任务？怎样才能实现高效的内网突破乃至单兵APT攻击？这些问题促使我对自己的技能进行了深入反思，并尝试寻找通往红队之路的有效途径。

通过这次经历，确实收获颇丰。因此撰写此文旨在回顾整个过程，总结学习成果，分析自身不足并提出改进措施。同时，也希望通过分享激发更多同行对于红队战术的探讨，共同提升我们在攻防演练中的表现。

**一、针对某一特定目标的复盘分析**  
由于涉及敏感信息，本文中将不会展示具体截图或完整数据，所有相关信息均已做适当处理。现以得分最高且最具挑战性的案例为例，详细介绍其攻击流程：

1. **Web端初步入侵**
   - 目标为一个基于ASP.NET框架构建的网站。
   - 经过一番探索后，发现了一个未授权访问漏洞（可能属于0day范畴），允许非授权用户查看、添加、编辑乃至删除某些内容。
   - 利用该漏洞获取到了后台管理员账号密码，并成功登录系统。
   - 发现上传功能存在安全缺陷，通过修改文件扩展名绕过了防护机制，最终上传了恶意脚本并获得了WebShell控制权。

2. **尝试反弹Shell失败**
   - 获得了IIS服务器权限后，试图通过Metasploit/CobaltStrike等工具建立持久性连接。
   - 但因目标主机安装了360安全软件，导致自定义开发的免杀木马未能成功上线。

3. **进一步信息收集与提权尝试**
   - 通过对其他相关系统的侦察，再次利用相同手法取得了另一台机器的WebShell。
   - 使用开源插件尝试提权未果；然而意外发现了数据库配置信息泄露，进而直接连接至外部云服务器上的SQL Server实例。
   - 利用xp_cmdshell存储过程实现了对数据库服务器的完全掌控，并尝试将其System级别权限转移到CobaltStrike平台，但由于网络限制未能如愿。

4. **全面接管数据库云服务器**
   - 鉴于无法通过常规手段远程操控目标主机，转而采用创建新管理员账户并通过RDP协议直接登录的方法。
   - 最终借助Procdump+mimikatz组合破解出了Administrator密码，从而彻底掌握了该云服务器的所有权。

5. **内部网络横向移动探索**
   - 接下来尝试向内网深处推进，但由于防火墙设置等因素影响，只能采取Web应用程序层面的渗透策略。
   - 尽管发现了一些潜在入口点，但均未找到与当前比赛直接相关的资产。

6. **意外发现IoT设备关联**
   - 在后续的信息挖掘过程中，意外地发现了与中央认证系统相连接的IoT设备踪迹。
   - 这表明被攻陷的数据库不仅服务于单一业务线，而是作为多个重要系统的共享资源库存在。

7. **疑似境外威胁情报上报**
   - 在复盘阶段，注意到曾有一段时期内目标主机与位于美国境内的IP地址保持通信联系。
   - 立即对该异常情况进行记录并向相关部门报告，强调维护国家网络安全的重要性。

**二、关键知识点归纳**

- **未授权访问漏洞**
  指在缺乏有效身份验证的情况下，攻击者可以直接访问受保护资源的现象。常见于ASP/ASPX类型站点，当开发者疏忽忘记包含必要的鉴权逻辑时尤为容易出现此类问题。

- **SQL Server xp_cmdshell提权技术**
  是一种允许数据库管理员执行操作系统命令的功能。尽管默认情况下已禁用，但对于具备足够权限的用户来说仍可通过简单配置重新启用此功能，从而实现权限提升目的。

以上就是本次HW行动的部分经验分享和个人感悟。希望我的这些经历能够给正在努力成长中的各位带来一些启示和帮助。