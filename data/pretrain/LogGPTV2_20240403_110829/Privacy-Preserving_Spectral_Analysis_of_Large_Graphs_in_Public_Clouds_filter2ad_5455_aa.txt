title:Privacy-Preserving Spectral Analysis of Large Graphs in Public Clouds
author:Sagar Sharma and
James Powers and
Keke Chen
This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TKDE.2018.2847662, IEEE
Transactions on Knowledge and Data Engineering
1
PrivateGraph: Privacy-Preserving Spectral
Analysis of Encrypted Graphs in the Cloud
Sagar Sharma, James Powers, and Keke Chen
Data Intensive Analysis and Computing (DIAC) Lab
Ohio Center of Excellence in Knowledge-Enabled Computing
Department of Computer Science and Engineering
Wright State University, Dayton, OH 45435
{sharma.74,powers.4,keke.chen}@wright.edu
Abstract—Big graphs, such as user interactions in social networks and customer rating matrices in collaborative ﬁlters, possess great
values for both businesses and research. They are not only big but often keep evolving, which requires a large amount of computing
resources to maintain. With the wide deployment of public cloud resources, owners of big graphs may want to use cloud resources to
obtain storage and computation scalability. However, privacy and ownership of the graphs in the cloud has become a major concern. In
this paper, we study privacy-preserving algorithms for one of the important graph analysis techniques - graph spectral analysis for
outsourced graph in the cloud. The core operation: eigendecomposition of large matrix is also important to many data mining
algorithms. We consider a cloud-centric framework with three collaborative parties: data contributors, data owner, and cloud provider.
Graphs are represented as matrices such as adjacency matrix and Laplacian matrix, the elements of which are encrypted and
submitted by distributed contributors. The data owner then interacts with the cloud-side programs to conduct spectral analysis, while
protecting data privacy from the honest-but-curious cloud provider. For a N × N graph matrix, we aim to design algorithms with the
cloud handling expensive storage and computation in O(N 2) complexity, while data owner and data contributors’ algorithms take only
O(N ). To achieve this goal, we develop the privacy-preserving versions of the two approximate eigendecomposition algorithms: the
Lanczos algorithm and the Nystr¨om algorithm, considering two encryption methods: additive homomorphic encryption (AHE) methods
and somewhat homomorphic encryption (SHE) methods. Both dense and sparse matrices are studied, while sparse matrices also
involve a differentially private data submission protocol to allow the trade-off between data sparsity and privacy. Experimental results
show that the Nystr¨o algorithm with sparse encoding can dramatically reduce data owners’ costs; SHE-based methods have lower
computational time while AHE-based methods have lower communication/storage costs.
Index Terms—Graph Spectral Analysis, Outsourced Computation, Homomorphic Encryption, Differential Privacy, Cloud Computing
1 INTRODUCTION
With the rise of social networks, mobile applications, and
sensors, there has been a rapid increase of data generation
in areas of commerce, science, and health industries. Among
them graph data has become an important resource [1].
Due to the sheer and continuously growing scale, data
owners may want to adopt the popularly available cloud
resources to achieve both storage and computational scala-
bility. However, there are privacy concerns on collecting and
mining graph data with the cloud. (1) These datasets are
often sensitive, and thus users are reluctant to share them
due to the lack of trust in data owners’ ability to protect
the data in the cloud. (2) On the other side, data owners
also have great interests in preserving the ownership of
these proprietary data, as data have become the determining
factor in business operation or scientiﬁc research. The recent
studies [29] and incidents [9] have shown that sensitive data
in the cloud are subject to information theft, eavesdropping,
and insider attacks. Thus, it is urgent to ﬁnd means to
address both users’ and data owners’ concerns in cloud-
centric data mining.
Protecting data privacy in the cloud is not straight-
forward, as encryption alone can limit cloud’s usage in
computation. The traditional method is to store encrypted
data (e.g., using Advanced Encryption Standard (AES))
in the cloud; to protect the privacy in computation, data
owners need to download, decrypt, and process data locally.
However, when the size of data increases to a certain scale,
data owners cannot afford doing this anymore for non-linear
complexity (e.g., O(N 2) for N -node graphs) algorithms.
Another approach is to develop novel encryption meth-
ods to allow the cloud to work with encrypted data. Re-
searchers have been studying the fully homomorphic en-
cryption (FHE) [16] and garbled circuits (GC) [35] based
methods. Theoretically, it is possible to construct any data
mining algorithms to work with FHE or GC. However,
implementing a FHE-based method for complex algorithms
will require many levels of denoising/re-encryption to
maintain the utility of encrypted data [7], which requires
high computational costs and larger ciphertexts. In contrast,
the GC-based methods require huge communication costs
between data owners and the cloud [26] and thus are
impractical for outsourcing large datasets.
A practical design is to let the cloud process the O(N 2)
(or higher complexity) operations in parallel, while the data
owner contributes constant- or O(N )-cost computation to
assist the cloud. To our knowledge, there is no general
framework that achieves this practical cloud-client work
allocation while providing strong security notions (e.g.,
1041-4347 (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.
✦
This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TKDE.2018.2847662, IEEE
Transactions on Knowledge and Data Engineering
semantic security) for complex data mining algorithms such
as graph analysis.
Research Scope and Contributions. In this paper, we
study a cloud-centric graph spectral analysis framework
that protects privacy from curious cloud providers. Graph
spectral analysis has many applications such as network
partitioning [25], spectral clustering [15], and web ranking
[4]. The basic operation - eigendecomposition of big matri-
ces has even broader applications such as dimensionality
reduction [19] and kernel-based learning methods [30].
The cloud-centric framework consists of three major
parties: the cloud, the data contributors, and the data owner
(or data curator), who collaboratively ﬁnish the mining
task. Under certain incentives, the data contributors will be
willing to contribute their sensitive data to the data owner
and trust the data owner to properly protect their data
privacy. On the other hand, the data owner wants to use
the public cloud resources to manage and mine the ever-
increasing user data, but does not trust that cloud providers
will properly ensure data privacy. As we consider only the
privacy issues, we exclude the case that malicious cloud
providers will actively tamper the data or do not conduct
the operations asked by the data owner, which are being
addressed by the orthogonal line of research on data and
computation integrity. Instead, we can assume that cloud
providers will follow protocols to honestly conduct the
computations they are asked for. Therefore, the assumption
“honest-but-curious” cloud providers will be appropriate
for our study.
The proposed framework aims to achieve the practical
work partitioning between the cloud and the client sides
while preserving the privacy of data and analysis result. The
cloud will host the big encrypted graph matrix of N × N
dimensions (dense or sparse). In mining data, the cloud will
conduct the expensive (e.g., O(N 2)) operations with parallel
algorithms, the data owner (and data contributors who
may also participate) will take tasks of O(N ) complexity,
which justiﬁes the use of cloud for scalable and economical
processing.
We consider two approximate algorithms for spectral
analysis - the Lanczos method [10] and the Nystr¨om method
[15]. Both can be possibly re-designed and cast to the
cloud-centric framework to achieve the practical work par-
titioning. The core of the Lanczos method: matrix-vector
multiplication (an O(N 2) operation), and the core of the
Nystr¨om method: matrix-matrix multiplication (an O(mN 2)
operation) should be done by the cloud. Both involve only
one level of multiplication, i.e., any element of matrix and
vector involves in only one multiplication, and multiple
levels of additions. We study the application of two types of
homomorphic encryption methods: additive homomorphic
encryption (AHE) and somewhat homomorphic encryption
(SHE), which satisfy this special requirement and are more
efﬁcient than the earlier mentioned FHE and GC.
Our research addresses several challenges in applying
the SHE and AHE methods under the cloud-centric frame-
work. (1) SHE allows one level of homomorphic multi-
plication and thus it is straightforward to implement the
cloud-side operations. However, their costs are not fully
understood yet. (2) AHE methods have smaller ciphertext
size, which makes storage and communication efﬁcient, but
2
they maintain only handicapped homomorphic properties
- one of the two operands have to be plaintext. Thus, the
challenge to apply AHE is twofold: to protect the privacy
of the exposed operands, while make sure that data owners’
costs stay in O(N ). Speciﬁcally, our research has four unique
contributions.
(1) Two data masking algorithms for protecting the ex-
posed operands in matrix-vector and matrix-matrix multi-
plications, respectively, for AHE-encrypted data, while also
maintaining the client-side cost to stay in O(N ). The ﬁrst
data masking algorithm is based on the security guarantee
provided by the Learning-with-Error (LWE) problem [28],
designed for the matrix-vector multiplication protocol. The
second algorithm is based on matrix perturbation that is
resilient to ciphter-text only attack, which is sufﬁcient for
one-time use of perturbation matrix.
(2) We designed the AHE-based and SHE-based Lanczos
algorithms and Nystr¨om algorithms that use the two data
masking algorithms, respectively. The Nystr¨om algorithms
are speciﬁcally designed to beneﬁt from sparse graphs. Both
achieve the practical work allocation between the cloud and
the client.
(3) We identify the privacy risk of submitting sparse
graph matrices and design an efﬁcient local differentially
private method for inserting fake edges that have indistin-
guishable encrypted values E(0) (an important beneﬁt by
probabilistic public-key encryption) and do not affect the
accuracy of analysis.
(4) A thorough experimental evaluation has been con-
ducted on AHE- and SHE-based Lanczos and Nystr¨o algo-
rithms. Two most popular encryption schemes are used in
the evaluation: the Paillier method [27] for AHE and the
Ring-LWE (RLWE) method [7] for SHE. Our results show
that the RLWE-based methods have lower computational
costs for data owners, while the Paillier-based methods have
lower communication costs.
The remaining part of this paper is organized as follows.
In Section 2 we establish the background knowledge about
spectral analysis of large graph matrices and introduce
different AHE and SHE schemes. In Section 3 we give a
detailed description of our framework and the AHE- and
SHE-based algorithms for privacy-preserving outsourced
graph spectral analysis, including the analyses on privacy
guarantee and costs. We also present the differentially pri-
vate solution for sparse graph data submission. Section 4
presents the comprehensive cost evaluation on three social
graph datasets. Section 5 gives some related work.
2 PRELIMINARY
This section will setup the notations and give the back-
ground knowledge about the eigendecomposition problem
for large matrices, the homomorphic encryption schemes we
will use, the integer conversion method, and differential
privacy that will be used for privacy-preserving sparse
matrix submission. For clear presentation, we will use Greek
letters for scalars, lower-case letters for vectors, and capital
letters for matrices, submatrices or sets.
2.1 Spectral Analysis
The core operation of graph spectral analysis is eigende-
composition of graph matrix, which yields eigenvalues and
1041-4347 (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.
This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TKDE.2018.2847662, IEEE
Transactions on Knowledge and Data Engineering
corresponding eigenvectors. Eigenvalues and eigenvectors
provide valuable information about the structure of matrices
and have been used in many data mining algorithms such
as social community detection [25], spectral clustering [15],
web ranking [4], dimensionality reduction [19], and kernel-
based methods [30]. Speciﬁcally, for a symmetric matrix A of
size N × N , we want to ﬁnd the decomposition A = U ΛU T ,
where the matrix U consists of the eigenvectors and Λ is a
diagonal matrix with eigenvalues on the diagonal.
A complete eigendecomposition of a N × N matrix
possesses a remarkable time complexity of O(N 3). Hence,
approximate eigendecomposition algorithms are often used
for big N , including the power-iteration Lanczos [10] and
matrix sampling based Nystr¨om methods [15]. These al-
gorithms reduce the cost to O(kN 2), k ≪ N and return
only the top-k eigenvectors/values. The core and most
expensive operation in these algorithms are matrix-vector
multiplication (for power-iteration methods) and matrix-
matrix multiplication (for sampling methods). See Algo-
rithm 1 and 2 for the fundamental steps of Lanczos and
Nystr¨om methods respectively. These algorithms reduce the
complexity with some sacriﬁce in accuracy. Greater number
of Lanczos iterations and greater sampling rate for Nystr¨om
account for better accuracy, which however, increase the
computation cost.
Algorithm 1 Lanczos Method
i bi−1;
bi ← Abi−1; // the most expensive step
αi ← bT
wi ← bi − αibi − βi−1bi−2, bi = 0 for i  q/2, x ≈ (v − q)/10n;
otherwise, x ≈ v/10n. It’s also easy to check that, if q is large
enough to accommodate the operational results, the results,
1041-4347 (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.
This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TKDE.2018.2847662, IEEE
Transactions on Knowledge and Data Engineering
4
including both sign and ﬂoating-point values, of addition
and multiplication operations on the converted values fol-