crawl, 30%–38% of discovered peers are unreachable. In
this group, the breakdown is as follows: 2%–3% are de-
parted peers, 15%–24% are ﬁrewalled, and the remain-
ing unreachable peers (3%–21%) are either also ﬁrewalled
or overwhelmed ultrapeers. However, since Cruiser only
needs to contact either end of an edge, it is able to dis-
cover at least 85%–91% of edges. Since ﬁrewalled peers
cannot directly connect together (i.e., cannot be located at
both ends of a missing edge) and they constitute more than
half of the unreachable peers, the actual portion of missing
edges is considerably smaller.
Quantifying Snapshot Accuracy: We rigorously exam-
ined the effect of crawling speed and duration on two di-
mensions of snapshot accuracy: completeness and distor-
tion. Our evaluations [30] revealed that (i) Cruiser captures
nearly all ultrapeers and the pair-wise connections between
them and the majority of connections to leaves; (ii) Both
node distortion and edge distortion in captured snapshots
increases linearly with the crawl duration; and (iii) snap-
shots captured by Cruiser have little distortion. For ex-
ample, we found that two back-to-back snapshots differed
only 4% in their peer populations.
Data Set: We have captured more than 18,000 snapshots
of the Gnutella network during the past eleven months
(Apr. 2004–Feb. 2005) with Cruiser. In particular, we col-
lected back-to-back snapshots for several one-week inter-
vals as well as randomly distributed snapshots during vari-
ous times of the day to ensure that captured snapshots are
representative. In Section 4, we use four of these snapshots
to illustrate graph properties of the overlay topology. In
Section 5, we use sets of hundreds of back-to-back snap-
shots to examine how the overlay topology evolves with
time.
4 Overlay Graph Properties
The two-tier overlay topology in modern Gnutella (as well
as other unstructured P2P networks) consists of ultrapeers
that form a “spaghetti-like” top-level overlay and a large
group of leaf peers that are connected to the top-level
Implementation:
Percentage:
LimeWire
Other
74%–77% 19%–20% 4%–6%
BearShare
Table 2: Distribution of Implementation
through multiple ultrapeers. We treat individual snapshots
of the overlay as graphs and apply different forms of graph
analysis to examine their properties. We pay special atten-
tion to the top-level overlay since it is the core component
of the topology. Throughout our analysis, we compare our
ﬁndings with similar results reported in previous studies.
However, it is important to note that we are unable to de-
termine whether the reported differences (or similarities)
are due to changes in the Gnutella network or due to inac-
curacy in the captured snapshots of previous studies.
Table 1 presents summary information of four sample
snapshots after post-processing. The results in this section
are primarily from the snapshots in Table 1. However, we
have examined many other snapshots and observed similar
trends and behaviors. Therefore, we believe the presented
results are representative. Presenting different angles of the
same subset of snapshots allows us to conduct cross com-
parisons and also relate various ﬁndings.
In this section, we explore the node degree distribution in
Subsection 4.1, the reachability and pairwise distance prop-
erties of the overlay in Subsection 4.2, small world charac-
teristics in Subsection 4.3, and the resilience of the overlay
in Subsection 4.4.
Implementation Heterogeneity: The open nature of the
Gnutella protocol has led to several known (and possibly
many unknown) implementations.
It is important to de-
termine the distribution of different implementations (and
conﬁgurations) among participating peers since their de-
sign choices directly affect the overall properties of the
overlay topology. This will help us explain some of the
observed properties of the overlay. Table 2 presents the dis-
tribution of different implementations across discovered ul-
trapeers. This table shows that a clear majority of contacted
ultrapeers use the LimeWire implementation. We also dis-
covered that a majority of LimeWire ultrapeers (around
94%) use the most recent version of the software available
at the time of the crawl. These results reveal that while het-
erogeneity exists, nearly all Gnutella users run LimeWire
or BearShare.
We are particularly interested in the number of connec-
USENIX Association
Internet Measurement Conference 2005  
53
s
r
e
e
P
l
e
v
e
L
-
p
o
T
s
r
o
b
h
g
i
e
N
x
h
t
i
w
10000
1000
100
10
1
1
09/27/04
10/11/04
10/18/04
02/02/05
10
100
Top-Level Neighbors
(a) Top-level Degree Distribution
l
e
v
e
L
-
p
o
T
e
l
b
a
h
c
a
e
R
s
r
o
b
h
g
i
e
N
x
h
t
i
w
s
r
e
e
P
10000
1000
100
10
1
1
09/27/04
10/11/04
10/18/04
02/02/05
l
e
v
e
L
-
p
o
T
s
e
l
b
a
h
c
a
e
r
n
U
s
r
o
b
h
g
i
e
N
x
h
t
i
w
s
r
e
e
P
10000
1000
100
10
1
1
09/27/04
10/11/04
10/18/04
02/02/05
10
100
Top-Level Neighbors
10
100
Top-Level Neighbors
(b) Reachable Degree Distribution
(c) Unreachable Degree Distribution
Figure 3: Different angles of the top-level degree distribution in Gnutella topology
tions that are used by each implementation since this design
choice directly affects the degree distribution of the overall
topology. This information can be obtained from available
LimeWire source code. However, not all implementations
are open, and users can always change the source code of
open implementations. Thus, we need to collect this infor-
mation from running ultrapeers in action.
Our measurements reveal that LimeWire’s and Bear-
Share’s ultrapeer implementations prefer to serve 30 and 45
leaves, respectively, whereas both try to maintain around 30
neighbors in the top-level overlay.
4.1 Node Degree Distributions
The introduction of the two-tier architecture in the over-
lay topology along with the distinction between ultrapeers
and leaf peers in the modern Gnutella protocol demands
a close examination of the different degree distributions
among different group of peers.
Node Degree in the Top-Level Overlay: Previous studies
reported that the distribution of node degree in the Gnu-
tella network exhibited a power-law distribution [23, 2, 7]
and later changed to a two-segment power-law distribu-
tion [20, 23]. To verify this property for the modern Gnu-
tella network, Figure 3(a) depicts the distribution of node
degree among all peers (both unreachable and reachable)
in the top-level overlay for the four sample snapshots pre-
sented in Table 1. This distribution has a spike around
30 and does not follow a power-law4. A key question is
to what extent this difference in degree distribution is due
to the change in the overlay structure versus error in cap-
tured snapshots by earlier studies. To examine this ques-
tion, we captured a distorted snapshot by a slow crawler5
which is similar to the 50-connection crawler used in an
earlier study [23]. Figure 4(a) depicts the degree distribu-
tion based on this distorted snapshot, which is signiﬁcantly
more similar to a two-piece power-law distribution6. If we
further slow down the crawling speed, the resulting snap-
shots contains a higher degree of edge distortion, and the
derived degree distribution looks more similar to a single-
piece power-law distribution, the result reported by earlier
studies [2, 7]. To a slow crawler, peers with long uptimes
appear as high degree because many short-lived peers re-
port them as neighbors. However, this is a mischaracter-
ization since these short-lived peers are not all present at
the same time. More importantly, this ﬁnding demonstrates
that using distorted snapshots that are captured by slow
crawlers can easily lead to incorrect characterizations of
P2P overlays.
Because we were unable to contact every top-level peer,
the distribution in Figure 3(a) is biased slightly low since
it does not include all edges. To address this problem, we
split the data into Figures 3(b) and 3(c), which depict the
neighbor degree distribution for reachable and unreachable
peers, respectively. The data in Figure 3(b) is unbiased
since we contacted each peer successfully, i.e., we discov-
ered every edge connected to these peers. The spike around
a degree of 30 is more pronounced in this ﬁgure. Fig-
ure 3(c) presents the observed degree distribution for un-
reachable top-level peers (i.e., overloaded or NATed). This
distribution is biased low since we cannot observe the con-
nections between pairs of these peers. In this data, a much
greater fraction of peers have an observed degree below 30.
Many of these peers probably have a true degree closer to
30, with the true distribution likely similar to that in Fig-
ure 3(b).
The degree distribution among contacted top-level peers
has two distinct segments around a spike in degree of 30,
resulting from LimeWire and BearShare’s behavior of at-
tempting to maintain 30 neighbors. The peers with higher
degree represent other implementations that try to main-
tain a higher node degree or the rare user who has modi-
ﬁed their client software. The peers with lower degree are
peers which have not yet established 30 connections. In
other words, the observed degree for these peers is tempo-
rary. They are in a state of ﬂux, working on opening more
connections to increase their degree. To verify this hypoth-
esis, we plot the mean degree of peers as a function of their
uptime in Figure 5. The standard deviation for these mea-
surements is quite large (around 7 − 13), indicating high
54
Internet Measurement Conference 2005
USENIX Association
s
e
d
o
n
l
e
v
e
l
-
p
o
t
f
o
%
e
e
r
g
e
d
t
a
h
t
h
t
i
w
10
1
0.1
0.01
0.001
s
e
v
a
e
L
x
h
t
i
s
r
e
e
p
a
r
t
l
U
Slow crawl
Fast crawl
w
10000
1000
100
10
1
09/27/04
10/11/04
10/18/04
02/02/05
1
10
100
1
(a) Observed top-level degree distributions of
Degree
10
100
Number of Leaves
(b) Degree distribution from ultrapeers to
s
t
n
e
r
a
P
x
h
t
i
w
s
e
v
a
e
L
10000
1000
100
10
1
1
09/27/04
10/11/04
10/18/04
02/02/05
10
100
Number of Parents
(c) Leaf Parents
a slow and a fast crawl
leaves
Figure 4: Different angles of degree distribution in Gnutella
e
e
r
g
e
d
l
e
v
e
l
-
p
o
t
n
a
e
M
26
24
22
20
18
16
14
12
10
8
6
3
+
2
3
3
+
2
3
2