### 三、当局者迷，旁观者清曾国藩有一句话叫：天下事当局者迷，旁观者清；事前易暗，事后易明。这里主要想跟大家聊一下"当局者迷，旁观者清"，下棋的人都知道，旁观者不受胜负输赢的影响，自然脑子清醒，可以从两方棋手的角度看待问题，从而跳出局限看清局势。而当局者因为胜负输赢与自己息息相关，很容易受到影响看不清局势。继续举个例子：我还记得当年我在 1 号店负责公司供应链（仓库管理系统简称WMS，物流运输管理系统简称 TMS）系统研发的时候，公司 CEO于刚先生邀请了一支咨询团队来了解 1 号店整个 C端用户购买和退换货体验，以及运营类员工（核心是仓库、物流、客服人员）使用内部支撑系统的体验。咨询团队提出了非常多的问题和优化建议，随后我们多次开会讨论，从提升 C端用户体验出发，我们着重解决了用户最头疼的退换货问题，还推出了订单半日达服务；从提升内部效率出发，我们的WMS 系统从人工波次改成系统自动波次和人工波次相结合，TMS系统中最后一公里的配送路径，从依赖配送员经验分配路线，优化成系统结合订单商品的核心属性、用户地址等维度给出最优配送路径，配送效率大大提升的同时，用户投诉也减少了不少。但是当时，我和我们领导其实并不太理解公司的这种行为，认为这是一种太信任的体现，我们觉得之前的C端系统和内部支撑系统已经非常好了，并没有那么大的改进空间。但结果证明，这支咨询团队之后优化建议是非常有价值的。今年 9月，我在看于刚先生写给创业者的《激情创业：让不可能变为可能》一书时，才明白他当时的做法并不是不相信我们这些系统设计和研发者，而是希望找一个身在局外的团队去找问题、去无情的暴露问题。因为局外人通常会站在公司内部和用户双方的角度思考问题，更容易跳出局限，直击要害，找到问题的关键所在。这就应了曾国藩另外一句话：任事者，当置身利害之外，建言者，当设身于利害之中。时间过去 9年了，我对于公司当时的行为，也从当初的不理解变为此刻的赞成，这也许就是从当局者迷到旁观者清的转变。
## 总结本文我们首先领略了亚马逊领导力准则之远见卓识，按徐飞的总结是领导者要有远见，接着我分享了对于曾国藩的担大事者之"明"的三点理解，即光明、高明与精明以及当局者迷，旁观者清。聪明的读者不难发现，这两条领导力原则高度一致，都在于对事物的高度与方向有清晰的把握，对战略和细节有足够的理解。为此，我还特意咨询过于刚先生（他在亚马逊任高管时直接向贝佐斯汇报工作），贝佐斯是不是曾了解过中国的领导力文化，他的答案是，贝佐斯并没有了解过中国文化，也许这就是所谓的英雄所见略同吧。如果你对这个话题有其他认知，欢迎留言与我分享，也欢迎来我的知识星球"小卒吾“知行合一”"（星球号5139329）跟我一起探讨技术人关于认知和如何在领导力这个领域内实践知行合一相关的话题。
## 作者简介程军，现任贝壳技术总监，曾任饿了么技术总监、1 号店架构师，10年以上互联网开发经验，8 年以上技术管理经验。
# 第114讲 \| 成敏：谈谈不同阶段技术公司的特点你好，我是成敏。技术体系建设是每个 CTO都需要关注的话题，但技术体系建设很难像技术工程建设那样，得出一个最佳实践。因为每个公司的背景、业务形态、组织结构，甚至CEO 性格都有所不同，而这些因素都会对技术体系的建设产生影响。今天就简单的以公司规模大小为划分标准，分析在不同规模下，技术公司的业务特点，以及要做好技术体系建设可能面临的困难。
## 第一个阶段：十人左右规模当公司规模比较小的时候，比如还处在初创阶段，这时公司可能只有十几人，机器也只有十几台，规模很小。在这个阶段，公司的需求变化通常会非常快，甚至可能还没有确定业务的主营模式。很有可能公司今天尝试某个方向，结果发现此路不通，第二天就转换方向，试行另一个方向。其实，不少创业公司就是在这样的快速迭代，不断试错中找到了自己的爆发点。这样需求变化快且业务模式难以固定的团队，对团队成员技术栈宽度的要求会非常高。比如研发岗位除了做好研发工作外，还需要承担测试、上线等工作，甚至之后的运维也需要他们来负责。再比如，这时的CTO不仅要把控技术方向、管理技术团队，还得上手写代码，更有可能还要去机房看机器情况。因此，在这个阶段，公司会更看重研发人员的单兵作战能力，之前很流行的全栈工程师正是在这样的需求下应运而生。同时，在这个阶段，团队往往有着非常高效的沟通效率和执行速度。可能有个需求提出来，团队几个人周末加个班熬一下，周一就能上线了，非常快。``{=html}当然，这个阶段，团队的问题在于，一是团队的技术天花板会受限于单兵的技术水平；二是缺乏人才储备、规范化程度也比较低，一旦有人离开，就会极大的影响研发进度；三是技术成本投入很难实现规模化。
## 第二个阶段：五十人左右规模这个阶段，公司稍微有点起色了，团队规模也达到五十人左右，机器也能有一两百台的规模。这个阶段，公司的业务主体已经比较明确，但需求变化加快，可能比之前初创期来得更快。团队在这个阶段开始有了明确的分工，但未必有分组，比如运维工作会招一两个专职的运维来负责，不再由研发兼任，但还没法形成专门的运维团队。在流程上，公司开始关注协同及规范，只是整体的流程规范依旧比较简单，自动化程度比较低，协同比较松散。这个时期，内部沟通依旧会比较顺畅，只是需要警惕不要让公司陷入到作坊式作战的陷阱中去。
## 第三个阶段：百人左右规模这个阶段，团队规模一般能达到上百人，机器规模也能达到一两千台。一般到了这个阶段，公司的主营业务已经相对稳定，也开始做1-2年左右的规划，因为如果没有一个稳定的主营业务，创业公司也很难进入这个梯队。这个阶段，业务需求仍然大于技术资源，而技术和业务上的分组都已经开始产生，除了基本的分工之外，会有一些明确的分组去负责明确的事情，比如A 团队就负责 A 这个业务线，B 团队就负责 B 这个业务线。在这个阶段，公司也会更重视流程规范，会尝试利用开源工具完成最原始的自动化，团队成员的自主性、自我驱动力也会非常强。其实在第一个阶段，初创团队成员的自我驱动力也非常强，但由于单兵作战，这种驱动力产生的成果往往不具备规模效应，一个人又管研发、又管上线、又管运维，即使他基于流程痛点写了个小工具，节省的也只是自己一个人的时间。但在第三阶段，上百人规模的团队已经初步具备规模化的效应，比如针对流程写出符合团队需求的工具，在技术上做点有意义的事情，产生的影响力很容易就会扩散到整个团队，提高整个团队的效率。当然，这个阶段也会存在问题，如人员梯队开始明显化、沟通壁垒开始出现等。毕竟整个公司有一两百号人，每个人的能力、认知等各方面都会有比较大的不同，又不像小团队那样可以坐在一起面对面沟通，很容易出现沟通上的问题，导致沟通效率下降。