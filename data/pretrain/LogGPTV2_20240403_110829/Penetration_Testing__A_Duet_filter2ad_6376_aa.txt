title:Penetration Testing: A Duet
author:Daniel E. Geer Jr. and
John Harthorne
Penetration  Testing:  A Duet 
Dr. Daniel Geer and John Harthorne 
@take 
d~eetfii~crtsiake. cm 
Part  I:  Penetration  Testing, 
Looking  East from  50,000' 
1 
Art  v.  Science 
Penetration  testing  is  the  art  of  finding  an  open 
door. It  is not a science as science depends on falsifiable 
hypotheses. The most penetration testing  can hope for  is 
to be the science of insecurity  - not the science of security 
-  inasmuch  as  penetration  testing  can  at  most  prove 
insecurity  by  falsifying  the  hypothesis  that  any  system, 
network,  or  application  is  secure.  To  be  a  science  of 
security  would  require  falsifiable  hypotheses  that  any 
given  system,  network,  or  application  was  insecure, 
something  that  could  only  be  done  if  the  number  of 
potential  insecurities  were  known  and  enumerated such 
that  the  penetration  tester  could  thereby  falsify  (test)  a 
known-to-be-complete  list  of  vulnerabilities  claimed  to 
not be present. Because the list  of potential  insecurities is 
unknowable  and  hence  unenumerable,  no  penetration 
tester can prove security, just  as no doctor  can prove that 
you  are without  occult  disease. Putting  it  as Picasso did, 
“Art 
is  a  lie  that  shows  the  truth”  and  security  by 
penetration testing is a lie  in that on a good day can show 
incompleteness  and  proof-by- 
the 
demonstration characteristics of penetration testing ensure 
that  it  remains an art  so long  as high  rates of  technical 
advance  remains  brisk  and  hence  enumeration  of 
vulnerabilities  an  impossibility.  Brisk  technical  advance 
equals productivity  growth  and thereby  wealth  creation, 
so  it  is  forbidden  to  long  for  a  day  when  penetration 
testing could achieve the status of science. 
truth.  These 
That  penetration testing  is an art means that there 
are artists. In  deference to  those artists, they  range from 
virtuosos  to mules. At  the low  end, automation  (tractors) 
is  replacing  brute  labor  (mules).  Automation 
is  the 
handmaiden of  commoditization,  and there is little  doubt 
that  the  penetration  field  is  fully  commoditized  at  the 
lower  levels  of  art.  At  that  low  level,  scanning systems 
steadily  expand  the  scope  and  coverage  of  what  they 
automate. That those same scanning tools can be deployed 
for  evil  purposes  is  irrelevant  unless  you  are  in  the 
newspaper business. As  Sherlock Holmes  said to Watson 
(holding  a scalpel),  “Is  it  not  surprising  that the tools  of 
healing  and the tools  of  crime  are so indistinguishable?” 
No,  it  is not  surprising  -  a good tool  is a policy-  neutral 
force  multiplier  and it  is  intent,  that  is to  say character, 
that  determines the outcome of  that  force  multiplication. 
Penetration testing is therefore good or bad depending on 
the  intent  of  its  practitioner  and  of  the  recipient  of  its 
results.  We  confine  this  article  to  penetration  testing 
where  the  intent  is  good  (the  only  kind  one has to  pay 
for). 
2 
Characterization 
and  Specialization 
Successful penetrations can be characterized as the 
illegitimate  acquisition  of  legitimate  authority.  As such, a 
successful penetration  will  yield  the  ability  to  command 
network  facilities 
to  do  other  than  what  their  owners 
expected them to do, to gain the full  or at least substantial 
control  of  a host  in  a way  normally  reserved for  trusted 
operations staff, or to acquire the management interface of 
an application or the functional  equivalent thereof. In each 
variation,  the authority  obtained is not otherwise available 
to  the  person,  place  or  thing  which  is  performing  the 
penetration whether that penetration be a test or a live  fire 
attack.  As  the  reader  likely  already  knows,  the  most 
successful  penetrations  are 
those  which  materially 
decrease the  labor  required  for  a repeat visit  and which 
are silent (alarm-free)  in the process. Penetration testers at 
high  levels of  art will,  therefore, attempt not only  to gain 
access but to gain repeatable access at low/no  probability 
of  detection on those repeat visits.  Though  slang is never 
eloquent  except  by 
terminology 
“owned”  (Owned)  is rather apt when the penetration artist 
can not only  get in the first time but can also get in at will 
on a repeat basis without  detection. 
inadvertence, 
Specialization  is,  for  any  field,  a  consequence of 
expanding  knowledge  and the  accumulating  complexity 
thereof.  Where that knowledge  is itself  knowledge  about 
complexity,  as it  is here given the fundamental axiom that 
complexity  is the chief  enemy of security, the growth  rate 
in  (knowledge)  complexity  compounds  and  the  rate  of 
needful  specialization  accelerates.  Ergo,  penetration 
testing 
is  and  must  be  rapidly  specializing  and  its 
practitioners  would  be worthy  of  criticism  were they  not 
specializing.  Network  penetrations  are  already  a  clear 
speciality  as can be seen in the array of  low  end products 
that  perform  the  commoditized  bulk  of  a  penetration 
the 
Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC(cid:146)02) 
1063-9527/02 $17.00 ' 2002 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:30:14 UTC from IEEE Xplore.  Restrictions apply. 
testing  regime at the level  of  repeatability  and low  labor 
cost that  are the hallmarks  of  a defined  speciality.  Some 
of  these are hand  held  and  some are remote  actuators. 
Some make a bargain with  a thorough  look  at the  most 
likely  causes  of  successful  penetrations  while  others 
bargain that an inventory of everything  worth  looking  into 
is  a better value.  Some require  an expert  practitioner  to 
interpret,  some condense the  report  to  the  level  of  the 
reader’s skill  and competence. Some evolve  more or  less 
continuously  while  others are stable. Network  penetration 
tests  are  a  proxy 
losses  of 
communications  availability  and losses of  whatever  part 
of  the overall  operational integrity  depends, implicitly  or 
explicitly,  on  effective  perimeter  control.  If  the  network 
penetration test is being done for  some other purpose, the 
results will  tend to mislead. 
two  kinds  of  risk, 
for 
inattention 
tools  arrayed  around  hosts 
A  virtually  similar  situation  exists  with  host 
penetrations  and 
for 
penetration testing,  but  with  the  operating  system rather 
than  the  protocol  now  uppermost.  Of  course,  some 
operating systems are more worthy  of  testing than others 
both based on inherent risk  due to complexity  and history 
of  risk  due  to 
to  security  as  a  design 
characteristic. Such distinctions  are not the subject of this 
essay, but they are real and likely  to remain so for  a very 
long  time  inasmuch  as  design  choices  made  badly  are 
difficult  to fix  when the installed base grows beyond some 
threshold long since passed for  every operating system in 
common  use. With  host  targeted  penetrations,  it  is  the 
facilities  of  the  host that  are sought  and hence it  is the 
power  of  the  host that  calibrates the  level  of  effort  that 
should be expended in testing or which  will  be expended 
by  genuine attackers. Note  that  “power”  here is a subtle 
concept;  it 
the  horsepower  of  some 
component but  also the trust  relationships  that  host has. 
As it will  always be true that for  any host there must exist 
some level of unchecked power such that the more serious 
aspects of  systems  administration  can  be  done  under 
diminished  operability,  host penetration tests are a proxy 
for  the  estimation  of  cascade  failure  of  authorization 
integrity.  As with  network  penetration testing,  if  the host 
penetration test is being done for  some other purpose, the 
results will  tend to mislead. 
is  not  merely 
Applications  are a slightly  different  kettle of fish as 
they are inherently  difficult  to define when one is serious 
about  defining  them.  As  applications  expand by  feature 
accretion  and by  the kinds  of  labor-  dividing,  redundant 
provisioning  on  which  business continuity 
increasingly 
depends,  a  sidebar  increase  in  complexity  can  easily 
exceed any one person’s ability  to understand the whole of 
the 
“customer 
experience.” While  networks  can be complex,  the idea of 
a  network  operations  center  and  crisp  metrics  on  what 
constitutes  effective  network  operation  are at  least well 
enough advanced that  residual  questions about  “What  is 
is  delivering 
“application” 
that 
the 
the real extent of  my  network?”  are where the action  is. 
Not  so with  applications,  particularly  so as applications 
are rarely  built  from  the  ground  up  in  their  entirety  but 
rather represent adaptive re-use of  numerous (or  perhaps 
innumerable)  libraries,  caches, roles of  authority,  external 
identity  control,  and so forth.  As such, an application  pen 
test  is  much  more  akin  to  exploring 
the  difference 
between  what  is  thought  to  be  in  place  and  what  is 
actually  in  place, viz.,  to  run the application  down  paths 
that  were  not  intentional  in  the  application’s  design  and 
implementation.  An  application  pen  test  is  less easy to 
automate except for  a few  classes of  classic failures,  e.g., 
session  replay  or  crash-vulnerability 
to  hostile  input. 
Application  penetration testing, in other words, is a young 
and abstract art attracting young and abstract artists at the 
moment of this  essay. An  application  penetration test is a 
proxy  for  the  illegitimate  use of  legitimate  authority,  a 
subtle  but  important  difference  with 
the  illegitimate 
acquisition  of 
legitimate 
authority  can be used for  illegitimate  purposes, there is no 
implication 
that  the  defined  functions,  that  is  to  say 
product  requirements,  are failing.  Rather  the  successful 
application  penetration  tester is  showing  that  other  code 
paths outside  of  the  required  code  paths  exist  and  that 
these code paths are reachable by  the tester. Application 
penetration testing  is, therefore,  more like  embezzlement 
and less like  a stickup.  As  with  the other two  species of 
penetration  testing,  if  the  application  penetration  test  is 
being done for some other purpose, the results will  tend to 
mislead. 
legitimate  authority.  Where 
in  multiple 
All  three types of  penetration testing have separate 
reasons for  their  continued  existence even as they  evolve 
differently.  However  it  is  fair  to  say  that  application 
testing  is today where the ferment is because of trends in 
application  deployment. To state the obvious, applications 
are  federating  -  they  are  becoming  conglomerates  of 
pieces  running 
locations  under  multiple 
ownerships  and liabilities.  In  retail  commerce, to  choose 
an example,  catalog,  payment,  fulfillment  and  customer 
service are often  entirely  different  outsourced functions, 
each relying  on  network  delivery  strategies that  involve 
independent  hosting 
distributed  network 
caching,  and  roll-with-the-sun  handoffs  of  back  office 
functions.  An  application  may  really  and  truly  be  the 
business for  all  intents and purposes yet the business as a 
legal  entity  may  not  own,  control  or  operate any  of  the 
application. 
for  no  other  reason,  the  pressure  of 
applications  of  this  composite  sort on the definition  of  a 
network  perimeter  is  to  dissolve  that  perimeter,  a trend 
that  is  widely  underway  even  before  the  impending 
tsunami of  “web  services” (which,  with  remote procedure 
calls  carried  on  HTTP  will  defy  even  stateful  content 
inspection  as a security  strategy) extinguishes the mirage 
of a corporate perimeter. 
facilities, 
If 
Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC(cid:146)02) 
1063-9527/02 $17.00 ' 2002 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:30:14 UTC from IEEE Xplore.  Restrictions apply. 
3 
Time  Line  and  Drivers 
that 
The fundamental irony  of penetration testing is that 
the  value  received  by  the  client  is  itself  subtle  but  the 
clients  who  ask  for  penetration  testing  as their  primary 
security  activity  are  but  rarely  thinking  subtly.  The 
penetration artist may or may not endeavor to correct this, 
but  so often the hope of  the client  is that the penetration 
tester  will 
fail  to  penetrate.  The  better  the  penetration 
tester the  less likely  it  is that  s/he will  fail  to  penetrate 
and, so the logic goes, the better the result and the greater 
value the client receives should the penetration tester fail. 
At  that  level  of  understanding, the value  proposition  for 
the  client  is  that  the  penetration  tester  is  selling  their 
failure.  The value of  that  failure  is greater the less often 
the  penetration  tester  fails, 
the 
penetration tester is to  fail  based on skill  and history  the 
higher  value  the  client  has  obtained  if  and  when  the 
penetration tester does fail. 
i.e.,  the  less  likely 
that  testing 
is  valuable 
fundamentally 
is  proportional 
For  the tester, one cannot sustain a high  price  for 
penetrations unless one fails rarely (proving  you are good) 
but at the same time the satisfaction the customer receives 
from 
to  the  degree  the 
penetration  tester fails.  In  penetration  testing,  then,  one 
has the classic problems  of  selling  something (failure  of 