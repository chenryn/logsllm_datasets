想要创建自己的 Docker 镜像，你需要先运行一个你已经下载完的容器：
```
$ sudo docker run -t -i ubuntu:latest /bin/bash
```
现在，你运行了一个容器，并且进入了该容器。然后，在该容器安装任意一个软件或做任何你想做的事情。
例如，我们在容器中安装一个 Apache web 服务器。
当你完成所有的操作，安装完所有的软件之后，你可以执行以下的命令来构建你自己的 Docker 镜像：
```
# apt update
# apt install apache2
```
同样的，在容器中安装和测试你想要安装的所有软件。
当你安装完毕之后，返回的宿主机的终端。记住，不要关闭容器。想要返回到宿主机而不中断容器。请按下`CTRL+P`，再按下 `CTRL+Q`。
从你的宿主机的终端中，运行以下命令如寻找容器的 ID：
```
$ sudo docker ps
```
最后，从一个正在运行的容器中创建 Docker 镜像：
```
$ sudo docker commit 3d24b3de0bfc ostechnix/ubuntu_apache
```
示例输出：
```
sha256:ce5aa74a48f1e01ea312165887d30691a59caa0d99a2a4aa5116ae124f02f962
```
在这里：
* `3d24b3de0bfc` — 指 Ubuntu 容器的 ID。
* `ostechnix` — 我们创建的容器的用户名称
* `ubuntu_apache` — 我们创建的镜像
让我们检查一下我们新创建的 Docker 镜像：
```
$ sudo docker images
```
示例输出：
```
REPOSITORY                TAG                 IMAGE ID            CREATED              SIZE
ostechnix/ubuntu_apache   latest              ce5aa74a48f1        About a minute ago   191MB
ubuntu                    latest              7698f282e524        15 hours ago         69.9MB
centos                    latest              9f38484d220f        2 months ago         202MB
hello-world               latest              fce289e99eb9        4 months ago         1.84kB
```
![](/data/attachment/album/201906/05/013752el8qgpygygkn6qjj.png)
*列出所有的 Docker 镜像*
正如你看到的，这个新的镜像就是我们刚刚在本地系统上从运行的容器上创建的。
现在，你可以从这个镜像创建一个新的容器。
```
$ sudo docker run -t -i ostechnix/ubuntu_apache /bin/bash
```
#### 5、删除容器
如果你在 Docker 上的工作已经全部完成，你就可以删除那些你不需要的容器。
想要删除一个容器，首先，你需要停止该容器。
我们先来看一下正在运行的容器有哪些
```
$ sudo docker ps
```
示例输出：
```
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
3d24b3de0bfc ubuntu:latest "/bin/bash" 28 minutes ago Up 28 minutes goofy_easley
```
使用容器 ID 来停止该容器：
```
$ sudo docker stop 3d24b3de0bfc
```
现在，就可以删除该容器了。
```
$ sudo docker rm 3d24b3de0bfc
```
你就可以按照这样的方法来删除那些你不需要的容器了。
当需要删除的容器数量很多时，一个一个删除也是很麻烦的，我们可以直接删除所有的已经停止的容器。只需要运行：
```
$ sudo docker container prune
```
按下 `Y`，来确认你的操作：
```
WARNING! This will remove all stopped containers.
Are you sure you want to continue? [y/N] y
Deleted Containers:
32fc32ad0d5445f2dfd0d46121251c7b5a2aea06bb22588fb2594ddbe46e6564
5ec614e0302061469ece212f0dba303c8fe99889389749e6220fe891997f38d0
Total reclaimed space: 5B
```
这个命令仅支持最新的 Docker。（LCTT 译注：仅支持 1.25 及以上版本的 Docker）
#### 6、删除 Docker 镜像
当你删除了不要的 Docker 容器后，你也可以删除你不需要的 Docker 镜像。
列出已经下载的镜像：
```
$ sudo docker images
```
示例输出：
```
REPOSITORY                TAG                 IMAGE ID            CREATED             SIZE
ostechnix/ubuntu_apache   latest              ce5aa74a48f1        5 minutes ago       191MB
ubuntu                    latest              7698f282e524        15 hours ago        69.9MB
centos                    latest              9f38484d220f        2 months ago        202MB
hello-world               latest              fce289e99eb9        4 months ago        1.84kB
```
由上面的命令可以知道，在本地的系统中存在三个镜像。
使用镜像 ID 来删除镜像。
```
$ sudo docekr rmi ce5aa74a48f1
```
示例输出：
```
Untagged: ostechnix/ubuntu_apache:latest
Deleted: sha256:ce5aa74a48f1e01ea312165887d30691a59caa0d99a2a4aa5116ae124f02f962
Deleted: sha256:d21c926f11a64b811dc75391bbe0191b50b8fe142419f7616b3cee70229f14cd
```
#### 解决问题
Docker 禁止我们删除一个还在被容器使用的镜像。
例如，当我试图删除 Docker 镜像 `b72889fa879c` 时，我只能获得一个错误提示：
```
Error response from daemon: conflict: unable to delete b72889fa879c (must be forced) - image is being used by stopped container dde4dd285377
```
这是因为这个 Docker 镜像正在被一个容器使用。
所以，我们来检查一个正在运行的容器：
```
$ sudo docker ps
```
示例输出：
![](/data/attachment/album/201906/05/013754rje2bdej0jq0zmb2.jpg)
注意，现在并没有正在运行的容器！！！
查看一下所有的容器（包含所有的正在运行和已经停止的容器）：
```
$ sudo docker pa -a
```
示例输出：
![](/data/attachment/album/201906/05/013757uwwxn0b3uxz4yfyo.jpg)
可以看到，仍然有一些已经停止的容器在使用这些镜像。
让我们把这些容器删除：
```
$ sudo docker rm 12e892156219
```
我们仍然使用容器 ID 来删除这些容器。
当我们删除了所有使用该镜像的容器之后，我们就可以删除 Docker 的镜像了。
例如：
```
$ sudo docekr rmi b72889fa879c
```
我们再来检查一下本机存在的镜像：
```
$ sudo docker images
```
想要知道更多的细节，请参阅本指南末尾给出的官方资源的链接或者在评论区进行留言。
这就是全部的教程了，希望你可以了解 Docker 的一些基础用法。
更多的教程马上就会到来，敬请关注。
---
via: 
作者：[sk](https://www.ostechnix.com/author/sk/) 选题：[lujun9972](https://github.com/lujun9972) 译者：[zhang5788](https://github.com/zhang5788) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出