前文提到过，我们无法使用SMB来将认证数据中继至LDAP，这也是为什么我们无法像最近公布的[SpoolService
RPC滥用技术](https://github.com/leechristensen/SpoolSample/)那样来使用这种攻击技术（因为SpoolService
RPC使用的是基于SMB的认证过程）。由于人们经常提到关于这方面的问题，也存在不少困惑，这里我们来仔细研究一下技术细节。如果大家不想深入了解NTLM认证过程，可以直接跳过这一部分。
基于SMB以及HTTP的NTLM认证过程的区别在于协商（negotiate）时默认使用的标志。这里存在问题的是`NTLMSSP_NEGOTIATE_SIGN`标志（`0x00000010`，参考[MS-NLMP section 2.2.2.5](https://msdn.microsoft.com/en-us/library/cc236650.aspx)中的介绍）。基于HTTP的NTLM认证过程默认情况下并没有设置该标志，但如果使用SMB，则该标志默认情况下处于设置状态：
当我们将该数据包中继至LDAP时，会成功完成身份认证过程，但LDAP希望所有消息都经过某个会话秘钥签名（该会话秘钥的值来源于对应的密码，在中继攻击中我们无法获取该密码），因此会忽略不带有签名的任何消息，使我们的攻击过程失败。大家可能好奇，我们能否在传输过程中修改这些标志，使整个过程不涉及签名协商操作。不幸的是，这对现在的Windows版本而言无法完成，因为系统默认情况下会包含一个MIC（Message
Integrity Code，消息完整性代码），而MIC是基于所有3个NTLM消息所计算出的一个签名值，因此修改任何一个消息都会破坏消息有效性。
那么我们是否可以移除MIC？答案是肯定的，这是因为该字段并不是NTLM消息中的保护字段。然而NTLM身份认证（仅限于NTLMv2）中存在最后一种保护机制可以避免出现这种情况：在NTLMv2响应数据中（响应数据同样使用受害者的密码进行签名），包含一个`AV_PAIR`结构：`MsvAvFlags`。当这个字段的值为`0x0002`时，则表示客户端已发送的`type
3`消息中包含MIC字段。
修改NTLMv2响应数据会导致认证过程无效，因此我们无法删除这个标志字段。该标志字段表示认证过程中已经计算并包含了MIC值，因此目标服务器会验证MIC值，确保所有3条消息在传输过程中都没有被修改过，因此我们无法删除签名标志。
（我认为）这种情况只适用于Microsoft版的NTLM认证过程。如果某些自定义应用实现了NTLM认证过程，可能不会实现这么多细节，没有考虑到MIC以及`AV_PAIR`标志，因此攻击者有可能修改相应标志，使基于SMB的LDAP中继攻击成为可能的攻击场景。比如，对于NTLM认证过程的[Java版实现](https://conference.hitb.org/hitbsecconf2018dxb/materials/D2T2%20-%20NTLM%20Relay%20Is%20Dead%20Long%20Live%20NTLM%20Relay%20-%20Jianing%20Wang%20and%20Junyu%20Zhou.pdf)来说，攻击者就可以在传输过程中修改数据，绕过安全措施。
## 0x06 在不具备任何凭据下发起攻击
在前文中，攻击过程的第一步中我们使用了已窃取的凭据。如果攻击者只能发起网络攻击，但不具备任何凭据，那么还是有可能触发Exchange发起身份认证操作。如果我们能发起SMB到HTTP（或者HTTP到HTTP）中继攻击（比如使用LLMNR/NBNS/mitm6欺骗攻击技术），我们就可以中继同一网络中某个用户的认证数据，将认证数据中继至Exchange
EWS，然后使用这些用户的凭据来触发回调操作（这里要感谢[Mark](https://twitter.com/infosec_kb)提出这个思路）。我稍微修改了`httpattack.py`，现在我们可以在不具备任何凭据的情况下，从网络层面发起攻击（我们只需要修改脚本中硬编码的攻击主机）。
## 0x07 缓解措施
这种攻击技术需要依赖各种组件才能正常工作。在之前的文章中，我已经介绍了可以防御[NTLM中继攻击](https://www.fox-it.com/en/insights/blogs/blog/inside-windows-network/)以及[LDAP中继攻击](https://blog.fox-it.com/2018/04/26/escalating-privileges-with-acls-in-active-directory/)的一些防御机制。
对这种攻击技术而言，最重要的缓解措施如下：
  * 移除Exchange无需拥有对域对象的一些高权限（参考下文部分链接）。
  * 启用LDAP签名机制以及LDAP[通道绑定](https://support.microsoft.com/en-us/help/4034879/how-to-add-the-ldapenforcechannelbinding-registry-entry)机制，以阻止针对LDAP和LDAPS的中继攻击。
  * 阻止Exchange服务器通过任意端口向其他工作站发起连接。
  * 在IIS中的Exchange节点上启用[身份认证扩展保护](https://msdn.microsoft.com/en-us/library/dd767318%28v=vs.90%29.aspx)机制（但不要在Exchange后端上应用该机制，这样会破坏Exchange的正常功能）。该机制可以验证NTLM认证过程中的通道绑定参数，而该参数会将NTLM认证与TLS连接绑定在一起，避免攻击者向Exchange Web服务发起中继攻击。
  * 删除某些注册表键值，使攻击者无法将数据包中继回Exchange服务器，微软也在[CVE-2018-8518缓解措施](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8581)中提到过这一点。
  * 在Exchange服务器上强制启用SMB签名机制（最好也在域中的其他服务器和工作站上启用该机制），防止针对SMB的跨协议中继攻击。
## 0x08 相关工具及受影响的版本
大家可以访问[此处](https://github.com/dirkjanm/PrivExchange)获取PoC工具，我们已经在如下Exchange/Windows环境上测试过这些工具：
  * Exchange 2013 (CU21)，Server 2012R2，中继至Server 2016 DC（所有产品均已打全补丁）。
  * Exchange 2016 (CU11)，Server 2016，中继至Server 2019 DC（所有产品均已打全补丁）。
这些Exchange服务器在安装时都使用了共享权限模式（默认设置），但这篇[文章](https://github.com/gdedrouas/Exchange-AD-Privesc/blob/master/DomainObject/DomainObject.md)提到，采用RBAC（基于角色的权限访问控制）分离权限的部署方案同样受这种攻击方法影响（我并没有测试这种场景）。
## 0x09 参考文献
**缓解措施：**
  *  (Removing dangerous Exchange permissions with PowerShell)
  *  (Identifying and removing dangerous Exchange permissions, by @_wald0)
  * [ACL privilege escalation research](https://www.blackhat.com/docs/us-17/wednesday/us-17-Robbins-An-ACE-Up-The-Sleeve-Designing-Active-Directory-DACL-Backdoors-wp.pdf) by @_wald0 and @harmj0y
**NTLM中继/签名机制：**
  * [Review of NTLM reflection attack over network](https://github.com/SecureAuthCorp/impacket/issues/451)
  * [NTLM SMB->LDAP relaying](https://github.com/SecureAuthCorp/impacket/pull/500)
  * [Playing with relayed credentials](https://www.secureauth.com/blog/playing-relayed-credentials) by @agsolino
**其他参考资料：**
  * [MS-NLMP](https://msdn.microsoft.com/en-us/library/cc236621.aspx)
  * [ZDI post on this issue which discusses this Exchange API](https://www.zerodayinitiative.com/blog/2018/12/19/an-insincere-form-of-flattery-impersonating-users-on-microsoft-exchange)
  * [Remote NTLM Relaying through meterpreter](https://diablohorn.com/2018/08/25/remote-ntlm-relaying-through-meterpreter-on-windows-port-445/)
  * [My HITB slided on ACL attacks](https://www.slideshare.net/DirkjanMollema/aclpwn-active-directory-acl-exploitation-with-bloodhound)