---
author: Ricardo Gerardi
category: 技术
comments_data:
- date: '2019-04-10 14:19:03'
  message: 作者大大赞一个
  postip: 222.75.167.81
  username: 来自宁夏的 Chrome 73.0|Windows 7 用户
- date: '2020-07-20 17:43:07'
  message: 介绍的十分详细，对我帮助很大，感谢！
  postip: 117.173.1.154
  username: 来自四川绵阳的 Chrome 84.0|Windows 7 用户
- date: '2020-07-28 15:01:24'
  message: 感谢。
  postip: 42.120.75.157
  username: 来自浙江杭州的 Chrome 84.0|Windows 10 用户
- date: '2021-03-08 13:49:45'
  message: 太赞了
  postip: 114.247.175.196
  username: 来自北京的 Chrome 88.0|Mac 11.2 用户
- date: '2021-06-19 20:36:01'
  message: 有用。
  postip: 47.57.239.121
  username: 来自加拿大的 Chrome 91.0|Windows 10 用户
- date: '2021-07-02 14:07:40'
  message: 感谢大佬
  postip: 123.139.52.118
  username: 来自陕西西安的 Chrome 91.0|Windows 10 用户
- date: '2021-12-16 14:39:26'
  message: 感谢，有用
  postip: 180.168.7.90
  username: 来自上海的 Chrome 96.0|Windows 10 用户
- date: '2021-12-16 14:39:30'
  message: 感谢，有用
  postip: 180.168.7.90
  username: 来自上海的 Chrome 96.0|Windows 10 用户
- date: '2023-03-14 10:06:11'
  message: 感谢
  postip: 112.87.248.113
  username: 来自江苏苏州的 Chrome 109.0|Windows 7 用户
- date: '2023-05-24 17:06:07'
  message: 写的真好
  postip: 221.232.107.94
  username: 来自湖北武汉的 Chrome 113.0|Windows 10 用户
- date: '2023-05-24 17:06:08'
  message: 写的真好
  postip: 221.232.107.94
  username: 来自湖北武汉的 Chrome 113.0|Windows 10 用户
count:
  commentnum: 11
  favtimes: 3
  likes: 0
  sharetimes: 1
  viewnum: 67041
date: '2018-11-04 00:20:35'
editorchoice: false
excerpt: tcpdump 是一款灵活、功能强大的抓包工具，能有效地帮助排查网络故障问题。
fromurl: https://opensource.com/article/18/10/introduction-tcpdump
id: 10191
islctt: true
largepic: /data/attachment/album/201811/04/002029aif53buzlzlrbei2.jpg
permalink: /article-10191-1.html
pic: /data/attachment/album/201811/04/002029aif53buzlzlrbei2.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: tcpdump 是一款灵活、功能强大的抓包工具，能有效地帮助排查网络故障问题。
tags:
- tcpdump
thumb: false
title: 在 Linux 命令行中使用 tcpdump 抓包
titlepic: true
translator: jrglinux
updated: '2018-11-04 00:20:35'
---
> 
> `tcpdump` 是一款灵活、功能强大的抓包工具，能有效地帮助排查网络故障问题。
> 
> 
> 
![](/data/attachment/album/201811/04/002029aif53buzlzlrbei2.jpg)
以我作为管理员的经验，在网络连接中经常遇到十分难以排查的故障问题。对于这类情况，`tcpdump` 便能派上用场。
`tcpdump` 是一个命令行实用工具，允许你抓取和分析经过系统的流量数据包。它通常被用作于网络故障分析工具以及安全工具。
`tcpdump` 是一款强大的工具，支持多种选项和过滤规则，适用场景十分广泛。由于它是命令行工具，因此适用于在远程服务器或者没有图形界面的设备中收集数据包以便于事后分析。它可以在后台启动，也可以用 cron 等定时工具创建定时任务启用它。
本文中，我们将讨论 `tcpdump` 最常用的一些功能。
### 1、在 Linux 中安装 tcpdump
`tcpdump` 支持多种 Linux 发行版，所以你的系统中很有可能已经安装了它。用下面的命令检查一下是否已经安装了 `tcpdump`：
```
$ which tcpdump
/usr/sbin/tcpdump
```
如果还没有安装 `tcpdump`，你可以用软件包管理器安装它。 例如，在 CentOS 或者 Red Hat Enterprise 系统中，用如下命令安装 `tcpdump`：
```
$ sudo yum install -y tcpdump
```
`tcpdump` 依赖于 `libpcap`，该库文件用于捕获网络数据包。如果该库文件也没有安装，系统会根据依赖关系自动安装它。
现在你可以开始抓包了。
### 2、用 tcpdump 抓包
使用 `tcpdump` 抓包，需要管理员权限，因此下面的示例中绝大多数命令都是以 `sudo` 开头。
首先，先用 `tcpdump -D` 命令列出可以抓包的网络接口：
```
$ sudo tcpdump -D
1.eth0
2.virbr0
3.eth1
4.any (Pseudo-device that captures on all interfaces)
5.lo [Loopback]
```
如上所示，可以看到我的机器中所有可以抓包的网络接口。其中特殊接口 `any` 可用于抓取所有活动的网络接口的数据包。
我们就用如下命令先对 `any` 接口进行抓包：
```
$ sudo tcpdump -i any
tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
listening on any, link-type LINUX_SLL (Linux cooked), capture size 262144 bytes
09:56:18.293641 IP rhel75.localdomain.ssh > 192.168.64.1.56322: Flags [P.], seq 3770820720:3770820916, ack 3503648727, win 309, options [nop,nop,TS val 76577898 ecr 510770929], length 196
09:56:18.293794 IP 192.168.64.1.56322 > rhel75.localdomain.ssh: Flags [.], ack 196, win 391, options [nop,nop,TS val 510771017 ecr 76577898], length 0
09:56:18.295058 IP rhel75.59883 > gateway.domain: 2486+ PTR? 1.64.168.192.in-addr.arpa. (43)
09:56:18.310225 IP gateway.domain > rhel75.59883: 2486 NXDomain* 0/1/0 (102)
09:56:18.312482 IP rhel75.49685 > gateway.domain: 34242+ PTR? 28.64.168.192.in-addr.arpa. (44)
09:56:18.322425 IP gateway.domain > rhel75.49685: 34242 NXDomain* 0/1/0 (103)
09:56:18.323164 IP rhel75.56631 > gateway.domain: 29904+ PTR? 1.122.168.192.in-addr.arpa. (44)
09:56:18.323342 IP rhel75.localdomain.ssh > 192.168.64.1.56322: Flags [P.], seq 196:584, ack 1, win 309, options [nop,nop,TS val 76577928 ecr 510771017], length 388
09:56:18.323563 IP 192.168.64.1.56322 > rhel75.localdomain.ssh: Flags [.], ack 584, win 411, options [nop,nop,TS val 510771047 ecr 76577928], length 0
09:56:18.335569 IP gateway.domain > rhel75.56631: 29904 NXDomain* 0/1/0 (103)
09:56:18.336429 IP rhel75.44007 > gateway.domain: 61677+ PTR? 98.122.168.192.in-addr.arpa. (45)
09:56:18.336655 IP gateway.domain > rhel75.44007: 61677* 1/0/0 PTR rhel75. (65)
09:56:18.337177 IP rhel75.localdomain.ssh > 192.168.64.1.56322: Flags [P.], seq 584:1644, ack 1, win 309, options [nop,nop,TS val 76577942 ecr 510771047], length 1060
---- SKIPPING LONG OUTPUT -----
09:56:19.342939 IP 192.168.64.1.56322 > rhel75.localdomain.ssh: Flags [.], ack 1752016, win 1444, options [nop,nop,TS val 510772067 ecr 76578948], length 0
^C
9003 packets captured
9010 packets received by filter
7 packets dropped by kernel
$
```
`tcpdump` 会持续抓包直到收到中断信号。你可以按 `Ctrl+C` 来停止抓包。正如上面示例所示，`tcpdump` 抓取了超过 9000 个数据包。在这个示例中，由于我是通过 `ssh` 连接到服务器，所以 `tcpdump` 也捕获了所有这类数据包。`-c` 选项可以用于限制 `tcpdump` 抓包的数量：
```
$ sudo tcpdump -i any -c 5
tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
listening on any, link-type LINUX_SLL (Linux cooked), capture size 262144 bytes
11:21:30.242740 IP rhel75.localdomain.ssh > 192.168.64.1.56322: Flags [P.], seq 3772575680:3772575876, ack 3503651743, win 309, options [nop,nop,TS val 81689848 ecr 515883153], length 196
11:21:30.242906 IP 192.168.64.1.56322 > rhel75.localdomain.ssh: Flags [.], ack 196, win 1443, options [nop,nop,TS val 515883235 ecr 81689848], length 0
11:21:30.244442 IP rhel75.43634 > gateway.domain: 57680+ PTR? 1.64.168.192.in-addr.arpa. (43)
11:21:30.244829 IP gateway.domain > rhel75.43634: 57680 NXDomain 0/0/0 (43)
11:21:30.247048 IP rhel75.33696 > gateway.domain: 37429+ PTR? 28.64.168.192.in-addr.arpa. (44)
5 packets captured
12 packets received by filter
0 packets dropped by kernel
$
```
如上所示，`tcpdump` 在抓取 5 个数据包后自动停止了抓包。这在有些场景中十分有用 —— 比如你只需要抓取少量的数据包用于分析。当我们需要使用过滤规则抓取特定的数据包（如下所示）时，`-c` 的作用就十分突出了。
在上面示例中，`tcpdump` 默认是将 IP 地址和端口号解析为对应的接口名以及服务协议名称。而通常在网络故障排查中，使用 IP 地址和端口号更便于分析问题；用 `-n` 选项显示 IP 地址，`-nn` 选项显示端口号：
```
$ sudo tcpdump -i any -c5 -nn