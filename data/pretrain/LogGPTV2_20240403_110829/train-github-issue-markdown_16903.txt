### Describe the bug
`custom_op` usage leads to duplicated entries in query cache.
I have found this issue by discovering a memory leak in my application. We
have big queries with size `~1 Mb` and with default `query_cache_size=500` it
leads to cases when application consumes `500+ Mb` after some time.
### Optional link from https://docs.sqlalchemy.org which documents the
behavior that is expected
_No response_
### SQLAlchemy Version in Use
2.0.6
### DBAPI (i.e. the database driver)
any
### Database Vendor and Major Version
any
### Python Version
3.11
### Operating system
any
### To Reproduce
    from sqlalchemy import select, literal, create_engine
    engine = create_engine("postgresql://postgres:postgres@localhost:5432/postgres")
    def main() -> None:
        with engine.connect() as conn:
            for _ in range(10):
                query = select(literal(1).op("+")(literal(1)))
                conn.execute(query)
        print(len(engine._compiled_cache))
        for entry in engine._compiled_cache.items():
            print(entry)
    if __name__ == "__main__":
        main()
### Error
Will print 10 instead of 1:
    10
    (, ('0', , '_raw_columns', (('1', , 'left', ('2', , (,), '3', False), 'right', ('4', , (,), '5', False), 'operator', , 'type', (,)),), '_label_style', , '_compile_options', (, ())), (), False, False) SELECT %(param_1)s + %(param_2)s AS anon_1
    (, ('0', , '_raw_columns', (('1', , 'left', ('2', , (,), '3', False), 'right', ('4', , (,), '5', False), 'operator', , 'type', (,)),), '_label_style', , '_compile_options', (, ())), (), False, False) SELECT %(param_1)s + %(param_2)s AS anon_1
    (, ('0', , '_raw_columns', (('1', , 'left', ('2', , (,), '3', False), 'right', ('4', , (,), '5', False), 'operator', , 'type', (,)),), '_label_style', , '_compile_options', (, ())), (), False, False) SELECT %(param_1)s + %(param_2)s AS anon_1
    (, ('0', , '_raw_columns', (('1', , 'left', ('2', , (,), '3', False), 'right', ('4', , (,), '5', False), 'operator', , 'type', (,)),), '_label_style', , '_compile_options', (, ())), (), False, False) SELECT %(param_1)s + %(param_2)s AS anon_1
    (, ('0', , '_raw_columns', (('1', , 'left', ('2', , (,), '3', False), 'right', ('4', , (,), '5', False), 'operator', , 'type', (,)),), '_label_style', , '_compile_options', (, ())), (), False, False) SELECT %(param_1)s + %(param_2)s AS anon_1
    (, ('0', , '_raw_columns', (('1', , 'left', ('2', , (,), '3', False), 'right', ('4', , (,), '5', False), 'operator', , 'type', (,)),), '_label_style', , '_compile_options', (, ())), (), False, False) SELECT %(param_1)s + %(param_2)s AS anon_1
    (, ('0', , '_raw_columns', (('1', , 'left', ('2', , (,), '3', False), 'right', ('4', , (,), '5', False), 'operator', , 'type', (,)),), '_label_style', , '_compile_options', (, ())), (), False, False) SELECT %(param_1)s + %(param_2)s AS anon_1
    (, ('0', , '_raw_columns', (('1', , 'left', ('2', , (,), '3', False), 'right', ('4', , (,), '5', False), 'operator', , 'type', (,)),), '_label_style', , '_compile_options', (, ())), (), False, False) SELECT %(param_1)s + %(param_2)s AS anon_1
    (, ('0', , '_raw_columns', (('1', , 'left', ('2', , (,), '3', False), 'right', ('4', , (,), '5', False), 'operator', , 'type', (,)),), '_label_style', , '_compile_options', (, ())), (), False, False) SELECT %(param_1)s + %(param_2)s AS anon_1
    (, ('0', , '_raw_columns', (('1', , 'left', ('2', , (,), '3', False), 'right', ('4', , (,), '5', False), 'operator', , 'type', (,)),), '_label_style', , '_compile_options', (, ())), (), False, False) SELECT %(param_1)s + %(param_2)s AS anon_1
### Additional context
_No response_