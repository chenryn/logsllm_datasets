.TP
\fB-t \fItable\fB\fR
.TP
\fB--table=\fItable\fB\fR
 只输出表 \fItable\fR 的数据。 很可能是在不同模式里面有多个同名表；如果这样，那么所有匹配的表都将被转储出来。 同时声明 \fB--schema\fR 和 \fB--table\fR 则只选择一个表。
.sp
.RS
.B "Note:"
 注意:  在这个模式里，pg_dump 并不试图转储任何其它选定表可能依赖的数据库对象。 因此，系统不保证单一的一个表的转储就可以成功地恢复到一个干净的数据库中去。 
.RE
.sp
.TP
\fB-v\fR
.TP
\fB--verbose\fR
 声明冗余模式。 这样将令 pg_dump 在标准错误上打印进度信息。
.TP
\fB-x\fR
.TP
\fB--no-privileges\fR
.TP
\fB--no-acl\fR
 避免输出 ACL（赋予/撤消 命令）和表的所有者关系信息。
.TP
\fB-X use-set-session-authorization\fR
.TP
\fB--use-set-session-authorization\fR
 这个选项废弃了，保留它是为了向下兼容。 pg_dump 现在表现得总是想正式选取了这个选项一样。
.TP
\fB-X disable-triggers\fR
.TP
\fB--disable-triggers\fR
 这个选项只是和创建仅有数据的转储相关。它告诉 pg_dump  包含在恢复数据时，临时关闭目标表上面的触发器的命令。 如果你在表上有参考完整性检查或者其它触发器，而恢复数据的时候你不想重载他们，那么你就应该使用这个选项。
 目前，为 \fB--disable-triggers\fR 发出的命令必须用超级用户来做。 因此，你应该同时用 -S 声明一个超级用户名，或者最好是用一个超级用户的身份来启动这个生成的脚本。
 这个选项只对纯文本格式有意义。对于其它格式，你可以在调用 pg_restore 的时候声明这个选项。
.TP
\fB-Z \fI0..9\fB\fR
.TP
\fB--compress=\fI0..9\fB\fR
 声明在那些支持压缩的格式中使用的压缩级别。 （目前只有客户化格式支持压缩）。
.PP
.PP
 下面的命令行参数控制数据库为联接参数。
.TP
\fB-h \fIhost\fB\fR
.TP
\fB--host=\fIhost\fB\fR
 声明运行服务器的机器的主机名。 如果数值以斜扛开头，则它被用做到 Unix 域套接字的路径。 缺省是从 PGHOST 环境变量中取得的，如果设置了这个环境变量的话，否则，尝试一个 Unix 域套接字连接。
.TP
\fB-p \fIport\fB\fR
.TP
\fB--port=\fIport\fB\fR
 声明服务器正在侦听并等待联接的 TCP 端口或本地 Unix 主控套接字文件句柄。 缺省时使用环境变量 PGPORT 的值（如果存在），或者是编译时的缺省值。
.TP
\fB-U \fIusername\fB\fR
 以给出用户身分联接。
.TP
\fB-W\fR
 强制口令提示。如果服务器需要口令认证，那么这个动作应该自动发生。
.PP
.SH "ENVIRONMENT 环境"
.TP
\fBPGDATABASE\fR
.TP
\fBPGHOST\fR
.TP
\fBPGPORT\fR
.TP
\fBPGUSER\fR
 缺省连接参数
.SH "DIAGNOSTICS 诊断"
.PP
\fBpg_dump\fR 在内部使用 SELECT 语句。如果你运行 pg_dump 时碰到问题，确认你能够使用象  \fBpsql\fR(1) 这样的程序从数据库选取信息。
.SH "NOTES 注意"
.PP
 如果你的数据库给template1数据库增加了任何你自己的东西， 那么请注意把 pg_dump 的输出恢复到一个真正空的数据库中； 否则你可能会收到因为重复定义所追加的对象而造成的错误信息。要制作一个没有任何本地附属物的数据库， 可以从template0而不是template1拷贝，比如：
.sp
.nf
CREATE DATABASE foo WITH TEMPLATE template0;
.sp
.fi
.PP
\fBpg_dump\fR 有几个限制：
.TP 0.2i
\(bu
 在转储一个表或者作为纯文本转储时，pg_dump 无法操作大对象。 大对象必须整数据库地使用非文本归档格式之一进行转储。
.TP 0.2i
\(bu
 在进行纯数据转储时，并且使用了选项 \fB--disable-triggers\fR  的时候，\fBpg_dump\fR 发出一些查询先关闭在用户表上面的触发器， 然后插入数据，数据插入完成后再发出查询打开触发器。 如果恢复动作在中间停止，那么系统表可能就会处于一种错误状态。
.PP
.PP
 tar 归档的成员的大小限制于 8 GB。（这个限制是 tar 文件格式的固有限制。） 因此这个格式无法用于那些一个表的大小超过这个尺寸的原文表现。 tar 归档和任何其它输出格式的总大小是不受限制的，只是可能会又操作系统的限制。
.PP
 恢复完之后，我们建议在每个已恢复的对象上运行 ANALYZE。 这样优化器就可以得到有用的统计。
.SH "EXAMPLES 例子"
.PP
 转储一个数据库：
.sp
.nf
$ \fBpg_dump mydb > db.out\fR
.sp
.fi
.PP
 重载这个数据库：
.sp
.nf
$ \fBpsql -d database -f db.out\fR
.sp
.fi
.PP
 输出一个叫 mydb 的包含BLOB  的数据库到一个 tar 文件：
.sp
.nf
$ \fBpg_dump -Ft -b mydb > db.tar\fR
.sp
.fi
.PP
 把这个数据库（连同BLOB）一起恢复到一个现有的叫 newdb 的数据库：
.sp
.nf
$ \fBpg_restore -d newdb db.tar\fR
.sp
.fi
.SH "HISTORY 历史"
.PP
\fBpg_dump\fR 工具最早出现在 Postgres95 版本 0.02。 非纯文本输出格式在 PostgreSQL 版本 7.1 时引入。
.SH "SEE ALSO 参见"
\fBpg_dumpall\fR(1), \fBpg_restore\fR(1), \fBpsql\fR(1)
.SH "译者"
.B Postgresql 中文网站
.B 何伟平 