title:Vehicle Self-Surveillance: Sensor-Enabled Automatic Driver Recognition
author:Ian D. Markwood and
Yao Liu
Vehicle Self-Surveillance: Sensor-Enabled Automatic
Driver Recognition
Ian D. Markwood
University of South Florida
4202 East Fowler Avenue
Tampa, FL 33620
PI:EMAIL
Yao Liu
University of South Florida
4202 East Fowler Avenue
Tampa, FL 33620
PI:EMAIL
ABSTRACT
Motor vehicles are widely used, quite valuable, and often
targeted for theft. Preventive measures include car alarms,
proximity control, and physical locks, which can be bypassed
if the car is left unlocked, or if the thief obtains the keys.
Reactive strategies like cameras, motion detectors, human
patrolling, and GPS tracking can monitor a vehicle, but may
not detect car thefts in a timely manner. We propose a fast
automatic driver recognition system that identiﬁes unautho-
rized drivers while overcoming the drawbacks of previous
approaches. We factor drivers’ trips into elemental driving
events, from which we extract their driving preference fea-
tures that cannot be exactly reproduced by a thief driving
away in the stolen car. We performed real world evaluation
using the driving data collected from 31 volunteers. Exper-
iment results show we can distinguish the current driver as
the owner with 97% accuracy, while preventing imperson-
ation 91% of the time.
CCS Concepts
•Security and privacy → Authentication; Access con-
trol; Authorization; Usability in security and privacy;
Keywords
behavioral biometrics; authentication; driving behavior mod-
eling
1.
INTRODUCTION
Motor vehicles are an integral part of modern society, pro-
viding for the largest portion of transportation enjoyed by
individuals in developed countries. As such, they are also
quite valuable and the target of theft. In 2012, the Federal
Bureau of Investigations reported an estimated 721,053 ve-
hicles were stolen in the United States, 73.9% of them are
automobiles, costing more than $4.3 billion.
Indeed, only
11.9% of motor vehicle theft was cleared that year [1]. Los-
ing a car not only causes property loss for the car owner,
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
ASIA CCS ’16, May 30-June 03, 2016, Xi’an, China
c(cid:2) 2016 ACM. ISBN 978-1-4503-4233-9/16/05. . . $15.00
DOI: http://dx.doi.org/10.1145/2897845.2897917
but could also trigger lawsuits against the car owner. For
example, a legal case was reported by the media in 2009
where the owner of a stolen car was sued for the deaths of
two teenagers in a fatal hit-and-run accident [2].
In dealing with car thefts, both preventative and reactive
strategies have been used. Preventative measures like car
alarms, proximity control, and physical locking devices in-
tend to prevent access to a vehicle by unauthorized users.
Typical preventative methods can alert passers-by or the car
owner to a break-in, prevent ignition if the owner’s key fob
is not close to the vehicle, or deter the theft by adding extra
facilities like wheel locks. However, these methods can be
bypassed if circumstances or human error result in the car
being left unlocked, or the car keys are obtained by the thief.
Moreover, preventative methods are entirely ineﬀectual once
the car is stolen.
Reactive strategies monitor a vehicle or item of interest
but do not interact directly in its security. For example,
camera feeds must be continuously observed by humans to
detect theft, which is impractical for private security, so they
are mostly reviewed after the theft is discovered to identify
the thief.
It is normally infeasible for security guards in
apartment complexes, gated communities, or college or busi-
ness campuses to survey the entire grounds at once or recog-
nize a driver as having unauthorized access to one of many
vehicles there. Other monitoring concepts such as motion
sensors can suﬀer high false alarm rates for vehicles parked
outside amidst high human traﬃc. Finally, GPS-based car
services such as OnStar [3] or LoJack [4] may be used to
track a vehicle but again require the knowledge that it is
stolen. These assorted weaknesses of reactive strategies can
result in thefts that go unnoticed for hours. For example,
cars parked in neighborhoods at night may not be identiﬁed
as stolen until the next morning. Allowing the thief con-
trol of a vehicle for a long time may signiﬁcantly reduce the
chance of recovering it due to an increase in the risk of the
car being involved in a crime or disassembled in chop shops.
The aforementioned approaches have the common under-
lying limitation of reliance on the infallibility of the user
in handling the vehicle’s security (never leaving the car un-
locked and unattended, for example) and the timely discov-
ery of its potential theft. If both of these dependencies are
violated, these measures are completely defeated. In fact,
the United States National Highway Traﬃc Safety Admin-
istration reports “40-50% of vehicle theft is due to driver
error” [5]. The ideal design of a security mechanism must
forgo assuming these impossibilities and instead detect and
notify the owner of the car theft as early as possible.
425An intuitive way to achieve this goal is to enforce pass-
words in car systems, with incorrect password inputs trig-
gering an alert to the car owner. However, this strategy has
its own drawbacks. First, the dashboards and control panels
of all existing car models are located in the front of a car.
It is therefore easy to carry out shoulder surﬁng attacks
where passengers may purposefully or inadvertently catch
the password typed by the driver. Secondly, as indicated
in [6], passwords are susceptible to smudge attacks, wherein
the attacker may put together the oil residue of recent ﬁnger
smudges left on the touch screen to infer the password. A
third issue is that passwords can reduce the system’s usabil-
ity, because the car owner has to memorize a password and
change it periodically to maintain security. Then, whenever
the user needs to drive the car, he has to provide a correct
password, which, because inconvenient, can motivate a user
to disable the password function.
In contrast, we propose an automatic driver recognition
system that does not require any interaction between the
user and the car after the initial setup. Our basic idea is
to utilize driving behavior, which cannot be precisely repro-
duced by a thief driving away in the stolen car. This pre-
cludes the necessity for human discovery of theft, instead
monitoring for unauthorized use continually. Furthermore,
authorization is passive, so a user is not required to perform
any additional, potentially annoying action upon car entry
before every drive. This is important due to the propensity
of users to brush aside new security measures which require
additional eﬀort.
We identiﬁed two guiding principles upon which we built
our system. First, we should observe the existence of per-
sonal and quantiﬁable driving preferences. But more im-
portantly, drivers have varying amounts of control over how
much of their own driving preferences they can apply to each
of the several driving events involved with any use of a car.
Secondly, drivers behave diﬀerently when traveling at diﬀer-
ent magnitudes of speed. These principles will be explained
in further detail later, as we evaluate the eﬃcacy of poten-
tial behavioral features, which said principles inspired. We
use the resulting eﬀective features to classify between users,
testing periodically over the beginning of each drive until a
prediction is made authorizing or un-authorizing the driver.
Unobservable, eﬃcient, and easily applied to existing vehi-
cles, this system can identify whether or not the driver of a
car is its owner, so that the owner may be quickly alerted
to a theft.
We performed real world evaluation using the driving data
collected from 31 volunteers. Our experiment results show
that the proposed system is suitable for driver identiﬁcation
and thereby authentication. It is capable of self-identiﬁcation,
that is, successfully distinguishing that the current driver is
the car owner, with 97% accuracy, while also preventing
impersonation 91% of the time. We show the eﬀects of a
varying training dataset size, ﬁnding that at minimum 25
minutes of city driving time is necessary in training to pro-
vide desirable accuracy in driver recognition. Likewise, the
required testing time is demonstrated to be within 25 min-
utes of city driving.
This paper has the following contributions: (1) we propose
an automatic driver recognition system for the fast detection
of car thefts; (2) we identify the eﬀective features that reﬂect
the unique driving preferences of a driver; (3) we propose an
online testing algorithm that accepts input data as it is col-
lected continuously and outputs a decision quickly; and (4)
we implement the proposed system and evaluate the perfor-
mance on a real-world data set collected from 31 volunteer
drivers.
2. RELATED WORK
Related work falls in the following areas.
2.1 Behavioral Authentication of Mobile De-
vices
The system proposed herein pertains to the ﬁeld of behav-
ioral biometrics, inspired by similar concepts applied to mo-
bile device security to identify devices as stolen before their
owners notice their absence. Integrating physiological bio-
metric sensing technology into phones is expensive and con-
sumes space - both important optimization factors - without
providing functionality improvements the typical user would
enjoy or wish to pay for, when compared with mobile GPUs
enabling more interesting video games. Furthermore, the
physical tests required to pass biometric scans can provide
good accuracy while being inconvenient and potentially still
spoofed. For example, iris scans can be very accurate [7] but
require good lighting and can even be spoofed by a high qual-
ity picture [8]. Meanwhile, ﬁngerprint scanners are popular
and generally eﬀective [9], but the Apple iPhone 5S ﬁnger-
print scanner has proved erratic [10], leading users to turn
oﬀ the feature. Similar trade oﬀs and problems are encoun-
tered with applying physiological biometrics to vehicles, so
behavioral biometrics employing existing sensors and new
software is an attractive alternative for both applications.
Accordingly, Shahzad et al. distinguish several features
of swiping gestures on touch screens which allowed them to
diﬀerentiate between 50 individuals with high accuracy as a
protocol for unlocking devices [6]. With a similar method
and similar high accuracy, but diﬀerent application, Li et al.
use gesture features to continuously re-authenticate through-
out usage of the device, denying further access if the gesture
behaviors change suddenly [11]. Several eﬀorts have also
been made in recognizing phone owners using their walking
signature [12] or by their typing habits [13] as measured by
the device’s accelerometer.
2.2 Modeling Driving Behavior
For safety applications, recent research has explored the
idea of driving behavior models, with individual endeavors
focusing on particular portions of driving habits. General
human decision making at unsigned intersections has been
simulated using hidden Markov models (HMMs), to predict
vehicle movements through those intersections and any con-
ﬂict involved [14]. Typical highway driving has been mod-
eled with probabilistic networks based on relative positions,
velocities, and accelerations of surrounding vehicles and also
some environmental variables, to inform decision making in
autonomous vehicles driving in human traﬃc [15]. Sathya-
narayana et al. illustrate distraction detection applications
to their work in drivers’ unique route recognition also using
HMMs built around traces of their typical maneuvers [16].
Behavior modeling and driver identiﬁcation in particular
has been achieved with a 76.8% rate of correct driver selec-
tion [17], for the purpose of tailoring an intelligent trans-
portation system (ITS) to augment the user’s driving with
adaptive cruise control or lane keeping, depending on how
much the user typically needs such assistance.
Identiﬁca-
426Drive 
input
Drive 
input
Preprocessing
Feature 
extraction
Fingerprint 
vector
Training
Preprocessing
Feature 
extraction
Test 
vector
Predictor
Test new 
block
Figure 1: System Design
Enough 
data
No
Yes
No
Pass
Alert
Yes
Authorized
Testing
tion helps here to avoid annoying the driver with too much
intervention or, by too little, allowing the driver to incur
danger. This is accomplished by performing spectral anal-
ysis of Gaussian mixture models consisting of gas pedal de-
pression statistics [17]. This research has been built upon
in expanding the application of ITSs in vehicles, as well as
work in autonomous vehicle safety, but no such driver iden-
tiﬁcation schemes have been applied to authentication and
car theft detection. Moreover the system we discuss involves
additional driving features and enjoys higher accuracy.
3. ATTACK MODEL
We assume an attacker has physical access to the vehicle
and the ability to start it and drive away. This means the
attacker has bypassed any car alarms and physical imped-
iments to accessing the vehicle and has not alerted anyone
to the theft. It is then possible to relocate the car to any
location to sell, scrap, or use in a crime. Selling and scrap-
ping are similar in that they typically involve anonymizing
the car’s hardware to prevent its identity being discoverable
in the future. Cars used in crimes are often subsequently
destroyed to erase any physical evidence the perpetrators
would leave inside, leading to insurance expenditure on the
part of the owner. Our system is designed to recognize its
host vehicle has been stolen, before such events can take
place, for a much higher likelihood of retrieval. Without
requiring user input or otherwise making itself known, it
continuously authenticates the driver as the vehicle is oper-
ated. Should the driver fail authentication, the appropriate
notiﬁcations are made to inform the owner of the car’s theft.
4. DESIGN GOALS
The following factors must be in place to ensure the au-
thentication system is eﬀective and usable.
• Persistence: Feature data should be collected and
analyzed throughout drive time, every instance the ve-
hicle is driven, to consistently protect against theft.
• Eﬃciency: A verdict on the legitimacy of the user
should be reached in a short period of time to ensure
recovery.
• Unobservability: Authentication should not require
conscious input from the driver nor should its opera-
tion be visible, to avoid annoying legitimate users or
alerting thieves.
• Practicality: Integration of this system should not
require extensive hardware or intensive labor so that
it may be employed cheaply and easily.
5. APPROACH
To accomplish these goals, we oﬀer the system design de-
scribed herein, which makes use of the understanding that
driving styles are unique to each person. Social preferences,
natural talent and interests, and economic constraints all
work to mold the set of places a particular person lives,
works, and recreates, and travel amongst these locations
forms a body of driving experience unique to that person.
This, coupled with the person’s typical mental focus while
driving and speciﬁc thresholds for risk tolerance and pa-
tience, results in a large variety of driving styles from which
any speciﬁc person can be distinguished. For example, ev-
ery driver has some magnitude of acceleration they typically
employ, as well as preferences on braking speed, cornering
speed, turn signal use, and coasting. Several of these are
encompassed in acceleration (negative and positive) data
which we use to create features for analysis.
With this concept, a simple extension of our system allows
for multiple legitimate users of one particular car. That is,
instead of comparing the current driver’s behavior to that
of a singular owner, it will compare to each of the own-
ers, to identify a match with any of the authorized users.
While not tested in this paper, we can extend this further
to address singular users whose behavior may be altered due
to extenuating circumstances. Individuals may behave dif-
ferently while accompanied by certain passengers or while
experiencing aﬀecting weather patterns. For example, a
teenager may drive more cautiously and conservatively with
parents than with friends, or an experienced driver may be-
have more cautiously during snowy weather than the sum-
mer. Of course we expect the former situation to be infre-
quent as the teenage years comprise a very small portion of
a person’s driving career, but many drivers do live in loca-
tions geographically predisposed to inclement weather. In
this case, a single user may train proﬁles respective to, say,
summer (normal) and winter (snow), in order to prevent ex-
cessive false alarms.
In general most driving is done as a
daily routine between the person’s home, occupation, and
427home again, with static passengers or usually none at all,
so for the scope of this research we focus on this scenario.
And in this scope, we prove it possible to perform driver
identiﬁcation for authentication.
Our system contains Training and Testing modules and
its architecture is presented in Figure 1.
5.1 Training Phase
We must ﬁrst gather some data of typical driving behav-
ior for a vehicle owner, to be ultimately compared to new
data for authentication purposes in future trips. This is the
training stage of our system, as illustrated in Figure 1, and
requires a minimum driving time to produce good accuracy
in authentication. In our experiment, we found that users
with up to two hours of driving time entertained the best
accuracy. In terms of convenience, the training data does
not need to be accumulated in one continuous drive, but
training should be accomplished in a short time frame after
installation for obvious security reasons. It should also in-
clude both city and highway driving for the most accurate
cross-section of the driver’s behavior. A speciﬁc discussion
on training time and its eﬀects on system accuracy is pre-
sented in Section 7: Evaluation.
The training phase begins by preprocessing all the data
collected by the user. This includes removing extreme (noise-
induced) values, normalization, and isolating important in-
formation that will drive the owner’s features. Preprocess-
ing steps are detailed in Section 6 on Driving Events and
Metrics. The features are then computed into the set of
probability distributions that make up the driver’s ﬁnger-
print vector. This serves as a basis for comparison when
testing future trips.
A driver’s habits should stay relatively static, but there
may be some few cases where they change over time. This
change could be catalyzed by an accident or close call for ex-
ample, where a driver might attempt to conform to a safer
driving paradigm thereafter which might have diﬀerent char-
acteristics compared to his previous behavior. A change
could also be a very slow unconscious one, where after some
time an impermissible frequency of false alarms could oc-
cur. Accordingly, the driver can reset and redo his training
to represent his current behavior.
5.2 Testing Phase
Intuitively, driver identiﬁcation accuracy will beneﬁt from
having as much available data as possible for comparison
against the ﬁngerprint vector. We use this type of retroac-
tive method in our oﬄine testing to determine which fea-
tures should be included in our ﬁngerprint and test vectors.
In practice, an online driver identiﬁcation system should ac-
tively process an incoming continuous data source, and wait-
ing until a trip is complete defeats the purpose. To detect an
unauthorized driver and recover a stolen car quickly, we need
to compare a test vector to the driver’s ﬁngerprint vector as
early as an appropriate amount of data is available. Accord-
ingly we design an algorithm that accepts the input data as
it is collected continuously and outputs a decision quickly.
This is accomplished by partitioning the data stream into
blocks to be tested sequentially as they arrive. This block
size should be long enough to provide suitable accuracy but
short enough to quickly return a result. A suitable block
size can be found empirically as we show in Section 7 on
Evaluation.
Fingerprint 
vector
Test 
vector
Dist 1
Dist 1
Dist 2
Dist 2
. . . . . .
Dist n
Dist n