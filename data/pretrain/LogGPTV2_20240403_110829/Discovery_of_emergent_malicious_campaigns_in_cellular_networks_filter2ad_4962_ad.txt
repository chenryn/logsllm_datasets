Items like a book
of the month club or magazine subscriptions are on oﬀer,
however the user must pay to participate in these services
in order to receive their free gift card. Further investigation
suggests that a signiﬁcant fraction of users who visit these
pages are automatically signed up for a premium rate ser-
vice that utilizes a short code appearing in our cluster. We
suspect that the step of entering a phone number and PIN
code triggers this sign up.
We can see from the clusters that spammers and the short
domains names are highly correlated, as are the short do-
main names and redirected domains. We also see that the
number of entities labelled as malicious over time increases.
We also observe in Figure 10 that the campaign loses its
power in early October. So the node which represents the
berr***ko.ru
65%
46%
67%
44%
53%
67%
43%
46%
2447******44.su
47%
41%
44%
41%
45%
85%
15%
43%
12%
11%
17%
10%
14%
10%
ANDR*********************AL.SU
46%
87%
sain****ys.co.uk
96%
44%
65%
81%
94%
100%
m**ro.co.uk
cou***su.com
61%
65%
88%
60%
92%
76%
74%
88%
94%
100%
socc****es.com
80%
70%
100%
89%
65%
96%
100%
65%
67%
89%
mesc**********no.fr
cora***ve.fr
67%
60%
73%
82%
76%
98%
71%
72%
89%
70%
73%
77%
75%
57%
66%
91%
74%
73%
81%
74%
62%
96%
56%
96%
62%
93%
75%
86%
85%
68%
86%
91%
65%
62%
55%
casi*******ss.fr
bric****ot.fr
75%
67%
77%
65%
90%
100%
inte*****he.com
70%
71%
86%
85%
75%
69%
72%
77%
88%
pcwo*********ss.co.uk
70%
50%
46%
72%
48%
47%
40%
auch*****ve.fr
47%
69%
77%
63%
47%
72%
red***on.at
56%
68%
56%
68%
chro*****ve.com
casi*****ve.fr
63%
13%
68%
71%
66%
77%
77%
red***on.fr
Figure 12: “NotCompatible” Android Trojan mal-
ware cluster.
(cid:2)(cid:13)(cid:8)(cid:16)(cid:14)(cid:10)(cid:8)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:9)(cid:7)(cid:19)(cid:16)(cid:10)(cid:18)(cid:20)(cid:19)(cid:15)(cid:8)(cid:6)(cid:18)(cid:9)(cid:17)(cid:21)(cid:17)(cid:19)(cid:1)(cid:1) (cid:24)(cid:26)(cid:26)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:24)(cid:26)(cid:26)(cid:21)(cid:17)(cid:19)(cid:1)(cid:1) (cid:3)(cid:9)(cid:16)(cid:16)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:11)(cid:14)(cid:21)(cid:16)(cid:19)(cid:1)(cid:1)
(cid:24)(cid:26)(cid:26)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:23)(cid:25)(cid:25)(cid:21)(cid:17)(cid:19)(cid:1)(cid:1) (cid:4)(cid:6)(cid:12)(cid:6)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:11)(cid:10)(cid:21)(cid:16)(cid:19)(cid:1)
(cid:2)(cid:13)(cid:8)(cid:16)(cid:14)(cid:10)(cid:8)(cid:7)(cid:12)(cid:14)(cid:19)(cid:8)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:19)(cid:15)(cid:8)(cid:6)(cid:18)(cid:9)(cid:21)(cid:17)(cid:19)(cid:1)
(cid:2)(cid:13)(cid:8)(cid:16)(cid:14)(cid:10)(cid:8)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:15)(cid:14)(cid:16)(cid:18)(cid:6)(cid:12)(cid:21)(cid:17)(cid:19)(cid:1)
(cid:24)(cid:26)(cid:25)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:25)(cid:25)(cid:26)(cid:21)(cid:17)(cid:19)(cid:1)(cid:1) (cid:5)(cid:6)(cid:16)(cid:16)(cid:22)(cid:22)(cid:22)(cid:22)(cid:22)(cid:11)(cid:14)(cid:21)(cid:16)(cid:19)(cid:1)
Figure 13: Three groups of suspicious newly cre-
ated domains, referred to as the Android security
updates set, the number set, and the “ru” set, are
highly correlated in one cluster.
premium number in previous ﬁgures disappeared from the
cluster because it got blocked by the service provider and
was not a high degree node any more.
4.2 NotCompatible Android Trojan
Suspicious cluster One of the clusters that the system
recently generated consists of a number of newly registered
domain names (colored green in Figure 12). Although none
of the domain names were found to be blacklisted anywhere,
a couple of observations make this cluster suspicious to a hu-
man analyst. First, some of the names of some newly created
domains (examples of suspicious domain names are shown in
Figure 13) seem suspicious because they are related to An-
droid security updates, but they are not related to Google
based on domain registration information. Another group
of domain names in this cluster consists purely numeric dig-
its. Finally, these two sets of domain names are correlated
in the mutual contacts graph, and the numeric domains are
also highly correlated with another group of newly created
domains, which end in .ru as the top level domain (Fig. 12).
Manual analysis Based on the observations above, this
cluster was suspicious enough to warrant manual analysis
by a human analyst. We discovered the following malicious
campaign.
1) Users receive an email spam, primarily spread from
hacked email accounts.
2) When a user clicks a URL in the spam from a browser
on a non-Android operating system (Windows, iOS, etc.),
the user is redirected to a fake Fox News weight loss article.
But an Android browser is redirected to a “Android security
36
(cid:4)(cid:10)(cid:2)(cid:5)(cid:7)(cid:2)(cid:6)(cid:4)(cid:5)(cid:6)(cid:1)
(cid:4)(cid:10)(cid:2)(cid:5)(cid:9)(cid:2)(cid:6)(cid:4)(cid:5)(cid:6)(cid:1)
(cid:4)(cid:10)(cid:2)(cid:6)(cid:8)(cid:2)(cid:6)(cid:4)(cid:5)(cid:6)(cid:1)
(cid:5)(cid:4)(cid:2)(cid:4)(cid:7)(cid:2)(cid:6)(cid:4)(cid:5)(cid:6)(cid:1)
Figure 10: Evolution of the giftcard scam cluster
the initial attack vector. Another limitation, inherent to
anomaly detection, is that if attack traﬃc increases in vol-
ume very slowly, it will not be caught and will eventually
be used as historical training data for a later testing time
window. Therefore very slow attacks can evade detection,
but would cost attackers extra resources as the attack is
slower and blacklists although lagging will eventually block
it. Finally, we do not address the legitimate app stores as a
source of the initial attack vector – the domain name associ-
ated with it would be whitelisted as an entity which receives
a large amount of traﬃc during the training phase – we be-
lieve keeping major app stores clean of malicious apps is a
problem that the owners of the app stores have a strong
incentive to enforce.
Future work. In future work, we plan to add additional
sources of side-information in characterizing clusters, in ad-
dition to looking for blacklisted entities. For example: the
age of domain names, phone numbers and short codes, infor-
mation extracted from whois queries on the domain names
in the cluster, etc. We also hope to perform a longitudi-
nal study and evaluate our performance against new mobile
threats as they occur. To further evaluate the eﬀectiveness
of our approach, it would be useful to have a careful long
term study of the impact on analysts of using our tool, com-
pared to using only existing tools. We are also interested
in applying our approach to the detection of PC botnets, to
help automate the correlation between fast ﬂux domains.
update” website to download an APK binary ﬁle. Depending
on the user’s Android OS Version and browser, the user is
or is not prompted about the APK download.
3) The APK ﬁle is a trojan and runs as a background ser-
vice. Once installed, the trojan acts as a proxy, thereby
allowing its owner to transmit and receive network data
through the infected device. The infected device persistently
connects to a C&C server to maintain the communication.
4) The numeric domains and .ru domains resolve to the
same set of IP addresses, which are where the C&C servers
are hosted.
We conﬁrmed that the cluster successfully renders a holis-
tic picture of the entire malicious botnet campaign. The
domain names in the URLs in spam emails, the websites
where the Android APK binaries were hosted (Android se-
curity update domains), and the ﬁnal C&C servers that the
malware made connections to (both the numeric domains
and the .ru domains), are all present in a single cluster.
5. LIMITATIONS AND FUTURE WORK
Limitations. There are a number of limitations of our
system. It does not deal with targeted or very small scale
attacks, which are signiﬁcantly harder to catch because they
do not create correlation patterns of the type we exploit to
build clusters. Our clusters also do not attempt to catch at-
tack campaigns that are based on a single malicious entity
(we believe this is somewhat unlikely in real campaigns).
Since we focus at the network layer, we would miss mali-
cious entities situated in the application layer such as using
a Twitter account for C&C although we could still detect
37
6. CONCLUSION
We have built a system that allows us to use cellular net-
work traﬃc to identify potential malicious campaigns. Our
system combined with additional outside data gives a holis-
tic view of the interconnected pieces of an attack campaign.
Our approach is a complementary layer of defense useful
in mitigating the eﬀectiveness of widespread attack cam-
paigns such as spam, premium number fraud, and malware.
By identifying all components of an attack campaign rather
than just the initial numbers sending spam, we can greatly
increase the cost to the attacker by not only shutting down
the spamming phone numbers, but also shutting down more
expensive resources such as premium shortcodes. By track-
ing attack nodes over time, we can eﬀectively identify any
resurrection of the same attack campaign unless an attacker
completely restarts with brand new numbers, domains, and
shortcodes, which would greatly raise the cost for attackers.
7. REFERENCES
[1] The spamhaus project. http://www.spamhaus.org/.
[2] Web of trust, safe browsing tool.
http://www.mywot.com/.
[3] Wikipedia article on mobile phone spam –
countermeasures. http://en.wikipedia.org/wiki/
Mobile_phone_spam#Countermeasures.
[4] Fortinet security blog: Zeus in the mobile (zitmo):
Online banking5. s two factor authentication defeated.
http://blog.fortinet.com/zeus-in-the-mobile-
zitmo-online-bankings-two-factor-
authentication-defeated/, Sept 2010.
[5] S21sec security blog: Zeus mitmo: Man-in-the-mobile.
http://securityblog.s21sec.com/2010/09/zeus-
mitmo-man-in-mobile-i.html, Sept 2010.
[6] Lookout security alert: Hacked websites serve
suspicious android apps.
https://blog.lookout.com/blog/2012/05/02/, May
2012.
[7] Blondel, V., Guillaume, J., Lambiotte, R., and
Lefebvre, E. Fast unfolding of communities in large
networks. In Journal of Statistical Mechanics: Theory
and Experiment (2008).
[8] Cortes, C., Pregibon, D., and Volinsky, C.
Communities of interest. In Proceedings of the 4th
International Conference on Advances in Intelligent
Data Analysis (London, UK, UK, 2001), IDA ’01,
Springer-Verlag, pp. 105–114.
[9] Coskun, B., Dietrich, S., and Memon, N. Friends
of an enemy: Identifying local members of
peer-to-peer botnets using mutual contacts. In In
Proc. of the 26 Annual Computer Security
Applications Conference (ACSAC) (2010).
[10] Coskun, B., and Giura, P. Mitigating SMS spam by
online detection of repetitive near-duplicate messages.
In IEEE ICC’12 Symposium on Communication and
Information Systems Security (2012).
[11] Dixit, S., Gupta, S., and Ravishankar, C. Lohit:
An online detection & control system for cellular sms
spam. In IASTED Communication, Network, and
Information Security (2005).
[12] Gu, G., Perdisci, R., Zhang, J., and Lee, W.
BotMiner: Clustering analysis of network traﬃc for
protocol- and structure-independent botnet detection.
In Proceedings of the 17th USENIX Security
Symposium (Security’08) (2008).
[13] Jiang, N., Jin, Y., Skudlark, A., Hsu, W.-L.,
Jacobson, G., Prakasam, S., and Zhang, Z.-L.
Isolating and analyzing fraud activities in a large
cellular network via voice call graph analysis. In
Proceedings of the 10th international conference on
Mobile systems, applications, and services (New York,
NY, USA, 2012), MobiSys ’12, ACM, pp. 253–266.
[14] Kr¨ugel, C., Toth, T., and Kirda, E. Service
speciﬁc anomaly detection for network intrusion
detection. In Proceedings of the 2002 ACM symposium
on Applied computing (New York, NY, USA, 2002),
SAC ’02, ACM, pp. 201–208.
[15] Lever, C., Antonakakis, M., Reaves, B.,
Traynor, P., and Lee., W. The core of the matter:
Analyzing malicious traﬃc in cellular carriers. In
Proceedings of the ISOC Network & Distributed
System Security Symposium (NDSS) (2013).
[16] Liu, J., Ke, H., and Zhang, G. Real-time sms
ﬁltering system based on bm algorithm. In
International Conference on Management and Service
Science (MASS), 2010 (2010).
[17] Lookout. Security alert: Spamsoldier.
http://goo.gl/t2oit.
[18] Lookout. You are a winner! or are you? the walmart
gift card scam. http://goo.gl/WX6ps.
[19] Security, L. M. Ggtracker technical tear down.
blog.lookout.com/wp-
content/uploads/2011/06/GGTracker-
Teardown\_Lookout-Mobile-Security.pdf, 2011.
[20] Sekar, R., Gupta, A., Frullo, J., Shanbhag, T.,
Tiwari, A., Yang, H., and Zhou, S.
Speciﬁcation-based anomaly detection: a new
approach for detecting network intrusions. In
Proceedings of the 9th ACM conference on Computer
and communications security (New York, NY, USA,
2002), CCS ’02, ACM, pp. 265–274.
[21] Sommer, R., and Paxson, V. Outside the closed
world: On using machine learning for network
intrusion detection. In Security and Privacy (SP),
2010 IEEE Symposium on (may 2010).
[22] Thottan, M., Liu, G., and Ji, C. Anomaly
detection approaches for communication networks. In
Algorithms for Next Generation Networks,
G. Cormode and M. Thottan, Eds., Computer
Communications and Networks. Springer London,
2010, pp. 239–261.
[23] Wang, C., Zhang, Y., Chen, X., Liu, Z., Shi, L.,
Chen, G., Qiu, F., Ying, C., and Lu, W. A
behavior-based sms antispam system. IBM J. Res.
Dev. 54 (November 2010).
[24] Wolda, H. Similarity indices, sample size and
diversity. Oecologia 50, 3 (1981), 296–302.
[25] Yen, T.-F., and Reiter, M. K. Traﬃc aggregation
for malware detection. In DIMVA ’08: Proceedings of
the 5th international conference on Detection of
Intrusions and Malware, and Vulnerability Assessment
(2008).
[26] Zhou, Y., and Jiang, X. Dissecting android
malware: Characterization and evolution. In IEEE
Symposium on Security and Privacy (2012).
38