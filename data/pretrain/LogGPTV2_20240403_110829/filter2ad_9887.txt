# 【技术分享】针对PayPal子域存储型XSS的研究（下）

#### 译文声明
本文为翻译文章，原文来源于firstsight.me。译文仅供参考，具体表达和含义请以原文为准。

- 译者：[WisFree](http://bobao.360.cn/member/contribute?uid=2606963099)
- 预估稿费：200RMB
- 投稿方式：发送邮件至linwei#360.cn 或登录网页版在线投稿

**传送门**
- [【技术分享】针对PayPal子域存储型XSS的研究（上）](http://bobao.360.cn/learning/detail/4706.html)

---

### 写在前面的话
在本系列的前一篇文章中，我们探讨了PayPal品牌中心及技术支持门户中的存储型跨站脚本(XSS)漏洞。接下来，我们将深入讨论如何利用这些漏洞，特别是通过PayPal品牌中心的身份验证机制中的弱点，结合“文件名注入”技术，将Self-XSS转换为非Self型存储型XSS。如需进一步了解，请访问作者的Twitter主页或通过电子邮件联系他。
- Twitter: @YoKoAcc
- 电子邮箱: [PI:EMAIL](mailto:PI:EMAIL)

### PoC
由于PayPal遇到的这个XSS漏洞属于self-XSS类型，因此我们的PoC可能与其他类型的XSS有所不同。为了清晰说明攻击流程，我们使用简单的图表来辅助解释。

#### PayPal技术支持门户的PoC
已知该门户的身份验证机制存在安全缺陷，允许任何匿名用户冒充注册用户提交内容，前提是知道一个有效的注册邮箱地址。攻击者可利用此漏洞创建新工单并上传恶意.svg文件触发XSS。鉴于这是一个存储型XSS漏洞，只有当目标用户打开特定工单时，攻击才会成功。值得注意的是，提交工单功能缺乏验证码保护，使得攻击者能够自动化测试邮箱列表。

**注意**: 这种设计可能是PayPal出于业务考虑有意为之；尽管如此，他们已经修复了其中的XSS漏洞，但尚未对工单提交过程做出调整。

在展示具体的攻击步骤之前，让我们先了解一下整体流程。图示如下：
![攻击流程](https://example.com/attack_flow.png)

这里的关键点在于，攻击者填写的目标邮箱必须是真实的PayPal支持账户。随后，上传包含恶意脚本的.svg文件（SVG是一种基于XML定义的二维矢量图形格式）。需要注意的是，网站禁止直接上传.svg文件，故需要将其扩展名更改为允许的格式（例如.png），并通过修改Content-Type绕过客户端检查。

一旦.svg文件上传成功，攻击者只需等待目标用户打开相关工单即可完成攻击。

#### PayPal品牌中心的PoC
类似地，PayPal品牌中心也存在身份验证问题，即任何匿名用户只要知晓目标用户的注册邮箱即可向其发送工单。以下是整个过程的简化版本：

1. 若账号存在，则跳转到无需密码的任务单提交页面。
2. 若账号不存在，则按常规流程注册新账号。

攻击者同样采用与上述相同的策略——无需登录即可提交工单，并通过更改上传文件名触发XSS。具体而言，在拦截请求后，将文件名替换为恶意脚本代码。考虑到某些字符限制（如`.`、`"`、`/` 和 `=`），实际Payload可能需要进行相应调整。

最终，当目标用户查看工单时，浏览器会执行嵌入文件名中的JavaScript代码，从而实现攻击。

### 结语
对于像PayPal这样的行业领导者来说，确保客户数据的安全至关重要。然而，面对庞大且复杂的系统，即使是最优秀的安全团队也可能难以全面覆盖每一个潜在风险点。因此，当你向企业报告漏洞时，请确保提供详尽的信息以及可操作的PoC和视频演示，这将有助于加速问题解决进程。