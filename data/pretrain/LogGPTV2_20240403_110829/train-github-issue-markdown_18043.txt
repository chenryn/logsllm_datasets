##### System information (version)
  * OpenCV => 4.1.1
  * Operating System / Platform => Windows 64 Bit
  * Compiler => Visual Studio 2017
  * Inference engine 2019.2.275
##### Detailed description
I used the version of script currently available in the master branch. My
model was generated with TF 1.14 and is a ssd mobilenet v2 network. The first
image is the result of the inference using the intel inference engine with the
optimized version of the net. It is correct (icons should be detected) and
similar to what is detected using TF. On the right, the detection using the
pbtxt file with OpenCV backend (same result with IE), which is clearly wrong.
![image](https://user-
images.githubusercontent.com/5644940/65950815-1f41f680-e43f-11e9-8443-1d20cac35d6a.png)
![image](https://user-
images.githubusercontent.com/5644940/65950677-d4c07a00-e43e-11e9-88cc-16d5298da4b7.png)
Files:  
inference.zip
##### Steps to reproduce
    python ~/opencv/samples/dnn/tf_text_graph_ssd.py --input frozen_inference_graph.pb --config pipeline.config --output graph.pbtxt
Output:  
Scale: [0.050000-0.500000]  
Aspect ratios: [1.0, 3.0, 10.0]  
Reduce boxes in the lowest layer: True  
Number of classes: 6  
Number of layers: 6  
box predictor: convolutional  
Input image size: 800x800
Steps for getting optimized model:
    python ~/openvino_2019.2.275/deployment_tools/model_optimizer/mo_tf.py --input_model frozen_inference_graph.pb --tensorflow_use_custom_operations_config ~/openvino_2019.2.275/deployment_tools/model_optimizer/extensions/front/tf/ssd_support_api_v1.14.json --tensorflow_object_detection_api_pipeline_config pipeline.config --input_shape [1,800,800,3]