title:RPKI is Coming of Age: A Longitudinal Study of RPKI Deployment
and Invalid Route Origins
author:Taejoong Chung and
Emile Aben and
Tim Bruijnzeels and
Balakrishnan Chandrasekaran and
David R. Choffnes and
Dave Levin and
Bruce M. Maggs and
Alan Mislove and
Roland van Rijswijk-Deij and
John P. Rula and
Nick Sullivan
RPKI is Coming of Age
A Longitudinal Study of RPKI Deployment and Invalid Route Origins
Taejoong Chung
Rochester Institute of Technology
Balakrishnan Chandrasekaran
Max Planck Institute for Informatics
Bruce M. Maggs
Duke University and
Akamai Technologies
Emile Aben
RIPE NCC
David Choffnes
Northeastern University
Alan Mislove
Northeastern University
Tim Bruijnzeels
NLNetLabs
Dave Levin
University of Maryland
Roland van Rijswijk-Deij
University of Twente and
NLNetLabs
John Rula
Akamai Technologies
Nick Sullivan
Cloudflare
ABSTRACT
Despite its critical role in Internet connectivity, the Border Gateway
Protocol (BGP) remains highly vulnerable to attacks such as prefix
hijacking, where an Autonomous System (AS) announces routes
for IP space it does not control. To address this issue, the Resource
Public Key Infrastructure (RPKI) was developed starting in 2008,
with deployment beginning in 2011. This paper performs the first
comprehensive, longitudinal study of the deployment, coverage,
and quality of RPKI.
We use a unique dataset containing all RPKI Route Origin Autho-
rizations (ROAs) from the moment RPKI was first deployed, more
than 8 years ago. We combine this dataset with BGP announce-
ments from more than 3,300 BGP collectors worldwide. Our analysis
shows the after a gradual start, RPKI has seen a rapid increase in
adoption over the past two years. We also show that although
misconfigurations were rampant when RPKI was first deployed
(causing many announcements to appear as invalid) they are quite
rare today. We develop a taxonomy of invalid RPKI announcements,
then quantify their prevalence. We further identify suspicious an-
nouncements indicative of prefix hijacking and present case studies
of likely hijacks.
Overall, we conclude that while misconfigurations still do oc-
cur, RPKI is “ready for the big screen,” and routing security can
be increased by dropping invalid announcements. To foster repro-
ducibility and further studies, we release all RPKI data and the tools
we used to analyze it into the public domain.
Permission to make digital or hard copies of all or part of this
work for personal or classroom use is granted without fee provided
that copies are not made or distributed for profit or commercial
advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned
by others than ACM must be honored. Abstracting with credit is
permitted. To copy otherwise, or republish, to post on servers or to
redistribute to lists, requires prior specific permission and/or a fee.
Request permissions from permissions@acm.org.
IMC ’19, October 21–23, 2019, Amsterdam, Netherlands
© 2019 Association for Computing Machinery.
ACM ISBN 978-1-4503-6948-0/19/10...$15.00
https://doi.org/10.1145/3355369.3355596
1
1 INTRODUCTION
The Border Gateway Protocol (BGP) is the mechanism that allows
routers to construct routing tables across the Internet. Unfortu-
nately, the original BGP protocol lacked many security features
(e.g., authorization of IP prefix announcements), making BGP vul-
nerable to attacks such as prefix hijacking [3, 5, 7, 14] and route
leaks [5]. To defend against these threats, the Resource Public Key
Infrastructure (RPKI) was developed in April 2008 as part of the
IETF in the SIDR Working Group [54]. Beta deployments followed
in the years after, until all Regional Internet Registries (RIRs) started
production deployment of RPKI in January 2011.
At its core, RPKI is a hierarchical Public Key Infrastructure (PKI)
that binds Internet Number Resources (INRs) such as Autonomous
System Numbers (ASNs) and IP addresses to public keys via cer-
tificates. The corresponding private keys can be used by certificate
holders to make attestations about these INRs—most importantly,
Route Origin Authorization (ROA) objects. ROAs allow a certificate
holder to authorize an ASN to announce certain IP prefixes, and are
signed using the private key of a certificate covering the IP space.
Each of the five RIRs operate their own RPKI trust anchor (equiv-
alent to a root certificate in other PKIs), the private key of which is
used to sign such certificates. The RIRs also offer hosted services
to their members, enabling them to obtain RPKI certificates and
generate ROAs.
RPKI objects including certificates, ROAs, and supporting struc-
tures such as manifests and certificate revocation lists (CRLs) are
published in so-called RPKI repositories. RPKI validation software—
called Relying Party (RP) software—retrieves objects from these
repositories and performs cryptographic validation of the content,
ultimately producing a set of valid ROAs. A validating router can
then use this set to verify incoming BGP announcements. If the
router finds a BGP announcement to be in conflict with the set of
valid ROAs, it should reject the announcement as (by definition)
the origin AS is not authorized to announce the IP prefix(es).
While RPKI sounds straightforward, in practice it can be complex,
creating many opportunities for mistakes. For example, an AS may
sub-allocate an IP prefix to a customer AS without updating its
ROAs or mistakenly include the wrong range of IP prefixes in a
ROA, thus accidentally making its announcements invalid. If such
mistakes are pervasive, a validating router cannot rely on RPKI
validation to drop invalid routes, as doing so might have too great
of an impact on valid traffic. Such mistakes would weaken the basis
of RPKI and may hamper adoption of RPKI.
While past studies [25, 43, 58] have looked at snapshots in time
of various aspects of the RPKI ecosystem, little is known about how
RPKI has developed since its inception in 2011. This situation makes
it hard to draw conclusions about the quality of RPKI data and the
viability of actually relying on RPKI to filter invalid announcements.
In this study, we aim to change this situation by taking a longer view.
Using a unique dataset covering all RPKI data published by the RIRs
on a daily basis since its early origins in 2011 (even before its full
standardization), we study over eight years of RPKI data, combined
with publicly available data on BGP announcements covering the
same period. We augment this dataset with more detailed BGP data
from a large CDN from 2017 until the present day to understand
the impact of RPKI validation on an operator. With this dataset,
we present a comprehensive study of how the RPKI ecosystem has
evolved and what fraction of BGP announcements today are actually
verifiable using RPKI. We look at common misconfigurations of
RPKI, and how these affect the validity of BGP announcements.
We also examine whether RPKI meets its goal of preventing the
acceptance of intentionally malicious announcements. Our main
findings and contributions are as follows:
• We perform the first, detailed day-to-day longitudinal study of
RPKI in the context of real-world routing data;
• We study the pervasiveness of common misconfigurations and
how these develop over time;
• We attempt to isolate intentional malicious announcements by
filtering out common misconfigurations;
• We show that, today, RPKI is ready for “the big screen” and can
safely be used to filter invalid announcements.
To foster reproducibility and further research into the RPKI
ecosystem, we publicly release all of our analysis code and data
(where possible1) to the research community at
https://rpki-study.github.io
The remainder of this paper is organized as follows. Section 2 pro-
vides background on RPKI objects and the Route Origin Validation
process as well as the related work. Section 3 describes our dataset
for this study, and Section 4 shows how RPKI has been deployed
since its launch. Sections 5 and 6 examine why and how some
BGP announcements are RPKI invalid. Sections 7 and 8 provide a
concluding discussion and future work.
2 BACKGROUND AND RELATED WORK
In this section, we provide background information on RPKI and
give an overview of related work.
1Our Akamai dataset is provided under agreement with Akamai;
we are not permitted to release this data. However, we provide links
for the other two sources and also provide a link for RPKI objects
where other researchers can obtain access themselves.
2
Figure 1: Organization of the RPKI repositories
2.1 BGP
Interdomain routers use the Border Gateway Protocol (BGP) to
establish routing tables. In brief, BGP speakers announce paths
to destination IP prefixes through a series of ASes. Simplifying
somewhat, an example BGP announcement looks like the following:
129.21.0.0/16, AS PATH: AS3549 AS3356 AS4385
This announcement advertises a path to the IP prefix
129.21.0.0/16 through the three ASes listed. Routers pro-
cess announcements and withdrawals from peers in order to
maintain routing tables, and generally pick the most specific prefix
in their table when choosing how to forward a packet.
The original BGP protocol lacked many security features, open-
ing the door to a number of attacks. First, a malicious AS could make
an announcement for an IP prefix that it did not own, which would
cause some of the traffic for that IP prefix to be sent to it; this attack
is called prefix hijacking. Second, a malicious AS could make a more
specific announcement than the originator’s prefix for an IP prefix
it did not own (e.g., announcing 129.21.128.0/17 in the example
above). Because routers will pick the most specific prefix when
forwarding traffic, all traffic for that IP prefix will be forwarded to
the malicious AS; this attack is called sub-prefix hijacking. These
attacks have occurred with frequency in practice, with significant
effects for the attacked IP prefix holders [3, 5, 7, 14].
2.2 RPKI Objects
RPKI [33] is a public key infrastructure designed as an out-of-band
system to help prevent BGP address prefix (and sub-prefix) hijack-
ing attacks. Briefly, RPKI employs cryptographic signatures to limit
the set of entities who can announce IP prefixes. There are multiple
types of supporting objects in the core RPKI system; the two we
use in this paper are:
(1) a CA certificate, which binds a set of Internet Number Re-
sources (INRs) such as Autonomous System Numbers (ASNs)
and IP prefixes to a public key;
(2) a Route Origin Authorization (ROA), which authorizes an
AS to announce certain IP prefixes and is signed by a CA
certificate.
These objects are all published in public RPKI repositories oper-
ated by the Regional Internet Registries (RIRs). Figure 1 shows how
these repositories are organised. Each RIR has a separate hierarchy
AFRINICLACNICAPNICARINRIPE NCCNIRNational Internet RegistriesMembersCustomersRegional Internet RegistriesROAsCertificatesstarting at its trust anchor and certificate [28, 33]. These trust an-
chors are each owned by an RIR and are akin to root certificates
in other PKIs. The trust anchors are used to sign CA certificates
for each RIR’s members so that the members can make different
kinds of assertions. In some regions (currently the LACNIC and
APNIC regions) there is sometimes an intermediate level at a Na-
tional Internet Registry (NIR). Equally, RIR or NIR members can
also delegate resources to their customers (as shown in Figure 1).
The most important assertion a resource holder can make is
a Route Origin Authorization (ROA), which authorizes an AS to
advertise IP prefixes through BGP. An ROA is a signed attestation
that the holder of a set of IP prefixes has authorized a single AS to
originate routes for those prefixes.2 Thus, it contains a single ASN
and (multiple) IP prefixes with their prefix lengths, which the AS is
authorized to announce.3
2.3 Max-Length
An AS may wish to de-aggregate an allocated IP prefix into mul-
tiple so-called sub-prefixes. For example, AS 4385 may wish to
de-aggregate its prefix 129.21.0.0/16 into multiple /20 blocks
(e.g., 129.21.0.0/20) for their own purposes (fine-grained traffic
control, assignment to customers, etc). In the protocol described
thus far, the AS would have to create and sign a ROA containing
each of the sub-prefixes:
129.21.0.0/20, AS 4385
…
129.21.240.0/20, AS 4385
Alternatively, the AS can use the MaxLength attribute [34] in the
ROA, which specifies the longest prefix length for the authorized
IP prefix that the AS may announce. Continuing with the example,
the AS could instead sign a single ROA:
ROA: 129.21.0.0/16-20, AS 4385
that would authorize AS 4385 to announce any of the sub-prefixes
of 129.21.0.0/16 in CIDR blocks of length between /16 and /20.
The MaxLength attribute is therefore efficient, as it acts as a
macro that allows a single ROA to match many sub-prefixes. Those
sub-prefixes that are not actually advertised, however, but matched
by the ROA can be vulnerable to forged-origin sub-prefix hijacks [24,
26]. Thus, it is often recommended to use MaxLength only if all sub-
prefixes are actually advertised in BGP.
2.4 Route Origin Validation
ASes in the RPKI use so-called Relying Party (RP) software in order
to download and validate RPKI objects. From all of the ROAs, RP
software constructs a set of tuples (ASN, ROA prefix, prefix length,
max length), which are called Validated ROA Payloads (VRPs). The
set of VRPs can then be made available to the AS’s routers using
the RP protocol [6].
2In fact, an ROA can contain any AS number (and not just the AS
number of the AS signing the ROA). This enables ASes to outsource
the BGP operations to another party or include another AS in a
multi-homing relationship.
3If a prefix holder wishes to authorize multiple ASes they can
simply create multiple ROA objects.
When such a router receives a BGP announcement, it attempts to
validate the announcement using the set of VRPs [37]. In order to
do so, it determines first if the announced IP prefix is covered by any