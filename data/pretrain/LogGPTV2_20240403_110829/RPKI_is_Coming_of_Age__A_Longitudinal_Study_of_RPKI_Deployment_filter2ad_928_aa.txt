# Title: RPKI is Coming of Age: A Longitudinal Study of RPKI Deployment and Invalid Route Origins

## Authors:
- Taejoong Chung, Rochester Institute of Technology
- Emile Aben, RIPE NCC
- Tim Bruijnzeels, NLNetLabs
- Balakrishnan Chandrasekaran, Max Planck Institute for Informatics
- David R. Choffnes, Northeastern University
- Dave Levin, University of Maryland
- Bruce M. Maggs, Duke University and Akamai Technologies
- Alan Mislove, Northeastern University
- Roland van Rijswijk-Deij, University of Twente and NLNetLabs
- John P. Rula, Akamai Technologies
- Nick Sullivan, Cloudflare

## Abstract
Despite its critical role in Internet connectivity, the Border Gateway Protocol (BGP) remains highly vulnerable to attacks such as prefix hijacking, where an Autonomous System (AS) announces routes for IP space it does not control. To address this issue, the Resource Public Key Infrastructure (RPKI) was developed starting in 2008, with deployment beginning in 2011. This paper performs the first comprehensive, longitudinal study of the deployment, coverage, and quality of RPKI.

We use a unique dataset containing all RPKI Route Origin Authorizations (ROAs) from the moment RPKI was first deployed, more than 8 years ago. We combine this dataset with BGP announcements from more than 3,300 BGP collectors worldwide. Our analysis shows that after a gradual start, RPKI has seen a rapid increase in adoption over the past two years. We also show that although misconfigurations were rampant when RPKI was first deployed (causing many announcements to appear as invalid), they are quite rare today. We develop a taxonomy of invalid RPKI announcements, then quantify their prevalence. We further identify suspicious announcements indicative of prefix hijacking and present case studies of likely hijacks.

Overall, we conclude that while misconfigurations still do occur, RPKI is “ready for the big screen,” and routing security can be increased by dropping invalid announcements. To foster reproducibility and further studies, we release all RPKI data and the tools we used to analyze it into the public domain.

## 1. Introduction
The Border Gateway Protocol (BGP) is the mechanism that allows routers to construct routing tables across the Internet. Unfortunately, the original BGP protocol lacked many security features (e.g., authorization of IP prefix announcements), making BGP vulnerable to attacks such as prefix hijacking [3, 5, 7, 14] and route leaks [5]. To defend against these threats, the Resource Public Key Infrastructure (RPKI) was developed in April 2008 as part of the IETF in the SIDR Working Group [54]. Beta deployments followed in the years after, until all Regional Internet Registries (RIRs) started production deployment of RPKI in January 2011.

At its core, RPKI is a hierarchical Public Key Infrastructure (PKI) that binds Internet Number Resources (INRs) such as Autonomous System Numbers (ASNs) and IP addresses to public keys via certificates. The corresponding private keys can be used by certificate holders to make attestations about these INRs—most importantly, Route Origin Authorization (ROA) objects. ROAs allow a certificate holder to authorize an ASN to announce certain IP prefixes, and are signed using the private key of a certificate covering the IP space. Each of the five RIRs operates its own RPKI trust anchor (equivalent to a root certificate in other PKIs), the private key of which is used to sign such certificates. The RIRs also offer hosted services to their members, enabling them to obtain RPKI certificates and generate ROAs.

RPKI objects, including certificates, ROAs, and supporting structures such as manifests and certificate revocation lists (CRLs), are published in so-called RPKI repositories. RPKI validation software—called Relying Party (RP) software—retrieves objects from these repositories and performs cryptographic validation of the content, ultimately producing a set of valid ROAs. A validating router can then use this set to verify incoming BGP announcements. If the router finds a BGP announcement to be in conflict with the set of valid ROAs, it should reject the announcement, as (by definition) the origin AS is not authorized to announce the IP prefix(es).

While RPKI sounds straightforward, in practice it can be complex, creating many opportunities for mistakes. For example, an AS may sub-allocate an IP prefix to a customer AS without updating its ROAs or mistakenly include the wrong range of IP prefixes in a ROA, thus accidentally making its announcements invalid. If such mistakes are pervasive, a validating router cannot rely on RPKI validation to drop invalid routes, as doing so might have too great of an impact on valid traffic. Such mistakes would weaken the basis of RPKI and may hamper adoption of RPKI.

While past studies [25, 43, 58] have looked at snapshots in time of various aspects of the RPKI ecosystem, little is known about how RPKI has developed since its inception in 2011. This situation makes it hard to draw conclusions about the quality of RPKI data and the viability of actually relying on RPKI to filter invalid announcements. In this study, we aim to change this situation by taking a longer view.

Using a unique dataset covering all RPKI data published by the RIRs on a daily basis since its early origins in 2011 (even before its full standardization), we study over eight years of RPKI data, combined with publicly available data on BGP announcements covering the same period. We augment this dataset with more detailed BGP data from a large CDN from 2017 until the present day to understand the impact of RPKI validation on an operator. With this dataset, we present a comprehensive study of how the RPKI ecosystem has evolved and what fraction of BGP announcements today are actually verifiable using RPKI. We look at common misconfigurations of RPKI and how these affect the validity of BGP announcements. We also examine whether RPKI meets its goal of preventing the acceptance of intentionally malicious announcements. Our main findings and contributions are as follows:

- We perform the first, detailed day-to-day longitudinal study of RPKI in the context of real-world routing data.
- We study the pervasiveness of common misconfigurations and how these develop over time.
- We attempt to isolate intentional malicious announcements by filtering out common misconfigurations.
- We show that, today, RPKI is ready for "the big screen" and can safely be used to filter invalid announcements.

To foster reproducibility and further research into the RPKI ecosystem, we publicly release all of our analysis code and data (where possible) to the research community at https://rpki-study.github.io.

The remainder of this paper is organized as follows. Section 2 provides background on RPKI objects and the Route Origin Validation process as well as the related work. Section 3 describes our dataset for this study, and Section 4 shows how RPKI has been deployed since its launch. Sections 5 and 6 examine why and how some BGP announcements are RPKI invalid. Sections 7 and 8 provide a concluding discussion and future work.

## 2. Background and Related Work
In this section, we provide background information on RPKI and give an overview of related work.

### 2.1 BGP
Interdomain routers use the Border Gateway Protocol (BGP) to establish routing tables. In brief, BGP speakers announce paths to destination IP prefixes through a series of ASes. Simplifying somewhat, an example BGP announcement looks like the following:

```
129.21.0.0/16, AS PATH: AS3549 AS3356 AS4385
```

This announcement advertises a path to the IP prefix `129.21.0.0/16` through the three ASes listed. Routers process announcements and withdrawals from peers in order to maintain routing tables, and generally pick the most specific prefix in their table when choosing how to forward a packet.

The original BGP protocol lacked many security features, opening the door to a number of attacks. First, a malicious AS could make an announcement for an IP prefix that it did not own, which would cause some of the traffic for that IP prefix to be sent to it; this attack is called prefix hijacking. Second, a malicious AS could make a more specific announcement than the originator’s prefix for an IP prefix it did not own (e.g., announcing `129.21.128.0/17` in the example above). Because routers will pick the most specific prefix when forwarding traffic, all traffic for that IP prefix will be forwarded to the malicious AS; this attack is called sub-prefix hijacking. These attacks have occurred with frequency in practice, with significant effects for the attacked IP prefix holders [3, 5, 7, 14].

### 2.2 RPKI Objects
RPKI [33] is a public key infrastructure designed as an out-of-band system to help prevent BGP address prefix (and sub-prefix) hijacking attacks. Briefly, RPKI employs cryptographic signatures to limit the set of entities who can announce IP prefixes. There are multiple types of supporting objects in the core RPKI system; the two we use in this paper are:

1. **CA Certificate**: Binds a set of Internet Number Resources (INRs) such as Autonomous System Numbers (ASNs) and IP prefixes to a public key.
2. **Route Origin Authorization (ROA)**: Authorizes an AS to announce certain IP prefixes and is signed by a CA certificate.

These objects are all published in public RPKI repositories operated by the Regional Internet Registries (RIRs). Figure 1 shows how these repositories are organized. Each RIR has a separate hierarchy starting at its trust anchor and certificate [28, 33]. These trust anchors are each owned by an RIR and are akin to root certificates in other PKIs. The trust anchors are used to sign CA certificates for each RIR’s members so that the members can make different kinds of assertions. In some regions (currently the LACNIC and APNIC regions), there is sometimes an intermediate level at a National Internet Registry (NIR). Equally, RIR or NIR members can also delegate resources to their customers (as shown in Figure 1).

The most important assertion a resource holder can make is a Route Origin Authorization (ROA), which authorizes an AS to advertise IP prefixes through BGP. An ROA is a signed attestation that the holder of a set of IP prefixes has authorized a single AS to originate routes for those prefixes. Thus, it contains a single ASN and (multiple) IP prefixes with their prefix lengths, which the AS is authorized to announce.

### 2.3 Max-Length
An AS may wish to de-aggregate an allocated IP prefix into multiple so-called sub-prefixes. For example, AS 4385 may wish to de-aggregate its prefix `129.21.0.0/16` into multiple `/20` blocks (e.g., `129.21.0.0/20`) for their own purposes (fine-grained traffic control, assignment to customers, etc.). In the protocol described thus far, the AS would have to create and sign a ROA containing each of the sub-prefixes:

```
129.21.0.0/20, AS 4385
...
129.21.240.0/20, AS 4385
```

Alternatively, the AS can use the `MaxLength` attribute [34] in the ROA, which specifies the longest prefix length for the authorized IP prefix that the AS may announce. Continuing with the example, the AS could instead sign a single ROA:

```
ROA: 129.21.0.0/16-20, AS 4385
```

This would authorize AS 4385 to announce any of the sub-prefixes of `129.21.0.0/16` in CIDR blocks of length between `/16` and `/20`. The `MaxLength` attribute is therefore efficient, as it acts as a macro that allows a single ROA to match many sub-prefixes. However, those sub-prefixes that are not actually advertised but matched by the ROA can be vulnerable to forged-origin sub-prefix hijacks [24, 26]. Thus, it is often recommended to use `MaxLength` only if all sub-prefixes are actually advertised in BGP.

### 2.4 Route Origin Validation
ASes in the RPKI use so-called Relying Party (RP) software in order to download and validate RPKI objects. From all of the ROAs, RP software constructs a set of tuples (ASN, ROA prefix, prefix length, max length), which are called Validated ROA Payloads (VRPs). The set of VRPs can then be made available to the AS’s routers using the RP protocol [6].

When such a router receives a BGP announcement, it attempts to validate the announcement using the set of VRPs [37]. To do so, it determines first if the announced IP prefix is covered by any of the VRPs. If it is, the router checks if the AS in the announcement matches the AS in the VRP. If both conditions are met, the announcement is considered valid. Otherwise, it is considered invalid and can be dropped.