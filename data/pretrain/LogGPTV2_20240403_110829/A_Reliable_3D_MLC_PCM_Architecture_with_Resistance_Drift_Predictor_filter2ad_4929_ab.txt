 0.04
 0.03
 100  200  300  400  500  600  700  800  900  1000
Resistance(arb. unit)
 30
 60
 50
 40
 100
 90
 80
 70
Temperature[C]
 10
 10
 9
 9
 8
 8
 7
 7
 6
 6
 5
 5
 4
 4
 3
 3
0
0
R
R
/
/
R
R
7.69
7.69
3.15
3.15
45[C]
45[C]
55[C]
55[C]
65[C]
65[C]
75[C]
75[C]
85[C]
85[C]
3.53
3.53
 2
 2
 0
 0
 100
 100
 200
 200
 300
 300
 400
 400
 500
 500
 600
 600
 700
 700
 800
 800
 900
 900
Time[Sec]
Time[Sec]
Figure 3: Estimated drift exponent as function of initial
resistance and temperature.
Figure 4: Resistance ratio for different values of time and
temperature.
state (in Fig 2(b) overlapped states are shaded).
In [22] and [25], it is shown that for an initial resistance
value R0, the cell resistance at time t can be derived as:
R = R0( t
t0
)d
,
(1)
where d represents the drift exponent and t0 is a normalized
time constant [30]. Regarding to MLC PCM prototypes, it is
well justiÔ¨Åed that the above model is an accurate estimation
of resistance drift [7], [10], [22], [25]. The drift coefÔ¨Åcient d
has a wide range which depends on several factors including
the initial resistance, R0, and the temperature values. At
a given temperature, the drift coefÔ¨Åcient increases mono-
tonically with the resistance value. In addition, for a given
resistance, the resistance drift is accelerated by the increase
in temperature. Note that considering time and temperature
changes, the above equation is a saturation function, since
the exponent, d, is less than one. In addition, in contrast to
the prior studies that modeled d as a stochastic process [2],
[27], [30], [33], we use the prototype-extracted values from
[14] in order to exactly estimate resistance drift behavior.
In [14], d is reported for different
initial resistances in
three operating temperatures (25 ‚ó¶C, 55 ‚ó¶C and 85 ‚ó¶C). By
surface Ô¨Åtting the data extracted from [14], d can be exactly
determined for any given resistance and temperature value.
Fig. 3 shows drift exponent for different temperatures and
initial resistances. In this paper, we use the equation 1 and
d for estimating the amount of resistance drift as our model.
III. MOTIVATION
In this section, we motivate our design by: i) analyzing
how temperature can affect the resistance drift phenomenon
in 3D architectures and, ii) relying on this fact that resistance
drift has no impact on a high percentage of memory accesses
(60% to 70%),
if we use narrow inter-level resistance
margins as a simple and cost-effective solution.
Observation 1. As discussed before, the resistance drift
depends on time and temperature. To show the effect of
time and temperature on resistance drift, one can rewrite (1)
as follows:
( R
R0
) = ( t
t0
)d
,
(2)
where R
R0 represents the ratio of resistance after resistance
drift happened to its initial value. Without loss of generality,
we assume R0 = 100KŒ© and illustrate this ratio for Ô¨Åve
different temperatures and a wide range of time in Fig. 4. It
can be inferred from Fig. 4 that the impact of temperature
is extremely higher than that of time. For example, at 45 ‚ó¶C
(i.e. ambient temperature), when time increases from 200 to
900 seconds, the ratio grows only 12%. On the other hand,
for the Ô¨Åxed time t = 200 seconds, increasing temperature
from 45 ‚ó¶C to 85 ‚ó¶C, an approximate rise of 244% occurs
in ratio. Hence, the effect of temperature on the resistance
drift phenomenon is more signiÔ¨Åcant than time. Based on
the above discussion and considering the fact that maximum
temperature of 3D chips can be elevated up to 98 ‚ó¶C [5],
the resistance drift is more critical in a thermally high stress
environment.
Observation 2. Inter-level margin is a simple yet effective
solution for addressing resistance drift [32]. But there is a
trade-off between write energy dissipation and allowable bit
error rate in margin size determination for MLCs. It means
that write into a narrow target band needs more P&V steps.
In order to perfectly mitigate the resistance drift errors, we
must focus on the worst-case behavior of the applications
which seems to be far from an energy-efÔ¨Åcient solution.
Here, this trade-off is examined by characterizing the set
of workloads in Table II. A Gray code mapping is assumed
which ensures that the adjacent states differ in only one
bit. Fig. 5 shows that for a given margin size, tolerating
a maximum read-after-write time (data resident
time in
memory) of 15 seconds at maximum temperature of 66‚ó¶C,
207207207
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:25:07 UTC from IEEE Xplore.  Restrictions apply. 




















+&
,-
+
,-
+&
,-



	















	



	







	







!
"



#
$

#
$

#
$
%
#
$

#
$
&
#
$

#
$
'
#
$

#
$
(
)
*



Figure 5: Percentage of error free read from main memory by using proportional margin.
It
if the margins are set
more than 70% of memory blocks are read with no drift
errors. Furthermore, this error-free readout percentage drops
to less than 60% and 40% when the maximum values for
time and temperature are 20 seconds, 60‚ó¶C and 15 seconds,
60‚ó¶C, respectively.
is clear that
to reasonable
sizes, we can effectively reduce the energy dissipation of
cell programming without concerning about resistance drift
problem for most of the read out memory blocks. However,
the problem of resistance drift still exists for the memory
blocks that have resided in PCM for a relatively long time or
are located in hotspot regions. To alleviate this shortcoming
and achieve same reliability as a system with large margin
sizes, we target to redesign the internal PCM circuit in order
to carry out read operations in a time- and temperature-aware
manner. This way, we use an adaptive sensing approach to
dynamically determine the border of the states according to
elapsed time and system temperature. Our proposal requires
some architecture and circuit considerations which will be
described in the sequel.
IV. RELATED WORK
Here, we focus on the most important studies alleviating
resistance drift in MLC PCM, which is a possible source
of transient errors. The most straightforward solution for
resistance drift problem is to increase resistance margins
separating the adjacent states in order to avoid overlapping
of adjacent states after drift. Thus, an effective solution is
to specify the resistance margins in a non-uniform manner
following the fact that resistance drift rate becomes higher
as amorphous percentage of a state increases [33]. Although
this improves resistance drift resilience,
it also reduces
resistance bounds of each state, which in turn results in more
programming energy dissipation and lower cell endurance.
Correspondingly, utilizing ECC cannot be a design choice
for MLC PCMs, since resistance drift is a value dependent
process and multi-bit errors are common. So, ECC overheads
in terms of storage and latency may not be acceptable.
208208208
Regarding these facts, Zhang and Li proposed Helmet [33]
which tries to increase drift resilience in two ways: (i) by
rotating and inverting words of an incoming memory line,
it targets to store values in two resistance drift resilient
states (amorphous and crystalline), (ii) by converting MLCs
to SLCs as the chip temperature increases. Awashti et
al. [2] also introduced a DRAM-like refreshing mechanism
augmented with a low-overhead ECC to prevent multi-
bit resistance drift errors at the architecture level. Xu and
Zhang [30] handle drift-induced errors only by means of
time-aware sensing. Compared to our proposal, not only this
contribution does not consider temperature as one of the
resistance drift error sources, but also every read operation
faces a large overhead of S/H adjustment. Recently Yoon
et al. [31], Seong et al. [27] and Jiang et al. [12] have
introduced the three-level PCM. In their solution, the third
state of 2-bit MLC that is a very high error prone state, is
eliminated. In fact, resistance spectrum is divided into three
states instead of four. Hence, there is a signiÔ¨Åcant resistance
margin between the second and last states, postponing
resistance drift soft error for a long time. Unfortunately,
eliminating the third state of cells will reduce information
density of 2-bit MLC PCM from 2 to 1.5. Additionally, their
technique is not general and it is not applicable to more
dense MLC PCM (e.g. 3 bits per cell). But their design
is the Ô¨Årst solution that achieves the reliability of DRAM
systems. As resistance drift in 3D ICs expects higher rates,
the efÔ¨Åciency of the previously proposed approaches is not
satisfactory, since i) higher drift rate necessitates higher
scrubbing frequency that impacts performance and energy
dissipation of the PCM memory, ii) coding-based techniques
like inversion and rotation are value-dependent and do not
efÔ¨Åciently relax worst-case resistance drifts, iii) for time-
aware sensing schemes, higher resistance drift surprisingly
increases overheads of the S/H adjustments and iv) in area-
constrained designs like 3D chips, reducing the information
density and non-general technique is not acceptable. This
motivates us to introduce a low-overhead reliable design for
3D-MLC PCM.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:25:07 UTC from IEEE Xplore.  Restrictions apply. 
Memory Array
From LLC
     Memory Block              Time-Tag
Read Queue
r
e
l
l
o
r
t
n
o
C
y
r
o
m
e
M
Time
/
Sensor 
Selector
Temperature A/D
Drift 
Controller
y
a
r
r
A
r
o
s
n
e
S
.
p
m
e
T
128 B
4 B
MLC                                                 SLC
e
l
b
a
n
E
s
s
e
r
d
d
A
SBT
  Ref1.                Ref2.              Ref3.
To 
READ 
Circuit
/
Column Decoder
r
e
d
o
c
e