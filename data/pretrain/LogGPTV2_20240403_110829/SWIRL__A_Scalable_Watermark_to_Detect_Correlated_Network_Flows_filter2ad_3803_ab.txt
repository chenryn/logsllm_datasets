(cid:18)
(cid:20)
(cid:18)
= EλT
Q
2
(cid:19)
(cid:18) T
(13)
(14)
(cid:19)(cid:19)(cid:21)
2mq
1 − Φ0,1
√
Q
2mq · σ
where Φ0,1(·) is the CDF of N (0, 1), and EλT
with respect to the Poisson distributed variable Q.
Q averages
To compute F Np, we ﬁrst need to consider the proba-
bility that each individual packet would have shifted out of
the assigned slot. Suppose that the packet pj was distance x
from the center of the slot (−T /(2rm) ≤ x ≤ T /(2rm)).
Given the Gaussian distribution of δj, the probability of the
shift is:
(cid:19)
(cid:18) (T /2rm) − x
(cid:19)
σ
− (T /2rm) + x
σ
(15)
Given that x will have a uniform distribution within the slot,
we can integrate to ﬁnd:
(cid:18)
P (pj shifted|x) = 1 − Φ0,1
+ Φ0,1
(cid:90) T /(2rm)
x=−T /(2rm)
F Npj =
rm
T
P (pj shifted|x)dx
(16)
The number of packets that are misdetected, out of P
packets in the mark interval, is given by the Binomial dis-
tribution B(P, F Npj ). Correspondingly:
F Np = EλT
P
IF Ppj
(1 + P − (cid:100)τ P(cid:101),(cid:100)τ P(cid:101))
(17)
(cid:104)
(cid:105)
Using equations (14) and (17), we can compute F NI in
(10) and correspondingly:
F N = IF NI (n − η + 1, η)
(18)
ets in the correct slots can be computed as:
I1/m((cid:100)τ P(cid:101), 1 + P − (cid:100)τ P(cid:101))
(6)
Since we perform the detection for both ˆs and ˆs(cid:48), the prob-
ability of an interval with P packets being considered de-
tected is:
F P P
I ≤ 2I1/m((cid:100)τ P(cid:101), 1 + P − (cid:100)τ P(cid:101))
(7)
Modeling the ﬂow as a Poisson process of rate λ, the num-
ber of packets in an interval of length T is distributed ac-
cording to a Poisson distribution with parameter λT . There-
fore, the overall probability of a false positive detection in
an interval is:
F PI = EλT
P [F P P
I ] =
F P P
I
(8)
∞(cid:88)
e−λT (λT )P
P =1
P !
where EλT
P computes the expected value with respect to P
according to a Poisson distribution with parameter λT . Fi-
nally, the total number of detected intervals will once again
follow a Binomial distribution B(n, F PI ), thus the overall
false positive rate is:
F P ≤ IF PI (η, 1 + n − η)
(9)
4.2 False-negative errors
Now we consider the false-negative errors, i.e., the prob-
ability that a watermarked ﬂow is considered not to be wa-
termarked by the detector.
Again, we start by considering a single mark interval.
The probability that it is considered not detected is:
F NI ≤ F Ns + (1 − F Ns)F Npr
(10)
where F Ns represents the probability that neither ˆs nor ˆs(cid:48)
correspond to the original quantization s, and F Np repre-
sents the probability that more than (1-τ) fraction of packets
have shifted out of the “correct” slot, s.
Note that for the quantization to be misdetected, the cen-
troid must shift by at least T /(2mq); thus:
F Ns ≤ P
(cid:19)
T
2mq
(cid:18)(cid:12)(cid:12)(cid:12) ˆC − C
(cid:12)(cid:12)(cid:12) >
Q(cid:88)
ˆC − C =
1
Q
δj
j=1
Note that, given Q packets in the base interval, with de-
lay of δj for packet j, we can calculate:
(11)
5 Evaluation
We adopt a Gaussian approximation for the distribution
of packet delays, as suggested in previous work [13]. Using
(12)
We evaluate SWIRL watermarking scheme for the appli-
cation of stepping stone detection. Our evaluation is also
valid for Tor congestion attack prevention application, dis-
cussed in Section 7. For the application of linking ﬂows in
anonymous networks, a new set of parameters would need
to be derived following the methodology described in this
section.
5.1 Parameter choices
Table 3 shows the tradeoffs that result from choosing dif-
ferent parameters of the watermarking scheme, along with
the chosen values for our implementation. The choice of
q represents a tradeoff; on one hand, larger q increases the
false negative rate by increasing F Ns of (14). On the other
hand, smaller q may result in an uneven distribution of s,
resulting in a multi-ﬂow attack (MFA). We will defer a full
examination of this tradeoff until our MFA analysis in Sec-
tion 6.3; for the subsequent simulations and experiments,
we set q = 2.5.
Likewise, r represents a tradeoff between false negatives
and the amount of delay. The maximum inserted delay is
bounded by T /r(2 − 2/m). We experiment with different
choices of r in the design.
In our experiments, we pick n = 32, i.e., 32 base and
mark intervals are selected. This means that the watermark
sequence must be at least 64T long; however, this ensures a
low overall rate of errors.
The parameter T should be chosen based on the rate of
the ﬂow, since the false positive rate is proportional to T λ.
In our experiments, we use ﬂows that have a rate of 4–7
packets per second (pps), thus we set T to be 2s. For ﬂows
with rates lower than 3pps, we suggest doubling the T pa-
rameter to compensate for the smaller number of packets in
each interval.
Both τ and η can be used to control the rates of false
positive and false negative errors. For a ﬁxed η, increasing
the τ threshold improves the false positives while worsens
the false negatives. Likewise, having the η threshold ﬁxed
increasing the τ threshold improves the false positives and
worsens the false negatives. Figures 5(a) and 5(b) illustrate
the effect on false errors that comes from varying each of
the parameters while ﬁxing the other; these results were ob-
tained using a ﬂow rate of 4.4pps (the average for the traces
used in the following sections).
Note that given a choice of η, it is possible to ﬁnd the
value of τ that results in an equal rate of false-positive
and false-negative errors; e.g., in Figure 5(a), this occurs
at τ = 0.5. The corresponding error rate is called the cross-
over error rate (COER); in this case, it is approximately
10−7. We can use this to optimize the joint choice of τ and
η by computing the COER that can be achieved at any given
choice of η. Figure 6 shows this for ﬂows with average λ of
4.4pps. As can be seen, η = 12 minimizes the COER while
the corresponding value of τ where the COER is achieved
is approximately 0.5. Note that some applications will ben-
eﬁt from a different optimization target; e.g., lowest false-
negative rate given a false-positive rate of at least 10−6. In
this case, the analytical false error rates can be used to ﬁnd
the optimal values of η and τ.
We also compute the η threshold that achieves the min-
R
E
O
C
1
0.1
0.01
0.001
0.0001
1e-05
1e-06
1e-07
1e-08
0
5
15
20
10
25
Detection threshold (η)
30
Figure 6. Cross-Over Error Rate (COER) for
different detection thresholds η (λ = 4.4pps).
imal COER for different ﬂow rates. Figure 7(a) shows the
results; the corresponding COER is shown in Figure 7(b).2
This shows that, for optimal detection, η should be chosen
based on the ﬂow rate. The analytical computations, how-
ever, are based on approximate models of trafﬁc and delays,
and compute upper bounds of error rates. For simplicity
of implementation, one might choose to use a single detec-
tion threshold regardless of the ﬂow rate. Figure 8 shows
the false positive and false negative error rates for a detec-
tor using a ﬁxed η = 12, with the corresponding optimal
η COER rates shown for comparison. As can be seen, for
ﬂows with smaller rates the ﬁxed detection threshold im-
proves the false negative errors rates at the price of increas-
ing the false positive errors; this is opposite for the higher
rate ﬂows, but offers reasonable error performance overall.
5.2 Simulations
We simulated the SWIRL watermarking system in Mat-
lab. A watermark key is generated using the random num-
ber generators. We use n = 32, and use the system de-
sign parameters described in the previous section (see Ta-
ble 3). We use traces collected by the CAIDA project
from its equinix-chicago monitor—an OC192 link of
a Tier 1 ISP—in January 2009 [18]. We selected SSH (port
22) ﬂows out of the traces, since SSH is frequently used
with interactive stepping stones; we used ﬂows that were
at least 2nT = 128 s long, for a total of 304 ﬂows.
In
every run of the simulation, an SSH ﬂow is randomly se-
lected from the database and is watermarked using the des-
ignated watermarking key. Since the analysis in Section 4
predicts that error rates are dependent on the rate of the ﬂow,
2The non-monotonic behavior in the graph corresponds to changing the
value of T for ﬂows below 3pps.
Table 3. Tradeoffs in selecting watermark system parameters
Tradeoffs
Increasing improves:
Delay, invisibility
Decreasing improves:
False-negative errors
Selected value
20
5
0.5
12
32
2 sec
2.5
Parameter
r
m
τ
η
n
T
q
False positives
False positives
False positives
Detection performance (FP,FN)
False-positive errors
MFA invisibility
False negatives
False negatives
False negatives
Detection time
Detection time
False-negative errors
y
t
i
l
i
b
a
b
o
r
p
r
o
r
r
e
e
s
l
a
F
1
1e-05
1e-10
1e-15
1e-20
1e-25
1e-30
1e-35
1e-40
False positive
False negative
0.2
0.4
0
0.6
0.8
1
Packet threshold (τ)
(a) η = 16
y
t
i
l
i
b
a
b
o
r
p
r
o
r
r
e
e
s
l
a
F
1
1e-05
1e-10
1e-15
1e-20
1e-25
1e-30
1e-35
0
False positive
False negative
5
15
10
25
Detection threshold (η)
20
30
(b) τ = 0.5
Figure 5. Analytical false error rates for different η and τ thresholds (λ = 4.4pps).
we chose ﬂows that have similar rates for our simulations
(9 pps < λ < 10 pps).
To simulate the effect of network delays, we captured
traces of round-trip delays between pairs of randomly cho-
sen PlanetLab nodes [2]; each trace captures the jitter prop-
erties of the relevant Internet path.3 The traces have stan-
dard deviations ranging from σ = 6.2 ms to σ = 12 ms.
For every run of the simulations a network delay sequence
is selected at random and applied to the watermarked ﬂow.
Finally, the watermarked ﬂow affected by network delay is
evaluated by the simulated watermark detector to check for
the shared watermark. We run this experiment 1000 times,
each time with the same watermark key but random se-
lection of network ﬂows and network delays. Figure 9(b)
shows the histogram of the number of watermark intervals
(out of n = 32) that the detector successfully detects by
evaluating a watermarked ﬂow, namely true detected inter-
vals. We compare this to the expected errors as predicted by
the analysis in Section 4. The simulations show better than
predicted error behavior due to the use of upper bounds in
the analysis.
To consider false-positive errors, we perform the same
3We approximate the one-way jitter by the round-trip properties.
simulations to evaluate the number of watermark inter-
vals detected when the detector inspects non-watermarked
ﬂows. Similar to the previous experiment, we randomly se-
lect network ﬂows from the database and apply a network
delay trace to the selected ﬂows using the same scenario.
We then pass the ﬂows through the watermark detector to
check for the watermarked intervals. This experiment is
also run for 1000 times. Figure 9(a) illustrates the exper-