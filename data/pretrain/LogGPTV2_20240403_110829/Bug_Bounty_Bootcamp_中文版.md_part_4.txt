    最后，第21章：信息披露介绍了从Web应用程序中提取敏感信息的几种方法。
**Part IV: Expert Techniques**
第四部分：专家技巧
1.  The final part of the book introduces in-depth techniques for the
    experienced hacker. This section will help you advance your skills
    once you understand the basics covered in Part III.
    [ Chapter 22: Conducting Code Reviews ]{.xref
    itemid="xref_target_Chapter 22_Conducting Code Reviews"} teaches you
    how to identify vulnerabilities in source code. You will also get
    the chance to practice reviewing a few pieces of code.
    第22章：进行代码审查教您如何识别源代码中的漏洞。您还将有机会练习审查一些代码。
    [ ]{#f05.xhtml#Page_xxiv .pagebreak title="xxiv"} [ Chapter 23:
    Hacking Android Apps ]{.xref
    itemid="xref_target_Chapter 23_Hacking Android Apps"} teaches you
    how to set up your mobile hacking environment and find
    vulnerabilities in Android applications.
    第23章：《Android应用程序黑客攻略》教您如何设置移动黑客环境并查找Android应用程序中的漏洞。
    [ Chapter 24: API Hacking ]{.xref
    itemid="xref_target_Chapter 24_API Hacking"} discusses application
    programming interfaces (APIs), an essential part of many modern
    applications. I discuss types of APIs and how to hunt for
    vulnerabilities that manifest in them.
    第24章：API黑客讨论应用程序编程接口（APIs），是许多现代应用程序的重要组成部分。
    我讨论了API的类型以及如何寻找在它们中表现出的漏洞。
    [ Chapter 25: Automatic Vulnerability Discovery Using Fuzzers
    ]{.xref
    itemid="xref_target_Chapter 25_Automatic Vulnerability Discovery Using Fuzzers"}
    wraps up the book by showing you how to automatically hunt for
    vulnerabilities by using a method called fuzzing. You'll practice
    fuzzing a web application with an open source fuzzer.
    第25章：使用模糊测试自动发现漏洞是本书的收尾之笔，会向您展示如何使用一种称为模糊测试的方法自动寻找漏洞。您将使用一个开源模糊测试工具来练习模糊测试一个Web应用程序。
## Happy Hacking! {#f05.xhtml#h1-501546f05-0003}
*Bug Bounty Bootcamp* is not simply a book about bug bounties. It is a
manual for aspiring hackers, penetration testers, and people who are
curious about how security works on the internet. In the following
chapters, you will learn how attackers exploit common programming
mistakes to achieve malicious goals and how you can help companies by
ethically reporting these vulnerabilities to their bug bounty programs.
Remember to wield this power responsibly! The information in this book
should be used strictly for legal purposes. Attack only systems you have
permission to hack and always exercise caution when doing so. Happy
hacking!
《漏洞赏金特训营》不仅仅是一本关于漏洞赏金的书。它是一本面向渴望成为黑客、渗透测试者或对网络安全有兴趣的人们的指南。在接下来的章节中，您将学习攻击者如何利用常见的编程错误来达到恶意目的，以及您如何通过合法地向公司报告这些漏洞来帮助它们的漏洞赏金计划。请务必谨慎行使此权力！本书中的信息应严格用于法律目的。只攻击您被授权攻击的系统，并在执行此操作时始终保持警惕。祝您愉快的黑客攻击！
:::
[]{#p01.xhtml}
::: section
# [ [ ]{#p01.xhtml#Page_1 .pagebreak title="1"} Part I ]{.PartNumber} [ The Industry ]{.PartTitle} {.part}
:::
[]{#c01.xhtml}
::: section
# [ [ ]{#c01.xhtml#Page_3 .pagebreak title="3"} 1 ]{.ChapterNumber} [ Picking a Bug Bounty Program ]{.ChapterTitle} {.chapter}
![](image_fi/book_art/chapterart.png)
Bug bounty programs: are they all the same? Finding the right program to
target is the first step to becoming a successful bug bounty hunter.
Many programs have emerged within the past few years, and it's difficult
to figure out which ones will provide the best monetary rewards,
experience, and learning opportunities.
漏洞赏金计划：它们都一样吗？找到适合的计划是成为成功的漏洞赏金猎人的第一步。在过去的几年里出现了许多计划，很难确定哪些计划会提供最好的货币奖励、经验和学习机会。
A *bug bounty program* is an initiative in which a company invites
hackers to attack its products and service offerings. But how should you
pick a program? And how should you prioritize their different metrics,
such as the asset types involved, whether the program is hosted on a
platform, whether it's public or private, the program's scope, the
payout amounts, and response times?
一个漏洞赏金计划是一项倡议，其中公司邀请黑客攻击其产品和服务提供。但你应该如何选择一个计划？如何优先考虑不同的指标，例如涉及的资产类型，计划是否托管在平台上，计划是公开还是私人的，计划的范围，支付额度和响应时间？
In this chapter, we'll explore types of bug bounty programs, analyze the
benefits and drawbacks of each, and figure out which one you should go
for.
在本章中，我们将探讨不同类型的漏洞赏金计划，分析它们的优点和缺点，并确定你应该选择哪一种。
## [ ]{#c01.xhtml#Page_4 .pagebreak title="4"} The State of the Industry {#c01.xhtml#h1-123456c01-0001}
Bug bounties are currently one of the most popular ways for
organizations to receive feedback about security bugs. Large
corporations, like PayPal and Facebook, as well as government agencies
like the US Department of Defense, have all embraced the idea. Yet not
too long ago, reporting a vulnerability to a company would have more
likely landed you in jail than gotten you a reward.
"漏洞赏金目前是企业收到安全漏洞反馈的最流行方式之一。像PayPal和Facebook这样的大公司，以及美国国防部这样的政府机构都拥抱了这个想法。但是不久以前，向公司报告漏洞可能更有可能让你进监狱而不是得到奖励。"
In 1995, Netscape launched the first-ever bug bounty program. The
company encouraged users to report bugs found in its brand-new browser,
the Netscape Navigator 2.0, introducing the idea of crowdsourced
security testing to the internet world. Mozilla launched the next
corporate bug bounty program nine years later, in 2004, inviting users
to identify bugs in the Firefox browser.
1995年，Netscape推出了首个赏金计划。该公司鼓励用户报告发现的漏洞，这些漏洞存在于其全新的浏览器---Netscape
Navigator 2.0
中。介绍众包安全测试的概念，成为了互联网世界的一股清流。而Mozilla公司则于9年后（即2004年）推出了下一个公司赏金计划，邀请用户鉴定Firefox浏览器中的漏洞。
But it was not until the 2010s that offering bug bounties become a
popular practice. That year, Google launched its program, and Facebook
followed suit in 2011. These two programs kick-started the trend of
using bug bounties to augment a corporation's in-house security
infrastructure.
但直到2010年代，提供漏洞赏金成为一种流行的做法。那一年，谷歌启动了它的计划，Facebook在2011年也效仿了这种做法。这两个计划开启了利用漏洞赏金来增强公司内部安全基础设施的趋势。
As bug bounties became a more well-known strategy,
bug-bounty-as-a-service *platforms* emerged. These platforms help
companies set up and operate their programs. For example, they provide a
place for companies to host their programs, a way to process reward
payments, and a centralized place to communicate with bug bounty
hunters.
随着漏洞赏金成为更为流行的策略，漏洞赏金作为服务的平台出现了。这些平台帮助公司建立和运营其程序。例如，他们提供公司托管其程序的地方，处理奖励付款的方式以及与漏洞赏金猎人进行集中交流的中心化平台。
The two largest of these platforms, HackerOne and Bugcrowd, both
launched in 2012. After that, a few more platforms, such as Synack,
Cobalt, and Intigriti, came to the market. These platforms and managed
bug bounty services allow even companies with limited resources to run a
security program. Today, large corporations, small startups, nonprofits,
and government agencies alike have adopted bug bounties as an additional
security measure and a fundamental piece of their security policies. You
can read more about the history of bug bounty programs at
[https://en.wikipedia.org/wiki/Bug_bounty_program](https://en.wikipedia.org/wiki/Bug_bounty_program){.LinkURL}
.
其中最大的两个平台是HackerOne和Bugcrowd，它们都在2012年推出。此后，还有一些平台，如Synack、Cobalt和Intigriti，进入了市场。这些平台和托管漏洞赏金服务，使得即使是资源有限的公司也能够运营安全计划。今天，大型企业、小型初创企业、非营利组织和政府机构都采用漏洞赏金作为额外的安全措施和安全策略的基本组成部分。您可以在https://en.wikipedia.org/wiki/Bug_bounty_program上了解更多关于漏洞赏金计划的历史。
The term *security program* usually refers to information security
policies, procedures, guidelines, and standards in the larger
information security industry. In this book, I use *program* or *bug
bounty program* to refer to a company's bug bounty operations. Today,
tons of programs exist, all with their unique characteristics, benefits,
and drawbacks. Let's examine these.
安全计划一般指更广泛的信息安全行业中的信息安全政策、程序、指南和标准。在本书中，我用"计划"或"赏金计划"来指代公司的赏金计划操作。目前有很多这样的计划，每个计划都有其独特的特点、好处和缺陷。让我们来看看这些内容。
## Asset Types {#c01.xhtml#h1-123456c01-0002}
In the context of a bug bounty program, an *asset* is an application,
website, or product that you can hack. There are different types of
assets, each with its own characteristics, requirements, and pros and
cons. After considering these differences, you should choose a program
with assets that play to your strengths, based on your skill set,
experience level, and preferences.
在漏洞赏金计划的背景下，资产是指您可以攻击的应用程序、网站或产品。有不同类型的资产，每种都有其自身的特点、要求和优缺点。在考虑这些差异之后，您应该选择一个拥有能够发挥您优势的资产的计划，基于您的技能水平、经验水平和个人偏好。
### [ ]{#c01.xhtml#Page_5 .pagebreak title="5"} Social Sites and Applications {#c01.xhtml#h2-123456c01-0001}
Anything labeled *social* has a lot of potential for vulnerabilities,
because these applications tend to be complex and involve a lot of
interaction among users, and between the user and the server. That's why
the first type of bug bounty program we'll talk about targets social
websites and applications. The term *social application* refers to any
site that allows users to interact with each other. Many programs belong
to this category: examples include the bug bounty program for HackerOne
and programs for Facebook, Twitter, GitHub, and LINE.
任何标记为社交的应用程序都有很多潜在漏洞，因为这些应用程序往往很复杂，并涉及用户之间以及用户与服务器之间的大量交互。这就是为什么我们要谈论的第一类漏洞赏金计划针对社交网站和应用程序。社交应用程序一词指的是任何允许用户相互交互的网站。许多计划属于此类别：例如HackerOne的漏洞赏金计划以及Facebook，Twitter，GitHub和LINE的计划。
Social applications need to manage interactions among users, as well as
each user's roles, privileges, and account integrity. They are typically
full of potential for critical web vulnerabilities such as insecure
direct object references (IDORs), info leaks, and account takeovers.
These vulnerabilities occur when many users are on a platform, and when
applications mismanage user information; when the application does not
validate a user's identity properly, malicious users can assume the
identity of others.
社交应用需要管理用户间的交互，以及每个用户的角色、权限和账户完整性。它们通常充满了严重网络漏洞的潜力，例如不安全的直接对象引用(IDORs)，信息泄漏和帐户控制。当许多用户在平台上时，这些漏洞就会发生，当应用程序处理用户信息不当时，当应用程序未正确验证用户身份时，恶意用户可以冒充他人的身份。
These complex applications also often provide a lot of user input
opportunities. If input validation is not performed properly, these
applications are prone to injection bugs, like SQL injection (SQLi) or
cross-site scripting (XSS).
这些复杂的应用程序通常提供了许多用户输入的机会。如果输入验证不正确，这些应用程序就容易出现注入漏洞，如SQL注入（SQLi）或跨站点脚本（XSS）。
If you are a newcomer to bug bounties, I recommend that you start with
social sites. The large number of social applications nowadays means
that if you target social sites, you'll have many programs to choose
from. Also, the complex nature of social sites means that you'll
encounter a vast attack surface with which to experiment. (An
application's *attack surface* refers to all of the application's
different points that an attacker can attempt to exploit.) Finally, the
diverse range of vulnerabilities that show up on these sites means that
you will be able to quickly build a deep knowledge of web security.
如果你是bug赏金的新手，我建议你从社交网站开始。现今社交应用的数量庞大，如果你攻击社交网站，就会有许多项目可供选择。此外，社交网站的复杂性意味着你将遇到广泛的攻击面供你进行实验。（应用程序的攻击面是指攻击者可以尝试利用的应用程序中的所有不同点。）最后，这些网站上出现的各种漏洞的多样性意味着你将能够快速建立对Web安全的深入了解。
The skill set you need to hack social programs includes the ability to
use a proxy, like the Burp Suite proxy introduced in [ Chapter 4 ]{.xref
itemid="xref_target_Chapter 4"} , and knowledge about web
vulnerabilities such as XSS and IDOR. You can learn more about these in
Chapters [ 6 ]{.xref itemid="xref_target_6"} and [ 10 ]{.xref
itemid="xref_target_10"} . It's also helpful to have some JavaScript
programming skills and knowledge about web development. However, these
skills aren't required to succeed as a hacker.
黑客社交计划所需要的技能包括使用代理器，例如第4章介绍的Burp
Suite代理器，以及关于Web漏洞（如XSS和IDOR）的知识。你可以在第6章和第10章了解更多。具备一些JavaScript编程技能和Web开发知识也会很有帮助。然而，这些技能并不是成为黑客所必需的。
But these programs have a major downside. Because of the popularity of
their products and the low barrier of entry, they're often very
competitive and have many hackers hunting on them. Social media
platforms such as Facebook and Twitter are some of the most targeted
programs.
但是这些程序有一个主要的缺点。由于他们的产品受到欢迎并且准入门槛较低，他们通常非常有竞争力，并且有许多黑客在追捕他们。像Facebook和Twitter这样的社交媒体平台是一些最受攻击的程序。
### General Web Applications {#c01.xhtml#h2-123456c01-0002}
*General* *web applications* are also a good target for beginners. Here,
I am referring to any web applications that do not involve user-to-user
interaction. Instead, users interact with the server to access the
application's features. Targets that fall into these categories can
include static websites, cloud applications, consumer services like
banking sites, and web portals of Internet of Things (IoT) devices or
other connected hardware. Like social sites, they [ ]{#c01.xhtml#Page_6
.pagebreak title="6"} are also quite diverse and lend themselves well to
a variety of skill levels. Examples include the programs for Google, the
US Department of Defense, and Credit Karma.
一般的网站应用也是初学者的好目标。这里，我指的是不涉及用户之间互动的任何网站应用。相反，用户与服务器进行交互以访问应用程序的功能。这些目标可以包括静态网站、云应用程序、诸如银行网站的消费者服务以及物联网设备或其他连接硬件的Web门户。就像社交网站一样，它们也相当多样化，适合各种技能水平。例如谷歌、美国国防部和信用卡业务。
That said, in my experience, they tend to be a little more difficult to
hack than social applications, and their attack surface is smaller. If
you're looking for account takeovers and info leak vulnerabilities, you
won't have as much luck because there aren't a lot of opportunities for
users to interact with others and potentially steal their information.
The types of bugs that you'll find in these applications are slightly
different. You'll need to look for server-side vulnerabilities and
vulnerabilities specific to the application's technology stack. You
could also look for commonly found network vulnerabilities, like
subdomain takeovers. This means you'll have to know about both
client-side and server-side web vulnerabilities, and you should have the
ability to use a proxy. It's also helpful to have some knowledge about
web development and programming.