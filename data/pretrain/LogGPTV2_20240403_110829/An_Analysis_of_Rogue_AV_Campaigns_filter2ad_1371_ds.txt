d
c
c
b
e
c
q4
q5
d
q2
e
d
q3
e
b
220
q8
250 
q9
(0)
-
0
5
2
250
q10
0
5
2
q11
250-
CONTENT
550
q12
x
q13
x
a
b
c
d
e
0x32 0x00 0x00 0x00 0x06 0x00 0x00
0x32 0x00 0x00 0x00 0x07
0x32 0x00 0x00 0x00 0x08
0x32 0x00 0x00 0x00 0x11
0x32 0x00 0x00 0x00 0x12
Fig. 1. The Protocol State Machine of SMTP and XUNLEI Protocol
Packet analysis. During the part of packet analysis, we ﬁrst look for high fre-
quency units from oﬀ-line application-layer packet headers, which is obtained by
the phase of network data collection. Then, we employ Kolmogorov-Smirnov (K-S)
test to determine the optimal number of units. Finally, we replay each application-
layer packet header and construct protocol format messages with objective units.
Message clustering. In this phase, we extract the feature from each protocol
format message. The feature is used to measure the similarity between messages.
Then, the partitioning around medoids (PAM) clustering algorithm is applied to
group similar messages into a cluster. Finally, the medoid message of a cluster
will become a protocol state message.
State machine inference. In order to infer protocol state machine, we should
be aware of the packet state sequence of ﬂows. For the purpose of labeling the
packet state, initially we have to ﬁnd the nearest medoid message of each packet
and assign the identical label type to the packet. Then, by ﬁnding the relationship
between diﬀerent state types, a protocol machine is constructed. After state
machine minimization, we will get the ultimate protocol state machine.
2 Evaluation
We make use of SMTP (text protocol) and XUNLEI (binary protocol) to test
and verify our method. The protocol state machine of SMTP we inferred is shown
in Fig. 1 left, and XUNLEI in right. Moreover, our evaluation experiments show
that our system is capable of parsing about 86% ﬂows of SMTP protocol and
about 90% ﬂows of XUNLEI protocol.
Reference
1. Leita, C., Mermoud, K., Dacier, M.: Scriptgen: an automated script generation tool
for honeyd. In: Annual Computer Security Applications Conference (2005)
MEDUSA:
Mining Events to Detect Undesirable uSer
Actions in SCADA
Dina Hadˇziosmanovi´c, Damiano Bolzoni and Pieter Hartel
Distributed and Embedded Security, University of Twente
{dina.hadziosmanovic,damiano.bolzoni,pieter.hartel}@utwente.nl
Abstract. Standard approaches for detecting malicious behaviors, e.g.
monitoring network traﬃc, cannot address process-related threats in
SCADA(Supervisory Control And Data Acquisition) systems. These
threats take place when an attacker gains user access rights and performs
actions which look legitimate, but which can disrupt the industrial pro-
cess. We believe that it is possible to detect such behavior by analysing
SCADA system logs. We present MEDUSA, an anomaly-based tool for
detecting user actions that may negatively impact the system.
1 Problem
There is a wide range of possible attacks that can be carried out against SCADA
environments [1,2]. We classify possible threats in two groups: system- and
process-related. System-related threats are typical of “regular” computer net-
works, e.g., malware or Denial of Service attacks. Attackers leverage vulnerabil-
ities in networked systems and programmable logic controllers (PLCs) to alter
or disrupt the industrial process. Process-related threats imply that an attacker
gains user access rights (e.g., through social engineering) and performs legiti-
mate SCADA commands which will negatively aﬀect the industrial processes.
Typical security countermeasures, e.g., antivirus or network IDSes, can hardly
detect process-related threats, as they lack process semantic.
In this work, we focus on the detection of process-related threats. Based on in-
terviews with stakeholders, we distinguish two types of threat scenarios, namely
1) an attacker impersonates a system user or 2) a legitimate system user makes
an operational mistake. A SCADA engineer manages object libraries and user
interfaces, sets working ranges for devices, etc. If an attacker succeeds in acquir-
ing the access rights of an engineer, she is then able to perform actions such
as altering a device parameter (e.g., change capacity of a tank) or altering the
system topology (e.g. some devices become “invisible”, and thus inaccessible).
A SCADA operator monitors the system status and reacts to events, such as
alarms, so that the process runs correctly. An attacker, impersonating an op-
erator or an engineer, can generate a sequence of actions where each action is
legitimate, but the combination (or even a single action) can damage the process.
S. Jha, R. Sommer, and C. Kreibich (Eds.): RAID 2010, LNCS 6307, pp. 500–501, 2010.
c(cid:2) Springer-Verlag Berlin Heidelberg 2010
MEDUSA: Mining Events to Detect Undesirable uSer Actions in SCADA
501
We argue that to detect process-related attacks one needs to analyse data
passed through the system (Bigham et al. [1]) and include a semantical un-
derstanding of the process and user actions. This can be achieved either by
employing a tool such Bro, which requires the network protocol speciﬁcations
(but those could be hard to obtain due to the closeness of SCADA systems), or
by analysing system logs.
2 Solution
Typically, SCADA system logs provide detailed information about industrial
processes. However, based on interviews with stakeholders, logs are not nor-
mally processed. The reason for this is that system engineers lack time, skills
and speciﬁc tools for performing a thorough analysis. The size and high dimen-
sionality of the logs make manual inspection infeasible. For instance, a SCADA
system for a water treatment process in a medium-size city, depending on daily
activities, records between 5.000 and 15.000 events per day.
We believe that system logs can be used to detect process-related threats and
user mistakes automatically. We propose a visualization tool, MEDUSA(Mining
Events to Detect Undesirable uSer Actions in SCADA), whose engine is based on
anomaly detection. MEDUSA automatically analyses system logs, detects and
alerts users about situations in which the system behaves unconsistently with
past behavior. As a result, the number of security-related alarms that operators
have to look at is decreased. The anomaly detection models in MEDUSA are
built using two data mining techniques. First, we use algorithms for mining
outliers to detect individual actions and events that are signiﬁcantly diﬀerent
from previous entries. Secondly, we analyse sequences of events and actions in
the logs to provide a better view on the situation context. Once we train our
model on history logs of a particular system, we plan to use the model in real-
time analysis a SCADA system.
Preliminary results show that our approach is feasible. The initial dataset con-
sists of 100.000 entries which correspond to approximatively 15 days of process
work. The attributes are mostly categorical. The goal of our initial analysis was
to transform the dataset in such a way that anomalous entries are highlighted.
We managed to extract several events that may semantically represent suspi-
cious behavior (eg., a previously unseen engineer activity in late night hours,
user expression errors when connecting to critical communication backbones).
References
1. Bigham, J., Gamez, D., Lu, N.: Safeguarding scada systems with anomaly detection.
In: MMMACNS 2003: Proc. 2nd International Workshop on Mathematical Meth-
ods, Models and Architectures for Computer Network Security. LNCS, pp. 171–182.
Springer, Heidelberg (2003)
2. Chittester, C.G., Haimes, Y.Y.: Risks of terrorism to information technology and
to critical interdependent infrastructures. Journal of Homeland Security and Emer-
gency Management, Article 402 1(4), 341–348 (2004)
On Estimating Cyber Adversaries’ Capabilities:
A Bayesian Model Approach(cid:2)
Jianchun Jiang1, Weifeng Chen2, and Liping Ding1
1 National Engineering Research Center of Fundamental Software,
Institute of Software, Chinese Academy of Sciences, Beijing, China
PI:EMAIL, PI:EMAIL
2 Dept. of Math and Computer Science, California University of PA, USA
PI:EMAIL
1 Introduction
Cyber adversaries refer to people or groups who do harm to the information
system, such as hackers, espionage persons, and terrorists. Diﬀerent Cyber ad-
versaries have diﬀerent motivations, and obviously, have diﬀerent resources and
attack techniques. The resource and attack techniques are referred to as adver-
saries’ capacities. Accurate estimation of adversaries’ capacities can help net-
work administrator to use diﬀerent approaches to prevent potential attacks or
respond to emerging attacks. However, cyber adversaries’ capabilities are hidden,
dynamic and diﬃcult to observe directly. This poster aims to take a systemic
approach to estimate adversaries’ capacities. Since we cannot obtain complete
information about the adversaries, a reasonable approach is to estimate adver-
saries’ capabilities using partial information that has been observed. The esti-
mation hypothesis, initially stating that the adversary has equal probabilities to
have high level capacities and low level capacities, will be reﬁned using Bayesian
rules as we collect more evidences from network data.
2 A Bayesian Model
We use H to represent the hypothesis “The cyber adversary’s capability is high
level”. Based on Bayes’ theorem, we can update the degree of belief of hypothesis
H given an evidence E in the following way:
P (E|H)
P (E)
P (H|E) =
× P (H)
(1)
(cid:2) This work is supported in part by the National High-Tech Research and Development
Plan of China under Grant No.2007AA010601 and the Knowledge Innovation Key
Directional Program of Chinese Academy of Sciences under Grant No. KGCX2-
YW-125. The authors would like to thank Dr. Peng Ning at North Carolina State
University for his insightful discussion.
S. Jha, R. Sommer, and C. Kreibich (Eds.): RAID 2010, LNCS 6307, pp. 502–504, 2010.
c(cid:2) Springer-Verlag Berlin Heidelberg 2010
On Estimating Cyber Adversaries’ Capabilities
503
3 Extracting Evidences from Network Data
Transferring from network data to evidences plays an essential role in this reﬁn-
ing process. We divide network data into diﬀerent categories and build a database
that correlates the data categories with attack scenarios. Due to the space limita-
tion, here we only describe the “Exploit” evidence as an example. The “Exploit”
category describes an adversary’s characteristics of exploiting vulnerabilities of
the target. Let Vd be the publication date of the vulnerability that is exploited
by the adversary. Let Vc be the date when the vulnerability is exploited by the
adversary. Generally, if Vc − Vd is small, it means that the adversary has strong
capability in exploring the target, e.g., the zero-day attack. We then use the
ratio
1
Vc−Vd
(cid:5)
to represent exploit capability of the adversary.
P (Exploit|H) ≈ 1
Vc−Vd
P (Exploit|H) ≈ 1
where Vc − Vd (cid:19)= 0 and Vc > Vd
otherwise
4 Case Study
More and more Cyber adversaries are interested in attacking popular Web sites,
commonly by exploring vulnerabilities of the Web sites. Based on the network
Table 1. Selected vulnerabilities and their “Exploit” values in year 2007.
Adversary Vulnerability Vd (dd.mm.yyyy) Vc(dd.mm.yyyy) Vc − Vd
A1
A2
A3
A4
A5
A6
A7
A8
A9
A10
A11
A12
A13
MS07-004
MS07-009
MS07-017
MS07-020
MS07-033
MS07-035
MS07-045
CVE-2007-3148
CVE-2007-4105
CVE-2007-4748
CVE-2007-5017
CVE-2007-3296
CVE-2007-5064
09.01.2007
24.10.2006
28.03.2007
10.04.2007
14.03.2007
12.06.2007
15.08.2007
06.06.2007
02.08.2007
19.08.2007
19.09.2007
30.05.2007
30.08.2007
26.01.2007
28.03.2007
30.03.2007
15.09.2007
07.07.2007
11.07.2007
02.09.2007
08.06.2007
18.08.2007
19.08.2007
26.09.2007
25.06.2007
30.08.2007
17
158
2
155
113
29
17
2
16
0
7
25
0
Fig. 1. Diﬀerent Capabilities for Cyber Adversary Hacking Website
504
J. Jiang, W. Chen, and L. Ding
data about the Chinese Web sites [1] for selected vulnerabilities in the year
2007, we extract the “Exploit” evidence and use this evidence to illustrate the
application of our model. Table 1 shows 13 adversaries, vulnerabilities exploited
by each adversary, and their Vc and Vd.
Based on this information, we applied our model described in this poster and
obtain the P (H) for the 13 adversaries, as shown in Figure 1.
Reference
1. Zhuge, J., Holz, T., Song, C., Guo, J., Han, X., Zou, W.: Studying Malicious Web-
sites and the Underground Economy on the Chinese Web. In: 7th Workshop on the
Economics of Information Security (WEIS 2008), Hanover, NH, USA (June 2008)
Security System for Encrypted Environments
(S2E2)
Robert Koch and Gabi Dreo Rodosek
Universit¨at der Bundeswehr M¨unchen, 85577 Neubiberg, Germany
{Robert.Koch,Gabi.Dreo}@UniBw.de
Abstract. The percentage of encrypted network traﬃc increases steadily
not only by virtual private networks of companies but also by proto-
cols like SSH or SSL in the private sector. Traditional intrusion detec-
tion systems (IDS) are not able to cope with encrypted traﬃc. There
are a few systems which are able to handle encrypted lines but none
of them is applicable in general because of changed network protocols,
a restricted application range (e.g., only able to ﬁnd protocol-speciﬁc
attacks) or very high false alarm rates. We propose a new IDS for non-
intrusive, behavior-based intrusion- and extrusion detection in encrypted
environments.
Keywords: intrusion detection, payload encryption, non-intrusive mea-
surement, user strategy, traﬃc clustering, extrusion detection, data leak-
age detection.
1 Background
Signature-based IDSs (misuse detection) are widely used for the protection of
networks. Because patterns of the malware must be available in the database of
the IDS, only already known threats can be found. A study of the Massachusetts
Institute of Technology in the year 2002 unfoldes, that software patches are
often available at the same time as the signatures for IDSs are [1], therefore
reducing the advantages of the IDS. Even more, the increasing percentage of
encrypted network traﬃc additionally limits the detection capability of those
systems, because they have to analyze the payload and are not able to cope
with encrypted traﬃc. Unlike the misuse detection, anomaly-based systems are
able to detect new or unknown threats. E.g., the spreading of new worms can
be detected, but attacks inside the encrypted traﬃc (on application layer) are
still not detectable. Currently, there are only few IDSs able to cope with en-
crypted traﬃc but none of them is applicable in general. [2] gives an overview of
available systems and also proposes a new one (which also has the same
restrictions).
2 S2E2 System Architecture
S2E2 is an anomaly-based system. All parts of the system are working non-