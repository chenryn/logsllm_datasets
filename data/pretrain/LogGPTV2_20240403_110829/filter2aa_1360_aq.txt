By default, Ubuntu hides system files which should not normally be manipulated. You may need to see these 
within the Files application. The following steps allow you to see all files on the system, and the change is 
persistent between reboots.
We have configured our VM to possess a shared folder on the Desktop. This is an avenue to transfer files from 
within the VM to the host and vice versa. This can be used to copy evidence from within the VM to your host 
for preservation to external media. I have experienced limitations with this method. If I have hundreds of large 
videos, I often receive errors when I try to copy all of them to my host through the shared folder. This is much 
more prominent in VirtualBox versus the premium option VMWare. The best solution I have found is to 
transfer evidence direcdy to a USB drive within the VM. If desired, you could choose this method and eliminate 
any shared folder on the VM.
You should now have an understanding of the benefits of an OSINT virtual machine. Next, let's discuss the 
maintenance and preservation of all your hard work. 1 promise we are close to locking our settings in for all 
future investigations.
86 Chapter 5
This is my favorite chapter, let's get started.
OSINT VM Creation
VM Maintenance & Preservation
87
1 do not expect you to start over at the beginning of the book, but I do ask that you now repeat the steps tilth 
a new machine. Consider the previous chapters an education, and now we will generate a new clean environment.
Ch a pt e r  Fiv e
VM Ma in t e n a n c e & pr e s e r v a t io n
• 
Open VirtualBox and delete any previous VMs created from this book (if desired).
• 
Within VirtualBox, click on the button labeled "New".
• 
Provide a name of "OSINT Original".
• 
Choose your desired location to save the machine on your host.
• 
Select "Linux" as the type, "Ubuntu 64-bit" as the version, then click "Continue".
• 
In the memory size window, move the slider to select 50% of your system memory.
• 
Click "Continue", then click "Create".
• 
Leave the hard disk file type as "VDI" and click "Continue".
• 
Select the default option of "Dynamically allocated" and click "Continue".
• 
Choose the desired size of your virtual hard drive (40GB+) then click "Create".
• 
Click the "Settings" icon, then click the "Storage" icon.
• 
Click the CD icon which displays "Empty" in the left menu.
In the following pages, I display only the abbreviated steps taken throughout the entire previous instruction. 
There are no explanations or demonstrations. Consider this the cheat sheet to replicate our previous work. All 
Terminal commands are in this font. Afterward, I will explain many considerations for updates, 
backups, and locking in your "Original VM". I promise this will be much easier now that you have worked 
through the process. Many of the manual steps previously presented are now automated within many fewer 
steps here.
VM Creation: Complete steps to create a standard Ubuntu VM.
VM Configuration: Steps to customize this VM with privacy and OSINT considerations.
VM Tools-Basic: Steps to install and configure all steps in the book up to this point.
VM Tools-Advanced: Steps to install and configure the advanced Linux tools required later.
VM Interface Configuration: Options to customize the appearance of your VM.
VM Complete Configuration Script: A single command to replicate all of the work.
VM Software Updates: Complete details to keep all of your new software updated.
VM Maintenance: Steps to clone and maintain your original VM in order to preserve your work.
You now likely possess a secure computer, a custom Linux VM, several Linux applications, and shortcuts to 
easily launch each with user prompts for data. You could begin online investigations now, but 1 have a request 
Delete it all. That's right, let's start over, but cheat a bit. Think about the VM you built. Did you have any issues 
installing software? Did you make any mistakes? Did you test the new applications with your own user data? It 
is likely that you slightly contaminated your perfect virtual machine while learning the process.
This entire list is available on my website at https://inteltechniques.com/osintbook9/linux.txL Enter a 
username of "osint9” and password of "bookl43wt" (without quotes) if required for access. It should be 
easier to copy and paste commands from there versus typing them directly from here. These steps will change 
as programs are updated! I will update these steps as necessary on my website. The current "linux.txt" 
file on my site overrides anything here. I have split this chapter into small sections, each described below.
200%" from
OSINT VM Configuration
88 Chapter 5
Click the small blue circle to the far right in the "Optical Drive" option.
Select "Choose a Disk File" and choose the Ubuntu ISO previously downloaded.
Click "Open" or "Choose" if prompted, then click "OK".
If prompted, confirm the Ubuntu ISO.
Click "Start" in the main menu and click "Start" again if prompted.
Only if needed, increase screen size by clicking "View", "Virtual Screen", and "Scale to 
within the VirtualBox menu bar.
Select "Install Ubuntu".
Select your desired language and location, then click "Continue".
Select "Normal Installation", "Download Updates", and "Install third party".
Click "Continue".
Select "Erase disk and install Ubuntu", then "Install Now". Confirm with "Continue".
Choose your desired time zone and click "Continue".
Enter a name, username, computer name, and password of "osint" for each.
Select "Log in automatically".
Allow Ubuntu to complete the installation, click "Restart Now", then press "Enter".
Upon first boot, click "Skip" then "Next".
Select "No" and then "Next" when asked to help improve Ubuntu.
Click "Next" then "Done" to remove the welcome screen.
If prompted to install updates, click "Remind me later".
Power off the virtual machine.
This would be a great time to either create a snapshot or clone of this machine. This was previously explained 
and is demonstrated again at the end of this chapter. You possess a pristine standard Ubuntu installation without 
any applications or customizations. You may want to return to this state at a later time in order to restart the 
application configuration options without the need to rebuild the entire VM. I maintain a clone of this machine 
which is titled "Ubuntu Install". It is available to me any time I need a fresh copy of Ubuntu.
• 
Restart the "OSINT Original" VM.
• 
In the VirtualBox Menu, select Devices > "Insert Guest Additions CD Image".
• 
Click "Run" when the dialogue box pops up, provide your password when prompted, then 
"Authenticate".
• 
Once the process is complete, press enter, and power off the VM (upper right menu).
• 
In VirtualBox, select your VM and click "Settings".
• 
In the "General" icon, click on the "Advanced" tab.
• 
Change "Shared clipboard" and "Drag n Drop" to "Bidirectional".
• 
In the "Display" icon, change the Video Memory to the maximum.
• 
In the "Shared Folders" icon, click the green "+".
• 
Click the dropdown menu under "Folder Path".
• 
Select "Other".
• 
Choose a desired folder on your host to share data and click "Open".
• 
Select the "Auto-mount" option and then "OK".
• 
Click "OK" to close the settings window.
• 
Open Terminal and execute the following:
• sudo adduser osint 
vboxsf
• sudo apt purge -y apport
• sudo apt remove -y popularity-contest
• sudo apt update
OSINT VM Tools-Basic
89
VM Maintenance & Preservation
• 
Restart the "OSINT Original" VM, then launch and close Firefox.
• 
Click the Applications Menu, launch Terminal, and execute the following commands.
• sudo snap install vic
• sudo apt update
• sudo apt install -y ffmpeg
• sudo apt install -y python3-pip
• sudo -H pip install youtube-dl
• sudo -H pip install yt-dlp
• sudo -H pip install youtube-tool
• cd -/Desktop
• sudo apt install -y curl
• curl -u osint9:bookl43wt -0
https: //inteltechniques.com/osintbook9/vm-files.zip
• unzip vm-files.zip -d -/Desktop/
• mkdir -/Documents/scripts
• mkdir -/Documents/icons
• cd -/Desktop/vm-files/scripts
• 
cp * -/Documents/scripts
• 
cd ~/Desktop/vm-files/icons
• 
cp * -/Documents/icons
This would be an ideal time to create another snapshot or clone of this "OSINT Original" machine. You possess 
a standard Ubuntu installation with the appropriate configurations. Your VirtualBox settings are locked in, just 
in case you need to return to this state at a later time. I maintain a clone of this machine which is tided "Ubuntu 
Install & Configuration". It is available to me any time I need a fresh copy of Ubuntu with all settings applied 
for daily usage. Next, we will install our basic OSINT applications, scripts, and configurations.
In the previous chapter, I explained each manual step required to install and configure dozens of applications, 
services, scripts, and other customizations. The following steps replicate every portion of this instruction and 
should simplify the creation process. Nothing in here is new, it is simply a summary of all steps.
• sudo apt install -y build-essential dkms gcc make perl
• sudo rcvboxadd setup
• 
Click on "Start" to restart your Ubuntu VM.
• 
Resize the window if desired.
• 
Resize the VM if desired (View > Virtual Screen > Scale).
• 
In the left Dock, right-click and eject the CD.
• 
Click the Applications Menu (9 dots) in the lower left and launch Settings.
• 
Click "Notifications" and disable both options.
• 
Click the "Privacy" option, then click "Screen Lock" and disable all options.
• 
Click "File History' & Trash", then disable the option.
• 
Click "Diagnostics", then change to "Never".
• 
Click the back arrow and click Power, changing "Blank Screen" to "Never".
• 
Click "Automatic Suspend" and disable (turn off) the feature.
• 
Close all Settings windows.
• 
Click the Applications Menu and launch Software Updater.
• 
Click "Install Now" to apply all updates.
• 
If prompted, restart the VM and power off when reboot is complete.
requirements.txt -I
requirements.txt -I
requirements.txt -I
requirements.txt -I
90 Chapter 5
-r requirements.txt -I 
rams
cd ~/Desktop/vm-files/shortcuts 
sudo cp * /usr/share/applications/ 
cd -/Desktop 
rm vm-files.zip 
rm -rf vm-files 
sudo -H pip install streamlink
sudo -H pip install Instalooter
sudo -H pip install Instaloader
sudo -H pip install toutatis
mkdir -/Downloads/Programs 
cd -/Downloads/Programs 
sudo apt install -y git 
git clone https://github.com/Datalux/Osintgram.git 
cd Osintgram 
sudo apt-get install libncurses5-dev libffi-dev -y 
sudo -H pip install -r requirements.txt -I 
make setup 
sudo snap install gallery-dl 
sudo snap connect gallery-dl:removable-media 
cd -/Downloads 
sudo apt install default-jre -y 
wget https://github.com/ripmeapp/ripme/releases/latest/download/ripme.jar 
chmod +x ripme.jar 
cd -/Downloads/Programs 
git clone https://github.com/sherlock-project/sherlock.git 
cd sherlock 
sudo -H pip install 
sudo -H pip install socialscan -I 
sudo -H pip install holehe -I 
cd -/Downloads/Programs 
git clone https://github.com/WebBreacher/WhatsMyName.git 
cd WhatsMyName 
sudo -H pip install -r : 
cd -/Downloads/Programs 
git clone https://github.com/martinvigo/email2phonenumber.git 
cd emai!2phonenumber 
sudo -H pip install ■ 
cd -/Downloads/Progr;
git clone https://github.com/ChrisTruncer/EyeWitness.git 
cd EyeWitness/Python/setup 
sudo -H ./setup.sh 
sudo snap install amass 
cd -/Downloads/Programs 
git clone https://github.com/aboul31a/Sublist3r.git 
cd Sublist3r 
sudo -H pip install -r : 
cd -/Downloads/Programs 
git clone https://github.com/s0md3v/Photon.git 
cd Photon 
sudo -H pip install -r : 
cd -/Downloads/Programs
requirements.txt -I
requirements.txt -I
VM Maintenance & Preservation
91
git clone https://github.com/laramies/theHarvester.git 
cd theHarvester 
sudo -H pip install 
sudo -H pip install testresources -I 
sudo -H pip install pipenv -I 
sudo -H pip install webscreenshot -I 
cd -/Downloads/Programs 
git clone https://github.com/Lazza/Carbonl4 
cd Carbonl4 
sudo -H pip install 
sudo add-apt-repository -y ppa:micahflee/ppa 
sudo apt -y update 
sudo apt install -y torbrowser-launcher 
wget https://dl.google.com/linux/direct/google-chrome- 
stable_current_amd64.deb 
sudo apt install -y ./google-chrome-stable_current_amd64.deb 
sudo rm google-chrome-stable_current_amd64.deb 
sudo apt install -y mediainfo-gui 
sudo apt install -y libimage-exiftool-perl 
sudo apt install -y mat2 
sudo -H pip install xeuledoc -I 
cd -/Downloads/Programs 
sudo apt install subversion -y 
git clone https://github.com/GuidoBartoli/sherloq.git 
cd sherloq/gui 
sudo -H pip install -r requirements.txt -I 
sudo apt install -y webhttrack 
cd -/Downloads/Programs 
git clone https://github.com/opsdisk/metagoofil.git 
cd metagoofil 
sudo -H pip install -r requirements.txt -I 
sudo apt install python3.9 