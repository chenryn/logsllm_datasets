### 1. 使用 `sudo` 和 `pty.spawn` 获取 Shell

命令：
```bash
$ sudo python -c 'import pty; pty.spawn("/bin/bash");'
```

#### 防范方法：
- 不要将 `SUDO` 权限授予任何可能逃逸到 Shell 的程序。
- 不要将 `SUDO` 权限赋予如 `vi`、`more`、`less`、`perl`、`ruby`、`gdb` 等命令。

### 2. 利用未正确配置的 CRON 任务

如果 CRON 任务配置不当，可能会被利用以获取 root 权限。以下是检查步骤：

1. 检查是否有可写的 CRON 任务脚本或二进制文件。
2. 检查是否可以覆盖写入 CRON 文件。
3. 检查 `cron.d` 目录是否可写入。

CRON 任务通常以 root 权限运行。如果成功篡改 CRON 任务中定义的任何脚本或二进制文件，攻击者便可以使用 root 权限执行任意代码。

#### 示例利用过程：
1. 查看现有 CRON 任务：
   ```bash
   $ ls -la /etc/cron.d
   ```
2. 查找全局可写入文件：
   ```bash
   $ find / -perm -2 -type f 2>/dev/null
   ```
3. 检查特定脚本是否可写：
   ```bash
   $ ls -la /usr/local/sbin/cron-logrotate.sh
   ```
4. 如果 `cron-logrotate.sh` 是全局可写的，可以在其中添加命令，这些命令将以 root 身份执行。
5. 编写并编译一个 C 文件（例如 `rootme`），该文件会产生一个 Shell。
6. 修改 `cron-logrotate.sh` 以更改 `rootme` 的所有者和权限：
   ```bash
   $ echo "chown root:root /tmp/rootme; chmod u+s /tmp/rootme;" > /usr/local/sbin/cron-logrotate.sh
   ```
7. 运行 `logrotate` CRON 任务后，`cron-logrotate.sh` 将以 root 权限执行，然后运行 `rootme` 以获取 root Shell：
   ```bash
   $ ./rootme
   ```

#### 防范方法：
- 在 CRON 任务中定义的任何脚本或二进制文件都不应是可写入的。
- CRON 文件不应被除 root 之外的任何用户写入。
- `cron.d` 目录不应被除 root 之外的任何用户写入。

### 3. 利用 PATH 中的 `.` 实现权限提升

如果用户的 PATH 中包含 `.`，则可以从当前目录执行二进制文件或脚本。这为攻击者提供了权限提升的机会。

#### 示例场景：
- 假设管理员 Susan 在她的 PATH 中添加了 `.`，以便省略每次输入两个额外字符。
- 另一个用户 Rashid 知道 Susan 的 PATH 中包含 `.`。
- Rashid 创建一个名为 `ls` 的恶意可执行文件，并将其放在 Susan 可能访问的目录中。
- 当 Susan 执行 `ls` 命令时，系统会优先在当前目录中查找 `ls`，从而执行恶意代码。

#### 防范方法：
- 不要在 PATH 中包含 `.`。

### 4. 不同虚拟机环境上的权限提升方法

以下是在不同虚拟机环境中实现权限提升的一些方法：

1. **Kioptrix 1**
   - 内核漏洞：Apache mod_ssl
   - SMB 漏洞：Samba (2.2.1a) trans2open 缓冲区溢出

2. **Kioptrix 2**
   - 内核漏洞：Linux Kernel 2.6

3. **Kioptrix 3**
   - SUID 位设置：编辑 `/etc/sudoers` 文件以获得 SUDO 权限

4. **Kioptrix 4**
   - 内核漏洞：“Dirty COW” “PTRACE_POKEDATA” 竞争条件权限提升
   - MySQL 漏洞：MySQL 4.x/5.0 (Linux) 用户定义函数（UDF）动态库
   - 内核漏洞：2.4/2.6 sock_sendpage() ring0 Root 利用

5. **Kioptrix 5**
   - 内核漏洞：FreeBSD 9.0 – Intel SYSRET 内核权限提升

6. **SickOS 1.2**
   - 未正确配置的 CRON 任务：Chkrootkit 0.49 – 本地权限提升

7. **Stapler**
   - Samba 漏洞：SambaCry 利用
   - 未正确配置的 CRON 任务：全局可写 cron 文件
   - 在 `.bash_history` 中找到 root 密码
   - 内核漏洞：Linux Kernel 4.4.x (Ubuntu 16.04) – ‘double-fdput()’ bpf(BPF_PROG_LOAD) 权限提升

8. **Troll1**
   - 使用 `sudo su` 获取 root 权限

9. **MrRobot**
   - 在 nmap 上设置 SUID 位 – 从 nmap 交互模式转到 Shell

10. **Vulnix**
    - 未正确配置的服务：root_squash 目录装载错误配置

11. **droopy**
    - 内核漏洞：‘overlayfs’ 权限提升

12. **VulnOsv2**
    - 内核漏洞：‘overlayfs’ 权限提升

13. **Fristileaks**
    - SUDO 权限赋予易受攻击的二进制文件

14. **LordOfTheRoot**
    - 内核漏洞：‘overlayfs’ 权限提升

### 重要资源

- [基础的 Linux 权限提升](https://example.com/basic-linux-privesc)
- [本地 Linux 遍历和权限提升备忘录](https://example.com/linux-privesc-cheatsheet)
- [黑客入侵 Linux 第一部分 - 权限提升](https://example.com/hacking-linux-part-1)
- [权限提升](https://example.com/privesc)

遍历脚本：
- [unix-privesc-check](https://example.com/unix-privesc-check)
- [Linuxprivchecker](https://example.com/linuxprivchecker)
- [LinEnum](https://example.com/linenum)

尽管我们建议手动进行遍历，但使用脚本无疑会更为便捷，但请注意，运行脚本可能会产生一些误报。