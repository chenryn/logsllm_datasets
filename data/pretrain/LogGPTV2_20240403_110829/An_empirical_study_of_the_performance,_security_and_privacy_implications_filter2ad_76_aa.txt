# An Empirical Study of the Performance, Security, and Privacy Implications of Domain Name Prefetching

**Authors:** Srinivas Krishnan and Fabian Monrose  
**Affiliation:** University of North Carolina at Chapel Hill, Chapel Hill, NC, 27599, USA  
**Department of Computer Science**  
**Email:** {krishnan, fabian}@cs.unc.edu

## Abstract
Optimistic pre-resolution (or prefetching) of domain names is a popular technique for reducing user-perceived latency during web browsing. In this paper, we present a large-scale evaluation of this practice using data collected over several months. Our findings indicate that domain name prefetching leads to significant increases in load on name servers, with limited caching benefits. To assess the impact of prefetching on the deployment of DNS security extensions (DNSSEC), we use a custom-built cache simulator to perform trace-based simulations using millions of DNS requests and responses collected campus-wide. Additionally, we show that domain name prefetching raises privacy concerns, as it can amplify information disclosure attacks, potentially allowing adversaries to infer the context of searches issued by clients.

**Keywords:** Domain Name System, Measurements, Security, Privacy

## 1. Introduction
Many internet users are aware that online merchants often maintain detailed records of their browsing habits. While some people accept this as a trade-off for better personalization, the surreptitious collection of personal information has become more rampant, leading to a loss of control over what information is disclosed [1]. This issue is exacerbated by recent optimizations in modern browsers and search engines aimed at improving responsiveness on the web.

One such optimization is the prefetching of domain names in hyperlinks. By proactively resolving domain names, browsers can reduce the latency experienced when a user clicks on a link. As of April 2011, four of the top five browsers support prefetching, and Google's "Instant Search" feature prefetches links as the user types in the search bar.

While prefetching can improve browsing speed, it comes at a cost. Our study reveals that DNS prefetching introduces significant performance overheads on name servers, with observed decreases in throughput of over 15% and high volumes of requests to non-existent domain names. Moreover, prefetching may hinder the deployment of DNSSEC, which aims to make DNS more resilient against cache poisoning attacks [3].

We also demonstrate that prefetching enables new privacy threats. Specifically, by inspecting DNS queries, it is possible to infer the context of a user's searches. This is because prefetching inserts a significant amount of information into the caches of name servers, providing domain name operators with more detailed insights than when prefetching is disabled.

The rest of the paper is organized as follows: Section II reviews related work, Section III describes our experimental setup and data collection, Section IV presents an empirical study of the effects of prefetching, Section V analyzes its impact on DNSSEC, and Section VI discusses how prefetching enables new disclosure attacks. We conclude in Section VII.

## 2. Related Work
The domain name system (DNS) is critical for the operation of internet applications, and numerous studies have focused on improving its performance [5, 6]. Jung et al. [7, 8] provide extensive analysis of DNS performance and the effectiveness of caching. Other studies [9, 10] explore the performance characteristics of DNSSEC. However, none of these studies focus on DNS prefetching, which is a relatively recent practice. To the best of our knowledge, our dataset and evaluation are the largest to date on this subject.

More closely related to our work is the research on DNS cache snooping. Grangeia [11] provides a review of remote cache inspection techniques, which have been used to infer the relative popularity of websites [12] and track malware infections [13]. In contrast, our study explores how DNS prefetching amplifies privacy threats, allowing for more detailed insights than previously envisioned.

Some proposals have suggested improving connection establishment by issuing optimistic DNS queries. These include prefetching based on popularity, related domain names, and precaching of records [14, 15]. However, these works do not perform large-scale analyses or study the privacy and security implications of their prefetching policies.

This paper extends our preliminary work [16] to include a large-scale empirical evaluation, new techniques for applying instance-based learning to enhance the accuracy of search reconstruction, and the design and implementation of a cache simulator to study the impact of prefetching on DNSSEC deployment.

## 3. Overview
To understand the implications of browser-based DNS pre-resolution, we collected and analyzed two DNS datasets from several name servers at our campus. The first dataset (Summer) was collected from June to August 2010, and the second dataset (Fall) from September to November 2010. The trace collection spanned these periods to allow for trend estimation as the campus population increased.

The monitored servers included the primary name servers for the entire wireless network and the authoritative name servers for the university. During the summer, over 26,000 internal clients used these servers daily, and over 44,000 clients in the Fall, with an average of 42 and 63 million queries per day, respectively.

### A. Data Collection Infrastructure
Our data collection configuration consists of two core components: a DNS trace collector synchronized with a common NTP server and a campus network trace collector (Figure 1). The campus network is served by a single upstream provider and connected via a pair of optical links. The server pool is situated behind a load-balancer, and all wireless clients are assigned a name server from this pool during their initial DHCP registration. DNS traces are collected via a mirrored port on the load-balancer switch using CoralReefâ€™s engine to process and anonymize client IPs. The payloads are stored securely.

To quantify the utility of prefetching events, we also tapped the optical links from the campus to the upstream provider and mirrored the traffic to a network monitoring system. This system captures network traces at line rate with negligible loss and nanosecond precision.

### B. Finding Prefetching Events
To filter DNS traffic relevant to browser-based pre-resolution, we applied heuristics to select queries created in response to browsing events. Browsers rarely make non-recursive queries, so we used the Recursion-Desired (RD) flag in DNS query packets to discard extraneous DNS queries. We also filtered address ranges for known services within the university and discarded DNS queries resulting in connections to non-http/https servers.

After isolating browser-related queries, we determined whether they belonged to a prefetching event. Pre-resolution of domain names is implemented by extracting `<href>` tags from rendered pages and automatically performing lookups for the resulting domains. This implies that if a DNS query is followed by a connection to the resolved domain, it is likely a prefetching event.

![Campus-wide Data Collection and Control Framework](figure1.png)

## 4. Empirical Study of Prefetching Effects
[Detailed results and analysis will be provided here, including performance metrics, caching benefits, and load on name servers.]

## 5. Impact on DNSSEC
[Detailed analysis of the impact of prefetching on DNSSEC deployment will be provided here, including simulation results and potential security implications.]

## 6. New Disclosure Attacks
[Discussion of how prefetching enables new privacy threats and the methods used to infer the context of user searches will be provided here, including case studies and attack scenarios.]

## 7. Conclusion
[Summary of key findings, implications, and future work will be provided here.]

---

This revised version aims to provide a clearer, more professional, and well-structured presentation of the research.