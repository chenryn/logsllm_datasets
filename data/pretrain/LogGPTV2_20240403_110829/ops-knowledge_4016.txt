User: Let's say I want to run some function once a day at 10 am. 

Do I simply keep a script running in the background forever? 
What if I don't want to keep my laptop open/on for many days at a time? 
Will the process eat a lot of CPU? 

Are the answers to these questions different if I use cron/launchd vs scheduling programmatically? Thanks!
Assistant: The answer to this question will likely depend on your platform, the available facilities and your particular project needs.
First let me address system resources. If you want to use the fewest resources, just call time.sleep(NNN), where NNN is the number of seconds until the next instance of 10AM.  time.sleep will suspend execution of your program and should consume zero (or virtually zero resources). The python GC may periodically wake up and do maintenance, but it's work should be negligible.
If you're on Unix, cron is the typical facility for scheduling future tasks. It implements a fairly efficient Frantaâ€“Maly event list manager. It will determine based on the list of tasks which will occurr next and sleep until then.
On Windows, you have the Schedule Manager. It's a Frankenstein of complexity -- but it's incredibly flexible and can handle running missed events due to power outages and laptop hibernates, etc...