> 如果想了解基础的学习路线图，可以看下面这篇文章：
>
> https://mp.weixin.qq.com/s/VXH19dQRkNtPbzDMVXwsPQ
因为我都是偏向于从视频中获取知识，虽然有的时候比较慢，但是这个可能会帮助我更快的理解其中的内容，因此，后面的一些推荐，基本上是以视频为主，如果基础较好的，可以直接2倍速刷视频，等待视频学完，时间还充裕的话，可以结合书本进行
### JUC
**JUC** 进阶 **Java** 相关的基础内容，因为我之前一直都做 **Java** 开发这块，所以对于 **JavaSE** 方面的还是比较熟悉，首先学习的就是Java并发包，以及一些大厂常见的面试题。
> 来源Bilibili XX谷周阳老师学习视频：https://www.bilibili.com/video/BV15J4112785
>
> 主要包括Volatile、CAS、JAVA锁、阻塞队列、线程池 等...
>
> 笔记地址：https://gitee.com/moxi159753/LearningNotes
![大厂面试第二季学习笔记](./images/image-20201216224004405.png)
### JVM
在学习完并发包后，接着就是JVM相关的知识了，这是面试的高频点
> 来源Bilibili XX谷宋红康老师JVM教程：https://www.bilibili.com/video/BV1PJ411n7xZ
>
> 主要包括：JVM每个组成部分的作用，垃圾回收算法 和 垃圾回收器
>
> 笔记地址：https://gitee.com/moxi159753/LearningNotes/tree/master/JVM
![JVM学习笔记](./images/image-20201216224344666.png)
### Java8新特性
有些可能会问你关于 **Java8** 的新特性，为啥是 **Java8** 呢？因为从 **Java8** 以后的版本就是收费版本了，因此基本上企业的最新版都是基于 **Java8** 来的。
> 来源Bilibili XX谷李贺飞老师学习视频：
>
> https://www.bilibili.com/video/BV1ut411g7E9
>
> 主要包括：HashMap变化、Lambda表达式、Stream流 等
>
> 笔记地址：
>
> https://gitee.com/moxi159753/LearningNotes
![Java8新特性](./images/image-20201216224841300.png)
### SpringCloud
在复习完 **Java** 进阶的知识后，下面就需要进入到框架的复习了，因为我使用的是微服务框架 **SpringCloud**来开发的蘑菇博客，所以在面试的时候，肯定会问到微服务框架相关的知识，而且不可能只是停留在简单的使用，更多的是需要了解其原理。因此，我又系统性的学习了一下**SpringCloud**，以及最新版的**SpringCloudAlibaba**(以后蘑菇博客就是基于Alibaba版本做迁移的)
> 来源Bilibili XX谷周阳老师学习视频：
>
> https://www.bilibili.com/video/BV18E411x7eT
>
> 主要包括：SpringCloud全家桶组件，服务发现和注册、负载均衡、服务降级和限流、服务网关和配置中心
>
> 笔记地址：
>
> https://gitee.com/moxi159753/LearningNotes/tree/master/SpringCloud/SpringCloud2020
![SpringCloud学习笔记](./images/image-20201216225206883.png)
其实这部分也可以选择性的看，因为我个人是打算从中学习到编码的知识，而不是说知识背面试题。这篇教程其实我觉得是非常不错的，它基本上把概念 和 代码 都讲的很清楚，学习完成后，基本上能够对SpringCloud相关的问题都能回答出来~。
### 中间件
中间件的学习，主要就包括 **MQ**(消息队列)、**Redis、MySQL** 等，这个如果只想使用的话，其实挺简单的，调用一下对应的**API**就行，但是这里面的原理其实很多。这里我是跟着视频进行学习，授课老师通过讲解实际案例，非常的通俗易懂。
> 来源Bilibili学习视频：
>
> https://www.bilibili.com/video/BV1UJ411X7M1
>
> 面试扫盲，基本上关于中间件以及在服务开发中遇到的疑难问题都有讲解到(学习到了很多知识)
![面试突学习笔记](./images/image-20201216230006976.png)
### 算法学习
关于算法这块，其实那在秋招的时候就是准备不太充足，所以在最后就吃亏了，因为现在的面试，基本上都会重点考察你的算法功底，像字节跳动的面试，每一面基本上都会考察。其它的包括 腾讯、阿里都是有的，所以如果你打算冲击大厂，一定要好好的准备算法的知识
首先我推荐的就是剑指**Offer**，里面都是一些经典的题型大概67题(如果小伙伴时间紧迫，那就先把这个刷完。我当初就是因为轻视了算法，所以导致有些题不能很快给出面试官满意的答案..，需要后面的小伙伴不要和我一样犯同样的错误)
> Bilibili视频学习解题思路(Python版本)：
>
> https://www.bilibili.com/video/BV1K4411o7KP
>
> 牛客网剑指offer专题：
>
> https://www.nowcoder.com/ta/coding-interviews
![剑指Offer学习笔记](./images/image-20201217102342632.png)
同时，如果剑指Offer的算法题刷完的话，那就可以继续去 **LeetCode** 上刷题了。**LeetCode** 上刷题的话，也是要有针对性，比如，你可以优先选择热门的题目
> leetcode: https://leetcode-cn.com/problemset/all
![LeetCode热门题目](./images/image-20201217104934378.png)
如果时间允许的话，当然可以采用题海战术，把**Leetcode**的中等题目都进行扫盲式的学习。
如果时间不允许的话，那就需要站在别人的肩膀上学习了，比如可以合理的使用 牛客网搜索，根据前面人面试总结出的高频题，来进行突击性的训练(临时抱佛脚...)
> 以字节跳动为例：搜索  字节跳动  高频
![高频题搜索](./images/image-20201217105228691.png)
看到会有人总结出来，其它小伙伴在面试时候遇到的原题，而且这些题目会反复的出现，大家如果就打算冲某些大厂的话，就需要把他们都了解一遍
![收集的高频题](./images/image-20201217105314626.png)
通过别人汇总的，就发现了有几题在我之前面试的时候就出现过.....(不过我面试的早，成功当了炮灰，如果是后面面试的小伙伴，一定要站在前人的肩膀上进行学习）
### 计算机基础课程
前面讲的都是关于Java方面的，但是并不是说计算机基础(数据结构、操作系统、计算机网络、数据库)，就可以放下警惕了，其实他们同样也是高频的考点，非常的重要。
当然如果你有比较丰富的项目经验的话，有些面试可能就会比较弱化计算机基础知识，更多的挖掘你简历中使用的技术，字节跳动的面试很多面试问题就是结合我简历上写的项目来展开的。不过最后也会问到一些基础的知识，看看你的掌握情况。
比如计算机网络：**HTTPS** 和 **HTTP、TCP**和 **UDP** 相关知识点，同时随着面试的内卷化，难度也会不断加深，关于三次握手和四次挥手，要求你能描述每次状态码的变化，可能还会问 为什么**TCP**连接是三次握手，而不是两次；为什么是四次挥手而不是三次.. 等等一系列的连环套路。
计算机网络，主要就是跟着Bilibili韩立刚老师的视频教程和谢希仁老师的计算机网络书籍。
![谢希仁 计算机网络](./images/image-20201217111258064.png)
> Bilibili韩立刚老师的视频教程：https://www.bilibili.com/video/BV1WK4y1f71A
关于操作系统，我之前都是根据博客来进行学习的，比如看一些：线程和进程的区别，以及如何通信，然后死锁相关、银行家算法、虚拟内存、磁盘调度等
如果时间充裕，还是推荐进行系统的学习一下，小伙伴推荐的操作系统课程，**B**站第一中文操作系统当之无愧~
> 操作系统(哈工大李治军老师) ：https://www.bilibili.com/video/BV1d4411v7u7
问到数据库的话，可能会叫你写**SQL**语句，或者讲述一下**MySQL**的索引，然后就能讲到**B**树 、**B+**树、聚簇索引和非聚簇索引、**MySQL**索引优化，分析某条**SQL**语句走了那些索引（**explain**)、**MySQL**行锁和表锁 等。
如果是项目做的比较多的话，可能还会问你数据库的分库分表操作，或者**MySQL**的主从复制。
同时关于数据库，可能还会问到你缓存相关，比如**Redis**。从**Redis**就能延伸出很多知识点了，**Redis**底层数据结构、跳跃表的实现、**Redis**的持久化策略**AOF和RDB**、**Redis**的缓存穿透、缓存雪崩、**Redis**的主从复制原理 和 **Redis**的哨兵原理，同时像**Redis**的一致性**Hash**问题都有可能问到。
同时可能还会结合项目来问，比如问你项目中，高并发环境下，先操作数据库还是先删除缓存？或者在**Redis**主备切换时的数据丢失问题，异步复制和集群脑裂等等。