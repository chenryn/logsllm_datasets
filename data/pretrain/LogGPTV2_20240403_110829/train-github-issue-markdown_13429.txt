### 基准测试结果对比

#### 初始基准测试
```javascript
Deno.bench(function a() {
});

Deno.bench(function b() {
});
```

运行命令：
```sh
deno bench
```

系统信息：
- CPU: Apple M1 Pro
- 运行时: deno 1.29.1 (aarch64-apple-darwin)
- 文件路径: `/Users/xxx/WebstormProjects/radash/main_bench.ts`

| 基准测试 | 平均时间 | 最小值 ... 最大值 | p75 | p99 | p995 |
|----------|----------|--------------------|-----|-----|------|
| a        | 504.73 ps/iter | 458.3 ps ... 10.54 ns | 500 ps | 654.2 ps | 1.22 ns |
| b        | 4.2 ns/iter | 4.08 ns ... 16.21 ns | 4.23 ns | 4.99 ns | 7.39 ns |

#### 添加相同代码后的基准测试
```javascript
import { draw } from 'npm:radash';

Deno.bench(function a() {
    draw(['test', '123', 'fff', 'ggg']);
});

Deno.bench(function b() {
    draw(['test', '123', 'fff', 'ggg']);
});
```

运行命令：
```sh
deno bench
```

系统信息：
- CPU: Apple M1 Pro
- 运行时: deno 1.29.1 (aarch64-apple-darwin)
- 文件路径: `/Users/xxx/WebstormProjects/xxx/main_bench.ts`

| 基准测试 | 平均时间 | 最小值 ... 最大值 | p75 | p99 | p995 |
|----------|----------|--------------------|-----|-----|------|
| a        | 7.56 ns/iter | 6.8 ns ... 92.49 ns | 7.48 ns | 14.83 ns | 16.84 ns |
| b        | 27.21 ns/iter | 24.8 ns ... 64.18 ns | 27.06 ns | 42.39 ns | 44.32 ns |

### 结论
在添加了相同的 `draw` 函数调用后，基准测试 `a` 和 `b` 的平均执行时间显著增加。具体来说，基准测试 `a` 的平均时间从 504.73 ps/iter 增加到 7.56 ns/iter，而基准测试 `b` 的平均时间从 4.2 ns/iter 增加到 27.21 ns/iter。这表明 `draw` 函数的调用对性能有显著影响。