# []{#introduction-to-modules_using-appstream.html#introduction-to-modules_using-appstream}第 2 章 模块简介 {.title}
:::
除了单个 RPM 软件包外，AppStream 存储库还包含模块。模块是一组代表组件的
RPM
软件包，通常一起安装。典型的模块包含应用的软件包、应用特定依赖库的软件包、应用文档的软件包，以及帮助程序实用程序的软件包。
接下来的小节描述了模块内机构和处理内容的其他功能：
::: itemizedlist
-   stream - 按版本划分的内容组织。详情请查看
    ["模块流"一节](#introduction-to-modules_using-appstream.html#module-streams_introduction-to-modules "模块流"){.xref}。
-   配置文件 - 按目的组织内容.详情请查看
    ["模块配置集"一节](#introduction-to-modules_using-appstream.html#module-profiles_introduction-to-modules "模块配置集"){.xref}。
:::
::: section
::: titlepage
# []{#introduction-to-modules_using-appstream.html#module-streams_introduction-to-modules}模块流 {.title}
:::
模块流是过滤器，可以想象为 AppStream
物理存储库中的虚拟存储库。模块流代表 AppStream
组件的版本。每个流都单独接收更新。
模块流可以是活跃的或者不活跃的。活动流允许系统访问特定模块流中的 RPM
软件包，允许安装对应的组件版本。如果标记为默认值，或者用户操作明确启用了流，则流会处于活跃状态。
给定时间点上只能激活一个特定模块的流。因此，在一个系统中只能安装一个组件版本。不同的容器可以使用不同的版本。
每个模块都可以具有默认流。默认流可让您轻松使用 RHEL
软件包而无需了解模块。默认流是活跃的，除非禁用了整个模块或启用了该模块的另一个流。
某些模块流依赖于其他模块流。例如,
[**perl-App-cpanminus**]{.strong}、[**perl-DBD-MySQL**]{.strong}、[**perl-DBD-Pg**]{.strong}、[**perl-DBD-SQLite**]{.strong}、
[**perl-DBI**]{.strong}、[**perl-YAML**]{.strong} 和
[**freeradius**]{.strong} 模块流取决于特定的 [**perl**]{.strong}
模块流。
要为运行时用户应用程序或开发人员应用程序选择特定的流，请考虑以下几点：
::: itemizedlist
-   所需的功能以及支持哪个组件版本
-   兼容性
-   [生命周期长度和更新计划](https://access.redhat.com/node/4079021){.link}
:::
有关所有可用模块和流的列表，请查看
[软件包清单](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/package_manifest/appstream-repository#AppStream-modules){.link}。有关每个组件的更改，请查看
[发行注记](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/){.link}。
::: example
[]{#introduction-to-modules_using-appstream.html#idm139758638652688}
**例 2.1. [PostgreSQL]{.strong} 模块流**
::: example-contents
[**postgresql**]{.strong} 模块在相应的流 9.6、10 和 12
[**中提供[PostgreSQL]{.application}**]{.strong} 数据库版本
[**9.6[]{.strong}、10**]{.strong} 和 [**12**]{.strong}。流
[**10**]{.strong} 目前是默认值。这意味着，如果需要
[**postgresql，系统将尝试安装[postgresql-10.6]{.package}**]{.strong}
[**[软件包。]{.package}**]{.strong}
:::
:::
::: itemizedlist
**其它资源**
-   有关模块依赖关系的详情请参考
    ["模块依赖关系和流更改"一节](#managing-versions-of-appstream-content_using-appstream.html#modular-dependencies-and-stream-changes_managing-versions-of-appstream-content "模块依赖关系和流更改"){.xref}。
-   有关如何升级模块流的步骤，请参阅
    ["切换到更新的流"一节](#managing-versions-of-appstream-content_using-appstream.html#switching-to-a-later-stream_managing-versions-of-appstream-content "切换到更新的流"){.xref}。
:::
:::
::: section
::: titlepage
# []{#introduction-to-modules_using-appstream.html#module-profiles_introduction-to-modules}模块配置集 {.title}
:::
[*配置集（profile）*]{.emphasis}
是为特定用例一起安装的推荐软件包列表，比如服务器、客户端、开发、最小安装或其他用例。这些软件包列表可以包含模块流之外的软件包，通常来自
BaseOS 存储库或流的依赖软件包。
使用配置集安装软件包是为方便用户提供的一次性操作。它不会阻止安装或卸载该模块提供的任何软件包。您还可以使用同一模块流的多个配置集安装软件包，而无需进一步准备步骤。
每个模块流可以有任何数量的配置集，包括没有。对于任何给定模块流，其某些配置集可以被标记为
[*default*]{.emphasis}，并在没有显式指定配置集时用于配置集安装操作。但是，不需要为模块流存在默认配置文件。
::: example
[]{#introduction-to-modules_using-appstream.html#idm139758679927536}
**例 2.2. [httpd]{.strong} 模块配置集**
::: example-contents
提供 [**[Apache]{.application}**]{.strong} web 服务器的
[**httpd**]{.strong} 模块为安装提供以下配置集：
::: itemizedlist
-   `common`{.literal} - 强化生产就绪部署（默认配置集）
-   `devel`{.literal} - 对 进行修改所需的软件包 `httpd`{.literal}
-   `minimal`{.literal} - 提供运行的 webserver 的最小软件包集合
:::
:::
:::
:::
:::
[]{#finding-rhel-8-content_using-appstream.html}
::: chapter
::: titlepage
# []{#finding-rhel-8-content_using-appstream.html#finding-rhel-8-content_using-appstream}第 3 章 查找 RHEL 8 内容 {.title}
:::
以下小节论述了如何定位和检查 Red Hat Enterprise Linux 8 的 AppStream 和
BaseOS 软件仓库中的内容。
::: itemizedlist
-   ["搜索软件包"一节](#finding-rhel-8-content_using-appstream.html#searching-for-package_finding-rhel-8-content "搜索软件包"){.xref}
    描述如何搜索所需内容的软件包。
-   ["列出可用模块"一节](#finding-rhel-8-content_using-appstream.html#listing-available-modules_finding-rhel-8-content "列出可用模块"){.xref}
    描述如何列出可用模块并查找有关模块的详情。
-   [例 3.1
    "查找模块详情"](#finding-rhel-8-content_using-appstream.html#example-finding-out-details-about-a-module_finding-rhel-8-content "例 3.1. 查找模块详情"){.xref}
    包含更多详情检查模块所需步骤示例。
-   ["列出内容的命令"一节](#finding-rhel-8-content_using-appstream.html#commands-for-listing-content_finding-rhel-8-content "列出内容的命令"){.xref}
    提供可用于检查内容的命令参考。
:::
::: section
::: titlepage
# []{#finding-rhel-8-content_using-appstream.html#searching-for-package_finding-rhel-8-content}搜索软件包 {.title}
:::
这部分论述了查找提供特定应用程序或其他内容的软件包所需的步骤。
::: itemizedlist
**先决条件**
-   所需应用程序或内容的名称必须是已知的
:::
::: orderedlist
**流程**
1.  使用文本字符串搜索软件包，如应用程序名称：
    ``` screen
    $ yum search "text string"
    ```
2.  查看软件包详情：
    ``` screen
    $ yum info package
    ```
:::
:::
::: section
::: titlepage
# []{#finding-rhel-8-content_using-appstream.html#listing-available-modules_finding-rhel-8-content}列出可用模块 {.title}
:::
这部分论述了查找可以使用的模块及其详情所需的步骤。
::: orderedlist
**流程**
1.  列出您的系统可用的模块流：
    ``` screen
    $ yum module list
    ```
    此命令的输出列出了单独行中的名称、流、配置集和概述的模块流。
2.  显示一个模块详情，其中包括描述、所有配置集列表以及所有提供的软件包列表：
    ``` screen
    $ yum module info module-name
    ```
3.  可选：您还可以列出这些软件包由每个模块配置集安装：
    ``` screen
    $ yum module info --profile module-name
    ```
4.  显示模块的当前状态，包括已启用的流和安装的配置集：
    ``` screen
    $ yum module list module-name
    ```
:::
::: itemizedlist
**其它资源**
-   [第 2 章
    *模块简介*](#introduction-to-modules_using-appstream.html "第 2 章 模块简介"){.xref}
:::
::: example
[]{#finding-rhel-8-content_using-appstream.html#example-finding-out-details-about-a-module_finding-rhel-8-content}
**例 3.1. 查找模块详情**
::: example-contents
本例演示了如何在 AppStream
存储库中定位模块以及如何找到更多有关它的内容。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
本例中的输出已编辑为简洁。实际输出可能包含比这里显示的信息多。
:::
::: orderedlist
**流程**
1.  列出可用模块：
    ``` screen
    $ yum module list
    Name        Stream  Profiles    Summary
    (...)
    postgresql  9.6     client,     PostgreSQL server and client module
                        server [d]
    postgresql  10 [d]  client,     PostgreSQL server and client module
                        server [d]
    postgresql  12      client,     PostgreSQL server and client module
                        server [d]
    (...)
    Hint: [d]efault, [e]nabled, [x]disabled, [i]nstalled
    ```
2.  检查 [**postgresql**]{.strong} 模块的详情：
    ``` screen
    $ yum module info postgresql
    Name             : postgresql
    Stream           : 10 [d][a]
    Version          : 820190104140132
    Context          : 9edba152
    Profiles         : client, server [d]
    Default profiles : server
    Repo             : appstream
    Summary          : PostgreSQL server and client module
    Description      : (...)
    (...)
    Name             : postgresql
    Stream           : 12
    Version          : 8010120191120141335
    Context          : e4e244f9
    Profiles         : client, server [d]
    Default profiles : server
    Repo             : appstream
    Summary          : PostgreSQL server and client module
    Description      : (...)
    (...)
    Name             : postgresql
    Stream           : 9.6
    Version          : 820190104140337
    Context          : 9edba152
    Profiles         : client, server [d]
    Default profiles : server
    Repo             : appstream
    Summary          : PostgreSQL server and client module
    Description      : (...)
    (...)
    Hint: [d]efault, [e]nabled, [x]disabled, [i]nstalled, [a]ctive
    ```
    由于没有指定流，因此所有流都用于列表。
3.  检查 [**postgresql**]{.strong} 模块流 [**10**]{.strong} 中的配置集：
    ``` screen
    $ yum module info --profile postgresql:10
    (...)
    Name   : postgresql:10:820190104140132:9edba152:x86_64
    client : postgresql
    server : postgresql-server
    ```