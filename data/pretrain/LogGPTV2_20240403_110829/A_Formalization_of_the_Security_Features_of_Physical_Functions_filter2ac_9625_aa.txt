title:A Formalization of the Security Features of Physical Functions
author:Frederik Armknecht and
Roel Maes and
Ahmad-Reza Sadeghi and
François-Xavier Standaert and
Christian Wachsmann
2011 IEEE Symposium on Security and Privacy
A Formal Foundation for the Security Features of Physical Functions
Frederik Armknecht∗, Roel Maes†, Ahmad-Reza Sadeghi‡, François-Xavier Standaert§, and Christian Wachsmann¶
∗ University of Mannheim, Germany
PI:EMAIL
† K.U. Leuven, ESAT/COSIC, IBBT, Leuven, Belgium
PI:EMAIL
‡ TU Darmstadt and Fraunhofer SIT Darmstadt, Germany
PI:EMAIL
§ Université catholique de Louvain, Belgium
PI:EMAIL
¶ TU Darmstadt, Germany
PI:EMAIL
Abstract—Physical attacks against cryptographic devices
typically take advantage of information leakage (e.g., side-
channels attacks) or erroneous computations (e.g., fault injec-
tion attacks). Preventing or detecting these attacks has become
a challenging task in modern cryptographic research. In this
context intrinsic physical properties of integrated circuits, such
as Physical(ly) Unclonable Functions (PUFs), can be used
to complement classical cryptographic constructions, and to
enhance the security of cryptographic devices. PUFs have
recently been proposed for various applications, including anti-
counterfeiting schemes, key generation algorithms, and in the
design of block ciphers. However, currently only rudimentary
security models for PUFs exist, limiting the conﬁdence in the
security claims of PUF-based security primitives. A useful
model should at the same time (i) deﬁne the security properties
of PUFs abstractly and naturally, allowing to design and
formally analyze PUF-based security solutions, and (ii) provide
practical quantiﬁcation tools allowing engineers to evaluate
PUF instantiations.
In this paper, we present a formal foundation for security
primitives based on PUFs. Our approach requires as little
as possible from the physics and focuses more on the main
properties at the heart of most published works on PUFs:
robustness (generation of stable answers), unclonability (not
provided by algorithmic solutions), and unpredictability. We
ﬁrst formally deﬁne these properties and then show that they
can be achieved by previously introduced PUF instantiations.
We stress that such a consolidating work allows for a mean-
ingful security analysis of security primitives taking advantage
of physical properties, becoming increasingly important in the
development of the next generation secure information systems.
Keywords-Physically Unclonable Function (PUF), Formal
Security Model, Robustness, Unclonability, Unpredictability
I. INTRODUCTION
Research on Physically Unclonable Functions (PUFs) was
initiated by the work of Pappu [1], [2] and aims to construc-
tively exploit the (random) physical variations that can be
found in various objects. The core concept put forward by
PUFs is the use of unique physical properties in order to
identify a device rather than assigning an arbitrary identity to
it upon creation, like a barcode, an electronic product code,
or a cryptographic key. In fact, the underlying principles
of PUFs were known and applied much earlier, mainly in
different attempts to design anti-counterfeiting mechanisms
(see, e.g., [3], [4], [5], [6]). Following these seminal con-
tributions, it was quickly realized that PUFs can be used
beyond identiﬁcation and anti-counterfeiting applications for
which they were initially designed. For example, PUFs can
be used to generate and securely store strong cryptographic
keys (see, e.g., [7], [8]). They can even be an integral part
of cryptographic primitives, emerging hardware-entangled
cryptography [9], where security is based on the physical
properties of PUFs instead of mathematical problems. Today,
there are already several PUF-based security products aimed
for the market (e.g., RFID, IP-protection, anti-counterfeiting
solutions) [10], [11]. More generally, the exploitation of
physics is an appealing solution in the evolutionary perspec-
tive of information technologies for at least two reasons:
ﬁrst, computing and communication devices tend to become
smaller and smaller, and their deep integration leads to
the apparition of many physical effects that were typically
unnoticed in former technologies (including manufacturing
variability or quantum effects). In this context, it appears
natural to exploit the physics, rather than systematically
struggling against it in order to minimize parasitic effects.
Second,
the increasing development of distributed (e.g.,
Cloud) computing and the growing interconnection of bil-
lions of objects within the emerging “Internet of Things”
also creates an important trust and security challenge. In
this context, the ability to equip each object or computing
device with a unique identity, which can be used as a trust
1081-6011/11 $26.00 © 2011 IEEE
DOI 10.1109/SP.2011.10
397
anchor in higher level security architectures, would be of
considerable help, and is typically what could be provided
by PUFs at low manufacturing costs [12].
Quite naturally, exploiting physical properties in security
systems also raises important formalization problems. The
core issues are to determine which properties of physical
objects need to be deﬁned, and to ﬁnd efﬁcient ways to
guarantee them in practice. In other words, one of the main
challenges for using PUFs in future security applications is
to properly integrate them in complex systems, where some
of their physical properties can be a real advantage compared
to purely algorithmic solutions. In this respect, useful and
reasonable security deﬁnitions of PUFs should be both
(i) sound for cryptographers, in order to allow the analysis
of PUF-based cryptographic systems, and (ii) empirically
veriﬁable by engineers, such that the security levels guaran-
teed by the physics can be evaluated (or at least be lower
bounded). These challenges give a strong motivation for
introducing a security model for PUFs that uniﬁes previous
formalization attempts and at the same time satisﬁes (i)
and (ii). For this purpose, our rationale is based on the
following observations:
1) It is generally difﬁcult to argue about the physical
properties of an object, e.g., compared to classical
cryptography, where explicit security parameters can
do an excellent job in this respect.
2) It is generally unknown if the properties expected for
PUFs, such as unpredictability or unclonability, relate
to any exponentially hard problem. While this situation
can be unsatisfying from a theoretical point of view,
it is in fact similar to the situation of many primitives
used in applied cryptography. For example, there is no
exponential hardness problem on which current block
ciphers are based, e.g., the AES is only expected to
provide a security level of roughly 2128 operations.
3) The interface of PUFs to the outside world usually
does not directly access the physics but uses some
mathematical post-processing of
the PUF outputs
(which we denote as extractor algorithm).
As a consequence of (1) and (2), our focus is to start with
a set of three basic properties allowing the design of hybrid
systems combining PUFs with classical algorithms, and to
formalize PUFs by security notions similar to those of,
e.g., block ciphers, with constant security levels that can be
properly quantiﬁed by engineers in a physical counterpart
to cryptanalysis. First, PUFs must be robust,
i.e., able
to provide stable outputs, since non-robust PUFs would
signiﬁcantly harm the efﬁciency of the underlying system.
Robustness essentially captures the resilience of a PUF
system to noisy measurements. Next, we investigate formal
deﬁnitions of unclonability, which is a central property of
PUFs that cannot be guaranteed by purely algorithmic so-
lutions. Having improved arguments of unclonability, quan-
398
tiﬁed within a sound model, would better motivate the use
of PUFs in many security applications. Third, we propose
a deﬁnition of unpredictability of PUF outputs, which is
the weakest cryptographic property that could be expected
from PUFs. While unpredictability could also be guaranteed
by algorithmic means, we believe that the inherent physical
randomness provided by PUFs is worth to be exploited
as well. As a consequence of (3), we ﬁnally propose to
deﬁne these cryptographic properties as function of the
extractor algorithm instead of a plain PUF. By applying our
framework and deﬁnitions to PUF instances, we show that
our abstractions are useful and properly capture the physical
properties for security purposes.
The rest of the paper is structured as follows: in Section II
we analyze previous approaches to the formalization of the
security properties of physical functions and point out their
weaknesses and drawbacks. Then, we present our general
framework for the formalization of physical functions in
Section III and deﬁne robustness in Section IV, physical un-
clonability in Section V, and unpredictability in Section VI.
Finally, we conclude in Section VII.
II. RELATED WORK
This section gives a comprehensive but concise overview
of different constructions of physically unclonable functions
and the attempts to formalize their properties. A more
extensive discussion on all known types of PUFs and their
deﬁning properties is provided by Maes et al. [13].
A. A History of PUFs
The initial idea of Pappu [1], [2] was to use optically
transparent tokens, which are randomly doped with light
scattering particles, as unique and practically unclonable
identiﬁers, e.g., as an alternative to smart cards. An incident
laser beam on the token creates an unpredictable speckle pat-
tern, which is highly sensitive to the random arrangement of
the scattering particles and to the relative orientation of the
token to the laser beam. The unclonable pattern is captured
and processed into a unique identiﬁer. This construction
became known as the optical PUF and is well studied. Tuyls
et al. [14] showed bounds on the difﬁculty of learning the
optical PUF in an attempt to make an algorithmic model, and
Pappu already showed that the tokens are tamper-evident,
i.e., an invasive attack on the token, e.g., in order to learn
the positions and sizes of the scatters, signiﬁcantly changes
the arising speckle patterns and hence can be detected.
Despite these very interesting properties, the optical PUF
has a number of practical drawbacks: the high sensitivity on
the laser orientation poses very high mechanical constraints
on the construction and its strenuous readout setup, which
limits its use in cryptographic and security applications (e.g.,
identiﬁcation schemes).
Following the introduction of the optical PUF, many
attempts to construct more practical PUFs were introduced.
The general trend is to embed PUFs in silicon integrated
circuits (ICs). The rationale behind this is that the PUF’s
outputs or responses can be used directly on the chip, partic-
ularly in combination with a secret key generation algorithm,
to enable more elaborate security applications. In the coating
PUF [15], a silicon chip is covered with a randomized
dielectric coating that affects the exact capacitance values
of underlying metal sensors, leading again to unique and
practically unclonable PUF responses. It was shown that
this construction provides tamper-evidence even for other
components of the chip containing the PUF, which is a very
desirable property for security-critical integrated circuits.
However, the amount of unique information provided by a
coating PUF is limited by the number of sensors that can be
placed on the chip. Moreover, providing randomized coating
is a highly specialized and thus an additional and costly step
in the already complex manufacturing ﬂow of an IC.
Further integration of PUFs on ICs was proposed by
the intrin-
Gassend et al. [16]. The idea is to exploit
sic randomness introduced during the fabrication of the
chip. Typical production ﬂows of silicon ICs suffer from
manufacturing variability, i.e., uncontrollable processes that
typically have an effect at the submicron structures of the
IC, which causes every IC to behave slightly different.
Gassend et al. [16], [17] ﬁrst showed that unique effects of
manufacturing variability can be detected by observing the
frequency of identically designed asynchronous oscillating
loops. More elaborate ring-oscillator based constructions
were proposed later and their statistical properties were
extensively studied [17], [18], [19]. Similarly to these ring
oscillator PUFs, it was shown in [20] that manufacturing
variability also affects the outcome of a race condition
the so-called arbiter
between two identical delay lines,
PUF. By using a challengeable delay circuit, the number
of responses of a single delay-based PUF can be made
exponentially large in the dimensions of the PUF. However,
it was realized early that a relatively small number of
challenge-response pairs enables to learn these PUFs to such
detail that unknown responses can be predicted with great
accuracy [20], [21], [22]. A number of attempts to harden
the learning of delay-based PUFs [23], e.g., through the use
of non-linear elements, have not been able to completely
prevent sophisticated learning algorithms from predicting
responses with non-negligible advantage [24].
Another approach towards using manufacturing variability
as a source for on-chip embedded PUFs makes use of bi-
stable memory cells. When such a cell converges from an
unstable to one of both stable states, it will often have a
preference of one state over the other. This effect, which was
ﬁrst observed in the power-up behavior of SRAM cells by
Guajardo et al. [25] and Holcomb et al. [26], originates from
the mismatch of the symmetry of the memory cell, which
is again caused by silicon manufacturing variability. This
construction has been called SRAM PUF. Similar behavior
has been observed in other bi-stable memory structures such
as ﬂip-ﬂops [27], [28] and latches [29], [30]. The amount of
unique responses of a memory-based PUF is limited by the
number of its memory cells but the information density is
much higher compared to, e.g., a coating PUF. Opposed to
most delay-based PUFs, it is fairly safe to assume that each
response of a memory PUF, originating from an individual
element, is independent of the others and hence unlearnable.
The latter two PUF proposals, based on silicon delay
elements and bi-stable memory structures, have also been
labelled intrinsic PUFs. This is due to the fact that they
exploit the intrinsic device uniqueness caused by manu-
facturing variability, as opposed to, e.g., optical PUFs and
coating PUFs, where randomness is explicitly introduced
during the manufacturing process of the PUF. Additional
properties of intrinsic PUFs are that the whole PUF, in-
cluding the component that measures the PUF responses,
is embedded into the device and can be built using the
standard device manufacturing ﬂow without the need for
custom processes. Intrinsic PUFs are particularly well suited
for applications where physics is used to generate secret data
(e.g., cryptographic keys), since the PUF response must not
leave the device.
Extrinsic (e.g., optical) PUFs have advantages in certain
scenarios as well, e.g., in anti-counterfeiting applications,
where the ability to directly observe the PUF answers (and
the measurement process) can increase the conﬁdence of the
veriﬁer. Notable examples of such extrinsic PUFs are based
on the uniqueness of the structure of regular paper [31], [32].
B. Former Formal PUF Modelling Attempts