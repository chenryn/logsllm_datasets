For example, portable 802.11 devices such as laptops and handheld
devices often transmit at power levels well below the maximum in
order to conserve their battery, meaning that even though SWIFT’s
effect on two devices in different locations might be very different,
the transmissions from those two devices might be indistinguish-
able from SWIFT’s perspective. Accounting for all this variability
requires using a very conservative threshold that wastes many bins.
Second, even if one could identify the exact bins the narrowband
device uses for its transmissions, this may not be the correct set of
bins to avoid. Since transmitters leak power into bins adjacent to
the ones they use, a wideband transmitter might need to avoid bins
that are unused by the narrowband device if using them would leak
signiﬁcant power into the narrowband bins. Conversely, a wideband
device might be able to use bins that are used by the narrowband
device without affecting narrowband operation. This might happen if
the narrowband device is far away from the wideband transmitter, or
uses highly redundant coding schemes (e.g., Zigbee [37]). Because
these effects depend on the distance and receive sensitivity of the
narrowband device, it is impossible to account for them without being
extremely conservative in the choice of threshold.
The key problem with current solutions is that they use the wide-
band device’s view of the narrowband transmissions in an open loop,
as a proxy for how the narrowband device will observe the wideband
transmissions. Asymmetric links, and varying transmission powers
and receive sensitivities, make this a poor proxy. SWIFT instead
uses a technique we call adaptive sensing, which closes the loop by
taking advantage of the observation that many narrowband devices
react in some perceivable way if wideband transmissions disrupt
their transmissions. In particular, a large class of narrowband tech-
nologies in the unlicensed spectrum reacts to interference, either at
lower layers (e.g., carrier-sense and autorate) or higher layers (e.g.,
TCP or end-user backoff). Intuitively, SWIFT pokes the narrowband
device by putting power in ambiguous bins, notes any changes in
the narrowband power proﬁle, and backs away if such a reaction is
observed.
Note that our goal with adaptive sensing is not to use narrowband
bins during short gaps in narrowband transmissions; rather, we design
it to immediately relinquish bins that it suspects of being used by
narrowband devices, and reuse them only when conﬁdent that the
narrowband devices have disappeared for several minutes.
5.1.2 Detecting Narrowband Reaction
SWIFT continuously senses the medium whenever it is not sending
or receiving a packet. It converts the incoming time signal to the
frequency domain using an FFT, and then calculates the current
power in each bin. These power measurements are used both to
detect the existence of a narrowband device, and to identify whether
the narrowband device has reacted to the wideband device.
SWIFT detects the presence of a narrowband device in a bin, by
comparing the power in that bin to the noise ﬂoor. SWIFT computes
the noise ﬂoor by taking advantage of its wide band. Since it is highly
unlikely that narrowband devices are simultaneously present in all
bins, SWIFT just computes the minimum power across all bins and
averages it over time to estimate the noise ﬂoor. Before SWIFT runs
its adaptive sensing algorithm to choose the correct set of bins, it uses
a conservative threshold that declares a bin narrowband-occupied if
the power in that bin exceeds the noise ﬂoor by 3 dB in any sample,
and narrowband-free otherwise. A sample is considered narrowband-
occupied if any bin in that sample is narrowband-occupied.
SWIFT also uses its power measurements to compute four metrics
that capture the most common responses to interference.
• Inter-transmission time captures the behavior of narrowband de-
vices that react to interference by backing off (e.g. 802.11 or TCP
backoff). It is computed by counting the number of consecutive
narrowband-free samples.
• Transmission duration captures the behavior of devices that fall
back to more robust, lower rate modulation schemes, thereby tak-
ing a longer amount of time for each transmission (e.g. autorate
in 802.11). It is computed by counting the number of consecutive
narrowband-occupied samples.
• Average narrowband power allows SWIFT to deal with multiple
narrowband devices in the same band (e.g., two 802.11 devices).
If SWIFT interferes with a nearby device causing it to backoff, but
a more distant device ﬁlls in the freed bandwidth such that none
of the other metrics changes, the average power will signiﬁcantly
decrease, allowing SWIFT to detect the change. This metric is
computed by averaging the power in narrowband-occupied samples
over a window.
• Probability of transmission immediately after SWIFT captures
whether SWIFT triggers the carrier-sense reaction of narrowband.
If SWIFT triggers narrowband carrier-sense, the narrowband de-
vice will not transmit immediately after a SWIFT packet, because
it waits to ensure that the medium is free (In 802.11, this translates
to the DIFS, followed by a random contention window). The met-
ric is computed by looking at the power immediately after SWIFT
ﬁnishes transmitting a packet, and setting a ﬂag to 0 if the sample
is narrowband-free, and 1 otherwise. The probability is computed
as the average of these ﬂags over a recent window.
SWIFT maintains sufﬁcient statistics to compute the mean and
variance of each metric. To achieve high conﬁdence in the value of
a particular metric, SWIFT needs to collect multiple measurements
of that metric. Note that for the ﬁrst three metrics, SWIFT gets one
measurement every time it sees a narrowband transmission. The last
metric is different, however, in that it can be measured independent
of whether the narrowband device transmits or not. If the narrow-
band device has nothing to send though, the fact that no narrowband
transmission is observed provides no information. Hence, SWIFT
only includes samples of this metric when it senses a narrowband
transmission within some maximum time after a SWIFT packet (1
ms in our implementation). Thus, the conﬁdence of our estimates of
all four metrics depends only on how many samples are obtained, and
is independent of how sporadically the narrowband device transmits.
START
Narrowband 
Detected 
Above Noise 
Floor?
no
yes
Back off to
Conservative
Threshold
Compute
Normal
Metrics
Advance
UsableBins
by 1
Compute
Current 
Metrics
Are 
Metrics 
Normal?
no
… 01100010 …
yes
no
Are Metrics 
Normal?
Continue to 
Compute 
Metrics
no
All Bins 
Marked 
Usable?
yes
yes
Retreat to
Previous
Choice
BIN 1
BIN 2
BIN W
l
n
o
i
t
a
u
d
o
M
T
F
F
e
s
r
e
v
n
I
BIN 1
BIN 2
BIN W
BIN W
DAC
TIME SAMPLES
OFDM SYMBOL
BIN 1
BIN 2
BIN 1
BIN 2
BIN W
BIN W
BIN W
BIN W
I
Y
C
N
N
A
E
M
U
Q
O
O
E D
E
D
R
R
F
F
UNALIGNED FFT
ALIGNED FFT
TIME DOMAIN
Figure 5: Conversion of bits into OFDM symbols: Values in indi-
vidual frequency bins are combined in each time sample, and can be
recovered only by computing appropriately aligned FFTs.
opportunity to transmit during SWIFT’s idle intervals, and hence be
quickly detected, allowing SWIFT to immediately back away and
trigger the adaptive sensing algorithm for this new narrowband group.
5.1.4 Measuring Statistically Signiﬁcant Changes
When should SWIFT decide that changes in some metric are not due
to statistical aberrations, but reﬂect a real change in the performance
of the narrowband device?
SWIFT uses a statistical test called a t-test, typically used to decide
whether a drug has had a statistically signiﬁcant effect on the popula-
tion studied [17]. A t-test takes the means, variances, and number of
samples of the two compared sets: normal and current. It computes
the following t-value where the ¯x ’s and σ ’s represent the means and
standard deviations, respectively, of the two sets, and nnorm and
ncurr refer to the number of samples in the normal and current set:
t =
¯xnorm − ¯xcur
q σnorm
+ σcur
ncur
nnorm
.
To determine whether any difference between the means is statisti-
cally signiﬁcant, the t-value must be combined with an alpha level,
which represents the acceptable probability of being wrong. In our
case, this value represents the probability that the t-test will tell us
that SWIFT is interfering even if it is not. This is a parameter which
effectively sets the aggressiveness of SWIFT. We use an alpha level of
0.05, typical for scientiﬁc and medical studies. The t-value combined
with the alpha level and the total number of samples is then used in
a table look-up to determine whether the t-test passes, i.e., whether
SWIFT has had a statistically signiﬁcant impact on narrowband.
5.2 Cognitive PHY
The cognitive PHY uses the output of adaptive sensing to provide a
single high-throughput link over the set of usable bins.
On the transmitter, this means ensuring that no power is used in
bins marked as narrowband-occupied by the adaptive sensing module.
This is straightforward with OFDM since it naturally allows different
power assignments for each frequency bin.
On the receiver side, the cognitive PHY has to ensure that the
receiver can receive in non-contiguous bins even when narrowband
devices are using the other bins. At ﬁrst, it might seem that this can be
done analogous to the transmitter by taking the FFT of the incoming
signal, and just using values from the bins of interest. However,
this is impractical. To understand why, consider the frequency-time
diagram in Fig. 5 which illustrates how the N OFDM frequency bins
are converted to N time samples that together represent an OFDM
Figure 4: Control Flow for Adaptive Sensing Algorithm
5.1.3 Adaptive Sensing Algorithm
We deﬁne a bitvector UsableBins, which identiﬁes the set of bins
that SWIFT currently uses. The adaptive sensing algorithm starts
with a conservative choice of UsableBins that does not interfere
with the narrowband device, and iteratively tightens the setting of
UsableBins to converge on the maximal set of usable bins that
does not affect the narrowband device. Fig. 4 shows the control ﬂow
of our algorithm, which we describe in detail below.
Whenever SWIFT ﬁrst detects narrowband power in a bin (using
the conservative threshold), it immediately backs away from that bin,
and updates UsableBins accordingly. This conservative choice
of UsableBins allows SWIFT to be conﬁdent that observations
made in this state represent normal narrowband behavior.
After gathering enough data at this normal setting, SWIFT begins
the process of determining a choice of UsableBins that does not
affect the narrowband device, but provides a maximal number of
available bins. It starts by grouping contiguous sets of narrowband-
occupied bins into a single narrowband group. Each narrowband
group is then assigned a top and bottom bin which bound, for this
narrowband group, the range of bins which must be left unused.
Next, SWIFT will try to grow UsableBins by using the top and
bottom bins in each narrowband group and observing whether the
narrowband device reacts. At each step, SWIFT alternates between
reducing the top bin by one and increasing the bottom bin by one. For
each choice of UsableBins, SWIFT waits to gather data measuring
the effect of this new choice. It continuously monitors the incoming
data by comparing the metrics with this bin choice to those observed
under normal behavior with the conservative bin choice. If, at any
point, SWIFT determines that it has impacted any of the metrics, it
immediately moves back one step, and resets UsableBins to the
previous decision. If, however, after gathering enough data, SWIFT
determines that none of the metrics are impacted, it moves on to the
next step, and tightens its choice further by one bin.
For each narrowband group, SWIFT independently continues this
process until it either reaches a bin choice for which it notices the
narrowband device reacting, in which case it retreats to the previous
UsableBins setting, or it marks as usable all bins in this nar-
rowband group and still notices no reaction. At this point, SWIFT
continues to monitor the metrics and compare them to normal. If
it notices a change at any point, SWIFT retreats to the conservative
choice of UsableBins, recomputes normal metrics, and repeats
the probing process, as shown in Fig. 4.
Note that this algorithm inherently deals with dynamics. For ex-
ample, if the narrowband device moves closer or farther after SWIFT
has ﬁnalized a bin choice, the average narrowband power metric will
change from normal, and cause SWIFT to reinitiate the entire probing
process. Furthermore, if all narrowband devices in a group depart,
SWIFT will stop seeing any transmissions in the narrowband group,
time out the entire group after a predeﬁned interval, and reclaim
these bins. Also, as articulated in §3, a narrowband device appearing
in a new band currently occupied by SWIFT will always have the
symbol. As can be seen, the correct frequency domain values can
be retrieved from the time samples only when the FFTs are aligned
correctly on OFDM symbol boundaries. But the receiver can align
the FFT correctly on symbol boundaries only if it knows the starting
sample of a packet in the ﬁrst place!
Hence, we need to modify a few basic receiver algorithms to cope
with non-contiguous bands.
(a) Receiver Packet Detection: In order to perform any processing
on a packet, the receiver ﬁrst needs to determine the start of the packet
within a few time samples. Typically, this is done using the double
sliding window approach [23], which uses energy ratios to determine
the time sample where a burst of energy is received on the medium.
Since this operation happens in the time domain, it cannot dis-
tinguish between energy from narrowband devices and wideband
transmitters, and can be spuriously triggered by narrowband transmis-
sions. Recall that SWIFT concurrently transmits with narrowband
devices by using separate frequencies. Hence, if the receiver is kept
busy with false packet detections, it is very likely to miss desired
wideband transmissions.2
The solution is to actively ﬁlter the narrowband devices, allowing
the receiver to perform packet detection on the clean signal consisting
primarily of power from wideband transmitters. The choice of the
bins to ﬁlter is driven by the adaptive sensing module. However,
the receiver may not be able to use a ﬁlter per narrowband group
since ﬁlters are resource-intensive in hardware. Hence, SWIFT is
designed to use a small ﬁxed number of bandstop ﬁlters, whose
widths and center frequencies are dynamically conﬁgured. Note that
since these ﬁlters are purely on the receiver side, by deﬁnition, they
do not affect narrowband devices. A particular ﬁlter choice that is
not perfectly aligned with the desired set of bins to be ﬁltered only
affects packet detection to the extent of the amount of narrowband
energy that it lets in, or the amount of wideband transmitted energy it
ﬁlters out. The ﬁlter computation problem is formulated as a dynamic
program that eliminates as many narrowband bins as possible, while
maximizing the amount of received wideband energy. The details of
this optimization are omitted here for space, but described in [31].
(b) Receiver Packet Processing: Now that the start of the packet
has been detected accurately, the receiver has the right alignment
for the symbols and the rest of the packet processing can be done
in the frequency domain over the actual bins used by the wideband
system. Speciﬁcally, carrier frequency offset estimation, which is
traditionally done in the time domain, is instead performed in the fre-
quency domain after zeroing out the contributions of bins occupied by
narrowband, as determined by adaptive sensing. This permits a more
precise estimate than an application of the time domain estimation
algorithms on the noisy ﬁltered signal used for packet detection.
(c) Data reception: Recall that the transmitter, while assigning data
to bins, zeros out all bins that are deemed unusable by adaptive
sensing, and stripes data only across the remaining bins. Similarly,
when the receiver collects the received data, it only utilizes bits from
bins that are deemed unoccupied by narrowband devices. Again, we
note that since data reception happens after the alignment provided
by packet detection, it can work on the unﬁltered signal and hence
can precisely remove bins susceptible to narrowband interference.
5.3 Communication Over Uncertain Bands
Since each node in a SWIFT network independently decides the
bands that it can use for transmission and reception, differences in
2Due to the hardware pipelining typical to receivers [23], they cannot receive packets
while they are still working on the spuriously detected packet and have not rejected it.
Bin Index
1 2 3 4 5 1 2 3 4 5 1 2 3 4 5
Symbol 1
Symbol 2
Symbol 3
Transmitter
0
1 1 0 1
1 0 1 0
1 0 0
Receiver
0 X 1 1 0 1 Y 1 0 1 0 Z 1 0 0
Figure 6: Bin Disagreement Causes Communication Failure: If
the transmitter sends in bins 1, 3, 4, and 5 while the receiver listens
in 1, 2, and 5, then the receiver will decode noise in bin 2 as data, and
miss data in bins 3 and 4. These insertions and deletions will cause
a misalignment in the demodulated data stream, creating an error
pattern than cannot be rectiﬁed by standard error-correcting codes.
proximity to narrowband devices and variations in time make it likely
that a transmitter and receiver identify different bins as usable. For
example, a wideband sender and receiver that are just a few meters
apart may differ in their perspectives of narrowband-occupied bins
by as much as 10-20 MHz as we show in §7.2.
This disagreement between a transmitter and its receiver can be
a fatal obstacle to establishing an OFDM communication link. To
understand why, recall that an OFDM transmitter stripes data across
all usable OFDM bins. A receiver reconstructs the original data by
extracting bits from the individual bins. Thus, as shown in Fig. 6, if
the receiver expects data in a bin that the transmitter did not send in, it
will result in insertion of bits into the data stream. Conversely, if the
transmitter sends data in a bin that the receiver does not expect data in,
it will manifest itself as deletions of bits from the data stream. Thus,
disagreements about bins result in alignment and framing errors, and
produce a wireless channel that has unknown insertions and deletions,
which conventional error correcting codes cannot deal with.
We solve this problem using two mechanisms: (a) an infrequent
synchronization phase when the communicating wideband pair has
a drastic disagreement, say, when a wideband node boots up, or
when many narrowband devices in different bands appear simultane-
ously, and (b) a low overhead handshake, which is used when nodes
that have previously agreed experience a limited disagreement, say,
because a single narrowband device was turned on or moved closer.
SWIFT nodes are equipped with a robust initial synchronization
mechanism. Each SWIFT node divides the whole transmission
band into chunks of 16 bins, checksums and codes the value of
its UsableBins, and sends it simultaneously in all chunks. Assum-
ing that the bandwidth of the wideband node is large enough, and has
enough bins that are not interfered with narrowband, at least one of
these chunks in this sync packet will be received correctly, allowing
the nodes to establish connectivity. Note that the sync packet uses all
OFDM bins, and hence does not suffer from an alignment problem.
Even after a SWIFT node pair is synchronized, they can still suffer
from occasional disagreements, for example, when adaptive sensing
changes the set of usable bins on a node. We leverage the existing
agreement to transform the potential disagreements into bit errors, i.e.,
we transform the hard problem of unknown insertions and deletions
into the simpler problem of bit errors, a problem that all wireless links
know how to deal with by adding practical error correcting codes.
To do so, SWIFT exploits the following key observation. If the
transmitter stripes the data across the previously agreed bins, there
will be no deletions or insertions. The problem, however, is that,
by transmitting in the old bins, some of which may no longer be
free, the transmitter might hinder a narrowband device. To address
this problem, SWIFT stripes the data across the previously agreed