1. Increasing the size of the architecture generally decreases
the success rate as long as the adversary cannot guess all
the bits in the architecture. This is caused by the increased
amount of algorithmic noise in the side-channel measure-
ments. As previously mentioned, it is also true for more
powerful adversaries. For example, an adversary targeting
16 bits of a 32-bit (resp. 64-bit) architecture would have its
observations aﬀected by 16 bits (resp. 48 bits) of noise. Im-
portantly, the meaningful parameter to reduce the success
rate against one part of the key is the size of the architec-
ture (not algorithm). This point emphasizes that our PRNG
will hardly be secure when implemented in small (e.g. 8-bit)
controllers while provide a higher level of security when im-
plemented in larger devices (e.g. ASICs, FPGAs).
2. For the investigated leakage functions, increasing the num-
ber of observed rounds does not signiﬁcantly improve the
success rate, which saturates after very few rounds. The
exact saturation value of the success rate is typically depen-
dent on the structure of the leakage function. For instance,
considering the identity leakage function, the success rate
saturates after less than 10 PRNG rounds, around 0.18 for
a 128-bit architecture implementing AES-128 and around
0.08 for a 256-bit architecture implementing AES-256.
7. PRACTICAL CONSEQUENCES
The simulations that we performed in the previous section
show that our construction allows bounding the success rate
on a single byte of the key. This result is of practical im-
portance as it allows using our observation of Equation (1)
and to deduce that the global success rate will increase ex-
ponentially with the length of the key. For instance, if we
go back to the architectures we mentioned in the previous
AES128,A (cid:39) (0.18)16 (cid:39) 2−40
paragraphs, we obtain that Succsc-kr-Kq
AES256,A (cid:39) (0.08)32 (cid:39) 2−116 for the corresponding
and Succsc-kr-Kq
two architectures, which seems quite reasonable for practical
applications. We see that the success rate decreases both be-
(cid:39) 0.18 →
cause of more algorithmic noise: Succ
(cid:39) 0.08, and because of the increased key
Succ
size (which is the dominant factor). Therefore, contrary to
the previous section, the key size of the algorithm (not im-
plementation) has a signiﬁcant impact to the global success
rate. These results show that even a pessimistic identity
leakage function combined with a reasonable amount of (al-
gorithmic or other) noise allows reaching low success rates.
sc-kr-Kq,[0···7]
AES256,A
sc-kr-Kq,[0···7]
AES128,A
Let us ﬁnally mention that Claims 2 and 3 in the previous
sections only state that the success rate of the Bayesian side-
channel adversary against our PRNG is either constant or
bounded for any number of observed rounds. But this does
not involve actual security if this constant value or upper
bound is close to one. Actual security requires that the suc-
cess rate after the observation of a single PRNG round is
suﬃciently small (as in the previous examples). This is a
requirement for the cryptographic hardware designers. We
conjecture that this condition holds for many practical in-
stances of our construction and therefore leads to implemen-
tations practically secure against side-channel attacks.
63
0510152000.050.10.150.20.25number of PRNG roundssuccess rateAES−128, 8−bit architectureAES−128, 32−bit architecture0510152000.10.20.30.40.50.60.7number of PRNG roundssuccess rateAES−128, 8−bit architectureAES−128, 32−bit architectureAES−256, 256−bit architectureAES−128, 128−bit architecture8. SECURE INITIALIZATION OF THE
PRNG WITH A PUBLIC SEED
A practical limitation in the assumptions of Section 4.2 is
the ﬁxed IV that prevents the straightforward initialization
of the PRNG by a regular user.
In this section, we con-
sequently illustrate the possibility to initialize our PRNG
with a public seed in the side-channel context, as usually
required in higher-level protocols. For example, such an ini-
tialization is useful in a side-channel resistant authentication
process, since it allows to challenge the PRNG with various
random seeds. Similarly, it can be used to re-synchronize
two devices securely. Looking back at Figure 1, the main
constraint is that the initialization should not allow the ad-
versary to encrypt an arbitrary number of plaintexts with
the same running key ki, k∗
i , as in a standard side-channel
attack. A solution, illustrated in Figure 6, is to use two
initial vectors IV0 and IV1. Then, a public n-bit random
number r is selected of which we denote the diﬀerent bits as
r(i). This solution holds in two steps:
1. Initialization: n cycles of the PRNG are executed, with-
out outputting any block yi. The initial vector is selected
as follows: zi = IV0 if r(i) = 0 and zi = IV1 if r(i) = 1.
2. Generation: after the initialization process, the IV if
ﬁxed at IV0 again and the PRNG outputs the yi blocks, as
in the original description in Section 2.
The black box properties of this initialization process are
mainly similar to those of the original PRNG description.
Assuming “good” block ciphers in our construction, it is ex-
pected that the 2n possible random numbers r give rise to 2n
diﬀerent internal states of the PRNG after the initialization.
Because of place constraints, we let the formal investigation
of this process as a scope for further research. Similarly, our
physical security analysis also holds. The only diﬀerence
is that the adversary now obtains the leakages correspond-
ing to two input values xi,0 and xi,1, for each running key
ki, k∗
i . Since in our previous analysis for the PRNG, the
amount of information provided to the side-channel adver-
sary is hidden in the leakage function abstraction, the PRNG
with initialization process just has to consider more (but still
limited) information leakages. Therefore, if suﬃcient noise
is present in the measurements, a suﬃcient security level can
be reached, as in the previous sections.
Figure 6: Secure initialization of the PRNG.
9. RELAXING THE ASSUMPTIONS
As previously mentioned, the assumptions 3, 4 and 5 in Sec-
tion 4.2 reduce the power of the side-channel adversary. In
this section, we discuss how relaxing these assumptions has
the same eﬀect as initializing the PRNG: it increases the
amount of leakages provided to an adversary. But as long
64
as a suﬃcient amount of noise can be inserted in the phys-
ical observations, this does not change our conclusions. In
particular, we have for the three considered assumptions:
a3. Actual block ciphers do have a key scheduling algorithm
and its execution generally leaks information. Considering
this additional leakage source can be integrated thanks to
the leakage function abstraction in the values lKi and lMi .
Note that if the execution of the key scheduling leaks too
much, it is possible to implement the assumption as such,
by just increasing the key material in the component ciphers.
i . For example, if a master key is such that k0
a4. Similarly, exploiting the leakages of the block cipher
E2 in our construction can give rise to additional leakages
on k0
0 = kr
0,
the key update involves that this equality will hold for any
pair k0
i . This leads to more information leakages which
can again be reﬂected in the values lKi and lMi . Note that a
way to improve this is to have diﬀerent updates for the keys
ki and k∗
i , kr
i , e.g. using both XOR and modular additions.
a5. Finally, our analysis considers an adversary targeting
the ﬁrst or last iteration of the PRNG. An improved adver-
sary would try to recover an intermediate key, taking ad-
vantage of both the leakage of the previous and forthcoming
iterations. This has a similar eﬀect as the observation of an
additional plaintext in the initialization process.
In summary, those assumptions have to be considered in
practice, if an actual implementation is to be designed and
its security is to be quantiﬁed (e.g. by determining the max-
imum success rate allowed). But they do not aﬀect our main
theoretical result, i.e. for reasonable leakage functions, the
success rate of a partial key recovery is bounded.
10. CONCLUSIONS
A block cipher-based PRNG secure against side-channel key
recovery is presented.
It is based on a re-keying strategy
that allows keeping the information leaked to a side-channel
adversary under control. Compared to most recent ad hoc
countermeasures to prevent side-channel attacks, our pro-
posal has the security advantage of being systematically an-
alyzed against a Bayesian side-channel adversary, which is
usually assumed to be the strongest one from an information
theoretic point of view. Compared to the physically secure
PRNG proposed in [14] by Micali and Reyzin, our proposal
is inspired by considerations from experience in side-channel
analysis, and is expected to be much more eﬃcient.
Our analysis is based on a hybrid approach, considering the
black box computational security and the physical security
(modelled by the notion of side-channel key recovery) sep-
arately. Our construction allows bounding the success rate
of side-channel adversaries when a divide-and-conquer strat-
egy is used to target speciﬁc parts of the key. As a result,
we obtain that the physical security against side-channel ad-
versary can be increased exponentially, by polynomially in-
creasing the PRNG security parameter, making the proba-
bility of a successful attack a negligible function. We believe
this analysis technique is not speciﬁc to our construction but
could be re-used on schemes where the analyzed leakages are
associated to rekeying through a XOR operation.
Open problems ﬁrst include the further investigation of the
diﬀerent working assumptions introduced in this work in or-
der to allow the formal analysis of the PRNG. Considering
diﬀerent adversarial strategies, alternative internal struc-
tures for the PRNG (e.g. by changing the key update pro-
cedure) and studying its physical implementation in various
devices are typical examples. In particular, an interesting
question is to determine the minimum architecture size (e.g.
8-bit, 32-bit, 128-bit, . . . ) required for the PRNG to provide
actual security. The impact of the key scheduling algorithm
is an important issue to consider with this respect. Since
our PRNG can be combined with former countermeasures
against side-channel attacks, another practically important
question is to determine how to provide security at the low-
est implementation cost. We note that the leakage functions
(Hamming weight and identity) analyzed in this work cor-
respond to powerful types of leakage. However, our analysis
assumed physical dependencies on all the internal conﬁgu-
ration of the target device. An experimental evaluation of
the PRNG is consequently required to evaluate the extent
to which this could be contradicted in practice. For exam-
ple, such global dependencies reasonably model the power
consumption of a device, but the electromagnetic analysis
can provide more local dependencies. The investigation of
such more powerful leakages is therefore required. As a ﬁrst
target, we suggest an AES Rijndael-based FPGA implemen-
tation of the PRNG using a 128-bit loop architecture.
From a more theoretical point of view, additional research
goals include the sound combination of the black box and
physical security in a uniﬁed way and the reduction of the
black box assumptions for the component ciphers in the
PRNG (presently considered as ideal ciphers). Extending
our security analysis towards the recent work in [9] is an-
other direction for further study. In particular, evaluating
the guessing entropy of our construction appears as an in-
teresting open question in order to determine the extent to
which combining a side-channel attack against our PRNG
with computational power would lead to similar conclusions
on the security of the primitive. It would ﬁnally be interest-
ing to consider the use of our approach for the construction
of other cryptographic primitives than a PRNG.
Acknowledgements: We thank Krzysztof Pietrzak, Den-
nis Hofheinz and Eike Kiltz from CWI for having pointed
out a mistake in a previous version of this paper. We also
thank Benoit Libert from UCL Crypto Group for interest-
ing discussions. We ﬁnally thank the program committee
members of ASIACCS for their interesting reviews.
11. REFERENCES
[1] M. Abdalla, M. Bellare, Increasing the Lifetime of a
Key: A Comparative Analysis of the Security of
Re-Keying Techniques, in the proceedings of
Asiacrypt 2000, Lecture Notes in Computer Science,
vol 1976, pp 546-559, Kyoto, Japan, December 2000.
[2] M. Bellare, J. Kilian, P. Rogaway, The Security of
the CBC Message Authentication Code, Journal of
Computer Systems, vol 61, num 3, pp 362-399, 2000.
491-506, Warsaw, Poland, May 2003.
[4] J. Black, P. Rogaway, T. Shrimpton, Black-Box
Analysis of the Block-Cipher-Based Hash-Function
Constructions from PGV, in the proceedings of
Crypto 2002, Lecture Notes in Computer Science, vol
2442, pp 320-335, Santa Barbare, USA, August 2002.
[5] S. Chari, J. Rao, P. Rohatgi, Template Attacks, in
the proceedings of CHES 2002, Lecture Notes in
Computer Science, vol 2523, pp 13-28, Redwood
City, CA, USA, August 2002.
[6] FIPS 197, “Advanced Encryption Standard,” Federal
Information Processing Standard, NIST, U.S. Dept.
of Commerce, November 26, 2001.
[7] O. Goldreich, Foundations of Cryptography, vol 1,
Cambridge U. Press, 2001.
[8] L. Goubin, J. Patarin, DES and Diﬀerential Power
Analysis, in the proceedings of CHES 1999, Lecture
Notes in Computer Science, vol 1717, pp 158-172,
Worcester, MA, USA, August 1999.
[9] B. K¨opf, D. Basin, An Information-Theoretic Model
for Adaptive Side-Channel Attacks, to appear in the
proceedings of ACM CCS 2007.
[10] M. Luby, C. Rackoﬀ, How to Construct
Pseudorandom Permutations from Pseudorandom
Functions, SIAM Journal of Computing, vol 17, num
2, pp 373-386, 1988.
[11] P. Kocher, Design and Validation Strategies for
Obtaining Assurance in Countermeasures to Power
Analysis and Related Attacks, in the proceedings of
the NIST Physical Security Workshop, Honolulu,
Hawai, September 2005.
[12] P. Kocher, Leak Resistant Cryptographic Indexed Key
Update, US Patent 6539092.
[13] S. Mangard, Hardware Countermeasures against
DPA - A Statistical Analysis of Their Eﬀectiveness,
in the proceedings of CT-RSA 2004, Lecture Notes in
Computer Science, vol 2964, pp 222-235, San
Francisco, CA, USA, February 2004.
[14] S. Micali, L. Reyzin, Physically Observable
Cryptography, in the proceedings of TCC 2004,
LNCS, vol 2951, pp. 278-296, Cambridge,
Massachusetts, USA, February 2004.
[15] C.E. Shannon, Communication theory of secrecy
systems, in Bell Systems Technical Journal, vol 28,
num 4, pp 656-715, 1949.
[16] F.-X. Standaert, T.G. Malkin, M. Yung, A Formal
Practice-Oriented Model for the Analysis of
Side-Channel Attacks, Version 2.0, Cryptology ePrint
Archive, Report 2006/139, 2006.
[17] F.-X. Standaert, E. Peeters, C. Archambeau, J.-J.
Quisquater, Towards Security Limits in Side-Channel
Attacks, in the proceedings of CHES 2006, Lecture
Notes in Computer Science, vol 4249, pp. 30–45,
Yokohama, Japan, October 2006.
[18] K. Tiri, M. Akmal, I. Verbauwhede, A Dynamic and
Diﬀerential CMOS Logic with Signal Independent
Power Consumption to Withstand Diﬀerential Power
Analysis on Smart Cards, ESSCIRC 2003.
[3] M. Bellare, T. Kohno, A Theoretical Treatment of
[19] A.C. Yao, Theory and Applications of Trapdoor
Related-Key Attacks: RKA-PRPs, RKA-PRFs, and
applications, in the proceedings of Eurocrypt 2003,
Lecture Notes in Computer Science, vol 5656, pp
Functions (Extended Abstract), in the proceedings of
FOCS 1982, pp. 80–91.
65