prefix-traces;  first hop ECT is cleared
 0.1
 0.2
 0.3
 0.4
 0.5
 0.6
 0.7
 0.8
 0.9
 1
interface hop divided by number of interface hops on path
Figure 1: CDF of interface-hop on path at which
ECT codepoint is cleared
that preserve ECT, while the ﬁfth hop’s quotation shows
ECT cleared. The responsible device could be the router at
the ﬁfth hop, the router at the fourth hop, or some middle-
box (e.g. a ﬁrewall, switch, or load balancer) between the two
that does not decrement TTL. The case of the prior router
being responsible occurs when routers decrement TTLs and
expire packets before performing other processing on the in-
coming packet. As mentioned in Section 3.4, there is also
the possibility of ICMP misquotations.
To resolve this ambiguity, we collect into a set “A” the in-
terfaces that did not clear ECT, i.e. interfaces where, on any
trace, the response from the next hop preserved ECT. As-
suming that an interface/router is consistent as to whether
it clears or preserves ECT, then for all the traces, the in-
terfaces in “A” should not clear ECT. We ﬁnd cases where:
(1) the interface ﬁrst reporting ECT cleared is in “A,” and
(2) the prior interface is in “A.” In our traces, one case does
not dominate the other. More interestingly, we discover a
third case where both interfaces are in “A,” which suggests
the action of middleboxes, and/or casts into doubt the as-
sumption of consistency. In the following we do not assume
which box cleared the codepoint, but report the two bound-
ing possibilities (given that the returned value is accurate).
For traces where all interface hops respond, and where
ECT is cleared, we record the hop number of the last router
interface that preserves ECT, and of the interface that ﬁrst
reported the cleared codepoint. By normalizing by the num-
ber of interface hops on the path, Figure 1 shows the CDF
of the relative position of ECT misbehavior along probed
paths. Examining at the bottom curve, “preﬁx-traces; ﬁrst
hop ECT is cleared,” for 40% of the traces the interface hop
which ﬁrst reports ECT cleared is at 20% or less along the
path. At the upper end of the CDF, for 20% of the traces,
the hop which ﬁrst reports ECT cleared is in within the last
20% of the path. Thus 40% of the traces fall in-between.
All four CDF’s show that there is a substantial portion of
the mass in the middle range of the path – suggesting that
there is signiﬁcant misbehavior within the core of the net-
work. (For both the website and preﬁx traces, the median
number of interface hops was 16 and only 4% of the paths
had 10 or fewer hops.) Since the last hop where the ECT is
set always comes before the ﬁrst hop where ECT is cleared,
the CDF of the former lies above that of the latter. Figure
1 shows that, overall, the ECT is cleared earlier on paths to
the popular websites.
AS’s where the ECT codepoint is cleared
Attributing cleared ECT to an AS introduces a well-known
ambiguity: router interfaces between AS’s may be assigned
addresses from either peer AS, or even use outside or private
addresses. We perform a basic disambiguation by scanning
across all traces and looking for instances where the sub-
sequent hop’s interface address is from the address space
originated by the same AS as the address of current hop.
With this requirement, many interface hops are not resolved
to an AS, and are simply labeled as “unknown.” With this
determination, we then scan through the traces a second
time, looking for where the ECT codepoint is cleared. In
the future, we will perform a more thorough procedure to
determine border routers [13].
In analogy to Figure 1, we would like to estimate where
on the AS path the ECT codepoint is ﬁrst cleared. For
the set of preﬁx-traces where all hops responded, we revisit
the subset on which the ECT codepoint was cleared, and
the pair of router-interface hops between which this ﬁrst oc-
curred. Using our restricted inference technique, frequently
one, or both, of these router interfaces can not be associ-
ated with certainty to an AS. This is expected since some
providers still clear the legacy ToS byte at their network
ingress, i.e. between AS’s. We ﬁnd that 55% these pairs
of router-interface hops have one of the AS’s classiﬁed as
“unknown,” and 11% have both so classiﬁed, and thus 34%
have both hops associated with an AS. When the two AS’s
are known, for 99% of the traces, the two AS’s are the same;
and for these, 32% are the same as the source AS, 17% are
the same as the destination AS, and the remainder, 51%,
are distinct from the source and destination AS. Thus we do
see cases where the ECT codepoint is cleared interior to an
AS (that is not the source AS).
Of all the AS’s seen on the preﬁx-traces, only about 1%
were detected to have cleared the ECT codepoint. In par-
ticular, of the over 37,000 AS’s seen on the preﬁx-traces,
only 177 AS’s were detected to have deﬁnitely cleared the
codepoint (the two AS’s that bound the clearing of the code-
point are the same); and only an additional 343 AS’s might
have cleared the codepoint. Though, if the codepoint had
not been cleared at the given interface, it possibly would
have been cleared at a subsequent interface/AS that was
not detected by our experiment.
In order to proceed with the estimation, we assume an
interface whose AS has been classiﬁed as “unknown” is actu-
ally in the nearest, previous AS that was known on the path.
Since we know the AS of the source, this assumption allows
us to assign an AS number to every interface on the path.
Note that this assumption biases the location at which the
ECT codepoint is cleared towards earlier on the AS path.
The results are presented in Table 4 (This is analogous to
the plot “preﬁx-traces; ﬁrst hop ECT is cleared” in Figure
1.) We restrict the table to AS-paths lengths that accounted
for at least 1% of the traces. For a given AS-path length (a
given row in the table) and for each AS hop on the path, we
report the percent of traces at which the ECT codepoints
is ﬁrst observed to be cleared. For paths of length 4, the
most popular length, the ECT codepoint was cleared at an
intermediate AS on 30% of the traces, and for paths of length
175zero and refusing to enable ECN if it is not. While RFC
5562 suggests adding ECN capabilities to SYN/ACK pack-
ets (thus allowing a non-zero ECN ﬁeld), TCP SYN packets
should never be ECN marked [16]. While this approach
does not help on paths that clear the ECN ﬁeld, which is
the common error, it does address some particularly prob-
lematic manglings of the ECN ﬁeld like always setting CE
(i.e. signaling constant congestion.)
6. CONCLUSION
While some impediments to wider use of ECN appear to
be diminished (i.e. servers have increasingly enabled it), an
important ﬁnding of this paper is the presence of a non-
trivial number of paths that mangle the ECN ﬁeld in the IP
header. This problem compromises a carefully designed con-
gestion feedback loop and potentially raises concerns about
the congestion safety or fairness of using ECN if senders do
not receive the signal to slow their rate. Eventually a sender
would overﬂow the bottleneck queue and then back oﬀ, but
other ﬂows that share partial paths would be disadvantaged.
Similar concerns exist in the case of congestion echo (ECE)
not making it to the sender. While the possibility of such be-
havior is mentioned in [24], repeated tests to servers demon-
strate this is not just a random event but rather can be
a persistent problem along a path.
If the CWR is being
cleared on the other hand, the problem is instead that the
sender receives a constant stream of ECE ﬂagged messages
and therefore never opens its congestion window – resulting
in very low throughput.
While the existence of these problems is potentially dis-
couraging we have found that the problems can often be
rapidly ﬁxed. We identiﬁed problems on both our lab and
our residential broadband network. Both networks were
quickly ﬁxed when we supplied packet captures and tracer-
outes illustrating the problem. In the case of our lab, the
intent had been to copy the 802.1p ﬁeld from Ethernet to
DSCP but an Ethernet switch instead ended up overwriting
all eight bits of the ToS ﬁeld.
In the case of the broad-
band provider, the intent had been to clear the diﬀserv ﬁeld
but instead the entire old ToS ﬁeld was being set to zero.
We suspect that many of the problems we found have sim-
ilar origins. Other potential sources of error include NATs
and home routers, load balancers, tunnels, and other types
of middle-boxes. Our tools and methodology will hopefully
aid in quickly ﬁnding and ﬁxing these problems.
Acknowledgments
We thank Jim Gettys and all the anonymous reviewers for
their feedback and insights. R. Beverly was partially sup-
ported by a Cisco Research Grant. Views and conclusions
are those of the authors and should not be interpreted as rep-
resenting the oﬃcial policies, either expressed or implied, of
the U.S. government.
Table 4: AS hop at which ECT is cleared
Number of
AS
hops
on path
2
3
4
5
6
7
Percent
of
traces with
given number
of AS’s
1
19
40
28
10
1
For each AS hop on
path, precent of traces
in which ECT codepoint
is ﬁrst cleared
58 42
60 25 15
58 11 19 12
44 16 12 19 9
37
37
8 28 11 12 4
4 35
6 11 6
1
5, the percentage is 47%. If the calculation is repeated where
we no longer require that all interfaces on the path respond,
but only that the destination responds, the percents in Table
4 are roughly the same.
Note that since our assumption of assigning “unknown”
AS’s to the previous known AS on the path introduces a
bias towards earlier on the path, the percents in Table 4
underestimate how far along the path the ECT codepoint is
cleared. Also recall that Table 4, and Figure 1, report the
location where the ECT codepoint is ﬁrst cleared; and thus
if the codepoint had not been cleared at the given interface,
it possibly would have been cleared at a subsequent one.
Thus, the percents in Table 4 should be viewed as approxi-
mations. However, the implication from Table 4, consistent
with Figure 1, is that the ECT codepoint is not only be-
ing cleared in the origin (and destination AS), but also at
intermediate AS’s.
Other notable behaviors
For 99% of the website and preﬁx traces, the quoted ECN
ﬁeld from probe responses had either ECT set for all hops or
had ECT cleared at some hop and the ﬁeld remained cleared.
For the remaining 1% of the traces, we observe a variety of
behaviors. On some traces, the reported ECT codepoint
changes several times between set and cleared; a few traces
had as many as 14 switches in value. We also ﬁnd instances
where the Congestion Experienced (CE) codepoint is set.
Across the two trace sets, there were 98 unique hop pairs
for which the ECN ﬁeld switched to CE. For these pairs, the
CE codepoint is often set in conjunction with the diﬀserv
codepoint having a non-zero value, thus in all likelihood the
network is making use of the legacy ToS ﬁeld.
5. MITIGATION OPTIONS
While ECN nonce[26] is often seen as a mechanism to
ensure that a receiver correctly reﬂects the congestion signal
carried in the ECN bits of the IP header, it can also serve
as a mechanism for ensuring correct ECN behavior along a
path (see section in 6.2 [26]). Network devices that mangle
the ECN bits destroy the ability of the receiver to correctly
calculate the ECN nonce sum. How a sender responds to
incorrect nonce sums is a matter of policy, but ceasing to set
ECT in outgoing segments would be one obvious response.
Across all of our data sets, we see no instances of ECN nonce
support. Manual inspection of arriving packets with ECT1
set reveals that these ﬂows always set ECT1, even when
ECN is not negotiated by TCP. (Thus, TCP continues to
rely on cooperative and friendly behavior.)
One other mitigation strategy for dealing with paths that
mangle the ECN bits in the IP header is to check upon re-
ceipt of an ECN enabled SYN packet that the ECN ﬁeld is
1767. REFERENCES
[1] Alexa. Top 1,000,000 sites, 2011.
http://www.alexa.com/topsites.
[2] M. Alizadeh, A. Greenberg, D. A. Maltz, J. Padhye,
P. Patel, B. Prabhakar, S. Sengupta, and
M. Sridharan. Data center tcp (dctcp). In Proceedings
of ACM SIGCOMM, 2010.
[3] B. Augustin, X. Cuvellier, B. Orgogozo, F. Viger,
T. Friedman, M. Latapy, C. Magnien, and R. Teixeira.
Avoiding traceroute anomalies with paris traceroute.
In Proceedings of the 6th ACM IMC, 2006.
[4] S. Bauer, D. Clark, and B. Lehr. The evolution of
internet congestion. In Proceedings of the 37th TPRC,
2009.
[5] R. Beverly. A robust classiﬁer for passive tcp/ip
ﬁngerprinting. In Proceedings of the 5th Passive and
active network measurement conference, pages
158–167, 2004.
[6] B. Briscoe. Tunnelling of Explicit Congestion
Notiﬁcation. RFC 6040 (Proposed Standard), Nov.
2010.