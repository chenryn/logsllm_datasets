### References

1. 2018. Windows Transport Converges on Two Congestion Providers: Cubic and LEDBAT. <https://techcommunity.microsoft.com/t5/Networking-Blog/Windows-Transport-converges-on-two-Congestion-Providers-Cubic/ba-p/339819>.

2. Venkat Arun and Hari Balakrishnan. 2018. Copa: Practical Delay-Based Congestion Control for the Internet. In *Proc. of NSDI* (April 2018).

3. J.C. Bansal, P.K. Singh, K. Deep, M. Pant, and A.K. Nagar. 2012. Proceedings of the Seventh International Conference on Bio-Inspired Computing: Theories and Applications (BIC-TA 2012): Volume 2. Springer India, 435–436 pages. <https://books.google.co.il/books?id=97mrtf1TlK0C>.

4. L. Brakmo, S. Lawrence, S. O’Malley, and L. Peterson. 1994. TCP Vegas: New Techniques for Congestion Detection and Avoidance. In *Proc. of ACM SIGCOMM* (1994).

5. Bob Briscoe. 2007. Flow Rate Fairness: Dismantling a Religion. *Computer Communication Review* 37, 2 (2007), 63–74. <https://doi.org/10.1145/1232919.1232926>.

6. M. Caesar, D. Caldwell, N. Feamster, J. Rexford, A. Shaikh, and K. van der Merwe. 2005. Design and Implementation of a Routing Control Platform. In *Proc. of NSDI* (April 2005).

7. N. Cardwell, Y. Cheng, C.S. Gunn, S.H. Yeganeh, and Van Jacobson. 2016. BBR: Congestion-Based Congestion Control. *Queue* 14, 5 (2016), 50.

8. Giovanna Carofiglio, Luca Muscariello, Dario Rossi, Claudio Testa, and Silvio Valenti. 2013. Rethinking the Low Extra Delay Background Transport (LEDBAT) Protocol. *Computer Networks* (2013).

9. Andrey Chernov. 2019. On Some Approaches to Find Nash Equilibrium in Concave Games. *Automation and Remote Control* 80 (May 2019), 964–988. <https://doi.org/10.1134/S0005117919050138>.

10. M. Dong, Qingxi Li, Doron Zarchy, Philip Brighten Godfrey, and Michael Schapira. 2015. PCC: Re-Architecting Congestion Control for Consistent High Performance. In *Proc. of NSDI* (March 2015).

11. Mo Dong, Tong Meng, Doron Zarchy, Engin Arslan, Yossi Gilad, Brighten Godfrey, and Michael Schapira. 2018. PCC Vivace: Online-Learning Congestion Control. In *Proc. of NSDI* (April 2018).

12. Eyal Even-Dar, Yishay Mansour, and Uri Nadav. 2009. On the Convergence of Regret Minimization Dynamics in Concave Games. In *Proceedings of the 41st Annual ACM Symposium on Theory of Computing (STOC 2009)*, Bethesda, MD, USA, May 31 - June 2, 2009. ACM, 523–532. <http://doi.acm.org/10.1145/1536414.1536486>.

13. Prateesh Goyal, Anup Agarwal, Ravi Netravali, Mohammad Alizadeh, and Hari Balakrishnan. 2020. ABC: A Simple Explicit Congestion Controller for Wireless Networks. In *Proc. of NSDI* (February 2020).

14. Yunhong Gu. 2005. UDT: A High-Performance Data Transport Protocol. University of Illinois at Chicago.

15. S. Ha, I. Rhee, and L. Xu. 2008. CUBIC: A New TCP-Friendly High-Speed TCP Variant. *ACM SIGOPS Operating Systems Review* (2008).

16. Sergiu Hart and Andreu Mas-Colell. 2015. Markets, Correlation, and Regret-Matching. *Games and Economic Behavior* 93 (2015), 42–58. <https://doi.org/10.1016/j.geb.2015.06.009>.

17. S. Jain, A. Kumar, S. Mandal, J. Ong, L. Poutievski, A. Singh, S. Venkata, J. Wanderer, J. Zhou, and M. Zhu. 2013. B4: Experience with a Globally-Deployed Software-Defined WAN. *ACM Computer Communication Review* (September 2013).

18. D. Katabi, M. Handley, and C. Rohrs. 2002. Congestion Control for High Bandwidth-Delay Product Networks. In *Proc. of ACM SIGCOMM* (August 2002).

19. Adam Langley, Alistair Riddoch, Alyssa Wilk, Antonio Vicente, Charles Krasic, Dan Zhang, Fan Yang, Fedor Kouranov, Ian Swett, Janardhan Iyengar, et al. 2017. The QUIC Transport Protocol: Design and Internet-Scale Deployment. In *Proceedings of the Conference of the ACM Special Interest Group on Data Communication*. ACM, 183–196.

20. Q. Li, M. Dong, and P. Godfrey. 2015. Halfback: Running Short Flows Quickly and Safely. In *Proc. of CoNEXT* (November 2015).

21. Shao Liu, Tamer Başar, and Ravi Srikant. 2008. TCP-Illinois: A Loss-and Delay-Based Congestion Control Algorithm for High-Speed Networks. *Performance Evaluation* (2008).

22. Radhika Mittal, Vinh The Lam, Nandita Dukkipati, Emily R. Blem, Hassan M. G. Wassel, Monia Ghobadi, Amin Vahdat, Yaogong Wang, David Wetherall, and David Zats. 2015. TIMELY: RTT-Based Congestion Control for the Datacenter. In *Proceedings of the 2015 ACM Conference on Special Interest Group on Data Communication (SIGCOMM 2015)*, London, United Kingdom, August 17-21, 2015. ACM, 537–550. <http://dl.acm.org/citation.cfm?id=2785956>.

23. Akshay Narayan, Frank Cangialosi, Prateesh Goyal, Srinivas Narayana, Mohammad Alizadeh, and Hari Balakrishnan. 2017. The Case for Moving Congestion Control Out of the Datapath. In *Proc. of HotNets* (December 2017).

24. P. Brighten Godfrey, Michael Schapira, Nathan Jay, Noga H. Rotman, and Aviv Tamar. 2019. A Deep Reinforcement Learning Perspective on Internet Congestion Control. In *Proc. of ICML* (2019).

25. J. B. Rosen. 1965. Existence and Uniqueness of Equilibrium Points for Concave N-Person Games. *Econometrica* 33 (July 1965), 520–534.

26. Dario Rossi, Claudio Testa, Silvio Valenti, and Luca Muscariello. 2010. LEDBAT: The New BitTorrent Congestion Control Protocol. *ICCCN* (August 2010). <https://tools.ietf.org/pdf/draft-ietf-ledbat-congestion-00.pdf>.

27. S. Shalunov. 2009. Low Extra Delay Background Transport (LEDBAT). Draft. <https://tools.ietf.org/pdf/draft-ietf-ledbat-congestion-00.pdf>.

28. S. Shalunov, G. Hazel, J. Iyengar, and M. Kuehlewind. 2012. Low Extra Delay Background Transport (LEDBAT). *RFC 6817* (Experimental). <http://www.ietf.org/rfc/rfc6817.txt>.

29. Kevin Spiteri, Rahul Urgaonkar, and Ramesh K. Sitaraman. 2016. BOLA: Near-Optimal Bitrate Adaptation for Online Videos. In *Proc. IEEE INFOCOM* (April 2016).

30. Balajee Vamanan, Jahangir Hasan, and TN Vijaykumar. 2012. Deadline-Aware Datacenter TCP (D2TCP). In *Proc. of ACM SIGCOMM* (August 2012).

31. Ravichandra Addanki, Mehrdad Khani, Prateesh Goyal, Vikram Nathan, Vibhaalakshmi Sivaraman, and Mohammad Alizadeh. 2019. End-to-End Transport for Video QoE Fairness. In *Proc. of ACM SIGCOMM* (August 2019).

32. B. White, J. Lepreau, L. Stoller, R. Ricci, G. Guruprasad, M. Newbold, M. Hibler, C. Barb, and A. Joglekar. 2002. An Integrated Experimental Environment for Distributed Systems and Networks. In *Proc. of OSDI* (December 2002).

33. Christo Wilson, Hitesh Ballani, Thomas Karagiannis, and Ant Rowtron. 2011. Better Never Than Late: Meeting Deadlines in Datacenter Networks. In *Proc. of ACM SIGCOMM* (August 2011).

34. K. Winstein and H. Balakrishnan. 2013. TCP ex Machina: Computer-Generated Congestion Control. In *Proc. of ACM SIGCOMM* (August 2013).

35. K. Winstein, A. Sivaraman, and H. Balakrishnan. 2013. Stochastic Forecasts Achieve High Throughput and Low Delay over Cellular Networks. In *Proc. of NSDI* (March 2013).

36. F. Y. Yan, J. Ma, G. Hill, D. Raghavan, R. S. Wahby, P. Levis, and K. Winstein. 2018. Pantheon: The Training Ground for Internet Congestion-Control Research.

37. Y. Zaki, T. Pötsch, J. Chen, L. Subramanian, and C. Görg. 2015. Adaptive Congestion Control for Unpredictable Cellular Networks. In *Proc. of ACM SIGCOMM* (August 2015).

### Appendix

**A. Proteus Equilibrium Analysis**

We consider a simple model of interaction between senders on a bottleneck link. We show below that for any combination of Proteus-P and Proteus-S senders competing over a single link, the induced equilibrium is unique. This uniqueness allows us to establish that when only Proteus-P senders, or only Proteus-S senders, share the link, the resulting outcome is fair. We leave the study of dynamics of congestion control in more realistic models (e.g., incorporating stochastic packet arrivals) and the impact of different parameter configurations on equilibria when Proteus-P and Proteus-S senders compete to future research.

#### A.1 Notation

- \( x_i \): Sending rate of Proteus sender \( i \)
- \( C \): Bottleneck capacity
- \( S \): Total sending rate of all senders competing over a common bottleneck (\( S = \sum_i x_i \))

As in the proofs for fairness and convergence of PCC-Vivace [17] (assuming tail drop queue), when the buffer is not empty, the RTT gradient is captured by the expression:
\[ \frac{d(RTT_i)}{dt} = \frac{S - C}{C} \]

Proteus-S leverages RTT deviation as a signal for competition with primary (Proteus-P) senders. Thus, the interesting scenario to consider for the proof is when the buffer is deep enough for RTT deviations to be observed and the equilibrium resulting from the interaction between different Proteus senders (P and/or S) does not involve packet loss. To simplify the exposition, we disregard the loss terms in Proteus-P and Proteus-S utility functions in the analysis below. Our formal arguments can be extended to incorporate penalties for loss using the arguments in [6].

Proteus-P is hence expressed in the following form (with loss term omitted):
\[ u_P(x_i) = x_i^t - b \cdot x_i \cdot \max\left(0, \frac{S - C}{C}\right) \]

We also derive the theoretical (simplified) representation of the scavenger utility function. Note that in our theoretical model, RTT deviation is induced by senders building or draining the buffer. In this process, the difference between two consecutive RTT samples observed by a Proteus-S sender \( i \) (assuming MTU-sized data packets) is:
\[ \Delta RTT(x_i) = \frac{MTU}{x_i} \cdot \frac{d(RTT_i)}{dt} \]

Thus, RTTs exhibit arithmetic progression when the global sending rate configuration is fixed, and sender \( i \)'s observed RTT (standard) deviation at an MI takes the form:
\[ \sigma(RTT_i) = \sqrt{\frac{2 \sum_{k=1}^{\lfloor n_i/2 \rfloor} (k \cdot \Delta RTT(x_i))^2}{n_i}} = \sqrt{\frac{(n_i + 1)(n_i - 1)}{12}} \cdot \frac{MTU}{x_i} \cdot \left| \frac{d(RTT_i)}{dt} \right| \]
where \( n_i \) is the number of RTT samples in the corresponding MI.

The Proteus-S utility function (again, with the loss term omitted) can now be expressed as:
\[ u_S(x_i) = u_P(x_i) - d \cdot x_i \cdot \sigma(RTT_i) \]
\[ = x_i^t - b \cdot x_i \cdot \max\left(0, \frac{S - C}{C}\right) - d \cdot A \cdot x_i \cdot \left| \frac{S - C}{C} \right| \cdot \sqrt{\frac{(n_i + 1)(n_i - 1)}{12}} \]
where \( A = \frac{MTU}{x_i} \).

Since Proteus, similar to [16, 17, 30], employs an RTT-long monitor interval, \( n_i \) can be regarded as approximately linear in \( x_i \). Consequently, \( A \) can be regarded as a constant for the purpose of our analysis.

#### A.2 Existence and Uniqueness of Equilibrium

We consider \( n \geq 0 \) Proteus-P senders and \( m \geq 0 \) Proteus-S senders competing over the same bottleneck link. We formulate the interaction between these senders as a non-cooperative game \( G \), in which the senders are the players, the strategy of each player is its choice of sending rate, and the payoff for each player from a combination of strategies (global configuration of sending rates) is as specified by its (Proteus-P or Proteus-S) utility function. We prove below that game \( G \) has a unique equilibrium point. Our proof consists of the following parts:

1. **Observation**: In any Nash equilibrium of the game \( G \), \( S \geq C \).
   - To see why this is so, suppose, for the sake of contradiction, the existence of an equilibrium such that \( S < C \). Let \( \epsilon = C - S \). Suppose, for the sake of contradiction, that \( x^* \) is not an equilibrium in \( G \). Hence, some sender \( i \) can increase its utility by increasing or decreasing its rate by a certain amount \( \delta \). As \( x^* \) is an equilibrium in \( G_{S \geq C} \), the rate change \( \delta \) must be outside the strategy space available in \( G_{S \geq C} \), i.e., it is a rate decrease where \( \delta > \epsilon \). However, since the Proteus (P and S) utility functions are continuous, \( i \) must be able to improve its utility also by decreasing its rate by less than \( \epsilon \). Observe, however, that this contradicts \( x^* \) being an equilibrium in \( G_{S \geq C} \) (since the rate-configuration reached after \( i \)'s rate change is also in \( G_{S \geq C} \)).

2. **Subgame \( G_{S \geq C} \)**: We then focus on the subgame \( G_{S \geq C} \), which is derived from \( G \) by only permitting combinations of senders' strategies for which \( S \geq C \). We prove that the global rate-configuration is an equilibrium of \( G_{S \geq C} \) if and only if it is an equilibrium of \( G \). Thus, we can restrict our attention to analyzing the equilibria of \( G_{S \geq C} \).

3. **Strictly Socially Concave Games**: Lastly, we prove that the restricted game \( G_{S \geq C} \) falls within the game-theoretic category of strictly socially concave games [15, 22], for which a unique equilibrium is guaranteed to exist [17, 18, 31]. We then conclude that the original game \( G \) is also guaranteed to have a unique equilibrium.