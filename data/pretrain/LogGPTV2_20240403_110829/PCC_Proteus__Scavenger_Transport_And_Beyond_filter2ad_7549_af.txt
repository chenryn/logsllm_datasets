[7] 2018. Windows Transport converges on two Congestion Providers: Cubic and
LEDBAT. https://techcommunity.microsoft.com/t5/Networking-Blog/Windows-
Transport-converges-on-two-Congestion-Providers-Cubic/ba-p/339819.
[8] Venkat Arun and Hari Balakrishnan. 2018. Copa: Practical Delay-Based Conges-
tion Control for the Internet. Proc. of NSDI (April 2018).
[9] J.C. Bansal, P.K. Singh, K. Deep, M. Pant, and A.K. Nagar. 2012. Proceed-
ings of Seventh International Conference on Bio-Inspired Computing: Theories
Springer India. 435–436 pages.
and Applications (BIC-TA 2012): Volume 2.
https://books.google.co.il/books?id=97mrtf1TlK0C
[10] L. Brakmo, S. Lawrence, S. O’Malley, and L. Peterson. 1994. TCP Vegas: New
techniques for congestion detection and avoidance. Proc. of ACM SIGCOMM
(1994).
[11] Bob Briscoe. 2007. Flow rate fairness: dismantling a religion. Computer Commu-
nication Review 37, 2 (2007), 63–74. https://doi.org/10.1145/1232919.1232926
[12] M. Caesar, D. Caldwell, N. Feamster, J. Rexford, A. Shaikh, and K. van der Merwe.
2005. Design and implementation of a Routing Control Platform. Proc. of NSDI
(April 2005).
[13] N. Cardwell, Y. Cheng, C.S. Gunn, S.H. Yeganeh, and Van Jacobson. 2016. BBR:
Congestion-Based Congestion Control. Queue 14, 5 (2016), 50.
[14] Giovanna Carofiglio, Luca Muscariello, Dario Rossi, Claudio Testa, and Silvio
Valenti. 2013. Rethinking the low extra delay background transport (LEDBAT)
protocol. Computer Networks (2013).
[15] Andrey Chernov. 2019. On Some Approaches to Find Nash Equilibrium in
Concave Games. Automation and Remote Control 80 (05 2019), 964–988. https:
//doi.org/10.1134/S0005117919050138
[16] M. Dong, Qingxi Li, Doron Zarchy, Philip Brighten Godfrey, and Michael Schapira.
2015. PCC: Re-architecting Congestion Control for Consistent High Performance.
Proc. of NSDI (March 2015).
[17] Mo Dong, Tong Meng, Doron Zarchy, Engin Arslan, Yossi Gilad, Brighten Godfrey,
and Michael Schapira. 2018. PCC Vivace: Online-Learning Congestion Control.
Proc. of NSDI (April 2018).
[18] Eyal Even-Dar, Yishay Mansour, and Uri Nadav. 2009. On the convergence
of regret minimization dynamics in concave games. In Proceedings of the 41st
Annual ACM Symposium on Theory of Computing, STOC 2009, Bethesda, MD,
USA, May 31 - June 2, 2009, Michael Mitzenmacher (Ed.). ACM, 523–532. http:
//doi.acm.org/10.1145/1536414.1536486
[19] Prateesh Goyal, Anup Agarwal, Ravi Netravali, Mohammad Alizadeh, and Hari
Balakrishnan. 2020. ABC: A Simple Explicit Congestion Controller for Wireless
Networks. Proc. of NSDI (February 2020).
of Illinois at Chicago.
[20] Yunhong Gu. 2005. UDT: a high performance data transport protocol. University
[21] S. Ha, I. Rhee, and L. Xu. 2008. CUBIC: A new TCP-friendly high-speed TCP
variant. ACM SIGOPS Operating Systems Review (2008).
[22] Sergiu Hart and Andreu Mas-Colell. 2015. Markets, correlation, and regret-
matching. Games and Economic Behavior 93 (2015), 42 – 58. https://doi.org/
10.1016/j.geb.2015.06.009
[23] S. Jain, A. Kumar, S. Mandal, J. Ong, L. Poutievski, A. Singh, S. Venkata, J. Wan-
derer, J. Zhou, and M. Zhu. 2013. B4: Experience with a globally-deployed software
defined WAN. ACM Computer Communication Review (September 2013).
delay product networks. Proc. of ACM SIGCOMM (August 2002).
[25] Adam Langley, Alistair Riddoch, Alyssa Wilk, Antonio Vicente, Charles Krasic,
Dan Zhang, Fan Yang, Fedor Kouranov, Ian Swett, Janardhan Iyengar, et al. 2017.
The QUIC Transport Protocol: Design and Internet-Scale Deployment. In Proceed-
ings of the Conference of the ACM Special Interest Group on Data Communication.
ACM, 183–196.
[26] Q. Li, M. Dong, and P. Godfrey. 2015. Halfback: Running short flows quickly and
[24] D. Katabi, M. Handley, and C. Rohrs. 2002. Congestion control for high bandwidth-
safely. Proc. of CoNEXT (November 2015).
[27] Shao Liu, Tamer Başar, and Ravi Srikant. 2008. TCP-Illinois: A loss-and delay-
based congestion control algorithm for high-speed networks. Performance Eval-
uation (2008).
[28] Radhika Mittal, Vinh The Lam, Nandita Dukkipati, Emily R. Blem, Hassan M. G.
Wassel, Monia Ghobadi, Amin Vahdat, Yaogong Wang, David Wetherall, and
David Zats. 2015. TIMELY: RTT-based Congestion Control for the Datacenter.
In Proceedings of the 2015 ACM Conference on Special Interest Group on Data
Communication, SIGCOMM 2015, London, United Kingdom, August 17-21, 2015,
Steve Uhlig, Olaf Maennel, Brad Karp, and Jitendra Padhye (Eds.). ACM, 537–550.
627
http://dl.acm.org/citation.cfm?id=2785956
[29] Akshay Narayan, Frank Cangialosi, Prateesh Goyal, Srinivas Narayana, Moham-
mad Alizadeh, and Hari Balakrishnan. 2017. The case for moving congestion
control out of the datapath. Proc. of HotNets (December 2017).
[30] P. Brighten Godfrey Michael Schapira Nathan Jay, Noga H. Rotman and Aviv
Tamar. 2019. A Deep Reinforcement Learning Perspective on Internet Congestion
Control. Proc. of ICML (2019).
N-Person Games. Econometrica 33 (July 1965), 520–534.
the new BitTorrent congestion control protocol. ICCCN (August 2010).
https://tools.ietf.org/pdf/draft-ietf-ledbat-congestion-00.pdf
[33] S. Shalunov. 2009. Low Extra Delay Background Transport (LEDBAT). Draft.
[32] Dario Rossi, Claudio Testa, Silvio Valenti, and Luca Muscariello. 2010. LEDBAT:
[31] J. B. Rosen. 1965. Existence and Uniqueness of Equilibrium Points for Concave
[34] S. Shalunov, G. Hazel, J. Iyengar, and M. Kuehlewind. 2012. Low Extra Delay Back-
ground Transport (LEDBAT). RFC 6817 (Experimental). http://www.ietf.org/
rfc/rfc6817.txt
[35] Kevin Spiteri, Rahul Urgaonkar, and Ramesh K Sitaraman. 2016. BOLA: Near-
optimal bitrate adaptation for online videos. Proc. IEEE INFOCOM (April 2016).
[36] Balajee Vamanan, Jahangir Hasan, and TN Vijaykumar. 2012. Deadline-aware
datacenter tcp (d2tcp). Proc. of ACM SIGCOMM (August 2012).
[37] Ravichandra Addanki Mehrdad Khani Prateesh Goyal Vikram Nathan, Vibhaalak-
shmi Sivaraman and Mohammad Alizadeh. 2019. End-to-end transport for video
QoE fairness. Proc. of ACM SIGCOMM (August 2019).
[38] B. White, J. Lepreau, L. Stoller, R. Ricci, G. Guruprasad, M. Newbold, M. Hibler,
C. Barb, and A. Joglekar. 2002. An integrated experimental environment for
distributed systems and networks. Proc. of OSDI (December 2002).
[39] Christo Wilson, Hitesh Ballani, Thomas Karagiannis, and Ant Rowtron. 2011.
Better never than late: Meeting deadlines in datacenter networks. Proc. of ACM
SIGCOMM (August 2011).
[40] K. Winstein and H. Balakrishnan. 2013. TCP ex Machina: Computer-Generated
Congestion Control. Proc. of ACM SIGCOMM (August 2013).
[41] K. Winstein, A. Sivaraman, and H. Balakrishnan. 2013. Stochastic Forecasts
Achieve High Throughput and Low Delay over Cellular Networks. Proc. of NSDI
(March 2013).
[42] F. Y. Yan, J. Ma, G. Hill, D. Raghavan, R. S. Wahby, P. Levis, and K. Winstein. 2018.
Pantheon: the training ground for Internet congestion-control research.
[43] Y. Zaki, T. Pötsch, J. Chen, L. Subramanian, and C. Görg. 2015. Adaptive con-
gestion control for unpredictable cellular networks. Proc. of ACM SIGCOMM
(August 2015).
Appendices are supporting material that has not been peer-reviewed.
APPENDIX
A PROTEUS EQUILIBRIUM ANALYSIS
We consider a simple model of interaction between senders on
a bottleneck link. We show below that for any combination of
Proteus-P and Proteus-S senders competing over a single link the
induced equilibrium is unique. We leverage this to establish that
when only Proteus-P senders, or only Proteus-S senders, share the
link, the resulting outcome is fair. We leave the study of dynamics
of congestion control in more realistic models (e.g., that incorporate
stochastic packet arrivals), and of the impact of different parameter
configuration on equilibria when Proteus-P and Proteus-P senders
compete, to future research.
A.1 Notation
We let 𝑥𝑖 denote the sending rate of Proteus sender 𝑖, C the bot-
tleneck capacity, and 𝑆 the total sending rate of all the senders
competing over a common bottleneck (𝑆 =𝑖 𝑥𝑖).
As in the proofs for fairness and convergence of PCC-Vivace [17]
(assuming tail drop queue), when the buffer is not empty, the RTT
gradient is captured by the expression
𝑑(𝑅𝑇𝑇𝑖)
𝑑𝑡
𝑆 − C
C .
=
Proteus-S leverages RTT deviation as a signal for competition
with primary (Proteus-P) senders. Thus, the interesting scenario to
consider for the proof is when the buffer is deep enough for RTT
SIGCOMM ’20, August 10–14, 2020, Virtual Event, USA
Tong Meng, Neta R. Schiff, Brighten Godfrey, and Michael Schapira
deviations to be observed and the equilibrium resulted from the
interaction between different Proteus senders (P and/or S) does not
involve packet loss. Thus, to simplify exposition, we disregard the
loss terms in Proteus-P and Proteus-S utility functions in the analy-
sis below. Our formal arguments can be extended to incorporate
penalties for loss using the arguments in [6].
Proteus-P is hence expressed in the following form (with loss
term omitted):
𝑢𝑃 (𝑥𝑖) = 𝑥𝑡
𝑖 − 𝑏 · 𝑥𝑖 · 𝑚𝑎𝑥
(cid:26)
(cid:27)
0,
𝑆 − C
C
.
We also derive the theoretical (simplified) representation of the
scavenger utility function. Note that in our theoretical model, RTT
deviation is induced by senders building or draining the buffer. In
that process, the difference between two consecutive RTT samples
observed by a Proteus-S sender 𝑖 (assuming MTU-sized data packets)
is
Δ𝑅𝑇𝑇 (𝑥𝑖) =
𝑀𝑇𝑈
𝑥𝑖
· 𝑑(𝑅𝑇𝑇𝑖)
.
𝑑𝑡
Thus, RTTs exhibit arithmetic progression when the global sending
rate configuration is fixed, and sender 𝑖’s observed RTT (standard)
deviation at an MI takes the form
(cid:118)(cid:116)2 ·⌊𝑛𝑖/2⌋
(cid:114) (𝑛𝑖 + 1)(𝑛𝑖 − 1)
𝑘=1
12
𝜎(𝑅𝑇𝑇𝑖) =
=
(𝑘 · Δ𝑅𝑇𝑇 (𝑥𝑖))2
𝑛𝑖
· 𝑀𝑇𝑈
𝑥𝑖
·
(cid:12)(cid:12)(cid:12)(cid:12)𝑑(𝑅𝑇𝑇𝑖)
𝑑𝑡
(cid:12)(cid:12)(cid:12)(cid:12)
,
where 𝑛𝑖 is the number of RTT samples in the corresponding MI.8
The Proteus-S utility function (again, with the loss term omitted)
can now be expressed as
𝑢𝑆(𝑥𝑖) = 𝑢𝑃 (𝑥𝑖) − 𝑑 · 𝑥𝑖 · 𝜎(𝑅𝑇𝑇𝑖)
C } − 𝑑 · 𝐴 · 𝑥𝑖 · |𝑆 − C|
𝑆 − C
C
𝑖 − 𝑏 · 𝑥𝑖 · max{0,
·(cid:112)(𝑛𝑖 + 1)(𝑛𝑖 − 1)/12.
= 𝑥𝑡
where 𝐴 = 𝑀𝑇𝑈
𝑥𝑖
Since Proteus, similar to [16, 17, 30], employs an RTT-long mon-
itor interval, 𝑛𝑖 can be regarded as approximately linear in 𝑥𝑖. Con-
sequently, 𝐴 can be regarded as a constant for the purpose of our
analysis.
,
A.2 Existence and Uniqueness of Equilibrium
We consider 𝑛 ≥ 0 Proteus-P senders and 𝑚 ≥ 0 Proteus-S senders
competing over the same bottleneck link. We formulate the interac-
tion between these senders as a non-cooperative game 𝐺, in which
the senders are the players, the strategy of each player is its choice
of sending rate, and the payoff for each player from a combination
of strategies (global configuration of sending rates) is as specified
by its (Proteus-P or Proteus-S) utility function. We prove below
that game 𝐺 has a unique equilibrium point. Our proof consists of
the following parts:
(1) We first make the simple observation that, in any equilibrium,
the total sending rate across all senders can be no less than
the capacity, i.e., 𝑆 ≥ C in all equilibria.
8Without loss of generality, we show the expression when 𝑛𝑖 is an odd number.
(2) We then focus on the subgame 𝐺𝑆≥C, which is derived from
𝐺 by only permitting combinations of senders’ strategies for
which 𝑆 ≥ C. We prove that the global rate-configuration
is an equilibrium of 𝐺𝑆≥C if an only if it is an equilibrium
of 𝐺. Thus, we can restrict our attention to analyzing the
equilibria of 𝐺𝑆≥C.
(3) Lastly, we prove that the restricted game 𝐺𝑆≥C falls within
the game-theoretic category of strictly socially concave games
[15, 22], for which a unique equilibrium is guaranteed to ex-
ist [17, 18, 31]. We then conclude that the original game 𝐺
is also guaranteed to have a unique equilibrium.
Observation: In any Nash equilibrium of the game 𝐺, 𝑆 ≥ C.
To see why this is so, suppose, for point of contradiction, the
existence of an equilibrium such that 𝑆  C. Let
𝜖 = 𝑆 − C. Suppose, for point of contradiction, that 𝑥∗ is not an
equilibrium in 𝐺. Hence, some sender 𝑖 can increase its utility by
increasing or decreasing its rate by a certain amount 𝛿. As 𝑥∗ is
an equilibrium in 𝐺𝑆≥C, the rate change 𝛿 must be outside the
strategy space available in 𝐺𝑆≥C, i.e., it is a rate decrease where
𝛿 > 𝜖. However, since the Proteus (P and S) utility functions are
continuous, 𝑖 must be able to improve its utility also by decreasing
its rate by less than 𝜖. Observe, however, that this contradicts 𝑥∗
being an equilibrium in 𝐺𝑆≥C (since the rate-configuration reached
after 𝑖’s rate change is also in 𝐺𝑆≥C).
Next, consider the case that 𝑥∗ is an equilibrium in 𝐺𝑆≥C for