more symbols into the set of rare anomalies.
In Figure 1, the set of rare anomalous symbols will include symbol types
74 through 249, i.e., the range of symbols between the middle two vertical
dashed lines. 5% was selected as the value for the rare threshold, because it
corresponds to the value of the RIDES parameter “MAXSUMRAREPROB.”
– Uncommon – Uncommon anomalies are comprised of symbols with low
probabilities in the data distribution that have not been added to the rare
set. The “uncommon” set is constructed in a similar manner as the rare set.
First a threshold is set (arbitrarily chosen to be 3%); then the ﬁrst uncommon
anomaly is selected - note that the ﬁrst uncommon anomaly is the ﬁrst
symbol that missed the cut-oﬀ for inclusion into the set of rare anomalies.
Symbols continue to be added to the set of uncommon anomalies until the
sum of their probabilities reaches the threshold of 3%. In Figure 1, the set
of uncommon anomalous symbols will include symbol types 68 through 73 -
the symbols between the leftmost two dashed vertical lines in the ﬁgure.
After we have decided which of the three anomaly types to inject, and how
many of each of them, we then need to generate an anomalous block for that
type. A parameter λa called the “saturation” is used to control the mixing of
the anomalous and normal symbols in the data.
In generating each symbol in the anomalous block, we ﬁrst decide between
generating the symbol from the full data distribution (i.e., the entire curve of
Figure 1) or the region corresponding to the selected anomaly type (uncommon,
rare or foreign). We then choose a speciﬁc symbol from the selected distribution
λa+1. The satu-
or region. The probability of selecting the anomaly region is
ration represents the expected number of symbols drawn from the anomalous
region for each symbol drawn from the data distribution. High saturation values
correspond to a greater concentration of symbols from the selected regions con-
taining anomalous symbols (uncommon, rare and foreign). It is expected that
when the saturation is high, anomalies will be easier to detect.
λa
Anomaly Detector Performance Evaluation
117
Ground truth is established on a per-block basis as opposed to a per-symbol
basis. All symbols within a normal block are marked as being normal, and all
symbols within an anomalous block are marked as being anomalous. We consider
the problem of detecting which speciﬁc symbols in a stream are anomalous to be
too diﬃcult for a detector such as RIDES. This is because RIDES and NIDES,
like most window-based detectors, generate alarms based on aggregate behavior
observed in the window rather than on single observations. Thus, we only require
the detector to determine if a symbol is part of a normal block or an anomalous
block.
5.2 Experimental Strategy
Experimental results (hits, misses and false alarms) were collected for each of
the three diﬀerent types of injections: foreign symbol, rare symbol and uncom-
mon symbol. For each injection type, we measure the performance data for each
combination of parameters shown in Table 2. This is a total of 6,582,816 ex-
periments (3 anomaly types × 12 block-size values × 19 saturation values × 24
short-term half-life values × 401 threshold values). In practice, since we perform
the experiments for each of the 401 threshold levels concurrently, we can collapse
the number of experiments to 16,416 (i.e., 6,582,816 divided by 401). We assume
that MAXSUMRAREPROB is set to 5% in all of our experiments. Note that
since none of the parameters we control aﬀects the training data, we can reuse
the same training data for all of our experiments.
Table 2. Experimental parameters and the values assigned to them in 16,416 exper-
iments: 3 anomaly types × 12 block sizes × 19 saturation points × 24 short-term
half-life points
Parameter
No. Values
Anomaly Type
3 Foreign symbol, rare symbol, uncommon symbol
Block Size(B)
12 10, 50, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000
Saturation(λa)
Half-Life(Hst)
19
24
0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1,
0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5
5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80,
85, 90, 95, 100, 125, 150, 175, 200
Threshold(T )
401 0, 0.01, 0.02, . . . , 3.98, 3.99, 4.0
5.3 Evaluation Criterion
To evaluate and tune a detector deployed in a particular environment, there must
be some criterion by which we can determine how well the detector is performing.
In this paper we use cost of detector error as a measure, by comparing detector
results against data with known ground truth. A detector that works perfectly
118
J.P. Hansen, K.M.C. Tan, and R.A. Maxion
will have a cost of zero; the higher the cost, the worse the performance (on a
given data set). Two ways in which the detector cost can be deﬁned are:
– Conditional probability based cost (conditional cost)
CF P
NF P
NF P + NT N
+ CF N
NF N
NT P + NF N
– Absolute probability based cost (absolute cost)
CF P
NF P
NF P + NF N + NT P + NT N
+ CF N
NF N
NF P + NF N + NT P + NT N
(5)
(6)
CF P and CF N are the cost coeﬃcients for false-positive and false-negative
errors. Also, NF P , NT P , NF N and NT N are the number of false-positives, true
positives, false negatives and true negatives in the experiment.
To illustrate the diﬀerence between conditional and absolute cost, consider an
email classiﬁer for detecting spam. Using the conditional cost formula, the cost
computed for a detector on email received by a user would not depend on the
ratio of spam to non-spam email that the user receives. In contrast, the absolute
cost would change, depending on that ratio. The conditional cost is appropriate
when we are interested purely in the ability of the detector to distinguish spam
from non-spam, but the absolute cost is appropriate when we want to evaluate
the impact of detector tuning on a speciﬁc user. The absolute cost allows users
to tune their classiﬁers depending on how much spam they receive (for example,
with CF P representing the number of minutes to deal with non-spam being
treated as spam, and CF N representing the number of minutes to deal with
spam being treated as non-spam).
In this paper we will use the absolute probability based cost function, and
assume that CF P = CF N = 1. Under these conditions we would expect a cost
of zero to represent perfect performance and a cost of 0.5 to represent the cost
of a random detector. A cost greater than 0.5 would correspond to a degen-
erate detector in which inverting the output would improve performance since
NF P +NF N
NF P +NF N +NT P +NT N
> 0.5 implies that
NT P +NT N
NF P +NF N +NT P +NT N
< 0.5.
6 Results and Discussion
In this section we discuss the results of our detector performance analysis ex-
periments. We performed three sets of experiments:
– Cost analysis experiments, showing the best-case detection capabilities as a
function of the environment.
– Tuning experiments, showing the best tuning of the detector as a function
of the environment.
– Validation experiments, showing a comparison of the results from the syn-
thetic data with the results from real-world data.
Anomaly Detector Performance Evaluation
119
In doing these experiments we noted two signiﬁcant blind spots in RIDES. Re-
gardless of how RIDES is tuned, or of the data set on which RIDES is deployed,
RIDES cannot detect anomalies (i.e., it is equivalent to a random detector) when
(1) the anomaly saturation (λa) is low, and (2) when the block size (B) is small.
This means that if an attack manifests as, for example, a single or small number
of foreign symbols, RIDES will be completely blind to the attack. The reasons
for these blind spots will be discussed in the next section.
6.1 Cost Analysis
Figure 2 shows the detector error cost with respect to a foreign symbol injection.
The cost is plotted as a function of the block size B and the foreign symbol
saturation λa. For each point (B, λa) on the surface, the lowest cost over all
possible detector tunings (Hst, T ) is shown. As expected, as the foreign symbol
saturation goes to zero, the detector performance approaches that of a random
detector (cost is 0.5). This is because at the point where λa = 0, the normal
and anomalous blocks have identical statistical characteristics and no detector
could be expected to discriminate between the two blocks. As the foreign symbol
saturation λa increases, the error cost rapidly decreases. Notice also that small
block sizes make it diﬃcult to detect an injection.
0.5
t
s
o
C
e
t
l
u
o
s
b
A
0
0
0.1
0.2
Foreign Symbol Saturation
0.3
0.4
0.5
0
1
0
0
2
0
0
4
c k  S iz
e
6
0
0
B lo
0
0
8
0
0
0
1
Fig. 2. Cost function for foreign-symbol injections
When the block size is small, there will be many transitions between normal
and anomalous blocks. RIDES, like most frequency-based detectors, uses a win-
dow of recent observations on which to make an alarm decision. It will frequently
be the case that while the leading edge of the window is in one block (normal or
anomalous), much of the detector window will still be in the previous block of
the opposite type. In such cases, the short-term model will still be primarily in-
ﬂuenced by the previous block, but detector output will be judged based on the
120
J.P. Hansen, K.M.C. Tan, and R.A. Maxion
ground truth of the current block. On transitions from normal blocks to anoma-
lous blocks, there will be many misses until a suﬃcient fraction of the detector
window has moved into the anomalous block. Conversely, on transitions from
anomalous blocks to normal blocks there will be many false alarms. The most
signiﬁcant implication of this result is that frequency-based detectors can be
expected to perform poorly in environments with short and/or frequent attacks,
but more favorably when attacks are less frequent and longer in duration.
t
s
o
C
e
t
l
u
o
s
b
A
0.50
0.40
0.30
0.20
0.10
Uncommon Symbol
Rare Symbol
Foreign Symbol
0.00
0.00
0.10
0.20
0.30
0.40
0.50
Saturation
Fig. 3. Comparison of detection cost by injection type
Results for rare and uncommon symbol injections were very similar to re-
sults for the foreign symbol injections discussed above, diﬀering primarily in the
steepness of the curve. Figure 3 shows a comparison of the detection cost as a
function of saturation for the three injection types. Notice that all of the curves
have the same basic shape, with the foreign symbol injection having the fastest
improvement in detection performance (fastest decrease in cost) as the satura-
tion increases. The key feature to note is the consistent shape of these curves.
We expect the exact relative position of the three curves to be aﬀected by the
selection of both the MAXSUMRAREPROB and the probability cutoﬀ for the
uncommon type. This is because these constants control the numbers of symbol
types in each of these categories, and distributing an injection with a speciﬁc
saturation over fewer types will result in more instances of a symbol per type.
6.2 Detector Tuning
Given the synthetic environment we have created to assess RIDES, we ﬁnd that
we can identify the lowest cost parameter setting for a particular environment
setting. This amounts to tuning the detector to ﬁnd an optimal short-term half-
life (Hst) and detection threshold (T ). Figures 4(a) and 4(b) show the optimal
short-term half-life and optimal detection threshold, respectively, as a function of
the block size B and the foreign-symbol saturation λa. The optimal values were
determined by trying all combinations of the short-term half-lives and thresholds
shown in Table 2, and selecting the settings that resulted in the lowest cost.
Anomaly Detector Performance Evaluation
121
200
e
f
i
L
-
f
l
a
H
m
r
e
T
-
t
r
o
h
S
l
a
m
i
t
p
O
5
0
0.1
0.2
Foreign Symbol Saturation
0.3