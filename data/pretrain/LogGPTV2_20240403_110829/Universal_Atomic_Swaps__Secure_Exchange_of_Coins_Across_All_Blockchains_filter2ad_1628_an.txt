perfectly binding with unique openings, the old checks (in H3)
pass if and only if the new checks (in H4) pass. This means that
the function computed by the 2PC simulator in both hybrids
is equivalent and therefore the two hybrids H3 and H4 are
identical. To be more precise, we can set intermediate hybrid
executions where we switch the checks one after the other for
n· ˜n executions of mLock. We can argue about the equivalence
of these intermediate hybrids by the perfect binding property
of the commitment scheme ΠC.
H4 ≡ H5: Notice that in H4 as in H5 the adversary simply
sees random shares of the opening information of commitment
for j ∈ [˜n]. Therefore the view of
c(01)
the adversary in this hybrid is identical to its view in H5.
i
H5 ≈c H6: Given that the only difference between the hybrids
for j ∈ [˜n]
is how the commitments c(01)
are generated, the indistinguishability of the two hybrids H5
and H6 follows from the computational hiding property of the
commitment scheme ΠC.
for i ∈ [n] and c(10)
for i ∈ [n] and c(10)
j
j
i
H6 ≡ H7: Notice that the change made in hybrid H7 does not
affect the functionality of the computation. We only change the
way the output of the simulated 2PC is generated and therefore
the execution in H6 and H7 are identical.
H7 ≈c H8: The only change in hybrid H8 is the abort in the
simulation with the special symbol abort1. Notice that this
event occurs when the adversary outputs σ∗ such that
(cid:16)
pk (10)
, tx (0)
= 1
(cid:111)
i∈[n]
, pk (10)
k
pk (01)
i∈[n]
ΠDS.Vf
for some k ∈ [˜n], and
S ← mRel
(cid:18)
(cid:96)kk,
k
(cid:111)
tx (1)
swp,i
i∈[n]
(cid:110)
(cid:16)
(cid:110)
swp,k, σ∗(cid:17)
(cid:110)
(cid:111)
swp,k,
, tx (0)
(cid:17)
swp,n
swp,1, . . . , σ(1)
σ(1)
pk (01)
, tx (1)
. Parse S :=
and if there exists some
j ∈ [n] ΠDS.Vf
= 0 We now show
that the probability with which this abort event occurs is at most
negligible in the security parameter, i.e., Pr[abort1|H8] ≤
negl(λ). To show this, we construct a reduction R against the
unlockability property of the lockable signatures.
swp,j, σ(1)
swp,j
j
swp,n
tx (1)
(cid:111)
swp,1, . . . , tx (1)
(cid:110)
i = pk i for i ∈ [n] and pk (10)
We in fact reduce to a weaker notion of unlockability where
the adversary in EUn-CMA is only given oracle access to
Sign(sk 1,·), . . . , Sign(sk n,·) (apart from Sign( ˜sk ,·)) and the
public keys (pk 1, . . . , pk n, ˜pk ). In this regard consider the re-
duction R that is given as input public keys (pk 1, . . . , pk n, ˜pk ).
The reduction guesses the session q8 where the adversary
triggers the abort abort1 and it guesses an index k ∈ [˜n].
It simulates the execution of H8 faithfully except it sets
pk (01)
k = ˜pk. Rest of the keys
are set according to H8. The reduction outputs M and ˜m
to its challenger, where M :=
and
˜m := tx (0)
swp,k and obtains a lock (cid:96)k. The reduction sets
(cid:96)kk = (cid:96)k and hardcodes in the simulation as done in H8. The
adversary participating in the hybrid H8 outputs a signature
σ∗ and the reduction R outputs the same.
Clearly the reduction R runs in polynomial time as it
only performs efﬁcient simulation operations. Notice that the
winning conditions of EUn-CMA are precisely the conditions
that lead to an abort abort1 in hybrid H8. It is easy to see
that if the adversary triggers the abort event abort1 with non-
negligible probability in session q1, the reduction also succeeds
in winning EUn-CMA with the same non-negligible probability.
Since this is a contradiction, it must be the case that abort1
occurs with negligible probability.
H8 ≈c H9: Notice that the only difference between the hybrids
is in the abort event abort2 in H9. The abort event occurs
if in some q2-th session the adversary is able to output σ∗
such that for some i ∈ [n] ΠDS.Vf(pk (01)
swp,i, σ∗) = 1.
We will show that the probability with which the abort event
is triggered is bound by a negligible probability with the help
of Lemma 5.
Pr[abort2|H9] ≤ negl(λ)
Lemma 5: There exists a negligible function negl such that
, tx (1)
Proof 8 (Lemma 5): To show this, we consider the following
hybrid executions. Note that these hybrid execution are only
i
(cid:110)
(cid:19)
(cid:111)
designed to show that the abort event abort2 occurs with
negligible probability. In other words, these hybrids do not
feature in our main line of hybrids as we have above.
Hybrid H9,k, k ∈ [˜n]: Is the same execution as H9 where
the sender has not yet initiated the release phase in the q2-
th session, except now the ﬁrst k iterations of generating
locks by the simulator is done by hardcoding the (cid:96)kk in the
simulator S2pc,3 where the lock (cid:96)kk ← Sim(n, PK, ˜pk , M, ˜m),
, M :=
where PK :=
, ˜pk := pk (10)
, . . . , pk (01)
pk (01)
(cid:110)
(cid:111)
1
n
k
i
tx (1)
(cid:111)
(cid:110)
swp,k.
swp,n, . . .
swp,n, . . .
, and ˜m := tx (0)
swp,1, . . . , tx (1)
, and ˜m := tx (0)
swp,1, . . . , tx (1)
tx (1)
H9,k ≈c H9,k+1: Let H9,0 = H9 and the indistinguishability
of hybrids H9,k and H9,k+1 follows immediately from the
hiding property of multi-lock signatures. To show this we
construct a reduction algorithm R that plays in the hiding
experiment EHi-CMA and runs a distinguisher (of the hy-
brids) as a sub-routine. The reduction gets as input (PK, ˜pk )
where PK := {pk 1, . . . , pk n}. It sets pk (01)
:= pk i for
i ∈ [n] and pk (10)
k+1 = ˜pk. The reduction outputs M, ˜m where
swp,k+1 to its
M :=
challenger and obtains a lock (cid:96)k which it sets as (cid:96)kk+1 = (cid:96)k.
The reduction hardcodes (cid:96)kk+1 in the simulator S2pc,3. Rest
of the simulation by R is according to H9,k. The distinguisher
outputs a bit b(cid:48) and the reduction outputs the same bit to its
challenger.
Clearly the reduction R is efﬁcient. To argue about the
success probability, notice that if b = 0 in EHi-CMA the
reduction R simulates H9,k, and if b = 1, the reduction R
simulates H9,k+1. Therefore if the distinguisher outputs b(cid:48) = b
with non-negligible probability more than half, the reduction
succeeds with the same non-negligible probability more than
half, which is a contradiction to the hiding property of the
lockable signatures.
By standard hybrid argument we have that H9,0 ≈c H9,˜n.
Notice that in H9,˜n, every lock is generated via Sim and does
not leak any information about signatures or honest party’s
secret keys to the adversary. Since H9 is indistinguishable from
H9,˜n, provided that P0 has not initiated the swap in session q2,
we have that the probability with which the adversary triggers
abort event abort2 in H9 must be the same in H9,˜n except
with a negligible difference. For the adversary to trigger abort2
in H9,˜n, it has to output σ∗ on tx (1)
for some
i ∈ [n].
We now show that the probability with which the adversary
can do this in H9,˜n is at most negligible in the security
parameter, i.e., Pr[abort2|H9,˜n] ≤ negl(λ), by reducing the
occurance of the event to the unforgeability of the signature
scheme. We construct a reduction algorithm R(cid:48) that guesses
the q2-th session and some index i∗ ∈ [n]. It receives as input
a public key pk and simulates the view for the adversary A
faithfully as in H9,˜n except that it sets pk (01)
:= pk. If the
i∗
adversary outputs a σ∗ on tx (1)
, the
reduction R(cid:48) simply outputs (tx (1)
rfnd,i∗ , σ∗) as its forgery in the
EUF-CMA game. Clearly R(cid:48) is efﬁcient and if A outputs
such a valid signature and a message with non-negligible
rfnd,i∗ under public key pk (01)
rfnd,i under pk (01)
i∗
i
31
i
rfnd,i under the public key pk (01)
adversary. Since H10 is indistinguishable from H10,n for depth
T0 distinguishers, we have that in session q3 the probability
with which the adversary triggers abort3 in H10 must be
negligibly close to the probability of it in H10,n. Now, for the
adversary to trigger abort3 in H10,n, it has to output σ∗ on
the transaction tx (0)
for some
i ∈ [n].
We show that the probability with which the adversary can
do so in H10,n is at most negligible in the security parameter
by reducing the occurrence of the event to the unforgeability
of the signature scheme ΠDS. We construct a reduction R(cid:48)
that guesses the q3-th session, and the index i∗ ∈ [n]. It
receives as input a public key pk and simulates the view
of the adversary A faithfully as in H10,n except that it sets
i∗ = pk. If the adversary outputs a signature σ∗ on
pk (01)
rfnd,i under pk, the reduction R(cid:48) outputs
some transaction tx (0)
the same signatures as its forgery in EUF-CMA game. We
conclude that since the signature scheme ΠDS is unforgeable,
we have that Pr[abort3|H10,n] ≤ negl(λ). This implies that
Pr[abort3|H10] ≤ negl(λ) which proves the lemma.
(cid:3)
H10 ≈s H11: The only difference between the hybrids is the
abort event abort4 in H11. The argument for the probability
of this event being triggered being at most negligible follows
immediately from the soundness of ΠVTS.
Our ﬁnal simulator S for the channel payment is deﬁned as
the execution in H11 and this concludes the proof.
probability, clearly R(cid:48) wins EUF-CMA with the same non-
negligible probability. This is a contradiction and therefore
bounds the probability with which abort2 is triggered to be
negligible. This proves that abort2 happens in H9,˜n with
negligible probability and since H9 ≈c H9,˜n, we have that
abort2 happens in H9 only with negligible probability. (cid:3)
This proves our initial claim that H8 ≈c H9.
H9 ≈c H10: The only difference between the hybrids is the
abort event abort3 in H11 in some session q3. The argument
for the probability of this event being triggered being at most
negligible follows immediately from Lemma 6.
Pr[abort3|H10] ≤ negl(λ)
Lemma 6: There exists a negligible function negl such that
(cid:17)
(cid:16)
(cid:16)
Proof 9 (Lemma 6): To show this, we consider the following
hybrid executions. Note that these hybrid executions are
designed to prove the lemma and do not feature in our main
line of hybrids of simulation. We consider the case of a corrupt
P0.
Hybrid H(cid:48)
10: Is the same execution as H10 in session q3, except
for i ∈ [n] uniformly
now the simulator chooses the keys pk (01)
at random and chooses the adversarial shares of the secret keys
also to be chosen uniformly at random. Rest of the execution
is unchanged.
Hybrid H10,j, j ∈ [n]: Is the same execution as H(cid:48)
10 in ses-
sion q3, except now the ﬁrst veriﬁable timed signatures are
generated using the simulator SVTS. That is,
SVTS
pk (01)
j
as in H(cid:48)
10.
H10 ≡ H(cid:48)
10: the hybrids are identical as the adversary only
sees random shares of secret keys for randomly sampled shared
keys.
H10,j ≈T0 H10,j+1: the indistinguishability of the hybrids for
a depth T0 bounded adversary follows from the timed privacy
of ΠVTS.
To show this, we give a reduction R to the timed privacy
of ΠVTS that uses the depth T0 bounded distinguisher of the
hybrids as a sub-routine. The reduction gets as input pk. The
reduction guesses i ∈ [n] and sets pk (01)
:= pk. It then sends
tx (0)
rfnd,i to its challenger to get (pk , C, π). The reduction sets
C (0)
:= π. The reduction simulates rest of the
execution exactly as in H10,j.
. Rest of the execution is the same
(cid:17) ←
:= C and π(0)
, tx (0)
rfnd,j, T0
C (0)
, π(0)
j
j
i
i
i
i
(cid:16)
(cid:17)
σ(0)
rfnd,i, T0
The reduction is clearly efﬁcient. To argue the suc-
cess probability notice that
if (C, π) was generated by
then the reduction has perfectly
ΠVTS.Commit
simulated H10,j for the distinguisher. If we had (C, π) ←
SVTS(pk , T0), then the reduction has simulated H10,j+1. There-
fore if the depth T0 bounded distinguisher is able to distinguish
between the hybrids with non-negligible probability, then the
reduction break the timed privacy of ΠVTS.
By a standard hybrid argument we can see that H10 ≈T0
H10,n. Notice that in H10,n every VTS given to P0 is generated
by the simulator SVTS. Therefore no information about the
shares of the honest party P1 is available in the view of the
32