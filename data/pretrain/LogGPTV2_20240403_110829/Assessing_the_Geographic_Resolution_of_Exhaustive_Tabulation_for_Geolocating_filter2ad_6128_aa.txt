title:Assessing the Geographic Resolution of Exhaustive Tabulation for Geolocating
Internet Hosts
author:S. S. Siwpersad and
Bamba Gueye and
Steve Uhlig
Assessing the Geographic Resolution of Exhaustive
Tabulation for Geolocating Internet Hosts
S.S. Siwpersad1, Bamba Gueye2, and Steve Uhlig1
1 Delft University of Technology, The Netherlands
PI:EMAIL, PI:EMAIL
2 Universit´e de Li`ege, Belgium
PI:EMAIL
Abstract. Geolocation of Internet hosts relies mainly on exhaustive tabulation
techniques. Those techniques consist in building a database, that keeps the map-
ping between IP blocks and a geographic location. Relying on a single location
for a whole IP block requires using a coarse enough geographic resolution. As
this geographic resolution is not made explicit in databases, we try in this paper
to better understand it by comparing the location estimates of databases with a
well-established active measurements-based geolocation technique.
We show that the geographic resolution of geolocation databases is far coarser
than the resolution provided by active measurements for individual IP addresses.
Given the lack of information in databases about the expected location error
within each IP block, one cannot have much conﬁdence in the accuracy of their lo-
cation estimates. Geolocation databases should either provide information about
the expected accuracy of the location estimates within each block, or reveal infor-
mation about how their location estimates have been built, unless databases have
to be trusted blindly.
Keywords: geolocation, exhaustive tabulation, active measurements.
1 Introduction
Location-aware applications have recently become more and more widespread. Exam-
ples of such applications comprise targeted advertising on web pages, displaying local
events and regional weather, automatic selection of a language to ﬁrst display content,
restricted content delivery following regional policies, and authorization of transactions
only when performed from pre-established locations. Each application may have a dif-
ferent requirement on the resolution of the location estimation. Nevertheless, as IP ad-
dresses are in general allocated in an arbitrary fashion, there is no strict relationship
between an IP address and the physical location of the corresponding physical interface.
Database-driven geolocation usually consists of a database-engine (e.g. SQL/
MySQL) containing records for a range of IP addresses, which are called blocks or
preﬁxes. When coupled with a script embedded in a website and upon a client access to
the website being detected, a request can be sent instantly to the database. This request
can be to check if the IP address has an exact or longest preﬁx match (LPM) with a cor-
responding geographic location and coordinate. Since there is no actual measurement
M. Claypool and S. Uhlig (Eds.): PAM 2008, LNCS 4979, pp. 11–20, 2008.
c(cid:2) Springer-Verlag Berlin Heidelberg 2008
12
S.S. Siwpersad, B. Gueye, and S. Uhlig
involved but merely a simple lookup, the request can be served in a matter of millisec-
onds. The expected time for which a website should be fully loaded, without causing
any nuisance, is in general within one second. Most commercial database providers
offer highly optimized scripts as well as abundantly documented application program-
ming interfaces, which meet this short expected response time. The database-driven
geolocation thus seems to be a useful approach.
Examples of geolocation databases are GeoURL [1], the Net World Map project [2],
and free [3] or commercial tools [4, 5, 6, 7, 8, 9]. Exhaustive tabulation is difﬁcult to
manage and to keep updated, and the accuracy of the locations is unclear. In practice
however, most location-aware applications seem to get a sufﬁciently good geographic
resolution for their purposes.
In this paper, we try to better understand the resolution of geolocation databases, by
comparing their location estimates with a well-known active measurements-based ge-
olocation technique, CBG [10]. We show that, as expected, the geographic resolution
of databases is far coarser than the resolution provided by active measurements, typi-
cally several times coarser than the conﬁdence given by active measurements. As most
geolocation databases do not give conﬁdence in the accuracy of their location records,
they are likely not to be trustworthy sources of geolocation information if precise IP
address-level locations are required. Applications that require as much accuracy as pos-
sible would thus typically have to rely on active measurements, not databases. To im-
prove the quality of current geolocation databases, we believe that the database records
should contain information about the expected conﬁdence in the location estimates.
The remainder of the paper is structured as follows. Section 2 introduces the datasets
used. Section 3 studies the geographic resolution of databases. Section 4 describes our
active measurements for geolocating Internet hosts. In Section 5, we compare the reso-
lution of active measurements with location estimates from databases. Finally, we con-
clude in Section 6.
2 Datasets
During the past few years, a growing number of companies have spent a lot of effort
in creating databases for geolocation purposes. Most of these companies, like Max-
mind [11], Hexasoft [8] and Quova [9], provide commercially available databases with
periodic updates. There are also freely available databases such as Host IP [3].
One of the problems of geolocation databases is that typically one does not know
much about the methodology used by the database provider to gather their geographic
information. One has to blindly rely on the claimed geographic resolution they provide.
There are four basic geographic resolution levels that occur in most databases: zipcode,
city, country and continent. Note that some databases may use more resolutions than
those four, like regions that may relate to countries, continents, or some intermediate
resolution. In most instances, we expect that the zipcode and the city granularity will be
very similar. The country resolution is widely recognized to be the typical one that is re-
liable from databases. Many databases do not give any information about the expected
geographic resolution of the database records, and when they do, not all records do
contain this information. The price of commercial databases increases with improved
Assessing the Geographic Resolution of Exhaustive Tabulation
13
geographic resolution, or with additional information about attributes of IP blocks like
ISP, connection type of hosts, and in a single instance conﬁdence about the location es-
timates. Note that we know one example of geolocation database that provides a notion
of conﬁdence related to the uncertainty about where the end-user actually lies compared
to the location estimate [9]. This notion of conﬁdence is however not quantitative, i.e.
it does not express how far an IP address belonging to the IP block is expected to be
from the location estimate provided, rather the type of host or connection that the host
is using.
In the sequel of this paper, we restrict our attention to two databases. These com-
mercial databases, GeoIP by Maxmind [11] and IP2Location by Hexasoft [8], are used
because of their popularity (see [11, 8] for a listing of some of their customers) and
their expected reliability. The number of IP blocks and the coverage in IP addresses of
Table 1. Overview of the 2 selected databases
Database P ublic blocks Special blocks T otal blocks P ublic addresses T otal addresses
2,355,811,965
Maxmind
Hexasoft
4,294,967,296
2,322,257,277
3,991,797,760
3,278,391
5,111,309
2
44
3,278,393
5,111,353
the two databases is shown in Table 1. Maxmind contains more than 3 million blocks,
and Hexasoft more than 5 million blocks. Note that a few blocks, called special blocks
according to RFC3330 [12], should not be considered.
3 Geographic Resolution of Databases
Based on the information provided in the geolocation databases, it is hard to say any-
thing about the actual geographic resolution of the location estimates. We merely know
that most records contain either a city or a country name. 73.1% of the databases records
in Maxmind contain a city name (66.6% for Hexasoft), then if no city name can be
found, 3.4% of the records contain a country name (33.2% for Hexasoft). When nei-
ther a city name nor a country name is present in the record, a continent name or a
federation of countries will typically be found. Note that sometimes records contain ge-
ographic coordinates only. While the area of countries and continents are well-deﬁned,
the area of a city depends much on what is meant by the boundaries of the considered
city. For example, taking the largest 250 cities in the world1 shows well how much the
area of a city can vary, especially depending on whether the suburbs or the ”metro” area
are considered to be part of the city or not.
When we analyze the number of unique cities in both Maxmind and Hexasoft, we
obtain 110, 349 unique cities in Maxmind and 15, 133 in Hexasoft. 100, 087 cities in
Maxmind occur each in a single IP block (12, 918 for Hexasoft), and 10, 262 cities
occur each in multiple IP blocks (2, 215 in Hexasoft). When several IP blocks have
the same city information, they will have the same location estimate in the database.
Note that a city is deﬁned by a city name, but also a country and a continent when this
1 http://www.citymayors.com/statistics/largest-cities-area-250.
html
14
S.S. Siwpersad, B. Gueye, and S. Uhlig
Matching city names
Total
Non-matching city names
 100
 80
 60
 40
 20
s
e
s
s
e
r
d
d
a
P
I
f
o
e
g
a
t
n
e
c
r
e
P
 0
 0.01
 0.1
 1
 10
 100
 1000
 10000
Distance (Km)
Fig. 1. Difference in location between Maxmind and Hexasoft
information is available in the databases. Some city names occur in several countries
and/or continents. When we compare the occurrence of unique city names (string-wise),
we observe that among a total of 7, 844 unique city names present in the databases,
7, 618 are present in one database only, and 226 are in both.
In geolocation databases, a unique location is associated to a given city. It is thus im-
possible to infer directly the geographic resolution used by the databases by comparing
the location estimates of different IP blocks for a given city. However, we can compare
the location estimates from Maxmind and Hexasoft, hoping that the difference between
their location estimates will give us an indication of their geographic resolution. We rely
on a free database, Host IP [3], that contains 1, 356, 506 IP blocks, to perform lookups
in the two other databases. For each IP block of Host IP, we take an IP address and use
it to lookup the two databases. We then compute the difference between the two loca-
tion estimates returned by the databases. Figure 1 displays the cumulative distribution
of the distance between the locations given by the two databases when performing a
lookup on IP addresses from the Host IP database. We provide three different curves,
one for the distribution of the distance when the city strings match between Maxmind
and Hexasoft, when they do not match, and irrespective of the city-level match. Among
the 1, 264, 892 IP addresses looked up, 377, 736 have the same city-level name in the
databases, while 887, 156 do not have matching city names. We see on the curve that
corresponds to matching cities that the difference in location between the databases
tends to be far smaller than when the city names do not match. Depending on whether
the city names match between the two databases entries, the typical distance between
their location estimates differs much. When the IP blocks from the two databases have
the same city name information, their locations are very close, typically less than 10Km.
When the city names do not match on the other hand, the locations differ more than
usual. Globally, about 50% of the IP lookups give a difference smaller than 100Km. If
the differences observed between the databases were to reﬂect in some way differences
in geographic resolutions used by them, then we would deduce that those resolutions
go from 1Km up to thousands of Km.
Assessing the Geographic Resolution of Exhaustive Tabulation
15
4 Measurements-Based Geolocation
Given that we cannot obtain the actual geographic location of many IP addresses in the
Internet, we need to rely on location estimates. To obtain location estimates for a large
enough number of IP hosts, we need accurate location estimates. For this, we rely on
active measurements. Active measurements have the advantage of providing an explicit
estimate of their accuracy.
Previous works on measurement-based geolocation of Internet hosts [13, 14] use the
positions of reference hosts, called landmarks, with a well-known geographic location
as the possible location estimates for the target host. This leads to a discrete space of an-
swers; the number of answers is equal to the number of reference hosts, which can limit
the accuracy of the resulting location estimation. This is because the closest reference
host may still be far from the target. To overcome this limitation, the authors of [10] pro-
pose the Constraint-Based Geolocation (CBG) approach, which infers the geographic
location of Internet hosts using multilateration. Multilateration refers to the process of
estimating a position using a sufﬁcient number of distances to some ﬁxed points. As
a result, multilateration establishes a continuous space of answers instead of a discrete
one. This multilateration with distance constraints provides an overestimation of the
distance from each landmark to the target host to be located, thus determining a region,
i.e. conﬁdence region, that hopefully encloses the location of the target hosts [10]. For
instance, the conﬁdence region allows a location-aware application to assess whether
the estimate is sufﬁciently accurate for its needs.
Although showing relatively accurate results in most cases, these measurement-
based approaches may have their accuracy disturbed by many sources of distortion that
affect delay measurements. For example, delay distortion may be introduced by the cir-
cuitous Internet paths that tend to unnecessarily inﬂate the end-to-end delay [15,16,17]
and by the potential existence of bottleneck links along the paths. To deal with these
sources of distortion, GeoBuD, Octant, and TBG were proposed by [18, 19, 20]. The
GeoBuD technique shows that estimating buffering delays, by traceroute measure-
ments, at intermediate hops along the traceroute path between a landmarks and a target
host enables to improve the accuracy of geolocation of Internet hosts. In the same way,
Topology-Based Geolocation (TBG) and Octant which are an extension of multilatera-
tion techniques with topology information were proposed. TBG additionally uses inter-
router latencies on the landmark to target network paths to ﬁnd a physical placement of
the routers and target that minimizes inconsistencies with the network latencies. TBG
relies on a global optimization that minimizes average position error for the routers
and target. Octant differs from TBG by providing a geometric solution technique rather
than one based on global optimization. Although it considers intermediate routers as
additional landmarks, Octant also uses geographic and demographic information. Geo-
graphic and demographic constraints are used in Octant to reduce the region size where
the target may be located. Only landmasses and areas with non-zero population are
considered as possible target locations [19]. Furthermore, it takes into account queuing
delays by using height as an extra dimension. It requires signiﬁcantly computational
time and resources. All these techniques generate a huge amount of overhead in the
network for a small gain in accuracy.
16
S.S. Siwpersad, B. Gueye, and S. Uhlig
To illustrate the marginal improvement of complex measurement-based geolocation
techniques, we do not only consider CBG, but also add to it estimation of the bottle-
neck bandwidth on the path. The bottleneck bandwidth can be deﬁned as the maximum
throughput that is ideally obtained across the slowest link over a network path. CBG
with bandwidth estimation allows the improvement of the geolocation estimation given
by CBG. Additional delay distortions caused by the bottleneck along the path are re-
moved from the overestimations of distance constraints that deﬁne the region enclosing
the target host in CBG, allowing tighter overestimations that result in a smaller re-
gion. Smaller regions that still enclose the target host provide a more accurate location
estimation.
4.1 CBG with Bandwidth Estimation
To estimate the bottleneck bandwidth over a network path between each landmark and
a given target host, we use SProbe [21]. SProbe estimates bottleneck bandwidth in un-
cooperative environments, i.e. a measurement software is only deployed locally on the
measurement host. SProbe relies on the exploitation of the TCP protocol. It sends two
SYN packets to an inactive port on the remote host to which it appends 1460 bytes of
data. Since the port is inactive, the remote host answers to these packets with two RST
packets of 40 bytes each. For the native traceroute used by Octant, TBG, and GeoBuD,
three packets are sent to each intermediate hops between a source and a destination
causing an important overhead. SProbe produces accurate and fast estimates using little
amount of probing data, so that it can scale to a large number of estimates.
For our evaluation, we rely on 39 PlanetLab nodes [22] as landmarks and we use
a subset of the two commercial databases (Maxmind and Hexasoft) as input for hosts
to be localized. Each landmark estimates the bottleneck bandwidth towards a given
target host by sending 7 SYN packets. We found in Section 3 that there are 226 city
names that are unique and can be found in both databases. Using these city names
we ﬁnd 41, 797 IP blocks from Maxmind matching those city names. Since we need
”pingable” addresses within each IP block to be used in measurements, we use the
single ping approach to ﬁnd at least one IP address per block. The single ping approach
consists in brute-force probing all IPs within a preﬁx, and stopping the probing within
the preﬁx as soon as a single IP address has answered. We ﬁnd 18, 805 IP blocks which
have at least one pingable IP address for Maxmind. For the Hexasoft database, we
have 41, 758 IP blocks among which 15, 823 contain at least one pingable IP address.
Using the set of pingable addresses, Figure 2 presents the cumulative distribution of
the conﬁdence region in km2 for location estimates in both the Maxmind and Hexasoft
databases. Figure 2(a) shows that CBG with bandwidth estimation assigns a conﬁdence
region with a total less than 104 km2 for about 20% of the location estimates, whereas
the basic CBG has only 10% for the same conﬁdence region. For IP addresses that
are given a conﬁdence region between 104 km2 and 106 km2, bandwidth estimation is
less and and less useful. Finally, when the conﬁdence region is larger than 106 km2,
bandwidth estimation is useless, or even makes the conﬁdence region larger than the
classical CBG technique.
Measurement-based geolocation techniques assume that the target host is able to
answer measurements. Active measurements will be impractical when we rely on ICMP