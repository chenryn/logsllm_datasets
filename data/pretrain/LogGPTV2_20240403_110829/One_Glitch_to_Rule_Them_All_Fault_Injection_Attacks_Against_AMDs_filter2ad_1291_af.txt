version field in the header, are signed by the ARK. A valid signature
links the component to it‚Äôs firmware version in the signed header.
To increase the security properties of the VCEK key derivation,
we propose to include a hash ‚Äì instead of the firmware version ‚Äì of
the respective TCB component in the secrets, similar to the DICE
model proposed by the Trusted Computing Group [23]. Including
the hash binds a secret to the component‚Äôs functionality. Using
a key-derivation function, the ROM bootloader binds the ùë†ùëíùëê_255
secret to the hash of the PSP OS, see Section 7.3.
In this model, if an attacker could get code execution on the
AMD-SP, the secrets that could be extracted are useless as they
depend on the attacker‚Äôs payload.
While this model presents a security improvement compared
to the current version of the derivation model, it also has practi-
cal drawbacks: any functional update of a component, i.e., a non-
security-related change, still results in a new VCEK. In addition
to this, this model prevents TCB rollback of endorsement keys as
currently supported by SEV-SNP. Without knowing the specific re-
quirements of the AMD-SP‚Äôs firmware components, it is impossible
to fully evaluate the applicability of the proposed model. Neverthe-
less, from a pure security perspective, we believe including the hash
within the intermediate secrets provides a strengthened security
model.
9 CONCLUSION
The attacks presented in this paper highlight SEV‚Äôs insufficient
protection against physical attacks. Despite its crucial role for
SEV‚Äôs security properties, the AMD-SP can be tricked into exe-
cuting attacker-controlled code. The hardware setup to mount the
presented glitching attack is cheap and readily available. Building
on this setup, we presented how an adversary with physical access
to the target host can implant a custom SEV firmware that decrypts
a VM‚Äôs memory using SEV‚Äôs debug API calls.
Furthermore, we showed that the glitching attack enables the
extraction of endorsement keys. The endorsement keys play a cen-
tral role in the remote attestation mechanism of SEV and can be
used to mount software-only attacks. Even an attacker without
physical access to the target host can use extracted endorsement
keys to attack SEV-protected VMs. By faking attestation reports,
an attacker can pose as a valid target for VM migration to gain
access to a VM‚Äôs data. The severity of the presented software-only
attacks is amplified by the fact that an attacker can perform the
key extraction on an AMD CPU unrelated to the CPU hosting the
targeted VM, i.e., on an AMD Epyc CPU bought by the attacker for
the sole purpose of extracting an endorsement key.
Our analysis revealed that the TCB versioning scheme intro-
duced with SEV-SNP does not protect against the presented attacks.
Based on our results, we conclude that SEV cannot adequately pro-
tect confidential data in cloud environments from insider attackers,
such as rogue administrators. The presented attacks do not rely on
firmware issues and can not be easily mitigated. Hence, we pro-
posed mitigations for future AMD Epyc CPUs. Nevertheless, to the
best of our knowledge, all AMD Epyc CPUs of the Zen 1, Zen 2 and
Zen 3 microarchitectures are susceptible to the presented attacks.
Session 11A: Attestation and Firmware Security CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea2887REFERENCES
[1] Advanced Micro Devices, Inc. 2018. Understanding Power Management and
Processor Performance Determinism. Retrieved 2021-04-06 from https://www.
amd.com/system/files/documents/understanding-power-management.pdf
[2] Advanced Micro Devices, Inc. 2020. AMD Secure Encrypted Virtualization API
Version 0.24. Retrieved 2021-03-26 from https://www.amd.com/system/files/
TechDocs/55766_SEV-KM_API_Specification.pdf
[3] Advanced Micro Devices, Inc. 2020.
AMD SEV-SNP: Strengthening VM
Isolation with Integrity Protection and More.
Retrieved 2021-04-07
from https://www.amd.com/system/files/TechDocs/SEV-SNP-strengthening-vm-
isolation-with-integrity-protection-and-more.pdf
[4] Advanced Micro Devices, Inc. 2021. AMD CEK Certificate Server. Retrieved
2021-04-16 from https://kdsintf.amd.com/cek/
[5] Advanced Micro Devices, Inc. 2021. AMD Milan Root Key. Retrieved 2021-04-16
from https://developer.amd.com/wp-content/resources/ask_ark_milan.cert
[6] Advanced Micro Devices, Inc. 2021. AMD VCEK Certificate Server. Retrieved
2021-04-16 from https://kdsintf.amd.com/vcek/
[7] Advanced Micro Devices, Inc. 2021. SEV firmware for ROME. Retrieved 2021-04-
16 from https://developer.amd.com/wordpress/media/2013/12/amd_sev_fam17h_
model3xh_0.24b0A.tar.gz
[8] Advanced Micro Devices, Inc. 2021. SEV Secure Nested Paging - Firmware ABI
Specification Revision 0.9. Retrieved 2021-05-03 from https://www.amd.com/
system/files/TechDocs/56860.pdf
[9] National Institute of Standards and Technology. 2013. Digital Signature Standard
(DSS). https://doi.org/10.6028/NIST.FIPS.186-4
[10] Tamas Ban. 2020. Arm Ltd.: Trusted Firmware M. Retrieved 2021-04-25 from
https://www.trustedfirmware.org/docs/TF-M_fault_injection_mitigation.pdf
[11] H. Bar-El, H. Choukri, D. Naccache, M. Tunstall, and C. Whelan. 2006. The
Sorcerer‚Äôs Apprentice Guide to Fault Attacks. Proc. IEEE 94, 2 (Feb. 2006), 370‚Äì
382. https://doi.org/10.1109/JPROC.2005.862424
[12] Jeremy Boone. 2020. There‚Äôs A Hole In Your SoC: Glitching The MediaTek
BootROM. https://research.nccgroup.com/2020/10/15/theres-a-hole-in-your-soc-
glitching-the-mediatek-bootrom/.
[13] Daniel R. L. Brown. 2010. SEC 2: Recommended Elliptic Curve Domain Parameters,
Version 2.0. https://www.secg.org/sec2-v2.pdf
[14] Robert Buhren, Alexander Eichner, and Christian Werling. 2019. Uncover, Un-
derstand, Own - Regaining Control Over Your AMD CPU. Retrieved 2021-01-14
from https://media.ccc.de/v/36c3-10942-uncover_understand_own_-_regaining_
control_over_your_amd_cpu
[15] Robert Buhren, Christian Werling, and Jean-Pierre Seifert. 2019. Insecure Until
Proven Updated: Analyzing AMD SEV‚Äôs Remote Attestation. In Proceedings of
the 2019 ACM SIGSAC Conference on Computer and Communications Security
(London, United Kingdom) (CCS ‚Äô19). Association for Computing Machinery,
New York, NY, USA, 1087‚Äì1099. https://doi.org/10.1145/3319535.3354216
[16] Lily Chen. 2009. Recommendation for Key Derivation Using Pseudorandom Func-
tions (Revised). https://doi.org/10.6028/NIST.SP.800-108
[17] Zitai Chen, Georgios Vasilakis, Kit Murdock, Edward Dean, David Oswald, and
Flavio D. Garcia. 2021. VoltPillager: Hardware-based fault injection attacks
against Intel SGX Enclaves using the SVID voltage scaling interface. In 30th
USENIX Security Symposium (USENIX Security 21). USENIX Association, Van-
couver, B.C. https://www.usenix.org/conference/usenixsecurity21/presentation/
chen-zitai
[18] The MITRE Corporation. 2019. CVE-2019-9836. Retrieved 2021-04-19 from
http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-9836
[19] A. Djellid-Ouar, G. Cathebras, and F. Bancel. 2006. Supply Voltage Glitches Effects
on CMOS Circuits. In International Conference on Design and Test of Integrated
Systems in Nanoscale Technology, 2006. DTIS 2006. IEEE, Tunis, Tunisia, 257‚Äì261.
https://doi.org/10.1109/DTIS.2006.1708651
[20] Zhao-Hui Du, Zhiwei Ying, Zhenke Ma, Yufei Mai, Phoebe Wang, Jesse Liu,
(2017).
and Jesse Fang. 2017. Secure Encrypted Virtualization is Unsecure.
arXiv:1712.05090
[21] Andreas Galauner. 2018. Glitching the Switch. Retrieved 2021-03-15 from https:
//media.ccc.de/v/c4.openchaos.2018.06.glitching-the-switch
[22] Gianluca Pacchiella. 2021. Gipi/Low-Level: Hardware | Glitching. Retrieved
2021-04-14 from https://github.com/gipi/low-level/blob/master/docs/security/
hardware.md#glitching
[23] Trusted Computing Group. 2021. TCGTrusted Platform ArchitectureHardware
Requirements for a Device Identifier Composition Engine. Retrieved 2021-05-
04 from https://www.trustedcomputinggroup.org/wp-content/uploads/Device-
Identifier-Composition-Engine-Rev69_Public-Review.pdf
[24] Felicitas Hetzelt and Robert Buhren. 2017. Security Analysis of Encrypted Virtual
Machines. In Proceedings of the 13th ACM SIGPLAN/SIGOPS International Confer-
ence on Virtual Execution Environments (Xi‚Äôan, China) (VEE ‚Äô17). ACM, New York,
NY, USA, 129‚Äì142. https://doi.org/10.1145/3050748.3050763
[25] Andrea H√∂ller, Armin Krieg, Tobias Rauter, Johannes Iber, and Christian Kreiner.
2015. QEMU-Based Fault Injection for a System-Level Analysis of Software
Countermeasures Against Fault Attacks. In 2015 Euromicro Conference on Digital
System Design. 530‚Äì533. https://doi.org/10.1109/DSD.2015.79
[26] International Rectifier.
2015.
put Digital Multi-Phase Controller.
https://www.infineon.com/dgdl/Infineon-IR35201MTRPBF-DS-v01_00-
EN.pdf?fileId=5546d462576f347501579c95d19772b5
IR35201
8+0/7+1/6+2 Dual Out-
Retrieved 2021-04-19 from
2016.
[27] International Rectifier.
Multi-Phase Controller.
infineon.com/dgdl/Infineon-IR35204MTRPBF-DS-v01_00-EN.pdf?fileId=
5546d462576f347501579c95e21172b9
3+1 Dual Output Digital
Retrieved 2021-04-19 from https://www.
[28] Hans Niklas Jacob and Robert Buhren. 2021. Glitching the AMD Secure Processor.
IR35204
Retrieved 2021-08-26 from https://github.com/PSPReverse/amd-sp-glitch
[29] David Kaplan. 2017. Protecting VM Register State with SEV-ES. Retrieved 2021-
04-07 from https://www.amd.com/system/files/TechDocs/Protecting%20VM%
20Register%20State%20with%20SEV-ES.pdf
[30] David Kaplan, Jeremy Powell, and Tom Woller. 2016. AMD Memory Encryption.
Retrieved 2021-04-07 from https://developer.amd.com/wordpress/media/2013/12/
AMD_Memory_Encryption_Whitepaper_v7-Public.pdf
[31] Zijo Kenjar, Tommaso Frassetto, David Gens, Michael Franz, and Ahmad-Reza
Sadeghi. 2020. V0LTpwn: Attacking X86 Processor Integrity from Software. In
29th {USENIX} Security Symposium ({USENIX} Security 20). 1445‚Äì1461.
[32] Roger Lai. 2013. AMD Security and Server innovation.
Retrieved 2021-
03-26 from https://uefi.org/sites/default/files/resources/UEFI_PlugFest_AMD_
Security_and_Server_innovation_AMD_March_2013.pdf
[33] Thomas Lendacky and Gary Hook. 2021. CCP Linux kernel driver. Retrieved
2021-05-04 from https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/
tree/drivers/crypto/ccp/
[34] Mengyuan Li, Yinqian Zhang, Zhiqiang Lin, and Yan Solihin. 2019. Exploiting
Unprotected I/O Operations in AMD‚Äôs Secure Encrypted Virtualization. In 28th
{USENIX} Security Symposium ({USENIX} Security 19). 1257‚Äì1272. https://www.
usenix.org/conference/usenixsecurity19/presentation/li-mengyuan
[35] Yifan Lu. 2019. Injecting Software Vulnerabilities with Voltage Glitching. (Feb.
//www.pjrc.com/store/teensy40.html
[43] P. Qiu, D. Wang, Y. Lyu, R. Tian, C. Wang, and G. Qu. 2020. VoltJockey: A
New Dynamic Voltage Scaling Based Fault Injection Attack on Intel SGX. IEEE
Transactions on Computer-Aided Design of Integrated Circuits and Systems (2020),
1‚Äì1. https://doi.org/10.1109/TCAD.2020.3024853
[44] Martin Radev and Mathias Morbitzer. 2020. Exploiting Interfaces of Secure
Encrypted Virtual Machines. In Reversing and Offensive-Oriented Trends Sym-
posium. Association for Computing Machinery, New York, NY, USA, 1‚Äì12.
https://doi.org/10.1145/3433667.3433668
[45] Kedar Rajpathak and Tezaswi Raja. 2020. Cross Domain Voltage Glitch Detection
Circuit for Enhancing Chip Security. Retrieved 2021-03-11 from https://patents.
google.com/patent/US20200285780A1/en
[46] Renesas Electronics Corporation. 2020. ISL62776 Multiphase PWM Regulator for
AMD CPUs Using SVI2. Retrieved 2021-04-19 from https://www.renesas.com/us/
en/document/dst/isl62776-datasheet
[47] Richtek Technology Corporation. 2019. Dual-Output PWM Controller for AMD
SVI2 CPU Power Supply. Retrieved 2021-04-19 from https://www.richtek.com/
assets/product_file/RT3667BT/DS3667BT-00.pdf
[48] Horst Schirmeier, Martin Hoffmann, Christian Dietrich, Michael Lenz, Daniel
Lohmann, and Olaf Spinczyk. 2015. FAIL*: An Open and Versatile Fault-Injection
Framework for the Assessment of Software-Implemented Hardware Fault Tol-
erance. In 2015 11th European Dependable Computing Conference (EDCC). IEEE,
Paris, France, 245‚Äì255. https://doi.org/10.1109/EDCC.2015.28
2019). arXiv:1903.08102 [cs]
[36] Akash Malhotra. 2020. Full-stack, Multilayered Security Features for a Chang-
Retrieved 2021-03-26 from https://www.amd.com/system/files/
ing World.
documents/ryzen-pro-article-multilayered-security-features.pdf
[37] Mathias Morbitzer, Manuel Huber, and Julian Horsch. 2019. Extracting Secrets
from Encrypted Virtual Machines. In Proceedings of the Ninth ACM Conference
on Data and Application Security and Privacy (CODASPY ‚Äô19). Association for
Computing Machinery, New York, NY, USA, 221‚Äì230. https://doi.org/10.1145/
3292006.3300022
[38] Mathias Morbitzer, Manuel Huber, Julian Horsch, and Sascha Wessel. 2018. SEV-
ered: Subverting AMD‚Äôs Virtual Machine Encryption. In Proceedings of the 11th
European Workshop on Systems Security (Porto, Portugal) (EuroSec‚Äô18). ACM, New
York, NY, USA, 6 pages. https://doi.org/10.1145/3193111.3193112
[39] Mathias Morbitzer, Sergej Proskurin, Martin Radev, Marko Dorfhuber, and Er-
ick Quintanar Salas. 2021. SEVerity: Code Injection Attacks against Encrypted
Virtual Machines. In 2021 IEEE Security and Privacy Workshops (SPW). 444‚Äì455.
https://doi.org/10.1109/SPW53761.2021.00063
[40] K. Murdock, D. Oswald, F. D. Garcia, J. Van Bulck, F. Piessens, and D. Gruss. 2020.
Plundervolt: How a Little Bit of Undervolting Can Create a Lot of Trouble. IEEE
Security Privacy 18, 5 (Sept. 2020), 28‚Äì37. https://doi.org/10.1109/MSEC.2020.
2990495
[41] Colin O‚ÄôFlynn. 2016. Fault Injection Using Crowbars on Embedded Systems.
IACR Cryptol. ePrint Arch. (2016). https://eprint.iacr.org/2016/810
[42] PJRC. 2021. Teensy¬Æ 4.0 Development Board. Retrieved 2021-04-01 from https:
Session 11A: Attestation and Firmware Security CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea2888[49] Texas Instruments. 2016. SN74LVC07A Hex Buffer and Driver with Open-Drain Out-
puts. Retrieved 2021-04-19 from https://www.ti.com/lit/ds/symlink/sn74lvc07a.
pdf
[50] the coreboot project. 2021. AMD Platform Security Processor (PSP) Firmware
Integration Guide. Retrieved 2021-08-24 from https://doc.coreboot.org/soc/amd/
psp_integration.html
[51] N. Timmers, A. Spruyt, and M. Witteman. 2016. Controlling PC on ARM Using
Fault Injection. In 2016 Workshop on Fault Diagnosis and Tolerance in Cryptography
(FDTC). 25‚Äì35. https://doi.org/10.1109/FDTC.2016.18
[52] Thomas Trouchkine, Guillaume Bouffard, and Jessy Cl√©di√®re. 2020. Fault Injection
Characterization on Modern CPUs. In Information Security Theory and Practice
(Lecture Notes in Computer Science). Springer International Publishing, Cham,
123‚Äì138. https://doi.org/10.1007/978-3-030-41702-4_8
[53] Thomas Trouchkine, S√©banjila Kevin Bukasa, Mathieu Escouteloup, Ronan Lash-
ermes, and Guillaume Bouffard. 2021. Electromagnetic Fault Injection against a
Complex CPU, toward New Micro-Architectural Fault Models. Journal of Crypto-
graphic Engineering (March 2021). https://doi.org/10.1007/s13389-021-00259-6
[54] Jan Werner, Joshua Mason, Manos Antonakakis, Michalis Polychronakis, and
Fabian Monrose. 2019. The SEVerESt Of Them All: Inference Attacks Against
Secure Virtual Enclaves. In Proceedings of the 2019 ACM Asia Conference on Com-
puter and Communications Security (Asia CCS ‚Äô19). Association for Computing
Machinery, New York, NY, USA, 73‚Äì85. https://doi.org/10.1145/3321705.3329820
[55] WikiChip. 2020. Socket AM4 ‚Äì Packages ‚Äì AMD. Retrieved 2021-04-01 from
https://en.wikichip.org/wiki/amd/packages/socket_am4#Pin_Map
[56] WikiChip. 2020. Socket SP3 ‚Äì Packages ‚Äì AMD. Retrieved 2021-04-01 from
https://en.wikichip.org/wiki/amd/packages/socket_sp3#Pin_Map
[57] Luca Wilke, Jan Wichelmann, Mathias Morbitzer, and Thomas Eisenbarth. 2020.
SEVurity: No Security Without Integrity ‚Äì Breaking Integrity-Free Memory
Encryption with Minimal Assumptions. 2020 IEEE Symposium on Security and
Privacy (SP) (May 2020), 1483‚Äì1496. https://doi.org/10.1109/SP40000.2020.00080
arXiv:2004.11071
[58] Luca Wilke, Jan Wichelmann, Florian Sieck, and Thomas Eisenbarth. 2021. un-
deSErVed trust: Exploiting Permutation-Agnostic Remote Attestation. In 2021
IEEE Security and Privacy Workshops (SPW). 456‚Äì466. https://doi.org/10.1109/
SPW53761.2021.00064
[59] Marc Witteman. 2018. Riscure: Secure Application Programming in the Presence
of Side Channel Attacks. Retrieved 2021-04-18 from https://www.riscure.com/
uploads/2018/11/201708_Riscure_Whitepaper_Side_Channel_Patterns.pdf
Session 11A: Attestation and Firmware Security CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea2889