at most two hops, as the clustering algorithm ensures that
all the OMs are the immediate neighbors of the CH.
CH
GW
OM
(a) Intra-cluster
(b) Inter-cluster
Figure 1: Intra-Cluster and Inter-Cluster Communication
The main purposes of clustering algorithms are 1) to per-
mit the communication in ad hoc wireless networks to be
scalable to node populations, and 2) to deal with mobility
[7]. With a cluster-based ad hoc wireless network, scala-
bility stems from a two-tiered communication architecture,
namely, intra-cluster and inter-cluster communications, as
shown in Figures 1(a) and 1(b), respectively. Since a cluster
can always be mapped to a unit disk with a radius equal to
the transmission range of the CH, the organization of a clus-
ter is inherently a clique, meaning that within a cluster, any-
one can talk to anyone else either directly or via the CH (a
trivial route). Hence, the notion of clustering inherently fa-
cilitates localized algorithms. In addition, as only the clus-
terheads and gateways participate in the inter-cluster com-
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 10:03:37 UTC from IEEE Xplore.  Restrictions apply. 
munication, system-wide information dissemination can be
done far more efﬁciently than with ﬂat ﬂooding.
A typical clustering algorithm begins with a distributed
clusterhead selection procedure. Speciﬁcally, through a
heartbeat diffusion that functions as one-hop neighborhood
probing, a node v identiﬁes itself as a clusterhead when
it recognizes that it meets a qualifying policy. The policy
could be that a node having the lowest node ID (NID) within
its one-hop neighborhood will become a CH1. A CH and all
its neighbors thus form a cluster. In addition, the nodes that
can hear from the CHs of two or more clusters are qualiﬁed
to become the gateways. Multiple clusters can be formed
simultaneously, and the clustering procedure may continue
iteratively. Eventually, all the nodes except the isolated ones
(i.e., those outside the transmission range of any networked
nodes) will become afﬁliated with clusters.
Our cluster-formation algorithm [16] is a variant of the
algorithms developed in [15, 7], and offers a number of
unique features as follows:
F1) The algorithm ensures 1) that the resulting clusters par-
tially overlap one another, which makes the GWs di-
rectly connect to two or more CHs, and 2) that with
high probability, multiple gateway candidates will be
available for robust cluster connectivity.
F2) The algorithm takes advantage of high population den-
sity to create deputy clusterheads (DCHs) and backup
gateways (BGWs), which allow the FDS to become
more resilient to both node and link failures.
F3) While previously developed clustering algorithms of-
ten leave gateway nodes with no particular cluster af-
ﬁliations, our algorithm ensures that each gateway is
afﬁliated with one and only one cluster, which prevents
ambiguity in cluster-based failure detection.
F4) The algorithm intentionally leaves an “open end” by
termination rule to stop
not providing an explicit
cluster-formation iterations. This enables the algo-
rithm to treat newly arriving hosts (which are un-
marked nodes2) in the same way as hosts that enter the
system prior to the algorithm execution but have not
yet been admitted to clusters.
F5) After the initial iteration of cluster formation, we al-
low the ﬁrst round of the cluster-formation algorithm
to “merge” with the ﬁrst round in the failure detec-
tion service (see Section 4.2). More speciﬁcally, at
1Although message loss during cluster formation may result in concur-
rent and conﬂicting CH declarations, strategies such as the RCC (random-
competition-based clustering) scheme proposed in [9] can be adopted (or
adapted) for resolution.
2Initially, all the nodes are unmarked, and a node marks itself after it is
admitted to a cluster.
the epoch of each heartbeat interval, both marked and
unmarked nodes will transmit their heartbeats. That
serves multiple purposes concurrently:
– For the marked nodes, their heartbeats enable
them to participate in the failure detection service
that executes in their local clusters.
– For the unmarked nodes that are located inside
the established clusters but are not yet recognized
by the CHs (due to the events of message loss, re-
source migration, or replenishment), their heart-
beats can be treated as membership subscriptions
by a group membership service.
– For the unmarked nodes that are located outside
the clusters, their heartbeats will lead the cluster-
ing algorithm to form additional clusters to cover
as many of the nodes as possible.
Note that after the ﬁrst round, the clustering and FDS al-
gorithms (see Section 4.2) will execute separately. On the
other hand, if during the kth iteration (k > 1), none of
the heartbeats diffused in the ﬁrst round (which is shared
by the cluster-formation algorithm and the failure detec-
tion service, as described in F5) show the presence of un-
marked nodes, then the kth iteration of the cluster-formation
algorithm will become degenerate, implying that the non-
stopping iterative execution of the algorithm will incur no
additional costs unless there is a need for cluster formation.
4 Failure Detection Service
4.1 Completeness and Accuracy
Extensive research efforts on the subject have yielded a
rich body of literature concerning the abstract failure detec-
tor models characterized by formally deﬁned completeness
and accuracy properties (see [13, 14], for example). Since
our FDS is aimed at serving ad hoc network applications
by providing probabilistic guarantees for completeness and
accuracy, rather than attempt to provide deterministic guar-
antees for a weaker version of the properties, we choose to
informally deﬁne those two properties with respect to a per-
fectly reliable FDS in the context of our application:
Completeness: Every node failure will be reported to ev-
ery operational node.
Accuracy: No operational node will be suspected by other
operational nodes.
By an “operational node,” we mean a node that is not
crashed or partitioned from the network in question. Due
to the vulnerability of message loss, a deterministic guar-
antee of the accuracy property will not be possible in the
context of ad hoc wireless networking. On the other hand,
the clustering approach facilitates a probabilistic accuracy
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 10:03:37 UTC from IEEE Xplore.  Restrictions apply. 
guarantee. In particular, the cluster-based communication
architecture permits an FDS to execute locally in each clus-
ter and allows the result to be forwarded to other clusters
only if a node failure is detected. Then, based on the as-
sumption that there will be no creations or alterations of
messages on transmission links, the problem of providing
a probabilistic accuracy guarantee can be reduced to a sim-
pler problem. More succinctly, for achieving a satisfactory
probabilistic accuracy guarantee at the system level, it will
be sufﬁcient if we can effectively reduce, at the local-cluster
level, the likelihood of false detection.
Similarly, in order to achieve a satisfactory probabilistic
guarantee of the completeness property, it will be sufﬁcient
to ensure that with high probability, a failure report will 1)
reach every member of the cluster in which the correspond-
ing failure is detected, 2) go through the backbone of the
communication architecture to reach every CH, and 3) reach
all the cluster members via their CHs that receive the report
through the inter-cluster communication.
As described in Sections 4.2 and 4.3, robust intra- and
inter-cluster communications are an integral part of our
FDS, which enables the probabilistic guarantees of com-
pleteness and accuracy.
4.2 Localized Failure Detection
During the distributed cluster formation, a self-elected
CH identiﬁes cluster members and broadcasts a cluster or-
ganization announcement. Hence, every cluster member
will have an initial view of the cluster-based local mem-
bership, and the CH will know from which nodes it should
expect to hear during an FDS execution. This service starts
to execute at the epoch of each heartbeat interval and is de-
scribed below.
Heartbeat-Style Failure Detection Service.
fds.R-1: Heartbeat exchange
Every node in the local cluster C sends to the CH a heart-
beat message which contains the sender’s NID and a one-
bit mark indicator. Meanwhile, the CH broadcasts such a
heartbeat message. Because of the cluster-formation al-
gorithm and the promiscuous receiving mode, the heart-
beat of the CH can be heard by all the nodes in C, while
the heartbeat of a non-CH node v can be heard or over-
heard by the CH and a subset of the cluster members (i.e.,
the in-cluster one-hop neighbors of v). Thus, this round
can be viewed as a heartbeat diffusion, during which the
CH and non-CH nodes perform heartbeat broadcasting
and “multicasting,” respectively.
fds.R-2: Digest exchange
Every node in cluster C sends to the CH a digest which
enumerates the nodes in C from which the sender node
hears or overhears their heartbeats during fds.R-1. Mean-
while the CH broadcasts its own digest to every member
in C. The actual result of this round is a digest diffusion.
fds.R-3: Health-status-update broadcast
By analyzing the heartbeat information collected through
fds.R-1 and fds.R-2, the CH identiﬁes failed nodes ac-
cording to the failure detection rule (see below) and then
broadcasts an update on the cluster health status, which
indicates the newly detected failed nodes in C (if any).
Failure detection rule: A node v is determined to have
failed if and only if 1) the CH receives neither v’s
heartbeat in fds.R-1 nor the digest from v in fds.R-2,
and 2) none of the digests that the CH receives reﬂect
a member’s awareness of the heartbeat of v.
From the fail-stop model and the assumption that no
message creation or alteration will happen on communica-
tion links, it follows that the above rule is sufﬁcient to guar-
antee that no failed cluster members will go undetected by
the FDS. Since every node in C will send at most one mes-
sage in each of the rounds, the duration of each round is
set to a ﬁxed value Thop (see Section 2.2), which serves as
a timeout. Furthermore, the above rule simultaneously ex-
ploits time, spatial, and message redundancies, which sig-
niﬁcantly reduces the likelihood of false detection. More
speciﬁcally,
1) By treating both the heartbeat in fds.R-1 and the di-
gest in fds.R-2 as indicators of a node’s health, the rule
exploits time redundancy;
2) By summarizing the digests from all the cluster mem-
bers, the rule takes advantage of the inherent spatial
redundancy in high-density systems and the inherent
message redundancy in ad hoc network settings (i.e.,
the heartbeats that a non-CH node overhears during
fds.R-1 will be reﬂected in its digest sent to the CH).
The logic of the failure detection rule is also applied to
the detection of CH failures, except that for CH failures the
highest-ranked DCH (see Section 3 and [16]) is the author-
ity that makes the decision. If the DCH detects a CH failure,
it will broadcast a health status update and take over from
the CH at the end of fds.R-3.
CH-failure detection rule: A CH will be judged to have
failed if and only if 1) the DCH receives neither the
CH’s heartbeat in fds.R-1 nor the digest from the CH
in fds.R-2, 2) none of the digests that the DCH receives
reﬂect a member’s awareness of the heartbeat of the
CH, and 3) the DCH does not receive the health status
update from the CH in fds.R-3.
Due to possible losses of messages, the DCH may mis-
takenly judge an operational CH to be a failed host. Such
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 10:03:37 UTC from IEEE Xplore.  Restrictions apply. 
false detection could result in severe damage to the qual-
ity of the FDS. Speciﬁcally, this mistake may cause the CH
and DCH to generate two conﬂicting failure reports and to
broadcast them simultaneously. In such a situation, perhaps
exacerbated by further message losses, the GWs may not
notice the discrepancy and thus may forward the conﬂict-
ing reports to neighboring clusters, resulting in inconsistent
views on failures. Nonetheless, due to the exploitation of
time, spatial, and message redundancies, the likelihood of
such a scenario will be extremely low. Section 5 provides a
probabilistic analysis that validates this assertion.
After the detection of a failed CH, the DCH takes over
from the CH. Although it is unlikely to happen due to the
high-density nature of the systems we consider, we must
take into account the case in which the DCH’s transmission
range cannot reach some of the cluster members. As illus-
trated in Figure 2(a), the nodes in the area Av are out of the
transmission range of the DCH because of the distance d
between the CH and DCH. While this situation might cause
accuracy problems in failure detection, the digest collection
in fds.R-2 will signiﬁcantly reduce their probability. Con-
sider the scenario illustrated in Figure 2(a), in which the
dashed circle marked Au represents the area that is within
the transmission range of node v. This node is located in
area Av (the darkest area), and area Ag (marked by horizon-
tal lines) is the region that can be reached by both the DCH
and v. Clearly, unless Ag is empty, the DCH may learn that
v is still alive based on the digest from v(cid:1)
, a node in Ag. We
have conducted a model-based analysis of a DCH’s reach-
ability. The evaluation results show that unless the node
population density is low and the DCH’s distance from the
original CH is big, with high probability a DCH will be able
to hear from an “out-of-range” cluster member through the
round of digest diffusion. (The study is not included in this
paper due to space limitations.)
Au
Ag
v
v′
Av
d
(a)
Au
CH
DCH
OM
Ag
v′
v
(b)
Figure 2: Exploitation of Inherent Message Redundancy
Intra-Cluster Completeness Enhancement. Nonethe-
less, fds.R-3 is not equipped with redundancy, which im-
plies a potential completeness problem (i.e., some nodes
may not be able to receive the update that indicates a de-
tected failure from the CH). In addition, as discussed above,
after a CH failure, the DCH may not be able to deliver a
failure report directly to every member in the cluster. Our
solution to those potential completeness problems is to al-