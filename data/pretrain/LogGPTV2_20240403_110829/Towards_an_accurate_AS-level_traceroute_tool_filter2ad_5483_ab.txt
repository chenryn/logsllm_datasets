for an ICMP reply. In lieu of sending multiple packets per TTL
value, we modiﬁed the traceroute source code to send a second
packet only if the ﬁrst attempt did not produce an ICMP response;
for the second packet, we wait ﬁve seconds for a reply. To further
reduce the overhead, we apply the modiﬁed traceroute with DNS
resolution disabled; after completing the traceroute experiments,
we perform a reverse DNS lookup for each unique IP address that
appears in the traceroute output. For each destination address, we
record a timestamp and the traceroute output.
Extract BGP AS paths: For each candidate preﬁx, we extract the
corresponding AS path from the most recent (daily) dump of the
local BGP table that occurred before the traceroute. If the table has
no BGP route for the preﬁx (say, due to a BGP withdrawal since the
initial table dump), we extract the AS path of the longest matching
preﬁx. We preprocess the BGP AS path to collapse consecutive
repeating ASes (e.g., converting “701 88 88” to “701 88”) that stem
from AS prepending.
2.3 Discarding Based on BGP Properties
In some cases, comparisons between the BGP and traceroute
paths are not meaningful, and we discard both paths:
BGP routing changes: Routing changes introduce uncertainty in
the local BGP AS path during the period of a traceroute experi-
ment. Starting with the most recent BGP table dump, we apply the
sequence of update messages to track changes in the BGP AS path
for each preﬁx over time. After a traceroute completes, we identify
the most recent BGP route update for that preﬁx and use this AS
path in our subsequent analysis. We also inspect a window of time
before and after the traceroute for update messages for the preﬁx.
If a BGP routing change occurs during this window, we exclude
this preﬁx from our analysis. In our study, we apply a 30-minute
window before and after each traceroute to account for delays in
BGP routing convergence [21]. Still, we cannot ensure that the
forwarding path remains the same throughout the traceroute ex-
periment. For example, the forwarding path may ﬂuctuate due to
an intradomain routing change. In addition, some downstream AS
might experience a BGP routing change for some subnet of the pre-
ﬁx that is not seen at local collection point. We can only ensure that
the BGP AS path seen at our collection point is stable during the
traceroute experiment.
Null AS paths: Each BGP table has a few routes with a null AS
path. These routes correspond to preﬁxes belonging to the institu-
tion where we collected the BGP and traceroute data.
Private AS numbers: Some BGP AS paths contain private AS
numbers in the range of 64512–65535. This can arise when a cus-
tomer (using a private AS number) mistakenly leaks BGP routes
learned from one upstream provider to another.
Apparent AS loops: BGP has a loop-detection mechanism where
a router discards a route when its own AS number appears in the
AS path. However, apparent AS-level loops can arise if a router
is (mis)conﬁgured to prepend an arbitrary AS number that already
appears elsewhere in the AS path.
AS SET: In the usual case, the AS path information is encoded as
a sequence of ASes. However, occasionally, when a router aggre-
gates multiple BGP routes, the resulting AS path may include an
unordered set of ASes from the original paths (in order to prevent
loops). This makes it impossible to determine the sequence of ASes
in the path(s).
2.4 Computing Traceroute AS Paths
Computing the AS-level traceroute path requires mapping the
IP addresses in the path to AS numbers. We construct an initial
mapping by combining BGP routing tables from multiple locations
and extracting the last hop in the AS path (the “origin AS”) for each
entry. An individual IP address is mapped to the longest matching
preﬁx. If a preﬁx has routes with multiple origin ASes (MOAS),
we map the IP address to the group of ASes. After mapping each
traceroute hop to an AS (or group of ASes), we collapse hops with
the same mapping to produce the AS-level traceroute path.
3. TRACEROUTE ANALYSIS
In this section, we apply our measurement methodology to
traceroute and BGP routing data collected from eight sites. We
analyze the diverse ways the traceroute experiments can end and
explain how we preprocess the data. We quantify the limitations of
using Internet routing registry data to map the IP addresses to AS
numbers and evaluate our approach of using BGP routing tables
collected from multiple vantage points. Still, many of the hops in
the traceroute paths have IP addresses that map to multiple ASes or
do not appear in the BGP table.
3.1 Collecting Traceroute and BGP Updates
We collected detailed routing data from eight locations in the
North America, as summarized in Table 1. The sites were chosen
based on their topological diversity and our ability to collect both
traceroute and BGP update data. At each location, we ran tracer-
oute on machines one or more hops behind a single border router;
the traceroute data were preprocessed to remove the initial hops
between the probe machine and the border router. In AS 6431 and
AS 25 we had root access to a Linux machine that ran our modiﬁed
traceroute software to send a second TTL-limited probe upon re-
ceiving a “*” response from an intermediate hop; sending a second
packet resulted in a successful ICMP reply in 7% of the cases. In
other locations, we used a standard traceroute conﬁgured to send a
single probe for each hop to reduce overhead and delay. At each
site, we collected BGP updates in MRT format through a BGP ses-
sion with the border router, along with daily dumps of the BGP
routing table. At each location, the machines sending traceroute
probes and logging the BGP updates had their clocks synchronized
using NTP. For brevity, we present the results from the ﬁrst three
locations only; the results from other locations are similar.
Despite the topological diversity of our measurement points, our
analysis would beneﬁt from a larger number of data sets from
different countries. On the surface, using the publicly-available
traceroute servers would seem like a natural solution to this prob-
lem. However, BGP update messages are not available from these
servers, although some support querying of the BGP routing ta-
ble; this would have allowed us to poll a preﬁx’s BGP route a few
minutes before and after each traceroute experiment, in the hope of
catching relevant BGP routing changes. However, the public tracer-
oute servers typically impose a rate limit on requests issued from
the same host, making it difﬁcult to probe a large number of ad-
dresses in a reasonable amount of time. The long delay could span
signiﬁcant changes in the Internet topology and in the mapping of
preﬁxes to ASes. In addition, the GUIs at the public servers typi-
cally do not support changes to traceroute parameters (e.g., number
of probes per hop, timeout for ICMP replies, and disabling DNS
resolution). As such, although our methodology can be applied to
an arbitrary number of vantage points, the analysis in this paper fo-
cuses on a smaller number of data-collection points under our direct
control; where relevant, we comment on how the limited vantage
points may affect our results.
Our analysis focuses on one set of traceroute experiments from
each location; results from other dates produced very similar re-
sults. The eight traceroute data sets were collected between May
and June in 2003. Table 2 reports the number of preﬁxes extracted
from the local BGP routing table at the ﬁrst three sites, following
the steps outlined earlier in Figure 1. The table also lists the num-
ber of candidate preﬁxes used in the traceroute experiments (with
two destination addresses per preﬁx), after applying the algorithm
in Section 2.1; the other 1.3–1.4% of the BGP preﬁxes were not
the longest matching route entry for any destination addresses. The
compared preﬁxes excludes the cases where comparisons with the
Organization
Location
NJ, USA
AT&T Research (AS 6431)
CA, USA
UC Berkeley (AS 25)
PSG home network (AS 3130) WA, USA
WA, USA
Univ of Washington (AS 73)
ArosNet (AS 6521)
UT, USA
Nortel (AS 14177)
Vineyard.NET (AS 10781)
Peak Web Hosting (AS 22208)
ON, Canada
MA, USA
CA, USA
Dates in 2003
June 6-9
June 6-8
April 30 - May 8
June 4-8
May 1-6
May 1-6
June 4-9
May 1-8
Upstream Provider (AS Number)
UUNET (701), AT&T (7018)
Qwest (209), Level 3 (3356)
Sprint (1239), Verio (2914)
Verio (2914), Cable & Wireless (3561)
UUNET (701)
AT&T Canada (15290)
UUNET (701), Sprint (1239), Level 3 (3356)
Level 3 (3356), Global Crossing (3549), Teleglobe (6453)
Table 1: Traceroute probing locations
Extracted
Candidate
Compared
AS 6431 AS 25 AS 3130
120996
121259
119340
119550
118345
117195
124295
122487
112120
Table 2: Number of preﬁxes in the three datasets
Routing changes
Null AS paths
Private ASes
AS loops
AS SET
AS 25
AS 6431
AS 3130
0.3802% 0.5809% 0.3105%
0.0058% 0.0064% 0.0000%
0.0000% 0.0000% 0.0008%
0.0000% 0.0000% 0.0155%
0.0214% 0.0233% 0.0248%
Table 3: Preﬁxes excluded due to BGP properties
BGP AS paths were not meaningful. Table 3 presents a more de-
tailed breakdown of the ﬁve cases, which account for less than 1%
of the preﬁxes probed in the traceroute experiments. The rest of
the candidate preﬁxes that are not compared are due to BGP table
changes causing some long preﬁxes to disappear and failed tracer-
outes caused by routing problems. The compared preﬁxes form the
basis of the analysis in the remainder of the paper.
3.2 Characterizing the Traceroute Results
In practice,
Ideally, traceroute returns a complete list of IP addresses up
to and including the destination. This requires each hop to re-
turn an ICMP TIME EXCEEDED message with the address of
the corresponding interface and the destination host to return a
PORT UNREACHABLE message.
the traceroute
paths end in ﬁve different ways, as summarized in Table 4:
Expected ﬁnal address: Only around 11% of the paths end with a
PORT UNREACHABLE message from the target IP address. In a
way, this is not surprising because the destination address does not
necessarily correspond to a live machine and some networks have
ﬁrewalls that discard the UDP traceroute probes. Still, around 95%
of the traceroute paths reach an address with the same origin AS as
the target destination.
Unexpected ﬁnal address: About 15% of the paths end in less than
30 hops (the default maximum number) with an address that differs
from the intended destination. This can occur when the destina-
tion is a device (such as a router) that has multiple interfaces with
different IP addresses, or if an intermediate component (such as a
ﬁrewall) sends a PORT UNREACHABLE message upon receiving
unsolicited packets for a downstream host.
Ending with “*”: More than half of the paths end with one or
more “*” characters, implying that no ICMP reply was received.
Expected
Unexpected
“*”
“!”
30 hops
AS 25
AS 6431
AS 3130
11.21% 11.24% 11.21%
14.37% 14.17% 15.00%
54.79% 55.48% 53.92%
12.15% 12.09% 12.48%
7.47%
7.40%
7.02%
Table 4: Ending of the traceroute experiments
This can occur when the TTL-limited probes are discarded (say,
by a ﬁrewall), the components along this part of the path do not
participate in ICMP (or apply rate-limiting), or the ICMP messages
are lost along the reverse path.
Ending with “!”: Around 12% of the traceroute results end with
a “!” symbol indicating that the last component in the path was
unable or unwilling to forward the packets toward the destination.
The two most common scenarios are !H (host unreachable) and
!X (communication administratively prohibited), with !N (network
unreachable) a distant third.
Ending after 30 hops with an IP address: About 7% of the paths
continue to the maximum length (30 hops) and end with an IP ad-
dress. The vast majority (95%) of these paths have forwarding
loops, where some addresses appear multiple times in the path. A
small fraction of the paths do not contain loops and appear to rep-
resent paths that continue beyond 30 hops.
Although most loops persisted till the end of the traceroute path,
a few paths had temporary loops and some loops that ended with a
“*”. In total, 7–8% of the paths contained a forwarding loop. This
may stem, in part, from IP addresses that have not been allocated to
any operational network or machine. Some routers may be conﬁg-
ured with default routes that direct the trafﬁc back to an upstream
router. We do not expect traceroutes to known “live” addresses
to uncover such a large percentage of forwarding loops. Overall,
the combination of forwarding loops, unreachable hosts, discarded
probe packets, and devices with ICMP disabled resulted in a rela-
tively small number of probes that traversed the entire path to the
destination. To enable comparisons with the BGP data, we prepro-
cessed the end of each traceroute path to remove forwarding loops
and trailing “*” and “!” characters; then we converted the (partial)
forwarding path to an AS path by mapping each hop to an AS num-
ber, where possible. As such, we did not expect a complete match
between the BGP and traceroute AS paths. Instead, we compared
the two paths up to and including the end of preprocessed tracer-
oute path. For example, if the traceroute AS path is “4006 16631”
and the BGP AS path is “4006 16631 22476,” we considered this a
successful match.
Whois Data
Combined BGP Tables
Resolving Incompletes
AS 6431 AS 25 AS 3130 AS 6431
Match
Mismatch
Incomplete
unmapped hop
* hop
MOAS hop
Match/mismatch ratio
44.7% 44.7%
17.1% 29.4%
38.2% 25.9%
33.4% 20.5%
7.2%
8.7%
0.0%
0.0%
1.52
2.62
46.1%
23.0%
30.9%
25.9%
8.5%
0.0%
2.00
AS 25
71.7% 73.20%
8.3%
6.1%
18.5%
22.1%
2.7%
1.5%
7.6%
9.1%
13.0%
9.8%
8.79
11.70
AS 3130 AS 6431 AS 25 AS 3130
81.6%
7.1%
11.3%
0.3%
5.5%
6.4%
11.43
77.8% 78.0%
6.6%
9.0%
15.6% 11.1%
0.6%
0.3%