title:Reading Between the Lines: Content-Agnostic Detection of Spear-Phishing
Emails
author:Hugo Gascon and
Steffen Ullrich and
Benjamin Stritter and
Konrad Rieck
Reading Between the Lines:
Content-Agnostic Detection
of Spear-Phishing Emails
Hugo Gascon1(B), Steﬀen Ullrich2, Benjamin Stritter3, and Konrad Rieck1
1 TU Braunschweig, Braunschweig, Germany
PI:EMAIL
2 Genua GmbH, Kirchheim bei M¨unchen, Germany
3 Friedrich Alexander-Universit¨at Erlangen-N¨urnberg, Erlangen, Germany
Abstract. Spear-phishing is an eﬀective attack vector for inﬁltrating
companies and organisations. Based on the multitude of personal infor-
mation available online, an attacker can craft seemingly legit emails and
trick his victims into opening malicious attachments and links. Although
anti-spooﬁng techniques exist, their adoption is still limited and alter-
native protection approaches are needed. In this paper, we show that a
sender leaves content-agnostic traits in the structure of an email. Based
on these traits, we develop a method capable of learning proﬁles for a
large set of senders and identifying spoofed emails as deviations thereof.
We evaluate our approach on over 700,000 emails from 16,000 senders and
demonstrate that it can discriminate thousands of senders, identifying
spoofed emails with 90% detection rate and less than 1 false positive in
10,000 emails. Moreover, we show that individual traits are hard to guess
and spooﬁng only succeeds if entire emails of the sender are available to
the attacker.
Keywords: Spear-phishing · Email spooﬁng
Targeted attack detection
1 Introduction
Emails are a prevalent attack vector for inﬁltrating companies and organisations.
As documents and links are regularly exchanged via email within and across these
environments, they are a perfect vehicle for transmitting malicious payloads to
a victim [6,20]. To increase their success, attackers speciﬁcally target individual
members of an organization using carefully crafted emails—a technique referred
to as spear-phishing. For example, an attacker may pick an appropriate topic,
use correct wording and spoof a well-known sender to convince the recipient of
the veracity of an email [16]. These targeted attacks are more advanced than
regular phishing or spam campaigns, as they are individually adapted to the
environment and behavior of the victim. As a result, there exist only few simi-
larities between diﬀerent spear-phishing attacks which makes it hard to construct
eﬀective defenses.
c(cid:2) Springer Nature Switzerland AG 2018
M. Bailey et al. (Eds.): RAID 2018, LNCS 11050, pp. 69–91, 2018.
https://doi.org/10.1007/978-3-030-00470-5_4
70
H. Gascon et al.
Although users are increasingly aware of the risk they are exposed to, they
have to rely on hints provided by the email client to detect spoofed content.
In the default setup, several clients, like Microsoft Outlook and Mozilla Thun-
derbird, display only little information for identifying the sender, such as the
From and Reply-To ﬁelds. Emails from unknown senders can be marked accord-
ingly and speciﬁcally dealt with but these and other ﬁelds can be forged, mak-
ing it hard even for a skilled user to distinguish legitimate content from well-
crafted attacks [5,34]. While inconsistent combinations of these ﬁelds can be
easily detected and used to notify the user of a potential threat, the situation
becomes challenging if all ﬁelds are correctly adapted by the adversary, such that
the email appears totally legitimate in its content as well as its headers.
Common anti-spooﬁng techniques such as the Sender Policy Framework
(SPF) [24], DomainKeys Identiﬁed Mail (DKIM) [7] and the more recent Domain
Message Authentication Reporting & Conformance (DMARC) [25] can help to
validate the sender of an email in this situation. Similarly, techniques for digital
signing of emails, such as PGP [4] and S/MIME [29], enable to verify the sender.
Unfortunately, these techniques are still not widely adopted in practice. While
we notice several email domains in our evaluation data with SPF entries, less
than 5% of the collected 700.000 emails contain corresponding DKIM headers
or even digital signatures. Moreover, all of these techniques need to be imple-
mented at the sending side, which renders it diﬃcult to protect from spooﬁng if
not all communication parties adopt the technology [13,28]. Therefore, given an
attacker that is able to exactly match the address of a known sender, the user
is unable to detect the attack and might be tricked into opening a malicious ﬁle
or link.
As a result, there is a demand for alternative approaches to protect users
from highly targeted spear-phishing emails. In this paper, we propose a method
that is able to verify, without relying on its content, if an email exactly match-
ing the address of a known sender truly originates from its legit source. Our
method builds on the observation that a sender leaves characteristic traits in
the structure of an email, which are independent from textual content and often
persist over time. These traits signiﬁcantly diﬀer between senders and reﬂect
peculiarities of the user behavior, email client and delivery path, such as par-
ticular header combinations, encoding formats and attachment types. Based on
this observation, we develop a detection method that receives the mailbox of a
user as input and applies machine learning techniques to generate proﬁles for
all senders in the mailbox, even if only a few emails are available. These proﬁles
provide a content-agnostic view on the sender and enable us to spot spoofed
emails as deviations from the learned proﬁles.
We empirically evaluate our approach on a collection of 92 mailboxes from
twelve diﬀerent domains, covering over 700,000 emails from 16,000 senders. We
demonstrate that our method can discriminate thousands of senders in one mail-
box and enables identifying spoofed emails with 90% detection rate and less than
1 false positive in 10,000 emails. Moreover, we can show that the individual
traits of a sender observed at the recipient’s end are hard to guess and spooﬁng
Content-Agnostic Detection of Spear-Phishing Emails
71
Fig. 1. Simpliﬁed email as running example.
attempts only succeed if entire emails of the sender as delivered to the recipient
are known to the adversary. Although our approach cannot generally rule out
spooﬁng due to leaked emails, it considerably raises the bar for targeted attacks
and—in absence of widely deployed server-side solutions—provides an eﬀective
protection for companies and organisations targeted by spear-phishing attacks.
In summary, we make the following contributions:
– Characteristic sender proﬁles: We identify traits which enable us to charac-
terize the sender of an email without relying on textual content. The result-
ing proﬁles are expressive enough to distinguish thousands of senders while
accounting for the diversity of individual emails.
– Detection of spear-phishing emails: We demonstrate how the learned proﬁles
of senders can be used for identifying spoofed emails and help to mitigate the
risk of spear-phishing attacks in absence of stronger server-side solutions in
practice.
– Evaluation and evasion experiments: We evaluate the performance of our
method through a series of increasingly adverse scenarios where the attacker
becomes stronger by obtaining more information about the target and build-
ing a better model of the spoofed sender.
The rest of this paper is organized as follows: In Sect. 2 we present traits
observable in the structure of emails and describe in Sect. 3 how these can be used
to construct proﬁles for senders. We evaluate the resulting detection method in
Sect. 4 and discuss its impact and limitations in Sect. 5. Related work is reviewed
in Sect. 6 and Sect. 7 concludes the paper.
72
H. Gascon et al.
2 Traits in Email Structure
The identiﬁcation of spoofed emails is a challenging problem of network secu-
rity. An attacker can almost arbitrarily manipulate the structure and content of
emails, ranging from a trivially spoofed From ﬁeld to carefully crafted sequences
of fake Received headers (see [30]). In absence of exact detection techniques in
practice, such as DKIM and DMARC, it is thus hard to discriminate legitimate
from forged emails.
The freedom available for constructing a spoofed email, however, may also
turn against the attacker and pose an obstacle. We argue that it is non-trivial
to mimic an email from a particular sender without detailed knowledge and
that minor irregularities in the email structure may provide valuable clues for
identifying spear-phishing attacks. If the attacker has access to emails from a
sender known to the victim, she can simply copy the email structure, yet if this
information is not fully available, she needs to make a good guess and hope that
the forged structure mimics the original communication well.
For uncovering such forgeries, we identify three groups of traits that can
characterize the sender of an email: First, when writing an email the sender
introduces behavior features that reﬂect individual preferences and peculiarities.
Second, the email client generates composition features, identifying the particular
client and its conﬁguration. Third, the delivery of an email leaves transport
features that capture details of the sending and receiving infrastructure. In the
following, we describe these groups of traits in more detail and use the simpliﬁed
email in Fig. 1 as a running example through out this section.
2.1 Behavior Features
When a user writes an email, several of her individual preferences can manifest
in the structure of the email—aside from her writing style and habits [10,33]. For
example, some senders are frequently including recipients using the CC header,
whereas others avoid this and prefer to address all recipients directly using the To
ﬁeld. Similarly, senders diﬀer in the type and amount of ﬁles they are attaching
to emails in conversations. While some of these features are volatile and change
between diﬀerent contexts, other features may persist over time and provide a
ﬁrst basis for constructing a proﬁle of the sender.
For our analysis, we identify 13 feature types that characterize the behavior
of a sender in the structure of an email, including
1. the type, number and order of attachments, for example when multiple doc-
2. the relation to other emails and recipients, for example in form of References
uments are exchanged,
and In-Reply-To headers,
3. digital signatures and certiﬁcates attached to the email as well as correspond-
ing PGP and S/MIME ﬁelds, and
4. the amount of text in the main part and the amount of quoted text in email
responses.
Content-Agnostic Detection of Spear-Phishing Emails
73
A complete list of all 13 features is provided in Table 4 of the appendix. Note
that the cardinality of these features diﬀers, where some may appear multiple
times in an email, such as the type of attachments and others only once, such
as the depth of the MIME structure. As an example, the email in Fig. 1 shows
the attachment of an executable ﬁle (line 20) and the reference to a previous
conversation (line 10)—two features that are rarely used in combination.
2.2 Composition Features
The second source for traits in the structure of an email is the mail user agent
(email client) that converts the provided addresses, text and attachments into a
suitable format for delivery. As emails have been originally restricted to ASCII
characters, there exists a wealth of encoding schemes for converting binary
data to a compatible ASCII representation (e.g. [14,15,23]). These schemes are
selected by the email client and often slightly vary in implementation, thus pro-
viding features that characterize the composition of an email. For example, the
Base64 encoding [23] does not enforce a ﬁxed text length and thus clients diﬀer
in the formatting of the corresponding text blocks. Similarly, there exists several
minor variations in the construction of multi-part MIME messages that provide
clues about the client and its conﬁguration.
For our analysis, we identify 22 feature types that capture peculiarities of
the email client and its conﬁgurations, including
1. the type, order and syntax of common headers, such as the From, To, Subject
and Message-Id headers,
2. the type, order and syntax of headers in MIME parts, including ﬁelds like
Content-Type and Content-Disposition,
3. the syntax of address ﬁelds, such as the formatting and quoting of names and
6. client-speciﬁc behavior, such as the length of line breaks, missing and super-
7. individual details of the MIME structure, such as the depth and the order of
ﬂuous encodings of characters,
diﬀerent MIME parts, and
8. the structure of the Message-Id header and the structure of MIME boundaries.
A complete list of the 22 composition features is provided in Table 5 of the
appendix. While these features alone are clearly not suﬃcient to identify attacks,
in combination with behavior and transport features they sharpen the view on a
sender and thereby obstruct the spooﬁng of email addresses. As an example, the
email in Fig. 1 shows a unique order of the From, To and Subject ﬁeld (line 5–9)
which indicates a rare email client. Furthermore, the Base64-encoded attachment
is formatted using a 60 character line length (line 23).
4. the encoding of international characters in the subject ﬁeld, in address ﬁelds
5. the type and location of textual content, such as HTML and plain parts in
email addresses,
and ﬁlenames,
the email,
74
H. Gascon et al.
2.3 Transport Features
A third group of traits can be attributed to the delivery path of an email. As the
email moves from the sending to the receiving mail transport agent, often pass-
ing multiple hops, diﬀerent headers are added to the structure. These headers
describe the individual mail hops in form of Received headers and provide infor-
mation about available delivery features, such as delivery protocols, TLS or the
time zone of the mail server. These headers and features, again, generate a series
of traits that can help to distinguish diﬀerent senders and spot irregularities in
the delivery process.
Although an attacker can insert fake headers prior to the delivery of an email,
it is not possible to change or remove headers added by hops on the delivery path.
As a consequence, an attacker can only forge these headers by either connecting
directly to the receiving server or, alternatively, attempting to inject emails early
into the delivery process—a tractable but non-trivial task in practice, as it would
require having access to the same delivery infrastructure as the sender that the
attacker is trying to spoof.
We identify 11 transport features that enable us to reconstruct the delivery
path of an email and spot deviations from past emails of the same sender. These
features include
1. the number and order of Received headers, where each hop is represented by
the hash of its hostname,
2. the path of time zone from the ﬁrst to the last hop during the delivery process,
3. the delivery protocols and TLS features available in some Received headers,
4. the validity of DKIM records added by the servers and their relation to the
5. non-standard headers added by spam ﬁlters or anti-virus services during the
claimed sender of the email, and
delivery of the email.
Table 6 in the appendix provides a list of all 11 transport features. As an
example of traits introduced by the delivery process, the email in Fig. 1 con-
tains a detailed Received header (line 2–4). This header deﬁnes the mail hop,
delivery protocol and delivery time. This information is available with any mail
passing the hop and thus can leak to the attacker. However, we show in Sect. 4
that knowledge of transport features alone is insuﬃcient to evade our detection
method and that the attacker needs access to original emails delivered to the
recipient for successfully spooﬁng a sender.
3 Detection Methodology
Equipped with three groups of traits for characterizing the sender of an email, we
are ready to develop a corresponding detection method using machine learning
techniques. The application of learning methods spares us from manually con-
structing detection rules for each of the senders and thereby allows for scaling
our approach to thousands of senders, as we demonstrate in Sect. 4.
Content-Agnostic Detection of Spear-Phishing Emails
75
3.1 Feature Extraction and Embedding
The proposed groups of traits provide detailed information about the structure
of emails from each sender in the recipient’s mailbox. In order to learn a proﬁle
from the traits, however, we require a numerical representation that can be
used in combination with common learning methods. As a remedy, we apply
the concept of a bag-of-words model—a technique originating from information
retrieval [32] and natural language processing [21,22]—and adapt it to the traits
extracted from the structure of emails.
To this end, we represent each of the extracted traits as a feature string and
build a joint set F that comprises all observable strings from the three groups
of traits:
F := Fbehavior ∪ Fcomposition ∪ Ftransport.
Making use of this set F , we deﬁne an |F|-dimensional vector space that
takes values 0 or 1 in each dimension. Each email e is then mapped to this
space by building a vector ϕ(e), such that for each feature f extracted from e
the corresponding dimension is set to 1, while all other dimensions are set to 0.
Formally, this map can be deﬁned for all emails M as
ϕ : M −→ R
|F|, ϕ(e) (cid:4)−→ (If (e))f∈F
where the auxiliary function I simply indicates whether the feature f is present
in e, that is,
(cid:2)
If (e) =
1
0
if email e contains feature f
otherwise.
The resulting binary vector space R
|F| allows us to represent each email as a
vector of the contained traits of its sender. In the following, we describe how we
use this representation to train a machine learning classiﬁer that, based on these
features, is able to assign each email to its corresponding sender and indicate
possibly spoofed emails.
3.2 Model Learning and Classiﬁcation
Several learning methods can be applied for classifying data in a vector space. To
operate in our setting, however, a learning method needs to address additional
requirements: First, the method has to be able to operate in a high-dimensional
vector space, as the set F may cover thousands of diﬀerent traits. Second, the