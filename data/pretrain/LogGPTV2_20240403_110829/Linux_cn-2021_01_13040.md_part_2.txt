*图 1 为由不同编译器编译的每个内核的相对性能。（单线程，越高越好）。*
他的论文总结道：“GNU 编译器在我们的测试中也做得很好。G++ 在六种情况中的三种情况下生成的代码速度是第二快的，并且在编译时间方面是最快的编译器之一。”   [10] 
### 谁在用 GCC?
在 JetBrains 2018 年的开发者生态状况调查中，在接受调查的 6000 名开发者中，66% 的 C++ 程序员和 73% 的 C 程序员经常使用 GCC。   [11]  以下简要介绍 GCC 的优点，正是这些优点使它在开发人员社区中如此受欢迎。
* 对于需要为各种新的和遗留的计算平台和操作环境编写代码的开发人员，GCC 提供了对最广泛的硬件和操作环境的支持。硬件供应商提供的编译器主要侧重于对其产品的支持，而其他开源编译器在所支持的硬件和操作系统方面则受到很大限制。   [12] 
* 有各种各样的基于 GCC 的预构建工具链，这对嵌入式系统开发人员特别有吸引力。这包括 GNU ARM 嵌入式工具链和 Bootlin 网站上提供的 138 个预编译交叉编译器工具链。   [13]  虽然其他开源编译器（如 Clang/LLVM）可以取代现有交叉编译工具链中的 GCC，但这些工具集需要开发者完全重新构建。   [14] 
* GCC 通过成熟的编译器平台向应用程序开发人员提供可靠、稳定的性能。《在 AMD EPYC 平台上用 GCC 8/9 与 LLVM Clang 6/7 编译器基准测试》这篇文章提供了 49 个基准测试的结果，这些测试的编译器在三个优化级别上运行。使用 `-O3 -march=native` 级别的 GCC 8.2 RC1 在 34% 的时间里排在第一位，而在相同的优化级别 LLVM Clang 6.0 在 20% 的时间里赢得了第二位。   [15] 
* GCC 为编译调试    [16]  提供了改进的诊断方法，并为运行时调试提供了准确而有用的信息。GCC 与 GDB 紧密集成，GDB 是一个成熟且功能齐全的工具，它提供“不间断”调试，可以在断点处停止单个线程。
* GCC 是一个得到良好支持的平台，它有一个活跃的、有责任感的社区，支持当前版本和以前的两个版本。由于每年都有发布计划，这为一个版本提供了两年的支持。
### GCC：仍然在继续优化
GCC 作为一个世界级的编译器继续向前发展。GCC 的最新版本是 8.2，于 2018 年 7 月发布（LCTT 译注：本文原文发表于 2018 年），增加了对即将推出的 Intel CPU、更多 ARM CPU 的硬件支持，并提高了 AMD 的 ZEN CPU 的性能。增加了对 C17 的初步支持，同时也对 C++2A 进行了初步工作。诊断功能继续得到增强，包括更好的发射诊断，改进了定位、定位范围和修复提示，特别是在 C++ 前端。Red Hat 的 David Malcolm 在 2018 年 3 月撰写的博客概述了 GCC 8 中的可用性改进。   [17] 
新的硬件平台继续依赖 GCC 工具链进行软件开发，例如 RISC-V，这是一种自由开放的 ISA，机器学习、人工智能（AI）和物联网细分市场都对其感兴趣。GCC 仍然是 Linux 系统持续开发的关键组件。针对 Intel 架构的 Clear Linux 项目是一个为云、客户端和物联网用例构建的新兴发行版，它提供了一个很好的示例，说明如何使用和改进 GCC 编译器技术来提高基于 Linux 的系统的性能和安全性。GCC 还被用于微软 Azure Sphere 的应用程序开发，这是一个基于 Linux 的物联网应用程序操作系统，最初支持基于 ARM 的联发科 MT3620 处理器。在培养下一代程序员方面，GCC 也是树莓派的 Windows 工具链的核心组件，树莓派是一种运行基于 Debian 的 GNU/Linux 的低成本嵌入式板，用于促进学校和发展中国家的基础计算机科学教学。
GCC 由 GNU 项目的创始人 理查德•斯托曼   Richard Stallman 首次发布 于 1987 年 3 月 22 日，由于它是第一个作为自由软件发布的可移植的 ANSI C 优化编译器，因此它被认为是一个重大突破。GCC 由来自世界各地的程序员组成的社区在指导委员会的指导下维护，以确保对项目进行广泛的、有代表性的监督。GCC 的社区方法是它的优势之一，它形成了一个由开发人员和用户组成的庞大而多样化的社区，他们为项目做出了贡献并提供支持。根据 Open Hub 的说法，“GCC 是世界上最大的开源团队之一，在 Open Hub 上的所有项目团队中排名前 2%。”   [18] 
关于 GCC 的许可问题，人们进行了大量的讨论，其中大多数是混淆而不是启发。GCC 在 GNU 通用公共许可证（GPL）版本 3 或更高版本下发布，但运行时库例外。这是一个左版许可，这意味着衍生作品只能在相同的许可条款下分发。GPLv3 旨在保护 GCC，防止其成为专有软件，并要求对 GCC 代码的更改可以自由公开地进行。对于“最终用户”来说，这个编译器与其他编译器完全相同；使用 GCC 对你为自己的代码所选择的任何许可都没有区别。   [19] 
---
1.  [↩︎](#fnref1)
2.  [↩︎](#fnref2)
3. 由 SUSE 基于最近的构建统计提供的信息。在 openSUSE 中还有其他不生成可执行镜像的源码包，这些不包括在统计中。 [↩︎](#fnref3)
4.  [↩︎](#fnref4)
5.  [↩︎](#fnref5)
6.  [↩︎](#fnref6)
7.  [↩︎](#fnref7)
8.  [↩︎](#fnref8)
9.  [↩︎](#fnref9)
10.  [↩︎](#fnref10)
11.  [↩︎](#fnref11)
12.  [↩︎](#fnref12)
13.  [↩︎](#fnref13)
14.  [↩︎](#fnref14)
15.  [↩︎](#fnref15)
16.  [↩︎](#fnref16)
17.  [↩︎](#fnref17)
18.  [↩︎](#fnref18)
19.  [↩︎](#fnref19)
---
via: 
作者：[Margaret Lewis](https://www.linux.com/users/margaret-lewis) 选题：[lujun9972](https://github.com/lujun9972) 译者：[Chao-zhi](https://github.com/Chao-zhi) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出