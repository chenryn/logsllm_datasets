后系统就会开始等待你的登陆与操作啦！简单来说，系统开机的经过可以汇整成下面的流程的：
1. 载入 BIOS 的硬件信息与进行自我测试，并依据设置取得第一个可开机的设备；
2. 读取并执行第一个开机设备内 MBR 的 boot Loader （亦即是 grub2, spfdisk 等程序）；
3. 依据 boot loader 的设置载入 Kernel ，Kernel 会开始侦测硬件与载入驱动程序；
4. 在硬件驱动成功后，Kernel 会主动调用 systemd 程序，并以 default.target 流程开机；
systemd 执行 sysinit.target 初始化系统及 basic.target 准备操作系统；
systemd 启动 multi-user.target 下的本机与服务器服务；
systemd 执行 multi-user.target 下的 /etc/rc.d/rc.local 文件；
systemd 执行 multi-user.target 下的 getty.target 及登陆服务；
systemd 执行 graphical 需要的服务
大概的流程就是上面写的那个样子啦，你会发现 systemd 这个家伙占的比重非常重！ 所以我们才会在第十六章的 pstree 指令中谈到这
家伙。 那每一个程序的内容主要是在干嘛呢？下面就分别来谈一谈吧！
我们在第二章曾经谈过简单的开机流程与 MBR 的功能，以及大容量磁盘需要使用的 GPT 分区表格式等。 详细的数据请再次回到第二
章好好的阅读一下，我们这里为了讲解方便起见，将后续会用到的专有名词先做个综合解释：
BIOS：不论传统 BIOS 还是 UEFI BIOS 都会被简称为 BIOS；
MBR：虽然分区表有传统 MBR 以及新式 GPT，不过 GPT 也有保留一块相容 MBR 的区块，因此，下面的说明在安装 boot loader 的部
份， 鸟哥还是简称为 MBR 喔！总之，MBR 就代表该磁盘的最前面可安装 boot loader 的那个区块就对了！
BIOS, 开开机机自自我我测测试试与与 MBR/GPT
我们在第零章的计算机概论就曾谈过计算机主机架构， 在个人计算机架构下，你想要启动整部系统首先就得要让系统去载入 BIOS
（Basic Input Output System），并通过 BIOS 程序去载入 CMOS 的信息，并且借由 CMOS 内的设置值取得主机的各项硬件设置， 例如 CPU
与周边设备的沟通频率啊、开机设备的搜寻顺序啊、硬盘的大小与类型啊、 系统时间啊、各周边总线的是否启动 Plug and Play （PnP, 随插即
用设备） 啊、 各周边设备的 I/O 位址啊、以及与 CPU 沟通的 IRQ 岔断等等的信息。
在取得这些信息后，BIOS 还会进行开机自我测试 （Power-on Self Test, POST） [1]。 然后开始执行硬件侦测的初始化，并设置 PnP 设
备，之后再定义出可开机的设备顺序，接下来就会开始进行开机设备的数据读取了。
由于我们的系统软件大多放置到硬盘中嘛！所以 BIOS 会指定开机的设备好让我们可以读取磁盘中的操作系统核心文件。 但由于不同的
操作系统他的文件系统格式不相同，因此我们必须要以一个开机管理程序来处理核心文件载入 （load） 的问题， 因此这个开机管理程序就被
称为 Boot Loader 了。那这个 Boot Loader 程序安装在哪里呢？就在开机设备的第一个扇区 （sector） 内，也就是我们一直谈到的 MBR
（Master Boot Record, 主要开机记录区）。
那你会不会觉得很奇怪啊？既然核心文件需要 loader 来读取，那每个操作系统的 loader 都不相同， 这样的话 BIOS 又是如何读取 MBR
内的 loader 呢？很有趣的问题吧！其实 BIOS 是通过硬件的 INT 13 中断功能来读取 MBR 的，也就是说，只要 BIOS 能够侦测的到你的磁盘
（不论该磁盘是 SATA 还是 SAS 接口），那他就有办法通过 INT 13 这条信道来读取该磁盘的第一个扇区内的 MBR 软件啦！[2]这样 boot
loader 也就能够被执行啰！
Tips
我们知道每颗硬盘的最前面区块含有 MBR 或 GPT 分区表的提供 loader 的区块，那么如果我的主机上面有两颗硬盘的话， 系统会去哪颗硬盘
的最前面区块读取 boot loader 呢？这个就得要看 BIOS 的设置了。 基本上，我们常常讲的“系统的 MBR”其实指的是 第第一一个个开开机机设设备备的的 MMBBRR 才
对！ 所以，改天如果你要将开机管理程序安装到某颗硬盘的 MBR 时， 要特别注意当时系统的“第一个开机设备”是哪个，否则会安装到错误的硬盘上面的
MBR 喔！重要重要！
Boot Loader 的的功功能能
刚刚说到 Loader 的最主要功能是要认识操作系统的文件格式并据以载入核心到内存中去执行。 由于不同操作系统的文件格式不一致，
因此每种操作系统都有自己的 boot loader 啦！用自己的 loader 才有办法载入核心文件嘛！那问题就来啦，你应该有听说过多重操作系统吧？
也就是在一部主机上面安装多种不同的操作系统。 既然你 （1）必须要使用自己的 loader 才能够载入属于自己的操作系统核心，而 （2）系统
的 MBR 只有一个，那你怎么会有办法同时在一部主机上面安装 Windows 与 Linux 呢？
这就得要回到第七章的磁盘文件系统去回忆一下文件系统功能了。 其实每个文件系统 （filesystem, 或者是 partition） 都会保留一块开
机扇区 （boot sector） 提供操作系统安装 boot loader ， 而通常操作系统默认都会安装一份 loader 到他根目录所在的文件系统的 boot sector
上。如果我们在一部主机上面安装 Windows 与 Linux 后，该 boot sector, boot loader 与 MBR 的相关性会有点像下图：
图19.1.1、boot loader 安装在 MBR, boot sector 与操作系统的关系
如上图所示，每个操作系统默认是会安装一套 boot loader 到他自己的文件系统中 （就是每个 filesystem 左下角的方框），而在 Linux 系
统安装时，你可以选择将 boot loader 安装到 MBR 去，也可以选择不安装。 如果选择安装到 MBR 的话，那理论上你在 MBR 与 boot sector 都
会保有一份 boot loader 程序的。 至于 Windows 安装时，他默认会主动的将 MBR 与 boot sector 都装上一份 boot loader！所以啦， 你会发现
安装多重操作系统时，你的 MBR 常常会被不同的操作系统的 boot loader 所覆盖啦！ ^_^
我们刚刚提到的两个问题还是没有解决啊！虽然各个操作系统都可以安装一份 boot loader 到他们的 boot sector 中， 这样操作系统可以
通过自己的 boot loader 来载入核心了。问题是系统的 MBR 只有一个哩！ 你要怎么执行 boot sector 里面的 loader 啊？这个我们得要回忆一
下第二章约略提过的 boot loader 的功能了。boot loader 主要的功能如下：
提提供供菜菜单单：使用者可以选择不同的开机项目，这也是多重开机的重要功能！
载载入入核核心心文文件件：直接指向可开机的程序区段来开始操作系统；
转转交交其其他他 loader：将开机管理功能转交给其他 loader 负责。
由于具有菜单功能，因此我们可以选择不同的核心来开机。而由于具有控制权转交的功能，因此我们可以载入其他 boot sector 内的
loader 啦！不过 Windows 的 loader 默认不具有控制权转交的功能，因此你不能使用 Windows 的 loader 来载入 Linux 的 loader 喔！这也是为
啥第二章谈到 MBR 与多重开机时，会特别强调先装 Windows 再装 Linux 的缘故。 我们将上述的三个功能以下面的图示来解释你就看的懂了！
（与第二章的图示也非常类似啦！）
图19.1.2、开机管理程序的菜单功能与控制权转交功能示意图
如上图所示，我的 MBR 使用 Linux 的 grub2 这个开机管理程序，并且里面假设已经有了三个菜单， 第一个菜单可以直接指向 Linux 的
核心文件并且直接载入核心来开机；第二个菜单可以将开机管理程控权交给 Windows 来管理，此时 Windows 的 loader 会接管开机流程，这个
时候他就能够启动 windows 了。第三个菜单则是使用 Linux 在 boot sector 内的开机管理程序，此时就会跳出另一个 grub2 的菜单啦！了解了
吗？
菜单一：MBR（grub2） --> kernel file --> booting
菜单二：MBR（grub2） --> boot sector（Windows loader） --> Windows kernel --> booting
菜单三：MBR（grub2） --> boot sector（grub2） --> kernel file --> booting
而最终 boot loader 的功能就是“载入 kernel 文件”啦！
载载入入核核心心侦侦测测硬硬件件与与 initramfs 的的功功能能
当我们借由 boot loader 的管理而开始读取核心文件后，接下来， Linux 就会将核心解压缩到内存当中， 并且利用核心的功能，开始测
试与驱动各个周边设备，包括储存设备、CPU、网卡、声卡等等。 此时 Linux 核心会以自己的功能重新侦测一次硬件，而不一定会使用 BIOS
侦测到的硬件信息喔！也就是说，核心此时才开始接管 BIOS 后的工作了。 那么核心文件在哪里啊？一般来说，他会被放置到 /boot 里面，并
且取名为 /boot/vmlinuz 才对！
[root@study ~]# ls --format=single-column -F /boot
config-3.10.0-229.el7.x86_64  usr/lib/systemd/systemd
.....（中间省略）.....
drwxr-xr-x 2 root root 0 May 4 17:56 var/lib/lldpad