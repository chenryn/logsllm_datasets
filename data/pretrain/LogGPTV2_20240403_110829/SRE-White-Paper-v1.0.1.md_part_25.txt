做深度的 SLO 数据展示。可以分为多个仪表盘，每个仪表盘再按照
VELA维度展示该功能所有 SLI指标。达到效果：每个 SLI的实时数
据、可自定义时间范围展示 SLI 指标的曲线及具体值。更聚焦在某
个场景或某个 SLI的深度展示和分析。例如：某业务登录场景的 VIP
延迟、鉴权成功率、用户信息拉取延迟等登录场景核心链路的 SLO
详情展示。大多用于故障定位，排查问题。
⽹址：SRE-Elite.com 17 1 微信：SRE精英联盟
SRE实践白皮书（2023年）
（2）业务整体视角的展示。从业务的角度，展示多个 SLI 的
SLO 数据，将多个功能的 SLO 指标汇总在一起展示。达到效果：通
过该仪表盘查看各个功能过去不同时间维度的 SLO，用于判断各个
功能的稳定性（slo）； 当某 S个LO 低于我们预期时，可以定位到具
体影响的 SLI 指标（slo_error_time_info、slo_error_time）；各个 功 能
的告警发生频率（mtbf）；各个 功 能的 告警 恢复 时mt间tr）（。 例如 ：
某业务的登录、支付、上传、浏览、语音等核心功能的 SLO 整体展
示。大多用于单业务稳定性评估。
（3）多业务整体视角的展示。从整个公司或集团的更高的视角
展示多业务的 SLO数据，将公司或集团主要业务模块 SLI和 SLO定
义清晰，并展示在一个大屏上。例如：公司所有业务登录成功率、
公司所有业务信息发送成功率、所有业务添加购物车成功率等。用
于评估整体技术中台能力，整体服务质量。
整个 SLI/SLO 的展示，从微观业务场景细节，到宏观业务基本
状况，根据不同的使用场景，不同的用户需求，可以拆分为不同展
示模式，汇总不同量级的数据，灵活展示。
3.6.7.3 如何持续迭代 SLI/SLO
SLO 出来后，可以用实际值和之前的预期做比对，分为以下 2
种情况
1．实际 SLO  预期 SLO。比如实际值为 99%，预期为 95%
 SLI 覆盖率低：确定关键链路 SLI 是否梳理完整，如果有
缺失，则补齐，先提高 SLI在关键路径的覆盖率
 SLO 预期太低：这么导致我们对用户体验的衡量不够准
确，可能会出现用户体验很糟糕，但是我们SLO数据一切正
常，导致与我们目的背道而驰。此时正确的措施应该是收紧
SLO，提高预期
3．SLO迭代小结
从上面的分析来看，迭代 SLO主要分为 2大类：实际 SLO  预期 SLO。
实际 SLO  预期 SLO：实际的 SLO比预想的要好，我们可以分
析是之前的目标设置的低了，还是我们投入了超过预期的成本。如
果这个服务不需要这么高的 SLO，而我们也需要降低一些成本，那
么可以适当放宽 SLO。
对于 SLO的持续迭代，可以从下 5个步骤执行：
 SLI质量优化
 SLI覆盖率提升
 架构调整
 部署优化
 放宽或收紧 SLO
3.6.8 持续改进
3.6.8.1 效率持续改进
效率的改进可以分为两类：
1．SRE个体工作效率的改进与衡量
一般情况下来说，某项具体工作效率的改进得益于某个具体的
人的技术水平或者某项新技术的诞生对工作产生了效率上积极的影
响。从持续改进的角度来说，我们需要关注的是：
1）员工个人能力的培养
具有某方面技术优势的员工重点培养，给于更多空间和尝试机
会。
⽹址：SRE-Elite.com 17 4 微信：SRE精英联盟
SRE实践白皮书（2023年）
2）新技术的关注与应用
鼓励用新技术解决老问题，在安全可靠的范围内测试新技术的
稳定性，尝试新技术落地。
对于某项具体 SRE 工作效率改进效果的衡量主要是从时间角
度，当然需要考虑“整体”时间这个概念。例如：
某项工作原来的执行时间是 10 分钟，新方法改进后为 8 分钟，
效率提升 20%。但是新方法在执行前需要用 3 分钟时间来做准备工
作，整体时间为 11 分钟，实际效率提升为-10%。所以衡量需要考虑
整个改进对于原有工作所有的改变和影响。
2．SRE团队整体工作效率的改进与衡量
团队整体效率的提升需要用更宏观的视角和更长的时间跨度来
看待，主要以半年或者一年为周期看待某一类工作是否产生了积极
的影响。从持续改进的角度来说，我们需要关注的是：
1）某一类工作的人力投入是否持续降低
对所有的发布变更类工作进行至少半年以上的人力投入统计，
评估人力成本投入是上升趋势还是下降趋势，并分析原因。呈上升
趋势的，找到人力投入持续上升的原因，并及时解决。呈下降趋势
的，找到是因为做了什么优化而导致的人力投入下降，继续强化去
做。
2）整个团队维持在同等配备的情况下是否可以接手更多活更大
的服务
评估整个团队解决目前所有的工作所使用的解决方案有哪些，
⽹址：SRE-Elite.com 17 5 微信：SRE精英联盟
SRE实践白皮书（2023年）
是否具有通用性。团队输出通用性方案的能力越强，这个团队保持
配备不变的情况下，接手更多更大服务的能力越强，团队整体服务
能力越强。
3.6.8.2 质量持续改进
质量的持续改进，一般是指 SRE 团队所提供的服务质量，这部
分工作的持续改进大致可以分成两部分：
1．服务质量的衡量
衡量服务质量的方法很多，例如：故障分级制度、满意度调
查、平均无故障时间、SLO等。
故障分级和满意度调查，可以了解当前服务质量状况。
平均无故障时间或平均故障间隔时间（ MTBF），可用于持续的
改进衡量标准。因为我们可以希望这个时间尽可能的长，说明我们
的服务一直处于无故障状态，即服务质量一直达标。
在平均无故障时间（ MTBF）的概念下，还可以进一步细计
算：平均故障恢复时间（MTTR）。
平均故障恢复时间（MTTR）又可以继续被细分为：
 MTTI，平均故障发现时间
 MTTK，平均故障定位时间
 MTTF，平均故障解决时间
 MTTV，平均故障修复验证时间
以上都可以作为非常细致的服务质量持续改进的衡量指标。
这种衡量方法，不足的地方在于，他可以衡量那种引发了故障
⽹址：SRE-Elite.com 17 6 微信：SRE精英联盟
SRE实践白皮书（2023年）
的情况非常好用，清晰且可衡量。但是，对于没有引发故障，但是
用户的实际体验却实实在在受到影响的情况就不好衡量了，这时候
我们可以用到 SLO这个指标。
SLO 可以根据服务不同等级相对稳定在某个值，我们需要关注
的是 SLO 有没有下降趋势。如果有下降趋势，那么具体是哪些微小
的因素影响了用户体验？对于提升用户体验方面可以参考3.6.1。
2．服务质量的复盘
服务质量的复盘，包含对优秀案例的复盘和故障案例的复盘。
优秀案例的复盘，重点关注：
 我们具体做了哪些工作导致服务质量提升？
 为什么这样做可以提升服务质量？
 我们如何把这种方法复制到其他服务质量的提升？
故障案例的复盘，请参考 3.5.4。
3.6.8.3 安全持续改进
一次安全事件的发生很可能将其他的所有工作都归零，安全的
持续改进，也可以理解为是安全预防工作的持续改进，如何持续的
预防安全事件的发生。
安全的持续改进可以从如下几个方面着手：
1．默认安全规则
默认安全规则，即要求 SRE 团队在所有服务上需要做到的最低
安全规范。
例如：禁止 SSH服务对公网开放、在服务器上开放类似 VPN的
⽹址：SRE-Elite.com 17 7 微信：SRE精英联盟
SRE实践白皮书（2023年）
功能、安装未经安全评估的开源软件等。
2．安全意识
所有人员应当定期参加安全培训，提升安全意识。不仅仅是
SRE 团队，更应该包含产品运营团队和开发团队，落实是“人人都
是安全责任人”的概念。
3．研发期安全预防
践行 DevSecOps 理念，把安全能力无缝且柔和的嵌入到研发过
程，在产品研发过程就加强安全能力的建设，预防安全事件发生。
例如：定时向研发团队强调默认安全规则，介绍经过评审的开源软
件，推送具有安全风险的开源软件，介绍安全的系统架构设计原则
等等。
4．运营期安全预防
运营期的安全预防机制，是常态化进行巡检，输出安全报告或
安全工单。例如：高危端口扫描、高危服务扫描、入侵检测系统接
入扫描、具有安全漏洞的开源软件扫描、密码泄露扫描、内外部代
码扫描、安全补丁未更新扫描等。
5．评审机制