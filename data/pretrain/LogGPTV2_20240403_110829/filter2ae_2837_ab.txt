  * [MXToolBox - Blacklists](https://mxtoolbox.com/blacklists.aspx)
## 三、网络钓鱼设置
### 3.1 基于 Web 的钓鱼
简单操作和网络钓鱼似乎不可同时兼得，建立一个适当的网络钓鱼基础设施可能是一个非常痛苦的事。
这里将为你提供快速设置一个钓鱼服务器的知识和工具，该服务器可以绕过大多数垃圾邮件过滤器，并为你提供一个简单的网络钓鱼体验，包括与你的目标进行双向通信的`RoundCube`界面。
网上有很多设置网络钓鱼的方法，这里只是其中的一种。
一旦你的域名通过了上面的设置与检查，并且你的钓鱼服务器已启动，那么首先你需要为你的域名创建一条“A”记录，如图所示。
接下来，进入你的钓鱼服务器并确保你的`/etc/hosts`中列出了正确的`FQDN`主机名。 示例: `127.0.0.1
mail.yourphishingserver.com mail localhost`
现在，你只需几个简单的步骤即可安装网络前端来进行网络钓鱼。首先下载[iRedMail](http://www.iredmail.org/download.html)的最新版本到你的钓鱼服务器上，并解压`tar
-xvf iRedMail-0.9.8.tar.bz2`。进入到解压后的文件夹，并为`iRedMail.sh`脚本添加可执行权限（`chmod +x
iRedMail.sh`）以`root`用户身份执行脚本，按照提示操作，然后重新启动服务器。
你需要确保你的邮件服务器拥有所有正确的`DNS`记录（相关记录设置请参考）。对于
DKIM（DomainKeys Identified Mail，域名密钥识别邮件）使用命令`amavisd-new
showkeys`来列出你的`DKIM`密钥。
_（上图为译者提供）_
对于`DMARC`(Domain-based Message Authentication Reporting and Conformance,
基于域的消息认证报告一致性)我们可以使用在线生成我们的`DMARC`条目。
现在，创建一个用户进行钓鱼。
登录到`RoundCube`界面, 使用新用户开始钓鱼吧！
### 3.2 Cobalt Strike 钓鱼
`Cobalt Strike`提供可自定义的钓鱼功能来帮助`Pentest(渗透测试)`和红队。它支持 HTML
和纯文本(plaintext)格式的模板、附件、反弹地址、URL 嵌入、使用远程 SMTP 服务器以及每条消息延迟发送。你还可以为每个用户嵌入的 URL
添加唯一标记以进行点击跟踪。
有关更多详细信息，请查看以下资源：
  * [Cobalt Strike - Spear Phishing documentation](https://www.cobaltstrike.com/help-spear-phish)
  * [Cobalt Strike Blog - What's the go-to phishing technique or exploit?](https://blog.cobaltstrike.com/2014/12/17/whats-the-go-to-phishing-technique-or-exploit/)
  * [Spear phishing with Cobalt Strike - Raphael Mudge](https://www.youtube.com/watch?v=V7UJjVcq2Ao)
  * [Advanced Threat Tactics (3 of 9) - Targeted Attacks - Raphael Mudge](https://www.youtube.com/watch?v=CxQfWtqpwRs)
### 3.3 网络钓鱼框架
除了搭建自己的网络钓鱼服务外，还有许多像`Cobalt
Strike`这种专用于电子邮件钓鱼的工具和框架。这篇文章不会详细介绍每个框架，但下面提供了一些参考资料：
#### 3.3.1 Gophish
  * [Gophish Official Site](https://getgophish.com/)
  * [Gophish GitHub Repo](https://github.com/gophish/gophish)
  * [Gophish User Guide](https://www.gitbook.com/book/gophish/user-guide/details)
#### 3.3.2 Frenzy
  * [Phishing Frenzy Official Site](https://www.phishingfrenzy.com/)
  * [Phishing Frenzy GitHub Repo](https://github.com/pentestgeek/phishing-frenzy)
  * [Introducing Phishing Frenzy - Brandon McCann (@zeknox)](https://www.pentestgeek.com/phishing/introducing-phishing-frenzy)
#### 3.3.3 Social-Engineer 工具包
  * [The Social-Engineer Toolkit GitHub Repo](https://github.com/trustedsec/social-engineer-toolkit)
  * [The Social-Engineer Toolkit User Manual](https://github.com/trustedsec/social-engineer-toolkit/raw/master/readme/User_Manual.pdf)
#### 3.3.4 FiercePhish (formerly FirePhish)
  * [FiercePhish GitHub Repo](https://github.com/Raikia/FiercePhish)
  * [FiercePhish Wiki](https://github.com/Raikia/FiercePhish/wiki)
## 四、转向器
### 4.1 SMTP 协议
“转向器(Redirector)”可能不是描述我们要实现此功能的最佳词语，但其目的与我们使用的其他重定向功能相同。
我们希望从最终的电子邮件头中删除钓鱼邮件的所有痕迹，并在受害者与我们的后端服务器之间提供缓冲区。 理想情况下`SMTP`转向器安装快速并易于停止。
**我们想要配置`SMTP`转向器来执行两个关键操作：**
#### 4.1.1 Sendmail 软件
##### 移除之前的服务器头
将以下行添加到结尾 `/etc/mail/sendmail.mc`:
    define(`confRECEIVED_HEADER',`by $j ($v/$Z)$?r with $r$. id $i; $b')dnl
添加到结尾 `/etc/mail/access`:
    IP-to-Team-Server *TAB* RELAY
    Phish-Domain *TAB* RELAY
[Removing Sender’s IP Address From Email’s Received From
Header](https://www.devside.net/wamp-server/removing-senders-ip-address-from-emails-received-from-header)
[Removing Headers from Postfix setup](https://major.io/2013/04/14/remove-sensitive-information-from-email-headers-with-postfix/)
##### 配置一个通用地址
这会将会把收到的任何电子邮件转发到`*@phishdomain.com`到选定的电子邮件地址。这对于收到任何响应或反弹到钓鱼邮件非常有用。
    echo PHISH-DOMAIN >> /etc/mail/local-host-names
在`/etc/mail/sendmail.mc`的`//Mailer Definitions//`（结尾处）之前添加以下行：
    FEATURE(`virtusertable', `hash -o /etc/mail/virtusertable.db')dnl
将以下行添加到`/etc/mail/virtusertable`结尾:
    @phishdomain.com  external-relay-address
_注意：这两个字段应该以制表符(\t)分隔_
#### 4.1.2 Postfix 软件
`Postfix`提供了一个更容易替代`Sendmail`而且提供了更好的兼容性。
`Postfix`还为`Dovecot`提供全面的`IMAP`支持。这使得测试人员能够实时地与对原始消息做出响应的钓鱼攻击目标相对应，而不是依靠全部通讯地址，并且必须使用钓鱼工具创建新消息。
Julian
Catrambone's([@n0pe_sled](https://twitter.com/n0pe_sled))提供了一个设置`Postfix`邮件服务器进行网络钓鱼的完整指南[Mail
Servers Made Easy](https://blog.inspired-sec.com/archive/2017/02/14/Mail-Server-Setup.html)。
### 4.2 DNS 协议
注意：使用 C2 转向器时，应在你的后渗透框架中配置外部侦听器，以通过转向器域发送分段流量。 这会使受感染的主机像 C2 流量本身一样分段通过转向器。
#### 4.2.1 socat 之 DNS
`socat`可用于将端口 53 上的传入`DNS`数据包重定向到我们的团队服务器, 此方法很有效。目前，某些用户已为 `Cobalt Strike`
提出了这个功能issues需求。
由于来自 @xorrior 的测试，以下 socat 命令似乎很好用：
    socat udp4-recvfrom:53,reuseaddr,fork udp4-sendto:; echo -ne
[Redirecting Cobalt Strike DNS Beacons - Steve
Borosh](http://www.rvrsh3ll.net/blog/offensive/redirecting-cobalt-strike-dns-beacons/)
#### 4.2.2 iptables 之 DNS
`iptables`转发`DNS`规则已被发现可与`Cobalt Strike`配合使用。 貌似`socat`暂时还处理不了这类流量的问题(NAT穿透)。
下面是一个`DNS`转向器规则集示例:
    iptables -I INPUT -p udp -m udp --dport 53 -j ACCEPT
    iptables -t nat -A PREROUTING -p udp --dport 53 -j DNAT --to-destination :53
    iptables -t nat -A POSTROUTING -j MASQUERADE
    iptables -I FORWARD -j ACCEPT
    iptables -P FORWARD ACCEPT
    sysctl net.ipv4.ip_forward=1
另外，将“FORWARD”链策略更改为“ACCEPT”。
#### DNS重定向也可以在NAT后面完成
有时候可能需要在内部网络上托管`C2`服务器。 使用`iptables`、`socat`和反向`SSH`隧道的组合，我们可以通过以下方式实现这一点。
在这种情况下，我们使用`iptables`转发所有`DNS`流量。
接下来，我们创建一个从我们的内部`C2`服务器到我们的主转向器的`SSH`反向端口转发隧道。 这会将主转向器在端口 6667 上接收的任何流量转发到端口
6667 上的内部`C2`服务器。现在，启动服务器上的`socat`将端口 6667 上的任何传入TCP流量分流到 UDP 端口 53 ，这就是我们的
DNS C2 需要监听。 最后，我们在主转向器上同样设置一个`socat`实例，将任何传入的 UDP 端口 53 流量重定向到端口 6667
上的SSH隧道。
### 4.3 HTTP(S) 协议
#### 4.3.1 socat 与 mod_rewrite
`socat`提供了`dumb
pipe`重定向，在指定的源接口/port上接收到的任何请求都会被重定向到目标IP/port，但`socat`没有过滤或设置条件的功能。
`Apache`的`mod_rewrite`模块提供了许多方法来加强钓鱼攻击并增强测试基础架构的弹性。
`mod_rewrite`能够根据请求属性（如URI、User-Agent、请求参数、操作系统和IP）执行条件重定向。`Apache`的`mod_rewrite`使用`htaccess`文件来配置`Apache`应该如何处理每个传入请求的规则集。
例如:使用这些规则，你可以使用默认`wget`的`User-Agent`请求重定向到你的服务器，从而将其转到目标网站上的合法页面。
简而言之，如果你的转向器(redirector)需要执行条件重定向或高级过滤，请使用`Apache`的`mod_rewrite`。
也可使用`socat`重定向并`iptables`过滤。
#### 4.3.2 socat 之 HTTP
`socat`可用于将指定端口上的任何传入 TCP 数据包重定向到你的服务器。将`localhost`上的 TCP 端口 80 重定向到另一台主机上的端口
80 的基本语法是：
    socat TCP4-LISTEN:80,fork TCP4::80
如果你的转向器配置了多个网络接口，则可以使用以下语法通过IP地址将`socat`绑定到特定接口：
    socat TCP4-LISTEN:80,bind=10.0.0.2,fork TCP4:1.2.3.4:80
在本例中`10.0.0.2`是转向器的本地 IP 中的一个，`1.2.3.4`是远程组服务器的 IP 地址。
#### 4.3.3 iptables 之 HTTP