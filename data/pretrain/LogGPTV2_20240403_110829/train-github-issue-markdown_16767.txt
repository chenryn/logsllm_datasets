I am encountering incorrect numerical results when using the `sph_harm` function from `scipy.special` in version 0.16.0, which is included with Miniconda3. Specifically, the real component of the results is inaccurate, and the imaginary component is consistently near underflow.

### Environment Details
- **Python 3.4.3** (Miniconda3)
  - IPython: 4.0.0
  - Scipy: 0.16.0 (np110py34_1)

```python
In [1]: from scipy.special import sph_harm

In [2]: sph_harm(2, 5, 0.2, 0.5)
Out[2]: (0.44798449902914189 + 3.1149082468549677e-310j)
```

- **Python 2.7.10** (Miniconda)
  - IPython: 4.0.0
  - Scipy: 0.16.0 (np19py27_1)

```python
In [1]: from scipy.special import sph_harm

In [2]: sph_harm(2, 5, 0.2, 0.5)
Out[2]: (0.41262104797366594 + 0.17445338099189969j)
```

### Conda List Output
For Miniconda3:
- `scipy 0.16.0 np110py34_1`

For Miniconda (Python 2.7):
- `scipy 0.16.0 np19py27_1`

Note: I have not updated the `scipy` version for Python 2.7 in some time.

### Summary
The `sph_harm` function in `scipy 0.16.0` for Python 3.4.3 (Miniconda3) produces incorrect results, while the same function in Python 2.7.10 (Miniconda) works as expected. The real component is off, and the imaginary component is near underflow in the Python 3.4.3 environment.