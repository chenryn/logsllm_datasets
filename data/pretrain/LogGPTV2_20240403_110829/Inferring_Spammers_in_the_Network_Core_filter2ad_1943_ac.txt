 40
 30
 20
 10
 0
Top    5 servers
Top  10 servers
All 320 Servers
 5e+06
 4e+06
 3e+06
 2e+06
 1e+06
r
e
d
n
e
s
l
i
a
m
e
f
o
r
e
b
m
u
N
 1
 10
Visible on x email servers
 0
 100
Fig. 7. Server acceptance ratios vs. trafﬁc volume
Fig. 8. Visibility of the email senders
o
i
t
a
r
e
c
n
a
t
p
e
c
c
A
 1
 0.8
 0.6
 0.4
 0.2
 0
Original
Rejected on 10 servers
Rejected on 5 servers
Rejected on 1 server
Fig. 9. Improvement potential when using collaborative ﬁltering
We conclude that differences in acceptance ratio are mainly due to conﬁguration
issues and that there is a large group of servers that might need a wake-up call or could
proﬁt from the expertise of other servers.
4.2 Collaborative Filtering
Given the above observations of unbalanced mail server performance, what could an
ISP do to improve overall pre-ﬁltering performance in its network? Surely, the ISP could
contact individual administrators and organize a meeting to present the statistics about
mail server performance where administrators would exchange their knowhow. How-
ever, this requires a lot of organizational effort, needs to take place regularly, and at-
tendance of administrators is not guaranteed. Furthermore, educating customers’ email
administrators is usually not the ISP’s business.
Therefore we investigate a passive way enabling all servers to proﬁt from the local
knowledge and the best existing anti-spam techniques already present in some servers
in the network. By accepting more or less emails from a client, email servers actu-
ally perform an implicit rating of the very client. With our method, these ratings could
be extracted from trafﬁc and used to build a collaborative ﬁltering system (CFS), or
more properly, a collaborative rating/reputation system. The system would recommend
accepting/rejecting mails from a client, based on the behavior of the collective of all
servers: “This host was rejected by 80% of the servers in the network. Probably you
should reject it as well.”
It is important to note that the added value of the collected information depends on
the ability of different servers to block different ﬂows: heterogeneous knowledge or
236
D. Schatzmann, M. Burkhart, and T. Spyropoulos
heterogeneous pre-ﬁltering detection techniques and policies are desirable since this
increases the chance that at least some methods will detect the spammer.
At the same time, a signiﬁcant overlap of the sets of email senders visible to each
server is needed, in order to achieve useful and trusted enough ratings. We analyzed
the visibility of the sending hosts on three sets of top 5, top 10 and all internal servers
(see Fig. 8). More than 5.5 million email senders are visible on the 320 internal servers.
Moreover, 72% of all email senders are visible on at least two internal servers. This
means that for 72% of the email senders a second option from another server is avail-
able. Note that even the top 5 email servers only see 61% of the sending hosts. In
addition, only 6% of the email senders are visible on all of these ﬁve servers. This
percentage is increased to 17% for the top 10 servers. By using information from all
internal servers, 42% of the sending hosts are visible on at least 5 different servers,
which is a promising foundation for building a CFS. In addition we explicitly analyzed
the visibility of hosts that are listed in a black- or whitelist. The visibility of blacklisted
hosts follows the overall host visibility. However, the visibility of whitelisted hosts is
even better (e.g., 60% of the whitelisted hosts are visible on at least 5 different servers).
The actual implementation of a CFS is beyond the scope of this paper. Nevertheless,
we are interested here in estimating the potential of such a system by simulating simple
ﬁlter rules. Speciﬁcally, we simulated an online version of the system where blocklists
are created as incoming ﬂows are parsed according to some simple rules. Speciﬁcally,
counters are maintained for senders that have been consistently blocked with the fol-
lowing 3 rules:4 As soon as a sender’s connections have been blocked by at least 10,
5 or 1 server(s), respectively, the sender is entered into our blocklist. Then, if a sender
is on the list all incoming connections by this sender will be counted as rejected. The
resulting acceptance ratios assuming all servers are using the CFS are shown in Fig 9.
There is an inherent tradeoff in the number of server “votes” used to make a deci-
sion. By requiring many rejecting servers (e.g., 10) for membership in the blocklist,
the reliability of the ﬁltering becomes quite strong (only 3 blocked hosts were actually
whitelisted). Yet, the size of the blocklist is reduced, and provides less additional infor-
mation than blacklists. Speciﬁcally, in the 10 server case, the blocklist has 83% overlap
with the Spamhaus blacklist and could be used to block 47% of all SMTP sessions. In
the other extreme, if only one rejecting server is required to be put on the blocklist,
acceptance ratios of all servers are dramatically reduced. Further, the blocklist overlap
with Spamhaus is only 70% and could be used to block up to 95% of all SMTP con-
nections. However, 185 members were whitelisted. That is, requiring only one rejecting
server introduces a higher false rejection rate. Nevertheless, it is important to note that
in both cases, a signiﬁcant amount of hosts identiﬁed by this method are not found in the
blacklist, underlining the collaborative nature of the system, and implying that simply
making under-performing servers use a blacklist, would not sufﬁce.
Concluding, our estimation shows that there is a signiﬁcant information overlap that
can be leveraged to improve overall pre-ﬁltering by making local server information
accessible to the entire network, in an almost seamless manner. Today, pre-ﬁltering is
dominated by the use of DNSL blacklists. However, the CFS is independent of the very
techniques applied and will automatically proﬁt from upcoming improved techniques.
4 To reduce the effects of greylisting we delayed the blacklisting process by 15 min.
Inferring Spammers in the Network Core
237
As a ﬁnal note, due to the inherent “softness” of the labels attached by such a ﬂow-
based system, and the various risks of blocking a session in the network core, we stress
here that our system is not intended as an actual blocking ﬁlter, but rather as a reputation
rating system, which individual email servers can opt to include in their pre-ﬁltering
phase. Consequently, servers whose policy is to accept all emails, do not have to be
affected by our system, although using it, could perhaps provide hints to the content-
based ﬁlter.
5 Discussion
Although being only a ﬁrst step, we believe the proposed method has important poten-
tial to be applied in production networks and also paves the way for future research
in the area of network-level and network-wide characteristics of spam trafﬁc. In this
Section we discuss some possible limitations of our approach.
Delay: The ﬂow data is exported by the router only after the TCP connection is com-
pleted. Therefore, the information about the ﬂow is delayed at least until the session
is closed. We measured this delay to be less than 7.7 seconds for 90% of all SMTP
ﬂows. This illustrates that any application based on ﬂow characteristics is limited to
near-realtime. In particular, properties of a ﬂow can not be used to intercept this very
ﬂow. For our proposed applications, this limitation is acceptable as we are not interested
in using the properties of a ﬂow to intercept this very ﬂow, but rather subsequent ones.
Flow size manipulation: In principle, spammers could adapt to our method by prolong-
ing the envelope phase, for instance by sending multiple RCPT or HELO commands.
This would indeed increase the number of transmitted bytes per ﬂow but will, at the
same time, increase the number of packets. However, the average number of bytes per
packet remains small and the bytes per packet metric could still be used for the classi-
ﬁcation. Further, the spammer could try to increase the bytes transmitted in each com-
mand by using long email addresses, but maximum size for a command is limited to
521 characters [20]. Moreover, any deviation from normal SMTP behavior could easily
be detected and mail servers could enforce the shortness of the envelope phase as there
is no need to be overly long in a normal use case. In addition, the misbehavior of the
host could be published to make this information available for other servers.
In a more sophisticated scenario, a spammer could take over different internal hosts
and reconﬁgure them as internal mail servers. By sending accepted SMTP trafﬁc from
bot to bot, one could try to positively inﬂuence the CFS ratings for these bots. The
design of the CFS needs to be aware of this problem. In a ﬁrst step, only servers that
have been active over a longer time period (i.e., they have been accepting mails for at
least several weeks) and get a certain amount of connections from trusted email servers
(e.g., on a whitelist) could be included into the ﬁltering process.
6 Conclusion
Mail server administrators are engaged in an arms race against spammers. They urgently
need new approaches to ﬁght state-of-the-art attachment spam increasingly originating
238
D. Schatzmann, M. Burkhart, and T. Spyropoulos
from low-proﬁle botnet spammers. In this paper, we demonstrated that simple ﬂow met-
rics, such as byte count, packet count, and bytes per packet, successfully discriminate
between spam and ham ﬂows when pre-ﬁltering is deployed in mail servers. Thus, one
could infer individual mail server’s decisions with respect to the legitimacy and accep-
tance of a given connection. This allows an operator i) to concentrate dispersed mail
server knowledge at the network core and ii) to passively accumulate network-wide
spam statistics, proﬁle ﬁltering performance of servers, and rate clients. Thus, the ad-
vantages of ﬂow and server log analysis ﬁnally meet at the network core. We believe
this is an important step towards successfully ﬁghting spammers at the network-level.
References
1. IRONPORT: 2008 internet security trends, http://www.ironport.com
2. Harris, E.: The next step in the spam control war: Greylisting (2003)
3. SpamCop: Spamcop blocking list, http://www.spamcop.net/bl.shtml
4. Spamhaus: The spamhaus block list, http://www.spamhaus.org/sbl
5. Wong, M., Schlitt, W.: Sender Policy Framework (SPF). RFC 4408
6. Ramachandran, A., Dagon, D., Feamster, N.: Can DNS-based blacklists keep up with bots.
In: Conference on Email and Anti-Spam, CEAS 2006 (2006)
7. Duan, Z., Gopalan, K., Yuan, X.: Behavioral Characteristics of Spammers and Their Network
Reachability Properties. In: IEEE International Conference on Communications, ICC 2007
(2007)
8. Ramachandran, A., Feamster, N., Vempala, S.: Filtering Spam with Behavioral Blacklisting.
In: ACM conference on Computer and Communications Security, CCS 2007 (2007)
9. Beverly, R., Sollins, K.: Exploiting Transport-Level Characteristics of Spam. In: CEAS 2008
(2008)
10. Clayton, R.: Using Early Results from the spamHINTS. In: CEAS 2006 (2006)
11. Gu, G., Perdisci, R., Zhang, J., Lee, W.: BotMiner: Clustering Analysis of Network Trafﬁc
for Protocol-and Structure-Independent Botnet Detection. In: USENIX Security Symposium
(July 2008)
12. Syed, N.A., Feamster, N., Gray, A., Krasser, S.: Snare: Spatio-temporal network-level auto-
matic reputation engine. Technical Report GT-CSE-08-02, Georgia Tech. (2008)
13. Desikan, P., Srivastava, J.: Analyzing network trafﬁc to detect e-mail spamming machines.
In: ICDM Workshop on Privacy and Security Aspects of Data Mining (2004)
14. Gomes, L.H., Almeida, R.B., Bettencourt, L.M.A., Almeida, V., Almeida, J.M.: Compara-
tive Graph Theoretical Characterization of Networks of Spam and Legitimate Email. Arxiv
physics/0504025 (2005)
15. SWITCH: The swiss education and research network, http://www.switch.ch
16. Gomes, L.H., Cazita, C., Almeida, J.M., Almeida, V., Meira, W.: Characterizing a spam
trafﬁc. In: ACM SIGCOMM conference on Internet measurement, IMC 2004 (2004)
17. Fawcett, T.: An introduction to roc analysis. Pattern Recognition Letters 27 (2006)
18. Schatzmann, D., Burkhart, M., Spyropoulos, T.: Flow-level characteristics of spam and ham.
Technical Report 291, Computer Engineering and Networks Laboratory, ETH Zurich (2008)
19. Ramachandran, A., Seetharaman, S., Feamster, N., Vazirani, V.: Fast monitoring of traf-
ﬁc subpopulations. In: ACM SIGCOMM Conference on Internet Measurement, IMC 2008
(2008)
20. Klensin, J.: Simple mail transfer protocol. RFC 2821 (April 2001)