（1）日志的解析
日志解析的主要作用是抽取用户认为重要的字段，这就需要用户熟悉解析规则的配置。例如这样一条日志：
192.168.1.103 - - \[01/Aug/2014:12:07:39 +0800\] \"GET / HTTP/1.1\\\"
200 3228 \"-\" \"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1;
Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR
3.5.30729; .NET CLR 1.1.4322; .NET4.0C)\"
要抽取出如下字段：
1 \"ua\" : \"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1;
Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR
3.5.30729; .NET CLR 1.1.4322; .NET4.0C)\"
1.1 \"os\" : \"Windows XP\"
1.2 \"os_v\" : \"Windows XP\"
1.3 \"browser\" : \"IE\"
1.4 \"browser_v\" : \"IE 8.0\"
1.5 \"device\" : \"Other\"
2 \"clientip\" : \"192.168.1.103\"
3 \"status\" : 200
4 \"resp_len\" : 3228
5 \"method\" : \"GET\"
6 \"version\": \"1.1\"
（2）正则解析
正则是处理文本解析的有力工具
例如有这样一条日志：
2014-05-14 23:24:47 15752 \[Note\] InnoDB: 128 rollback segment(s) are
active
我们希望提取出以下字段：timestamp，pid，loglevel和message，可以配置如下的表达式：
(?\\\S+ \\S+) (?\\\S+) \\\[(?\\\S+\\\]
(?\.\*)
其中
\\S表示匹配非空格字符，\\S+表示匹配连续的非空格字符，(?\value)
表示提取名字为key的字段，其值为value，会解析出如下字段：
1 timestamp：2014-05-14 23:24:47
2 pid：15752
3 loglevel：Note
4 message：InnoDB: 128 rollback segment(s) are active
除了正常的正则表达式，我们还提供了一些常用的正则表达式，可以通过%{XXX}的方式来引用。比如可以使用%{NOTSPACE}来代替\\S+，这样的正则表达式为：
(?\%{NOTSPACE} %{NOTSPACE}) %{NOTSPACE:pid}
\\\[%{NOTSPACE:loglevel}\\\] %{GREEDYDATA:message}
默认的字段值是string类型的，如果用户想将其转换为number类型，可以在引用中加入type类型，目前仅支持int和float类型，例如：
%{XXX:int} 或者 %{XXX:float}
常用的正则表达式
1 基本：
%{NUMBER} (?:%{BASE10NUM})
%{POSINT} \\b(?:\[1-9\]\[0-9\]\*)\\b
%{NONNEGINT} \\b(?:\[0-9\]+)\\b
%{WORD} \\b\\w+\\b
%{NOTSPACE} \\S+
%{SPACE} \\s\*
%{MORESPACE} \\s+
%{DATA} .\*?
%{GREEDYDATA} .\*
%{IP} 略
%{PORT} 略
2 Apache/Nginx：
%{ApcClientIP}
%{ApcIdent}
%{ApcUser}
%{ApcTimestamp｝
%{ApcStatus}
%{ApcRespLen}
%{ApcReferer}
%{ApcUa}
%{ApcXForward}
%{ApcRequest}
例如原始日志:
192.168.1.139 - - \[24/Jan/2015:17:03:49 +0800\] \"GET
/api/v0/search/fields/?field=tag&filters=&order=desc&page=1&query=\*&size=50&sourcegroup=all&sourcegroupCn=%E6%89%80%E6%9C%89%E6%97%A5%E5%BF%97&time_range=-2d,now&type=fields
HTTP/1.1\" 200 363
\"http://alltest.rizhiyi.com/search/?query=\*&time_range=-2d%2Cnow&order=desc&size=20&page=1&sourcegroup=all&type=timeline&\_t=1422088066859&title=%E9%BB%98%E8%AE%A4&index=0\"
\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:35.0) Gecko/20100101
Firefox/35.0\"
可以采用如下配置：
%{ApcClientIP} %{ApcIdent} %{ApcUser} %{ApcTimestamp} %{ApcRequest}
%{ApcStatus} %{ApcRespLen} %{ApcReferer} %{ApcUa}
（3）KeyValue分解
KV主要用来解析明显的KV字符串，例如上面的例子中正则表达式解析后，request_query字段为：
field=tag&filters=&order=desc&page=1&query=\*&size=50&sourcegroup=all&sourcegroupCn=%E6%89%80%E6%9C%89%E6%97%A5%E5%BF%97&time_range=-2d,now&type=fields
这是一个按照\"&\"和\"＝\"来分割的KV字段。添加解析规则：KeyValue分解，source字段选择request_query，定义字段间分隔符为&，定义k-v分隔符为=。
（4）数值型字段转换
默认提取出来的字段都是字符串类型的。如果用户希望将这个值转换成数值类型，以方便再后面做统计，则需要通过这个功能来做转换。转换时需要用户配置数值的类型：int/float
例如： 用户的日志经过解析得出如下字段：
k1: \"123\",
k2: \"123.0\"
经过转换可以转变为：
k1: 123,
k2: 123.0
（5）url解码
将编码过的url进行解码，这个操作只能针对已经解析出来的字段。
（6）User Agent解析
分析HTTP日志中User Agent的用户操作系统和浏览器信息。
（7）时间戳识别
使用者通常关心日志发生的时间，比如检索最近几天的日志，需要转换日志中的timestamp字段的内容，日志分析软件平台系统就可以识别这条日志的时间戳。这就需要用户在之前抽取字段时就提取出timestamp字段。例如：
timestamp: \"150120 16:00:30\"
（8）JSON解析
JSON解析用来解析JSON格式的日志, 例如原始日志为：
{\"Name\": \"John Smith \", \"Age\": 23, \"Employed\": true,
\"Address\": {\"Street\": \"324 Chrome St\", \"City\": \"Portland, New
York,Los Angeles \", \"Country\": \"United States\"}}
（9）字段值拆分
将字符串切分，例如：
key：\"1.2.3.4, 2.4.5.6\"
可以根据"，"来对其进行切分成两个value:
key：\[\"1.2.3.4\", \"2.4.5.6\"\]
搜索
## 搜索
搜索提供了功能强大、简单易用的方法来检索日志，可以快速过滤并找到相关的结果，搜索的四种方式包括范围查询、正则表达式、NOT/AND/OR布尔值和字段过滤。
功能要求：
（1）搜索方法
1\. 范围查询：可快速发现满足一定条件参数的事件，例如检索Apache
Web服务器响应时间大于200ms的事件。
2\.
正则表达式：可以定义查询模版来简化你的搜索输入，假如你有一批名为app01-app99机器，如果你只想搜索前30台，你可以输入"/app\[0-2\]\[0-9\]/"
来简化搜索输入。
3\. AND/OR/NOT布尔值：利用AND、OR、NOT和(
)的组合，用户可以自由构造各种复杂的组合查询语句。
4\.
字段过滤：字段过滤快速显示用户所有结构化/半结构化特殊字段的统计聚合，点击其中的字段值进行过滤操作，可快速缩小事件的查询范围。
5\.
高级搜索：运用transction、eval等命令进行关联分析等高级搜索。详情请参阅高级搜索
（2）搜索组件
在进行搜索之前，请先了解日志分析软件的几个重要概念。
一个搜索框核心由四个部分构成：
1.日志分组
日志数据的逻辑分组。搜索日志中的源数据必须通过上传日志中定义的主机名（hostname）、应用程序（appname）、标签（tag）进行组合定义。
2.查询语句
搜索框中的查询语句。
3.时间范围
使用下拉菜单快速挑选预设时间方案或设置一个自定义的时间范围。
4.字段过滤
使用字段过滤可以快速增加搜索条件
上述每一项都链接到一个章节单独详细描述，会针对日志分析软件相关设置的每个参数深入剖析。
（3）搜索策略比较
1.结构化 vs. 非结构化日志搜索
支持结构化和非结构化日志。结构化日志如JSON，可自动解析日志中相关字段和对应值；对主流非结构化日志（如Apache日志）也实现了自动解析。
2.搜索查询 vs. 字段过滤
如果选择直接在搜索框中输入搜索语句，则需要输入一长串由布尔运算符连接成的查询语句。
3.统计视图
搜索的结果可通过可视化方式更清晰的展现并做统计分析，可以分析随着时间的推移看到上传日志的趋势分布。
4.多TAB页工作区域
在多任务处理情况下每个TAB标签页代表一次搜索的内容。
5.日志分组
通过设置日志分组对日志数据源进行分类。每次搜索只能在一个日志分组中进行。
6.在搜索框中输入用户的搜索查询语句，点击搜索框右侧的标记可以看到搜索语法帮助，更多细节请参阅搜索语法。
7.时间范围选择
使用下拉菜单快速挑选预设时间范围或自行设置时间范围。
8.可在字段列表中选择过滤，使用字段过滤可以快速添加搜索条件以缩小检索范围。
9.直方图显示随时间统计的日志事件数量。点击直方图的任何部分都可以选择那个时间段以查看选定时间范围内的事件。用户也可以使用鼠标左键框选时间范围。
10.字段列表默认采用二级菜单折叠方式，点击选择一个字段将显示该字段中出现次数最多的三百个值及其统计计数。使用鼠标滚定将依次显示所有的字段值和统计计数。日志分析软件支持选择字段（单选或组合）再次过滤检索。
11.两种不同的搜索结果展现方式：事件视图显示搜索结果中日志数据的原始视图，可查看原始日志及抽取的字段；事件视图提供列表\\表格两种模式，表格模式类似excel或数据库表格，显示选择的特定字段及其对应值；统计视图模式可以创建不同展现方式的图表。
## 统计视图
每次搜索，都会生成简单直观的时间序列趋势图，这是搜索时间范围内所有索引日志事件的直方图，可以利用直方图比较随着时间推移的日志属性。如果需要更多统计及可视化功能，使用统计视图，可以得到更多图表和统计结果。并且可将图表保存到自定义仪表盘上随时查看。
功能要求：
（1）事件计数统计
事件计数可以绘制几个事件随着时间推进的计数和数值统计进行比对。选择"展现方式"和"添加字段"，图中将会展示该事件随时间变化的统计数。可以依次选取多个字段，便于比较查看。每选取一次图形下方会展示该字段名称，点击相应字段的删除符号可以去除该字段。勾选"独立数统计"可以进行去重统计。
（2）时间分段统计
选择"时间分段统计"，
选取字段，依次设定时间分段。需要提醒的是时间分段范围必须包含在用户搜索的时间范围中，并且各个时间分段不能有重叠交叉。系统将会按时间统计该事件的计数，同时进行环比统计。
（3）数值分段统计
选择"数值分段统计"是统计数值字段在各数值段的分布情况。选择字段后自行填写数值分段范围。用户可以点击"添加数值分段"产生新的分组。最后点击"生成图形"会生成柱状图。
（4）时间直方图
选择时间直方图，只需要设定"时间间隔"------在方框内填入数字，再选择合适的时间单位，完成后点击"生成图形"，即可看到相应的直方图。
（5）数值直方图
跟时间直方图类似，用户只需要选定字段，设定"数值间隔"，点击生成图表即可看到关于该数值字段的。需要提醒的是数值间隔设定值过小会造成生成的图表不可用。
（6）字段值分类统计
点击选择"字段值分类统计"用户将会看到对于某一字段的具体分类统计。选择字段后用户可以选择不同的展现方式。页面会显示搜索结果中该字段的所有值的比例，并生成相应的统计表格，显示出现次数最多的前几个字段值名称及统计次数。
（7）字段数值统计
字段数值统计是对字段的数值属性进行统计分析的功能，统计方式目前支持"总计/平均值/最大值/最小值/"四种选项。
（8）累计百分比统计
"累计百分比统计"是对数值字段的数值大小分布进行的统计功能，系统默认的百分比分段设置为1%，5%，25%，50%，75%，95%，99%，用户也可以调整或增加新的分段
（9）反向查询