to recognize most attacks and also reports several false positives. However, as κ increases, detection accuracy improves,
and approaches that of the well-trained case (κ = κstable).
global knowledge base, our approach is a useful tech-
nique to apply in the presence of undertrained models
and, in general, in the case of training data scarcity.
5 Related work
Anomaly detection has a rich history that dates back
to Denning’s seminal paper on intrusion detection [9].
It has been extensively applied to modeling legal se-
quences of system calls [12, 42] as well as other system
call features [28]. Network-based anomaly detection has
also been extensively studied [21, 41].
In [24], the authors further exploit the use of statis-
tical learning procedures to build models of normal se-
quences of system calls in the Linux kernel. Here, ad-
hoc distances are proposed to perform clustering of sys-
tem calls in order to identify types of similar calls. Thus,
the system calls are “compacted” and the reduced size
of the input makes it feasible to train Markov chains that
attempt to capture the behavior of each host application.
Probabilistic thresholds are then used to detect deviating
behaviors.
Anomaly detection techniques have also been applied
at the application level. In [44], Wang and Stolfo de-
scribe PAYL, a service-agnostic anomaly detection sys-
tem that models normal behavior by recording byte fre-
quencies of network streams. An extension of the tech-
nique to higher-order n-grams is introduced in [43].
This system is also notable for its inclusion of a stop cri-
terion for ending model training by estimating the likeli-
hood of observing new n-grams; this approach is related
to the notion of model stability described in Section 3.1.
One of the ﬁrst applications of anomaly detection
techniques to the web domain is described in [19], in
which a multi-model approach to characterizing the nor-
mal behavior of web application parameters is shown
to reliably detect web attacks while maintaining a low
false positive rate. In [18], the use of Bayesian networks
is proposed to compose models and express inter-model
dependencies in order to further reduce false positive
rates. A system for clustering anomalies and classify-
ing clusters according to the type of attack is proposed
in [30] to improve the explanatory power of web appli-
cation anomaly detection as well as further reduce their
false positive rate.
A recent effort on addressing training set deﬁcien-
cies has been proposed in [8]. In this work, a sanitiza-
tion phase is ﬁrst performed to remove suspected attacks
and other abnormalities from the data. Instead of creat-
ing one model instance, a set of “micro-models” is trai-
ned against disjoint subsets of the training data. These
micro-models are then subject to one of several voting
schemes to recognize and cull outliers that may repre-
sent attacks. While this work is somewhat related to
ours in that slices of training data are considered, the
application of micro-models is intended to ensure that
attacks are not present in training data. In contrast, our
approach is complementary in the sense that it is focused
on addressing the lack of training data.
In [13], the authors propose a cluster-based anomaly
detection system as a means of reducing false positives.
The system accomplishes this by clustering similar be-
havioral proﬁles for individual hosts using the k-means
algorithm, although the exact distance metric used was
not explicitly given. Then, alerts are generated accord-
ing to a voting scheme, where the causal event for an
alert is evaluated against behavior proﬁles from other
members of that host’s cluster. If the event is deemed
anomalous by all members of the cluster, an alert is gen-
erated. Though this system shares the element of proﬁle
clustering with our work, the scope of the clustering is
limited to end hosts connected to a single switch, while
our work clusters across a large population of web ap-
plication proﬁles. Also, the models operate over coarse
network statistics such as the average number of hosts
contacted per hour, the average number of packets ex-
changed per hour, and the average length of packets ex-
changed per hour. Our system, on the other hand, con-
siders ﬁne-grained features speciﬁc to web applications.
Finally, our system does not require the use of a dis-
tributed voting scheme, which incurs additional over-
head.
A recent proposal for the anomaly-based detection of
web-based attacks is presented in [35].
In this work,
a mixture of Markov chains incorporating n-gram tran-
sitions is used to model the normal behavior of HTTP
request parameters. The resulting system attains a high
detection accuracy for a variety of web-based attacks.
In contrast to our work, however, a single mixture is
learned for an entire web application. Additionally,
the proposed system utilizes a supervised learning algo-
rithm (i.e., attacks must be labeled as such in the training
set), whereas ours operates on unlabeled training data.
6 Conclusions
In this work, we have identiﬁed that non-uniform web
client access distributions cause model undertraining.
This is an issue that must be addressed by web appli-
cation anomaly detection systems in order to provide a
reasonable level of security. The impact of this issue is
particularly relevant for commercial web-based anomaly
detection systems and web application ﬁrewall, which
have to operate in real-world environments where sufﬁ-
cient training data might be unavailable within a reason-
able time frame.
We propose the use of global knowledge bases of
well-trained, stable proﬁles to remediate a local scarcity
of training data by exploiting global similarities in web
application parameters. We have evaluated the efﬁcacy
of this approach over an extensive data set collected
from real-world web applications. We found that al-
though using global proﬁles does result in a small reduc-
tion in detection accuracy, the resulting system, when
given appropriate parameters, does provide reasonably
precise modeling of otherwise unprotected web applica-
tion parameters.
As future work, we plan to investigate the extension
of global model clustering to other types of models, par-
ticularly HTTP response and session models. An addi-
tional line of future work is to investigate the application
of different clustering methods in order to improve the
efﬁciency of the querying procedure for high-cardinality
knowledge bases.
Acknowledgments
The authors wish to thank the anonymous reviewers
and our shepherd, Angelos Stavrou, for their insightful
comments. This work has been supported by the Na-
tional Science Foundation, under grants CCR-0238492,
CCR-0524853, and CCR-0716095, by the European
Union though the grant FP7-ICT-216026-WOMBAT,
and by Secure Business Austria (SBA).
References
[1] J. Alpert and N. Hajaj. We knew the web was
http://googleblog.blogspot.com/2008/
big...
07/we-knew-web-was-big.html, July 2008.
[2] S. Axelsson. The Base-Rate Fallacy and the Difﬁculty of
Intrusion Detection. ACM Transactions on Information
and System Security, 3(3):186–205, August 2000.
[3] S. Bhatkar, A. Chaturvedi, and R. Sekar. Dataﬂow
Anomaly Detection. In Proceedings of the IEEE Sym-
posium on Security and Privacy (S&P 2006), Oakland,
CA, USA, May 2006. IEEE Computer Society.
[4] Breach Security, Inc. Breach WebDefend. http://
www.breach.com/products/webdefend.html, Jan-
uary 2009.
[5] S. Cho and S. Cha. SAD: Web Session Anomaly De-
tection Based on Parameter Estimation. Computers &
Security, 23(4):312–319, 2004.
[6] Citrix Systems,
Citrix Application Fire-
http://www.citrix.com/English/PS2/
Jan-
wall.
products/product.asp?contentID=25636,
uary 2009.
Inc.
[7] W. Cohen, P. Ravikumar, and S. Fienberg. A compari-
son of string distance metrics for name-matching tasks.
In Proceedings of the IJCAI-2003 Workshop on Informa-
tion Integration on the Web (IIWeb-03), 2003.
[8] G. F. Cretu, A. Stavrou, M. E. Locasto, S. J. Stolfo,
and A. D. Keromytis. Casting out Demons: Sanitiz-
ing Training Data for Anomaly Sensors. In Proceedings
of the IEEE Symposium on Security and Privacy (S&P
2008), pages 81–95, Oakland, CA, USA, May 2008.
IEEE Computer Society.
[9] D. E. Denning. An Intrusion-Detection Model.
IEEE
Transactions on Software Engineering, 13(2):222–232,
1987.
[10] H. J. Escalante and O. Fuentes. Kernel Methods for
Anomaly Detection and Noise Elimination.
In Pro-
ceedings of the International Conference on Computing
(CORE 2006), pages 69–80, Mexico City, Mexico, 2006.
BIG-IP Application Se-
http://www.f5.com/
[11] F5 Networks,
Inc.
curity Manager.
products/big-ip/product-modules/
application-security-manager.html,
2009.
January
[12] S. Forrest, S. A. Hofmeyr, A. Somayaji, and T. A.
Longstaff. A Sense of Self for Unix Processes. In Pro-
ceedings of the IEEE Symposium on Security and Pri-
vacy (S&P 1996), pages 120–128, Oakland, CA, USA,
May 1996. IEEE Computer Society.
[13] V. Frias-Martinez, S. J. Stolfo, and A. D. Keromytis.
Behavior-Proﬁle Clustering for False Alert Reduction in
Anomaly Detection Sensors. In Proceedings of the An-
nual Computer Security Applications Conference (AC-
SAC 2008), Anaheim, CA, USA, December 2008.
[14] J. T. Gifﬁn, D. Dagon, S. Jha, W. Lee, and B. P. Miller.
Environment-Sensitive Intrusion Detection. In Proceed-
ings of the International Symposium on Recent Ad-
vances in Intrusion Detection (RAID), pages 185–206.
Springer-Verlag, 2005.
[15] L. Guangmin. Modeling Unknown Web Attacks in Net-
In Proceedings of the 3rd
work Anomaly Detection.
International Conference on Convergence and Hybrid
Information Technology (ICCIT 2008), pages 112–116,
Washington, DC, USA, 2008. IEEE Computer Society.
[16] B. Juang and L. Rabiner. A probabilistic distance mea-
sure for hidden Markov models. AT&T Bell Laborato-
ries Technical Journal, 64(2):391–408, 1985.
[17] S.-i. Kim and N. Nwanze. Noise-Resistant Payload
Anomaly Detection for Network Intrusion Detection
Systems.
In Proceedings of the Performance, Com-
puting and Communications Conference (IPCCC 2008),
pages 517–523, Austin, TX, USA, December 2008.
IEEE Computer Society.
[18] C. Kruegel, D. Mutz, W. Robertson, and F. Valeur.
Bayesian Event Classiﬁcation for Intrusion Detection. In
Proceedings of the Annual Computer Security Applica-
tions Conference (ACSAC 2003), Las Vegas, NV, USA,
December 2003.
[19] C. Kruegel, W. Robertson, and G. Vigna. A Multi-model
Approach to the Detection of Web-based Attacks. Jour-
nal of Computer Networks, 48(5):717–738, July 2005.
[20] C. Kruegel, T. Toth, and E. Kirda. Service-Speciﬁc
Anomaly Detection for Network Intrusion Detection. In
Proceedings of the Symposium on Applied Computing
(SAC 2002), Spain, March 2002.
[21] W. Lee and S. J. Stolfo. A Framework for Constructing
Features and Models for Intrusion Detection Systems.
ACM Transactions on Information and System Security,
3(4):227–261, 2000.
[22] R. Little and D. Rubin. Statistical analysis with missing
data. Wiley New York, 1987.
[23] R. B. Lyngsø, C. N. S. Pedersen, and H. Nielsen. Metrics
and similarity measures for hidden markov models. In
Proceedings of the Seventh International Conference on
Intelligent Systems for Molecular Biology, pages 178–
186. AAAI Press, 1999.
[24] F. Maggi, M. Matteucci, and S. Zanero. Detecting intru-
sions through system call sequence and argument anal-
ysis (preprint). IEEE Transactions on Dependable and
Secure Computing, 99(1), 2009.
[25] M. Mahoney and P. Chan. Detecting novel attacks by
identifying anomalous network packet headers. Techni-
cal Report CS-2001-2, Florida Institute of Technology,
2001.
[26] M. V. Mahoney and P. K. Chan. Learning Rules for
Anomaly Detection of Hostile Network Trafﬁc. In Pro-
ceedings of the IEEE International Conference on Data
Mining, 2003.
[27] Miniwatts Marketing Group. World Internet Usage
Statistics. http://www.internetworldstats.com/
stats.htm, January 2009.
[28] D. Mutz, F. Valeur, C. Kruegel, and G. Vigna. Anoma-
lous System Call Detection. ACM Transactions on Infor-
mation and System Security, 9(1):61–93, February 2006.
DLDOS: Data Loss
Database – Open Source. http://datalossdb.org/,
January 2009.
[29] Open Security Foundation.
[30] W. Robertson, G. Vigna, C. Kruegel, and R. A. Kem-
merer. Using Generalization and Characterization Tech-
niques in the Anomaly-based Detection of Web Attacks.
In Proceedings of the Network and Distributed Sys-
tem Security Symposium (NDSS 2006), San Diego, CA,
USA, February 2006.
[31] R. Sekar, M. Bendre, D. Dhurjati, and P. Bollineni. A
Fast Automaton-Based Method for Detecting Anoma-
lous Program Behaviors.
In Proceedings of the IEEE
Symposium on Security and Privacy (S&P 2001), pages
144–155, Oakland, CA, USA, May 2001. IEEE Com-
puter Society.
[32] R. Sekar, A. Gupta, J. Frullo, T. Shanbhag, A. Tiwari,
H. Yang, and S. Zhou. Speciﬁcation-based Anomaly De-
tection: A New Approach for Detecting Network Intru-
sions. In Proceedings of the ACM Conference on Com-
puter and Communications Security (CCS 2002), pages
265–274, New York, NY, USA, 2002. ACM Press.
[33] O. Shezaf, J. Grossman, and R. Auger. Web Hack-
http://www.xiom.com/
ing Incidents Database.
whid-about, January 2009.
[34] A. Singer.
Social Media, Web 2.0 And Internet
http://thefuturebuzz.com/2009/01/12/
Stats.
social-media-web-20-internet-numbers-stats/,
January 2009.
[35] Y. Song, A. D. Keromytis, and S. J. Stolfo. Spectrogram:
A Mixture-of-Markov-Chains Model for Anomaly De-
tection in Web Trafﬁc. In Proceedings of the Network
and Distributed System Security Symposium (NDSS
2009), San Diego, CA, USA, February 2009.
[36] A. Stolcke and S. Omohundro. Hidden Markov Model
Induction by Bayesian Model Merging. Advances in
Neural Information Processing Systems, pages 11–11,
1993.
[37] A. Stolcke and S. Omohundro.
Inducing Probabilistic
Grammars by Bayesian Model Merging. Lecture Notes
in Computer Science, pages 106–106, 1994.
[38] G. Tandon and P. Chan. Learning Rules from System
Call Arguments and Sequences for Anomaly Detection.
In ICDM Workshop on Data Mining for Computer Secu-
rity (DMSEC), pages 20–29, 2003.
[39] G. Tandon, P. Chan, and D. Mitra. MORPHEUS: Mo-
tif Oriented Representations to Purge Hostile Events
from Unlabeled Sequences. In Proceedings of the 2004
ACM Workshop on Visualization and Data Mining for
Computer Security, pages 16–25, Washington DC, USA,
2004. ACM.
[40] D. Turner, M. Fossi, E. Johnson, T. Mark, J. Blackbird,
S. Entwise, M. K. Low, D. McKinney, and C. Wueest.
Symantec Global Internet Security Threat Report –
Trends for 2008. Technical Report XIV, Symantec Cor-
poration, April 2009.
[41] A. Valdes and K. Skinner. Adaptive, Model-based Mon-
itoring for Cyber Attack Detection. In H. Debar, L. Me,
and F. Wu, editors, Proceedings of the International
Symposium on Recent Advances in Intrusion Detection
(RAID 2000), number 1907 in Lecture Notes in Com-
puter Science, pages 80–92, Toulouse, France, October
2000. Springer-Verlag.
[42] D. Wagner and D. Dean. Intrusion Detection via Static
Analysis.
In Proceedings of the IEEE Symposium on
Security and Privacy (S&P 2001), pages 156–168, Oak-
land, CA, USA, 2001. IEEE Computer Society.
[43] K. Wang, J. J. Parekh, and S. J. Stolfo. Anagram: A Con-
tent Anomaly Detector Resistant to Mimicry Attack. In
Proceedings of the International Symposium on Recent
Advances in Intrusion Detection (RAID 2006), Ham-
burg, GR, September 2006. Springer-Verlag.
[44] K. Wang and S. J. Stolfo. Anomalous Payload-based
Network Intrusion Detection. In Proceedings of the In-
ternational Symposium on Recent Advances in Intru-
sion Detection (RAID 2004). Springer-Verlag, Septem-
ber 2004.
[45] R. Xu and D. Wunsch. Survey of clustering algorithms.
IEEE Transactions on Neural Networks, 16(3):645–678,
2005.
[46] R. H. Zakon. Hobbes’ Internet Timeline v8.2. http:
//www.zakon.org/robert/internet/timeline/,
November 2006.
[47] S. Zanero and S. M. Savaresi. Unsupervised learning
techniques for an intrusion detection system.
In Pro-
ceedings of the 2004 ACM Symposium on Applied Com-
puting, pages 412–419. ACM Press, 2004.