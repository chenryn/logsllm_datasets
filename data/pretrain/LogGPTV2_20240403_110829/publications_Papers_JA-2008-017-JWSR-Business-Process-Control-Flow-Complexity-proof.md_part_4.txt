Q two processes, P and Q, containing only XOR
splits. Let us assume that P=Q (the processes
are exactly equal). Let us replace the XOR
splits of process P with OR splits. For correct-
ness reasons (van der Aalst, 2000), let us also
replace the XOR joins with OR joins). Since
4. When process P is concatenated with pro-
CFC (a)= fan-out(a) and CFC (a)=
cess Q using a XOR-split and a XOR-join, XOR-split OR-split
we depict the resulting process as P⊕Q. 2fan-out(a)-1, where a is an activity, then |P|>|Q|.
Therefore, Property 1 is satisfied.
This type of concatenation has also the
same illustration as the one in Figure 13,
Property 2:
except that the AND-split and the AND-join
A measure has to be sufficiently sensitive. A
shown are replaced with an XOR-split and
measure is not sensitive enough if it divides all
an XOR-join, respectively.
processes into just a few complexity classes.
Evaluating the cFc Metric
Let c be a nonnegative number. Then there
The nine criteria proposed by Weyuker give
are only finite processes for which |P| = c.
a framework to evaluate software metrics’
properties using a formal theoretical basis. The
Our CFC measure does not follow this
properties are intended to evaluate complexity
property. Therefore, it makes no provision for
measures on source code metrics. Since there is
distinguishing between processes that have a
a strong similarity of source code flow graphs
small number of activities (possibly performing
and processes (Cardoso, 2005d), we will use
very little computation) and those that have a
Weyuker’s properties to validate our CFC
large number of activities (possibly performing
measure. This widely used criterion will be
a substantial amount of computation), provided
presented, adapted, and applied to processes
that they have the same decision structure.
in the following paragraphs.
Nevertheless, Zuse (1997) points out that a
measure is a homomorphic mapping. It depends
Property 1:
on the result of experiments, the user-view, or
There are processes P and Q such that the
the viewpoint that a user wants to measure.
complexity of P is not equal to the complex-
Therefore, not following this property is not
ity of Q. The property requires that a measure
a disadvantage.
should not produce the same complexity value
for every process.
Property 3:
We have processes that have different
(∃P)(∃Q)(|P| ≠ |Q|).
degrees of perceived complexity but map into
the same complexity measurement value.
This property is an essential requirement
for measures and process measurement. It says
that a measure should distinguish between at
Copyright © 2008, IGI Global. Copying or distributing in print or electronic forms without written permission of IGI Global
is prohibited.
International Journal of Web Services Research, 5(2), 49-76, April-June 2008 65
There are distinct processes P and Q such Case 1 (-):
that |P|=|Q|.
(∀P)(∀Q)(|P − Q| ≥ |P|)
A measure that assigns a distinct value
to every process is not much of a measure. It For the concatenation operation ‘–’, the
would go against the principle of measurements, weak positivity holds. For any two processes
which requires that the number of objects that P and Q, |P-Q|=|P|+|Q|, thus |P-Q| ≥ |P|.
can be measured be greater than the range of
the values of the measure. Case 2 (o):
Our measure clearly satisfies this property.
Let us take two processes, P and Q. Let us as- (∀P)(∀Q)(|P  Q| > |P|)
sume that P has an AND-split at activity a with
a fan-out(a) of two. Let us construct process Q For the concatenation operation ‘’, the
exactly in the same way as process P, but with weak positivity holds. For any two processes
a fan-out(a) of four at the AND-split activity P and Q, |PQ|=|P|+|Q|+22-1, thus |PQ| ≥ |P|.
a. Since CFC (a)= 1, the complexity of P Furthermore, for the concatenation operation
AND-split
is equal to the complexity of Q (i.e., |P|=|Q|), ‘’, the positivity also holds since |PQ| > |P|.
but the processes are distinct.
Case 3 (•):
Property 4:
There exist processes P and Q such that P (∀P)(∀Q)(|P • Q| > |P|)
is equivalent to Q, but the complexity of P is
not equal to the complexity of Q. For the concatenation operation ‘•’, the
weak positivity holds. For any two processes
(∃P)(∃Q)(P ≡ Q|P| ≠ |Q|). P and Q, |P•Q|=|P|+|Q|+1, thus |P•Q| ≥ |P|. Fur-
thermore, for the concatenation operation ‘•’,
Even though two processes may have the positivity also holds since |P•Q| > |P|.
the same functionality, it is the details of the
design that determine the process’s complex- Case 4 (⊕):
ity. There are different process designs for the
same functionality. For example, let us take a (∀P)(∀Q)(|P ⊕ Q| > |P|)
business process that makes the backup of a file
system composed of four activities that save files For the concatenation operation ‘⊕’, the
at various locations. Two designs (processes weak positivity holds. For any two processes P
P and Q) with the same functionality of the and Q, |P⊕Q|=|P|+|Q|+2, thus |P⊕Q| ≥ |P|. Fur-
business process can be constructed. Process P thermore, for the concatenation operation ‘⊕’,
carries out the four activities sequentially, while the positivity also holds since |P⊕Q| > |P|.
process Q uses an AND-split and an AND-join
to reduce the time it takes to complete a file Property 6:
system backup. As a result, |P|=0, and |Q| =1 There exist processes P, Q, and R, such
(i.e., |P|≠|Q|). Therefore, this property is satis- that |P|=|Q| and |P*R|≠|Q*R|, where *∈{−, ,
fied by our metric. •, ⊕}.
Property 5:  P = Q and P *R ≠ Q* R 
(∃P)(∃Q)(∃R) 
For any processes P and Q, the complex-  and *∈{−,,•,⊕}  
ity of P*Q, *∈{−, , •, ⊕}, is greater than or
equal to the original complexity of P (weak
positivity).
Copyright © 2008, IGI Global. Copying or distributing in print or electronic forms without written permission of IGI Global
is prohibited.
66 International Journal of Web Services Research, 5(2), 49-76, April-June 2008
As with property 5, this property has four Let us assume that Q is a permutation of
distinct cases. the activities of process P. More precisely, the
activities a and a are exchanged. As a result,
1 2
Case 1 (−): |P−R|=|P|+|R| and |Q−R|=|Q|+|R|, activity a has now a fan-out of three, while
1
since |P|=|Q|, it holds that |P−R|= |Q|+|R|, activity a has a fan-out of two. The complexity
2
thus |P−R| = |Q−R|. of Q becomes
Case 2 (): |PoR|=|P|+|R|+22-1 and |Q| = CFC (a 1) + CFC (a 2)
AND−split OR−split
|QR|=|Q|+|R|+22-1, since |P|=|Q|, it = 1+22 -1 = 4
holds that |PR|= |Q|+|R|+22-1, thus |PR|
= |QR|. Since |P| ≠ |Q| (i.e. 8 ≠ 4), it happens that
our measurement follows this property.
Case 3 (•): |P•R|=|P|+|R|+1 and |Q•R|=|Q|+|R|+1,
since |P|=|Q|, it holds that |P•R|= |Q|+|R|+1, Property 8:
thus |P•R| = |Q•R|. This property states that uniformly chang-
ing activity names should not affect a process
Case 4 (⊕): |P⊕R|=|P|+|R|+2 and complexity.
|Q⊕R|=|Q|+|R|+2, since |P|=|Q|, it holds that
|P⊕R|= |Q|+|R|+2, thus |P⊕R| = |Q⊕R|. If P is a renaming of Q, then |P| = |Q|.
As a result, it is clear that our measurement This property requires that when the name
does not follow Weyuker’s property 6 in any of the activities or processes changes, the metric
of the cases presented. should remain unchanged. As the metric being
considered in this research does not depend on
Property 7: the name of activities or processes, it satisfies
There are processes P and Q such that Q is this property.
formed by permuting the order of the activities
of P, and |P| is not equal to |Q|. Property 9:
The complexity of a process formed by
(∃P)(∃Q) If Q is formed by permuting the concatenating two processes can be greater
order of the activities of P, then |P| ≠ |Q|. than the sum of their individual complexities
(wholeness property). This property states that
This property requires that permutation of the whole must be at least as great as the sum
elements within a process change the metric of the parts. The idea behind wholeness is that
value. The intent is to ensure that the possibil- the whole is more complex than the sum of its
ity exists for metric values to change due to components.
permutation of process activities.
Let us assume that we have a process P (∃P)(∃Q)(|P*Q|>|P|+|Q|, and *∈{−, , •, ⊕})
that contains an AND-split and an OR-split
for the activities a and a, respectively. Each This property states that, at least in some
1 2
split has a different fan-out. Activity a has a cases, the complexity of a process formed by
1
fan-out of two, while activity a has a fan-out concatenating two processes is greater than
2
of three. Therefore, the sum of their complexities. This reflects the
fact that there may be interactions between the
|P| = CFC (a)+ CFC (a) concatenated processes.
AND−split 1 OR−split 2
= 1 + 23 -1 = 8
As with previous properties, this property
has four distinct cases.
Copyright © 2008, IGI Global. Copying or distributing in print or electronic forms without written permission of IGI Global
is prohibited.
International Journal of Web Services Research, 5(2), 49-76, April-June 2008 67
Case 1 (-): |P-Q|=|P|+|Q|, thus |P-Q| ≥ |P|+|Q|. As our metric only requires the existence of
AND, OR, or XOR splits, and since most speci-
Case 2 (o): |PoQ|=|P|+|Q|+22−1, thus |PoQ| > fication languages include these constructs, we
|P|+|Q|. conclude that our metric satisfies this property
for a broad spectrum of modeling languages.
Case 3 (•): |P•Q|=|P|+|Q|+1, thus |P•Q| > At first glance, it may seem that properties 8
|P|+|Q|. and 10 have some relationship, since the naming
of an activity (property 8) can be understood as
Case 4 (⊕): |P⊕Q|=|P|+|Q|+2, thus |P⊕Q| > a representation in a process modeling language
|P|+|Q|. that differs, although the underlying process is
the same. However, the interoperability prop-
As a result, our measurement follows erty considers the expressiveness of a process
property 9 for case 2, 3, and 4. Case 1 follows modeling language. For example, a modeling
a variation of the wholeness property, called language L may be able to express only AND
p
the weak wholeness property. and XOR splits, while another language, L,
q
also may be able to express OR splits. In this
(∃P)(∃Q)(|P − Q| ≥ | P |+|Q|) case, control-flow complexity metrics that only
allow to express AND and XOR splits is not
Interoperability Property interoperable with language L since OR splits
q
Due to the large number of existing specifica- cannot be represented. On the other hand, if a
tion languages both in academia and industry, metric considers the complexity based on AND
the measurements should be independent of and XOR splits, then it is interoperable across
the process specification language. A particular language L and L.
p q
complexity value should mean the same thing
whether it was calculated from a process written conclusion
in BPEL (BPEL4WS, 2002), BPML (BPML, Since our CFC measure happens to fully sat-
2004), YAWL (van der Aalst & Hofstede, 2003), isfy seven of the Weyuker’s nine properties
or some other specification language. The objec- and partially satisfies one property, it can be
tive is to be able to set complexity standards considered to have passed a significant part of
and interpret the resultant numbers uniformly the theoretically validation process. Therefore,
across specification languages. it can be categorized as good, structured, and
This new property that we propose is not comprehensive.
part of the properties proposed by Weyuker.
Nevertheless, in the area of business processes MEtrIc VAlIdAtIon
and process modeling, we believe that it has an In this section, we describe the experiment
applicable importance. we have carried out for empirically validating
the CFC metric. This empirical study is an ex-
Property 10: periment that compares what we believe with
Measures must be interoperable (i.e., what we observe. Such an experiment plays a
independent of the process specification lan- fundamental role in our work. Zelkowitz and
guage). Wallace (1998) stress the importance of using
experimental models for validating metrics. The
If P=Q, possibly specified with different lan- authors suggest experimentation as a crucial
guages (i.e., P∈ L and Q∈ L, where L and part of the evaluation of new metrics.
p q p
L are process modeling languages), then |P| For the experiment to be successful, it
q
= |Q|. needs to be wisely constructed and executed.
Therefore, we have followed some suggestions
provided by Perry, Porter & Votta (2000) about
Copyright © 2008, IGI Global. Copying or distributing in print or electronic forms without written permission of IGI Global
is prohibited.