（3）对应场景：知识管理全流程联动、智能应答全流程联动。
### 3.6.12 Fasttext文本分类算法（新）
（1）算法定义：fasttext是facebook开源的一个词向量与文本分类工具，在2016年开源，典型应用场景是"带监督的文本分类问题"。提供简单而高效的文本分类和表征学习的方法，性能比肩深度学习而且速度更快。fastText结合了自然语言处理和机器学习中最成功的理念。fastText方法包含三部分，模型架构，层次Softmax和N-gram特征。
（2）应用场景：应用于智能应答文本分类。
（3）对应场景：智能应答全流程联动。
## 3.7回归分析 
### 3.7.1 多元线性回归算法
（1）算法定义：在回归分析中，如果有两个或两个以上的自变量，就称为多元回归。
（2）应用场景：一种现象常常是与多个因素相联系的，由多个自变量的最优组合共同来预测或估计因变量，比只用一个自变量进行预测或估计更有效，更符合实际。例如：消费水平预测、家庭消费支出预测等。
（3）对应场景：虚拟机存资源优化、开源软件性能优化。
### 3.7.2 简单线性回归算法 
（1）算法定义：简单线性回归围绕一个响应变量和解释变量的某个特征之间的关系进行建模。
（2）应用场景：简单线性模型假设响应变量和解释变量之前存在线性关系，它使用一个被称为超平面的线性平面来对这种关系进行建模。一个超平面是一个子空间，它比组成它的环绕空间小一个维度。在简单线性回归中共有两个维度，一个维度表示响应变量，另一个维度表示解释变量。因此，回归超平面只有一个维度，一个一维的超平面是一条直线。例如：业务量与后台数据表容量的关系预测等。
（3）对应场景：容器竖直规格管控、数据库空间优化、分布式消息中间件优化、开源软件性能优化。
### 3.7.3 多项式回归算法（新）
（1）算法定义：
多项式回归模型是线性回归模型的一种，此时回归函数关于回归系数是线性的。由于任一函数都可以用多项式逼近，因此多项式回归有着广泛应用。
（2）应用场景：适合于比较复杂的实际问题中，有时不问y与诸元素的确切关系如何，而用回归分析进行分析运算。工业界非常多的问题可以被建模成整数规划问题，例如对房屋成交信息建立多项式回归方程，并依据回归方程对房屋价格进行预测。
（3）对应场景：资产维护费的智能评估。
## 3.8 统计分析 
### 3.8.1 数据牛顿插值算法 
（1）算法定义：牛顿插值公式（Newton interpolation
formula）是代数插值方法的一种形式。牛顿插值引入了差商的概念，使其在插值节点增加时便于计算。
（2）应用场景：牛顿插值作为一种常用的数值拟合方法，因其计算简单，方便进行大量插值点的计算，且逻辑清楚，便于编程计算，具有广泛的应用。特别是经常出现只能测量得到离散数据点的情况，或者只能用数值解表示某对应关系之时，可以使用牛顿插值公式，对离散点进行拟合，得到较为准确的函数解析值。例如：实验分析实验数据不全时，可应用牛顿插值法对数据进行补充或数据挖掘分析时，剔除异常数据后对样本数据进行补充。
3.  对应场景：REDIS 异常检测。
### 3.8.2拉格朗日插值算法  {#拉格朗日插值算法 .list-paragraph}
（1）算法定义：在数值分析中，拉格朗日插值法是以法国十八世纪数学家约瑟夫·拉格朗日命名的一种多项式插值方法。
（2）应用场景：许多实际问题中都用函数来表示某种内在联系或规律，而不少函数都只能通过实验和观测来了解。如对实践中的某个物理量进行观测，在若干个不同的地方得到相应的观测值，拉格朗日插值法可以找到一个多项式，其恰好在各个观测的点取到观测到的值。例如：异常样本数据清理后对数据进行补充。
（3）对应场景：负载均衡的异常检测预警。
### 3.8.3 熵值法
（1）算法定义：信息论中，熵是对随机变量不确定性的度量。
（2）应用场景：可用熵值计算特征的离散程度，离散程度大的特征对综合值影响更大。熵值大，信息量小，权重应该小；熵值小，信息量大，权重应该大。常用来确定多因子综合判断时，各因子权重系数值。
（3）对应场景：主机网络异常检测。
### 3.8.4 曲线拟合最小二乘法
（1）算法定义：最小二乘法（又称最小平方法）是一种数学[优化](https://baike.baidu.com/item/%E4%BC%98%E5%8C%96)技术。
它通过最小化误差的平方和寻找数据的最佳[函数](https://baike.baidu.com/item/%E5%87%BD%E6%95%B0/301912)匹配。
（2）应用场景：利用最小二乘法可以简便地求得未知的数据，并使得这些求得的数据与实际数据之间误差的平方和为最小。最小二乘法还[可用于曲线拟合](https://baike.baidu.com/item/%E6%9B%B2%E7%BA%BF%E6%8B%9F%E5%90%88/5893992)。其他一些优化问题也可通过最小化能量或最大化熵用最小二乘法来表达。
（3）对应场景：数据库空间优化、开源软件故障诊断、开源软件故障预测、开源软件容量预测、容器生命周期全流程联动。
### 3.8.5 Z-score 标准化的算法 
（1）算法定义：Z-Score
标准化是数据处理的一种常用方法。通过它能够将不同量级的数据转化为统一量度的
Z-Score 分值进行比较。
（2）应用场景：Z-Score
的主要目的就是将不同量级的数据统一转化为同一个量级，统一用计算出的
Z-Score 值衡量，以保证数据之间的可比性。
（3）对应场景：业务告警根因分析、主机智能重启、网络智能基线告警、开源软件故障诊断、开源软件故障预测、开源软件容量预测、容器生命周期全流程联动。
### 3.8.6 四分位距算法（新）
（1）算法定义：四分位距通常是用来构建箱形图，以及对概率分布的简要图表概述。
（2）应用场景：对一个对称性分布数据（其中位数必然等于第三四分位数与第一四分位数的算术平均数），二分之一的四分差等于绝对中位差（MAD）。中位数是集中趋势的反映。
（3）对应场景：开源软件故障诊断、开源软件故障预测、开源软件容量预测、容器生命周期全流程联动。
## 3.9 优化算法 
### 3.9.1 Ballooning 气球技术
（1）算法定义： Ballooning
技术形象地在客户机占用的内存中引入气球（Balloon）的概念，气球中的内存是可以供宿主机使用的（但不能被客户机访问或使用）。
（2）应用场景：当宿主机内存使用紧张，空余内存不多时，可以请求客户机回收利用已分配给客户机的部分内存，客户机就会释放其空闲的内存，此时若客户机空闲内存不足，可能还会回收部分使用中的内存，可能会换出部分内存到客户机的交换分区（swap）中，从而使得内存气球充气膨胀，从而让宿主机回收气球中的内存可用于其他进程（或其他客户机）。反之，当客户机中内存不足时，也可以让客户机的内存气球压缩，释放出内存气球中的部分内存，让客户机使用更多的内存。
（3）对应场景：虚拟机存资源优化。
### 3.9.2 Floyd-Warshall 算法
（1）算法定义：Floyd-Warshall 算法是解决任意两点间的最短路径的一种算法。
（2）应用场景：通常可以在任何图中使用，包括有向图、带负权边的图。单独一条边的路径也不一定是最佳路径。从任意一条单边路径开始。所有两点之间的距离是边的权的和，(如果两点之间没有边相连,
则为无穷大）。 从第一个顶点开始，依次将每个顶点作为媒介
k，然后对于每一对顶点 u 和 v ，查看其是否存在一条经过 k
的，距离比已知路径更短的路径，如果存在则更新它。
（3）对应场景：云网融合管理。
### 3.9.3 遗传算法（新）
（1）算法定义：遗传算法是用于解决最优化的一种搜索启发式算法，是进化算法的一种。这种启发式通常用来生成有用的解决方案来优化和搜索问题。
（2）应用场景：遗传操作是模拟生物基因遗传的做法。在遗传算法中，通过编码组成初始群体后，遗传操作的任务就是对群体的个体按照它们对环境适应度（适应度评估）施加一定的操作，从而实现优胜劣汰的进化过程。从优化搜索的角度而言，遗传操作可使问题的解一代又一代地优化，并逼近最优解（通常每次算法执行的结果，可能会有不同）。常应用于解决负载均衡调度优化等场景。
（3）对应场景：虚拟化资源均衡分析。
### 3.9.4 爬山算法（新）
（1）算法定义：爬山算法是一种局部择优的方法，采用启发式方法，是对深度优先搜索的一种改进，它利用反馈信息帮助生成解的决策。
属于人工智能算法的一种。
（2）应用场景：爬山算法通过不断的和邻居值进行比较，朝着邻居值大的方向前进，就像爬山一样，
当左右邻居的值相同的时候，就停止，这个值就是算法找到的最优解。但爬山算法有很大的缺陷，就是它只能找到局部的最优解。常应用于解决负载均衡调度优化等场景
（3）对应场景：虚拟化资源均衡分析。
### 3.9.5 粒子群算法（新）
（1）算法定义：是通过模拟鸟群觅食行为而发展起来的一种基于群体协作的随机搜索算法。
（2）应用场景：粒子群算法初始化为一群随机粒子(随机解)，然后通过迭代找到最优解，在每一次迭代中，粒子通过跟踪两个"极值"来更新自己。第一个就是粒子本身所找到的最优解，这个解叫做个体极值pBest，另一个极值是整个种群找到的最优解，这个极值是全局极值gBest。常应用于解决负载均衡调度优化等场景。
（3）对应场景：虚拟化资源均衡分析。
### 3.9.6 蚁群算法（新）
（1）算法定义：蚁群算法是一种用来寻找优化路径的概率型算法，这种算法具有分布计算、信息正反馈和启发式搜索的特征，本质上是进化算法中的一种启发式全局优化算法。
（2）应用场景：将蚁群算法应用于解决优化问题的基本思路为：用蚂蚁的行走路径表示待优化问题的可行解，整个蚂蚁群体的所有路径构成待优化问题的解空间。路径较短的蚂蚁释放的信息素量较多，随着时间的推进，较短的路径上累积的信息素浓度逐渐增高，选择该路径的蚂蚁个数也愈来愈多。最终，整个蚂蚁会在正反馈的作用下集中到最佳的路径上，此时对应的便是待优化问题的最优解。常应用于解决负载均衡调度优化等场景。
（3）对应场景：虚拟化资源均衡分析。