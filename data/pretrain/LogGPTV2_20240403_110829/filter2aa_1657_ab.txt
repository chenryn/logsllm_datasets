o  Moxie Marlinspike 
o  Trevor Perrin 
o  Joseph Lorenzo Hall 
DEF CON 22 | 2014.08.08 
And$thus$was$born$the$Open$
Crypto$Audit$Project6
OpenCryptoAudit.org/people 
DEF CON 22 | 2014.08.08 
Open$Crypto$Audit$Project6
Officers & Directors 
o  Matthew Green 
o  Marcia Hoffman 
o  Kenneth White 
DEF CON 22 | 2014.08.08 
Our$ﬁrst$Board$meeting6
DEF CON 22 | 2014.08.08 
Making$the$connections...6
DEF CON 22 | 2014.08.08 
The$work$begins6
•  Reached out to a few of the small handful 
of organizations that are capable of doing 
this work 
•  Great response from iSec Labs 
•  Open Technology Fund matching grant 
DEF CON 22 | 2014.08.08 
FastPforward6
DEF CON 22 | 2014.08.08 
FastPforward6
DEF CON 22 | 2014.08.08 
FastPforward6
•  iSec’s final security assessment:  
• 
Weak volume header key derivation (low kdf iteration count) 
• 
Sensitive information could be paged out from kernel stacks 
• 
Issues in the boot loader decompressor 
• 
Use of memset() to clear sensitive data 
•  Overall findings: “no evidence of backdoors 
or intentional flaws” 
DEF CON 22 | 2014.08.08 
What$does$that$mean?6
•  Password strength is crucial (same as always) 
•  Vulnerabilities discovered would likely require 
physical access to a mounted volume to construct 
exploit chains (scape key material, page files, etc) 
•  This is *not* a part of the TrueCrypt security model 
•  If your machine is compromised, disk crypto will not 
help you (see Culp-White Law, earlier) 
•  PSA: *All* major FDEs, including Bitlocker, DM-Crypt, 
and FileVault have identical attack vectors 
•  So far, so good. 
DEF CON 22 | 2014.08.08 
But$then...6
DEF CON 22 | 2014.08.08 
Life$is$what$happens$when$you’re$
busy$making$other$plans6
DEF CON 22 | 2014.08.08 
TrueCrypt.org$goes$dark6
•  v. 7.2 is released, signed with developer keys 
(updated cert) 
•  Now read-only 
•  Archive is taken offline 
•  Recommendations for alternatives non-optimal 
DEF CON 22 | 2014.08.08 
DEF CON 22 | 2014.08.08 
Our$Response6
•  OCAP is continuing through with the Phase II (formal 
cryptanalysis) of the code 
•  We have created a trusted repository of source and 
binaries for all platforms 
•  Thomas Ptacek and Nate Lawson organizing Phase II 
•  We are considering several post-audit scenarios,  
•  /possibly/ including financial support for a trusted 
fork 
•  *Many* challenges and questions remain 
DEF CON 22 | 2014.08.08 
Secure$Coding$and$Trust6
DEF CON 22 | 2014.08.08 
Crypto$Engineering6
“There is no difference, from the attacker's point of 
view, between gross and tiny errors. Both of them are 
equally exploitable...This lesson is very hard to 
internalize. In the real world, if you build a bookshelf 
and forget to tighten one of the screws all the way, it 
does not burn down your house.” 
  — Maciej Cegowski 
DEF CON 22 | 2014.08.08 
(In)secure$Coding:$
Where%static%analysis%might%help1
•  Unintended compiler optimizations 
•  Primitive type transpositions 
•  Pointer assignment vs. array assignments/terminators 
From: www.viva64.com/en/examples (recommend 
preparing a tall glass of Scotch first) 
DEF CON 22 | 2014.08.08 
(In)secure$Coding6
DEF CON 22 | 2014.08.08 
“Source code is interesting. Everybody thinks if you have 
source code, you’re going to be able to find everything 
wrong with [a system]. That’s a misconception. It’s nice to 
have source code so if you see something funny 
happening, you can check and see why – try to dig 
down… But for somebody to [manually] analyze millions of 
lines of source code, it’s just not going to happen.” 
— Richard George 
     Former Technical Director 
     NSA Information Assurance Directorate 
     Retrospective Keynote, June, 2014  
     vimeo.com/97891042 [35:50] 
Consider$a$hypothetical:6
DEF CON 22 | 2014.08.08 
Consider$a$hypothetical:6
DEF CON 22 | 2014.08.08 
In$Action6
Credits: Program Verification Systems 
(http://www.viva64.com/en/d/0208/)  
DEF CON 22 | 2014.08.08 
Visual$Studio$20106
DEF CON 22 | 2014.08.08 
memset()%didn’t1
DEF CON 22 | 2014.08.08 
Back$to$the$source6
DEF CON 22 | 2014.08.08 
RtlSecureZeroMemory()$does6
DEF CON 22 | 2014.08.08 
Multiple$options6
•  Prefer secure memory/copy functions of stdlib 
•  Review limitations of the language/framework 
•  Understand compiler optimization side-effects 
•  GCC 4.4+ (2009) offers a pragma for function-level 
optimization control or prevention 
      (see: gcc.gnu.org/onlinedocs/gcc-4.4.0/gcc/Optimize-Options.html) 
•  Learn from others’ experience 
DEF CON 22 | 2014.08.08 
Multiple$options6
•  Prefer secure memory/copy functions of stdlib 
•  Review limitations of the language/framework 
•  Understand compiler optimization side-effects 
•  GCC 4.4+ (2009) offers a pragma for function-level 
optimization control or prevention 
      (see: gcc.gnu.org/onlinedocs/gcc-4.4.0/gcc/Optimize-Options.html) 
•  Learn from others’ experience 
DEF CON 22 | 2014.08.08 
The$Onion$Router$(TOR)6
crypto.c 
tortls.c 
connection_or.c 
onion.c 
rendclient.c 
tor-gencert.c 
DEF CON 22 | 2014.08.08 
The$Onion$Router$(TOR)6
crypto.c 
tortls.c 
connection_or.c 
onion.c 
rendclient.c 
tor-gencert.c 
DEF CON 22 | 2014.08.08 
Network$Security$Services$
(NSS)6
sha512.c 
DEF CON 22 | 2014.08.08 
Network$Security$Services$
(NSS)6
sha512.c 
DEF CON 22 | 2014.08.08 
OpenSSL6
ec_mult.c 
DEF CON 22 | 2014.08.08 
OpenSSL6
ec_mult.c 
DEF CON 22 | 2014.08.08 
On$Trust6
DEF CON 22 | 2014.08.08 
Probably$not$your$threat$model6
DEF CON 22 | 2014.08.08 
Trust$is$complicated6
DEF CON 22 | 2014.08.08 
*Really*$complicated6
DEF CON 22 | 2014.08.08 
On$Trust6
DEF CON 22 | 2014.08.08 
On$Trust6
DEF CON 22 | 2014.08.08 
Strong$crypto$does$not$
equal$secure$code6
DEF CON 22 | 2014.08.08 
Forward$Secrecy$won’t$help6
DEF CON 22 | 2014.08.08 
Even$with$the$best$designs…6
DEF CON 22 | 2014.08.08 
Things$that$make$you$go$
hmmm6
DEF CON 22 | 2014.08.08 
It$bears$repeating...6
DEF CON 22 | 2014.08.08 
Usable$Crypto$is$HARD6
DEF CON 22 | 2014.08.08 
TakePAways6
•  Many recent catastrophic failures are 
secure coding errors, not crypto errors 
•  Static analyzers are not enough 
•  Manual inspection is not enough 
•  Source code can result in unexpected 
binary code 
•  Subject matter experts (protocols, crypto, 
network) may bring more perspective than 
“enough” eyes 
DEF CON 22 | 2014.08.08 
If$the$game$is$rigged,$strong$
crypto$probably$won’t$help$you.6
DEF CON 22 | 2014.08.08 
DEF CON 22 | 2014.08.08 
Looking$forward6
Recap:$Where$are$we$now?6
•  Phase I Report released April 23, 2014 
•  Beginning Phase II, to include: 
• 
Formal cryptanalysis 
• 
OSX & Linux review 
• 
Additional license work 
•  Partnering with Linux Foundation Core 
Infrastructure Initiative 
•  Auditing OpenSSL, possibly more 
•  Looking ahead! 
•  Trusted TC mirror: github.com/AuditProject/truecrypt-verified-mirror  
DEF CON 22 | 2014.08.08 
Final$Thoughts$&$Goals6
•  Unpaid volunteers are not enough 
•  One-off bug bounties are not enough 
•  Encourage secure coding practices 
•  Support & create smarter test harnesses 
•  Develop a workable model for public 
code review 
DEF CON 22 | 2014.08.08 
Open$Discussion$
6
DEF CON 22 | 2014.08.08 
Talk$to$us6
DEF CON 22 | 2014.08.08 
@matthew_d_green 
@kennwhite  
@OpenCryptoAudit 
PI:EMAIL 
IsTrueCryptAuditedYet.com (partly!) 
OpenCryptoAudit.org  
blog.cryptographyengineering.com  
github.com/AuditProject/truecrypt-verified-mirror