instruction (1) nor (2) is present, we defaulted to instruction (1). Afterward,
we ﬁrst added and then discarded speciﬁc ASes to/from RP according to the
instructions of type (3) and (4). respectively. Finally we constructed paths of
the form (B, A, p(cid:5)),∀B ∈ RP which ‘cross’ the IXP at the link (B, A).
We combine those paths with routes gathered from ﬁve days of the rib snap-
shots from the route collector projects RIPE RIS and RouteViews (i.e., the same
data sources that CAIDA uses to produce serial-1 data). For IPv4-related infer-
ences, we use the publicly available ASRank script that is hosted by CAIDA.
For IPv6, we apply the necessary changes described by Giotsas et al. [33] to
adjust the inference script to IPv6 routig policies. Both scripts require a list of
Route Server ASNs for their inference. To generate this list, we extract all ASNs
with the type ‘Route Server’ from PeeringDB. After these steps, our extended
relationship data set covers 69.0% and 63.2% of traﬃc-carrying IPv4 and IPv6
links.
Improving Relationship Coverage via Manual Search. At this point, we
still have various ASes with limited coverage. Hence, we decided to manually
search for additional relationship information. We invested three days of manual
relationship look-ups for ASes that either (i) are in the top 30 contributors of
unclassiﬁed links, (ii) have only less than 10% of their links covered, or (iii) have
more than 10% of their links inferred to be transit connections.
For our manual search, we mostly relied on entries in PeeringDB (e.g., [63]),
RADb/Whois (e.g., [66]), and targeted web searches (e.g., [76]) that clearly
described (at least some) relationships of a given ASN—please note that the
7 This order represents a conservative approach—if both the instruction to add AS
X and to delete X are present, x will ultimately not be included in the set of
Route Server peers.
Peering Only?
353
Fig. 13. Coverage of relationships for
traﬃc-carrying links (IPv4).
Fig. 14. Coverage of relationships for traﬃc-
carrying links (IPv6).
three given examples are chosen randomly and may or may not belong to mem-
bers of our studied IXP. For autnum objects in RADb/Whois, we used an app-
roach similar to that described in [47] to infer transit relationships (even though
we did not automate the process). We used as-set objects in RADb/Whois
with clearly deﬁned names (most commonly, e.g., AS:AS-CUSTOMER(S),
AS:AS-TRANSIT(S), AS:AS-UPSTREAM(S) or AS:AS-PEER(S))
to identify relationships. For PeeringDB and the targeted web searches, we
searched for exhaustive enumerations of, e.g., providers as part of, e.g., the net-
work infrastructure description. Whenever possible, we diﬀerentiated between
IPv4 and IPv6 relationships as well as regional relationships (i.e., if a websites
described AS X as peer in Europe but as provider in Asia, we noted it as peer
giove that our IXP operates in Europe).
While investigating the relationships for the ASes mentioned above, we
observed diminishing coverage improvements; hence, we decided to not extend
our manual search beyond them. Notably, whenever an AS explicitly speciﬁed
its providers and customers but not its peers, we assumed that all remaining
links are peering relationships.
354
L. Prehn et al.
Our ﬁnal set of relationships cov-
ers 74.2% and 65.9% of traﬃc-carrying
IPv4 and IPv6 links at our IXP. Figure
13 (for IPv4) and Fig. 14 (for IPv6)
show the fraction of
links for each
AS that are inferred to be P2P and
P2C relationships. We observe that
in both plots our data set covers at
least a fourth of all relationships for
93% of ASes. On median, we cover
66% of IPv4 and 51% of IPv6 relation-
ships. While we observe that overall
only 1.2% (IPv4) and 1.5% (IPv6) of
all inferred links have transit relation-
ships, we also observe that these rela-
tionships are distributed across almost
all IXP members; hence, it is rather
the norm than the exception to establish additional sessions with transit
providers via the IXP’s peering fabric. Beyond its coverage, we are also interested
in the ﬁltering impact of our relationship data set. Figure 15 shows the number
of available IPv4 and IPv6 norm-preﬁxes per traﬃc-carrying, directed8 AS link.
We observe that certain links carry traﬃc for more than 106 norm-preﬁxes. Yet,
when only considering links that our data set classiﬁes as peering links, we ﬁlter
out all links that carry traﬃc for exceptionally many preﬁxes. Hence, we con-
tinue our analysis using only the links explicitly inferred as peering links, i.e.,
we not only ignore those links explicitly inferred as transit links but also those
for which we have no inferred relationship.
Fig. 15. Norm-preﬁxes per directed AS
link
5.2 Private Peering
As previously discussed in Sect. 4, our traﬃc captures do not contain any private
peering connections. Therefore, we rely on queries to carefully selected looking
glasses (LGs) to infer routes available via private peering. To automatically query
looking glass interfaces, we write identiﬁcation and querying interfaces—similar
to those described in [31]—for common looking glass utilities including, e.g.,
HSDN [73], RESPAWNER [54], and COUGAR [26]. To initially ﬁnd ASes with
looking glasses, we rely on PeeringDB [62] as well as various online lists [8,9,37,
42,46,75]. We ﬁrst narrow down our selection by removing all LGs from ASes
that are not members of our IXP. Afterwards, we removed all LGs that our
indentiﬁcation interface could not map to a LG template. Then, we manually
went through the looking glass interfaces of the remaining 63 ASes and validated
whether they could look at the routing table of a router that is located within one
of the IXPs contiguous colocation facilities—we heavily relied on the naming and
8 If A and B exchange traﬃc in both directions, we treat the links (A, B) and (B, A)
separately.
Peering Only?
355
excluded all entries for which the location was not exactly matching a colocation
name. Finally, after removing LGs requiring captchas, exploring rate-limiting, or
explicitly stating ‘no automation allowed’, we are left with LGs from 17 diﬀerent
ASes to trigger.
Triggering Looking Glasses. As looking glasses are usually provided on a
voluntary basis from operators to operators, we do not want to abuse them with
gazillions of bursty queries. First, we limit the set of norm-preﬁxes for which we
query the LGs to those that are (1) necessary for the analysis in Sect. 6 and
(2) not yet covered by multi-lateral or bi-lateral peering. Second, when a looking
glass yields a longest-preﬁx match rather than an exact match and returns a
covering preﬁx that is likely not a default route (i.e., a routes less speciﬁc than
/8 and /16 for IPv4 and IPv6, respectively), we no longer query for any other
norm-preﬁxes covered by this less-speciﬁc. Third, we waited 39.3 seconds9 on
average between two consecutive queries to the same looking glass. With those
safeguards in place, we queried looking glasses as follows:
1. Querying a LG. We choose a looking glass in round-robin fashion and
performed—depending on the LG utility—either an exact match or, prefer-
ably, a longest-preﬁx match query against it.
2. Ignoring transit routes. If the LG returned a route for which the ﬁrst-hop
would be a transit provider to the AS the looking glass resides in, we ignore
that route. Similarly, if we can’t ﬁnd a relationship and the ﬁrst hop is a
Tier 1 provider, we also ignore the route (given that it likely represents a
transit relationship).
3. Requiring IXP routes. To ensure that the route is locally available at the
IXP, we ensured that the ﬁrst-hop AS is also an IXP member.
If no route remains after steps 2 and 3, we wait 2 seconds and then query the
next looking glass until we have exhausted our LG list. If one LG returned
a non-ﬁltered route we marked the norm-preﬁx as reachable (and queried the
next round-robin-order LG for the next norm-preﬁx), otherwise we mark it as
unreachable.
In total, we were able to uncover 2.33M, 6.73M, and 6.77M IPv4 (3.41B,
3.41B, and 3.45B IPv6) norm-preﬁxes available via multi-lateral, bi-lateral, and
private peering covering 19.8, 57.1, and 57.4% (37.3, 37.4, 37.8%) of all routed
IPv4 (IPv6) addresses (according to Geoﬀ Houston’s Routing Table Analysis
Report [36]), respectively. These results provide a real-world calibration for the
70+ % of reachability theoretically calculated by B¨ottger et al. [10] in 2018.
6 Route Importance
In this section, we present a qualitative analysis of the uncovered peering preﬁxes
with two diﬀerent measures of importance: (a) How many domains in a top N
9 A result of multiple small waits between queries to diﬀerent LGs in combination
with the answer time of the other LGs.
356
L. Prehn et al.
ranking are served by transit-free reachable preﬁxes, and (b) how many of the
top destination preﬁxes of a large eyeball network are reachable without transit.
The ﬁndings of this section can be summarized as follows:
– For both rankings, around half of the top-100 norm-preﬁxes can be reached
via multi-lateral peering.
– For our traﬃc-based ranking, nearly all preﬁxes can be reached via bi-lateral
peering with few exceptions that can mostly be reached via private peering.
– For our domain-based ranking, the same holds true for IPv4. For IPv6, we
observe that bi-lateral peering has a substantially lower impact. While, in
general, more preﬁxes remain unreachable than for IPv4, most of the top
norm-preﬁxes can be obtained via private peering.
– We observe that the preﬁxes that remain unreachable even via private peering
mostly lead to large Transit and Tier 1 providers.
6.1 Preﬁx Rankings
Traﬃc-Based Ranking. To provide a traﬃc-based importance ranking from
an independent source, we use traﬃc statistics from one of the largest European
ISPs. In particular, we collect egress traﬃc from all the ISP’s eyeball source
addresses at all edge routers over one day (10th June 2021) at a sample rate
of 1:1000 packets. For each destination IP, we sum the number of egress bytes
throughout the day, aggregate these values to norm-preﬁxes, and cluster the top
10k norm-preﬁxes for IPv4 and IPv6.
Domain-Based Ranking. To quantify the importance of IPs with another
metric, we obtain a domain-based importance ranking. Thus, we rely on re-
computed results from a previous work by Naab et al. [55]. The domain-based
norm-preﬁx top list is generated by picking a common domain top list (e.g.,
from Alexa [3], Majestic [48], or Umbrella [25]), resolving these domains to as
many IPs as possible, and then ranking each norm-preﬁx by the number of
Fully Qualiﬁed Domain Names (FQDNs) that can be resolved to an IP. We
requested an updated snapshot of the top list from the authors of [55] and
promptly received a re-computation from 30th April 2021. We decide to use the
Umbrella-based norm-preﬁx top list because it is the only one from which we
can derive 10K IPv4 as well as 10k IPv6 preﬁxes.
Peering Only?
357
Fig. 16. Coverage of eyeball-based top-
10K preﬁx ranking
Fig. 17. Coverage of domain-based top-10K
preﬁx ranking
6.2 Reachability of the Top-10K
Now that we got the domain- and traﬃc-based top 10 IPv4 and IPv6 norm-
preﬁxes, we can analyze how many of those preﬁxes are reachable via diﬀerent
peering types.
Traﬃc-Based Ranking. Figure 16 separates the top 10k preﬁxes into diﬀerent
classes based on their respective ranking (x-axis) and shows for each class the
fraction of reachable preﬁxes (y-axis) for IPv4 at the bottom and IPv6 at the
top. In addition, each preﬁx is colored by the lowest-requirement peering type
(requirement and economical costs for PNI > BLP > MLP) that it can be
reached by (if any). We observe that the top 100 preﬁxes for both protocols can
be fully covered using all peering types. In general, we observe that only very few
preﬁxes can not be reached. Notably, the vast majority of top-10k preﬁxes can
solely be reached via bi-lateral peering agreements. This result beneﬁts aspiring
IXP members who, if they carefully select a few private peering partners, can
keep their operational costs minimal.
Domain-Based Ranking. Figure 17 shows our results for the domain-based
top 10k preﬁxes in the same style as the previous ﬁgure. First, we observe
that signiﬁcantly more—especially lower rank—preﬁxes are unreachable (e.g.,
approx. 15% of the lowest 5k IPv4 preﬁxes are not reachable). Second, we see
a drastic shift in patterns for IPv6: The diﬀerence between routes available via
multi-lateral and bi-lateral peering is almost negligible compared to IPv4. Con-
sequently, IXP members have to rely substantially more on private peering to
reach the preﬁxes with the highest domain counts. Yet, for approx. 15% of 500-
or-lower preﬁx class preﬁxes IXP members still have to rely on their transit as
they are unreachable via peering.
358