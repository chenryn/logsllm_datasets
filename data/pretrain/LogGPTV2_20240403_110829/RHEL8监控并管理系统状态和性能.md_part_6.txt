[`video`{.literal}]{.term}
:   在显卡上设置各种幂流级别。目前，只支持 Radeon 卡。
    可使用 `radeon_powersave 选项指定 powersave`{.literal}
    级别。支持的值有：
    ::: itemizedlist
    -   `default`{.literal}
    -   `auto`{.literal}
    -   `低`{.literal}
    -   `mid`{.literal}
    -   `high`{.literal}
    -   `dynpm`{.literal}
    -   `dpm-battery`{.literal}
    -   `dpm-balanced`{.literal}
    -   `dpm-perfomance`{.literal}
    :::
    详情请查看
    [www.x.org](http://www.x.org/wiki/RadeonFeature#KMS_Power_Management_Options){.link}。请注意，这个插件是实验性的，在以后的版本中可能会更改
    选项。
[`bootloader`{.literal}]{.term}
:   在内核命令行中添加选项。此插件只支持 GRUB 2 引导装载程序。
    可以通过 `grub2_cfg_file`{.literal} 选项指定 GRUB 2
    配置文件的自定义非标准位置。
    内核选项添加到当前 GRUB
    配置及其模板中。需要重新引导系统才能使内核选项生效。
    切换到其他配置文件或手动停止 `tuned`{.literal}
    服务会删除附加选项。如果您关闭或重新引导系统，则内核选项会在
    `grub.cfg`{.literal} 文件中保留。
    内核选项可使用以下语法指定：
    ``` screen
    cmdline=arg1 arg2 ... argN
    ```
    ::: example
    []{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#idm139675534815952}
    **例 3.7. 修改内核命令行**
    ::: example-contents
    例如，要将 `静默`{.literal} 内核选项添加到 [**TuneD**]{.strong}
    配置集中，请在 `tuned.conf`{.literal} 文件中包含以下行：
    ``` screen
    [bootloader]
    cmdline=quiet
    ```
    以下是在内核命令行中添加 `isolcpus=2`{.literal}
    选项的自定义配置集示例：
    ``` screen
    [bootloader]
    cmdline=isolcpus=2
    ```
    :::
    :::
:::
:::
::: section
::: titlepage
# []{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#variables-in-tuned-profiles_customizing-tuned-profiles}TuneD 配置集中的变量 {.title}
:::
当 [**TuneD**]{.strong} 配置集被激活时，变量会在运行时扩展。
使用 [**TuneD**]{.strong} 变量可减少在 [**TuneD**]{.strong}
配置集中键入所需的数量。
[**TuneD**]{.strong} 配置集中没有预定义的变量。您可以通过在配置集中创建
`[variables]`{.literal} 部分并使用以下语法来定义自己的变量：
``` screen
[variables]
variable_name=value
```
要扩展配置集中的变量值，请使用以下语法：
``` screen
${variable_name}
```
::: example
[]{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#idm139675425627136}
**例 3.8. 使用变量隔离 CPU 内核**
::: example-contents
在以下示例中，`${isolated_cores}`{.literal} 变量扩展至 `1,2`{.literal}
；因此，内核使用 `isolcpus=1,2`{.literal} 选项引导：
``` screen
[variables]
isolated_cores=1,2
[bootloader]
cmdline=isolcpus=${isolated_cores}
```
这些变量可以在单独的文件中指定。例如，您可以在 `tuned.conf`{.literal}
中添加以下行：
``` screen
[variables]
include=/etc/tuned/my-variables.conf
[bootloader]
cmdline=isolcpus=${isolated_cores}
```
如果您将 `isolated_cores=1,2`{.literal} 选项添加到
`/etc/tuned/my-variables.conf`{.literal} 文件中，则内核引导时带有
`isolcpus=1,2`{.literal} 选项。
:::
:::
::: itemizedlist
**其它资源**
-   `tuned.conf(5)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#built-in-functions-in-tuned-profiles_customizing-tuned-profiles}TuneD 配置集中的内置功能 {.title}
:::
当激活 [**TuneD**]{.strong} 配置集时，内置函数会在运行时扩展。
您可以：
::: itemizedlist
-   将各种内置函数与 [**TuneD**]{.strong} 变量结合使用
-   使用 Python 创建自定义函数，并以插件的形式将它们添加到
    [**TuneD**]{.strong} 中
:::
要调用函数，请使用以下语法：
``` screen
${f:function_name:argument_1:argument_2}
```
要扩展配置集和 `tuned.conf`{.literal} 文件的目录路径，请使用
`PROFILE_DIR`{.literal} 功能，它需要特殊语法：
``` screen
${i:PROFILE_DIR}
```
::: example
[]{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#idm139675565899536}
**例 3.9. 使用变量和内置功能隔离 CPU 内核**
::: example-contents
在以下示例中, `${non_isolated_cores}`{.literal} 变量扩展至
`0,3-5`{.literal}，且 `cpulist_invert`{.literal} 内置函数使用
`0,3-5`{.literal} 参数调用：
``` screen
[variables]
non_isolated_cores=0,3-5
[bootloader]
cmdline=isolcpus=${f:cpulist_invert:${non_isolated_cores}}
```
`cpulist_invert`{.literal} 功能颠倒 CPU 列表。对于 6-CPU
计算机，inversion 为 `1,2`{.literal}，内核使用 `isolcpus=1,2`{.literal}
命令行选项启动。
:::
:::
::: itemizedlist
**其它资源**
-   `tuned.conf(5)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#built-in-functions-available-in-tuned-profiles_customizing-tuned-profiles}TuneD 配置集中的内置功能 {.title}
:::
所有 [**TuneD**]{.strong} 配置集都提供以下内置功能：
::: variablelist
[`PROFILE_DIR`{.literal}]{.term}
:   返回配置集和 `tuned.conf`{.literal} 文件的目录路径。
[`exec`{.literal}]{.term}
:   执行进程并返回其输出。
[`断言`{.literal}]{.term}
:   比较两个参数。如果
    [*不匹配*]{.emphasis}，函数会记录第一个参数的文本并中止配置集加载。
[`assertion_non_equal`{.literal}]{.term}
:   比较两个参数。如果
    [*匹配*]{.emphasis}，函数会记录第一个参数的文本并加载 aborts
    配置集。
[`kb2s`{.literal}]{.term}
:   将 KB 转换为磁盘扇区.
[`s2kb`{.literal}]{.term}
:   将磁盘扇区转换为 KB.
[`strip`{.literal}]{.term}
:   从所有传递的参数创建字符串，并删除前导和尾随空格。
[`virt_check`{.literal}]{.term}
:   检查 [**TuneD**]{.strong} 是否在虚拟机(VM)或裸机中运行：
    ::: itemizedlist
    -   在虚拟机内，函数返回第一个参数。
    -   在裸机上，函数会返回第二个参数，即使出现错误也是如此。
    :::
[`cpulist_invert`{.literal}]{.term}
:   颠倒 CPU 列表，使其成为补充。例如，在 4 个 CPU（从 0 到
    3）的系统上，列表 `0,2,3`{.literal} 的 inversion 为 `1`{.literal}。
[`cpulist2hex`{.literal}]{.term}
:   将 CPU 列表转换为十六进制 CPU 掩码。
[`cpulist2hex_invert`{.literal}]{.term}
:   将 CPU 列表转换为十六进制 CPU 掩码，并颠倒 CPU 掩码。
[`hex2cpulist`{.literal}]{.term}
:   将十六进制 CPU 掩码转换为 CPU 列表。
[`cpulist_online`{.literal}]{.term}
:   检查列表中的 CPU 是否在线。返回仅包含在线 CPU 的列表。
[`cpulist_present`{.literal}]{.term}
:   检查列表中是否存在 CPU。返回仅包含现有 CPU 的列表。
[`cpulist_unpack`{.literal}]{.term}
:   解包 CPU 列表，格式为 `1-3,4`{.literal} 到 `1,2,3,4`{.literal}。
[`cpulist_pack`{.literal}]{.term}
:   把包 CPU 列表，格式为 `1,2,3,5`{.literal} 到 `1-3,5`{.literal}
:::
:::
::: section
::: titlepage
# []{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#creating-new-tuned-profiles_customizing-tuned-profiles}创建新的 TuneD 配置集 {.title}
:::
此流程使用自定义性能规则创建新的 [**TuneD**]{.strong} 配置集。
::: itemizedlist
**先决条件**
-   `tuned`{.literal} 服务正在运行。详情请参阅 [安装和启用
    TuneD](#getting-started-with-tuned_monitoring-and-managing-system-status-and-performance.html#installing-and-enabling-tuned_getting-started-with-tuned "安装和启用 TuneD"){.link}。
:::
::: orderedlist
**流程**
1.  在 `/etc/tuned/`{.literal}
    目录中，创建一个名为与您要创建的配置集相同的新目录：
    ``` screen
    # mkdir /etc/tuned/my-profile
    ```
2.  在新目录中，创建名为 `tuned.conf`{.literal}
    的文件。根据您的要求，在其中添加 `[main]`{.literal} 部分和插件定义。
    例如，查看 `balanced`{.literal} 配置集的配置：
    ``` screen
    [main]
    summary=General non-specialized tuned profile
    [cpu]
    governor=conservative
    energy_perf_bias=normal
    [audio]
    timeout=10
    [video]
    radeon_powersave=dpm-balanced, auto
    [scsi_host]
    alpm=medium_power
    ```
3.  要激活配置集，请使用：
    ``` screen
    # tuned-adm profile my-profile
    ```
4.  验证 [**TuneD**]{.strong} 配置集是否活跃，并应用系统设置：
    ``` screen
    $ tuned-adm active
    Current active profile: my-profile
    ```
    ``` screen
    $ tuned-adm verify
    Verfication succeeded, current system settings match the preset profile.
    See tuned log file ('/var/log/tuned/tuned.log') for details.
    ```
:::
::: itemizedlist
**其它资源**