place and for how long mining pools would be able to do
it. Our results reveal that Ethereum pools regularly have the
opportunity to temporarily censor transactions for more than
two minutes, but historically we registered events allowing for
3-minute-long censoring.
During our one-month measurement, we observed that the
prominent pools managed to mine sequences of blocks as long
as 9. The results are shown in Figure 7 which depicts the
lengths of consecutive blocks the top 5 mining pools were
able to produce. Ethermine managed to mine four 8-block long
sequences and Sparkpool was able to generate 9-block long
sequences twice.
At the time of our measurements, the accumulated computa-
tional power of all Ethermine’s miners was 25.9% of the whole
Ethereum platform [20]. Therefore, the theoretical chance of
mining a sequence of 8 consecutive blocks would be 0.2598 =
2 × 10−5. During one month, there were 201,086 blocks in
the main chain. With a theoretical chance of 2 × 10−5, this
means that Ethermine should be able to mine 8 consecutive
blocks 4 times per month (2 × 10−5 × 201, 086 ≈ 4) exactly
the value we observed. In the case of Sparkpool, which has a
theoretical chance of mining 9 consecutive blocks of 0.2269
it should take at least three months to mine such a sequence
(0.2269 × 201, 086 ≈ 0.3) however it did so twice in a month.
Since blocks were not announced all together, like in a block
withholding attack, and presented an average inter-block time,
it is unlikely that Sparkpool performed such an attack [24].
It
the current values that are used to
consider a block as ﬁnal are too optimistic, given the fraction
of mining power that is currently held by mining pools. To
further justify this observation, we looked beyond our one-
month experiment, and analyzed the whole blockchain. We
observed 102, 41, 4 and 1 sequences of 10, 11, 12 and 14
consecutive blocks, respectively. The longest sequence ever
recorded, consisting of 14 blocks, was mined by Ethermine
from block height 5,899,411 to 5,899,424. We do not know
the exact computational power of Ethermine at the time, but
if we assume that it was similar to its current power (0.259)
the probability of such a long sequence would be around once
in 1,000 years.
is more likely that
IV. RELATED WORK
A body of work has studied decentralization, the key dis-
tinctive feature of blockchain with respect to more traditional
centralized approaches, and an important property for high
resistance against censorship of individual transactions [10],
[17], [25], [26]. Luu et. al [25] reported that around 80% of
the mining power in Ethereum resides in less than ten mining
pools, which is corroborated by our observations. Gencer et.
al [10] showed that both Bitcoin and Ethereum suffer from a
centralized mining process, due to mining pools. Miller et.
al [17] showed that 75% of the mining power in Bitcoin
resides in just 2% of the nodes. Eyal and Sirer [26] described
an attack to Bitcoin preventing decentralization, in which ra-
tional miners prefer to join the selﬁsh miners and the resulting
colluding group becomes a majority. Our observations conﬁrm
these hypotheses and show that Ethereum mining pools have
the power to temporarily censor transactions and harm their
commit time by mining long sequences of blocks.
Previous research has focused on the time it takes for a
transaction to commit [1], [8], [19]. Nakamoto [1] showed
the probability of not replacing a Bitcoin block B containing
(cid:4) without t can be made
transaction t with a malicious block B
arbitrarily high, whereas Buterin [19] studied the correspond-
ing probability for Ethereum. In Bitcoin, the probability that is
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 11:28:27 UTC from IEEE Xplore.  Restrictions apply. 
250
deemed safe is achieved after 6 blocks, corresponding to one
hour, whereas in Ethereum this is achieved after 12 blocks,
corresponding to around 3 minutes [8]. In our one-month
observations we observed two instances where a single mining
pool was able to mine 9 consecutive blocks twice, and we also
observed that over all the blocks ever mined, a mining pool
was able to mine a sequence of 14 consecutive blocks. This
means that mining pools are indeed able to censor transactions
and rewrite the blockchain, and therefore should raise concerns
about the security of the network.
Previous work attempted to describe the causes of mining
empty blocks [27], [28]. In our work, we observed that 1.43%
of Ethereum blocks are empty and most mining pools mined
empty blocks, which suggests mining empty blocks pays off.
V. LESSONS LEARNED
Our experiment shed light on strengths and challenges of
the Ethereum network, while offering some surprises. The
low propagation delay we observed can be considered a
strength of the Ethereum network. In contrast, mining pool
centralization can lead to challenging and surprising selﬁsh
behaviors. Commit delays in Ethereum have been improving
relatively to the delays reported in prior studies, which can
be mostly explained by the adoption of shorter inter-block
times in Ethereum [20]. Still, we identiﬁed selﬁsh behaviors
that may place real threats to the throughput of the system
– most notably, empty blocks and one-miner forks. They
all represent distortions of the incentive model of Ethereum,
which encourage selﬁsh nodes to waste system resources
(namely, mining power and network capacity) in intentional
efforts that do not contribute to the progress of the main
blockchain. To the best of our knowledge, these behaviors
were not anticipated in the original design of the system [2].
Hence, current implementations tolerate them. While our study
found relatively scarce occurrences of such selﬁsh behaviors,
with a low impact on the overall throughput of the system,
they were observed consistently over the experiments. This
suggests that these behaviors are proﬁtable to selﬁsh nodes,
hence there is a risk that the frequency and impact of such
situations grows in the future.
Regarding one-miner forks, we argue that the Ethereum
protocol should forbid referencing uncles mined by miners
that have already mined a main block of the same height.
This would – as our results show – save around 1% of the
platform’s overall computational resources which are currently
spent on mining forks, while at the same time giving a higher
chance that small miners collect those rewards. The uncle
block rate of a mining pool would be effectively slowed down,
even if the mining pool tried to use distinct coin addresses
for claiming the rewards, since mining power would be split
among those addresses. Additionally, we have observed that,
in 56% of cases, mining pools appeared to be using their full
mining power for mining distinct versions of the same block
(i.e. with the same transaction set) with the same height. In
the remaining 44% of the cases, they were mining different
blocks (i.e. with distinct transaction sets) with the same height.
This means our solution would effectively deter mining pools
from using their full mining power to mine distinct versions of
the same block, in more than half of the one-miner fork cases.
Further, producing such blocks could be considered a protocol
violation and a miner could be punished by having funds
removed from his coinbase account [29]. A robust solution
to put an end to empty blocks should be designed, to prevent
them from harming the system throughput. However, this is a
challenging endeavor that is left for future work.
Our study also highlights that the emergence of mining
pools has rendered some initial design assumptions [19] obso-
lete today. Among multiple ﬁndings of our study that support
this claim, we observed that the usual 12-block conﬁrmation
rule of Ethereum may not provide the strong probabilistic
guarantees that are promised by probabilistic analysis that
unrealistically rely on a ﬂat and large universe of individual
miners. More concretely, we observed that the centralization
of most mining power on Ethereum has already enabled
alarmingly long sequences of consecutive blocks (lengths of
8, 9 and even 14 blocks) generated by a single mining pool.
This emphasizes that, for permissionless blockchain protocols
whose design allows mining pool-like extensions, these need
to always be considered as ﬁrst-class elements of the ecosys-
tem at the earliest design stages. However, we observe that
the underlying system model considered by many research
papers that study or propose new blockchain implementations
omits mining pool organizations from their underlying system
models [7]–[9]. This common practice should be avoided by
the research community.
Our study also revealed that some key trends changed in a
short time span, such as: i) the median waiting time for 12
blocks decreased from 200 seconds to 189 seconds [8]; ii)
a substantial increase in out-of-order committed transactions
from 6.18% to 11.54% [8]; iii) the proportion of forked blocks
increased by more than 1% and fork lengths increased as
well. This conﬁrms that large-scale permissionless blockchain
systems are eminently dynamic, and highlights the importance
of studies like ours to take place regularly. We make our tools
available to encourage this. Finally, we have systematically
conﬁrmed that
location of a node has a
consistent impact on the level of service that node gets from
the system. More than a symptom that the set of nodes is not
evenly spread across the globe, this reﬂects the fact that a large
portion of Ethereum’s activity now depends on a small and
poorly dispersed subset of nodes that comprises the gateways
of the major mining pools. This stresses the importance of
multi-observer measurement approaches when characterizing
permissionless blockchains, as followed by our study.
the geographical
VI. CONCLUSION
We have described our experience studying the Ethereum
network from several geographically dispersed observation
points. We identiﬁed previously undocumented forms of selﬁsh
behavior and showed that the prevalence of powerful mining
pools exacerbates the geographical impact on block propa-
gation delays. We provide a set of open measurement and
processing tools, as well as the data set of the collected
measurements, to promote further research on permissionless
blockchains.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 11:28:27 UTC from IEEE Xplore.  Restrictions apply. 
251
REFERENCES
[1] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,” 2008.
[Online]. Available: http://bitcoin.org/bitcoin.pdf
[2] G. Wood, “Ethereum: A secure decentralised generalised transaction
ledger,” 2014.
[3] “Conﬁguring
parity
ethereum - wiki,”
https://wiki.parity.io/
Conﬁguring-Parity-Ethereum, access: 2019-12-11, 2019.
[4] “Geth
1.7
default
conﬁguration,”
https://github.com/ethereum/
go-ethereum/blob/release/1.7/node/defaults.go,access:2019-12-11,
2017.
[5] “Bitcoin Mining Pool Stats,” https://miningpoolstats.stream/bitcoin, ac-
[6] “Ethereum Mining Pool Stats,” https://miningpoolstats.stream/ethereum,
cess: 2019-12-05.
access: 2019-12-05.
[7] C. Decker and R. Wattenhofer, “Information propagation in the bitcoin
network,” in Peer-to-Peer Computing (P2P), 2013 IEEE Thirteenth
International Conference, September 2013, pp. 1–10.
[8] I. Weber, V. Gramoli, A. Ponomarev, M. Staples, R. Holz, A. B.
Tran, and P. Rimba, “On availability for blockchain-based systems,”
in Reliable Distributed Systems (SRDS), 2017 IEEE 36th Symposium.
IEEE, September 2017, pp. 64–73.
[9] S. Kim, Z. Ma, S. Murali, J. Mason, A. Miller, and M. Bailey,
“Measuring ethereum network peers,” in IMC ’18 Proceedings of the
Internet Measurement Conference 2018. ACM, November 2018, pp.
91–104.
[10] A. E. Gencer, S. Basu, I. Eyal, R. van Renesse, and E. G. Sirer,
“Decentralization in bitcoin and ethereum networks,” arXiv preprint
arXiv:1801.03998, 2018.
[11] Ethernodes, “Ethereum mainnet statistics,” https://www.ethernodes.org/,
[12] “Python data analysis library,” https://pandas.pydata.org/, access: 2019-
access: 2019-12-05.
12-05, 2019.
[13] “Numpy - the fundamental package for scientiﬁc computing with
python,” https://numpy.org/, access: 2019-12-05, 2019.
[14] G. W. Andreas M. Antonopoulos, Mastering Ethereum. O’Reilly, 2018.
[15] C. D. Murta, P. R. Torres, and P. Mohapatra, “Characterizing quality of
time and topology in a time synchronization network,” in GLOBECOM,
2006.
[16] P. Eugster, R. Guerraoui, A.-M. Kermarrec, and L. Massouli, “From
IEEE, 2004.
epidemics to distributed computing,” in IEEE Computer.
[17] A. Miller, J. Litton, A. Pachulski, N. Gupta, D. Levin, N. Spring,
and B. Bhattacharjee, “Discovering bitcoins public topology and
inﬂuential nodes,” May 2015, accessed: 2020-03-10. [Online]. Available:
http://cs.umd.edu/projects/coinscope/coinscope.pdf
[18] M. Bez, G. Fornari, and T. Vardanega, “The scalability challenge of
ethereum: An initial quantitative analysis,” in 2019 IEEE International
Conference on Service-Oriented System Engineering (SOSE), 2019.
[19] V. Buterin, “On slow and fast block times,” https://blog.ethereum.org/
2015/09/14/on-slow-and-fast-block-times/,access:2019-12-05, 2015.
[20] Etherscan, “Ethereum blockchain explorer,” https://etherscan.io, access:
2019-12-05.
[21] Ethereum, “Eip-1234: Constantinople difﬁculty bomb delay and
block
https://blog.ethereum.org/2019/02/22/
ethereum-constantinople-st-petersburg-upgrade-announcement/,access:
2020-03-11, 2018.
adjustment,”
reward
[22] H.
Jameson,
“Ethereum
constantinople
petersburg
upgrade
https://blog.ethereum.org/2019/02/22/
ethereum-constantinople-st-petersburg-upgrade-announcement/,access:
2020-03-11, 2019.
announcement,”
st.
[23] Etherchain, “Etherchain - the ethereum blockchain explorer,” https:
//www.etherchain.org, access: 2019-12-05.
[24] Y. Kwon, D. Kim, Y. Son, E. Vasserman, and Y. Kim, “Be selﬁsh and
avoid dilemmas: Fork after withholding (faw) attacks on bitcoin,” in
Proceedings of the 2017 ACM SIGSAC Conference on Computer and
Communications Security. ACM, 2017, pp. 195–209.
[25] L. Luu, Y. Velner, J. Teutsch, and P. Saxena, “Smart pool: Practical
decentralized pooled mining.” IACR Cryptology ePrint Archive, vol.
2017, p. 19, 2017.
[26] I. Eyal and E. G. Sirer, “Majority is not enough: Bitcoin mining is
vulnerable,” Communications of the ACM, vol. 61, no. 7, pp. 95–102,
2018.
[27] P. McCorry, A. Hicks, and S. Meiklejohn, “Smart contracts for bribing
miners,” in International Conference on Financial Cryptography and
Data Security. Springer, 2018, pp. 3–18.
[28] K. Koˇsˇt´al, T. Krupa, M. Gembec, I. Vereˇs, M. Ries, and I. Kotuliak,
“On transition between pow and pos.”
[29] Y. Xiao, N. Zhang, W. Lou, and Y. T. Hou, “A survey of dis-
tributed consensus protocols for blockchain networks,” arXiv preprint
arXiv:1904.04098, 2019.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 11:28:27 UTC from IEEE Xplore.  Restrictions apply. 
252