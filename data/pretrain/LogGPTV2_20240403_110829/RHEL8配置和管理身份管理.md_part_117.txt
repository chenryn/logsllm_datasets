::: table
[]{#using-ansible-to-manage-dns-records-in-idm_configuring-and-managing-idm.html#idm140587718709360}
**表 79.5. \"SRV\"记录选项**
::: table-contents
  [*选项*]{.emphasis}                                [*描述*]{.emphasis}                                                                                                                                                                                                                                                 [*示例*]{.emphasis}
  -------------------------------------------------- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ----------------------------------------------------------------------------------------------------------------------------------
  `--srv-rec`{.literal}=[*SRVRECORD*]{.emphasis}     传递单个 SRV 记录或 SRV 记录列表。在右侧的示例中，\_ [**ldap.\_tcp**]{.strong} 定义 SRV 记录的服务类型和连接协议。`srv-rec`{.literal} 选项定义优先级、权重、端口和目标值。示例中的权重值为 51 和 49（总和为 100），它们代表使用特定记录的可能性（以百分比表示）。   `# ipa dnsrecord-add idm.example.com _ldap._tcp --srv-rec="0 51 389 server1.idm.example.com."`{.literal}
                                                                                                                                                                                                                                                                                                                         `# IPA dnsrecord-add server.idm.example.com _ldap._tcp --srv-rec="1 49 389 server2.idm.example.com."`{.literal}
  `--srv-priority`{.literal}=[*number*]{.emphasis}   设置记录的优先级。某一服务类型可以有多个 SRV 记录。优先级(0 - 65535)设置记录的排名；数值越低，优先级越高。服务必须首先使用优先级最高的记录。                                                                                                                        `# IPA dnsrecord-mod server.idm.example.com _ldap._tcp --srv-rec="1 49 389 server2.idm.example.com." --srv-priority=0`{.literal}
  `--srv-weight`{.literal}=[*number*]{.emphasis}     设置记录的权重。这有助于确定优先级相同的 SRV 记录的顺序。集合权重应加到 100，代表使用特定记录的可能性（百分比）。                                                                                                                                                   `# IPA dnsrecord-mod server.idm.example.com _ldap._tcp --srv-rec="0 49 389 server2.idm.example.com." --srv-weight=60`{.literal}
  `--srv-port`{.literal}=[*number*]{.emphasis}       指定目标主机上 服务的端口。                                                                                                                                                                                                                                         `# IPA dnsrecord-mod server.idm.example.com _ldap._tcp --srv-rec="0 60 389 server2.idm.example.com." --srv-port=636`{.literal}
  `--srv-target`{.literal}=[*string*]{.emphasis}     指定目标主机的域名。如果域中的服务不可用，这可以是单个句点(.)。                                                                                                                                                                                                      
:::
:::
::: itemizedlist
**其它资源**
-   有关如何使用 `ipa dnsrecord-add`{.literal} 以及 IdM 支持哪些 DNS
    记录类型的更多信息，请运行 `ipa dnsrecord-add --help`{.literal}
    命令。
:::
:::
::: section
::: titlepage
# []{#using-ansible-to-manage-dns-records-in-idm_configuring-and-managing-idm.html#ensuring-the-presence-of-a-and-aaaa-dns-records-in-idm-using-ansible_using-ansible-to-manage-dns-records-in-idm}确保使用 Ansible 在 IdM 中存在 A 和 AAAA DNS 记录 {.title}
:::
本节演示身份管理(IdM)管理员如何使用 Ansible playbook 确保存在特定 IdM
主机的 A 和 AAAA 记录。在下面的示例中，IdM 管理员确保
[**idm.example.com**]{.strong} DNS 区域中存在 [**host1**]{.strong} 的 A
和 AAAA 记录。
::: itemizedlist
**先决条件**
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。这是执行流程中步骤的主机。
-   您知道 IdM 管理员密码。
-   [**idm.example.com**]{.strong} 区域存在，并由 IdM DNS 管理。有关在
    IdM DNS 中添加主 DNS 区域的更多信息，[请参阅使用 Ansible playbook
    管理 IdM DNS
    区域](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#using-ansible-playbooks-to-manage-idm-dns-zones_configuring-and-managing-idm){.link}。
:::
::: orderedlist
**流程**
1.  导航到
    `/usr/share/doc/ansible-freeipa/playbooks/dnsrecord`{.literal}
    目录：
    ``` literallayout
    $ cd /usr/share/doc/ansible-freeipa/playbooks/dnsrecord
    ```
2.  打开清单文件，并确保 `[ipaserver]`{.literal} 部分中列出了您要配置的
    IdM 服务器。例如，要指示 Ansible 配置
    [**server.idm.example.com**]{.strong}，请输入：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
3.  生成 ensure-A- [**and-AAAA-records-are-present.yml**]{.strong}
    Ansible playbook 文件的副本。例如：
    ``` literallayout
    $ cp ensure-A-and-AAAA-records-are-present.yml ensure-A-and-AAAA-records-are-present-copy.yml
    ```
4.  打开 [**ensure-A-and-AAAA-records-are-present-copy.yml**]{.strong}
    文件以进行编辑。
5.  通过在 `ipadnsrecord`{.literal} 任务部分设置以下变量来调整文件：
    ::: itemizedlist
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员密码。
    -   将 `zone_name`{.literal} 变量设置为
        [**idm.example.com**]{.strong}。
    -   在 `records`{.literal} 变量中，将 `name`{.literal} 变量设置为
        [**host1**]{.strong}，并将 `a_ip_address`{.literal} 变量设置为
        [**192.168.122.123**]{.strong}。
    -   在 `records`{.literal} 变量中，将 `name`{.literal} 变量设置为
        [**host1**]{.strong}，并将 `aaaa_ip_address`{.literal}
        变量设置为 [**::1**]{.strong}。
        这是当前示例修改的 Ansible playbook 文件：
    :::
    ``` literallayout
    ---
    - name: Ensure A and AAAA records are present
      hosts: ipaserver
      become: true
      gather_facts: false
      tasks:
      # Ensure A and AAAA records are present
      - name: Ensure that 'host1' has A and AAAA records.
        ipadnsrecord:
          ipaadmin_password: Secret123
          zone_name: idm.example.com
          records:
          - name: host1
            a_ip_address: 192.168.122.123
          - name: host1
            aaaa_ip_address: ::1
    ```
6.  保存该文件。
7.  运行 playbook:
    ``` literallayout
    $ ansible-playbook -v -i inventory.file ensure-A-and-AAAA-records-are-present-copy.yml
    ```
:::
::: itemizedlist
**其它资源**
-   有关 A 和 AAAA 记录的更多信息，请参阅 [IdM 中的 DNS
    记录](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#dns-records-in-idm_managing-dns-records-in-idm){.link}。
-   您可以在
    `/usr/share/doc/ansible -freeipa/ 目录中的 README-dnsrecord.md`{.literal}
    Markdown 文件中看到 ansible``{=html} -freeipa``{=html}
    `ipadnsrecord 模块的`{.literal} 更多 Ansible playbook
    示例。该文件还包含 `ipadnsrecord`{.literal} 变量的定义。
-   您可以在
    `/usr/share/doc/ansible-freeipa/playbooks/dnsrecord 目录中看到 ipadnsrecord`{.literal}
    模块的``{=html} Ansible playbook 示例。
:::
:::
::: section
::: titlepage
# []{#using-ansible-to-manage-dns-records-in-idm_configuring-and-managing-idm.html#ensuring-the-presence-of-a-and-ptr-dns-records-in-idm-using-ansible_using-ansible-to-manage-dns-records-in-idm}确保使用 Ansible 在 IdM 中存在 A 和 PTR DNS 记录 {.title}
:::
本节介绍身份管理(IdM)管理员如何使用 Ansible playbook 来确保存在具有对应
PTR 记录的特定 IdM 主机的 A 记录。在以下流程中使用的示例中，IdM
管理员确保在 [**idm.example.com**]{.strong} 区域中存在 IP 地址为
[**192.168.122.45**]{.strong} 的 [**host1**]{.strong} 的 A 和 PTR 记录。
::: itemizedlist
**先决条件**
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。这是执行流程中步骤的主机。
-   您知道 IdM 管理员密码。
-   [**idm.example.com**]{.strong} DNS 区域存在，并由 IdM DNS
    管理。有关在 IdM DNS 中添加主 DNS 区域的更多信息，[请参阅使用
    Ansible playbook 管理 IdM DNS
    区域](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#using-ansible-playbooks-to-manage-idm-dns-zones_configuring-and-managing-idm){.link}。
:::
::: orderedlist
**流程**
1.  导航到
    `/usr/share/doc/ansible-freeipa/playbooks/dnsrecord`{.literal}
    目录：
    ``` literallayout
    $ cd /usr/share/doc/ansible-freeipa/playbooks/dnsrecord
    ```
2.  打开清单文件，并确保 `[ipaserver]`{.literal} 部分中列出了您要配置的
    IdM 服务器。例如，要指示 Ansible 配置
    [**server.idm.example.com**]{.strong}，请输入：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
3.  生成 [**ensure-dnsrecord-with-reverse-is-present.yml**]{.strong}
    Ansible playbook 文件的副本。例如：
    ``` literallayout
    $ cp ensure-dnsrecord-with-reverse-is-present.yml ensure-dnsrecord-with-reverse-is-present-copy.yml
    ```
4.  打开
    [**ensure-dnsrecord-with-reverse-is-present-copy.yml**]{.strong}
    文件以进行编辑。
5.  通过在 `ipadnsrecord`{.literal} 任务部分设置以下变量来调整文件：
    ::: itemizedlist
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员密码。
    -   将 `name`{.literal} 变量设置为 [**host1**]{.strong}。
    -   将 `zone_name`{.literal} 变量设置为
        [**idm.example.com**]{.strong}。
    -   将 `ip_address`{.literal} 变量设置为
        [**192.168.122.45**]{.strong}。
    -   将 `create_reverse`{.literal} 变量设置为 [**yes**]{.strong}。
        这是当前示例修改的 Ansible playbook 文件：
    :::
    ``` literallayout
    ---
    - name: Ensure DNS Record is present.
      hosts: ipaserver
      become: true
      gather_facts: false
      tasks:
      # Ensure that dns record is present
      - ipadnsrecord:
          ipaadmin_password: Secret123
          name: host1
          zone_name: idm.example.com
          ip_address: 192.168.122.45
          create_reverse: yes
          state: present
    ```
6.  保存该文件。
7.  运行 playbook:
    ``` literallayout
    $ ansible-playbook -v -i inventory.file ensure-dnsrecord-with-reverse-is-present-copy.yml
    ```
:::
::: itemizedlist
**其它资源**
-   有关 A 和 PTR DNS 记录的更多信息，请参阅 [IdM 中的 DNS
    记录](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#dns-records-in-idm_managing-dns-records-in-idm){.link}。
-   您可以在
    `/usr/share/doc/ansible -freeipa/ 目录中的 README-dnsrecord.md`{.literal}
    Markdown 文件中看到 ansible``{=html} -freeipa``{=html}
    `ipadnsrecord 模块的`{.literal} 更多 Ansible playbook
    示例。该文件还包含 `ipadnsrecord`{.literal} 变量的定义。
-   您可以在
    `/usr/share/doc/ansible-freeipa/playbooks/dnsrecord 目录中看到 ipadnsrecord`{.literal}
    模块的``{=html} Ansible playbook 示例。
:::
:::
::: section
::: titlepage
# []{#using-ansible-to-manage-dns-records-in-idm_configuring-and-managing-idm.html#ensuring-the-presence-of-multiple-dns-records-in-idm-using-ansible_using-ansible-to-manage-dns-records-in-idm}确保使用 Ansible 在 IdM 中存在多个 DNS 记录 {.title}
:::
本节介绍身份管理(IdM)管理员如何使用 Ansible playbook 确保多个值与特定的
IdM DNS 记录关联。在以下流程中使用的示例中，IdM 管理员确保
[**idm.example.com**]{.strong} DNS 区域中存在 [**host1**]{.strong}
的多个 A 记录。
::: itemizedlist
**先决条件**
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。这是执行流程中步骤的主机。
-   您知道 IdM 管理员密码。
-   [**idm.example.com**]{.strong} 区域存在，并由 IdM DNS 管理。有关在
    IdM DNS 中添加主 DNS 区域的更多信息，[请参阅使用 Ansible playbook
    管理 IdM DNS
    区域](#using-ansible-playbooks-to-manage-idm-dns-zones_configuring-and-managing-idm.html "第 74 章 使用 Ansible playbook 管理 IdM DNS 区域"){.link}。
:::
::: orderedlist
**流程**
1.  导航到
    `/usr/share/doc/ansible-freeipa/playbooks/dnsrecord`{.literal}
    目录：
    ``` literallayout
    $ cd /usr/share/doc/ansible-freeipa/playbooks/dnsrecord
    ```
2.  打开清单文件，并确保 `[ipaserver]`{.literal} 部分中列出了您要配置的
    IdM 服务器。例如，要指示 Ansible 配置
    [**server.idm.example.com**]{.strong}，请输入：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
3.  生成 [**ensure-presence-multiple-records.yml**]{.strong} Ansible
    playbook 文件的副本。例如：
    ``` literallayout
    $ cp ensure-presence-multiple-records.yml ensure-presence-multiple-records-copy.yml
    ```
4.  打开 [**ensure-presence-multiple-records-copy.yml**]{.strong}
    文件进行编辑。
5.  通过在 `ipadnsrecord`{.literal} 任务部分设置以下变量来调整文件：
    ::: itemizedlist
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员密码。
    -   在 `records`{.literal} 部分中，将 `name`{.literal} 变量设置为
        [**host1**]{.strong}。
    -   在 `records`{.literal} 部分中，将 `zone_name`{.literal}
        变量设置为 [**idm.example.com**]{.strong}。
    -   在 `records`{.literal} 部分中，将 `a_rec`{.literal} 变量设置为
        [**192.168.122.112，并将 192.168.122.1**]{.strong} 22 设为
        [**192.168.122.122**]{.strong}。
    -   在 record 部分中定义第二个 `记录`{.literal} ：
        ::: itemizedlist
        -   将 `name`{.literal} 变量设置为 [**host1**]{.strong}。
        -   将 `zone_name`{.literal} 变量设置为
            [**idm.example.com**]{.strong}。
        -   将 `aaaa_rec`{.literal} 变量设置为 [**::1**]{.strong}。
        :::
        这是当前示例修改的 Ansible playbook 文件：
    :::
    ``` literallayout
    ---
    - name: Test multiple DNS Records are present.
      hosts: ipaserver
      become: true
      gather_facts: false
      tasks:
      # Ensure that multiple dns records are present
      - ipadnsrecord:
          ipaadmin_password: Secret123