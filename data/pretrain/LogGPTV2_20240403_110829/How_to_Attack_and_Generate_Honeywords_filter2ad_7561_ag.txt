### References

[28] M. Golla and M. Dürmuth, “On the accuracy of password strength meters,” in *Proc. ACM CCS 2018*, pp. 1567–1582.

[29] D. Goodin, “Anatomy of a hack: How crackers ransack passwords like ‘qeadzcwrsfxv1331’,” May 2013, [http://arstechnica.com/security/2013/05/how-crackers-make-minced-meat-out-of-your-passwords/](http://arstechnica.com/security/2013/05/how-crackers-make-minced-meat-out-of-your-passwords/).

[30] Y. Guo, Z. Zhang, and Y. Guo, “Superword: A honeyword system for achieving higher security goals,” *Comput. Secur.*, vol. 103, p. 101689, 2021.

[31] H. Habib, J. Colnago, W. Melicher, B. Ur, S. Segreti, L. Bauer, N. Christin, and L. Cranor, “Password creation in the presence of blacklists,” *Proc. USEC 2017*, pp. 1–11.

[32] A. Hanamsagar, S. S. Woo, C. Kanich, and J. Mirkovic, “Leveraging semantic transformation to investigate password habits and their causes,” in *Proc. ACM CHI 2018*, pp. 1–10.

[33] “Resetting passwords to keep your files safe,” Dropbox Blog, Aug. 2016, [https://blogs.dropbox.com/dropbox/2016/08/resetting-passwords-to-keep-your-files-safe/](https://blogs.dropbox.com/dropbox/2016/08/resetting-passwords-to-keep-your-files-safe/).

[34] A. Holmes, “533 million Facebook users’ phone numbers and personal data have been leaked online,” Business Insider, Apr. 2021, [https://www.businessinsider.com/stolen-data-of-533-million-facebook-users-leaked-online-2021-4](https://www.businessinsider.com/stolen-data-of-533-million-facebook-users-leaked-online-2021-4).

[35] A. Juels and R. L. Rivest, “Honeywords: Making password-cracking detectable,” in *Proc. ACM CCS 2013*, pp. 145–160.

[36] N. Karapanos, C. Marforio, C. Soriente, and S. Capkun, “Sound-Proof: Usable two-factor authentication based on ambient sound,” in *Proc. USENIX SEC 2015*, pp. 483–498.

[37] K. Krawiecka, A. Kurnikov, A. Paverd, M. Mannan, and N. Asokan, “Safekeeper: Protecting web passwords using trusted execution environments,” in *Proc. WWW 2018*, pp. 349–358.

[38] “Researcher finds credentials for 92 million users of DNA testing firm MyHeritage,” Krebs on Security, June 2018, [https://krebsonsecurity.com/2018/06/researcher-finds-credentials-for-92-million-users-of-dna-testing-firm-myheritage/](https://krebsonsecurity.com/2018/06/researcher-finds-credentials-for-92-million-users-of-dna-testing-firm-myheritage/).

[39] R. W. Lai, C. Egger, M. Reinert, S. S. Chow, M. Maffei, and D. Schröder, “Simple password-hardened encryption services,” in *Proc. USENIX SEC 2018*, pp. 1405–1421.

[40] J. Ma, W. Yang, M. Luo, and N. Li, “A study of probabilistic password models,” in *Proc. IEEE S&P 2014*, pp. 689–704.

[41] S. Mamonov and R. Benbunan-Fich, “The impact of information security threat awareness on privacy-protective behaviors,” *Comput. Hum Behav.*, vol. 83, pp. 32–44, 2018.

[42] M. L. Mazurek, S. Komanduri, T. Vidas, L. F. Cranor, P. G. Kelley, R. Shay, and B. Ur, “Measuring password guessability for an entire university,” in *Proc. ACM CCS 2013*, pp. 173–186.

[43] W. Melicher, B. Ur, S. M. Segreti, S. Komanduri, L. Bauer, N. Christin, and L. F. Cranor, “Fast, lean, and accurate: Modeling password guessability using neural networks,” in *Proc. USENIX SEC 2016*.

[44] C. Morris, “Massive data leak exposes 700 million LinkedIn users,” Fortune, June 2021, [https://fortune.com/2021/06/30/linkedin-data-theft-700-million-users-personal-information-cybersecurity/](https://fortune.com/2021/06/30/linkedin-data-theft-700-million-users-personal-information-cybersecurity/).

[45] A. Naiakshina, A. Danilova, C. Tiefenau, M. Herzog, S. Dechand, and M. Smith, “Why do developers get password storage wrong?: A qualitative usability study,” in *Proc. ACM CCS 2017*, pp. 311–328.

[46] P. Negi, P. Sharma, V. Jain, and B. Bahmani, “K-means++ vs. Behavioral biometrics: One loop to rule them all,” in *Proc. NDSS 2018*, pp. 1–15.

[47] T. Pham, “Four Years Later, Anthem Breached Again: Hackers Stole Credentials,” Duo Security, Feb. 2015, [http://duo.sc/2ene0Pr](http://duo.sc/2ene0Pr).

[48] B. Ur, “Supporting password-security decisions with data,” Ph.D. dissertation, Carnegie Mellon University, 2016.

[49] “Passwords are not lame and they’re not dead,” IT Management, Aug. 2017, [https://it.toolbox.com/blogs/itmanagement/passwords-are-not-lame-and-theyre-not-dead-heres-why-072417](https://it.toolbox.com/blogs/itmanagement/passwords-are-not-lame-and-theyre-not-dead-heres-why-072417).

[50] H. Varun, “Qatar National Bank Suffers Massive Breach,” Bank Info Security, April 2016, [http://www.bankinfosecurity.com/qatar-national-bank-suffers-massive-breach-a-9068](http://www.bankinfosecurity.com/qatar-national-bank-suffers-massive-breach-a-9068).

[51] D. Votipka, R. Stevens, E. M. Redmiles, J. Hu, and M. L. Mazurek, “Hackers vs. testers: A comparison of software vulnerability discovery processes,” in *Proc. IEEE S&P 2018*, pp. 134–151.

[52] D. Wang, H. Cheng, P. Wang, X. Huang, and G. Jian, “Zipf’s law in passwords,” *IEEE Trans. Inform. Foren. Secur.*, vol. 12, no. 11, pp. 2776–2791, 2017.

[53] D. Wang, H. Cheng, P. Wang, J. Yan, and X. Huang, “A security analysis of honeywords,” in *Proc. NDSS 2018*, pp. 1–15.

[54] D. Wang, D. He, H. Cheng, and P. Wang, “FuzzyPSM: A new password strength meter using fuzzy probabilistic context-free grammars,” in *Proc. IEEE/IFIP DSN 2016*, pp. 595–606, [http://bit.ly/2ahJ8CO](http://bit.ly/2ahJ8CO).

[55] D. Wang, P. Wang, D. He, and Y. Tian, “Birthday, name and bifacial-security: Understanding passwords of Chinese web users,” in *Proc. USENIX SEC 2019*, pp. 1537–1555.

[56] D. Wang, Z. Zhang, P. Wang, J. Yan, and X. Huang, “Targeted online password guessing: An underestimated threat,” in *Proc. ACM CCS 2016*, pp. 1242–1254.

[57] K. C. Wang and M. K. Reiter, “How to end password reuse on the web,” in *Proc. NDSS 2019*, pp. 1–15.

[58] M. Weir, S. Aggarwal, B. de Medeiros, and B. Glodek, “Password cracking using probabilistic context-free grammars,” in *Proc. IEEE S&P 2009*, pp. 391–405.

[59] D. Wheeler, “Zxcvbn: Low-budget password strength estimation,” in *Proc. USENIX SEC 2016*, pp. 157–173.

### Appendix

#### A. Detailed Information About Our Datasets

We evaluate the existing honeyword methods and our proposed ones based on 11 large real password datasets (see Table III), totaling 105.44 million passwords. Three of our datasets were leaked in MD5 hash, and we managed to recover an overwhelming fraction of them using off-the-shelf cracking tools like Hashcat and John the Ripper, various trawling guessing models [40], and the targeted guessing model TarGuess [56] on a common PC with GPU over one week. Specifically, Rootkit initially consists of 71,228 passwords, and we recovered 97.46% of them; QNB initially contains 97,415 passwords and was leaked from the Qatar National Bank, located in the Middle East, in April 2016 [50], and we recovered 79,580 (81.69%) of them; Mango initially contains 1,113,638 passwords, and we recovered 96.51% of them.

Particularly, four password datasets (i.e., 12306, ClixSense, Rootkit, and QNB) are associated with various kinds of PII as shown in Table III. To facilitate a more comprehensive empirical analysis of honeyword security under targeted attackers, we further matched the non-PII-associated password datasets with these PII-associated password datasets by using email. As a result, this produced nine PII-associated password datasets as shown in Table IV: (1) The four Chinese PII-associated datasets are obtained by matching the corresponding non-PII-associated dataset with 12306; (2) The four US-English ones are: PII-Rootkit, PII-ClixSense, and two other ones obtained by matching 000webhost and Yahoo with ClixSense, respectively; and (3) PII-QNB, which is QNB itself. Note that the non-PII-associated US-English dataset Rockyou includes neither email nor NID, and thus it cannot be matched.

We further employed two auxiliary PII datasets that do not have passwords (i.e., Hotel and 51job) to augment each Chinese password dataset to obtain more PII-associated accounts by matching email or NID. We note that many PII-associated accounts miss some important PII attributes, and they can be supplemented by using the auxiliary PII datasets.

All our 11 datasets were hacked and made public on the Internet between 2009 and 2016, and they may be a bit old. However, they can represent current user password behaviors due to three reasons. First, three datasets (i.e., 000webhost, ClixSense, and Qatar National Bank (QNB)) were leaked after 2015 and may well exhibit up-to-date user password behaviors. Second, human beings' cognitive capabilities (e.g., memory) remain rather stable over time, and Bonneau has revealed that “passwords have changed only marginally since then (1990)” [14]. Finally, the password ecosystem evolves very slowly. A number of recent researches (see [16], [25], [28], [55]) show that password guidance and practices implemented on leading sites have seldomly changed over time.

#### B. Revisiting Recent Honeyword Methods

Here we provide a brief analysis of the pitfalls in three recent honeyword proposals [6], [24], [30]. Due to space constraints, readers are referred to the companion site of this revision [https://github.com/honeyword/honeywords-project](https://github.com/honeyword/honeywords-project) for more details. Briefly, the computational cost of Honeyindex is k/2 times larger (on average) than Honeyword [35]. Additionally, Honeyindex [24] suffers from the mapping attack and the peeling-onions style distinguishing attack; the latter can be resisted by regenerating sweetindexes periodically, yet this will bring a high probability of false alarms. For the “evolving password model” by Akshima et al. [6], it is inherently vulnerable to the “normalized top-PW” attack mentioned in Section III-A; their “user-profile model” is further vulnerable to targeted attackers. As for Superword [30], it is prone to DoS attacks, which cannot be remedied with the DoS measures mentioned in Section II-B. Besides, Superword [30] has a large communication overhead and introduces new vulnerabilities by placing too much burden on the honeychecker, which defeats the purpose of Honeywords in the first place.

#### C. Proofs of Theorem 1, 2, and 3

**Theorem 1:** Let \( hwi;j \) (1 ≤ j ≤ k) denote the event that \( swi;j \) is produced as a sweetword for \( Ui \), and \( pwi;j \) denote the event that \( Ui \) selects \( swi;j \) as her real password. We have:
\[
\Pr(pwi;j | SWi) = \frac{\Pr(pwi;j) \cdot \prod_{l \neq j} \Pr(hwi;l | pwi;j)}{\sum_{t=1}^k \Pr(pwi;t) \cdot \prod_{l \neq t} \Pr(hwi;l | pwi;t)}
\]
under the assumption that \( hwi;1, \ldots, hwi;j-1, hwi;j+1, \ldots, hwi;k \) are mutually independent under the event \( pwi;j \).

**Proof:** Since \( hwi;1, \ldots, hwi;j-1, hwi;j+1, \ldots, hwi;k \) are mutually independent under the event \( pwi;j \), we have:
\[
\Pr(SWi | pwi;j) = \prod_{l \neq j} \Pr(hwi;l | pwi;j)
\]
Now, leveraging Bayesian theory, we can derive:
\[
\Pr(pwi;j | SWi) = \frac{\Pr(SWi | pwi;j) \cdot \Pr(pwi;j)}{\sum_{t=1}^k \Pr(SWi | pwi;t) \cdot \Pr(pwi;t)} = \frac{\Pr(pwi;j) \cdot \prod_{l \neq j} \Pr(hwi;l | pwi;j)}{\sum_{t=1}^k \Pr(pwi;t) \cdot \prod_{l \neq t} \Pr(hwi;l | pwi;t)}
\]

**Theorem 2:** Let \( F \) denote the event that the file \( F \) is produced as the password-file for all users, and the other definitions comply with those in Theorem 1. We have:
\[
\Pr(pwi;j | F) = \Pr(pwi;j | SWi)
\]
under the assumptions that users independently create passwords and the assumptions of Theorem 1.

**Proof:** Since users create their own passwords independently and \( SWi \) only depends on \( Ui \)'s real password \( pwi;j \), \( SW1, \ldots, SWn \) will be mutually independent. We can derive:
\[
\Pr(pwi;j | F) = \frac{\Pr(pwi;j, SWi)}{\Pr(F)} = \frac{\Pr(pwi;j, SWi)}{\prod_{l=1}^n \Pr(SWl)} = \frac{\Pr(pwi;j, SWi)}{\Pr(SWi)} = \Pr(pwi;j | SWi)
\]

**Theorem 3:** Let \( pwi;j \) (1 ≤ j ≤ k) denote the event that \( Ui \) selects \( swi;j \) as her real password, \( hwi;j \) denote the event that \( swi;j \) is produced as a honeyword for \( Ui \), and let \( PII \) denote \( Ui \)'s PII. We have:
\[
\Pr(pwi;j | PII) = \frac{\Pr(pwi;j) \cdot \prod_{l \neq j} \Pr(hwi;l | pwi;j, PII)}{\sum_{t=1}^k \Pr(pwi;t) \cdot \prod_{l \neq t} \Pr(hwi;l | pwi;t, PII)}
\]
under the assumption that \( hwi;1, \ldots, hwi;j-1, hwi;j+1, \ldots, hwi;k \) are mutually independent under the event \( (pwi;j, PII) \).

**Proof:** Since \( hwi;1, \ldots, hwi;j-1, hwi;j+1, \ldots, hwi;k \) are mutually independent under the events \( pwi;j \) and \( (pwi;j, PII) \), we have:
\[
\Pr(SWi | pwi;j, PII) = \prod_{l \neq j} \Pr(hwi;l | pwi;j, PII)
\]
Now, leveraging Bayesian theory, we can derive:
\[
\Pr(pwi;j | PII) = \frac{\Pr(SWi | pwi;j, PII) \cdot \Pr(pwi;j | PII)}{\sum_{t=1}^k \Pr(SWi | pwi;t, PII) \cdot \Pr(pwi;t | PII)} = \frac{\Pr(pwi;j) \cdot \prod_{l \neq j} \Pr(hwi;l | pwi;j, PII)}{\sum_{t=1}^k \Pr(pwi;t) \cdot \prod_{l \neq t} \Pr(hwi;l | pwi;t, PII)}
\]

#### D. Pros and Cons of Existing Password Models

As mentioned in Section II-D, we mainly consider six representative, probabilistic password models: PCFG [58], Markov models, and others. Each model has its strengths and weaknesses, and the choice of model depends on the specific use case and the nature of the data being analyzed.