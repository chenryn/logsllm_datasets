##### System information (version)
  * OpenCV => 4.0.0-beta
  * Operating System / Platform => OSX 10.14.1 Beta (18B45d)
  * Compiler => Xcode (ver 10.0.0.10001145)
  * Python => 3.7.0
##### Detailed description
When retrieving frames in the latest version of OpenCV using the python
bindings for OpenNI2, I found that the default value of the retrieve is used
no matter what is passed into the binding **unless the method is called with
an additional dummy parameter**.
The method signature in the documentation is consistent:
    retval, image	= cv.VideoCapture.retrieve([, image[, flag]])
This would be sensible, however if you pass the image in, it _doesn't actually
change the image as a side effect_ which is what you would expect. Not only
this, but there's no warning (or error) if you pass the flag in place of the
image. Thus, while this may not explicitly be a bug, it's certainly a bit
confusing, and it might need some clarification.
In addition, this runs a bit contrary to the documentation which says:
    [out]  | image |  the video frame is returned here. If no frames has been grabbed the image will be empty.
##### Steps to reproduce
Not Working:
    capture = cv2.VideoCapture(cv2.CAP_OPENNI2)
    capture.grab()
    ret_d, depth_map = capture.retrieve(cv2.CAP_OPENNI_DEPTH_MAP)
    ret_f, frame = capture.retrieve(cv2.CAP_OPENNI_BGR_IMAGE)
    print(cv2.CAP_OPENNI_BGR_IMAGE, cv2.CAP_OPENNI_DEPTH_MAP)
    print(frame == depth_map)
The return value is:
    >> 5, 0
    >> True
Working:
    capture = cv2.VideoCapture(cv2.CAP_OPENNI2)
    capture.grab()
    ret_d, depth_map = capture.retrieve(None, cv2.CAP_OPENNI_DEPTH_MAP)
    ret_f, frame = capture.retrieve(None, cv2.CAP_OPENNI_BGR_IMAGE)
    print(cv2.CAP_OPENNI_BGR_IMAGE, cv2.CAP_OPENNI_DEPTH_MAP)
    print(frame == depth_map)
The return value is:
    >> 5, 0
    >> False
Odd Behavior:
    capture = cv2.VideoCapture(cv2.CAP_OPENNI2)
    capture.grab()
    frame = None
    ret_d, depth_map = capture.retrieve(None, cv2.CAP_OPENNI_DEPTH_MAP)
    capture.retrieve(frame, cv2.CAP_OPENNI_BGR_IMAGE)
    print(frame)
Output:
    >> None