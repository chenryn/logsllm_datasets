As should be apparent from the above description, the
considered adversary in the related randomness setting is
very powerful, and some restrictions must be applied to
obtain a meaningful notion of security. For example, it is
easy to see that an adversary submitting challenge queries
(m0, m1, id) and (m0, m2, id) can easily detect whether the
ﬁrst or second message is being encrypted, simply by check-
ing whether the same ciphertext is returned in response to
these queries. This is similar to the notions of determinis-
tic encryption and related key attack security where adver-
sary restrictions are likewise needed to ensure a meaning-
ful security deﬁnition.
In the following, we will introduce
a restricted class of adversaries which we denote equality-
respecting adversaries. Our notion is slightly weaker than
the corresponding notion in [34] as the restriction does not
take into account encryption queries. This is possible as we
can rule out the trivial attacks not captured by the following
deﬁnition, by placing restrictions on the function families Ψ
and Φ that cannot be captured using a single function family
as in [34].
Definition 5
(LR-equality-respecting Adversary).
Consider a (Φ, Ψ)-restricted adversary A playing the IND-
RR-CCA security game. Let (mφ,1
denote the messages A submits to the LR oracle for func-
tion φ. Then A is said to be LR-equality-respecting if, for
all φ ∈ Φ and for all i, j ∈ [qφ] s.t. i (cid:54)= j,
φ,qφ
1 ), . . . , (m
0
0 , mφ,1
φ,qφ
1
, m
)
mφ,i
0 = mφ,j
0 ⇔ mφ,i
1 = mφ,j
1
With the above restriction in place, we can deﬁne the
notion of related randomness security.
HTCΦ,ΨA (λ):
x ←$ D
S ← ∅
y ← AGet,Set(1λ)
if y ∈ S
return 1
else return 0
proc. Get(i):
return ψi(x)
proc. Set(j):
S ← S ∪ {φj(x)}
Figure 3: Game deﬁning adaptively hard-to-com-
pute function families
Definition 6
(IND-RR-CCA Security). Let the ad-
vantage of an adversary A playing the IND-RR-CCA game
with respect to a public key encryption scheme PKE = (Setup,
KeyGen, Enc, Dec), be deﬁned as:
Adv
IND-RR-CCA
PKE,A
(λ) = 2
(cid:12)(cid:12)(cid:12)(cid:12)Pr[IND-RR-CCAA
PKE(λ) ⇒ 1] − 1
2
(cid:12)(cid:12)(cid:12)(cid:12)
A scheme PKE is said to be (Φ, Ψ)-IND-RR-CCA secure,
if for all polynomial time (Φ, Ψ)-restricted and LR-equality-
respecting adversaries A, Adv
(λ) is negligible in
the security parameter λ.
IND-RR-CCA
PKE,A
From the deﬁnition, it is clear that security cannot be
achieved for any function families Ψ and Φ. In [34], it was
shown that security is only achievable for collision resistant
and unpredictable functions. We furthermore note that, for
any randomness recovering scheme, such as RSA-OAEP, se-
curity cannot be achieved if Ψ ∩ Φ (cid:54)= ∅. Speciﬁcally, if
there exist ψ(cid:48) ∈ Ψ ∩ Φ, the adversary can simply submit
(m0, m1, ψ(cid:48)) to his LR oracle and (pk, m, ψ(cid:48)) to his Enc or-
acle using a public key pk for which he knows the private
key. From the ciphertext obtained in the latter query, the
adversary can recover ψ(cid:48)(r) which will also be used as ran-
domness in his challenge query. Hence, the adversary can
trivially determine the challenge bit b by re-encrypting m0
and m1 using ψ(cid:48)(r).
In this paper, we will be concerned with function families
Φ which are collision resistant (see Section 2), and which
are furthermore (adaptively) hard-to-compute with respect
to the function family Ψ. The latter intuitively means that,
for a randomly chosen r, the values φ(r) for φ ∈ Φ are hard
to compute, even when given values ψ(r) for ψ ∈ Ψ. We
formalize this in the following deﬁnition. Note that if Ψ
is hard-to-compute with respect to Ψ, it follows that Φ is
unpredictable and that Ψ ∩ Φ = ∅.
Definition 7. (Adaptively hard-to-compute func-
tion families). A function family Φ is said to be adaptively
hard-to-compute with respect to a function family Ψ if all
polynomial time adversaries A have advantage Adv
HTC
Φ,Ψ,A(λ)
246proc. Sign(m, φ):
σ ← S.Sign(sk, m; φ(r))
M ← M ∪ {m}
return σ
UF-RR-CMASA(λ):
(vk, sk) ← S.KeyGen(1λ)
r ← R; M ← ∅
(m∗, σ∗) ← ASign(vk)
if S.Verify(vk, m∗, σ∗)
∧m∗ (cid:54)∈ M
return 1
else return 0
Figure 4: Game deﬁning existential unforgeability
under a related randomness and chosen message at-
tack (UF-RR-CMA)
is negligible in λ, where
HTC
Φ,Ψ,A(λ) = Pr[HTCΦ,ΨA (1λ) ⇒ 1]
Adv
4.2 Related Randomness Secure Signatures
Adapting the related randomness security notion from [34]
is relatively simple. We consider a security experiment which
initially chooses a value r, and then allow the adversary to
obtain signatures σ = Sign(sk, m; φ(r)) for his choice of
message m and related randomness function φ. As in the
case of encryption, we refer to an adversary as Φ-restricted,
if his is restricted to querying functions φ ∈ Φ. The full
security experiment is shown in Figure 4.
Definition 8
(UF-RR-CMA Security). Let the ad-
vantage of an adversary A playing the UF-RR-CMA game
with respect to a signature scheme S = (KeyGen, Sign, Verify),
be deﬁned as:
Adv
UF-RR-CMA
S,A
(λ) = Pr[UF-RR-CMASA(λ) ⇒ 1]
A scheme PKE is said to be Φ-UF-RR-CMA secure, if for all
polynomial time Φ-restricted adversaries A, Adv
(λ)
is negligible in the security parameter λ.
UF-RR-CMA
S,A
Note that for signatures, no restrictions are placed on
the adversary. Furthermore, security is achievable for any
function class Φ.
In fact, any UF-CMA secure signature
scheme can be converted to a scheme achieving UF-RR-
CMA security for any function class Φ by de-randomizing
the scheme. More concretely, using the folklore technique for
de-randomization, a key k for a pseudorandom function prf
could be added to the signing key, and whenever a signature
on message m is created, the randomness r ← prf(k, m) is
used. The UF-CMA security of the scheme is easily seen to
be maintained, and as the scheme no longer uses random-
ness, it is secure against any type of randomness failure.
However, as clearly illustrated by the incidents involving
DSA signatures, randomness failures might have fatal con-
sequences for schemes that are not de-randomized or deter-
ministic by design. For these, considering the above notion
for various function classes Φ is relevant.
In our analysis of RSA-PSS signatures, we will consider a
function class Φ which is continuously hard-to-compute. We
formally deﬁne this property as follows.
Definition 9. (Continuously hard-to-compute func-
tion families) A function family Φ is said to be continu-
ously -hard-to-compute if all polynomial time adversaries
A have advantage Adv
CHTC
Φ,A < , where
CHTC
Φ,A = Pr[CHTCΦA(λ) ⇒ 1]
Adv
proc. Get(i):
S ← S ∪ {i}
return φi(x)
CHTCΦA(λ):
x ←$ D
S ← ∅
(j, y) ← AGet(1λ)
if y = φj(x) ∧ j (cid:54)∈ S
return 1
else return 0
Figure 5: Game deﬁning continuously hard-to-
compute function families
If  = (λ) is a negligible function, we simply say that Φ is
continuously hard-to-compute.
5. RELATED RANDOMNESS SECURITY OF
RSA-OAEP ENCRYPTION
In this section, we will prove that, under the RSA and Φ-
hiding assumptions, RSA-OAEP is IND-RR-CCA secure in
the random oracle model for function families (Φ, Ψ) where
Φ is collision resistant and adaptively hard-to-compute with
respect to Ψ.
As highlighted in the introduction, the key obstacle to
obtaining a proof is that the IND-RR-CCA game permits
adversaries to query LR oracle multiple times, and hence,
the adversary may obtain two challenge ciphertexts y1 =
(s1||t1)e and y2 = (s2||t2)e such that s1 ⊕ s2 = ∆ for known
∆. In this situation, there is no obvious way to create a re-
duction to the partial-domain one-wayness as in the original
proof for RSA-OAEP.
To overcome this diﬃculty, we use the Φ-hiding assump-
tion, which states that the public key e and a lossy key
e(cid:48) are statistically indistinguishable. More speciﬁcally, un-
der a lossy key e(cid:48), we show that an adversary cannot exploit
this knowledge to distinguish challenge ciphertexts from ran-
dom elements, and hence obtain a reduction to the partial-
domain one-wayness. In the proof, we make use of the re-
sults by Smith and Zhang [40] regarding the properties of
the RSA function under a lossy key (see Section 2, Lemma
2).
Theorem 1. Assume that Φ is collision resistant and adap-
tively hard-to-compute with respect to Ψ, that the RSA func-
tion satisﬁes set partial-domain one-wayness, and that the
Φ-hiding assumption holds. Then, RSA-OAEP is (Φ, Ψ)-
IND-RR-CCA secure. Speciﬁcally, for any polynomial time
(Φ, Ψ)-restricted and LR-equality-respecting adversary A, the
following inequality holds.
(λ) ≤ qD
qDqG
2k1
2k0
Φ,Ψ,A + 2qLR · Adv
IND-RR-CCA
OAEP,A
Adv
+ qG · Adv
s-pd-ow
HTC
+
+ q2
LR · CRΦ(λ)
c,qH ,A(λ) + AdvΦA
+ 3qLR · ( + 2
c,θ,A(λ)
−k/2+2),
where qLR, qG, qH and qD are the number of queries to the
LR, G, H and Dec oracles, and the parameters satisfy that
k0 ≥ log N − log e + 2 log 1
 and 3θ < k.
 + 4, θ ≥ 4 + log 1
We ﬁrst deﬁne a sequence of games. Without loss of gen-
erality, we assume that A never repeats an oracle query.
We will furthermore use the subscript i to denote the values
submitted or computed in the i-th query.
Game0. This is just the IND-RR-CCA game.
247Game1. We modify the above game by changing the Dec
oracle so as to reject all ciphertext y for which the
corresponding t ⊕ H(s) has not been queried to the G
oracle previously.
Game2. We modify the above game by changing the Dec
oracle so as to reject all ciphertexts y for which the
corresponding s has not been queried to the H oracle
previously.
Game3.
In this game, the response to Dec oracle queries is
computed without the challenge private key d. This is
possible because the Dec oracle needs to answer only
the queries where r and s have been previously queried,
and the values G(r) and H(s) are suﬃcient to decrypt
the corresponding ciphertext5.
lenge public key to a lossy key i.e. (N, e) ← RSAloss
Game4. We modify the above game by changing the chal-
c,θ (λ).
Game5. We modify the above game by changing the LR
instead
oracle so as to use a uniformly random value g+
i
of G(φi(r)).
Game6. We modify the above game by changing the LR
i ←$
oracle so as to use a uniformly random value h+
{0, 1}k0 instead of H(si).
Game7. We modify the above game by changing the LR
oracle so as to compute all challenge ciphertexts yi as
(xi)e mod N where xi
$←− ZN .
i
i
(cid:54)= ∅.
We denote by Si the event b(cid:48) = b in Gamei. We denote by
OH
i the set of all x which are queried to the H oracle by the
adversary in Gamei, and by OLR,H
the set of all s which are
queried to H by Gamei in the response to LR oracle queries.
i and OLR,G
We likewise deﬁne OG
for oracle G. We denote
by AskHi the event OH
i ∩OLR,H
(cid:54)= ∅, and by AskGi the event
i ∩ OLR,G
OG
Lemma 3. | Pr[S1] − Pr[S0]| ≤ qD
Proof. The two games Game1 and Game2 may diﬀer if
there is a Dec query y which is a valid ciphertext while
the corresponding φ(r) has not been queried to G. Since
G(φ(r)) is uniformly distributed, equality [s ⊕ G(φ(r))]k1 =
0k1 happens with probability 1/2k1 . Summing up for all
Dec queries, it holds that | Pr[S1] − Pr[S0]| ≤ qD
2
2k1
.
.
i
i
2k1
.
2k0
Lemma 4. | Pr[S2] − Pr[S1]| ≤ qD qG
Proof. The two games Game1 and Game2 may diﬀer if
there is a Dec query y = (s||t)e mod N which is a valid
ciphertext and the corresponding H(s) ⊕ t value has been
queried to G, while corresponding s has not been queried to
H. Since H(s) is uniformly distributed, H(s) ⊕ t has been
queried to G with probability less than qG/2k0 . Summing up
for all Dec queries, it holds that | Pr[S3] − Pr[S2]| ≤ qD qG
.
2
2k0
c,θ,A.
Lemma 6. | Pr[S4] − Pr[S3]| ≤ AdvΦA
Proof. The only diﬀerence between Game3 and Game4 is