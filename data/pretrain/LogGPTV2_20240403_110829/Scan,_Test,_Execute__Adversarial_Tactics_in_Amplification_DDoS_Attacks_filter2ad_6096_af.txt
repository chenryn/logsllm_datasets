### 8. FUTURE WORK

Despite the heterogeneity of the overall ecosystem, ranging from script-kiddies to sophisticated actors, our results indicate that each attack, even those targeting hundreds of amplifiers, exhibits remarkable similarities. This uniformity is understandable, as attackers aim to optimize for economies of scale. However, it also presents opportunities for mitigation. By identifying and automatically recognizing common tactics and techniques, and distributing this information to defenders, a significant portion of current distributed amplification DDoS attacks could be mitigated.

Our findings suggest that recent proposals, such as BGP flowspec, could be highly effective in practice by filtering incoming amplification requests, not just the resulting packet floods directed at the victim. Given the similarity in attack patterns and the fact that almost all perpetrators in our study scaled out to abuse multiple honeypots, collaborative identification of malicious flows—either at the network or resolver level—could provide a viable approach to reducing this attack vector. Servers providing amplification services could run a service that cannot be disabled, which would create interesting but solvable research problems to address the resulting privacy concerns. However, this approach could be a scalable solution, as the incentives and costs are aligned for the operators of the abused services.

In this study, we focused on attacks measured by our deployed honeypots and did not measure the attacks from the victim's perspective. To better understand the behavior of victims and the actual attack sizes, future work should involve collaboration with victims, cloud service providers, or DDoS defense companies. This would allow for further analysis of attack "pulses" and provide insights into the total number of amplifiers used in attacks.

### 9. CONCLUSIONS

We have analyzed adversarial techniques for amplification DDoS attacks using 549 honeypots running six amplification protocols, which were subjected to 13,479 attacks over three weeks. Our findings show that adversaries tend to select servers with the highest amplification potential and conduct tests to identify the most impactful servers. Additionally, we observed that there is a "memory" effect, where amplification services continue to be abused long after they are taken down. While the majority of adversaries use simple techniques, we also identified highly advanced attacker groups that selectively pick servers and tactics to maximize their impact.

### REFERENCES

1. [Google Cloud Blog: Identifying and Protecting Against the Largest DDoS Attacks](https://cloud.google.com/blog/products/identity-security/identifying-and-protecting-against-the-largest-ddos-attacks), accessed on 2021-05-05.
2. [Speedtest Global Index](https://www.speedtest.net/global-index), accessed on 2021-05-05.
3. Anagnostopoulos, M., Kambourakis, G., Kopanos, P., Louloudakis, G., and Gritzalis, S. (2013). DNS amplification attack revisited. *Computers & Security*, 39.
4. Blenn, N., Ghiette, V., and Doerr, C. (2017). Quantifying the Spectrum of Denial-of-Service Attacks through Internet Backscatter. In *International Conference on Availability, Reliability and Security (ARES)*.
5. Büscher, A., and Holz, T. (2012). Tracking DDoS attacks: Insights into the business of disrupting the web. In *5th USENIX Workshop on Large-Scale Exploits and Emergent Threats (LEET 12)*.
6. Czyz, J., Kallitsis, M., Gharaibeh, M., Papadopoulos, C., Bailey, M., and Karir, M. (2014). Taming the 800 pound gorilla: The rise and decline of NTP DDoS attacks. In *Proceedings of the 2014 Conference on Internet Measurement Conference*.
7. Durumeric, Z., Adrian, D., Mirian, A., Bailey, M., and Halderman, J. A. (2015). A search engine backed by internet-wide scanning. In *Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications Security*, pp. 542–553.
8. Fachkha, C., Bou-Harb, E., and Debbabi, M. (2014). Fingerprinting internet DNS amplification DDoS activities. In *2014 6th International Conference on New Technologies, Mobility and Security (NTMS)*, IEEE.
9. Griffioen, H., Booij, T. M., and Doerr, C. (2020). Quality evaluation of cyber threat intelligence feeds. In *International Conference on Applied Cryptography and Network Security (ACNS)*.
10. Griffioen, H., and Doerr, C. (2019). Taxonomy and adversarial strategies of random subdomain attacks. *International Conference on New Technologies, Mobility and Security*.
11. Griffioen, H., and Doerr, C. (2020). Quantifying TCP SYN DDoS Resilience: A Longitudinal Study of Internet Services. In *IFIP Networking*.
12. Hutchings, A., and Clayton, R. (2016). Exploring the provision of online booter services. *Deviant Behavior*, 37(10).
13. Jonker, M., King, A., Krupp, J., Rossow, C., Sperotto, A., and Dainotti, A. (2017). Millions of targets under attack: a macroscopic characterization of the DoS ecosystem. In *Proceedings of the 2017 Internet Measurement Conference*.
14. Karami, M., and McCoy, D. (2013). Rent to pwn: Analyzing commodity booter DDoS services. *Usenix login*, 38.
15. Karami, M., Park, Y., and McCoy, D. (2016). Stress testing the booters: Understanding and undermining the business of DDoS services. In *Proceedings of the 25th International Conference on World Wide Web*.
16. Kopp, D., Wichtlhuber, M., Poese, I., Santanna, J., Hohlfeld, O., and Dietzel, C. (2019). DDoS Hide & Seek: On the Effectiveness of a Booter Services Takedown. In *Proceedings of the Internet Measurement Conference*.
17. Krämer, L., Krupp, J., Makita, D., Nishizoe, T., Koide, T., Yoshioka, K., and Rossow, C. (2015). Amppot: Monitoring and defending against amplification DDoS attacks. In *International Symposium on Recent Advances in Intrusion Detection*, Springer.
18. Krupp, J., Backes, M., and Rossow, C. (2016). Identifying the scan and attack infrastructures behind amplification DDoS attacks. In *Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security*.
19. Krupp, J., Karami, M., Rossow, C., McCoy, D., and Backes, M. (2017). Linking amplification DDoS attacks to booter services. In *International Symposium on Research in Attacks, Intrusions, and Defenses*, Springer.
20. Kührer, M., Hupperich, T., Rossow, C., and Holz, T. (2014). Exit from Hell? Reducing the Impact of Amplification DDoS Attacks. In *23rd USENIX Security Symposium (USENIX Security 14)*.
21. MacFarland, D. C., Shue, C. A., and Kalafut, A. J. (2015). Characterizing optimal DNS amplification attacks and effective mitigation. In *International Conference on Passive and Active Network Measurement*, Springer.
22. MacFarland, D. C., Shue, C. A., and Kalafut, A. J. (2017). The best bang for the byte: Characterizing the potential of DNS amplification attacks. *Computer Networks*.
23. Matherly, J. (2016). Complete guide to Shodan. Shodan, LLC.
24. Paxson, V. (2001). An analysis of using reflectors for distributed denial-of-service attacks. *ACM SIGCOMM Computer Communication Review*, 31(3).
25. Prince, M. (2014). Technical details behind a 400Gbps NTP amplification DDoS attack. *Cloudflare, Inc*.
26. Richter, P., and Berger, A. (2019). Scanning the scanners: Sensing the Internet from a massively distributed network telescope. In *Proceedings of the Internet Measurement Conference*.
27. Rossow, C. (2014). Amplification Hell: Revisiting Network Protocols for DDoS Abuse. In *NDSS*.
28. Rudman, L., and Irwin, B. (2015). Characterization and analysis of NTP amplification based DDoS attacks. In *2015 Information Security for South Africa (ISSA)*, IEEE.
29. Santanna, J. J., van Rijswijk-Deij, R., Hofstede, R., Sperotto, A., Wierbosch, M., Granville, L. Z., and Pras, A. (2015). Booters—An analysis of DDoS-as-a-service attacks. In *2015 IFIP/IEEE International Symposium on Integrated Network Management (IM)*, IEEE.
30. Sassani, B. A., Abarro, C., Pitton, I., Young, C., and Mehdipour, F. (2016). Analysis of NTP DRDoS attacks’ performance effects and mitigation techniques. In *2016 14th Annual Conference on Privacy, Security and Trust (PST)*, IEEE.
31. Sun, Z., Liu, B., and Hu, C. (2011). Method for effectively detecting and defending domain name server (DNS) amplification attacks.
32. Thomas, D. R., Clayton, R., and Beresford, A. R. (2017). 1000 days of UDP amplification DDoS attacks. In *2017 APWG Symposium on Electronic Crime Research (eCrime)*, IEEE.
33. Vetterl, A., and Clayton, R. (2018). Bitter harvest: Systematically fingerprinting low- and medium-interaction honeypots at internet scale. In *12th USENIX Workshop on Offensive Technologies (WOOT 18)*.

### APPENDIX A: AMPLIFICATION FACTORS

This appendix contains the content of the experiment groups for all six different services. For each service, we include the Bandwidth Amplification Factor (BAF) introduced by Rossow [27] and the contents of the packets sent by the honeypots.

#### A.1 RIPv1
The Routing Information Protocol responds to correctly formatted packets. The BAF is calculated using the most frequently occurring packet.

- **Real Small**: Responds with a small routing table consisting of 4 entries. The response size is 84 bytes, with a BAF of 3.5.
- **Real Large**: Responds with a larger routing table consisting of 26 entries. The response size is 524 bytes, with a BAF of 21.8.
- **Fake Small**: Responds with a fixed message of 88 bytes, with a BAF of 3.7, that cannot be parsed by a RIP protocol format parser: "THIS IS A HONEYPOT. YOUR IP IS LOGGED. DO NOT USE THIS. YOU NOW PARTICIPATE IN RESEARCH!"
- **Fake Large**: Responses are non-parsable by RIP parsers and are larger, consisting of 413 bytes, with a BAF of 17.2: "This is a honeypot! This is not a real server! You should not use this RIP server! Your IP is logged. We use this server to investigate who connects to it and what happens with anyone that is connecting! So it is really best you do not use this server! And if you do, please leave a cool message, since we log all the packets anyway ;) - Thanks a lot for participating in our research - Project Honeypot Research."

#### A.2 CharGen
The Character Generation protocol discards any received input. For any request, it returns a random number of characters. The maximum amplification is achieved by sending a single byte.

- **Real Small**: Responds with a string that is rotated by one byte after every received request. The response size is 94 bytes, with a BAF of 94: `"!"#$%&'()*+,-./0123456789:;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_‘abcdefg.`
- **Real Large**: Uses the same string as the small server but rotates it 19 times. The data consists of 1406 bytes, with a BAF of 1406.
- **Fake Small**: Sends a 94-byte static string indicating that the server is a honeypot, with a BAF of 94: "THIS IS A HONEYPOT. YOUR IP IS LOGGED. DO NOT USE THIS. YOU ARE NOW PARTICIPATING IN RESEARCH!"
- **Fake Large**: Returns a message with 1450 bytes and a BAF of 1450: "This is a honeypot system! This is not a real CHARGEN server! You should not be using this CHARGEN server! Your IP internet address is logged in a database. We use this server to investigate who connects to it and what happens with these quotes! So it is really best you do not use this server! And if you do, please leave a cool message, since we log all the packets anyway ;) We will publish any misuse of this service on the internet and detect your IP internet address. (Repeated 3x) | Project Honeypot Research."

#### A.3 QotD
Similar to CharGen, the QotD protocol does not care about user input, and the response can be triggered by a single byte.

- **Real Small**: Returns a random quote with a size between 45-50 bytes. The BAF varies between 45-50. Example: "To infinity.... and beyond! - Toy Story."
- **Real Large**: Responds with large quotes averaging 1450 bytes, with a BAF of 1450. Quotes are selections of Lorem Ipsum.
- **Fake Small**: Responds with a static string of 53 bytes and a BAF of 53, indicating that the system is a honeypot: "This is a honeypot attack detector - Researchers."
- **Fake Large**: Contains a single static string of 1437 bytes and a BAF of 1437: "This is a honeypot system! This is not a real QOTD server! You should not be using this QOTD server! Your IP internet address is logged in a database. We use this server to investigate who connects to it and what happens with these quotes! So it is really best you do not use this server! And if you do, please leave a cool message, since we log all the packets anyway ;) We will publish any misuse of this service on the internet and detect your IP internet address. (Repeated 3x) - Project Honeypot Research."

#### A.4 SSDP
SSDP packets are only sent on valid requests, except for the fake servers. While those can be triggered by sending only 1 byte, we calculate the BAF using the same packet as in the real case.

- **Real Small**: Responds with one of the smallest possible responses on an M-SEARCH request, with a size of 272 bytes and a BAF of 2.3. Fields in brackets are set with the correct values at the time of the request:
  ```
  NOTIFY * HTTP/1.1
  HOST: 239.255.255.250:1900
  DATE: {time}
  CACHE-CONTROL: max-age = 1800
  LOCATION: http://{server_ip}/rootDesc.xml
  SERVER: UPnP/1.0
  NTS: ssdp:alive
  NT: upnp:rootdevice
  USN: uuid:b4ca5004c5334bf4883046f2ee3e871a::upnp:rootdevice
  ```

- **Real Large**: Returns a response of 430 bytes, with a BAF of 3.7. Fields in brackets are set with the correct values at the time of the request:
  ```
  NOTIFY * HTTP/1.1
  HOST: 239.255.255.250:1900
  DATE: time
  CACHE-CONTROL: max-age=60
  LOCATION: http://server_ip:5000/rootDesc.xml
  SERVER: OpenWRT/OpenWrt UPnP/1.1 MiniUPnPd/1.9
  NT: upnp:rootdevice
  USN: uuid:822db064-5a71-4375-ba79-20b582cd9309::upnp:rootdevice
  NTS: ssdp:alive
  OPT: "http://schemas.upnp.org/upnp/1/0/"; ns=01
  01-NLS: timestamp
  BOOTID.UPNP.ORG: timestamp
  CONFIGID.UPNP.ORG: 1337
  ```

- **Fake Small**: Responds with a message of 277 bytes and a BAF of 2.4 that is not parse-able by the protocol: "This is a honeypot! This is not a real server! You should not use this SSDP server! Your IP is logged. We use this server to investigate who connects to it and what happens with these quotes! So it is really best you do not use this server! - Project Honeypot Research."
- **Fake Large**: Responds with a message of 429 bytes and a BAF of 3.7 that is not parse-able by the protocol: "This is a honeypot system! This is not a real SSDP server! You should not use this SSDP server! Simple Service Discovery Protocol part of UPnP. Your IP network address is logged. We use this server to investigate who connects to it and what commands are transmitted to this server! So it is really best you do not use this server! And if you do, please leave a nice message ;) With Regards, - Project Honeypot Research."

#### A.5 NTP
The Network Time Protocol runs in virtual machines that run the NTP software NTPD. The response sizes sent by the honeypots can vary based on the state of the NTP Daemon.

- **Real Small**: Runs an NTP server where the NTP amplification vulnerability is fixed. There is no amplification factor for the adversary.
- **Real Large**: Uses a version of the NTP software that contains an amplification vulnerability in the `monlist` command. The BAF is at least 46 but can increase depending on the system state.
- **Fake Small**: Sends a non-expected answer to a `monlist` request but does not provide amplification potential.
- **Fake Large**: Responds with an unexpected 347-byte long plain text message on a `monlist` request, providing a BAF of 43.4: "This is a honeypot! This is not a real server! You should not use this NTPD server! Your IP is logged. We use this server to investigate who connects to it and what happens with these quotes! So it is really best you do not use this server! And if you do, please leave a cool message, since we log all the packets anyway. Honeypot Research."

#### A.6 DNS
Similar to NTP, the Domain Name Servers run on virtual machines, and queries are handled by the BIND DNS server.

- **Real Small**: Does not perform recursion and only responds with messages having a BAF of 1.6.
- **Real Large**: Enables recursion and thus responds to any query (regular open resolver). The minimum BAF is 1.6 but increases based on the request to the resolver.
- **Fake Small**: Emulates a DNS server that only resolves queries for the `example.com` zone, with a BAF of 1.6.
- **Fake Large**: Does not parse the incoming packet but responds with a 352-byte long message, providing a BAF of 6.8 on a normal DNS query on the domain of Google: "This is a honeypot! This is not a real server! You should not use this QOTD server! Your IP is logged. We use this server to investigate who connects to it and what happens with these quotes! So it is really best you do not use this server! And if you do, please leave a cool message, since we log all the packets anyway ;)| Project Honeypot Research."