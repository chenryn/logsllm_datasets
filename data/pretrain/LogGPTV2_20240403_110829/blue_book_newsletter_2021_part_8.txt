* New: Enable infinite scrollback history.
    To make the history scrollback infinite add the next lines:
    ```
    scrollback_lines -1
    scrollback_pager_history_size 0
    ```
* New: [Reasons to migrate from urxvt to kitty.](kitty.md#reasons-to-migrate-from-urxvt-to-kitty)
    * It doesn't fuck up your terminal colors.
    * You can use [peek](peek.md) to record your screen.
    * Easier to extend.
### [LUKS](luks.md)
* New: [Explain how to change a LUKS key.](luks.md#change-a-key)
    ```bash
    cryptsetup luksChangeKey {{ luks_device }} -s 0
    ```
### [mkdocs](mkdocs.md)
* New: Explain how to develop your own plugins.
* New: Document the Navigation object and the on_nav event.
    Useful if you develop MkDocs plugins, it holds the information to build
    the navigation of the site.
* New: Describe navigation objects used in plugins.
    Explain how to use the [Page](mkdocs.md#page),
    [Section](mkdocs.md#section), and [SectionPage](mkdocs.md#sectionpage) objects.
* Correction: You need to edit the nav in the on_nav and not in the on_files event.
    Even though it seems more easy to create the nav structure in the
    [`on_files`](#on_files) event, by editing the `nav` dictionary of the `config`
    object, there is no way of returning the `config` object in that event, so we're
    forced to do it in this event.
* Correction: [Explain how to add files through a plugin.](mkdocs.md#adding-new-files)
    Long story short, use the `on_config` event instead of `on_files` and
    `on_nav` if you need to add files and want to change the navigation
    menu.
* New: Explain how to use MermaidJS diagrams.
* New: Explain how to test mkdocs plugins.
* New: [Explain additions of version 7.1.0 of the material theme.](mkdocs.md#material-theme-customizations)
    * [Dark-light mode switch](mkdocs.md#color-palette-toggle).
    * [Back to top button](mkdocs.md#back-to-top-button).
### [Mopidy](mopidy.md)
* New: Introduce the music server.
    [Mopidy](https://github.com/mopidy/mopidy) is an extensible music server written
    in Python, that plays perfectly with [beets](beets.md) and the MPD
    ecosystem.
    The awesome documentation, being Python based, the extension system,
    JSON-RPC, and JavaScript APIs make Mopidy a perfect base for your
    projects.
### [Oracle Database](oracle_database.md)
* New: Explain how to build an oracle database docker while feeling dirty inside.
### [Peek](peek.md)
* New: Introduce Peek the screen recorder.
    [Peek](https://github.com/phw/peek) is a simple animated GIF screen recorder
    with an easy to use interface.
    If you try to use it with i3, you're going to have a bad time, you'd
    [need to
    install](https://github.com/phw/peek#on-i3-the-recording-area-is-all-black-how-can-i-record-anything)
    [Compton](https://github.com/chjj/compton), and then the elements [may
    not even be
    clickable](https://github.com/phw/peek#why-cant-i-interact-with-the-ui-elements-inside-the-recording-area).
* Correction: Add note that it works with kitty.
### [Syncthing](syncthing.md)
* Improvement: Mention privacy configurations.
    Disable the [Global
    Discovery](https://docs.syncthing.net/users/security.html#global-discovery)
    and [Relaying
    connections](https://docs.syncthing.net/users/security.html#relay-connections)
    options.
* New: [Investigate if Syncthing can be used over Tor.](syncthing.md#syncthing-over-tor)
    I haven't found a reliable and safe way to do it, but I've set a path to follow if you're interested.
### [Vim](vim.md)
* New: Configure Vim to set the upstream by default when git pushing.
* New: Add vim landing page.
* Reorganization: Refactor the vim_automation article into vim and vim_plugins.
* Correction: Correct vim snippet to remember the folds when saving a file.
## Android
### [cone](cone.md)
* New: Introduce the mobile double entry accounting application.
* Correction: Correct the description of the transaction to be beancount compatible.
### [GadgetBridge](gadgetbridge.md)
* New: Add more guidelines to reverse engineer the band protocol.
### [OsmAnd](osmand.md)
* New: Introduce OsmAnd.
    [OsmAnd](https://osmand.net) is a mobile application for global map viewing and
    navigating based on [OpenStreetMaps](https://osm.org). Perfect if you're looking
    for a privacy focused, community maintained open source alternative to google
    maps.
### [Signal](signal.md)
* New: Introduce the messaging app and how to decrypt the backups.
# Arts
## [Writing](writing.md)
* New: Try vim-pencil without success, but love mdnav.
    [mdnav](https://github.com/chmp/mdnav) opens links to urls or files when
    pressing `enter` in normal mode over a markdown link, similar to `gx`
    but more powerful. I specially like the ability of following `[self
    referencing link][]` links, that allows storing the links at the bottom.
* New: [Explain when to use I'm good or I'm well.](writing.md#im-good-or-im-well)
    Use I'm well when referring to being ill, use I'm good for the rest.
### [Grammar and Orthography](build_your_own_wiki.md)
* New: Explain how to enable clickable navigation sections in your mkdocs repository.
    [oprypin](https://github.com/oprypin) has solved it with the
    [mkdocs-section-index](https://github.com/oprypin/mkdocs-section-index) plugin.
* Improvement: Expand the introduction and add Dave's suggested link.
* New: [Explain where to add your pronouns.](orthography.md#where-to-add-your-pronouns)
    > Hi, I’m Lyz (he/him), I'm writing to tell you…
* New: [Explain when to capitalize after a question mark.](orthography.md#when-to-capitalize-after-a-question-mark)
    If the sentence ends after the question mark you should capitalize, if it
    doesn't end, you shouldn't have used the question mark, since it ends
    a sentence.
* New: Add textstat tests.
    To analyze the text readability
* New: [Explain how to use the singular `they`.](orthography.md#how-to-use-the-singular-they)
* New: Explain when to write won't or wont.
    * Won't is the correct way to contract will not.
    * Wont is a synonym of "a habit". For example, "He went for a morning jog, as was his wont".
* New: [Explain what collocations are and how to avoid the word very.](orthography.md#use-collocations)
    Collocation refers to a natural combination of words that are closely affiliated
    with each other. They make it easier to avoid overused or ambiguous words like
    "very", "nice", or "beautiful", by using a pair of words that fit the context
    better and that have a more precise meaning.
* New: [Explain what can you use instead of I know.](orthography.md#stop-saying-i-know)
    Using "I know" may not be the best way to show the other person that you've got
    the information. You can take the chance to use other words that additionally
    gives more context on how you stand with the information you've received,
    thus improving the communication and creating a bond.
* New: [Explain the use of z or s in some words.](orthography.md#use-of-z-or-s-in-some-words)
    It looks like American english uses `z` while British uses `s`, some examples:
    * [Organizations vs organisation](https://writingexplained.org/organisation-vs-organization-difference).
    * [Authorization vs authorisation](https://english.stackexchange.com/questions/282621/authorization-vs-authorisation-im-in-some-real-dilemma).
    * [Customized vs customised](https://grammarist.com/spelling/customise-customize/).
    Both forms are correct, so choose the one that suits your liking.
### [Forking this garden](writing_style.md)
* New: [Analyze interesting books on writing style.](writing_style.md#writing-style-books)
    * The elements of style by William Strunk Jr and E.B White
    * On writing well by William Zinsser
    * Bird by bird by Anne Lamott
    * On writing by Stephen King
* New: [Explain how to end a letter.](writing_style.md#how-to-end-a-letter)
    Use Sincerely in doubt and Best if you have more confidence. Add a comma
    after the sign-off and *never* use Cheers (it's what I've been doing all
    my life `(◞‸◟；)` ).
* New: Explain how to fork the blue book.
### [Digital Gardens](digital_garden.md)
* New: Introduce the digital garden concept.
    [Digital Garden](https://joelhooks.com/digital-garden) is a method of
    storing and maintaining knowledge in an maintainable, scalable and
    searchable way. They are also known as second brains.
## [Cooking](cooking.md)
* New: Introduce the cooking art.
### [Cooking Basics](cooking_basics.md)
* New: [Refactor the perfect technique to boil an egg.](cooking_basics.md#boiling-an-egg)
* New: [Explain how to boil chickpeas when you've forgotten to soak them.](cooking_basics.md#boil-chickpeas-when-you've-forgotten-to-soak-them)
    Add a level teaspoon of baking soda to the pot and
    cook them as usual
## [Pilates](pilates.md)
* New: Introduce the art.
    [Pilates](https://en.wikipedia.org/wiki/Pilates) is a physical fitness system
    based on controlled movements putting emphasis on alignment, breathing,
    developing a strong core, and improving coordination and balance. The core (or
    powerhouse), consisting of the muscles of the abdomen, low back, and hips, is
    thought to be the key to a person's stability.
    Pilates' system allows for different exercises to be modified in range of
    difficulty from beginner to advanced or to any other level, and also in terms of
    the instructor and practitioner's specific goals and/or limitations. Intensity
    can be increased over time as the body adapts itself to the exercises.
    You can think of yoga, but without the spiritual aspects.
    Also added:
    * It's principles
    * The [swing from table](pilates.md#swing-from-table) exercise.
## Board Gaming
### [Regicide](regicide.md)
* New: Introduce the awesome Regicide card game.
    [Regicide](https://www.badgersfrommars.com/) is a wonderful cooperative card game for 1 to 4 players. It's awesome how they've built such a rich game dynamic with a normal deck of cards. Even if you can play it with any deck, I suggest to buy [the deck they sell](https://www.badgersfrommars.com/buy-regicide) because their cards are magnificent and they deserve the money for their impressive game. Another thing I love about them is that even if you can't or don't want to pay for the game, they give the [rules for free](https://www.badgersfrommars.com/assets/RegicideRulesA4.pdf?v=2).
    If you don't like reading the rules directly from their pdf (although it's quite short), they explain them in [this video](https://www.badgersfrommars.com/regicide).
    I've loved the game so much, that I've created some variations of the
    rules to make each game more different and changeling.
## [Drawing](drawing.md)
* New: [How to draw Ellipses.](drawing.md#ellipses)
    Ellipses are the next basic shape we're going to study (after the lines). They
    are extremely important and notoriously annoying to draw. Important because
    we're going to be using ellipses in 2D space to represent circles that exist in
    3D space.
    In this section we:
    * Introduce the basic concepts surrounding the ellipses
    * [How to draw them](drawing.md#drawing-ellipses).
### [Exercise Pool](exercise_pool.md)
* New: [Add the Tables of ellipses drawing exercise.](exercise_pool.md#ellipses)
    This exercise is meant to get you used to drawing ellipses, in a variety of
    sizes, orientations and degrees. It also sets out a clear space each ellipse is
    meant to occupy, giving us a means to assess whether or not an ellipse was
    successful, or if there were visible mistakes (where it went outside of its
    allotted space, or ended up falling short). Practicing against set criteria,
    with a way to judge success/failure is an important element of learning. There's
    nothing wrong with failure - it's an opportunity to learn. Having a clearly
    defined task allows us to analyze those failures and make the most of them.
## [Origami](origami.md)
* New: Add mark1626 digital garden article on origamis.
# [Contact](contact.md)
* Correction: Update the XMPP address.
    Riseup has stopped giving support for XMPP :(
# Other
* New: Add remote work tips.
* New: Introduce lazy loading implementation paradigm with python.
* New: Explain how to lazy load pydantic objects.
* New: Explain my accounting automation workflow.
* New: Feature mkdocs-rss-plugin as a solution of publishing mkdocs updates as an RSS.
* New: Add a git issue tracker and markdown formatter.
* Correction: Deprecate mkdocs issues.
    They've been fixed in the last release
* New: Suggest organize to act on computer file changes.
    [organize](https://organize.readthedocs.io/en/latest/) looks good for
    automating processes on files. Maybe it's interesting to run it with
    [inotifywait](https://askubuntu.com/a/819290) instead of with a [cron
    job](https://github.com/tfeldmann/organize/issues/18).
* New: Introduce Outrun.
    [Outrun](https://github.com/Overv/outrun) lets you execute a local command using
    the processing power of another Linux machine.
* Correction: Broken links.
    Removed the link to (everything_i_know.md) since it no longer exists. Updated some links that where broken due to a folder structure change.
* New: Explain how to select a random choice from `Enum` objects.
    [pydantic](pydantic.md) uses `Enum` objects to define [the choices of
    fields](https://pydantic-docs.helpmanual.io/usage/types/#enums-and-choices), so
    we need them to create the factories of those objects.
* New: Improve the periodic tasks and application metrics monitoring.
    Setup an [healthchecks](https://healthchecks.io/) instance with the [linuxserver image](https://docs.linuxserver.io/images/docker-healthchecks) to monitor cronjobs.
    For the notifications either use the [prometheus metrics](https://healthchecks.io/docs/configuring_prometheus/) or an [apprise](https://github.com/healthchecks/healthchecks/issues/271) compatible system.
* New: Explain how to check if an rsync command has gone well.
    Run `diff -r --brief source/ dest/`, and check that there is no output.
* Reorganization: Reorder the sections of the site navigation menu.
    Give more importance to Coding, Activism and Life Management, reducing
    the Software Architecture and Data Analysis sections.
* New: Introduce the tool management section.
    Most of the tasks or processes we do involve some kind of tool, the better you
    know how to use them, the better your efficiency will be. The more you use
    a tool, the more it's worth the investment of time to improve your usage of it.
    Whenever I use a tool, I try to think if I could configure it or use it in a way
    that will make it easier or quicker. Don't go crazy and try to change everything. Go
    step by step, and once you've internalized the improvement, implement the next.
* Reorganization: Move the tasks tools from the task management article to their own.