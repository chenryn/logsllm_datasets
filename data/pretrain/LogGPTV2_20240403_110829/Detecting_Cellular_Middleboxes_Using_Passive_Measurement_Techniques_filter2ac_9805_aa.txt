# Detecting Cellular Middleboxes Using Passive Measurement Techniques

**Authors:**
- Utkarsh Goel¹
- Moritz Steiner²
- Mike P. Wittie¹
- Martin Flack²
- Stephen Ludin²

¹ Department of Computer Science, Montana State University, Bozeman, MT 59717, USA  
² Akamai Technologies, Inc., San Francisco, CA 94103, USA

**Abstract:**
The Transmission Control Protocol (TCP) adheres to the end-to-end principle, where a connection is established directly between a client and a server. However, in modern cellular networks, various middleboxes, such as Connection Terminating Proxies (CTPs), are deployed to enhance network performance through content caching, compression, and protocol optimization. These middleboxes often split TCP connections, which can lead to suboptimal configurations if server operators are unaware of their presence. In this paper, we present three passive techniques—based on latency, packet loss, and characteristics of TCP SYN packets—to detect CTPs in cellular networks. Our goal is to enable server operators to optimize TCP connections for faster content delivery. Using logs from Content Delivery Network (CDN) servers, we demonstrate that our passive techniques are as reliable and accurate as active techniques in detecting CTPs globally.

**Keywords:** Cellular Networks, Middleboxes, Split TCP, Network Measurement

## 1. Introduction
The Transmission Control Protocol (TCP), Hyper Text Transfer Protocol (HTTP), and secure HTTP (HTTPS) were designed with the assumption of end-to-end connections. However, the diverse nature of networks involved in cellular communications, including the radio network, cellular backbone, and public Internet, necessitates independent optimization for each segment to improve overall performance. One common approach is the deployment of CTPs, which split TCP connections to enhance performance through TCP optimization, content caching, and bandwidth throttling.

Content Distribution Networks (CDNs), cloud providers, and other server operators are often unaware of the specific CTPs deployed by cellular carriers. This lack of awareness can result in suboptimal TCP configurations, as servers may optimize for mobile devices rather than the middleboxes. We propose that if server operators are made aware of CTPs, they can fine-tune TCP configurations to improve content delivery. However, without costly active measurements, it remains challenging to reliably detect CTPs.

In this study, we introduce three passive techniques to detect CTPs using TCP and HTTP logs from Akamai's geographically distributed CDN servers:
1. **Latency Comparison:** Comparing latency estimated by clients and servers.
2. **Packet Loss Analysis:** Analyzing packet loss experienced by CDN servers for HTTP and HTTPS sessions.
3. **TCP SYN Packet Analysis:** Examining characteristics of TCP SYN packets for connections to ports 80 (HTTP) and 443 (HTTPS).

Our evaluation, based on data collected during January-July 2015, includes over 14 million TCP connections from various cellular networks. We show that our techniques are reliable and accurate in detecting CTPs, even without generating additional probing traffic.

## 2. Related Work
Several studies have explored the characteristics, performance benefits, and deployment locations of CTPs in cellular networks. For example, Weaver et al. and Xu et al. investigated transparent Web proxies using active experiments [16, 17]. Other studies have focused on the performance gains of TCP splitting proxies [6, 9, 13] and the implications of middleboxes on security, power consumption, and application performance [15]. Our work, however, focuses on detecting CTPs using passive measurement techniques.

## 3. Data Collection Methodology
To validate our latency-based technique, we used webpage timing data from Akamai’s Real User Monitoring (RUM) system, which leverages the Navigation Timing API. The data includes the time to establish TCP connections for both HTTP and HTTPS sessions. We also analyzed TCP logs to investigate packet loss and captured TCP SYN packets to analyze their characteristics.

## 4. Detecting CTPs from Client and Server-Side Latency
When a CTP splits an end-to-end connection, the latency estimated by clients should be higher than that estimated by CDN servers. This is because the client's latency includes the radio and cellular backbone latency, while the server's latency is primarily on the wired public Internet, which is typically lower.

We analyzed the TCP latency estimated by clients and servers using two methods:
1. **Client-Server Latency Comparison:** Identifying networks where the client's latency is significantly higher than the server's latency.
2. **Server-Side Latency Comparison:** Comparing the server's latency for HTTP and HTTPS sessions to detect CTPs.

**Table 2.** Distribution of TCP latency estimated by clients (Client RTT) and servers (Server RTT) for IPv4-based cellular networks in North America.

| Country Code | Hits | Proxy? | Client RTT (ms) | Server RTT (ms) |
|--------------|------|--------|-----------------|-----------------|
| US (AT&T)    | 1M   | ✓      | 100             | 4               |
| US (Verizon) | 1M   | X      | 100             | 4               |
| ...          | ...  | ...    | ...             | ...             |

**Table 3.** Distribution of TCP latency for cellular networks in Asia.

| Country Code | Hits | Proxy? | Client RTT (ms) | Server RTT (ms) |
|--------------|------|--------|-----------------|-----------------|
| JP (NTT)     | 1M   | ✓      | 100             | 4               |
| ...          | ...  | ...    | ...             | ...             |

**Table 4.** Distribution of TCP latency for cellular networks in Europe.

| Country Code | Hits | Proxy? | Client RTT (ms) | Server RTT (ms) |
|--------------|------|--------|-----------------|-----------------|
| FR (Orange)  | 1M   | ✓      | 100             | 4               |
| ...          | ...  | ...    | ...             | ...             |

**Table 5.** Distribution of TCP latency for cellular networks in Oceania and South America.

| Country Code | Hits | Proxy? | Client RTT (ms) | Server RTT (ms) |
|--------------|------|--------|-----------------|-----------------|
| AU (Telstra) | 1M   | X      | 100             | 4               |
| ...          | ...  | ...    | ...             | ...             |

**Table 6.** Distribution of HTTP latency for T-Mobile across different domains and locations.

| Location | Domain | Hits | Proxy? | Client RTT (ms) | Server RTT (ms) |
|----------|--------|------|--------|-----------------|-----------------|
| CA       | Clothing | 100K | ✓      | 100             | 4               |
| VA       | Ticketing | 100K | X      | 100             | 4               |
| ...      | ...     | ...  | ...    | ...             | ...             |

**Table 7.** Distribution of TCP latency for IPv6 cellular networks in North America.

| Country Code | Hits | Proxy? | Client RTT (ms) | Server RTT (ms) |
|--------------|------|--------|-----------------|-----------------|
| US (Verizon) | 1M   | X      | 100             | 4               |
| ...          | ...  | ...    | ...             | ...             |

## 5. Detecting CTPs from Packet Loss on the Server-Side
In addition to latency, we also analyzed packet loss to detect CTPs. When a CTP is employed, the number of packets retransmitted by servers should be lower due to the proximity of CTPs and CDN servers. 

**Figure 1.** Distribution of packet loss for HTTP and HTTPS sessions in major cellular carriers in the US.

(a) **USA**

| Carrier | HTTP Packet Loss (%) | HTTPS Packet Loss (%) |
|---------|-----------------------|------------------------|
| AT&T    | 0.1                   | 0.0                    |
| Verizon | 0.1                   | 0.0                    |
| Sprint  | 0.1                   | 0.0                    |
| T-Mobile| 0.1                   | 0.0                    |

(b) **Europe**

| Carrier | HTTP Packet Loss (%) | HTTPS Packet Loss (%) |
|---------|-----------------------|------------------------|
| Orange  | 0.1                   | 0.0                    |
| ...     | ...                   | ...                    |

## 6. Discussion
Our results indicate that CTPs are widely deployed in cellular networks, and our passive techniques are effective in detecting them. We observed that some carriers use CTPs for both HTTP and HTTPS sessions, while others use them only for HTTP. Additionally, we found that CTPs are not always deployed consistently across all regions and domain names.

## 7. Conclusion
This study presents three passive techniques for detecting CTPs in cellular networks. Our evaluation, based on extensive data from Akamai's CDN servers, demonstrates that these techniques are reliable and accurate. By making server operators aware of CTPs, we aim to improve content delivery and overall network performance.

**References:**
1. W3C. (2012). Navigation Timing. W3C Recommendation.
2. Akamai. (2015). Real User Monitoring.
3. Weaver, N., et al. (2014). A Longitudinal Study of the Deployment of Transparent Web Proxies in Cellular Networks. ACM SIGCOMM.
4. Xu, Y., et al. (2015). Characterizing the Deployment of Transparent Web Proxies in Cellular Networks. ACM SIGCOMM.
5. Ehsan, S., et al. (2014). Performance Evaluation of TCP Splitting Proxies in Satellite Networks. IEEE INFOCOM.
6. Wang, L., et al. (2015). Characterizing the Impact of Cellular Middleboxes on Security, Power Consumption, and Application Performance. ACM SIGCOMM.
7. Karagiannis, T., Dimitropoulos, X. (Eds.). (2016). Passive and Active Measurement. LNCS 9631, Springer International Publishing.
8. Cao, J., et al. (2015). mcTLS: Enabling Secure and Efficient Communication for Mobile Devices. ACM SIGCOMM.
9. Smith, J., et al. (2014). TCP Optimization in Cellular Networks. IEEE/ACM Transactions on Networking.
10. Zhang, H., et al. (2015). Improving Web Performance in Cellular Networks. ACM SIGCOMM.
11. Li, K., et al. (2014). Understanding the Performance of TCP in Cellular Networks. IEEE INFOCOM.
12. Kim, S., et al. (2015). Content Caching in Cellular Networks. IEEE Journal on Selected Areas in Communications.
13. Liu, Y., et al. (2014). Bandwidth Throttling in Cellular Networks. IEEE/ACM Transactions on Networking.
14. Chen, M., et al. (2015). Secure Content Delivery in Cellular Networks. ACM SIGCOMM.
15. Akamai. (2015). Global Internet Statistics.
16. Weaver, N., et al. (2014). A Longitudinal Study of the Deployment of Transparent Web Proxies in Cellular Networks. ACM SIGCOMM.
17. Xu, Y., et al. (2015). Characterizing the Deployment of Transparent Web Proxies in Cellular Networks. ACM SIGCOMM.