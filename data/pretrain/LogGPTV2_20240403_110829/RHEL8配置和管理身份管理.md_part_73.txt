    [root@server SmartCard]# openssl x509 -noout -text -in smartcard_ca.pem | more
    ```
6.  使用管理员特权，通过内置的 `ipa-advise`{.literal} 工具生成配置脚本：
    ``` literallayout
    [root@server SmartCard]# kinit admin
    [root@server SmartCard]# sudo ipa-advise config-server-for-smart-card-auth > config-server-for-smart-card-auth.sh
    ```
    `config-server-for-smart-card-auth.sh`{.literal} 脚本执行以下操作：
    ::: itemizedlist
    -   它配置 IdM Apache HTTP 服务器。
    -   它在 KDC（Key Distribution Center）中启用 PKINIT（Public Key
        Cryptography for Initial Authentication in Kerberos）。
    -   它将 IdM Web UI 配置为接受智能卡授权请求。
    :::
7.  执行脚本，将包含根 CA 和子 CA 证书的 PEM 文件添加为参数：
    ``` literallayout
    [root@server SmartCard]# chmod +x config-server-for-smart-card-auth.sh
    [root@server SmartCard]# ./config-server-for-smart-card-auth.sh smartcard_ca.pem ca.crt
    Ticket cache:KEYRING:persistent:0:0
    Default principal: PI:EMAIL
    [...]
    Systemwide CA database updated.
    The ipa-certupdate command was successful
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    在任何子 CA 证书前，确保将根 CA 的证书添加为参数，并且 CA 或子 CA
    证书还没有过期。
    :::
8.  另外，如果发布用户证书的证书颁发机构不提供任何在线证书状态协议(OCSP)响应程序，您可能需要禁用对
    IdM Web UI 身份验证的 OCSP 检查：
    ::: orderedlist
    1.  在 `/etc/httpd/conf.d/ssl.conf`{.literal} 文件中将
        `SSLOCSPEnable`{.literal} 参数设为 `off`{.literal} ：
        ``` literallayout
        SSLOCSPEnable off
        ```
    2.  重启 Apache 守护进程(httpd)使更改立即生效：
        ``` literallayout
        [root@server SmartCard]# sudo systemctl restart httpd
        ```
    :::
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    如果您只使用 IdM CA 发出的用户证书，不要禁用 OCSP 检查。OCSP
    响应器是 IdM 的一部分。
    :::
    有关如何保持 OCSP 检查处于启用状态，同时防止 IdM
    服务器拒绝用户证书（如果 IdM 服务器不包含有关颁发用户证书的 CA 侦听
    OCSP 服务请求的位置的信息）的说明，请参阅 [Apache mod_ssl
    配置选项](http://httpd.apache.org/docs/trunk/en/mod/mod_ssl.html){.link}
    中的 `SSLOCSPDefaultResponder`{.literal} 指令。
:::
该服务器现在被配置为智能卡验证。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
要在整个拓扑中启用智能卡验证，请在每个 IdM 服务器中运行操作过程。
:::
:::
::: section
::: titlepage
# []{#configuring-idm-for-smart-card-auth_configuring-and-managing-idm.html#conf-idm-client-for-smart-card-auth_configuring-idm-for-smart-card-auth}为智能卡验证配置 IdM 客户端 {.title}
:::
这部分描述了如何为智能卡身份验证配置 IdM 客户端。这个过程需要运行在每个
IdM
系统、客户端或服务器上，您希望在使用智能卡进行身份验证时连接到这些系统。例如，若要启用从主机
A 到主机 B 的 `ssh`{.literal} 连接，需要在主机 B 上运行脚本。
作为管理员，运行这个流程来使用如下方法启用智能卡身份验证
::: itemizedlist
-   `ssh`{.literal} 协议
    详情请参阅 [使用智能卡身份验证配置 SSH
    访问](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_authentication_and_authorization_in_rhel/index#configuring-ssh-access-using-smart-card-authentication_configuring-and-importing-local-certificates-to-a-smart-card){.link}。
-   控制台登录
-   Gnome 显示管理器(GDM)
-   `su`{.literal} 命令
:::
对于向 IdM Web UI 进行身份验证，不需要此流程。向 IdM Web UI
进行身份验证涉及两个主机，它们都不必是 IdM 客户端：
::: itemizedlist
-   机器可能位于运行浏览器的 IdM 域之外
-   运行 `httpd`{.literal} 的 IdM 服务器
:::
以下流程假设您在 IdM 客户端，而不是 IdM
服务器上配置智能卡身份验证。因此，您需要两台计算机：生成配置脚本的 IdM
服务器，以及运行脚本的 IdM 客户端。
::: itemizedlist
**先决条件**
-   为智能卡验证配置了您的 IdM 服务器，如 ["为智能卡验证配置 IdM
    服务器"一节](#configuring-idm-for-smart-card-auth_configuring-and-managing-idm.html#conf-idm-server-for-smart-card-auth_configuring-idm-for-smart-card-auth "为智能卡验证配置 IdM 服务器"){.xref}
    所述。
-   有对 IdM 服务器和 IdM 客户端的 root 访问权限。
-   您有 root CA 证书和任何子 CA 证书。
:::
::: orderedlist
**流程**
1.  在 IdM 服务器上，使用管理员权限通过 `ipa-advise`{.literal}
    生成配置脚本：
    ``` literallayout
    [root@server SmartCard]# kinit admin
    [root@server SmartCard]# ipa-advise config-client-for-smart-card-auth > config-client-for-smart-card-auth.sh
    ```
    `config-client-for-smart-card-auth.sh`{.literal} 脚本执行以下操作：
    ::: itemizedlist
    -   它配置智能卡守护进程。
    -   它设置系统范围信任存储。
    -   它将系统安全服务守护进程(SSSD)配置为允许智能卡登录到桌面。
    :::
2.  从 IdM 服务器中，将脚本复制到 IdM 客户端机器中选择的目录中：
    ``` literallayout
    [root@server SmartCard]# scp config-client-for-smart-card-auth.sh PI:EMAIL:/root/SmartCard/
    Password:
    config-client-for-smart-card-auth.sh        100%   2419       3.5MB/s   00:00
    ```
3.  为了方便起见，将 IdM 服务器上的 PEM 格式的 CA 证书文件复制到 IdM
    客户端机器上与在上一步中所使用的相同的目录中：
    ``` literallayout
    [root@server SmartCard]# scp {smartcard_ca.pem,ca.crt} PI:EMAIL:/root/SmartCard/
    Password:
    smartcard_ca.pem                    100%   1237     9.6KB/s   00:00
    ca.crt                              100%   2514    19.6KB/s   00:00
    ```
4.  在客户端机器上执行脚本，将包含 CA 证书的 PEM 文件添加为参数：
    ``` literallayout
    [root@client SmartCard]# kinit admin
    [root@client SmartCard]# chmod +x config-client-for-smart-card-auth.sh
    [root@client SmartCard]# ./config-client-for-smart-card-auth.sh smartcard_ca.pem ca.crt
    Ticket cache:KEYRING:persistent:0:0
    Default principal: PI:EMAIL
    [...]
    Systemwide CA database updated.
    The ipa-certupdate command was successful
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    在任何子 CA 证书前，确保将根 CA 的证书添加为参数，并且 CA 或子 CA
    证书还没有过期。
    :::
:::
现在为智能卡验证配置了客户端。
:::
::: section
::: titlepage
# []{#configuring-idm-for-smart-card-auth_configuring-and-managing-idm.html#add-cert-idm-user_configuring-idm-for-smart-card-auth}在 IdM 中的用户条目中添加证书 {.title}
:::
这个步骤描述了如何在 IdM 的用户条目中添加外部证书。
也可以将证书映射数据上传到 IdM
中的用户条目，而不必上传整个证书。包含完整证书或证书映射数据的用户条目可以和相应的证书映射规则一起使用，以便于系统管理员配置智能卡身份验证。详情请查看在
[在智能卡上配置身份验证的证书映射规则](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_identity_management/conf-certmap-idm_configuring-and-managing-idm#certificate_mapping_rules_for_configuring_authentication_on_smart_cards){.link}
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
如果用户的证书已由 IdM
证书颁发机构发布，且证书已存储在用户条目中，则您可以跳过本节。
:::
::: section
::: titlepage
## []{#configuring-idm-for-smart-card-auth_configuring-and-managing-idm.html#proc-add-cert-idm-user-webui}在 IdM Web UI 的用户条目中添加证书 {.title}
:::
::: itemizedlist
**先决条件**
-   您有要添加到用户条目的证书。
:::
::: orderedlist
**流程**
1.  如果要给另一个用户添加证书，请以管理员身份登录到 IdM Web
    UI。要在您自己的配置文件中添加证书，您不需要管理员的凭证。
2.  导航到 `Users`{.literal} → `Active users`{.literal} →
    `sc_user`{.literal}。
3.  找到 `Certificate`{.literal} 选项，并单击 `Add`{.literal} 。
4.  在 `命令行界面`{.literal} 中，使用 `cat`{.literal}
    工具或文本编辑器以 `PEM`{.literal} 格式显示证书：
    ``` literallayout
    [user@client SmartCard]$ cat testuser.crt
    ```
5.  将证书从 CLI 复制并粘贴到 Web UI 中打开的窗口中。
6.  点 `Add`{.literal}。
    ::: figure
    []{#configuring-idm-for-smart-card-auth_configuring-and-managing-idm.html#configuring-idm-for-smart-card-auth-new-certmaprule-add}
    **图 51.1. 在 IdM Web UI 中添加新证书**
    ::: figure-contents
    ::: mediaobject
    ![\"新证书\"弹出窗口屏幕截图，其中有一个用于 PEM 格式的 base64
    证书的大字段。右下角的\"Add\"按钮高亮显示。](images/idm-add-cert.png)
    :::
    :::
    :::
:::
`sc_user`{.literal} 条目现在包含一个外部证书。
:::
::: section
::: titlepage
## []{#configuring-idm-for-smart-card-auth_configuring-and-managing-idm.html#proc-add-cert-idm-user-cli}在 IdM CLI 中向用户条目中添加证书 {.title}
:::
::: itemizedlist
**先决条件**
-   您有要添加到用户条目的证书。
:::
::: orderedlist
**流程**
1.  如果要给另一个用户添加证书，请以管理员身份登录到 IdM CLI：
    ``` literallayout
    [user@client SmartCard]$ kinit admin
    ```
    要在您自己的配置文件中添加证书，您不需要管理员的凭证：
    ``` literallayout
    [user@client SmartCard]$ kinit sc_user
    ```
2.  创建一个包含证书的环境变量，该变量移除了标头和页脚，并串联成一行，这是
    `ipa user-add-cert`{.literal} 命令期望的格式：
    ``` literallayout
    [user@client SmartCard]$ export CERT=`openssl x509 -outform der -in testuser.crt | base64 -w0 -`
    ```
    请注意，`testuser.crt`{.literal} 文件中的证书必须是 `PEM`{.literal}
    格式。
3.  使用 `ipa user-add-cert`{.literal} 命令将证书添加到 sc_user
    的配置文件：
    ``` literallayout
    [user@client SmartCard]$ ipa user-add-cert sc_user --certificate=$CERT
    ```
:::
`sc_user`{.literal} 条目现在包含一个外部证书。
:::
:::
::: section
::: titlepage
# []{#configuring-idm-for-smart-card-auth_configuring-and-managing-idm.html#installing-tools-for-managing-and-using-smart-cards_configuring-idm-for-smart-card-auth}安装用来管理和使用智能卡的工具 {.title}
:::
要配置智能卡，您需要一些工具来生成证书并将其保存在智能卡中。
您必须：
::: itemizedlist
-   安装 `gnutls-utils`{.literal} 软件包，其帮助您管理证书。
-   安装 `opensc`{.literal} 软件包，它提供一组用于智能卡的库和工具。
-   启动与智能卡读卡器通信的 `pcscd`{.literal} 服务。
:::
::: orderedlist
**流程**
1.  安装 `opensc`{.literal} 和 `gnutls-utils`{.literal} 软件包：
    ``` literallayout
    # dnf -y install opensc gnutls-utils
    ```
2.  启动 `pcscd`{.literal} 服务。
    ``` literallayout
    # systemctl start pcscd
    ```
:::
验证 `pcscd`{.literal} 服务是否已启动并运行。