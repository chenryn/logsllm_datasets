-   `rsyslogd(8)`{.literal}, `rsyslog.conf(5)`{.literal},
    `semanage(8)`{.literal}, 和 `firewall-cmd(1)`{.literal} man pages.
-   安装了 `rsyslog-doc`{.literal} 软件包（位于
    `file:///usr/share/doc/rsyslog/html/index.html`{.literal} 的文档）
:::
:::
::: section
::: titlepage
# []{#assembly_configuring-a-remote-logging-solution_configuring-basic-system-settings.html#configuring-remote-logging-to-a-server-over-tcp_assembly_configuring-a-remote-logging-solution}通过 TCP 配置远程日志记录到服务器 {.title}
:::
按照以下步骤配置通过 TCP 协议将日志消息转发到服务器。`omfwd`{.literal}
插件通过 UDP 或 TCP 提供转发。默认协议是
UDP。因为插件内置在内，所以不必加载它。
::: itemizedlist
**先决条件**
-   `rsyslog`{.literal} 软件包安装在应该向服务器报告的客户端系统上。
-   您已为远程日志记录配置了服务器。
-   在 SELinux 中允许指定的端口并在防火墙中打开。
-   系统包含 `policycoreutils-python-utils`{.literal} 软件包，它为
    SELinux 配置中添加非标准端口提供 `semanage`{.literal} 命令。
:::
::: orderedlist
**流程**
1.  在 `/etc/rsyslog.d/`{.literal}
    目录中创建一个新文件（例如，`remotelog.conf`{.literal}），并插入以下内容：
    ``` screen
    *.* action(type="omfwd"
          queue.type="linkedlist"
          queue.filename="example_fwd"
          action.resumeRetryCount="-1"
          queue.saveOnShutdown="on"
          target="example.com" port="30514" protocol="tcp"
         )
    ```
    其中：
    ::: itemizedlist
    -   `queue.type="linkedlist"`{.literal} 启用一个 LinkedList
        in-memory 队列。
    -   `queue.filename`{.literal} 定义磁盘存储。备份文件使用之前全局
        `workDirectory`{.literal} 指令指定的工作目录中的
        `example_fwd`{.literal} 前缀创建，
    -   `action.resumeRetryCount -1`{.literal} 设置可防止
        `rsyslog`{.literal} 在重试时丢弃消息（如果服务器不响应时），
    -   启用 `queue.saveOnShutdown="on"`{.literal} 会在
        `rsyslog`{.literal} 关闭是保存 in-memory 数据。
    -   最后一行将所有收到的消息转发到日志记录服务器，端口规格是可选的。
    :::
    使用这个配置，`rsyslog`{.literal}
    会向服务器发送消息，但如果远程服务器无法访问，则会将消息保留在内存中。只有
    `rsyslog`{.literal}
    耗尽配置的内存队列空间或需要关闭时，才能创建磁盘上的文件，从而让系统性能受益。
2.  重新启动 `rsyslog`{.literal} 服务。
    ``` screen
    # systemctl restart rsyslog
    ```
:::
::: title
**验证**
:::
要验证客户端系统向服务器发送信息，请按照以下步骤执行：
::: orderedlist
1.  在客户端系统中发送测试信息：
    ``` screen
    # logger test
    ```
2.  在服务器系统上，查看 `/var/log/messages`{.literal} 日志，例如：
    ``` screen
    # cat /var/log/remote/msg/hostname/root.log
    Feb 25 03:53:17 hostname root[6064]: test
    ```
    其中 [*hostname*]{.emphasis}
    是客户端系统的主机名。请注意，日志包含输入 `logger`{.literal}
    命令的用户的用户名，本例中为 `root`{.literal}。
:::
::: itemizedlist
**其他资源**
-   `rsyslogd(8)`{.literal} 和 `rsyslog.conf(5)`{.literal} 手册页。
-   安装了 `rsyslog-doc`{.literal} 软件包（位于
    `file:///usr/share/doc/rsyslog/html/index.html`{.literal} 的文档）
:::
:::
::: section
::: titlepage
# []{#assembly_configuring-a-remote-logging-solution_configuring-basic-system-settings.html#proc_configuring-tls-encrypted-remote-logging_assembly_configuring-a-remote-logging-solution}配置 TLS 加密的远程日志记录 {.title}
:::
默认情况下，Rsyslog 以纯文本格式发送 remote-logging
通信。如果您的场景需要保护这个通信频道，您可以使用 TLS 加密它。
要通过 TLS
使用加密传输，请同时配置服务器和客户端。服务器收集和分析由一个或多个客户端系统发送的日志。
您可以使用 `ossl`{.literal} 网络流驱动程序(OpenSSL)或 `gtls`{.literal}
流驱动程序(GnuTLS)。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
如果您的系统具有更高的安全性，例如，没有连接到任何网络或有严格授权的系统，请使用独立的系统作为认证授权(CA)。
:::
::: itemizedlist
**先决条件**
-   有对客户端和服务器系统的 `root`{.literal} 访问权限。
-   `rsyslog`{.literal} 和 `rsyslog-openssl`{.literal}
    软件包安装在服务器和客户端系统中。
-   如果您使用 `gtls`{.literal} 网络流驱动程序，请安装
    `rsyslog-gnutls`{.literal} 软件包，而不是
    `rsyslog-openssl`{.literal}。
-   如果使用 `certtool`{.literal} 命令生成证书，请安装
    `gnutls-utils`{.literal} 软件包。
-   在您的日志服务器中，以下证书位于
    `/etc/pki/ca-trust/source/anchors/`{.literal} 目录中，并使用
    `update-ca-trust`{.literal} 命令更新您的系统配置：
    ::: itemizedlist
    -   `ca-cert.pem`{.literal} - 一个 CA
        证书，它可以在日志记录服务器和客户端上验证密钥和证书。
    -   `server-cert.pem`{.literal} - 日志记录服务器的公钥。
    -   `server-key.pem`{.literal} - 日志记录服务器的私钥。
    :::
-   在您的日志记录客户端中，以下证书位于
    `/etc/pki/ca-trust/source/anchors/`{.literal} 目录中，并使用
    `update-ca-trust`{.literal} 来更新您的系统配置：
    ::: itemizedlist
    -   `ca-cert.pem`{.literal} - 一个 CA
        证书，它可以在日志记录服务器和客户端上验证密钥和证书。
    -   `client-cert.pem`{.literal} - 客户端的公钥。
    -   `client-key.pem`{.literal} - 客户端的私钥。
    :::
:::
::: orderedlist
**流程**
1.  配置服务器以从您的客户端系统接收加密日志：
    ::: orderedlist
    1.  在 `/etc/rsyslog.d/`{.literal} 目录中创建一个新文件，例如
        `securelogser.conf`{.literal}。
    2.  要加密通信，配置文件必须包含指向服务器的证书文件的路径、所选身份验证方法，以及支持
        TLS 加密的流驱动程序。在
        `/etc/rsyslog.d/securelogser.conf`{.literal} 文件中添加以下行：
        ``` screen
        # Set certificate files
        global(
          DefaultNetstreamDriverCAFile="/etc/pki/ca-trust/source/anchors/ca-cert.pem"
          DefaultNetstreamDriverCertFile="/etc/pki/ca-trust/source/anchors/server-cert.pem"
          DefaultNetstreamDriverKeyFile="/etc/pki/ca-trust/source/anchors/server-key.pem"
        )
        # TCP listener
        module(
          load="imtcp"
          PermittedPeer=["client1.example.com", "client2.example.com"]
          StreamDriver.AuthMode="x509/name"
          StreamDriver.Mode="1"
          StreamDriver.Name="ossl"
        )
        # Start up listener at port 514
        input(
          type="imtcp"
          port="514"
        )
        ```
        ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 注意 {.title}
        如果您更喜欢 GnuTLS 驱动程序，请使用
        `StreamDriver.Name="gtls"`{.literal} 配置选项。有关比
        `x509/name`{.literal} 严格性低的验证模式的更多信息，请参阅使用
        `rsyslog-doc`{.literal} 软件包安装的文档。
        :::
    3.  将更改保存到 `/etc/rsyslog.d/securelogser.conf`{.literal} 文件。
    4.  验证 `/etc/rsyslog.conf`{.literal} 文件的语法以及
        `/etc/rsyslog.d/`{.literal} 目录中的任何文件：
        ``` screen
        # rsyslogd -N 1
        rsyslogd: version 8.1911.0-2.el8, config validation run (level 1), master config /etc/rsyslog.conf
        rsyslogd: End of config validation run. Bye.
        ```
    5.  确保 `rsyslog`{.literal} 服务在日志记录服务器中运行并启用：
        ``` screen
        # systemctl status rsyslog
        ```
    6.  重启 `rsyslog`{.literal} 服务：
        ``` screen
        # systemctl restart rsyslog
        ```
    7.  可选：如果没有启用 Rsyslog，请确保 `rsyslog`{.literal}
        服务在重启后自动启动：
        ``` screen
        # systemctl enable rsyslog
        ```
    :::
2.  配置客户端以将加密日志发送到服务器：
    ::: orderedlist
    1.  在客户端系统上，在 `/etc/rsyslog.d/`{.literal}
        目录中创建一个名为 的新文件，如 `securelogcli.conf`{.literal}。
    2.  在 `/etc/rsyslog.d/securelogcli.conf`{.literal}
        文件中添加以下行：
        ``` screen
        # Set certificate files
        global(
          DefaultNetstreamDriverCAFile="/etc/pki/ca-trust/source/anchors/ca-cert.pem"
          DefaultNetstreamDriverCertFile="/etc/pki/ca-trust/source/anchors/client-cert.pem"
          DefaultNetstreamDriverKeyFile="/etc/pki/ca-trust/source/anchors/client-key.pem"
        )
        # Set up the action for all messages
        *.* action(
          type="omfwd"
          StreamDriver="ossl"
          StreamDriverMode="1"
          StreamDriverPermittedPeers="server.example.com"
          StreamDriverAuthMode="x509/name"
          target="server.example.com" port="514" protocol="tcp"
        )
        ```
        ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 注意 {.title}
        如果您更喜欢 GnuTLS 驱动程序，请使用
        `StreamDriver.Name="gtls"`{.literal} 配置选项。
        :::
    3.  将更改保存到 `/etc/rsyslog.d/securelogser.conf`{.literal} 文件。
    4.  验证 `/etc/rsyslog.d/`{.literal} 目录中的
        `'/etc/rsyslog.conf`{.literal} 文件的语法和其他文件：
        ``` screen
        # rsyslogd -N 1
        rsyslogd: version 8.1911.0-2.el8, config validation run (level 1), master config /etc/rsyslog.conf
        rsyslogd: End of config validation run. Bye.
        ```
    5.  确保 `rsyslog`{.literal} 服务在日志记录服务器中运行并启用：
        ``` screen
        # systemctl status rsyslog
        ```
    6.  重启 `rsyslog`{.literal} 服务：
        ``` screen
        # systemctl restart rsyslog
        ```
    7.  可选：如果没有启用 Rsyslog，请确保 `rsyslog`{.literal}
        服务在重启后自动启动：
        ``` screen
        # systemctl enable rsyslog
        ```
    :::
:::
::: title
**验证**
:::
要验证客户端系统向服务器发送信息，请按照以下步骤执行：
::: orderedlist
1.  在客户端系统中发送测试信息：
    ``` screen
    # logger test
    ```
2.  在服务器系统上，查看 `/var/log/messages`{.literal} 日志，例如：
    ``` screen
    # cat /var/log/remote/msg/hostname/root.log
    Feb 25 03:53:17 hostname root[6064]: test
    ```
    其中 `hostname`{.literal}
    是客户端系统的主机名。请注意，该日志包含输入 logger
    命令的用户的用户名，本例中为 `root`{.literal}。
:::
::: itemizedlist
**其他资源**
-   `certtool(1)`{.literal}, `openssl(1)`{.literal},
    `update-ca-trust(8)`{.literal}, `rsyslogd(8)`{.literal}, 和
    `rsyslog.conf(5)`{.literal} man page。
-   安装了 `rsyslog-doc`{.literal} 软件包（位于
    `file:///usr/share/doc/rsyslog/html/index.html`{.literal} 的文档）
:::
:::
::: section
::: titlepage
# []{#assembly_configuring-a-remote-logging-solution_configuring-basic-system-settings.html#configuring-a-server-for-receiving-remote-logging-information-over-udp_assembly_configuring-a-remote-logging-solution}配置服务器以通过 UDP 接收远程日志信息 {.title}
:::
[**Rsyslog**]{.strong}
应用程序可让您将系统配置为从远程系统接收日志信息。要通过 UDP
使用远程日志记录，请同时配置服务器和客户端。接收服务器收集并分析一个或多个客户端系统发送的日志。默认情况下，`rsyslog`{.literal}
使用端口 `514`{.literal} 上的 UDP 从远程系统接收日志信息。
按照以下步骤配置服务器，以通过 UDP
协议收集和分析一个或多个客户端系统发送的日志。
::: itemizedlist
**先决条件**
-   rsyslog 已安装在服务器系统上。
-   您以 `root`{.literal} 身份登录到服务器中。
-   使用 `semanage`{.literal} 命令，为可选步骤安装
    `policycoreutils-python-utils`{.literal} 软件包。
-   `firewalld`{.literal} 服务在运行。
:::
::: orderedlist
**流程**
1.  可选：对于与默认端口 `514`{.literal} 不同的 `rsyslog`{.literal}
    流量，请使用其他端口：
    ::: orderedlist
    1.  将 `syslogd_port_t`{.literal} SELinux 类型添加到 SELinux
        策略配置中，使用您要 `rsyslog`{.literal} 的端口号替换
        `portno`{.literal} ：
        ``` screen
        # semanage port -a -t syslogd_port_t -p udp portno
        ```
    2.  配置 `firewalld`{.literal} 以允许传入的 `rsyslog`{.literal}
        流量，使用您要 `rsyslog`{.literal} 使用的端口替换
        `portno`{.literal}，区替换 `zone`{.literal}：
        ``` screen
        # firewall-cmd --zone=zone --permanent --add-port=portno/udp
        success
        # firewall-cmd --reload