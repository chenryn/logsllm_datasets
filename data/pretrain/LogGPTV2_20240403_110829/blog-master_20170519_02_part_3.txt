    else  
      -- return next v_rec;  
      perform pg_notify ($4, v_rec::text);  
    end if;  
    v_limit := v_limit -1;  
  end loop;  
end;  
$$ language plpgsql strict volatile;  
```  
会话2发起搜索请求  
```  
postgres=# select ff(st_makepoint(5000,5000), 1000, 10, 'abcd');  
NOTICE:  已经取足limit设置的 10 条数据, 但是距离 1000 以内的点可能还有.  
 ff   
----  
(1 row)  
```  
会话1将异步收到通道发来的消息  
```  
Asynchronous notification "abcd" with payload "(38434407,01010000000060763E6E87B34000C0028CC587B340,test,0.613437682476958)" received from server process with PID 36946.  
Asynchronous notification "abcd" with payload "(41792090,0101000000006008B91F88B3400000D5D13B87B340,test,0.776283650707887)" received from server process with PID 36946.  
Asynchronous notification "abcd" with payload "(90599062,0101000000002057B2A888B34000C093516E88B340,test,0.787366330405518)" received from server process with PID 36946.  
Asynchronous notification "abcd" with payload "(69482516,01010000000000A574AE88B34000601AEBA888B340,test,0.948568992176712)" received from server process with PID 36946.  
Asynchronous notification "abcd" with payload "(12426846,0101000000006075D49188B34000E0E8E70487B340,test,1.13425697837729)" received from server process with PID 36946.  
Asynchronous notification "abcd" with payload "(98299759,0101000000004054059388B340006014ED1089B340,test,1.21096126708341)" received from server process with PID 36946.  
Asynchronous notification "abcd" with payload "(31175773,010100000000C03179EE88B34000A03E0C1B87B340,test,1.29136079279649)" received from server process with PID 36946.  
Asynchronous notification "abcd" with payload "(11651191,01010000000080C6634C87B34000E0A4852689B340,test,1.34753214416354)" received from server process with PID 36946.  
Asynchronous notification "abcd" with payload "(50248773,010100000000C064B3A686B34000809FA0F487B340,test,1.34955653568245)" received from server process with PID 36946.  
Asynchronous notification "abcd" with payload "(28170573,010100000000608F958B86B34000C051C1F587B340,test,1.45529948415963)" received from server process with PID 36946.  
```  
具体用法，参考编程语言对应的PostgreSQL驱动，例如jdbc for postgresql, libpq等。  
### 4. HEAP离散IO放大优化  
在生成点云数据时，按地理位置信息的顺序进行数据的录入堆表，那么在搜索范围数据时，可以缩小需要访问的堆表数据块。  
就好像玩乐高积木一样，我们可以购买一些小的分隔盒，把不同形状的小零件放入不同的分隔盒，当需要找某个形状的零件时，定位到小的盒子后，一直从这个小盒子里拿就好了。而不需要到其他的小盒子里拿。  
这既是数据整理的魅力，将数据按查询需求归类存放，减少索引查询时HEAP IO的开销。  
## 八、PostgreSQL在GIS领域的其他应用
PostGIS是PostgreSQL的空间数据管理插件，可以管理诸如地理位置，多维数据，栅格数据，拓扑等数据。对数据进行空间计算，叠加计算，点面查询等空间数据相关的运算。    
![pic](../201609/20160929_02/0006.jpg)  
![pic](../201609/20160929_02/0048.jpg)  
![pic](../201609/20160929_02/0042.jpg)  
![pic](20170519_02_pic_009.jpg)  
[《视觉挖掘与PostGIS空间数据库的完美邂逅 - 广告营销\圈人》](201703/20170328_04.md)  
[《(AR虚拟现实)红包 技术思考 - GIS与图像识别的完美结合》](201701/20170113_01.md)  
[《多点最优路径规划 - (商旅问题,拼车,餐饮配送,包裹配送,包裹取件,回程单)》](201704/20170409_01.md)  
[《聊一聊双十一背后的技术 - 物流、动态路径规划》](201611/20161114_01.md)  
## 九、小结  
无人驾驶、物流配送机器人等业务的兴起，给传统的GIS数据库带来了不小的挑战：   
1\. 首先是数据量方面，一条6车道的道路，每平方米打100个点的话，100公里的道路，需要2.5亿个点。  
2\. 其次是数据属性，不仅仅要存储经纬度，海拔（XYZ），还需要存储点的材质、密度、颜色、时间等属性。不仅仅要存储单点，还要能存储点阵，线段等等。  
3\. 最后的数据的写入、大批量数据的交互查询需求，要求实时响应。打点时要求快速的写入，定位、自动驾驶时需要快速的获取周边的海量POINTs。  
PostgreSQL, PostGIS, pg-grid, pgpointcloud很好的满足了这三个方面的需求。  
在优化代码前，获取附近20万个点，需1秒。需要获取更大数据量时，通过pgpointcloud、网格化聚合等优化手段来提速，获取附近20万个点仅需15毫秒; 获取附近500万个点，仅需312毫秒。  
![pic](20170519_02_pic_008.jpg)  
性能优化永远是没有止境的话题，加油小伙伴们，加油PostgreSQL，PostGIS, pgpointcloud。  
## 十、阿里云RDS PostgreSQL,HybridDB PostgreSQL的经典用法
### RDS PostgreSQL
负责OLTP和T+0的OLAP业务，主要体现在这几个方面  
1\. 性能  
RDS PostgreSQL主要处理在线事务以及少量的准实时分析。  
PG OLTP的性能可以参考这篇文档，性能区间属于商业数据库水准。  
[《数据库界的华山论剑 tpc.org》](../201701/20170125_01.md)    
PG 的OLAP分析能力，可以参考这篇文档，其多核并行，JIT，算子复用等特性，使得PG的OLAP能力相比其他RDBMS数据库有质的提升。  
[《分析加速引擎黑科技 - LLVM、列存、多核并行、算子复用 大联姻 - 一起来开启PostgreSQL的百宝箱》](../201612/20161216_01.md)    
PostgreSQL 10 在HTAP方面还有更多的增强，将于近期推出公测。  
2\. 功能  
功能是PostgreSQL的强项，详见[《PostgreSQL前世今生》](../201609/20160929_02.md)。  
3\. 扩展能力  
计算能力扩展，通过增加CPU，可以扩展复杂计算的性能。  
存储能力扩展，通过OSS存储以及oss_fdw插件，可以扩展RDS PG的存储能力，打破存储极限。  
4\. 成本  
存储成本：由于大部分需要分离的数据都存储到OSS了，用户不再需要考虑这部分的容灾、备份问题。相比存储在数据库中，存储成本大幅降低。  
开发成本：RDS PG, HybridDB PG都支持丰富的SQL标准接口，访问OSS中的数据（通过TABLE接口），使用的也是SQL标准接口。节省了大量的开发成本，  
维护成本：使用云服务，运维成本几乎为0。  
5\. 覆盖行业  
覆盖了银行、保险、证券、物联网、互联网、游戏、天文、出行、电商、传统企业等行业。  
### HybridDB for PostgreSQL
1\. 性能  
HybridDB PostgreSQL为MPP架构，OLAP方面的计算能力很强，云端已有大量 100TB 以上的用户在使用。  
2\. 功能  
与PostgreSQL一脉相承，基本和PostgreSQL的功能贴近。  
3\. 扩展能力  
计算能力扩展，通过增加计算节点数，可以扩展复杂计算的性能。  
存储能力扩展，通过OSS存储以及oss_fdw插件，可以扩展RDS PG的存储能力，打破存储极限。  
4\. 成本  
存储成本：由于大部分需要分离的数据都存储到OSS了，用户不再需要考虑这部分的容灾、备份问题。相比存储在数据库中，存储成本大幅降低。  
开发成本：RDS PG, HybridDB PG都支持丰富的SQL标准接口，访问OSS中的数据（通过TABLE接口），使用的也是SQL标准接口。节省了大量的开发成本，  
维护成本：使用云服务，运维成本几乎为0。  
5\. 覆盖行业  
覆盖了银行、保险、证券、物联网、互联网、游戏、天文、出行、电商、传统企业等行业。  
### 典型用户用法  
技术栈与云端应用：   
![pic](20170509_02_pic_004.jpg)  
![pic](20170509_02_pic_009.jpg)  
云端存储与计算分离用法：  
[《RDS PostgreSQL : 使用 oss_fdw 读写OSS对象存储》](https://help.aliyun.com/document_detail/44461.html)  
[《HybridDB PostgreSQL : 使用 oss_fdw 读写OSS对象存储》](https://help.aliyun.com/document_detail/35457.html)  
## 十一、参考  
http://pointclouds.org/  
http://s3.cleverelephant.ca/foss4gna2013-pointcloud.pdf  
http://postgis.net/documentation/  
[《GIS附近查找性能优化 - PostGIS long lat geometry distance search tuning using gist knn function》](../201308/20130806_01.md)  
[《分析加速引擎黑科技 - LLVM、列存、多核并行、算子复用 大联姻 - 一起来开启PostgreSQL的百宝箱》](../201612/20161216_01.md)    
[《索引顺序扫描引发的堆扫描IO放大背后的统计学原理与解决办法 - PostgreSQL index scan enlarge heap page scans when index and column correlation small.》](../201404/20140426_01.md)    
[《蜂巢的艺术与技术价值 - PostgreSQL PostGIS's hex-grid》](../201701/20170124_01.md)    
[《PostgreSQL 百亿地理位置数据 近邻查询性能》](../201601/20160119_01.md)    
https://www.openstreetmap.org/#map=5/51.500/-0.100  
https://www.postgresql.org/docs/9.6/static/sql-notify.html  
https://www.postgresql.org/docs/9.6/static/libpq.html  
https://jdbc.postgresql.org/  
http://postgis.net/docs/manual-2.3/ST_MakeBox2D.html   
https://www.openstreetmap.org/   
http://opensourcegis.org/  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")