tween (i) results focusing on OSN security and privacy, (ii)
techniques for securing publish/subscribe networks, and (iii)
constructs for Attribute-based Encryption.
A. Privacy in OSNs
Increasing proliferation and popularity of Online So-
cial Networks (OSNs) prompted privacy concerns with
the amount and sensitivity of disseminated and collected
personal information. Consequently, the security research
community started to explore emerging issues and chal-
lenges. A number of recent studies, such as [14, 21, 23, 53],
considered privacy in Facebook, MySpace, and other OSNs.
Recently, [5] overviewed the state of the art in OSN pri-
vacy from different perspectives (including psychology and
economics) and highlighted a number of research gaps. The
work in [32] measured the extent of personally identiﬁable
information disclosed by Twitter users. Also speciﬁc to
Twitter is the analysis of privacy leaks in [41] and [40].
Several cryptographic protocols have been proposed to
improve conﬁdentiality, access control, or anonymity in
OSNs. One proposal closely related to Hummingbird is
#h00t [6]. It allows a group of users (communities that share
a common password or plaintext hashtag) to communicate
with privacy. Similar to Hummingbird, cryptographic tags
in #h00t are computed by hashing plaintext keywords.
#h00t also leverages hash collisions to provide deniability,
i.e., the ability for an user to prove that they were not
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:50:17 UTC from IEEE Xplore.  Restrictions apply. 
tweeting/following about a particular hashtag.. The work
in [17] applies the concept of “virtual private networks”
to OSN, i.e., it establishes a conﬁdential channel between
“friends” in order to share sensitive data. A similar ap-
proach is taken by FaceCloack [38], where sensitive data is
encrypted and stored on third party servers (distinct from
the OSN provider), while only authorized users holding
decryption keys can access them. NoYB [31] focuses on
user privacy with respect to the OSN provider and also
tries to conceal users that are encrypting their contents.
Finally, Scramble! [8] uses broadcast encryption [19] for
improved access control on Facebook, i.e., allowing each
user to specify the recipients of shared information, similar
to the concept of circles in Google+.
Decentralized OSNs have been advocated for privacy-
aware social networking[1–3]. For example, [7] provides a
cryptographic API that achieves improved access control,
anonymity and conﬁdentiality. Whereas, our approach fo-
cuses on privacy for centralized OSNs, a social-network
model that supports high availability and real-time content
dissemination. In fact, decentralized architectures – e.g.,
those based on p2p networks [15] – might hinder real-time
availability of information (a crucial feature in Twitter) or
require users to buy cloud storage for their data [50].
B. Privacy-Friendly Publish/Subscribe Networks
The service provided by Twitter could be considered as a
kind of a Publish/Subscribe network (Pub/Sub). In Pub/Sub,
publishers do not program messages to be sent directly to
speciﬁc subscribers. Rather subscribers register their interest
in an event, or a pattern of events, and are subsequently
asynchronously notiﬁed of events generated by publishers.
Subscribers register arbitrary complex queries over events to
a multitude of brokers (usually organized in an hierarchy)
that receive events by publishers and notify subscribers. (For
more details on Pub/Sub, we refer to [22].) In contrast,
Twitter has a single central server, handles simple keyword-
based queries and requires interaction between followers and
tweeters. Nevertheless, we review recent Pub/Sub privacy-
enhancing techniques an discuss their (un)suitability to the
Twitter scenario.
The work in [48] focuses on conﬁdentiality in content-
based Pub/Sub systems and introduces some techniques for
efﬁcient matching at the broker, who learns nothing about
the data being matched. Another recent result [51] uses
multiple-level commutative encryption to privately share
information in an hierarchical content-based multi-broker
Pub/Sub system. While data producers and consumers might
not know each other, the system requires each user to interact
and trust each peer at two-hop distance in the network.
Finally, [33] proposes a cryptographic mechanism, based
on Attribute-Based Encryption (ABE) [28] and Searchable
Encryption [13, 52], to support conﬁdentiality for events
and matching ﬁlters.
All above solutions require publishers and subscribers to
trust (i) each other [48], (ii) the brokers [51], or (iii) a third
party [33]. Thus, none can offer data privacy in Twitter-
like settings. Tweeters and followers might have no mutual
knowledge and no third party should be trusted to access
sensitive data.
C. Attribute-Based Encryption
Attribute-based encryption (ABE) was introduced by Sa-
hai and Waters [49]. In ABE, decryption capability can be
given to any party whose decryption keys satisfy arbitrary
(encryptor-selected) policy. In particular, in [49], a ciphertext
and decryption keys are labeled with set of attributes.
Thus, decryption is possible only if the sets of ciphertext
and decryption key attributes have at least d attributes in
common. ABE was later extended by [29] and [11]. The
former proposed Key-Policy ABE where keys are associated
to access structures and a ciphertext can be decrypted by a
key only if the ciphertext attributes satisfy the key access
structure. Whereas,
the latter proposed Ciphertext-Policy
ABE where ciphertexts are associated with access structures
and keys with attributes: a ciphertext can be decrypted only
if the key attributes satisfy its access structure.
In general, ABE could be used in Hummingbird substitut-
ing cryptographic tokens of tweets with attributes required
for decryption. Similarly,
tokens computed by followers
could be replaced by attributes of their decryption keys.
However, there are some issues complicating the adoption
of ABE in Hummingbird.
First, it is unclear how to achieve follower privacy in
ABE, i.e., how can a follower obtain the decryption key
for “attributes” of her choice without leaking her interests
to the tweeter. Also, matching tweets and follow requests
would require the server to get the decryption key of each
follower. In other words, checking if the set of attributes
associated with a tweet and the one associated with a follow
request are disjoint, requires the secret decryption key of the
follower.
Finally, ABE schemes incur considerable overhead by
requiring a number of bilinear-map computations linear in
the number of attributes associated to a ciphertext or a
decryption key. For example, encryption/decryption opera-
tions in [11] are one order of magnitude slower than in
Hummingbird.
IX. CONCLUSION
This paper presented one of the ﬁrst efforts to mitigate
rampant lack of privacy in modern micro-blogging OSNs.
We analyzed privacy issues in Twitter and laid out an
architecture (called Hummingbird) that offers a Twitter-like
service with increased privacy guarantees for tweeters and
followers alike. While the degree of privacy attained is not
absolute, it is still valuable considering current complete lack
of privacy and some fundamental limitations inherent to the
297
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:50:17 UTC from IEEE Xplore.  Restrictions apply. 
centralized gather/scatter message dissemination paradigm.
We implemented Hummingbird architecture as a research
prototype and evaluated its performance. Since almost all
cryptographic operations are conducted off-line, and none is
involved to match tweets to followers, the resulting costs and
overhead are very low. Our work clearly does not end here.
In particular, several extensions,
including revocation of
followers, anonymity for tweeters as well as unlinking same-
hashtag tweets, require further consideration and analysis.
Acknowledgments. We gratefully acknowledge Filipe
Beato, Elie Bursztein, and Bruno Crispo for helpful discus-
sions in the early stage of protocol design, as well as David
Molnar, Elaine Shi, Daniele Perito, and Matthew Wright for
their valuable feedback.
REFERENCES
[1] DSNP: The Distributed Social Network Protocol. http:
//www.complang.org/dsnp/.
[2] SocialFortress. https://socialfortress.com/.
[3] The Diaspora Project. http://diasporaproject.org/.
[4] Twitter Privacy Policy.
https://twitter.com/privacy,
2011.
[5] A. Acquisti, B. Van Alesenoy, E. Balsa, B. Berendt,
D. Clarke, C. Diaz, B. Gao, S. Gurses, A. Kuczer-
awy, J. Pierson, F. Piessens, R. Sayaf, T. Schellens,
F. Stutzman, E. Vanderhoven, and R. De Wolf. The
SPION Project.
https://www.cosic.esat.kuleuven.be/
publications/article-2077.pdf.
[6] D. Bachrach, C. Nunu, D. S. Wallach, and M. Wright.
#h00t: Censorship resistant microblogging. CoRR,
abs/1109.6874, 2011.
[7] M. Backes, M. Maffei, and K. Pecina. A security API
for distributed social networks. In NDSS, 2011.
[8] F. Beato, M. Kohlweiss, and K. Wouters. Scramble!
In PETS, pages 211–225,
your social network data.
2011.
[9] M. Belenkiy, J. Camenisch, M. Chase, M. Kohlweiss,
A. Lysyanskaya, and H. Shacham. Randomizable
Proofs and Delegatable Anonymous Credentials.
In
CRYPTO, pages 108–125, 2009.
[10] M. Bellare, C. Namprempre, D. Pointcheval, and
M. Semanko. The one-more-RSA-inversion problems
and the security of Chaum’s blind signature scheme.
Journal of Cryptology, 16(3):185–215, 2003.
[11] J. Bethencourt, A. Sahai, and B. Waters. Ciphertext-
policy attribute-based encryption. In IEEE Symposium
on Security and Privacy (S&P), pages 321–334, 2007.
[12] D. Boneh and X. Boyen. Short signatures without
random oracles. In EUROCRYPT, pages 56–73, 2004.
[13] D. Boneh, G. Di Crescenzo, R. Ostrovsky, and G. Per-
siano. Public key Encryption with Keyword Search. In
EUROCRYPT, pages 506–522, 2004.
[14] D. Boyd and N. Ellison. Social Network Sites: Deﬁni-
tion, History, and Scholarship. Journal of Computer-
Mediated Communication, 13(1):210–230, 2008.
[15] S. Buchegger, D. Schi¨oberg, L. H. Vu, and A. Datta.
PeerSoN: P2P Social Networking - Early Experiences
and Insights. In SNS, pages 46–52, 2009.
[16] D. Chaum. Blind signatures for untraceable payments.
In CRYPTO, volume 82, pages 199–203, 1983.
[17] M. Conti, A. Hasani, and B. Crispo. Virtual private
social networks. In CODASPY, pages 39–50, 2011.
[18] E. De Cristofaro and G. Tsudik. Practical Private Set
Intersection Protocols with Linear Computational and
Bandwidth Complexity. In FC, pages 143–159, 2010.
http://eprint.iacr.org/2009/491.
[19] C. Delerabl´ee, P. Paillier, and D. Pointcheval. Fully
Collusion Secure Dynamic Broadcast Encryption with
Constant-Size Ciphertexts or Decryption Keys.
In
PAIRING, pages 39–59, 2007.
[20] K. Dozier. CIA Tracks Revolt by Tweet, Facebook.
http://abcn.ws/uFdpVQ, 2011.
[21] C. Dwyer, S. Hiltz, and K. Passerini.
Trust and
Privacy Concern Within Social Networking Sites: A
Comparison of Facebook and MySpace.
In AMCIS,
pages 1–13, 2007.
[22] P. Eugster, P. Felber, R. Guerraoui, and A. Kermarrec.
The many faces of Publish/Subscribe. ACM Computing
Surveys, 35(2):114–131, 2003.
[23] L. Fang and K. LeFevre. Privacy wizards for social
networking sites. In WWW, pages 351–360, 2010.
[24] M. Fischetti. Data theft: Hackers attack. Scientiﬁc
American, 305(100), 2011.
[25] Fox News.
Facebook Retreats
on Privacy.
http://www.foxnews.com/scitech/2011/11/11/
facebook-retreats-on-privacy/.
[26] M. Freedman, Y. Ishai, B. Pinkas, and O. Reingold.
Keyword Search and Oblivious Pseudorandom Func-
tions. In TCC, 2005.
[27] O. Goldreich. Foundations of Cryptography. Cam-
bridge University Press, 2004.
[28] V. Goyal, O. Pandey, A. Sahai, and B. Waters.
Attribute-based encryption for ﬁne-grained access con-
trol of encrypted data. In CCS, pages 89–98, 2006.
[29] V. Goyal, O. Pandey, A. Sahai, and B. Waters.
Attribute-based encryption for ﬁne-grained access con-
trol of encrypted data. In CCS, pages 89–98, 2006.
[30] J. Gruenspecht. “Reasonable” Grand Jury Subpoenas:
Asking for information in the age of big data. Harvard
Journal of Law & Technology, 24(2):543–562, 2011.
[31] S. Guha, K. Tang, and P. Francis. NOYB: Privacy in
Online Social Networks. In WONS, pages 49–54, 2008.
[32] L. Humphreys, P. Gill, and B. Krishnamurthy. How
much is too much? Privacy Issues on Twitter. In ICA,
pages 1–29, 2010.
[33] M. Ion, G. Russello, and B. Crispo. Supporting Pub-
lication and Subscription Conﬁdentiality in Pub/Sub
298
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:50:17 UTC from IEEE Xplore.  Restrictions apply. 
Networks. In SECURECOMM, pages 272–289, 2010.
[34] S. Jarecki and X. Liu. Efﬁcient Oblivious Pseudoran-
dom Function with Applications to Adaptive OT and
Secure Computation of Set Intersection. In TCC, pages
577–594, 2009.
[35] S. Jarecki and X. Liu. Fast Secure Computation of Set
Intersection. In SCN, 2010.
[36] H. Jones and J. Soltren. Facebook: Threats to privacy.
In Ethics and the law on the electronic frontier course,
pages 1–76, 2005.
[37] J. Kincaid.
This
second
engineer has been ﬁred for
time
a
accessing
http://techcrunch.com/2010/09/14/
Google
user
google-engineer-ﬁred-security/, 2010.
data.
the
is
[38] W. Luo, Q. Xie, and U. Hengartner. FaceCloak: An
Architecture for User Privacy on Social Networking
Sites. In CSE, pages 26–33, 2009.
[39] A. Mac Guill. US ruling sets troubling precedent for
social media privacy. http://t.co/Z2OZMaFo.
[40] H. Mao, X. Shuai, and A. Kapadia. Loose Tweets: An
Analysis of Privacy Leaks on Twitter. In WPES, pages
1–12, 2011.
[41] B. Meeder, J. Tam, P. Kelley, and L. Cranor. RT@
IWantPrivacy: Widespread violation of privacy settings
in the Twitter social network. In W2SP, 2010.
[42] A. Menezes, P. Van Oorschot, and S. Vanstone. Hand-
book of applied cryptography. CRC, 1997.
[43] Mozilla Developer Network.
LiveConnect.
//developer.mozilla.org/en/LiveConnect, 2011.
https:
[44] M. Naor and O. Reingold. Number-theoretic Construc-
tions of Efﬁcient Pseudorandom Functions. In FOCS,
1997.
[45] J. Nielsen, P. Nordholt, C. Orlandi, and S. Burra. A
New Approach to Practical Active-Secure Two-Party
Computation. http://eprint.iacr.org/2011/091, 2011.
[46] Ofﬁcial Twitter Blog.
voices.
one-hundred-million-voices.html, 2011.
One hundred million
http://blog.twitter.com/2011/09/
[47] D. Pointcheval and J. Stern. Security arguments for
Journal of
digital signatures and blind signatures.
Cryptology, 13(3):361–396, 2000.
[48] C. Raiciu and D. S. Rosenblum. Enabling Conﬁdential-
ity in Content-Based Publish/Subscribe Infrastructures.
In SECURECOMM, pages 1–11, 2006.
[49] A. Sahai and B. Waters. Fuzzy identity-based encryp-
tion. In EUROCRYPT, pages 457–473, 2005.
[50] A. Shakimov, H. Lim, R. Caceres, L. Cox, K. Li,
Vis-´a-vis: Privacy-
D. Liu, and A. Varshavsky.
preserving online social networking via virtual indi-
vidual servers. In COMSNETS, pages 1–10, 2011.
[51] A. Shikfa, M. ¨Onen, and R. Molva. Privacy-Preserving
In IFIP
Content-Based Publish/Subscribe Networks.
SEC, pages 270–282, 2009.
[52] D. X. Song, D. Wagner, and A. Perrig.
Practical
Techniques for Searches on Encrypted Data. In S&P,
pages 44–55, 2000.
[53] Y. Wang, S. Komanduri, P. Leon, G. Norcie, A. Ac-
quisti, and L. Cranor. I regretted the minute I pressed
share: A qualitative study of regrets on Facebook. In
SOUPS, 2011.
[54] A. Yao. Protocols for secure computations. In FOCS,
1982.
299
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:50:17 UTC from IEEE Xplore.  Restrictions apply.