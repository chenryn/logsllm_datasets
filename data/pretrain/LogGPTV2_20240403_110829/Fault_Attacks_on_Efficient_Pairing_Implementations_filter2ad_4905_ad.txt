### 4. Assumptions and Time Complexity
We assume that we know the number of iterations executed in the algorithm, which is a realistic assumption because we can estimate this value to be less than 255. This estimation will only increase the attack's time complexity by a factor of 256.

### 5. Experimentation
The fault model used in this section is similar to those in previous attacks on compressed pairings. The type of faults involves injecting errors into the loop counter, allowing us to prematurely terminate the loop computation. We implemented our fault attack using Sage against the C pairing implementation proposed by Naehrig et al. [26]. With knowledge of the number of iterations in the Miller Loop, we conducted several tests for cases where the secret key is either the first or second argument in the pairing computation.

#### Results of Experiments
The following tables summarize the results of our experiments. Each table shows the number of faults required to invert the pairing computation and the total execution time of the attack.

**Table 1: Attack on Compressed Pairing (First Argument)**
| Test Number | Number of Faults Injected | Time Spent (s) |
|-------------|---------------------------|----------------|
| 1           | 23                        | 3489           |
| 2           | 20                        | 2655           |
| 3           | 15                        | 1509           |
| 4           | 14                        | 1378           |
| 5           | 18                        | 2227           |
| 6           | 13                        | 1561           |
| 7           | 19                        | 2444           |
| 8           | 11                        | 1173           |
| 9           | 32                        | 8294           |
| 10          | 21                        | 4482           |
| 11          | 26                        | 4721           |

**Table 2: Attack on Compressed Pairing (Second Argument)**
| Test Number | Number of Faults Injected | Time Spent (s) |
|-------------|---------------------------|----------------|
| 1           | 12                        | 1670           |
| 2           | 7                         | 684            |
| 3           | 34                        | 8414           |
| 4           | 24                        | 4487           |
| 5           | 9                         | 1027           |
| 6           | 9                         | 632            |
| 7           | 7                         | 330            |
| 8           | 22                        | 3776           |

**Table 3: Attack on Normal Pairing (First Argument)**
| Test Number | Number of Faults Injected | Time Spent (s) |
|-------------|---------------------------|----------------|
| 1           | 12                        | 1042           |
| 2           | 20                        | 2909           |
| 3           | 7                         | 341            |
| 4           | 7                         | 362            |
| 5           | 29                        | 8144           |
| 6           | 26                        | 5255           |
| 7           | 21                        | 3887           |
| 8           | 27                        | 4771           |
| 9           | 29                        | 5762           |
| 10          | 28                        | 5665           |

**Table 4: Attack on Normal Pairing (Second Argument)**
| Test Number | Number of Faults Injected | Time Spent (s) |
|-------------|---------------------------|----------------|
| 1           | 6                         | 1042           |
| 2           | 30                        | 2909           |
| 3           | 25                        | 341            |
| 4           | 2                         | 362            |
| 5           | 21                        | 8144           |
| 6           | 21                        | 5255           |
| 7           | 6                         | 3887           |
| 8           | 17                        | 4771           |
| 9           | 5                         | 5762           |
| 10          | 21                        | 5665           |

### 6. Conclusion
In this paper, we propose two fault attacks to solve the inversion pairing problem with the first or second argument on the compressed pairing implementation of Naehrig, Barreto, and Schwabe [26]. The first attack is generic and independent of the third exponentiation in the final exponentiation of Tate pairing, but it requires a high number of faults (around 1000) to fully invert the pairing. The second attack is tailored for the specific implementation of Tate pairing on Barreto-Naehrig curves and is more efficient, requiring only one fault to invert the final exponentiation and fewer than 30 faults according to our simulations. This corresponds to the implementation in [26]. Finally, we extend the attack to standard implementations of Tate pairing, such as the implementation by Devegili et al. [11], which is particularly relevant for smartcard applications. It is surprising that while attacking the standard implementation seems difficult, once the fault attack on compressed pairing is known, it becomes relatively easy to solve.

### 7. References
[1] 2014 Workshop on Fault Diagnosis and Tolerance in Cryptography, FDTC 2014, Busan, South Korea, September 23, 2014. IEEE, 2014.
[2] Paulo S. L. M. Barreto, Steven D. Galbraith, Colm O’Eigeartaigh, and Michael Scott. Efficient pairing computation on supersingular Abelian varieties. Des. Codes Cryptography, 42(3):239–271, 2007.
[3] Paulo S. L. M. Barreto, Hae Yong Kim, Ben Lynn, and Michael Scott. Efficient Algorithms for Pairing-Based Cryptosystems. In Moti Yung, editor, Advances in Cryptology - CRYPTO 2002, 22nd Annual International Cryptology Conference, Santa Barbara, California, USA, August 18-22, 2002, Proceedings, volume 2442 of Lecture Notes in Computer Science, pages 354–368. Springer, 2002.
[4] Paulo S. L. M. Barreto and Michael Naehrig. Pairing-Friendly Elliptic Curves of Prime Order. In Bart Preneel and Stafford E. Tavares, editors, Selected Areas in Cryptography, 12th International Workshop, SAC 2005, Kingston, ON, Canada, August 11-12, 2005, Revised Selected Papers, volume 3897 of Lecture Notes in Computer Science, pages 319–331. Springer, 2005.
[5] Johannes Blömer, Ricardo Gomes da Silva, Peter Günther, Juliane Krämer, and Jean-Pierre Seifert. A practical second-order fault attack against a real-world pairing implementation. In 2014 Workshop on Fault Diagnosis and Tolerance in Cryptography, FDTC 2014, Busan, South Korea, September 23, 2014 [1], pages 123–136.
[6] Dan Boneh and Xavier Boyen. Short Signatures Without Random Oracles and the SDH Assumption in Bilinear Groups. J. Cryptology, 21(2):149–177, 2008.
[7] Dan Boneh, Giovanni Di Crescenzo, Rafail Ostrovsky, and Giuseppe Persiano. Public Key Encryption with Keyword Search. In Christian Cachin and Jan Camenisch, editors, Advances in Cryptology - EUROCRYPT 2004, International Conference on the Theory and Applications of Cryptographic Techniques, Interlaken, Switzerland, May 2-6, 2004, Proceedings, volume 3027 of Lecture Notes in Computer Science, pages 506–522. Springer, 2004.
[8] Dan Boneh and Matthew K. Franklin. Identity-Based Encryption from the Weil Pairing. In Joe Kilian, editor, Advances in Cryptology - CRYPTO 2001, 21st Annual International Cryptology Conference, Santa Barbara, California, USA, August 19-23, 2001, Proceedings, volume 2139 of Lecture Notes in Computer Science, pages 213–229. Springer, 2001.
[9] Dan Boneh and Moni Naor. Traitor tracing with constant size ciphertext. In Peng Ning, Paul F. Syverson, and Somesh Jha, editors, Proceedings of the 2008 ACM Conference on Computer and Communications Security, CCS 2008, Alexandria, Virginia, USA, October 27-31, 2008, pages 501–510. ACM, 2008.
[10] Sanjit Chatterjee, Palash Sarkar, and Rana Barua. Efficient Computation of Tate Pairing in Projective Coordinate over General Characteristic Fields. In Choonsik Park and Seongtaek Chee, editors, Information Security and Cryptology - ICISC 2004, 7th International Conference, Seoul, Korea, December 2-3, 2004, Revised Selected Papers, volume 3506 of Lecture Notes in Computer Science, pages 168–181. Springer, 2004.
[11] Augusto Jun Devegili, Michael Scott, and Ricardo Dahab. Implementing Cryptographic Pairings over Barreto-Naehrig Curves. In Takagi et al. [30], pages 197–207.
[12] Iwan M. Duursma and Hyang-Sook Lee. Tate Pairing Implementation for Hyperelliptic Curves y^2 = x^p - x + d. In Chi-Sung Laih, editor, Advances in Cryptology - ASIACRYPT 2003, 9th International Conference on the Theory and Application of Cryptology and Information Security, Taipei, Taiwan, November 30 - December 4, 2003, Proceedings, volume 2894 of Lecture Notes in Computer Science, pages 111–123. Springer, 2003.
[13] Steven D. Galbraith, Keith Harrison, and David Soldera. Implementing the Tate Pairing. In Claus Fieker and David R. Kohel, editors, Algorithmic Number Theory, 5th International Symposium, ANTS-V, Sydney, Australia, July 7-12, 2002, Proceedings, volume 2369 of Lecture Notes in Computer Science, pages 324–337. Springer, 2002.
[14] Steven D. Galbraith, Florian Hess, and Frederik Vercauteren. Aspects of pairing inversion. IEEE Transactions on Information Theory, 54(12):5719–5728, 2008.
[15] Robert Granger, Dan Page, and Martijn Stam. On Small Characteristic Algebraic Tori in Pairing-Based Cryptography. LMS Journal of Computation and Mathematics, 9:64–85, 2006.
[16] Florian Hess, Nigel P. Smart, and Frederik Vercauteren. The Eta Pairing Revisited. IEEE Transactions on Information Theory, 52(10):4595–4602, 2006.
[17] Antoine Joux. A One Round Protocol for Tripartite Diffie-Hellman. J. Cryptology, 17(4):263–276, 2004.
[18] Ronan Lashermes, Jacques J. A. Fournier, and Louis Goubin. Inverting the Final Exponentiation of Tate Pairing.