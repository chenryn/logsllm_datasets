Kazaa, users are very patient [12].
Our trace of cs.mshmro.com records successful con-
nections as well as connection attempts, when players con-
nect to the server and are refused service. The latter is ex-
tremely common; every day, the server turns away thou-
sands of people. Browsing the trace, it is not unusual to see
the same player reconnect to the server several times in a
row, waiting for a spot on the server to free up. We operate
on the assumption that a player’s willingness to reconnect
to the same busy server repeatedly is an indication of their
patience.
In order to quantify player patience we group each
player’s connection history into sessions, and consider a
session of length N evidence of that player’s willingness
to reconnect after N − 1 connections. Figure 1 shows
the probability distribution of acceptable reconnections per
USENIX Association
Internet Measurement Conference 2005  
3
012345678910Acceptable reconnections00.10.20.30.40.50.6ProbabilityPDF of mshmro acceptable reconnectionsNegative exponential    =0.2677    =-0.5687αβ(a) PDF
(b) CDF
Figure 2: Session time results for cs.mshmro.com trace
player. As the ﬁgure shows 73% of the players are unwill-
ing to reconnect to the server enough to play even once.
One of the reasons players do not reconnect is that game
clients have a “Quick Start” mechanism that many players
use. The mechanism works by downloading a list of can-
didate servers from the master server and cycling through
them one by one until a successful session is established.
Thus, such clients may not lack patience, but rather are au-
tomatically redirected elsewhere. For the rest of the play-
ers, however, 13% are willing to reconnect one time on
average with the percentage sharply decreasing on succes-
sive reconnects. Aside from the ﬁrst data point, the rest
of the graph represents a client’s patience in connecting
to our busy server and, not surprisingly, can be ﬁt very
closely with a negative exponential distribution. As Fig-
ure 1 shows, a negative exponential distribution with pa-
rameters α = 0.2677 and β = −0.5687 ﬁts the data with a
correlation coefﬁcient of 0.998. Players, therefore, exhibit
a remarkable degree of impatience with busy game servers.
3.2 Gamers have short attention spans
Using the same trace, we extracted the total session time of
each player session contained in the trace. Figure 2 plots
the session time distributions of the trace in unit increments
of a minute 1. The ﬁgure shows, quite surprisingly, that a
signiﬁcant number of players play only for a short time be-
fore disconnecting and that the number of players that play
for longer periods of time drops sharply as time increases.
Note that in contrast to heavy-tailed distributions reported
for most source models for Internet trafﬁc; the session ON
1Note that a preliminary version of our results here were ﬁrst reported
in a short paper at the NetGames 2003 Workshop [21]
times for game players is not heavy-tailed. To further illus-
trate this, Figure 2(b) shows the cumulative density func-
tion for the session times of the trace. As the ﬁgure shows,
more than 99% of all sessions last less than 2 hours.
Unlike the player patience data, session times can not
be ﬁtted with a simple negative exponential distribution.
However, the data can be closely matched to a Weibull dis-
tribution, a more general distribution that is often used to
model lifetime distributions in reliability engineering [22].
Since quitting the game can be viewed as an attention “fail-
ure” on the part of the player, the Weibull distribution is
well-suited for this application. The generalized Weibull
distribution has three parameters β, η, and γ and is shown
below.
f(T ) = β
η ( T−γ
η )β−1e
−( T −γ
η )β
In this form, β is a shape parameter or slope of the distri-
bution, η is a scale parameter, and γ is a location parameter.
As the location of the distribution is at the origin, γ is set
to zero, giving us the two-parameter form for the Weibull
PDF.
f(T ) = β
η )β−1e
η ( T
−( T
η )β
Using a probability plotting method [22], we estimated
the shape (β) and scale (η) parameters of the session time
PDF. As Figure 2(a) shows, a Weibull distribution with β =
0.5, η = 20, and γ = 0 closely ﬁts the PDF of measured
session times for the trace.
This result is in contrast to previous studies that have
ﬁtted a negative exponential distribution to session-times
of multiplayer games [23]. Unlike the Weibull distribu-
tion which has independent scale and shape parameters, the
4
Internet Measurement Conference 2005
USENIX Association
0153045607590105120Minutes00.050.10.15ProbabilityPDF of mshmro player session timesWeibullβ=0.5, η=20, γ=00306090120150180210240Minutes00.10.20.30.40.50.60.70.80.91Probabilityvia their unique player identiﬁcation number (WONID).
We quantify loyalty to the server by counting the number
of times a player returns to play after a successful playing
session. Figure 4(a) shows the probability density function
of additional game sessions per player for players who re-
turned at least once to the server while Figure 4(b) shows,
on a logarithmic scale, the cumulative distribution. As the
ﬁgure shows, 42% of the players in our trace returned to
play only once and 81% played less than 10 times. On
the other hand, the top 1% of loyal gamers return to play
hundreds of times (hence the logarithmic scale). It appears
that the majority of clients have very little loyalty to pub-
lic servers, and only a small fraction have grown strongly
attached. We hypothesize that, due to a large population of
servers to choose from (over 30,000), clients rarely select
the same server twice.
3.4 Gamers reveal when they lose interest
Players of a game have some discretion about how fre-
quently they play a game and for how long. Players of-
ten lose interest in a game and cease playing altogether at
some point. Before that happens, however, there may be
noticeable indications that their interest is waning. Such in-
dications are extremely useful to game providers who can
detect waning interest and react to it on a macro level with
new content or on a per-player basis via customized incen-
tives for continued play.
We determine the average player interest curve by cal-
culating each player’s sequence of play sessions from their
ﬁrst session to their last recorded session. This is a player’s
play history. Since each player may progress through his
or her game interest at a different rate, we normalize each
of these data sets based on the duration each player is ac-
tive on the server. We then examine the average session
times and session interarrival times of all players through-
out their playing careers. Figure 5(a) shows that player
session times are relatively constant halfway through their
play history and fall off to just more than 50% of the ini-
tial session time before the player loses interest completely.
Figure 5(b) shows that the time between player sessions is
minimized before the halfway point and increases steeply
until the player’s interest has fully waned. The variance on
this data is extremely high, due in part to the fact that play-
ers only spend a portion of their time on this single server,
and therefore this data is unsuitable for predicting the inter-
est of a given player. However we believe this methodology
can be used for games with a centralized session-tracking
authority as an early indicator of peaking player interest
and that game publishers should use these measurements
to trigger the delivery of new content or incentives for the
individual player.
Figure 3: Player failure rates for individual session times
for cs.mshmro.com trace
shape of the negative exponential distribution is completely
determined by λ, the failure rate. Due to the memory-less
property of the negative exponential distribution, this rate is
assumed to be constant. Figure 3 shows the failure rate for
individual session durations over the trace. As the ﬁgure
shows, the failure rate is higher for ﬂows of shorter dura-
tion, thus making it difﬁcult to accurately ﬁt it to a negative
exponential distribution. While it is difﬁcult to pinpoint
the exact reason for this, it could be attributed to the fact
that Counter-Strike servers are notoriously heterogeneous.
Counter-Strike happens to be one of the most heavily mod-
iﬁed on-line games with support for a myriad of add-on
features [24, 25]. Short ﬂows could correspond to players
browsing the server’s features, a characteristic not predom-
inantly found in other games. As with player patience, it
may be possible to ﬁt a negative exponential for longer ses-
sion times. As part of future work, we hope examine this as
well as characterize session duration distributions across a
larger cross-section of games to see how distributions vary
between games and game genres.
3.3 Gamers are not loyal
Public-server games such as Half-life provide users with
a large choice of servers located all around the world.
Gamers can switch between servers as often as they like.
Some reasons to continue playing on the same server are
simplicity, a known low-latency connection, preference for
server options, or a sense of community.
It is natural to
wonder whether servers continue to serve the same group
of clients and to what extent these reasons or others keep
clients at a speciﬁc server.
Our trace contains the connection records for each client
USENIX Association
Internet Measurement Conference 2005  
5
0153045607590105120Minutes00.050.10.150.2Playerfailurerate(a) PDF
(b) CDF
Figure 4: Distribution of sessions per player on the server
(a) Average session time
(b) Average session interarrivals
Figure 5: Player behavior throughout their playing careers
4 Game populations
Hosting games is challenging, in part, due to the difﬁcul-
ties of accurate provisioning. Under-provisioning can test
gamer patience, while over-provisioning can be costly. We
look at two facets of gaming integral to successful game
provisioning: overall game popularity and predicting game
workloads. We show that (1) there are, and will be, very
few extremely popular games, and (2) game workloads are
periodic and predictable over short-term intervals.
4.1 Game popularity follows a power-law
To determine the distribution of on-line game popularity,
we analyzed a nine-month subset of the GameSpy data set
described in Section 2, starting March 1st 2003. Of the
games, we consider only the top 50 games, as the remain-
ing games averaged a minimal number of players through-
out the trace. To average popularity rankings we ﬁrst cal-
culated the rank ordering of the games and the number of
players at a given rank for each day. Then we averaged
these daily rankings over the nine-month period to show the
distribution of players across the games regardless of ﬂuc-
tuations in individual game popularity. Figure 6 shows the
popularity data on a log-log scale. As the ﬁgure shows, this
distribution is heavily skewed in favor of the most popu-
lar games, with the ﬁrst ranked game having over ten times
the number of players of the next most popular. This dis-
tribution of popularity is most similar to a power-law dis-
tribution. Power-law distributions are of the form y = axλ
6
Internet Measurement Conference 2005
USENIX Association
01020304050Number of additional sessions00.10.20.30.40.5ProbabilityPDF of msmro additional sessions per playerNegative exponential    = 0.4185    = -1.622αβ110100100010000Number of additional sessions00.10.20.30.40.50.60.70.80.91Probability020406080100Percent of play history05101520Sessiontime(inminutes)020406080100Percent of play history05101520Sessioninterarrivaltime(indays)(a) America’s Army
(b) Half-Life
(c) Neverwinter Nights
Figure 7: Player load for three popular games over a 4-week period
and risks of launching and hosting on-line games.
4.2 Game workloads have varying degrees of
predictability
Accurately predicting game workloads allows game host-
ing providers to allocate the appropriate amount of re-
sources for a game. In order to determine whether this is
feasible, we analyze the GameSpy trace for different sets
of games. Speciﬁcally, we investigate whether any sim-
ple trends or patterns can be used to accurately predict the
game workload, whether the workload is stable and if so,
over what time scale.
4.2.1 Game workloads exhibit predictable daily and
weekly changes
Intuitively, it is reasonable to assume that usage is strongly
tied to the daily and weekly activities of players. Fig-
ure 7 shows the global player population of four consecu-
tive weeks starting from 3/1/2003 for three popular games:
America’s Army, Half-Life, and Neverwinter Nights. As
expected, the ﬁgure shows that the workload has regular
daily cycles and that over this one month period the work-
load does not vary signiﬁcantly from week-to-week.
In
fact, for all three games, the trends as well as the maxi-
mum and minimum points match up at identical points in
time during the week. We observe similar results over other
parts of the year with the only anomalies caused by service
outages and by holidays. To further demonstrate the cycli-
cal nature of gaming workloads, we take one year’s worth
of game server load samples across a variety of games and
plot the Fast Fourier Transform (FFT) of the data. The
FFTs have been scaled so that they can be plotted together.
As Figure 8 shows, the FFT contains strong peaks at the 24-
hour cycle for each of the games. There is also a signiﬁcant
peak at the 168-hour (one week) cycle for two of the games
as well. This corresponds to an increase in player usage on
Figure 6: Game popularity distribution averaged over nine
months (log scale)
and occur in a number of places including the frequency of
words in the English language, the popularity of web pages,
and the population of cities. An intuition for these distri-
butions is that whenever choices are made between many
options, and each choice affects other choices, the choices
tend to pile up on a few popular selections. Games and
servers create communities: in selecting one, each player’s
choice affects and is affected by the popularity and rep-
utation of that game or server. A perfect power-law dis-
tribution would graph as a straight line on a logarithmic
scale in both the x and y axis. The relatively straight line
(correlation coefﬁcient -0.98 for a simple linear regression)
demonstrates that the GameSpy data does follow a power