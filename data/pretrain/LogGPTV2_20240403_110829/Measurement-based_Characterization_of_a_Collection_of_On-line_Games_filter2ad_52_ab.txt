### Kazaa Users and Player Patience

Kazaa users are known for their patience [12]. Our trace of `cs.mshmro.com` records both successful connections and connection attempts, including instances where players connect to the server but are refused service. This refusal is extremely common; every day, the server rejects thousands of players. Browsing through the trace, it is not unusual to see the same player attempt to reconnect multiple times in a row, waiting for a spot on the server to become available. We assume that a player's willingness to repeatedly reconnect to a busy server is an indication of their patience.

To quantify player patience, we group each player's connection history into sessions. A session of length \( N \) is considered evidence of a player's willingness to reconnect after \( N - 1 \) failed attempts. Figure 1 shows the probability distribution of acceptable reconnections per player. The figure indicates that 73% of players are unwilling to reconnect enough to play even once.

One reason players do not reconnect is the "Quick Start" mechanism in game clients, which many players use. This mechanism downloads a list of candidate servers from the master server and cycles through them until a successful session is established. Therefore, such clients may not lack patience but are automatically redirected to other servers. For the remaining players, 13% are willing to reconnect one time on average, with the percentage sharply decreasing for subsequent reconnections. Aside from the first data point, the rest of the graph represents a client’s patience in connecting to our busy server, which can be closely fit with a negative exponential distribution. As shown in Figure 1, a negative exponential distribution with parameters \( \alpha = 0.2677 \) and \( \beta = -0.5687 \) fits the data with a correlation coefficient of 0.998. This suggests that players exhibit a remarkable degree of impatience with busy game servers.

### Short Attention Spans of Gamers

Using the same trace, we extracted the total session time of each player session. Figure 2 plots the session time distributions in unit increments of a minute. Surprisingly, a significant number of players play only for a short time before disconnecting, and the number of players who play for longer periods drops sharply as time increases. Unlike heavy-tailed distributions reported for most Internet traffic source models, the session times for game players are not heavy-tailed. To further illustrate this, Figure 2(b) shows the cumulative density function (CDF) for the session times. As the figure shows, more than 99% of all sessions last less than 2 hours.

Unlike the player patience data, session times cannot be fitted with a simple negative exponential distribution. However, the data can be closely matched to a Weibull distribution, a more general distribution often used to model lifetime distributions in reliability engineering [22]. Since quitting the game can be viewed as an attention "failure" on the part of the player, the Weibull distribution is well-suited for this application. The generalized Weibull distribution has three parameters \( \beta \), \( \eta \), and \( \gamma \) and is shown below:

\[ f(T) = \frac{\beta}{\eta} \left( \frac{T - \gamma}{\eta} \right)^{\beta-1} e^{-\left( \frac{T - \gamma}{\eta} \right)^\beta} \]

In this form, \( \beta \) is a shape parameter, \( \eta \) is a scale parameter, and \( \gamma \) is a location parameter. Since the location of the distribution is at the origin, \( \gamma \) is set to zero, giving us the two-parameter form for the Weibull PDF:

\[ f(T) = \frac{\beta}{\eta} \left( \frac{T}{\eta} \right)^{\beta-1} e^{-\left( \frac{T}{\eta} \right)^\beta} \]

Using a probability plotting method [22], we estimated the shape (\( \beta \)) and scale (\( \eta \)) parameters of the session time PDF. As shown in Figure 2(a), a Weibull distribution with \( \beta = 0.5 \), \( \eta = 20 \), and \( \gamma = 0 \) closely fits the PDF of measured session times for the trace.

This result contrasts with previous studies that have fitted a negative exponential distribution to session-times of multiplayer games [23]. Unlike the Weibull distribution, which has independent scale and shape parameters, the shape of the negative exponential distribution is completely determined by the failure rate \( \lambda \). Due to the memory-less property of the negative exponential distribution, this rate is assumed to be constant. Figure 3 shows the failure rate for individual session durations over the trace. As the figure shows, the failure rate is higher for flows of shorter duration, making it difficult to accurately fit it to a negative exponential distribution. While it is difficult to pinpoint the exact reason, it could be attributed to the fact that Counter-Strike servers are notoriously heterogeneous. Counter-Strike is one of the most heavily modified online games, supporting a myriad of add-on features [24, 25]. Short flows could correspond to players browsing the server’s features, a characteristic not predominantly found in other games. As with player patience, it may be possible to fit a negative exponential for longer session times. As part of future work, we hope to examine this and characterize session duration distributions across a larger cross-section of games to see how distributions vary between games and game genres.

### Lack of Loyalty Among Gamers

Public-server games like Half-Life provide users with a large choice of servers located around the world. Gamers can switch between servers as often as they like. Some reasons to continue playing on the same server include simplicity, a known low-latency connection, preference for server options, or a sense of community. It is natural to wonder whether servers continue to serve the same group of clients and to what extent these reasons or others keep clients at a specific server.

Our trace contains the connection records for each client via their unique player identification number (WONID). We quantify loyalty to the server by counting the number of times a player returns to play after a successful playing session. Figure 4(a) shows the probability density function of additional game sessions per player for those who returned at least once to the server, while Figure 4(b) shows, on a logarithmic scale, the cumulative distribution. As the figure shows, 42% of the players in our trace returned to play only once, and 81% played less than 10 times. On the other hand, the top 1% of loyal gamers return to play hundreds of times (hence the logarithmic scale). It appears that the majority of clients have very little loyalty to public servers, and only a small fraction have grown strongly attached. We hypothesize that, due to a large population of servers to choose from (over 30,000), clients rarely select the same server twice.

### Indications of Waning Interest

Players of a game have some discretion about how frequently they play and for how long. Players often lose interest in a game and cease playing altogether at some point. Before that happens, there may be noticeable indications that their interest is waning. Such indications are extremely useful to game providers who can detect waning interest and react to it on a macro level with new content or on a per-player basis via customized incentives for continued play.

We determine the average player interest curve by calculating each player’s sequence of play sessions from their first session to their last recorded session. This is a player’s play history. Since each player may progress through their game interest at a different rate, we normalize each of these data sets based on the duration each player is active on the server. We then examine the average session times and session interarrival times of all players throughout their playing careers. Figure 5(a) shows that player session times are relatively constant halfway through their play history and fall off to just more than 50% of the initial session time before the player loses interest completely. Figure 5(b) shows that the time between player sessions is minimized before the halfway point and increases steeply until the player’s interest has fully waned. The variance on this data is extremely high, due in part to the fact that players only spend a portion of their time on this single server. Therefore, this data is unsuitable for predicting the interest of a given player. However, we believe this methodology can be used for games with a centralized session-tracking authority as an early indicator of peaking player interest. Game publishers should use these measurements to trigger the delivery of new content or incentives for the individual player.

### Game Popularity and Workload Predictability

Hosting games is challenging, in part, due to the difficulties of accurate provisioning. Under-provisioning can test gamer patience, while over-provisioning can be costly. We look at two facets of gaming integral to successful game provisioning: overall game popularity and predicting game workloads. We show that (1) there are, and will be, very few extremely popular games, and (2) game workloads are periodic and predictable over short-term intervals.

#### Game Popularity Follows a Power-Law Distribution

To determine the distribution of online game popularity, we analyzed a nine-month subset of the GameSpy dataset starting March 1st, 2003. We considered only the top 50 games, as the remaining games averaged a minimal number of players throughout the trace. To average popularity rankings, we first calculated the rank ordering of the games and the number of players at a given rank for each day. Then we averaged these daily rankings over the nine-month period to show the distribution of players across the games regardless of fluctuations in individual game popularity. Figure 6 shows the popularity data on a log-log scale. As the figure shows, this distribution is heavily skewed in favor of the most popular games, with the first-ranked game having over ten times the number of players of the next most popular. This distribution of popularity is most similar to a power-law distribution. Power-law distributions are of the form \( y = ax^\lambda \). An intuition for these distributions is that whenever choices are made between many options, and each choice affects other choices, the choices tend to pile up on a few popular selections. Games and servers create communities: in selecting one, each player’s choice affects and is affected by the popularity and reputation of that game or server. A perfect power-law distribution would graph as a straight line on a logarithmic scale in both the x and y axes. The relatively straight line (correlation coefficient -0.98 for a simple linear regression) demonstrates that the GameSpy data does follow a power-law distribution.

#### Predictable Daily and Weekly Changes in Game Workloads

Accurately predicting game workloads allows game hosting providers to allocate the appropriate amount of resources for a game. To determine whether this is feasible, we analyze the GameSpy trace for different sets of games. Specifically, we investigate whether any simple trends or patterns can be used to accurately predict the game workload, whether the workload is stable, and if so, over what time scale.

Intuitively, it is reasonable to assume that usage is strongly tied to the daily and weekly activities of players. Figure 7 shows the global player population of four consecutive weeks starting from 3/1/2003 for three popular games: America’s Army, Half-Life, and Neverwinter Nights. As expected, the figure shows that the workload has regular daily cycles and that over this one-month period, the workload does not vary significantly from week-to-week. In fact, for all three games, the trends as well as the maximum and minimum points match up at identical points in time during the week. We observe similar results over other parts of the year, with the only anomalies caused by service outages and holidays. To further demonstrate the cyclical nature of gaming workloads, we take one year’s worth of game server load samples across a variety of games and plot the Fast Fourier Transform (FFT) of the data. The FFTs have been scaled so that they can be plotted together. As Figure 8 shows, the FFT contains strong peaks at the 24-hour cycle for each of the games. There is also a significant peak at the 168-hour (one week) cycle for two of the games, corresponding to an increase in player usage on weekends.