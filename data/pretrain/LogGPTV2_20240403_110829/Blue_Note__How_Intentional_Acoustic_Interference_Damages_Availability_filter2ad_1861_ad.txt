similar from drive to drive of the same model.
B. Bad Sectors
The vast majority of drives used in our tests developed
several bad sectors or became nonoperational. While we do not
speciﬁcally conduct an experiment to test for abnormal levels
of bad sectors, we are able to easily spot this trend in the data
collected for other experiments.
Gathering the Data.
Throughout our experiments, we
collected the bad sector data presented in Table I through
the Self-Monitoring, Analysis, and Reporting Technology
(S.M.A.R.T.) system, a de-facto HDD monitoring standard
that can measure bad sectors in HDDs [18], [19]. Our obser-
vations are anecdotal rather than controlled experiments. The
drives were subjected to different frequencies, amplitudes, and
durations of acoustic interference. All drives had between 15
and 500 power on hours, except one drive that had 755 hours.
Interpreting the Data. As shown in Table I, many of
the drives tested showed high bad sector counts. In fact, every
drive suffered at least one bad sector. As storage expert Erik
Riedel [20] remarks “it would be highly unusual to regularly
ﬁnd bad sectors on hard disk drives under 500 power-on-hours.”
Drive
WD Blue WD5000LPVX
WD Enterprise WD1003FBYZ
WD Purple WD10PURX
Seagate 7200.12
WD Black WD1600BJKT
Toshiba MQ01ABF050
Total
# of Tested
Drives
7
1
1
3
2
1
15
Avg # Bad
Sectors
705
82
500
961
321
14,448
1,639
TABLE I.
THE CUMULATIVE BAD SECTOR DATA FOR SEVERAL DRIVES
USED IN VARIOUS EXPERIMENTS. ALL DRIVES HAD BETWEEN 15 AND 500
POWER ON HOURS (EXCEPT ONE THAT HAD 755 POWER ON HOURS).
Analysis of bad sectors in consumer-grade drives from data
center environments is consistent with the assertion that bad
sectors are rare. Google found that only 9% of their consumer-
grade hard disk drives developed any bad sectors [19] over
eight continuous months of use.
We surmise that the alarming number of bad sectors is due
to head crashes caused by the force that the sound exerts on
the head stack assembly during experimentation (as outlined
Section IV-A). For instance, we have found scratches visible
to the human eye on platters after disassembling some of the
tested drives. However, there could be several other factors
at play. For example, it is possible that the HDD ﬁrmware is
incorrectly marking sectors as physically damaged after failing
to write to them several times because of the interference.
Ultrasonic attacks are less likely to cause a head crash, but
could be damaging the drive in other ways such as causing
the head to become unstable over time because of excessive
parking. This instability could make the drive less reliable in
its reads and writes, leading to sectors being marked as bad.
For example, in a test that subjects the Toshiba HDD to an
ultrasonic signal right at the head parking amplitude threshold,
one can hear head parking in rapid succession, possibly causing
damage to the head controller.
VII. HARD DISK DRIVE NON-RESPONSIVENESS
During throughput testing under malicious acoustic interfer-
ence (Sections IV and V), HDDs become non-responsive to the
operating system (both Windows and Linux). Prior research by
the IT security community [6] observed similar phenomena, yet
the exact causality in the operating system remained a mystery.
A. Causes of Non-Responsiveness Errors
Evidence suggests that prolonged throughput loss may cause
a HDD to enter a non-responsive state by causing timeouts in
I/O requests, along with other errors in the I/O request stack.
This non-responsive state lasts until the HDD is physically
unplugged and reconnected or the operating system restarts.
Examining the Windows 10 I/O request path, particularly the
port and miniport drivers, reveals what practices cause these
errors.
:LQGRZV,25HTXHVW6WDFN
+''
$SSOLFDWLRQ
/HYHO
'ULYHUV
$SS
(UURU
$SSOLFDWLRQV
3RUW
'ULYHU
7LPHU
0LQLSRUW
'ULYHU
+''
&RQWUROOHU
ILUPZDUH
$FRXVWLF
$WWDFN
,QGXFHV
'HOD\V
L
7
P
H
R
X
W
'LVN
'ULYHU
1RQ5HVSRQVLYH
(UURU6WDWH
+'''LVN
SK\VLFDO
P
H
W
V
\
6
H

O
L
)
U
H
J
D
Q
D
0
)LOH
6\VWHP
9ROXPH
0DQDJHU
Fig. 10. On Windows 10, prolonged acoustic interference induces delays
in the HDD that cause a timer in I/O requests between the port driver and
miniport driver to timeout, leading to the HDD entering a non-responsive state.
Light blue indicates the normal path of operation while dark red shows what
happens during an acoustic attack.
1053
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:31:48 UTC from IEEE Xplore.  Restrictions apply. 
I/O Request Path to a HDD.
The non-responsiveness
error originates in the I/O request path (Figure 10). In Windows
10, several actors process each I/O storage request (i.e. read,
write, or control operations to the HDD) before delivering the
request to the HDD [21]. When a typical ﬁle read/write request
reaches the ﬁle system, the ﬁle system passes the ﬁle’s location
information to the volume manager as a partition offset. The
volume manager converts this partition offset into a HDD block
number and sends it to the disk driver. The disk driver converts
the I/O storage request containing the HDD block number to
a SCSI request block and sends the request block to the port
driver, which interfaces with the HDD miniport driver. The
miniport driver takes the request and sends it to the HDD.
I/O Timeouts and Other Errors.
I/O timeouts and other
errors in the I/O request path can lead to the drive entering a
non-responsive state. In Windows 10, the timeout is speciﬁcally
in the port and miniport drivers. The port driver manages
general data ﬂow for a class of devices, in this case HDDs,
whereas the hardware manufacturer designs the miniport driver
to handle data ﬂow speciﬁc to the device [22]. The pair work
in conjunction to pass information from the disk driver to the
HDD. When an I/O request packet is sent from the port driver
to the miniport driver, the I/O request packet is put in a pending
queue until the request is completed [23]. A timer monitors
each unfulﬁlled request. The timer should never expire normally
as expiration implies the device has stopped responding [24].
We ﬁnd two types of errors in Windows 10. (1) The port
driver may timeout, indicated by an error with Event ID code
129. When this happens, all outstanding I/O requests report
an error to the programs that issued the request, and the port
driver sends a reset request to the hard drive [25]. (2) Some
miniport drivers may also report a second error code with Event
ID 153. Some miniport drivers may detect when port driver
timeouts are about to occur and abort the request itself [26].
The miniport driver then returns an error code (ID 153) instead
of the port driver returning an error code. The miniport driver
may also return an error (also ID 153) if it detects HDD
bus communication errors, unrecoverable read errors, or other
undocumented errors.
B. Observations
Windows 10. During an attack, we mainly observe errors
originating from the port driver (ID code 129), but also some
from the miniport driver (ID code 153), that affected numerous
applications and could even crash the operating system. The nu-
merous port driver errors indicate I/O requests frequently timing
out, and also that numerous HDD reset commands are sent to
the miniport driver. However, some of these reset commands re-
main incomplete, resulting in all outstanding requests to remain
stuck, and causing some operating system applications to freeze.
The miniport driver also returned errors, indicating possible
bus or unrecoverable read errors. Sporadically, the Windows
10 OS would crash with a CRITICAL_PROCESS_DIED or
UNEXPECTED_STORE_EXCEPTION error, likely because a
critical process did not handle the port or miniport errors
correctly.
Ubuntu 16.04.
Expired timers in the I/O request chain
lead to Ubuntu remounting all loaded ﬁles as a read only ﬁle sys-
tem, with any previously unaccessed ﬁles becoming inaccessible.
Ubuntu 16.04 logging ﬁles (dmesg, kern.log, and syslog)
conﬁrm that the hard disk controller driver (in this case a
generic ATA/SATA II controller driver) return errors to the
operating system when under attack from acoustic interference.
These errors are due to the expired timer of the outstanding
I/O requests in the pending queue (e.g. READ/WRITE FPDMA
QUEUED command failure) [27]. When the hard drive detects
these conditions, it sends an error message to the controller
driver, and waits to receive a reset command. Note that the
controller driver tries a ﬁnite number of times (usually four)
to send the reset request to the hard drive.
The ﬁle system disconnects and remounts as read only if the
attack persists after the last reset request failures. dmesg shows
COMRESET failure (errono=-16) four times until ﬁ-
nally showing reset failed, giving up. Then, the
attack can also generate delayed block allocation
of inode error
followed by a This should not
happen!! Data will be lost message. In addition,
the message previous I/O error to superblock
detected might appear multiple times. These error messages
indicate ﬁle system corruption and data loss.
C. Measuring Non-Responsiveness Errors
To characterize the non-responsive state, we measured how
long it took to induce non-responsive errors on several HDDs.
Setup. We placed the drives in the experimental setup
described in Section III and determined an effective frequency
for acoustic interference. The test began throughput measure-
ments as described in Section III-C for one minute without
an acoustic signal present. Next, the experiment subjected the
drive to intentional acoustic induced vibration, and afterwards
queried the drive to provide its basic information such as serial
number and device capacity.
Results. Drives exhibited similar behavior when the error
occurred (Table II). After the acoustic signal subsided, the
drive would still appear to the operating system as a block
device. However, when queried for its basic info, the drive
would typically not respond. In rare cases, it would send back
nonsensical data, such as the WD Blue drive reporting non-
displayable characters for its model number and that its capacity
was 2,692 PB when its actual capacity was 500 GB. These
problems persisted until either the computer was restarted, the
Model
Time (s)
Freq
(kHz)
4.6
6.9
7.0
21
27
31
31
Amp
(dB SPL)
118.1
118.9
119.1
120.0
127.2
138.1
139.5
100
130
120
5
8
6
6
WD Blue WD5000LPVX
WD Purple WD10PURX
Seagate 7200.12
WD Black WD1600BJKT
Toshiba MQ01ABF050
WD Blue WD5000LPVX
Seagate 7200.12
TABLE II.
THE FREQUENCY, AMPLITUDE, AND THE MINIMUM
REQUIRED DURATION OF ACOUSTIC SIGNALS USED TO INDUCE VIBRATION
RESULTING IN COMMUNICATION ERRORS THAT PERSISTED UNTIL SYSTEM
RESTART, HDD RESTART, OR PHYSICAL DISCONNECTION AND
RECONNECTION OF THE HDD TO THE COMPUTER ON LINUX. ULTRASONIC
FREQUENCIES WERE ABLE TO INDUCE ERRORS IN AS FEW AS 5 SECONDS
WHILE AUDIBLE FREQUENCIES TOOK AS FEW AS 100 SECONDS.
1054
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:31:48 UTC from IEEE Xplore.  Restrictions apply. 
HDD was power cycled, or the SATA cord was physically
disconnected from the drive and reattached.
Algorithm 2 Creating an HDD proﬁle. Note that test drive is
listed in Algorithm 1
VIII. OPERATING SYSTEMS AND APPLICATIONS
We demonstrate a few of the attacker’s capabilities using
two case studies that utilize vibration interference. In addition,
we describe how an attacker might select a frequency to attack
a drive.
A. Attack Frequency Selection
To maximize effectiveness, an adversary would select a
frequency that requires the smallest acoustic amplitude to
disturb a target HDD. To do so, an adversary may consider
the frequency responses of the speaker and HDD, and whether
or not an inaudible signal is possible or desirable. Note that
because of manufacturing variation having a low effect on
drive characteristics (Section VI-A), an attacker can select a
frequency using a different HDD of the same model as the
victim drive.
Speaker Proﬁling.
To proﬁle a speaker’s frequency
response, one can simply record the loudness of the speaker
at each desirable attack frequency. Alternatively, the frequency
response of the speaker may be available online. Our tests
indicate speakers of the same model share similar frequency
responses, allowing an attacker to proﬁle a speaker of the same
make and model of a target speaker if the target speaker itself
is unavailable.
HDD Proﬁling. An outline of how an attacker could
develop a proﬁle of a HDD model is shown in Algorithm 2.
At each frequency, the algorithm ﬁnds the minimum amplitude
that causes write blocking. In addition, the program should
periodically check the drive to ensure it is still working properly
within operating margins. This includes checking the drive
temperature (to see if it has overheated), the number of bad
sectors, and that the throughput of the HDD is similar to normal
operating parameters.
Choosing a Frequency for Attack.
Choosing an attack
frequency can be as simple as overlaying the speaker proﬁle
and HDD proﬁle, then observing the cross section (Figure 11).
After doing so, one could choose a frequency in one of the
largest areas of overlap for the best possibility of a successful
attack. Alternatively, if ultrasound or near ultrasound (as some
people cannot hear near ultrasonic frequencies because of high
frequency hearing loss) is an available frequency, then it may
be desirable to select that frequency over others to make the
attack harder to detect.
B. Case Study 1: Blue Note
We demonstrate several proof of concept attacks that
affect both Windows 10 and Ubuntu 16.04 systems in various
scenarios. A webpage can launch a self-stimulated attack on a
laptop using the laptop’s own speakers, while requiring no extra
user permissions. An attacker can place a speaker near a victim
desktop computer to conduct an inaudible physical proximity
attack on the desktop computer, even with the speaker and
victim physically decoupled.
Test Methodology.
This setup assumes that the attacker
knows the model of the victim drive and determined the
baseline= test drive()
for freq in range(freqMin, freqMax, freqStep):
// Find min amp at this freq to block writes
while min amp not found(results):
amp = decide next amp(results)
start sound(freq, amp)
results.save test(test drive())
end sound()
PROFILE DRIVE(FREQMIN, FREQMAX, FREQSTEP)
1
2
3
4
5
6
7
8
9
10
11
12
13
14
// Ensure drive functioning properly
results.save temp()
results.save bad sectors()
if is not similar(test drive(), baseline):
stop testing()
)
L
P
S
B
d
(
D
D
H
t
a
e
d
u
t
i
l
p
m
A
120
110
100
90
Choosing a Frequency for Attack
Speaker Can Induce Write Blocking
HDD Write Blocking Threshold
Maximum Speaker Output
5000
10000
Frequency(Hz)
15000
20000
Fig. 11. Proﬁles for a Seagate 7200.12 HDD and a Pyramid TW28 speaker
are shown above. The areas where the proﬁles overlap (the shaded areas) are
those where the speaker can block HDD writes.
vulnerable frequencies via the method in Section VIII-A. For
each test, we installed a fresh operating system on the victim
HDD, then placed the victim system in an acoustic isolation
chamber.
For self stimulation attacks, the victim accesses the adver-
sary’s web site—perhaps through a phishing attack or a link
within a malicious email. The site then plays malicious audio
without permission over the system’s built-in speaker to attack
the HDD. The victim accesses the malicious site using the