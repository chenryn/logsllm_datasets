第五章
但是帮助面上缺少
基本 sed 命令
。这个转义序
在一些制
---
## Page 105
打印
间）。
的行复制到保持空间，转换这个单词，然后将保持空间的内容追加到模式
这个命令影响整个模式空间的所有内容。如果想在输入行上转换单个单词，那
一个可能的用处是用大写字母替换对应的小写字母，
任何地方的“a”都被换成了“x”
替换根据字符的位置来进行。
注9这个命令在 UNIX tr 命令之后被模式化，
命令按位置将字符串 abc 中的每个字符，都转换成字符串 xyz 中的等价字符
转换命令是特有的，不仅因为它在所有的 sed 命令中拥有最小的肋记符。这个
这个脚本不清除由分布引起的不必要的空行。我们在下一单会看到这种处理，
msn 帮助页输出上运行这个脚本会产生下面的文件：
空格用“”表示）。最后一个命令寻找制表符并用一个空格取代它。在样本
（大致过程是：输出更改单的那一行之前的所有行，
么通过使用保持空间可以完成。参见第六章有关如何使用保持空间的详介绍
[address]y/abc/xyz/
（注9）。它的语法如下：
转换
这
要求多行操作。
 y/abcdefghi jkImnopqr stuvwxyz/ABCDEFGHI JKLMNOPQRSTUVWXYZ/
who can list the user’ s name, terminal line, login time,
DESCRIPTION 
who am 1
who am i
[-u] [file] 
who [-a] 
SYNOPSIS
who - who is on the system?
NAME
who(1) who(1)
那么 sed 的y命令就应该命名为t。
有被使用（已被test 命令使用。参见第六章“高级 sed 命令”。），
个非常有用的命令，参阅你的本地文档的详细资料。无疑、
[1-] [-] [s-] [-] [b-] [d-] [1-] [H-] [P-] [q-] 
QQ群：
，因此，
50192241
而不管它后面是否跟有“b”
它没有“词”的概念。这样，
-105 -
被用于转换字符。
第五章
删除这些行，将单词后面
基本 sed 命令
。这个命令的
，这本身是一
如果t还没
在该行上的
空
---
## Page 106
这个命令不能对一个范围内的行进行操作。
号和行本身将被打印。
跟在地址后面的等号（=）打印被匹配的行的行号。除非抑制行的自动输出，行
打印行号
我们将在下一章看到打印命令的其他示例。在下一章还会看到多行打印命令
每个受影响的行都被打印了两次。
下面是运行上面脚本的一个例子：
改变之前行是什么样的。
下面我们看一个如何使用打印命令来进行调试的脚本。它用于显示在发生任意
过程序的流控制来避免到达脚本的底部时，可能会使用它。
默认的输出，
制流。然而，
打印命令（p）输出模式空间的内容。它既不清除模式空间也不改变脚本中的控
为
注
它是以成功的替换为条件的。
意，打印标志被提供给替换命令。替换命令的打印标志不同于打印命令，因
[line-address]=
$ sed -f sed. debug ch05
List 
.Ah "List"
Append, Insert and Change 
Ah "Append, Insert and Change"
.Ah "Delete"
Substitution
.Ah "Comment"
s/^\. Ah //p 
s/ "//g
/~\. Ah/ I
# 在行改变之前和之后打印行
Delete
. Ah "Substitution'
Comment 
否则打印命令将输出行的重复复制。当抑制默认的输出或者当通
它频繁地用在改变流控制的命令（d,N,b）之前。除非抑制（-n)
QQ群：
它的语法如下：
50192241
- 106 -
第五章
基本 sed 命令
---
## Page 107
一个空行。我们想要删除这个窄而不是删除文件中所有的空行。下面是示例文
时，则删除该空行。在这种情况中，
下面我们来看 next 命令的示例，在这个例子中，当空行跟随一个匹配模式的行
是当前行。如果没有抑制默认输出，那么在替换发生之前会打印当前行。
next 命令改变了正常的流控制，
不用返回到脚本的顶端。
下一步
在寻找由编译器报告的问题时，行号是非常有用的，编译器通常列出行号。
上工作的：
本身，这些行都包含后面跟有字符串“if”的制表符。脚本如下：
程序员也许用该命令打印源文件中的某些行。例如，下面的脚本打印行号和行
容
意，#n抑制行的默认输出。现在，我们看看它如何在一个样本程序random.c
，它总是在读入新行之后从脚本的顶端开始。实际上，
-步（next）命令（n）输出模式空间的内容，然后读取输入的下一行，而
$ sed -f sedscr.= random.c
# 打印具有if语句的行号和行
[address]n
303
234
192
（n〈BREAK_1）{
( rand_type == TYPE_0 ） state[ -1 ］ = rand_type; 
n〈BREAK_3）{
if/{
QQ群：
它的语法如下：
50192241
直到到达脚本的底部才会输出模式空间的内
假设作者已经在节标题宏（.H1）之后插入
第五章
next 命令导致输入的
基本 sed 命令
而不
---
## Page 108
使用 sed 脚本可以在必要时分别单独对结束部分进行维护，例如，当将文件发
如，假设有一组文件并且每个文件都应以相同的一个或两个段落的语句结束。
读命令对于将一个文件的内容插入到另一个文件的特定位置是很有用的。
且，每个脚本最多只能打开10个文件。
在命令和文件名之前必须有一个空格（空格后到换行符前的每个字符都被当做
范围内的行进行操作。写命令将模式空间的内容写到file中。
读命令将由file 指定的文件确定的行之后的内容读入模式空间。它不能对一个
读和写文件
第六章将介绍有关n命令的其他示例，以及该命令的多行形式。
在较长的脚本中，必须记住出现在 next 命令之前的命令不会应用于新的输入
个地址应用多个命令。
打印那一行并读入下一行。如果那一行为空，则删除它”。大括号用于在同一
个指令写到同一个文件中，
下面的脚本删除其中的空行：
文
读
文
读
行
件：
件已经存在，那么写命令将在每次调用脚本时改写它。如果一个脚本中有
命令也不会报错。
件名.因此，前导的和嵌入的空格也是文件名的一部分）
续（r）和写（w）命令用于直接处理文件。这两个命令都只有一个参数，即文
行，而且出现在后面的命令不应用于旧的输入行。
[address]w file
[line-address]r file 
/~\. H1/{
"Soldiers,
Napoleon, pointing to the Pyramids, said to his troops:
.H1 "On Egypt"
~$/d 
 forty centuries have their eyes upon you. "
如果写命令中指定的文件不存在，将创建一个文件；如果
QQ群：
那么每个写命令都将内容追加到这个文件中。而
50192241
第五章
。如果文件不存在，
基本 sed 命令 
例
---
## Page 109
自己的文件中。例如，假设有一个按字母顺序列出的销售人员名字的文件。对
现在我们来看写命令的例子。其中之一是从一个文件中提取信息并将它放置在
但是读命令的结果仍然转到标准输出。
使用-n选项或#n脚本语法可以取消自动输出，阻止模式空间的初始行被输出，
运行这个包含两行的脚本会产生：
删除初始行。所以如果输入文件如下所示：
会起作用。
件中读取的行。
company.list 的内容附加在被匹配的行的末尾。后面的命令不会影响从这个文
也就是，
你也许想要测试读命令的几个方面。我们看看下面的命令：
录下。一个更通用的命令应该使用完整的路径名。
$是指定文件最后一行的寻址符号。文件closing 的内容放置在模式空间的内容
送到打印机时：
于
每个人这个清单都指明了他被分配到4个区域中的哪个区域。下面是一个示
Thank you.
不能对读入到文件跌公司列表进行任何改变。然而，寻址初始行的命令将
Banks,
Adams,
Thank you.
United  
Mayf lower
Allied   
For service, contact any of the following companies:
For service, contact any of the following companies:
/^/r company. list 
~/d 
当 sed 匹配以字符串“”开始的行时，
第二个命令可以跟着前一个命令：
Freda South
 Henrietta Northeast
例
QQ群：
50192241
- 109 -
假设文件和命令在同一个目
第五章
基本 sed 命令 
它将文件
---
## Page 110
的时间抵消了不用手动编辑而节省下来的时间，但至少在这段时间内，你的头
像许多程序一样，sed 脚本通常一开始都很小，
检查参考页
可以在脚本中使用它来生成同一源文件的几个自定义版本。
替换命令匹配与地址相同的模式并删除它。写命令有许多不同的应用，例如,
脑被自己的这个似乎熟悉的想法占据：
给脚本增加行，
脚本时，可能会发现不适用于一般规则的特殊情况。为了解决这些问题，可以
于每一种情况，我们都可以像对Northeast 地区那样来处理：
写命令在被调用时就写出模式空间的内容，
region.northeast 中。
所有被分配到 Northeast 地区销售员的名字，都被放置在文件
以做这项工作：
sed 的优点是我们可以一步就将文件分成4个独立的文件。下面的4行脚本可
如果我们想要的是提取特定区域的名字，
行
理任意多的可以放在一起的名字，而且是可以重用的。
行写操作。在上一个例子中，我们也许想在写到文件之前删除地区的名字。对
然，为包含7行的文件编写一个脚本是很可笑的。然而这样一个脚本能够处
M
s///
/Northeast$/{
/West$/w region. west
/Midwest$/w region. midwest
/South$/w region. south
/Northeast$/w region. northeast 
Sommes,
Madison, Sylvia Midwest 
Garvey, Bill Northeast
Dennis, Jim Midwest 
 region. northeast
Tom South
生成更长、
QQ群：
，更复杂并且更完整的脚本。虽然花费在细化脚本上
50192241
-110-
“看！计算机完成的”。
可以很容易地使用 grep 来完成。使用
，而不是等到到达脚本的结尾时才进
并且写和读都很简单。在测试
第五章
基本 sed 命令 
---
## Page 111
星
们指定以星号开始和结束的任意行的地址，并寻找两个星号之间的零个或多个
例如，通过查看第一行，
式。
类似的出现情况。我们要尽量找到能标记这些需要编辑的行或行范围的特殊模
文件的每一行决定是否在那一行上进行编辑。然后查看文件的其他部分来查找
我们将检查构建这个 sed 脚本的过程。在某种意义上，
命令之间也会有很多的差别，这就需要检查许多遍。
且，因为有这么多页，即使作者在输入它们一般都能保持一致性，但在命令和
这些命令页戊大约有 40页，所以看完它们并手动添加代码完全是个苦差使。而
现在的任务是使用我们开发的引用首部宏为激光打印机格式化以上文档。因为
update 
码，但使用了一致的标题来标识命令页的格式。示例文件如下所示：
文本文件键入的，它没有包含任何格式化信息。虽然这个文件没有格式化代
在准备命令页的格式化复制中，我们会遇到这位的问题，该命令页是作者作为
号。正则表达式将星号用作字面值和元字符。
DBclose() is analogous to the CLOSE statement in BASIC.
*fdesc must specify an open file.
Note that there is no default file as there is in BASIC.
Iocks and pending writes are not changed.
iul '(asoioaa lleo no uaum panoatte rou ae siasn hauao
*****************************************************************
*fdesc becomes invalid.
file is closed. All of 
There is no return value
RETURNS:
Your pending writes to that file will be completed before the 
DBclose( ) closes a file when given its database file descriptor.
fdesc
void DBclose(fdesc)
SYNTAX:
NAME: DBclose - closes a database
DESC:
JSAGE:
DBFILE
*****************************************************************
C - pointer to database file descriptor
 *fdesc;
QQ群：
我们知道需要排除包含分隔每个命令的一排星号。我
50192241
 your update locks are removed.
- 111 -
第五章
，就是仔细查看示例输入
基本 sed 命令
---
## Page 112
址，这两模式标签和空行。然后，我们使用更改命令，用一系列格式化请求取
下面我们超前一些，来看看脚本将这些示例进行什么操作：
我们在行的开始处插入这个宏，删除连字符并且用引号包围参数。
我们需要用宏.Rh O取代它。它的语法为
我们遇到的下一行中包含有命令的名字和一个描述。
制表符。
我们只删除特殊情况下的制表符，包括在行的开始处的制表符和在冒号后面的
有的制表符，但是有一些我们想要保留的制表符，
NAME）的冒号之后。我们的第一个想法是用8个空格来取代制表符从而删除所
制表符是一个类似的问题。制表符用于缩进语法行，在某些情况下位于标签
的功能打开和关闭。为了做到这一点，
我们检查的下一部分以“SYNTAX”开始。
后一个操作设计为删除不想要的空行。
标记的节，
推迟删除或取代空行直到完成了对特殊情况的处理。例如，
已经提供了空格，所以可以删除空行。在这种情况下，我们可以在全局基础
段落，
这个命令删除在文件中任何地方出现的整个星号行。
（如
在行的开始处删除了制表位）。这些请求必须在语法行的前后加入，
缩进、
.Rh O "DBclose" "closes a database"
s/$/
s/ - /""/
s//.Rh 0 "/
/NAME: / 
/:·/s//:/
/~ /s///
/^1*|**\*$/d
NAME: DBclose - closes a database
但是用段落宏取代每个空行会引起其他问题。
，字体更改以及非填充和非调整的troff 请求（缩进是需要的，因为