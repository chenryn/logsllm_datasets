# 【技术分享】针对蒙古政府的鱼叉式钓鱼攻击分析
##### 译文声明
本文是翻译文章，原文来源：[fireeye.com](http://fireeye.com)。译文仅供参考，具体内容表达及含义以原文为准。

**翻译：testvul_001**
**预估稿费：120RMB**
**投稿方式：** 发送邮件至 [linwei#360.cn](mailto:linwei@360.cn)，或登录 [网页版](http://bobao.360.cn/contribute/index) 在线投稿

## 前言
FireEye 最近观察到一起针对蒙古政府雇员的复杂攻击行动。受害者通过启用恶意 Microsoft Word 文档中的宏脚本感染了 Poison Ivy 恶意软件（Poison Ivy 是一种已有十年历史的远程控制工具，能够进行键盘记录、截屏、录像、窃取文件和密码等恶意行为）。此次攻击中，攻击者采用了以下几种有趣的技巧：

1. **定制化的绕过策略**：攻击者利用公开的技术绕过了目标系统中的 AppLocker 应用白名单机制。
2. **极少的可执行文件与持久性维护**：通常情况下，攻击者会尽量减少在磁盘上创建可执行文件以避免检测和取证。本次攻击中，我们观察到了四个阶段的 PowerShell 脚本使用。
3. **诱饵文件**：攻击者使用 PowerShell 脚本从互联网下载初始的恶意文件，并通过单独的 Word 文档加载该文件以降低受害者的警觉。

## 攻击链
攻击者首先通过社会工程学手段诱导受害者运行嵌入在 Word 文档中的宏指令，进而加载恶意 PowerShell 攻击向量。攻击者利用了两个公开的技术：
- **AppLocker 白名单绕过技术**。
- **通过脚本将 shellcode 注入 userinit.exe 进程**。

这些恶意攻击向量通过多个 PowerShell 脚本传播，使得追踪它们变得困难，因为不同于写入磁盘的独立脚本文件，PowerShell 攻击向量存储在注册表中。下图展示了从恶意宏指令执行攻击向量的步骤。

### 第一阶段：社会工程学与宏指令 - PowerShell 的使用
受害者首先会收到一封包含 Word 文档的电子邮件，这些文档伪装成 Webmail 系统登录指南或政府法律提案信息。当受害者打开恶意文档后，会看到提示启用宏指令的信息。

#### 绕过 AppLocker 的应用白名单保护
微软的白名单解决方案 AppLocker 可以阻止未知可执行文件在系统上运行。然而，在 2016 年 4 月，研究人员发现可以通过 `regsvr32.exe` 绕过这一限制。`regsvr32.exe` 是一个合法文件，可以在许多 AppLocker 策略中运行。它可以用来下载并执行 SCT 文件，从而绕过 URL 限制。

我们观察到攻击者通过宏代码调用 `regsvr32.exe` 来绕过这一限制（同时传入托管恶意 SCT 文件的 URL）。

下图展示了绕过 AppLocker 的完整命令行参数。我们发现恶意的 SCT 文件通过隐藏模式调用 WScript 并硬编码加载 PowerShell 脚本。

### 第二阶段：解码 SCT 文件，加载诱饵
解码 PowerShell 命令后，我们观察到另一层 PowerShell 指令，具有两个目的：
1. 下载诱饵文件并通过第二个 `winword.exe` 打开该文件。当受害者启用宏代码时，他们会看到与钓鱼邮件描述内容相符的文档。
2. 加载完诱饵文件后，PowerShell 脚本会下载并运行名为 `f0921.ps1` 的 PowerShell 脚本。

### 第三阶段
第三阶段的 PowerShell 脚本配置了一个永久性的 base64 编码的 PowerShell 脚本命令，并将其保存在 `HKCU:ConsoleFontSecurity` 注册表键值中。同时，它还配置了一个名为 `HKCU\CurrentVersion\Run\SecurityUpdate` 的注册表键值，用于加载存储在 `HKCU:ConsoleFontSecurity` 键值中的 PowerShell 攻击向量。下图展示了一些相关代码，这些代码会在用户登录系统时执行。

### 第四阶段：PowerShell Inject-LocalShellCode 代码
`HKCU:ConsoleFontSecurity` 注册表键值包含了第四阶段的 PowerShell 脚本，该脚本借用了 PowerSploit 中的 `Inject-LocalShellCode` 部分代码来注入 shellcode。

#### Shellcode 分析
Shellcode 使用基于 XOR 的加密方法，密钥为 `0XD4`。当 shellcode 被解密并开始运行时，它会向 `userinit.exe` 注入 Poison Ivy 后门。在 shellcode 中，我们发现了与 Poison Ivy 相关的内容和配置，包括：
- Active setup – StubPath
- Encryption/Decryption key – version2013
- Mutex name – 20160509

## 总结
尽管 Poison Ivy 已经是一个存在很久的威胁，但这次攻击中其传输方式使用了近期流行的技巧，与以往观察到的方法有所不同。通过使用 PowerShell 脚本和公开的安全控制绕过方法，大部分攻击步骤都在内存中完成，使得在目标机器上的取证工作变得非常困难。