because the whole sequence was ones (left) or zeros
(right).
inating these two extreme possibilities we make sure that
ﬂipping the two least signiﬁcant bits will never create the
HM -sequence.
To prove that only a sequence of all zeros (or all ones)
can create the HM -sequence if the last two bits are ﬂipped,
we use the two illustrations in Figure 9. We start with no
assumptions on the bit sequence other than it ends in ’1 0’ or
’0 1’. The two sub ﬁgures in Figure 9 illustrate the situation
where the HM -sequence ends in ’1 0’ and ’0 1’ respectively.
We will just describe the ’1 0’ (left) case as the explanation
applies to both situations.
The top row depicts six bits of the pseudo random bit
stream that passes through the HM -detector. Now suppose
the bits b0–b4 matches the HM -sequence that must mean
that the last two bits are ’1 0’. The second line depicts the
situation when the last two bits are ﬂipped. Now we see
that, ﬁrst of all, if a new valid HM -sequence is created it
must mean that b2 must be one, otherwise the bits would
not create a valid HM . That in turn requires all the rest of
the bits to be one in order to create a valid HM -sequence. (cid:3)
That means that for the veriﬁer to generate a 160 bit
HM -sequence he should generate a 159 bit random nonce
and then append a one or a zero such that the ﬁnal two
bits of the HM -sequence are either ’0 1’ or ’1 0’. The only
restriction that applies to the random nonce is that it can
not be all zeros or all ones.
5.4 Attackers guessing space
Transmitting a stream prevents the attacker from obtain-
ing information about when the veriﬁer sent the nonce to
the prover. As previously explained, the veriﬁer will estab-
lish the stream and then send random meaningless data for
a while before sending the hidden marker and the nonce,
the amount of time is chosen at random within the setup
window ws. The attacker has two options when trying to
guess the start of the nonce. The attacker can either guess
the HM -sequence with a probability of 2j−1 where j is the
length of the HM (the last bit is known once j − 1 bits
have been guessed), e.g., 2159 for a 160 bit HM , or he can
try to guess the start of the HM -sequence without actually
guessing the sequence.
For a bit rate of 1 Gb/s and a setup window of 500ms
there are 5 · 108 ≈ 230 possible starting points for the HM -
sequence. However since the HM has to end in either ’0
1’ or ’1 0’ the attacker can rule out starting points that do
not have one of these combinations at the end (i.e., end in
’1 1’ or ’0 0’), assuming the attacker knows the length of
the HM . That gives a guessing space for the attacker of
2.5 · 108 ≈ 229 possible start locations for the HM . Given
that the attacker only has one guess we believe that to be
suﬃcient. If a larger guessing space is needed the prover can
either increase the setup window ws or the protocol can be
executed with a higher stream bit rate.
The reason the attacker only has one guess is that, al-
though he can guess as many times as he wants, he has no
way of verifying the guess, even if he happens to guess cor-
rectly, so if he wants to attack the protocol he will have to
make a single guess and hope it is correct.
5.5 Bit rate and modulation
The veriﬁer measures the time it takes for the prover to
respond to a challenge by counting the number of bits that
separates the start of his own transmission of Nv and the
reception of Np ⊕ Nv. This is the only way to measure
time since the continuous stream is already established by
the time the prover must send back Np ⊕ Nv, and therefore
the prover can only add data to the stream and not send
asynchronous messages.
As a consequence of this, the time granularity with which
the prover can respond is equal to the bit rate. This means
that the bit rate must be suﬃciently high to give a good
granularity of the distance. If the bit rate is 1Gb/s, i.e., one
bit every nanosecond, the distance granularity is approxi-
mately 30cm. Bit rates of 1+ Gb/s are not yet commonly
used in consumer electronics but several interesting prod-
ucts are already on the market (early 2008). WUSB [2]
have achieved a bit rate of up to 480 Mbit/s giving a dis-
tance granularity of about 60cm. There is also Sony’s Trans-
ferJet [3] with bit rates up to 560Mbit/s in optimal con-
ditions (about 50cm) and the wireless network standard
IEEE 802.11n [6] oﬀers speeds of up to 248 Mbit/s (in the-
ory) giving a granularity of about 1.15 meters.
IEEE 802.15.3-2003 [25] is a MAC and physical layer stan-
dard for high-rate (1100 to 1055 Mb/s) wireless personal
area networks (WPANs) which gives a distance granularity
over shorter distances of 27 – 28 cm.
It is not only the bit rate that is important for the proto-
col but also the modulation. Suppose a bit rate of 1 Gb/s is
achieved with QPSK [1] modulation. That does not mean
that the radio receives one bit every nanosecond but rather
it receives two bits every two nanoseconds, reducing the dis-
tance granularity to 60 cm.
5.6 Hiding the stream with DSSS
We saw in Section 4.4 that DSSS can not be used alone
as a protection mechanism due to the unpredictable acqui-
sition time. This unpredictability is not a problem in the
stream based protocol however, since the exact arrival time
of the ﬁrst bits of the stream have no meaning, and as noted
in Section 4.4, once the connection is established and the
veriﬁer and prover are synchronized, the delay introduced
by the DSSS system is negligible.
For the prover and veriﬁer to use DSSS the veriﬁer must
pick a spreading code at the beginning of the protocol and
send this code encrypted to the prover along with the HM -
sequence. Following that, the stream is established as ex-
plained, with the exception that it is now being transmitted
using DSSS with the spreading code chosen by the veriﬁer.
Using DSSS will force the attacker to search for the right
spreading code before trying to guess the position of the HM
within the stream. If the signal is spread over a large fre-
quency band the attacker might not even be able to separate
it from channel background noise. In this case the use of a
hidden marker in the stream is superﬂuous.
Another beneﬁt of using DSSS on top of the stream based
distance bounding protocol is that several nodes can exe-
cute the protocol simultaneously with minimal interference,
thus making the system more robust. If DSSS is not used,
the protocol will occupy the channel for the duration of the
stream.
The only downside, and the reason that DSSS is only men-
tioned as an extension to the protocol, is that it either in-
creases the (already high) bit rate of the stream or it de-
creases the granularity of the distance bound. This is a
technical limitation that may become less important as new
high bit rate UWB systems become more common.
6. RELATED WORK
Distance bounding was ﬁrst introduced by Brands and
Chaum [4] in 1993. Since then the notion has been used
in a number of diﬀerent applications for wireless networks
including [23, 27, 30] and in sensor networks [15, 29, 28, 22].
Distance bounding protocols have also been proposed in
other contexts, e.g., for RFIDs [10, 8, 16] and ultra wide
band (UWB) devices [14, 9].
The information leaked by distance bounding protocols
has received very little attention so far. To the best of our
knowledge the only other attempt to solve some of the prob-
lems analyzed in this paper is a patent by Sahinoglu, Orlik
and Molisch [20] in which the authors present a protocol
that provide increased privacy for the prover.
The protocol in [20] is similar to the protocol we analyze in
Section 4 in that the prover and veriﬁer agree on a delay be-
fore the actual ranging phase begins. The solution does not
consider the case where the prover is malicious and tries to
cheat on the distance, but only attempts to provide an hon-
est prover with increased privacy. The privacy is achieved
using a ﬁxed set of autocorrelation codes from which one is
chosen at random by the veriﬁer when the protocol begins.
While the solution presented in [20] does go some way
towards addressing the problem of information leakage, its
scope is signiﬁcantly diﬀerent from ours. It targets prover
privacy from external attackers only and the solution does
not provide protection against attacks in which the attacker
tries all autocorrelation codes oﬀ line as described in Sec-
tion 4.4.3.
Our work is the ﬁrst to do a comprehensive analysis of
the information that leaks from a distance bounding pro-
tocol and to propose a solution that protects against both
malicious provers, passive eavesdroppers (including oﬀ-line
attacks) and attackers that try to actively initiate a distance
bounding session.
7. CONCLUSION
Distance bounding protocols for determining an upper
bound on the distance between two entities have been pro-
posed for many security critical applications including secure
localization and access control.
In this work, we showed that existing distance bounding
protocols leak distance and location information to an at-
tacker who overhears the communication between the prover
and veriﬁer. We identiﬁed eight scenarios that represents
diﬀerent a priori knowledge of the attacker.
In each sce-
nario we analyzed how much information is leaked and how
the attacker can reconstruct the distance between the prover
and veriﬁer. We also showed how the attacker can ﬁnd his
own position relative to the prover and veriﬁer. We further
analyzed diﬀerent straightforward countermeasures and dis-
cuss why they do not provide adequate protection against
information leakage in distance bounding protocols. Finally,
we presented a location private distance bounding protocol
that preserves all the attractive properties of other distance
bounding protocols, but does not leak any range and dis-
tance information to the attacker. Our protocol can thus be
used for location private distance bounding or as a basis for
location private secure localization.
8. REFERENCES
[1] QPSK modulation demystiﬁed. http:
//www.maxim-ic.com/appnotes.cfm/appnote_number/686/,
2000.
[2] Certiﬁed wireless usb from the usb-if.
http://www.usb.org/developers/wusb/, 2008.
[3] Sony develops new close proximity wireless transfer
technology “TransferJet”. http://www.sony.net/SonyInfo/
News/Press/200801/08-002E/index.html, 2008.
[4] S. Brands and D. Chaum. Distance-bounding protocols. In
Workshop on the theory and application of cryptographic
techniques on Advances in cryptology, pages 344–359.
Springer-Verlag New York, Inc., 1994.
[5] Liang Chang, Fuping Wang, and Zanji Wang. Detection of
dsss signal in non-cooperative communications.
Communication Technology, 2006. ICCT ’06. International
Conference on, pages 1–4, Nov. 2006.
[6] Broadcom Corporation. 802.11n: Next-generation wireless
lan technology. http:
//www.broadcom.com/docs/WLAN/802_11n-WP100-R.pdf,
2006.
[7] A. Dersan and Y. Tanik. Passive radar localization by time
diﬀerence of arrival. MILCOM 2002. Proceedings,
2:1251–1257 vol.2, 7-10 Oct. 2002.
[8] Saar Drimer and Steven J. Murdoch. Keep your enemies
close: Distance bounding against smartcard relay attacks.
In Proceedings of the USENIX Security Symposium 2007,
2007.
[9] S. Gezici, Zhi Tian, G.B. Giannakis, H. Kobayashi, A.F.
Molisch, H.V. Poor, and Z. Sahinoglu. Localization via
ultra-wideband radios: a look at positioning aspects for
future sensor networks. Signal Processing Magazine, IEEE,
22(4):70–84, July 2005.
[10] Gerhard P. Hancke and Markus G. Kuhn. An rﬁd distance
bounding protocol. In SecureComm ’05: Proceedings of the
First International Conference on Security and Privacy for
Emerging Areas in Communications Networks, pages
67–73, Washington, DC, USA, 2005. IEEE Computer
Society.
[11] Y.-C. Hu, A. Perrig, and D. B. Johnson. Packet Leashes: A
Defense against Wormhole Attacks in Wireless Networks.
In Proceedings of the IEEE Conference on Computer
Communications (InfoCom), San Francisco, USA, April
2003.
[12] Multispectral Solutions Inc. UPS (urban positioning
system). http://www.multispectral.com.
[13] Z. Kostic and I. Maric. Dynamic frequency hopping in
wireless cellular systems-simulations of full-replacement and
reduced-overhead methods. Vehicular Technology
Conference, 1999 IEEE 49th, 2:914–918 vol.2, Jul 1999.
[14] J.-Y. Lee and R.A. Scholtz. Ranging in a Dense Multipath
Environment Using an UWB Radio Link. IEEE Journal on
Selected Areas in Communications, 20(9), December 2002.
[15] Catherine Meadows, Paul Syverson, and LiWu Chang.
Towards more eﬃcient distance bounding protocols for use
in sensor networks. Securecomm, pages 1–5, Aug. 28
2006-Sept. 1 2006.
[16] Jorge Munilla, Andres Ortiz, and Alberto Peinado.
Distance bounding protocols with void-challenges for
RFID. Printed handout at the Workshop on RFID Security
– RFIDSec 06, July 2006.
[17] Maxim Integrated Products. An introduction to
direct-sequence spread-spectrum communications. http://
www.maxim-ic.com/appnotes.cfm/appnote_number/1890/,
2003.
[18] Kasper Bonne Rasmussen and Srdjan ˇCapkun. Extended
abstract: Implications of radio ﬁngerprinting on the
security of sensor networks. In Proceedings of the
ACM/IEEE International Conference on Mobile
Computing and Networking (MobiCom), 2007.
[19] Jason Reid, Juan M. Gonzalez Nieto, Tee Tang, and
Bouchra Senadji. Detecting relay attacks with timing-based
protocols. In ASIACCS ’07: Proceedings of the 2nd ACM
symposium on Information, computer and communications
security, pages 204–213. ACM, 2007.
[20] Zafer Sahinoglu, Philip Orlik, and Andreas F. Molisch.
Device, dethod and protocol for private UWB ranging.
World Intellectual Property Organization, 2007.
[21] N. Sastry, U. Shankar, and D. Wagner. Secure Veriﬁcation
of Location claims. In Proceedings of the ACM Workshop
on Wireless Security (WiSe), pages 1–10. ACM Press,
September 2003.
[22] S. Sedihpour, S. ˇCapkun, S. Ganeriwal, and M.Srivastava.
Implementation of attacks on ultrasonic ranging systems,
demo. SENSYS, 2005.
[23] D. Singelee and B. Preneel. Location veriﬁcation using
secure distance bounding protocols. Mobile Adhoc and
Sensor Systems Conference, 2005. IEEE International
Conference on, pages 7 pp.–, 7-10 Nov. 2005.
[24] Bernard Sklar. Digital Communications, Fundamentals and
Applications, 2nd Edition. Prentice Hall PTR., Jan 2001.
[25] IEEE Computer Society. Part 15.3: Wireless medium
access control (MAC) and physical layer (PHY)
speciﬁcations for high rate wireless personal area networks
(WPANs). http://www.cmi.ac.in/~sdatta/networks/
standards/802.15.3-2003.pdf.
[26] Nils Tippenhauer and Srdjan ˇCapkun. UWB-based Secure
Ranging and Localization. Technical Report 586, ETH
Zurich, January 2008.
[27] S. ˇCapkun, L. Butty´an, and J.-P. Hubaux. SECTOR:
Secure Tracking of Node Encounters in Multi-hop Wireless
Networks. In Proceedings of the ACM Workshop on
Security of Ad Hoc and Sensor Networks (SASN),
Washington, USA, October 2003.
[28] S. ˇCapkun and J.-P. Hubaux. Securing position in sensor
networks. Technical Report 200444, EPFL (Swiss Federal
Institute of Technology in Lausanne, 2004.
[29] S. ˇCapkun and J.-P. Hubaux. Secure positioning of wireless
devices with application to sensor networks. In Proceedings
of the IEEE Conference on Computer Communications
(InfoCom), 2005.
[30] S. ˇCapkun and J.-P. Hubaux. Secure positioning in wireless
networks. Selected Areas in Communications, IEEE
Journal on, 24(2):221–232, Feb. 2006.
[31] Chin-Der Wann and Hao-Chun Chin. Hybrid toa/rssi
wireless location with unconstrained nonlinear optimization
for indoor uwb channels. Wireless Communications and
Networking Conference, 2007.WCNC 2007. IEEE, pages
3940–3945, 11-15 March 2007.
[32] R. Ward. Acquisition of pseudonoise signals by sequential
estimation. Communications, IEEE Transactions on
[legacy, pre - 1988], 13(4):475–483, Dec 1965.
[33] D.P. Young, C.M. Keller, D.W. Bliss, and K.W. Forsythe.
Ultra-wideband (uwb) transmitter location using time
diﬀerence of arrival (tdoa) techniques. Signals, Systems and
Computers, 2003. Conference Record of the Thirty-Seventh
Asilomar Conference on, 2:1225–1229 Vol.2, 9-12 Nov.
2003.