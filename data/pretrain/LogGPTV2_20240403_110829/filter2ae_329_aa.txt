**作者：Longofo@知道创宇404实验室**  
**时间：2019年8月8日**  
**英文版本:**
### 漏洞概述
2019年08月01日，Apache
Solr官方发布[预警](https://issues.apache.org/jira/browse/SOLR-13669)，Apache Solr
DataImport功能 在开启Debug模式时，可以接收来自请求的"dataConfig"参数，这个参数的功能与data-config.xml一样，不过是在开启Debug模式时方便通过此参数进行调试，并且Debug模式的开启是通过参数传入的。在dataConfig参数中可以包含script恶意脚本导致远程代码执行。
我对此漏洞进行了应急，由于在应急时构造的PoC很鸡肋，需要存在数据库驱动，需要连接数据库并且无回显，这种方式在实际利用中很难利用。后来逐渐有新的PoC被构造出来，经过了几个版本的PoC升级，到最后能直接通过直接传递数据流的方式，无需数据库驱动，无需连接数据库且能回显。下面记录下PoC升级的历程以及自己遇到的一些问题。感谢@Badcode与@fnmsd师傅提供的帮助。
### 测试环境
分析中涉及到的与Solr相关的环境如下：
  * Solr-7.7.2
  * JDK 1.8.0_181
### 相关概念
一开始没有去仔细去查阅Solr相关资料，只是粗略翻了下文档把漏洞复现了，那时候我也觉得数据应该能回显，于是就开始调试尝试构造回显，但是没有收获。后来看到新的PoC，感觉自己还没真正明白这个漏洞的原理就去盲目调试，于是又回过头去查阅Solr资料与文档，下面整理了与该漏洞有关的一些概念。
##### Solr工作机制
1.solr是在lucene工具包的基础之上进行了封装，并且以web服务的形式对外提供索引功能
2.业务系统需要使用到索引的功能（建索引，查索引）时，只要发出http请求，并将返回数据进行解析即可
(1) 索引数据的创建
根据配置文件提取一些可以用来搜索的数据（封装成各种Field），把各field再封装成document，然后对document进行分析（对各字段分词），得到一些索引目录写入索引库，document本身也会被写入一个文档信息库
(2) 索引数据的查询
根据关键词解析（queryParser）出查询条件query(Termquery)，利用搜索工具（indexSearcher）去索引库获取文档id，然后再根据文档id去文档信息库获取文档信息
##### Solr DataImportHandler
Solr
DataImportHandler可以批量把数据导入到索引库中，根据[Solr文档](https://cwiki.apache.org/confluence/display/SOLR/DataImportHandler#DataImportHandler-Usingdelta-importcommand)中的描述，DataImportHandler有如下功能：
  * 读取关系数据库中数据或文本数据
  * 根据配置从xml（http/file方式）读取与建立索引数据
  * 根据配置聚合来自多个列和表的数据来构建Solr文档
  * 使用文档更新Solr（更新索引、文档数据库等）
  * 根据配置进行完全导入的功能（full-import，完全导入每次运行时会创建整个索引）
  * 检测插入/更新字段并执行增量导入（delta-import，对增加或者被修改的字段进行导入）
  * 调度full-import与delta-import
  * 可以插入任何类型的数据源（ftp，scp等）和其他用户可选格式（JSON，csv等） 
通过搜索到的资料与官方文档中对DataImportHandler的描述，根据我的理解整理出DataImport处理的大致的流程图如下（只画了与该漏洞相关的主要部分）：
几个名词解释：
  * Core：索引库，其中包含schema.xml/managed-schema，schema.xml是模式文件的传统名称，可以由使用该模式的用户手动编辑，managed-schema是Solr默认使用的模式文件的名称，它支持在运行时动态更改，data-config文件可配置为xml形式或通过请求参数传递（在dataimport开启debug模式时可通过dataConfig参数传递）
通过命令行创建core
-d 参数是指定配置模板，在solr 7.7.2下，有_default与sample_techproducts_configs两种模板可以使用
通过web页面创建core
一开始以为从web页面无法创建core，虽然有一个Add
Core，但是点击创建的core目录为空无法使用，提示无法找到配置文件，必须在solr目录下创建好对应的core，在web界面才能添加。然后尝试了使用绝对路径配置，绝对路径也能在web界面看到，但是solr默认不允许使用除了创建的core目录之外的配置文件，如果这个开关设为了true，就能使用对应core外部的配置文件：
后来在回头去查阅时在[Solr Guide
7.5文档](https://lucene.apache.org/solr/guide/7_5/coreadmin-api.html)中发现通过configSet参数也能创建core，configSet可以指定为_default与sample_techproducts_configs，如下表示创建成功，不过通过这种方式创建的core的没有conf目录，它的配置是相当于链接到configSet模板的，而不是使用copy模板的方式：
通过以上两种方式都能创建core，但是要使用dataimport功能，还是需要编辑配置solrconfig.xml文件，如果能通过web请求方式更改配置文件以配置dataimport功能就能更好利用这个漏洞了。
schema.xml/managed-schema：这里面定义了与数据源相关联的字段（Field）以及Solr建立索引时该如何处理Field，它的内容可以自己打开新建的core下的schema.xml/managed-schema看下，内容太长就不贴了，解释下与该漏洞相关的几个元素：
    Field: 域的定义，相当于数据源的字段
            Name：域的名称
            Type：域的类型
            Indexed：是否索引
            Stored：是否存储
            multiValued：是否多值，如果是多值在一个域中可以保持多个值
            example：
    dynamicField：动态域，PoC最后一个阶段便是根据这个字段回显的
            动态字段定义允许使用约定优于配置，对于字段，通过模式规范来匹配字段名称
            示例：name ="*_i"将匹配dataConfig中以_i结尾的任何字段（如myid_i，z_i）
            限制：name属性中类似glob的模式必须仅在开头或结尾处具有"*"。
            这里的含义就是当dataConfig插入数据发现某一个域没有定义时，这时可以使用动态域当作字段名称         进行数据存储，这个会在后面PoC的进化中看到
            example: