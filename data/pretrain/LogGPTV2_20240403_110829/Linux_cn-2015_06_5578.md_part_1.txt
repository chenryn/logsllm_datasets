---
author: nixCraft
category: 系统运维
comments_data: []
count:
  commentnum: 0
  favtimes: 6
  likes: 0
  sharetimes: 0
  viewnum: 10827
date: '2015-06-08 09:15:00'
editorchoice: false
excerpt: '我在Linux(基于CentOS 或者 Debian 的发行版)中该如何查看当前网络端口吞吐量的统计信息？在Linux操作系统中如何查看当前内核snmp计数器以及网络端口的统计信息？  你可以使用以下任何一个命令：
  nstat 命令 : 网络统计工具 键入以下命令: # nstat  输出样例: #kernel IpInReceives 133243 0.0 IpInDelivers
  133243 0.0 IpOutRequests 92904 0.0 IcmpOutErrors 97 0.0 IcmpOutTimeExcds 97 0.0
  IcmpMsgOutType3 97 0.0 TcpActiveOpens 538 0.0 TcpEstabResets 56 0.0 TcpInSegs 129837
  0.0 TcpOutSegs 89720 0.0 TcpRetransSegs 42 0.0 Tc'
fromurl: http://www.cyberciti.biz/faq/network-statistics-tools-rhel-centos-debian-linux/
id: 5578
islctt: true
largepic: /data/attachment/album/201506/06/092123qqzl2qzz96ats72z.png
permalink: /article-5578-1.html
pic: /data/attachment/album/201506/06/092123qqzl2qzz96ats72z.png.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: '我在Linux(基于CentOS 或者 Debian 的发行版)中该如何查看当前网络端口吞吐量的统计信息？在Linux操作系统中如何查看当前内核snmp计数器以及网络端口的统计信息？  你可以使用以下任何一个命令：
  nstat 命令 : 网络统计工具 键入以下命令: # nstat  输出样例: #kernel IpInReceives 133243 0.0 IpInDelivers
  133243 0.0 IpOutRequests 92904 0.0 IcmpOutErrors 97 0.0 IcmpOutTimeExcds 97 0.0
  IcmpMsgOutType3 97 0.0 TcpActiveOpens 538 0.0 TcpEstabResets 56 0.0 TcpInSegs 129837
  0.0 TcpOutSegs 89720 0.0 TcpRetransSegs 42 0.0 Tc'
tags:
- nstat
- ss
thumb: false
title: Linux网络统计工具/命令
titlepic: false
translator: ictlyh
updated: '2015-06-08 09:15:00'
---
我在Linux(基于CentOS 或者 Debian 的发行版)中该如何查看当前网络端口吞吐量的统计信息？在Linux操作系统中如何查看当前内核snmp计数器以及网络端口的统计信息？
![](/data/attachment/album/201506/06/092123qqzl2qzz96ats72z.png)
你可以使用以下任何一个命令：
### nstat 命令 : 网络统计工具
键入以下命令:
```
# nstat
```
输出样例:
```
#kernel
IpInReceives                    133243             0.0
IpInDelivers                    133243             0.0
IpOutRequests                   92904              0.0
IcmpOutErrors                   97                 0.0
IcmpOutTimeExcds                97                 0.0
IcmpMsgOutType3                 97                 0.0
TcpActiveOpens                  538                0.0
TcpEstabResets                  56                 0.0
TcpInSegs                       129837             0.0
TcpOutSegs                      89720              0.0
TcpRetransSegs                  42                 0.0
TcpOutRsts                      704                0.0
UdpInDatagrams                  3255               0.0
UdpNoPorts                      97                 0.0
UdpOutDatagrams                 3270               0.0
Ip6OutNoRoutes                  206                0.0
TcpExtTW                        141                0.0
TcpExtDelayedACKs               508                0.0
TcpExtDelayedACKLocked          1                  0.0
TcpExtDelayedACKLost            42                 0.0
TcpExtTCPHPHits                 117659             0.0
TcpExtTCPPureAcks               2158               0.0
TcpExtTCPHPAcks                 605                0.0
TcpExtTCPSackRecovery           1                  0.0
TcpExtTCPLossUndo               16                 0.0
TcpExtTCPSackFailures           4                  0.0
TcpExtTCPFastRetrans            1                  0.0
TcpExtTCPSlowStartRetrans       3                  0.0
TcpExtTCPTimeouts               33                 0.0
TcpExtTCPDSACKOldSent           40                 0.0
TcpExtTCPDSACKRecv              5                  0.0
TcpExtTCPAbortOnData            120                0.0
TcpExtTCPAbortOnClose           55                 0.0
TcpExtTCPSackShiftFallback      9                  0.0
IpExtInOctets                   180131682          0.0
IpExtOutOctets                  7289106            0.0
```
### ss 命令 : 查询套接字工具
要查看统计汇总, 输入:
```
# ss -s
```
输出样例:
```
Total: 786 (kernel 804)
TCP:   65 (estab 40, closed 7, orphaned 0, synrecv 0, timewait 6/0), ports 56
Transport Total     IP        IPv6
*     804       -         -
RAW   1         1         0
UDP   12        9         3
TCP   58        52        6
INET      71        62        9
FRAG      0         0         0
```
查看[ss 命令教程](/article-4372-1.html) 获取更多信息。
### netstat 命令 : 不错的显示套接字信息的旧工具
查看所有网络端口以及汇总信息表，输入：
```
# netstat -i
```
输出样例:
```
Kernel Interface table
Iface   MTU Met   RX-OK RX-ERR RX-DRP RX-OVR    TX-OK TX-ERR TX-DRP TX-OVR Flg
eth0       1500 0    941022      0      0 0        688165      0      0      0 BMRU
lo        16436 0      9304      0      0 0          9304      0      0      0 LRU
ppp0       1496 0      3784      0      0 0          4177      0      0      0 MOPRU
```
查看每个协议的汇总统计信息，输入：
```
# netstat -s
```
输出样例:
```
Ip:
    1092065 total packets received
    0 forwarded
    0 incoming packets discarded
    1091681 incoming packets delivered
    798913 requests sent out
    895 dropped because of missing route
    759 reassemblies required
    375 packets reassembled ok
Icmp:
    17 ICMP messages received
    0 input ICMP message failed.
    ICMP input histogram:
        timeout in transit: 8
        echo replies: 9
    1747 ICMP messages sent
    0 ICMP messages failed
    ICMP output histogram:
        destination unreachable: 1730
        echo request: 17
IcmpMsg:
        InType0: 9
        InType11: 8
        OutType3: 1730
        OutType8: 17
Tcp:
    4822 active connections openings
    1129 passive connection openings
    457 failed connection attempts
    165 connection resets received
    7 connections established
    1062519 segments received
    771394 segments send out
    7158 segments retransmited
    6 bad segments received.
    2578 resets sent
Udp:
    20846 packets received
    1730 packets to unknown port received.
    0 packet receive errors
    19242 packets sent
UdpLite:
TcpExt:
    71 invalid SYN cookies received
    8 resets received for embryonic SYN_RECV sockets
    142 packets pruned from receive queue because of socket buffer overrun
    2109 TCP sockets finished time wait in fast timer
    84 packets rejects in established connections because of timestamp
    19454 delayed acks sent
    6 delayed acks further delayed because of locked socket
    Quick ack mode was activated 7306 times
    1 packets directly queued to recvmsg prequeue.
    1 bytes directly received in process context from prequeue
    823921 packet headers predicted
    24412 acknowledgments not containing data payload received
    10150 predicted acknowledgments
    242 times recovered from packet loss by selective acknowledgements
    33 congestion windows recovered without slow start by DSACK
    335 congestion windows recovered without slow start after partial ack
    336 TCP data loss events
    TCPLostRetransmit: 35
    1 timeouts after reno fast retransmit
    156 timeouts after SACK recovery
    116 timeouts in loss state
    461 fast retransmits
    5 forward retransmits
    608 retransmits in slow start
    2073 other TCP timeouts