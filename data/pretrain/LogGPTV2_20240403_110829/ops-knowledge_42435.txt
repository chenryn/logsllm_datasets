User: I am working on Windows (sadface) with Python and virtualenv.
I would like to have setup and teardown scripts that go along with the virtualenv activation/deactivation. But I am not sure if these hooks have already been designated, and if so, where?
I guess I could hack the activate.bat, but then what if I use activate.py instead (does activate.py call activate.bat, or must I hack both files)? I can almost get away with environment variable PYTHONSTARTUP, but this needs to be redefined in each virtualenv. So unless virtualenv allows arbitrary assignment of env-vars, I am back to an activation/deactivation hook to set PYTHONSTARTUP (which really defeats the purpose, but now you see my catch-22).
EDIT: I plan to use my virtualenv to host interactive development sessions. I will be calling 'venv/bin/activate.bat' manually from the terminal. I do not want loose Batch/Powershell scripts laying around that I have to remember to call once when I activate, and once again when I deactive. I want to hook the execution in such a way, so that after I add my custom scripting hooks, 6 months later I don't have to remember how it works. I just execute activate.bat, and I am off to the races.
Assistant: Many problems lessened or solved with virtualenvwrapper-win. Well written framework, with simple entry points.I spend a lot of time fighting with windows, trying to get a functional python work environment. This is one of the those programs I really wish I knew about a long time ago.
Does not handle multiple python installations extraordinarily (or switching between them), but the  project owner also developed another supporting product, pywin, meant to augment that particular shortcoming.
The whole point is, that it makes Windows command-line development quite a bit smoother, even if its not all the automation I dream about.