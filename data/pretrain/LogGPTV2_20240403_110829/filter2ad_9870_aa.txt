# WMI攻与防
|
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## 讲在前面：
笔者在阅读了WMI的微软官方文档以及国内优秀前辈的介绍文章后，获益匪浅，WMI是一个较为老的知识点了，但是对于想要简单理解WMI的同学来说，对于一个新的知识点进行理解最好是能够有生动形象的例子进行抛砖引玉式的解读，将晦涩难懂的知识点吃透、理解后用简单的话语将其作用表达清楚，使其读者能够快速的理解并为读者接下来深入理解打好基础，以便在攻防中更好的利用WMI，所以此篇文章笔者使用通俗的话语将WMI表达清楚，在下文中对于基础薄弱的同学对于COM组件、Provider方法等专业名词可不做深度理解，只需要知道是WMI这个庞大工具的零件罢了，此文不足之处，望读者海涵。
## WMI是什么
### **简介：**
WMI是Windows在Powershell还未发布前，微软用来管理Windows系统的重要数据库工具，WMI本身的组织架构是一个数据库架构，WMI
服务使用 DCOM（TCP 端口135）或 WinRM 协议（SOAP–端口 5985，如下图
此图清晰明了的显示了WMI基础结构与 WMI 提供者和托管对象之间的关系，它还显示了 WMI 基础结构和 WMI
使用者之间的关系，同样我们也可以使用下图来理解。
**WMI Consumers(WMI使用者)**
它位于WMI构架的最顶层，是WMI技术使用的载体。
  * 如果我们是C++程序员，我们可以通过COM技术直接与下层通信。
  * 而脚本语言则要支持WMI Scripting API，间接与下层通信。
  * 对于.net平台语言，则要使用System.Management域相关功能与下层通信。
这些WMI的使用者，可以查询、枚举数据，也可以运行Provider的方法，还有WMI事件通知。当然这些数据操作都是要有相应的Provider来提供。
**WMI Infrastructure(WMI基础结构)**
WMI基础结构是Windows系统的系统组件。它包含两个模块：包含WMI Core(WMI核心)的WMI
Service(WMI服务)(Winmgmt)和WMI Repository(WMI存储库)。WMI存储库是通过WMI
Namespace(WMI命名空间)组织起来的。在系统启动时，WMI服务会创建诸如root\default、root\cimv2和root\subscription等WMI命名空间，同时会预安装一部分WMI类的定义信息到这些命名空间中。其他命名空间是在操作系统或者产品调用有关WMI提供者(WMI
Provider)时才被创建出来的。简而言之，WMI存储库是用于存储WMI静态数据的存储空间。WMI服务扮演着WMi提供者、管理应用和WMI存储库之间的协调者角色。一般来说，它是通过一个共享的服务进程Svchost来实施工作的。当第一个管理应用向WMI命名空间发起连接时，WMI服务将会启动。当管理应用不再调用WMI时，WMI服务将会关闭或者进入低内存状态。如我们上图所示，WMI服务和上层应用之间是通过COM接口来实现的。当一个应用通过接口向WMI发起请求时，WMI将判断该请求是请求静态数据还是动态数据。
  * 如果请求的是一个静态数据，WMI将从WMI存储库中查找数据并返回；
  * 如果请求的是一个动态数据，比如一个托管对象的当前内存情况，WMI服务将请求传递给已经在WMI服务中注册的相应的WMI提供者。WMI提供者将数据返回给WMI服务，WMI服务再将结果返回给请求的应用。
**Managed object and WMI providers(托管对象和WMI提供者)**
WMI提供者是一个监控一个或者多个托管对象的COM接口。一个托管对象是一个逻辑或者物理组件，比如硬盘驱动器、网络适配器、数据库系统、操作系统、进程或者服务。和驱动相似，WMI提供者通过托管对象提供的数据向WMI服务提供数据，同时将WMI服务的请求传递给托管对象。
###  WMI做什么
在Powershell未发布前用来管理Windows 2000、Windows95、Windows98、WindowsNT等操作系统
，当然如今的所有Windows系统依旧可以使用WMI来进行管理。
> **_注意：_**  
>
> 在上图中我我们可以发现也可以理解，不论Powershell、VBScript或者其他什么语言，其本质还是使用.NET来访问WMI的类库，都是因为WMI向外暴露的一组API，然后进行管理，Powershell的发布只是让我们管理的方式多了一种，本质上没有改变去使用WMI。
###  为什么使用WMI
**对于Windows运维管理人员**
对于Windows运维管理功能主要是：访问本地主机的一些信息和服务，可以管理远程计算机（当然你必须要拥有足够的权限，并且双方开启WMI服务，且135端口的防火墙策略是入站出站允许的），比如：重启，关机，关闭进程，创建进程等。可以自定义脚本来进行自动化运维，十分方便，例如可以使用wmic、wbemtest工具。WMIC命令解释。
**使用Powershell来操作WMI管理：**
Powershell查询命名空间
    Get-WmiObject -Class __namespace -Namespace root | select name
Powershell查询BIOS信息
    Get-WmiObject -Class  Win32_BIOS
Powershell查询计算机信息
    Get-WmiObject -Class  Win32_Operatingsystem
Powershell查询
    Get-WmiObject -Namespace root\SecurityCenter2 -Class AntiVirusProduct
    #注意：在旧版中查询杀软的WMI命名空间为SecurityCenter
> ***注意：** 这里Powershell操作WMI的对象使用的是内置模块Get-> WmiObject，以及查询的类为Win32_Service类，Win32_Service的其他类在官方文档中已经罗列详细：Win32类计算机硬件类、操作系统类等，但是要注意Win32_Service不是唯一可以操作WMI的类，以下类可以交替使用。*
  * WIn32_Service
  * Win32_BaseService
  * Win32_TerminalService
  * Win32_SystemDriver
**使用wmic来操作WMI管理：**
    #查询windows机器版本和服务位数和.net版本
    wmic os get caption
    wmic os get osarchitecture
    wmic OS get Caption,CSDVersion,OSArchitecture,Version
    #查询本机所有盘符
    fsutil fsinfo drives
    shell wmic logicaldisk list brief
    shell wmic logicaldisk get description,name,size,freespace /value
    #查看系统中⽹卡的IP地址和MAC地址
    wmic nicconfig get ipaddress,macaddress
    #⽤户列表
    wmic useraccount list brief
    #查看当前系统是否有屏保保护，延迟是多少
    wmic desktop get screensaversecure,screensavertimeout
    #域控机器
    wmic ntdomain list brief
    #查询杀软
    wmic /namespace:\\root\securitycenter2 path antispywareproduct GET displayName,productState, pathToSignedProductExe && wmic /namespace:\\root\securitycenter2 path antivirusproduct GET displayName,productState, pathToSignedProductExe
    #查询启动项
    wmic startup list brief |more
    #获取打补丁信息
    wmic qfe list
    #启动的程序
    wmic startup list brief
    #启动的程序
    wmic startup list full
**对于网络安全人员**
对于网络安全人员在攻防当中，利用WMI进行横向移动、权限维持、权限提升、包括免杀都可以进行利用，这个在接下来的三个不同的篇章中进行介绍。
## WMI利用（横向移动）
###  讲在前面：
上一篇文章我们简单的解释了什么是WMI，WMI做什么，为什么使用WMI。本文是笔者在阅读国内部分的解释WMI横向移动的文章后写下的一篇文章，希望帮助同学们在攻防中进入横向移动后根据实际场景利用WMI来解决问题。在横向移动中的固定过程中一定离不开“信息收集”，然后分析信息根据实际场景（工作组或者域）来进行横向移动，至于使用什么工具，为什么使用这个工具，笔者使用WMI的意见。所以本文分为三个段落，信息收集、横向移动、部分意见。  
信息收集
###  信息收集
> ***注意**
> ：信息收集需要根据实际场景来进行收集，而不是说笔者罗列的就是必须要做，WMI可以做的信息收集操作远不至笔者罗列的如此，希望同学能够举一反三，自由搭配，参考微软官方文档，根据实际情况获取所需。*
>
> ***注意**
> ：wmic命令需要本地管理员或域管理员才可以进行正常使用，普通权限用户若想要使用wmi，可以修改普通用户的ACL，不过修改用户的ACL也需要管理员权限，这里笔者单独罗列小结：普通用户使用wmic。以下命令均在2008R2、2012R2、2016上进行测试,部分命令在虚拟机中测试不行，例如查询杀软。*
**使用WMIC管理wmi**
    wmic logon list brief #登录⽤户
    wmic ntdomain list brief #域控机器
    wmic useraccount list brief #⽤户列表
    wmic share get name,path #查看系统共享
    wmic service list brief |more #服务列表
    wmic startup list full #识别开机启动的程序，包括路径
    wmic fsdir "c:\\test" call delete #删除C盘下的test目录
    wmic nteventlog get path,filename,writeable #查看系统中开启的⽇志
    wmic nicconfig get ipaddress,macaddress #查看系统中⽹卡的IP地址和MAC地址
    wmic qfe get description,installedOn #使⽤wmic识别安装到系统中的补丁情况
    wmic product get name,version #查看系统中安装的软件以及版本，2008R2上执行后无反应。
    wmic useraccount where "name='%UserName%'" call rename newUserName #更改当前用户名
    wmic useraccount where "name='Administrator'" call Rename admin #更改指定用户名
    wmic bios list full | findstr /i "vmware" #查看当前系统是否是VMWARE，可以按照实际情况进行筛选
    wmic desktop get screensaversecure,screensavertimeout #查看当前系统是否有屏保保护，延迟是多少
    wmic process where name="vmtoolsd.exe" get executablepath #获取指定进程可执行文件的路径
    wmic environment where "name='temp'" get UserName,VariableValue #获取temp环境变量
    ###查询当前主机的杀毒软件
    wmic process where "name like '%forti%'" get name
    wmic process where name="FortiTray.exe" call terminate
    wmic /namespace:\\root\securitycenter2 path antivirusproduct GET displayName,productState,pathToSignedProductExe
    wmic /namespace:\\root\securitycenter2 path antispywareproduct GET displayName,productState, pathToSignedProductExe & wmic /namespace:\\root\securitycenter2 path antivirusproduct GET displayName,productState, pathToSignedProductExe
    wmic /Node:localhost /Namespace:\\root\SecurityCenter2 Path AntiVirusProduct Get displayName /Format:List
    ###
    ###查询windows机器版本和服务位数和.net版本
    wmic os get caption
    wmic os get osarchitecture
    wmic OS get Caption,CSDVersion,OSArchitecture,Version
    wmic product where "Name like 'Microsoft .Net%'" get Name, Version
    ###
    ###查询本机所有盘符
    wmic logicaldisk list brief
    wmic logicaldisk get description,name,size,freespace /value
    ###
    ###卸载和重新安装程序
    wmic product where "name like '%Office%'" get name
    wmic product where name="Office" call uninstall
    ###
    ### 查看某个进程的详细信息 （路径，命令⾏参数等）
    wmic process where name="chrome.exe" list full
    wmic process where name="frp.exe" get executablepath,name,ProcessId   进程路径
    wmic process where caption="frp.exe" get caption,commandline /value
    ###
    ### 更改PATH环境变量值，新增c:\whoami
    wmic environment where "name='path' and username=''" set VariableValue="%path%;c:\whoami
    ###
    ### 查看某个进程的详细信息-PID
    wmic process list brief
    tasklist /SVC | findstr frp.exe
    wmic process where ProcessId=3604 get ParentProcessId,commandline,processid,executablepath,name,CreationClassName,CreationDate
    ###
    ### 终⽌⼀个进程
    wmic process where name ="xshell.exe" call terminate
    ntsd -c q -p 进程的PID
    taskkill -im pid
    ###
    ###获取电脑产品编号和型号信息
    wmic baseboard get Product,SerialNumber
    wmic bios get serialnumber
    ###
    ###安装软件
    wmic product get name,version
    wmic product list brief
**使用Powershell操作wmi**
    Get-WmiObject -Namespace ROOT\CIMV2 -Class Win32_Share  #共享
    Get-WmiObject -Namespace ROOT\CIMV2 -Class CIM_DataFile #⽂件/⽬录列表
    Get-WmiObject -Namespace ROOT\CIMV2 -Class Win32_Volume #磁盘卷列表
    Get-WmiObject -Namespace ROOT\CIMV2 -Class Win32_Process #当前进程
    Get-WmiObject -Namespace ROOT\CIMV2 -Class Win32_Service #列举服务
    Get-WmiObject -Namespace ROOT\CIMV2 -Class Win32_NtLogEvent #⽇志
    Get-WmiObject -Namespace ROOT\CIMV2 -Class Win32_LoggedOnUser #登陆账户
    Get-WmiObject -Namespace ROOT\CIMV2 -Class Win32_QuickFixEngineering #补丁
    Get-WmiObject -Namespace root\SecurityCenter2 -Class AntiVirusProduct #杀毒软件
    ###操作系统相关信息
    Get-WmiObject -Namespace ROOT\CIMV2 -Class Win32_OperatingSystem
    Get-WmiObject -Namespace ROOT\CIMV2 -Class Win32_ComputerSystem
    Get-WmiObject -Namespace ROOT\CIMV2 -Class Win32_BIOS
    ###
    ###注册表操作
    Get-WmiObject -Namespace ROOT\DEFAULT -Class StdRegProv
    Push-Location HKLM:SOFTWARE\Microsoft\Windows\CurrentVersion\Run
    Get-ItemProperty OptionalComponents
###  横向移动
> ***注意**
> ：分析完信息后，根据已掌握的信息开始横向移动，无论您作何考虑，都需要利用到工具来进行操作，工具可以帮助您无需理解或多或少的知识，您只需读懂README即可，来帮助您获取shell，上传，下载，创建服务等操作，笔者会在此段中罗列部分WMI的工具以及部分命令用作横向移动，并在第三段给出部分实际利用的意见。*
>