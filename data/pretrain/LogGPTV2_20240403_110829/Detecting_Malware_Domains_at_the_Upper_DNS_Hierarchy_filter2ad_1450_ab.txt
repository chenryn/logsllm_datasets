families.
A number of research efforts can be found in the
area of DNS blacklisting and reputation. Felegyhazi et
al. [11] recently proposed a DNS reputation blacklisting
methodology based on WHOIS information, while An-
tonakakis et al. [3] and Bilge et al. [4] propose dynamic
reputation systems based on passive RDNS monitoring.
Our system is complementary to the above mentioned
works. To the best of our knowledge, we are the ﬁrst
to analyze DNS query patterns at the AuthNS and TLD
server level for the purpose of detecting domain names
related to malware.
3 System Overview
Kopis monitors streams of DNS queries to and responses
from the upper DNS hierarchy, and detects malware do-
main names based on the observed query/response pat-
terns. An overview of Kopis is shown in Figure 3.
Our system divides the monitored data streams into
epochs {Ei}i=1..m (currently, an epoch is one day long).
At the end of each epoch Kopis summarizes the DNS
trafﬁc related to a given domain name d by computing
a number of statistical features, such as the diversity of
the IP addresses associated with the RDNS servers that
queried d, the relative volume of queries from the set of
querying RDNS servers, historic information related to
the IP space pointed to by d, etc. We defer a detailed de-
scription and motivations regarding the features we mea-
sure to Section 4. For now, it sufﬁces to consider the
feature computation module in Figure 3 as a function
F(d, Ei) = vi
d that maps the DNS trafﬁc in epoch Ei
related to d into a feature vector vi
d.
Kopis operates in two modes: a training mode and an
operation mode. In training mode, Kopis makes use of a
knowledge base KB, which consists of a set of known
malware-related and known legitimate domain names
(and related resolved IPs) for which the monitored Au-
thNS and TLD servers are authoritative or a point of del-
egation. Kopis’ learning module takes as input the set of
d}i=1..m,∀d ∈ KB, which
feature vectors Vtrain = {vi
summarizes the query/response behavior of each domain
in the knowledge base across m days. Each domain in
KB, and in turn each feature vector in Vtrain, is associ-
ated with a label, namely legitimate or malware. We can
therefore use supervised learning techniques [5] to learn
a statistical classiﬁcation model S of DNS query patterns
Figure 3: A high-level overview of Kopis.
related to legitimate and malware domains as seen from
the upper DNS hierarchy.
In operation mode, Kopis monitors the streams of
DNS trafﬁc and, at the end of each epoch Ej, maps each
domain d0 /∈ KB (i.e., all unknown domains) extracted
from the query/response streams into a feature vector vj
d0.
At this point, given a domain d0 the statistical classiﬁer
S (see Figure 3) assigns a label ld0,j and a conﬁdence
score c(ld0,j), which express whether the query/response
patterns observed for d0 during epoch Ej resemble ei-
ther known legitimate or malware behavior, and with
what probability. In order to make a ﬁnal decision about
d0, Kopis ﬁrst gathers a series of labels and conﬁdence
scores S(vj
d0) = {ld0,j, c(ld0,j)}, j = t, .., (t + m) for m
consecutive epochs, where t refers to a given starting
epoch Et. Finally, Kopis computes the average conﬁ-
dence scores CM = avgj{c(ld0,j)} for the malware la-
bels assigned to d0 by S across the m epochs, and an
alarm is raised if CM is greater than a threshold θ.
4 Statistical Features
In this section we describe the statistical features that
Kopis extracts from the monitored DNS trafﬁc. For each
DNS query qj regarding a domain name d and the re-
lated DNS response rj, we ﬁrst translate it into a tuple
Qj(d) = (Tj, Rj, d, IPsj), where Tj identiﬁes the epoch
in which the query/response was observed, Rj is the IP
address of the machine that initiated the query qj, d is
the queried domain, and IPsj is the set of resolved IP
addresses as reported in the response rj. It is worth not-
ing that since we are monitoring DNS queries and re-
sponses from the upper DNS hierarchy, in some cases the
response may be delegated to a name server which Kopis
does not currently monitor. This is particularly relevant
to our TLD-level data feed, since most TLD servers are
4
AuthNS 2AuthNS 1.ca TLDKopis Detection SystemFeature Computation DetectionReportsLearningModuleKnowledgeBaseStatisticalClassiﬁerdelegation-only1. In all those cases in which the response
does not carry the resolved IP addresses, we can derive
the IPs set by leveraging a passive DNS database [24], or
by directly querying the delegated name server.
Given a domain name d and a series of tuples
Qj(d), j = 1, .., m, measured during a certain epoch Et
(i.e., Tj = Et,∀j = 1, .., m), Kopis extracts the follow-
ing groups of statistical features:
Requester Diversity (RD) This group of features aims
to characterize if the machines (e.g., RDNS servers) that
query a given domain name are localized or are globally
distributed. In practice, given a domain d and a series
of tuples {Qj(d)}j=1..m, we ﬁrst map the series of re-
quester IP addresses {Rj}j=1..m to the BGP preﬁx, au-
tonomous system (AS) numbers, and country codes (CC)
the IP addresses belong to. Then, we compute the distri-
bution of occurrence frequencies of the obtained BGP
preﬁxes (sometimes referred to as classless inter-domain
routing (CIDR) preﬁxes), the AS numbers and CCs.
For each of these three distributions we compute the
mean (three features) , standard deviation (three features)
and variance (three features). Also, we consider the ab-
solute number of distinct IP addresses (i.e., distinct val-
ues of {Rj}j=1..m), the number of distinct BGP preﬁxes,
AS numbers and CCs (four features in total). Overall, we
obtain thirteen statistical features that summarize the di-
versity of the machines that query a particular domain
name, as seen from an AuthNS or TLD server.
The choice of the RD features is motivated by the ob-
servation that the distribution of the machines on the In-
ternet that query malicious domain names is on average
different from the distribution of IP addresses that query
legitimate domains. Semi-popular legitimate domain
names (i.e., small business or personal sites) will not
have a stable diverse population of recursive DNS servers
or stubs that will try to systematically contact them. On
the other hand popular legitimate domain names (i.e.,
zone cuts, authoritative name servers, news/blog forums,
etc.) will demonstrate a very consistent and very diverse
pool of IP addresses looking them up on a daily basis.
Malware-related domain names will have a diverse
pool of IP addresses looking them up in a systematic way
(i.e., multiple contiguous days). These IP addresses are
very likely to have a signiﬁcant network and geograph-
ical diversity simply because with the exception of tar-
geted attacks adversaries will not try to control or restrain
the geographical and network distribution of the ma-
chines getting compromised by drive-by sites and other
social networking techniques. Intuitively, the diversity of
1Delegation-only DNS servers are effectively limited to containing
NS resource records for sub-domains, but no actual data beyond its own
SOA and NS records.
Figure 4: Distribution of AS-diversity (a) and CC-
diversity (b) for malware-related and benign domains.
the infected population will be different over a given time
period, in comparison to that of benign domain names.
For example, Figure 4(a), which is derived from the
dataset described in Section 5.3, reports the cumulative
distribution functions (CDF) of the AS diversity of be-
nign and malware-related domain names. In Figure 4(b)
we can see the CDFs from the CC diversity for both
classes in our dataset. We note that in both cases the
benign domain names have a bimodal distribution. They
either have low or very high diversity. On the other hand,
the malware-related domain names cover a larger spec-
trum of diversities based on the success of the malware
distribution mechanisms they use.
Requester Proﬁle (RP) Not all query sources have
similar characteristics. Given a query tuple Qj(d) =
(Tj, Rj, d, IPs j), the requester’s IP address Rj may rep-
resent the RDNS server of a large ISP that queries do-
mains on behalf of millions of clients, the RDNS of a
smaller organization (e.g., an academic network), or a
single end-user machine. We would like to distinguish
between such cases, and assign a higher weight to RDNS
servers that serve a large client population because a
larger network would typically have a larger number of
infected machines. While it is not possible to precisely
estimate the population behind an RDNS server, because
of the effects of caching [15], we approximate the pop-
ulation measure as follows. Without loss of generality,
assume we monitor the DNS query/response stream for
a large AuthNS that has authority over a set of domains
D. Given an epoch Et, we consider all query tuples
{Qj(d)},∀j, d seen during Et. Let R be the set of all
distinct requester IP addresses in the query tuples. For
each IP address Rk ∈ R, we count the number ct,k of
different domain names in D queried by Rk during Et.
5
 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 200 400 600 800 1000 1200CDF(a) AS Diversity 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 20 40 60 80 100CDF(b) CC DiversityMaliciousBenignmax
ct,k
|R|
l=1 ct,l
We then deﬁne the weight associated to a requester’s IP
address Rk as wt,k =
. In practice, we assign
a higher weight to requesters that query a large number
of domains in D.
Now that we have deﬁned the weights wt,j, given a
domain name d0 we measure its RP features as follows:
• Let {Qi(d0)}i=1..h be the set of query tuples related
to d0 observed during an epoch Et. Also, let R(d0)
be the set of all distinct requester IP addresses in
{Qi(d0)}i=1..h. For each Rk ∈ R(d0) we com-
pute the count ct,k as previously described. Then,
given the set Ct(d0) = {ct,k}k, we compute the av-
erage, the biased and unbiased standard deviation2,
and the biased and unbiased variance of the values
in Ct(d0).
It is worth noting that the biased and
unbiased estimators of the standard deviation and
variance have different values when the cardinality
|Ct(d0)| is small.
• Similar to the above, for each Rk ∈ R(d0) we
compute the count ct,k. Afterwards, we multiply
each count by the weight wt−n,k to obtain the set
W Ct(d0) = {ct,k ∗ wt−n,k}k of weighted counts.
It is worth noting that the weights wt−n,k are com-
puted based on historical data about the resolver’s
IP address collected n epochs (seven days in our
experiments) before the epoch Et. We then com-
pute the average, the biased and unbiased standard
deviation, and the biased and unbiased variance of
the values in W Ct(d0).
The RD and RP features described above aim to cap-
ture the fact that malware-related domains tend to be
queried from a diverse set of requesters with a higher
weight more often than legitimate domains. An explana-
tion for this expected difference in the requester char-
acteristics is that malware-related domains tend to be
queried from a large number of ISP networks, which
usually are assigned a high weight. The reason is that
ISP networks often offer little or no protection against
malware-related software propagation. In addition, the
population of machines in ISP networks is usually very
large, and therefore the probability that a machine in the
ISP network becomes infected by malware is very high.
On the other hand, legitimate domains are often queried
from both ISP networks and smaller organization net-
works (having a smaller weight), such as enterprise net-
works, which are usually better protected against mal-
ware and tend to query fewer malware-related domains.
able X is deﬁned as ˆσ =
2The biased estimator for the standard deviation of a random vari-
N ( ¯Xi − µ)2, while the unbiased
N−1 ( ¯Xi − µ)2
estimator is deﬁned as ˜σ =
1
(cid:113)(cid:80)N
(cid:113)(cid:80)N
i=1
1
i=1
As shown in Section 5 both set of features can success-
fully model benign and malware-related domain names.
Resolved-IPs Reputation (IPR) This group of fea-
tures aims to describe whether, and to what extent, the
IP address space pointed to by a given domain has been
historically linked with known malicious activities, or
known legitimate services. We compute a total of nine
features as follows. Given a domain name d and the set
of query tuples {Qj(d)}j=1..h obtained during an epoch
Et, we ﬁrst consider the overall set of resolved IP ad-
dresses IPs(d, t) = ∪h
j=1IPsj (where IPsj is an element
of the tuple Qj(d), as explained above). Let BGP(d, t)
and AS(d, t) be the set of distinct BGP preﬁxes and au-
tonomous system numbers to which the IP addresses in
IPs(d, t) belong, respectively. We compute the follow-
ing groups of features.
• Malware Evidence: includes the average number of
known malware-related domain names that in the
past month (with respect to the epoch Et) have
pointed to each of the IP addresses in IPs(d, t).
Similarly, we compute the average number of
known malware-related domains that have pointed
to each of the BGP preﬁxes and AS numbers in
BGP(d, t) and AS(d, t).
• SBL Evidence: much like the malware evidence fea-
tures, we compute the average number of domains
from the Spamhaus Block List [22] that, in the past
have pointed to each of the IP addresses, BGP pre-
ﬁxes, and AS numbers in IPs(d, t), BGP(d, t),
and AS(d, t), respectively.
• Whitelist Evidence: We compute the number of
IP addresses in IPs(d, t) that match IP addresses
pointed to by domains in the DNSWL [9] 3 or
the top 30 domains according to Alexa [2]. Sim-
ilarly we compute the number of BGP preﬁxes in
BGP(d, t) and AS numbers in AS(d, t) that in-
clude IP addresses pointed by domains in DNSWL
or the top 30 Alexa domains.
The IPR features try to capture whether a certain do-
main d is related to domain names and IP addresses that
have been historically recognized as either malicious or
legitimate domains. The intuition is that if d points into
IP address space that is known to host lots of malicious
activities, it is more likely that d itself is also involved in
malicious activities. On the other hand, if d points into a
well known, professionally run legitimate network, it is
somewhat less likely that d is actually involved in mali-