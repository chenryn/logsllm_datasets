    1 版本:rbac.authorization.k8s.io/v1
    2 子代:群集角色
    3 元数据:
    4 名称:超级管理员
    5 条规则:
    6 - apiGroups: ["*" ]
    7 资源:["*"]
    8 个动词:["*"]
**集群角色**的这个实例给出了非常广泛的权限，正如您在*第 6-8 行*中看到的。这种配置赋予任何被分配了这个角色的人对 Kubernetes 中所有 API 上的所有资源的所有权限。
这些代码示例中的部署都不包含资源请求和限制。如*第 3 章*、*在 AKS* 上的应用部署所述，建议配置资源请求和限制，因为这些可以防止工作负载消耗过多的资源。
最后，您还将在公共服务上部署 Kubernetes 仪表板。这也是非常不鼓励的，因为这可能会无意中让攻击者访问您的集群。您将看到 Azure Defender 如何检测到这一点。
让我们开始部署这些文件。
1.  在 Azure 门户中打开 Cloud Shell，导航到本章的代码示例。
2.  Once there, execute the following commands to create the offending workloads.
    忽必烈 create-f crypto-miner YAML
    kubectl create -f 升级. yaml
    忽必烈 create-f host volume . YAML
    kubi KL create-f role . YAML 角色
    这将创建类似于图 13.8 的输出:
    ![Creating offending workloads to trigger recommendations and threat alerts in Azure Security Center](img/B17338_13_08.jpg)
    图 13.8:创建违规的工作负载
3.  Now, deploy the Kubernetes dashboard using the following command:
    忽必烈申请-f[**https://raw . githubuser content . com/kubrines/dashboard/v 2 . 0 . 0/AIO/deploy/recommended . YAML**](13.html)
    这将创建类似于图 13.9 的输出:
    ![Deploying the Kubernetes dashboard](img/B17338_13_09.jpg)
    图 13.9:创建 Kubernetes 仪表板
4.  By default, the Kubernetes dashboard is not exposed through a load balancer. This is also the recommended configuration, because the dashboard gives broad access to your cluster. In this chapter, however, you will create this discouraged configuration to trigger a security alert in Azure Defender. To add a load balancer to the Kubernetes dashboard, use the following command:
    立方修补服务\
    立方结构仪表板-n 立方结构仪表板\
    -p“{ spec }”:{“type”:“Load 平衡器”}}
    这将修补该服务，并将其转换为**负载平衡器**类型的服务。验证是否已成功修补，并使用以下命令获取服务的公共 IP 地址:
    kubicl get service-n kubi tes 仪表板
    这将产生类似于图 13.10 的输出:
    ![Adding a load balancer to the Kubernetes-dashboard service and fetching its public IP](img/B17338_13_10.jpg)
    图 13.10:获取 kubernetes 仪表板服务的公共 IP
5.  通过浏览 **https:// ** 验证您是否可以访问该服务。根据您的浏览器配置，您可能会得到一个证书错误，您可以通过选择继续到(不安全)来绕过该错误，如图*图 13.11* :
![Navigating to the Kubernetes dashboard service and verifying that the connection isn’t secure](img/B17338_13_11.jpg)
图 13.11:关于 Kubernetes 仪表板服务上证书的安全警告
一旦你已经继续到仪表板，你应该得到一个登录屏幕，如图*图 13.12* :
![The Kubernetes dashboard login](img/B17338_13_12.jpg)
图 13.12:暴露的 Kubernetes 仪表板
您不会在此处登录仪表板，但如果您希望探索其功能，请参考位于[https://Kubernetes . io/docs/tasks/access-application-cluster/web-ui-dashboard/](13.html)的 Kubernetes 文档。
现在，您的集群上运行着五个有问题的工作负载。其中一些将导致 Azure 安全中心出现配置警告；有些甚至会触发安全警报。您将在本章接下来的两节中探讨这些问题。
## 使用 Azure 安全评分分析配置
在前一节中，您创建了几个故意配置错误的工作负载。在本节中，您将查看 Azure 安全中心中与这些工作负载相关的建议。
#### 注意
创建工作负载后，可能需要 30 分钟才能显示建议和警报。
1.  After you have created the offending workloads, you will get security recommendations in Azure Security Center. To start, click on Secure Score in the left-hand navigation within Azure Security Center. This will show you a pane similar to *Figure 13.13*:
    ![Checking your Secure Score in Azure Security Center after creating offending workloads](img/B17338_13_13.jpg)
    图 13.13:Azure 安全中心的安全评分
    您在这里看到的是您的环境安全状况的摘要。在*图 13.13* 所示的示例中，您可以看到整体安全得分为 32%。如果您管理多个 Azure 订阅，该视图可以让您快速鸟瞰环境的安全配置。
2.  Let's drill down into the configuration of the Kubernetes cluster by clicking on the Azure subscription 1 subscription at the bottom of *Figure 13.13*. This will bring you to a pane similar to *Figure 13.14*:
    ![Secure Score and security recommendations for your Azure subscription](img/B17338_13_14.jpg)
    图 13.14:订阅的安全评分详细信息
    此视图包含有关此订阅的安全分数的更多详细信息。它再次向您显示安全分数，以及推荐状态和资源运行状况。屏幕底部包含有关具体建议的更多详细信息。
3.  Tune this screen to get more insight into the Kubernetes recommendations. To do this, disable the Group by controls option on the right-hand side of the screen, and set the Resource type filter to managed cluster, as shown in *Figure 13.15*:
    ![Azure provides security recommendations and shows the health of the resource for your Kubernetes clusters](img/B17338_13_15.jpg)
    图 13.15:Azure 安全中心中的 Kubernetes 建议
    您现在看到的是 Azure 安全中心推荐的 Kubernetes 安全建议列表。该列表过于详尽，无法在本章中完全涵盖，但如果您想了解每项建议的更多详细信息，请参考 AKS 文档以获得更详细的描述:[https://docs.microsoft.com/azure/aks/policy-reference](13.html)。
4.  Let's, however, explore a number of the recommendations that were caused by the offending workloads you created earlier. Start by clicking on the recommendation called Container with privilege escalation should be avoided. This will bring you to a view similar to *Figure 13.16*:
    ![Exploring the Container with privilege escalation should be avoided recommendation](img/B17338_13_16.jpg)
    图 13.16:应该避免推荐带有权限升级的容器的细节
    如您所见，此建议包含对建议本身的描述，以及遵循此建议的许多补救步骤。它还向您显示了受影响的资源，在本例中是一个 AKS 集群。如果你点击集群，你甚至会得到更多关于违规工作负载的细节，如图*图 13.17* :
    ![Clicking on the cluster on the recommendation page gives you further details about the affected components](img/B17338_13_17.jpg)
    图 13.17:受权限提升建议影响的 Pods
    在这种情况下，您创建的每个 pods 都触发了此建议，而不仅仅是允许权限升级的 pods。这向您表明，默认情况下，Kubernetes 允许这种权限升级，您应该在所有部署中实现这种保护。这向您展示了安全监控解决方案(如 Azure 安全中心)的优势，可以监控默认配置的潜在副作用。
5.  Let's apply the suggested remediation to this issue. To solve the privilege escalation, you will need to configure the security context of the container to no longer allow privilege escalation. This can be done by updating each deployment using the following commands:
    kubectl 补丁部署 crypto-miner -p '
    {
    " spec ":{ 0
    "模板":{ 0
    " spec ":{ 0
    “容器”:[
    {
    “名称”:“采矿”，
    " security context ":{ 0
    “允许权限升级”:假
    }
    }
    ]
    }
    }
    }
    }
    '
    kubectl 补丁部署升级-p '
    {
    " spec ":{ 0
    "模板":{ 0
    " spec ":{ 0
    “容器”:[
    {
    “名称”:“nginx-升级”，
    " security context ":{ 0
    “允许权限升级”:假
    }
    }
    ]
    }
    }
    }
    }
    '
    kubectl 补丁部署主机-卷-p '
    {
    " spec ":{ 0
    "模板":{ 0
    " spec ":{ 0
    “容器”:[
    {
    “名称”:“nginx-主机-卷”，
    " security context ":{ 0
    “允许权限升级”:假
    }
    }
    ]
    }
    }