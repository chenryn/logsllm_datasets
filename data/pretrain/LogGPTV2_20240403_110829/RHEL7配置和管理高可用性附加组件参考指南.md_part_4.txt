-   `resource`{.literal}
    创建和管理群集资源。有关 [**pcs cluster**]{.command}
    命令的详情请参考 [第 6 章
    *配置集群资源*](#ch-clustresources-HAAR.html "第 6 章 配置集群资源"){.xref}、[第 8 章
    *管理集群资源*](#ch-manageresource-HAAR.html "第 8 章 管理集群资源"){.xref}
    和 [第 9 章
    *高级配置*](#ch-advancedresource-HAAR.html "第 9 章 高级配置"){.xref}。
-   `stonith`{.literal}
    配置隔离设备以用于 Pacemaker。有关 [**pcs stonith**]{.command}
    命令的详情请参考 [第 5 章 *隔离：配置
    STONITH*](#ch-fencing-HAAR.html "第 5 章 隔离：配置 STONITH"){.xref}。
-   `constraint`{.literal}
    管理资源限制。有关 [**pcs constraint**]{.command} 命令的详情请参考
    [第 7 章
    *资源约束*](#ch-resourceconstraints-HAAR.html "第 7 章 资源约束"){.xref}。
-   `属性`{.literal}
    设置 Pacemaker 属性。有关使用 [**pcs property**]{.command}
    命令设置属性的详情请参考 [第 12 章 *Pacemaker
    集群属性*](#ch-clusteropts-HAAR.html "第 12 章 Pacemaker 集群属性"){.xref}。
-   `status`{.literal}
    查看当前集群和资源状态.有关 [**pcs status**]{.command}
    命令的详情请参考
    ["显示状态"一节](#ch-pcscommand-HAAR.html#s1-pcsstatus-HAAR "显示状态"){.xref}。
-   `config`{.literal}
    以用户可读形式显示完整的集群配置。有关 [**pcs config**]{.command}
    命令的详情请参考
    ["显示完全集群配置"一节](#ch-pcscommand-HAAR.html#s1-pcsfullconfig-HAAR "显示完全集群配置"){.xref}。
:::
:::
::: section
::: titlepage
# []{#ch-pcscommand-HAAR.html#s1-pcshelp-HAAR}pcs Usage Help 显示 {.title}
:::
您可以使用 [**pcs**]{.command} 的 `-h`{.literal} 选项显示
[**pcs**]{.command} 命令的参数以及这些参数的说明。例如，以下命令显示
[**pcs resource 命令的参数**]{.command}。输出中仅显示一部分。
``` screen
# pcs resource -h
Usage: pcs resource [commands]...
Manage pacemaker resources
Commands:
    show [resource id] [--all]
        Show all currently configured resources or if a resource is specified
        show the options for the configured resource.  If --all is specified
        resource options will be displayed
    start 
        Start resource specified by resource_id
...
```
:::
::: section
::: titlepage
# []{#ch-pcscommand-HAAR.html#s1-pcsxmlview-HAAR}查看原始集群配置 {.title}
:::
虽然您不应该直接编辑集群配置文件，但您可以使用 [**pcs cluster
cib**]{.command} 命令查看原始集群配置。
您可以使用 [**pcs cluster cib *`filename`***]{.command}
命令将原始集群配置保存到指定的文件中，如
["将配置更改保存到文件"一节](#ch-pcscommand-HAAR.html#s1-pcsfilesave-HAAR "将配置更改保存到文件"){.xref}
所述。
:::
::: section
::: titlepage
# []{#ch-pcscommand-HAAR.html#s1-pcsfilesave-HAAR}将配置更改保存到文件 {.title}
:::
使用 [**pcs**]{.command} 命令时，您可以使用 `-f`{.literal}
选项将配置更改保存到文件，而不影响活动的 CIB。
如果您之前已经配置了集群，且已经有一个活跃的 CIB，则使用以下命令保存原始
xml 文件。
``` screen
pcs cluster cib filename
```
例如，以下命令可将 CIB 中的原始 xml 保存到名为 `testfile`{.literal}
的文件中：
``` screen
# pcs cluster cib testfile
```
以下命令在 `testfile`{.filename}
文件中创建一个资源，但不将该资源添加到当前正在运行的集群配置中。
``` screen
# pcs -f testfile resource create VirtualIP ocf:heartbeat:IPaddr2 ip=192.168.0.120 cidr_netmask=24 op monitor interval=30s
```
您可以使用以下命令将 `testfile`{.filename} 的当前内容推送到 CIB 中。
``` screen
# pcs cluster cib-push testfile
```
:::
::: section
::: titlepage
# []{#ch-pcscommand-HAAR.html#s1-pcsstatus-HAAR}显示状态 {.title}
:::
您可以使用以下命令显示集群和集群资源的状态。
``` screen
pcs status commands
```
如果没有指定 command
*`参数，这个命令会显示有关集群和资源的所有信息`*。您可以通过指定
`资源`{.literal}、`组`{.literal}、集群、`节点`{.literal} 或
`pcsd`{.literal} 只显示特定`集群`{.literal} 组件的状态。
:::
::: section
::: titlepage
# []{#ch-pcscommand-HAAR.html#s1-pcsfullconfig-HAAR}显示完全集群配置 {.title}
:::
使用以下命令显示完整的集群的当前配置。
``` screen
pcs config
```
:::
::: section
::: titlepage
# []{#ch-pcscommand-HAAR.html#s1-pcsversion-HAAR}显示当前 pcs 版本 {.title}
:::
以下命令显示正在运行的 [**pcs**]{.command} 的当前版本。
``` screen
pcs --version
```
:::
::: section
::: titlepage
# []{#ch-pcscommand-HAAR.html#s1-pcsbackuprestore-HAAR}备份和恢复集群配置 {.title}
:::
自红帽企业 Linux 7.1 发行版本起，您可以使用以下命令在 tarball
中备份集群配置：如果没有指定文件名，会使用标准输出。
``` screen
pcs config backup filename
```
使用以下命令从备份中恢复所有节点上的集群配置文件。如果没有指定文件名，将使用标准输入。指定
`--local`{.option} 选项仅恢复当前节点上的文件。
``` screen
pcs config restore [--local] [filename]
```
:::
:::
[]{#ch-clusteradmin-HAAR.html}
::: chapter
::: titlepage
# []{#ch-clusteradmin-HAAR.html#ch-clusteradmin-HAAR}第 4 章 集群创建和管理 {.title}
:::
本章论述了如何使用 Pacemaker
执行基本集群管理，包括创建集群、管理集群组件和显示集群状态。
::: section
::: titlepage
# []{#ch-clusteradmin-HAAR.html#s1-clustercreate-HAAR}创建集群 {.title}
:::
[]{#ch-clusteradmin-HAAR.html#idm140680354720848 .indexterm}
要创建正在运行的集群，请执行以下步骤：
::: orderedlist
1.  在群集的每个节点上启动 [**pcsd**]{.command}。
2.  验证组成集群的节点。
3.  配置和同步群集节点。
4.  启动群集节点上的群集服务。
:::
以下小节介绍了用于执行这些步骤的命令。
::: section
::: titlepage
## []{#ch-clusteradmin-HAAR.html#s2-pcsdstart-HAAR}启动 pcsd 守护进程 {.title}
:::
以下命令启动 `pcsd`{.literal} 服务并在系统启动时启用
`pcsd`{.literal}。这些命令应在群集中的每个节点上运行。
``` screen
# systemctl start pcsd.service
# systemctl enable pcsd.service
```
:::
::: section
::: titlepage
## []{#ch-clusteradmin-HAAR.html#s2-authenticatenodes-HAAR}对集群节点进行身份验证 {.title}
:::
以下命令 `向`{.literal} 群集节点上的 `pcs`{.literal} 守护进程验证 pcs。
::: itemizedlist
-   `pcs`{.literal} 管理员的用户名必须是每个节点上的
    `hacluster`{.literal}。建议每个节点上的用户 `hacluster`{.literal}
    的密码都相同。
-   如果没有指定 `用户名`{.literal} 或
    `密码`{.literal}，系统在执行该命令时会提示您为每个节点输入这些参数。
-   如果没有指定任何节点，这个命令将在使用 `pcs`{.literal} [**cluster
    setup 命令指定的节点上验证 pcs**]{.command}
    （如果您之前已执行过该命令）。
:::
``` screen
pcs cluster auth [node] [...] [-u username] [-p password]
```
例如，以下命令可针对由 `z1.example.com 和 z2.`{.literal} example.com
群集中的两个节点验证 `z1.example.com`{.literal} 上的用户
`hacluster`{.literal} ： ``{.literal}此命令会在集群节点上提示输入用户
`hacluster`{.literal} 的密码。
``` screen
root@z1 ~]# pcs cluster auth z1.example.com z2.example.com
Username: hacluster
Password:
z1.example.com: Authorized
z2.example.com: Authorized
```
授权令牌存储在文件 `~/.pcs/tokens`{.filename} （或
`/var/lib/pcsd/tokens）中`{.filename}。
:::
::: section
::: titlepage
## []{#ch-clusteradmin-HAAR.html#s2-configurestartnodes-HAAR}配置和启动集群节点 {.title}
:::
以下命令配置集群配置文件，并将配置同步到指定的节点。
::: itemizedlist
-   如果指定了 `--start`{.literal}
    选项，命令也会在指定节点上启动集群服务。如果需要，您还可以使用单独的
    [**pcs cluster start 命令启动集群服务**]{.command}。
    当您使用 [**pcs cluster setup \--start**]{.command}
    命令创建群集时，或使用 [**pcs cluster start
    命令启动群集服务时**]{.command}，在群集启动并运行前可能会稍有延迟。在对群集及其配置执行任何后续操作之前，建议您使用
    [**pcs cluster status**]{.command} 命令确保群集已启动并运行。
-   如果指定了 `--local`{.literal} 选项，命令将仅在本地节点上执行更改。