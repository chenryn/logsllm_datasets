# 如何防御Mimikatz

##### 译文声明
本文为翻译文章，原文来源：medium.com
原文地址：[链接]
译文仅供参考，具体内容及含义以原文为准。

## 一、前言
[Mimikatz](https://github.com/gentilkiwi/mimikatz) 是一款可以从内存中提取明文密码的工具，在内部渗透测试和红队行动中广泛使用。尽管微软发布了[安全补丁](https://docs.microsoft.com/en-us/security-updates/SecurityAdvisories/2016/2871997)，该补丁也适用于较老的操作系统（如 Windows Server 2008），但 Mimikatz 仍然能够在许多情况下实现横向移动和域提升。需要注意的是，Mimikatz 只有在特权用户（如本地管理员）上下文中运行时才能导出凭据和密码。

## 二、Debug 权限
根据微软的说法，调试权限用于确定哪些用户可以将调试器附加到任意进程或内核上。默认情况下，本地管理员组成员具有此权限。然而，除非本地管理员是系统程序员，否则他们通常不需要这种权限。

**图1. Debug programs 权限，赋予本地管理员组成员**

默认安装的 Windows Server 2016 并未设置此组策略，这意味着只有本地管理员组成员才具有此权限。

**图2. 组策略中的 Debug programs 权限**

攻击者可以在 Mimikatz 中执行以下命令来确认是否具有该权限：
```plaintext
privilege::debug
```

**图3. 检查是否具备调试权限**

Mimikatz 需要此权限与 LSASS 等进程交互。因此，我们需要限制此权限，只授予真正需要它的用户，并从本地管理员组中删除该权限。可以通过设置组策略来禁用 `SeDebugPrivilege`：
- 打开“组策略管理编辑器”
- 导航至“Windows 设置” -> “安全设置” -> “本地策略” -> “用户权限分配” -> “调试程序”
- 定义这些策略设置，删除包含的用户或组成员

**图4. 禁用 SeDebugPrivilege**

当全域部署此策略后，即使攻击者成功提升为本地管理员，也无法使用此权限。Mimikatz 将返回如下错误消息：

**图5. Mimikatz 返回调试权限被禁用的消息**

## 三、WDigest
Windows 从 XP 版本开始引入 [WDigest 协议](https://technet.microsoft.com/pt-pt/library/cc778868%28v=ws.10%29.aspx?f=255&MSPPError=-2147217396)，目的是与 HTTP 协议配合进行身份验证。微软在多个版本的 Windows 中默认启用此协议（从 Windows XP 到 Windows 8.0，以及从 Windows Server 2003 到 Server 2012），这意味着明文密码会存储在 LSASS（本地安全授权子系统服务）中。Mimikatz 可以与 LSASS 交互，使攻击者通过以下命令获取这些凭据：
```plaintext
sekurlsa::wdigest
```

**图6. Mimikatz 中的 WDigest 命令**

微软在 Windows 8.1、Windows 10、Windows Server 2012 R2 和 Server 2016 中默认禁用了此协议。如果用户单位使用的是类似 Windows 7 和 Windows Server 2008 的旧版本系统，微软提供了一个 [补丁](https://support.microsoft.com/en-us/kb/2871997)（KB2871997），允许管理员启用或禁用 WDigest 协议。打上该补丁后，我们可以通过注册表来确认 WDigest 是否处于禁用状态：
```plaintext
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest
```

**图7. WDigest 处于禁用状态**

我们需要将 `Negotiate` 和 `UseLogonCredential` 键值设为 0 以禁用该协议。需要注意的是，在新版操作系统（如 Windows Server 2016、Windows 10 等）中，注册表中并没有 `UseLogonCredential` 这个键值。根据 Dave Kennedy 的 [文章](https://www.trustedsec.com/2015/04/dumping-wdigest-creds-with-meterpreter-mimikatzkiwi-in-windows-8-1/)，具有本地管理员权限的攻击者可以修改注册表，启用 WDigest 并抓取这些凭据。因此，如果禁用该协议后这些键值被设置为 1，则表示系统已受到攻击。我们应该持续监控对注册表的修改，以便在早期捕获攻击行为。

如果该协议被禁用，攻击者尝试从 WDigest 获取明文密码时会看到如下错误信息：

**图8. 禁用 WDigest 后的 Mimikatz 信息**

## 四、保护 LSA
LSASS（本地安全授权服务器服务）在本地和远程登录过程中验证用户身份并部署本地安全策略。微软在 Windows 8.1 及更高版本的系统中为 LSA 提供了增强防护机制，防止不可信的进程读取其内存或注入代码。攻击者可以执行以下 Mimikatz 命令与 LSA 交互，获取存储在 LSA 内存中的明文密码：
```plaintext
sekurlsa::logonPasswords
```

**图9. Mimikatz 与 LSA 交互**

建议在 Windows Server 2012 R2 和 Windows 8.1 之前的系统中启用 LSA 保护机制，以防止 Mimikatz 读取 LSASS 进程的特定内存空间。我们可以在注册表中创建 `RunAsPPL` 键值，并将其设置为 1 以启动保护：
```plaintext
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\LSA
```

**图10. 启用 LSA 保护**

启用 LSA 保护后，攻击者会看到如下错误：

**图11. 启用 LSA 保护后的 Mimikatz**

## 五、受限管理员模式
微软自 Windows Server 2012 R2 开始引入了一个新功能，可以避免 LSASS 在 RDP 会话中以明文形式存储本地管理员的凭据。虽然 LSA 防护机制能够防止 Mimikatz 获取相关凭据，官方还是推荐使用这个新增功能，以防止攻击者通过禁用 LSA 防护来获取密码。

在注册表中，创建一个 `DisableRestrictedAdmin` 键值并设置为 0，就可以在受限管理员模式下接收 RDP 会话。此外，我们也应该创建一个 `DisableRestrictedAdminOutboundCreds` 键值并将其设置为 1，以防止已使用受限管理员模式的 RDP 会话执行自动化网络身份认证操作。如果不设置该键值，则会启用管理员出站凭据。
```plaintext
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa
```

**图12. 启用受限管理员模式**

我们需要在域中强制启用“限制对远程服务器的凭据委派”策略，以确保所有出站 RDP 会话都使用受限管理员模式，防止泄露凭据。

**图13. 组策略限制凭据委派**

使用“要求受限管理员”设置来启用该策略。

**图14. 限制凭据委派，启用受限管理员**

一旦启用该策略，管理员可以通过“运行”对话框，使用以下参数以受限管理员方式 RDP 远程登录到工作站和服务器上。

**图15. 以受限管理员方式运行 mstsc**

也可以通过命令行来执行。

**图16. 命令行下以受限管理员方式运行 mstsc**

如果系统版本早于 Windows 2012 R2 或 Windows 8.1，可以打上微软的 KB2871997 补丁。

## 六、凭据缓存
如果域控制器不可用，微软会检查最近缓存的密码哈希值以验证用户身份。这些密码哈希存放于以下注册表路径中：
```plaintext
HKEY_LOCAL_MACHINE\SECURITY\Cache
```

可以运行以下命令利用 Mimikatz 获取这些哈希：
```plaintext
lsadump::cache
```

默认情况下，Windows 会缓存最近 10 个密码哈希。建议修改以下安全设置，将本地密码缓存数设置为 0：
- 计算机配置 -> Windows 设置 -> 本地策略 -> 安全选项 -> 交互式登录：缓存的先前登录次数 -> 0

**图17. 交互式登录不缓存哈希**

如果攻击者尝试使用 Mimikatz 获取这些哈希，则会看到如下错误：

**图18. 禁用凭据缓存时 Mimikatz 的错误信息**

## 七、受保护的用户组
微软在 Windows Server 2012 及更高版本系统中引入了名为“Protected Users”的安全组。这个组使得域管理员能够保护该组内的特权用户（如本地管理员）及其他用户仅通过 Kerberos 进行域认证，从而防止 LSASS 中的 NTLM 密码哈希或明文凭据被攻击者窃取。

我们可以在活动目录用户和计算机中找到“Protected Users”安全组。

**图19. 活动目录中受保护用户安全组**

位于该安全组内的账户会自动部署 Kerberos 认证策略，默认配置如下：

**图20. Kerberos 默认策略**

我们也可以在 PowerShell 中执行以下命令将其他用户添加到“Protected Users”组内：
```powershell
Add-ADGroupMember –Identity 'Protected Users' –Members Jane
```

**图21. 通过 PowerShell 添加账户至受保护用户组中**

像 Windows Server 2008 之类的老版本系统也可以打上 KB2871997 补丁，拥有这个安全组。

## 八、总结
我们可以使用有效的端点防护解决方案，同时配合应用白名单机制（如 AppLocker）来阻止可执行文件、PowerShell 和命令行被恶意执行，从而增加一层新的安全防护。即使攻击者成功绕过这些控制机制，他们也需要修改注册表（蓝队应监控某些注册表键值）才能完全发挥 Mimikatz 的功能以窃取凭据。这一过程会产生大量事件，有助于检测攻击行为。