在开发一个Web漏洞扫描器的过程中，我打算使用FOFA平台寻找一些网站进行测试。无意中发现了一个标题为“xx系统”的站点，经过确认后发现这正是我熟悉的某个CMS（具体名称记不清了）。于是决定利用该网站存在的已知CMS漏洞来测试我的扫描工具。

测试过程中，虽然没有直接检测到预期中的安全漏洞，但意外地发现了该站点的源代码备份文件。这些文件被存放在服务器的主要目录下，并且以域名加上.tar.gz的形式命名。进一步审查源码时，我发现这是一个基于现有框架进行了二次开发后的版本，其中大部分公开的安全问题已经被修复；尽管如此，我还是设法获取到了数据库的登录凭证，不过其访问权限受到了限制。

由于个人技术水平有限，在尝试对代码进行深入分析未果之后，我转而寻求更高级别黑客的帮助。然而遗憾的是，身边并没有这样的人才可以求助。无奈之下，只好自己继续探索其他可能存在的突破口——比如检查与目标站位于同一服务器上的相邻站点（即所谓的“旁站”）。

通过FOFA查询，我发现该服务器上托管着众多不同域名下的网站。其中一个似乎是深圳地区一家知名月子中心的官方网站。对该网站进行了初步扫描后得知其使用的是DedeCms 5.7版本。尝试查找后台管理界面以及备份文件均未成功，但我记得DedeCms存在一个可用来泄露绝对路径的漏洞。利用此方法果然找到了修改过域名后的原备份文件路径。

从新获取到的源码中可以看出，某些关键目录名被设置得非常复杂且难以猜测，显然这是为了增加攻击难度而特意为之。此外，我还注意到了SQL数据库备份的存在，并从中提取出了管理员账户信息。遗憾的是，无论是采用暴力破解还是MD5解密方式都无法获得有效的密码。

正当我以为这次渗透行动即将告一段落之际，另一个同样运行于DedeCms 5.7之上的网站给了我新的希望——它竟然开放了phpMyAdmin接口！这意味着我们有机会通过数据库操作获取shell权限。尽管初次尝试通过MySQL日志注入Shell未能如愿（可能是防火墙拦截所致），但我并未放弃，而是转向了直接更改数据库密码并登录后台的方法。

进入后台管理系统后，我试图上传恶意脚本文件至服务器，但很快意识到自己忽略了截图记录这一重要步骤。尽管过程相对顺利，但随后在尝试执行命令时遇到了阻碍——很可能是由于PHP配置文件中disable_functions选项导致部分功能被禁用所致。

面对这种情况，我查阅了一些绕过disable_functions限制的技术方案，包括但不限于利用环境变量、特定函数组合以及其他已知漏洞等手段。最终选择了较为简便的蚁剑插件来进行提权操作，但由于目标站点使用的PHP版本较旧（5.x），不得不转向同服务器上另一支持更高版本PHP（7.x）的邻居站点来完成任务。

在整个过程中，还遇到了诸如GCC编译错误等问题，需要进一步研究解决。总之，这次经历让我深刻体会到网络安全攻防技术的复杂性和挑战性。如果你对此感兴趣或有任何建议，请访问我的博客[kosakd.top](https://kosakd.top/)交流探讨。