# 【技术分享】如何挖掘Twitter的XSS漏洞并绕过CSP（含演示视频）

**译文声明**
本文为翻译文章，原文来源于paulosyibelo.com。译文仅供参考，具体内容以原文为准。
  
**翻译**：[童话](http://bobao.360.cn/member/contribute?uid=2782911444)  
**投稿方式**：发送邮件至linwei#360.cn 或登录网页版在线投稿

## 前言
几个月前，我成功地发现了一个Twitter的XSS漏洞，并且能够绕过其内容安全策略（CSP），执行JavaScript代码。在这篇文章中，我将详细分享这个XSS漏洞的挖掘思路和具体细节，并附上PoC演示视频。

## 漏洞分析
该漏洞出现在开发人员创建应用时设置的服务网站（Website）信息部分，这一字段用于提供应用程序的详细描述及下载链接等功能。经过测试，我发现Twitter对该输入内容在服务端进行正则校验时可能存在如下问题：`([https?:])w+`。此正则表达式缺少了起始符`^`，这意味着我们可以输入类似`data:CONTENT#https://…`这样的URL并通过验证，从而实现HTML注入。但由于CSP的限制，此时注入的HTML代码并不会被解析。

进一步检查HTTP头后，我注意到`script-src`和`object-src`块中存在多个配置错误，这可能使我们能够绕过twitter.com的内容安全策略。以下是CSP规则的一部分：
```
script-src https://connect.facebook.net https://cm.g.doubleclick.net https://ssl.google-analytics.com https://graph.facebook.com https://twitter.com 'unsafe-eval' 'unsafe-inline' https://*.twimg.com https://api.twitter.com https://analytics.twitter.com https://publish.twitter.com https://ton.twitter.com https://syndication.twitter.com https://www.google.com;
frame-ancestors 'self';
object-src https://twitter.com https://pbs.twimg.com;
default-src 'self';
...
```

`object-src`和`script-src`块引起了我的注意。通过一番研究，我发现了一个可信域（cdn.syndication.twimg.com，也称为syndication.twitter.com）中的JSONP endpoints。起初我认为可以通过利用`object-src`块的内容（如`https://pbs.twimg.com`），将Flash文件上传到Twitter的CDN服务器，并将其作为嵌入对象来执行代码。然而由于对用户输入长度的限制，我尝试的所有payload都因为过长而被截断，因此这种攻击方式未能成功。

最终，我在一个可信域下找到了可以利用的点，并构造了一个较短的payload，当注入到twitter.com时，代码得以执行并弹出窗口。例如：
```
http://syndication.twitter.com/widgets/timelines/246079887021051904?dnt=true&domain=site.com&lang=en&callback=alert
```

请求来自`syndication.twitter.com`主机的JSONP响应头包含一个`Content-Disposition`字段，强制将返回的内容作为文件下载。尽管Chrome浏览器会将返回的内容作为附件下载，但由于CSP配置错误（允许`'unsafe-inline'`），我们仍然能够执行代码。通过设置服务网站（Website）信息如下：
```
data:text/html,
```
客户端代码将会执行并弹出窗口。

## PoC 演示视频
[此处插入PoC演示视频链接]

## 后记
在后续的分析过程中，我还发现`ssl.google-analytics.com`、`www.google.com`以及`graph.facebook.com`主机上的JSONP endpoints也可以被利用。我已经在向Twitter报告漏洞的邮件中提及了这些问题，但官方表示短期内可能不会修复，因为这可能会导致某些功能无法正常运行，并且与其他厂商沟通也需要一定时间。

此外，在这篇文章发布之后，Twitter的研究员[@Ben Hayak](https://twitter.com/BenHayak/status/859490588504317953)提示我们也可以在此处展开同源方法执行（SOME）攻击，例如：
```
https://syndication.twitter.com/widgets/timelines/246079887021051904?callback=document.body.firstElementChild.Reference.submit
```
更多关于SOME攻击的信息可以参考这篇文章：[Instagram XSS](http://www.paulosyibelo.com/2016/11/instagram-stored-oauth-xss.html)