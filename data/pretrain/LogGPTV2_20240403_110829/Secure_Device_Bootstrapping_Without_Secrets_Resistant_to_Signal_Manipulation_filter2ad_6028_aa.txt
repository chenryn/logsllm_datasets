title:Secure Device Bootstrapping Without Secrets Resistant to Signal Manipulation
Attacks
author:Nirnimesh Ghose and
Loukas Lazos and
Ming Li
2018 IEEE Symposium on Security and Privacy
Secure Device Bootstrapping without Secrets
Resistant to Signal Manipulation Attacks
Department of Electrical and Computer Engineering, University of Arizona, Tucson, AZ
Nirnimesh Ghose, Loukas Lazos, and Ming Li
Email: {nghose, llazos, lim}@email.arizona.edu
Abstract—In this paper, we address the fundamental problem of
securely bootstrapping a group of wireless devices to a hub, when
none of the devices share prior associations (secrets) with the hub
or between them. This scenario aligns with the secure deployment
of body area networks, IoT, medical devices, industrial automation
sensors, autonomous vehicles, and others. We develop VERSE, a
physical-layer group message integrity veriﬁcation primitive that
effectively detects advanced wireless signal manipulations that
can be used to launch man-in-the-middle (MitM) attacks over
wireless. Without using shared secrets to establish authenticated
channels, such attacks are notoriously difﬁcult to thwart and can
undermine the authentication and key establishment processes.
VERSE exploits the existence of multiple devices to verify the
integrity of the messages exchanged within the group. We then
use VERSE to build a bootstrapping protocol, which securely
introduces new devices to the network.
Compared to the state-of-the-art, VERSE achieves in-band
message integrity veriﬁcation during secure pairing using only
the RF modality without relying on out-of-band channels or
extensive human involvement. It guarantees security even when
the adversary is capable of fully controlling the wireless channel
by annihilating and injecting wireless signals. We study the limits
of such advanced wireless attacks and prove that the introduction
of multiple legitimate devices can be leveraged to increase the
security of
the pairing process. We validate our claims via
theoretical analysis and extensive experimentations on the USRP
platform. We further discuss various implementation aspects such
as the effect of time synchronization between devices and the
effects of multipath and interference. Note that the elimination of
shared secrets, default passwords, and public key infrastructures
effectively addresses the related key management challenges when
these are considered at scale.
I. INTRODUCTION
It is predicted that approximately ﬁve billion IoT devices–
wearable sensors, pacemakers,
insulin pumps, blood pres-
sure and heart monitors, smart occupancy sensors and locks,
Internet-enabled appliances, sensors for autonomous vehicles–
will be deployed by 2020 [1]. These devices become sensing
instruments for our physical world, collecting a plethora of
data that enhances the understanding of our surroundings and
improves our interactions with the environment. The collected
data is typically ofﬂoaded to a hub or a base station that pro-
vides connectivity to the Internet backbone and enables remote
device access and control. For instance, the insulin dosage of
a network-enabled implanted pump can be remotely adjusted
according to the patient’s vitals, without implant removal.
On many application scenarios,
the devices need to be
securely bootstrapped to the hub because they collect and
communicate sensitive information. Often bootstrapping needs
'
+XE$
$GYHUVDU\
0
'
'
Fig. 1: Multiple devices D1, D2, and D3 bootstrapping with the hub (A) in
presence of an MitM adversary (M ).
to occur in the presence of passive and active adversaries
who may also attempt to pair with the hub or impersonate
its functions. Establishing trust between two or more devices
is one of the most fundamental problems in security that can
be decomposed to achieving device authentication and key
agreement. The ﬁrst property is used to verify the device’s
identity (or legitimacy), whereas the second establishes a secure
channel over a public medium. Conventional solutions include
the use of default passwords,
the preloading of secrets to
the relevant parties [2] or the establishment of a public key
infrastructure [3]. However, such solutions pose serious key
management, scalability, and interoperability challenges. Often,
manufacturers opt to preload devices with default keys that
are easily leaked. The largest DDoS attack launched to date
exploited default passwords preloaded to IoT devices such as IP
cameras, digital video recorders, etc. to form the Mirai botnet
and attack the DNS infrastructure [4]. Moreover, many IoT
devices do not have advanced interfaces such as keyboards,
screens, etc. to easily change default passwords.
To address these challenges, recent works have proposed
secure device pairing methods that do not rely on pre-shared
secrets [5]–[9], [9]–[21]. Most rely on out-of-band (OOB)
human veriﬁcation to provide authentication and verify the
protocol success. Human-dependent solutions scale poorly with
the number of devices. Some in-band solutions have also
appeared, but they almost unanimously derive security from the
infeasibility of advanced wireless signal manipulations, signal
cancellation in particular. To preserve the message integrity
during the execution of a key agreement protocol, messages
are encoded using Manchester-coded ON-OFF keying (MC
ON-OFF), as shown in Fig. 2. In MC ON-OFF keying, a
zero bit is represented with an OFF-ON signal sequence over
two slots, whereas the one bit is represented by an ON-OFF
signal. ON slots are realized by transmitting random symbols
from the constellation plane, whereas OFF slots are realized
by no transmission. A Man-in-the-Middle (MitM) adversary
(cid:2) has to completely annihilate
attempting to replace m with m
© 2018, Nirnimesh Ghose. Under license to IEEE.
DOI 10.1109/SP.2018.00055
819
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:34:15 UTC from IEEE Xplore.  Restrictions apply. 
6ORW
DQQLKLODWHG
'HYLFH
'

P

[
[¶
$GYHUVDU\
0




P


+XE
$
0&212))


Fig. 2: D transmits an MC ON-OFF message x to A in the presence of M.
To modify x to x(cid:2), M has to annihilate ON slots of D’s transmission.
the ON slots of m on those bit positions that the two messages
differ. This is generally difﬁcult to achieve under a rich scat-
tering environment due to the unpredictability of the wireless
channel between the legitimate parties. At the same time, device
authentication is achieved via the veriﬁcation of co-presence
when the user interacts with the devices.
However, it was recently demonstrated that signal cancella-
tion and injection is possible under more predictable channel
conditions [22], [23]. For many applications, devices are paired
in a relatively static indoor environment, where the channels
between devices are predictable and slow fading. Under such
conditions, an MitM attack over wireless becomes possible, and
the adversary can inject his own messages to spoof a legitimate
device or the hub. Note that the lack of an authenticated channel
between the legitimate parties (due to the absence of prior
trust) makes the legitimate transmissions and the injected ones
indiscernible. Recently, the ﬁrst protocol resistant to wireless
MitM attacks utilizing signal cancellation was presented [6].
The protocol relied on the detection of signal cancellation
attacks using a secondary device called the helper, that main-
tained an authenticated channel to the hub. The helper was
placed in close proximity to the legitimate device to ensure
the indistinguishability between the helper’s and the legitimate
device’s transmissions. However, this approach does not scale
with the number of devices. In a group setting, the helper would
have to be manually moved to multiple locations and device
pairing must occur sequentially.
In this work, we address the problem of securely bootstrap-
ping multiple devices with a single entity such as a hub or a
base station. Our goal is not to differentiate between legitimate
and malicious devices. Such a proposition is infeasible in
the absence of any prior trust and without the existence of
out-of-band channels for veriﬁcation, or some unique advan-
tage of the legitimate devices (proximity, superior channel
conditions, unique contextual information, etc.). Rather, we
aim to guarantee protocol soundness in the absence of an
adversary, and abort the bootstrapping process if any active
protocol manipulation is detected. Moreover, we investigate if
the presence of multiple legitimate devices can be leveraged
to strengthen resistance to signal cancellation and therefore
improve the security of the pairing process. We theoretically
and experimentally characterize the limits of the adversary’s
capability based on geometric constraints and exploit those
limits to construct a secure bootstrapping protocol for multiple
devices. Our main contributions are four-fold:
• We develop a scalable PHY-layer group message integrity
veriﬁcation primitive called VERSE that achieves boot-
strapping in-band (using only a common RF interface)
and does not rely on pre-shared secrets. The key idea
is to simultaneously verify the integrity of a transmitted
message at multiple receivers, thus forcing the adversary to
perform signal cancellation/injection at multiple locations
simultaneously. This requirement dramatically degrades
the success of MitM over wireless.
• We use VERSE to construct a secure in-band bootstrap-
ping protocol for multiple devices based on the Difﬁe-
Hellman (DH) key agreement. Our protocol securely pairs
and then establishes pairwise keys with the hub. Such keys
can then be used to establish group keys, if necessary.
• We analyze the security of VERSE and theoretically
establish that a successful attack becomes infeasible if
three or more veriﬁers are present when a single malicious
device launches the attack. Moreover, the effort of a multi-
device adversary must scale linearly with the group size.
• We carry out extensive USRP experiments to evaluate
the effectiveness of our PHY-layer integrity veriﬁcation
against signal manipulations. First, we demonstrate the
effectiveness of cancellation and injection attacks over
a single channel. We then evaluate signal manipulations
when multiple devices are used as receivers and/or trans-
mitters and validate our theoretical ﬁndings. We then
evaluate the adversary’s ability to defeat VERSE.
Paper organization: The paper is organized as follows. We
discuss related work in Section II. In Section III, we describe
the system and adversary models. We present
the VERSE
primitive and the secure bootstrapping protocol for multiple
devices in Section IV. We analyze the protocol’s security in
Section V. The experimental evaluation of MitM attacks over
wireless and of the security of our protocol are detailed in
Section VI. We conclude the paper in Section VII.
II. RELATED WORK
Most prior methods for bootstrapping multiple devices that
do not share prior secrets involve some degree of human
intervention and OOB veriﬁcation [24]–[27]. Perkovi´c et al.
[24] proposed a group key establishment technique in which
each participating device sequentially transmits its ID, public
key, and a short random string. Each device compiles the XOR
of the short strings of all the devices. For integrity veriﬁcation,
this short authenticated string is simultaneously transmitted
using ON-OFF keying through a visual light channel or LEDs.
The user performs integrity veriﬁcation by pressing a button
on each device individually. Li et al. proposed a DH-based
group key exchange protocol, where integrity veriﬁcation is
derived by a human performing visual comparison of an ON-
OFF keyed string [25]. Here, the string is the hash of all the
transmitted messages. Nguyen et al. proposed a group boot-
strapping protocol where each device computes and transmits
820
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:34:15 UTC from IEEE Xplore.  Restrictions apply. 
a long hash of its key or key primitive. This is followed by
the transmission of the actual key or key primitive. Message
integrity is veriﬁed by a human compiling the veriﬁcation
result from each device. Valkonen et al. proposed the use of
a trusted node to verify the number of participating devices,
preventing an adversary to pair in the group [28]. The user was
responsible for compiling the veriﬁcation result from individual
nodes onto a single trusted device. Farb et al. proposed a
group message transmission protocol over Bluetooth, which is
initiated through a trusted device [29]. Similar to prior methods,
the user validated the successful pairing of each device. Wong et
al. proposed a multichannel veriﬁcation scheme which required
pre-shared secrets between the devices and the hub, in addition
to a trusted device performing veriﬁcation [30], [31].
There are many key-agreement protocols both OOB and in-
band for a pair of devices. The OOB channel is used to protect
the communication against an MitM attack because the OOB
channel
is assumed to be inaccessible to the attacker [9]–
[21]. Therefore, veriﬁcation is performed over a private and
authenticated channel. However, OOB channels usually require
non-trivial human support and advanced user interfaces. To
reduce the human interaction there have been few past attempts
to design in-band message integrity protection mechanisms,
which assume that signal cancellation over the wireless channel
is not possible [5], or occurs with bounded success [7], [23]. For
example, the Tamper-Evident Pairing (TEP) protocol proposed
by Gollakota et al. [8], and the integrity codes (I-codes)
proposed by ˇCapkun et al. [5] both assumed the infeasibility
of signal cancellation. Message authentication was achieved by
assuming the presence of a legitimate device is known (a.k.a.
authentication through presence).
However, the infeasibility of signal cancellation assumption
does not always hold. P¨opper et al. ﬁrst showed the feasibility
of signal cancellation attacks using carefully placed relay nodes
and directional antennas [22], Recently, Hou et al. [23] showed
that success probability of signal cancellation attack in the one-
to-one setting depends on the randomness of the legitimate
channel. A typical indoor environment may not be sufﬁcient
because the devices are static and the channel is usually stable.
In a recent work [6], Ghose et al. presented the ﬁrst pairwise
protocol called HELP that detects signal cancellation even
if the adversary is assumed to have a perfect cancellation
capability. The key idea of HELP is to place a helper device
in close proximity to the legitimate pairing device so that their
concurrent transmissions become indistinguishable. Therefore,
if the adversary cancels part of the helper’s signal, the hub can
detect the cancellation, as the helper later reveals its signal to
the hub via an authenticated channel. HELP does not scale well
with multiple devices attempting to pair at once because the
user will have to move the helper device manually to multiple
locations. Moreover, the opposite authentication direction (hub-
to-device) is not resistant to a cancellation attack, when the
adversary can selectively cancel the signal at the device and
not the helper (though this occurs with bounded probability
due to the close proximity between the helper and the device).
'
0
'
'
$
Fig. 3: System model depicting all entities.
Key advancements of VERSE relative to the state-of-
the-art: Pairing methods can be extended to associate multiple
devices. But there are two major issues with such extensions.
First, the user effort becomes signiﬁcant with OOB channel
pairing, if it has to be repeated multiple times. Second, as
it was shown by Mirzadeh et al. [32], suppose the success
probability of an adversary pairing with the system to be pS.
With N pairing repetitions, the adversary’s success probability
of pairing one device becomes 1−(1−pS)N which approaches
one with N. In our work, we leverage the existence of multiple
devices to actually reduce the probability of a successful attack.
Moreover, orthogonal to these works, our method requires the
least user interaction (powering of devices and initialization
of pairing from the hub). The message integrity veriﬁcation is
done in-band for all the participating devices without requiring
any other interface (led lighting, microphone, speaker) other
than the common RF interface. Also, most prior works do not
address the possibility of MitM attacks, where the adversary can
hijack the session of a legitimate entity by performing signal
cancellation and injection. Compared to HELP, the only other
work that addresses an MitM over wireless without pre-shared
secrets, VERSE does not require a helper with an authenticated
channel to the hub that also needs to be manually moved by
the user. Moreover, VERSE improves security with a group
of devices. Finally, the security of VERSE does not hinge on
the close proximity of some devices, the randomness of the
channel, nor the placement of the adversary outside a protected
zone. Rather, it is derived from the fundamental constraints
posed by the geometry and basic signal propagation properties.
III. MODEL AND ASSUMPTIONS
A. System Model
We consider the system model shown in Fig. 3. The system
consists of the following entities:
Hub (A): The hub coordinates and veriﬁes the bootstrapping
process. It is assumed to be under user control.
Legitimate Devices (D): We consider a set of legitimate
devices D = {D1, D2, . . . , DN−1} that are newly introduced
into the network. The devices attempt to pair with A, but do
not share any prior secrets. They are assumed to be under user
control. The devices and A are synchronized to a common
slotted system with a bounded synchronization error . Syn-