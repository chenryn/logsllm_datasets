周末刚好没有太多的事情，参加了 Google CTF 来玩玩，印象中是第一次参加这个比赛。总的来说 google 题目还是属于质量不错的一类，但是 web
题目难度梯度太大了，前面二道还可以接受，但是最后二道好像到比赛结束都是零解，佛了 ~ 佛了 ~
通过阅读本文章，你将学会：
  * blind XXE by local dtd
  * SQL injection by order with side channels
  * 组合数学
### bnv
题目链接是：
访问主页会看到：
查看源代码看到有一个 post.js 文件，访问可以得到重要的 javascript 代码：
    function AjaxFormPost() {
      var datasend;
      var message = document.getElementById('message').value;
      message = message.toLowerCase();
      var blindvalues = [
        '10',    '120',   '140',    '1450',   '150',   '1240',  '12450',
        '1250',  '240',   '2450',   '130',    '1230',  '1340',  '13450',
        '1350',  '12340', '123450', '12350',  '2340',  '23450', '1360',
        '12360', '24560', '13460',  '134560', '13560',
      ];
      var blindmap = new Map();
      var i;
      var message_new = '';
      for (i = 0; i  Please use the search engine below to find the closest association near you.
是否尝试提交其他城市的 message 可以获得 flag?
  * 是否有其他可以提交的 json 健值对？
接下里的几个小时就是对这些思路的验证，非常遗憾没有一个能让我利用，也不存在其他的 json 键值对，并且服务器只允许提交这
Zurish、Paris、Bangalore 三个城市的盲文数字。在这过程中也有一些收获，比如：
  * 知道目标服务器是 wsgi + flask 模式
  * 后端使用 json.loads 解码 JSON 字符串
  * 知道了 google 在全球的办公地点。。
后来突然想到既然是 `application/json` 那么是否支持 XML 呢？于是尝试了修改 `Content-type` 类型为
`application/xml`，竟然成功！下图返回结果说明服务端试图解析 XML 数据！
尝试网上公开的各种 XML 相关的利用：
  * 本地文件读取
  * 报错显示
  * OOD 外带信息
  * 等等
经过尝试发现，唯一可以成功利用的 payload 如下：
    ]>
    &test;
如果 SYSTEM 后面引号部分的文件存在会返回 ：
    No result found
如果不存在会返回：
    Failure to process entity test, line 4, column 7
经过测试 `file:///flag` 是存在的，而且这里只支持 file
协议，因此你是无法将数据传递至外部服务器。这也是本题的一个难点，解决办法就是利用服务端的一个本地 dtd，然后重新定义它里面的一个 entity
触发错误，然后错误信息显示的时候会泄露你需要读取的文件内容。
尝试系统默认的 dtd：`/usr/share/yelp/dtd/docbookx.dtd`
> Systems using the **GNOME desktop environment** often have a DTD at
> /usr/share/yelp/dtd/docbookx.dtd containing an entity called ISOamso.
最终利用 payload：
            ">
            %eval;
            %error;
        '>
        %local_dtd;
    ]>
回显如下，得到 flag：
    Invalid URI: file:///nonexistent/CTF{0x1033_75008_1004x0}, line 4, column 15
### gLotto
题目链接：，主页截图：
访问主页，发现有个源码链接跳至 `?src`，得到主页源码：
    <?php
        require_once('config.php');
        require_once('watchdog.php');
        function gen_winner($count, $charset='0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ')
        {
            $len = strlen($charset);
            $rand = openssl_random_pseudo_bytes($count);
            $secret = '';
            for ($i = 0; $i < $count; $i++)
            {