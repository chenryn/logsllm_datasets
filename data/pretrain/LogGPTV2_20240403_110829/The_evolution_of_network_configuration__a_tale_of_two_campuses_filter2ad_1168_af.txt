 700000
 600000
 500000
 400000
 300000
 200000
 100000
 0
s
e
n
i
l
f
o
r
e
b
m
u
N
 120
 100
 80
 60
 40
 20
 0
Jan/06
Jan/07
Jan/08
Jan/09
Jan/10
Jan/06
Jan/07
Jan/08
Jan/09
Jan/10
Time
vlan
l3
acl
mgt
l1
l2
(a) All devices - GT
sec
cflt
qos
Time
vlan
l3
acl
mgt
l1
l2
(b) Median - GT
sec
cflt
qos
s
e
n
i
l
f
o
r
e
b
m
u
N
 400
 350
 300
 250
 200
 150
 100
 50
 0
Jan/06 Jan/07 Jan/08 Jan/09 Jan/10
Jan/06
Jan/07
Jan/08
Jan/09
Jan/10
Time
vlan
l3
acl
mgt
l1
l2
sec
cflt
qos
(d) All devices - UW
Time
vlan
l3
acl
mgt
l1
l2
(e) Median -UW
sec
cflt
qos
i
s
e
c
v
e
d
f
o
r
e
b
m
u
N
i
s
e
c
v
e
d
f
o
r
e
b
m
u
N
 800
 700
 600
 500
 400
 300
 200
 100
 0
 1200
 1000
 800
 600
 400
 200
 0
Jan/06 Jan/07 Jan/08 Jan/09 Jan/10
Time
(c) Number of devices - GT
Jan/06 Jan/07 Jan/08 Jan/09 Jan/10
Time
(f) Number of devices - UW
Figure 13: Longitudinal analysis of switches over ﬁve years.
tions, the system can recommend the operator to also consider the
ACLs where that group is used. A tool could also proactively of-
fer negative recommendations. If the operator attempts to change
a line or stanza of the network conﬁguration that is not frequently
changed, the conﬁguration system could discourage the modiﬁca-
tion by raising an alert, forcing the operator to go through multiple
conﬁrmation steps, or blocking a low-rank operator from making
changes.
Knowledge of network conﬁguration changes also helps point
designers of conﬁguration automation tools to parts of the conﬁg-
uration that could be automatically generated, for various types of
devices. Our results reveal that network operators make different
types of conﬁguration changes, depending on the network device
type and, hence, point to possibilities for customizing these con-
ﬁguration change templates based on the type of device. Highly
specialized devices like ﬁrewalls are distinct, where most conﬁgu-
ration is dedicated to access control, and the changes mostly happen
on that speciﬁc area as well. For switches, a template that enables
batch-modiﬁcation on ports and VLAN conﬁgurations would be
helpful.
Our work also opens many possible avenues for studying conﬁg-
uration changes in more detail. One possibility would be to look
for changes to network conﬁguration that were later reverted or
changed again. Such changes might point to cases where operators
made errors when conﬁguring the network; knowledge about where
in the conﬁguration these errors occur could improve conﬁguration
testing methods. Another possibility would be to analyze the con-
ﬁguration for “copy-paste” behavior, as is done in software engi-
neering studies of “code clones”. Identifying parts of conﬁguration
that are commonly copied might also inspire design templates for
conﬁguration update.
6. CONCLUSION
We presented a longitudinal analysis of network conﬁguration
and its evolution over ﬁve years for two large campus networks.
We focused on capturing conﬁguration characteristics and common
practices by examining change patterns from CVS commit log data,
in contrast to earlier studies, which have mostly examined a single
conﬁguration snapshot. In contrast to earlier studies, which have
focused mostly on router conﬁguration, we also study conﬁguration
changes for ﬁrewalls and switches, which comprise a signiﬁcant
portion of the networks. Our study unearths a variety of important
aspects regarding conﬁguration evolution: we study the frequency
and extent of conﬁguration updates, showing the similarities and
differences across networks; identify the prevalence of correlated
changes; and shed light on how various network-wide factors affect
evolution.
Our work is a ﬁrst step toward understanding conﬁguration evo-
lution in more depth.
Just as mining software repositories has
emerged into a mature ﬁeld in software engineering for assisting
programmers understand software engineering better, we believe
that mining network repositories for conﬁguration changes can help
deepen our understanding of conﬁguration and design practices. A
better understanding of this process is imperative, as it is a corner-
stone for improving current methods of conﬁguring and managing
network devices, easing the pain of network operators by providing
recommendations, offering better templates, reducing misconﬁgu-
ration and, ultimately, enabling automation.
511Acknowledgements
We thank the campus network operators who provided us with net-
work conﬁguration data. We especially thank Dan Forsyth and
Dale Carder for answering many questions about network man-
agement and conﬁguration practices. We should also like to thank
Lixia Zhang (our shepherd) and the anonymous reviewers for their
insightful feedback. This work is supported in part by NSF grants
CNS-0643974, CNS-0746531, CNS-1017545, CNS-1018021, and
CNS-1050170.
REFERENCES
[1] T. Benson, A. Akella, and D. Maltz. Unraveling Complexity in
Network Management. In Proc. 6th USENIX NSDI, Boston, MA,
Apr. 2009.
[8] J. Gottlieb, A. Greenberg, J. Rexford, and J. Wang. Automated
Provisioning of BGP Customers. IEEE Network, 2003.
[9] H. Kagdi, M. Collard, and J. Maletic. A survey and taxonomy of
approaches for mining software repositories in the context of
software evolution. Journal of Software Maintenance and Evolution:
Research and Practice, 19(2):77–131, 2007.
[10] S. D. Krothapalli, X. Sun, Y.-W. E. Sung, S. A. Yeo, and S. G. Rao.
A toolkit for automating and visualizing vlan conﬁguration.
SafeConﬁg ’09, pages 63–70, New York, NY, USA, 2009. ACM.
[11] F. Le, S. Lee, T. Wong, H. Kim, and D. Newcomb. Minerals: using
data mining to detect router misconﬁgurations. In Proc. MineNets
’06, pages 293–298, Pisa, Italy, Sept. 2006.
[12] F. Le, G. Xie, D. Pei, J. Wang, and H. Zhang. Shedding Light on the
Glue Logic of the Internet Routing Architecture. Aug. 2008.
[13] M. Lehman. Programs, life cycles, and laws of software evolution.
Proceedings of the IEEE, 68(9):1060–1076, 1980.
[2] D. Caldwell, A. Gilbert, J. Gottlieb, A. Greenberg, G. Hjalmtysson,
[14] R. Mahajan, D. Wetherall, and T. Anderson. Understanding BGP
and J. Rexford. The cutting edge of IP router conﬁguration. In
Hotnets-II, Cambridge, MA, Nov. 2003.
[3] X. Chen, Z. Mao, and J. Van der Merwe. Towards automated network
management: network operations using dynamic views. In INM 07.
[4] S. Eick, T. Graves, A. Karr, J. Marron, and A. Mockus. Does code
decay? assessing the evidence from change management data. IEEE
Transactions on Software Engineering, 27(1):1–12, 2001.
[5] W. Enck, T. Moyer, P. McDaniel, S. Sen, P. Sebos, S. Spoerel,
A. Greenberg, Y. Sung, S. Rao, and W. Aiello. Conﬁguration
management at massive scale: system design and experience. IEEE
Journal on Selected Areas in Communications, 27(3):323–335, 2009.
[6] N. Feamster and H. Balakrishnan. Detecting BGP Conﬁguration
Faults with Static Analysis. In Proc. 2nd USENIX NSDI, Boston,
MA, May 2005.
[7] A. Feldmann and J. Rexford. IP network conﬁguration for
intradomain trafﬁc engineering. IEEE Network, Sept. 2001.
misconﬁguration. In Proc. ACM SIGCOMM, pages 3–17, Pittsburgh,
PA, Aug. 2002.
[15] D. Maltz, G. Xie, J. Zhan, H. Zhang, G. Hjálmt`ysson, and
A. Greenberg. Routing Design in Operational Networks: A Look
from the Inside. In Proc. ACM SIGCOMM, Portland, OR, Aug. 2004.
[16] S. Raghavan, R. Rohana, D. Leon, A. Podgurski, and V. Augustine.
Dex: A semantic-graph differencing tool for studying changes in
large code bases. 2004.
[17] Really Awesome New Cisco ConfIg Differ (RANCID).
http://www.shrubbery.net/rancid/, 2004.
[18] Y. Sung, S. Rao, S. Sen, and S. Leggett. Extracting Network-Wide
Correlated Changes from Longitudinal Conﬁguration Data. In Proc.
PAM, Seoul, South Korea, Apr. 2009.
[19] G. Xie, J. Zhan, D. Maltz, H. Zhang, A. Greenberg, G. Hjalmtysson,
and J. Rexford. On static reachability analysis of IP networks. In
IEEE INFOCOM, volume 3, pages 2170–2183, 2005.
512Summary Review Documentation for 
“Understanding the Evolution of Network Configuration: 
 A Tale of Two Campuses” 
Authors: H. Kim, T. Benson, A. Akella, N. Feamster 
reads 
Reviewer #1 
Strengths:  The  paper  claims  this  to  be  the  first,  detailed 
longitudinal study of network configuration, and it provides a good 
deal  of  empirical  data  on  how  network  element  configurations 
change at the macro level (at least for these kind of networks). It is 
also well written and on the whole well executed. 
Weaknesses:  I'm  not  sure  that  I  could  tell  you  what  the  key 
takeaways from the study if you cornered me. There are lots of facts 
and characterizations of changes, but it is not clear whether this data 
is useful for anything in particular. That said, I come down in favor 
of this work as a step ahead (and see comments below).  
Comments to Authors: The best way to improve your paper would 
be to sharpen the problem that you are investigating. Right now the 
paper 
like  an  open-ended  exploration  of  network 
configuration.  The  abstract,  in  particular,  is  vague  and  has  no 
results, and the introduction is quite general in places. On the plus 
side  it  delivers  on  exactly  what  the  title  says  by  describing  what 
happened to the configurations over time :)  
If  you  could  identify  some  key  questions  or  hypotheses  to 
investigate (what did you expect, going in?) this might give more of 
a point to the paper. It would also help us to understand whether the 
data you are presenting is useful. For example, I suspect that it will 
be necessary to look more deeply than the change in the number of 
configuration  lines  per  element  for  different  functions  to  uncover 
much of value, and that the overall statistics are not very helpful. 
But I also acknowledge that I don't yet have a good sense of what to 
look  for  more  deeply,  and  I  hope  this  would  be  part  of  the 
conversation should your paper be accepted. I see your paper as an 
advance in moving this conversation ahead rather than a conclusive 
study.  
Consider an operator survey in addition to your config file analysis. 
This might help you work out where to focus.  
Another main point: you describe a method for parsing log files to 
infer  additions  /  deletions  /  changes.  How  well  does  that  method 
work?  Errors  in  the  inference  will affect your results. So I would 
have liked you to specify the inference process more carefully and 
evaluate  how  well  it  worked  and  the  likely  impact  of  inference 
errors.  If  the  process  is  always  correct by definition then say that 
(but  I  don't  see  how  this  can  be  the  case  if  addition  /  deletion  / 
change is defined from the point of view of the operator).  
What is the size in lines of the additions / deletions / modifications? 
I don't have a sense and was surprised that this didn't come out.  
End of 3.1: how does the lack of RANCID for GT routers/switches 
impact the results? 4.1: seems like you should say explicitly that GT 
has many router mods. Many of your graphs are unreadable in black 
and white and/or too small. See Fig 4 as an example. 
Reviewer #2 
Strengths: This paper represents a thorough study of configuration 
changes over a long period of time. The analysis is rigorous and the 
results are intuitive. 
Weaknesses:  The  research  focuses  only  on 
two  university 
networks,  which  have  many  specific  properties  that  cannot  be 
generalised  to  other  more  interesting  networks  such  as  ISPs, 
enterprises 
Comments  to  Authors:  I  like  the  thoroughness  of  your  analyses 
and the conclusions drawn from these. However, I find that the data 
is a bit limited with only two university networks and it will be hard 
to  generalise  these  findings.  More  datasets  would  solve  this 
problem.  Of  course,  I  understand  the  difficulty  in  obtaining  good 
datasets.  Towards  that  end,  you  should  consider  making  the  data 
public.  
By  grouping  commands  into  functions,  you  lose  the  fine-grain 
information from the configuration files. For the high-level analyses 
you provide in this paper that is good enough. But I would like to 
see  more  low  level  analyses  for  example,  root-cause  analysis  of 
some l3 configuration changes. You actually observed this loss of 
information in Section 4.3 for Firewalls, in particular ACL stanzas.  
Section 4.2, regarding configuration changes in routers, you seem to 
observe  more  correlations  than  [18].  It  would  be  good  if  you  can 
compare your results against those in [18]. The difference could be 
that you analyse changes at higher-level than those in [18].  
While  I  like  your  thorough  analyses  of  the  data,  most  of  your 
analyses are elementary. It would provide a lot more insight into the 
configuration  management  problems  if  more  advanced  statistical 
techniques are used in addition to those already used in this paper. 
Reviewer #3 
Strengths: To this reader's limited knowledge, this paper seems the 
first  of  its  kind,  i.e.  using  longitude  data  to  gain  a  deeper 
understanding  of  exactly  what 
is  going  on  with  network 
configurations, as first step towards improving it. 
Weaknesses:  Although  the  paper  suggested  a  few  ways  that  can 
benefit from this study, I still wish the authors could have gone a 
little deeper in interpreting the results. 
513One example: I was intrigued by the observation that "devices that 
are  more  special-purpose  such  as  firewalls  tend  to  exhibit  more 
common  configuration  change  patterns",  while  more  general 
purpose boxes like core routers would have distinct practices. This 
seems  a  bit  counter-intuitive  to  me.  But  the  paper  merely  just 
mentioned it. 
Comments to Authors: None. 
Reviewer #4 
Strengths:  Well-written  with  a  detailed  account  of  network 
evolution in GT and UW campuses. 
Weaknesses: Not generalizable - Not sure what to make out of the 
comparisons between UW   and GT campuses. 
Comments to Authors: I think the paper does a good job writing 
and articulating what happened to the UW and GT campus network 
configurations  over  the  past  5  years.  I  think  the  authors  seem  to 
have spent some time investigating various causes for kinks in the 
network  evolution,  which 
is  definitely  good.  Unfortunately, 
however, I found this paper quite boring to read, to be completely 
honest. There are a lot of graphs that convey nothing too insightful, 
and the paper contains many conclusions either not generalizable or 
left me wondering `so what' most of the time.  
To  be  clear,  I  understand  the  challenges  in  obtaining  such 
configuration data and I do appreciate and commend the effort of 
the authors in obtaining such data. However, I think the study was a 
bit too focused on statistics reporting and did not have a clear goal 
of what it was trying to find. Most of the time, the paper talks about 
things  like,  "there  were  changes  because  new  routers  were  added 
into  the  network",  or  "a  security  policy  decision  was  made  to 
remove certain protocols", or "changes at layer X and Y correlated 
for some reason 20% of the time".  
I  did  not  know  what  to  make  out  of  these  results,  since  there  is 
always  something  going  on  in  an  enterprise  network  with  new 
policies, updates and so on. The statistics reported and the graphs in 
this  paper  unfortunately  are  not  generalizable  outside  of  the  two 
networks.  If  we  take  two  random  networks,  and  do  such  a  study, 
they may agree on a few things and may disagree on a few others. 
Unfortunately, there is nothing much I learned from that that I can 
take away and apply it elsewhere.  
There is one paragraph in the discussion which tried to argue where 
the  results  are  useful.  I  found  those  to  be  quite  far-fetched. 
Recommending the network operators that X and Y are correlated 
some  Z%  of  the  time  is  not  sufficient  to  keep  popping  to  the 
network operator that if he changes X, he ought to be considering 
changing Y. Others were equally far-fetched unfortunately. 
Reviewer #5 
Strengths: Longtitudinal studies of this type seem really valuable. 
This is done in detail and with some care. 
Weaknesses: These are just case studies, and they are limited to two 
Universities. There is a question about how representative they are. 
that 
However, this is the sort of case study that can only really be done 
on a case by case basis. 
Comments to Authors: There are a couple of issues with the paper. 
At times it seems like something of a data dump. I guess its nice to 
display the same information for each view, but it gets a bit tedious 
by the end.  
Paragraph  2  uses  the  word  complexity  a  large  number  of  times 
without defining it. It would be nice to have a meaningful metric of 
complexity here, instead of an entirely heuristic one. 
Response from the Authors 
Despite  widespread 
simplifying  network 
agreement 
management tasks is critically important, there has been relatively 
little work towards improving this state of affairs. An important first 
step  towards  simplifying  network  configuration  management  is 
systematically  analyzing  how  network  operators  configure 
networks. Studying the changes to network configuration is the most 
direct way to study these phenomena. Along these lines, this paper 
opens new directions in the field of ``network configuration mining'' 
- the process of analyzing network configuration (and, additionally, 
changes to network configuration) to better understand the tasks that 
network operators perform. As with any first paper in an area, some 
of the findings may seem somewhat first-order.  In the future, more 
fine-grained analysis will certainly reveal more interesting traits and 
lessons about network configuration. 
For this paper, our goal is to obtain a high-level view of network 
configuration and its evolution over time.  Therefore, a certain level 
of abstraction is necessary. We do have interesting discoveries, and 
we  have  highlighted  those  points  more  explicitly  in  the  final 
version.  We expect that this paper will spawn interesting follow-up 
papers with deeper analysis.  We performed the analysis described 
in  the  paper  on  both  the  Georgia  Tech  and  Wisconsin  campus 
networks, which are two large campus networks, and we noted the 
differences in configuration changes across these two networks and 
explained  why  discrepancies  in  the  types  of  changes  might  arise.  
Because  of  our  efforts  to  explain  these  discrepancies,  network 
operators who read this paper should easily be able to determine the 
aspects of the paper that apply to their network. We do not claim 
that 
typical  network's 
configuration looks like or how it evolves. This research is a case 
study, and a first attempt to perform extensive longitudinal analysis 
on campus networks.  We should also note that a detailed, accurate 
log  of  changes  to  network  configuration  across  a  long  time  is 
difficult to obtain, but we are happy to help other network operators 
or researchers repeat this analysis on other datasets that they might 
have access to that record configuration changes.  Our analysis tools 
can  be  applied  to  any  network  configuration  changes  that  are 
represented as Revision Control System (RCS) logs. 
To  address  reviewer  concerns,  we  have  also  added  more  details 
concerning  how  we  derive  certain  results,  and  how  errors  or 
omissions  in  data  affect  the  final  outcome.    We  have  also  added 
more discussion of previous work. 
this  study  generalizes  either  how  a 
514