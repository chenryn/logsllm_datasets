# Longitudinal Analysis of Network Configuration: A Tale of Two Campuses

## Abstract
This paper presents a longitudinal analysis of network configuration and its evolution over five years for two large campus networks. We focus on capturing configuration characteristics and common practices by examining change patterns from CVS commit log data, in contrast to earlier studies that have primarily examined single configuration snapshots. Our study encompasses configuration changes for routers, firewalls, and switches, which constitute a significant portion of the networks. We uncover various important aspects of configuration evolution, including the frequency and extent of updates, similarities and differences across networks, and the prevalence of correlated changes. Our work is a first step towards understanding configuration evolution in more depth.

## Introduction
Network configuration management is a critical yet complex task. Despite widespread agreement on the importance of simplifying this process, there has been relatively little research aimed at improving it. An essential first step is to systematically analyze how network operators configure and manage their networks. This paper opens new directions in the field of "network configuration mining" — the process of analyzing network configurations and changes to better understand the tasks performed by network operators.

## Methodology
### Data Collection
We collected configuration data from two large campus networks: Georgia Tech (GT) and the University of Wisconsin (UW). The data spans five years and includes detailed CVS commit logs, which provide a comprehensive record of all configuration changes.

### Data Analysis
We analyzed the data to identify:
- **Frequency and Extent of Changes**: How often and to what extent configurations are updated.
- **Correlated Changes**: Patterns and correlations in configuration changes.
- **Device-Specific Trends**: Differences in configuration changes across different types of devices (routers, firewalls, switches).

## Results
### Frequency and Extent of Configuration Updates
Our analysis shows that configuration changes occur frequently, with some devices experiencing more changes than others. For example, firewalls and switches tend to have more frequent and extensive changes compared to core routers.

### Correlated Changes
We identified several instances of correlated changes, where modifications in one part of the configuration often led to related changes in other parts. For instance, changes in VLAN configurations were often accompanied by corresponding changes in access control lists (ACLs).

### Device-Specific Trends
- **Firewalls**: Most configuration changes in firewalls were related to access control, reflecting their specialized role in network security.
- **Switches**: Switches saw frequent changes in port and VLAN configurations, suggesting the need for templates that enable batch modifications.
- **Routers**: Routers had fewer but more significant changes, often related to routing policies and network topology adjustments.

## Discussion
### Recommendations for Network Operators
1. **Proactive Alerts**: A tool could proactively alert operators about potential issues when they attempt to make infrequent or high-impact changes.
2. **Automated Templates**: Knowledge of common change patterns can help in designing automated templates for configuration updates, especially for switches and firewalls.
3. **Error Detection**: Analyzing reverted changes can help identify common errors and improve configuration testing methods.
4. **Code Clones**: Identifying "copy-paste" behavior in configurations can inspire design templates and reduce misconfigurations.

### Future Work
Future research should delve deeper into specific configuration changes, such as root-cause analysis for layer 3 (L3) configuration changes. Additionally, more datasets from different types of networks (e.g., ISPs, enterprises) would help generalize the findings.

## Conclusion
This study provides a first-of-its-kind, detailed longitudinal analysis of network configuration. While our findings are based on two university networks, they offer valuable insights into the evolution of network configurations and highlight the need for more systematic and automated approaches to network management.

## Acknowledgements
We thank the campus network operators who provided us with network configuration data. Special thanks to Dan Forsyth and Dale Carder for their insights into network management and configuration practices. We also thank Lixia Zhang and the anonymous reviewers for their feedback. This work is supported in part by NSF grants CNS-0643974, CNS-0746531, CNS-1017545, CNS-1018021, and CNS-1050170.

## References
[1] T. Benson, A. Akella, and D. Maltz. Unraveling Complexity in Network Management. In Proc. 6th USENIX NSDI, Boston, MA, Apr. 2009.
[2] D. Caldwell, A. Gilbert, J. Gottlieb, A. Greenberg, G. Hjalmtysson, and J. Rexford. The cutting edge of IP router configuration. In Hotnets-II, Cambridge, MA, Nov. 2003.
[3] X. Chen, Z. Mao, and J. Van der Merwe. Towards automated network management: network operations using dynamic views. In INM 07.
[4] S. Eick, T. Graves, A. Karr, J. Marron, and A. Mockus. Does code decay? assessing the evidence from change management data. IEEE Transactions on Software Engineering, 27(1):1–12, 2001.
[5] W. Enck, T. Moyer, P. McDaniel, S. Sen, P. Sebos, S. Spoerel, A. Greenberg, Y. Sung, S. Rao, and W. Aiello. Configuration management at massive scale: system design and experience. IEEE Journal on Selected Areas in Communications, 27(3):323–335, 2009.
[6] N. Feamster and H. Balakrishnan. Detecting BGP Configuration Faults with Static Analysis. In Proc. 2nd USENIX NSDI, Boston, MA, May 2005.
[7] A. Feldmann and J. Rexford. IP network configuration for intradomain traffic engineering. IEEE Network, Sept. 2001.
[8] J. Gottlieb, A. Greenberg, J. Rexford, and J. Wang. Automated Provisioning of BGP Customers. IEEE Network, 2003.
[9] H. Kagdi, M. Collard, and J. Maletic. A survey and taxonomy of approaches for mining software repositories in the context of software evolution. Journal of Software Maintenance and Evolution: Research and Practice, 19(2):77–131, 2007.
[10] S. D. Krothapalli, X. Sun, Y.-W. E. Sung, S. A. Yeo, and S. G. Rao. A toolkit for automating and visualizing VLAN configuration. SafeConfig '09, pages 63–70, New York, NY, USA, 2009. ACM.
[11] F. Le, S. Lee, T. Wong, H. Kim, and D. Newcomb. Minerals: using data mining to detect router misconfigurations. In Proc. MineNets '06, pages 293–298, Pisa, Italy, Sept. 2006.
[12] F. Le, G. Xie, D. Pei, J. Wang, and H. Zhang. Shedding Light on the Glue Logic of the Internet Routing Architecture. Aug. 2008.
[13] M. Lehman. Programs, life cycles, and laws of software evolution. Proceedings of the IEEE, 68(9):1060–1076, 1980.
[14] R. Mahajan, D. Wetherall, and T. Anderson. Understanding BGP misconﬁguration. In Proc. ACM SIGCOMM, pages 3–17, Pittsburgh, PA, Aug. 2002.
[15] D. Maltz, G. Xie, J. Zhan, H. Zhang, G. Hjálmt`ysson, and A. Greenberg. Routing Design in Operational Networks: A Look from the Inside. In Proc. ACM SIGCOMM, Portland, OR, Aug. 2004.
[16] S. Raghavan, R. Rohana, D. Leon, A. Podgurski, and V. Augustine. Dex: A semantic-graph differencing tool for studying changes in large code bases. 2004.
[17] Really Awesome New Cisco ConfIg Differ (RANCID). http://www.shrubbery.net/rancid/, 2004.
[18] Y. Sung, S. Rao, S. Sen, and S. Leggett. Extracting Network-Wide Correlated Changes from Longitudinal Configuration Data. In Proc. PAM, Seoul, South Korea, Apr. 2009.
[19] G. Xie, J. Zhan, D. Maltz, H. Zhang, A. Greenberg, G. Hjalmtysson, and J. Rexford. On static reachability analysis of IP networks. In IEEE INFOCOM, volume 3, pages 2170–2183, 2005.