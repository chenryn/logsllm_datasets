title:Exploiting smart-phone USB connectivity for fun and profit
author:Zhaohui Wang and
Angelos Stavrou
Exploiting Smart-Phone USB Connectivity
For Fun And Proﬁt
Zhaohui Wang
Department of Computer Science
George Mason University, Fairfax, VA
PI:EMAIL
Angelos Stavrou
Department of Computer Science
George Mason University, Fairfax, VA
PI:EMAIL
ABSTRACT
The Universal Serial Bus (USB) connection has become the
de-facto standard for both charging and data transfers for
smart phone devices including Google’s Android and Ap-
ple’s iPhone. To further enhance their functionality, smart
phones are equipped with programmable USB hardware and
open source operating systems that empower them to al-
ter the default behavior of the end-to-end USB communi-
cations. Unfortunately, these new capabilities coupled with
the inherent trust that users place on the USB physical con-
nectivity and the lack of any protection mechanisms render
USB a insecure link, prone to exploitation. To demonstrate
this new avenue of exploitation, we introduce novel attack
strategies that exploit the functional capabilities of the USB
physical link. In addition, we detail how a sophisticated ad-
versary who has under his control one of the connected de-
vices can subvert the other. This includes attacks where a
compromised smart phone poses as a Human Interface De-
vice (HID) and sends keystrokes in order to control the vic-
tim host. Moreover, we explain how to boot a smart phone
device into USB host mode and take over another phone
using a specially crafted cable. Finally, we point out the un-
derlying reasons behind USB exploits and propose potential
defense mechanisms that would limit or even prevent such
USB borne attacks.
1.
INTRODUCTION
Recent advances in the hardware capabilities of the mo-
bile hand-held devices have fostered the development of open
source operating systems for mobile phones. These new gen-
eration of smart phones such as iPhone and Google Android
phone are powerful enough to accomplish most of the tasks
that previously required a personal computer. Indeed, this
newly acquired computing power gave rise to plethora of ap-
plications that attempt to leverage the new hardware. This
includes Internet browsing, email, GPS navigation, messag-
ing, and custom applications to name a few. In addition,
the ubiquitous use and the wide-spread adoption of Univer-
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ACSAC ’10 Dec. 6-10, 2010, Austin, Texas USA
Copyright 2010 ACM 978-1-4503-0133-6/10/12 ...$10.00.
sal Serial Bus (USB) [7] led the phone device manufacturers
to equip the majority of third-generation phones with USB
ports.
In fact USB is currently employed as a means of
charging, communicating, and synchronizing the contents of
the phone with computers and other phones. Moreover, to
support an open programming model that allow third party
developers to contribute their applications, these new de-
vices come with an extended set of features. These features
enable them use the USB interface to perform more complex
functions including data and application synchronization.
In this paper, we assume the role of an adversary and
study the new threats that stem from the use of USB in-
terface to connect, synchronize, and program the mobile de-
vice. Unlike the network and bluetooth communications for
mobile devices that have defense mechanisms in place, USB
traﬃc is not authenticated, ﬁltered, or vetted. For example,
to establish bluetooth connectivity, the user is required to
enter a password to establish connection between unpaired
devices. Moreover, all cellular and wireless communication
connections and packets are inspected by stateful ﬁrewall
or intrusion detection systems. On the other hand, USB
connections are overlooked both by the users and by the de-
fenses and are assumed as a trusted communication channel.
This inherent trust is rooted in the belief that physical prox-
imity implies trust. To debunk that myth, we explain how
software vulnerabilities in today’s mobile devices can spread
through the USB interface and aﬀect both the USB device
and the host that is connected to.
This new threat vector creates the potential for malware
to take over a smart phone device when the device is con-
nected via standard USB to an infected computer and vice-
versa. In practice, a malicious host can abuse the USB con-
nection to unlock and ﬂash the software of the phone by-
passing all software and hardware defenses. Reversely, we
show how a malicious smart phone device can take over a
computer by posing as a Human Interface Device (HID) such
as a keyboard or a mouse among others. Additionally, we
detail how an adversary can abuse the inherent USB mount-
ing and synchronization capabilities to run malicious code
on the host computer. To make matters worse, we illustrate
attacks that can empower an infected smart phone to con-
nect and take over another smart phone by placing its USB
connection into the USB-host mode. Current smart phone
devices run full-ﬂedged mobile operating systems. These
mobile operating systems provide a programmable interface
to control the existing USB ports thus empowering them
to launch attacks against desktop computers rather than
merely acting as a USB storage device.
357
In addition, in most cases, smart phones connect to one or
more desktop systems for ﬁle backup, data synchronization
in addition to charging the battery. The strong coupling re-
lationship between the device and the desktop system makes
either side vulnerable to attacks that exploit this tight and
trusted coupling when the other is compromised. Most end-
users have little or no knowledge about the system running
on the phone. To make matters worse, the device vendors
lock the phone by default disallowing the end-users from
having full access to the device. In the meantime, locking
the device does not prevent or even deter an experienced
adversaries or malicious code from attacking the mobile de-
vices. Moreover, the USB functionality on the smart phone
can be programmed to play the role of a USB host and drive
other “peripheral” devices. This can be leveraged to attack
other USB devices including smart phones.
[10].
Furthermore, currently USB-borne attacks are not con-
sidered as a problem: most of the current mobile security
research focus on malicious applications [21, 19, 11]. This
includes mobile phone rootkits such as Cloaker [12] and oth-
ers
In addition, drive-by downloads from untrusted
sources, execution of foreign code, leaking of sensitive infor-
mation, corruption and ﬁle integrity are just a few among
the current threats that the mobile phones face. Unlike pre-
vious research, we focus on the new avenues of infection
that go beyond the regular software vulnerabilities spread
via the cellular or network connections. Our aim is to study
and model new possible mechanisms available to mobile mal-
ware through exploiting the technical capabilities of the mo-
bile device. We don’t devise new exploit payloads but rather
expose new avenues of automatic and stealthy exploitation.
Any existing or future exploits can take advantage of this
new ways to spread and propagate between devices.
The main contributions of this paper are summarized as
follows:
• We are the ﬁrst to study attacks that take advantage
of the USB interface connectivity and utilize it as an
avenue of exploitation. To that end, we show how
malicious code can leverage USB as a new infection
vector for propagation and self-replication.
• We present examples of attacks for three basic con-
nectivity scenarios: Phone-to-Computer, Computer-
to-Phone, and Phone-to-Phone. Also, we provide a
detailed description of the required steps for attacks
in each scenario. We demonstrate that it’s enough for
an adversary controlling one end of the USB connect-
ing ends to infect the other end.
• Finally, we discuss the potential defenses based on
common limitations of such USB-borne attacks.
The rest of this paper is organized as follows: Section 2
introduces the motivation and background about contem-
porary smart phone devices. The threat model and the de-
scription of the new USB attacks are presented in Section 3.
We discuss the underlying limitations of attacks as well as
potential defenses in Section 4. Section 5 presents security
related research on mobile device and mobile operating sys-
tem security and Section 6 concludes this paper.
2. MOTIVATION & BACKGROUND
2.1 Motivation
Currently, USB connections are inherently trusted and as-
sumed secure by the users. This can be partly attributed to
the physical proximity of the device and the desktop system
and the fact that, in most cases, the user owns both systems.
However, as we show, this trust can be easily abused by a
malicious adversary. For instance, in a typical usage sce-
nario, an unsuspected user connects the smart phone device
to her computer to charge its battery and to synchronize
the two devices including her contact list, calendar and me-
dia content. All of these tasks are performed automatically
either completely transparently to the user or with mini-
mal user interaction: the simple press of a mouse click upon
connecting the USB cable. To make matters worse, the com-
puter is completely unaware of the type of the device that
is connected to the USB port. As we elaborate later, this
observation can be exploited by a sophisticated adversary
to launch attacks against the desktop system. Furthermore,
there are no mechanisms to authenticate the validity of the
device that attempts to communicate with the host. This
lack of authentication allows the connecting device to dis-
guise and report itself as another type of USB device, abus-
ing the ubiquitous nature operating system.
Traditionally, a smart phone device is connected to the
host as a peripheral USB device. Being controlled by the
host, the device is more prone to be taken over by a com-
promised computer. However, the potential attack surface
is much wider: the USB creates a bidirectional communica-
tion channel, permitting, in theory, exploits to traverse both
directions. New generation phones are equipped with com-
plete operating systems which make them as powerful as a
desktop system. These recent hardware advancements en-
ables them to perform attacks that are far beyond their pre-
vious computational and software capabilities. Additionally,
unlike desktop computers and servers that do not change
their physical location, phones are mobile. This empowers
them to potentially communicate to an even larger number
of un-infected devices across a wider range of administrative
domains. For example, a smart phone left unattended for
a few minutes can be completely subverted and become an
point of infection to other devices and computers. Lastly,
because USB-borne attacks have not been seen before, there
are no defenses in place to prevent them from taking place
or even detect them.
In the meantime, the lack of deployed USB defenses or de-
tection mechanisms empowers the attacks to remain stealthy.
Currently, the only instance of USB-borne threats is ﬂash
drive viruses spreading from USB ﬁles. However, the new
smart phones are capable of accomplishing a much more
powerful and widespread propagation of malfease. The prop-
agation that can be caused by this new infection vector goes
beyond viruses that are passively hidden in traditional USB
storage devices. The above observations motivate our study
of this new infection vector that is spurred by the new tech-
nology trends, as well as propose potential defenses.
In the next section, we brieﬂy introduce hardware and
software background information necessary to understand
the technical details behind the new USB attacks. Even
though we implemented the attacks using speciﬁc devices,
the threats that the USB connectivity raise apply in general
to all smart phone devices.
358
Devices
iPhone/iTouch
Motorola Droid and other Android based Micro USB AB
HTC Windows CE-Based
Old Nokia models
Google’s Nexus One
Micro HTC ExtUSB with 11-pin connector
Pop-Port connector
Micro USB AB
USB interface types
Apple Proprietary 5-pin wide USB
Table 1: USB interfaces of various mobile devices.
Figure 1: The logical communication channels of the composite USB Device as they appear in Windows XP
systems.
2.2 Background
Here, we discuss the background information and the spe-
ciﬁc devices employed in our experiments. In 2008, Google
and Open Handset Alliance launched Android Platform[1]
for mobile devices. Google’s Android is a comprehensive
software framework for mobile communication devices (i.e.,
smart phones, PDAs). The Android framework is an full
operating system including system library ﬁles, middleware,
and a set of key applications.
Nowadays, most smart phones are equipped with a Mini
USB or Micro USB interface for PC to phone connectivity.
This USB interface provides the physical link for the syn-
chronization of contacts and calendar data. Table 1 gives
the diﬀerent USB interfaces with diﬀerent devices.From the
operating system point of view, all Android driven devices
contain more than one interface descriptor, which is known
as a composite USB device. This physical link can be mul-
tiplexed: with a single physical USB interface, the device
can act as multiple devices simultaneously as long as they
comply with the USB speciﬁcation.