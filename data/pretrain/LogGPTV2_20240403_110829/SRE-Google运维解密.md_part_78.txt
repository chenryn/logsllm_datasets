注5DoubleClick for Publisher是一个给出版商的工具，管理在他们的网站和在他们的应用程序上展示的广
并且使用约1000个CPU和8TB的内存来索引每天100TB的数据。
数据，生成一系列索引文件，以便在全球各地对外服务。该系统分布在多个数据中心中，
者就负责该服务系统的一部分。如图31-1所示，该系统不断地提取和处理来自数据库的
Google内部进行了多个涉及数据库的大型迁移项目。其中一个项目是将DoubleClickfor
的新数据库技术的引入，如Spanner（参见文献[Cor12]）和F1（参见文献[Shu13]）
组件移植到一个更新的技术上，或者是更新组件以支持新的数据格式。随着全球部署
从现有的服务迁移到新的服务上在Google内部是很常见的。典型的例子包括将服务
案例分析：将DFP迁移到F1
主要的工作一
流程（参见文献【kla12]）来跟踪这样的工作。对于某些服务团队，这样的协作是他们
计新系统时，有SRE参与对所有人都有帮助。一般来说，我们使用目标和关键结果（OKR）
架构和软件的行为提供建议，后期进行这些改造是相当困难的（如果可能的话）。在设
在设计阶段的早期，最理想的状态是在任何一行代码还没有被提交之前。SRE最适合为
正如前文所述，以及第32章中描写的那样，产品开发组织和SRE之间的合作最好发生
SRE与其他部门之间的协作
的管理方式。如果项目增长迅速，那么也有必要开展更全面的项目管理。
规模开始，所以项目管理成本应该相应保持较低的水平。随着项目的发展逐渐改变项目
最后，采用一个适合当前项目状态的项目管理方式。不管多么雄心壮志的项目也要从小
置举办峰会，这样可以让与会者都没有“主场优势”。
个解决设计问题和目标的好机会。在中立性很重要的情况下，应该选择在一个中立的位
的话，应该组织一个团队会议，让团队的所有成员都可以进行互动。举办一次峰会是一
要的。如果可以的话，应该让项目的领导者亲自与其他成员会面。如果时间和预算允许
虽然一些当面交流可以用视频会议和良好的书面沟通暂时替代，最终的当面交流还是必
前推进。随着时间的推移就能建立一个最佳实践的集合，这会有助于新人更快上手。
如果不能够达成一致，就需要挑选一个每个人都尊重的仲裁员来做出决定，并且再次向
是也要设置一个严格的时间限制。选择一个解决方案，将它记录下来，然后继续推进项目。
个建立团队规范的起点。每当发生一次辩论时，都应该在团队内部进行充分地论证，但
标准化是很重要的。编码风格指南是一个很好的开始，但它们通常是战术性的，只是一
告。
第31章SRE与其他团队的沟通与协作
一跟踪新的设计，提出建议，帮助实施这些建议，并且一直部署到生产环境。
---
## Page 423
施方案与其他现存的从F1提取和处理数据的服务很类似。因此，我们可以保障这个方
保资源使用量与提取数据量维持线性增长，容量规划，以及其他许多方面。新的基础设
了的数据（而不是整个数据库），如何承受一些物理机器的损失而不影响服务，如何确
程。这涉及设计如何从F1中提取出不同的表，如何过滤和合并数据，如何只提取改变
拥有可扩展地进行提取和处理数据的广泛知识的SRE们主导了对基础设施改动的设计过
定程度上依赖于基础设施的变化。由于这个原因，项目是以设计新的基础设施开始的；
通过举行每周例会的方式来同步项目的进度。在这个具体案例中，业务逻辑的变化在一
从该项目一开始，产品开发和SRE团队就都清楚他们必须建立起非常紧密的合作，最后
可扩展性和可靠性方面的知识。
客户端类库），由于SRE经常在不同的服务之间重用相同的技术，他们有很多保证软件
通常对于软件的基础设施建设部分有更多的专业知识（例如分布式存储系统或数据库的
logic)，并且他们与产品经理和实际产品的“业务需求”联系更紧密。相反，SRE团队
作为该系统的主要开发人员，产品研发团队通常来说更加熟悉软件的业务逻辑（business
队和SRE团队从一开始就密切合作开发新的索引I服务。
品需要我们完成一个实时的迁移，而且不能中断服务。为了实现这一目标，产品研发团
关的组件，这样从用户的角度来看是一次无缝迁移。另外一个附加的限制条件是，该产
到F1上，让它可以产生一个与现有系统相同的输出。这可以使我们不修改任何服务相
Protobuf的能力，数据库表结构也被大幅重构和简化过了。目标是将数据处理系统迁移
迁移过程很复杂：除了迁移到一个新的技术之外，由于F1提供了在列中存储和索引
图31-1：一种通用的广告服务系统
tise
tise
Indexing System
Files
Index
案例分析：将DFP迁移到F1
-→WebServers
User
User
381
439
438
---
## Page 424
382
决问题的通用方法，以及可以集合更多力量解决更困难的问题。
SRE团队之间的协作存在一定的困难，但是也存在巨大回报。这种回报包括建立一套解
维持SRE团队之间以及和各种伙伴团队有效联系的工具和技术。
鉴于SRE团队全球分布的特性，有效的沟通是非常重要的。本章讨论了SRE团队用来
发布。发布过程非常成功，非常平稳，没有造成任何用户可见的问题。
当服务准备好之后，SRE与产品开发团队共同准备了一份发布计划，SRE进行了最后的
程师完成，但在这个案例中是由SRE完成的，因为这样可以加快迁移速度。
本的发布流程，其中包括对发布结果的校验。这种任务通常由产品研发团队或是发布工
运行程序和增加监控规则，同时对on-call工程师进行培训。SRE团队同时建立了一个基
务逻辑。与此同时，SRE团队开始准备生产环境：在不同的数据中心配置必要的资源
代解决这些问题：针对每一个广告他们会找出造成差异的原因，以便修复产生问题的业
异（由新的数据格式下的一些边缘情况导致）。产品开发团队能够利用这个环境快速迭
运行）产出的索引相匹配。不出所料，验证过程中显示出了新老业务逻辑之间存在的差
测试：旧的服务（在生产环境中运行的）产出的广告索引必须与新服务（在测试环境下
时业务逻辑的开发仍在进行中。产品开发团队使用这个测试环境来进行新服务的正确性
步骤对确认新服务的正确性是非常有必要的—特别是在性能和资源利用率方面—这
在该项目的后期，SRE开始在一个与生产环境很接近的测试环境中部署新的服务。这个
方式可以让两个团队更快了解变化，并且更快速地实施变化。
务逻辑的开发。同样的，产品开发团队会让SRE随时了解业务逻辑的变化。当业务逻辑
们就明确定义了基础设施和业务逻辑之间的接口，这样可以让产品研发团队独立进行业
而不是重复地取出全部数据；业务逻辑层面就必须适应这个新的做法。在很早之前，我
业务逻辑可以将此作为依据进行设计。比如，设计中新的基础设施仅仅取出变化的数据。
终敲定了一个全体同意的设计方案。这样的一个文档清晰地定义了新的基础设施的变化，
队和SRE团队都对该文档进行了详细的评审，调整了一些细节以应对一些边缘情况，最
在新的基础设施进行具体开发之前，两个SRE书写了一份详细的设计文档，产品研发团
案的可行性，同时也可以重用现存的部分监控组件和工具。
第31章SRE与其他团队的沟通与协作
---
## Page 425
效益，让产品变得更可靠，同时又使整体流程更具扩展性。这能够避免一定的认知过载
发团队在一个通过SRE验证的基础设施平台上进行产品开发。建立这个平台将具有双重
其次，也许是最好的方式，与其创造很多各异的个体系统交给SRE运维，不如直接让研
不需要再花时间去修复设计或者实现中隐藏的问题。
时，新服务“接手”阶段会很短，而且一般“出厂”时就非常可靠。通常这是因为我们
的时机越早，该服务的质量提升越快，最终质量也越好。当SRE从早期设计阶段就介入
至少有两种更好的方式可让SRE用他们的丰富生产环境经验帮助新老服务。
虽然这种做法是很常见的，而且是处理既成事实的合理的方式，但是我们在这里提出，
SRE团队一般按照优先级顺序逐步接手各种服务的运维工作，低优先级的服务要等待高
手（onboarding）。如果你目前的环境中有许多完善程度参差不齐的服务，那么新组建的
如何改善任何不足之处，以及确定最终交接给SRE运维的流程。我们将该流程称为接
需要有一个评估服务的流程，该流程确保服务符合SRE的要求，同时与研发团队协商
Google内部只有很少一部分的服务是在一开始就由SRE负责运维的，这就意味着SRE
本书余下的大部分内容讨论的是当SRE已经在负责运维某项服务的工作时会发生什么
SRE参与模式：是什么、
首先，和软件工程学中的经验一样一
优先级的服务接手之后才会被考虑。
SRE参与模式的演进历程
—错误越早被发现，就越容易修复它—SRE参与
作者：Acacio Cruz、Ashish Bhambhani
怎么样以及为什么
编辑：BetsyBeyer、TimHarvey
第
32章
383
<41
---
## Page 426
443
442
的几个方面，统称为“生产方面”。这些方面包括以下内容：
SRE承担重要服务的生产运维的责任，是为了提高该服务的可靠性。SRE会考量该服务
SRE参与模型
图32-1：一个典型的服务生命周期
Engagement Model）以及SRE平台的构建来扩大 SRE的影响力的。
图32-1描绘了一个典型服务的生命周期。PRR评审可以在其生命周期的任何一点开
意承担该服务的运维责任。
所学到的经验来确保服务生产运行中的可靠性。只有通过PRR评审，SRE团队才会同
服务的具体细节来找出在可靠性方面的欠缺之处。通过PRR流程，SRE寻求运用他们
SRE参与一个项目时，最典型的第一步是进行生产就绪程度评审（PRR）。该流程根据
PRR模型
在接下来的章节中，我们会讨论上述每一种参与模型。先从最经典的PRR驱动模型开始。
问题，并且通过推广公共基础设施的做法，让产品开发团队专注于他们最应该关注的地
384
型，然后讨论SRE是如何通过对这种模型的修改，也就是扩展参与模型（Extended
始，但是随着时间的推移，SRE会参与越来越多的阶段。本章介绍了一种简单PRR模
方一
一在应用程序层的创新。
第32章SRE参与模式的演进历程
构建与实现
退役
运维
发布
设计
4
---
## Page 427
这种咨询工作的范围肯定是非常宽泛的，因为一般来说，SRE也不可能在有限的时间内
地方，并且讨论可以用于提高生产服务质量的一些常见解决方案。这里的建议可能直接
见第27章）的大部分时间都是与开发团队进行咨询工作。其他的SRE团队也经常参与
发团队负责维护。开发者可以通过遵循这些建议，实现其中描述的方案来提高他们的服
（production guide）记录了生产运维中的最佳实践，由那些经验丰富的SRE团队以及研
SRE对内部的技术与那些被广泛使用的系统提供了开发指南。Google的生产指南
作来帮助研发部门改进其生产运维。
当 SRE无法对某项服务提供全方位的支持时，我们会提供其他选项，例如文档和咨询工
不是所有的Google服务都有 SRE的紧密参与。有以下几个原因：
替代性支持
容易。
SRE参与运维服务的目标是在这些方面进行改善，这样可以让该服务的生产运维变得更
来自于前面提到的“生产指南”。
计和实现要点。负责该咨询工作的SRE随后会与研发团队碰面，指出一些风险性较大的
的意见和建议。这种发布前的咨询工作通常需要一个或两个SRE花费几个小时来学习设
在一项新的服务或新的功能开发完成之后，开发者在进入发布阶段之前通常会征求SRE
这些咨询。
开发者同时也可以寻求SRE咨询，来讨论服务的具体问题。
咨询工作
务质量。
文档
·开发团队的数量总是会超过SRE团队的可支持的数量（参见第1章）。
·许多服务不需要高可靠性和高可用性，可以通过其他方式支持该服务，
性能：可用性、延迟和资源效率
变更管理
容量规划
紧急事件处理
指标的选择、度量和监控