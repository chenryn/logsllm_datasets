# The Tangled Genealogy of IoT Malware

## Authors
- Emanuele Cozzi, EURECOM, Sophia Antipolis, France
- Pierre-Antoine Vervier, France
- Matteo Dell'Amico, France
- Yun Shen, NortonLifeLock, Inc., Reading, United Kingdom
- Leyla Bilge, NortonLifeLock, Inc., Sophia Antipolis, France
- Davide Balzarotti, EURECOM, Sophia Antipolis, France

## Abstract
The recent proliferation of consumer off-the-shelf embedded (IoT) devices and the rise of large-scale IoT botnets have significantly increased the volume and sophistication of Linux malware observed in the wild. While the security community has made substantial efforts to document these threats, analysts primarily rely on manual work, which is difficult to scale and maintain. Additionally, the extensive code reuse in IoT malware calls for an automated approach to detect similarities and identify the phylogenetic tree of each family.

In this paper, we present the largest measurement of IoT malware to date. We systematically reconstruct the lineage of IoT malware families using binary code similarity, tracking their relationships, evolution, and variants. Our analysis is based on a dataset of over 93,000 samples submitted to VirusTotal over a period of 3.5 years. We discuss our findings and present several case studies to highlight the complex relationships among IoT malware.

## CCS Concepts
- **Security and Privacy**: Software and application security; Malware and its mitigation.

## Keywords
Malware, IoT, Classification, Measurement, Lineage

## ACM Reference Format
Emanuele Cozzi, Pierre-Antoine Vervier, Matteo Dell’Amico, Yun Shen, Leyla Bilge, and Davide Balzarotti. 2020. The Tangled Genealogy of IoT Malware. In Annual Computer Security Applications Conference (ACSAC 2020), December 7–11, 2020, Austin, USA. ACM, New York, NY, USA, 16 pages. https://doi.org/10.1145/3427228.3427256

## Permissions
Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than the author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org.

### ACSAC 2020, December 7–11, 2020, Austin, USA
© 2020 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-8858-0/20/12...$15.00
https://doi.org/10.1145/3427228.3427256

## 1 Introduction
Over the past few years, there has been a significant increase in both the volume and sophistication of malware targeting IoT systems. Traditional botnets and DDoS tools now coexist with crypto-mining, spyware, ransomware, and targeted samples designed for cyber espionage. The public availability of source code for some major IoT malware families has led to a multitude of variants and complex relationships of similarities and code reuse. To understand this evolution, the security community has devoted considerable effort to analyzing and documenting these emerging threats, often through blog posts and the definition of Indicators of Compromise (IoCs). However, these reports provide a fragmented view of the IoT malware ecosystem.

On the academic side, Cozzi et al. [12] conducted the first large-scale study of Linux malware using a combination of static and dynamic analyses. They studied the behavior of 10,000 samples collected between November 2016 and November 2017, focusing on the sophistication of IoT malware in terms of persistence mechanisms, anti-analysis tricks, packing, etc. Antonakakis et al. [3] dissected the Mirai botnet, providing a detailed investigation into its operations, while Pa et al. [35] and Vervier et al. [45] used IoT honeypots to measure the infection and monetization mechanisms of IoT malware.

Despite these efforts, little is known about the dynamics behind the emergence of new malware strains. Currently, IoT malware is classified based on labels assigned by antivirus (AV) vendors, which are often coarse-grained and unable to capture the continuous evolution and code sharing that characterize IoT malware. For example, it is unclear how many variants of the Mirai botnet have been observed in the wild and what distinguishes each group. We also have a limited understanding of the inner relationships linking popular families such as Mirai, Gafgyt, and VPNFilter.

This paper aims to fill this gap by proposing a systematic way to compare IoT malware samples and display their evolution in easy-to-understand lineage graphs. While there is a large body of work focused on clustering traditional malware [5, 6, 25, 29, 38] and exploring their lineage [15, 24, 26, 28, 31, 33], the peculiarities of IoT malware require customized techniques. The current number of samples and the general lack of code obfuscation make it possible, for the first time, to draw a complete picture of the entire IoT malware ecosystem.

Our main contributions are twofold:
1. We present an approach to reconstruct the lineage of IoT malware families and track their evolution. This technique allows us to identify various variants of each family and the intra-family relationships due to code reuse.
2. We report on the insights gained by applying our approach to the largest dataset of IoT malware ever assembled, which includes all malicious samples collected by VirusTotal between January 2015 and August 2018. Our lineage graphs enabled us to quickly discover over a hundred mislabeled samples and assign the proper name to those for which AV products did not reach a consensus. Overall, we identified and validated over 200 variants in the top families alone, showing the speed at which new variants were released and measuring how long new samples belonging to each variant appeared on VirusTotal. By examining changes in functions, we also identified a constant evolution of thousands of small variations within each malware variant. Finally, our experiments highlight the frequent code reuse and tangled relationships among all IoT families, complicating the problems of assigning names to samples and clearly separating the end of one family from the beginning of another.

We make the full dataset and raw results available to researchers. We also share high-resolution figures of the lineage graphs for ease of exploration.

### 1.1 Why This Study Matters
IoT malware is an important emerging phenomenon, not just because of its recent development but also because IoT devices may not be able to run anti-malware solutions comparable to those used to protect desktop computers. To design new solutions, the security community needs to precisely understand the characteristics of the current threat landscape. This need has prompted researchers to conduct several measurement studies, such as the impact of the Mirai botnet [3] or the techniques used by Linux-based malicious samples [12].

This work follows the same direction but is over one order of magnitude larger than previous studies and includes all malicious samples submitted to VirusTotal over a period of 3.5 years. The scale of the measurement necessitated replacing manual analysis with fully automated comparison and clustering techniques.

Our findings are not just curiosities but carry important consequences for future research. For example, static analysis was the preferred choice for program analysis until researchers showed that the widespread use of packing and obfuscation made it unsuitable in the malware domain [34]. Our work shows that this is not yet the case in the IoT space, and that today, static code analysis provides more accurate results than looking at dynamic sandbox reports or static features. The fragmentation of IoT families also casts doubt on the ability of AV labels to characterize the complex and tangled evolution of IoT samples.

Finally, while not our main contribution, our work also reports on the largest clustering experiments conducted to date on dynamic features extracted from malicious samples [5, 6, 25].

## 2 Dataset
To study the genealogy of IoT malware, our first goal was to collect a large and representative dataset of malware samples. We downloaded all ELF binaries submitted to VirusTotal [2] over a period of almost four years (from January 2015 to August 2018) and flagged as malicious by at least five antivirus (AV) vendors. Since our focus is on malware targeting IoT devices, we excluded Android applications and shared libraries. We also removed samples compiled for Intel and AMD architectures, as it is challenging to distinguish binaries for embedded devices from those for Linux desktop systems. This selection resulted in a dataset of 93,652 samples, one order of magnitude larger than any other study on Linux-based malware. As a comparison, the largest measurement study to date was performed on 10,548 Linux binaries [12], of which 64.56% were malware targeting x86 desktop computers. That dataset aimed to study the general behavior of modern Linux malware rather than the tangled relationships between them.

We could have extended our dataset to include Linux malware for desktops and servers, but we chose to focus specifically on IoT malware due to its high infection rate on real devices and the variety of underlying hardware architectures. This likely requires platform customizations implemented as ad-hoc malware variants. Less common architectures are more likely to show small details that are often ignored in more extensively studied counterparts like x86.

Figure 1 shows the volume of samples in our dataset submitted to VirusTotal over the data collection period and the dramatic increase in the number of IoT malware samples after the outbreak of the infamous Mirai botnet in October 2016. Before that, the number of malicious IoT binaries was very low. For instance, only 363 of our 93K samples were observed in that period. This number progressively increased to an average of 7.8k new malicious binaries per month in 2018. This trend can be attributed to several factors, including the evolving IoT threat landscape [27, 42, 43, 45], the availability of source code for several popular families [27], and the proliferation of IoT honeypots that allowed researchers to rapidly collect a large number of samples spreading in the wild [45].

Table 1 reports the compilation details of the samples in our dataset. The first two architectures, ARM 32-bit and MIPS I, account for two-thirds of all samples. This can be explained by the popularity of these processor architectures in consumer IoT devices, such as home routers, IP cameras, printers, and NAS devices. Another interesting aspect is that almost 95% of the ELF files in our dataset were statically linked. Additionally, as noted by Cozzi et al. [12], a large fraction of them (roughly 50% in our dataset) have not been stripped of their symbols.

### Table 1: Breakdown of Samples per Architecture
| CPU Architecture | Samples No. (%) |
|------------------|-----------------|
| ARM 32-bit       | 36,574 (39.05)  |
| MIPS I           | 25,201 (26.91)  |
| PowerPC 32-bit   | 10,916 (11.66)  |
| SPARC            | 8,412 (8.98)    |
| Hitachi SH       | 6,477 (6.92)    |
| Motorola 68000   | 5,982 (6.39)    |
| Tilera TILE-Gx   | 27 (0.03)       |
| ARC International ARCompact | 27 (0.03) |
| Interim Value tba | 9 (0.01)        |
| SPARC Version 9  | 8 (0.01)        |
| PowerPC 64-bit   | 6 (0.01)        |
| Others           | 13 (0.01)       |
| Total            | 93,652          |

### Dynamically Linked
| Status          | Samples No. |
|-----------------|-------------|
| Stripped        | 645         |
| Unstripped      | 345         |
| Total           | 990         |

### Statically Linked
| Status          | Samples No. |
|-----------------|-------------|
| Stripped        | 46,604      |
| Unstripped      | 46,062      |
| Total           | 92,666      |

### Total
| Status          | Samples No. |
|-----------------|-------------|
| Stripped        | 47,249      |
| Unstripped      | 46,407      |
| Total           | 93,656      |

Note: There is a discrepancy in the total count due to rounding and categorization.