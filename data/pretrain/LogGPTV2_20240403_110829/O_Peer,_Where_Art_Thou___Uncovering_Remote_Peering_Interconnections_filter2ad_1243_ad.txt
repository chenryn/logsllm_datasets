w.r.t. the given peer. In this case we do not make an inference yet,
but instead we leverage multi-IXP router and private connectivity
information (see Section 5.1) as described in the following steps.
Combining RTT values with colocation information allows us to
alleviate false positives caused by wide-area IXPs. Figure 7 shows
an example of such a case, based on the topology of the NL-IX
7 Out-of-bounds outliers do not impact the high accuracy of this step (see Table 4).
7
IXP. The IXP has distributed its peering fabric across multiple cities,
including Amsterdam, Brussels, London, Frankfurt and Vienna. Our
measurement VP is in an IXP facility in Amsterdam, from which we
ping the IXP peering interfaces. Assume that for an interface IPx
we measure an RTTmin of 4ms. Without taking into consideration
the geographical footprint of the IXP’s infrastructure we would
infer the corresponding peer as remote assuming a “reasonable” (see
Fig. 1b) 2ms-threshold. Instead, we find that the IXP has two feasible
facilities (London and Frankfurt) in the ring between d1 = 532km
and d2 = 299km from the VP, as defined by our vmax (green area)
and vmin (red area) bounds respectively, allowing us to infer as
local the IXP members colocated at these facilities.
Similarly, we can avoid false negatives due to remote peers that
are in close proximity to the IXP. For instance, for a peer located in
Rotterdam connected remotely to the IXP’s facility in Amsterdam
(57km distance) we will typically measure RTTmin < 2ms. By using
the peer’s collocation data we can correctly determine that, despite
the low RTT, the peer is not local.
Step 4: Multi-IXP router inference. The previous steps may not be
able to infer the peering type due to missing facility data or missing
RTT values from unresponsive IXP interfaces. In such cases, we
proceed to use the multi-IXP router feature (see Section 5.1.3), for
inferring remoteness (or locality).
x +1 }, where the interface IP I X P
To identify multi-IXP routers we first collect traceroute paths
from public RIPE Atlas measurements in the same period as our ping
campaign (two days). We then extract the IP-level IXP crossings,
as explained in Section 3.3, and we collect all sequences of hops
{IPx , IP I X P
x +1 belongs to the address
space of an IXP, and the interface IPx belongs to an AS that is a
member of this IXP. For each AS that appears to peer at more than
one IXP in different IXP crossings, we perform alias resolution on
all its IP interfaces using MIDAR [55] to map these interfaces to
routers8. For interfaces on the same router, we find the set of IXPs
that appear as next hops in traceroute paths. If a router appears to
have connections to more than one IXPs, we characterize it as a
multi-IXP router.
For example, assume two sequences of IP hops, {IPa, IPI X P1}
and {IPb , IPI X P2}, where both IPa and IPb are owned by the same
AS and are mapped to the same router R, and IPI X P1 and IPI X P2
belong to the peering LANs of IX P1 and IX P2, respectively. In this
case, R has layer-3 connectivity with both IXPs, and therefore we
characterize R as a multi-IXP router.
We then classify the multi-IXP routers in one of the categories
described in Fig. 3, and infer each one based on geolocation data
from Section 3.4 as follows:
(1) Local multi-IXP router: A multi-IXP router is local to all
involved IXPs (Fig. 3a), if (i) the involved AS has been inferred
as local peer –from previous steps– in at least one of the IXPs,
and (ii) the involved IXPs have at least one common facility.
Then the AS is inferred as a local peer to all involved IXPs.
(2) Remote multi-IXP router: A multi-IXP router is remote to all
involved IXPs (Fig. 3b), if (i) the involved AS has been inferred
8 There are two available datasets based on MIDAR: (i) one based on aliases resolved
with MIDAR and iffinder [32], yielding the highest confidence aliases with very
low false positives, and (ii) one also including aliases resolved with kapar [33], which
significantly increases coverage at the cost of accuracy. We selected the first dataset to
favor accuracy over completeness.
as remote peer –from previous steps– in at least one of the IXPs
(e.g., IX PR), and (ii) at least one of the following holds:
(a) all the involved IXPs have at least one common facility.
(b) the maximum distance between the facilities of any in-
volved IXP and IX PR, is smaller than the minimum possi-
ble distance dmin between all the facilities of the involved
AS and all the facilities where IX PR is present.
Then the AS is inferred as a remote peer to all involved IXPs.
(3) Hybrid multi-IXP router: A multi-IXP router is local to a
subset of the involved IXPs (Fig. 3c) and remote to another IXP
subset, if (i) the involved AS has been inferred as local peer
–from previous steps– in at least one of the IXPs (e.g., IX PL) of
the local subset, and (ii) at least one of the following conditions
is true for the remote subset:
(a) IX PL does not have any common facility with the other
involved IXPs.
(b) the minimum distance between the facilities of IX PL and
any other involved IXP, is larger than the maximum pos-
sible distance dmax between all the –common– facilities
where both the involved AS and IX PL are present.
Then the AS is inferred as a local peer to IX PL and remote peer
to all other involved IXPs in the remote subset.
To understand the intuition behind conditions 2(b) and 3(b),
assume that Rx ∈ ASx is a multi-IXP router peering with two
IXPs, IX Pams in Amsterdam, and IX Plon in London. The minimum
distance between the facilities of the two IXPs is 300km, while the
maximum distance is 360km. If from the first two steps we inferred
that ASx is remote to IX Pams, with dmin = 500km, then Rx cannot
be local to any facility of IX Plon (condition 2(b) holds). Similarly, if
we inferred that ASx is local to IX Pams with dmax = 50km, then
Rx cannot be local to any facility of IX Plon (condition 3(b) holds).
Step 5: Localization of private connectivity. If Steps 1-4 fail to infer
whether a peer is local or remote, we use the private connectivity
of an IXP member and apply a “voting” scheme similar to the
Constrained Facility Search (CFS) approach [48].
Let FI X P be the set of feasible facilities for the IXP, ASx an IXP
member identified based on the dataset of Section 3.2, and II X P the
set of all IP interfaces of the multi-IXP routers identified in Step 4.
(1) We parse all the collected traceroute paths, perform IP-to-AS
mapping [34] and extract all the AS sequences over private
interconnections (not over an IXP), i.e., from a sequence {IPi,IPj},
where IPi belongs to ASi and IPj to ASj ((cid:44) ASi), we extract the
sequence {ASi,ASj}. Let Ipriv be the set of all interfaces involved
in such private AS-level interconnections.
(2) We run alias resolution on the interfaces in II X P ∪ Ipriv, that
belong to IXP members for which we have not made an infer-
ence yet. For each router Rx (belonging to an ASx ) with at least
one interface i ∈ II X P , we compile the set Nx of the (private)
AS neighbors of ASx .
(3) Based on our AS-to-facility mapping from Section 3.4, we find
the most common facilities Fcommon among the majority of
the ASes in Nx .
If |FI X P ∩Fcommon| = 1, i.e., only one facility of the IXP belongs
to both sets, then we infer ASx as a local peer to the IX P. Other-
wise we infer the peer as remote to the IXP. The intuition behind
8
Methodology
Steps
Table 4: Validation of each step of the algorithm.
ACC
77%
-
FNR
Feature
RTTmin [36]
Port Capacity
RTTmin+Colo
COV
FPR
PRE
84%
17.5% 25.7% 85%
11%
96%
-
76%
1.1%
98.5% 95.6%
53%
93%
93%
7%
86.5%
90%
10%
49%
94.5% 93%
4%
95%
-
7%
7%
16%
7.2%
Step 4: Multi-IXP
Step 5:
Private Links
Combined
Step 1:
Step 2+3:
Table 4 shows the validation results for all IXPs in the test dataset,
for each step separately, as well as the entire algorithm.
State-of-the-art. As a baseline, we first validate the remote in-
ference when using only RTTmin (step 2), assuming a remoteness
threshold of 10ms [36], to quantify the improvement versus the
state of the art [36] achieved by our algorithm. RTTmin yields a
high F PR due to mis-inferring local peers at wide-area IXPs as
remote. We calculated that when excluding wide-area IXPs the F PR
of the RTTmin approach drops to 2%. At the same time, the F N R is
also high since many of the remote peers have RTTmin < 10ms.
Proposed methodology. When combining RTTmin with coloca-
tion data from Section 3.4 (step 3) we improve significantly all
validation metrics; only the coverage metric has a small decrease,
due to the fact that both latency and facility data are required. The
false-negative inferences of RTTmin + Colo are either due to spu-
rious colocation data, or reseller customers colocated at the IXP.
The latter false negatives are alleviated by taking into account Port
Capacity data as described in Section 3.2 (step 1). For port capacity
we validate only the precision metric, since we use it to infer only
remote peers. For the next two steps we utilize traceroute data from
Section 3.1. Specifically, the Multi − IX P step (step 4) also exhibits
very high PRE and ACC, but can be used only for half of the inter-
faces. Finally, the Private Links step (step 5) has the lowest ACC and
PRE compared to the other steps, but still outperforms vanilla RTT-
based inference and is used only as a “last-resort” heuristic. When
all the five steps are combined, they yield ∼95% ACC and PRE, and
cover 93% of the tested IXP interfaces. Fig. 8 shows the precision
and accuracy metrics per IXP in our test validation dataset, ordered
by the size of IXP. The results are consistent across all IXPs. For
SeattleIX we obtain the lowest precision (92%), due to incomplete
colocation data. Our inferences for LINX LON have the lowest ac-
curacy (91%), because of a higher –than the other IXPs– number
of colocated members connected through remote providers using
non-fractional ports. These inaccuracies may indicate potential
errors in the port capacities dataset.
6 INFERRING RP IN THE WILD
Here, we apply our inference methodology on the 30 largest IXPs in
our dataset, step by step (Section 6.1). Having inferred RP at IXPs,
we investigate some relevant use cases. Indicatively, we focus on
RP features in Section 6.2. We further study aspects of the evolution
of the RP ecosystem over time (Section 6.3), as well as routing
implications involving a large IXP (Section 6.4).
6.1 Application of Step-wise Inference
Step 1. We first infer the IXP members that reach the IXP through
resellers, by comparing the port capacities of each member against
9
Figure 8: Validation results per IXP in our test validation dataset.
this heuristic is that private interconnections are typically estab-
lished within the same facility, as explained in 5.1.4. Nonetheless,
we do not require all the private AS neighbors to be present in
Fcommon because tethered private interconnections across facili-
ties –although less common– are still possible [48].
It should be noted that our aim is not to pinpoint the exact AS
boundaries, nor to derive the AS-level topology from IP hops, both
of which have been shown to be non-trivial processes [59, 61].
Instead, we aim to infer a router’s colocation facility based on its
adjacent ASes. For example, a reply from a third-party interface
may result in a spurious AS-level link; however, the interface (no
matter to which AS it is mapped) belongs to the same router, and
thus the facility inference is not affected.
5.3 Validation
We validate each step of our methodology independently by com-
paring inference results (see Section 6.1) against the test subset of
the validation dataset (see Section 3.5). The validation metrics we
use and the sets that we consider are defined in Table 3. Note that
concerning validation data it holds that VDR ∩ VDL = ∅ (on
the interface level), and in the metrics we do not take into account
inferences for peers with no validation data (i.e., INF −VD = ∅).
Table 3: Validation Sets and Metrics for RP Inference.
Sets
Metrics
Name
VDR
VDL
VD
INFR
INFL
INF
COV
FPR
FNR
PRE
ACC
Definition
Remote Peers in Validation Dataset
Local Peers in Validation Dataset
VD = VDR ∪ VDL
Inferred Remote Peers
Inferred Local Peers
INF = INFR ∪ INFL
|INF∩VD|
|INFR∩VDL|
|INF∩VDL|
|INFL∩VDR |
|INF∩VDR |
|INFR∩VDR |
|INFR∩VDR |+|INFL∩VDL|
(False Positives rate)
(False Negatives rate)
(Coverage)
(Precision)
|INFR |
|VD|
|INF|
(Accuracy)
(a) Response rate of LGs and Atlas
Probes.
(b) ECDF of the the minimum RTT
for each responsive IXP peering inter-
face.