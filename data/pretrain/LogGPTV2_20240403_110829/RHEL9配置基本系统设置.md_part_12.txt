::: itemizedlist
**其他资源**
-   [挂起系统](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_basic_system_settings/shutting-down-suspending-and-hibernating-the-system_configuring-basic-system-settings#suspending-the-system_shutting-down-suspending-and-hibernating-the-system){.link}
:::
:::
::: section
::: titlepage
# []{#shutting-down-suspending-and-hibernating-the-system_configuring-basic-system-settings.html#overview-of-the-power-management-commands-with-systemctl_shutting-down-suspending-and-hibernating-the-system}使用 systemctl 的电源管理命令概述 {.title}
:::
您可以使用以下 `systemctl`{.literal} 命令列表来控制系统的电源管理。
::: table
[]{#shutting-down-suspending-and-hibernating-the-system_configuring-basic-system-settings.html#idm140217693328720}
**表 15.1. systemctl 电源管理命令概述**
::: table-contents
  `systemctl`{.literal} 命令           描述
  ------------------------------------ ------------------
  `systemctl halt`{.literal}           关闭系统。
  `systemctl poweroff`{.literal}       关闭系统。
  `systemctl reboot`{.literal}         重启该系统。
  `systemctl suspend`{.literal}        挂起系统。
  `systemctl hibernate`{.literal}      休眠系统。
  `systemctl hybrid-sleep`{.literal}   休眠并挂起系统。
:::
:::
:::
:::
[]{#assembly_working-with-systemd-unit-files_configuring-basic-system-settings.html}
::: chapter
::: titlepage
# []{#assembly_working-with-systemd-unit-files_configuring-basic-system-settings.html#assembly_working-with-systemd-unit-files_configuring-basic-system-settings}第 16 章 使用 systemd 单元文件 {.title}
:::
本章包含 [**systemd**]{.strong} 单元文件的描述。以下部分介绍了如何进行：
::: itemizedlist
-   创建自定义单元文件
-   将 SysV init 脚本转换为单元文件
-   修改现有单元文件
-   使用实例化单元
:::
::: section
::: titlepage
# []{#assembly_working-with-systemd-unit-files_configuring-basic-system-settings.html#con_introduction-to-unit-files_assembly_working-with-systemd-unit-files}单元文件简介 {.title}
:::
单元文件包含描述这个单元并定义其行为的配置指令。几个
`systemctl`{.literal}
命令可在后台使用单元文件。要进行更细的调整，系统管理员必须手动编辑或创建单元文件。[systemd
单元文件位置](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_basic_system_settings/introduction-to-systemd_configuring-basic-system-settings){.link}
列出了系统上存储单元文件的三个主目录，`/etc/systemd/system/`{.literal}
目录为系统管理员创建或自定义的单元文件保留。
单元文件名的格式如下：
``` literallayout
unit_name.type_extension
```
在这里，[*unit_name*]{.emphasis} 代表单元的名称，而
[*type_extension*]{.emphasis}
标识单元类型。有关单元类型的完整列表，请参阅 [systemd
单元文件](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_basic_system_settings/introduction-to-systemd_configuring-basic-system-settings#ref_systemd-unit-types_introduction-to-systemd){.link}
例如，系统通常会有 `sshd.service`{.literal} 和 `sshd.socket`{.literal}
单元。
可通过一个目录来补充单元文件，以了解额外的配置文件。例如，要将自定义配置选项添加到
`sshd.service`{.literal} 中，请创建
`sshd.service.d/custom.conf`{.literal}
文件并在其中插入其他指令。有关配置目录的更多信息，请参阅
[修改现有单元文件](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_basic_system_settings/assembly_working-with-systemd-unit-files_configuring-basic-system-settings#proc_modifying-existing-unit-files_assembly_working-with-systemd-unit-files){.link}。
另外, `sshd.service.wants/`{.literal} 和
`sshd.service.requires/`{.literal} 目录可以被创建。这些目录包含到
`sshd`{.literal} 服务依赖的单元文件的符号链接。符号链接会根据
\[Install\] 单元文件选项或在运行时根据 \[Unit\]
选项自动创建。也可以手动创建这些目录和符号链接。有关 \[Install\] 和
\[Unit\] 选项的详情请参考下表。
许多单元文件可以通过 [**unit specifiers**]{.strong} 设置 -
在单元文件被加载时，其中的通配符字符串会动态地被单元参数替换。这可让创建作为生成实例化单元的模板的通用单元文件。请参阅[使用实例化单元](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_basic_system_settings/assembly_working-with-systemd-unit-files_configuring-basic-system-settings#con_working-with-instantiated-units_assembly_working-with-systemd-unit-files){.link}。
:::
::: section
::: titlepage
# []{#assembly_working-with-systemd-unit-files_configuring-basic-system-settings.html#con_unit-file-structure_assembly_working-with-systemd-unit-files}单元文件结构 {.title}
:::
单元文件通常由三个部分组成：
::: itemizedlist
-   `[Unit]`{.literal} 部分 -
    包含不依赖于该单元类型的通用选项。这些选项提供单元描述，指定单元的行为，并将依赖项设置为其他单元。有关最常用
    \[Unit\] 选项的列表，请参阅 [重要 \[Unit\]
    部分选项](#assembly_working-with-systemd-unit-files_configuring-basic-system-settings.html#tabl-systemd-Unit_Sec_Options "表 16.1. 重要 [Unit] 部分选项"){.link}。
-   `[Unit type]`{.literal} 部分 -
    如果单元带有特定于类型的指令，则这些指令会在根据单元类型命名的部分下进行分组。例如，服务单元文件包含
    `[Service]`{.literal} 部分。
-   `[Install]`{.literal} 部分 - 包含 `systemctl enable`{.literal} 和
    `disable`{.literal} 命令使用的单元安装的信息。有关
    `[Install]`{.literal} 部分的选项列表，请参阅 [重要 \[Install\]
    部分选项](#assembly_working-with-systemd-unit-files_configuring-basic-system-settings.html#tabl-systemd-Install_Sec_Options "表 16.3. 重要 [Install] 部分选项"){.link}。
:::
::: itemizedlist
**其他资源**
-   [重要 \[Unit\]
    部分选项](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_basic_system_settings/assembly_working-with-systemd-unit-files_configuring-basic-system-settings#ref_important-unit-section-options_assembly_working-with-systemd-unit-files){.link}
-   [重要 \[Service\]
    部分选项](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_basic_system_settings/assembly_working-with-systemd-unit-files_configuring-basic-system-settings#ref_important-service-section-options_assembly_working-with-systemd-unit-files){.link}
-   [重要 \[Install\]
    部分选项](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_basic_system_settings/assembly_working-with-systemd-unit-files_configuring-basic-system-settings#ref_important-install-section-options_assembly_working-with-systemd-unit-files){.link}
:::
:::
::: section
::: titlepage
# []{#assembly_working-with-systemd-unit-files_configuring-basic-system-settings.html#ref_important-unit-section-options_assembly_working-with-systemd-unit-files}重要 \[Unit\] 部分选项 {.title}
:::
下表列出了 \[Unit\] 部分的重要选项。
::: table
[]{#assembly_working-with-systemd-unit-files_configuring-basic-system-settings.html#tabl-systemd-Unit_Sec_Options}
**表 16.1. 重要 \[Unit\] 部分选项**
::: table-contents
+----------------------------------+----------------------------------+
| 选项                             | 描述                             |
| [^\[a\]^](#assembly_wo           |                                  |
| rking-with-systemd-unit-files_co |                                  |
| nfiguring-basic-system-settings. |                                  |
| html#ftn.idm140217715057328){#as |                                  |
| sembly_working-with-systemd-unit |                                  |
| -files_configuring-basic-system- |                                  |
| settings.html#idm140217715057328 |                                  |
| .footnote}                       |                                  |
+:=================================+:=================================+
| `描述`{.literal}                 | 对这个单元的                     |
|                                  | 一个有意义的描述。这个文本显示在 |
|                                  | `systemctl status`{.literal}     |
|                                  | 命令的输出中。                   |
+----------------------------------+----------------------------------+
| `Documentation`{.literal}        | 提供单元参考文档的 URI 列表。    |
+----------------------------------+----------------------------------+
| `After`                          | 定义启动单位的顺序。这个单元仅在 |
| {.literal}[^\[b\]^](#assembly_wo | `After`{.literal}                |
| rking-with-systemd-unit-files_co | 中指                             |
| nfiguring-basic-system-settings. | 定的单元处于活跃状态后才启动。与 |
| html#ftn.idm140217690725824){#as | `Requires`{.literal}             |
| sembly_working-with-systemd-unit | 不同，`After`{.literal}          |
| -files_configuring-basic-system- | 不会显式激                       |
| settings.html#idm140217690725824 | 活指定的单元。`Before`{.literal} |
| .footnote}                       | 选项与 `After`{.literal}         |
|                                  | 的功能相反。                     |
+----------------------------------+----------------------------------+
| `Requires`{.literal}             | 配置其它单元上                   |
|                                  | 的依赖关系。`Requires`{.literal} |
|                                  | 中列出的单元与单                 |
|                                  | 元一同被激活。如果任何需要的单元 |
|                                  | 无法启动，则该单位就不会被激活。 |
+----------------------------------+----------------------------------+
| `Wants`{.literal}                | 配置比 `Requires`{.literal}      |
|                                  | 更弱的                           |
|                                  | 依赖项。如果列出的单元没有成功启 |
|                                  | 动，它对单元激活不会有影响。这是 |
|                                  | 建立自定义单元依赖项的建议方法。 |
+----------------------------------+----------------------------------+
| `Conflicts`{.literal}            | 配置负的依赖关系，与             |
|                                  | `Requires`{.literal} 相反。      |
+----------------------------------+----------------------------------+
| ::: {#assembly_working-          |                                  |
| with-systemd-unit-files_configur |                                  |
| ing-basic-system-settings.html#f |                                  |
| tn.idm140217715057328 .footnote} |                                  |
| [^\[a\]^](#assembly_work         |                                  |
| ing-with-systemd-unit-files_conf |                                  |
| iguring-basic-system-settings.ht |                                  |
| ml#idm140217715057328){.simpara} |                                  |
| 有关 \[Unit\]                    |                                  |
| 部分中可配置选项列表，请查看     |                                  |
| `systemd.unit(5)`{.literal}      |                                  |
| 手册页。                         |                                  |
| :::                              |                                  |
|                                  |                                  |
| ::: {#assembly_working-          |                                  |
| with-systemd-unit-files_configur |                                  |
| ing-basic-system-settings.html#f |                                  |
| tn.idm140217690725824 .footnote} |                                  |
| [^\[b\]^](#assembly_work         |                                  |
| ing-with-systemd-unit-files_conf |                                  |
| iguring-basic-system-settings.ht |                                  |
| ml#idm140217690725824){.simpara} |                                  |
| 在大多数                         |                                  |
| 情况下，只需要`After`{.literal}  |                                  |
| 和 `Before`{.literal}            |                                  |
| 单元文件选项设置                 |                                  |
| 顺序依赖关系就足够了。如果还使用 |                                  |
| `Wants`{.literal}（推荐）或      |                                  |
| `Requires`{.                     |                                  |
| literal}设置了需要的依赖关系，仍 |                                  |
| 需要指定依赖关系顺序。这是因为排 |                                  |
| 序和要求依赖关系可以独立地工作。 |                                  |
| :::                              |                                  |
+----------------------------------+----------------------------------+
:::
:::
:::
::: section
::: titlepage
# []{#assembly_working-with-systemd-unit-files_configuring-basic-system-settings.html#ref_important-service-section-options_assembly_working-with-systemd-unit-files}重要 \[Service\] 部分选项 {.title}
:::
下表列出了 \[Service\] 部分的重要选项。
::: table
[]{#assembly_working-with-systemd-unit-files_configuring-basic-system-settings.html#tabl-systemd-Service_Sec_Options}
**表 16.2. 重要 \[Service\] 部分选项**
::: table-contents
+----------------------------------+----------------------------------+
| 选项                             | 描述                             |
| [^\[a\]^](#assembly_wo           |                                  |
| rking-with-systemd-unit-files_co |                                  |
| nfiguring-basic-system-settings. |                                  |
| html#ftn.idm140217689037664){#as |                                  |
| sembly_working-with-systemd-unit |                                  |
| -files_configuring-basic-system- |                                  |
| settings.html#idm140217689037664 |                                  |
| .footnote}                       |                                  |
+:=================================+:=================================+
| `Type`{.literal}                 | 配置影响 `ExecStart`{.literal}   |
|                                  | 和相关选项功                     |
|                                  | 能的单元进程启动类型。其中之一： |
|                                  |                                  |
|                                  | \* `simple`{.literal} -          |
|                                  | 默认值。使用                     |
|                                  | `ExecStart`{.literal}            |
|                                  | 启动的进程是该服务的主要进程。   |
|                                  |                                  |
|                                  | \* `forking`{.literal} - 使用    |
|                                  | `ExecStart`{.literal}            |
|                                  | 启动的                           |
|                                  | 进程会生成成为该服务主要进程的子 |
|                                  | 进程。父进程在启动完成后会退出。 |
|                                  |                                  |
|                                  | \* `oneshot`{.literal} --        |
|                                  | 这个类型与 `simple`{.literal}    |
|                                  | 类似，但在启动相应单位前会退出。 |
|                                  |                                  |
|                                  | \* `dbus`{.literal} - 这个类型与 |
|                                  | `simple`{.literal}               |
|                                  | 类似，但仅在主进程获得 D-Bus     |
|                                  | 名称后启动。                     |
|                                  |                                  |
|                                  | \* `notify`{.literal} -          |
|                                  | 这个类型与 `simple`{.literal}    |
|                                  | 类似，但只有在通过 sd_notify()   |
|                                  | 函数发送通知消息后才启动该单元。 |
|                                  |                                  |
|                                  | \* `idle`{.literal} - 与         |
|                                  | `simple`{.literal}               |
|                                  | 相似，服务二进制文件的实         |
|                                  | 际执行会延迟到所有作业完成后才进 |
|                                  | 行，这样可避免其状态输出与服务的 |
|                                  | shell 输出混合在一起。           |
+----------------------------------+----------------------------------+
| `ExecStart`{.literal}            | 指定在启动该单元时要执行的命令   |
|                                  | 或脚本。`ExecStartPre`{.literal} |
|                                  | 和 `ExecStartPost`{.literal}     |
|                                  | 指定在                           |
|                                  | `ExecStartPtart`{.literal}       |
|                                  | 之前和之后要执行的自定           |
|                                  | 义命令。`Type=oneshot`{.literal} |
|                                  | 启用指                           |
|                                  | 定可按顺序执行的多个自定义命令。 |
+----------------------------------+----------------------------------+
| `ExecStop`{.literal}             | 指定在                           |
|                                  | 该单元停止时要执行的命令或脚本。 |
+----------------------------------+----------------------------------+
| `ExecReload`{.literal}           | 指定重新                         |
|                                  | 载入该单元时要执行的命令或脚本。 |
+----------------------------------+----------------------------------+
| `Restart`{.literal}              | 启用此选项后                     |
|                                  | ，服务会在进程退出后重启，但使用 |
|                                  | `systemctl`{.literal}            |
|                                  | 命令进行的干净停止除外。         |
+----------------------------------+----------------------------------+
| `RemainAfterExit`{.literal}      | 如果设置为                       |
|                                  | True，则该服务即使在所有进程     |
|                                  | 都已退出时也被视为活动。默认值为 |
|                                  | False。这个选项在配置了          |
|                                  | `Type=oneshot`{.literal}         |
|                                  | 时特别有用。                     |
+----------------------------------+----------------------------------+
| ::: {#assembly_working-          |                                  |
| with-systemd-unit-files_configur |                                  |
| ing-basic-system-settings.html#f |                                  |
| tn.idm140217689037664 .footnote} |                                  |
| [^\[a\]^](#assembly_work         |                                  |
| ing-with-systemd-unit-files_conf |                                  |
| iguring-basic-system-settings.ht |                                  |
| ml#idm140217689037664){.simpara} |                                  |
| 有关 \[Service\]                 |                                  |
| 部分中可配置选项列表，请查看     |                                  |
| `systemd.service(5)`{.literal}   |                                  |
| 手册页。                         |                                  |
| :::                              |                                  |
+----------------------------------+----------------------------------+
:::
:::
:::
::: section
::: titlepage
# []{#assembly_working-with-systemd-unit-files_configuring-basic-system-settings.html#ref_important-install-section-options_assembly_working-with-systemd-unit-files}重要 \[Install\] 部分选项 {.title}
:::
下表列出了 \[Install\] 部分的重要选项。
::: table
[]{#assembly_working-with-systemd-unit-files_configuring-basic-system-settings.html#tabl-systemd-Install_Sec_Options}
**表 16.3. 重要 \[Install\] 部分选项**
::: table-contents
+----------------------------------+----------------------------------+
| 选项                             | 描述                             |
| [^\[a\]^](#assembly_wo           |                                  |
| rking-with-systemd-unit-files_co |                                  |
| nfiguring-basic-system-settings. |                                  |
| html#ftn.idm140217689055472){#as |                                  |
| sembly_working-with-systemd-unit |                                  |
| -files_configuring-basic-system- |                                  |
| settings.html#idm140217689055472 |                                  |
| .footnote}                       |                                  |
+:=================================+:=================================+
| `Alias`{.literal}                | 为这个单                         |
|                                  | 元提供空格分开的额外名称列表。除 |
|                                  | `systemctl enable`{.literal}     |
|                                  | 以外，多数`systemctl`{.literal}  |
|                                  | 命令                             |