IMC ’17, November 1–3, 2017, London, United Kingdom
Amann, Gasser, Scheitle, Brent, Carle, Holz
TUM IPv4 USyd IPv4 TUM IPv6
Rel. Work
192.9M ≈153M [70, 71]
149M [70]
# of
Input Domains
Domains ≥ 1 RR1
IP addresses
tcp443 SYN-ACKs
 pairs
Successful TLS SNI2
HTTP response 200 SNIs
1: Domains that server 1 or more Resource Records of A or AAAA type.
2:  tuples with successful TLS SNI connections.
Table 1: Overview of DNS Resolutions and Active Scans,
conducted from April 11 through April 16, 2017.
192.9M
152.9M
8.9M
3.2M
79.2M
58.0M
28.1M
192.9M
153.5M
8.8M
4.0M
80.4M
55.7M
28.4M
9.7M
6.2M
316k
11.0M
5.1M
1.9M
249k [27]
42M [71]
Location
Berkeley
port 443
2.4.–2.5.
Time TLS Conns. Certs.
Valid
1.5M 366.2k
364.2k
167.1k
113k
2.6G
2.5G 729.1k
286.7M 178.7k
196.2M 115.8k
12.5.–16.5.
12.5.–16.5.
Munich
Sydney
Table 2: Overview of passive monitoring data. UC Berkeley
is not filtered for port 443. Many autogenerated certificates,
such as for WebRTC, drive certificate count for non-443.
pseudo-cipher. This tests for downgrade protection on server
side: servers should abort such connections.
Table 1 provides an overview of scan results along our
scanning chain, across locations and protocols.
4.2 Passive Monitoring
Our passive measurements use two data sources: (i) to mea-
sure the current use of Certificate Transparency in the Inter-
net, we passively monitor the Internet uplinks of the Univer-
sity of California at Berkeley (UCB) for several weeks. To
validate our results, we monitor the Internet uplinks at the
University of Sydney (Australia) and the Technical Univer-
sity of Munich (Germany), about two weeks after the first
monitoring run. (ii) For our TLS version evolution study
we use data from the ICSI SSL Notary [8], which contains
connection-level information from select research institutions
and Universities starting in 2012.
We use the Bro Network Security Monitor [55] for our
passive data analysis. For this work, we extend Bro to support
TLS version 1.3, improve the OCSP support, and implement
support for parsing and live-validation of CT information
from certificates, TLS extensions and OCSP replies. The
code is merged into Bro and will be part of Bro 2.6. In
all environments, we only analyze outgoing connections to
prevent bias from our internal server population. Table 2
shows details on the number of TLS handshakes and unique
hosts seen at our three passive monitoring vantage points.
The University of Sydney has a 10GE Internet uplink.
Port 443 traffic is mirrored to a 64-core Linux machine us-
ing PF_Ring for traffic distribution (4 AMD Opteron 6276
2.6GHz CPUs, 64GB RAM, Ubuntu 14.04.5). Only traffic
from the Internet to the University network is mirrored to the
analysis machine. Due to the fact that all CT information is
contained in the server handshake, this still allows us to use
data from Sydney for nearly all of our measurements. Readers
familiar with Bro might be aware that Bro usually does not
work well with one-sided traffic. This is not a limitation of
the Bro core but of many Bro protocol analyzers. The TLS
analyzer, however, parses one-sided TLS traffic correctly. We
verified this by checking the TCP reassembler source code
and creating several test-cases, available at [6].
The Technical University of Munich monitors the Munich
Scientific Network’s 2x10GE Internet uplink. Port 443 traffic
is mirrored to a 24-core machine, again using PF_Ring (2
Intel Xeon E5-2630v2 2.6GHz, 256GB RAM, SLES12). Owing
to the fact that the entire traffic is sent to the analysis
machine over a single 10GE connection, packet-loss occurs
during peak-times. This should not impact our analysis as
packet loss should be uniformly distributed; furthermore we
only examine the first few packets of every TLS connection.
Our data analysis does indeed not show significant deviations
for Munich.
UCB has a 10GE Internet uplink. The traffic is split up to
28 independent machines, each with 4 Intel Xeon 5430 CPUs
at 2.66GHz and 12GB of RAM (FreeBSD 11.0). Traffic is
distributed to 2 processes per machine using netmap [60] and
lb [61]. Traffic is not filtered for port 443.
4.3 Ethical Considerations
For active scans, we minimize interference by following best
scanning practices, such as those outlined in [24], by main-
taining a blacklist and using dedicated servers with informing
rDNS names, websites, and abuse contacts. We assess whether
data collection can harm individuals or reveal private infor-
mation as proposed by [22, 54]. Our passive data collection
was cleared by the responsible parties at each contributing
institution; this includes all institutions contributing data
to the ICSI SSL Notary. Note that our passive data collec-
tion specifically excludes or anonymizes sensitive information,
such as client IP addresses.
5 CERTIFICATE TRANSPARENCY
To evaluate the use of Certificate Transparency, we extract
and validate SCTs from both active scans and passive ob-
servations using our extended version of Bro (see Section 4).
As detailed in Section 2, SCTs can be retrieved via three
different ways. SCTs received via the TLS extension or OCSP
stapling are directly validated using the server certificate and
the log public key. In the case of SCTs embedded in an X.509
certificate, the reconstructed precertificate is used in place of
the end-entity certificate, as specified in [44] (see Section 2).
In this case, the verification step also requires information
from the CA certificate issuing the end host certificate. Specif-
ically, the issuer key hash of the parent certificate is included
in the signed data structure [44]; this information can only
be obtained from the CA certificate.
We determine the issuer CA certificate needed for SCT
validation in a multi-step process. First, validation of the
presented chain is attempted against Mozilla’s root store
Mission Accomplished? HTTPS Security after DigiNotar
IMC ’17, November 1–3, 2017, London, United Kingdom
saves several 100 bytes at the beginning of mobile HTTPS
transactions, which typically do not support CT.
In fact, the results from our different vantage points are
all very similar. Combined, we receive a total of 11.7M cer-
tificates in our active scans. We find that SCTs are almost
exclusively embedded in X.509 certificates: less than a thou-
sand are received in the TLS extension, and not even 50 in
OCSP staples. Although less than 7.5% of certificates con-
tained SCTs, we consider this an impressive fraction, showing
significant CT deployment within a short time frame. Fur-
thermore, almost all domains with CT support present one
SCT from a Google-operated log and one from a non-Google
log—this is the minimum requirement for Chrome to rec-
ognize a certificate’s EV status [28] (although the number
of EV certificates is actually very small). Interestingly, the
almost exclusive preference for embedded certificates stands
in contrast to initial plans of many CAs, which indicated a
preference for delivering SCTs via OCSP [13].
49 certificates where the SCT was sent in an OCSP staple
were issued by SwissSign (30), DigiCert (17), and Comodo
(2). 7 of the DigiCert certificates were issued for Dropbox
domains, and the Comodo certificates were issued for sslana-
lyzer.comodoca.com and medicalchannel.com.au. This demon-
strates that CAs do not commonly enable SCT delivery via
OCSP, possibly even only on customer request.
Extended Validation certificates contain SCTs in more
than 99% of cases. This is probably explained by the Chrome
EV policy [28] which requires SCTs to be presented for EV
certificates in order for the ‘green bar’ to be displayed. Of
the certificates missing an SCT, 164 were issued by Verizon
Enterprise Solutions, 86 by Symantec, and 77 by Certplus.
The above findings are corroborated by our passive data,
shown in Table 4. Ratios between data points are relatively
similar, independent of the vantage point. In the following,
we will refer primarily to the data collected at UCB, which
performed the longest measurement.
30.03% of the connections contain SCTs. As in the active
scans, SCTs in certificate extensions are by far the most
common case (20.45% of connections), but SCTs are also
commonly seen in TLS extensions, namely 9.56% of all con-
nections, or 13.64% of connections where the client supported
the extension (if a client does not advertise support, the server
is not allowed to send an SCT via a TLS extension). This
shows that even though SCTs are only embedded into the
TLS extension by a small number of sites (1.6k out of 1.5M),
these sites amount to a significant number of connections
(248M of 779M). A closer inspection reveals that 56% of the
domains can be attributed to Google. Some other major sites
like Snapchat and Amazon also are present. This confirms
the results of our active measurement that show SCTs over
TLS are more commonly used by popular domains. As in
the active scans SCTs in OCSP staples are rare; they are
only observed in 155.8k connections. The lack of SCTs in
OCSP extensions is not caused by the lack of client or server
support of OCSP stapling; we saw 1.8G (70.14%) connec-
tions in which clients advertised support for OCSP stapling.
Figure 1: Embedded SCTs on domains. Blue bar represents
domains using SCT via TLS extensions that did not already
serve SCT via X.509.
using a process similar to that of Firefox, caching certificates
from previous connections [3]. This enables us to validate
server certificates and SCTs even if root or intermediate CA
certificates are missing from the connection. If this step fails,
SCT validation is attempted using each certificate present in
the connection.
5.1 Measurement Results
Table 3 gives an overview of the CT data obtained in our
active scans. We count a domain as supporting CT if at least
one connection to one of its IP addresses transported SCTs.
The IPv4 scans from Munich and Sydney show very similar
numbers of connections with SCTs present—on the order of
7.6M connections, i.e., between 12.7% and 13.3% of all TLS
connections in which we receive a certificate from the server.
This translates to about 6.8M domains that support CT. The
number of domains supporting CT via IPv6 is, in line with
IPv6 deployment, much lower (357k).
Figure 1 shows greater use of CT among popular domains,
which are also more likely to transmit SCTs via TLS ex-
tensions. We speculate this might be an effort to optimize
mobile experiences: SCTs are only sent by TLS extensions if
requested by the client. Not including them in the certificate
Domains w/ SCT
All
7.0M
7.0M
27.8k
191
6.9M
via X.509
via TLS
via OCSP
Operator diversity1
MUCv6
357k
344k
12.9k
3
349k
594.98k
194.2k
193.9k
346
3
2.1k
2.1k
3
1: Cert. logged in at least one Google & one non-Google operated log.
SYDv4 MUCv4
6.8M
6.8M
27.2k
188
6.7M
9.66M
835.3k
834.5k
759
47
62.9k
62.5k
436
6.8M
6.7M
27.6k
180
6.7M
11.69M 10.62M
800.5k
868.5k
799.9k
867.6k
631
885
49
43
64.1k
66k
63.6k
65.6k
459
451
via X.509
via TLS
via OCSP
Certificates
with SCT
Valid EV Certs
with SCT
without SCT
Table 3: CT data from active scans.
IMC ’17, November 1–3, 2017, London, United Kingdom
Amann, Gasser, Scheitle, Brent, Carle, Holz
Observation period
Total connections
Connections with SCT
Conns. SCT in Cert
Conns. SCT in TLS
Conns. SCT in OCSP
Total certs
Certs with Assoc. SCT
Certs with X509 SCT
Certs with TLS SCT
Certs with OCSP SCT
Total IPs
v4 IPs
v6 IPs
IPs SCT
v4 IPs SCT
v6 IPs SCT
IPs X509 SCT
IPs TLS SCT
IPs OCSP SCT
Total SNIs
SNIs SCT
SNIs X509 SCT
SNIs TLS SCT
SNIs OCSP SCT
Sydney
Berkeley Munich
12.-16.5.
4.4.–2.5.
12.–16.5.
286.7M 196.2M
2.6G
778.7M
72.7M
57.5M
43.9M