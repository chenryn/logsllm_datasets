在这个方法里，有4个步骤。
  1. FileUtil.dxfile() 用来解密 /data/data/com.web.sdfile/files/png.ico 文件并保存它到/data/data/com.web.sdfile/app_dex/.do。
  2. FileUtil.UnZip() 是用来解压 /data/data/com.web.sdfile/app_dex/.do 这个文件到 /data/data/com.web.sdfile/.rtt 文件夹，这个文件夹是系统隐藏文件夹，解压到里面的文件包含6个ELF运行文件，详细如下图。它包含了r1,r2,r3,r4,4个root exploit。
  3. 它删除解密后的root工具 /data/data/com.web.sdfile/app_dex/.do 和 /data/data/com.web.sdfile/app_dex/ 文件夹。
  4. 它会在/data/data/com.web.sdfile/files/ 文件夹里创建一个名为psneuter.js的新文件。它的内容如下。
图50. psneuter.js文件
在executeRootAct方法里handOrimiddle被调用。下面是4个通过命令行运行root exploits的4个代码片段：
图51. 通过shell命令行运行root exploits
研究这些可执行文件后，我发现r3是来自dashi root工具中的MTK root方案，r4是来自开源项目[android-rooting-tools](https://github.com/android-rooting-tools/android_run_root_shell)中的一个exploit([CVE-2013-6282](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-6282)),r2是[CVE-2012-6422](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-6422)，这个exploit是Samsung Exynos上的root exploit。
handleOriMiddles方法是通过shell命令行运行root exploit和一些命令。所有的shell命令如下：
图52. root设备时执行的所有命令
成功得到root权限后，这个名为psneuter.js的脚本在超级用户权限下运行。这个脚本的主要目的是在/system/priv-app/
文件夹下安装root权限的应用。
之后我们将研究两个新的apk文件。为了避免被普通用户捕获，这个两个app在受害者的设备上安装后是没有图标的。
此外，还有其他的一个名为 rsh的脚本通过shell命令行运行
图53. 通过shell命令行运行rsh脚本
这个rsh脚本是不同的，它是基于Build.MANUFACTURER属性的。这个脚本内容如下：
图 54. rsh(1)脚本
图55. rsh(2)脚本
## BSetting.apk 是如何工作的。
如图50所示，abc.apk是放在 /system/priv-app/ 并重命名为 BSetting.apk 并且 BSetting.apk
是通过pm安装的。
BSetting.apk服务是远程控制服务，它从远程服务器获取任务并运行任务。
这个app是运行在后台的并且在设备上没有图片，下面是这个app的信息
图55 BSetting.apk的信息
这个app伪装它自己为Android sync service。反编译这个apk的文件结构如下图：
图56. 反编译abc.apk
图57. abc.apk里面的AndroidMainfest.xml
BroadcastReceiver com.sfy.oyr.R 执行这个app的主要逻辑。
图58 类R
这个程序首先解密assets文件夹里的jif.png。这个文件是一个dex文件。然后这个程序使用java的反射机制加载类并运行一些方法。
我们反编译这个解密后的dex文件，如下图所示：
图59 反编译classes.dex
类ADService的launchTancTask 方法是用来从远程服务器上获取任务和执行任务。
图60. 从远程服务器上获取任务
下图是从远程服务器获取任务的包，这个远程服务器又两个域名，一个是主域名 grs[.]gowdsy[.]com，还有一个备用域名
grs[.]rogsob[.]com。从远程服务器上返回的响应信息是xml文件，这个文件的任务类型包含了用来推送色情信息的url，用来下载apk的url和app安装类型等。
图61. 从远程服务器获取任务的包
根据不同的任务类型，app在不同的方式下运行任务，下面是关键代码片段：
图62 根据不同的任务类型运行任务
远程控制服务能够执行多个恶意行为，包括但不只是下面的行为： 1\. Uninstall app 它使用android系统的“pm
uninstall”卸载app 
图63 通过shell命令行运行pm unintall来卸载app
  1. 推送色情（Push porn） 下面是以是一些推送色情的截图. 
图64 app推送色情到设备上
  1. 在主屏幕上创建快捷方式
创建的快捷方式包括色情，hot app，hot video等。下面是一些创建快捷方式的关键代码和一些屏幕截图。
 图65 创建主屏幕上的代码片段
图65 主屏幕的快捷方式
  1. App和广告的推广
除了获取设备的root权限外，这个app通过推广app和广告为这个app的创建者产生收入。推广的app和广告是特别让用户厌烦的。
下面是一些app推广屏幕截图：
图67. App和广告的推广
  1. 正常安装app和静默安装app
这个恶意app根据获取的任务类型来使用不同的方式安装app。下面是正常通安装app的代码片段，这种方式在安装时，是有安装视图的。
 图68. 正常安装app
这个app使用android系统的"pm install -r"功能来静默安装非系统app到/system/priv-app/ 成为系统app。
图69 静默安装非系统app
在/data/app/文件夹里我们找到了一些安装完成了的apk文件(包括，但不只是以下这些)。
 图70
在文件夹/data/app/里的被恶意安装的apps
图71. 命令安装系统app
在/system/priv-app/ 文件夹里，我们也找到了安装完成了的一些apk文件(包括，但不只是一下这些)
图72 在文件夹/system/priv-app/ 里的被恶意安装的apps
  1. 推送通知
这个恶意app会推送通知并诱导用户在点击它在浏览器里打开这个URL。
下面是推送通知的代码片段。
图73. 推送通知的代码片段
图74.被恶意app推送的通知
  1. 下载文件 我们找到了被下载到/sdcard/文件夹下的很多文件和文件夹。 这些文件有apk文件、jar文件、图片、日志文件等。这些文件是安装app生成的，其中的一些是执行恶意行为。 
图75.下载到/sdcard/文件夹下的文件和文件夹
## 解决方案
恶意样本被Fortinet Antivirus检测签名为Android/Rootnik.PAC!tr。
通信交流的远程C2服务被Fortinet IPS检测并签名为 Android.Rootnik.Malware.C2.
## 总结
通过前面的分析，我们能看出，这个rootnik恶意app是非常强的并使用非常高级的反调试和反hook技术来防止被逆向工程，不同类型的文件和字符串加密。除此之外，它还使用了multidex
方案来动态加载和安装第二个拥有恶意的主逻辑的dex文件。这个恶意app使用一些开源的android root exploit工具和dashi
root工具里的MTK root方案在Android设备上获取root权限。在设备上成功获取root权限后，rootnik malware
能执行多样的恶意操作，这些操作包括app和广告的推送、推送色情（pushing porn）、在主屏幕上创建快捷方式、静默安装app和推送通知等。
## 附录
    ## Rootnik Malware样本
    # Package Name: com.web.sdfile
    SHA256: E5E22B357893BC15A50DC35B702DD5FCDFEAFC6FFEC7DAA0D313C724D72EC854
    Additional APK files dropped into system partition by Rootnik malware
    # Package Name: com.br.srd
    SHA256: E2BDCFE5796CD377D41F3DA3838865AB062EA7AF9E1E4424B1E34EB084ABEC4A
    # Package Name: com.oyws.pdu
    SHA256: CEE6584CD2E01FAB5F075F94AF2A0CE024ED5E4F2D52E3DC39F7655C736A7232
    # C&C Server
    gt[.]rogsob[.]com
    grs[.]gowdsy[.]com:
    qj[.]hoyebs[.]com
    qj[.]hoyow[.]com
    gt[.]yepodjr[.]com
* * *
翻译，难免会有错误，还请指正。万分感谢.我的bolg地址：www.kejidi.net --BlackTrace
* * *