## Londiste 3 replicate case - 1 下节  
### 作者                                   
digoal                                 
### 日期                                                                                                                                                   
2012-05-31                                                                              
### 标签                                                                                
PostgreSQL , skytools , pgq , Londiste 3 , 快照 , snapshot , logical replication , 逻辑复制 , 队列复制            
----                                                                                                                                                
## 背景                 
上节URL  
[《Londiste 3 replicate case - 1 上节》](../201205/20120530_01.md)    
接下来测试一下复制是否正确, 在主节点上开启pgbench做数据更改的压力测试.  
```  
postgres@db5-> cat login.sql   
\setrandom userid 1 200000  
select userid,engname,cnname,occupation,birthday,signname,email,qq from user_info where userid=:userid;  
insert into user_login_rec (userid,login_time,ip) values (:userid,now(),inet_client_addr());  
update user_session set logintime=now(),login_count=login_count+1 where userid=:userid;  
postgres@db5-> cat logout.sql   
\setrandom userid 1 200000  
insert into user_logout_rec (userid,logout_time,ip) values (:userid,now(),inet_client_addr());  
update user_session set logouttime=now(),online_interval=online_interval+(now()-logintime) where userid=:userid;  
postgres@db5-> pgbench -M prepared -f ./login.sql -j 2 -c 2 -n -r -h 127.0.0.1 -p 1921 -U digoal_01 -T 120 digoal_01 &  
postgres@db5-> pgbench -M prepared -f ./logout.sql -j 2 -c 2 -n -r -h 127.0.0.1 -p 1921 -U digoal_01 -T 120 digoal_01 &   
transaction type: Custom query  
scaling factor: 1  
query mode: prepared  
number of clients: 2  
number of threads: 2  
duration: 120 s  
number of transactions actually processed: 318962  
tps = 2616.506274 (including connections establishing)  
tps = 2616.586583 (excluding connections establishing)  
statement latencies in milliseconds:  
        0.002284        \setrandom userid 1 200000  
        0.112055        select userid,engname,cnname,occupation,birthday,signname,email,qq from user_info where userid=:userid;  
        0.260081        insert into user_login_rec (userid,login_time,ip) values (:userid,now(),inet_client_addr());  
        0.378190        update user_session set logintime=now(),login_count=login_count+1 where userid=:userid;  
transaction type: Custom query  
scaling factor: 1  
query mode: prepared  
number of clients: 2  
number of threads: 2  
duration: 120 s  
number of transactions actually processed: 620568  
tps = 5143.160023 (including connections establishing)  
tps = 5143.328868 (excluding connections establishing)  
statement latencies in milliseconds:  
        0.002408        \setrandom userid 1 20000000  
        0.258112        insert into user_logout_rec (userid,logout_time,ip) values (:userid,now(),inet_client_addr());  
        0.122814        update user_session set logouttime=now(),online_interval=online_interval+(now()-logintime) where userid=:userid;  
```  
并行度是1的情况下, 同一时间只有一个表在同步  
```  
postgres@db5-> londiste3 /home/postgres/londiste3/dst1_digoal_01.ini tables  
Tables on node  
table_name                 merge_state      table_attrs  
-------------------------  ---------------  ---------------  
digoal_01.user_info        wanna-sync:1558    
digoal_01.user_login_rec   ok                 
digoal_01.user_logout_rec  ok                 
digoal_01.user_session     None  
```  
接下来修改一下并行度  
```  
parallel_copies = 16 添加到dst1_digoal_01.ini和src_digoal_01.ini然后reload  
postgres@db5-> londiste3 -r /home/postgres/londiste3/src_digoal_01.ini   
postgres@db5-> londiste3 -r /home/postgres/londiste3/dst1_digoal_01.ini   
```  
现在复制就很快了  
```  
londiste3 /home/postgres/londiste3/dst1_digoal_01.ini tables  
Tables on node  
table_name                 merge_state      table_attrs  
-------------------------  ---------------  ---------------  
digoal_01.user_info        ok                 
digoal_01.user_login_rec   ok                 
digoal_01.user_logout_rec  ok                 
digoal_01.user_session     ok   
```  
pgbench执行完后马上去执行compare, 由于目标库1 还在执行queue里面的SQL, 所以显示如下.  
```  
postgres@db5-> londiste3 /home/postgres/londiste3/dst1_digoal_01.ini compare  
2012-05-31 09:11:03,224 30974 ERROR Consumer lagging too much, cannot proceed  
```  
大概过150秒后再次执行compare, 已经同步完成. checksum一致.  
```  
postgres@db5-> londiste3 /home/postgres/londiste3/dst1_digoal_01.ini compare  
2012-05-31 09:13:41,442 31116 INFO Locking digoal_01.user_info  
2012-05-31 09:13:41,442 31116 INFO Syncing digoal_01.user_info  
2012-05-31 09:13:44,950 31116 INFO Counting digoal_01.user_info  
2012-05-31 09:13:46,085 31116 INFO srcdb: 200000 rows, checksum=545503592610  
2012-05-31 09:13:46,861 31116 INFO dstdb: 200000 rows, checksum=545503592610  
2012-05-31 09:13:46,863 31116 INFO Locking digoal_01.user_session  
2012-05-31 09:13:46,863 31116 INFO Syncing digoal_01.user_session  
2012-05-31 09:13:49,868 31116 INFO Counting digoal_01.user_session  
2012-05-31 09:13:50,642 31116 INFO srcdb: 200000 rows, checksum=-132792841596  
2012-05-31 09:13:51,229 31116 INFO dstdb: 200000 rows, checksum=-132792841596  
2012-05-31 09:13:51,231 31116 INFO Locking digoal_01.user_login_rec  
2012-05-31 09:13:51,231 31116 INFO Syncing digoal_01.user_login_rec  
2012-05-31 09:13:54,739 31116 INFO Counting digoal_01.user_login_rec  
2012-05-31 09:14:13,845 31116 INFO srcdb: 5007284 rows, checksum=-2059054881703  
2012-05-31 09:14:26,583 31116 INFO dstdb: 5007284 rows, checksum=-2059054881703  
2012-05-31 09:14:26,585 31116 INFO Locking digoal_01.user_logout_rec  
2012-05-31 09:14:26,586 31116 INFO Syncing digoal_01.user_logout_rec  
2012-05-31 09:14:30,094 31116 INFO Counting digoal_01.user_logout_rec  
2012-05-31 09:14:34,920 31116 INFO srcdb: 1250644 rows, checksum=1378863938106  
2012-05-31 09:14:38,163 31116 INFO dstdb: 1250644 rows, checksum=1378863938106  
```  
默认compare的配置以及用到的SQL如下 :   
```  
## compare/repair  
# max amount of time table can be locked  
#lock_timeout = 10  
# compare: sql to use  
#compare_sql = select count(1) as cnt, sum(hashtext(t.*::text)) as chksum from only _TABLE_ t  
#compare_fmt = %(cnt)d rows, checksum=%(chksum)s  
```  
接下来要考验一下londiste3的处理网络故障的能力. 即把目标库断开, 再连上. 我这里关闭目标库1来模拟.  
关闭目标库1  
```  
pg92@db-172-16-3-33-> pg_ctl stop -m fast  
waiting for server to shut down.... done  
server stopped  
```  
在主库开启pgbench  
```  
postgres@db5-> pgbench -M prepared -f ./login.sql -j 2 -c 2 -n -r -h 127.0.0.1 -p 1921 -U digoal_01 -T 120 digoal_01 &  
postgres@db5-> pgbench -M prepared -f ./logout.sql -j 2 -c 2 -n -r -h 127.0.0.1 -p 1921 -U digoal_01 -T 120 digoal_01 &  
```  
查看dst1_digoal_01.log, 表示已经连不上目标库1了.  
```  
2012-05-31 09:19:18,509 10706 WARNING Failure to call pgq_node.set_consumer_error()  
2012-05-31 09:19:18,509 10706 ERROR Job dst1_digoal_01 crashed: could not connect to server: Connection refused  
        Is the server running on host "172.16.3.33" and accepting  
        TCP/IP connections on port 1919?  
Traceback (most recent call last):  
  File "/opt/skytools3.0.2/lib/python2.7/site-packages/pgq/cascade/consumer.py", line 285, in exception_hook  
    dst_db = self.get_database(self.target_db)  
  File "/opt/skytools3.0.2/lib/python2.7/site-packages/skytools/scripting.py", line 733, in get_database  
    return dbc.get_connection(params['isolation_level'], clist)  
  File "/opt/skytools3.0.2/lib/python2.7/site-packages/skytools/scripting.py", line 948, in get_connection  
    self.conn = skytools.connect_database(self.loc)  
  File "/opt/skytools3.0.2/lib/python2.7/site-packages/skytools/psycopgwrapper.py", line 135, in connect_database  
    db = _CompatConnection(connstr)  
OperationalError: could not connect to server: Connection refused  
        Is the server running on host "172.16.3.33" and accepting  
        TCP/IP connections on port 1919?  
```  
查看一下QUQUE的内容 :   
```  
digoal_01=# select * from pgq.event_1_2 limit 10;  
  ev_id  |            ev_time            | ev_txid  | ev_owner | ev_retry | ev_type  |                                                
    ev_data                                                   |        ev_extra1         | ev_extra2 | ev_extra3 | ev_extra4   
---------+-------------------------------+----------+----------+----------+----------+----------------------------------------------  
--------------------------------------------------------------+--------------------------+-----------+-----------+-----------  
 3188535 | 2012-05-31 08:59:47.064327+08 | 20777539 |          |          | U:userid | userid=29499&logintime=2012%2d05%2d31+08%3a59  
%3a47&login_count=17&logouttime&online_interval=00%3a00%3a00  | digoal_01.user_session   |           |           |   
 3188541 | 2012-05-31 08:59:47.064719+08 | 20777545 |          |          | I:id     | userid=101464&login_time=2012%2d05%2d31+08%3a  
59%3a47.064719&ip=127.0.0.1&id=4424162                        | digoal_01.user_login_rec |           |           |   
 3188543 | 2012-05-31 08:59:47.064955+08 | 20777547 |          |          | U:userid | userid=101464&logintime=2012%2d05%2d31+08%3a5  
9%3a47&login_count=13&logouttime&online_interval=00%3a00%3a00 | digoal_01.user_session   |           |           |   
 3188548 | 2012-05-31 08:59:47.065316+08 | 20777551 |          |          | I:id     | userid=56992&login_time=2012%2d05%2d31+08%3a5  
9%3a47.065316&ip=127.0.0.1&id=4424164                         | digoal_01.user_login_rec |           |           |   
 3188551 | 2012-05-31 08:59:47.065573+08 | 20777555 |          |          | U:userid | userid=56992&logintime=2012%2d05%2d31+08%3a59  
%3a47&login_count=25&logouttime&online_interval=00%3a00%3a00  | digoal_01.user_session   |           |           |   
 3188556 | 2012-05-31 08:59:47.065952+08 | 20777560 |          |          | I:id     | userid=190783&login_time=2012%2d05%2d31+08%3a  
59%3a47.065952&ip=127.0.0.1&id=4424166                        | digoal_01.user_login_rec |           |           |   
 3188558 | 2012-05-31 08:59:47.066187+08 | 20777562 |          |          | U:userid | userid=190783&logintime=2012%2d05%2d31+08%3a5  
9%3a47&login_count=16&logouttime&online_interval=00%3a00%3a00 | digoal_01.user_session   |           |           |   
 3188563 | 2012-05-31 08:59:47.066566+08 | 20777567 |          |          | I:id     | userid=42506&login_time=2012%2d05%2d31+08%3a5  
9%3a47.066566&ip=127.0.0.1&id=4424168                         | digoal_01.user_login_rec |           |           |   
 3188566 | 2012-05-31 08:59:47.066788+08 | 20777570 |          |          | U:userid | userid=42506&logintime=2012%2d05%2d31+08%3a59  
%3a47&login_count=21&logouttime&online_interval=00%3a00%3a00  | digoal_01.user_session   |           |           |   
 3188571 | 2012-05-31 08:59:47.067132+08 | 20777575 |          |          | I:id     | userid=23589&login_time=2012%2d05%2d31+08%3a5  
9%3a47.067132&ip=127.0.0.1&id=4424170                         | digoal_01.user_login_rec |           |           |   
(10 rows)  
```  
执行完pgbench后, 开启目标库1, 看看数据能否正常复制过去.  
启动目标库1  
```  
pg92@db-172-16-3-33-> pg_ctl start  