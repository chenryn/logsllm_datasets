previously identiﬁed candidates composed of the original
candidates and any previously typed candidate names.
The user is not shown the whole ballot, so he does not
know what the other selections are on that ballot, or what
rank the write-in was given. We call this process resolv-
ing a vote because the original vote is changed from the
generic “Write-In” candidate to the candidate that was
intended by the voter. The ERM produces a PDF of
each image, the candidate selection for that image, and
a unique number to identify the selection.
Scantegrity handles write-in candidates just like other
optical scan systems by treating the write-in position
as a candidate. Therefore, the backend does not know
how each write-in position was resolved, and two results
records are created: one with write-in resolution pro-
vided by the ERM, and one without write-in resolution
provided by the backend.
To check the additional record generated by the ERM,
an observer reduces the resolved results record and veri-
ﬁes that the set of resolved ballots is the same as the set of
unresolved ballots. To audit that the judges chose the cor-
rect candidates for each write-in, the observer refers to
the PDF generated during write-in resolution. The PDF
allows the observer to reference each resolved ballot en-
try in the resolved results ﬁle and verify that the image
was properly transcribed.
One caveat of this approach is that if a write-in candi-
date wins, a malicious authority could modify these im-
ages to change results, but could not deny that the write-
in position had received a winning number of votes. This
situation would require additional procedures to verify
the write-ins (e.g. a hand count, and/or careful audit of
the transcriptions by each judge).
Website Beyond communicating the election outcome
itself, the role of the election website is to serve as a “bul-
letin board” (BB) to broadcast the cryptographic audit
data set (i.e., cryptographic commitments, responses to
audit challenges, etc).
In addition, voters can use this
website to check their receipts, and ﬁle a dispute if the
receipt is misreported. We provided an implementation
with these features written in Java 1.6. It used the Stripes
Framework 8 and an Apache Derby database backend. 9
In practice, we only used part of this implementation.
Originally, our plan was to have Takoma Park host the
website, but ofﬁcials chose a hybrid approach where they
hosted election information and results. That website
would link to our server to provide a receipt checking
tool and audit data. After the election, ofﬁcials would
provide us with a copy of the public data ﬁles to pub-
lish. This decision caused a number of changes to our
approach.
We decided to only use the receipt checking code from
the implementation, and, to make downloading more
convenient for auditors, post all election data on our pub-
licly available subversion repository. 10 Additionally,
both auditors agreed to mirror the data.
A primary security requirement for the Scantegrity
BB is to provide authenticated broadcast communication
from election ofﬁcials to the public. We met this require-
ment with digital signatures. A team member (Carback)
created signed copies of each ﬁle with gnupg 11 using his
public key from May 28, 2009.
Without authenticated communication, it would be im-
possible to prove if different results were provided to dif-
ferent people. Our speciﬁc approach to the website re-
quires observers to verify signatures and check with each
other if they receive identical copies of the data (and ver-
ify the consistency of the signatures over time). Our au-
ditors, Adida and Zagorski, performed these actions, but
we do not know the extent of this communication other-
wise. As usual with our approach to Scantegrity, we are
enabling detection of errors (genuine or malicious).
There are several potential threats to the bulletin board
model–we will brieﬂy enumerate some of them. At a
high level, threats pertain primarily to misreporting of
results, or to voter identiﬁcation. With regard to results
reporting, an adversary may attempt to misreport results
by substituting actual election data with false data.
In
the event that all parties verify signatures of information
they receive, and check consistency with the signed ﬁles,
incorrect conﬁrmation codes on the bulletin board would
be detected by voters, and incorrect computation of the
tally by anyone checking the tally computation audit. If
the voter checking conﬁrmation codes does not check
consistency with the rest of the bulletin board (by, for ex-
ample, downloading the bulletin board data, checking all
the signatures and checking that his or her conﬁrmation
code is also correctly noted in the entire bulletin board
data) he or she may be deceived into believing their bal-
lot was accurately recorded and counted. Similarly, if
8http://www.stripesframework.org/
9http://db.apache.org/derby/
10http://scantegrity.org/svn/data/
takoma-nov3-2009/
11http://www.gnupg.org/
7
the various signatures are not cross checked across indi-
viduals or observed over time, an adversary may replace
the conﬁrmation codes after they have been checked, or
send different ones to voters and to auditors. An adver-
sary may also attempt an identiﬁcation attack, whereby
the objective is to link voter identities with receipt data,
such as by recording IP addresses of voters who check
their receipts.
6 The Election
In this section, we describe the election as events unfold
chronologically over time.
6.1 Preparations
Preparations for the election include running the ﬁrst 2
backend meetings, and creating the ballot.
Independent Auditors The Board of Elections re-
quested cryptographers Dr. Ben Adida (Center for Re-
search on Computation and Society, Harvard University)
and Dr. Filip Zag´orski (Institute of Mathematics and
Computer Science, Wroclaw University of Technology,
Poland) to perform independent audits of the digital data
published by Scantegrity in general, and of the tally com-
putation in particular. Dr. Adida 12 and Dr. Zag´orski 13
maintained websites describing the audits and the results
of the audits, and Dr. Adida also blogged the audit. 14
Before the election, Dr. Adida pointed out several in-
stances when the Scantegrity information was insufﬁ-
cient; Scantegrity documentation was updated as a result.
The Board of Elections also requested Ms. Lillie
Coney (Associate Director, Electronic Privacy Informa-
tion Center and Public Policy Coordinator for the Na-
tional Committee for Voting Integrity (NCVI)) to per-
form print audits on Election Day. Ms. Coney chose
ballots at random through the day, exposed the conﬁr-
mation codes for all options on the ballot, and kept these
with her until after the end of the complaint period, when
Scantegrity opened commitments to all unvoted and un-
spoiled ballots (and hence to all ballots she had audited).
Ms. Coney then checked that the correspondence be-
tween codes and conﬁrmation numbers on her ballots
matched those on the website.
Both tasks, of print audits and digital data audits, can
be performed by voters. Digital data audits can also be
performed by any observers. In future elections, when
the general population and Takoma Park voters are more
12http://sites.google.com/site/
takomapark2009audit/
13http://zagorski.im.pwr.wroc.pl/scantegrity/
14http://benlog.com/articles/category/
takoma-park-2009/
familiar with end-to-end elections, it is anticipated that
voters (and, in particular, candidate representatives) will
perform such audits.
Meeting 1 Four election ofﬁcials (the City Clerk, the
Chair, Vice Chair and a member of the Board of Elec-
tions: Jessie Carpenter, Anne Sergeant, Barrie Hofmann
and Jane Johnson, respectively) were established as elec-
tion trustees in Meeting 1, held on October 12 2009.
It was explained to the trustees that, through their pass-
words, they would generate the conﬁrmation codes and
share the secret used to tally election results. Further,
it was explained that, without more than a threshold of
passwords, the election could not be tallied by Scant-
egrity, and that if a threshold number of passwords was
not accessible (if they were forgotten, for example, or
trustees were unavailable due to sickness) the only avail-
able counts would be manual counts. A threshold of two
trustees was determined based on anticipated availabil-
ity of the ofﬁcials, and it was explained that two trustees
could collude to determine the correspondence between
conﬁrmation numbers and codes, and hence that each
trustee should keep her password secret.
The trustees generated commitments to the decryption
paths for each of 5000 ballots per ward (for six wards).
Scantegrity published the commitments on October 13
2009 at 12:13am.
Meeting 2 In Meeting 2, held on October 14, 2009,
trustees used Scantegrity-written code to respond to chal-
lenges generated using stock market data at closing on
October 14. Half of the ballot decryption paths commit-
ted to in Meeting 1 were opened. Additionally, trustees
constructed ballots (associations between candidates and
conﬁrmation codes) at this meeting, and generated com-
mitments to them. Scantegrity published the stock mar-
ket data, the challenges, and the responses.
Ballot Design The ballot used for the 2009 election
was based on ballots used for the 2007 election. We
made the conscious choice to modify (as little as pos-
sible) a design already used successfully in a past elec-
tion, and not to use the ballot we had designed for the
mock election. The main reason for reusing the ballot
design was that it would be familiar to voters. The ballot
was required to contain instructions in both English and
Spanish: marking instructions, instructions for write-ins,
instructions for IRV and any Scantegrity-related instruc-
tions (see Figure 2).
Printing Ballots We use “invisible” ink to print the
marking positions that reveal conﬁrmation codes to vot-
ers. We used reﬁllable inkjet cartridges in multiple color
8
Figure 2: An unmarked Takoma Park 2009 ballot for Ward 1 showing instructions in Spanish and English, the options,
the circular alignment marks, the 2D barcode, the ballot serial number (on the stub, meant for poll workers to keep
track of the number of ballot used) and the online veriﬁcation number (for voters to check their codes). The true ballot
was printed on legal size paper and was hence larger than shown.
9
Tear-offlineWardnumberReactiveink,darkenswhenmarkedwithpen2Dmachine-readablebarcodeAlignmentmarkForvotertolookuponlinepositions of an Epson R280 printer to print conﬁrmation
codes. The ink is not actually invisible, but looks like
a yellow bubble before marking and a dark bubble with
light yellow codes after marking. 15
We initially began printing with 6 printers, but they
proved unreliable. It was our expectation that using large
amounts of commodity hardware would scale, but it did
not. We did not anticipate the number of failure modes
we experienced and our printing process was delayed by
approximately 1 and a half days.
Ballot Delivery Mail-in (absentee) ballots were deliv-
ered to the City Clerk on 16 October. Early, in-person
voting ballots were delivered on October 27 for early vot-
ing on October 28, and all other ballots a couple of days
later on October 30.
Absentee ballots were identical to in-person voting
ballots except they did not contain online veriﬁcation
numbers and voters were not given any instructions on
checking conﬁrmation numbers online. They were re-
turned by mail in double envelopes and scanned with
the early votes. Conﬁrmation numbers for these ballots
were, however, made available online after scanning, so
that there was no distinction in published data between
absentee and in-person voted ballots.
The board decided to issue ballots without conﬁrma-
tion numbers due to the small number of anticipated ab-
sentee votes and the costs associated with mailing ballots
with special pens. Mailing the ballots with conﬁrmation
codes would allow veriﬁcation of conﬁrmation codes, but
opens up new attacks: the possibility of false charges of
election fraud by adversaries who might expose conﬁr-
mation codes and reprint ballots, or use expensive equip-
ment to attempt to determine the invisible codes. Strong
veriﬁcation for absentee ballots is an ongoing research
subject within the Scantegrity team.
Early in-person voters used Scantegrity ballots with
all Scantegrity functionality, except that the early votes
were scanned in after the polls closed on Election Day,
and not by voters themselves. Voters were, however,
provided veriﬁcation cards and could check conﬁrmation
codes for these ballots online.
Poll Worker Training Several training sessions were
held in the weeks prior to the election. Manuals from the
previous election were updated and a companion guide
was created with Scantegrity-speciﬁc instructions. Elec-
tion judges were given these two manuals, and a member
from our team demonstrated the voting process at one
session.
15See http://scantegrity.org/˜carback1/ink for
more information on the printing process
10
Voter Education Voter education for this election fo-
cused on online veriﬁcation. Articles in the City news-
paper before the real election indicated that voters could
check conﬁrmation numbers online; this was also an-
nounced on the city’s election website. 16
Scanner Setup We attempted to minimize, not pre-
vent, 17 the potential for using the wrong software by
installing our software on top of Ubuntu Linux on SD
ﬂash cards, setting the “read-only” switch on each card,
and setting up the software to read and write to USB
sticks. We ﬁngerprinted the ﬁrst card after testing with
the sha1sum utility and cloned it to a second card for
the other netbook. Each netbook was set to boot from
the card and BIOS conﬁguration was locked with a pass-
word.
Both ﬂash cards were checked with the sha1sum utility
then placed into the netbook which was placed into a lock
box and delivered to Takoma Park. The USB sticks were
initialized with scanner conﬁguration ﬁles. We uniquely
identiﬁed each scanner by changing the ScannerID ﬁeld
in the conﬁguration ﬁles, then we placed the correspond-
ing USB sticks (3 for each netbook) into the lock box.
Upon delivery of the scanners the day before the elec-
tion, we gave election ofﬁcials the lock box keys and
showed them how to open the lock boxes. We conﬁrmed
with election ofﬁcials the contents of each box and the
ofﬁcials veriﬁed, with our assistance, that the USB mem-
ory sticks did not contain any ballot data by looking at
the conﬁguration ﬁle and making sure the ballot data ﬁle
was blank. 18 To protect against virus infection on the
sticks we set them to read-only for this procedure.
6.2 Election Day
On Election Day, November 3, 2009, polls were open
from 7 am to 8 pm at a single polling location, the
Takoma Park Community Center. Several members of
the SVST were present through most of the day in the
building in case of technical difﬁculty. One SVST mem-
ber was permitted in the polling room at most times as an
observer, and a couple of SVST members were present
in the vestibule giving out and collecting survey forms
through most of the day. Lillie Coney of the Electronic
Privacy Information Center, who performed a print audit
on the request of the Board of Elections, was present in
the polling room through a large part of the day.
16http://www.takomaparkmd.gov/clerk/election/
2009/
17Scantegrity would detect manipulation at the scanner. A better
solution would use trusted hardware technology (e.g. a TPM [14]).
18These were the only 2 ﬁles on the disk at this time. Additionally,
election ofﬁcials did not check ﬁngerprints on the ﬂash cards. Since no
3rd party had reviewed the code or ﬁngerprinted it they relied on our
chain of custody.
Starting the Election The scanner was the only SVST
equipment to set up and it was a turn key system. Elec-
tion judges needed to plug in the USB sticks and power
on the netbooks. The scanner was attached to a scan-
ning apparatus, and cables were run into the lockbox that
contained the netbook. When ready, the scanner would
beep 3 times. After reading a ballot, the scanner would