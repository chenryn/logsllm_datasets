Vk = Vk ∪ {sl−1}
if sl−1 → sl /∈ Tk then
2:
3:
4:
5:
6:
7:
8:
9:
10:
11:
12:
13:
14:
15: end for
16: V =
17: f (A) =
else
end if
Tk = Tk ∪ {sl−1 → sl} and nk(sl−1, sl) = 1
nk(sl−1, sl) = nk(sl−1, sl) + 1
end while
z(ωk) = 1(ωk |= φ)
(cid:17)N
(cid:17)N
(cid:2)N
(cid:3)
(cid:3)
(cid:2)N
k=1 Vk, T =
k=1 z(ωk)
k=1 Tk
i∈Vk
(cid:3)
(cid:3)
(cid:18)
(cid:18)
(cid:19)nk(si,sj )
(cid:19)2nk(si,sj )
j|(i→j)∈Tk
aij
bij
i∈Vk
k=1 z(ωk)
j|(i→j)∈Tk
aij
18: g(A) =
bij
19: OPTIMISATION of f (A) (see Algorithm 2)
20: ˆγN (Amin) = f (Amin)/N
21: ˆγN (Amax) = f (Amax)/N
22: ˆσN (Amin) = g(Amin)/N − ˆγN (Amin)2
23: ˆσN (Amax) = g(Amax)/N − ˆγN (Amax)2
Output: (1 − δ)-conﬁdence interval CI = [L; U ]
√
where L = ˆγN (Amin) − Φ
−1
√
N
δ/2 ˆσN (Amin)/
−1
and U = ˆγN (Amax) + Φ
1−δ/2 ˆσN (Amax)/
N
These values are supposed to be unknown but still to fall
within the respective intervals: a ∈ [0.5; 5.5] × 10
−4 and
c ∈ [0.0493; 0.0503]. Recall that γ = ac/(1 − ad) is the
probability of reaching s2 from s0.
We sample under the perfect
importance sampling dis-
tribution B deﬁned with respect to the centred DTMC ˆA
parametrised by ˆa = 3 × 10
−4 and ˆc = 0.0498.
This example illustrates the difference of results between
our approach and the standard importance sampling approach
for DTMCs. For each experiment, we calculate and then report
in Table I the descriptive statistics of the number of rounds nr
necessary to ﬁnd the minimum and the maximum, the corres-
ponding matrices Amin and Amax (respectively described by
the couples (amin, cmin) and (amax, cmax)). We remark that
on average, it takes between 181 and 3119 rounds to converge
close to Amin and Amax.
In Table II, we report the average bounds of the conﬁdence
intervals obtained by IS and by IMCIS and their mid-value.
Note that the IS conﬁdence interval is centred on ˆγN ( ˆA) and
309
Algorithm 2 Random Search Optimisation
Input: [ ˆA]: an IMC
f (A) : function to optimise (A ∈ [ ˆA])
V : set of visited states
R : number of consecutive successes to observe
Rmax: maximal number of rounds
1: Rcurrent = 0 : current number of rounds
2: Rwhile = 0 : current number of consecutive successes
3: Amin = Amax = ˆA
4: while Rwhile  f (Amax) then
Amax = A and Rwhile = 0
may be then slightly different than the IMCIS mid-value. Since
we sampled under the perfect distribution, the exact value
of the centred DTMC, γ( ˆA) = 1.4944 × 10
−5 is always
contained in the importance sampling conﬁdence interval. But
this 100% coverage for γ( ˆA) drops to zero for γ since the
conﬁdence interval is reduced to γ( ˆA). In comparison, the
IMCIS conﬁdence interval has a 100% coverage for both γ( ˆA)
and γ.
B. Group repair model
The following benchmark is a reliability model taken from
[24], small enough (125 states) to be investigated using
PRISM [17] to corroborate our results. The system is modelled
as a continuous time Markov chain and comprises three types
of subsystems (1,··· , 3) containing, respectively, 4 compon-
ents that may fail independently. The components fail with
rates (α2, α, α) where α = 0.1 is supposed to be unknown, and
are repaired with rate 1. In addition, components are repaired
with priority according to their type (type i has highest priority
than type j if i < j). The components of type 2 and 3
are repaired one by one as soon as one has failed whereas
components of type 1 are repaired all together as soon as more
than two of them have failed. The property we consider is the
Table I: Illustrative example with a ∈ [5, 5.5] × 10
−5 and c ∈ [0.0493, 0.0503].
average
min
max
st. dev.
nr
2181
1244
4119
580
ˆamin
5.02 × 10−5
5 × 10−5
5.1 × 10−5
2.11 × 10−7
ˆcmin
0.0496
0.0493
0.0502
2.2 × 10−4
ˆamax
5.48 × 10−4
5.45 × 10−4
5.5 × 10−4
1.25 × 10−6
ˆcmax
0.0501
0.0494
0.0503
1.63 × 10−4
Table II: Comparison between IS and IMCIS.
Illustrative example
Group repair
SWaT
IS
IMCIS
IS
IMCIS
IS
IMCIS
95%-CI
[1.494 ± 0] × 10−5
[0.249; 2.7] × 10−5
[1.104; 1.171] × 10−7
[1.029; 1.216] × 10−7
[1.2; 1.7] × 10−2
[0.7; 2.2] × 10−2
probability of reaching a failure state that corresponds to the
failure of all the components, before returning to the initial
state of no failures. The probabilistic transitions are symbolic
functions of α. For α = 0.1, γ = 1.179 × 10
−7.
In the following experiments, we used frequentist inference
to compute an estimate ˆα = 0.0995 and calculated a 99.9%-
conﬁdence interval CI: α ∈ [0.09852; 0.10048]. We can then
easily build an IMC [A(ˆα)] centred on ˆA = A(ˆα). Note
that γ( ˆA) = 1.117 × 10
−7. We then determined an import-
ance sampling distribution by the cross-entropy algorithm for
DTMC described in [24].
Table II shows that the empirical IS coverage for γ( ˆA) is
already below 95%. This problem is well-known and docu-
mented (e.g. [25]). As for the illustrative example, the IMCIS
conﬁdence interval is larger and its coverage of γ( ˆA) remains
perfect. The problem comes from a poor estimation of the
likelihood ratio standard deviation. Detecting this phenomenon
is an open problem, in practice tackled by increasing NIS. On
the contrary, the IMCIS conﬁdence interval keeps a perfect
coverage of γ( ˆA) and remains good with respect to the exact
model when the IS coverage of γ drops to 27%.
Figure 2 shows a superposition of IS and IMCIS CI for
the repair model. Even if the experiments have been made
independently, the IS conﬁdence intervals are almost always
fully contained in the IMCIS conﬁdence intervals, that prove
empirically a better reliability. Figure 3 illustrates the evolution
of the IMCIS conﬁdence bounds of an IMCIS experiment
during the optimisation step. Figure 5 shows the range of
probabilities for the repair model given the interval [ˆα =
0.09852; 0.10048]. Note that the average IMCIS conﬁdence
interval in Table II covers 83% of the interval of probabilities
deﬁned by γ(A(α)).
C. Repair model
The following benchmark is also a failure-repair process
taken from [24]. This benchmark is larger (40820 states) and
is composed of 6 subsystems with respectively 5, 4, 6, 3, 7, 5
components that fail with rates (2.5α, α, 5α, 3α, α, 5α) where
α belongs to interval [0.8236 × 10
−3], and
−3, 1.1764 × 10
310
Mid value
1.494 × 10−5
1.499 × 10−5
1.138 × 10−7
1.123 × 10−7
1.45 × 10−2
1.45 × 10−2
Coverage of γ( ˆA)
Coverage of γ
100%
100%
80%
100%
-
-
0%
100%
27%
75%
-
-
are repaired with rate (1, 1.5, 1, 2, 1, 1.5). As in the group
repair model, components are repaired with priority according
to their type (type i has highest priority than type j if
i < j). However, the components are all repaired one by
one as soon as one has failed. The property we consider is
the probability of reaching a failure state that corresponds
to the failure of all the components of at least one type,
before returning to the initial state of no failures. We assume
that α = 0.001 in the IS experiments. For this value,
γ = 7.488 × 10
−7. We repeated ﬁve times our experiments.
The 95% conﬁdence intervals obtained by IS captured values
−7, 7.5205 × 10
in [7.3895 × 10
−7] while IMCIS captured
values between [5.6884 × 10
−7]. Both set
of experiments are thus satisfying on this large model with
respect to α = 0.001. However, if α is not in the interval
[0.99 × 10
−3], the IS intervals do not contain the
exact value γ whereas the IMCIS intervals still contain γ if α
is in [0.88 × 10
−7, 9.5491 × 10
−3, 1.12 × 10
−3, 1.1 × 10
−3].
D. Secure Water Treatment model
The SecureWater Treatment testbed (SWaT) built at Singa-
pore University of Technology and Design is a scale-down
version of a real
industry water treatment plant [1]. The
testbed is built to facilitate research on cyber security for
CPS, which has the potential to be adopted to Singapore’s
water treatment systems. SWAT consists of a modern six-stage
process. The process begins by taking in raw water, adding
necessary chemicals to it, ﬁltering it via an Ultraﬁltration (UF)
system, de-chlorinating it using UV lamps, and then feeding
it to a Reverse Osmosis (RO) system. A backwash process
cleans the membranes in UF using the water produced by
RO. We refer to [1] for more details about the system and
the datasets. Automatic model learning techniques are used
to construct a set of Markov chains through abstraction and
reﬁnement, based on long system execution logs. The model
can be described by 70-state DTMC and IMC. Our initial state