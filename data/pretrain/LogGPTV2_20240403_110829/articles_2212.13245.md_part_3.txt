more active and popular (i.e., more developers proactively use them), leading
to a more significant number of pull requests and issues. The second interpre-
12 RoozbehAghilietal.
tation might be that AIOps projects are in the first stages of formation and
notmatureenough,havingmoredefectsandflawsandmoredeveloperstrying
to fix these problems. The third explaination is that AIOps projects are on
averagelargerthanthetwobaselineprojects(asshowninTable3),whichmay
lead to more pull requests and issues. In addition, the state of the projects in-
dicatesthatonly1%ofAIOpsprojectshavebeenarchived,whilethisamount
for ML and General baseline is 1.7% and 3.7%, respectively. Overall, taking
into consideration all the mentioned metrics, AIOps projects seem to be more
active and popular than both baselines.
Summary of RQ1
On average, AIOps projects are receiving more attention than the ML
and General baselines. The primary language used in them is Python,
followed by Java. They are growing faster than the baselines in re-
cent years, demonstrating the growing needs and active practices in
this area. The size of AIOps projects is larger than the baselines, and
focusing on other GitHub metrics such as number of stars, forks, and
releases,AIOpsprojectsseemtobemorepopularandactivethanboth
baselines.
3.2 RQ2. What are the characteristics of AIOps projects in terms
of their input data, analysis techniques, and goals?
3.2.1 Motivation
AIOps researchers and practitioners leverage different techniques to analyze
different types of operational data and achieve different goals. However, it is
unclearhowrealAIOpsprojectsleveragedataandtechnologiestoachievethe
goals. In this RQ, we qualitatively analyze our set of AIOps projects to un-
derstand the characteristics of these projects’ input data, analysis techniques,
and goals. Our results can help researchers and practitioners further under-
standthestatusofAIOpspracticesandthecharacteristicsofAIOpsprojects.
Our results can also provide insights for future work to provide support for
different AIOps application scenarios.
3.2.2 Approach
We manually examine each AIOps project to understand its input data, anal-
ysis techniques, and goals. For each project, we manually investigate four
sources of information; the “about” section, the “readme” file, the source code,
and the additional documentations if available. Figure 3 illustrates the three
key concepts of our manual analysis (input data, analysis techniques, and
goals) and their relationship.
StudyingtheCharacteristicsofAIOpsProjectsonGitHub 13
Input data Analysis techniques Analysis goals
Fig. 3: The three key concepts of our manual analysis.
Input data
Monitoring Data (86%) Multi-media (6%) Source code (5%)
Log (35%) Image (42%)
Network-traffic data (21%) Video (29%) Technical Q/A
Performance metric (20%) Audio (29%) data (2%)
KPI (10%)
IoT sensor data (9%)
Trace (5%) Alarm (1%)
Fig. 4: The categorization of the input data used in AIOps projects. The high
level categories are highlighted in dark.
– Inputdata:Thetypesofdata(e.g.,logdata)thatanAIOpsprojecttakes
as inputs to achieve its objectives.
– Analysis techniques:Themainanalysistechniques(e.g.,machinelearn-
ing techniques) that an AIOps project adopts to analyze the input data
and achieve its objectives.
– Goals: The objectives (e.g., anomaly detection) that an AIOps project
aims to achieve through its input data and analysis techniques.
Manual coding process.Weuseopencodingapproach(Khandkar,2009)to
extract the information related to the three key concepts shown in Figure 3.
Opencodingiswidelyusedamongsoftwareengineeringresearcherstoconclude
a high-level abstraction from lower-level data (Stol et al., 2016; Wohlin and
Aurum, 2015). To label the projects, the first two authors of the paper (i.e.,
coders) jointly perform a coding process, determining each project’s input
data, analysis techniques, and goals. We perform a five-step coding process as
follows.
Step 1: Coding. Each coder analyzes the 97 AIOps projects and assign
labels for each concept (input data, techniques, and goals) of each project.
Multiple labels can be assigned to a concept of a project. This step takes a
few days for each coder to complete.
Step 2: Discussion. The coders share their responses and discuss the
created labels. The main goal of the discussion session is to obtain a common
understanding of the labels for the input data, techniques, and goals. Based
on the separate labels of the coders, we join related labels together and take
14 RoozbehAghilietal.
Analysis techniques
Classicmachine learning (50%) Deep learning (14%) Time series model (11%) Statistical analysis (11%)
Supervised (60%) Unsupervised (63%) ARIMA (25%) Descriptive analysis (66%)
Random Forest (23%) LSTM (57%) Holt-winters (11%) Outlier detection (17%)
SVM (19%) AE (28%) EWMA (11%) Exploratory analysis (17%)
Decision Tree (17%) SOM (5%) ES (7%)
X LoG gB iso tio cs t R ( e1 g1 r% es) sion (11%) B Vaa ry ie as tii oan n an l e Atw uto or ek ns c ( o5 d% er) (5%) M GRA U ( 7 (% 7%) ) Other (5%)
Naive Bayes (8%) Prophet (7%) Knowledge graph (20%)
KNN (6%) Supervised (37%) SR (4%) Search tree (20%)
Linear Regression (4%) ANN (70%) SARIMA (4%) Fault Injection (20%)
LightGBM (1%) CNN (15%) TCN (4%) Fuzzy matching (20%)
RNN (15%) DeepAR (4%) Search crowd knowledge
Unsupervised (40%) TDA (3%) (20%)
I K Ls O-o ml Fa e t (i a 1o n 2n s % F (1o )3re %st ) (23%) Associate rule mining (2%) S AP RO (T 3 %(3 )%) Unknown (3%)
PCA (12%) Time/variable-correlation (50%)
H Cli uer sa terc rih ni gc a (l 6 C %l )ustering (10%) A Cup sri to or mi i( z2 e5 d% () 25%) Natural language processing (2%) N/A (2%)
DBSCAN (6%) Pre-trained (67%)
Invariant Miner (4%) W2V (75%)
SVD (4%) BERT (25%)
OPTICS (4%)
GMM (4%) N-gram (33%)
KDE (2%)
Fig. 5: The categorization of the analysis techniques used in AIOps projects.
The high level categories are highlighted in dark.4
Goals
Anomaly detection (59%) Monitoring (14%) Anomaly prediction (7%)
Network-traffic-based (33%) Metric (53%) Metric-based (78%)
Log-based (30%) Log (29%) Log-based (22%)
Metric-based (14%)
Network-traffic (6%)
IoT sensor-based (12%)
Alert (6%)
KPI-based (8%) Root cause analysis (6%)
Health check (6%)
Trace-based (3%)
Log-based (37%)
Metric-based (25%)
Classification (2%) AIOps infrastructure (3%) Trace-based (25%)
KPI-based (13%)
Queries (34%) Log parsing (75%)
Malwares (33%) Infrastructure (25%)
Dataset (6%)
Machines (33%)
Knowledge extraction (2%) Log (38%)
Metric (38%)
Trace (12%)
Self healing (1%) KPI (12%)
Fig. 6: The categorization of the goals of the AIOps projects. The high level
categories are highlighted in dark.
apart some high-level labels into smaller ones. After this session, we finalize
the labels for each concept (input data, techniques, and goals).
Step 3: Revision. Based on the results of the discussion session and the
agreed-upon labels, each coder revises his responses from Step 1.
4LSTM approaches can be used in a supervised or unsupervised manner (Chen et al.,
2021).Inoursetofprojectsandprimarilyforanomalydetection,projectsuseLSTMinthe
unsupervisedform.
StudyingtheCharacteristicsofAIOpsProjectsonGitHub 15
Step 4: Resolving disagreements. The coders compare their final re-
sults from step 3 and discuss any conflict that may remain. The coders try to
resolve the conflicts, but if an agreement can not be reached, the third author
analyzes the project, and the final decision is made.
Step 5: Final revision.Inthefinalstage,wecreateamindmapfromall
theproducedlabels.Wethendiscussthelabelsandformanhierarchy,change
somelabels’namesforclarity,andmergesomesmallcategoriestobecohesive.
3.2.3 Results
Figures4,5,and6presentourcategorizationoftheinputdata,analysistech-
niques, and goals of the AIOps projects, respectively. We further define our
coding labels in Tables 4, 5, and 6. It is important to note that each project
may have multiple input data, analysis techniques, or goals.
Input data: Monitoring data (e.g., logs, network-traffic data, and
performance metrics) is the dominant type of input data of the
AIOpsprojects,withlogsbeingthemostcommonlyusedinputdata
type.ThecategorizationoftheinputdataisillustratedinFigure4.Wedivide
the input data of AIOps projects into five main categories: monitoring data,
multi-media,sourcecode,technicalquestion-answer(QA)data,andalarm.We
define these categories and provide an example for each in Table 4. Among
them, monitoring data is the most popular, used in 86% of the projects. The
monitoring data is divided into 6 sub-categories: log, network-traffic data,
performance metric, Key Performance Indicator (KPI), Internet of Things
(IoT), sensor data, and trace. Among them, log data is the most commonly
used.WefindtwointerestinginputdatatypesfortheAIOpsprojects:network
traffic and IoT sensor data. A considerable proportion of the projects (18%)
use network traffic data as their input. Also, 8% of projects use IoT sensor
data.
The second popular category of input data for AIOps approaches is multi-
media (image, video, or audio) (6%), followed by source code (5%), technical
Q/A data (2%), and alarm (1%). We define the input of a project as “source
code” ifitanalyzesthesourcecodeofothersoftware.Wealsodefinetheinput
as “technical Q/A data” if the project analyzes data from Q/A websites like
Stack Overflow.
Analysistechniques:Classicalmachinelearningmodelsarethemost
commonly used analysis techniques, followed far behind by deep
learning, time series, and statistical analysis techniques. We present
ourcategorizationoftheappliedanalysistechniquesofAIOpsprojectsindetail
in Figure 5. We derive 9 high-level categories: classic machine learning (50%),
deeplearning(14%),timeseriesmodel(11%),statisticalanalysis(11%),others
(5%), unknown (3%), language model (2%), associate rule mining (2%), and
N/A(notapplicable)(2%).Definitionsandexamplesforeachcategorycanbe
found in Table 5.
16 RoozbehAghilietal.
Table 4: Different types of input data, their definitions, and examples.
Inputdata Definition Repositoryexample
MonitoringData Differenttypesofdatathat
recordtheruntimestatusofasystem.
Log System-generateddatathatrecords Repository(58811148)useslogdataas
runtimeeventsthathavehappened. inputtoperformanomalydetection.
Network-trafficdata Monitoringdatathatrecords Repository(79239275)usesnetwork-
networkactivities. trafficdatatoidentifymalicious
behaviorsandattacks.
Performancemetric Quantitativemeasurementsusedto Repository(160285839)uses
tracktheperformanceofasystem. differentperformancemetricssuchas
Thesemetricsareoftenoperational, CPUandmemoryusagetoperform
suchasCPUusage. varioustaskssuchasanomaly
detectionandtimeseriesforecasting.
KPI Measurementsrelatedtokeybusiness Repository(142442484)usesdifferent
goalsofasystem.Thesemetricsare KPIsintimeintervals
oftenstrategic. toidentifyimpactfulsystemproblems.
IoTsensordata Datacollectedbydevicesconnected Repository(142325304)usesreal-time
toanIoTnetwork. IoTsensordatatodetectanomalies.
Trace Aspecializeduseofloggingtorecord Repository(397983735)gathersa
informationaboutasystem’s datasetoftracesthatcanbeused
executionwithcomprehensivedetails. toanalyzeoperationsproblems.
Multi-media Differenttypesofmulti-mediadata, Repository(287642401)generates
includingimages,videos,and summariesofdatatypesincluding
audios. imagedataformonitoringpurposes
Sourcecode Sourcecodeofsoftwaresystems. Repository(201529303)canbe
installedonKubernetessourcecode
andprovideself-monitoringand
self-healing.
TechnicalQ/Adata Datacollectedfrom Repository(345320486)extracts
technicalQ/Awebsitessuchas informationfromStackOverflowto
StackOverflow. findfastsolutionsforfaultsintheir
platform.
Alarm Alarmsgenerated Repository(160285839)usesalarms
duringsystemruntime. tofindtheassociationrulesbetween
them.
To find a GitHub repository with its ID, one can either click the hyperlink or use the link
https://api.github.com/repositories/{ID}where{ID}isreplacedbyaspecificrepositoryID.
Both the classic machine learning and deep learning categories are fur-
ther divided into supervised and unsupervised learning algorithms. Regarding
classicmachinelearningapproaches,supervisedalgorithmsareusedmorethan
unsupervisedones(60%to40%).Thetop-3supervisedalgorithmsarerandom
forest (23%), support vector machine (SVM) (19%), and decision tree (17%).
Thetop-3unsupervisedalgorithmsareisolationforest(23%),k-means(13%),
andlocaloutlierfactor(LOF)(12%).Regardingthedeeplearningapproaches,
unsupervised techniques are more popular than supervised algorithms (63%
comparedto37%).Longshort-termmemory(LSTM),autoencoder(AE),and
self-organizing map (SOM) are the most used unsupervised algorithms, while
artificial neural networks (ANN) is the dominant supervised technique.
Considering our results, we could not find a strong correlation with (Dang
et al., 2019), where they state that in many AIOps cases, only unsupervised
StudyingtheCharacteristicsofAIOpsProjectsonGitHub 17