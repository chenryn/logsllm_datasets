unhash
删除散列表中的指定命令
un1imit
取消指定的资源限制
unset:
删除指定的变量特性
uneetopt:
删除指定的shell选项
wait
等持指定的作业或进程完成
whence
显示指定命令会如何被shell解释
where
如果shell找到的话，显示指定命令的路径名
which
用csa风格的输出量示指定命令的路径名
comp11e
编辑指定的函数或脚本，加速自动加载
peoTpouz
对可加载za模块执行特定操作
zsh shell在提供内建命令方面太强大了！你可以根据bash中对应的命令来识别出其中的大多
数命令。zshshell内建命令最重要的功能是模块。
2.附加模块
有大量的模块可以为zshshell提供额外的内建命令，而且这个数量还在随着程序员不断增加
新模块而不断增长。表23-5列出了在写作本书时比较流行的模块。
表23-5zsh模块
模块
描
zah/Gatet.ime
额外的日期和时间命令及变量
2ah/f11ee
基本的文件处理命令
zah/napf11e
通过关联数组来访问外部文件
sungseg/tes
额外的科学函数
zah/pere
扩展的正则表达式库
zah/net/&ocket
Unix城套接字支持
zsh/st.at
访问stat系统调用来提供系统的统计状况
zsh/systen.
访问各种底层系统功能的接口
zsh/net/tcp
访问TCP套接字
dgz/gz
专用FTP客户端命令
---
## Page 522
23.5zsh shell 的组成
507
（续）
模
块
描
述
zsh/zselect.
阻塞，直到文件措述符就绪才返目
zsh/zuti1
各种elI实用工具
zsh shell模块涵盖了很多方面的功能，从简单的命令行编辑功能到高级网络功能。zsh shell
的思想是提供一个基本的、最小化的shell环境，让你在编程时再添加需要的模块。
3.查看、添加和删除模块
zmodload命令是zsh模块的管理接口。你可以在zsh shell会话中用这个命令查看、添加或删
除模块。
zmodload命令不加任何参数会显示zshshell中当前已安装的模块。
peoTpoez$
zah/zuti1
zsh/conplete
zah/ma.in
zsh/terninfo
zsh/zle
zsh/parameter
不同的zshshell实现在默认情况下包含了不同的模块。要添加新模块，只需在zmodload命令
行上指定模块名称就行了。
$zmodload zsh/zftp
不会有信息表明模块已经加载成功了。你可以再运行一下zmodload命令，新添加的模块会
出现在已安装模块的列表中。
23
一旦加载了模块，该模块中的命令就成为了可用的内建命令。
 zftp open myhost,con rich testing1
Welcome to the myhost FTP server 
 zftp cd test
012111 11:21P
 zftp dir
120823 test]
 zftp get test1 > test1.txt
012111 11:23PM
118432 test2
# zftp close
zftp命令允许你直接在zshshell命令行操作完整的FTP会话！你可以在zshshell脚本中使用这
些命令，直接在脚本中进行文件传输。
要删除已安装的模块，用-参数和模块名。
 zmodlosd -u zsh/zftp
 zftp
zsh1 conmand not found: zftp
---
## Page 523
508
第23章使用其他shell
说明通常习惯将zmodload命令放进SHOME/.zshrc启动文件中，这样在zsh启动时常用的函数
就会自动加载。
23.6zsh脚本编程
zsh shell的主要目的是为shell程序员提供一个高级编程环境。认识到这点，你就能理解为什
么zshshell会提供那么多方便脚本编程的功能。
23.6.1数学运算
如你所料，zsh shell可以让你轻松执行数学函数。一直以来，Kom shell因支持使用浮点数面
在数学运算支持方面处于领先地位。zshshell在所有数学运算中都提供了对浮点数的全面支持。
1.执行计算
zsh shell提供了执行数学运算的两种方法：
1et命令
口双圆括号
在使用1et命令时，你应该在算式前后加上双引号，这样才能使用空格。
$ let value1=* 4 * 5.1 / 3.2 *
echo $value1
6 . 3750000000
注意，使用浮点数会带来精度问题。为了解决这个间题，通常要使用printf命令，并指定
能正确显示结果所需的小数点精度。
$ printf *$6,3f\n* $value1
6 .375
现在好多了！
第二种方法是使用双圆括号。这个方法结合了两种定义数学运算的方法。
 value1=$(( 4 * 5.1 1)
(( value2 = 4 * 5.1 ))
$ printf *&6,3f\n* $value1 $value2
20 , 400
20 , 400
注意，你可以将双圆括号放在算式两边（前面加个美元符）或整个赋值表达式两边。两种方
法输出同样的结果。
如果一开始没用typeset命令来声明变量的数据类型，那么zsh shell会尝试自动分配数据类
型。这在处理整数和浮点数时很危险。看看下面这个例子。
---
## Page 524
23.6zsh脚本编程
509
$valuel=10
(( E / tonteAs 1)s=zentes $
$echo Svalue2
现在这个结果可能并不是你所期望的。在指定数字时没指定小数点后的位数的话，zshshell
会将它们都当成整数值并进行整数运算。要保证结果是浮点数，你必须指定该数小数点后的位数。
$ value2=$(I $valuel / 3. 1
$valuel=10.
lecho $value2
SEEEEEEEEEEEEEEE*E
结果是浮点数形式了。
2.数学函数
在zshshell中，内建数学函数可多可少。默认的zsh并不含有任何特殊的数学函数。但如果安
装了zsh/mathfunc模块，你就会拥有远远超出你可能需要的数学函数。
1 ((6) xbs1) $=[on[e l
↓zmodload zsh/mathfunc
zah: unlcnow functlon: sqrt
value1=$ (I sqrt (9) 1
 echo $valuel
非常简单！现在你拥有了一个完整的数学函数库。
说明zsh中支持很多数学函数。要查看zsh/mathEunc模块提供的所有数学函数的清单，可以
参看zsh模块的手册页面。
23
23.6.2结构化命令
zsh shell为shell脚本提供了常用的结构化命令：
 if-then-else语句
for循环（包括C语言风格的）
 while循环
 unti1循环
 select语句
 case语句
zsh中的每个结构化命令采用的语法都跟你熟悉的bash shell中的一样。zsh shell还包含了另外
一个叫作repeat的结构化命令。repeat命令使用如下格式。
---
## Page 525
510
第23章使用其他shell
repeat paran
do
done
connands
param参数必须是一个数字或能算出一个数值的数学算式。repeat命令就会执行指定的命令
那么多次。
8 cat test1
#1/bin/z.ah
using the xepeat cormand
(/ 0T 1)s=entes
repeat $valuel
do
echo *Thla is a test*
done
$./test1
This le a teat
Thla la a cest
Thia la a test
Thia la a test
Thia la a test
这条命令还允许你基于计算结果执行指定的代码块若干次。
23.6.3函数
zsh shell支持使用function命令或通用圆括号定义函数名的方式来创建自定义函数。
8 function functestl (
&functeat2 ()(
echo *Thlα Ia the teat2 functlon*
8functest1
Thia la the testl function
 functest2
Thia la the test2 function
跟bash shell函数一样（参见第17章），你可以在shell脚本中定义函数，然后使用全局变量或
传递参数给该函数。
23.7小结
本章讨论了可能遇到的两种流行的可选择Linux shell。dash shell是作为DebianLinux发行版的
一部分开发的，主要出现在UbuntuLinux发行版中。它是Bourme shell的精简版，所以它并不像bash
shell一样支持那么多功能，这可能会给脚本编程带来一些问题。
---
## Page 526
23.7小结
511
zsh shell通常会用在编程环境中，因为它为shell脚本程序员提供了许多好用的功能。它使用
可加载的模块来加载单独的代码库，这使得高级函数的使用与在命令行上运行命令一样简单。从
复杂的数学算法到网络应用（如FTP和HTTP），可加载模块支持很多功能。
本书接下来将会深人探讨Linux环境中可能会用到的一些特定脚本编程应用。下一章将介绍
如何编写简单的实用工具来协助日常的Linux管理工作。这些工具能够极大简化你的工作。
23
---
## Page 528
Part 4
第四部分
创建实用的脚本
本部分内容
第24章编写简单的脚本实用工具
第25章创建与数据库、Web及电子邮件相关的脚本
第26章一些小有意思的脚本
---
## Page 529
第24章
编写简单的脚本实用工具
本章内容
口自动备份
口管理用户账户
口监测磁盘空间
X小都会有各种各样的任务，从监测磁盘空间到备份重要文件再到管理用户账户。shell脚
本实用工具可以让这些工作轻松许多！本章将演示一些可以通过在bash shell中编写脚本工具来实
现的功能。
24.1归档
不管你负责的是商业环境的Linux系统还是家用环境的，丢失数据都是一场灾难。为了防止
这种倒霉事，最好是定时进行备份（或者是归档）。
但是好想法和实用性经常是两回事。制定一个存储重要文件的备份计划绝非易事。这时候
shell脚本通常能够助你一臂之力。
本节将会演示两种使用shell脚本备份Linux系统数据的方法。
归档数据文件
如果你正在用Linux系统作为一个重要项目的平台，可以创建一个shell脚本来自动获取特定
目录的快照。在配置文件中指定所涉及的目录，这样一来，在项目发生变化时，你就可以做出对
应的修改。这有助于避免把时间耗在恢复主归档文件上。
本节将会介绍如何创建自动化shell脚本来获取指定目录的快照并保留旧数据的归档。
1.需要的功能
Linux中归档数据的主要工具是tar命令（参见第4章）。tar命令可以将整个目录归档到单个
文件中。下面的例子是用tar命令来创建工作目录归档文件。
$ tar -cf archive.tar /hone/Christine/Project/*,*
---
## Page 530
24.1归档
515
tar: Renoving leading /' from menber namea
S 1s -1 archive.tar
-xV-rur==, 1 Chrlat.ine Chxiatine 51200 Aug 27 10:51 archive.tar
tar命令会显示一条警告消息，表明它删除了路径名开头的斜线，将路径从绝对路径名变成
相对路径名（参见第3章）。这样就可以将tar归档文件解压到文件系统中的任何地方了。你很可
能不想在脚本中出现这条消息。这种情况可以通过将sTDERR重定向到/dev/nul1文件（参见第
15章）实现。
 tar -cf archive.tar /bome/Christine/Project/*,* 2>/dev/nul1
S 1s -1 archive.tar
rVrvr=-, 1 Chrlat.ine Chxiatine 51200 Aug 27 10:53 archive.tar
由于tar归档文件会消耗大量的磁盘空间，最好能够压缩一下该文件。这只需要加一个-z选
项就行了。它会将tar归档文件压缩成gzip格式的tar文件，这种文件也叫作tarball。别忘了使用恰
当的文件扩展名来表示这是个tarball，用.tar.gz或.tgz都行。下面的例子创建了项目目录的tarball。
S tar =zcE archive.tar.gz /home/Chriatine/Project/*,* 2>/@ev/nul1
S 1s -1 archive.tar.gz
-xv-ru-r--, 1 Chrlst.ine Chxiatine 3331 Aug 27 10=53 axchive,tar,gz
现在你已经完成了归档脚本的主要部分。
你不需要为待备份的新目录或文件修改或编写新的归档脚本，面是可以借助于配置文件。配
置文件应该包含你希望进行归档的每个目录或文件。
S cat F11es_Po_Backup
/home /Chz1at.Lne /Pxoect
/home/Chr1 at.1ne /Down1oada