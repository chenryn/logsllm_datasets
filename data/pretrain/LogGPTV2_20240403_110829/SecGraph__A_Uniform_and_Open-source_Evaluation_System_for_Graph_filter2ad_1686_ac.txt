SF AGF SemF A/P Scal. Prac. Rob.
(cid:31)(cid:30)


(cid:31)
(cid:31)
(cid:31)
(cid:31)
(cid:31)
(cid:31)


(cid:31)




(cid:31)



(cid:31)





BDK [26]  












NS [2]

NSR [21] 
NKA [22] (cid:31)
DV [5]

RST [5]

RSM [5]

PFG [23] 
YG [27]

DeA [25] 
ADA [25] 
KL [24]

JLSB [3] 
 A, P












P
P
P
P
P
P
P
P
P
P
P
P



(cid:31)
(cid:31)
(cid:31)
(cid:31)






neighboring mapped pairs.
3.1.2 Seed-free DA
Taking another approach, some powerful seed-free DA
attacks on graph data have been proposed. Using degrees
and distances to other nodes as each node’s ﬁngerprints,
Pedarsani et al. proposed a Bayesian model based seed-
free algorithm for graph data DA [23]. Another seed-free
DA attack to graph data was presented by Ji et al. [3].
Unlike previous attacks, Ji et al.’s attack is an optimiza-
tion based single-phase cold start algorithm.
3.2 Graph DA Analysis
In this subsection, we analyze the performance of ex-
isting graph data DA algorithms. For convenience, in the
rest of this paper, we denote Backstrom et al.’s attacks
[26] by BDK (the initials of the authors), Narayanan-
Shmatikov’s attack [2] by NS, Narayanan et al.’s at-
tack [21] by NSR, Nilizadeh et al.’s attack [22] by
NKA, Srivatsa-Hicks’ three attacks [5] by DV, RST, and
RSM, respectively, Pedarsani et al.’s attack [23] by PFG,
Yartseva-Grossglauser’s attack [27] by YG, Ji et al.’s
two attacks [25] by DeA and ADA, respectively, Korula-
Lattanzi’s attack [24] by KL, and Ji et al.’s attack [3] by
JLSB. We show our analytical results in Table 3 and dis-
cuss the result as follows.
Except for BDK, all the existing SDA attacks are pas-
sive attacks and require auxiliary graphs to perform the
attack, i.e., they employ the structural similarity between
the the anonymized graph and the auxiliary graph to
break the anonymity. However, when we examine the
anonymization schemes in Table 2, we ﬁnd that none
properly consider such auxiliary information in their
threat models.
308  24th USENIX Security Symposium 
USENIX Association
6
To perform BDK attacks [26], an adversary either has
to insert some Sybil users in the dataset before the ac-
tual anonymized data release, or has to be an internal
user that knows its neighborhoods. In either case, such
attacks can only de-anonymize some users but cannot
de-anonymize users in large scale. Furthermore, the at-
tacks cannot tolerate any topological change of the orig-
inal data. Therefore, BDK attacks are not scalable or ro-
bust. These attacks require that an adversary successfully
launches Sybil users or be an internal user that obtains his
neighborhoods.
All the examined DA attacks are semantics-free. This
is because the structural information itself is sufﬁcient
to perfectly or partially de-anonymize graph users. Fur-
thermore, compared to semantics information, structural
information is widely available in large scale, resilient
to noise, and easily computable [2, 3, 5]. Following this
fact, all the attacks except for BDK are (conditionally)
scalable, practical, and robust.
Speciﬁcally, DV, RST, and RSM [5] are condition-
ally scalable and practical. This is because they are not
computationally feasible when the number of seeds is
large. PFG [23] is conditionally practical and robust.
This is because it is very sensitive to the graph den-
sity of the anonymized data. Generally, this attack is
suitable for sparse graphs however it has a signiﬁcant
performance degradation as the graph density increases.
YG [27] is conditionally practical because it is designed
to de-anonymize users of degree no less than 4 in the
anonymized data. In many real world graph datasets, the
users with degree less than 4 could dominate or take a
signiﬁcant portion of graph data based on the statistics
in [3]. The conditional practicability of KL [24] comes
from its improper assumption that Θ(ι · n) (ι ∈ (0,1] is
a constant and n is the number of nodes in a graph)
seeds are available, which is too strong to hold for real
world DA attacks. Note that, the community-level DA of
NKA [22] is scalable (with complexity of O(n2)). How-
ever, the NKA [22] is conditionally scalable, practical,
and robust. This is because, if the community-level DA
of NKA [22] is employed to enhance DV, RST, RSM,
YG, and/or KL, it is conditionally scalable, practical,
and/or robust. NS [2], NSR [21], DeA, ADA, and JLSB
[3,25] adaptively perform DA employing several heuris-
tics based on a graph’s local and global structural charac-
teristics. It follows that they are scalable, practical, and
robust as long as similarity exists between anonymized
graphs and auxiliary graphs.
Both seed-based attacks (e.g., NS, DV) and seed-free
attacks (e.g., PFG, JLSB) have advantages depending on
the application scenarios. On one hand, seed-based at-
tacks are more stable with respect to de-anonymizing
arbitrary anonymized graphs. The reason is straightfor-
ward since seed knowledge provides more auxiliary in-
Table 4: DA attacks vs anonymization techniques. Naive
= naive ID removal, EE = EE based schemes [6], k-
anony. = k-anonymity based schemes [7]- [10], Cluster =
cluster based schemes [12, 14], DP = DP based schemes
[15]- [19], RW = the random walk based scheme [20],
and , (cid:31), and  = the anonymization scheme is vulner-
able, conditionally vulnerable, and invulnerable (i.e., re-
sistant) to the DA attack, respectively.
Naive EE k-anony. Cluster DP RW





























(cid:31)










(cid:31)
(cid:31)
(cid:31)
(cid:31)
(cid:31)
(cid:31)
(cid:31)
(cid:31)
(cid:31)
(cid:31)
(cid:31)
(cid:31)
BDK [26]
NS [2]
NSR [21]
NKA [22]
DV [5]
RST [5]
RSM [5]
PFG [23]
YG [27]
DeA [25]
ADA [25]
KL [24]
JLSB [3]

(cid:31)
(cid:31)
(cid:31)
(cid:31)
(cid:31)
(cid:31)
(cid:31)
(cid:31)
(cid:31)
(cid:31)
(cid:31)
(cid:31)













formation to an adversary. On the other hand, it is pos-
sible that in some scenarios seeds are not available, and
thus seed-free attacks are more general. Furthermore, if
there is some error in the seed seeking phase (which is
possible in real world attacks), seed-based attacks will
suffer performance de-gradation or will possibly fail.
4 Anonymization vs DA Analysis
As we analyzed in Tables 2 and 3, understanding
the vulnerability/resistance of state-of-the-art graph data
anonymization schemes against modern SDA attacks is
still an open problem. After carefully analyzing exist-
ing anonymization and DA techniques, we summarize
the vulnerability of existing anonymization schemes in
Table 4. We further experimentally validate our analysis
in Section 5. Below, we analyze and discuss the results
in Table 4.
It has been shown in both academia and in practice
that the naive ID removal anonymization cannot protect
graph data’s privacy. Therefore, naive anonymization is
vulnerable to all the existing SDA attacks.
As we analyzed before, all other state-of-the-art
anonymization schemes (e.g., EE, k-anony., Cluster, DP,
and RW) are resistant to BDK attacks. Again, this is
because an assumption of BDK attacks is that data is
anonymized by the naive ID removal technique.
For EE based anonymization schemes ( [6]), they are
conditionally vulnerable to NKA [22] and vulnerable to
all the other modern SDA attacks [2,3,25,27]. This is be-
cause although EE can partially modify the structure of
USENIX Association  
24th USENIX Security Symposium  309
7
a graph, to preserve data utility, many structural prop-
erties, e.g., neighborhood, degree distribution, close-
ness/betweenness centrality distribution, and path length
distribution, are generally preserved. Therefore, given
an auxiliary graph consisting of the same or overlap-
ping group of users with the anonymized graph, powerful
DA heuristics can be designed based on these structural
properties to break the privacy of EE based anonymiza-
tion schemes. Furthermore, the availability of seed users
make such heuristics more robust to the noise introduced
by EE. For instance, NS breaks EE by employing degree
and neighborhood similarity [2], DV, RST, and RSM
break EE by employing path length and neighborhood
similarity [5], DeA and ADA break EE by employing
centrality similarity [25], etc. As we analyzed in Table
2, EE based anonymization schemes (e.g., Add/Del) may
destroy graphs’ community utility, and thus they are con-
ditionally vulnerable to NKA [22].
k-anonymity based anonymization schemes ( [7]-
[10]) are conditionally vulnerable to modern SDA at-
tacks [2, 3, 25, 27]. The reasons are as follows: k-
anonymity is initially designed for traditional relational
data, which makes a user semantically indistinguish-
able with k − 1 other users. Unlike relational data,
which are structurally independent of each other, users
in graph data have strong structural correlation in addi-
tion to semantic similarity. When researchers extended
k-anonymity to graph data, they extended the concept of
traditional semantics to graph data as different structural
properties (e.g., degree, neighborhood, and subgraph),
and designed schemes to make k users structurally in-
distinguishable with respect to some structural seman-
tics, i.e., degree, neighborhood, subgraph, etc. How-
ever, even if users in graph data cannot be distinguished
with respect to some structural semantics, e.g., degree,
neighborhood, subgraph, they can be de-anonymized by
other structural semantics, e.g., path length distribution,
closeness centrality, betweenness centrality, or the com-
binations of several structural semantics. Theoretically,
the only way to make users indistinguishable with re-
spect to all structural semantics is to make a graph com-
pletely connected or disconnected, which also implies
that all the data utility is destroyed. Therefore, as long
as some data utility is preserved in the anonymized data,
k-anonymity based schemes are vulnerable to modern
SDA attacks. The degree of vulnerability depends on
how much data utility is preserved.
Cluster based schemes ( [12, 14]) are also condition-
ally vulnerable to modern SDA attacks [2,3,25,27]. The
analysis is similar to that of k-anonymity. The fundamen-
tal idea of cluster based schemes is to cluster users ﬁrst
and then to make the users within a cluster indistinguish-
able with respect to neighborhoods. Again, even if users
are indistinguishable by neighborhoods, they can be de-
anonymized by other structural semantics or the combi-
nations of other semantics, e.g., centralities scores, path
length distribution. Consequently, cluster based schemes
are vulnerable as long as some data utility, especially
graph utilities, are preserved in the anonymized data, and
the vulnerability depends on the amount of data utility
preserved.
DP and RW based schemes ( [15]- [20]) are vulnerable
to modern SDA attacks except NKA [22]. The reasons