{"created": "2020-09-17T12:51:40.845Z", "created_by_ref": "", "description": "Adversaries may hide malicious Visual Basic for Applications (VBA) payloads embedded within MS Office documents by replacing the VBA source code with benign data.(Citation: FireEye VBA stomp Feb 2020)\n\nMS Office documents with embedded VBA content store source code inside of module streams. Each module stream has a PerformanceCache that stores a separate compiled version of the VBA source code known as p-code. The p-code is executed when the MS Office version specified in the _VBA_PROJECT stream (which contains the version-dependent description of the VBA project) matches the version of the host MS Office application.(Citation: Evil Clippy May 2019)(Citation: Microsoft _VBA_PROJECT Stream)\n\nAn adversary may hide malicious VBA code by overwriting the VBA source code location with zero\u2019s, benign code, or random bytes while leaving the previously compiled malicious p-code. Tools that scan for malicious VBA source code may be bypassed as the unwanted code is hidden in the compiled p-code. If the VBA source code is removed, some tools might even think that there are no macros present. If there is a version match between the _VBA_PROJECT stream and host MS Office application, the p-code will be executed, otherwise the benign VBA source code will be decompressed and recompiled to p-code, thus removing malicious p-code and potentially bypassing dynamic analysis.(Citation: Walmart Roberts Oct 2018)(Citation: FireEye VBA stomp Feb 2020)(Citation: pcodedmp Bontchev)", "external_references": [{"external_id": "T1564.007", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1564/007"}, {"description": "Cole, R., Moore, A., Stark, G., Stancill, B. (2020, February 5). STOMP 2 DIS: Brilliance in the (Visual) Basics. Retrieved September 17, 2020.", "source_name": "FireEye VBA stomp Feb 2020", "url": "https://www.fireeye.com/blog/threat-research/2020/01/stomp-2-dis-brilliance-in-the-visual-basics.html"}, {"description": "Hegt, S. (2019, May 5). Evil Clippy: MS Office maldoc assistant. Retrieved September 17, 2020.", "source_name": "Evil Clippy May 2019", "url": "https://outflank.nl/blog/2019/05/05/evil-clippy-ms-office-maldoc-assistant/"}, {"description": "Microsoft. (2020, February 19). 2.3.4.1 _VBA_PROJECT Stream: Version Dependent Project Information. Retrieved September 18, 2020.", "source_name": "Microsoft _VBA_PROJECT Stream", "url": "https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-ovba/ef7087ac-3974-4452-aab2-7dba2214d239"}, {"description": "Sayre, K., Ogden, H., Roberts, C. (2018, October 10). VBA Stomping \u2014 Advanced Maldoc Techniques. Retrieved September 17, 2020.", "source_name": "Walmart Roberts Oct 2018", "url": "https://medium.com/walmartglobaltech/vba-stomping-advanced-maldoc-techniques-612c484ab278"}, {"description": "Bontchev, V. (2019, July 30). pcodedmp.py - A VBA p-code disassembler. Retrieved September 17, 2020.", "source_name": "pcodedmp Bontchev", "url": "https://github.com/bontchev/pcodedmp"}, {"description": "decalage2. (2019, December 3). python-oletools. Retrieved September 18, 2020.", "source_name": "oletools toolkit", "url": "https://github.com/decalage2/oletools"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "defense-evasion"}], "modified": "2021-10-15T14:02:07.944Z", "name": "VBA Stomping", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_contributors": ["Rick Cole, Mandiant"], "x_mitre_data_sources": ["Script: Script Execution", "File: File Metadata"], "x_mitre_detection": "Detection efforts should be placed finding differences between VBA source code and p-code.(Citation: Walmart Roberts Oct 2018) VBA code can be extracted from p-code before execution with tools such as the pcodedmp disassembler. The oletools toolkit leverages the pcodedmp disassembler to detect VBA stomping by comparing keywords present in the VBA source code and p-code.(Citation: pcodedmp Bontchev)(Citation: oletools toolkit)\n\nIf the document is opened with a Graphical User Interface (GUI) the malicious p-code is decompiled and may be viewed. However, if the PROJECT stream, which specifies the project properties, is modified in a specific way the decompiled VBA code will not be displayed. For example, adding a module name that is undefined to the PROJECT stream will inhibit attempts of reading the VBA source code through the GUI.(Citation: FireEye VBA stomp Feb 2020)", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["User"], "x_mitre_platforms": ["Linux", "Windows", "macOS"], "x_mitre_system_requirements": ["MS Office version specified in _VBA_PROJECT stream must match host"], "x_mitre_version": "1.1"}
{"created": "2018-04-18T17:59:24.739Z", "created_by_ref": "", "description": "Adversaries may abuse BITS jobs to persistently execute code and perform various background tasks. Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed through [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM).(Citation: Microsoft COM)(Citation: Microsoft BITS) BITS is commonly used by updaters, messengers, and other applications preferred to operate in the background (using available idle bandwidth) without interrupting other networked applications. File transfer tasks are implemented as BITS jobs, which contain a queue of one or more file operations.\n\nThe interface to create and manage BITS jobs is accessible through [PowerShell](https://attack.mitre.org/techniques/T1059/001) and the [BITSAdmin](https://attack.mitre.org/software/S0190) tool.(Citation: Microsoft BITS)(Citation: Microsoft BITSAdmin)\n\nAdversaries may abuse BITS to download (e.g. [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)), execute, and even clean up after running malicious code (e.g. [Indicator Removal](https://attack.mitre.org/techniques/T1070)). BITS tasks are self-contained in the BITS job database, without new files or registry modifications, and often permitted by host firewalls.(Citation: CTU BITS Malware June 2016)(Citation: Mondok Windows PiggyBack BITS May 2007)(Citation: Symantec BITS May 2007) BITS enabled execution may also enable persistence by creating long-standing jobs (the default maximum lifetime is 90 days and extendable) or invoking an arbitrary program when a job completes or errors (including after system reboots).(Citation: PaloAlto UBoatRAT Nov 2017)(Citation: CTU BITS Malware June 2016)\n\nBITS upload functionalities can also be used to perform [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).(Citation: CTU BITS Malware June 2016)", "external_references": [{"external_id": "T1197", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1197"}, {"description": "Counter Threat Unit Research Team. (2016, June 6). Malware Lingers with BITS. Retrieved January 12, 2018.", "source_name": "CTU BITS Malware June 2016", "url": "https://www.secureworks.com/blog/malware-lingers-with-bits"}, {"description": "Florio, E. (2007, May 9). Malware Update with Windows Update. Retrieved January 12, 2018.", "source_name": "Symantec BITS May 2007", "url": "https://www.symantec.com/connect/blogs/malware-update-windows-update"}, {"description": "French, D., Murphy, B. (2020, March 24). Adversary tradecraft 101: Hunting for persistence using Elastic Security (Part 1). Retrieved December 21, 2020.", "source_name": "Elastic - Hunting for Persistence Part 1", "url": "https://www.elastic.co/blog/hunting-for-persistence-using-elastic-security-part-1"}, {"description": "Hayashi, K. (2017, November 28). UBoatRAT Navigates East Asia. Retrieved January 12, 2018.", "source_name": "PaloAlto UBoatRAT Nov 2017", "url": "https://researchcenter.paloaltonetworks.com/2017/11/unit42-uboatrat-navigates-east-asia/"}, {"description": "Microsoft. (2011, July 19). Issues with BITS. Retrieved January 12, 2018.", "source_name": "Microsoft Issues with BITS July 2011", "url": "https://technet.microsoft.com/library/dd939934.aspx"}, {"description": "Microsoft. (n.d.). Background Intelligent Transfer Service. Retrieved January 12, 2018.", "source_name": "Microsoft BITS", "url": "https://msdn.microsoft.com/library/windows/desktop/bb968799.aspx"}, {"description": "Microsoft. (n.d.). BITSAdmin Tool. Retrieved January 12, 2018.", "source_name": "Microsoft BITSAdmin", "url": "https://msdn.microsoft.com/library/aa362813.aspx"}, {"description": "Microsoft. (n.d.). Component Object Model (COM). Retrieved November 22, 2017.", "source_name": "Microsoft COM", "url": "https://msdn.microsoft.com/library/windows/desktop/ms680573.aspx"}, {"description": "Mondok, M. (2007, May 11). Malware piggybacks on Windows\u2019 Background Intelligent Transfer Service. Retrieved January 12, 2018.", "source_name": "Mondok Windows PiggyBack BITS May 2007", "url": "https://arstechnica.com/information-technology/2007/05/malware-piggybacks-on-windows-background-intelligent-transfer-service/"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "defense-evasion"}, {"kill_chain_name": "mitre-attack", "phase_name": "persistence"}], "modified": "2023-04-21T12:21:40.927Z", "name": "BITS Jobs", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "3.1.0", "x_mitre_contributors": ["Brent Murphy, Elastic", "David French, Elastic", "Ricardo Dias", "Red Canary"], "x_mitre_data_sources": ["Command: Command Execution", "Service: Service Metadata", "Process: Process Creation", "Network Traffic: Network Connection Creation"], "x_mitre_defense_bypassed": ["Firewall", "Host forensic analysis"], "x_mitre_deprecated": false, "x_mitre_detection": "BITS runs as a service and its status can be checked with the Sc query utility (sc query bits).(Citation: Microsoft Issues with BITS July 2011) Active BITS tasks can be enumerated using the [BITSAdmin](https://attack.mitre.org/software/S0190) tool (bitsadmin /list /allusers /verbose).(Citation: Microsoft BITS)\n\nMonitor usage of the [BITSAdmin](https://attack.mitre.org/software/S0190) tool (especially the \u2018Transfer\u2019, 'Create', 'AddFile', 'SetNotifyFlags', 'SetNotifyCmdLine', 'SetMinRetryDelay', 'SetCustomHeaders', and 'Resume' command options)(Citation: Microsoft BITS) Admin logs, PowerShell logs, and the Windows Event log for BITS activity.(Citation: Elastic - Hunting for Persistence Part 1) Also consider investigating more detailed information about jobs by parsing the BITS job database.(Citation: CTU BITS Malware June 2016)\n\nMonitor and analyze network activity generated by BITS. BITS jobs use HTTP(S) and SMB for remote connections and are tethered to the creating user and will only function when that user is logged on (this rule applies even if a user attaches the job to a service account).(Citation: Microsoft BITS)", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Windows"], "x_mitre_version": "1.4"}, {"created": "2020-03-27T21:50:26.042Z", "created_by_ref": "", "description": "Adversaries may use MSBuild to proxy execution of code through a trusted Windows utility. MSBuild.exe (Microsoft Build Engine) is a software build platform used by Visual Studio. It handles XML formatted project files that define requirements for loading and building various platforms and configurations.(Citation: MSDN MSBuild)\n\nAdversaries can abuse MSBuild to proxy execution of malicious code. The inline task capability of MSBuild that was introduced in .NET version 4 allows for C# or Visual Basic code to be inserted into an XML project file.(Citation: MSDN MSBuild)(Citation: Microsoft MSBuild Inline Tasks 2017) MSBuild will compile and execute the inline task. MSBuild.exe is a signed Microsoft binary, so when it is used this way it can execute arbitrary code and bypass application control defenses that are configured to allow MSBuild.exe execution.(Citation: LOLBAS Msbuild)", "external_references": [{"external_id": "T1127.001", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1127/001"}, {"description": "Microsoft. (n.d.). MSBuild1. Retrieved November 30, 2016.", "source_name": "MSDN MSBuild", "url": "https://msdn.microsoft.com/library/dd393574.aspx"}, {"description": "Microsoft. (2017, September 21). MSBuild inline tasks. Retrieved March 5, 2021.", "source_name": "Microsoft MSBuild Inline Tasks 2017", "url": "https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-inline-tasks?view=vs-2019#code-element"}, {"description": "LOLBAS. (n.d.). Msbuild.exe. Retrieved July 31, 2019.", "source_name": "LOLBAS Msbuild", "url": "https://lolbas-project.github.io/lolbas/Binaries/Msbuild/"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "defense-evasion"}], "modified": "2021-10-15T23:57:07.973Z", "name": "MSBuild", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_contributors": ["@ionstorm", "Carrie Roberts, @OrOneEqualsOne"], "x_mitre_data_sources": ["Process: Process Creation", "Command: Command Execution"], "x_mitre_detection": "Use process monitoring to monitor the execution and arguments of MSBuild.exe. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Windows"], "x_mitre_system_requirements": [".NET Framework version 4 or higher"], "x_mitre_version": "1.2"}, {"created": "2017-05-31T21:31:07.462Z", "created_by_ref": "", "description": "Windows User Account Control (UAC) allows a program to elevate its privileges to perform a task under administrator-level permissions by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action. (Citation: TechNet How UAC Works)\n\nIf the UAC protection level of a computer is set to anything but the highest level, certain Windows programs are allowed to elevate privileges or execute some elevated COM objects without prompting the user through the UAC notification box. (Citation: TechNet Inside UAC) (Citation: MSDN COM Elevation) An example of this is use of rundll32.exe to load a specifically crafted DLL which loads an auto-elevated COM object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user. (Citation: Davidson Windows) Adversaries can use these techniques to elevate privileges to administrator if the target process is unprotected.\n\nMany methods have been discovered to bypass UAC. The Github readme page for UACMe contains an extensive list of methods (Citation: Github UACMe) that have been discovered and implemented within UACMe, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:\n\n* eventvwr.exe can auto-elevate and execute a specified binary or script. (Citation: enigma0x3 Fileless UAC Bypass) (Citation: Fortinet Fareit)\n\nAnother bypass is possible through some Lateral Movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on lateral systems and default to high integrity. (Citation: SANS UAC Bypass)", "external_references": [{"external_id": "T1088", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1088"}, {"description": "Lich, B. (2016, May 31). How User Account Control Works. Retrieved June 3, 2016.", "source_name": "TechNet How UAC Works", "url": "https://technet.microsoft.com/en-us/itpro/windows/keep-secure/how-user-account-control-works"}, {"description": "Russinovich, M. (2009, July). User Account Control: Inside Windows 7 User Account Control. Retrieved July 26, 2016.", "source_name": "TechNet Inside UAC", "url": "https://technet.microsoft.com/en-US/magazine/2009.07.uac.aspx"}, {"description": "Microsoft. (n.d.). The COM Elevation Moniker. Retrieved July 26, 2016.", "source_name": "MSDN COM Elevation", "url": "https://msdn.microsoft.com/en-us/library/ms679687.aspx"}, {"description": "Davidson, L. (n.d.). Windows 7 UAC whitelist. Retrieved November 12, 2014.", "source_name": "Davidson Windows", "url": "http://www.pretentiousname.com/misc/win7_uac_whitelist2.html"}, {"description": "UACME Project. (2016, June 16). UACMe. Retrieved July 26, 2016.", "source_name": "Github UACMe", "url": "https://github.com/hfiref0x/UACME"}, {"description": "Nelson, M. (2016, August 15). \"Fileless\" UAC Bypass using eventvwr.exe and Registry Hijacking. Retrieved December 27, 2016.", "source_name": "enigma0x3 Fileless UAC Bypass", "url": "https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/"}, {"description": "Salvio, J., Joven, R. (2016, December 16). Malicious Macro Bypasses UAC to Elevate Privilege for Fareit Malware. Retrieved December 27, 2016.", "source_name": "Fortinet Fareit", "url": "https://blog.fortinet.com/2016/12/16/malicious-macro-bypasses-uac-to-elevate-privilege-for-fareit-malware"}, {"description": "Medin, T. (2013, August 8). PsExec UAC Bypass. Retrieved June 3, 2016.", "source_name": "SANS UAC Bypass", "url": "http://pen-testing.sans.org/blog/pen-testing/2013/08/08/psexec-uac-bypass"}, {"description": "Nelson, M. (2017, March 14). Bypassing UAC using App Paths. Retrieved May 25, 2017.", "source_name": "enigma0x3 sdclt app paths", "url": "https://enigma0x3.net/2017/03/14/bypassing-uac-using-app-paths/"}, {"description": "Nelson, M. (2017, March 17). \"Fileless\" UAC Bypass Using sdclt.exe. Retrieved May 25, 2017.", "source_name": "enigma0x3 sdclt bypass", "url": "https://enigma0x3.net/2017/03/17/fileless-uac-bypass-using-sdclt-exe/"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "defense-evasion"}, {"kill_chain_name": "mitre-attack", "phase_name": "privilege-escalation"}], "modified": "2020-02-05T20:08:32.863Z", "name": "Bypass User Account Control", "object_marking_refs": ["marking-"], "revoked": true, "type": "attack-pattern", "x_mitre_contributors": ["Stefan Kanthak", "Casey Smith"], "x_mitre_defense_bypassed": ["Windows User Account Control"], "x_mitre_detection": "There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Monitor process API calls for behavior that may be indicative of [Process Injection](https://attack.mitre.org/techniques/T1055) and unusual loaded DLLs through [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038), which indicate attempts to gain access to higher privileged processes.\n\nSome UAC bypass methods rely on modifying specific, user-accessible Registry settings. For example:\n\n* The eventvwr.exe bypass uses the [HKEY_CURRENT_USER]\\Software\\Classes\\mscfile\\shell\\open\\command Registry key. (Citation: enigma0x3 Fileless UAC Bypass)\n* The sdclt.exe bypass uses the [HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe and [HKEY_CURRENT_USER]\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand Registry keys. (Citation: enigma0x3 sdclt app paths) (Citation: enigma0x3 sdclt bypass)\n\nAnalysts should monitor these Registry settings for unauthorized changes.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_effective_permissions": ["Administrator"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["User", "Administrator"], "x_mitre_platforms": ["Windows"], "x_mitre_version": "1.0"}
{"created": "2019-04-09T16:09:22.173Z", "created_by_ref": "", "description": "Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nAdversaries may alter application binaries used to display data in order to cause runtime manipulations. Adversaries may also conduct [Change Default File Association](https://attack.mitre.org/techniques/T1042) and [Masquerading](https://attack.mitre.org/techniques/T1036) to cause a similar effect. The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.", "external_references": [{"external_id": "T1494", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1494"}, {"description": "FireEye. (2018, October 03). APT38: Un-usual Suspects. Retrieved November 6, 2018.", "source_name": "FireEye APT38 Oct 2018", "url": "https://content.fireeye.com/apt/rpt-apt38"}, {"description": "Department of Justice. (2018, September 6). Criminal Complaint - United States of America v. PARK JIN HYOK. Retrieved March 29, 2019.", "source_name": "DOJ Lazarus Sony 2018", "url": "https://www.justice.gov/opa/press-release/file/1092091/download"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "impact"}], "modified": "2020-03-02T14:30:49.400Z", "name": "Runtime Data Manipulation", "object_marking_refs": ["marking-"], "revoked": true, "type": "attack-pattern", "x_mitre_detection": "Inspect important application binary file hashes, locations, and modifications for suspicious/unexpected values.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_impact_type": ["Integrity"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["User", "Administrator", "root", "SYSTEM"], "x_mitre_platforms": ["Linux", "macOS", "Windows"], "x_mitre_version": "1.0"}
{"created": "2020-03-14T23:29:19.581Z", "created_by_ref": "", "description": "Adversaries may take advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS. (Citation: Fifield Blocking Resistent Communication through domain fronting 2015) Domain fronting involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. If both domains are served from the same CDN, then the CDN may route to the address specified in the HTTP header after unwrapping the TLS header. A variation of the the technique, \"domainless\" fronting, utilizes a SNI field that is left blank; this may allow the fronting to work even when the CDN attempts to validate that the SNI and HTTP Host fields match (if the blank SNI fields are ignored).\n\nFor example, if domain-x and domain-y are customers of the same CDN, it is possible to place domain-x in the TLS header and domain-y in the HTTP header. Traffic will appear to be going to domain-x, however the CDN may route it to domain-y.", "external_references": [{"external_id": "T1090.004", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1090/004"}, {"description": "David Fifield, Chang Lan, Rod Hynes, Percy Wegmann, and Vern Paxson. (2015). Blocking-resistant communication through domain fronting. Retrieved November 20, 2017.", "source_name": "Fifield Blocking Resistent Communication through domain fronting 2015", "url": "http://www.icir.org/vern/papers/meek-PETS-2015.pdf"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "command-and-control"}], "modified": "2023-03-30T21:01:52.356Z", "name": "Domain Fronting", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_attack_spec_version": "3.1.0", "x_mitre_contributors": ["Matt Kelly, @breakersall"], "x_mitre_data_sources": ["Network Traffic: Network Traffic Content"], "x_mitre_detection": "If SSL inspection is in place or the traffic is not encrypted, the Host field of the HTTP header can be checked if it matches the HTTPS SNI or against a blocklist or allowlist of domain names. (Citation: Fifield Blocking Resistent Communication through domain fronting 2015)", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Linux", "macOS", "Windows"], "x_mitre_version": "1.1"}
{"created": "2020-10-15T12:05:58.755Z", "created_by_ref": "", "description": "Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)\n", "external_references": [{"external_id": "T1557.002", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1557/002"}, {"description": "Cylance. (2014, December). Operation Cleaver. Retrieved September 14, 2017.", "source_name": "Cylance Cleaver", "url": "https://web.archive.org/web/20200302085133/https://www.cylance.com/content/dam/cylance/pages/operation-cleaver/Cylance_Operation_Cleaver_Report.pdf"}, {"description": "Plummer, D. (1982, November). An Ethernet Address Resolution Protocol. Retrieved October 15, 2020.", "source_name": "RFC826 ARP", "url": "https://tools.ietf.org/html/rfc826"}, {"description": "Siles, R. (2003, August). Real World ARP Spoofing. Retrieved October 15, 2020.", "source_name": "Sans ARP Spoofing Aug 2003", "url": "https://pen-testing.sans.org/resources/papers/gcih/real-world-arp-spoofing-105411"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "credential-access"}, {"kill_chain_name": "mitre-attack", "phase_name": "collection"}], "modified": "2022-07-22T18:37:22.176Z", "name": "ARP Cache Poisoning", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "2.1.0", "x_mitre_contributors": ["Jon Sternstein, Stern Security"], "x_mitre_data_sources": ["Network Traffic: Network Traffic Content", "Network Traffic: Network Traffic Flow"], "x_mitre_deprecated": false, "x_mitre_detection": "Monitor network traffic for unusual ARP traffic, gratuitous ARP replies may be suspicious. \n\nConsider collecting changes to ARP caches across endpoints for signs of ARP poisoning. For example, if multiple IP addresses map to a single MAC address, this could be an indicator that the ARP cache has been poisoned.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Linux", "Windows", "macOS"], "x_mitre_version": "1.1"}
{"created": "2020-10-12T13:52:32.846Z", "created_by_ref": "", "description": "An adversary may disable cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. Cloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable logging to avoid detection of their activities.\n\nFor example, in AWS an adversary may disable CloudWatch/CloudTrail integrations prior to conducting further malicious activity.(Citation: Following the CloudTrail: Generating strong AWS security signals with Sumo Logic) In Office 365, an adversary may disable logging on mail collection activities for specific users by using the `Set-MailboxAuditBypassAssociation` cmdlet, by disabling M365 Advanced Auditing for the user, or by downgrading the user\u2019s license from an Enterprise E5 to an Enterprise E3 license.(Citation: Dark Reading Microsoft 365 Attacks 2021)", "external_references": [{"external_id": "T1562.008", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1562/008"}, {"description": "Amazon Web Services. (n.d.). Stopping CloudTrail from Sending Events to CloudWatch Logs. Retrieved October 16, 2020.", "source_name": "Stopping CloudTrail from Sending Events to CloudWatch Logs", "url": "https://docs.aws.amazon.com/awscloudtrail/latest/userguide/stop-cloudtrail-from-sending-events-to-cloudwatch-logs.html"}, {"description": "Dan Whalen. (2019, September 10). Following the CloudTrail: Generating strong AWS security signals with Sumo Logic. Retrieved October 16, 2020.", "source_name": "Following the CloudTrail: Generating strong AWS security signals with Sumo Logic", "url": "https://expel.io/blog/following-cloudtrail-generating-aws-security-signals-sumo-logic/"}, {"description": "Google. (n.d.). Configuring Data Access audit logs. Retrieved October 16, 2020.", "source_name": "Configuring Data Access audit logs", "url": "https://cloud.google.com/logging/docs/audit/configure-data-access"}, {"description": "Kelly Sheridan. (2021, August 5). Incident Responders Explore Microsoft 365 Attacks in the Wild. Retrieved March 17, 2023.", "source_name": "Dark Reading Microsoft 365 Attacks 2021", "url": "https://www.darkreading.com/threat-intelligence/incident-responders-explore-microsoft-365-attacks-in-the-wild/d/d-id/1341591"}, {"description": "Microsoft. (n.d.). az monitor diagnostic-settings. Retrieved October 16, 2020.", "source_name": "az monitor diagnostic-settings", "url": "https://docs.microsoft.com/en-us/cli/azure/monitor/diagnostic-settings?view=azure-cli-latest#az_monitor_diagnostic_settings_delete"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "defense-evasion"}], "modified": "2023-04-20T18:13:50.277Z", "name": "Disable Cloud Logs", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "3.1.0", "x_mitre_contributors": ["Syed Ummar Farooqh, McAfee", "Prasad Somasamudram, McAfee", "Sekhar Sarukkai, McAfee", "Ibrahim Ali Khan", "Alex Soler, AttackIQ", "Janantha Marasinghe", "Matt Snyder, VMware", "Joe Gumke, U.S. Bank"], "x_mitre_data_sources": ["Cloud Service: Cloud Service Modification", "User Account: User Account Modification", "Cloud Service: Cloud Service Disable"], "x_mitre_deprecated": false, "x_mitre_detection": "Monitor logs for API calls to disable logging. In AWS, monitor for: StopLogging and DeleteTrail.(Citation: Stopping CloudTrail from Sending Events to CloudWatch Logs) In GCP, monitor for: google.logging.v2.ConfigServiceV2.UpdateSink.(Citation: Configuring Data Access audit logs)  In Azure, monitor for az monitor diagnostic-settings delete.(Citation: az monitor diagnostic-settings) Additionally, a sudden loss of a log source may indicate that it has been disabled. ", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["IaaS", "SaaS", "Google Workspace", "Azure AD", "Office 365"], "x_mitre_version": "1.3"}, {"created": "2020-02-21T21:16:18.066Z", "created_by_ref": "", "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nExample commands that can be used to obtain security software information are [netsh](https://attack.mitre.org/software/S0108), reg query with [Reg](https://attack.mitre.org/software/S0075), dir with [cmd](https://attack.mitre.org/software/S0106), and [Tasklist](https://attack.mitre.org/software/S0057), but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\n\nAdversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment.(Citation: Expel IO Evil in AWS) For example, the permitted IP ranges, ports or user accounts for the inbound/outbound rules of security groups, virtual firewalls established within AWS for EC2 and/or VPC instances, can be revealed by the DescribeSecurityGroups action with various request parameters. (Citation: DescribeSecurityGroups - Amazon Elastic Compute Cloud)", "external_references": [{"external_id": "T1518.001", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1518/001"}, {"description": "A. Randazzo, B. Manahan and S. Lipton. (2020, April 28). Finding Evil in AWS. Retrieved June 25, 2020.", "source_name": "Expel IO Evil in AWS", "url": "https://expel.io/blog/finding-evil-in-aws/"}, {"description": "Amazon Web Services, Inc. . (2022). DescribeSecurityGroups. Retrieved January 28, 2022.", "source_name": "DescribeSecurityGroups - Amazon Elastic Compute Cloud", "url": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "discovery"}], "modified": "2023-04-21T12:30:00.939Z", "name": "Security Software Discovery", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "3.1.0", "x_mitre_contributors": ["Isif Ibrahima, Mandiant"], "x_mitre_data_sources": ["Firewall: Firewall Metadata", "Process: OS API Execution", "Command: Command Execution", "Process: Process Creation", "Firewall: Firewall Enumeration"], "x_mitre_deprecated": false, "x_mitre_detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nIn cloud environments, additionally monitor logs for the usage of APIs that may be used to gather information about security software configurations within the environment.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Windows", "Azure AD", "Office 365", "SaaS", "IaaS", "Linux", "macOS", "Google Workspace"], "x_mitre_version": "1.4"}, {"created": "2020-03-13T20:26:49.433Z", "created_by_ref": "", "description": "Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. \n\nOn Windows, there are a variety of features in scripting languages in Windows, such as [PowerShell](https://attack.mitre.org/techniques/T1059/001), Jscript, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005) to make windows hidden. One example of this is powershell.exe -WindowStyle Hidden. (Citation: PowerShell About 2019)\n\nSimilarly, on macOS the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be apple.awt.UIElement, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.\n\nAdversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.(Citation: Antiquated Mac Malware)", "external_references": [{"external_id": "T1564.003", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1564/003"}, {"description": "Wheeler, S. et al.. (2019, May 1). About PowerShell.exe. Retrieved October 11, 2019.", "source_name": "PowerShell About 2019", "url": "https://docs.microsoft.com/en-us/powershell/module/Microsoft.PowerShell.Core/About/about_PowerShell_exe?view=powershell-5.1"}, {"description": "Thomas Reed. (2017, January 18). New Mac backdoor using antiquated code. Retrieved July 5, 2017.", "source_name": "Antiquated Mac Malware", "url": "https://blog.malwarebytes.com/threat-analysis/2017/01/new-mac-backdoor-using-antiquated-code/"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "defense-evasion"}], "modified": "2022-03-15T21:09:43.489Z", "name": "Hidden Window", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_contributors": ["Travis Smith, Tripwire"], "x_mitre_data_sources": ["File: File Modification", "Script: Script Execution", "Process: Process Creation", "Command: Command Execution"], "x_mitre_detection": "Monitor processes and command-line arguments for actions indicative of hidden windows. In Windows, enable and configure event logging and PowerShell logging to check for the hidden window style. In MacOS, plist files are ASCII text files with a specific format, so they're relatively easy to parse. File monitoring can check for the apple.awt.UIElement or any other suspicious plist tag in plist files and flag them.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["User"], "x_mitre_platforms": ["macOS", "Windows", "Linux"], "x_mitre_version": "1.1"}
{"created": "2019-04-09T16:08:20.824Z", "created_by_ref": "", "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.", "external_references": [{"external_id": "T1493", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1493"}, {"description": "FireEye. (2018, October 03). APT38: Un-usual Suspects. Retrieved November 6, 2018.", "source_name": "FireEye APT38 Oct 2018", "url": "https://content.fireeye.com/apt/rpt-apt38"}, {"description": "Department of Justice. (2018, September 6). Criminal Complaint - United States of America v. PARK JIN HYOK. Retrieved March 29, 2019.", "source_name": "DOJ Lazarus Sony 2018", "url": "https://www.justice.gov/opa/press-release/file/1092091/download"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "impact"}], "modified": "2020-03-02T14:27:49.110Z", "name": "Transmitted Data Manipulation", "object_marking_refs": ["marking-"], "revoked": true, "type": "attack-pattern", "x_mitre_detection": "Detecting the manipulation of data as at passes over a network can be difficult without the appropriate tools. In some cases integrity verification checks, such as file hashing, may be used on critical files as they transit a network. With some critical processes involving transmission of data, manual or out-of-band integrity checking may be useful for identifying manipulated data.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_impact_type": ["Integrity"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["User", "Administrator", "root", "SYSTEM"], "x_mitre_platforms": ["Linux", "macOS", "Windows"], "x_mitre_version": "1.0"}
{"created": "2020-03-09T14:38:24.334Z", "created_by_ref": "", "description": "Adversaries may abuse Python commands and scripts for execution. Python is a very popular scripting/programming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via the python.exe interpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables.\n\nPython comes with many built-in packages to interact with the underlying system, such as file operations and device I/O. Adversaries can use these libraries to download and execute commands or other scripts as well as perform various malicious behaviors.", "external_references": [{"external_id": "T1059.006", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1059/006"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "execution"}], "modified": "2021-07-26T22:49:23.094Z", "name": "Python", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_data_sources": ["Process: Process Creation", "Command: Command Execution"], "x_mitre_detection": "Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["Administrator", "SYSTEM", "root"], "x_mitre_platforms": ["Linux", "Windows", "macOS"], "x_mitre_system_requirements": ["Python is installed."], "x_mitre_version": "1.0"}
{"created": "2020-10-02T16:37:30.015Z", "created_by_ref": "", "description": "Adversaries may gather information about identities and roles within the victim organization that can be used during targeting. Information about business roles may reveal a variety of targetable details, including identifiable information for key personnel as well as what data/resources they have access to.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about business roles may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566)).", "external_references": [{"external_id": "T1591.004", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1591/004"}, {"description": "Seals, T. (2020, October 15). Broadvoice Leak Exposes 350M Records, Personal Voicemail Transcripts. Retrieved October 20, 2020.", "source_name": "ThreatPost Broadvoice Leak", "url": "https://threatpost.com/broadvoice-leaks-350m-records-voicemail-transcripts/160158/"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "reconnaissance"}], "modified": "2021-04-15T03:39:08.904Z", "name": "Identify Roles", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["PRE"], "x_mitre_version": "1.0"}
{"created": "2017-05-31T21:31:43.540Z", "created_by_ref": "", "description": "Adversaries may encode data to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system. Use of data encoding may adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64, MIME, or other binary-to-text and character encoding systems.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) Some data encoding systems may also result in data compression, such as gzip.", "external_references": [{"external_id": "T1132", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1132"}, {"description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.", "source_name": "University of Birmingham C2", "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf"}, {"description": "Wikipedia. (2016, December 26). Binary-to-text encoding. Retrieved March 1, 2017.", "source_name": "Wikipedia Binary-to-text Encoding", "url": "https://en.wikipedia.org/wiki/Binary-to-text_encoding"}, {"description": "Wikipedia. (2017, February 19). Character Encoding. Retrieved March 1, 2017.", "source_name": "Wikipedia Character Encoding", "url": "https://en.wikipedia.org/wiki/Character_encoding"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "command-and-control"}], "modified": "2023-04-21T12:20:20.711Z", "name": "Data Encoding", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "3.1.0", "x_mitre_contributors": ["Itzik Kotler, SafeBreach"], "x_mitre_data_sources": ["Network Traffic: Network Traffic Content"], "x_mitre_deprecated": false, "x_mitre_detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Linux", "macOS", "Windows"], "x_mitre_version": "1.2"}, {"created": "2020-01-24T14:52:25.589Z", "created_by_ref": "", "description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the AppInit_DLLs value in the Registry keys HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows or HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows are loaded by user32.dll into every process that loads user32.dll. In practice this is nearly every program, since user32.dll is a very common library. (Citation: Elastic Process Injection July 2017)\n\nSimilar to Process Injection, these values can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes on the computer. (Citation: AppInit Registry) Malicious AppInit DLLs may also provide persistence by continuously being triggered by API activity. \n\nThe AppInit DLL functionality is disabled in Windows 8 and later versions when secure boot is enabled. (Citation: AppInit Secure Boot)", "external_references": [{"external_id": "T1546.010", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1546/010"}, {"description": "Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.", "source_name": "Elastic Process Injection July 2017", "url": "https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process"}, {"description": "Microsoft. (2006, October). Working with the AppInit_DLLs registry value. Retrieved July 15, 2015.", "source_name": "AppInit Registry", "url": "https://support.microsoft.com/en-us/kb/197571"}, {"description": "Microsoft. (n.d.). AppInit DLLs and Secure Boot. Retrieved July 15, 2015.", "source_name": "AppInit Secure Boot", "url": "https://msdn.microsoft.com/en-us/library/dn280412"}, {"description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.", "source_name": "TechNet Autoruns", "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "privilege-escalation"}, {"kill_chain_name": "mitre-attack", "phase_name": "persistence"}], "modified": "2023-04-21T12:33:45.568Z", "name": "AppInit DLLs", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "3.1.0", "x_mitre_data_sources": ["Windows Registry: Windows Registry Key Modification", "Process: OS API Execution", "Module: Module Load", "Process: Process Creation", "Command: Command Execution"], "x_mitre_deprecated": false, "x_mitre_detection": "Monitor DLL loads by processes that load user32.dll and look for DLLs that are not recognized or not normally loaded into a process. Monitor the AppInit_DLLs Registry values for modifications that do not correlate with known software, patch cycles, etc. Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as RegCreateKeyEx and RegSetValueEx. (Citation: Elastic Process Injection July 2017)\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current AppInit DLLs. (Citation: TechNet Autoruns) \n\nLook for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_effective_permissions": ["Administrator", "SYSTEM"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["Administrator"], "x_mitre_platforms": ["Windows"], "x_mitre_system_requirements": ["Secure boot disabled on systems running Windows 8 and later"], "x_mitre_version": "1.1"}
{"created": "2020-10-02T17:07:01.502Z", "created_by_ref": "", "description": "Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from [Phishing](https://attack.mitre.org/techniques/T1566) in that the objective is gathering data from the victim rather than executing malicious code.\n\nAll forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass credential harvesting campaigns.\n\nAdversaries may also try to obtain information directly through the exchange of emails, instant messages, or other electronic conversation means.(Citation: ThreatPost Social Media Phishing)(Citation: TrendMictro Phishing)(Citation: PCMag FakeLogin)(Citation: Sophos Attachment)(Citation: GitHub Phishery) Victims may also receive phishing messages that direct them to call a phone number where the adversary attempts to collect confidential information.(Citation: Avertium callback phishing)\n\nPhishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages. Another way to accomplish this is by forging or spoofing(Citation: Proofpoint-spoof) the identity of the sender which can be used to fool both the human recipient as well as automated security tools.(Citation: cyberproof-double-bounce) \n\nPhishing for information may also involve evasive techniques, such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g., [Email Hiding Rules](https://attack.mitre.org/techniques/T1564/008)).(Citation: Microsoft OAuth Spam 2022)(Citation: Palo Alto Unit 42 VBA Infostealer 2014)", "external_references": [{"external_id": "T1598", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1598"}, {"description": "Australian Cyber Security Centre. (2012, December). Mitigating Spoofed Emails Using Sender Policy Framework. Retrieved October 19, 2020.", "source_name": "ACSC Email Spoofing", "url": "https://www.cyber.gov.au/sites/default/files/2019-03/spoof_email_sender_policy_framework.pdf"}, {"description": "Avertium. (n.d.). EVERYTHING YOU NEED TO KNOW ABOUT CALLBACK PHISHING. Retrieved February 2, 2023.", "source_name": "Avertium callback phishing", "url": "https://www.avertium.com/resources/threat-reports/everything-you-need-to-know-about-callback-phishing"}, {"description": "Babon, P. (2020, September 3). Tricky 'Forms' of Phishing. Retrieved October 20, 2020.", "source_name": "TrendMictro Phishing", "url": "https://www.trendmicro.com/en_us/research/20/i/tricky-forms-of-phishing.html"}, {"description": "Ducklin, P. (2020, October 2). Serious Security: Phishing without links \u2013 when phishers bring along their own web pages. Retrieved October 20, 2020.", "source_name": "Sophos Attachment", "url": "https://nakedsecurity.sophos.com/2020/10/02/serious-security-phishing-without-links-when-phishers-bring-along-their-own-web-pages/"}, {"description": "Itkin, Liora. (2022, September 1). Double-bounced attacks with email spoofing . Retrieved February 24, 2023.", "source_name": "cyberproof-double-bounce", "url": "https://blog.cyberproof.com/blog/double-bounced-attacks-with-email-spoofing-2022-trends"}, {"description": "Kan, M. (2019, October 24). Hackers Try to Phish United Nations Staffers With Fake Login Pages. Retrieved October 20, 2020.", "source_name": "PCMag FakeLogin", "url": "https://www.pcmag.com/news/hackers-try-to-phish-united-nations-staffers-with-fake-login-pages"}, {"description": "Microsoft. (2020, October 13). Anti-spoofing protection in EOP. Retrieved October 19, 2020.", "source_name": "Microsoft Anti Spoofing", "url": "https://docs.microsoft.com/en-us/microsoft-365/security/office-365-security/anti-spoofing-protection?view=o365-worldwide"}, {"description": "Microsoft. (2023, September 22). Malicious OAuth applications abuse cloud email services to spread spam. Retrieved March 13, 2023.", "source_name": "Microsoft OAuth Spam 2022", "url": "https://www.microsoft.com/en-us/security/blog/2022/09/22/malicious-oauth-applications-used-to-compromise-email-servers-and-spread-spam/"}, {"description": "O'Donnell, L. (2020, October 20). Facebook: A Top Launching Pad For Phishing Attacks. Retrieved October 20, 2020.", "source_name": "ThreatPost Social Media Phishing", "url": "https://threatpost.com/facebook-launching-pad-phishing-attacks/160351/"}, {"description": "Proofpoint. (n.d.). What Is Email Spoofing?. Retrieved February 24, 2023.", "source_name": "Proofpoint-spoof", "url": "https://www.proofpoint.com/us/threat-reference/email-spoofing"}, {"description": "Ryan Hanson. (2016, September 24). phishery. Retrieved October 23, 2020.", "source_name": "GitHub Phishery", "url": "https://github.com/ryhanson/phishery"}, {"description": "Vicky Ray and Rob Downs. (2014, October 29). Examining a VBA-Initiated Infostealer Campaign. Retrieved March 13, 2023.", "source_name": "Palo Alto Unit 42 VBA Infostealer 2014", "url": "https://unit42.paloaltonetworks.com/examining-vba-initiated-infostealer-campaign/"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "reconnaissance"}], "modified": "2023-04-14T17:42:38.063Z", "name": "Phishing for Information", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "3.1.0", "x_mitre_contributors": ["Philip Winther", "Sebastian Salla, McAfee", "Robert Simmons, @MalwareUtkonos", "Ohad Zaidenberg, @ohad_mz", "Liora Itkin", "Liran Ravich, CardinalOps", "Scott Cook, Capital One"], "x_mitre_data_sources": ["Network Traffic: Network Traffic Content", "Network Traffic: Network Traffic Flow", "Application Log: Application Log Content"], "x_mitre_deprecated": false, "x_mitre_detection": "Depending on the specific method of phishing, the detections can vary. Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)\n\nWhen it comes to following links, monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.\n\nMonitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["PRE"], "x_mitre_version": "1.2"}, {"created": "2019-04-17T14:50:05.682Z", "created_by_ref": "", "description": "Adversaries may leverage the resources of co-opted systems in order to solve resource intensive problems, which may impact system and/or hosted service availability. \n\nOne common purpose for Resource Hijacking is to validate transactions of cryptocurrency networks and earn virtual currency. Adversaries may consume enough system resources to negatively impact and/or cause affected machines to become unresponsive.(Citation: Kaspersky Lazarus Under The Hood Blog 2017) Servers and cloud-based systems are common targets because of the high potential for available resources, but user endpoint systems may also be compromised and used for Resource Hijacking and cryptocurrency mining.(Citation: CloudSploit - Unused AWS Regions) Containerized environments may also be targeted due to the ease of deployment via exposed APIs and the potential for scaling mining activities by deploying or compromising multiple containers within an environment or cluster.(Citation: Unit 42 Hildegard Malware)(Citation: Trend Micro Exposed Docker APIs)\n\nAdditionally, some cryptocurrency mining malware identify then kill off processes for competing malware to ensure it\u2019s not competing for resources.(Citation: Trend Micro War of Crypto Miners)\n\nAdversaries may also use malware that leverages a system's network bandwidth as part of a botnet in order to facilitate [Network Denial of Service](https://attack.mitre.org/techniques/T1498) campaigns and/or to seed malicious torrents.(Citation: GoBotKR)", "external_references": [{"external_id": "T1496", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1496"}, {"description": "Chen, J. et al. (2021, February 3). Hildegard: New TeamTNT Cryptojacking Malware Targeting Kubernetes. Retrieved April 5, 2021.", "source_name": "Unit 42 Hildegard Malware", "url": "https://unit42.paloaltonetworks.com/hildegard-malware-teamtnt/"}, {"description": "CloudSploit. (2019, June 8). The Danger of Unused AWS Regions. Retrieved October 8, 2019.", "source_name": "CloudSploit - Unused AWS Regions", "url": "https://blog.cloudsploit.com/the-danger-of-unused-aws-regions-af0bf1b878fc"}, {"description": "GReAT. (2017, April 3). Lazarus Under the Hood. Retrieved April 17, 2019.", "source_name": "Kaspersky Lazarus Under The Hood Blog 2017", "url": "https://securelist.com/lazarus-under-the-hood/77908/"}, {"description": "Oliveira, A. (2019, May 30). Infected Containers Target Docker via Exposed APIs. Retrieved April 6, 2021.", "source_name": "Trend Micro Exposed Docker APIs", "url": "https://www.trendmicro.com/en_us/research/19/e/infected-cryptocurrency-mining-containers-target-docker-hosts-with-exposed-apis-use-shodan-to-find-additional-victims.html"}, {"description": "Oliveira, A., Fiser, D. (2020, September 10). War of Linux Cryptocurrency Miners: A Battle for Resources. Retrieved April 6, 2021.", "source_name": "Trend Micro War of Crypto Miners", "url": "https://www.trendmicro.com/en_us/research/20/i/war-of-linux-cryptocurrency-miners-a-battle-for-resources.html"}, {"description": "Zuzana Hromcov\u00e1. (2019, July 8). Malicious campaign targets South Korean users with backdoor\u2011laced torrents. Retrieved March 31, 2022.", "source_name": "GoBotKR", "url": "https://www.welivesecurity.com/2019/07/08/south-korean-users-backdoor-torrents/"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "impact"}], "modified": "2022-04-18T20:16:44.560Z", "name": "Resource Hijacking", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "2.1.0", "x_mitre_contributors": ["David Fiser, @anu4is, Trend Micro", "Alfredo Oliveira, Trend Micro", "Jay Chen, Palo Alto Networks", "Magno Logan, @magnologan, Trend Micro", "Vishwas Manral, McAfee", "Yossi Weizman, Azure Defender Research Team"], "x_mitre_data_sources": ["Command: Command Execution", "Network Traffic: Network Connection Creation", "Process: Process Creation", "File: File Creation", "Network Traffic: Network Traffic Flow", "Sensor Health: Host Status"], "x_mitre_deprecated": false, "x_mitre_detection": "Consider monitoring process resource usage to determine anomalous activity associated with malicious hijacking of computer resources such as CPU, memory, and graphics processing resources. Monitor for suspicious use of network resources associated with cryptocurrency mining software. Monitor for common cryptomining software process names and files on local systems that may indicate compromise and resource usage.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_impact_type": ["Availability"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Windows", "IaaS", "Linux", "macOS", "Containers"], "x_mitre_version": "1.3"}, {"created": "2020-10-01T01:05:42.216Z", "created_by_ref": "", "description": "Adversaries may create and cultivate accounts with services that can be used during targeting. Adversaries can create accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations. This development could be applied to social media, website, or other publicly available information that could be referenced and scrutinized for legitimacy over the course of an operation using that persona or identity.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage)\n\nFor operations incorporating social engineering, the utilization of an online persona may be important. These personas may be fictitious or impersonate real people. The persona may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, Google, GitHub, Docker Hub, etc.). Establishing a persona may require development of additional documentation to make them seem real. This could include filling out profile information, developing social networks, or incorporating photos.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage)\n\nEstablishing accounts can also include the creation of accounts with email providers, which may be directly leveraged for [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Phishing](https://attack.mitre.org/techniques/T1566).(Citation: Mandiant APT1)", "external_references": [{"external_id": "T1585", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1585"}, {"description": "Lennon, M. (2014, May 29). Iranian Hackers Targeted US Officials in Elaborate Social Media Attack Operation. Retrieved March 1, 2017.", "source_name": "NEWSCASTER2014", "url": "https://www.securityweek.com/iranian-hackers-targeted-us-officials-elaborate-social-media-attack-operation"}, {"description": "Ryan, T. (2010). \u201cGetting In Bed with Robin Sage.\u201d. Retrieved March 6, 2017.", "source_name": "BlackHatRobinSage", "url": "http://media.blackhat.com/bh-us-10/whitepapers/Ryan/BlackHat-USA-2010-Ryan-Getting-In-Bed-With-Robin-Sage-v1.0.pdf"}, {"description": "Mandiant. (n.d.). APT1 Exposing One of China\u2019s Cyber Espionage Units. Retrieved July 18, 2016.", "source_name": "Mandiant APT1", "url": "https://www.fireeye.com/content/dam/fireeye-www/services/pdfs/mandiant-apt1-report.pdf"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "resource-development"}], "modified": "2021-10-16T17:35:59.386Z", "name": "Establish Accounts", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_data_sources": ["Persona: Social Media", "Network Traffic: Network Traffic Content"], "x_mitre_detection": "Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently created/modified accounts making numerous connection requests to accounts affiliated with your organization.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: [Phishing](https://attack.mitre.org/techniques/T1566)).", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["PRE"], "x_mitre_version": "1.2"}, {"created": "2020-10-01T01:56:24.776Z", "created_by_ref": "", "description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n\nIn addition to downloading free malware, software, and exploits from the internet, adversaries may purchase these capabilities from third-party entities. Third-party entities can include technology companies that specialize in malware and exploits, criminal marketplaces, or from individuals.(Citation: NationsBuying)(Citation: PegasusCitizenLab)\n\nIn addition to purchasing capabilities, adversaries may steal capabilities from third-party entities (including other adversaries). This can include stealing software licenses, malware, SSL/TLS and code-signing certificates, or raiding closed databases of vulnerabilities or exploits.(Citation: DiginotarCompromise)", "external_references": [{"external_id": "T1588", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1588"}, {"description": "Nicole Perlroth and David E. Sanger. (2013, July 12). Nations Buying as Hackers Sell Flaws in Computer Code. Retrieved March 9, 2017.", "source_name": "NationsBuying", "url": "https://www.nytimes.com/2013/07/14/world/europe/nations-buying-as-hackers-sell-computer-flaws.html"}, {"description": "Bill Marczak and John Scott-Railton. (2016, August 24). The Million Dollar Dissident: NSO Group\u2019s iPhone Zero-Days used against a UAE Human Rights Defender. Retrieved December 12, 2016.", "source_name": "PegasusCitizenLab", "url": "https://citizenlab.ca/2016/08/million-dollar-dissident-iphone-zero-day-nso-group-uae/"}, {"description": "Fisher, D. (2012, October 31). Final Report on DigiNotar Hack Shows Total Compromise of CA Servers. Retrieved March 6, 2017.", "source_name": "DiginotarCompromise", "url": "https://threatpost.com/final-report-diginotar-hack-shows-total-compromise-ca-servers-103112/77170/"}, {"description": "FireEye. (2014). SUPPLY CHAIN ANALYSIS: From Quartermaster to SunshopFireEye. Retrieved March 6, 2017.", "source_name": "FireEyeSupplyChain", "url": "https://www.mandiant.com/resources/supply-chain-analysis-from-quartermaster-to-sunshop"}, {"description": "Maynier, E. (2020, December 20). Analyzing Cobalt Strike for Fun and Profit. Retrieved October 12, 2021.", "source_name": "Analyzing CS Dec 2020", "url": "https://www.randhome.io/blog/2020/12/20/analyzing-cobalt-strike-for-fun-and-profit/"}, {"description": "Kovar, R. (2017, December 11). Tall Tales of Hunting with TLS/SSL Certificates. Retrieved October 16, 2020.", "source_name": "Splunk Kovar Certificates 2017", "url": "https://www.splunk.com/en_us/blog/security/tall-tales-of-hunting-with-tls-ssl-certificates.html"}, {"description": "Insikt Group. (2019, June 18). A Multi-Method Approach to Identifying Rogue Cobalt Strike Servers. Retrieved October 16, 2020.", "source_name": "Recorded Future Beacon Certificates", "url": "https://www.recordedfuture.com/cobalt-strike-servers/"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "resource-development"}], "modified": "2021-10-18T12:26:22.831Z", "name": "Obtain Capabilities", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_data_sources": ["Malware Repository: Malware Metadata", "Malware Repository: Malware Content", "Certificate: Certificate Registration", "Internet Scan: Response Content"], "x_mitre_detection": "Consider analyzing malware for features that may be associated with malware providers, such as compiler used, debugging artifacts, code similarities, or even group identifiers associated with specific Malware-as-a-Service (MaaS) offerings. Malware repositories can also be used to identify additional samples associated with the developers and the adversary utilizing their services. Identifying overlaps in malware use by different adversaries may indicate malware was obtained by the adversary rather than developed by them. In some cases, identifying overlapping characteristics in malware used by different adversaries may point to a shared quartermaster.(Citation: FireEyeSupplyChain) Malware repositories can also be used to identify features of tool use associated with an adversary, such as watermarks in [Cobalt Strike](https://attack.mitre.org/software/S0154) payloads.(Citation: Analyzing CS Dec 2020)\n\nConsider use of services that may aid in the tracking of newly issued certificates and/or certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.(Citation: Splunk Kovar Certificates 2017) Some server-side components of adversary tools may have default values set for SSL/TLS certificates.(Citation: Recorded Future Beacon Certificates)\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["PRE"], "x_mitre_version": "1.1"}
{"created": "2020-01-24T13:51:01.210Z", "created_by_ref": "", "description": "Adversaries may establish persistence by executing malicious content triggered by user inactivity. Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension.(Citation: Wikipedia Screensaver) The Windows screensaver application scrnsave.scr is located in C:\\Windows\\System32\\, and C:\\Windows\\sysWOW64\\  on 64-bit Windows systems, along with screensavers included with base Windows installations.\n\nThe following screensaver settings are stored in the Registry (HKCU\\Control Panel\\Desktop\\) and could be manipulated to achieve persistence:\n\n* SCRNSAVE.exe - set to malicious PE path\n* ScreenSaveActive - set to '1' to enable the screensaver\n* ScreenSaverIsSecure - set to '0' to not require a password to unlock\n* ScreenSaveTimeout - sets user inactivity timeout before screensaver is executed\n\nAdversaries can use screensaver settings to maintain persistence by setting the screensaver to run malware after a certain timeframe of user inactivity.(Citation: ESET Gazer Aug 2017)", "external_references": [{"external_id": "T1546.002", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1546/002"}, {"description": "ESET. (2017, August). Gazing at Gazer: Turla\u2019s new second stage backdoor. Retrieved September 14, 2017.", "source_name": "ESET Gazer Aug 2017", "url": "https://www.welivesecurity.com/wp-content/uploads/2017/08/eset-gazer.pdf"}, {"description": "Wikipedia. (2017, November 22). Screensaver. Retrieved December 5, 2017.", "source_name": "Wikipedia Screensaver", "url": "https://en.wikipedia.org/wiki/Screensaver"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "privilege-escalation"}, {"kill_chain_name": "mitre-attack", "phase_name": "persistence"}], "modified": "2023-04-21T12:31:54.177Z", "name": "Screensaver", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "3.1.0", "x_mitre_contributors": ["Bartosz Jerzman"], "x_mitre_data_sources": ["Process: Process Creation", "Command: Command Execution", "Windows Registry: Windows Registry Key Modification", "File: File Creation", "File: File Modification"], "x_mitre_deprecated": false, "x_mitre_detection": "Monitor process execution and command-line parameters of .scr files. Monitor changes to screensaver configuration changes in the Registry that may not correlate with typical user behavior.\n\nTools such as Sysinternals Autoruns can be used to detect changes to the screensaver binary path in the Registry. Suspicious paths and PE files may indicate outliers among legitimate screensavers in a network and should be investigated.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["User"], "x_mitre_platforms": ["Windows"], "x_mitre_version": "1.1"}