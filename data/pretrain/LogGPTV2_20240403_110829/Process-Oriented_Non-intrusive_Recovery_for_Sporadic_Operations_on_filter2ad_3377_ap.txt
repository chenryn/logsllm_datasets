Alternative) 
$0.0031 
Add hedged 
instance into 
ASG; 
(Direct 
Alternative) 
$0.0031 
Step 7. 
Register New 
Instance with 
ELB 
Register 
VM’ to 
ELB fails 
RP1, RP3, 
RP5, RP6, 
RP8 
Register new 
instance with 
ELB again; 
$0 
Register new 
instance with 
ELB again; 
$0 
(Direct Redo) 
(Direct Redo) 
Recovery 
Point 5 
3)  Satisfying Recovery Requirement R4 
The recovery monetary cost of the selected recovery action is the optimal/acceptable one, which 
means that its recovery monetary cost is relatively small compared to all other recovery actions. 
Such  selection  and  optimization  mechanism  guarantees  that  the  recovery  monetary  cost  can 
meet the recovery monetary cost objective set by stakeholders. Hence, the requirement that the 
recovery should reduce monetary cost is achieved. 
100 
E.  Recovery from Errors without Known Causes  
1)  Experimental Procedure 
POD-Recovery does not require a known cause: its recovery plan generation dynamically finds 
a  plan  from  the  current  erroneous  state  to  a  desired  state  –  be  it  a  captured  earlier  state  or  an 
expected future state. To study this aspect in detail, we performed additional experiments with 
other  faults.  We  again  ran  rolling  upgrade,  injected  various  faults,  and  triggered  recovery 
without providing the error causes. Per type of injected fault, we performed 30 runs. 
2)  Experimental Results 
Table  15  summarizes  the  results  of  these  experiments,  by  showing  the  number  of  successful 
recoveries for each injected fault. As can be seen, recovery is successful for all injected faults, 
except  for  one:  the  fault  “cloud  system  disconnected”  refers  to  a  network  disconnect  between 
the recovery service and the AWS API. Due to this disconnect, POD-Recovery cannot take any 
recovery actions or even assess the current state of the resources, and hence cannot recover. 
Table 15.  Recovery without Known Causes 
Recovery Point 
Error Occurred  Fault Injected (Cause) 
# Successful 
Recoveries 
Recovery Point 1 
Recovery Point 2 
ASG uses wrong 
launch 
configuration 
configuration 
Launch 
(LC)  changed  by  other 
team 
instance 
be 
Old 
cannot 
deregistered 
from ELB 
“DeregisterInstancesFro
mELB” call fails 
Other  team  reattaches 
an old instance to ELB 
Recovery Point 3 
Old 
cannot 
terminated 
instance 
be 
Recovery Point 4 
Auto 
scaling 
group has wrong 
version instances 
Recovery Point 5 
instance 
New 
be 
cannot 
registered  with 
ELB 
“TerminateInstanceInA
SG” call fails 
Cloud 
disconnected 
system 
Launch 
(LC) changed 
configuration 
Wrong 
attached by other team 
instances 
Cloud 
disconnected 
system 
“RegisterInstancesWith
ELB” call fails 
Other  team    detaches 
this  new    instance  from 
ELB 
101 
30 
30 
30 
30 
0 
30 
30 
0 
30 
30 
3)  Satisfying Recovery Requirement R5 
Due  to  the  dynamic  recovery  plan  generation,  our  method  can  recover  from  errors  without 
known cause – as long as the error cause is included in the resource space (e.g. wrong LC) and 
can be recovered through API calls. If the cause is not included or the API cannot be reached 
(e.g. cloud system disconnected), our method cannot recover from the error. Hence, the cause of 
the  error  does  not  affect  the  recovery  although  it  may  affect  whether  the  error  remains  or 
reoccurs. 
F.  Dealing with False Positives of Error Detection 
1)  Experimental Procedure 
To  test  the  reaction  of  POD-Recovery  to  false  positives  of  error  detection,  we  trigger  the 
recovery  service  without  injecting  an  error,  and  observe  whether  POD-Recovery  takes  any 
action.  For  each  recovery  point  (RP)  we  do  this  50  times.  Since  error  detection  triggers  the 
recovery  service,  and  since  POD-Recovery  does  not  consider  any  causes  offered  by  the 
triggering  message,  we  do  not  investigate  any  more  complex  false  positives.  Also,  as  argued 
above, if a transient error disappears before recovery starts, we consider it to be a false positive 
from the viewpoint of recovery. 
2)  Experimental Results 
Table 16 shows the recovery service’s ability to handle false positives from the error detection 
service. We can see that all the false positives were successfully detected: in all 250 runs of our 
experiment, no recovery action was taken. 
Table 16.  Handling False Positives of Error Detection 
Recovery Point 
# False Positives 
# No Recovery 
RP 1 
RP 2 
RP 3 
RP 4 
RP 5 
50 
50 
50 
50 
50 
50 
50 
50 
50 
50 
3)  Satisfying Recovery Requirement R6 
Due  to  the  design  of  our  recovery  method,  with  its  dynamic  plan  generation,  false  positives 
from error detection will not cause unnecessary recovery actions. 
102 
G.  Recovery for Recovery Itself  
1)  Experimental Procedure 
To test POD-Recovery’s behaviour when errors occur during the execution of the recovery plan, 
we performed a rolling upgrade operation on a cloud application  with 8 instances, at a rolling 
depth of 1. Hence, during the rolling upgrade, 1 old instance will be killed and 1 new instance 
will be launched. I injected faults into each determined recovery point to trigger POD-Recovery, 
waited for the selected recovery action to execute, and then manually injected additional faults 
into the recovery action to trigger the “recovery of recovery” block. I performed 30 runs of this 
test of “recovery for recovery itself” for each recovery point of rolling upgrade operation. 
2)  Experimental Results 
Table 17 shows the recovery time of “recovery for recovery” on the rolling upgrade operation. 
The relative standard deviation is at most 2.5%. 
Table 17.  Recovery Time of “Recovery for Recovery” 
Recovery 
Point 
Process Step 
Errors 
Recovery 
Point 1 
Step 1. Create 
New Launch 
Configuration LC’ 
Step 2. Update 
Auto Scaling 
Group 
Step 3. Sort 
Instances 
Recovery 
Point 2 
Step 4. Deregister 
Old Instance from 
ELB 
ASG not 
attached 
with LC’ 
but 
attached 
with LC’’ 
Deregister 
VM from 
ELB fails 
Selected 
Recovery 
Action(Pareto 
Set) 
Time of 
Recovery 
for 
Recovery 
(Pareto 
Set) 
Selected 
Recovery 
Action(User 
Constraints) 
Time of 
Recovery for 
Recovery (User 
Constraints) 
Update ASG 
again with LC’; 
3.19 s 
Update ASG 
again with LC’; 
2.79 s 
(Reparation) 
(Reparation) 
Deregister old 
instance from 
ELB again; 
3.19 s 
Deregister old 
instance from 
ELB again; 
3.07 s 
(Direct Redo) 
(Direct Redo) 
Recovery 
Point 3 
Step 5. Terminate 
Old Instance VM 
Terminate 
VM fails 
(too long 
termination 
time) 
Detach VM 
from ASG; 
(Direct 
Alternative) 
Recovery 
Point 4 
Step 6. Wait for 
ASG to Start New 
Instance VM’ 
Launch 
VM’ fails 
Step 7. Register 
New Instance with 
ELB 
Register 
VM’ to 
ELB fails 
Recovery 
Point 5 
Detach VM 
from ASG; 
(Direct 
Alternative) 
Add hedged 
instance into 
ASG; 
(Direct 
Alternative) 