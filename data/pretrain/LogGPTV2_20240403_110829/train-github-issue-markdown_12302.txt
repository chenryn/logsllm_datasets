 **Update from bpasero:**  
The main issue is that our glob patterns are folder based (e.g. exclude
`**/node_modules`) and not file based (e.g. exclude `**/node_modules/**`).
When we apply the patterns to in-memory editors and editor history we always
pass in the full path of the resource and that makes the glob match fail. For
search it works because we check the pattern on the parent folders already and
return early if they match. The only fix I see for now is to change our
default patterns to match on `**/folder/**` instead of `**/folder`.
**Original** :
These steps repro on a node module where the search term is in a sub-
directory. When a sub-directory is included it should search all files under
the directory. This can _really_ confuse users, I'm proof since I just tried
to find `finishOutput` usages only to be told it's only referenced by its
definition.
Steps to Reproduce:
  1. Open vscode
  2. In explorer find node_modules/pty.js
  3. Right click and find in folder, "node_modules/pty.js" should be added to files to include
  4. Search for "finishOutput", no results show up
  5. Open node_modules/pty.js/deps/winpty/agent/Agent.cc
  6. Run the search again, results show up from Agent.cc
  7. Open node_modules/pty.js/deps/winpty/agent/Terminal.cc
  8. Run the search again, results show up from both Agent.cc and Terminal.cc
Adding `/**` or `/**/*` to the files to include didn't make a difference.