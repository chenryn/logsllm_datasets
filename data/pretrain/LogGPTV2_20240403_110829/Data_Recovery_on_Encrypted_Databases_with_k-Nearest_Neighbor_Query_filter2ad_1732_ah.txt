m
m
i=1
i=1
(2)
Transformation to Bisector Estimation. The multinomial
formulation can be adjusted to assist to the task of bisector
approximation. Let each trial correspond to a uniformly
chosen query point from [α, β], then the outcome of the trial
corresponds to an ordered response from the Voronoi diagram
Vk(DB). The number of trials for the case of a multinomial
was denoted by m which in the bisector estimation is the
number of queries. Therefore the number of possible outcomes
|R| is the number of Voronoi segments of order k. Notice that
the probability that a response is ri is equal to the probability
pi that a uniformly chosen query point lands to the Voronoi
segment Vk(ri), which in turn is equal to the ratio of the length
of the corresponding Voronoi segment to the length of the entire
bounded metric space. Speciﬁcally pi = Len(Vk(ri))/(β − α).
Let Pi,j be the set of Voronoi segments that precede bi,j,
Len(Pi,j(l)). Since
then we know that bi,j = α +
|Pi,j|  1 − 3e−m2
(cid:9)|bi,j − (cid:20)bi,j| ≤ 2) > 1 − 3e
− m
2
2
Pr
(β−α)2 25 .
1/25.
We deﬁne 2 = (β − α)1 and get:
2
25(β−α)2 and get:
− m
2
2
− m
225(β−α)2
25(β−α)2 = 3e
δ ≥ 3e
⇒ ln δ ≥ ln 3 −
⇒ m ≥ 225(ln 3 − ln δ)(β − α)2
225(β − α)2
m2
2
2
(cid:2)
(cid:3)
Also with some algebraic manipulation of the inequality
⇒ m ≥ 180(β − α)2|R|
about m from Lemma 3 in [13] we get:
|R|
⇒ m ≥ |R|(β − α)220
m
Since |R| = k(n(k + 1)/2) + 1 we get
⇒ |R|
m ≥ 180(β − α)2(k(n(k + 1)/2) + 1)
20(β − α)2
≤ 2
1
20
≤
2
2
2
2
m
2
.
2
180(β − α)2(k(n(k + 1)/2) + 1)
By using the two derived inequalities about m we get:
, 225(β − α)2(ln 3 − ln δ)
m = max
Then the out put ˜v of the algorithm satisﬁes the following
probability expression:
⇒ Pr
E. Proof of Theorem 5
(cid:9)|vi − (cid:24)vi| ≤ ) > 1 − δ.
2
The proof of this Theorem is similar to the proof of
Theorem 4, in terms of probabilistic analysis. Let (Y1, . . . , Y|R|)
be a multinomial distribution, that is |R| is a ﬁxed number and
we have |R| mutually exclusive outcomes with corresponding
probabilities p1, . . . , p|R|, and m independent trials. From
Lemma 3 in [13] we have that for all 1 ∈ (0, 1) and all
|R| satisfying |R|/m ≤ 2
1/20 we have:
Pr
|Yi − E[Yi]| > m1) ≤ 3e−m2
1/25
(cid:9) |R|(cid:19)
(cid:10) − 1 ≤(cid:8)|R|
i=1
(cid:9)(cid:8)|R|
E[Yi]
m
i=1
From which we can similarly derive:
≤(cid:9)(cid:8)|R|
i=1
(cid:10)
+ 1
E[Yi]
m
i=1
Yi
m
Transformation to Constraint Estimation. The multinomial
formulation can be adjusted to assist to the task of constraint es-
timation. Let each trial correspond to a uniformly chosen query
point from [α, β], then the outcome of the trial corresponds
to an unordered response from the Voronoi diagram Vk(DB).
The number of trials for the case of a multinomial corresponds
to the number of queries and is denoted by m. Therefore the
number of possible outcomes is |R| which is the number of
Voronoi segments of order k. Notice that the probability that a
response is ri is equal to the probability pi that a uniformly
chosen query point lands to the Voronoi segment Vk(ri), which
in turn is equal to the ratio of the length of the corresponding
Voronoi segment to the length of the entire bounded metric
space. Speciﬁcally pi = Len(Vk(ri))/(β − α).
We proceed by doing a case analysis on the possible values
of i and how it affects the formulation of the ci,i+1 (see
Lemma 7) of the ordering constraint and consequently the
probability expression of the previous paragraph. Each outcome
of the multinomial (Y1, . . . , Y|R|) corresponds to a Voronoi
segment in the left-to-right order. Roughly, the calculations of
Theorem 4 are performed for summation with |R| terms, using
Lemma 7 we show that in this Theorem and for cases (1)-(5)
we sum |Ci| terms where |Ci| ≤ |R|. Therefore the analysis of
Theorem 4 holds for these cases as well. Case (6) is different
and we explain how the analysis changes.
Case (1) where 0 ≤ i  1 − 3e−m2
Following similar calculations as in the proof of Theorem 4
we get:
l∈Ci
1/25.
i=1
Pr
Case (2) where i = k − 1.
(cid:19)
the following formulation:
ck−1,k = −
1≤l≤k−1
In this case the term ci,i+1 has
Len({sl, . . . , sl+k−1})
(cid:19)
Let Ci be the set that contains the index of each Voronoi
segment of the above expression, i.e. the index of responses
{sl, . . . , si+k−1} for 1 ≤ l ≤ k − 1 wrt
the ordering
(Y1, . . . , Y|R|). Since |Ci| = k − 1 and all the participating
lengths are unique we have:
|Yl − E[Yl]| ≤
|Yi − E[Yi]| ≤ m1
(cid:9)|ci,i+1 − (cid:2)ci,i+1| ≤ (β − α)1) > 1 − 3e−m2
Following similar calculations as in the proof of Theorem 4
we get:
|R|(cid:19)
l∈Ci
1/25.
i=1
Pr
Case (3) where k ≤ i < 2k − 1.
ci,i+1 has the following formulation:
ci,i+1 = Len({si mod k+1, . . . , si mod k+k})
In this case the term
Let Ci be the set
that contains
the index of
the
(cid:18)(cid:17)(cid:21)(cid:25)
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:45:34 UTC from IEEE Xplore.  Restrictions apply. 
Lemma 7. The ordering constraint vi < vi+1 can be expressed as a function of A) the offsets ξ = (ξ0, . . . , ξk−1) and B)
the lengths of a subset of Voronoi segments. Speciﬁcally by using the expressions of vi from Lemma 5 we get the following
cases:
• if 0 ≤ i < k − 1, then vi < vi+1 can be written as:
• if i = k − 1, then vi < vi+1 can be written as:
− ξi + ξi+1 < ci,i+1, where ci,i+1 = Len({si+1, . . . , si+k})
− ξk−1 − ξ0 < ck−1,k, where ck−1,k = −
Len({sl, . . . , sl+k−1})
(cid:19)
1≤l≤k−1
• if k ≤ i < 2k − 1, then vi < vi+1 can be written as:
• if i = 2k − 1, then vi < vi+1 can be written as:
ξi mod k − ξi mod k+1 < ci,i+1, where ci,i+1 = Len({si mod k+1, . . . , si mod k+k})
ξk−1 + ξ0 < c2k−1,2k, where c2k−1,2k = Len({sk, . . . , s2k−1}) +
Len({sl, . . . , sl+k−1})
(cid:19)
1≤l≤k
• if 2k ≤ i < n − 1 and (i + 1) mod k (cid:14)= 0, then vi < vi+1 can be written as:
(−1)
(cid:5)i/k−1(cid:6)
(ξi mod k − ξ(i+1) mod k) < ci,i+1
(cid:19)
(cid:5)i/k−1(cid:6)
, where ci,i+1 = (−1)
(−1)j+(cid:5)i/k(cid:6)
• if 2k ≤ i < n − 1 and (i + 1) mod k = 0, then vi < vi+1 can be written as:
(Len({s(i+1) mod k, . . . , s(i+1) mod k+k−1}) +
2≤j≤(cid:5)i/k(cid:6)
, where ci,i+1 = (−1)
(cid:5)i/k(cid:6)+1
Len({sl, . . . , sl+k−1})
(cid:9) (cid:19)
1≤l≤k