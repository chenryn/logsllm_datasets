by incorporating CKKS extensions to multiple parties. For
instance, the multi-key scheme by Chen et al. [31] allows
computations on ciphertexts generated by multiple users with
their own keys. Alternatively, in the multiparty scheme by
Mouchet et al. [80] users generate a common public key for
which the corresponding private key is secret shared among
them. In both cases, the service provider computes on the
users’ ciphertexts and interacts with all of them to decrypt the
result.
Usability. Even though CRISP introduces non-negligible
communication and computation overhead, it remains accept-
able for modern systems. The independent iterations of the
ZKCE make the proof generation highly paralellizable and
require much less memory than the full proof size (experimen-
tally, as little as 2 GB of RAM). CRISP has also the advantage
of being an ofﬂine system that only requires interaction in
the release protocol: e.g., the transfer phase can be executed
when the user is idle. Additionally, recent communication sys-
tems such as ﬁber optic internet or 5G offer high throughput
links: With a 80 Mb/s link, the proof for three weeks worth of
smart metering data would only require about a minute to be
transferred. For the activity tracking, CRISP can be executed
when the user plugs her wearable device to a computer and
transfer the data while recharging it.
8 Related Work
Although homomorphic encryption is a solution receiving
much traction to protect privacy in various ﬁelds, such as ma-
chine learning [57, 65, 88] and medical research [67, 95], it
USENIX Association
30th USENIX Security Symposium    2123
only addresses the tension between privacy and utility, and
it does not account for the authenticity of the encrypted data
nor the correctness of the computation of its encryption (i.e.,
integrity). Veriﬁable encryption (VE) enables us to efﬁciently
prove properties on encrypted data. Although VE solutions
have been widely explored in the general case, notably by
Camenish et al. [22, 23], they are still under investigation
for lattice-based cryptographic systems that provide post-
quantum security. Lyubashevsky and Neven [78] propose
a one-shot veriﬁable encryption for short solutions to linear
relations, i.e., a single run of their protocol convinces a veriﬁer
that the plaintext satisﬁes the relation. Recent improvements,
e.g., [15] and [46], expand lattice-based VE to non-linear
polynomial relations. Although VE can be used for proofs
of correct encryption, it does not address data authenticity,
which is ensured by cryptographic techniques, such as hash
functions, that are more complex than polynomial relations.
To this end, homomorphic signatures [19, 24, 26, 56] and
homomorphic authenticators [5, 48, 54, 87] enable privacy-
preserving computations on authenticated data. In particular,
such schemes produce a signature of the plaintext result of ho-
momorphic computations without deciphering. In this setting,
a data owner provides a signature to some protected data and
sends it to a server for processing. The server generates a new
valid signature for the result of the homomorphic computa-
tion, which yields nothing more than the message it is signing.
Some works, e.g., [5], improve this area with constructions
offering homomorphic signatures that cope with low-degree
polynomial operations. Homomorphic authenticators could
be a solution to the problem under investigation, but they
(a) require data sources to employ non-widely-supported ho-
momorphic signature schemes, thus violating the minimal
infrastructure modiﬁcation requirement of our model, and
(b) do not support data ofﬂoading at the service provider to
amortize communication and storage costs.
Veriﬁable computation (VC) [47, 51, 69] typically applies
to cases where a computationally weak user transfers her
encrypted data to a cloud provider that computes on it, and
its objective is to ensure the correctness and trustworthiness
of the result. As such, VC protects only the integrity of the
cloud computations and not the authenticity of the user’s
provided data. Such techniques are orthogonal to CRISP and
could be employed to enable users to verify the computations
performed by service providers, if the latter are considered
malicious (and not honest-but-curious as in our Threat Model
– see Section 2.2).
Other VC techniques, known as zero-knowledge arguments,
enable us to prove general statements about user private in-
puts. Pinocchio [84] and subsequent works on succinct non-
interactive arguments of knowledge (SNARKS), e.g., [38],
build on Quadratic Arithmetic Programs [52] and bilinear
maps to provide efﬁcient proofs with small veriﬁcation com-
plexity. Backes et al. [13] extend SNARKS to the case of
certiﬁed data (ADSNARK) and apply them to the three party
model considered in this work. Similarly, ZQL [49] and
Z /0 [50] present languages and compilers for data certiﬁcation,
client side computation, and result veriﬁcation. But those so-
lutions require computations from the user every time a new
query is performed, thus not supporting data ofﬂoading. Fur-
thermore, as pointed out by Katz et al. [66], SNARKS suffer
from one or both of the following problems: (a) they require
a trusted set-up, and (b) they are insecure against quantum
attacks (due to the use of bilinear maps [13, 38, 49, 50, 84]).
Interestingly, this holds also for the recent work of Gennaro et
al. [53]; they use LWE homomorphic encryption to achieve
post-quantum security of their encodings, but still rely on
trusted setups through common reference strings [39] and
q-PKE [58] assumptions. This trusted setup constraint is ad-
dressed by Wahby et al. [94], but their solution relies on the
discrete log problem that is de facto not post-quantum se-
cure. Finally, Ben-Sasson et al. [17] propose STARKs which
achieve transparent and scalable arguments of knowledge by
relying only on the collision-resistant hash and Fiat-Shamir
heuristic assumptions. Although STARK-like systems solve
a similar problem to ours, they follow a different approach
where the bulk of the work is executed at the user side and no
data ofﬂoading is considered, hence, multiple data computa-
tions require the creation of multiple proofs.
A radically different approach to proving statements in
zero-knowledge comprises solutions based on multi-party
computation (MPC) such as ZKBoo [55], ZKB++ [29],
Ligero [6], and KKW [66]. These solutions are built on top of
the MPC-in-the-head paradigm introduced by Ishai et al. [64]
and provide plausibly post-quantum secure mechanisms to
prove the knowledge of an input to a public circuit that yields
a speciﬁc output, due to a cut-and-choose approach over sev-
eral runs. Our construction follows this approach to convince
the service provider about the integrity of the user’s data and
its encryption. In a concurrent work [16], Baum and Nof also
present the use of MPC-in-the-head to prove lattice-based
assumptions. However, their construction is based on a differ-
ent problem (SIS, Short Integer Solution) and, unlike CRISP,
does not address the integrity check of the encrypted payload.
Another potential solution for enabling privacy-friendly
and integrity preserving computations on authenticated data
is to consider trusted hardware, such as Intel SGX [7, 62, 79],
to process the data. The secure enclave could be positioned
at the user side (returning a result certiﬁed by the enclave)
or at the service provider side (decrypting ciphertexts and
returning only the result of the computation). However, those
solutions impose different trust assumptions and we consider
them orthogonal to our work.
Several works are devoted to protecting privacy for smart
metering (e.g., see surveys [44, 96]). However, only some of
them, e.g., [4, 74], address also the concern of data integrity
and authenticity, by relying on custom homomorphic signa-
ture schemes. The applicability of such solutions is limited
as, according to their technical speciﬁcations [91], smart me-
2124    30th USENIX Security Symposium
USENIX Association
ters cope with standard digital signatures, e.g., ECDSA [82].
Similarly, a number of works, e.g., [12,41,95], employ homo-
morphic encryption to protect genomic privacy and to perform
disease-susceptibility computations. Their model considers
a medical unit that sequences the DNA of the user, who in
turn protects it via homomorphic encryption before sending
it for processing to a third-party. These solutions do not ad-
dress the issue of data integrity or authenticity. Finally, several
works are dedicated to both privacy and integrity in location-
based activity tracking [60, 77, 85, 86, 97, 98]. They also are
either peer-based [97, 98], infrastructure-based [77, 85], or
hybrid [60, 86]. SecureRun [85] offers activity proofs for
estimating the distance covered in a privacy and integrity pre-
serving manner. Nevertheless, the system’s accuracy relies
on the density of access points, and it achieves at best a me-
dian accuracy of 78% (compared to 99.9% with CRISP on a
similar dataset).
9 Conclusion
Data sharing among users and service providers in the digital
era incurs a trade-off between privacy, integrity, and utility. In
this paper, we have proposed a generic solution that protects
the interests of both users and service providers. Building
on state-of-the-art lattice-based homomorphic encryption and
commitments, as well as zero-knowledge proofs, our construc-
tion enables users to ofﬂoad their data to service providers in
a post-quantum secure, privacy and integrity preserving man-
ner, yet still enables ﬂexible computations on it. We evaluated
our solution on three different uses cases, showing its wide
potential for adoption. As future work, we will explore ex-
tending CRISP to malicious service providers by combining
secure computation techniques with differential privacy.
Acknowledgements
We would like to thank our shepherd Ian Goldberg and the
anonymous reviewers for their helpful feedback. We are also
grateful to Henry Corrigan-Gibbs, Wouter Lueks, and the
members of the EPFL Laboratory for Data Security for their
helpful comments and suggestions. This work was supported
in part by the grant #2017-201 (DPPH) of the Swiss strategic
focus area Personalized Health and Related Technologies
(PHRT), and the grant C17-16 (SecureKG) of the Swiss Data
Science Center.
References
[1] “1000 Genomes | A Deep Catalog of Human Genetic
Variation,” https://www.internationalgenome.org/.
[2] “Sanitas Active app | Sanitas health insurance,” https:
//www.sanitas.com/en/private-customers/contact-help/
customer-portal-and-apps/active-app.html.
[3] 23andMe, “DNA Genetic Testing & Analysis - 23andme
AU, DE, FR & EU,” https://www.23andme.com/en-int/.
[4] A. Abdallah and X. S. Shen, “A Lightweight Lattice-
Based Homomorphic Privacy-Preserving Data Aggre-
gation Scheme for Smart Grid,” IEEE Transactions on
Smart Grid, 2018.
[5] J. H. Ahn, D. Boneh, J. Camenisch, S. Hohenberger,
A. Shelat, and B. Waters, “Computing on authenticated
data,” Journal of Cryptology, 2015.
[6] S. Ames, C. Hazay, Y. Ishai, and M. Venkitasubrama-
niam, “Ligero: Lightweight sublinear arguments without
a trusted setup,” in ACM SIGSAC Conference on Com-
puter and Communications Security – CCS, 2017.
[7] I. Anati, S. Gueron, S. Johnson, and V. Scarlata, “Inno-
vative technology for CPU based attestation and sealing,”
in International Workshop on Hardware and Architec-
tural Support for Security and Privacy, 2013.
[8] T. Araki, A. Barak, J. Furukawa, M. Keller, Y. Lindell,
K. Ohara, and H. Tsuchida, “Generalizing the SPDZ
Compiler For Other Protocols,” in ACM SIGSAC Con-
ference on Computer and Communications Security –
CCS, 2018.
[9] F. Arute, K. Arya, R. Babbush, D. Bacon, J. C. Bardin,
and et al. , “Quantum supremacy using a programmable
superconducting processor,” Nature, 2019.
[10] M. R. Asghar, G. Dán, D. Miorandi, and I. Chlamtac,
“Smart meter data privacy: A survey,” IEEE Communi-
cations Surveys & Tutorials, 2017.
[11] Y. Aumann and Y. Lindell, “Security against covert ad-
versaries: Efﬁcient protocols for realistic adversaries,”
in Theory of Cryptography Conference, 2007.
[12] E. Ayday, J. L. Raisaro, J.-P. Hubaux, and J. Rouge-
mont, “Protecting and evaluating genomic privacy in
medical tests and personalized medicine,” in Workshop
on Privacy in the Electronic Society - WPES, 2013.
[13] M. Backes, M. Barbosa, D. Fiore, and R. M. Reischuk,
“ADSNARK: Nearly Practical and Privacy-Preserving
Proofs on Authenticated Data,” in IEEE Symposium on
Security and Privacy, 2015.
[14] C. Baum and I. Damgard, “Efﬁcient Commitments and
Zero-Knowledge Protocols from Ring-SIS with Applica-
tions to Lattice-based Threshold Cryptosystems,” Cryp-
tology ePrint Report 2016/997, 2016.
[15] C. Baum, I. Damgård, V. Lyubashevsky, S. Oechsner,
and C. Peikert, “More Efﬁcient Commitments from
Structured Lattice Assumptions,” in SCN.
Springer,
2018.
[16] C. Baum and A. Nof, “Concretely-efﬁcient zero-
knowledge arguments for arithmetic circuits and their
application to lattice-based cryptography,” in IACR PKC.
Springer, 2020.
[17] E. Ben-Sasson, I. Bentov, Y. Horesh, and M. Riabzev,
“Scalable Zero Knowledge with No Trusted Setup,” in
CRYPTO, 2019.
USENIX Association
30th USENIX Security Symposium    2125
[18] D. J. Bernstein, A. Hülsing, S. Kölbl, R. Niederhagen,
J. Rijneveld, and P. Schwabe, “The SPHINCS+ signature
framework,” in ACM SIGSAC Conference on Computer
and Communications Security - CCS, 2019.
[19] D. Boneh and D. M. Freeman, “Homomorphic signa-
tures for polynomial functions,” in EUROCRYPT, 2011.
[20] J. Buchmann, M. Geihs, K. Hamacher, S. Katzenbeisser,
and S. Stammler, “Long-term integrity protection of
genomic data,” EURASIP J. Inf. Secur., 2019.
[21] A. Buniello, J. MacArthur, M. Cerezo, L. Harris, J. Hay-
hurst, and et al. , “The NHGRI-EBI GWAS catalog of
published genome-wide association studies, targeted ar-
rays and summary statistics 2019,” https://www.ebi.ac.
uk/gwas/home.
[22] J. Camenisch and I. Damgård, “Veriﬁable encryption,
group encryption, and their applications to separable
group signatures and signature sharing schemes,” in
ASIACRYPT, 2000.
[23] J. Camenisch and V. Shoup, “Practical Veriﬁable En-
cryption and Decryption of Discrete Logarithms,” in
CRYPTO, 2003.
[24] D. Catalano and D. Fiore, “Practical Homomorphic
MACs for Arithmetic Circuits,” in EUROCRYPT, 2013.
[25] D. Catalano, D. Fiore, R. Gennaro, and L. Nizzardo,
“Generalizing homomorphic macs for arithmetic cir-
cuits,” in Public-Key Cryptography. Springer, 2014.
[26] D. Catalano, D. Fiore, and L. Nizzardo, “On the secu-
rity notions for homomorphic signatures,” in Applied
Cryptography and Network Security, 2018.
[27] A. Cavoukian, J. Polonetsky, and C. Wolf, “SmartPri-
vacy for the smart grid: embedding privacy into the
design of electricity conservation,” Identity in the Infor-
mation Society, 2010.
[28] M. Chase, H. Chen, J. Ding, S. Goldwasser, S. Gorbunov,
J. Hoffstein, K. Lauter, S. Lokam, D. Moody, T. Morri-
son et al., “Security of homomorphic encryption,” 2017.
[29] M. Chase, D. Derler, S. Goldfeder, C. Orlandi, S. Ra-
macher, C. Rechberger, D. Slamanig, and G. Zaverucha,
“Post-Quantum Zero-Knowledge and Signatures from
Symmetric-Key Primitives,” in ACM SIGSAC Confer-
ence on Computer and Communications Security, 2017.
[30] S. Chatel, A. Pyrgelis, J. R. Troncoso-Pastoriza, and J.-P.