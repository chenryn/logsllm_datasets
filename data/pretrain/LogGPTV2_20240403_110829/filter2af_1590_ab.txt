在安装机制设置完毕后，僵尸程序与控制端 C&C
进行连接。此时恶意程序会收集被入侵设备的系统信息，并把这些信息作为上线包的内容发送到控制端处。这个上线包的内容包含内核版本、CPU
频率、总内存大小、网口带宽以及一些硬编码字符串，比如“VERSONEX”和大量样本中出现的“Hacker”。在黑雀的线程中，其上线机制的主体功能与螳螂线程处的功能相似度极高。不同的是，黑雀线程会延迟
15 小时和 40 分钟上线，这往往会迷惑分析人员并可能逃避自动化沙箱的检测，使得黑雀 C&C
隐匿在大量的请求中，减少被发现的可能。通过对大量样本的分析，我们发现上线包的固定大小为 0x400
字节，并对上线包格式解析、提取后归纳整理出真实的数据结构，其在内存中的分布如下图所示：
### 4.3 心跳机制
僵尸程序在SendInfo线程实现了自身的心跳机制。这个线程的主要功能是向螳螂控制端和黑雀控制端发送心跳包，心跳包内容包含当前CPU使用率和网络速度信息，通过以下2个步骤获取到这些内容：
(1) 检查“eth0”到“eth9”范围内以太网口的 ifconfig 信息。并通过读取`/proc/net/dev`目录信息来计算网络速率。
(2) 通过读取`/proc/stat`目录下的信息，获取 cpu 数量，计算占用百分比。
经过指定格式拼接后，会循环不断的发送信息到 C&C 端。下图为发送的心跳包信息：
比较有趣的是，下游的黑客在发动 DDoS
攻击的时候，可能根本不会想到，主控中显示的恶意程序的攻击流量速率几乎都是伪造的。我们在SendInfo线程中发现，当恶意程序执行 DDoS
攻击时，会调用“fake_net_speed”函数，该函数会根据不同的 DDoS
攻击的模式，在一个固定的范围内伪造攻击流量速率。下图为对部分计算随机流量的截图：
僵尸程序伪造的攻击流量数据范围如下表所示：
### 4.4 控制指令解析与DDoS攻击
发送完上线包之后，此时僵尸程序会等待接收控制端的控制指令。Dofloo
会首先把控制指令包的前四个字节作为模式指令码进行解析，由此来判断接下来要进行的操作，主要支持的操作有三种:
(1) 指令码为 0x5 时，进入 CmdShell 函数，该函数内部调用了 system 函数，可作为远控来下载或执行其他指定命令。
(2) 指令码为 0x6 时，进入 DealwithDDoS 函数，此函数为 DDoS 攻击函数，所有执行攻击的判断和逻辑都在此函数中。
(3) 指令码为 0x7 时候，调用 kill 函数，终止进程。
同时 Dofloo 家族对控制指令进行了 128 位的 AES
加密，这个特性大大增加了对其控制指令流量监控和识别的难度。我们对收集到的样本进行分析后发现，所有架构下僵尸程序用来解密的 KEY
都是相同的，这也说明互联网中 Dofloo 僵尸家族的样本都来自同一个模版。KEY 如下所示：
我们模拟了未加密的控制指令（除去前4个作为模式指令码的字节）在内存中的布局,其控制指令的各个字段的含义如下图所示：
当进入到 DealwithDDoS 函数时，僵尸程序根据指令，启动不同的攻击线程。Dofloo 家族不仅具有 SYN、HTTP 等传统的攻击方法，还具有利用
UDP 协议的反射放大的攻击方式，比如 DNS 放大攻击。下图为 Dofloo 可发起的典型的 DDoS 攻击的方法：
并且我们对 Dofloo 的攻击方法进行了分析总结，并对部分攻击方法的流量特征进行了提取，制作流量特征表如下：
我们在分析攻击线程的时候，发现 ARM 架构的恶意样本每次攻击创建的攻击线程非常多，单次攻击指令可创建几种甚至十几种不同类型的攻击线程。结合样本 CPU
的分布，我们可以得知 ARM 设备下的 Dofloo 恶意程序是该僵尸家族的主力，在 DDoS 攻击中提供了主要的流量支持。
同时根据监控到 Dofloo 攻击历史，发现该家族主要的攻击方式以 UDP Flood
为主，近年来黑客也越来越喜欢DNS和NTP等反射放大攻击手段来对服务器进行打击 ，Dofloo 的攻击方式占比也印证了这一点。同时我们也可以看到
Layer7 层的 CC_Flood 和 Layer4 层的 TCP_Flood、SYN Flood 作为传统的 DDoS
的攻击方式，其占比也一直较为稳定。并且我们根据相关的情报数据得知，Dofloo 的攻击量相对于其他的家族较少，我们分析推测 Dofloo
每次发动攻击时开启了大量的攻击线程，这样能加大发包量，快速导致目标服务器宕机。
下图为 Dofloo 僵尸家族攻击方式占比图：
### 4.5 同源性分析
我们观察到很多杀毒软件对 Dofloo 家族程序有不同的命名方式，甚至识别为其他家族的程序，因此为了确定 Dofloo
家族的源码构成，我们对其进行了同源性分析。
通过对 Dofloo 僵尸网络进行同源性分析，发现 Dofloo 僵尸网络家族同 Mr.Black 僵尸网络家族、Flood.A 以及 DnsAmp
僵尸家族有很高的相似度。首先，我们对 Mr.Black 家族中的典型样本和 Dofloo
家族的典型样本进行了对比，发现这两个家族的整体流程和部分代码高度相似，比如下图中的上线机制部分，通过对比可以看到，上线包的内容和格式也极为相似：
并且还可以看到 Mr.Black 同样有同名的，发起 DDoS 攻击的函数 DealWithDDoS，其发起攻击的控制指令编码也相同。
只不过 Mr.Black 中仅有 5 种 DDoS 攻击方式。通过查阅 Mr.Black 的源码，发现 Mr.Black 源码中并没有黑雀后门线程和 AES
加密，没有远控部分，仅能发起 DDoS 攻击。因此推测 Dofloo 为参考 Mr.Black 代码更改后的变种。
然后通过 Flood.A 同 Mr.Black 和 Dofloo 家族进行对比，发现 Flood.A 家族较 Mr.Black
家族新增“SynFLood_Message”黑雀后门线程，“DealwithDDoS”函数中增加 Layer7 层的 HTTP 洪水攻击，没有 AES
加密和远控功能，与 Mr.Black 家族较为相似,部分对比图如下：
在 DnsAmp 与 Dofloo 家族的对比中，我们发现其代码差别较大，但是主要攻击代码以及程序整体设计思路比较相似。在 DnsAmp
家族中，持久化仍然是通过设置“/etc/rc.d/rc.local”来保持开机自启，并且在启动后同 Dofloo
一样，会首先确定进程的唯一性。而它的攻击线程“AttackWorker”中，我们发现同 Dofloo
一样具有同名的攻击函数“DealwithDDoS”，只不过仅有 4 种攻击方式，分别为 udp，icmp，dnsAmp,syn 攻击。虽然 DnsAmp 与
Dofloo 整体代码相似度不是太高，但是根据其主要攻击代码和程序整体的设计思路，我们推测二者具有关联性，至少 DnsAmp 为参考 Dofloo
代码而产生的相似变种。部分对比图如下：
因此，我们大致可以推测出如下的关系：MrBlack可能为原始恶意程序，Flood.A为其变种，主要增加的功能有后门黑雀线程和HTTP洪水攻击；Dofloo可能为Mr.Black或Flood.A的变种，主要新增的特性有程序持久化设置，控制指令AES加密，以及添加多种DDoS攻击方法；推测DnsAmp为Dofloo的变种，它参考了Dofloo的部分代码和设计思路。我们总结其四者的关系图如下：
## 五、 总结
本篇报告重点对 Dofloo
僵尸网络家族中存在的黑雀现象进行了分析披露，并溯源追踪黑雀，产出黑雀画像。同时对典型的僵尸样本进行了分析，提取归纳出上线、心跳、控制指令和发起攻击的流量格式。
同时，通过对黑雀和螳螂的分析，证实了黑雀攻击所存在的潜在巨大危害。尽管部分黑客尝试去掉其黑雀线程并重新传播，但绝大多数的 Dofloo
僵尸样本仍然留有此类后门，也有黑客在确认黑雀 IP
或域名失效后降低了警惕性，但是我们发现有部分黑雀域名在潜伏一段时间后，仍会偶尔解析上线，对螳螂进行一波收割。所以，综合判断该黑雀僵尸资源丰富、实力强悍。此外，通过广泛的分析发现，这种攻击方式还大量存在于其他僵尸程序、WEB
Sehll
攻击工具及蠕虫木马攻击工具，这或许需要广大安全研究人员和安全机构共同留意此类攻击的幕后黑雀，重视该类威胁可能造成的巨大危害，及时发现并清除隐匿于网络中的一大威胁。
## 参考文献
1、 DDoS-Capable IoT Malwares: Comparative Analysis and Mirai Investigation
2、 2017 Global botnet DDoS attack threat report
3、 Internet Security Threat Report
4、 Tango down report of OP China ELF DDoS'er
* * *
**启明星辰积极防御实验室（ADLab）**
ADLab成立于1999年，是中国安全行业最早成立的攻防技术研究实验室之一，微软MAPP计划核心成员，“黑雀攻击”概念首推者。截止目前，ADLab已通过CVE累计发布安全漏洞近1000个，通过
CNVD/CNNVD累计发布安全漏洞近500个，持续保持国际网络安全领域一流水准。实验室研究方向涵盖操作系统与应用系统安全研究、移动智能终端安全研究、物联网智能设备安全研究、Web安全研究、工控系统安全研究、云安全研究。研究成果应用于产品核心技术研究、国家重点科技项目攻关、专业安全服务等。
* * *