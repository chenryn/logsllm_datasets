behavior employed by spammers may also be used by other
malware authors. However, it is also possible that domains are
registered quickly after expiration and immediately used for
abuse. Another potential explanation may be that our feeds are
not the ﬁrst to see new samples. However, since we are also
considering ﬁrst seen date from VirusTotal, it seems unlikely
that the addition of other feeds that would dramatically reduce
the ﬁrst seen date for the malware samples in our dataset.
2) Domain Lifetime: Finally, we look at the lifetime of the
malware domains using Figure 7, which shows a joint density
distribution between the number of days a domain was resolved
and the lifetime of that domain in days for PUPs, malware, and
unclassiﬁed samples. We deﬁne the “lifetime” as the difference
between the ﬁrst and last seen dates for each of these domains
in passive DNS.
The joint distribution makes it easy to infer not only how
often a domain resolves but also for how long. In Figures 7b
and 7c, we notice that there are three hotspots that correspond
to the most prevalent resolution behaviors for domains in
malware and unclassiﬁed malicious software. In the bottom
left, we see that there are a large number of domains that are
short lived and rarely resolved. A second hotspot, in the top
right corner of both ﬁgures, corresponds to domains with the
exact opposite behavior—long lived and frequently resolved.
These domains were regularly queried for the entire duration
of our experiments. Finally, in the bottom right of both ﬁgures,
we observe a third pocket of domains that have a long lifetime
but infrequent resolution. In this case, we observed only a few
queries that were often years apart.
If we focus our attention on Figure 7a, which shows the
lifetime patterns for PUP domains, we observe a completely
797
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:25:08 UTC from IEEE Xplore.  Restrictions apply. 
different distribution. This is the consequence of two phe-
nomena. First, we have seen the prevalence of PUP domains
rise over the last two or three years, and this fact justiﬁes
the bounding of the joint distributions in the [1, 000, 1, 000]
region. The second reason has to do with the seemingly intense
and continuing resolution of PUP related domains—which
manifests as a higher density along the diagonal. We believe
that this is a result of organizations failing to block PUP
domains and end-point security engines that do not manage
to remediate PUP infections. As Figure 7a shows, this gives
PUPs a signiﬁcantly different DNS resolution proﬁle. On the
other hand, the unclassiﬁed domains shown in Figure 7c follow
a very similar pattern to the malware domains shown in
Figure 7b. This likely indicates that most unclassiﬁed domains
are very likely malware domains.
Summarizing, Figure 7 makes it clear that the all three
types of domains frequently have long domain lifetimes, and
many of those domains are frequently looked up. Since we
showed that most domains were only resolved by a single
sample in Section V-A1,
this suggests that many samples
remain active on the Internet for extended periods of time.
VI.
INFRASTRUCTURE ANALYSIS
In this section, we analyze the hosting infrastructure for
the domains resolved by the malware samples in our dataset.
In particular, we want to investigate whether certain IP ranges
appear more often the others, what are the reasons behind this
choice, and how the global infrastructure picture evolved over
time.
Figure 8 shows a histogram of the number of samples with
domains (after ﬁltering) resolving into a given /24 subnet, for
each year between 2012 and 2015. In each plot, we observe
spikes indicating that certain subnets are resolved by a very
large number of samples during that year, from hundreds
of thousands of samples in 2013 and 2014, up to peaks of
few million samples in 2012 and 2015. Some of the spikes
can be observed on multiple years e.g., 66.150.14.0/24
(Akamai) in 2012–2013 and 148.81.111.0/24 (NASK
Polish CERT) in 2014–2015, while the majority appears in
a single year.
We can assign spikes to speciﬁc families by analyzing the
e2LDs that resolved to those ranges and use the mapping of
e2LD to family produced by our classiﬁcation in Section IV.
This analysis reveals that there are three different reasons
behind these spikes.
The largest group corresponds to spikes caused by speciﬁc
malware families reusing the same subnet (sometimes even
the exact same IP address) for long periods of time. Those
families correspond to some of the Top-10 families by number
of samples in Table III. The majority of these spikes are due to
PUP families (hotbar, domaiq, firseria, multiplug)
although we also observe some spikes due to polymorphic
malware like vobfus. For example, three of the top four
spikes in 2015 correspond to Amazon EC2 ranges and are
all due to e2LDs belonging to the multiplug PUP family,
which seems to have migrated its hosting infrastructure to EC2
in 2015. Similarly, the top spike in both 2012 and 2013 is
caused by the Hotbar PUP family. This family used the
Akamai CDN in 2012–2014 to host
its infrastructure and
therefore caused multiple spikes in different Akamai IP ranges.
While we have observed a large number of benign domains
resolving to the Akamai ranges, after our ﬁltering in Section III
it was simple to manually recognize the Akamai spikes in
2012–2014 and associate them to the Hotbar family.
The second group of spikes corresponds to sinkholes
used to redirect
resolutions of malicious domains af-
ter intervention. The most visible spike in this category
is 148.81.111.0/24 in 2014–2015, which is due to
sinkhole.cert.pl, used by NASK since 2014 to sink
resolutions of the Polish domains used by the Virut botnet.
Our dataset contains 123 Virut e2LDs resolving to this sinkhole
being contacted by over 1M Virut samples in 2015. Another
example of sinkhole-related spike is 0.0.0.0/24 in 2014,
which is caused by a Microsoft-lead intervention on domains
used by the no-ip dynamic DNS provider [3].
The third group of spikes is due to multiple, rather than a
single, malware family. These indicate hotbeds of abuse and
appear to keep changing over time. They may correspond to
hosting providers that, over a certain time frame, had a more
open policy on acceptable behavior. One such spike is on
the right of the 2015 plot and corresponds to Clara.Net
(195.22.26.0/24), a Portuguese hosting provider that
hosted many domains associated to the sality, wapomi,
ramnit, and techsnab malware families. Another example
is the on the right side of the 2014 plot and corresponds to
ChinaNet (218.92.221.0/24), where we observe do-
mains, among others, of the frethog and karnos malware
families.
Regarding hosting providers, the top spikes in 2012 and
2013 correspond to Akamai (due to hotbar) and Chi-
naNet (vobfus). There is also one spike in 2013 due to
loadmoney in the WebZilla cloud hosting service. As an
interesting observation, starting from 2014 most spikes occur
on IP ranges belonging to cloud hosting providers—most
notably EC2, LeaseWeb, OVH, Serverius, and SoftLayer. One
exception is a 2015 spike due to the vtflooder malware
that resolved to 91.223.216.0/24, which is registered to a
private Ukranian person that uses a Gmail abuse email address.
Our analysis shows that the large spikes are dominated
by PUP families and can last for multiple years indicating
that PUP utilize seemingly stable IP infrastructure. This may
indicate that popular cloud hosting providers like Amazon
EC2, LeaseWeb, or OVH, and CDNs like Akamai, where
PUP spikes happen, may not have the same policies towards
banning PUP that they use for malware.
VII. DGA MALWARE
In the previous section, we provided an extensive analysis
of the evolution of malware network infrastructure based on
successful DNS resolutions. We now focus on a different
aspect of malware behavior: the presence and impact on our
dataset of domain name generation algorithms (DGAs).
Since the vast majority of DGA-related queries do not
resolve to a valid IP address, to perform this analysis we
ﬁrst need to reintroduce in our dataset the failed (NXDomain)
resolutions we ﬁltered out in Section III. Since 2011, over 12.5
million malware samples in our dataset produced at least one
798
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:25:08 UTC from IEEE Xplore.  Restrictions apply. 
(a) 2012
(b) 2013
(c) 2014
(d) 2015
Fig. 8: Histograms of number of samples resolving domains that point to /24 subnets. Spikes are annotated with the owner of the
IP range, the family that contacted it, and a letter indicating whether IPs are associated with malware(M), PUP(P), or a sinkhole
(S).
NXDomain during their execution. The cumulative distribution
function (CDF) in Figure 9 shows how half of the malware
executions have less than two NXDomain resolutions and only
950,644 have over ﬁve.
To identify DGA-generated domains, we check if the
domains in our malware executions dataset appear in the
DGArchive [12], which comprises 50M domains generated
by the DGAs of 66 malware families. Table V summarizes
the overlapping of the DGArchive domains with both failed
and successfully resolved domains in our malware executions
dataset. For each family, it ﬁrst shows how many e2LDs in
the DGArchive are observed among the 6.8 M domains in
our dataset before any ﬁltering (i.e., including NXDomain
queries). Then, it shows how many e2LDs from the DGArchive
are observed among the 327 K domains remaining after all
ﬁltering.
According to the DGArchive, at least 44% (3 M) of all the
e2LDs observed in our malware executions, regardless whether
they successfully resolved or not, were generated by DGAs.
This percentage is a lower bound since the DGArchive likely
misses some DGA families, and also some variants that modify
the DGA algorithm or its seed. After ﬁltering, at least 17% of
remaining e2LDs come from DGAs.
Our malware executions contain DGA e2LDs for 42 out of
66 (64%) families in the DGArchive. This number highlights
the large coverage of our dataset. Of those 42 DGArchive
families, 4 are variants of another family (e.g., pykspa and
pykspa2), which we group into the 38 families in Table V.
The large majority of DGA domains (82%) come from virut,
followed by pykspa (6%) and necurs (4%). After ﬁltering,
successfully resolved virut DGA domains correspond to
12% of all unﬁltered domains, followed by zbot-gameover
(4%), and ramnit (0.5%). While virut is the most common
DGA family in our dataset (and is still very active despite
the 2014 takedown), if we normalize by number of samples
in the family, we observe that virut resolves 1.8 e2LDs per
sample, well below the most aggressive families: emotet (82
e2LDs/sample), murofet (68), and cryptolocker (53).
The table shows that only 1.8% of DGA domains success-
fully resolved. It also emphasizes different DGA behaviors by
the malware families. For example, while we observe over
110K domain names queried by necurs, only one of them
799
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:25:08 UTC from IEEE Xplore.  Restrictions apply. 
Family
virut
pykspa
necurs
suppobox
tinba
gameover
emotet
pushdo
ranbyus
nymaim
simda
#
1
2
3
4
5
6
7
8
9
10
11
12 murofet
qakbot
13
ramnit
14
cryptolocker
15
conﬁcker
16
17
sisron
18
oderoor
19 matsnu
dircrypt
20
tempedreve
21
banjori
22
23
feodo
urlzone
24
tsiﬁri
25
torpig
26
ramdo
27
gspy
28
29
bamital
bedep
30
hesperbot
31
fobber
32
gozi
33
bobax
34
35
proslikefan
darkshell
36
redyms
37
38
xxhex
All
Before Filtering
2,477,628
189,644
110,092
72,476
52,463
24,325
23,500
13,170
12,922
12,490
12,348
9,295
4,130
3,560
2,912
1,710
1,394
622
525
510
204
200
192
77
59
53
49
49
48
44
37
31
24
23
12
10
2
1
3,026,831
After Filtering
40,452
180
1
4,677
682
7,083
96
17
7
148
590
20
119
418
89
465
1
3
130
53
20
1
13
18
58
2
27