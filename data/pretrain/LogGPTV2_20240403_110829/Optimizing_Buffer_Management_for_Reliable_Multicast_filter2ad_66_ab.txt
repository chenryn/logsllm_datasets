### Receivers Joining and Leaving Multicast Sessions

Receivers can dynamically join or leave a multicast session. When a receiver voluntarily leaves the group, it transfers each message in its long-term buffer to a randomly selected receiver within the region. This mechanism prevents the scenario where all long-term buffers decide to leave the group, which would result in unrecoverable message loss.

### Long-Term Bufferers and Poisson Distribution

For large regions, the number of long-term bufferers for an idle message approximately follows a Poisson distribution with parameter \( C \). Figure 2 illustrates this distribution.

**Figure 2.** For large regions, the number of long-term bufferers for an idle message approximately follows a Poisson distribution with parameter \( C \).

```
20
15
10
5
0
)
%
(
y
t
i
l
i
b
a
b
o
r
P
2
3
4
5
6
7
8
#longâˆ’term bufferers
9
10
11
8
7
6
5
          C
```

Additionally, the probability that no member buffers an idle message decreases exponentially with \( C \), as shown in Figure 3.

**Figure 3.** For large regions, the probability that no member buffers an idle message decreases exponentially with \( C \).

```
%
(
y
t
i
l
i
)
b
a
b
o
r
P
40
35
30
25
20
15
10
5
0
1
2
3
C
4
5
6
```

### Search for Bufferers

When a member \( A \) receives a remote request from a downstream member \( B \) for a message, there are three possible scenarios:
1. \( A \) has received the message and still buffers it.
2. \( A \) has never received the message.
3. \( A \) received the message but has discarded it.

- **Scenario 1:** \( A \) can immediately send the message to \( B \).
- **Scenario 2:** \( A \) records \( B \)'s request. If \( A \) later receives the message, it will forward it to \( B \) as described in Section 2.
- **Scenario 3:** \( A \) needs to search for a member that still buffers the message.

One approach is for \( A \) to multicast \( B \)'s request in its region. If a member has the message in its buffer, it multicasts a reply "I have the message" and forwards the message to \( B \). A randomized back-off scheme is used to suppress duplicate responses when multiple members buffer the message: upon receiving a request, a member waits a random amount of time before multicasting its reply. If it hears a multicast for the same message from another member, it suppresses its own multicast.

The challenge is choosing an appropriate back-off period. The expected number of long-term bufferers for an idle message is \( C \). Setting the back-off period proportional to \( C \) can occasionally lead to message implosion due to the random nature of message idleness. To avoid this, RRMP (Region-based Randomized Message Passing) adopts a different approach where a member conducts a random search in its region to find a bufferer of the message.

Specifically, when \( A \) receives \( B \)'s request, it randomly selects a member \( C \) in its region and forwards \( B \)'s request to \( C \). \( A \) also sets a timer based on its estimated round trip time to \( C \). Upon receiving \( B \)'s request, \( C \) checks if the message is in its buffer. If so, it sends the message to \( B \) and multicasts a reply "I have the message" to notify other members that the search process is over. If \( C \) has discarded the message, it joins \( A \) in the search process. If \( C \) has never received the message, it sends retransmission requests as described in Section 2. If \( A \) does not hear a reply when its timer expires, it randomly selects another receiver and repeats the process. Over time, more members join the search process, ensuring that \( B \) will eventually receive the message as long as at least one member in the region still buffers it.

**Figure 4.** Search for bufferers in a local region.

```
1p
2p
p
3
bufferer
4p
Time
0
5ms
10ms
15ms
20ms
request
request
r e q u e s t
request
t h e   m s g
I   h a v e  
```

### Simulation Results

We evaluate the performance of our buffer management scheme using simulation, focusing on the behavior in a local region. The round trip time between any two members in the region is 10ms, and the idle threshold \( T \) is set to 40ms (4 times the maximum round trip time). We assume that retransmission requests and repairs are not lost.

**Effectiveness of Feedback-Based Buffering**

We first evaluate the effectiveness of our feedback-based short-term buffering scheme in a region with 100 members. We simulate the outcome of an IP multicast by randomly selecting a subset of members to hold a message initially. All other members simultaneously detect the loss and start sending local requests. We measure how long these initial members buffer the message, as shown in Figure 5.

**Figure 5.** Effectiveness of feedback-based buffering.

```
)
s
m
(
e
m
i
t
g
n
i
r
e
f
f
u
b
e
g
a
r
e
v
a
110
100
90
80
70
60
50
40
30
20
1
2
32
#members holding a message initially
16
4
8
64
```

The figure indicates that the amount of buffering time decreases as the initial IP multicast reaches more members.

**Comparison of Received and Buffered Members**

In Figure 6, we compare the number of members who have received the message with those who buffer the message as error recovery proceeds. When only a small percentage of members have received the message, almost all of them buffer the message. The number of short-term bufferers declines rapidly when a majority of members (96% in this case) have received the message.

**Figure 6.** Comparison between the number of members who have received a message and those who buffer the message as error recovery proceeds.

```
100
#received
#buffered
s
r
e
b
m
e
m
#
90
80
70
60
50
40
30
20
10
0
0
20
40
60
time (ms)
80
100
120
140
```

**Search Time and Number of Bufferers**

Next, we investigate the penalty in error recovery latency due to the need to search for a bufferer. We assume a remote request arrives at a randomly chosen member in a region with 100 members. The simulation is repeated 100 times with different random seeds, and the average is taken. Figure 7 shows that the search time decreases as the number of bufferers increases.

**Figure 7.** Search time decreases as the number of bufferers increases.

```
)
s
m
(
e
m
i
t
h
c
r
a
e
s
50
45
40
35
30
25
20
15
1
2
3
4
5
6
#bufferers
7
8
9
10
```

With 10 bufferers, the average search time is 20ms (twice the round trip time). In a wide area network, the latency between two regions is usually much higher than the latency within a region, making the search time a small fraction of the total recovery latency.

**Search Time and Region Size**

Figure 8 shows how the search time changes as the size of the region increases from 100 members to 1000 members, with the number of bufferers fixed at 10.

**Figure 8.** Search time as the size of the region increases.

```
)
s
m
(
e
m
i
t
h
c
r
a
e
s
50
45
40
35
30
25
20
15
100
200
300
400
500
600
region size
700
800
900 1000
```

The figure indicates that the degree of increase in search time is relatively small as the region size increases.