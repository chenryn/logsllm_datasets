## Nunjucks简介：
Nunjucks 是一个功能丰富、强大的 JavaScript 专用模板引擎。Nunjucks 提供丰富的语言特性和块继承、自动转移、宏和异步控制等等。
重点要关注的是，Nunjucks 模板引擎的代码在沙箱环境中运行，任何全局对象都从环境中剥离出来，以限制可用于跳出沙箱并执行任意代码。因此我们测试
`{{root}}` 或 `{{global}}` 时并没有任何反应，所以说明代码在沙箱环境中运行，而root和global命令并没有跳出沙箱进行RCE。
## Nunjucks基础：
### nunjucks模板注释：
由于nunjucks 模板, 直接以写html 的方式写的模板文件, 因此他的注释可以直接使用html 的注释即可.
    #1. 可以编译到html文件中的注释, 直接使用html注释写法
    #2. nunjucks自己的注释, 只是写模板时的注释, 最后不会编译到html文件中
        {# 我是nunjucks 自己的注释 #}
### nunjucks 插值语法：
nunjucks 的插值语法和我们平常写 VUE 的语法一样, 只需要写双大括号{{}} 即可以完成插值引用。html 文件如下.
        Document
        我是一级标题
        用户名是:{{username}}
### nunjucks 的判断语句：
nunjucks 模板中, 同样可以写判断语句来完成一些判断的基本操作, 只不过判断语句的写法要写在大括号中间的两个百分号里.{% 这里可以写判断语句 %}
, 判断语句的结束时, 一定要写 判断结束语句标识. 即 {% endif %}
具体代码演示如下:
        Document
        {% if num > 3%}
        num的值大于 3
        {% elseif num num的值小于 3
        {% else %}
        num的值等于三
        {% endif %}  
### nunjucks 的循环语句：
for in 循环  
nunjucks 模板引擎中, 同样存在循环语法用来做一些简单的循环, 但是同样注意要给一个结束循环的标志. {% endfor %}
具体代码演示如下:
        Document
        我是一级标题
            {% for item in usersArr%}
                姓名是: {{item.name}}
                年龄是: {{item.age}}
            {% endfor %}  
### nunjucks内置的过滤器：
nunjucks 模板引擎中, 存在很多内置过滤器,用来完成我们对数据的一些过滤,筛选和加工的相关操作.
过滤器的写法是需要在 要过滤的数据后通过 管道符号来把过滤器分割开. 并且过滤器还以连续操作, 即在过滤器 1 的后面再写过滤器, 具体代码演示如下:
        Document
        我是一级标题
        {{str | replace("world","你好") | capitalize}}
## 题目描述：
有幸做到了whoami师傅出的web题目，是关于Nunjucks模板的SSTI，我们先来描述一下题目环境：
进入是一个登录框：
随便输入一个用户名和密码即可成功登录：
说明这个题目不是sql注入，题目获取登录的用户名之后便在/user/home中重新输出，所以我们尝试进行模板注入。  
首先尝试`{{7*7}}`，发现它成功执行49，于是在确定是什么类型的模板引擎，我们尝试{{}}进行报错，发现是Nunjucks引擎
## 全局函数：
我们如果想进行沙箱逃逸进行代码执行，我们最重要的就是使用沙箱内有的函数进行逃逸，经查阅 Nunjucks 的官方文档可知，Nunjucks
模板引擎中有定义了三个全局函数：range、cycler 和 joiner：全局函数有一些内置的全局函数涵盖了一些常见情况。
### range([start], stop, [step])：
如果您需要迭代一组固定的数字，`range`为您生成一组。数字从`start`（默认值 0）开始并递增`step` （默认值
1）直到达到`stop`，不包括它。