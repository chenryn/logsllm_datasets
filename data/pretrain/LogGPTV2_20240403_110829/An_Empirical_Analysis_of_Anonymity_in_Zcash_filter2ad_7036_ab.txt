258,472
177,009
140,796
10,891
6934
Percentage
73.5
11.5
7.9
6.3
0.5
0.3
Table 1: The total number of each transaction type.
lar individuals, this category includes charities and other
organizations that may choose to accept donations in
Zcash. A notable user is the Shadow Brokers, a hacker
group who have published several leaks containing hack-
ing tools from the NSA and accept payment in Zcash. We
explore their usage of Zcash in Section 8.
4 General Blockchain Statistics
We used the zcashd client
to download the Zcash
blockchain, and loaded a database representation of it
into Apache Spark. We then performed our analy-
sis using a custom set of Python scripts equipped with
PySpark. We last parsed the block chain on January 21
2018, at which point 258,472 blocks had been mined.
Overall, 3,106,643 ZEC had been generated since the
genesis block, out of which 2,485,461 ZEC went to the
miners and the rest (621,182 ZEC) went to the founders.
4.1 Transactions
Across all blocks, there were 2,242,847 transactions. A
complete breakdown of the transaction types is in Ta-
ble 1, and graphs depicting the growth of each transac-
tion type over time are in Figures 2 and 3.2 The vast ma-
jority of transactions are public (i.e., either transparent
or a coin generation). Of the transactions that do inter-
act with the pool (335,630, or 14.96%, in total), only a
very small percentage are private transactions; i.e., trans-
actions within the pool. Looking at the types of trans-
actions over time in Figure 2, we can see that the num-
ber of coingen, shielded, and deshielded transactions all
grow in an approximately linear fashion. As we explore
in Section 6.2, this correlation is due largely to the habits
of the miners. Looking at both this ﬁgure and Figure 3,
we can see that while the number of transactions interact-
ing with the pool has grown in a relatively linear fashion,
the value they carry has over time become a very small
percentage of all blocks, as more mainstream (and thus
transparent) usage of Zcash has increased.
2We use the term ‘mixed’ to mean transactions that have both a vIn
and a vOut, and a vJoinSplit.
Figure 2: The total number of each of the different types of
transactions over time.
Figure 3: The fraction of the value in each block represent-
ing each different type of transaction over time, averaged daily.
Here, ‘public’ captures both transparent transactions and the
visible components of mixed transactions.
4.2 Addresses
Across all transactions, there have been 1,740,378 dis-
tinct t-addresses used. Of these, 8,727 have ever acted as
inputs in a t-to-z transaction and 330,780 have ever acted
as outputs in a z-to-t transaction. As we explore in Sec-
tion 6.2, much of this asymmetry is due to the behavior of
mining pools, which use a small number of addresses to
collect the block reward, but a large number of addresses
(representing all the individual miners) to pay out of the
pool. Given the nature of the shielded pool, it is not pos-
sible to know the total number of z-addresses used.
Figure 4 shows the total value in the pool over time.
Although the overall value is increasing over time, there
are certain shielding and de-shielding patterns that create
spikes. As we explore in Section 6, these spikes are due
largely to the habits of the miners and founders. At the
time of writing, there are 112,235 ZEC in the pool, or
3.6% of the total monetary supply.
If we rank addresses by their wealth, we ﬁrst observe
that only 25% of all t-addresses have a non-zero bal-
466    27th USENIX Security Symposium
USENIX Association
Oct-2016Jan-2017Apr-2017Jul-2017Oct-2017Jan-2018Date20406080100120140160180Total number (In tens of thousands)TransparentCoingenDeshieldedShieldedMixedPrivateOct-2016Jan-2017Apr-2017Jul-2017Oct-2017Jan-2018Date102030405060708090100PercentageDeshieldedShieldedPublicCoingenedge in the graph between addresses that had been in-
put to the same transaction. The connected components
of the graph then formed the clusters, which represent
distinct entities controlling potentially many addresses.
The result was a set of 560,319 clusters, of which 97,539
contained more than a single address.
As in Bitcoin, using just this one heuristic is already
quite effective but does not capture the common usage of
change addresses, in which a transaction sends coins to
the actual recipient but then also sends any coins left over
in the input back to the sender. Meiklejohn et al. [27] use
in their analysis a heuristic based on this behavior, but
warn that it is somewhat fragile.
Indeed, their heuris-
tic seems largely dependent on the speciﬁc behavior of
several large Bitcoin services, so we chose not to imple-
ment it in its full form. Nevertheless, we did use a related
Zcash-speciﬁc heuristic in our case study of the Shadow
Brokers in Section 8.
Heuristic 2. If one (or more) address is an input t-
address in a vJoinSplit transaction and a second address
is an output t-address in the same vJoinSplit transaction,
then if the size of zOut is 1 (i.e., this is the only trans-
parent output address), the second address belongs to the
same user who controls the input addresses.
To justify this heuristic, we observe that users may
not want to deposit all of the coins in their address
when putting coins into the pool, in which case they
will have to make change. The only risk of a false pos-
itive is if users are instead sending money to two sep-
arate individuals, one using a z-address and one using
a t-address. One notable exception to this rule is users
of the zcash4win wallet. Here, the address of the wal-
let operator is an output t-address if the user decides to
pay the developer fee, so would produce exactly this type
of transaction for users putting money into the shielded
pool. This address is identiﬁable, however, so these types
of transactions can be omitted from our analysis. Never-
theless, due to concerns about the safety of this heuristic
(i.e., its ability to avoid false positives), we chose not to
incorporate it into our general analysis below.
5.2 Tagging addresses
Having now obtained a set of clusters, we next sought to
assign names to them. To accomplish this, we performed
a scaled-down version of the techniques used by Meik-
lejohn et al. [27]. In particular, given that Zcash is still
relatively new, there are not many different types of ser-
vices that accept Zcash. We thus restricted ourselves to
interacting with exchanges.
We ﬁrst identiﬁed the top ten Zcash exchanges accord-
ing to volume traded [1]. We then created an account
with each exchange and deposited a small quantity of
Figure 4: The total value in the shielded pool over time.
ance. Of these, the top 1% hold 78% of all ZEC. The
address with the highest balance had 118,257.75 ZEC,
which means the richest address has a higher balance
than the entire shielded pool.
5 T-Address Clustering
As discussed in Section 4, a large proportion of the activ-
ity on Zcash does not use the shielded pool. This means
it is essentially identical to Bitcoin, and thus can be de-
anonymized using the same techniques discussed for Bit-
coin in Section 2.
5.1 Clustering addresses
To identify the usage of transparent addresses, we be-
gin by recalling the “multi-input” heuristic for clustering
Bitcoin addresses.
In this heuristic, addresses that are
used as inputs to the same transaction are assigned to the
same cluster. In Bitcoin, this heuristic can be applied to
all transactions, as they are all transparent. In Zcash, we
perform this clustering as long as there are multiple input
t-addresses.
Heuristic 1. If two or more t-addresses are inputs in the
same transaction (whether that transaction is transparent,
shielded, or mixed), then they are controlled by the same
entity.
In terms of false positives, we believe that these are
at least as unlikely for Zcash as they are for Bitcoin, as
Zcash is a direct fork of Bitcoin and the standard client
has the same behavior. In fact, we are not aware of any
input-mixing techniques like CoinJoin [24] for Zcash, so
could argue that the risk of false positives is even lower
than it is for Bitcoin. As this heuristic has already been
used extensively in Bitcoin, we thus believe it to be real-
istic for use in Zcash.
We implemented this heuristic by deﬁning each t-
address as a node in a graph, and adding an (undirected)
USENIX Association
27th USENIX Security Symposium    467
Oct-2016Jan-2017Apr-2017Jul-2017Oct-2017Jan-2018Date0246810121416Total value in the pool (In tens of thousands)Service
Binance
Bitﬁnex
Bithumb
Bittrex
Bit-z
Exmo
HitBTC
Huobi
Kraken
Poloniex
ShapeShift
zcash4win
Cluster
# deposits
# withdrawals
7
3
14
1
30
4
18
26
12
0
2
139
1
4
2
1
2
2
1
2
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
2
Table 2: The services we interacted with, the identiﬁer of the
cluster they were associated with after running Heuristic 1, and
the number of deposits and withdrawals we did with them. The
ﬁrst ten are exchanges, ShapeShift is an inter-cryptocurrency
exchange, and zcash4win is a Windows-based Zcash client.
ZEC into it, tagging as we did the output t-addresses in
the resulting transaction as belonging to the exchange.
We then withdrew this amount to our own wallet, and
again tagged the t-addresses (this time on the sender side)
as belonging to the exchange. We occasionally did sev-
eral deposit transactions if it seemed likely that doing so
would tag more addresses. Finally, we also interacted
with ShapeShift, which as mentioned in Section 3.2 al-
lows users to move amongst cryptocurrencies without the
need to create an account. Here we did a single “shift”
into Zcash and a single shift out. A summary of our in-
teractions with all the different exchanges is in Table 2.
Finally, we collected the publicized addresses of the
founders [8], as well as addresses from known mining
pools. For the latter we started by scraping the tags of
these addresses from the Zchain explorer [10]. We then
validated them against the blocks advertised on some of
the websites of the mining pools themselves (which we
also scraped) to ensure that they were the correct tags;
i.e., if the recipient of the coingen transaction in a given
block was tagged as belonging to a given mining pool,
then we checked to see that the block had been advertised
on the website of that mining pool. We then augmented
these sets of addresses with the addresses tagged as be-
longing to founders and miners according to the heuris-
tics developed in Section 6. We present these heuris-
tics in signiﬁcantly more detail there, but they resulted
in us tagging 123 founder addresses and 110,918 miner
addresses (belonging to a variety of different pools).
5.3 Results
As mentioned in Section 5.1, running Heuristic 1 re-
sulted in 560,319 clusters, of which 97,539 contained
more than a single address. We assigned each cluster
a unique identiﬁer, ordered by the number of addresses
in the cluster, so that the biggest cluster had identiﬁer 0.
5.3.1 Exchanges and wallets
As can be seen in Table 2, many of the exchanges are as-
sociated with some of the biggest clusters, with four out
of the top ﬁve clusters belonging to popular exchanges.
In general, we found that the top ﬁve clusters accounted
for 11.21% of all transactions. Identifying exchanges is
important, as it makes it possible to discover where indi-
vidual users may have purchased their ZEC. Given exist-
ing and emerging regulations, they are also the one type
of participant in the Zcash ecosystem that might know
the real-world identity of users.
In many of the exchange clusters, we also identiﬁed
large fractions of addresses that had been tagged as min-
ers. This implies that individual miners use the addresses
of their exchange accounts to receive their mining re-
ward, which might be expected if their goal is to cash
out directly. We found some, but far fewer, founder ad-
dresses at some of the exchanges as well.
Our clustering also reveals that ShapeShift (Cluster 2)
is fairly heavily used: it had received over 1.1M ZEC in
total and sent roughly the same. Unlike the exchanges,
its cluster contained a relatively small number of miner
addresses (54), which ﬁts with its usage as a way to shift
money, rather than hold it in a wallet.
5.3.2 Mining pools and founders
Although mining pools and founders account for a large
proportion of the activity in Zcash (as we explore in Sec-
tion 6), many re-use the same small set of addresses
frequently, so do not belong to large clusters. For ex-
ample, Flypool had three single-address clusters while
Coinotron, coinmine.pl, Slushpool and Nanopool each
had two single-address clusters. (A list of mining pools
can be found in Table 4 in Section 6.2). Of the coins that
we saw sent from clusters associated with mining pools,
99.8% of it went into the shielded pool, which further
validates both our clustering and tagging techniques.
5.3.3 Philanthropists
Via manual inspection, we identiﬁed three large or-
ganizations that accept Zcash donations:
the Internet
Archive, torservers.net, and Wikileaks. Of these,
torservers.net accepts payment only via a z-address,
so we cannot identify their transactions (Wikileaks ac-
cepts payment via a z-address too, but also via a t-
address). Of the 31 donations to the Internet Archive
that we were able to identify, which totaled 17.3 ZEC, 9
of them were made anonymously (i.e., as z-to-t transac-
tions). On the other hand, all of the 20 donations to Wik-
468    27th USENIX Security Symposium
USENIX Association
we had not tagged as belonging to any named user.
After running the heuristic described in Section 6.1,
however, we tagged all of these addresses as belong-
ing to founders. In fact, this was the very ﬁrst with-
drawal that we identiﬁed as being associated with
founders.
“Secret Santa” The second withdrawal spike took
place on December 25 2017, at block height 242,642.
In it, 10,000 ZEC was distributed among 10 different