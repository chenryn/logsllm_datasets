    :::
-   ::: para
    可在一台机器中运行多个操作系统
    :::
:::
::: para
目前有两个物理硬盘分区布局标准：主引导记录（``{=html}MBR``{=html}）和
GUID
分区表（``{=html}GPT``{=html}）。``{=html}MBR``{=html}
是基于 BIOS
的计算机使用的较老的磁盘分区方法。``{=html}GPT``{=html}
是较新的分区布局，它是统一可扩展固件界面（``{=html}UEFI``{=html}）的一部分。本小节主要论述*主引导记录*（``{=html}MBR``{=html}）磁盘分区方案。有关*GUID
分区表*（``{=html}GPT``{=html}）分区布局详情请查看
[第 A.1.4 节 "GUID
分区表（GPT）"](#ch-partitions-x86.html#sect-disk-partitioning-guid-partition-table){.xref}。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
虽然本章图表中所显示的分区表和实际磁盘驱动器是分开的，这并不完全正确。事实上，分区表是保存在磁盘的最开始，在任何文件系统或用户数据之前。但是为了清楚起见，我们在图表中将其分开。
:::
:::
:::
::: figure
[⁠]{#ch-partitions-x86.html#fig-partitions-unused-partitione-x86}
::: figure-contents
::: mediaobject
![带有分区表的磁盘驱动器](images/partitions/unused-partitioned-drive.png)
:::
:::
**图 A.5. 带有分区表的磁盘驱动器**
:::
[]{#ch-partitions-x86.html#idm139817117289856
.indexterm}[]{#ch-partitions-x86.html#idm139817109067120 .indexterm}
::: para
如 [图 A.5
"带有分区表的磁盘驱动器"](#ch-partitions-x86.html#fig-partitions-unused-partitione-x86){.xref}
所示，分区表被分成 4 个部分或者说是 4
个*主*分区。主分区是硬盘中只包含一个逻辑分区（或部分）的分区。每个分区都存放着定义单一分区的必要的信息，这意味着分区表最多可以定义
4 个分区。
:::
::: para
每个分区表条目包含几个分区的重要特性：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    在磁盘上分区开始和结束的地点（起止点）
    :::
-   ::: para
    分区是否\"活跃\"
    :::
-   ::: para
    分区的类型
    :::
:::
::: para
让我们仔细看看这些特性。起点和终点实际上定义了分区的大小和在磁盘中的位置。\"active\"
标签用于某些操作系统的引导装载程序。换句话说就是引导该分区中标记为
\"active\" 操作系统。
:::
::: para
分区类型可能有些混乱。这个类型是一个识别分区预先用法的数字。如果这个说明听起来有点模糊，那是因为分区类型的含义有点模糊。有些操作系统使用分区类型表示具体文件系统类型、为分区添加标签使其与特定操作系统关联、表示该分区中包含引导操作系统或者以上三者之和。
:::
::: para
现在，您可能想知道怎么处理其他复杂的情况。请参考 [图 A.6
"采用单一分区的磁盘驱动器"](#ch-partitions-x86.html#fig-partitions-dos-single-part-x86){.xref}
中的示例。
:::
::: figure
[⁠]{#ch-partitions-x86.html#fig-partitions-dos-single-part-x86}
::: figure-contents
::: mediaobject
![采用单一分区的磁盘驱动器](images/partitions/dos-single-partition.png)
:::
:::
**图 A.6. 采用单一分区的磁盘驱动器**
:::
::: para
在很多情况下，整个磁盘中只有一种分区，实际上是复制以前分区的方法。分区表只使用一个条目，它是指向分区的起点。
:::
::: para
我们已经将这个分区记号为 \"DOS\" 类型。虽然这只是 [表 A.1
"分区类型"](#ch-partitions-x86.html#tb-partitions-types-x86){.xref}
中列出的可能类型里的其中一种，但对于这里的讨论来说，这已经足够了。
:::
::: para
[表 A.1
"分区类型"](#ch-partitions-x86.html#tb-partitions-types-x86){.xref}
中包括了一些常用的（和罕见的）分区类型，以及它们的十六进制数值。
:::
[]{#ch-partitions-x86.html#idm139817191030096
.indexterm}[]{#ch-partitions-x86.html#idm139817180137664 .indexterm}
::: table
[⁠]{#ch-partitions-x86.html#tb-partitions-types-x86}
**表 A.1. 分区类型**
::: table-contents
  -------------------------------------------------------------------------
  分区类型                值           分区类型                值
  ----------------------- ------------ ----------------------- ------------
  Empty                   00           Novell Netware 386      65
  DOS 12-bit FAT          01           PIC/IX                  75
  XENIX root              02           Old MINIX               80
  XENIX usr               03           Linux/MINUX             81
  DOS 16-bit \=32        06           Linux extended          85
  OS/2 HPFS               07           Amoeba                  93
  AIX                     08           Amoeba BBT              94
  AIX bootable            09           BSD/386                 a5
  OS/2 Boot Manager       0a           OpenBSD                 a6
  Win95 FAT32             0b           NEXTSTEP                a7
  Win95 FAT32 (LBA)       0c           BSDI fs                 b7
  Win95 FAT16 (LBA)       0e           BSDI swap               b8
  Win95 Extended (LBA)    0f           Syrinx                  c7
  Venix 80286             40           CP/M                    db
  Novell                  51           DOS access              e1
  PReP 引导               41           DOS R/O                 e3
  GNU HURD                63           DOS secondary           f2
  Novell Netware 286      64           BBT                     ff
  -------------------------------------------------------------------------
:::
:::
:::
::: section
::: titlepage
## [⁠]{#ch-partitions-x86.html#sect-disk-partitions-extended}A.1.3. 分区中的分区 --- 扩展分区概述 {.title}
:::
[]{#ch-partitions-x86.html#idm139817195857120
.indexterm}[]{#ch-partitions-x86.html#idm139817185174320
.indexterm}[]{#ch-partitions-x86.html#idm139817121773088
.indexterm}[]{#ch-partitions-x86.html#idm139817136995392 .indexterm}
::: para
当然久而久之四个分区已经不够了。磁盘驱动器一直在增长，人们越来越有机会配置四个相当大小的分区后仍有剩余磁盘空间。这就需要有一些创建更多分区的方法。
:::
::: para
进入扩展分区。您可能已经注意到了，[表 A.1
"分区类型"](#ch-partitions-x86.html#tb-partitions-types-x86){.xref}
里有一个 \"Extended\" 分区类型。扩展分区中处于中心地位的就是这个类型。
:::
::: para
当分区被创建且类型被设置为 \"Extended\"
时，扩展分区表就会被创建。实际上，扩展分区就象是其自身的磁盘驱动器 ---
它有指向完全包含在扩展分区里的一个或多个分区（和 4
个*主分区*相反，这被称作*逻辑分区*）的分区表。[图 A.7
"带有扩展分区的磁盘驱动器"](#ch-partitions-x86.html#fig-partitions-extended-part-x86){.xref}
展示了有一个主分区和一个包含两个逻辑分区的扩展分区的磁盘（还有一些未被分区的剩余空间）。
:::
::: figure
[⁠]{#ch-partitions-x86.html#fig-partitions-extended-part-x86}
::: figure-contents
::: mediaobject
![带有扩展分区的磁盘驱动器](images/partitions/extended-partitions.png)
:::
:::
**图 A.7. 带有扩展分区的磁盘驱动器**
:::
::: para
如此图所示，主分区和逻辑分区间是有区别的 ---
只有四个主分区，但可有无限个逻辑分区存在。但是因为 Linux
中访问分区的方法，应避免在单一磁盘驱动器中定义 12 个以上的逻辑分区。
:::
::: para
现在已讨论了常规分区，让我们复习以下如何使用这个知识安装 Red Hat
Enterprise Linux。
:::
:::
::: section
::: titlepage
## [⁠]{#ch-partitions-x86.html#sect-disk-partitioning-guid-partition-table}A.1.4. GUID 分区表（GPT） {.title}
:::
::: para
GUID
分区表（``{=html}GPT``{=html}）是一个基于全局唯一识别符（``{=html}GUID``{=html}）的较新的分区方案。开发
``{=html}GPT``{=html} 是为了解决
``{=html}MBR``{=html}
分区表的局限，特别是磁盘的最大可使用存储空间限制。``{=html}MBR``{=html}
无法处理超过 2.2TB 的存储空间，与之不同的是
``{=html}GPT``{=html}
能够处理超过此硬盘大小的硬盘，其最大可处理的磁盘大小为
2.2ZB。另外，默认情况下
``{=html}GPT``{=html} 最多支持生成
128 个主分区。如果为分区表分配更多的空间，这个数字还能增大。
:::
::: para
``{=html}GPT``{=html}
磁盘使用逻辑块寻址（LBA）及如下分区布局：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    要保留与 MBR 磁盘的向后兼容性，则需要将
    ``{=html}GPT``{=html}
    的第一个扇区（``{=html}LBA``{=html}
    0）留给 ``{=html}MBR``{=html}
    数据，我们称之为 ["[保护性 MBR（protective
    MBR）]{.quote}"]{.quote}。
    :::
-   ::: para
    *主 ``{=html}GPT``{=html}
    标头*从该设备的第二个逻辑块（``{=html}LBA``{=html}
    1）开始。该标头包含磁盘 GUID、主分区表位置、辅 GPT
    标头位置以及其自身和主分区表的 CRC32
    checksum。它还指定该分区表中的分区条目数。
    :::
-   ::: para
    默认*主 ``{=html}GPT``{=html}
    表*包括 128 个分区条目，每个条目为 128 字节，其分区类型 GUID
    以及唯一 GUID。
    :::
-   ::: para
    *副``{=html} GPT``{=html}
    表*与主``{=html}GPT``{=html}表完全一致，主要是作为备份表使用，在主分区表崩溃时用来恢复。
    :::
-   ::: para
    *副 ``{=html}GPT``{=html}
    标头*从位于该磁盘的最后一个逻辑块中，可用来在主标头崩溃时恢复
    ``{=html}GPT``{=html}
    信息。该标头包含磁盘 GUID、主分区表位置、辅分区表以及主
    ``{=html}GPT``{=html}
    标头位置、以及其自身和副分区表的 CRC32
    checksum、以及可能的分区条目数。
    :::
:::
::: {.important xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**重要**
:::
::: admonition
::: para
必须有 BIOS引导分区方可成功将引导装载程序安装到包含 GPT（GUID
分区表）的磁盘中。其中包括使用 [**Anaconda**]{.application}
初始化的磁盘。如果该磁盘已包含 BIOS 引导分区，则该磁盘将会重复使用。
:::
:::
:::
:::
::: section
::: titlepage
## [⁠]{#ch-partitions-x86.html#s2-partitions-make-room-x86}A.1.5. 为 Red Hat Enterprise Linux 提供空间 {.title}
:::
[]{#ch-partitions-x86.html#idm139817206549488 .indexterm}
::: para
下面的列表列出了一些在尝试重新对硬盘分区时可能遇到的情景：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    有可用的未分区的闲置空间
    :::
-   ::: para
    有可用的未使用过的分区
    :::
-   ::: para
    被活跃使用的分区内有可用的闲置空间
    :::
:::
::: para
让我们按顺序看一下每一种情况。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
请记住，以下图解是为清晰起见而经简化的，并不反映实际安装 Red Hat
Enterprise Linux 时所会遇到的实际分区布局。
:::
:::
:::
::: section
::: titlepage
### [⁠]{#ch-partitions-x86.html#s3-partitions-free-space-x86}A.1.5.1. 使用未分区的剩余空间 {.title}
:::
[]{#ch-partitions-x86.html#idm139817208560640 .indexterm}
::: para
在这种情形下，已经定义的分区并没有占满整个磁盘，它留出了不属于任何分区的未配置的空间。[图 A.8
"带有未分区的闲置空间的磁盘驱动器"](#ch-partitions-x86.html#fig-partitions-unpart-space-x86){.xref}
演示了这种情况。
:::
::: figure
[⁠]{#ch-partitions-x86.html#fig-partitions-unpart-space-x86}
::: figure-contents
::: mediaobject
![带有未分区的闲置空间的磁盘驱动器](images/partitions/unpart-space.png){width="444"}
:::
:::
**图 A.8. 带有未分区的闲置空间的磁盘驱动器**
:::
::: para
在 [图 A.8
"带有未分区的闲置空间的磁盘驱动器"](#ch-partitions-x86.html#fig-partitions-unpart-space-x86){.xref}
中，*1* 代表带有未被分配的空间的未定义分区，*2*
代表带有已被分配的空间的已定义分区。
:::
::: para
如果考虑这一点，未使用硬盘也会被规入此类。唯一的区别是[*所有*]{.emphasis}空间都不是任何定义的分区的一部分。
:::
::: para
在任何情况下都可以在未被使用的空间中创建所需的分区。遗憾的是，这种情况虽然很简单，但却不经常出现（除非刚刚为
Red Hat Enterprise Linux
购买了新磁盘）。大部分预安装的操作系统都被配置为占用磁盘中的全部可用空间（请参考
[第 A.1.5.3 节
"使用激活分区中的剩余空间"](#ch-partitions-x86.html#s3-partitions-active-part-x86){.xref}）。
:::
::: para
下一步，我们将讨论更通常的情况。
:::
:::
::: section
::: titlepage
### [⁠]{#ch-partitions-x86.html#s3-partitions-unused-part-x86}A.1.5.2. 使用未使用分区中的空间 {.title}