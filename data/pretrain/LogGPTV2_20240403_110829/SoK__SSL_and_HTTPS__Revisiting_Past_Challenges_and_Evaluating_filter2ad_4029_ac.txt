Browser Security Warnings: Browsers display warnings
if an HTTPS connection fails for certain reasons. One study
found that 30 of 57 users clicked through and logged into
a simulated banking website when it displayed a certiﬁcate
warning page [90]. Another study asked users about three
common warnings: expired certiﬁcates, certiﬁcate chains not
terminating in a trust anchor, and certiﬁcates not identically
matching the visited site’s domain. Of 409 users, only
36% understood the expired certiﬁcate warning, 28% the
unknown CA warning, and 40% the mismatched domain
18A. Langley, “Revocation doesn’t work,” ImperialViolet (blog), 18 Mar
20Web Security Context: User Interface Guidelines. W3C Recommenda-
2011.
19This example is meant to illustrate the principle rather than a vulner-
21A. Patrick. “Commentary on Research on New Security Indicators,”
ability with Facebook. Few users type in https://fb.com.
tion, 12 August 2010.
(online), 6 Mar 2007.
516
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:51:35 UTC from IEEE Xplore.  Restrictions apply. 
warning [100]. Of the users who did not understand, just
over a third claimed they would ignore each.22 Of the
users who did understand, 63% would ignore the expired
certiﬁcate warning, 33% the unknown CA warning, and
17% the mismatched domain. The study authors reworded
the warnings and saw improvements in understandability
but felt users still opened themselves to MITM attacks
in their actions. This study was replicated; users were
found to ignore warnings more than they self-report, and
no measurable difference was observed between ignoring
rewritten warnings and the browser defaults [95].
Mixed Content: A prevalent warning not considered
in the above studies is mixed content—the ability to weave
dynamic content from multiple sources into a single website.
When a site is accessed over HTTPS, browsers will issue
a mixed scripting warning if the site embeds any scripting
resources (e.g., Javascript, CSS, or even SWF [55]) that are
not accessed over HTTPS. This is important because the
script runs with the HTTPS site’s privileges. Some browsers
(e.g., Chrome) follow the lead of the Gazelle research
browser [106] and actively block insecurely loaded scripts.
Non-scripting resources (e.g., static images) or resources
loaded into an iframe will typically generate a less severe
mixed content warning (e.g., an https:// cue but no lock
or a lock with a caution sign; clicking on the cue displays
the warning). Finally, if an EV certiﬁed site embeds DV
certiﬁed scripting, the EV cues are still displayed, which
can be exploited (see Section IV-A above) [112], [96].
Mobile Browsers: With the advent of smartphones and
tablets, users also access HTTPS sites on mobile browsers.
Mobile browsers conform less to HTTPS user interface
guidelines than desktop browsers, with less support for
displaying certiﬁcate/connection details, distinguishing EV
certiﬁcates, or warning users about mixed content [19].
HTTPS Form Submit: A relatively common practice
is including a login box on an HTTP page, but arranging
any login information to be submitted over HTTPS.23 This
allows the overhead of obtaining the certiﬁcate and estab-
lishing a TLS connection to be avoided for users who visit
the page without logging in. Browsers include a general
warning (at least the ﬁrst time) when any information is
not submitted over HTTPS but since many submissions do
not require security (e.g., comments, posts, feedback, etc.),
it is sensible for users to disable this warning (an option
provided prominently). Beyond this, a user is given no cue
that sensitive information will be transmitted over HTTP or
HTTPS, let alone to which hostname. Of the Alexa top sites
with login pages, 19 of 125 offered such a post-to-HTTPS
login page while 56 of 125 only used HTTP [97].
22If they were hypothetically warned while at Craigslist or Amazon.
23E. Lawrence, “TLS and SSL in the real world,” IE Blog, 21 Apr 2005.
Security Issues (Indication and Interpretation of Trust)
Stripping TLS: Given users’ inattentiveness to HTTPS
security indicators and warnings, a MITM adversary may
thwart HTTPS in a technically detectable manner but one
unlikely to be noticed. For users being redirected to an
HTTPS site, arguably the most astute attack is to simply
relay pages back to the user over HTTP—an attack now
called SSL stripping after the sslstrip tool [71], although
it had been noted earlier [79]. On login pages served over
HTTP, the result of this attack is indistinguishable without
examining the page’s source code. On login pages typically
served over HTTPS, the user is relied on to realize the
difference or to generally refuse to log into pages served
over HTTP (which precludes using post-to-HTTPS sites).
Spooﬁng Browser Chrome: An important aspect of
security indicators is that they are placed in the browser
chrome, so the displayed cue is under the browser’s control
and not inﬂuenced by the content of the webpage being
displayed (this has been called a ‘trusted path’ [109]).
However as websites have been granted more power through
client-side scripting and control over how a browser window
is displayed, a variety of ‘web spooﬁng’ attacks [44] enable
the website to interfere with how a user perceives the
browser’s security cues. For example, a well-positioned pop-
up window without any chrome may overlap security cues
on the underlying page [69] or simulate a browser window
with complete browser chrome within the content of the
page [14], [109], [57]. In one study, a site implementing
the latter attack was classiﬁed as legitimate by 63% of
users [57]. Today’s desktop browsers typically force pop-up
windows into new tabs, maintaining a constant chrome. In
many mobile browsers, websites can position the address
bar so that
is hidden, enabling spooﬁng of security
indicators [43]. A solution suggested in the literature (but not
commercially adopted) is a dynamically changing browser
chrome [109], [34].
it
Users may also falsely attribute an HTTPS connection to
a lock displayed somewhere other than the chrome, e.g., on
the page content [35] or in the site’s favicon [72]. Of the
Alexa top sites with login pages, 29 of 125 displayed a lock
in the site content (including 70% of banks) or favicon [97].
Conceding a Warning: A MITM adversary may choose
to substitute in a certiﬁcate with an untrusted chain and hope
that users click-through or otherwise ignore the warning.
This was exempliﬁed in the previously mentioned attack
attributed to the Syrian Telecom Ministry.
V. SECURITY ENHANCEMENTS TO CA/B MODEL
Section IV reviewed the spectrum of issues with the CA/B
trust model. Here we evaluate a collection of the most
prominent among known proposals to enhance aspects of the
trust model, deconstructing and evaluating their core ideas.
A few of these ideas have been incorporated into one or two
browsers platforms; others can be achieved with a browser
517
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:51:35 UTC from IEEE Xplore.  Restrictions apply. 
COMPARATIVE EVALUATION OF PRIMITIVES TO IMPROVE THE CA/BROWSER MODEL. PROPERTIES (COLUMNS) ARE POSITIONED AS BENEFICIAL
WITH FULFILMENT DENOTED BY • AND PARTIAL FULFILMENT BY ◦ (FOR DETAILS, SEE SECTION V). RATINGS ARE FOR THE POTENTIAL OFFERED BY
THE GENERIC PRIMITIVE AND MAY DIFFER FROM CONCRETE INSTANTIATIONS OF PROPOSALS.
Table I
Protects ClientCredential
Intermediate CAs Visible
AfﬁrmsPOST-to-HTTPS
Trusted Entity
Responsive Revocation
DetectsLocal MIT M
Traceability
ReducesTraceability
UpdatablePins
Detects MIT M
DetectsTLS
No New
No New
Stripping
No New
Deployable withoutD NSSEC
StatusSignalled Completely
No Extra Com munications
No Server-Side Changes
User Decisions
Auth’n Tokens
No False-Rejects
InternetScalable
No New
Primitive
Security Properties Offered
Evaluation of Impact on HTTPS
B
C
Deployability
Security & Privacy
•
•
•
◦
◦
•
•
•
•
•
•
•
•
•
•
◦
◦
•
◦
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
◦
◦
•
◦
◦
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
Usability
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
◦
◦
•
◦
◦
•
◦
◦
•
•
◦
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
◦
◦
•
•
A
◦
◦
•