title:Locating Prefix Hijackers using LOCK
author:Tongqing Qiu and
Lusheng Ji and
Dan Pei and
Jia Wang and
Jun (Jim) Xu and
Hitesh Ballani
Locating Preﬁx Hijackers using LOCK
Tongqing Qiu
Georgia Tech
Lusheng Ji
Dan Pei
AT&T Labs – Research
AT&T Labs – Research
PI:EMAIL
PI:EMAIL
PI:EMAIL
Jia Wang
AT&T Labs – Research
Jun (Jim) Xu
Georgia Tech
Hitesh Ballani
Cornell University
PI:EMAIL
PI:EMAIL
PI:EMAIL
Abstract
Preﬁx hijacking is one of the top known threats on to-
day’s Internet. A number of measurement based so-
lutions have been proposed to detect preﬁx hijacking
events. In this paper we take these solutions one step fur-
ther by addressing the problem of locating the attacker in
each of the detected hijacking event. Being able to locate
the attacker is critical for conducting necessary mitiga-
tion mechanisms at the earliest possible time to limit the
impact of the attack, successfully stopping the attack and
restoring the service.
We propose a robust scheme named LOCK, for LO-
Cating the preﬁx hijacKer ASes based on distributed In-
ternet measurements. LOCK locates each attacker AS
by actively monitoring paths (either in the control-plane
or in the data-plane) to the victim preﬁx from a small
number of carefully selected monitors distributed on the
Internet. Moreover, LOCK is robust against various
countermeasures that the hijackers may employ. This is
achieved by taking advantage of two observations: that
the hijacker cannot manipulate AS path before the path
reaches the hijacker, and that the paths to victim preﬁx
“converge” around the hijacker AS. We have deployed
LOCK on a number of PlanetLab nodes and conducted
several large scale measurements and experiments to
evaluate the performance. Our results show that LOCK
is able to pinpoint the preﬁx hijacker AS with an accu-
racy up to 94.3%.
1
Introduction
The Internet consists of tens of thousands of Au-
tonomous Systems (ASes), each of which is an indepen-
dently administrated domain. Inter-AS routing informa-
tion is maintained and exchanged by the Border Gate-
way Protocol (BGP). The lack of adequate authentication
schemes in BGP leaves an opportunity for misbehaving
routers to advertise and spread fabricated AS paths for
targeted preﬁxes. Originating such a false AS path an-
nouncement is referred to as “preﬁx hijacking”. Once a
BGP router accepts such a false route and replaces a le-
gitimate route with it, the trafﬁc destined for the target
preﬁx can be redirected as the hijacker wishes. The vic-
tim preﬁx network of a successful hijacking will experi-
ence performance degradation, service outage, and secu-
rity breach. The incident of the preﬁx of YouTube being
hijacked by an AS in Pakistan for more than 2 hours [1]
is just a recent and better known reminder of the possi-
bility of real preﬁx hijacking attacks.
Recently proposed solutions for combating preﬁx hi-
jacking either monitor the state of Internet and detect on-
going hijacking events [12, 21, 22, 26, 34, 45], or attempt
to restore service for victim preﬁx networks [42]. Both
approaches are compatible with existing routing infras-
tructures and generally considered more deployable than
another family of proposals (e.g., [4, 8, 11, 13, 18, 19, 27,
32, 35–37, 44]) which aim at preﬁx hijacking prevention,
because the latter usually require changes to current rout-
ing infrastructures (e.g., router software, network opera-
tions), and some also require public key infrastructures.
However, the aforementioned detection and service
restoration solutions only solve parts of the problem and
a critical step is still missing towards a complete and au-
tomated detection-recovery system. That is how to locate
the hijackers. More importantly, the location of hijackers
is one of the key information that enables existing miti-
gation methods against preﬁx hijacking (e.g., [42]). One
may consider this step trivial.
Indeed in current prac-
tice this step is actually accomplished by human inter-
actions and manual inspections of router logs. However,
we would argue that the success of the current practice is
due to the fact that discovered attacks so far are still prim-
itive. Many of them are simply not attacks but rather the
results of router mis-conﬁgurations. As we will elabo-
rate, locating sophisticated hijackers is far from a trivial
problem and the current practice will have great difﬁcul-
ties in locating them.
In this paper, we present a scheme called LOCK to
LOCate preﬁx hijacKers. It is a light-weight and incre-
mentally deployable scheme for locating hijacker ASes.
The main idea behind LOCK are based the following
two observations:
that the hijacker cannot manipulate
AS path before the path reaches the hijacker, and that
the paths to victim preﬁx “converge” around the hijacker
AS. Our contributions are four-fold. First, to the best
of our knowledge, it is the ﬁrst work studying the at-
tacker locating problem for preﬁx hijacking, even when
countermeasures are engaged by the hijacker. Second,
our locating scheme can use either data-plane or control-
plane information, making the deployment more ﬂexible
in practice. Third, we propose an algorithm for selecting
locations where data-plane or control-plane data are col-
lected such that the hijackers can be more efﬁciently lo-
cated. Finally, we have deployed LOCK on a number of
PlanetLab nodes and conducted several large scale mea-
surements and experiments to evaluate the performance
of LOCK against three groups of hijacking scenarios:
synthetic attacks simulated using real path and topology
information collected on the Internet, reconstructed pre-
viously known attacks, and controlled attack experiments
conducted on the Internet. We show that the proposed ap-
proach can effectively locate the attacker AS with up to
94.3% accuracy.
The rest of the paper is organized as follows. Section
2 provides background information on preﬁx hijacking.
Section 3 provides an overview of the framework of our
LOCK scheme. Then we describe detailed monitoring
and locating methodologies in Section 4 and Section 5
respectively. Section 6 evaluates the performance of the
LOCK scheme. Section 7 brieﬂy surveys related works
before Section 8 concludes the paper.
2 Background
As mentioned before, IP preﬁx hijacking occurs when
a mis-conﬁgured or malicious BGP router either origi-
nates or announces an AS path for an IP preﬁx not owned
by the router’s AS. In these BGP updates the misbehav-
ing router’s AS appears very attractive as a next hop for
forwarding trafﬁc towards that IP preﬁx. ASes that re-
ceive such ill-formed BGP updates may accept and fur-
ther propagate the false route. As a result the route entry
for the IP preﬁx in these ASes may be polluted and trafﬁc
from certain part of the Internet destined for the victim
preﬁx is redirected to the attacker AS.
Such weakness of the inter-domain routing infrastruc-
ture has great danger of being exploited for malicious
purposes. For instance the aforementioned misbehaving
AS can either drop all trafﬁc addressed to the victim pre-
ﬁx that it receives and effectively perform a denial-of-
service attack against the preﬁx owner, or redirect traf-
ﬁc to an incorrect destination and use this for a phish-
ing attack [28]. It can also use this technique to spread
spams [33].
We refer to this kind of route manipulation as IP pre-
ﬁx hijack attacks and the party conducting the attack
hijacker or attacker. Correspondingly the misbehaving
router’s AS becomes the hijacker AS, and the part of the
Internet whose trafﬁc towards the victim preﬁx is redi-
rected to the hijacker AS is hijacked. So do we call the
data forwarding paths that are now altered to go through
the hijacker AS hijacked. We also refer to the victim pre-
ﬁx as the target preﬁx.
Following the convention in [45], we classify preﬁx
hijacks into the following three categories:
• Blackholing: the attacker simply drops the hijacked
packets.
• Imposture: the attacker responds to senders of the
hijacked trafﬁc, mimicking the true destination’s
(the target preﬁx’s) behavior.
• Interception:
forwards
the attacker
the hi-
jacked trafﬁc to the target preﬁx after eavesdrop-
ping/recording the information in the packets.
While the conventional view of the damage of preﬁx hi-
jacking has been focused on blackholing, the other two
types of hijacking are equally important, if not more
damaging [6]. In addition, the characteristics of different
hijack types are different, which often affect how differ-
ent types of attacks are detected. In this paper, we use
the term hijack to refer to all three kinds of preﬁx hijack
attacks unless otherwise speciﬁed.
There have been a number of approaches proposed for
detecting preﬁx hijacks. They utilize either information
in BGP updates collected from control plane [21, 22, 26,
34], or end-to-end probing information collected from
data plane [43, 45], or both [6, 12, 36]. We will not get
into the details of most of these approaches here because
LOCK is a hijacker-locating scheme, not a hijack detec-
tion scheme. The difference between these two will be
explained later in section 3.1. To locate a hijacker, the
LOCK scheme only needs to know whether a given pre-
ﬁx is hijacked. Therefore LOCK can be used together
with any detection method to further locate the hijacker
AS. Moreover, LOCK can locate the hijacker using ei-
ther data-plane or control-plane information.
3 Framework
In this section, we present an overview of key ideas of the
hijacker locating algorithm in LOCK. Similar to detect-
ing preﬁx hijacking, locating hijacker AS can be done in
either control-plane or data-plane. Either way, the goal
is, to use the AS path information to the hijacked preﬁx
observed at multiple and diverse vantage points (or mon-
itors) to ﬁgure out who the hijacker is. In control-plane
approach, the AS path information is obtained from BGP
routing tables or update messages.
In data-plane ap-
proach, the AS path is obtained via AS-level traceroute
(mapping the IP addresses in traceroute to AS numbers).
Both methods have pros and cons. Realtime data-
plane information from multiple diverse vantage points is
easier to be obtained than realtime BGP information(e.g.
the BGP updates from [3] are typically delayed for a few
hours). On the other hand, it is relatively easier for the
attacker to manipulate the data-plane AS path to coun-
termeasure the locating algorithm than the control-plane
AS path. LOCK can use either data-plane or control-
plane AS paths to locate the hijackers.
3.1 Challenges
Currently, the most commonly used hijacker-locating ap-
proach (called simple locating approach) is to look at the
origin ASes of the target preﬁx. For example, Figure 1
(a) shows the control-plane AS path information to tar-
get preﬁx p at vantage points M 1, M 2, and M 3, respec-
tively, before hijacker H launches the hijack. All three
vantage points observe the origin AS is T . In Figure 1
(b), Hijacker AS H announces a path H to target pre-
ﬁx p, which ASes A, B, M 1, and M 2 accept since the
paths via H are better than their previous ones via CDT .
In this case, the simple locating approach can easily iden-
tify the newly-appearing origin AS H as the hijacker.
However, this simple locating approach can fail even
without any countermeasures by the hijackers. For ex-
ample, in Figure 1(c), hijacker H pretends there is a link
between H and the target AS T , and announces an AS
path HT , again accepted by A,B,M 1, and M 2. The
simple locating approach does not work here since the
origin AS in all the AS paths are still T .
One might try to look beyond just origin AS and check
other ASes in the path, but the hijacker AS might counter
this such that the hijacker AS might not even appear in
any of the AS paths. For example, in Figure 1(d) H sim-
ply announces an AS path T without prepending its own
AS number H 1.
Above challenges
in control-plane locating ap-
proaches also exist in data-plane approaches. Almost
all data-plane path probing mechanisms are derived from
the well known traceroute program. In traceroute, trig-
gering messages with different initial TTL values are sent
towards the same destination. As these messages are for-
warded along the path to this destination, as soon as a
message’s TTL reduces to zero after reaching a router,
the router needs to send back an ICMP Timeout message
to notify the probing source. If the triggering messages
go through the hijacker, this happens when the trigger-
ing messages’ initial TTL values are greater than the hop
distance from the probing source to the hijacker, the hi-
jacker can do many things to interfere the path probing
as a countermeasure to the locating algorithm.
In Figure 2(a), the hijacker AS’s border router re-
sponds to traceroute honestly in blackholing (in which
for example the border router responds with a no route
ICMP message with its own IP address) and imposture
(in which for example a router in H responds “destina-
tion reached” message with its own IP address). In either
case, the router address belongs to H and maps to AS H,
and the simple locating approach can identify H as the
newly appearing origin AS hence the hijacker AS.
However,
in the interception attack shown in Fig-
ure 2(b), the hijacker further propagates the traceroute
probe packets to the target via XY ZT , thus the origin
AS is still H. Hence the simple locating approach fails
in this case.
Furthermore, the hijacker can use various countermea-
sures. For instance, the hijacker may simply drop the
triggering messages without replying to interrupt tracer-
oute probing from proceeding further. Or it may send
back ICMP Timeout messages with arbitrary source IP
addresses to trick the probing source into thinking routers
of those addresses are en route to the destination. The hi-
jacker may even respond with ICMP Timeout messages
before the triggering messages’ TTL values reach zero.
In Figure 2 (c), hijacker H manipulates the traceroute
response such that after the IP-to-AS mapping, the AS
path appears to M 1 to be ACDT , and appears to M 2 to
be BDT , neither of which contains hijacker AS H in it,
making the hijacker locating difﬁcult. We refer to above
manipulation of traceroute response as countermeasure
for data-plane locating approach, and call such hijackers
countermeasure-capable or malicious.
In summary, sophisticated hijackers that are capable of
engaging countermeasures can inject false path informa-
tion into measurements collected in both control plane
and data plane, easily evading simple hijacker-locating
mechanisms. We therefore design a more effective algo-
rithm for locating these hijackers in the next section.
3.2 Locating Hijackers
The basic idea of LOCK is based on two key observa-
tions, which apply to both data-plane and control-plane
approaches, different types of hijacks (blackholing, im-
posture, and interception), and with or without counter-
measures by the attackers.
The ﬁrst observation is that the hijacker cannot ma-
nipulate the portion of the AS path from a polluted van-
tage point to the upstream (i.e., closer to the vantage
point) neighbor AS of the hijacker AS. For example, in
T :   T a r g e t   A S       H :   H i j a c k e r   A S
A S   p a t h   a n n o u n c e m e n t
:   p o l l u t e d   A S
:   u n a f f e c t e d   A S
c o n t r o l - p l a n e   A S   p a t h
A   B   C   D   T
M 1
A
B   C   D   T
M 2
B
H
C   D   T
M 3
X
C
A     H
M 1
A
X
Y
Z
B   H
M 2
B
C   D   T
H
H
X
Y
Z
T
p
H
D
A     H   T
M 1
A