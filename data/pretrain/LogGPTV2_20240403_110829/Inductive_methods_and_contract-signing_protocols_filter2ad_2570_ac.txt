for pd in S if Oi(pd,−) ∈ S for i ∈ {res1, res2, com}.
Similar deﬁnitions can be given for T having an
abort token for pd in S, T having a resolution for pd, T
having answered a request for pd on the O − T channel.
R is said to have a valid contract or an abort token if it
can be constructed using all the information stored in its
state; the network, the transparent channels to T ; and the
intruder’s memory, intruder’s composition and decomposi-
tion states.
Now we deﬁne, fairness for honest O. We break the def-
inition in [10] into two deﬁnitions. The deﬁnitions for an
honest R can be stated similarly.
Definition 5.3. Completeness for honest O: Let pd =
 identify a protocol instance and let O be
an honest participant. For all reachable conﬁgurations S,
reachable from S such that O has completed
there exists S
and has either a valid contract or an abort token
pd in S
for pd in S
.
(cid:2)
(cid:2)
(cid:2)
180Protocol Theory for T :
Rn1(kt, ko, ma1), T0(pd) → Tab(pd, aborted, ab tok), Rn2(kt, ko, ab tok)
Tab :
Rn3(kt, ko, mr1), T0(pd) → Tor(pd, resolved, res cn), Rn4(kt, ko, res cn)
Tor :
Rn5(kt, kr, mr1), T0(pd) → Trr(pd, resolved, res cn), Rn6(kr, kt, res cn)
Trr :
Rn5(kt, kr, ma1), Tab(pd, aborted, ab tok) →
Tabf :
Tabf (pd, aborted, ab tok), Rn6(kt, kr, ab tok)
Torf : Rn5(kt, kr, mr1), Tor(pd, resolved, res cn) →
Torf (pd, resolved, res cn), Rn6(kt, kr, res cn)
Trrf1 : Rn1(kt, ko, ma1), Trr(pd, resolved, res cn) →
Trrf 1(pd, resolved, res cn), Rn2(kt, ko, res cn)
Trrf2 : Rn3(kt, ko, mr1), Trr(pd, resolved, res cn) →
Trrf 2(pd, resolved, res cn), Rn4(kt, ko, res cn)
Table 2: Protocol theory for T
Protocol Theory for R:
Rquit : R0(pd) → Rquit(pd)
R1 :
R2 :
Rres? : R2(pd, me1, me2) → Rres?(pd, me1, me2, mr1), Rn5(kt, kr, mr1)
R3 :
Rcom : R3(pd, me1, me2, me3) → Rcom(pd, me1, me2, me3, me4), N4(me4)
Rab :
Rres : Rres?(pd, me1, me2, me3, mr1), Rn6(kt, kr, res cn) → Rres2(pd, me1, me2, me3, mr1, res cn)
R0(pd), N1(me1) → R1(pd, me1)
R1(pd, me1) → R2(pd, me1, me2), N2(me2)
R2(pd, me1, me2), N3(me3) → R3(pd, me1, me2, me3)
Rres?(pd, me1, me2, mr1), Rn6(kt, kr, ab tok) → Rab(pd, me1, me2, mr1, ab tok)
Additional Protocol theory for weakly dishonest R:
R : WDisHonestGuy(krs, kr), Ri(pd,−), Nj(x) → WDisHonestGuy(krs, kr), R(pd,−, x)
Table 3: Protocol theory for R and weakly dishonest R
181Protocol Theory for the intruder:
I /ORules :
REC :
SND :
RECR :
SNDR :
NSi(x) → D(x)
C(x) → NRi(x)
Rni(k1, k2, x) → D(x), Rni(k1, k2, x)
C(x), M (k2s), KP (k2s, k2) → Rni(k1, k2, x), M (k2s), KP (k2s, k2)
DecompositionRules :
DCMP :
LRN :
ReadPCS :
ReadSig :
ReadFakeSig : D(FakeSign(kr, x, ko, kt)) → D(x)
ReadTPSig : D(tsig(kt, ko, x)) → D(x)
D((cid:8)x, y(cid:9)) → D(x), D(y)
D(x) → M (x)
D(PCS (ko, x, kr, kt)) → D(x)
D(sig(ks, x)) → D(x)
CompositionRules :
COMP :
USE :
PCS :
FakeSign :
SIG :
TPSIG :
GEN :
C(x), C(y) → C((cid:8)x, y(cid:9))
M (x) → C(x), M (x)
M (kos), C(x), KP (kos, ko), AN N K(kr), AN N T (kt) →
M (kos), C(PCS (ko, x, kr, kt)), KP (kos, ko), AN N K(kr), AN N T (kt)
M (krs), C(x), KP (krs, kr), AN N K(ko), AN N T (kt) →
M (krs), C(FakeSign(kr, x, ko, kt)), KP (krs, kr), AN N K(ko), AN N T (kt)
M (kos), C(P CS(ko, x, kr, kt)), KP (kos, ko) → M (kos), C(sig(ko, x)), KP (kos, ko)
M (kts), C(P CS(ko, x, kr, kt)), KP (kts, kt) → M (kts), C(tsig(kt, ko, x)), KP (kts, kt)
→ ∃x.M (x)
Table 4: Two-Phase Intruder Theory
Because of the nondeterminism in our system, we cannot
Using the above lemmas, we can show
prove the stronger version stated in [10].
Definition 5.4. Fairness for honest O: Let pd =
 identify a protocol instance. For all reach-
able conﬁgurations S,
1. If a strongly dishonest R has a valid contract for pd in
reachable from S such that an
S, then there exists S
honest O has a valid contract for pd in S
.
(cid:2)
(cid:2)
(cid:2)
2. If an honest O has an abort token for pd in S, then for
reachable from S, a strongly dishonest R does
all S
not have a valid contract for pd.
Fairness for O can be shown by inductive methods. The
proof of fairness depends on the following database proper-
ties :
Lemma 5.1. Database Persistence : For all reachable
conﬁgurations S, either T has no entry for pd, or has an
abort or a resolution for pd. If T has an abort, then for all
conﬁgurations S’ reachable from S, T has an abort for pd
in S’. If it has a resolution, then for all conﬁgurations S’
reachable from S, T has a resolution for pd in S’.
Lemma 5.2. Database Consistency : For all reachable
conﬁgurations S, if T has no entry for pd in S then it does
not have an abort or a resolution for pd in S; if it has an
entry for pd in S then if it has an abort for pd in S it does
not have a resolution for pd in S, and if it has a resolution
for pd then it does not have an abort for pd in S.
Theorem 5.3. Completeness and fairness for the honest
O holds.
The following is a corollary of the proof of the theorem 5.3.
Corollary 5.4. Completeness and fairness for honest O
holds even if the intruder takes a bounded number of steps
and the role generation rule is used a bounded number of
times.
Fairness can also be shown for an honest O and weakly
dishonest R; an honest R and weakly dishonest O; and an
honest R and a strongly dishonest O.
6. BALANCE
We now state a version of abuse-freeness in our formalism.
Recall that Σ is the initial ﬁnite set of facts. Assume that in
Σ, two principals O and R whose private/public key pairs
are (kos, ko), and (krs, kr), agree to sign a contract with
contractual text m, unique identiﬁer n, and a trusted third
party T , whose private/public key pair is (kts, kt). This they
do by the use of role generation rule RG. Let the resulting
conﬁguration be S0. For our analysis, we assume that O is
honest and R is strongly dishonest. Since O is honest, it
can be shown by using induction that for all conﬁgurations
reachable from S0, O is in exactly one of the states, Oi, and
that if once it has received an abort token, it does not get a
valid contract and vice-versa.
For the rest of the section, by a reachable conﬁguration S,
we mean a conﬁguration reachable from Σ without the use
182of the role generation rule. Note that since we do not allow
the use of role generation, we are considering only a single
instance of the protocol in isolation and not a concurrent
run of several instances. We have: if the intruder takes only
a bounded number of steps, and no role generation rules are
used, then the number of traces is ﬁnite. Given a reachable
conﬁguration S, let the continuation tree of S be the full
labeled tree of all the possible traces starting from S. The
nodes are labeled by conﬁgurations and the edges labeled by
(cid:2)(cid:2)
rules in the protocol theory; such that if a node labeled S
is a child of a node labeled S
r, then S
connected by an edge labeled
by the application of rule r.
goes to S
(cid:2)(cid:2)
(cid:2)
(cid:2)
Because of completeness for honest O (Corollary 5.4), all
the leaf nodes in the continuation tree would be labeled by
conﬁgurations in which O has either an
abort token or a valid contract. Also since O is honest, O
cannot have both an abort token and a valid contract. By
fairness for honest O, if O has an abort token then R cannot
have a valid contract. We take the view expressed in [10] and
say that a contract is completed even if one party possesses
a valid contract.
(By fairness, if the dishonest party has
a valid contract in some conﬁguration, and if the intruder
takes only a bounded number of steps, then in all the leaf
nodes of the continuation tree, the honest party must have
a valid contract).
Hence, in our analysis we would say that the protocol in-
stance is aborted if O has an abort token and is completed
if O has a valid contract. The following deﬁnitions are mo-
tivated by game strategies.
Definition 6.1. Let tr be the continuation tree of S. An
edge of tr is said to be a removable edge if it is labeled by
a rule in the theory of R or by a rule of the intruder or a
rule that indicates a message being read from the network
(that is a Ni predicate occurs in the precedent of the rule).
Otherwise, the edge is said to be non-removable.
Definition 6.2. Let S be a reachable conﬁguration and
assume that the intruder takes a bounded number of steps.
Let tr be the continuation tree of S. Let E be a set of re-
movable edges in tr. Deﬁne tr\E, a strategy, to be the tree
obtained from tr by removing the edges in E and all of their
descendants(including descendants further down).
1) At S, R has the power to abort if there is an E such
that the leaf nodes of tr\E are labeled by conﬁgurations in
which O has an abort token. We call tr\E an abort-tree.
2) At S, R has the power to complete if there is an E
such that the leaf nodes of tr\E are labeled by a conﬁgu-
rations in which O has a valid contract. We call tr\E a
contract-tree.
Definition 6.3. The protocol is said to be balanced for
honest O if for all reachable S and for all bounds on the
number of steps that an intruder can take, at S, R does not
have both the power to abort and the power to complete.
Note that for the protocol not to be balanced, all we need
is to show that R has the power to abort and complete for
one bound on the number of steps that the the intruder
could take (the intruder is in coalition with R).
6.1 Balance for Honest O
We state the following recursive deﬁnition:
Definition 6.4. Let S be a reachable conﬁguration and
assume that the intruder takes only ﬁnitely many steps. Let
tr be the continuation tree of S. Let N be a node in tr and
X a set of nodes that are children of N such that any edge
between N and a member of X is a removable edge. Deﬁne
NX to be the set of children of N that are either in X or
connected to N by a non-removable edge. N is an abort-
power node if
1) Either it is labeled by a conﬁguration in which O has an
abort token, or
2) There is an X such that NX is nonempty and each node
in NX is an abort-power node.
We can deﬁne contract-power node similarly.
Note that in the deﬁnition above, X may be empty, (choos-
ing not to do anything is a valid strategy). Also note that
in the above deﬁnition, the condition NX is non-empty to
rule out cases such as in which we are at a leaf node and O
has a valid contract. Because tr is a ﬁnite tree, the above
recursive deﬁnition makes sense.
For the rest of the section we assume, that S is a reachable
conﬁguration, the intruder takes a bounded number of steps
and tr is the continuation tree of S with respect to this
bound. We have the following connection between the power
to abort and abort-nodes.
Lemma 6.1. At S, R has the power to abort if the root of
tr is an abort-power node. Also at S, R has the power to
complete if the root of tr is a contract-power node.
Proposition 6.2. We have
(cid:2)
(cid:2)
1) If a node N , in tr is labeled by a conﬁguration in which
O has an abort token then it is not a contract-power node.
2) If a node N , in tr is labeled by a conﬁguration in which
O has a valid contract then it is not an abort-power node.
, such that every node
3) Suppose there is a conﬁguration S
is not an abort-power node. If N is a
in tr labeled by S
node in tr, such that it is labeled by S” and S” → S
by an
application of a rule that labels a non-removable edge, then
N is not an abort-power node.
, such that every node
4) Suppose there is a conﬁguration S
is not a contract-power node. If N is a
in tr labeled by S
node in tr, such that it is labeled by S” and S” → S
by an
application of a rule that labels a non-removable edge, then
N is not a contract-power node.
(cid:2)
(cid:2)
(cid:2)
(cid:2)
Lemma 6.3. If in S, O is in a state in which it has re-
quested for an abort token or a resolution from T and is