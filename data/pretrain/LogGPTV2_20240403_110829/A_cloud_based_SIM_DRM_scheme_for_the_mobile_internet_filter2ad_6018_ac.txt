Output: Kcek: the key for decrypting the encrypted
(1) Kc := A8(Ki, Rand);
(2) UK := AUK(Kc, Rand);
(3) Kcek := DEUK(EK);
Algorithm 3: Key-Generation (Rand, EK).
Input:
License: the license for decrypting the content;
En Content: the encrypted content;
Output: Content: the decrypted content.
(1) Flag := Check License(License)Agent;
(2) if Flag == True then
License ID := GetID(License)Agent;
(3)
Rand := GetRand(License)Agent;
(4)
Rights := GetRights(License)Agent;
(5)
EK := GetEK(License)Agent;
(6)
(7) Hash := H(HKey(cid:3)License ID(cid:3)Rights)Agent;
(8)
(9)
(10)
(11)
(12)
(13)
(14)
(15)
(16)
if It is the f irst time then
CreateLSW(License ID, Rand, Hash)SIM;
Kcek := Key-Generation(Rnad, EK)SIM;
else
if CheckLSW(License ID, Rand, Hash)SIM;
then
Kcek := Key-Generation(Rnad, EK)SIM;
else
error :=
ErrorIn f o(“License is unavailable
return := GenerateMessage(error)Agent;
(cid:5)(cid:5)
(17)
(18) Content := DEKcek (En Content)Agent;
(19) U pdateLSW(License ID, Rand, Hash)SIM;
(20) else
error := ErrorIn f o(“License is unavailable
(21)
return := GenerateMessage(error)Agent;
(22)
)Agent;
Algorithm 4: Content-Decryption (License, En Content).
the SIM card creates a corresponding LSW. After that, the
SIM card generates Kcek by Algorithm 3 and sends it to
the DRM agent. The DRM agent decrypts the content by
Kcek in the secure memory of the device. The subscript of
the operation represents the entity where the operation is
executed. For example, the subscript “SIM” of the operation
A5(Kc, Rand)SIM means the operation is executed in the SIM
card.
4. A Case Study
In this section, we propose a case study for our proposed CS-
DRM scheme. This case consists of preparation phase, rights
customization phase, license acquisition phase, play phase,
and download/upload phase. Figure 4 illustrates the process
of the CS-DRM use case, where protocols among E ∪ S are
also shown. The play phase, not appearing in the ﬁgure, is
executed in the cloud client, and more details are presented
in Section 4.4.
4.1. Preparation Phase. The preparation phase does pre-
liminary works for the entire process. The initialization
operation of the CS-DRM backend is carried out in this
phase.
(a) Content providers upload content to a content server
by SSL protocols.
(b) The content server generates the key Kcek and
encrypts digital content by Kcek using symmetric
encryption. After that,
the content server hosts
encrypted content for users to download.
(c) The content server transmits Content ID, IContent ID,
Kcek to the license server in the format of EPKls(Con-
tent ID(cid:3)Kcek(cid:3)IContent ID) where EPKIs is an asymmet-
ric encryption operation using the public key PKls of
the license server. Content ID is a content identity. In
order to make Content ID unique, Content ID con-
sists of local content identiﬁer and the corresponding
content provider identiﬁer. IContent ID is the rights
description information, such as price and play type.
(d) The license server stores Kcek, Content ID, and
IContent ID, and then generates the rights customiza-
tion web page which is hosted on the license server
for the rights customization phase.
(e) The license server transmits Content ID and the URL
of corresponding rights customization web page to
the content server.
4.2. Rights Customization Phase. The rights customization
phase is used to customize the rights of a digital content.
(b) The DRM agent looks for a license with a Content ID
suﬃx in the device. If the DRM agent ﬁnds a corre-
sponding license, it will check the license against LSW
according to License ID. The rights customization
phase starts if the result is not correct or the rights is
unavailable. For example, the rights is available if the
rights information allows a user to play the content
for 5 times. But the rights is unavailable if the value
of play times is 0.
(c) The DRM agent requests the URL of rights cus-
tomization web page from the content server. As
the URL is received, the browser acquires rights
customization web page from the license server with
this URL and renders it. Then, the user customizes
the rights on the web page and conﬁrms the rights
information (s)he selects. After that, the trigger
message TM, that is, (Content ID, License ID, rights,
license url) is generated and sent by the license
server. Here license url is the URL for acquiring the
corresponding license.
(d) After the user aﬃrms TM, the license server stores the
rights information for generating a license later.
(cid:5)(cid:5)
)Agent;
(a) The user browses the content server web site and
selects the content (s)he wants.
EURASIP Journal on Wireless Communications and Networking
9
User
Cloud client
Browser
Web page (HTTP)
a
t
e
e
d
n
R
d
t
T
)
P
S
c
D o w n l o
p
y
r
e
d
t
n
o
P,
T
c
R
(
Content providers
contents
(SSLP)
n
o
i
t
a
r
a
p
e
r
P
e
s
a
h
p
Content server
based on cloud
PKls
n
o
i
t
a
r
a
p
e
r
P
e
s
a
h
p
Player
Render
DRM agent
License
LSWP
License
storage
d
n
a
R
,
D
I
K
E
,
h
s
a
H
K
C
,
k
e
c
K
SIM card
(IMSI, Kc
LSW)
Rig
(
H
hts
T
T
n
su
custo
P,trigger
mizatio
b-protocol)
Licenseacquisitionphase
(LAP)
hase
p
U p l o a d p h a s e
( u p l o a d s u b - p r o t o c o l )
a n d p a y m e n t )
License server
based on cloud
Figure 4: The typical process of a use case.
4.3. License Acquisition Phase. The license acquisition phase
is used to acquire a license from the license server. The
process of both this phase and play phase is shown in
Figure 5.
(a) The DRM agent ﬁrst generates a random number,
Rand, and passes Rand to the SIM card for calcu-
lating Kc and CK which are used for the SIM card
authentication by Algorithm 1. After that, the DRM
agent combines Rand, IMSI hash, Rights ID, and
CK as a request and transmits the request to the
license server.
∗
(b) The license server checks whether CK is equal to the
which is calculated by the same method using
CK
Rand and IMSI hash. The SIM card is authentic if
are identical. The license server creates
CK and CK
a license. More details of the license generation are
shown in Algorithm 2.
∗
(c) After the DRM agent receives a license for the
ﬁrst time,
it creates LSW in the SIM card. The
corresponding license and LSW will be updated
after the license is consumed. The upload phase is
launched in order to synchronize licenses and LSW
with the license server when the user starts up the
client of CS-DRM.
(d) The payment for the license is accomplished by the
SIM card after the user receives the license [16].
Before the purchase, the license server will check the
user account ﬁrst. As long as the SIM card connects
to the network of the mobile operator, it will send
proactive comments [9] to the system of the mobile
operator for the payment.
4.4. Play Phase. The play phase describes steps of rendering
a digital content. The process of generating Kcek is the key of
this phase, as shown in Algorithm 4.
(a) The play phase is initiated when the DRM agent gets
a correct license with the Content ID suﬃx.
(b) The DRM agent extracts Rand and Hash from the
license and checks Hash with LSW in the SIM card.
If they are equal, the DRM agent sends Rand, EK,
and License ID to the SIM card for generating Kcek,
as shown in Algorithm 3.
10
EURASIP Journal on Wireless Communications and Networking
License acquisition phase
DRM agent and SIM card
License server
command to synchronize the license and LSW stored in the
license server when the upload phase starts.
CK = SIM-authencation(Rand)
Rand, IMSI Hash, CK
License = license-generation(Rand,
IMSI Hash, CK, Right ID)
License or error
Check-license (license)
SIM proactive command for payment
Manage the payment or error
Play phase
Content-decryption(license, En content)
SIM proactive command for upload phase
Figure 5: The process of License Acquisition Phase and Play Phase.
Synchronization
(c) The DRM agent decrypts the encrypted content
by Kcek. The decrypted content is rendered by the
player. The Kcek and the decrypted content are stored
in the secure memory of mobile device when a user is
enjoying the content.
(d) Once the user stops playing,
the Kcek and the
decrypted content will be deleted. At the same time,
the DRM agent updates the rights information in the
license as well as the LSW in the SIM card.
(e) If the rights information is unavailable, the DRM
agent deletes the license and notiﬁes the SIM card to
delete LSW.
4.5. Download/Upload Phase. The download/upload phase
is for the ﬂexibility and integrity of CS-DRM, where the
download phase allows users to change the device and the
integrity is guaranteed by the upload phase.
In the download phase, if a user inserts a SIM card into
another device which does not have the content and license,
the user selects the “Download License” menu item. The
DRM agent downloads the license from the license server
according to the LSW. The DRM agent checks the new
license against the LSW in the SIM card. If the veriﬁcation
fails, the new license will be deleted. Clearly, a user cannot
assist another user, say Bob, to “get” the appropriate keys or
contents without giving the SIM card to the user Bob.
The upload phase is launched once the user starts up the
client of CS-DRM. The SIM card sends the upload proactive
5. Characteristics of CS-DRM
In this section, we discuss characteristics of CS-DRM by
analyzing security, privacy issues, the cost of CS-DRM, and
how the cloud enhances our DRM scheme. As shown in
Table 3, in order to elaborate on these characteristics more
clearly, we compare CS-DRM with several typical DRM
schemes.
5.1. Security Analysis. The security of our proposed CS-
DRM scheme is distinguished by the utilization of the SIM
card and LSW. The scheme we proposed is one solution
to focus on the encryption of data exchanged between the
SIM card and the DRM agent. It is noteworthy that the last
releases of the SIM card can support SSL over USB for secure
communications between the SIM card and the applications
outside the SIM card. When this kind of SIM card is widely
used in the mobile industry, it may be the more popular
solution for this encryption problem. Although the security
of cloud is also an important aspect to CS-DRM, it is not the
focus of this paper. There are a lot of research works in this
area [18]. Meanwhile, most commercial solutions of cloud,
for example, GAE, have their own security principles.
A SIM card is safe enough to store Ki and other important
information due to the following points, though it is perhaps
it is diﬃcult