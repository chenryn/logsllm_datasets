在这一篇中，我的目标就是教你如何自学。我将带你了解我开发的快速掌握新技术的“十步学习法”。我使用这一方法在一年时间内开发了超过30个适合开发人员的长期培训课程。我还会给你一些靠谱的建议，帮你寻找导师，指导别人，以及如何释放自己的内在潜力像海绵一样地吸收知识。
第27章 学习怎样学习：如何自我教育
走进学校，接受良好教育，没有任何问题。但是如果你毕业后就停滞不前不再学习，那么你将在生活中处于非常不利的境地。事实上，如果你一直依赖他人来教你，从来没有掌握自我教育技能，这会严重限制你提升自己的知识和技能的机会。
软件开发人员可以学到的最重要的一项技能就是自我教育能力。在这个新技术发展日新月异的世界里，就连初级职位的Web开发人员都需要掌握至少三种编程语言，所以自我教育是一项必不可少的技能。
如果想成为最好的软件开发人员，你就必须学会如何自学。很不幸，学校并不会教你自我教育这项技能。你可以轻松反驳说教育体系的设计初衷是针对群体而非个人。无论如何，学会学习是自我教育的核心技能。
剖析学习过程
你是否思考过自己是如何学习的？学习的真正含义是什么？我们几乎都是下意识地倾向于学习自己感兴趣的东西。当别人给我讲一个精彩纷呈的故事时，我们通常不会做笔记，也不会记住确切情节；然而我们中大多数人在听到故事后，不费吹灰之力就能将它复述出来。
这也同样适用于我们做的事情。如果我告诉你该怎么做，你可能会忘掉，但如果你自己动手做一次，你可能就记住了。如果你能将自己所学的东西教给别人，你不仅能记住，还能理解得更深刻。尽管每个人的学习风格千差万别（更多信息参见http://simpleprogrammer.com/ss-learning-myth），但是通过动手实践和教会他人，我们能学得更好。与其他学习方式相比，主动学习是效率更高的方式。
教育的首要目标，并不在于“知”而在于“行”。
——赫伯特·斯宾塞
可以换个角度思考一下这个问题：你可能看遍了教你如何正确骑车的书，也可能看过别人骑自行车的视频，我也可以给你培训正确骑车的机械原理，但是，如果你从来没有骑过自行车，那么当你第一次骑的时候你一定会摔倒。你可能对自行车无所不知，熟悉骑车的机械原理，知道哪种自行车最好，但是直到你将自己所学的东西用于实践，你才算真正学会了骑自行车。
同理，许多软件开发人员拿起一本关于编程语言或框架的技术书，从头到尾地读上一遍，就想奢望他们能够吸收其中的所有信息吗？最好的情况可能是借助这种方法，你能快速积累该主题的全部信息，但你仍然没有真正学会它。
自我教育
如果你想学习一些东西，你应该做什么？好了，刚才我们讲过了，最好的方法就是付诸于实践，如果你也能承担将自己所学的内容教给别人的任务，那么你会理解得更深刻。所以，你在自我教育方面的努力，应该聚焦在如何让自己切实参与，并且尽早付诸实践。
我觉得学习知识的最好方式就是立即将其用于实践，即使你还不知道自己在做什么。如果关于某个主题你能够获得足够的知识能够操作，你就可以发挥自己心灵深处强大的创造力和好奇心。当我们能够在一件事情上尽情发挥的时候，我们的内心就更倾向于吸收更多的信息，思考更有意义的问题。
这似乎有些奇怪，但事实的确如此。玩耍是一项强大的学习机制，这一点我们在整个动物王国都看得到。动物的幼崽总是贪玩，通过玩耍，它们学会了许多赖以生存的重要技能。你看过小猫学捉老鼠的过程吗？人类也是通过玩耍、主动操作来学习的，即使在对我们所做的一无所知的时候。
再举一个例子。在我小的时候，我经常玩一种名叫“万智牌”的集换式卡牌对战。我被它深深吸引，乐此不疲。在游戏中，为了击败对手，你需要综合自己的智慧、运气和创造力，这让我非常着迷。
就凭这一点，我记住了游戏中出现的成千上万张卡牌。你随便抽一张牌，我都可以告诉你这张牌有什么属性、派什么用场。（就算到现在，我依然可以说出大多数牌的信息。）你以为我是在那里正襟危坐，努力背下这成千上万张牌吗？不，我不需要那么做。我只是玩，并且乐在其中。这种自然的探索和好奇心帮助我轻而易举地记住了那么多的信息。
通过发挥这样的能力，玩成为一个你可以大加利用的强大武器。它不仅能激励你，还能大大加快你的学习步伐。在你阅读某个主题的书之前，大致浏览后就开始实践。不用担心自己是否知道自己在做什么。乐在其中，你就会发现随着自己的实验和探索，自己在哪些方面发现了问题。
一旦你已经实践过，并积累了各式各样的问题，立刻回到书本当中。当你回去重读这些参考资料的时候，你有强烈的冲动去消化吸收其中的内容。因为你已经积攒了很多想要找到答案的问题，你对哪些内容更重要早已了然于胸。
然后，你可以把自己学到的新知识重新应用于实践。看看你学到的新方法是否能解决你已有的问题。你可以继续探索新领域，发现需要解决的新问题。以解决实践过程中发现的问题为目标，在向着知识前进的道路上重复这个循环，周而复始。通过这种方式获得的信息对你才是有意义的——“纸上得来终觉浅”啊。
最后，你可以将自己所学的打包教给别人。这一点是画龙点睛之笔，你应该随时准备与有兴趣倾听的人分享你新学到的知识，你会为自己的发现激动不已——玩儿的力量就是这么巨大。教导他人也很容易，它可以简单到你与配偶之间就自己学到的新东西进行的一次对话，也可以是写一篇博客文章。关键在于，你要用自己的语言将这些信息组织起来，把你的思想表述给别人。
这就是我发明的“十步学习法”背后的逻辑。在接下来的几章中我将就此展开详细的介绍。我增加了一些正式步骤，也引入了预备步骤来帮你在开始之前就让学习系统化。不过本方法的关键指导原则是通过玩儿、探索以及将自己所学教给他人来学习。这一简便易行的方法更符合我们的天性——在某种程度上，抛弃了“填鸭式教学”的自主学习才是最简单和最纯粹的学习方式。
采取行动
你最近一次自学了什么？你的学习过程是怎样的？
你上一次对兴趣爱好感到激动是在什么时候？你对此兴趣爱好了解多少？你是经过刻苦学习才培养此兴趣的，还是通过玩耍自然而然地就学会了？
第28章 我的“十步学习法”
多年以来，我都承受着巨大的压力：快速学习新技术、新编程语言、新框架和其他能力。通常，这种压力是我自己造成的，我总是投入新事物，结果力不从心。但是，即便不考虑压力来源，这也迫使我开发出一个可重复使用的自学体系。
在接下来的几章里，我会带你了解我自创的进行快速学习的“十步学习法”。让我们先从了解这个体系的确切含义及其工作原理开始。
体系背后的逻辑
在我职业生涯的早年间，我学习知识的主要途径就是“从封面到封底”仔细阅读专著。只有通读全书后我才会将自己学到的知识应用于实践。使用这个方法，我发现，我确实能学到东西，但是效率很低，我还得经常回顾书的内容，来弥补自己在该学科方面存在的知识短板。
当我拥有足够的时间，且没有一个真实具体的目标的时候，这种学习方法很好。我最终学会了我想要学习的东西，而且从头到尾地读书学东西也并不难，只是要花时间。随着我开始有更紧迫的理由需要快速学习，我发现自己原来的方法就无法奏效了。通常，我并没有时间通读全书，而且我也发现书本里的很多内容更适合作为参考资料，而不适合实际学习。
于是，我迫使自己去寻找更好的自学方法，能在有限的时间内掌握所需内容。有些时候，我只有一周甚至更少的时间去吸收足够的信息以教给别人。我发现在这种情况下，我很自然地会先明确需要掌握哪些内容，再去寻找我能获得这些信息的最佳资源，同时也会忽略那些并非达成目标所必需的其他信息。
我发现，为了能够掌握一门技术，我需要了解以下三个要点。
1．如何开始——要想开始使用自己所学的，我需要掌握哪些基本知识？
2．学科范围——我现在学的东西有多宏大？我应该怎么做？在开始阶段，我不需要了解每个细节，但是如果我能对该学科的轮廓有大致的了解，那么将来我就能发现更多细节。
3．基础知识——不止在开始阶段，要想使用一项特定的技术，我需要了解基本的用户案例和最常见的问题，也需要知道自己学的哪20%就能满足80%的日常应用。
熟知了这三个关键点后，我可以高效地学习一门技术，无需通晓全部细节。我发现，如果我了解三项主题——如何开始，我能做什么，以及相关基础知识，那么我就能随着学习深入学会所需的其他知识。如果我想提前掌握所有知识，那只是在浪费时间，因为真正重要的内容会湮没在那些细枝末节中。这种新方法能让我关注重点。当我确实需要了解更多细节时，我可以利用参考资料来弥补这些不足。有多少次你从头到尾仔细阅读一本技术书籍，却发现自己实际用到的也只是书里介绍的技术的一小部分？
使用这种方法，我在很短的时间内学会了Go语言——仅仅几个星期而已。我专注于学习如何尽快用Go语言写代码。很快我就对这门编程语言以及它有哪些可用的库有了一个大致的了解。我希望对这门语言能做什么能有一个整体的了解。最后，我完成并掌握了基础知识。当我需要深入了解时，我只需要在这些基础知识的基础上进行扩展。
十步学习法体系
事实证明，掌握这三大要点可不像看上去那么轻松。学会“如何开始学习一门技术”可以说是一项挑战，而且往往很难找出那些所谓的“篇幅只占20%、然而有效性却达到80%”的内容。另外，我经常发现，要总结出一门技术的应用广泛程度的简短描述，是很难的。通常你需要阅读一整本甚至几本不同的书籍之后才能获得此信息。
为了解决这些问题，我又提前做功课，确保自己能够找出自己所需的信息，并以最合理的方式将它们组织起来，实施落地。
“十步学习法”的基本思想就是：要对自己要学的内容有个基本的了解——了解自己不知道什么就足矣。然后，利用这些信息勾勒出学习的范围，即需要学哪些内容，以及学成之后又会获得什么。依靠这些知识，你可以找出各种资源（不局限于书）来帮助自己学习。最后，你可以创建自己的学习计划，列出要去学习哪些相关课程，筛选学习材料，只保留能帮助自己达成目标的优质内容。
一旦完成这些工作，你对自己要学什么和怎样学都了然于胸，你就可以把控自己的学习计划中的每个关键点，通过“学习—实践—掌握—教授”（Learning, Doing, Learning and Teaching，LDLT）的过程，获得对该学科的深刻理解，同时你也向着自己的目标前进。
“十步学习法”的第一部分是研究，它是一次性完成的。但是从第7步到第10步则是重复的过程，贯穿于你的学习计划的各个模块。这个方法非常奏效，因为它迫使你提前明确自己的学习目标，也持续不断的激励你通过实践（而不仅仅是读书或听讲座）向着目标前进。
“十步学习法”体系
借助此方法，我得以在几天之内就全面掌握了一门编程语言。成千上万注册了我的“十步学习法”视频课程（http://simpleprogrammer.com/ss-10steps）的其他软件开发人员也取得了类似的成果。
这是快速学习的唯一途径吗？这是一种魔法系统吗？不，不是的。它只是通过“聚焦学习范围，让你关注重点内容”来学习的一种快速学习方法，它迫使你通过“自我探索”和“主动教学”的方式将真正重要的内容印刻在自己的大脑中。接下来的几章，我们将介绍该方法的实际操作步骤。你可以根据自己的情况对该方法进行裁剪，去掉你不喜欢或者认为无效的部分，保留对你有用的部分。最终，你一定会找到适合自己的自学方法，而你的未来将仰仗于它。
采取行动
挑选一项你已经烂熟于胸的技术，看看你能否明确以下几点。
如何开始用它？