```
**优点**
- 用于实现跟踪用户点击页面或动态广告曝光次数有较大的优势。
**缺点**
- 只支持 GET 请求。
- 只能浏览器与服务器的单向通信，因为浏览器不能访问服务器的响应文本。
---
### 服务器代理
浏览器有跨域限制，但是服务器不存在跨域问题，所以可以由服务器请求所有域的资源再返回给客户端。
---
### document.domain 跨域
对于主域名相同，而子域名不同的情况，可以使用 document.domain 来跨域。这种方式非常适用于 iframe 跨域的情况。
比如，有一个页面，它的地址是 http://www.xxx.cn/a.html，在这个页面里面有一个 iframe，它的 src 是 http://xxx.cn/b.html。很显然，这个页面与它里面的 iframe 框架是不同域的，所以我们是无法通过在页面中书写 js 代码来获取 iframe 中的东西的。
这个时候，document.domain 就可以派上用场了，我们只要把 http://www.xxx.cn/a.html 和 http://xxx.cn/b.html 这两个页面的 document.domain 都设成相同的域名就可以了。但要注意的是，document.domain 的设置是有限制的，我们只能把 document.domain 设置成自身或更高一级的父域，且主域必须相同。例如：a.b.xxx.cn 中某个文档的 document.domain 可以设成 a.b.xxx.cn、b.xxx.cn 、xxx.cn 中的任意一个，但是不可以设成 c.a.b.xxx.cn ，因为这是当前域的子域，也不可以设成 baidu.com，因为主域已经不相同了。
例如，在页面 http:/localhost/a.php 中设置 document.domain：
```html
```
在页面 http://localhost:81/b.php 中也设置 document.domain
```html
```
---
### window.name 跨域
window 对象有个 name 属性，该属性有个特征：即在一个窗口（window）的生命周期内，窗口载入的所有的页面（不管是相同域的页面还是不同域的页面）都是共享一个 window.name 的，每个页面对 window.name 都有读写的权限，window.name 是持久存在一个窗口载入过的所有页面中的，并不会因新页面的载入而进行重置。
假设我们有3个页面，
- a.com/index.html
- a.com/empty.html
- b.com/index.html
1. 在 a.com/index.html 页面中嵌入一个 iframe，设置 src 为 b.com/index.html
2. b.com/index.html 载入后，设置 window.name，然后再使用 location.href='a.com/empty.html' 跳转到与 iframe 外页面同域的页面中。
3. 在 a.com/index.html 页面中，就可以通过 $('iframe').contentWindow.name 来获取 iframe 内页面 a.com/empty.html 的window.name 值了，而这个值正是 b.com/index.html 设置的。
通过下面的例子介绍如何通过 window.name 来跨域获取数据的。
页面 http://www.xxx.cn/a.html 的代码：
```html
```
页面 http://xxx.cn/b.html 的代码：
```html
```
---
### window.postMessage 跨域
window.postMessage(message，targetOrigin) 方法是 HTML5 新引进的特性，可以使用它来向其它的 window 对象发送消息，无论这个 window 对象是属于同源或不同源。这个应该就是以后解决 dom 跨域通用方法了。
调用 postMessage 方法的 window 对象是指要接收消息的那一个 window 对象，该方法的第一个参数 message 为要发送的消息，类型只能为字符串；第二个参数 targetOrigin 用来限定接收消息的那个 window 对象所在的域，如果不想限定域，可以使用通配符 *。
需要接收消息的 window 对象，可是通过监听自身的 message 事件来获取传过来的消息，消息内容储存在该事件对象的 data 属性中。
页面 http://www.xxx.cn/a.html 的代码：
```html
```
页面 http://xxx.cn/b.html 的代码：
```html
```
---
### location.hash 跨域
location.hash 方式跨域，是子框架修改父框架 src 的 hash 值，通过这个属性进行传递数据，且更改 hash 值，页面不会刷新。但是传递的数据的字节数是有限的。
a.html 欲与 b.html 跨域相互通信，通过中间页 c.html 来实现。 三个页面，不同域之间利用 iframe 的 location.hash 传值，相同域之间直接 js 访问来通信。
具体实现步骤：一开始 a.html 给 b.html 传一个 hash 值，然后 b.html 收到 hash 值后，再把 hash 值传递给 c.html，最后 c.html 将结果放到 a.html 的 hash 值中。
页面 http://www.xxx.cn/a.html 的代码：
```html
```
页面 http://xxx.cn/b.html 的代码：
```html
```
---
### flash
flash 有自己的一套安全策略，服务器可以通过 crossdomain.xml 文件来声明能被哪些域的 SWF 文件访问，SWF 也可以通过 API 来确定自身能被哪些域的 SWF 加载。
- [跨域策略文件](./文件.md#跨域策略文件)
- https://www.adobe.com/devnet/articles/crossdomain_policy_file_spec.html
---
## Source & Reference
- [浏览器同源策略及跨域的解决方法](https://juejin.im/post/6844903681683357710)
- [同源策略那些事](https://xz.aliyun.com/t/6614)