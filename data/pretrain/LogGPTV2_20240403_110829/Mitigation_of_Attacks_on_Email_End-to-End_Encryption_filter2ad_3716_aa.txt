title:Mitigation of Attacks on Email End-to-End Encryption
author:J&quot;org Schwenk and
Marcus Brinkmann and
Damian Poddebniak and
Jens M&quot;uller and
Juraj Somorovsky and
Sebastian Schinzel
Mitigation of Attacks on Email End-to-End Encryption
Damian Poddebniak
Jörg Schwenk
Ruhr University Bochum
PI:EMAIL
Marcus Brinkmann
Ruhr University Bochum
PI:EMAIL
Münster University of Applied Sciences
PI:EMAIL
Jens Müller
Ruhr University Bochum
PI:EMAIL
Juraj Somorovsky
Paderborn University
PI:EMAIL
Sebastian Schinzel
Münster University of Applied Sciences
PI:EMAIL
ABSTRACT
OpenPGP and S/MIME are two major standards for securing email
communication introduced in the early 1990s. Three recent classes
of attacks exploit weak cipher modes (EFAIL Malleability Gadgets,
or EFAIL-MG), the flexibility of the MIME email structure (EFAIL
Direct Exfiltration, or EFAIL-DE), and the Reply action of the email
client (REPLY attacks). Although all three break message confiden-
tiality by using standardized email features, only EFAIL-MG has
been mitigated in IETF standards with the introduction of Authen-
ticated Encryption with Associated Data (AEAD) algorithms. So far,
no uniform and reliable countermeasures have been adopted by
email clients to prevent EFAIL-DE and REPLY attacks. Instead, email
clients implement a variety of different ad-hoc countermeasures
which are only partially effective, cause interoperability problems,
and fragment the secure email ecosystem.
We present the first generic countermeasure against both REPLY
and EFAIL-DE attacks by checking the decryption context including
SMTP headers and MIME structure during decryption. The decryp-
tion context is encoded into a string DC and used as Associated
Data (AD) in the AEAD encryption. Thus the proposed solution
seamlessly extends the EFAIL-MG countermeasures. The decryption
context changes whenever an attacker alters the email source code
in a critical way, for example, if the attacker changes the MIME
structure or adds a new Reply-To header. The proposed solution
does not cause any interoperability problems and legacy emails
can still be decrypted. We evaluate our approach by implementing
the decryption contexts in Thunderbird/Enigmail and by verifying
their correct functionality after the email has been transported over
all major email providers, including Gmail and iCloud Mail.
CCS CONCEPTS
• Information systems → Email; • Security and privacy →
Symmetric cryptography and hash functions.
KEYWORDS
OpenPGP; S/MIME; EFAIL; AEAD; decryption contexts
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
CCS ’20, November 9–13, 2020, Virtual Event, USA
© 2020 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-7089-9/20/11...$15.00
https://doi.org/10.1145/3372297.3417878
ACM Reference Format:
Jörg Schwenk, Marcus Brinkmann, Damian Poddebniak, Jens Müller, Juraj
Somorovsky, and Sebastian Schinzel. 2020. Mitigation of Attacks on Email
End-to-End Encryption. In Proceedings of the 2020 ACM SIGSAC Conference
on Computer and Communications Security (CCS ’20), November 9–13, 2020,
Virtual Event, USA. ACM, New York, NY, USA, 18 pages. https://doi.org/10.
1145/3372297.3417878
1 INTRODUCTION
For end-to-end encryption of emails, either S/MIME (Secure/Multi-
purpose Internet Mail Extensions) [35] or OpenPGP (Pretty Good
Privacy) [7] can be used. S/MIME is commonly used in corporations
and governments, and relies on a public key infrastructure (PKI).
OpenPGP is used by the technical community and recommended
to people working in high-risk environments [44]. Both standards
are designed to protect against powerful attackers who are able to
gain possession of encrypted email messages.
Email contexts. In general, every email has two contexts: the
MIME context and the SMTP context (Figure 1). The MIME con-
text determines the rendering of the email content, including the
parsers for HTML, CSS or URL invocation. The SMTP context de-
termines the communication pattern (i.e., sender and recipients),
SMTP-related actions (especially Reply and Reply-All), and also
some rendering (e.g., address display names, date, and subject).
encryption modes used in email standards.
1.1 Attacks on Email Encryption
We are interested in three main attack classes, which threaten the
confidentiality of encrypted emails:
• EFAIL-MG attacks [33], exploiting the malleability of block cipher
• EFAIL-DE attacks [33], exploiting standard MIME processing.
• REPLY attacks [22, 31], exploiting standard email actions.
Countermeasures against these attacks are summarized in Table 1,
both for standardization and applications.
EFAIL-MG. In 2018, Poddebniak et al. [33] introduced a new known
plaintext attack technique called malleability gadgets. Whenever a
malleable encryption mode is used (like CBC mode in S/MIME and
CFB mode in OpenPGP), an attacker can transform a single block of
known plaintext into many chosen plaintext blocks. These plaintext
fragments are chosen to include HTML code and are arranged in
a way such that the unknown plaintext is exfiltrated via benign
HTML features such as image loads (exfiltration channels).
EFAIL-MG attacks can easily be mitigated through the introduc-
tion of AEAD encryption, which guarantees integrity of ciphertext
(INT-CTXT) [4]. Any modification of the ciphertext will then result
Session 5E: Infrastructure Security CCS '20, November 9–13, 2020, Virtual Event, USA1647Table 1: Attacks on email end-to-end encryption and counter-
measures. Countermeasures may be enforced by the sender
or by the recipient of an email. Recipient-enforced counter-
measures may lead to problems with interoperability and
legacy emails.
S/MIME 4.0
(RFC 8551)
EFAIL-MG
EFAIL-DE
REPLY
AES-256 GCM
ChaCha20-Poly1305
(sender)
web origin
separation
(recipient)
none
S/MIME
Applications
none
inconsistent
(recipient)
inconsistent
(recipient)
OpenPGP
(RFC4880bis-08)
EAX, OCB
(sender)
none
none
OpenPGP
Applications
MDC (Modification
Detection Code)
(recipient)
inconsistent
(recipient)
inconsistent
(recipient)
optionally, a suggestive subject is shown. Currently, no mitigations
are deployed against this type of attack on the SMTP context.
Research question 1: Is it possible to define countermeasures against
all three attack classes (EFAIL-MG, EFAIL-DE and REPLY), based on
a single cryptographic mechanism?
1.2 Context-Unaware Decryption
The main reason behind the success of the REPLY and EFAIL-DE
attacks is that email decryption is context-unaware; a recipient can
decrypt a ciphertext in any SMTP or MIME context. Since the
attacker has full control over the complete email structure, the
attacker can change the SMTP and MIME contexts (e.g., by adding
new recipients or HTML tags) to create exfiltration channels.
While REPLY and EFAIL-DE attacks exploit the flexibility of the
email structure, email is encrypted in a fixed context (see Figure 1):
• SMTP: The sender’s address is fixed and the set of recipients is
• MIME: The MIME structure is fixed by the email client of the
sender; either the whole MIME tree is encrypted, or Encrypt-
then-Sign is used.
determined by the sender.
Email-related actions like Forward and Reply, which typically change
the SMTP and MIME contexts, are not directly applicable to the
ciphertext of an encrypted email. If an encrypted email is forwarded
to a new recipient, it must first be decrypted and then re-encrypted
with a new key. Similarly, if a recipient replies to an encrypted
email, it must be decrypted, inserted as a quote into the new email
body, and then the whole new body must be re-encrypted with a
new key. We conclude that there is no need to allow decryption of
an email in a different SMTP/MIME context than that determined
by the original sender.
Research question 2: Is it possible to develop a countermeasure by
fixating the MIME and the SMTP context – the decryption context –
that is practically applicable in current email applications?
Figure 1: Example of an email context, consisting of the
SMTP context (white background) and the MIME context
(grey background). Alice sends an email to Bob and Carol,
and only these three mail user agents can decrypt the
enveloped-data MIME element. Replies will be sent to Alice.
in a decryption failure. Any sender can enforce this mitigation by
choosing an AEAD cipher mode, while legacy emails can still be
decrypted. Recent versions of S/MIME and OpenPGP standards
introduce new AEAD ciphers [4, 25, 41].
EFAIL-DE. The EFAIL-DE attacks [33] exploit the fact that the
MIME standard specifies operations on MIME elements (including
decryption) that preserve the structure of the MIME tree. Thus
many S/MIME and OpenPGP implementations silently decrypt
ciphertexts independently of their position in the email. When an
attacker prepends a MIME element containing the HTML fragment
<img src="http://efail.de/ to the element with the original
ciphertext, a vulnerable email client will decrypt the ciphertext and
concatenate the resulting plaintext to the src attribute. Requesting
the image will leak the plaintext to the attacker-specified domain.
EFAIL-DE attacks change the MIME context of an encrypted email.
Deployed mitigations for EFAIL-DE include displaying warnings
to the user, filtering “dangerous” HTML elements, changing MIME
processing or restricting decryption to a single MIME configuration
(Subsection 2.4). The sender of an encrypted email cannot enforce
confidentiality even using an email client with strong EFAIL-DE
mitigation, since the sender has no control over the receiving client.
Some of the deployed mitigations may prevent legacy emails from
being decrypted, and may cause interoperability problems which
can seriously degrade usability of the email encryption standard.
REPLY attacks. In 2000, Katz and Schneier presented their chosen-
ciphertext attack on email encryption standards [22]. On a very
high level, the attack works as follows. The attacker takes an eaves-
dropped ciphertext, obfuscates it, places it into a new email, and
sends it to the original message receiver. The receiver is able to
decrypt the altered email since the ciphertext is not bound to the
message sender. The receiver answers to the attacker, citing the
plaintext of the decrypted message in the reply. Müller et al. showed
in 2019 that similar attacks are still possible by hiding the original
ciphertext as one part of a more complex MIME structure [31] (see
Figure 9). We call these REPLY attacks, because the attacker always
needs to trick the user into manually replying to the email.
REPLY attacks alter the SMTP context such that a reply is sent to
the attacker instead of the original sender of the ciphertext, and,
Session 5E: Infrastructure Security CCS '20, November 9–13, 2020, Virtual Event, USA16481.3 Recipient-Enforced Countermeasures
Table 1 summarizes countermeasures to protect against the three at-
tack classes; standardization favors mitigation approaches that can
be enforced by the sender of a message, while software developers
implement solutions that protect the recipient of a message.
Recipient-enforced countermeasures violate an important stan-
dardization rule known as Postel’s law: Be conservative with what
you send and liberal with what you receive [34]. Current mitigation
approaches turn this rule upside down; each email client processes
outgoing emails differently, but treats incoming messages very
restrictively. For example, the secure but restrictive EFAIL-DE miti-
gations implemented in Thunderbird cause many false positives,
both for emails sent by others (e.g., Gmail) and for legacy emails.
Research question 3: Is it possible to define sender-enforced coun-
termeasures against EFAIL-DE and REPLY attacks, similar to the
AEAD mechanisms standardized against EFAIL-MG?
1.4 Decryption Contexts
Basic idea. The EFAIL-DE and REPLY attacks work by altering the
SMTP and MIME contexts, which are not integrity protected. So
we utilize AEAD (see Subsection 2.1) at time of sending to include
this critical information in the ciphertext computation. This allows
clients to authenticate before decryption whether the relevant head-
ers and MIME structure of the received mail have been tampered
with. In case they do find tampering, decryption can be prevented
entirely, thereby disabling these attack classes. Following this basic
idea, we answer all three research questions in the affirmative.
R1 The only cryptographic mechanism needed to prevent all three
attack classes is AEAD.
R2 We use a normalized description DC of the SMTP and MIME
contexts of each email as associated data in the AEAD encryp-
tion, thus making sure that any change in one of these contexts
results in a decryption failure.
R3 Instead of hard-coding AEAD decryption contexts into decryp-
tion routines (which would be a recipient-enforced countermea-
sure), we indicate the presence and the contents of additional
data for AEAD decryption by a new RFC 822 email header. Thus
security can be enforced by the sender.
This solution has the advantage that many standards and crypto-
graphic libraries already support AEAD cipher modes [25, 41]. It is
much more flexible and secure than currently deployed mitigations
and has the following additional benefits:
• Flexibility. Each sender may trade off security and false positive
rate. For example, a whistleblower may opt for high security and
risk of false positives, while compliance-based use of S/MIME
may opt for medium security and a near zero false positive rate.
• Backwards compatibility. New messages will be protected by
an extra security layer, while legacy emails can still be decrypted.
• No reduction in functionality. We do not need to restrict fea-
tures of email clients – MIME, HTML and CSS may still be used.
The definition of a suitable decryption context DC for emails
is not trivial: We must construct DC in such a way that the false
positive rate, i.e. the case that a legitimate recipient cannot decrypt
the message, is low, while mitigating all known attack classes.
1.5 Evaluation
To evaluate our approach, we implemented decryption contexts
in Enigmail, the widely used OpenPGP plugin for Thunderbird.
We tested our implementation against a set of attacks published
in [31, 33] and confirmed that the countermeasure is effective.