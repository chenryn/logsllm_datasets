0.50
0.25
0.00
1.00
0.75
0.50
0.25
0.00
e
t
a
R
s
s
e
c
c
u
S
1.00
0.75
0.50
0.25
0.00
1.00
0.75
0.50
0.25
0.00
1.00
0.75
0.50
0.25
0.00
AS1221
AS1239
4
5
7
4
AS1755
5
6
AS2914
7
AS3257
AS3967
AS6461
4
4
4
4
5
5
5
5
5
6
7
AS3356
4
5
6
AS4755
7
4
5
AS7018
4
5
6
7
Connectivity
Algorithm ● Greedy
RR−swap
AS1221
●
●
●
AS1239
●
●
50
100
150
200
500
600
700
AS1755
AS2914
●
●
●
40
60
80
100 300
330
360
390
AS3257
AS3356
●
●
●
●
●
●
●
30
40
50
400 450 500 550 600 650
AS3967
AS4755
●
●
200
220
240
260
28020
25
30
35
AS6461
AS7018
●
●
●
●
●
40
●
30
20
10
30
20
10
30
20
10
30
20
10
30
20
10
●
●
20
●
●
●
h
c
t
e
r
t
S
n
a
d
e
M
i
90
120
150
180
Number of Nodes
300
400
500
Fig. 10. Median stretch (and 5th to 95 percentiles) for the arborescence
packings T (up to 20 each) of the different algorithms on the well-connected
cores of different ASes, plotted over the size of the graphs.
Algorithm ●a
Greedy
a
RR−swap
●
●
●
●
●
●
●
●
●
●
●
●
●
●
A
S
2
9
1
4
A
S
6
4
●
6
1
●
A
S
1
●
2
2
1
A
S
●
3
9
6
7
A
S
1
7
5
5
●
●
●
A
S
4
7
5
5
A
S
3
2
5
7
●
●
●
●
●
●
●
A
S
7
0
1
8
A
S
3
3
5
6
A
S
1
2
3
9
120
100
80
60
40
20
10
5
i
e
m
T
n
a
i
d
e
M
Fig. 9. Success rates for the arborescence packings T for RR-swap, aiming
for 4 to 7 disjoint arborescences Each item represents the average success rate
over 20 attempts, picking a random root each time. Greedy always succeeds.
nodes uniformly at random, selecting them as a root for the
arborescence packings. We generate arborescence packings T
of size k ∈ {4, 5, 6, 7} with the greedy and RR-swap methods.
Construction success on AS graphs. Greedy always ﬁnishes,
meaning that our trimming operation generated 4/5/6/7-
connected graphs. Different to the random regular graphs, RR-
swap struggles to complete some arborescence constructions,
as seen in Fig. 9: in total, RR-swap succeeds 61% of the
time. Upon further further investigation, we saw that RR-swap