然后使用命令 `pwsh` 启动 PowerShell。
```
$ sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc
$ curl https://packages.microsoft.com/config/rhel/7/prod.repo | sudo tee /etc/yum.repos.d/microsoft.repo
$ sudo dnf makecache
$ sudo dnf install powershell
$ pwsh
```
欲删除仓库和包，运行以下命令：
```
$ sudo rm /etc/yum.repos.d/microsoft.repo
$ sudo dnf remove powershell
```
##### 方法 2：使用 PRM 文件
这种方法与第一种方法没有明显的差别。实际上，在安装 RPM 文件时，隐式添加了 GPG 密码和仓库。这是由于 RPM 文件包含它们两者的关联关系，保存在它的元数据中。
首先，从 [PowerShell GitHub 仓库](https://github.com/PowerShell/PowerShell) 获取相应版本的 `.rpm` 文件。然后查看 `readme.md` 文件中的 “获取 PowerShell” 部分的内容。
第二步，输入以下命令：
```
$ sudo dnf install powershell-.rhel.7..rpm
```
在 `` 和 `` 节点中填写各自的内容，例如 [powershell-7.1.3-1.rhel.7.x86\_64.rpm](https://github.com/PowerShell/PowerShell/releases/download/v7.1.3/powershell-7.1.3-1.rhel.7.x86_64.rpm)。
你也可以使用链接运行它，不指定版本和架构，先把它下载到本地。
```
$ sudo dnf install https://github.com/PowerShell/PowerShell/releases/download/v/powershell-.rhel.7..rpm
```
欲删除 PowerShell，运行以下命令：
```
$ sudo dnf remove powershell
```
#### 通过容器安装
##### 方法一：使用 Podman 容器
Podman 是一个兼容 [开放容器倡议](https://opencontainers.org/)（OCI）的、嵌入式的容器引擎，它可以代替 Docker。
微软提供了 [PowerShell Docker 容器集成工具](https://hub.docker.com/_/microsoft-powershell)。下面的例子将在 Podman 中使用容器。
欲了解更多关于 Podman 的信息，可以访问 [Podman.io](https://podman.io/)。Fedora 杂志还有一个专为 Podman 设计的 [标签](https://fedoramagazine.org/tag/podman/)。
欲在 Podman 中使用 PowerShell，运行以下脚本：
```
$ podman run \
  -it \
  --privileged \
  --rm \
  --name powershell \
  --env-host \
  --net=host --pid=host --ipc=host \
  --volume $HOME:$HOME \
  --volume /:/var/host \
  mcr.microsoft.com/powershell \
  /usr/bin/pwsh \
  -WorkingDirectory $(pwd)
```
这段脚本为使用 PowerShell 创建了一个 Podman 容器，并立即接入其中。它还将 `/home` 和主机的根目录挂载到容器中，确保它们在容器中是可用的。无论如何，在 `/var/host` 目录下，主机的根目录是可访问的。
但是，在容器内部，你只能间接运行主机命令。有一种变通办法，就是先运行 `chroot /var/host` 改变根目录，然后运行主机命令。
为了把命令拆分开来讲解，除非特别指定，以下所有内容都是强制性的：
* `-it` 创建一个持久环境，当你进入该环境后，不会轻易退出；
* `--privileged` 给予容器扩展的权限（可选）；
* `--rm` 当你退出时移除容器；
* `--name` 设置容器名称；
* `--env-host` 将所有主机的环境变量设置为容器的变量（可选）；
* `--net=host --pid=host --ipc=host` 在主机的命名空间中运行进程（而非一组单独的名称空间）；
* `--volume $HOME:$HOME` 挂载用户目录；
* `--volume /:/var/host` 将主机根目录挂载到 `/var/host`（可选）；
* `mcr.microsoft.com/powershell` 进入容器；
* `/usr/bin/pwsh` 可选但很方便的参数：用别名 `pwsh`，脚本中有了它，可以输入 `pwsh` 轻松访问 Podman 容器；
* `-WorkingDirectory $(pwd)` 在当前目录下进入容器（可选）。
欲移除 PowerShell 镜像，运行以下命令：
```
$ podman rmi mcr.microsoft.com/powershell
```
##### 方法二：Fedora 系统的 Toolbox 容器
在不影响主机系统的情况下安装持久化环境，使用 Toolbox 容器是一种巧妙的解决方案。它充当了 Podman 的封装器，负责提供大量的标志，就像方法一中提到的那样。因此，Toolbox 比 Podman 容易使用。它可以用来开发和调试。有了 Toolbox，你可以运行任何命令，跟你直接在 Fedora 工作站主机上运行是一样的。
安装步骤跟在主机上安装一样，唯一的区别就是在容器内部进行。你需要确保已经安装了 `toolbox` 包。
使用 Fedora 34 Toolbox 容器需要两个步骤：
1. 创建 Fedora 34 Toolbox 容器
2. 运行 Fedora 34 Toolbox 容器
```
$ toolbox create --image registry.fedoraproject.org/f34/fedora-toolbox
$ toolbox enter --container fedora-toolbox
```
接着，按照 [方法一：使用微软仓库](file:///Users/xingyuwang/develop/TranslateProject-wxy/translated/tech/tmp.c7U2gcu9Hl#method-1-microsoft-repositories) 中的相关内容操作。
可选但非常方便的做法：使用别名 `pwsh`，可以轻松地访问 Toolbox 容器：
```
toolbox run –container fedora-toolbox pwsh
```
欲移除 Toolbox 容器，需要确保你已经使用 `exit` 关闭了 Toolbox 会话，然后运行以下命令：
```
$ podman kill fedora-toolbox
$ toolbox rm fedora-toolbox
```
---
via: 
作者：[TheEvilSkeleton, Ozymandias42](https://fedoramagazine.org/author/theevilskeleton/https://fedoramagazine.org/author/ozymandias42/) 选题：[lujun9972](https://github.com/lujun9972) 译者：[cool-summer-021](https://github.com/cool-summer-021) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出