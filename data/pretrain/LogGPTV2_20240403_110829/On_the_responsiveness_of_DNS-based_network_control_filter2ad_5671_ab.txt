50000
25000
e
m
u
l
o
v
t
s
e
u
q
e
r
l
a
t
o
T
0
06-08 12:00
06-08 15:00
45000
40000
35000
30000
25000
20000
15000
10000
5000
e
m
u
l
o
v
t
s
e
u
q
e
r
l
a
t
o
T
0 
04-13 22:30 04-13 23:00 04-13 23:30 04-14 00:00 04-14 00:30 04-14 01:00
Date / time
0
06-08 18:00
06-08 18:30
06-08 19:00
Date / time
06-08 19:30
06-08 20:00
(a) April 2003
(b) June 2003
Figure 1: Trafﬁc volume near a DNS change for three large Web-hosted events. The bottom row of graphs zoom in on the time
around the DNS update and TTL expiry. Timestamps on the x-axis are EDT.
to see if the LDNS continues to approach (i.e., send requests to) a
given low-level name server even after the NS record it holds for
the name server has expired, indicating a violation of the TTL.
Our logs were collected on March 3, 2004 between 1AM and
10PM. We limit our analysis to resolution requests for names that
represent static image content, e.g., domain names of the form
aXX.img.CDN.net. Incorporating requests for other CDN names
into our analysis may yield different values for the number of vio-
lating LDNSes.
4. ANALYSIS RESULTS
In this section, we describe observations made from the Web
event and CDN access measurements and analysis. From these
results, we can observe the extent to which clients and LDNSes
in our data sets adhere and respond to DNS TTLs, and draw some
inferences about the responsiveness of DNS-based control.
4.1 Observations from Web Events
In Figure 1, we show the aggregate request volume to all caches
during the time near the end of the three events. These requests
were grouped into 1-minute intervals. The top graphs show a clear
peak occurring at the end of the event, followed by a period of rel-
atively constant and sustained trafﬁc until the DNS update (marked
by the solid line). In each case, the effect of the DNS change is
dramatic, causing a sharp drop in requests coming to the cache lo-
cations as clients are redirected to the archive servers.
The bottom graphs in Figure 1 zoom in on the portion of the
trace near the DNS update. In these graphs, the solid line denotes
the time of the update and the dashed line is the time when the
10 minute TTL expires. Requests arriving after the TTL expiry
are considered to be in violation in our analysis (subject to the 30
second grace period). Between the update time and the TTL expi-
ration, the request volume decreases rapidly by roughly 53%, 60%,
and 67% for the April, June, and July events respectively. However,
the remaining one half to one third of the trafﬁc decays very slowly
over a long period, which we discuss in more detail below. We can
see that while more than half of the client requests can be shifted
away quickly, the remaining requests using the stale DNS entries is
signiﬁcant.
In Figure 2(a), we plot the distributions of the extent of DNS
TTL violations over all requests arriving after the TTL expiration
for each event. A few speciﬁc times are annotated on the graph,
such as 10 seconds, 30 seconds, up to 1 day after the TTL expira-
tion. The graph shows that the bulk of the violations are very long,
between two hours and a day. In fact, the requests may arrive even
long after a day, but our access logs extend only roughly a day past
the DNS update time. Since the duration of the majority of viola-
tions is so long, DNS would provide very little control over clients
that do not honor the TTLs. That is, there are very few cases in
which clients violate the TTL by only a small amount. This effect
is consistent across all three events.
Figure 2(b) further illustrates this effect. It plots a distribution
of the maximum observed TTL violation for each client that makes
a request after the DNS update. So, if a particular client makes
several requests after the TTL expires (i.e., in violation), this graph
captures the last time a request from the client was observed. Again,
since our traces do not extend beyond one day after the DNS up-
date, the distribution is truncated to roughly a day. Similar to Fig-
ure 2(a), we see that most clients that violate the TTL continue to
use DNS entries well after they expire. The graph shows that 75–
85% of the clients violate the TTL by more than 2 hours.
4.2 LDNS accesses in a large CDN
In Figure 3(a), we show a CDF of the length of the time for
which local DNS servers cache NS records with stale TTLs (i.e.,
the duration of a TTL violation). Notice that about 86% of the
random sample of LDNSes observed in the high-level name server
trace do not exhibit any violation of the NS record TTL. About
April ’03 event
June ’03 event
July ’03 event
10s
30s 1min
5min
30min 1hr 2hr
1day
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
c
e
s
x 
<
s
n
o
i
t
a
l
o
i
v
L
T
T
f
o
n
o
i
t
c
a
r
f
e
v
i
t
a
l
u
m
u
C
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
c
e
s
x 
<
s
n
o
i
t
a
l
o
i
v
L
T
T
f
o
n
o
i
t
c
a
r
f
e
v
i
t
a
l
u
m
u
C
April ’03 event
June ’03 event
July ’03 event
10s
30s 1min
5min
30min 1hr 2hr
1day
0
1
10
100
1000
Time after TTL expiry (sec)
(a) All violations
10000
100000
0
1
10
100
1000
10000
100000
Max arrival time after TTL expiry (sec)
(b) Maximum violation
Figure 2: CDF of the request arrival time in violation of the DNS TTL (a) and the maximum arrival time (b), for each event. Time
on the x-axis is on a logarithmic scale.
2% of the LDNSes made exactly one request to the top-level name
server and did not return during the course of our log collection. As
a result, we could not determine the duration of their TTL violation
(as such, the CDF does not reach “1” on the y-axis).
In Figure 3(b), we show a similar CDF for just the violating
LDNSes (which constitute about 14% of all LDNS servers). Notice
that nearly 70% of the noncompliant LDNSes show a violation of
TTLs in excess of 1 hour. Nearly 25% of exhibit violations of more
than 5 hours in length. These observations are roughly similar to
those made for the Web Event dataset in Figure 2(b).
However, the above characterization is biased in favor of LDNSes
making very few total requests. That is, we are likely to report some
of these LDNSes as adhering to TTLs while, in reality, they may
not. This is because our analysis depends heavily on the number
and frequency of the requests made by an LDNS in order to clas-
sify it as a violator or not. For example, an LDNS server that con-
sistently violates TTLs by about an hour, but has a request rate of
once every 2 hours in our low-level trace, is likely to be identiﬁed
as an TTL-adhering server.
To address this issue, we also plot the CDF of the TTL violation
duration for the top 93 LDNSes ranked by the volume of requests
they generate to the high-level name server logs in both Figures 3(a)
and (b)1. Notice in Figure 3(a) that more than 37% of these violate
TTLs. Of these, about 15% exhibit TTL violations in excess of 5
hours.
Finally, we characterized the LDNSes according to their network-
aware clustering (NAC), which groups IP addresses that are close
together topologically and likely under common administrative con-
trol [8]. We are interested in whether noncompliant LDNSes are
more likely to appear in small networks in which addressing DNS
conﬁguration or deployment issues may be easier than in larger
ones. Hence, our analysis considers whether clusters of particular
sizes have relatively higher fractions of non-compliant LDNSes.
We ﬁrst collect a large list of all LDNSes observed in both the
high-level and the low-level DNS logs, and group them accord-
ing to their NACs using BGP tables collected by the Route Views
project at roughly the same time as our LDNS logs [13]. We do the
same for the violating LDNSes. Finally, we classify the LDNSes
(both violators and non-violators) according to ranges of the preﬁx
1Although we collected the top 100 requesting LDNSes, 7 of these
did not appear in our low-level logs, primarily because we did not
have access to all low-level server logs.
length of their NAC (e.g., the preﬁx length of the NAC 9.0.0.0/8
is 8).
x
<
n
o
i
t
l
a
o
v
i
L
T
T
x
a
m
h
t
i
w
s
r
e
v
r
e
s
.
c
a
r
F
x
<
n
o
i
t
i
l
a
o
v
L
T
T
x
a
m
h