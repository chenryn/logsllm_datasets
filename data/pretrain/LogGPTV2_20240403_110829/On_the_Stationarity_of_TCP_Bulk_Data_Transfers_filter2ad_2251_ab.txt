### Detection of Change Points Using the K-S Test

The detection process involves a windowing approach where the right-side window contains approximately 25% of points from the "new" distribution (the distribution after the change point) until the left-side window contains about 25% of points from the "old" distribution. Visual inspection of some samples has shown that using such values for \( w_{\text{min}} \) allows for the correct detection of obvious changes in the time series. Figure 3 illustrates an example from one of our TCP flow time series, aggregated at a 10-second time scale, along with the scaled binary time series output by the tool and the detected change points (vertical bars). This example demonstrates the test's ability to isolate stationary regions. Additionally, the output of the binary time series, representing the K-S test results for each window position (dashed line in Figure 3), shows notable consistency, which is encouraging. Oscillations in the test output would necessitate careful design of the change point criterion, but this is not the case here, suggesting that our simple criterion (consecutive '1' values for \( w_{\text{min}} \) to detect a change) is effective.

### K-S Test in the Presence of Correlation

We aim to apply the K-S change point tool described in the previous section to detect changes in the throughput time series as detailed in Section 3. However, due to the closed-loop nature of TCP, consecutive one-second throughput samples are correlated. If all samples are drawn from the same underlying distribution, a simple heuristic to create an uncorrelated time series from a correlated one is to:
1. Compute the auto-correlation function of the initial time series.
2. Choose a lag \( l_0 \) at which the correlation is close enough to zero.
3. Aggregate the initial time series over time intervals of size \( l_0 \).

Specifically, let \( X(t) \) be the initial time series. Its auto-correlation function \( \text{AC}(f) \) measures the correlation between samples at positions \( t \) and \( t + f \). For an i.i.d. time series, \( |\text{AC}(f)| \) should be upper bounded by \( 2\sqrt{\frac{n}{n-1}} \) for \( f > 1 \). For a correlated time series, we choose \( l_0 \) such that \( \forall f > l_0, |\text{AC}(f)| \leq 2\sqrt{\frac{n}{n-1}} \). We then generate the aggregate time series \( Y(t) \) by averaging the initial time series over intervals of \( l_0 \).

However, this method is not applicable to our TCP time series because changes in network conditions prevent us from assuming the same underlying distribution over the entire duration of a flow. To address this, we aggregate each time series at a fixed value of \( l_0 = 10 \) seconds. Given that the average throughput of the flows is 444 kbits/s, an average flow will send more than 400 packets (of size 1500 bytes) in a 10-second interval, which is sufficiently large for a TCP connection to have lost memory of its past history. To assess the remaining correlation after aggregation, we computed the autocorrelation function for each stationary interval obtained with our tool. The cumulative distribution function of \( l_0 \) (Figure 4) shows that about 95% of the \( l_0 \) values are below 5, indicating that the remaining correlation is short-term.

### Performance of the Change Point Detection Tool

Table 2 summarizes the performance of the change point detection tool in the presence of correlation. Based on the results, further aggregation might be necessary for time series with \( l_0 \geq 3 \). However, the choice of the time scale impacts the separation ability of the K-S test. For example, with \( w = 40 \), we cannot observe stationary periods shorter than 400 seconds. Thus, there is a trade-off between reducing correlation and maintaining the test's sensitivity.

### Robustness Testing with Synthetic Data

To test the robustness of the tool, we use a first-order auto-regressive process \( X \) with \( X(t) = aX(t-1) + Z(t) \), where \( Z \) is a purely random process. We vary the parameter \( a \) to tune the amount of correlation and apply the K-S change point test. Specifically, we consider \( a \in \{0.2, 0.5, 0.9\} \), corresponding to \( l_0 \) values of 2, 5, and 20, respectively. Table 2 presents the results for different values of \( a \), \( w \), and \( w_{\text{min}} \). The results show that the K-S test performs well for \( a \leq 0.5 \) (i.e., \( l_0 \leq 5 \)). Increasing \( w_{\text{min}} \) helps reduce false alarms, although \( w_{\text{min}} = 15 \) was visually better for our dataset.

### Empirical Validation on Real Data

For the results in this section and the rest of the paper, we used \( w = 40 \) and \( w_{\text{min}} = 15 \). We applied the tool to time series with at least \( 4 \times w \) samples, i.e., to flows lasting at least 1600 seconds. The tool's effectiveness was validated with synthetic data, and we now need to check its performance on real traces.