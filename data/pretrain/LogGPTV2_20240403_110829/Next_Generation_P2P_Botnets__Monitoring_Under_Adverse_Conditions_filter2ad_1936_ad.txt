are 2 and 3 respectively. If we remove these two outliers from the calculation,
the error drops from 27% to only 15%.
Figure 1b, compares the average resilience of the simulated graphs against
the resilience of the real world graph at its maximum and minimum population.
Interestingly, the simulated networks are signiﬁcantly more resilient than the real
world Sality graphs. The reasoning behind this ﬁnding is that the connections
526
L. B¨ock et al.
(a) Active Population
(b) NLMT
Fig. 2. Inﬂuence of individual parameters on monitoring resistance and resilience.
in all graphs are made prominently through a strongly connected core. However,
the simulated graphs also have more connections among bots at the edges of
the graph, which leads to the higher resilience. We speculate, that this is largely
caused by the Goodcount mechanism of Sality and the botnet being active for
several years. Even though, the resilience of the simulated graphs are signiﬁcantly
higher than the real world Sality, similar resilience has been observed for the
ZeroAccess botnet [9]. In summary, the graphs generated with BC are more
similar to the real-world graphs than those create with life-time churn.
MM Design Evaluation. We now investigate, the inﬂuence each parameter
has on monitoring resistance and botnet resilience. As the ﬁrst parameter, we
look at the inﬂuence of the active population. The results depicted in Fig. 2a
indicate, that the active population2 of the botnet has a signiﬁcant impact on
its monitoring resistance. We argue that there is a two-fold reasoning behind
this behavior. First, if more highly stable nodes are available in the botnet, they
must share the in-degree of the less stable nodes and therefore, it is less likely
for an MD to be within a bot’s NL. Second, parameters such as the NL-size do
not scale with the active population. Therefore, the information contained in a
MD’s NL amounts to a signiﬁcantly larger fraction of the population in small
botnets when compared to larger botnets.
Out of all MM parameters, the Neighborlist Minimum Threshold (NLMT)
has the greatest inﬂuence on the resilience of a botnet. Figure 2b, highlights this
inﬂuence in a scatter plot of all simulation runs with an active population of 1963.
As the botnets with such a population size are most resistant to monitoring, we
omit other active populations in the subsequent analysis due to clarity/space
reasons. While the highest resilience obtained by botnets with an NLMT of 10
2 The scatter plots depict all parameter variations, with one of them being highlighted.
Next Generation P2P Botnets: Monitoring Under Adverse Conditions
527
(a) NL Reply Size
(b) Overall Population
Fig. 3. Inﬂuence of individual parameters on monitoring resistance and resilience.
is approximately 40%, botnets with an NLMT of 50 approached a resilience of
almost 90%. However, the increase of resilience comes at the cost of decreasing
monitoring resistance (see also Sect. 4). As the resilience of the botnet is eval-
uated based on global knowledge of the botnet, we cannot state the best value
for a botnet’s NLMT. While a low NLMT hampers the gathering of information
required to conduct an attack, a high NLMT is more likely to withstand an
attack even if a lot of information is obtained by botnet defenders.
The eﬀects of the Neighborlist Reply Size (NLRS) on the monitoring resis-
tance of a botnet increases with higher NLMTs. Figure 3a illustrates, that with
increased resilience the diﬀerence between an NLRS of 1 and 10 changes signif-
icantly. This growth of resilience is caused by the increasing NLMT, which is
highlighted by the colored overlays. While the diﬀerence between an NLRS of 1,
5, or 10 does not seem to have a signiﬁcant inﬂuence at an NLMT of 10, it is
clear that an NLRS of 1 is superior at NLMTs of 5 and 10. We speculate, that
the reason for this is, that an NL-reply is likely to contain more entries than
the requesting bot needs. As an example, if a bot with 47 out of 50 neighbors
receives an NL-reply with 10 entries, that is seven more bots than it required to
have a full NL. Therefore, an NLRS of 1 is preferable with regard to monitoring
resistance, as no unnecessary information is shared.
Similar to the active population, the overall population greatly inﬂuences the
resilience of the botnet. Figure 3b, depicts the analysis of overall populations of
5889, 7852, and 9815 for an active population of 1963. The ﬁgure shows, that
the resilience increases with a lower overall population. This pattern is repeated
based on diﬀerent NLMTs which are highlighted by the colored overlays. We
argue, that this is caused by the increased likelihood of any node being online.
As the overall population is lesser, a node will rejoin the botnet more frequently.
528
L. B¨ock et al.
(a) Churn Model
(b) Multiple MDs
Fig. 4. Inﬂuence of parameters on monitoring resistance (and resilience).
The diﬀerence among the three observed churn models seems to be most
pronounced in the resilience of the botnet. Our analysis results in Fig. 4a, indi-
cate that the botnets diﬀer slightly with regard to resilience and monitoring
resistance. The churn models SalityV 3 followed by ZA71 create more resilient
botnets, whereas ZA65 has the highest monitoring resistance. Nevertheless, the
scaling of churn models appears to work well with only small diﬀerences between
the churn models with regard to resilience and monitoring resistance.
The NLRP, minimally inﬂuences the monitoring resistance of a botnet.
Interestingly, the preferable parameter value changes with growing NLMT. Our
results indicate that a random selection is preferable for an NLMT of one,
whereas returning the last seen neighbors is better for NLMTs of higher val-
ues.
The range of values we analyzed for the MMI , did not show any inﬂuence
on monitoring resistance or resilience. Nevertheless, a lower MMI may reduce
the probability of a bot getting disconnected from the botnet. At the same time,
the shorter the MMI, the more communication overhead will be incurred by
the botnet. We expect that with increased message overhead, it will be easier to
detect the botnet. Therefore, any of the values is good with regard to monitoring
resistance and resilience, but may cause the botnet to be more susceptible to
detection.
In summary, we identiﬁed that among the MM parameters, NLMT and NLRS
have the greatest eﬀect on monitoring resistance and botnet resilience. Contrary,
the MMI and NLRP exhibit only minor eﬀects. We argue, based on our results,
that a parameter combination of NLMT = 10, NLRS = 1, NLRP = random and
MMI = 1h, exhibits the most adverse conditions for monitoring. Furthermore,
our analysis of active and overall population indicates that with growing popula-
Next Generation P2P Botnets: Monitoring Under Adverse Conditions
529
tion the monitoring resistance increases signiﬁcantly. Lastly, the three evaluated
churn models showed similar behavior for the observed active populations.
Successful Monitoring in Adverse Conditions. For our last experiment, we
analyzed how increasing the number of MDs inﬂuences the monitoring resistance
of a botnet. Figure 4b, presents the results of deploying multiple MDs for the
botnets with the most adverse conditions. In addition to the optimal parameter
combination identiﬁed in the previous section, we varied the NLMT to cover
the more resilient botnets as well. One can observe how an increase in MDs
results in a decreased monitoring resistance of the botnet. However, the increase
in knowledge does not increase linearly with the increase in MDs. This is the
case due to two reasons: (i) knowledge gained by adding additional MDs may
overlap with existing knowledge and therefore not add to the overall knowledge,
and (ii) the potential increase in knowledge is limited by the total population of
the botnet. Due to these factors, we can only enumerate the entire botnet for an
NLMT of 50. Moreover, this is only possible with 500 deployed MDs. However, a
fraction of the nodes remains unknown in the NLMT = 25 scenario, and almost
20% of the overall population remain undiscovered using 500 MDs in a botnet
with an NLMT of 10.
We argue, that this clearly indicates that short term monitoring, deploying
bots in controlled environments, or controlling active bots requires a large pool
of diverse IP addresses to eﬀectively monitor botnets in adverse conditions. As
suggested by [2,11], this could be realized through collaboration of multiple
parties. Furthermore, network based monitoring is a promising approach, as large
amounts of bots can be observed at once without requiring a pool of IP addresses.
However, a drawback of this approach is that it requires the collaboration of
multiple ISPs which may prove to be diﬃcult, as they are usually reluctant
about sharing private data.
7 Conclusion and Future Work
In this paper, we argue that once botnets adapt more advanced countermea-
sures, monitoring as we know it today will no longer be feasible. We deﬁned the
term adverse conditions as a botnet environment in which any deviation from
the behavior of a regular bot can easily be detected by the botmaster. Further-
more, we investigated the idea of designing a botnet’s MM to further limit the
knowledge obtainable by monitoring.
To thoroughly analyze botnets, we discussed diﬀerent churn models and pro-
pose BotChurn (BC), a novel churn generator for botnets. In our experiments,
we identiﬁed a lower boundary for intelligence gathering in adverse conditions. In
particular, our results indicate that the MM design signiﬁcantly aﬀects both the
monitoring resistance and resilience of the botnet. Finally, we conducted addi-
tional simulations in which we aggregated the intelligence obtained by multiple
MDs, to observe how this increases the intelligence obtained via monitoring. The
results indicate, that such a distributed approach provides a way to improve the
530
L. B¨ock et al.
gathered intelligence. However, this requires a signiﬁcant amount of available
IP addresses. To overcome this, we suggest that future research considers the
concept of collaborative monitoring. If the defenders combine their resources,
this would increase the quality of the gathered intelligence and also reduce the
cumulative cost to conduct monitoring.
Acknowledgement. This work was supported by the German Federal Ministry of
Education and Research (BMBF) and by the Hessen State Ministry for Higher Edu-
cation, Research and the Arts (HMWK) within CRISP. The research leading to
these results has also received funding from the European Union’s Horizon 2020
Research and Innovation Program, PROTECTIVE, under Grant Agreement No 700071
and the Universiti Sains Malaysia (USM) through Short Term Research Grant, No:
304/PNAV/6313332.
References
1. Adrian, D., Durumeric, Z., Singh, G., Halderman, J.A.: Zippier zmap: internet-
wide scanning at 10 gbps. In: WOOT (2014)
2. Andriesse, D., Rossow, C., Bos, H.: Reliable recon in adversarial peer-to-peer bot-
nets. In: Internet Measurement Conference. ACM (2015)
3. Andriesse, D., Rossow, C., Stone-Gross, B., Plohmann, D., Bos, H.: Highly resilient
peer-to-peer botnets are here: an analysis of gameover zeus. In: International Con-
ference on Malicious and Unwanted Software (2013)
4. Baumgart, I., Heep, B., Krause, S.: Oversim: a scalable and ﬂexible overlay frame-
work for simulation and real network applications. In: Peer-to-Peer Computing,
pp. 87–88. IEEE (2009)
5. B¨ock, L., Karuppayah, S., Grube, T., M¨uhlh¨auser, M., Fischer, M.: Hide and seek:
detecting sensors in P2P botnets. In: Communications and Network Security, pp.
731–732. IEEE (2015)
6. Falliere, N.: Sality: story of a peer-to-peer viral network. Technical report, Syman-
tec Corporation (2011)
7. Greengard, S.: The war against botnets. Commun. ACM 55(2), 16 (2012). https://
doi.org/10.1145/2076450.2076456
8. Gu, G., Perdisci, R., Zhang, J., Lee, W., et al.: Botminer: clustering analysis of net-
work traﬃc for protocol-and structure-independent botnet detection. In: USENIX
Security Symposium, vol. 5, pp. 139–154 (2008)
9. Haas, S., Karuppayah, S., Manickam, S., M¨uhlh¨auser, M., Fischer, M.: On the
resilience of P2P-based botnet graphs. In: Communications and Network Security
(CNS), pp. 225–233. IEEE (2016)
10. Holz, T., Steiner, M., Dahl, F., Biersack, E., Freiling, F.: Measurements and miti-
gation of peer-to-peer-based botnets: a case study on storm worm. In: LEET (2008)
11. Karuppayah, S.: Advanced monitoring in P2P botnets. Ph.D. thesis, Technische
Universit¨at Darmstadt (2016)
12. Karuppayah, S., Fischer, M., Rossow, C., Muhlhauser, M.: On advanced moni-
toring in resilient and unstructured P2P botnets. In: International Conference on
Communications. IEEE (2014). https://doi.org/10.1109/ICC.2014.6883429
13. Karuppayah, S., Roos, S., Rossow, C., M¨uhlh¨auser, M., Fischer, M.: ZeusMilker:
circumventing the P2P zeus neighbor list restriction mechanism. In: International
Conference on Distributed Computing Systems, pp. 619–629. IEEE (2015)
Next Generation P2P Botnets: Monitoring Under Adverse Conditions
531
14. Karuppayah, S., Vasilomanolakis, E., Haas, S., Muhlhauser, M., Fischer, M.:
BoobyTrap: on autonomously detecting and characterizing crawlers in P2P bot-
nets. In: 2016 IEEE International Conference on Communications, ICC 2016
(2016). https://doi.org/10.1109/ICC.2016.7510885
15. Kleissner, P.: Me Puppet Master: Behind the scenes of crawling P2P botnets
(2014). http://blog.kleissner.org/?p=455
16. Maymounkov, P., Mazi`eres, D.: Kademlia: a peer-to-peer information system based
on the XOR metric. In: Druschel, P., Kaashoek, F., Rowstron, A. (eds.) IPTPS
2002. LNCS, vol. 2429, pp. 53–65. Springer, Heidelberg (2002). https://doi.org/10.
1007/3-540-45748-8 5
17. Narang, P., Ray, S., Hota, C., Venkatakrishnan, V.: Peershark: detecting peer-
to-peer botnets by tracking conversations. In: 2014 IEEE Security and Privacy
Workshops (SPW), pp. 108–115. IEEE (2014)
18. Neville, A., Gibb, R.: ZeroAccess Indepth. Technical report (2013)
19. Page, L., Brin, S., Motwani, R., Winograd, T.: The PageRank citation ranking:
bringing order to the web (1999)
20. Rossow, C., et al.: P2PWNED: modeling and evaluating the resilience of peer-to-
peer botnets. In: Symposium on Security & Privacy. IEEE (2013)
21. Salah, H., Strufe, T.: Capturing connectivity graphs of a large-scale P2P overlay
network. In: 2013 IEEE 33rd International Conference on Distributed Computing
Systems Workshops (ICDCSW) (2013)
22. Stingl, D., Gross, C., R¨uckert, J., Nobach, L., Kovacevic, A., Steinmetz, R.: Peer-
factsim.kom: a simulation framework for peer-to-peer systems. In: High Perfor-
mance Computing and Simulation (HPCS), pp. 577–584. IEEE (2011)
23. Stutzbach, D., Rejaie, R.: Understanding churn in peer-to-peer networks. In: ACM
SIGCOMM Conference on Internet Measurement, pp. 189–201 (2006)
24. Surati, S., Jinwala, D.C., Garg, S.: A survey of simulators for P2P overlay networks
with a case study of the P2P tree overlay using an event-driven simulator. Eng.
Sci. Technol. Int. J. 20, 705–720 (2017)
25. Vasilomanolakis, E., Wolf, J.H., B¨ock, L., Karuppayah, S., M¨uhlh¨auser, M.: I trust
my zombies: a trust-enabled botnet. arXiv preprint arXiv:1712.03713 (2017)
26. Wyke, J.: The zeroaccess botnet - mining and fraud for massive ﬁnancial gain.
Technical report, September, Sophos (2012)
27. Yan, J., et al.: Revisiting node injection of P2P botnet. In: Au, M.H., Carminati,
B., Kuo, C.-C.J. (eds.) NSS 2014. LNCS, vol. 8792, pp. 124–137. Springer, Cham
(2014). https://doi.org/10.1007/978-3-319-11698-3 10
28. Yao, Z., Leonard, D., Wang, X., Loguinov, D.: Modeling heterogeneous user churn
and local resilience of unstructured P2P networks. In: International Conference on
Network Protocols (ICNP), pp. 32–41. IEEE (2006)