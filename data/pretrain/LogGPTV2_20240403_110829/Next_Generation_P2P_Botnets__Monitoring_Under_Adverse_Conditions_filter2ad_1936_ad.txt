### Optimized Text

The values for the two outliers are 2 and 3, respectively. If these outliers are removed from the calculation, the error decreases from 27% to 15%.

**Figure 1b** compares the average resilience of the simulated graphs with the resilience of the real-world graph at its maximum and minimum population. Notably, the simulated networks exhibit significantly higher resilience compared to the real-world Sality graphs. This finding can be attributed to the fact that in all graphs, connections are predominantly made through a strongly connected core. However, the simulated graphs also have more connections among bots at the periphery, which contributes to their higher resilience. We hypothesize that this is largely due to the Goodcount mechanism of Sality and the botnet's prolonged activity over several years. Although the resilience of the simulated graphs is significantly higher than that of the real-world Sality, similar resilience has been observed in the ZeroAccess botnet [9]. In summary, the graphs generated using BC (BotChurn) are more similar to real-world graphs than those created with lifetime churn.

### MM Design Evaluation

Next, we investigate the influence of each parameter on monitoring resistance and botnet resilience. The first parameter we examine is the active population. The results shown in **Figure 2a** indicate that the active population of the botnet has a significant impact on its monitoring resistance. We argue that this behavior is due to two reasons. First, if more highly stable nodes are available in the botnet, they must share the in-degree of the less stable nodes, making it less likely for a monitor (MD) to be within a bot’s neighbor list (NL). Second, parameters such as NL size do not scale with the active population. Therefore, the information contained in an MD’s NL represents a significantly larger fraction of the population in small botnets compared to larger ones.

Among all MM (Monitoring Mechanism) parameters, the Neighborlist Minimum Threshold (NLMT) has the greatest influence on the resilience of a botnet. **Figure 2b** highlights this influence in a scatter plot of all simulation runs with an active population of 1963. Since botnets with this population size are most resistant to monitoring, we omit other active populations in the subsequent analysis for clarity and space. While the highest resilience obtained by botnets with an NLMT of 10 is approximately 40%, botnets with an NLMT of 50 achieve almost 90% resilience. However, this increase in resilience comes at the cost of decreased monitoring resistance (see also Section 4). As the resilience of the botnet is evaluated based on global knowledge, we cannot specify the optimal value for a botnet’s NLMT. A low NLMT hampers the gathering of information required to conduct an attack, while a high NLMT is more likely to withstand an attack even if a lot of information is obtained by botnet defenders.

The effect of the Neighborlist Reply Size (NLRS) on the monitoring resistance of a botnet increases with higher NLMTs. **Figure 3a** illustrates that with increased resilience, the difference between an NLRS of 1 and 10 becomes significant. This growth in resilience is driven by the increasing NLMT, as highlighted by the colored overlays. While the difference between an NLRS of 1, 5, or 10 does not seem to have a significant influence at an NLMT of 10, it is clear that an NLRS of 1 is superior at NLMTs of 5 and 10. We speculate that this is because an NL-reply is likely to contain more entries than the requesting bot needs. For example, if a bot with 47 out of 50 neighbors receives an NL-reply with 10 entries, it receives seven more bots than it requires to have a full NL. Therefore, an NLRS of 1 is preferable for monitoring resistance, as no unnecessary information is shared.

Similar to the active population, the overall population greatly influences the resilience of the botnet. **Figure 3b** depicts the analysis of overall populations of 5889, 7852, and 9815 for an active population of 1963. The figure shows that the resilience increases with a lower overall population. This pattern is consistent across different NLMTs, as highlighted by the colored overlays. We argue that this is due to the increased likelihood of any node being online. With a smaller overall population, a node will rejoin the botnet more frequently.

### Influence of Parameters on Monitoring Resistance and Resilience

The difference among the three observed churn models is most pronounced in the resilience of the botnet. Our analysis results in **Figure 4a** indicate that the botnets differ slightly with regard to resilience and monitoring resistance. The churn models SalityV3 followed by ZA71 create more resilient botnets, whereas ZA65 has the highest monitoring resistance. Nevertheless, the scaling of churn models appears to work well, with only small differences between the churn models in terms of resilience and monitoring resistance.

The Neighborlist Reply Policy (NLRP) minimally influences the monitoring resistance of a botnet. Interestingly, the preferred parameter value changes with growing NLMT. Our results indicate that a random selection is preferable for an NLMT of one, whereas returning the last seen neighbors is better for higher NLMTs.

The range of values we analyzed for the Monitor Message Interval (MMI) did not show any influence on monitoring resistance or resilience. However, a lower MMI may reduce the probability of a bot getting disconnected from the botnet. At the same time, a shorter MMI incurs more communication overhead, which could make the botnet easier to detect. Therefore, any of the values is suitable for monitoring resistance and resilience but may increase the botnet's susceptibility to detection.

In summary, among the MM parameters, NLMT and NLRS have the greatest effect on monitoring resistance and botnet resilience. Conversely, MMI and NLRP exhibit only minor effects. Based on our results, a parameter combination of NLMT = 10, NLRS = 1, NLRP = random, and MMI = 1h, presents the most adverse conditions for monitoring. Furthermore, our analysis of active and overall population indicates that with a growing population, the monitoring resistance increases significantly. Lastly, the three evaluated churn models showed similar behavior for the observed active populations.

### Successful Monitoring in Adverse Conditions

For our final experiment, we analyzed how increasing the number of MDs influences the monitoring resistance of a botnet. **Figure 4b** presents the results of deploying multiple MDs for the botnets with the most adverse conditions. In addition to the optimal parameter combination identified in the previous section, we varied the NLMT to cover more resilient botnets. One can observe that an increase in MDs results in a decreased monitoring resistance of the botnet. However, the increase in knowledge does not grow linearly with the increase in MDs. This is due to two reasons: (i) knowledge gained by adding additional MDs may overlap with existing knowledge, and (ii) the potential increase in knowledge is limited by the total population of the botnet. Due to these factors, we can only enumerate the entire botnet for an NLMT of 50, and this is only possible with 500 deployed MDs. However, a fraction of the nodes remains unknown in the NLMT = 25 scenario, and almost 20% of the overall population remain undiscovered using 500 MDs in a botnet with an NLMT of 10.

We argue that this clearly indicates that short-term monitoring, deploying bots in controlled environments, or controlling active bots requires a large pool of diverse IP addresses to effectively monitor botnets in adverse conditions. As suggested by [2,11], this could be realized through collaboration among multiple parties. Additionally, network-based monitoring is a promising approach, as large amounts of bots can be observed at once without requiring a pool of IP addresses. However, a drawback of this approach is that it requires the collaboration of multiple ISPs, which may prove difficult due to their reluctance to share private data.

### Conclusion and Future Work

In this paper, we argue that once botnets adapt more advanced countermeasures, current monitoring methods will no longer be feasible. We defined "adverse conditions" as a botnet environment in which any deviation from the behavior of a regular bot can easily be detected by the botmaster. Furthermore, we investigated the idea of designing a botnet's MM to further limit the knowledge obtainable by monitoring.

To thoroughly analyze botnets, we discussed different churn models and proposed BotChurn (BC), a novel churn generator for botnets. In our experiments, we identified a lower boundary for intelligence gathering in adverse conditions. Our results indicate that the MM design significantly affects both the monitoring resistance and resilience of the botnet. Finally, we conducted additional simulations in which we aggregated the intelligence obtained by multiple MDs to observe how this increases the intelligence obtained via monitoring. The results indicate that a distributed approach provides a way to improve the gathered intelligence. However, this requires a significant amount of available IP addresses. To overcome this, we suggest that future research considers the concept of collaborative monitoring. If the defenders combine their resources, this would increase the quality of the gathered intelligence and also reduce the cumulative cost of conducting monitoring.

### Acknowledgements

This work was supported by the German Federal Ministry of Education and Research (BMBF) and by the Hessen State Ministry for Higher Education, Research, and the Arts (HMWK) within CRISP. The research leading to these results has also received funding from the European Union’s Horizon 2020 Research and Innovation Program, PROTECTIVE, under Grant Agreement No. 700071, and the Universiti Sains Malaysia (USM) through Short Term Research Grant, No: 304/PNAV/6313332.

### References

1. Adrian, D., Durumeric, Z., Singh, G., Halderman, J.A.: Zippier zmap: internet-wide scanning at 10 gbps. In: WOOT (2014)
2. Andriesse, D., Rossow, C., Bos, H.: Reliable recon in adversarial peer-to-peer botnets. In: Internet Measurement Conference. ACM (2015)
3. Andriesse, D., Rossow, C., Stone-Gross, B., Plohmann, D., Bos, H.: Highly resilient peer-to-peer botnets are here: an analysis of gameover zeus. In: International Conference on Malicious and Unwanted Software (2013)
4. Baumgart, I., Heep, B., Krause, S.: Oversim: a scalable and flexible overlay framework for simulation and real network applications. In: Peer-to-Peer Computing, pp. 87–88. IEEE (2009)
5. Böck, L., Karuppayah, S., Grube, T., Mühlhäuser, M., Fischer, M.: Hide and seek: detecting sensors in P2P botnets. In: Communications and Network Security, pp. 731–732. IEEE (2015)
6. Falliere, N.: Sality: story of a peer-to-peer viral network. Technical report, Symantec Corporation (2011)
7. Greengard, S.: The war against botnets. Commun. ACM 55(2), 16 (2012). https://doi.org/10.1145/2076450.2076456
8. Gu, G., Perdisci, R., Zhang, J., Lee, W., et al.: Botminer: clustering analysis of network traffic for protocol-and structure-independent botnet detection. In: USENIX Security Symposium, vol. 5, pp. 139–154 (2008)
9. Haas, S., Karuppayah, S., Manickam, S., Mühlhäuser, M., Fischer, M.: On the resilience of P2P-based botnet graphs. In: Communications and Network Security (CNS), pp. 225–233. IEEE (2016)
10. Holz, T., Steiner, M., Dahl, F., Biersack, E., Freiling, F.: Measurements and mitigation of peer-to-peer-based botnets: a case study on storm worm. In: LEET (2008)
11. Karuppayah, S.: Advanced monitoring in P2P botnets. Ph.D. thesis, Technische Universität Darmstadt (2016)
12. Karuppayah, S., Fischer, M., Rossow, C., Muhlhauser, M.: On advanced monitoring in resilient and unstructured P2P botnets. In: International Conference on Communications. IEEE (2014). https://doi.org/10.1109/ICC.2014.6883429
13. Karuppayah, S., Roos, S., Rossow, C., Mühlhäuser, M., Fischer, M.: ZeusMilker: circumventing the P2P zeus neighbor list restriction mechanism. In: International Conference on Distributed Computing Systems, pp. 619–629. IEEE (2015)
14. Karuppayah, S., Vasilomanolakis, E., Haas, S., Muhlhauser, M., Fischer, M.: BoobyTrap: on autonomously detecting and characterizing crawlers in P2P botnets. In: 2016 IEEE International Conference on Communications, ICC 2016 (2016). https://doi.org/10.1109/ICC.2016.7510885
15. Kleissner, P.: Me Puppet Master: Behind the scenes of crawling P2P botnets (2014). http://blog.kleissner.org/?p=455
16. Maymounkov, P., Mazières, D.: Kademlia: a peer-to-peer information system based on the XOR metric. In: Druschel, P., Kaashoek, F., Rowstron, A. (eds.) IPTPS 2002. LNCS, vol. 2429, pp. 53–65. Springer, Heidelberg (2002). https://doi.org/10.1007/3-540-45748-8_5
17. Narang, P., Ray, S., Hota, C., Venkatakrishnan, V.: Peershark: detecting peer-to-peer botnets by tracking conversations. In: 2014 IEEE Security and Privacy Workshops (SPW), pp. 108–115. IEEE (2014)
18. Neville, A., Gibb, R.: ZeroAccess Indepth. Technical report (2013)
19. Page, L., Brin, S., Motwani, R., Winograd, T.: The PageRank citation ranking: bringing order to the web (1999)
20. Rossow, C., et al.: P2PWNED: modeling and evaluating the resilience of peer-to-peer botnets. In: Symposium on Security & Privacy. IEEE (2013)
21. Salah, H., Strufe, T.: Capturing connectivity graphs of a large-scale P2P overlay network. In: 2013 IEEE 33rd International Conference on Distributed Computing Systems Workshops (ICDCSW) (2013)
22. Stingl, D., Gross, C., Rückert, J., Nobach, L., Kovacevic, A., Steinmetz, R.: Peerfactsim.kom: a simulation framework for peer-to-peer systems. In: High Performance Computing and Simulation (HPCS), pp. 577–584. IEEE (2011)
23. Stutzbach, D., Rejaie, R.: Understanding churn in peer-to-peer networks. In: ACM SIGCOMM Conference on Internet Measurement, pp. 189–201 (2006)
24. Surati, S., Jinwala, D.C., Garg, S.: A survey of simulators for P2P overlay networks with a case study of the P2P tree overlay using an event-driven simulator. Eng. Sci. Technol. Int. J. 20, 705–720 (2017)
25. Vasilomanolakis, E., Wolf, J.H., Böck, L., Karuppayah, S., Mühlhäuser, M.: I trust my zombies: a trust-enabled botnet. arXiv preprint arXiv:1712.03713 (2017)
26. Wyke, J.: The zeroaccess botnet - mining and fraud for massive financial gain. Technical report, September, Sophos (2012)
27. Yan, J., et al.: Revisiting node injection of P2P botnet. In: Au, M.H., Carminati, B., Kuo, C.-C.J. (eds.) NSS 2014. LNCS, vol. 8792, pp. 124–137. Springer, Cham (2014). https://doi.org/10.1007/978-3-319-11698-3_10
28. Yao, Z., Leonard, D., Wang, X., Loguinov, D.: Modeling heterogeneous user churn and local resilience of unstructured P2P networks. In: International Conference on Network Protocols (ICNP), pp. 32–41. IEEE (2006)