$ vi system_information.sh
```
添加以下行：
```
#!/bin/bash
#Name: Display System Details
#Owner: OSTechNIx
#----------------------------
echo /etc/*_ver* /etc/*-rel*; cat /etc/*_ver* /etc/*-rel*
```
按下 `ESC` 键，输入 `:wq` 保存退出。
现在，通过 SSH 命令在远程系统上运行这个脚本：
```
$ ssh PI:EMAIL 'bash -s'  diskusage.txt
```
然后，你可以通过使用 `cat` 命令或文本编辑器查看 `diskusage.txt` 文件来分析磁盘使用细节。
```
$ cat diskusage.txt 
4.0K ./.profile
4.0K ./.gnupg/private-keys-v1.d
8.0K ./.gnupg
76K ./data/image.jpg
128K ./data/file.pdf
20K ./data/text.docx
5.9M ./data/audio.mp3
6.1M ./data
0 ./.sudo_as_admin_successful
4.0K ./pacman?inline=false
4.0K ./.bash_logout
4.0K ./.wget-hsts
4.0K ./.bash_history
0 ./.cache/motd.legal-displayed
4.0K ./.cache
4.0K ./deb-pacman_1.0-0.deb
4.0K ./.bashrc
6.2M .
```
#### 1.6、配置 SSH 密钥认证，避免输入密码
如果你经常在远程系统上运行命令，你可能需要配置基于 SSH 密钥的身份验证，以便每次跳过密码输入。更多细节可以在以下链接中找到。
> 
> **[Linux 系统下如何配置 SSH 密钥认证](https://ostechnix.com/configure-ssh-key-based-authentication-linux/)**
> 
> 
> 
配置了基于 SSH 密钥的认证后，我们可以通过 SSH 在远程机器上执行命令，从而不需要输入密码：
```
$ ssh PI:EMAIL sudo apt update
```
### 2、通过 sshpass 在远程机器上运行命令
如果你不想配置基于 SSH 密钥的身份验证，你可以使用 `sshpass` 实用程序。
#### 2.1、什么是 sshpass?
`sshpass` 是为使用键盘交互密码身份验证模式运行 ssh 而设计的，但它以非交互的方式。简单来说，`sshpass` 提供了非交互式的方式来验证 SSH 会话。
SSH 使用直接 TTY 访问来确保密码确实是由交互式键盘用户发出的。`sshpass` 在一个专用 tty 中运行 SSH，让它误以为从交互用户那里获得了密码。
#### 2.2、在 Linux 中安装 sshpass
在许多 Linux 发行版的默认仓库中都有 `sshpass` 实用程序。例如，在 Debian、Ubuntu 及其衍生版本中，你可以使用下面的命令来安装 `sshpass`：
```
$ sudo apt install sshpass
```
#### 2.3、通过 SSH 和 sshpass 在远程机器上执行命令
`sshpass` 可以通过参数接受密码，或者通过环境变量读取密码，也可以从文本文件中读取密码。
**警告：** 所有这些方法都是 **高度不安全的**。所有系统用户都可以通过 `ps` 命令看到命令中的密码。**不建议**在生产中使用这些方法。最好使用基于密钥的身份验证。
让我们看看每种方法的示例。
##### 将密码作为参数提供
将密码作为参数提供，使用 `-p` 选项，如下所示：
```
$ sshpass -p  ssh remoteuser@ip-address 
```
示例输出：
```
$ sshpass -p ubuntu ssh PI:EMAIL uname -a
```
其中，
* `-p ubuntu` - 提供远程系统的密码。
* `PI:EMAIL` - 远程系统用户名和地址。
* `uname -a` - 要在远程计算机上执行的命令。
示例输出：
```
Linux Ubuntu22CT 5.15.60-1-pve #1 SMP PVE 5.15.60-1 (Mon, 19 Sep 2022 17:53:17 +0200) x86_64 x86_64 x86_64 GNU/Linux
```
##### 密码作为环境变量提供
在这个方法中，我们声明一个名为 `SSHPASS` 的环境变量，用远程环境的密码作为其值。然后我们使用 `-e` 标志，如下所示：
```
$ SSHPASS=ubuntu sshpass -e ssh PI:EMAIL uname -a
```
##### 从文本文件中读取密码
使用 `echo` 命令在文本文件中追加密码：
```
$ echo "ubuntu" > mypassword.txt
```
现在，将密码文件传递给带有 `-f` 标志的 `sshpass`，如下所示：
```
$ sshpass -f mypassword.txt ssh PI:EMAIL uname -a
```
![通过 SSH 和 sshpass 在远程机器上执行命令](/data/attachment/album/202211/17/163914gmids5kiqqcq10io.png)
### 总结
在本教程中，我们学习了一些通过安全的网络连接在远程计算机上调用命令或程序的方法。在所有的方法中，`sshpass` 方法是最不安全的，建议用户避免在生产系统中使用它。
---
via: 
作者：[sk](https://ostechnix.com/author/sk/) 选题：[lkxed](https://github.com/lkxed) 译者：[MjSeven](https://github.com/MjSeven) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出