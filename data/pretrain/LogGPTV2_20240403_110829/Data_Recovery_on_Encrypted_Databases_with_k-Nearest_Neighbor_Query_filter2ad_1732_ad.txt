k-length window over the sequence S, e.g. the left-to-right or-
der is {s0, . . . , sk−1},{s1, . . . , sk}, . . . ,{sn−k−1, . . . , sn−1}.
For
the case of unordered responses assigning the bi-
sectors to Voronoi endpoints is straightforward as well.
The corresponding left-to-right order of the bisectors is
b0,k, b1,k+1, . . . , bn−k−1,n−1. This attack differs signiﬁcantly
from the the Ordered Responses Attack in the next two steps.
Step 2: Estimate the Constraints of the Feasible Region.
There are inﬁnitely many value n-tuples for DB that can give
a ﬁxed k-th order Voronoi diagram. The next step of our
attack characterizes the set of all such n-tuples using only k
unknowns, namely the offsets ξ = (ξ0, . . . , ξk−1). We deﬁne a
set of linear constraints, namely the ordering, the boundary, and
the positive-offset constraints, imposed on the unknowns ξ so
as to ﬁnd the offsets assignments that correspond to a valid n-
tuple of the reconstruction class. Each constraint imposed on ξ
is a half-space and the intersection of these constraints deﬁnes
the feasible region F[v]. Geometrically, F[v] is a bounded
convex k-dimensional polyhedron, i.e. a polytope. But since
the constraints’ constants are not known to the attacker we
propose a way to estimate them. In particular the new algorithm
estimates the right-hand side constant of each constraint, e.g.
estimation of terms cα,0, c0,1, . . . , c4,5, c5,β in Figure 6. The
key observation is that each c term can be expressed as the
linear combination of lengths of Voronoi segments, e.g. in
Figure 6 term c4,5 involves Len({s1, s2}) and Len({s3, s4}).
Our estimator uses the frequency of each unordered response
to estimate the appropriate linear combination of lengths of
each constraint with rigorous probabilistic guarantees.
Fig. 6. An overview of the attack based on unordered responses for k = 2.
Step 3: Compute Convex Polytope & Output the Mean
of the Polytope Diameter. At this point we have estimated the
feasible region of the offset vector ξ, depicted in Figure 6. As a
next step the attack utilizes a solver for the Vertex Enumeration
Problem [6] which takes as an input the linear inequalities (i.e.
the constraints) and outputs the vertices on the boundary of
the feasible region F[v]. Having the coordinates of the vertices
of F[v], our attack can compute the diameter of the convex
polytope. As it is shown in Theorem 5, the offset ξ∗
, which is
deﬁned as the mean of a pair of polytope-vertices that constitute
the diameter, gives a representative v∗
that has distance at most
diam(F[v])/2 from all the n-tuples of the reconstruction class,
including the (unknown) original database.
(cid:18)(cid:17)(cid:21)(cid:18)
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:45:34 UTC from IEEE Xplore.  Restrictions apply. 
(cid:9)
D. Unordered Responses: Reconstruction for k ≥ 2
(cid:10)
Estimating the Constraints. We deﬁne the tuple L as:
Len({s0, . . . , sk−1}), . . . , Len({sn−k, . . . , sn−1})
L =
, where Len(·) indicates the length of the Voronoi segment
that is given as an input. Our goal is to estimate the expression
of each constraint and to achieve this the next (simpliﬁed)
lemma is of great importance. The analytical formulas for
the constraints can be found in Lemma 7 in the Appendix.
Speciﬁcally, the following lemma shows that each of the
ordering constraints (same argument holds for the boundary)
can be expressed as a simple linear combination of ξ and L
where the coefﬁcients are known. Since we can estimate the
lengths of L using Equation (1) we have a way to estimate
the constraints as well. The proof performs a case analysis of
the inequality vi  2k the polytope is bounded and thus the solver
of the vertex enumeration problem [6] returns the vertices of
the k-dimensional polytope formed by A · ξ ≤ ˜c in O(k2 z)
time, where z is the number of vertices of the polytope. In
general, z could be as large as 2k. Thus, our approach is
suitable for small values of k, which is typical in practical
scenarios where k is often a small constant.
We note here that in case the estimation of the constraints
is not “accurate enough”, which depends on the distribution
of the values, the feasible region might be empty. In this case
the solver will return an empty set and the attack will fail
since no offset can meet the (not adequately) approximated
constraints. Given the vertices we can compute the diameter
of the polytope of F[v] in time quadratic in the number of
vertices. So as a last step our attack returns the mean of the
diameter vertices which guarantees that all the n-tuples of the
class are at most diam(F[v])/2 distance afar.
Algorithm 3: AttackUnordered
Input: Response multiset U = {r1, r2, . . .}, Boundaries α, β
Output: Reconstructed values (v∗
1 S ← ReconstructOrder(U ), ˜c ← ConstraintEstimation(U, S, α, β);
2 Compute the (n + k + 1) × k matrix A of coefﬁcients such that each
line of A · ξ < ˜c represents a constraint, ξ is the column vector with k
offsets, ˜c is the column vector with (n + k + 1) entries of the constants;
n−1) or ⊥
0 , . . . , v∗
3 Remove the redundant constraints from A;
4 Deploy an algorithm that solves the ‘Vertex Enumeration Problem’ with
input A · ξ ≤ ˜c and output a matrix Ξ of k columns where each row
represents a vertex of the convex polytope of the feasible region;
5 If Ξ is non-empty then compute the Euclidean distance between every
pair of rows (i.e. vertices) of Ξ and record the pair (ξ(cid:2), ξ(cid:2)(cid:2)
maximum distance, else return ⊥;
6 Compute ξ∗ as the mean of ξ(cid:2) and ξ(cid:2)(cid:2);
7 Use the offset ξ∗
0 , . . . , ξ∗
8 return (v∗
0 , . . . , v∗
compute the corresponding value v∗
k−1) in the expressions of Lemma 5 to
0 , . . . , v∗
) with the
= (v∗
= (ξ∗
n−1);
n−1)
Theorem 5. Let DB be an encrypted database with n records
whose values are in the range [α, β]. Suppose the attacker
observes the responses to m k-NN queries uniformly generated
from [α, β] (Assumption A1) and which contain the set of all
possible unordered responses, R. For any 0 <  < β − α and
0 < δ < 1, Algorithm AttackUnordered runs in time O(m +
k2z + z2), where z is the number of vertices of the feasible
region, F[v], and returns either ⊥ (failure) or a sequence of
reconstructed values (success) such that each reconstructed
value differs from its original value by at most diam( (cid:3)F[v])
+ 
2
(cid:18)(cid:17)(cid:21)(cid:19)
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:45:34 UTC from IEEE Xplore.  Restrictions apply. 
Plaintext Values 1-5 Oct.
Plaintext Values 1-15 Oct.
5 O
Plaintext Values 1-31 Oct.
3 O
Reconstructed Values of 1-5 Oct. Dataset
Reconstructed Values of 1-15 Oct. Dataset
Reconstructed Values of 1-31 Oct. Dataset
120
100
80
60
40
20
0
120
100
80
60
40
20
0
120
100
80
60
40
20
0
0
20
40
60
80
100
120
0
20
40
60
80
100
120
0
20
40
60
80
100
120
Fig. 7. Three date ranges for the month October of the publicly available mobile records with the geolocation of the German Green party politician Malte Spitz.
on the ﬁrst row we demonstrate the original dataset and in the bottom the accuracy of the reconstruction that we achieve for unordered responses for k = 2.
(cid:2)
max
with probability at least 1 − δ, provided m is at least
, 20(β − α)2(n − k + 1)
25(β − α)2(ln 3 − ln δ)
2
2
(cid:3)
On the Size of the Diameter Since the approximation is
a function of a quantity that depends on the distribution of
the data, we further study the possible values that diam(F[v])
can take. In the next theorem we show that the 3k consecutive
values that are within the smallest possible γ range give an
upper-bound on the diameter of F[v]. Thus, a small concentrated
number of consecutive values affects heavily the diameter of
F[v]. We note here that the smaller the γ the higher the number
of samples required to achieve meaningful approximation
guarantees since the sample size is a function of the length of
the smallest Voronoi segment, so there is an inherent trade-off.
Theorem 6. Let Vk(v) be the Voronoi diagram of reconstruc-
be an n-tuple such that v(cid:2) ∈ [v]. If
tion class [v], and let v(cid:2)
there are 3k values of v(cid:2)
within an γ range in [α, β] then we
have diam(F[v]) ≤ 2γ.
V. EVALUATION OF APPROXIMATE RECONSTRUCTION
In our evaluation, we test our reconstruction attacks on
encrypted versions of databases, e.g. [26], that reduce their
two-dimensional data to one dimension via Hilbert curves [33].
Mapping 2D Data to 1D via Hilbert Curves. Organizing
multidimensional data for efﬁcient access and indexing is
a challenging problem due to the lack of a total ordering
that preserves locality. Space-ﬁlling curves [33], which map
points in a high-dimensional space onto one-dimensional points
while preserving locality and proximity relations, have been
thoroughly explored in spatial data management. See, e.g.,
[29], [35], [40], [46]. These curves essentially span the desired
higher-dimensional space, with granularity tuned by the so-
called order of the curve. The higher the order the better
the approximation of locality. The second row of Figure 7
shows an example of a Hilbert curve of order 7 that spans a
square in the two-dimensional space. In particular, this single
continuous line of gray color that starts at (0,0) and ends at (0,
27) gives a 27 × 27 grid of points. A value of the DB in the
two-dimensional space is projected to the closest segment of
the curve. By “untangling” the curve we get a single straight
line segment where all the projected values are within the
boundaries α = 0 and β = 27 × 27 = 214. Conceptually, to
run a (non-secure) k-NN query it is enough to traverse the
one-dimensional points of DB towards the left and the right
of the projections of the query point on the curve. Due to
the properties of Hilbert curves, the set of k-NN on the one-
dimensional space is an approximation of the neighbors in the
two-dimensional space.
Dataset & Experiment Design. The dataset SpitzLoc [2],
also used in [14], consists of the latitude and longitude of
the German Green party politician Malte Spitz over a period