title:Verifiable auctions for online ad exchanges
author:Sebastian Angel and
Michael Walfish
Veriﬁable Auctions for Online Ad Exchanges
Sebastian Angel and Michael Walﬁsh
The University of Texas at Austin
ABSTRACT
This paper treats a critical component of the Web ecosystem that
has so far received little attention in our community: ad exchanges.
Ad exchanges run auctions to sell publishers’ inventory—space on
Web pages—to advertisers who want to display ads in those spaces.
Unfortunately, under the status quo, the parties to an auction cannot
check that the auction was carried out correctly, which raises the
following more general question: how can we create veriﬁability in
low-latency, high-frequency auctions where the parties do not know
each other? We address this question with the design, prototype im-
plementation, and experimental evaluation of VEX. VEX introduces
a technique for efﬁcient, privacy-preserving integer comparisons;
couples these with careful protocol design; and adds little latency
and tolerable overhead.
Categories and Subject Descriptors: C.2.4 [Computer-Communication Net-
works]: Security and Protection; K.4.4 [Electronic Commerce]: Security
Keywords: veriﬁable, auctions, ad exchanges, online advertisement
INTRODUCTION
1
Ad exchanges [5, 9, 11] are revolutionizing online advertis-
ing [48], an industry responsible for hundreds of billions of dollars
yearly [60]. For each visit by a user to a participating publisher’s
Web site, an ad exchange runs an auction in real time to sell the
publisher’s inventory (space for an ad) to advertisers. These auc-
tions beneﬁt advertisers (who appreciate ﬁne-grained, targeted ads)
and publishers (who can sell space for such ads at a premium).
Despite their ﬁnancial importance, scale, and strong trust as-
sumptions, ad exchanges—versus online advertisement gener-
ally [23, 31, 32, 35, 47, 51, 54–56]—have received little attention
from computer scientists. Muthukrishnan [39] has articulated re-
search problems (including the one that we address), but we believe
that this paper is the ﬁrst to examine a concrete solution or system.
The question that we investigate is: how can an ad exchange
prove to publishers and advertisers that an auction was conducted
correctly, without disclosing information about the bids and bid-
ders? To the extent that auctions today proceed on trust and the
reputation of the auctioneer (and hence only a few players are auc-
tioneers), veriﬁable auctions could lower the barriers to entry for
new auctioneers. Moreover, veriﬁable auctions would beneﬁt even
established ad exchanges, by enhancing the service that they pro-
vide. Finally, our solution is relevant beyond ad exchanges (§9).
The general problem of auction veriﬁcation has been widely
studied [17, 27, 30, 37, 45, 46]. However, the technical challenges
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior speciﬁc permission and/or a
fee. Request permissions from Permissions@acm.org.
SIGCOMM ’13, August 12–16, 2013, Hong Kong, China.
Copyright 2013 ACM 978-1-4503-2056-6/13/08. . . $15.00
of ad exchanges, given below, mean that previous work is not di-
rectly applicable:
• Delay-sensitive. An auction must happen between the time when
the user visits a Web site and the time when the complete page,
including the ad, loads in the user’s browser. This window could
be very short (e.g., 100 ms), as latency is critical to the display
of Web pages.
• High volume. Ad exchanges handle billions of transactions per
day, consuming signiﬁcant network and storage resources [43].
• Difﬁcult to bootstrap trust. The only entity guaranteed to be
known a priori by any party to an auction is the ad exchange itself
(for instance, advertisers may not know each other). Moreover,
membership is dynamic: publishers and advertisers frequently
join and leave a given exchange.
We surmount these challenges with VEX, a system for veriﬁable
auctions. VEX’s goal in the online ad exchange context is to improve
the integrity of auctions while not making privacy and availability
worse than they are today. (It would obviously be ideal to improve
privacy and availability too, but integrity is a difﬁcult problem on
its own.)
VEX has three salient aspects. First, VEX is separated into two
phases: it adds some in-band overhead to the auction and relies on
a more expensive (but still practical) ofﬂine auditing step. This sep-
aration keeps auction latency low while permitting cryptographic
operations as part of verifying the auction results. This separation
is acceptable because misbehavior in this context, even if detected
ofﬂine, has non-technical ramiﬁcations (loss of business, legal ac-
tion, etc.).
Second, VEX introduces a new technique for privacy-preserving
comparisons, which may be useful elsewhere. Speciﬁcally, an entity
encodes a value v in the length of a hash chain and commits to the
value by exposing the tail of the hash chain;1 later, given a query q,
the entity can prove that v ≥ q (without disclosing v), by revealing
an appropriate node in the hash chain (the technique can also be
used to prove statements of the form “v ≤ q”).
Third, VEX uses careful protocol design to compose these
privacy-preserving comparisons with the auction protocol,
to
achieve veriﬁable auctions. The protocol provides the guarantee
that if all parties behave, audits succeed, whereas if misbehavior
occurs (auctioneer chooses the wrong winner or the wrong price,
ignores a bidder’s bid, etc.), it can be detected during the auction
phase or the audit phase.
We have implemented and evaluated VEX (§7). Our prototype
imposes additional latency in the auction phase of 50 ms (at the 95th
percentile), and moderate computation (2× overhead) and storage
cost for the auctioneer. The audit phase is higher overhead—in
computational cost, the audit-to-auction ratio is roughly 1-to-160
1With this scheme, the larger v is, the more work the entity has to do.
However, in our context, the maximum value of v will not be very
large, as discussed in Section 3.
http://dx.doi.org/10.1145/2486001.2486038195in one of our optimized variants—but would happen less often. All
of these costs are affordable and consistent with the usual price of
cryptographic guarantees in systems.
Our work has several limitations. First, it may not be easy to
persuade today’s ad exchanges to adopt VEX; on the other hand, of-
fering this protocol may attract publishers and advertisers. Second,
although bidders’ identities and bids remain secret, VEX reveals the
total number of bids (in an auction) and the sale price (if the auction
is audited). Third, our threat model is not the strongest possible;
among other things, we do not prevent misbehavior (only detect
it). Fourth, the ad exchange invites the bidders, so it can manipu-
late auctions, by choice of bidders. However, such manipulation is
mostly limited (§5) to endowing a colluding bidder with a right of
ﬁrst refusal.2 Last, a malevolent publisher can deliver the auctioned
ad to the wrong user; this issue concerns the authenticity of what is
being auctioned and is a different problem from auction integrity,
but we can limit abuse by publishers (§5).
While online advertising has received much research atten-
tion (§8), veriﬁability in ad exchanges [39] has not been concretely
addressed. Thus, this paper’s contributions are:
• A technique for fast, private integer comparisons (§3).
• The design of VEX, a veriﬁable ad exchange protocol (§4) with
concrete guarantees (§5). For the most part, this design general-
izes to other online auction platforms (§9).
• The implementation and evaluation of VEX and variants (§6–§7).
2 BACKGROUND
This section surveys online advertising (§2.1), ad exchanges (§2.2),
and various vulnerabilities (§2.3).
2.1 A brief history of online advertising
Advertising is a primary source of revenue for many Web sites
that provide free content (e.g., videos, news, blogs). These content
providers, also known as publishers, have for decades used ad net-
works [6, 8, 13] to sell advertising space on their sites. Ad networks
would buy impressions by the thousands (a priori) from publishers,
and distribute the impressions among the network’s advertisers.
Recent advances in behavioral targeting [15, 24] have increased
the effectiveness of ad networks by allowing them to better match
impressions to advertisers’ preferences. This approach inspired a
new kind of entity, the ad exchange, as a way of dealing with
impressions that publishers were unable to sell in advance to ad
networks [25]. Because of their simplicity, power, and versatility,
ad exchanges were well-received, and they quickly began serving
premium impressions. They now serve billions of transactions per
day [43] and are expected to account for 27% of the total display
ad sales in the United States by 2015 [57] (one estimate is that ads
sold via exchanges will be an $8 billion market by 2017 [48]).
2.2 Ad exchanges
On an ad exchange, a publisher auctions individual ad impressions
to advertisers and ad networks, selling the impression to the highest
bidder. The enabling technology is real-time bidding (RTB) [26],
which provides advertisers with data on users and Web pages, al-
lowing them to bid only on the impressions that they consider per-
2Right to meet (and win in preference to) an existing offer before the
end of a transaction [1].
tinent. This gives publishers greater proﬁt margins. Moreover, pub-
lishers get ﬂexibility: they can sell impressions when available, in-
stead of in batches, based on advance forecasts.
Figure 1 gives a high-level overview of ad exchanges. The key
parties in an ad exchange are as follows:
• Users are the page visitors who ultimately see the ad.
• Sellers are publishers who operate Web sites where ads can be
displayed. Medium and large publishers are often represented by
a third party known as a supply-side platform. Small publishers
are frequently represented by ad networks.
• Bidders are advertisers wishing to bid on a particular impression.
Medium and large advertisers often contract with a demand-side
platform, while smaller advertisers contract directly with ad net-
works.
• The ad exchange performs the auction. It processes requests
from sellers of impressions and requests bids from subscribed
bidders.
• Ad storage servers store the actual advertisement (e.g., a banner).
These servers can be maintained by content delivery networks,
ad networks, demand-side platforms, or large advertisers.
Ad exchange protocol. The ad exchange protocol is initiated
when a user visits a publisher’s page. The page contains an HTML
iframe or JavaScript snippet that causes the user’s Web browser to
send an ad tag request to the seller’s server (Figure 1, step ). This
request contains a unique identiﬁer that allows the server to deter-
mine the properties of the ad space: the URL, the dimensions, or the
type of ad supported (e.g., video, image, text). The seller’s server
then creates an auction request (Figure 1, step ). The auction re-
quest contains four types of information: ad space information, ﬁ-
nancial information (e.g., reserve price), user information, and a
time stamp. The user information varies widely and is based on
a publisher’s targeting strategy. It may include demographic (e.g.,
age) and geographic information, as well as information about the
user’s browsing history.
When the ad exchange receives an auction request, it performs
three actions. First, it looks up the user, by the process of cookie
syncing [2, 53]. Second, it chooses a set of bidders to participate
in the auction; the speciﬁcs of this step vary among ad exchanges.
Finally, the ad exchange constructs and sends a bid request to the
selected bidders (Figure 1, step ). The bid request includes the
original impression information provided by the seller (ad space
information, ﬁnancial information, user information, time stamp)
plus additional information held by the ad exchange about the user
or the seller (e.g., relevant keywords for the seller’s site).
Bidders process each bid request by identifying the potential
value of the impression; each bidder may have different bid-
ding strategies. A bidder sends a bid message to the ad exchange
(step ). Each bid message contains a bid as well as an ad tag that,
should the bidder win the auction, will be delivered to the user’s
browser and will be used to fetch the bidder’s ad.
Upon receiving all of the bids or when a timeout is triggered, the
ad exchange evaluates the auction. It chooses a winner (the high-
est bidder), setting the sale price equal to the second-highest bid.
The ad exchange then notiﬁes the winning bidder of the sale price
(step ) and forwards both the bidder’s ad tag and the sale price to
the publisher (step ). At this point, the publisher can respond to
196Figure 1—Overview of ad exchanges. The steps required to deliver an ad to the user are as follows.  The user’s browser requests an ad tag from
the publisher’s server.  The publisher’s server requests an ad tag from the ad exchange, thereby initiating an auction.  The ad exchange asks
interested advertisers and ad networks to bid on the given impression.  Bidders submit their bid along with their corresponding ad tag.  The
winning bidder is notiﬁed of the result of the auction.  The seller receives the ad tag as well as the impression’s sale price.  The seller responds
to the user’s browser request by providing the ad tag.  The ad tag causes the user’s browser to fetch an ad from an ad storage server.  The ad
is fetched and rendered in the user’s browser. This process often completes within a few hundred milliseconds.
the user’s ad tag request (step ), causing the user’s Web browser
to fetch the ad from the appropriate ad storage server (steps , ).
2.3 Vulnerabilities
Commission attack. The ad exchange receives payment from the
winning bidder when an impression is sold. Instead of reporting
this payment to the seller, the ad exchange reports a lower price, to
increase its “commission”.
Bid discrimination attack. The ad exchange selects a bidder other
than the highest to win, giving that bidder access to the media at a
below-market price; the ad exchange may then receive a side pay-
ment from this bidder.
Second-price attack. The ad exchange can misreport the second-
highest bid in a way that forces the winning bidder to pay a higher
price. This attack covers spurious bids by auction participants,
sometimes known as shill bidding [52], or cases when the ad ex-
change manufactures bidders.
Are these things happening today? We do not know: these be-
haviors are easy to carry out but difﬁcult to detect. While a mea-
surement study (e.g., submit multiple bids to auctions) would be
worthwhile, it would give only a snapshot, with no guarantees about
the future. By contrast, the system described in the sections ahead
would rule out (or signiﬁcantly raise the barrier to) such behaviors.
3 PRIVATE INTEGER COMPARISONS
This section introduces a protocol for private integer comparisons.
We describe it separately for clarity and modularity, and because
the protocol may be useful in other contexts.
We want to emphasize two things before going any further.
(1) The costs of what we present are not asymptotically optimal (or
even close), nor are the theoretical properties the strongest avail-
able. (2) We developed this protocol for VEX because its costs are
practical in our context (where integers have limited size, etc.); this
low overhead contrasts with prior solutions (see Section 7.7).
The protocol is in two phases. First, a prover publishes a com-
mitment to a non-negative integer x. Second, a querier supplies a
query q. The protocol provides these guarantees:
• Completeness. If x ≥ q, then the prover can produce a proof that
convinces the querier that the committed value is greater than q.
• Soundness. If x < q, then it is computationally infeasible for the
prover to convince the querier that x ≥ q.
• Secrecy. No information about x is leaked, other than what is
implied by a proved statement.
• Binding. It is computationally infeasible for the prover to pro-
duce integers x1 (cid:54)= x2 and a commitment c such that c is a valid
commitment to both x1 and x2.