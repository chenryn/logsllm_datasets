### Optimized Text

#### Executing Commands and Bypassing WSUS Limitations
Certain binaries available on Windows, such as `cmd.exe` and `wmic.exe`, are used to execute commands. These binaries have their signatures in a catalog rather than embedded within the binary itself. As a result, they are rejected by the Windows Server Update Services (WSUS) service. To circumvent this limitation, WSUSpect utilizes tools from the Sysinternals suite, specifically `PsExec` and `BGInfo`, which are signed by Microsoft. These tools can execute arbitrary commands through their command-line arguments.

#### WSUS Attack Vectors
WSUSpect targets the update process between the WSUS server and clients. Currently, there is no known method to attack the update process between two WSUS servers.

### WSUS Internals

The WSUS service operates with three main components:
1. **IIS Web Server**: Facilitates communication with clients and downstream servers.
2. **Database**: Stores metadata, which can be local or remote.
3. **Central Service**: Manages updates and interacts with the IIS web server and the database.

#### Studying the WSUS Service
To study the WSUS service, you can use the SQL Server Management Studio (SSMS) tool from Microsoft. This tool should be installed before the WSUS service. The Profiler tool in SSMS is particularly useful for tracing database calls. Additionally, since the WSUS service is written in C#, a .NET decompiler can be used to understand its functionalities.

### 2.1 IIS Webservice

The IIS server, divided into two parts, handles client interactions:
1. **Webservice**: Delivers metadata to clients using the SOAP protocol.
2. **BITS Protocol**: Transfers binary updates (e.g., CAB files, PSF, EXE) to clients.

#### Client Registration and Interaction
- **Registration**: New clients register with the WSUS server by declaring their configuration and negotiating session cookies. This process uses several methods, including `RegisterClient`, `GetCookie`, and `SetCookie`.
- **Authentication**: By default, these requests are not authenticated, allowing any client to register. However, authentication can be enabled using TLS client certificates, though this is not commonly configured.
- **Data Compression**: Data exchanged between clients and the Webservice can be compressed, complicating analysis. This can be modified via the IIS Management Console (MMC).

#### Update Status Reporting
- **Software Updates**: Clients report the status of their software updates, including the update agent.
- **Hardware Updates**: Clients also report the status of hardware updates, such as installed drivers.
- **Update Proposals**: Based on the reported information, the server proposes available updates. This involves methods like `GetUpdates` and `GetDriverUpdates`.

### 2.2 Database

When installing the WSUS role, you can choose between:
- **Full SQL Server**: Accessed via TCP sockets or named pipes, using Windows or mixed authentication.
- **Windows Internal Database (WID)**: Accessed only through named pipes, using Windows authentication by default.

#### Database Structure
- **Tables**: Contain the full configuration of the WSUS server, update metadata, registered clients, and more.
- **Triggers**: Ensure data consistency, making direct table insertions difficult.
- **Foreign Keys**: Establish relationships between tables, further complicating direct SQL queries.
- **Stored Procedures**: Over 300 stored procedures manage data, ensuring proper handling of triggers and foreign key constraints.

### 2.3 WSUS Service

The WSUS service (`w3svc`) manages the IIS web server and the database. It interacts with administrators through the WSUS console, an MMC snap-in. Key functions include:
- **Health Monitoring**: Checks the state of the database, clients, Webservice, and certificates.
- **Dispatch Manager**: Monitors database changes and reconfigures the WSUS service as needed.
- **User Interactions**: Handles changes made through the MMC, calling appropriate stored procedures to update the state machine.

### Injecting a New Update

Injecting a new update into the WSUS server involves several steps:
1. **Connect to the SQL Database**: Modify the necessary data.
2. **Prepare XML Files**: Detail prerequisites, binary locations, and options.
3. **Upload Binary**: Place the binary on the WSUS server.
4. **Run Stored Procedures**: Add update metadata to the database.
5. **Create Target Group**: Specify the WSUS client group.
6. **Approve and Deploy**: Finalize the update.

#### Database Connection
- **Standard SQL Server**: Use classic connection methods.
- **WID**: Connect through a named pipe, accessible at different paths depending on the Windows server version.

#### Update Metadata
- **XML Descriptors**: Describe the update's title, description, and file details.
- **Prerequisites**: Define conditions for the update to be installed.
- **Bundle Update**: References the primary update and is shown in the WSUS console.

#### Binary Upload
- **File Placement**: Options include an attacker-controlled webserver, a specific directory format, or the IIS webserver.
- **Binary Selection**: `PsExec` and `BGInfo` are commonly used due to their Microsoft signatures and ability to execute arbitrary commands.

#### Database Injection
- **Stored Procedures**: Five key procedures are used to inject an update, including `spImportUpdate`, `spSaveXmlFragment`, `spSetBatchURL`, `spDeploymentAutomation`, and `spProcessPrerequisitesForRevision`.

By following these steps, an attacker can effectively inject and deploy a new update, potentially compromising WSUS clients.