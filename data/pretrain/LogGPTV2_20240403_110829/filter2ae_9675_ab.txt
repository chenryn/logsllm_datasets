可以看到通信的地址,以及通讯认证的详细过程
可以看到另一家合作厂商的密钥位置
**3\. APP的编写,这明显不是传统的硬件厂商所擅长的,而外包基本成了主要解决办法**
然而厂商也自身没有太高的安全意识在验收成果的时候,主要着力于功能的完善情况,以及界面交互是否有效上面这就会导致许多隐患
  * 通信模型设计不当
  * 验证认证流程存在绕过,或极不完善
  * 查询接口权限认证粗糙
  * 涉及服务器敏感信息泄露
这诸多问题都是一个个良好的突破口和值得关注的点
实例:
从这里可以看到从 apk 中加载了通信使用的证书，故可以从 apk 中提取出来，也涉及了服务器的通信地址和端口
可以看到另一处`TCP`直接通信的地址和端口
这里可以看到，单凭一个手机号就获取了大量设备关键信息,包括密码等
这里可以看到，以任意设备`mac`来获取对应的用户手机号的操作
再根据已掌握的信息，进行设备控制指令的生成也是十分简单
**4\. 在结合国内的平均网络质量在全球排名处于中下游水平的情况下,并且要照顾多地区的复杂网络环境**
在与智能硬件的通信过程中势必会有很多的妥协,因为产品的第一点是务必满足有良好的用户体验
进而就会产生
  * 与服务器通信认证手段单一
  * 身份识别过程简单
  * 消息内容格式化程度高
  * 分两套通信手段,一套局域网,一套互联网
  * 服务器通信内容不认证用户身份
实例:
A厂商在为了解决远程控制这一问题上
互联网层面远程控制由XMPP协议进行通信
但国内的厂商在使用上仅仅着手于XMPP协议的及时性和开放性,对于一些必要的安全措施并没有进行良好的设计
A厂商的XMPP的设计模式下,受控端设备,以及控制端设备全凭MAC地址或是UUID作为登录凭据,并且在密码设计上采用与用户名一样的方式.这就导致可以使用遍历MAC地址的方式将该厂商所有设备踢下线,使其无法正常通信或是响应命令.或是在APP端注册一个账号,然后获得`UUID`便可以向任意在网设备发送控制指令,这对于智能产品来说危害是巨大的,也会导致用户无法获得正常的体验
A厂商该特意设计了一个控制服务器,来接受和记录设备的绑定以及设备状态查询的服务,该服务器没有任何权限设置,亦无token之类的校验,可以抓包后任意重放,来获得任意设备mac所绑定的用户手机号,同时,还有一个逻辑错误,以及一个重大的安全错误
  * 在服务器上存储用户设备控制密码
  * 对设备控制权限变更无校验,任何人可以在任何情况下对设备进行重新绑定,解绑,添加信任用户等危险操作
  * 并在特殊的构造下,可以直接获取到任意设备的控制密码
在通信过程中消息内容采用固定格式`wan_phone%015bee58-xxxx-xxxx-xxxx-31598127xxxx%password%open%relay`
可以看到中间的uuid作为标识password是控制密码open是控制指令
那么其实很好类推关闭之类的指令
在APP的登录过程中,用户名为手机号
局域网内采用UDP无连接通信,通过向设备发送连续的UDP包来获得设备信息,同时为了更快的感同一局域网内的设备状态,采用广播心跳包的形式对所有在网内设备进行查询,同时所有设备收到此包后会回复自己的状态,以及控制密码的值,来确保用户能完成良好的控制
其次在标识上仅使用mac地址作为标识,这就导致,如果在相同包体里改变mac地址即可完成对设备的控制。
可以通过分析流量翻译出大量的操作指令
可看到流量中连续的广播包在发送
广播后,设备响应,解密后就能直接得到设备的控制密码
用脚本直接解密XMPP流量
[破解案例] : 
而局域网和互联网通信内容又大相径庭,即使设计了一个良好的互联网通信模型，也会被找到破绽。
#### 0x04 总结
根据此次分析，IoT生态混乱，通过实例分析验证了很多安全问题，以及潜在隐患，对现有用户会产生用户敏感信息泄露和IoT设备为攻击者大开方便之门的安全问题。最终甚至危害到广大用户的人生以及财务安全。
已有的改进
  * 尽量避免了将设备直接暴露在公网中
  * 已有一些通信上的加密措施,不再是任何人都可以向设备发送消息
  * 避免IoT设备的固件开发下载
尚存或演进的问题
  * 以CS模式通信,但是通信结构和验证过程过于简单或没有,导致一旦攻破便可危害所有在网设备
  * APP的安全开发意识十分薄弱
  * 厂商合作之间的信任链单一,信任关系简单
  * 多模式设计下,短板效应明显,在某一模式安全性的缺失则导致整套安全系统崩溃
  * 对用户信息,设备的存储和查询,存在致命的缺陷,对用户信息无任何保护手段,很容易获得设备用户的对应关系
这些存在漏洞的点都很普遍并容易被探测和发现,而造成的危害和损失却是巨大的
而抛开技术上的问题，在实际的物理世界中，核心的问题在于厂商不够重视安全，没有一个很好的统一解决方案，对应漏洞反应平平，甚至予以忽视，导致IoT安全漏洞和事件频发，各种黑天鹅事件告急。
过去的事件都以在公网上的设备受到攻击而需求感染设备去扫描发现新的设备，而现在只要一攻破上述任一一条，则可以在存在RCE等高危漏洞情况下迅速感染所有在网设备，攻击的成本大为降低。对于IoT安全社会各界应该予以更为重复的重视。
#### 0x05 参考
  1. 
  2. 
  3. 
  4. 
  5. 
* * *