• If there exists no potential entry node e such that
R(e, c) + R(c, x) + r ≤ Re2e, then c cannot be the mid-
dle node in the circuit, and therefore must be the entry
node.
• Alternatively, if there exists no potential middle node
m such that R(c, m)+R(m, x)+r ≤ Re2e, then c cannot
be the entry node, and must be the middle node.
• If c has been identiﬁed as the entry node, then any
node m for which R(c, m) + R(m, x) + r > Re2e cannot
be in the circuit, and therefore m need not be tested.
• Similarly, if c has been identiﬁed as the middle node,
then any node e for which R(e, c) + R(c, x) + r > Re2e
cannot be in the circuit and need not be tested.
Each of these rules is somewhat conservative; the inequal-
ities do not take the RTT between the source and the entry
node into account, and thus the above criteria will likely re-
move only extreme outliers. The RTT information that Ting
provides can further speed up deanonymization by preferen-
tially testing nodes who are more likely to be on the circuit.
Our insight is as follows: Nodes choose circuits at random,
and therefore, if for node i to be on the path, the source
would have to be improbably close to or far from an en-
try node, then i is probably not on the path. Of course,
the source being very close to or far from i is not deﬁnitive
proof that i is not in the circuit, so we do not rule i out.
Instead, we assign a “score” to each node, and preferentially
Algorithm 1 Informed target selection for fast deanonymi-
zation.
1. For each node i who has not yet been ruled out:
(a) Enumerate all possible circuits C involving i, after
applying the above criteria for ignoring too-large
RTTs.
(b) Let R(c) denote the sum of RTTs of circuit c, and
let µ denote the average RTT among all pairs of
Tor nodes; then i’s score is minc∈C{|Re2e−(R(c)+
r + µ)|}.
2. Probe the node with the lowest score, and then apply
the criteria for ignoring too-large RTTs.
test nodes with the lowest score. More concretely, we ap-
ply Algorithm 1 at every iteration of the deanonymization
process.
This algorithm uses µ—the average RTT across the en-
tire all-pairs data supplied by Ting—to approximate the ex-
pected (average) RTT between the source and its entry node.
Thus, this algorithm chooses the node whose expected end-
to-end latency, R(c) + r + µ, most closely approaches the
measured end-to-end latency Re2e.
Weighted Node Selection.
As stated, our informed
target selection algorithm (Alg. 1) assumes that each node
in a Tor circuit is chosen uniformly at random from the set of
all active nodes. In practice, Tor no longer operates this way,
but rather assigns a weight to each node, reﬂecting how its
measured bandwidth compares to the overall population’s.
The beneﬁt of preferentially choosing higher-capacity nodes
is that it increases the throughput of the overall circuit, but
the downside is the circuits become more predictable. These
weights can be incorporated into our algorithm by simply
dividing each node’s score by the node’s weight. However,
in the remainder of this section, we evaluate Ting in its worst
case scenario—when all weights are equal (traditional Tor).
5.1.2 Evaluation
To evaluate how well RTT values can speed up deanony-
mization eﬀorts, we used Ting to generate an all-pairs RTT
dataset among a set of 50 randomly chosen Tor nodes. We
present the distribution of RTTs in Figure 11, and note that
the shape of the distribution is consistent with that from
Figure 8. Using this all-pairs dataset, we simulate three de-
anonymization techniques, each of which assumes the exis-
tence of a technique such as that described by Murdoch and
Danzeis [16] to brute-force probe whether a given Tor node
is on a circuit. For all of our results, we use 1000 runs from
our simulator, with the source chosen uniformly at random
from the set of Tor nodes. In addition to the two techniques
described above (that which ignores too-large RTTs, and our
informed target selection), we also include as a baseline an
RTT-unaware technique that simply brute-force tests nodes
until it has discovered the entire circuit.
The critical evaluation metric is how many probes it takes
to deanonymize a circuit. Recall that, because such brute-
force probes are more bandwidth-intensive and time-consuming
in practice, techniques which require fewer probes will ﬁn-
ish more quickly and with less impact on the network as a
whole.
297Figure 11: Distribution of RTTs from
running Ting on all pairs of a random
50-node set of Tor nodes.
Figure 12: Knowledge of RTT between
all Tor nodes speeds up deanonymiza-
tion.
Figure 13: RTT knowledge is particu-
larly useful when deanonymizing circuits
with lower end-to-end RTT.
Figure 12 shows the distribution of the fraction of nodes
each technique needed to probe in order to deanonymize
the circuit. Without any RTT knowledge, determining the
entry and middle nodes of the circuit requires probing a
median of 72% of the network. Simply ignoring too-large
RTT values improves this noticeably, requiring probes to
a median of 62% of the network.
Incorporating the more
intelligent target node selection described in Algorithm 1,
we see an even more drastic decline, requiring probes to
a median of 48% of the network. In other words, through
the application of Ting’s RTT information, deanonymization
eﬀorts can experience a 1.5× speedup.5
Next, we seek to better understand for what circuits Ting’s
information helps deanonymize. Intuitively, our deanonymi-
zation algorithms are best suited for circuits with low end-
to-end RTTs. As a simple example: if the end-to-end RTT
were 50ms, then any node with an RTT greater than 50ms
to the exit node could not be the middle node in the circuit.
On the other hand, if the end-to-end RTT were over one
second (larger than any single RTT we measured), then any
node could ostensibly be in the circuit.
Using the same 1000 runs from our simulator, we plot in
Figure 13 the fraction of nodes that we could ignore due to
too-large RTTs, and compare that to the end-to-end RTT—
from the source, through the circuit, to the destination. This
shows a strong correlation: the lower the end-to-end RTT,
the more nodes Ting helps us to rule out, while for the ab-
solute highest RTTs, Ting’s information was not helpful.
However, interestingly, Ting successfully speeds up deanon-
ymization eﬀorts of circuits with moderate to high RTTs.
We conclude that, along with the algorithms from this sec-
tion, Ting can considerably speed up the deanonymization
for most circuits.
5.1.3 Defenses
Unfortunately, defending against this kind of attack is dif-
ﬁcult; as long as there is a pair of nodes that provide lower
latency than other pairs, this deanonymization attack could
apply. One countermeasure would be to artiﬁcially inﬂate la-
tencies within a circuit, but the Tor designers do not appear
willing to accept this cost [7]. Another approach that would
5We have also evaluated the weighted version of our deanon-
ymization algorithms, and ﬁnd that, compared to a scheme
that tests nodes in decreasing order of weight, the Ting-
based approach speeds up deanonymization by a median
of 2×; an even greater improvement than with unweighted
node selection.
slow down, but not completely eliminate, this deanonymi-
zation attack would be to randomize the length of circuits.
The primary concern with this approach is that longer cir-
cuits typically result in greater latencies, but as we will show
in Section 5.2.2, latency measurements from Ting can guide
the creation of longer circuits without higher latency.
In summary, Ting’s ability to measure all-pairs RTT among
Tor nodes can considerably speed up existing deanonymiza-
tion techniques, particularly (though not exclusively) with
smaller end-to-end RTTs. We believe that these techniques
can be improved further, and that it is an interesting area
of future work.
5.2 Improving Path Selection in Tor
Recall that a typical Tor circuit consists of three relays:
one guard, one middle, and one exit. By default, a Tor client
selects these relays at random according to the bandwidth
capacity of each router, as reported by the set of trusted Tor
bandwidth authorities.6 The rationale behind using three
hops is that it is the minimum required to provide unlink-
ability between source and destination, and has thus been
expected to avoid extra end-to-end latency.
There have been considerable eﬀorts toward reducing end-
to-end RTTs [2, 28, 20, 8], but lacking the ability to ef-
ﬁciently predict a circuit’s RTT complicates these eﬀorts.
For instance, LASTor [2] relies on geographic distances as a
proxy for latencies; while we have shown a strong correlation
between distance and RTT (Section 4), we demonstrate here
that there are many instances where latency can be reduced
in ways that geographic distance cannot predict.
Here, we investigate whether explicit measurements can
guide path selection toward paths that have lower latency
or longer length at modest performance cost.
5.2.1 Triangle Inequality Violations
A triangle inequality violation (TIV) in routing occurs
when the lowest-latency path between two nodes s and d
is not the direct path between them (s ↔ d), but rather
through an intermediate (s ↔ r ↔ d). In other words, when
there is a TIV, the shortest distance between two points is
not a straight line, and a relay can provide access to this
shorter path [26, 15].
6Tor applies several other ﬁlters, such as requiring that re-
lays come from distinct /16s; our results extend to such
criteria, but we do not enumerate them here for ease of pre-
sentation.
 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 50 100 150 200 250 300 350 400CDFInter-Tor-node RTT (ms) 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1CDFFraction of nodes testedRTT-unawareIgnore too-large RTTs+ informed target selection 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 200 400 600 800 1000 1200Fraction of nodes ruled out implicitlyEnd-to-end circuit RTT (ms)298Figure 14: Savings from using a TIV relay instead of direct
paths between two Tor nodes.
Figure 15: TIV-capable pairs are not relegated to any par-
ticular range of RTTs.
Here, we investigate to what extent TIVs exist in Tor, and
whether they permit lower-latency paths to a wide range of
circuits. To investigate this question, we make use of our
50-node all-pairs Ting dataset, and simply identify all pairs
of nodes (s, d) such that there exists a node r for which
R(s, d) > R(s, r) + R(r, d). Surprisingly, we ﬁnd that, for
69% of all pairs of Tor nodes in our data, there exists at
least one circuit that results in a TIV.7
Figure 14 shows the distribution of the percentage im-
provement in RTT from using a TIV relay. Here, the x-axis
reﬂects the ratio between R(s, r) + R(r, d) to R(s, d). The
median decrease in latency is 7.5%; this is somewhat mod-
est, but an all-pairs RTT dataset allows us to choose relays
that oﬀer greater RTT savings: 10% of TIVs reduce RTTs
by 28% or more.
To show that TIVs in Tor are not speciﬁc to high or low la-
tency paths, we plot in Figure 15, for every TIV we ﬁnd, the
correlation between the default-path RTT and that through
the TIV relay. The number of available TIVs and over-
all savings are mostly consistent, regardless of the default
path’s RTT. Substantial drops below x = y typically indi-
cate performance-insensitive Internet routing; smaller drops
may indicate congestion. Greater detail about such paths is
provided by Detour [26] or PeerWise [15].
Using Ting, we are able to demonstrate the prevalence of
TIVs in the Tor network. This has two important ramiﬁ-
cations: First, geographic distance is an imperfect proxy for
RTTs in Tor. Distances do not violate the triangle inequal-
ity, while Tor often does. Direct measurements of node-to-
node latencies are necessary to ﬁnd these paths. Second,
the traditional assumption that longer circuits yield greater
end-to-end latency is not necessarily true:
longer circuits
can reduce latencies, if chosen in a way that favors TIVs.
Encouraged by this result, we now investigate: do circuits
that are long but quick compromise user anonymity?
7Since Ting estimates minimum RTTs, this indicates that
69% of pairs may exhibit at least one TIV, but does not
directly allow us to reason about the average reduction in
latency.
5.2.2 Longer Circuits
Tor’s default of three-hop circuits balances between ano-
nymity and end-to-end latencies, but are there longer cir-
cuits that actually reduce latencies? Longer circuits may
increase anonymity by frustrating tracing, but of course in-
creases the resource use at relays. To answer this question,
we again make use of the 50-node, all-pairs RTT dataset
provided by Ting, and calculate circuits with lengths from
3 to 10. We sample 10,000 random circuits for each length
(cid:96) and scale our results to the maximum number of circuits:
(cid:1).
(cid:0)50
(cid:96)
Round-Trip Times.
Figure 16 shows, for varying cir-
cuit lengths, how many circuits are available for a given
RTT. Clearly, circuits with more hops are able to obtain
higher maximum RTTs:
for instance, we identiﬁed no 3-
hop circuits in our dataset with RTT over 1 second, but
we identiﬁed over 1M 10-hop circuits with RTT over 2 sec-
onds. More interestingly, observe the range of 200–300ms;
in our dataset, we ﬁnd roughly 10,000 3-hop circuits able to
achieve RTTs in this range. But we are able to ﬁnd an order
of magnitude more 4-hop circuits able to achieve the same
RTTs—for 10-hop circuits, there are four orders of magni-
tude more circuits capable of achieving the same RTT. This
scales up so drastically because of how quickly (cid:0)50
(cid:1) grows:
(cid:96)
though the probability of any given (cid:96)-hop circuit having a
given RTT is low, there are many circuits for even moderate
sizes of (cid:96).
These results show that, if chosen with knowledge of inter-
Tor-node RTTs, longer paths can be used in lieu of default
3-hop paths without imposing greater RTTs.
Circuit Diversity.
One potential concern, however, is
that these long circuits with low latency reduce anonymity
by relying on a few well-connected nodes. To evaluate this
concern, we plot in Figure 17, for each circuit length, the