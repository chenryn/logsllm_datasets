Computer Science / www.isec.utulsa.edu 
How to Hack Your Mini Cooper: 
Reverse Engineering CAN Messages 
on Passenger Automobiles  
Jason Staggs 
Computer Science / www.isec.utulsa.edu 
Who is this guy? 
• Jason Staggs 
– Graduate Research Assistant 
• Institute for Information Security (iSec) 
• Crash Reconstruction Research Consortium (TU-CRRC) 
– TRUE Digital Security 
• Cyber Security Analyst  
Computer Science / www.isec.utulsa.edu 
Why do we hack cars? 
• Related work 
– “Comprehensive Experimental Analyses of Automotive Attack 
Surfaces” 
– “Experimental Security Analysis of a Modern Automobile” 
• Understanding computer and network systems on cars 
– Underlying CAN protocol and components lack of 
authentication and verification of messages 
• Understanding potential points of vulnerability 
– Vehicle network security is in its infancy 
• But most importantly… 
Computer Science / www.isec.utulsa.edu 
To prevent this.. 
Computer Science / www.isec.utulsa.edu 
From turning into this.. 
Computer Science / www.isec.utulsa.edu 
Because of this.. 
Computer Science / www.isec.utulsa.edu 
CAN Clock Project 
• Research project developed as a proof of concept 
– Manipulating CAN nodes via CAN network 
– Reverse Engineering CAN messages 
– 2003 Mini Cooper 
Computer Science / www.isec.utulsa.edu 
Background of vehicle communication networks 
 • Began in 1980s with General Motors 
• Common vehicle Protocols 
– CAN (Most widely used among manufactures) 
– FlexRay 
– KW2000 
– LIN 
– J1850 (GM/Chrysler) 
– J1939 (Heavy Trucks) 
– J1708/J1587 (Being phased out due to J1939) 
• 2008: All US cars use CAN for mandated EPA diag. 
Computer Science / www.isec.utulsa.edu 
Controller Area Networks 
• Bosh CAN standard 
– Developed in the 80s  
– European Manufactures were early adopters 
– Standard Format 
• 11-bit ID header 
• Mfg. use of proprietary IDs for each of their CAN components 
– Extended Format 
• 29-bit ID header 
• Used extensively by J1939 
Computer Science / www.isec.utulsa.edu 
CAN Frame 
– SOF – Start of Frame 
– Identifier – Unique identifier for message along with priority 
– RTR – Remote Transmission Request 
– IDE – Identifier extension (distinguishes between CAN standard and 
CAN extended) 
– DLC – Data Length Code (frames have up to 8 bytes of data) 
– CRC – Cyclic Redundant Check sum 
– ACK – Acknowledge 
– EOF – End of Frame 
– IFS – Intermission Frame Space 
Computer Science / www.isec.utulsa.edu 
Interconnected vehicle networks 
Computer Science / www.isec.utulsa.edu 
Electronic Control Units (ECUs) 
• ECUs designed to control : 
– Vehicle safety systems 
• Engine control unit 
• ABS braking system 
• Door locks 
– Infotainment systems 
• Radio Deck 
• HID units 
– The list goes on 
• Programmable ECUs 
– Allows MFGs to update firmware on ECUs 
• Average modern day car has ~70 ECUs 
Computer Science / www.isec.utulsa.edu 
Reverse Engineering CAN Messages 
• What we want to do: 
– Manipulate CAN enabled vehicle components 
• Problem: 
– Manufactures do not publish CAN message ID information about 
their various CAN components 
• Solution: 
– A method for visually correlating physical system interactions 
with identifiable patterns. (Humans are good at this) 
– Brute force (Tedious, and messy) 
Computer Science / www.isec.utulsa.edu 
Reverse Engineering CAN Messages 
• Passively captured CAN data during a staged test run 
– In this case it was a staged automotive collision..   
– Mini Cooper vs. GMC Envoy (Check out TU-CRRC website for 
killer videos) 
– Data capture lasted for roughly 90 seconds 
• Data Log gives us ~106,000 data entries of CAN 
messages 
Computer Science / www.isec.utulsa.edu 
Computer Science / www.isec.utulsa.edu 
CAN Data Log 
• Contained ~106,000 data entries 
• Bash “cut –d. –f3 cooperheadion.txt | sort | uniq –c” 
– Only 15 Unique CAN IDs!? 
ID Occurrences 
CAN IDs 
12706 
153 
12706 
1F0 
12706 
1F3 
9460 
1F5 
12707 
1F8 
8899 
316 
8899 
329 
Computer Science / www.isec.utulsa.edu 
Visually identifying CAN messages of interest 
0 
5 
10 
15 
20 
25 
30 
0 
10 
20 
30 
40 
50 
60 
70 
80 
90 
100 
Vehicle Speed (MPH) 
Time (sec) 
0x153 Byte 2 CAN Message 
Computer Science / www.isec.utulsa.edu 
Reverse Engineering CAN Messages 
• Speedometer and Tachometer CAN IDs 
– 2 methods 
• For each CAN ID, plot data values vs. timestamp in order to 
determine physical significance. 
• Given possible CAN IDs, fuzz data fields until needles start moving 
CAN Message ID Description 
0x153 Byte 2 
Speedometer (Vehicle Speed) 
0x316 Byte 3 
Tachometer (Engine Speed) 
0x329 
Various indicator lights 
0x61A 
Controls the messages being displayed on the tachometer 
LED screen. 
0x61F 
Tachometer along with various indicator lights 
Computer Science / www.isec.utulsa.edu 
Building the CAN network  
• CAN Bus 
– 18 gauge wire 
– 2 x 120 ohms terminating resistors 
– 12V DC power source 
– Arduino Uno microcontroller 
– CAN Bus Shield 
• MCP2515 CAN controller 
• MCP2551 CAN transceiver 
– Mini Cooper Instrument Cluster 
– Real time clock module RTC (for clock mode) 
Computer Science / www.isec.utulsa.edu 
Computer Science / www.isec.utulsa.edu 
Computer Science / www.isec.utulsa.edu 
Proof of Concept 
• Talking CAN with Arduino 
– Arduino and CAN Controller Libraries 
• MCP2515 (Communication with CAN transceiver) 
• SPI (Used for communications between Arduino and CAN shield) 
• 2 Modes of operation 
– Clock Mode 
– Demo Mode 
Computer Science / www.isec.utulsa.edu 
Demo 
Computer Science / www.isec.utulsa.edu 
Gaining physical access to CAN 
• Via OBD2 
• Tapping the CAN bus (vampire tap) 
– Under the hood 
– Breaking a powered side view mirror 
– Etc. 
• 0 to pwned for less then $100 
– Rogue Arduino CAN node 
• Potential conspirators 
– Mechanics 
– Car Rentals 
– Coworkers/Family/Friends/Ex-girlfriends/etc. 
Computer Science / www.isec.utulsa.edu 
Future Work / Conclusion 
• Access control between vehicle network components 
– ECU to ECU 
– OBD2 to ECU 
• Applying conventional NIPS & firewall methods to CAN 
– Message anomaly prevention depending on context? 
Computer Science / www.isec.utulsa.edu 
For more Information 
• TU Research 
– http://isec.utulsa.edu/ 
– http://tucrrc.utulsa.edu/ ← Check out our research and crash tests  
– http://tucrrc.utulsa.edu/canclock/ 
• CAN Standards/Docs 
– http://esd.cs.ucr.edu/webres/can20.pdf (CAN 2.0 Spec) 
– http://www.sae.org/standards/ 
Computer Science / www.isec.utulsa.edu 
Questions?? 
• PI:EMAIL