\+
``` screen
# mount --bind /usr/share/crypto-policies/back-ends/FIPS /etc/crypto-policies/back-ends
```
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
在 RHEL 8 中，`fips-mode-setup`{.literal}
命令无法在容器中正常工作，在这种情况下无法用来启用或检查 FIPS 模式。
:::
:::
:::
::: section
::: titlepage
# []{#using-the-system-wide-cryptographic-policies_security-hardening.html#ref_list-of-rhel-applications-using-cryptography-that-is-not-compliant-with-fips-140-2_using-the-system-wide-cryptographic-policies}使用与 FIPS 140-2 不兼容的加密的 RHEL 应用程序列表 {.title}
:::
红帽建议使用核心加密组件集中的库，因为它们可以保证传递所有相关的加密认证，如
FIPS 140-2，并遵循 RHEL 系统范围的加密策略。
请参阅 [RHEL 8
核心加密组件](https://access.redhat.com/articles/3655361){.link}
的文章，了解有关 RHEL 8
核心加密组件的概述、有关如何选择它们的信息、它们是如何集成到操作系统中的、它们如何支持硬件安全模块和智能卡，以及如何对它们应用加密认证。
除了下面的表外，在有些 RHEL 8 Z-stream 版本（如 8.1.1）中，Firefox
浏览器软件包已被更新，它们包含了 NSS
加密库的单独副本。这样，红帽希望避免在补丁发行版中重新构建这样一个低级组件所造成的影响。因此，这些
Firefox 软件包不使用 FIPS 140-2 验证的模块。
::: table
[]{#using-the-system-wide-cryptographic-policies_security-hardening.html#idm140058199025488}
**表 5.1. 使用与 FIPS 140-2 不兼容的加密的 RHEL 8 应用程序列表**
::: table-contents
+----------------------------------+----------------------------------+
| Application                      | 详情                             |
+:=================================+:=================================+
| FreeRADIUS                       | RADIUS 协议使用 MD5              |
+----------------------------------+----------------------------------+
| ghostscript                      | 自定义加密实现（MD5、R           |
|                                  | C4、SHA-2、AES）来加密和解密文档 |
+----------------------------------+----------------------------------+
| ipxe                             | 其中编译了 TLS                   |
|                                  | 的加密堆栈，但并没有使用         |
+----------------------------------+----------------------------------+
| libica                           | 通过 CPACF 指令的各种算法(如 RSA |
|                                  | 和 ECDH )的软件回退              |
+----------------------------------+----------------------------------+
| Ovmf（UEFI 固件）、Edk2、shim    | 完整的加密堆栈（OpenSSL          |
|                                  | 库的嵌入式副本）                 |
+----------------------------------+----------------------------------+
| perl-Digest-HMAC                 | HMAC, HMAC-SHA1, HMAC-MD5        |
+----------------------------------+----------------------------------+
| perl-Digest-SHA                  | SHA-1, SHA-224, ...​              |
+----------------------------------+----------------------------------+
| pidgin                           | DES、RC4                         |
+----------------------------------+----------------------------------+
| qatengine                        | 加密原语的混合硬件和软           |
|                                  | 件实现（RSA、EC、DH、AES、...​）  |
+----------------------------------+----------------------------------+
| samba                            | AES、DES、RC4                    |
| [^\[a\]^](#using-the-system-wide |                                  |
| -cryptographic-policies_security |                                  |
| -hardening.html#ftn.idm140058206 |                                  |
| 337904){#using-the-system-wide-c |                                  |
| ryptographic-policies_security-h |                                  |
| ardening.html#idm140058206337904 |                                  |
| .footnote}                       |                                  |
+----------------------------------+----------------------------------+
| valgrind                         | AES,                             |
|                                  | hashes                           |
|                                  | [^\[b\]^](#using-the-system-wide |
|                                  | -cryptographic-policies_security |
|                                  | -hardening.html#ftn.idm140058320 |
|                                  | 270448){#using-the-system-wide-c |
|                                  | ryptographic-policies_security-h |
|                                  | ardening.html#idm140058320270448 |
|                                  | .footnote}                       |
+----------------------------------+----------------------------------+
| ::: {#using-                     |                                  |
| the-system-wide-cryptographic-po |                                  |
| licies_security-hardening.html#f |                                  |
| tn.idm140058206337904 .footnote} |                                  |
| [^\[a\]^](#us                    |                                  |
| ing-the-system-wide-cryptographi |                                  |
| c-policies_security-hardening.ht |                                  |
| ml#idm140058206337904){.simpara} |                                  |
| 从 RHEL 8.3 开始，samba 使用与   |                                  |
| FIPS 兼容的加密。                |                                  |
| :::                              |                                  |
|                                  |                                  |
| ::: {#using-                     |                                  |
| the-system-wide-cryptographic-po |                                  |
| licies_security-hardening.html#f |                                  |
| tn.idm140058320270448 .footnote} |                                  |
| [^\[b\]^](#us                    |                                  |
| ing-the-system-wide-cryptographi |                                  |
| c-policies_security-hardening.ht |                                  |
| ml#idm140058320270448){.simpara} |                                  |
| 重新实施软硬件卸载操作，如       |                                  |
| AES-NI。                         |                                  |
| :::                              |                                  |
+----------------------------------+----------------------------------+
:::
:::
:::
::: section
::: titlepage
# []{#using-the-system-wide-cryptographic-policies_security-hardening.html#excluding-an-application-from-following-the-system-wide-crypto-policies_using-the-system-wide-cryptographic-policies}将应用程序从下列系统范围的加密策略中排除 {.title}
:::
您可以通过在应用程序中直接配置受支持的密码套件和协议来自定义应用程序所使用的加密设置。
您还可以从 `/etc/crypto-policies/back-ends`{.literal}
目录中删除与应用程序相关的符号链接，并使用您自定义的加密设置来替换它。此配置可防止对使用排除后端的应用程序使用系统范围的加密策略。此外，红帽不支持此修改。
::: section
::: titlepage
## []{#using-the-system-wide-cryptographic-policies_security-hardening.html#examples-of-opting-out-of-system-wide-crypto-policies_using-the-system-wide-cryptographic-policies}选择不使用系统范围的加密策略的示例 {.title}
:::
::: title
**wget**
:::
要自定义 `wget`{.literal} 网络下载器所使用的加密设置，请使用
`--secure-protocol`{.literal} 和 `--ciphers`{.literal} 选项。例如：
``` screen
$ wget --secure-protocol=TLSv1_1 --ciphers="SECURE128" https://example.com
```
如需更多信息，请参阅 `wget(1)`{.literal} 手册页中的
HTTPS(SSL/TLS)选项部分。
::: title
**curl**
:::
要指定 `curl`{.literal} 工具使用的密码，请使用 `--ciphers`{.literal}
选项，并提供以冒号分隔的密码列表作为值。例如：
``` screen
$ curl https://example.com --ciphers '@SECLEVEL=0:DES-CBC3-SHA:RSA-DES-CBC3-SHA'
```
如需更多信息，请参阅 `curl(1)`{.literal} 手册页。
::: title
**Firefox**
:::
尽管您无法在 `Firefox`{.literal} Web
浏览器中选择不使用系统范围的加密策略，但您可以在 Firefox
的配置编辑器中进一步限制受支持的密码和 TLS 版本。在地址栏中输入
`about:config`{.literal} ，并根据需要修改
`security.tls.version.min`{.literal} 选项的值。将
`security.tls.version.min`{.literal} 设置为 `1`{.literal}，允许将 TLS
1.0 作为最低要求，`security.tls.version.min 2`{.literal} 启用 TLS
1.1，如此等等。
::: title
**OpenSSH**
:::
要为您的 `OpenSSH`{.literal} 服务器选择不使用系统范围的加密策略，请将
`/etc/sysconfig/sshd`{.literal} 文件中带有 `CRYPTO_POLICY=`{.literal}
变量的行取消注释。更改后，您在 `/etc/ssh/sshd_config`{.literal} 文件中的
`Ciphers`{.literal} `、MAC`{.literal} `、KexAlgoritm`{.literal} s 和
GSSAPIKexAlgorithms``{=html} 部分指定的值不会被覆盖。详情请查看
`sshd_config(5)`{.literal} 手册页。
要为您的 `OpenSSH`{.literal}
客户端选择不使用系统范围的加密策略，请执行以下一个任务：
::: itemizedlist
-   对于给定的用户，使用 `~/.ssh/config`{.literal}
    文件中特定于用户的配置覆盖全局 `ssh_config`{.literal}。
-   对于整个系统，使用小于 50 的两位数字前缀指定
    `/etc/ssh/ssh_config.d/`{.literal}
    目录中的置入配置文件中加密策略，因此按字典顺序，它在
    `50-redhat.conf`{.literal} 文件之前，并带有 `.conf`{.literal}
    后缀，如 `49-crypto-policy-override.conf`{.literal}。
:::
详情请查看 `ssh_config(5)`{.literal} 手册页。
::: title
**Libreswan**
:::
有关详细信息，请参阅
[安全网络](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/securing_networks/){.link}
文档中的 [配置不使用系统范围加密策略的 IPsec
连接](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/securing_networks/configuring-a-vpn-with-ipsec_securing-networks#configuring-ipsec-connections-that-opt-out-of-the-system-wide-crypto-policies_configuring-a-vpn-with-ipsec){.link}
。
::: itemizedlist
**其它资源**
-   `update-crypto-policies(8)`{.literal} 手册页
:::
:::
:::
::: section
::: titlepage
# []{#using-the-system-wide-cryptographic-policies_security-hardening.html#customizing-system-wide-cryptographic-policies-with-subpolicies_using-the-system-wide-cryptographic-policies}使用子策略自定义系统范围的加密策略 {.title}
:::
使用这个流程来调整启用的加密算法或协议集。
您可以在现有的系统范围的加密策略之上应用自定义子策略，或者从头开始定义这样一个策略。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
RHEL 8.2 提供了对系统范围加密策略的自定义。
:::
::: orderedlist
**流程**
1.  签出到 `/etc/crypto-policies/policies/modules/`{.literal} 目录：
    ``` screen
    # cd /etc/crypto-policies/policies/modules/
    ```
2.  为您的调整创建子策略，例如：
    ``` screen
    # touch MYCRYPTO1.pmod
    # touch NO-AES128.pmod
    ```
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    在策略模块的文件名中使用大写字母。
    :::
3.  在您选择的文本编辑器中打开策略模块并插入修改系统范围加密策略的选项，例如：
    ``` screen
    # vi MYCRYPTO1.pmod
    ```
    ``` screen
    min_rsa_size = 3072
    hash = SHA2-384 SHA2-512 SHA3-384 SHA3-512
    cipher@TLS = -CHACHA20-POLY1305
    group@SSH = FFDHE-1024+
    ```
    ``` screen
    # vi NO-AES128.pmod
    ```
    ``` screen
    cipher = -AES-128-*
    ```
4.  将更改保存到模块文件中。
5.  将您的策略调整应用到 `DEFAULT`{.literal} 系统范围加密策略级别：
    ``` screen
    # update-crypto-policies --set DEFAULT:MYCRYPTO1:NO-AES128
    ```
6.  要使您的加密设置对已经运行的服务和应用程序有效，请重启系统：
    ``` screen
    # reboot
    ```
:::
::: itemizedlist
**其它资源**
-   `update-crypto-policies(8)`{.literal} 手册页中的
    `自定义策略`{.literal} 部分
-   `crypto-policies(7)`{.literal} 手册页中的
    `加密策略定义格式`{.literal} 部分
-   红帽博客文章 [在 RHEL 8.2
    中如何自定义加密策略](https://www.redhat.com/en/blog/how-customize-crypto-policies-rhel-82){.link}
:::
:::
::: section
::: titlepage
# []{#using-the-system-wide-cryptographic-policies_security-hardening.html#disabling-sha-1-by-customizing-a-system-wide-cryptographic-policy_using-the-system-wide-cryptographic-policies}通过自定义系统范围的加密策略来禁用 SHA-1 {.title}
:::
因为 SHA-1
哈希函数本身存在弱设计，并且升级加密分析使其容易受到攻击，所以 RHEL 8
默认不使用 SHA-1。然而，一些第三方应用程序（如公共签名）仍然在使用
SHA-1。要在您系统的在签名算法中禁用 SHA-1，您可以使用
`NO-SHA1 `{.literal} 策略模块。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}