###  1\. 非约束委派
Microsoft在Windows 2000中实现了Kerberos“不受约束的委托”，从而启用了这种级别的委托。
非约束委派的配置如下
服务(如JACKSON-PC$) 被配置了非约束的委派，那么JACKSON-PC$可以接受任何用户的委派的去请求其他所有服务。在协议层面的实现就是，某个用户委托JACKSON-PC$去访问某个服务，那么这个用户会将
TGT（在TGS里面）发送到JACKSON-PC$并缓存到LSASS中，以方便以后使用。 然后JACKSON-PC$模拟用户去请求某个服务。
配置了非约束委派的用户的userAccountControl 属性有个FLAG位 TrustedForDelegation
关于userAccountControl 每一位对应的意义可以看[Converting AD UserAccountControl Attribute
Values](http://woshub.com/decoding-ad-useraccountcontrol-value/%20),(我们在LDAP篇也会详细介绍)，其中 TRUSTEDFORDELEGATION 对应是 0x80000 ，也就是 524288 。
###  2\. 约束委派
微软很早就意识到非约束委派并不是特别安全，在 Windows 2003上发布了”约束”委派。 其中包括一组 Kerberos
协议扩展，就是本文之前提到的两个扩展 S4U2Self 和
S4U2Proxy。配置它后，约束委派将限制指定服务器可以代表用户执行的服务。这需要域管理员特权(其实严谨一点是SeEnableDelegation特权，该特权很敏感，通常仅授予域管理员)才能为服务配置域帐户，并且将帐户限制为单个域。
约束委派的配置如下
计算机用户(既JACKSON-PC$) 被配置了约束的委派，那么JACKSON-PC$可以接受任何用户的委派的去请求特定的服务。具体过程是收到用户的请求之后，首先代表用户获得针对服务自身的可转发的kerberos服务票据(S4U2SELF)，拿着这个票据向KDC请求访问特定服务的可转发的TGS(S4U2PROXY)，并且代表用户访问特定服务，而且只能访问该特定服务。
相较于非约束委派，约束委派最大的区别也就是配置的时候选择某个特定的服务，而不是所有服务。
配置了约束委派的用户的userAccountControl 属性有个FLAG位 TrustedToAuthForDelegation 。
关于userAccountControl 每一位对应的意义可以看[Converting AD UserAccountControl Attribute
Values](http://woshub.com/decoding-ad-useraccountcontrol-value/%20),其中
TRUSTEDTOAUTHFORDELEGATION 对应是 0x1000000 ，也就是 16777216 。
约束的资源委派，除了配置TRUSTEDTOAUTHFORDELEGATION 之外，还有个地方是存储对哪个spn 进行委派的，位于msDS-AllowedToDelegateTo
最后来理一理约束委派的整个流程。
主要是有四个角色的存在：
  1. 访问服务的用户(这里面是administrator)
  2. 接受委派的服务1(这里面是JACKSON-PC$）
  3. 要访问的服务2(这里面是CIFS/WIN-JQO4OSMOGK2.JMU.com)
  4. KDC（Key Distribution Center）密钥分发中心 kerberos
首先先做一些配置。配置服务1 到服务2的约束委派
整个完整的流程是
服务1 使用自己的hash向KDC申请一个TGT票据，注意在KDC
Option里面选择FORWARDABLE标志位，这样的话请求的TGT票据就是可转发的TGT票据。
服务1
代表用户申请一个获得针对服务1自身的kerberos服务票据(这一步就是S4U2SELF，对于这一步有疑问的可以返回前面的S4U2SLEF看看)，这一步生成的TGS票据是可转发的TGS票据。
服务1可以使用来自用户的授权(
在S4U2SELF阶段获得的可转发的TGS)，然后用该TGS(放在AddtionTicket里面)向KDC请求访问服务2的TGS
###  3\. 基于资源的约束委派
为了配置受约束的委派，必须拥有SeEnableDelegation特权，该特权很敏感，通常仅授予域管理员。为了使用户/资源更加独立，Windows
Server
2012中引入了基于资源的约束委派。基于资源的约束委派允许资源配置受信任的帐户委派给他们。基于资源的约束委派将委派的控制权交给拥有被访问资源的管理员。
基于资源的约束委派只能在运行Windows Server 2012 R2和Windows Server 2012的域控制器上配置，但可以在混合模式林中应用。
这种约束委派的风格与传统约束委派非常相似，但配置相反。从帐户A到帐户B的传统约束委派在msDS-AllowedToDelegateTo属性中的帐户A上配置，并定义从A到B的“传出”信任，而在msDS-AllowedToActOnBehalfOfOtherIdentity属性中的帐户B上配置基于资源的约束委派，并定义从A到B的“传入”信任，见下图。
最后来理一理基于资源的约束委派的整个流程。
主要是有四个角色的存在：
  1. 访问服务的用户(这里面是administrator)
  2. 接受委派的服务1(这里面是JACKSON-PC$）
  3. 要访问的服务2(这里面是CIFS/WIN-JQO4OSMOGK2.JMU.com)
  4. KDC（Key Distribution Center）密钥分发中心 kerberos
首先先做一些配置。在服务2上 配置服务1 到服务2的基于资源的约束委派(不同于传统的约束委派需要域管的权限才能配置，只有拥有服务2
的权限就可以配置基于资源的约束委派)
整个完整的流程是
  1. 服务1 使用自己的hash向KDC申请一个TGT票据。
  2. 服务1 代表用户申请一个获得针对服务1自身的kerberos服务票据(这一步就是S4U2SELF，这一步就区别传统的约束委派，在S4U2SELF里面提到，返回的TGS可转发的一个条件是服务1配置了传统的约束委派，kdc会检查服务1 的TrustedToAuthForDelegation位和msDS-AllowedToDelegateTo 这个字段，由于基于资源的约束委派，是在服务2配置，服务2的msDS-AllowedToActOnBehalfOfOtherIdentity属性配置了服务1 的sid，服务1并没有配置TrustedToAuthForDelegation位和msDS-AllowedToDelegateTo 字段。因此这一步返回的TGS票据是不可转发的。
  3. 服务1可以使用来自用户的授权( 在S4U2SELF阶段获得的不可转发的TGS)，然后用该TGS(放在AddtionTicket里面)向KDC请求访问服务2的可转发的TGS
## 0x06 相关的安全问题
###  1\. pass the ticket
Kerbreos 除了第一步ASERQ是使用时间戳加密用户hash验证之外，其他的步骤的验证都是通过票据，这个票据
可以是TGT票据或者TGS票据。因为票据里面的内容主要是sessionkey和ticket(使用服务hash加密的，服务包括krbtgt)，拿到票据之后。我们就可以用这个票据来作为下阶段的验证了。
###  2\. kerberoasting
正因为TGSREP里面ticket里的encpart(是ticket里面的encpart,不是最外层的encpart,最外层的encpart是使用ASREP里面的sessionkey加密的，这个sessionkey我们已经有了，没有意义)
是使用要请求的服务的hash加密的，所以我们可以通过爆破获得服务的hash。这个问题存在的另外一个因素是因为用户向KDC发起TGSREQ请求，不管用户对服务有没有访问权限，只要TGT正确，那么肯定会返回TGS。其实ASREQ里面的服务就是krbtgt，也就是说这个同样用于爆破AS_REP里面的ticket部分的encpart得到krbtgt的hash，但是之所以在网上没见到这种攻击方式是因为krbtgt的密码是随机生成的，也跑不出来.
sname 部分填写要爆破部分的spn
然后按照format(“$krb5tgs${0}$*{1}${2}${3}*${4}${5}”, encType, userName, domain,
spn, cipherText.Substring(0, 32), cipherText.Substring(32))就可以拼接处hash
cat(13100)能跑的hash。
这里面只做漏洞原理演示。方便的工具化的利用参见部分相关的工具
###  3\. 白银票据
在TGS_REP里面的ticket的encpart是使用服务的hash进行加密的，如果我们拥有服务的hash，就可以给我们自己签发任意用户的TGS票据，这个票据也被称为白银票据。相较于黄金票据，白银票据使用要访问服务的hash，而不是krbtgt的hash，由于生成的是tgs票据，不需要跟域控打交道，但是白银票票据只能访问特定服务。但是要注意的一点是，伪造的白银票据没有带有有效KDC签名的PAC。如果将目标主机配置为验证KDC
PAC签名(关于PAC的详细信息，将在下一篇文章里面详细介绍)，则银票将不起作用。
###  4\. 非约束委派攻击
非约束委派的安全问题就是如果我们找到配置了非约束的委派的账户，比如这里面的JACKSON-PC$，并且通过一定手段拿下该账户的权限，然后诱导域管访问该JACKSON-PC$，这个时候域管会将自己TGT发送到JACKSON-PC$并缓存到LSASS中，那我们就可以从LSASS中导出域管的TGT票据，然后通过PTT，从而拥有域管的权限。
1.找到配置了非约束的委派的账户
因为配置非约束的委派的账户的UserAccount 配置了TRUSTEDFORDELEGATION flag位，TRUSTEDFORDELEGATION
对应是 0x80000 ，也就是 524288 。
所以对应的LDAP过滤规则是
(&(objectCategory=computer)(objectClass=computer)(userAccountControl:1.2.840.113556.1.4.803:=524288))
可以通过这个规则进行查找
以adfind为例(其他支持ldap的工具都可以实现)
2.通过一定手段拿下这台配置了非约束委派的账户的权限(比如这里面的JACKSON-PC$)
3.通过一定手段(比如通过打印机的那个漏洞)诱导域管访问我们拿下的配置了非约束委派的账户
4.最后导出票据然后进行pass the ticket
###  5\. 约束委派攻击
约束委派的安全问题就是如果我们找到配置了约束委派的服务账号，比如这里面的JACKSON-PC$，并且通过一定手段拿下该账号所在的机子。我们就可以利用这个服务账号代表任意用户(这里面很重要的一点是服务代表用户获得针对服务自身的kerberos票据这个过程，服务是不需要用户的凭据的)进行s4u2self获得一个可转发的票据，然后把获取到的票据用于s4u2proxy(作为AddtionTicket)，从未获取一个可转发的TGS，服务就可以代替任意用户访问另外一个服务(既被配置的约束委派的服务，这里面就是cifs/WIN-JQO4OSMOGK2.JMU.com）。
相较于非约束的委派，约束的委派并不需要用户过来访问就可以代表该用户，但是只能访问特定的服务(对于 HOST SPN，则可以实现完全的远程接管。 对于
MSSQLSvc SPN，则可以拿到 DBA 权限。 对于 CIFS SPN 则可以实现完全的远程文件访问。对于 HTTP SPN
则可能实现接管远程网络服务，而对于 LDAP 则可以执行 DCSync;) ，对于 HTTP 或 SQL
服务帐户，即使它们没有提升目标服务器上的管理员权限，也可能使用 Rotten Potato 进一步滥用，提权至 SYSTEM
的权限)，不像非约束的委派哪个可以访问任意服务。
1.找到配置了非约束的委派的服务账户1
因为配置非约束的委派的机子的UserAccount 配置了TRUSTEDTOAUTHFORDELEGATION
flag位，TRUSTEDTOAUTHFORDELEGATION 对应是 0x1000000 ，也就是 1677721
所以对应的LDAP过滤规则是