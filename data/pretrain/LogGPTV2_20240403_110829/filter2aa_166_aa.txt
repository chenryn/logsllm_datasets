White Paper 
// PIN Automatic Try Attack 
July 12th, 2021 
metabaseq.com 
PINATA  
ATTACK 
Salvador Mendoza â€“ Ocelot Offensive Security Team  
PINATA (PIN Automatic Try Attack)   
// Summary of Findings 
It is possible to brute force all 10,000 PIN combinations, from 0000 to 9999, in millions of physical EMV 
cards. This attack is achievable by abusing an inadequate issuer business practice to reset the PIN 
RETRY Counter (PRC) and by misusing the classical "Plain PIN by ICC" verification method. This 
compromising behavior occurs when an issuer responds with the Authorization Response Code (ARC) 
to generate the Transaction Certificate (TC) application cryptogram which resets the PIN RETRY 
Counter even if the card did not finish the transaction normally. A compromised PIN might lead to 
greater fraudulent transactions due to the ability to evade the issuer antifraud algorithm mechanisms 
because it will be impossible to differentiate between the owner of the card and the malicious 
individual. 
// Introduction 
Cardholder Verification Method (CVM) is a mechanism used to verify a proper transaction when a user 
tries to employ a contact Europay, Mastercard, Visa (EMV) smart card. These verification values are 
prioritized by implementing an ordered list that is stored in the Integrated Circuit Card (ICC). 
The terminal or PoS have to determine which CVM the card will perform. To implement this 
communication, the card and terminal interchange messages through the Application Protocol Data 
Unit (APDU) protocol that is standardized by the ISO 7816 application layer. The terminal sends 
commands to the card that are also named TPDU or Terminal APDU command; then the card will 
process every command and answer back its response. In a contact transaction, the CVM is specified 
in the 8E tag container. Each terminal command or card answer has to follow a specific format 
structure (see Figure 1). 
. 
 Figure 1. Command and response APDU format 
Following specific logic rules to process a transaction, the terminal and EMV smart cards share 
information to decide if the transaction will be authorized or if it will be declined. One of the most 
important stages is the verification process.  
// Strange Cardholder Verification Methods (CVM) 
EMV cards normally initialized by selecting an application depending on the list from the 
"1PAY.SYS.DDF01" file. Then, the Read Record process will obtain detailed card information, such as, 
primary account number, expiration date or digital signatures among other information. This process 
will continue through different steps where the card and terminal share a root cryptographic key to 
process the transaction. After the card authentication process, comes the PIN verification stage. 
The CVM list determines which rule will apply first and what will be the order to verify the transaction. If 
a rule, for some reason, could not be applied, the next will take place depending on the terminal 
technology. A smart card record contains the CVM list, (response from Appendix A - Terminal 
command 21): 
Card response  52 bytes: 90 00  [I] Command successfully executed (OK). 
0000:  70 30 9F 0D 05 BC 50 BC 88 00 9F 0E 05 00 00 00   
0010:  00 00 9F 0F 05 BC 70 BC 98 00 8E 12 00 00 00 00   
0020:  00 00 00 00 42 03 44 03 41 03 1E 03 1F 03 9F 4A  
0030:  01 82 90 00  
To interpret this information is necessary to decode it using type-length-value or tag-length-value (TLV) 
mechanism. 
Figure 2: 70 EMV Proprietary Template 
To understand the CVM list is necessary to break every method apart, highlighted in yellow at Figure 2. 
4203 Encrypted PIN online, if terminal supports CVM 
4403 Encrypted PIN by ICC, if terminal supports CVM 
4103 Plain PIN by ICC, if terminal supports CVM 
1E03 Signature, if terminal supports CVM 
1F03 No CVM required, if terminal supports CVM 
This will be the order that the terminal will take to apply the verification method. Starting with 
"Encrypted PIN online, if terminal supports CVM" all the way to "No CVM required" verification method.  
Each CVM rule is divided into 2 bytes, the configuration of each one is specified in the EMV 4.3 Book 3, 
Page 162: https://www.emvco.com/wp-
content/uploads/2017/05/EMV_v4.3_Book_3_Application_Specification_20120607062110791.pdf  
Figure 3: CVM Codes from EMV 4.3 Book 
For example, one strange case is the CVM rule "4103". The leftmost byte is "0x41"; If it is converted to 
binary: "0100 0001", we can confirm that specific rule does not apply to any of the CVM Code rules at 
Table 39. The same behavior applies to other methods: 
4203: byte 0x42 = 0100 0010 
4403: byte 0x44 = 0100 0100 
Analyzing the previous methods, none of them seems to follow a normal CVM rule from the EMV 
standardization book. Against the verification essence, the bit 7 suggests that if the CVM is 
unsuccessful, apply the CV rule as success, making incomprehensible and inappropriate how it handles 
the CVM verification. 
//"Plain PIN by ICC" Verification  
A brute force attack is a technique to identify a possible password or, in this case, a PIN, by constant 
queries until the system gives access or confirms that that PIN request was successfully verified. To 
protect against this attack, the card by itself has a PIN RETRY Counter which indicates how many tries 
are available to process a PIN attempt. Normally, this counter is limited to 3 attempts, protecting any 
chance to identify a 4 digit PIN with 10,000 possibilities. If a client attempts 3 times in a row with an 
incorrect PIN, the EMV smart card will set this counter to zero and block any more attempts to the PIN 
mechanisms.  
To follow the Cardholder Verification Method, the EMV smart card has to pass the card authentication. 
After this, the normal process starts reading data from the PIN RETRY Counter. This will confirm that 
the card has enough tries to attempt a PIN. Then, the terminal will request to enter the PIN, and this will 
be sent in plaintext to the Integrated Circuit Card (ICC) to be verified. This occurs by sending a specific 
terminal APDU command and expecting a card APDU response.  
Example of an APDU command to verify "0717" PIN: 
00 20 00 80 08 24 07 17 ff ff ff ff ff 
All possible EMV Card responses: 
90 00 = indicates that the PIN is correct 
63 C2 = indicates wrong PIN and it has two more attempts left 
63 C1 = indicates wrong PIN and it has one more attempt left 
63 C0 = indicates wrong PIN and it has no more attempts left 
Figure 4: Brute Force Trigger 
Normally, in a secure EMV card, when the smart card responds with 63 C0, it will be impossible to keep 
requesting the verification command because it will answer with an error 69 83 (Authentication method 
blocked). This is a normal smart card behavior to protect itself against brute force attacks.  
If the PIN is verified, it will start the transaction authorization process. In this step, the cryptogram 
generation is processed.  
Figure 5: Transaction Authentication Process 
(Source: Chip and PIN is Broken white paper) 
 // The Compromising Business Practice 
After a malicious individual makes 3 incorrect PIN attempts, the card will respond with 63 C0, referring 
to the fact that it has no more PIN attempts left. But if the EMV card Cardholder Verification Method 
contains the "Plaintext Verification by ICC" rule, the PIN RETRY Counter could be reset to its previous 
limit. This could be perpetrated by making a real contact EMV payment or by simulating one, using 
another type of verification method, such as signature or no verification at all. The important part of this 
step is to generate a Transaction Certificate (TC) Application Cryptogram; this happens in the last part 
of the authorization scheme. An example of this response is located at Appendix A - Terminal 
command 27. 
 Figure 6: Vulnerability flow 
To avoid spending real money from an account and run the brute force attack simultaneously, a 
malicious user can implement a Man-in-The-Middle (MiTM) device to control the terminal commands 
and the PIN and Chip card responses. With this MiTM device, the attacker can discard the last card 
response (from Terminal command 27) and make it seem that it was a communication error. As a 
result, the terminal will close the transaction process without charges. At this point, the EMV card 
already reset the PIN RETRY Counter using a bad practice policy from the issuer response (Appendix B: 
Terminal command 27). Subsequently, a malicious user has the opportunity to try 3 more different PINs 
and repeat this loop until a correct PIN is found.  
  Figure 7: Brute force attack with MitM device 
// ELMA: MiTM Setup Device 
For the MiTM attack, we implemented a special tool called ELMA. It is a specialized Metabase Q tool for 
contact EMV technology. 
  Figure 8: Metabase Q ELMA device for contact EMV technology 
ELMA is capable of controlling the whole communication between the terminal and EMV card. In its 
toolset, ELMA can add, edit or delete commands or responses throughout the communication process. 
Adding that it could simulate transactions to run brute force attacks against the Plain PIN verification 
method.  
ELMA processes commands and responses before they arrive at the respective destination, making it 
possible to alter the information in real-time. The steps that follow are the communication process 
using ELMA. 
1. ELMA emulates a physical EMV card when its connector is inserted in the terminal card slot. 
2. The terminal sends the first command. 
3. ELMA intercepts the command and checks if it needs to do something specifically for that 
command. After that, it sends the command to the real EMV bank card. 
4. The client-side uses an APDU Interceptor software to move data from the contact card reader 
connected over USB to ELMA. 
5. The card's response will pass to the ELMA client to check if it needs to be processed, then ELMA 
will emulate that response to the terminal. 
6. The next terminal command will follow the same pattern from step 2. 
  Figure 9: Example ELMA configuration 
// ELMA PoC (Proof of Concept) 
To reproduce the PIN brute force attack â€“ now referred to as the PIN Automatic Try Attack or PINATA -
ELMA first simulates a transaction. But it closes the communication just before the last card response: 
TC Application Cryptogram. After that, ELMA initializes a separate session to the physical card reader; 
this will execute the same commands that the terminal sent in the previous simulated transaction.   
  Figure 10: Physical card reader session 
When the card is in the Cardholder Verification Stage, ELMA will test 3 consecutive PINs if the card 
answers with a PIN Retry Counter greater than 1. If no attempt is verified, ELMA will start the process 
again to simulate another transaction to reset the PIN Retry Counter. This process will continue until it 
finds the correct PIN. 
  Figure 11: PINATA Attack POC with ELMA 
// Recommendations 
The affected issuers should apply strict business policies regarding the reset of pin retry counters to 
protect themselves against the abuse of PINATA attack. 
Analyzing the ARC requests in a specific time frame could be a factor to detect the PINATA attack 
against a card. Regarding the dimensions of this physical attack, it is recommendable to keep the PIN 
RETRY Counter value and do not reset it after the generation of the TC application cryptogram.  
Card issuing organizations wanting to ensure they have taken the required steps to mitigate the PINATA 
attack can contact Metabase Q at: 
PI:EMAIL 
+1 (628) 225-1281 
+52 55 2211 0920 
// Timeline 
March 2, 2021: Found an inadequate PIN RETRY Counter reset practice in some contact EMV cards 
March 3, 2021: Some EMV cards with Plain PIN by ICC verification identified as affected  
March 4, 2021: ELMA MiTM tool setup  
March 4, 2021: Noticed the severity of the issue, Metabase Q started Responsible Disclosure report  
March 5, 2021: Testing different brand cards 
March 6, 2021: Sent report to affected companies 
March 12, 2021: Discarded a physical/applet issue  
March 12, 2021: Concluded a wrong backend implementation on the issuer side  
March 15, 2021: Responsible company alert the affected card issuers 
About Metabase Q 
Metabase Q protects organizations from financial and reputational losses with smarter cybersecurity. 
Through continuous audit and analysis, Metabase Q calibrates cyber defenses that deliver security 