**先决条件**
-   您知道 IdM 管理员密码。
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
:::
::: orderedlist
**流程**
1.  创建一个清单文件，如 `inventory.file`{.literal}，并使用目标 IdM
    服务器列表定义 `ipaserver`{.literal} ：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
2.  使用必要的主机组信息，创建 Ansible playbook
    文件。要简化此步骤，您可以复制并修改
    `/usr/share/doc/ansible-freeipa/playbooks/user/ensure-hostgroup-is-absent.yml`{.literal}
    文件中的示例。
    ``` literallayout
    ---
    - name: Playbook to handle hostgroups
      hosts: ipaserver
      become: true
      tasks:
      - Ensure host-group databases is absent
        ipahostgroup:
          ipaadmin_password: MySecret123
          name: databases
          state: absent
    ```
    此 playbook 确保 IdM 中缺少 [**databases**]{.strong}
    主机组。`state: absent`{.literal} 表示从 IdM
    中删除主机组的请求，除非它已被删除。
3.  运行 playbook：
    ``` literallayout
    $ ansible-playbook -v -i path_to_inventory_directory/inventory.file path_to_playbooks_directory/ensure-hostgroup-is-absent.yml
    ```
:::
::: orderedlist
**验证步骤**
1.  以 admin 用户身份登录 `ipaserver`{.literal} ：
    ``` literallayout
    $ ssh PI:EMAIL
    Password:
    [admin@server /]$
    ```
2.  为 admin 请求 Kerberos ticket：
    ``` literallayout
    $ kinit admin
    Password for PI:EMAIL:
    ```
3.  显示您没有保证的主机组的信息：
    ``` literallayout
    $ ipa hostgroup-show databases
    ipa: ERROR: databases: host group not found
    ```
:::
IdM 中不存在 [**databases**]{.strong} 主机组。
:::
::: section
::: titlepage
# []{#managing-host-groups-using-Ansible-playbooks_using-ansible-to-install-and-manage-idm.html#ensuring-the-absence-of-member-managers-from-idm-host-groups-using-ansible-playbooks_managing-host-groups-using-Ansible-playbooks}使用 Ansible playbook 确保 IdM 主机组中没有成员管理器 {.title}
:::
以下流程描述了确保使用 Ansible playbook 在 IdM
主机和主机组中存在成员管理器。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
-   您必须具有要作为成员管理器删除的用户或用户组的名称，以及它们所管理的主机组的名称。
:::
::: orderedlist
**流程**
1.  创建一个清单文件，如 `inventory.file`{.literal}，并在该文件中定义
    `ipaserver`{.literal} ：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
2.  使用必要的主机和主机组成员管理信息创建一个 Ansible playbook 文件：
    ``` literallayout
    ---
    - name: Playbook to handle host group membership management
      hosts: ipaserver
      become: true
      tasks:
      - name: Ensure member manager host and host group members are absent for group_name
        ipahostgroup:
          ipaadmin_password: MySecret123
          name: group_name
          membermanager_user: example_member
          membermanager_group: project_admins
          action: member
          state: absent
    ```
3.  运行 playbook：
    ``` literallayout
    $ ansible-playbook -v -i path_to_inventory_directory/inventory.file path_to_playbooks_directory/ensure-member-managers-host-groups-are-absent.yml
    ```
:::
::: title
**验证步骤**
:::
您可以使用
`ipa group-show 命令验证 group _name 组是否不包含 example _member 或 project_admins`{.literal}
作为成员管理器：
::: orderedlist
1.  以管理员身份登录到 `ipaserver`{.literal} ：
    ``` literallayout
    $ ssh PI:EMAIL
    Password:
    [admin@server /]$
    ```
2.  显示有关 [*testhostgroup*]{.emphasis} 的信息：
    ``` literallayout
    ipaserver]$ ipa hostgroup-show group_name
      Host-group: group_name
      Member hosts: server.idm.example.com
      Member host-groups: testhostgroup2
    ```
:::
::: itemizedlist
**其它资源**
-   请参阅 `ipa hostgroup-add-member-manager --help`{.literal}。
-   请参阅 `ipa`{.literal} man page。
:::
:::
:::
[]{#defining-idm-password-policies_using-ansible-to-install-and-manage-idm.html}
::: chapter
::: titlepage
# []{#defining-idm-password-policies_using-ansible-to-install-and-manage-idm.html#defining-idm-password-policies_using-ansible-to-install-and-manage-idm}第 17 章 定义 IdM 密码策略 {.title}
:::
本章论述了 Identity Management(IdM)密码策略，以及如何使用 Ansible
playbook 在 IdM 中添加新的密码策略。
::: section
::: titlepage
# []{#defining-idm-password-policies_using-ansible-to-install-and-manage-idm.html#what-is-a-password-policy_defining-idm-password-policies}什么是密码策略 {.title}
:::
密码策略是密码必须满足的一组规则。例如，password
策略可以定义最小密码长度和最大密码生命周期。受此策略影响的所有用户都必须设置足够长的密码，并经常更改密码以满足指定条件。这样，密码策略有助于降低某人发现和滥用用户密码的风险。
:::
::: section
::: titlepage
# []{#defining-idm-password-policies_using-ansible-to-install-and-manage-idm.html#password-policies-in-idm_defining-idm-password-policies}IdM 中的密码策略 {.title}
:::
密码是 Identity Management(IdM)用户对 IdM Kerberos
域进行身份验证的最常用方式。密码策略定义了这些 IdM
用户密码必须满足的要求。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
IdM 密码策略在底层 LDAP 目录中设置，但 Kerberos
密钥分发中心(KDC)强制执行密码策略。
:::
[密码策略属性列出了您可以在](#defining-idm-password-policies_using-ansible-to-install-and-manage-idm.html#tab-password-policy-attributes_defining-idm-password-policies "表 17.1. 密码策略属性"){.link}
IdM 中定义密码策略的属性。
::: table
[]{#defining-idm-password-policies_using-ansible-to-install-and-manage-idm.html#tab-password-policy-attributes_defining-idm-password-policies}
**表 17.1. 密码策略属性**
::: table-contents
+--------------+--------------------------+--------------------------+
| 属性         | 解释                     | 示例                     |
+:=============+:=========================+:=========================+
| 最大生命周期 | 密码                     | 最大生命周期 = 90        |
|              | 在必须重置密码之前有效的 |                          |
|              | 最长时间（以天为单位）。 | 用户密码仅有效 90        |
|              |                          | 天。之后，IdM            |
|              |                          | 会提示用户更改它们。     |
+--------------+--------------------------+--------------------------+
| Min 生命周期 | 两个密码                 | Min Life = 1             |
|              | 更改操作之间必须经过的最 |                          |
|              | 短时间（以小时为单位）。 | 用户更改                 |
|              |                          | 密码后，他们必须至少等待 |
|              |                          | 1 小时后再重新更改密码。 |
+--------------+--------------------------+--------------------------+
| 历史记录大小 | 存储的之前密码的数量     | 历史记录大小 = 0         |
|              | 。用户无法重复使用其密码 |                          |
|              | 历史记录中的密码，但可以 | 在这种情况下，密码历     |
|              | 重复利用未存储的旧密码。 | 史记录为空，用户可以重复 |
|              |                          | 使用他们之前的任何密码。 |
+--------------+--------------------------+--------------------------+
| 字符类       | 用户                     | 字符类 = 0               |
|              | 必须在密码中使用的不同字 |                          |
|              | 符类别的数量。字符类为： | 需要的默认类数为         |
|              |                          | 0。要配置数字，请使用    |
|              | \* 大写字符              | `--minclasses`{.literal} |
|              |                          | 选项运行                 |
|              | \* 小写字符              | `ipa                     |
|              |                          |  pwpolicy-mod`{.literal} |
|              | \* 数字                  | 命令。                   |
|              |                          |                          |
|              | \*                       | 另请参阅下表中的         |
|              | 特殊字符，如逗           | [重要](#defining-id      |
|              | 号(,)、句点(.)、星号(\*) | m-password-policies_usin |
|              |                          | g-ansible-to-install-and |
|              | \* 其他 UTF-8 字符       | -manage-idm.html#english |
|              |                          | -alphabet "重要"){.xref} |
|              | 当一个字符               | 备注。                   |
|              | 连续使用三次或更多次时， |                          |
|              | 会将该字符类减一。例如： |                          |
|              |                          |                          |
|              | \* `Secret1`{.literal}   |                          |
|              | 有 3                     |                          |
|              | 个                       |                          |
|              | 字符类：大写、小写、数字 |                          |
|              |                          |                          |
|              | \* `Secret111`{.literal} |                          |
|              | 具有 2                   |                          |
|              | 个字                     |                          |
|              | 符类：大写、小写、数字和 |                          |
|              | -1 折扣（重复使用        |                          |
|              | `1`{.literal} ）         |                          |
+--------------+--------------------------+--------------------------+
| Min length   | 密码中的最少字符数.      | Min length = 8           |
|              |                          |                          |
|              | [如果设置了任何          | 用户不能使用少于 8       |
|              | 其他密码策略选项](#defi  | 个字符的密码。           |
|              | ning-idm-password-polici |                          |
|              | es_using-ansible-to-inst |                          |
|              | all-and-manage-idm.html# |                          |
|              | additional-password-poli |                          |
|              | cy-options-in-idm_defini |                          |
|              | ng-idm-password-policies |                          |
|              |  "IdM 中的附加密码策略选 |                          |
|              | 项"){.link}，则无论设置  |                          |
|              | Min length               |                          |
|              | 选项的值                 |                          |
|              | 是什么，密码的最小长度为 |                          |
|              | 6。                      |                          |
+--------------+--------------------------+--------------------------+
| 最大故障数   | IdM                      | 最大失败数 = 6           |
|              | 锁定用户帐户前           |                          |
|              | 尝试的最大失败登录次数。 | 当用户在一行             |
|              |                          | 中输入错误的密码时，IdM  |
|              |                          | 会锁定用户帐户。         |
+--------------+--------------------------+--------------------------+
| 失败重置间隔 | IdM                      | 失败重置间隔 = 60        |
|              | 重置当前失败登录尝试次数 |                          |
|              | 后的时间（以秒为单位）。 | 如果用户在               |
|              |                          | `Max 失败时              |
|              |                          | 定义的登录尝试失败的次数 |
|              |                          | 超过 1 分钟，`{.literal} |
|              |                          | 用户                     |
|              |                          | 可以尝试再次登录，而不会 |
|              |                          | 造成用户帐户锁定的风险。 |
+--------------+--------------------------+--------------------------+
| 锁定持续时间 | 在                       | 锁定持续时间 = 600       |
|              | `最大失败中              |                          |
|              | 定义的登录尝试失败次数后 | 锁定帐户的用户在 10      |
|              | ，用户帐户锁定的时间（以 | 分钟内无法登录。         |
|              | 秒为单位）。`{.literal}  |                          |
+--------------+--------------------------+--------------------------+
:::
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### []{#defining-idm-password-policies_using-ansible-to-install-and-manage-idm.html#english-alphabet}重要 {.title}
如果您有一组不同的硬件不能访问国际字符和符号，则字符类要求应使用英语字母和常用符号。[有关密码中字符类策略的更多信息，请参阅红帽知识库中的密码中哪些字符有效？](https://access.redhat.com/solutions/3143431){.link}
:::
:::
::: section
::: titlepage
# []{#defining-idm-password-policies_using-ansible-to-install-and-manage-idm.html#ensuring-the-presence-of-a-password-policy-in-idm-using-an-ansible-playbook_defining-idm-password-policies}使用 Ansible playbook 在 IdM 中存在密码策略 {.title}
:::
本节介绍如何使用 Ansible playbook 在 Identity
Management(IdM)中确保存在密码策略。
在 IdM 中的默认 `global_policy`{.literal}
密码策略中，密码中不同字符类的数量设置为 0。历史记录大小也设置为 0。