4776: NTLM Authentication  
4672: Assign special privileges
APT-Hunter
工具可以自动化帮我们收集windows上可用的日志与其内置的规则进行匹配，帮我们从大量日志中筛选出可疑的协助我们分析。使用该工具分析完成后会生成一个csv文件里面记录了各种日志匹配上规则产生的事件，可以看到从security日志他分析出了PTT攻击以及一些计划任务被用户创建可疑的powershell命令事件严重等级也标注出来了。
其实windows日志记录了很多内容并不是只有4624可以协助我们分析，4688记录了的子父进程命令行参数同样是十分重要的，当然也不止security日志还有很多powershell，winrm，bits等日志，大部分同学可能没有时间或精力去记住这些或者查询这些使用上面的工具自动化帮我们检索有用的日志其实也是够用了。但是这个规则肯定是不完善的建议定位到攻击的时间点后自己慢慢审日志.  
终端上的安全软件的日志也是我们重点关注的对象，里面会记录未知文件的云查。终端新落盘的文件一般会触发安全杀软的实时防护，对其进行扫描检查判断其黑白，黑的一落盘就已经已经被查杀了，当然如果是未知的PE文件的话则会上传到杀软的云中心继续进行鉴定。所以未知文件也是我们需要重点关注的，攻击者很有可能上传了免杀样本。
同时这里也提一下LastActivityView软件他可以从各种来源收集信息，包括注册表，Windows的事件日志，Windows的Prefetch文件夹（C：\
windows \ Prefetch），Windows的Minidump文件夹（C：\ Windows \
Minidump）等来记录当前电脑的使用记录，方便我们分析。
安全软件一般来说都还有主防的日志以及病毒查杀的日志可以协助我们分析，主防主要是拦截的恶意行为比如攻击者想通过命令行修改注册表敏感的注册表键值可能被杀毒监控者如果修改则很有可能被拦截行为比如net
user a a /add
这种添加用户的命令一般都会被主防拦截，病毒查杀的日志则我们帮助我们判断当前电脑被查杀的文件有可能攻击者第一次上传的文件并没有免杀导致被安全软件查杀这时候我们可以提取样本分析。
一般来说看查杀记录的报毒名我们也能简单分辨样本类型一般报毒名可能采用的是4段命名法第一段是病毒的类型是木马还是后门蠕虫等第二段是运行的平台32位还是64还是linux之类第三段是家族是否有家族第四段就是家族变种了。可以看到病毒记录里面有记录黑客工具pchunter的使用还有后门meterpreter还有script脚本木马等。
这里介绍一下简单的PE文件分析  
静态分析的话主要就是查看文件的创建时间啊有没有签名以及有没有加壳，使用了哪些API函数,以及文件的硬编码字符串。  
动态分析的话一般可以使用systracer，procmon或者火绒剑进行行为分析，看行为是否有恶意的。  
procmon工具：在虚拟机里面启动procmon然后运行样本来观测其行为，我们可以先不使用过滤器，运行样本完成后我们选择process
tree来观测样本行为
我这里运行了一个宏样本可以看到winword进程启动了mshta并且下方命令行显示了mshta产生了网络连接，这时候我们可以通过下方的3个按钮来查看具体的行为我一般选择include
subtree查看当前进程的进程树
可以根据上面的按钮来对行为进行进一步筛选分析因为行为的量庞大的，上面4个分别是注册表，文件，网络，进程或线程。也可以直接使用过滤器对操作进行过滤我一般查看以下7个行为，这几个行为可以看到对系统造成了哪些修改
火绒剑同理不过这些动作是中文并且清晰的统计了每个动作的数量对于一些量大也不是很重要的我们可以忽略查看。但是火绒剑不只是行为监控强大，他同时还具有pchunter，process
explorer，以及可以对内存dump等，不过每个工具都有不可替代性，用多了就有所体会了。
systracer应该是行为监控中最简单的了双击运行要监控的程序即可，程序对系统的修改以及一些行为也很清晰在软件中显示相较于前面2个软件监控点较少所以对应的日志也相应较少。
沙箱分析推荐使用微步或者app.any.run或者virustotal，通过上传这些平台我们主要是查看引擎报毒情况从报毒名来查看是否是某个家族某个黑客工具协助我们分析判断，同时还可以看到样本在沙箱环境中运行的行为，以及样本第一次上传的时间以及IOC等，我们最好把样本多传几个平台因为每个平台的数据可能不太一样可能是因为调接口数据的原因，也可能是调用的杀软引擎不一致，一个杀软应该来说有好几种引擎（从下图可以看到同样的样本微步看tencent不报毒但是VT上报毒了）
个人比较喜欢使用anyrun他可以把样本运行过程中的行为很清楚的显示给我们无论是流量还是进程树，还可以对中间释放或者下载的文件进行再次下载上传分析，从下图可以看到该样本下载了一个新的PE文件file4.exe.这个平台也是免费下载样本的平台非常好用。
## 3.linux篇
linux应急响应大体思路基本与windows一致都是看有没有异常的网络连接，通过网络连接定位进程，检查进程以及文件是否是恶意的，同时也是需要检查计划任务服务rootkit等持久化项。github上也总结了linux相关或者windows的相关排查命令（),
当然也有比较好的工具集成了这些检测项，Gscan工具实现主机侧Checklist的自动全面化检测，根据检测结果自动数据聚合，进行黑客攻击路径溯源。该工具最好与rootkit排查工具一块使用。
rootkit是Linux平台下最常见的一种木马后门工具，它主要通过替换系统文件来达到入侵和和隐蔽的目的，这种木马比普通木马后门更加危险和隐蔽，普通的检测工具和检查手段很难发现这种木马。rootkit攻击能力极强，对系统的危害很大，它通过一套工具来建立后门和隐藏行迹，从而让攻击者保住权限，以使它在任何时候都可以使用root
权限登录到系统。  
rootkit主要有两种类型：文件级别和内核级别。  
文件级别的rootkit:
一般是通过程序漏洞或者系统漏洞进入系统后，通过修改系统的重要文件来达到隐藏自己的目的。在系统遭受rootkit攻击后，合法的文件被木马程序替代，变成了外壳程序，而其内部是隐藏着的后门程序。通常容易被rootkit替换的系统程序有login、ls、ps、ifconfig、du、find、netstat等。  
内核级rootkit:
是比文件级rootkit更高级的一种入侵方式，它可以使攻击者获得对系统底层的完全控制权，此时攻击者可以修改系统内核，进而截获运行程序向内核提交的命令，并将其重定向到入侵者所选择的程序并运行此程序。从而可以实现对任意目录、文件、磁盘内容、进程、网络连接与流量的隐藏、窃取和篡改，并提供隐蔽的后门可供黑客直接登录到受害服务器执行更多操作。  
目前常使用的检测rootkit的工具Chkrootkit和Rkhunter可以协助我们对已知的rootkit进行检测，不过他主要是对已知类型Rootkit的文件等特征判断，无法检测出未知的rootkit。要检测未知的rootkit还是需要使用Volatility内存取证工具分析判断.在应急响应过程中web日志以及数据库日志对于我们来说也是需要排查的，可以找出攻击者的webshell以及入侵IP。同样的工具直接出来的结果肯定是片面的,我们最好把常用的检测命令写成脚本统一收集起来分析防止漏报.这里介绍一个开源的检测脚本,
这个脚本不仅收集了常用的排查命令还有其他方面的检测。
## 4.总结
由于已经有很多文章或者github里面总结了应急过程中常用的排查命令，本文并没有介绍一一介绍演示这些常用命令,文章中也只是简单的介绍了笔者经常使用的比较好的工具，并未详细讲解每个工具如何使用，日常应急过程其实主要就是看进程看网络看持久化项看日志来帮助我们分析定位问题，工具只是帮助我们简化工作，真正的威胁狩猎应急响应是需要丰富的实操经验以及对大量攻击手法产生的行为的了解,纸上得来终觉浅，绝知此事要躬行。