title:On Network-level Clusters for Spam Detection
author:Zhiyun Qian and
Zhuoqing Morley Mao and
Yinglian Xie and
Fang Yu
On Network-level Clusters for Spam Detection
Zhiyun Qian1, Z. Morley Mao1, Yinglian Xie2, Fang Yu2
1University of Michigan and 2Microsoft Research Silicon Valley
Abstract
IP-based blacklist is an effective way to ﬁlter spam
emails. However, building and maintaining individual
IP addresses in the blacklist is difﬁcult, as new mali-
cious hosts continuously appear and their IP addresses
may also change over time. To mitigate this problem,
researchers have proposed to replace individual IP ad-
dresses in the blacklist with IP clusters, e.g., BGP clus-
ters. In this paper, we closely examine the accuracy of
IP-cluster-based approaches to understand their effec-
tiveness and fundamental limitations. Based on such
understanding, we propose and implement a new clus-
tering approach that considers both network origin and
DNS information, and incorporate it with SpamAssas-
sin, a popular spam ﬁltering system widely used today.
Applying our approach to a 7-month email trace col-
lected at a large university department, we can reduce
the false negative rate by 50% compared with directly
applying various public IP-based blacklists without in-
creasing the false positive rate. Furthermore, using hon-
eypot email accounts and real user accounts, we show
that our approach can capture 30% - 50% of the spam
emails that slip through SpamAssassin today.
1 Introduction
With over 90% to 97% of all emails being spam [4],
spam ﬁltering remains critical to today’s email sys-
tems. There are two main categories of spam ﬁl-
tering techniques: content-based and blacklist-based.
While content-based ﬁltering is the canonical way, the
blacklist-based approach is receiving much attention re-
cently because it does not always rely on email content
and can be more efﬁcient and less susceptible to eva-
sion. All widely-used blacklists (e.g., Spamhaus, Spam-
cop [9, 8]) today rely on IP addresses to block email
trafﬁc originated from hosts with consistent spamming
behavior.
While IP-based blacklist is simple and lightweight,
compiling and maintaining such lists is challenging—
hosts may change IP addresses over time; more hosts
may be compromised and existing compromised hosts
may be patched. Therefore most IP blacklists today pro-
vide a very limited coverage of all malicious IPs [25].
Rather than constructing blacklists based on individ-
ual IP addresses, previous work has studied building
blacklists based on IP clusters, e.g., clustering using
BGP preﬁxes [28]. By identifying a range or a cluster
of IP addresses within the same administrative bound-
ary, we are able to construct the reputation for the entire
cluster instead of individual IP addresses. The cluster-
based reputation allows one to infer the reputation of IP
addresses never previously observed.
In this paper, we thoroughly analyze the effectiveness
of IP-cluster-based blacklists for spam detection. In par-
ticular, we explore the following questions:
• Under what scenarios do IP-clusters work? And
how much coverage improvement can we obtain
from IP clusters compared with an individual-IP
based scheme?
• What is the right granularity for IP-clusters and
how to obtain such clusters with accurate cluster
boundaries?
To answer the above questions, we thoroughly
studied three different clustering approaches: BGP-
based, DNS-based, and combined clusters. We select
these clusters because they all reveal the administra-
tive boundaries of IP addresses. BGP clusters are con-
structed from the routing perspective, while DNS clus-
ters are from the Web/email relay perspective. In par-
ticular, we propose to examine the reverse authoritative
name server (rANS) and reverse DNS (rDNS) names for
DNS clusters, because they are conﬁgured by the IP ad-
dress owners and cannot be easily modiﬁed by spam-
mers. As BGP and DNS clusters can form complex bi-
partite graphs, the combined clusters capture their inter-
sections and thus are more ﬁne-grained.
Based on these observations, we further propose and
implement a combined cluster-based approach that can
be easily incorporated into SpamAssassin, a popular
spam ﬁltering system that uses a combination of content-
and blacklist-based spam ﬁltering techniques. We apply
our approach to both honeypot email accounts and a 7-
month email log that contains more than seven million
emails. Our key ﬁndings include:
• As expected, most large BGP preﬁxes (e.g., /8,/9)
are too coarse-grained for building cluster-based
blacklists. However, we observe 17.7% of mid-size
BGP preﬁxes (e.g., /15 - /20) are also too coarse-
grained for spam ﬁltering.
• DNS information can augment BGP preﬁxes. It can
help break 26.3% of the BGP preﬁxes into smaller
clusters, thereby reducing the false negative rate by
5-10%.
• We have built a system that combines BGP and
DNS information to produce a cluster-based black-
list with a signiﬁcant advantage over the existing
IP-based blacklists (DNSBL) [9, 8, 7]. It can de-
tect more than 50% of the spam not captured by
the existing IP-based blacklists while maintaining
comparable false positive rates.
• The combined cluster-based blacklist can be eas-
ily integrated into spam ﬁltering systems such as
SpamAssassin. When applied to honeypot email
accounts, the integrated system can capture 30% -
50% spam emails missed by SpamAssassin.
Our work is the ﬁrst to systematically examine the
accuracy and potential of various IP-cluster based ap-
proaches for spam detection. Our results show that
it is critical to obtain the correct boundaries for IP-
clusters. In practice, it is desirable to combine differ-
ent sources of information, e.g., BGP, DNS to obtain
ﬁne-grained clusters with good coverage on new IP ad-
dresses. Performance-wise, our system currently uses
only tens of millisecond for a single IP lookup without
any optimization and 2.2GB database storage space to
store the information for 2.7 million IP addresses.
The remainder of the paper is structured as follows.
We ﬁrst review related work in §2. We use two examples
to show the complex relationship between BGP clus-
ter and rANS clusters, followed by the implication on
blacklisting in §3. We then present our data collection
and experimental setup in §4.
§5 and §6 elaborate on
our detailed analysis on different clusters and how we
combine them. In §7, we show how cluster-based repu-
tation can be effectively applied in spam mitigation. Fi-
nally, §8 concludes the paper.
2 Related Work
Spam detection has been the subject of active re-
search for years. Numerous techniques have been pro-
posed. Some are content-based (e.g., [19, 27, 20]), and
some newly proposed ones are behavior-based (e.g., [12,
21, 22, 14]). Many focus on detecting individual spam
emails, as opposed to identifying spam-campaigns as a
group (e.g., [30, 31, 11]). Although spam-campaign de-
tection can be highly effective for organizations with ac-
cess to a large amount of spam emails, it is usually chal-
lenging for small organizations with a limited view. As a
result, they usually resort to third-party provided black-
lists such as Spamhaus [9], SpamCop [8], SORBS [7],
and NJABL [13].
In this paper, we focus on improving blacklist-based
spam ﬁltering given its popularity and importance. Most
blacklists today are based on individual IP addresses. In
practice, many IP addresses are bi-modal in their spam-
ming behavior [28]: they have either consistently high
or low spam ratios over time. Thus, various black-
lists [9, 8, 7] are created to block persistent spamming
IP addresses. However, since a majority of spamming
IP addresses appear only once and we continuously ob-
serve previously unseen IP addresses send only a few
emails (either spam or legitimate emails), it is difﬁcult to
predict whether a new IP is good or bad. Consequently,
IP-based blacklists are largely incomplete in terms of
their IP address coverage [25].
To improve the coverage of spamming IPs, previous
studies have proposed to replace individual IP addresses
with clusters [28]. Clusters can capture the administra-
tive/conﬁguration boundaries of IP addresses, so that IPs
within the same cluster are likely subject to similar secu-
rity or network policies [18]. Typically IP clusters can be
constructed using information from BGP [28], AS num-
ber [21], and dynamic IP ranges [29]. In fact, a recent
study [14] claimed that AS number is the most impor-
tant feature in their spam detector. This is followed by
a more detailed study [26] on how to determine whether
a BGP preﬁx is bad. By considering the reputation for
a cluster of IP addresses instead of those of individual
ones, we can signiﬁcantly increase the spam-ﬁltering
coverage of unseen IP addresses. Although this sounds
appealing, it relies on the assumption that IP clusters
capture the correct boundaries between good and bad IP
addresses. Given that the granularities of different IP
clusters differ, these existing cluster-based spam ﬁlter-
ing approaches often introduce a high false positive rate
that prevents them from being adopted in practice. To
reduce the false positive rate, our clustering techniques
reﬁne the AS number and BGP preﬁx based clusters
into much more ﬁne-grained ones that more accurately
capture the administrative boundaries, hence making IP-
cluster-based blacklists more practical.
More speciﬁcally, in our study, in addition to previ-
ously used BGP information, we also examine reverse
DNS records as a way to construct IP clusters. This and
other DNS information previously have not been fully
explored for clustering IP addresses. The closest work
uses rDNS information to identify dynamic or dial-up IP
rDNS names (e.g., regular expression) [3, 2] and blocks
the IP addresses with such rDNS naming convention.
They differ from our proposal in that they are using a
set of manually crafted heuristics or rules to identify cer-
tain types of networks(e.g., dial-up user networks) while
our cluster using DNS information is much more general
and can be fully automated.
Note that we do not use forward DNS mappings be-
cause it can be easily modiﬁed by spammers, e.g., fast-
ﬂux networks typically employed by scam sites [17, 15],
to evade detection. While the forward mapping between
DNS names and IPs can change very frequently, the re-
verse mapping, which is set up by IP address owners,
usually changes less frequently.
It is difﬁcult to cre-
ate large-scale DNS fast-ﬂux techniques on reverse DNS
mapping.
3 Motivating Examples
Previous studies have investigated using BGP preﬁx
as the network-aware cluster to group the spamming be-
havior [28]. However, the accuracy of the administrative
boundary it captures depends on the granularity of the
BGP preﬁx information. For instance, a large preﬁx can
be further assigned into smaller preﬁxes that may not be
externally observable in public routing data. As a result,
what a preﬁx captures is often a coarse-grained admin-
istrative domain, and thus may not be detailed enough
to block spams. DNS information, such as rANS and
rDNS names, also reveals the administrative boundary
of IP addresses. It can be more ﬁne-grained than BGP
information for some IPs but more coarse-grained for
other IPs. Next, we show two motivating examples from
real data to illustrate the complex relationship between
these two clustering approaches.
First we study the example in Figure 1, with one pre-
ﬁx and four rANS names. They form a bipartite graph,
where the upper-level nodes represent BGP preﬁx clus-
ters and the lower-level ones denote rANS clusters. A
line is drawn between a preﬁx and a rANS whenever
there is an IP (1) belonging to the preﬁx cluster and (2)
the rANS is responsible for resolving this IP address.
Figure 1 shows that preﬁx 69.61.0.0/17 has two sets
of rANS names: ns1-2.gunsprohibited.com
and ns1-2.webserverdns.com. Figure 2 illus-
trates the detailed IP range inside the preﬁx. The IP
ranges with different set of rANS actually have dis-
tinct spamming behavior. The IP addresses under the
rANS ns1-2.gunsprohibited.com send purely
spam, while the IP addresses under the rANS ns1-2.
webserverdns.com send only legitimate emails.
The disjoint behavior of these two sets of addresses is
likely due to different organizations these two groups of
IPs belong to, as manifested by the rANS names. By
assigning IP addresses into two corresponding rANS-
based clusters, we are able to separate the good IP ad-
dresses from bad ones in terms of spamming behavior.
In the previous example, we show that rANS can
help ﬁnd smaller and more accurate clusters within
a large preﬁx cluster. Now we show a contrasting
example where preﬁxes are more ﬁne-grained com-
pared with rANS clusters. Consider a large ISP -
comcast.net (Figure 3) with hundreds of BGP pre-
ﬁxes. All of the preﬁxes share the same set of rANS,
namely dns101-103.comcast.net. Obviously
the granularity of rANS clusters is too coarse given
many IP preﬁxes within the same rANS. But
the
question is whether it is indeed necessary to decompose
comcast.net into several hundreds of smaller BGP
preﬁx clusters? Are they better in terms of ﬁnding
the boundary between spamming and non-spamming
behavior? In this case, the answer is yes. From our
data, we found the spam ratio for rANS cluster is 0.76
for all three rANS clusters (since they always appear
at the same time), which means that there are both
legitimate emails and spam originating from the IPs
under each rANS cluster. But if we study the BGP
preﬁx clusters, their spam ratios are either close to 1.0
or well below 0.5. In fact, we found that the legitimate
incoming/outgoing mail servers of comcast.net fall
into two distinct BGP preﬁx clusters, and other preﬁxes
are mostly dynamic IP ranges for DSL users. This
information can be obtained by examining the Sender
Policy Framework (SPF) [5] of comcast.net, which
is encoded as a TXT record (a type of DNS record) and
can be queried via normal DNS lookups. The response
of comcast.net looks like the following:
comcast.net. 300 IN TXT "v=spf1
ip4:76.96.28.0/23 ip4:76.96.27.0/24
ip4:76.96.30.0/24 ip4:76.96.59.0/24
ip4:76.96.60.0/23 ip4:76.96.62.0/24
ip4:76.96.68.100 ip4:76.96.68.101
ip4:76.96.68.102 ip4:76.96.68.103
?all"
In the SPF response, “ip4” indicates that the address
range is IPv4. They correspond to the expected IP ranges
for outgoing mail servers for a domain. “?all” indi-
cates for all other IP addresses, their behavior of sending
emails is unspeciﬁed. Correlating with the BGP preﬁx
clusters, all the SPF IP ranges belong to BGP preﬁxes
76.96.24.0/21 and 76.96.48.0/20 as shown in Figure 3.
These IP ranges differ from those DSL ones in that they
are more likely to send legitimate emails given the SPF
information. Further investigation shows that the aggre-
gated spam ratios of these two preﬁx clusters are indeed
6 9 . 6 1 . 0 . 0 / 1 7
n s 1 . g u n s p r o h i b i t e d . c o m n s 2 . g u n s p r o h i b i t e d . c o m
n s 1 . w e b s e r v e r d n s . c o m
n s 2 . w e b s e r v e r d n s . c o m
S p a m   r a t i o   1 . 0
6 9 . 6 1 . 4 4 . 2 5       1   s p a m
6 9 . 6 1 . 4 4 . 2 6       1   s p a m
...
S p a m   r a t i o   0 . 0
6 9 . 6 1 . 7 5 . 1 4 1       1   h a m
6 9 . 6 1 . 7 5 . 1 4 2       1   h a m
...
Figure 1. More detailed spamming behavior from
DNS data.
n s 1 . g u n s p r o h i b i t e d . c o m
n s 1 . w e b s e r v e r d n s . c o m
S p a m   I P
  a d d r e s s e s
6 9 . 6 1 . 0 . 0 / 1 7
Figure 2. Smaller administrative boundaries in
69.61.0.0/17
very low while most other preﬁxes send purely spam.
Note we cannot simply whitelist IP addresses in the
SPF records while blacklisting all other ones, because
many ISPs or domains may either not provide SPF data
or the SPF provided is too relaxed (e.g., all the IP
addresses are listed). Also spammers can spoof SPF
records as well, i.e., spammers who own the domains
can set the SPF records such that all their IP addresses
are listed.
In summary, we have illustrated examples where
BGP preﬁx is either more accurate or less accurate com-
pared to the DNS information for classifying spamming
vs. non-spamming mail server IPs, motivating our work
of combining these two sources of information.
4 Methodology
In this section, we discuss our data-collection
methodology to investigate the properties of various net-
work clusters based on BGP preﬁx and DNS informa-
tion.
4.1 Data and experimental setup
Data source. The data is collected from the mail
servers of University of Michigan EECS department,
over the time period of 2008.12.7 - 2009.7.9 ranging
over 155 days. It consists of about seven million emails,
of which more than 5.5 million emails are spam emails
(according to SpamAssassin) from 2,737,006 distinct IP
addresses, 52,498 distinct BGP preﬁxes. Each log en-
try has four pieces of information: timestamp, sender IP,
spam tag, and spam score output by SpamAssassin.
Spam ﬁlter - SpamAssassin. Our mail server runs
SpamAssassin [1] as the spam ﬁltering system. It em-
ploys several detectors which include Spamhaus [9]
(IP-based blacklist) and a locally maintained IP-based
blacklist. Every email is labeled as either spam or non-
spam based on its score computed by SpamAssassin.
The score is combined from the result of all detectors.
If the score exceeds a ﬁxed threshold (5.0 in our case),
the corresponding email will be labeled as spam.
Although our mail server is a single vantage point, it
does receive spam from a variety of IP address ranges.
Figure 4 shows the CDF of IPs observed by the mail
server. It roughly conforms to the range in previous stud-
ies, e.g., Spamscatter [11] and the work by Ramachan-
dran et al. [21].
Other data. To study the characteristics of clus-
ters, we also leverage the dynamic-IP ranges produced
by UDMap [29] to correlate with the clusters produced
from the university data. This information of dynamic-
IP ranges is of interest because dynamic IPs are more
likely to send spam emails [29]. Further, we use the
Hotmail history correlated with the IP addresses in the
university data set from about the same time period to
enhance the visibility of our dataset.
Experiment setup. At the end of each day, we ex-
tract the mail server log that contains the connecting IP
and SMTP session for each email, and perform the fol-
lowing three DNS queries on the IP addresses we see for
that day:
1) rDNS query on the IP to obtain its rDNS name
(or hostname) and its reverse authoritative name servers
(rANS).
2) Query on reverse domain name’s MX record as
well as the MX record of rANS domain.
3) Queries on three popular IP-based blacklists:
Spamhaus, Spamcop, and Sorbs. The results are used
for comparison with the cluster-based reputation.
the reverse domain name.
We use an example to illustrate this process. Given
an IP address, 141.211.22.134, we ﬁrst perform the
reverse iterative DNS query to get the rDNS mx1.
umich.edu and the rANS dns.itd.umich.edu
and dns2.itd.umich.edu. We subsequently ex-
tract
The rDNS name
mx1.umich.edu has the domain name umich.edu.
The rANS dns.itd.umich.edu and dns2.itd.
umich.edu has the domain name itd.umich.edu.
If not already cached, we then perform MX record
query on both domain names umich.edu and itd.
umich.edu to get the MX records: mx1.umich.
C o m c a s t   m a i l   s e r v e r s   I P   r a n g e
C o m c a s t   D S L   u s e r   I P   r a n g e