条件1：选择只加入了一个社团的学生
SELSCT atd_id, MAX [club_id) AS main_club
FEOM StudentClub
GROUP BY std_id
HAVING COUNT(+) = 1;
■执行结果1
300
***** *
400
500
5
6
■条件2的SQL
-条件2：选择加入了多个社团的学生
SELscr atd_id, club_id As main_club
FBOM StudentClub
■执行结果2
......
200
100
---
## Page 30
11CASE表达式—
1/
这样做也能得到正确的结果，但需要写多条SQL语句。而如果使用
CASE表达式，下面这一条SQL语句就可以了。
SELBCT std_id,
CASE MHEN COONT (*) = 1
--只加入了一个社团的学生
THEN MAX (elub_id)
ELSE MAX (CASg WHEM msin_club_flg = 'Y
THEN club_id
ELSS MULL END)
END AS msin_club
GROUP BY 8td_idj
Btd_id
main_club
100
200
300
3
400
4
500
5
这条SQL语句在CASE表达式里使用了聚合函数，又在聚合函数里
使用了CASE表达式。这种嵌套的写法让人有点眼花综乱，其主要目的是用
CASEWHEN COUNT(）1…BLSE.这样的 CASE表达式来表示
“只加入了一个社团还是加入了多个社团”这样的条件分支。我们在初学SQL
的时候，都学过对聚合结果进行条件判断时要用HAVING子句，但从这道例
题可以看到，在SELECT语句里使用CASE表达式也可以完成同样的工作，
这种写法比较新颖。如果用一句话来形容这个技巧，可以这样说：
新手用HAVING子句进行条件分支，高手用SELECT子句进行条件分支。
通过这道例题我们可以明白：CASE表达式用在SELBCT子句里时，既
可以写在聚合函数内部，也可以写在聚合函数外部。这种高度自由的写法
正是CASE 表达式的魅力所在。
本节小结
本节，我们一起领略了CASE表达式的灵活和强大的表达能力。CASE
表达式是支撑SQL声明式编程的根基之一，也是灵活运用SQL时不可或
缺的基础技能，请一定要学会它。在本书的后半部分，几乎没有哪一节不
---
## Page 31
18第1章奇的SQL
用到CASE表达式的，这也是把它放在本书开买来介绍的原因
最后说一点细节的东西。CASE表达式经常会因为同VB和C语言里
而是和1+1或者a/b一样属于表达式的范畴。结束符END确实看起来像
是在标记一连串处理过程的终结，所以初次接触CASE表达式的人容易对
能处理方面的差异。
作为表达式，CASE表达式在执行时会被判定为一个固定值，因此它
可以写在聚合函数内部：也正因为它是表达式，所以还可以写在SELBCE
子句、GROUP BY子句、MHERE子句、ORDER BY子句里。简单点说，在能
与列名和常量的地方，通常都可以写CASE表达式。从这个意义上来说，
与 CASE表达式最接近的不是面向过程语言里的 CASE语句，而是Lisp 和
Scheme 等函数式语言里的case和cond 这样的条件表达式。关于 SQL和
函数式语言的对比，第2章会进行介绍。
下面是本节要点。
1.在GROUPBY子句里使用CASE表达式，可以灵活地选择作为聚合
的单位的编号或等级。这一点在进行非定制化统计时能发挥巨大的威力。
2.在聚合函数中使用CASE表达式，可以轻松地将行结构的数据转换
成列结构的数据。
3.相反，聚合函数也可以嵌套进CASE表达式里使用。
4.相比依于具体数据库的函数，CASE表达式有史强大的表达能力
和更好的可移植性。
5.正因为CASE表达式是一种表达式而不是语句，才有了这诸多优点。
如果想了解更多关于CASE表达式的内容，请参考下面的文献资料。
1.JoeCelko，《SQL权威指南（第4版）》（人民邮电出版社，2013年）
表达式”等。从CASE表达式的详细用法到具体事例，这两节都有广泛
的介绍。
---
## Page 32
11CASE表达式
19@
2.JoeCelko，《SQL解惑（第2版）》（人民邮电出版杜，2008年）
关于在CASE表达式中嵌入聚合函数，请参考“谜题13教师”“谜题36
达式巧妙地将行结构的数据转换成了列结构的数据。
练习题
●练习题1-1-1：多列数据的最大值
用SQL从多行数据里选出最大值或最小值很容易—通过GROUP BY
子句对合适的列进行聚合操作，并使用NAX或MIN聚合函数就可以求出。
那么，从多列数据里选出最大值该怎么做呢？
样本数据如下表所示。
Greatests
key
X
A
2
B
C
4
7
1
3
3
8
先思考一下从表里选出x和y二者中较大的值的情况。此时求得的结
果应该如下所示。
key
greatest
Oracle和MySQL数据库直接提供了可以实现这个需求的GREATEST
函数，但是这里请不要用这些函数，而用标准SQL的方法来实现。
求出x和y二者中较大的值后，再试着将列数扩展到3列以上吧。这
次求的是x、y和z三者中的最大值，因此结果应该如下所示。
---
## Page 33
●20
第1章神奇的 SQL
key
注
练习题1-1-2：转换行列一
一在表头里加入汇总和再揭
常用于表示再次使用前述内客，
这里指的是在表格中以合计值的
形式再次体现德岛、香川、爱级
使用正文中的表PopTbl2作为样本数据，练习一下把行结构的数据转
和高知这 4 个县的数据。
换为列结构的数据吧。这次请生成下面这样的表头里带有汇总和再揭的二
译者注
维表。
性别
全国
德岛
香川
亚媛
高知
四国(再揭)
* ** *
558
100
100
100
 *****
60
360
女
B45
40
100
50
100
2:90
“全国”列里是表PopTbl2中的所有都道府县（限于篇幅，还有一些
都道府县未列出）人口的合计值。另外，最右边的一列“四国（再揭）”
是四国地区4个县的合计值。
最后这个练习题用到的是比较小众的技巧，但有时又必须使用它，所
以我们也来看一下，
对练习题1-1-1里用过的表Greatests 正常执行 s&LECTkey FROM
Greatests ORDER BY key；这个查询后，结果会按照key这一列值的字
母表顺序显示出来。
那么，请思考一个查询语句，使得结果按照B-A-D-C这样的指定顺
序进行排列。这个顺序并没有什么具体的意义，大家也可以在实现完上述
需求后，试着实现让结果按照其他顺序排列。
---
## Page 34
12自连接的用法
21
自连接的用法
面向集合语言SQL
SQL通常在不同的表或者视图间进行连接运算，但是也可以对相同的表进行“白连接”运算。自连
接的处理过程不太容易想象，因此人们常常对其敬而远之。但是，如果能熟练掌握，就会发现它是非常
方便的技术。本节，我们将一起学习自连接的用法。
写在前面
SQL的连接运算根据其特征的不同，有着不同的名称，如内连接、外
连接、交叉连接等。一般来说，这些连接大都是以不同的表或视图为对象
进行的，但针对相同的表或相同的视图的连接也并没有被禁止。针对相同
我们便能快速地解决很多问题。但是，其处理过程不太容易想象，以至于
常常被人们敬而远之。因此在本节里，我们将通过例题体会一下自连接的
便利性，并理解一下它的处理过程。
理解自连接不仅可以让我们学会实际工作中能用到的技能，还能增进
我们对“面向集合”这一SQL语言重要特征的理解。面向对象语言以对
象的方式来描述世界，而面向集合语言SQL以集合的方式来描述世界。
自连接技术充分体现了SQL面向集合的特性，相信大家在读完本节后再
看二维表状的表格时，就会觉得这种表格更像是集合。
可重排列、排列、组合
假设这里有一张存放了商品名称及价格的表，表里有“苹果、橘子、
香蕉”这3条记录。在生成用于查询销售额的报表等的时候，我们有时会
需要获取这些商品的组合。
---
## Page 35
●22
—第1章神奇的SQL
Products
name|商品名称pnice|价格！
50
橘子
100
各蕉
80
这里所说的组合其实分为两种类型。一种是有顺序的有序对（ordered
pair），另一种是无顺序的无序对（unordered pair）。有序对用尖括号括起来，
如：无序对用花括号括起来，如{1,2}。在有序对里，如果元素顺序相反，
那就是不同的对，因此≠：而无序对与顺序无关，因此{1,2}=
{2.1}。用学校里学到的术语来说，这两类分别对应着“排列”和“组合”。
用SQL生成有序对非常简单。像下面这样通过交叉连接生成笛卡儿
注0
积（直积），就可以得到有序对·
在支持 CR0S5 JOT3 写泌的数据
库里, 也可以写 m Frodacta
F1 CK05s JUIS Froducts F2,
--用于获取可重排列的SQL语句
如果这样写，我们从代码上就能
SELScT P1.nane AS nane_1, P2.name AS nane_2
明确看出是在进行 CROs JOIN,
FEOM Producta P1, Pxoducta P2;
行比较，这里呆用的是旧式写法。
但是为了和排列及组合的代码进
■执行结果
mame_1
name_2
苹果
苹果
苹果
苹果
横子
香蕉
橘子
橘子
苹果
横子
橘子
香蕉
香蕉
苹果
香蕉
横子
香蕉
香蕉
执行结果里每一行（记录）都是一个有序对。因为是可重排列，所以
结果行数为3²=9.结果里出现了（苹果，苹果）这种由相同元素构成的对，
而且（橘子，苹果）和（苹果，橘子）这种只是调换了元素顺序的对也被
当作不同的对了。这是因为，该查询在生成结果集合时会区分顺序。
接下来，我们思考一下如何更改才能排除掉由相同元素构成的对。首
先，为了去掉（苹果，苹果）这种由相同元素构成的对，需要像下面这样
加上一个条件，然后再进行连接运算。
---
## Page 36
1-2自连接的用法—
23
--用于获取排列的SQL语句
SELBCT P1.name AS oane_1, F2 .name AS oane_2
MHERB P1.name <> F2.nane/
FROM Froducts P1, Product8 P2
■执行结果
name_1
name_2
苹果
桶子
苹果
香蕉
候子
苹果
橘子
香蕉
香蕉
苹果
香蕉
子
加上 WHERE P1.name<>P2.name 这个条件以后，就能排除掉由相
同元素构成的对，结果行数为排列P=6.理解这个连接的关键在于想象
一下这里存在下面这样的两张表。