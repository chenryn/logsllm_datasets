        :::
    -   ::: para
        在提示图标旁，现实的当前工作空间短识别符，以及可用空间的总量。
        :::
    :::
[四个可用的工作空间。]{.term}
:   ::: para
    在 GNOME Classic 中，用户可用的默认工作空间量的默认设置为四个。
    :::
[最小化、最大化按钮。]{.term}
:   ::: para
    GNOME Classic
    窗口标题栏的特点是最小化和最大化按钮，它们可以让用户快速地将窗口最小化到窗口列表中，或者将窗口最大化到桌面大小。
    :::
[传统的 [**Super**]{.keycap}+[**Tab**]{.keycap} 窗口切换器。]{.term}
:   ::: para
    在 GNOME Classic 中，[**Super**]{.keycap}+[**Tab**]{.keycap}
    窗口切换器中的窗口不在应用程序分组中。
    :::
:::
::: figure
[⁠]{#introducing-GNOME3-desktop.html#fig-gnome3-classic-calculator}
::: figure-contents
::: mediaobject
![配备计算机应用和应用程序菜单配件子菜单的 GNOME
Classic](images/gnome3-classic-calculator2.png)
:::
:::
**图 1.2. 配备计算机应用和应用程序菜单配件子菜单的 GNOME Classic**
:::
::: section
::: titlepage
## [⁠]{#introducing-GNOME3-desktop.html#gnome-classic-extensions}1.3.1. GNOME Classic 扩展 {.title}
:::
::: para
GNOME Classic 扩展被分配为一组〈[GNOME Shell
extensions](#GNOME-shell-extensions.html){.link}〉。GNOME Classic
扩展被安装为 [gnome-classic-session]{.package} 软件包的从属品，它为启用
GNOME Classic 会话提供了所需组件。因为 GNOME Classic 扩展在红帽企业版
Linux 7 中是默认启用的，所以 GNOME Classic 是红帽企业版 Linux 7
的默认桌面用户界面。
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    AlternateTab
    ("`PI:EMAIL`{.systemitem}")、
    :::
-   ::: para
    应用程序菜单
    ("`PI:EMAIL`{.systemitem}")、
    :::
-   ::: para
    启用新实例
    ("`PI:EMAIL`{.systemitem}")、
    :::
-   ::: para
    放置状态显示器
    ("`PI:EMAIL`{.systemitem}")、
    :::
-   ::: para
    窗口列表
    ("`PI:EMAIL`{.systemitem}")。
    :::
:::
:::
::: section
::: titlepage
## [⁠]{#introducing-GNOME3-desktop.html#gnome-classic-switch}1.3.2. GNOME Classic 与 GNOME 的相互转换 {.title}
:::
::: para
用户可以通过退出系统，在登录界面中的"[**会话**]{.guilabel}"列表中选择
GNOME，从而将 GNOME Classic 切换到 GNOME。
:::
::: para
执行以下命令，从而将 GNOME Classic 在用户会话中切换回 GNOME：
:::
``` screen
$ gnome-shell --mode=user -r &
```
::: para
执行以下命令，从而在同一个用户会话中切回到 GNOME Classic：
:::
``` screen
$ gnome-shell --mode=classic -r &
```
:::
::: section
::: titlepage
## [⁠]{#introducing-GNOME3-desktop.html#gnome-classic-disable}1.3.3. 禁用 GNOME Classic 为默认会话 {.title}
:::
::: para
对所有红帽企业版 Linux 7 中新创建的用户而言，GNOME Classic
是设定的默认会话。您需要在
`/var/lib/AccountsService/users/username`{.filename}
文件中修改用户的账户服务来为某个特定用户覆盖这个默认设置。如何修改的细节内容请参见〈
[第 14.3.2 节
"配置用户默认会话"](#session-management.html#configuring-user-default-session){.xref}〉。
:::
:::
:::
::: section
::: titlepage
# [⁠]{#introducing-GNOME3-desktop.html#gnome-get-more-information}1.4. 获取更多信息 {.title}
:::
::: para
用户可以在 GNOME 帮助中获得更多使用 GNOME 3、GNOME Shell 或者 GNOME
Classic 的信息，这些信息是由 [gnome-user-docs]{.package}
软件包提供的。如需进入 GNOME 帮助，请按 [**Super**]{.keycap}
键进入"`活动概览`{.systemitem}"，输入 **`help`**，然后按
[**Enter**]{.keycap} 键。
:::
:::
:::
[]{#part-Migration_Planning.html}
::: part
::: titlepage
# [⁠]{#part-Migration_Planning.html#part-Migration_Planning}部分 I. 迁移规划 {.title}
:::
::: partintro
::: para
迁移规划主要集中于红帽企业版桌面默认环境到 GNOME2
桌面系统的迁移，以及红帽企业版 Linux 5 和 Linux 6 到 GNOME 3
的迁移。这个部分的指南逐一概述了某些成分的变化，并描述了具备的新特点。
:::
::: para
这本指南仅适用于 GNOME 系统桌面环境的变化。关于红帽企业版Linux
7系统的变化，请参见：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    关于诸如"`GRUB 2`{.systemitem}"引导装载程序、软件包管理、"`systemd`{.systemitem}"，或者计算机配置的部分，请参见《
    *红帽企业版Linux 7 系统管理员指南*》。
    :::
-   ::: para
    《*红帽企业版Linux 7系统迁移规划指南*》是对红帽企业版Linux
    6系统和红帽企业版Linux
    7系统两者之间的运行状况和兼容性的主要变化概览，同时也介绍了由红帽提供辅助升级至红帽企业版Linux
    7 系统所需要的工具。
    :::
-   ::: para
    关于安装红帽企业版Linux 7
    和使用[**Anaconda**]{.application}安装程序的详细信息，请参考《*红帽企业版Linux
    7 系统安装指南*》。
    :::
:::
::: para
这些文件可以在
网站查找到。
:::
:::
:::
[]{#logind.html}
::: chapter
::: titlepage
# [⁠]{#logind.html#logind}第 2 章 logind {.title}
:::
::: para
"`logind`{.systemitem}"（更确切的说，是"`systemd-logind`{.systemitem}"）是管理用户登录的系统服务。这项服务将负责以下内容：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    追踪用户和会话，其过程以及它们的空闲状态，
    :::
-   ::: para
    为用户进程创建控制组，
    :::
-   ::: para
    为用户提供以 PolicyKit 为基础的操作访问，比如系统关闭或休眠操作，
    :::
-   ::: para
    执行应用程序的关机／休眠抑制逻辑，
    :::
-   ::: para
    开机／休眠硬件钥匙的处理，
    :::
-   ::: para
    为用户提供 multi-seat
    （多座位）管理，会话切换管理，以及设备访问管理，
    :::
-   ::: para
    在虚拟终端（控制台）激活自动大量生成文本登录（getty），管理用户运行时目录。
    :::
:::
::: para
"`logind`{.systemitem}"服务是红帽企业版 Linux 7
中新的初始化系统，它取代了红帽企业版 Linux 6
中的"`upstart`{.systemitem}"初始化系统，并与"`systemd`{.systemitem}"紧密结合。这个变化带来了许多新特点和新功能。以下是对那些最重要的特点与功能的概述：
:::
::: variablelist
[ConsoleKit]{.term}
:   ::: para
    "`ConsoleKit`{.systemitem}"框架在红帽企业版 Linux 7
    中是禁用的。"`systemd`{.systemitem}"提供与之相同的功能。"`ConsoleKit`{.systemitem}"和"`logind`{.systemitem}"都是追踪当前运行用户会话的服务。
    :::
    ::: {.note xmlns:d="http://docbook.org/ns/docbook"}
    ::: admonition_header
    **注意**
    :::
    ::: admonition
    ::: para
    "`ConsoleKit`{.systemitem}"之前能够在系统中的活动会话改变时，运行任意的外壳脚本（使用虚拟终端切换）。现在将不再提供这个功能。
    :::
    :::
    :::
[/var/log/ConsoleKit/history 文件]{.term}
:   ::: para
    "`ConsoleKit`{.systemitem}"之前可以向
    `/var/log/ConsoleKit/history`{.filename}
    发送日志文件，而现在的"`logind`{.systemitem}"则不支持这个功能。这个文件被传统的追踪系统中所有登录和登出的
    `wtmp`{.filename} 文件和 `utmp`{.filename}
    文件所取代。`/var/log/ConsoleKit/history`{.filename} 所提供的信息与
    `wtmp`{.filename}
    文件所提供的信息基本相同，只是格式不同而已。考虑到功能上的重叠，"`logind`{.systemitem}"仅仅扮演了"`wtmp`{.systemitem}"文件的角色。
    :::
[seat.d 脚本]{.term}
:   ::: para
    但是既然已不再使用"`ConsoleKit`{.systemitem}"，则"`seat.d`{.systemitem}"脚本语言也不再是"`ConsoleKit`{.systemitem}"框架中的一部分，并已由"`systemd-logind`{.systemitem}"替代。
    :::
[ck-list-sessions 命令]{.term}
:   ::: para
    "`ConsoleKit`{.systemitem}"提供了返回最近用户扩展信息的
    `ck-list-sessions`{.command}
    命令，不仅是普通用户而且包含对"`GDM`{.systemitem}"进行 GUI
    访问。要达到相似结果也可以运行"`loginctl`{.systemitem}"命令。
    :::
    ``` screen
    $ loginctl list-sessions
    ```
[multi-seat 支持（多座位支持）]{.term}
:   ::: para
    "`logind`{.systemitem}"和"`GDM`{.systemitem}"提供了使用户可以将其他显示器，鼠标，或者键盘添加到
    [*multi-seat*]{.emphasis}
    的功能。这么做的话，就会出现一个额外的登录界面，用户在使用其他的设备时也可进行登录。
    :::
    ::: para
    运行以下命令可以列出系统中可用的座位：
    :::
    ``` screen
    $ loginctl list-seats
    ```
    ::: para
    运行以下命令可以显示系统中某个特定座位的状态：
    :::
    ``` screen
    $ loginctl seat-status seat
    ```
    ::: para
    其中 *seat* 是座位的名称，比如"`seat0`{.systemitem}"。
    :::
    ::: para
    运行以下命令，为某个特别的座位指派特定的硬件：
    :::
    ``` screen
    # loginctl attach seat device
    ```
    ::: para
    其中 *seat* 是座位的名称，比如"`seat1`{.systemitem}"，同时 *device*
    是用 `/sys`{.filename}
    设备路径指定的设备名称，比如`/sys/devices/pci0000:00/0000:00:02.0/drm/card0`{.filename}。
    :::
    ::: para
    如果要更改任务，将硬件指定到另一个座位，或者使用
    `loginctl flush-devices`{.command} 命令。
    :::
:::
::: section
::: titlepage
# [⁠]{#logind.html#logind-get-more-information}2.1. 获取更多信息 {.title}
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    `systemd-logind.service`{.command}（8）--"`logind`{.systemitem}"的手册页提供了更多关于"`logind`{.systemitem}"用量和特征的信息。它同时涵盖了"`systemd-logind`{.systemitem}"提供的
    API（logind D-Bus API 文件）。
    :::
-   ::: para
    `logind.conf`{.command}(5) -- 讨论登录管理员配置文件的
    `logind.conf`{.filename} 的手册页。
    :::
-   ::: para
    `loginctl`{.command}（1）--"`systemd`{.systemitem}"登录管理员的手册页包含了更多
    multi-seat 特点的信息。
    :::
:::
:::
:::
[]{#gsettings-dconf.html}
::: chapter
::: titlepage
# [⁠]{#gsettings-dconf.html#gsettings-dconf}第 3 章 GSettings 和 dconf {.title}
:::
::: para
红帽企业版 Linux 7
系统的主要改变之一是将"`GConf`{.systemitem}"（作储存用户偏好用）转变为"`GSettings`{.systemitem}"高级设置系统和"`dconf`{.systemitem}"后端的相结合。除了作为后端，"`dconf`{.systemitem}"同时也是将系统硬件和软件配置细节以单一、紧致、二进制格式储存起来的程序。
:::
::: variablelist
[GConf]{.term}
:   ::: para
    如上所述，"`GConf`{.systemitem}"配置系统由以下两个系统代替："`GSettings`{.systemitem}"API
    和低级别配置系统"`dconf`{.systemitem}"后端。
    :::
    ::: para
    "`gsettings`{.systemitem}"命令行工具和"`dconf`{.systemitem}"实用工具两者都用来查看和变更用户设置。"`dconf`{.systemitem}"实用工具使用"`dconf-editor`{.systemitem}"GUI
    来编辑配置数据库，而"`gsettings`{.systemitem}"实用工具则会直接作用在终端。更多关于"`dconf-editor`{.systemitem}"和"`gsettings`{.systemitem}"实用工具的信息，请参见〈[第 9 章
    *用 GSettings 和 dconf
    来配置桌面*](#configuration-overview-gsettings-dconf.html){.xref}〉。
    :::
[gconftool]{.term}
:   ::: para
    "`gconftool-2`{.systemitem}"工具已经由"`gsettings`{.systemitem}"和"`dconf`{.systemitem}"替代。同样，"`gconf-editor`{.systemitem}"也已由"`dconf-editor`{.systemitem}"替代。
    :::
[重写]{.term}
:   ::: para
    [*keyfile*]{.emphasis}（关键文件）的概念在红帽 Linux 7
    企业版中已有引用：[**dconf**]{.application}
    实用工具允许程序管理员通过直接安装 [*default
    overrides*]{.emphasis}（重写默认设置）来覆盖默认设置。例如，所有的用户现在可以通过执行关键文件目录，比如