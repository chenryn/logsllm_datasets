experiment 50 times. To measure traﬃc disruptions due
to the migration, we injected data probes (i.e., ICMP echo
request) from each router towards the 5 troublesome desti-
nations. Fig 13 reports the median, the 5th and the 95th
percentiles of ICMP packets lost that arose after each mi-
gration step.
The case study showed the ability of our provisioning sys-
tem to perform seamless IGP migrations. Following the or-
dering computed by the Loop Enumeration Algorithm, we
were able to achieve no packet loss during the migration (the
few losses reported in Fig. 13 should be ascribed to the vir-
tual environment). On the other hand, adopting the naive
approach of migrating routers in the random order, forward-
ing loops arose at step 6 and are only solved at step 34.
Thus, the network suﬀered traﬃc losses during more than
80% of the migration process. Finally, we observe that, even
migrations on a per-zone basis require the use of an order-
ing algorithm because all the ordering constraints are among
routers in the same zone.
Our system also enables faster migrations than known mi-
gration [2, 4]. The IGP LSA Listener is able to process IGP
messages in a few milliseconds. The performance of the
module is conﬁrmed by a separate experiment we ran. We
forced the Listener to process messages from a pcap ﬁle con-
taining 204 LSAs (both OSPF and IS-IS). On 50 runs, the
monitor was able to decode and collect each IGP message
in about 14 milliseconds on average and 24 milliseconds at
most. We evaluated the performance of the IGP State As-
serter on the IS-IS and the OSPF DBs generated during
the case study. The DBs contained information about 106
directed links and 96 IP preﬁxes. The IGP State Asserter
took about 40 milliseconds to assess equivalence of the log-
ical graph, routing stability, and advertisement of the same
set of preﬁxes in both IGPs. Even if the code could be op-
timized, current performance is good, also considering that
the IGP Asserter does not need to be invoked more than
once in absence of network failures (see Section 4). On av-
erage, the Conﬁguration Manager took 8.84 seconds to push
one intermediate conﬁguration on a router. The average size
of an intermediate conﬁguration is around 38 lines. The en-
tire migration process took less than 20 minutes. On the
contrary, a similar real-world Geant migration took several
days to be completed [4].
All the intermediate conﬁgurations that our system gen-
erated in the case study described above are available on-
line [33].
8. DESIGN GUIDELINES
In this section, we state simple design guidelines that
make the entire IGP migration process easier, since all the
router migration orderings are loop-free. In the following,
we consider the design of zones in hierarchical IGPs, since
the most problematic migrations involve hierarchies.
Guideline A. For each zone Z, the shortest path from
each ZBR to any destination in Z is an intra-zone path.
Guideline A enables easier f lat2hier and hier2f lat mi-
grations.
In fact, the guideline enforces suﬃcient condi-
tions to guarantee that the nh function does not change
for any router and any destination in any zone Z, since
an intra-zone path is preferred in both ﬂat and hierarchi-
cal modes. Since no router in Z changes its path, then
nhinit(v, d) = nhf inal(v, d) also for all routers v 6∈ Z and
d ∈ Z. This implies that no loop can arise during the mi-
gration. Notice that Guideline A refers only to ZBRs, since
if they use intra-zone paths, then non-ZBR routers cannot
use inter-zone paths. Establishing multiple adjacencies (e.g.,
L1L2 adjacencies in IS-IS) between ZBRs also guarantees
the nh function does not change, but backbone links could
be unnecessarily traversed in this case.
Guideline B. For each zone Z, an aggregation layer of
routers connects the ZBRs to the destinations in Z (e.g.,
BGP border routers or MPLS PE). Link weights are set so
that the weight of the path from any ZBR to any destination
in Z is the same.
Guideline B guarantees easy IGP migrations when route
summarization is introduced or removed. We assume that
aggregated preﬁxes are announced with a cost equal to the
highest weight among the destinations in the aggregate (as
in OSPF, by default [13]). In this case, both with and with-
out summarization, each backbone router chooses the closest
ZBR in Z as entry point for destinations in the aggregated
preﬁx. It is easy to check that, as a consequence, the nh
function does not change with or without summarization,
hence no speciﬁc migration ordering is needed during the
migration.
3239. RELATED WORK
10. DISCUSSION
Seamless IGP operation and maintenance have been the
focus of many previous studies. For example, several proto-
col extensions have been proposed [34, 35, 36] to gracefully
restart a routing process. However, few research eﬀort has
been speciﬁcally devoted to network-wide IGP migrations.
In [18], Raza et al. propose the Graceful Network Oper-
ations (GNO) framework which formalizes the problem of
minimizing a certain disruption function (e.g., link conges-
tion) when the link weights change. They also describe an
algorithm to ﬁnd a congestion-free ordering when several
IGP weights have to be modiﬁed. Although their work is
close in spirit to ours, the migration scenarios we analyzed
cannot always be mapped to a reweighting problem. For ex-
ample, in hierarchical IGP conﬁgurations, both the weight
of a link and the zone to which it belongs are considered in
the computation of the next-hop from a router to a desti-
nation and a unique link weight assignment that generates
the same next-hop for each router-to-destination pair could
not exist. In [37], Keralapura et al. study the problem of
ﬁnding the optimal way in which to add nodes and links to
a network to minimize disruptions. Even if our techniques
can be adapted to address topological changes, this problem
is beyond the focus of this paper.
In [38], Chen et al. describe a tool that is able to au-
tomate status acquisition and conﬁguration change on net-
work devices according to rules speciﬁed by domain experts.
The tool can be used to automate the ships-in-the-night ap-
proach, but not to compute a loop-free ordering. The au-
thors also provide a rule of thumb to avoid problems during
IGP migrations, i.e., update edge routers before the back-
bone ones. However, this rule does not hold in general. For
example, migrating E1 before B1 in Fig. 1 creates a for-
warding loop in a hier2f lat scenario.
In [39], Alimi et al. extend the ship-in-the-night approach
by allowing multiple conﬁgurations to run simultaneously
on a router. They also describe a commitment protocol to
support the switch between conﬁgurations without creating
forwarding loops. While the technique looks promising, it
cannot be exploited on current routers and a commitment
ordering could still be needed.
Recently, some techniques [12, 40] have been proposed to
enable virtual routers or parts of the conﬁguration of routers
(e.g., BGP session) to be moved from one physical device to
another. Their work diﬀer from ours as we aim at seamlessly
changing network-wide conﬁgurations.
Regarding the problem of avoiding forwarding loops in
IGPs during transient states, some previous work has also
been done. Francois et al. propose protocol extensions that
allow routers to update their FIB without creating a tran-
sient loop after a link addition or removal [41]. Fu et al. [21]
and Shi et al. [22] generalize the results by deﬁning a loop-
free FIB update ordering for any change in the forwarding
plane and considering traﬃc congestion, respectively. How-
ever, these approaches cannot be used in practice to carry
out IGP migrations since they assume that the FIB can be
updated on a per-destination basis which is not the case on
current routers.
IGP migrations could also be performed by using route
redistribution. Although new primitives have been recently
proposed [42], we believe that relying on a ships-in-the-night
approach (when possible) makes the entire migration process
easier and more manageable.
In this section, we discuss the limitations of our method-
ology, especially in terms of its application to other types of
migrations.
First of all, our methodology is adapted to link-state IGP
migrations and it cannot be directly applied to other IGPs
(e.g., distance-vector IGPs). Contrary to link-state proto-
cols, where routers always have a global view of the topol-
ogy and can take decisions autonomously, in distance-vector
protocols a change of the next-hop of one router can aﬀect
the visibility other routers have of some destinations. This
poses diﬀerent problems with respect to those tackled by our
techniques.
Moreover, our methodology does not take into consider-
ation the interactions between the changing IGP and the
protocols relying on it. In particular, our approach is not
suitable for all the scenarios in which BGP is deployed on
the migrated network. BGP uses the IGP to both discrim-
inate among several exit-points and to learn how to reach
the preferred exit-point [43]. Migrating the underlying IGP
can thus cause BGP routers to change their preferred exit-
point which can lead to forwarding loops. Currently, our
algorithms ensure that no loop occurs during the migration
towards any internal destination of an AS. For all the net-
works whose forwarding is based on tunneling or encapsu-
lation mechanisms like MPLS, this property is suﬃcient to
guarantee loop-free forwarding towards inter-domain desti-
nations as well. Indeed, no loop occurs in the IGP and the
tunneling mechanism ensures that the BGP traﬃc will reach
the proper exit-point. Though, in the migration of a pure IP
network, the exclusive presence of BGP can induce forward-
ing loops due to conﬂicting BGP decisions between updated
routers and non-updated routers. Theoretically, our order-
ing algorithms can be adapted to deal with BGP-induced
loops. However, the ordering problem is much more com-
plicated since it needs to consider: (i) the fact that BGP
preﬁxes could be reached via any combination of exit-points,
(ii) the iBGP topology and its relationship to the IGP [44],
and (iii) BGP dynamism. For these reasons, we expect that
a loop-free migration ordering for all the BGP preﬁxes does
not exist in most of the cases. We believe that ﬁnding an
eﬀective technique to prevent BGP-induced loops during the
migration of pure IP networks is an interesting open problem
raised by this paper.
11. CONCLUSIONS
Network-wide IGP migrations are a source of concerns
for network operators. Unless carried on with care, IGP mi-
grations can cause long-lasting forwarding loops and thus
signiﬁcant packet losses. In this paper, we proposed a mi-
gration strategy that enables network operators to migrate
an entire IGP conﬁguration seamlessly, rapidly, and without
compromising routing stability. Our strategy relies on eﬀec-
tive techniques for the computation of a router migration
ordering and on a provisioning system to automate most of
the process. These techniques encompass a complete, time-
consuming algorithm and a heuristic. The evaluation we
performed on several ISP topologies conﬁrms the practical
eﬀectiveness of both the heuristic and the provisioning sys-
tem.
Although we focused on link-state IGP migrations, the ap-
plicability of our techniques is broader since it can encom-
324pass any migration issues involving changes of next-hops.
We plan to make our approach suitable for seamless migra-
tions involving distance-vector IGPs. Also, we plan to study
seamless migrations of other routing protocols (e.g., MPLS
or BGP). Our vision is that network-wide migrations could
become a basic operation enabling the seamless replacement
or reconﬁguration of any protocol.
12. ACKNOWLEDGEMENTS
We thank Luca Cittadini, Randy Bush, Bruno Quoitin,
Virginie van den Schriek and our shepherd, Walter Will-
inger, for their help in improving the paper. This work was
partially supported by Alcatel-Lucent. Laurent Vanbever
is supported by a FRIA scholarship. Stefano Vissicchio is
partially supported by ESF project 10-EuroGIGA-OP-003
GraDR and MIUR PRIN Project ALGODEEP. Pierre Fran-
cois is supported by the “Fonds National de la Recherche
Scientiﬁque”, Belgium.
13. REFERENCES
[1] G. G. Herrero and J. A. B. van der Ven, Network Mergers
and Migrations: Junos Design and Implementation.
Wiley Publishing, 2010.
[2] V. Gill and M. Jon, “AOL Backbone OSPF-ISIS
Migration,” NANOG29 Presentation, 2003.
[3] NANOG thread, “IPv6: IS-IS or OSPFv3,”
http://mailman.nanog.org/pipermail/nanog/
2008-December/006194.html, 2008.
[4] “Results of the GEANT OSPF to ISIS Migration,” GEANT
IPv6 Task Force Meeting, 2003.
[5] NANOG thread, “OSPF -vs- ISIS,” http://www.merit.edu/
mail.archives/nanog/2005-06/msg00406.html, 2005.
[6] B. Decraene, J. L. Roux, and I. Minei, “LDP Extension for
Inter-Area Label Switched Paths (LSPs),” RFC 5283
(Proposed Standard), Jul. 2008.
[7] T. M. Thomas, OSPF Network Design Solutions, Second
Edition. Cisco Press, 2003.
[8] J.-L. L. Roux, J.-P. Vasseur, and J. Boyle, “Requirements
for Inter-Area MPLS Traﬃc Engineering,” RFC 4105, Jun.
2005.
[9] N. Leymann, B. Decraene, C. Filsﬁls, M. Konstantynowicz,
and D. Steinberg, “Seamless MPLS Architecture,” Internet
draft, 2011.
[20] P. Francois, M. Shand, and O. Bonaventure,
“Disruption-free topology reconﬁguration in OSPF
Networks,” in Proc. INFOCOM, 2007.
[21] J. Fu, P. Sjodin, and G. Karlsson, “Loop-free updates of
forwarding tables,” Trans. on Netw. and Serv. Man., vol. 5,
no. 1, pp. 22–35, 2008.
[22] L. Shi, J. Fu, and X. Fu, “Loop-free forwarding table
updates with minimal link overﬂow,” in Proc. ICC, 2009.
[23] H. Ballani, P. Francis, T. Cao, and J. Wang, “Making
routers last longer with ViAggre,” in Proc. NSDI, 2009.
[24] P. Francois, C. Filsﬁls, J. Evans, and O. Bonaventure,
“Achieving sub-second IGP convergence in large IP
networks,” Comput. Commun. Rev., vol. 35, no. 3, pp.
33–44, 2005.
[25] C. Filsﬁls, P. Mohapatra, J. Bettink, P. Dharwadkar, P. D.
Vriendt, Y. Tsier, V. V. D. Schrieck, O. Bonaventure, and
P. Francois, “BGP Preﬁx Independent Convergence (PIC)
Technical Report,” Cisco, Tech. Rep., 2011.
[26] M. R. Garey and D. S. Johnson, Computers and
Intractability; A Guide to the Theory of NP-Completeness.
Freeman, 1990.
[27] C. Filsﬁls, P. Francois, M. Shand, B. Decraene, J. Uttaro,
N. Leymann, and M. Horneﬀer, “LFA applicability in SP
networks,” Internet Draft, May 2011.
[28] S. Vissicchio, L. Cittadini, M. Pizzonia, L. Vergantini,
V. Mezzapesa, and M. L. Papagni, “Beyond the Best:
Real-Time Non-Invasive Collection of BGP Messages,” in
Proc. INM/WREN 2010, 2010.
[29] L. Vanbever, G. Pardoen, and O. Bonaventure, “Towards
validated network conﬁgurations with NCGuard,” in Proc.
of Internet Network Management Workshop 2008,
Orlando, USA, October 2008, pp. 1–6.
[30] N. Spring, R. Mahajan, and D. Wetherall, “Measuring ISP
topologies with rocketfuel,” in Proc. SIGCOMM, 2002.
[31] J. Yu, “Scalable Routing Design Principles,” RFC 2791,
2000.
[32] “GEANT Backbone Topology,” 2010, http://www.geant.
net/network/networktopology/pages/home.aspx.
[33] “Seamless Network-Wide IGP Migrations,” 2011, http:
//inl.info.ucl.ac.be/softwares/seamless-network-migration.
[34] A. Shaikh, R. Dube, and A. Varma, “Avoiding instability
during graceful shutdown of multiple OSPF routers,”
Trans. on Netw., vol. 14, pp. 532–542, June 2006.
[35] J. Moy, P. Pillay-Esnault, and A. Lindem, “Graceful OSPF
Restart,” RFC 3623, 2003.
[36] M. Shand and L. Ginsberg, “Restart Signaling for IS-IS,”
[10] P. Templin, “Small Network Operator - Lessons Learned,”
RFC 5306, 2008.
NANOG45 Presentation, 2009.
[11] “Virtual Network Operator (VNO) hosting opportunities
with orbit research.” [Online]. Available: http://www.
orbitresearch.co.uk/services/virtual-network-operator
[12] Y. Wang, E. Keller, B. Biskeborn, J. van der Merwe, and
J. Rexford, “Virtual routers on the move: live router
migration as a network-management primitive,” in Proc.
SIGCOMM, 2008.
[13] Moy, J., “OSPF Version 2,” RFC 2328, 1998.
[14] Oran D., “OSI IS-IS Intra-domain Routing Protocol,” RFC
1142, 1990.
[15] L. Vanbever, S. Vissicchio, C. Pelsser, P. Francois, and
[37] R. Keralapura, C.-N. Chuah, and Y. Fan, “Optimal
Strategy for Graceful Network Upgrade,” in Proc. INM,
2006.
[38] X. Chen, Z. M. Mao, and J. Van der Merwe, “PACMAN: a
platform for automated and controlled network operations
and conﬁguration management,” in Proc. CONEXT, 2009.
[39] R. Alimi, Y. Wang, and Y. R. Yang, “Shadow conﬁguration
as a network management primitive,” in Proc. SIGCOMM,
2008.
[40] E. Keller, J. Rexford, and J. Van Der Merwe, “Seamless
BGP migration with router grafting,” in Proc. NSDI, 2010.
[41] P. Francois and O. Bonaventure, “Avoiding transient loops
O. Bonaventure, “Seamless Network-Wide IGP Migrations,”
Universit´e catholique de Louvain, Tech. Rep., June 2011,
http://hdl.handle.net/2078.1/75312.
during IGP Convergence in IP Networks,” in Proc.
INFOCOM, 2005.
[42] F. Le, G. G. Xie, and H. Zhang, “Theory and new
[16] S. Iasi, P. Fran¸cois, and S. Uhlig, “Forwarding deﬂection in
multi-area OSPF,” in CoNEXT, 2005.
[17] J. Rexford, J. Wang, Z. Xiao, and Y. Zhang, “BGP Routing
Stability of Popular Destinations,” in Proc. IMW, 2002.
[18] S. Raza, Y. Zhu, and C.-N. Chuah, “Graceful Network
Operations,” in Proc. INFOCOM, 2009.
[19] P. Francois and O. Bonaventure, “Avoiding transient loops
during the convergence of link-state routing protocols,”
Trans. on Netw., vol. 15, pp. 1280–1292, December 2007.
primitives for safely connecting routing protocol instances,”
in Proc. SIGCOMM, 2010.
[43] Y. Rekhter, T. Li, and S. Hares, “A Border Gateway
Protocol 4 (BGP-4),” RFC 4271, 2006.
[44] T. Griﬃn and G. Wilfong, “On the Correctness of IBGP
Conﬁguration,” SIGCOMM Comput. Commun. Rev.,
vol. 32, no. 4, pp. 17–29, 2002.
325