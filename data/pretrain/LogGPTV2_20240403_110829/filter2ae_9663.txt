# CVE-2018-7738：利用bash-completion实现恶意代码执行

### 译文声明
本文为翻译文章，原文作者为Grimm，来源网址为[blog.grimm-co.com](https://blog.grimm-co.com)。译文仅供参考，具体表达和含义以原文为准。

### 摘要
本文详细介绍了作者发现并分析bash-completion中存在漏洞的过程。该漏洞允许攻击者通过特定命名的U盘在用户尝试卸载设备时执行恶意代码。文中还提供了实际测试案例及时间线，进一步阐明了漏洞的影响范围及其修复过程。

### 背景
在对我的U盘进行命名操作时，我无意间将其命名为“ID”，随后尝试使用`umount`命令卸载该设备，却意外触发了一个未知错误：
```shell
$ umount /dev/sID: command not found
```
这一现象引起了我的注意。经过初步调查后，我发现当U盘名称包含特殊字符（如反引号或$()）时，`umount`命令的补全功能会将这些字符解释为命令行指令并执行它们。具体来说，在`/usr/share/bash-completion/completions/umount`脚本的第44行处，存在如下代码段：
```shell
DEVS_MPOINTS="$(mount | awk '{print $1, $3}')"
COMPREPLY=( $(compgen -W "$DEVS_MPOINTS" -- $cur) )
```
这表明任何带有上述特殊符号的设备名都可能被当作Shell命令来处理。

### 影响与测试
#### 受影响版本
- **Ubuntu 18.04**：已确认受影响。
- 其他使用util-linux 2.31版bash-completion挂载/卸载脚本的系统也可能存在此问题。

#### 实际验证
为了验证这一点，我创建了一个名为`'`id`'`的FAT32分区，并试图对其进行卸载。由于FAT32文件系统的限制，该实验未能成功显示预期结果。然而，当我改为使用NTFS格式化分区时，情况发生了变化：
```shell
$ sudo mkfs.ntfs -f -L '`IFS=,;a=sudo,reboot;\$a`' /dev/sdb1
```
上述命令可以在目标系统上执行任意Shell命令，例如重启计算机。更进一步地，我还演示了如何利用此漏洞泄露敏感信息（如/etc/shadow文件内容），甚至远程下载并运行恶意脚本。

### 技术细节
- **引入日期**：2013年4月13日（util-linux 2.31）
- **修复日期**：2018年3月21日（util-linux 2.32）

值得注意的是，尽管此漏洞早在2013年就已存在于util-linux项目中，但由于Ubuntu直到2016年才开始采用相关脚本，因此直到Ubuntu 18.04发布前，大部分用户并未受到影响。

### 结论
尽管这个漏洞看似微不足道，但它揭示了一个重要事实：随着软件组件不断更新迭代，即便是看似无关紧要的变化也可能带来潜在的安全风险。因此，保持警惕、定期检查系统更新对于维护信息安全至关重要。

### 时间线
- **2013.4.13**：漏洞首次出现在util-linux源码中。
- **2016.3.31**：Ubuntu引入含有漏洞的代码。
- **2017.11.16**：漏洞获得CVE编号CVE-2018-7738。
- **2018.3.21**：util-linux 2.32发布，修复了该漏洞。
- **2018.8.22**：本人独立发现了此漏洞。
- **2018.9.11**：完成对该漏洞的技术分析。
- **2018.9.14**：撰写并发表本篇博客文章。