### Current Behavior:
When using `npm uninstall --save`, the specified package version listed in `package.json` is not removed from `package-lock.json` if another version of the same package exists.

### Expected Behavior:
The specified package version listed in `package.json` should be removed from `package-lock.json`. In other words, running `npm install --save <package> && npm uninstall --save <package>` should leave `package-lock.json` unchanged.

### Steps to Reproduce:
1. Initialize a new npm project:
   ```sh
   npm init --yes
   ```
2. Install `rollpkg` as a development dependency:
   ```sh
   npm i --save-dev rollpkg
   ```
   - Note: `rollpkg` has a dependency on `jest ^26.6.3`, which will be added to the top-level `node_modules`.

3. Install an older version of `jest` as a development dependency:
   ```sh
   npm i --save-dev jest@26.0.0
   ```
   - `jest` (version 26.0.0) is now added to `package.json` and the top-level `node_modules`.
   - The `jest` version 26.6.3, which was previously in the top-level `node_modules`, is moved to `node_modules/rollpkg/node_modules`.

4. Uninstall `jest` as a development dependency:
   ```sh
   npm uninstall --save-dev jest
   ```
   - `jest` is removed from `package.json`.
   - However, the `node_modules` directory remains unchanged, and the `package-lock.json` still contains the entry for `jest` version 26.0.0.

### Environment:
- **Operating System:** macOS 10.15.7
- **Node.js Version:** 14.15.0
- **npm Version:** 7.3.0

Thank you for all the great work on npm v7! I'm really enjoying using it.