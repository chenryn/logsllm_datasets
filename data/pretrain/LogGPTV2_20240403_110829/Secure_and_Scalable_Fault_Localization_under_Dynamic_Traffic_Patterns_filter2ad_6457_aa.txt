title:Secure and Scalable Fault Localization under Dynamic Traffic Patterns
author:Xin Zhang and
Chang Lan and
Adrian Perrig
2012 IEEE Symposium on Security and Privacy
Secure and Scalable Fault Localization under Dynamic Trafﬁc Patterns
Xin Zhang
CyLab / Carnegie Mellon University
Chang Lan
Tsinghua University
Adrian Perrig
CyLab, Carnegie Mellon University
Abstract—Compromised and misconﬁgured routers are a
well-known problem in ISP and enterprise networks. Data-
plane fault localization (FL) aims to identify faulty links
of compromised and misconﬁgured routers during packet
forwarding, and is recognized as an effective means of achieving
high network availability. Existing secure FL protocols are
path-based, which assume that the source node knows the
entire outgoing path that delivers the source node’s packets
and that the path is static and long-lived. However, these
assumptions are incompatible with the dynamic trafﬁc patterns
and agile load balancing commonly seen in modern networks.
To cope with real-world routing dynamics, we propose the
ﬁrst secure neighborhood-based FL protocol, DynaFL, with
no requirements on path durability or the source node knowing
the outgoing paths. Through a core technique we named
delayed key disclosure, DynaFL incurs little communication
overhead and a small, constant router state independent of the
network size or the number of ﬂows traversing a router. In
addition, each DynaFL router maintains only a single secret
key, which based on our measurement results represents 2–4
orders of magnitude reduction over previous path-based FL
protocols.
I. INTRODUCTION
Modern ISP, enterprise, and datacenter networks demand
reliable data delivery to support performance-critical ser-
vices, thus requiring the data plane to correctly forward
packets along the routing paths. However, real-world inci-
dents [2], [3], [7], [21], [25], [32] reveal the existence of
compromised routers in ISP and enterprise networks that
sabotage network data delivery. Also, in a 2010 worldwide
security survey [1], 61% of network operators ranked infras-
tructure outages due to misconﬁgured network equipment
such as routers as the No. 2 security threat. Such misbehav-
ing routers can easily drop, modify, delay or inject packets
into data plane to mount Denial-of-Service, surveillance,
man-in-the-middle attacks, and data exﬁltration where a
malicious router may replicate some packets and send them
along other unexpected paths.
Unfortunately, current networks lack a reliable and se-
cure way to identify misbehaving routers that jeopardize
packet delivery. For example, a malicious or misconﬁgured
router can “correctly” respond to ping or traceroute
probes while corrupting other data packets, thus cloaking
the attacks from ping or traceroute. Data-plane fault
localization (FL) aims to localize faulty links that sabotage
packet delivery in the data plane, thus providing data-plane
accountability. By removing the identiﬁed faulty links from
the routing tables or bypassing the faulty links in route
selection, FL enables network communication to be carried
only on non-faulty links, thus yielding high packet delivery
guarantees [9], [14], [34].
Existing FL protocols that are secure against sophisticated
packet modiﬁcation and fabrication attacks [11], [14], [34]
require that the sender know the entire path that delivers
the source node’s packets, and that the path be long-lived
(e.g., stable over transmitting 108 packets [14]) to obtain
a statistically accurate FL. However, recent measurement
studies [10], [18], [20] show that a considerable fraction
of current network ﬂows are short-lived “mice” and routing
paths are highly dynamic. Furthermore, emerging enterprise
and datacenter networks call for more agile load balancing
and dynamic routing paths. For example, a recently proposed
datacenter routing architecture, VL2 [20], employs Valiant
Load Balancing [24], [37] to spread trafﬁc uniformly across
network paths via random packet deﬂection. In this case, the
actual routing path is determined on the ﬂy during forward-
ing and thus cannot be predicted and known by the sender.
Given the conﬂict between the “static-path” assumption
and the “dynamic-path” reality, researchers have concluded
that existing FL protocols are impractical for widespread
deployment
in large-scale networks with dynamic trafﬁc
patterns [14].
in existing secure FL protocols, a router
In addition,
must share some secret (e.g., cryptographic keys) with each
source node sending trafﬁc traversing that router, making
the key storage overhead at an intermediate router linear
in the number of end nodes. The proliferation of key copies
shared by routers with all end nodes under non-uniform (and
generally poor) administration also increases the risk of key
compromise thereby enabling undetected attacks. In existing
secure FL protocols, a router also needs to maintain per-
path state for each path traversing that router, making the
FL unscalable for large-scale networks.
We aim to bridge the current gap between the security
of FL against strong adversaries and the ability to support
dynamic trafﬁc patterns in modern networks such as ISP,
enterprise, and datacenter networks. More speciﬁcally, the
desired FL protocol should be secure against sophisticated
packet dropping, modiﬁcation, fabrication, and delaying
attacks by colluding routers, while retaining the following
properties:
• Path obliviousness: A source node or a router does not
© 2012, Xin Zhang. Under license to IEEE.
DOI 10.1109/SP.2012.27
317
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:47:18 UTC from IEEE Xplore.  Restrictions apply. 
If TSA!=TSB
accuse lAB
TSD
TSC
TSA
TSB
S
A
B
C
D
Figure 1. Path-based FL. TSr denotes the trafﬁc summary generated by
router r. For brevity, “TSA!=TSB” refers to “TSA deviates from TSB more
than a certain threshold”.
N(s)
i
j
N(r)
s
p
r
q
b
N(a)
a
c
Figure 2. A neighborhood example.
• Volatile path support: The FL protocol requires no
• Constant router state: A router does not need to
• O(1) key storage: A router only manages a small
need to know the outgoing/downstream path.
maximum duration for a forwarding path.
maintain per-path, per-ﬂow, or per-source state.
number of keys regardless of the network size.
that
Path obliviousness and volatile path support together enable
agile (e.g., packet-level) load balancing and dynamic routing
paths (e.g., Valiant load-balanced paths). These two prop-
erties also decouple the data-plane FL from routing, thus
enabling it to support a wide array of routing protocols.
Finally, constant router state provides scalability in large-
scale networks and O(1) key storage reduces the key setup
overhead.
We observe that the “static-path” assumption in existing
secure FL protocols stems from the fact
those FL
protocols operate on entire end-to-end paths (path-based),
to localize the fault to one speciﬁc link. As Figure 1 shows,
each router maintains a certain “trafﬁc summary” (e.g., a
counter, packet hashes, etc.) for each path that traverses
the router (thus requring per-path state), and sends the
trafﬁc summary to the source node S of each path. S can
then detect a link l as malicious if the trafﬁc summaries
from l’s two adjacent nodes deviate greatly, as Figure 1
illustrates. Hence, S needs to know the entire path topology
to compare trafﬁc summaries of adjacent nodes, and needs
to send a large number of packets over the same path so that
the deviation in trafﬁc summaries can reﬂect a statistically
accurate estimation of link quality. Finally, to authenticate
the communication between the source and each router in
the path, a router needs to share a secret key with each
source that sends trafﬁc through it.
In this paper, we explore neighborhood-based FL ap-
proaches, where a router r’s data-plane faults (if any) can
be detected by checking the consistency (or conservation)
of the trafﬁc summaries generated by the 1-hop neighbors
of r (denoted by N(r) in Figure 2). That is, in benign cases,
the packets sent to r will be consistent with the packets
received from r by all of r’s neighbors as reﬂected in their
trafﬁc summaries. In this way, the FL is independent of
routing paths and only depends on 1-hop neighborhoods,
thus supporting arbitrary routing protocols and dynamic load
balancing. Additionally, each router in a neigbhorhood-based
approach only needs to maintain state for each neighbor.
In summary, neighborhood-based FL localizes faults to a
speciﬁc 1-hop neighborhood to reduce further investigation,
to trade localization precision for practicality in modern
networks with dynamic trafﬁc patterns.
Though promising, neighborhood-based FL is susceptible
to sophisticated packet modiﬁcation and collusion attacks
due to several security and scalability challenges. For exam-
ple, for the sake of scalability, the trafﬁc summary cannot
be a copy of all the original packets (or even their hashes),
but have to be a compact representation of the original
packets via a certain ﬁngerprinting function F. On one
hand, if F generates trafﬁc summaries at different nodes
without using different secret keys, a malicious router can
predict
the outputs of F at other nodes and tactically
modify packets such that the outputs of F will stay the
same as with the original packets. On the other hand, if
F at different nodes uses different secret keys, we cannot
compare and run consistency check over different nodes’
trafﬁc summaries. To address these challenges, we propose
DynaFL, a protocol that employs a core technique called
delayed key disclosure, which discloses the same key for
computing F to different routers after they have forwarded
the packets. To further minimize the protocol overhead,
DynaFL employs a secure sampling mechanism also based
on the delayed key disclosure, so that a malicious router
cannot know if a packet is sampled or not at the time it
forwards (corrupts) the packet. Finally, a router in DynaFL
only shares a secret key with a centralized controller, thus
achieving O(1) key storage.
Contributions. Our contributions are three-fold:
1. We raise the importance of pursuing a secure FL design
to cope with dynamic trafﬁc patterns in real-world networks
with a small constant router state and key storage.
2. To the best of our knowledge, DynaFL is the ﬁrst secure
neighborhood-based FL protocol that achieves path oblivi-
ousness and volatile path support, and is secure against both
packet loss and sophisticated packet modiﬁcation/injection
attacks.
3. In addition, a DynaFL router requires only about 4MB
per-neighbor state based on our AMS sketch [6] implementa-
tion, whereas path-based FL protocols require per-path state.
318
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:47:18 UTC from IEEE Xplore.  Restrictions apply. 
We also show through measurements that the number of
keys a router needs to manage in path-based FL protocols
is 2 - 3 orders of magnitude higher than that in DynaFL
(which is a single key shared with a centralized controller).
Finally, our simulation results demonstrate DynaFL’s small
detection delay and negligible communication overhead.
II. PROBLEM STATEMENT
In this section, we formalize the notation, network setting,
adversary model, and problem statement.
A. Notation
S
i
j
!
!
traversing a neighborhood N(s),
We use the terms node and router interchangeably to gen-
erally refer to devices that either perform layer-2 switching
or layer-3 routing (so nodes do not include end servers).
We denote the 1-hop neighborhood (or neighborhood, for
brevity) of a node s as N(s), as Figure 2 illustrates. For
a particular packet
the
neighbor sending that packet to node s is called an ingress
node in N(s) for that packet, and the node receiving that
packet from s is called an egress node. We term a sequence
of packets as a packet stream S. Particularly, we denote the
packet stream sent from node i to node j as Sij, and this
and S←i
,
packet stream is seen by nodes i and j as S→j
respectively. The difference of two packet streams S and
!, denoted by ∆(S
), refers to the number of packets in
one packet stream but not in the other, without considering
the variable IP header ﬁelds such as the TTL and checksum
ﬁelds.
B. Network Setting
, S
We consider a network with dynamic trafﬁc patterns and
a relatively static network topology, which is best exem-
pliﬁed by today’s ISP, enterprise, and datacenter networks.
To provide maximum ﬂexibility to support various routing
protocols, and even packet-level load balancing, we pose
no restriction on the routing protocols and load balancing
mechanisms used in the network. We assume a trusted
administrative controller
(AC) in the network, which
shares a pairwise secret key with each router in the network.
As we will show later,
the AC is mainly in charge of
analyzing the trafﬁc summaries gathered from different
nodes and localizing any neighborhood with data-plane
faults. Finally, we require nodes in the network be loosely
time-synchronized, e.g., on the order of milliseconds. Loose
time synchronization represents a common requirement for
detecting packet delaying attacks [8], [9], [29] and nowadays
even high-precision clock synchronization is available given
the advent of GPS-enabled clocks and the adoption of IEEE
1588 [23].
C. Adversary Model
We consider a sophisticated adversary controlling multiple
malicious nodes. Speciﬁcally, a malicious node corrupts
data-plane packets by unexpectedly dropping, modifying
and delaying legitimate packets sent by the source, and
fabricating bogus packets that are not sent by the source.
A malicious node can corrupt both the data packets and
control packets, such as trafﬁc summaries sent from a node
to the AC and certain administrative messages sent from
the AC to nodes. Furthermore, a sophisticated adversary
has knowledge of and tries to disrupt the FL protocol to
evade detection. Multiple colluding nodes can collectively
perform the above data-plane attacks, conspiring to evade
detection or frame benign nodes. The colluding nodes know
each other’s security credentials (e.g., secret keys used in
the FL protocol).
Such a strong attacker model is not merely a theoretical
conception, but has been widely witnessed in practice. For
example, outsider attackers have leveraged social engineer-
ing, phishing [3], and exploration of router software vul-
nerabilities [2], [7] or weak passwords [21] to compromise
ISP and enterprise routers [32]. In addition, a majority of
network operators in a recent worldwide security survey [1]
listed router misconﬁguration, which also falls under our ad-
versary model, as a primary cause of network outages [25].
As we will show in Section III-C, achieving FL security
against surreptitious packet modiﬁcation/fabrication attacks
is challenging and dramatically complicates the protocol
design.
D. Problem Formulation
Our goal is to design a practical and secure neighborhood-
based FL protocol to identify a suspicious neighborhood
(if any) that contains at least one malicious node. Recall
that practicality translates to path obliviousness, volatile path
support and constant router state as stated in Section I. We
further adopt the (α, β,δ )-accuracy [19] to formalize the
security requirements as below:
• If more than β fraction of the packets are corrupted
by a malicious node m, the FL protocol will raise
a neighborhood containing m or one of its colluding
nodes as suspicious with probability at least 1 − δ.
• In benign cases, if no more than α fraction of the
packets are spontaneously corrupted (e.g., dropped)
the FL protocol will raise the
in a neighborhood,
neighborhood as suspicious with probability at most δ.
The thresholds α and β are introduced to tolerate spon-
taneous failures (e.g., natural packet loss) and are set by
the network administrator based on her experience and
expectation of network performance.
Neighborhood-based FL enables the network administra-
tor to scope further investigation to a 1-hop neighborhood to
ﬁnd out which router is compromised. It is also possible to
further employ dedicated monitoring protocols, which only
need to monitor a small region (the identiﬁed neighborhood)
of the network to ﬁnd the speciﬁc misbehaving router.
319
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:47:18 UTC from IEEE Xplore.  Restrictions apply. 
III. CHALLENGES AND OVERVIEW
In this section, we ﬁrst describe the high-level steps of
general neighborhood-based FL and then explain the security
challenges in the presence of strong adversaries. Finally,
we present the key ideas in DynaFL that address these
challenges.
A. High-Level Steps
The general steps a neighborhood-based FL takes are
(i) recording local trafﬁc summaries, (ii) reporting the trafﬁc
summaries to the AC, and (iii) detecting suspicious neigh-
borhoods by the AC based on the received trafﬁc summaries,
as we sketch below. Though intuitive, these general steps
face several potential security vulnerabilities and scalability
challenges as Section III-C will show.
Recording. We divide the time in a network into consec-
utive epochs, which are synchronous among all the nodes
including the AC in the network. For each neighbor r, a
node s locally generates trafﬁc summaries, denoted by TS→r
and TS←r
, for the packet streams Ssr and Srs in each
epoch, respectively. Figure 3 depicts the router state in a
toy example.
s
s
{F(S→s
r
), t
→s
r
, n→s
TS→s
r
r
TS←s
r
Srs
Ssr
r }
TS←r
s
TS→t
s
s
TS→r
s
TS←t
s
Sst
Sts
TS←s
t