node with -accepted ranking
such that
is not safe under ﬁltering.
be an ARC function. Suppose there exist a
,
and two paths
and
. Then,
,
such that:
is more preferred than
and
Proof: The proof relies on Lemma 1 to build a dispute
wheel. First, using scale invariance of the ARC function, we
show that the stated conditions of the theorem ensure that there
;
exist two paths
for some -accepted ranking; and
have no nodes in common, other than and 0. Lemma
2 then completes the proof of the theorem through two steps:
, we use them to
ﬁrst, once we have found the paths
such that the conditions of Lemma 1 are
build a permutation
satisﬁed; and second, we show that the dispute wheel given by
Lemma 1 is in fact a dispute ring, by checking that no nodes are
repeated around the wheel.
and
We ﬁrst construct the paths
,
previous paragraph. Let
orem. Let
,
and
, and
as described in the
be given as in the the-
. We add
;
. By scale invariance, there exists a -accepted
as a subranking.
; i.e.,
with
new nodes to the routing system, and label them
let
ranking
For such a ranking
on the set of paths
we have
.
FEAMSTER et al.: IMPLICATIONS OF AUTONOMY FOR THE EXPRESSIVENESS OF POLICY ROUTING
1277
But now consider the path
. Since
, either
or
and in the latter case, let
. In the former case, let
, and
,
,
, and
; note that
,
;
. Then
and
have no nodes in common other than and 0.
The following lemma uses Lemma 1 to construct a dispute
wheel.
Lemma 2: Let
a node with -accepted ranking
be an ARC function. Suppose there exists
, and two paths
over
such that:
;
; and
have no nodes in common other than and 0.
and
Fig. 10. Dispute ring construction for Lemma 2.
1)
2)
3)
Then there exists a -accepted routing system for which there
exists a dispute ring.
Proof of Lemma: The proof of this lemma proceeds by
using scale invariance: we add enough new nodes to the system
to allow us to build a permutation such that the conditions of
Lemma 1 are satisﬁed. The key insight is that we initially con-
into the “tail”
struct the permutation
. We then add enough nodes so that when we com-
of the path
plete the deﬁnition of
by mapping the path
.
Let
. We label the nodes so that
by Condition 1 in the statement of the lemma, we know
Deﬁne
; note that,
.
, and
. We want to deﬁne a permu-
, i.e.,
tation
. However, this does not completely deﬁne
to the path
a permutation, so we must add additional nodes to ensure that
that will map the path
to the tail of
, we have
, and let
We add
.
beled
variance, we know there exists at least one
, and
additional nodes to the system, la-
. By scale in-
-accepted ranking
over all paths using this larger set of nodes, such that
has
as a subranking. In particular, since
. We now deﬁne a permutation
, we have
according to the fol-
lowing maps:
That is,
listed, we deﬁne
,
, etc. For all nodes
. Note that the period of
not
is
, and of course
. Finally, note that by deﬁnition of
.
, where
, we have
, the paths
, and the permutation
Thus, the conditions of Lemma 1 have been satisﬁed by the
and
; so
ranking
-accepted routing system for which
we know there exists a
there exists a dispute wheel. To complete the proof, we need
only check that the dispute wheel is a dispute ring. Note that
the wheel has three pivot nodes. Furthermore, to check that no
nodes are repeated around the wheel, we simply enumerate the
elements of our dispute wheel:
;
;
;
. It is straight-
forward to check that these paths constitute a dispute ring: in
; and
;
Fig. 10, note that the dispute wheel constructed from these paths
has no repeated nodes.
Lemma 2 completes the proof of the theorem: we have shown
that if some -accepted ranking exists satisfying the conditions
of the theorem, then using only permutation invariance and scale
invariance we can build a -accepted routing system with a dis-
pute ring. This routing system is then unsafe under ﬁltering, by
Proposition 3.
The preceding theorem suggests that ARC functions that are
safe under ﬁltering are closely related to the shortest hop count
ARC function, because no rankings can be accepted where
hop paths are less preferred than
.
The next theorem draws this relationship even closer, by proving
that there exists a dispute wheel if an ARC function accepts
any ranking where an -hop path is less preferred than an
-hop paths, for
-hop path.
Theorem 2: Let
and
and two paths
be an ARC function. Suppose there exist a
,
node with -accepted ranking
such that
. Then
there exists a -accepted routing system with a dispute wheel.
Proof Sketch: Details are in the technical report [5]. Our
,
approach is to map the path
which partially deﬁnes a permutation . We then show how to
so that
add nodes to the system and complete the permutation
. We ﬁnally apply Lemma 1 to con-
-accepted routing system with a dispute
into the “tail” of the path
clude there exists a
wheel.
-hop paths over
The preceding results should not be interpreted as suggesting
that we cannot ﬁnd a routing system that is safe under ﬁltering,
-hop paths. In-
where nodes prefer
deed, from Fig. 7, there are routing systems where nodes prefer
three-hop paths over one-hop paths, and yet the system is safe
under ﬁltering. However, checking whether such systems are
safe under ﬁltering requires global veriﬁcation; the theorems
we have presented suggest that safety under ﬁltering cannot be
guaranteed through local veriﬁcation alone, if some nodes are
allowed to prefer
-hop paths over
-hop paths.
Furthermore, the two results in this section highlight the im-
portance of dispute rings. Theorem 1 gives the strong result that
-hop path to be more
an ARC function that allows some
preferred than an -hop path cannot guarantee safety under ﬁl-
. Theorem 2 only guarantees the existence of a
tering, if
1278
IEEE/ACM TRANSACTIONS ON NETWORKING, VOL. 15, NO. 6, DECEMBER 2007
dispute wheel if an ARC function that allows some
-hop
path to be more preferred than an -hop path—we cannot draw
conclusions regarding the stability or safety of a routing system
on the basis of the existence of a dispute wheel (see Fig. 7).
VII. SUMMARY
This paper explored the fundamental tradeoff between the ex-
pressiveness of rankings and routing safety, presuming that each
AS retains complete autonomy and ﬁltering expressiveness, and
presented the ﬁrst study of the effects of ﬁltering on safety. We
make the following contributions: 1) We showed that next-hop
rankings are not safe; we also observed that although rankings
based on a globally consistent weighting of paths are safe under
ﬁltering, even minor generalizations of the weighting function
compromise safety. 2) We deﬁned a dispute ring and show that
any routing system that has a dispute ring is not safe under ﬁl-
tering. Our results are the ﬁrst necessary conditions concerning
safety. 3) We showed that, providing for complete autonomy
and ﬁltering expressiveness, if providers directly choose their
rankings, the class of allowable rankings that guarantee safety
is strongly constrained.
Although the results of Section VI appear to tightly con-
strain allowable rankings, Section IV-B suggests one possible
direction forward: there we note that routing using preferences
derived from edge weights is guaranteed to be stable. Suppose
each AS ranks paths based on the sum of edge weights to the
destination and adjusts weights on its incident outgoing edges
to neighboring ASes. Rankings would then be derived from the
total path cost, but an AS might still retain enough ﬂexibility
to control the next-hop AS en route to the destination. More
generally, rankings may be built based on consistent edge
labels aggregated using a strictly monotonic algebra [15], [20],
[21]; this class of routing protocols using “derived” rankings
is guaranteed to converge. Such an approach could ensure that
the protocol is safe on short timescales, while allowing “policy
disputes” to occur on longer timescales, out-of-band from the
routing protocol. Of course, we must still explore whether this
apparently more restrictive language could still implement the
policies that operators want to express. Furthermore, a more
restrictive policy language would guarantee safety, but would
likely cause routing to oscillate on a slower timescale as op-
erators observe the routing protocol converging to undesirable
paths. It is our position that this design decision is exactly
the right one: the routing protocol should converge on a fast
timescale and accurately reﬂect network topology, while policy
conﬂicts should be resolved on slower, “human” timescales.
REFERENCES
[4] N. Feamster, J. Borkenhagen, and J. Rexford, “Guidelines for interdo-
main trafﬁc engineering,” ACM Comput. Commun. Rev., vol. 33, no. 5,
pp. 19–30, Oct. 2003.
[5] N. Feamster, R. Johari, and H. Balakrishnan, “Stable policy routing
with provider independence,” Mass. Inst. of Technol., Tech. Rep. MIT-
LCS-TR-981, Feb. 2005 [Online]. Available: http://www.lcs.mit.edu/
publications/specpub.php?id=1715
[6] N. Feamster, R. Johari, and H. Balakrishnan, “The implications of au-
tonomy for stable policy routing,” in Proc. ACM SIGCOMM, Philadel-
phia, PA, Aug. 2005, pp. 25–36.
[7] J. Feigenbaum, R. Sami, and S. Shenker, “Mechanism design for policy
routing,” in Proc. ACM Symp. Principles of Distributed Computing,
2004, pp. 11–20.
[8] L Gao, T. G. Grifﬁn, and J. Rexford, “Inherently safe backup routing
with BGP,” in Proc. IEEE INFOCOM, Anchorage, AK, Apr. 2001, pp.
547–556.
[9] L. Gao and J. Rexford, “Stable Internet routing without global coor-
dination,” IEEE/ACM Trans. Networking, vol. 9, no. 6, pp. 681–692,
Dec. 2001.
[10] M. Gouda and M. Schneider, “Maximizable routing metrics,”
IEEE/ACM Trans. Networking, vol. 11, no. 4, pp. 663–675, Aug.
2003.
[11] R. Govindan, C. Alaettinoglu, G. Eddy, D. Kessens, S. Kumar, and
W. Lee, “An architecture for stable, analyzable Internet routing,” IEEE
Network, vol. 13, no. 1, pp. 29–35, Jan./Feb. 1999.
[12] R. Govindan, C. Alaettinoglu, K. Varadhan, and D. Estrin, “Route
servers for inter-domain routing,” Computer Networks and ISDN
Systems, vol. 30, pp. 1157–1174, 1998.
[13] T. Grifﬁn, A. Jaggard, and V. Ramachandran, “Design principles of
policy languages for path vector protocols,” in Proc. ACM SIGCOMM,
Karlsruhe, Germany, Aug. 2003, pp. 61–72.
[14] T. Grifﬁn, F. B. Shepherd, and G. Wilfong, “The stable paths problem
and interdomain routing,” IEEE/ACM Trans. Networking, vol. 10, no.
1, pp. 232–243, Feb. 2002.
[15] T. Grifﬁn and J. L. Sobrinho, “Metarouting,” in Proc. ACM SIGCOMM,
Philadelphia, PA, Aug. 2005, pp. 1–12.
[16] T. Grifﬁn and G. Wilfong, “A safe path vector protocol,” in Proc. IEEE
INFOCOM, Tel Aviv, Israel, Mar. 2000, pp. 490–499.
[17] T. Grifﬁn and G. Wilfong, “On the correctness of IBGP conﬁguration,”
in Proc. ACM SIGCOMM, Pittsburgh, PA, Aug. 2002, pp. 17–29.
[18] A. D. Jaggard and V. Ramachandran, “Robustness of class-based path
vector systems,” in IEEE Int. Conf. Network Protocols (ICNP), Berlin,
Germany, Oct. 2004, pp. 84–93.
[19] S. Machiraju and R. Katz, “Verifying global invariants in multi-
provider distributed systems,” in Proc. 3nd ACM Workshop on Hot
Topics in Networks (Hotnets-III), San Diego, CA, Nov. 2004, pp.
149–154.
[20] J. L. Sobrinho, “Network routing with path vector protocols: Theory
and applications,” in Proc. ACM SIGCOMM, Karlsruhe, Germany,
Aug. 2003, pp. 49–60.
[21] J. L. Sobrinho, “An algebraic theory of dynamic network routing,”
IEEE/ACM Trans. Networking, vol. 13, no. 5, pp. 1160–1173, Oct.
2005.
[22] K. Varadhan, R. Govindan, and D. Estrin, “Persistent route oscillations
in inter-domain routing,” USC/ISI, Tech. Rep. 96-631, Feb. 1996.
[23] K. Varadhan, R. Govindan, and D. Estrin, “Persistent route oscillations
in inter-domain routing,” Computer Networks, vol. 32, no. 1, pp. 1–16,
2000.
Nick Feamster received the S.B. and M.Eng.
degrees in electrical engineering and computer
science in 2000 and 2001, respectively, and the
Ph.D. degree in computer science in 2005, all from
the Massachusetts Institute of Technology (MIT),
Cambridge, MA.
[1] C. Alaettinoglu et al., Routing Policy Speciﬁcation Language (RPSL),
RFC 2622, Jun. 1999.
[2] Randy Bush, May 2004, private communication.
[3] N. Feamster and H. Balakrishnan, “Correctness properties for Internet
routing,” presented at the 43rd Annu. Allerton Conf. Communication,
Control, and Computing, Monticello, IL, Sep. 2005.
He is an Assistant Professor in the College of
Computing at Georgia Tech, Atlanta. His research
focuses on many aspects of computer networking
and networked systems,
including the design,
measurement, and analysis of network protocols
and architectures, network management, network security, and anonymous
communication systems.
FEAMSTER et al.: IMPLICATIONS OF AUTONOMY FOR THE EXPRESSIVENESS OF POLICY ROUTING
1279
Ramesh Johari (M’05) received the A.B. degree in
mathematics from Harvard University, Cambridge,
MA, in 1998, the Certiﬁcate of Advanced Study
in Mathematics from the University of Cambridge,
Cambridge, U.K., in 1999, and the Ph.D. degree in
electrical engineering and computer science from
the Massachusetts Institute of Technology (MIT),
Cambridge, MA, in 2004.
He is currently an Assistant Professor of manage-
ment science and engineering, and by courtesy, elec-
trical engineering and computer science, at Stanford
Hari Balakrishnan received the B.Tech. degree
from the Indian Institute of Technology, Madras, in
1993, and the Ph.D. degree in computer science from
the University of California at Berkeley in 1998.
He is a Professor in the Electrical Engineering and
Computer Science Department and a member of the
Computer Science and Artiﬁcial Intelligence Labo-
ratory (CSAIL) at Massachusetts Institute of Tech-
nology (MIT), Cambridge, MA. His research inter-
ests are in the area of networked computer systems,
spanning overlay and peer-to-peer networks, Internet
routing, congestion control, and architecture, wireless and sensor networks; net-
work security, and distributed data management.
University, Stanford, CA.