## PostgreSQL pg_stat_ pg_statio_ 统计信息(scan,read,fetch,hit)源码解读      
### 作者               
digoal                
### 日期              
2016-10-18                 
### 标签              
PostgreSQL , pg_stat_ , pg_statio_ , 统计信息 , scan , read , fetch , hit                  
----              
## 背景    
PostgreSQL 几个统计信息的解释难以理解，本文花一些时间从源码的角度来解释一下。让大家对这几个容易误解的统计值有更好的理解。      
比较难理解的几个统计值为：    
pg_stat_all_indexes 的    
```  
idx_scan           
idx_tup_read        
idx_tup_fetch       
```  
pg_statio_all_indexes 的    
```  
idx_blks_read      
idx_blks_hit      
```  
pg_stat_all_tables 的    
```  
seq_scan      
seq_tup_read      
idx_scan      
idx_tup_fetch      
```  
pg_statio_all_tables 的    
```  
heap_blks_read       
heap_blks_hit        
idx_blks_read        
idx_blks_hit         
toast_blks_read     heap表对应的toast表统计字段       
toast_blks_hit            
tidx_blks_read      heap表的索引对应的toast索引统计字段       
tidx_blks_hit        
```  
## 统计信息来源  
首先需要获得以上统计字段的信息来源：    
```  
postgres=# \d+ pg_stat_all_indexes       
           View "pg_catalog.pg_stat_all_indexes"      
    Column     |  Type  | Modifiers | Storage | Description       
---------------+--------+-----------+---------+-------------      
 relid         | oid    |           | plain   |       
 indexrelid    | oid    |           | plain   |       
 schemaname    | name   |           | plain   |       
 relname       | name   |           | plain   |       
 indexrelname  | name   |           | plain   |       
 idx_scan      | bigint |           | plain   | --     pg_stat_get_numscans(i.oid)      
 idx_tup_read  | bigint |           | plain   | --     pg_stat_get_tuples_returned(i.oid)      
 idx_tup_fetch | bigint |           | plain   | --     pg_stat_get_tuples_fetched(i.oid)      
View definition:      
 SELECT c.oid AS relid,      
    i.oid AS indexrelid,      
    n.nspname AS schemaname,      
    c.relname,      
    i.relname AS indexrelname,      
    pg_stat_get_numscans(i.oid) AS idx_scan,      
    pg_stat_get_tuples_returned(i.oid) AS idx_tup_read,      
    pg_stat_get_tuples_fetched(i.oid) AS idx_tup_fetch      
   FROM pg_class c      
     JOIN pg_index x ON c.oid = x.indrelid      
     JOIN pg_class i ON i.oid = x.indexrelid      
     LEFT JOIN pg_namespace n ON n.oid = c.relnamespace      
  WHERE c.relkind = ANY (ARRAY['r'::"char", 't'::"char", 'm'::"char"]);      
postgres=# \d+ pg_statio_all_indexes       
          View "pg_catalog.pg_statio_all_indexes"      
    Column     |  Type  | Modifiers | Storage | Description       
---------------+--------+-----------+---------+-------------      
 relid         | oid    |           | plain   |       
 indexrelid    | oid    |           | plain   |       
 schemaname    | name   |           | plain   |       
 relname       | name   |           | plain   |       
 indexrelname  | name   |           | plain   |       
 idx_blks_read | bigint |           | plain   | --  pg_stat_get_blocks_fetched(i.oid) - pg_stat_get_blocks_hit(i.oid)      
 idx_blks_hit  | bigint |           | plain   | --  pg_stat_get_blocks_hit(i.oid)      
View definition:      
 SELECT c.oid AS relid,      
    i.oid AS indexrelid,      
    n.nspname AS schemaname,      
    c.relname,      
    i.relname AS indexrelname,      
    pg_stat_get_blocks_fetched(i.oid) - pg_stat_get_blocks_hit(i.oid) AS idx_blks_read,      
    pg_stat_get_blocks_hit(i.oid) AS idx_blks_hit      
   FROM pg_class c      
     JOIN pg_index x ON c.oid = x.indrelid      
     JOIN pg_class i ON i.oid = x.indexrelid      
     LEFT JOIN pg_namespace n ON n.oid = c.relnamespace      
  WHERE c.relkind = ANY (ARRAY['r'::"char", 't'::"char", 'm'::"char"]);      
postgres=# \d+ pg_stat_all_tables       
                        View "pg_catalog.pg_stat_all_tables"      
       Column        |           Type           | Modifiers | Storage | Description       
---------------------+--------------------------+-----------+---------+-------------      
 relid               | oid                      |           | plain   |       
 schemaname          | name                     |           | plain   |       
 relname             | name                     |           | plain   |       
 seq_scan            | bigint                   |           | plain   | --  pg_stat_get_numscans(c.oid)      
 seq_tup_read        | bigint                   |           | plain   | --  pg_stat_get_tuples_returned(c.oid)      
 idx_scan            | bigint                   |           | plain   | --  sum(pg_stat_get_numscans(i.indexrelid))      
 idx_tup_fetch       | bigint                   |           | plain   | --  sum(pg_stat_get_tuples_fetched(i.indexrelid)) + pg_stat_get_tuples_fetched(c.oid)      
 n_tup_ins           | bigint                   |           | plain   |       
 n_tup_upd           | bigint                   |           | plain   |       
 n_tup_del           | bigint                   |           | plain   |       
 n_tup_hot_upd       | bigint                   |           | plain   |       
 n_live_tup          | bigint                   |           | plain   |       
 n_dead_tup          | bigint                   |           | plain   |       
 n_mod_since_analyze | bigint                   |           | plain   |       
 last_vacuum         | timestamp with time zone |           | plain   |       
 last_autovacuum     | timestamp with time zone |           | plain   |       
 last_analyze        | timestamp with time zone |           | plain   |       
 last_autoanalyze    | timestamp with time zone |           | plain   |       
 vacuum_count        | bigint                   |           | plain   |       
 autovacuum_count    | bigint                   |           | plain   |       
 analyze_count       | bigint                   |           | plain   |       
 autoanalyze_count   | bigint                   |           | plain   |       
View definition:      
 SELECT c.oid AS relid,      
    n.nspname AS schemaname,      
    c.relname,      
    pg_stat_get_numscans(c.oid) AS seq_scan,      
    pg_stat_get_tuples_returned(c.oid) AS seq_tup_read,      
    sum(pg_stat_get_numscans(i.indexrelid))::bigint AS idx_scan,      
    sum(pg_stat_get_tuples_fetched(i.indexrelid))::bigint + pg_stat_get_tuples_fetched(c.oid) AS idx_tup_fetch,      
    pg_stat_get_tuples_inserted(c.oid) AS n_tup_ins,      
    pg_stat_get_tuples_updated(c.oid) AS n_tup_upd,      
    pg_stat_get_tuples_deleted(c.oid) AS n_tup_del,      
    pg_stat_get_tuples_hot_updated(c.oid) AS n_tup_hot_upd,      
    pg_stat_get_live_tuples(c.oid) AS n_live_tup,      
    pg_stat_get_dead_tuples(c.oid) AS n_dead_tup,      
    pg_stat_get_mod_since_analyze(c.oid) AS n_mod_since_analyze,      
    pg_stat_get_last_vacuum_time(c.oid) AS last_vacuum,      
    pg_stat_get_last_autovacuum_time(c.oid) AS last_autovacuum,      
    pg_stat_get_last_analyze_time(c.oid) AS last_analyze,      
    pg_stat_get_last_autoanalyze_time(c.oid) AS last_autoanalyze,      
    pg_stat_get_vacuum_count(c.oid) AS vacuum_count,      
    pg_stat_get_autovacuum_count(c.oid) AS autovacuum_count,      
    pg_stat_get_analyze_count(c.oid) AS analyze_count,      
    pg_stat_get_autoanalyze_count(c.oid) AS autoanalyze_count      
   FROM pg_class c      
     LEFT JOIN pg_index i ON c.oid = i.indrelid      
     LEFT JOIN pg_namespace n ON n.oid = c.relnamespace      
  WHERE c.relkind = ANY (ARRAY['r'::"char", 't'::"char", 'm'::"char"])      
  GROUP BY c.oid, n.nspname, c.relname;      
postgres=# \d+ pg_statio_all_tables       
            View "pg_catalog.pg_statio_all_tables"      
     Column      |  Type  | Modifiers | Storage | Description       
-----------------+--------+-----------+---------+-------------      
 relid           | oid    |           | plain   |       
 schemaname      | name   |           | plain   |       
 relname         | name   |           | plain   |       
 heap_blks_read  | bigint |           | plain   | --  pg_stat_get_blocks_fetched(c.oid) - pg_stat_get_blocks_hit(c.oid)      
 heap_blks_hit   | bigint |           | plain   | --  pg_stat_get_blocks_hit(c.oid)      
 idx_blks_read   | bigint |           | plain   | --  sum(pg_stat_get_blocks_fetched(i.indexrelid) - pg_stat_get_blocks_hit(i.indexrelid))      
 idx_blks_hit    | bigint |           | plain   | --  sum(pg_stat_get_blocks_hit(i.indexrelid))      
 toast_blks_read | bigint |           | plain   | --  pg_stat_get_blocks_fetched(t.oid) - pg_stat_get_blocks_hit(t.oid)      
 toast_blks_hit  | bigint |           | plain   | --  pg_stat_get_blocks_hit(t.oid)      
 tidx_blks_read  | bigint |           | plain   | --  sum(pg_stat_get_blocks_fetched(x.indexrelid) - pg_stat_get_blocks_hit(x.indexrelid))      
 tidx_blks_hit   | bigint |           | plain   | --  sum(pg_stat_get_blocks_hit(x.indexrelid))      
View definition:      
 SELECT c.oid AS relid,      
    n.nspname AS schemaname,      
    c.relname,      
    pg_stat_get_blocks_fetched(c.oid) - pg_stat_get_blocks_hit(c.oid) AS heap_blks_read,      
    pg_stat_get_blocks_hit(c.oid) AS heap_blks_hit,      
    sum(pg_stat_get_blocks_fetched(i.indexrelid) - pg_stat_get_blocks_hit(i.indexrelid))::bigint AS idx_blks_read,      
    sum(pg_stat_get_blocks_hit(i.indexrelid))::bigint AS idx_blks_hit,      
    pg_stat_get_blocks_fetched(t.oid) - pg_stat_get_blocks_hit(t.oid) AS toast_blks_read,      
    pg_stat_get_blocks_hit(t.oid) AS toast_blks_hit,      
    sum(pg_stat_get_blocks_fetched(x.indexrelid) - pg_stat_get_blocks_hit(x.indexrelid))::bigint AS tidx_blks_read,      
    sum(pg_stat_get_blocks_hit(x.indexrelid))::bigint AS tidx_blks_hit      
   FROM pg_class c      
     LEFT JOIN pg_index i ON c.oid = i.indrelid      
     LEFT JOIN pg_class t ON c.reltoastrelid = t.oid      
     LEFT JOIN pg_index x ON t.oid = x.indrelid      
     LEFT JOIN pg_namespace n ON n.oid = c.relnamespace      
  WHERE c.relkind = ANY (ARRAY['r'::"char", 't'::"char", 'm'::"char"])      
  GROUP BY c.oid, n.nspname, c.relname, t.oid, x.indrelid;      
```  
以上几个统计字段的统计信息来自如下函数：    
```  
 idx_scan        | bigint |           | plain   | --  pg_stat_get_numscans(i.oid)      
 idx_tup_read    | bigint |           | plain   | --  pg_stat_get_tuples_returned(i.oid)      
 idx_tup_fetch   | bigint |           | plain   | --  pg_stat_get_tuples_fetched(i.oid)      
 idx_blks_read   | bigint |           | plain   | --  pg_stat_get_blocks_fetched(i.oid) - pg_stat_get_blocks_hit(i.oid)      
 idx_blks_hit    | bigint |           | plain   | --  pg_stat_get_blocks_hit(i.oid)      
 seq_scan        | bigint |           | plain   | --  pg_stat_get_numscans(c.oid)      
 seq_tup_read    | bigint |           | plain   | --  pg_stat_get_tuples_returned(c.oid)      
 idx_scan        | bigint |           | plain   | --  sum(pg_stat_get_numscans(i.indexrelid))      
 idx_tup_fetch   | bigint |           | plain   | --  sum(pg_stat_get_tuples_fetched(i.indexrelid)) + pg_stat_get_tuples_fetched(c.oid)      
 heap_blks_read  | bigint |           | plain   | --  pg_stat_get_blocks_fetched(c.oid) - pg_stat_get_blocks_hit(c.oid)      
 heap_blks_hit   | bigint |           | plain   | --  pg_stat_get_blocks_hit(c.oid)      
 idx_blks_read   | bigint |           | plain   | --  sum(pg_stat_get_blocks_fetched(i.indexrelid) - pg_stat_get_blocks_hit(i.indexrelid))      
 idx_blks_hit    | bigint |           | plain   | --  sum(pg_stat_get_blocks_hit(i.indexrelid))      
 toast_blks_read | bigint |           | plain   | --  pg_stat_get_blocks_fetched(t.oid) - pg_stat_get_blocks_hit(t.oid)      
 toast_blks_hit  | bigint |           | plain   | --  pg_stat_get_blocks_hit(t.oid)      
 tidx_blks_read  | bigint |           | plain   | --  sum(pg_stat_get_blocks_fetched(x.indexrelid) - pg_stat_get_blocks_hit(x.indexrelid))      
 tidx_blks_hit   | bigint |           | plain   | --  sum(pg_stat_get_blocks_hit(x.indexrelid))      
```  
这些SQL函数对应的C函数如下：    
```  
postgres=# \df+ pg_stat_get_numscans      
|     Source code      |                   Description                          
+----------------------+--------------------------------------------------      
| pg_stat_get_numscans | statistics: number of scans done for table/index      
postgres=# \df+ pg_stat_get_tuples_returned      
|         Source code         |                 Description                        
+-----------------------------+----------------------------------------------      
| pg_stat_get_tuples_returned | statistics: number of tuples read by seqscan      
postgres=# \df+ pg_stat_get_tuples_fetched      
|        Source code         |                   Description                         
+----------------------------+-------------------------------------------------      
| pg_stat_get_tuples_fetched | statistics: number of tuples fetched by idxscan      
postgres=# \df+ pg_stat_get_blocks_fetched      
|        Source code         |             Description                    
+----------------------------+--------------------------------------      
| pg_stat_get_blocks_fetched | statistics: number of blocks fetched      
postgres=# \df+ pg_stat_get_blocks_hit      
|      Source code       |                 Description                       
+------------------------+---------------------------------------------      
| pg_stat_get_blocks_hit | statistics: number of blocks found in cache      
```  
## 源码分析  
以上5个C函数的源码分析    
```  
pg_stat_get_numscans      
  result = (int64) (tabentry->numscans);      
pg_stat_get_tuples_returned      
  result = (int64) (tabentry->tuples_returned);      
pg_stat_get_tuples_fetched      
  result = (int64) (tabentry->tuples_fetched);      
pg_stat_get_blocks_fetched      
  result = (int64) (tabentry->blocks_fetched);      
pg_stat_get_blocks_hit      
  result = (int64) (tabentry->blocks_hit);      
```  
他们都是返回以下数据结构中的某项计数器的值：    
```  
/* ----------    
 * PgStat_StatTabEntry          The collector's data per table (or index)    
 * ----------    
 */    
typedef struct PgStat_StatTabEntry    
{    
    Oid         tableid;    
    PgStat_Counter numscans;    
    PgStat_Counter tuples_returned;    
    PgStat_Counter tuples_fetched;    