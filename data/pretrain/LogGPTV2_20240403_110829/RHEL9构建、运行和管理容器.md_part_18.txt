当前能够共享镜像，它们也无法共享容器。
:::
::: itemizedlist
**其他资源**
-   [Buildah -
    有助于构建开放容器项目(OCI)容器镜像的工具](https://github.com/projectatomic/buildah){.link}
-   [Buildah 教程 1：构建 OCI
    容器镜像](https://github.com/projectatomic/buildah/blob/master/docs/tutorials/01-intro.md){.link}
-   [Buildah 教程 2：使用带有容器 registry 的
    Buildah](https://github.com/projectatomic/buildah/blob/master/docs/tutorials/02-registries-repositories.md){.link}
-   [使用 Buildah
    构建：Dockerfile、命令行或脚本](https://www.redhat.com/sysadmin/building-buildah){.link}
-   [无根 Buildah
    的工作原理：在非特权环境中构建容器](https://opensource.com/article/19/3/tips-tricks-rootless-buildah){.link}
:::
:::
::: section
::: titlepage
# []{#assembly_building-container-images-with-buildah_building-running-and-managing-containers.html#proc_installing-buildah_assembly_building-container-images-with-buildah}安装 Buildah {.title}
:::
使用 `dnf`{.literal} 命令安装 Buildah 工具。
::: itemizedlist
**流程**
-   安装 Buildah 工具：
    ``` literallayout
    # dnf -y install buildah
    ```
:::
::: itemizedlist
**验证**
-   显示帮助信息：
    ``` screen
    # buildah -h
    ```
:::
:::
::: section
::: titlepage
# []{#assembly_building-container-images-with-buildah_building-running-and-managing-containers.html#proc_getting-images-with-buildah_assembly_building-container-images-with-buildah}使用 Buildah 获取镜像 {.title}
:::
使用 `buildah from`{.literal}
命令从头开始创建新的工作容器，或者以指定的镜像作为起点。
::: itemizedlist
**流程**
-   创建一个基于 `registry.redhat.io/ubi8/ubi8/ubi`{.literal}
    镜像的新的工作容器：
    ``` literallayout
    # buildah from registry.access.redhat.com/ubi8/ubi
    Getting image source signatures
    Copying blob…
    Writing manifest to image destination
    Storing signatures
    ubi-working-container
    ```
:::
::: orderedlist
**验证**
1.  列出本地存储中的所有镜像：
    ``` literallayout
    # buildah images
    REPOSITORY                                  TAG      IMAGE ID       CREATED       SIZE
    registry.access.redhat.com/ubi8/ubi         latest   272209ff0ae5   2 weeks ago   234 MB
    ```
2.  列出工作容器及其基础镜像：
    ``` literallayout
    # buildah containers
    CONTAINER ID  BUILDER  IMAGE ID     IMAGE NAME                       CONTAINER NAME
    01eab9588ae1     *     272209ff0ae5 registry.access.redhat.com/ub... ubi-working-container
    ```
:::
::: itemizedlist
**其他资源**
-   `buildah-from`{.literal} 手册页
-   `buildah-images`{.literal} 手册页
-   `buildah.containers`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#assembly_building-container-images-with-buildah_building-running-and-managing-containers.html#proc_running-commands-inside-of-the-container_assembly_building-container-images-with-buildah}在容器内运行命令 {.title}
:::
使用 `buildah run`{.literal} 命令从容器执行命令。
::: itemizedlist
**先决条件**
-   本地系统上提供了拉取的镜像。
:::
::: itemizedlist
**流程**
-   显示操作系统版本：
    ``` literallayout
    # buildah run ubi-working-container cat /etc/redhat-release
    Red Hat Enterprise Linux release 8.4 (Ootpa)
    ```
:::
::: itemizedlist
**其他资源**
-   `buildah-run`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#assembly_building-container-images-with-buildah_building-running-and-managing-containers.html#proc_building-an-image-from-a-containerfile-with-buildah_assembly_building-container-images-with-buildah}使用 Buildah 从 Containerfile 构建镜像 {.title}
:::
使用 `buildah bud`{.literal} 命令按照说明从 `Containerfile`{.literal}
构建镜像。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
如果在上下文目录中找到, `buildah bud`{.literal} 命令会使用
`Containerfile`{.literal} ，如果未找到，`buildah bud`{.literal}
命令会使用 `Dockerfile`{.literal} ；否则，可以使用 `--file`{.literal}
来指定任何文件。可以在 `Containerfile`{.literal} 和
`Dockerfile`{.literal} 中使用的命令一样。
:::
::: orderedlist
**流程**
1.  创建 `Containerfile`{.literal} ：
    ``` literallayout
    # cat Containerfile
    FROM registry.access.redhat.com/ubi8/ubi
    ADD myecho /usr/local/bin
    ENTRYPOINT "/usr/local/bin/myecho"
    ```
2.  创建 `myecho`{.literal} 脚本：
    ``` literallayout
    # cat myecho
    echo "This container works!"
    ```
3.  更改 `myecho`{.literal} 脚本的访问权限：
    ``` literallayout
    # chmod 755 myecho
    ```
4.  使用当前目录中的 `Containerfile`{.literal} 构建 `myecho`{.literal}
    镜像：
    ``` literallayout
    # buildah bud -t myecho .
    STEP 1: FROM registry.access.redhat.com/ubi8/ubi
    STEP 2: ADD myecho /usr/local/bin
    STEP 3: ENTRYPOINT "/usr/local/bin/myecho"
    STEP 4: COMMIT myecho
    ...
    Storing signatures
    ```
:::
::: orderedlist
**验证**
1.  列出所有镜像：
    ``` literallayout
    # buildah images
    REPOSITORY                                  TAG      IMAGE ID       CREATED              SIZE
    localhost/myecho                            latest   b28cd00741b3   About a minute ago   234 MB
    ```
2.  运行基于 `localhost/myecho`{.literal} 镜像的 `myecho`{.literal}
    容器：
    ``` literallayout
    # podman run --name=myecho localhost/myecho
    This container works!
    ```
3.  列出所有容器：
    ``` literallayout
    # podman ps -a
    0d97517428d  localhost/myecho                                     12 seconds ago  Exited (0) 13 seconds ago          myecho
    ```
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
您可以使用 `podman history`{.literal}
命令显示镜像中所使用的每个层的信息。
:::
::: itemizedlist
**其他资源**
-   `buildah-bud`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#assembly_building-container-images-with-buildah_building-running-and-managing-containers.html#proc_inspecting-containers-and-images-with-buildah_assembly_building-container-images-with-buildah}使用 Buildah 检查容器和镜像 {.title}
:::
使用 `buildah inspect`{.literal} 命令显示有关容器或镜像的信息。
::: itemizedlist
**先决条件**
-   镜像是使用 Containerfile 中的指令构建的。详情请参阅 [使用 Buildah 从
    Containerfile
    构建镜像](#assembly_building-container-images-with-buildah_building-running-and-managing-containers.html#proc_building-an-image-from-a-containerfile-with-buildah_assembly_building-container-images-with-buildah "使用 Buildah 从 Containerfile 构建镜像"){.link}
    一节。
:::
::: itemizedlist
**流程**
-   检查镜像：
    ::: itemizedlist
    -   要检查 myecho 镜像，请输入：
        ``` literallayout
        # buildah inspect localhost/myecho
         {
            "Type": "buildah 0.0.1",
            "FromImage": "localhost/myecho:latest",
            "FromImageID": "b28cd00741b38c92382ee806e1653eae0a56402bcd2c8d31bdcd36521bc267a4",
            "FromImageDigest": "sha256:0f5b06cbd51b464fabe93ce4fe852a9038cdd7c7b7661cd7efef8f9ae8a59585",
            "Config":
            ...
             "Entrypoint": [
                        "/bin/sh",
                        "-c",
                        "\"/usr/local/bin/myecho\""
                    ],
            ...
        }
        ```
    -   要检查来自于 `myecho`{.literal} 镜像的工作容器：
        ::: orderedlist
        1.  创建一个基于 `localhost/myecho`{.literal}
            镜像的可工作的容器：
            ``` literallayout
            # buildah from localhost/myecho
            ```
        2.  检查 `myecho-working-container`{.literal} 容器：
            ``` literallayout
            # buildah inspect ubi-working-container
            {
                "Type": "buildah 0.0.1",
                "FromImage": "registry.access.redhat.com/ubi8/ubi:latest",
                "FromImageID": "272209ff0ae5fe54c119b9c32a25887e13625c9035a1599feba654aa7638262d",
                "FromImageDigest": "sha256:77623387101abefbf83161c7d5a0378379d0424b2244009282acb39d42f1fe13",
                "Config":
                ...
            "Container": "ubi-working-container",
            "ContainerID": "01eab9588ae1523746bb706479063ba103f6281ebaeeccb5dc42b70e450d5ad0",
            "ProcessLabel": "system_u:system_r:container_t:s0:c162,c1000",
            "MountLabel": "system_u:object_r:container_file_t:s0:c162,c1000",
            ...
            }
            ```
        :::
    :::
:::
::: itemizedlist
**其他资源**
-   `buildah-inspect`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#assembly_building-container-images-with-buildah_building-running-and-managing-containers.html#proc_modifying-a-container-using-buildah-mount_assembly_building-container-images-with-buildah}使用 buildah mount 修改容器 {.title}
:::
使用 `buildah inspect`{.literal} 命令显示有关容器或镜像的信息。
::: itemizedlist
**先决条件**
-   使用 Containerfile 中的指令构建的镜像。详情请参阅 [使用 Buildah 从
    Containerfile
    构建镜像](#assembly_building-container-images-with-buildah_building-running-and-managing-containers.html#proc_building-an-image-from-a-containerfile-with-buildah_assembly_building-container-images-with-buildah "使用 Buildah 从 Containerfile 构建镜像"){.link}
    一节。
:::
::: orderedlist
**流程**
1.  创建一个基于 `registry.access.redhat.com/ubi8/ubi`{.literal}
    镜像的可工作容器，并将容器名称保存到 `mycontainer`{.literal}
    变量中：
    ``` literallayout
    # mycontainer=$(buildah from localhost/myecho)
    # echo $mycontainer
    myecho-working-container
    ```
2.  挂载 `myecho-working-container`{.literal} 容器，并将挂载点路径保存到
    `mymount`{.literal} 变量中：
    ``` literallayout
    # mymount=$(buildah mount $mycontainer)
    # echo $mymount
    /var/lib/containers/storage/overlay/c1709df40031dda7c49e93575d9c8eebcaa5d8129033a58e5b6a95019684cc25/merged
    ```
3.  修改 `myecho`{.literal} 脚本并使其可执行：
    ``` literallayout
    # echo 'echo "We modified this container."' >> $mymount/usr/local/bin/myecho
    # chmod +x $mymount/usr/local/bin/myecho
    ```
4.  从 `myecho-working-container`{.literal} 容器创建 `myecho2`{.literal}
    镜像：
    ``` literallayout
    # buildah commit $mycontainer containers-storage:myecho2
    ```
:::
::: orderedlist
**验证**
1.  列出本地存储中的所有镜像：
    ``` literallayout
    # buildah images
    REPOSITORY                                  TAG      IMAGE ID       CREATED          SIZE
    docker.io/library/myecho2                   latest   4547d2c3e436   4 minutes ago    234 MB
    localhost/myecho                            latest   b28cd00741b3   56 minutes ago   234 MB
    ```
2.  运行基于 `docker.io/library/myecho2`{.literal} 镜像的
    `myecho2`{.literal} 容器：
    ``` literallayout
    # podman run --name=myecho2 docker.io/library/myecho2
    This container works!
    We even modified it.