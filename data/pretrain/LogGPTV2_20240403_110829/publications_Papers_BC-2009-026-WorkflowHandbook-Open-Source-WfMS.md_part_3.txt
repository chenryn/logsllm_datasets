process definition application. RUNA WFE is partially conformal to the WfMC
model because it does not interact with other workflow enactment services.
2. Runtime perspective. The installation and testing of RUNA WFE took 2 hours
and 20 minutes. The comprehensive documentation provided was sufficient to
install and test this system without facing any major problem. The friendly web
based administration/client application offered also contributed to an easy test-
ing. RUNA WFE requires the installation of JDK. This workflow system works
upon the middleware platform. It offers an easy integration with the most popular
database management systems and also supports an effective treatment of trans-
actions, allowing exceptions treatment and rollback during process execution.
3. Design time perspective. The definition of our sample workflow process, us-
ing RUNA GPD (a process editor for RUNA that sits upon Eclipse workbench),
took 3 hour and 57 minutes. The documentation provided was comprehensive,
describing several workflow process definition examples. This workflow system
does not allow the definition of sub processes, which results in the creation of
complex and confusing workflow diagrams. It also requires the direct implemen-
tation of the user forms; which may become quite hard for inexperienced users.
For these reasons, the definition of our workflow process was quite complicated. It
supports the definition of the organizational perspective. The workflow language
used by RUNA WFE is jPDL.
WfMOpen
WfMOpen is a J2EE based implementation of a workflow engine. The workflow
component is based on a set of Java interfaces that defines API for workflow
management facility. It may be used as the core for any process based application
implementation and is well suited in providing solutions for business process
management related jobs [15]. In May 2008, the most recent update, WfMOpen
2.2, was released.
1. WfMC reference model. WfMOpen is only partially conformal to the WfMC
model, because it does not interact with other workflow enactment services.
2. Runtime perspective. It took 12 hours and 47 minutes in order to correctly
install and test a working version of WfMOpen. The information available in the
documentation provided was confusing, dispersed over the document and in
342
OPEN SOURCE WORKFLOW MANAGEMENT SYSTEMS: A CONCISE SURVEY
many aspects insufficient. This was the main reason for making the installation
and testing of this workflow solution very complex. Moreover, besides the fact that
it is poorly documented, the web-based management environment offered is in
many aspects quite user unfriendly. WfMOpen requires the installation of JDK
and JBoss. This workflow system works upon a middleware platform (Java RMI,
CORBA and SOAP). The database integration is achieved only using the default
DBMS of this workflow system. It offers build-in solutions for handling exceptions
during a process execution.
3. Design time perspective. To correctly define our sample workflow process
using JPEd, we spent 3 hours and 3 minutes. The lack of documentation about
JPEd reflected negatively upon the ease of the process definition, making it quite
complex. After understanding how it works, JPEd becomes very practical and
easy to use. It supports the organizational perspective. WfMOpen uses XPDL with
some extensions to define workflow processes.
YAWL
The YAWL system is an open source workflow solution based on the YAWL (Yet
Another Workflow Language) language, designed by Wil van der Aalst, Lachlan
Aldred, Marlon Dumas and Arthur ter Hofstede, members of the Faculty of Infor-
mation Technology of Queensland University of Technology. The project designers
developed this new language by taking Petri nets as a starting point and adding
mechanisms to allow for a more direct and intuitive support of the workflow pat-
terns identified [16]. YAWL provides direct support for all of the workflow patterns
and offers mechanisms that allow persistence, automated form generation and
workflow administration [17]. YAWL supports the control-flow perspective, data
perspective, and is able to interact with web services. The last version of the sys-
tem, version 2.2, was released in November 2008.
1. WfMC reference model. YAWL system is completely conformal to the WfMC
reference model specifications.
2. Runtime perspective. The YAWL system was developed for research pur-
poses. YAWL installation and testing took only 49 minutes. The documentation
provided by the developers is comprehensive, describing in detail each step of the
installation and allowing us to install the software without facing any major prob-
lems. In fact, the installation of the software was simple. This workflow system
provides a web based administration/client application that is very user friendly
and easy to use. In order to work properly, YAWL system installation requires
JRE and Apache Tomcat. This system is compatible with a middleware platform:
SOAP. The database integration provided does not support some of the most
popular DBMS available. It only offers integration with PostrgreSQL as an alterna-
tive to Hypersonic. It allows exceptions treatment during process execution.
3. Design time perspective. Using the graphical editor provided, which is not
web-based, we spent 1 hour and 55 minutes in order to correctly define our sam-
ple workflow process. The provided documentation related to the editor was com-
prehensive. The definition of our sample process was simple. In fact, the process
definition editor uses a small set of elements to design a process, simplifying its
analysis. It is also based on a “drag and drop” idea. This situation makes it easier
to add or to edit elements of the flow diagram. However, one of the major draw-
backs of this workflow solution is that it does not support the organizational per-
spective. For this reason, we are not able to associate participants or roles to a
task.
343
OPEN SOURCE WORKFLOW MANAGEMENT SYSTEMS: A CONCISE SURVEY
RELATED WORK
Aalst et al. [16] offers a comparison of the functionality of 15 workflow languages
based on a set of workflow patterns. We have a different objective since our aim is
to evaluate the main features offered, the easiness of the installation and use of
WfMS as well as the easiness of the definition of workflow processes. The research
on runtime and design time perspectives of workflow systems is very limited.
However, these two perspectives have been somewhat and indirectly addressed by
academic papers. In [21], Murray offers a case study that analyses the implemen-
tation of a commercially available healthcare workflow system in two hospitals’
settings. The framework proposed also includes a parameter with the same aim
as our parameter named organizational perspective. It also proposes the parame-
ter ease of use of the WfMS which is similar to our parameter easiness of utiliza-
tion. The research developed by Stoilova and Stoilov [22] addresses problems re-
lated to the assessment and comparison of workflow management systems. The
paper proposes an evaluation template composed by eight categories. The func-
tional category is composed by some parameters equivalent to the ones that we
have used. These parameters are: modeling process definition, workflow client ap-
plication, integration with other workflow engines (supported standards) and ad-
ministration and monitoring. The paper also proposes another evaluation category:
usability. This category is related with our parameter: easiness of utilization.
RELEVANCE AND VALUE
The selection of an adequate workflow system to manage the business processes
of an organization is an important and complex decision that depends on several
aspects. The decision is significant due to the wide and heterogeneous set of
WfMS available, either commercial or open source. The use of open source solu-
tions may become very advantageous for organizations since source code as well
as the right to modify it allows organizations to address specific requirements.
Moreover, there are many success cases using this type of software. Nowadays,
open source software is used extensively in the industry. The recent acceptance of
Linux and the Apache project are excellent examples of this phenomenon. Due to
the success of open source solutions, open source workflow systems have, there-
fore, become particularly interesting and appealing to IS and IT decision makers.
From a set of open source WfMS currently available, we have chosen the most
popular and, in our opinion, most interesting WfMS to be analyzed and com-
pared. The framework proposed in this chapter for comparing open source WfMS
is based on the WfMC reference model and on the runtime and design time per-
spective of workflow systems. This chapter offers an important study for industry
decision makers by providing a starting point to the complex process of selecting
an open source WfMS.
ACKNOWLEDGEMENTS
This work has been support by Foundation for Science and Technology (FCT),
POCTI-219 and FEDER. The support of SAP Research, CEC Dresden, Germany,
is also gratefully acknowledged.
REFERENCES
1. TDG, Open Source Software: Case Studies Examining Its Use. 2003, The
Dravis Group.
2. Peeling, N. and J. Satchell, Analysis of the Impact of Open Source Software.
2001, QinetiQ.
344
OPEN SOURCE WORKFLOW MANAGEMENT SYSTEMS: A CONCISE SURVEY
3. Aalst, W.M.P.v.d. and K.v. Hee, Workflow management: models, methods, and
systems. 1st edition ed. 2002: MIT Press Cambridge, MA, USA.
4. EWLS, Free Software / Open Source: Information Society Opportunities for
Europe? 2000, European Working group on Libre Software.
5. Kenwood, C.A., A Business Case Study of Open Source Software. 2001, The
MITRE Corporation.
6. Hollingsworth, D., The Workflow Reference Model. 1995, Workflow Manage-
ment Coalition.
7. BONITA. BONITA: Workflow Cooperative System. 2007 [cited 21. May 2007];
Available from: http://bonita.objectweb.org.
8. Shark. Enhydra Shark: Java Open Source workflow engine based on XPDL.
2007 [cited 22.05.2007]; Available from:
http://www.enhydra.org/workflow/shark/index.html.
9. jawflow. jawflow: Java Workflow Manager. 2007 [cited 22.05.2007]; Available
from: https://www-
304.ibm.com/jct03004c/servers/solutions/finder/solution/overview.jsp?solu
tion_id=soq74085540080014002%7C30.
10. jBPM. JBoss jBPM. 2007 [cited 22.05.2007]; Available from:
http://www.jbpm.org/.
11. JFolder. JFolder - Application development and deployment platform. 2006
[cited 22.05.2007]; 1.1 Alpha:[Available from: http://www.powerfolder.org.
12. JOpera. JOpera Project: Process Support for more than Web Services. 2004
[cited 22.05.2007]; Available from: http://www.iks.ethz.ch/jopera.
13. OpenWFE. OpenWFE - open source workflow engine. 2007 [cited
22.05.2007]; Available from: http://www.openwfe.org/.
14. Runa. RUNA WFE. 2007 [cited 22.05.2007]; Available from:
http://runawfe.sourceforge.net/.
15. WfMOpen. WfMOpen. 2005 [cited 22.05.2007]; Available from:
http://wfmopen.sourceforge.net.
16. Aalst, W.M.P.v.d., et al., Workflow Patterns. Distributed and Parallel Data-
bases, 2003. 14(1): p. 5-51.
17. YAWL. YAWL: Yet Another Workflow Language. 2007 [cited 22.05.2007];
Available from: http://yawlfoundation.org/product/index.php.
18. Fitzgerald, B. and T. Kenny. Open Source Software can Improve the Health of
the Bank Balance - The Beaumont. in 24th International Conference on Infor-
mation Systems (ICIS). 2003. Seattle.
19. Scacchi, W. OpenEC/B: electronic commerce and free/open source software
development. in The 5th Workshop on Open Source Software Engineering, part
of The 27th International Conference on Software Engineering (ICSE 2005).
2005. St. Louis, Missouri: ACM Press, New York, NY, USA.
20. Gurbani, V.K., A. Garvert, and J.D. Herbsleb, A case study of open source
tools and practices in a commercial setting. SIGSOFT Softw. Eng. Notes, 2005.
30(4): p. 1-6.
21. Murray, M. Strategies for the Successful Implementation of Workflow Systems
within Healthcare: A Cross Case Comparison. in 36th Annual Hawaii Interna-
tional Conference on System Sciences (HICSS'03). 2003: IEEE Computer Soci-
ety Washington, DC, USA.
345
OPEN SOURCE WORKFLOW MANAGEMENT SYSTEMS: A CONCISE SURVEY
22. Stoilova, K. and T. Stoilo. Comparison of Workflow Software Products. in Inter-
national Conference on Computer Systems and Technologies - CompSys-
Tech'2006. 2006. Veliko Tarnovo, Bulgaria.
Bonita, 335
Enhydra Shark, 335
framework, 333
JawFlow, 335
JBoss jBPM, 335
JFolder, 335
JOpera, 335
open source software, 333
open source workflow systems, 335
OpenWFE, 335
RUNA WFE, 335
WfMC reference model, 334
WfMOpen, 335
Workflow Management Systems, 333
YAWL, 335
346