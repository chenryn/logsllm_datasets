range is 2β.
Therefore, highly accurate load change detection, such as what
we can do for BE and NILL, is impossible for stepping algorithms.
However, it is still possible to recover some information about de-
mand load changes from the external load changes. We use mutual
information measures to evaluate these stepping algorithms.
6. EXPERIMENTAL RESULTS
6.1 Datasets and Experiment Methodology
In our experiments, we use two collections of datasets: one-
second resolution datasets and a one-minute resolution datasets.
The one-second resolution datasets were collected in four houses
and apartments in the north-eastern United States over the course
of one month in spring. Speciﬁc details of these datasets can be
found in [29]. The one-minute resolution datasets are from a study
published on the UK Data Archive [39]. This study includes elec-
tricity data measured at one-minute resolution in 22 dwellings over
two complete years (2008 and 2009). Each dwelling was ﬁtted with
a single meter covering electricity use of the whole dwelling.
We note that some of the data are not complete. Small gaps in the
one-second dataset were patched using interpolation as described
in [29]. We refer to these four datasets as S1 through S4.
There also exist some holes where data is missing in the one-
minute data. For each of these datasets, we extract the longest con-
secutive sets of measurements. We chose the six longest segments
to use, and denote them by M1 through M6. The longest, denoted
by M1, is a full year long. The shortest is about 244 days long.
In each experiment, we evaluate batteries of different sizes. For
ease of interpretation, we report battery sizes in Kilowatt hours
(KWh)1 For example, a 1.0 KWh battery can be thought of as de-
livery 1 KW of energy for 1 hour before being depleted. In our
experiments, we assume βc = βd and all the batteries have the
same ratio between capacity and βd. Speciﬁcally, we set max dis-
charge rate at 1C, which means that if a full battery discharges at
its maximum rate, it will be discharged to empty in 1 hour.
Before presenting the numerical experimental results, we ﬁrst
plot the external load outputted by BE, NILL and LS2 on a seg-
ment of dataset S1, in order to give an intuitive feeling of these
algorithms’ behavior. Figure 2 shows the plot; it includes the orig-
inal demand load at the top to felicitate examination. The battery
used has capacity 0.5KWh. We can clearly see that the behavior
of NILL is such that all demands lower than 0.5KW is hidden, but
demand loads above 0.5KW are mostly preserved in the output. In
the output of BE, we observe that the slope from around 30600 to
1While batteries are often speciﬁed in terms of Amp hours (Ah),
the results are equivalent.
 2500
 2000
 1500
 1000
 500
 0
30000
31000
32000
33000
34000
35000
(a) Original demand load
 2500
 2000
 1500
 1000
 500
 0
30000
31000
32000
33000
34000
35000
(b) External load by BE
 2500
 2000
 1500
 1000
 500
 0
30000
31000
32000
33000
34000
35000
(c) External load by NILL
 2500
 2000
 1500
 1000
 500
)
W
(
r
e
w
o
p
)
W
(
r
e
w
o
p
)
W
(
r
e
w
o
p
)
W
(
r
e
w
o
p
 0
30000
31000
32000
33000
34000
35000
(d) External load by LS2
Figure 2: Effect of different algorithms on dataset S1 with bat-
tery capacity 0.5KWh.
421 
31600 clearly match that in the original demand. However, the LS2
stepping algorithm leaks very little information from the demand
series.
6.2 Load-Change Detection of NILL and BE
We now evaluate the efﬁcacy of our analysis described in Sec-
tion 4 to detect events in external loads under both NILL and BE.
As the stepping algorithms are by design not vulnerable to this anal-
ysis, they are evaluated later using mutual information measures.
Table 5 reports the results of detecting load-change events in the
output of NILL and BE algorithm. As can be seen, signiﬁcantly
more events can be recovered under NILL than under BE. This is
because when NILL encounters a period of peak loads it leaks the
shape of the demand load during this period. BE, on the other hand,
attempts to maintain the current load at all times, and thus only
part of the beginning and the ending of the peak periods can be de-
tected. However, for both algorithms, the detection technique was
satisfying. For one-second datasets, we got 96%-100% accuracy
on identifying detected load events for almost all our experiment.
Focusing on the left hand side of the table, it is clear that both
algorithms are dependent upon battery size. This is because larger
batteries have higher discharge rates (βc/βd = 1), and thus more
peaks can be completely covered by both algorithms. Turning to
the right hand side, it can be seen that the accuracy of our detection
algorithm is independent of the nature of the residence, e.g., many
events or few events.
In light of this, we conclude that both of
these error-minimizing algorithms are insufﬁcient to hide appliance
usage without a prohibitively expensive battery.
We observe that the detection results for the one-minute dataset
corroborate with those for the one-second data. While the numbers
of detected events are smaller, this is due to the fact that one day
has 1/60 as many minutes as the number of seconds. When adjusted
by a factor of 60, the percent of time points which are detected is
signiﬁcantly higher than that in the one-second. This higher detec-
tion rate, however, comes at a cost of slightly lower accuracy rate,
which ranges from about 80% to about 95%. These results show
that even at the lower resolutions used by modern smart meters, the
accuracy of the detection algorithm is still acceptable, albeit, fewer
individual load events are detectable because of the lower resolu-
tion.
6.3 Evaluating Stepping Algorithms
We now turn to our comparison of the stepping algorithms with
the NILL and BE algorithms under the mutual information metrics
and . The results for minute-level datasets are shown in Figure 3.
Figures 3(a) and 3(b) show mutual information under the inde-
pendence assumption. As can be seen in 3(a), the mutual informa-
tion is highly dependent on battery size. This is due to the same
effect seen in the previous section, where fewer partial events leak
into the external load with a higher maximum discharge rate. Fig-
ure 3(b) shows that for a 0.5 KWh battery2, three of the stepping al-
gorithms LS1, LS2 and RC clearly dominates the other algorithms
on all four residences.
While stepping algorithms can naturally hide magnitude of load
changes, we are also interested in knowing whether they can hide
the existence of change events. To do this we repeat the experiment,
this time we set a threshold, which is 20W in the experiment. Any
value in e′(t) or d′(t) above the threshold are considered to be an
event and thus assigned as 1 and any value below as 0. As can be
seen in Figures 3(c) and 3(d), for the given threshold value, these
results are signiﬁcantly less dependent on battery size. Also in con-
2A 0.5 KWh battery at 120 V nominal would retail from $100-$300
USD.
trast to the previous experiment, the RC algorithm outperforms the
others. This is because whether there is a change or not in RC’s
output is randomly determined; thus it is less correlated with d(t).
However, LS1 and LS2 still outperforms all algorithms except RC.
The results for the mutual information under the Markov as-
sumption are shown in Figure 3(e) and 3(f). The results are close to
those with the independence assumption, with LS1 and LS2 clearly
dominating other algorithms. This suggests that the dependencies
between load events are signiﬁcantly weakened by load hiding.
The results for mutual information of the one-second data are
shown in Figure 4. We can see that the results are similar to that
of the one-minute data, except that for one of four datasets (S4),
BE performs the best for mutual information and mutual informa-
tion under Markov assumption, followed by the three stepping al-
gorithms LS1, LS2 and RC. We believe that this is caused by the
range of the dataset is too large so that the battery size is too small
for this dataset. Actually, if the capacity of battery is 1KWh, the re-
sult of BE is similar to that of LS1 and LS2. And if the capacity of
battery is even larger, LS1 and LS2 outperform BE. Also, RC still
dominates in the experiment of binary version mutual information.
Reducing the Battery Capacity. We note that when one uses
large-enough batteries, then either BE or NILL would leak little
information, because both algorithms could hold the external load
constant for long period of time with a large battery. However, a
large battery would be expensive, and it seems unlikely that many
users would be willing to pay substantially for protection against
privacy concerns caused by smart meters. Therefore, we argue that
research on BLH should focus on the cases of using small batter-
ies. In our experiments, we consider batteries of size ranging from
0.1KWh to 1.2 KWh. According to [29], a 0.6KWh battery costs
around $100.
In this ﬁnal set of experiments, we show that using stepping algo-
rithms one can obtain good privacy protection with a smaller batter,
and thus a lower cost. We use the two longest datasets M1 and S1.
This requires searching through many difference battery parame-
ters, and we use the mutual information measure under Markov
assumption as the criterion of privacy level. Table 6 reports the
comparison of such measurement among LS2, BE, and NILL. For
the dataset S1, to gain similar privacy level, BE needs a battery
with the capacity that is 1.41 times that of LS2, and NILL needs
3.54 times. On the M1 dataset, the ratio is even larger, 3.54 for BE
and 6.62 for NILL.
7. RELATED WORK
Methods have been proposed to extend existing NILM algo-
rithms.
In [22], Kim et al. propose a method to extend NILM
algorithms to cases where one does not have a priori knowledge
of appliance signatures using hidden Markov models. In the case
where fairly exact appliance signatures are known, the steady state
load can be disaggregated into its individual loads by solving a bi-
nary knapsack problem [26]. In [31], Molina-Markham et al. show
how to use off-the-shelf statistical tools to detect household habits
from power consumption patterns.
In another study, Lisovich et
al. [28] show that in a living environment monitored by cameras,
sleep schedules and presence of occupants could be determined
with over 90% accuracy after a three days training phase.
Varodayan and Khisti [42] propose another battery system in a
simpliﬁed binary model where at each time the demand load and
the external load can be either 0 or 1. They also use mutual infor-
mation between the external load and the demand load to measure
information leakage, and show that stochastic battery policies can
decrease information leakage with respect to the best-effort algo-
422n
o
i
t
a
m
r
o
f
n
I
l
a
u
t
u
M
 1.1
 1
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
n
o
i
t
a
m
r
o
f
n
I
l
a
u
t
u
M
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1.0
1.1
1.2
M1
M2
M3
M4
M5
M6
Battery Capacity (KWh)
BE
NILL
LC
LS1
LS2
RC
BE
NILL
Dataset
LC
LS1
LS2
RC
(a) MI between e′(t) and d′(t) under independence assumption.
Varying battery capacity with dataset M1.
(b) MI between e′(t) and d′(t) under independence assumption.
Varying datasets with battery set at 0.5KWh.
n
o
i
t
a
m
r
o
f
n
I
l
a
u
t
u
M
 0.45
 0.4
 0.35
 0.3
 0.25
 0.2
 0.15
 0.1
 0.05
 0
n
o
i
t
a
m
r
o
f
n
I
l
a
u
t
u
M
 0.18
 0.16
 0.14
 0.12
 0.1
 0.08
 0.06
 0.04