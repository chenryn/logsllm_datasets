work element change. We call these rules single actor rules and the
network element so identiﬁed the single actor.
For concreteness, assume that network element e is the single
actor, and the changed paths go through e on day k but not on
day k + 1. Among all the paths being considered, deﬁne D =
Pk \ Pk+1 as the paths that disappeared; De as the paths in D
passing through e; and Pk,e as the paths in Pk that pass through e.
If e is the single actor, by the single actor rules one concludes that
e = |De|
rD
|Pk,e| should be close
to 1. In other words, rD
e captures the fraction of disappeared paths
passing through e (rule (a)) and pD
e captures the fraction of paths
passing through e that disappeared (rule (b)).
|D| should be close to 1, and pD
e = |De|
e and rD
For intuition, we note that pD
e correspond respectively
to the deﬁnitions of precision and recall for a particular classiﬁer.
This classiﬁer is the one that declares that a path will disappear if
the path passes through e on day k. In other words, maximizing pD
e
and rD
e with regard to e yields the network element that best classi-
ﬁes the paths as changing versus unchanging. Following common
practice in machine learning, we combine precision and recall into
the F-score. In fact, in our case we use the F2 score deﬁned by
2 (e) = 5pD
F D
We can make analogous deﬁnitions covering the set of paths that
appear on day k + 1. In that case, we deﬁne A = Pk+1 \ Pk, and
Ae as the paths in A that pass through e. Hence, pA
|Pk+1,e| ,
and the same interpretation given
to place higher emphasis on the role of recall.
e = |Ae|
e rD
e
e +rD
e
4pD
2 (e) = 5pA
e = |Ae|
rA
4pA
above is valid here as well.
|A| , F A
e rA
e
e +rA
e
In practice one does not know a priori whether e will be found
using the single actor rules applied to disappeared paths on day
k, or appearing paths on day k + 1. To overcome this problem we
1The assumption that the cause of the event will be in the new or
old path is not always true [14]. However, PathMiner is built under
such assumption because it deals with large-scale events, where the
likelihood of observing paths passing through the cause increases.
429Table 5: Single actor analysis of Top-5 events of each year
76
38
38
57
30*
50
13
103
58
93
14
18
35
16*
6
16*
Most Frequent Actor Days
31050
23918
1299
8342
20485
23918
3257
33697
20485
33697
174
1273
4637
3257
7575
9121
25462
174
25462
3303
3216
15412
3216
8359
29049
30890
3491
21219
5588
13249
5588
3549
3491
12989
174
38312
29632
4755
56209
4651
7713
12880
8529
10029
21219
3
12
5
8
2*
62
7
10
5
14
11
2
8*
8
16
17
13
4*
10
142
37
96
91
8
28
52
19
116
Dataset
2005
2006
2007
2008
2009
2010
2011
2012
2013
deﬁne the candidate single actor to be the network element (or set of
elements) that maximizes ∆F (e) = max{F D
2 (e)}. From
this analysis we exclude AS-links that are seen on days k and k + 1
and ASes which all incoming and outgoing AS-links are also seen
on days k and k + 1. This decision is justiﬁed by the fact that an
AS-link that has not been disrupted and an AS that, explicitly, has
not changed its local preference and/or export policies are unlikely
the element that triggers a large-scale event.
2 (e), F A
This algorithm is effective, but can some times return multiple
elements as candidate single actors for any given day k in an event.
However, one can bring one more observation to bear: the single
actor should be the same over all days k in the event. This offers an
additional opportunity to winnow the set of candidate single actors.
So the ﬁnal step of the single actor analysis is: for events that re-
occur over a set of days K, repeat the single-day strategy for every
k ∈ K. Then, deﬁne as the ﬁnal single actor of the event the
element (or elements) that is observed in the candidate single actors
set in at least the majority of the days in K. If such element is
not found (no element is a candidate single actor in the majority
of days) the algorithm declares that it was not able to identify the
cause of the event.
7.2 Performance
PathMiner is able to identify the actors responsible for most of
the events presented in Table 4. Table 5 shows the ASes identi-
ﬁed as the single actor for each event, and the number of days that
the element was classiﬁed as single actor (note that in the table we
present only the most frequent one and that other elements, present
in the majority of days, also have to be considered as possible ac-
tors). The boldface numbers indicate the cases where PathMiner
identiﬁed the same element(s) as cause(s) for a majority of days in
the event. It can be seen that PathMiner has more difﬁculty identi-
fying single actors for events spanning many days and/or involving
few ASes.
In order to validate the actors identiﬁed by PathMiner for events
in Table 4 we performed a visual inspection of each event as fol-
lows4: for each day of each event we looked at the network ele-
ment identiﬁed as actor, the graphical representation of the event,
and asked two questions. First, “would an action of that network
element (e.g. an AS changing its local preferences and/or its export
policies) explain the occurrence of the event?” Second, “Do the
actions of this network element provide the simplest explanation
among all elements involved in the event?” If the answers for those
question were afﬁrmative in the majority of days of the event we
considered such event validated.
We also conducted analyses to understand how often PathMiner
is able to identify a single actor as cause of an event. Our ﬁrst
analysis is related to the maximum value of ∆F (e) obtained for
each day in an event and for all events that PathMiner found in
the 9 datasets. The results, presented in Figure 7(a) by a CDF,
indicate that large values are the predominant case. For instance,
the ﬁgure shows that the maximum ∆F (e) is equal to 1 in 40% of
the cases and is greater than 0.8 in more than 80%. These numbers
suggest that in most of the days within events PathMiner is capable
of ﬁnding a network element (or a set of) that, in fact, can explain
the massive amount of changes related to the event.
These results are promising, but note that they refer to individual
days within events. It is important to also ask how consistent the
4Graphical representations for these events and actor identiﬁca-
tion summary are available at http://cs-people.bu.edu/
gcom/bgp/imc2014. We also make available the same repre-
sentation and summary for another 500 randomly selected events
for the year of 2013.
4
* The actor found by PathMiner provides a
simple explanation for the event. However,
other elements providing a simple explana-
tion could be identiﬁed by visual inspec-
tion.
identiﬁcation is over the days of an event, and how often PathMiner
is able to ﬁnd the same actor over the set of days of the event. To
answer those questions we identiﬁed for each event the element that
appears as cause of the event most frequently over the days of the
event and the fraction of days this single actor has been identiﬁed.
Figure 7(b) presents the results. It can be seen (with exception of
2005) that in more than 40% of the events a single network ele-
ment has been observed by PathMiner as an event cause over all
days of the event. Furthermore, we can see that in more than 90%
of the events there is a single actor that is present over the major-
ity of days. For the cases where majority has not been found we
refer to Figure 7(c) to show that in some of them the event con-
tains many days, which naturally increases the complexity of the
problem. However, there are many small (in terms of days) events
for which PathMiner was not able to identify a single actor. Initial
430F
D
C
1
0.8
0.6
0.4
0.2
0
0
2005
2006
2007
2008
2009
2010
2011
2012
2013
2005
2006
2007
2008
2009
2010
2011
2012
2013
0.2
0.4
0.6
0.8
1
Maximum F score
(a)
F
D
C
0.8
0.6
0.4
0.2
0
0
1
s
y
a
d
f
o
n
o
i
t
c
a
r
F
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.2
0.4
0.6
0.8
1
Fraction of days
(b)
50
100
150
200
Number of Days within the event
(c)
Figure 7: Summary of our methodology for Single Actor identiﬁcation: (a) CDF of ∆F , computed over each day of each event; (b)
CDF of the fraction of days that the same AS (or AS-link) is reported as actor (has maximum ∆F score) over all days of the event; (c)
scatterplot of the number of days within an event versus the fraction of days that the same AS (AS-link) is reported as actor – same
variable as in (b).
investigation reveals that those events are related to a small number
of ASes, and as consequence to a small number of paths, which is
not an ideal situation to work with measures such as precision and
recall. We emphasize that further investigation is necessary in that
direction as future work.
As a ﬁnal analysis, we list the ASes which, as actors had the
greatest impact on the network. We considered the year of 2013,
for all events that PathMiner was able to identify a single actor and
that involved at least 50 ASes (to avoid the problem of few paths
mentioned previously). Table 6 shows the top-20 ASes ranked in
three different ways: ﬁrst, by the number of events that the AS is
an actor; second, by the aggregate volume of all events that the AS
is an actor; and third, by the aggregate number of days of all events
that the AS is an actor. In all three cases, if more than one AS was
identiﬁed as actor, or if there was an AS-link, we counted each AS
involved individually. Therefore, events with more than one AS as
actor are counted more than once in Table 6.
Table 6: Three different rankings for the Top-20 Single Actors
Total volume Total days
AS9498
AS4755
AS6453
AS12880
AS6939
AS9002
#Events
AS174
AS9498
AS9002
AS3356
AS6939
AS3549
AS12389 AS174
AS3216
AS3549
AS20485 AS3216
AS6453
AS12389
AS31133 AS15412
AS20485
AS7018
AS3356
AS701
AS4755
AS3491
AS12880 AS55410
AS8167
AS10029
AS12989
AS6461
AS4651
AS209
AS197556
AS3491
AS8359
AS8167
AS9498
AS4755
AS6453
AS174
AS3549
AS3216
AS6939
AS3356
AS20485
AS15412
AS12389
AS9002
AS701
AS3491
AS18101
AS8167
AS12880