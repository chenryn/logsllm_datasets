# Diagnosing Network-Wide Traffic Anomalies

**Authors:**
- Anukool Lakhina, Boston University
- Mark Crovella, Boston University
- Christophe Diot, Intel Research, Cambridge, UK

**Abstract:**
Network traffic anomalies are unusual and significant changes in traffic levels that can span multiple links. Detecting and diagnosing these anomalies is crucial for both network operators and end users. The challenge lies in extracting and interpreting anomalous patterns from large, high-dimensional, and noisy datasets.

In this paper, we propose a general method to diagnose such anomalies by separating the high-dimensional space of network traffic measurements into disjoint subspaces corresponding to normal and anomalous conditions. We demonstrate that Principal Component Analysis (PCA) can effectively perform this separation. Using simple link-based traffic measurements, our method can:
1. Accurately detect when a volume anomaly is occurring.
2. Correctly identify the origin-destination (OD) flow responsible for the anomaly.
3. Accurately estimate the amount of traffic involved in the anomalous OD flow.

We evaluate our method's ability to detect, identify, and quantify both real and synthetically injected volume anomalies in traffic data from two backbone networks. Our method consistently diagnoses the largest volume anomalies with a very low false alarm rate.

**Categories and Subject Descriptors:**
- C.2.3 [Computer-Communication Networks]: Network Operations

**General Terms:**
- Measurement, Performance, Security

**Keywords:**
- Anomaly Detection, Network Traffic Analysis

## 1. Introduction

Understanding and analyzing traffic anomalies in a network is essential. Whether these anomalies are malicious or unintentional, they can cause congestion, stress resource utilization, and impact end users. The forms and causes of anomalies can vary widely, including Denial of Service (DoS) attacks, router misconfigurations, and BGP policy modifications.

Despite extensive research on traffic characterization, traffic anomalies remain poorly understood. This is due to several factors:
- Most ISPs only collect basic traffic measures, such as average traffic volumes using SNMP.
- Processing collected data is a demanding task, and ISPs lack tools for real-time anomaly detection.
- The high-dimensional and noisy nature of network-wide traffic makes it challenging to extract meaningful information about anomalies.

This paper addresses the problem of diagnosing traffic anomalies that may span multiple links using link-based statistics. Our approach involves three steps: detecting, identifying, and quantifying anomalies. We believe this three-step approach is suitable for addressing a wide variety of network traffic anomalies.

The goal of this paper is to provide a general technique for diagnosing traffic anomalies, which is a necessary first step towards understanding their causes. Our contributions include:
- A general approach to diagnose anomalies in network traffic.
- Application of this method to isolate "volume anomalies" using simple link traffic statistics.
- Validation of this method using real data from two different backbone networks.

## 2. Volume Anomalies

A typical backbone network consists of nodes (Points of Presence, PoPs) connected by links. An Origin-Destination (OD) flow is defined as the traffic that enters the backbone at the origin PoP and exits at the destination PoP. The path followed by each OD flow is determined by routing tables, and the traffic observed on each backbone link is the superposition of these OD flows.

A **volume anomaly** is a sudden positive or negative change in an OD flow's traffic. Such anomalies propagate from the origin PoP to the destination PoP. Detecting volume anomalies by collecting IP flow-level traffic summaries on all input links at all PoPs and applying temporal decomposition methods is impractical due to the high resource requirements.

Instead, we propose a simpler and more practical technique. Given that a volume anomaly propagates through the network, we can observe it on all links it traverses. Thus, we identify OD flow-based anomalies by observing only link counts.

### 2.1 An Illustration

Figure 1 illustrates the difficulty of diagnosing volume anomalies using only link data. The top plot shows an OD flow timeseries with an associated volume anomaly, which is not available to our algorithms but is presented to show the nature of the anomalies. The point at which each anomaly occurs is designated by a circle on the timeline. Below the timeline are plots of link traffic on the four links that carry the given OD flow. These plots represent the data available to our algorithm.

From these examples, we make three observations:
1. While the OD flows have pronounced spikes, the corresponding spike in the link traffic is less noticeable and difficult to detect even visually.
2. The temporal traffic patterns may vary substantially from one link to another, making it challenging to isolate all links exhibiting an anomaly.
3. Mean traffic levels vary considerably, making it difficult to estimate the size of the volume anomaly and its operational importance.

### 2.2 Problem Definition

The problem of diagnosing a volume anomaly in an OD flow can be separated into three steps:
- **Detection:** Designating points in time when the network is experiencing an anomaly. An effective detection algorithm should have a high detection probability and a low false alarm probability.
- **Identification:** Selecting the true anomaly type from a set of possible candidate anomalies. In this paper, our candidate set is the set of all individual OD flows.
- **Quantification:** Estimating the number of additional or missing bytes in the underlying traffic flows. Quantification is important because it provides a measure of the anomaly's significance.

For a successful diagnosis, one must be able to detect the time of the anomaly, identify the responsible OD flow, and quantify the size of the anomaly within that flow.

## 3. Data

Our technique operates on link traffic data, typically obtained via SNMP. For validation, we also use OD flow data, but this data is not an input to our algorithms. All data were collected from two backbone networks: Sprint-Europe and Abilene.

- **Sprint-Europe (Sprint):** The European backbone of a US tier-1 ISP with 13 PoPs, carrying commercial traffic for large customers.
- **Abilene:** The Internet2 backbone network with 11 PoPs, spanning the continental USA, carrying non-commercial traffic from major universities.

Table 1 summarizes the datasets studied, including the number of PoPs, period, number of links, and time bin.

| Network   | # PoPs | Period          | # Links | Time Bin |
|-----------|--------|-----------------|---------|----------|
| Sprint-1  | 13     | Jul 07-Jul 13   | 49      | 10 min   |
| Sprint-2  | 13     | Aug 11-Aug 17   | 49      | 10 min   |
| Abilene   | 11     | Apr 07-Apr 13   | 41      | 10 min   |

We collected sampled flow data from each router in both networks. For Sprint, we used Cisco’s NetFlow to collect every 250th packet, aggregated into flows at the network prefix level, and reported in 5-minute bins. On Abilene, sampling is random, capturing 1% of all packets, and aggregated at the 5-tuple level every minute using Juniper’s Traffic Sampling. We found good agreement (within 1%-5% accuracy) between sampled flow byte counts and corresponding SNMP byte counts on links with utilization more than 1 Mbps.

To construct OD flows from the raw flows collected, we identified the ingress and egress PoPs of each flow. For egress PoP resolution, we used BGP and ISIS routing tables. For Sprint, we supplemented routing tables with router configuration files to resolve customer IP address spaces. Abilene anonymizes the last 11 bits of the destination IP address, which is not a significant concern. Using this procedure, we collected two weeks of complete OD flow traffic counts from Sprint and one week from Abilene.

## 4. Subspace Analysis of Link Traffic

Effective diagnosis of anomalies requires the ability to separate them from normal network-wide traffic. In this section, we show how to use Principal Component Analysis (PCA) to separate normal and anomalous network-wide traffic conditions.

### 4.1 Notation

- **Routing Matrix A:** Captures the relationship between link traffic and OD flow traffic. \( A \) has size (\# links) × (\# OD-flows), where \( A_{ij} = 1 \) if OD flow \( j \) passes over link \( i \), and 0 otherwise.
- **Traffic Vectors:**
  - \( y \): Vector of traffic counts on links.
  - \( x \): Vector of traffic counts in OD flows.
  - \( y = Ax \).

- **Measurement Matrix Y:** \( t \times m \) matrix, where \( t \) is the number of successive time intervals and \( m \) is the number of links. Each column \( i \) denotes the timeseries of the \( i \)-th link, and each row \( j \) represents an instance of all the links at time \( j \).

- **Vectors and Matrices:**
  - All vectors are column vectors unless otherwise noted.
  - Vectors and matrices are displayed in boldface; matrices are denoted by upper case letters and vectors by lower case letters.

### 4.2 PCA

Principal Component Analysis (PCA) is a coordinate transformation method that maps a given set of data points onto new axes called principal components. When working with zero-mean data, each principal component points in the direction of maximum variance remaining in the data, given the variance already accounted for in the preceding components. The principal axes are ordered by the amount of data variance they capture.

By applying PCA to the ensemble of link traffic timeseries, we can separate the space of link traffic measurements into useful subspaces, representing normal and anomalous traffic behavior. Our anomaly diagnosis method, described in the next section, builds on this subspace separation.

---

This revised version aims to provide a clear, coherent, and professional presentation of the paper's content.