# Ectouch2.0 分析代码审计流程 (三) Xss And Csrf
|
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
Ectouch2.0 分析代码审计流程 (三) Xss 和 Csrf挖掘
## 0x1 前言
​ 为了文章的续集,我在准备考试之余,按耐不住跑去继续读了下Ectouch,我感觉自己写文章有时候真的挺多废话的,so let us focus on
analysis。今天讲下如何我是如何挖掘xss的,其中因为xss和csrf关系密切,这里也会有如何挖掘csrf的过程,漏洞可能比较鸡肋,但是这文章主要重点是在分享挖掘xss思路,希望大佬勿喷,也希望大佬多多指点。
阅读此文强烈建议阅读我之前写的审计系列:
> 1.[Ectouch2.0 分析解读代码审计流程](https://www.anquanke.com/post/id/168991)
>
> 2.[Ectouch2.0 分析代码审计流程 (二) 前台SQL注入](https://www.anquanke.com/post/id/169152)
## 0x2 系统配置的一些介绍
​ (1)除了$SERVER,输入全局进行了addalshes过滤
​ (2)默认I方法获取参数会使用htmlspecialchars进行过滤
​ (4)更多内容建议从前面开始阅读
​ (5)前台绝大部分没有token保护
## 0x3 谈谈我对xss和csrf的理解
​ xss> csrf,从大角度来讲csrf能做的事情xss都能做,所谓的xss和csrf的结合,其实是有一种这样的情况,就是self-xss
这个xss不能直接触发,但是结合csrf就能达到触发的目的。 (不对的话请师傅们斧正)
## 0x4 分析下模版渲染的过程
模版处理类文件(用的应该是smarty):
`/Users/xq17/www/ecshop/upload/mobile/include/libraries/EcsTemplate.class.php`
里面声明了一系列方法和属性,用来编译模版,输出html代码。
这里不展开内容讲,直接从实际例子出发(省略模版编译过程),方便理解
但是具体还可以参考上次我写的数据库类分析那样去通读下模版类过程。
以`upload/mobile/include/apps/default/controllers/ActivityController.class.php`为例
        public function index() {
            $this->parameter(); //获取输入参数 大概内容参考前篇有
            $this->assign('page', $this->page);//这里就赋予模版变量的值
            $this->assign('size', $this->size);//先记下来
            $this->assign('sort', $this->sort);
            $this->assign('order', $this->order);
            $count = model('Activity')->get_activity_count();
            $this->pageLimit(url('index'), $this->size);
            $this->assign('pager', $this->pageShow($count));
            $list = model('Activity')->get_activity_info($this->size, $this->page);
            $this->assign('list', $list);
            $this->display('activity.dwt');//主要是跟进这里,传入了模版文件名记忆一下方便理解。
        }
`upload/mobile/include/apps/default/controllers/CommentController.class.php`
        protected function display($tpl = '', $cache_id = '', $return = false)
        {
            self::$view->display($tpl, $cache_id);//进入/EcsTemplate类的display函数,跟进
        }
//下面分析都是EcsTemplate类的内容
    function display($filename, $cache_id = '') {
            $this->_seterror++; 
            error_reporting(E_ALL ^ E_NOTICE);//除去 E_NOTICE 之外的所有错误信息
            $this->_checkfile = false; //设置为false 记一下
            $out = $this->fetch($filename, $cache_id);//跟进这里 $filename=activity.dwt
            .............//省略,后面继续分析
            echo $out;
        }
       function fetch($filename, $cache_id = '') {
          ..................................//省略
            if (strncmp($filename, 'str:', 4) == 0) {//文件名如果有str:进入下面,这里跳过
                $out = $this->_eval($this->fetch_str(substr($filename, 4)));
            } else {
                if ($this->_checkfile) {//上面设置为了false跳过
                    if (!file_exists($filename)) {
                        $filename = $this->template_dir . '/' . $filename;
                    }
                } else {
                    $filename = $this->template_dir . '/' . $filename;//拼接出绝对路径
                    //$filename=upload/mobile/themes/ecmoban_zsxn/activity.dwt
                }
                if ($this->direct_output) {//开始就算false,跳过
                    $this->_current_file = $filename;
                    $out = $this->_eval($this->fetch_str(file_get_contents($filename)));
                } else {
                    if ($cache_id && $this->caching) { //跳过这里 $cache_id=0
                        $out = $this->template_out;
                    } else { //进入下面
                        if (!in_array($filename, $this->template)) {
                            $this->template[] = $filename;//文件名赋值给template数组
                        }
                        $out = $this->make_compiled($filename);//跟进这里
                        .................//省略待会再回来分析
        function make_compiled($filename) {
            //增加文件夹存在判断 by ecmoban carson
            $compile_path = $this->compile_dir;
            if (!is_dir($compile_path)) {
                @mkdir($compile_path, 0777, true);
            }
            $name = $compile_path . '/' . basename($filename) . '.php';
            //记录下这个变量
            //$name=upload/mobile/data/caches/compiled/activity.dwt.php
            if ($this->_expires) {//初始化为0,进入else
                $expires = $this->_expires - $this->cache_lifetime;
            } else {
                $filestat = @stat($name);//获取文件统计信息
                $expires = $filestat['mtime'];//文件上次修改的时间
            }
            $filestat = @stat($filename);
            //$filename=upload/mobile/themes/ecmoban_zsxn/activity.dwt
            if ($filestat['mtime'] force_compile) {//比较下建立时间
                if (file_exists($name)) {
                    $source = $this->_require($name);//这里主要跟进下_require
                    if ($source == '') {
                        $expires = 0;
                    }
                } else {
                    $source = '';
                    $expires = 0;
                }
            }
            .................//省略待会分析
        }
    function _require($filename) {
        //upload/mobile/data/caches/compiled/activity.dwt.php
            ob_start();
            include $filename; //跟进下这个文件
            $content = ob_get_contents();//获取缓冲区内容,其实就是上面文件的内容
            ob_end_clean();
            return $content;
        }
进入这个文件upload/mobile/data/caches/compiled/activity.dwt.php // **这里挺重要的,也是我想讲的**
    fetch('library/page_header.lbi'); ?> //加载头部的模版
          fetch('library/page_menu.lbi'); ?>//菜单模版
    fetch('library/new_search.lbi'); ?> fetch('library/page_footer.lbi'); ?> //都是加载模版,原理触类旁通就行了
     //这里是我想重点讲的,就是我们注册的变量$this->_var是经过什么操作进入了html代码里面
    $this->_var['page'], 'sort'=>$this->_var['sort'], 'order'=>$this->_var['order']));?>" , '__TPL__/images/loader.gif');
代码和实际对比下来理解
    get_asynclist("$this->_var['page'], 'sort'=>$this->_var['sort'], 'order'=>$this->_var['order']));?>" , '__TPL__/images/loader.gif'); 
    //提取出php代码
    $this->_var['page'], 'sort'=>$this->_var['sort'], 'order'=>$this->_var['order']));?>
    // 跟进url函数
    function url($route = 'index/index', $params = array(), $org_mode = '') {
        return U($route, $params, true, false, $org_mode); //跟进u函数 $param对应我们设置的变量
    }
直接显示的结果如图:
    function U($url='',$vars='',$suffix=true,$domain=false,$org_mode='') {
        // 解析URL
        $info   =  parse_url($url);
        // 解析子域名
    ......................
        // 解析参数
        if(is_string($vars)) { // aaa=1&bbb=2 转换成数组
            parse_str($vars,$vars);
        }elseif(!is_array($vars)){
            $vars = array();
        }
        if(isset($info['query'])) { // 解析地址里面参数 合并到vars
            parse_str($info['query'],$params);
            $vars = array_merge($params,$vars);
        }
    //url组装
        ...................
            if(!empty($vars)) { // 添加参数
                .........
        if(isset($anchor)){
            $url  .= '#'.$anchor;
        }
        if($domain) {
            $url   =  (is_ssl()?'https://':'http://').$domain.$url;
        }
        return $url;
    }
其实这个点如果可控的话,因为这里没有在进行处理的过程,这里`get_asynclist("`
这里很明显就是双引号闭合,如果有原生可控的$_GET等那么就是一处xss了。
不过回到`private function parameter()` 没有找到利用参数.
继续分析下去其实就是
`echo $out;` 把渲染好的模版进行输出了。
大概的模版解析流程就是这样子,
这里因为已经编译过了,所以直接是模版文件分析。
不过还是建议读下compile文件是如何生成的对应的标签变量是怎么转换的。
简单对比下:
这是模版文件,有各种标签
这是编译后的模版php文件
这里不展开讲解编译过程,不过后面研究getshell(模版注入)我会再进行分析,我的目的主要是告诉你们这样一个流程
理解的话还是需要你们自己去实践理解去debug代码。
## 0x5 谈下挖掘xss的思路
    >1. 关注点可以多从黑盒出发,文章、评论等存在富文本地方
    >
    >2. 寻找原生变量,或者I方法不调用htmlspcialchars的变量,再进去跟踪,是否直接echo或者进去了模版
    >
    >3. 寻找解码函数htmlspecialchars_decode()
    >
    >4. 寻找注册模版变量的原生变量,然后再去看模版有没有单引号包括。
    >
    >   或者反其道行之，阅读模版变量,逆向找可控。
    >
    >5. 前端代码审计,domxss,就是看下js有没有自己去进行调用,这样也可以绕过全局限制。
这套系统其实相对比较简单,没有那么多交互点,另一方面可能我水平比较菜(tcl)
## 0x5.5 谈下挖掘csrf的思路
​
csrf是需要交互的,最好最有效就是对后台功能点进行黑盒测试,基本用不上白盒,白盒唯一可以看看是token是不是可以伪造啥的,找的时候可以读一下验证token的代码,一般不会出现问题,这套系统前台没做token认证,这里我就不浪费时间分析这个了。
## 0x6 XSS And CSRF漏洞
####  0x6.1 前台AfficheController超级鸡肋的反射xss
直接选定前台目录,搜索`$_GET` `$_POST`
    class AfficheController extends CommonController