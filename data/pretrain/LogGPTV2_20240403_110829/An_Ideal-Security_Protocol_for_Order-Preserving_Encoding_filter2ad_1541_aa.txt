title:An Ideal-Security Protocol for Order-Preserving Encoding
author:Raluca A. Popa and
Frank H. Li and
Nickolai Zeldovich
2013 IEEE Symposium on Security and Privacy
2013 IEEE Symposium on Security and Privacy
An Ideal-Security Protocol for Order-Preserving Encoding
Raluca Ada Popa
MIT CSAIL
Frank H. Li
MIT CSAIL
Nickolai Zeldovich
MIT CSAIL
encryption—an
Abstract—Order-preserving
encryption
scheme where the sort order of ciphertexts matches the sort
order of the corresponding plaintexts—allows databases and
other applications to process queries involving order over
encrypted data efﬁciently. The ideal security guarantee for
order-preserving encryption put forth in the literature is for
the ciphertexts to reveal no information about the plaintexts
besides order. Even though more than a dozen schemes were
proposed, all these schemes leak more information than order.
This paper presents the ﬁrst order-preserving scheme that
achieves ideal security. Our main technique is mutable cipher-
texts, meaning that over time, the ciphertexts for a small
number of plaintext values change, and we prove that mutable
ciphertexts are needed for ideal security. Our resulting protocol
is interactive, with a small number of interactions.
We implemented our scheme and evaluated it on mi-
crobenchmarks and in the context of an encrypted MySQL
database application. We show that in addition to providing
ideal security, our scheme achieves 1–2 orders of magnitude
higher performance than the state-of-the-art order-preserving
encryption scheme, which is less secure than our scheme.
Keywords-order-preserving encryption, encoding
I. INTRODUCTION
Encryption is a powerful technique for protecting con-
ﬁdential data stored on an untrusted server, such as in
cloud computing [10, 12, 37]. One limitation of encrypting
conﬁdential data is that the data must usually be decrypted
for processing by an application—such as querying an
encrypted database or sorting encrypted email messages—
which requires trusting the server running the application.
The approach of computing on encrypted data avoids the need
of decrypting the data by a potentially untrustworthy server.
While recent work on fully homomorphic encryption shows
it is, in principle, possible to perform arbitrary computations
over encrypted data [14], the performance overheads are
prohibitively high, on the order of 109 times [15].
A practical approach for computing over encrypted data is
to use encryption schemes that allow an untrusted server to
execute speciﬁc computation primitives over the ciphertexts.
A common operation is order comparison, used for sorting,
range checks, ranking, etc. To allow an untrusted server to
perform order comparison on ciphertexts, many systems in
both research and industry use order-preserving encryption or
encoding schemes—that is, schemes where Enc(x) > Enc(y)
iff x > y. We abbreviate an order-preserving encryption or
encoding scheme (the latter may not be strictly an encryption
scheme) by OPE. OPE is primarily used in databases for
processing SQL queries over encrypted data [2, 13, 19, 21,
23, 26, 27, 33, 38], although it has also been used in the
© 2012, Raluca Ada Popa. Under license to IEEE.
1081-6011/13 $26.00 © 2013 IEEE
DOI 10.1109/SP.2013.38
DOI 10.1109/SP.2013.38
463
463
None
None
Order-preserving scheme Guarantees
Özsoyoglu et al.’03 [30]
Agrawal et al.’04
[2]
Boldyreva et al.’09 [6, 7] ROPF [6], §II-A
Agrawal et al.’09
Lee et al.’09
Kadhem et al.’10
Kadhem et al.’10
Xiao et al.’12
Xiao et al.’12
Yum et al.’12
Liu and Wang’12
Ang et al.’12
Liu and Wang’13
This paper(cid:2)
None
None
None
None
None
IND-OLCPA [39]
ROPF [6], §II-A
None
None
None
Ideal: IND-OCPA None
Leakage besides order
Yes
Yes
Half of plaintext bits
Yes
Yes
Yes
Yes
Yes
Yes
Half of plaintext bits
Most of the plaintext
Yes
Most of the plaintext
[1]
[23]
[20]
[21]
[38]
[39]
[40]
[26]
[3]
[27]
Figure 1.
Security provided by previous order-preserving encryption
or encoding schemes and our work, including the cryptographic security
guarantees provided by each scheme, and the information revealed by each
scheme in addition to the order of the plaintext values. We elaborate on
((cid:2)) Unlike prior schemes, our scheme uses an
this information in §II.
interactive protocol and mutable ciphertexts.
context of mail servers [3, 9, 32], web applications [9, 32],
CRM software [9, 35], and others. OPE is appealing because
systems can perform order operations on ciphertexts in the
same way as on plaintexts: for example, a database server
can build an index, perform SQL range queries, and sort
encrypted data, all in the same way as for plaintext data. This
property results in good performance and requires minimal
changes to existing software, making it easier to adopt.
The ideal security goal for an order-preserving scheme,
IND-OCPA [6], is to reveal no additional information about
the plaintext values besides their order (which is the minimum
needed for the order-preserving property). Despite a large
body of work on OPE schemes [1–3, 6, 7, 20, 21, 23, 26,
27, 30, 38, 39], none of the prior schemes achieve ideal
security: as shown in Fig. 1, they all leak more than just
the order of values. As we discuss in §II, many schemes
assume adversaries try to learn information from ciphertexts
in speciﬁc ways, but provide no security guarantees for
general adversaries. Boldyreva et al. [6] were the ﬁrst to
provide a rigorous treatment of the problem; in fact, they
showed that it is infeasible to achieve ideal security for OPE,
under certain implicit assumptions. As a result, they settled
on a weaker security guarantee that was later shown to leak
at least half of the plaintext bits [7]. Thus, current OPE
schemes allow an adversary to compromise the privacy of
conﬁdential data, beyond just learning the order of the items.
This paper presents the ﬁrst ideal-security order-preserving
encoding scheme where the ciphertexts reveal nothing except
for the order of the plaintext values. The insight that allows
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:52:32 UTC from IEEE Xplore.  Restrictions apply. 
us to avoid Boldyreva et al.’s infeasibility result [6] is
that most applications of OPE only require a relaxed OPE
interface that need not be as restrictive as the interface of
an encryption scheme. In particular, it is acceptable for the
encryption protocol to be interactive and for a small number
of ciphertexts of already-encrypted values to change as new
plaintext values are encrypted (e.g., it is straightforward to
update a few ciphertexts stored in a database). We call such
a scheme mutable order-preserving encoding, or mOPE, to
indicate the mutability of ciphertexts, and we use the word
encoding instead of encryption to emphasize our deviation
from the standard model of encryption. Building on this
insight, this paper makes several contributions, as follows:
1) We present the ﬁrst order-preserving scheme that achieves
an ideal, rigorous security guarantee for OPE called IND-
OCPA [6], which requires that an adversary learns nothing
except for the order of values.
2) We show that mutability is in fact required for ideal secu-
rity: speciﬁcally, we show that, without prior knowledge
of the values to be encrypted, ideal security for OPE is
infeasible even for a relaxed encryption model (stateful
and interactive) if ciphertexts are non-mutable.
3) We observe that when considering a database system,
an even stronger notion of security is possible and
desirable: we deﬁne same-time OPE security (stOPE),
which requires that an adversary only learns the order of
items present in the database at the same time, and we
provide a reﬁnement of mOPE that achieves this stronger
deﬁnition.
Intuitively, mOPE works by building a balanced search
tree containing all of the plaintext values encrypted by the
application. The order-preserving encoding of a value is the
path from the root to that value in the search tree. Thus,
if x is less than y, the path to x will be to the left of the
path to y; we represent tree paths using a binary encoding
where the encodings increase from left to right in a tree. The
search tree is stored on the same untrusted server that stores
the encrypted data, and the trusted client encrypts values
by inserting them into the tree using an interactive protocol.
The length of the path encoding is equal to the depth of the
tree, so to ensure ciphertexts do not become arbitrarily long,
mOPE rebalances the search tree. This requires updating
ciphertexts corresponding to any items whose location in
the tree changed as a result of rebalancing, but we show
that only a small number of already-encrypted values change
ciphertexts for each newly encoded value.
To understand the performance of mOPE, we implemented
mOPE (and the same-time OPE security variant) under both
a honest-but-curious and a malicious server model, and
evaluated it using a range of microbenchmarks. We show that
mOPE achieves 1–2 orders of magnitude higher performance
than the state-of-the-art OPE scheme by Boldyreva et al. [6]
(which does not achieve ideal security).
To demonstrate how mOPE can be used in an application,
we use mOPE to execute SQL queries over encrypted data in
a MySQL database. We present a transformation summary
technique to efﬁciently update mutable ciphertexts using a
single UPDATE SQL query, and show that updating ciphertexts
in the encrypted database application incurs low overheads
on queries from the industry-standard TPC-C benchmark.
The rest of this paper is organized as follows. §II discusses
related work. §III formally presents our threat model. §IV
presents mOPE in more detail, and §V shows that non-
mutable secure OPE is infeasible to achieve. §VI extends
our mOPE construction to provide same-time security, and
§VII describes how mOPE handles malicious servers. §VIII
illustrates how mOPE can be integrated into a database
application. §IX describes our implementation, and §X
evaluates the performance of mOPE. Finally, §XI concludes.
II. RELATED WORK
There has been a signiﬁcant amount of work on OPE
schemes both in the research community [1, 2, 6, 7, 20, 21,
23, 26, 27, 30, 38, 39] and in industry [3, 9, 32, 35]. The
key contribution of this paper lies in providing the ﬁrst OPE
scheme, mOPE, which achieves ideal IND-OCPA security;
we discuss prior schemes in more detail shortly (§II-A).
Even an ideal order-preserving scheme must reveal the
order of items. Kolesnikov and Shikfa [22] discuss the
leakage associated with revealing order in practice, and
techniques for minimizing such leakage, which is applicable
to mOPE as well as other OPE schemes.
mOPE is also related to cryptographic schemes for
performing range queries over encrypted data [8, 19, 28, 36].
These range query schemes aim for a different goal than
OPE: instead of requiring that the ciphertext values literally
preserve the order of the plaintext values, they separately
encrypt data values and query values, and provide an
algorithm by which one can learn the order between a query
value and a data value (but not between two query or two data
values, and ideally no other information). The fact that the
ciphertexts are not themselves order-preserving means such
schemes cannot be used with unmodiﬁed software as is the
goal with OPE. Moreover, no current efﬁcient constructions
achieve this ideal goal; some schemes reveal all query values,
other schemes reveal some data values, and some schemes
provide only approximate answers.
Pandey and Rouselakis [31] introduce the notion of
property-preserving encryption (PPE): an encryption scheme
where a public predicate can be tested on any k ciphertexts.
OPE is a PPE for the order comparison predicate with k = 2.
Pandey and Rouselakis [31] provide a construction for the
inner product predicate, but not for the order predicate.
Because our protocol is interactive, it resembles two-party
computation. In fact, our security deﬁnition for the malicious
server case (§VII) follows the general form of two-party
computation deﬁnitions. There exist protocols for two-party
464464
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:52:32 UTC from IEEE Xplore.  Restrictions apply. 
computation for any arbitrary function [18], but using such
a protocol for order would result in prohibitive costs and is
not needed since the state of the server is not secret from
the client and the client is trusted.
Finally, OPE is related to work on order-preserving
compression [4, 5]. Although some OPE schemes use
similar techniques, the requirements for OPE are different:
compression is not a requirement for OPE, whereas security
(plaintext privacy) is not a requirement for compression.
A. OPE schemes
To put prior work on OPE schemes in perspective, it is
easiest to think about the security guarantees achieved by
each scheme, which translates into the information leaked
by that scheme beyond order. Fig. 1 summarizes the prior
work on OPE schemes, which we will now discuss.
The strongest security deﬁnition considered by prior work
is IND-OCPA, proposed by Boldyreva et al. [6]. IND-OCPA
captures the ideal security for order-preserving schemes:
an adversary with access to a set of ciphertexts cannot
learn anything about the plaintext values except for their
order. No existing scheme achieves IND-OCPA; this paper’s
construction, mOPE, is the ﬁrst to achieve IND-OCPA.
Boldyreva et al. [6] prove that it is impossible for any OPE
scheme to achieve IND-OCPA, under some implicit assump-
tions about how an OPE scheme works—that ciphertexts
are immutable and that encryption is stateless. In §V, we
strengthen this impossibility result by showing IND-OCPA
is impossible even for stateful OPE schemes, but also show
that IND-OCPA is achievable if ciphertexts are mutable.
In this paper we also propose a new security deﬁnition,