data from DomainTools [8], and then group the nameservers by
registrar. Next, we manually inspect the registrar clusters to identify
the renaming scheme. Based on this technique we identified four
registrars that used renaming idioms with the previous nameserver
as the basis for creating the sacrificial nameserver domain.
Note that before performing the history match we can elimi-
nate some candidate nameservers because they violate the single
repository property: the renamed nameserver is in the same TLD
as the domains, or the domains delegated to the nameserver span
known different registry EPP repositories. We eliminate 11, 403 such
nameservers because they violate the single repository property.
3.3 Limitations
Our methodology has limitations that likely prevent us from iden-
tifying all sacrificial nameservers. First, our methodology does not
detect renaming idioms that do not have a consistent pattern. More-
over, if a registrar creates sacrificial nameservers using a function
that does not preserve the original nameserver in a recognizable
form, then our last matching step (Section 3.2.3) will not identify
them. Second, we assume that sink domains used by registrars are
unresolvable. However, it is possible that some registrars could mon-
etize the traffic sent to domains delegated to sacrificial nameservers.
Our methodology will not detect these as sacrificial nameservers
since they are resolvable. Finally, our data set includes only three
ccTLDs, so we have limited insight into sacrificial nameservers
among the full set of ccTLDs.
Given these limitations, our results are therefore a lower bound
on the overall prevalence of sacrificial nameservers. However, since
our methodology was able to uncover the sacrificial renaming prac-
tices used (and confirmed) by many major registrars, we believe that
our results reflect common practice (at least among non-ccTLDs).
9If a hijacker later registers the sacrificial nameserver domain, then it does become
resolvable later in its lifetime.
10https://dzdb.caida.org/domains/WHITECOUNTY.NET
678
Risky BIZness
IMC ’21, November 2–4, 2021, Virtual Event, USA
Renaming Idiom
Sink Domain
DUMMYNS.COM
LAMEDELEGATION.ORG
NSHOLDFIX.COM
DELETE-HOST.COM
DELETEDNS.COM
LAMEDELEGATIONSERVERS.{COM, NET}
Total
Registrar
Internet.bs
Network Solutions
TLD Registrar Solutions
GMO Internet
Xin Net Technology Corp.
SRSPlus
# of Sacrificial
Nameservers
10,147
5,902
3,527
1,224
535
447
21,782
# of Affected
Domains
38,936
113,496
3,248
41,408
29,620
2,009
228,698
Table 1: Non-hijackable renaming idioms using registered sink domains. Note that a given domain may be affected by more
than one sacrificial nameserver over time, so the sum of all rows can be greater than the overall total. The non-hijackable
nature depends on registrars maintaining control over the sink domain.
Renaming Idiom
Sink Domain
Registrar
PLEASEDROPTHISHOST GoDaddy
GoDaddy
DROPTHISHOST
Internet.bs
DELETED-DROP
Enom
123.BIZ
Enom
xxxxx.{BIZ, COM}
DomainPeople
xxxxx.BIZ
Fabulous.com
xxxxx.BIZ
Register.com
xxxxx.BIZ
Total
# of Sacrificial
Nameservers
75,030
40,374
3,511
5,799
54,752
654
334
388
180,842
# of Affected
Domains
Example Renaming
ns1.foo.com
217,952
109,478
9,289
7,157
164,264
3,304
1,223
1,570
512,715
pleasedropthishostxxxxx.foo.biz
dropthishost-xxxxx.biz
deleted-xxxxx.drop-xxxxxx.biz
ns1.foo123.biz
ns1.fooxxxxx.biz
ns1.fooxxxxx.biz
ns1.fooxxxxx.biz
ns1.fooxxxxx.biz
Table 2: Hijackable renaming idioms using random sacrificial names. The xxxxx is a place holder for random strings of vari-
ous lengths depending on the registrar and the time. Note that a given domain may be affected by more than one sacrificial
nameserver over time, so the sum of all rows can be greater than the overall total.
4 REGISTRAR RENAMING IDIOMS
This section presents the results of our methodology for identifying
sacrificial nameservers and the renaming idioms that registrars
use to create them. Overall we identified more than a dozen reg-
istrar renaming idioms that were used to create 202,624 sacrificial
nameservers, and ultimately impacted 741,413 domains.
We divide the renaming idioms into two classes, non-hijackable
and hijackable. The non-hijackable renaming idioms use a regis-
tered sink domain and thus cannot be hijacked. Table 1 lists the
registrars that have used non-hijackable idioms and the sink do-
mains they used for renaming. This renaming approach ensures
that affected domains are not at risk, but requires that the registrar
ensures that the sink domain does not expire (otherwise all affected
domains could be hijacked by a single sacrificial nameserver reg-
istration). Indeed, in our analysis, we see evidence of a registrar
switching renaming idioms and simply abandoning the sink do-
main. This instance highlights the long term risks of using sink
domains and the potential benefits of a more permanent solution.
In contrast, the hijackable renaming idioms rename the name-
server to a random (likely unregistered) sacrificial name. We classify
them as hijackable since an attacker can register the random sacrifi-
cial nameserver domain and take over resolution of all domains that
were delegated to it. Table 2 shows the renaming idioms adopted
by different registrars, the number of hijackable sacrificial name-
servers created, and the number of domains affected. Note that
some registrars have adopted different renaming idioms over time,
which we list separately. The last column shows an example of the
resulting sacrificial nameserver created by each renaming idiom.
In the rest of this section, we discuss the renaming idioms of
the three most prominent registrars that create hijackable domains
as well as a significant accidental renaming event in more detail.
Sections 5 and 6 then discuss the extent to which hijackable domains
are exploited and who is exploiting them, respectively.
GoDaddy: GoDaddy has adopted different renaming idioms over
time. The earliest is the PLEASEDROPTHISHOST idiom, which sim-
ply replaced the subdomain with PLEASEDROPTHISHOST and a ran-
dom string. The domain second-level name was kept unchanged
while the TLD was typically changed to .biz, unless the name-
server being renamed was itself in .biz. In that case, the sacrificial
nameserver used .com. However, this simple renaming idiom meant
that at times the sacrificial nameserver inadvertently pointed to
an existing domain. In fact, 3,704 sacrificial nameservers created
by the PLEASEDROPTHISHOST renaming idiom accidentally used
domains that were already registered.
In 2015, GoDaddy adopted the DROPTHISHOST renaming idiom.
In this case, the renamed nameserver is DROPTHISHOST followed
679
IMC ’21, November 2–4, 2021, Virtual Event, USA
Akiwate, Savage, Voelker, and Claffy
by a unique random identifier. The sacrificial nameserver is always
in the .biz TLD. While this idiom avoided using names in use by
existing domains, it still left domains delegated to the sacrificial
nameserver at risk of hijack.
Enom: Enom also changed renaming idioms over time. The ear-
liest renaming idiom simply replaced the TLD of the nameserver
with 123.biz. By 2012 Enom switched to a new renaming idiom
which replaced the TLD by a random string followed by .biz; if
the nameserver being renamed was itself in .biz, the sacrificial
nameserver instead used .com.
Internet.bs: The registrar Internet.bs is an interesting case. In-
ternet.bs originally used a non-hijackable renaming idiom with
DUMMYNS.COM as the sink domain. However, in 2015 after it was
acquired by CentralNIC, Internet.bs switched to using a hijackable
renaming idiom. In doing so, though, it abandoned its registration
of DUMMYNS.COM, leaving it available for registration by other par-
ties who have hijacked nameserver traffic for all domains that point
to it. This case highlights the benefits of a more permanent solution
codified in the EPP standard (Section 7).
Namecheap’s accidental deletion. Our analysis also revealed
one large-scale example of an accidental renaming event that ex-
posed domains to hijacking in a similar manner. In particular, we
identified 46 nameservers renamed under registrar-servers.com,
the default nameserver domain for Namecheap, in July of 2016.
In communicating with Namecheap, we learned that this event
resulted from an employee accidentally sending a deletion request
to Enom (at the time this event happened Namecheap registered
domains via Enom) for the registrar-servers.com domain. Since
this deletion request could not be satisfied while a subordinate
host object (e.g., ns1.registrar-servers.com) still existed, the dele-
tion machinery for Enom (since they registered the domains) re-
named each of the 46 host objects (default nameservers used by
Namecheap) to the .biz TLD (e.g., ns1.registrar-serversxxxx.biz)
to eventually delete the registrar-servers.com domain.
As a result, for a brief period of time, 1.6 million domains (in-
cluding tiktok.com) had dangling delegations that would have
permitted hijacking. Luckily, the vast majority of affected domains
quickly fixed their delegations: only 51, 699 of the original 1.6M
domains still delegated to a sacrificial nameserver after three days,
and four years later only 51 of them had not fixed their delegation.
However, this example further illustrates how the registrar “rename
to delete” practice can have risky side effects. Due to the accidental
nature of this event, we do not include these nameservers, nor the
domains affected as a result, in our subsequent analyses.
5 EXPLOITATION OF SACRIFICIAL
NAMESERVERS
The results in Section 4 showed that more than half a million do-
mains were placed at risk because they delegated to a hijackable
sacrificial nameserver. However, as we show in this section, this risk
is not merely hypothetical. In fact, nearly a third of these domains
have been hijacked when their sacrificial nameserver domains were
registered. We classify these as hijacks since the sacrificial name-
server domains (e.g., dropthishost-xxxx.biz) have no apparent
Overall (2011–2020) Hijackable Hijacked
9,173
Sacrificial NS
Affected Domains
163,827
180,842
512,715
(%)
5.07%
31.95%
Table 3: Number of hijackable and hijacked sacrificial name-
servers and their delegated domains.
value other than the domains that delegate to them. As such, the
registration of these “random” nameserver domains is unlikely to be
accidental in nature. In this section, we characterize this hijacking
activity, its dynamics over time, and the nature of the vulnerable
domain population.
5.1 Hijacking Summary
Table 3 shows the number of sacrificial nameservers that were
hijackable and hijacked over the lifetime of our data set. It also
shows the number of domains delegated to these nameservers: if
a domain delegates to a hijacked sacrificial nameserver, then it is
considered hijacked.
Only a small fraction (5%) of hijackable nameservers have been
registered over time. Yet, more than 30% of hijackable domains
have been hijacked as a result. This disparity is not an accident,
and reflects the fact that hijackers are selective in the sacrificial
nameservers they register, preferring those used by many domains.
5.2 Hijacking Over Time
As we have discussed, these registrar renaming practices have been
in use for many years, and it is evident in our data going back to
April of 2011.
Figure 3 longitudinally shows the number of newly hijackable
domains that appear each month due to the creation of sacrificial
nameservers. Encouragingly, the trend has been downward over the
years (perhaps due to the increasing use of third-party nameservers,
e.g., domaincontrol.com). However, it is still the case that each
month thousands of domains are newly placed at risk of hijacking.
Figure 4 covers the same time period, but shows the number
of such domains that are newly hijacked each month. It is clear
that hijacking has been a long-standing behavior as well: as long
as domains in our data set have been at risk, hijackers have taken
advantage of them by registering sacrificial nameservers. Unfor-
tunately, unlike the clear downward trend in newly hijackable
domains, the trend in newly hijacked domains is bursty: the hijack-
ing activity occurs throughout our data set, with some months —
even recently — seeing thousands of newly hijacked domains.
5.3 Desirability
If we assume that the domains themselves are equally valuable (a
clearly simplified assumption, but essentially valid for some busi-
ness models such as search engine optimization (SEO) for attracting
traffic), then the value of hijacking a sacrificial nameserver depends
upon how many and how long domains delegate to it. We see indi-
cations that hijackers select for registering sacrificial nameservers
that enable the hijacking of many domains and potentially for long
durations. To provide a visualization of this behavior, for each sac-
rificial nameserver we define a “hijack value” for it as the sum of all
680