which 𝑆 = C. Since this is an equilibrium in 𝐺𝑆≥C, no sender can
increase its utility by increasing its rate. In addition, no sender
can increase its utility by decreasing its rate, because all terms in
its utility would decrease or remain the same: sending rate would
decrease, the latency gradient term would remain at zero since
Proteus (P and S) utility functions do not reward negative latency
gradients, and RTT deviation penalty would either remain at zero
or become negative. Therefore, no sender can improve its utility
and 𝑥∗ is also an equilibrium in 𝐺.
□
Lemma A.2. 𝐺𝑆≥C is strictly socially concave.
Proof. With 𝑆 ≥ 𝐶, the Proteus-S and Proteus-P utility func-
tions take the following form:
(cid:18) 𝑆 − C
(cid:19)
C
,
𝑢𝑆(𝑥𝑖) = 𝑥𝑡
𝑖 − (𝑏 + 𝑑 · 𝐴) · 𝑥𝑖
628
PCC Proteus: Scavenger Transport And Beyond
(cid:18) 𝑆 − C
(cid:19)
.
C
𝑢𝑃 (𝑥𝑖) = 𝑥𝑡
𝑖 − 𝑏 · 𝑥𝑖
To prove that 𝐺𝑆≥𝐶 is strictly socially concave we show that the
following three conditions are satisfied. See [18] for an exposition
of (strictly) socially concave games.
in its sending rate 𝑥𝑖.
(1) Each individual sender 𝑖’s utility function is strictly concave
(2) Each individual sender 𝑖’s utility function is convex in the
𝑢(𝑥𝑖), where 𝑃𝑆 and
𝑃𝑃 are all scavenger and all primary senders, respectively, is
concave in the combination of all senders’ rates 𝑋.
other senders’ rates 𝑥−𝑖 =𝑗≠𝑖 𝑥 𝑗.
(3) The sum of sender utilities𝑖∈𝑃𝑆 𝑃𝑃
(cid:18) 𝑆 − C
𝑖 is concave in 𝑥𝑖. The first derivative of 𝑢𝑆(𝑥𝑖) is
C + 𝑥𝑖C
We first show that the utility function 𝑢𝑆(𝑥𝑖) of Proteus-S sender
𝜕𝑢𝑆(𝑥𝑖)
𝜕𝑥𝑖
− (𝑏 + 𝑑 · 𝐴)
= 𝑡 · 𝑥𝑡−1
(cid:19)
.
𝑖
Its second derivative is
𝜕2𝑢𝑆(𝑥𝑖)
𝜕(𝑥𝑖)2 = 𝑡(𝑡 − 1)𝑥𝑡−2
𝑖
− 2
C (𝑏 + 𝑑 · 𝐴)
.
𝑃 (𝑥𝑖)
(𝜕𝑥−𝑖)2 = 0.
Since 0 < 𝑡 < 1 this second derivative is negative, so 𝑢𝑆(𝑥𝑖) is
concave in 𝑥𝑖.
Then, 𝑢𝑃 (𝑥𝑖)’s concavity in 𝑥𝑖 follows from the fact that when
𝑆 ≥ 𝐶, 𝑢𝑃 (𝑥𝑖) is identical to PCC Vivace’s utility function [17],
already shown to be concave in 𝑥𝑖 [6].
The utility function of each sender 𝑖, whether using Proteus-P or
𝑆 (𝑥𝑖)
Proteus-S, is convex in 𝑥−𝑖, as derived from the fact that 𝜕𝑢2
(𝜕𝑥−𝑖)2 = 0
and 𝜕𝑢2
Last, we show that the function 𝑔(𝑋) =𝑖∈𝑃𝑆 𝑃𝑃

cave in the combination of all senders’ rates 𝑋:
((𝑥𝑖)𝑡 − (𝑏 + 𝑑 · 𝐴) · 𝑥𝑖( 𝑆 − C
C ))
+
((𝑥𝑖)𝑡 − 𝑏 · 𝑥𝑖( 𝑆 − C
C ))

𝑖∈𝑃𝑆 𝑃𝑃
((𝑥𝑖)𝑡) − (𝑆 · 𝑏 + 𝑇 · 𝑑 · 𝐴)( 𝑆 − C
C ))
𝑢(𝑥𝑖) is con-
𝑔(𝑋) :=
𝑖∈𝑃𝑝
𝑖∈𝑃𝑆
=
,
where 𝑇 is the total sending rate for Proteus-S senders, i.e., 𝑇 =
On that basis, 𝑔(𝑋)’s first derivative with respect to a Proteus-S
sender 𝑖’s rate 𝑥𝑖 is
= 𝑡 · 𝑥𝑡−1
𝜕𝑔(𝑋)
𝜕𝑥𝑖
C + 𝑇
C )
and the second derivative with respect to the same sender 𝑖 is
C ) − (𝑑 · 𝐴)( 𝑆 − C
− 𝑏( 𝑆 − C
C + 𝑆
𝑖
,
𝑖∈𝑃𝑆 (𝑥𝑖).
𝜕2𝑔(𝑋)
(𝜕𝑥𝑖)2 = 𝑡(𝑡 − 1)𝑥𝑡−2
𝑖
− 2𝑏 + 𝑑 · 𝐴
C
< 0
.
Besides, the second derivative with respect to another Proteus-S
sender 𝑗 is
𝜕2𝑔𝑖(𝑋)
𝜕𝑥𝑖 𝜕𝑥 𝑗
= −2 · 𝑏 + 𝑑 · 𝐴
C
< 0
,
629
SIGCOMM ’20, August 10–14, 2020, Virtual Event, USA
and the second derivative with respect to a Proteus-P sender 𝑗 is
𝜕2𝑔𝑖(𝑋)
𝜕𝑥𝑖 𝜕𝑥 𝑗
= −2𝑏 + 𝑑 · 𝐴
C
< 0
.
The second derivatives of 𝑔(𝑋) when the first derivatives are with
respect to Proteus-P senders can similarly be shown to be negative.
Since all second derivatives are negative, the Hessian is negative
semidefinite and so we conclude that 𝑔(𝑋) is concave in 𝑋 [9].
𝐺𝑆≥𝐶 is strictly socially concave.
We have shown that the three conditions are satisfied and so
□
Strictly socially concave games have a unique equilibrium [17, 18,
31]. This, combined with Lemma A.1, implies that 𝐺 has a unique
equilibrium.
The uniqueness of equilibria immediately implies the fairness in
symmetric case as in Theorem 4.1&4.2:
Theorem 4.1 When only Proteus-P senders compete over a
bottleneck link the unique equilibrium is fair.
Theorem 4.2 When only Proteus-S senders compete over a
bottleneck link the unique equilibrium is fair.
These two theorems follow from the fact that if some sender 𝑖’s
rate in equilibrium 𝑥𝑖 is different than another sender 𝑗’s rate 𝑥 𝑗,
then the global rate configuration in which 𝑖 sends at rate 𝑥 𝑗 and
𝑗 sends at rate 𝑥𝑖 must be a different equilibrium. This, however,
contradicts the uniqueness of the equilibrium.
B TUNING TARGET EXTRA DELAY CANNOT
SAVE LEDBAT
When LEDBAT was first proposed as an IETF draft [33], it employed
an extra delay target of 25 𝑚𝑠, which is much smaller than 100 𝑚𝑠
today. Based on our analysis in §4.2, using 25 𝑚𝑠 extra delay as target
should be an earlier congestion signal than 100 𝑚𝑠. However, using
similar sets of experiments in §6, we demonstrate that both setups
fail to serve as robust scavenger against the evaluated primary
protocols (LEDBAT-25 and LEDBAT-100 are used to distinguish
between two setups).
B.1 Performance Goal
First, as a congestion controller itself, LEDBAT-25 also needs large
buffer to achieve high utilization. In the meanwhile, it keeps the
buffer full until the buffer is large enough to accommodate 25 𝑚𝑠
additional delay.
Using the same Emulab bottleneck as in Fig. 3, we have the
following updated Fig. 15, where LEDBAT-25 and LEDBAT-100
have similar performance.
Similarly, provided 2 BDP buffer under an Emulab bottleneck of
50 Mbps bandwidth and 30 ms RTT, Fig. 16 shows that LEDBAT-25
has almost identical performance when there exists random loss.
This is because they both inherit the design of traditional TCP, i.e.,
correlating packet losses with in-network congestion.
Furthermore, since with a smaller target extra delay, LEDBAT-
25 has even worse multi-flow fairness, because a specific buffer
can now accommodate the sum of delay targets of more LEDBAT-
25 senders. To validate that, we repeat the multiflow competition
experiment as in Fig. 5 with LEDBAT-25. As expected, in Fig.17,
LEDBAT-25’s fairness index is lower than LEDBAT-100. With 𝑛 =
10, the Jain’s index of LEDBAT-25 is 38.7% smaller than Proteus-S.
SIGCOMM ’20, August 10–14, 2020, Virtual Event, USA
Tong Meng, Neta R. Schiff, Brighten Godfrey, and Michael Schapira
(a) Throughput
Figure 18: 4-Flow Competition
(b) Latency inflation
Figure 15: Bottleneck saturation with varying buffer size
Figure 19: LEDBAT-25 as a Scavenger Competing with Pri-
mary Protocols
one-way delay. In the end, the last flow will grab almost all the band-
width. LEDBAT-100 has better fairness than LEDBAT-25, but the
first flow still has the lowest bandwidth share. Both Proteus variants
are much more stable and fair, with Proteus-S fluctuating somewhat
more than Proteus-P because Proteus-S senders back off (and then
recover) in competition more conservatively and frequently.
Figure 16: Random loss tolerance
Figure 17: Fairness with competing flows
B.2 Yielding Goal
Second, LEDBAT-25, though less aggressive than LEDBAT-100, is
still not robust enough as a scavenger against many primary proto-
cols, especially recently-proposed latency-sensitive protocols. To
show with, we use the same 50 Mbps bandwidth, 30 ms RTT bottle-
neck with two buffer setups, and conduct the two-flow competition
experiment, letting LEDBAT-25 compete with BBR, CUBIC, COPA,
Proteus-P, and PCC.
The following is the performance summary for LEDBAT in
Fig. 19.
• LEDBAT-25 fails to yield to CUBIC with 75 KB buffer.
• Regardless of the buffer size, compared with LEDBAT-25, the
performance of Proteus-S (Fig. 6(b)) is 24% higher when the
primary protocol is COPA and 2× higher when the primary
protocol is Proteus-P.
• Similar to LEDBAT-100, LEDBAT-25 is even more aggressive
against PCC Vivace and Proteus-P.
To further demonstrate the issue intuitively, we show the through-
put across time with 𝑛 = 4 in Fig. 18. For LEDBAT-25, each new flow
dominates all previous flows because it observes larger “minimum”
Fig. 20 shows the impact of LEDBAT-25 on RTT of primary
protocols. Although COPA can still achieve 73.3% throughput ratio
competing with LEDBAT-25 (as in Fig. 6(d)), that comes at the cost
of 2.2× RTT.
630
01020304050 1 10 100 1000Throughput (Mbps)Buﬀer Size (KB)Proteus-SLEDBAT-25LEDBAT-100CUBICBBRProteus-PCOPAVivace 0 0.2 0.4 0.6 0.8 1 0 100 200 300 400 500 600 700 800 90095-th Inﬂation RatioBuﬀer SizeProteus-SLEDBAT-25LEDBAT-100CUBICBBRProteus-PCOPAVivace11050 0 0.01 0.02 0.03 0.04 0.05 0.06Throughput (Mbps)Random Loss RateProteus-SLEDBAT-25LEDBAT-100CUBICBBRProteus-PCOPAVivace 0 0.2 0.4 0.6 0.8 1 2 3 4 5 6 7 8 9 10Jain's Fairness IndexNumber of FlowsProteus-SLEDBAT-25LEDBAT-100CUBICBBRProteus-PCOPAVivace0204060800100200300400500                     Throughput (Mbps)Time (s)LEDBAT-250100200300400500 Time (s)LEDBAT-10020406080  Proteus-P  Proteus-S020406080100020406080100Primary Throughput Ratio (%)Capacity Utilization (%)BBRCUBICCOPAProteus-PVivaceBuﬀer:75KB375KB          PCC Proteus: Scavenger Transport And Beyond
SIGCOMM ’20, August 10–14, 2020, Virtual Event, USA
(a) BBR as Primary
(b) CUBIC as Primary
(c) COPA as Primary
(d) Proteus-P as Primary
(e) PCC Vivace as Primary
Figure 22: Primary Throughput Ratio in Real-World WiFi
Figure 21: Single Flow Throughput on WiFi
LEDBAT-25)
(include
B.2.1 WiFi Performance. With a smaller target extra delay, LEDBAT-
25 unfortunately is also more sensitive to RTT noise. Fig. 21 shows
LEDBAT-25 among our tests of single-flow throughput on real-
world WiFi (our laptop to AWS servers). Its throughput CDF is
worse than LEDBAT-100 and Proteus-S.
When acting as scavenger sender on the same WiFi test configu-
rations, LEDBAT-25, as expected, is better than LEDBAT-100, but
still falls behind Proteus-S, as shown in Figure 22. Specifically, when
competing with Proteus-S, the median throughput ratios of COPA,
Proteus-P, and PCC Vivace are respectively 5.2%, 24.7%, and 38.6%
higher than what they achieve when competing with LEDBAT-25.
B.3 Summary
The key reason that LEDBAT-25 still cannot be a robust scavenger
is that LEDBAT uses a late signal for flow competition. Therefore, it
is easy for it to have much higher aggressiveness than most latency-
aware protocols, such as COPA, PCC Vivace, and Proteus-P.
Figure 20: Scavenger’s Impact on Congestion RTT (including
LEDBAT-25)
631
 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1Cumulative FractionPrimary Flow Throughput Ratiovs Proteus-Svs LEDBAT-25vs LEDBAT-100 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1Cumulative FractionPrimary Flow Throughput Ratiovs Proteus-Svs LEDBAT-25vs LEDBAT-100 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1Cumulative FractionPrimary Flow Throughput Ratiovs Proteus-Svs LEDBAT-25vs LEDBAT-100 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1Cumulative FractionPrimary Flow Throughput Ratiovs Proteus-Svs LEDBAT-25vs LEDBAT-100 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1Cumulative FractionPrimary Flow Throughput Ratiovs Proteus-Svs LEDBAT-25vs LEDBAT-100123CUBICBBRCOPAProteus-PPCC95-th RTT RatioPrimary ProtocolProteus-SLEDBAT-25LEDBAT-100Proteus-PCOPA 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1Cumulative FractionNormalized ThroughputProteus-SLEDBAT-25LEDBAT-100CUBICBBRProteus-PCOPAVivace