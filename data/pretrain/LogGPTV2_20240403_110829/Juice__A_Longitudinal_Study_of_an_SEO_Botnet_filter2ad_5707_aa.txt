# Title: Juice: A Longitudinal Study of an SEO Botnet
# Authors: David Y. Wang, Stefan Savage, and Geoffrey M. Voelker
# Affiliation: University of California, San Diego

## Abstract
Black hat search engine optimization (SEO) campaigns attract and monetize traffic using abusive techniques. These campaigns often involve website compromise, keyword stuffing, and cloaking to manipulate search engine rankings for specific search terms, ultimately directing users to scam sites (e.g., fake antivirus). In this paper, we infiltrate a significant SEO botnet, GR, to characterize its dynamics, effectiveness, and the key scams driving its operations. Surprisingly, unlike email spam botnets, GR is modest in size and has low churn, suggesting limited adversarial pressure from defenders. Despite its small size, GR successfully "juices" the rankings of trending search terms and, during its peak, was a dominant source of trending search term poisoning on Google. We also document the range of scams it promoted and the role of fake antivirus programs in driving innovation.

## 1. Introduction
Traffic is the lifeblood of online commerce; user visits equate to potential revenue. While there are many ways to attract visitors, web search is one of the most popular, generating between $10 and $15 billion in annual advertising revenue [1, 2]. Organic search results, which appear naturally based on relevance, drive even more traffic, with highly ranked pages attracting a disproportionate number of visitors. This has led to the emergence of a large ecosystem supporting search engine optimization (SEO), the practice of influencing a site's ranking for specific query terms. While many SEO practices are encouraged by search engines to improve the overall search experience (e.g., shorter load times, descriptive titles, and effective use of CSS), others, known as "black hat" techniques, aim to manipulate search algorithms without improving search quality (e.g., link farms, keyword stuffing, and cloaking).

Unsurprisingly, black hat SEO techniques have been used for abusive advertising, such as attracting traffic for malicious purposes (e.g., drive-by downloads, fake antivirus, or selling counterfeit goods). Although isolated incidents may not be alarming, there is increasing evidence of large-scale SEO campaigns, where compromised websites are harnessed to poison search results for attractive queries (e.g., trending search terms). One industry report claims that 40% of all malware infestations originate from poisoned search results [9]. However, the details of how such attacks are mounted, their efficacy, and their ability to manage search engine countermeasures remain somewhat opaque.

To address these questions, this paper examines the behavior of an influential search poisoning botnet, "GR." Our work offers three primary contributions:
1. **Botnet Characterization**: By reverse-engineering the "SEO kit" malware, we identified other botnet members and infiltrated the command and control channel. Over nine months, we characterized the activities and dynamics of this botnet, finding it to be modest in size (under a thousand compromised websites) with low churn.
2. **Poisoning Dynamics**: By correlating promoted keywords with contemporaneous internet searches, we established the effectiveness of the botnet's campaigns. Even with its modest size, GR could effectively "juice" the rankings of thousands of specific search terms within 24 hours, becoming the dominant source of poisoned trending search results on Google during its peak.
3. **Targeting**: By systematically visiting promoted "doorway" pages, we determined the ultimate scams used to monetize the poisoning activity. We found evidence of a "killer scam" (fake antivirus) and documented high levels of activity while the fake antivirus ecosystem was stable. After a market setback, the botnet operator explored lower-revenue alternatives but never with the same level of activity.

Additionally, our paper documents a methodology and measurement approach for future studies. Unlike email spam, search poisoning involves multiple components, including the choice of search terms and the behavior of the search engine. Our analyses required data from three different crawlers: (1) a host crawler to identify and monitor compromised websites, (2) a search crawler to identify poisoned search results, and (3) a redirection crawler to follow redirection chains to final landing pages.

The remainder of this paper is structured as follows. In Section 2, we provide background on search poisoning attacks and previous work. In Section 3, we describe the GR SEO botnet in detail. In Section 4, we introduce Odwalla, the system we built to monitor and probe the botnet's activities. Finally, in Section 5, we present our analyses and findings, summarizing the most significant insights in our conclusion.

## 2. Background
### 2.1 An Example of a Search Poisoning Attack
Figure 1 illustrates a typical search poisoning attack. Suppose there is sudden interest in volcano-related terms due to an eruption. The attack proceeds as follows:
1. The attacker exploits a vulnerability on a website and installs an SEO kit, turning the legitimate site into a doorway under the attacker's control.
2. When a search engine crawler requests the page, the SEO kit detects the visitor as a crawler and returns a page related to volcanoes, along with cross-links to other compromised sites.
3. The search engine indexes this page, capturing its heavy concentration of volcano terms and links.
4. Later, a user searching for "volcano" clicks on a highly ranked result linking to the compromised site.
5. The SEO kit detects the user's arrival via a search engine and redirects them to a scam, such as fake antivirus.

### 2.2 Previous Work
Previous research has studied cloaking mechanisms and web spam in detail [12, 19, 20, 21]. Recent work has focused on measuring the prevalence of search result poisoning and developing methods to detect and undermine such attacks. For example, Wang et al. measured the prevalence of cloaking in web search results over time for trending and pharmaceutical queries [19]. Lu et al. developed a machine learning approach to identify poisoned search results [12], while Leontiadis et al. and Moore et al. measured the exposure of poisoned search results and constructed economic models for their profitability [10, 15].

John et al. [5] conducted a similar study, using an SEO malware kit to extrapolate design heuristics for a system, deSEO, to identify SEO campaigns. They found that analyzing historical links between websites is crucial for detecting and preventing SEO campaigns. Our work differs in that we focus on the longitudinal operation of SEO campaigns organized by a botnet, examining the bottlenecks and factors influencing the botnet operator's behavior over time.

## 3. The GR Botnet
### 3.1 SEO Kit
An SEO kit is software installed on each compromised website, providing backdoor access and implementing black hat SEO mechanisms. We obtained an SEO kit after contacting numerous owners of compromised sites. The kit is implemented in PHP and consists of two components: the loader and the driver. The loader is initially installed by prepending PHP files with an eval statement that decrypts base64-encoded code. When a visitor requests the modified page, the loader sets up a cache on the site's local disk to reduce network requests and avoid detection. The loader then contacts a directory server to find the location of a command-and-control server (C&C) and downloads the driver code, which provides the main mechanisms for black hat SEO.

### 3.2 Botnet Architecture
Figure 2 shows the high-level architecture of the GR botnet, which includes compromised websites, a directory server, and a C&C server. The botnet uses a pull mechanism for command and control.

#### 3.2.1 Compromised Web Sites
Compromised websites act as doorways for visitors and are controlled via the SEO kit. The kit uses cloaking to mislead search engines, users, and site owners, and to provide a control mechanism for the botmaster. The SEO kit first checks if the visitor is a search engine crawler. If so, it returns content to perform black hat SEO, building a page with text and images related to trending search terms and inserting links to other nodes in the botnet. If the visitor is a user, the kit identifies them by reading the Referrer field in the HTTP request headers and verifies that they clicked through a Google search results page. For these users, the kit contacts the C&C server for a target URL leading to various scams, such as fake antivirus.

This comprehensive analysis provides a detailed understanding of the GR botnet's operations and the broader implications of black hat SEO campaigns.