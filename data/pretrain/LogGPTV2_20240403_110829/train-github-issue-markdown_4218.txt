### System Info
I'm using LayoutLMv3Processor to encoding.  
when I input (1, 82, 4) as boxes, the processor will extends the boxes to (1,
512, 4), but some boxes of input is dropped by processor as I can't find them
in the encoding;  
seems the last n boxes is dropped.
**_tokenizer =
LayoutLMv3TokenizerFast.from_pretrained('microsoft/layoutlmv3-base')  
processor = LayoutLMv3Processor(LayoutLMv3FeatureExtractor(apply_ocr=False),
tokenizer)_**
**boxes of before encoding (512, 4)  
boxes of after encoding (82, 4)  
boxes of before encoding without duplicated (58, 4)  
boxes of after encoding without duplicated (82, 4)**
### Who can help?
_No response_
### Information
  * The official example scripts
  * My own modified scripts
### Tasks
  * An officially supported task in the `examples` folder (such as GLUE/SQuAD, ...)
  * My own task or dataset (give details below)
### Reproduction
import numpy as np  
from PIL import Image  
from transformers import LayoutLMv3Processor, LayoutLMv3TokenizerFast,
LayoutLMv3FeatureExtractor,  
LayoutLMv3ForTokenClassification, AutoModelForTokenClassification, AutoConfig  
from inference_util import prepare_annotation,load_original_dataset
image_paths,bboxes,ner_tags=load_original_dataset("cro_vl_fr/","test")
tokenizer =
LayoutLMv3TokenizerFast.from_pretrained('microsoft/layoutlmv3-base')  
processor = LayoutLMv3Processor(LayoutLMv3FeatureExtractor(apply_ocr=False),
tokenizer)
item = image_paths[0]  
image = Image.open( item).convert("RGB")
# get word-level annotations
image,words,boxes=prepare_annotation(image,bboxes[0])  
boxes_2_points=
np.hstack((np.array(boxes)[:,0:2],np.array(boxes)[:,4:6])).astype(int)
encoding = processor(image, words, boxes=boxes_2_points,  
padding="max_length", truncation=True,  
return_tensors="pt")
for k,v in encoding.items():  
encoding[k] = v.squeeze()
token_boxes = encoding['bbox'].numpy()
print("boxes of before encoding",np.shape(token_boxes))  
print("boxes of after encoding",np.shape(boxes_2_points))  
token_boxes=[tuple(a) for a in token_boxes]  
token_boxes=np.array(list(set(token_boxes)))  
boxes_2_points=[tuple(a) for a in boxes_2_points]  
boxes_2_points=np.array(list(set(boxes_2_points)))
print("boxes of before encoding without duplicated ",np.shape(token_boxes))  
print("boxes of after encoding without duplicated",np.shape(boxes_2_points))
### Expected behavior
original boxes should not be drop.