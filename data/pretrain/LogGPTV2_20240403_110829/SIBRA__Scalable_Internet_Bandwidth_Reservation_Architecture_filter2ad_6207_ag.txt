Union’s Seventh Framework Programme (FP7/2007-2013) /
ERC grant agreement 617605. We also gratefully acknowledge
support by ETH Zurich, and NSF under award number CNS-
1040801. The research was also supported by a gift from
KDDI.
REFERENCES
[1]
[2]
[3]
[4]
[5]
“Inter-domain controller (IDC) protocol speciﬁcation,” http://www.
controlplane.net/idcp-v1.1-ns/idc-protocol-speciﬁcation-v1.1.pdf,
2010.
“Center for Applied Internet Data Analysis (CAIDA),” http://www.
caida.org/home/, 2014.
“Netﬂix congesting the Australian Internet,” http://www.smh.com.au/
digital-life/digital-life-news/these-graphs-show-the-impact-netﬂix-is-
having-on-the-australian-internet-20150402-1mdc1i.html, 2015.
“North American Network Operators’ Group,” https://www.nanog.org/
list, 2015.
“Technical Details Behind a 400Gbps NTP Ampliﬁcation DDoS At-
tack,” https://blog.cloudﬂare.com/technical-details-behind-a-400gbps-
ntp-ampliﬁcation-ddos-attack, 2015.
[6] D. G. Andersen, H. Balakrishnan, N. Feamster, T. Koponen, D. Moon,
and S. Shenker, “Accountable Internet Protocol (AIP),” in ACM SIG-
COMM, 2008.
[7] T. Anderson, T. Roscoe, and D. Wetherall, “Preventing Internet Denial-
of-Service with Capabilities,” ACM SIGCOMM Computer Communica-
tion Review, 2004.
[8] K. Argyraki and D. R. Cheriton, “Network Capabilities: The Good, the
Bad and the Ugly,” in ACM HotNets, 2005.
[9] D. Barrera, R. M. Reischuk, P. Szalachowski, and A. Perrig, “SCION
ﬁve years later: Revisiting scalability, control, and isolation on next-
generation networks,” arXiv e-prints, 2015.
[10] B. H. Bloom, “Space/time trade-offs in hash coding with allowable
errors,” Communications of the ACM, 1970.
[11] H. Chan, D. Dash, A. Perrig, and H. Zhang, “Modeling adoptability of
secure BGP protocol,” in ACM SIGCOMM, 2006.
[12] A. Demers, S. Keshav, and S. Shenker, “Analysis and simulation of a
fair queueing algorithm,” ACM SIGCOMM Comp. Comm. Rev., 1989.
[13] A. Farrel, J.-P. Vasseur, and J. Ash, “A path computation element (PCE)-
based architecture,” Tech. Rep., 2006.
[14] GEANT, “Bandwidth on demand,” http://geant3.archive.geant.net/
service/BoD/pages/home.aspx, 2015.
[15] P. Godfrey, I. Ganichev, S. Shenker, and I. Stoica, “Pathlet routing,” in
ACM SIGCOMM Comp. Comm. Rev., 2009.
[16] S. Gueron, “Intel Advanced Encryption Standard (AES) New Instruc-
tions Set,” Intel, 2010, white paper 323641-001, Revision 3.
[17] G. Hardin, “The tragedy of the commons,” Science, 1968.
[18] T. Heer and S. Varjonen, “Host identity protocol certiﬁcates,” 2011.
14
[19] H.-C. Hsiao, T. H.-J. Kim, S. B. Lee, X. Zhang, S. Yoo, V. Gligor,
and A. Perrig, “STRIDE: Sanctuary trail – refuge from internet DDoS
entrapment,” in AsiaCCS, 2013.
[48] X. Zhang, H.-C. Hsiao, G. Hasker, H. Chan, A. Perrig, and D. G. An-
dersen, “SCION: Scalability, Control, and Isolation on Next-generation
Networks,” in IEEE S&P, 2011.
[20] F. B. J. Babiarz, K. Chan, “Conﬁguration Guidelines for DiffServ
Service Classes.”
[21] M. S. Kang, S. B. Lee, and V. D. Gligor, “The Crossﬁre Attack,” in
IEEE S&P, 2013.
[22] C. Labovitz, S. Iekel-Johnson, D. McPherson, J. Oberheide, and F. Ja-
hanian, “Internet Inter-Domain Trafﬁc,” ACM SIGCOMM, 2010.
[23] P. Laskowski, B. Johnson, and J. Chuang, “User-directed routing: From
theory, towards practice,” in ACM NetEcon, 2008.
[24] S. B. Lee and V. D. Gligor, “FLoc: Dependable link access for legitimate
trafﬁc in ﬂooding attacks,” in IEEE ICDCS, 2010.
[25] S. B. Lee, M. S. Kang, and V. D. Gligor, “CoDef: Collaborative defense
against large-scale link-ﬂooding attacks,” in ACM CoNEXT, 2013.
[26] R. Margolis, L. Derr, M. Dunn, M. Huerta, J. Larkin, J. Sheehan,
M. Guyer, and E. D. Green, “The National Institutes of Health’s Big
Data to Knowledge (BD2K) initiative: capitalizing on biomedical big
data,” Journal of the American Medical Informatics Association, 2014.
J. Mirkovic, S. Fahmy, P. Reiher, and R. K. Thomas, “How to test DoS
defenses,” in CATCH, 2009.
[27]
[28] R. Moskowitz, P. Jokela, T. R. Henderson, and T. Heer, “Host identity
protocol version 2.”
J. Nagle, “On Packet Switches with Inﬁnite Storage,” 1985.
[29]
[30] M. Natu and J. Mirkovic, “Fine-grained capabilities for ﬂooding DDoS
defense using client reputations,” in ACM LSAD, 2007.
[31] R. Pan, B. Prabhakar, and K. Psounis, “CHOKe-a stateless active queue
management scheme for approximating fair bandwidth allocation,” in
IEEE INFOCOM, 2000.
[32] B. Parno, D. Wendlandt, E. Shi, A. Perrig, B. Maggs, and Y.-C.
Hu, “Portcullis: Protecting Connection Setup from Denial-of-Capability
Attacks,” in ACM SIGCOMM, 2007.
[33] B. Raghavan, P. Verkaik, and A. C. Snoeren, “Secure and policy-
compliant source routing,” IEEE/ACM Transactions on Networking,
vol. 17, no. 3, 2009.
[34] M. Schuchard, A. Mohaisen, D. Foo Kune, N. Hopper, Y. Kim, and
E. Y. Vasserman, “Losing control of the internet: using the data plane
to attack the control plane,” in ACM CCS, 2010.
[35] M. Shreedhar and G. Varghese, “Efﬁcient fair queuing using deﬁcit
round-robin,” IEEE/ACM Transactions on Networking, 1996.
I. Stoica, D. Adkins, S. Zhuang, S. Shenker, and S. Surana, “Internet
Indirection Infrastructure,” ACM SIGCOMM Comp. Comm. Rev., 2002.
I. Stoica, S. Shenker, and H. Zhang, “Core-Stateless Fair Queueing: A
Scalable Architecture to Approximate Fair Bandwidth Allocations in
High-Speed Networks,” IEEE/ACM Transactions on Networking, 2003.
[36]
[37]
[40]
[42]
[38] A. Studer and A. Perrig, “The Coremelt attack,” in ESORICS, 2009.
[39] B. Trammell and D. Schatzmann, “On Flow Concurrency in the Internet
and its Implications for Capacity Sharing,” in ACM CSWS, 2012.
J. Vasseur and J. Le Roux, “Path computation element communication
protocol,” IETF RFC 5557, 2009.
[41] H. Welte and P. N. Ayuso, “The netﬁlter.org libnetﬁlter queue project,”
http://www.netﬁlter.org/projects/libnetﬁlter queue/, 2014.
J. Wroclawski, “The Use of RSVP with IETF Integrated Services,”
1997.
[43] H. Wu, H.-C. Hsiao, and Y.-C. Hu, “Efﬁcient large ﬂow detection over
arbitrary windows: An algorithm exact outside an ambiguity region,” in
ACM IMC, 2014.
[44] A. Yaar, A. Perrig, and D. Song, “SIFF: A Stateless Internet Flow Filter
to Mitigate DDoS Flooding Attacks,” in IEEE S&P, 2004.
[45] X. Yang, D. Clark, and A. W. Berger, “Nira: A new inter-domain routing
architecture,” IEEE/ACM Transactions on Networking, 2007.
[46] X. Yang, D. Wetherall, and T. Anderson, “A DoS-limiting network
architecture,” ACM SIGCOMM Comp. Comm. Rev., 2005.
[47] L. Zhang, S. Deering, D. Estrin, S. Shenker, and D. Zappala, “RSVP:
A New Resource ReSerVation Protocol,” IEEE Network, 1993.
15
APPENDIX
A. Fair sharing of steady down-paths
Recall from Section III-B that core ASes negotiate core
contracts to set up core paths among each other (the double
continuous lines in Figure 1). The reserved bandwidth for those
core paths is negotiated based on aggregated trafﬁc volumes as
observed in the past. The question we consider in the following
is how the reserved bandwidth is split among the customers
of the core ASes. More precisely, we describe a sharing
mechanism that assigns each leaf AS E a fair amount of
bandwidth for E’s trafﬁc traversing the core paths. Intuitively,
fair in this context means proportional
to the amount of
bandwidth that E has purchased for its steady up-paths to
the core AS. In contrast to the fair sharing mechanism for
ephemeral paths (Section III-D), the equations we introduce
here do not require the additional weighting factor 16 = 80
5
given by the ratio of ephemeral and steady bandwidth.
Steady bandwidth on core links. The steady bandwidth of
a core path C = (cid:104)ASC1, . . . ,ASCn(cid:105) between core ASC1 and a
destination core ASCn is split between all customer ASes of
ASC1, weighted with the bandwidth of the steady up-path each
customer AS uses.
Let sBWu∗ be the total amount of steady bandwidth sold by
a core ASC1 for all its steady paths. Let sBWu be the reserved
bandwidth sold by ASC1 for a particular steady up-path Su. Let
further sBWC be the steady bandwidth of core path C. Then
the steady trafﬁc on C launched via Su can be up to:
sBWuC =
sBWu
sBWu∗
· sBWC
(5)
Steady bandwidth in the destination ISD. In the destination
ISD, the weighted fair sharing follows the same intuition,
this time consisting ﬁrst of a fair sharing mechanism between
different ISDs, then between the ASes in the same ISD.
More precisely, steady trafﬁc launched over steady up-path
Su and steady down-path Sd, with core path C in between,
obtains a throughput:
sBWuCd =
CC1→Cn
C∗→Cn
· sBWu
sBWu∗
· sBWd
(6)
where CC1→Cn is the bandwidth negotiated in C’s core contract
between core ASC1 (source ISD) and core ASCn (destination
ISD), C∗→Cn is the total amount of bandwidth negotiated in
the core contracts between any core AS and the destination
ISD’s core ASCn, and sBWd is the reserved bandwidth sold by
core ASCn for steady down-path d.
The second case is that of local steady trafﬁc in the
destination ISD, which does not traverse any core path. In
fact, this happens only when the steady up- and down-paths
cross at the same core AS, otherwise trafﬁc would traverse a
core path between the core ASes of the destination ISD (see
Figure 1).
This case introduces a preference ρ ∈ (0,1) that splits
the bandwidth of the steady down-path between trafﬁc that
traverses core paths, and trafﬁc that does not.
Let sBWu∗ be the total bandwidth of all steady up-paths
to a given core AS in the destination ISD. Then, a particular
steady up-path among them, say with bandwidth sBWu, obtains
steady bandwidth on the down-path d of
sBW ρ
ud =
sBWu
sBWu∗
· ρ · sBWd
(7)
Trafﬁc from external ISDs is weighted accordingly, extend-
ing Equation 6:
sBW ρ
uCd = (1− ρ)· sBWuCd
(8)
Authentication of bandwidth values. To compute sBWuC and
sBWuCd, ASes use the bandwidth values for steady up-paths
and core paths included in the SIBRA packet headers. In order
to prevent a malicious AS from increasing its fair share by
tampering with the bandwidth values, SIBRA requires the core
ASes of each ISD to sign the bandwidth of steady up-paths
inside the ISD, as well as the bandwidth of core paths starting
at the ISD core.
Signing can take place when the steady paths are registered
at the ISD core. Each AS ﬁrst veriﬁes the signatures, and
then computes the fair shares. Fast signing and veriﬁcation
can be implemented using the public-key high-speed signature
scheme ed25519. The private key used for signing by an
ISD core can be shared among the core ASes in each ISD.
For signature veriﬁcation, the corresponding public key of an
ISD core is distributed to all other ISDs, which disseminate
the key to all ASes inside the ISD. In practice, on the order of
only 100 public keys need to be distributed. Since ISD cores
are typically stable, key change and re-distribution should be
infrequent. A detailed description is out of scope for this paper.
Dynamic fair sharing. A pertinent question is whether the
computed fair share is large enough to be useful. On core
links, whose capacity exceeds hundreds of Gbps (recall the
example of Australia in Section VIII), even a ratio of only 1%
steady bandwidth is on the order of a few Gbps, which would
give each AS outside Australia tens of Mbps of steady trafﬁc.
However, in the destination ISD, given that steady down-
paths’ capacity is merely a few Mbps of bandwidth, the fair
share obtained for each leaf AS is less than 1 kbps — too
small to be useful. Of course, a popular destination AS could
register several steady down-paths to increase the steady fair
share, but the increase factor is still small compared to the
number of possible source ASes.
The key observation is that SIBRA enforces the fair share
on steady trafﬁc dynamically, i.e., only when a steady down-
path becomes congested. The fair share is computed between
the ASes that actively use the steady down-path, as opposed
to all possible ASes in the Internet. The fair share is reserved
for 1 second, which allows the AS two retry attempts if an
ephemeral reservation fails (considering an RTT of 300 ms –
a conservative value, according to measurements performed by
CAIDA13).
13https://www.caida.org/research/performance/rtt/walrus0202/
16