0
c(v) ,
(8)
if deg(v) ≥ 2
otherwise ,
where ∆(v) = |{(u, w) ∈ E : (v, u) ∈ E and (v, w) ∈ E}| is
the number of triangles that contain vertex v and (cid:0)deg(v)
2 (cid:1)
is the maximum number of triangles that a vertex v with
degree deg(v) can belong to.
Note that ﬁnding ∆(v) for a given vertex v ∈ V requires
knowing all vertices within two hops of v, which can be a
resource intensive task. To avoid the cost of computing ∆,
we rewrite equation (8)
C =
1
|V ⋆| X∀(v,u)∈E
,
f (v, u)
(cid:0)deg(v)
2 (cid:1)
where f (v, u) gives the number of shared neighbors between
u and v.
Let (vi, ui) be the i-th sampled edge in a stationary RW
and let
ˆC ≡
1
S B
B
Xi=1
f (vi, ui)
2
(cid:0)deg(vi)
(cid:1)
1
deg(vi)
,
S =
1
B
B
Xi=1
1
deg(vi)
.
Corollary 4.2. limB→∞ ˆC→C , almost surely.
Proof. From Theorem 4.1
S→|V ⋆|/|E|,
almost surely. Also from Theorem 4.1
lim
B→∞
lim
B→∞
1
B
B
Xi=1
f (vi, ui)
1
deg(vi)→
f (v, u)
,
1
|E| X∀(v,u)∈E
2
(cid:1)
(cid:0)deg(vi)
(cid:0)deg(v)
2 (cid:1)
almost surely, which together with the almost sure conver-
gence of S implies that limB→∞ ˆC→C, almost surely.
Note that almost sure convergence implies that ˆC is an
asymptotically unbiased estimator of C.
4.3 Estimator Accuracy & Graph Structure
Sampling a graph using a RW is not without drawbacks.
A random walker can get (temporarily) “trapped” inside a
subgraph whose characteristics diﬀer from those of the whole
graph. Even if the random walker starts in steady state (i.e.,
is stationary), this scenario may increase the mean squared
error of the estimates. If the random walker does not start
in steady state, this scenario may cause an increase in the
estimation bias as well as the mean squared error. Ideally,
the random walker needs to mitigate the eﬀect of these traps
on the estimates.
The above two types of estimation errors are well doc-
umented in the literature and various solutions are avail-
able [14]. For instance, if the random walker does not start
in a stationary regime (transient), it is common practice to
discard the ﬁrst w samples [14]. The value of w is called the
burn-in period. There are two problems with this solution:
(1) it only reduces the error related to the non-stationarity
of the samples; (2) it is diﬃcult to determine a good value
for w if the sampling budget is small (compared to the size
of the graph) and the size and structure of G are unknown.
A simple naive solution to the RW “trapping” problem
(adopted in [15] to sample Facebook), is to sample the graph
using multiple independent random walkers [14].
In what
follows we see that this naive approach can lead to increased
estimation errors. In Section 5 we propose a method to mit-
igate the random walk “trapping” problem using m depen-
dent random walkers.
4.4 Multiple Independent Random Walkers
The main problem of estimating graph characteristics us-
ing a single walker is that the walker may get trapped inside
a local neighborhood. But there is the question of what
happens if we could start m independent random walkers
(MultipleRW) at m independently sampled vertices in the
graph. Note that when m = 1 we are back to sampling G
using a single random walker, which we denote as SingleRW.
Networks such as MySpace, Facebook, and Bittorrent admit
random (uniform) vertex sampling at cost c higher than the
cost of sampling the neighbors of a known vertex (which is
what a RW does). In such networks random vertex sampling
may help us start m random walkers at diﬀerent parts of the
394graph. While the value of c can be large, initializing m ran-
dom walkers with uniformly sampled vertices costs (only)
mc units of our sampling budget (where one unity of the
budget is the cost of sampling a vertex in a RW).
+
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

0.2
0.1
E
S
M
N
C
0.02
3
3
3
+
3
0
SingleRW
MutipleRW (m = 10)
3
+
10
102
104
105
vertex in-degree
Figure 1: (Flickr) The log-log plot of the CNMSE of the in-degree
distribution estimates with budget B = |V |/10.
Unfortunately, m independent random walkers starting at
m randomly sampled vertices may decrease estimation ac-
curacy. Consider the following experiment where each of
the m random walkers (independently) performs ⌊B/m− c⌋
steps. We seek to estimate the CCDF (complementary cu-
mulative distribution function) of the in-degree of the Flickr
graph (the Flickr dataset is summarized in Table 1). Accord-
ing to Table 1 the Flickr graph is disconnected. The goal
of this simulation is to compare the estimation accuracy of
SingleRW and MultipleRW when there are no disconnected
components. For this we set c = 1. The sampling budget
is B = 171, 525 = |V |/10, which amounts to a sampling
budget equivalent to 10% of the vertices in the graph. Fig-
ure 1 shows a log-log plot of the CNMSE, equation (2), of
SingleRW and MultipleRW (m = 10) averaged over 10, 000
runs. Note that the estimates obtained by SingleRW are,
on average, more accurate than the estimates obtained by
MultipleRW. Increasing the sampling budget B does not re-
duce the gap.
In Section 6 we see, over other real-world
graphs, that when starting random walkers from uniformly
sampled vertices, MultipleRW has higher estimation errors
than SingleRW.
4.5 Disconnected Graph Example
The following example shows a situation in which both
MultipleRW and SingleRW have large estimation errors. In
this example we initialize MultipleRW with m randomly
(uniformly) sampled vertices. We simplify our exposition by
assuming that each MultipleRW walker takes B/m steps,
where B (the sampling budget) is a multiple of m. Let
G = (V, E) be an undirected graph that has two large dis-
connected components GA = (VA, EA) and GB = (VB, EB).
Let |VA| = |VB| and vol(VA) > vol(VB). When initial
vertices are uniformly sampled, the probability that each
MultipleRW walker (independently) starts in GA (GB) is
hA = |VA|/|V | (hB = |VB|/|V |). Recall that GA and GB are
disconnected. For each random walker, after B/m (B ≫ 1)
RW steps, an edge (uA, vA) ∈ EA is sampled with probabil-
ity pA ≈ hA/vol(VA). Similarly an edge (uB, vB) ∈ EB is
sampled with probability pB ≈ hB/vol(VB). Thus pA  k+] = 0. Using an extension of
the de Moivre-Laplace limit theorem shown in [12, pg. 193]
yields
lim
m→∞
lim
m→∞
P [Kun(m)  k+(m)] = 0.
(15)
(10)
Putting together eqs. (11), (13), (14), and (15), with
lim
m→∞
k(m) dA + (m − k(m))dB
m d
< ∞ , k(m) = o(m) ,
yields
lim
m→∞
P [Kfs(m) = k] = lim
m→∞
P [Kun(m) = k], ∀k ≥ 0,
which concludes our proof.
We have seen as m gets larger, FS gets closer to starting
in steady state with respect to the number of FS random
walkers inside VA, ∀VA ⊂ V .
We have seen that if we initialize m random walkers with
uniformly sampled vertices, FS starts closer to steady state
than MultipleRW. In what follows we show that FS is well
suited to be used in large scale (parallel, asynchronous) ex-
periments without incurring in any coordination or commu-
nication costs between the random walkers.
5.3 Distributed FS
FS is well suited to be used in large scale (parallel, asyn-
chronous) experiments. Let B be the budget of FS. In the
distributed version of FS the budget is not directly related to
the number of sampled vertices obtained by the algorithm.
1f (m) = o(h(m)) implies limm→∞ f (m)/h(m) = 0.
397This is because distributed FS is achieved using multiple in-
dependent random walkers where the cost of sampling a ver-
tex v is an exponentially distributed random variable with
parameter deg(v). In what follows we show, using the Uni-
formization principle of Markov chains [8, Chapter 7.5] and
the Poisson decomposition property, that FS can be made
fully distributed.
Theorem 5.5. A MultipleRW sampling process where the
cost of sampling a vertex v is an exponentially distributed
random variable with parameter deg(v) is equivalent to a
FS process.
Proof. Consider the following Distributed FS (DFS) pro-
cess. Let χ = {L(τ ) ∈ V m : τ ∈ R⋆} be the Markov chain
associated with a random walker over Gm = (V m, Em), the
m-th Cartesian power of G, with transition rate matrix
Q = A − D ,
where A is the adjacency matrix of Gm, Ai,j ∈ {0, 1}, ∀i, j,
and D is a diagonal matrix with Di,i = P∀j Ai,j. We