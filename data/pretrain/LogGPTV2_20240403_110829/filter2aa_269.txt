### Chris Li
**Senior Penetration Tester, Knowledge Consulting Group**  
*Contact: Chris.Li@EMAIL*

---

#### About Me
I enjoy building things.

**Disclaimer:**
- I provide ideas, examples, and code that have worked for me.
- I am open to questions and suggestions afterward.

**What I Am Not:**
- Paid to endorse any products.
- Promising an end to burglaries.
- Advocating the setup of booby traps in your home.
- Challenging anyone to "test" my home. Please, do not.

---

### Once Upon a Time in South Texas
- **My $1500 Thief Magnet**  
  [Link to Article](http://learningcenter.statefarm.com/auto/safety/most-stolen-cars-of-2009/)

- **I Had an Idea:**
  - Remove the main fuel relay at night.
  - Install a two-way alarm system with only paging functionality.

- **Success?** (Depending on how you look at it)

- **My Awesome Apartment Complex**  
  [Reddit Post](https://www.reddit.com/r/WTF/comments/2784oo/my_buddies_jeep_was_set_on_fire_by_some_crazy_ass/)

- **Movin’ on Up: Tips from Cops**
  - Make your home look occupied and difficult to break into.
  - Leave lights on when you go out. Use automatic timers if you are away for a long time.
  - Lock all outside doors and windows before leaving the house or going to bed.
  - Keep your garage door closed and locked.
  - Arrange for mail and newspaper deliveries to be held or collected by a neighbor while you are away.
  - [Source](http://www.sjpd.org/bfo/community/Crimeprev/PreventionTips/Prevent_Burglary.html)

---

### X10 Protocol
- Created in the late 1970s.
- Data is encoded onto a 120kHz carrier, transmitted as bursts during the zero crossings of the 60Hz AC waveform.
- One bit is transmitted at each zero crossing.
- Four-bit house code, four-bit unit code, and four-bit command.
- Inexpensive but prone to interference.
- Each command set is sent three times.

### X10 Hardware
- Inexpensive

### X10 Setup
- Light timers that operate based on the day of the week and time.
- Security timing feature.
- Remote control (RF).
- Not perfect, but functional.

### Adding Exterior Lighting
- So Long, South Texas
- Time to Do It Right
  - *I do not advocate creating laser booby traps in your home.*

### Wish List
- Efficient lighting
- Granular control over timing events
- Integration into existing security systems
- Adaptive timing
- Conditional decision system
- In-house geofencing
- Defense against wireless home automation attacks
- Create tangible house reactions to external stimuli (active defenses)

---

### New Programmable Light Tech: LIFX
- **Pros:**
  - Excellent color reproduction
  - Built-in 802.11 (no hub needed)
  - White output of over 1000 lumens
  - Low power consumption (17 watts at full brightness)
- **Cons:**
  - Bulbs are physically large (limits fixture selection)
  - Relatively heavy (again, limits fixture selection)

### Philips Hue
- **Pros:**
  - Small bulb size (fits in regular fixtures)
  - Low power consumption (8.5 watts at full brightness)
  - Slightly cheaper
- **Cons:**
  - Lower light output
  - Limited color reproduction

### Combining Both

### WeMo Devices
- WLAN to Zigbee bridge like LIFX devices
- Uses UPnP and SOAP
- Control outlets and wall switches
- Semi-cheap
- Terrible app support
- Scheduling rules that sometimes work
- Integration with IFTTT that works 20% of the time
- Terrible security
  - [Source](http://bit.ly/1e6Vsvt)

---

### Creating a Home Defense Server
- Needs to be available 24/7
- Low power consumption (UPS)
- Integration of analog/digital sensors and components
- Output for integration into traditional home security systems
- Raspberry Pi was the obvious choice

### Previous Experience with Pis
- Open Source to the Rescue!
  - **Magicmonkey – lifxjs:** [GitHub](https://github.com/magicmonkey/lifxjs)
    - Reversed the LIFX protocol
    - Paved the way
  - **Sharph – lifx-python:** [GitHub](https://github.com/sharph/lifx-python)
    - Based on Magicmonkey’s protocol dissection and js library
    - Written in Python
    - Bridges WLAN to LIFX’s Zigbee (802.15 915mhz) protocol
  - **LIFX Official API:** [GitHub](https://github.com/LIFX/lifx-gem)
    - Written in Ruby
    - Supports addressing multiple bulbs at once
  - **iancmcc’s ouimeaux:** [GitHub](https://github.com/iancmcc/ouimeaux)
    - Extensive Python API for WeMo devices
    - Application written on top of the official API

### Creating a Front End and Services
- Choose a lightweight framework like Flask (Python) or Sinatra (Ruby)
- Create services for each tech (LIFX, Hue, WeMo)
- Individual services prevent system-wide failures and segregate code
- Choose a lightweight database like Redis and host it on a separate Pi
- Create monitoring services with alerts

- All code available post-conference at: [GitHub](https://github.com/lowercaseDb)

---

### Device Proximity Monitoring
- **Original Plan:**
  - Use Bluetooth ranging
  - Linux’s rfcomm/hcitool/l2ping
  - Inconsistent results
  - Required constant packet transmission for RSSI values
  - Would brick the device if too aggressive
  - Demo: [YouTube](http://www.youtube.com/watch?v=DSMaUdPEJMM)

- **Script:**
  ```bash
  #!/bin/bash
  while :
  do
    l2ping -c 3 &
    sleep 2
    hcitool rssi status
    sleep 5
  done
  ```

- **Utilize WLAN Frames:**
  - More reliable
  - Doesn’t brick the device
  - Allows for monitoring of additional devices (guests)
  - Requires airmon-ng suite

- **Specific Device’s Received Signal Strength Indicator (RSSI):**
  ```bash
  tshark -i mon0 -f "wlan src host " -l -T fields –e radiotap.dbm_antsignal
  ```

- **All Devices Visible and Their RSSI:**
  ```bash
  tshark -i mon0 -l -T fields -e radiotap.dbm_antsignal -e wlan.sa
  ```

- **All Fields Available for a Specific Device:**
  ```bash
  tshark -i mon0 -f "wlan src host " -l -T pdml
  ```

- **Service:**
  - Looks for predefined list of mobile phone MACs (flat file)
  - Monitors WLAN beacon frames and calculates signal strength
  - Records last known signal strength and last time seen in Redis db
  - Capability for historical recording of locational data
  - Separate service monitors timestamps and determines if devices are present
  - Updates database flags affecting decision-making in other services

---

### Adaptive Scheduling System
- “SmartCron” system
- Schedules all lighting events
- Pulls sunrise/sunset data from Weather Underground’s API (free)
- Creates randomized, variable windows for events centered around sunrise, sunset, etc.
- Events are conditional on other event flags in the main database
- Monitors local weather to advance evening lighting in cases of severe weather

- All code available post-conference at: [GitHub](https://github.com/lowercaseDb)

---

### Defenses Against Wireless-Based Attacks
- Utilizes pico-dopp Doppler system for real-time direction finding
- Detects persistent wireless attacks outside the perimeter of the house (jamming)
- See [PicoDopp](http://www.silcom.com/~pelican2/PicoDopp/PICODOPP.htm) for parts/equipment
- Works against 345MHz sensor attacks and Z-Wave
- Requires Ethernet to ensure alerting isn’t jammed

### Active Defenses
- Intruders desire anonymity
- Anything that can be electronically activated and produce a loud, audible response
- Flash all house lights in red
- Rocket igniters and firecrackers
- 12V solenoids to knock over heavy objects (scuba tanks)
- **DO NOT CREATE ANYTHING THAT CAN HARM!**

---

### Roadmap
- Buy Z-Wave devices and integrate them
- Integrate SDR scanning and data sniffing
- Hear ideas from DEFCON folks

### Questions?
If you have any questions, please come find me or email me at Chris.Li@EMAIL.