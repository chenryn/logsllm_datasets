## [⁠]{#chap-uninstall-rhel.html#sect-uninstall-rhel-s390-another-os}31.2.1. 在您的 z/VM 虚拟机或者 LPAR 中运行不同的操作系统 {.title}
:::
::: para
如果您要使用不同于目前 z/VM 客体虚拟机或者 LPRA 中安装的系统的 DASD 或者
SCSI 磁盘引导，请关闭安装的 Red Hat
Enterprise Linux，并使用所需磁盘，即安装了另一个 Linux
实例的磁盘引导。这样可保留安装的系统中的内容不被更改。
:::
:::
:::
:::
[]{#part-technical-appendixes.html}
::: part
::: titlepage
# [⁠]{#part-technical-appendixes.html#part-technical-appendixes}部分 VI. 技术附录 {.title}
:::
::: partintro
::: para
这部分中的附录不包含任何 Red Hat Enterprise Linux
操作步骤。反之，它们提供一些技术背景，您会发现它们对了解 Red Hat
Enterprise Linux 为您提供的用于安装过程不同阶段的选项很有帮助。
:::
:::
:::
[]{#appe-disk-partitions-overview.html}
::: appendix
::: titlepage
# [⁠]{#appe-disk-partitions-overview.html#appe-disk-partitions-overview}附录 A. 磁盘分区简介 {.title}
:::
[]{#appe-disk-partitions-overview.html#idm139805854519360
.indexterm}[]{#appe-disk-partitions-overview.html#idm139805792455728
.indexterm}
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
本附录不一定适用于 AMD64 和 Intel 64
以外的架构。但在这里提及的一般原理可能适用。
:::
:::
:::
::: para
本小节讨论了基本磁盘概念、磁盘重新分区策略、Linux
系统使用的命名方案以及其他相关话题。
:::
::: para
如果您对磁盘分区没有意见，可以直接跳至 [第 A.2 节
"磁盘重新分区策略"](#appe-disk-partitions-overview.html#sect-disk-partitions-making-room){.xref}
查看有关释放磁盘空间准备 Red Hat Enterprise Linux 安装的详情。
:::
::: section
::: titlepage
# [⁠]{#appe-disk-partitions-overview.html#sect-disk-partitions-basic-concepts}A.1. 硬盘基本概念 {.title}
:::
[]{#appe-disk-partitions-overview.html#idm139805785642336 .indexterm}
::: para
硬盘有一个非常简单的功能 - 它们保存数据并使用命令搜索它们。
:::
::: para
讨论类似磁盘分区的问题时，重要的是要了解底层硬件。但因为这个理论非常复杂且广泛，在这里只介绍几本概念。本附录使用一组磁盘驱动器简化图标帮助您理解分区的过程和理论。
:::
::: para
[图 A.1
"未使用过的磁盘驱动器"](#appe-disk-partitions-overview.html#figu-partitions-unused-drive){.xref}，显示全新未使用的磁盘驱动器。
:::
::: figure
[⁠]{#appe-disk-partitions-overview.html#figu-partitions-unused-drive}
::: figure-contents
::: mediaobject
![未使用过的磁盘驱动器](images/partitions/unused-drive.png)
:::
:::
**图 A.1. 未使用过的磁盘驱动器**
:::
::: section
::: titlepage
## [⁠]{#appe-disk-partitions-overview.html#sect-disk-partitions-file-systems}A.1.1. 文件系统 {.title}
:::
[]{#appe-disk-partitions-overview.html#idm139805871806432
.indexterm}[]{#appe-disk-partitions-overview.html#idm139805848365488
.indexterm}
::: para
要在磁盘驱动器中保存数据，则首先需要*格式化*该磁盘驱动器。格式化（通常称"生成*文件系统*"）是向驱动器中写入信息，在未格式化驱动器中为空白空间建立顺序。
:::
::: figure
[⁠]{#appe-disk-partitions-overview.html#figu-partitions-formatted-drive}
::: figure-contents
::: mediaobject
![有文件系统的磁盘驱动器](images/partitions/formatted-drive.png)
:::
:::
**图 A.2. 有文件系统的磁盘驱动器**
:::
::: para
如 [图 A.2
"有文件系统的磁盘驱动器"](#appe-disk-partitions-overview.html#figu-partitions-formatted-drive){.xref}
所指，文件系统所指派的顺序涉及了一些折衷方案：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    驱动器中的一小部分可用空间被用来存储与文件系统有关的数据，这可以被视作额外部分。
    :::
-   ::: para
    文件系统将剩余的空间分成小的一定大小的片段。在 Linux
    中，这些片段就是*块*。
    [⁠]{#appe-disk-partitions-overview.html#idm139805862275840}[^\[4\]^](#appe-disk-partitions-overview.html#ftn.idm139805862275840){.footnote}
    :::
:::
::: para
注：这里没有单一、通用的文件系统。如 [图 A.3
"含有不同文件系统的磁盘驱动器"](#appe-disk-partitions-overview.html#figu-partitions-different-file-system){.xref}
所示，不同的文件系统会彼此不兼容，也就是说，支持某一文件系统（或者相关的文件系统类型）的操作系统可能不支持另外一种文件系统。但比如
Red Hat Enterprise Linux
就支持很多文件系统（包括许多被其他操作系统使用的文件系统），这就使得在不同文件系统之间的数据交换变得容易了。
:::
::: figure
[⁠]{#appe-disk-partitions-overview.html#figu-partitions-different-file-system}
::: figure-contents
::: mediaobject
![含有不同文件系统的磁盘驱动器](images/partitions/other-formatted-drive.png)
:::
:::
**图 A.3. 含有不同文件系统的磁盘驱动器**
:::
::: para
在磁盘中写入文件系统只是第一步。这个进程的目的实际上是要[*保存*]{.emphasis}和[*检索*]{.emphasis}数据。下图显示了写入数据后的磁盘驱动器：
:::
::: figure
[⁠]{#appe-disk-partitions-overview.html#figu-partitions-drive-with-data}
::: figure-contents
::: mediaobject
![已写入数据的磁盘驱动器](images/partitions/used-formatted-drive.png)
:::
:::
**图 A.4. 已写入数据的磁盘驱动器**
:::
::: para
如 [图 A.4
"已写入数据的磁盘驱动器"](#appe-disk-partitions-overview.html#figu-partitions-drive-with-data){.xref}
所示，某些之前的空数据块现在也存放着数据。然而，只看这个框图，我们不能确认这个磁盘中有多少个文件系统。这有可能是一个，也有可能是多个，因为所有的文件都使用至少一个数据块，而有些文件则使用多个块。另外一个值得注意的地方是，已经被使用的块不一定组成连续的空间；未使用的和已使用的块可以散布排列。这被称作*碎片*。当尝试调整现存分区的大小时，碎片会对其产生影响。
:::
::: para
和大多数与计算机相关的技术一样，与磁盘驱动器刚发明时相比，它已经有了很大的变化。特别是变得越来越大。不是物理大小变大，而是保存信息的容量增大。同时额外的容量让使用磁盘驱动器的方法发生了根本改变。
:::
:::
::: section
::: titlepage
## [⁠]{#appe-disk-partitions-overview.html#sect-disk-partitions-basics}A.1.2. 分区：将一个驱动器变成多个 {.title}
:::
[]{#appe-disk-partitions-overview.html#idm139805855725568
.indexterm}[]{#appe-disk-partitions-overview.html#idm139805809772112
.indexterm}
::: para
磁盘驱动器可分成*分区*。每个分区可作为独立磁盘访问。这可通过添加*分区表*完成。
:::
::: para
将磁盘空间分配到独立磁盘分区有如下理由，例如：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    将操作系统数据与用户数据进行合理分隔。
    :::
-   ::: para
    可使用不同的文件系统
    :::
-   ::: para
    可在一台机器中运行多个操作系统
    :::
:::
::: para
目前有两个物理硬盘分区布局标准：主引导记录（``{=html}MBR``{=html}）和
GUID
分区表（``{=html}GPT``{=html}）。``{=html}MBR``{=html}
是基于 BIOS
的计算机使用的较老的磁盘分区方法。``{=html}GPT``{=html}
是较新的分区布局，它是统一可扩展固件界面（``{=html}UEFI``{=html}）的一部分。本小节主要论述*主引导记录*（``{=html}MBR``{=html}）磁盘分区方案。有关*GUID
分区表*（``{=html}GPT``{=html}）分区布局详情请查看
[第 A.1.4 节 "GUID
分区表（GPT）"](#appe-disk-partitions-overview.html#sect-disk-partitioning-guid-partition-table){.xref}。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
虽然本章图表中所显示的分区表和实际磁盘驱动器是分开的，这并不完全正确。事实上，分区表是保存在磁盘的最开始，在任何文件系统或用户数据之前。但是为了清楚起见，我们在图表中将其分开。
:::
:::
:::
::: figure
[⁠]{#appe-disk-partitions-overview.html#figu-partitions-partition-table}
::: figure-contents
::: mediaobject
![带有分区表的磁盘驱动器](images/partitions/unused-partitioned-drive.png)
:::
:::
**图 A.5. 带有分区表的磁盘驱动器**
:::
[]{#appe-disk-partitions-overview.html#idm139805876977872
.indexterm}[]{#appe-disk-partitions-overview.html#idm139805843939504
.indexterm}
::: para
如 [图 A.5
"带有分区表的磁盘驱动器"](#appe-disk-partitions-overview.html#figu-partitions-partition-table){.xref}
所示，分区表被分成 4 个部分或者说是 4
个*主*分区。主分区是硬盘中只包含一个逻辑分区（或部分）的分区。每个分区都存放着定义单一分区的必要的信息，这意味着分区表最多可以定义
4 个分区。
:::
::: para
每个分区表条目包含几个分区的重要特性：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    在磁盘上分区开始和结束的地点（起止点）
    :::
-   ::: para
    分区是否\"活跃\"
    :::
-   ::: para
    分区的类型
    :::
:::
::: para
起点和终点实际上定义了分区的大小和在磁盘中的位置。\"active\"
标签用于某些操作系统的引导装载程序。换句话说就是引导该分区中标记为
\"active\" 操作系统。
:::
::: para
这个类型是一个数字，可用来识别分区的预期用量。有些操作系统使用分区类型表示具体文件系统类型、为分区添加标签使其与特定操作系统关联、表示该分区中包含引导操作系统或者以上三者之和。
:::
::: para
请在 [图 A.6
"采用单一分区的磁盘驱动器"](#appe-disk-partitions-overview.html#figu-partitions-single-part){.xref}
查看采用单一分区的磁盘驱动器示例。
:::
::: figure
[⁠]{#appe-disk-partitions-overview.html#figu-partitions-single-part}
::: figure-contents
::: mediaobject
![采用单一分区的磁盘驱动器](images/partitions/dos-single-partition.png)
:::
:::
**图 A.6. 采用单一分区的磁盘驱动器**
:::
::: para
这个示例中的单一分区是标记为
`DOS`{.literal}。这个标签代表[*分区类型*]{.emphasis}，`DOS`{.literal}
是最常用的一个。下表为常用分区类型以及代表这些分区的十六进制数字列表。
:::
[]{#appe-disk-partitions-overview.html#idm139805834437280
.indexterm}[]{#appe-disk-partitions-overview.html#idm139805873546592
.indexterm}
::: table
[⁠]{#appe-disk-partitions-overview.html#tabl-partition-types}
**表 A.1. 分区类型**
::: table-contents
  -------------------------------------------------------------------------
  分区类型                值           分区类型                值
  ----------------------- ------------ ----------------------- ------------
  Empty                   00           Novell Netware 386      65
  DOS 12-bit FAT          01           PIC/IX                  75
  XENIX root              02           Old MINIX               80
  XENIX usr               03           Linux/MINUX             81
  DOS 16-bit \=32        06           Linux extended          85
  OS/2 HPFS               07           Amoeba                  93
  AIX                     08           Amoeba BBT              94
  AIX bootable            09           BSD/386                 a5
  OS/2 Boot Manager       0a           OpenBSD                 a6
  Win95 FAT32             0b           NEXTSTEP                a7
  Win95 FAT32 (LBA)       0c           BSDI fs                 b7
  Win95 FAT16 (LBA)       0e           BSDI swap               b8
  Win95 Extended (LBA)    0f           Syrinx                  c7
  Venix 80286             40           CP/M                    db
  Novell                  51           DOS access              e1