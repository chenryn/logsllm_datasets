 **Darren Davison** opened **SPR-4930** and commented
We have a controller that uses `@SessionAttributes`, and as such Spring always
adds HTTP headers to prevent caching (see
AnnotationMethodHandlerAdapter.handle() )
This is causing us a problem in that MSIE users invoke the controller, click
links on the page generated by it, and then get the "This page has expired"
warning from IE if they hit their back button. Interestingly, if the HTTP
headers are set to expire after 1 second, MSIE happily shows the user the page
from cache, even though it really HAS expired according to the protocol, so
there's definitely (yet another) IE fault at play here too. Firefox and Safari
don't exhibit this issue at all.
There is no way to override this behaviour in the
AnnotationMethodHandlerAdapter class at present, so I'm wondering if the
default behaviour can be made more flexible? Ideally this would be by way of
an attribute on the `@RequestMapping` (or maybe a new annotation) which could
be read by the handler adapter. If no value is supplied, it defaults to 0,
thus preserving current system behaviour and backwards compatibility,
otherwise it specifies the cache seconds to use.
Perhaps adding such an attribute to the RequestMapping/new annotation would
provide more benefit in finer grained cache control for annotated controllers,
falling back to that set on the handler adapter.
I'll write and test the patch if any of that sounds like it might be
acceptable.
Or perhaps there's already some way to handle this that I missed..?
* * *
**Affects:** 2.5.4
**Attachments:**
  * SPR-4930.patch ( _5.14 kB_ )