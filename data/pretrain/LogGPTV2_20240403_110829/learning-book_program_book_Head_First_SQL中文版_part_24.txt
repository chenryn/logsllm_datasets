### 第6章

#### Page 269
**SELECT进阶**

**当前表的问题**
以下是DatavilleVideo现有表的一些缺点：
1. 当顾客归还影片时，我们无法得知影片原本的位置。
2. 如果一部影片在多个列中都被标记为T（真），那么很难确定其确切的上架分类。因此，每部影片应该指定单一分类。
3. 影片内容不够清晰，导致顾客有时会在喜剧区发现恐怖电影封面。
4. 目前所有T/F值的地位相同，这使得归类时无法判断哪个列应优先考虑。
5. 添加T/F数据非常耗时且容易出错。每次引入新影片时，都需要为所有列插入T/F值，列越多，错误的可能性越大。

为了改进这些问题，我们需要添加一个分类列来加快分类上架速度、帮助顾客了解所选影片类型，并减少店内的资料错误。

**如何将现有列对应到新的分类？**
- 是否有电影符合一种或多种分类？

#### Page 270
**ALTER当前数据**

**比对现有数据**
我们已经知道如何使用`ALTER`语句添加新的影片分类列，但实际分类可能有些麻烦。幸运的是，我们可以利用表中的现有内容来识别每部影片的分类，而无需逐一观看影片。

用简单的句子重新描述每部影片的关系：
- 如果影片的`drama`列为T，则将其`category`列设为'drama'。
- 如果影片的`comedy`列为T，则将其`category`列设为'comedy'。
- 如果影片的`action`列为T，则将其`category`列设为'action'。
- 如果影片的`horror`列为T，则将其`category`列设为'horror'。
- 如果影片的`scifi`列为T，则将其`category`列设为'scifi'。
- 如果影片的`for_kids`列为T，则将其`category`列设为'family'。
- 如果影片的`cartoon`列为T且`rating`列为'G'，则将其`category`列设为'family'。
- 如果影片的`cartoon`列为T且`rating`列不是'G'，则将其`category`列设为'misc'。

有些卡通片并不适合儿童观看，因此`rating`列有助于判断影片是否适合全家观赏。如果`rating`为G，则归类为'family'；否则，归类为'misc'。

#### Page 271
**生成新列**

现在可以将上述短句转换为SQL的`UPDATE`语句：
```sql
UPDATE movie_table SET category = 'comedy' WHERE comedy = 'T';
UPDATE movie_table SET category = 'action' WHERE action = 'T';
UPDATE movie_table SET category = 'family' WHERE for_kids = 'T';
UPDATE movie_TABLE SET category = 'family' WHERE cartoon = 'T' AND rating = 'G';
UPDATE movie_table SET category = 'misc' WHERE cartoon = 'T' AND rating <> 'G';
```

请填写下列影片的分类值：

| title                | rating | drama | comedy | action | gore | scifi | for_kids | cartoon | category |
|----------------------|--------|-------|--------|--------|------|-------|----------|---------|----------|
| Big Adventure        | G      | F     | F      | F      | F    | F     | T        | F       | family   |
| Greg: The Untold Story | PG     | F     | F      | T      | F    | F     | F        | F       | action   |
| Mad Clowns           | R      | F     | F      | F      | T    | F     | F        | F       | horror   |
| Paraskavedekatriaphobia | R      | T     | T      | T      | F    | T     | F        | F       | misc     |
| Rat named Darcy, A   | G      | F     | F      | F      | F    | F     | T        | F       | family   |
| End of the Line      | R      | T     | F      | F      | T    | T     | F        | T       | misc     |
| Shiny Things, The    | PG     | T     | F      | F      | F    | F     | F        | F       | drama    |
| Take it Back         | R      | F     | T      | F      | F    | F     | F        | F       | comedy   |
| Shark Bait           | G      | F     | F      | F      | F    | T     | F        | F       | scifi    |
| Angry Pirate         | PG     | F     | T      | F      | F    | F     | F        | T       | misc     |

**每个T/F列的顺序是否重要？**
是的，确实重要。以“Paraskavedekatriaphobia”为例，尽管它最终被归为'scifi'类，但实际上它的内容更接近于喜剧。我们不确定它究竟该属于哪一类，或许放在'misc'类中最为保险。

#### Page 273
**SELECT进阶**

**如果数据较少的话，这似乎不会构成问题，但如果表中有几百列呢？有没有方法将这些UPDATE语句合并成一个超大型UPDATE语句？**

确实可以合成一个超大型UPDATE语句，但我们有更好的工具。通过使用`CASE`表达式检查现有列的值和条件，我们可以将所有`UPDATE`语句合并在一起。只有当现有列的值符合条件时，才会在新列中填入指定的值。

**基本语法：**
```sql
UPDATE my_table
SET new_column = 
CASE
  WHEN column1 = somevalue1 THEN newvalue1
  WHEN column2 = somevalue2 THEN newvalue2
  ELSE newvalue3
END;
```

任何不符合上述条件的记录都会被改为`newvalue3`。

#### Page 274
**使用CASE表达式进行UPDATE**

让我们将`CASE`表达式应用于`movie_table`：
```sql
UPDATE movie_table
SET category = 
CASE
  WHEN drama = 'T' THEN 'drama'
  WHEN comedy = 'T' THEN 'comedy'
  WHEN cartoon = 'T' THEN 'family'
  ELSE 'misc'
END;
```

这样，所有未分类的数据都将被归类为'misc'。请注意我们如何为“Angry Pirate”和“End of the Line”的分类列填入新值。

| title                | rating | drama | comedy | action | gore | scifi | for_kids | cartoon | category |
|----------------------|--------|-------|--------|--------|------|-------|----------|---------|----------|
| Big Adventure        | G      | F     | F      | F      | F    | F     | T        | F       | family   |
| Greg: The Untold Story | PG     | F     | F      | T      | F    | F     | F        | F       | action   |
| Mad Clowns           | R      | F     | F      | F      | T    | F     | F        | F       | horror   |
| Paraskavedekatriaphobia | R      | T     | T      | T      | F    | T     | F        | F       | misc     |
| Rat named Darcy, A   | G      | F     | F      | F      | F    | F     | T        | F       | family   |
| End of the Line      | R      | T     | F      | F      | T    | T     | F        | T       | misc     |
| Shiny Things, The    | PG     | T     | F      | F      | F    | F     | F        | F       | drama    |
| Take it Back         | R      | F     | T      | F      | F    | F     | F        | F       | comedy   |
| Shark Bait           | G      | F     | F      | F      | F    | T     | F        | F       | scifi    |
| Angry Pirate         | PG     | F     | T      | F      | F    | F     | F        | T       | misc     |
| Potentially Habitable Planet | PG     | F     | T      | F      | F    | T     | F        | F       | comedy   |

希望这些优化后的文本能够更加清晰、连贯和专业。