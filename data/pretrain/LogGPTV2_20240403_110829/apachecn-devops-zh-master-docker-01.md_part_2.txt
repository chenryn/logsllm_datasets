运行以下命令应确认 Docker 已安装并正在运行:
```
$ docker version
```
您应该会看到类似于以下输出的内容:
![](img/3955bf99-117a-4c4f-98a6-caa832558ac9.png)
我们将在未来的章节中使用两个支持工具，它们是作为 macOS 或 Windows 10 安装程序的 Docker 的一部分安装的。
为了确保我们准备好在后面的章节中使用这些工具，我们现在应该安装它们。第一个工具是**Docker 机器**。要安装这个，我们首先需要获得最新的版本号。你可以在[https://github.com/docker/machine/releases/](https://github.com/docker/machine/releases/)的项目 GitHub 页面的发布部分找到这个。在撰写本文时，版本为 0 . 15 . 0—安装时，请使用最新版本更新以下代码块中命令的版本号:
```
$ MACHINEVERSION=0.15.0
$ curl -L https://github.com/docker/machine/releases/download/v$MACHINEVERSION/docker-machine-$(uname -s)-$(uname -m) >/tmp/docker-machine
$ chmod +x /tmp/docker-machine
$ sudo mv /tmp/docker-machine /usr/local/bin/docker-machine
```
要下载并安装下一个也是最后一个工具 **Docker Compose** ，运行以下命令，通过访问位于[https://github.com/docker/compose/releases/](https://github.com/docker/compose/releases/)的发布页面再次检查您正在运行最新版本:
```
$ COMPOSEVERSION=1.22.0
$ curl -L https://github.com/docker/compose/releases/download/$COMPOSEVERSION/docker-compose-`uname -s`-`uname -m` >/tmp/docker-compose
$ chmod +x /tmp/docker-compose
$ sudo mv /tmp/docker-compose /usr/local/bin/docker-compose
```
安装后，您应该能够运行以下两个命令来确认软件版本是否正确:
```
$ docker-machine version
$ docker-compose version
```
# 在 macOS 上安装 docker
与命令行 Linux 安装不同，Docker for Mac 有一个图形安装程序。
Before downloading, you should make sure that you are running Apple macOS Yosemite 10.10.3 or above. If you are running an older version, all is not lost; you can still run Docker. Refer to the other older operating systems section of this chapter.
可以从 Docker 商店下载安装程序，网址为[https://store . Docker . com/editions/community/Docker-ce-desktop-MAC](https://store.docker.com/editions/community/docker-ce-desktop-mac)。只需点击获取 Docker 链接。下载后，您应该有一个 DMG 文件。双击它将挂载该映像，打开挂载在桌面上的映像应该会显示如下内容:
![](img/6e6f1020-b05a-4eb0-9277-fd283764567d.png)
将 Docker 图标拖到“应用”文件夹后，双击它，系统会询问您是否要打开已下载的应用。单击是将打开 Docker 安装程序，显示如下内容:
![](img/30550aa6-fdba-4bc9-b994-f91eb5494441.png)
单击下一步，并按照屏幕上的说明进行操作。安装并启动后，您应该会在屏幕左上角的图标栏中看到一个 Docker 图标。单击图标并选择“关于 Docker”将向您显示类似于以下内容的内容:
![](img/27e05fdf-ed47-467d-be8a-bcdc9a539759.png)
您也可以打开终端窗口。运行以下命令，就像我们在 Linux 安装中所做的那样:
```
$ docker version
```
您应该会看到类似以下终端输出的内容:
![](img/e40b2f8a-148e-4b5a-b453-80bb899b59c9.png)
您还可以运行以下命令来检查安装在 Docker 引擎旁边的 Docker Compose 和 Docker Machine 版本:
```
$ docker-compose version
$ docker-machine version 
```
# 在 Windows 10 专业版上安装 Docker
和 Mac 的 Docker 一样，Windows 的 Docker 也使用图形安装程序。
Before downloading, you should make sure that you are running Microsoft Windows 10 Professional or Enterprise 64-bit. If you are running an older version or an unsupported edition of Windows 10, you can still run Docker; refer to the other older operating systems section of this chapter for more information. 
Docker for Windows has this requirement due to its reliance on Hyper-V. Hyper-V is Windows' native hypervisor and allows you to run x86-64 guests on your Windows machine, be it Windows 10 Professional or Windows Server. It even forms part of the Xbox One operating system.
您可以从 Docker 商店下载 Docker for Windows 安装程序，网址为[https://store . Docker . com/editions/community/Docker-ce-desktop-Windows/](https://store.docker.com/editions/community/docker-ce-desktop-windows/)。只需点击获取 Docker 按钮下载安装程序。下载后，运行 MSI 包，您将收到以下消息:
![](img/30b99fc6-5abc-491e-b000-05b422ab97a9.png)
单击是，然后按照屏幕上的提示进行操作，这不仅需要安装 Docker，还需要启用 Hyper-V(如果您尚未启用的话)。
安装后，您应该会在屏幕右下角的图标托盘中看到一个 Docker 图标。单击它并从菜单中选择关于 Docker 将显示以下内容:
![](img/69ea533f-f50a-4991-b357-6cfab5522f8d.png)
打开一个 PowerShell 窗口，键入以下命令:
```
$ docker version
```
这也将向您显示类似于 Mac 和 Linux 版本的输出:
![](img/3812b057-12d3-4f6d-975f-041408c61d89.png)
同样，您也可以运行以下命令来检查安装在 Docker 引擎旁边的 Docker Compose 和 Docker Machine 版本:
```
$ docker-compose version
$ docker-machine version
```
同样，您应该会看到类似于 macOS 和 Linux 版本的输出。正如您可能已经开始收集的，一旦安装了软件包，它们的使用将非常相似。这将在本章后面更详细地介绍。
# 旧操作系统
如果您没有在苹果电脑或视窗系统上运行足够新的操作系统，那么您将需要使用 Docker 工具箱。考虑通过运行以下命令打印的输出:
```
$ docker version
```
在我们到目前为止执行的所有三个安装中，它显示了两个不同的版本，一个客户端和一个服务器。可以预见的是，Linux 版本显示客户端和服务器的架构都是 Linux；但是，您可能会注意到，Mac 版本显示客户端运行在达尔文上，达尔文是苹果类似 Unix 的内核，Windows 版本显示 Windows。然而，这两个服务器都显示了 Linux 架构，那么是什么呢？
这是因为 Mac 和 Windows 版本的 Docker 都在后台下载并运行一个虚拟机，而这个虚拟机运行的是一个基于 Alpine Linux 的小型轻量级操作系统。虚拟机使用 Docker 自己的库运行，该库连接到您选择的环境的内置虚拟机管理程序。
对于 macOS，这是内置的 Hypervisor.framework，对于 Windows，这是 Hyper-V
为了确保没有人错过 Docker 体验，不使用这些内置虚拟机管理程序的 Docker 版本可用于旧版本的 macOS 和不受支持的 Windows 版本。这些版本利用 VirtualBox 作为虚拟机管理程序来运行供本地客户端连接的 Linux 服务器。
**VirtualBox** is an open source x86 and AMD64/Intel64 virtualization product developed by Oracle. It runs on Windows, Linux, Macintosh, and Solaris hosts, with support for many Linux, Unix, and Windows guest operating systems. For more information on VirtualBox, see [https://www.virtualbox.org/](https://www.virtualbox.org/).
有关 **Docker 工具箱**的更多信息，请查看位于[https://www.docker.com/products/docker-toolbox/](https://www.docker.%20com/products/docker-toolbox/)的项目网站，在这里您还可以下载 macOS 和 Windows 安装程序。
This book assumes that you have installed the latest Docker version on Linux, or have used Docker for Mac or Docker for Windows. While Docker installations using Docker Toolbox should be able to support the commands in this book, you may run into issues around file permissions and ownership when mounting data from your local machine to your containers.
# Docker 命令行客户端
现在我们已经安装了 Docker，让我们看看一些您应该已经熟悉的 Docker 命令。我们将从一些常见的命令开始，然后看一下用于 Docker 映像的命令。然后，我们将深入研究用于容器的命令。
Docker has restructured their command-line client into more logical groupings of commands, as the number of features provided by the client grows quickly and commands start to cross over each other. Throughout this book, we will be using the new structure.
我们将看到的第一个命令是最有用的命令之一，不仅在 Docker 中，而且在您使用的任何命令行实用程序中都是如此——即`help`命令。它是这样运行的:
```
$ docker help
```
该命令将为您提供一个您可以使用的所有 Docker 命令的完整列表，以及每个命令的简要描述。有关特定命令的进一步帮助，您可以运行以下命令:
```
$ docker  --help
```
接下来，让我们运行`hello-world`容器。为此，只需运行以下命令: