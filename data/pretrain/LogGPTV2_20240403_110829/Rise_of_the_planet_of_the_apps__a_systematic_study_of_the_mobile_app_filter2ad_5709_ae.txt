CHAPTER 3. THE RISE
Marketplace Total
Monthly Daily
Mean Downloads’ Growth Rate
SlideMe
1Mobile
AppChina
Anzhi
17.4% (154 days)
65.9% (78 days)
48.3% (62 days)
89.4% (61 days)
3.4%
16.9%
23.4%
43.9%
0.1%
0.5%
0.7%
1.4%
Table 3.3: Mean downloads growth rate.
Table 3.3 shows the growth rate of mean downloads of apps for the mea-
surement period (total), as well as the per month and per day growth rates.
The monthly growth rate of mean downloads for AppChina and Anzhi are
greater than those of SlideMe and 1Mobile indicating that Chinese market-
places can bene(cid:12)t an app developer in terms of a faster popularity growth
of her app (more downloads). Stunningly, the Anzhi appstore appears to be
the best option with a monthly growth rate of 44%. This outcome con(cid:12)rms
the information of Trilena Games company that noticed a huge rise of her
apps’ downloads in Anzhi within a few days.
3.4 Growth Distribution Among Di(cid:11)erent Apps
Although Figure 3.2 clearly shows that the total number of downloads grows
linearly with time, we would be interested in understanding how this growth
is distributed among di(cid:11)erent apps. That is, are there applications whose
number of downloads grow very quickly? Are there any applications that
are not downloaded at all? Figure 3.4 plots the CDF of growth rate of
(a) Chinese marketplaces
(b) SlideMe and 1Mobile
Figure 3.4: CDF of Growth Rate of apps.
di(cid:11)erent apps in the four appstores for a two months period. The growth
rate of an app is de(cid:12)ned as the ratio of the number of times the app has been
downloaded within the measurement interval, over the number of downloads
 0 20 40 60 80 100 10 20 30 40 50 60 70 80 90 100Cumulative fraction of apps(CDF)Growth rate (%)AppChinaAnzhimedian 0 20 40 60 80 100 10 20 30 40 50 60 70 80 90 100Cumulative fraction of apps(CDF)Growth rate (%)SlideMe1Mobilemedian3.5. THE \FORGOTTEN" APPS
17
the app had at the beginning of the measurement. For example, if at the
beginning of the interval the app had 100 downloads, and at the end of the
measurement it had 130 downloads, then its growth rate is (130-100)/100 =
30%. Figure 3.4 shows that apps at di(cid:11)erent appstores enjoy di(cid:11)erent growth
rates. For instance, in AppChina and Anzhi the median app (y axis at 50)
enjoys a growth rate of 27% and 30% respectively. The upper 10% of apps
in these appstores enjoy a growth rate greater than 80%, while the upper
5% of the apps enjoy growth rates higher than 130% for AppChina, and
higher than 250% for Anzhi (not shown in the Figure). It is very interesting
to note that all apps in AppChina and Anzhi had a positive growth rate:
all applications were downloaded at least once. On the contrary, in SlideMe
and 1Mobile there is a large percentage of apps which have not received any
downloads at all, during the measurement interval. For example, as many
as 23% of the applications in SlideMe and as many as 31% of the apps in
1Mobile, did not receive a single download during the measurements. Along
these lines, the median app received only 18% growth rate in SlideMe and
almost 7.5% in 1Mobile, and the upper 10% of the apps had a growth rate
of at least 47% in former and 220% in latter, which are much lower than
those of AppChina and Anzhi.
It seems that Chinese markets are a much better place for developers
to upload their applications. Indeed, after visually inspecting the (cid:12)rst page
of AppChina, we observed that it hosted both popular and unpopular ap-
plications. Actually, next to apps that had millions of downloads we saw
apps which had been downloaded only a few thousands of times. This strat-
egy seems to exploit the popularity of high popular apps to enhance the
popularity of unpopular ones.
3.5 The \Forgotten" Apps
Figure 3.4 clearly shows that for SlideMe and 1Mobile there exists a large
percentage of apps which were not downloaded not even once during the
measurements interval. It would be interesting to see how large is this set
of \forgotten" apps and how does it change as a function of the length of
the duration interval.
For example, if the measurement interval is too small, then it is reason-
able to have a large number of applications that received no downloads. On
the other hand, if the interval is too large, then it is reasonable for most,
if not all, of the apps to receive at least one download. Figure 3.5 shows
the change in the percentage of \forgotten" apps as a function of the du-
ration of the interval. We see that in all cases this percentage drops fasts
and after 5-10 days reaches a plateau that is either (cid:13)at or drops very slowly.
Especially, for Chinese marketplaces (AppChina and Anzhi) this plateau re-
mains at 0%. The plateau for SlideMe is at 24.5% in the (cid:12)rst 60 days, and
18
CHAPTER 3. THE RISE
Figure 3.5: Percentage of apps with zero downloads for the entire duration
of the measurement interval.
reaches the 21% in the end of its measurement interval, which is 154 days (5
months). In 1Mobile, this plateau approaches the 26%. We further analyse
our data and found that this portion of apps largely correspond to very old
old apps (more than 1 year old) for 1Mobile and to a mix of old and paid
apps for SlideMe .
3.6 Summary
In brief, this chapter explored the number of available applications of the
monitored appstores and how this number increases as a function of time.
We observed high growth rates ranging from 1% (Anzhi) up to 36% (Ap-
pChina) per month. Also, we investigated the number of downloads of
the apps through time and realized that Chinese marketplaces noted much
higher growth rates than the rest monitored ones, indicating a more promis-
ing place for developers who want their apps to become popular (get more
downloads) at a faster pace. Finally, we attempted to understand how the
downloads’ growth rate is distributed among di(cid:11)erent apps in our datasets
and noticed that all of the apps of the two Chinese appstores had positive
growth rates (at least one download per app), while the other two market-
places had a proportion of apps with zero change (no downloads at all). By
analysing our data, we concluded that the apps with no downloads were very
old apps in 1Mobile, and a mix of old and paid apps in SlideMe. On the
 0 20 40 60 80 100 0 10 20 30 40 50 60% of apps withzero downloadsmeasurement interval (in days) 1Mobile SlideMe AppChina Anzhi3.6. SUMMARY
19
other side, Chinese marketplaces seem to follow a smart strategy of placing
unpopular apps in recommendations of popular ones, enhancing in this way
the popularity of the former. This appears to be the reason why in these
appstores were not observed applications with zero number of downloads.
20
CHAPTER 3. THE RISE
4
App Popularity
In this Chapter we study the app popularity based on the distribution of
downloads of each app among the di(cid:11)erent appstores. We compare our
results with (cid:12)ndings from similar studies on other domains, like web content
popularity [31], (cid:12)le sharing workloads [46], and user-generated video content
analysis [32]. Furthermore, we examine which parameters may a(cid:11)ect the
app popularity, such as user ratings and the presence of the cost on some
applications (paid apps).
4.1 Is There a Pareto E(cid:11)ect?
Previous studies [31,32,46] have shown that web content and (cid:12)le downloads
usually follow the \Pareto Principle": that is, 20% of the documents are
responsible for 80% of the downloads. Figure 4.1 shows the CDF of the
percentage of app downloads as a function of the app ranking (apps ranked
from most popular to least popular) for the di(cid:11)erent appstores. The results
con(cid:12)rm that a small percentage of apps is responsible for a large percentage
of downloads. For example, both in AppChina and Anzhi, about 10% of the
apps (x = 10) are responsible for close to 90% of all downloads. Similarly,
10% of the 1Mobile apps are responsible for more than 85% of the downloads,
and 10% of the SlideMe apps are responsible for more than 70% of all the
downloads in this appstore.
21
22
CHAPTER 4. APP POPULARITY
Figure 4.1: A few apps account for most of the downloads.
We see that this uneven distribution of popularity goes all the way into
the top 1% of the applications. Indeed, in Figure 4.2 we see that as little as
1% of the apps are responsible for more than 70% of downloads in Anzhi,
than 60% of downloads in AppChina, than 55% in 1Mobile and more than
30% of downloads in SlideMe.
Figure 4.2: A few apps account for most of the downloads (Zoom).
 0 10 20 30 40 50 60 70 80 90 100 10 20 30 40 50 60 70 80 90 100 110Downloads (CDF)Normalized App Ranking (%)10% of the apps account for 90% of the downloads AppChina 1Mobile SlideMe Anzhi 0 10 20 30 40 50 60 70 80 90 1 2 3 4 5Downloads (CDF)Normalized App Ranking (%)10% of the apps account for 90% of the downloads1% of the apps accounts for 70% of the downloads AppChina 1Mobile SlideMe Anzhi4.2.
IS THERE A POWER-LAW BEHAVIOR?
23
4.2 Is There a Power-Law Behavior?
Although it is clear that app downloads follow a Pareto principle, we would
like to explore whether app downloads follow a power law distribution much
like web downloads do [31].
(a) AppChina
(b) SlideMe
(c) 1Mobile
(d) Anzhi
Figure 4.3: Cumulative distribution of total downloads per app.
Figure 4.3 shows the CDF of the number of apps (y axis) which have
exceeded a given number of downloads (x axis). That is, the value on the y
axis is equal to the number of apps which had more than x downloads. We
see that all distributions share a similar pattern: their main \trunk" has a
linear slope indicating a ZIPF distribution, which is truncated at both ends
(i.e. for both for small x and large x values). The truncation for small x
values seems to follow similar patterns shown in the downloads of (cid:12)le sharing
systems [46] and video downloads in YouTube [32]. This truncation, on (cid:12)le
sharing systems as well as on user-generated video content systems was
attributed to the \fetch-at-most-once" principle. That is, content shared
in a (cid:12)le sharing system, such as videos, movies, etc.tend to be downloaded
at most once by each user. Therefore, the curve for very popular content
(i.e. small values in the x axis) tends to be (cid:13)atten out and reach a value
close to the number of users in the system. To understand the shape of the
download curve in our case, we replot the data in Figure 4.4 as the number
100101102103104105100101102103104105106107108Number of apps with > x downloadsdownloadsAppChinaZipf: s=0.72100101102103104105100101102103104105106107Number of apps with > x downloadsdownloadsSlideMeZipf: s=1.26100101102103104105106100101102103104105106107Number of apps with > x downloadsdownloads1MobileZipf: s=1.13100101102103104105101102103104105106107108Number of apps with > x downloadsdownloadsAnzhiZipf: s=0.7424
CHAPTER 4. APP POPULARITY
of downloads per app. All apps are sorted in the x axis according to their
rank, based on their total downloads.
(a) AppChina
(b) SlideMe
(c) 1Mobile
(d) Anzhi
Figure 4.4: Total downloads per app as a function of app’s rank.
We see that for very small x (i.e. very popular apps) the number of down-
loads stays almost horizontal (especially in AppChina and Anzhi), which is
probably due to the \fetch-at-most-once" principle observed both in peer-
to-peer systems and YouTube [32, 46]. It is reasonable to expect that users
will also download each app at most once, apart from apps which are up-
dated. To ensure that \fetch-at-most-once" property exists in appstores as
well, we analyzed our data to (cid:12)nd the percentage of apps that were updated
during our measurements. We have this information, since we collect all
the APK versions of the applications in our dataset. Figure 4.5 depicts the
CDF of the number of updates per app in the four appstores for a period of
two months. As we can see, only a small percentage of apps have updates
during this period. In SlideMe and 1Mobile only 20% of the apps were up-
dated, while in Anzhi this percentage is even smaller, equals to 15%. The
larger proportion of updated apps is observed in AppChina, which is close
to 34% of the total apps in the appstore. Nonetheless, we observe that few
apps have been updated during our measurements and most of them have
a very small number of updates (they are updated very rarely). Moreover,
100101102103104105106107108100101102103104105DownloadsApp rankAppChinaZipf: s=1.51100101102103104105106100101102103104DownloadsApp rankSlideMeZipf: s=0.90100101102103104105106107100101102103104105DownloadsApp rank1MobileZipf: s=0.92101102103104105106107108100101102103104105DownloadsApp rankAnzhiZipf: s=1.424.2.
IS THERE A POWER-LAW BEHAVIOR?
25
we speculate that not all users update their downloaded apps. This en-
tails that fetch-at-most-once property is a general property of marketplaces
which limits the downloads of each user for the same app, because apps do
not change so often (as e.g. web pages may do).
Figure 4.5: CDF of the number of updates per app for a period of two
months.
We observed that only a small percentage of apps were updated during our mea-
surements.
In addition to the truncation for small x values, Figure 4.4 clearly shows
that there is a signi(cid:12)cant curvature for large x (less popular apps) as well.
Observed in user-generated content downloads [32], but not in (cid:12)le shar-
ing [46], this curvature has been thought to be attributed to search and
recommendations engines [33,48]. We feel that this curvature is an instance
of a more general phenomenon, which we call the clustering e(cid:11)ect. The
clustering e(cid:11)ect, suggests that apps are grouped into (static or dynamic)
sets. Apps within the same set (cluster) are correlated: if a user downloads
one of them, then the same user will probably download another app of the
same set rather than switching to another set, or to a totally unrelated app.
These clusters can be formed, for example, by the semantic classi(cid:12)cation of
apps to categories, by user communities as a result of positive comments,
by the appstore as a result of the recommendation algorithm used, or by
other grouping forces. To validate our clustering e(cid:11)ect hypothesis, we de-
(cid:12)ne and approximate the temporal a(cid:14)nity of user downloads among several
app categories in Chapter 5, we propose a model for appstore usage and app
 0 0.2 0.4 0.6 0.8 1 0 5 10 15 20 25Cumulative fraction of apps(CDF)Number of updatesSlideme1MobileAppChinaAnzhi 0.5 0.6 0.7 0.8 0.9 1 0 1 2 3 426
CHAPTER 4. APP POPULARITY
download patterns, and we validate our model based on a simulation study
comparing the simulated with the observed data in chapter 6.
4.3 The e(cid:11)ect of User Ratings
We have already show that the distribution of applications’ popularity, in
di(cid:11)erent mobile marketplaces, exhibits a power-law behavior which repre-
sents the rich-get-richer principle. However, in the resulted distributions we
noticed some deviations from the pure power-law behavior. These deviations
may arise because of various factors including results of search engines or
recommendation systems, as already mentioned. In this section, we explore
how the user ratings can a(cid:11)ect the app popularity.
Of our monitored appstores, SlideMe, 1Mobile and Anzhi provided in-
formation about user ratings along with the exact number of votes (the
number of users that rated an app) during our measurement period. User
ratings indicate the number of times an app has been downloaded or eval-
uated by users. To examine the relationship between the user ratings and
app popularity (app downloads), we calculated the average app downloads
for di(cid:11)erent votes’ bins. The results are illustrated in the Figure 4.6. We