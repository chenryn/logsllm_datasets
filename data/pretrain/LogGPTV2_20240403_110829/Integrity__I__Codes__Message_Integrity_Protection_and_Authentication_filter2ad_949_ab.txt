codeword c ∈ C to a different codeword c
ping at least one bit “1” to bit “0”. For example, to convert
(cid:2) = 0101, the third bit of c has to be changed
c = 0110 into c
to 0. By Deﬁnition 1, the triple (S,C, e) is an I-code.
Example 2 (Codes with ﬁxed Hamming weight.) We en-
code each source state s ∈ S into a binary sequence (code-
word) of the ﬁxed length ((cid:2)) and ﬁxed Hamming weight (w).
For binary sequences, Hamming weight is the number of
bits “1” in the binary sequence. As in the previous exam-
ple, suppose S = {00, 01, 10, 11}. Let (cid:2) = 4 and w = 3.
Then the number of possible binary sequences of length
= 4; i.e.,
(cid:2) and with Hamming weight w is
{0111, 1011, 1101, 1110}. Let us deﬁne the set of code-
words C as follows: C ≡ {0111, 1011, 1101, 1110}. Sup-
pose further the following source encoding rule e: 00 →
0111, 01 → 1011, 10 → 1101 and 11 → 1110. Clearly, e
is injective. Moreover, no codeword c ∈ C can be converted
(cid:2) ∈ C, without ﬂipping at least
into a different codeword c
one bit “1” of c to bit “0”. Therefore, by Deﬁnition 1, the
triple (S,C, e) is an I-code. The Merkle one-time signature
scheme is also based on codes with ﬁxed (known) Hamming
weight [17].
(cid:2)
(cid:3)
(cid:2)
(cid:3)
=
(cid:2)
w
4
3
In the following section, we show how I-codes can be
used on a radio channel to ensure the message integrity.
Proceedings of the 2006 IEEE Symposium on Security and Privacy (S&P’06) 
1081-6011/06 $20.00 © 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 02:52:17 UTC from IEEE Xplore.  Restrictions apply. 
original message
m
I-coding
c
on-off keying
channel
1
1
0
1
1
1
0
0
0
T
s
T
s
time
Figure 2. I-coding An example of I-coding at
the sender using the complementary encoding rule:
1 → 10 and 0 → 01.
However, as we will show, I-codes are applicable to any
communication media (channel) for which we can ensure
that it is not possible to block emitted signals on it, except
with a negligible probability.
3.2
I-codes on the Radio Channel
Let us consider the simple example shown in Figure 2.
Here, m denotes the message for which the integrity should
be checked. Using the given I-code (i.e., the complemen-
tary encoding rule), the sender ﬁrst encodes m into the cor-
responding I-code codeword c. Due to the injective prop-
erty of I-codes (Deﬁnition 1), it is possible to recover un-
ambiguously message m from the codeword c. In order to
transmit c over a given radio channel, the sender uses the
following on-off keying modulation at the physical layer.
For each symbol “1” of c, the sender emits some signal
(waveform) during the period Ts (the symbol period). For
each symbol “0” of c, however, the sender emits nothing
during period Ts (Figure 2). The waveforms that are trans-
mitted do not carry any information, but it is the presence
or absence of energy in a given time slot of duration Ts that
conveys information1.
In order to retrieve the codeword transmitted, the re-
ceiver simply measures the energy in the corresponding
time slots of duration Ts. We will assume for the mo-
ment that the sender and the receiver are synchronized at the
physical layer and with respect of the beginning and the end
of the transmission of c; later in the paper, we discuss how
this can be achieved. Let Pr denote the average power that
the receiver measures in a given time slot of duration Ts.
Let us also denote with P0 a pre-deﬁned threshold power
level. For the given time slot, the receiver decodes the re-
ceived signals as follows: (1) if Pr ≥ P0, output symbol
“1”, and (2) if Pr < P0, output symbol “0”.
1Note that this is similar to the pulse position modulation (PPM).
In our example in Figure 2, the receiver (which is, by
assumption, synchronized with the transmitter), listens on
the channel during time period 6× Ts and for each time slot
of duration Ts it applies the above decoding rule. Finally,
the receiver uses the inverse of the used encoding rule (i.e.,
01 → 0, 10 → 1) to retrieve the emitted message m = 101.
Note that the receiver does not have to know the wave-
form emitted by the sender. All the receiver has to know
is the frequency band used by the sender; the receiver can
be thought of as being a bank of radiometers measuring the
energy in the given frequency band.
Assume that we can ensure for the used radio channel
that it is not possible to block (annihilate) signals emitted
over it, except with a negligible probability. Also, the trans-
mitter should transmit signals using the power level high
enough so that the average power as measured by the re-
ceiver is above the threshold P0.
Theorem 1 Assuming that the sender and the receiver are
synchronized with respect to the beginning and the end
of the transmission of the codeword c, an adversary can-
(cid:2)
when
not trick the receiver into accepting the message m
m (cid:4)= m
(cid:2)
is sent, except with a negligible probability.
Proof. From the injective property of the I-code (Deﬁni-
tion 1) we have
(cid:2) (cid:4)= m ⇒ c
m
(cid:2) (cid:4)= c ,
(cid:2)
(cid:2)
where c
is the unique I-code codeword corresponding to
. Furthermore, converting the codeword c to
message m
another valid codeword involves ﬂipping at least one sym-
bol “1” of c into symbol “0” (Deﬁnition 1). Finally, the
on-off keying modulation implies that the adversary has to
delete (cancel) at least one signal (waveform) emitted on the
channel (see Figure 2).
However, according to our assumption, the adversary can
delete the signal emitted on the used radio channel only with
a negligible probability. The need for the synchronization
between the sender and the receiver is clear.
We note that the adversary can still convert symbol “0”
to symbol “1”. In this case, however, the receiver will sim-
ply drop the received codeword, since such a codeword can-
not be demodulated properly. Referring to the example in
Figure 2, assume that the adversary ﬂips the third symbol
“0” into symbol “1” in the original codeword c = 100110.
The receiver will decode the altered codeword as 101110.
But this codeword cannot be related to any message, since
there is no transformation deﬁned for the pair 11. There-
fore, ﬂipping symbol “0” to symbol “1” can be thought
of as a DoS attack, which the adversary can mount in any
case against a radio channel (no matter which modulation
scheme is used).
Proceedings of the 2006 IEEE Symposium on Security and Privacy (S&P’06) 
1081-6011/06 $20.00 © 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 02:52:17 UTC from IEEE Xplore.  Restrictions apply. 
3.3 Preventing the attacker from erasing
symbol “1”
In order to erase the signal (symbol “1”) from the chan-
nel, the attacker needs to be able to predict the shape of
the signal at the receiver and send the inverted signal to the
receiver to cancel it out. There are two major factors that
make it difﬁcult for the attacker to erase the signal from the
channel: the randomness of the channel and the randomness
of the signal generated at the sender.
To prevent the attacker from erasing the signal, we im-
plement the following scheme: the sender randomizes the
signals corresponding to symbols “1”.
It is important to
stress that this measure makes sense only if the designated
receiver can demodulate the signal at approximately the
same speed as the attacker. Speciﬁcally, to prevent signal
erasure, each symbol “1” of the I-coded message c is trans-
mitted as a random signal of duration Ts. Note that we can
randomize amplitude, phase, frequency etc. For example,
in Figure 2, we have randomized the frequency. Given the
randomness of this signal, it is difﬁcult for the attacker to
ﬂip symbol “1” to “0” as it would need to predict the shape
of the random signal in order to cancel it.
In Section 6, we analyze in greater detail the effects of
the randomness of the radio signal on the attacker’s ability
to erase the signal from the channel.
3.4 Synchronization and Complementary
Encoding
Thus far, we have assumed that the sender and the re-
ceiver are synchronized with respect to the beginning and
the end of the transmission of the given codeword c. In this
section, we show how this can be achieved. Let us start with
a simple example.
Example 3 (Straightforward synchronization) Assume
that Alice meets Bob and wants to send a message m to
him, using the I-codes approach. In this scenario, a simple
synchronization scheme would consist of using codewords
of the ﬁxed length that is publicly known, and letting Alice
check if Bob is listening on the correct channel, before
she starts transmitting the message. In order to let Bob’s
device know as of when it should start demodulating the
message transmitted, we can use the convention that every
I-code codeword is preﬁxed with symbol “1”. When Alice
ﬁnishes with the transmission, she informs Bob who, in
turn, “notiﬁes” his device (e.g., by a push on a button).
In this way, Bob informs his device that it may begin to
demodulate the received message. The important point
is that the Bob’s device should take into account all the
symbols it received between the time instant at which the
ﬁrst symbol “1” has arrived and the time instant at which
Bob has notiﬁed his device (i.e., the push on the button).
Clearly, the approach to synchronization of the previous
example is not very ﬂexible. We next describe a more ﬂexi-
ble approach. Let us assume that the sender wants to trans-
mit the following codeword c = 1010011001 (which corre-
sponds to the message s = 11010 under the complementary
encoding rule). The sender simply keeps emitting (using the
on-off keying) the following repetitive sequence
(cid:4)
(cid:5)(cid:6)
c
(cid:7)
(cid:4)
(cid:5)(cid:6)
c
(cid:7)
. . . delimiter
1010011001 delimiter
1010011001 delimiter . . .
(1)
Here, “delimiter” represents a specially constructed bit
string such that any successfully demodulated codeword2
received between any two consecutive “delimiters” is au-
thentic (i.e., corresponds to 1010011001 in our example).
We will show shortly how to construct such a delimiter for
the complementary encoding rule.
The receiver ﬁrst has to make sure that the peer sender
is active (transmitting the above repetitive sequence). Then
it decodes a codeword received between any two consecu-
tive “delimiters”. If the codeword can be converted back to
a message using the inverse of the complementary encod-
ing rule (i.e., (10 → 1, 01 → 0)), the receiver accepts this
message as being authentic. At this stage, the peer sender
can stop transmitting the above repeated sequence. A nice
property of this approach is that the receiver does not have
to know the length of the codeword being transmitted in ad-
vance.
We next deﬁne more formally the notion of “delimiter”.
Then we construct the delimiter for the complementary en-
coding rule.
Deﬁnition 2 For the ﬁxed set of codewords C, we deﬁne
an incongruous delimiter (shortly, i-delimiter) to be a ﬁ-
nite minimum-length string of bits that satisﬁes the follow-
ing conditions:
1. No substring (of consecutive bits) of any codeword
c ∈ C can be converted into the i-delimiter, without
ﬂipping at least one bit “1” of c to bit “0”;
2. The i-delimiter cannot be converted into a substring
(of consecutive bits) of any c ∈ C, without ﬂipping at
least one bit “1” of the i-delimiter to bit “0”;
3. Any valid codeword (i.e., any c ∈ C) received between
two consecutive i-delimiters is authentic.
c
the
set C such that
=
Example 4 Consider
10100110 ∈ C. Consider also the following candi-
date for the i-delimiter: x = 11011. We will show that
bit-string x does not satisfy Deﬁnition 2 and therefore is not
an i-delimiter for the set C. This is easily seen by observing
that 10100110 → 10110110, i.e., it is sufﬁcient to ﬂip
2In our example, by “successfully demodulated codeword” we mean
the codeword for which the transformation (10 → 1, 01 → 0) exists.
Proceedings of the 2006 IEEE Symposium on Security and Privacy (S&P’06) 
1081-6011/06 $20.00 © 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 02:52:17 UTC from IEEE Xplore.  Restrictions apply. 
only the fourth bit of c so that x emerges as the substring of
c. Therefore, the ﬁrst condition of Deﬁnition 2 is not met.
Assuming that an adversary cannot ﬂip bit “1” into bit
“0”, we have the following result.
Theorem 2 Consider the set of codewords C obtained by
k(cid:4) (cid:5)(cid:6) (cid:7)
applying the encoding rule (1 → 10, 0 → 01) to the set of
11 . . . 1},
source states (messages) S = {0, 1, 00, 01, . . . ,
for arbitrary k < ∞. A string 111000 is an i-delimiter for
the set C.
Proof. By mere inspection of all the strings of a length
smaller than 6 bits, it easily follows that no such string sat-
isﬁes Deﬁnition 2.
Consider now the string 111000. Observe that for ev-
ery codeword c ∈ C the number of consecutive bits 0 and
the number of consecutive bits 1 is at most two. There-
fore, (i) 111000 cannot be converted into any codeword
c ∈ C without ﬂipping at least one of the leading bits “1”
in 111000 to bit “0”, and (ii) no substring of any codeword
c ∈ C can be converted into 111000, without ﬂipping at
least one bit “1” of c to bit “0”. Thus, the string 111000
satisﬁes the ﬁrst two conditions in Deﬁnition 2.
We next show that it satisﬁes the third condition as well.
We observe that it is sufﬁcient to focus on a codeword be-
tween two consecutive strings 111000, since three consec-
utive bits “1” never appear in any valid codeword from C
and the adversary cannot ﬂip a bit “1”. Let us consider the
following sequence of bits for any k-bit codeword (k being
even) c = (c1c2 . . . ck−1ck) ∈ C
. . . 111000 c1c2 . . . ck−1ck 111000 . . .
(2)
We ﬁrst show that the adversary cannot accomplish that the
string 111000 emerges in any (other) part of the sequence
(2) and that at the same time any resulting codeword ˆc is
valid. As the result the only hope for the adversary is to
leave the original delimiters 111000 intact and try to trans-