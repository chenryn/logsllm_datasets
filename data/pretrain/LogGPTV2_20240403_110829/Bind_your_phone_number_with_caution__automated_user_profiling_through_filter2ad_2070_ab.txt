### 1. Introduction and Data Consistency

The rate of 14.18% is consistent with the officially released data of 13.73%, which validates the representativeness of our sampling. The distribution of phone numbers across different segments is illustrated in Figure 2. It is worth noting that no user profiles correspond to the phone number segment +861521070, as this segment remains unallocated according to our further investigation.

Among the 14,179 users, not all have fully completed their profiles. As shown in Figure 3, over 55.13% of users have fully completed their profiles, indicating a strong reliance on social applications for maintaining social connections. This leads them to share more detailed personal information online to facilitate interactions. Only 12.43% of users fill in only the required fields (WeChat ID and name). Even so, their phone numbers are linked to their WeChat accounts, potentially exposing them to attackers.

**Figure 3: Completeness of Optional Profile Fields**

### 2. Horizontal Collaboration

Horizontal collaboration involves cross-application analysis. For this, we chose MiTalk Messenger, a free and cross-platform messaging application with 17 million users as of August 2012. MiTalk facilitates seamless connections between users' accounts and their address books, enhancing social interactions.

In our experiment, we used the phone number segment +861521098, which had uncovered the maximum number of user profiles in our previous WeChat study. Out of 10,000 phone numbers, 360 MiTalk user accounts (denoted as M) were returned from the MiTalk server and added to our MiTalk friend list. MiTalk provides a comprehensive profile scheme, including user name, gender, birthday, photo links, current location, and names of schools and companies. Almost all users have at least one photo link, and 30% maintain school and company name fields, which are considered private.

As described in Section 2.2, horizontal collaboration includes broad union and deep intersection. We found 116 new users in MiTalk. After the broad union, we had a total of 2,052 phone numbers and corresponding user accounts. In terms of deep intersection, we integrated user profiles from WeChat and MiTalk, finding that 244 users had registered on both applications. We then performed consistency and authenticity analysis based on these 244 user profiles (denoted as D).

### 3. Consistency and Authenticity Analysis

Our analysis revealed that 34.02% of users in D share similar display names in both applications. To further investigate the degree to which these names are official, we used the Chinese Bai Jia Xing (Hundred Family Surnames) dataset. Typical Chinese names follow a specific format: a surname followed by a given name of one or two characters. Through regular pattern matching, we analyzed the display names in W, M, and D to determine the ratio of formal Chinese full names. The results, shown in Table 1, indicate that 48.33% of MiTalk users' display names are likely official names, compared to 31.24% for WeChat. This suggests that MiTalk users tend to register with their real names, possibly due to the app's recommendation to provide truthful personal information.

**Table 1: Comparison of Name Authenticity Analysis Results from Three Datasets - WeChat, MiTalk, and Deep Intersection Set**

| Dataset | Total # Users | # Users with Real Name | Rate |
|---------|---------------|------------------------|------|
| WeChat (W) | 14,179 | 4,430 | 31.24% |
| MiTalk (M) | 360 | 174 | 48.33% |
| Deep Intersection Set (D) | 244 | 145 | 59.43% |

Another notable finding was the inconsistency in gender fields. As shown in Table 2, 54.1% of users in D had contradictory gender fields across both applications. Among these, 68.9% (90 out of 132) appeared as male in MiTalk and female in WeChat. To determine the likely true gender, we employed a winner-take-all strategy favoring the majority. However, confirming a user's gender based on two applications is challenging. Given the higher authenticity of MiTalk profiles, we deemed the gender information in MiTalk to be more reliable after manual checks.

**Table 2: Gender Consistency of Deep Intersection Set**

| WeChat | MiTalk |
|--------|--------|
| Male   | 37     |
| Female | 90     |
| Male   | 42     |
| Female | 57     |

### 4. Vertical Penetration

To demonstrate vertical penetration, we conducted a case study using the deep intersection dataset D. We selected a user with the WeChat ID "t106322XXXX" (last four digits replaced for privacy). By querying the QQ user search function with the last ten digits of the WeChat ID, we found a matching QQ account. Additional profile fields from QQ revealed that the user is a young man from Shaanxi, born on November 9, 1990, and currently residing in Beijing. We also found his personal homepage address.

To confirm the identity, we visited the homepage, where an access control question asked for the "real name." By inputting the display name from the WeChat account, we successfully logged in. This confirmed that the QQ and WeChat accounts belong to the same person. The homepage provided more detailed information about the user, as shown in Table 3.

**Table 3: Profile Fields Seized in Each Penetration Step**

We inferred that the homepage was intended for friends who know the user. However, as strangers, we were able to obtain personal information, including private details. This highlights the potential for attackers to exploit such vulnerabilities through manual work, gaining crucial information for trust-building and fraud.

### 5. Countermeasures

To mitigate the risks associated with Address Book Matching, we propose several feasible alternatives for developers:

1. **One-at-a-Time Query Constraint**: Allow phone numbers to be queried one at a time, meeting user needs while preventing large-scale attacks.
2. **Display Names Only**: Return only the display names of application accounts, not detailed profiles or corresponding phone numbers. This is suitable for applications with a real-name system.
3. **Exact Matches**: Return phone numbers and names that exactly match those in the address book, without accessing account information.
4. **Mutual Recommendations**: Recommend users to each other if they are in each other's address books, suitable for bilateral phone number-based relationships.

### 6. Related Work

- **Privacy Analysis of Applications**: Tools like TaintDroid and PiOS analyze privacy issues in Android and iOS applications, respectively. Our approach leverages existing Address Book Matching to gather private user profiles.
- **Automated User Profiling**: Studies by Leyla Bilge and M. Balduzzi have explored automated identity theft and personal information collection on social networks. Our work focuses on collecting user information from mobile applications.
- **Misuse of Phone Numbers in Communication Applications**: Research by Sebastian Schrittwieser et al. has highlighted security flaws in message and VoIP applications. Our experiments show that contact matching technology can lead to severe privacy leaks.

### 7. Conclusion

This study exploits Address Book Matching in smartphone messenger applications to collect user profiles. To our knowledge, this is the first work to do so via smartphone applications. The consistency and authenticity of collected profiles were analyzed, revealing that users often leave truthful personal information in mobile messenger applications. However, the level of trust varies across different applications due to registration rules and promotion strategies. We provide countermeasures for developers to prevent the exposure of mapping information between phone numbers and application accounts.

### 8. Acknowledgments

This work was supported by various grants and foundations, including the National Program on Key Basic Research Project, National Natural Science Foundation of China, and Beijing Municipal Natural Science Foundation.

### 9. References

[1] Mitalk messenger. http://www.miliao.com/
[2] Wechat. http://weixin.qq.com
[3] M. Balduzzi, C. Platzer, T. Holz, E. Kirda, D. Balzarotti, and C. Kruegel. Abusing social networks for automated user profiling. In S. Jha, R. Sommer, and C. Kreibich, editors, Recent Advances in Intrusion Detection, volume 6307 of Lecture Notes in Computer Science, pages 422–441. 2010.
[4] A. R. Beresford, A. Rice, N. Skehin, and R. Sohan. Mockdroid: trading privacy for application functionality on smartphones. In Proceedings of the 12th Workshop on Mobile Computing Systems and Applications, HotMobile ’11, pages 49–54, New York, NY, USA, 2011.
[5] L. Bilge, T. Strufe, D. Balzarotti, and E. Kirda. All your contacts are belong to us: automated identity theft attacks on social networks. In Proceedings of the 18th international conference on World wide web, WWW ’09, pages 551–560, New York, NY, USA, 2009.
[6] A. Braunstein, L. Granka, and J. Staddon. Indirect content privacy surveys: measuring privacy without asking about it. In Proceedings of the Seventh Symposium on Usable Privacy and Security, SOUPS ’11, pages 15:1–15:14, New York, NY, USA, 2011.
[7] M. Egele, C. Kruegel, E. Kirda, and G. Vigna. PiOS: Detecting privacy leaks in iOS applications. In Proceedings of the 18th Annual Network & Distributed System Security Symposium (NDSS), Feb. 2011.
[8] W. Enck, P. Gilbert, B.-G. Chun, L. P. Cox, J. Jung, P. McDaniel, and A. N. Sheth. Taintdroid: an information-flow tracking system for realtime privacy monitoring on smartphones. In Proceedings of the 9th USENIX conference on Operating systems design and implementation, OSDI’10, pages 1–6, Berkeley, CA, USA, 2010.
[9] M. Jakobsson, N. Johnson, and P. Finn. Why and how to perform fraud experiments. IEEE Security and Privacy, 6(2):66–68, Mar. 2008.
[10] S. Schrittwieser, P. Fruehwirt, P. Kieseberg, M. Leithner, M. Mulazzani, M. Huber, and E. Weippl. Guess who is texting you? evaluating the security of smartphone messaging applications. In Network and Distributed System Security Symposium (NDSS 2012), 2012.
[11] Y. Zhou, X. Zhang, X. Jiang, and V. W. Freeh. Taming information-stealing smartphone applications (on android). In Proceedings of the 4th international conference on Trust and trustworthy computing, TRUST’11, pages 93–107, Berlin, Heidelberg, 2011.