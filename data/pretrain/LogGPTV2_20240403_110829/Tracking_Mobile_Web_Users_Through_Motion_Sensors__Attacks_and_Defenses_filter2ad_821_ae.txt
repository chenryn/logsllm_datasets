Figure 13, we can see that for  = 6, we get signiﬁcantly
lower classiﬁcation accuracy than using low levels of uniform
noise (see Figure 11). This suggests that Laplace noise may
achieve a better tradeoff between privacy and utility; we plan
to investigate its impact on the utility of other applications in
the future.
3) White Noise: From ﬁgure 13 we see that even when
 = 1 we can achieve an F-score of 26–41%. We then looked
at the dominant features and found that spectral features like
spectral irregularity, spectral attack slope and spectral entropy
are dominant. Changing the gain and offset have minimal
Fig. 12: Impact of randomly inserting new data points.
brieﬂy analyze how uniform noise impact applications using
motion sensors. To evaluate this we prototype a Step Counter
application, a very popular smartphone application [60], that
uses accelerometer readings to determine the number of steps
taken by a user. We use the same procedure to collect sensor
data through a web page. In our experimental setting, we ask
the participant to take 20 steps while holding the phone in
his/her hand and this whole process in repeated 10 times.
We then calibrate11 and obfuscate12 the collected sensor data.
Table XV shows the step counts computed from the original
and modiﬁed sensor streams. Neither calibration nor basic
obfuscation have a signiﬁcant effect on accuracy. We would
expect calibration to generally improve accuracy, but our cali-
bration process is imperfect and it is possible that it introduces
very minor errors. Basic obfuscation introduces errors that
are commensurate with calibration errors of actual devices
and thus also has minimal impact on accuracy. Increasing
the obfuscation range introduces errors that are still within
acceptable range. However, introducing new data points makes
the accelerometer readings signiﬁcantly less reliable, and we
observe this effect in the step count. We next explore several
alternative ways to add noise and their impact on privacy and
utility.
TABLE XV: Impact of calibration and obfuscation
Stream Type
Original Stream
Calibrated Stream
Basic Obfuscation
Increased-Range Obfuscation
Enhanced Obfuscation
Step Count
Mean
Std dev
20
20.1
20.1
19.9
25.1
0
0.32
0.32
1.69
4.63
2) Laplace Noise: Next, we adopted an approach similar
to differential privacy where we randomly selected offset and
gain error from a Laplace distribution. From the deﬁnition of
differential privacy [61], we know that a randomized function
K gives -differential privacy if for all data sets D1 and D2
11Using a handset for which we have computed calibration errors.
12Using random offset and gain error for each session.
12
 0 10 20 30 40 50 60 70 80 90 100 0 0.2 0.4 0.6 0.8 1Avg. F-score (%)Probability of injecting new data samplesUsing both accelerometer and gyroscope dataNo-audioSine 0 10 20 30 40 50 60 70 80 90 100 1 2 3 4 5 6 7 8 9 10Avg. F-score (%)Epsilon (ε)Using both accelerometer and gyroscope dataNo-audioSineFig. 14: Impact of Laplace noise on utility.
Fig. 16: Impact of white noise on sensor utility.
impact on spectral features; therefore we next added Gaussian
white noise to the signal, after applying random offset and
gain error from a Laplace distribution. For this experimental
setup we ﬁxed  = 6 (because for  = 6 we observed minimal
impact on utility in Figure 14) and varied the signal-to-noise
ratio (SNR). Figure 15 highlights F-score for different values
of SNR. We can see that F-score remains more or less steady
but increases slightly for higher SNRs. However, compared
to Laplace noise (Figure 13) we see that F-score decreases
signiﬁcantly when white noise is added to the signal.
obfuscated unless the user explicitly allows an application to
access unaltered sensor data. As we just observed for some
applications small amount of obfuscation does not
impact
their utility, however, for others, e.g., a 3-D game might need
access to raw accelerometer and gyroscope data instead of the
obfuscated data to operate properly, in which case this will be
noticeable to the user who can then provide the appropriate
permission to the application. Our default obfuscated-setting
will ensure that users do not have to worry about applications
like browser accessing sensor data without their awareness.
VII. LIMITATIONS
Our approach has a few limitations. First, we experimented
with 93 devices; a larger target device pool could lower our
accuracy. However, we conducted our experiments in real-
world settings (i.e., users under natural web browsing settings),
collecting data from a wide variety of smartphones. We,
therefore, believe our results are representatives of real-world
scenarios. Secondly, our calibration process has some errors,
specially the manual calibration process for the gyroscope is
error-prone as it is impossible to manually rotate the device
at a ﬁxed angular velocity. That being said one of our main
goals is to show that even simple calibration techniques can
reasonably reduce device ﬁngerprinting.
Fig. 15: Impact of white noise on F-score.
VIII. CONCLUSION
Impact of White Noise on Utility: Given that we see adding
white noise provides low F-scores we wanted to see what kind
on impact it would have on sensor utility. To evaluate this we
rerun our step counter application on sensor data after applying
Gaussian white noise. Figure 16 highlights the computed step
counts for different SNRs. We see that adding white noise
has drastic consequences as it increases the number of steps
counted signiﬁcantly, even at high signal-to-noise ratios.
C. Deployment Considerations
We envision our obfuscation technique as an update to the
mobile operating system. Under default setting, data is always
In this paper, we show that motion sensors such as ac-
celerometers and gyroscopes can be used to uniquely identify
smartphones. The more concerning matter is that these sensors
can be surreptitiously accessed by a web page publisher
without users’ awareness. We also show that injecting audio
stimulation in the background improves detection rate as
sensors like gyroscopes react to acoustic stimulation uniquely.
Our countermeasure techniques, however, mitigate such
threats by obfuscating anomalies in sensor data. We were able
to signiﬁcantly reduce ﬁngerprinting accuracy by employing
simple, yet effective obfuscation techniques. As a general
conclusion, we suggest using our obfuscation techniques in
the absence of explicit user permission/awareness.
13
 0 10 20 30 40 50 60 70 80 90 0 1 2 3 4 5 6 7 8 9 10Avg. step countEpsilon (ε)Measured Step CountExpected Step Count 0 10 20 30 40 50 0 1 2 3 4 5 6 7 8 9 10Avg. F-score (%)SNR (powersignal/powernoise)Using both accelerometer and gyroscope dataNo-audioSine 0 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200 0 1 2 3 4 5 6 7 8 9 10Avg. step countSNR (powersignal/powernoise)Measured Step CountExpected Step CountACKNOWLEDGMENT
We would like to thank all the anonymous reviewers for
their valuable feedback. We would specially like to thank
Romit Roy Choudhury and his group at UIUC for providing
us with the bulk of the smartphones used in our experiments.
On the same note we would like to extend our gratitude to
the Computer Science department at UIUC for providing us
with the remaining smartphones used in our experiments. We
give special thanks to all the participants who took the time
to participate in our online data collection study. This paper
reports on work that was supported in part by NSF CNS
1053781 and NSF CNS 0953655.
REFERENCES
[1] K. Mowery and H. Shacham, “Pixel perfect: Fingerprinting canvas in
HTML5,” in Proceedings of Web 2.0 Security and Privacy Workshop
(W2SP), 2012.
[2] S. Dey, N. Roy, W. Xu, R. R. Choudhury, and S. Nelakuditi, “Accel-
Print: Imperfections of Accelerometers Make Smartphones Trackable,”
in Proceedings of the 21st Annual Network and Distributed System
Security Symposium (NDSS), 2014.
[3] H. Bojinov, Y. Michalevsky, G. Nakibly, and D. Boneh, “Mobile Device
Identiﬁcation via Sensor Fingerprinting,” CoRR, vol. abs/1408.1416,
2014. [Online]. Available: http://arxiv.org/abs/1408.1416
[4] A. Ross and A. Jain, “Information fusion in biometrics,” Pattern
Recognition Letters, vol. 24, no. 13, pp. 2115 – 2125, 2003.
[5] S. COLE and S. Cole, Suspect Identities: A History of Fingerprinting
and Criminal Identiﬁcation. Harvard University Press, 2009.
[6] L. Langley, “Speciﬁc emitter identiﬁcation (SEI) and classical parameter
fusion technology,” in Proceedings of the IEEE WESCON, 1993, pp.
377–381.
[7] M. Riezenman, “Cellular security: better, but foes still lurk,” IEEE
Spectrum, vol. 37, no. 6, pp. 39–42, 2000.
[8] Z. Li, W. Xu, R. Miller, and W. Trappe, “Securing Wireless Systems via
Lower Layer Enforcements,” in Proceedings of the 5th ACM Workshop
on Wireless Security (WiSe), 2006, pp. 33–42.
[9] N. T. Nguyen, G. Zheng, Z. Han, and R. Zheng, “Device ﬁngerprinting
to enhance wireless security using nonparametric Bayesian method,”
in Proceedings of the 30th Annual IEEE International Conference on
Computer Communications (INFOCOM), 2011, pp. 1404–1412.
[10] N. Patwari and S. K. Kasera, “Robust Location Distinction Using
Temporal Link Signatures,” in Proceedings of the 13th Annual ACM
International Conference on Mobile Computing and Networking (Mo-
biCom), 2007, pp. 111–122.
[11] V. Brik, S. Banerjee, M. Gruteser, and S. Oh, “Wireless Device
Identiﬁcation with Radiometric Signatures,” in Proceedings of the 14th
ACM International Conference on Mobile Computing and Networking
(MobiCom), 2008, pp. 116–127.
[12] R. M. Gerdes, T. E. Daniels, M. Mina, and S. F. Russell, “Device iden-
tiﬁcation via analog signal ﬁngerprinting: A matched ﬁlter approach,”
in Proceedings of the 13th Network and Distributed System Security
Symposium (NDSS), 2006.
[13] S. Moon, P. Skelly, and D. Towsley, “Estimation and removal of clock
skew from network delay measurements,” in Proceedings of the 18th
Annual IEEE International Conference on Computer Communications
(INFOCOM), vol. 1, 1999, pp. 227–234.
[14] T. Kohno:2005, A. Broido, and K. C. Claffy, “Remote Physical Device
Fingerprinting,” IEEE Trans. Dependable Secur. Comput., vol. 2, no. 2,
pp. 93–108, 2005.
[15] L. C. C. Desmond, C. C. Yuan, T. C. Pheng, and R. S. Lee, “Identifying
Unique Devices Through Wireless Fingerprinting,” in Proceedings of
the First ACM Conference on Wireless Network Security (WiSec), 2008,
pp. 46–55.
J. Franklin, D. McCoy, P. Tabriz, V. Neagoe, J. Van Randwyk, and
D. Sicker, “Passive Data Link Layer 802.11 Wireless Device Driver
Fingerprinting,” in Proceedings of the 15th Conference on USENIX
Security Symposium, 2006.
[16]
[17] F. Guo and T. cker Chiueh, “Sequence Number-Based MAC Address
Spoof Detection,” in Proceedings of 8th International Symposium on
Recent Advances in Intrusion Detection (RAID), 2005.
[18] G. Lyon. Nmap: a free network mapping and security scanning tool.
http://nmap.org/.
[19] F. Yarochkin, M. Kydyraliev, and O. Arkin. Xprobe project. http:
//oﬁrarkin.wordpress.com/xprobe/.
[20] P. Eckersley, “How Unique is Your Web Browser?” in Proceedings of
the 10th International Conference on Privacy Enhancing Technologies
(PETS), 2010, pp. 1–18.
[21] K. Mowery, D. Bogenreif, S. Yilek, and H. Shacham, “Fingerprinting
Information in JavaScript Implementations,” in Proceedings of IEEE
Web 2.0 Security & Privacy Workshop (W2SP), 2011.
[22] L. Olejnik, C. Castelluccia, and A. Janc, “Why Johnny Can’t Browse in
Peace: On the Uniqueness of Web Browsing History Patterns,” in 5th
Workshop on Hot Topics in Privacy Enhancing Technologies (HotPETs),
2012.
[23] G. Acar, M. Juarez, N. Nikiforakis, C. Diaz, S. G¨urses, F. Piessens,
and B. Preneel, “FPDetective: dusting the web for ﬁngerprinters,” in
Proceedings of the 2013 ACM SIGSAC conference on Computer and
Communications Security (CCS), 2013, pp. 1129–1140.
[24] G. Acar, C. Eubank, S. Englehardt, M. Juarez, A. Narayanan, and
C. Diaz, “The Web never forgets: Persistent tracking mechanisms in
the wild,” in Proceedings of the 21st ACM SIGSAC Conference on
Computer and Communications Security (CCS), 2014, pp. 674–689.
[25] N. Nikiforakis, L. Invernizzi, A. Kapravelos, S. Van Acker, W. Joosen,
C. Kruegel, F. Piessens, and G. Vigna, “You are what you include:
large-scale evaluation of remote javascript inclusions,” in Proceedings
of the 19th ACM SIGSAC conference on Computer and Communications
Security (CCS), 2012, pp. 736–747.
[26] N. Nikiforakis, W. Joosen, and B. Livshits, “PriVaricator: Deceiving
Fingerprinters with Little White Lies,” in Proceedings of
the 24th
International Conference on World Wide Web (WWW), 2015, pp. 820–
830.
[27] Apple places kill date on apps that use ‘UDID’ device identi-
ﬁers. http://www.zdnet.com/article/apple-places-kill-date-on-apps-that-
use-udid-device-identiﬁers/.
[28] Android TelephonyManager. http://developer.android.com/reference/
android/telephony/TelephonyManager.html#getDeviceId().
[29] A. Das, N. Borisov, and M. Caesar, “Do You Hear What I Hear?: Fin-
gerprinting Smart Devices Through Embedded Acoustic Components,”
in Proceedings of the 21st ACM SIGSAC Conference on Computer and
Communications Security (CCS), 2014, pp. 441–452.
[30] Z. Zhou, W. Diao, X. Liu, and K. Zhang, “Acoustic Fingerprinting
Revisited: Generate Stable Device ID Stealthily with Inaudible Sound,”
in Proceedings of the 21st ACM SIGSAC Conference on Computer and
Communications Security (CCS), 2014, pp. 429–440.
[31] Y. Michalevsky, D. Boneh, and G. Nakibly, “Gyrophone: Recognizing
Speech from Gyroscope Signals,” in Proceedings of the 23rd USENIX
Conference on Security Symposium, 2014, pp. 1053–1067.
[32] Y. Song, M. Kukreti, R. Rawat, and U. Hengartner, “Two Novel
Defenses against Motion-Based Keystroke Inference Attacks,” in Work-
shop of Mobile Security Technologies (MoST) co-located with IEEE
Symposium on Security and Privacy, 2014.
[33] STMicroelectronics. http://www.st.com/web/en/home.html.
[34]
[35] Research and Markets: Global MEMS Market 2015-2019. http:
Invensense. http://www.invensense.com/.
4 Teardown.
https://www.iﬁxit.com/Teardown/iPhone+4+
//www.businesswire.com/news/home/20150216005540/en/Research-
Markets-Global-MEMS-Market-2015-2019--#.VOVr7HVGh5Q.
iPhone
Teardown/3130.
iPhone
Teardown/10525.
iPhone
Teardown/29213.
Inside
technical-competitive-analysis/resources/blog/inside-the-samsung-
galaxy-siii/.
the Samsung Galaxy SIII. http://www.chipworks.com/en/
https://www.iﬁxit.com/Teardown/iPhone+5+
6 Teardown.
https://www.iﬁxit.com/Teardown/iPhone+6+
5 Teardown.
[36]
[37]
[38]
[39]
14
function motionHandler(event){
agx = event.accelerationIncludingGravity.x;
agy = event.accelerationIncludingGravity.y;
agz = event.accelerationIncludingGravity.z;
ai = event.interval;
rR = event.rotationRate;
if (rR != null) {
arAlpha = rR.alpha;
arBeta = rR.beta ;
arGamma = rR.gamma;
}
}
APPENDIX B
SCREENSHOT OF OUR DATA COLLECTION WEBPAGE
We provide screenshots (see Figure 17) of our data col-
lection website to give a better idea of how participants were
asked to participate.
Fig. 17: Screenshot of our data collection website.
[40]
the Samsung Galaxy S4.
Inside
technical-competitive-analysis/resources/blog/inside-the-samsung-
galaxy-s4/.
4
https://www.iﬁxit.com/Teardown/Nexus+4+
http://www.chipworks.com/en/
Teardown.
[41] Nexus
Teardown/11781.
[42] Nexus
5
Teardown.
Teardown/19016.
https://www.iﬁxit.com/Teardown/Nexus+5+
[44]
[43] MEMS-based accelerometers. http://www.wikid.eu/index.php/MEMS-
based accelerometers.
J. Seeger, M. Lim, and S. Nasiri. Development of High-Performance
High-Volume consumer MEMS Gyroscope. http://www.invensense.
com/mems/gyro/documents/whitepapers/Development-of-High-
Performance-High-Volume-Consumer-MEMS-Gyroscopes.pdf.
[45] STMicroelectronics. Everything about STMicroelectronics 3-axis dig-
ital MEMS gyroscopes. http://www.st.com/web/en/resource/technical/
document/technical article/DM00034730.pdf.
[46] MEMS
gyroscopes.
http://www.ﬁndmems.com/wikimems-
learn/introduction-to-mems-gyroscopes.
[47] S. McKinley and M. Levine, “Cubic Spline Interpolation,” College of
the Redwoods, vol. 45, no. 1, pp. 1049–1060, 1998.
[48] A. Das, N. Borisov, and M. Caesar, “Exploring Ways To Mitigate
Sensor-Based Smartphone Fingerprinting,” CoRR, vol. abs/1503.01874,
2015. [Online]. Available: http://arxiv.org/abs/1503.01874
[49] Supervised Learning (Machine Learning) Workﬂow and Algorithms.
http://www.mathworks.com/help/stats/supervised-learning-machine-
learning-workﬂow-and-algorithms.html.
[50] M. Sokolova and G. Lapalme, “A systematic analysis of performance
measures for classiﬁcation tasks,” Information Processing and Manage-
ment, vol. 45, no. 4, pp. 427–437, 2009.
[51] Percentage of all global web pages
served to mobile phones.
http://www.statista.com/statistics/241462/global-mobile-phone-
website-trafﬁc-share/.
[52] Top Mobile Browsers from Jan 2014 toJan 2015. http://gs.statcounter.
com/#mobile browser-ww-monthly-201401-201501.
[53] Browser Trends September 2014: Chrome Is the Top Mobile Browser.
http://www.sitepoint.com/browser-trends-september-2014-chrome-top-
mobile-browser/.
[54] Android Sensors Overview. http://developer.android.com/guide/topics/
sensors/sensors overview.html.
[55] Corona SDK API
reference. http://docs.coronalabs.com/api/library/
system/setAccelerometerInterval.html.
[56] MIRtoolbox. https://www.jyu.ﬁ/hum/laitokset/musiikki/en/research/coe/
materials/mirtoolbox.
[57] LibXtract Documentation. http://libxtract.sourceforge.net/.
[58] A. Pocock and G. Brown, “FEAST,” 2014, http://mloss.org/software/
view/386/.
[59] G. Brown, A. Pocock, M.-J. Zhao, and M. Luj´an, “Conditional Likeli-
hood Maximisation: A Unifying Framework for Information Theoretic
Feature Selection,” Machine Learning Research, vol. 13, pp. 27–66,
2012.
[60] Wearables vs. Smartphone Apps: Which Are Better
to Count
Steps? http://www.livescience.com/49756-smartphone-apps-wearables-
step-counts.html.
[61] C. Dwork, “Differential Privacy,” in Proceedings of the 33rd Interna-
tional Colloquium on Automata, Languages and Programming (ICALP).
Springer Verlag, 2006, pp. 1–12.
ACCESSING MOTION SENSORS FROM BROWSER
APPENDIX A
To access motion sensors the DeviceMotion class needs to
be initialized. A sample JavaScript snippet is given below:
if(window.DeviceMotionEvent!=undefined){
window.addEventListener(’devicemotion’,
motionHandler);
window.ondevicemotion = motionHandler;
}
15