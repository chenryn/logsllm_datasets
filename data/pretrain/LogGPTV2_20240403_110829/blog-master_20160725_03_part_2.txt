2016-06-17T14:55:02.588-0700 creating table customer_transaction_Notes        
2016-06-17T14:55:02.597-0700 creating table customer_transaction_SiteVa        
2016-06-17T14:55:02.606-0700 creating table customer_transaction_URL        
2016-06-17T14:55:02.614-0700 creating table customer_transaction_active        
# to look at the tables in the BI schema, run below stmt.        
```        
检查已导入的外部表          
```        
[root@mongobihost]# mongobischema list biuser        
Enter password:        
employee        
customer_transaction        
customer_transaction_Notes        
customer_transaction_SiteVa        
customer_transaction_URL         
customer_transaction_active        
```        
如何重启PostgreSQL，也可直接使用pg_ctl。          
```        
If you need to restart the BI Connector, then        
sudo service postgresql-9.4 stop        
sudo service postgresql-9.4 start        
or         
pg_ctl restart -m fast -D /var/lib/pgsql/9.4/data        
```        
列出bi用户，也可以直接用PostgreSQL中的SQL或视图查看          
```        
# mongobiuser list        
```        
检查连接PostgreSQL是否正常          
```        
to check if things are okay on postgre Sql..        
 psql -h localhost -p 27032 -U biuser        
Password for user biuser:         
psql (9.4.5 MongoDB BI Connector 1.1.3)        
SSL connection (protocol: TLSv1.2, cipher: ECDHE-RSA-AES256-GCM-SHA384, bits: 256, compression: off)        
Type "help" for help.        
biuser=> \d        
                                                List of relations        
 Schema |                                     Name                                      |     Type      | Owner          
--------+-------------------------------------------------------------------------------+---------------+--------        
 public | customer_transaction                                                            | view          | biuser        
 public | customer_transaction_Notes                                                        | foreign table | biuser        
 public | customer_transaction_SiteVa                                               | view          | biuser        
biuser=> select * from "customer_transaction" limit 1;        
```        
现在你可以用BI软件连接PostgreSQL来分析存储在mongoDB的数据了  。          
## 小结        
* 其实创建fdw没有这么麻烦，几条SQL语句就搞定了。  mongodb只是出于mongodb用户可能不熟悉PostgreSQL的考虑，把操作都封装成了命令，便于mongodb的用户使用。            
* 如果用户未来又新增了需要分析的collection，使用导出和导入的步骤即可。            
* PostgreSQL作为mongodb bi connector的作用是扩充mongoDB的SQL功能，并不存储数据，数据都是在mongoDB中的。  如果涉及到比较复杂的运算无法下推到mongodb，则会将数据提取到PostgreSQL本地进行运算（过程自动，对用户透明）。但是如果数据量非常庞大（例如每次分析都超过百GB需要提取）会被数据在网络传输的时间拖累。              
* 如果数据量很庞大，建议还是讲mongoDB的数据导出到PostgreSQL或者Greenplum，直接在PostgreSQL或Greenplum中分析。效率会更高。            
* Greenplum 是基于PostgreSQL的一个MPP OLAP产品，在OLAP领域有着非常好的口碑，国内外的用户群也非常多。          
* 用户群覆盖了互联网，金融、物流、政府部门等各大行业，最大的集群规模有超过1000 segment的。          
20TB ~ 1PB 纯OLAP场景 Greenplum 会是更好的选择。            
* 如何将mongoDB的数据导入PostgreSQL或Greenplum , 参考 https://yq.aliyun.com/articles/31632 , 或者直接使用SQL导入.   create table local_table(表结构); insert into local_table select * from 外部表;          
## 参考        
* http://rajkiran-dba.blogspot.com/2016/06/how-to-setup-mongodb-connector-for-bi.html        
* https://docs.mongodb.com/bi-connector/        
* http://multicorn.org/        
* https://yq.aliyun.com/articles/31632        
## 扩展阅读          
* 《当物流调度遇见PostgreSQL - GIS, routing, 机器学习 (狮子,女巫,魔衣橱)》            
https://yq.aliyun.com/articles/57857            
* 《PostgreSQL 如何轻松搞定行驶、运动轨迹合并和切分》            
https://yq.aliyun.com/articles/54445            
* 《PostgreSQL 百亿数据量地理位置数据 近邻查询性能》            
https://yq.aliyun.com/articles/2999            
* 《利用OpenStreetMap（OSM）数据搭建一个地图服务》             
https://yq.aliyun.com/articles/16907              
* 《PostgreSQL 百亿数据 秒级响应 正则及模糊查询》             
https://yq.aliyun.com/articles/7444            
* 《ApsaraDB for Greenplum 云数据仓库》          
https://yq.aliyun.com/articles/57604            
* 《Greenplum 数据分布黄金法则 - 论分布列与分区的选择》           
https://yq.aliyun.com/articles/57822              
* 《阿里云ApsaraDB RDS用户 - OLAP最佳实践》            
https://yq.aliyun.com/articles/57778             
* 《Greenplum 资源隔离的原理与源码分析》             
https://yq.aliyun.com/articles/57763            
* 《三张图读懂Greenplum在企业的正确使用姿势 》            
https://yq.aliyun.com/articles/57736            
祝大家玩得开心，欢迎随时来 **阿里云促膝长谈** 业务需求 ，恭候光临。          
阿里云的小伙伴们加油，努力做 **最贴地气的云数据库** 。          
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")