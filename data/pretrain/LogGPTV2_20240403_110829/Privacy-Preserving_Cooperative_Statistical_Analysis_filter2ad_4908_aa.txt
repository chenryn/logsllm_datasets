title:Privacy-Preserving Cooperative Statistical Analysis
author:Wenliang Du and
Mikhail J. Atallah
Privacy-Preserving Cooperative Statistical Analysis 
Department of Electrical Engineering and Computer Science
Wenliang Du
Syracuse University, 121 Link Hall
Syracuse, IN 13244
Email: PI:EMAIL
Mikhail J. Atallah
Department of Computer Sciences and
Center for Education and Research in Information Assurance and Security
Purdue University, 1315 Recitation Building
West Lafayette, IN 47907
Email: PI:EMAIL
Abstract
1 Introduction
The growth of the Internet opens up tremendous oppor-
tunities for cooperative computation, where the answer de-
pends on the private inputs of separate entities. Sometimes
these computations may occur between mutually untrusting
entities. The problem is trivial if the context allows the con-
duct of these computations by a trusted entity that would
know the inputs from all the participants; however if the
context disallows this then the techniques of secure multi-
party computation become very relevant and can provide
useful solutions.
Statistic analysis is a widely used computation in real
life, but the known methods usually require one to know the
whole data set; little work has been conducted to investigate
how statistical analysis could be performed in a cooperative
environment, where the participants want to conduct sta-
tistical analysis on the joint data set, but each participant
is concerned about the conﬁdentiality of its own data. In
this paper we have developed protocols for conducting the
statistic analysis in such kind of cooperative environment
based on a data perturbation technique and cryptography
primitives,
Portions of this work were supported by Grant EIA-9903545 from the
National Science Foundation, and by sponsors of the Center for Education
and Research in Information Assurance and Security.
The growth of the Internet opens up tremendous oppor-
tunities for cooperative computation, where the answer de-
pends on the private inputs of separate entities. Sometimes
these computations may occur between mutually untrusting
entities. The problem is trivial if the context allows the con-
duct of these computations by a trusted entity that would
know the inputs from all the participants; however if the
context disallows this then the techniques of secure multi-
party computation become very relevant and can provide
useful solutions.
In this paper we investigate how various statistical analy-
sis problems could be solved in a cooperative environment,
where two parties need to conduct statistical analysis on the
joint data set. We call the new problems secure two-party
statistical analysis problems.
Basic statistic analysis operations consist of computing
the mean value of a data set, the standard deviation, the cor-
relation coefﬁcient between two different features, the re-
gression line and so on. If one knows the full data set, one
can use the standard equations described in most of the fun-
damental statistics books to conduct the analysis. However,
in the cooperative environment, one might need to conduct
statistical analysis without being able to know the full data
set because of the privacy constraints. The following exam-
ples illustrate this kind of situation:
(cid:2) A school wants to investigate the relationship between
people’s intelligence quotient (IQ) scores and their an-
nual salaries. The school has its students’ IQ scores,
but does not have students’ salary information; there-
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:10:40 UTC from IEEE Xplore.  Restrictions apply. 
fore the school needs to cooperate with companies that
hire the students, but those companies are not willing
to disclose the salary information. On the other hand,
the school cannot give students’ IQ scores to their em-
ployers either.
(cid:2) Two retail companies (cid:1) and (cid:2) each have a data set
about their own customers’ buying behaviors. Both
companies want to conduct statistical analysis on their
joint data set for mutual beneﬁt. Since these two com-
panies are competitors in the market, they do not want
to disclose the detailed customers’ information to the
other company, but they feel comfortable disclosing
only the aggregate information.
The standard statistical analysis methods cannot easily
extend to solve the above problems; we need methods that
support statistical analysis in a privacy-preserving manner.
The goal of this paper is to develop protocols for this type
of cooperative statistical analysis.
There are two common ways of cooperation in practice.
For example, suppose (cid:3) and (cid:4) are two different features
of a sample, and they are both used for a statistical analysis.
In a cooperative environment, sometimes both cooperating
parties can observe both (cid:3) and (cid:4) features of the sample,
while at some other time, one party can only observe (cid:3)
feature of the sample, and the other party can only observe
(cid:4) feature of the same sample. The difﬁculties of coop-
eration in these situations are different. Therefore, based
on whether the two cooperating parties could observe the
same features of a sample or not, we formalized two differ-
ent models for the secure two-party statistical analysis: the
heterogeneous model and the homogeneous model. As we
will show later, the solutions to these two different models
are very different.
To conduct the statistical analysis in a cooperative envi-
ronment, data exchange between the two parties is needed.
However, to preserve the privacy of the data, no party
should send its data to the other party in plain. In our solu-
tion, we use a data perturbation technique, namely we add
random numbers to the original data to disguise the original
data. Conducting statistical analysis based on the perturbed
data surely produces a perturbed and therefore wrong result.
In this paper we have demonstrated various ways to remove,
without compromising the privacy, the perturbation from
the result to produce a correct result. Our techniques are
based on several cryptography primitives, such as 1-out-of-
n Oblivious Transfer protocol and homomorphic encryption
schemes.
Most of the statistical analysis computation investigated
in this paper involve scalar product of two private vectors,
each of which comes from a different party; therefore, we
have studied the private scalar product problem indepen-
dently, and use the solution to build the protocols for the
In addition to being used in
statistical analysis problem.
this paper, the private scalar product protocol could also be
used to solve many other secure two-party problems, such
as secure two-party computational geometry problems dis-
cussed in [9]. We will discuss the private scalar product
problem independently in the paper.
In this preliminary study, we assume that all parties are
semi-honest; informally speaking, a semi-honest party is
one who follows the protocol properly with the exception
that it keeps a record of all its intermediate computations
and might try to derive other parties’ private inputs from
the record. This semi-honest model is one of the widely
adopted models in the studies of general secure multi-party
computation problem.
Section 2 describes related work and some cryptography
primitives will be used in this paper. Section 3 presents an
important building block, the scalar product protocol, which
will be used later to solve secure two-party statistical anal-
ysis problems. Section 4 presents the deﬁnitions of secure
two-party statistical analysis problems and their solutions.
Finally section 5 concludes this paper and proposes several
future research directions.
2 Related Work
Secure Multi-Party Computation
The secure two-party statistical analysis problems de-
scribed in the previous section are actually special cases
of the general Secure Multi-party Computation problem
[13, 6, 3]. Generally speaking, a secure multi-party com-
putation problem deals with computing a function on any
input, in a distributed network where each participant holds
one of the inputs, ensuring that no more information is re-
vealed to a participant in the computation than can be com-
puted from that participant’s input and output. The history
of the multi-party computation problem is extensive since
it was introduced by Yao [13] and extended by Goldreich,
Micali, and Wigderson [6], and by many others.
In theory, the general secure multi-party computation
problem is solvable using circuit evaluation protocol [13, 6,
3]. In the circuit evaluation protocol, each functionality (cid:5)
is represented as a Boolean circuit, and then the parties run
a protocol for every gate in the circuit. While this approach
is appealing in its generality, the communication complex-
ity of the protocol it generates depends on the size of the
circuit that expresses the functionality (cid:5) to be computed,
and in addition, involves large constant factors in their com-
plexity. Therefore, as Goldreich points out in [3], using the
solutions derived by these general results for special cases
of multi-party computation can be impractical; special so-
lutions should be developed for special cases for efﬁciency
reasons. This is our motivation of seeking special solutions
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:10:40 UTC from IEEE Xplore.  Restrictions apply. 
to statistical analysis problems, solutions that are more efﬁ-
cient than the general theoretical solutions.
(cid:1)-out-of- Oblivious Transfer
Goldreich’s circuit evaluation protocol uses the (cid:1)-out-of-
 Oblivious Transfer, and our protocols in this paper also
heavily depends on this protocol. An (cid:1)-out-of- Oblivi-
ous Transfer protocol [4, 2] refers to a protocol where at
the beginning of the protocol one party, Bob has  inputs
(cid:3)(cid:1)(cid:7) (cid:8) (cid:8) (cid:8) (cid:7) (cid:3) and at the end of the protocol the other party,
Alice, learns one of the inputs (cid:3)(cid:2) for some (cid:1) (cid:3) (cid:9) (cid:3)  of
her choice, without learning anything about the other inputs
and without allowing Bob to learn anything about (cid:9). An
efﬁcient (cid:1)-out-of- Oblivious Transfer protocol was pro-
posed in [10] by Naor and Pinkas. By combining this pro-
tocol with the scheme by Cachin, Micali and Stadler [5], the
(cid:1)-out-of- Oblivious Transfer protocol could be achieved
with polylogarithmic (in ) communication complexity.
Homomorphic Encryption Schemes
We need a public-key cryptosystems with a homomor-
phic property for some of our protocols: (cid:11) (cid:3)(cid:12)  (cid:11)(cid:3)(cid:13) (cid:4)
(cid:11)(cid:3)(cid:12)  (cid:13). Many such systems exist, and examples in-