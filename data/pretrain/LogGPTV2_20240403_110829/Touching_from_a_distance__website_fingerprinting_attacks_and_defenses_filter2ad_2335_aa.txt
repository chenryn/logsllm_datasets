title:Touching from a distance: website fingerprinting attacks and defenses
author:Xiang Cai and
Xin Cheng Zhang and
Brijesh Joshi and
Rob Johnson
Touching from a Distance: Website Fingerprinting Attacks
and Defenses
Xiang Cai
Stony Brook University
PI:EMAIL
Xin Cheng Zhang
Stony Brook University
PI:EMAIL
Brijesh Joshi
Stony Brook University
PI:EMAIL
Rob Johnson
Stony Brook University
PI:EMAIL
ABSTRACT
We present a novel web page ﬁngerprinting attack that is
able to defeat several recently proposed defenses against
traﬃc analysis attacks, including the application-level de-
fenses HTTPOS [15] and randomized pipelining over Tor [18].
Regardless of the defense scheme, our attack was able to
guess which of 100 web pages a victim was visiting at least
50% of the time and, with some defenses, over 90% of the
time. Our attack is based on a simple model of network
behavior and out-performs previously proposed ad hoc at-
tacks. We then build a web site ﬁngerprinting attack that
is able to identify whether a victim is visiting a particular
web site with over 90% accuracy in our experiments.
Our results strongly suggest that ad hoc defenses against
traﬃc analysis are not likely to succeed. Consequently, we
describe a defense scheme that provides provable security
properties, albeit with potentially higher overheads.
Categories and Subject Descriptors
C.2.0 [Computer-Communication Networks]: General—
Security and protection
Keywords
Anonymity, website ﬁngerprinting attacks
1.
INTRODUCTION
Web browsing privacy mechanisms, such as SSL, Tor, and
encrypting tunnels, hide the content of the data transferred,
but they do not obscure the size, direction, and timing of
packets transmitted between clients and remote servers. In a
web page ﬁngerprinting attack, an adversary attempts to use
this information to identify the web page a victim is visiting.
Previous research has shown that web page ﬁngerprinting
attacks are possible against many privacy services, including
IPSec tunnels, SSH tunnels, and Tor [21, 10, 17, 6, 13].
As a result, researchers have proposed several defenses,
primarily aimed at hiding packet size information. For ex-
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
CCS’12, October 16–18, 2012, Raleigh, North Carolina, USA.
Copyright 2012 ACM 978-1-4503-1651-4/12/10 ...$10.00.
Defense
None (SSH tunnel)
SSH + HTTPOS
SSH + Sample-based morphing
Tor
Tor + randomized pipelining
Tor + rand. pipe. + rand. traﬃc
Rate
91.6%
75.7%
92.1%
83.7%
87.3%
52.2%
Table 1: Success rate of our web page ﬁngerprinting
attack against each defense evaluated in this paper.
The success rate is the probability that the attack
was able to correctly guess which of 100 web pages
the victim was visiting.
ample, Tor packs all data into 512-byte cells. Other mecha-
nisms pad packets in a variety of ways (e.g. padding to 2k
bytes, or padding all packets to the MTU). Wright, et al.,
proposed traﬃc morphing, which pads and fragments pack-
ets so that the resulting distribution of packet sizes appears
to be from a diﬀerent web page [26]. Dyer, et al. showed
that all these schemes are broken [6].
Researchers have recently proposed defenses based on ma-
nipulating the sequence and structure of the HTTP requests
generated by the browser. HTTPOS, published at NDSS
2011, manipulates TCP MSS and window size parameters to
obscure packet sizes, but also includes several HTTP-speciﬁc
mechanisms [15]. For example, HTTPOS can split individ-
ual HTTP requests into multiple partial requests, can issue
extra HTTP requests as cover traﬃc, and can use pipelining
to execute requests concurrently, obscuring the exact order
of requests. Pipelining, which was originally introduced to
improve performance, allows web clients to issue subsequent
requests without waiting for the response from previous re-
quests. Similarly to HTTPOS, the Tor project has released a
version of Firefox that implements “randomized pipelining,”
in which the browser requests objects in a random order and
with random levels of pipelining [18].
In this paper, we demonstrate eﬀective attacks against
HTTPOS, randomized pipelining, and several other defenses.
Table 1 summarizes the results of our attack on each of de-
fense we evaluate. Our attack can determine, with a success
rate over 83%, which of 100 web page a victim is visiting via
Tor, even if the victim uses randomized pipelining. Against
SSH tunnels, our attack could determine which web page the
victim was visiting over 75% of the time, even if the victim
used HTTPOS or sample-based traﬃc morphing. We also
evaluated our attack against a simulated Tor implementa-
tion that used randomized pipelining, padded all packets to
605Defense
Attack
Our page ﬁngerprinting attack Tor
Ad hoc SVM [17]
Tor
Tor
Cosine Similarity [19]
Multinomial Naive-Bayes [10]
Tor
Our page ﬁngerprinting attack Tor + rand. pipe.
Ad hoc SVM [17]
Tor + rand. pipe.
Our page ﬁngerprinting attack None (SSH)
None (SSH)
Ad hoc SVM [17]
Multinomial Naive-Bayes [10]
None (SSH)
Database Size
100
100
20
100
100
100
100
100
100
Success Rate
83.7%
65.4%
50%
4.4%
87.3%
62.8%
91.6%
92.0%
81.9%
Table 2: The success rates of our attacks compared to relevant previous attacks. The results for the cosine
similarity classiﬁer are taken from Shi, et al [19]. All other results are computed using our implementations
on our data sets.
1500 bytes, and added random cover traﬃc. Even with a
1-to-1 ratio between cover traﬃc and real traﬃc, our attack
could identify the victim’s web page over 50% of the time.
Ours is the ﬁrst demonstration that application-level de-
fenses, such as HTTPOS and randomized pipelining, are
not secure. All previous attacks have only shown that de-
fenses based solely on packet padding and similar network-
level manipulations were not eﬀective. We also compare
our attack to several previously published attacks, as shown
in Table 2.
In 2009, Herrmann, et al., proposed a ﬁnger-
printing attack based on a Multinomial Naive-Bayes classi-
ﬁer [10], which, in our experiments is able to identify which
web page a victim visited (out of a set of 100 possible pages)
with a success rate of less than 5%. Our attack has over an
80% success rate under similar conditions. Shi, et al., pro-
posed a ﬁngerprinting attack based on cosine similarity in
2009 [19], but this method had a success rate of only 50%,
even when there were only 20 web pages to choose from.
In 2011, Panchenko, et al. published a classiﬁer using ad
hoc HTTP-speciﬁc features, but it only achieves a 65% suc-
cess rate on our data set [17]. Our attack also works well
against simple SSH-tunneled traﬃc, achieving a 92% success
rate, comparable to the rate achieved by Panchenko et al.’s
classiﬁer and the VNG++ classiﬁer of Dyer et al. [6].
Our attack has two novel components. First, we propose
a new method for computing the similarity of packet traces
generated when a browser loads a web page. Our attack con-
verts traces into strings and uses the Damerau-Levenshtein
distance to compare them. Packet ordering is useful for
identifying web pages because the order of incoming and out-
going packets reveals information about the size of objects
referenced in a page and the order in which the browser re-
quests them. Damerau-Levenshtein distance is a good met-
ric because it allows insertions, deletions, substitutions, and
transpositions, operations that correspond well with network
packet drops, retransmissions, and re-orderings, and with
slight changes in a page’s content, as may occur with pages
dynamically generated from a template.
We then use Hidden Markov Models to extend our web
page classiﬁer to a web site classiﬁer. An attacker can use
these models to determine if a sequence of a victim’s page
loads are all from the same web site. The HMM captures
the link structure of the site and the probable paths that
users will follow among the pages when visiting the site.
The HMM uses our novel page ﬁngerprinting technique to
classify the packet traces observed each time the user tran-
sitions from one page to another. The attacker can then use
the Forward algorithm to compute the probability that an
observed trace of packets was generated by a browser load-
ing pages from the target web site. Our site classiﬁer was
able to identify when a user visited a target web site via Tor
with over 90% accuracy in our experiments.
Our results strongly suggest that the ad hoc approach to
traﬃc analysis defenses taken so far, in which researchers
design defenses in response to new attacks, will not lead
to secure systems. We advocate that researchers adopt a
provable security approach to traﬃc analysis defense design.
As a ﬁrst step in this direction, we present an extension of
the BUFLO scheme proposed by Dyer et al. [6]. Our scheme
addresses practical, performance, and security shortcomings
of the original protocol. Our defense oﬀers provable secu-
rity properties, but may incur higher bandwidth or latency
overhead than previously-proposed defenses.
This paper makes the following contributions:
• We show that recently proposed application-level de-
fenses, such as HTTPOS and randomized pipelining,
are not secure.
• We present a new web page ﬁngerprinting attack that
signiﬁcantly outperforms other proposed attacks on
these and other defenses. Our attack can determine
which web page, out of 100 possibilities, a victim is
visiting with over 80% success rate.
• We present a novel web site ﬁngerprinting attack that
can identify, with over 90% accuracy, when a victim is
visiting a particular web site.
• We propose a traﬃc analysis defense with provable se-
curity properties.
2. RELATED WORK
Researchers have studied attacks on anonymity systems
from a variety of angles: active attacks that require subvert-
ing nodes in the anonymity network, active attacks that re-
quire injecting traﬃc into the network, and attacks based on
subverting web servers visited by anonymous users. Some of
these attacks focus on discovering the identity of the anony-
mous network user, others focus on discovering the servers
they interact with, and others attempt to uncover the vic-
tim’s route through the anonymizing network.
Web page ﬁngerprinting attacks are an important class
of attacks because they are a good match for the attacker
scenario faced by many Tor users today: they use Tor to
606evade censorship and persecution by a government or ISP
that wants to know their browsing habits and has the abil-