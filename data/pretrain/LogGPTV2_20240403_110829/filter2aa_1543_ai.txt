connectivity features of VPC:
Hosting a public-facing website
Hosting multi-tier web applications
Creating branch office and business unit networks
Hosting web applications in AWS cloud that are connected with your data center
Extending corporate network on the cloud
Disaster recovery
AWS provides multiple measures to secure resources in VPC and monitor activities in VPC,
such as security groups, network access control list (ACL), and VPC flow logs. We will dive
deep into each of these measures.
Next, we'll walk through the process of creating a VPC. You can either choose to create a
VPC through the wizard, through the console, or through the CLI.
Furthermore, we'll go through the following VPC connectivity options along with VPC
limits in detail:
Network to AWS VPC
AWS VPC to AWS VPC
Internal user to AWS VPC
We'll wrap up this chapter with VPC best practices.
Throughout this chapter, we'll take a look at AWS architecture diagrams for various use
cases, connectivity options, and features. The objective of this chapter is to familiarize you
with AWS VPC and let you know about ways to secure your VPC.
AWS Virtual Private Cloud
[ 76 ]
VPC components
AWS VPC is a logically separated network isolated from other networks. It lets you set your
own IP address range and configure security settings and routing for all your traffic. AWS
VPC is made up of several networking components, as shown in the following figure; some
of them are as follows:
Subnets
Elastic network interfaces
Route tables
Internet gateways
Elastic IP addresses
VPC endpoints
NAT
VPC peering
Figure 1 - AWS VPC components
AWS Virtual Private Cloud
[ 77 ]
Let's take a closer look at these components:
Subnets
A VPC spans an AWS region. A region contains two or more availability zones. A VPC
contains subnets that are used to logically separate resources inside a region. A subnet
cannot span across multiple availability zones. A subnet can either be a private subnet or a
public subnet based on its accessibility from outside of VPC and if it can access resources
outside of VPC.
Subnets are used for separating resources, such as web servers and database servers. They
are also used for making your application highly available and fault-tolerant. By default, all
resources in all subnets of a VPC can route (communicate) to each other using private IP
addresses.
Elastic Network Interfaces (ENI)
The ENI are available for EC2 instances running inside a VPC. An ENI can have many
attributes, such as a primary private IPv4 address, a MAC address, one or more security
groups, one or more IPv6 addresses, and so on. These attributes will move with ENI when
an ENI is attached to an instance; when this ENI is detached from an instance, these
attributes will be removed.
By default, every VPC has a network interface attached to every instance. This ENI is
known as a primary network interface (eth0). This default ENI cannot be detached from an
instance. You can, however, create and attach many additional ENIs to your instances
inside a VPC.
One of the popular use cases of ENI is having secondary ENI attached to instances running
network and security appliances, such as network address translation servers or load
balancers. These ENIs can be configured with their own attributes, such as public and
private IP address, security groups, and so on.
AWS Virtual Private Cloud
[ 78 ]
Route tables
As you've learned about VPC, it essentially facilitates traffic in and out of a software-
defined network. This traffic needs to know where to go, and this is achieved via route
tables. A route table in VPC has rules or routes defined for the flow of traffic. Every VPC
has a default route table that is known as the main route table. You can modify this main
route table and you can create additional route tables.
Each subnet in VPC is associated with only one route table, however, one route table can be
attached to multiple subnets. You use route tables to decide what data stays inside of VPC
and what data should go outside of VPC, and that is where it plays a very important part in
deciding data flow for a VPC.
In the following figure, you can see four route tables for two VPCs in my AWS account. You
can see rules in the route table, and you see tabs for subnet associations as well:
Figure 2 - AWS VPC route tables
Internet Gateway
An internet gateway allows communication between resources such as EC2 and RDS
instances in your VPC and the Internet. It is highly available, redundant, and horizontally
scalable; that is, you do not need to attach more than one internet gateway to your VPC in
order to support an increase in traffic.
AWS Virtual Private Cloud
[ 79 ]
An internet gateway serves as a target for route table in VPC for all the traffic that is
supposed to go out of VPC to the internet. Along with that, it also performs network
address translation for all instances with public IPv4 addresses.
Elastic IP addresses
An Elastic IP Address is a public IPv4, static address that can be associated with any one
instance or one network interface at a time within any VPC in your AWS account. When
your application is dependent on an IP address, you would use an Elastic IP address
instead of a regular public IP address because public IP addresses would be lost if the
underlying instance shuts down for some reason. You can simply move your Elastic IP
address to another instance that is up and running from a failed instance.
You first allocate an Elastic IP address and then associate it with your instance or network
interface. Once you do not need it, you should disassociate it and then release it. If an
Elastic IP address is allocated but not associated with any instance, then you will be charged
by AWS on an hourly basis, so if you don't have a requirement for Elastic IP addresses, it is
better to release them.
VPC endpoints
A VPC endpoints is a secure way to communicate with other AWS services without using
the internet, Direct Connect, VPN Connection, or a NAT device. This communication
happens within the Amazon network internally so your traffic never goes out of Amazon
network. At present, endpoints are supported only for Simple Storage Service (S3). These
endpoints are virtual devices supporting IPv4-only traffic.
An endpoint uses the private IP address of instances in your VPC to communicate with
other services. You can have more than one endpoint in your VPC. You create a route in
your route table for directing traffic from instance V2 in subnet 2 through your endpoint to
your target service (such as S3), as shown in the following figure:
AWS Virtual Private Cloud
[ 80 ]
Figure 3 - AWS VPC endpoints
Network Address Translation (NAT)
You will often have resources in your VPC that will reside in private subnets that are not
accessible from the internet. However, these resources will need to access the internet
occasionally for patch update, software upgrade, and so on. A NAT device is used exactly
for this purpose, allowing resources in private subnet to connect with either the internet or
other AWS services securely. NAT devices support only IPv4 traffic.
AWS offers a NAT gateway, a managed device, and a NAT instance as NAT devices.
Depending on your use case, you will choose either of them. AWS recommends a NAT
gateway over a NAT instance as it is a managed service that requires little or no
administration, is highly available, and highly scalable.
AWS Virtual Private Cloud
[ 81 ]
VPC peering
You can connect your VPC with one or more VPCs in the same region through the VPCs
peering option. This connection enables you to communicate with other VPC using private
IPv4 or private IPv6 addresses. Since this is a networking connection, instances in these
VPCs can communicate with each other as if they are in the same network.
You can peer with VPCs in your AWS account or VPCs in other AWS accounts as well.
Transitive peering is not allowed and VPCs should not have overlapping or matching IPv4
or IPv6 CIDR blocks. The following figure shows VPC peering between VPC A and VPC B.
Note that the CIDR blocks differ for these two VPCs:
Figure 4 - AWS VPC peering
VPC features and benefits
AWS VPC offers many features and benefits to secure your resources in your own virtual
network on the cloud. You can scale your resources and select resources as per your
requirement in VPC just like you do in AWS, with the same level of reliability and
additional security. Let's look at these features and benefits.
AWS Virtual Private Cloud
[ 82 ]
Multiple connectivity options
Your AWS VPC can be connected to a variety of resources, such as the internet, your on-
premise data center, other VPCs in your AWS account, or VPCs in other AWS accounts;
once connected, you can make your resources accessible or inaccessible in your VPC from
outside of your VPC based on your requirement.
You can allow your instances in your VPC to connect with the internet directly by
launching them in a subnet that is publicly accessible, also known as a public subnet. This
way, your instances can send and receive traffic from the internet directly.
For instances in private subnets that are not publicly accessible, you can use a NAT device
placed in a public subnet to access the internet without exposing their private IP address.
You can connect your VPC to your corporate data center by creating a secure VPN tunnel
using encrypted IPsec hardware VPN connection. Once connected, all traffic between
instances in your VPC and your corporate data center will be secured via this industry
standard hardware VPN connection.
You can connect your VPC with other VPCs privately in the same region through the VPC
peering feature. This way, you can share resources in your VPC with other virtual networks
across your AWS accounts or other AWS accounts.
The VPC endpoint is used to connect to AWS services such as S3 without using internet
gateway or NAT. You can also configure what users or resources are allowed to connect to
these AWS services.
You can mix and match the mentioned options to support your business or application
requirements. For example, you can connect VPC to your corporate data center using a
hardware VPN connection, and you can allow instances in your public subnet to connect
directly with the internet as well. You can configure route tables in your VPC to direct all
traffic to its appropriate destination.
Secure
AWS VPC has security groups that act as an instance-level firewall and network ACLS that
act as a subnet-level firewall. These advanced security features allow you to configure rules
for incoming and outgoing traffic for your instances and subnets in your VPC.
AWS Virtual Private Cloud
[ 83 ]
With help of the VPC endpoint, you can enable access control for your data in AWS S3 so
that only instances in your VPC can access that data. You can also launch dedicated
instances to have isolation at the instance level; these instances have dedicated hardware for
a single customer.
Simple
AWS VPC can be created using AWS Management Console in a couple of ways; you can
either create it through Start VPC Wizard, or you can create it manually as well. You can
also create VPC from AWS command-line interface.
VPC wizard gives you multiple options to create VPC, as shown in the following figure;
you can pick one that suits your requirements and customize it later if needed. When you
create a VPC using VPC wizard, all components of VPC, such as security groups, route
tables, subnets and so on, are automatically created by VPC wizard:
Figure 5 - AWS VPC wizard
VPC use cases
With VPC, you can control inbound and outbound access for your resources in your own
virtual private network and connect your data center with AWS cloud securely along with
other VPCs in your AWS accounts and VPCs in other AWS accounts. You can also securely
access data on S3 from your resources in VPC without using the internet.
AWS Virtual Private Cloud
[ 84 ]
All these along with many other features make VPC a preferred choice for a variety of use
cases, such as hosting development and testing environments in AWS VPC. You could also
use VPC for creating environments for Proof of Concept (PoC). These environments can be
created on short notice and could act as an isolated network accessible only by specific
teams or other resources. Since VPC is a software-defined network, it brings loads of
flexibility in designing, integrating, and securing your resources in AWS cloud.
Let's look at some of the most popular use cases for VPC.
Hosting a public facing website
You can host a public facing website, which could be a blog, a single tier simple web
application, or just a simple website using VPC. You can create a public subnet using the
VPC wizard and select the VPC with a single public subnet only option, or you can create
it manually. Secure your website using instance-level firewalls, known as security groups,
allowing inbound traffic, either HTTP or HTTPS, from the internet and restricting outbound
traffic to the internet when required at the same time.
Hosting multi-tier web application
Hosting a multi-tier web application requires stricter access control and more restrictions
for communication between your servers for layers, such as web servers, app servers, and
database servers. VPC is an ideal solution for such web applications as it has all
functionalities built in.
In the following figure, there is one public subnet that contains the web server and the
application server. These two instances need to have inbound and outbound access for
internet traffic. This public subnet also has one NAT instance that is used to route traffic for
database instance in the private subnet.
AWS Virtual Private Cloud
[ 85 ]
The private subnet holds instances that do not need to have access to the internet. They only
need to communicate with instances in the public subnet. When an instance in the private
subnet needs to access the internet for downloading patches or software update, it will do
that via a NAT instance placed in the public subnet:
Figure 6 - AWS VPC for a multi-tier web application
Access control for this sort of architecture is configured using network ACLs that act as a
firewall for subnets. You will also use security groups for configuring access at the instance
level, allowing inbound and outbound access.
The VPC wizard gives you an option, VPC with Public and Private Subnets, to support
this use case; alternatively, you can create a VPC using AWS console manually or through a
command-line interface.
AWS Virtual Private Cloud
[ 86 ]
Creating branch office and business unit
networks
Quite often, there is a requirement for connecting branch offices with their own,
interconnected networks. This requirement can be fulfilled by provisioning instances within
a VPC with a separate subnet for different branch offices. All resources within a VPC can
communicate with each other through a private IP address by default, so all offices will be
connected to each other and will also have their own local network within their own subnet.
If you need to limit communication across subnets for some instances, you can use security
groups to configure access for such instances. These rules and designs can be applied to
applications that are used by multiple offices within an organization. These common
applications can be deployed within a VPC in a public subnet and can be configured so that
they are accessible only from branch offices within an organization by configuring NACLs
that acts as a firewall for subnets.
The following figure shows an example of using VPC for connecting multiple branch offices
with their own local networks:
Figure 7 - AWS VPC for connecting branch oﬃces
AWS Virtual Private Cloud
[ 87 ]
Hosting web applications in the AWS Cloud that
are connected with your data center
Through VPC, you can also support scenarios where instances in one subnet allow inbound
and outbound access to the internet and instances in other subnet can communicate
exclusively with resources in your corporate data center. You will secure these
communications by creating an IPsec hardware VPN connection between your VPC and
your corporate network.
In this scenario, you can host your web applications in the AWS cloud in VPC and you can
sync data with databases in your corporate data center through the VPN tunnel securely.
You can create a VPC for this use case using the VPC wizard and selecting VPC with Public
and Private Subnets and Hardware VPN Access. You can also create a VPC manually
through the AWS console or through the CLI.
Extending corporate network in AWS Cloud
This use case is specifically useful if you have a consistent requirement for provisioning
additional resources, such as compute, storage, or database capacity to your existing
infrastructure based on your workload.
This use case is also applicable to all those data centers that have reached their peak
capacity and don't have room to extend further.
You can extend your corporate networking resources in the AWS cloud and take all benefits
of cloud computing such as elasticity, pay-as-you-go model, security, high availability,
minimal or no capex, and instant provisioning of resources by connecting your VPC with
your corporate network.
You can host your VPC behind the firewall of your corporate network and ensure you
move your resources to the cloud without impacting user experience or the performance of
your applications. You can keep your corporate network as is and scale your resources up
or down in the AWS cloud based on your requirements.
You can define your own IP address range while creating an AWS VPC, so extending your
network into a VPC is similar to extending your existing corporate network in your physical
data center.
AWS Virtual Private Cloud
[ 88 ]
To support this use case, you can create a VPC by opting for the VPC with a Private Subnet
Only and Hardware VPN Access option in the VPC wizard or create a VPC manually. You
can either connect your VPC to your data center using hardware VPN or through AWS
direct connect service. The following figure shows an example of a data center extended in
AWS cloud through VPC using an existing internet connection. It uses a hardware VPN
connection for connecting the data center with AWS VPC:
Figure 8 - AWS VPC extend corporate data center
Disaster recovery
As part of your disaster recovery (DR) and business continuity plan, you will need to
continuously back up your critical data to your DR site. You can use a VPC to host EC2
instances with EBS volumes and store data in S3 buckets as well as in EBS volumes attached
to EC2 instances securely, which can be configured to be accessible only from your network.
As part of your business continuity plan, you might want to run a small set of EC2 instances
in your VPC, and these EC2 instances could be scaled quickly to meet the demand of a
production workload in the event of a disaster. When the disaster is over, you could
replicate data back to your data center and use servers in the data center to run your
workload. Post that, you can terminate additionally provisioned resources, such as EC2
instances and RDS instances in AWS VPC.
AWS Virtual Private Cloud
[ 89 ]
You can plan your disaster recovery and business continuity with AWS VPC at a fraction of
the cost of a traditional co-location site using physical data center. Moreover, you can
automate your disaster recovery and business continuity plan using the AWS
CloudFormation service; this automation will drastically reduce your deployment and
provisioning time in AWS VPC when compared with a traditional physical data center.
VPC security
AWS VPC essentially carries out the task of moving IP traffic (packets) into, out of, and
across AWS regions; so, the first line of defense for a VPC is to secure what traffic can enter
and leave your VPC. All resources can communicate with each other within a VPC unless
explicitly configured not to do that, so this leaves us primarily with securing
communication outside of your VPC with resources inside your VPC and vice versa.
AWS VPC provides multiple features for securing your VPC and securing resources inside
your VPC, such as security groups, network ACL, VPC Flow Logs, and controlling access
for VPC. These features act as additional layers of defense while designing your VPC
architecture and are used to increase security and monitor your VPC. Apart from these
features, you have a routing layer available in the form of route tables.
These features enable us to implement a layered defense for an in-depth security
architecture for AWS VPC that involves all layers in a network. These security features also
align security controls with the application requirement of scalability, availability, and
performance.
Let's look at these security features in detail.
Security groups
A security group is a virtual firewall to control ingress and egress traffic at the instance
level for all instances in your VPC. Each VPC has its own default security group. When you
launch an instance without assigning a security group, AWS will assign a default security
group of VPC with this instance. Each instance can be assigned up to five security groups.
For a security group, in order to control ingress and egress traffic, we need to define rules
for a security group. These rules need to be defined separately for controlling ingress and
egress traffic. These rules are only permissive; that is, there can only be allow rules and
there can't be deny rules.
AWS Virtual Private Cloud
[ 90 ]
When you create a new security group, by default, it does not allow any inbound traffic.
You have to create a rule that allows inbound traffic. By default, a security group has a rule
that allows all outbound traffic. Security groups are stateless, so if you create a rule for