Therewere 9 unuseditempointers.
0 pagesare entirelyempty.
CPU0.00s/-1.99usec elapsed0.00 sec.
INFO: analyzing"pg_catalog.pg_depend"
INFO: "pg_depend":25 pages,3000rows sampled,3625 estimatedtotalrows
VACUUM
39/61
ANALYZE
starelid |16416
staattnum |4
stanullfrac|0
stawidth |22
stadistinct|-0.4244
stakind1 |1
stakind2 |2
stakind3 |3
stakind4 |0
staop1 |98
staop2 |664
staop3 |664
staop4 |0
stanumbers1|{0.146658,0.027904,0.0246593,0.0233615,0.0227125,0.0227125,0.0227125,0.0149254,0.01427
64,0.0123297}
stanumbers2|
stanumbers3|{-0.145569}
stanumbers4|
stavalues1 |{I/O,equal,"notequal",less-than,greater-than,greater-than-or-equal,less-than-or-equal
,subtract,multiply,add}
stavalues2 |{"(Block, offset),physicallocationof tuple","absolutevalue","btreeless-equal-grea
ter","convertint2 to float4","deparsean encodedexpression","formatint8 totext","is opclassvisi
blein searchpath?","matchesLIKEexpression","printtypenames ofoidvectorfield",sine,"˜18digit
integer,8-bytestorage"}
stavalues3 |
stavalues4 |
40/61
EXPLAIN
test=> EXPLAIN SELECT name FROM customer;
NOTICE: QUERY PLAN:
Seq Scan on customer (cost=0.00..225.88 rows=12288 width=34)
EXPLAIN
VACUUM
41/61
EXPLAIN ANALYZE
test=>EXPLAINANALYZE SELECTnameFROM customer;
NOTICE: QUERYPLAN:
SeqScan on customer(cost=0.00..225.88rows=12288width=34)(actualtime=0.21..205.20rows=12288loops=1)
Totalruntime:249.10 msec
EXPLAIN
42/61
EXPLAIN USING ANSI JOINS
test=>EXPLAININSERT INTOwarehouse_tmp
test->(uri, expression,n, relevance,spid_measure,size,title, sample)
test->SELECTd.uri, dn.expression,n.n, dn.relevance,d.spid_measure,
test-> d.size, d.title,dn.sample
test->FROM documentas d
test-> INNERJOIN (document_n_gramAS dn
test(> INNER JOINn_gram ASn
test(> ON (dn.expression=n.expression))
test-> ON (d.uri= dn.uri)
test->ORDER BYdn.expression,n.n;
NOTICE: QUERYPLAN:
SubqueryScan*SELECT* (cost=3895109.07..3895109.07rows=1009271width=886)
-> Sort (cost=3895109.07..3895109.07rows=1009271width=886)
-> HashJoin (cost=1155071.81..2115045.12rows=1009271width=886)
-> Merge Join (cost=1154294.92..1170599.85rows=1009271width=588)
-> Sort (cost=1001390.67..1001390.67rows=1009271width=439)
-> Seq Scanon document_n_gramdn
(cost=0.00..49251.71rows=1009271width=439)
-> Sort (cost=152904.25..152904.25rows=466345width=149)
-> Seq Scanon n_gramn (cost=0.00..12795.45rows=466345width=149)
-> Hash (cost=767.71..767.71rows=3671width=298)
-> SeqScan ondocument d (cost=0.00..767.71rows=3671width=298)
EXPLAIN
43/61
Explain Using Subselect In FROM Clause
test=>EXPLAINSELECT cs.entity_idas region,r.name, cs.status,count(*)
test->FROM regionr innerjoin
test-> (SELECTDISTINCTfindregion(entity_id)AS entity_id,status
test(> FROMcurrent_status
test(> ORDERBY 1
test(> )AS cs on r.region_id= cs.entity_id
test->GROUP BYregion, r.name,cs.status;
NOTICE: QUERYPLAN:
Aggregate (cost=13688.40..14338.40rows=6500width=24)
-> Group (cost=13688.40..14175.90rows=65000width=24)
-> Sort (cost=13688.40..13688.40rows=65000width=24)
-> Merge Join (cost=7522.19..7674.94rows=65000width=24)
-> IndexScan usingregion_pkeyon regionr
(cost=0.0059.00rows=1000width=16)
-> Sort (cost=7522.19..7522.19rows=6500width=8)
-> SubqueryScan cs (cost=6785.54..7110.54
rows=65width=8)
-> Unique (cost=6785.54..7110.54rows=6500
with=8)
-> Sort (cost=6785.54..6785.54rows=650
width=8)
-> SeqScan on current_status
(st=0.00..1065.00rows=65000width=8)
EXPLAIN
44/61
Postgresql.conf Optimizer Parameters
# - Planner Method Enabling -
#enable_hashagg = true
#enable_hashjoin = true
#enable_indexscan = true
#enable_mergejoin = true
#enable_nestloop = true
#enable_seqscan = true
#enable_sort = true
#enable_tidscan = true
# - Planner Cost Constants -
#effective_cache_size = 1000 # typically 8KB each
#random_page_cost = 4 # units are one sequential page fetch cost
#cpu_tuple_cost = 0.01 # (same)
#cpu_index_tuple_cost = 0.001 # (same)
#cpu_operator_cost = 0.0025 # (same)
45/61
More Postgresql.conf Optimizer Parameters
# - Genetic Query Optimizer -
#geqo = true
#geqo_threshold = 11
#geqo_effort = 1
#geqo_generations = 0
#geqo_pool_size = 0 # default based on tables in statement,
# range 128-1024
#geqo_selection_bias = 2.0 # range 1.5-2.0
# - Other Planner Options -
#default_statistics_target = 10 # range 1-1000
#from_collapse_limit = 8
#join_collapse_limit = 8 # 1 disables collapsing of explicit JOINs
46/61
Storage
https://www.flickr.com/photos/mirandala/
47/61
File Structure
8K Page
Page
Page
Page
Page
Page
48/61
Page Structure
Page Header Item Item Item
8K
Tuple
Tuple Tuple Special
49/61
Index Page Structure
Page Header Item Item Item
Internal
>= N
= N
CREATETABLE customer(id SERIAL,nameTEXT);
NOTICE:CREATETABLE willcreate implicitsequence’customer_id_seq’for SERIALcolumn ’customer.id’
test=>CREATEINDEX customer_id_indexON customer(id);
CREATEINDEX
test=>CLUSTERcustomer USINGcustomer_id_index;
CLUSTER
52/61
Index Types
(Access Methods)
◮ Btree
◮ Hash
◮ Rtree
◮ GiST
◮ GIN
53/61
Tablespaces For Database I/O Balancing
DB1 DB2 DB3 DB4
Disk 1 Disk 2 Disk 3
54/61
Tablespaces For Table and Index I/O Balancing
tab1 tab2 index constraint
Disk 1 Disk 2 Disk 3
55/61
Table I/O Balancing Using constraint_exclusion
Parent Child
Table Tables
AAB
1
AAF
BMA
DIP 2
JOP
SYU
3
YQC
Triggers or Rules
Range partitioning is also possible.
56/61
Caches
◮ System Cache
◮ Relation Information Cache
◮ File Descriptor Cache
57/61
Shared Memory
◮ Proc structure
◮ Lock structure
◮ Buffer structure
◮ Free space map
58/61
Query Tips
◮ COPY vs. INSERT
◮ LIMIT vs. CURSOR
◮ TRUNCATE vs. DELETE
◮ Expression Indexes
◮ Partial Indexes
◮ Prepared Queries
◮ INTERSECT vs. AND (selfjoin)
◮ UNION vs. OR
59/61
System Tables
pg_database pg_trigger pg_aggregate pg_amproc
datlastsysoid tgrelid aggfnoid amopclaid
pg_conversion tgfoid aggtransfn amproc
conproc aggfinalfn
pg_language aggtranstype
pg_cast pg_proc pg_constraint pg_am
pg_rewrite castsource prolang contypid amgettuple
ev_class casttarget prorettype aminsert
castfunc pg_opclass ambeginscan
opcdeftype amrescan
amendscan
pg_index pg_class pg_type pg_operator ammarkpos
indexrelid reltype typrelid oprleft amrestrpos
indrelid relam typelem oprright ambuild
relfilenode typinput oprresult ambulkdelete
reltoastrelid typoutput oprcom amcostestimate
reltoastidxid typbasetype oprnegate
oprlsortop
oprrsortop
oprcode
pg_inherits pg_attribute pg_attrdef oprrest pg_amop
inhrelid attrelid adrelid oprjoin amopclaid
inhparent attnum adnum amopopr
atttypid
pg_statistic
starelid
staattnum
pg_depend pg_namespace staop pg_shadow pg_group pg_description
60/61
Conclusion
http://momjian.us/presentations https://www.flickr.com/photos/143948408@N03/
61/61