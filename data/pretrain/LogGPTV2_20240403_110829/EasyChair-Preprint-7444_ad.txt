### Table: Performance and Efficiency Comparison of Log Parsing Methods

| Method | Time (sec) | 10K | 25K | 50K | 75K | 100K | 125K | 150K | 175K | 200K | LogNG | LKE | LogMine | MoLFI | SHISO |
|--------|------------|-----|-----|-----|-----|------|------|------|------|------|-------|-----|---------|-------|-------|
| MoLFI  | 500        |     |     |     |     |      |      |      |      |      |       |     |         |       |       |
| MoLFI  | 3000       |     |     |     |     |      |      |      |      |      |       |     |         |       |       |
| LogNG  | 60         | K   | SHISO | SHISO | SHISO | SHISO | K   | 9K  | 10K  |      |       |     |         |       |       |
| LogNG  | 2000       | K   | SHISO | SHISO | 750K | 1000K | 1250K | 1500K | 1750K | 2000K | 2250K | 2500K |       |     |         |       |       |
| LogNG  | 30         | 400 | 600 | 800 | 1.0K | 1.2K | 1.4K | 1.6K | SHISO | SHISO |      |       |     |         |       |       |
| LogNG  | 300        | 10K 25K | 50K | 75K | 100K | 125K | 150K | 175K | 200K | SHISO | SHISO |       |     |         |       |       |
| LogNG  | 2000       | 10K 25K | 50K | 75K | 100K | 125K | 150K | 175K | 200K | SHISO | SHISO |       |     |         |       |       |

### Detailed Analysis

#### 1. Accuracy
- **logNG** achieved the highest accuracy on 10 datasets, with an average PA of 0.9509.
- **LogMine** ranked second with an average PA of 0.7613.
- There is a significant gap between logNG and other parsers in terms of accuracy.

#### 2. Efficiency
- **logNG** demonstrated the fastest running time on most datasets.
- For BGL, HDFS, and HealthApp, logNG was the second-fastest.
- **LKE** and **LogMine** have quadratic time complexity (O(n^2)), making them less efficient for large datasets.
- **SHISO** and **logNG** have linear time complexity (O(n)), enabling faster processing.

### Conclusion
In this study, we introduced an online log parsing method, **logNG**, based on N-gram assumptions. The method does not require historical data training and processes raw log messages in a stream. Experiments on 10 real-world log datasets from the LogPai team [14] showed that logNG outperformed other methods in both accuracy and efficiency. However, dynamic variables in log templates with multiple value forms can affect parsing accuracy, which will be addressed in future research.

### References
1. L. Tang, T. Li, and C.-S. Perng, “LogSig: Generating system events from raw textual logs,” in CIKM, 2011, pp. 785–794.
2. Tao Li, Yexi Jiang, Chunqiu Zeng, Bin Xia, Zheng Liu, Wubai Zhou, et al, “Flap: An end-to-end event log analysis platform for system management,” in Proceedings of the 23rd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, 2017, pp. 1547–1556.
3. S. Khatuya, N. Ganguly, J. Basak, M. Bharde and B. Mitra, “ADELE: anomaly detection from event log empiricism,” IEEE INFOCOM 2018 -IEEE Conference on Computer Communications, 2018, pp. 2114-2122.
4. T. Barik, R. DeLine, S. Drucker and D. Fisher, “The bones of the system: A case study of logging and telemetry at Microsoft,” 2016 IEEE/ACM 38th International Conference on Software Engineering Companion (ICSE-C), 2016, pp. 92-101.
5. Wei Xu, Ling Huang, Armando Fox, David Patterson, and Michael I. Jordan, “Detecting large-scale system problems by mining console logs,” in Proceedings of the ACM SIGOPS 22nd symposium on Operating systems principles (SOSP ’09), 2009, pp. 117–132.
6. Tatsuaki Kimura; Keisuke Ishibashi; Tatsuya Mori; Hiroshi Sawada; Tsuyoshi Toyono; Ken Nishimatsu, et al, “Spatio-temporal factorization of log data for understanding network events,” IEEE INFOCOM 2014- IEEE Conference on Computer Communications, 2014, pp. 610-618.
7. D. Yuan, H. Mai, W. Xiong, L. Tan, Y. Zhou, and S. Pasupathy, “Sherlog: Error diagnosis by connecting clues from run-time logs,” SIGARCH Comput. Archit. News, vol. 38, no. 1, pp. 143–154, Mar. 2010.
8. C. H. Kim, J. Rhee, H. Zhang, N. Arora, G. Jiang, X. Zhang, and D. Xu, “Introperf: Transparent context-sensitive multilayer performance inference using system stack traces,” SIGMETRICS Perform. Eval. Rev., vol. 42, no. 1, pp. 235–247, Jun. 2014.
9. K. Zhang, J. Xu, M. R. Min, G. Jiang, K. Pelechrinis and H. Zhang, “Automated IT system failure prediction: A deep learning approach,” 2016 IEEE International Conference on Big Data (Big Data), 2016, pp. 1291-1300.
10. P. He, J. Zhu, Z. Zheng and M. R. Lyu, “Drain: An online log parsing approach with fixed depth tree,” 2017 IEEE International Conference on Web Services (ICWS), 2017, pp. 33-40.
11. Makanju, A.A., Zincir-Heywood, A.N., Milios, E.E., “Clustering event logs using iterative partitioning,” in Proceedings of the 15th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, 2009, pp. 1255–1264.
12. R. Vaarandi and M. Pihelgas, “LogCluster - A Data Clustering and Pattern Mining Algorithm for Event Logs,” in Proceedings of the 11th International Conference on Network and Service Management (CNSM 2015), 2015, pp. 1–7.
13. P. He, J. Zhu, S. He, J. Li and M. R. Lyu, “An evaluation study on log parsing and its use in log mining,” 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN), 2016, pp. 654-661.
14. Jieming Zhu, Shilin He, Jinyang Liu, Pinjia He, Qi Xie, Zibin Zheng, and Michael R Lyu, “Tools and benchmarks for automated log parsing,” in Proceedings of the 41st International Conference on Software Engineering (ICSE), 2019, pp. 121–130.
15. A. Oliner and J. Stearley, “What Supercomputers Say: A Study of Five System Logs,” 37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN’07), 2007, pp. 575-584.
16. B. Schroeder and G. A. Gibson, “Disk failures in the real world: What does an MTTF of 1, 000, 000 hours mean to you?” in 5th USENIX Conference on File and Storage Technologies, FAST 2007, February 13-16, 2007, San Jose, CA, USA, 2007, pp. 1–16.
17. H. Mi, H. Wang, Y. Zhou, R. Lyu, and H. Cai, “Toward fine-grained, unsupervised, scalable performance diagnosis for production cloud computing systems,” IEEE Transactions on Parallel and Distributed Systems, vol. 24, pp. 1245–1255, 2013.
18. W. Xu, L. Huang, A. Fox, D. A. Patterson, and M. I. Jordan, “Detecting large-scale system problems by mining console logs,” in SOSP, 2009, pp. 117–132.
19. Wei Xu, Ling Huang, Armando Fox, David Patterson, and Michael Jordan, “Large-scale system problem detection by mining console logs,” in Proceedings of SOSP’09, 2009.
20. W. Xu, L. Huang, and M. I. Jordan, “Experience mining Google’s production console logs.” in SLAML, 2010.
21. Z. M. Jiang, A. E. Hassan, P. Flora and G. Hamann, “Abstracting Execution Logs to Execution Events for Enterprise Applications (Short Paper),” 2008 The Eighth International Conference on Quality Software, 2008, pp. 181-186.
22. H. Dai, H. Li, C. S. Chen, W. Shang and T. Chen, “Logram: Efficient log parsing using n-Gram dictionaries,” in IEEE Transactions on Software Engineering, 2020.
23. Q. Fu, J. Lou, Y. Wang and J. Li, “Execution anomaly detection in distributed systems through unstructured log analysis,” 2009 Ninth IEEE International Conference on Data Mining, 2009, pp. 149-158.
24. H. Hamooni, B. Debnath, J. Xu, H. Zhang, G. Jiang, and A. Mueen, “LogMine: fast pattern recognition for log analytics,” in CIKM, 2016, pp. 1573–1582.
25. S. Messaoudi, A. Panichella, D. Bianculli, L. Briand, and R. Sasnauskas, “A search-based approach for accurate identification of log message formats,” in ICPC, 2018.
26. M. Mizutani, “Incremental mining of system log format,” in SCC, 2013, pp. 595–602.
27. A. Makanju, A. N. Zincir-Heywood and E. E. Milios, “A Lightweight Algorithm for Message Type Extraction in System Application Logs,” in IEEE Transactions on Knowledge and Data Engineering, vol. 24, no. 11, pp. 1921-1936, Nov. 2012.
28. D’Souza SC, “LSTM neural network for textual ngrams,” 2018.
29. He Shilin, Zhu Jieming, He Pinjia and Michael R. Lyu, “Loghub: A Large Collection of System Log Datasets towards Automated Log Analytics,” arXiv preprint arXiv: 2008.06448, 2020.
30. Sasho Nedelkoski, Jasmin Bogatinovski, Alexander Acker, Jorge Cardoso, Odej Kao. Self-supervised Log Parsing. arXiv preprint arXiv: 1907.12412, 2019.