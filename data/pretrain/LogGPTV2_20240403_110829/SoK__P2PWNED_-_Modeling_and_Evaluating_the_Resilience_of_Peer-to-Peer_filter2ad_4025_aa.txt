title:SoK: P2PWNED - Modeling and Evaluating the Resilience of Peer-to-Peer
Botnets
author:Christian Rossow and
Dennis Andriesse and
Tillmann Werner and
Brett Stone-Gross and
Daniel Plohmann and
Christian J. Dietrich and
Herbert Bos
2013 IEEE Symposium on Security and Privacy
SoK: P2PWNED — Modeling and Evaluating the Resilience of Peer-to-Peer Botnets
Christian Rossow
∗‡
‡
, Dennis Andriesse
, Tillmann Werner
¶
,
†
Brett Stone-Gross
§
, Daniel Plohmann
∗
, Christian J. Dietrich
‡
, Herbert Bos
§
Fraunhofer FKIE, Bonn, Germany, PI:EMAIL
∗
†
Institute for Internet Security, Gelsenkirchen, Germany
{rossow,dietrich}@internet-sicherheit.de
VU University Amsterdam, The Netherlands
‡
{d.a.andriesse,h.j.bos}@vu.nl
Dell SecureWorks, PI:EMAIL
¶
CrowdStrike, Inc.
Abstract—Centralized botnets are easy targets for takedown
efforts by computer security researchers and law enforcement.
Thus, botnet controllers have sought new ways to harden the
infrastructures of their botnets. In order to meet this objective,
some botnet operators have (re)designed their botnets to use
Peer-to-Peer (P2P) infrastructures. Many P2P botnets are far
more resilient to takedown attempts than centralized botnets,
because they have no single points of failure. However, P2P
botnets are subject to unique classes of attacks, such as node
enumeration and poisoning. In this paper, we introduce a
formal graph model to capture the intrinsic properties and
fundamental vulnerabilities of P2P botnets. We apply our
model to current P2P botnets to assess their resilience against
attacks. We provide assessments on the sizes of all eleven active
P2P botnets, showing that some P2P botnet families contain
over a million bots. In addition, we have prototyped several
mitigation strategies to measure the resilience of existing P2P
botnets. We believe that the results from our analysis can
be used to assist security researchers in evaluating mitigation
strategies against current and future P2P botnets.
I. INTRODUCTION
Criminals use botnets for a myriad of malicious activities,
including denial-of-service attacks, spam, and banking fraud.
The most common type of architecture for existing botnets
is based around a central Command-and-Control (C&C)
server. Consequently, these C&C servers have received an
increasing amount of attention from security researchers
and law enforcement for takedown attempts [24, 6]. In
response, botnet controllers (botmasters) have designed and
implemented new architectures to make their botnets more
resilient. Some botnets use fast-ﬂux DNS to assign addresses
from a large pool of IPs belonging to compromised systems
to C&C domains [16]. In addition, attackers have imple-
mented domain generation algorithms (DGA) to dynamically
generate domain names used for C&C (e.g., depending
on seed values such as the current date/time and Twitter
trends) [1]. A more radical and increasingly popular way
to increase botnet resilience is to organize the botnet as a
Peer-to-Peer (P2P) network. In a P2P botnet, bots connect
to other bots to exchange C&C trafﬁc, eliminating the need
for centralized servers. As a result, P2P botnets cannot be
disrupted using the traditional approach of attacking critical
centralized infrastructure.
Even though active P2P botnets such as the Zeus P2P
variant, Sality, ZeroAccess and Kelihos have survived in the
wild for as long as ﬁve years, relatively little is known about
the sizes of these botnets. It is difﬁcult to estimate a P2P
botnet’s size, for a number of reasons. P2P botnets often
use custom protocols, so that researchers must ﬁrst reverse
engineer the protocol and encryption before they can track
the botnet’s population. In addition, approximations based
on IP addresses alone have been shown to be inaccurate
unless care is taken to account for IP address churn [24].
Another signiﬁcant problem is that there is currently no
systematic way to analyze the resilience of P2P botnets
against takedown attempts. Previous work has shown sig-
niﬁcant weaknesses in some P2P botnets, such as Storm [9]
and Waledac [23], but these studies focus on speciﬁc design
ﬂaws that are unique to these P2P botnets.
In this paper, we present a graph-theoretical model of P2P
botnets that aids in analyzing the resilience of these botnets.
The proposed model captures the fundamental characteristics
of P2P botnets, covering intrinsic properties of their self-
organizing nature. We extend our model with mitigation
strategies that are generally applicable to any P2P botnet.
Our model highlights two resilience aspects:
1) Intelligence gathering resilience: We model intelligence
gathering (also referred to as reconnaissance) methods
and evaluate the resilience of current P2P botnets to
these methods. That is, we evaluate to what extent the
P2P botnets are able to deter malware analysts from
enumerating the bots in the network.
2) Disruption resilience: We formalize attacks that can be
used to disrupt P2P botnets. Examples of such attacks
include sinkholing, where all bots are redirected to
an attacker-controlled machine called a sinkhole, and
partitioning, which aims to split a botnet into unusable
sub-networks.
We apply our methods to real-world P2P botnets to evaluate
their resilience against the modeled attacks.
1081-6011/13 $26.00 © 2013 IEEE
DOI 10.1109/SP.2013.17
97
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:53:41 UTC from IEEE Xplore.  Restrictions apply. 
We use the reconnaissance methods described in our
model to gather intelligence about real-world P2P botnets.
In particular, we deploy two P2P node enumeration tech-
niques, namely crawling and sensor injection, to measure
the population sizes of current P2P botnets. Our experiments
show that some of these P2P botnets contain in the order
of a million infected systems, illustrating the magnitude of
the P2P botnet threat. Interestingly, we found signiﬁcant
differences in the number of bots found by our crawlers
compared to our sensors. As we will show, crawling may
underestimate a botnet’s size by two orders of magnitude.
In addition, we identify an inherent limitation to crawling,
namely that crawlers cannot verify the authenticity of the
60–87% of enumerated nodes which are behind NATs,
proxies, or ﬁrewalls.
We also apply the disruption attacks deﬁned in our model
to real-world P2P botnets. We show that some current
P2P botnets are quite resilient to disruption—a clear im-
provement over early botnets like Storm and Waledac. For
instance, Sality employs a peer reputation scheme which
signiﬁcantly complicates attacks. As another example, the
Zeus P2P botnet uses automatic blacklisting of sinkholing
servers that communicate too aggressively. Moreover, as we
will show, several P2P botnets are able to repel initially
successful attacks against their P2P layers over the long
term through the use of backup C&C channels. Additionally,
we investigate to what extent P2P botnets are susceptible
to attacks like command injection (as opposed to attacks
against the botnet infrastructure).
In summary, our contributions are:
1) We propose a formal graph model for P2P botnets
and deﬁne attack methods that are applicable to any
P2P botnet. This model can be used to assist malware
analysts in P2P botnet mitigation efforts.
2) Based on our model, we implement intelligence gather-
ing attacks against current P2P botnets. We evaluate and
compare the accuracy of two P2P botnet enumeration
techniques, namely crawling and sensor injection. We
provide lower-bound approximations on the populations
of all current P2P botnets, and show that crawling
results for these botnets are limited in accuracy.
3) We evaluate the resilience of all active P2P botnets by
prototyping our formalized attacks. We ﬁnd that some
P2P botnets are susceptible to disruption, while others
have a considerably more robust design that makes
takedown efforts more challenging.
The remainder of this paper is structured as follows.
Section II gives an overview of the P2P botnet landscape.
In Section III, we propose a model for P2P botnets, cov-
ering intrinsic characteristics of P2P botnets. Section IV
expands our model by formalizing intelligence gathering
and disruption attacks against P2P botnets. In Section V,
we describe new insights into P2P botnet node enumeration
by comparing results from crawling and sensor injection.
Section VI provides an analysis of the P2P resilience of
active and previously active botnets. Section VII discusses
ethical issues and the future of mitigation efforts against P2P
botnets. Finally, we outline related work in Section VIII and
summarize our work in Section IX.
II. OVERVIEW OF P2P BOTNETS
This section provides an overview of the most important
P2P botnet families that emerged between the beginning of
2007 and the middle of 2012. Our overview is based on
insights from the dynamic malware analysis platform SAND-
NET [19], combined with reverse engineering, ﬁrst-hand
takedown experience and technical reports from malware
analysis companies. We restrict ourselves to botnets which
use a P2P channel as their primary means of communication.
We do not consider Conﬁcker.C [17] or TDL4 [20], as these
botnets only use their P2P components as backup channels.
In the remainder of this paper, we distinguish between botnet
families, botnet variants and botnets. We use the term botnet
family to denote a speciﬁc strain of a botnet. The term
botnet variant is used to denote a variant within a botnet
family. Finally, we use the term botnet to refer to a coherent
collection of hosts infected with a speciﬁc botnet variant.
Some botnet variants contain several disjoint botnets.
A. P2P Botnet Characteristics
In this paper, we closely analyze twelve P2P botnet
variants. Figure 1 shows each of the P2P botnet variants that
are still active as of November 2012. As shown in the ﬁgure,
four P2P botnet families are currently active in the wild.
Each of the studied families, except Zeus, consists of several
major versions. Finally, for each major version, one or
more disjoint botnets exist. Botnets which have already been
successfully sinkholed are shown with a dark background in
the ﬁgure.
(cid:22)(cid:18) (cid:22)(cid:19)
(cid:17)(cid:18)
(cid:22)(cid:20)
(cid:22)(cid:18)
(cid:22)(cid:19) (cid:22)(cid:20) (cid:22)(cid:21)
(cid:22)(cid:18)
(cid:17)(cid:19)
(cid:1)(cid:2)(cid:14)(cid:13)(cid:15)(cid:16)(cid:16)(cid:2)(cid:4)(cid:4)
(cid:1)(cid:2)(cid:3)(cid:4)
(cid:22)(cid:18) (cid:22)(cid:19)
(cid:17)(cid:20) (cid:17)(cid:21)
(cid:5)(cid:6)(cid:7)(cid:8)(cid:9)(cid:10)
(cid:22)(cid:18) (cid:22)(cid:19) (cid:22)(cid:20)
(cid:17)(cid:20)
(cid:17)(cid:18)
(cid:17)(cid:19)
(cid:11)(cid:2)(cid:7)(cid:8)(cid:12)(cid:13)(cid:4)
Figure 1: Active P2P botnet families, their variants, and instances.
Figure 2 shows the lifespans of the botnet variants we
study in detail, as well as the most important P2P botnets
which are no longer active. We see that the minimum botnet
family lifetime encountered so far is eight months (Miner),
while Sality has been active ﬁve years. The large differences
shown in P2P botnet lifespans can partly be explained by the
fact that some botnet families are more resilient than others.
However, the degree of resilience is not a sufﬁcient metric
to explain the lifespans of all P2P botnets. For instance, we
show in Section VI that the ZeroAccess botnet family, one
98
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:53:41 UTC from IEEE Xplore.  Restrictions apply. 
Nugache
Storm
Sality v3
Sality v4
Waledac
ZeroAccess v1
ZeroAccess v2
Kelihos v1
Kelihos v2
Kelihos v3
Miner
Zeus
abandoned
active
disabled
Jan 2006
Jan 2007
Jan 2008
Jan 2009
Jan 2010
Jan 2011
Jan 2012
Figure 2: Lifespans of P2P botnet variants.
of the longest surviving P2P botnet families, is in principle
relatively straightforward to sinkhole.
Table I shows the communication protocol, message prop-
agation method, communication direction, C&C architec-
ture, and the purpose of each P2P botnet. Note that all
recent P2P botnets have unstructured P2P protocols, that
is, they use message gossiping to propagate information. To
date, most academic work on P2P botnets has focused on
structured architectures [22, 31, 32, 10]. Bots in structured
P2P botnets typically maintain a distributed hash table that
is used to store and route commands. Unstructured networks
are not susceptible to many of the mitigation strategies for
structured networks discussed in the literature. Motivated
by the large number of unstructured P2P botnets that are
used in the wild today, we propose attacks that are generally
applicable to structured and unstructured P2P botnets.
The P2P botnets listed in Table I are used for a variety
of purposes, including malware distribution, spam, credential
theft, and Distributed Denial-of-Service (DDoS) attacks. The
table also shows the C&C architectures of all P2P botnets.
Nugache, Sality and ZeroAccess are purely P2P based. The
other botnets rely on hybrid architectures, which incorpo-
rate centralized servers, for instance to collect stolen data.
Unfortunately, shutting down these centralized components
usually has a minimal effect, as the P2P layer can easily be
used to redirect bots to alternative servers. Thus, we focus
speciﬁcally on the resilience of the P2P layer itself.
Family
Protocol
Prop.
Dir.
C&C
Purpose
Kelihos
Miner
Nugache
Sality
Storm
Waledac
ZeroAccess
Zeus
custom
custom
custom
custom
Overnet1
custom
custom
custom
gossip
gossip
gossip
gossip
routing
gossip
gossip
gossip
pull
pull
pull
pull
pull
pull
pull2
both
hybrid
hybrid
P2P
P2P
hybrid
hybrid
P2P
hybrid
C,D,M,N,S
D,M,P
D,T
D,N,P
D,S,T
D,S,T
P
D,P,T
Table I: Overview of P2P botnet families showing their protocol,
message propagation method, communication direction, C&C ar-
chitecture, and purpose. The main purpose is highlighted in bold.
C = Click Fraud, D = DDoS, M = Bitcoin Mining, N = Network
Services, P = Pay-Per-Install, S = Spam, T = Credential Theft.
B. Botnet Descriptions