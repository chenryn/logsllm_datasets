        J3:
          POP EAX
        }
        JNE CheckDebugger
        POP EAX
      }
我在所有操作后添加了跳转指令，这将不会影响程序正常执行，但是在跳转之间添加垃圾字节将混淆代码，并避免静态字符串过滤器。
### 5.4 加载假的 lib 库
我们将尝试在运行时加载一个不存在的 `dll`。 通常当我们尝试加载一个不存在的 `dll` 时 `HISTENCE` 返回
`NULL`，但AV产品中的一些动态分析机制允许这种情况，以便进一步分析程序的执行流程。
    bool BypassAV(char const * argv[]) {
      HINSTANCE DLL = LoadLibrary(TEXT("fake.dll"));
      if (DLL != NULL) {
        BypassAV(argv);
      }
### 5.5 获取信用计数
在这种方法中我们将利用 AV 产品的时间截止日期。 在大多数情况下，AV
产品是为了用户友好性设计的，为了不影响用户的其他操作，他们不能花费太多的时间来扫描文件。最初恶意软件开发人员使用 “sleep()”
函数等待扫描完成，但现在这个技巧几乎不能用，因为每个AV产品能够跳过 sleep 功能。
我们将使用 “GetThickCount()” 的 `Windows API`
函数(“`此函数检索系统启动后已经过去的毫秒数，最多为49.7天`“)，我们使用它来获取从操作系统启动后经过的时间，然后尝试 sleep 1秒 sleep
后，我们将通过比较两个 `GetTickCout()` 值来检查睡眠功能是否被跳过。
      int Tick = GetTickCount();
      Sleep(1000);
      int Tac = GetTickCount();
      if ((Tac - Tick) 
  * [2] - 
  * [3] - 
  * [4] - [https://en.wikipedia.org/wiki/Sandbox_(computer_security](https://en.wikipedia.org/wiki/Sandbox_\(computer_security\))
  * [5] - 
  * [6] - 
  * [7] - 
  * [8] - 
  * The Antivirus Hacker’s Handbook
  * The Rootkit Arsenal: Escape and Evasion: Escape and Evasion in the Dark Corners of the System
  * 
  * 
  * 
  * 
  * 
### 译者参考
  * 
  * 
  * 
  * 
* * *