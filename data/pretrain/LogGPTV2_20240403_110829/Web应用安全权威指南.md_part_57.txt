### 使用非 EV-SSL 证书时的注意事项

在使用非 EV-SSL 证书的情况下，用户需自行确认所访问网站的域名是否正确。一些知名的网站可能仅使用普通的域名认证证书，因为他们认为这些证书已经足够满足需求。不同类型的证书购买费用也有所不同，因此在选择证书时，应综合考虑网站的性质以及域名的认知程度。

#### 专栏：免费的数字证书

相对而言，域名认证证书的价格较为低廉，购入门槛也不高，并且还可以利用免费的域名认证证书。例如，以色列公司 StartCom 就提供免费的域名认证证书。StartCom 提供的证书可以在 IE、Firefox、Google Chrome、Safari 和 Opera 等最新版浏览器中正常使用，即使是在 IE6 中，只要进行了升级也可以使用。

由于这种免费的域名认证证书可以用于域名认证和加密通信，因此对于因成本原因无法采用正式 SSL 或者使用自建认证中心（即自签名证书）的企业来说，可以考虑使用这种免费的电子证书。

### 使用便于记忆的域名

为了防范钓鱼攻击，采用容易记忆的域名是非常有效的。以下是一些属性型域名的例子：

| 运营服务组织 | 域名种类   |
| -------------- | ------------- |
| 企业运营服务   | .CO.JP      |
| 政府机构服务   | .GO.JP      |
| 地方团体服务   | .LG.JP      |
| 教育机构服务   | .AC.JP 或 .ED.JP |

申请这些属性型域名时，域名管理机构会对申请者是否符合申请条件进行审查，并且每个团体只能申请一个域名。因此，这些域名不太可能被用作恶意网站的域名。建议 Web 服务提供商选择上述属性型域名，而不是像 .COM 这样的通用型域名。

## 7.3 防范网络监听和篡改的对策

本节将讨论 Web 网站的网络监听和篡改攻击的对策。首先，我们将说明网络监听和篡改的方法，然后讨论如何使用 SSL 来防范这些攻击。

### 7.3.1 网络监听和篡改的途径

针对 Web 网站的监听及篡改主要通过以下方式实现：

- **通过无线网进行监听和篡改**：如果无线网中的数据未加密，或者使用了已被破解的加密方法（如 WEP），则可能发生网络监听。此外，攻击者可以通过设置假的无线热点来发动网络篡改攻击。
- **利用交换机端口镜像**：在有线局域网中，攻击者可以通过交换机的镜像端口实现网络监听。然而，这需要攻击者能够物理接触到网络硬件。即使交换机没有镜像端口，攻击者也可以通过修改内部线路并让通信经过中继 HUB 来实现监听。
- **利用代理服务器**：如果攻击者控制或设置了代理服务器，他们可以通过让 HTTP 通信经过代理服务器来实现监听。如果代理服务器支持，攻击者还可以对 HTTP 消息进行篡改。
- **伪装成 DHCP 服务器**：在使用 DHCP 的局域网环境中，攻击者可以通过伪装的 DHCP 服务器来更改 DNS 或默认网关的 IP 地址。一旦成功，所有网络通信都会通过伪装的网关服务器，从而实现监听和篡改。
- **使用 ARP 次骗攻击和 DNS 缓存污染攻击**：这两种方法不仅可以用于网站伪装，还能用于网络监听和篡改。攻击者会使用自己管理下的路由器或反向代理服务器来中继用户通信，从而实现监听和篡改。

### 7.3.2 中间人攻击

在网络监听和篡改的方式中，有一种是利用中间设备的中继功能。在这种环境下，即使通信是加密的，也可能被监听和篡改。这种方法被称为中间人攻击（Man-In-The-Middle Attack, MITM）。

下面的图显示了中间人攻击的大致示意：
![{%}](Image00246.jpg)
**图 7-7 中间人攻击的例子**

中间人攻击如图 7-7 所示，攻击者在用户和目标网站之间插入自己的设备，通过对 HTTPS 通信的连接来实现监听和篡改。虽然通信部分使用了 HTTPS 协议，但中间人可以在中继器上进行一次解密操作，根据需要修改内容，然后再加密后发送给对方。

#### 使用 Fiddler 模拟中间人攻击

为了更好地理解中间人攻击，我们可以使用 Fiddler 来模拟。启动 Fiddler 后，选择 Tools 菜单中的 "Fiddler Options"，在弹出的对话框中选择 "HTTPS" 页。选中 "Capture HTTPS CONNECTs" 和 "Decrypt HTTPS traffic" 复选框，如图 7-8 所示。
![{%}](Image00247.jpg)
**图 7-8 将 Fiddler 设置为 MITM 模式**

选中这两项后，会弹出图 7-9 的对话框，在这个对话框中选择 "No"。
![{%}](Image00248.jpg)
**图 7-9 根证书的导入确认对话框**

此时访问 HTTPS 网站，浏览器会显示安全证书有问题的提示消息。忽略该提示继续访问，IE6 会弹出 "是否继续" 的对话框，点击 "是" 继续访问。IE7 及以后版本可以通过点击 "继续浏览此网站（不推荐）" 继续访问。图 7-10 显示了访问 verisign 的结果。
![{%}](Image00249.jpg)
**图 7-10 访问 HTTPS 网站**

此时浏览器地址栏变为粉红色，右边出现 "证书错误" 提示。接下来可以在 Fiddler 中查看监听到的通信内容，并对其进行修改。
![{%}](Image00250.jpg)
**图 7-11 成功监听到 HTTPS 通信内容**

从以上操作可以得出结论：
- 即使使用 SSL（HTTPS），通过中间人攻击也能实现网络监听和篡改。
- 在中间人攻击中，浏览器会出现数字证书错误的提示。

在中间人攻击中，代理服务器（如 Fiddler）被视为 Web 服务器。浏览器显示的数字证书错误提示表明可能存在中间人攻击。此外，如果证书不是正式签发的，或者证书域名不一致、证书过期等情况下，浏览器也会提示证书错误。

#### 专栏：请不要手动安装证书

在上面使用 Fiddler 模拟中间人攻击的例子中，我们在图 7-9 的对话框中选择了 "No"。如果选择 "Yes"，Fiddler 生成的根证书将被导入 Windows，此时在 MITM 模式下，浏览器不会显示证书错误。这属于危险行为，因此我们选择了 "No" 进行模拟实验。

同样，如果个人电脑感染了间谍软件，也可能出现类似问题。这时 SSL 不能发挥域名认证的作用。一些网站要求手动导入根证书，这也是非常危险的行为。应该使用浏览器自带的正规合法的根证书，或者通过 Windows Update 等安全方式导入的根证书。

但是，这一规则适用于网络上的正式网站。如果是公司内部自建的 CA（私有 CA），则不受此约束。私有 CA 和自签名证书的区别可以参考高木浩光的文章 "PKI 常见误区（3）如果私有认证中心安全的话那么自署名证书也是安全的" [9]。

### 7.3.3 对策

合理利用正规的数字证书和 SSL 通信可以有效预防网络监听和篡改。在实际应用中有以下几点需要注意：

- **从输入页面开始使用 HTTPS**：如果输入页面被篡改，后续的网页可能无法正常进行 SSL 加密通信。
- **注意 Cookie 的 secure 属性**（参考 4.8.2 节）
- **图像、CSS 和 JavaScript 也需要使用 HTTPS**：如果这些资源被篡改，可能会导致页面内容被篡改。如果页面同时包含 HTTP 和 HTTPS 资源，浏览器会弹出提示框，如图 7-12 所示。
  ![{%}](Image00251.jpg)
  **图 7-12 浏览器弹出的提示框**
- **不使用 frame 和 iframe**：如果外层 frame 没有使用 HTTPS，浏览器地址栏也不会显示 HTTPS 网址。此外，如果 frame 的源文件链接被替换，整个页面的内容也会被替换。因此，最好不使用 frame 和 iframe，若必须使用，则所有资源都应放在 HTTPS 下。
- **确保浏览器在默认设置下不显示错误提示**：应用程序不应修改浏览器默认的 "使用 SSL 2.0" 和 "对证书地址不匹配发出警告" 等设置。由于 SSL 2.0 存在缺陷，服务器端应禁用它。如果禁用 "对证书地址不匹配发出警告"，域名认证功能将失效。
- **不隐藏地址栏和状态栏**
- **不屏蔽鼠标右键菜单**

这些措施都是为了让用户方便地确认证书的有效性。因为标识证书有效性的锁头标记会显示在地址栏或状态栏中，也可以通过右键菜单来确认。

#### 专栏：SSL 认证标签

有些证书提供商会给用户提供证明其合法性的标签（或图标）。访问者点击标签后，会转到证书提供商的页面，显示证书内容、期限和组织名称等信息。

然而，这种认证标签很容易被伪造。尽管有 "点击标签确认是否安全" 的提示，但攻击者的网站可能显示伪造的证书认证标签，用户需要花时间确认标签的真实性。确认内容包括当前浏览的网站域名和浏览器是否显示证书错误等。

如果用户能进行上述确认，也应该能够鉴别使用证书的原网站的真伪。因此，与其花时间确认证书认证标签的真伪，不如直接确认网站本身的真实性。

此外，认证标签通常使用 JavaScript 或浏览器插件编写，如果标签本身存在 XSS 等漏洞，还会对嵌入标签的网站的安全性产生不利影响。因此，只有在确定认证标签带来的好处大于风险时，才应在网站上显示 SSL 证书的认证标签。

### 7.4 防范恶意软件的对策

本节将讨论 Web 网站的恶意软件（病毒等非法软件）防范对策。首先介绍预防服务器端恶意软件的意义，然后详细说明具体的对策。

#### 7.4.1 什么是 Web 网站的恶意软件对策

Web 网站的恶意软件对策主要防范以下情况：
- **Web 服务器自身感染恶意软件**：这种情况类似于 OS 命令注入攻击，可能导致信息泄露、网站被篡改、非法使用其他功能或作为跳板对其他服务器发起攻击。
- **通过 Web 网站传播恶意软件**：恶意软件存储在服务器上，但不在服务器上运行，而是供用户下载。这种情况可能导致浏览网页的用户 PC 感染恶意软件 [10]。

[10] 前提是用户 PC 存在漏洞或恶意软件被执行。