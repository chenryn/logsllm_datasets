[sql] view plaincopy 
1.CREATE QUERY DQ0002 
2.SELECT * 
3.FROM T1:mysql 数据输入,T2:mysql 数据输入 2 
4.PATTERN T1|T2 
5.WITHIN 0 
北京速德贝斯科技有限公司 WWW.SODBASE.COM
 SODBASECEP 入门与进阶教程SODBASECEP 入门与进阶教程
DQ0002 的输出适配器用级联节点(no watermark)，输出到流 DQ0002_output mysql 数据输入、mysql 数据输入 2 用的是 mysql 输入适配器。
[sql] view plaincopy 
1.CREATE QUERY DQ0002_output 
2.SELECT T1.nameASname,JAVA:dq.Code:standardizeGender(T1.gender) AS
gender,T1.age AS age 
3.FROM T1:DQ0002_output 
4.PATTERN T1 
5.WITHIN 0 
DQ0002_output 可以接数据存储写入的适配器。
4.3.2 数据库、文件监测
有些情况，也会定时监测是其他数据源，比如文件、文件夹、各类型 URI，和有些情况，也会定时监测是其他数据源，比如文件、文件夹、各类型 URI，和
监测数据库数据的原理是一样的，在经营分析系统、数据质量管理等项目中也
经常会用到。
为了保证事件能够在分布式系统中容错，socket 传输中采用了 fail retry 机制，
保证网络短暂断线不引起数据丢失。
为了保证数据只处理一次，SODBASE CEP 采用了类似 Google MIllWheel 的
Watermark 技术。也类似于 storm trident 的 state 保留状态的方法，不同的是
SODBASE CEP Watermark 技术同时可以处理事件乱序的问题。而在 storm 
互联网短文本统计应用中乱序通常不是非常重要。
1.配置方法
1.1 Fail retry 
在 Socket 输出适配器中有参数可配置重试次数。
北京速德贝斯科技有限公司 WWW.SODBASE.COM北京速德贝斯科技有限公司 WWW.SODBASE.COM
 SODBASECEP 入门与进阶教程
1.2 去重
这里说的去重是同一事件由于双热 HA，或上游重发的缘故导致重复。类 似独立 UV（Unique Visitor）去重有很多概率去重算法或内存索引去重方法
供参考，就不在本文中讨论了。
如果自己实现输入适配器，OptimizedInputAdaptorI 提供了去重的方法，
相同的事件用此方法添加到流上，只会添加一次。
public  void  putEventToStreamDuplicatePrevention(PrimitiveEvent 
primitiveEventNew) 
去重的范围与 public void setWATERMARKDELTA(int wATERMARKDELTA) 大小有关，迟到超过 WATERMARKDELTA 视为过期数据。当然，系统自带的一些适配器，如 Socket 输入适配器，则已经有参数表示 是否去重。级联输出适配器带 wartermark 参数的，也可以去重。
1.3 去重并且修正乱序
public  void  putEventToStreamCorrectDisorder(PrimitiveEvent 
primitiveEventNew)，此方法会修正乱序。同时 wATERMARKDELTA 越大，
修正粒度越大，输出滞后也越大，即只有排查完“后到数据”时间戳不小于
当前事件，当前事件才会被输出到流上。
在许多领域，流式计算 CEP 和它的高可用性方案发挥着重要的作用。我们往 往需要 HA 方案保证窗口数据和执行计划不丢失。同时，有时也需要深入进程 中的某个线程（任务）监测它的运行状态。如果心跳机制只建立在 Worker(JVM 进程)级别，往往会存在 Worker 还在，Task 线程停掉了的情况。本文将介绍 SODBASE CEP 基本的 HA 方法和概念。举几个常见应用场景：
（1）实时交易中，根据前面时间窗口的数据进行交易策略判断，服务器宕机了
北京速德贝斯科技有限公司 WWW.SODBASE.COM
 SODBASECEP 入门与进阶教程
（2）计算 5 分钟股价 K 线。数据还没累积到 5 分钟，服务器宕机了
（3）数据批量操作，一个批次还没有到累积满，服务器宕机了
（4）监测每个任务的查询执行状态、输入状态、输出状态，满足生产环境运维需求
1. 示例操作步骤
下面是一个批量操作中 Hot-Hot HA 的示例。批量窗口操作过程中，这些状况如客户
端不稳定、输入数据的 fail 重传机制、网络通信中的各种故障等等，都给保证高可
用性带来困难。
目标：保证所有数据包括中间状态、缓存数据全部入库，即使集群中存在服务器宕
机的情况。
前提：存储入库接口需有健壮，且能够判断将要插入的数据是否在库中已经存在。前提：存储入库接口需有健壮，且能够判断将要插入的数据是否在库中已经存在。
因为用户写的客户端可能有缓存重发，集群节点间也可能出现连不通的情况，不是
单纯内存同步可以解决的。所以需要在存储级别的同步，即对已经存在的数据不进
行重复入库。除非重复入库不影响应用使用。
（1）下载一个 CEP 服务器安装介质 ，解压。这 里用的是 Tomcat 容器，支持其它 J2EE 容器。
在一台机器上模拟两个服务器。解压后的目录复制一份，这里取名为
SODBASE-TOMCAT-7.0.56-2，如下图所示
将 SODBASE-TOMCAT-7.0.56-2 的 conf 目录下的 server.xml 删掉，将 server-2.xml 重命名为 server.xml 
运行的 bin 目录下的 startup.bat,就启动 CEP Server 了，
	北京速德贝斯科技有限公司 WWW.SODBASE.COM北京速德贝斯科技有限公司 WWW.SODBASE.COM
	 SODBASECEP 入门与进阶教程（2）下载本文的模型示例 
query1hhnode1.soddata2 //部署到服务器 1 上 
query1hhnode2.soddata2//部署到服务器 2 上 
query1hhclient.soddata2//客户端，模拟了股票数据的生成 
query1hhnode1 和 query1hhnode2 的 CEP 模型功能一样，都是模拟分批窗口操作，
每隔 10 秒，将积攒的股票数据批量操作。这里没有连存储，用屏幕打印来演示。
（3）下载 CEP Server Admin 程序 ，解压
运行 cepserver-admin.exe 
登陆到服务器 1。localhost 端口 16111，默认用户名 admin 密码 cep，安装 query1hhnode1.soddata2 ，启动 hhnode1 模型。点击右上角注销按钮后，同样的方式登陆到服务器 2。localhost 端口 16121，安装
query1hhnode2.soddata2 ，启动 hhnode2 模型。
北京速德贝斯科技有限公司 WWW.SODBASE.COM
 SODBASECEP 入门与进阶教程
这样，HA 双热服务器就部署好了。
（4）运行客户端
以下两种方法任选一个
方法 1：下载 ，解压导入为 Exlipse 工程，运 行 com.example.ha.HotHotExample.java。
方法 2：如果没有 Eclipse 环境。用 CEP Server Admin 登陆到服务器 1。localhost 端口 16111，默认用户名 cep 密码 cep，安装 query1hhclient.soddata2 ，启动 query1hhclient 模型。
（5）结果输出（5）结果输出
可以看到服务器 2 屏幕打印输出，一条输出代表一个批次处理完成。
北京速德贝斯科技有限公司 WWW.SODBASE.COM
 SODBASECEP 入门与进阶教程
（6）模拟宕机
关掉服务器 2，可以用 server admin 将 cep 模型停掉，也可以直接关掉 Tomcat 
可以发现批次处理已经转移到了服务器 1。如下图显示，以 45 开头的 batch 是服务 器 2 处理的，从 50 开始转到了服务器 2。而且不会丢失中间结果。
（7）检查模型运行状态
在浏览器（极速模式）地址栏输入
http://localhost:16111/sodbase-cep-server-webservice-1.0.1/servermonitor?usern ame=admin&password=cep&modelspacename=admin&modelname=hhnode1&v ersion=1.0查看 hhnode1 的详细运行状态。如果有故障可以检查出来，如下图所示。
总体信息没有固定格式，只用于运维检查使用。查询单条 SODSQL 语句的执行状
态。例如，在浏览器（极速模式）地址栏输入
http://localhost:16111/sodbase-cep-server-webservice-1.0.1/querymonitor?usern ame=admin&password=cep&modelspacename=admin&modelname=hhnode1&v ersion=1.0&queryname=admin.hhnode 
北京速德贝斯科技有限公司 WWW.SODBASE.COM
 SODBASECEP 入门与进阶教程 ,如果运行正常应该处于"waitingevent"或"computing"状态。要实现 Hot-Standby 或 自动化监测，建议使用单条 SODSQL 监测的接口。2.工作原理 
2.1. Hot-Standby 
2.1.1 特点
Hot-Standby 即主备方式，这种类型的 HA 有以下几个特点：
（1）有 Heartbeat 监测，可以做细粒度监测。
可以节点主动汇报，也可以由管理节点轮询。通常是定时监测。
（2）对于特定的任务，在主备机器中的一台上运行，并能进行任务迁移。
这里的任务是指已经并行化后的任务，例如计算车流量的任务，如果并行化成两个
任务，任务 1 接收奇数尾号的数据，任务 2 接收偶数尾号的数据。那么任务 1 总得
有一台服务器在运行它，要么在主服务器上运行，要么在备服务器上运行。任务 2
也一样。
"主"和"备"的概念是相对的，"备"指的是任务可以迁移到的服务器。可以是一主一备，
也可以是一主多备。
(3) 通常没有内存同步和执行计划、中间结果和缓存同步的机制。
2.1.2HA 的粒度
如果粒度在 Worker 进程级别，那么只需要监听进程的状态。如果粒度在 Worker 进程级别，那么只需要监听进程的状态。
北京速德贝斯科技有限公司 WWW.SODBASE.COM
 SODBASECEP 入门与进阶教程
如果需要 Task 线程级别的细粒度 HA，那么我们就需要监听线程的运行状态。
2.2 Hot-Hot (窗口聚合的 HA 问题)
2.2.1 特点 
Hot-Hot 双热方式的 HA 的特点是
（1）在集群中同步内存和执行计划状态，可以保证中间结果或缓存不丢失。
（2）节点输出同步。
2.2.1 客户端示例代码
查看客户端数据源，也是由一个 CEP 模型实现的。里面有五条 EPL 语句。其中
hhinput 是股票数据源，hhtimerinput、hhtimer2 是两个定时器，用于生成精确的滑
动窗口开始结束时间。hhdispatcher1 和 hhdispatcher2 则是负责通过发送数据到两 台 CEP Server 上去。在项目中有时会用到实时图表的显示，例如电压监测图、水文监测图、桥梁监
测图、IT 运维监控性能图、预警信息显示、经营分析监测等等。本文介绍
SODBASE CEP 自带的 SODBASE View 以及 RESTful 接口。用户可以在此基 础上二次开发，定制自己的图表。用户也可以使用 RESTful 接口拓展自己的图
表类型。
北京速德贝斯科技有限公司 WWW.SODBASE.COM
 SODBASECEP 入门与进阶教程
原理很简单，将需要显示的最新数据缓存在内存中，前端 Javasript 或 flash 定时取 最新值在图表中刷新。SODBASE View 模块做了 fail retry 和自带垃圾回收机制，防
止因为网络不稳定引起图表数据掉线，同时避免长时间实时图表绘制引起内存泄露。
1. 示例操作步骤
准备：机器上安装有 JDK 和 Tomcat1. 示例操作步骤
准备：机器上安装有 JDK 和 Tomcat 
（1）下载 sodbase-view-highcharts 工程 ，
将 sodbase-view-highcharts 工程中的 WebRoot 文件夹，拷贝到 Tomcat 的 webapps 中，命名为 sodbase-view-highcharts，启动 tomcat。
TomcatURI 编码设置为 UT。并查看 端口，比如说是080 
（2）下载 Sodbase Studio，解压后运行
（3）下载模拟数据源 ，解压后将 VD0001, 
VD0000 导入 Sodbase Studio。左边点击 VD0001，工作区面板右键点击，测试运 行。左边点击 VD0002，工作区面板右键点击，测试运行。
（4）在 Firefox 浏览器中打开 
http://localhost:18080/sodbase-view-highcharts/voltage.jsp北京速德贝斯科技有限公司 WWW.SODBASE.COM
 SODBASECEP 入门与进阶教程
可以测试停掉模拟数据源，在启动。实时图形能够继续显示。
2.工作原理
2.1 配置方法
（1）通过 sodbase-view-highcharts 工程下 WebRoot/voltage.jsp 
配置图形显示
$.post("ChartChangeServlet2D.do?series=220KV%20I%E6%AE%B5PT%E7%94 %B5%E5%8E%8B|110KV%20I%E6%AE%B5PT%E7%94%B5%E5%8E%8B&att ribute=voltagevalue",function(data,status){ 
series 是显示分组字段中哪些值的数据
attribute 是数据字段的名称
（2）WebRoot/WEB-INF/lib/ sodbase-view-dataservlet.jar 中com.sodbase.view.dataservlet 目录下 
config.properties 中配置接收数据端口和数据分组使用的字段。数据分组使用的字
段需要在 VD0001 的输出中。默认为 viewgroupbyid 
2.2 com.sodbase.view.dataservlet 中的数据接口 2.2.1 原理
	根据 com.sodbase.view.dataservlet 目录下配置文件 config.properties 中的 groupby 属性，将数据在内存中统一进行存储。不同的 servlet 则代表了不同的数据
查询方式。
北京速德贝斯科技有限公司 WWW.SODBASE.COM
 SODBASECEP 入门与进阶教程
在 VD0001 中，viewgroupbyid 就是 lineid。sodbase-view-dataservlet 会为每个 lineid 的数据建立一个缓冲区，一般图表前端显示的是某 lineid 最新的数据值。2.2.2 数据接口
数据接口兼容 FusionWidget 显示。Highcharts 是 Javascript 图形显示，好处是移 动端也可以用。具体接口以官方最新版为准，下面是写示例时版本中的接口。
2.2.2.1ChartChangeServlet1D 
查询格式:series= groupbyid 的值 &attribute=一个查询字段 输出格式:&value=数值 
例如：series=220KV 线路&attribute=voltagevalue 
返回的是 220KV 线路最新的电压值。
2.2.2.2ChartChangeServlet2D 
查询格式:series= groupbyid 的值列表以|分开  &attribute=一个查询字段 输出格式:&label=time&value=series1'svalue|series2's value|......例如：series=110KV 线路|220KV 线路&attribute=voltagevalue 返回的是 110KV 线路和 220KV 线路最新的电压值
2.2.2.3ChartChangeServlet3D 
查询格式:series= 一个 groupbyid 的值 &attribute=一个查询字段 输出格式:&label=time&value=值 1|值 2|..... 
不同series现在用不同的图表示,即一张图就一个series，可用在分组柱状图中，一
个 series 一次查询包含多个值，输出时用"|"分割。. 
北京速德贝斯科技有限公司 WWW.SODBASE.COM
 SODBASECEP 入门与进阶教程
注：要求 CEP event 输入的被查询数据字段包含多个数据，用","分割
。即要求事件字段 attribute 的值为以（值 1,值 2）以,分开的字符串。例：
	查询 ChartChangeServlet3D.do?series=测点 1&attribute=voltagevalue_amp 	输出&label=time&value=3|0.1|2 
返回的是测点 1 的 voltagevalue_amp 最新值。要求 voltagevalue_amp 的值就 是’3,0.1,2’，返回值用|分开是与 fusionwidgets 的格式兼容，在 highcharts 等其它图 表中也容易使用。
3. 移动端消息提醒（以 Android 为例）
功能将某个 SODSQL 语句输出的新事件发到 Android 客户端中，以 Notification 的 形式提醒用户。应用场景如：环境指标 COD 超阈值，发提醒。
下面第 1、2 步在 SODBASEView(highcharts)示例中使用过，如果有了 webapps 中的目录名称改为 sodbase-view-highcharts 即可。第一步：Eclipse 中，将 sodbase-view-highcharts 工程中的 WebRoot 文件夹，拷 贝到 Tomcat 的 webapps 中，命名为 sodbase-view-highcharts，启动 tomcat Tomcat 的 URI 编码设置为 UTF-8。服务器需要有外网地址，手机才能访问到。
第二步：在 SodbaseStudio 中同时运行例子 VD0001,       VD0000。VD0001 的输 出适配器的 ip 参数设置为 tomcat 服务器 ip 地址。
第三步：修改 res\values\strings.xml 中 url 的 ip:port 为自己的 tomcat 地址。运行 sodbase-view-androidnotifications 工程原理：需要在之前 Tomcat sodbase-view-highcharts 的基础上，运行这个 Web 应 用，就提供了一个 Restful 接口获取新的消息（也就是新的事件）
北京速德贝斯科技有限公司 WWW.SODBASE.COM
 SODBASECEP 入门与进阶教程
http://ip:port/sodbase-view-highcharts/NotificationServlet1D.do ?series=***&attrib ute=****&afterindex=****&indexattribute=_end_time_ 
使用方法见 SodbaseDataService.java 的 FetchViewDataTask 代码
在实际项目中，常常会需要输入数据不断的条件下，在线修改规则。例如：交
易策略中，以一定时间窗口的价格平均值和阈值比较决定交易行为。在时间窗易策略中，以一定时间窗口的价格平均值和阈值比较决定交易行为。在时间窗
口走到中间时，要修改阈值了。如果单纯的停掉这条 EPL，修改，再启动，之
前的时间窗口的数据就会丢失，即使不丢失，因为阈值变了，之前的中间结果
也不能再用。这种情况下，要保证数据的不丢失，同时保证结果的可解释性，
就需要用到 SODBASECEP 的 hot swap 在线修改规则功能。
前提条件是 CEP 模型中输入适配器不改变。SODSQL 和输出适配器可以在线 改变。要实现 Hot Swap 的 CEP 模型中只允许包含一个 SODSQL 语句。
1.示例操作步骤
（1）下载 ，导入 Eclipse 中
（2）运行 com.example.hotswap.HotSwapExample.java 
（3）输出结果
2.工作原理
SODBASE CEP 提供的在线修改规则接口有三个，需要配套使用。SODBASE CEP 提供的在线修改规则接口有三个，需要配套使用。
（1）以 Hot Swap 模式启动 EPL。要使用 Hot Swap 功能必须以此方式启动 EPL。
（2）以 Hot Swap 模式停止 EPL。EPL 并没有真正停止，而是处于允许修改
北京速德贝斯科技有限公司 WWW.SODBASE.COM
 SODBASECEP 入门与进阶教程
EPL 了。
（3）以 Hot Swap 模式重启 EPL。修改完 EPL,启动新的 EPL。
（2）和（3）之间的时间不能过长，导致输入累积过多而超过队列允许的最大