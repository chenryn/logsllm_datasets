Maybe there's some really easy way to make this work in TS that I'm not
seeing.
I want to load jQuery as an AMD module, not as a global. `jquery.d.ts`as
currently defined does not export a jquery external module. Instead it defines
the $ and jQuery variables as global variables.
Is there a simple way to declare an external module that has the same
signature as JQueryStatic?
If not, is it possible to change jquery.d.ts to support external module
loading?
Here's how I have it working so far. The problem is I have to manually copy
the whole JQueryStatic definition into jquery.d.ts. I don't want to do this. I
want to take advantage of your work. Is there something I should do
differently, or something that should be changed in jquery-1.8.d.ts?
folders
    public/
      components/
        DefinitelyTyped/ (etc)
    lib/
      jquery.d.ts
    main.ts
    config.js
config.js
    requirejs.config({
        paths: {
            'lib/jquery: 'path/to/jquery/lib',
        }
    })
main.ts
    import $ = module("lib/jquery")
    console.log("HI", $.ajax)
lib/jquery.d.ts
    ///
    declare module "lib/jquery" {
        export function ajax(settings: JQueryAjaxSettings): JQueryXHR;
        export function ajax(url: string, settings?: JQueryAjaxSettings): JQueryXHR;
        export function (selector: string, context?: any): JQuery;
        export function (element: Element): JQuery;
        export function (object: { }): JQuery;
        export function (elementArray: Element[]): JQuery;
        export function (object: JQuery): JQuery;
        export function (func: Function): JQuery;
        export function (array: any[]): JQuery;
        export function (): JQuery;
    }