### 访问模式概述

为了更好地理解四种主要的访问模式，以下是一个简明的表格总结：

| 模式/Mode | 访问许可 | 访问需求 | 能否访问不同级别数据 | 概括 |
| --- | --- | --- | --- | --- |
| 专用模式 (Dedicated) | 全局权限 | 不区分 | 数据不分级 | 一锅端 |
| 系统高级模式 (System High) | 全局权限 | 区分 | 不分级，按需访问数据 | 鸳鸯火锅按需吃 |
| 分隔模式 (Compartmented) | 不同权限 | 区分 | 数据按权限分级 | 自助火锅分开吃 |
| 多级模式 (Multilevel) | 不同权限 | 区分 | 数据分级 | 不同档次火锅店 |

此外，还有两种较少见的模式：
- **受控模式 (Controlled Mode)**：在硬件和软件上对多个等级的信任有更多限制。结果是对分类等级和级别的访问更加受限。
- **受限的访问模式 (Limited Access Mode)**：最小用户级别不明确，且最大数据敏感度未根据敏感性进行分类。

### 安全模型基础概念

#### 1. 令牌、功能和标签
- **Token (安全令牌)**：与资源关联的独立客体，描述其安全属性。（单个，是客体的）
- **Capabilities (功能列表)**：用于存储与多个客体相关的安全信息。（多个，是主体的）
- **Label (安全标签)**：客体附加的永久部分，不可修改。（是客体的）

#### 2. 可信计算基 (Trusted Computing Base, TCB)
- **定义**：TCB 是硬件、软件和控制方法的组合，形成一个实施安全策略的可信任基准。
- **组件**：
  - **可信路径 (Trusted Path)**：确保用户或程序与内核之间的通信通道不受危害。
  - **可信外壳 (Trusted Shell)**：防止任何进程“闯进来”或“逃出去”。
  - **安全边界 (Security Perimeter)**：TCB 与系统其他部分的逻辑边界，通过严格可信路径进行通信。
  - **引用监控器 (Reference Monitor)**：中介主体对客体的所有访问，确保主体拥有必要的访问权限，并保护客体不被未授权访问和破坏性更改。
  - **安全内核 (Security Kernel)**：TCB 的核心组件，是主体访问资源的中间人，通过可信路径与主体进行通信。

#### 3. 安全模型
- **访问控制模型**：
  - **访问矩阵 (Access Matrix)**
  - **访问控制表 (Access Control Matrix)**
  - **Bell-LaPadula 模型**
  - **Take-Grant 模型**
  - **状态机模型 (State Machine Model)**
- **完整性模型**：
  - **Biba 模型**
  - **Clark-Wilson 模型**
  - **目标**：
    - 防止未授权用户进行更改。
    - 防止授权用户进行不正确的更改（职责分离）。
    - 维护内部和外部的一致性（格式良好的事务处理）。
- **信息流模型**：
  - **信息流模型 (Information Flow Model)**
  - **非干扰/非相干模型 (Noninterference Model/Goguen-Meseguer Model)**
  - **Brewer and Nash 模型（中国墙 Chinese Wall 模型）**
  - **组合论 (Composition Theories)**
- **基于状态机的模型**：
  - **Bell-LaPadula 模型**
  - **Biba 模型**
  - **Brewer and Nash 模型**

### 详细模型介绍

#### 1. 访问控制矩阵 (Access Control Matrix)
- **定义**：由主体和客体组成的表，表示每个主体对每个客体的操作权限。
- **组成**：
  - **访问控制列表 (ACL)**：代表主体可以操作的客体。
  - **功能列表/访问能力列表 (Capabilities List)**：代表客体可以被如何操作。
- **优点**：能够快速找出相关联的主体和客体并作出相应修改。
- **缺点**：没有考虑主体间的关系和客体的共享。

#### 2. 取—予模型 (Take-Grant 模型)
- **定义**：采用有向图表示访问权限如何在主体中传递。
- **规则**：
  - **Grant**：具有授权资格的主体可以向另一个主体或客体授予权限。
  - **Take**：具有获得权利的主体可以向另一个主体请求获得受益人权限。
  - **Create** 和 **Remove**：生成和删除权限。
- **应用**：常用于账户管理系统，管理员可以分配下级用户，下级用户还可以分配子用户。

#### 3. Bell-LaPadula 模型 (BLP)
- **定义**：多级安全系统，解决机密性问题，防止信息从高流向低。
- **规则**：
  - **简单安全规则 (Simple Security Property)**：不能上读 (no read up)。
  - ***属性规则 (* Security Property)**：不能下写 (no write down)。
  - **强星属性规则 (Discretionary Security Property)**：主、客体必须同等级才能读写。
- **特点**：只解决机密性问题，不支持完整性和可用性。

#### 4. Biba 模型
- **定义**：解决完整性问题，防止信息从低流向高。
- **规则**：
  - **简单完整性规则 (Simple Integrity Property)**：不能下读 (no read down)。
  - ***完整性规则 (Star Integrity Property)**：不能上写 (no write up)。
  - **引援/调用规则 (Invocation Property)**：主体不能请求完整性级别更高的主体的服务。
- **特点**：只解决完整性问题，不支持机密性和可用性。

#### 5. 状态机模型 (State Machine Model)
- **定义**：基于有限状态机理论，确保系统在所有状态下都是安全的。
- **组成**：
  - **状态**：系统在特定时刻的即时快照。
  - **安全状态**：系统的某个状态的所有指标参数都是安全的。
  - **状态转换公式**：下一状态 = F(输入, 当前状态)。
- **评估**：所有状态转换必须进行评估，如果系统的每一个状态都是安全的，则称为安全状态机。

#### 6. 格子型访问控制 (Lattice-Based Access Control)
- **定义**：属于非自主访问控制 (UDAC)，解决机密性问题。
- **特点**：
  - **二维坐标**：指定主体所拥有的权限。
  - **格子型坐标面**：主体能访问的数据级别清晰，高的低的都不能访问。

#### 7. Clark-Wilson 模型
- **定义**：实现数据的完整性，主要用于商业应用。
- **关键术语**：
  - **用户 (Users)**：活动个体 (主体)。
  - **转换过程 (TP)**：允许更改 CDI 的唯一过程。
  - **约束数据项 (CDI)**：由 TP 控制，完整性被保护的数据项。
  - **非约束数据项 (UDI)**：不受 TP 控制，用户直接操作的数据项。
  - **完整性验证过程 (IVP)**：检查 CDI，确认其完整性的过程。
- **原理**：通过 TP 限制对 CDI 的访问，用户不能直接操作数据，必须通过身份验证后，根据授权通过 TP 来操作数据。
- **访问三元组 (Access Triple)**：主体、程序/过程 (TP)、客体 (CDI)。
- **目标**：
  - 防止未授权的更改。
  - 防止授权用户的不正当更改（职责分离）。
  - 保持内、外部数据的一致性（格式良好的事务处理）。

希望这些优化后的文本能够帮助你更好地理解和记忆这些复杂的安全模型和访问模式。