(kmid,id(cid:48) )id∈I D,id(cid:48)∈I D(cid:48), ID, ID(cid:48)(cid:17)
b(cid:48) ← A(cid:16)
endif
return b(cid:48)
Figure 4: ERTMS key derivation security game for an adver-
sary A.
ID(cid:48), and computes a guess b(cid:48) ∈ {0, 1}. (cid:140)e output of the
experiment is b(cid:48).
(cid:140)e advantage of an adversary A against the security of the
keys generated in ERTMS is de(cid:128)ned as:
− Pr
Exp0A (KMAC) = 1
AdvA =
(cid:21)
(cid:20)
(cid:20)
(cid:12)(cid:12)(cid:12)(cid:12)Pr
(cid:21)(cid:12)(cid:12)(cid:12)(cid:12)
Exp1A (KMAC) = 1
(cid:140)e key is indistinguishable from random if the advantage is
negligible in λ.
In the following, we will show that both the current ERTMS
scheme KMACERT MS , and our proposed scheme KMACT RAKS ,
produce keys that are indistinguishable from random.
Key Indistinguishably for KMACERT MS . It is easy to observe
that the advantage of the adversary is based on its ability to dis-
tinguish the output produced by GEN.KMAC from random. How-
ever, the protocol speci(cid:128)cation (see Algorithm 1) shows that the
key kmid,id(cid:48) for any pair (id, id(cid:48)) is already randomly sampled.
(cid:140)us, the advantage of A to distinguish kmid,id(cid:48) from random,
|Pr[Exp0A (KMACERT MS ) = 1] − Pr[Exp1A (KMACERT MS ) = 1]|,
is negligible in λ.
Key Indistinguishably for KMACT RAKS . Based on the protocol
speci(cid:128)cation (presented in Algorithm 2) there are three cases for
GEN.KMAC.
Case 2. If two identi(cid:128)ers id and id(cid:48) are provided as inputs to
GEN.KMAC then the key kmid,id(cid:48) is generated as follows:
(1) An intermediary key is generated by running the PRF with
the secret s and input id. As shown in Case 1, this is indis-
tinguishable from random.
(2) (cid:140)e previously generated intermediary key is used as a
secret in a second PRF run that also takes as input id(cid:48). If the
PRF is secure then this output will also be indistinguishable
from random.
ACSAC 2017, December 4–8, 2017, San Juan, PR, USA
Richard J. Thomas, Mihai Ordean, Tom Chothia, and Joeri de Ruiter
Case 3.
If identi(cid:128)er id(cid:48) is provided together with the secret
kmid,null as inputs to GEN.KMAC then the key kmid,id(cid:48) is gener-
ated as in the Case 2.2 above, i.e. the value kmid,null is used as an
input, together with id(cid:48) to a PRF. As kmid,null is indistinguishable
from random (see Case 1), if this PRF is also secure then the output
will be indistinguishable from random.
(cid:140)us, the advantage of A to distinguish any kmid,id(cid:48) for TRAKS,
|Pr[Exp0A (KMACT RAKS ) = 1] − Pr[Exp1A (KMACT RAKS ) = 1]|
will also be negligible in λ for any pair (id, id(cid:48)).
7 THE TRAKS KEY MANAGEMENT
LIFECYCLE
In this section, we outline the key lifecycle for TRAKS, beginning
with how the keys will be used and the changes required to support
TRAKS. We then look at other aspects, for example key revocation
and disposal of RBCs and trains.
Key Usage. Under our proposal, the RBC will be in an improved
position, whereby it does not require individual keys to be assigned
to it for a particular train. It is now able to derive its own symmetric
keys based on some public information broadcast by the train,
namely the ETCS ID. As a result, an RBC only requires a single key
to be installed on it, which it uses to derive the keys which will
correspond to those of the train. In the event that the RBC so(cid:137)ware
does not support dynamic key generation, it may proceed using the
same set of keys that would be allocated to trains for that RBC ID.
Within the EuroRadio protocol, no changes are required to the core
protocol that takes place, other than the way that the lookup of the
key takes place. Currently, the RBC will use its ETCS ID and look
for a corresponding entry that pairs the RBC to the Train ETCS
ID and vice versa for the train. If an entry exists, it will use that
key, otherwise, the EuroRadio protocol will fail as no key could be
found. For our proposal, the RBC instead uses the kmrid,null key,
to derive the key which it can then use to compute a symmetric
session key for the MAC authentication in EuroRadio.
For the train, when keys are allocated, the KMC will look up
a set of the RBCs within the NID Cs speci(cid:128)ed as authorised, and
carry out the computation of kmrid,oid for each RBC. As with the
current scheme [19], the train will receive a set of keys, which, upon
the receipt of the the (cid:128)rst response message from the RBC in the
EuroRadio handshake (the AU2 message), can select the appropriate
kmrid,oid key to use.
Revocation. In this scheme, trains may have their keys revoked
using the ‘DELETE KEY’ command, issued by the KMC, and likewise
for the RBC. A blacklist, which would be made available for entities
to download during maintenance or stabling would inform the train
of RBCs it may no longer engage with, and vice versa for the RBC.
However, if there is cause to ‘reintroduce’ that particular ETCS ID,
there is no solution but either to generate a new knid c, which is an
intensive process to rekey all existing entities, or change the ETCS
ID of the a(cid:130)ected entity. (cid:140)is, however, should be considered a very
rare event. Validity of keys would be governed under the validity
of knid c, ensuring that keys are refreshed on a regular, enforced
basis. In the event that a train or RBC are to be reintroduced, a new
ETCS ID should be introduced, as we consider all keys issued to the
original ID to be compromised and should not be eligible for reuse.
Disposal and End-of-Life. Keys should have a set lifetime, which
is subject to further discussion and scoping. However, at the end
of a key’s validity, a ‘DELETE KEY’ command should be issued to
the entity to remove the key, and a con(cid:128)rmation received that
the key has been deleted. At the point of end-of-life, in order to
prevent cryptographic material being leaked, a ‘DELETE ALL KEYS’
command should be issued by the KMC, where the entity con(cid:128)rms
receipt of the command, prior to deleting its kt keys. During this
process, the KMC should retain a copy of the keys, but mark them
as invalid, to prevent any keys pertaining to that entity from being
issued. If the entity operates across borders, the appropriate Key
Management Authorities responsible for cross-border keys should
be requested to initiate their appropriate ‘DELETE ALL KEYS’ com-
mand. A(cid:137)er this point, the entity in question may be disposed
of.
7.1 Discussion
(cid:140)e solution presented in this section has been engineered to be
backwards-compatible, such that infrastructure managers may im-
mediately begin to shi(cid:137) to this alternative solution with no changes
to the internal way in which EuroRadio operates. All changes here
may be performed in so(cid:137)ware, with most of the code changes lying
on the Key Management Centre and RBC interfaces.
(cid:140)at said, our solution can work in both o(cid:132)ine and online situa-
tions, where in the o(cid:132)ine mode, the RBC requires one initialisation
and installation of its derivation and kt keys, compared to a visit
by an engineer each time a train is introduced to the network and
requires ‘approval’ to communicate with this particular RBC. For
trains, however, the keys at the point of manufacture may be in-
stalled at the same time, whilst updates may take place whilst the
train is stabled and undergoing maintenance. If a train were to be
‘moved’ and made operational in a di(cid:130)erent geographic region3,
then the blacklist for the ‘previous’ RBCs should be updated to
contain that train unless it was going to continue operating in that
region. Likewise, a ‘DELETE ALL KEYS’ command should be issued
if the train will no longer operate in a given area.
In the online method, when an RBC comes online for the (cid:128)rst
time and has carried out the appropriate TLS handshake and client
authentication with the KMC, the KMC will simply issue the deriva-
tion key and appropriate constraints, as set out in SUBSET-038
[17]. For a new train, however, the process simply is an online
version of the o(cid:132)ine system, where instead of physical media being
used, an online connection is used. Overall, this solution provides
the additional protection that if the Key Management Centre went
o(cid:132)ine, the entities still retain su(cid:129)cient keying material to carry
out the EuroRadio Handshake. A train should not be allowed to
make a journey for which it does not have the appropriate keying
material to proceed. (cid:140)is prevents a situation where the GSM con-
nection between the train and RBC is instead redirected to an RBC
in another area, where an unsafe instruction may be issued.
We should also consider the case of existing trains which are
currently operational. Under the existing o(cid:132)ine model, each train
has a unique key shared with the appropriate RBC on its ‘allowed
routes’. (cid:140)is provides an challenging operational concept, where
3For example, the West Midlands franchise in the United Kingdom is likely to receive
17 of the former Northern franchise British Rail Class 323 electrical multiple units.
TRAKS: A Universal Key Management Scheme for ERTMS
ACSAC 2017, December 4–8, 2017, San Juan, PR, USA
during the process of national deployment, the line secret may be
set up and appropriate derivation keys established. (cid:140)is means that
as RBCs are introduced, no additional keys need to be introduced to
trains, and they may immediately be in a position to communicate
with the RBC. However, once a national deployment is complete,
the process of adding additional keys is expensive, and there are
few storage bene(cid:128)ts to having few keys. (cid:140)us, the KMC may be
able to ‘precompute’ the keys for the train, where the RBC is still
required to carry out the appropriate calculations.
For existing lines and entities, their keys will remain valid until
the validity period expires, in which course, a replacement key will
be issued based on this speci(cid:128)cation.
underlying infrastructure are:
Identi(cid:128)ed changes to the EuroRadio Protocol (in so(cid:137)ware) and
• Modi(cid:128)cation of the way that an RBC looks up keys: it will
not perform a lookup, rather it will simply carry out the
appropriate key generation computation (as per Algorithm
2) for the key that will allow it to communicate with the
train. Trains will continue to be statically keyed, with no
changes required.
• Establishing ‘line secrets’ that correspond to a speci(cid:128)c
NID C and appropriately generating kmrid,oid keys for
RBCs and trains based on this principle.
8 KEY DISTRIBUTION
In the current ERTMS distribution scheme, the transport key is
issued by the KMC in the clear, with a requirement on the inter-
mediary to use trusted media (ranging from CD to USB storage).
During national deployment, there will be a signi(cid:128)cant number of
transport keys being issued, with the risk that multiple transport
key payloads will be stored on the same media4. As the transport
key is installed in the clear, an a(cid:138)acker could intercept the transport
keys at the point of installation.
Once the a(cid:138)acker has the transport keys, they are able to inter-
cept the encrypted keys from the Key Management Centre when
they are installed on the train or RBC. For a train, this means that
the a(cid:138)acker can determine the session key with relative ease if they
observe the EuroRadio handshake protocol between the train and
an RBC. In the case of an RBC, however, this means that an a(cid:138)acker
could initiate arbitrary EuroRadio sessions with valid MACs, or
even worse, send arbitrary messages to a train with a valid MAC,
once the nonces have been obtained which the train would accept.
(cid:140)e current scheme is not secure due to this threat, and we propose
a new key distribution scheme as follows:
Manufacture/Commissioning. (cid:140)e train/RBC creates its own
pair of transport keys, kt1 and kt2, using a hardware security mod-
ule, exported using a pair of symmetric keys, kv1 and kv2, burnt
into the module by the vendor or operator to encrypt and MAC
the payload containing the transport keys and the ERTMS identity
of the train or RBC. We place a requirement that the vendor has
a secure supply chain and the keys are securely generated and
handled. If the vendor keys are compromised, new trusted keys
would need to be installed onto every train/RBC from that vendor
through their update mechanism.
4(cid:140)e RBC and OBU selects a speci(cid:128)c (cid:128)le from the media for its payloads, typically
bound using its ETCS ID[19].
Key Requesting from Infrastructure Manager. (cid:140)e vendor/op-
erator generates a request to the national infrastructure manager
(KMC) for the appropriate keys to be installed, providing the trans-
port keys generated by the train or RBC. (cid:140)is request is encrypted
and MACed with a pair of symmetric keys issued by the KMC to
the ‘approved’ vendor or operator, kv,kmc1 and kv,kmc2. As a ven-
dor may be responsible for manufacturing trains and RBCs for use
in di(cid:130)erent countries, they determine the appropriate countries
that keys are required for and submit requests to the appropriate
infrastructure managers.
KMC Processes Request. (cid:140)e KMC veri(cid:128)es the request, as per
nationally agreed procedures and, if valid, generates the appropriate
kmrid,oid keys as required, encrypted and accompanied by a MAC
using the transport keys given and stored as part of the request.
(cid:140)e scheme accounts for two cases, dynamic key generation ability
and static key usage. For each case:
• Ability to dynamically generate keys. (cid:140)e Key Man-
agement Centre computes a ‘master derivation key’, i.e.
kmrid,null as per Algorithm 2, with no additional identity
parameter included. It then encrypts and generates a MAC
using the transport keys, before issuing the result to the
vendor/operator.
• Static key usage. (cid:140)e Key Management Centre identi(cid:128)es
the keys required, and generates a set of keys based on
the NID Cs provided in the request. (cid:140)is is done through re-
peated runs of Algorithm 2, with the appropriate kmrid,null
for the set of RBCs located in the appropriate NID C that
the train requires keys to authenticate to them. (cid:140)ese keys
are encrypted then MACed using the transport keys, prior
to issuing them to the vendor/operator.
Key Installation. (cid:140)e vendor/operator then installs the payload
of km keys onto the train/RBC where it will verify the MAC and
decrypt the keys before installing/performing the maintenance in-
struction as required. As part of this, the train or RBC will generate
a response to con(cid:128)rm the keys are installed, “KEYS INSTALLED”,