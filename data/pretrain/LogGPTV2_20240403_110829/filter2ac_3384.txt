### Title: Pspray: From Identifying a New Logical Flaw in the Linux Kernel to Developing a Novel Heap Exploitation Technique

**Abstract:**

Reliable exploitation is a critical requirement for highly targeted and high-value attacks, such as Advanced Persistent Threats (APTs). If an exploit is unreliable, it can lead to failures such as kernel crashes or panics, which are easily detectable. This detection not only results in the loss of valuable 0-day vulnerability information but also incurs significant engineering costs for developing new exploits.

In this presentation, we introduce Pspray, a novel memory exploitation technique for the Linux kernel that significantly enhances the reliability of exploitation. Our approach is designed to be effective against a wide range of memory vulnerabilities, including heap out-of-bounds, use-after-free, and double-free issues.

The core innovation behind Pspray lies in the development of timing side-channels within the Linux SLUB allocator. By leveraging these side-channels, we have reengineered traditional exploitation techniques to precisely predict the runtime behavior of SLUB. This precision allows Pspray to avoid unexpected failures, thereby increasing the success rate of the attack.

We applied Pspray to ten real-world Linux kernel vulnerabilities, achieving a substantial improvement in the attack success probability from 56.1% to 97.92%.

**Key Points:**
- **Problem:** Unreliable exploitation leads to detectable failures, resulting in financial and informational losses.
- **Solution:** Pspray, a new heap exploitation technique that uses timing side-channels in the SLUB allocator to enhance reliability.
- **Impact:** Significant increase in the success rate of exploiting real-world Linux kernel vulnerabilities.

This talk will provide a detailed overview of the Pspray technique, its implementation, and the results of our experiments.