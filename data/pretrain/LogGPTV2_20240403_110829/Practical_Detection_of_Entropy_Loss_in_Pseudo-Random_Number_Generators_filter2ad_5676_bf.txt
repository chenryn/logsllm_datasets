and applications to TLS. In Masayuki Abe and Virgil Gligor, editors, ASIACCS 08: 3rd Conference
on Computer and Communications Security, pages 21–32, Tokyo, Japan, March 18–20, 2008. ACM
Press. 114
Niels Ferguson, Bruce Schneier, and Tadayoshi Kohno. Cryptography Engineering: Design Princi-
ples and Practical Applications. Wiley Publishing, 2010. 135
Shaﬁ Goldwasser and Mihir Bellare. Lecture notes on cryptography, 2001. 9, 25, 114
Oded Goldreich, Shaﬁ Goldwasser, and Silvio Micali. How to construct random functions. J. ACM,
33(4):792–807, 1986. 23
François Goichon, Cédric Lauradoux, Guillaume Salagnac, and Thibaut Vuillemin. Entropy trans-
fers in the Linux Random Number Generator. Rapport de recherche RR-8060, INRIA, September
2012. 119
Zvi Gutterman, Benny Pinkas, and Tzachy Reinman. Analysis of the linux random number gen-
erator. In 2006 IEEE Symposium on Security and Privacy, pages 371–385, Berkeley, California,
USA, May 21–24, 2006. IEEE Computer Society Press. 5, 115, 119
Peter Gutmann.
practically
Proceedings
http://www.cypherpunks.to/ peter/06_random.pdf, 1998.
38, 43, 47, 48, 49, 125
Nadia Heninger, Zakir Durumeric, Eric Wustrow, and J. Alex Halderman. Mining your Ps and
Qs: Detection of widespread weak keys in network devices. In Proceedings of the 21st USENIX
Security Symposium, August 2012. 5
The Heartbleed Bug, 2014. http://heartbleed.com. 4
Johan Håstad, Russell Impagliazzo, Leonid A. Levin, and Michael Luby. A pseudorandom generator
from any one-way function. SIAM Journal on Computing, 28(4):1364–1396, 1999. 19
2014.
Recent Fixes
blog/2014/05/06/recent-ﬁxes-ibmsecurerandom/. 133
Russell Impagliazzo. A Personal View of Average-Case Complexity. In Structure in Complexity
Theory Conference, pages 134–147, 1995. 104
random numbers.
at
v, 3, 5, 22, 27, 28, 29, 30, 32,
http://www.cigital.com/justice-league-
IBM SecureRandom,
Software
7th USENIX Security
generation
of
available
of
the
strong
Symposium. Full
version
in
— 145 —
Bibliography
[ISO11]
[KHL13]
[Kil11]
[Koo02]
[KSWH98]
[LHA+12]
[LRSV12]
[Luc00]
[MMS13]
[MOP07]
[MR04]
[Net96]
[NS02]
[NZ93]
[Ope13]
[Pie09]
[Pol]
[PR13]
[Pul]
Information technology - Security techniques - Random bit generation. ISO/IEC18031:2011, 2011.
3
Soo Hyeon Kim, Daewan Han, and Dong Hoon Lee. Predictability of android OpenSSL’s pseudo
random number generator.
In Ahmad-Reza Sadeghi, Virgil D. Gligor, and Moti Yung, editors,
ACM CCS 13: 20th Conference on Computer and Communications Security, pages 659–668, Berlin,
Germany, November 4–8, 2013. ACM Press. 5
Killmann, W. and Schindler, W. A proposal for: Functionality classes for random number genera-
tors. AIS 20 / AIS31, 2011. 3
Philip Koopman. 32-bit cyclic redundancy codes for internet applications. In Proceedings of the
2002 International Conference on Dependable Systems and Networks, DSN ’02, pages 459–472,
Washington, DC, USA, 2002. IEEE Computer Society. 120
John Kelsey, Bruce Schneier, David Wagner, and Chris Hall. Cryptanalytic attacks on pseudoran-
dom number generators. In Serge Vaudenay, editor, Fast Software Encryption – FSE’98, volume
1372 of Lecture Notes in Computer Science, pages 168–188, Paris, France, March 23–25, 1998.
Springer, Berlin, Germany. v, 3, 5, 22, 27, 28, 29, 30, 32, 38, 43, 47, 48, 49, 129, 132
Arjen K. Lenstra, James P. Hughes, Maxime Augier, Joppe W. Bos, Thorsten Kleinjung, and
Christophe Wachter. Public keys. In Reihaneh Safavi-Naini and Ran Canetti, editors, Advances in
Cryptology – CRYPTO 2012, volume 7417 of Lecture Notes in Computer Science, pages 626–642,
Santa Barbara, CA, USA, August 19–23, 2012. Springer, Berlin, Germany. 5
Patrick Lacharme, Andrea Rock, Vincent Strubel, and Marion Videau. The linux pseudorandom
number generator revisited. Cryptology ePrint Archive, Report 2012/251, 2012. 115, 119, 124
Stefan Lucks. The sum of PRPs is a secure PRF. In Bart Preneel, editor, Advances in Cryptology
– EUROCRYPT 2000, volume 1807 of Lecture Notes in Computer Science, pages 470–484, Bruges,
Belgium, May 14–18, 2000. Springer, Berlin, Germany. 111
Kai Michaelis, Christopher Meyer, and Jörg Schwenk. Randomly failed! the state of randomness
in current java implementations. In Ed Dawson, editor, Topics in Cryptology – CT-RSA 2013,
volume 7779 of Lecture Notes in Computer Science, pages 129–144, San Francisco, CA, USA,
February 25 – March 1, 2013. Springer, Berlin, Germany. 5, 114, 127, 131
Stefan Mangard, Elisabeth Oswald, and Thomas Popp. Power analysis attacks - revealing the
secrets of smart cards. Springer, 2007. 93
Silvio Micali and Leonid Reyzin. Physically observable cryptography (extended abstract). In Moni
Naor, editor, TCC 2004: 1st Theory of Cryptography Conference, volume 2951 of Lecture Notes in
Computer Science, pages 278–296, Cambridge, MA, USA, February 19–21, 2004. Springer, Berlin,
Germany. 44
How secure is the World Wide Web?,
netscape.html. 5
Phong Q. Nguyen and Igor Shparlinski. The insecurity of the digital signature algorithm with
partially known nonces. Journal of Cryptology, 15(3):151–176, 2002. 5
Noam Nisan and David Zuckerman. More deterministic simulation in logspace. In 25th Annual
ACM Symposium on Theory of Computing, pages 235–244, San Diego, California, USA, May 16–18,
1993. ACM Press. 13
OpenSSL
PRNG
http://emboss.github.io/blog/2013/08/21/openssl-prng-is-not-really-fork-safe/. 126
Krzysztof Pietrzak. A leakage-resilient mode of operation.
In Antoine Joux, editor, Advances
in Cryptology – EUROCRYPT 2009, volume 5479 of Lecture Notes in Computer Science, pages
462–482, Cologne, Germany, April 26–30, 2009. Springer, Berlin, Germany. 4, 44
PolarSSL is an open source and commercial SSL library licensed by Oﬀspark B.V.
https://polarssl.org. 73, 109, 135
Emmanuel Prouﬀ and Matthieu Rivain. Masking against side-channel attacks: A formal security
proof. In Thomas Johansson and Phong Q. Nguyen, editors, Advances in Cryptology – EURO-
CRYPT 2013, volume 7881 of Lecture Notes in Computer Science, pages 142–159, Athens, Greece,
May 26–30, 2013. Springer, Berlin, Germany. 4, 44
The emergence of complexity in mathematics, physics, chemistry and biology. Proceedings of the
plenary session of the Pontiﬁcal Academy of Sciences, Vatican City, Italy, October 27-31 1992.
Edited by Bernard Pullman. iv, 137
, 1996. http://www.cs.berkeley.edu/ daw/papers/ddj-
Fork-safe,
2013.
Is
Not
(Really)
Aug
21st,
— 146 —
Bibliography
SecurityTracker Alert ID: 1028916. SecurityTracker, 2013. 5
Claude Elwood Shannon. A mathematical theory of communication. The Bell System Technical
Journal, 27, 1948. 12
Secure hash standard. National Institute of Standards and Technology, NIST FIPS PUB 180-1,
U.S. Department of Commerce, April 1995. 113, 128, 129
Ronen Shaltiel. Recent developments in explicit constructions of extractors. Bulletin of the EATCS,
77:67–95, 2002. 12
Victor Shoup. A computational introduction to number theory and algebra. Cambridge University
Press, 2006. 9, 10, 16
François-Xavier Standaert, Olivier Pereira, and Yu Yu. Leakage-resilient symmetric cryptography
under empirically veriﬁable assumptions. In Ran Canetti and Juan A. Garay, editors, Advances
in Cryptology – CRYPTO 2013, Part I, volume 8042 of Lecture Notes in Computer Science, pages
335–352, Santa Barbara, CA, USA, August 18–22, 2013. Springer, Berlin, Germany. 4
Miklos Santha and Umesh V. Vazirani. Generating quasi-random sequences from slightly-random
sources (extended abstract).
In 25th Annual Symposium on Foundations of Computer Science,
pages 434–440, Singer Island, Florida, October 24–26, 1984. IEEE Computer Society Press. 13, 14
Amit Sahai and Salil P. Vadhan. A complete problem for statistical zero knowledge. J. ACM,
50(2):196–249, 2003. 53
Open Crypto Audit Project, 2015. https://opencryptoaudit.org. 135
Luca Trevisan and Salil P. Vadhan. Extracting randomness from samplable distributions. In 41st
Annual Symposium on Foundations of Computer Science, pages 32–42, Redondo Beach, California,
USA, November 12–14, 2000. IEEE Computer Society Press. 18
Salil Vadhan. Pseudorandomness, draft survey monograph, 2012. 9, 16, 20
[SEC13]
[Sha48]
[SHA95]
[Sha02]
[Sho06]
[SPY13]
[SV84]
[SV03]
[Tru15]
[TV00]
[VGS14]
[Vad12]
[vdVdSCB12] Victor van der Veen, Nitish dutt Sharma, Lorenzo Cavallaro, and Herbert Bos. Memory errors:
The past, the present, and the future.
In Proceedings of the 15th International Conference on
Research in Attacks, Intrusions, and Defenses, RAID’12, pages 86–106, Berlin, Heidelberg, 2012.
Springer-Verlag. 4
Nicolas Veyrat-Charvillon, Benoît Gérard, and François-Xavier Standaert. Soft analytical side-
channel attacks.
In Palash Sarkar and Tetsu Iwata, editors, Advances in Cryptology – ASI-
ACRYPT 2014, Part I, volume 8873 of Lecture Notes in Computer Science, pages 282–296, Kaoshi-
ung, Taiwan, R.O.C., December 7–11, 2014. Springer, Berlin, Germany. 109
John Von Neumann. 13. various techniques used in connection with random digits. 1951. 13
Yu Yu and François-Xavier Standaert. Practical leakage-resilient pseudorandom objects with min-
imum public randomness. In Ed Dawson, editor, Topics in Cryptology – CT-RSA 2013, volume
7779 of Lecture Notes in Computer Science, pages 223–238, San Francisco, CA, USA, February 25 –
March 1, 2013. Springer, Berlin, Germany. 4, 44, 45, 46, 47, 103, 104, 105, 107, 109, 137, 138
Yu Yu, François-Xavier Standaert, Olivier Pereira, and Moti Yung. Practical leakage-resilient
pseudorandom generators. In Ehab Al-Shaer, Angelos D. Keromytis, and Vitaly Shmatikov, edi-
tors, ACM CCS 10: 17th Conference on Computer and Communications Security, pages 141–151,
Chicago, Illinois, USA, October 4–8, 2010. ACM Press. 4, 44, 45, 46, 137
[VN51]
[YS13]
[YSPY10]
— 147 —
Abstract
In cryptography, randomness plays an important role in multiple applications. It is required in
fundamental tasks such as key generation and initialization vectors generation or in key exchange.
The security of these cryptographic algorithms and protocols relies on a source of unbiased and
uniform distributed random bits. Cryptography practitioners usually assume that parties have
access to perfect randomness. However, quite often this assumption is not realizable in practice
and random bits are generated by a Pseudo-Random Number Generator. When this is done,
the security of the scheme depends of course in a crucial way on the quality of the (pseudo-
)randomness generated. However, only few generators used in practice have been analyzed and
therefore practitioners and end users cannot easily assess their real security level.
We provide in this thesis security models for the assessment of pseudo-random number generators
and we propose secure constructions. In particular, we propose a new deﬁnition of robustness
and we extend it to capture memory attacks and side-channel attacks. On a practical side, we
provide a security assessment of generators used in practice, embedded in system kernel (Linux
/dev/random) and cryptographic libraries (OpenSSL and Java SecureRandom), and we prove
that these generators contain potential vulnerabilities.
Keywords: pseudo-random number generators, security models, robustness, memory attacks,
side-channel attacks, Linux /dev/random, OpenSSL, Java SecureRandom.
Résumé
La génération d’aléa joue un rôle fondamental en cryptographie et en sécurité. Des nombres aléa-
toires sont nécessaires pour la production de clés cryptographiques ou de vecteurs d’initialisation
et permettent également d’assurer que des protocoles d’échange de clé atteignent un niveau de
sécurité satisfaisant. Dans la pratique, les bits aléatoires sont générés par un processus de
génération de nombre dit pseudo-aléatoire, et dans ce cas, la sécurité ﬁnale du système dépend
de manière cruciale de la qualité des bits produits par le générateur. Malgré cela, les générateurs
utilisés en pratique ne disposent pas ou peu d’analyse de sécurité permettant aux utilisateurs
de connaître exactement leur niveau de ﬁabilité.
Nous fournissons dans cette thèse des modèles de sécurité pour cette analyse et nous proposons
des constructions prouvées sûres et eﬃcaces qui répondront à des besoins de sécurité forts. Nous
proposons notamment une nouvelle notion de robustesse et nous étendons cette propriété aﬁn
d’adresser les attaques sur la mémoire et les attaques par canaux cachés. Sur le plan pratique,
nous eﬀectuons une analyse de sécurité des générateurs utilisés dans la pratique, fournis de
manière native dans les systèmes d’exploitation (/dev/random sur Linux) et dans les librairies
cryptographiques (OpenSSL ou Java SecureRandom) et nous montrons que ces générateurs con-
tiennent des vulnérabilités potentielles.
Mots clés : générateurs de nombres pseudo-aléatoires, modèles de sécurité, robustesse, at-
taques contre la mémoire, attaques par canaux cachés, Linux /dev/random, OpenSSL, Java
SecureRandom.