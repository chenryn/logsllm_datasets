denoted by Ns. In addition, there are also a set of content nodes (as the leaf nodes in CBN) denoted by Nt for repre-senting textual information of log data. For simplicity, the discussion below will mainly focus on those structural nodes. Fig. 2 shows the basic structure of CBN, which is a directed graph with T0 and T1 as its subgraphs. In fact, each node in this CBN has node c for the corresponding category as its father (which is omitted for sake of simplicity). According to quantified similarity results, the structural nodes can be divided into two groups, including combination group and private group. The combination group contains the nodesThe task of finding consistency between similar elements of two schemas is often regarded as matching. In this subsection, we will estimate element similarity degrees by schema match-ing. As for the matching method, we have made a reference to the similarity flooding algorithm [26]. This algorithm takes two graphs (schemas, catalogs, or other data structures) as input, and produces a mapping between corresponding nodes of the graphs as output. Based on the similarity flooding algorithm, our method tries to find a mapping between corresponding nodes of the schema trees. Moreover, we utilize graded structural infor-mation in different stages, which can improve both of initialwhich have the corresponding nodes or their similar mapping accuracy and computation efficiency. In the matching
Fault
| FaultCode | DetailEntries | Description | FaultEntries | FaultString |
|---|---|---|---|---|
| name |value |Scope |faultEvent |activity |
| name |encodingURI |encodingURI |encodingURI |activity |
| type |encodingURI |encodingURI |encodingURI |activity || type |SourceActivity |SourceActivity |SourceActivity |activity |
Fig. 2. Basic structure of the CBN by combining T0 and T1.
X. Han et al. / CAAI Transactions on Intelligence Technology 1 (2016) 61e71 	65
process, we take T0 and T1 as input, and produce similarity de-grees betweencorresponding nodes of T0 and T1 as output. There
Table 1 
Similarity estimation result.Table 1 
Similarity estimation result.
| are two steps in this process based on pairwise graph, including | are two steps in this process based on pairwise graph, including | Node in T0 | Node in T1 | Similarity (Sim) |
|---|---|---|---|---|
| initial matching and similarity propagation. In initial matching, |initial matching and similarity propagation. In initial matching, |Fault |Fault |0.90 || we additionally exploit the structural information in attribute |we additionally exploit the structural information in attribute |DetailEntries |DetailEntries |0.68 |
| level. Given two nodes m0 and n1 of T0 and T1 which has |level. Given two nodes m0 and n1 of T0 and T1 which has |DetailEntries |FaultEntries |0.44 |
| level. Given two nodes m0 and n1 of T0 and T1 which has |level. Given two nodes m0 and n1 of T0 and T1 which has |FaultEvent |FaultEvent |0.19 || attribute sets Am and An respectively, we will match attributes |attribute sets Am and An respectively, we will match attributes |FaultEvent |FaultEvent |0.19 |
| attribute sets Am and An respectively, we will match attributes |attribute sets Am and An respectively, we will match attributes |SourceActivity |Activity |0.19 || of A and A as well as. names of m0 and n1. The computation |of A and A as well as. names of m0 and n1. The computation |SourceActivity |Activity |0.19 |
| of A and A as well as. names of m0 and n1. The computation |of A and A as well as. names of m0 and n1. The computation |Name |Name |0.17 |
| formula is |formula is |Name |Name |0.17 |
| formula is |formula is |Type |Type |0.17 || Sim0ðm0;n1Þ ¼ qjAm∩Anj jAmj þ jAnj þ ð1 qÞ StrSimðm0;n1Þ |ð1Þ |Value |Value |0.17 |
| Sim0ðm0;n1Þ ¼ qjAm∩Anj jAmj þ jAnj þ ð1 qÞ StrSimðm0;n1Þ |ð1Þ |FaultCode |FaultCode |0.16 |
| Sim0ðm0;n1Þ ¼ qjAm∩Anj jAmj þ jAnj þ ð1 qÞ StrSimðm0;n1Þ |ð1Þ |Description |FaultString |0.10 |
| Sim0ðm0;n1Þ ¼ qjAm∩Anj jAmj þ jAnj þ ð1 qÞ StrSimðm0;n1Þ |ð1Þ |Scope |EncodingURI |0.10 |where jAmj is the number of elements in set Am, StrSimðm0; n1Þ represents the similarity value of m0 and n1 by string match-ing, and is a weight coefficient fixed by users. Based on initial matching results, we construct the pairwise graph in step (2). A portion of this pairwise graph is shown in Fig. 3, where some nodes of low degrees in initial matching are ignored. Then, similarity propagation is executed based on this graph.The computation formula for similarity propagation is
This computation process is performed iteratively to estimate similarity degrees between nodes of T0 and T1. After this process, the computed similarity degrees will be normalized to the range of [0, 1].
Table 1 shows a portion of the similarity estimation result. If we set the value of filtering threshold to 0.1, the pairs whose similarity degree is no bigger than 0.1 will be deleted from the CBN.As shown in Table 1, an example of the matching results
| Simiþ1ðn0;n1Þ ¼ Simiðn0;n1Þþ 
	ðm0;m1Þ2NeigSetððn0;n1ÞÞ X Simiðm0;m1Þ uððm0;m1Þðn0;n1ÞÞ | ð2Þ | could be the correspondence between node “DetailEntries”and node ”FaultEntries”. |
|---|---|---|
| Simiþ1ðn0;n1Þ ¼ Simiðn0;n1Þþ  	ðm0;m1Þ2NeigSetððn0;n1ÞÞ X Simiðm0;m1Þ uððm0;m1Þðn0;n1ÞÞ |ð2Þ |4.2. Similarity-based Bayesian learning algorithm for || Simiþ1ðn0;n1Þ ¼ Simiðn0;n1Þþ  	ðm0;m1Þ2NeigSetððn0;n1ÞÞ X Simiðm0;m1Þ uððm0;m1Þðn0;n1ÞÞ |ð2Þ |computing CBN probabilities |
In this subsection, we will introduce how to compute CBN
where Simiðn0; n1Þ indicates the similarity degree of pairwise node ðn0; n1Þ in the i-th iteration, uððm0; m1Þðn0; n1ÞÞ denotes the weight of edge between the given nodes (whose valueequals to that of 1 divided by the outgoing edge number of the
source node for this edge), and NeigSetððn0; n1ÞÞ represents the set of neighbors of node ðn0; n1Þ in the pairwise graph.
probabilities using similarity-based learning algorithm. Ac-cording to computed similarity degrees, the conditional probabilities of CBNs will be obtained.Based on the similarity result, the combination part of CBN can be created as shown in Fig. 4. Then, the condi-tional probabilities related to the nodes of this part will be learned from training data. In fact, the similar counterparts
Fault, 
Fault
| FaultCode, 
FaultCode
Name, 
name | DetailEntries, | DetailEntries, | DetailEntries, | DetailEntries, | Description, |
|---|---|---|---|---|---||---|---|---|---|---|---|
| FaultCode,  FaultCode Name,  name |DetailEntries |DetailEntries |FaultEntries |FaultEntries |FaultString |
| FaultCode,  FaultCode Name,  name |Scope,  encodingURI |Scope,  encodingURI |Scope,  encodingURI |Scope,  encodingURI |SourceActivity,  activity |
| FaultCode,  FaultCode Name,  name |Type, |Value, |Value, |FaultEvent, |FaultEvent, || FaultCode,  FaultCode Name,  name |type |value |faultEvent |faultEvent |faultEvent |
Fig. 3. A portion of pairwise graph for matching T1 and T2.
66 	X. Han et al. / CAAI Transactions on Intelligence Technology 1 (2016) 61e71
Fault
| FaultCode | DetailEntries | DetailEntries | FaultEntries |
|---|---|---|---|
| name |value |FaultEvent |activity |
| type |SourceActivity |SourceActivity |event |Fig. 4. Combination part of the CBN.
of log records in training dataset also influence corre-sponding probability distribution of the CBN. Taking the influence of the similar counterparts into consideration, we will calculate the probabilities in the combination part of CBN, based on similarity degrees between nodes of Ti and CBN.Before going into details of probability computation, it is necessary to introduce the concept of combination similarity degree CSim, which represents the similarity between a node of Ti and its corresponding node (with the same name) of constructed CBN. Assume n and s are the CBN nodes which
combination similarity degrees between nodes of T0 (T1) and CBN, as shown in Table 2.For the example mentioned above, suppose R0 and R1 are the record sets of training data, from which T0 and T1 can be extracted. Let Rc 0and Rc 1be the subsets of R0 and R1 with fault category c. Then, let Rcbe the union of these two subsets, i.e., Rc¼ Rc 0∪Rc1. Accordingly, given a log record ri from record set Ri, we use SD(ri, mi, n) to denote the similarity degree of tree node (corresponds to element) mi of ri and node n of CBN. The similarity degree SD will play an important role in learning process, which can be computed by the following
correspond to nodes ni and si respectively. The CSim is 	formula
computed recursively from leaf to root nodes for each schematree, using the following formula
| CSimiðni;nÞ ¼ | 1 þ si2SonsOf ðniÞ;s2SonsOf ðnÞ P CSimiðsi;sÞ
1 þ maxfjSonsOfðniÞj;jSonsOfðnÞjg | ð3Þ |