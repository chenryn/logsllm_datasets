## Bug Report

### Current Behavior
I am experiencing an issue with my Webpack build after upgrading to Webpack v5 and the latest versions of Babel and related packages. Specifically, when I import an SVG as a React component using `babel-plugin-named-asset-import` and specify more than just `defaults` in my `.browserslistrc` file, the build fails with the following error:

```plaintext
C:\htdocs\_git\react-ssr-setup\node_modules\@svgr\webpack\node_modules\@babel\helper-compilation-targets\lib\utils.js:62
  const result = plugin[environment];
                     ^
Error: Module build failed (from ./node_modules/@svgr/webpack/lib/index.js):
TypeError: [BABEL] unknown: Cannot read property 'edge' of undefined (While processing: "programmatic item")
    at getLowestImplementedVersion (C:\htdocs\_git\react-ssr-setup\node_modules\@svgr\webpack\node_modules\@babel\helper-compilation-targets\lib\utils.js:62:24)
    at C:\htdocs\_git\react-ssr-setup\node_modules\@svgr\webpack\node_modules\@babel\helper-compilation-targets\lib\filter-items.js:26:77
    at Array.filter ()
    at targetsSupported (C:\htdocs\_git\react-ssr-setup\node_modules\@svgr\webpack\node_modules\@babel\helper-compilation-targets\lib\filter-items.js:25:54)
    at isRequired (C:\htdocs\_git\react-ssr-setup\node_modules\@svgr\webpack\node_modules\@babel\helper-compilation-targets\lib\filter-items.js:58:11)
    at C:\htdocs\_git\react-ssr-setup\node_modules\@svgr\webpack\node_modules\@babel\preset-env\lib\index.js:267:201
    at C:\htdocs\_git\react-ssr-setup\node_modules\@svgr\webpack\node_modules\@babel\helper-plugin-utils\lib\index.js:19:12
    at C:\htdocs\_git\react-ssr-setup\node_modules\@svgr\webpack\node_modules\@babel\core\lib\config\full.js:211:14
    at Generator.next ()
    at Function. (C:\htdocs\_git\react-ssr-setup\node_modules\@svgr\webpack\node_modules\@babel\core\lib\gensync-utils\async.js:26:3)
    at Generator.next ()
    at step (C:\htdocs\_git\react-ssr-setup\node_modules\gensync\index.js:254:32)
    at evaluateAsync (C:\htdocs\_git\react-ssr-setup\node_modules\gensync\index.js:284:5)
    at Function.errback (C:\htdocs\_git\react-ssr-setup\node_modules\gensync\index.js:108:7)
    at errback (C:\htdocs\_git\react-ssr-setup\node_modules\@svgr\webpack\node_modules\@babel\core\lib\gensync-utils\async.js:70:18)
    at async (C:\htdocs\_git\react-ssr-setup\node_modules\gensync\index.js:183:31)
    at eval (webpack://react-ssr-setup/./src/shared/assets/react.svg?./node_modules/@svgr/webpack/lib/index.js?-svgo,+titleProp,+ref:1:7)
    at Object../node_modules/@svgr/webpack/lib/index.js?-svgo,+titleProp,+ref!./src/shared/assets/react.svg (C:\htdocs\_git\react-ssr-setup\build\server\server.js:18:1)
    at __webpack_require__ (C:\htdocs\_git\react-ssr-setup\build\server\server.js:4582:32)
    at fn (C:\htdocs\_git\react-ssr-setup\build\server\server.js:4728:21)
    at eval (webpack://react-ssr-setup/./src/shared/App.tsx?:15:107)
    at Module../src/shared/App.tsx (C:\htdocs\_git\react-ssr-setup\build\server\server.js:128:1)
    at __webpack_require__ (C:\htdocs\_git\react-ssr-setup\build\server\server.js:4582:32)
    at fn (C:\htdocs\_git\react-ssr-setup\build\server\server.js:4728:21)
    at eval (webpack://react-ssr-setup/./src/server/middleware/serverRenderer.tsx?:16:69)
    at Module../src/server/middleware/serverRenderer.tsx (C:\htdocs\_git\react-ssr-setup\build\server\server.js:106:1)
```

In this case, the property `edge` of `undefined` cannot be read. In other instances, the property `android` also caused similar issues. I found that modifying the line in `@babel/helper-compilation-targets/lib/utils.js` to:

```javascript
const result = plugin && plugin[environment];
```

prevents the error, but I am unsure about the potential implications of this change.

To reproduce the issue, you can use the following steps:

1. Clone the repository:
   ```sh
   git clone https://github.com/manuelbieh/react-ssr-setup.git
   cd react-ssr-setup
   ```

2. Checkout the branch:
   ```sh
   git checkout -b chores-jan-21
   ```

3. Install dependencies:
   ```sh
   yarn install
   ```

4. Start the project:
   ```sh
   yarn start
   ```

### Expected Behavior
I expect the `named-asset-import` plugin to work as it did before the update, allowing me to import SVGs as React components without encountering build errors.

### Babel Configuration
The Babel configuration can be found in the repository:
- [babel.config.js](https://github.com/manuelbieh/react-ssr-setup/blob/chores-jan-21/babel.config.js)

### Environment
```plaintext
$ npx envinfo --preset babel
  System:
    OS: Windows 10 10.0.19042
  Binaries:
    Node: 14.14.0 - C:\Program Files\nodejs\node.EXE
    Yarn: 1.22.10 - C:\Program Files\nodejs\yarn.CMD
    npm: 6.14.8 - C:\Program Files\nodejs\npm.CMD
  npmPackages:
    @babel/cli: ^7.12.10 => 7.12.10
    @babel/core: ^7.12.10 => 7.12.10
    @babel/plugin-proposal-class-properties: ^7.12.1 => 7.12.1
    @babel/plugin-proposal-object-rest-spread: ^7.12.1 => 7.12.1
    @babel/plugin-proposal-optional-chaining: ^7.12.7 => 7.12.7
    @babel/plugin-syntax-dynamic-import: ^7.8.3 => 7.8.3
    @babel/plugin-transform-modules-commonjs: ^7.12.1 => 7.12.1
    @babel/plugin-transform-runtime: ^7.12.10 => 7.12.10
    @babel/preset-env: ^7.12.11 => 7.12.11
    @babel/preset-react: ^7.12.10 => 7.12.10
    @babel/preset-typescript: ^7.12.7 => 7.12.7
    @babel/register: ^7.12.10 => 7.12.10
    babel-eslint: ^10.1.0 => 10.1.0
    babel-jest: ^26.6.3 => 26.6.3
    babel-loader: ^8.2.2 => 8.2.2
    babel-plugin-macros: ^3.0.1 => 3.0.1
    babel-plugin-named-asset-import: ^0.3.7 => 0.3.7
    babel-plugin-transform-es2015-modules-commonjs: ^6.26.2 => 6.26.2
    babel-plugin-transform-runtime-file-extensions: ^2.0.0 => 2.0.0
    eslint: ^7.19.0 => 7.19.0
    eslint-plugin-babel: ^5.3.1 => 5.3.1
    jest: ^26.6.3 => 26.6.3
    webpack: ^5.19.0 => 5.19.0
```

### Possible Solution
Replacing the line in `@babel/helper-compilation-targets/src/utils.js` with:

```javascript
const result = plugin && plugin[environment];
```

prevents the error, but I am not familiar enough with Babel to understand the potential implications of this change.