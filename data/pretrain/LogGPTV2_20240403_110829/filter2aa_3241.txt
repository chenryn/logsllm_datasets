### 通过将keytab导入Wireshark中实现对Kerberos协议加密部分的直接解包

本文主要记录了如何通过一系列操作，将生成的keytab文件导入Wireshark中，从而实现在Wireshark中直接解密Kerberos协议加密部分的过程。这有助于避免在实际操作中遇到常见问题。

#### 关于Keytab
Keytab可以理解为一个密钥表（key table的缩写），其用途类似于用户的密码。Keytab文件包含一个或多个条目，每个条目包括创建时间戳、主体名、密钥版本号、加密类型以及密钥本身。有关keytab的详细信息，可参考MIT的Kerberos实现网站。

#### 具体操作步骤

1. **复制ntds.dit文件**
   - 使用卷影复制方法从域控中复制出一份`ntds.dit`文件。
   - 确保卷影副本名称与自己的卷影副本卷名对应。
   - 执行以下命令：
     ```bash
     vssadmin create shadow /for=C:
     copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy2\Windows\NTDS\NTDS.dit C:\ntds.dit
     ```
   - 复制完成后删除之前创建的卷影副本：
     ```bash
     vssadmin delete shadow /all
     ```

2. **复制system.hive文件**
   - 执行以下命令：
     ```bash
     reg save hklm\system system.hive
     ```

3. **编译并安装esedbexport**
   - 下载esedbexport程序：
     ```bash
     wget https://github.com/libyal/libesedb/releases/download/20210424/libesedb-experimental-20210424.tar.gz
     tar -xzvf libesedb-experimental-20210424.tar.gz
     cd libesedb-20210424/
     sudo apt-get install autoconf automake autopoint libtool pkg-config
     ./configure
     make
     make install
     sudo ldconfig
     ```

4. **导出ntds.dit文件**
   - 将`ntds.dit`和`system.hive`文件复制到Linux系统中，并执行以下命令：
     ```bash
     esedbexport ntds.dit
     ```
   - 导出后的文件会存放在当前目录的`ntds.dit.export`目录内。

5. **使用NTDSXtract导出keytab**
   - 克隆NTDSXtract仓库并导出keytab：
     ```bash
     git clone https://github.com/csababarta/ntdsxtract.git
     cd ntdsxtract/
     python dskeytab.py ../ntds.dit.export/datatable.3 ../ntds.dit.export/link_table.5 ../system.hive /usr/local/bin/ntdsxtract/ 1.keytab
     ```

6. **查看keytab内容**
   - 安装Kerberos客户端并使用`ktutil`查看keytab内容：
     ```bash
     sudo apt-get install heimdal-clients
     ktutil -k 1.keytab list
     ```

7. **配置Wireshark以解密Kerberos数据包**
   - 打开Wireshark，进入“编辑”——“首选项”，选择“Protocols”，找到KRB5，勾选“Try to decrypt Kerberos blobs”。
   - 导入生成的`1.keytab`文件，即可对Kerberos数据包进行解密。
   - 加载keytab文件后，Wireshark会自动尝试解密当前的数据包。如果解密成功，显示为蓝色；否则显示为黄色。

#### 解密原理
Kerberos中的加密部分使用的是哈希值，通过将“密码明文+盐+密钥版本号”经过一个单向的string-to-key函数生成。这些信息都包含在keytab文件中。具体来说：
- 在as-req过程中，加密部分使用客户端用户密钥生成的哈希值进行加密。
- 在as-rep过程中，TGT票据部分使用krbtgt的密钥哈希值进行加密。
- tgs-rep中的ST票据加密部分使用服务对应密钥的哈希值进行加密。

通过导入keytab文件，Wireshark能够使用固定算法对相应的部分进行解密，并在解密后提供详细的说明，如使用哪个主体进行解密等。

#### 结论
能够在Wireshark中直接解密Kerberos协议，对于深入学习Kerberos协议的认证过程非常有帮助。结合RFC文档，可以更清晰地了解整个认证过程。Wireshark确实是一个强大的工具，值得推荐。