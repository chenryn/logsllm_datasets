    shell 中使用 Linux 命令类似。
[部分]{.term}
:   某些以百分比开头的特殊命令 `%`{.literal}
    启动一个部分。部分中的命令解释与其它部分的命令不同。每个部分都必须使用
    `%end`{.literal} 命令完成。
[部分类型]{.term}
:   可用的部分有：
    ::: informalexample
    ::: itemizedlist
    -   [**Add-on 部分**]{.strong}。这些部分使用
        `%addon addon_name`{.literal} 命令。
    -   [**软件包选择部分**]{.strong}。以 `%packages`{.literal}
        开始。使用它列出安装的软件包，包括间接方法，比如软件包组或者模块。
    -   [**Script 部分**]{.strong}。它们以
        `%pre`{.literal}、`%pre-install`{.literal}、`%post`{.literal} 和
        `%onerror`{.literal} 开始这些部分不是必需的。
    :::
    :::
[command 部分]{.term}
:   command 部分是那些不属于任何 script 部分或 `%packages`{.literal}
    部分的 Kickstart 文件中的命令的术语。
[脚本部分计数和排序]{.term}
:   除 command
    部分外的所有部分都是可选的，并可以多次出现。当对某个特定类型的脚本进行评估时，Kickstart
    中所有该类型的所有部分都会按外观顺序评估：两个 `%post`{.literal}
    部分会根据出现的顺序进行评估。然而，您不必按任何顺序指定各种脚本部分类型：在
    `%pre`{.literal} 部分前是否有 `%post`{.literal} 部分是无关紧要的。
:::
::: variablelist
[注释]{.term}
:   Kickstart 注释是以 hash `#`{.literal}
    字符开头的行。安装程序会忽略这些行。
:::
不必需的项目可以被省略。省略安装程序中任何需要的项目，以便用户可以像常规互动安装过程中一样提供对相关项目的回答。您还可以将
kickstart 脚本声明为非互动 `cmdline`{.literal}
命令。在非互动模式中，任何缺少的回答都会中止安装过程。
:::
::: section
::: titlepage
# []{#kickstart-script-file-format-reference_installing-rhel-as-an-experienced-user.html#package-selection-in-kickstart_kickstart-script-file-format-reference}Kickstart 中的软件包选择 {.title}
:::
Kickstart 使用 `%packages`{.literal}
命令启动的部分来选择要安装的软件包。您可以以这种方式安装软件包、组、环境、模块流和模块配置集。
::: section
::: titlepage
## []{#kickstart-script-file-format-reference_installing-rhel-as-an-experienced-user.html#package-selection-section_package-selection-in-kickstart}软件包选择部分 {.title}
:::
使用该 `%packages`{.literal} 命令来开始 Kickstart
部分，它描述了要安装的软件包。这个 `%packages`{.literal} 部分必须以
`%end`{.literal} 命令结尾。
您可以根据环境、组、模块流、模块配置集或者它们的软件包名称指定软件包。定义了包含相关软件包的几个环境和组。有关环境和组列表请查看
Red Hat Enterprise Linux 8 安装 DVD 中的该
`repository/repodata/*-comps-repository.architecture.xml`{.literal}
文件。
该 `*-comps-repository.architecture.xml`{.literal}
文件包含描述可用环境（由标签标记）和组（ ``{.literal}
标签）的结构 ``{.literal}。每个条目都有一个
ID、用户可见值、名称、描述和软件包列表。如果为安装选择了组，则在软件包列表中标记了
`mandatory`{.literal}
的软件包总会被安装；如果其它位置没有特别排除，标记了`default`{.literal}
的软件包也会被安装，标记为 `optional`{.literal}
的软件包需要在其他地方被指定包括时才会安装，即使已经选择该组也是如此。
您可以使用其 ID（标签）或名称（ ``{.literal}
标签）指定软件包组或环境 ``{.literal}。
如果您不确定应该安装哪些软件包，红帽建议您选择 [**[Minimal
Install]{.GUI}**]{.strong} 环境。[**[Minimal Install]{.GUI}**]{.strong}
仅提供运行 Red Hat Enterprise Linux 8
所需的软件包。这将显著降低系统受某个漏洞影响的机会。如果需要，可以在安装后再添加附加软件包。如需了解更多与
相关的信息 [**[Minimal Install]{.GUI}**]{.strong}请查看 [*安全硬化
[https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/security_hardening/index#Minimal_install_configuring-and-managing-security](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/security_hardening/index#Minimal_install_configuring-and-managing-security){.link}
文档中的安装最低软件包量部分*]{.emphasis}。请注意： [**[Initial
Setup]{.GUI}**]{.strong} 除非安装了一个桌面环境和 X
窗口系统，且启用了图形登录，否则无法从 Kickstart 文件运行系统。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
要在 64 位系统中安装 32 位软件包：
::: itemizedlist
-   在 `%packages`{.literal} 部分指定 `--multilib`{.literal} 选项
-   使用构建该软件包的 32 位构架附加软件包名称，例如：
    `glibc.i686`{.literal}
:::
:::
:::
::: section
::: titlepage
## []{#kickstart-script-file-format-reference_installing-rhel-as-an-experienced-user.html#package-selection-commands_package-selection-in-kickstart}软件包选择命令 {.title}
:::
这些命令可在 Kickstart 文件 `%packages`{.literal} 部分使用。
::: variablelist
[指定一个环境]{.term}
:   以 `@^`{.literal} 符号开头的行形式指定要安装的整个环境：
    ``` screen
    %packages
    @^Infrastructure Server
    %end
    ```
    这会安装作为 `Infrastructure Server`{.literal}
    环境一部分的所有软件包。Red Hat Enterprise Linux 8 安装
    `repository/repodata/*-comps-repository.architecture.xml`{.literal}
    DVD 中描述的所有可用环境。
    在 Kickstart
    文件中只能指定一个环境。如果指定了多个环境，则只使用最后指定的环境。
[指定组]{.term}
:   指定组，每个条目一行，以 `@`{.literal} 符号开头，然后是
    `*-comps-repository.architecture.xml`{.literal}
    文件中给出的完整组群名称或者组群 ID。例如：
    ``` screen
    %packages
    @X Window System
    @Desktop
    @Sound and Video
    %end
    ```
    `Core`{.literal} 组总是被选择 - 并不需要在 `%packages`{.literal}
    部分中指定它。
[指定单独的软件包]{.term}
:   根据名称指定单个软件包，每个条目对应一行。您可以在软件包名称中使用星号(`*`{.literal})作为通配符。例如：
    ``` screen
    %packages
    sqlite
    curl
    aspell
    docbook*
    %end
    ```
    该 `docbook*`{.literal} 条目包含软件包 `docbook-style`{.literal} ,
    `docbook-dtds`{.literal} 与通配符代表的模式匹配。
[指定模块流的配置集]{.term}
:   使用配置集语法为模块流指定配置集（一个条目为一行）:
    ``` screen
    %packages
    @module:stream/profile
    %end
    ```
    这会安装模块流指定配置集中列出的所有软件包。
    ::: informalexample
    ::: itemizedlist
    -   当模块指定了默认流时，您可以将其退出。如果没有指定默认流，您必须指定它。
    -   当模块流指定默认配置集时，您可以将其退出。如果没有指定默认配置集，您必须指定它。
    -   无法多次使用不同流安装模块。
    -   有可能安装同一模块和流的多个配置集。
    :::
    :::
    模块和组使用以 `@`{.literal}
    符号开头的同一语法。当某个模块和软件包组具有相同名称时，该模块会优先使用。
    在 Red Hat Enterprise Linux 8 中，只有 AppStream
    软件仓库提供模块。要列出可用的模块，使用安装的 Red Hat Enterprise
    Linux 8 系统中的 `yum module list`{.literal} 命令。
    您还可以使用 `module`{.literal} Kickstart
    命令启用模块流，然后通过直接命名模块流中的软件包来安装它们。
[排除环境、组群或者软件包]{.term}
:   使用前横线(`-`{.literal})指定安装中排除的软件包或组。例如：
    ``` screen
    %packages
    -@Graphical Administration Tools
    -autofs
    -ipa*compat
    %end
    ```
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
不支持只使用 `*`{.literal} Kickstart 文件安装所有可用软件包。
:::
您可以使用几个选项来改变 `%packages`{.literal}
本节的默认行为。有些选项可以用于整个软件包选择，其它选项只与特定的组一起使用。
::: itemizedlist
**其它资源**
-   有关处理软件包的更多信息，请参阅[*配置基本系统设置文档中*]{.emphasis}的[安装软件](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index?lb_target=production#basics-installing-software_getting-started-with-system-administration){.link}一章。
-   有关模块和流的详情，请参阅[安装、管理和删除用户空间组件文档](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/installing_managing_and_removing_user-space_components/index){.link}。
:::
:::
::: section
::: titlepage
## []{#kickstart-script-file-format-reference_installing-rhel-as-an-experienced-user.html#common-package-selection-options_package-selection-in-kickstart}通用软件包选择选项 {.title}
:::
以下选项可用于 `%packages`{.literal}
部分。要使用某个选项，请将其附加到软件包选择部分的开头。例如：
``` screen
%packages --multilib --ignoremissing
```
::: variablelist
[`--default`{.literal}]{.term}
:   安装默认软件包组。这与软件包集对应，如果没有在
    中进行其他选择，则会安装该软件包集 [**[Package
    Selection]{.GUI}**]{.strong} 交互式安装期间的屏幕.
[`--excludedocs`{.literal}]{.term}
:   不要安装软件包中的任何文档。在大多数情况下，这不包括通常安装在
    `/usr/share/doc`{.literal}
    目录中的任何文件，但要排除的具体文件取决于各个软件包。
[`--ignoremissing`{.literal}]{.term}
:   忽略安装源中缺少的软件包、组、模块流、模块配置集和环境,而不是停止安装来询问安装是中止还是继续。
[`--instLangs=`{.literal}]{.term}
:   指定要安装的语言列表。请注意，这与软件包组级别选择不同。这个选项没有描述应该安装哪些软件包组，而是设定
    RPM 宏控制应该安装单个软件包的转换文件。
[`--multilib`{.literal}]{.term}
:   为多 lib 软件包配置安装的系统，允许在 64 位系统中安装 32
    位软件包，并安装在这部分中指定的软件包。
    通常在 AMD64 和 Intel 64 系统中，您只能安装 x86_64 和 noarch
    软件包。但是，使用 \--multilib 选项，您可以自动安装 32 位 AMD 和
    i686 Intel 系统软件包（若有）可用。
    这只适用于在 `%packages`{.literal}
    部分中明确指定的软件包。那些只作为相依性安装而没有在 Kickstart
    文件中指定的软件包只能安装到需要它们的架构版本中，即使它们可用于更多构架。
    用户可将 Anaconda 配置为在安装系统的过程中以 `multilib`{.literal}
    模式安装软件包。使用以下选项之一启用 `multilib`{.literal} 模式：
    ::: orderedlist
    1.  使用以下行配置 Kickstart 文件：
        ``` screen
        %packages --multilib --default
        %end
        ```
    2.  在引导安装镜像时添加 inst.multilib 引导选项。
    :::
[`--nocore`{.literal}]{.term}
:   禁用默认会被安装的 `@Core`{.literal} 软件包组。禁用
    `@Core`{.literal} 软件包组 `--nocore`{.literal}
    应该只用于创建轻量级容器 ; 安装桌面或服务器系统 `--nocore`{.literal}
    将导致系统不可用。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 备注 {.title}
    ::: itemizedlist
    -   使用 `-@Core`{.literal} 软件包组中的 `@Core`{.literal}
        软件包无法正常工作。排除 `@Core`{.literal} 软件包组的唯一方法是
        使用 `--nocore`{.literal} 选项。
    -   `@Core`{.literal}
        软件包组被定义为用来安装工作系统的最小软件包集合。它与[软件包清单](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/package_manifest/index?lb_target=production){.link}和[覆盖范围](https://access.redhat.com/support/offerings/production/scope_moredetail){.link}中定义的核心软件包无关。
    :::
    :::
[`--excludeWeakdeps`{.literal}]{.term}
:   禁用从弱依赖项安装软件包。这些软件包都链接到由 Recommends 和
    supplements 标记组成的所选软件包。默认情况下会安装弱依赖项。
[`--retries=`{.literal}]{.term}
:   设置 Yum 试图下载软件包的次数（尝试）。默认值为
    10。这个选项只适用于安装程序，它不会影响安装的系统上的 Yum 配置。
[`--timeout=`{.literal}]{.term}
:   以秒为单位设定 Yum 超时。默认值为
    30。这个选项只适用于安装程序，它不会影响安装的系统上的 Yum 配置。
:::
:::
::: section
::: titlepage
## []{#kickstart-script-file-format-reference_installing-rhel-as-an-experienced-user.html#options-for-specific-package-groups_package-selection-in-kickstart}特定软件包组的选项 {.title}
:::