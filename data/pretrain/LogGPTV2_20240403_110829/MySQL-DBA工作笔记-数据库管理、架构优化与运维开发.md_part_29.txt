果要实现一个功能，例如：从字符串 foobarbar 里面找到 bar 这个字符串的起始位置，
么没想到等等。
该字符串的内容是空格字符的n 次复制。
比如字符串查找函数 instr、locate 和 position。这三个函数的功能都是很相似的。如
当然，这里我们加大难度，一个是拼接的字符串要复杂，我们可以使用字符串函数repeat
mysqlslap
如果使用 myslap 来压测，使用 mysqlslap 的语句类似下面的形式。
要实现这两个功能，MySQL 确实提供了这样的工具集，第一个是并发执行的性能情
SELECT POSITION('bar'
SELECT INSTR('foobarbar', 'bar');
MySQL 中的字符串处理函数非常多，以至于我在整理的这部分内容的时候也眼前一
字符串函数是MySQL 函数的精华，林林总总说了不少，下面我们看几个例子就明白了。
select strcmp(1,2);
 strcmp(x1,x2)函数用于比较两个字符串x1 和 x2，如果x1>x2，则函数返回值为 1；
select concat(repeat('a',10),space(20));
对于上面的3个函数，我有些纠结，到底用哪一个呢？推荐是哪一个呢？我觉得可以通
主要语法的表现形式不同，当然参数设置上还是有一些差别。
案例4-7：MySQL 字符函数的压力测试
reverse(x)函数返回一个新字符串，该字符串为字符串x的逆序。
8．字符串逆序函数
7.字符串比较函数
LOCATE（
--concurrency=50,100 --create-schema="test"
'bar'
IN
'foobarbar');
-number-of-queries=50000
--query="SELECT
使
---
## Page 183
就是36 秒左右，这个差别其实很大了。
就是如下这样的格式。
函数的性能相对要好一些。
而单线程的压测情况如何呢，我们使用 benchmark 来模拟。比如压测 md5 的函数，
select benchmark（500000000,md5（'test'））;
从 100 万次的测试中我们可以得到一个初步的结论，那就是在这个场景中，position
Benchmark
从这个测试也可以看出明显的性能差别，单线程压测的时候是8秒多，但是并发的时候
可以看出来性能几乎是一样的，locate 函数略微高一点点。
三个函数的性能结果如下：
使用locate 函数和Instr函数得到的结果相仿，都是36秒~37秒之间。
可以看出在并发50和100的情况下，100的调用时间略长。
Benchmark
position 函数的结果如下：
我们调大调用的频次为100万，使用并发50和100来做测试。
通过这种方式得到的测试结果相对来说更有意义一些。
row in set （8.23 sec）
row
Average number of queries per client:10000
Minimum
Average number of seconds
Average number
umberofclients
set
(8.21
number
clients
sec)
of
只是需要调整一下函数就可以了，我们还是指定为100万次。
seconds
running
seconds
torunall
per
to run all
queries:
图4-24
run
client:20000
100
queries
queries:
queries:
queries
queries：
35.312 seconds
35.312
：34.789 seconds
：34.789 seconds
35.312 seconds
34
第4章SQL开发规范和基础|161
789
2seconds
seconds
---
## Page 184
162丨MySQLDBA工作笔记：数据库管理、架构优化与运维开发
返回v1 的值，否则返回v2 的值。
4.4.3
值小于2000。如果使用 SQL，会是如下这样的解决方法。
里面的属性值是对应的。换句话来说，coll里面存放的是key，col2存放的是value，如下：
substring_index 等，关于如何匹配，想和大家聊聊。
，',-1)
if(condition,vl,v2)函数中 condition 为条件表达式，当 condition 的值为 true 时，函数
mysql> select coll,col2
现在我们如果要做一个数据查询，把key是59的 value值查出来，而且还需要value
'59,33,6′,
create table test1 ( col1 varchar(100),co12 varchar(100));
我们为一个表创建了两个列 coll 和 col2，然后插入一些属性值。即 coll 里面的属性值和 col2
问题背景：
之前做了一个简单的测试。里面用到了一些看起来复杂的字符串处理函数 find_in_set,
1. if()函数
注：这一类需求算是MySQL字符串函数的一个福利，但是不建议大家这么做表设计，
写入数据之后，表里的数据分布是如下这样的：
'22,8,59'
insert
22,8,59
案例4-8：字符串动态匹配
rows in set (0.00 sec)
26,59,6
co11
rows in set(0.00 sec)
22,8,59
59,33,6
26,59,6
co11
条件控制函数
2,2,3);
示例如下：
（1）如果表达式的值等于when 语句中某个“值n”，则case函数返回值为“结果n”
case 表达式 when 值1 then 结果1［when 值2 then 结果2］….［else 其他值］end
case 函数的语法格式如下。
3.case 函数
localtimeO
select
select
select
2. ifnull()函数
ect
IFNULL(null,'a');
IFNULL(1,0);
IFNULL
第4章SQL开发规范和基础丨163
---
## Page 186
164丨MySQL DBA工作笔记：数据库管理、架构优化与运维开发
second、microsecond。
时、分、秒、微秒等信息，其中type 可以分别指定为 year、month、day、hour、minute、
等信息。
函数以及microsecond(x)函数分别用于获取日期时间x的年、月、日、时、分、秒、微秒
+8，也就是UTC+8。注意，这些函数的返回值与时区的设置无关。
的支持是比较好的。举个例子，把当前日期数值化。
另外 MySQL 还提供了 extract(type from x)函数用于获取日期时间x的年、月、日、
select unix_timestamp('2019-01-25 18:17:14');
在很多业务场景中，可能需要把日期转换为数值，也有可逆的操作，这方面MySQL
select dayname (20170912);
·dayofweek(x）函数用于获取日期时间x是本星期的第几天（星期日为第一天，以
·dayname(x)函数与 weekday(x）函数用于获取日期时间x的星期信息；
·monthname(x)函数用于获取日期时间x的月份信息；
（2）获取月份、星期等信息的函数
year(x)函数、month(x)函数、dayofmonth(x)函数、hour(x)函数、minute(x)函数、second(x)
（1）获取年、月、日、时、分、秒、微秒等信息的函数
2.获取日期或时间的某一具体信息的函数
UTC即世界标准时间，中国、新加坡、
·utc_time(函数用于获取 UTC 时间。
·utc_date()函数用于获取UTC日期;
（3）获取 MySQL 服务器当前UTC 日期和时间函数
1 row in set (0.00 sec)
>>select from_unixtime(1548411434) ;
然后反过来把得到的数值转换成日期，这是一个可逆的操作，如下：
需要注意：这些函数的返回值与时区的设置有关。
比如有好多同学想知道自己生日那天是星期几，可以用这个SQL秒出，示例如下：
2019-01-25 18:17:14
unix_timestamp('2019-01-25 18:17:14')
此类推)。
row in set(0.00 sec)
1548411434
皮、马来西亚、菲律宾的时间与 UTC 的时差均为
---
## Page 187
所示。
式，显示格式以%开头。
的秒数×对应的时间。
说明：interval 是时间间隔关键字，间隔可以为正数或者负数，相应的参数使用如下
（3）计算指定日期指定间隔的日期函数
·subtime(t,n)函数返回起始时间t 减去 n 秒的时间。
·addtime(t,n)函数返回起始时间t 加上 n 秒的时间;
（2）时间间隔函数
time_format(t,f)函数按照表达式f的要求显示时间t，表达式f中定义了时间的显示格
（1）时间格式化函数
5.日期和时间格式化函数
select benchmark(1000000, to_days(20110407)
示例如下：
·subdate(d,n)函数返回起始日期d 减去 n天的日期。
·adddate(d,n)函数返回起始日期d 加上 n天的日期;
·datedif(xl,x2)函数用于计算日期x1与x2之间的相隔天数;
●from_days(x)函数用于计算从0000年1月1日开始n天后的日期；
·to_days(x)函数用于计算日期x距离0000年1月1日的天数；
4．日期间隔、时间间隔函数
time_to_sec(x)函数用于获取时间x 在当天的秒数；sec_to_time(x)函数用于获取当天
3.时间和秒数之间的转换函数
select
select week(20171014);
示例如下：
·dayofyear(x)函数用于获取日期时间x在本年是第几天。
·week(x)函数与 weekofyear(x)函数用于获取日期时间x在本年是第几个星期；
·quarter(x)函数用于获取日期时间x在本年是第几季度;
（3）获取年度信息的函数
dayofyear(20171014);
第4章SQL开发规范和基础丨165
W（)
）；
执行
大秒
---
## Page 188
166丨MySQL DBA工作笔记：数据库管理、架构优化与运维开发
打开，仅仅把它当做一个黑盒子，很容易形成攻略型的经验，这个是不建议的。
引，感觉是走了全表扫描，但是使用 nowO就能秒出数据。对于这个问题，我看了下官方
时间的显示格式，显示格式以%开头。
文档，这个描述就好像你打开了一个贝壳，惊奇的发现里面有一颗珍珠，如果你不尝试
DATE_FORMAT(NOW(),'%b %d %Y %h:%i %p')
有一个表dic_history_20180823_0，数据量大概在1500万。modify_time 是有一个副主索
格式化的列表信息如下所示。
date_format(d,f)函数按照表达式f的要求显示日期和时间 t,表达式f中定义了日期和
问题背景：
在做一个 SQL 优化的时候，注意到一个细节问题，那就是使用 sysdate 后无法启用索
案例4-9：Now()和 sysdate()的差别
（4）日期和时间格式化函数
有英语前缀的月份的日期（1st，2nd,3rd，等等）
星期（0.52），这
一个星期中的天数（0
缩写的月份名字（Jan..Dec)
星期名字（Sur
缩写的星期名
时间，12小时（hh:mm:ss[AP]M)
分钟，数字（0..59）
月，数字（1.·12
小时（01.….12）
小时（…….23）
小时（0.….23）
年，数字，2位
秒（00.….59）
秒（00.59）
小时（1.….1.2）
说明
星期
AM或PM
说明
....Saturday
一是星期的第
Saturday)
---
## Page 189
光要得到当前的日期信息，就有不少于4个函数。
的方式之后，则数据秒出。这个是什么原因呢。
引的。如果使用如下的语句，可以得到近一
首先我们来看下 MySQL 里面的日期函数，如下图 4-25 所示，内容还是很丰富的。
可以看到使用了 sysdate(之后，性能极差，其实就是一个全表扫描。而使用了 now()
>>select count (fsm_id )
1 row in set (47.87 sec)
row in set (0.00 sec)
count(fsm_id）
count(fsm_id ）
>>select count(fsm_id ）
Table 12.13Date and Time Functions
OFYEAR()
DATE
DD()
T()
IMESTAMP
ATE(),
ME
。
01
Name
SynonymforDAYOFMONTHO
Return the current time
SynonymsforNOW(
reateadatefromtheyearanddayofyear
nvert fromone timezonetoanother
from^dic_history_20180823_0^where
dtimevalues(intervals）toadatevalue
图4-25