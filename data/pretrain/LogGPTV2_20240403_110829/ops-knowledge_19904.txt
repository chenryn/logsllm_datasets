User: 如何使用Python脚本来批量检查服务器的端口状态，以及如何将检查结果输出到日志文件中？
Assistant: 使用Python的socket模块可以对服务器的端口进行检查。下面是一个示例代码，它可以批量检查指定IP地址列表上的端口状态，并将检查结果输出到日志文件中：

```python
import socket
import logging

# 设置日志
logging.basicConfig(filename='port_check.log', level=logging.INFO)

# 设置IP地址列表和端口号列表
ip_list = ['192.168.0.1', '192.168.0.2']
port_list = [22, 80, 443, 3306]

# 循环检查所有的IP地址和端口号
for ip in ip_list:
    for port in port_list:
        try:
            sock = socket.create_connection((ip, port), timeout=2)
            status = "Port {} is open on {}".format(port, ip)
            logging.info(status)
            sock.close()
        except socket.error:
            status = "Port {} is closed on {}".format(port, ip)
            logging.warning(status)
```

运行上面的代码后，它将依次检查IP地址列表中的每个IP地址，以及端口号列表中的每个端口号。如果端口是开放状态，则在日志文件中输出一条“Port {端口号} is open on {IP地址}”的信息。如果端口是关闭状态，则输出一条相应的关闭信息。

可以根据实际需要修改IP地址列表和端口号列表，以及日志文件的文件名和级别等信息。