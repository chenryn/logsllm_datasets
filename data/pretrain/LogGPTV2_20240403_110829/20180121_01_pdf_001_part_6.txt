– 2、求USERID明细，返回500万用户ID位置，692毫秒。
– 3、求USERID明细，返回BITMAP，500万个BIT，224毫
秒。
案例
• 数据银行项目(一期)
• 超大BIT分段，加速
• bitand，同时包含
• bitor，包含任意
• bitand bitxor，包含1但是不包含2
dblink异步调用，并发
异步调用 ...... 异步调用
计算
tag1 bitmap分段
......
tagn
案例
• 数据银行项目(二期)
• HDB PG
• roaring bitmap
• https://github.com/digoal/blog/blob/master/201801/20180127_01.md
• roaring bitmap vs varbit
• 1、压缩
• 2、BITMAP操作接口
• 3、分阶段聚合
案例 架构设计、代码、实操手册
-
• roaring bitmap
– https://github.com/digoal/blog/blob/master/201801/20180127_01.md
• 阿里云varbitx插件
– https://github.com/digoal/blog/blob/master/201712/20171212_01.md
– https://github.com/digoal/blog/blob/master/201610/20161021_01.md
– https://github.com/digoal/blog/blob/master/201705/20170502_01.md
– https://github.com/digoal/blog/blob/master/201706/20170612_01.md
– https://github.com/digoal/blog/blob/master/201712/20171223_01.md
模拟股票交易系统 时序数据
Case5( - )
• SchemaLess
• 同类业务
– 轨迹
– 时序特性
案例
• 证券模拟交易系统
– 业务背景：模拟股票交易
– 数据来源：实时股票数据
– 数据规模：300亿
– 数据描述：股票交易数据，大宽表。
– 查询需求：查询任意股票任意时间区间的数据，要求
返回60条数据10毫秒以内
– 并发需求：1000+
– DML需求：准实时写入
痛点
• 按任意时间滑动查询。
• 写入、查询延迟要求低。
IO放大问题
索引庞大
问题
云产品方案、效果
• RDS PG
– Schemaless方案(UDF)(自动加分区)
– 任意股票任意时间段查询响应时间0.04毫秒
• 同行竞品为10毫秒
– 股票数据写入速度约22万行/s，远超业务需求。
– 以十年的股票数据来计算，约300亿数据。单机可
以搞定。
– BRIN 时序索引，10亿~1MB。
时序数据
时序索引
插件
timescaleDB
• 自动切片，写入性能无损耗
• merge append(时序窗口查询性能优化 )
• 数据维护 API
• https://github.com/timescale/timescaledb
菜鸟 实时 监测
- FEED LOG
• 海量FEED LOG实时质量统计(若干台RDS PG)
调度
– avg, min, max, sum, percentile_disc
group(s)
– 单rds pg指标: 15亿point/分钟 1,5,10 min
– intarray, aggs_for_arrays, list partition
point[]
agg
写入list partition list partition
实时FEED
table.
循环、使用 array
15亿point/分钟.
LOG elem sort
point array存储.
p90,p95,p99,
avg,cnt,sum,...
案例 架构设计、代码、实操手册
-
• 证券案例
– https://github.com/digoal/blog/blob/master/201704/20170417_01.md
• 自动切片
– https://github.com/digoal/blog/blob/master/201711/20171102_02.md
– https://github.com/digoal/blog/blob/master/201705/20170511_01.md
– https://github.com/digoal/blog/blob/master/201709/20170927_03.md
• 菜鸟-实时FEED LOG检测
– https://github.com/digoal/blog/blob/master/201802/20180205_04.md
• timescaleDB插件
– https://github.com/digoal/blog/blob/master/201801/20180129_01.md
– https://github.com/digoal/blog/blob/master/201704/20170409_05.md
空间应用
Case6( )
• 电子围栏、LBS、AOI、POI、路网、导航、自动驾驶、路
径规划
空间应用
Case6( )
• GIS空间数据管理
• 电子围栏(不规则多边形)
– 共享自行车还车点管理
– 公务用车限行管理
– 车辆限行区域管理
– 放牧区域管理
– 菜鸟-包裹快递员分配管理
– 基于实时位置的广告营销
– 智能家居（IoT）
– 封印
案例 不规则多边形
-
• 不具备空间索引的数据库，编码索引。存在弊端：（因实际建筑规划不可能完全与编码匹配，相邻小区存在编码重
叠），一个实体小区的召回可能会跨快递员。
案例 不规则多边形
-
• 菜鸟aoi
– AOI库的构建，
– 精准分单
• 共享单车
– 限制还车地点
空间数据
管理
场景
- LBS
• 探探、微信、陌陌、订餐、POI（附近对象"如加油站"搜索）
场景
- LBS
• https://github.com/digoal/blog/blob/master/201804/20180417_01.md
GeoHash:
圈多大完全
摸不到头脑
场景
- LBS
场景
- LBS
geometry+GiST
不存在问题。
where st_dwithin
(pos,中心,1000)
order by pos 
中心;
餐饮配送
Case
• 骑手
– 实时状态、位置更新
• 配送
– 时空多维度实时搜索
– 位置
– 插槽
– 配送多个目标的离散性
– 评价体系
– ...
相比 性能提升 倍。
ES 50
https://github.com/digoal/blog/blob/master/201711/20171107_48.md
空间复合搜索
• btree_gist, intarray
– create index idx_tbl_1 on tbl using gist(xx,xxx,pos);
– 普通字段，数组标签包含，空间包含，KNN。
• partial index
– create index idx_tbl_1 on tbl using gist(xx,pos) where xxx > xx;
• https://github.com/digoal/blog/blob/master/201711/20171107_48.md
• where
• xx=xx and
• xxx between x and x and
• st_contain(polygon, pos)
• order by pos  ? limit xx;
热力图
• https://github.com/digoal/blog/blob/master/201807/20180725_02.md
Case
Case
• 计算
– 每幅卫星图包含2w*2w = 4亿个点（原始数据）
– 运算算法，使用至少30次拍摄的卫星图（至少120亿个点）进行计算，得
到最多4亿个有效点的数据（目前是3千万左右）。
– 计算后的4亿点数据，有100多个属性，其中包括一个经纬度数据。
• 查询
– 1、给定图层（有效值快照），输入一个点，搜索最近的点的一行数据
（100多个属性值，绘图）。
• RDS PG响应速度1毫秒左右。
– 给定一个区域（客户端使用线段、多边形圈出来的不规则多边形），输
出里面的所有点的数据。绘图。
– 多表JOIN的查询，TPS万级，TP类请求
案例 点云、路径规划
-
• 菜鸟 - 自动配送机器人
– pointcloud
• 高德
– 地图、导航
空间数据
管理
• 淘点点
– 路径规划
案例 路径拟合
-
• Gxxx，路径补全
– 监控盲点路径补全
– pgrouting路径插件
• Gxxx，人车拟合
– 拟合司机、乘客
– 时间、空间圈选计算
空间数据
管理
pgrouting
• All Pairs Shortest Path, Johnson’s Algorithm
• All Pairs Shortest Path, Floyd-Warshall Algorithm
• Shortest Path A*
• Bi-directional Dijkstra Shortest Path
• Bi-directional A* Shortest Path
• Shortest Path Dijkstra
• Driving Distance
• K-Shortest Path, Multiple Alternative Paths
• K-Dijkstra, One to Many Shortest Path
• Traveling Sales Person
• Turn Restriction Shortest Path (TRSP)
(OpenStreetMap)OSM & POI
• osm2pgrouting_10.x86_64: Import tool for OpenStreetMap data to pgRouting
• osm2pgsql.x86_64: Imports map data from OpenStreetMap to a PostgreSQL database
• 兴趣点相关业务（导航、...）
• 导出POI，导入PostgreSQL(PostGIS)
• https://wiki.openstreetmap.org/wiki/Osmosis/Installation
• http://wiki.openstreetmap.org/wiki/Osmosis/Detailed_Usage
• https://help.openstreetmap.org/questions/4065/getting-specific-poi-data-and-keeping-them-up-to-date
案例 架构设计、代码、实操手册
-
• 电子围栏
– https://github.com/digoal/blog/blob/master/201710/20171031_01.md
– https://github.com/digoal/blog/blob/master/201708/20170803_01.md
• 多边形搜索
– https://github.com/digoal/blog/blob/master/201710/20171004_01.md
– https://github.com/digoal/blog/blob/master/201710/20171005_01.md
– https://github.com/digoal/blog/blob/master/201711/20171107_06.md
• 点云
– https://github.com/digoal/blog/blob/master/201705/20170519_02.md
– https://github.com/digoal/blog/blob/master/201705/20170523_01.md
• 路径规划
– https://github.com/digoal/blog/blob/master/201508/20150813_03.md
– http://pgrouting.org/
• KNN搜索
– https://github.com/digoal/blog/blob/master/201711/20171107_07.md
– https://github.com/digoal/blog/blob/master/201308/20130806_01.md
– https://github.com/digoal/blog/blob/master/201804/20180417_01.md
• 商旅问题
– https://github.com/digoal/blog/blob/master/201704/20170409_01.md
文本情感
Case7( )
• 实时文本情感分析
– 聊天记录
– 评论
– XF\FK 涉黄、虚
假评论、
– ...
恐怖袭击、
不文明用
语、...
案例 实时舆情分析
-
• 实时文本情感分析、舆情系统
plpython
pljava
支持JOIN
等关联处理逻辑 Python plR
Library
MADlib
import py
Table UDF
Result
tuple(s) plpython
详细链接
• 实时文本情感分析、舆情系统
• 导入 java\python lib
– https://help.aliyun.com/document_detail/50594.html
• plpython开发手册
– https://www.postgresql.org/docs/10/static/plpython.html
– https://gpdb.docs.pivotal.io/43100/ref_guide/extensions/pl_python.html
• pljava 开发手册
– https://gpdb.docs.pivotal.io/43100/ref_guide/extensions/pl_java.html
• plR开发手册
– https://gpdb.docs.pivotal.io/43100/ref_guide/extensions/pl_r.html
• MADlib SQL机器学习库手册
– http://madlib.apache.org/docs/latest/index.html
• R MADlib对接手册
– https://cran.r-project.org/web/packages/PivotalR/
• python MADlib库对接手册
– https://pypi.python.org/pypi/pymadlib/0.1.7
树、多表关联、多值、图搜
Case8( )
• 树形结构
– 复杂JOIN
– 递归查询
– 图式搜索(graph search)
金融风控、
QA系统、
好友关系、
舆情系统、
药品监管(溯源)、
串货监管(溯源) 、
树、多表关联、多值、图搜
Case8( )
• https://github.com/digoal/blog/blob/master/201804/20180408_03.md
案例 图式搜索、伴随分析
-
• xxx小微金融项目
– 业务背景：中xx小微金融项目
– 数据来源：
• 爬虫、合作平台（税务、蚂蚁、银行...）
– 数据规模：
• 全网100亿，中xx10亿级
• 大平台、线上线下多份存储
– 数据描述：
• 企业信息、法人信息、爬虫爬到的相关信息、纳税信息、。。。展示图谱，辅助评估贷
款风险
– 查询需求：
• 企业多级关系查询、图谱展示
– 并发需求：100+
– DML需求：实时写入
痛点
• 树形结构数据，递归查询
• 众多关联企业信息
– 多表 JOIN，关联关系复杂
• 输出多级关联企业（类似人脉关系）