title:A Reactive Measurement Framework
author:Mark Allman and
Vern Paxson
A Reactive Measurement Framework
Mark Allman and Vern Paxson
International Computer Science Institute
Abstract. Often when assessing complex network behavior a single measure-
ment is not enough to gain a solid understanding of the root causes of the behav-
ior. In this initial paper we argue for thinking about “measurement” as a process
rather than an event. We introduce reactive measurement (REM), which is a tech-
nique in which one measurement’s results are used to automatically decide what
(if any) additional measurements are required to further understand some ob-
served phenomenon. While reactive measurement has been used on occasion in
measurement studies, what has been lacking is (i) an examination of its general
power, and (ii) a generic framework for facilitating ﬂuid use of this approach.
We discuss REM’s power and sketch an architecture for a system that provides
general REM functionality to network researchers. We argue that by enabling the
coupling of disparate measurement tools, REM holds great promise for assisting
researchers and operators in determining the root causes of network problems and
enabling measurement targeted for speciﬁc conditions.
1 Introduction
Because networks are vast collections of integrated components, it can often be the
case that analyzing some network behavior in depth (for characterization, tuning, or
troubleshooting) requires adapting on-the-ﬂy what sort of measurements we conduct
in consideration of the conditions manifested by the network. While the technique of
adapting measurements dynamically has been recognized by practitioners in a number
of contexts, a key missing element has been the ability to tie together disparate forms
of measurement into a cohesive system that can automatically orchestrate the use of
different techniques and tools.
To this end, we outline a new measurement paradigm: reactive measurement (REM).
The vision of REM is to provide a platform that can couple measurements—both ac-
tive and passive—together in a way that brings more information to bear on the task
of determining the root cause of some observed behavior. For instance, consider the
problem of analyzing the failure of a web page to load. When a REM system observes
unsuccessful web page requests, it can automatically execute a set of diagnostic mea-
surements designed to winnow the set of possible reasons for the failure down to the
root cause(s) (e.g., a subsequent traceroute may highlight a disconnect or loop in the
path). While any particular reactive measurement task can be manually pieced together
with straightforward scripting, many of the tasks (collecting events, expressing depen-
dencies, managing timers, archiving results to varying degrees) beneﬁt a great deal from
a “toolbox” approach. Essentially, it is the absence of such a toolbox that, we believe,
has led to a failure to exploit reactive measurement to date.
M. Claypool and S. Uhlig (Eds.): PAM 2008, LNCS 4979, pp. 92–101, 2008.
c(cid:2) Springer-Verlag Berlin Heidelberg 2008
A Reactive Measurement Framework
93
The basic notion behind the reactive measurement paradigm is that automatically
coupling disparate measurement techniques can bring more information to bear on the
task of gaining insight into particular network behavior. The fundamental REM build-
ing block is having one measurement’s result trigger additional reactive measurements.
Thus, when a particular behavior is observed, we can automatically trigger additional
measurements to work towards determining the root cause(s) of the behavior. Further-
more, as those tools hone in on the underlying reasons—or determine that a given
hypothesis is incorrect—their output can again trigger the additional measurements
needed to drive progress forward. The paradigm of reactive measurement is to think
of “measurement” as a process rather than a simple activity. The goal of the process is
to gain insight, and in a system as complex as today’s networks such a task will likely
involve more than one assessment technique.
This quite simple idea holds promise both for providing a foundation for signiﬁcant
advances in network troubleshooting, and for fostering new types of Internet measure-
ment studies. Regarding this latter, the literature is ﬁlled with Internet measurement
studies that evaluate the behavior of networks that are working as expected. These
studies sometimes offer glimpses of the failure modes present in the current network,
when such glitches are observed in the course of taking measurements (e.g., [12] iden-
tiﬁes routing “pathologies”, which are then removed from subsequent analysis). REM,
however, enables the opposite approach. Because REM can key on anomalies in the
network, REM can be used to trigger measurement infrastructure precisely when unex-
pected events occur, enabling us to learn a wealth of information about the causes of
the problems and their immediate effects. We can further ultimately envision REM as
the basis for networks that can automatically diagnose problems and take steps to work
around detected failures.
REM enables fundamentally new ways to measure network behavior that cannot be
accomplished with stand-alone active or passive techniques. Consider the case of mea-
suring failures in the Domain Name System (DNS). While a number of studies on the
operation of the DNS have been conducted (e.g., [6]), the fundamental question “how
long does a particular DNS failure persist?” remains largely unanswered. This question
cannot be answered by simply monitoring the network, because the experiment is then
beholden to users who may or may not trigger additional DNS requests after a failure
(particularly if they’ve been trained by the failure patterns they’ve experienced in the
past). Alternatively, researchers could actively query the DNS for a set of hostnames
independent of the requests invoked by actual users. In this case, following up on failed
requests is straightforward. However, while this approach can shed light on the orig-
inal question, the workload imposed on the DNS and network is synthetic and likely
unrealistic. Using reactive measurement allows for bringing both active and passive
measurements to bear to answer the basic question: a monitor can observe naturally
occurring DNS requests in the network, and, upon noticing a failed DNS request, the
REM system triggers an active measurement tool to periodically query the DNS to de-
termine how long the failure persists, whether the failure is intermittent, etc. We can
also invoke additional tools to determine why the DNS requests are not completing.
A second use of REM is for targeting measurements. Consider a packet-trace study
investigating the behavior of networks and protocols under “very congested” conditions
94
M. Allman and V. Paxson
to gain insight into how to evolve protocols and algorithms to work better in such situ-
ations. The way this is often done today is to trace the network for a lengthy block of
time and then post-process the resulting traces for periods when the network is “very
congested,” discarding the remainder of the trace. This methodology is scientiﬁcally
sound, but logistically cumbersome due to the volume of traces that must be initially
collected. Using a REM system, however, the researcher could ﬁrst passively assess the
state of the network, and then trigger detailed packet capture only when the network is
in the desired state. In this way, not only does the researcher not have to capture and
store trafﬁc that will ultimately not be used, but the trafﬁc that is captured is immedi-
ately available for analysis without pre-processing. In this case, REM does not provide
a methodology for conducting a fundamentally different experiment than could other-
wise be undertaken (as is the case for the DNS investigation described above), but it
eases some key logistical challenges by providing targeted measurements. This is not a
minor beneﬁt, as the logistical burdens can easily be such that they, in fact, provide the
ultimate limit on how much useful data is gathered.
Finally, we note that while we have framed the REM system in terms of reactive
measurements, the system is general enough to support a much broader notion of a re-
action—such as something that is executed, but is not a measurement. For example, a
generic reaction could page a network operator when the system has determined that
a router has crashed. Ultimately, the REM system could be used as a platform to au-
tomatically mitigate or correct observed problems. For instance, if the REM system
determines that a local DNS server has crashed, it could trigger a backup server to
take over (as well as notifying operators of the change). Using the REM framework in
this way offers great potential for providing a powerful method to add robustness to
networks.
The remainder of this paper is structured as follows. We sketch related work in § 2.
In § 3 we present the architecture of a prototype REM system that we have developed
to support diverse measurement needs by providing the “glue” with which to tie to-
gether arbitrary active and passive network measurement tools. We brieﬂy summarize
in § 4.
2 Related Work
First, we note that the wealth of work the community has put into developing active
and passive measurement tools forms a necessary component of the REM framework.
As outlined in this paper, the reactive measurement system conducts no measurements
itself. Rather, it leverages the results from independent active measurement tools and
passive trafﬁc monitors as input into a decision process as to what subsequent measure-
ments are required to uncover the cause(s) of a given network phenomenon.
Many past studies have employed multiple measurement techniques in an attempt
to gain broader insight on a particular problem than can be obtained when using a
single measurement method. For instance, [9] uses both traceroute and BGP routing
table analysis to determine the AS path between two given hosts. The key differ-
ence between these kinds of studies and the REM framework outlined in this paper is in
A Reactive Measurement Framework
95
REM’s automated coupling of measurements. REM speciﬁcally deﬁnes dependencies
between the output of a measurement tool and what (if any) additional measurements
are required. We note that REM is orthogonal to and does not obviate the usefulness of
studies like [9] that leverage information from multiple independent measurements.
The literature also has examples of researchers utilizing the reactive measurement
notion. For instance, [3] uses traceroute measurements to followup on the detection of
possible “missing routes” found by analyzing BGP routing tables. Another example is
discussed in [2], whereby incoming email is ﬁrst classiﬁed as spam or ham and then the
URLs within the spam are followed in an effort to characterize various scams. While
researchers have used REM techniques in the past for speciﬁc purposes, what has been
missing is to systematize these mechanisms in order to make REM broadly available to
the research community as a general approach.
In addition, we note that our framing of measurement as a process rather than an
event shares some properties with PDA [5] (which is mainly focused on host problems,
but does touch on connectivity issues as well), ATMEN [8] (which is largely concerned
with coordinating distributed triggered measurements across organizations), and the
general idea of “trap directed polling” via SNMP information. All of these systems
in some fashion make use of one measurement to drive another measurement (and/or
ultimately make a conclusion), but all focus on different aspects of the problem.
Reactive measurement shares some of the goals of the “knowledge plane” (KP) pro-
posed in [4]. The KP envisions continuously gathering information about the network.
When particular behaviors need further investigation the KP can be queried to gain
a breadth of relevant information. One immediate and practical problem with the KP
approach is the immense task in gathering and sifting through information about the
entire network. REM proposes essentially the opposite approach: rather than synthe-
sizing from already-gathered information, REM aims to adaptively gain insight into
particular observed behaviors by running a series of measurements in response to a
given phenomena. REM thus has the advantage that it can be conducted locally. No
distributed data substrate—with the attendant difﬁculties of scaling, privacy, security,
trustworthiness—needs to be constructed. That said, we note that REM in some sense
is also orthogonal to ambitious approaches such as KP. The two could be coupled, such
that facts learned by REM activity are fed into the KP data substrate, and REM itself
could incorporate facts extracted from the substrate to drive its local decision process
(as discussed in more detail in § 3.4).
Finally, we note that intrusion detection systems (IDS) share some high-level notions
with REM [18,13]. IDS systems passively observe trafﬁc to draw observations regard-
ing network activity. These observations can be hooked to a “reaction”, ranging from
logging an event to resetting a TCP connection to adding a ﬁrewall rule to block trafﬁc
from a host that is port scanning the network. The REM concept of a reaction is much
broader than the security-related reactions that popular IDS systems incorporate. In ad-
dition, IDS systems offer a passive view of the network, while reactive measurement
allows for active probing to determine the state of the network. However, the ability
of some IDS’s to sift through large trafﬁc streams to ﬁnd speciﬁc types of high-level
activity offers great promise of leverage within the REM framework (see § 3).
96
M. Allman and V. Paxson
3 REM Architecture
This section presents an architecture for a generic, reusable reactive measurement sys-
tem suitable for a broad array of measurement efforts. Our aim is to both explicate the
approach and solicit input from the community while the effort is in its formative stages.
We begin with a discussion of incorporating external measurement tools into the sys-
tem. We then present the internal machinery that drives the measurement procedures,
brieﬂy delving into some of the details. Finally, we discuss possibilities for integrating
the REM system with other external resources.
External Meas.
Active Meas.
d
m
e
r
.
s
a
e
M
e
v
i
t
c
a
e
R
Fig. 1. Conceptual layout of the reactive measurement system
3.1 External Interactions
Fundamentally, the REM system couples measurements with reactions. Figure 1 illus-
trates the system’s basic structure: arbitrary measurement tools glued together using a
daemon, remd, that can be run on any general purpose computer connected to the net-
work to be measured. remd provides an interface to and from traditional measurement
tools, as well as a method for specifying the relationships between the measurements
(outlined in the next subsection). First, we outline the various measurements shown in
Figure 1 with which remd interacts:
– Active Measurements. remd can initiate independent active measurements based
on a run-time-conﬁgured schedule and incorporate their results as input into
whether or not to follow up with a reactive measurement, and in what form. For in-