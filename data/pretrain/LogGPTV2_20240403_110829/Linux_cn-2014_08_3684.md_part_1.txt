---
author: ''
category: 技术
comments_data:
- date: '2014-08-28 07:23:58'
  message: 人家叫 Greg Kroah-Hartman，不叫 Grey Kroah-Hartman……把这位大神的名字打错了，小心立刻被降下 kernel
  postip: 123.118.122.179
  username: ''
- date: '2014-08-28 07:33:00'
  message: Repost
  postip: 111.73.45.100
  username: 微博评论
- date: '2014-08-28 07:33:00'
  message: 转给需要的人
  postip: 111.73.45.100
  username: 微博评论
- date: '2014-08-28 07:33:00'
  message: 早安
  postip: 111.73.45.100
  username: 微博评论
- date: '2014-08-28 07:33:00'
  message: Repost
  postip: 111.73.45.100
  username: 微博评论
- date: '2014-08-28 08:03:04'
  message: m
  postip: 37.58.100.235
  username: 微博评论
- date: '2014-08-28 08:03:04'
  message: '@我的印象笔记'
  postip: 37.58.100.235
  username: 微博评论
- date: '2014-08-28 08:03:04'
  message: '@我的印象笔记'
  postip: 37.58.100.235
  username: 微博评论
- date: '2014-08-28 09:03:01'
  message: '[加油啊]'
  postip: 113.57.179.98
  username: 微博评论
- date: '2014-08-28 09:33:00'
  message: '[鼓掌]'
  postip: 122.194.107.52
  username: 微博评论
- date: '2014-08-28 10:03:01'
  message: '[赞]//@倍哥也是哥: [加油啊]'
  postip: 58.248.138.4
  username: 微博评论
count:
  commentnum: 11
  favtimes: 3
  likes: 0
  sharetimes: 7
  viewnum: 17052
date: '2014-08-28 07:01:00'
editorchoice: false
excerpt: Linux 内核补丁测试 你试过自己写内核补丁吗？本节介绍在把你的补丁包提交到 Linux 邮箱列表之前，需要做哪些操作。另外我们还会介绍如何把它发送出去。  写好代码后，编译它。把
  make 过程产生的输出保存到文档中，查看新代码有没有警告信息。找到所有的警告信息，处理掉。当你的代码编译过程没有任何不正常的输出，安装这个内核，然后启动测试。如果启动正常，查看
  dmesg 里面有没于错误，与老内核生成的 dmesg 日志做个比较。运行一些压力测试，请参考我们以前讲过的测试内容。如果这个补丁用于修复某个 bug，请确保真的已经修复了。如
fromurl: http://www.linuxjournal.com/content/linux-kernel-testing-and-debugging?page=0,5
id: 3684
islctt: true
largepic: /data/attachment/album/201408/26/000556ebol5zelbltiemy7.png
permalink: /article-3684-1.html
pic: /data/attachment/album/201408/26/000556ebol5zelbltiemy7.png.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: Linux 内核补丁测试 你试过自己写内核补丁吗？本节介绍在把你的补丁包提交到 Linux 邮箱列表之前，需要做哪些操作。另外我们还会介绍如何把它发送出去。  写好代码后，编译它。把
  make 过程产生的输出保存到文档中，查看新代码有没有警告信息。找到所有的警告信息，处理掉。当你的代码编译过程没有任何不正常的输出，安装这个内核，然后启动测试。如果启动正常，查看
  dmesg 里面有没于错误，与老内核生成的 dmesg 日志做个比较。运行一些压力测试，请参考我们以前讲过的测试内容。如果这个补丁用于修复某个 bug，请确保真的已经修复了。如
tags:
- 内核
- 调试
- Debug
thumb: false
title: Linux 内核的测试和调试（6）
titlepic: false
translator: bazz2
updated: '2014-08-28 07:01:00'
---
### Linux 内核补丁测试
你试过自己写内核补丁吗？本节介绍在把你的补丁包提交到 Linux 邮箱列表之前，需要做哪些操作。另外我们还会介绍如何把它发送出去。
![](/data/attachment/album/201408/26/000556ebol5zelbltiemy7.png)
写好代码后，编译它。把 make 过程产生的输出保存到文档中，查看新代码有没有警告信息。找到所有的警告信息，处理掉。当你的代码编译过程没有任何不正常的输出，安装这个内核，然后启动测试。如果启动正常，查看 dmesg 里面有没于错误，与老内核生成的 dmesg 日志做个比较。运行一些压力测试，请参考我们以前讲过的测试内容。如果这个补丁用于修复某个 bug，请确保真的已经修复了。如果真的修复了，请确保能通过系统测试。找出打你补丁的模块下面的回归测试工具，运行一下。如果补丁涉及到其他架构，你需要交叉编译然后测试一下。请通过下面的目录查找测试工具：
* linux\_git/Documentation
* linux\_git/tools/testing
* 交叉编译参考：[在 x86\_64 架构上交叉编译 Linux 内核：初学者教程](http://events.linuxfoundation.org/sites/events/files/slides/Shuah_Khan_cross_compile_linux.pdf)
如果你对你的补丁测试结果感到很满意，你就可以提交补丁了。请确保提交 commit 的信息要描述得非常清楚。要让内核维护者和其他开发者看懂补丁所修改的内容，这一点非常重要。生成补丁后，执行 scripts/checkpatch.pl 脚本，找到 checkpatch 是产生的错误或警告（如果有的话），修复它们。重新生成补丁，直到补丁通过这个脚本的测试。重新测试这个补丁。将本补丁用于其他的内核源码上，保证不会有冲突产生。
现在你做好提交补丁的准备了。先运行 scriptst/get\_maintainer.pl 来确认你应该把补丁发给哪个内核维护者。注意不要以附件形式发送补丁，而是以纯文本形式粘贴在邮件里面。确保你的邮件客户端可以发送纯文本信息，你可以试试给自己发送一份补丁邮件来测试你的邮件客户端的功能。收到自己的邮件后，运行 checkpatch 命令并给自己的内核源码打上你的补丁。如果这两部都能通过，你就可以给 Linux 邮箱列表发送补丁了。使用 git send-email 命令是提交补丁最安全的方式，可以避免你的邮箱的兼容性问题。你的 .gitconfig 文件里面需要配置好有效的 smtp 服务器，详细操作参考 git 的帮助文档。
更多提交补丁的规矩，请参考下面的资料：
* linux\_git/Documentation/applying-patches.txt
* linux\_git/Documentation/SubmitChecklist
* linux\_git/Documentation/SubmittingDrivers
* linux\_git/Documentation/SubmittingPatches
* linux*git/Documentation/stable*kernel\_rules.txt
* linux*git/Documentation/stable*api\_nonsense.txt
下面是一些内核测试教程的资料：
* [USB Testing on Linux](http://www.linux-usb.org/usbtest/)
* [Linux Kernel Tester's Guide Chapter2](http://kernelnewbies.org/Linux_Kernel_Tester%27s_Guide_Chapter2)
* [Linux Kernel Tester's Guide](http://www.kerneltravel.net/downloads/tester_guide.pdf)
* [Testing resources at eLinux.org](http://elinux.org/Test_Systems)
* [eLinux Debugging Portal](http://elinux.org/Debugging_Portal)
### 内核测试套件和项目