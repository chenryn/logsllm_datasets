### Equations and Definitions

1. **Star Constraints:**
   \[
   t_{i,j} \leq \Delta t, \quad \forall i \in U'
   \]
   (1)
   (2)

   These equations indicate that a star must contain at least two left-hand nodes, and the time difference between the addition of the first and the last edge to the star must be at most \(\Delta t\).

2. **Lockstep Constraints in \( G(U, V, E) \):**
   \[
   |U'| > 2
   \]
   \[
   \exists V'_i \subseteq V' \quad \forall i \text{ such that } |V'_i| > 2 \text{ and } |V'_i| \geq \alpha |V'|
   \]
   \[
   (i, j) \in E \quad \forall i \in U', j \in V'_i
   \]
   (3)
   (4)
   (5)

   These constraints specify that a lockstep must contain more than two nodes from both sets \(U\) and \(V\), and the subgraph induced by these nodes must be nearly complete. If \(\alpha = 1.0\), this subgraph is a complete biclique; for any value \(\alpha_{\text{min}} \leq \alpha < 1.0\), the subgraph is nearly complete.

### Non-Goals

We do not aim to detect all possible malware delivery vectors, such as download instructions hardcoded into executables.

### Ground Truth Data

Due to the lack of ground truth about malware delivery campaigns, we cannot estimate the false negative rate. An undetected malicious downloader could either be a false negative or a dropper not controlled remotely. However, we collect ground truth data about executables from multiple sources.

### Example Lockstep Detection

- **MINIBAR-MASTER, EXEBI_RUN ONCE.EXE**: 
  - At \( t = [0, \Delta t] \): bigspeedpro.com
  - At \( t = [3\delta t, \Delta t + 3\delta t] \): bispd.com
  - At \( t = [6\delta t, \Delta t + 6\delta t] \): bispd.com
  - **Detected**: BISEHUP 35464.EXE
  - **Timestamps**:
    - 2013-01-06
    - 2013-01-24
    - 2013-01-13
  - **Payloads**:
    - Trojan.generic (malware)
    - Smote Ltd. (PPI)
    - YellowSoft Inc (PUP)
    - DealPly Technologies Ltd. (PUP)
    - betwikx (PUP)
  - **Total**: 16 PUPs / 1 Malware

### VirusTotal Data

VirusTotal provides file scan reports for up to 54 antivirus (AV) products. We query VirusTotal for the hash of each downloader and payload in our dataset to obtain:
- First-seen timestamp
- Number of AV products that flagged it as malicious
- AV detection names
- Total number of AV products used for scanning
- Corresponding file signatures

We were able to retrieve reports for about 17% of the binaries from 2013. Following prior work, we set a threshold \( r_{\text{mal}} \geq 30\% \) and flag files that meet this condition.

### Separating Malware and PUPs

To further separate malware and potentially unwanted programs (PUPs), we search the AV labels for keywords such as "adware", "not-a-virus", "not malicious", "potentially", "unwanted", "pup", "pua", "riskware", "toolbar", "grayware", "unwnt", and "adload". We define \( r_{\text{pup}} \) as the percentage of AV labels that include one of these keywords. A binary is considered malware if \( r_{\text{mal}} \geq 30\% \) and \( r_{\text{pup}} \leq 10\% \). It is treated as a PUP if \( r_{\text{pup}} > 10\% \) and \( r_{\text{mal}} \geq 30\% \). Through this process, we identify 1,228 malware samples and 15,350 PUPs.

### National Software Reference Library (NSRL)

NSRL provides a reference data set (RDS) of benign software. We collect the MD5 signatures of applications and their list of publishers. The RDS version we use is 2.52, released in April 2015. We consider an executable benign if either (1) the hash matches or (2) the publisher matches and has a valid signature.

### Publisher Information

To identify publishers engaged in the Pay-Per-Install (PPI) business, we use two lists of PPI providers from underground forums. For other types of publishers, we query the Reason Labs knowledge base, which provides details about the publisher, such as whether it is considered safe or if it uses its certificates to sign PUPs.

### Real-Time Lockstep Behavior Detection

In this section, we describe the design and implementation of Beewolf, which detects lockstep behavior in real-time. Beewolf can operate in two modes:
- **Offline Mode**: Analyzes the entire download events to characterize lockstep behaviors empirically.
- **Streaming Mode**: Receives data incrementally and prunes detected locksteps to focus on suspicious downloaders and domains.

Beewolf is implemented in Python using the NetworkX package to manipulate graphs. The system consists of a data analysis pipeline with four components:
1. Star Detection
2. Galaxy Graph Construction
3. Frequent Pattern (FP) Tree Construction
4. Lockstep Detection

We also maintain a database with three tables: `download_events`, `stars`, and `locksteps`.

### Whitelisting

As discussed, we identify benign binaries using NSRL data and maintain a whitelist of these binaries. Before the main data analysis pipeline, we filter out download events generated by benign downloaders listed in the whitelist. This helps us focus on the most suspicious campaigns and improves Beewolf's performance. Our whitelist contains 6,996 downloaders.

### Star Detection

Each row in the `download_events` table consists of:
- Downloader (dlr)
- Corresponding domain accessed (dom)
- Downloaded file (payload)
- Timestamp when the download event occurred

We assign a unique identifier to each download event.