7917372295362061329900836370298470947515267182220089559140161316668375925729019
159451540887099416739285260793895520684169647332097946577988683834451549500, 
6085015928545114046829870129740091726781899104356963203540206241529708243464864
00228097168910708037255311203747068067052749082270030166932944990640595155, 
2894224439654175835954538071978250763313690357973182208018633977290068424630736
631212387239357042071718796537440397065531576222954551163656670878222633043, 
5041274498649635877809060779866638055686265659308351217889955482597568943230549
95757487390539378495778776717781004334527496998405258832359705610087778693, 
5022633966144329066931945053749362733276928710666681298308569649641591939960265
045922058033435401201408134033696372259717857394208422761618880973147844875, 
2165256954581950835653752674429102982489895587763511810839471898492006303373593
26120031567116045508425190243370694238447129871952842190318339882295092562, 
5533281360781440253910948349639021267324331205157983530359075087050728472532387
8672779923815336086910292915619086829209809846343974175966683373177382077, 
3630524019142805861631668353346334937704827359192125349516456885667794525291595
529929086153281075550884584231494859699382682596251752343615064058559406764, 
6392963545230210337157391244587785141470659057548532722479903691912448349355457
278186024783257167883523593948852925876154377799101759663028131918179653571, 
4442829647492490374613850308438855276503023922211939255469864116063514707669290
810830414184786720238072026622419275361453612047204558554419312144286259468, 
1759338829666053177747146919327329669303495673564934133680028967186926572146069
895603937573990410440985937014166297277860200107201638090847738557767964696, 
8334410645221564918077596577965452038701132661434227553181963530590038241797029
746632231928732138154904365424047833619356302480500821878283752622533896251, 
5359315305367917356213210886811340809384305535549005399287605827231096420461053
787094148182375444236381588186877988667633159846129164910014251415892498132, 
4746826898452264807834285353400513924949404077618616570227083938415541478006630
294997865994159732270016751595357962278201072139607695251135337247617131992, 
5016930037894974124741615669774265503833263718843694570857165922378526693871296
298134393296082565112363133289012998090234541487743986269014273194596057955, 
8197448674373033294952340311923519947067909165415185089706782640506985890268176
411156105112132477264189732570831373433580808644766896981445976251986855696, 
6589237784164415148365714582970930716701386827020567091631935937680638722404454
224527824255582387427519541494298681900655122812145798569741225797458863108, 
8084866378683270361133155602299770255080540237412875188411541385316894114349102
49583338776510233797998781699526767128738679793060691181761514909549134063, 
3769953473253777216890135803024170033958734469557749393401010842796554499552455
996067886208642425194269272962583441879343634357421209769927778139615457086, 
8648783682385351787429904741468782969290901724408414304196681581886742880850869
255226426074733921733700408886500096712616897546139602419775788283857103421), 
7770085217712432245727368574550860269957276818870369467852442885171861770161654
806953238112970589224488053165873370622365771914453070362272644412340539466), 
((50794128331390725047744760066062365931316369150235000197057006573544775887105
95846671560309179828976999434348083117084285664719106069500963061237719944249, 
5497683738708987204871886929772487371500355010410815522794521884002052422887034
373948677436300013182349519599723284412730961957736005493014762684123125119, 
4113135767064733659873940601459094843066237649144093086625687945040723326309865
677834934042224179899929564880220697268223329948482671815496016955266663223, 
3392217772822151206275194128600962083509150328452380087286897355023018439262742
846070459277611025565109233469618132504758458340421960371866873437007264233, 
3365498222187846283153249049359327648115554102312243312346730089147397886906579
361139892875145679132405535363890951438533684099642484211783470050561572090, 
4225958227329426325306527621849307170845897672434362595463863931382964133361343
102452344304790569687594817714487357881502594857940903622892337971872622843, 
5173749330468957313630724154245148117380770953975841967929792017991412806922010
077406572003094993346660169736235020448167563907452994662156718625291898177, 
1229610997556049747389312398751404844462286789194967528086153926284798728226564
379776243217592116504890051338266144856198323790264467524164094542645340449, 
6203680582467770572522969967519824097933455805468745813199784379973617263283297
338718864149375638946204243486269640991734283779455487847203352584387719645, 
5608645295350352855151948757164250366474175448526359589492914709896087182836931
6566088386670088142716291965913196320063985048628245430982451288663555885, 
3403374879683730297280437189217912681835432625970611834599530740947495157988678
066506601391819441931063536245802488588573659283517243895466341411305110324, 
7442932357600347452361751943363129851099112351209653789722828755122436694919027
16431161159380631359646269447369217054493577943824080088473756092546126977, 
8668133481379329692543670874460685357562479529490825364682221351235612007824127
207442966694231156272632850180639502601823102836771255576233548822940869020, 
1219715070629398448852557251930036440394807874495733624196723771007632495951280
666863555173536849986422086170890545065655450572208851871920414134263312098, 
4747365676558350439769293635808561555839690391444218815871257286595761098201288
845909402843945154668155931426990106767236836023703200891805546557121012073, 
3920347900583869766358302781316826115017122648407775590746950242976782702043441
758671927051920531832079303209716493688335858991278920542117820999837433142, 
3576840812113579241538246556101813540334697366614051327007319650917111480952337
678268254159889215991659487471715245866163954886019775061014794685469526051, 
3092297002515783891268190980572898172886479901143140327952861270758137195250513
942311330345917919789056073380222006958238678078634561527264412956485891476, 
6582692354043676077464047148211241461047349285651950869775703383815058210393892
817655983928584367805279348283488007120718847971738909692579561994803789695, 
8598390925565621752548337638050618122615349145246190071312250646124409478641875
554334100045522664354108081384681839188236875230512916834506985784368018394, 
5083605465037551426375115279112530833649365897478896248453167239016815002547309
874855133404152107506672855443412952846147025640137153179630166172327027330, 
1078147741523967897407360595305143764515994159016051900207907782282127491640318
252144847618457546065143649780436954044461604507820520593029966372496409637, 
3852878966789649266122956765767039332064168482967659874943504051710934855463016
293267218511298797618212940415835400312628838344789736612805007985370428145, 
9200416343947996948346011820486450582961562887661776231597920020599516288931447
91530809828870293432713861529443364372306843132548518995895104247132963087, 
5734615379599373445600159522772937224770942670015772616505375245593725479273178
021878942681057144899926301156376741272312879342507863577873536142681432731, 
5029479357524785083767567919596413375936832916212251818803409973422754531463834
525741294936388865108384840908338843317872412437263839700620609877107482803, 
6701900865710614500492346881193714258803024363131861799464627138434544901332102
442716568297670562622321069153283677278021729137525882479313181014152547671, 
5889329153070156201321108507375060411970621935685429116266713581662380366605673
140144815822362931810010604763015965055273701160440694193294294968648794901, 
8574399376485141907071177823840882296675935962122577954914332938675068371495222
205324524010427996628170530789488819088132375660058449209427170779307077863, 
digits_missing
7508412330550631031072193813247097396383978329776386950571408880553076372106661
585720899853953885472449264700576567460555041273838730657222078207877817016, 
6869272965841332617039395564789220063365034769505498157305065395162427690921422
473071422816297073065457736260894005105471713054934784745390619304450890449, 
1471979679069983546463931008824657873603964850019734999301726924968161951025523
657417948416862015650067176153329767615195575964113846545513592680199730134), 
1453790444439443054964831311854656941846598701488745227690189722189160097459829
062128556175093075739116231397568438401899119976110085281584614989325629127)]
A_values = matrix([x for x, _ in L])
b_values = vector(ZZ, [y for _, y in L])
A = matrix(ZZ, m + n, m)
for i in range(m):
  A[i, i] = q
for x in range(m):
  for y in range(n):
    A[m + y, x] = A_values[x][y]
lattice = IntegerLattice(A, lll_reduce=True)
print("LLL done")
gram = lattice.reduced_basis.gram_schmidt()[0]
target = vector(ZZ, b_values)
res = Babai_closest_vector(lattice.reduced_basis, gram, target)
print("Closest Vector: {}".format(res))
R = IntegerModRing(q)
M = Matrix(R, A_values)
ingredients = M.solve_right(res)
print("Ingredients: {}".format(ingredients))
from gmpy2 import *
from Crypto.Util.number import *
from random import getrandbits
import uuid
from sympy.ntheory.modular import crt
import fuckpy3
# flag = 'flag{' + str(uuid.uuid4()) + '}'
# flag = flag.encode().strip(b'flag{').strip(b'}').split(b'-')
# padding = long_to_bytes(getrandbits(512))
# m = bytes_to_long(flag[0] + padding + b''.join([_ for _ in flag[1:]]))
# def leak(a, b, c):
#     e1, e2 = a >> 32, a & 2 ** 32 - 1
#     m1, m2 = b >> 256, b & 2 ** 256 - 1
#     # p, q = getPrime(512), getPrime(512)
#     p = 
8514672730643859048534394807069131309787680751164114599934679913182447855051351
521282825849300875451180808934634723540177392572020614371228127350366315093
#     q = 
1139618348466298216041452011599656864105349316944181838568999887492219018460061
8993189406161808331825258864834179755881024216396230998042790787143415918623
#     e = 2161005773  # getPrime(32)
#     n = p * q
#     d = invert(e, (p - 1) * (q - 1))
#     c1 = pow(b, e, n)
#     c2 = pow((m1 + m2), (e1 + e2), n)
#     c3 = pow(a, a, n)
#     c4 = pow(c, 0x10001, n)
#     return (p, q, d % (p-1), d % (q-1), c1, c2, c3, c4)
# return c2, c3, c4
# def enc(m):