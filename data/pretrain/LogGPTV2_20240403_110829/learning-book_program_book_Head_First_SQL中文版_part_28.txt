31.99
SELECT first_name,MIN(sales)
FROMcookiesales
的最低销售量。
GROUP BY firstname;
first_name
sales
你看，其他女孩都曾空
Nicole
0.00
Britney
2.58
手回家，但Britney表现
Lindsay
0.00
最差的一天也还是卖出
Paris
0.00
饼干了。
这下子我该认真起来了。或许我可以找出
销售天数比其他人都多的女孩？
268
第6章
---
## Page 301
SELECT进阶
COUNT，计算天数
为了找出销售天数比其他人都多的女孩，Edwina采用了COUNT函数
来计算大家销售饼干的天数。COUNT将返回指定列中的行数。
COuNT返回sales_date列中的行
K
SELECTCOUNT(saledate)
数。如果数据值是NULL.则不
纳入计算。
FROM cookie_Sales;
cookie _sales
ID
first_name
sales
sale_date
左边是原始表。你觉得查询会返回什么结果？
1
Lindsay
32.02
3-6-2007
2
Paris
26.53
3-6-2007
3
Britney
11.25
3-6-2007
4
Nicole
18.96
3-6-2007
5
Lindsay
9.16
3-7-2007
6
Paris
1.52
3-7-2007
7
Britney
43.21
3-7-2007
8
Nicole
8.05
3-7-2007
6
Lindsay
17.62
3-8-2007
Paris
24.19
返回结果代表了实际卖出饼干的天数吗？
10
3-8-2007
11
Britney
3.40
3-8-2007
12
Nicole
15.21
3-8-2007
13
Lindsay
0
3-9-2007
14
Paris
31.99
3-9-2007
15
Britney
2.58
3-9-2007
16
Nicole
0
3-9-2007
17
Lindsay
2.34
3-10-2007
设计一个查询以返回每个女孩卖出饼干的天
18
Paris
13.44
3-10-2007
数。
19
Britney
8.78
3-10-2007
20
Nicole
26.82
3-10-2007
21
Lindsay
3.71
3-11-2007
22
Paris
.56
3-11-2007
23
Britney
34.19
3-11-2007
24
Nicole
7.77
3-11-2007
25
Lindsay
16.23
3-12-2007
26
Paris
0
3-12-2007
27
Britney
4.50
3-12-2007
28
Nicole
19.22
3-12-2007
当前位置
269
---
## Page 302
磨笔上阵解答
磨笔上陈
解答
左边是原始表。你觉得查询会返回什么结果？
答：算出28个销售日。
返回结果代表了实际卖出饼干的天数吗？
答：无法代表。返回结果只是sale_date中有
记录的天数。
设计一个查询以返回每个女孩卖出饼干的天数。
SELECT first_name.COuNT(sale_date)
FROM cookie_sales
CROUP BY fitst_name;
只要用ORDERBY排列一下
sale_date的顺序，并观察最早和最晚
的口期，不就能找出销售错干的天数了
嗯…不是这样哦。在最早和最
晚日期间，我们无法确认其间每一
天都销售了饼干。
不过的确有找出销售出饼干的确切天数的
简便方式，那就是使用关键字DISTINCT。
我们不仅可以利用DISTINCT计算出所需
的
COUNT数量，还能取得没有重复的日
期列表。
270
第6章
---
## Page 303
SELECT进阶
选出与众不同的值
因为DISTNCT是个关键字
让我们先单独观察关键字DISTINCT的作用，
而非面数，所以不需要为
不要和COUNT函数搭配。
sale_date加o上括号。
SELECT DISTINCTSale_date
FROMcookie_sales
这里加上的ORDERBY可以让我
ORDERBYsale_date;
们看出最军和最晚日期。
SELECT DISTINCT sale_date
FROM cookie_sales
->ORDER BYsale_date;
lsale_date
2007-03-061
2007-03-071
请看，每个
2007-03-081
 099第
2007-03-091
都没有重
2007-03-10
复！
2007-03-111
2007-03-121
rows in set（0.o0 sec）
现在，让DISTINCT和COUNT函数搭配使用：
请注象，DJSTNCT和sale_date一同
出现在括号中。
SELECT COUNT（DISTINCT sale_date)
FROM cookie_sales;
我们不需覆ORDERBY.
脑力锻炼
因为COUNT只会返回一
个值，不需要排序。
尝试这个查询，然后用它找出卖出饼干
的天数最多的女孩。
当前位置
271
---
## Page 304
猜猜我是谁
猜猜我是谁
有一群SQL函数和关键字经过精心打扮，一同参加“猜猜
我是谁”化装舞会。它们会提示自己的身份，我们则要根
据提示内容猜出它们的身份。所有关键字都会说实话。请
在下面左边的空格中填上关键字或函数的身份，在右边的
空格中注明它是关键字还是函数。
今晚的贵宾：
COUNT、DISTINCT、AVG、MIN、GROUPBY、
SUM、MAX
关键字或
贵宾名称
函数
使用我而得到的结果或许不会很高贵。
我交出来的结果会比我收入的大。
我会给你独一无二的结果。
我会说出数据的数量。
279
如果想求总和，你会需要我。
第
见
我只对大的数字有兴趣。
物
你问我好不好？普普通通，中等啦！
272
第6章
---
## Page 305
SELECT进阶
没有蠢问题
没有蠢问题
问：
使用MIN（）的查询似乎没办法帮Edwina
最大值，为什么不直接加上ORDERBY子句？
找出第二个赢家，不是吗？
答：
确实可以、而且这也是非常好的做法。不
合：
的确没办法，但可以帮地找出表现最差的
过本章是故意忽略了ORDERBY。我不希望混清
女孩。明年再办这个活动时，她可以特别鼓励成绩
查询的原始结果，而且也让你比较容易学习新函数。较落后的孩子。
回头审视本章的函数，并想象加入ORDERBY后的
查询会如何改变查询结果。
会有什么影响吗？
套用在任何列上吗？
到的函数都不会返回NULL、因为NULL代表此处
无值，而不是此值为零。
相同值时特别有用，还有，如果你只是想看看
存储了哪些值，而不需要一长串重复的记录时，
DISTINCT也很好用。
思.…..AVG、MAX、COUNT都没有办法为
我找出第二名优胜者。不血我用SUM找出
C
总成绩第二名的女孩并给姚奖励吧。
动财
假设我们不只面对4位女孩，而是40位Gir1
Sprouts，我们应该如何用SUM找出第二名？
当前位置
273
---
## Page 306
限制查询结果
LIMIT查询结果的数量
Edwina决定用sUM判断第二名。让我们再度回头审视原始查询及结果，以便
想出寻找第二名的方法。
SELECT first_name,SUM(sales)
FROMcookie_Sales
GROUPBYfirst_name
ORDER BYSUM(SaleS)DESC;
这里使用的ORDER BY
first name
sales
其实我们只想知道最前
非常重要，否则我们
Britney
107.91
面两条结果。
的查询结果不会有任何
Paris
98.23
顺序。
Nicole
96.03
Lindsay
81.08
Patis是第二名：Nicole
已经拒绝跟她说话了。
因为本例查询只会得到4条结果，当然很容易判断第二名。但如果需要更高的
精确度，我们可用LIMIT限制查询结果的数量，像本例即可只呈现最前面两
名女孩。套用LIMIT可以精确指定要从结果集返回的记录数量。
SELECT first _name,SUM(sales)
FROMcookie_Sales
GROUP BY first
_name
ORDER BY SUM(SaleS)DESC
LIMIT2;
写了这么长的垂询，最后
这里的L3MJT指定呈现的
只取得两条记录。
结果为两行。
K
firstname
sales
Britney
107.91
Paris
98.23
虽然本例只有4名女孩参与竞赛，从中选出两名实在不算很难，但我们要把眼
光放到大局上。假设电台里有一份1.000首热门歌曲的播放清单，但你还想进
一步过滤到只剩下百首超级热门点播金曲。LIMIT就能只列出最常被点播的
100首，而我们不会看到剩下的900首。
274
第6章
---
## Page 307
SELECT进阶
LIMIT，只限第二名出现
LIMIT甚至能直接点出第二名，连第一名都不用
出现。只需在使用LIMIT时加上两个参数：
你正在搞测这两个数字的意义吗：正在猜它们
金带来什么结集吗：你现在心中的答案可能是
错误的。凡是出现两个参数的地方，其使用方
式绝对和一个参数时大不相同。
first_name
sales
Britney
107.91
Btitney是O.Patis
LIMIT 0,4
Paris
98.23
Nicole
96.03
是1，Nicole是2.
Lindsay
81.08
Lindsay是3。
这是查询结果的起始处。
SQL从0开始计算。
这是返回查询结果
的数量。
还记得百首点播金曲榜吗？以查询第20到第29名的歌曲为例，对
LIMIT加上适当的参数的确有助于产生所需的结果。先按受欢迎程
度排列歌曲，然后加上LIMIT19，10。19表示从第20首歌开始列出
数据（因为SQL从0开始为数据编号），10则代表返回10条记录。
磨笔上阵
请使用LIMIT和它的两个参数，写出只返回第二条记录的
查询。
当前位置
275
---
## Page 308
磨笔上阵解答
磨笔上阵
解答
请使用LIMIT和它的两个参数，写出只返回第二条记录的
查询。
SELECT tirst_name.SuM(sales)
FROM cookie_sales
CROuP BY first_name
ORDER BY SUM(sales)DESC
LJMJT(
请记住.SQL从O开始计数。所
以其实代表第二条记录。
我的SQL语句已经变得又长又复杂了，加入了
好多新学到的关键字。吴键字的确很好用，但
是难道不能让事情筒单一点吗？
你的查询越变越长是因为你的数据越来越复
杂了。
让我们仔细观察你的表，看看它是否过度增长了。接下
来将是第7章的主题
276
第6章
---
## Page 309
SELECT进阶
SELECT填字游戏
让我们的左脑也运动一下吧！下面是一个典型的
填字游戏，所有解答的词汇都曾在本章出现过。
横向
纵向
2.可用这个函数找出某一列中最小的值。
1.可以指定返回记录的数量以及开始返回的位置。
5.这个函数只返回不重复的值。
3.如果利用这个关键字对列排序（ORDERBY），该列
7.CASE中的关键字--，可于没有记录符合条件时规
中的“9”会比“8”先出现。
定SQL的行为。
4.利用这两个词，能以指定列为基准，按字母顺序排列
8.可用这个函数找出某一列中最大的值。
查询结果。
11.利用这两个词，可以根据某列的值把相同记录联合
6.这个函数会加总数值列的结果。
成一组。
9.如果利用这个关键字进行排序，该列中的“8”会
比“9”先出现。
10.在SELECT中使用它，可返回查询结果的总数，而
非结果本身。
当前位置
277
---
## Page 310
复习SQL
你的SQL工具包
第6章
第6章已经收进你的工具包，有了这些进阶
SELECT的函数、关键字和查询，我们也终
于进入最省力的状态。如果需要本书工具的完
整列表，请参考附录3。
ORDER BY
根据指定的列，按字母顺序
COUNT
排列查询结果。
我们不需看到记录，就能知道有
GROUP BY
多少条记录符合SELECT奎询。
COUNT只返回一个整数值。
根据共用列，把记录分成多
个组。
DISTINCT
AVG
不同的值只会返回一次，返回的
返回数值列的平均值
结果中没有重复值
SUM
MAX和MIN
把数值列中的数据加总。
MAX返回列中的最大值：MJN
返回列中的最小值。
LIMIT
可以明确指定返回记录的数量：
以及从哪一条记录开始返回。
你的新工具：进阶
SELECT的函数、美
键字和查询。
278
第6章
---
## Page 311
SELECT进阶
猜猜我是谁
有一群SQL函数和关键字经过精心打扮，一同参加“猜猜
我是谁”化装舞会。它们会提示自己的身份，我们则要根
据提示内容猜出它们的身份。所有关键字都会说实话。请
在下面左边的空格中填上关键字或函数的身份，在右边的
第272页上的
空格中注明它是关键字还是函数。
今晚的贵宾：
COUNT、DISTINCT、AVG、MIN、GROUPBY、
SUM、MAX
关键字或
贵宾名称
函数
使用我而得到的结果或许不会很高贵。
MJN
函数
我交出来的结果会比我收人的更大。
SUM
函数
我会给你独一无二的结果。
DJSTJNCT