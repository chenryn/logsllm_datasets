### Information Flow Analysis for Policy Compliance

Information flow analysis is a method used to ensure that data is handled in compliance with specified policies. Consider the scenario illustrated in Figure 2, which involves three programs (Jobs 1, 2, and 3) and three files (Files A, B, and C). These programs must adhere to a privacy policy that states: "Full IP addresses will not be used for advertising. IP addresses may be used for detecting abuse, but in such cases, they should not be combined with account information." This policy restricts how certain types of personal information flow through the system, based on the intended purpose.

#### Data Inventory and Attribute Labeling

In our setting, the data inventory phase labels each program with the data that flows into it, along with a purpose attribute and a user attribute. An `ALLOW` clause permits nodes labeled with any subset of the attribute values listed in the clause, while a `DENY` clause forbids nodes labeled with any set that overlaps with the attribute values in the clause. The layering of these clauses determines the context within which each clause is evaluated. The formal evaluation semantics are detailed in Section III-E.

### LEGALEASE: A Policy Specification Language

LEGALEASE is a language designed to specify and enforce data flow policies. We will illustrate its use through a series of examples that build up to a complex policy.

#### Basic Policy Example

The simplest LEGALEASE policy is a `DENY` clause without exceptions or attribute restrictions, which denies everything. For example:

```plaintext
DENY DataType IPAddress
```

This policy disallows the use of IP addresses. However, we often need to capture some limited history of the data flow, such as whether the IP address has been truncated. To handle this, we introduce a concept lattice for the `DataType` attribute, where `IPAddress:Truncated` represents a truncated IP address, and `IPAddress:Truncated â‰¤ IPAddress` in the partial order of the lattice.

We can then add an exception to allow the use of truncated IP addresses:

```plaintext
DENY DataType IPAddress
EXCEPT
ALLOW DataType IPAddress:Truncated
```

This policy corresponds to the English clause: "Full IP addresses will not be used for advertising, but truncated IP addresses can be used."

#### Extending the Policy

To further restrict the policy to advertising uses only, we add a restriction along the `UseForPurpose` attribute:

```plaintext
DENY DataType IPAddress
UseForPurpose Advertising
EXCEPT
ALLOW DataType IPAddress:Truncated
```

This policy ensures that full IP addresses are not used for advertising, but truncated IP addresses can be used for this purpose.

#### Complex Policy Example

Consider the more complex policy: "Full IP addresses will not be used for advertising. IP addresses may be used for detecting abuse, but in such cases, they should not be combined with account information." This can be encoded in LEGALEASE as follows:

```plaintext
DENY DataType IPAddress
UseForPurpose Advertising
EXCEPT
ALLOW DataType IPAddress:Truncated

ALLOW DataType IPAddress
UseForPurpose AbuseDetect
EXCEPT
DENY DataType IPAddress, AccountInfo
```

The last clause specifies that the combination of `IPAddress` and `AccountInfo` is denied, but these elements can be used individually. This introduces a non-trivial challenge in giving formal semantics to such exceptions, which we will revisit later.

### Domain-Specific Attributes

LEGALEASE's expressiveness and extensibility come from domain-specific attributes that can be instantiated to specify policy restrictions specific to the application. These attributes include:

1. **InStore**: Encodes policies around the collection and storage of data.
2. **UseForPurpose**: Specifies the purpose for which data is used.
3. **AccessByRole**: Restricts data use based on the role of the accessing team.

#### InStore Attribute

The `InStore` attribute can be used to specify storage restrictions. For example:

```plaintext
DENY DataType IPAddress
InStore AdsData
EXCEPT
ALLOW DataType IPAddress:Truncated
```

This policy disallows storing full IP addresses in any data store designated for ads unless the IP address has been truncated.

#### UseForPurpose Attribute

The `UseForPurpose` attribute helps encode policies around the use of data. For example, to restrict the use of IP addresses for advertising:

```plaintext
DENY DataType IPAddress
UseForPurpose Advertising
EXCEPT
ALLOW DataType IPAddress:Truncated
```

#### AccessByRole Attribute

The `AccessByRole` attribute is used for internal access control. For example:

```plaintext
DENY DataType IPAddress
EXCEPT
ALLOW AccessByRole AbuseTeam
EXCEPT
DENY AccessByRole Intern
```

This policy allows the abuse detection team to use IP addresses, except for interns.

### Conclusion

LEGALEASE provides a flexible and expressive way to specify and enforce data flow policies, ensuring that data is handled in compliance with both external and internal policies. By using domain-specific attributes and a layered clause structure, LEGALEASE enables seamless transitions between different levels of policy detail and complexity.