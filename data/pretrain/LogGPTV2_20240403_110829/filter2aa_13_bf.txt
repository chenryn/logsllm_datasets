25.2.2 漏洞原因分析
这个漏洞其实就是一个界面漏洞，在提示信息展示的时候没有做省略处理，从而把最重要的提示文案给隐藏了，导致用户被骗，同意授权。
该漏洞实际上是由于Google没有制定合理的Android应用名称规范导致，综合表现为如下两点：
·没有规范应用名称长度，使得应用名称可为任意长度。
·没有规范应用名称字符集，如应用名称可包含换行符和制表符。
25.2.3 漏洞修复
Google在后续的6.0系统中修复了这个问题，修复之后的效果如图25-6所示。
图25-6 修复之后的授权界面
采用了省略号代替了，不会把重要的提示信息给隐藏了。那么对于5.0系统的用户该怎么办呢？这个漏洞依旧存在，这就要求开发者做一些工作了，在Android中涉及用户隐私的Acitivity中（例如登录、支付等其他输入敏感信息的界面中）增加属性：WindowManager.LayoutParams.FLAG_SECURE
看一下属性源码说明：
该属性能防止屏幕被截图和录制。这个属性就是可以防止当前Activity不会被录制，可以做一个案例：
使用MediaProjection进行截图功能，如果加上了这个属性，再次截图，效果如图25-7所示。
图25-7 应用截图失败
看到下面的截图是一片漆黑，截图失败，而且这时候使用adb shell screencap命令去截图也是失败，如图25-8所示。
图25-8 应用截图失败提示
从这里可以看出，adb shell screencap和screenrecord命令底层的实现和MediaProjection是一样的。
在5.0的系统中，或者对于银行App、社交App、支付App等，开发者应该把当前登录的Activity添加这个属性！如果没有添加的话，就加上吧，给自己的App加上一份保险！
25.2.4 漏洞总结
下面来总结一下这个漏洞：
·漏洞产生的原因：因为Google在处理对话框提示的时候，没有做字符限制，导致一些重要的提示信息被遮挡。
·漏洞的危险：恶意App利用这个漏洞，把自己的App名称弄得很长，而且在后台监听用户打开了一些支付App、银行App之后，就弹出这个授权对话框，但是因为名称太长了，重要的提示文案被盖住了，用户很难发现问题，授权之后就被录制了重要信息。
·漏洞修复：Google在6.0以后进行了修复，使用字符限制功能，但是对于没有升级到6.0的用户，开发者就需要在自己的项目中给Activity添加安全属性，特别是登录页面，这样就可以防止当前页面被录制或者截屏了。
25.3 本章小结
本章主要分析了两个在开发中常见的漏洞：解压漏洞和录屏授权漏洞。开发者需要在开发应用中专门针对这两个漏洞进行处理。
第26章 文件加密病毒Wannacry样本分析
之前有一个Wannacry病毒样本在PC端肆意了很久，它是用RSA算法加密文件，勒索钱财，不给钱就删除内容。现在移动设备如此之多，就有一些不法分子想把这个病毒扩散到移动设备。本章就来分析一下这个病毒样本程序，并给出防范方法。
26.1 病毒样本分析
这类病毒一般是用特殊的App名称吸引用户下载，例如有一个叫做“魅影WIFI”的App，下载安装之后界面如图26-1所示。
图26-1 引诱APP
点击“免费激活”，出现授权界面，如图26-2所示。
图26-2 授权界面
如果点击“锁定屏幕”，就被锁屏了，解锁屏幕的界面如图26-3所示。
图26-3 解锁屏幕
病毒作者做了一个浮窗锁机，让用户通过QQ给钱。这时我们不得不看代码来找到这个密码。这个浮窗类型的锁机其实很容易解决，主要是借助WindowManager，所以连接adb使用命令直接杀掉这个进程即可：am force-stop pkgname。可以用dumpsys命令获取其包名：
然后再强制停止App：
停止之后，发现解锁屏幕了，但密码已经被篡改了。如果设备root了，直接删除/data/system/password.key文件即可。当然需要用户本身就是个开发者，“小白”用户肯定没办法。下面就来分析App，获取两个锁机密码。
26.2 获取密码
1.获取锁屏密码
因为我们知道现在大多数锁机软件都是利用设备管理器来修改设备密码的，所以想查看他的密码可直接用Jadx打开软件，然后全局搜索类DeviceAdminReceiver，如图26-4所示。
图26-4 用Jadx打开软件
看看这个类里面修改代码部分逻辑：
可以看到，这里直接将手机的锁机密码修改成9815了，这就是我们后面需要解锁的密码。
2.获取浮窗锁机密码
获取这个密码有点麻烦，因为是自定义的浮窗锁机，所以直接看到锁机界面文字，去Jadx全局搜索即可，这里全局搜索字符串“输入密码”，如图26-5所示。
图26-5 全局搜索字符串“输入密码”
进入下面这个类即可：
这里定义了一个Service，然后用WindowManager实现，再把权限设置为最高，用户就无法进行任何操作了。因为最终的密码输入都是在EditText，取密码作比较也要用到这个文本框，看这里的this.ed在哪里取值：
这里直接比对密码，如果密码正确了，就直接去掉服务，浮窗锁机就没有了。所以这里最重要的是decrypt方法，它是从SP中拿到key为passw的密文进行解密比对。其实这里我们可以借助Xposed工具直接hook这个decrypt方法，就能很轻易获取密码了：
然后直接运行就可以获取对应的密码了：
不过这里还想继续分析这个DES的加密逻辑，因为目的就是要学习的，所以我们继续手动分析这个加密算法，我们看看des变量定义：
这里会看到有一个du和du2变量，不要在意，可能是代码混淆原因，其实就是一个值。看到初始化传入一个字符串值，可能是DES加密的key值，然后立即对一个密文进行解密，之后的内容再作为新的DES的密钥值，相当于这里二次获取密钥了。看一下DU代码实现：
传入的字符串就是作为key进行加解密操作的，那么下面我们就需要手动写一个简单的DES加解密算法：
第一次初始化密钥是字符串"flower"，然后直接解密内容"c29fe56fa59ab0db"：
获取第二次要用到的密钥"xxx"，然后再初始化以下key：
我们需要去程序的XML中找到加密内容，再拷贝出来进行解密：
把这个串拷贝出来进行解密：
这就是解锁密码了，我们回过头看看是怎么把这个加密串存到XML中的：
这里生成密码竟然采用的是随机值，然后再加上123456，最后进行DES加密保存到XML中，同时也把随机数保存到XML中。从上面可以看到值是：
这个值加上123456就是密码了：92944926+123456=93068382，这也是上面我们解密之后的密码。如果“小白”用户加他QQ索要密码，其实他是需要让小白用户做点东西，因为这个密码是随机的，不是固定值，所以“小白”用户需要把程序的XML文件给他，不然他也不知道解锁密码。
26.3 文件解密
上面的锁机还不是重点，这个病毒的重点其实是文件加密。在本章开始的图26-1中，如果点击“注册使用”，会出现如图26-6所示的勒索界面。
图26-6 勒索界面
点击“注册软件”，会等一会儿，其实这里他在做一些坏事，然后出现提示界面，如图26-7所示。
这就是Wannacry病毒界面，需要付钱才能对文件解密。而这时手机设备SD卡中的文件已经被全部加密了，如图26-8所示。
最糟糕的是，可能SD卡都打不开了，这是因为病毒制作者无限制地新建一些文件和文件夹到SD中。可以发现，每个文件都是0字节，然后文件对应一个空文件夹。
图26-7 提示界面
图26-8 文件加密界面
下面来分析病毒代码：
进入这个类看看，在onCreate方法中看到几个方法：
继续追踪：
有一个可怕的“爆炸”方法：
在这里会创造出很多空文件和空文件夹，这样你的SD卡到最后几乎打不开了，手机也就废了。
文件加密在程序启动的时候就做了，在MainActivity中：
然后跟踪这个方法：
这里会过滤他自己创建出来的空文件和空文件夹不进行加密，继续看代码：
这里通过方法的最后一个参数来判断是加密文件还是解密文件。加解密方法参数都是类似的，第一个参数是AES加解密的密钥。到这里我们大致清楚了这个病毒是用AES对文件进行加密的，而密钥又用AES加密。这时加密的key和内容是：
分析到这里，我们就可以开始手动解密文件了。当然有很多种方法：
第一种方法：借助Xposed工具直接hook他的FormetFileSize方法，因为从上面的分析知道，这个方法的最后一个参数标志着是解密文件还是加密文件，拦截这个方法之后，修改这个参数状态为false表示是解密文件：
第二种方法：把他的解密功能代码拷贝出来，自己写一个解密程序，这比较适合给中招的“小白”使用：
因为他的代码这几个类都比较独立，所以直接拷贝出来不会有太多的错误，而错误就是变量定义重复，自己手动改一下即可：
下面就开始运行这个程序，这里为了操作不浪费时间，把SD卡清空了，然后写入三个简单的文件，让他加密：
这时会发现，他加密之后的文件名就是原始文件名凭借一个串而已，请忽略乱码。因为只有这样，他在解密之后才能获取原始文件，从他的代码中也可以看到这点：
然后运行我们的解密程序，看到日志：
到这里，我们就成功进行解密了。
26.4 病毒分析报告
这个病毒作者锁机采用了两套机制，而且浮窗锁机还用随机密码坑人。最可恨的是他竟然在SD中创建了那么多的空文件和空文件夹，让设备无法使用。最后他用的是AES算法对文件进行加解密操作。这里没有采用RSA加密的原因是RSA加密算法非常耗时且“吃内存”，手机会扛不住的。所以只好用AES了，但是对于解密来说只要知道密钥即可。这里解密用两种方式：一种是用Xposed框架进行hook，一种是自己把他的界面代码拷贝出来写一个解密程序。当然第二种是最优的，因为那些中招的“小白”用户是没有root的，也没有安装Xposed框架的，只有写一个解密程序给他安装进行解密就好了。不过有个很大的问题，就是因为病毒还创建了很多空文件和空文件夹，导致操作的时候需要区别对待。要做一次过滤，这些病毒自己生成的文件和文件夹就不要做解密了，不然会无限制死机。
从这个病毒中我们可以了解到关于锁机策略的机制，对于设备管理器的锁机直接找到DeviceAdminReceiver这个类就好了，或者直接看XML中的定义：
快速找到修改密码的地方，找到锁机密码即可。而对于浮窗锁机，因为都是采用Service和WindowManager来实现逻辑的，所以直接使用am命令强制停止程序运行即可。
26.5 本章小结
面对这个病毒，即使你付费了，病毒制作者帮你解密了，也是很麻烦的，因为病毒制作者创建了那么多文件，删除操作需要时间，解密还消耗机器性能。所以遇到这种病毒千万不要给钱，可以自己解密，或者刷机。最重要的一点就是千万不要去下载来历不明的App，去正规的应用市场下载应用是最保险的。