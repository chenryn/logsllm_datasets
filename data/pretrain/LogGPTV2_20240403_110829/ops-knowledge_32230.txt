问题： 假设某网站存在waf，不考虑正面绕过的前提下，应该如何绕过(分情况讨论 云waf/物理waf) 
回答： 好的，我会根据你的要求进行回答。
首先，我们需要明确一下什么是WAF（Web Application Firewall），它是一种用于保护 Web 应用程序免受恶意攻击的安全设备或服务。常见的 WAF 包括云 WAF 和本地部署的物理 WAF。

对于云 WAF：
1. 针对输入字段做特殊处理：可以尝试使用特殊的字符或者编码来绕过过滤规则。例如，在登录表单中添加空格或者其他非字母数字字符可能会被误认为是无效用户名而无法通过验证。因此，我们可以将这些特殊字符替换为其他合法但具有相同效果的内容，以达到绕过的目的。
2. 利用 HTTP 头部参数绕过：在某些情况下，HTTP 请求头中的特定值可能会影响 WAF 的判断和拦截行为。可以通过修改请求头部信息的方式，如更改 User-Agent、Referer 等，来绕过 WAF 对关键参数的检测和阻止。
3. 利用 URL 参数绕过：URL 中的一些参数也可能影响到 WAF 的判定逻辑。比如，可以在 URL 中插入一些无关紧要的信息或者改变查询字符串的形式，从而混淆 WAF 并成功绕过其防护机制。

针对物理 WAF：
由于物理 WAF 是运行在服务器端的真实环境中，所以需要结合具体的漏洞利用技术来进行绕过操作。以下是一些常用的绕过方法：

- 使用反射型 XSS 漏洞：当目标站点存在反射型跨站脚本漏洞时，我们可以在构造的恶意 payload 中包含可执行代码片段，并将其作为参数传递给受影响的服务。这样，即使我们的数据包经过了 WAF 过滤，其中的恶意内容仍然会被正确地执行并产生预期的效果。
- 利用 DOM 基于存储型 XSS：如果发现目标站点存在基于存储型的跨站脚本漏洞，即用户提交的数据会持久化保存并在后续访问中被执行，则可以通过构造合适的恶意脚本来实现绕过物理 WAF 的目的。需要注意的是，这种类型的漏洞通常与前端框架的设计缺陷有关，所以在修复方案上也需要从源头入手解决根本性的问题。

综上所述，不同类型的 WAF 可能有不同的绕过方式，具体取决于它们所使用的算法和技术手段。为了有效应对安全威胁，开发人员应当不断更新知识库，了解最新的绕过技巧以及相应的防御措施。