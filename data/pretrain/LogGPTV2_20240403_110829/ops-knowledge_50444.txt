When using a Linux machine, the number of files that can be memory-mapped (using `mmap` in Python) is primarily determined by the system's configuration and available resources, rather than any specific limitation imposed by Python itself. 

The key factors include:
1. **Available Memory**: The amount of physical and virtual memory on your system.
2. **Operating System Limits**: The OS may impose a limit on the number of memory mappings per process. This limit can be checked and modified by examining the `max_map_count` setting in the `/proc/sys/vm/` directory.

To check the current `max_map_count` value, you can use the following command in a terminal:

```sh
cat /proc/sys/vm/max_map_count
```

If you need to increase this limit, you can do so by running:

```sh
sudo sysctl -w vm.max_map_count=<new_value>
```

For example, to set the limit to 200,000, you would run:

```sh
sudo sysctl -w vm.max_map_count=200000
```

This change will be temporary. To make it permanent, you can add the following line to the `/etc/sysctl.conf` file:

```sh
vm.max_map_count = 200000
```

By adjusting these settings, you can control the maximum number of memory mappings allowed for processes on your Linux system.