two experiments that we consider most comprehensive. In
each experiment we evaluate the guessability of all condi-
tions, but against differently trained guessing algorithms.
Experiment P4 is designed to simulate an attacker with
access to a broad variety of publicly available data for
training. It consists of a Weir-algorithm calculator trained on
all the public word lists we use and tested on 1000 passwords
from each condition. Experiment E simulates a powerful
attacker with extraordinary insight into the password sets
under consideration. It consists of a Weir-algorithm calcu-
lator trained with all the public data used in P4 plus 500
529
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:47:23 UTC from IEEE Xplore.  Restrictions apply. 
70%
60%
50%
40%
30%
20%
10%
d
e
k
c
a
r
c
s
d
r
o
w
s
s
a
p
f
o
%
d
e
k
c
a
r
c
s
d
r
o
w
s
s
a
p
f
o
%
100%
80%
60%
40%
20%
b8s
b8
blE
blM
d8
blH
c8
b16
1E2
1E0
Number of guesses (log scale)
1E6
1E4
1E8
1E10
1E12
1E6
Number of guesses (log scale)
1E12
1E18
1E24
b8
d8
c8
blM
blE
b8s
blH
b16
1E30
1E36
Figure 2. The number of passwords cracked vs. the number of guesses,
per condition, for experiment P4. This experiment uses the Weir calculator
and trains on a variety of publicly available data.
passwords from each of our eight conditions. We test on 500
other passwords from those conditions, with two-fold cross-
validation for a total of 1000 test passwords. The results
from these experiments are shown in Figures 1 and 2.
As these ﬁgures suggest, which password-composition
policy is best at resisting guessing attacks depends on
how many guesses an attacker will make. At one million
and one billion guesses in both experiments, signiﬁcantly
fewer blacklistHard and comprehensive8 passwords were
guessed than in any other condition.3 At one billion guesses
in experiment E, 1.4, 2.9, 9.5, and 40.3% of passwords
were cracked in comprehensive8, blacklistHard, basic16, and
basic8, respectively.
As the number of guesses increases, basic16 begins to
outperform the other conditions. At one trillion guesses, sig-
niﬁcantly fewer basic16 passwords were cracked than com-
prehensive8 passwords, which were cracked signiﬁcantly
less than any other condition. After exhausting the Weir-
algorithm guessing space in both experiments, basic16 re-
mains signiﬁcantly hardest to crack. Next best at resisting
cracking were comprehensive8 and blacklistHard, perform-
ing signiﬁcantly better than any other condition. Condition
comprehensive8 was signiﬁcantly better than blacklistHard
in experiment P4 but not in experiment E. In experiment
E, 14.6, 26.4, 31.0% of passwords were cracked in basic16,
comprehensive8, and blacklistHard, respectively; in contrast,
63.0% of basic8 passwords were cracked.
Although guessing with the Weir algorithm proved more
effective, we also compared the conditions using BFM. The
ﬁndings (shown in Figure 3) are generally consistent with
those discussed above: basic16 performs best.
In prior work examining memorability and usability for
much of this dataset, we found that while in general less
secure policies are more usable, basic16 is more usable
than comprehensive8 by many measures [46]. This suggests
basic16 is an overall better choice than comprehensive8.
3All comparisons in Sections V-A, V-B, and V-C tested using PHFET,
signiﬁcance level α = 0.05.
Figure 3. The number of passwords cracked vs. the number of guesses,
using the BFM calculator trained on both our data and public data (B2). The
red vertical line at 50 trillion guesses facilitates comparison with the Weir
experiments. We stopped the Weir calculator at this point (as described in
Section IV-A3), but because the BFM algorithm is so much less efﬁcient,
we ran it for many more guesses in order to collect useful data.
It is important to note that 16-character-minimum policies
are rare in practice. Hence, current guessing algorithms,
including the Weir algorithm, are not built speciﬁcally with
them in mind. Although we do not believe this affects our
overall ﬁndings, it may merit further investigation.
B. Effects of training-data selection
Like most practical cracking algorithms, the ones we use
rely on training data to determine guessing order. As a result,
it is important to consider how the choice of training data
affects the success of password guessing, and consequently
the guess resistance of a set of passwords. To address this,
we examine the effect of varying the amount and source of
training data on both total cracking success and on cracking
efﬁciency. Interestingly, we ﬁnd that the choice of training
data affects different password-policy conditions differently;
abundant, closely matched training data is critical when
cracking passwords from harder-to-guess conditions, but less
so when cracking passwords from easier ones.
For purposes of examining the impact of training data, the
password-policy conditions we consider divide fairly neatly
into two groups. For the rest of this section, we will refer to
the harder-to-guess conditions of comprehensive8, basic16,
and blacklistHard as group 1, and the rest as group 2.
Training with general-purpose data. We ﬁrst measure,
via three experiments, the effect of increasing the amount
and variety of training data. Experiment P3 was trained on
public data including the MySpace and RockYou password
lists as well as the inﬂection list and simple dictionary, and
tested on 1000 passwords from each of our eight conditions.
Experiment P4, as detailed in Section V-A, was trained on
everything from P3 plus the paid Openwall list. Experiment
E, also described in V-A, used everything from P4 plus
500 passwords from each of our conditions, using two-fold
cross-validation. Figure 4 shows how these three training
sets affect four example conditions, two from each group.
530
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:47:23 UTC from IEEE Xplore.  Restrictions apply. 
basic16
comprehensive8
1E6
basic8
1E9
1E12
1E9
1E6
blacklistMedium
1E12
60%
50%
40%
30%
20%
10%
d
e
k
c
a
r
c
s
d
r
o
w
s
s
a
p
f
o
%
60%
50%
40%
30%
20%
10%
1E9
1E6
1E12
1E6
Number of guesses (log scale)
1E9
P3      P4      E
Figure 4. Showing how increasing training data by adding the Openwall
list (P4) and then our collected passwords (E) affects cracking, for four
example conditions. Adding training data proves more helpful for the
group 1 conditions (top) than for the others (bottom).
1E12
As expected, cracking success increases as training data
is added. For group 1, adding Openwall
increases total
cracking by 45% on average, while adding both Openwall
and our data provides an average 96% improvement; these
increases are signiﬁcant for both experiments in all three
conditions. In group 2, by contrast, the increases are smaller
and only occasionally signiﬁcant.
At one trillion and one billion guesses, the results are
less straightforward, but increasing training data remains
generally more helpful for cracking group 1 than group 2.
Adding Openwall alone is not particularly helpful for group
1 conditions, with few signiﬁcant improvements at either
guessing point, but it actually decreases cracking at one
billion guesses signiﬁcantly for several group 2 conditions.
(We hypothesize this decrease occurs because Openwall is
a dictionary and not a password set, so it adds knowledge
of structures and strings at the cost of accurately assessing
their probabilities.) At these guessing points, adding our
data is considerably more effective for group 1 than adding
Openwall alone, increasing cracking for each of the three
conditions by at least 50% (all signiﬁcant). By contrast,
adding our data provides little to no improvement against
group 2 conditions at either guessing point.
Taken together, these results demonstrate that increas-
ing the amount and variety of information in the training
data provides signiﬁcant improvement in cracking harder-
to-guess conditions, while providing little beneﬁt and some-
times decreasing efﬁciency for easier-to-guess conditions.
531
Training with specialized data. Having determined that
training with specalized data is extremely valuable for crack-
ing group 1 passwords, we wanted to examine what quantity
of closely related training data is needed to effectively
crack these “hard” conditions. For these tests, we focus on
comprehensive8 as an example harder-to-guess condition,
using the easier-to-guess basic8 condition as a control; we
collected 3000 passwords each for these conditions.
In ﬁve Weir-algorithm experiments, C8a through C8e, we
trained on all the public data from P4, as well as between
500 and 2500 comprehensive8 passwords, in 500-password
increments. For each experiment, we tested on the remaining
comprehensive8 passwords. We conducted a similar set of
ﬁve experiments, B8a through B8e, in which we trained and
tested with basic8 rather than comprehensive8 passwords.
Our results, illustrated in Figure 5, show that incremen-
tally adding more of our collected data to the training
set
improves total cracking slightly for comprehensive8
passwords, but not for basic8. On average, for each 500
comprehensive8 passwords added to the training set, 2%
fewer passwords remain uncracked. This effect is not linear,
however; the beneﬁt of additional training data levels off
sharply between 2000 and 2500 training passwords. The
differences between experiments begin to show signiﬁcance
around one trillion guesses, and increase as we approach the
total number cracked.
For basic8, by contrast, adding more collected passwords
to the training set has no signiﬁcant effect on total cracking,
with between 61 and 62% of passwords cracked in each
experiment. No signiﬁcant effect is observed at one million,
one billion, or one trillion guesses, either.
One way to interpret this result is to consider the diversity
of structures found in our basic8 and comprehensive8 pass-
word sets. The comprehensive8 passwords are considerably
more diverse, with 1598 structures among 3000 passwords,
as compared to only 733 structures for basic8. For com-
prehensive8, the single most common structure maps to 67
passwords, the most common 180 structures account for half
of all passwords, and 1337 passwords have structures that
are unique within the password set. By contrast, the most
common structure in basic8 maps to 293 passwords, the top
13 structures account for half the passwords, and only 565
passwords have unique structures. As a result, small amounts
of training data go considerably farther in cracking basic8
passwords than comprehensive8.
Weighting training data.
The publicly available word
lists we used for training are all considerably larger than the
number of passwords we collected. As a result, we needed to
weight our data (i.e., include multiple copies in the training
set) if we wanted it to meaningfully affect the probabilities
used by our guess-number calculators. Different weightings
do not change the number of passwords cracked, as the same
guesses will eventually be made; however, they can affect
the order and, therefore, the efﬁciency of guessing.
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:47:23 UTC from IEEE Xplore.  Restrictions apply. 
Specialized training for basic8
1E6
1E7
1E8
1E9 1E10 1E11 1E12 1E13
Specialized training for comprehensive8
B8d
B8b
B8c
B8e
B8a
P4
C8d
C8e
C8c
C8b
C8a
P4
60%
48%
36%
24%
12%
35%
28%
21%
14%
7%
d
e
k
c
a
r
c
s
d
r
o
w
s
s
a
p
f
o
e
g
a
t
n
e
c
r
e
P
1E7
1E6
Number of guesses (log scale)
1E8
1E9 1E10 1E11 1E12 1E13
Figure 5.
Top: Incremental increases in specialized training data have
limited effect on the basic8 condition (B8a-B8e). Bottom: Incremental
increases in specialized training data have a small but signiﬁcant effect on
the comprehensive8 condition (C8a-C8e). Results from P4 (the same public
training data, no specialized training data) are included for comparison.
We tested three weightings, using 500 passwords from