# Security Proofs for an Efficient Password-Based Key Exchange

**Authors:**
- Emmanuel Bresson
- Olivier Chevassut
- David Pointcheval

**Abstract:**
Password-based key exchange schemes are designed to provide entities communicating over a public network, and sharing only a (short) password, with a session key. This key can be used for data integrity and/or confidentiality. This paper focuses on the analysis of very efficient schemes proposed to the IEEE P1363 Standard working group on password-based authenticated key-exchange methods, whose actual security was previously an open problem. We analyze the AuthA key exchange scheme and provide a complete proof of its security. Our analysis shows that the AuthA protocol and its multiple modes of operation are provably secure under the computational Diffie-Hellman intractability assumption, in both the random-oracle and ideal-cipher models.

**Categories and Subject Descriptors:**
H.4.3 [Information Systems Applications]: Communications Applications

**General Terms:**
- Security
- Algorithms
- Design
- Standardization

**Keywords:**
- Key Exchange
- Password-Based Authentication

## 1. Introduction

The need for secure authentication is evident when two entities, such as a client and a server, communicate over the internet. However, proving an identity over a public link is complex. The Secure Shell (SSH) protocol [2] uses a password to authenticate a client, allowing them to log into another computer, execute commands on a remote machine, and transfer files. The remote machine maintains the association between the client's name and the password. Another method is to use a public-key infrastructure (PKI) to verify that an entity knows the secret key corresponding to a public key embedded in a certificate. This method was adopted by the IETF TLS Working Group to secure traffic between a web browser and a bank server over the internet. Current work aims to enhance this "transport layer" security protocol (TLS) with password-based authentication methods [19].

Password-based authentication enables clients to identify themselves to servers through a lightweight process, requiring no special hardware or security infrastructures. For example, a password can establish a secure communication channel from a computing device to a remote machine. This process, known as password-authenticated key exchange, provides the two devices with a session key to implement an authenticated communication channel, where messages are cryptographically protected. Users benefit from this approach as they only need to remember a low-quality string (e.g., 4 decimal digits) rather than a high-quality symmetric encryption key.

The primary security goal for password-authenticated key exchange protocols is to resist dictionary attacks. An adversary should not be able to eliminate more passwords than the number of active interactions with participants. Specifically, a passive eavesdropper should not gain any advantage in an offline exhaustive search (dictionary attack).

In the context of the wireless internet, the need for lightweight authentication processes is even greater. Wireless nodes, such as cellular phones and laptops, have specific mobility, computation, and bandwidth requirements, making it challenging to design cryptographic mechanisms. The TLS protocol has been adapted for low-power devices and evolved into a transport layer security protocol for mobile commerce (WTLS) [23]. The Wired Equivalent Privacy (WEP) protocol, part of the IEEE 802.11 standard, uses high-quality symmetric encryption keys but does not specify how these keys are established [9]. The IEEE 802.11 standard currently lacks a method for key exchange.

### Contributions

This paper examines the security of the AuthA password-authenticated key exchange protocol proposed to the IEEE P1363 Study Group on standard specifications for public-key cryptography [21]. Although AuthA was conjectured to be cryptographically secure by its authors, it had not been proven to resist dictionary attacks [4]. We provide a complete proof of security for the AuthA protocol, using the communication model of Bellare et al. [3] and adapting the proof techniques recently published by Bresson et al. [12] for password-based group key exchange.

Our analysis shows that some of the AuthA modes of operation achieve provable security against dictionary attacks in both the random oracle and ideal-cipher models under the computational Diffie-Hellman intractability assumption.

### Related Work

The IEEE P1363 Standard working group on password-based authenticated key-exchange methods [22] has focused on key exchange protocols where clients use short passwords instead of certificates to identify themselves to servers. This effort builds on the works of Bellare et al. [3] and Boyko et al. [11], who first formulated formal models and security goals for password-based key agreement. Bellare et al. analyzed the EKE protocol [6], a classical Diffie-Hellman key exchange where the two flows are encrypted using the password as a common symmetric key. While they announced a security result in both the random oracle and ideal-cipher models, the full proof was never published. Boyko et al. [11] provided a proof in the multi-party simulatability model. We provide a complete proof in the Bellare et al. security model, in a model where both a random oracle and an ideal-cipher are available.

Recent works have provided password-based schemes secure in the standard model [16, 17, 18], based on general computational assumptions or the Decisional Diffie-Hellman problem. These schemes, while theoretically interesting, are not practical or efficient. Ideal models (random-oracle, ideal-cipher) provide alternative security results, often relying on weaker computational assumptions.

EKE later evolved into the AuthA proposal [4], formally modeled as One-Encryption Key-Exchange (OEKE) in this paper. OEKE encrypts only one flow, using either a symmetric-encryption primitive or a multiplicative function. This scheme is easier to integrate into existing network security protocols, avoiding compatibility issues. OEKE is of great practical interest, but previous security analyses did not cover it.

### Organization of the Paper

- **Section 2:** We recall the model and definitions for a password-based key exchange protocol.
- **Section 3:** We show that OEKE, a simplified variant of an AuthA mode of operation, is secure.
- **Section 4:** We build on this result to show that some of the AuthA modes of operation proposed to the IEEE P1363 Study Group are secure.

## 2. Model

### 2.1 Security Model

**Players:**
- A server \( S \) and a user (client) \( U \) participate in the key exchange protocol \( P \).
- Each player may have multiple instances (oracles) involved in distinct, possibly concurrent, executions of \( P \). We denote client instances and server instances by \( U_i \) and \( S_j \) (or by \( I \) for any instance).

**Shared Secret:**
- The client and server share a low-entropy secret password \( pw \) drawn uniformly from a small dictionary \( \text{Password} \) of size \( N \). The uniform distribution assumption simplifies notation, but the results hold for any distribution.

**Abstract Interface:**
- The protocol AuthA consists of the key exchange algorithm \( \text{KeyExch}(U_i, S_j) \), an interactive protocol providing the instances with a session key \( sk \).

**Queries:**
- **Execute(\( U_i, S_j \)):** Models passive attacks where the adversary eavesdrops on honest executions of \( P \) between \( U_i \) and \( S_j \).
- **Reveal(\( I \)):** Models misuse of the session key by instance \( I \). The query releases \( sk \) to the adversary if the targeted instance holds a session key.
- **Send(\( I, m \)):** Models the adversary sending a message \( m \) to instance \( I \). The adversary receives the response generated by \( I \) according to \( P \). A query \( \text{Send}(U_i, \text{Start}) \) initializes the key exchange algorithm.

**Execute-query** is essential for handling dictionary attacks, as it allows the adversary to observe honest executions without building the flows themselves.

### 2.2 Security Notions

**Freshness:**
- An instance is fresh if it has accepted and neither it nor the other instance with the same session tag has been asked for a Reveal-query.

**Test-query:**
- Models the semantic security of the session key. The Test-query can be asked once by the adversary and is available if the attacked instance is fresh. The query is answered by flipping a coin \( b \) and forwarding \( sk \) if \( b = 1 \), or a random value if \( b = 0 \).

**AKE Security:**
- The game \( \text{Game}_{\text{ake}}(A, P) \) is initialized by drawing a password \( pw \) from \( \text{Password} \), providing coin tosses to the adversary and all oracles, and then running the adversary, allowing it to make a polynomial number of queries. At the end, the adversary outputs its guess \( \hat{b} \) for the bit \( b \) involved in the Test-query.

We define the AKE advantage as the probability that the adversary correctly guesses the value of \( b \); more precisely, we define:
\[ \text{Adv}_{\text{ake}}(A, P) = \left| \Pr[\hat{b} = b] - \frac{1}{2} \right| \]
where the probability space includes the randomness in the protocol and the adversary's strategy.