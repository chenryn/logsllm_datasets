或调用带有commit/rollback语句的存储过程。
CREATEORREPLACEPROCEDURETRANSACTION_EXAMPLE1()
IMMUTABLE
南大通用数据技术股份有限公司
680
GBase 8s V8.8开发者手册
AS
BEGIN
FORiIN0..20LOOP
INSERTINTOEXAMPLE1(col1)VALUES(i);
IFi%2=0THEN
COMMIT;
ELSE
ROLLBACK;
ENDIF;
ENDLOOP;
END;
/
示例11：不支持出现在SQL中的调用（除了SelectProcedure）。
CREATEORREPLACEPROCEDURETRANSACTION_EXAMPLE3()
AS
BEGIN
FORiIN0..20LOOP
INSERTINTOEXAMPLE1(col1)VALUES(i);
IFi%2=0THEN
EXECUTEIMMEDIATE'COMMIT';
ELSE
EXECUTEIMMEDIATE'ROLLBACK';
ENDIF;
ENDLOOP;
END;
/
示例12：存储过程头带有GUC参数设置的不允许调用commit/rollback语句。
CREATEORREPLACEPROCEDURETRANSACTION_EXAMPLE4()
SETARRAY_NULLSTO"ON"
AS
南大通用数据技术股份有限公司
681
GBase 8s V8.8开发者手册
BEGIN
FORiIN0..20LOOP
INSERTINTOEXAMPLE1(col1)VALUES(i);
IFi%2=0THEN
COMMIT;
ELSE
ROLLBACK;
ENDIF;
ENDLOOP;
END;
/
示例13：游标open的对象不允许为带有commit/rollback语句的存储过程。
CREATEORREPLACEPROCEDURETRANSACTION_EXAMPLE5(INTINININT,
INTOUTOUTINT)
AS
BEGIN
INTOUT:=INTIN+1;
COMMIT;
END;
/
CREATEORREPLACEPROCEDURETRANSACTION_EXAMPLE6()
AS
CURSORCURSOR1(EXPININT)
ISSELECTTRANSACTION_EXAMPLE5(EXPIN);
INTEXPINT;
BEGIN
FORiIN0..20LOOP
OPENCURSOR1(i);
FETCHCURSOR1INTOINTEXP;
南大通用数据技术股份有限公司
682
GBase 8s V8.8开发者手册
INSERTINTOEXAMPLE1(COL1)VALUES(INTEXP);
IFi%2=0THEN
COMMIT;
ELSE
ROLLBACK;
ENDIF;
CLOSECURSOR1;
ENDLOOP;
END;
/
示 例 14 ： 不 支 持 CURSOR/EXECUTE 语 句 ， 以 及 各 类 表 达 式 内 调 用
COMMIT/ROLLBACK。
CREATEORREPLACEPROCEDUREexec_func1()
AS
BEGIN
CREATETABLETEST_exec(AINT);
COMMIT;
END;
/
CREATEORREPLACEPROCEDUREexec_func2()
AS
BEGIN
EXECUTEexec_func1();
COMMIT;
END;
/
示例15：存储过程使用保存点回退事务部分修改。
CREATEORREPLACEPROCEDURESTP_SAVEPOINT_EXAMPLE1()
AS
BEGIN
南大通用数据技术股份有限公司
683
GBase 8s V8.8开发者手册
INSERTINTOEXAMPLE1VALUES(1);
SAVEPOINTs1;
INSERTINTOEXAMPLE1VALUES(2);
ROLLBACKTOs1; -- 回退插入记录2
INSERTINTOEXAMPLE1VALUES(3);
END;
/
示例16：存储过程中使用保存点回退到存储过程外部定义的保存点。
CREATEORREPLACEPROCEDURESTP_SAVEPOINT_EXAMPLE2()
AS
BEGIN
INSERTINTOEXAMPLE1VALUES(2);
ROLLBACKTOs1; -- 回退插入记录2
INSERTINTOEXAMPLE1VALUES(3);
END;
/
BEGIN;
INSERTINTOEXAMPLE1VALUES(1);
SAVEPOINTs1;
CALLSTP_SAVEPOINT_EXAMPLE2();
SELECT*FROMEXAMPLE1;
COMMIT;
示例17：存储过程外部回退到存储过程中定义的保存点。
CREATEORREPLACEPROCEDURESTP_SAVEPOINT_EXAMPLE3()
AS
BEGIN
INSERTINTOEXAMPLE1VALUES(1);
SAVEPOINTs1;
INSERTINTOEXAMPLE1VALUES(2);
南大通用数据技术股份有限公司
684
GBase 8s V8.8开发者手册
END;
/
BEGIN;
INSERTINTOEXAMPLE1VALUES(3);
CALLSTP_SAVEPOINT_EXAMPLE3();
ROLLBACKTOSAVEPOINTs1;--回退存储过程中插入记录2
SELECT*FROMEXAMPLE1;
COMMIT;
17.10 其他语句
17.10.1锁操作
GBase8s提供了多种锁模式用于控制对表中数据的并发访问。这些模式可以用在MVCC
（多版本并发控制）无法给出期望行为的场合。同样，大多数GBase8s命令自动施加恰当
的锁，以保证被引用的表在命令的执行过程中不会以一种不兼容的方式被删除或者修改。比
如，在存在其他并发操作的时候，ALTERTABLE是不能在同一个表上执行的。
17.10.2游标操作
GBase8s中游标（cursor）是系统为用户开设的一个数据缓冲区，存放着SQL语句的执
行结果。每个游标区都有一个名称。用户可以用SQL语句逐一从游标中获取记录，并赋给
主变量，交由主语言进一步处理。
游标的操作主要有游标的定义、打开、获取和关闭。
完整的游标操作示例可参考显式游标。
17.11 游标
17.11.1游标概述
为了处理SQL语句，存储过程进程分配一段内存区域来保存上下文联系。游标是指向
南大通用数据技术股份有限公司
685
GBase 8s V8.8开发者手册
上下文区域的句柄或指针。借助游标，存储过程可以控制上下文区域的变化。
须知：
当游标作为存储过程的返回值时，如果使用JDBC调用该存储过程，返回的游标将不可
用。
游标的使用分为显式游标和隐式游标。对于不同的SQL语句，游标的使用情况不同，
详细信息请参见表1。
表 1游标使用情况
SQL语句 游标
非查询语句 隐式的
结果是单行的查询语句 隐式的或显式的
结果是多行的查询语句 显式的
17.11.2显式游标
显式游标主要用于对查询语句的处理，尤其是在查询结果为多条记录的情况下。
17.11.2.1 处理步骤
显式游标处理需六个PL/SQL步骤：
1. 定义静态游标：就是定义一个游标名，以及与其相对应的SELECT语句。
定义静态游标的语法图，请参见图1。
图 1static_cursor_define::=
南大通用数据技术股份有限公司
686
GBase 8s V8.8开发者手册
参数说明：
 cursor_name：定义的游标名。
 parameter：游标参数，只能为输入参数，其格式为：
parameter_namedatatype
 select_statement：查询语句。
说明：
根据执行计划的不同，系统会自动判断该游标是否可以用于以倒序的方式检索数据行。
定义动态游标：指ref游标，可以通过一组静态的SQL语句动态的打开游标。首先定义
ref游标类型，然后定义该游标类型的游标变量，在打开游标时通过OPEN FOR 动态绑定
SELECT语句。
定义动态游标的语法图，请参见图2和图3。
图 2cursor_typename::=
图 3dynamic_cursor_define::=
2. 打开静态游标：就是执行游标所对应的SELECT语句，将其查询结果放入工作区，并
且指针指向工作区的首部，标识游标结果集合。如果游标查询语句中带有FORUPDATE
选项，OPEN语句还将锁定数据库表中游标结果集合对应的数据行。
打开静态游标的语法图，请参见图4。
图 4open_static_cursor::=
南大通用数据技术股份有限公司
687
GBase 8s V8.8开发者手册
打开动态游标：可以通过OPENFOR语句打开动态游标，动态绑定SQL语句。
打开动态游标的语法图，请参见图5。
图 5open_dynamic_cursor::=
PL/SQL程序不能用OPEN语句重复打开一个游标。
3. 提取游标数据：检索结果集合中的数据行，放入指定的输出变量中。
提取游标数据的语法图，请参见图6。
图 6fetch_cursor::=
4. 对该记录进行处理。
5. 继续处理，直到活动集合中没有记录。
6. 关闭游标：当提取和处理完游标结果集合数据后，应及时关闭游标，以释放该游标所占
用的系统资源，并使该游标的工作区变成无效，不能再使用FETCH语句获取其中数据。
关闭后的游标可以使用OPEN语句重新打开。
关闭游标的语法图，请参见图7。
南大通用数据技术股份有限公司
688
GBase 8s V8.8开发者手册
图 7close_cursor::=
17.11.2.2 属性
游标的属性用于控制程序流程或者了解程序的状态。当运行DML语句时，PL/SQL打
开一个内建游标并处理结果，游标是维护查询结果的内存中的一个区域，游标在运行DML
语句时打开，完成后关闭。显式游标的属性为：
 %FOUND布尔型属性：当最近一次读记录时成功返回，则值为TRUE。
 %NOTFOUND布尔型属性：与%FOUND相反。
 %ISOPEN布尔型属性：当游标已打开时返回TRUE。
 %ROWCOUNT数值型属性：返回已从游标中读取的记录数。
17.11.3隐式游标
对于非查询语句，如修改、删除操作，则由系统自动地为这些操作设置游标并创建其工
作区，这些由系统隐含创建的游标称为隐式游标，隐式游标的名称为SQL，这是由系统定
义的。
17.11.3.1 简介
对于隐式游标的操作，如定义、打开、取值及关闭操作，都由系统自动地完成，无需用
户进行处理。用户只能通过隐式游标的相关属性，来完成相应的操作。在隐式游标的工作区
中，所存放的数据是最新处理的一条SQL语句所包含的数据，与用户自定义的显式游标无
关。
格式调用为： SQL%
说明：
 INSERT、UPDATE、DELETE、SELECT语句中不必明确定义游标。
南大通用数据技术股份有限公司
689
GBase 8s V8.8开发者手册
 兼容O模式下，GUC参数behavior_compat_options为compat_cursor时，隐式游标跨存
储过程有效。
17.11.3.2 属性
隐式游标属性为：
 SQL%FOUND布尔型属性：当最近一次读记录时成功返回，则值为TRUE。
 SQL%NOTFOUND布尔型属性：与%FOUND相反。
 SQL%ROWCOUNT数值型属性：返回已从游标中读取得记录数。
 SQL%ISOPEN布尔型属性：取值总是FALSE。SQL语句执行完毕立即关闭隐式游标。
17.11.3.3 示例
--删除员工表hr.staffs表中某部门的所有员工，如果该部门中已没有员工，则在部门表
hr.sections中删除该部门。
CREATEORREPLACEPROCEDUREproc_cursor3()
AS
DECLARE
V_DEPTNONUMBER(4):=100;
BEGIN
DELETEFROMhr.staffsWHEREsection_ID=V_DEPTNO;
--根据游标状态做进一步处理
IFSQL%NOTFOUNDTHEN
DELETEFROMhr.sectionsWHEREsection_ID=V_DEPTNO;
ENDIF;
END;
/
CALLproc_cursor3();
南大通用数据技术股份有限公司