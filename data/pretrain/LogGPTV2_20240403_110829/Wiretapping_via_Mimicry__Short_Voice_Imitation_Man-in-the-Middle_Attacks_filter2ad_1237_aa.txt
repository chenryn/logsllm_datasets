title:Wiretapping via Mimicry: Short Voice Imitation Man-in-the-Middle Attacks
on Crypto Phones
author:Maliheh Shirvanian and
Nitesh Saxena
Wiretapping via Mimicry: Short Voice Imitation
Man-in-the-Middle Attacks on Crypto Phones
Maliheh Shirvanian, Nitesh Saxena
University of Alabama at Birmingham
Birmingham, AL, USA
PI:EMAIL, PI:EMAIL
ABSTRACT
Establishing secure voice, video and text over Internet (VoIP) com-
munications is a crucial task necessary to prevent eavesdropping
and man-in-the-middle attacks. The traditional means of secure
session establishment (e.g., those relying upon PKI or KDC) re-
quire a dedicated infrastructure and may impose unwanted trust
onto third-parties. “Crypto Phones” (popular instances such as
PGPfone and Zfone), in contrast, provide a purely peer-to-peer
user-centric secure mechanism claiming to completely address the
problem of wiretapping. The secure association mechanism in
Crypto Phones is based on cryptographic protocols employing
Short Authenticated Strings (SAS) validated by end users over the
voice medium.
The security of Crypto Phones crucially relies on the assump-
tion that the voice channel, over which SAS is validated by the
users, provides the properties of integrity and source authentica-
tion.
In this paper, we challenge this assumption, and report on
automated SAS voice imitation man-in-the-middle attacks that can
compromise the security of Crypto Phones in both two-party and
multi-party settings, even if users pay due diligence. The ﬁrst at-
tack, called the short voice reordering attack, builds arbitrary SAS
strings in a victim’s voice by reordering previously eavesdropped
SAS strings spoken by the victim. The second attack, called the
short voice morphing attack, builds arbitrary SAS strings in a vic-
tim’s voice from a few previously eavesdropped sentences (less
than 3 minutes) spoken by the victim. We design and implement
our attacks using off-the-shelf speech recognition/synthesis tools,
and comprehensively evaluate them with respect to both manual
detection (via a user study with 30 participants) and automated de-
tection. The results demonstrate the effectiveness of our attacks
against three prominent forms of SAS encodings: numbers, PGP
word lists and Madlib sentences. These attacks can be used by a
wiretapper to compromise the conﬁdentiality and privacy of Crypto
Phones voice, video and text communications (plus authenticity in
case of text conversations).
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
CCS’14, November 3–7, 2014, Scottsdale, Arizona, USA.
Copyright 2014 ACM 978-1-4503-2957-6/14/11 ...$15.00.
http://dx.doi.org/10.1145/2660267.2660274.
Categories and Subject Descriptors
K.4.1 [Computer and Society]: Public Policy Issues—Privacy;
D.4.6 [Operating System]: Security and Protection—Authentica-
tion
General Terms
Security and privacy, Human-centered computing
Keywords
VoIP; Man-in-the-Middle Attack; Wiretapping; Authentication;
Short Authenticated Strings
1.
INTRODUCTION
Voice, video and text over IP (VoIP) systems are booming and
becoming one of the most popular means of communication over
the Internet. Today, VoIP is a prominent communication medium
used on a variety of devices including traditional computers, mo-
bile devices and residential phones, enabled by applications and
services such as Skype, Hangout, and Vonage, to name a few.
Given the open nature of the Internet architecture, unlike the
traditional PSTN (public-switched telephone network), a natural
concern with respect to VoIP is the security of underlying com-
munications. This is a serious concern not only in the personal
space but also in the industrial space, where a company’s conﬁden-
tial and sensitive information might be at stake. Attackers snifﬁng
VoIP conversations for fun and proﬁt (e.g., to learn credit card num-
bers, account numbers and passwords) as well as wiretapping and
surveillance of communications by the government agencies [1, 3]
are well-recognized threats. Prior research also shows the feasi-
bility of launching VoIP man-in-the-middle (MITM) attacks [54],
which can allow for VoIP trafﬁc snifﬁng, hijacking or tampering.
In light of these threats, establishing secure – authenticated and
conﬁdential – VoIP communications becomes a fundamental task
necessary to prevent eavesdropping and MITM attacks. To boot-
strap end to end secure communication sessions, the end parties
need to agree upon shared authenticated cryptographic (session)
keys. This key agreement process should itself be secure against
an MITM attacker. However, the traditional means of establishing
shared keys, such as those relying upon a Public Key Infrastruc-
ture (PKI) or Key Distribution Center (KDC), require a dedicated
infrastructure and may impose unwanted trust onto third-party enti-
ties. Such centralized infrastructure and third-party services might
be difﬁcult to manage and use in practice, and may themselves get
compromised or be under the coercion of law-enforcement agen-
cies, thereby undermining end to end security guarantees.
In this paper, our central focus is on “Crypto Phones” (Cfones), a
decentralized approach to securing VoIP communications. Cfones
promise to offer a purely peer-to-peer user-centric mechanism for
establishing secure VoIP connections. A prominent real-world in-
stance of a Cfone is Zfone [8, 10], invented by Phil Zimmermann,
now being offered as a commercial product by Silent Circle [9].
A Cfone involves executing a SAS (Short Authenticated Strings)
key exchange protocol, such as [7,11,51], between the end parties.
The SAS protocol outputs a short (e.g., 20-bit) string per party —
if the MITM adversary attempted to attack the protocol (e.g., in-
serted its own public key or random nonces), the two strings will
not match. These strings are then output, e.g., encoded into num-
bers or words [10], to users’ devices who then verbally exchange
and compare each other’s SAS values, and accordingly accept, or
reject the secure association attempt (i.e., detect the presence of
MITM attack). Figure 1 depicts a traditional MITM attack scenario
against Cfone.
The security of Cfones crucially relies on the assumption that the
human voice channel, over which SAS values are communicated
and validated by the users (Alice and Bob), provides the properties
of integrity and source authentication. In other words, it is assumed
that the attacker (Mallory) is not able to insert a new desired SAS
value in Alice’s and/or Bob’s voice.
In this paper, we systematically investigate the validity of this
assumption. Our hypothesis is that, although impersonating some-
one’s voice in face-to-face arbitrarily long conversations can be
signiﬁcantly challenging, impersonating short voices (saying short
and random SAS strings) in a remote VoIP setting may not be. In-
deed, we undermine Cfones’ security assumption underlying SAS
validation, and report on SAS voice imitation MITM attacks that
can compromise the security of Cfones in both two-party (2-Cfone)
and multi-party or conferencing (n-Cfone) settings, even if users
were asked to pay due diligence. Figure 2 depicts an example sce-
nario for our short voice imitation MITM attacks against 2-Cfone.
Our Contributions: We make the following contributions:
1. Generalization and Formalization of Cfones: The secure con-
nection establishment problem considered by Cfones, and the un-
derlying solution approach, bear a close resemblance to the do-
main of “proximity-based device pairing”. Based on this parallel
and wealth of prior work in device pairing, we provide a general-
ization and semi-formalization of Cfones, considering C-fones in
both two-party and multi-party settings and adopting prior device
pairing methods in the context of Cfones (Section 2).
2. Voice-Centric MITM Attacks Against Cfones: We present two
types of short voice imitation MITM attacks against Cfones (Sec-
tion 3). The ﬁrst attack, called the short voice reordering attack,
builds arbitrary SAS strings in a victim’s voice by reordering pre-
viously eavesdropped SAS strings spoken by the victim. The sec-
ond attack, called the short voice morphing attack, builds arbitrary
SAS strings in a victim’s voice from a few previously eavesdropped
sentences spoken by the victim.
3. Attack Design, Implementation and Evaluation: We design
and implement our reordering and morphing attacks using pub-
licly available, off-the-shelf speech recognition and synthesis tools
(Sections 4). Next, we comprehensively evaluate our attack sys-
tem with respect to both manual detection, via a user study with
30 participants, and automated detection (Section 5). The results
demonstrate the effectiveness of our attacks against three promi-
nently used SAS encodings: numbers, PGP word lists [10] and
Madlib sentences [22]. These attacks can be used by a wiretap-
per to completely compromise the conﬁdentiality and privacy of
Cfones communications (plus authenticity in case of Cfones text
conversations). Our objective evaluation shows that the shorter the
SAS string, the harder it is for the user to detect voice imperson-
ation. Our subjective evaluation shows that people can distinguish
Figure 1: A traditional MITM attack scenario for 2-Cfone – attack is
detected since SAS values do not match
Figure 2: Our short voice imitation MITM attack scenario for 2-Cfone
– attack succeeds because of voice impersonation
a different voice from a familiar voice with about 80% success.
However, they are not as successful in detecting our reordering and
morphing attacks. Moreover, we believe that in real-life, attack
detection would be even more difﬁcult due to the presence of the
ambient or channel noise, and the fact that SAS validation is only
a secondary user task (the primary task is establishing the call).
Cfones versus “Device Pairing”: Device pairing is the process of
establishing secure connection between two (or more) wireless de-
vices communicating over a short-range channel, such as WiFi or
Bluetooth. A wealth of prior work exists that uses SAS protocols
and different out-of-band (OOB) channels for the purpose of device
pairing [25, 30]. Device pairing involves devices and their users
who are physically nearby. In contrast, Cfones involve devices and
users which are remote, communicating over an open Internet chan-
nel. However, both systems assume that the SAS transfer or OOB
channel provides integrity and source authentication. While this
is a valid assumption in the context of physically co-located de-
vices/users (pairing), it may not be the case for the remote VoIP
setting (Cfones), since the data transmission still happens over an
open insecure channel, not over proximity communication. This
important aspect is what our work focuses on in this paper.
2. BACKGROUND & FORMALIZATION
2.1 Communication and Threat Model
A 2-Cfone SAS protocol between Alice and Bob is based upon
the following communication and adversarial model, adopted from
[51]. The devices being associated are connected via a remote,
1.Yourcodeis:39715ProvidethiscodetoAlice4.IsAlice’scodeequaltoyourcode?PressYesorNo1.Yourcodeis:24641ProvidethiscodetoBob4.IsBob’scodeequaltoyourcode?PressYesorNoCode: 39715Code: 246412 . My code is 397153. My code is 24641Step1:Bob'sandAlice'sdevicesshowtheirrespectivenumericcodesasaresultofSASprotocolexecution.Step2-3:BobandAliceexchangetheirrespectivecodesviaverbalcommunication.Step4:BobisaskedtocomparehiscodewiththeoneprovidedbyAlice,andAliceisaskedtocomparehercodewiththeoneprovidedbyBob,andaccordinglyacceptorrejecttheprocess.Inthiscase,bothshouldberejectingtherebypreventingtheattack.1.Yourcodeis:39715ProvidethiscodetoAlice6.IsAlice’scodeequaltoyourcode?PressYesorNo1.Yourcodeis:24641ProvidethiscodetoBob6.IsBob’scodeequaltoyourcode?PressYesorNoCode: 39715Code: 246412. My code is 397155. My code is 39715Step1:Bob'sandAlice'sdevicesshowtheirrespectivenumericcodesasaresultofSASprotocolexecution.Step2-3:BobandAliceexchangetheirrespectivecodesviaverbalcommunication;Mallorydropsthesepackets.Step4-5:MallorygeneratesAlice’scodemimickingBob’svoice,andAlice’scodemimickingBob’svoice,andinsertsthemintotherespectivechannels.Step6:BobisaskedtocomparehiscodewiththeoneprovidedbyAlice,andAliceisaskedtocomparehercodewiththeoneprovidedbyBob,andaccordinglyacceptorrejecttheprocess.Inthiscase,bothwillacceptleadingtoasuccessfulMITMattack.4. My code is 246413. My code is 24641point-to-point high-bandwidth bidirectional VoIP channel. An
MITM adversary Mallory attacking the Cfone SAS protocol is as-
sumed to have full control over this channel, namely, Mallory can
eavesdrop and tamper with messages transmitted. However, an ad-
ditional assumption is that Mallory can not insert voice messages
on this channel that mimic Alice’s or Bob’s voice. In other words,
the voice channel (over which the SAS values are validated) is as-
sumed to provide integrity and source authentication. The latter
assumption is what we are analyzing and challenging in this paper.
This approach and model can be easily extended to the VoIP
group communication or conferencing scenarios (n-Cfones). Here,
more than two remote participants form a group and all data (mes-
sages, video and audio) is broadcast among these participants. The
same assumptions are made over this broadcast channel as the
point-to-point channel in 2-Cfone. In addition, n-Cfone protocols
require the participants to verbally validate the count of the group
members. If undercounting happens, the attacker can simply insert
itself into the group and eavesdrop over all conversation [34].
2.2 SAS Protocols
A number of SAS protocols exist [17,32,35,39,51] in the litera-
ture that a Cfone implementation may adopt. It is an authenticated
key exchange protocol which allows Alice and Bob to agree upon
a shared authenticated session key based on SAS validation over
an auxiliary channel (such as voice channel). The protocol results
in a short (e.g., 20-bit) string per party – matching strings imply
successful secure association, whereas non-matching strings imply
a MITM attack. These protocols limit the attack probability to 2−k
for k-bit SAS data. Once the SAS protocol and SAS validation
process completes, all data between Alice and Bob is secured (e.g.,
using authenticated encryption) using the session key. The data
may include the voice, text or video data. In fact, a Cfone texting
application can utilize the SAS approach to secure the text channel
by means of SAS validation over the voice channel, as employed
by Silent Circle [9].
SAS protocols have been extended to the group setting [33, 50],
and can be utilized in the context of n-Cfones. The idea is the
same: upon executing the group SAS protocol, each device outputs
a SAS value; matching SAS values on all devices imply successful
association whereas non-matching values indicate the presence of
an attack. In addition to requiring comparison of SAS values, an
n-Cfone involves the user(s) to correctly count the number of group
members (i.e., the number n) taking part in the conference.
2.3 SAS Validation Mechanisms
Two-Party Setting: We consider following different 2-Cfone
methods derived from [49], for associating two remote devices A
and B, which encode the SAS data into decimal digits [49], PGP
words [10] or Madlib phrases (grammatically correct Madlib sen-
tences) [22]:
1. Compare-Conﬁrm: A and B display SAS encoded number, PGP
words, or Madlib phrase, each on their respective screens. Al-
ice compares the number, PGP words or phrase displayed on A
with the number displayed on B via verbal exchanges with Bob.
Based on the comparison, both Alice and Bob accept or reject
the secure association attempt.
2. Copy-Conﬁrm: A displays a SAS encoded number on its screen.
Alice verbally provides the number to Bob who inputs it onto B.
B indicates the result of association (match or mismatch) on its
screen. Bob indicates the same result to Alice verbally. Alice
accepts or rejects the association process on A accordingly.
Multi-Party Setting: In case of n-Cfones, some SAS validation
methods involve a centralized group member, called a leader, while
others are peer-based (as discussed in the context of proximity
group association [34]). For the latter, a circular topology is as-
sumed among the group members. Recall that, in addition to com-
paring SAS values, n-Cfone requires the participants to correctly
determine the group size. The leader, who knows the group size,
will either input this number to its own device as well as announce it
to others so they can enter to their respective devices, or the leader
will compare the count with the one displayed by its device and
announces the count to others so they can also compare with the
value displayed by their respective devices. The SAS values can be
validated in a leader-driven or a peer-to-peer fashion, by compar-
ing or by copying (in case of numbers). Below is a list of methods
(derived from [34]) suitable for n-Cfones.
1. Leader-VerifySAS: After the group size has been validated, the
leader’s device displays the SAS value encoded into a num-
ber, PGP words or phrase and the leader announces it to the