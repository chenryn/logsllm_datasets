---
author: Dan Nanni
category: 容器与云
comments_data: []
count:
  commentnum: 0
  favtimes: 4
  likes: 0
  sharetimes: 0
  viewnum: 21296
date: '2015-06-02 15:23:00'
editorchoice: false
excerpt: 你也许已经知道了，Docker 容器技术是现有的成熟虚拟化技术的一个替代方案。它被企业应用在越来越多的领域中，比如快速部署环境、简化基础设施的配置流程、多客户环境间的互相隔离等等。当你开始在真实的生产环境使用
  Docker 容器去部署应用沙箱时，你可能需要用到多个容器部署一套复杂的多层应用系统，其中每个容器负责一个特定的功能（例如负载均衡、LAMP 栈、数据库、UI
  等）。 那么问题来了：有多台宿主机，我们事先不知道会在哪台宿主机上创建容器，如果保证在这些宿主机上创建的容器们可以互相联网？ 联网技术哪家强？开源方案找 we
fromurl: http://xmodulo.com/networking-between-docker-containers.html
id: 5556
islctt: true
largepic: /data/attachment/album/201506/02/152326tsxqr899mi8zgmdi.png
permalink: /article-5556-1.html
pic: /data/attachment/album/201506/02/152326tsxqr899mi8zgmdi.png.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 你也许已经知道了，Docker 容器技术是现有的成熟虚拟化技术的一个替代方案。它被企业应用在越来越多的领域中，比如快速部署环境、简化基础设施的配置流程、多客户环境间的互相隔离等等。当你开始在真实的生产环境使用
  Docker 容器去部署应用沙箱时，你可能需要用到多个容器部署一套复杂的多层应用系统，其中每个容器负责一个特定的功能（例如负载均衡、LAMP 栈、数据库、UI
  等）。 那么问题来了：有多台宿主机，我们事先不知道会在哪台宿主机上创建容器，如果保证在这些宿主机上创建的容器们可以互相联网？ 联网技术哪家强？开源方案找 we
tags:
- Docker
- 网络
- weave
thumb: false
title: 如何在 Docker 容器之间设置网络
titlepic: false
translator: bazz2
updated: '2015-06-02 15:23:00'
---
你也许已经知道了，Docker 容器技术是现有的成熟虚拟化技术的一个替代方案。它被企业应用在越来越多的领域中，比如快速部署环境、简化基础设施的配置流程、多客户环境间的互相隔离等等。当你开始在真实的生产环境使用 Docker 容器去部署应用沙箱时，你可能需要用到多个容器部署一套复杂的多层应用系统，其中每个容器负责一个特定的功能（例如负载均衡、LAMP 栈、数据库、UI 等）。
那么问题来了：有多台宿主机，我们事先不知道会在哪台宿主机上创建容器，如果保证在这些宿主机上创建的容器们可以互相联网？
联网技术哪家强？开源方案找 [weave](https://github.com/zettio/weave)。这个工具可以为你省下不少烦恼。听我的准没错，谁用谁知道。
于是本教程的主题就变成了“**如何使用 weave 在不同主机上的 Docker 容器之间设置网络**”。
### Weave 是如何工作的
![](/data/attachment/album/201506/02/152326tsxqr899mi8zgmdi.png)
让我们先来看看 weave 怎么工作：先创建一个由多个 peer 组成的对等网络，每个 peer 是一个虚拟路由器容器，叫做“weave 路由器”，它们分布在不同的宿主机上。这个对等网络的每个 peer 之间会维持一个 TCP 链接，用于互相交换拓扑信息，它们也会建立 UDP 链接用于容器间通信。一个 weave 路由器通过桥接技术连接到本宿主机上的其他容器。当处于不同宿主机上的两个容器想要通信，一台宿主机上的 weave 路由器通过网桥截获数据包，使用 UDP 协议封装后发给另一台宿主机上的 weave 路由器。
每个 weave 路由器会刷新整个对等网络的拓扑信息，可以称作容器的 MAC 地址（如同交换机的 MAC 地址学习一样获取其他容器的 MAC 地址），因此它可以决定数据包的下一跳是往哪个容器的。weave 能让两个处于不同宿主机的容器进行通信，只要这两台宿主机在 weave 拓扑结构内连到同一个 weave 路由器。另外，weave 路由器还能使用公钥加密技术将 TCP 和 UDP 数据包进行加密。
### 准备工作
在使用 weave 之前，你需要在所有宿主机上安装 [Docker](http://xmodulo.com/recommend/dockerbook) 环境，参考[这些](http://xmodulo.com/manage-linux-containers-docker-ubuntu.html)[教程](http://xmodulo.com/docker-containers-centos-fedora.html)，在 [Ubuntu](http://xmodulo.com/manage-linux-containers-docker-ubuntu.html) 或 [CentOS/Fedora](http://xmodulo.com/docker-containers-centos-fedora.html) 发行版中安装 Docker。
Docker 环境部署完成后，使用下面的命令安装 weave：
```
$ wget https://github.com/zettio/weave/releases/download/latest_release/weave
$ chmod a+x weave
$ sudo cp weave /usr/local/bin 
```
注意你的 PATH 环境变量要包含 /usr/local/bin 这个路径，请在 /etc/profile 文件中加入一行（LCTT 译注：要使环境变量生效，你需要执行这个命令： source /etc/profile）：
```
export PATH="$PATH:/usr/local/bin"
```
在每台宿主机上重复上面的操作。
Weave 在 TCP 和 UDP 上都使用 6783 端口，如果你的系统开启了防火墙，请确保这两个端口不会被防火墙挡住。
### 在每台宿主机上启动 Weave 路由器
当你想要让处于在不同宿主机上的容器能够互相通信，第一步要做的就是在每台宿主机上启动 weave 路由器。
第一台宿主机，运行下面的命令，就会创建并开启一个 weave 路由器容器（LCTT 译注：前面说过了，weave 路由器也是一个容器）：
```
$ sudo weave launch 
```
第一次运行这个命令的时候，它会下载一个 weave 镜像，这会花一些时间。下载完成后就会自动运行这个镜像。成功启动后，终端会输出这个 weave 路由器的 ID 号。
下面的命令用于查看路由器状态：
```
$ sudo weave status 
```
![](/data/attachment/album/201506/02/152332l5vfgob7bcf3fg7b.jpg)
第一个 weave 路由器就绪了，目前为止整个 peer 对等网络中只有一个 peer 成员。
你也可以使用 docker 的命令来查看 weave 路由器的状态：
```
$ docker ps 
```
![](/data/attachment/album/201506/02/152335al9lwelhzl9iawqh.jpg)
第二台宿主机部署步骤稍微有点不同，我们需要为这台宿主机的 weave 路由器指定第一台宿主机的 IP 地址，命令如下：
```
$ sudo weave launch  
```
当你查看路由器状态，你会看到两个 peer 成员：当前宿主机和第一个宿主机。
![](/data/attachment/album/201506/02/152336jhfaaraia8a0xnch.jpg)