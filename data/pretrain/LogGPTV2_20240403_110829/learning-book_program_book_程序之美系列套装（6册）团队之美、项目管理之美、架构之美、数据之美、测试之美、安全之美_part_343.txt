那么你怎么测试一个并不是正态分布的RNG呢？又怎么测试一个指
数分布RNG？这里有个小小的魔法称为中心极限定理：如果我们对
足够多的值求平均值，那么任何山分布就应该趋近于正态分布。对
于平均值和标准差均是u的指数分布而言，如果我们对它的一百万个
样本求平均值，则均值分布应该是一个非常接近于平均值为u标准差
w/1000的正态分布。像之前一样，我们可以验证均值是否落入我们
所期望的二倍或三倍标准差之内。
中心极限定理提供了比其他理论更好的分布近似逼近。分布如果从
一开始看上去越像一个正态分布，那么它的均值将会越快地收敛为
正态分布。但即使分布在一开始看起来不像正态分布，它的平均值
也会很快地向正态逼近2]。但正如刚才所提到的，不去关注这些过
于细节的部分，我们依然可以做好测试。假设你期望你的测试大概
只有5%的时间是失败的，而实际上有10%的时间是失败的。在这种
情况下，你可能就不需要为此报告一个“未达到均值"的缺陷。可
是，如果每一次的测试都失败了，我们以此为理由认为这是随机数
发生器的一个缺陷，比以某个均值的个体行为显得更合理一些。
唯一有可能导致问题的情况是，被测试的分布甚至连一个平均值都
没有。例如，柯西分布看起来像一个正态分布，但背离中心值越远
其趋向于零的速度越慢。实际上，因为它趋向于零过于缓慢，以致
平均值不存在。当然你总是可以取任何的样本数量的均值，但这些
均值则不会收敛至任何特定值。在这种情况下，中心极限定理并不
适用。不过你可以通过测试总是存在的中位数来做这种类似于均值
测试。[3]
方差测试
均值测试可以发现某些类型的编码错误。然而，一些编写不正确的
代码也很容易通过均值测试：总是返回均值！例如，假设一个RNG
的返回值应该服从均值为4、标准差为9的正态分布。程序如总是返
1959
---
## Page 1961
回4就会通过测试。程序返回正常的均值为4、方差为9的随机数也会
通过测试。而后者则更加巧妙且更可能发生在现实中。
一个均值和方差组合测试要比单一的均值测试更好地保证了软件的
正确性。一些软件错误，例如刚才提到的标准差和方差的混淆，虽
然均值未受影响，但却将方差置之一旁。顺便说一句，为均值和标
准差取较大区别的数值是一个好办法。假设应用软件将作为输入参
数的均值和标准差相交换。那么用样本值服从均值和标准差为7的正
态分布来做测试将不会发现这个缺陷。而使用样本值服从均值
为-2、标准差为7的正态分布来做测试将会好得多。因为-2是一个非
法的标准差，如果参数颠倒将会立即出错。
正如均值测试是用样本的均值和分布的均值做比较，方差测试是用
样本的方差和分布的方差做比较。假设我们计算了RNG产生的大量
输出数值的样本方差，比如，一百万个输出值。这些输出数值是随
机的，那么这些取样的方差就是随机的④。我们期望它将“经常接
近"于分布的方差。在这里我们又回到了老问题：有多“经常"和有多
“接近"？与测试均值一样，对于正态分布来说，答案最简单。假设
一个RNG生成的是服从正态分布且方差为o的随机数。设S是基于
RNG产生的n个数值的样本方差。如果n非常大，则将会趋近于均值
为o2、方差2o4／（n-1）的正态分布。就像前面描述的，我们认
为一个服从正态分布的随机数应该有平均95%的时间S2是处于两倍
标准差之内的。
例如，假设我们正在测试一个发生器生成的随机样本的方差。该生
成器应该返回随机数服从均值为7、方差为25（标准差5）的正态分
布。均值7与测试方差无关。假设我们对样本方差S2的计算是基于
1000个随机值。那么S2的均值应为25且方差是2×54/999。这将使s2
的标准差约为1.12。因此我们将期望约95%的时间S将位于22.76和
27.24之间。
如果被测的随机数生成器并不生成服从正态分布的随机数，我们再
次回到使用中心极限定理并掩饰其非正态性。但这次对中心极限定
理的使用并不像我们测试均值一样有据可循。通常情况下，样本的
方差会比正态逼近预测的变化范围大。这意味着我们的测试失败的
次数将会比预期多。但像以前一样，我们可能不需要太小心。编码
错误一般会造成每次测试失败，而不是仅仅超出预期一点点。此
1960
---
## Page 1962
外，在下面几小节里的测试将会做一些更小心的测试采样值的分布
的工作并且有坚实的理论依据。
正如一些分布没有均值，有些分布则是没有方差。柯西分布就是典
型的例子。计算柯西随机数样本方差是徒劳无益的。但下面的测试
却是完全适用于柯西分布的。
水桶测试
假设一个RNG同时通过了均值和方差测试。这将给你带来一些信心
一代码生成的样本值是来自于某些拥有正确均值和方差的分布，
但这些样本值仍有可能来自于一个完全错误的分布。
为了说明这个潜在的问题，现考虑两个生成器。第一个返回值来自
于一个均值为1（因而标准差为1）的指数分布。第二个返回值来自
于均值和标准差为1的正态分布。均值和方差测试方法是无法发现调
用的生成器被交换这样的错误。什么样的测试可以发现生成器被交
换了呢？你可以通过计算有多少随机值落入不同的“桶"或取值范围
来得到答案。例如，你可以数数有多少输出值是介于-1和0之间，介
于0和2之间，以及大于2。各分布之间有最明显区别的是在-1到0之
间的那个桶中。那个指数分布的发生器将会有零个数值在那个桶
里，而正态分布的发生器会有大约19%的随机数落在这个相同范
围。通常我们会寻找一些更细节的情况，诸如所有的桶都应该会有
一些数值，唯一的问题是，是否有些桶里有太多或太少的样本。
（我们在这里称之为"水桶测试"的方法通常被称为卡方（x）检验
[6。有些人用术语“箱子"来表示我们所说的“桶”。）
下面我们介绍如何做水桶测试。将输出范围划分成k个桶。所有的桶
应该包括了输出数值的整个范围且不重叠。设E为第i个水桶预期的
样本个数，并设0为你实际观察到的样本个数。然后求卡方统计：
（O-E)
r²=>
=1
如果该值过大，那就说明观察到的个数与预计的个数相差甚远，所
以有可能我们的生成器没有遵循正确的分布。如果此值太小，说明
期望的个数和期望的数值吻合得太好了以致没有足够的随机变化。
1961
---
## Page 1963
这些描述留下了几个没有回答的问题。应该使用多少桶？该如何放
置这些桶呢？你如何知道什么时候x太大或太小了？
首先，我们考虑桶的个数。如果桶太少了，测试就会变得不够严格并且错误可
能会被忽视。相反地，如果桶太多了，那么我们无法期望在每个桶里找到许多
样值并且测试的理论要求就没有得到满足。一个一般规律是，每个桶里期望的
样本个数至少是521。这是没有问题的，因为我们正在生成这些数据，而不是
收集。我们可以首先决定桶数，然后再选择样本个数n，使其足够大到在每个桶
里都有超过我们预计的5个样本。
下一步，我们如何决定在哪里放置水桶呢？我们可以任意决定。比
如，用10个桶并选择边界以使每个桶里有我们期待的相同个数的样
本。举个例子，如果想要测试柯西随机数生成器，我们可以使用柯
西分布函数找到边界值x，当i=1，2，3，....，9。这样我们就可
以预期有10%的样本值将会小于x1，10%位于x和x2之间，另10%
在x2和x3之间，直至有10%的样本值大于xg。此外，如果对某一
区域特别关注，也可以把那个区域定义为其中一个桶。例如，如果
有人担心对于某些发生器会有太多的样本值大于17，那你就可以设
定一个样本值大于17的水桶。
最后，我们来解决应该期望的卡方统计值的范围。如果我们有b个
桶，统计值x具有一个自由度为b-1的卡方分布。由于我们自己生成
样本并且可以做到要多少有多少，或可使b值相当大（请记住，要使
样本个数n足够大到使每一个桶能达到预计的至少有5个样本）。然
后，就可以用一个正态分布来近似模拟卡方分布而不是必须查阅表
格，从而找到一个典型的卡方统计值范围。对于一个大b，自由度为
b-1的卡方分布和一个均值为b-1、方差为2b-2的正态分布具有大致相
同的分布。然后我们就可以利用之前相同的规则，一个正态分布随
机变量的均值落在两倍或三倍标准差内的出现频率。
柯尔莫戈罗夫-斯米尔诺夫（Kolmogorov-Smirnov）测试
水桶测试的一个缺点就是它有点“粗犷”。即便一个随机数发生器在
每个桶里投放与预期数量相差不多的样本，也很有可能这些样本仍
无法正确分布在各桶内。比如，假设桶边界是m+1/2，其中，m为整
数值。如果随机数发生器里的一个缺陷导致所有浮点值被四舍五入
为最接近的整数，那么所有样本则会刚好落在桶的正中间，而每个
1962
---
## Page 1964
桶里样本个数是不会受此影响的。甚至这个发生器根本就是不对
的，但多数时间水桶测试依然会通过。
我们希望能有一种粒度更小的方法来检测随机样本是如何分布的。
这里有一种做法可以。设n为一较大样本数。对于每一个样本xi，我
们可以用小于xi的实际比例与我们预期将会看到的样本比例相对
比。换言之，我们将用理论分布函数和经验分布函数做比较。经验
分布的定义是：
1
同时理论分布函数F(x)是RNG返回值不大于x的理论概率。我们想看
看F(x)和Fn(x)之间的区别。简而言之，我们想要在理论分布值和经
验分布值之间做直接比较。这就是柯尔莫戈罗夫-斯米尔诺夫（K-
S）测试。[2]
为了进行测试，我们需要计算两个数：
K+=√nmax（F,（x)-F（x）)
K=√nmax（F（x)-F（x）
除以因子√1后，K+是经验分布超过理论分布的最大总数。同
理，乘以因子√Ⅱ后，K是理论分布超过经验分布的最大总数。
若理论分布和经验分布可以很完美的对齐，则K+和K-应均为零。
在实际中，无论K+或K是几乎不可能为零的，并且趋近零是可疑
的。另一种极端情况，如果理论分布和经验分布不能对齐，那么K+
或K-值就会偏大，这也表示生成的随机数有问题。那么，在我们的
统计里什么是可疑的小值？什么又是可疑的大值呢？
与之前的测试中，我们提出用中心极限定理来降低我们的问题复杂
度，使其成为一个正态分布。但在这里是没用的。就像是将要从魔
术师帽子里拽出一只兔子一样，我们会给定一个范围值但是并不解
释它来自何处。对于大n，我们期望K+有98%的时间是位于0.07089
1963
---
## Page 1965
和1.5174之间的。那么，n应该要多大才能达到这个要求？对于你将
要用于测试的值n，如设n=10o0，则足以到达目标。DonaldKnuth的
书里提供了K-S测试的更多细节，例如解释上述的范围值是如何得
来的，以及如何基于你希望的测试通过率来找到适合你的范围值。
如果K-S测试总是能通过，这就是一个有力的证据说明从均匀随机
数到非均匀随机数的变换被正确地实现了。在这种情况下，如果均
匀的RNG是值得信赖的，那么非均匀随机数生成器也是可以信赖
的。当然，某个缺陷仍可能逃过这个测试过程，但一般不太可能。
现RNG的缺陷来自何处。
[1]存在一些限制条件。详情参见概率论教材。
[2]如果你真的想知道均值收敛于正态分布有多快，请翻阅Berry-
Esseen定理。
[3]http://www.johndcook.com/Cauchy_estimation.html。
[4]想知道如何计算样本方差请参阅
http://www.johndcook.com/standard_deviation.html。如果你只是想根据
统计学教科书上的一个公式来编写代码，你可能会得到一个令人不
快的意外数字。
[5]这不是教科书里通常用来表示这个结果的方法。更确切地说，
（n-1）S²/c2有一个x2（n-1）的分布，也就是，一个有n-1自由度的
卡方分布。但是当n变大时，我们能够用一个正态分布近似卡方分布
从而求值。
[6] Knuth,Donald E.The Art of Computer
Programming, Vol.2:Seminumerical Algorithms,Third Edition,Addison
Wesley， 1998.