### 4.4 Replication over the L Replica

A practical implementation of this approach would involve assigning unique community tags, where the first 16 bits are distinct to avoid conflicts with reserved values (e.g., 0xffff) and to represent the Autonomous System (AS) number that originated the tag. The remaining 16 bits can be used to encode coarse latitude and longitude information.

- **Latitude Encoding**: Latitude ranges from -90 to 90, but inhabited latitudes are typically between -50 and 74 [41]. This range can be encoded in 7 bits.
- **Longitude Encoding**: Longitude ranges from -180 to 180, which can be encoded in the remaining 9 bits.

Anycast sites would include these community tags in their outgoing advertisements. These tags would propagate as standard community tags do, allowing recipients to choose routes based on the proximity of the destination encoded in the last 16 bits.

To implement this solution, BGP routers would need to be configured with their latitude and longitude. They would also need to perform computations to decode the encoded latitude and longitude in BGP community tags and determine distances to the destinations in the routes. However, the configuration is typically a one-time setup, and the computation overhead is minimal, only required when new routes are received. Overall, we believe this proposed fix introduces minimal overhead in Forwarding Information Base (FIB) computation and should not significantly impact control plane performance.

Encoding geographical information in BGP community tags to improve route selection or for diagnostic purposes is already a common practice in many ISPs and Internet Exchange Points (IXPs) [17, 48]. These examples suggest the practicality of the proposed fix and provide a means to approximate it with explicit preferences for specific sites.

### Experimental Deployment on PEERING Testbed

We conducted an experimental deployment on the PEERING testbed [46] to evaluate whether the community tags propagate well enough to be useful for distant ISPs. The PEERING testbed allows researchers to announce prefixes with customized BGP community tags from seven different locations.

- **Prefix Announcement**: We announced the prefix 184.164.249.0/24 (ASN47065) from seven locations: Amsterdam, Athens, Los Angeles, Boston, Phoenix, Seattle, and Belo Horizonte (Brazil).
- **Tag Propagation Analysis**: We collected BGP routes towards the announced prefix from 20 RouteViews [32] route collectors. By default, Cisco routers do not pass BGP community tags to their peers. Among the 20 collectors, 11 received routes with customized community tags. The fraction of routes with community tags ranged from 8% to 38% across these 11 collectors. Five collectors received tags from their closest replica, while the other five received tags from their second closest replicas. One collector received tags from the fourth closest replica.

The results from this experiment are encouraging, as many clients benefited from the geo-hints even with the BGP community filtering present in today's Internet.

### Comparison with Existing BGP Communities

To understand if our customized community tags from the PEERING testbed were treated differently from BGP communities already in use, we also analyzed the propagation of community tags from other ISPs, including ServerCentral [48], Packet Clearing House [37], and Init7 [22]. We found similar propagation patterns, with 7 to 13 collectors receiving routes with community tags, and usually less than 50% of the routes containing community tags.

Incomplete propagation of community tags warrants further study to understand how and why they are filtered. In theory, these are transitive attributes that could help optimize routes, but their potential is limited in practice.

### Other Forms of Hints

If BGP were extended to add tags specific to anycast prefixes, other forms of hints, both static and dynamic, could be easily added:

- **Static Hint**: A simple integer hint reporting the number of reachable sites via a route. This would allow BGP routers to choose the route that advertises the most sites, potentially leading to better performance. This hint would have even lower overhead than the geographic list but might miss smaller ISP-served replica sites.
- **Dynamic Hint**: Measurement services could update hints based on load or latency, allowing anycast to natively approximate more sophisticated server selection algorithms. A major advantage of our proposal is its incremental deployability, compatibility with existing BGP policy, and the ability to revert to regular BGP-based anycast behavior if the hints are removed.

### Conclusion

IP anycast is a critical component of network infrastructure, yet its inefficiencies have long been misunderstood and unaddressed. Using passive and active measurements, we provided a detailed root-cause analysis of the inefficiencies in root DNS servers' IP anycast deployments. Our findings empirically validate earlier hypotheses [4] that equal-length AS paths are largely responsible for anycast latency inflation. We proposed a fix using geo-hints to help routers more efficiently choose among multiple equal-length AS paths. Unlike previous proposals [3, 4], geo-hints are easily and incrementally deployable, demonstrating that IP anycast can be efficient without relying on a single large upstream provider.

### Acknowledgments

We thank the anonymous reviewers and our shepherd, Olivier Bonaventure, for their valuable comments. This work was supported in part by NSF awards CNS-1409249, CNS-1526635, and CNS-1619048.

### References

[References listed here, formatted consistently and clearly]

---

This revised version aims to enhance clarity, coherence, and professionalism, making the text more accessible and understandable.