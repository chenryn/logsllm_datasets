# Enabling IP Protection for Outsourced Integrated Circuit Design

## Authors
- Xingliang Yuan, Department of Computer Science, City University of Hong Kong, Hong Kong
- Cong Wang, Department of Computer Science, City University of Hong Kong, Hong Kong
- Kui Ren, Department of Computer Science and Engineering, University at Buffalo, United States

### Abstract
Modern integrated circuits (ICs) can easily involve millions or even billions of gates, known as very large-scale integration (VLSI). The complexity and cost of in-house design have led to a trend of migrating these processes to low-cost public clouds. However, this migration raises significant challenges in protecting the sensitive IC design data, i.e., the Intellectual Property (IP). In this paper, we present the first practical system for privacy-preserving IC timing analysis, a critical and expensive procedure involving repeated evaluations of timing delays on a gate-level circuit. Our system leverages the observation that many IP blocks are universally reused across different IC designs, thus only a small portion of critical IP blocks need protection. By carefully extracting and reserving these critical design data locally, our system outsources the non-critical data to the public cloud. We develop specialized algorithms to enable the public cloud to process only the non-critical data and return intermediate results, which are then integrated with the critical data by the local server for final timing analysis. Additionally, we propose a heuristic algorithm to reduce bandwidth costs. Through rigorous security analysis, we demonstrate that our system is resilient to IC reverse engineering and protects both the critical IP gate-level design and functionality. We evaluate our system using large IC benchmarks with up to a million gates, showing its efficiency and effectiveness.

### Categories and Subject Descriptors
- B.7 [Integrated Circuits]: Miscellaneous
- K.6.5 [Management of Computing and Information Systems]: Security and Protection

### Keywords
- Secure outsourcing, Integrated circuits, IP protection, Timing analysis

## 1. Introduction
The continuous scaling down of transistor size and advancements in electronic design automation (EDA) have enabled the integration of millions or even billions of gates into a single IC, known as VLSI. The rigorous and expensive IC design procedures, including functional verification, circuit equivalence checking, and timing and power analysis, are iterative and incremental, leading to growing design complexity and high computational demands. To address these challenges, one trend is to move in-house design processes to the public cloud, leveraging its low-cost and scalable computing resources. However, this migration also necessitates practical and privacy-preserving techniques to protect sensitive IC design data, i.e., the IP.

Previous studies have shown that hardware infringement can result in significant financial losses, making IP protection crucial in IC design. Various hardware watermarking and fingerprinting techniques have been proposed to tag and track illegal IP usage after manufacturing. Proactive protection methods, such as IC obfuscation via camouflage gates and splitting manufacturing, aim to conceal IP during the manufacturing stage. However, these methods do not address the security challenges when IC design procedures are moved to the public cloud.

In this paper, we initiate the study of enabling secure IC design outsourcing with privacy-assured IP protection. We present a practical system for outsourced privacy-preserving timing analysis on ICs. Timing analysis is an essential procedure that evaluates the circuit's timing performance and verifies timing constraints to ensure design specification and runtime reliability. Statistical timing analysis, which requires repeated evaluations of the longest path delay via Monte Carlo simulations, is computationally intensive. For instance, performing 64,000 Monte Carlo simulations on a circuit with 25,000 logic gates takes nearly an hour on a modern PC. Given the scale of today's ICs, the computation cost is prohibitive even for well-funded companies.

### Design Intuitions
Our system leverages the IP reuse philosophy, where many IP blocks are universally reused across different IC designs. Only a small portion of critical IP blocks, especially newly designed ones, need protection. Standard design units like memory, bus I/O, and arithmetic units are inherently non-sensitive and do not require protection. Recent surveys indicate that the percentage of newly designed blocks in a full IC is less than 10% and is expected to decrease further due to increased IP reuse.

### Design Challenges
Simply splitting critical and non-critical design data does not facilitate correct timing analysis, as most state-of-the-art algorithms for finding the longest path delay require sequential processing of each graph vertex. This leads to significant interactions between the public cloud and the private server. We develop a new algorithm that breaks the computation dependency, allowing the cloud to process non-critical data and return intermediate results. These results are then integrated with critical data by the local server for final timing analysis. Additionally, we propose a heuristic algorithm to reduce the size of intermediate results, thereby reducing bandwidth costs.

### Contributions
- **Practical and Privacy-Preserving System:** We propose the first practical and privacy-preserving system for outsourcing timing analysis, one of the most expensive and critical IC design procedures.
- **Efficient Computation and Communication:** Our design enables the cloud to conduct intensive workloads on non-critical data and return intermediate results, which are integrated with critical data by the local server. A heuristic algorithm reduces the size of intermediate results for better communication efficiency.
- **Security Analysis:** Our system is resilient to state-of-the-art IC reverse engineering, protecting both the critical IP gate-level design and functionality. Specifically, our system ensures that I/O pattern analysis reveals the critical IP functionality with negligible probability.
- **Performance Evaluation:** We implement and evaluate our system prototype on large-scale IC benchmarks, demonstrating up to 91% local computational savings when critical IP blocks are around 10% of the whole IC.

## 2. Preliminaries and Notations
### IC Design Flow
The IC design flow involves describing the IC's functionality and behavior using HDL, transforming HDL codes to gate-level design, and generating the netlist. Timing analysis estimates the signal propagation time from inputs to outputs, ensuring the circuit meets design specifications before layout generation and fabrication.

### Timing Analysis
Timing analysis evaluates the IC's longest path delay, formulated as the longest path problem on a weighted directed-acyclic graph (DAG). The timing graph is derived from the gate-level netlist, with vertices representing gates, inputs, and outputs, and edges representing interconnects. Edge weights correspond to gate delays. Common approaches, such as PERT, sequentially compute the longest path delay following a topological order. Statistical timing analysis (STA) via Monte Carlo simulations is widely used to tolerate process variations, providing accurate timing measurements.

## 3. Problem Statement
### System Model
Our system includes two entities: the local private server (LS), representing IC design companies, and the public cloud servers (CS), providing computing services. LS aims to leverage CS for timing analysis while protecting critical IPs.

### Threat Models and Attack Assumptions
We assume LS is trustworthy and consider an "honest-but-curious" public cloud, which performs computations faithfully but may attempt to steal critical IC design data. Our focus is on protecting critical IP functionality against IC reverse engineering, particularly I/O pattern analysis.

### Design Goals
Our system should achieve the following:
- **Critical Data Protection:** No critical design data, including gate-level design and functionalities, should be leaked or reverse engineered.
- **Efficient Computation and Communication:** The system should minimize computational and communication overhead.
- **Security Resilience:** The system should be resilient to state-of-the-art IC reverse engineering attacks.

## 4. System Design
### Overview
Our system extracts critical design data from the full-circuit timing graph and reserves it locally. The remaining non-critical data is sent to the public cloud for intensive Monte Carlo simulations. Intermediate results are returned and integrated with critical data by the local server for final timing analysis. We develop a splitting algorithm and a heuristic to reduce the size of intermediate results.

### Detailed Design
- **Splitting Algorithm:** The algorithm breaks the computation dependency between critical and non-critical data, allowing the cloud to process non-critical data and return intermediate results.
- **Heuristic Algorithm:** The heuristic reduces the size of intermediate results, enhancing communication efficiency.

## 5. Security Analysis
Our system is resilient to IC reverse engineering, protecting both the critical IP gate-level design and functionality. Specifically, I/O pattern analysis reveals the critical IP functionality with negligible probability.

## 6. Prototype Evaluation
We implement and evaluate our system prototype on the IWLS2005 benchmark, which contains circuits with nearly one million gates. Our evaluation shows up to 91% local computational savings when critical IP blocks are around 10% of the whole IC.

## 7. Related Work
We provide a comprehensive overview of related works, highlighting the contributions and limitations of existing approaches.

## 8. Conclusion
Our system makes a significant step towards secure IC design migration to the public cloud, encouraging IP-protected IC design outsourcing via IP reuse.