User: I'm trying my hand at building a MUD (multiplayer interactive-fiction game) 
I'm in the design/conceptualizing phase and I've run into a problem that I can't come up with a solution for. I'm hoping some more experienced programmers will have some advice. 
Here's the problem as best I can explain it. When the player decides to perform an action he sends a command to the server. the server then processes the command, determines whether or not the action can be performed, and either does it or responds with a reason as to why it could not be done. One reason that an action might fail is that the player is busy doing something else. For instance, if a player is mid-fight and has just swung a massive broadsword, it might take 3 seconds before he can repeat this action. If the player attempts to swing again to soon, the game will respond indicating that he must wait x seconds before doing that. Now, this I can probably design without much trouble. The problem I'm having is how I can replicate this behavior from AI creatures. All of the events that are being performed by the server ON ITS OWN, aka not as an immediate reaction to something a player has done, will have to be time sensitive. Some evil monster has cast a spell on you but must wait 30 seconds before doing it again... I think I'll probably be adding all these events to some kind of event queue, but how can I make that event queue time sensitive?
Assistant: I'll provide you an answer from an LPMud/LDMud point of view.
Every player in the MUD is an instance of player.c.  Player.c inherits from living.c.  Things that are living have a heartbeat.  The heartbeat function is processed once every 2 seconds for every living object on the mud (or anything that has a heartbeat() function).  Timing events is not typically done based on seconds, but instead based on the number of heartbeats that have elapsed through counters within the object.
The wonderful news that applies to your question is that monsters also inherit from living.c.  This means that if you had actions that can only be performed periodically this can all be managed within the heartbeat based on the number of ticks that have occurred.