### Lateral Movement via Remote Desktop Protocol (RDP)

**Description:**
Remote Desktop Protocol (RDP) is a common tool used by administrators and help desk personnel for remote access. However, it also presents an attractive attack vector for adversaries seeking to blend in with standard network activity. Once on a client system, attackers can leverage built-in Microsoft tools to gain remote access to other systems using RDP and valid credentials.

**Attack Vectors:**
- **Microsoft Remote Desktop Connection (mstsc.exe):** Attackers can use this tool to access victim systems. Even if the default port 3389 is not exposed to the Internet, port forwarding or pivoting through other Internet-accessible systems can enable external or internal access.

**Indicators:**
- **Windows Event Logs:**
  - **Event ID 4624:** This logon event will show either a Type 10 or Type 3 when RDP is used, depending on the versions of Windows and their specific configuration.
  - **Event ID 4778:** This event is logged when a session is reconnected to a Windows station. To differentiate between RDP and local session switching, check the "Session Name" field. If local, it will contain "Console"; if remote, it will begin with "RDP".
  - **Event ID 4779:** This event is logged when a session is disconnected. Similar to Event ID 4778, the "Session Name" field helps differentiate between RDP and local sessions.
  - **Event IDs 21, 22, or 25:** These events may be found in the `Microsoft-Windows-TerminalServicesLocalSessionManager/Operational` log, which contains the IP address and logon user name of the originating computer.
  - **Adversary Tools:** Adversaries often use tools like `plink.exe` to forward RDP traffic over SSH, bypassing firewalls and preventing traffic inspection.

### Service Controller (SC)

**Description:**
The Service Controller (SC) command allows for the creation, stopping, and starting of services. Services run outside the context of a logged-on user, enabling automatic startup at boot time. Malicious actors can use SC to ensure persistence and automate actions, including on remote systems with appropriate credentials.

**Syntax:**
- **Establish an Initial Authenticated Connection:**
  ```sh
  net use \\[targetIP] [password] /u:[Admin_User]
  ```
- **Create a Service on the Remote System:**
  ```sh
  sc \\[targetIP] create [svcname] binpath= [executable]
  ```

**Indicators:**
- **Windows Event Logs:**
  - **Event ID 7045:** Indicates the creation of a new service, including the path to the executable service file.
- **Registry:**
  - **Path:** `HKLM\SYSTEM\CurrentControlSet\Services`
  - **Key:** `ImagePath` specifies the location of the associated executable on disk for each service.
- **Account Logon and Logon Events:** Any use of authenticated credentials to modify services on remote systems will leave these events in the logs.

### Windows Remote Management (WinRM)

**Description:**
WinRM allows commands to be sent to remote Windows computers over HTTP or HTTPS using the Web Services for Management protocol. Running as a service under the Network Service account, WinRM can bypass many whitelisting solutions, making it an attractive option for attackers.

**Attack Vectors:**
- **winrs Command:** Allows execution of arbitrary commands on remote systems.

**Syntax:**
```sh
winrs -r:http://target_host “cmd”
```

**Indicators:**
- **Network:**
  - **TCP Port 5985 (HTTP) and 5986 (HTTPS):** Unusual activity on these ports may indicate WinRM usage.
- **Windows Event Log:**
  - **Event ID 6:** Logged when a connection is initiated using WinRM, showing the remote destination.
  - **Event ID 91:** Logged on the system where the connection is received, including the user account used for authentication.

### Windows Management Instrumentation (WMI)

**Description:**
WMI is a Microsoft platform for simplifying administrative tasks. It requires authenticated access, and network security monitoring can detect malicious use since WMI does not encrypt its network traffic when run against a remote system.

**Indicators:**
- **Repository Location:**
  - **Path:** `%SystemRoot%\wbem\Repository`
  - **Tool:** The open-source `python-cim` tool can parse WMI subscriptions stored in the WMI database.

### Distributed Component Object Model (DCOM)

**Description:**
DCOM can be used for lateral movement, allowing attackers with high privileges to remotely execute shellcode through Office applications and other Windows objects. DDE execution can be directly invoked through a COM-created instance of a Microsoft Office application, bypassing the need for a malicious document.

**Indicators:**
- **Processes:**
  - **Child Processes:** Commands run as child processes of `mmc.exe`, `Excel`, `Visio`, `Outlook`, or `Word`.
  - **Listening Sockets:** An `explorer.exe` process with a listening socket on a DCOM port.
  - **DLLs:** `VBE7.dll` and `ScrRun.dll` loaded into the `Visio` process, or unknown DLLs loaded by `Excel` or `Word`.
- **Registry:**
  - **Path:** `HKCU\Software\Microsoft\Office\[version]\Security\accessVBOM`
  - **Value:** Setting this value to 1 allows for the injection and execution of VBA macros without a payload-carrying document.

### Scheduled Tasks (at/schtasks)

**Description:**
Malicious attackers can use the built-in `at` and `schtasks` commands to expand their influence and maintain persistence within a victim environment.

**Syntax:**
- **at Command:**
  ```sh
  at [\\targetIP] [HH:MM][A|P] [command]
  ```
- **schtasks Command:**
  ```sh
  schtasks /create /tn [taskname] /s [targetIP] /u [user] /p [password] /sc [frequency] /st [starttime] /sd [startdate] /tr [command]
  ```

**Indicators:**
- **Task Details:**
  - **Folder Path:** `%SystemRoot%\System32\Tasks`
  - **XML Files:** Each task creates an XML file with details such as the author, date, user context, triggers, and execution commands.

### PsExec

**Description:**
PsExec is an administration tool that leverages SMB to remotely execute commands on other systems. While not a native Windows binary, it is provided by Sysinternals. It allows remote execution of programs over an encrypted network connection with the necessary credentials.

**Syntax:**
```sh
psexec \\[targetIP] [-d] [-e] [-u user] [–p password] [command]
```

**Warning:**
- **Service Installation:** By default, the Sysinternals version of PsExec installs itself as a service with the name `PSEXESVC` and writes `psexesvc.exe` to disk.

**Metasploit psexec Module:**
- **Credential Requirement:** Requires a valid credential but can accept a cleartext password or a password hash for pass-the-hash attacks. In the absence of valid credentials, it attempts to log on as Guest.

**Similar Services:**
- **CSExec:** Another tool with similar functionality.