i
.
g
v
A
Figure 5. Cumulative num-
ber of infected devices as
a function of
time (Static,
75m×75m)
Figure 6. Packet loss rate
due to co-channel
interfer-
ence (Static, 75m×75m, 95%
conﬁdence interval)
responses per
Figure 7. Average number
of
inquiry
and average inquiry dura-
tion (Static, 75m×75m)
large variance in worm propagation speed among the sam-
ple runs. The largest T50% is twice as much as the smallest
one. This is because we randomly place the devices in the
area and the initial worm is also randomly chosen. On the
other hand, the propagation curve of the sample run with
the median T50% is very close to the propagation curve that
averages all the sample runs. Among all the sample runs,
T95% has mean 161.35 and standard deviation 37.41; T50%
has mean 80.15 and standard deviation 21.35.
Interference Analysis. Throughout each simulation
run, we also collect the average packet loss rate due to co-
channel interference every 10 seconds. We denote it by
Lp,co . The result with 95% conﬁdence interval is depicted
in Figure 6. We observe the general tread of increasing
packet loss rate due to co-channel interference; this is be-
cause as the number of infected devices grows, interference
among devices also increases. When almost all the devices
in the network are infected, Lp,co reaches its peak at about
27%; after that point, the network enters a relatively stable
state and Lp,co thus becomes steady.
It is interesting to see how much co-channel interfer-
ence slows down worm propagation. In another set of ex-
periments, we do not drop packets when co-channel in-
terference occurs. Simulation results tell us that without
packet losses due to co-channel interference, T95% has
mean 119.10 and standard deviation 20.28; T50% has mean
67.06 and standard deviation 14.85. Hence, for the 95% in-
fection coverage, co-channel interference slows down worm
propagation by about 36%, and for the 50% infection cover-
age, co-channel interference leads to about 20% slowdown
in spreading speed.
Phase Analysis. To gain further understanding on Blue-
tooth worm propagation, we analyze the three major phases
in a worm infection cycle: searching for nearby devices, es-
tablishing a connection to a particular device, and replicat-
ing worm code onto a victim device. Figure 7 presents the
average number of responses received in an inquiry process.
We observe that as more devices are infected, fewer devices
respond to those infected devices searching victims in their
vicinities. This observation still holds even when we dis-
able packet losses due to co-channel interference. Further
examination on the experimental results reveals that among
all the devices that do not respond to inquiries, most of them
have already been infected. This occurs when they also en-
gage in searching nearby devices or infecting a new vic-
tim. As more devices in the network are infected, it is more
likely that an infected device is surrounded by others that
are also searching for new victims.
This seems helpful in accelerating worm propagation be-
cause those devices that do not respond have already been
infected and failing to ﬁnd them saves time from establish-
ing connections to them and then probing them. These sav-
ings, however, may be offset by the increasing inquiry du-
rations when more devices are infected.
In Figure 7, we
also depict how the average inquiry duration evolves in the
simulation. It is clear that, when the number of infected de-
vices increases, the time needed to ﬁnish an inquiry grows
dramatically towards its upper bound Tinq (which is 10.24
seconds in the baseline worm model). At the beginning of
the simulation, because most of the devices are not infected,
a device scanning nearby devices can receive up to Ninq
(which is 7 in the baseline worm model) responses much
earlier before Tinq time units elapse. Hence, during this pe-
riod, an infected device is able to ﬁnish the inquiry process
quickly. As the number of infected devices increases, some
of them do not respond to inquiries launched by nearby de-
vices, as we explained above. Many inquiries are thus ﬁn-
ished only when their associated timers expire after Tinq
time units. This results that average inquiry duration ap-
proaches to Tinq with increasing saturation of infected de-
vices in the network.
Figure 8 describes the results on connection establishing
attempts per 10 seconds. Not surprisingly, both successful
and failed attempts at establishing connections to infected
devices increase with the growing number of infected de-
vices in the network. Furthermore, establishing a connec-
tion to an uninfected device seldom fails. A notable obser-
vation from the graph is that among attempts at connecting
Proceedings of the 22nd Annual Computer Security Applications Conference (ACSAC'06)0-7695-2716-7/06 $20.00  © 2006to infected devices, failed ones outnumber successful ones
almost by 100% after about 25 seconds since the initial in-
fection. Moreover, Figure 9 tells us that as the network is
saturated with Bluetooth worm, a successful connection es-
tablishing process takes about 2.0 seconds.
In Figure 9, we also present the average amount of time
spent on replicating the worm code. If there is no box dur-
ing a time period, it indicates that no worm replication oc-
curs. Further examination reveals that the duration of worm
code replication is severely impacted by the co-channel in-
terference. If we disable packet losses due to co-channel
interference, the durations have very small variance.
5.2 Results for Mobile Devices
Propagation curve. We simulate the same network in
Section 5.1 for 700 seconds except that nodes are not sta-
tionary. Figure 10 presents the cumulative numbers of in-
fected devices as a function of simulation time in several
sample runs and the propagation curve that is averaged over
all the sample runs. The sample runs shown in this graph
are selected in the same way as in Figure 5. The variance
among the sample runs is still large, which is similar to the
observation we made from the static case. The largest T50%
is almost twice as much as the smallest one. A close exam-
ination on the graph further tells us that the shapes of these
curves are actually quite similar, but the differences in the
propagation speeds at their early phases are noticeable. This
suggests that the propagation speed of the Bluetooth worm
in a mobile network is signiﬁcantly impacted by how fast it
spreads itself shortly after it is released.
From the simulation results, T95% has mean 307.76 and
standard deviation 38.61; T50% has mean 150.67 and stan-
dard deviation 35.04. Compared with the worm propaga-
tion in the static network, T95% has increased by 90.7%
and T95% has increased by 86.7%. Here, we do not intend
to make a hasty conclusion that mobility must lead to slow-
down in worm propagation. Imagine a situation in which a
static network consists of several disjoint “islands” between
which there is no communication path. In this network, in-
fecting a device in one island can only lead to worm infec-
tions in that particular island but devices in the other islands
will never be infected. But if mobility is introduced, devices
from different islands can be mixed and it is possible that all
devices are eventually infected.
Investigating how mobility models affect Bluetooth
worm propagation is out of the scope of this paper. Here,
provided the observation that mobility can slow down Blue-
tooth worm propagation, we are thus motivated to expose
the characteristics inherent in the Bluetooth protocol that
leads to it. The ﬁndings can gain us more insights into the
dynamics of Bluetooth worm propagation. If an analytical
model is necessary, they can also provide a guideline on
deciding what details in the Bluetooth protocol should be
captured. In this regard, our work differs from some earlier
work [15] that attempts to build an analytical model directly
without taking the MAC/PHY properties into consideration.
Interference Analysis. Figure 11 illustrates the packet
loss rate due to co-channel interference. During the ﬁrst 50
seconds, as the number of infected devices increases, packet
loss rate due to co-channel interference ramps up to about
27%. Thereafter, the packet loss rate due to co-channel in-
terference ﬂuctuates around 27%. Comparing this graph
with Figure 6, we notice that as most of the devices are
infected, the average packet loss rates due to co-channel
interference are similar to those in the static network. To
examine how co-channel interference slows down worm
propagation, we disable packet losses due to co-channel in-
terference in the simulation. The results show that T95%
has mean 215.63 and standard deviation 34.80; T50% has
mean 130.09 and standard deviation 38.25. Hence, for
the 95% infection coverage, co-channel interference slows
down worm propagation by about 43%, and for the 50%
infection coverage, co-channel interference leads to about
16% slowdown in spreading speed.
We, however, expect that the impact of co-channel in-
terference on worm propagation speed is a function of de-
vice density in the network. It is obvious that denser de-
vices lead to more congestion in communication channels
and thus lower propagation speed. This is conﬁrmed by
some other simulation results. Use the same network in
the 150m×150m area as an example. Co-channel interfer-
ence causes only 9% slowdown in 95% infection coverage
and 3% slowdown in 50% infection coverage. Hence, the
worm propagation slowdown due to co-channel interference
is much smaller than that in the 75m×75m case.
Phase Analysis. We plot the average number of re-
sponses per inquiry and the average inquiry duration in Fig-
ure 12. We can make similar observations as from Figure
7: as the network has more infected devices, the average
number of responses per each inquiry decreases, and corre-
spondingly, the average inquiry duration approaches to the
inquiry timeout value; as the majority of the devices are in-
fected, both measures become relatively steady.
Figure 13 shows the results on connection establishing
attempts in the mobile Bluetooth network. Comparing it
with Figure 8, we notice that in the mobile network connec-
tion establishing attempts fail more frequently. We men-
tioned that the proportion of failed attempts at establishing
connections to already infected devices in the static network
is about 2/3. By contrast, in the mobile network this pro-
portion reaches 7/8. Moreover, in the mobile network the
number of failed attempts at building connections to un-
infected devices is also larger than that in the static net-
work. All these observations suggest that device mobility
increases the difﬁculty of setting up connections between
two devices, thus making it harder for worm propagation.
Proceedings of the 22nd Annual Computer Security Applications Conference (ACSAC'06)0-7695-2716-7/06 $20.00  © 2006s
t
p
m
e
t
t
a
g
n
h
s
i
i
l
b
a
t
s
e
n
o
i
t
c
e
n
n
o
c
n
o
s
t
l
u
s
e
R
 140
 120
 100
 80
 60
 40
 20
 0
 0
succeed, infected
succeed, uninfected
fail, infected
fail, uninfected
 50
 100
 150
 200
 250
 300
Simulation time (sec)
n
o
i
t
a
r
u
D
 3
 2.5
 2
 1.5
 1
 0.5
 0
 0
worm replication
connection establishment
 50
 100
 150
 200
 250
 300
Simulation time (sec)
i
s
e
c
v
e
d
d
e
t
c
e
f
n
i
f
o
r
e
b
m
u
n
e
v
i
t
l
a
u
m
u
C
 200
 180
 160
 140
 120
 100
 80
 60
 40
 20
 0
 0
min
max
median
average
 100
 200
 300
 400
 500
 600
 700
Simulation time (sec)
Figure 8. Results on suc-
cessful and failed connec-
tion establishing attempts
(Static, 75m×75m)
Figure 9. Average duration
of connection establishment
and worm replication (Static,
75m×75m)
Figure 10. Cumulative num-
ber of infected devices as
a function of time (Mobile,
75m×75m)
e
c
n
e
r
e
f
r
e
t
n
i
l
e
n
n
a
h
c
-
o
c
o
t
e
u
d
t
e
a
r
s
s
o
l
t
e
k
c
a
P
 0.35
 0.3
 0.25
 0.2
 0.15
 0.1
 0.05
 0
 0
 100
 200
 300
 400
 500
 600
 700
Simulation time (second)
s
e
s
n
o
p
s
e
r
y
r
i
u
q
n
i
f
o
r
e
b
m
u
n
.
g
v
A
 8
 7
 6
 5
 4
 3
 2
 1
 0
#inquiry responses
inquiry duration
 0
 100
 200
 300
 400
 500
 600
Simulation time (sec)
 11
 10
 9
 8
 7
 6
 5
 4
 3
 2
 1
 0
 700
)
c
e
s
(
n
o
i
t
a
r
u
d