\-mnobitfield
\-mrtd
\-mshort
\-msoft\-float
.Sp
.I VAX 选项
.br
\-mg
\-mgnu
\-munix
.Sp
.I SPARC 选项
.br
\-mepilogue
\-mfpu
\-mhard\-float
\-mno\-fpu
\-mno\-epilogue
\-msoft\-float
\-msparclite
\-mv8
\-msupersparc
\-mcypress
.Sp
.I Convex 选项
.br
\-margcount
\-mc1
\-mc2
\-mnoargcount
.Sp
.I AMD29K 选项
.br
\-m29000
\-m29050
\-mbw
\-mdw
\-mkernel\-registers
\-mlarge
\-mnbw
\-mnodw
\-msmall
\-mstack\-check
\-muser\-registers
.Sp
.I M88K 选项
.br
\-m88000
\-m88100
\-m88110
\-mbig\-pic
\-mcheck\-zero\-division
\-mhandle\-large\-shift
\-midentify\-revision
\-mno\-check\-zero\-division
\-mno\-ocs\-debug\-info
\-mno\-ocs\-frame\-position
\-mno\-optimize\-arg\-area
\-mno\-serialize\-volatile
\-mno\-underscores
\-mocs\-debug\-info
\-mocs\-frame\-position
\-moptimize\-arg\-area
\-mserialize\-volatile
.RI \-mshort\-data\- num
\-msvr3
\-msvr4
\-mtrap\-large\-shift
\-muse\-div\-instruction
\-mversion\-03.00
\-mwarn\-passed\-structs
.Sp
.I RS6000 选项
.br
\-mfp\-in\-toc
\-mno\-fop\-in\-toc
.Sp
.I RT 选项
.br
\-mcall\-lib\-mul
\-mfp\-arg\-in\-fpregs
\-mfp\-arg\-in\-gregs
\-mfull\-fp\-blocks
\-mhc\-struct\-return
\-min\-line\-mul
\-mminimum\-fp\-blocks
\-mnohc\-struct\-return
.Sp
.I MIPS 选项
.br
\-mcpu=\fIcpu type\fP
\-mips2
\-mips3
\-mint64
\-mlong64
\-mmips\-as
\-mgas
\-mrnames
\-mno\-rnames
\-mgpopt
\-mno\-gpopt
\-mstats
\-mno\-stats
\-mmemcpy
\-mno\-memcpy
\-mno\-mips\-tfile
\-mmips\-tfile
\-msoft\-float
\-mhard\-float
\-mabicalls
\-mno\-abicalls
\-mhalf\-pic
\-mno\-half\-pic
\-G \fInum\fP
\-nocpp
.Sp
.I i386 选项
.br
\-m486
\-mno\-486
\-msoft\-float
\-mno\-fp\-ret\-in\-387
.Sp
.I HPPA 选项
.br
\-mpa\-risc\-1\-0
\-mpa\-risc\-1\-1
\-mkernel
\-mshared\-libs
\-mno\-shared\-libs
\-mlong\-calls
\-mdisable\-fpregs
\-mdisable\-indexing
\-mtrailing\-colon
.Sp
.I i960 选项
.br
\-m\fIcpu-type\fP
\-mnumerics
\-msoft\-float
\-mleaf\-procedures
\-mno\-leaf\-procedures
\-mtail\-call
\-mno\-tail\-call
\-mcomplex\-addr
\-mno\-complex\-addr
\-mcode\-align
\-mno\-code\-align
\-mic\-compat
\-mic2.0\-compat
\-mic3.0\-compat
\-masm\-compat
\-mintel\-asm
\-mstrict\-align
\-mno\-strict\-align
\-mold\-align
\-mno\-old\-align
.Sp
.I DEC Alpha 选项
.br
\-mfp\-regs
\-mno\-fp\-regs
\-mno\-soft\-float
\-msoft\-float
.Sp
.I System V 选项
.br
\-G
\-Qy
\-Qn
.RI \-YP, paths
.RI \-Ym, dir
.TP
.B 代码生成选项 (Code Generation Option)
.RI \-fcall\-saved\- reg
.RI \-fcall\-used\- reg
.RI \-ffixed\- reg
\-finhibit\-size\-directive
\-fnonnull\-objects
\-fno\-common
\-fno\-ident
\-fno\-gnu\-linker
\-fpcc\-struct\-return
\-fpic
\-fPIC
\-freg\-struct\-return
\-fshared\-data
\-fshort\-enums
\-fshort\-double
\-fvolatile
\-fvolatile\-global
\-fverbose\-asm
.ad b
.hy 1
.SH "总体选项 (Overall Option)"
.TP
.BI "\-x " "language"
明确 指出 后面 输入文件 的 语言 为
.I language\c
\& (而不是 从 文件名后缀 得到的 默认选择). 这个选项 应用于 后面 所有的
输入文件, 直到 遇着 下一个 `\|\c
.B \-x\c
\&\|' 选项. \c
.I language\c
\& 的 可选值 有
`\|\c
.B c\c
\&\|', `\|\c
.B objective\-c\c
\&\|', `\|\c
.B c\-header\c
\&\|', `\|\c
.B c++\c
\&\|',
`\|\c
.B cpp\-output\c
\&\|', `\|\c
.B assembler\c
\&\|', 和 `\|\c
.B assembler\-with\-cpp\c
\&\|'.
.TP
.B \-x none
关闭 任何 对 语种 的 明确说明, 因此 依据 文件名后缀 处理 后面 的 文件
(就象是 从未 使用过 `\|\c
.B \-x\c
\&\|'
选项).
.PP
如果 只操作 四个阶段 (预处理, 编译, 汇编, 连接) 中的 一部分,
可以 使用
`\|\c
.B \-x\c
\&\|' 选项 (或 文件名后缀) 告诉 \c
.B gcc\c
\& 从 哪里 开始, 用 `\|\c
.B \-c\c
\&\|', `\|\c
.B \-S\c
\&\|', 或 `\|\c
.B \-E\c
\&\|' 选项 告诉
.B gcc\c
\& 到 哪里 结束. 注意, 某些 选项组合 (例如,
`\|\c
.B \-x cpp\-output \-E\c
\&\|') 使 \c
.B gcc\c
\& 不作 任何事情.
.TP
.B \-c
编译 或 汇编 源文件, 但是 不作 连接. 编译器 输出 对应于 源文件 的 目标文件.
.Sp
缺省情况下, GCC 通过 用 `\|\c
.B .o\c
\&\|' 替换 源文件名后缀 `\|\c
.B .c\c
\&\|', `\|\c
.B .i\c
\&\|', `\|\c
.B .s\c
\&\|', 等等, 产生 目标文件名. 可以 使用
.B \-o\c
\& 选项 选择 其他 名字.
.Sp
GCC 忽略
.B \-c
选项 后面 任何 无法 识别 的 输入文件 (他们 不需要 编译 或 汇编).
.TP
.B \-S
编译 后 即停止, 不进行 汇编. 对于 每个 输入的 非汇编语言 文件, 
输出文件 是 汇编语言 文件.
.Sp
缺省情况下, GCC 通过 用 `\|\c
.B .o\c
\&\|' 替换 源文件名后缀 `\|\c
.B .c\c
\&\|', `\|\c
.B .i\c
\&\|', 等等, 产生 目标文件名. 可以 使用
.B \-o\c
\& 选项 选择 其他 名字.
.Sp
GCC 忽略 任何 不需要 编译 的 输入文件.
.TP
.B \-E
预处理 后 即停止, 不进行 编译. 预处理后的 代码 送往 标准输出.
.Sp
GCC 忽略 任何 不需要 预处理 的 输入文件.
.TP
.BI "\-o " file
指定 输出文件 为 \c
.I file\c
\&.  该选项 不在乎 GCC 产生 什么 输出, 无论是 可执行文件, 目标文件,
汇编文件 还是 预处理后的 C 代码.
.Sp
由于 只能 指定 一个 输出文件, 因此 编译 多个 输入文件 时, 使用 `\|\c
.B \-o\c
\&\|' 选项 没有 意义, 除非 输出 一个 可执行文件.
.Sp
如果 没有 使用 `\|\c
.B \-o\c
\&\|' 选项, 默认的 输出 结果 是: 可执行文件 为 `\|\c
.B a.out\c
\&\|',  `\|\c
.I source\c