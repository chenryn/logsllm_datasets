### 服务在生态系统中的可扩展性

确保开发进度能够跟上业务增长是至关重要的。在每个 Sprint 期间，功能开发人员会在一天内（即“系统所有者日”）获得专门的时间窗口来维护、升级和改进其负责的服务。如果需要支持，这些开发人员可以向团队寻求帮助。这一安排有助于减轻运维团队的压力，并且由于许多后端开发人员已经参与了服务的维护工作，因此这并不是一个有争议的变化。

#### 运维所有者角色与开发所有者角色

引入开发所有者角色使得基本维护责任得以分散到公司中最大的工程师群体中。然而，运营部门仍需对出现的问题承担最终责任。尽管如此，由于关键服务比其他服务更需要特别的关注，我们为每个重要服务分配了一名运维所有者。这样即使每个服务都有开发所有者，最关键的服务也同时拥有两位负责人，从而确保至少两个人专注于该服务的健康状况。

#### 核心服务正规化

鉴于我们的后端服务之间紧密相连，大多数事件通常会影响多个服务。为了缓解这种情况，特别是在紧急情况下做出决策的压力，我们定义了一个服务层次结构，明确了哪些服务至关重要、哪些服务较为重要以及哪些可以在资源允许时再处理。核心服务被定义为从用户登录到客户端音频播放过程中涉及的所有关键功能相关的后端服务。此外，基础设施系统如边界路由器、后端网络交换机、防火墙及DNS也被视为关键组件。

通过明确这些优先级，夜间工作的压力得到了有效缓解，并使团队能够在面对抉择时更加从容不迫。

### 部署时间的选择

为了避免非工作时间内进行敏感部署可能带来的风险，我们规定所有此类操作应在工作时间内完成，以便更多人能在出现问题时提供协助。对于网络基础设施的变更，则选择在大多数人休息时执行。此外，鼓励功能团队避免在周五部署任何更新，以确保周末能够得到充分休息。

### 轮值与警报机制

过去，没有人为夜间轮值负责，也没有自动发送系统故障警报的机制。随着运维团队规模扩大至五人，我们终于能够安装适当的警报系统，解决了长期以来存在的问题。现在，我们实行每周轮班制，当某个成员处于轮值状态时，他/她将全天候待命应对可能出现的问题。不过，只有涉及到作为运维所有者的那些核心系统时，其他成员才会被卷入维修过程。对于非核心系统的事件，则不必立即解决，而是先做初步排查并保持现状直到下一个工作日由专人处理。

### 内部办公室支持

随着公司的快速发展，内部IT系统和支持需求日益增加。为此，Spotify决定将运维团队分为生产运维和内部IT运维两部分，以提高工作效率和服务质量。新的内部IT运维团队将专注于满足新员工入职所需的技术支持和其他日常办公需求。

### 解决剩余首要问题

1. **漫长的提前周期**：尽管已将部分职责转移给了独立的IT支持团队，但我们仍然收到大量来自开发人员关于服务维护等方面的请求。这些请求均以尽力而为的方式处理，导致响应时间较长且满意度不高。
2. **无意的专业化与沟通障碍**：随着时间推移，个别成员可能会成为特定领域的专家，但这种专长往往仅限于个人而非整个团队共享。结果就是知识孤岛的形成以及解决方案缺乏一致性。
3. **频繁中断**：持续不断的干扰使得长期规划和实施变得异常困难。虽然我们正在成长为一个更大的工程团队，但开发团队与生产运维之间的密切合作方式有时反而会阻碍工作效率。

### 引入守门员角色

为了解决上述挑战，我们引入了“守门员”这一新角色。守门员每周轮换一次，负责接收并筛选所有传入请求。根据当天的工作量大小，守门员可以选择独自解决问题或将其分配给最合适的同事。此设置旨在最小化知识孤岛现象，并促进信息在整个团队内的流通。

### 培养更多侦探

SRE工作中最具挑战性和回报的部分之一就是深入调查复杂事件背后的原因。为了扩大这一能力范围，我们开始培训更多开发人员成为“侦探”，通过一系列名为“点击播放”的讲座分享后端架构的知识。如今，这项培训已成为新员工入职流程的一部分，并且面向全体员工提供了简化版课程。

### 关键收获

- 明智地利用部署时间窗口；
- 建立有效的警报和轮值制度；
- 重视教育和技术传播；
- 将生产和IT职能分离以提高效率；
- 设置专门的角色如“守门员”来管理日常工作流。