title:Dismantling Megamos Crypto: Wirelessly Lockpicking a Vehicle Immobilizer
author:Roel Verdult and
Flavio D. Garcia and
Baris Ege
Dismantling Megamos Crypto: Wirelessly Lockpicking a
Vehicle Immobilizer
Roel Verdult
Flavio D. Garcia
Institute for Computing and Information Sciences,
Radboud University Nijmegen, The Netherlands.
School of Computer Science,
University of Birmingham, UK.
PI:EMAIL
PI:EMAIL
Barıs¸ Ege
Institute for Computing and Information Sciences,
Radboud University Nijmegen, The Netherlands.
PI:EMAIL
Abstract
1 Introduction
The Megamos Crypto transponder is used in one of the
most widely deployed electronic vehicle immobilizers.
It is used among others in most Audi, Fiat, Honda, Volk-
swagen and Volvo cars. Such an immobilizer is an anti-
theft device which prevents the engine of the vehicle
from starting when the corresponding transponder is not
present. This transponder is a passive RFID tag which is
embedded in the key of the vehicle.
In this paper we have reverse-engineered all propri-
etary security mechanisms of the transponder, including
the cipher and the authentication protocol which we pub-
lish here in full detail. This article reveals several weak-
nesses in the design of the cipher, the authentication pro-
tocol and also in their implementation. We exploit these
weaknesses in three practical attacks that recover the 96-
bit transponder secret key. These three attacks only re-
quire wireless communication with the system. Our ﬁrst
attack exploits weaknesses in the cipher design and in
the authentication protocol. We show that having ac-
cess to only two eavesdropped authentication traces is
enough to recover the 96-bit secret key with a computa-
tional complexity of 256 cipher ticks (equivalent to 249
encryptions). Our second attack exploits a weakness in
the key-update mechanism of the transponder. This at-
tack recovers the secret key after 3 × 216 authentication
attempts with the transponder and negligible computa-
tional complexity. We have executed this attack in prac-
tice on several vehicles. We were able to recover the key
and start the engine with a transponder emulating device.
Executing this attack from beginning to end takes only 30
minutes. Our third attack exploits the fact that some car
manufacturers set weak cryptographic keys in their vehi-
cles. We propose a time-memory trade-off which recov-
ers such a weak key after a few minutes of computation
on a standard laptop.
Electronic vehicle immobilizers have been very effec-
tive at reducing car theft. Such an immobilizer is an
electronic device that prevents the engine of the vehi-
cle from starting when the corresponding transponder is
not present. This transponder is a low-frequency RFID
chip which is typically embedded in the vehicle’s key.
When the driver starts the vehicle, the car authenticates
the transponder before starting the engine, thus prevent-
ing hot-wiring. In newer vehicles the mechanical igni-
tion key has often been removed and replaced by a start
button, see Figure 1(a).
In such vehicles the immobi-
lizer transponder is the only anti-theft mechanism that
prevents a hijacker from driving away.
A distinction needs to be made between the vehicle
immobilizer and the remotely operated central locking
system. The latter is battery powered, operates at an
ultra-high frequency (UHF), and only activates when the
user pushes a button on the remote to (un)lock the doors
of the vehicle. Figure 1(b) shows a disassembled car key
where it is possible to see the passive Megamos Crypto
transponder and also the battery powered remote of the
central locking system.
The Megamos Crypto transponder is the ﬁrst crypto-
graphic immobilizer transponder manufactured by [19]
and is currently one of the most widely used. The manu-
facturer claims to have sold more than 100 million im-
mobilizer chips including Megamos Crypto transpon-
ders [22]. Figure 2 shows a list of vehicles that use
or have used Megamos Crypto at least for some ver-
sion/year. As it can be seen from this list, many Audi,
Fiat, Honda, Volkswagen and Volvo cars used Megamos
Crypto transponders at the time of this research (fall
2012).
The transponder uses a 96-bit secret key and a propri-
etary cipher in order to authenticate to the vehicle. Fur-
thermore, a 32-bit PIN code is needed in order to be able
to write on the memory of the transponder. The con-
USENIX Association  
22nd USENIX Security Symposium  703
1
(a) Keyless ignition with start button
(b) Megamos Crypto transponder in a car key
Figure 1: Megamos Crypto integration in vehicular systems
crete details regarding the cipher design and authentica-
tion protocol are kept secret by the manufacturer and lit-
tle is currently known about them.
From our collaboration with the local police it was
made clear to us that sometimes cars are being stolen
and nobody can explain how. They strongly suspect the
use of so-called ‘car diagnostic’ devices. Such a device
uses all kind of custom and proprietary techniques to by-
pass the immobilizer and start a car without a genuine
key. This motivated us to evaluate the security of vehi-
cle immobilizer transponders. There are known attacks
for three of the four widely used immobilizer transpon-
ders, namely DST40, Keeloq and Hitag2. Although, at
the time of this research, little was known about the se-
curity of the Megamos Crypto transponder.
1.1 Our contribution
In this paper we have fully reverse-engineered all crypto-
graphic mechanisms of Megamos Crypto which we pub-
lish here in full detail. For this we used IDA Pro1 to de-
compile the software package that comes with the Tango
Programmer2.
Furthermore, we have identiﬁed several weaknesses in
Megamos Crypto which we exploit in three attacks. Our
ﬁrst attack consists of a cryptanalysis of the cipher and
the authentication protocol. Our second and third attack
not only look at the cipher but also at the way in which it
is implemented and poorly conﬁgured by the automotive
industry.
Our ﬁrst attack, which comprises all vehicles using
Megamos Crypto, exploits the following weaknesses.
• The transponder lacks a pseudo-random number
generator, which makes the authentication protocol
vulnerable to replay attacks.
1https://www.hex-rays.com/products/ida/
2http://www.scorpio-lk.com
Make
Alfa Romeo
Audi
Buick
Cadillac
Chevrolet
Citro¨en
Daewoo
DAF
Ferrari
Fiat
Holden
Honda
Isuzu
Iveco
Kia
Lancia
Maserati
Opel
Pontiac
Porsche
Seat
Skoda
Ssangyong
Tagaz
Volkswagen
Volvo
Models
147, 156, GT
A1, A2, A3, A4 (2000), A6, A8, Allroad, Cabrio, Coup´e,
Q7, S2, S3, S4, S6, S8, TT (2000)
Regal
CTS-V, SRX
Aveo, Kalos, Matiz, Nubira, Spark, Evanda, Tacuma
Jumper (2008), Relay
Kalos, Lanos, Leganza, Matiz, Nubira, Tacuma
CF, LF, XF
California, 612 Schaglietti
Albea, Dobl`o, Idea, Mille, Multipla, Palio, Punto (2002),
Seicento, Siena, Stilo, Ducato (2004)
Barina, Frontera
Accord, Civic, CR-V, FR-V, HR-V, Insight, Jazz (2002),
Legend, Logo, S2000, Shuttle, Stream
Rodeo
Eurocargo, Daily
Carnival, Clarus, Pride, Shuma, Sportage
Lybra, Musa, Thesis, Y
Quattroporte
Frontera
G3
911, 968, Boxster
Altea, C´ordoba, Ibiza, Leon, Toledo
Fabia (2011), Felicia, Octavia, Roomster, Super, Yeti
Korando, Musso, Rexton
Road Partner
Amarok, Beetle, Bora, Caddy, Crafter, Cross Golf,
Dasher, Eos, Fox, Gol, Golf (2006, 2008), Individual,
Jetta, Multivan, New Beetle, Parati, Polo, Quantum,
Rabbit, Saveiro, Santana, Scirocco (2011), Touran,
Tiguan, Voyage, Passat (1998, 2005), Transporter
C30, S40 (2005), S60, S80, V50, V70, XC70, XC90,
XC94
Figure 2: Vehicles that used Megamos Crypto for some
version/year [39]. Boldface and year indicate speciﬁc
vehicles we experimented with.
• The internal state of the cipher consists of only 56
bits, which is much smaller than the 96-bit secret
key.
• The cipher state successor function can be inverted,
given an internal state and the corresponding bit of
cipher-text it is possible to compute the predecessor
state.
• The last steps of
the authentication protocol
704  22nd USENIX Security Symposium 
USENIX Association
2
provides and adversary with 15-bits of known-
plaintext.
We present two versions of this attack. First we introduce
a simple (but more computationally intensive) attack that
recovers the secret key of the transponder with a compu-
tational complexity of 256 encryptions. Then we opti-
mize this attack, reducing its computational complexity
to 249 by using a time-memory trade-off. For this trade-
off, a 12 terabyte lookup table needs to be pre-computed.
This optimized version of the attack takes advantage of
the fact that some of the cipher components can be run
quite autonomously.
Our second attack exploits the following weaknesses.
• Currently, the memory of many Megamos Crypto
transponders in the ﬁeld is either unlocked or locked
with a publicly known default PIN code [17]. This
means that anybody has write access to the memory
of the transponder. This also holds for the secret
key bits.
• The 96-bit secret key is written to the transponder
in blocks of 16 bits instead of being an atomic op-
eration.
This attack recovers the 96-bit secret key of such a
transponder within 30 minutes. This time is necessary to
perform 3 × 216 authentication attempts to the transpon-
der and then recover the key with negligible computa-
tional complexity. We have executed this attack in prac-
tice and recovered the secret key of several cars from var-
ious makes and models. Having recovered the key we
were able to emulate the transponder and start the vehi-
cles.
Our third attack is based on the following observation.
Many of the keys that we recovered using the previous
attack had very low entropy and exhibit a well deﬁned
pattern, i.e., the ﬁrst 32 bits of the key are all zeros. This
attack consists of a time-memory trade-off that exploits
this weakness to recover the secret key, within a few min-
utes, from two authentication traces. This attack requires
storage of a 1.5 terabyte rainbow table.
We propose a simple but effective mitigating measure
against our second attack. This only involves setting a
few bits on the memory of the transponder and can be
done by anyone (even the car owners themselves) with a
compatible RFID reader.
Finally, we have developed an open source library for
custom and proprietary RFID communication schemes
that operate at an frequency of 125 kHz. We used this
library to provide eavesdropping, emulation and reader
support for Megamos Crypto transponders with the Prox-
mark III device3. The reader functionality allows the
3http://www.proxmark.org/
user to send simple commands like read and write to the
transponder. In particular, this library can be used to set
the memory lock bit and a random PIN code as a mitiga-
tion for our second attack, as described in Section 8.
1.2 Related work
In the last decades, semiconductor companies introduced
several proprietary algorithms speciﬁcally for immobi-
lizer security. Their security often depends on the se-
crecy of the algorithm. When their inner-workings are
uncovered, it is often only a matter of weeks before the
ﬁrst attack is published. There are several examples in
the literature that address the insecurity of proprietary
algorithms. The most prominent ones are those break-
ing A5/1 [31], DECT [45, 47], GMR [18], WEP [24]
and also many RFID systems like the MIFARE Clas-
sic [16, 26, 29, 46], CryptoRF [30] and iClass [27, 28].
Besides Megamos Crypto, there are only three other
major immobilizer products being used. The DST
transponder which was reverse-engineered and attacked
by Bono et.al. in [9]; KeeLoq was ﬁrst attacked by Bog-
danov in [6] and later this attack was improved in [12,
36, 38]; Hitag2 was anonymously published in [60] and
later attacked in [8, 13, 35, 52, 53, 57, 58].
With respect to vehicle security, Koscher et. al. at-
tracted a lot of attention from the scientiﬁc community
when they demonstrated how to compromise the board
computer of a modern car [11, 40]. They were able to
remotely exploit and control many car features such as
tracking the car via GPS and adjust the speeding of the
car.
In 2011, Francillon et. al. [25] showed that with
fairly standard equipment it is possible to mount a relay-
attack on all keyless-entry systems that are currently de-
ployed in modern cars.
The scientiﬁc community proposed several alterna-
tives [43, 44, 59, 61, 62] to replace the weak proprietary
ciphers and protocols. There are several commercial ve-
hicle immobilizer transponders that makes use of stan-
dard cryptography, like AES [14]. Examples include
the Hitag Pro transponder from NXP Semiconductors
and ATA5795 transponder from Atmel. To the best of
our knowledge, only Atmel made an open protocol de-
sign [1] and published it for scientiﬁc scrutiny. The secu-
rity of their design was analyzed by Tillich et. al. in [54].
2 Technical background
This section brieﬂy describes what a vehicle immobilizer
is and how it is used by the automotive industry. Then we
describe the hardware setup we use for our experiments.
Finally we introduce the notation used throughout the pa-
per.
2.1 Immobilizer
To prevent a hijacker from hot-wiring a vehicle, car man-
ufacturers incorporated an electronic car immobilizer as
USENIX Association  
22nd USENIX Security Symposium  705
3
an extra security mechanism. In some countries, having