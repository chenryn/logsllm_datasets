# 文件系统层次结构与软件包布局规范

## 系统软件包

### 静态文件推荐位置

| 目录 | 用途 |
| --- | --- |
| `/usr/bin` | 应该出现在 `$PATH` 搜索路径中且与体系结构无关的可执行文件。不要将软件包内部使用的可执行文件或非命令行工具（例如守护进程）放到此目录中。因为众多的软件包都使用此目录，所以必须选择独一无二的可执行文件名称，以避免冲突。 |
| `/usr/lib/<arch-id>` | 全局通用的体系结构相关的共享库。因为众多的软件包都使用此目录，所以必须选择独一无二的共享库名称，以避免冲突。 |
| `/usr/lib/<package>` | 发行商提供的该软件包专属的体系结构无关的静态资源（可执行文件、库文件、只读数据）。 |
| `/usr/lib/<arch-id>/<package>` | 发行商提供的体系结构相关的该软件包专属的资源（通常不包括软件包内部使用的可执行文件）。 |
| `/usr/include/<package>` | 该软件包提供的共享库的 C/C++ 头文件。 |

发行商提供的其他静态资源应该存放在 `/usr/share` 目录下，具体的存放位置应该遵守其他的相关规范。

### 运行时数据及配置文件推荐位置

| 目录 | 用途 |
| --- | --- |
| `/etc/<package>` | 特定于该系统的配置文件。如果该目录不存在，那么软件包应该尽可能回退到安全的默认设置，而不应该罢工。可选地，可以设置一个 `tmpfiles.d` (5) 配置文件，以实现在系统启动过程中从 `/usr/share/factory` 目录中复制（"C"指令）或软连接（"L"指令）所需的文件到该目录中。 |
| `/run/<package>` | 软件包的运行时数据。因为该目录会在系统启动过程中被清空，所以软件包必须有权限在此目录中创建子目录及文件。可选地，可以设置一个 `tmpfiles.d` (5) 配置文件，以实现在系统启动过程中自动在此目录中创建所需的子目录及文件。或者在服务单元文件中使用 `RuntimeDirectory=` 指令（详见 `systemd.unit` (5) 手册）以达到上述目的。 |
| `/run/log/<package>` | 软件包的运行时日志。因为该目录会在系统启动过程中被清空，所以软件包必须有权限在此目录中创建子目录及文件。 |
| `/var/cache/<package>` | 软件包的持久缓存。清空该目录必须不影响软件包的正常工作（但软件包可以花费额外的时间重建这些缓存）。软件包必须有权限在此目录中创建子目录及文件。 |
| `/var/lib/<package>` | 软件包的持久专属数据。存放无法明确分类的持久数据。软件包必须有权限在此目录中创建子目录及文件，因为在系统启动时该目录可能为空。可选地，可以设置一个 `tmpfiles.d` (5) 配置文件，以实现在系统启动过程中自动在此目录中创建所需的子目录及文件。 |
| `/var/log/<package>` | 软件包的持久日志数据。软件包必须有权限在此目录中创建子目录及文件，因为在系统启动时该目录可能为空。 |
| `/var/spool/<package>` | 软件包的持久队列数据。软件包必须有权限在此目录中创建子目录及文件，因为在系统启动时该目录可能为空。 |

## 用户软件包

对于专属于特定用户的软件包，其存储在用户家目录中的文件必须严格遵守下面的文件布局规范。注意，当安装属于系统范围的软件包时，应该遵守前面“系统软件包”小节的布局规范。

### 静态文件推荐位置

| 目录 | 用途 |
| --- | --- |
| `~/.local/bin` | 应该出现在 `$PATH` 搜索路径中且与体系结构无关的可执行文件。不要将软件包内部使用的可执行文件或非命令行工具（例如守护进程）放到此目录中。因为众多的软件包都使用此目录，所以必须选择独一无二的可执行文件名称，以避免冲突。 |
| `~/.local/lib/<arch-id>` | 全局通用的体系结构相关的共享库。因为众多的软件包都使用此目录，所以必须选择独一无二的共享库名称，以避免冲突。 |
| `~/.local/lib/<package>` | 发行商提供的该软件包专属的体系结构无关的静态资源（可执行文件、库文件、只读数据）。 |
| `~/.local/lib/<arch-id>/<package>` | 发行商提供的体系结构相关的该软件包专属的资源（通常不包括软件包内部使用的可执行文件）。 |

发行商提供的其他静态资源应该存放在 `~/.local/share` 目录下，具体的存放位置应该遵守其他的相关规范。

### 运行时数据及配置文件推荐位置

| 目录 | 用途 |
| --- | --- |
| `~/.config/<package>` | 特定于该用户的配置文件。如果该目录不存在，那么软件包必须能够安全地回退到默认设置，而不能罢工。 |
| `$XDG_RUNTIME_DIR/<package>` | 特定于该用户的运行时数据。 |
| `~/.cache/<package>` | 软件包的持久缓存。清空该目录必须不影响软件包的正常工作（但软件包可以花费额外的时间重建这些缓存）。软件包必须有权限在此目录中创建子目录及文件。 |

## 参见

- `systemd` (1)
- `hier` (7)
- `systemd-path` (1)
- `systemd-gpt-auto-generator` (8)
- `sysctl.d` (5)
- `tmpfiles.d` (5)
- `pkg-config` (1)
- `systemd.unit` (5)

## 注释

1. **File System Hierarchy**  
   - [FHS 2.3](http://refspecs.linuxfoundation.org/FHS_2.3/fhs-2.3.html)
2. **IEEE Std 1003.1**  
   - [Base Definitions, Section 8.3](http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap08.html#tag_08_03)
3. **XDG Base Directory Specification**  
   - [Latest Version](http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html)
4. **Multiarch Architecture Specifiers (Tuples)**  
   - [Debian Wiki](https://wiki.debian.org/Multiarch/Tuples)
5. **xdg-user-dirs**  
   - [FreeDesktop.org](http://www.freedesktop.org/wiki/Software/xdg-user-dirs/)

---

以上文档经过优化，使其更加清晰、连贯和专业。希望这对你有所帮助！