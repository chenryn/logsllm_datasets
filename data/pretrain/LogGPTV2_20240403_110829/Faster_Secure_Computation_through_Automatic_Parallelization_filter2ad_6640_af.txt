### 优化后的文本

#### 表4：IPP在局域网环境下的评估
- **IPP** 列指定了每个核心用于负载均衡的线程数。
- **总协议运行时间** 以秒为单位测量，并与CGP相比的速度提升（S）在列S中展示。
- 用粗体标记的是IPP带来性能提升的设置。
- 最后一行展示了角色转移协议所花费的时间。

| BioMatch | time[s] | S |
| --- | --- | --- |
| κ = 80 | 2.559 | 1.000 |
|  | 2.624 | 0.975 |
|  | 2.556 | 1.001 |
|  | 1.384 | 1.849 |
|  | 1.524 | 1.679 |
|  | 1.472 | 1.738 |
|  | 1.396 | 1.833 |
|  | 0.795 | 3.219 |
|  | 0.996 | 2.569 |
|  | 0.830 | 3.083 |
|  | 0.818 | 3.128 |
|  | 0.652 | 3.925 |
|  | 0.676 | 3.786 |
|  | 0.629 | 4.068 |
|  | 0.636 | 4.024 |

| MExp | time[s] | S |
| --- | --- | --- |
| κ = 80 | 1.423 | 1.000 |
|  | 1.287 | 1.106 |
|  | 1.285 | 1.107 |
|  | 0.734 | 1.939 |
|  | 0.686 | 2.074 |
|  | 0.699 | 2.036 |
|  | 0.654 | 2.176 |
|  | 0.395 | 3.603 |
|  | 0.426 | 3.340 |
|  | 0.336 | 4.235 |
|  | 0.329 | 4.325 |
|  | 0.298 | 4.775 |
|  | 0.239 | 5.954 |
|  | 0.204 | 6.975 |
|  | 0.233 | 6.107 |

| MVMul | time[s] | S |
| --- | --- | --- |
| κ = 80 | 0.192 | 1.000 |
|  | 0.206 | 0.932 |
|  | 0.208 | 0.923 |
|  | 0.103 | 1.864 |
|  | 0.126 | 1.524 |
|  | 0.132 | 1.455 |
|  | 0.124 | 1.548 |
|  | 0.057 | 3.368 |
|  | 0.084 | 2.286 |
|  | 0.085 | 2.259 |
|  | 0.081 | 2.370 |
|  | 0.045 | 4.267 |
|  | 0.072 | 2.667 |
|  | 0.077 | 2.494 |
|  | 0.070 | 2.743 |

| BioMatch | time[s] | S |
| --- | --- | --- |
| κ = 128 | 2.712 | 1.000 |
|  | 2.781 | 0.975 |
|  | 2.707 | 1.002 |
|  | 1.497 | 1.812 |
|  | 1.535 | 1.767 |
|  | 1.516 | 1.789 |
|  | 1.465 | 1.851 |
|  | 0.937 | 2.894 |
|  | 1.041 | 2.605 |
|  | 0.874 | 3.103 |
|  | 0.856 | 3.168 |
|  | 0.872 | 3.110 |
|  | 0.947 | 2.864 |
|  | 0.861 | 3.150 |
|  | 0.871 | 3.114 |

| MExp | time[s] | S |
| --- | --- | --- |
| κ = 128 | 1.485 | 1.000 |
|  | 1.370 | 1.084 |
|  | 1.386 | 1.071 |
|  | 0.780 | 1.904 |
|  | 0.699 | 2.124 |
|  | 0.726 | 2.045 |
|  | 0.693 | 2.143 |
|  | 0.450 | 3.300 |
|  | 0.452 | 3.285 |
|  | 0.356 | 4.171 |
|  | 0.341 | 4.355 |
|  | 0.364 | 4.080 |
|  | 0.303 | 4.901 |
|  | 0.342 | 4.342 |
|  | 0.337 | 4.407 |

| MVMul | time[s] | S |
| --- | --- | --- |
| κ = 128 | 0.199 | 1.000 |
|  | 0.215 | 0.926 |
|  | 0.218 | 0.913 |
|  | 0.108 | 1.844 |
|  | 0.134 | 1.485 |
|  | 0.137 | 1.453 |
|  | 0.131 | 1.519 |
|  | 0.064 | 3.088 |
|  | 0.087 | 2.287 |
|  | 0.088 | 2.261 |
|  | 0.084 | 2.369 |
|  | 0.048 | 4.189 |
|  | 0.080 | 2.488 |
|  | 0.075 | 2.653 |
|  | 0.073 | 2.726 |

| 角色转移协议 | 时间[s] |
| --- | --- |
|  | 0.231 |
|  | 0.076 |
|  | 0.031 |
|  | 0.257 |
|  | 0.082 |
|  | 0.031 |

### 表5：单核带有限网络能力的IPP评估
- 测量了顺序计算（raw）和使用IPP计算的总协议运行时间。
- 计算了两种测量之间的速度提升（S）。

| BioMatch | raw | IPP | S |
| --- | --- | --- | --- |
| κ = 80 | 45.02±0.49s | 29.94±0.31s | 1.50 |
| κ = 128 | 30.34±0.62s | 19.13±0.47s | 1.58 |

| MExp | raw | IPP | S |
| --- | --- | --- | --- |
| κ = 80 | 24.13±0.21s | 16.05±0.12s | 1.50 |
| κ = 128 | 14.56±0.21s | 11.16±0.32s | 1.30 |

| MVMul | raw | IPP | S |
| --- | --- | --- | --- |
| κ = 80 | 4.83±0.05s | 4.66±0.35s | 1.03 |
| κ = 128 | 4.31±0.23s | 3.84±0.12s | 1.12 |

### 结论和未来工作
基于Yao的混淆电路协议的TPC可以通过自动并行化大大受益。FGP方法对某些电路可能是有效的，但其可扩展性高度依赖于电路的宽度。CGP方法则具有更广泛的适用性。IPP通过实现两个计算方之间的对称工作负载分布，即使在单个物理核心上也能实现加速。总之，本文提出了一种高效、通用且实用的并行化方案。

未来的工作包括研究ParCC的不同并行编译目标，如GMW协议或基于RAM的安全计算框架。此外，将IPP应用于其他协议也是值得进一步研究的方向。

### 致谢
感谢David Evans和所有匿名审稿人提供的非常有帮助和建设性的意见。这项工作得到了德国联邦教育和研究部（BMBF）的支持，以及DFG项目S5和CRC 1119 CROSSING的支持，还得到了Hessian LOEWE卓越计划CASED的支持。

---

### 参考文献
[此处省略详细参考文献列表]

---

希望这些优化使您的文档更加清晰、连贯和专业。如果有任何进一步的需求，请随时告知！