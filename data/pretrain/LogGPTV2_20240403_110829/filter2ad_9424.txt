# Paraluni攻击事件分析
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## 0x1 事件背景
PARALUNI(平行宇宙)是新加坡Parallel
Universe基金会发布的一个基于币安智能链的匿名项目，它重新定义了Defi2.0，以构建元宇宙的金融和经济体系为使命，致力于建立一个无法作恶、公平且自治、普通人都能参与的Def生态。同时Paraluni也为各大前端想构建元宇宙应用场景的企业提供开放接口，任何人都可以借助Paraluni构建自己的元宇宙经济体系。
零时科技区块链安全情报平台监控到消息，北京时间2022年3月13日，Paraluni称遭到黑客攻击，并呼吁投资者将Paraluni投资的全部本金赎回，零时科技安全团队及时对此安全事件进行分析。
## 0x2 攻击者信息
零时科技安全团队通过初步追踪分析，此次攻击发生在Binance链，主要攻击信息如下：
  * 攻击者钱包地址
__
  * 攻击者创建的相关合约地址
主攻击合约：
__
UGT：
__
UBT：
__
  * 攻击交易
__
  * 官方MasterChef合约
__
## 0x3 攻击分析
先来看一下攻击者获利的一笔交易操作：
步骤1：攻击合约在PancakeSwap通过闪电贷借款获取BTCB和WBNB，随后将该资金在ParaPair中添加流动性后获取了约31枚Para-LP。（这里将获取到的Para-LP转移给攻击者部署的UBT合约）
步骤2：攻击者通过官方MasterChef合约添加流动性，添加流动性资金为攻击者控制的Token合约，随后通过可控的Token地址将真实的31枚LP
Token存入，同时发生重入存入了两笔31枚LP Token。
步骤3：获取两次31枚的Para-LP，共62枚Para-LP。
步骤4：将获取的Para-LP兑换为BTCB和WBNB，最终归还闪电贷及手续费，攻击者该笔交易获取318枚BNB和3枚BTC。
至此，攻击者利用此攻击流程，通过对官方masterchef合约中多个池子进行了超过30次攻击共获利约170万美元。
## 0x4 漏洞细节
攻击者通过官方MasterChef合约中depositByAddLiquidity方法添加流动性质押代币，我们跟进该方法：
分析该方法，这里的传参中攻击者传入的pid=9，两个token地址为攻击者控制的UGT和UBT地址，amount均是1。pid为9是目前合约中BTCB/WBNB池子，通过上述代码逻辑可以明确，这里并未判断用户输入的pid和两个token地址是否对应，随后调用_doTransferIn方法进行转账，
转账之后调用depositByAddLiquidityInternal方法，继续跟进：
该方法中判断了池子是否已在该合约添加，这里攻击者传入的是9，是合约存在的池子，判断条件通过，继续进入添加流动性的addLiquidityInternal方法：
该方法会对池子中的LP Token数量进行判断，也就是添加流动性之后的LP Token余额要大于添加流动性之前的余额，由于攻击者添加的LP
Token与这里的池子并不对应，按理说这里的判断不能通过，但这里调用addLiquidty方法添加流动性时攻击者对token地址可控，并且攻击者在攻击开始的阶段就将闪电贷资金兑换后的真实LP
Token转移至自己可控的token地址，所以这里攻击者通过自身可控的transferFrom方法将真实的LP Token存入该合约deposit，如下图：
从deposit方法的最终逻辑可以看出，存入的LP Token是以调用者余额进行存入，也就是攻击者的UBT合约。
回到addLiquidityInternal方法，这里通过了require(vars.newBalance > vars.oldBalance,
“B:E”);的条件判断，并在depositByAddLiquidityInternal方法中继续调用_deposit方法进行了存款操作，这里的存款用户为攻击者主合约。
随后攻击者分别使用攻击者主合约和UBT合约从MasterChef合约中取走两份LP Token资金。
至此此次攻击事件的合约漏洞分析结束，攻击者主要利用合约未对Token地址做严格检查，导致项目使用的Token合约方法可控造成的安全漏洞，同样，对于涉及质押存款的方法未做重入限制。
目前通过对官方masterchef合约初步分析，该合约中的其他添加流动性质押方法也存在该风险，合约中_doTransferIn方法传入的Token也可能引起严重危害，由于攻击者传入Token地址自己可控，所以这里的safeTransferFrom方法逻辑攻击者可控，如下：
## 0x5 总结
通过此次攻击事件来看，攻击成功最重要的因素是Paraluni官方MasterChef合约中没有对Token地址做严格校验和对质押存款的方法未做重入限制，当然前提还是对Token未做严格校验，该风险就算加入了重入限制条件，攻击者依然可以通过Token可控对项目造成威胁，所以对于此类安全事件，零时科技安全团队给出以下建议。
## 0x6 安全建议
  * 建议项目上线前进行安全审计；
  * 建议对合约传参的访问控制问题进行严格判断；
  * 建议对于涉及质押存款的方法未做重入限制。