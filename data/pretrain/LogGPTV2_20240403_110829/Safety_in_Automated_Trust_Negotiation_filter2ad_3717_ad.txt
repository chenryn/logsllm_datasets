able attributes.
Deﬁnition 3.4. Credential–Combination Hiding. A negotiation strategy
is credential-combination-hiding safe if for every pair of conﬁgura-
strat
tions G =(cid:4)K , E, Ack, AC(cid:5) and G(cid:3) =(cid:4)K , E(cid:3), Ack, AC(cid:5), and every adversary M ,
if releaseable(E, UnAcks(M, G)) = releaseable(E(cid:3), UnAcks(M, G)), then G and
G(cid:3) are indistinguishable under strat by M .
One aspect of Deﬁnition 3.4 that differs from prior notions of safety is that
it is concerned only with the attributes M has, and not with the ones M proves
in the negotiation. This simpliﬁes matters and is entirely justiﬁed because our
objective is to ensure that information ﬂow is authorized, not that it is matched
by a compensatory ﬂow in the reverse direction. For instance, if a negotiator
has cached (valid) opponent credentials from a previous negotiation, there is
no need to require those credentials to be retransmitted.
Nevertheless, since a safe strategy must function correctly with any adver-
sary M , M must in general prove its attributes before N reveals attributes
that depend on them. If M ’s attributes and N’s attributes are mutually in-
terdependent, then it may be there is no safe strategy that would allow these
attributes to be shown, even though N and M both possess the attributes re-
quired to permit them each to reveal the attributes in question. The strategies
we discuss in this paper are unable to support using attributes that partici-
pate in dependence cycles with attributes of the adversary. In many cases such
cyclic dependences can be handled by using cryptographic protocols, such as
those harnessed for use in ATN in Li et al. [2005]. Such protocols can, for in-
stance, transmit messages that provide positive proof to an adversary that the
negotiator has a certain attribute just in case the adversary has the attributes
required to be eligible for that information. However, these are nondeterminis-
tic protocols. Thus, to extend our notion of safety to support such protocols, we
ACM Transactions on Information and System Security, Vol. 9, No. 3, August 2006.
366
•
W. H. Winsborough and N. Li
would need to generalize our notion of indistinguishability, as outlined above
in our discussion of that topic. It remains open whether cryptographic pro-
tocols can “break all cycles,” that is, can provide a safe strategy that always
enables negotiators to reveal attributes that the adversary is authorized to
know.
Deﬁnition 3.4 does not protect against every possible form of information
leakage during ATN, especially when an attacker has certain knowledge about
the distribution of credentials. For example, the attacker may know that entities
having a credential e are likely to have another credential that proves the
possession of a sensitive attribute that is not in T (e). Similarly, an attacker
may know that entities having a credential e are less likely to possess certain
sensitive attributes. We speculate that our model could be extended to address
this threats. For instance, one approach to remedy the threat identiﬁed above is
to replace T (e) in Deﬁnition 3.3 by a larger set, T (e). Whereas T (e) is the set of
attributes proven by credential e, T (e) is the set of attributes that e suggests the
principal either has or does not have. This will enlarge the set of unreleasable
credentials and strengthen the resulting safety property.
Deﬁnition 3.4 also does not protect against inferences that take advantage
of possible relationships between two principals’ attributes. For example, an
attacker may know that if one principal K1 has a sensitive attribute, then
another principal K2 is also likely to have the attribute. The attacker may
then learn K2’s attribute by negotiating with K1. While such inferences can
be stopped if K1 and K2 use the same policies for protecting their attributes,
Deﬁnition 3.4 does not by itself prevent such inferences being made.
3.3 Safety of The Eager Strategy
Next, we discuss the eager strategy and observe that it satisﬁes Deﬁnition 3.4.
A negotiator using the eager strategy sends all credentials as soon as the at-
tributes they deﬁne have their ack policies satisﬁed by credentials received
from the opponent. The two negotiators take turns exchanging all credentials
that are unlocked, i.e., that deﬁne attributes whose ack policies have been sat-
isﬁed by credentials disclosed previously by the opponent. In the ﬁrst transmis-
sion, the access mediator sends all credentials deﬁning unprotected attributes.
The requester then sends all credentials deﬁning unprotected attributes or
attributes whose ack policies were satisﬁed in the ﬁrst transmission. The ne-
gotiators continue exchanging credentials in this way until either the policy
governing the desired resource has been satisﬁed by credentials sent by the re-
quester, in which case the negotiation succeeds, or until a credential exchange
occurs in which no new credentials become unlocked, in which case the negoti-
ation fails.
Deﬁnition 3.5 (Eager Strategy). The eager strategy is presented in Figure 1.
It uses a state of the form (cid:4)G, opCreds, locCreds, K O, ρ(cid:5), in which G is the
negotiator’s conﬁguration, opCreds and locCreds are the sets of credentials
disclosed thus far by the opponent and the negotiator, respectively, K O is the
opponent’s public key, and ρ is a resource if the negotiator is an access mediator
and null otherwise.
ACM Transactions on Information and System Security, Vol. 9, No. 3, August 2006.
Safety in Automated Trust Negotiation
•
367
Fig. 1. The eager strategy. FE denotes the set of ﬁnite subsets of E.
THEOREM 3.6. The eager strategy is credential-combination-hiding safe.
The proof is found in Appendix A.
Example 4.
If Alice and Bob have the conﬁgurations shown in Example 3,
and each one negotiates with SwampLand.com, which has no credentials, both
negotiations start with SwampLand sending an empty message and then im-
mediately fail, with no further messages ﬂowing. For the sake of illustration, if
we assume that K A = K B, AckA = AckB and ACA = ACB, then SwampLand.com
obtains no basis on which to distinguish Alice from Bob.1
It should be noted that the eager strategy does not take advantage of the
distinguishing characteristic of ack policies, viz., that they can be deﬁned for
attributes the negotiator does not possess and, therefore, can be revealed with-
out disclosing whether the negotiator has the attribute. In Section 4, we present
and prove safe a strategy that takes advantage of the fact that ack policies can
be safely disclosed, enabling the strategy to use them to focus the exchange on
relevant credentials.
3.4 Weaker Notions of Safety
In this section we discuss two weaker notions of safety that seem natural
to consider, one of which in particular seemed quite appealing to us at ﬁrst.
However, as we explain at the end of this section, it turns out that both are
inadequate. These two alternative notions of safety are strictly weaker than
1In practice, Alice and Bob would not have the same key; the point is that SwampLand.com cannot
distinguish someone who has the low-income attribute from someone who does not.
ACM Transactions on Information and System Security, Vol. 9, No. 3, August 2006.
368
•
W. H. Winsborough and N. Li
credential-combination hiding; in this section we prove their logical relation-
ship to credential-combination hiding and to one another.
A strategy that violates Deﬁnition 3.4 may not actually enable an adversary
to make any inferences about the negotiator’s unacknowledgeable attributes. A
violation means that there exist conﬁgurations G and G(cid:3) = (cid:4)K G, E(cid:3), AckG, ACG(cid:5)
and an adversary M such that the releasable credentials of G and G(cid:3) are the
same, but G and G(cid:3) can be distinguished by M . This means that M can infer
that certain combinations of unreleasable credentials are not candidates for
being the exact set held by G; however, it does not ensure M can rule out any
combination of unacknowledgeable attributes.
For example, suppose that low-income status can also be proved by multiple
credential issued by the IRS. A strategy that violates Deﬁnition 3.4 may enable
an adversary to rule out a negotiator’s having one of these credentials, without
enabling the adversary to infer that a negotiator does not have the low-income
attribute.
Thus, it seems natural to consider a weaker notion of safety in which we en-
sure only that M cannot rule out any combination of attributes. The goal of the
following weaker safety notion, which we call attribute–combination hiding, is
to preclude negotiation, enabling the adversary to make any inferences that
certain attribute combinations are impossible. However, when there are inter-
dependencies among attributes, anyone familiar with the credential scheme can
rule out certain attribute combinations. For instance, if every credential prov-
ing one attribute t1 also proves another attribute t2, it is impossible to have
t1 but not t2. Therefore, the deﬁnition only precludes the adversary inferring
things he does not already know.
is attribute–combination–hiding safe
Deﬁnition 3.7 (Attribute–Combination Hiding). A negotiation strategy
every conﬁguration
strat
G =(cid:4)K , E, Ack, AC(cid:5), for every subset U of T , and for every expressible
subset U(cid:3) of U , there exists a conﬁguration G(cid:3) =(cid:4)K , E(cid:3), Ack, AC(cid:5), such that (a)
T (E(cid:3)) ∩ U = U(cid:3) and (b) for every adversary M such that UnAcks(G, M ) ⊇ U , G
and G(cid:3) are indistinguishable under strat by M .
Given a set U of attributes, U(cid:3) is an expressible subset of U if there exists
a set of credentials E0 such that T (E0) ∩ U = U(cid:3). By “exists” here, we mean
hypothetically; the credentials in E0 need never actually have been issued.
if
for
Deﬁnition 3.7 says that if N uses strategy strat, then from M ’s point of view,
N could have any expressible combination of attributes in U . If the deﬁnition
is violated, then there is a conﬁguration G, a set of attributes U , and a U(cid:3) ⊆ U ,
such that there exists a credential set E(cid:3) that agrees with U(cid:3) on U (i.e., T (E(cid:3))∩
U = U(cid:3)), and every such E(cid:3) is distinguishable from EG by some adversary M
with UnAcks(G, M ) ⊆ U . In other words, M can determine that T (E(cid:3))∩U (cid:10)= U(cid:3),
thereby ruling out U(cid:3) as a candidate for the combination of unacknowledgeable
attributes held by N.
Notice the importance in Deﬁnition 3.7 of ﬁxing U as a lower bound on
UnAcks(G, M ) before picking a G(cid:3) that works for all M satisfying the bound. It
would not be adequate to ﬁnd a different G(cid:3) for each M , because then colluding
attackers could pool their knowledge to rule out the various G(cid:3)s.
ACM Transactions on Information and System Security, Vol. 9, No. 3, August 2006.
Safety in Automated Trust Negotiation
•
369
One might object that attribute–combination hiding is still too strong. In
our running example, Bob could use a strategy that violates this requirement
without enabling Swampland to determine whether Bob has the low-income
attribute. Violation means only that Swampland can rule out Bob having a
certain combination of attributes. For instance, Swampland might be able to
infer that Bob is not both low-income and over 65 years old without being able
to determine which attribute Bob does not have.
The following still weaker notion, which we call attribute hiding, only pre-
vents the adversary learning whether speciﬁc attributes are satisﬁed. It says
that an adversary cannot determine through ATN whether or not the negotiator
has any given unacknowledgeable attribute.
Deﬁnition 3.8 (Attribute Hiding). A negotiation strategy strat is attribute-
hiding safe if, for every conﬁguration G = (cid:4)K , E, Ack, AC(cid:5) and every attribute t,
there exists a G(cid:3) = (cid:4)K , E(cid:3), Ack, AC(cid:5) that differs from G in t (i.e., t ∈ T (E)−T (E(cid:3))
or t ∈ T (E(cid:3)) − T (E)) and, for every adversary M , if t in UnAcks(G, M ) , G(cid:3) is
indistinguishable from G by M .
A violation of attribute hiding means that some M can use ATN to determine
whether or not N satisﬁes a particular unacknowledgeable attribute, which is
clearly something that any reasonable safety deﬁnition must preclude. The fol-
lowing theorem veriﬁes that both credential-combination hiding and attribute–
combination hiding do so.
THEOREM 3.9. The relative strength of the safety deﬁnitions is as follows:
(1) If strat
is credential-combination-hiding safe,
then it
is attribute–
combination-hiding safe.
(2) If strat is attribute-combination-hiding safe, then it is attribute-hiding safe.
The proof is found in Appendix B.
Attribute hiding by itself is not sufﬁcient as a safety requirement, because
it does not preclude the adversary M inferring that N does not have a certain
combination of attributes. For example, a strategy could be attribute-hiding
safe while enabling the adversary to infer N has either a CIA credential or an
NSA credential, so long as M cannot determine which of these is the case. Since
even this imprecise information clearly may be damaging, this makes attribute
hiding an unacceptable standard for ATN safety. This problem is prevented
by attribute–combination hiding, illustrating that it is strictly stronger than
attribute hiding.
The problem with attribute–combination hiding is revealed when we con-
sider the probabilistic inference of attributes. Assume that the opponent has
some prior knowledge about the probability that each credential combination
occurs; the opponent can easily infer information about the probability that each
attribute combination occurs. Given a set U of unacknowledgeable attributes,
safety should mean that after any number of negotiations, the opponent has no
basis on which to improve his estimate of the probability that the negotiator has
any given attribute combination in U . To make this more concrete, suppose that
ACM Transactions on Information and System Security, Vol. 9, No. 3, August 2006.
370
•
W. H. Winsborough and N. Li
several conﬁgurations each induce a given set of unacknowledgeable attributes
U(cid:3) and that all but one of them are distinguishable from the negotiator’s actual
conﬁguration G. This does not violate the requirement of attribute–combination
hiding. However, it does mean that the opponent can rule out many conﬁgura-
tions. Thus, for instance, if the one indistinguishable conﬁguration is very rare,
the adversary can learn that N’s unacknowledgeable attributes are very un-
likely to be exactly U(cid:3). In the CIA and NSA credential example above, learning
that the negotiator probably does not have a certain combination (e.g., none)
of the credentials can be detrimental, even if that knowledge is not entirely