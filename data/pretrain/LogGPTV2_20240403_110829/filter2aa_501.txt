# Domain Fronting is Dead, Long Live Domain Fronting

## Using TLS 1.3 to Evade Censors, Bypass Network Defenses, and Blend in with the Noise
**Erik Hunstad**

### Outline

#### 0. Introduction
- **Domain Fronting 101**
  - To understand Domain Fronting, one must first understand HTTP over TLS (HTTPS).
  - Server Name Indication (SNI) allows multiple sites to be hosted on the same IP.
  - TLS 1.3 enables encrypted certificates and Encrypted Server Name Indication (ESNI).
  - DNS over TLS or HTTPS + TLS 1.3 = domain fronting 2.0 or "domain hiding."

#### 1. HTTP Basics
- A user requests the IP of a server via DNS.
  - This request is an unencrypted packet sent to UDP port 53.
- The DNS server responds with an IP address.
  - The response is also unencrypted.
- The user sends a GET request, using the domain in the "Host" header.
  - TCP port 80 - unencrypted.
- The server responds with HTML content.
  - Both the DNS and HTTP request and response are in plaintext.

#### 2. HTTPS Basics
- A user requests the IP of a server via DNS.
  - This is an unencrypted connection on UDP port 53.
- The DNS server responds with an IP address.
  - The response is unencrypted.
- The user sends a ClientHello to start the TLS handshake.
  - The server uses the "server_name" field (plaintext) to look up how to respond.
- The server responds with a certificate (in plaintext unless TLS 1.3) and completes the handshake.
  - All data after the handshake is encrypted.
- While better than HTTP, the entire DNS process and the certificate exchange process are still unencrypted.

#### 3. Domain Fronting
- **Circumventing Censorship:**
  - Obfuscate the domain of an HTTPS connection.
  - Connect to an approved server but send an HTTP request for the actual destination.
  - Use a hosting service to host the true destination.
    - Examples: Google App Engine, Amazon S3/CloudFront, Microsoft Azure CDN.
- **Process:**
  - DNS lookup as before for any site hosted by the hosting service.
  - Client and server handshake as usual.
  - Client sends an HTTP request with the Host header set to the actual destination.
  - The CDN forwards the request as long as the destination is hosted by the service.
  - Like a letter delivered to a house with multiple residents, the mailman can see the address on the outside, but the letter inside goes to the correct person.

#### 4. Issues with Domain Fronting
- **April 2018: Major Providers Shut Down Domain Fronting**
  - **Google:** "Domain fronting has never been a supported feature at Google."
  - **Amazon:** Implemented "Enhanced Domain Protections."
  - **Cloudflare:** Only HTTP works.
  - **Azure:** Still works... For now.
- **Limitations:**
  - Limited fronting options; only sites hosted on the same provider can be used.
  - Must host an "app" or have an account with the provider, which is not free and involves complex sign-up requirements.

#### 5. The Growth of TLS 1.3
- **DNS Over TLS or HTTPS:**
  - Encrypts DNS requests (RFC 8484).
  - Potential issues: attackers and insiders could bypass organizational controls.
- **TLS 1.3 and ESNI:**
  - Encrypts the server_name.
  - Classic Diffie-Hellman key exchange to symmetrically encrypt the server_name.
  - Data required is sent in a single Client Hello (client’s public key + extras).

#### 6. TLS 1.3 and ESNI - Step by Step
- **Client Requests:**
  - The client requests the IP address and ESNI public key via DNS over TLS or HTTPS.
- **DNS Server Response:**
  - The DNS server returns the IP address and ESNI public key via DNS over TLS or HTTPS.
- **Client Sends:**
  - The client sends a TLS 1.3 ClientHello with an encrypted_server_name extension.
- **Server Responds:**
  - The web server responds with a ServerHello that includes the encrypted certificate.

#### 7. Weak Spots
- **DNS Response Tampering:**
  - DNS response for IP or _esni could be tampered with (poisoned resolver cache).
  - DNSSEC can help.
- **Blocked DNS Over TLS or HTTPS:**
  - Preload ESNI keys to bootstrap the connection.
- **IP Address Routing:**
  - The TLS connection goes to an IP address, which may be shared by many domains.
  - There is no generally applicable way to route to any domain via any other, but we can get close.

#### 8. Domain Hiding with Cloudflare
- **Cloudflare:**
  - Founded in 2009.
  - Content Delivery Network (CDN) with the highest number of internet exchange points.
  - Supports TLS 1.3, ESNI, Websockets, and QUIC.
  - Authoritative DNS for over 26,000,000 domains, supporting DNSSEC.
- **Process:**
  - A TLS 1.3 connection with ESNI is sent to any Cloudflare server.
  - An HTTP request is sent using that connection, with any Host header.
  - True domain must have DNS provided by Cloudflare.
  - Cloudflare will forward the request to the true destination, similar to domain fronting.

#### 9. Noctilucent
- **Go (Golang) Rewrite:**
  - Based on Cloudflare’s tls-tris project.
  - TLS 1.3 support with specific config options for domain hiding.
  - Drop-in replacement for standard crypto/tls, backwards compatible.
  - Test client application with DNS over HTTPS (DoH), fallback to DNS over TLS, and system default DNS.
  - Supports HTTPS and Websocket, cross-platform.

#### 10. What Can You Hide With?
- **Source: Alexa top 100,000 domains.**
- **Results:**
  - At least 21% of the top 100,000 domains are available to front (21,298).
  - Examples: myshopify.com, medium.com, discordapp.com, udemy.com, zendesk.com, coinbase.com, mozilla.org, teamviewer.com, blackboard.com, okta.com, bitdefender.com, ny.gov, mlb.com, stanford.edu, plex.tv, coronavirus.gov.hk, and more.

#### 11. Fooling SNI-Based Firewalls
- **SNI-Based Web Filters:**
  - Many products only look at SNI, ignoring ESNI.
  - By preserving the SNI along with ESNI, filters and analytics can be tricked.
  - Example: Untangle installed with strict web filter settings.
- **HTTPS Decrypting Firewalls:**
  - Seen in enterprise environments.
  - Install a root certificate on endpoints to break and re-encrypt traffic.
  - Allows analysis of full packet data.
  - Example: Kazakhstan attempted this nation-wide in July 2019.
  - Does TLS 1.3/ESNI offer a way around these firewalls?

#### 12. What is Blue to Do?
- **Options:**
  - Disable TLS 1.3 (25-50% of traffic).
  - Block Cloudflare (26 million domains).
  - Block ClientHellos with an encrypted_server_name extension.
  - Flag on ClientHello packets with both “server_name” and “encrypted_server_name.”
  - Use anomaly network analytics and JA3 mismatches.
  - Implement well-instrumented EDR and application whitelisting.

#### 13. Domain Hiding - Noctilucent - The Future
- **Latest Advancement:**
  - Censorship-resistant communication.
  - Usable today with Go and Cloak fork.
  - Will be harder to block as TLS 1.3 and ESNI adoption grows.
  - ESNI RFC is in flux (last updated 2020-06-01), might break tomorrow.
  - Currently relies on a single (massive) CDN, Cloudflare.
  - Blue Team: Your move!

### References/Resources
- [A New Needle and Haystack: Detecting DNS over HTTPS Usage](#)
- [Wikipedia: Domain Fronting](#)
- [Blocking-resistant communication through domain fronting](#)
- [Encrypt it or lose it: how encrypted SNI works](#)
- [Encrypted Server Name Indication for TLS 1.3](#)
- [Godns - a simple client lib for doing dns over https](#)
- [How DNSSEC Works](#)
- [SSL Labs - SSL Pulse](#)
- [Domain fronting through Cloudflare](#)
- [TLS-tris](#)
- [RITA (Real Intelligence Threat Analytics)](#)

### Special Thanks
- Robin Wood (@digininja) - freelance pen-tester, researcher, and developer.
- Andy Wang (cbeuw) - developer of Cloak.
- Nick Sullivan (@grittygrease) - Head of Research and Cryptography at Cloudflare.

### Questions
- **Erik Hunstad**
  - Personal Twitter: @badsectorlabs
  - Personal Blog: blog.badsectorlabs.com
  - GitHub: [SixGenInc/Noctilucent](https://github.com/SixGenInc/Noctilucent)