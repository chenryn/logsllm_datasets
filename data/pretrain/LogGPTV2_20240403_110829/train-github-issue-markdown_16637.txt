Tried this code and it works flawless with files  2GB it gives me an error.
    e = MultipartEncoder(fields=dict(
                file=(rfbase, open(filename, 'rb'), 'text/plain')
            ))
     m = MultipartEncoderMonitor(e, my_callback)
    uploadInfo = requests.request('POST', uploadURL,data=m,headers={'Content-Type': m.content_type})
    It gives me the following error:
      File "D:/Upload-Tool/req.py", line 86, in upload
        uploadInfo = requests.request("POST", uploadURL,data=m,headers={'Content-Type': m.content_type})
      File "C:\Python27\lib\site-packages\requests\api.py", line 50, in request
        response = session.request(method=method, url=url, **kwargs)
      File "C:\Python27\lib\site-packages\requests\sessions.py", line 444, in request
        data = data or {},
      File "C:\Python27\lib\site-packages\requests_toolbelt\multipart\encoder.py", line 292, in __len__
        return len(self.encoder)
      File "C:\Python27\lib\site-packages\requests_toolbelt\multipart\encoder.py", line 96, in __len__
        return self._len or self._calculate_length()
      File "C:\Python27\lib\site-packages\requests_toolbelt\multipart\encoder.py", line 111, in _calculate_length
        ) + boundary_len + 4
      File "C:\Python27\lib\site-packages\requests_toolbelt\multipart\encoder.py", line 110, in 
        (boundary_len + len(p) + 4) for p in self.parts
      File "C:\Python27\lib\site-packages\requests_toolbelt\multipart\encoder.py", line 377, in __len__
        return len(self.headers) + super_len(self.body)
      File "C:\Python27\lib\site-packages\requests\utils.py", line 52, in super_len
        return len(o)
    OverflowError: long int too large to convert to int
Please help if my code has some errors :)
edit: sorry, totally forgot to upgrade the toolbelt :) thx. a lot