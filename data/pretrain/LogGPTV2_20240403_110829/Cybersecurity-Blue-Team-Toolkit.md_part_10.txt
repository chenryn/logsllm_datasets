  23            Telnet         Telnet Protocol                      Obsolete unencrypted communication
  25            SMTP           Simple Mail Transfer Protocol        Sending/routing email
  53            DNS            Domain Name System                   Phonebook of the Internet; translates names of websites to IP addresses
  80            HTTP           Hypertext Transfer Protocol          Foundation of the World Wide Web
  110           POP3           Post Office Protocol                 Receiving email by downloading to your host
  123           NTP            Network Time Protocol                []{#c03.xhtml#Page_37 .pagebreak title="37" role="doc-pagebreak"}Synchronizes the clocks on computers on your network
  143           IMAP           Internet Message Access Protocol     View email messages from any device; does not download to a host
  161           SNMP           Simple Network Management Protocol   Collects information and configures different network devices
  443           HTTPS          Hypertext Transfer Protocol Secure   The secure version of HTTP; information between a browser and website is encrypted
  445           Microsoft DS   Microsoft‐Directory Services         SMB over IP; preferred port for Windows file sharing
  465           SMTPS          Secure SMTP                          Authenticated SMTP over SSL
  1433          MSSQL          Microsoft SQL                        Microsoft SQL database management system
  3389          RDP            Remote Desktop Protocol              Application sharing protocol
```{=html}
```
If you want to run a services scan against the machines in your
ecosystem, Nmap will tell you which of the hundreds of thousands of
ports might be open on a host. If a port is open, communication can
occur. Sometimes that communication is unwanted and is what you are
trying to protect against. For example, in [Figure
3.3](#c03.xhtml#c03-fig-0003){#c03.xhtml#R_c03-fig-0003} you see the
Nmap scan report showing the ports that are open, the service, the
state, and the version.
![[**[Figure 3.3](#c03.xhtml#R_c03-fig-0003){#c03.xhtml#c03-fig-0003
role="doc-backlink"}:**]{.figureLabel} Nmap scan
report](Images/c03f003.jpg){.center width="751" height="179"}
To launch a services scan on a network segment, use the following
command:
``` {#c03.xhtml#c03-code-0003}
>nmap -sV 
```
When you do a service scan with Nmap, it will tell you which ports are
open and will use a database that lists more than 2,000 well‐known
services []{#c03.xhtml#Page_38 .pagebreak title="38"
role="doc-pagebreak"}that are typically running on those ports. It has
been my experience that network administrators are opinionated and will
have their own ideas of how services in their enterprise environment
should be configured, so sometimes that database and reality do not
match up. If you are doing inventory or vulnerability management, you
want to be as accurate as possible and know the version and patch level
of systems whenever available.
Version detection investigates those ports to figure out what is
actually running. The `nmap‐services‐probes```{=html} database
contains certain probe packets for discovering services and matching
them to responses. Nmap will attempt to determine the service,
application, version number, hostname, device type, and operating
system.
:::
::: section
[]{#c03.xhtml#c03-sec-0005}
## Operating Systems {#c03.xhtml#head-2-31}
Nmap is often used to detect the operating system of a machine. Being
able to correctly identify the operating system is key for many reasons,
including doing inventory and finding vulnerabilities and specific
exploits. Nmap is known for having the most robust and comprehensive OS
fingerprint database.
When you are identifying specific operating systems, the key is how the
operating system responds to Nmap probe packets. Windows XP and Windows
Server 2003 are nearly identical, while Windows Vista and Ubuntu Linux
16 are completely different in the way they respond. In [Figure
3.4](#c03.xhtml#c03-fig-0004){#c03.xhtml#R_c03-fig-0004}, you see the
response of an `nmap ‐O```{=html} command. To enable operating
system detection, use the following command:
![[**[Figure 3.4](#c03.xhtml#R_c03-fig-0004){#c03.xhtml#c03-fig-0004
role="doc-backlink"}:**]{.figureLabel} ` nmap ‐O`
``{=html}](Images/c03f004.jpg){.center width="724" height="406"}
``` {#c03.xhtml#c03-code-0004}
>nmap -O 
```
:::
::: section
[]{#c03.xhtml#c03-sec-0006}
## Zenmap {#c03.xhtml#head-2-32}
Everything in this chapter thus far has been done through the command
line or terminal interface. As Nmap has matured, so has the interface.
Zenmap is the GUI of Nmap. It is a multiplatform, free, and open source
application. There are some benefits to Zenmap that the good old
command‐line Nmap cannot do, such as building topology, creating
interactive maps, showing comparisons between two scans, keeping and
tracking the results of a scan, and making the scan duplicable.
Zenmap\'s goal is to make scanning easy and free for beginners and
experts alike. You only have to identify your target and hit the Scan
button, as you see in [Figure
3.5](#c03.xhtml#c03-fig-0005){#c03.xhtml#R_c03-fig-0005}.
![[**[Figure 3.5](#c03.xhtml#R_c03-fig-0005){#c03.xhtml#c03-fig-0005
role="doc-backlink"}:**]{.figureLabel} Zenmap GUI
scan](Images/c03f005.jpg){.center width="751" height="512"}
As you can see, this scan is the exact previous scan, just done in a
GUI. If you clicked the tabs across the middle, you would see a list of
all ports open, the network topology, the host details, and the history
of scans of this asset, as you see in [Figure
3.6](#c03.xhtml#c03-fig-0006){#c03.xhtml#R_c03-fig-0006}.
![[**[Figure 3.6](#c03.xhtml#R_c03-fig-0006){#c03.xhtml#c03-fig-0006
role="doc-backlink"}:**]{.figureLabel} Zenmap host
details](Images/c03f006.jpg){.center width="612" height="606"}
To save an individual scan to a file, choose the Scan menu and select
Save Scan from the drop‐down. If there is more than one scan, you will
be asked which one to save. You have a choice of saving in
`.xml```{=html} or `.txt```{=html} format. The
`.xml```{=html} format can only be opened and used again by
Zenmap. By default, all scans are saved automatically, but only for 60
days.
[]{#c03.xhtml#Page_40 .pagebreak title="40" role="doc-pagebreak"}Before
you install Nmap or Zenmap, you will want to make sure it isn\'t already
installed. There are several operating systems (including most Linux
systems) that have Nmap packages embedded but not installed. Type the
following at a command prompt:
``` {#c03.xhtml#c03-code-0005}
nmap --version
```
This will display the version of Nmap that is installed. If you get an
error message such as `nmap: command not found```{=html}, then
Nmap is not installed on your system.
Zenmap is found in the executable Windows installer. The latest stable
release will be on the `www.nmap.org/download` page. To download the
executable file, click the link shown in [Figure
3.7](#c03.xhtml#c03-fig-0007){#c03.xhtml#R_c03-fig-0007}.
![[**[Figure 3.7](#c03.xhtml#R_c03-fig-0007){#c03.xhtml#c03-fig-0007
role="doc-backlink"}:**]{.figureLabel} Downloading
`nmap‐7.70‐setup.exe```{=html}](Images/c03f007.jpg){.center
width="351" height="24"}
As with most executable files for Windows, the file is saved by default
in the Downloads folder. Double‐click the executable to start the
install process. Click []{#c03.xhtml#Page_41 .pagebreak title="41"
role="doc-pagebreak"}Next through the windows, keeping all the defaults,
until you get to Finish. Once the install has completed, open the Start
menu on your taskbar and begin typing **Nmap**. At the top of your menu,
you should see Nmap‐Zenmap GUI. Click the application, define the target
assets, and click Scan to launch.
The white paper "CIS Controls Implementation Guide for Small‐ and
Medium‐Sized Enterprises (SMEs)" published at `www.cisecurity.org`
breaks down into these three phases:
1.  [Know your environment.]{#c03.xhtml#c03-li-0014}
2.  [Protect your assets.]{#c03.xhtml#c03-li-0015}
3.  [Prepare your organization.]{#c03.xhtml#c03-li-0016}
In phase 1, Nmap is described as a famous multipurpose network scanner,
and Zenmap is described as an easy‐to‐use graphic user interface for
Nmap. You must know your environment better than an attacker and use
that attacker\'s mind‐set in key controls to develop your security
program.
:::
:::
[]{#c04.xhtml}
::: {#c04.xhtml#sbo-rt-content}
# []{#c04.xhtml#Page_43 .pagebreak title="43" role="doc-pagebreak"}[]{#c04.xhtml#c04}[CHAPTER 4]{.chapterNumber} [Vulnerability Management]{.chapterTitle}
::: section
[]{#c04.xhtml#c04-sec-0001}
WHAT YOU WILL LEARN IN THIS CHAPTER:
-   [Managing vulnerabilities]{#c04.xhtml#c04-li-1001}
-   [OpenVAS]{#c04.xhtml#c04-li-1002}
-   [Continuous assessment]{#c04.xhtml#c04-li-1003}
-   [Remediation]{#c04.xhtml#c04-li-1004}
-   [Nexpose Community]{#c04.xhtml#c04-li-1005}
I have years of vulnerability management experience. At first, it was
theoretical when I was teaching at Louisiana State University. It became
a more hands‐on role when I worked as an IT director for a small private
school and then again when I worked for the U.S. Department of Defense
(DoD) as a contractor. If you are planning to take any security
certification exams---whether it\'s ISACA, ISC2, or CompTIA---you need
to be aware that the management of the vulnerability lifecycle and risk
is a key component on those exams.
Some ships are titanic, and some boats are small. Some boats, like a
kayak, could represent your home network, while a Fortune 50 company
would be more like the *Queen Elizabeth II*. The goal of both vessels is
the same: Don\'t sink. If you have been tasked with vulnerability
management, your task is the same: Don\'t sink.
:::
::: section
[]{#c04.xhtml#c04-sec-0002}
## Managing Vulnerabilities {#c04.xhtml#head-2-33}
As I mentioned earlier, you must know your environment better than an
attacker and use that attacker\'s mind‐set in key controls to develop
your security program. Now that you have all the open‐source tools to
troubleshoot your network and []{#c04.xhtml#Page_44 .pagebreak
title="44" role="doc-pagebreak"}you know what assets you have to
protect, you have to be able to assess those assets for vulnerabilities.
It is a cyclic endeavor, as shown in [Figure
4.1](#c04.xhtml#c04-fig-0001){#c04.xhtml#R_c04-fig-0001}.
![[**[Figure 4.1](#c04.xhtml#R_c04-fig-0001){#c04.xhtml#c04-fig-0001
role="doc-backlink"}:**]{.figureLabel} The vulnerability management
lifecycle](Images/c04f001.jpg){.center width="394" height="420"}
In the discovery phase, you have to figure out what is on your network
communicating to other devices. You cannot protect what you don\'t know
you have. Once you\'re able to map out the assets, hosts, nodes, and
intermediary devices on your network, then you\'re able to move to the
next step.
Not all devices are created equal. A domain is a group of computers and
other devices on a network that are accessed and administered with a
common set of rules. A Windows domain controller (DC) is a Microsoft
server that responds to login authentication requests within a network.
In an enterprise environment, if a DC fails, your help desk will explode
with calls because of the inability for users to log in to the domain.
However, if you have a marketing department with a small file server
that it backs up to once a month, if this machine fails, then it might
warrant a phone call or two. After you know what machines exist on your
network, you must prioritize which assets are mission critical.
Once you have identified which assets have a heartbeat and you know
which assets would cause chaos through failure or compromise, the next
step is to determine the assets\' vulnerabilities. This is usually
accomplished by analyzing the operating system, ports that are open,
services running on those ports, and applications you have installed on
those assets.
Now you\'re ready to build a report. Some reports will bubble up to
upper management and require information such as trending analysis and
vulnerability remediation plans. The decisions that upper management
will make based on these reports could be budgetary or based on head
count. The more []{#c04.xhtml#Page_45 .pagebreak title="45"
role="doc-pagebreak"}technical reports will usually trickle down to the
asset owner and contain what needs to be fixed on that device.
With the report in hand, you now have a list of vulnerabilities in your
environment and on what device they reside. Some software with advanced
capabilities will generate instructions on how to remediate those
vulnerabilities. Most of these technical reports will give you a
severity rating typically based on the Common Vulnerability Scoring
System (CVSS), as listed in [Table
4.1](#c04.xhtml#c04-tbl-0001){#c04.xhtml#R_c04-tbl-0001}. The National
Institute of Standards and Technology (NIST) maintains the National
Vulnerability Database (NVD). In this database, you can see a
quantitative analysis of every vulnerability based on access vector,
complexity, and authentication as well as the impact to confidentiality,
integrity, and availability. Basically, this means every vulnerability
will have a score of 0 to 10, with 0 being good and 10 being
horrendously awful.
```{=html}
```
```{=html}
```
[**[Table 4.1](#c04.xhtml#R_c04-tbl-0001){#c04.xhtml#c04-tbl-0001
role="doc-backlink"}:**]{.figureLabel} CVSS v3.0 Ratings
Source: National Institute of Standards and Technology
```{=html}
```
  SEVERITY   BASE SCORE RANGE
  ---------- ------------------
  None       0
  Low        0.1--3.9
  Medium     4.0--6.9
  High       7.0--8.9
  Critical   9.0--10.0
```{=html}
```
In the vulnerability management lifecycle, building your remediation
attack plan is a critical step. After completing the asset
classification and vulnerability assessment, you correlate the findings
to compile your plan of action. There are some organizations I have
worked with that have the goal of becoming 100 percent free of
vulnerabilities, and that just isn\'t a realistic goal to have in our
modern digital infrastructure. If you have devices connected and
communicating to the world, there is a way into your network and a way
out. On mission‐critical devices, prioritize the repair of critical and
high‐severity vulnerabilities. Save the less critical devices to be
remediated later.
There is nothing more frustrating than taking apart a PC, fixing what
you think is the problem, putting that PC completely back together, and
then realizing you didn\'t fix it and having to start over. Verification
is vital to this process. If you do not rescan assets looking for the