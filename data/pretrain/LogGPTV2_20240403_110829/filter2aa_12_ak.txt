3. 当接收到服务器的SYN/ACK，客户端：
发送ACK报文给服务器，确认从服务器接收到SYN/ACK.
指明客户端窗口大小。尽管这一参数在第一个报文中定义过了，服务器还是会参考这个值，因为这是最新的窗口大小。
在TCP头部的选项字段中，有以下几个主要选项：
Maximum Segment Size（MSS）：TCP数据报的最大字节数，即从TCP头部开始直到报文末尾的字节数。
Windows Scale Option (WSopt)：这一因子与TCP头部的Window Size字段相乘，通知接收方扩大缓存。由于头部最大窗口大小是64KB，乘以因子4也就是256KB窗口大小。
SACK：Selective ACK，该选项使连接双方能够仅确认指定报文，当单个报文丢失，只有这个报文会被重传。连接建立时，双方都需要同意SACK。
Timestamps Option（TSopt）：该参数指客户端和服务器之间的延时。
在这一阶段，双方：
同意建立连接
知道对方的初始序列号
知道对方的窗口大小
 在建立连接时，除了三路握手信号之外，其他都表示有问题。包括SYN没有响应，SYN之后SYN/ACK最后没有ACK，SYN响应为RST，等等。
总结：
如果SYN报文收到回复RST，则检查拦截了port号的防火墙。
三次SYN而没有任何回复，或者是由于应用程序没有响应，或者是由于防火墙拦截了特定端口上的请求。
永远记住确认一下是否有NAT，端口转发，以及涉及TCP和UDP端口的机制。这些机制可能会中断TCP正常操作。
参考
Network Analysis Using Wireshark Cookbook
网络基本功（二十四）：Wireshark抓包实例分析TCP重传
网络基本功（二十四）：Wireshark抓包实例分析TCP重传
转载请在文首保留原文出处：EMC中文支持论坛https://community.emc.com/go/chinese 
介绍
TCP发送一个或一组报文，会等待收到报文的确认信息。重传，即发生在报文没有到达或确认信息没有及时返回的情况下。当发现网速变慢时，原因之一可能就是重传。发生重传的原因有多种，在客户机或服务器两边端口应用Wireshark有助于诊断问题。本文通过抓包实例阐述各种可能性。
更多信息
诊断过程:
在相应端口开始抓数据。
找到Analyze | Expert Info菜单。
在Notes之下，查找Retransmission。
点击（+）符号即可打开重传列表。鼠标点击各行可在抓包面板看到重传报文。
现在问题来了，怎样定位问题呢？
通过以下方式查看重传来自哪里：
在Expert Info窗口一个一个查看报文，在抓包面板查看哪些是重传报文（适合于有经验的用户）
在报文面板，配置显示过滤器expert.message == “Retransmission (suspected)”，即可看到抓包文件中所有重传报文
应用过滤器，在Statistics & Conversations窗口查看Limit to display filter部分。
Case 1：重传至多个目的地址
以下截屏中，可看到有多次重传，分布于多台服务器，目的端口号为80（HTTP）。也可以发现重传由端口10.0.0.5发送，因此报文是丢失在发往Internet的途中，或确认信息没有及时从web服务器发回。
问题发生在发往Internet的线路上，怎样知道是什么问题呢？
从Statistics菜单，打开IO Graph。
本例中，可看到链路负载非常低。可能是有故障，或有另一条高负载链路。
可以通过登录到通信设备或SNMP浏览器查看引起重传的原因：报文丢失及错误。参考以下截屏：
Case 2：重传至单一连接
如果所有重传发生于同一IP，同一TCP端口号，则可能是慢速应用引起。看以下截屏：
对于单一连接的重传，进行以下操作：
从Statistics菜单打开Conversations，选择Limit to display filter，可以看到所有发生重传的会话，本情况下，是一个单一会话。
如下图所示，通过选择IPv4标签可看到从哪个IP地址重传：
   3. 如下图所示，通过选择TCP标签看到重传来自哪一端口：
要定位问题，进行以下步骤：
查看IO graph，确保链路不忙。（链路忙的表征例如流量接近带宽。例如，带宽为10Mbps，在IO graph中看见流量接近10Mbps，这就表明链路负载较高。不忙的链路IO会有很多高低起落，峰值以及空闲间隙）。
如果链路不忙，则可能是服务器对于IP地址10.1.1.200有问题（10.90.30.12发送了绝大多数重传，所以可能是10.1.1.200响应较慢）
从报文面板可以看出应用是FTP数据。有可能FTP服务器工作于active模式。因此在端口2350打开连接，服务器将端口更改为1972，所以可能是慢速FTP软件响应问题引起的重传。
Case 3：重传模式
观察TCP重传的一个重要考量是是否能看出一些重传模式。在以下截屏中，可以看见所有重传来自单一连接，位于客户端与服务器的NetBIOS会话服务（TCP端口139）。
看起来像一个简单的服务器/客户端问题，但查看抓包面板，如下图所示：
可以看见重传总是周期性的每30ms发生一次。问题是由于客户端在软件中执行了财务进程，导致软件每30-36ms就减速一次。
Case 4：应用无响应导致重传
另一个可能导致重传的原因是客户端或服务器没有响应请求。这种情况下，会看到五次重传，时间也会逐渐延长。五次连续重传后，发送方认为连接断开（某些情况下，会发送reset来关闭连接，取决于软件实施）。断开连接之后，可能会发生两件事情：
发送SYN请求至客户端，以打开一个新的连接。这种情况下用户会看到应用冻结，过了15-20秒之后重新开始工作。
不发送SYN，用户需要重新运行应用程序（或应用程序的一部分）
下图显示了打开新连接的情况：
Case 5：由于延时变化导致重传
TCP能够充分容忍延时，前提是延时大小不发生变化。当延时改变时，就会发生重传。诊断是否由该原因引起的方法：
第一件事是ping目的地址，并且得到检查通信链路延时的第一条信息。
检查延时变量，可能由以下原因引起：
由于不稳定或繁忙通信链路引起。这种情况下，可以看到ping命令的延时变化，通常由于带宽较窄。
由于应用过载或资源不足，这种情况下，只有该应用发生很多重传。
通信设备过载（CPU,缓存）引起延时。检查方式直接连接通信设备。
使用Wireshark工具诊断延时问题。
如果重传达到0.5个百分比，性能就会下降，断开连接将会达到5个百分比。这取决于应用及其对于重传的敏感性。
定位重传问题
当你看到通信链路上发生重传，进行以下步骤：
定位问题——是一个特定IP地址，特定连接，特定应用，还是其他问题。
查看问题是否由于通信链路，丢包，慢速服务器还是PC。查看应用是否慢速。
如果不是由于上述原因，检查延时变化。
工作原理:
TCP序列号/确认机制详见前文：网络基本功（十）：细说TCP确认机制 。那么重传是由什么原因引起呢？当报文确认信息丢失，或ACK没有及时到达，发送方会进行以下两步操作：
再次发送报文
减少吞吐量。
更多TCP重传内容详见前文：网络基本功（九）：细说TCP重传 。
以下图中展示了重传减少发送方吞吐量（红色细线）：
参考
Network Analysis Using Wireshark Cookbook
网络基本功（二十五）：Wireshark抓包实例分析TCP重复ACK与乱序
网络基本功（二十五）：Wireshark抓包实例分析TCP重复ACK与乱序
转载请在文首保留原文出处：EMC中文支持论坛https://community.emc.com/go/chinese 
介绍
TCP的一大常见问题在于重复ACK与快速重传。这一现象的发生也是由于性能问题，本章讨论如何发现这一问题以及他们意味着什么。
另一个常见问题是前一片段丢失以及乱序片段。某些情况下，这一现象喻示着故障发生，可能是由于网络问题或是抓包中断。
更多信息
重复ACK与快速重传:
当网速变慢时，重复ACK是可能的原因之一。大多数情况下，重复ACK的发生是由于高延时，延迟的变化，或无法响应ACK请求的慢速终端。
当重复ACK的数量保持在合理范围时，即1或2个百分比，则可能不是本机问题。
当有大量的重复ACK时（假设有10个），则可能：
通信链路繁忙引起延迟改变
服务器或客户端无响应
快速重传是对重复ACK的响应报文。
下图是该问题的示例。本例中51个重复ACK之后发生了快速重传：
以下是如何解决该问题：
如果重复ACK和重传数量较少（少于1个百分比），是可以接受的。
如果重复ACK发生在无线网络环境，或是Internet之上的连接，延时或是延时的改变对于这类网络来说很常见，所以也没有什么可做的。
如果发生在组织内的网络，则可能有问题。如果发生在LAN之上，检查严重的问题，例如缓存和CPU负载，慢速服务器，等等。如果发生在WAN之上，查看延时，负载以及线路不稳定。
工作原理
当发现有丢失报文时（期望的序列号没有收到），或者收到了预期之外的序列号。这种情况下，接收端生成一个ACK，声明自己希望收到的下一个序列号。接收方持续生成丢失片段的ACK请求，直到实际收到。
在发送方，当它收到三个相同的ACK（初始ACK和两个重复ACK），就会假设有报文丢失并重传该报文，无论重传计时器是否过期。再次发送的报文称为快速重传。
重复ACK也减少了发往网络的吞吐量。减少了多少吞吐量取决于TCP版本。比较早期的TCP版本中出现了重复ACK，发送方将吞吐量减少为之前的一半。在多个DupACK的情况下，吞吐量减到最小。
下图显示了重复ACK和重传的典型例子，本图中第一次重复ACK将吞吐量降低至大约40%，之后重传将吞吐量减至最小。
乱序报文:
在两端抓包，乱序情况下需要关注三种现象：
先前片段丢失：当前收到报文的序列号高于该连接的下一个期望序列号时，表明之前的一个或多个报文未能到达
乱序报文：当前报文的序列号低于该连接先前收到的报文