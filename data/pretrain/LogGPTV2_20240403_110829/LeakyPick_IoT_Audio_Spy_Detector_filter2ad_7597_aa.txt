title:LeakyPick: IoT Audio Spy Detector
author:Richard Mitev and
Anna Pazii and
Markus Miettinen and
William Enck and
Ahmad-Reza Sadeghi
LeakyPick: IoT Audio Spy Detector
Richard Mitev
PI:EMAIL
Technical University of Darmstadt
Anna Pazii
PI:EMAIL
University of Paris Saclay
Markus Miettinen
markus.miettinen@trust.tu-
darmstadt.de
Technical University of Darmstadt
0
2
0
2
v
o
N
2
1
]
R
C
.
s
c
[
2
v
0
0
5
0
0
.
7
0
0
2
:
v
i
X
r
a
William Enck
PI:EMAIL
North Carolina State University
ABSTRACT
Manufacturers of smart home Internet of Things (IoT) devices are
increasingly adding voice assistant and audio monitoring features
to a wide range of devices including smart speakers, televisions,
thermostats, security systems, and doorbells. Consequently, many
of these devices are equipped with microphones, raising signifi-
cant privacy concerns: users may not always be aware of when
audio recordings are sent to the cloud, or who may gain access
to the recordings. In this paper, we present the LeakyPick archi-
tecture that enables the detection of the smart home devices that
stream recorded audio to the Internet in response to observing a
sound. Our proof-of-concept is a LeakyPick device that is placed
in a user’s smart home and periodically “probes” other devices in
its environment and monitors the subsequent network traffic for
statistical patterns that indicate audio transmission. Our prototype
is built on a Raspberry Pi for less than USD $40 and has a mea-
surement accuracy of 94% in detecting audio transmissions for a
collection of 8 devices with voice assistant capabilities. Further-
more, we used LeakyPick to identify 89 words that an Amazon
Echo Dot misinterprets as its wake-word, resulting in unexpected
audio transmission. LeakyPick provides a cost effective approach
to help regular consumers monitor their homes for sound-triggered
devices that unexpectedly transmit audio to the cloud.
CCS CONCEPTS
• Security and privacy → Domain-specific security and pri-
vacy architectures; Intrusion/anomaly detection and malware
mitigation.
1 INTRODUCTION
Consumer Internet of Things (IoT) devices have emerged as a
promising technology to enhance home automation and physical
safety. While the smart home ecosystem has a sizeable collection
of automation platforms, market trends in the US [44] suggest that
many consumers are gravitating towards Amazon Alexa and Google
Home. These two platforms are unique from the other automation
platforms (e.g., Samsung SmartThings, WeMo) in that they focused
much of their initial smart home efforts into smart speaker tech-
nology, which allows users to speak commands to control smart
home devices (e.g., light switches), play music, or make simple in-
formation queries. This dominance of Amazon Alexa and Google
Home might suggest that consumers find voice commands more
useful than complex automation configurations.
1
Ahmad-Reza Sadeghi
ahmad.sadeghi@trust.tu-
darmstadt.de
Technical University of Darmstadt
For many privacy-conscious consumers, having Internet con-
nected microphones scattered around their homes is a concerning
prospect. This danger was recently confirmed when popular news
media reported that Amazon [27], Google [23, 31], Apple [24], Mi-
crosoft [13], and Facebook [18] are all using contractors to manually
analyze the accuracy of voice transcription. The news reports in-
clude anecdotes from contractors indicating they listened to many
drug deals, domestic violence, and private conversations. Perhaps
more concerning is that many of the recordings were the result of
false positives when determining the “wake-word” for the platform.
That is, the user never intended for the audio to be sent to the cloud.
Unfortunately, avoiding microphones is not as simple as not
purchasing smart speakers. Microphones have become a perva-
sive sensor for smart home devices. For example, it is difficult to
find a smart television that does not support voice controls via the
display or the handheld remote control. Smart thermostats (e.g.,
Ecobee) commonly advertise that they have dual function as a smart
speaker. Surveillance cameras (e.g., Ring, Wyze) are designed to
notify users of events, but are in fact always recording. Perhaps
most concerning was the report that the Nest security system in-
cludes a microphone [27], despite no packing material or product
documentation reporting its existence. While the manufacturers of
these devices might argue that users can disable microphone func-
tionality in device software, history has repeatedly demonstrated
that software can and will be compromised. Furthermore, mass
collection and storage of audio recordings increases concerns over
the potential for a “surveillance state” (e.g., Ring has recently been
criticized for working with local police [22]).
Our research seeks to answer the question: Can a user effectively
detect if a smart home device expectantly transmits audio recordings
to Internet servers in response to a sound trigger? Such failures can
occur in two types of situations: (1) devices that are not expected
to have recording capability or are expected to have the capability
disabled transmit user audio, or, (2) devices that are expected to
have recording capability enabled, but transmit audio in response
to unexpected stimuli (e.g., unexpected or misunderstood wake-
words). In both cases we are primarily concerned with the benign,
but hidden, recording and immediate transmission of audio to cloud
services, as such behaviors can potentially lead to mass surveillance.
We believe there is significant utility in detecting this subset of mis-
behaving devices, particularly given the limited storage capacity
of many low-level IoT devices. Additionally, we only consider au-
dio transmission that occur in response to a sound-based trigger
Pre-print of paper to be published at ACSAC2020
acmDOI: 10.1145/3427228.3427277
Richard Mitev, Anna Pazii, Markus Miettinen, William Enck, and Ahmad-Reza Sadeghi
event. Devices that continuously stream audio are detectable by
monitoring bandwidth use.
Existing approaches for identifying unintended data transmis-
sions out of the user’s network [11, 29] focus on other modalities
(e.g., video) and rely on assumptions that do not apply to audio
transmissions (e.g., some devices require an utterance of specific
wake-words). Furthermore, while traffic analysis approaches target-
ing IoT devices have been proposed [33, 41], to the best of our knowl-
edge there are no earlier approaches specifically targeting traffic of
microphone-enabled IoT devices. Additionally, prior work attacking
voice assistants and voice recognition [3, 7, 8, 14, 28, 30, 40, 46, 49–
51] focuses on maliciously issuing commands or changing the in-
teraction flow without the victim noticing.
In this paper, we present the LeakyPick architecture, which in-
cludes a small device that can be placed in various rooms of a home
to detect the existence of smart home devices that stream recorded
audio to the Internet. LeakyPick operates by periodically “probing”
an environment (i.e., creating noise) and monitoring subsequent
network traffic for statistical patterns that indicate the transmission
of audio content. By using a statistical approach, LeakyPick’s detec-
tion algorithm is generalizable to a broad selection of voice-enabled
IoT devices, eliminating the need for time-consuming training re-
quired by machine learning.
We envision LeakyPick being used in two scenarios. First, LeakyP-
ick can identify devices for which the user does not know there is a
microphone, as well as smart home devices with smart speaker ca-
pabilities (e.g., an Ecobee thermostat) that the user was not aware of,
or thought were disabled (e.g., re-enabled during a software update).
To evaluate this scenario, we studied eight different microphone-
enabled IoT devices and observed that that LeakyPick can detect
their audio transmission with 94% accuracy. Second, LeakyPick
can be used to determine if a smart speaker transmits audio in
response to an unexpected wake-word. To evaluate this scenario,
we used LeakyPick to perform a wake-word fuzz test of an Amazon
Echo Dot, discovering 89 words that unexpectantly stream audio
recordings to Amazon. For both scenarios, LeakyPick can run when
the user is not home (to avoid annoyance), since this behavior is
generally not contextual the users’ presence.
This paper makes the following contributions:
• We present the LeakyPick device for identifying smart home
devices that unexpectedly record and send audio to the Internet
in response to observing a sound. The device costs less than
USD $40 and can be easily deployed in multiple rooms of a
home.
• We present a novel audio-based probing approach for estimat-
ing the likelihood that particular devices react to audio. Our
approach has a 94% accuracy for a set of devices known to
transmit audio to the cloud. We also show that the approach
is generalizable to different device types without the need
to pre-train costly device-type-specific detection profiles.
• We show that LeakyPick can identify hidden wake-words that
cause unexpected audio transmission. Our analysis of an Ama-
zon Echo Dot identified 89 incorrect wake-words.
Finally, LeakyPick uses human-audible noises, which may be
annoying to physically present users. Prior work has suggested the
use of inaudible sound to control voice assistants using ultrasound
2
Figure 1: Overview of wake-word detection process in voice-
controlled devices such as the Amazon Echo
audio [42, 50]. However, these approaches are specific to the tech-
nical characteristics of the targeted devices. Therefore, they are not
immediately applicable to our goal of identifying unknown devices
streaming audio. We leave the task of creating generic models of
transmitting audio via ultrasonic sound as a topic for future work.
The remainder of this paper proceeds as follows. Section 2 pro-
vides background on devices with voice control and audio interfaces.
Section 3 overviews our architecture. Section 4 describes our design
and implementation. Section 5 evaluates the accuracy of LeakyP-
ick. Section 6 discusses our approach and security considerations.
Section 7 overviews related work. Section 8 concludes.
2 BACKGROUND
IoT devices increasingly use audio sensing for enabling voice-based
control by the user or for other audio-based use cases. Examples of
such devices include smart audio security systems [25], smart audio
event-detecting IP cameras [20], vacuum cleaner robots equipped
with microphones and nightvision [6], and smart fire alarms with
a self-testing siren [19]. Due to the abundance of devices with
audio sensing capabilities, the user may not always be aware of
when a particular device will record audio and send it to the cloud.
Sending audio to the cloud is frequently required for voice-control
based user interfaces, as speech-to-text translation often needs
more computational resources than are available on IoT devices.
Devices with voice-control interfaces typically use local speech
recognition for detecting a specific set of “wake-words” (i.e., ut-
terances meant to be used by the user to invoke the voice-control
functionality of the device). When the local model detects the utter-
ance of a potential wake-word, the device starts sending audio to
back-end servers for voice-to-text translation. In order to not miss
speech commands uttered by users, the local model needs to be
configured to recognize any utterance that resembles the intended
wake-word. In case of the Alexa voice assistant, it is then the task
of the back-end service to verify whether the observed utterance
really represents a wake-word or not, as it is equipped with a more
comprehensive speech recognition model and is not limited by
the potentially scarce computational capabilities of the IoT device
recording the audio. Figure 1 overviews this typical approach.
Listening for the wake-wordStart streaming recorded audioKeep streaming to cloud for executionStop streamingLocal modelrecognizes wakewordRemotemodel recognizeswake-wordNoYesNoYesLeakyPick: IoT Audio Spy Detector
Pre-print of paper to be published at ACSAC2020
acmDOI: 10.1145/3427228.3427277
Problems arise when the local or online detection model mis-
takenly classifies specific audio inputs as the wake-word and con-
sequently starts sending the recorded audio to the cloud, thereby
potentially leaking sensitive information. Private information may
also be leaked unintentionally when the user is unaware that a
device will react to specific wake-words.
Finally, attacks targeting voice assistants can use malicious audio
signal injection to trick the assistant to perform actions. In these
attacks, the adversary either waits for the user to be asleep or not
present [3, 14] or uses inaudible [30, 42, 50] or unrecognizable [7,
40, 46, 49] signals to stage the attack, making it very difficult for
the victim user to realize that the device is being attacked.
Our goal is to provide tools that enable users to detect and iden-
tify 1) devices that are not expected to have audio recording trans-
mission capability, 2) devices for which audio recording transmis-
sion is expected to be disabled, and 3) unexpected wake-words that
cause devices to unexpectedly transmit audio recordings.
Threat Model and Assumptions: In this paper, we are concerned
with threats related to IoT devices that stream recorded audio over
the Internet using Wi-Fi or a wired LAN connection in response to
audio signals recognised by the device as potential voice commands
or different sounds the device reacts to. As processing voice com-
mands is (except for the detection of the device’s wake-word) imple-
mented on the server-side, we assume that recorded audio is trans-
mitted instantaneously to the cloud to allow the voice-controlled
device to promptly react to user commands. We consider three main