# Title: Should You Use the App for That? Comparing the Privacy Implications of App- and Web-based Online Services

## Authors:
Christophe Leung, Jingjing Ren, David R. Choffnes, Christo Wilson  
Northeastern University  
{tophe, renjj, choffnes, cbw}@ccs.neu.edu

## Abstract
Many popular, free online services are accessible via both web browsers and mobile apps on iOS and Android. These services often include tracking and advertising libraries that collect user information, raising significant privacy concerns. Given the independent evolution of web-based and app-based ecosystems, it is crucial to compare these platforms in terms of user privacy.

In this paper, we conduct a comprehensive study of 50 popular, free online services to determine which platform—web or app—is better for privacy. We perform manual tests, extract personally identifiable information (PII) shared over both plaintext and encrypted connections, and analyze the data to understand differences in user-data collection across platforms for the same service. Our findings indicate that while all platforms expose user data, there are opportunities to significantly limit information sharing by selectively using the app or web version of a service.

## 1. Introduction
Web browsers and mobile apps are the primary means through which users interact with online services such as social media, news, weather, and dating. Many of these services are provided for free, with providers supporting their costs through advertising and data analytics. This raises important privacy concerns regarding the collection and use of user information.

Previous research has investigated information collection in either the web browsing environment [8, 15, 22, 24, 33–35] or the mobile environment [29, 38, 42]. While the web has more sophisticated tracking infrastructure, mobile apps have more direct access to sensitive information through APIs. However, no prior work has directly compared these media for the same service to answer a fundamental question: Is there a medium that is better for privacy—app or web?

This paper provides the first comparative analysis, addressing two key challenges. First, we gather a representative sample of information exposed by 50 free online services via both apps and websites. Second, we reliably identify PII in network traffic generated by these services. By providing greater transparency into how apps and websites share PII, we aim to help users make informed decisions about how they interact with online services.

## 2. Background and Related Work
Users are increasingly concerned about the amount of tracking and data collection conducted by online services [32, 41]. In response, regulators such as the FTC, FCC, and the EU Commission have enacted rules to protect consumer privacy. Non-profits like the Data Transparency Lab and Mozilla support efforts to increase transparency, and tools like AdBlock and Disconnect limit tracking.

Research has focused on identifying when PII is exposed by online services, but typically only in the context of either web sites or apps. To our knowledge, we are the first to directly compare information gathered through both web sites and apps for the same online service, allowing us to provide a relative ranking of which one is less invasive according to various metrics.

### 2.1 Web Privacy
Researchers have long observed that advertisers and analytics companies track users via web content [25]. This has led to extensive research on web tracking, including understanding the tracking ecosystem, specific tracking techniques, and geographic variations [11, 18, 26, 27, 5, 8, 15, 22, 24, 33–35, 39, 16]. While several proposals aim to help users regain control over their privacy, tracking remains pervasive.

Our paper focuses on characterizing third-party tracking and the PII collected by services that are also available as apps. We specifically examine web tracking and its privacy implications from mobile browsers, an increasingly important distinction due to the unique capabilities of mobile devices.

### 2.2 Mobile App Privacy
Due to the rich sensors, APIs, and availability of PII on mobile devices, a large body of work focuses on understanding privacy from the perspective of tracking and data collection by mobile apps. Early studies showed that popular apps exposed location, usernames, passwords, and phone numbers [40]. Follow-up work confirmed similar behavior at scale [29, 38, 42]. Several projects focus on detecting and mitigating privacy violations from mobile apps [6, 7, 12, 14, 17, 19, 21, 23, 30, 38, 43–46].

In this paper, we compare the PII exposed by mobile apps and web sites for the same service, using tools from prior work [38] to identify PII leaks in mobile-device traffic.

### 2.3 Mobile Experimentation Methods
Most previous work uses automated tests to analyze mobile apps [9, 20, 31], but these methods cannot explore apps that require signing in [13]. Additionally, automated tools reveal only a small fraction of the PII exposed during manual interactions [38]. In this work, we use manual tests to ensure that PII exposure is representative of what users would see and to ensure consistent exploration of service features across both web and app.

## 3. Data Collection
In this section, we describe the online services we investigated, our experimental methodology for eliciting and identifying PII sent over the network, and high-level statistics about our gathered dataset.

### 3.1 Selecting Online Services
We selected online services based on the following criteria: 1) popularity (according to app store rankings) and/or being "featured" in an app store, 2) availability of a free app in the Google Play Store and the Apple App Store, 3) equivalent functionality via a mobile web browser, and 4) no implementation of certificate pinning. For example, Instagram and Pandora do not meet these criteria, and Facebook's app fails due to certificate pinning.

We crawled the top 100 free Android apps listed in the US version of the Google Play Store on March 23, 2016, and added "featured and recommended" apps promoted on the home page. We selected a subset of 50 services, covering popular apps across different categories, with a focus on those likely to collect PII (e.g., shopping, travel, entertainment).

### 3.2 Experiment Methodology
Understanding the privacy implications of mobile apps and web sites requires interacting with these services in ways that normal users would. Automated testing frameworks are tempting but miss important UI features and lack good tools for iOS and mobile browsers [38]. Instead, we conducted manual tests of 50 online services, ensuring that testers could interpret UIs, enter reasonable data, and exercise similar service functionality.

#### Test Environment
Each test involved interacting with a given service via an app or web site for four minutes. We collected network traffic using Meddle [37] and Mitmproxy [3] to capture both HTTP and the plaintext content of HTTPS flows. For each service requiring a login, we created a new account using a previously unused email address.

We used two phones (Nexus 4 and Nexus 5) running stock Android 4.4 and an iPhone 5 running iOS 9.3.1. All three phones were factory reset before experiments and included only the stock services and the 50 apps evaluated in this work.

#### Interacting with Services
Each experiment followed these steps:
1. Install the service’s app.
2. Connect the device to Meddle using a VPN tunnel.
3. Open the app and use it for its intended purpose for approximately four minutes.
4. Approve any system permission requests.
5. Close the VPN connection and uninstall the app.
6. Repeat the procedure using the operating system’s default browser (Chrome for Android, Safari on iOS) in private mode.
7. Conduct identical operations as in the app, using the same pre-created account credentials.

While four minutes may not exhaustively cover all potential PII leaks, it strikes a balance between adequate time to use most features and quickly covering a large number of services. Our results represent a conservative lower bound on the PII leaked from apps and web sites.

#### Filtering
To minimize background traffic, we used a clean, factory-reset lab phone, turned off background synchronization, and manually closed all background apps before each experiment. We also filtered traffic to domains associated with OS services (e.g., Google Play Services and Apple iCloud).

#### Identifying PII
Identifying PII in network traces was simplified by our controlled experiments, where we knew all the PII available on our test devices. We used the ReCon tool [38], which uses machine learning to detect likely PII without needing precise values. We augmented ReCon's results with PII found via direct string matching and manually verified predictions to exclude false positives.