technology in the TCP/IP protocol suite. For example, the IPv6 working group devotes its efforts to 
furthering the standards of IPv6. After a period of review and a consensus of acceptance, the IETF 
publishes the final version of the Internet draft as an RFC and assigns it an RFC number.  
RFCs also receive one of five requirement levels, as listed in Table 1-1. 
Chapter 1 – Introduction to TCP/IP 
TCP/IP Fundamentals for Microsoft Windows  
Page: 6 
Requirement level 
Description 
Required 
Must be implemented on all TCP/IP-based hosts and 
gateways. 
Recommended 
Encouraged that all TCP/IP-based hosts and 
gateways implement the RFC specifications. 
Recommended RFCs are usually implemented. 
Elective 
Implementation is optional. Its application has been 
agreed to but never widely used. 
Limited use 
Not intended for general use. 
Not recommended 
Not recommended for implementation. 
Table 1-1  Requirement Levels of RFCs 
If an RFC is being considered as a standard, it goes through stages of development, testing, and 
acceptance. Within the Internet standards process, these stages are formally known as maturity levels. 
Internet standards have one of three maturity levels, as listed in Table 1-2. Maturity levels are 
determined by the RFC's IETF working group and are independent of requirement levels. 
Maturity level 
Description 
Proposed Standard 
A Proposed Standard specification is generally stable, 
has resolved known design choices, is believed to be 
well understood, has received significant community 
review, and appears to enjoy enough community 
interest to be considered valuable. 
Draft Standard 
A Draft Standard specification must be well 
understood and known to be quite stable, both in its 
semantics and as a basis for developing an 
implementation. 
Internet Standard 
An Internet Standard specification (which may simply 
be referred to as a Standard) is characterized by a 
high degree of technical maturity and by a generally 
held belief that the specified protocol or service 
provides significant benefit to the Internet community. 
Table 1-2  Maturity Levels of Internet Standards 
If an RFC-based standard must change, the IETF publishes a new Internet draft and, after a period of 
review, a new RFC with a new number. The original RFC is never updated. Therefore, you should verify 
that you have the most recent RFC on a particular topic or standard. For example, we reference RFCs 
throughout the chapters of this online book. If you decide to look up the technical details of an Internet 
standard in its RFC, make sure that you have the latest RFC that describes the standard. 
You can obtain RFCs from http://www.ietf.org/rfc.html. 
Chapter 1 – Introduction to TCP/IP 
TCP/IP Fundamentals for Microsoft Windows  
Page: 7 
TCP/IP Terminology 
The Internet standards use a specific set of terms when referring to network elements and concepts 
related to TCP/IP networking. These terms provide a foundation for subsequent chapters. Figure 1-1 
illustrates the components of an IP network. 
Figure 1-1  Elements of an IP network 
Common terms and concepts in TCP/IP are defined as follows: 
Node  Any device, including routers and hosts, which runs an implementation of IP. 
Router  A node that can forward IP packets not explicitly addressed to itself. On an IPv6 network, a 
router also typically advertises its presence and host configuration information.  
Host  A node that cannot forward IP packets not explicitly addressed to itself (a non-router). A host is 
typically the source and the destination of IP traffic. A host silently discards traffic that it receives but 
that is not explicitly addressed to itself. 
Upper-layer protocol  A protocol above IP that uses IP as its transport. Examples include Internet 
layer protocols such as the Internet Control Message Protocol (ICMP) and Transport layer protocols 
such as the Transmission Control Protocol (TCP) and User Datagram Protocol (UDP). (However, 
Application layer protocols that use TCP and UDP as their transports are not considered upper-layer 
protocols. File Transfer Protocol [FTP] and Domain Name System [DNS] fall into this category). For 
Chapter 1 – Introduction to TCP/IP 
TCP/IP Fundamentals for Microsoft Windows  
Page: 8 
details of the layers of the TCP/IP protocol suite, see Chapter 2, "Architectural Overview of the TCP/IP 
Protocol Suite." 
LAN segment  A portion of a subnet consisting of a single medium that is bounded by bridges or Layer 
2 switches. 
Subnet  One or more LAN segments that are bounded by routers and use the same IP address prefix. 
Other terms for subnet are network segment and link. 
Network  Two or more subnets connected by routers. Another term for network is internetwork. 
Neighbor  A node connected to the same subnet as another node. 
Interface  The representation of a physical or logical attachment of a node to a subnet. An example of 
a physical interface is a network adapter. An example of a logical interface is a tunnel interface that is 
used to send IPv6 packets across an IPv4 network. 
Address  An identifier that can be used as the source or destination of IP packets and that is assigned 
at the Internet layer to an interface or set of interfaces. 
Packet  The protocol data unit (PDU) that exists at the Internet layer and comprises an IP header and 
payload. 
Chapter 1 – Introduction to TCP/IP 
TCP/IP Fundamentals for Microsoft Windows  
Page: 9 
TCP/IP Components in Windows 
Table 1-3 lists the advantages of the TCP/IP protocol suite and the inclusion of TCP/IP components in 
Windows. 
Advantages of the TCP/IP protocol suite 
Advantages of TCP/IP components in Windows 
A standard, routable enterprise networking protocol 
that is the most complete and accepted protocol 
available. All modern operating systems support 
TCP/IP, and most large private networks rely on 
TCP/IP for much of their traffic. 
TCP/IP components in Windows enable enterprise 
networking and connectivity for Windows and non-
Windows–based computers. 
A technology for connecting dissimilar systems. Many 
TCP/IP application protocols were designed to access 
and transfer data between dissimilar systems. These 
protocols include HTTP, FTP, and Telnet. 
TCP/IP components in Windows allow standards-
based connectivity to other operating system 
platforms. 
A robust, scaleable, cross-platform client/server 
framework.  
TCP/IP components in Windows support the Windows 
Sockets application programming interface, which 
developers use to create client/server applications. 
A method of gaining access to the Internet. 
Windows-based computers are Internet-ready. 
Table 1-3  Advantages of the TCP/IP protocol suite and TCP/IP components in Windows 
Windows includes both an IPv4-based and an IPv6-based TCP/IP component. 
Configuring the IPv4-based TCP/IP Component in Windows 
The IPv4-based TCP/IP component in Windows Server 2008 and Windows Vista is installed by default 
and appears as the Internet Protocol Version 4 (TCP/IPv4) component in the Network Connections 
folder. Unlike Windows XP and Windows Server 2003, you can uninstall the IPv4-based TCP/IP 
component with the netsh interface ipv4 uninstall command. 
The IPv4-based TCP/IP component in Windows Server 2003 and Windows XP is installed by default 
and appears as the Internet Protocol (TCP/IP) component in the Network Connections folder. You 
cannot uninstall the Internet Protocol (TCP/IP) component. However, you can restore its default 
configuration by using the netsh interface ip reset command.  
The Internet Protocol Version 4 (TCP/IPv4) or Internet Protocol (TCP/IP) component can be configured 
to obtain its configuration automatically or from manually specified settings. By default, this component 
is configured to obtain an address configuration automatically. Figure 1-2 shows the General tab of the 
Internet Protocol Version 4 (TCP/IPv4) Properties dialog box. 
Chapter 1 – Introduction to TCP/IP 
TCP/IP Fundamentals for Microsoft Windows  
Page: 10 
Figure 1-2  The General tab of the properties dialog box for the Internet Protocol Version 4 (TCP/IPv4) component 
Automatic Configuration 
If you specify automatic configuration, the Internet Protocol Version 4 (TCP/IPv4) or Internet Protocol 
(TCP/IP) component attempts to locate a Dynamic Host Configuration Protocol (DHCP) server and 
obtain a configuration when Windows starts. Many TCP/IP networks use DHCP servers that are 
configured to allocate TCP/IP configuration information to clients on the network. For more information 
about DHCP, see Chapter 6, "Dynamic Host Configuration Protocol." 
If the Internet Protocol Version 4 (TCP/IPv4) or Internet Protocol (TCP/IP) component fails to locate a 
DHCP server, TCP/IP checks the setting on the Alternate Configuration tab. Figure 1-3 shows this 
tab. 
Figure 1-3  The Alternate Configuration tab of the Internet Protocol Version 4 (TCP/IPv4) component 
This tab contains two options: 
Chapter 1 – Introduction to TCP/IP 
TCP/IP Fundamentals for Microsoft Windows  
Page: 11 
Automatic Private IP Address  If you choose this option, Automatic Private IP Addressing (APIPA) is 
used. TCP/IP in Windows automatically chooses an IPv4 address from the range 169.254.0.1 to 
169.254.255.254, using the subnet mask of 255.255.0.0. The DHCP client ensures that the IPv4 
address that TCP/IP in Windows has chosen is not already in use. If the address is in use, TCP/IP in 
Windows chooses another IPv4 address and repeats this process for up to 10 addresses. When 
TCP/IP in Windows has chosen an address that the DHCP client has verified as not in use, TCP/IP in 
Windows configures the interface with this address. With APIPA, users on single-subnet Small 
Office/Home Office (SOHO) networks can use TCP/IP without having to perform manual configuration 
or set up a DHCP server. APIPA does not configure a default gateway. Therefore, only local subnet 
traffic is possible. 
User Configured  If you choose this option, TCP/IP in Windows uses the configuration that you 
specify. This option is useful when a computer is used on more than one network, not all of the 
networks have a DHCP server, and an APIPA configuration is not wanted. For example, you might want 
to choose this option if you have a laptop computer that you use both at the office and at home. At the 
office, the laptop uses a TCP/IP configuration from a DHCP server. At home, where no DHCP server is 
present, the laptop automatically uses the alternate manual configuration. This option provides easy 
access to home network devices and the Internet and allows seamless operation on both networks, 
without requiring you to manually reconfigure TCP/IP in Windows. 
If you specify an APIPA configuration or an alternate manual configuration, TCP/IP in Windows 
continues to check for a DHCP server in the background every 5 minutes. If TCP/IP finds a DHCP 
server, it stops using the APIPA or alternate manual configuration and uses the IPv4 address 
configuration offered by the DHCP server. 
Manual Configuration 
To configure the Internet Protocol Version 4 (TCP/IPv4) or Internet Protocol (TCP/IP) component 
manually, also known as creating a static configuration, you must at a minimum assign the following: 
IP address  An IP (IPv4) address is a logical 32-bit address that is used to identify the interface of an 
IPv4-based TCP/IP node. Each IPv4 address has two parts: the subnet prefix and the host ID. The 
subnet prefix identifies all hosts that are on the same physical network. The host ID identifies a host on 
the network. Each interface on an IPv4-based TCP/IP network requires a unique IPv4 address, such as 
131.107.2.200. 
Subnet mask  A subnet mask allows the Internet Protocol Version 4 (TCP/IPv4) or Internet Protocol 
(TCP/IP) component to distinguish the subnet prefix from the host ID. An example of a subnet mask is 
255.255.255.0. 
For more information about IPv4 addresses and subnet masks, see Chapter 3, "IP Addressing," and 
Chapter 4, "Subnetting." 
You must configure these parameters for each network adapter in the node that uses the Internet 
Protocol Version 4 (TCP/IPv4) or Internet Protocol (TCP/IP) component. If you want to connect to 
nodes beyond the local subnet, you must also assign the IPv4 address of a default gateway, which is a 
router on the local subnet to which the node is attached. The Internet Protocol Version 4 (TCP/IPv4) or 
Internet Protocol (TCP/IP) component sends packets that are destined for remote networks to the 
default gateway, if no other routes are configured on the local host. 
Chapter 1 – Introduction to TCP/IP 
TCP/IP Fundamentals for Microsoft Windows  
Page: 12 
You can also manually configure the IPv4 addresses of primary and alternate DNS servers. The 
Internet Protocol Version 4 (TCP/IPv4) or Internet Protocol (TCP/IP) component uses DNS servers to 
resolve names, such as www.example.com, to IPv4 or IPv6 addresses. 
Figure 1-4 shows an example of a manual configuration for the Internet Protocol Version 4 (TCP/IPv4) 
component. 
Figure 1-4  An example of a manual configuration for the Internet Protocol Version 4 (TCP/IPv4) component 
You can also manually configure the Internet Protocol Version 4 (TCP/IPv4) component using netsh 
interface ipv4 commands and the Internet Protocol (TCP/IP) component using netsh interface ip 
commands at a command prompt. 
Installing and Configuring the IPv6-based TCP/IP Component in Windows 
The procedure for installing and manually configuring the IPv6-based TCP/IP component in Windows 
depends on the version of Windows. All versions of IPv6 in Windows support IPv6 address 
autoconfiguration. All IPv6 nodes automatically create unique IPv6 addresses for use between 
neighboring nodes on a subnet. To reach remote locations, each IPv6 host upon startup sends a 
Router Solicitation message in an attempt to discover the local routers on the subnet. An IPv6 router on 
the subnet responds with a Router Advertisement message, which the IPv6 host uses to automatically 
configure IPv6 addresses, the default router, and other IPv6 settings. 
Windows Vista and Windows Server 2008 
In Windows Vista and Windows Server 2008, the Internet Protocol Version 6 (TCP/IPv6) component is 
installed by default and cannot be uninstalled. You do not need to configure the typical IPv6 host 
manually. However, you can manually configure the Internet Protocol Version 6 (TCP/IPv6) component 
through the Windows graphical user interface or with commands in the netsh interface ipv6 context. 
To manually configure IPv6 settings through the Windows graphical user interface, do the following: 
1. From the Network Connections folder, right-click the connection or adapter on which you want to 
manually configure IPv6, and then click Properties. 
2. On the Networking tab for the properties of the connection or adapter, double-click Internet 
Chapter 1 – Introduction to TCP/IP 
TCP/IP Fundamentals for Microsoft Windows  
Page: 13 
Protocol Version 6 (TCP/IPv6) in the list under This connection uses the following items. 
Figure 1-5 shows an example of the Internet Protocol Version 6 (TCP/IPv6) Properties dialog box. 
Figure 1-5  An example of Internet Protocol Version 6 (TCP/IPv6) Properties dialog box 
For a manually configured address, you must specify an IPv6 address and subnet prefix length (almost 
always 64). You can also specify the IPv6 addresses of a default gateway and primary and secondary 
DNS servers. 
Alternately, you can use the netsh interface ipv6 commands to add addresses or routes and configure 
other settings. For more information, see Configuring IPv6 with Windows Vista.  
Windows XP and Windows Server 2003 
Windows XP with Service Pack 1 (SP1) and Windows Server 2003 were the first versions of Windows 
to support IPv6 for production use. You install IPv6 as a component in Network Connections; the 
component is named Microsoft TCP/IP Version 6 in Windows Server 2003 and Microsoft IPv6 
Developer Edition in Windows XP with SP1. 
Unlike the Internet Protocol (TCP/IP) component, the IPv6 component is not installed by default, and 
you can uninstall it. You can install the IPv6 component in the following ways: 
Using the Network Connections folder. 
Using the netsh interface ipv6 install command. 
To install the IPv6 component in Windows Server 2003 using the Network Connections folder, do the 
following: 
1. From the Network Connections folder, right-click any local area connection, and then click 
Properties.  
2. Click Install.  
3. In the Select Network Component Type dialog box, click Protocol, and then click Add.  
4. In the Select Network Protocol dialog box, click Microsoft TCP/IP Version 6, and then click OK.  
Chapter 1 – Introduction to TCP/IP 
TCP/IP Fundamentals for Microsoft Windows  
Page: 14 
5. Click Close to save changes.  
The IPv6 component in Windows XP and Windows Server 2003 has no properties dialog box from 
which you can configure IPv6 addresses and settings. Configuration should be automatic for IPv6 hosts 
and manual for IPv6 routers. 
If a host does require manual configuration, use the netsh interface ipv6 commands to add addresses 
or routes and configure other settings. If you are configuring a computer running Windows XP with SP1 
or later or Windows Server 2003 to be an IPv6 router, then you must use the netsh interface ipv6 
commands to manually configure the IPv6 component with address prefixes. 
For more information about configuring an IPv6 router, see Chapter 5, "IP Routing." 
Name Resolution Files in Windows 
The IPv4 and IPv6 components in Windows support the use of name resolution files to resolve the 
names of destinations, networks, protocols, and services. Table 1-4 lists these name resolution files, 
which are stored in the Systemroot\System32\Drivers\Etc folder. 
File name 
Description 
Hosts 
Resolves host names to IPv4 or IPv6 addresses. For 
more information, see Chapter 7, "Host Name 
Resolution." 
Lmhosts 