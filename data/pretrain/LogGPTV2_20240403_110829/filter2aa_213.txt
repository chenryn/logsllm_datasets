### Building Your Own Secure Storage Space: An Open-Source Alternative to Dropbox

#### Introduction
In this presentation, we will explore the concept of creating a secure, open-source alternative to Dropbox. We will discuss the current state of Dropbox, its security and privacy issues, and how we can build a better solution using open-source tools.

#### Presenter
**Phil Cryer (@fak3r)**
- **Role**: Open Source Technologist
- **Event**: DEFCON 19 - August 2011
- **Bio**:
  - Systems Engineer
  - Security Researcher and Privacy Advocate (EFF)
  - Currently working on sharing biodiversity data
  - Aims to balance security with openness
  - Over ten years of experience with Linux and open source
  - Blog: [A Fistful of Soundtracks](http://aﬁstfulofsoundtracks.blogspot.com)

#### About Dropbox
Dropbox is a popular cloud storage service that allows users to sync files and media across multiple platforms and devices. It provides 2 GB of free storage, with options to pay for more. Key features include:
- File syncing between machines
- Easy file sharing
- Desktop and mobile access

**Growth and Funding:**
- **2007 June**: Founded and received Series A funding
- **2007 September**: Received $1.2M in seed funding (Y Combinator)
- **2007 October**: Received $6M in Series A funding
- **2008 Fall**: Secured $7.2M Series A funding (Sequoia Capital, Accel Partners)
- **2009**: 2 million users
- **2010**: 4 million users
- **2011 April**: 25 million users, 200 million files saved daily, over 1 million every five minutes

#### Security and Privacy Concerns
While Dropbox claims to be secure, several issues have been identified by security researchers:
- **Data Deduplication**: While it saves storage and bandwidth, it compromises user privacy.
- **Encryption**: Files are encrypted, but Dropbox can still access them, raising concerns about government searches, rogue employees, and copyright infringement.
- **Authentication Issues**: Vulnerabilities in the authentication mechanism have been discovered, allowing unauthorized access.
- **Privacy Policies**: The terms of service and privacy policies have been criticized for being vague and not adequately protecting user data.

#### Case Studies
- **Christopher Soghoian**: Highlighted that Dropbox could see the contents of files, putting users at risk.
- **Derek Newton**: Identified issues with the `config.db` file, which can be used to gain unauthorized access to a user's Dropbox account.
- **Jim Harper**: Discussed the broader implications of cloud storage on user privacy, emphasizing the need for stronger protections.

#### Recent Incidents
- **Password Bug (June 2011)**: A security glitch allowed users to log into any account without a password for four hours.

#### Building an Open-Source Alternative
Given the security and privacy concerns, we can create a better, more secure solution using open-source tools. Here’s a step-by-step approach:

1. **File Syncing Tools**:
   - **rsync**: For efficient file synchronization.
   - **Unison**: For bidirectional file synchronization.

2. **Trigger Mechanism**:
   - **inotify**: Monitors file system events (read, write, delete).

3. **Secure Data Transfer**:
   - **OpenSSH**: For secure, encrypted data transfer.

4. **Scripting**:
   - Use `lsyncd` to monitor a directory and trigger `rsync` or `Unison` when changes are detected.
   - Use `cron` to periodically check for new files from other clients.

5. **Community Involvement**:
   - Share the idea and gather feedback.
   - Commit the project as open source (BSD licensed).
   - Host all source code publicly.
   - Focus on transparency and community involvement.

#### Project: lipsync
- **Name**: lipsync
- **GitHub Repository**: [lipsync](https://github.com/philcryer/lipsync)
- **Current Features**:
  - `lsyncd2` daemon for monitoring file changes via `inotify`.
  - `rsync` over SSH for secure data transfer.
  - Cross-platform support (Linux, macOS, preliminary Windows support).

- **Future Plans**:
  - Expand cross-platform support (Windows, Android, iOS).
  - Enhance security with encrypted filesystems and peer-to-peer (P2P) options.
  - Incorporate more community ideas and contributions.

#### Conclusion
Creating a secure, open-source file distribution app that protects user privacy and security is possible. However, it requires the collective effort of the open-source community. By getting involved, trying out and using `lipsync`, forking the project, joining the mailing list, and submitting issues, we can build a better alternative to proprietary solutions like Dropbox.

- **Project Website**: [lipsync.it](http://lipsync.it)
- **Presenter Website**: [philcryer.com](http://philcryer.com)
- **Twitter**: [@fak3r](https://twitter.com/fak3r)

**Special Thanks**:
- To the open-source community for their support and contributions.

**Keep circulating the tapes!**