*testlibpq.c
*/
#include#include#include
staticvoidexit_nicely(PGconn*conn)
{
PQfinish(conn);exit(1);
}
int
main(intargc,char**argv)
{
constchar*conninfo;
PGconn *conn;PGresult *res;int nFields;
int i,j;
/*
用户在命令行上提供了conninfo字符串的值时使用该值
否则环境变量或者所有其它连接参数
都使用缺省值。
*/
if(argc>1)
conninfo=argv[1];else
conninfo="dbname=postgresport=42121host='10.44.133.171'application_name=test
connect_timeout=5sslmode=allowuser='test'password='test_1234'";
/* 连接数据库 */
conn=PQconnectdb(conninfo);
/* 检查后端连接成功建立 */
if(PQstatus(conn)!=CONNECTION_OK)
{
fprintf(stderr,"Connectiontodatabasefailed:%s",PQerrorMessage(conn));
exit_nicely(conn);
}
/*
测试实例涉及游标的使用时候必须使用事务块
南大通用数据技术股份有限公司
119
GBase 8s V8.8开发者手册
*把全部放在一个 "select*frompg_database"
PQexec() 里，过于简单，不推荐使用
*/
/* 开始一个事务块 */
res=PQexec(conn,"BEGIN");
if(PQresultStatus(res)!=PGRES_COMMAND_OK)
{
fprintf(stderr,"BEGINcommandfailed:%s",PQerrorMessage(conn));PQclear(res);
exit_nicely(conn);
}
/*
在结果不需要的时候PQclearPGresult，以避免内存泄漏
*/PQclear(res);
/*
从系统表 pg_database（数据库的系统目录）里抓取数据
*/
res=PQexec(conn,"DECLAREmyportalCURSORFORselect*frompg_database");if
(PQresultStatus(res)!=PGRES_COMMAND_OK)
{
fprintf(stderr,"DECLARECURSORfailed:%s",PQerrorMessage(conn));PQclear(res);
exit_nicely(conn);
}
PQclear(res);
res=PQexec(conn,"FETCHALLinmyportal");if(PQresultStatus(res)!=
PGRES_TUPLES_OK)
{
fprintf(stderr,"FETCHALLfailed:%s",PQerrorMessage(conn));PQclear(res);
exit_nicely(conn);
}
/* 打 印 属 性 名 称 */nFields=PQnfields(res);
for(i=0;i#include#include#include#include
/*forntohl/htonl*/#include#include
staticvoidexit_nicely(PGconn*conn)
{
PQfinish(conn);exit(1);
}
/*
这个函数打印查询结果，这些结果是二进制格式，从上面的
注释里面创建的表中抓取出来的
*/
staticvoidshow_binary_results(PGresult*res)
{
int i;
int i_fnum,t_fnum;
南大通用数据技术股份有限公司
121
GBase 8s V8.8开发者手册
/* 使用 PQfnumber 来避免对结果中的字段顺序进行假设 */i_fnum=PQfnumber(res,
"i");
t_fnum=PQfnumber(res,"t");
for(i=0;i1)
conninfo=argv[1];else
南大通用数据技术股份有限公司
122
GBase 8s V8.8开发者手册
conninfo="dbname=postgresport=42121host='10.44.133.171'application_name=test
connect_timeout=5sslmode=allowuser='test'password='test_1234'";
/* 和数据库建立连接 */
conn=PQconnectdb(conninfo);
/* 检查与服务器的连接是否成功建立 */
if(PQstatus(conn)!=CONNECTION_OK)
{
fprintf(stderr,"Connectiontodatabasefailed:%s",PQerrorMessage(conn));
exit_nicely(conn);
}
/* 把整数值 "2" 转换成网络字节序 */binaryIntVal=htonl((uint32_t)2);
/* 为 PQexecParams 设置参数数组 */paramValues[0]=(char*)&binaryIntVal;
paramLengths[0]=sizeof(binaryIntVal);paramFormats[0]=1;/* 二进制 */
res=PQexecParams(conn,
"SELECT*FROMtest1WHEREi=$1::int4",
1, /* 一个参数 */
NULL,/* 让后端推导参数类型 */paramValues,
paramLengths,paramFormats,
1); /* 要求二进制结果 */
if(PQresultStatus(res)!=PGRES_TUPLES_OK)
{
fprintf(stderr,"SELECTfailed:%s",PQerrorMessage(conn));PQclear(res);
exit_nicely(conn);
}
show_binary_results(res);
PQclear(res);
/* 关闭与数据库的连接并清理 */PQfinish(conn);
return0;
}
6.4.4 libpq 接口参数
请参见8.3libpq。
6.4.5 链接参数
表 6-12 链接参数
参数 描述
host 要链接的主机名。如果主机名以斜杠开头，则它声明使用Unix域套接
字通讯而不是TCP/IP通讯；该值就是套接字文件所存储的目录。如果
南大通用数据技术股份有限公司
123
GBase 8s V8.8开发者手册
没有声明host，那么默认是与位于/tmp目录（或者安装数据库的时候声
明的套接字目录）里面的Unix-域套接字链接。在没有Unix域套接字
的机器上，默认与localhost链接。
接受以‘,’分割的字符串来指定多个主机名，支持指定多个主机名。
hostaddr 与之链接的主机的IP地址，是标准的IPv4地址格式，比如，172.28.40.9。
如果机器支持IPv6，那么也可以使用IPv6的地址。如果声明了一个非
空的字符串，那么使用TCP/IP通讯机制。
接受以‘,’分割的字符串来指定多个IP地址，支持指定多个IP地址。
使用hostaddr取代host可以让应用避免一次主机名查找，这一点对于
那些有时间约束的应用来说可能是非常重要的。不过，GSSAPI或 SSPI
认证方法要求主机名（host）。因此，应用下面的规则：
 如果声明了不带hostaddr的host那么就强制进行主机名查找。
 如果声明中没有host，hostaddr的值给出服务器网络地址；如果认
证方法要求主机名，那么链接尝试将失败。
 如果同时声明了host和hostaddr，那么hostaddr的值作为服务器网
络地址。host的值将被忽略，除非认证方法需要它，在这种情况下
它将被用作主机名。
须知
要注意如果host不是网络地址hostaddr处的服务器名，那么认证很有
可能失败。
如果主机名（host）和主机地址都没有，那么libpq将使用一个本地的
Unix域套接字进行链接；或者是在没有Unix域套接字的机器上，它将
尝试与localhost链接。
port 主机服务器的端口号，或者在Unix域套接字链接时的套接字扩展文件
名。
接受以‘,’分割的字符串来指定多个端口号，支持指定多个端口号。
user 要链接的用户名，缺省是与运行该应用的用户操作系统名同名的用户。
dbname 数据库名，缺省和用户名相同。
password 如果服务器要求口令认证，所用的口令。
connect_timeout 链接的最大等待时间，以秒计（用十进制整数字符串书写），0或者不
声明表示无穷。不建议把链接超时的值设置得小于2秒。
client_encoding 为这个链接设置client_encoding配置参数。除了对应的服务器选项接
南大通用数据技术股份有限公司
124
GBase 8s V8.8开发者手册
受的值，你可以使用 auto 从客户端中的当前环境中确定正确的编码
（Unix系统上是LC_CTYPE环境变量）。
tty 忽略（以前，该参数指定了发送服务器调试输出的位置）。
options 添加命令行选项以在运行时发送到服务器。
application_name 为application_name配置参数指定一个值，表明当前用户身份。
fallback_ap 为application_name配置参数指定一个后补值。如果通过一个连接参数
plication_name 或PGAPPNAME环境变量没有为application_name给定一个值， 将使
用这个值。在希望设置一个默认应用名但不希望它被用户覆盖的一般工
具程序中指定一个后补值很有用。
keepalives 控制客户端侧的TCP保持激活是否使用。缺省值是1，意思为打开，但
是如果不想要保持激活，你可以更改为0，意思为关闭。通过Unix 域
套接字做的链接忽略这个参数。
keepalives_idle 在TCP应该发送一个保持激活的信息给服务器之后，控制不活动的秒
数。0值表示使用系统缺省。通过Unix域套接字做的链接或者如果禁
用了保持激活则忽略这个参数。
keepalives_i 在TCP保持激活信息没有被应该传播的服务器承认之后，控制秒数。0
nterval 值表示使用系统缺省。通过Unix域套接字做的链接或者如果禁用了保
持激活则忽略这个参数。
keepalives_count 添加命令行选项以在运行时发送到服务器。例如，设置为-c
comm_debug_mode=off设置guc参数comm_debug_mode参数的会话的
值为off。
rw_timeout 设置客户端连接读写超时时间。
sslmode 启用SSL加密的方式：
 disable：不使用SSL安全连接。
 allow：如果数据库服务器要求使用，则可以使用SSL安全加密连
接，但不验证数据库服务器的真实性。
 prefer：如果数据库支持，那么首选使用SSL安全加密连接，但不
验证数据库服务器的真实性。
 require：必须使用SSL安全连接，但是只做了数据加密，而并不验
证数据库服务器的真实性。
 verify-ca：必须使用SSL安全连接，当前windowsodbc不支持cert
南大通用数据技术股份有限公司
125