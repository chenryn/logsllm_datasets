    ``` literallayout
    /swapfile swap swap defaults 0 0
    ```
    下次系统引导时，它会激活新的 swap 文件。
6.  重新生成挂载单元以便您的系统注册新的 `/etc/fstab`{.literal} 配置：
    ``` literallayout
    # systemctl daemon-reload
    ```
7.  立即激活 swap 文件：
    ``` literallayout
    # swapon /swapfile
    ```
8.  要测试新 swap 文件是否已成功创建并激活，请检查活跃 swap 空间：
    ``` literallayout
    $ cat /proc/swaps
    $ free -h
    ```
:::
:::
:::
::: section
::: titlepage
# []{#getting-started-with-swap_managing-storage-devices.html#removing-swap-space_getting-started-with-swap}删除 swap 空间 {.title}
:::
这部分论述了如何在安装后减少 swap 空间。例如：您将系统中的 RAM 大小从
1GB 降到 512MB，但仍分配了 2GB swap 空间。可能最好将交换空间大小减少到 1
GB，因为较大的 2 GB 可能会浪费磁盘空间。
根据您需要的内容，您可以选择以下三个选项之一：减少现有 LVM2
逻辑卷上的交换空间、删除用于交换的整个 LVM2 逻辑卷，或删除交换文件。
::: section
::: titlepage
## []{#getting-started-with-swap_managing-storage-devices.html#reducing-swap-on-an-lvm2-logical-volume_removing-swap-space}在 LVM2 逻辑卷中减少 swap {.title}
:::
这个步骤描述了如何在 LVM2 逻辑卷中减少交换。假设
`/dev/VolGroup00/LogVol01`{.literal} 是您要缩小的卷。
::: orderedlist
**流程**
1.  为关联的逻辑卷禁用交换：
    ``` literallayout
    # swapoff -v /dev/VolGroup00/LogVol01
    ```
2.  将 LVM2 逻辑卷减少 512 MB：
    ``` literallayout
    # lvreduce /dev/VolGroup00/LogVol01 -L -512M
    ```
3.  格式化新 swap 空间：
    ``` literallayout
    # mkswap /dev/VolGroup00/LogVol01
    ```
4.  在逻辑卷中激活 swap：
    ``` literallayout
    # swapon -v /dev/VolGroup00/LogVol01
    ```
5.  要测试是否成功缩小 swap 逻辑卷，请检查活跃 swap 空间：
    ``` literallayout
    $ cat /proc/swaps
    $ free -h
    ```
:::
:::
::: section
::: titlepage
## []{#getting-started-with-swap_managing-storage-devices.html#removing-an-lvm2-logical-volume-for-swap_removing-swap-space}为 swap 删除 LVM2 逻辑卷 {.title}
:::
这个步骤描述了如何为 swap 删除 LVM2 逻辑卷。假设
`/dev/VolGroup00/LogVol02`{.literal} 是您要删除的交换卷。
::: orderedlist
**流程**
1.  为关联的逻辑卷禁用交换：
    ``` literallayout
    # swapoff -v /dev/VolGroup00/LogVol02
    ```
2.  删除 LVM2 逻辑卷：
    ``` literallayout
    # lvremove /dev/VolGroup00/LogVol02
    ```
3.  从 `/etc/fstab`{.literal} 文件中删除以下关联的条目：
    ``` literallayout
    /dev/VolGroup00/LogVol02 swap swap defaults 0 0
    ```
4.  重新生成挂载单元以便您的系统注册新配置：
    ``` literallayout
    # systemctl daemon-reload
    ```
5.  要测试是否成功删除了逻辑卷，请检查活跃 swap 空间：
    ``` literallayout
    $ cat /proc/swaps
    $ free -h
    ```
:::
:::
::: section
::: titlepage
## []{#getting-started-with-swap_managing-storage-devices.html#removing-a-swap-file_removing-swap-space}删除交换文件 {.title}
:::
这个步骤描述了如何删除交换文件。
::: orderedlist
**流程**
1.  在 shell 提示下，执行以下命令禁用交换文件（其中
    `/swapfile`{.literal} 是交换文件）:
    ``` literallayout
    # swapoff -v /swapfile
    ```
2.  相应地从 `/etc/fstab`{.literal} 文件中删除其条目。
3.  重新生成挂载单元以便您的系统注册新配置：
    ``` literallayout
    # systemctl daemon-reload
    ```
4.  删除实际文件：
    ``` literallayout
    # rm /swapfile
    ```
:::
:::
:::
:::
[]{#assembly_managing-system-upgrades-with-snapshots_managing-storage-devices.html}
::: chapter
::: titlepage
# []{#assembly_managing-system-upgrades-with-snapshots_managing-storage-devices.html#assembly_managing-system-upgrades-with-snapshots_managing-storage-devices}第 12 章 使用快照管理系统升级 {.title}
:::
作为系统管理员，您可以使用 `Boom`{.literal}
引导管理器、`Leapp`{.literal} 实用程序和 OS 现代化框架对 Red Hat
Enterprise Linux 系统执行回滚的升级。
这个用户故事中提到的程序有以下限制：
::: itemizedlist
-   它不适用于您的系统树中的多个文件系统，例如：一个独立的
    `/var`{.literal} 或者 `/usr`{.literal} 分区。
-   它不适用于 RHUI 系统。考虑创建虚拟机的快照，而不是使用
    `Boom`{.literal} 工具。
-   目前，此用户案例仅涵盖具有传统 BIOS 和 Intel
    架构的现场系统。您只能在使用 BIOS 进行引导的 Red Hat Enterprise
    Linux 7 系统中使用它。
:::
::: section
::: titlepage
# []{#assembly_managing-system-upgrades-with-snapshots_managing-storage-devices.html#con_overview-of-the-boom-process_assembly_managing-system-upgrades-with-snapshots}Boom 过程概述 {.title}
:::
使用 [**Boom**]{.strong}，您可以创建引导条目，然后可从 GRUB 2
引导装载程序菜单中选择这些条目。通过创建引导条目，现在简化了回滚功能升级的准备过程。
以下是不同的引导条目，它们是升级和回滚过程的一部分：
::: variablelist
[`Upgrade boot entry`{.literal}]{.term}
:   引导 `Leapp`{.literal} 升级环境。使用 `leapp`{.literal}
    实用程序创建和管理这个引导条目。这个引导条目会在 `leapp`{.literal}
    升级过程中自动删除。
[`Red Hat Enterprise Linux 8 boot entry`{.literal}]{.term}
:   引导升级的系统环境。使用 `leapp`{.literal}
    实用程序在成功升级后创建此引导条目。
[`Snapshot boot entry`{.literal}]{.term}
:   引导原始系统的快照，并可用于在升级尝试成功或失败后检查和测试以前的系统状态。在升级系统前，使用
    `boom`{.literal} 命令创建此引导条目。
[`Rollback boot entry`{.literal}]{.term}
:   引导原始系统环境，并将任何升级回滚到以前的系统状态。在启动升级过程的回滚时，使用
    `boom`{.literal} 命令创建此引导条目。
:::
可使用以下流程进行可回滚的升级，而无需编辑任何配置文件：
::: orderedlist
1.  创建 root 文件系统的快照或副本。
2.  使用 `boom`{.literal} 命令为当前（旧的）环境创建引导条目。
3.  升级 Red Hat Enterprise Linux 系统。
4.  重启系统，然后选择要使用的版本。
:::
根据更新过程的结果，应当在流程结束时清理 Red Hat Enterprise Linux
8、快照和回滚条目：
::: itemizedlist
-   如果要保留更新的 Red Hat Enterprise Linux 8 系统，使用
    `boom`{.literal} 命令删除创建的快照和回滚条目，并使用
    `lvremove`{.literal} 命令删除快照逻辑卷。更多信息请参阅
    ["删除快照"一节](#assembly_managing-system-upgrades-with-snapshots_managing-storage-devices.html#proc_deleting-the-snapshot_assembly_managing-system-upgrades-with-snapshots "删除快照"){.xref}。
-   如果要回滚到原始系统状态，合并快照和回滚引导条目，并在系统重启后删除未使用的快照和回滚引导条目。更多信息请参阅
    ["创建回滚引导条目"一节](#assembly_managing-system-upgrades-with-snapshots_managing-storage-devices.html#proc_creating-rollback-boot-entry_assembly_managing-system-upgrades-with-snapshots "创建回滚引导条目"){.xref}。
:::
::: itemizedlist
**其它资源**
-   `boom`{.literal} man page。
:::
:::
::: section
::: titlepage
# []{#assembly_managing-system-upgrades-with-snapshots_managing-storage-devices.html#proc_upgrading-to-another-version-using-boom_assembly_managing-system-upgrades-with-snapshots}使用 Boom 升级到另一个版本 {.title}
:::
除了 [**Boom 外**]{.strong}，升级过程中还会使用以下 Red Hat Enterprise
Linux 组件：
::: itemizedlist
-   逻辑卷管理器(LVM)
-   GRUB 2 引导装载程序
-   `Leapp`{.literal} 升级工具
:::
这个步骤描述了如何使用 `boom`{.literal} 命令从 Red Hat Enterprise Linux
7 升级到 Red Hat Enterprise Linux 8。
::: itemizedlist
**先决条件**
-   安装 `boom`{.literal} 软件包：
    ``` screen
    # yum install lvm2-python-boom
    ```
    确保 `lvm2-python-boom`{.literal} 软件包的版本至少为
    `boom-0.9`{.literal} （最好为 `boom-1.2`{.literal}）。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    如果要在 Red Hat Enterprise Linux 8 中安装 `boom`{.literal}
    软件包，请执行以下命令：
    ``` screen
    # yum install boom-boot
    ```
    :::
-   快照必须有足够的空间。使用以下命令在卷组和逻辑卷中查找可用空间：
    ``` screen
    # vgs
    VG  #PV  #LV  #SN  Attr  VSize    VFree
    rhel 4 2 0 wz--n- 103.89g 29.99g
    # lvs
    LV     VG    Attr     LSize  Pool Origin Data% Meta% Move Log Cpy%Sync Convert
    root rhel -wi-ao--- 68.88g
    swap rhel -wi-ao--- 5.98g
    ```
    在这里，[*rhel*]{.emphasis} 是系统的卷组，[*root*]{.emphasis} 和
    [*swap*]{.emphasis} 是系统逻辑卷。
-   查找所有挂载的逻辑卷：
    ``` screen
    # mount | grep rhel
    /dev/mapper/rhel-root on / type xfs (rw,relatime,seclabel,attr2,inode64,noquota)
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    如果存在多个条目，且附加条目的挂载点包括 \'/usr\' 或
    \'/var\'，则无法遵循以上步骤而不执行超出这个用户权限的附加步骤。
    :::
-   已安装 `Leapp`{.literal}
    软件包并启用软件程序库。如需更多信息，请参阅[为升级准备 RHEL 7
    系统部分](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/upgrading_from_rhel_7_to_rhel_8/index#preparing-a-rhel-7-system-for-the-upgrade_upgrading-from-rhel-7-to-rhel-8){.link}，以下载升级所需的软件包。
:::
::: orderedlist
**流程**
1.  创建您的 [*root*]{.emphasis} 逻辑卷快照：
    ::: itemizedlist
    -   如果您的 root 文件系统使用精简置备，请创建一个精简快照：
        在创建精简快照时，请不要定义快照大小。从精简池中分配快照。
        ``` screen
        # lvcreate -s rhel/root -n root_snapshot_before_changes
        ```
        在这里：
        ::: itemizedlist
        -   `-s`{.literal} 用于创建快照
        -   `rhel/root`{.literal} 是在逻辑卷中复制的文件系统
        -   `-n`{.literal} [*root_snapshot_before_changes*]{.emphasis}
            是快照的名称
        :::
    -   如果您的 root 文件系统使用密集置备，请创建一个厚快照：
        在创建粘性快照时,定义可在升级过程中保存所有更改的快照大小。
        ``` screen
        # lvcreate -s  rhel/root -n root_snapshot_before_changes -L 25g
        ```
        在这里：
        ::: itemizedlist
        -   `-s`{.literal} 用于创建快照
        -   `rhel/root`{.literal} 正在复制的文件系统
        -   `-n`{.literal} [*root_snapshot_before_changes*]{.emphasis}
            是快照的名称
        -   `-L`{.literal} [*25g*]{.emphasis}
            是快照大小。这个快照必须可以保存升级过程中的所有更改
            ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
            ### 重要 {.title}
            创建快照后，不会包含任何附加系统更改。
            :::
        :::
    :::