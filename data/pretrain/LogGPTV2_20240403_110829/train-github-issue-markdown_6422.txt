    trait TA { fn ta(&self) { println!("Default TA"); } }
    trait TB: TA { fn tb(&self) { println!("Default TB"); } }
    trait AutoTA: TB {}
    impl TA for T { fn ta(&self) { println!("AutoTA"); } }
    struct A;
    impl TB for A {}
The above code misses impl `TA` for `A`, but the compiler reports  
`error: the trait `AutoTA`is not implemented for the type`A` [E0277]`
Even worse, when a new piece of code is added:
    trait AutoAutoTA: TB {}
    impl AutoTA for T {}
the comiler reports:  
`error: the trait `AutoAutoTA`is not implemented for the type`A` [E0277]`
These error messages aren't accurate. example, the last implies that the only
way to fix it is to impl the AutoAutoTA.
I hope the compiler just report the direct reason. it should report:  
`error: the trait `TA`is not implemented for the type`A` [E0277]`