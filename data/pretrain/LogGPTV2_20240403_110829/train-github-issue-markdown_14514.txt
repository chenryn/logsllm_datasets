#### Description
I noticed that sklearn.metrics.pairwise.pairwise_distances function agrees
with np.linalg.norm when using np.float64 arrays, but disagrees when using
np.float32 arrays. See the code snippet below.
#### Steps/Code to Reproduce
    import numpy as np
    import scipy
    import sklearn.metrics.pairwise
    # create 64-bit vectors a and b that are very similar to each other
    a_64 = np.array([61.221637725830078125, 71.60662841796875,    -65.7512664794921875],  dtype=np.float64)
    b_64 = np.array([61.221637725830078125, 71.60894012451171875, -65.72847747802734375], dtype=np.float64)
    # create 32-bit versions of a and b
    a_32 = a_64.astype(np.float32)
    b_32 = b_64.astype(np.float32)
    # compute the distance from a to b using numpy, for both 64-bit and 32-bit
    dist_64_np = np.array([np.linalg.norm(a_64 - b_64)], dtype=np.float64)
    dist_32_np = np.array([np.linalg.norm(a_32 - b_32)], dtype=np.float32)
    # compute the distance from a to b using sklearn, for both 64-bit and 32-bit
    dist_64_sklearn = sklearn.metrics.pairwise.pairwise_distances([a_64], [b_64])
    dist_32_sklearn = sklearn.metrics.pairwise.pairwise_distances([a_32], [b_32])
    # note that the 64-bit sklearn results agree exactly with numpy, but the 32-bit results disagree
    np.set_printoptions(precision=200)
    print(dist_64_np)
    print(dist_32_np)
    print(dist_64_sklearn)
    print(dist_32_sklearn)
#### Expected Results
I expect that the results from sklearn.metrics.pairwise.pairwise_distances
would agree with np.linalg.norm for both 64-bit and 32-bit. In other words, I
expect the following output:
    [ 0.0229059506440019884643266578905240749008953571319580078125]
    [ 0.02290595136582851409912109375]
    [[ 0.0229059506440019884643266578905240749008953571319580078125]]
    [[ 0.02290595136582851409912109375]]
#### Actual Results
The code snippet above produces the following output for me:
    [ 0.0229059506440019884643266578905240749008953571319580078125]
    [ 0.02290595136582851409912109375]
    [[ 0.0229059506440019884643266578905240749008953571319580078125]]
    [[ 0.03125]]
#### Versions
    Darwin-16.6.0-x86_64-i386-64bit
    ('Python', '2.7.11 | 64-bit | (default, Jun 11 2016, 03:41:56) \n[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)]')
    ('NumPy', '1.11.3')
    ('SciPy', '0.19.0')
    ('Scikit-Learn', '0.18.1')