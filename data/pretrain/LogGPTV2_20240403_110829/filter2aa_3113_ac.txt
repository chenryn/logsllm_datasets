common routing policy. In practice, an AS announces the prefixes under its authority or on behalf of their customers 
to its upstream providers and peer ASNs. The routers that receive these updates will use them to update their routing 
tables, which are used to make routing decisions. Depending on their policy will propagate the announcement to their 
peers and providers.   
The BGP table is the accumulation of all announced prefixes with their reachability information (AS paths). An AS 
path is a sequence of ASNs through which an announced prefix can be reached [9]. The BGP table is not only 
important for packet forwarding and loop detection on every Internet router, it is also very useful to study the evolution 
of the Internet from a topology and security threat perspective. For that, we need to build an AS graph which 
represents the interconnections between peering ASNs. 
In this study, we built an AS graph using publicly available data sources. Our primary source is the RouteViews data 
from University of Oregon [10], which provides a global BGP data by collecting BGP, updates and dumps from 
hundreds of Autonomous Systems worldwide. For our measurements we augmented our dataset with BGP data from 
all the routers we operate in the OpenDNS global network of 23 data centers.  
18 
Figure 15. RouteViews website. 
Other valuable data sources that are useful for studying the IP, BGP prefix and ASN landscapes are the CIDR report 
[11] and Hurricane Electric Internet Services website [12]. 
BUILDING THE ASN GRAPH 
The BGP data is collected in MRT format as described in rfc6396.  An example MRT entry in text format looks like 
this: 
TABLE_DUMP2|1392422403|B|96.4.0.55|11686|67.215.94.0/24|11686 4436 2914 36692|IGP|96.4.0.55|0|0||NAG|| 
We mark the fields that are of interest to us in red. In this entry, 67.215.94.0/24 is an example network prefix, and 
11686 4436 2914 36692 is the associated AS path. The ASN that appears at the end of the AS is the origin ASN of 
the prefix. In this case AS 36692 is originating the prefix, the origin AS is typically the owner of the prefix or 
announcing it on behalf of their customer. 
The AS path reveals how the most right AS reaches the prefix announced by the most left, the origin, AS. In this 
example it shows that AS 11686 relies on AS 4436, who then relies on 2914 to reach 36692.  Not only does the AS 
path reveal useful topology information, it can also be used to determine business relationship between each of the 
ASNs. For example in this case it’s likely that 36692 (OpenDNS) is a customer of 2914 (NTT America). 
As described above, we will use the AS path data to build a directed graph, where an ASN is denoted by a node and 
there is a directed edge between an ASN and every one of its upstream ASNs. For example, in the BGP table entry 
above, 36692 is the origin ASN for 67.215.94.0/24, and 2914 is an upstream ASN of 36692 (the last ASN before 
reaching the origin ASN when packets are traveling towards an IP in the origin ASN), therefore that entry can be 
graphically represented as follows: 
19 
Figure 16. Graph representation of an entry of the BGP table. 
An alternative method to build the AS graph is to use the entire AS path on every prefix entry of the BGP table. In this 
case, from the example above, we can build the following edges in the graph:  36692->2914, 2914->4436, 4436-
>11686. The AS graph is built by parsing the BGP table line by line. Since many ASNs announce more than one 
prefix and we have data from hundreds of viewpoints on the Internet, this provides us with hundreds of paths to a 
single Origin AS. By assigning weights to each edge we can predict the usage of edge. 
In the directed AS graph, an AS node can have incoming and/or outgoing edges. The outgoing edges point to 
upstream ASNs and incoming edges originate from downstream ASNs. Below, we define a few terms describing the 
AS graph nodes from a directed graph topological perspective [13]. 
A source ASN is an ASN that has only outgoing edges and no incoming edges, i.e. the ASN has only upstream ASNs 
that it relies upon for connectivity and for propagating its prefix announcements. A leaf ASN is a special case where 
an ASN has a single outgoing edge and no incoming edge. This is often described as “stub” ASN in the BGP routing 
terminology. 
We define a set of ASNs that are source ASNs (or leaves) and who share the same parent(s) (upstream ASNs) as 
sibling ASNs. For clarity, we will use the more intuitive term “peripheral” ASNs to denote source ASNs for the 
remainder of this paper. 
The BGP table/ASN graph is a dynamic entity and always changing as new prefixes are announced, old prefixes are 
withdrawn, new ASNs are introduced and start advertising prefixes, while others cease to exist and withdraw all their 
prefixes. Most common changes are probably new AS relations, new peers or previously unseen relations.  
This dynamic state can be the result of multiple factors: intentional technical and business decisions, human errors, 
hardware faults, route hijacking, etc. By parsing the entries of the BGP table, we can extract two types of useful data: 
the upstream and downstream ASNs of every ASN, and IP to ASN maps (via prefix to ASN mapping). For this, we 
can load the prefix and the origin ASN data into a radix tree. With the radix tree, (given an IP as input) we can quickly 
find the best matching prefix, and consequently, matching ASN. 
Alternatives are to use services like BGPmon.net (e.g whois -h whois.bgpmon.net 8.8.8.8), Team Cymru IP to ASN 
mapping [14], GeoIPASNum.dat from maxmind [15], or http://ipinfo.io/ (e.g. curl ipinfo.io/8.8.8.8/org returns the AS 
number and AS name of Google Inc.). In this study, we discuss interesting patterns in the AS graph topology – 
typically, suspicious peripheral ASNs that are siblings, i.e., they share common parents (upstream ASNs) in the AS 
graph. By clustering peripheral nodes in the AS graph by country, we found that certain peripheral sibling ASNs in a 
few countries have been delivering similar suspicious campaigns. 
20 
USE CASE 1: SUSPICIOUS SIBLING PERIPHERAL ASNs 
During manual investigations of suspicious domains and IPs that we detected in our traffic, we observed several 
cases of sibling peripheral ASNs that are hosting similar malware payloads. In this section, we will describe one such 
use case. 
Figure 17. Malicious ASN subgraph. 
In the Figure above, we show the snapshot of a suspicious ASN subgraph taken on January 8th, 2014, consisting of 
10 sibling peripheral ASNs (57604, 8287, 50896, 49236, 29004, 45020, 44093, 48949, 49720, 50818) sharing 2 
upstream ASNs (48361 and 31500). We color the ASNs that were hosting malicious payloads in red. The malicious 
payload is identified by some AVs as Trojan-Downloader.Win32.Ldmon.A [16][17] and described as a Trickler [18]. 
Notice that most of these peripheral ASNs are small scale with one single prefix as Table 5 shows: 
Table 8. Sibling peripheral ASNs prefixes. 
ASN 
No of prefixes 
Prefixes 
57604 
1 
91.233.89.0/24 
8287 
3 
91.213.72.0/24 
91.213.93.0/24 
91.217.162.0/24 
50896 
5 
195.78.108.0/23 
91.198.127.0/24 
91.200.164.0/22 
91.201.124.0/22 
91.216.3.0/24 
49236 
1 
62.122.72.0/23 
29004 
1 
195.39.252.0/23 
45020 
1 
194.29.185.0/24 
44093 
1 
193.243.166.0/24 
48949 
1 
95.215.140.0/22 
49720 
1 
194.242.2.0/23 
50818 
1 
194.126.251.0/24 
21 
Figure 18. Malicious ASN subgraph after it evolved 6 weeks later. 
In Figure 18, we show the same subgraph 6 weeks later, on February 21st. Notice the change in subgraph topology: 
more leaves started hosting the same suspicious payloads (via new resolving domains or directly on the IPs). 
Additionally, AS31500 detached itself from the leaves by ceasing to forward their prefix announcements. 
We observed that a large pool of contiguous IPs in /23 or /24 prefixes of these ASNs were hosting the same 
aforementioned type of payload. In most cases, the payload URLs were live on the entire range of IPs before any 
domains were hosted on them. Furthermore, the IPs were set up with the same server infrastructure. For instance, 
we took a random sample of 160 live IPs in this subgraph. 
In this sample, 50 IPs had a similar nmap fingerprint: 
22/tcp   open  ssh        OpenSSH 6.2_hpn13v11 (FreeBSD 20130515; protocol 2.0) 
8080/tcp open  http-proxy 3Proxy http proxy 
Service Info: OS: FreeBSD 
and 108 IPs shared the following fingerprint: 
22/tcp open  ssh     OpenSSH 5.3 (protocol 1.99) 
80/tcp open  http? 
In total, this subgraph featured 3100+ malware domains on 1020+ malware hosting IPs, and it is clear this IP 
infrastructure across multiple ASNs was set up in bulk and in advance to deliver the same rogue campaign [17]. 
USE CASE 2: Detecting sibling Autonomous systems by looking at BGP outages 
In the previous section we described sibling autonomous systems are one ore more Autonomous systems that are 
under control by the same organization and possibly share the same infrastructure.  One way to find these sibling 
Autonomous systems is to look at the upstream relations as typically all siblings share the same upstream 
provider(s).  The problem with this approach is that it will not always work as expected. For example some of the 
larger service providers such as Level3, NTT, GTT, etc., have many customers located throughout the world so by 
looking only at the common upstream providers won’t provide us with enough granular information to correctly 
determine siblings. 
Since the sibling networks we are interested in are those that are under the control of one entity and often colocate in 
the same facilities and could even share hardware, we could at least search for risk sharing properties. The next 
section describes a new novel approach of detecting sibling ASNs with a high degree of certainty. 
22 
Using BGP outages to detect sibling Autonomous systems. 
BGP, the routing protocol used on the Internet, uses primarily two types of message to advertise network reachability 
information: update messages to announce a new path for one or more prefixes, and withdrawal messages to inform 
BGP speakers that a certain prefix can no longer be reached. 
When looking for BGP withdrawal messages, and the frequency of these withdrawals for a certain prefix, we can 
detect global outages for the prefix. For example, when a large number of BGP speakers see a BGP withdrawal 
message for 208.67.222.0/24 we can assume that the prefix is no longer reachable, which means there would be an 
outage and the hosts in this network would be unreachable.  The next step is to look for new BGP update messages 
that provide a new path for 208.67.222.0/24, indicating the prefix is reachable again. With this data, we know exactly 
how long a prefix was unreachable. 
For this research project, our hypothesis was that sibling autonomous systems are very closely related and often 
share the same servers, hardware, collocation facilities and Internet service providers.  To test this hypothesis we 
look at the outage pattern for Autonomous System, and find Autonomous Systems that have the exact same outage 
pattern, i.e. the exact same outage start and stop time for one or more of prefixes in that AS. 
To test this hypothesis we partnered with BGPmon.net, a BGP monitoring service. Using their BGP outage detection 
system and the historical outage data collected over the last few years, we compared outages for different 
Autonomous systems and tested our hypothesis. 
This approach is unique as it provides more granular insight into the relationships between Autonomous systems as 
compared to looking at just peering relationships. This approach results in a set of Autonomous systems that share, 
with a high degree of certainty, shared risk–which means they are likely located in close proximity of each other.  The 
same could in theory be achieved by active ping or traceroute measurements, however in practice it’s impossible to 
scale this to every possible network (500,000 prefixes) with the same amount of time granularity. So by leveraging 
the routing control protocol for the Internet, we can scale this much more effectively and operate in stealth mode for 
both IPv4 and Ipv6. 
Illustrative Example 
Using the method described above we start searching for prefixes and their corresponding autonomous systems with 
similar outages. We looked at outages where the start and end time of the outage was the same as the outage for AS 
we provided as input. As a second heuristic, we only looked at Autonomous systems that had 3 or more similar 
outages. 
Just as the example in the previous sections, we will focus on the potential siblings for the following Autonomous 
systems: 57604, 8287, 50896, 49236, 29004, 45020, 44093, 48949, 49720, and 50818. We looked at the outage 
data between June 1st, 2013 and June 1st, 2014. 
In this example we will focus on AS57604 (PE Ivanova Yuliya Geraldovna), which as can be seen in Figure 18, 
receives transit exclusively from 48361 and has a number of sibling Autonomous Systems. We’ll look at one of the 
siblings, AS29004 and compare the outages detected for both siblings as well as the upstream provider AS48361. 
The table below compares a subset of the outages for the three networks between June 1st, 2013 and October 1st, 
2013. The outage table shows there are eighteen unique events where AS57604 became unreachable for at least 60 
seconds. Its sibling AS29004 has the exact same outage pattern. The upstream network for both of these networks, 
AS48361, had only one outage on August 31st - this outage also affected both of the downstream networks. 
23 
Table 9. List of outages. 
ISP 48361 
AS57604 91.233.89.0/24 
AS29004 195.39.252.0/23 
no outage 
down for 35 minutes 2013-07-12 
18:53 - 2013-07-12 19:28 
down for 36 minutes 2013-07-12 18:53 
- 2013-07-12 19:29 
no outage 
down for 497 minutes 2013-07-12 
21:33 - 2013-07-13 05:50 
down for 497 minutes 2013-07-12 
21:33 - 2013-07-13 05:50 
no outage 
down for 479 minutes 2013-07-22 
21:57 - 2013-07-23 05:56 
down for 479 minutes 2013-07-22 
21:57 - 2013-07-23 05:56 
no outage 
down for 33 minutes 2013-07-23 
18:51 - 2013-07-23 19:24 
down for 33 minutes 2013-07-23 18:51 
- 2013-07-23 19:24 
no outage 
down for 63 minutes 2013-07-29 
04:54 - 2013-07-29 05:57 
down for 63 minutes 2013-07-29 04:54 
- 2013-07-29 05:57 
no outage 
down for 155 minutes 2013-07-31 
22:37 - 2013-08-01 01:12 
down for 155 minutes 2013-07-31 
22:37 - 2013-08-01 01:12 
no outage 
down for 6 minutes 2013-08-01 03:00 
- 2013-08-01 03:06 
down for 6 minutes 2013-08-01 03:00 - 
2013-08-01 03:06 
no outage 
down for 7 minutes 2013-08-05 18:51 
- 2013-08-05 18:58 
own for 7 minutes 2013-08-05 18:51 - 
2013-08-05 18:58 
no outage 
down for 8 minutes 2013-08-09 21:01 
- 2013-08-09 21:09 
down for 8 minutes 2013-08-09 21:01 - 
2013-08-09 21:09 
no outage 
down for 13 minutes 2013-08-12 
08:05 - 2013-08-12 08:18 
down for 13 minutes 2013-08-12 08:05 
- 2013-08-12 08:18 
no outage 
down for 237 minutes 2013-08-15 
10:15 - 2013-08-15 14:12 
down for 237 minutes 2013-08-15 
10:15 - 2013-08-15 14:12 
no outage 
down for 520 minutes 2013-08-19 
21:26 - 2013-08-20 06:06 
down for 520 minutes 2013-08-19 
21:26 - 2013-08-20 06:06 
down for 11 minutes 2013-08-
31 18:39 - 2013-08-31 18:50 
down for 11 minutes 2013-08-31 
18:39 - 2013-08-31 18:50 
down for 11 minutes 2013-08-31 18:39 
- 2013-08-31 18:50 
no outage 
down for 11 minutes 2013-09-12 
04:33 - 2013-09-12 04:44 
down for 11 minutes 2013-09-12 04:33 
- 2013-09-12 04:44 
no outage 
down for 12 minutes 2013-09-12 
10:33 - 2013-09-12 10:45 
down for 12 minutes 2013-09-12 10:33 
- 2013-09-12 10:45 
no outage 
down for 86 minutes 2013-09-24 
08:02 - 2013-09-24 09:28 
down for 86 minutes 2013-09-24 08:02 
- 2013-09-24 09:28 