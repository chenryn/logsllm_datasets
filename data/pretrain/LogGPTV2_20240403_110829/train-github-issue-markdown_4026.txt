# Checklist
  * I have checked the issues list  
for similar or identical bug reports.
  * I have checked the pull requests list  
for existing proposed fixes.
  * I have checked the commit log  
to find out if the bug was already fixed in the master branch.
  * I have included all related issues and possible duplicate issues in this issue  
(If there are none, check this box anyway).
## Related Issues and Possible Duplicates
#### Related Issues
  * Potentially related to #2616 although quite dated
#### Possible Duplicates
  * None
# Description
The documentation is unclear on the following points:
  1. What happens when the number of pool connections goes above the limit specified by broker_pool_limit and redis_max_connections
  2. Which setting prevails?
  3. Is there a way to choose the type of Redis pool?
# Suggestions
  1. By default Redis creates a `redis.connection.ConnectionPool` which raises a `redis.exceptions.ConnectionError` when celery attempts to execute a new task and all of the connections in the pool are exhausted.  
In contrast, the `redis.connection.BlockingConnectionPool` does not raise an
error and waits until a connection becomes available in the pool.  
The docs should warn that `redis_max_connections` will raise a redis exception
in case the connections exceed the maximum.
  2. Unsure and untested, so not clear what to suggest here.
  3. The docs should probably mentions under `redis_max_connections` that choosing the type of redis pool is unsupported.