 **Glide Version** : 4.6.1  
**Integration libraries** : None  
**Device/Android Version** : Robolectric environment  
**Issue summary** : When attempting to load an https image which returns a 404
error, the request is performed twice.  
**Issue details / Repro steps / Use case background** :  
I have a test case which requests an image url, and the server returns a 404
not found. I use Wiremock for the server.
The glide code in the test:
            String url = "https://127.0.0.1:31626/static/country/FR/image.jpg";
            GlideApp.with(RuntimeEnvironment.application)
                    .asBitmap()
                    .load(url)
                    .into(new SimpleTarget(100, 100) {
                        @Override
                        public void onLoadFailed(@Nullable Drawable errorDrawable) {
                            super.onLoadFailed(errorDrawable);
                            System.out.println("error");
                        }
                        @Override
                        public void onResourceReady(@NonNull Bitmap resource, @Nullable Transition transition) {
                            System.out.println("ready");
                        }
                    });
I noticed from Wiremock logs that the request for the image is actually being
requested twice.
When debugging, I noticed:
A `MultiModelLoader` is being used. Its `modelLoaders` field has six loaders,
two of which are a `HttpUriLoader` and a `UrlUriLoader`. In `buildLoadData()`,
both of these match the `handles(model)` test, so their corresponding fetchers
are added to the `fetchers` field. In this case both fetchers are of type
`HttpUrlFetcher`.
I didn't follow the debugger further than this to understand more, but it
looks like the first fetcher fails to load the image (the 404), and so the
second one must be attempted (which will also fail with a 404). I'm not sure
this is efficient. Is this expected?