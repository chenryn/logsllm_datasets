::: itemizedlist
-   将 Linux 的 syscall 表更新为 `v5.14-rc7`{.literal} 版本。
-   在 Python 绑定中添加 `get_notify_fd（）`{.literal}
    函数来获取通知文件描述符。
-   将所有架构的多路系统调用处理整合到一个位置。
-   为 PowerPC(PPC)和 MIPS 架构添加了多路系统调用支持。
-   更改内核中的 `SECCOMP_IOCTL_NOTIF_ID_VALID`{.literal} 操作的含义。
-   更改 `libseccomp`{.literal}
    文件描述符通知逻辑，以支持内核先前和新使用
    `SECCOMP_IOCTL_NOTIF_ID_VALID`{.literal}。
-   修复了一个错误，`seccomp_load（）`{.literal} 只能调用一次。
-   如果将通知 `fd`{.literal} 处理更改为仅在过滤器具有
    `_NOTIFY`{.literal} 操作时请求通知 `fd`{.literal}。
-   向 `seccomp_add_rule(3)`{.literal} manpage 中添加了
    `SCMP_ACT_NOTIFY`{.literal} 的文档。
-   阐明维护器的 GPG 密钥。
:::
([BZ#2019887](https://bugzilla.redhat.com/show_bug.cgi?id=2019887){.link})
[]{#New-features.html#BZ-1956760}
::: title
**Clevis 现在支持 `SHA-256`{.literal}**
:::
在这个版本中，Clevis 框架支持 `SHA-256`{.literal} 算法作为 JSON Web
密钥(JWK)指纹的默认哈希值，如 `RFC 7638`{.literal} 的建议。因为旧的
thumbprints(SHA-1)仍被支持，所以您仍可以解密之前加密的数据。
(BZ#1956760)
:::
::: section
::: titlepage
# []{#New-features.html#enhancement_networking}网络 {.title}
:::
[]{#New-features.html#BZ-1948340}
::: title
**`diag`{.literal} 模块现在包括在内核中**
:::
现在，内核镜像中会包括 `diag`{.literal} 模块。在这个版本中，当使用
`ss`{.literal} 命令时，不再需要动态加载 `diag`{.literal}
模块。无论内核模块中的客户策略是什么，都可更好地调试网络问题。内核中包含的模块：
``` screen
CONFIG_INET_DIAG
CONFIG_INET_RAW_DIAG
CONFIG_INET_TCP_DIAG
CONFIG_INET_UDP_DIAG
CONFIG_INET_MPTCP_DIAG
CONFIG_NETLINK_DIAG
CONFIG_PACKET_DIAG
CONFIG_UNIX_DIAG
```
(BZ#1948340)
[]{#New-features.html#BZ-2068532}
::: title
**新的内核和 IPv4 相关的网络 `sysctl`{.literal} 内核参数**
:::
与之前的 RHEL 版本相比，RHEL 9.0 内核提供以下新的内核和 IPv4 网络
`sysctl`{.literal} 参数：
::: itemizedlist
-   `net.core.devconf_inherit_init_net`{.literal}
-   `net.core.gro_normal_batch`{.literal}
-   `net.core.high_order_alloc_disable`{.literal}
-   `net.core.netdev_unregister_timeout_secs`{.literal}
-   `net.ipv4.fib_multipath_hash_fields`{.literal}
-   `net.ipv4.fib_notify_on_flag_change`{.literal}
-   `net.ipv4.fib_sync_mem`{.literal}
-   `net.ipv4.icmp_echo_enable_probe`{.literal}
-   `net.ipv4.ip_autobind_reuse`{.literal}
-   `net.ipv4.nexthop_compat_mode`{.literal}
-   `net.ipv4.raw_l3mdev_accept`{.literal}
-   `net.ipv4.tcp_comp_sack_slack_ns`{.literal}
-   `net.ipv4.tcp_migrate_req`{.literal}
-   `net.ipv4.tcp_mtu_probe_floor`{.literal}
-   `net.ipv4.tcp_no_ssthresh_metrics_save`{.literal}
-   `net.ipv4.tcp_reflect_tos`{.literal}
:::
有关这些参数的详情，请安装 `kernel-doc`{.literal} 软件包并查看以下文件：
::: itemizedlist
-   `/usr/share/doc/kernel-doc-/Documentation/admin-guide/sysctl/net.rst`{.literal}
-   `/usr/share/doc/kernel-doc-/Documentation/networking/ip-sysctl.rst`{.literal}
:::
(BZ#2068532)
[]{#New-features.html#BZ-2029211}
::: title
**更改了在跨区传输数据包时 `firewalld`{.literal} 的行为**
:::
在基于区域的防火墙中，数据包只输入一个区。隐式数据包传输是概念违规，并允许意外流量或服务。在
Red Hat Enterprise Linux 9 中，`firewalld`{.literal}
服务不再允许两个不同区间的隐式数据包传输。
有关此更改的更多信息，请参阅 [Changed behavior in `firewalld`{.literal}
when transmitting packets between
zones](https://access.redhat.com/articles/6570501){.link} 知识库文档。
([BZ#2029211](https://bugzilla.redhat.com/show_bug.cgi?id=2029211){.link})
[]{#New-features.html#BZ-1969941}
::: title
**使 Nmstate 更包含**
:::
红帽承诺使用适当的语言。相关详情请参考
[让开源更具包容性](#making-open-source-more-inclusive.html "让开源更具包容性"){.xref}。因此，`nmstate`{.literal}
API 中的术语 `slave`{.literal} 已被术语 `port`{.literal} 取代。
([BZ#1969941](https://bugzilla.redhat.com/show_bug.cgi?id=1969941){.link})
[]{#New-features.html#BZ-1980387}
::: title
**NetworkManager 支持 IBM Z 上的 `rd.znet_ifname`{.literal}
内核选项中设置的接口名称**
:::
在这个版本中，在 IBM Z 平台上，NetworkManager 现在会在从网络安装或引导
Red Hat Enterprise Linux 时解释 `rd.znet`{.literal} 和
`rd.znet_ifname`{.literal}
内核命令行选项。因此，可以指定由子频道标识的网络接口名称，而不是默认接口。
([BZ#1980387](https://bugzilla.redhat.com/show_bug.cgi?id=1980387){.link})
[]{#New-features.html#BZ-2019830}
::: title
**`hostapd`{.literal} 软件包已添加到 RHEL 9.0**
:::
在这个版本中，RHEL 提供 `hostapd`{.literal} 软件包。但是，红帽支持
`hostapd`{.literal} 只在以太网网络中将 RHEL 主机设置为 802.1X
验证器。不支持 Wi-Fi 网络中的 Wi-Fi 接入点或验证器等其他场景。
有关使用 FreeRADIUS 后端将 RHEL 配置为 802.1X authenticator
的详情，[请参阅为使用 FreeRADIUS 后端的主机apd 设置 802.1x
网络身份验证服务](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_and_managing_networking/assembly_setting-up-an-802-1x-network-authentication-service-for-lan-clients-using-hostapd-with-freeradius-backend_configuring-and-managing-networking){.link}。
(BZ#2019830)
[]{#New-features.html#BZ-1996716}
::: title
**版本 1.18.2 中提供的 ModemManager**
:::
RHEL 9.0 在上游版本 1.18.2 中提供 `ModemManager`{.literal}
软件包。与之前的版本相比，这个版本包括程序错误修正和增强，最重要的是：
::: itemizedlist
-   改进了对具有 5G 功能的设备的功能和模式处理
-   其他设备支持
:::
如需显著变化的完整列表，请参阅上游发行注记：
::: itemizedlist
-   [https://github.com/freedesktop/ModemManager/blob/7a85bc243bc1be9f720ae1bda92e9eba7b277213/NEWS#L185](https://github.com/freedesktop/ModemManager/blob/7a85bc243bc1be9f720ae1bda92e9eba7b277213/NEWS#L185){.link}
-   [https://github.com/freedesktop/ModemManager/blob/7a85bc243bc1be9f720ae1bda92e9eba7b277213/NEWS#L417](https://github.com/freedesktop/ModemManager/blob/7a85bc243bc1be9f720ae1bda92e9eba7b277213/NEWS#L417){.link}
:::
([BZ#1996716](https://bugzilla.redhat.com/show_bug.cgi?id=1996716){.link})
[]{#New-features.html#BZ-1949127}
::: title
**NetworkManager 允许更改绑定端口的 `queue_id`{.literal}**
:::
绑定中的 NetworkManager 端口现在支持 `queue_id`{.literal} 参数。假设
`eth1`{.literal} 是绑定接口的端口，您可以使用以下内容为绑定端口启用
`queue_id`{.literal} ：
``` literallayout
# nmcli connection modify eth1 bond-port.queue-id 1
# nmcli connection up eth1
```
任何需要使用这个选项的网络接口都应配置为多个调用，直到为所有接口设置正确的优先级。如需更多信息，请参阅由
`kernel-doc`{.literal} 软件包提供的
`/usr/share/docs/kernel-doc-_/Documentation/networking/bonding.rst`{.literal}
文件。
([BZ#1949127](https://bugzilla.redhat.com/show_bug.cgi?id=1949127){.link})
[]{#New-features.html#BZ-2060013}
::: title
**支持使用最新 NetworkManager 配置 `黑色`{.literal}、`禁止`{.literal} 和
`无法访问`{.literal} 路由类型的配置**
:::
内核支持除了常见 `单播`{.literal}、`广播`{.literal} `和本地`{.literal}
路由类型以外的多种路由类型。另外，用户现在可以配置 NetworkManager
连接配置集中的 `黑色`{.literal}、`禁止`{.literal} `且不可访问`{.literal}
的静态路由类型。当激活配置集时，NetworkManager 会添加一个配置集。
(BZ#2060013)
:::
::: section
::: titlepage
# []{#New-features.html#enhancement_kernel}内核 {.title}
:::
[]{#New-features.html#BZ-2077836}
::: title
**RHEL 9.0 中的内核版本**
:::
Red Hat Enterprise Linux 9.0 带有内核版本 5.14.0-70。
另请参阅
[外部内核参数的重要变化，](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/9.0_release_notes/kernel_parameters_changes){.link}
以及
[设备驱动程序](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/9.0_release_notes/device_drivers){.link}。
([BZ#2077836](https://bugzilla.redhat.com/show_bug.cgi?id=2077836){.link})
[]{#New-features.html#BZ-2059183}
::: title
**红帽只为次版本保护内核符号**
:::
红帽保证，内核模块将继续在延长更新支持(EUS)版本中的所有更新中载入，只有在您使用受保护的内核符号编译内核模块时才进行。RHEL
9 的次版本之间没有内核应用程序二进制接口(ABI)保证。
([BZ#2059183](https://bugzilla.redhat.com/show_bug.cgi?id=2059183){.link})
[]{#New-features.html#BZ-2002499}
::: title
**RHEL 9 Beta 内核使用受信任的 SecureBoot 证书签名**
:::
在以前的版本中，RHEL Beta 版本需要用户使用 Machine Owner
Key(MOK)工具注册独立的 Beta 公钥。从 RHEL 9 Beta 版开始，内核与受信任的
SecureBoot 证书签名，因此用户不再需要注册一个单独的 Beta
公钥以便在启用了 UEFI 安全引导的系统上使用 beta 版本。
([BZ#2002499](https://bugzilla.redhat.com/show_bug.cgi?id=2002499){.link})
[]{#New-features.html#BZ-1953515}
::: title
**RHEL 9 中默认启用 `cgroup-v2`{.literal}**
:::
控制组版本
2(`cgroup-v2)`{.literal}功能实施单一层次结构模型，以简化控制组的管理。此外，它确保一个进程一次只能是一个控制组的成员。与
`systemd`{.literal} 的深度集成提高了在 RHEL
系统上配置资源控制时的最终用户体验。
新功能的开发主要针对 `cgroup-v2`{.literal}，其具有 `cgroup-v1`{.literal}
缺少的一些功能。类似地，`cgroup-v1`{.literal} 还包含
`cgroup-v2`{.literal}
中缺少的一些传统功能。此外，控制接口也不同。因此，直接依赖
`cgroup-v1`{.literal} 的第三方软件在 `cgroup-v2`{.literal}
环境中可能无法正常运行。
要使用 `cgroup-v1`{.literal}，您需要在内核命令行中添加以下参数：
``` screen
systemd.unified_cgroup_hierarchy=0
systemd.legacy_systemd_cgroup_controller
```
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
内核中完全启用了 `cgroup-v1`{.literal} 和
`cgroup-v2`{.literal}。从内核的角度来看，没有默认的控制组版本，并且由
`systemd`{.literal} 决定在启动时挂载。
:::
([BZ#1953515](https://bugzilla.redhat.com/show_bug.cgi?id=1953515){.link})
[]{#New-features.html#BZ-1960556}
::: title
**可能会影响第三方内核模块的内核更改**
:::
Linux 分发自 5.9 之前内核版本，支持导出 GPL 功能，作为非 GPL
功能。因此，用户可以通过 `shim`{.literal} 机制将专有功能链接到 GPL
内核功能。在这个版本中，RHEL 内核融合了上游更改，这些更改提高了 RHEL
通过重新调整 `shim`{.literal} 来强制实施 GPL 的能力。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}